In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libext2fs.a_gcc_-O0:

bb_compat.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <badblocks_list_create>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	w1, [sp, #20]
  10:	ldr	w1, [sp, #20]
  14:	ldr	x0, [sp, #24]
  18:	bl	0 <ext2fs_badblocks_list_create>
  1c:	ldp	x29, x30, [sp], #32
  20:	ret

0000000000000024 <badblocks_list_free>:
  24:	stp	x29, x30, [sp, #-32]!
  28:	mov	x29, sp
  2c:	str	x0, [sp, #24]
  30:	ldr	x0, [sp, #24]
  34:	bl	0 <ext2fs_badblocks_list_free>
  38:	nop
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <badblocks_list_add>:
  44:	stp	x29, x30, [sp, #-32]!
  48:	mov	x29, sp
  4c:	str	x0, [sp, #24]
  50:	str	w1, [sp, #20]
  54:	ldr	w1, [sp, #20]
  58:	ldr	x0, [sp, #24]
  5c:	bl	0 <ext2fs_badblocks_list_add>
  60:	ldp	x29, x30, [sp], #32
  64:	ret

0000000000000068 <badblocks_list_test>:
  68:	stp	x29, x30, [sp, #-32]!
  6c:	mov	x29, sp
  70:	str	x0, [sp, #24]
  74:	str	w1, [sp, #20]
  78:	ldr	w1, [sp, #20]
  7c:	ldr	x0, [sp, #24]
  80:	bl	0 <ext2fs_badblocks_list_test>
  84:	ldp	x29, x30, [sp], #32
  88:	ret

000000000000008c <badblocks_list_iterate_begin>:
  8c:	stp	x29, x30, [sp, #-32]!
  90:	mov	x29, sp
  94:	str	x0, [sp, #24]
  98:	str	x1, [sp, #16]
  9c:	ldr	x1, [sp, #16]
  a0:	ldr	x0, [sp, #24]
  a4:	bl	0 <ext2fs_badblocks_list_iterate_begin>
  a8:	ldp	x29, x30, [sp], #32
  ac:	ret

00000000000000b0 <badblocks_list_iterate>:
  b0:	stp	x29, x30, [sp, #-32]!
  b4:	mov	x29, sp
  b8:	str	x0, [sp, #24]
  bc:	str	x1, [sp, #16]
  c0:	ldr	x1, [sp, #16]
  c4:	ldr	x0, [sp, #24]
  c8:	bl	0 <ext2fs_badblocks_list_iterate>
  cc:	ldp	x29, x30, [sp], #32
  d0:	ret

00000000000000d4 <badblocks_list_iterate_end>:
  d4:	stp	x29, x30, [sp, #-32]!
  d8:	mov	x29, sp
  dc:	str	x0, [sp, #24]
  e0:	ldr	x0, [sp, #24]
  e4:	bl	0 <ext2fs_badblocks_list_iterate_end>
  e8:	nop
  ec:	ldp	x29, x30, [sp], #32
  f0:	ret

inode_io.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_inode_io_intern2>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	x2, [sp, #24]
  14:	str	x3, [sp, #16]
  18:	add	x0, sp, #0x30
  1c:	mov	x1, x0
  20:	mov	x0, #0xc8                  	// #200
  24:	bl	0 <ext2fs_get_mem>
  28:	str	x0, [sp, #56]
  2c:	ldr	x0, [sp, #56]
  30:	cmp	x0, #0x0
  34:	b.eq	40 <ext2fs_inode_io_intern2+0x40>  // b.none
  38:	ldr	x0, [sp, #56]
  3c:	b	120 <ext2fs_inode_io_intern2+0x120>
  40:	ldr	x0, [sp, #48]
  44:	mov	w1, #0xb711                	// #46865
  48:	movk	w1, #0x7f2b, lsl #16
  4c:	str	w1, [x0]
  50:	ldr	x0, [sp, #48]
  54:	add	x4, x0, #0x4
  58:	adrp	x0, 0 <ext2fs_inode_io_intern2>
  5c:	add	x0, x0, #0x0
  60:	ldr	w0, [x0]
  64:	add	w2, w0, #0x1
  68:	adrp	x1, 0 <ext2fs_inode_io_intern2>
  6c:	add	x1, x1, #0x0
  70:	str	w2, [x1]
  74:	mov	w3, w0
  78:	ldr	w2, [sp, #36]
  7c:	adrp	x0, 0 <ext2fs_inode_io_intern2>
  80:	add	x1, x0, #0x0
  84:	mov	x0, x4
  88:	bl	0 <sprintf>
  8c:	ldr	x0, [sp, #48]
  90:	str	xzr, [x0, #40]
  94:	ldr	x0, [sp, #48]
  98:	ldr	x1, [sp, #40]
  9c:	str	x1, [x0, #48]
  a0:	ldr	x0, [sp, #48]
  a4:	ldr	w1, [sp, #36]
  a8:	str	w1, [x0, #56]
  ac:	ldr	x0, [sp, #48]
  b0:	str	wzr, [x0, #188]
  b4:	ldr	x0, [sp, #24]
  b8:	cmp	x0, #0x0
  bc:	b.eq	e8 <ext2fs_inode_io_intern2+0xe8>  // b.none
  c0:	ldr	x0, [sp, #48]
  c4:	add	x0, x0, #0x3c
  c8:	mov	x2, #0x80                  	// #128
  cc:	ldr	x1, [sp, #24]
  d0:	bl	0 <memcpy>
  d4:	ldr	x0, [sp, #48]
  d8:	ldr	w1, [x0, #188]
  dc:	ldr	x0, [sp, #48]
  e0:	orr	w1, w1, #0x8000
  e4:	str	w1, [x0, #188]
  e8:	ldr	x0, [sp, #48]
  ec:	adrp	x1, 0 <ext2fs_inode_io_intern2>
  f0:	add	x1, x1, #0x0
  f4:	ldr	x1, [x1]
  f8:	str	x1, [x0, #192]
  fc:	ldr	x1, [sp, #48]
 100:	adrp	x0, 0 <ext2fs_inode_io_intern2>
 104:	add	x0, x0, #0x0
 108:	str	x1, [x0]
 10c:	ldr	x0, [sp, #48]
 110:	add	x1, x0, #0x4
 114:	ldr	x0, [sp, #16]
 118:	str	x1, [x0]
 11c:	mov	x0, #0x0                   	// #0
 120:	ldp	x29, x30, [sp], #64
 124:	ret

0000000000000128 <ext2fs_inode_io_intern>:
 128:	stp	x29, x30, [sp, #-48]!
 12c:	mov	x29, sp
 130:	str	x0, [sp, #40]
 134:	str	w1, [sp, #36]
 138:	str	x2, [sp, #24]
 13c:	ldr	x3, [sp, #24]
 140:	mov	x2, #0x0                   	// #0
 144:	ldr	w1, [sp, #36]
 148:	ldr	x0, [sp, #40]
 14c:	bl	0 <ext2fs_inode_io_intern2>
 150:	ldp	x29, x30, [sp], #48
 154:	ret

0000000000000158 <inode_open>:
 158:	stp	x29, x30, [sp, #-96]!
 15c:	mov	x29, sp
 160:	str	x0, [sp, #40]
 164:	str	w1, [sp, #36]
 168:	str	x2, [sp, #24]
 16c:	str	xzr, [sp, #64]
 170:	str	xzr, [sp, #56]
 174:	ldr	x0, [sp, #40]
 178:	cmp	x0, #0x0
 17c:	b.ne	18c <inode_open+0x34>  // b.any
 180:	mov	x0, #0xb73a                	// #46906
 184:	movk	x0, #0x7f2b, lsl #16
 188:	b	3e4 <inode_open+0x28c>
 18c:	adrp	x0, 0 <ext2fs_inode_io_intern2>
 190:	add	x0, x0, #0x0
 194:	ldr	x0, [x0]
 198:	str	x0, [sp, #56]
 19c:	str	xzr, [sp, #88]
 1a0:	b	1d4 <inode_open+0x7c>
 1a4:	ldr	x0, [sp, #56]
 1a8:	add	x0, x0, #0x4
 1ac:	mov	x1, x0
 1b0:	ldr	x0, [sp, #40]
 1b4:	bl	0 <strcmp>
 1b8:	cmp	w0, #0x0
 1bc:	b.eq	1e4 <inode_open+0x8c>  // b.none
 1c0:	ldr	x0, [sp, #56]
 1c4:	str	x0, [sp, #88]
 1c8:	ldr	x0, [sp, #56]
 1cc:	ldr	x0, [x0, #192]
 1d0:	str	x0, [sp, #56]
 1d4:	ldr	x0, [sp, #56]
 1d8:	cmp	x0, #0x0
 1dc:	b.ne	1a4 <inode_open+0x4c>  // b.any
 1e0:	b	1e8 <inode_open+0x90>
 1e4:	nop
 1e8:	ldr	x0, [sp, #56]
 1ec:	cmp	x0, #0x0
 1f0:	b.ne	1fc <inode_open+0xa4>  // b.any
 1f4:	mov	x0, #0x2                   	// #2
 1f8:	b	3e4 <inode_open+0x28c>
 1fc:	ldr	x0, [sp, #88]
 200:	cmp	x0, #0x0
 204:	b.eq	21c <inode_open+0xc4>  // b.none
 208:	ldr	x0, [sp, #56]
 20c:	ldr	x1, [x0, #192]
 210:	ldr	x0, [sp, #88]
 214:	str	x1, [x0, #192]
 218:	b	230 <inode_open+0xd8>
 21c:	ldr	x0, [sp, #56]
 220:	ldr	x1, [x0, #192]
 224:	adrp	x0, 0 <ext2fs_inode_io_intern2>
 228:	add	x0, x0, #0x0
 22c:	str	x1, [x0]
 230:	add	x0, sp, #0x40
 234:	mov	x1, x0
 238:	mov	x0, #0xc0                  	// #192
 23c:	bl	0 <ext2fs_get_mem>
 240:	str	x0, [sp, #80]
 244:	ldr	x0, [sp, #80]
 248:	cmp	x0, #0x0
 24c:	b.ne	37c <inode_open+0x224>  // b.any
 250:	ldr	x0, [sp, #64]
 254:	mov	x2, #0xc0                  	// #192
 258:	mov	w1, #0x0                   	// #0
 25c:	bl	0 <memset>
 260:	ldr	x0, [sp, #64]
 264:	mov	x1, #0xb705                	// #46853
 268:	movk	x1, #0x7f2b, lsl #16
 26c:	str	x1, [x0]
 270:	ldr	x0, [sp, #64]
 274:	adrp	x1, f0 <ext2fs_inode_io_intern2+0xf0>
 278:	add	x1, x1, #0x0
 27c:	ldr	x1, [x1]
 280:	str	x1, [x0, #8]
 284:	ldr	x0, [sp, #40]
 288:	bl	0 <strlen>
 28c:	add	x2, x0, #0x1
 290:	ldr	x0, [sp, #64]
 294:	add	x0, x0, #0x10
 298:	mov	x1, x0
 29c:	mov	x0, x2
 2a0:	bl	0 <ext2fs_get_mem>
 2a4:	str	x0, [sp, #80]
 2a8:	ldr	x0, [sp, #80]
 2ac:	cmp	x0, #0x0
 2b0:	b.ne	384 <inode_open+0x22c>  // b.any
 2b4:	ldr	x0, [sp, #64]
 2b8:	ldr	x0, [x0, #16]
 2bc:	ldr	x1, [sp, #40]
 2c0:	bl	0 <strcpy>
 2c4:	ldr	x0, [sp, #64]
 2c8:	ldr	x1, [sp, #56]
 2cc:	str	x1, [x0, #168]
 2d0:	ldr	x0, [sp, #64]
 2d4:	mov	w1, #0x400                 	// #1024
 2d8:	str	w1, [x0, #24]
 2dc:	ldr	x0, [sp, #64]
 2e0:	str	xzr, [x0, #32]
 2e4:	ldr	x0, [sp, #64]
 2e8:	str	xzr, [x0, #40]
 2ec:	ldr	x0, [sp, #64]
 2f0:	mov	w1, #0x1                   	// #1
 2f4:	str	w1, [x0, #48]
 2f8:	ldr	w0, [sp, #36]
 2fc:	and	w0, w0, #0x1
 300:	str	w0, [sp, #76]
 304:	ldr	x0, [sp, #56]
 308:	ldr	x5, [x0, #48]
 30c:	ldr	x0, [sp, #56]
 310:	ldr	w6, [x0, #56]
 314:	ldr	x0, [sp, #56]
 318:	ldr	w0, [x0, #188]
 31c:	and	w0, w0, #0x8000
 320:	cmp	w0, #0x0
 324:	b.eq	334 <inode_open+0x1dc>  // b.none
 328:	ldr	x0, [sp, #56]
 32c:	add	x0, x0, #0x3c
 330:	b	338 <inode_open+0x1e0>
 334:	mov	x0, #0x0                   	// #0
 338:	ldr	x1, [sp, #56]
 33c:	add	x1, x1, #0x28
 340:	mov	x4, x1
 344:	ldr	w3, [sp, #76]
 348:	mov	x2, x0
 34c:	mov	w1, w6
 350:	mov	x0, x5
 354:	bl	0 <ext2fs_file_open2>
 358:	str	x0, [sp, #80]
 35c:	ldr	x0, [sp, #80]
 360:	cmp	x0, #0x0
 364:	b.ne	38c <inode_open+0x234>  // b.any
 368:	ldr	x1, [sp, #64]
 36c:	ldr	x0, [sp, #24]
 370:	str	x1, [x0]
 374:	mov	x0, #0x0                   	// #0
 378:	b	3e4 <inode_open+0x28c>
 37c:	nop
 380:	b	390 <inode_open+0x238>
 384:	nop
 388:	b	390 <inode_open+0x238>
 38c:	nop
 390:	ldr	x0, [sp, #64]
 394:	cmp	x0, #0x0
 398:	b.eq	3b8 <inode_open+0x260>  // b.none
 39c:	ldr	x0, [sp, #64]
 3a0:	ldr	x0, [x0, #16]
 3a4:	cmp	x0, #0x0
 3a8:	b.eq	3b8 <inode_open+0x260>  // b.none
 3ac:	ldr	x0, [sp, #64]
 3b0:	add	x0, x0, #0x10
 3b4:	bl	0 <ext2fs_free_mem>
 3b8:	ldr	x0, [sp, #56]
 3bc:	cmp	x0, #0x0
 3c0:	b.eq	3cc <inode_open+0x274>  // b.none
 3c4:	add	x0, sp, #0x38
 3c8:	bl	0 <ext2fs_free_mem>
 3cc:	ldr	x0, [sp, #64]
 3d0:	cmp	x0, #0x0
 3d4:	b.eq	3e0 <inode_open+0x288>  // b.none
 3d8:	add	x0, sp, #0x40
 3dc:	bl	0 <ext2fs_free_mem>
 3e0:	ldr	x0, [sp, #80]
 3e4:	ldp	x29, x30, [sp], #96
 3e8:	ret

00000000000003ec <inode_close>:
 3ec:	stp	x29, x30, [sp, #-48]!
 3f0:	mov	x29, sp
 3f4:	str	x0, [sp, #24]
 3f8:	str	xzr, [sp, #40]
 3fc:	ldr	x0, [sp, #24]
 400:	ldr	x1, [x0]
 404:	mov	x0, #0xb705                	// #46853
 408:	movk	x0, #0x7f2b, lsl #16
 40c:	cmp	x1, x0
 410:	b.eq	420 <inode_close+0x34>  // b.none
 414:	mov	x0, #0xb705                	// #46853
 418:	movk	x0, #0x7f2b, lsl #16
 41c:	b	4b8 <inode_close+0xcc>
 420:	ldr	x0, [sp, #24]
 424:	ldr	x0, [x0, #168]
 428:	str	x0, [sp, #32]
 42c:	ldr	x0, [sp, #32]
 430:	ldr	w1, [x0]
 434:	mov	w0, #0xb711                	// #46865
 438:	movk	w0, #0x7f2b, lsl #16
 43c:	cmp	w1, w0
 440:	b.eq	450 <inode_close+0x64>  // b.none
 444:	mov	x0, #0xb711                	// #46865
 448:	movk	x0, #0x7f2b, lsl #16
 44c:	b	4b8 <inode_close+0xcc>
 450:	ldr	x0, [sp, #24]
 454:	ldr	w1, [x0, #48]
 458:	sub	w1, w1, #0x1
 45c:	str	w1, [x0, #48]
 460:	ldr	w0, [x0, #48]
 464:	cmp	w0, #0x0
 468:	b.le	474 <inode_close+0x88>
 46c:	mov	x0, #0x0                   	// #0
 470:	b	4b8 <inode_close+0xcc>
 474:	ldr	x0, [sp, #32]
 478:	ldr	x0, [x0, #40]
 47c:	bl	0 <ext2fs_file_close>
 480:	str	x0, [sp, #40]
 484:	ldr	x0, [sp, #24]
 488:	add	x0, x0, #0xa8
 48c:	bl	0 <ext2fs_free_mem>
 490:	ldr	x0, [sp, #24]
 494:	ldr	x0, [x0, #16]
 498:	cmp	x0, #0x0
 49c:	b.eq	4ac <inode_close+0xc0>  // b.none
 4a0:	ldr	x0, [sp, #24]
 4a4:	add	x0, x0, #0x10
 4a8:	bl	0 <ext2fs_free_mem>
 4ac:	add	x0, sp, #0x18
 4b0:	bl	0 <ext2fs_free_mem>
 4b4:	ldr	x0, [sp, #40]
 4b8:	ldp	x29, x30, [sp], #48
 4bc:	ret

00000000000004c0 <inode_set_blksize>:
 4c0:	sub	sp, sp, #0x20
 4c4:	str	x0, [sp, #8]
 4c8:	str	w1, [sp, #4]
 4cc:	ldr	x0, [sp, #8]
 4d0:	ldr	x1, [x0]
 4d4:	mov	x0, #0xb705                	// #46853
 4d8:	movk	x0, #0x7f2b, lsl #16
 4dc:	cmp	x1, x0
 4e0:	b.eq	4f0 <inode_set_blksize+0x30>  // b.none
 4e4:	mov	x0, #0xb705                	// #46853
 4e8:	movk	x0, #0x7f2b, lsl #16
 4ec:	b	530 <inode_set_blksize+0x70>
 4f0:	ldr	x0, [sp, #8]
 4f4:	ldr	x0, [x0, #168]
 4f8:	str	x0, [sp, #24]
 4fc:	ldr	x0, [sp, #24]
 500:	ldr	w1, [x0]
 504:	mov	w0, #0xb711                	// #46865
 508:	movk	w0, #0x7f2b, lsl #16
 50c:	cmp	w1, w0
 510:	b.eq	520 <inode_set_blksize+0x60>  // b.none
 514:	mov	x0, #0xb711                	// #46865
 518:	movk	x0, #0x7f2b, lsl #16
 51c:	b	530 <inode_set_blksize+0x70>
 520:	ldr	x0, [sp, #8]
 524:	ldr	w1, [sp, #4]
 528:	str	w1, [x0, #24]
 52c:	mov	x0, #0x0                   	// #0
 530:	add	sp, sp, #0x20
 534:	ret

0000000000000538 <inode_read_blk64>:
 538:	stp	x29, x30, [sp, #-64]!
 53c:	mov	x29, sp
 540:	str	x0, [sp, #40]
 544:	str	x1, [sp, #32]
 548:	str	w2, [sp, #28]
 54c:	str	x3, [sp, #16]
 550:	ldr	x0, [sp, #40]
 554:	ldr	x1, [x0]
 558:	mov	x0, #0xb705                	// #46853
 55c:	movk	x0, #0x7f2b, lsl #16
 560:	cmp	x1, x0
 564:	b.eq	574 <inode_read_blk64+0x3c>  // b.none
 568:	mov	x0, #0xb705                	// #46853
 56c:	movk	x0, #0x7f2b, lsl #16
 570:	b	634 <inode_read_blk64+0xfc>
 574:	ldr	x0, [sp, #40]
 578:	ldr	x0, [x0, #168]
 57c:	str	x0, [sp, #56]
 580:	ldr	x0, [sp, #56]
 584:	ldr	w1, [x0]
 588:	mov	w0, #0xb711                	// #46865
 58c:	movk	w0, #0x7f2b, lsl #16
 590:	cmp	w1, w0
 594:	b.eq	5a4 <inode_read_blk64+0x6c>  // b.none
 598:	mov	x0, #0xb711                	// #46865
 59c:	movk	x0, #0x7f2b, lsl #16
 5a0:	b	634 <inode_read_blk64+0xfc>
 5a4:	ldr	x0, [sp, #56]
 5a8:	ldr	x4, [x0, #40]
 5ac:	ldr	x0, [sp, #40]
 5b0:	ldr	w0, [x0, #24]
 5b4:	sxtw	x1, w0
 5b8:	ldr	x0, [sp, #32]
 5bc:	mul	x0, x1, x0
 5c0:	mov	x3, #0x0                   	// #0
 5c4:	mov	w2, #0x0                   	// #0
 5c8:	mov	x1, x0
 5cc:	mov	x0, x4
 5d0:	bl	0 <ext2fs_file_llseek>
 5d4:	str	x0, [sp, #48]
 5d8:	ldr	x0, [sp, #48]
 5dc:	cmp	x0, #0x0
 5e0:	b.eq	5ec <inode_read_blk64+0xb4>  // b.none
 5e4:	ldr	x0, [sp, #48]
 5e8:	b	634 <inode_read_blk64+0xfc>
 5ec:	ldr	w0, [sp, #28]
 5f0:	cmp	w0, #0x0
 5f4:	b.ge	604 <inode_read_blk64+0xcc>  // b.tcont
 5f8:	ldr	w0, [sp, #28]
 5fc:	neg	w0, w0
 600:	b	614 <inode_read_blk64+0xdc>
 604:	ldr	x0, [sp, #40]
 608:	ldr	w1, [x0, #24]
 60c:	ldr	w0, [sp, #28]
 610:	mul	w0, w1, w0
 614:	str	w0, [sp, #28]
 618:	ldr	x0, [sp, #56]
 61c:	ldr	x0, [x0, #40]
 620:	ldr	w1, [sp, #28]
 624:	mov	x3, #0x0                   	// #0
 628:	mov	w2, w1
 62c:	ldr	x1, [sp, #16]
 630:	bl	0 <ext2fs_file_read>
 634:	ldp	x29, x30, [sp], #64
 638:	ret

000000000000063c <inode_read_blk>:
 63c:	stp	x29, x30, [sp, #-48]!
 640:	mov	x29, sp
 644:	str	x0, [sp, #40]
 648:	str	x1, [sp, #32]
 64c:	str	w2, [sp, #28]
 650:	str	x3, [sp, #16]
 654:	ldr	x3, [sp, #16]
 658:	ldr	w2, [sp, #28]
 65c:	ldr	x1, [sp, #32]
 660:	ldr	x0, [sp, #40]
 664:	bl	538 <inode_read_blk64>
 668:	ldp	x29, x30, [sp], #48
 66c:	ret

0000000000000670 <inode_write_blk64>:
 670:	stp	x29, x30, [sp, #-64]!
 674:	mov	x29, sp
 678:	str	x0, [sp, #40]
 67c:	str	x1, [sp, #32]
 680:	str	w2, [sp, #28]
 684:	str	x3, [sp, #16]
 688:	ldr	x0, [sp, #40]
 68c:	ldr	x1, [x0]
 690:	mov	x0, #0xb705                	// #46853
 694:	movk	x0, #0x7f2b, lsl #16
 698:	cmp	x1, x0
 69c:	b.eq	6ac <inode_write_blk64+0x3c>  // b.none
 6a0:	mov	x0, #0xb705                	// #46853
 6a4:	movk	x0, #0x7f2b, lsl #16
 6a8:	b	76c <inode_write_blk64+0xfc>
 6ac:	ldr	x0, [sp, #40]
 6b0:	ldr	x0, [x0, #168]
 6b4:	str	x0, [sp, #56]
 6b8:	ldr	x0, [sp, #56]
 6bc:	ldr	w1, [x0]
 6c0:	mov	w0, #0xb711                	// #46865
 6c4:	movk	w0, #0x7f2b, lsl #16
 6c8:	cmp	w1, w0
 6cc:	b.eq	6dc <inode_write_blk64+0x6c>  // b.none
 6d0:	mov	x0, #0xb711                	// #46865
 6d4:	movk	x0, #0x7f2b, lsl #16
 6d8:	b	76c <inode_write_blk64+0xfc>
 6dc:	ldr	x0, [sp, #56]
 6e0:	ldr	x4, [x0, #40]
 6e4:	ldr	x0, [sp, #40]
 6e8:	ldr	w0, [x0, #24]
 6ec:	sxtw	x1, w0
 6f0:	ldr	x0, [sp, #32]
 6f4:	mul	x0, x1, x0
 6f8:	mov	x3, #0x0                   	// #0
 6fc:	mov	w2, #0x0                   	// #0
 700:	mov	x1, x0
 704:	mov	x0, x4
 708:	bl	0 <ext2fs_file_llseek>
 70c:	str	x0, [sp, #48]
 710:	ldr	x0, [sp, #48]
 714:	cmp	x0, #0x0
 718:	b.eq	724 <inode_write_blk64+0xb4>  // b.none
 71c:	ldr	x0, [sp, #48]
 720:	b	76c <inode_write_blk64+0xfc>
 724:	ldr	w0, [sp, #28]
 728:	cmp	w0, #0x0
 72c:	b.ge	73c <inode_write_blk64+0xcc>  // b.tcont
 730:	ldr	w0, [sp, #28]
 734:	neg	w0, w0
 738:	b	74c <inode_write_blk64+0xdc>
 73c:	ldr	x0, [sp, #40]
 740:	ldr	w1, [x0, #24]
 744:	ldr	w0, [sp, #28]
 748:	mul	w0, w1, w0
 74c:	str	w0, [sp, #28]
 750:	ldr	x0, [sp, #56]
 754:	ldr	x0, [x0, #40]
 758:	ldr	w1, [sp, #28]
 75c:	mov	x3, #0x0                   	// #0
 760:	mov	w2, w1
 764:	ldr	x1, [sp, #16]
 768:	bl	0 <ext2fs_file_write>
 76c:	ldp	x29, x30, [sp], #64
 770:	ret

0000000000000774 <inode_write_blk>:
 774:	stp	x29, x30, [sp, #-48]!
 778:	mov	x29, sp
 77c:	str	x0, [sp, #40]
 780:	str	x1, [sp, #32]
 784:	str	w2, [sp, #28]
 788:	str	x3, [sp, #16]
 78c:	ldr	x3, [sp, #16]
 790:	ldr	w2, [sp, #28]
 794:	ldr	x1, [sp, #32]
 798:	ldr	x0, [sp, #40]
 79c:	bl	670 <inode_write_blk64>
 7a0:	ldp	x29, x30, [sp], #48
 7a4:	ret

00000000000007a8 <inode_write_byte>:
 7a8:	stp	x29, x30, [sp, #-64]!
 7ac:	mov	x29, sp
 7b0:	str	x0, [sp, #40]
 7b4:	str	x1, [sp, #32]
 7b8:	str	w2, [sp, #28]
 7bc:	str	x3, [sp, #16]
 7c0:	str	xzr, [sp, #56]
 7c4:	ldr	x0, [sp, #40]
 7c8:	ldr	x1, [x0]
 7cc:	mov	x0, #0xb705                	// #46853
 7d0:	movk	x0, #0x7f2b, lsl #16
 7d4:	cmp	x1, x0
 7d8:	b.eq	7e8 <inode_write_byte+0x40>  // b.none
 7dc:	mov	x0, #0xb705                	// #46853
 7e0:	movk	x0, #0x7f2b, lsl #16
 7e4:	b	864 <inode_write_byte+0xbc>
 7e8:	ldr	x0, [sp, #40]
 7ec:	ldr	x0, [x0, #168]
 7f0:	str	x0, [sp, #48]
 7f4:	ldr	x0, [sp, #48]
 7f8:	ldr	w1, [x0]
 7fc:	mov	w0, #0xb711                	// #46865
 800:	movk	w0, #0x7f2b, lsl #16
 804:	cmp	w1, w0
 808:	b.eq	818 <inode_write_byte+0x70>  // b.none
 80c:	mov	x0, #0xb711                	// #46865
 810:	movk	x0, #0x7f2b, lsl #16
 814:	b	864 <inode_write_byte+0xbc>
 818:	ldr	x0, [sp, #48]
 81c:	ldr	x0, [x0, #40]
 820:	ldr	x1, [sp, #32]
 824:	mov	x3, #0x0                   	// #0
 828:	mov	w2, #0x0                   	// #0
 82c:	bl	0 <ext2fs_file_lseek>
 830:	str	x0, [sp, #56]
 834:	ldr	x0, [sp, #56]
 838:	cmp	x0, #0x0
 83c:	b.eq	848 <inode_write_byte+0xa0>  // b.none
 840:	ldr	x0, [sp, #56]
 844:	b	864 <inode_write_byte+0xbc>
 848:	ldr	x0, [sp, #48]
 84c:	ldr	x0, [x0, #40]
 850:	ldr	w1, [sp, #28]
 854:	mov	x3, #0x0                   	// #0
 858:	mov	w2, w1
 85c:	ldr	x1, [sp, #16]
 860:	bl	0 <ext2fs_file_write>
 864:	ldp	x29, x30, [sp], #64
 868:	ret

000000000000086c <inode_flush>:
 86c:	stp	x29, x30, [sp, #-48]!
 870:	mov	x29, sp
 874:	str	x0, [sp, #24]
 878:	ldr	x0, [sp, #24]
 87c:	ldr	x1, [x0]
 880:	mov	x0, #0xb705                	// #46853
 884:	movk	x0, #0x7f2b, lsl #16
 888:	cmp	x1, x0
 88c:	b.eq	89c <inode_flush+0x30>  // b.none
 890:	mov	x0, #0xb705                	// #46853
 894:	movk	x0, #0x7f2b, lsl #16
 898:	b	8d8 <inode_flush+0x6c>
 89c:	ldr	x0, [sp, #24]
 8a0:	ldr	x0, [x0, #168]
 8a4:	str	x0, [sp, #40]
 8a8:	ldr	x0, [sp, #40]
 8ac:	ldr	w1, [x0]
 8b0:	mov	w0, #0xb711                	// #46865
 8b4:	movk	w0, #0x7f2b, lsl #16
 8b8:	cmp	w1, w0
 8bc:	b.eq	8cc <inode_flush+0x60>  // b.none
 8c0:	mov	x0, #0xb711                	// #46865
 8c4:	movk	x0, #0x7f2b, lsl #16
 8c8:	b	8d8 <inode_flush+0x6c>
 8cc:	ldr	x0, [sp, #40]
 8d0:	ldr	x0, [x0, #40]
 8d4:	bl	0 <ext2fs_file_flush>
 8d8:	ldp	x29, x30, [sp], #48
 8dc:	ret

write_bb_file.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_write_bb_FILE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	x2, [sp, #24]
  14:	add	x0, sp, #0x40
  18:	mov	x1, x0
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <ext2fs_badblocks_list_iterate_begin>
  24:	str	x0, [sp, #72]
  28:	ldr	x0, [sp, #72]
  2c:	cmp	x0, #0x0
  30:	b.eq	54 <ext2fs_write_bb_FILE+0x54>  // b.none
  34:	ldr	x0, [sp, #72]
  38:	b	74 <ext2fs_write_bb_FILE+0x74>
  3c:	ldr	w0, [sp, #60]
  40:	mov	w2, w0
  44:	adrp	x0, 0 <ext2fs_write_bb_FILE>
  48:	add	x1, x0, #0x0
  4c:	ldr	x0, [sp, #24]
  50:	bl	0 <fprintf>
  54:	ldr	x0, [sp, #64]
  58:	add	x1, sp, #0x3c
  5c:	bl	0 <ext2fs_badblocks_list_iterate>
  60:	cmp	w0, #0x0
  64:	b.ne	3c <ext2fs_write_bb_FILE+0x3c>  // b.any
  68:	ldr	x0, [sp, #64]
  6c:	bl	0 <ext2fs_badblocks_list_iterate_end>
  70:	mov	x0, #0x0                   	// #0
  74:	ldp	x29, x30, [sp], #80
  78:	ret

dupfs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_dup_handle>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	str	x0, [sp, #40]
  10:	str	x1, [sp, #32]
  14:	ldr	x0, [sp, #40]
  18:	ldr	x1, [x0]
  1c:	mov	x0, #0xb701                	// #46849
  20:	movk	x0, #0x7f2b, lsl #16
  24:	cmp	x1, x0
  28:	b.eq	38 <ext2fs_dup_handle+0x38>  // b.none
  2c:	mov	x0, #0xb701                	// #46849
  30:	movk	x0, #0x7f2b, lsl #16
  34:	b	4e0 <ext2fs_dup_handle+0x4e0>
  38:	add	x0, sp, #0x38
  3c:	mov	x1, x0
  40:	mov	x0, #0x170                 	// #368
  44:	bl	0 <ext2fs_get_mem>
  48:	str	x0, [sp, #72]
  4c:	ldr	x0, [sp, #72]
  50:	cmp	x0, #0x0
  54:	b.eq	60 <ext2fs_dup_handle+0x60>  // b.none
  58:	ldr	x0, [sp, #72]
  5c:	b	4e0 <ext2fs_dup_handle+0x4e0>
  60:	ldr	x1, [sp, #56]
  64:	ldr	x0, [sp, #40]
  68:	mov	x3, x1
  6c:	mov	x1, x0
  70:	mov	x0, #0x170                 	// #368
  74:	mov	x2, x0
  78:	mov	x0, x3
  7c:	bl	0 <memcpy>
  80:	ldr	x0, [sp, #56]
  84:	str	xzr, [x0, #24]
  88:	ldr	x0, [sp, #56]
  8c:	str	xzr, [x0, #32]
  90:	ldr	x0, [sp, #56]
  94:	str	xzr, [x0, #160]
  98:	ldr	x0, [sp, #56]
  9c:	str	xzr, [x0, #64]
  a0:	ldr	x0, [sp, #56]
  a4:	str	xzr, [x0, #80]
  a8:	ldr	x0, [sp, #56]
  ac:	str	xzr, [x0, #88]
  b0:	ldr	x0, [sp, #56]
  b4:	str	xzr, [x0, #136]
  b8:	ldr	x0, [sp, #56]
  bc:	str	xzr, [x0, #144]
  c0:	ldr	x0, [sp, #56]
  c4:	str	xzr, [x0, #272]
  c8:	ldr	x0, [sp, #56]
  cc:	str	xzr, [x0, #280]
  d0:	ldr	x0, [sp, #56]
  d4:	mov	w1, #0xffffffff            	// #-1
  d8:	str	w1, [x0, #288]
  dc:	ldr	x0, [sp, #56]
  e0:	ldr	x0, [x0, #8]
  e4:	ldr	w1, [x0, #48]
  e8:	add	w1, w1, #0x1
  ec:	str	w1, [x0, #48]
  f0:	ldr	x0, [sp, #56]
  f4:	ldr	x0, [x0, #232]
  f8:	cmp	x0, #0x0
  fc:	b.eq	114 <ext2fs_dup_handle+0x114>  // b.none
 100:	ldr	x0, [sp, #56]
 104:	ldr	x0, [x0, #232]
 108:	ldr	w1, [x0, #24]
 10c:	add	w1, w1, #0x1
 110:	str	w1, [x0, #24]
 114:	ldr	x0, [sp, #40]
 118:	ldr	x0, [x0, #24]
 11c:	bl	0 <strlen>
 120:	add	x2, x0, #0x1
 124:	ldr	x0, [sp, #56]
 128:	add	x0, x0, #0x18
 12c:	mov	x1, x0
 130:	mov	x0, x2
 134:	bl	0 <ext2fs_get_mem>
 138:	str	x0, [sp, #72]
 13c:	ldr	x0, [sp, #72]
 140:	cmp	x0, #0x0
 144:	b.ne	488 <ext2fs_dup_handle+0x488>  // b.any
 148:	ldr	x0, [sp, #56]
 14c:	ldr	x2, [x0, #24]
 150:	ldr	x0, [sp, #40]
 154:	ldr	x0, [x0, #24]
 158:	mov	x1, x0
 15c:	mov	x0, x2
 160:	bl	0 <strcpy>
 164:	ldr	x0, [sp, #56]
 168:	add	x0, x0, #0x20
 16c:	mov	x1, x0
 170:	mov	x0, #0x400                 	// #1024
 174:	bl	0 <ext2fs_get_mem>
 178:	str	x0, [sp, #72]
 17c:	ldr	x0, [sp, #72]
 180:	cmp	x0, #0x0
 184:	b.ne	490 <ext2fs_dup_handle+0x490>  // b.any
 188:	ldr	x0, [sp, #56]
 18c:	ldr	x3, [x0, #32]
 190:	ldr	x0, [sp, #40]
 194:	ldr	x0, [x0, #32]
 198:	mov	x2, #0x400                 	// #1024
 19c:	mov	x1, x0
 1a0:	mov	x0, x3
 1a4:	bl	0 <memcpy>
 1a8:	ldr	x0, [sp, #56]
 1ac:	add	x0, x0, #0xa0
 1b0:	mov	x1, x0
 1b4:	mov	x0, #0x400                 	// #1024
 1b8:	bl	0 <ext2fs_get_mem>
 1bc:	str	x0, [sp, #72]
 1c0:	ldr	x0, [sp, #72]
 1c4:	cmp	x0, #0x0
 1c8:	b.ne	498 <ext2fs_dup_handle+0x498>  // b.any
 1cc:	ldr	x0, [sp, #56]
 1d0:	ldr	x3, [x0, #160]
 1d4:	ldr	x0, [sp, #40]
 1d8:	ldr	x0, [x0, #160]
 1dc:	mov	x2, #0x400                 	// #1024
 1e0:	mov	x1, x0
 1e4:	mov	x0, x3
 1e8:	bl	0 <memcpy>
 1ec:	ldr	x0, [sp, #56]
 1f0:	ldr	x3, [x0, #56]
 1f4:	ldr	x0, [sp, #56]
 1f8:	ldr	w0, [x0, #40]
 1fc:	mov	w1, w0
 200:	ldr	x0, [sp, #56]
 204:	add	x0, x0, #0x40
 208:	mov	x2, x0
 20c:	mov	x0, x3
 210:	bl	0 <ext2fs_get_array>
 214:	str	x0, [sp, #72]
 218:	ldr	x0, [sp, #72]
 21c:	cmp	x0, #0x0
 220:	b.ne	4a0 <ext2fs_dup_handle+0x4a0>  // b.any
 224:	ldr	x0, [sp, #56]
 228:	ldr	x3, [x0, #64]
 22c:	ldr	x0, [sp, #40]
 230:	ldr	x4, [x0, #64]
 234:	ldr	x0, [sp, #56]
 238:	ldr	x1, [x0, #56]
 23c:	ldr	x0, [sp, #56]
 240:	ldr	w0, [x0, #40]
 244:	mov	w0, w0
 248:	mul	x0, x1, x0
 24c:	mov	x2, x0
 250:	mov	x1, x4
 254:	mov	x0, x3
 258:	bl	0 <memcpy>
 25c:	ldr	x0, [sp, #40]
 260:	ldr	x0, [x0, #80]
 264:	cmp	x0, #0x0
 268:	b.eq	298 <ext2fs_dup_handle+0x298>  // b.none
 26c:	ldr	x0, [sp, #40]
 270:	ldr	x2, [x0, #80]
 274:	ldr	x0, [sp, #56]
 278:	add	x0, x0, #0x50
 27c:	mov	x1, x0
 280:	mov	x0, x2
 284:	bl	0 <ext2fs_copy_bitmap>
 288:	str	x0, [sp, #72]
 28c:	ldr	x0, [sp, #72]
 290:	cmp	x0, #0x0
 294:	b.ne	4a8 <ext2fs_dup_handle+0x4a8>  // b.any
 298:	ldr	x0, [sp, #40]
 29c:	ldr	x0, [x0, #88]
 2a0:	cmp	x0, #0x0
 2a4:	b.eq	2d4 <ext2fs_dup_handle+0x2d4>  // b.none
 2a8:	ldr	x0, [sp, #40]
 2ac:	ldr	x2, [x0, #88]
 2b0:	ldr	x0, [sp, #56]
 2b4:	add	x0, x0, #0x58
 2b8:	mov	x1, x0
 2bc:	mov	x0, x2
 2c0:	bl	0 <ext2fs_copy_bitmap>
 2c4:	str	x0, [sp, #72]
 2c8:	ldr	x0, [sp, #72]
 2cc:	cmp	x0, #0x0
 2d0:	b.ne	4b0 <ext2fs_dup_handle+0x4b0>  // b.any
 2d4:	ldr	x0, [sp, #40]
 2d8:	ldr	x0, [x0, #136]
 2dc:	cmp	x0, #0x0
 2e0:	b.eq	310 <ext2fs_dup_handle+0x310>  // b.none
 2e4:	ldr	x0, [sp, #40]
 2e8:	ldr	x2, [x0, #136]
 2ec:	ldr	x0, [sp, #56]
 2f0:	add	x0, x0, #0x88
 2f4:	mov	x1, x0
 2f8:	mov	x0, x2
 2fc:	bl	0 <ext2fs_badblocks_copy>
 300:	str	x0, [sp, #72]
 304:	ldr	x0, [sp, #72]
 308:	cmp	x0, #0x0
 30c:	b.ne	4b8 <ext2fs_dup_handle+0x4b8>  // b.any
 310:	ldr	x0, [sp, #40]
 314:	ldr	x0, [x0, #144]
 318:	cmp	x0, #0x0
 31c:	b.eq	34c <ext2fs_dup_handle+0x34c>  // b.none
 320:	ldr	x0, [sp, #40]
 324:	ldr	x2, [x0, #144]
 328:	ldr	x0, [sp, #56]
 32c:	add	x0, x0, #0x90
 330:	mov	x1, x0
 334:	mov	x0, x2
 338:	bl	0 <ext2fs_copy_dblist>
 33c:	str	x0, [sp, #72]
 340:	ldr	x0, [sp, #72]
 344:	cmp	x0, #0x0
 348:	b.ne	4c0 <ext2fs_dup_handle+0x4c0>  // b.any
 34c:	ldr	x0, [sp, #40]
 350:	ldr	x0, [x0, #272]
 354:	cmp	x0, #0x0
 358:	b.eq	3b4 <ext2fs_dup_handle+0x3b4>  // b.none
 35c:	ldr	x0, [sp, #40]
 360:	ldr	w0, [x0, #40]
 364:	mov	w2, w0
 368:	ldr	x0, [sp, #56]
 36c:	add	x0, x0, #0x110
 370:	mov	x1, x0
 374:	mov	x0, x2
 378:	bl	0 <ext2fs_get_mem>
 37c:	str	x0, [sp, #72]
 380:	ldr	x0, [sp, #72]
 384:	cmp	x0, #0x0
 388:	b.ne	4c8 <ext2fs_dup_handle+0x4c8>  // b.any
 38c:	ldr	x0, [sp, #56]
 390:	ldr	x3, [x0, #272]
 394:	ldr	x0, [sp, #40]
 398:	ldr	x1, [x0, #272]
 39c:	ldr	x0, [sp, #40]
 3a0:	ldr	w0, [x0, #40]
 3a4:	mov	w0, w0
 3a8:	mov	x2, x0
 3ac:	mov	x0, x3
 3b0:	bl	0 <memcpy>
 3b4:	ldr	x0, [sp, #40]
 3b8:	ldr	w0, [x0, #288]
 3bc:	cmp	w0, #0x0
 3c0:	b.lt	3f8 <ext2fs_dup_handle+0x3f8>  // b.tstop
 3c4:	ldr	x0, [sp, #40]
 3c8:	ldr	w0, [x0, #288]
 3cc:	ldr	x19, [sp, #56]
 3d0:	bl	0 <dup>
 3d4:	str	w0, [x19, #288]
 3d8:	ldr	x0, [sp, #56]
 3dc:	ldr	w0, [x0, #288]
 3e0:	cmp	w0, #0x0
 3e4:	b.ge	3f8 <ext2fs_dup_handle+0x3f8>  // b.tcont
 3e8:	mov	x0, #0xb790                	// #46992
 3ec:	movk	x0, #0x7f2b, lsl #16
 3f0:	str	x0, [sp, #72]
 3f4:	b	4d4 <ext2fs_dup_handle+0x4d4>
 3f8:	ldr	x0, [sp, #40]
 3fc:	ldr	x0, [x0, #280]
 400:	cmp	x0, #0x0
 404:	b.eq	474 <ext2fs_dup_handle+0x474>  // b.none
 408:	ldr	x0, [sp, #40]
 40c:	ldr	w0, [x0, #288]
 410:	bl	0 <ext2fs_get_dio_alignment>
 414:	str	w0, [sp, #68]
 418:	ldr	x0, [sp, #40]
 41c:	ldr	w0, [x0, #40]
 420:	mov	w3, w0
 424:	ldrsw	x1, [sp, #68]
 428:	ldr	x0, [sp, #56]
 42c:	add	x0, x0, #0x118
 430:	mov	x2, x0
 434:	mov	x0, x3
 438:	bl	0 <ext2fs_get_memalign>
 43c:	str	x0, [sp, #72]
 440:	ldr	x0, [sp, #72]
 444:	cmp	x0, #0x0
 448:	b.ne	4d0 <ext2fs_dup_handle+0x4d0>  // b.any
 44c:	ldr	x0, [sp, #56]
 450:	ldr	x3, [x0, #280]
 454:	ldr	x0, [sp, #40]
 458:	ldr	x1, [x0, #280]
 45c:	ldr	x0, [sp, #40]
 460:	ldr	w0, [x0, #40]
 464:	mov	w0, w0
 468:	mov	x2, x0
 46c:	mov	x0, x3
 470:	bl	0 <memcpy>
 474:	ldr	x1, [sp, #56]
 478:	ldr	x0, [sp, #32]
 47c:	str	x1, [x0]
 480:	mov	x0, #0x0                   	// #0
 484:	b	4e0 <ext2fs_dup_handle+0x4e0>
 488:	nop
 48c:	b	4d4 <ext2fs_dup_handle+0x4d4>
 490:	nop
 494:	b	4d4 <ext2fs_dup_handle+0x4d4>
 498:	nop
 49c:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4a0:	nop
 4a4:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4a8:	nop
 4ac:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4b0:	nop
 4b4:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4b8:	nop
 4bc:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4c0:	nop
 4c4:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4c8:	nop
 4cc:	b	4d4 <ext2fs_dup_handle+0x4d4>
 4d0:	nop
 4d4:	ldr	x0, [sp, #56]
 4d8:	bl	0 <ext2fs_free>
 4dc:	ldr	x0, [sp, #72]
 4e0:	ldr	x19, [sp, #16]
 4e4:	ldp	x29, x30, [sp], #80
 4e8:	ret

imager.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <check_zero_block>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	ldr	w0, [sp, #4]
  18:	str	w0, [sp, #20]
  1c:	b	4c <check_zero_block+0x4c>
  20:	ldr	x0, [sp, #24]
  24:	add	x1, x0, #0x1
  28:	str	x1, [sp, #24]
  2c:	ldrb	w0, [x0]
  30:	cmp	w0, #0x0
  34:	b.eq	40 <check_zero_block+0x40>  // b.none
  38:	mov	w0, #0x0                   	// #0
  3c:	b	5c <check_zero_block+0x5c>
  40:	ldr	w0, [sp, #20]
  44:	sub	w0, w0, #0x1
  48:	str	w0, [sp, #20]
  4c:	ldr	w0, [sp, #20]
  50:	cmp	w0, #0x0
  54:	b.gt	20 <check_zero_block+0x20>
  58:	mov	w0, #0x1                   	// #1
  5c:	add	sp, sp, #0x20
  60:	ret

0000000000000064 <ext2fs_image_inode_write>:
  64:	stp	x29, x30, [sp, #-96]!
  68:	mov	x29, sp
  6c:	str	x0, [sp, #24]
  70:	str	w1, [sp, #20]
  74:	str	w2, [sp, #16]
  78:	ldr	x0, [sp, #24]
  7c:	ldr	w0, [x0, #40]
  80:	lsl	w0, w0, #5
  84:	mov	w0, w0
  88:	bl	0 <malloc>
  8c:	str	x0, [sp, #48]
  90:	ldr	x0, [sp, #48]
  94:	cmp	x0, #0x0
  98:	b.ne	a4 <ext2fs_image_inode_write+0x40>  // b.any
  9c:	mov	x0, #0xc                   	// #12
  a0:	b	374 <ext2fs_image_inode_write+0x310>
  a4:	str	wzr, [sp, #92]
  a8:	b	348 <ext2fs_image_inode_write+0x2e4>
  ac:	ldr	w1, [sp, #92]
  b0:	ldr	x0, [sp, #24]
  b4:	bl	0 <ext2fs_inode_table_loc>
  b8:	str	x0, [sp, #64]
  bc:	ldr	x0, [sp, #64]
  c0:	cmp	x0, #0x0
  c4:	b.ne	d8 <ext2fs_image_inode_write+0x74>  // b.any
  c8:	mov	x0, #0xb73b                	// #46907
  cc:	movk	x0, #0x7f2b, lsl #16
  d0:	str	x0, [sp, #56]
  d4:	b	368 <ext2fs_image_inode_write+0x304>
  d8:	ldr	x0, [sp, #24]
  dc:	ldr	w0, [x0, #72]
  e0:	str	w0, [sp, #88]
  e4:	b	330 <ext2fs_image_inode_write+0x2cc>
  e8:	mov	w0, #0x20                  	// #32
  ec:	str	w0, [sp, #84]
  f0:	ldr	w1, [sp, #84]
  f4:	ldr	w0, [sp, #88]
  f8:	cmp	w1, w0
  fc:	b.ls	108 <ext2fs_image_inode_write+0xa4>  // b.plast
 100:	ldr	w0, [sp, #88]
 104:	str	w0, [sp, #84]
 108:	ldr	x0, [sp, #24]
 10c:	ldr	x0, [x0, #8]
 110:	ldr	w1, [sp, #84]
 114:	ldr	x3, [sp, #48]
 118:	mov	w2, w1
 11c:	ldr	x1, [sp, #64]
 120:	bl	0 <io_channel_read_blk64>
 124:	str	x0, [sp, #56]
 128:	ldr	x0, [sp, #56]
 12c:	cmp	x0, #0x0
 130:	b.ne	364 <ext2fs_image_inode_write+0x300>  // b.any
 134:	ldr	x0, [sp, #48]
 138:	str	x0, [sp, #72]
 13c:	b	324 <ext2fs_image_inode_write+0x2c0>
 140:	ldr	w0, [sp, #16]
 144:	and	w0, w0, #0x2
 148:	cmp	w0, #0x0
 14c:	b.ne	15c <ext2fs_image_inode_write+0xf8>  // b.any
 150:	ldr	w0, [sp, #84]
 154:	str	w0, [sp, #80]
 158:	b	25c <ext2fs_image_inode_write+0x1f8>
 15c:	ldr	x0, [sp, #24]
 160:	ldr	w0, [x0, #40]
 164:	mov	w1, w0
 168:	ldr	x0, [sp, #72]
 16c:	bl	0 <check_zero_block>
 170:	cmp	w0, #0x0
 174:	b.eq	1f4 <ext2fs_image_inode_write+0x190>  // b.none
 178:	ldr	w0, [sp, #84]
 17c:	sub	w0, w0, #0x1
 180:	str	w0, [sp, #84]
 184:	ldr	x0, [sp, #64]
 188:	add	x0, x0, #0x1
 18c:	str	x0, [sp, #64]
 190:	ldr	w0, [sp, #88]
 194:	sub	w0, w0, #0x1
 198:	str	w0, [sp, #88]
 19c:	ldr	x0, [sp, #24]
 1a0:	ldr	w0, [x0, #40]
 1a4:	mov	w0, w0
 1a8:	ldr	x1, [sp, #72]
 1ac:	add	x0, x1, x0
 1b0:	str	x0, [sp, #72]
 1b4:	ldr	x0, [sp, #24]
 1b8:	ldr	w0, [x0, #40]
 1bc:	mov	w0, w0
 1c0:	mov	w2, #0x1                   	// #1
 1c4:	mov	x1, x0
 1c8:	ldr	w0, [sp, #20]
 1cc:	bl	0 <ext2fs_llseek>
 1d0:	str	x0, [sp, #40]
 1d4:	ldr	x0, [sp, #40]
 1d8:	cmp	x0, #0x0
 1dc:	b.ge	324 <ext2fs_image_inode_write+0x2c0>  // b.tcont
 1e0:	bl	0 <__errno_location>
 1e4:	ldr	w0, [x0]
 1e8:	sxtw	x0, w0
 1ec:	str	x0, [sp, #56]
 1f0:	b	368 <ext2fs_image_inode_write+0x304>
 1f4:	mov	w0, #0x1                   	// #1
 1f8:	str	w0, [sp, #80]
 1fc:	b	244 <ext2fs_image_inode_write+0x1e0>
 200:	ldr	x0, [sp, #24]
 204:	ldr	w1, [x0, #40]
 208:	ldr	w0, [sp, #80]
 20c:	mul	w0, w1, w0
 210:	mov	w0, w0
 214:	ldr	x1, [sp, #72]
 218:	add	x2, x1, x0
 21c:	ldr	x0, [sp, #24]
 220:	ldr	w0, [x0, #40]
 224:	mov	w1, w0
 228:	mov	x0, x2
 22c:	bl	0 <check_zero_block>
 230:	cmp	w0, #0x0
 234:	b.ne	258 <ext2fs_image_inode_write+0x1f4>  // b.any
 238:	ldr	w0, [sp, #80]
 23c:	add	w0, w0, #0x1
 240:	str	w0, [sp, #80]
 244:	ldr	w1, [sp, #80]
 248:	ldr	w0, [sp, #84]
 24c:	cmp	w1, w0
 250:	b.cc	200 <ext2fs_image_inode_write+0x19c>  // b.lo, b.ul, b.last
 254:	b	25c <ext2fs_image_inode_write+0x1f8>
 258:	nop
 25c:	ldr	x0, [sp, #24]
 260:	ldr	w1, [x0, #40]
 264:	ldr	w0, [sp, #80]
 268:	mul	w0, w1, w0
 26c:	mov	w0, w0
 270:	mov	x2, x0
 274:	ldr	x1, [sp, #72]
 278:	ldr	w0, [sp, #20]
 27c:	bl	0 <write>
 280:	str	x0, [sp, #32]
 284:	ldr	x0, [sp, #32]
 288:	cmn	x0, #0x1
 28c:	b.ne	2a4 <ext2fs_image_inode_write+0x240>  // b.any
 290:	bl	0 <__errno_location>
 294:	ldr	w0, [x0]
 298:	sxtw	x0, w0
 29c:	str	x0, [sp, #56]
 2a0:	b	368 <ext2fs_image_inode_write+0x304>
 2a4:	ldr	x0, [sp, #24]
 2a8:	ldr	w1, [x0, #40]
 2ac:	ldr	w0, [sp, #80]
 2b0:	mul	w0, w1, w0
 2b4:	mov	w0, w0
 2b8:	ldr	x1, [sp, #32]
 2bc:	cmp	x1, x0
 2c0:	b.eq	2d4 <ext2fs_image_inode_write+0x270>  // b.none
 2c4:	mov	x0, #0xb725                	// #46885
 2c8:	movk	x0, #0x7f2b, lsl #16
 2cc:	str	x0, [sp, #56]
 2d0:	b	368 <ext2fs_image_inode_write+0x304>
 2d4:	ldr	w0, [sp, #80]
 2d8:	ldr	x1, [sp, #64]
 2dc:	add	x0, x1, x0
 2e0:	str	x0, [sp, #64]
 2e4:	ldr	w1, [sp, #88]
 2e8:	ldr	w0, [sp, #80]
 2ec:	sub	w0, w1, w0
 2f0:	str	w0, [sp, #88]
 2f4:	ldr	x0, [sp, #24]
 2f8:	ldr	w1, [x0, #40]
 2fc:	ldr	w0, [sp, #80]
 300:	mul	w0, w1, w0
 304:	mov	w0, w0
 308:	ldr	x1, [sp, #72]
 30c:	add	x0, x1, x0
 310:	str	x0, [sp, #72]
 314:	ldr	w1, [sp, #84]
 318:	ldr	w0, [sp, #80]
 31c:	sub	w0, w1, w0
 320:	str	w0, [sp, #84]
 324:	ldr	w0, [sp, #84]
 328:	cmp	w0, #0x0
 32c:	b.ne	140 <ext2fs_image_inode_write+0xdc>  // b.any
 330:	ldr	w0, [sp, #88]
 334:	cmp	w0, #0x0
 338:	b.ne	e8 <ext2fs_image_inode_write+0x84>  // b.any
 33c:	ldr	w0, [sp, #92]
 340:	add	w0, w0, #0x1
 344:	str	w0, [sp, #92]
 348:	ldr	x0, [sp, #24]
 34c:	ldr	w0, [x0, #48]
 350:	ldr	w1, [sp, #92]
 354:	cmp	w1, w0
 358:	b.cc	ac <ext2fs_image_inode_write+0x48>  // b.lo, b.ul, b.last
 35c:	str	xzr, [sp, #56]
 360:	b	368 <ext2fs_image_inode_write+0x304>
 364:	nop
 368:	ldr	x0, [sp, #48]
 36c:	bl	0 <free>
 370:	ldr	x0, [sp, #56]
 374:	ldp	x29, x30, [sp], #96
 378:	ret

000000000000037c <ext2fs_image_inode_read>:
 37c:	stp	x29, x30, [sp, #-80]!
 380:	mov	x29, sp
 384:	str	x0, [sp, #24]
 388:	str	w1, [sp, #20]
 38c:	str	w2, [sp, #16]
 390:	ldr	x0, [sp, #24]
 394:	ldr	w0, [x0, #40]
 398:	lsl	w0, w0, #5
 39c:	mov	w0, w0
 3a0:	bl	0 <malloc>
 3a4:	str	x0, [sp, #40]
 3a8:	ldr	x0, [sp, #40]
 3ac:	cmp	x0, #0x0
 3b0:	b.ne	3bc <ext2fs_image_inode_read+0x40>  // b.any
 3b4:	mov	x0, #0xc                   	// #12
 3b8:	b	530 <ext2fs_image_inode_read+0x1b4>
 3bc:	str	wzr, [sp, #76]
 3c0:	b	4fc <ext2fs_image_inode_read+0x180>
 3c4:	ldr	w1, [sp, #76]
 3c8:	ldr	x0, [sp, #24]
 3cc:	bl	0 <ext2fs_inode_table_loc>
 3d0:	str	x0, [sp, #56]
 3d4:	ldr	x0, [sp, #56]
 3d8:	cmp	x0, #0x0
 3dc:	b.ne	3f0 <ext2fs_image_inode_read+0x74>  // b.any
 3e0:	mov	x0, #0xb73b                	// #46907
 3e4:	movk	x0, #0x7f2b, lsl #16
 3e8:	str	x0, [sp, #48]
 3ec:	b	524 <ext2fs_image_inode_read+0x1a8>
 3f0:	ldr	x0, [sp, #24]
 3f4:	ldr	w0, [x0, #72]
 3f8:	str	w0, [sp, #68]
 3fc:	b	4e4 <ext2fs_image_inode_read+0x168>
 400:	mov	w0, #0x20                  	// #32
 404:	str	w0, [sp, #72]
 408:	ldr	w1, [sp, #72]
 40c:	ldr	w0, [sp, #68]
 410:	cmp	w1, w0
 414:	b.ls	420 <ext2fs_image_inode_read+0xa4>  // b.plast
 418:	ldr	w0, [sp, #68]
 41c:	str	w0, [sp, #72]
 420:	ldr	x0, [sp, #24]
 424:	ldr	w1, [x0, #40]
 428:	ldr	w0, [sp, #72]
 42c:	mul	w0, w1, w0
 430:	mov	w0, w0
 434:	mov	x2, x0
 438:	ldr	x1, [sp, #40]
 43c:	ldr	w0, [sp, #20]
 440:	bl	0 <read>
 444:	str	x0, [sp, #32]
 448:	ldr	x0, [sp, #32]
 44c:	cmn	x0, #0x1
 450:	b.ne	468 <ext2fs_image_inode_read+0xec>  // b.any
 454:	bl	0 <__errno_location>
 458:	ldr	w0, [x0]
 45c:	sxtw	x0, w0
 460:	str	x0, [sp, #48]
 464:	b	524 <ext2fs_image_inode_read+0x1a8>
 468:	ldr	x0, [sp, #24]
 46c:	ldr	w1, [x0, #40]
 470:	ldr	w0, [sp, #72]
 474:	mul	w0, w1, w0
 478:	mov	w0, w0
 47c:	ldr	x1, [sp, #32]
 480:	cmp	x1, x0
 484:	b.eq	498 <ext2fs_image_inode_read+0x11c>  // b.none
 488:	mov	x0, #0xb724                	// #46884
 48c:	movk	x0, #0x7f2b, lsl #16
 490:	str	x0, [sp, #48]
 494:	b	524 <ext2fs_image_inode_read+0x1a8>
 498:	ldr	x0, [sp, #24]
 49c:	ldr	x0, [x0, #8]
 4a0:	ldr	w1, [sp, #72]
 4a4:	ldr	x3, [sp, #40]
 4a8:	mov	w2, w1
 4ac:	ldr	x1, [sp, #56]
 4b0:	bl	0 <io_channel_write_blk64>
 4b4:	str	x0, [sp, #48]
 4b8:	ldr	x0, [sp, #48]
 4bc:	cmp	x0, #0x0
 4c0:	b.ne	520 <ext2fs_image_inode_read+0x1a4>  // b.any
 4c4:	ldr	w0, [sp, #72]
 4c8:	ldr	x1, [sp, #56]
 4cc:	add	x0, x1, x0
 4d0:	str	x0, [sp, #56]
 4d4:	ldr	w1, [sp, #68]
 4d8:	ldr	w0, [sp, #72]
 4dc:	sub	w0, w1, w0
 4e0:	str	w0, [sp, #68]
 4e4:	ldr	w0, [sp, #68]
 4e8:	cmp	w0, #0x0
 4ec:	b.ne	400 <ext2fs_image_inode_read+0x84>  // b.any
 4f0:	ldr	w0, [sp, #76]
 4f4:	add	w0, w0, #0x1
 4f8:	str	w0, [sp, #76]
 4fc:	ldr	x0, [sp, #24]
 500:	ldr	w0, [x0, #48]
 504:	ldr	w1, [sp, #76]
 508:	cmp	w1, w0
 50c:	b.cc	3c4 <ext2fs_image_inode_read+0x48>  // b.lo, b.ul, b.last
 510:	ldr	x0, [sp, #24]
 514:	bl	0 <ext2fs_flush_icache>
 518:	str	x0, [sp, #48]
 51c:	b	524 <ext2fs_image_inode_read+0x1a8>
 520:	nop
 524:	ldr	x0, [sp, #40]
 528:	bl	0 <free>
 52c:	ldr	x0, [sp, #48]
 530:	ldp	x29, x30, [sp], #80
 534:	ret

0000000000000538 <ext2fs_image_super_write>:
 538:	stp	x29, x30, [sp, #-64]!
 53c:	mov	x29, sp
 540:	str	x0, [sp, #24]
 544:	str	w1, [sp, #20]
 548:	str	w2, [sp, #16]
 54c:	ldr	x0, [sp, #24]
 550:	ldr	w0, [x0, #40]
 554:	mov	w0, w0
 558:	bl	0 <malloc>
 55c:	str	x0, [sp, #48]
 560:	ldr	x0, [sp, #48]
 564:	cmp	x0, #0x0
 568:	b.ne	574 <ext2fs_image_super_write+0x3c>  // b.any
 56c:	mov	x0, #0xc                   	// #12
 570:	b	6ac <ext2fs_image_super_write+0x174>
 574:	ldr	x0, [sp, #24]
 578:	ldr	w0, [x0, #40]
 57c:	mov	w0, w0
 580:	mov	x2, x0
 584:	mov	w1, #0x0                   	// #0
 588:	ldr	x0, [sp, #48]
 58c:	bl	0 <memset>
 590:	ldr	x0, [sp, #24]
 594:	ldr	x0, [x0, #32]
 598:	mov	x2, #0x400                 	// #1024
 59c:	mov	x1, x0
 5a0:	ldr	x0, [sp, #48]
 5a4:	bl	0 <memcpy>
 5a8:	ldr	x0, [sp, #24]
 5ac:	ldr	w0, [x0, #40]
 5b0:	mov	w0, w0
 5b4:	mov	x2, x0
 5b8:	ldr	x1, [sp, #48]
 5bc:	ldr	w0, [sp, #20]
 5c0:	bl	0 <write>
 5c4:	str	x0, [sp, #40]
 5c8:	ldr	x0, [sp, #40]
 5cc:	cmn	x0, #0x1
 5d0:	b.ne	5e8 <ext2fs_image_super_write+0xb0>  // b.any
 5d4:	bl	0 <__errno_location>
 5d8:	ldr	w0, [x0]
 5dc:	sxtw	x0, w0
 5e0:	str	x0, [sp, #56]
 5e4:	b	6a0 <ext2fs_image_super_write+0x168>
 5e8:	ldr	x0, [sp, #24]
 5ec:	ldr	w0, [x0, #40]
 5f0:	mov	w0, w0
 5f4:	ldr	x1, [sp, #40]
 5f8:	cmp	x1, x0
 5fc:	b.eq	610 <ext2fs_image_super_write+0xd8>  // b.none
 600:	mov	x0, #0xb725                	// #46885
 604:	movk	x0, #0x7f2b, lsl #16
 608:	str	x0, [sp, #56]
 60c:	b	6a0 <ext2fs_image_super_write+0x168>
 610:	ldr	x0, [sp, #24]
 614:	ldr	x0, [x0, #64]
 618:	str	x0, [sp, #32]
 61c:	ldr	x0, [sp, #24]
 620:	ldr	w0, [x0, #40]
 624:	mov	w1, w0
 628:	ldr	x0, [sp, #24]
 62c:	ldr	x0, [x0, #56]
 630:	mul	x0, x1, x0
 634:	mov	x2, x0
 638:	ldr	x1, [sp, #32]
 63c:	ldr	w0, [sp, #20]
 640:	bl	0 <write>
 644:	str	x0, [sp, #40]
 648:	ldr	x0, [sp, #40]
 64c:	cmn	x0, #0x1
 650:	b.ne	668 <ext2fs_image_super_write+0x130>  // b.any
 654:	bl	0 <__errno_location>
 658:	ldr	w0, [x0]
 65c:	sxtw	x0, w0
 660:	str	x0, [sp, #56]
 664:	b	6a0 <ext2fs_image_super_write+0x168>
 668:	ldr	x0, [sp, #24]
 66c:	ldr	w0, [x0, #40]
 670:	mov	w1, w0
 674:	ldr	x0, [sp, #24]
 678:	ldr	x0, [x0, #56]
 67c:	mul	x1, x1, x0
 680:	ldr	x0, [sp, #40]
 684:	cmp	x1, x0
 688:	b.eq	69c <ext2fs_image_super_write+0x164>  // b.none
 68c:	mov	x0, #0xb725                	// #46885
 690:	movk	x0, #0x7f2b, lsl #16
 694:	str	x0, [sp, #56]
 698:	b	6a0 <ext2fs_image_super_write+0x168>
 69c:	str	xzr, [sp, #56]
 6a0:	ldr	x0, [sp, #48]
 6a4:	bl	0 <free>
 6a8:	ldr	x0, [sp, #56]
 6ac:	ldp	x29, x30, [sp], #64
 6b0:	ret

00000000000006b4 <ext2fs_image_super_read>:
 6b4:	stp	x29, x30, [sp, #-64]!
 6b8:	mov	x29, sp
 6bc:	str	x0, [sp, #24]
 6c0:	str	w1, [sp, #20]
 6c4:	str	w2, [sp, #16]
 6c8:	ldr	x0, [sp, #24]
 6cc:	ldr	w1, [x0, #40]
 6d0:	ldr	x0, [sp, #24]
 6d4:	ldr	w0, [x0, #48]
 6d8:	add	w0, w0, #0x1
 6dc:	mul	w0, w1, w0
 6e0:	mov	w0, w0
 6e4:	str	x0, [sp, #48]
 6e8:	ldr	x0, [sp, #48]
 6ec:	bl	0 <malloc>
 6f0:	str	x0, [sp, #40]
 6f4:	ldr	x0, [sp, #40]
 6f8:	cmp	x0, #0x0
 6fc:	b.ne	708 <ext2fs_image_super_read+0x54>  // b.any
 700:	mov	x0, #0xc                   	// #12
 704:	b	7c8 <ext2fs_image_super_read+0x114>
 708:	ldr	x0, [sp, #48]
 70c:	mov	x2, x0
 710:	ldr	x1, [sp, #40]
 714:	ldr	w0, [sp, #20]
 718:	bl	0 <read>
 71c:	str	x0, [sp, #32]
 720:	ldr	x0, [sp, #32]
 724:	cmn	x0, #0x1
 728:	b.ne	740 <ext2fs_image_super_read+0x8c>  // b.any
 72c:	bl	0 <__errno_location>
 730:	ldr	w0, [x0]
 734:	sxtw	x0, w0
 738:	str	x0, [sp, #56]
 73c:	b	7bc <ext2fs_image_super_read+0x108>
 740:	ldr	x1, [sp, #32]
 744:	ldr	x0, [sp, #48]
 748:	cmp	x1, x0
 74c:	b.eq	760 <ext2fs_image_super_read+0xac>  // b.none
 750:	mov	x0, #0xb724                	// #46884
 754:	movk	x0, #0x7f2b, lsl #16
 758:	str	x0, [sp, #56]
 75c:	b	7bc <ext2fs_image_super_read+0x108>
 760:	ldr	x0, [sp, #24]
 764:	ldr	x0, [x0, #32]
 768:	mov	x2, #0x400                 	// #1024
 76c:	ldr	x1, [sp, #40]
 770:	bl	0 <memcpy>
 774:	ldr	x0, [sp, #24]
 778:	ldr	x3, [x0, #64]
 77c:	ldr	x0, [sp, #24]
 780:	ldr	w0, [x0, #40]
 784:	mov	w0, w0
 788:	ldr	x1, [sp, #40]
 78c:	add	x4, x1, x0
 790:	ldr	x0, [sp, #24]
 794:	ldr	w1, [x0, #40]
 798:	ldr	x0, [sp, #24]
 79c:	ldr	w0, [x0, #48]
 7a0:	mul	w0, w1, w0
 7a4:	mov	w0, w0
 7a8:	mov	x2, x0
 7ac:	mov	x1, x4
 7b0:	mov	x0, x3
 7b4:	bl	0 <memcpy>
 7b8:	str	xzr, [sp, #56]
 7bc:	ldr	x0, [sp, #40]
 7c0:	bl	0 <free>
 7c4:	ldr	x0, [sp, #56]
 7c8:	ldp	x29, x30, [sp], #64
 7cc:	ret

00000000000007d0 <ext2fs_image_bitmap_write>:
 7d0:	sub	sp, sp, #0x460
 7d4:	stp	x29, x30, [sp]
 7d8:	mov	x29, sp
 7dc:	str	x0, [sp, #24]
 7e0:	str	w1, [sp, #20]
 7e4:	str	w2, [sp, #16]
 7e8:	ldr	w0, [sp, #16]
 7ec:	and	w0, w0, #0x1
 7f0:	cmp	w0, #0x0
 7f4:	b.eq	878 <ext2fs_image_bitmap_write+0xa8>  // b.none
 7f8:	ldr	x0, [sp, #24]
 7fc:	ldr	x0, [x0, #80]
 800:	cmp	x0, #0x0
 804:	b.ne	828 <ext2fs_image_bitmap_write+0x58>  // b.any
 808:	ldr	x0, [sp, #24]
 80c:	bl	0 <ext2fs_read_inode_bitmap>
 810:	str	x0, [sp, #1072]
 814:	ldr	x0, [sp, #1072]
 818:	cmp	x0, #0x0
 81c:	b.eq	828 <ext2fs_image_bitmap_write+0x58>  // b.none
 820:	ldr	x0, [sp, #1072]
 824:	b	aec <ext2fs_image_bitmap_write+0x31c>
 828:	ldr	x0, [sp, #24]
 82c:	ldr	x0, [x0, #80]
 830:	str	x0, [sp, #1112]
 834:	mov	x0, #0x1                   	// #1
 838:	str	x0, [sp, #1096]
 83c:	ldr	x0, [sp, #24]
 840:	ldr	x0, [x0, #32]
 844:	ldr	w1, [x0, #40]
 848:	ldr	x0, [sp, #24]
 84c:	ldr	w0, [x0, #48]
 850:	mul	w0, w1, w0
 854:	mov	w0, w0
 858:	str	x0, [sp, #1088]
 85c:	ldr	x0, [sp, #24]
 860:	ldr	x0, [x0, #32]
 864:	ldr	w0, [x0, #40]
 868:	lsr	w0, w0, #3
 86c:	mov	w0, w0
 870:	str	x0, [sp, #1080]
 874:	b	904 <ext2fs_image_bitmap_write+0x134>
 878:	ldr	x0, [sp, #24]
 87c:	ldr	x0, [x0, #88]
 880:	cmp	x0, #0x0
 884:	b.ne	8a8 <ext2fs_image_bitmap_write+0xd8>  // b.any
 888:	ldr	x0, [sp, #24]
 88c:	bl	0 <ext2fs_read_block_bitmap>
 890:	str	x0, [sp, #1072]
 894:	ldr	x0, [sp, #1072]
 898:	cmp	x0, #0x0
 89c:	b.eq	8a8 <ext2fs_image_bitmap_write+0xd8>  // b.none
 8a0:	ldr	x0, [sp, #1072]
 8a4:	b	aec <ext2fs_image_bitmap_write+0x31c>
 8a8:	ldr	x0, [sp, #24]
 8ac:	ldr	x0, [x0, #88]
 8b0:	str	x0, [sp, #1112]
 8b4:	ldr	x0, [sp, #24]
 8b8:	ldr	x0, [x0, #32]
 8bc:	ldr	w0, [x0, #20]
 8c0:	mov	w0, w0
 8c4:	str	x0, [sp, #1096]
 8c8:	ldr	x0, [sp, #24]
 8cc:	ldr	x0, [x0, #32]
 8d0:	ldr	w0, [x0, #36]
 8d4:	mov	w1, w0
 8d8:	ldr	x0, [sp, #24]
 8dc:	ldr	w0, [x0, #48]
 8e0:	mov	w0, w0
 8e4:	mul	x0, x1, x0
 8e8:	str	x0, [sp, #1088]
 8ec:	ldr	x0, [sp, #24]
 8f0:	ldr	x0, [x0, #32]
 8f4:	ldr	w0, [x0, #36]
 8f8:	lsr	w0, w0, #3
 8fc:	mov	w0, w0
 900:	str	x0, [sp, #1080]
 904:	ldr	x0, [sp, #24]
 908:	ldr	w0, [x0, #48]
 90c:	mov	w0, w0
 910:	ldr	x1, [sp, #1080]
 914:	mul	x0, x1, x0
 918:	str	x0, [sp, #1064]
 91c:	b	9fc <ext2fs_image_bitmap_write+0x22c>
 920:	mov	x0, #0x400                 	// #1024
 924:	str	x0, [sp, #1080]
 928:	ldr	x0, [sp, #1088]
 92c:	lsr	x0, x0, #3
 930:	ldr	x1, [sp, #1080]
 934:	cmp	x1, x0
 938:	b.ls	948 <ext2fs_image_bitmap_write+0x178>  // b.plast
 93c:	ldr	x0, [sp, #1088]
 940:	lsr	x0, x0, #3
 944:	str	x0, [sp, #1080]
 948:	ldr	x0, [sp, #1080]
 94c:	lsl	w0, w0, #3
 950:	add	x1, sp, #0x20
 954:	mov	x3, x1
 958:	mov	w2, w0
 95c:	ldr	x1, [sp, #1096]
 960:	ldr	x0, [sp, #1112]
 964:	bl	0 <ext2fs_get_generic_bmap_range>
 968:	str	x0, [sp, #1072]
 96c:	ldr	x0, [sp, #1072]
 970:	cmp	x0, #0x0
 974:	b.eq	980 <ext2fs_image_bitmap_write+0x1b0>  // b.none
 978:	ldr	x0, [sp, #1072]
 97c:	b	aec <ext2fs_image_bitmap_write+0x31c>
 980:	add	x0, sp, #0x20
 984:	ldr	x2, [sp, #1080]
 988:	mov	x1, x0
 98c:	ldr	w0, [sp, #20]
 990:	bl	0 <write>
 994:	str	x0, [sp, #1056]
 998:	ldr	x0, [sp, #1056]
 99c:	cmn	x0, #0x1
 9a0:	b.ne	9b4 <ext2fs_image_bitmap_write+0x1e4>  // b.any
 9a4:	bl	0 <__errno_location>
 9a8:	ldr	w0, [x0]
 9ac:	sxtw	x0, w0
 9b0:	b	aec <ext2fs_image_bitmap_write+0x31c>
 9b4:	ldr	x0, [sp, #1080]
 9b8:	sxtw	x0, w0
 9bc:	ldr	x1, [sp, #1056]
 9c0:	cmp	x1, x0
 9c4:	b.eq	9d4 <ext2fs_image_bitmap_write+0x204>  // b.none
 9c8:	mov	x0, #0xb724                	// #46884
 9cc:	movk	x0, #0x7f2b, lsl #16
 9d0:	b	aec <ext2fs_image_bitmap_write+0x31c>
 9d4:	ldr	x0, [sp, #1080]
 9d8:	lsl	x0, x0, #3
 9dc:	ldr	x1, [sp, #1096]
 9e0:	add	x0, x1, x0
 9e4:	str	x0, [sp, #1096]
 9e8:	ldr	x0, [sp, #1080]
 9ec:	lsl	x0, x0, #3
 9f0:	ldr	x1, [sp, #1088]
 9f4:	sub	x0, x1, x0
 9f8:	str	x0, [sp, #1088]
 9fc:	ldr	x0, [sp, #1088]
 a00:	cmp	x0, #0x0
 a04:	b.ne	920 <ext2fs_image_bitmap_write+0x150>  // b.any
 a08:	ldr	x0, [sp, #24]
 a0c:	ldr	w0, [x0, #40]
 a10:	mov	w1, w0
 a14:	ldr	x0, [sp, #1064]
 a18:	udiv	x2, x0, x1
 a1c:	mul	x1, x2, x1
 a20:	sub	x0, x0, x1
 a24:	str	x0, [sp, #1080]
 a28:	add	x0, sp, #0x20
 a2c:	mov	x2, #0x400                 	// #1024
 a30:	mov	w1, #0x0                   	// #0
 a34:	bl	0 <memset>
 a38:	ldr	x0, [sp, #1080]
 a3c:	cmp	x0, #0x0
 a40:	b.eq	ae8 <ext2fs_image_bitmap_write+0x318>  // b.none
 a44:	ldr	x0, [sp, #24]
 a48:	ldr	w0, [x0, #40]
 a4c:	mov	w1, w0
 a50:	ldr	x0, [sp, #1080]
 a54:	sub	x0, x1, x0
 a58:	str	x0, [sp, #1080]
 a5c:	b	adc <ext2fs_image_bitmap_write+0x30c>
 a60:	ldr	x0, [sp, #1080]
 a64:	str	x0, [sp, #1104]
 a68:	ldr	x0, [sp, #1104]
 a6c:	cmp	x0, #0x400
 a70:	b.ls	a7c <ext2fs_image_bitmap_write+0x2ac>  // b.plast
 a74:	mov	x0, #0x400                 	// #1024
 a78:	str	x0, [sp, #1104]
 a7c:	add	x0, sp, #0x20
 a80:	ldr	x2, [sp, #1104]
 a84:	mov	x1, x0
 a88:	ldr	w0, [sp, #20]
 a8c:	bl	0 <write>
 a90:	str	x0, [sp, #1056]
 a94:	ldr	x0, [sp, #1056]
 a98:	cmp	x0, #0x0
 a9c:	b.ge	ab0 <ext2fs_image_bitmap_write+0x2e0>  // b.tcont
 aa0:	bl	0 <__errno_location>
 aa4:	ldr	w0, [x0]
 aa8:	sxtw	x0, w0
 aac:	b	aec <ext2fs_image_bitmap_write+0x31c>
 ab0:	ldr	x0, [sp, #1104]
 ab4:	ldr	x1, [sp, #1056]
 ab8:	cmp	x1, x0
 abc:	b.eq	acc <ext2fs_image_bitmap_write+0x2fc>  // b.none
 ac0:	mov	x0, #0xb725                	// #46885
 ac4:	movk	x0, #0x7f2b, lsl #16
 ac8:	b	aec <ext2fs_image_bitmap_write+0x31c>
 acc:	ldr	x1, [sp, #1080]
 ad0:	ldr	x0, [sp, #1104]
 ad4:	sub	x0, x1, x0
 ad8:	str	x0, [sp, #1080]
 adc:	ldr	x0, [sp, #1080]
 ae0:	cmp	x0, #0x0
 ae4:	b.ne	a60 <ext2fs_image_bitmap_write+0x290>  // b.any
 ae8:	mov	x0, #0x0                   	// #0
 aec:	ldp	x29, x30, [sp]
 af0:	add	sp, sp, #0x460
 af4:	ret

0000000000000af8 <ext2fs_image_bitmap_read>:
 af8:	sub	sp, sp, #0x450
 afc:	stp	x29, x30, [sp]
 b00:	mov	x29, sp
 b04:	str	x0, [sp, #24]
 b08:	str	w1, [sp, #20]
 b0c:	str	w2, [sp, #16]
 b10:	ldr	w0, [sp, #16]
 b14:	and	w0, w0, #0x1
 b18:	cmp	w0, #0x0
 b1c:	b.eq	b9c <ext2fs_image_bitmap_read+0xa4>  // b.none
 b20:	ldr	x0, [sp, #24]
 b24:	ldr	x0, [x0, #80]
 b28:	cmp	x0, #0x0
 b2c:	b.ne	b50 <ext2fs_image_bitmap_read+0x58>  // b.any
 b30:	ldr	x0, [sp, #24]
 b34:	bl	0 <ext2fs_read_inode_bitmap>
 b38:	str	x0, [sp, #1064]
 b3c:	ldr	x0, [sp, #1064]
 b40:	cmp	x0, #0x0
 b44:	b.eq	b50 <ext2fs_image_bitmap_read+0x58>  // b.none
 b48:	ldr	x0, [sp, #1064]
 b4c:	b	d20 <ext2fs_image_bitmap_read+0x228>
 b50:	ldr	x0, [sp, #24]
 b54:	ldr	x0, [x0, #80]
 b58:	str	x0, [sp, #1096]
 b5c:	mov	x0, #0x1                   	// #1
 b60:	str	x0, [sp, #1088]
 b64:	ldr	x0, [sp, #24]
 b68:	ldr	x0, [x0, #32]
 b6c:	ldr	w1, [x0, #40]
 b70:	ldr	x0, [sp, #24]
 b74:	ldr	w0, [x0, #48]
 b78:	mul	w0, w1, w0
 b7c:	mov	w0, w0
 b80:	str	x0, [sp, #1080]
 b84:	ldr	x0, [sp, #24]
 b88:	ldr	x0, [x0, #32]
 b8c:	ldr	w0, [x0, #40]
 b90:	lsr	w0, w0, #3
 b94:	str	w0, [sp, #1076]
 b98:	b	d10 <ext2fs_image_bitmap_read+0x218>
 b9c:	ldr	x0, [sp, #24]
 ba0:	ldr	x0, [x0, #88]
 ba4:	cmp	x0, #0x0
 ba8:	b.ne	bcc <ext2fs_image_bitmap_read+0xd4>  // b.any
 bac:	ldr	x0, [sp, #24]
 bb0:	bl	0 <ext2fs_read_block_bitmap>
 bb4:	str	x0, [sp, #1064]
 bb8:	ldr	x0, [sp, #1064]
 bbc:	cmp	x0, #0x0
 bc0:	b.eq	bcc <ext2fs_image_bitmap_read+0xd4>  // b.none
 bc4:	ldr	x0, [sp, #1064]
 bc8:	b	d20 <ext2fs_image_bitmap_read+0x228>
 bcc:	ldr	x0, [sp, #24]
 bd0:	ldr	x0, [x0, #88]
 bd4:	str	x0, [sp, #1096]
 bd8:	ldr	x0, [sp, #24]
 bdc:	ldr	x0, [x0, #32]
 be0:	ldr	w0, [x0, #20]
 be4:	mov	w0, w0
 be8:	str	x0, [sp, #1088]
 bec:	ldr	x0, [sp, #24]
 bf0:	ldr	x0, [x0, #32]
 bf4:	ldr	w0, [x0, #32]
 bf8:	mov	w1, w0
 bfc:	ldr	x0, [sp, #24]
 c00:	ldr	w0, [x0, #48]
 c04:	mov	w0, w0
 c08:	mul	x0, x1, x0
 c0c:	str	x0, [sp, #1080]
 c10:	ldr	x0, [sp, #24]
 c14:	ldr	x0, [x0, #32]
 c18:	ldr	w0, [x0, #32]
 c1c:	lsr	w0, w0, #3
 c20:	str	w0, [sp, #1076]
 c24:	b	d10 <ext2fs_image_bitmap_read+0x218>
 c28:	mov	w0, #0x400                 	// #1024
 c2c:	str	w0, [sp, #1076]
 c30:	ldr	w1, [sp, #1076]
 c34:	ldr	x0, [sp, #1080]
 c38:	lsr	x0, x0, #3
 c3c:	cmp	x1, x0
 c40:	b.ls	c50 <ext2fs_image_bitmap_read+0x158>  // b.plast
 c44:	ldr	x0, [sp, #1080]
 c48:	lsr	x0, x0, #3
 c4c:	str	w0, [sp, #1076]
 c50:	ldr	w1, [sp, #1076]
 c54:	add	x0, sp, #0x20
 c58:	mov	x2, x1
 c5c:	mov	x1, x0
 c60:	ldr	w0, [sp, #20]
 c64:	bl	0 <read>
 c68:	str	x0, [sp, #1056]
 c6c:	ldr	x0, [sp, #1056]
 c70:	cmn	x0, #0x1
 c74:	b.ne	c88 <ext2fs_image_bitmap_read+0x190>  // b.any
 c78:	bl	0 <__errno_location>
 c7c:	ldr	w0, [x0]
 c80:	sxtw	x0, w0
 c84:	b	d20 <ext2fs_image_bitmap_read+0x228>
 c88:	ldr	w0, [sp, #1076]
 c8c:	sxtw	x0, w0
 c90:	ldr	x1, [sp, #1056]
 c94:	cmp	x1, x0
 c98:	b.eq	ca8 <ext2fs_image_bitmap_read+0x1b0>  // b.none
 c9c:	mov	x0, #0xb724                	// #46884
 ca0:	movk	x0, #0x7f2b, lsl #16
 ca4:	b	d20 <ext2fs_image_bitmap_read+0x228>
 ca8:	ldr	w0, [sp, #1076]
 cac:	lsl	w0, w0, #3
 cb0:	add	x1, sp, #0x20
 cb4:	mov	x3, x1
 cb8:	mov	w2, w0
 cbc:	ldr	x1, [sp, #1088]
 cc0:	ldr	x0, [sp, #1096]
 cc4:	bl	0 <ext2fs_set_generic_bmap_range>
 cc8:	str	x0, [sp, #1064]
 ccc:	ldr	x0, [sp, #1064]
 cd0:	cmp	x0, #0x0
 cd4:	b.eq	ce0 <ext2fs_image_bitmap_read+0x1e8>  // b.none
 cd8:	ldr	x0, [sp, #1064]
 cdc:	b	d20 <ext2fs_image_bitmap_read+0x228>
 ce0:	ldr	w0, [sp, #1076]
 ce4:	lsl	w0, w0, #3
 ce8:	mov	w0, w0
 cec:	ldr	x1, [sp, #1088]
 cf0:	add	x0, x1, x0
 cf4:	str	x0, [sp, #1088]
 cf8:	ldr	w0, [sp, #1076]
 cfc:	lsl	w0, w0, #3
 d00:	mov	w0, w0
 d04:	ldr	x1, [sp, #1080]
 d08:	sub	x0, x1, x0
 d0c:	str	x0, [sp, #1080]
 d10:	ldr	x0, [sp, #1080]
 d14:	cmp	x0, #0x0
 d18:	b.ne	c28 <ext2fs_image_bitmap_read+0x130>  // b.any
 d1c:	mov	x0, #0x0                   	// #0
 d20:	ldp	x29, x30, [sp]
 d24:	add	sp, sp, #0x450
 d28:	ret

test_io.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <test_dump_block>:
       0:	stp	x29, x30, [sp, #-80]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	x1, [sp, #32]
      10:	str	x2, [sp, #24]
      14:	str	x3, [sp, #16]
      18:	ldr	x0, [sp, #32]
      1c:	ldr	x0, [x0, #24]
      20:	str	x0, [sp, #48]
      24:	str	xzr, [sp, #56]
      28:	str	wzr, [sp, #68]
      2c:	ldr	x0, [sp, #16]
      30:	str	x0, [sp, #72]
      34:	b	68 <test_dump_block+0x68>
      38:	ldr	x0, [sp, #72]
      3c:	ldrb	w0, [x0]
      40:	and	x0, x0, #0xff
      44:	ldr	x1, [sp, #56]
      48:	add	x0, x1, x0
      4c:	str	x0, [sp, #56]
      50:	ldr	w0, [sp, #68]
      54:	add	w0, w0, #0x1
      58:	str	w0, [sp, #68]
      5c:	ldr	x0, [sp, #72]
      60:	add	x0, x0, #0x1
      64:	str	x0, [sp, #72]
      68:	ldr	x0, [sp, #40]
      6c:	ldr	w0, [x0, #24]
      70:	ldr	w1, [sp, #68]
      74:	cmp	w1, w0
      78:	b.lt	38 <test_dump_block+0x38>  // b.tstop
      7c:	ldr	x3, [sp, #56]
      80:	ldr	x2, [sp, #24]
      84:	adrp	x0, 0 <test_dump_block>
      88:	add	x1, x0, #0x0
      8c:	ldr	x0, [sp, #48]
      90:	bl	0 <fprintf>
      94:	str	wzr, [sp, #68]
      98:	ldr	x0, [sp, #16]
      9c:	str	x0, [sp, #72]
      a0:	b	128 <test_dump_block+0x128>
      a4:	ldr	w0, [sp, #68]
      a8:	and	w0, w0, #0xf
      ac:	cmp	w0, #0x0
      b0:	b.ne	c8 <test_dump_block+0xc8>  // b.any
      b4:	ldr	w2, [sp, #68]
      b8:	adrp	x0, 0 <test_dump_block>
      bc:	add	x1, x0, #0x0
      c0:	ldr	x0, [sp, #48]
      c4:	bl	0 <fprintf>
      c8:	ldr	x0, [sp, #72]
      cc:	ldrb	w0, [x0]
      d0:	mov	w2, w0
      d4:	ldr	w0, [sp, #68]
      d8:	negs	w1, w0
      dc:	and	w0, w0, #0xf
      e0:	and	w1, w1, #0xf
      e4:	csneg	w0, w0, w1, mi  // mi = first
      e8:	cmp	w0, #0xf
      ec:	b.ne	f8 <test_dump_block+0xf8>  // b.any
      f0:	mov	w0, #0xa                   	// #10
      f4:	b	fc <test_dump_block+0xfc>
      f8:	mov	w0, #0x20                  	// #32
      fc:	mov	w3, w0
     100:	adrp	x0, 0 <test_dump_block>
     104:	add	x1, x0, #0x0
     108:	ldr	x0, [sp, #48]
     10c:	bl	0 <fprintf>
     110:	ldr	w0, [sp, #68]
     114:	add	w0, w0, #0x1
     118:	str	w0, [sp, #68]
     11c:	ldr	x0, [sp, #72]
     120:	add	x0, x0, #0x1
     124:	str	x0, [sp, #72]
     128:	ldr	x0, [sp, #40]
     12c:	ldr	w0, [x0, #24]
     130:	ldr	w1, [sp, #68]
     134:	cmp	w1, w0
     138:	b.lt	a4 <test_dump_block+0xa4>  // b.tstop
     13c:	nop
     140:	nop
     144:	ldp	x29, x30, [sp], #80
     148:	ret

000000000000014c <test_flush>:
     14c:	stp	x29, x30, [sp, #-64]!
     150:	mov	x29, sp
     154:	str	x19, [sp, #16]
     158:	str	x0, [sp, #40]
     15c:	str	xzr, [sp, #56]
     160:	ldr	x0, [sp, #40]
     164:	ldr	x1, [x0]
     168:	mov	x0, #0xb705                	// #46853
     16c:	movk	x0, #0x7f2b, lsl #16
     170:	cmp	x1, x0
     174:	b.eq	184 <test_flush+0x38>  // b.none
     178:	mov	x0, #0xb705                	// #46853
     17c:	movk	x0, #0x7f2b, lsl #16
     180:	b	238 <test_flush+0xec>
     184:	ldr	x0, [sp, #40]
     188:	ldr	x0, [x0, #168]
     18c:	str	x0, [sp, #48]
     190:	ldr	x0, [sp, #48]
     194:	ldr	w1, [x0]
     198:	mov	w0, #0xb70b                	// #46859
     19c:	movk	w0, #0x7f2b, lsl #16
     1a0:	cmp	w1, w0
     1a4:	b.eq	1b4 <test_flush+0x68>  // b.none
     1a8:	mov	x0, #0xb70b                	// #46859
     1ac:	movk	x0, #0x7f2b, lsl #16
     1b0:	b	238 <test_flush+0xec>
     1b4:	ldr	x0, [sp, #48]
     1b8:	ldr	x0, [x0, #8]
     1bc:	cmp	x0, #0x0
     1c0:	b.eq	1e4 <test_flush+0x98>  // b.none
     1c4:	ldr	x0, [sp, #48]
     1c8:	ldr	x0, [x0, #8]
     1cc:	ldr	x0, [x0, #8]
     1d0:	ldr	x1, [x0, #56]
     1d4:	ldr	x0, [sp, #48]
     1d8:	ldr	x0, [x0, #8]
     1dc:	blr	x1
     1e0:	str	x0, [sp, #56]
     1e4:	ldr	x0, [sp, #48]
     1e8:	ldr	w0, [x0, #16]
     1ec:	and	w0, w0, #0x8
     1f0:	cmp	w0, #0x0
     1f4:	b.eq	234 <test_flush+0xe8>  // b.none
     1f8:	ldr	x0, [sp, #48]
     1fc:	ldr	x19, [x0, #24]
     200:	ldr	x0, [sp, #56]
     204:	cmp	x0, #0x0
     208:	b.eq	218 <test_flush+0xcc>  // b.none
     20c:	ldr	x0, [sp, #56]
     210:	bl	0 <error_message>
     214:	b	220 <test_flush+0xd4>
     218:	adrp	x0, 0 <test_dump_block>
     21c:	add	x0, x0, #0x0
     220:	mov	x2, x0
     224:	adrp	x0, 0 <test_dump_block>
     228:	add	x1, x0, #0x0
     22c:	mov	x0, x19
     230:	bl	0 <fprintf>
     234:	ldr	x0, [sp, #56]
     238:	ldr	x19, [sp, #16]
     23c:	ldp	x29, x30, [sp], #64
     240:	ret

0000000000000244 <test_abort>:
     244:	stp	x29, x30, [sp, #-48]!
     248:	mov	x29, sp
     24c:	str	x0, [sp, #24]
     250:	str	x1, [sp, #16]
     254:	ldr	x0, [sp, #24]
     258:	ldr	x0, [x0, #168]
     25c:	str	x0, [sp, #40]
     260:	ldr	x0, [sp, #40]
     264:	ldr	x0, [x0, #24]
     268:	str	x0, [sp, #32]
     26c:	ldr	x0, [sp, #24]
     270:	bl	14c <test_flush>
     274:	ldr	x2, [sp, #16]
     278:	adrp	x0, 0 <test_dump_block>
     27c:	add	x1, x0, #0x0
     280:	ldr	x0, [sp, #32]
     284:	bl	0 <fprintf>
     288:	ldr	x0, [sp, #32]
     28c:	bl	0 <fflush>
     290:	bl	0 <abort>

0000000000000294 <safe_getenv>:
     294:	stp	x29, x30, [sp, #-48]!
     298:	mov	x29, sp
     29c:	str	x19, [sp, #16]
     2a0:	str	x0, [sp, #40]
     2a4:	bl	0 <getuid>
     2a8:	mov	w19, w0
     2ac:	bl	0 <geteuid>
     2b0:	cmp	w19, w0
     2b4:	b.ne	2cc <safe_getenv+0x38>  // b.any
     2b8:	bl	0 <getgid>
     2bc:	mov	w19, w0
     2c0:	bl	0 <getegid>
     2c4:	cmp	w19, w0
     2c8:	b.eq	2d4 <safe_getenv+0x40>  // b.none
     2cc:	mov	x0, #0x0                   	// #0
     2d0:	b	304 <safe_getenv+0x70>
     2d4:	mov	w4, #0x0                   	// #0
     2d8:	mov	w3, #0x0                   	// #0
     2dc:	mov	w2, #0x0                   	// #0
     2e0:	mov	w1, #0x0                   	// #0
     2e4:	mov	w0, #0x3                   	// #3
     2e8:	bl	0 <prctl>
     2ec:	cmp	w0, #0x0
     2f0:	b.ne	2fc <safe_getenv+0x68>  // b.any
     2f4:	mov	x0, #0x0                   	// #0
     2f8:	b	304 <safe_getenv+0x70>
     2fc:	ldr	x0, [sp, #40]
     300:	bl	0 <secure_getenv>
     304:	ldr	x19, [sp, #16]
     308:	ldp	x29, x30, [sp], #48
     30c:	ret

0000000000000310 <test_open>:
     310:	stp	x29, x30, [sp, #-96]!
     314:	mov	x29, sp
     318:	str	x19, [sp, #16]
     31c:	str	x0, [sp, #56]
     320:	str	w1, [sp, #52]
     324:	str	x2, [sp, #40]
     328:	str	xzr, [sp, #72]
     32c:	str	xzr, [sp, #64]
     330:	ldr	x0, [sp, #56]
     334:	cmp	x0, #0x0
     338:	b.ne	348 <test_open+0x38>  // b.any
     33c:	mov	x0, #0xb73a                	// #46906
     340:	movk	x0, #0x7f2b, lsl #16
     344:	b	6f4 <test_open+0x3e4>
     348:	add	x0, sp, #0x48
     34c:	mov	x1, x0
     350:	mov	x0, #0xc0                  	// #192
     354:	bl	0 <ext2fs_get_mem>
     358:	str	x0, [sp, #88]
     35c:	ldr	x0, [sp, #88]
     360:	cmp	x0, #0x0
     364:	b.ne	6b4 <test_open+0x3a4>  // b.any
     368:	ldr	x0, [sp, #72]
     36c:	mov	x2, #0xc0                  	// #192
     370:	mov	w1, #0x0                   	// #0
     374:	bl	0 <memset>
     378:	ldr	x0, [sp, #72]
     37c:	mov	x1, #0xb705                	// #46853
     380:	movk	x1, #0x7f2b, lsl #16
     384:	str	x1, [x0]
     388:	add	x0, sp, #0x40
     38c:	mov	x1, x0
     390:	mov	x0, #0x60                  	// #96
     394:	bl	0 <ext2fs_get_mem>
     398:	str	x0, [sp, #88]
     39c:	ldr	x0, [sp, #88]
     3a0:	cmp	x0, #0x0
     3a4:	b.ne	6bc <test_open+0x3ac>  // b.any
     3a8:	ldr	x0, [sp, #72]
     3ac:	adrp	x1, f0 <test_dump_block+0xf0>
     3b0:	add	x1, x1, #0x0
     3b4:	ldr	x1, [x1]
     3b8:	str	x1, [x0, #8]
     3bc:	ldr	x0, [sp, #56]
     3c0:	bl	0 <strlen>
     3c4:	add	x2, x0, #0x1
     3c8:	ldr	x0, [sp, #72]
     3cc:	add	x0, x0, #0x10
     3d0:	mov	x1, x0
     3d4:	mov	x0, x2
     3d8:	bl	0 <ext2fs_get_mem>
     3dc:	str	x0, [sp, #88]
     3e0:	ldr	x0, [sp, #88]
     3e4:	cmp	x0, #0x0
     3e8:	b.ne	6c4 <test_open+0x3b4>  // b.any
     3ec:	ldr	x0, [sp, #72]
     3f0:	ldr	x0, [x0, #16]
     3f4:	ldr	x1, [sp, #56]
     3f8:	bl	0 <strcpy>
     3fc:	ldr	x0, [sp, #72]
     400:	ldr	x1, [sp, #64]
     404:	str	x1, [x0, #168]
     408:	ldr	x0, [sp, #72]
     40c:	mov	w1, #0x400                 	// #1024
     410:	str	w1, [x0, #24]
     414:	ldr	x0, [sp, #72]
     418:	str	xzr, [x0, #32]
     41c:	ldr	x0, [sp, #72]
     420:	str	xzr, [x0, #40]
     424:	ldr	x0, [sp, #72]
     428:	mov	w1, #0x1                   	// #1
     42c:	str	w1, [x0, #48]
     430:	ldr	x0, [sp, #64]
     434:	mov	x2, #0x60                  	// #96
     438:	mov	w1, #0x0                   	// #0
     43c:	bl	0 <memset>
     440:	ldr	x0, [sp, #64]
     444:	mov	w1, #0xb70b                	// #46859
     448:	movk	w1, #0x7f2b, lsl #16
     44c:	str	w1, [x0]
     450:	adrp	x0, 0 <test_dump_block>
     454:	add	x0, x0, #0x0
     458:	ldr	x0, [x0]
     45c:	cmp	x0, #0x0
     460:	b.eq	4a0 <test_open+0x190>  // b.none
     464:	adrp	x0, 0 <test_dump_block>
     468:	add	x0, x0, #0x0
     46c:	ldr	x0, [x0]
     470:	ldr	x3, [x0, #16]
     474:	ldr	x0, [sp, #64]
     478:	add	x0, x0, #0x8
     47c:	mov	x2, x0
     480:	ldr	w1, [sp, #52]
     484:	ldr	x0, [sp, #56]
     488:	blr	x3
     48c:	str	x0, [sp, #88]
     490:	ldr	x0, [sp, #88]
     494:	cmp	x0, #0x0
     498:	b.eq	4a8 <test_open+0x198>  // b.none
     49c:	b	6c8 <test_open+0x3b8>
     4a0:	ldr	x0, [sp, #64]
     4a4:	str	xzr, [x0, #8]
     4a8:	ldr	x0, [sp, #64]
     4ac:	adrp	x1, 8 <test_dump_block+0x8>
     4b0:	add	x1, x1, #0x0
     4b4:	ldr	x1, [x1]
     4b8:	str	x1, [x0, #48]
     4bc:	ldr	x0, [sp, #64]
     4c0:	adrp	x1, 10 <test_dump_block+0x10>
     4c4:	add	x1, x1, #0x0
     4c8:	ldr	x1, [x1]
     4cc:	str	x1, [x0, #56]
     4d0:	ldr	x0, [sp, #64]
     4d4:	adrp	x1, 28 <test_dump_block+0x28>
     4d8:	add	x1, x1, #0x0
     4dc:	ldr	x1, [x1]
     4e0:	str	x1, [x0, #64]
     4e4:	ldr	x0, [sp, #64]
     4e8:	adrp	x1, 30 <test_dump_block+0x30>
     4ec:	add	x1, x1, #0x0
     4f0:	ldr	x1, [x1]
     4f4:	str	x1, [x0, #72]
     4f8:	ldr	x0, [sp, #64]
     4fc:	adrp	x1, 18 <test_dump_block+0x18>
     500:	add	x1, x1, #0x0
     504:	ldr	x1, [x1]
     508:	str	x1, [x0, #80]
     50c:	ldr	x0, [sp, #64]
     510:	adrp	x1, 20 <test_dump_block+0x20>
     514:	add	x1, x1, #0x0
     518:	ldr	x1, [x1]
     51c:	str	x1, [x0, #88]
     520:	ldr	x0, [sp, #64]
     524:	str	xzr, [x0, #24]
     528:	adrp	x0, 0 <test_dump_block>
     52c:	add	x0, x0, #0x0
     530:	bl	294 <safe_getenv>
     534:	str	x0, [sp, #80]
     538:	ldr	x0, [sp, #80]
     53c:	cmp	x0, #0x0
     540:	b.eq	55c <test_open+0x24c>  // b.none
     544:	ldr	x19, [sp, #64]
     548:	adrp	x0, 0 <test_dump_block>
     54c:	add	x1, x0, #0x0
     550:	ldr	x0, [sp, #80]
     554:	bl	0 <fopen>
     558:	str	x0, [x19, #24]
     55c:	ldr	x0, [sp, #64]
     560:	ldr	x0, [x0, #24]
     564:	cmp	x0, #0x0
     568:	b.ne	580 <test_open+0x270>  // b.any
     56c:	ldr	x0, [sp, #64]
     570:	adrp	x1, 0 <stderr>
     574:	add	x1, x1, #0x0
     578:	ldr	x1, [x1]
     57c:	str	x1, [x0, #24]
     580:	ldr	x0, [sp, #64]
     584:	str	wzr, [x0, #16]
     588:	adrp	x0, 0 <test_dump_block>
     58c:	add	x0, x0, #0x0
     590:	bl	294 <safe_getenv>
     594:	str	x0, [sp, #80]
     598:	ldr	x0, [sp, #80]
     59c:	cmp	x0, #0x0
     5a0:	b.eq	5c0 <test_open+0x2b0>  // b.none
     5a4:	mov	w2, #0x0                   	// #0
     5a8:	mov	x1, #0x0                   	// #0
     5ac:	ldr	x0, [sp, #80]
     5b0:	bl	0 <strtoul>
     5b4:	mov	x1, x0
     5b8:	ldr	x0, [sp, #64]
     5bc:	str	w1, [x0, #16]
     5c0:	ldr	x0, [sp, #64]
     5c4:	str	xzr, [x0, #32]
     5c8:	adrp	x0, 0 <test_dump_block>
     5cc:	add	x0, x0, #0x0
     5d0:	bl	294 <safe_getenv>
     5d4:	str	x0, [sp, #80]
     5d8:	ldr	x0, [sp, #80]
     5dc:	cmp	x0, #0x0
     5e0:	b.eq	5fc <test_open+0x2ec>  // b.none
     5e4:	ldr	x19, [sp, #64]
     5e8:	mov	w2, #0x0                   	// #0
     5ec:	mov	x1, #0x0                   	// #0
     5f0:	ldr	x0, [sp, #80]
     5f4:	bl	0 <strtoul>
     5f8:	str	x0, [x19, #32]
     5fc:	ldr	x0, [sp, #64]
     600:	str	wzr, [x0, #40]
     604:	adrp	x0, 0 <test_dump_block>
     608:	add	x0, x0, #0x0
     60c:	bl	294 <safe_getenv>
     610:	str	x0, [sp, #80]
     614:	ldr	x0, [sp, #80]
     618:	cmp	x0, #0x0
     61c:	b.eq	63c <test_open+0x32c>  // b.none
     620:	mov	w2, #0x0                   	// #0
     624:	mov	x1, #0x0                   	// #0
     628:	ldr	x0, [sp, #80]
     62c:	bl	0 <strtoul>
     630:	mov	x1, x0
     634:	ldr	x0, [sp, #64]
     638:	str	w1, [x0, #40]
     63c:	ldr	x0, [sp, #64]
     640:	str	wzr, [x0, #44]
     644:	adrp	x0, 0 <test_dump_block>
     648:	add	x0, x0, #0x0
     64c:	bl	294 <safe_getenv>
     650:	str	x0, [sp, #80]
     654:	ldr	x0, [sp, #80]
     658:	cmp	x0, #0x0
     65c:	b.eq	67c <test_open+0x36c>  // b.none
     660:	mov	w2, #0x0                   	// #0
     664:	mov	x1, #0x0                   	// #0
     668:	ldr	x0, [sp, #80]
     66c:	bl	0 <strtoul>
     670:	mov	x1, x0
     674:	ldr	x0, [sp, #64]
     678:	str	w1, [x0, #44]
     67c:	ldr	x0, [sp, #64]
     680:	ldr	x0, [x0, #8]
     684:	cmp	x0, #0x0
     688:	b.eq	6a0 <test_open+0x390>  // b.none
     68c:	ldr	x0, [sp, #64]
     690:	ldr	x1, [x0, #8]
     694:	ldr	x0, [sp, #72]
     698:	ldr	w1, [x1, #184]
     69c:	str	w1, [x0, #184]
     6a0:	ldr	x1, [sp, #72]
     6a4:	ldr	x0, [sp, #40]
     6a8:	str	x1, [x0]
     6ac:	mov	x0, #0x0                   	// #0
     6b0:	b	6f4 <test_open+0x3e4>
     6b4:	nop
     6b8:	b	6c8 <test_open+0x3b8>
     6bc:	nop
     6c0:	b	6c8 <test_open+0x3b8>
     6c4:	nop
     6c8:	ldr	x0, [sp, #72]
     6cc:	cmp	x0, #0x0
     6d0:	b.eq	6dc <test_open+0x3cc>  // b.none
     6d4:	add	x0, sp, #0x48
     6d8:	bl	0 <ext2fs_free_mem>
     6dc:	ldr	x0, [sp, #64]
     6e0:	cmp	x0, #0x0
     6e4:	b.eq	6f0 <test_open+0x3e0>  // b.none
     6e8:	add	x0, sp, #0x40
     6ec:	bl	0 <ext2fs_free_mem>
     6f0:	ldr	x0, [sp, #88]
     6f4:	ldr	x19, [sp, #16]
     6f8:	ldp	x29, x30, [sp], #96
     6fc:	ret

0000000000000700 <test_close>:
     700:	stp	x29, x30, [sp, #-48]!
     704:	mov	x29, sp
     708:	str	x0, [sp, #24]
     70c:	str	xzr, [sp, #40]
     710:	ldr	x0, [sp, #24]
     714:	ldr	x1, [x0]
     718:	mov	x0, #0xb705                	// #46853
     71c:	movk	x0, #0x7f2b, lsl #16
     720:	cmp	x1, x0
     724:	b.eq	734 <test_close+0x34>  // b.none
     728:	mov	x0, #0xb705                	// #46853
     72c:	movk	x0, #0x7f2b, lsl #16
     730:	b	824 <test_close+0x124>
     734:	ldr	x0, [sp, #24]
     738:	ldr	x0, [x0, #168]
     73c:	str	x0, [sp, #32]
     740:	ldr	x0, [sp, #32]
     744:	ldr	w1, [x0]
     748:	mov	w0, #0xb70b                	// #46859
     74c:	movk	w0, #0x7f2b, lsl #16
     750:	cmp	w1, w0
     754:	b.eq	764 <test_close+0x64>  // b.none
     758:	mov	x0, #0xb70b                	// #46859
     75c:	movk	x0, #0x7f2b, lsl #16
     760:	b	824 <test_close+0x124>
     764:	ldr	x0, [sp, #24]
     768:	ldr	w1, [x0, #48]
     76c:	sub	w1, w1, #0x1
     770:	str	w1, [x0, #48]
     774:	ldr	w0, [x0, #48]
     778:	cmp	w0, #0x0
     77c:	b.le	788 <test_close+0x88>
     780:	mov	x0, #0x0                   	// #0
     784:	b	824 <test_close+0x124>
     788:	ldr	x0, [sp, #32]
     78c:	ldr	x0, [x0, #8]
     790:	cmp	x0, #0x0
     794:	b.eq	7b8 <test_close+0xb8>  // b.none
     798:	ldr	x0, [sp, #32]
     79c:	ldr	x0, [x0, #8]
     7a0:	ldr	x0, [x0, #8]
     7a4:	ldr	x1, [x0, #24]
     7a8:	ldr	x0, [sp, #32]
     7ac:	ldr	x0, [x0, #8]
     7b0:	blr	x1
     7b4:	str	x0, [sp, #40]
     7b8:	ldr	x0, [sp, #32]
     7bc:	ldr	x0, [x0, #24]
     7c0:	cmp	x0, #0x0
     7c4:	b.eq	7f0 <test_close+0xf0>  // b.none
     7c8:	ldr	x0, [sp, #32]
     7cc:	ldr	x1, [x0, #24]
     7d0:	adrp	x0, 0 <stderr>
     7d4:	add	x0, x0, #0x0
     7d8:	ldr	x0, [x0]
     7dc:	cmp	x1, x0
     7e0:	b.eq	7f0 <test_close+0xf0>  // b.none
     7e4:	ldr	x0, [sp, #32]
     7e8:	ldr	x0, [x0, #24]
     7ec:	bl	0 <fclose>
     7f0:	ldr	x0, [sp, #24]
     7f4:	add	x0, x0, #0xa8
     7f8:	bl	0 <ext2fs_free_mem>
     7fc:	ldr	x0, [sp, #24]
     800:	ldr	x0, [x0, #16]
     804:	cmp	x0, #0x0
     808:	b.eq	818 <test_close+0x118>  // b.none
     80c:	ldr	x0, [sp, #24]
     810:	add	x0, x0, #0x10
     814:	bl	0 <ext2fs_free_mem>
     818:	add	x0, sp, #0x18
     81c:	bl	0 <ext2fs_free_mem>
     820:	ldr	x0, [sp, #40]
     824:	ldp	x29, x30, [sp], #48
     828:	ret

000000000000082c <test_set_blksize>:
     82c:	stp	x29, x30, [sp, #-64]!
     830:	mov	x29, sp
     834:	str	x19, [sp, #16]
     838:	str	x0, [sp, #40]
     83c:	str	w1, [sp, #36]
     840:	str	xzr, [sp, #56]
     844:	ldr	x0, [sp, #40]
     848:	ldr	x1, [x0]
     84c:	mov	x0, #0xb705                	// #46853
     850:	movk	x0, #0x7f2b, lsl #16
     854:	cmp	x1, x0
     858:	b.eq	868 <test_set_blksize+0x3c>  // b.none
     85c:	mov	x0, #0xb705                	// #46853
     860:	movk	x0, #0x7f2b, lsl #16
     864:	b	968 <test_set_blksize+0x13c>
     868:	ldr	x0, [sp, #40]
     86c:	ldr	x0, [x0, #168]
     870:	str	x0, [sp, #48]
     874:	ldr	x0, [sp, #48]
     878:	ldr	w1, [x0]
     87c:	mov	w0, #0xb70b                	// #46859
     880:	movk	w0, #0x7f2b, lsl #16
     884:	cmp	w1, w0
     888:	b.eq	898 <test_set_blksize+0x6c>  // b.none
     88c:	mov	x0, #0xb70b                	// #46859
     890:	movk	x0, #0x7f2b, lsl #16
     894:	b	968 <test_set_blksize+0x13c>
     898:	ldr	x0, [sp, #48]
     89c:	ldr	x0, [x0, #8]
     8a0:	cmp	x0, #0x0
     8a4:	b.eq	8e0 <test_set_blksize+0xb4>  // b.none
     8a8:	ldr	x0, [sp, #48]
     8ac:	ldr	x0, [x0, #8]
     8b0:	ldr	x0, [x0, #8]
     8b4:	ldr	x2, [x0, #32]
     8b8:	ldr	x0, [sp, #48]
     8bc:	ldr	x0, [x0, #8]
     8c0:	ldr	w1, [sp, #36]
     8c4:	blr	x2
     8c8:	str	x0, [sp, #56]
     8cc:	ldr	x0, [sp, #48]
     8d0:	ldr	x0, [x0, #8]
     8d4:	ldr	w1, [x0, #184]
     8d8:	ldr	x0, [sp, #40]
     8dc:	str	w1, [x0, #184]
     8e0:	ldr	x0, [sp, #48]
     8e4:	ldr	x0, [x0, #64]
     8e8:	cmp	x0, #0x0
     8ec:	b.eq	904 <test_set_blksize+0xd8>  // b.none
     8f0:	ldr	x0, [sp, #48]
     8f4:	ldr	x2, [x0, #64]
     8f8:	ldr	x1, [sp, #56]
     8fc:	ldr	w0, [sp, #36]
     900:	blr	x2
     904:	ldr	x0, [sp, #48]
     908:	ldr	w0, [x0, #16]
     90c:	and	w0, w0, #0x4
     910:	cmp	w0, #0x0
     914:	b.eq	958 <test_set_blksize+0x12c>  // b.none
     918:	ldr	x0, [sp, #48]
     91c:	ldr	x19, [x0, #24]
     920:	ldr	x0, [sp, #56]
     924:	cmp	x0, #0x0
     928:	b.eq	938 <test_set_blksize+0x10c>  // b.none
     92c:	ldr	x0, [sp, #56]
     930:	bl	0 <error_message>
     934:	b	940 <test_set_blksize+0x114>
     938:	adrp	x0, 0 <test_dump_block>
     93c:	add	x0, x0, #0x0
     940:	mov	x3, x0
     944:	ldr	w2, [sp, #36]
     948:	adrp	x0, 0 <test_dump_block>
     94c:	add	x1, x0, #0x0
     950:	mov	x0, x19
     954:	bl	0 <fprintf>
     958:	ldr	x0, [sp, #40]
     95c:	ldr	w1, [sp, #36]
     960:	str	w1, [x0, #24]
     964:	ldr	x0, [sp, #56]
     968:	ldr	x19, [sp, #16]
     96c:	ldp	x29, x30, [sp], #64
     970:	ret

0000000000000974 <test_read_blk>:
     974:	stp	x29, x30, [sp, #-80]!
     978:	mov	x29, sp
     97c:	str	x19, [sp, #16]
     980:	str	x0, [sp, #56]
     984:	str	x1, [sp, #48]
     988:	str	w2, [sp, #44]
     98c:	str	x3, [sp, #32]
     990:	str	xzr, [sp, #72]
     994:	ldr	x0, [sp, #56]
     998:	ldr	x1, [x0]
     99c:	mov	x0, #0xb705                	// #46853
     9a0:	movk	x0, #0x7f2b, lsl #16
     9a4:	cmp	x1, x0
     9a8:	b.eq	9b8 <test_read_blk+0x44>  // b.none
     9ac:	mov	x0, #0xb705                	// #46853
     9b0:	movk	x0, #0x7f2b, lsl #16
     9b4:	b	b24 <test_read_blk+0x1b0>
     9b8:	ldr	x0, [sp, #56]
     9bc:	ldr	x0, [x0, #168]
     9c0:	str	x0, [sp, #64]
     9c4:	ldr	x0, [sp, #64]
     9c8:	ldr	w1, [x0]
     9cc:	mov	w0, #0xb70b                	// #46859
     9d0:	movk	w0, #0x7f2b, lsl #16
     9d4:	cmp	w1, w0
     9d8:	b.eq	9e8 <test_read_blk+0x74>  // b.none
     9dc:	mov	x0, #0xb70b                	// #46859
     9e0:	movk	x0, #0x7f2b, lsl #16
     9e4:	b	b24 <test_read_blk+0x1b0>
     9e8:	ldr	x0, [sp, #64]
     9ec:	ldr	x0, [x0, #8]
     9f0:	cmp	x0, #0x0
     9f4:	b.eq	a24 <test_read_blk+0xb0>  // b.none
     9f8:	ldr	x0, [sp, #64]
     9fc:	ldr	x0, [x0, #8]
     a00:	ldr	x0, [x0, #8]
     a04:	ldr	x4, [x0, #40]
     a08:	ldr	x0, [sp, #64]
     a0c:	ldr	x0, [x0, #8]
     a10:	ldr	x3, [sp, #32]
     a14:	ldr	w2, [sp, #44]
     a18:	ldr	x1, [sp, #48]
     a1c:	blr	x4
     a20:	str	x0, [sp, #72]
     a24:	ldr	x0, [sp, #64]
     a28:	ldr	x0, [x0, #48]
     a2c:	cmp	x0, #0x0
     a30:	b.eq	a4c <test_read_blk+0xd8>  // b.none
     a34:	ldr	x0, [sp, #64]
     a38:	ldr	x3, [x0, #48]
     a3c:	ldr	x2, [sp, #72]
     a40:	ldr	w1, [sp, #44]
     a44:	ldr	x0, [sp, #48]
     a48:	blr	x3
     a4c:	ldr	x0, [sp, #64]
     a50:	ldr	w0, [x0, #16]
     a54:	and	w0, w0, #0x1
     a58:	cmp	w0, #0x0
     a5c:	b.eq	aa4 <test_read_blk+0x130>  // b.none
     a60:	ldr	x0, [sp, #64]
     a64:	ldr	x19, [x0, #24]
     a68:	ldr	x0, [sp, #72]
     a6c:	cmp	x0, #0x0
     a70:	b.eq	a80 <test_read_blk+0x10c>  // b.none
     a74:	ldr	x0, [sp, #72]
     a78:	bl	0 <error_message>
     a7c:	b	a88 <test_read_blk+0x114>
     a80:	adrp	x0, 0 <test_dump_block>
     a84:	add	x0, x0, #0x0
     a88:	mov	x4, x0
     a8c:	ldr	w3, [sp, #44]
     a90:	ldr	x2, [sp, #48]
     a94:	adrp	x0, 0 <test_dump_block>
     a98:	add	x1, x0, #0x0
     a9c:	mov	x0, x19
     aa0:	bl	0 <fprintf>
     aa4:	ldr	x0, [sp, #64]
     aa8:	ldr	x0, [x0, #32]
     aac:	cmp	x0, #0x0
     ab0:	b.eq	b20 <test_read_blk+0x1ac>  // b.none
     ab4:	ldr	x0, [sp, #64]
     ab8:	ldr	x0, [x0, #32]
     abc:	ldr	x1, [sp, #48]
     ac0:	cmp	x1, x0
     ac4:	b.ne	b20 <test_read_blk+0x1ac>  // b.any
     ac8:	ldr	x0, [sp, #64]
     acc:	ldr	w0, [x0, #16]
     ad0:	and	w0, w0, #0x10
     ad4:	cmp	w0, #0x0
     ad8:	b.eq	af0 <test_read_blk+0x17c>  // b.none
     adc:	ldr	x3, [sp, #32]
     ae0:	ldr	x2, [sp, #48]
     ae4:	ldr	x1, [sp, #64]
     ae8:	ldr	x0, [sp, #56]
     aec:	bl	0 <test_dump_block>
     af0:	ldr	x0, [sp, #64]
     af4:	ldr	w0, [x0, #40]
     af8:	sub	w1, w0, #0x1
     afc:	ldr	x0, [sp, #64]
     b00:	str	w1, [x0, #40]
     b04:	ldr	x0, [sp, #64]
     b08:	ldr	w0, [x0, #40]
     b0c:	cmp	w0, #0x0
     b10:	b.ne	b20 <test_read_blk+0x1ac>  // b.any
     b14:	ldr	x1, [sp, #48]
     b18:	ldr	x0, [sp, #56]
     b1c:	bl	244 <test_abort>
     b20:	ldr	x0, [sp, #72]
     b24:	ldr	x19, [sp, #16]
     b28:	ldp	x29, x30, [sp], #80
     b2c:	ret

0000000000000b30 <test_write_blk>:
     b30:	stp	x29, x30, [sp, #-80]!
     b34:	mov	x29, sp
     b38:	str	x19, [sp, #16]
     b3c:	str	x0, [sp, #56]
     b40:	str	x1, [sp, #48]
     b44:	str	w2, [sp, #44]
     b48:	str	x3, [sp, #32]
     b4c:	str	xzr, [sp, #72]
     b50:	ldr	x0, [sp, #56]
     b54:	ldr	x1, [x0]
     b58:	mov	x0, #0xb705                	// #46853
     b5c:	movk	x0, #0x7f2b, lsl #16
     b60:	cmp	x1, x0
     b64:	b.eq	b74 <test_write_blk+0x44>  // b.none
     b68:	mov	x0, #0xb705                	// #46853
     b6c:	movk	x0, #0x7f2b, lsl #16
     b70:	b	ce0 <test_write_blk+0x1b0>
     b74:	ldr	x0, [sp, #56]
     b78:	ldr	x0, [x0, #168]
     b7c:	str	x0, [sp, #64]
     b80:	ldr	x0, [sp, #64]
     b84:	ldr	w1, [x0]
     b88:	mov	w0, #0xb70b                	// #46859
     b8c:	movk	w0, #0x7f2b, lsl #16
     b90:	cmp	w1, w0
     b94:	b.eq	ba4 <test_write_blk+0x74>  // b.none
     b98:	mov	x0, #0xb70b                	// #46859
     b9c:	movk	x0, #0x7f2b, lsl #16
     ba0:	b	ce0 <test_write_blk+0x1b0>
     ba4:	ldr	x0, [sp, #64]
     ba8:	ldr	x0, [x0, #8]
     bac:	cmp	x0, #0x0
     bb0:	b.eq	be0 <test_write_blk+0xb0>  // b.none
     bb4:	ldr	x0, [sp, #64]
     bb8:	ldr	x0, [x0, #8]
     bbc:	ldr	x0, [x0, #8]
     bc0:	ldr	x4, [x0, #48]
     bc4:	ldr	x0, [sp, #64]
     bc8:	ldr	x0, [x0, #8]
     bcc:	ldr	x3, [sp, #32]
     bd0:	ldr	w2, [sp, #44]
     bd4:	ldr	x1, [sp, #48]
     bd8:	blr	x4
     bdc:	str	x0, [sp, #72]
     be0:	ldr	x0, [sp, #64]
     be4:	ldr	x0, [x0, #56]
     be8:	cmp	x0, #0x0
     bec:	b.eq	c08 <test_write_blk+0xd8>  // b.none
     bf0:	ldr	x0, [sp, #64]
     bf4:	ldr	x3, [x0, #56]
     bf8:	ldr	x2, [sp, #72]
     bfc:	ldr	w1, [sp, #44]
     c00:	ldr	x0, [sp, #48]
     c04:	blr	x3
     c08:	ldr	x0, [sp, #64]
     c0c:	ldr	w0, [x0, #16]
     c10:	and	w0, w0, #0x2
     c14:	cmp	w0, #0x0
     c18:	b.eq	c60 <test_write_blk+0x130>  // b.none
     c1c:	ldr	x0, [sp, #64]
     c20:	ldr	x19, [x0, #24]
     c24:	ldr	x0, [sp, #72]
     c28:	cmp	x0, #0x0
     c2c:	b.eq	c3c <test_write_blk+0x10c>  // b.none
     c30:	ldr	x0, [sp, #72]
     c34:	bl	0 <error_message>
     c38:	b	c44 <test_write_blk+0x114>
     c3c:	adrp	x0, 0 <test_dump_block>
     c40:	add	x0, x0, #0x0
     c44:	mov	x4, x0
     c48:	ldr	w3, [sp, #44]
     c4c:	ldr	x2, [sp, #48]
     c50:	adrp	x0, 0 <test_dump_block>
     c54:	add	x1, x0, #0x0
     c58:	mov	x0, x19
     c5c:	bl	0 <fprintf>
     c60:	ldr	x0, [sp, #64]
     c64:	ldr	x0, [x0, #32]
     c68:	cmp	x0, #0x0
     c6c:	b.eq	cdc <test_write_blk+0x1ac>  // b.none
     c70:	ldr	x0, [sp, #64]
     c74:	ldr	x0, [x0, #32]
     c78:	ldr	x1, [sp, #48]
     c7c:	cmp	x1, x0
     c80:	b.ne	cdc <test_write_blk+0x1ac>  // b.any
     c84:	ldr	x0, [sp, #64]
     c88:	ldr	w0, [x0, #16]
     c8c:	and	w0, w0, #0x10
     c90:	cmp	w0, #0x0
     c94:	b.eq	cac <test_write_blk+0x17c>  // b.none
     c98:	ldr	x3, [sp, #32]
     c9c:	ldr	x2, [sp, #48]
     ca0:	ldr	x1, [sp, #64]
     ca4:	ldr	x0, [sp, #56]
     ca8:	bl	0 <test_dump_block>
     cac:	ldr	x0, [sp, #64]
     cb0:	ldr	w0, [x0, #44]
     cb4:	sub	w1, w0, #0x1
     cb8:	ldr	x0, [sp, #64]
     cbc:	str	w1, [x0, #44]
     cc0:	ldr	x0, [sp, #64]
     cc4:	ldr	w0, [x0, #44]
     cc8:	cmp	w0, #0x0
     ccc:	b.ne	cdc <test_write_blk+0x1ac>  // b.any
     cd0:	ldr	x1, [sp, #48]
     cd4:	ldr	x0, [sp, #56]
     cd8:	bl	244 <test_abort>
     cdc:	ldr	x0, [sp, #72]
     ce0:	ldr	x19, [sp, #16]
     ce4:	ldp	x29, x30, [sp], #80
     ce8:	ret

0000000000000cec <test_read_blk64>:
     cec:	stp	x29, x30, [sp, #-80]!
     cf0:	mov	x29, sp
     cf4:	str	x19, [sp, #16]
     cf8:	str	x0, [sp, #56]
     cfc:	str	x1, [sp, #48]
     d00:	str	w2, [sp, #44]
     d04:	str	x3, [sp, #32]
     d08:	str	xzr, [sp, #72]
     d0c:	ldr	x0, [sp, #56]
     d10:	ldr	x1, [x0]
     d14:	mov	x0, #0xb705                	// #46853
     d18:	movk	x0, #0x7f2b, lsl #16
     d1c:	cmp	x1, x0
     d20:	b.eq	d30 <test_read_blk64+0x44>  // b.none
     d24:	mov	x0, #0xb705                	// #46853
     d28:	movk	x0, #0x7f2b, lsl #16
     d2c:	b	e8c <test_read_blk64+0x1a0>
     d30:	ldr	x0, [sp, #56]
     d34:	ldr	x0, [x0, #168]
     d38:	str	x0, [sp, #64]
     d3c:	ldr	x0, [sp, #64]
     d40:	ldr	w1, [x0]
     d44:	mov	w0, #0xb70b                	// #46859
     d48:	movk	w0, #0x7f2b, lsl #16
     d4c:	cmp	w1, w0
     d50:	b.eq	d60 <test_read_blk64+0x74>  // b.none
     d54:	mov	x0, #0xb70b                	// #46859
     d58:	movk	x0, #0x7f2b, lsl #16
     d5c:	b	e8c <test_read_blk64+0x1a0>
     d60:	ldr	x0, [sp, #64]
     d64:	ldr	x0, [x0, #8]
     d68:	cmp	x0, #0x0
     d6c:	b.eq	d8c <test_read_blk64+0xa0>  // b.none
     d70:	ldr	x0, [sp, #64]
     d74:	ldr	x0, [x0, #8]
     d78:	ldr	x3, [sp, #32]
     d7c:	ldr	w2, [sp, #44]
     d80:	ldr	x1, [sp, #48]
     d84:	bl	0 <io_channel_read_blk64>
     d88:	str	x0, [sp, #72]
     d8c:	ldr	x0, [sp, #64]
     d90:	ldr	x0, [x0, #80]
     d94:	cmp	x0, #0x0
     d98:	b.eq	db4 <test_read_blk64+0xc8>  // b.none
     d9c:	ldr	x0, [sp, #64]
     da0:	ldr	x3, [x0, #80]
     da4:	ldr	x2, [sp, #72]
     da8:	ldr	w1, [sp, #44]
     dac:	ldr	x0, [sp, #48]
     db0:	blr	x3
     db4:	ldr	x0, [sp, #64]
     db8:	ldr	w0, [x0, #16]
     dbc:	and	w0, w0, #0x1
     dc0:	cmp	w0, #0x0
     dc4:	b.eq	e0c <test_read_blk64+0x120>  // b.none
     dc8:	ldr	x0, [sp, #64]
     dcc:	ldr	x19, [x0, #24]
     dd0:	ldr	x0, [sp, #72]
     dd4:	cmp	x0, #0x0
     dd8:	b.eq	de8 <test_read_blk64+0xfc>  // b.none
     ddc:	ldr	x0, [sp, #72]
     de0:	bl	0 <error_message>
     de4:	b	df0 <test_read_blk64+0x104>
     de8:	adrp	x0, 0 <test_dump_block>
     dec:	add	x0, x0, #0x0
     df0:	mov	x4, x0
     df4:	ldr	w3, [sp, #44]
     df8:	ldr	x2, [sp, #48]
     dfc:	adrp	x0, 0 <test_dump_block>
     e00:	add	x1, x0, #0x0
     e04:	mov	x0, x19
     e08:	bl	0 <fprintf>
     e0c:	ldr	x0, [sp, #64]
     e10:	ldr	x0, [x0, #32]
     e14:	cmp	x0, #0x0
     e18:	b.eq	e88 <test_read_blk64+0x19c>  // b.none
     e1c:	ldr	x0, [sp, #64]
     e20:	ldr	x0, [x0, #32]
     e24:	ldr	x1, [sp, #48]
     e28:	cmp	x1, x0
     e2c:	b.ne	e88 <test_read_blk64+0x19c>  // b.any
     e30:	ldr	x0, [sp, #64]
     e34:	ldr	w0, [x0, #16]
     e38:	and	w0, w0, #0x10
     e3c:	cmp	w0, #0x0
     e40:	b.eq	e58 <test_read_blk64+0x16c>  // b.none
     e44:	ldr	x3, [sp, #32]
     e48:	ldr	x2, [sp, #48]
     e4c:	ldr	x1, [sp, #64]
     e50:	ldr	x0, [sp, #56]
     e54:	bl	0 <test_dump_block>
     e58:	ldr	x0, [sp, #64]
     e5c:	ldr	w0, [x0, #40]
     e60:	sub	w1, w0, #0x1
     e64:	ldr	x0, [sp, #64]
     e68:	str	w1, [x0, #40]
     e6c:	ldr	x0, [sp, #64]
     e70:	ldr	w0, [x0, #40]
     e74:	cmp	w0, #0x0
     e78:	b.ne	e88 <test_read_blk64+0x19c>  // b.any
     e7c:	ldr	x1, [sp, #48]
     e80:	ldr	x0, [sp, #56]
     e84:	bl	244 <test_abort>
     e88:	ldr	x0, [sp, #72]
     e8c:	ldr	x19, [sp, #16]
     e90:	ldp	x29, x30, [sp], #80
     e94:	ret

0000000000000e98 <test_write_blk64>:
     e98:	stp	x29, x30, [sp, #-80]!
     e9c:	mov	x29, sp
     ea0:	str	x19, [sp, #16]
     ea4:	str	x0, [sp, #56]
     ea8:	str	x1, [sp, #48]
     eac:	str	w2, [sp, #44]
     eb0:	str	x3, [sp, #32]
     eb4:	str	xzr, [sp, #72]
     eb8:	ldr	x0, [sp, #56]
     ebc:	ldr	x1, [x0]
     ec0:	mov	x0, #0xb705                	// #46853
     ec4:	movk	x0, #0x7f2b, lsl #16
     ec8:	cmp	x1, x0
     ecc:	b.eq	edc <test_write_blk64+0x44>  // b.none
     ed0:	mov	x0, #0xb705                	// #46853
     ed4:	movk	x0, #0x7f2b, lsl #16
     ed8:	b	1038 <test_write_blk64+0x1a0>
     edc:	ldr	x0, [sp, #56]
     ee0:	ldr	x0, [x0, #168]
     ee4:	str	x0, [sp, #64]
     ee8:	ldr	x0, [sp, #64]
     eec:	ldr	w1, [x0]
     ef0:	mov	w0, #0xb70b                	// #46859
     ef4:	movk	w0, #0x7f2b, lsl #16
     ef8:	cmp	w1, w0
     efc:	b.eq	f0c <test_write_blk64+0x74>  // b.none
     f00:	mov	x0, #0xb70b                	// #46859
     f04:	movk	x0, #0x7f2b, lsl #16
     f08:	b	1038 <test_write_blk64+0x1a0>
     f0c:	ldr	x0, [sp, #64]
     f10:	ldr	x0, [x0, #8]
     f14:	cmp	x0, #0x0
     f18:	b.eq	f38 <test_write_blk64+0xa0>  // b.none
     f1c:	ldr	x0, [sp, #64]
     f20:	ldr	x0, [x0, #8]
     f24:	ldr	x3, [sp, #32]
     f28:	ldr	w2, [sp, #44]
     f2c:	ldr	x1, [sp, #48]
     f30:	bl	0 <io_channel_write_blk64>
     f34:	str	x0, [sp, #72]
     f38:	ldr	x0, [sp, #64]
     f3c:	ldr	x0, [x0, #88]
     f40:	cmp	x0, #0x0
     f44:	b.eq	f60 <test_write_blk64+0xc8>  // b.none
     f48:	ldr	x0, [sp, #64]
     f4c:	ldr	x3, [x0, #88]
     f50:	ldr	x2, [sp, #72]
     f54:	ldr	w1, [sp, #44]
     f58:	ldr	x0, [sp, #48]
     f5c:	blr	x3
     f60:	ldr	x0, [sp, #64]
     f64:	ldr	w0, [x0, #16]
     f68:	and	w0, w0, #0x2
     f6c:	cmp	w0, #0x0
     f70:	b.eq	fb8 <test_write_blk64+0x120>  // b.none
     f74:	ldr	x0, [sp, #64]
     f78:	ldr	x19, [x0, #24]
     f7c:	ldr	x0, [sp, #72]
     f80:	cmp	x0, #0x0
     f84:	b.eq	f94 <test_write_blk64+0xfc>  // b.none
     f88:	ldr	x0, [sp, #72]
     f8c:	bl	0 <error_message>
     f90:	b	f9c <test_write_blk64+0x104>
     f94:	adrp	x0, 0 <test_dump_block>
     f98:	add	x0, x0, #0x0
     f9c:	mov	x4, x0
     fa0:	ldr	w3, [sp, #44]
     fa4:	ldr	x2, [sp, #48]
     fa8:	adrp	x0, 0 <test_dump_block>
     fac:	add	x1, x0, #0x0
     fb0:	mov	x0, x19
     fb4:	bl	0 <fprintf>
     fb8:	ldr	x0, [sp, #64]
     fbc:	ldr	x0, [x0, #32]
     fc0:	cmp	x0, #0x0
     fc4:	b.eq	1034 <test_write_blk64+0x19c>  // b.none
     fc8:	ldr	x0, [sp, #64]
     fcc:	ldr	x0, [x0, #32]
     fd0:	ldr	x1, [sp, #48]
     fd4:	cmp	x1, x0
     fd8:	b.ne	1034 <test_write_blk64+0x19c>  // b.any
     fdc:	ldr	x0, [sp, #64]
     fe0:	ldr	w0, [x0, #16]
     fe4:	and	w0, w0, #0x10
     fe8:	cmp	w0, #0x0
     fec:	b.eq	1004 <test_write_blk64+0x16c>  // b.none
     ff0:	ldr	x3, [sp, #32]
     ff4:	ldr	x2, [sp, #48]
     ff8:	ldr	x1, [sp, #64]
     ffc:	ldr	x0, [sp, #56]
    1000:	bl	0 <test_dump_block>
    1004:	ldr	x0, [sp, #64]
    1008:	ldr	w0, [x0, #44]
    100c:	sub	w1, w0, #0x1
    1010:	ldr	x0, [sp, #64]
    1014:	str	w1, [x0, #44]
    1018:	ldr	x0, [sp, #64]
    101c:	ldr	w0, [x0, #44]
    1020:	cmp	w0, #0x0
    1024:	b.ne	1034 <test_write_blk64+0x19c>  // b.any
    1028:	ldr	x1, [sp, #48]
    102c:	ldr	x0, [sp, #56]
    1030:	bl	244 <test_abort>
    1034:	ldr	x0, [sp, #72]
    1038:	ldr	x19, [sp, #16]
    103c:	ldp	x29, x30, [sp], #80
    1040:	ret

0000000000001044 <test_write_byte>:
    1044:	stp	x29, x30, [sp, #-80]!
    1048:	mov	x29, sp
    104c:	str	x19, [sp, #16]
    1050:	str	x0, [sp, #56]
    1054:	str	x1, [sp, #48]
    1058:	str	w2, [sp, #44]
    105c:	str	x3, [sp, #32]
    1060:	str	xzr, [sp, #72]
    1064:	ldr	x0, [sp, #56]
    1068:	ldr	x1, [x0]
    106c:	mov	x0, #0xb705                	// #46853
    1070:	movk	x0, #0x7f2b, lsl #16
    1074:	cmp	x1, x0
    1078:	b.eq	1088 <test_write_byte+0x44>  // b.none
    107c:	mov	x0, #0xb705                	// #46853
    1080:	movk	x0, #0x7f2b, lsl #16
    1084:	b	1180 <test_write_byte+0x13c>
    1088:	ldr	x0, [sp, #56]
    108c:	ldr	x0, [x0, #168]
    1090:	str	x0, [sp, #64]
    1094:	ldr	x0, [sp, #64]
    1098:	ldr	w1, [x0]
    109c:	mov	w0, #0xb70b                	// #46859
    10a0:	movk	w0, #0x7f2b, lsl #16
    10a4:	cmp	w1, w0
    10a8:	b.eq	10b8 <test_write_byte+0x74>  // b.none
    10ac:	mov	x0, #0xb70b                	// #46859
    10b0:	movk	x0, #0x7f2b, lsl #16
    10b4:	b	1180 <test_write_byte+0x13c>
    10b8:	ldr	x0, [sp, #64]
    10bc:	ldr	x0, [x0, #8]
    10c0:	cmp	x0, #0x0
    10c4:	b.eq	10fc <test_write_byte+0xb8>  // b.none
    10c8:	ldr	x0, [sp, #64]
    10cc:	ldr	x0, [x0, #8]
    10d0:	ldr	x0, [x0, #8]
    10d4:	ldr	x0, [x0, #64]
    10d8:	cmp	x0, #0x0
    10dc:	b.eq	10fc <test_write_byte+0xb8>  // b.none
    10e0:	ldr	x0, [sp, #64]
    10e4:	ldr	x0, [x0, #8]
    10e8:	ldr	x3, [sp, #32]
    10ec:	ldr	w2, [sp, #44]
    10f0:	ldr	x1, [sp, #48]
    10f4:	bl	0 <io_channel_write_byte>
    10f8:	str	x0, [sp, #72]
    10fc:	ldr	x0, [sp, #64]
    1100:	ldr	x0, [x0, #72]
    1104:	cmp	x0, #0x0
    1108:	b.eq	1124 <test_write_byte+0xe0>  // b.none
    110c:	ldr	x0, [sp, #64]
    1110:	ldr	x3, [x0, #72]
    1114:	ldr	x2, [sp, #72]
    1118:	ldr	w1, [sp, #44]
    111c:	ldr	x0, [sp, #48]
    1120:	blr	x3
    1124:	ldr	x0, [sp, #64]
    1128:	ldr	w0, [x0, #16]
    112c:	and	w0, w0, #0x2
    1130:	cmp	w0, #0x0
    1134:	b.eq	117c <test_write_byte+0x138>  // b.none
    1138:	ldr	x0, [sp, #64]
    113c:	ldr	x19, [x0, #24]
    1140:	ldr	x0, [sp, #72]
    1144:	cmp	x0, #0x0
    1148:	b.eq	1158 <test_write_byte+0x114>  // b.none
    114c:	ldr	x0, [sp, #72]
    1150:	bl	0 <error_message>
    1154:	b	1160 <test_write_byte+0x11c>
    1158:	adrp	x0, 0 <test_dump_block>
    115c:	add	x0, x0, #0x0
    1160:	mov	x4, x0
    1164:	ldr	w3, [sp, #44]
    1168:	ldr	x2, [sp, #48]
    116c:	adrp	x0, 0 <test_dump_block>
    1170:	add	x1, x0, #0x0
    1174:	mov	x0, x19
    1178:	bl	0 <fprintf>
    117c:	ldr	x0, [sp, #72]
    1180:	ldr	x19, [sp, #16]
    1184:	ldp	x29, x30, [sp], #80
    1188:	ret

000000000000118c <test_set_option>:
    118c:	stp	x29, x30, [sp, #-80]!
    1190:	mov	x29, sp
    1194:	str	x19, [sp, #16]
    1198:	str	x0, [sp, #56]
    119c:	str	x1, [sp, #48]
    11a0:	str	x2, [sp, #40]
    11a4:	str	xzr, [sp, #72]
    11a8:	ldr	x0, [sp, #56]
    11ac:	ldr	x1, [x0]
    11b0:	mov	x0, #0xb705                	// #46853
    11b4:	movk	x0, #0x7f2b, lsl #16
    11b8:	cmp	x1, x0
    11bc:	b.eq	11cc <test_set_option+0x40>  // b.none
    11c0:	mov	x0, #0xb705                	// #46853
    11c4:	movk	x0, #0x7f2b, lsl #16
    11c8:	b	130c <test_set_option+0x180>
    11cc:	ldr	x0, [sp, #56]
    11d0:	ldr	x0, [x0, #168]
    11d4:	str	x0, [sp, #64]
    11d8:	ldr	x0, [sp, #64]
    11dc:	ldr	w1, [x0]
    11e0:	mov	w0, #0xb70b                	// #46859
    11e4:	movk	w0, #0x7f2b, lsl #16
    11e8:	cmp	w1, w0
    11ec:	b.eq	11fc <test_set_option+0x70>  // b.none
    11f0:	mov	x0, #0xb70b                	// #46859
    11f4:	movk	x0, #0x7f2b, lsl #16
    11f8:	b	130c <test_set_option+0x180>
    11fc:	ldr	x0, [sp, #64]
    1200:	ldr	w0, [x0, #16]
    1204:	and	w0, w0, #0x20
    1208:	cmp	w0, #0x0
    120c:	b.eq	1230 <test_set_option+0xa4>  // b.none
    1210:	ldr	x0, [sp, #64]
    1214:	ldr	x4, [x0, #24]
    1218:	ldr	x3, [sp, #40]
    121c:	ldr	x2, [sp, #48]
    1220:	adrp	x0, 0 <test_dump_block>
    1224:	add	x1, x0, #0x0
    1228:	mov	x0, x4
    122c:	bl	0 <fprintf>
    1230:	ldr	x0, [sp, #64]
    1234:	ldr	x0, [x0, #8]
    1238:	cmp	x0, #0x0
    123c:	b.eq	12d4 <test_set_option+0x148>  // b.none
    1240:	ldr	x0, [sp, #64]
    1244:	ldr	x0, [x0, #8]
    1248:	ldr	x0, [x0, #8]
    124c:	ldr	x0, [x0, #72]
    1250:	cmp	x0, #0x0
    1254:	b.eq	12d4 <test_set_option+0x148>  // b.none
    1258:	ldr	x0, [sp, #64]
    125c:	ldr	x0, [x0, #8]
    1260:	ldr	x0, [x0, #8]
    1264:	ldr	x3, [x0, #72]
    1268:	ldr	x0, [sp, #64]
    126c:	ldr	x0, [x0, #8]
    1270:	ldr	x2, [sp, #40]
    1274:	ldr	x1, [sp, #48]
    1278:	blr	x3
    127c:	str	x0, [sp, #72]
    1280:	ldr	x0, [sp, #64]
    1284:	ldr	w0, [x0, #16]
    1288:	and	w0, w0, #0x20
    128c:	cmp	w0, #0x0
    1290:	b.eq	1308 <test_set_option+0x17c>  // b.none
    1294:	ldr	x0, [sp, #64]
    1298:	ldr	x19, [x0, #24]
    129c:	ldr	x0, [sp, #72]
    12a0:	cmp	x0, #0x0
    12a4:	b.eq	12b4 <test_set_option+0x128>  // b.none
    12a8:	ldr	x0, [sp, #72]
    12ac:	bl	0 <error_message>
    12b0:	b	12bc <test_set_option+0x130>
    12b4:	adrp	x0, 0 <test_dump_block>
    12b8:	add	x0, x0, #0x0
    12bc:	mov	x2, x0
    12c0:	adrp	x0, 0 <test_dump_block>
    12c4:	add	x1, x0, #0x0
    12c8:	mov	x0, x19
    12cc:	bl	0 <fprintf>
    12d0:	b	1308 <test_set_option+0x17c>
    12d4:	ldr	x0, [sp, #64]
    12d8:	ldr	w0, [x0, #16]
    12dc:	and	w0, w0, #0x20
    12e0:	cmp	w0, #0x0
    12e4:	b.eq	1308 <test_set_option+0x17c>  // b.none
    12e8:	ldr	x0, [sp, #64]
    12ec:	ldr	x0, [x0, #24]
    12f0:	mov	x3, x0
    12f4:	mov	x2, #0x10                  	// #16
    12f8:	mov	x1, #0x1                   	// #1
    12fc:	adrp	x0, 0 <test_dump_block>
    1300:	add	x0, x0, #0x0
    1304:	bl	0 <fwrite>
    1308:	ldr	x0, [sp, #72]
    130c:	ldr	x19, [sp, #16]
    1310:	ldp	x29, x30, [sp], #80
    1314:	ret

0000000000001318 <test_get_stats>:
    1318:	stp	x29, x30, [sp, #-48]!
    131c:	mov	x29, sp
    1320:	str	x0, [sp, #24]
    1324:	str	x1, [sp, #16]
    1328:	str	xzr, [sp, #40]
    132c:	ldr	x0, [sp, #24]
    1330:	ldr	x1, [x0]
    1334:	mov	x0, #0xb705                	// #46853
    1338:	movk	x0, #0x7f2b, lsl #16
    133c:	cmp	x1, x0
    1340:	b.eq	1350 <test_get_stats+0x38>  // b.none
    1344:	mov	x0, #0xb705                	// #46853
    1348:	movk	x0, #0x7f2b, lsl #16
    134c:	b	13d0 <test_get_stats+0xb8>
    1350:	ldr	x0, [sp, #24]
    1354:	ldr	x0, [x0, #168]
    1358:	str	x0, [sp, #32]
    135c:	ldr	x0, [sp, #32]
    1360:	ldr	w1, [x0]
    1364:	mov	w0, #0xb70b                	// #46859
    1368:	movk	w0, #0x7f2b, lsl #16
    136c:	cmp	w1, w0
    1370:	b.eq	1380 <test_get_stats+0x68>  // b.none
    1374:	mov	x0, #0xb70b                	// #46859
    1378:	movk	x0, #0x7f2b, lsl #16
    137c:	b	13d0 <test_get_stats+0xb8>
    1380:	ldr	x0, [sp, #32]
    1384:	ldr	x0, [x0, #8]
    1388:	cmp	x0, #0x0
    138c:	b.eq	13cc <test_get_stats+0xb4>  // b.none
    1390:	ldr	x0, [sp, #32]
    1394:	ldr	x0, [x0, #8]
    1398:	ldr	x0, [x0, #8]
    139c:	ldr	x0, [x0, #80]
    13a0:	cmp	x0, #0x0
    13a4:	b.eq	13cc <test_get_stats+0xb4>  // b.none
    13a8:	ldr	x0, [sp, #32]
    13ac:	ldr	x0, [x0, #8]
    13b0:	ldr	x0, [x0, #8]
    13b4:	ldr	x2, [x0, #80]
    13b8:	ldr	x0, [sp, #32]
    13bc:	ldr	x0, [x0, #8]
    13c0:	ldr	x1, [sp, #16]
    13c4:	blr	x2
    13c8:	str	x0, [sp, #40]
    13cc:	ldr	x0, [sp, #40]
    13d0:	ldp	x29, x30, [sp], #48
    13d4:	ret

00000000000013d8 <test_discard>:
    13d8:	stp	x29, x30, [sp, #-80]!
    13dc:	mov	x29, sp
    13e0:	str	x19, [sp, #16]
    13e4:	str	x0, [sp, #56]
    13e8:	str	x1, [sp, #48]
    13ec:	str	x2, [sp, #40]
    13f0:	str	xzr, [sp, #72]
    13f4:	ldr	x0, [sp, #56]
    13f8:	ldr	x1, [x0]
    13fc:	mov	x0, #0xb705                	// #46853
    1400:	movk	x0, #0x7f2b, lsl #16
    1404:	cmp	x1, x0
    1408:	b.eq	1418 <test_discard+0x40>  // b.none
    140c:	mov	x0, #0xb705                	// #46853
    1410:	movk	x0, #0x7f2b, lsl #16
    1414:	b	14cc <test_discard+0xf4>
    1418:	ldr	x0, [sp, #56]
    141c:	ldr	x0, [x0, #168]
    1420:	str	x0, [sp, #64]
    1424:	ldr	x0, [sp, #64]
    1428:	ldr	w1, [x0]
    142c:	mov	w0, #0xb70b                	// #46859
    1430:	movk	w0, #0x7f2b, lsl #16
    1434:	cmp	w1, w0
    1438:	b.eq	1448 <test_discard+0x70>  // b.none
    143c:	mov	x0, #0xb70b                	// #46859
    1440:	movk	x0, #0x7f2b, lsl #16
    1444:	b	14cc <test_discard+0xf4>
    1448:	ldr	x0, [sp, #64]
    144c:	ldr	x0, [x0, #8]
    1450:	cmp	x0, #0x0
    1454:	b.eq	1470 <test_discard+0x98>  // b.none
    1458:	ldr	x0, [sp, #64]
    145c:	ldr	x0, [x0, #8]
    1460:	ldr	x2, [sp, #40]
    1464:	ldr	x1, [sp, #48]
    1468:	bl	0 <io_channel_discard>
    146c:	str	x0, [sp, #72]
    1470:	ldr	x0, [sp, #64]
    1474:	ldr	w0, [x0, #16]
    1478:	and	w0, w0, #0x40
    147c:	cmp	w0, #0x0
    1480:	b.eq	14c8 <test_discard+0xf0>  // b.none
    1484:	ldr	x0, [sp, #64]
    1488:	ldr	x19, [x0, #24]
    148c:	ldr	x0, [sp, #72]
    1490:	cmp	x0, #0x0
    1494:	b.eq	14a4 <test_discard+0xcc>  // b.none
    1498:	ldr	x0, [sp, #72]
    149c:	bl	0 <error_message>
    14a0:	b	14ac <test_discard+0xd4>
    14a4:	adrp	x0, 0 <test_dump_block>
    14a8:	add	x0, x0, #0x0
    14ac:	mov	x4, x0
    14b0:	ldr	x3, [sp, #40]
    14b4:	ldr	x2, [sp, #48]
    14b8:	adrp	x0, 0 <test_dump_block>
    14bc:	add	x1, x0, #0x0
    14c0:	mov	x0, x19
    14c4:	bl	0 <fprintf>
    14c8:	ldr	x0, [sp, #72]
    14cc:	ldr	x19, [sp, #16]
    14d0:	ldp	x29, x30, [sp], #80
    14d4:	ret

00000000000014d8 <test_cache_readahead>:
    14d8:	stp	x29, x30, [sp, #-80]!
    14dc:	mov	x29, sp
    14e0:	str	x19, [sp, #16]
    14e4:	str	x0, [sp, #56]
    14e8:	str	x1, [sp, #48]
    14ec:	str	x2, [sp, #40]
    14f0:	str	xzr, [sp, #72]
    14f4:	ldr	x0, [sp, #56]
    14f8:	ldr	x1, [x0]
    14fc:	mov	x0, #0xb705                	// #46853
    1500:	movk	x0, #0x7f2b, lsl #16
    1504:	cmp	x1, x0
    1508:	b.eq	1518 <test_cache_readahead+0x40>  // b.none
    150c:	mov	x0, #0xb705                	// #46853
    1510:	movk	x0, #0x7f2b, lsl #16
    1514:	b	15cc <test_cache_readahead+0xf4>
    1518:	ldr	x0, [sp, #56]
    151c:	ldr	x0, [x0, #168]
    1520:	str	x0, [sp, #64]
    1524:	ldr	x0, [sp, #64]
    1528:	ldr	w1, [x0]
    152c:	mov	w0, #0xb70b                	// #46859
    1530:	movk	w0, #0x7f2b, lsl #16
    1534:	cmp	w1, w0
    1538:	b.eq	1548 <test_cache_readahead+0x70>  // b.none
    153c:	mov	x0, #0xb70b                	// #46859
    1540:	movk	x0, #0x7f2b, lsl #16
    1544:	b	15cc <test_cache_readahead+0xf4>
    1548:	ldr	x0, [sp, #64]
    154c:	ldr	x0, [x0, #8]
    1550:	cmp	x0, #0x0
    1554:	b.eq	1570 <test_cache_readahead+0x98>  // b.none
    1558:	ldr	x0, [sp, #64]
    155c:	ldr	x0, [x0, #8]
    1560:	ldr	x2, [sp, #40]
    1564:	ldr	x1, [sp, #48]
    1568:	bl	0 <io_channel_cache_readahead>
    156c:	str	x0, [sp, #72]
    1570:	ldr	x0, [sp, #64]
    1574:	ldr	w0, [x0, #16]
    1578:	and	w0, w0, #0x80
    157c:	cmp	w0, #0x0
    1580:	b.eq	15c8 <test_cache_readahead+0xf0>  // b.none
    1584:	ldr	x0, [sp, #64]
    1588:	ldr	x19, [x0, #24]
    158c:	ldr	x0, [sp, #72]
    1590:	cmp	x0, #0x0
    1594:	b.eq	15a4 <test_cache_readahead+0xcc>  // b.none
    1598:	ldr	x0, [sp, #72]
    159c:	bl	0 <error_message>
    15a0:	b	15ac <test_cache_readahead+0xd4>
    15a4:	adrp	x0, 0 <test_dump_block>
    15a8:	add	x0, x0, #0x0
    15ac:	mov	x4, x0
    15b0:	ldr	x3, [sp, #40]
    15b4:	ldr	x2, [sp, #48]
    15b8:	adrp	x0, 0 <test_dump_block>
    15bc:	add	x1, x0, #0x0
    15c0:	mov	x0, x19
    15c4:	bl	0 <fprintf>
    15c8:	ldr	x0, [sp, #72]
    15cc:	ldr	x19, [sp, #16]
    15d0:	ldp	x29, x30, [sp], #80
    15d4:	ret

00000000000015d8 <test_zeroout>:
    15d8:	stp	x29, x30, [sp, #-80]!
    15dc:	mov	x29, sp
    15e0:	str	x19, [sp, #16]
    15e4:	str	x0, [sp, #56]
    15e8:	str	x1, [sp, #48]
    15ec:	str	x2, [sp, #40]
    15f0:	str	xzr, [sp, #72]
    15f4:	ldr	x0, [sp, #56]
    15f8:	ldr	x1, [x0]
    15fc:	mov	x0, #0xb705                	// #46853
    1600:	movk	x0, #0x7f2b, lsl #16
    1604:	cmp	x1, x0
    1608:	b.eq	1618 <test_zeroout+0x40>  // b.none
    160c:	mov	x0, #0xb705                	// #46853
    1610:	movk	x0, #0x7f2b, lsl #16
    1614:	b	16cc <test_zeroout+0xf4>
    1618:	ldr	x0, [sp, #56]
    161c:	ldr	x0, [x0, #168]
    1620:	str	x0, [sp, #64]
    1624:	ldr	x0, [sp, #64]
    1628:	ldr	w1, [x0]
    162c:	mov	w0, #0xb70b                	// #46859
    1630:	movk	w0, #0x7f2b, lsl #16
    1634:	cmp	w1, w0
    1638:	b.eq	1648 <test_zeroout+0x70>  // b.none
    163c:	mov	x0, #0xb70b                	// #46859
    1640:	movk	x0, #0x7f2b, lsl #16
    1644:	b	16cc <test_zeroout+0xf4>
    1648:	ldr	x0, [sp, #64]
    164c:	ldr	x0, [x0, #8]
    1650:	cmp	x0, #0x0
    1654:	b.eq	1670 <test_zeroout+0x98>  // b.none
    1658:	ldr	x0, [sp, #64]
    165c:	ldr	x0, [x0, #8]
    1660:	ldr	x2, [sp, #40]
    1664:	ldr	x1, [sp, #48]
    1668:	bl	0 <io_channel_zeroout>
    166c:	str	x0, [sp, #72]
    1670:	ldr	x0, [sp, #64]
    1674:	ldr	w0, [x0, #16]
    1678:	and	w0, w0, #0x100
    167c:	cmp	w0, #0x0
    1680:	b.eq	16c8 <test_zeroout+0xf0>  // b.none
    1684:	ldr	x0, [sp, #64]
    1688:	ldr	x19, [x0, #24]
    168c:	ldr	x0, [sp, #72]
    1690:	cmp	x0, #0x0
    1694:	b.eq	16a4 <test_zeroout+0xcc>  // b.none
    1698:	ldr	x0, [sp, #72]
    169c:	bl	0 <error_message>
    16a0:	b	16ac <test_zeroout+0xd4>
    16a4:	adrp	x0, 0 <test_dump_block>
    16a8:	add	x0, x0, #0x0
    16ac:	mov	x4, x0
    16b0:	ldr	x3, [sp, #40]
    16b4:	ldr	x2, [sp, #48]
    16b8:	adrp	x0, 0 <test_dump_block>
    16bc:	add	x1, x0, #0x0
    16c0:	mov	x0, x19
    16c4:	bl	0 <fprintf>
    16c8:	ldr	x0, [sp, #72]
    16cc:	ldr	x19, [sp, #16]
    16d0:	ldp	x29, x30, [sp], #80
    16d4:	ret

ext2_err.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <initialize_ext2_error_table>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_et_list>
   c:	add	x0, x0, #0x0
  10:	bl	20 <initialize_ext2_error_table_r>
  14:	nop
  18:	ldp	x29, x30, [sp], #16
  1c:	ret

0000000000000020 <initialize_ext2_error_table_r>:
  20:	stp	x29, x30, [sp, #-48]!
  24:	mov	x29, sp
  28:	str	x0, [sp, #24]
  2c:	ldr	x0, [sp, #24]
  30:	str	x0, [sp, #32]
  34:	ldr	x0, [sp, #24]
  38:	ldr	x0, [x0]
  3c:	str	x0, [sp, #40]
  40:	b	74 <initialize_ext2_error_table_r+0x54>
  44:	ldr	x0, [sp, #40]
  48:	ldr	x0, [x0, #8]
  4c:	ldr	x1, [x0]
  50:	adrp	x0, 0 <initialize_ext2_error_table>
  54:	add	x0, x0, #0x0
  58:	cmp	x1, x0
  5c:	b.eq	e0 <initialize_ext2_error_table_r+0xc0>  // b.none
  60:	ldr	x0, [sp, #40]
  64:	str	x0, [sp, #32]
  68:	ldr	x0, [sp, #40]
  6c:	ldr	x0, [x0]
  70:	str	x0, [sp, #40]
  74:	ldr	x0, [sp, #40]
  78:	cmp	x0, #0x0
  7c:	b.ne	44 <initialize_ext2_error_table_r+0x24>  // b.any
  80:	mov	x0, #0x10                  	// #16
  84:	bl	0 <malloc>
  88:	str	x0, [sp, #40]
  8c:	ldr	x0, [sp, #40]
  90:	cmp	x0, #0x0
  94:	b.ne	b8 <initialize_ext2_error_table_r+0x98>  // b.any
  98:	adrp	x0, 0 <initialize_ext2_error_table>
  9c:	add	x0, x0, #0x0
  a0:	ldr	x0, [x0, #8]
  a4:	cmp	x0, #0x0
  a8:	b.ne	e8 <initialize_ext2_error_table_r+0xc8>  // b.any
  ac:	adrp	x0, 0 <initialize_ext2_error_table>
  b0:	add	x0, x0, #0x0
  b4:	str	x0, [sp, #40]
  b8:	ldr	x0, [sp, #40]
  bc:	adrp	x1, 2200 <et_ext2_error_table>
  c0:	add	x1, x1, #0x0
  c4:	str	x1, [x0, #8]
  c8:	ldr	x0, [sp, #40]
  cc:	str	xzr, [x0]
  d0:	ldr	x0, [sp, #32]
  d4:	ldr	x1, [sp, #40]
  d8:	str	x1, [x0]
  dc:	b	ec <initialize_ext2_error_table_r+0xcc>
  e0:	nop
  e4:	b	ec <initialize_ext2_error_table_r+0xcc>
  e8:	nop
  ec:	ldp	x29, x30, [sp], #48
  f0:	ret

alloc.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_metadata_csum>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x400
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_group_desc_csum>:
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x0, [sp, #24]
      60:	ldr	x0, [x0, #32]
      64:	bl	28 <ext2fs_has_feature_metadata_csum>
      68:	cmp	w0, #0x0
      6c:	b.ne	84 <ext2fs_has_group_desc_csum+0x34>  // b.any
      70:	ldr	x0, [sp, #24]
      74:	ldr	x0, [x0, #32]
      78:	bl	0 <ext2fs_has_feature_gdt_csum>
      7c:	cmp	w0, #0x0
      80:	b.eq	8c <ext2fs_has_group_desc_csum+0x3c>  // b.none
      84:	mov	w0, #0x1                   	// #1
      88:	b	90 <ext2fs_has_group_desc_csum+0x40>
      8c:	mov	w0, #0x0                   	// #0
      90:	ldp	x29, x30, [sp], #32
      94:	ret

0000000000000098 <ext2fs_clear_block_uninit>:
      98:	stp	x29, x30, [sp, #-32]!
      9c:	mov	x29, sp
      a0:	str	x0, [sp, #24]
      a4:	str	w1, [sp, #20]
      a8:	ldr	x0, [sp, #24]
      ac:	ldr	w0, [x0, #48]
      b0:	ldr	w1, [sp, #20]
      b4:	cmp	w1, w0
      b8:	b.cs	114 <ext2fs_clear_block_uninit+0x7c>  // b.hs, b.nlast
      bc:	ldr	x0, [sp, #24]
      c0:	bl	50 <ext2fs_has_group_desc_csum>
      c4:	cmp	w0, #0x0
      c8:	b.eq	114 <ext2fs_clear_block_uninit+0x7c>  // b.none
      cc:	mov	w2, #0x2                   	// #2
      d0:	ldr	w1, [sp, #20]
      d4:	ldr	x0, [sp, #24]
      d8:	bl	0 <ext2fs_bg_flags_test>
      dc:	cmp	w0, #0x0
      e0:	b.eq	114 <ext2fs_clear_block_uninit+0x7c>  // b.none
      e4:	mov	w2, #0x2                   	// #2
      e8:	ldr	w1, [sp, #20]
      ec:	ldr	x0, [sp, #24]
      f0:	bl	0 <ext2fs_bg_flags_clear>
      f4:	ldr	w1, [sp, #20]
      f8:	ldr	x0, [sp, #24]
      fc:	bl	0 <ext2fs_group_desc_csum_set>
     100:	ldr	x0, [sp, #24]
     104:	bl	0 <ext2fs_mark_super_dirty>
     108:	ldr	x0, [sp, #24]
     10c:	bl	0 <ext2fs_mark_bb_dirty>
     110:	b	118 <ext2fs_clear_block_uninit+0x80>
     114:	nop
     118:	ldp	x29, x30, [sp], #32
     11c:	ret

0000000000000120 <check_inode_uninit>:
     120:	stp	x29, x30, [sp, #-64]!
     124:	mov	x29, sp
     128:	str	x0, [sp, #40]
     12c:	str	x1, [sp, #32]
     130:	str	w2, [sp, #28]
     134:	ldr	x0, [sp, #40]
     138:	ldr	w0, [x0, #48]
     13c:	ldr	w1, [sp, #28]
     140:	cmp	w1, w0
     144:	b.cs	210 <check_inode_uninit+0xf0>  // b.hs, b.nlast
     148:	ldr	x0, [sp, #40]
     14c:	bl	50 <ext2fs_has_group_desc_csum>
     150:	cmp	w0, #0x0
     154:	b.eq	210 <check_inode_uninit+0xf0>  // b.none
     158:	mov	w2, #0x1                   	// #1
     15c:	ldr	w1, [sp, #28]
     160:	ldr	x0, [sp, #40]
     164:	bl	0 <ext2fs_bg_flags_test>
     168:	cmp	w0, #0x0
     16c:	b.eq	210 <check_inode_uninit+0xf0>  // b.none
     170:	ldr	x0, [sp, #40]
     174:	ldr	x0, [x0, #32]
     178:	ldr	w1, [x0, #40]
     17c:	ldr	w0, [sp, #28]
     180:	mul	w0, w1, w0
     184:	add	w0, w0, #0x1
     188:	str	w0, [sp, #56]
     18c:	str	wzr, [sp, #60]
     190:	b	1b8 <check_inode_uninit+0x98>
     194:	ldr	w1, [sp, #56]
     198:	ldr	x0, [sp, #32]
     19c:	bl	0 <ext2fs_fast_unmark_inode_bitmap2>
     1a0:	ldr	w0, [sp, #60]
     1a4:	add	w0, w0, #0x1
     1a8:	str	w0, [sp, #60]
     1ac:	ldr	w0, [sp, #56]
     1b0:	add	w0, w0, #0x1
     1b4:	str	w0, [sp, #56]
     1b8:	ldr	x0, [sp, #40]
     1bc:	ldr	x0, [x0, #32]
     1c0:	ldr	w0, [x0, #40]
     1c4:	ldr	w1, [sp, #60]
     1c8:	cmp	w1, w0
     1cc:	b.cc	194 <check_inode_uninit+0x74>  // b.lo, b.ul, b.last
     1d0:	mov	w2, #0x1                   	// #1
     1d4:	ldr	w1, [sp, #28]
     1d8:	ldr	x0, [sp, #40]
     1dc:	bl	0 <ext2fs_bg_flags_clear>
     1e0:	mov	w2, #0x2                   	// #2
     1e4:	ldr	w1, [sp, #28]
     1e8:	ldr	x0, [sp, #40]
     1ec:	bl	0 <ext2fs_bg_flags_clear>
     1f0:	ldr	w1, [sp, #28]
     1f4:	ldr	x0, [sp, #40]
     1f8:	bl	0 <ext2fs_group_desc_csum_set>
     1fc:	ldr	x0, [sp, #40]
     200:	bl	0 <ext2fs_mark_ib_dirty>
     204:	ldr	x0, [sp, #40]
     208:	bl	0 <ext2fs_mark_super_dirty>
     20c:	b	214 <check_inode_uninit+0xf4>
     210:	nop
     214:	ldp	x29, x30, [sp], #64
     218:	ret

000000000000021c <ext2fs_new_inode>:
     21c:	stp	x29, x30, [sp, #-96]!
     220:	mov	x29, sp
     224:	str	x0, [sp, #40]
     228:	str	w1, [sp, #36]
     22c:	str	w2, [sp, #32]
     230:	str	x3, [sp, #24]
     234:	str	x4, [sp, #16]
     238:	str	wzr, [sp, #92]
     23c:	ldr	x0, [sp, #40]
     240:	ldr	x1, [x0]
     244:	mov	x0, #0xb701                	// #46849
     248:	movk	x0, #0x7f2b, lsl #16
     24c:	cmp	x1, x0
     250:	b.eq	260 <ext2fs_new_inode+0x44>  // b.none
     254:	mov	x0, #0xb701                	// #46849
     258:	movk	x0, #0x7f2b, lsl #16
     25c:	b	500 <ext2fs_new_inode+0x2e4>
     260:	ldr	x0, [sp, #24]
     264:	cmp	x0, #0x0
     268:	b.ne	278 <ext2fs_new_inode+0x5c>  // b.any
     26c:	ldr	x0, [sp, #40]
     270:	ldr	x0, [x0, #80]
     274:	str	x0, [sp, #24]
     278:	ldr	x0, [sp, #24]
     27c:	cmp	x0, #0x0
     280:	b.ne	290 <ext2fs_new_inode+0x74>  // b.any
     284:	mov	x0, #0xb727                	// #46887
     288:	movk	x0, #0x7f2b, lsl #16
     28c:	b	500 <ext2fs_new_inode+0x2e4>
     290:	ldr	w0, [sp, #36]
     294:	cmp	w0, #0x0
     298:	b.eq	2d4 <ext2fs_new_inode+0xb8>  // b.none
     29c:	ldr	w0, [sp, #36]
     2a0:	sub	w1, w0, #0x1
     2a4:	ldr	x0, [sp, #40]
     2a8:	ldr	x0, [x0, #32]
     2ac:	ldr	w0, [x0, #40]
     2b0:	udiv	w0, w1, w0
     2b4:	str	w0, [sp, #80]
     2b8:	ldr	x0, [sp, #40]
     2bc:	ldr	x0, [x0, #32]
     2c0:	ldr	w1, [x0, #40]
     2c4:	ldr	w0, [sp, #80]
     2c8:	mul	w0, w1, w0
     2cc:	add	w0, w0, #0x1
     2d0:	str	w0, [sp, #92]
     2d4:	ldr	x0, [sp, #40]
     2d8:	ldr	x0, [x0, #32]
     2dc:	ldr	w0, [x0, #76]
     2e0:	cmp	w0, #0x0
     2e4:	b.eq	2f8 <ext2fs_new_inode+0xdc>  // b.none
     2e8:	ldr	x0, [sp, #40]
     2ec:	ldr	x0, [x0, #32]
     2f0:	ldr	w0, [x0, #84]
     2f4:	b	2fc <ext2fs_new_inode+0xe0>
     2f8:	mov	w0, #0xb                   	// #11
     2fc:	ldr	w1, [sp, #92]
     300:	cmp	w0, w1
     304:	b.ls	334 <ext2fs_new_inode+0x118>  // b.plast
     308:	ldr	x0, [sp, #40]
     30c:	ldr	x0, [x0, #32]
     310:	ldr	w0, [x0, #76]
     314:	cmp	w0, #0x0
     318:	b.eq	32c <ext2fs_new_inode+0x110>  // b.none
     31c:	ldr	x0, [sp, #40]
     320:	ldr	x0, [x0, #32]
     324:	ldr	w0, [x0, #84]
     328:	b	330 <ext2fs_new_inode+0x114>
     32c:	mov	w0, #0xb                   	// #11
     330:	str	w0, [sp, #92]
     334:	ldr	x0, [sp, #40]
     338:	ldr	x0, [x0, #32]
     33c:	ldr	w0, [x0]
     340:	ldr	w1, [sp, #92]
     344:	cmp	w1, w0
     348:	b.ls	358 <ext2fs_new_inode+0x13c>  // b.plast
     34c:	mov	x0, #0xb749                	// #46921
     350:	movk	x0, #0x7f2b, lsl #16
     354:	b	500 <ext2fs_new_inode+0x2e4>
     358:	ldr	w0, [sp, #92]
     35c:	str	w0, [sp, #88]
     360:	ldr	w0, [sp, #88]
     364:	sub	w0, w0, #0x1
     368:	ldr	x1, [sp, #40]
     36c:	ldr	x1, [x1, #32]
     370:	ldr	w1, [x1, #40]
     374:	udiv	w2, w0, w1
     378:	mul	w1, w2, w1
     37c:	sub	w0, w0, w1
     380:	str	w0, [sp, #76]
     384:	ldr	w0, [sp, #88]
     388:	sub	w1, w0, #0x1
     38c:	ldr	x0, [sp, #40]
     390:	ldr	x0, [x0, #32]
     394:	ldr	w0, [x0, #40]
     398:	udiv	w0, w1, w0
     39c:	str	w0, [sp, #80]
     3a0:	ldr	w2, [sp, #80]
     3a4:	ldr	x1, [sp, #24]
     3a8:	ldr	x0, [sp, #40]
     3ac:	bl	120 <check_inode_uninit>
     3b0:	ldr	x0, [sp, #40]
     3b4:	ldr	x0, [x0, #32]
     3b8:	ldr	w1, [x0, #40]
     3bc:	ldr	w0, [sp, #76]
     3c0:	sub	w0, w1, w0
     3c4:	ldr	w1, [sp, #88]
     3c8:	add	w0, w1, w0
     3cc:	str	w0, [sp, #84]
     3d0:	ldr	w1, [sp, #88]
     3d4:	ldr	w0, [sp, #92]
     3d8:	cmp	w1, w0
     3dc:	b.cs	3fc <ext2fs_new_inode+0x1e0>  // b.hs, b.nlast
     3e0:	ldr	w1, [sp, #84]
     3e4:	ldr	w0, [sp, #92]
     3e8:	cmp	w1, w0
     3ec:	b.cc	3fc <ext2fs_new_inode+0x1e0>  // b.lo, b.ul, b.last
     3f0:	ldr	w0, [sp, #92]
     3f4:	sub	w0, w0, #0x1
     3f8:	str	w0, [sp, #84]
     3fc:	ldr	x0, [sp, #40]
     400:	ldr	x0, [x0, #32]
     404:	ldr	w0, [x0]
     408:	ldr	w1, [sp, #84]
     40c:	cmp	w1, w0
     410:	b.ls	424 <ext2fs_new_inode+0x208>  // b.plast
     414:	ldr	x0, [sp, #40]
     418:	ldr	x0, [x0, #32]
     41c:	ldr	w0, [x0]
     420:	str	w0, [sp, #84]
     424:	add	x0, sp, #0x3c
     428:	mov	x3, x0
     42c:	ldr	w2, [sp, #84]
     430:	ldr	w1, [sp, #88]
     434:	ldr	x0, [sp, #24]
     438:	bl	0 <ext2fs_find_first_zero_inode_bitmap2>
     43c:	str	x0, [sp, #64]
     440:	ldr	x0, [sp, #64]
     444:	cmp	x0, #0x0
     448:	b.ne	458 <ext2fs_new_inode+0x23c>  // b.any
     44c:	ldr	w0, [sp, #60]
     450:	str	w0, [sp, #88]
     454:	b	4d0 <ext2fs_new_inode+0x2b4>
     458:	ldr	x0, [sp, #64]
     45c:	cmp	x0, #0x2
     460:	b.eq	470 <ext2fs_new_inode+0x254>  // b.none
     464:	mov	x0, #0xb749                	// #46921
     468:	movk	x0, #0x7f2b, lsl #16
     46c:	b	500 <ext2fs_new_inode+0x2e4>
     470:	ldr	w0, [sp, #84]
     474:	add	w0, w0, #0x1
     478:	str	w0, [sp, #88]
     47c:	ldr	x0, [sp, #40]
     480:	ldr	x0, [x0, #32]
     484:	ldr	w0, [x0]
     488:	ldr	w1, [sp, #88]
     48c:	cmp	w1, w0
     490:	b.ls	4c0 <ext2fs_new_inode+0x2a4>  // b.plast
     494:	ldr	x0, [sp, #40]
     498:	ldr	x0, [x0, #32]
     49c:	ldr	w0, [x0, #76]
     4a0:	cmp	w0, #0x0
     4a4:	b.eq	4b8 <ext2fs_new_inode+0x29c>  // b.none
     4a8:	ldr	x0, [sp, #40]
     4ac:	ldr	x0, [x0, #32]
     4b0:	ldr	w0, [x0, #84]
     4b4:	b	4bc <ext2fs_new_inode+0x2a0>
     4b8:	mov	w0, #0xb                   	// #11
     4bc:	str	w0, [sp, #88]
     4c0:	ldr	w1, [sp, #88]
     4c4:	ldr	w0, [sp, #92]
     4c8:	cmp	w1, w0
     4cc:	b.ne	360 <ext2fs_new_inode+0x144>  // b.any
     4d0:	ldr	w1, [sp, #88]
     4d4:	ldr	x0, [sp, #24]
     4d8:	bl	0 <ext2fs_test_inode_bitmap2>
     4dc:	cmp	w0, #0x0
     4e0:	b.eq	4f0 <ext2fs_new_inode+0x2d4>  // b.none
     4e4:	mov	x0, #0xb749                	// #46921
     4e8:	movk	x0, #0x7f2b, lsl #16
     4ec:	b	500 <ext2fs_new_inode+0x2e4>
     4f0:	ldr	x0, [sp, #16]
     4f4:	ldr	w1, [sp, #88]
     4f8:	str	w1, [x0]
     4fc:	mov	x0, #0x0                   	// #0
     500:	ldp	x29, x30, [sp], #96
     504:	ret

0000000000000508 <ext2fs_new_block3>:
     508:	stp	x29, x30, [sp, #-96]!
     50c:	mov	x29, sp
     510:	str	x0, [sp, #56]
     514:	str	x1, [sp, #48]
     518:	str	x2, [sp, #40]
     51c:	str	x3, [sp, #32]
     520:	str	x4, [sp, #24]
     524:	str	xzr, [sp, #64]
     528:	ldr	x0, [sp, #56]
     52c:	ldr	x1, [x0]
     530:	mov	x0, #0xb701                	// #46849
     534:	movk	x0, #0x7f2b, lsl #16
     538:	cmp	x1, x0
     53c:	b.eq	54c <ext2fs_new_block3+0x44>  // b.none
     540:	mov	x0, #0xb701                	// #46849
     544:	movk	x0, #0x7f2b, lsl #16
     548:	b	770 <ext2fs_new_block3+0x268>
     54c:	ldr	x0, [sp, #40]
     550:	cmp	x0, #0x0
     554:	b.ne	5fc <ext2fs_new_block3+0xf4>  // b.any
     558:	ldr	x0, [sp, #56]
     55c:	ldr	x0, [x0, #256]
     560:	cmp	x0, #0x0
     564:	b.eq	5ac <ext2fs_new_block3+0xa4>  // b.none
     568:	ldr	x0, [sp, #56]
     56c:	ldr	x0, [x0, #256]
     570:	str	x0, [sp, #72]
     574:	ldr	x0, [sp, #56]
     578:	str	xzr, [x0, #256]
     57c:	add	x0, sp, #0x40
     580:	ldr	x4, [sp, #72]
     584:	ldr	x3, [sp, #24]
     588:	mov	x2, x0
     58c:	ldr	x1, [sp, #48]
     590:	ldr	x0, [sp, #56]
     594:	blr	x4
     598:	str	x0, [sp, #88]
     59c:	ldr	x0, [sp, #56]
     5a0:	ldr	x1, [sp, #72]
     5a4:	str	x1, [x0, #256]
     5a8:	b	718 <ext2fs_new_block3+0x210>
     5ac:	ldr	x0, [sp, #56]
     5b0:	ldr	x0, [x0, #248]
     5b4:	cmp	x0, #0x0
     5b8:	b.eq	5fc <ext2fs_new_block3+0xf4>  // b.none
     5bc:	ldr	x0, [sp, #56]
     5c0:	ldr	x0, [x0, #248]
     5c4:	str	x0, [sp, #80]
     5c8:	ldr	x0, [sp, #56]
     5cc:	str	xzr, [x0, #248]
     5d0:	add	x0, sp, #0x40
     5d4:	ldr	x3, [sp, #80]
     5d8:	mov	x2, x0
     5dc:	ldr	x1, [sp, #48]
     5e0:	ldr	x0, [sp, #56]
     5e4:	blr	x3
     5e8:	str	x0, [sp, #88]
     5ec:	ldr	x0, [sp, #56]
     5f0:	ldr	x1, [sp, #80]
     5f4:	str	x1, [x0, #248]
     5f8:	b	718 <ext2fs_new_block3+0x210>
     5fc:	ldr	x0, [sp, #40]
     600:	cmp	x0, #0x0
     604:	b.ne	614 <ext2fs_new_block3+0x10c>  // b.any
     608:	ldr	x0, [sp, #56]
     60c:	ldr	x0, [x0, #88]
     610:	str	x0, [sp, #40]
     614:	ldr	x0, [sp, #40]
     618:	cmp	x0, #0x0
     61c:	b.ne	62c <ext2fs_new_block3+0x124>  // b.any
     620:	mov	x0, #0xb728                	// #46888
     624:	movk	x0, #0x7f2b, lsl #16
     628:	b	770 <ext2fs_new_block3+0x268>
     62c:	ldr	x0, [sp, #48]
     630:	cmp	x0, #0x0
     634:	b.eq	654 <ext2fs_new_block3+0x14c>  // b.none
     638:	ldr	x0, [sp, #56]
     63c:	ldr	x0, [x0, #32]
     640:	bl	0 <ext2fs_blocks_count>
     644:	mov	x1, x0
     648:	ldr	x0, [sp, #48]
     64c:	cmp	x0, x1
     650:	b.cc	668 <ext2fs_new_block3+0x160>  // b.lo, b.ul, b.last
     654:	ldr	x0, [sp, #56]
     658:	ldr	x0, [x0, #32]
     65c:	ldr	w0, [x0, #20]
     660:	mov	w0, w0
     664:	str	x0, [sp, #48]
     668:	ldr	x0, [sp, #56]
     66c:	ldr	w0, [x0, #192]
     670:	mov	w1, #0x1                   	// #1
     674:	lsl	w0, w1, w0
     678:	neg	w0, w0
     67c:	sxtw	x0, w0
     680:	ldr	x1, [sp, #48]
     684:	and	x0, x1, x0
     688:	str	x0, [sp, #48]
     68c:	ldr	x0, [sp, #56]
     690:	ldr	x0, [x0, #32]
     694:	bl	0 <ext2fs_blocks_count>
     698:	sub	x0, x0, #0x1
     69c:	add	x1, sp, #0x40
     6a0:	mov	x3, x1
     6a4:	mov	x2, x0
     6a8:	ldr	x1, [sp, #48]
     6ac:	ldr	x0, [sp, #40]
     6b0:	bl	0 <ext2fs_find_first_zero_block_bitmap2>
     6b4:	str	x0, [sp, #88]
     6b8:	ldr	x0, [sp, #88]
     6bc:	cmp	x0, #0x2
     6c0:	b.ne	714 <ext2fs_new_block3+0x20c>  // b.any
     6c4:	ldr	x0, [sp, #56]
     6c8:	ldr	x0, [x0, #32]
     6cc:	ldr	w0, [x0, #20]
     6d0:	mov	w0, w0
     6d4:	ldr	x1, [sp, #48]
     6d8:	cmp	x1, x0
     6dc:	b.eq	714 <ext2fs_new_block3+0x20c>  // b.none
     6e0:	ldr	x0, [sp, #56]
     6e4:	ldr	x0, [x0, #32]
     6e8:	ldr	w0, [x0, #20]
     6ec:	mov	w1, w0
     6f0:	ldr	x0, [sp, #48]
     6f4:	sub	x0, x0, #0x1
     6f8:	add	x2, sp, #0x40
     6fc:	mov	x3, x2
     700:	mov	x2, x0
     704:	ldr	x0, [sp, #40]
     708:	bl	0 <ext2fs_find_first_zero_block_bitmap2>
     70c:	str	x0, [sp, #88]
     710:	b	718 <ext2fs_new_block3+0x210>
     714:	nop
     718:	ldr	x0, [sp, #88]
     71c:	cmp	x0, #0x2
     720:	b.ne	730 <ext2fs_new_block3+0x228>  // b.any
     724:	mov	x0, #0xb748                	// #46920
     728:	movk	x0, #0x7f2b, lsl #16
     72c:	b	770 <ext2fs_new_block3+0x268>
     730:	ldr	x0, [sp, #88]
     734:	cmp	x0, #0x0
     738:	b.eq	744 <ext2fs_new_block3+0x23c>  // b.none
     73c:	ldr	x0, [sp, #88]
     740:	b	770 <ext2fs_new_block3+0x268>
     744:	ldr	x0, [sp, #64]
     748:	mov	x1, x0
     74c:	ldr	x0, [sp, #56]
     750:	bl	0 <ext2fs_group_of_blk2>
     754:	mov	w1, w0
     758:	ldr	x0, [sp, #56]
     75c:	bl	98 <ext2fs_clear_block_uninit>
     760:	ldr	x1, [sp, #64]
     764:	ldr	x0, [sp, #32]
     768:	str	x1, [x0]
     76c:	mov	x0, #0x0                   	// #0
     770:	ldp	x29, x30, [sp], #96
     774:	ret

0000000000000778 <ext2fs_new_block2>:
     778:	stp	x29, x30, [sp, #-48]!
     77c:	mov	x29, sp
     780:	str	x0, [sp, #40]
     784:	str	x1, [sp, #32]
     788:	str	x2, [sp, #24]
     78c:	str	x3, [sp, #16]
     790:	mov	x4, #0x0                   	// #0
     794:	ldr	x3, [sp, #16]
     798:	ldr	x2, [sp, #24]
     79c:	ldr	x1, [sp, #32]
     7a0:	ldr	x0, [sp, #40]
     7a4:	bl	508 <ext2fs_new_block3>
     7a8:	ldp	x29, x30, [sp], #48
     7ac:	ret

00000000000007b0 <ext2fs_new_block>:
     7b0:	stp	x29, x30, [sp, #-64]!
     7b4:	mov	x29, sp
     7b8:	str	x0, [sp, #40]
     7bc:	str	w1, [sp, #36]
     7c0:	str	x2, [sp, #24]
     7c4:	str	x3, [sp, #16]
     7c8:	ldr	w0, [sp, #36]
     7cc:	add	x1, sp, #0x30
     7d0:	mov	x3, x1
     7d4:	ldr	x2, [sp, #24]
     7d8:	mov	x1, x0
     7dc:	ldr	x0, [sp, #40]
     7e0:	bl	778 <ext2fs_new_block2>
     7e4:	str	x0, [sp, #56]
     7e8:	ldr	x0, [sp, #56]
     7ec:	cmp	x0, #0x0
     7f0:	b.ne	804 <ext2fs_new_block+0x54>  // b.any
     7f4:	ldr	x0, [sp, #48]
     7f8:	mov	w1, w0
     7fc:	ldr	x0, [sp, #16]
     800:	str	w1, [x0]
     804:	ldr	x0, [sp, #56]
     808:	ldp	x29, x30, [sp], #64
     80c:	ret

0000000000000810 <ext2fs_alloc_block3>:
     810:	stp	x29, x30, [sp, #-80]!
     814:	mov	x29, sp
     818:	str	x0, [sp, #56]
     81c:	str	x1, [sp, #48]
     820:	str	x2, [sp, #40]
     824:	str	x3, [sp, #32]
     828:	str	x4, [sp, #24]
     82c:	ldr	x0, [sp, #56]
     830:	ldr	x0, [x0, #256]
     834:	cmp	x0, #0x0
     838:	b.eq	870 <ext2fs_alloc_block3+0x60>  // b.none
     83c:	ldr	x0, [sp, #56]
     840:	ldr	x4, [x0, #256]
     844:	add	x0, sp, #0x40
     848:	ldr	x3, [sp, #24]
     84c:	mov	x2, x0
     850:	ldr	x1, [sp, #48]
     854:	ldr	x0, [sp, #56]
     858:	blr	x4
     85c:	str	x0, [sp, #72]
     860:	ldr	x0, [sp, #72]
     864:	cmp	x0, #0x0
     868:	b.eq	904 <ext2fs_alloc_block3+0xf4>  // b.none
     86c:	b	9b0 <ext2fs_alloc_block3+0x1a0>
     870:	ldr	x0, [sp, #56]
     874:	ldr	x0, [x0, #248]
     878:	cmp	x0, #0x0
     87c:	b.eq	8b0 <ext2fs_alloc_block3+0xa0>  // b.none
     880:	ldr	x0, [sp, #56]
     884:	ldr	x3, [x0, #248]
     888:	add	x0, sp, #0x40
     88c:	mov	x2, x0
     890:	ldr	x1, [sp, #48]
     894:	ldr	x0, [sp, #56]
     898:	blr	x3
     89c:	str	x0, [sp, #72]
     8a0:	ldr	x0, [sp, #72]
     8a4:	cmp	x0, #0x0
     8a8:	b.eq	904 <ext2fs_alloc_block3+0xf4>  // b.none
     8ac:	b	9b0 <ext2fs_alloc_block3+0x1a0>
     8b0:	ldr	x0, [sp, #56]
     8b4:	ldr	x0, [x0, #88]
     8b8:	cmp	x0, #0x0
     8bc:	b.ne	8d8 <ext2fs_alloc_block3+0xc8>  // b.any
     8c0:	ldr	x0, [sp, #56]
     8c4:	bl	0 <ext2fs_read_block_bitmap>
     8c8:	str	x0, [sp, #72]
     8cc:	ldr	x0, [sp, #72]
     8d0:	cmp	x0, #0x0
     8d4:	b.ne	99c <ext2fs_alloc_block3+0x18c>  // b.any
     8d8:	add	x0, sp, #0x40
     8dc:	ldr	x4, [sp, #24]
     8e0:	mov	x3, x0
     8e4:	mov	x2, #0x0                   	// #0
     8e8:	ldr	x1, [sp, #48]
     8ec:	ldr	x0, [sp, #56]
     8f0:	bl	508 <ext2fs_new_block3>
     8f4:	str	x0, [sp, #72]
     8f8:	ldr	x0, [sp, #72]
     8fc:	cmp	x0, #0x0
     900:	b.ne	9a4 <ext2fs_alloc_block3+0x194>  // b.any
     904:	ldr	x0, [sp, #40]
     908:	cmp	x0, #0x0
     90c:	b.eq	94c <ext2fs_alloc_block3+0x13c>  // b.none
     910:	ldr	x0, [sp, #56]
     914:	ldr	w0, [x0, #40]
     918:	mov	w0, w0
     91c:	mov	x2, x0
     920:	mov	w1, #0x0                   	// #0
     924:	ldr	x0, [sp, #40]
     928:	bl	0 <memset>
     92c:	ldr	x0, [sp, #56]
     930:	ldr	x0, [x0, #8]
     934:	ldr	x1, [sp, #64]
     938:	ldr	x3, [sp, #40]
     93c:	mov	w2, #0x1                   	// #1
     940:	bl	0 <io_channel_write_blk64>
     944:	str	x0, [sp, #72]
     948:	b	96c <ext2fs_alloc_block3+0x15c>
     94c:	ldr	x0, [sp, #64]
     950:	mov	x4, #0x0                   	// #0
     954:	mov	x3, #0x0                   	// #0
     958:	mov	w2, #0x1                   	// #1
     95c:	mov	x1, x0
     960:	ldr	x0, [sp, #56]
     964:	bl	0 <ext2fs_zero_blocks2>
     968:	str	x0, [sp, #72]
     96c:	ldr	x0, [sp, #72]
     970:	cmp	x0, #0x0
     974:	b.ne	9ac <ext2fs_alloc_block3+0x19c>  // b.any
     978:	ldr	x0, [sp, #64]
     97c:	mov	w2, #0x1                   	// #1
     980:	mov	x1, x0
     984:	ldr	x0, [sp, #56]
     988:	bl	0 <ext2fs_block_alloc_stats2>
     98c:	ldr	x1, [sp, #64]
     990:	ldr	x0, [sp, #32]
     994:	str	x1, [x0]
     998:	b	9b0 <ext2fs_alloc_block3+0x1a0>
     99c:	nop
     9a0:	b	9b0 <ext2fs_alloc_block3+0x1a0>
     9a4:	nop
     9a8:	b	9b0 <ext2fs_alloc_block3+0x1a0>
     9ac:	nop
     9b0:	ldr	x0, [sp, #72]
     9b4:	ldp	x29, x30, [sp], #80
     9b8:	ret

00000000000009bc <ext2fs_alloc_block2>:
     9bc:	stp	x29, x30, [sp, #-48]!
     9c0:	mov	x29, sp
     9c4:	str	x0, [sp, #40]
     9c8:	str	x1, [sp, #32]
     9cc:	str	x2, [sp, #24]
     9d0:	str	x3, [sp, #16]
     9d4:	mov	x4, #0x0                   	// #0
     9d8:	ldr	x3, [sp, #16]
     9dc:	ldr	x2, [sp, #24]
     9e0:	ldr	x1, [sp, #32]
     9e4:	ldr	x0, [sp, #40]
     9e8:	bl	810 <ext2fs_alloc_block3>
     9ec:	ldp	x29, x30, [sp], #48
     9f0:	ret

00000000000009f4 <ext2fs_alloc_block>:
     9f4:	stp	x29, x30, [sp, #-80]!
     9f8:	mov	x29, sp
     9fc:	str	x0, [sp, #40]
     a00:	str	w1, [sp, #36]
     a04:	str	x2, [sp, #24]
     a08:	str	x3, [sp, #16]
     a0c:	ldr	w0, [sp, #36]
     a10:	str	x0, [sp, #72]
     a14:	add	x0, sp, #0x38
     a18:	mov	x4, #0x0                   	// #0
     a1c:	mov	x3, x0
     a20:	ldr	x2, [sp, #24]
     a24:	ldr	x1, [sp, #72]
     a28:	ldr	x0, [sp, #40]
     a2c:	bl	810 <ext2fs_alloc_block3>
     a30:	str	x0, [sp, #64]
     a34:	ldr	x0, [sp, #64]
     a38:	cmp	x0, #0x0
     a3c:	b.ne	a50 <ext2fs_alloc_block+0x5c>  // b.any
     a40:	ldr	x0, [sp, #56]
     a44:	mov	w1, w0
     a48:	ldr	x0, [sp, #16]
     a4c:	str	w1, [x0]
     a50:	ldr	x0, [sp, #64]
     a54:	ldp	x29, x30, [sp], #80
     a58:	ret

0000000000000a5c <ext2fs_get_free_blocks2>:
     a5c:	stp	x29, x30, [sp, #-96]!
     a60:	mov	x29, sp
     a64:	str	x19, [sp, #16]
     a68:	str	x0, [sp, #72]
     a6c:	str	x1, [sp, #64]
     a70:	str	x2, [sp, #56]
     a74:	str	w3, [sp, #52]
     a78:	str	x4, [sp, #40]
     a7c:	str	x5, [sp, #32]
     a80:	ldr	x0, [sp, #64]
     a84:	str	x0, [sp, #88]
     a88:	ldr	x0, [sp, #72]
     a8c:	ldr	x1, [x0]
     a90:	mov	x0, #0xb701                	// #46849
     a94:	movk	x0, #0x7f2b, lsl #16
     a98:	cmp	x1, x0
     a9c:	b.eq	aac <ext2fs_get_free_blocks2+0x50>  // b.none
     aa0:	mov	x0, #0xb701                	// #46849
     aa4:	movk	x0, #0x7f2b, lsl #16
     aa8:	b	c18 <ext2fs_get_free_blocks2+0x1bc>
     aac:	ldr	x0, [sp, #40]
     ab0:	cmp	x0, #0x0
     ab4:	b.ne	ac4 <ext2fs_get_free_blocks2+0x68>  // b.any
     ab8:	ldr	x0, [sp, #72]
     abc:	ldr	x0, [x0, #88]
     ac0:	str	x0, [sp, #40]
     ac4:	ldr	x0, [sp, #40]
     ac8:	cmp	x0, #0x0
     acc:	b.ne	adc <ext2fs_get_free_blocks2+0x80>  // b.any
     ad0:	mov	x0, #0xb728                	// #46888
     ad4:	movk	x0, #0x7f2b, lsl #16
     ad8:	b	c18 <ext2fs_get_free_blocks2+0x1bc>
     adc:	ldr	x0, [sp, #88]
     ae0:	cmp	x0, #0x0
     ae4:	b.ne	afc <ext2fs_get_free_blocks2+0xa0>  // b.any
     ae8:	ldr	x0, [sp, #72]
     aec:	ldr	x0, [x0, #32]
     af0:	ldr	w0, [x0, #20]
     af4:	mov	w0, w0
     af8:	str	x0, [sp, #88]
     afc:	ldr	x0, [sp, #56]
     b00:	cmp	x0, #0x0
     b04:	b.ne	b10 <ext2fs_get_free_blocks2+0xb4>  // b.any
     b08:	ldr	x0, [sp, #64]
     b0c:	str	x0, [sp, #56]
     b10:	ldr	w0, [sp, #52]
     b14:	cmp	w0, #0x0
     b18:	b.ne	b24 <ext2fs_get_free_blocks2+0xc8>  // b.any
     b1c:	mov	w0, #0x1                   	// #1
     b20:	str	w0, [sp, #52]
     b24:	ldr	x0, [sp, #40]
     b28:	bl	0 <ext2fs_get_bitmap_granularity>
     b2c:	mov	w1, w0
     b30:	mov	w0, #0x1                   	// #1
     b34:	lsl	w0, w0, w1
     b38:	str	w0, [sp, #84]
     b3c:	ldr	w0, [sp, #84]
     b40:	neg	w0, w0
     b44:	sxtw	x0, w0
     b48:	ldr	x1, [sp, #88]
     b4c:	and	x0, x1, x0
     b50:	str	x0, [sp, #88]
     b54:	ldr	w0, [sp, #84]
     b58:	neg	w0, w0
     b5c:	sxtw	x0, w0
     b60:	ldr	x1, [sp, #56]
     b64:	and	x0, x1, x0
     b68:	str	x0, [sp, #56]
     b6c:	ldrsw	x1, [sp, #52]
     b70:	ldr	x0, [sp, #88]
     b74:	add	x0, x1, x0
     b78:	sub	x19, x0, #0x1
     b7c:	ldr	x0, [sp, #72]
     b80:	ldr	x0, [x0, #32]
     b84:	bl	0 <ext2fs_blocks_count>
     b88:	cmp	x19, x0
     b8c:	b.cc	bc0 <ext2fs_get_free_blocks2+0x164>  // b.lo, b.ul, b.last
     b90:	ldr	x1, [sp, #56]
     b94:	ldr	x0, [sp, #64]
     b98:	cmp	x1, x0
     b9c:	b.ls	bac <ext2fs_get_free_blocks2+0x150>  // b.plast
     ba0:	mov	x0, #0xb748                	// #46920
     ba4:	movk	x0, #0x7f2b, lsl #16
     ba8:	b	c18 <ext2fs_get_free_blocks2+0x1bc>
     bac:	ldr	x0, [sp, #72]
     bb0:	ldr	x0, [x0, #32]
     bb4:	ldr	w0, [x0, #20]
     bb8:	mov	w0, w0
     bbc:	str	x0, [sp, #88]
     bc0:	ldr	w0, [sp, #52]
     bc4:	mov	w2, w0
     bc8:	ldr	x1, [sp, #88]
     bcc:	ldr	x0, [sp, #40]
     bd0:	bl	0 <ext2fs_fast_test_block_bitmap_range2>
     bd4:	cmp	w0, #0x0
     bd8:	b.eq	bf0 <ext2fs_get_free_blocks2+0x194>  // b.none
     bdc:	ldr	x0, [sp, #32]
     be0:	ldr	x1, [sp, #88]
     be4:	str	x1, [x0]
     be8:	mov	x0, #0x0                   	// #0
     bec:	b	c18 <ext2fs_get_free_blocks2+0x1bc>
     bf0:	ldrsw	x0, [sp, #84]
     bf4:	ldr	x1, [sp, #88]
     bf8:	add	x0, x1, x0
     bfc:	str	x0, [sp, #88]
     c00:	ldr	x1, [sp, #88]
     c04:	ldr	x0, [sp, #56]
     c08:	cmp	x1, x0
     c0c:	b.ne	b6c <ext2fs_get_free_blocks2+0x110>  // b.any
     c10:	mov	x0, #0xb748                	// #46920
     c14:	movk	x0, #0x7f2b, lsl #16
     c18:	ldr	x19, [sp, #16]
     c1c:	ldp	x29, x30, [sp], #96
     c20:	ret

0000000000000c24 <ext2fs_get_free_blocks>:
     c24:	stp	x29, x30, [sp, #-80]!
     c28:	mov	x29, sp
     c2c:	str	x0, [sp, #56]
     c30:	str	w1, [sp, #52]
     c34:	str	w2, [sp, #48]
     c38:	str	w3, [sp, #44]
     c3c:	str	x4, [sp, #32]
     c40:	str	x5, [sp, #24]
     c44:	ldr	w0, [sp, #52]
     c48:	ldr	w1, [sp, #48]
     c4c:	add	x2, sp, #0x40
     c50:	mov	x5, x2
     c54:	ldr	x4, [sp, #32]
     c58:	ldr	w3, [sp, #44]
     c5c:	mov	x2, x1
     c60:	mov	x1, x0
     c64:	ldr	x0, [sp, #56]
     c68:	bl	a5c <ext2fs_get_free_blocks2>
     c6c:	str	x0, [sp, #72]
     c70:	ldr	x0, [sp, #72]
     c74:	cmp	x0, #0x0
     c78:	b.ne	c8c <ext2fs_get_free_blocks+0x68>  // b.any
     c7c:	ldr	x0, [sp, #64]
     c80:	mov	w1, w0
     c84:	ldr	x0, [sp, #24]
     c88:	str	w1, [x0]
     c8c:	ldr	x0, [sp, #72]
     c90:	ldp	x29, x30, [sp], #80
     c94:	ret

0000000000000c98 <ext2fs_set_alloc_block_callback>:
     c98:	sub	sp, sp, #0x20
     c9c:	str	x0, [sp, #24]
     ca0:	str	x1, [sp, #16]
     ca4:	str	x2, [sp, #8]
     ca8:	ldr	x0, [sp, #24]
     cac:	cmp	x0, #0x0
     cb0:	b.eq	cf8 <ext2fs_set_alloc_block_callback+0x60>  // b.none
     cb4:	ldr	x0, [sp, #24]
     cb8:	ldr	x1, [x0]
     cbc:	mov	x0, #0xb701                	// #46849
     cc0:	movk	x0, #0x7f2b, lsl #16
     cc4:	cmp	x1, x0
     cc8:	b.ne	cf8 <ext2fs_set_alloc_block_callback+0x60>  // b.any
     ccc:	ldr	x0, [sp, #8]
     cd0:	cmp	x0, #0x0
     cd4:	b.eq	ce8 <ext2fs_set_alloc_block_callback+0x50>  // b.none
     cd8:	ldr	x0, [sp, #24]
     cdc:	ldr	x1, [x0, #248]
     ce0:	ldr	x0, [sp, #8]
     ce4:	str	x1, [x0]
     ce8:	ldr	x0, [sp, #24]
     cec:	ldr	x1, [sp, #16]
     cf0:	str	x1, [x0, #248]
     cf4:	b	cfc <ext2fs_set_alloc_block_callback+0x64>
     cf8:	nop
     cfc:	add	sp, sp, #0x20
     d00:	ret

0000000000000d04 <ext2fs_find_inode_goal>:
     d04:	stp	x29, x30, [sp, #-112]!
     d08:	mov	x29, sp
     d0c:	str	x0, [sp, #40]
     d10:	str	w1, [sp, #36]
     d14:	str	x2, [sp, #24]
     d18:	str	x3, [sp, #16]
     d1c:	str	xzr, [sp, #56]
     d20:	ldr	x0, [sp, #24]
     d24:	cmp	x0, #0x0
     d28:	b.eq	e10 <ext2fs_find_inode_goal+0x10c>  // b.none
     d2c:	ldr	x0, [sp, #24]
     d30:	bl	0 <ext2fs_is_fast_symlink>
     d34:	cmp	w0, #0x0
     d38:	b.ne	e10 <ext2fs_find_inode_goal+0x10c>  // b.any
     d3c:	ldr	x0, [sp, #24]
     d40:	ldr	w0, [x0, #32]
     d44:	and	w0, w0, #0x10000000
     d48:	cmp	w0, #0x0
     d4c:	b.ne	e10 <ext2fs_find_inode_goal+0x10c>  // b.any
     d50:	ldr	x0, [sp, #24]
     d54:	ldr	w0, [x0, #32]
     d58:	and	w0, w0, #0x80000
     d5c:	cmp	w0, #0x0
     d60:	b.eq	df0 <ext2fs_find_inode_goal+0xec>  // b.none
     d64:	add	x0, sp, #0x38
     d68:	mov	x3, x0
     d6c:	ldr	x2, [sp, #24]
     d70:	ldr	w1, [sp, #36]
     d74:	ldr	x0, [sp, #40]
     d78:	bl	0 <ext2fs_extent_open2>
     d7c:	str	x0, [sp, #96]
     d80:	ldr	x0, [sp, #96]
     d84:	cmp	x0, #0x0
     d88:	b.ne	e18 <ext2fs_find_inode_goal+0x114>  // b.any
     d8c:	ldr	x0, [sp, #56]
     d90:	ldr	x2, [sp, #16]
     d94:	mov	w1, #0x0                   	// #0
     d98:	bl	0 <ext2fs_extent_goto2>
     d9c:	str	x0, [sp, #96]
     da0:	ldr	x0, [sp, #96]
     da4:	cmp	x0, #0x0
     da8:	b.ne	e20 <ext2fs_find_inode_goal+0x11c>  // b.any
     dac:	ldr	x0, [sp, #56]
     db0:	add	x1, sp, #0x40
     db4:	mov	x2, x1
     db8:	mov	w1, #0x0                   	// #0
     dbc:	bl	0 <ext2fs_extent_get>
     dc0:	str	x0, [sp, #96]
     dc4:	ldr	x0, [sp, #96]
     dc8:	cmp	x0, #0x0
     dcc:	b.ne	e28 <ext2fs_find_inode_goal+0x124>  // b.any
     dd0:	ldr	x0, [sp, #56]
     dd4:	bl	0 <ext2fs_extent_free>
     dd8:	ldr	x1, [sp, #64]
     ddc:	ldr	x0, [sp, #72]
     de0:	ldr	x2, [sp, #16]
     de4:	sub	x0, x2, x0
     de8:	add	x0, x1, x0
     dec:	b	e94 <ext2fs_find_inode_goal+0x190>
     df0:	ldr	x0, [sp, #24]
     df4:	ldr	w0, [x0, #40]
     df8:	cmp	w0, #0x0
     dfc:	b.eq	e30 <ext2fs_find_inode_goal+0x12c>  // b.none
     e00:	ldr	x0, [sp, #24]
     e04:	ldr	w0, [x0, #40]
     e08:	mov	w0, w0
     e0c:	b	e94 <ext2fs_find_inode_goal+0x190>
     e10:	nop
     e14:	b	e34 <ext2fs_find_inode_goal+0x130>
     e18:	nop
     e1c:	b	e34 <ext2fs_find_inode_goal+0x130>
     e20:	nop
     e24:	b	e34 <ext2fs_find_inode_goal+0x130>
     e28:	nop
     e2c:	b	e34 <ext2fs_find_inode_goal+0x130>
     e30:	nop
     e34:	ldr	x0, [sp, #56]
     e38:	bl	0 <ext2fs_extent_free>
     e3c:	ldr	x0, [sp, #40]
     e40:	ldr	x0, [x0, #32]
     e44:	ldrb	w0, [x0, #372]
     e48:	strb	w0, [sp, #95]
     e4c:	ldr	w1, [sp, #36]
     e50:	ldr	x0, [sp, #40]
     e54:	bl	0 <ext2fs_group_of_ino>
     e58:	str	w0, [sp, #108]
     e5c:	ldrb	w0, [sp, #95]
     e60:	cmp	w0, #0x0
     e64:	b.eq	e88 <ext2fs_find_inode_goal+0x184>  // b.none
     e68:	ldrb	w0, [sp, #95]
     e6c:	mov	w1, #0x1                   	// #1
     e70:	lsl	w0, w1, w0
     e74:	neg	w0, w0
     e78:	mov	w1, w0
     e7c:	ldr	w0, [sp, #108]
     e80:	and	w0, w0, w1
     e84:	str	w0, [sp, #108]
     e88:	ldr	w1, [sp, #108]
     e8c:	ldr	x0, [sp, #40]
     e90:	bl	0 <ext2fs_group_first_block2>
     e94:	ldp	x29, x30, [sp], #112
     e98:	ret

0000000000000e9c <ext2fs_new_range>:
     e9c:	stp	x29, x30, [sp, #-144]!
     ea0:	mov	x29, sp
     ea4:	str	x0, [sp, #72]
     ea8:	str	w1, [sp, #68]
     eac:	str	x2, [sp, #56]
     eb0:	str	x3, [sp, #48]
     eb4:	str	x4, [sp, #40]
     eb8:	str	x5, [sp, #32]
     ebc:	str	x6, [sp, #24]
     ec0:	str	wzr, [sp, #124]
     ec4:	ldr	x0, [sp, #72]
     ec8:	ldr	x0, [x0, #32]
     ecc:	bl	0 <ext2fs_blocks_count>
     ed0:	str	x0, [sp, #112]
     ed4:	ldr	x0, [sp, #72]
     ed8:	ldr	x1, [x0]
     edc:	mov	x0, #0xb701                	// #46849
     ee0:	movk	x0, #0x7f2b, lsl #16
     ee4:	cmp	x1, x0
     ee8:	b.eq	ef8 <ext2fs_new_range+0x5c>  // b.none
     eec:	mov	x0, #0xb701                	// #46849
     ef0:	movk	x0, #0x7f2b, lsl #16
     ef4:	b	128c <ext2fs_new_range+0x3f0>
     ef8:	ldr	x0, [sp, #48]
     efc:	cmp	x0, #0x0
     f00:	b.eq	f14 <ext2fs_new_range+0x78>  // b.none
     f04:	ldr	w0, [sp, #68]
     f08:	and	w0, w0, #0xfffffffc
     f0c:	cmp	w0, #0x0
     f10:	b.eq	f20 <ext2fs_new_range+0x84>  // b.none
     f14:	mov	x0, #0xb747                	// #46919
     f18:	movk	x0, #0x7f2b, lsl #16
     f1c:	b	128c <ext2fs_new_range+0x3f0>
     f20:	ldr	x0, [sp, #40]
     f24:	cmp	x0, #0x0
     f28:	b.ne	fbc <ext2fs_new_range+0x120>  // b.any
     f2c:	ldr	x0, [sp, #72]
     f30:	ldr	x0, [x0, #336]
     f34:	cmp	x0, #0x0
     f38:	b.eq	fbc <ext2fs_new_range+0x120>  // b.none
     f3c:	ldr	x0, [sp, #72]
     f40:	ldr	x0, [x0, #336]
     f44:	str	x0, [sp, #104]
     f48:	ldr	x0, [sp, #72]
     f4c:	str	xzr, [x0, #336]
     f50:	ldr	x6, [sp, #104]
     f54:	ldr	x5, [sp, #24]
     f58:	ldr	x4, [sp, #32]
     f5c:	ldr	x3, [sp, #48]
     f60:	ldr	x2, [sp, #56]
     f64:	ldr	w1, [sp, #68]
     f68:	ldr	x0, [sp, #72]
     f6c:	blr	x6
     f70:	str	x0, [sp, #136]
     f74:	ldr	x0, [sp, #72]
     f78:	ldr	x1, [sp, #104]
     f7c:	str	x1, [x0, #336]
     f80:	ldr	x0, [sp, #136]
     f84:	cmp	x0, #0x0
     f88:	b.eq	f94 <ext2fs_new_range+0xf8>  // b.none
     f8c:	ldr	x0, [sp, #136]
     f90:	b	128c <ext2fs_new_range+0x3f0>
     f94:	ldr	x0, [sp, #32]
     f98:	ldr	x0, [x0]
     f9c:	str	x0, [sp, #96]
     fa0:	ldr	x0, [sp, #32]
     fa4:	ldr	x1, [x0]
     fa8:	ldr	x0, [sp, #24]
     fac:	ldr	x0, [x0]
     fb0:	add	x0, x1, x0
     fb4:	str	x0, [sp, #88]
     fb8:	b	1188 <ext2fs_new_range+0x2ec>
     fbc:	ldr	x0, [sp, #40]
     fc0:	cmp	x0, #0x0
     fc4:	b.ne	fd4 <ext2fs_new_range+0x138>  // b.any
     fc8:	ldr	x0, [sp, #72]
     fcc:	ldr	x0, [x0, #88]
     fd0:	str	x0, [sp, #40]
     fd4:	ldr	x0, [sp, #40]
     fd8:	cmp	x0, #0x0
     fdc:	b.ne	fec <ext2fs_new_range+0x150>  // b.any
     fe0:	mov	x0, #0xb728                	// #46888
     fe4:	movk	x0, #0x7f2b, lsl #16
     fe8:	b	128c <ext2fs_new_range+0x3f0>
     fec:	ldr	x0, [sp, #56]
     ff0:	cmp	x0, #0x0
     ff4:	b.eq	1014 <ext2fs_new_range+0x178>  // b.none
     ff8:	ldr	x0, [sp, #72]
     ffc:	ldr	x0, [x0, #32]
    1000:	bl	0 <ext2fs_blocks_count>
    1004:	mov	x1, x0
    1008:	ldr	x0, [sp, #56]
    100c:	cmp	x0, x1
    1010:	b.cc	1028 <ext2fs_new_range+0x18c>  // b.lo, b.ul, b.last
    1014:	ldr	x0, [sp, #72]
    1018:	ldr	x0, [x0, #32]
    101c:	ldr	w0, [x0, #20]
    1020:	mov	w0, w0
    1024:	str	x0, [sp, #56]
    1028:	ldr	x0, [sp, #56]
    102c:	str	x0, [sp, #96]
    1030:	b	1230 <ext2fs_new_range+0x394>
    1034:	ldr	x1, [sp, #96]
    1038:	ldr	x0, [sp, #112]
    103c:	sub	x0, x0, #0x1
    1040:	add	x2, sp, #0x60
    1044:	mov	x3, x2
    1048:	mov	x2, x0
    104c:	ldr	x0, [sp, #40]
    1050:	bl	0 <ext2fs_find_first_zero_block_bitmap2>
    1054:	str	x0, [sp, #136]
    1058:	ldr	x0, [sp, #136]
    105c:	cmp	x0, #0x2
    1060:	b.ne	10a8 <ext2fs_new_range+0x20c>  // b.any
    1064:	ldr	w0, [sp, #68]
    1068:	and	w0, w0, #0x1
    106c:	cmp	w0, #0x0
    1070:	b.ne	1250 <ext2fs_new_range+0x3b4>  // b.any
    1074:	ldr	x0, [sp, #72]
    1078:	ldr	x0, [x0, #32]
    107c:	ldr	w0, [x0, #20]
    1080:	mov	w1, w0
    1084:	ldr	x0, [sp, #96]
    1088:	cmp	x1, x0
    108c:	b.eq	1250 <ext2fs_new_range+0x3b4>  // b.none
    1090:	ldr	x0, [sp, #72]
    1094:	ldr	x0, [x0, #32]
    1098:	ldr	w0, [x0, #20]
    109c:	mov	w0, w0
    10a0:	str	x0, [sp, #96]
    10a4:	b	1230 <ext2fs_new_range+0x394>
    10a8:	ldr	x0, [sp, #136]
    10ac:	cmp	x0, #0x0
    10b0:	b.ne	127c <ext2fs_new_range+0x3e0>  // b.any
    10b4:	ldr	w0, [sp, #68]
    10b8:	and	w0, w0, #0x1
    10bc:	cmp	w0, #0x0
    10c0:	b.eq	10d4 <ext2fs_new_range+0x238>  // b.none
    10c4:	ldr	x0, [sp, #96]
    10c8:	ldr	x1, [sp, #56]
    10cc:	cmp	x1, x0
    10d0:	b.ne	1258 <ext2fs_new_range+0x3bc>  // b.any
    10d4:	ldr	x0, [sp, #112]
    10d8:	sub	x1, x0, #0x1
    10dc:	ldr	x2, [sp, #96]
    10e0:	ldr	x0, [sp, #48]
    10e4:	add	x0, x2, x0
    10e8:	sub	x0, x0, #0x1
    10ec:	cmp	x1, x0
    10f0:	csel	x0, x1, x0, ls  // ls = plast
    10f4:	str	x0, [sp, #128]
    10f8:	ldr	x0, [sp, #96]
    10fc:	add	x1, sp, #0x58
    1100:	mov	x3, x1
    1104:	ldr	x2, [sp, #128]
    1108:	mov	x1, x0
    110c:	ldr	x0, [sp, #40]
    1110:	bl	0 <ext2fs_find_first_set_block_bitmap2>
    1114:	str	x0, [sp, #136]
    1118:	ldr	x0, [sp, #136]
    111c:	cmp	x0, #0x2
    1120:	b.ne	1134 <ext2fs_new_range+0x298>  // b.any
    1124:	ldr	x0, [sp, #128]
    1128:	add	x0, x0, #0x1
    112c:	str	x0, [sp, #88]
    1130:	b	1140 <ext2fs_new_range+0x2a4>
    1134:	ldr	x0, [sp, #136]
    1138:	cmp	x0, #0x0
    113c:	b.ne	1284 <ext2fs_new_range+0x3e8>  // b.any
    1140:	ldr	w0, [sp, #68]
    1144:	and	w0, w0, #0x2
    1148:	cmp	w0, #0x0
    114c:	b.eq	1168 <ext2fs_new_range+0x2cc>  // b.none
    1150:	ldr	x1, [sp, #88]
    1154:	ldr	x0, [sp, #96]
    1158:	sub	x0, x1, x0
    115c:	ldr	x1, [sp, #48]
    1160:	cmp	x1, x0
    1164:	b.hi	11e0 <ext2fs_new_range+0x344>  // b.pmore
    1168:	ldr	x1, [sp, #96]
    116c:	ldr	x0, [sp, #32]
    1170:	str	x1, [x0]
    1174:	ldr	x1, [sp, #88]
    1178:	ldr	x0, [sp, #96]
    117c:	sub	x1, x1, x0
    1180:	ldr	x0, [sp, #24]
    1184:	str	x1, [x0]
    1188:	ldr	x0, [sp, #96]
    118c:	str	x0, [sp, #128]
    1190:	b	11c8 <ext2fs_new_range+0x32c>
    1194:	ldr	x1, [sp, #128]
    1198:	ldr	x0, [sp, #72]
    119c:	bl	0 <ext2fs_group_of_blk2>
    11a0:	mov	w1, w0
    11a4:	ldr	x0, [sp, #72]
    11a8:	bl	98 <ext2fs_clear_block_uninit>
    11ac:	ldr	x0, [sp, #72]
    11b0:	ldr	x0, [x0, #32]
    11b4:	ldr	w0, [x0, #32]
    11b8:	mov	w0, w0
    11bc:	ldr	x1, [sp, #128]
    11c0:	add	x0, x1, x0
    11c4:	str	x0, [sp, #128]
    11c8:	ldr	x0, [sp, #88]
    11cc:	ldr	x1, [sp, #128]
    11d0:	cmp	x1, x0
    11d4:	b.cc	1194 <ext2fs_new_range+0x2f8>  // b.lo, b.ul, b.last
    11d8:	mov	x0, #0x0                   	// #0
    11dc:	b	128c <ext2fs_new_range+0x3f0>
    11e0:	ldr	w0, [sp, #68]
    11e4:	and	w0, w0, #0x1
    11e8:	cmp	w0, #0x0
    11ec:	b.ne	1260 <ext2fs_new_range+0x3c4>  // b.any
    11f0:	ldr	x0, [sp, #88]
    11f4:	str	x0, [sp, #96]
    11f8:	ldr	x0, [sp, #96]
    11fc:	ldr	x1, [sp, #112]
    1200:	cmp	x1, x0
    1204:	b.hi	1230 <ext2fs_new_range+0x394>  // b.pmore
    1208:	ldr	w0, [sp, #124]
    120c:	cmp	w0, #0x0
    1210:	b.ne	1268 <ext2fs_new_range+0x3cc>  // b.any
    1214:	mov	w0, #0x1                   	// #1
    1218:	str	w0, [sp, #124]
    121c:	ldr	x0, [sp, #72]
    1220:	ldr	x0, [x0, #32]
    1224:	ldr	w0, [x0, #20]
    1228:	mov	w0, w0
    122c:	str	x0, [sp, #96]
    1230:	ldr	w0, [sp, #124]
    1234:	cmp	w0, #0x0
    1238:	b.eq	1034 <ext2fs_new_range+0x198>  // b.none
    123c:	ldr	x0, [sp, #96]
    1240:	ldr	x1, [sp, #56]
    1244:	cmp	x1, x0
    1248:	b.cs	1034 <ext2fs_new_range+0x198>  // b.hs, b.nlast
    124c:	b	126c <ext2fs_new_range+0x3d0>
    1250:	nop
    1254:	b	126c <ext2fs_new_range+0x3d0>
    1258:	nop
    125c:	b	126c <ext2fs_new_range+0x3d0>
    1260:	nop
    1264:	b	126c <ext2fs_new_range+0x3d0>
    1268:	nop
    126c:	mov	x0, #0xb748                	// #46920
    1270:	movk	x0, #0x7f2b, lsl #16
    1274:	str	x0, [sp, #136]
    1278:	b	1288 <ext2fs_new_range+0x3ec>
    127c:	nop
    1280:	b	1288 <ext2fs_new_range+0x3ec>
    1284:	nop
    1288:	ldr	x0, [sp, #136]
    128c:	ldp	x29, x30, [sp], #144
    1290:	ret

0000000000001294 <ext2fs_set_new_range_callback>:
    1294:	sub	sp, sp, #0x20
    1298:	str	x0, [sp, #24]
    129c:	str	x1, [sp, #16]
    12a0:	str	x2, [sp, #8]
    12a4:	ldr	x0, [sp, #24]
    12a8:	cmp	x0, #0x0
    12ac:	b.eq	12f4 <ext2fs_set_new_range_callback+0x60>  // b.none
    12b0:	ldr	x0, [sp, #24]
    12b4:	ldr	x1, [x0]
    12b8:	mov	x0, #0xb701                	// #46849
    12bc:	movk	x0, #0x7f2b, lsl #16
    12c0:	cmp	x1, x0
    12c4:	b.ne	12f4 <ext2fs_set_new_range_callback+0x60>  // b.any
    12c8:	ldr	x0, [sp, #8]
    12cc:	cmp	x0, #0x0
    12d0:	b.eq	12e4 <ext2fs_set_new_range_callback+0x50>  // b.none
    12d4:	ldr	x0, [sp, #24]
    12d8:	ldr	x1, [x0, #336]
    12dc:	ldr	x0, [sp, #8]
    12e0:	str	x1, [x0]
    12e4:	ldr	x0, [sp, #24]
    12e8:	ldr	x1, [sp, #16]
    12ec:	str	x1, [x0, #336]
    12f0:	b	12f8 <ext2fs_set_new_range_callback+0x64>
    12f4:	nop
    12f8:	add	sp, sp, #0x20
    12fc:	ret

0000000000001300 <ext2fs_alloc_range>:
    1300:	stp	x29, x30, [sp, #-80]!
    1304:	mov	x29, sp
    1308:	str	x0, [sp, #40]
    130c:	str	w1, [sp, #36]
    1310:	str	x2, [sp, #24]
    1314:	str	w3, [sp, #32]
    1318:	str	x4, [sp, #16]
    131c:	mov	w0, #0x2                   	// #2
    1320:	str	w0, [sp, #76]
    1324:	ldr	x0, [sp, #40]
    1328:	ldr	x1, [x0]
    132c:	mov	x0, #0xb701                	// #46849
    1330:	movk	x0, #0x7f2b, lsl #16
    1334:	cmp	x1, x0
    1338:	b.eq	1348 <ext2fs_alloc_range+0x48>  // b.none
    133c:	mov	x0, #0xb701                	// #46849
    1340:	movk	x0, #0x7f2b, lsl #16
    1344:	b	1454 <ext2fs_alloc_range+0x154>
    1348:	ldr	w0, [sp, #32]
    134c:	cmp	w0, #0x0
    1350:	b.eq	1364 <ext2fs_alloc_range+0x64>  // b.none
    1354:	ldr	w0, [sp, #36]
    1358:	and	w0, w0, #0xfffffffc
    135c:	cmp	w0, #0x0
    1360:	b.eq	1370 <ext2fs_alloc_range+0x70>  // b.none
    1364:	mov	x0, #0xb747                	// #46919
    1368:	movk	x0, #0x7f2b, lsl #16
    136c:	b	1454 <ext2fs_alloc_range+0x154>
    1370:	ldr	w0, [sp, #36]
    1374:	and	w0, w0, #0x1
    1378:	cmp	w0, #0x0
    137c:	b.eq	138c <ext2fs_alloc_range+0x8c>  // b.none
    1380:	ldr	w0, [sp, #76]
    1384:	orr	w0, w0, #0x1
    1388:	str	w0, [sp, #76]
    138c:	ldr	w0, [sp, #32]
    1390:	add	x1, sp, #0x38
    1394:	mov	x6, x1
    1398:	ldr	x5, [sp, #16]
    139c:	mov	x4, #0x0                   	// #0
    13a0:	mov	x3, x0
    13a4:	ldr	x2, [sp, #24]
    13a8:	ldr	w1, [sp, #76]
    13ac:	ldr	x0, [sp, #40]
    13b0:	bl	e9c <ext2fs_new_range>
    13b4:	str	x0, [sp, #64]
    13b8:	ldr	x0, [sp, #64]
    13bc:	cmp	x0, #0x0
    13c0:	b.eq	13cc <ext2fs_alloc_range+0xcc>  // b.none
    13c4:	ldr	x0, [sp, #64]
    13c8:	b	1454 <ext2fs_alloc_range+0x154>
    13cc:	ldr	w1, [sp, #32]
    13d0:	ldr	x0, [sp, #56]
    13d4:	cmp	x1, x0
    13d8:	b.ls	13e8 <ext2fs_alloc_range+0xe8>  // b.plast
    13dc:	mov	x0, #0xb748                	// #46920
    13e0:	movk	x0, #0x7f2b, lsl #16
    13e4:	b	1454 <ext2fs_alloc_range+0x154>
    13e8:	ldr	w0, [sp, #36]
    13ec:	and	w0, w0, #0x2
    13f0:	cmp	w0, #0x0
    13f4:	b.eq	1434 <ext2fs_alloc_range+0x134>  // b.none
    13f8:	ldr	x0, [sp, #16]
    13fc:	ldr	x0, [x0]
    1400:	ldr	w1, [sp, #32]
    1404:	mov	x4, #0x0                   	// #0
    1408:	mov	x3, #0x0                   	// #0
    140c:	mov	w2, w1
    1410:	mov	x1, x0
    1414:	ldr	x0, [sp, #40]
    1418:	bl	0 <ext2fs_zero_blocks2>
    141c:	str	x0, [sp, #64]
    1420:	ldr	x0, [sp, #64]
    1424:	cmp	x0, #0x0
    1428:	b.eq	1434 <ext2fs_alloc_range+0x134>  // b.none
    142c:	ldr	x0, [sp, #64]
    1430:	b	1454 <ext2fs_alloc_range+0x154>
    1434:	ldr	x0, [sp, #16]
    1438:	ldr	x0, [x0]
    143c:	mov	w3, #0x1                   	// #1
    1440:	ldr	w2, [sp, #32]
    1444:	mov	x1, x0
    1448:	ldr	x0, [sp, #40]
    144c:	bl	0 <ext2fs_block_alloc_stats_range>
    1450:	ldr	x0, [sp, #64]
    1454:	ldp	x29, x30, [sp], #80
    1458:	ret

alloc_sb.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_meta_bg>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x10
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_reserve_super_and_bgd>:
  28:	stp	x29, x30, [sp, #-112]!
  2c:	mov	x29, sp
  30:	str	x19, [sp, #16]
  34:	str	x0, [sp, #56]
  38:	str	w1, [sp, #52]
  3c:	str	x2, [sp, #40]
  40:	add	x3, sp, #0x4c
  44:	add	x2, sp, #0x50
  48:	add	x1, sp, #0x58
  4c:	add	x0, sp, #0x60
  50:	mov	x5, x3
  54:	mov	x4, x2
  58:	mov	x3, x1
  5c:	mov	x2, x0
  60:	ldr	w1, [sp, #52]
  64:	ldr	x0, [sp, #56]
  68:	bl	0 <ext2fs_super_and_bgd_loc2>
  6c:	ldr	x0, [sp, #56]
  70:	ldr	x0, [x0, #32]
  74:	bl	0 <ext2fs_has_feature_meta_bg>
  78:	cmp	w0, #0x0
  7c:	b.eq	94 <ext2fs_reserve_super_and_bgd+0x6c>  // b.none
  80:	ldr	x0, [sp, #56]
  84:	ldr	x0, [x0, #32]
  88:	ldr	w0, [x0, #260]
  8c:	str	w0, [sp, #108]
  90:	b	b4 <ext2fs_reserve_super_and_bgd+0x8c>
  94:	ldr	x0, [sp, #56]
  98:	ldr	x0, [x0, #56]
  9c:	mov	w1, w0
  a0:	ldr	x0, [sp, #56]
  a4:	ldr	x0, [x0, #32]
  a8:	ldrh	w0, [x0, #206]
  ac:	add	w0, w1, w0
  b0:	str	w0, [sp, #108]
  b4:	ldr	x0, [sp, #96]
  b8:	cmp	x0, #0x0
  bc:	b.ne	cc <ext2fs_reserve_super_and_bgd+0xa4>  // b.any
  c0:	ldr	w0, [sp, #52]
  c4:	cmp	w0, #0x0
  c8:	b.ne	dc <ext2fs_reserve_super_and_bgd+0xb4>  // b.any
  cc:	ldr	x0, [sp, #96]
  d0:	mov	x1, x0
  d4:	ldr	x0, [sp, #40]
  d8:	bl	0 <ext2fs_mark_block_bitmap2>
  dc:	ldr	w0, [sp, #52]
  e0:	cmp	w0, #0x0
  e4:	b.ne	11c <ext2fs_reserve_super_and_bgd+0xf4>  // b.any
  e8:	ldr	x0, [sp, #56]
  ec:	ldr	w0, [x0, #40]
  f0:	cmp	w0, #0x400
  f4:	b.ne	11c <ext2fs_reserve_super_and_bgd+0xf4>  // b.any
  f8:	ldr	x0, [sp, #56]
  fc:	ldr	w0, [x0, #192]
 100:	mov	w1, #0x1                   	// #1
 104:	lsl	w0, w1, w0
 108:	cmp	w0, #0x1
 10c:	b.le	11c <ext2fs_reserve_super_and_bgd+0xf4>
 110:	mov	x1, #0x0                   	// #0
 114:	ldr	x0, [sp, #40]
 118:	bl	0 <ext2fs_mark_block_bitmap2>
 11c:	ldr	x0, [sp, #88]
 120:	cmp	x0, #0x0
 124:	b.eq	184 <ext2fs_reserve_super_and_bgd+0x15c>  // b.none
 128:	ldr	w0, [sp, #108]
 12c:	str	w0, [sp, #104]
 130:	ldrsw	x1, [sp, #104]
 134:	ldr	x0, [sp, #88]
 138:	add	x19, x1, x0
 13c:	ldr	x0, [sp, #56]
 140:	ldr	x0, [x0, #32]
 144:	bl	0 <ext2fs_blocks_count>
 148:	cmp	x19, x0
 14c:	b.cc	16c <ext2fs_reserve_super_and_bgd+0x144>  // b.lo, b.ul, b.last
 150:	ldr	x0, [sp, #56]
 154:	ldr	x0, [x0, #32]
 158:	bl	0 <ext2fs_blocks_count>
 15c:	mov	w1, w0
 160:	ldr	x0, [sp, #88]
 164:	sub	w0, w1, w0
 168:	str	w0, [sp, #104]
 16c:	ldr	x0, [sp, #88]
 170:	ldr	w1, [sp, #104]
 174:	mov	w2, w1
 178:	mov	x1, x0
 17c:	ldr	x0, [sp, #40]
 180:	bl	0 <ext2fs_mark_block_bitmap_range2>
 184:	ldr	x0, [sp, #80]
 188:	cmp	x0, #0x0
 18c:	b.eq	1a0 <ext2fs_reserve_super_and_bgd+0x178>  // b.none
 190:	ldr	x0, [sp, #80]
 194:	mov	x1, x0
 198:	ldr	x0, [sp, #40]
 19c:	bl	0 <ext2fs_mark_block_bitmap2>
 1a0:	ldr	w1, [sp, #52]
 1a4:	ldr	x0, [sp, #56]
 1a8:	bl	0 <ext2fs_group_blocks_count>
 1ac:	str	w0, [sp, #104]
 1b0:	ldr	w1, [sp, #104]
 1b4:	ldr	x0, [sp, #56]
 1b8:	ldr	w2, [x0, #72]
 1bc:	ldr	w0, [sp, #76]
 1c0:	add	w0, w2, w0
 1c4:	sub	w0, w1, w0
 1c8:	sub	w0, w0, #0x2
 1cc:	str	w0, [sp, #104]
 1d0:	ldr	w0, [sp, #104]
 1d4:	ldr	x19, [sp, #16]
 1d8:	ldp	x29, x30, [sp], #112
 1dc:	ret

alloc_stats.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x10
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_metadata_csum>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #100]
  38:	and	w0, w0, #0x400
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <ext2fs_has_group_desc_csum>:
  50:	stp	x29, x30, [sp, #-32]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #24]
  5c:	ldr	x0, [sp, #24]
  60:	ldr	x0, [x0, #32]
  64:	bl	28 <ext2fs_has_feature_metadata_csum>
  68:	cmp	w0, #0x0
  6c:	b.ne	84 <ext2fs_has_group_desc_csum+0x34>  // b.any
  70:	ldr	x0, [sp, #24]
  74:	ldr	x0, [x0, #32]
  78:	bl	0 <ext2fs_has_feature_gdt_csum>
  7c:	cmp	w0, #0x0
  80:	b.eq	8c <ext2fs_has_group_desc_csum+0x3c>  // b.none
  84:	mov	w0, #0x1                   	// #1
  88:	b	90 <ext2fs_has_group_desc_csum+0x40>
  8c:	mov	w0, #0x0                   	// #0
  90:	ldp	x29, x30, [sp], #32
  94:	ret

0000000000000098 <ext2fs_inode_alloc_stats2>:
  98:	stp	x29, x30, [sp, #-80]!
  9c:	mov	x29, sp
  a0:	str	x19, [sp, #16]
  a4:	str	x0, [sp, #56]
  a8:	str	w1, [sp, #52]
  ac:	str	w2, [sp, #48]
  b0:	str	w3, [sp, #44]
  b4:	ldr	w1, [sp, #52]
  b8:	ldr	x0, [sp, #56]
  bc:	bl	0 <ext2fs_group_of_ino>
  c0:	str	w0, [sp, #76]
  c4:	ldr	x0, [sp, #56]
  c8:	ldr	x0, [x0, #32]
  cc:	ldr	w0, [x0]
  d0:	ldr	w1, [sp, #52]
  d4:	cmp	w1, w0
  d8:	b.ls	100 <ext2fs_inode_alloc_stats2+0x68>  // b.plast
  dc:	ldr	w0, [sp, #52]
  e0:	mov	x3, x0
  e4:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
  e8:	add	x2, x0, #0x0
  ec:	mov	x1, #0x0                   	// #0
  f0:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
  f4:	add	x0, x0, #0x0
  f8:	bl	0 <com_err>
  fc:	b	284 <ext2fs_inode_alloc_stats2+0x1ec>
 100:	ldr	w0, [sp, #48]
 104:	cmp	w0, #0x0
 108:	b.le	120 <ext2fs_inode_alloc_stats2+0x88>
 10c:	ldr	x0, [sp, #56]
 110:	ldr	x0, [x0, #80]
 114:	ldr	w1, [sp, #52]
 118:	bl	0 <ext2fs_mark_inode_bitmap2>
 11c:	b	130 <ext2fs_inode_alloc_stats2+0x98>
 120:	ldr	x0, [sp, #56]
 124:	ldr	x0, [x0, #80]
 128:	ldr	w1, [sp, #52]
 12c:	bl	0 <ext2fs_unmark_inode_bitmap2>
 130:	ldr	w19, [sp, #76]
 134:	ldr	w0, [sp, #76]
 138:	mov	w1, w0
 13c:	ldr	x0, [sp, #56]
 140:	bl	0 <ext2fs_bg_free_inodes_count>
 144:	mov	w1, w0
 148:	ldr	w0, [sp, #48]
 14c:	sub	w0, w1, w0
 150:	mov	w2, w0
 154:	mov	w1, w19
 158:	ldr	x0, [sp, #56]
 15c:	bl	0 <ext2fs_bg_free_inodes_count_set>
 160:	ldr	w0, [sp, #44]
 164:	cmp	w0, #0x0
 168:	b.eq	19c <ext2fs_inode_alloc_stats2+0x104>  // b.none
 16c:	ldr	w19, [sp, #76]
 170:	ldr	w0, [sp, #76]
 174:	mov	w1, w0
 178:	ldr	x0, [sp, #56]
 17c:	bl	0 <ext2fs_bg_used_dirs_count>
 180:	mov	w1, w0
 184:	ldr	w0, [sp, #48]
 188:	add	w0, w1, w0
 18c:	mov	w2, w0
 190:	mov	w1, w19
 194:	ldr	x0, [sp, #56]
 198:	bl	0 <ext2fs_bg_used_dirs_count_set>
 19c:	ldr	w0, [sp, #76]
 1a0:	mov	w2, #0x1                   	// #1
 1a4:	mov	w1, w0
 1a8:	ldr	x0, [sp, #56]
 1ac:	bl	0 <ext2fs_bg_flags_clear>
 1b0:	ldr	x0, [sp, #56]
 1b4:	bl	50 <ext2fs_has_group_desc_csum>
 1b8:	cmp	w0, #0x0
 1bc:	b.eq	254 <ext2fs_inode_alloc_stats2+0x1bc>  // b.none
 1c0:	ldr	x0, [sp, #56]
 1c4:	ldr	x0, [x0, #32]
 1c8:	ldr	w19, [x0, #40]
 1cc:	ldr	w0, [sp, #76]
 1d0:	mov	w1, w0
 1d4:	ldr	x0, [sp, #56]
 1d8:	bl	0 <ext2fs_bg_itable_unused>
 1dc:	sub	w1, w19, w0
 1e0:	ldr	x0, [sp, #56]
 1e4:	ldr	x0, [x0, #32]
 1e8:	ldr	w2, [x0, #40]
 1ec:	ldr	w0, [sp, #76]
 1f0:	mul	w0, w2, w0
 1f4:	add	w0, w1, w0
 1f8:	add	w0, w0, #0x1
 1fc:	str	w0, [sp, #72]
 200:	ldr	w1, [sp, #52]
 204:	ldr	w0, [sp, #72]
 208:	cmp	w1, w0
 20c:	b.cc	244 <ext2fs_inode_alloc_stats2+0x1ac>  // b.lo, b.ul, b.last
 210:	ldr	w3, [sp, #76]
 214:	ldr	w0, [sp, #76]
 218:	add	w1, w0, #0x1
 21c:	ldr	x0, [sp, #56]
 220:	ldr	x0, [x0, #32]
 224:	ldr	w0, [x0, #40]
 228:	mul	w1, w1, w0
 22c:	ldr	w0, [sp, #52]
 230:	sub	w0, w1, w0
 234:	mov	w2, w0
 238:	mov	w1, w3
 23c:	ldr	x0, [sp, #56]
 240:	bl	0 <ext2fs_bg_itable_unused_set>
 244:	ldr	w0, [sp, #76]
 248:	mov	w1, w0
 24c:	ldr	x0, [sp, #56]
 250:	bl	0 <ext2fs_group_desc_csum_set>
 254:	ldr	x0, [sp, #56]
 258:	ldr	x0, [x0, #32]
 25c:	ldr	w2, [x0, #16]
 260:	ldr	w1, [sp, #48]
 264:	ldr	x0, [sp, #56]
 268:	ldr	x0, [x0, #32]
 26c:	sub	w1, w2, w1
 270:	str	w1, [x0, #16]
 274:	ldr	x0, [sp, #56]
 278:	bl	0 <ext2fs_mark_super_dirty>
 27c:	ldr	x0, [sp, #56]
 280:	bl	0 <ext2fs_mark_ib_dirty>
 284:	ldr	x19, [sp, #16]
 288:	ldp	x29, x30, [sp], #80
 28c:	ret

0000000000000290 <ext2fs_inode_alloc_stats>:
 290:	stp	x29, x30, [sp, #-32]!
 294:	mov	x29, sp
 298:	str	x0, [sp, #24]
 29c:	str	w1, [sp, #20]
 2a0:	str	w2, [sp, #16]
 2a4:	mov	w3, #0x0                   	// #0
 2a8:	ldr	w2, [sp, #16]
 2ac:	ldr	w1, [sp, #20]
 2b0:	ldr	x0, [sp, #24]
 2b4:	bl	98 <ext2fs_inode_alloc_stats2>
 2b8:	nop
 2bc:	ldp	x29, x30, [sp], #32
 2c0:	ret

00000000000002c4 <ext2fs_block_alloc_stats2>:
 2c4:	stp	x29, x30, [sp, #-80]!
 2c8:	mov	x29, sp
 2cc:	str	x19, [sp, #16]
 2d0:	str	x0, [sp, #56]
 2d4:	str	x1, [sp, #48]
 2d8:	str	w2, [sp, #44]
 2dc:	ldr	x1, [sp, #48]
 2e0:	ldr	x0, [sp, #56]
 2e4:	bl	0 <ext2fs_group_of_blk2>
 2e8:	str	w0, [sp, #76]
 2ec:	ldr	x0, [sp, #56]
 2f0:	ldr	x0, [x0, #32]
 2f4:	bl	0 <ext2fs_blocks_count>
 2f8:	mov	x1, x0
 2fc:	ldr	x0, [sp, #48]
 300:	cmp	x0, x1
 304:	b.cc	328 <ext2fs_block_alloc_stats2+0x64>  // b.lo, b.ul, b.last
 308:	ldr	x3, [sp, #48]
 30c:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
 310:	add	x2, x0, #0x0
 314:	mov	x1, #0x0                   	// #0
 318:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
 31c:	add	x0, x0, #0x0
 320:	bl	0 <com_err>
 324:	b	41c <ext2fs_block_alloc_stats2+0x158>
 328:	ldr	w0, [sp, #44]
 32c:	cmp	w0, #0x0
 330:	b.le	348 <ext2fs_block_alloc_stats2+0x84>
 334:	ldr	x0, [sp, #56]
 338:	ldr	x0, [x0, #88]
 33c:	ldr	x1, [sp, #48]
 340:	bl	0 <ext2fs_mark_block_bitmap2>
 344:	b	358 <ext2fs_block_alloc_stats2+0x94>
 348:	ldr	x0, [sp, #56]
 34c:	ldr	x0, [x0, #88]
 350:	ldr	x1, [sp, #48]
 354:	bl	0 <ext2fs_unmark_block_bitmap2>
 358:	ldr	w19, [sp, #76]
 35c:	ldr	w0, [sp, #76]
 360:	mov	w1, w0
 364:	ldr	x0, [sp, #56]
 368:	bl	0 <ext2fs_bg_free_blocks_count>
 36c:	mov	w1, w0
 370:	ldr	w0, [sp, #44]
 374:	sub	w0, w1, w0
 378:	mov	w2, w0
 37c:	mov	w1, w19
 380:	ldr	x0, [sp, #56]
 384:	bl	0 <ext2fs_bg_free_blocks_count_set>
 388:	ldr	w0, [sp, #76]
 38c:	mov	w2, #0x2                   	// #2
 390:	mov	w1, w0
 394:	ldr	x0, [sp, #56]
 398:	bl	0 <ext2fs_bg_flags_clear>
 39c:	ldr	w0, [sp, #76]
 3a0:	mov	w1, w0
 3a4:	ldr	x0, [sp, #56]
 3a8:	bl	0 <ext2fs_group_desc_csum_set>
 3ac:	ldr	x0, [sp, #56]
 3b0:	ldr	x3, [x0, #32]
 3b4:	ldr	w0, [sp, #44]
 3b8:	neg	w0, w0
 3bc:	sxtw	x1, w0
 3c0:	ldr	x0, [sp, #56]
 3c4:	ldr	w0, [x0, #192]
 3c8:	mov	w2, #0x1                   	// #1
 3cc:	lsl	w0, w2, w0
 3d0:	sxtw	x0, w0
 3d4:	mul	x0, x1, x0
 3d8:	mov	x1, x0
 3dc:	mov	x0, x3
 3e0:	bl	0 <ext2fs_free_blocks_count_add>
 3e4:	ldr	x0, [sp, #56]
 3e8:	bl	0 <ext2fs_mark_super_dirty>
 3ec:	ldr	x0, [sp, #56]
 3f0:	bl	0 <ext2fs_mark_bb_dirty>
 3f4:	ldr	x0, [sp, #56]
 3f8:	ldr	x0, [x0, #264]
 3fc:	cmp	x0, #0x0
 400:	b.eq	41c <ext2fs_block_alloc_stats2+0x158>  // b.none
 404:	ldr	x0, [sp, #56]
 408:	ldr	x3, [x0, #264]
 40c:	ldr	w2, [sp, #44]
 410:	ldr	x1, [sp, #48]
 414:	ldr	x0, [sp, #56]
 418:	blr	x3
 41c:	ldr	x19, [sp, #16]
 420:	ldp	x29, x30, [sp], #80
 424:	ret

0000000000000428 <ext2fs_block_alloc_stats>:
 428:	stp	x29, x30, [sp, #-32]!
 42c:	mov	x29, sp
 430:	str	x0, [sp, #24]
 434:	str	w1, [sp, #20]
 438:	str	w2, [sp, #16]
 43c:	ldr	w0, [sp, #20]
 440:	ldr	w2, [sp, #16]
 444:	mov	x1, x0
 448:	ldr	x0, [sp, #24]
 44c:	bl	2c4 <ext2fs_block_alloc_stats2>
 450:	nop
 454:	ldp	x29, x30, [sp], #32
 458:	ret

000000000000045c <ext2fs_set_block_alloc_stats_callback>:
 45c:	sub	sp, sp, #0x20
 460:	str	x0, [sp, #24]
 464:	str	x1, [sp, #16]
 468:	str	x2, [sp, #8]
 46c:	ldr	x0, [sp, #24]
 470:	cmp	x0, #0x0
 474:	b.eq	4bc <ext2fs_set_block_alloc_stats_callback+0x60>  // b.none
 478:	ldr	x0, [sp, #24]
 47c:	ldr	x1, [x0]
 480:	mov	x0, #0xb701                	// #46849
 484:	movk	x0, #0x7f2b, lsl #16
 488:	cmp	x1, x0
 48c:	b.ne	4bc <ext2fs_set_block_alloc_stats_callback+0x60>  // b.any
 490:	ldr	x0, [sp, #8]
 494:	cmp	x0, #0x0
 498:	b.eq	4ac <ext2fs_set_block_alloc_stats_callback+0x50>  // b.none
 49c:	ldr	x0, [sp, #24]
 4a0:	ldr	x1, [x0, #264]
 4a4:	ldr	x0, [sp, #8]
 4a8:	str	x1, [x0]
 4ac:	ldr	x0, [sp, #24]
 4b0:	ldr	x1, [sp, #16]
 4b4:	str	x1, [x0, #264]
 4b8:	b	4c0 <ext2fs_set_block_alloc_stats_callback+0x64>
 4bc:	nop
 4c0:	add	sp, sp, #0x20
 4c4:	ret

00000000000004c8 <ext2fs_block_alloc_stats_range>:
 4c8:	stp	x29, x30, [sp, #-96]!
 4cc:	mov	x29, sp
 4d0:	str	x19, [sp, #16]
 4d4:	str	x0, [sp, #56]
 4d8:	str	x1, [sp, #48]
 4dc:	str	w2, [sp, #44]
 4e0:	str	w3, [sp, #40]
 4e4:	ldr	w1, [sp, #44]
 4e8:	ldr	x0, [sp, #48]
 4ec:	add	x19, x1, x0
 4f0:	ldr	x0, [sp, #56]
 4f4:	ldr	x0, [x0, #32]
 4f8:	bl	0 <ext2fs_blocks_count>
 4fc:	cmp	x19, x0
 500:	b.ls	528 <ext2fs_block_alloc_stats_range+0x60>  // b.plast
 504:	ldr	w4, [sp, #44]
 508:	ldr	x3, [sp, #48]
 50c:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
 510:	add	x2, x0, #0x0
 514:	mov	x1, #0x0                   	// #0
 518:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
 51c:	add	x0, x0, #0x0
 520:	bl	0 <com_err>
 524:	b	6e8 <ext2fs_block_alloc_stats_range+0x220>
 528:	ldr	w0, [sp, #40]
 52c:	cmp	w0, #0x0
 530:	b.eq	6e4 <ext2fs_block_alloc_stats_range+0x21c>  // b.none
 534:	ldr	w0, [sp, #40]
 538:	cmp	w0, #0x0
 53c:	b.le	560 <ext2fs_block_alloc_stats_range+0x98>
 540:	ldr	x0, [sp, #56]
 544:	ldr	x0, [x0, #88]
 548:	ldr	w2, [sp, #44]
 54c:	ldr	x1, [sp, #48]
 550:	bl	0 <ext2fs_mark_block_bitmap_range2>
 554:	mov	w0, #0x1                   	// #1
 558:	str	w0, [sp, #40]
 55c:	b	698 <ext2fs_block_alloc_stats_range+0x1d0>
 560:	ldr	x0, [sp, #56]
 564:	ldr	x0, [x0, #88]
 568:	ldr	w2, [sp, #44]
 56c:	ldr	x1, [sp, #48]
 570:	bl	0 <ext2fs_unmark_block_bitmap_range2>
 574:	mov	w0, #0xffffffff            	// #-1
 578:	str	w0, [sp, #40]
 57c:	b	698 <ext2fs_block_alloc_stats_range+0x1d0>
 580:	ldr	x1, [sp, #48]
 584:	ldr	x0, [sp, #56]
 588:	bl	0 <ext2fs_group_of_blk2>
 58c:	str	w0, [sp, #84]
 590:	ldr	w0, [sp, #84]
 594:	mov	w1, w0
 598:	ldr	x0, [sp, #56]
 59c:	bl	0 <ext2fs_group_last_block2>
 5a0:	str	x0, [sp, #72]
 5a4:	ldr	w0, [sp, #44]
 5a8:	str	x0, [sp, #88]
 5ac:	ldr	w1, [sp, #44]
 5b0:	ldr	x0, [sp, #48]
 5b4:	add	x0, x1, x0
 5b8:	ldr	x1, [sp, #72]
 5bc:	cmp	x1, x0
 5c0:	b.cs	5d8 <ext2fs_block_alloc_stats_range+0x110>  // b.hs, b.nlast
 5c4:	ldr	x1, [sp, #72]
 5c8:	ldr	x0, [sp, #48]
 5cc:	sub	x0, x1, x0
 5d0:	add	x0, x0, #0x1
 5d4:	str	x0, [sp, #88]
 5d8:	ldr	w19, [sp, #84]
 5dc:	ldr	w0, [sp, #84]
 5e0:	mov	w1, w0
 5e4:	ldr	x0, [sp, #56]
 5e8:	bl	0 <ext2fs_bg_free_blocks_count>
 5ec:	mov	w3, w0
 5f0:	ldrsw	x1, [sp, #40]
 5f4:	ldr	x0, [sp, #88]
 5f8:	mul	x1, x1, x0
 5fc:	ldr	x0, [sp, #56]
 600:	ldr	w0, [x0, #192]
 604:	mov	w2, #0x1                   	// #1
 608:	lsl	w0, w2, w0
 60c:	sxtw	x0, w0
 610:	udiv	x0, x1, x0
 614:	sub	w0, w3, w0
 618:	mov	w2, w0
 61c:	mov	w1, w19
 620:	ldr	x0, [sp, #56]
 624:	bl	0 <ext2fs_bg_free_blocks_count_set>
 628:	ldr	w0, [sp, #84]
 62c:	mov	w2, #0x2                   	// #2
 630:	mov	w1, w0
 634:	ldr	x0, [sp, #56]
 638:	bl	0 <ext2fs_bg_flags_clear>
 63c:	ldr	w0, [sp, #84]
 640:	mov	w1, w0
 644:	ldr	x0, [sp, #56]
 648:	bl	0 <ext2fs_group_desc_csum_set>
 64c:	ldr	x0, [sp, #56]
 650:	ldr	x2, [x0, #32]
 654:	ldr	w0, [sp, #40]
 658:	neg	w0, w0
 65c:	sxtw	x1, w0
 660:	ldr	x0, [sp, #88]
 664:	mul	x0, x1, x0
 668:	mov	x1, x0
 66c:	mov	x0, x2
 670:	bl	0 <ext2fs_free_blocks_count_add>
 674:	ldr	x1, [sp, #48]
 678:	ldr	x0, [sp, #88]
 67c:	add	x0, x1, x0
 680:	str	x0, [sp, #48]
 684:	ldr	x0, [sp, #88]
 688:	mov	w1, w0
 68c:	ldr	w0, [sp, #44]
 690:	sub	w0, w0, w1
 694:	str	w0, [sp, #44]
 698:	ldr	w0, [sp, #44]
 69c:	cmp	w0, #0x0
 6a0:	b.ne	580 <ext2fs_block_alloc_stats_range+0xb8>  // b.any
 6a4:	ldr	x0, [sp, #56]
 6a8:	bl	0 <ext2fs_mark_super_dirty>
 6ac:	ldr	x0, [sp, #56]
 6b0:	bl	0 <ext2fs_mark_bb_dirty>
 6b4:	ldr	x0, [sp, #56]
 6b8:	ldr	x0, [x0, #344]
 6bc:	cmp	x0, #0x0
 6c0:	b.eq	6e8 <ext2fs_block_alloc_stats_range+0x220>  // b.none
 6c4:	ldr	x0, [sp, #56]
 6c8:	ldr	x4, [x0, #344]
 6cc:	ldr	w3, [sp, #40]
 6d0:	ldr	w2, [sp, #44]
 6d4:	ldr	x1, [sp, #48]
 6d8:	ldr	x0, [sp, #56]
 6dc:	blr	x4
 6e0:	b	6e8 <ext2fs_block_alloc_stats_range+0x220>
 6e4:	nop
 6e8:	ldr	x19, [sp, #16]
 6ec:	ldp	x29, x30, [sp], #96
 6f0:	ret

00000000000006f4 <ext2fs_set_block_alloc_stats_range_callback>:
 6f4:	sub	sp, sp, #0x20
 6f8:	str	x0, [sp, #24]
 6fc:	str	x1, [sp, #16]
 700:	str	x2, [sp, #8]
 704:	ldr	x0, [sp, #24]
 708:	cmp	x0, #0x0
 70c:	b.eq	754 <ext2fs_set_block_alloc_stats_range_callback+0x60>  // b.none
 710:	ldr	x0, [sp, #24]
 714:	ldr	x1, [x0]
 718:	mov	x0, #0xb701                	// #46849
 71c:	movk	x0, #0x7f2b, lsl #16
 720:	cmp	x1, x0
 724:	b.ne	754 <ext2fs_set_block_alloc_stats_range_callback+0x60>  // b.any
 728:	ldr	x0, [sp, #8]
 72c:	cmp	x0, #0x0
 730:	b.eq	744 <ext2fs_set_block_alloc_stats_range_callback+0x50>  // b.none
 734:	ldr	x0, [sp, #24]
 738:	ldr	x1, [x0, #344]
 73c:	ldr	x0, [sp, #8]
 740:	str	x1, [x0]
 744:	ldr	x0, [sp, #24]
 748:	ldr	x1, [sp, #16]
 74c:	str	x1, [x0, #344]
 750:	b	758 <ext2fs_set_block_alloc_stats_range_callback+0x64>
 754:	nop
 758:	add	sp, sp, #0x20
 75c:	ret

alloc_tables.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_flex_bg>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x200
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <flexbg_offset>:
  28:	stp	x29, x30, [sp, #-96]!
  2c:	mov	x29, sp
  30:	str	x0, [sp, #56]
  34:	str	w1, [sp, #52]
  38:	str	x2, [sp, #40]
  3c:	str	x3, [sp, #32]
  40:	str	w4, [sp, #48]
  44:	str	w5, [sp, #28]
  48:	str	xzr, [sp, #64]
  4c:	ldr	x0, [sp, #56]
  50:	ldr	x0, [x0, #32]
  54:	ldrb	w0, [x0, #372]
  58:	mov	w1, w0
  5c:	mov	w0, #0x1                   	// #1
  60:	lsl	w0, w0, w1
  64:	str	w0, [sp, #84]
  68:	ldr	w0, [sp, #84]
  6c:	ldr	w1, [sp, #52]
  70:	udiv	w0, w1, w0
  74:	str	w0, [sp, #80]
  78:	ldr	w1, [sp, #48]
  7c:	ldr	w0, [sp, #28]
  80:	mul	w0, w1, w0
  84:	str	w0, [sp, #92]
  88:	ldr	x0, [sp, #56]
  8c:	ldr	x0, [x0, #32]
  90:	ldr	w0, [x0, #32]
  94:	lsr	w0, w0, #2
  98:	mov	w1, w0
  9c:	ldr	w0, [sp, #92]
  a0:	cmp	w0, w1
  a4:	b.le	c8 <flexbg_offset+0xa0>
  a8:	ldr	x0, [sp, #56]
  ac:	ldr	x0, [x0, #32]
  b0:	ldr	w0, [x0, #32]
  b4:	add	w1, w0, #0x3
  b8:	cmp	w0, #0x0
  bc:	csel	w0, w1, w0, lt  // lt = tstop
  c0:	asr	w0, w0, #2
  c4:	str	w0, [sp, #92]
  c8:	ldr	x0, [sp, #40]
  cc:	cmp	x0, #0x0
  d0:	b.eq	12c <flexbg_offset+0x104>  // b.none
  d4:	ldr	x0, [sp, #56]
  d8:	ldr	x0, [x0, #32]
  dc:	bl	0 <ext2fs_blocks_count>
  e0:	mov	x1, x0
  e4:	ldr	x0, [sp, #40]
  e8:	cmp	x0, x1
  ec:	b.cs	12c <flexbg_offset+0x104>  // b.hs, b.nlast
  f0:	ldrsw	x1, [sp, #92]
  f4:	ldr	x0, [sp, #40]
  f8:	add	x0, x1, x0
  fc:	add	x1, sp, #0x40
 100:	mov	x5, x1
 104:	ldr	x4, [sp, #32]
 108:	ldr	w3, [sp, #28]
 10c:	mov	x2, x0
 110:	ldr	x1, [sp, #40]
 114:	ldr	x0, [sp, #56]
 118:	bl	0 <ext2fs_get_free_blocks2>
 11c:	cmp	x0, #0x0
 120:	b.ne	12c <flexbg_offset+0x104>  // b.any
 124:	ldr	x0, [sp, #64]
 128:	b	22c <flexbg_offset+0x204>
 12c:	ldr	w1, [sp, #84]
 130:	ldr	w0, [sp, #80]
 134:	mul	w0, w1, w0
 138:	mov	w1, w0
 13c:	ldr	x0, [sp, #56]
 140:	bl	0 <ext2fs_group_first_block2>
 144:	str	x0, [sp, #40]
 148:	ldr	w0, [sp, #84]
 14c:	sub	w0, w0, #0x1
 150:	mov	w1, w0
 154:	ldr	w0, [sp, #52]
 158:	orr	w0, w0, w1
 15c:	str	w0, [sp, #88]
 160:	ldr	x0, [sp, #56]
 164:	ldr	w0, [x0, #48]
 168:	sub	w0, w0, #0x1
 16c:	ldr	w1, [sp, #88]
 170:	cmp	w1, w0
 174:	b.ls	188 <flexbg_offset+0x160>  // b.plast
 178:	ldr	x0, [sp, #56]
 17c:	ldr	w0, [x0, #48]
 180:	sub	w0, w0, #0x1
 184:	str	w0, [sp, #88]
 188:	ldr	w1, [sp, #88]
 18c:	ldr	x0, [sp, #56]
 190:	bl	0 <ext2fs_group_last_block2>
 194:	str	x0, [sp, #72]
 198:	add	x0, sp, #0x40
 19c:	mov	x5, x0
 1a0:	ldr	x4, [sp, #32]
 1a4:	ldr	w3, [sp, #92]
 1a8:	ldr	x2, [sp, #72]
 1ac:	ldr	x1, [sp, #40]
 1b0:	ldr	x0, [sp, #56]
 1b4:	bl	0 <ext2fs_get_free_blocks2>
 1b8:	cmp	x0, #0x0
 1bc:	b.ne	1c8 <flexbg_offset+0x1a0>  // b.any
 1c0:	ldr	x0, [sp, #64]
 1c4:	b	22c <flexbg_offset+0x204>
 1c8:	add	x0, sp, #0x40
 1cc:	mov	x5, x0
 1d0:	ldr	x4, [sp, #32]
 1d4:	ldr	w3, [sp, #28]
 1d8:	ldr	x2, [sp, #72]
 1dc:	ldr	x1, [sp, #40]
 1e0:	ldr	x0, [sp, #56]
 1e4:	bl	0 <ext2fs_get_free_blocks2>
 1e8:	cmp	x0, #0x0
 1ec:	b.ne	1f8 <flexbg_offset+0x1d0>  // b.any
 1f0:	ldr	x0, [sp, #64]
 1f4:	b	22c <flexbg_offset+0x204>
 1f8:	add	x0, sp, #0x40
 1fc:	mov	x5, x0
 200:	ldr	x4, [sp, #32]
 204:	ldr	w3, [sp, #28]
 208:	ldr	x2, [sp, #72]
 20c:	mov	x1, #0x0                   	// #0
 210:	ldr	x0, [sp, #56]
 214:	bl	0 <ext2fs_get_free_blocks2>
 218:	cmp	x0, #0x0
 21c:	b.ne	228 <flexbg_offset+0x200>  // b.any
 220:	ldr	x0, [sp, #64]
 224:	b	22c <flexbg_offset+0x204>
 228:	ldr	x0, [sp, #64]
 22c:	ldp	x29, x30, [sp], #96
 230:	ret

0000000000000234 <ext2fs_allocate_group_table>:
 234:	stp	x29, x30, [sp, #-192]!
 238:	mov	x29, sp
 23c:	str	x19, [sp, #16]
 240:	str	x0, [sp, #56]
 244:	str	w1, [sp, #52]
 248:	str	x2, [sp, #40]
 24c:	str	wzr, [sp, #164]
 250:	str	wzr, [sp, #160]
 254:	str	wzr, [sp, #156]
 258:	str	wzr, [sp, #152]
 25c:	ldr	w1, [sp, #52]
 260:	ldr	x0, [sp, #56]
 264:	bl	0 <ext2fs_group_first_block2>
 268:	str	x0, [sp, #176]
 26c:	ldr	w1, [sp, #52]
 270:	ldr	x0, [sp, #56]
 274:	bl	0 <ext2fs_group_last_block2>
 278:	str	x0, [sp, #168]
 27c:	ldr	x0, [sp, #40]
 280:	cmp	x0, #0x0
 284:	b.ne	294 <ext2fs_allocate_group_table+0x60>  // b.any
 288:	ldr	x0, [sp, #56]
 28c:	ldr	x0, [x0, #88]
 290:	str	x0, [sp, #40]
 294:	ldr	x0, [sp, #56]
 298:	ldr	x0, [x0, #32]
 29c:	bl	0 <ext2fs_has_feature_flex_bg>
 2a0:	cmp	w0, #0x0
 2a4:	b.eq	32c <ext2fs_allocate_group_table+0xf8>  // b.none
 2a8:	ldr	x0, [sp, #56]
 2ac:	ldr	x0, [x0, #32]
 2b0:	ldrb	w0, [x0, #372]
 2b4:	cmp	w0, #0x0
 2b8:	b.eq	32c <ext2fs_allocate_group_table+0xf8>  // b.none
 2bc:	ldr	x0, [sp, #56]
 2c0:	ldr	x0, [x0, #32]
 2c4:	ldrb	w0, [x0, #372]
 2c8:	mov	w1, w0
 2cc:	mov	w0, #0x1                   	// #1
 2d0:	lsl	w0, w0, w1
 2d4:	str	w0, [sp, #156]
 2d8:	ldr	w0, [sp, #156]
 2dc:	sub	w0, w0, #0x1
 2e0:	mov	w1, w0
 2e4:	ldr	w0, [sp, #52]
 2e8:	orr	w0, w0, w1
 2ec:	str	w0, [sp, #164]
 2f0:	ldr	x0, [sp, #56]
 2f4:	ldr	w0, [x0, #48]
 2f8:	sub	w0, w0, #0x1
 2fc:	ldr	w1, [sp, #164]
 300:	cmp	w1, w0
 304:	b.ls	318 <ext2fs_allocate_group_table+0xe4>  // b.plast
 308:	ldr	x0, [sp, #56]
 30c:	ldr	w0, [x0, #48]
 310:	sub	w0, w0, #0x1
 314:	str	w0, [sp, #164]
 318:	ldr	w1, [sp, #164]
 31c:	ldr	w0, [sp, #52]
 320:	sub	w0, w1, w0
 324:	add	w0, w0, #0x1
 328:	str	w0, [sp, #160]
 32c:	ldr	x0, [sp, #56]
 330:	ldr	w0, [x0, #152]
 334:	cmp	w0, #0x0
 338:	b.eq	3f0 <ext2fs_allocate_group_table+0x1bc>  // b.none
 33c:	ldr	w0, [sp, #156]
 340:	cmp	w0, #0x0
 344:	b.ne	3f0 <ext2fs_allocate_group_table+0x1bc>  // b.any
 348:	add	x0, sp, #0x50
 34c:	mov	x5, x0
 350:	ldr	x4, [sp, #40]
 354:	mov	w3, #0x1                   	// #1
 358:	ldr	x2, [sp, #168]
 35c:	ldr	x1, [sp, #176]
 360:	ldr	x0, [sp, #56]
 364:	bl	0 <ext2fs_get_free_blocks2>
 368:	str	x0, [sp, #184]
 36c:	ldr	x0, [sp, #184]
 370:	cmp	x0, #0x0
 374:	b.eq	380 <ext2fs_allocate_group_table+0x14c>  // b.none
 378:	ldr	x0, [sp, #184]
 37c:	b	a10 <ext2fs_allocate_group_table+0x7dc>
 380:	ldr	x0, [sp, #56]
 384:	ldr	w0, [x0, #72]
 388:	mov	w1, w0
 38c:	ldr	x0, [sp, #80]
 390:	add	x0, x1, x0
 394:	str	x0, [sp, #80]
 398:	ldr	x0, [sp, #56]
 39c:	ldr	w1, [x0, #152]
 3a0:	ldr	w0, [sp, #52]
 3a4:	mul	w0, w1, w0
 3a8:	mov	w0, w0
 3ac:	ldr	x1, [sp, #80]
 3b0:	ldr	x2, [sp, #168]
 3b4:	sub	x1, x2, x1
 3b8:	add	x1, x1, #0x1
 3bc:	udiv	x2, x0, x1
 3c0:	mul	x1, x2, x1
 3c4:	sub	x1, x0, x1
 3c8:	ldr	x0, [sp, #80]
 3cc:	add	x0, x1, x0
 3d0:	str	x0, [sp, #80]
 3d4:	ldr	x0, [sp, #80]
 3d8:	ldr	x1, [sp, #168]
 3dc:	cmp	x1, x0
 3e0:	b.hi	3f8 <ext2fs_allocate_group_table+0x1c4>  // b.pmore
 3e4:	ldr	x0, [sp, #176]
 3e8:	str	x0, [sp, #80]
 3ec:	b	3f8 <ext2fs_allocate_group_table+0x1c4>
 3f0:	ldr	x0, [sp, #176]
 3f4:	str	x0, [sp, #80]
 3f8:	ldr	w0, [sp, #156]
 3fc:	cmp	w0, #0x0
 400:	b.eq	4d0 <ext2fs_allocate_group_table+0x29c>  // b.none
 404:	str	xzr, [sp, #144]
 408:	ldr	w0, [sp, #156]
 40c:	str	w0, [sp, #152]
 410:	ldr	w1, [sp, #156]
 414:	ldr	w0, [sp, #52]
 418:	udiv	w2, w0, w1
 41c:	mul	w1, w2, w1
 420:	sub	w0, w0, w1
 424:	cmp	w0, #0x0
 428:	b.eq	44c <ext2fs_allocate_group_table+0x218>  // b.none
 42c:	ldr	w0, [sp, #52]
 430:	sub	w0, w0, #0x1
 434:	mov	w1, w0
 438:	ldr	x0, [sp, #56]
 43c:	bl	0 <ext2fs_block_bitmap_loc>
 440:	add	x0, x0, #0x1
 444:	str	x0, [sp, #144]
 448:	b	4a0 <ext2fs_allocate_group_table+0x26c>
 44c:	ldr	x0, [sp, #56]
 450:	ldr	w0, [x0, #48]
 454:	sub	w0, w0, #0x1
 458:	ldr	w1, [sp, #164]
 45c:	cmp	w1, w0
 460:	b.ne	4a0 <ext2fs_allocate_group_table+0x26c>  // b.any
 464:	ldr	w0, [sp, #156]
 468:	sub	w0, w0, #0x1
 46c:	mov	w1, w0
 470:	ldr	w0, [sp, #164]
 474:	and	w0, w1, w0
 478:	str	w0, [sp, #152]
 47c:	ldr	w0, [sp, #152]
 480:	cmp	w0, #0x0
 484:	b.ne	494 <ext2fs_allocate_group_table+0x260>  // b.any
 488:	ldr	w0, [sp, #156]
 48c:	str	w0, [sp, #152]
 490:	b	4a0 <ext2fs_allocate_group_table+0x26c>
 494:	ldr	w0, [sp, #152]
 498:	add	w0, w0, #0x1
 49c:	str	w0, [sp, #152]
 4a0:	mov	w5, #0x1                   	// #1
 4a4:	ldr	w4, [sp, #160]
 4a8:	ldr	x3, [sp, #40]
 4ac:	ldr	x2, [sp, #144]
 4b0:	ldr	w1, [sp, #52]
 4b4:	ldr	x0, [sp, #56]
 4b8:	bl	28 <flexbg_offset>
 4bc:	str	x0, [sp, #80]
 4c0:	ldr	w1, [sp, #164]
 4c4:	ldr	x0, [sp, #56]
 4c8:	bl	0 <ext2fs_group_last_block2>
 4cc:	str	x0, [sp, #168]
 4d0:	ldr	w1, [sp, #52]
 4d4:	ldr	x0, [sp, #56]
 4d8:	bl	0 <ext2fs_block_bitmap_loc>
 4dc:	cmp	x0, #0x0
 4e0:	b.ne	5e8 <ext2fs_allocate_group_table+0x3b4>  // b.any
 4e4:	ldr	x0, [sp, #80]
 4e8:	add	x1, sp, #0x48
 4ec:	mov	x5, x1
 4f0:	ldr	x4, [sp, #40]
 4f4:	mov	w3, #0x1                   	// #1
 4f8:	ldr	x2, [sp, #168]
 4fc:	mov	x1, x0
 500:	ldr	x0, [sp, #56]
 504:	bl	0 <ext2fs_get_free_blocks2>
 508:	str	x0, [sp, #184]
 50c:	ldr	x1, [sp, #184]
 510:	mov	x0, #0xb748                	// #46920
 514:	movk	x0, #0x7f2b, lsl #16
 518:	cmp	x1, x0
 51c:	b.ne	544 <ext2fs_allocate_group_table+0x310>  // b.any
 520:	add	x0, sp, #0x48
 524:	mov	x5, x0
 528:	ldr	x4, [sp, #40]
 52c:	mov	w3, #0x1                   	// #1
 530:	ldr	x2, [sp, #168]
 534:	ldr	x1, [sp, #176]
 538:	ldr	x0, [sp, #56]
 53c:	bl	0 <ext2fs_get_free_blocks2>
 540:	str	x0, [sp, #184]
 544:	ldr	x0, [sp, #184]
 548:	cmp	x0, #0x0
 54c:	b.eq	558 <ext2fs_allocate_group_table+0x324>  // b.none
 550:	ldr	x0, [sp, #184]
 554:	b	a10 <ext2fs_allocate_group_table+0x7dc>
 558:	ldr	x0, [sp, #72]
 55c:	mov	x1, x0
 560:	ldr	x0, [sp, #40]
 564:	bl	0 <ext2fs_mark_block_bitmap2>
 568:	ldr	x0, [sp, #72]
 56c:	mov	x2, x0
 570:	ldr	w1, [sp, #52]
 574:	ldr	x0, [sp, #56]
 578:	bl	0 <ext2fs_block_bitmap_loc_set>
 57c:	ldr	w0, [sp, #156]
 580:	cmp	w0, #0x0
 584:	b.eq	5e8 <ext2fs_allocate_group_table+0x3b4>  // b.none
 588:	ldr	x0, [sp, #72]
 58c:	mov	x1, x0
 590:	ldr	x0, [sp, #56]
 594:	bl	0 <ext2fs_group_of_blk2>
 598:	str	w0, [sp, #100]
 59c:	ldr	w1, [sp, #100]
 5a0:	ldr	x0, [sp, #56]
 5a4:	bl	0 <ext2fs_bg_free_blocks_count>
 5a8:	sub	w0, w0, #0x1
 5ac:	mov	w2, w0
 5b0:	ldr	w1, [sp, #100]
 5b4:	ldr	x0, [sp, #56]
 5b8:	bl	0 <ext2fs_bg_free_blocks_count_set>
 5bc:	ldr	x0, [sp, #56]
 5c0:	ldr	x0, [x0, #32]
 5c4:	mov	x1, #0xffffffffffffffff    	// #-1
 5c8:	bl	0 <ext2fs_free_blocks_count_add>
 5cc:	mov	w2, #0x2                   	// #2
 5d0:	ldr	w1, [sp, #100]
 5d4:	ldr	x0, [sp, #56]
 5d8:	bl	0 <ext2fs_bg_flags_clear>
 5dc:	ldr	w1, [sp, #100]
 5e0:	ldr	x0, [sp, #56]
 5e4:	bl	0 <ext2fs_group_desc_csum_set>
 5e8:	ldr	w0, [sp, #156]
 5ec:	cmp	w0, #0x0
 5f0:	b.eq	680 <ext2fs_allocate_group_table+0x44c>  // b.none
 5f4:	str	xzr, [sp, #136]
 5f8:	ldr	w1, [sp, #156]
 5fc:	ldr	w0, [sp, #52]
 600:	udiv	w2, w0, w1
 604:	mul	w1, w2, w1
 608:	sub	w0, w0, w1
 60c:	cmp	w0, #0x0
 610:	b.eq	634 <ext2fs_allocate_group_table+0x400>  // b.none
 614:	ldr	w0, [sp, #52]
 618:	sub	w0, w0, #0x1
 61c:	mov	w1, w0
 620:	ldr	x0, [sp, #56]
 624:	bl	0 <ext2fs_inode_bitmap_loc>
 628:	add	x0, x0, #0x1
 62c:	str	x0, [sp, #136]
 630:	b	650 <ext2fs_allocate_group_table+0x41c>
 634:	ldr	w1, [sp, #52]
 638:	ldr	x0, [sp, #56]
 63c:	bl	0 <ext2fs_block_bitmap_loc>
 640:	mov	x1, x0
 644:	ldrsw	x0, [sp, #152]
 648:	add	x0, x1, x0
 64c:	str	x0, [sp, #136]
 650:	mov	w5, #0x1                   	// #1
 654:	ldr	w4, [sp, #160]
 658:	ldr	x3, [sp, #40]
 65c:	ldr	x2, [sp, #136]
 660:	ldr	w1, [sp, #52]
 664:	ldr	x0, [sp, #56]
 668:	bl	28 <flexbg_offset>
 66c:	str	x0, [sp, #80]
 670:	ldr	w1, [sp, #164]
 674:	ldr	x0, [sp, #56]
 678:	bl	0 <ext2fs_group_last_block2>
 67c:	str	x0, [sp, #168]
 680:	ldr	w1, [sp, #52]
 684:	ldr	x0, [sp, #56]
 688:	bl	0 <ext2fs_inode_bitmap_loc>
 68c:	cmp	x0, #0x0
 690:	b.ne	798 <ext2fs_allocate_group_table+0x564>  // b.any
 694:	ldr	x0, [sp, #80]
 698:	add	x1, sp, #0x48
 69c:	mov	x5, x1
 6a0:	ldr	x4, [sp, #40]
 6a4:	mov	w3, #0x1                   	// #1
 6a8:	ldr	x2, [sp, #168]
 6ac:	mov	x1, x0
 6b0:	ldr	x0, [sp, #56]
 6b4:	bl	0 <ext2fs_get_free_blocks2>
 6b8:	str	x0, [sp, #184]
 6bc:	ldr	x1, [sp, #184]
 6c0:	mov	x0, #0xb748                	// #46920
 6c4:	movk	x0, #0x7f2b, lsl #16
 6c8:	cmp	x1, x0
 6cc:	b.ne	6f4 <ext2fs_allocate_group_table+0x4c0>  // b.any
 6d0:	add	x0, sp, #0x48
 6d4:	mov	x5, x0
 6d8:	ldr	x4, [sp, #40]
 6dc:	mov	w3, #0x1                   	// #1
 6e0:	ldr	x2, [sp, #168]
 6e4:	ldr	x1, [sp, #176]
 6e8:	ldr	x0, [sp, #56]
 6ec:	bl	0 <ext2fs_get_free_blocks2>
 6f0:	str	x0, [sp, #184]
 6f4:	ldr	x0, [sp, #184]
 6f8:	cmp	x0, #0x0
 6fc:	b.eq	708 <ext2fs_allocate_group_table+0x4d4>  // b.none
 700:	ldr	x0, [sp, #184]
 704:	b	a10 <ext2fs_allocate_group_table+0x7dc>
 708:	ldr	x0, [sp, #72]
 70c:	mov	x1, x0
 710:	ldr	x0, [sp, #40]
 714:	bl	0 <ext2fs_mark_block_bitmap2>
 718:	ldr	x0, [sp, #72]
 71c:	mov	x2, x0
 720:	ldr	w1, [sp, #52]
 724:	ldr	x0, [sp, #56]
 728:	bl	0 <ext2fs_inode_bitmap_loc_set>
 72c:	ldr	w0, [sp, #156]
 730:	cmp	w0, #0x0
 734:	b.eq	798 <ext2fs_allocate_group_table+0x564>  // b.none
 738:	ldr	x0, [sp, #72]
 73c:	mov	x1, x0
 740:	ldr	x0, [sp, #56]
 744:	bl	0 <ext2fs_group_of_blk2>
 748:	str	w0, [sp, #96]
 74c:	ldr	w1, [sp, #96]
 750:	ldr	x0, [sp, #56]
 754:	bl	0 <ext2fs_bg_free_blocks_count>
 758:	sub	w0, w0, #0x1
 75c:	mov	w2, w0
 760:	ldr	w1, [sp, #96]
 764:	ldr	x0, [sp, #56]
 768:	bl	0 <ext2fs_bg_free_blocks_count_set>
 76c:	ldr	x0, [sp, #56]
 770:	ldr	x0, [x0, #32]
 774:	mov	x1, #0xffffffffffffffff    	// #-1
 778:	bl	0 <ext2fs_free_blocks_count_add>
 77c:	mov	w2, #0x2                   	// #2
 780:	ldr	w1, [sp, #96]
 784:	ldr	x0, [sp, #56]
 788:	bl	0 <ext2fs_bg_flags_clear>
 78c:	ldr	w1, [sp, #96]
 790:	ldr	x0, [sp, #56]
 794:	bl	0 <ext2fs_group_desc_csum_set>
 798:	ldr	w0, [sp, #156]
 79c:	cmp	w0, #0x0
 7a0:	b.eq	848 <ext2fs_allocate_group_table+0x614>  // b.none
 7a4:	str	xzr, [sp, #128]
 7a8:	ldr	w1, [sp, #156]
 7ac:	ldr	w0, [sp, #52]
 7b0:	udiv	w2, w0, w1
 7b4:	mul	w1, w2, w1
 7b8:	sub	w0, w0, w1
 7bc:	cmp	w0, #0x0
 7c0:	b.eq	7f4 <ext2fs_allocate_group_table+0x5c0>  // b.none
 7c4:	ldr	w0, [sp, #52]
 7c8:	sub	w0, w0, #0x1
 7cc:	mov	w1, w0
 7d0:	ldr	x0, [sp, #56]
 7d4:	bl	0 <ext2fs_inode_table_loc>
 7d8:	mov	x1, x0
 7dc:	ldr	x0, [sp, #56]
 7e0:	ldr	w0, [x0, #72]
 7e4:	mov	w0, w0
 7e8:	add	x0, x1, x0
 7ec:	str	x0, [sp, #128]
 7f0:	b	810 <ext2fs_allocate_group_table+0x5dc>
 7f4:	ldr	w1, [sp, #52]
 7f8:	ldr	x0, [sp, #56]
 7fc:	bl	0 <ext2fs_inode_bitmap_loc>
 800:	mov	x1, x0
 804:	ldrsw	x0, [sp, #152]
 808:	add	x0, x1, x0
 80c:	str	x0, [sp, #128]
 810:	ldr	x0, [sp, #56]
 814:	ldr	w0, [x0, #72]
 818:	mov	w5, w0
 81c:	ldr	w4, [sp, #160]
 820:	ldr	x3, [sp, #40]
 824:	ldr	x2, [sp, #128]
 828:	ldr	w1, [sp, #52]
 82c:	ldr	x0, [sp, #56]
 830:	bl	28 <flexbg_offset>
 834:	str	x0, [sp, #176]
 838:	ldr	w1, [sp, #164]
 83c:	ldr	x0, [sp, #56]
 840:	bl	0 <ext2fs_group_last_block2>
 844:	str	x0, [sp, #168]
 848:	ldr	w1, [sp, #52]
 84c:	ldr	x0, [sp, #56]
 850:	bl	0 <ext2fs_inode_table_loc>
 854:	cmp	x0, #0x0
 858:	b.ne	a00 <ext2fs_allocate_group_table+0x7cc>  // b.any
 85c:	ldr	x0, [sp, #56]
 860:	ldr	w0, [x0, #72]
 864:	mov	w1, w0
 868:	add	x0, sp, #0x48
 86c:	mov	x5, x0
 870:	ldr	x4, [sp, #40]
 874:	mov	w3, w1
 878:	ldr	x2, [sp, #168]
 87c:	ldr	x1, [sp, #176]
 880:	ldr	x0, [sp, #56]
 884:	bl	0 <ext2fs_get_free_blocks2>
 888:	str	x0, [sp, #184]
 88c:	ldr	x0, [sp, #184]
 890:	cmp	x0, #0x0
 894:	b.eq	8a0 <ext2fs_allocate_group_table+0x66c>  // b.none
 898:	ldr	x0, [sp, #184]
 89c:	b	a10 <ext2fs_allocate_group_table+0x7dc>
 8a0:	ldr	x1, [sp, #72]
 8a4:	ldr	x0, [sp, #56]
 8a8:	ldr	w0, [x0, #72]
 8ac:	mov	w2, w0
 8b0:	ldr	x0, [sp, #40]
 8b4:	bl	0 <ext2fs_mark_block_bitmap_range2>
 8b8:	ldr	w0, [sp, #156]
 8bc:	cmp	w0, #0x0
 8c0:	b.eq	9ec <ext2fs_allocate_group_table+0x7b8>  // b.none
 8c4:	ldr	x0, [sp, #56]
 8c8:	ldr	w0, [x0, #72]
 8cc:	mov	w0, w0
 8d0:	str	x0, [sp, #120]
 8d4:	ldr	x0, [sp, #72]
 8d8:	str	x0, [sp, #112]
 8dc:	b	9e0 <ext2fs_allocate_group_table+0x7ac>
 8e0:	ldr	x1, [sp, #112]
 8e4:	ldr	x0, [sp, #56]
 8e8:	bl	0 <ext2fs_group_of_blk2>
 8ec:	str	w0, [sp, #92]
 8f0:	ldr	w0, [sp, #92]
 8f4:	mov	w1, w0
 8f8:	ldr	x0, [sp, #56]
 8fc:	bl	0 <ext2fs_group_last_block2>
 900:	str	x0, [sp, #168]
 904:	ldr	x0, [sp, #120]
 908:	str	x0, [sp, #104]
 90c:	ldr	x1, [sp, #112]
 910:	ldr	x0, [sp, #120]
 914:	add	x0, x1, x0
 918:	ldr	x1, [sp, #168]
 91c:	cmp	x1, x0
 920:	b.cs	938 <ext2fs_allocate_group_table+0x704>  // b.hs, b.nlast
 924:	ldr	x1, [sp, #168]
 928:	ldr	x0, [sp, #112]
 92c:	sub	x0, x1, x0
 930:	add	x0, x0, #0x1
 934:	str	x0, [sp, #104]
 938:	ldr	w19, [sp, #92]
 93c:	ldr	w0, [sp, #92]
 940:	mov	w1, w0
 944:	ldr	x0, [sp, #56]
 948:	bl	0 <ext2fs_bg_free_blocks_count>
 94c:	mov	w2, w0
 950:	ldr	x0, [sp, #56]
 954:	ldr	w0, [x0, #192]
 958:	mov	w1, #0x1                   	// #1
 95c:	lsl	w0, w1, w0
 960:	sxtw	x0, w0
 964:	ldr	x1, [sp, #104]
 968:	udiv	x0, x1, x0
 96c:	sub	w0, w2, w0
 970:	mov	w2, w0
 974:	mov	w1, w19
 978:	ldr	x0, [sp, #56]
 97c:	bl	0 <ext2fs_bg_free_blocks_count_set>
 980:	ldr	w0, [sp, #92]
 984:	mov	w2, #0x2                   	// #2
 988:	mov	w1, w0
 98c:	ldr	x0, [sp, #56]
 990:	bl	0 <ext2fs_bg_flags_clear>
 994:	ldr	w0, [sp, #92]
 998:	mov	w1, w0
 99c:	ldr	x0, [sp, #56]
 9a0:	bl	0 <ext2fs_group_desc_csum_set>
 9a4:	ldr	x0, [sp, #56]
 9a8:	ldr	x2, [x0, #32]
 9ac:	ldr	x0, [sp, #104]
 9b0:	neg	x0, x0
 9b4:	mov	x1, x0
 9b8:	mov	x0, x2
 9bc:	bl	0 <ext2fs_free_blocks_count_add>
 9c0:	ldr	x1, [sp, #112]
 9c4:	ldr	x0, [sp, #104]
 9c8:	add	x0, x1, x0
 9cc:	str	x0, [sp, #112]
 9d0:	ldr	x1, [sp, #120]
 9d4:	ldr	x0, [sp, #104]
 9d8:	sub	x0, x1, x0
 9dc:	str	x0, [sp, #120]
 9e0:	ldr	x0, [sp, #120]
 9e4:	cmp	x0, #0x0
 9e8:	b.ne	8e0 <ext2fs_allocate_group_table+0x6ac>  // b.any
 9ec:	ldr	x0, [sp, #72]
 9f0:	mov	x2, x0
 9f4:	ldr	w1, [sp, #52]
 9f8:	ldr	x0, [sp, #56]
 9fc:	bl	0 <ext2fs_inode_table_loc_set>
 a00:	ldr	w1, [sp, #52]
 a04:	ldr	x0, [sp, #56]
 a08:	bl	0 <ext2fs_group_desc_csum_set>
 a0c:	mov	x0, #0x0                   	// #0
 a10:	ldr	x19, [sp, #16]
 a14:	ldp	x29, x30, [sp], #192
 a18:	ret

0000000000000a1c <ext2fs_allocate_tables>:
 a1c:	stp	x29, x30, [sp, #-64]!
 a20:	mov	x29, sp
 a24:	str	x0, [sp, #24]
 a28:	ldr	x0, [sp, #24]
 a2c:	ldr	x0, [x0, #304]
 a30:	cmp	x0, #0x0
 a34:	b.eq	a7c <ext2fs_allocate_tables+0x60>  // b.none
 a38:	ldr	x0, [sp, #24]
 a3c:	ldr	x0, [x0, #304]
 a40:	ldr	x0, [x0]
 a44:	cmp	x0, #0x0
 a48:	b.eq	a7c <ext2fs_allocate_tables+0x60>  // b.none
 a4c:	ldr	x0, [sp, #24]
 a50:	ldr	x0, [x0, #304]
 a54:	ldr	x4, [x0]
 a58:	ldr	x0, [sp, #24]
 a5c:	ldr	w0, [x0, #48]
 a60:	mov	w1, w0
 a64:	add	x0, sp, #0x20
 a68:	mov	x3, x1
 a6c:	mov	x2, #0x0                   	// #0
 a70:	mov	x1, x0
 a74:	ldr	x0, [sp, #24]
 a78:	blr	x4
 a7c:	str	wzr, [sp, #60]
 a80:	b	b08 <ext2fs_allocate_tables+0xec>
 a84:	ldr	x0, [sp, #24]
 a88:	ldr	x0, [x0, #304]
 a8c:	cmp	x0, #0x0
 a90:	b.eq	acc <ext2fs_allocate_tables+0xb0>  // b.none
 a94:	ldr	x0, [sp, #24]
 a98:	ldr	x0, [x0, #304]
 a9c:	ldr	x0, [x0, #8]
 aa0:	cmp	x0, #0x0
 aa4:	b.eq	acc <ext2fs_allocate_tables+0xb0>  // b.none
 aa8:	ldr	x0, [sp, #24]
 aac:	ldr	x0, [x0, #304]
 ab0:	ldr	x3, [x0, #8]
 ab4:	ldr	w1, [sp, #60]
 ab8:	add	x0, sp, #0x20
 abc:	mov	x2, x1
 ac0:	mov	x1, x0
 ac4:	ldr	x0, [sp, #24]
 ac8:	blr	x3
 acc:	ldr	x0, [sp, #24]
 ad0:	ldr	x0, [x0, #88]
 ad4:	mov	x2, x0
 ad8:	ldr	w1, [sp, #60]
 adc:	ldr	x0, [sp, #24]
 ae0:	bl	234 <ext2fs_allocate_group_table>
 ae4:	str	x0, [sp, #48]
 ae8:	ldr	x0, [sp, #48]
 aec:	cmp	x0, #0x0
 af0:	b.eq	afc <ext2fs_allocate_tables+0xe0>  // b.none
 af4:	ldr	x0, [sp, #48]
 af8:	b	b64 <ext2fs_allocate_tables+0x148>
 afc:	ldr	w0, [sp, #60]
 b00:	add	w0, w0, #0x1
 b04:	str	w0, [sp, #60]
 b08:	ldr	x0, [sp, #24]
 b0c:	ldr	w0, [x0, #48]
 b10:	ldr	w1, [sp, #60]
 b14:	cmp	w1, w0
 b18:	b.cc	a84 <ext2fs_allocate_tables+0x68>  // b.lo, b.ul, b.last
 b1c:	ldr	x0, [sp, #24]
 b20:	ldr	x0, [x0, #304]
 b24:	cmp	x0, #0x0
 b28:	b.eq	b60 <ext2fs_allocate_tables+0x144>  // b.none
 b2c:	ldr	x0, [sp, #24]
 b30:	ldr	x0, [x0, #304]
 b34:	ldr	x0, [x0, #16]
 b38:	cmp	x0, #0x0
 b3c:	b.eq	b60 <ext2fs_allocate_tables+0x144>  // b.none
 b40:	ldr	x0, [sp, #24]
 b44:	ldr	x0, [x0, #304]
 b48:	ldr	x3, [x0, #16]
 b4c:	add	x0, sp, #0x20
 b50:	mov	x2, #0x0                   	// #0
 b54:	mov	x1, x0
 b58:	ldr	x0, [sp, #24]
 b5c:	blr	x3
 b60:	mov	x0, #0x0                   	// #0
 b64:	ldp	x29, x30, [sp], #64
 b68:	ret

atexit.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <handle_exit>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <handle_exit>
   c:	add	x0, x0, #0x0
  10:	ldr	x1, [x0]
  14:	adrp	x0, 0 <handle_exit>
  18:	add	x0, x0, #0x0
  1c:	ldr	x0, [x0]
  20:	lsl	x0, x0, #4
  24:	sub	x0, x0, #0x10
  28:	add	x0, x1, x0
  2c:	str	x0, [sp, #24]
  30:	b	6c <handle_exit+0x6c>
  34:	ldr	x0, [sp, #24]
  38:	ldr	x0, [x0]
  3c:	cmp	x0, #0x0
  40:	b.eq	5c <handle_exit+0x5c>  // b.none
  44:	ldr	x0, [sp, #24]
  48:	ldr	x1, [x0]
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x0, [x0, #8]
  54:	blr	x1
  58:	b	60 <handle_exit+0x60>
  5c:	nop
  60:	ldr	x0, [sp, #24]
  64:	sub	x0, x0, #0x10
  68:	str	x0, [sp, #24]
  6c:	adrp	x0, 0 <handle_exit>
  70:	add	x0, x0, #0x0
  74:	ldr	x0, [x0]
  78:	ldr	x1, [sp, #24]
  7c:	cmp	x1, x0
  80:	b.cs	34 <handle_exit+0x34>  // b.hs, b.nlast
  84:	adrp	x0, 0 <handle_exit>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <ext2fs_free_mem>
  90:	adrp	x0, 0 <handle_exit>
  94:	add	x0, x0, #0x0
  98:	str	xzr, [x0]
  9c:	nop
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

00000000000000a8 <ext2fs_add_exit_fn>:
  a8:	stp	x29, x30, [sp, #-64]!
  ac:	mov	x29, sp
  b0:	str	x0, [sp, #24]
  b4:	str	x1, [sp, #16]
  b8:	str	xzr, [sp, #48]
  bc:	ldr	x0, [sp, #24]
  c0:	cmp	x0, #0x0
  c4:	b.ne	d4 <ext2fs_add_exit_fn+0x2c>  // b.any
  c8:	mov	x0, #0xb747                	// #46919
  cc:	movk	x0, #0x7f2b, lsl #16
  d0:	b	27c <ext2fs_add_exit_fn+0x1d4>
  d4:	str	xzr, [sp, #40]
  d8:	adrp	x0, 0 <handle_exit>
  dc:	add	x0, x0, #0x0
  e0:	ldr	x0, [x0]
  e4:	str	x0, [sp, #56]
  e8:	b	150 <ext2fs_add_exit_fn+0xa8>
  ec:	ldr	x0, [sp, #56]
  f0:	ldr	x0, [x0]
  f4:	ldr	x1, [sp, #24]
  f8:	cmp	x1, x0
  fc:	b.ne	120 <ext2fs_add_exit_fn+0x78>  // b.any
 100:	ldr	x0, [sp, #56]
 104:	ldr	x0, [x0, #8]
 108:	ldr	x1, [sp, #16]
 10c:	cmp	x1, x0
 110:	b.ne	120 <ext2fs_add_exit_fn+0x78>  // b.any
 114:	mov	x0, #0xb79b                	// #47003
 118:	movk	x0, #0x7f2b, lsl #16
 11c:	b	27c <ext2fs_add_exit_fn+0x1d4>
 120:	ldr	x0, [sp, #56]
 124:	ldr	x0, [x0]
 128:	cmp	x0, #0x0
 12c:	b.ne	138 <ext2fs_add_exit_fn+0x90>  // b.any
 130:	ldr	x0, [sp, #56]
 134:	str	x0, [sp, #48]
 138:	ldr	x0, [sp, #40]
 13c:	add	x0, x0, #0x1
 140:	str	x0, [sp, #40]
 144:	ldr	x0, [sp, #56]
 148:	add	x0, x0, #0x10
 14c:	str	x0, [sp, #56]
 150:	adrp	x0, 0 <handle_exit>
 154:	add	x0, x0, #0x0
 158:	ldr	x0, [x0]
 15c:	ldr	x1, [sp, #40]
 160:	cmp	x1, x0
 164:	b.cc	ec <ext2fs_add_exit_fn+0x44>  // b.lo, b.ul, b.last
 168:	ldr	x0, [sp, #48]
 16c:	cmp	x0, #0x0
 170:	b.eq	194 <ext2fs_add_exit_fn+0xec>  // b.none
 174:	ldr	x0, [sp, #48]
 178:	ldr	x1, [sp, #24]
 17c:	str	x1, [x0]
 180:	ldr	x0, [sp, #48]
 184:	ldr	x1, [sp, #16]
 188:	str	x1, [x0, #8]
 18c:	mov	x0, #0x0                   	// #0
 190:	b	27c <ext2fs_add_exit_fn+0x1d4>
 194:	adrp	x0, 0 <handle_exit>
 198:	add	x0, x0, #0x0
 19c:	ldr	x0, [x0]
 1a0:	cmp	x0, #0x0
 1a4:	b.ne	1d0 <ext2fs_add_exit_fn+0x128>  // b.any
 1a8:	adrp	x0, 0 <handle_exit>
 1ac:	add	x0, x0, #0x0
 1b0:	bl	0 <atexit>
 1b4:	sxtw	x0, w0
 1b8:	str	x0, [sp, #32]
 1bc:	ldr	x0, [sp, #32]
 1c0:	cmp	x0, #0x0
 1c4:	b.eq	1d0 <ext2fs_add_exit_fn+0x128>  // b.none
 1c8:	ldr	x0, [sp, #32]
 1cc:	b	27c <ext2fs_add_exit_fn+0x1d4>
 1d0:	adrp	x0, 0 <handle_exit>
 1d4:	add	x0, x0, #0x0
 1d8:	ldr	x0, [x0]
 1dc:	add	x0, x0, #0x1
 1e0:	lsl	x1, x0, #4
 1e4:	adrp	x0, 0 <handle_exit>
 1e8:	add	x2, x0, #0x0
 1ec:	mov	x0, #0x0                   	// #0
 1f0:	bl	0 <ext2fs_resize_mem>
 1f4:	str	x0, [sp, #32]
 1f8:	ldr	x0, [sp, #32]
 1fc:	cmp	x0, #0x0
 200:	b.eq	20c <ext2fs_add_exit_fn+0x164>  // b.none
 204:	ldr	x0, [sp, #32]
 208:	b	27c <ext2fs_add_exit_fn+0x1d4>
 20c:	adrp	x0, 0 <handle_exit>
 210:	add	x0, x0, #0x0
 214:	ldr	x1, [x0]
 218:	adrp	x0, 0 <handle_exit>
 21c:	add	x0, x0, #0x0
 220:	ldr	x0, [x0]
 224:	lsl	x0, x0, #4
 228:	add	x0, x1, x0
 22c:	ldr	x1, [sp, #24]
 230:	str	x1, [x0]
 234:	adrp	x0, 0 <handle_exit>
 238:	add	x0, x0, #0x0
 23c:	ldr	x1, [x0]
 240:	adrp	x0, 0 <handle_exit>
 244:	add	x0, x0, #0x0
 248:	ldr	x0, [x0]
 24c:	lsl	x0, x0, #4
 250:	add	x0, x1, x0
 254:	ldr	x1, [sp, #16]
 258:	str	x1, [x0, #8]
 25c:	adrp	x0, 0 <handle_exit>
 260:	add	x0, x0, #0x0
 264:	ldr	x0, [x0]
 268:	add	x1, x0, #0x1
 26c:	adrp	x0, 0 <handle_exit>
 270:	add	x0, x0, #0x0
 274:	str	x1, [x0]
 278:	mov	x0, #0x0                   	// #0
 27c:	ldp	x29, x30, [sp], #64
 280:	ret

0000000000000284 <ext2fs_remove_exit_fn>:
 284:	stp	x29, x30, [sp, #-64]!
 288:	mov	x29, sp
 28c:	str	x0, [sp, #24]
 290:	str	x1, [sp, #16]
 294:	ldr	x0, [sp, #24]
 298:	cmp	x0, #0x0
 29c:	b.ne	2ac <ext2fs_remove_exit_fn+0x28>  // b.any
 2a0:	mov	x0, #0xb747                	// #46919
 2a4:	movk	x0, #0x7f2b, lsl #16
 2a8:	b	3a0 <ext2fs_remove_exit_fn+0x11c>
 2ac:	str	xzr, [sp, #48]
 2b0:	adrp	x0, 0 <handle_exit>
 2b4:	add	x0, x0, #0x0
 2b8:	ldr	x0, [x0]
 2bc:	str	x0, [sp, #56]
 2c0:	b	384 <ext2fs_remove_exit_fn+0x100>
 2c4:	ldr	x0, [sp, #56]
 2c8:	ldr	x0, [x0]
 2cc:	cmp	x0, #0x0
 2d0:	b.ne	2dc <ext2fs_remove_exit_fn+0x58>  // b.any
 2d4:	mov	x0, #0x0                   	// #0
 2d8:	b	3a0 <ext2fs_remove_exit_fn+0x11c>
 2dc:	ldr	x0, [sp, #56]
 2e0:	ldr	x0, [x0]
 2e4:	ldr	x1, [sp, #24]
 2e8:	cmp	x1, x0
 2ec:	b.ne	36c <ext2fs_remove_exit_fn+0xe8>  // b.any
 2f0:	ldr	x0, [sp, #56]
 2f4:	ldr	x0, [x0, #8]
 2f8:	ldr	x1, [sp, #16]
 2fc:	cmp	x1, x0
 300:	b.ne	36c <ext2fs_remove_exit_fn+0xe8>  // b.any
 304:	adrp	x0, 0 <handle_exit>
 308:	add	x0, x0, #0x0
 30c:	ldr	x1, [x0]
 310:	ldr	x0, [sp, #48]
 314:	sub	x0, x1, x0
 318:	sub	x0, x0, #0x1
 31c:	lsl	x0, x0, #4
 320:	str	x0, [sp, #40]
 324:	ldr	x0, [sp, #56]
 328:	add	x0, x0, #0x10
 32c:	ldr	x2, [sp, #40]
 330:	mov	x1, x0
 334:	ldr	x0, [sp, #56]
 338:	bl	0 <memmove>
 33c:	adrp	x0, 0 <handle_exit>
 340:	add	x0, x0, #0x0
 344:	ldr	x1, [x0]
 348:	adrp	x0, 0 <handle_exit>
 34c:	add	x0, x0, #0x0
 350:	ldr	x0, [x0]
 354:	lsl	x0, x0, #4
 358:	sub	x0, x0, #0x10
 35c:	add	x0, x1, x0
 360:	mov	x2, #0x10                  	// #16
 364:	mov	w1, #0x0                   	// #0
 368:	bl	0 <memset>
 36c:	ldr	x0, [sp, #48]
 370:	add	x0, x0, #0x1
 374:	str	x0, [sp, #48]
 378:	ldr	x0, [sp, #56]
 37c:	add	x0, x0, #0x10
 380:	str	x0, [sp, #56]
 384:	adrp	x0, 0 <handle_exit>
 388:	add	x0, x0, #0x0
 38c:	ldr	x0, [x0]
 390:	ldr	x1, [sp, #48]
 394:	cmp	x1, x0
 398:	b.cc	2c4 <ext2fs_remove_exit_fn+0x40>  // b.lo, b.ul, b.last
 39c:	mov	x0, #0x0                   	// #0
 3a0:	ldp	x29, x30, [sp], #64
 3a4:	ret

badblocks.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <make_u32_list>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #44]
   c:	str	w1, [sp, #40]
  10:	str	x2, [sp, #32]
  14:	str	x3, [sp, #24]
  18:	add	x0, sp, #0x30
  1c:	mov	x1, x0
  20:	mov	x0, #0x20                  	// #32
  24:	bl	0 <ext2fs_get_mem>
  28:	str	x0, [sp, #56]
  2c:	ldr	x0, [sp, #56]
  30:	cmp	x0, #0x0
  34:	b.eq	40 <make_u32_list+0x40>  // b.none
  38:	ldr	x0, [sp, #56]
  3c:	b	140 <make_u32_list+0x140>
  40:	ldr	x0, [sp, #48]
  44:	mov	x2, #0x20                  	// #32
  48:	mov	w1, #0x0                   	// #0
  4c:	bl	0 <memset>
  50:	ldr	x0, [sp, #48]
  54:	mov	w1, #0xb702                	// #46850
  58:	movk	w1, #0x7f2b, lsl #16
  5c:	str	w1, [x0]
  60:	ldr	w0, [sp, #44]
  64:	cmp	w0, #0x0
  68:	b.eq	74 <make_u32_list+0x74>  // b.none
  6c:	ldr	w0, [sp, #44]
  70:	b	78 <make_u32_list+0x78>
  74:	mov	w0, #0xa                   	// #10
  78:	ldr	x1, [sp, #48]
  7c:	str	w0, [x1, #8]
  80:	ldr	x0, [sp, #48]
  84:	ldr	w1, [sp, #40]
  88:	str	w1, [x0, #4]
  8c:	ldr	x0, [sp, #48]
  90:	ldr	w0, [x0, #8]
  94:	sxtw	x3, w0
  98:	ldr	x0, [sp, #48]
  9c:	add	x0, x0, #0x10
  a0:	mov	x2, x0
  a4:	mov	x1, #0x4                   	// #4
  a8:	mov	x0, x3
  ac:	bl	0 <ext2fs_get_array>
  b0:	str	x0, [sp, #56]
  b4:	ldr	x0, [sp, #56]
  b8:	cmp	x0, #0x0
  bc:	b.eq	d0 <make_u32_list+0xd0>  // b.none
  c0:	add	x0, sp, #0x30
  c4:	bl	0 <ext2fs_free_mem>
  c8:	ldr	x0, [sp, #56]
  cc:	b	140 <make_u32_list+0x140>
  d0:	ldr	x0, [sp, #32]
  d4:	cmp	x0, #0x0
  d8:	b.eq	108 <make_u32_list+0x108>  // b.none
  dc:	ldr	x0, [sp, #48]
  e0:	ldr	x3, [x0, #16]
  e4:	ldr	x0, [sp, #48]
  e8:	ldr	w0, [x0, #8]
  ec:	sxtw	x0, w0
  f0:	lsl	x0, x0, #2
  f4:	mov	x2, x0
  f8:	ldr	x1, [sp, #32]
  fc:	mov	x0, x3
 100:	bl	0 <memcpy>
 104:	b	130 <make_u32_list+0x130>
 108:	ldr	x0, [sp, #48]
 10c:	ldr	x3, [x0, #16]
 110:	ldr	x0, [sp, #48]
 114:	ldr	w0, [x0, #8]
 118:	sxtw	x0, w0
 11c:	lsl	x0, x0, #2
 120:	mov	x2, x0
 124:	mov	w1, #0x0                   	// #0
 128:	mov	x0, x3
 12c:	bl	0 <memset>
 130:	ldr	x1, [sp, #48]
 134:	ldr	x0, [sp, #24]
 138:	str	x1, [x0]
 13c:	mov	x0, #0x0                   	// #0
 140:	ldp	x29, x30, [sp], #64
 144:	ret

0000000000000148 <ext2fs_u32_list_create>:
 148:	stp	x29, x30, [sp, #-32]!
 14c:	mov	x29, sp
 150:	str	x0, [sp, #24]
 154:	str	w1, [sp, #20]
 158:	ldr	x3, [sp, #24]
 15c:	mov	x2, #0x0                   	// #0
 160:	mov	w1, #0x0                   	// #0
 164:	ldr	w0, [sp, #20]
 168:	bl	0 <make_u32_list>
 16c:	ldp	x29, x30, [sp], #32
 170:	ret

0000000000000174 <ext2fs_badblocks_list_create>:
 174:	stp	x29, x30, [sp, #-32]!
 178:	mov	x29, sp
 17c:	str	x0, [sp, #24]
 180:	str	w1, [sp, #20]
 184:	ldr	x3, [sp, #24]
 188:	mov	x2, #0x0                   	// #0
 18c:	mov	w1, #0x0                   	// #0
 190:	ldr	w0, [sp, #20]
 194:	bl	0 <make_u32_list>
 198:	ldp	x29, x30, [sp], #32
 19c:	ret

00000000000001a0 <ext2fs_u32_copy>:
 1a0:	stp	x29, x30, [sp, #-48]!
 1a4:	mov	x29, sp
 1a8:	str	x0, [sp, #24]
 1ac:	str	x1, [sp, #16]
 1b0:	ldr	x0, [sp, #24]
 1b4:	ldr	w4, [x0, #8]
 1b8:	ldr	x0, [sp, #24]
 1bc:	ldr	w1, [x0, #4]
 1c0:	ldr	x0, [sp, #24]
 1c4:	ldr	x0, [x0, #16]
 1c8:	ldr	x3, [sp, #16]
 1cc:	mov	x2, x0
 1d0:	mov	w0, w4
 1d4:	bl	0 <make_u32_list>
 1d8:	str	x0, [sp, #40]
 1dc:	ldr	x0, [sp, #40]
 1e0:	cmp	x0, #0x0
 1e4:	b.eq	1f0 <ext2fs_u32_copy+0x50>  // b.none
 1e8:	ldr	x0, [sp, #40]
 1ec:	b	208 <ext2fs_u32_copy+0x68>
 1f0:	ldr	x0, [sp, #16]
 1f4:	ldr	x0, [x0]
 1f8:	ldr	x1, [sp, #24]
 1fc:	ldr	w1, [x1, #24]
 200:	str	w1, [x0, #24]
 204:	mov	x0, #0x0                   	// #0
 208:	ldp	x29, x30, [sp], #48
 20c:	ret

0000000000000210 <ext2fs_badblocks_copy>:
 210:	stp	x29, x30, [sp, #-32]!
 214:	mov	x29, sp
 218:	str	x0, [sp, #24]
 21c:	str	x1, [sp, #16]
 220:	ldr	x1, [sp, #16]
 224:	ldr	x0, [sp, #24]
 228:	bl	1a0 <ext2fs_u32_copy>
 22c:	ldp	x29, x30, [sp], #32
 230:	ret

0000000000000234 <ext2fs_u32_list_add>:
 234:	stp	x29, x30, [sp, #-64]!
 238:	mov	x29, sp
 23c:	str	x0, [sp, #24]
 240:	str	w1, [sp, #20]
 244:	ldr	x0, [sp, #24]
 248:	ldr	w1, [x0]
 24c:	mov	w0, #0xb702                	// #46850
 250:	movk	w0, #0x7f2b, lsl #16
 254:	cmp	w1, w0
 258:	b.eq	268 <ext2fs_u32_list_add+0x34>  // b.none
 25c:	mov	x0, #0xb702                	// #46850
 260:	movk	x0, #0x7f2b, lsl #16
 264:	b	4d4 <ext2fs_u32_list_add+0x2a0>
 268:	ldr	x0, [sp, #24]
 26c:	ldr	w1, [x0, #4]
 270:	ldr	x0, [sp, #24]
 274:	ldr	w0, [x0, #8]
 278:	cmp	w1, w0
 27c:	b.lt	2f8 <ext2fs_u32_list_add+0xc4>  // b.tstop
 280:	ldr	x0, [sp, #24]
 284:	ldr	w0, [x0, #8]
 288:	sxtw	x0, w0
 28c:	lsl	x0, x0, #2
 290:	str	x0, [sp, #48]
 294:	ldr	x0, [sp, #24]
 298:	ldr	w0, [x0, #8]
 29c:	add	w1, w0, #0x64
 2a0:	ldr	x0, [sp, #24]
 2a4:	str	w1, [x0, #8]
 2a8:	ldr	x0, [sp, #24]
 2ac:	ldr	w0, [x0, #8]
 2b0:	sxtw	x0, w0
 2b4:	lsl	x1, x0, #2
 2b8:	ldr	x0, [sp, #24]
 2bc:	add	x0, x0, #0x10
 2c0:	mov	x2, x0
 2c4:	ldr	x0, [sp, #48]
 2c8:	bl	0 <ext2fs_resize_mem>
 2cc:	str	x0, [sp, #40]
 2d0:	ldr	x0, [sp, #40]
 2d4:	cmp	x0, #0x0
 2d8:	b.eq	2f8 <ext2fs_u32_list_add+0xc4>  // b.none
 2dc:	ldr	x0, [sp, #24]
 2e0:	ldr	w0, [x0, #8]
 2e4:	sub	w1, w0, #0x64
 2e8:	ldr	x0, [sp, #24]
 2ec:	str	w1, [x0, #8]
 2f0:	ldr	x0, [sp, #40]
 2f4:	b	4d4 <ext2fs_u32_list_add+0x2a0>
 2f8:	ldr	x0, [sp, #24]
 2fc:	ldr	w0, [x0, #4]
 300:	sub	w0, w0, #0x1
 304:	str	w0, [sp, #60]
 308:	ldr	x0, [sp, #24]
 30c:	ldr	w0, [x0, #4]
 310:	cmp	w0, #0x0
 314:	b.eq	344 <ext2fs_u32_list_add+0x110>  // b.none
 318:	ldr	x0, [sp, #24]
 31c:	ldr	x1, [x0, #16]
 320:	ldrsw	x0, [sp, #60]
 324:	lsl	x0, x0, #2
 328:	add	x0, x1, x0
 32c:	ldr	w0, [x0]
 330:	ldr	w1, [sp, #20]
 334:	cmp	w1, w0
 338:	b.ne	344 <ext2fs_u32_list_add+0x110>  // b.any
 33c:	mov	x0, #0x0                   	// #0
 340:	b	4d4 <ext2fs_u32_list_add+0x2a0>
 344:	ldr	x0, [sp, #24]
 348:	ldr	w0, [x0, #4]
 34c:	cmp	w0, #0x0
 350:	b.eq	378 <ext2fs_u32_list_add+0x144>  // b.none
 354:	ldr	x0, [sp, #24]
 358:	ldr	x1, [x0, #16]
 35c:	ldrsw	x0, [sp, #60]
 360:	lsl	x0, x0, #2
 364:	add	x0, x1, x0
 368:	ldr	w0, [x0]
 36c:	ldr	w1, [sp, #20]
 370:	cmp	w1, w0
 374:	b.ls	3b0 <ext2fs_u32_list_add+0x17c>  // b.plast
 378:	ldr	x0, [sp, #24]
 37c:	ldr	x1, [x0, #16]
 380:	ldr	x0, [sp, #24]
 384:	ldr	w0, [x0, #4]
 388:	add	w3, w0, #0x1
 38c:	ldr	x2, [sp, #24]
 390:	str	w3, [x2, #4]
 394:	sxtw	x0, w0
 398:	lsl	x0, x0, #2
 39c:	add	x0, x1, x0
 3a0:	ldr	w1, [sp, #20]
 3a4:	str	w1, [x0]
 3a8:	mov	x0, #0x0                   	// #0
 3ac:	b	4d4 <ext2fs_u32_list_add+0x2a0>
 3b0:	ldr	x0, [sp, #24]
 3b4:	ldr	w0, [x0, #4]
 3b8:	str	w0, [sp, #56]
 3bc:	str	wzr, [sp, #60]
 3c0:	b	42c <ext2fs_u32_list_add+0x1f8>
 3c4:	ldr	x0, [sp, #24]
 3c8:	ldr	x1, [x0, #16]
 3cc:	ldrsw	x0, [sp, #60]
 3d0:	lsl	x0, x0, #2
 3d4:	add	x0, x1, x0
 3d8:	ldr	w0, [x0]
 3dc:	ldr	w1, [sp, #20]
 3e0:	cmp	w1, w0
 3e4:	b.ne	3f0 <ext2fs_u32_list_add+0x1bc>  // b.any
 3e8:	mov	x0, #0x0                   	// #0
 3ec:	b	4d4 <ext2fs_u32_list_add+0x2a0>
 3f0:	ldr	x0, [sp, #24]
 3f4:	ldr	x1, [x0, #16]
 3f8:	ldrsw	x0, [sp, #60]
 3fc:	lsl	x0, x0, #2
 400:	add	x0, x1, x0
 404:	ldr	w0, [x0]
 408:	ldr	w1, [sp, #20]
 40c:	cmp	w1, w0
 410:	b.cs	420 <ext2fs_u32_list_add+0x1ec>  // b.hs, b.nlast
 414:	ldr	w0, [sp, #60]
 418:	str	w0, [sp, #56]
 41c:	b	440 <ext2fs_u32_list_add+0x20c>
 420:	ldr	w0, [sp, #60]
 424:	add	w0, w0, #0x1
 428:	str	w0, [sp, #60]
 42c:	ldr	x0, [sp, #24]
 430:	ldr	w0, [x0, #4]
 434:	ldr	w1, [sp, #60]
 438:	cmp	w1, w0
 43c:	b.lt	3c4 <ext2fs_u32_list_add+0x190>  // b.tstop
 440:	ldr	x0, [sp, #24]
 444:	ldr	w0, [x0, #4]
 448:	str	w0, [sp, #60]
 44c:	b	490 <ext2fs_u32_list_add+0x25c>
 450:	ldr	x0, [sp, #24]
 454:	ldr	x1, [x0, #16]
 458:	ldrsw	x0, [sp, #60]
 45c:	lsl	x0, x0, #2
 460:	sub	x0, x0, #0x4
 464:	add	x1, x1, x0
 468:	ldr	x0, [sp, #24]
 46c:	ldr	x2, [x0, #16]
 470:	ldrsw	x0, [sp, #60]
 474:	lsl	x0, x0, #2
 478:	add	x0, x2, x0
 47c:	ldr	w1, [x1]
 480:	str	w1, [x0]
 484:	ldr	w0, [sp, #60]
 488:	sub	w0, w0, #0x1
 48c:	str	w0, [sp, #60]
 490:	ldr	w1, [sp, #60]
 494:	ldr	w0, [sp, #56]
 498:	cmp	w1, w0
 49c:	b.gt	450 <ext2fs_u32_list_add+0x21c>
 4a0:	ldr	x0, [sp, #24]
 4a4:	ldr	x1, [x0, #16]
 4a8:	ldrsw	x0, [sp, #56]
 4ac:	lsl	x0, x0, #2
 4b0:	add	x0, x1, x0
 4b4:	ldr	w1, [sp, #20]
 4b8:	str	w1, [x0]
 4bc:	ldr	x0, [sp, #24]
 4c0:	ldr	w0, [x0, #4]
 4c4:	add	w1, w0, #0x1
 4c8:	ldr	x0, [sp, #24]
 4cc:	str	w1, [x0, #4]
 4d0:	mov	x0, #0x0                   	// #0
 4d4:	ldp	x29, x30, [sp], #64
 4d8:	ret

00000000000004dc <ext2fs_badblocks_list_add>:
 4dc:	stp	x29, x30, [sp, #-32]!
 4e0:	mov	x29, sp
 4e4:	str	x0, [sp, #24]
 4e8:	str	w1, [sp, #20]
 4ec:	ldr	w1, [sp, #20]
 4f0:	ldr	x0, [sp, #24]
 4f4:	bl	234 <ext2fs_u32_list_add>
 4f8:	ldp	x29, x30, [sp], #32
 4fc:	ret

0000000000000500 <ext2fs_u32_list_find>:
 500:	sub	sp, sp, #0x20
 504:	str	x0, [sp, #8]
 508:	str	w1, [sp, #4]
 50c:	ldr	x0, [sp, #8]
 510:	ldr	w1, [x0]
 514:	mov	w0, #0xb702                	// #46850
 518:	movk	w0, #0x7f2b, lsl #16
 51c:	cmp	w1, w0
 520:	b.eq	52c <ext2fs_u32_list_find+0x2c>  // b.none
 524:	mov	w0, #0xffffffff            	// #-1
 528:	b	65c <ext2fs_u32_list_find+0x15c>
 52c:	ldr	x0, [sp, #8]
 530:	ldr	w0, [x0, #4]
 534:	cmp	w0, #0x0
 538:	b.ne	544 <ext2fs_u32_list_find+0x44>  // b.any
 53c:	mov	w0, #0xffffffff            	// #-1
 540:	b	65c <ext2fs_u32_list_find+0x15c>
 544:	str	wzr, [sp, #28]
 548:	ldr	x0, [sp, #8]
 54c:	ldr	w0, [x0, #4]
 550:	sub	w0, w0, #0x1
 554:	str	w0, [sp, #24]
 558:	ldr	x0, [sp, #8]
 55c:	ldr	x1, [x0, #16]
 560:	ldrsw	x0, [sp, #28]
 564:	lsl	x0, x0, #2
 568:	add	x0, x1, x0
 56c:	ldr	w0, [x0]
 570:	ldr	w1, [sp, #4]
 574:	cmp	w1, w0
 578:	b.ne	584 <ext2fs_u32_list_find+0x84>  // b.any
 57c:	ldr	w0, [sp, #28]
 580:	b	65c <ext2fs_u32_list_find+0x15c>
 584:	ldr	x0, [sp, #8]
 588:	ldr	x1, [x0, #16]
 58c:	ldrsw	x0, [sp, #24]
 590:	lsl	x0, x0, #2
 594:	add	x0, x1, x0
 598:	ldr	w0, [x0]
 59c:	ldr	w1, [sp, #4]
 5a0:	cmp	w1, w0
 5a4:	b.ne	648 <ext2fs_u32_list_find+0x148>  // b.any
 5a8:	ldr	w0, [sp, #24]
 5ac:	b	65c <ext2fs_u32_list_find+0x15c>
 5b0:	ldr	w1, [sp, #28]
 5b4:	ldr	w0, [sp, #24]
 5b8:	add	w0, w1, w0
 5bc:	lsr	w0, w0, #1
 5c0:	str	w0, [sp, #20]
 5c4:	ldr	w1, [sp, #20]
 5c8:	ldr	w0, [sp, #28]
 5cc:	cmp	w1, w0
 5d0:	b.eq	658 <ext2fs_u32_list_find+0x158>  // b.none
 5d4:	ldr	w1, [sp, #20]
 5d8:	ldr	w0, [sp, #24]
 5dc:	cmp	w1, w0
 5e0:	b.eq	658 <ext2fs_u32_list_find+0x158>  // b.none
 5e4:	ldr	x0, [sp, #8]
 5e8:	ldr	x1, [x0, #16]
 5ec:	ldrsw	x0, [sp, #20]
 5f0:	lsl	x0, x0, #2
 5f4:	add	x0, x1, x0
 5f8:	ldr	w0, [x0]
 5fc:	ldr	w1, [sp, #4]
 600:	cmp	w1, w0
 604:	b.ne	610 <ext2fs_u32_list_find+0x110>  // b.any
 608:	ldr	w0, [sp, #20]
 60c:	b	65c <ext2fs_u32_list_find+0x15c>
 610:	ldr	x0, [sp, #8]
 614:	ldr	x1, [x0, #16]
 618:	ldrsw	x0, [sp, #20]
 61c:	lsl	x0, x0, #2
 620:	add	x0, x1, x0
 624:	ldr	w0, [x0]
 628:	ldr	w1, [sp, #4]
 62c:	cmp	w1, w0
 630:	b.cs	640 <ext2fs_u32_list_find+0x140>  // b.hs, b.nlast
 634:	ldr	w0, [sp, #20]
 638:	str	w0, [sp, #24]
 63c:	b	648 <ext2fs_u32_list_find+0x148>
 640:	ldr	w0, [sp, #20]
 644:	str	w0, [sp, #28]
 648:	ldr	w1, [sp, #28]
 64c:	ldr	w0, [sp, #24]
 650:	cmp	w1, w0
 654:	b.lt	5b0 <ext2fs_u32_list_find+0xb0>  // b.tstop
 658:	mov	w0, #0xffffffff            	// #-1
 65c:	add	sp, sp, #0x20
 660:	ret

0000000000000664 <ext2fs_u32_list_test>:
 664:	stp	x29, x30, [sp, #-32]!
 668:	mov	x29, sp
 66c:	str	x0, [sp, #24]
 670:	str	w1, [sp, #20]
 674:	ldr	w1, [sp, #20]
 678:	ldr	x0, [sp, #24]
 67c:	bl	500 <ext2fs_u32_list_find>
 680:	cmp	w0, #0x0
 684:	b.ge	690 <ext2fs_u32_list_test+0x2c>  // b.tcont
 688:	mov	w0, #0x0                   	// #0
 68c:	b	694 <ext2fs_u32_list_test+0x30>
 690:	mov	w0, #0x1                   	// #1
 694:	ldp	x29, x30, [sp], #32
 698:	ret

000000000000069c <ext2fs_badblocks_list_test>:
 69c:	stp	x29, x30, [sp, #-32]!
 6a0:	mov	x29, sp
 6a4:	str	x0, [sp, #24]
 6a8:	str	w1, [sp, #20]
 6ac:	ldr	w1, [sp, #20]
 6b0:	ldr	x0, [sp, #24]
 6b4:	bl	664 <ext2fs_u32_list_test>
 6b8:	ldp	x29, x30, [sp], #32
 6bc:	ret

00000000000006c0 <ext2fs_u32_list_del>:
 6c0:	stp	x29, x30, [sp, #-48]!
 6c4:	mov	x29, sp
 6c8:	str	x0, [sp, #24]
 6cc:	str	w1, [sp, #20]
 6d0:	ldr	x0, [sp, #24]
 6d4:	ldr	w0, [x0, #4]
 6d8:	cmp	w0, #0x0
 6dc:	b.ne	6e8 <ext2fs_u32_list_del+0x28>  // b.any
 6e0:	mov	w0, #0xffffffff            	// #-1
 6e4:	b	788 <ext2fs_u32_list_del+0xc8>
 6e8:	ldr	w1, [sp, #20]
 6ec:	ldr	x0, [sp, #24]
 6f0:	bl	500 <ext2fs_u32_list_find>
 6f4:	str	w0, [sp, #40]
 6f8:	ldr	w0, [sp, #40]
 6fc:	cmp	w0, #0x0
 700:	b.ge	70c <ext2fs_u32_list_del+0x4c>  // b.tcont
 704:	mov	w0, #0xffffffff            	// #-1
 708:	b	788 <ext2fs_u32_list_del+0xc8>
 70c:	ldr	w0, [sp, #40]
 710:	str	w0, [sp, #44]
 714:	b	758 <ext2fs_u32_list_del+0x98>
 718:	ldr	x0, [sp, #24]
 71c:	ldr	x1, [x0, #16]
 720:	ldrsw	x0, [sp, #44]
 724:	add	x0, x0, #0x1
 728:	lsl	x0, x0, #2
 72c:	add	x1, x1, x0
 730:	ldr	x0, [sp, #24]
 734:	ldr	x2, [x0, #16]
 738:	ldrsw	x0, [sp, #44]
 73c:	lsl	x0, x0, #2
 740:	add	x0, x2, x0
 744:	ldr	w1, [x1]
 748:	str	w1, [x0]
 74c:	ldr	w0, [sp, #44]
 750:	add	w0, w0, #0x1
 754:	str	w0, [sp, #44]
 758:	ldr	x0, [sp, #24]
 75c:	ldr	w0, [x0, #4]
 760:	sub	w0, w0, #0x1
 764:	ldr	w1, [sp, #44]
 768:	cmp	w1, w0
 76c:	b.lt	718 <ext2fs_u32_list_del+0x58>  // b.tstop
 770:	ldr	x0, [sp, #24]
 774:	ldr	w0, [x0, #4]
 778:	sub	w1, w0, #0x1
 77c:	ldr	x0, [sp, #24]
 780:	str	w1, [x0, #4]
 784:	mov	w0, #0x0                   	// #0
 788:	ldp	x29, x30, [sp], #48
 78c:	ret

0000000000000790 <ext2fs_badblocks_list_del>:
 790:	stp	x29, x30, [sp, #-32]!
 794:	mov	x29, sp
 798:	str	x0, [sp, #24]
 79c:	str	w1, [sp, #20]
 7a0:	ldr	w1, [sp, #20]
 7a4:	ldr	x0, [sp, #24]
 7a8:	bl	6c0 <ext2fs_u32_list_del>
 7ac:	nop
 7b0:	ldp	x29, x30, [sp], #32
 7b4:	ret

00000000000007b8 <ext2fs_u32_list_iterate_begin>:
 7b8:	stp	x29, x30, [sp, #-48]!
 7bc:	mov	x29, sp
 7c0:	str	x0, [sp, #24]
 7c4:	str	x1, [sp, #16]
 7c8:	ldr	x0, [sp, #24]
 7cc:	ldr	w1, [x0]
 7d0:	mov	w0, #0xb702                	// #46850
 7d4:	movk	w0, #0x7f2b, lsl #16
 7d8:	cmp	w1, w0
 7dc:	b.eq	7ec <ext2fs_u32_list_iterate_begin+0x34>  // b.none
 7e0:	mov	x0, #0xb702                	// #46850
 7e4:	movk	x0, #0x7f2b, lsl #16
 7e8:	b	848 <ext2fs_u32_list_iterate_begin+0x90>
 7ec:	add	x0, sp, #0x20
 7f0:	mov	x1, x0
 7f4:	mov	x0, #0x18                  	// #24
 7f8:	bl	0 <ext2fs_get_mem>
 7fc:	str	x0, [sp, #40]
 800:	ldr	x0, [sp, #40]
 804:	cmp	x0, #0x0
 808:	b.eq	814 <ext2fs_u32_list_iterate_begin+0x5c>  // b.none
 80c:	ldr	x0, [sp, #40]
 810:	b	848 <ext2fs_u32_list_iterate_begin+0x90>
 814:	ldr	x0, [sp, #32]
 818:	mov	w1, #0xb703                	// #46851
 81c:	movk	w1, #0x7f2b, lsl #16
 820:	str	w1, [x0]
 824:	ldr	x0, [sp, #32]
 828:	ldr	x1, [sp, #24]
 82c:	str	x1, [x0, #8]
 830:	ldr	x0, [sp, #32]
 834:	str	wzr, [x0, #16]
 838:	ldr	x1, [sp, #32]
 83c:	ldr	x0, [sp, #16]
 840:	str	x1, [x0]
 844:	mov	x0, #0x0                   	// #0
 848:	ldp	x29, x30, [sp], #48
 84c:	ret

0000000000000850 <ext2fs_badblocks_list_iterate_begin>:
 850:	stp	x29, x30, [sp, #-32]!
 854:	mov	x29, sp
 858:	str	x0, [sp, #24]
 85c:	str	x1, [sp, #16]
 860:	ldr	x1, [sp, #16]
 864:	ldr	x0, [sp, #24]
 868:	bl	7b8 <ext2fs_u32_list_iterate_begin>
 86c:	ldp	x29, x30, [sp], #32
 870:	ret

0000000000000874 <ext2fs_u32_list_iterate>:
 874:	sub	sp, sp, #0x20
 878:	str	x0, [sp, #8]
 87c:	str	x1, [sp]
 880:	ldr	x0, [sp, #8]
 884:	ldr	w1, [x0]
 888:	mov	w0, #0xb703                	// #46851
 88c:	movk	w0, #0x7f2b, lsl #16
 890:	cmp	w1, w0
 894:	b.eq	8a0 <ext2fs_u32_list_iterate+0x2c>  // b.none
 898:	mov	w0, #0x0                   	// #0
 89c:	b	92c <ext2fs_u32_list_iterate+0xb8>
 8a0:	ldr	x0, [sp, #8]
 8a4:	ldr	x0, [x0, #8]
 8a8:	str	x0, [sp, #24]
 8ac:	ldr	x0, [sp, #24]
 8b0:	ldr	w1, [x0]
 8b4:	mov	w0, #0xb702                	// #46850
 8b8:	movk	w0, #0x7f2b, lsl #16
 8bc:	cmp	w1, w0
 8c0:	b.eq	8cc <ext2fs_u32_list_iterate+0x58>  // b.none
 8c4:	mov	w0, #0x0                   	// #0
 8c8:	b	92c <ext2fs_u32_list_iterate+0xb8>
 8cc:	ldr	x0, [sp, #8]
 8d0:	ldr	w1, [x0, #16]
 8d4:	ldr	x0, [sp, #24]
 8d8:	ldr	w0, [x0, #4]
 8dc:	cmp	w1, w0
 8e0:	b.ge	920 <ext2fs_u32_list_iterate+0xac>  // b.tcont
 8e4:	ldr	x0, [sp, #24]
 8e8:	ldr	x1, [x0, #16]
 8ec:	ldr	x0, [sp, #8]
 8f0:	ldr	w0, [x0, #16]
 8f4:	add	w3, w0, #0x1
 8f8:	ldr	x2, [sp, #8]
 8fc:	str	w3, [x2, #16]
 900:	sxtw	x0, w0
 904:	lsl	x0, x0, #2
 908:	add	x0, x1, x0
 90c:	ldr	w1, [x0]
 910:	ldr	x0, [sp]
 914:	str	w1, [x0]
 918:	mov	w0, #0x1                   	// #1
 91c:	b	92c <ext2fs_u32_list_iterate+0xb8>
 920:	ldr	x0, [sp]
 924:	str	wzr, [x0]
 928:	mov	w0, #0x0                   	// #0
 92c:	add	sp, sp, #0x20
 930:	ret

0000000000000934 <ext2fs_badblocks_list_iterate>:
 934:	stp	x29, x30, [sp, #-32]!
 938:	mov	x29, sp
 93c:	str	x0, [sp, #24]
 940:	str	x1, [sp, #16]
 944:	ldr	x1, [sp, #16]
 948:	ldr	x0, [sp, #24]
 94c:	bl	874 <ext2fs_u32_list_iterate>
 950:	ldp	x29, x30, [sp], #32
 954:	ret

0000000000000958 <ext2fs_u32_list_iterate_end>:
 958:	stp	x29, x30, [sp, #-32]!
 95c:	mov	x29, sp
 960:	str	x0, [sp, #24]
 964:	ldr	x0, [sp, #24]
 968:	cmp	x0, #0x0
 96c:	b.eq	99c <ext2fs_u32_list_iterate_end+0x44>  // b.none
 970:	ldr	x0, [sp, #24]
 974:	ldr	w1, [x0]
 978:	mov	w0, #0xb703                	// #46851
 97c:	movk	w0, #0x7f2b, lsl #16
 980:	cmp	w1, w0
 984:	b.ne	99c <ext2fs_u32_list_iterate_end+0x44>  // b.any
 988:	ldr	x0, [sp, #24]
 98c:	str	xzr, [x0, #8]
 990:	add	x0, sp, #0x18
 994:	bl	0 <ext2fs_free_mem>
 998:	b	9a0 <ext2fs_u32_list_iterate_end+0x48>
 99c:	nop
 9a0:	ldp	x29, x30, [sp], #32
 9a4:	ret

00000000000009a8 <ext2fs_badblocks_list_iterate_end>:
 9a8:	stp	x29, x30, [sp, #-32]!
 9ac:	mov	x29, sp
 9b0:	str	x0, [sp, #24]
 9b4:	ldr	x0, [sp, #24]
 9b8:	bl	958 <ext2fs_u32_list_iterate_end>
 9bc:	nop
 9c0:	ldp	x29, x30, [sp], #32
 9c4:	ret

00000000000009c8 <ext2fs_u32_list_equal>:
 9c8:	stp	x29, x30, [sp, #-32]!
 9cc:	mov	x29, sp
 9d0:	str	x0, [sp, #24]
 9d4:	str	x1, [sp, #16]
 9d8:	ldr	x0, [sp, #24]
 9dc:	ldr	w1, [x0]
 9e0:	mov	w0, #0xb702                	// #46850
 9e4:	movk	w0, #0x7f2b, lsl #16
 9e8:	cmp	w1, w0
 9ec:	b.eq	9fc <ext2fs_u32_list_equal+0x34>  // b.none
 9f0:	mov	w0, #0xb702                	// #46850
 9f4:	movk	w0, #0x7f2b, lsl #16
 9f8:	b	a80 <ext2fs_u32_list_equal+0xb8>
 9fc:	ldr	x0, [sp, #16]
 a00:	ldr	w1, [x0]
 a04:	mov	w0, #0xb702                	// #46850
 a08:	movk	w0, #0x7f2b, lsl #16
 a0c:	cmp	w1, w0
 a10:	b.eq	a20 <ext2fs_u32_list_equal+0x58>  // b.none
 a14:	mov	w0, #0xb702                	// #46850
 a18:	movk	w0, #0x7f2b, lsl #16
 a1c:	b	a80 <ext2fs_u32_list_equal+0xb8>
 a20:	ldr	x0, [sp, #24]
 a24:	ldr	w1, [x0, #4]
 a28:	ldr	x0, [sp, #16]
 a2c:	ldr	w0, [x0, #4]
 a30:	cmp	w1, w0
 a34:	b.eq	a40 <ext2fs_u32_list_equal+0x78>  // b.none
 a38:	mov	w0, #0x0                   	// #0
 a3c:	b	a80 <ext2fs_u32_list_equal+0xb8>
 a40:	ldr	x0, [sp, #24]
 a44:	ldr	x3, [x0, #16]
 a48:	ldr	x0, [sp, #16]
 a4c:	ldr	x1, [x0, #16]
 a50:	ldr	x0, [sp, #24]
 a54:	ldr	w0, [x0, #4]
 a58:	sxtw	x0, w0
 a5c:	lsl	x0, x0, #2
 a60:	mov	x2, x0
 a64:	mov	x0, x3
 a68:	bl	0 <memcmp>
 a6c:	cmp	w0, #0x0
 a70:	b.eq	a7c <ext2fs_u32_list_equal+0xb4>  // b.none
 a74:	mov	w0, #0x0                   	// #0
 a78:	b	a80 <ext2fs_u32_list_equal+0xb8>
 a7c:	mov	w0, #0x1                   	// #1
 a80:	ldp	x29, x30, [sp], #32
 a84:	ret

0000000000000a88 <ext2fs_badblocks_equal>:
 a88:	stp	x29, x30, [sp, #-32]!
 a8c:	mov	x29, sp
 a90:	str	x0, [sp, #24]
 a94:	str	x1, [sp, #16]
 a98:	ldr	x1, [sp, #16]
 a9c:	ldr	x0, [sp, #24]
 aa0:	bl	9c8 <ext2fs_u32_list_equal>
 aa4:	ldp	x29, x30, [sp], #32
 aa8:	ret

0000000000000aac <ext2fs_u32_list_count>:
 aac:	sub	sp, sp, #0x10
 ab0:	str	x0, [sp, #8]
 ab4:	ldr	x0, [sp, #8]
 ab8:	ldr	w0, [x0, #4]
 abc:	add	sp, sp, #0x10
 ac0:	ret

bb_inode.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_update_bb_inode>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [x0]
  18:	mov	x0, #0xb701                	// #46849
  1c:	movk	x0, #0x7f2b, lsl #16
  20:	cmp	x1, x0
  24:	b.eq	34 <ext2fs_update_bb_inode+0x34>  // b.none
  28:	mov	x0, #0xb701                	// #46849
  2c:	movk	x0, #0x7f2b, lsl #16
  30:	b	32c <ext2fs_update_bb_inode+0x32c>
  34:	ldr	x0, [sp, #24]
  38:	ldr	x0, [x0, #88]
  3c:	cmp	x0, #0x0
  40:	b.ne	50 <ext2fs_update_bb_inode+0x50>  // b.any
  44:	mov	x0, #0xb728                	// #46888
  48:	movk	x0, #0x7f2b, lsl #16
  4c:	b	32c <ext2fs_update_bb_inode+0x32c>
  50:	add	x0, sp, #0xa0
  54:	mov	x2, #0x38                  	// #56
  58:	mov	w1, #0x0                   	// #0
  5c:	bl	0 <memset>
  60:	mov	w0, #0xa                   	// #10
  64:	str	w0, [sp, #184]
  68:	ldr	w0, [sp, #184]
  6c:	sxtw	x3, w0
  70:	add	x0, sp, #0xa0
  74:	add	x0, x0, #0x10
  78:	mov	x2, x0
  7c:	mov	x1, #0x4                   	// #4
  80:	mov	x0, x3
  84:	bl	0 <ext2fs_get_array>
  88:	str	x0, [sp, #216]
  8c:	ldr	x0, [sp, #216]
  90:	cmp	x0, #0x0
  94:	b.eq	a0 <ext2fs_update_bb_inode+0xa0>  // b.none
  98:	ldr	x0, [sp, #216]
  9c:	b	32c <ext2fs_update_bb_inode+0x32c>
  a0:	ldr	x3, [sp, #176]
  a4:	ldr	w0, [sp, #184]
  a8:	sxtw	x0, w0
  ac:	lsl	x0, x0, #2
  b0:	mov	x2, x0
  b4:	mov	w1, #0x0                   	// #0
  b8:	mov	x0, x3
  bc:	bl	0 <memset>
  c0:	ldr	x0, [sp, #24]
  c4:	ldr	w0, [x0, #40]
  c8:	mov	w2, w0
  cc:	add	x0, sp, #0xa0
  d0:	add	x0, x0, #0x28
  d4:	mov	x1, x0
  d8:	mov	x0, x2
  dc:	bl	0 <ext2fs_get_mem>
  e0:	str	x0, [sp, #216]
  e4:	ldr	x0, [sp, #216]
  e8:	cmp	x0, #0x0
  ec:	b.ne	2e4 <ext2fs_update_bb_inode+0x2e4>  // b.any
  f0:	ldr	x3, [sp, #200]
  f4:	ldr	x0, [sp, #24]
  f8:	ldr	w0, [x0, #40]
  fc:	mov	w0, w0
 100:	mov	x2, x0
 104:	mov	w1, #0x0                   	// #0
 108:	mov	x0, x3
 10c:	bl	0 <memset>
 110:	str	xzr, [sp, #208]
 114:	add	x0, sp, #0xa0
 118:	mov	x5, x0
 11c:	adrp	x0, 0 <ext2fs_update_bb_inode>
 120:	add	x4, x0, #0x0
 124:	mov	x3, #0x0                   	// #0
 128:	mov	w2, #0x2                   	// #2
 12c:	mov	w1, #0x1                   	// #1
 130:	ldr	x0, [sp, #24]
 134:	bl	0 <ext2fs_block_iterate2>
 138:	str	x0, [sp, #216]
 13c:	ldr	x0, [sp, #216]
 140:	cmp	x0, #0x0
 144:	b.ne	2ec <ext2fs_update_bb_inode+0x2ec>  // b.any
 148:	ldr	x0, [sp, #208]
 14c:	cmp	x0, #0x0
 150:	b.eq	160 <ext2fs_update_bb_inode+0x160>  // b.none
 154:	ldr	x0, [sp, #208]
 158:	str	x0, [sp, #216]
 15c:	b	310 <ext2fs_update_bb_inode+0x310>
 160:	ldr	x0, [sp, #16]
 164:	cmp	x0, #0x0
 168:	b.eq	1e0 <ext2fs_update_bb_inode+0x1e0>  // b.none
 16c:	add	x0, sp, #0xa0
 170:	mov	x1, x0
 174:	ldr	x0, [sp, #16]
 178:	bl	0 <ext2fs_badblocks_list_iterate_begin>
 17c:	str	x0, [sp, #216]
 180:	ldr	x0, [sp, #216]
 184:	cmp	x0, #0x0
 188:	b.ne	2f4 <ext2fs_update_bb_inode+0x2f4>  // b.any
 18c:	add	x0, sp, #0xa0
 190:	mov	x5, x0
 194:	adrp	x0, 0 <ext2fs_update_bb_inode>
 198:	add	x4, x0, #0x0
 19c:	mov	x3, #0x0                   	// #0
 1a0:	mov	w2, #0x1                   	// #1
 1a4:	mov	w1, #0x1                   	// #1
 1a8:	ldr	x0, [sp, #24]
 1ac:	bl	0 <ext2fs_block_iterate2>
 1b0:	str	x0, [sp, #216]
 1b4:	ldr	x0, [sp, #160]
 1b8:	bl	0 <ext2fs_badblocks_list_iterate_end>
 1bc:	ldr	x0, [sp, #216]
 1c0:	cmp	x0, #0x0
 1c4:	b.ne	2fc <ext2fs_update_bb_inode+0x2fc>  // b.any
 1c8:	ldr	x0, [sp, #208]
 1cc:	cmp	x0, #0x0
 1d0:	b.eq	1e0 <ext2fs_update_bb_inode+0x1e0>  // b.none
 1d4:	ldr	x0, [sp, #208]
 1d8:	str	x0, [sp, #216]
 1dc:	b	310 <ext2fs_update_bb_inode+0x310>
 1e0:	add	x0, sp, #0x20
 1e4:	mov	x2, x0
 1e8:	mov	w1, #0x1                   	// #1
 1ec:	ldr	x0, [sp, #24]
 1f0:	bl	0 <ext2fs_read_inode>
 1f4:	str	x0, [sp, #216]
 1f8:	ldr	x0, [sp, #216]
 1fc:	cmp	x0, #0x0
 200:	b.ne	304 <ext2fs_update_bb_inode+0x304>  // b.any
 204:	ldr	x0, [sp, #24]
 208:	ldr	x0, [x0, #184]
 20c:	cmp	x0, #0x0
 210:	b.eq	220 <ext2fs_update_bb_inode+0x220>  // b.none
 214:	ldr	x0, [sp, #24]
 218:	ldr	x0, [x0, #184]
 21c:	b	228 <ext2fs_update_bb_inode+0x228>
 220:	mov	x0, #0x0                   	// #0
 224:	bl	0 <time>
 228:	str	w0, [sp, #48]
 22c:	ldr	w0, [sp, #48]
 230:	str	w0, [sp, #40]
 234:	ldr	w0, [sp, #44]
 238:	cmp	w0, #0x0
 23c:	b.ne	268 <ext2fs_update_bb_inode+0x268>  // b.any
 240:	ldr	x0, [sp, #24]
 244:	ldr	x0, [x0, #184]
 248:	cmp	x0, #0x0
 24c:	b.eq	25c <ext2fs_update_bb_inode+0x25c>  // b.none
 250:	ldr	x0, [sp, #24]
 254:	ldr	x0, [x0, #184]
 258:	b	264 <ext2fs_update_bb_inode+0x264>
 25c:	mov	x0, #0x0                   	// #0
 260:	bl	0 <time>
 264:	str	w0, [sp, #44]
 268:	ldr	w0, [sp, #168]
 26c:	sxtw	x1, w0
 270:	add	x0, sp, #0x20
 274:	mov	x2, x1
 278:	mov	x1, x0
 27c:	ldr	x0, [sp, #24]
 280:	bl	0 <ext2fs_iblk_set>
 284:	ldr	w0, [sp, #168]
 288:	mov	w1, w0
 28c:	ldr	x0, [sp, #24]
 290:	ldr	w0, [x0, #40]
 294:	mul	w0, w1, w0
 298:	mov	w1, w0
 29c:	add	x0, sp, #0x20
 2a0:	mov	x2, x1
 2a4:	mov	x1, x0
 2a8:	ldr	x0, [sp, #24]
 2ac:	bl	0 <ext2fs_inode_size_set>
 2b0:	str	x0, [sp, #216]
 2b4:	ldr	x0, [sp, #216]
 2b8:	cmp	x0, #0x0
 2bc:	b.ne	30c <ext2fs_update_bb_inode+0x30c>  // b.any
 2c0:	add	x0, sp, #0x20
 2c4:	mov	x2, x0
 2c8:	mov	w1, #0x1                   	// #1
 2cc:	ldr	x0, [sp, #24]
 2d0:	bl	0 <ext2fs_write_inode>
 2d4:	str	x0, [sp, #216]
 2d8:	ldr	x0, [sp, #216]
 2dc:	cmp	x0, #0x0
 2e0:	b	310 <ext2fs_update_bb_inode+0x310>
 2e4:	nop
 2e8:	b	310 <ext2fs_update_bb_inode+0x310>
 2ec:	nop
 2f0:	b	310 <ext2fs_update_bb_inode+0x310>
 2f4:	nop
 2f8:	b	310 <ext2fs_update_bb_inode+0x310>
 2fc:	nop
 300:	b	310 <ext2fs_update_bb_inode+0x310>
 304:	nop
 308:	b	310 <ext2fs_update_bb_inode+0x310>
 30c:	nop
 310:	add	x0, sp, #0xa0
 314:	add	x0, x0, #0x10
 318:	bl	0 <ext2fs_free_mem>
 31c:	add	x0, sp, #0xa0
 320:	add	x0, x0, #0x28
 324:	bl	0 <ext2fs_free_mem>
 328:	ldr	x0, [sp, #216]
 32c:	ldp	x29, x30, [sp], #224
 330:	ret

0000000000000334 <clear_bad_block_proc>:
 334:	stp	x29, x30, [sp, #-112]!
 338:	mov	x29, sp
 33c:	str	x19, [sp, #16]
 340:	str	x0, [sp, #72]
 344:	str	x1, [sp, #64]
 348:	str	x2, [sp, #56]
 34c:	str	w3, [sp, #52]
 350:	str	w4, [sp, #48]
 354:	str	x5, [sp, #40]
 358:	ldr	x0, [sp, #40]
 35c:	str	x0, [sp, #104]
 360:	ldr	x0, [sp, #64]
 364:	ldr	w0, [x0]
 368:	cmp	w0, #0x0
 36c:	b.ne	378 <clear_bad_block_proc+0x44>  // b.any
 370:	mov	w0, #0x0                   	// #0
 374:	b	4c8 <clear_bad_block_proc+0x194>
 378:	ldr	x0, [sp, #64]
 37c:	ldr	w0, [x0]
 380:	mov	w19, w0
 384:	ldr	x0, [sp, #72]
 388:	ldr	x0, [x0, #32]
 38c:	bl	0 <ext2fs_blocks_count>
 390:	cmp	x19, x0
 394:	b.cs	3b4 <clear_bad_block_proc+0x80>  // b.hs, b.nlast
 398:	ldr	x0, [sp, #64]
 39c:	ldr	w1, [x0]
 3a0:	ldr	x0, [sp, #72]
 3a4:	ldr	x0, [x0, #32]
 3a8:	ldr	w0, [x0, #20]
 3ac:	cmp	w1, w0
 3b0:	b.cs	3c4 <clear_bad_block_proc+0x90>  // b.hs, b.nlast
 3b4:	ldr	x0, [sp, #64]
 3b8:	str	wzr, [x0]
 3bc:	mov	w0, #0x1                   	// #1
 3c0:	b	4c8 <clear_bad_block_proc+0x194>
 3c4:	ldr	x0, [sp, #56]
 3c8:	cmp	x0, #0x0
 3cc:	b.ge	4a0 <clear_bad_block_proc+0x16c>  // b.tcont
 3d0:	ldr	x0, [sp, #104]
 3d4:	ldr	w1, [x0, #28]
 3d8:	ldr	x0, [sp, #104]
 3dc:	ldr	w0, [x0, #24]
 3e0:	cmp	w1, w0
 3e4:	b.lt	46c <clear_bad_block_proc+0x138>  // b.tstop
 3e8:	ldr	x0, [sp, #104]
 3ec:	ldr	w0, [x0, #24]
 3f0:	sxtw	x0, w0
 3f4:	lsl	x0, x0, #2
 3f8:	str	x0, [sp, #96]
 3fc:	ldr	x0, [sp, #104]
 400:	ldr	w0, [x0, #24]
 404:	add	w1, w0, #0xa
 408:	ldr	x0, [sp, #104]
 40c:	str	w1, [x0, #24]
 410:	ldr	x0, [sp, #104]
 414:	ldr	w0, [x0, #24]
 418:	sxtw	x0, w0
 41c:	lsl	x1, x0, #2
 420:	ldr	x0, [sp, #104]
 424:	add	x0, x0, #0x10
 428:	mov	x2, x0
 42c:	ldr	x0, [sp, #96]
 430:	bl	0 <ext2fs_resize_mem>
 434:	str	x0, [sp, #88]
 438:	ldr	x0, [sp, #88]
 43c:	cmp	x0, #0x0
 440:	b.eq	46c <clear_bad_block_proc+0x138>  // b.none
 444:	ldr	x0, [sp, #104]
 448:	ldr	w0, [x0, #24]
 44c:	sub	w1, w0, #0xa
 450:	ldr	x0, [sp, #104]
 454:	str	w1, [x0, #24]
 458:	ldr	x0, [sp, #104]
 45c:	ldr	x1, [sp, #88]
 460:	str	x1, [x0, #48]
 464:	mov	w0, #0x2                   	// #2
 468:	b	4c8 <clear_bad_block_proc+0x194>
 46c:	ldr	x0, [sp, #104]
 470:	ldr	x1, [x0, #16]
 474:	ldr	x0, [sp, #104]
 478:	ldr	w0, [x0, #28]
 47c:	add	w3, w0, #0x1
 480:	ldr	x2, [sp, #104]
 484:	str	w3, [x2, #28]
 488:	sxtw	x0, w0
 48c:	lsl	x0, x0, #2
 490:	add	x0, x1, x0
 494:	ldr	x1, [sp, #64]
 498:	ldr	w1, [x1]
 49c:	str	w1, [x0]
 4a0:	ldr	x0, [sp, #64]
 4a4:	ldr	w0, [x0]
 4a8:	mov	w0, w0
 4ac:	mov	w2, #0xffffffff            	// #-1
 4b0:	mov	x1, x0
 4b4:	ldr	x0, [sp, #72]
 4b8:	bl	0 <ext2fs_block_alloc_stats2>
 4bc:	ldr	x0, [sp, #64]
 4c0:	str	wzr, [x0]
 4c4:	mov	w0, #0x1                   	// #1
 4c8:	ldr	x19, [sp, #16]
 4cc:	ldp	x29, x30, [sp], #112
 4d0:	ret

00000000000004d4 <set_bad_block_proc>:
 4d4:	stp	x29, x30, [sp, #-96]!
 4d8:	mov	x29, sp
 4dc:	str	x0, [sp, #56]
 4e0:	str	x1, [sp, #48]
 4e4:	str	x2, [sp, #40]
 4e8:	str	w3, [sp, #36]
 4ec:	str	w4, [sp, #32]
 4f0:	str	x5, [sp, #24]
 4f4:	ldr	x0, [sp, #24]
 4f8:	str	x0, [sp, #88]
 4fc:	ldr	x0, [sp, #40]
 500:	cmp	x0, #0x0
 504:	b.lt	540 <set_bad_block_proc+0x6c>  // b.tstop
 508:	ldr	x0, [sp, #88]
 50c:	ldr	x0, [x0]
 510:	add	x1, sp, #0x4c
 514:	bl	0 <ext2fs_badblocks_list_iterate>
 518:	cmp	w0, #0x0
 51c:	b.ne	528 <set_bad_block_proc+0x54>  // b.any
 520:	mov	w0, #0x2                   	// #2
 524:	b	65c <set_bad_block_proc+0x188>
 528:	ldr	x0, [sp, #88]
 52c:	ldr	w0, [x0, #8]
 530:	add	w1, w0, #0x1
 534:	ldr	x0, [sp, #88]
 538:	str	w1, [x0, #8]
 53c:	b	634 <set_bad_block_proc+0x160>
 540:	nop
 544:	ldr	x0, [sp, #88]
 548:	ldr	w1, [x0, #32]
 54c:	ldr	x0, [sp, #88]
 550:	ldr	w0, [x0, #28]
 554:	cmp	w1, w0
 558:	b.ge	5ac <set_bad_block_proc+0xd8>  // b.tcont
 55c:	ldr	x0, [sp, #88]
 560:	ldr	x1, [x0, #16]
 564:	ldr	x0, [sp, #88]
 568:	ldr	w0, [x0, #32]
 56c:	add	w3, w0, #0x1
 570:	ldr	x2, [sp, #88]
 574:	str	w3, [x2, #32]
 578:	sxtw	x0, w0
 57c:	lsl	x0, x0, #2
 580:	add	x0, x1, x0
 584:	ldr	w0, [x0]
 588:	str	w0, [sp, #76]
 58c:	ldr	x0, [sp, #56]
 590:	ldr	x0, [x0, #88]
 594:	ldr	w1, [sp, #76]
 598:	mov	w1, w1
 59c:	bl	0 <ext2fs_test_block_bitmap2>
 5a0:	cmp	w0, #0x0
 5a4:	b.eq	5e8 <set_bad_block_proc+0x114>  // b.none
 5a8:	b	544 <set_bad_block_proc+0x70>
 5ac:	add	x0, sp, #0x4c
 5b0:	mov	x3, x0
 5b4:	mov	x2, #0x0                   	// #0
 5b8:	mov	w1, #0x0                   	// #0
 5bc:	ldr	x0, [sp, #56]
 5c0:	bl	0 <ext2fs_new_block>
 5c4:	str	x0, [sp, #80]
 5c8:	ldr	x0, [sp, #80]
 5cc:	cmp	x0, #0x0
 5d0:	b.eq	5e8 <set_bad_block_proc+0x114>  // b.none
 5d4:	ldr	x0, [sp, #88]
 5d8:	ldr	x1, [sp, #80]
 5dc:	str	x1, [x0, #48]
 5e0:	mov	w0, #0x2                   	// #2
 5e4:	b	65c <set_bad_block_proc+0x188>
 5e8:	ldr	x0, [sp, #56]
 5ec:	ldr	x4, [x0, #8]
 5f0:	ldr	w0, [sp, #76]
 5f4:	mov	w1, w0
 5f8:	ldr	x0, [sp, #88]
 5fc:	ldr	x0, [x0, #40]
 600:	mov	x3, x0
 604:	mov	w2, #0x1                   	// #1
 608:	mov	x0, x4
 60c:	bl	0 <io_channel_write_blk64>
 610:	str	x0, [sp, #80]
 614:	ldr	x0, [sp, #80]
 618:	cmp	x0, #0x0
 61c:	b.eq	634 <set_bad_block_proc+0x160>  // b.none
 620:	ldr	x0, [sp, #88]
 624:	ldr	x1, [sp, #80]
 628:	str	x1, [x0, #48]
 62c:	mov	w0, #0x2                   	// #2
 630:	b	65c <set_bad_block_proc+0x188>
 634:	ldr	w0, [sp, #76]
 638:	mov	w0, w0
 63c:	mov	w2, #0x1                   	// #1
 640:	mov	x1, x0
 644:	ldr	x0, [sp, #56]
 648:	bl	0 <ext2fs_block_alloc_stats2>
 64c:	ldr	w1, [sp, #76]
 650:	ldr	x0, [sp, #48]
 654:	str	w1, [x0]
 658:	mov	w0, #0x1                   	// #1
 65c:	ldp	x29, x30, [sp], #96
 660:	ret

bitmaps.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_free_inode_bitmap>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	bl	0 <ext2fs_free_generic_bmap>
  14:	nop
  18:	ldp	x29, x30, [sp], #32
  1c:	ret

0000000000000020 <ext2fs_free_block_bitmap>:
  20:	stp	x29, x30, [sp, #-32]!
  24:	mov	x29, sp
  28:	str	x0, [sp, #24]
  2c:	ldr	x0, [sp, #24]
  30:	bl	0 <ext2fs_free_generic_bmap>
  34:	nop
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

0000000000000040 <ext2fs_copy_bitmap>:
  40:	stp	x29, x30, [sp, #-32]!
  44:	mov	x29, sp
  48:	str	x0, [sp, #24]
  4c:	str	x1, [sp, #16]
  50:	ldr	x1, [sp, #16]
  54:	ldr	x0, [sp, #24]
  58:	bl	0 <ext2fs_copy_generic_bmap>
  5c:	ldp	x29, x30, [sp], #32
  60:	ret

0000000000000064 <ext2fs_set_bitmap_padding>:
  64:	stp	x29, x30, [sp, #-32]!
  68:	mov	x29, sp
  6c:	str	x0, [sp, #24]
  70:	ldr	x0, [sp, #24]
  74:	bl	0 <ext2fs_set_generic_bmap_padding>
  78:	nop
  7c:	ldp	x29, x30, [sp], #32
  80:	ret

0000000000000084 <ext2fs_allocate_inode_bitmap>:
  84:	stp	x29, x30, [sp, #-80]!
  88:	mov	x29, sp
  8c:	str	x0, [sp, #40]
  90:	str	x1, [sp, #32]
  94:	str	x2, [sp, #24]
  98:	ldr	x0, [sp, #40]
  9c:	ldr	x1, [x0]
  a0:	mov	x0, #0xb701                	// #46849
  a4:	movk	x0, #0x7f2b, lsl #16
  a8:	cmp	x1, x0
  ac:	b.eq	bc <ext2fs_allocate_inode_bitmap+0x38>  // b.none
  b0:	mov	x0, #0xb701                	// #46849
  b4:	movk	x0, #0x7f2b, lsl #16
  b8:	b	1b8 <ext2fs_allocate_inode_bitmap+0x134>
  bc:	ldr	x0, [sp, #40]
  c0:	adrp	x1, 0 <ext2fs_write_bitmaps>
  c4:	add	x1, x1, #0x0
  c8:	str	x1, [x0, #112]
  cc:	mov	x0, #0x1                   	// #1
  d0:	str	x0, [sp, #72]
  d4:	ldr	x0, [sp, #40]
  d8:	ldr	x0, [x0, #32]
  dc:	ldr	w0, [x0]
  e0:	mov	w0, w0
  e4:	str	x0, [sp, #64]
  e8:	ldr	x0, [sp, #40]
  ec:	ldr	x0, [x0, #32]
  f0:	ldr	w1, [x0, #40]
  f4:	ldr	x0, [sp, #40]
  f8:	ldr	w0, [x0, #48]
  fc:	mul	w0, w1, w0
 100:	mov	w0, w0
 104:	str	x0, [sp, #56]
 108:	ldr	x0, [sp, #40]
 10c:	ldr	w0, [x0, #16]
 110:	and	w0, w0, #0x20000
 114:	cmp	w0, #0x0
 118:	b.eq	150 <ext2fs_allocate_inode_bitmap+0xcc>  // b.none
 11c:	ldr	x0, [sp, #40]
 120:	ldrh	w0, [x0, #196]
 124:	ldr	x7, [sp, #24]
 128:	ldr	x6, [sp, #32]
 12c:	ldr	x5, [sp, #56]
 130:	ldr	x4, [sp, #64]
 134:	ldr	x3, [sp, #72]
 138:	mov	w2, w0
 13c:	mov	x1, #0xb76f                	// #46959
 140:	movk	x1, #0x7f2b, lsl #16
 144:	ldr	x0, [sp, #40]
 148:	bl	0 <ext2fs_alloc_generic_bmap>
 14c:	b	1b8 <ext2fs_allocate_inode_bitmap+0x134>
 150:	ldr	x1, [sp, #64]
 154:	mov	x0, #0xffffffff            	// #4294967295
 158:	cmp	x1, x0
 15c:	b.hi	170 <ext2fs_allocate_inode_bitmap+0xec>  // b.pmore
 160:	ldr	x1, [sp, #56]
 164:	mov	x0, #0xffffffff            	// #4294967295
 168:	cmp	x1, x0
 16c:	b.ls	17c <ext2fs_allocate_inode_bitmap+0xf8>  // b.plast
 170:	mov	x0, #0xb789                	// #46985
 174:	movk	x0, #0x7f2b, lsl #16
 178:	b	1b8 <ext2fs_allocate_inode_bitmap+0x134>
 17c:	ldr	x0, [sp, #72]
 180:	mov	w1, w0
 184:	ldr	x0, [sp, #64]
 188:	mov	w2, w0
 18c:	ldr	x0, [sp, #56]
 190:	ldr	x7, [sp, #24]
 194:	mov	x6, #0x0                   	// #0
 198:	ldr	x5, [sp, #32]
 19c:	mov	w4, w0
 1a0:	mov	w3, w2
 1a4:	mov	w2, w1
 1a8:	ldr	x1, [sp, #40]
 1ac:	mov	x0, #0xb709                	// #46857
 1b0:	movk	x0, #0x7f2b, lsl #16
 1b4:	bl	0 <ext2fs_make_generic_bitmap>
 1b8:	ldp	x29, x30, [sp], #80
 1bc:	ret

00000000000001c0 <ext2fs_allocate_block_bitmap>:
 1c0:	stp	x29, x30, [sp, #-80]!
 1c4:	mov	x29, sp
 1c8:	str	x0, [sp, #40]
 1cc:	str	x1, [sp, #32]
 1d0:	str	x2, [sp, #24]
 1d4:	ldr	x0, [sp, #40]
 1d8:	ldr	x1, [x0]
 1dc:	mov	x0, #0xb701                	// #46849
 1e0:	movk	x0, #0x7f2b, lsl #16
 1e4:	cmp	x1, x0
 1e8:	b.eq	1f8 <ext2fs_allocate_block_bitmap+0x38>  // b.none
 1ec:	mov	x0, #0xb701                	// #46849
 1f0:	movk	x0, #0x7f2b, lsl #16
 1f4:	b	328 <ext2fs_allocate_block_bitmap+0x168>
 1f8:	ldr	x0, [sp, #40]
 1fc:	adrp	x1, 0 <ext2fs_write_bitmaps>
 200:	add	x1, x1, #0x0
 204:	str	x1, [x0, #112]
 208:	ldr	x0, [sp, #40]
 20c:	ldr	x0, [x0, #32]
 210:	ldr	w1, [x0, #20]
 214:	ldr	x0, [sp, #40]
 218:	ldr	w0, [x0, #192]
 21c:	lsr	w0, w1, w0
 220:	mov	w0, w0
 224:	str	x0, [sp, #72]
 228:	ldr	x0, [sp, #40]
 22c:	ldr	x0, [x0, #32]
 230:	bl	0 <ext2fs_blocks_count>
 234:	sub	x1, x0, #0x1
 238:	ldr	x0, [sp, #40]
 23c:	ldr	w0, [x0, #192]
 240:	lsr	x0, x1, x0
 244:	str	x0, [sp, #64]
 248:	ldr	x0, [sp, #40]
 24c:	ldr	x0, [x0, #32]
 250:	ldr	w0, [x0, #36]
 254:	mov	w1, w0
 258:	ldr	x0, [sp, #40]
 25c:	ldr	w0, [x0, #48]
 260:	mov	w0, w0
 264:	mul	x1, x1, x0
 268:	ldr	x0, [sp, #72]
 26c:	add	x0, x1, x0
 270:	sub	x0, x0, #0x1
 274:	str	x0, [sp, #56]
 278:	ldr	x0, [sp, #40]
 27c:	ldr	w0, [x0, #16]
 280:	and	w0, w0, #0x20000
 284:	cmp	w0, #0x0
 288:	b.eq	2c0 <ext2fs_allocate_block_bitmap+0x100>  // b.none
 28c:	ldr	x0, [sp, #40]
 290:	ldrh	w0, [x0, #196]
 294:	ldr	x7, [sp, #24]
 298:	ldr	x6, [sp, #32]
 29c:	ldr	x5, [sp, #56]
 2a0:	ldr	x4, [sp, #64]
 2a4:	ldr	x3, [sp, #72]
 2a8:	mov	w2, w0
 2ac:	mov	x1, #0xb76e                	// #46958
 2b0:	movk	x1, #0x7f2b, lsl #16
 2b4:	ldr	x0, [sp, #40]
 2b8:	bl	0 <ext2fs_alloc_generic_bmap>
 2bc:	b	328 <ext2fs_allocate_block_bitmap+0x168>
 2c0:	ldr	x1, [sp, #64]
 2c4:	mov	x0, #0xffffffff            	// #4294967295
 2c8:	cmp	x1, x0
 2cc:	b.hi	2e0 <ext2fs_allocate_block_bitmap+0x120>  // b.pmore
 2d0:	ldr	x1, [sp, #56]
 2d4:	mov	x0, #0xffffffff            	// #4294967295
 2d8:	cmp	x1, x0
 2dc:	b.ls	2ec <ext2fs_allocate_block_bitmap+0x12c>  // b.plast
 2e0:	mov	x0, #0xb789                	// #46985
 2e4:	movk	x0, #0x7f2b, lsl #16
 2e8:	b	328 <ext2fs_allocate_block_bitmap+0x168>
 2ec:	ldr	x0, [sp, #72]
 2f0:	mov	w1, w0
 2f4:	ldr	x0, [sp, #64]
 2f8:	mov	w2, w0
 2fc:	ldr	x0, [sp, #56]
 300:	ldr	x7, [sp, #24]
 304:	mov	x6, #0x0                   	// #0
 308:	ldr	x5, [sp, #32]
 30c:	mov	w4, w0
 310:	mov	w3, w2
 314:	mov	w2, w1
 318:	ldr	x1, [sp, #40]
 31c:	mov	x0, #0xb708                	// #46856
 320:	movk	x0, #0x7f2b, lsl #16
 324:	bl	0 <ext2fs_make_generic_bitmap>
 328:	ldp	x29, x30, [sp], #80
 32c:	ret

0000000000000330 <ext2fs_allocate_subcluster_bitmap>:
 330:	stp	x29, x30, [sp, #-96]!
 334:	mov	x29, sp
 338:	str	x0, [sp, #40]
 33c:	str	x1, [sp, #32]
 340:	str	x2, [sp, #24]
 344:	ldr	x0, [sp, #40]
 348:	ldr	x1, [x0]
 34c:	mov	x0, #0xb701                	// #46849
 350:	movk	x0, #0x7f2b, lsl #16
 354:	cmp	x1, x0
 358:	b.eq	368 <ext2fs_allocate_subcluster_bitmap+0x38>  // b.none
 35c:	mov	x0, #0xb701                	// #46849
 360:	movk	x0, #0x7f2b, lsl #16
 364:	b	484 <ext2fs_allocate_subcluster_bitmap+0x154>
 368:	ldr	x0, [sp, #40]
 36c:	adrp	x1, 0 <ext2fs_write_bitmaps>
 370:	add	x1, x1, #0x0
 374:	str	x1, [x0, #112]
 378:	ldr	x0, [sp, #40]
 37c:	ldr	w0, [x0, #192]
 380:	cmp	w0, #0x0
 384:	b.ne	39c <ext2fs_allocate_subcluster_bitmap+0x6c>  // b.any
 388:	ldr	x2, [sp, #24]
 38c:	ldr	x1, [sp, #32]
 390:	ldr	x0, [sp, #40]
 394:	bl	1c0 <ext2fs_allocate_block_bitmap>
 398:	b	484 <ext2fs_allocate_subcluster_bitmap+0x154>
 39c:	ldr	x0, [sp, #40]
 3a0:	ldr	w0, [x0, #16]
 3a4:	and	w0, w0, #0x20000
 3a8:	cmp	w0, #0x0
 3ac:	b.ne	3bc <ext2fs_allocate_subcluster_bitmap+0x8c>  // b.any
 3b0:	mov	x0, #0xb789                	// #46985
 3b4:	movk	x0, #0x7f2b, lsl #16
 3b8:	b	484 <ext2fs_allocate_subcluster_bitmap+0x154>
 3bc:	ldr	x0, [sp, #40]
 3c0:	ldr	x0, [x0, #32]
 3c4:	ldr	w0, [x0, #20]
 3c8:	mov	w0, w0
 3cc:	str	x0, [sp, #88]
 3d0:	ldr	x0, [sp, #40]
 3d4:	ldr	x0, [x0, #32]
 3d8:	bl	0 <ext2fs_blocks_count>
 3dc:	sub	x0, x0, #0x1
 3e0:	str	x0, [sp, #80]
 3e4:	ldr	x0, [sp, #40]
 3e8:	ldr	x0, [x0, #32]
 3ec:	ldr	w0, [x0, #32]
 3f0:	mov	w1, w0
 3f4:	ldr	x0, [sp, #40]
 3f8:	ldr	w0, [x0, #48]
 3fc:	mov	w0, w0
 400:	mul	x1, x1, x0
 404:	ldr	x0, [sp, #88]
 408:	add	x0, x1, x0
 40c:	sub	x0, x0, #0x1
 410:	str	x0, [sp, #72]
 414:	ldr	x0, [sp, #40]
 418:	ldrh	w0, [x0, #196]
 41c:	mov	w1, w0
 420:	add	x0, sp, #0x30
 424:	mov	x7, x0
 428:	ldr	x6, [sp, #32]
 42c:	ldr	x5, [sp, #72]
 430:	ldr	x4, [sp, #80]
 434:	ldr	x3, [sp, #88]
 438:	mov	w2, w1
 43c:	mov	x1, #0xb76e                	// #46958
 440:	movk	x1, #0x7f2b, lsl #16
 444:	ldr	x0, [sp, #40]
 448:	bl	0 <ext2fs_alloc_generic_bmap>
 44c:	str	x0, [sp, #64]
 450:	ldr	x0, [sp, #64]
 454:	cmp	x0, #0x0
 458:	b.eq	464 <ext2fs_allocate_subcluster_bitmap+0x134>  // b.none
 45c:	ldr	x0, [sp, #64]
 460:	b	484 <ext2fs_allocate_subcluster_bitmap+0x154>
 464:	ldr	x0, [sp, #48]
 468:	str	x0, [sp, #56]
 46c:	ldr	x0, [sp, #56]
 470:	str	wzr, [x0, #56]
 474:	ldr	x1, [sp, #48]
 478:	ldr	x0, [sp, #24]
 47c:	str	x1, [x0]
 480:	mov	x0, #0x0                   	// #0
 484:	ldp	x29, x30, [sp], #96
 488:	ret

000000000000048c <ext2fs_get_bitmap_granularity>:
 48c:	sub	sp, sp, #0x20
 490:	str	x0, [sp, #8]
 494:	ldr	x0, [sp, #8]
 498:	str	x0, [sp, #24]
 49c:	ldr	x0, [sp, #24]
 4a0:	ldr	x1, [x0]
 4a4:	mov	x0, #0xb76d                	// #46957
 4a8:	movk	x0, #0x7f2b, lsl #16
 4ac:	cmp	x1, x0
 4b0:	b.eq	4ec <ext2fs_get_bitmap_granularity+0x60>  // b.none
 4b4:	ldr	x0, [sp, #24]
 4b8:	ldr	x1, [x0]
 4bc:	mov	x0, #0xb76e                	// #46958
 4c0:	movk	x0, #0x7f2b, lsl #16
 4c4:	cmp	x1, x0
 4c8:	b.eq	4ec <ext2fs_get_bitmap_granularity+0x60>  // b.none
 4cc:	ldr	x0, [sp, #24]
 4d0:	ldr	x1, [x0]
 4d4:	mov	x0, #0xb76f                	// #46959
 4d8:	movk	x0, #0x7f2b, lsl #16
 4dc:	cmp	x1, x0
 4e0:	b.eq	4ec <ext2fs_get_bitmap_granularity+0x60>  // b.none
 4e4:	mov	w0, #0x0                   	// #0
 4e8:	b	4f4 <ext2fs_get_bitmap_granularity+0x68>
 4ec:	ldr	x0, [sp, #24]
 4f0:	ldr	w0, [x0, #56]
 4f4:	add	sp, sp, #0x20
 4f8:	ret

00000000000004fc <ext2fs_fudge_inode_bitmap_end>:
 4fc:	stp	x29, x30, [sp, #-64]!
 500:	mov	x29, sp
 504:	str	x0, [sp, #40]
 508:	str	w1, [sp, #36]
 50c:	str	x2, [sp, #24]
 510:	ldr	w0, [sp, #36]
 514:	add	x1, sp, #0x30
 518:	mov	x3, x1
 51c:	mov	x2, x0
 520:	mov	x1, #0xb734                	// #46900
 524:	movk	x1, #0x7f2b, lsl #16
 528:	ldr	x0, [sp, #40]
 52c:	bl	0 <ext2fs_fudge_generic_bmap_end>
 530:	str	w0, [sp, #60]
 534:	ldr	x0, [sp, #24]
 538:	cmp	x0, #0x0
 53c:	b.eq	550 <ext2fs_fudge_inode_bitmap_end+0x54>  // b.none
 540:	ldr	x0, [sp, #48]
 544:	mov	w1, w0
 548:	ldr	x0, [sp, #24]
 54c:	str	w1, [x0]
 550:	ldrsw	x0, [sp, #60]
 554:	ldp	x29, x30, [sp], #64
 558:	ret

000000000000055c <ext2fs_fudge_block_bitmap_end>:
 55c:	stp	x29, x30, [sp, #-48]!
 560:	mov	x29, sp
 564:	str	x0, [sp, #40]
 568:	str	w1, [sp, #36]
 56c:	str	x2, [sp, #24]
 570:	ldr	x4, [sp, #24]
 574:	ldr	w3, [sp, #36]
 578:	mov	x2, #0xb733                	// #46899
 57c:	movk	x2, #0x7f2b, lsl #16
 580:	mov	x1, #0xb708                	// #46856
 584:	movk	x1, #0x7f2b, lsl #16
 588:	ldr	x0, [sp, #40]
 58c:	bl	0 <ext2fs_fudge_generic_bitmap_end>
 590:	ldp	x29, x30, [sp], #48
 594:	ret

0000000000000598 <ext2fs_fudge_block_bitmap_end2>:
 598:	stp	x29, x30, [sp, #-48]!
 59c:	mov	x29, sp
 5a0:	str	x0, [sp, #40]
 5a4:	str	x1, [sp, #32]
 5a8:	str	x2, [sp, #24]
 5ac:	ldr	x3, [sp, #24]
 5b0:	ldr	x2, [sp, #32]
 5b4:	mov	x1, #0xb733                	// #46899
 5b8:	movk	x1, #0x7f2b, lsl #16
 5bc:	ldr	x0, [sp, #40]
 5c0:	bl	0 <ext2fs_fudge_generic_bmap_end>
 5c4:	ldp	x29, x30, [sp], #48
 5c8:	ret

00000000000005cc <ext2fs_clear_inode_bitmap>:
 5cc:	stp	x29, x30, [sp, #-32]!
 5d0:	mov	x29, sp
 5d4:	str	x0, [sp, #24]
 5d8:	ldr	x0, [sp, #24]
 5dc:	bl	0 <ext2fs_clear_generic_bmap>
 5e0:	nop
 5e4:	ldp	x29, x30, [sp], #32
 5e8:	ret

00000000000005ec <ext2fs_clear_block_bitmap>:
 5ec:	stp	x29, x30, [sp, #-32]!
 5f0:	mov	x29, sp
 5f4:	str	x0, [sp, #24]
 5f8:	ldr	x0, [sp, #24]
 5fc:	bl	0 <ext2fs_clear_generic_bmap>
 600:	nop
 604:	ldp	x29, x30, [sp], #32
 608:	ret

000000000000060c <ext2fs_resize_inode_bitmap>:
 60c:	stp	x29, x30, [sp, #-32]!
 610:	mov	x29, sp
 614:	str	w0, [sp, #28]
 618:	str	w1, [sp, #24]
 61c:	str	x2, [sp, #16]
 620:	ldr	x3, [sp, #16]
 624:	ldr	w2, [sp, #24]
 628:	ldr	w1, [sp, #28]
 62c:	mov	x0, #0xb709                	// #46857
 630:	movk	x0, #0x7f2b, lsl #16
 634:	bl	0 <ext2fs_resize_generic_bitmap>
 638:	ldp	x29, x30, [sp], #32
 63c:	ret

0000000000000640 <ext2fs_resize_inode_bitmap2>:
 640:	stp	x29, x30, [sp, #-48]!
 644:	mov	x29, sp
 648:	str	x0, [sp, #40]
 64c:	str	x1, [sp, #32]
 650:	str	x2, [sp, #24]
 654:	ldr	x2, [sp, #32]
 658:	ldr	x1, [sp, #40]
 65c:	ldr	x0, [sp, #24]
 660:	bl	0 <ext2fs_resize_generic_bmap>
 664:	ldp	x29, x30, [sp], #48
 668:	ret

000000000000066c <ext2fs_resize_block_bitmap>:
 66c:	stp	x29, x30, [sp, #-32]!
 670:	mov	x29, sp
 674:	str	w0, [sp, #28]
 678:	str	w1, [sp, #24]
 67c:	str	x2, [sp, #16]
 680:	ldr	x3, [sp, #16]
 684:	ldr	w2, [sp, #24]
 688:	ldr	w1, [sp, #28]
 68c:	mov	x0, #0xb708                	// #46856
 690:	movk	x0, #0x7f2b, lsl #16
 694:	bl	0 <ext2fs_resize_generic_bitmap>
 698:	ldp	x29, x30, [sp], #32
 69c:	ret

00000000000006a0 <ext2fs_resize_block_bitmap2>:
 6a0:	stp	x29, x30, [sp, #-48]!
 6a4:	mov	x29, sp
 6a8:	str	x0, [sp, #40]
 6ac:	str	x1, [sp, #32]
 6b0:	str	x2, [sp, #24]
 6b4:	ldr	x2, [sp, #32]
 6b8:	ldr	x1, [sp, #40]
 6bc:	ldr	x0, [sp, #24]
 6c0:	bl	0 <ext2fs_resize_generic_bmap>
 6c4:	ldp	x29, x30, [sp], #48
 6c8:	ret

00000000000006cc <ext2fs_compare_block_bitmap>:
 6cc:	stp	x29, x30, [sp, #-32]!
 6d0:	mov	x29, sp
 6d4:	str	x0, [sp, #24]
 6d8:	str	x1, [sp, #16]
 6dc:	ldr	x2, [sp, #16]
 6e0:	ldr	x1, [sp, #24]
 6e4:	mov	x0, #0xb738                	// #46904
 6e8:	movk	x0, #0x7f2b, lsl #16
 6ec:	bl	0 <ext2fs_compare_generic_bmap>
 6f0:	ldp	x29, x30, [sp], #32
 6f4:	ret

00000000000006f8 <ext2fs_compare_inode_bitmap>:
 6f8:	stp	x29, x30, [sp, #-32]!
 6fc:	mov	x29, sp
 700:	str	x0, [sp, #24]
 704:	str	x1, [sp, #16]
 708:	ldr	x2, [sp, #16]
 70c:	ldr	x1, [sp, #24]
 710:	mov	x0, #0xb739                	// #46905
 714:	movk	x0, #0x7f2b, lsl #16
 718:	bl	0 <ext2fs_compare_generic_bmap>
 71c:	ldp	x29, x30, [sp], #32
 720:	ret

0000000000000724 <ext2fs_set_inode_bitmap_range>:
 724:	stp	x29, x30, [sp, #-48]!
 728:	mov	x29, sp
 72c:	str	x0, [sp, #40]
 730:	str	w1, [sp, #36]
 734:	str	w2, [sp, #32]
 738:	str	x3, [sp, #24]
 73c:	ldr	x4, [sp, #24]
 740:	ldr	w3, [sp, #32]
 744:	ldr	w2, [sp, #36]
 748:	mov	x1, #0xb709                	// #46857
 74c:	movk	x1, #0x7f2b, lsl #16
 750:	ldr	x0, [sp, #40]
 754:	bl	0 <ext2fs_set_generic_bitmap_range>
 758:	ldp	x29, x30, [sp], #48
 75c:	ret

0000000000000760 <ext2fs_set_inode_bitmap_range2>:
 760:	stp	x29, x30, [sp, #-48]!
 764:	mov	x29, sp
 768:	str	x0, [sp, #40]
 76c:	str	x1, [sp, #32]
 770:	str	x2, [sp, #24]
 774:	str	x3, [sp, #16]
 778:	ldr	x0, [sp, #24]
 77c:	ldr	x3, [sp, #16]
 780:	mov	w2, w0
 784:	ldr	x1, [sp, #32]
 788:	ldr	x0, [sp, #40]
 78c:	bl	0 <ext2fs_set_generic_bmap_range>
 790:	ldp	x29, x30, [sp], #48
 794:	ret

0000000000000798 <ext2fs_get_inode_bitmap_range>:
 798:	stp	x29, x30, [sp, #-48]!
 79c:	mov	x29, sp
 7a0:	str	x0, [sp, #40]
 7a4:	str	w1, [sp, #36]
 7a8:	str	w2, [sp, #32]
 7ac:	str	x3, [sp, #24]
 7b0:	ldr	x4, [sp, #24]
 7b4:	ldr	w3, [sp, #32]
 7b8:	ldr	w2, [sp, #36]
 7bc:	mov	x1, #0xb709                	// #46857
 7c0:	movk	x1, #0x7f2b, lsl #16
 7c4:	ldr	x0, [sp, #40]
 7c8:	bl	0 <ext2fs_get_generic_bitmap_range>
 7cc:	ldp	x29, x30, [sp], #48
 7d0:	ret

00000000000007d4 <ext2fs_get_inode_bitmap_range2>:
 7d4:	stp	x29, x30, [sp, #-48]!
 7d8:	mov	x29, sp
 7dc:	str	x0, [sp, #40]
 7e0:	str	x1, [sp, #32]
 7e4:	str	x2, [sp, #24]
 7e8:	str	x3, [sp, #16]
 7ec:	ldr	x0, [sp, #24]
 7f0:	ldr	x3, [sp, #16]
 7f4:	mov	w2, w0
 7f8:	ldr	x1, [sp, #32]
 7fc:	ldr	x0, [sp, #40]
 800:	bl	0 <ext2fs_get_generic_bmap_range>
 804:	ldp	x29, x30, [sp], #48
 808:	ret

000000000000080c <ext2fs_set_block_bitmap_range>:
 80c:	stp	x29, x30, [sp, #-48]!
 810:	mov	x29, sp
 814:	str	x0, [sp, #40]
 818:	str	w1, [sp, #36]
 81c:	str	w2, [sp, #32]
 820:	str	x3, [sp, #24]
 824:	ldr	x4, [sp, #24]
 828:	ldr	w3, [sp, #32]
 82c:	ldr	w2, [sp, #36]
 830:	mov	x1, #0xb708                	// #46856
 834:	movk	x1, #0x7f2b, lsl #16
 838:	ldr	x0, [sp, #40]
 83c:	bl	0 <ext2fs_set_generic_bitmap_range>
 840:	ldp	x29, x30, [sp], #48
 844:	ret

0000000000000848 <ext2fs_set_block_bitmap_range2>:
 848:	stp	x29, x30, [sp, #-48]!
 84c:	mov	x29, sp
 850:	str	x0, [sp, #40]
 854:	str	x1, [sp, #32]
 858:	str	x2, [sp, #24]
 85c:	str	x3, [sp, #16]
 860:	ldr	x0, [sp, #24]
 864:	ldr	x3, [sp, #16]
 868:	mov	w2, w0
 86c:	ldr	x1, [sp, #32]
 870:	ldr	x0, [sp, #40]
 874:	bl	0 <ext2fs_set_generic_bmap_range>
 878:	ldp	x29, x30, [sp], #48
 87c:	ret

0000000000000880 <ext2fs_get_block_bitmap_range>:
 880:	stp	x29, x30, [sp, #-48]!
 884:	mov	x29, sp
 888:	str	x0, [sp, #40]
 88c:	str	w1, [sp, #36]
 890:	str	w2, [sp, #32]
 894:	str	x3, [sp, #24]
 898:	ldr	x4, [sp, #24]
 89c:	ldr	w3, [sp, #32]
 8a0:	ldr	w2, [sp, #36]
 8a4:	mov	x1, #0xb708                	// #46856
 8a8:	movk	x1, #0x7f2b, lsl #16
 8ac:	ldr	x0, [sp, #40]
 8b0:	bl	0 <ext2fs_get_generic_bitmap_range>
 8b4:	ldp	x29, x30, [sp], #48
 8b8:	ret

00000000000008bc <ext2fs_get_block_bitmap_range2>:
 8bc:	stp	x29, x30, [sp, #-48]!
 8c0:	mov	x29, sp
 8c4:	str	x0, [sp, #40]
 8c8:	str	x1, [sp, #32]
 8cc:	str	x2, [sp, #24]
 8d0:	str	x3, [sp, #16]
 8d4:	ldr	x0, [sp, #24]
 8d8:	ldr	x3, [sp, #16]
 8dc:	mov	w2, w0
 8e0:	ldr	x1, [sp, #32]
 8e4:	ldr	x0, [sp, #40]
 8e8:	bl	0 <ext2fs_get_generic_bmap_range>
 8ec:	ldp	x29, x30, [sp], #48
 8f0:	ret

bitops.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_set_bit>:
   0:	sub	sp, sp, #0x20
   4:	str	w0, [sp, #12]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	str	x0, [sp, #24]
  14:	ldr	w0, [sp, #12]
  18:	lsr	w0, w0, #3
  1c:	mov	w0, w0
  20:	ldr	x1, [sp, #24]
  24:	add	x0, x1, x0
  28:	str	x0, [sp, #24]
  2c:	ldr	w0, [sp, #12]
  30:	and	w0, w0, #0x7
  34:	mov	w1, #0x1                   	// #1
  38:	lsl	w0, w1, w0
  3c:	str	w0, [sp, #20]
  40:	ldr	x0, [sp, #24]
  44:	ldrb	w0, [x0]
  48:	mov	w1, w0
  4c:	ldr	w0, [sp, #20]
  50:	and	w0, w0, w1
  54:	str	w0, [sp, #16]
  58:	ldr	x0, [sp, #24]
  5c:	ldrb	w0, [x0]
  60:	sxtb	w1, w0
  64:	ldr	w0, [sp, #20]
  68:	sxtb	w0, w0
  6c:	orr	w0, w1, w0
  70:	sxtb	w0, w0
  74:	and	w1, w0, #0xff
  78:	ldr	x0, [sp, #24]
  7c:	strb	w1, [x0]
  80:	ldr	w0, [sp, #16]
  84:	add	sp, sp, #0x20
  88:	ret

000000000000008c <ext2fs_clear_bit>:
  8c:	sub	sp, sp, #0x20
  90:	str	w0, [sp, #12]
  94:	str	x1, [sp]
  98:	ldr	x0, [sp]
  9c:	str	x0, [sp, #24]
  a0:	ldr	w0, [sp, #12]
  a4:	lsr	w0, w0, #3
  a8:	mov	w0, w0
  ac:	ldr	x1, [sp, #24]
  b0:	add	x0, x1, x0
  b4:	str	x0, [sp, #24]
  b8:	ldr	w0, [sp, #12]
  bc:	and	w0, w0, #0x7
  c0:	mov	w1, #0x1                   	// #1
  c4:	lsl	w0, w1, w0
  c8:	str	w0, [sp, #20]
  cc:	ldr	x0, [sp, #24]
  d0:	ldrb	w0, [x0]
  d4:	mov	w1, w0
  d8:	ldr	w0, [sp, #20]
  dc:	and	w0, w0, w1
  e0:	str	w0, [sp, #16]
  e4:	ldr	x0, [sp, #24]
  e8:	ldrb	w0, [x0]
  ec:	sxtb	w1, w0
  f0:	ldr	w0, [sp, #20]
  f4:	sxtb	w0, w0
  f8:	mvn	w0, w0
  fc:	sxtb	w0, w0
 100:	and	w0, w1, w0
 104:	sxtb	w0, w0
 108:	and	w1, w0, #0xff
 10c:	ldr	x0, [sp, #24]
 110:	strb	w1, [x0]
 114:	ldr	w0, [sp, #16]
 118:	add	sp, sp, #0x20
 11c:	ret

0000000000000120 <ext2fs_test_bit>:
 120:	sub	sp, sp, #0x20
 124:	str	w0, [sp, #12]
 128:	str	x1, [sp]
 12c:	ldr	x0, [sp]
 130:	str	x0, [sp, #24]
 134:	ldr	w0, [sp, #12]
 138:	lsr	w0, w0, #3
 13c:	mov	w0, w0
 140:	ldr	x1, [sp, #24]
 144:	add	x0, x1, x0
 148:	str	x0, [sp, #24]
 14c:	ldr	w0, [sp, #12]
 150:	and	w0, w0, #0x7
 154:	mov	w1, #0x1                   	// #1
 158:	lsl	w0, w1, w0
 15c:	str	w0, [sp, #20]
 160:	ldr	x0, [sp, #24]
 164:	ldrb	w0, [x0]
 168:	mov	w1, w0
 16c:	ldr	w0, [sp, #20]
 170:	and	w0, w1, w0
 174:	add	sp, sp, #0x20
 178:	ret

000000000000017c <ext2fs_warn_bitmap>:
 17c:	stp	x29, x30, [sp, #-48]!
 180:	mov	x29, sp
 184:	str	x0, [sp, #40]
 188:	str	x1, [sp, #32]
 18c:	str	x2, [sp, #24]
 190:	ldr	x0, [sp, #24]
 194:	cmp	x0, #0x0
 198:	b.eq	1bc <ext2fs_warn_bitmap+0x40>  // b.none
 19c:	ldr	x4, [sp, #24]
 1a0:	ldr	x3, [sp, #32]
 1a4:	adrp	x0, 0 <ext2fs_set_bit>
 1a8:	add	x2, x0, #0x0
 1ac:	ldr	x1, [sp, #40]
 1b0:	mov	x0, #0x0                   	// #0
 1b4:	bl	0 <com_err>
 1b8:	b	1d4 <ext2fs_warn_bitmap+0x58>
 1bc:	ldr	x3, [sp, #32]
 1c0:	adrp	x0, 0 <ext2fs_set_bit>
 1c4:	add	x2, x0, #0x0
 1c8:	ldr	x1, [sp, #40]
 1cc:	mov	x0, #0x0                   	// #0
 1d0:	bl	0 <com_err>
 1d4:	nop
 1d8:	ldp	x29, x30, [sp], #48
 1dc:	ret

00000000000001e0 <ext2fs_set_bit64>:
 1e0:	sub	sp, sp, #0x20
 1e4:	str	x0, [sp, #8]
 1e8:	str	x1, [sp]
 1ec:	ldr	x0, [sp]
 1f0:	str	x0, [sp, #24]
 1f4:	ldr	x0, [sp, #8]
 1f8:	lsr	x0, x0, #3
 1fc:	ldr	x1, [sp, #24]
 200:	add	x0, x1, x0
 204:	str	x0, [sp, #24]
 208:	ldr	x0, [sp, #8]
 20c:	and	w0, w0, #0x7
 210:	mov	w1, #0x1                   	// #1
 214:	lsl	w0, w1, w0
 218:	str	w0, [sp, #20]
 21c:	ldr	x0, [sp, #24]
 220:	ldrb	w0, [x0]
 224:	mov	w1, w0
 228:	ldr	w0, [sp, #20]
 22c:	and	w0, w0, w1
 230:	str	w0, [sp, #16]
 234:	ldr	x0, [sp, #24]
 238:	ldrb	w0, [x0]
 23c:	sxtb	w1, w0
 240:	ldr	w0, [sp, #20]
 244:	sxtb	w0, w0
 248:	orr	w0, w1, w0
 24c:	sxtb	w0, w0
 250:	and	w1, w0, #0xff
 254:	ldr	x0, [sp, #24]
 258:	strb	w1, [x0]
 25c:	ldr	w0, [sp, #16]
 260:	add	sp, sp, #0x20
 264:	ret

0000000000000268 <ext2fs_clear_bit64>:
 268:	sub	sp, sp, #0x20
 26c:	str	x0, [sp, #8]
 270:	str	x1, [sp]
 274:	ldr	x0, [sp]
 278:	str	x0, [sp, #24]
 27c:	ldr	x0, [sp, #8]
 280:	lsr	x0, x0, #3
 284:	ldr	x1, [sp, #24]
 288:	add	x0, x1, x0
 28c:	str	x0, [sp, #24]
 290:	ldr	x0, [sp, #8]
 294:	and	w0, w0, #0x7
 298:	mov	w1, #0x1                   	// #1
 29c:	lsl	w0, w1, w0
 2a0:	str	w0, [sp, #20]
 2a4:	ldr	x0, [sp, #24]
 2a8:	ldrb	w0, [x0]
 2ac:	mov	w1, w0
 2b0:	ldr	w0, [sp, #20]
 2b4:	and	w0, w0, w1
 2b8:	str	w0, [sp, #16]
 2bc:	ldr	x0, [sp, #24]
 2c0:	ldrb	w0, [x0]
 2c4:	sxtb	w1, w0
 2c8:	ldr	w0, [sp, #20]
 2cc:	sxtb	w0, w0
 2d0:	mvn	w0, w0
 2d4:	sxtb	w0, w0
 2d8:	and	w0, w1, w0
 2dc:	sxtb	w0, w0
 2e0:	and	w1, w0, #0xff
 2e4:	ldr	x0, [sp, #24]
 2e8:	strb	w1, [x0]
 2ec:	ldr	w0, [sp, #16]
 2f0:	add	sp, sp, #0x20
 2f4:	ret

00000000000002f8 <ext2fs_test_bit64>:
 2f8:	sub	sp, sp, #0x20
 2fc:	str	x0, [sp, #8]
 300:	str	x1, [sp]
 304:	ldr	x0, [sp]
 308:	str	x0, [sp, #24]
 30c:	ldr	x0, [sp, #8]
 310:	lsr	x0, x0, #3
 314:	ldr	x1, [sp, #24]
 318:	add	x0, x1, x0
 31c:	str	x0, [sp, #24]
 320:	ldr	x0, [sp, #8]
 324:	and	w0, w0, #0x7
 328:	mov	w1, #0x1                   	// #1
 32c:	lsl	w0, w1, w0
 330:	str	w0, [sp, #20]
 334:	ldr	x0, [sp, #24]
 338:	ldrb	w0, [x0]
 33c:	mov	w1, w0
 340:	ldr	w0, [sp, #20]
 344:	and	w0, w1, w0
 348:	add	sp, sp, #0x20
 34c:	ret

0000000000000350 <popcount8>:
 350:	sub	sp, sp, #0x20
 354:	str	w0, [sp, #12]
 358:	ldr	w0, [sp, #12]
 35c:	lsr	w1, w0, #1
 360:	mov	w0, #0x55                  	// #85
 364:	and	w0, w1, w0
 368:	ldr	w1, [sp, #12]
 36c:	sub	w0, w1, w0
 370:	str	w0, [sp, #28]
 374:	ldr	w1, [sp, #28]
 378:	mov	w0, #0x33                  	// #51
 37c:	and	w1, w1, w0
 380:	ldr	w0, [sp, #28]
 384:	lsr	w2, w0, #2
 388:	mov	w0, #0x33                  	// #51
 38c:	and	w0, w2, w0
 390:	add	w0, w1, w0
 394:	str	w0, [sp, #28]
 398:	ldr	w0, [sp, #28]
 39c:	lsr	w1, w0, #4
 3a0:	ldr	w0, [sp, #28]
 3a4:	add	w0, w1, w0
 3a8:	and	w0, w0, #0xf
 3ac:	add	sp, sp, #0x20
 3b0:	ret

00000000000003b4 <popcount32>:
 3b4:	sub	sp, sp, #0x20
 3b8:	str	w0, [sp, #12]
 3bc:	ldr	w0, [sp, #12]
 3c0:	lsr	w0, w0, #1
 3c4:	and	w0, w0, #0x55555555
 3c8:	ldr	w1, [sp, #12]
 3cc:	sub	w0, w1, w0
 3d0:	str	w0, [sp, #28]
 3d4:	ldr	w0, [sp, #28]
 3d8:	and	w1, w0, #0x33333333
 3dc:	ldr	w0, [sp, #28]
 3e0:	lsr	w0, w0, #2
 3e4:	and	w0, w0, #0x33333333
 3e8:	add	w0, w1, w0
 3ec:	str	w0, [sp, #28]
 3f0:	ldr	w0, [sp, #28]
 3f4:	lsr	w1, w0, #4
 3f8:	ldr	w0, [sp, #28]
 3fc:	add	w0, w1, w0
 400:	and	w0, w0, #0xf0f0f0f
 404:	str	w0, [sp, #28]
 408:	ldr	w0, [sp, #28]
 40c:	lsr	w0, w0, #8
 410:	ldr	w1, [sp, #28]
 414:	add	w0, w1, w0
 418:	str	w0, [sp, #28]
 41c:	ldr	w0, [sp, #28]
 420:	lsr	w1, w0, #16
 424:	ldr	w0, [sp, #28]
 428:	add	w0, w1, w0
 42c:	and	w0, w0, #0xff
 430:	add	sp, sp, #0x20
 434:	ret

0000000000000438 <ext2fs_bitcount>:
 438:	stp	x29, x30, [sp, #-64]!
 43c:	mov	x29, sp
 440:	str	x0, [sp, #24]
 444:	str	w1, [sp, #20]
 448:	ldr	x0, [sp, #24]
 44c:	str	x0, [sp, #56]
 450:	str	wzr, [sp, #44]
 454:	b	488 <ext2fs_bitcount+0x50>
 458:	ldr	x0, [sp, #56]
 45c:	add	x1, x0, #0x1
 460:	str	x1, [sp, #56]
 464:	ldrb	w0, [x0]
 468:	bl	350 <popcount8>
 46c:	mov	w1, w0
 470:	ldr	w0, [sp, #44]
 474:	add	w0, w0, w1
 478:	str	w0, [sp, #44]
 47c:	ldr	w0, [sp, #20]
 480:	sub	w0, w0, #0x1
 484:	str	w0, [sp, #20]
 488:	ldr	x0, [sp, #56]
 48c:	and	x0, x0, #0x3
 490:	cmp	x0, #0x0
 494:	b.eq	4a4 <ext2fs_bitcount+0x6c>  // b.none
 498:	ldr	w0, [sp, #20]
 49c:	cmp	w0, #0x0
 4a0:	b.ne	458 <ext2fs_bitcount+0x20>  // b.any
 4a4:	ldr	x0, [sp, #56]
 4a8:	str	x0, [sp, #48]
 4ac:	b	4e0 <ext2fs_bitcount+0xa8>
 4b0:	ldr	x0, [sp, #48]
 4b4:	add	x1, x0, #0x4
 4b8:	str	x1, [sp, #48]
 4bc:	ldr	w0, [x0]
 4c0:	bl	3b4 <popcount32>
 4c4:	mov	w1, w0
 4c8:	ldr	w0, [sp, #44]
 4cc:	add	w0, w0, w1
 4d0:	str	w0, [sp, #44]
 4d4:	ldr	w0, [sp, #20]
 4d8:	sub	w0, w0, #0x4
 4dc:	str	w0, [sp, #20]
 4e0:	ldr	w0, [sp, #20]
 4e4:	cmp	w0, #0x4
 4e8:	b.hi	4b0 <ext2fs_bitcount+0x78>  // b.pmore
 4ec:	ldr	x0, [sp, #48]
 4f0:	str	x0, [sp, #56]
 4f4:	b	528 <ext2fs_bitcount+0xf0>
 4f8:	ldr	x0, [sp, #56]
 4fc:	add	x1, x0, #0x1
 500:	str	x1, [sp, #56]
 504:	ldrb	w0, [x0]
 508:	bl	350 <popcount8>
 50c:	mov	w1, w0
 510:	ldr	w0, [sp, #44]
 514:	add	w0, w0, w1
 518:	str	w0, [sp, #44]
 51c:	ldr	w0, [sp, #20]
 520:	sub	w0, w0, #0x1
 524:	str	w0, [sp, #20]
 528:	ldr	w0, [sp, #20]
 52c:	cmp	w0, #0x0
 530:	b.ne	4f8 <ext2fs_bitcount+0xc0>  // b.any
 534:	ldr	w0, [sp, #44]
 538:	ldp	x29, x30, [sp], #64
 53c:	ret

blkmap64_ba.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ba_alloc_private_data>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	add	x0, sp, #0x28
  10:	mov	x1, x0
  14:	mov	x0, #0x8                   	// #8
  18:	bl	0 <ext2fs_get_mem>
  1c:	str	x0, [sp, #56]
  20:	ldr	x0, [sp, #56]
  24:	cmp	x0, #0x0
  28:	b.eq	34 <ba_alloc_private_data+0x34>  // b.none
  2c:	ldr	x0, [sp, #56]
  30:	b	98 <ba_alloc_private_data+0x98>
  34:	ldr	x0, [sp, #24]
  38:	ldr	x1, [x0, #48]
  3c:	ldr	x0, [sp, #24]
  40:	ldr	x0, [x0, #32]
  44:	sub	x0, x1, x0
  48:	lsr	x0, x0, #3
  4c:	add	x0, x0, #0x1
  50:	str	x0, [sp, #48]
  54:	ldr	x0, [sp, #40]
  58:	mov	x1, x0
  5c:	ldr	x0, [sp, #48]
  60:	bl	0 <ext2fs_get_mem>
  64:	str	x0, [sp, #56]
  68:	ldr	x0, [sp, #56]
  6c:	cmp	x0, #0x0
  70:	b.eq	88 <ba_alloc_private_data+0x88>  // b.none
  74:	add	x0, sp, #0x28
  78:	bl	0 <ext2fs_free_mem>
  7c:	str	xzr, [sp, #40]
  80:	ldr	x0, [sp, #56]
  84:	b	98 <ba_alloc_private_data+0x98>
  88:	ldr	x1, [sp, #40]
  8c:	ldr	x0, [sp, #24]
  90:	str	x1, [x0, #72]
  94:	mov	x0, #0x0                   	// #0
  98:	ldp	x29, x30, [sp], #64
  9c:	ret

00000000000000a0 <ba_new_bmap>:
  a0:	stp	x29, x30, [sp, #-64]!
  a4:	mov	x29, sp
  a8:	str	x0, [sp, #24]
  ac:	str	x1, [sp, #16]
  b0:	ldr	x0, [sp, #16]
  b4:	bl	0 <ba_alloc_private_data>
  b8:	str	x0, [sp, #56]
  bc:	ldr	x0, [sp, #56]
  c0:	cmp	x0, #0x0
  c4:	b.eq	d0 <ba_new_bmap+0x30>  // b.none
  c8:	ldr	x0, [sp, #56]
  cc:	b	114 <ba_new_bmap+0x74>
  d0:	ldr	x0, [sp, #16]
  d4:	ldr	x0, [x0, #72]
  d8:	str	x0, [sp, #48]
  dc:	ldr	x0, [sp, #16]
  e0:	ldr	x1, [x0, #48]
  e4:	ldr	x0, [sp, #16]
  e8:	ldr	x0, [x0, #32]
  ec:	sub	x0, x1, x0
  f0:	lsr	x0, x0, #3
  f4:	add	x0, x0, #0x1
  f8:	str	x0, [sp, #40]
  fc:	ldr	x0, [sp, #48]
 100:	ldr	x0, [x0]
 104:	ldr	x2, [sp, #40]
 108:	mov	w1, #0x0                   	// #0
 10c:	bl	0 <memset>
 110:	mov	x0, #0x0                   	// #0
 114:	ldp	x29, x30, [sp], #64
 118:	ret

000000000000011c <ba_free_bmap>:
 11c:	stp	x29, x30, [sp, #-48]!
 120:	mov	x29, sp
 124:	str	x0, [sp, #24]
 128:	ldr	x0, [sp, #24]
 12c:	ldr	x0, [x0, #72]
 130:	str	x0, [sp, #40]
 134:	ldr	x0, [sp, #40]
 138:	cmp	x0, #0x0
 13c:	b.eq	170 <ba_free_bmap+0x54>  // b.none
 140:	ldr	x0, [sp, #40]
 144:	ldr	x0, [x0]
 148:	cmp	x0, #0x0
 14c:	b.eq	160 <ba_free_bmap+0x44>  // b.none
 150:	ldr	x0, [sp, #40]
 154:	bl	0 <ext2fs_free_mem>
 158:	ldr	x0, [sp, #40]
 15c:	str	xzr, [x0]
 160:	add	x0, sp, #0x28
 164:	bl	0 <ext2fs_free_mem>
 168:	str	xzr, [sp, #40]
 16c:	b	174 <ba_free_bmap+0x58>
 170:	nop
 174:	ldp	x29, x30, [sp], #48
 178:	ret

000000000000017c <ba_copy_bmap>:
 17c:	stp	x29, x30, [sp, #-64]!
 180:	mov	x29, sp
 184:	str	x0, [sp, #24]
 188:	str	x1, [sp, #16]
 18c:	ldr	x0, [sp, #24]
 190:	ldr	x0, [x0, #72]
 194:	str	x0, [sp, #56]
 198:	ldr	x0, [sp, #16]
 19c:	bl	0 <ba_alloc_private_data>
 1a0:	str	x0, [sp, #48]
 1a4:	ldr	x0, [sp, #48]
 1a8:	cmp	x0, #0x0
 1ac:	b.eq	1b8 <ba_copy_bmap+0x3c>  // b.none
 1b0:	ldr	x0, [sp, #48]
 1b4:	b	208 <ba_copy_bmap+0x8c>
 1b8:	ldr	x0, [sp, #16]
 1bc:	ldr	x0, [x0, #72]
 1c0:	str	x0, [sp, #40]
 1c4:	ldr	x0, [sp, #24]
 1c8:	ldr	x1, [x0, #48]
 1cc:	ldr	x0, [sp, #24]
 1d0:	ldr	x0, [x0, #32]
 1d4:	sub	x0, x1, x0
 1d8:	lsr	x0, x0, #3
 1dc:	add	x0, x0, #0x1
 1e0:	str	x0, [sp, #32]
 1e4:	ldr	x0, [sp, #40]
 1e8:	ldr	x3, [x0]
 1ec:	ldr	x0, [sp, #56]
 1f0:	ldr	x0, [x0]
 1f4:	ldr	x2, [sp, #32]
 1f8:	mov	x1, x0
 1fc:	mov	x0, x3
 200:	bl	0 <memcpy>
 204:	mov	x0, #0x0                   	// #0
 208:	ldp	x29, x30, [sp], #64
 20c:	ret

0000000000000210 <ba_resize_bmap>:
 210:	stp	x29, x30, [sp, #-96]!
 214:	mov	x29, sp
 218:	str	x0, [sp, #40]
 21c:	str	x1, [sp, #32]
 220:	str	x2, [sp, #24]
 224:	ldr	x0, [sp, #40]
 228:	ldr	x0, [x0, #72]
 22c:	str	x0, [sp, #80]
 230:	ldr	x0, [sp, #40]
 234:	ldr	x0, [x0, #40]
 238:	ldr	x1, [sp, #32]
 23c:	cmp	x1, x0
 240:	b.ls	2b0 <ba_resize_bmap+0xa0>  // b.plast
 244:	ldr	x0, [sp, #40]
 248:	ldr	x0, [x0, #48]
 24c:	str	x0, [sp, #88]
 250:	ldr	x1, [sp, #88]
 254:	ldr	x0, [sp, #32]
 258:	cmp	x1, x0
 25c:	b.ls	29c <ba_resize_bmap+0x8c>  // b.plast
 260:	ldr	x0, [sp, #32]
 264:	str	x0, [sp, #88]
 268:	b	29c <ba_resize_bmap+0x8c>
 26c:	ldr	x0, [sp, #40]
 270:	ldr	x0, [x0, #32]
 274:	ldr	x1, [sp, #88]
 278:	sub	x2, x1, x0
 27c:	ldr	x0, [sp, #80]
 280:	ldr	x0, [x0]
 284:	mov	x1, x0
 288:	mov	x0, x2
 28c:	bl	0 <ext2fs_clear_bit64>
 290:	ldr	x0, [sp, #88]
 294:	sub	x0, x0, #0x1
 298:	str	x0, [sp, #88]
 29c:	ldr	x0, [sp, #40]
 2a0:	ldr	x0, [x0, #40]
 2a4:	ldr	x1, [sp, #88]
 2a8:	cmp	x1, x0
 2ac:	b.hi	26c <ba_resize_bmap+0x5c>  // b.pmore
 2b0:	ldr	x0, [sp, #40]
 2b4:	ldr	x0, [x0, #48]
 2b8:	ldr	x1, [sp, #24]
 2bc:	cmp	x1, x0
 2c0:	b.ne	2d8 <ba_resize_bmap+0xc8>  // b.any
 2c4:	ldr	x0, [sp, #40]
 2c8:	ldr	x1, [sp, #32]
 2cc:	str	x1, [x0, #40]
 2d0:	mov	x0, #0x0                   	// #0
 2d4:	b	3a8 <ba_resize_bmap+0x198>
 2d8:	ldr	x0, [sp, #40]
 2dc:	ldr	x1, [x0, #48]
 2e0:	ldr	x0, [sp, #40]
 2e4:	ldr	x0, [x0, #32]
 2e8:	sub	x0, x1, x0
 2ec:	lsr	x0, x0, #3
 2f0:	add	x0, x0, #0x1
 2f4:	str	x0, [sp, #72]
 2f8:	ldr	x0, [sp, #40]
 2fc:	ldr	x0, [x0, #32]
 300:	ldr	x1, [sp, #24]
 304:	sub	x0, x1, x0
 308:	lsr	x0, x0, #3
 30c:	add	x0, x0, #0x1
 310:	str	x0, [sp, #64]
 314:	ldr	x1, [sp, #72]
 318:	ldr	x0, [sp, #64]
 31c:	cmp	x1, x0
 320:	b.eq	350 <ba_resize_bmap+0x140>  // b.none
 324:	ldr	x0, [sp, #80]
 328:	mov	x2, x0
 32c:	ldr	x1, [sp, #64]
 330:	ldr	x0, [sp, #72]
 334:	bl	0 <ext2fs_resize_mem>
 338:	str	x0, [sp, #56]
 33c:	ldr	x0, [sp, #56]
 340:	cmp	x0, #0x0
 344:	b.eq	350 <ba_resize_bmap+0x140>  // b.none
 348:	ldr	x0, [sp, #56]
 34c:	b	3a8 <ba_resize_bmap+0x198>
 350:	ldr	x1, [sp, #64]
 354:	ldr	x0, [sp, #72]
 358:	cmp	x1, x0
 35c:	b.ls	38c <ba_resize_bmap+0x17c>  // b.plast
 360:	ldr	x0, [sp, #80]
 364:	ldr	x1, [x0]
 368:	ldr	x0, [sp, #72]
 36c:	add	x3, x1, x0
 370:	ldr	x1, [sp, #64]
 374:	ldr	x0, [sp, #72]
 378:	sub	x0, x1, x0
 37c:	mov	x2, x0
 380:	mov	w1, #0x0                   	// #0
 384:	mov	x0, x3
 388:	bl	0 <memset>
 38c:	ldr	x0, [sp, #40]
 390:	ldr	x1, [sp, #32]
 394:	str	x1, [x0, #40]
 398:	ldr	x0, [sp, #40]
 39c:	ldr	x1, [sp, #24]
 3a0:	str	x1, [x0, #48]
 3a4:	mov	x0, #0x0                   	// #0
 3a8:	ldp	x29, x30, [sp], #96
 3ac:	ret

00000000000003b0 <ba_mark_bmap>:
 3b0:	stp	x29, x30, [sp, #-48]!
 3b4:	mov	x29, sp
 3b8:	str	x0, [sp, #24]
 3bc:	str	x1, [sp, #16]
 3c0:	ldr	x0, [sp, #24]
 3c4:	ldr	x0, [x0, #72]
 3c8:	str	x0, [sp, #40]
 3cc:	ldr	x0, [sp, #16]
 3d0:	str	x0, [sp, #32]
 3d4:	ldr	x0, [sp, #24]
 3d8:	ldr	x0, [x0, #32]
 3dc:	ldr	x1, [sp, #32]
 3e0:	sub	x2, x1, x0
 3e4:	ldr	x0, [sp, #40]
 3e8:	ldr	x0, [x0]
 3ec:	mov	x1, x0
 3f0:	mov	x0, x2
 3f4:	bl	0 <ext2fs_set_bit64>
 3f8:	ldp	x29, x30, [sp], #48
 3fc:	ret

0000000000000400 <ba_unmark_bmap>:
 400:	stp	x29, x30, [sp, #-48]!
 404:	mov	x29, sp
 408:	str	x0, [sp, #24]
 40c:	str	x1, [sp, #16]
 410:	ldr	x0, [sp, #24]
 414:	ldr	x0, [x0, #72]
 418:	str	x0, [sp, #40]
 41c:	ldr	x0, [sp, #16]
 420:	str	x0, [sp, #32]
 424:	ldr	x0, [sp, #24]
 428:	ldr	x0, [x0, #32]
 42c:	ldr	x1, [sp, #32]
 430:	sub	x2, x1, x0
 434:	ldr	x0, [sp, #40]
 438:	ldr	x0, [x0]
 43c:	mov	x1, x0
 440:	mov	x0, x2
 444:	bl	0 <ext2fs_clear_bit64>
 448:	ldp	x29, x30, [sp], #48
 44c:	ret

0000000000000450 <ba_test_bmap>:
 450:	stp	x29, x30, [sp, #-48]!
 454:	mov	x29, sp
 458:	str	x0, [sp, #24]
 45c:	str	x1, [sp, #16]
 460:	ldr	x0, [sp, #24]
 464:	ldr	x0, [x0, #72]
 468:	str	x0, [sp, #40]
 46c:	ldr	x0, [sp, #16]
 470:	str	x0, [sp, #32]
 474:	ldr	x0, [sp, #24]
 478:	ldr	x0, [x0, #32]
 47c:	ldr	x1, [sp, #32]
 480:	sub	x2, x1, x0
 484:	ldr	x0, [sp, #40]
 488:	ldr	x0, [x0]
 48c:	mov	x1, x0
 490:	mov	x0, x2
 494:	bl	0 <ext2fs_test_bit64>
 498:	ldp	x29, x30, [sp], #48
 49c:	ret

00000000000004a0 <ba_mark_bmap_extent>:
 4a0:	stp	x29, x30, [sp, #-80]!
 4a4:	mov	x29, sp
 4a8:	str	x0, [sp, #40]
 4ac:	str	x1, [sp, #32]
 4b0:	str	w2, [sp, #28]
 4b4:	ldr	x0, [sp, #40]
 4b8:	ldr	x0, [x0, #72]
 4bc:	str	x0, [sp, #64]
 4c0:	ldr	x0, [sp, #32]
 4c4:	str	x0, [sp, #56]
 4c8:	str	wzr, [sp, #76]
 4cc:	b	508 <ba_mark_bmap_extent+0x68>
 4d0:	ldr	w1, [sp, #76]
 4d4:	ldr	x0, [sp, #56]
 4d8:	add	x1, x1, x0
 4dc:	ldr	x0, [sp, #40]
 4e0:	ldr	x0, [x0, #32]
 4e4:	sub	x2, x1, x0
 4e8:	ldr	x0, [sp, #64]
 4ec:	ldr	x0, [x0]
 4f0:	mov	x1, x0
 4f4:	mov	x0, x2
 4f8:	bl	0 <ext2fs_fast_set_bit64>
 4fc:	ldr	w0, [sp, #76]
 500:	add	w0, w0, #0x1
 504:	str	w0, [sp, #76]
 508:	ldr	w1, [sp, #76]
 50c:	ldr	w0, [sp, #28]
 510:	cmp	w1, w0
 514:	b.cc	4d0 <ba_mark_bmap_extent+0x30>  // b.lo, b.ul, b.last
 518:	nop
 51c:	nop
 520:	ldp	x29, x30, [sp], #80
 524:	ret

0000000000000528 <ba_unmark_bmap_extent>:
 528:	stp	x29, x30, [sp, #-80]!
 52c:	mov	x29, sp
 530:	str	x0, [sp, #40]
 534:	str	x1, [sp, #32]
 538:	str	w2, [sp, #28]
 53c:	ldr	x0, [sp, #40]
 540:	ldr	x0, [x0, #72]
 544:	str	x0, [sp, #64]
 548:	ldr	x0, [sp, #32]
 54c:	str	x0, [sp, #56]
 550:	str	wzr, [sp, #76]
 554:	b	590 <ba_unmark_bmap_extent+0x68>
 558:	ldr	w1, [sp, #76]
 55c:	ldr	x0, [sp, #56]
 560:	add	x1, x1, x0
 564:	ldr	x0, [sp, #40]
 568:	ldr	x0, [x0, #32]
 56c:	sub	x2, x1, x0
 570:	ldr	x0, [sp, #64]
 574:	ldr	x0, [x0]
 578:	mov	x1, x0
 57c:	mov	x0, x2
 580:	bl	0 <ext2fs_fast_clear_bit64>
 584:	ldr	w0, [sp, #76]
 588:	add	w0, w0, #0x1
 58c:	str	w0, [sp, #76]
 590:	ldr	w1, [sp, #76]
 594:	ldr	w0, [sp, #28]
 598:	cmp	w1, w0
 59c:	b.cc	558 <ba_unmark_bmap_extent+0x30>  // b.lo, b.ul, b.last
 5a0:	nop
 5a4:	nop
 5a8:	ldp	x29, x30, [sp], #80
 5ac:	ret

00000000000005b0 <ba_test_clear_bmap_extent>:
 5b0:	stp	x29, x30, [sp, #-112]!
 5b4:	mov	x29, sp
 5b8:	str	x0, [sp, #40]
 5bc:	str	x1, [sp, #32]
 5c0:	str	w2, [sp, #28]
 5c4:	ldr	x0, [sp, #40]
 5c8:	ldr	x0, [x0, #72]
 5cc:	str	x0, [sp, #64]
 5d0:	ldr	w0, [sp, #28]
 5d4:	lsr	w0, w0, #3
 5d8:	mov	w0, w0
 5dc:	str	x0, [sp, #96]
 5e0:	ldr	w0, [sp, #28]
 5e4:	and	w0, w0, #0x7
 5e8:	str	w0, [sp, #92]
 5ec:	str	wzr, [sp, #88]
 5f0:	str	wzr, [sp, #84]
 5f4:	str	wzr, [sp, #80]
 5f8:	str	wzr, [sp, #76]
 5fc:	ldr	x0, [sp, #64]
 600:	ldr	x0, [x0]
 604:	str	x0, [sp, #56]
 608:	ldr	x0, [sp, #40]
 60c:	ldr	x0, [x0, #32]
 610:	ldr	x1, [sp, #32]
 614:	sub	x0, x1, x0
 618:	str	x0, [sp, #32]
 61c:	ldr	x0, [sp, #32]
 620:	lsr	x0, x0, #3
 624:	str	x0, [sp, #104]
 628:	ldr	x0, [sp, #32]
 62c:	and	w0, w0, #0x7
 630:	str	w0, [sp, #52]
 634:	ldr	w0, [sp, #52]
 638:	cmp	w0, #0x0
 63c:	b.eq	760 <ba_test_clear_bmap_extent+0x1b0>  // b.none
 640:	mov	w1, #0x8                   	// #8
 644:	ldr	w0, [sp, #52]
 648:	sub	w0, w1, w0
 64c:	str	w0, [sp, #80]
 650:	mov	w1, #0x8                   	// #8
 654:	ldr	w0, [sp, #52]
 658:	sub	w0, w1, w0
 65c:	ldr	w1, [sp, #28]
 660:	cmp	w1, w0
 664:	b.cs	688 <ba_test_clear_bmap_extent+0xd8>  // b.hs, b.nlast
 668:	ldr	w0, [sp, #28]
 66c:	str	w0, [sp, #80]
 670:	ldr	w1, [sp, #28]
 674:	ldr	w0, [sp, #52]
 678:	add	w0, w1, w0
 67c:	sub	w0, w0, #0x1
 680:	str	w0, [sp, #76]
 684:	b	690 <ba_test_clear_bmap_extent+0xe0>
 688:	mov	w0, #0x7                   	// #7
 68c:	str	w0, [sp, #76]
 690:	ldr	w0, [sp, #80]
 694:	str	w0, [sp, #72]
 698:	b	6d0 <ba_test_clear_bmap_extent+0x120>
 69c:	ldr	w0, [sp, #76]
 6a0:	mov	w1, #0x1                   	// #1
 6a4:	lsl	w0, w1, w0
 6a8:	mov	w1, w0
 6ac:	ldr	w0, [sp, #88]
 6b0:	orr	w0, w0, w1
 6b4:	str	w0, [sp, #88]
 6b8:	ldr	w0, [sp, #72]
 6bc:	sub	w0, w0, #0x1
 6c0:	str	w0, [sp, #72]
 6c4:	ldr	w0, [sp, #76]
 6c8:	sub	w0, w0, #0x1
 6cc:	str	w0, [sp, #76]
 6d0:	ldr	w0, [sp, #72]
 6d4:	cmp	w0, #0x0
 6d8:	b.gt	69c <ba_test_clear_bmap_extent+0xec>
 6dc:	ldr	x1, [sp, #56]
 6e0:	ldr	x0, [sp, #104]
 6e4:	add	x0, x1, x0
 6e8:	ldrb	w0, [x0]
 6ec:	mov	w1, w0
 6f0:	ldr	w0, [sp, #88]
 6f4:	and	w0, w1, w0
 6f8:	cmp	w0, #0x0
 6fc:	b.eq	708 <ba_test_clear_bmap_extent+0x158>  // b.none
 700:	mov	w0, #0x0                   	// #0
 704:	b	80c <ba_test_clear_bmap_extent+0x25c>
 708:	mov	w1, #0x8                   	// #8
 70c:	ldr	w0, [sp, #52]
 710:	sub	w0, w1, w0
 714:	ldr	w1, [sp, #28]
 718:	cmp	w1, w0
 71c:	b.hi	728 <ba_test_clear_bmap_extent+0x178>  // b.pmore
 720:	mov	w0, #0x1                   	// #1
 724:	b	80c <ba_test_clear_bmap_extent+0x25c>
 728:	ldr	x0, [sp, #104]
 72c:	add	x0, x0, #0x1
 730:	str	x0, [sp, #104]
 734:	ldr	w0, [sp, #80]
 738:	ldr	w1, [sp, #28]
 73c:	sub	w0, w1, w0
 740:	and	w0, w0, #0x7
 744:	str	w0, [sp, #92]
 748:	ldr	w0, [sp, #80]
 74c:	ldr	w1, [sp, #28]
 750:	sub	w0, w1, w0
 754:	lsr	w0, w0, #3
 758:	mov	w0, w0
 75c:	str	x0, [sp, #96]
 760:	ldr	w0, [sp, #92]
 764:	cmp	w0, #0x0
 768:	b.eq	7f8 <ba_test_clear_bmap_extent+0x248>  // b.none
 76c:	ldr	w0, [sp, #92]
 770:	sub	w0, w0, #0x1
 774:	str	w0, [sp, #76]
 778:	b	7a4 <ba_test_clear_bmap_extent+0x1f4>
 77c:	ldr	w0, [sp, #76]
 780:	mov	w1, #0x1                   	// #1
 784:	lsl	w0, w1, w0
 788:	mov	w1, w0
 78c:	ldr	w0, [sp, #84]
 790:	orr	w0, w0, w1
 794:	str	w0, [sp, #84]
 798:	ldr	w0, [sp, #76]
 79c:	sub	w0, w0, #0x1
 7a0:	str	w0, [sp, #76]
 7a4:	ldr	w0, [sp, #76]
 7a8:	cmp	w0, #0x0
 7ac:	b.ge	77c <ba_test_clear_bmap_extent+0x1cc>  // b.tcont
 7b0:	ldr	x1, [sp, #104]
 7b4:	ldr	x0, [sp, #96]
 7b8:	add	x0, x1, x0
 7bc:	ldr	x1, [sp, #56]
 7c0:	add	x0, x1, x0
 7c4:	ldrb	w0, [x0]
 7c8:	mov	w1, w0
 7cc:	ldr	w0, [sp, #84]
 7d0:	and	w0, w1, w0
 7d4:	cmp	w0, #0x0
 7d8:	b.eq	7e4 <ba_test_clear_bmap_extent+0x234>  // b.none
 7dc:	mov	w0, #0x0                   	// #0
 7e0:	b	80c <ba_test_clear_bmap_extent+0x25c>
 7e4:	ldr	x0, [sp, #96]
 7e8:	cmp	x0, #0x0
 7ec:	b.ne	7f8 <ba_test_clear_bmap_extent+0x248>  // b.any
 7f0:	mov	w0, #0x1                   	// #1
 7f4:	b	80c <ba_test_clear_bmap_extent+0x25c>
 7f8:	ldr	x1, [sp, #56]
 7fc:	ldr	x0, [sp, #104]
 800:	add	x0, x1, x0
 804:	ldr	x1, [sp, #96]
 808:	bl	0 <ext2fs_mem_is_zero>
 80c:	ldp	x29, x30, [sp], #112
 810:	ret

0000000000000814 <ba_set_bmap_range>:
 814:	stp	x29, x30, [sp, #-64]!
 818:	mov	x29, sp
 81c:	str	x0, [sp, #40]
 820:	str	x1, [sp, #32]
 824:	str	x2, [sp, #24]
 828:	str	x3, [sp, #16]
 82c:	ldr	x0, [sp, #40]
 830:	ldr	x0, [x0, #72]
 834:	str	x0, [sp, #56]
 838:	ldr	x0, [sp, #56]
 83c:	ldr	x1, [x0]
 840:	ldr	x0, [sp, #32]
 844:	lsr	x0, x0, #3
 848:	add	x3, x1, x0
 84c:	ldr	x0, [sp, #24]
 850:	add	x0, x0, #0x7
 854:	lsr	x0, x0, #3
 858:	mov	x2, x0
 85c:	ldr	x1, [sp, #16]
 860:	mov	x0, x3
 864:	bl	0 <memcpy>
 868:	mov	x0, #0x0                   	// #0
 86c:	ldp	x29, x30, [sp], #64
 870:	ret

0000000000000874 <ba_get_bmap_range>:
 874:	stp	x29, x30, [sp, #-64]!
 878:	mov	x29, sp
 87c:	str	x0, [sp, #40]
 880:	str	x1, [sp, #32]
 884:	str	x2, [sp, #24]
 888:	str	x3, [sp, #16]
 88c:	ldr	x0, [sp, #40]
 890:	ldr	x0, [x0, #72]
 894:	str	x0, [sp, #56]
 898:	ldr	x0, [sp, #56]
 89c:	ldr	x1, [x0]
 8a0:	ldr	x0, [sp, #32]
 8a4:	lsr	x0, x0, #3
 8a8:	add	x1, x1, x0
 8ac:	ldr	x0, [sp, #24]
 8b0:	add	x0, x0, #0x7
 8b4:	lsr	x0, x0, #3
 8b8:	mov	x2, x0
 8bc:	ldr	x0, [sp, #16]
 8c0:	bl	0 <memcpy>
 8c4:	mov	x0, #0x0                   	// #0
 8c8:	ldp	x29, x30, [sp], #64
 8cc:	ret

00000000000008d0 <ba_clear_bmap>:
 8d0:	stp	x29, x30, [sp, #-48]!
 8d4:	mov	x29, sp
 8d8:	str	x0, [sp, #24]
 8dc:	ldr	x0, [sp, #24]
 8e0:	ldr	x0, [x0, #72]
 8e4:	str	x0, [sp, #40]
 8e8:	ldr	x0, [sp, #40]
 8ec:	ldr	x3, [x0]
 8f0:	ldr	x0, [sp, #24]
 8f4:	ldr	x1, [x0, #48]
 8f8:	ldr	x0, [sp, #24]
 8fc:	ldr	x0, [x0, #32]
 900:	sub	x0, x1, x0
 904:	lsr	x0, x0, #3
 908:	add	x0, x0, #0x1
 90c:	mov	x2, x0
 910:	mov	w1, #0x0                   	// #0
 914:	mov	x0, x3
 918:	bl	0 <memset>
 91c:	nop
 920:	ldp	x29, x30, [sp], #48
 924:	ret

0000000000000928 <ba_print_stats>:
 928:	stp	x29, x30, [sp, #-32]!
 92c:	mov	x29, sp
 930:	str	x0, [sp, #24]
 934:	adrp	x0, 0 <stderr>
 938:	add	x0, x0, #0x0
 93c:	ldr	x3, [x0]
 940:	ldr	x0, [sp, #24]
 944:	ldr	x1, [x0, #48]
 948:	ldr	x0, [sp, #24]
 94c:	ldr	x0, [x0, #32]
 950:	sub	x0, x1, x0
 954:	lsr	x0, x0, #3
 958:	add	x0, x0, #0x9
 95c:	mov	x2, x0
 960:	adrp	x0, 0 <ba_alloc_private_data>
 964:	add	x1, x0, #0x0
 968:	mov	x0, x3
 96c:	bl	0 <fprintf>
 970:	nop
 974:	ldp	x29, x30, [sp], #32
 978:	ret

000000000000097c <ba_find_first_zero>:
 97c:	stp	x29, x30, [sp, #-112]!
 980:	mov	x29, sp
 984:	str	x0, [sp, #40]
 988:	str	x1, [sp, #32]
 98c:	str	x2, [sp, #24]
 990:	str	x3, [sp, #16]
 994:	ldr	x0, [sp, #40]
 998:	ldr	x0, [x0, #72]
 99c:	str	x0, [sp, #64]
 9a0:	ldr	x0, [sp, #40]
 9a4:	ldr	x0, [x0, #32]
 9a8:	ldr	x1, [sp, #32]
 9ac:	sub	x0, x1, x0
 9b0:	str	x0, [sp, #104]
 9b4:	ldr	x1, [sp, #24]
 9b8:	ldr	x0, [sp, #32]
 9bc:	sub	x0, x1, x0
 9c0:	add	x0, x0, #0x1
 9c4:	str	x0, [sp, #96]
 9c8:	str	wzr, [sp, #92]
 9cc:	b	a24 <ba_find_first_zero+0xa8>
 9d0:	ldr	x0, [sp, #64]
 9d4:	ldr	x0, [x0]
 9d8:	mov	x1, x0
 9dc:	ldr	x0, [sp, #104]
 9e0:	bl	0 <ext2fs_test_bit64>
 9e4:	cmp	w0, #0x0
 9e8:	b.ne	a0c <ba_find_first_zero+0x90>  // b.any
 9ec:	ldr	x0, [sp, #40]
 9f0:	ldr	x1, [x0, #32]
 9f4:	ldr	x0, [sp, #104]
 9f8:	add	x1, x1, x0
 9fc:	ldr	x0, [sp, #16]
 a00:	str	x1, [x0]
 a04:	mov	x0, #0x0                   	// #0
 a08:	b	c58 <ba_find_first_zero+0x2dc>
 a0c:	ldr	x0, [sp, #104]
 a10:	add	x0, x0, #0x1
 a14:	str	x0, [sp, #104]
 a18:	ldr	x0, [sp, #96]
 a1c:	sub	x0, x0, #0x1
 a20:	str	x0, [sp, #96]
 a24:	ldr	x0, [sp, #104]
 a28:	and	x0, x0, #0x7
 a2c:	cmp	x0, #0x0
 a30:	b.eq	a40 <ba_find_first_zero+0xc4>  // b.none
 a34:	ldr	x0, [sp, #96]
 a38:	cmp	x0, #0x0
 a3c:	b.ne	9d0 <ba_find_first_zero+0x54>  // b.any
 a40:	ldr	x0, [sp, #96]
 a44:	cmp	x0, #0x0
 a48:	b.ne	a54 <ba_find_first_zero+0xd8>  // b.any
 a4c:	mov	x0, #0x2                   	// #2
 a50:	b	c58 <ba_find_first_zero+0x2dc>
 a54:	ldr	x0, [sp, #64]
 a58:	ldr	x1, [x0]
 a5c:	ldr	x0, [sp, #104]
 a60:	lsr	x0, x0, #3
 a64:	add	x0, x1, x0
 a68:	str	x0, [sp, #80]
 a6c:	b	ab0 <ba_find_first_zero+0x134>
 a70:	ldr	x0, [sp, #80]
 a74:	ldrb	w0, [x0]
 a78:	cmp	w0, #0xff
 a7c:	b.eq	a8c <ba_find_first_zero+0x110>  // b.none
 a80:	mov	w0, #0x1                   	// #1
 a84:	str	w0, [sp, #92]
 a88:	b	acc <ba_find_first_zero+0x150>
 a8c:	ldr	x0, [sp, #80]
 a90:	add	x0, x0, #0x1
 a94:	str	x0, [sp, #80]
 a98:	ldr	x0, [sp, #96]
 a9c:	sub	x0, x0, #0x8
 aa0:	str	x0, [sp, #96]
 aa4:	ldr	x0, [sp, #104]
 aa8:	add	x0, x0, #0x8
 aac:	str	x0, [sp, #104]
 ab0:	ldr	x0, [sp, #96]
 ab4:	cmp	x0, #0x7
 ab8:	b.ls	acc <ba_find_first_zero+0x150>  // b.plast
 abc:	ldr	x0, [sp, #80]
 ac0:	and	x0, x0, #0x7
 ac4:	cmp	x0, #0x0
 ac8:	b.ne	a70 <ba_find_first_zero+0xf4>  // b.any
 acc:	ldr	w0, [sp, #92]
 ad0:	cmp	w0, #0x0
 ad4:	b.ne	c40 <ba_find_first_zero+0x2c4>  // b.any
 ad8:	ldr	x0, [sp, #96]
 adc:	lsr	x0, x0, #6
 ae0:	str	x0, [sp, #56]
 ae4:	ldr	x0, [sp, #56]
 ae8:	str	x0, [sp, #72]
 aec:	b	b18 <ba_find_first_zero+0x19c>
 af0:	ldr	x0, [sp, #80]
 af4:	ldr	x0, [x0]
 af8:	cmn	x0, #0x1
 afc:	b.ne	b28 <ba_find_first_zero+0x1ac>  // b.any
 b00:	ldr	x0, [sp, #80]
 b04:	add	x0, x0, #0x8
 b08:	str	x0, [sp, #80]
 b0c:	ldr	x0, [sp, #72]
 b10:	sub	x0, x0, #0x1
 b14:	str	x0, [sp, #72]
 b18:	ldr	x0, [sp, #72]
 b1c:	cmp	x0, #0x0
 b20:	b.ne	af0 <ba_find_first_zero+0x174>  // b.any
 b24:	b	b2c <ba_find_first_zero+0x1b0>
 b28:	nop
 b2c:	ldr	x1, [sp, #56]
 b30:	ldr	x0, [sp, #72]
 b34:	sub	x0, x1, x0
 b38:	lsl	x0, x0, #6
 b3c:	ldr	x1, [sp, #96]
 b40:	sub	x0, x1, x0
 b44:	str	x0, [sp, #96]
 b48:	ldr	x1, [sp, #56]
 b4c:	ldr	x0, [sp, #72]
 b50:	sub	x0, x1, x0
 b54:	lsl	x0, x0, #6
 b58:	ldr	x1, [sp, #104]
 b5c:	add	x0, x1, x0
 b60:	str	x0, [sp, #104]
 b64:	ldr	x0, [sp, #96]
 b68:	lsr	x0, x0, #3
 b6c:	str	x0, [sp, #56]
 b70:	ldr	x0, [sp, #56]
 b74:	str	x0, [sp, #72]
 b78:	b	bb0 <ba_find_first_zero+0x234>
 b7c:	ldr	x0, [sp, #80]
 b80:	ldrb	w0, [x0]
 b84:	cmp	w0, #0xff
 b88:	b.eq	b98 <ba_find_first_zero+0x21c>  // b.none
 b8c:	mov	w0, #0x1                   	// #1
 b90:	str	w0, [sp, #92]
 b94:	b	bbc <ba_find_first_zero+0x240>
 b98:	ldr	x0, [sp, #80]
 b9c:	add	x0, x0, #0x1
 ba0:	str	x0, [sp, #80]
 ba4:	ldr	x0, [sp, #72]
 ba8:	sub	x0, x0, #0x1
 bac:	str	x0, [sp, #72]
 bb0:	ldr	x0, [sp, #72]
 bb4:	cmp	x0, #0x0
 bb8:	b.ne	b7c <ba_find_first_zero+0x200>  // b.any
 bbc:	ldr	x1, [sp, #56]
 bc0:	ldr	x0, [sp, #72]
 bc4:	sub	x0, x1, x0
 bc8:	lsl	x0, x0, #3
 bcc:	ldr	x1, [sp, #96]
 bd0:	sub	x0, x1, x0
 bd4:	str	x0, [sp, #96]
 bd8:	ldr	x1, [sp, #56]
 bdc:	ldr	x0, [sp, #72]
 be0:	sub	x0, x1, x0
 be4:	lsl	x0, x0, #3
 be8:	ldr	x1, [sp, #104]
 bec:	add	x0, x1, x0
 bf0:	str	x0, [sp, #104]
 bf4:	b	c40 <ba_find_first_zero+0x2c4>
 bf8:	ldr	x0, [sp, #64]
 bfc:	ldr	x0, [x0]
 c00:	mov	x1, x0
 c04:	ldr	x0, [sp, #104]
 c08:	bl	0 <ext2fs_test_bit64>
 c0c:	cmp	w0, #0x0
 c10:	b.ne	c34 <ba_find_first_zero+0x2b8>  // b.any
 c14:	ldr	x0, [sp, #40]
 c18:	ldr	x1, [x0, #32]
 c1c:	ldr	x0, [sp, #104]
 c20:	add	x1, x1, x0
 c24:	ldr	x0, [sp, #16]
 c28:	str	x1, [x0]
 c2c:	mov	x0, #0x0                   	// #0
 c30:	b	c58 <ba_find_first_zero+0x2dc>
 c34:	ldr	x0, [sp, #104]
 c38:	add	x0, x0, #0x1
 c3c:	str	x0, [sp, #104]
 c40:	ldr	x0, [sp, #96]
 c44:	sub	x1, x0, #0x1
 c48:	str	x1, [sp, #96]
 c4c:	cmp	x0, #0x0
 c50:	b.ne	bf8 <ba_find_first_zero+0x27c>  // b.any
 c54:	mov	x0, #0x2                   	// #2
 c58:	ldp	x29, x30, [sp], #112
 c5c:	ret

0000000000000c60 <ba_find_first_set>:
 c60:	stp	x29, x30, [sp, #-112]!
 c64:	mov	x29, sp
 c68:	str	x0, [sp, #40]
 c6c:	str	x1, [sp, #32]
 c70:	str	x2, [sp, #24]
 c74:	str	x3, [sp, #16]
 c78:	ldr	x0, [sp, #40]
 c7c:	ldr	x0, [x0, #72]
 c80:	str	x0, [sp, #64]
 c84:	ldr	x0, [sp, #40]
 c88:	ldr	x0, [x0, #32]
 c8c:	ldr	x1, [sp, #32]
 c90:	sub	x0, x1, x0
 c94:	str	x0, [sp, #104]
 c98:	ldr	x1, [sp, #24]
 c9c:	ldr	x0, [sp, #32]
 ca0:	sub	x0, x1, x0
 ca4:	add	x0, x0, #0x1
 ca8:	str	x0, [sp, #96]
 cac:	str	wzr, [sp, #92]
 cb0:	b	d08 <ba_find_first_set+0xa8>
 cb4:	ldr	x0, [sp, #64]
 cb8:	ldr	x0, [x0]
 cbc:	mov	x1, x0
 cc0:	ldr	x0, [sp, #104]
 cc4:	bl	0 <ext2fs_test_bit64>
 cc8:	cmp	w0, #0x0
 ccc:	b.eq	cf0 <ba_find_first_set+0x90>  // b.none
 cd0:	ldr	x0, [sp, #40]
 cd4:	ldr	x1, [x0, #32]
 cd8:	ldr	x0, [sp, #104]
 cdc:	add	x1, x1, x0
 ce0:	ldr	x0, [sp, #16]
 ce4:	str	x1, [x0]
 ce8:	mov	x0, #0x0                   	// #0
 cec:	b	f3c <ba_find_first_set+0x2dc>
 cf0:	ldr	x0, [sp, #104]
 cf4:	add	x0, x0, #0x1
 cf8:	str	x0, [sp, #104]
 cfc:	ldr	x0, [sp, #96]
 d00:	sub	x0, x0, #0x1
 d04:	str	x0, [sp, #96]
 d08:	ldr	x0, [sp, #104]
 d0c:	and	x0, x0, #0x7
 d10:	cmp	x0, #0x0
 d14:	b.eq	d24 <ba_find_first_set+0xc4>  // b.none
 d18:	ldr	x0, [sp, #96]
 d1c:	cmp	x0, #0x0
 d20:	b.ne	cb4 <ba_find_first_set+0x54>  // b.any
 d24:	ldr	x0, [sp, #96]
 d28:	cmp	x0, #0x0
 d2c:	b.ne	d38 <ba_find_first_set+0xd8>  // b.any
 d30:	mov	x0, #0x2                   	// #2
 d34:	b	f3c <ba_find_first_set+0x2dc>
 d38:	ldr	x0, [sp, #64]
 d3c:	ldr	x1, [x0]
 d40:	ldr	x0, [sp, #104]
 d44:	lsr	x0, x0, #3
 d48:	add	x0, x1, x0
 d4c:	str	x0, [sp, #80]
 d50:	b	d94 <ba_find_first_set+0x134>
 d54:	ldr	x0, [sp, #80]
 d58:	ldrb	w0, [x0]
 d5c:	cmp	w0, #0x0
 d60:	b.eq	d70 <ba_find_first_set+0x110>  // b.none
 d64:	mov	w0, #0x1                   	// #1
 d68:	str	w0, [sp, #92]
 d6c:	b	db0 <ba_find_first_set+0x150>
 d70:	ldr	x0, [sp, #80]
 d74:	add	x0, x0, #0x1
 d78:	str	x0, [sp, #80]
 d7c:	ldr	x0, [sp, #96]
 d80:	sub	x0, x0, #0x8
 d84:	str	x0, [sp, #96]
 d88:	ldr	x0, [sp, #104]
 d8c:	add	x0, x0, #0x8
 d90:	str	x0, [sp, #104]
 d94:	ldr	x0, [sp, #96]
 d98:	cmp	x0, #0x7
 d9c:	b.ls	db0 <ba_find_first_set+0x150>  // b.plast
 da0:	ldr	x0, [sp, #80]
 da4:	and	x0, x0, #0x7
 da8:	cmp	x0, #0x0
 dac:	b.ne	d54 <ba_find_first_set+0xf4>  // b.any
 db0:	ldr	w0, [sp, #92]
 db4:	cmp	w0, #0x0
 db8:	b.ne	f24 <ba_find_first_set+0x2c4>  // b.any
 dbc:	ldr	x0, [sp, #96]
 dc0:	lsr	x0, x0, #6
 dc4:	str	x0, [sp, #56]
 dc8:	ldr	x0, [sp, #56]
 dcc:	str	x0, [sp, #72]
 dd0:	b	dfc <ba_find_first_set+0x19c>
 dd4:	ldr	x0, [sp, #80]
 dd8:	ldr	x0, [x0]
 ddc:	cmp	x0, #0x0
 de0:	b.ne	e0c <ba_find_first_set+0x1ac>  // b.any
 de4:	ldr	x0, [sp, #80]
 de8:	add	x0, x0, #0x8
 dec:	str	x0, [sp, #80]
 df0:	ldr	x0, [sp, #72]
 df4:	sub	x0, x0, #0x1
 df8:	str	x0, [sp, #72]
 dfc:	ldr	x0, [sp, #72]
 e00:	cmp	x0, #0x0
 e04:	b.ne	dd4 <ba_find_first_set+0x174>  // b.any
 e08:	b	e10 <ba_find_first_set+0x1b0>
 e0c:	nop
 e10:	ldr	x1, [sp, #56]
 e14:	ldr	x0, [sp, #72]
 e18:	sub	x0, x1, x0
 e1c:	lsl	x0, x0, #6
 e20:	ldr	x1, [sp, #96]
 e24:	sub	x0, x1, x0
 e28:	str	x0, [sp, #96]
 e2c:	ldr	x1, [sp, #56]
 e30:	ldr	x0, [sp, #72]
 e34:	sub	x0, x1, x0
 e38:	lsl	x0, x0, #6
 e3c:	ldr	x1, [sp, #104]
 e40:	add	x0, x1, x0
 e44:	str	x0, [sp, #104]
 e48:	ldr	x0, [sp, #96]
 e4c:	lsr	x0, x0, #3
 e50:	str	x0, [sp, #56]
 e54:	ldr	x0, [sp, #56]
 e58:	str	x0, [sp, #72]
 e5c:	b	e94 <ba_find_first_set+0x234>
 e60:	ldr	x0, [sp, #80]
 e64:	ldrb	w0, [x0]
 e68:	cmp	w0, #0x0
 e6c:	b.eq	e7c <ba_find_first_set+0x21c>  // b.none
 e70:	mov	w0, #0x1                   	// #1
 e74:	str	w0, [sp, #92]
 e78:	b	ea0 <ba_find_first_set+0x240>
 e7c:	ldr	x0, [sp, #80]
 e80:	add	x0, x0, #0x1
 e84:	str	x0, [sp, #80]
 e88:	ldr	x0, [sp, #72]
 e8c:	sub	x0, x0, #0x1
 e90:	str	x0, [sp, #72]
 e94:	ldr	x0, [sp, #72]
 e98:	cmp	x0, #0x0
 e9c:	b.ne	e60 <ba_find_first_set+0x200>  // b.any
 ea0:	ldr	x1, [sp, #56]
 ea4:	ldr	x0, [sp, #72]
 ea8:	sub	x0, x1, x0
 eac:	lsl	x0, x0, #3
 eb0:	ldr	x1, [sp, #96]
 eb4:	sub	x0, x1, x0
 eb8:	str	x0, [sp, #96]
 ebc:	ldr	x1, [sp, #56]
 ec0:	ldr	x0, [sp, #72]
 ec4:	sub	x0, x1, x0
 ec8:	lsl	x0, x0, #3
 ecc:	ldr	x1, [sp, #104]
 ed0:	add	x0, x1, x0
 ed4:	str	x0, [sp, #104]
 ed8:	b	f24 <ba_find_first_set+0x2c4>
 edc:	ldr	x0, [sp, #64]
 ee0:	ldr	x0, [x0]
 ee4:	mov	x1, x0
 ee8:	ldr	x0, [sp, #104]
 eec:	bl	0 <ext2fs_test_bit64>
 ef0:	cmp	w0, #0x0
 ef4:	b.eq	f18 <ba_find_first_set+0x2b8>  // b.none
 ef8:	ldr	x0, [sp, #40]
 efc:	ldr	x1, [x0, #32]
 f00:	ldr	x0, [sp, #104]
 f04:	add	x1, x1, x0
 f08:	ldr	x0, [sp, #16]
 f0c:	str	x1, [x0]
 f10:	mov	x0, #0x0                   	// #0
 f14:	b	f3c <ba_find_first_set+0x2dc>
 f18:	ldr	x0, [sp, #104]
 f1c:	add	x0, x0, #0x1
 f20:	str	x0, [sp, #104]
 f24:	ldr	x0, [sp, #96]
 f28:	sub	x1, x0, #0x1
 f2c:	str	x1, [sp, #96]
 f30:	cmp	x0, #0x0
 f34:	b.ne	edc <ba_find_first_set+0x27c>  // b.any
 f38:	mov	x0, #0x2                   	// #2
 f3c:	ldp	x29, x30, [sp], #112
 f40:	ret

blkmap64_rb.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_rb_empty_root>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	x0, [x0]
      10:	cmp	x0, #0x0
      14:	cset	w0, eq  // eq = none
      18:	and	w0, w0, #0xff
      1c:	add	sp, sp, #0x10
      20:	ret

0000000000000024 <ext2fs_rb_link_node>:
      24:	sub	sp, sp, #0x20
      28:	str	x0, [sp, #24]
      2c:	str	x1, [sp, #16]
      30:	str	x2, [sp, #8]
      34:	ldr	x1, [sp, #16]
      38:	ldr	x0, [sp, #24]
      3c:	str	x1, [x0]
      40:	ldr	x0, [sp, #24]
      44:	str	xzr, [x0, #8]
      48:	ldr	x0, [sp, #24]
      4c:	ldr	x1, [x0, #8]
      50:	ldr	x0, [sp, #24]
      54:	str	x1, [x0, #16]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	x1, [sp, #24]
      60:	str	x1, [x0]
      64:	nop
      68:	add	sp, sp, #0x20
      6c:	ret

0000000000000070 <node_to_extent>:
      70:	sub	sp, sp, #0x10
      74:	str	x0, [sp, #8]
      78:	ldr	x0, [sp, #8]
      7c:	add	sp, sp, #0x10
      80:	ret

0000000000000084 <rb_get_new_extent>:
      84:	stp	x29, x30, [sp, #-64]!
      88:	mov	x29, sp
      8c:	str	x0, [sp, #40]
      90:	str	x1, [sp, #32]
      94:	str	x2, [sp, #24]
      98:	add	x0, sp, #0x30
      9c:	mov	x1, x0
      a0:	mov	x0, #0x28                  	// #40
      a4:	bl	0 <ext2fs_get_mem>
      a8:	str	w0, [sp, #60]
      ac:	ldr	w0, [sp, #60]
      b0:	cmp	w0, #0x0
      b4:	b.eq	bc <rb_get_new_extent+0x38>  // b.none
      b8:	bl	0 <abort>
      bc:	ldr	x0, [sp, #48]
      c0:	ldr	x1, [sp, #32]
      c4:	str	x1, [x0, #24]
      c8:	ldr	x0, [sp, #48]
      cc:	ldr	x1, [sp, #24]
      d0:	str	x1, [x0, #32]
      d4:	ldr	x1, [sp, #48]
      d8:	ldr	x0, [sp, #40]
      dc:	str	x1, [x0]
      e0:	nop
      e4:	ldp	x29, x30, [sp], #64
      e8:	ret

00000000000000ec <rb_free_extent>:
      ec:	stp	x29, x30, [sp, #-32]!
      f0:	mov	x29, sp
      f4:	str	x0, [sp, #24]
      f8:	str	x1, [sp, #16]
      fc:	ldr	x0, [sp, #24]
     100:	ldr	x1, [x0, #8]
     104:	ldr	x0, [sp, #16]
     108:	cmp	x1, x0
     10c:	b.ne	118 <rb_free_extent+0x2c>  // b.any
     110:	ldr	x0, [sp, #24]
     114:	str	xzr, [x0, #8]
     118:	ldr	x0, [sp, #24]
     11c:	ldr	x1, [x0, #16]
     120:	ldr	x0, [sp, #16]
     124:	cmp	x1, x0
     128:	b.ne	134 <rb_free_extent+0x48>  // b.any
     12c:	ldr	x0, [sp, #24]
     130:	str	xzr, [x0, #16]
     134:	ldr	x0, [sp, #24]
     138:	ldr	x1, [x0, #24]
     13c:	ldr	x0, [sp, #16]
     140:	cmp	x1, x0
     144:	b.ne	150 <rb_free_extent+0x64>  // b.any
     148:	ldr	x0, [sp, #24]
     14c:	str	xzr, [x0, #24]
     150:	add	x0, sp, #0x10
     154:	bl	0 <ext2fs_free_mem>
     158:	nop
     15c:	ldp	x29, x30, [sp], #32
     160:	ret

0000000000000164 <rb_alloc_private_data>:
     164:	stp	x29, x30, [sp, #-48]!
     168:	mov	x29, sp
     16c:	str	x0, [sp, #24]
     170:	add	x0, sp, #0x20
     174:	mov	x1, x0
     178:	mov	x0, #0x20                  	// #32
     17c:	bl	0 <ext2fs_get_mem>
     180:	str	x0, [sp, #40]
     184:	ldr	x0, [sp, #40]
     188:	cmp	x0, #0x0
     18c:	b.eq	198 <rb_alloc_private_data+0x34>  // b.none
     190:	ldr	x0, [sp, #40]
     194:	b	1c8 <rb_alloc_private_data+0x64>
     198:	ldr	x0, [sp, #32]
     19c:	str	xzr, [x0]
     1a0:	ldr	x0, [sp, #32]
     1a4:	str	xzr, [x0, #16]
     1a8:	ldr	x0, [sp, #32]
     1ac:	str	xzr, [x0, #24]
     1b0:	ldr	x0, [sp, #32]
     1b4:	str	xzr, [x0, #8]
     1b8:	ldr	x1, [sp, #32]
     1bc:	ldr	x0, [sp, #24]
     1c0:	str	x1, [x0, #72]
     1c4:	mov	x0, #0x0                   	// #0
     1c8:	ldp	x29, x30, [sp], #48
     1cc:	ret

00000000000001d0 <rb_new_bmap>:
     1d0:	stp	x29, x30, [sp, #-48]!
     1d4:	mov	x29, sp
     1d8:	str	x0, [sp, #24]
     1dc:	str	x1, [sp, #16]
     1e0:	ldr	x0, [sp, #16]
     1e4:	bl	164 <rb_alloc_private_data>
     1e8:	str	x0, [sp, #40]
     1ec:	ldr	x0, [sp, #40]
     1f0:	cmp	x0, #0x0
     1f4:	b.eq	200 <rb_new_bmap+0x30>  // b.none
     1f8:	ldr	x0, [sp, #40]
     1fc:	b	204 <rb_new_bmap+0x34>
     200:	mov	x0, #0x0                   	// #0
     204:	ldp	x29, x30, [sp], #48
     208:	ret

000000000000020c <rb_free_tree>:
     20c:	stp	x29, x30, [sp, #-64]!
     210:	mov	x29, sp
     214:	str	x0, [sp, #24]
     218:	ldr	x0, [sp, #24]
     21c:	bl	0 <ext2fs_rb_first>
     220:	str	x0, [sp, #56]
     224:	b	25c <rb_free_tree+0x50>
     228:	ldr	x0, [sp, #56]
     22c:	bl	0 <ext2fs_rb_next>
     230:	str	x0, [sp, #48]
     234:	ldr	x0, [sp, #56]
     238:	bl	70 <node_to_extent>
     23c:	str	x0, [sp, #40]
     240:	ldr	x1, [sp, #24]
     244:	ldr	x0, [sp, #56]
     248:	bl	0 <ext2fs_rb_erase>
     24c:	add	x0, sp, #0x28
     250:	bl	0 <ext2fs_free_mem>
     254:	ldr	x0, [sp, #48]
     258:	str	x0, [sp, #56]
     25c:	ldr	x0, [sp, #56]
     260:	cmp	x0, #0x0
     264:	b.ne	228 <rb_free_tree+0x1c>  // b.any
     268:	nop
     26c:	nop
     270:	ldp	x29, x30, [sp], #64
     274:	ret

0000000000000278 <rb_free_bmap>:
     278:	stp	x29, x30, [sp, #-48]!
     27c:	mov	x29, sp
     280:	str	x0, [sp, #24]
     284:	ldr	x0, [sp, #24]
     288:	ldr	x0, [x0, #72]
     28c:	str	x0, [sp, #40]
     290:	ldr	x0, [sp, #40]
     294:	bl	20c <rb_free_tree>
     298:	add	x0, sp, #0x28
     29c:	bl	0 <ext2fs_free_mem>
     2a0:	str	xzr, [sp, #40]
     2a4:	nop
     2a8:	ldp	x29, x30, [sp], #48
     2ac:	ret

00000000000002b0 <rb_copy_bmap>:
     2b0:	stp	x29, x30, [sp, #-112]!
     2b4:	mov	x29, sp
     2b8:	str	x0, [sp, #24]
     2bc:	str	x1, [sp, #16]
     2c0:	str	xzr, [sp, #80]
     2c4:	ldr	x0, [sp, #16]
     2c8:	bl	164 <rb_alloc_private_data>
     2cc:	str	x0, [sp, #80]
     2d0:	ldr	x0, [sp, #80]
     2d4:	cmp	x0, #0x0
     2d8:	b.eq	2e4 <rb_copy_bmap+0x34>  // b.none
     2dc:	ldr	x0, [sp, #80]
     2e0:	b	3d8 <rb_copy_bmap+0x128>
     2e4:	ldr	x0, [sp, #24]
     2e8:	ldr	x0, [x0, #72]
     2ec:	str	x0, [sp, #72]
     2f0:	ldr	x0, [sp, #16]
     2f4:	ldr	x0, [x0, #72]
     2f8:	str	x0, [sp, #64]
     2fc:	ldr	x0, [sp, #72]
     300:	str	xzr, [x0, #16]
     304:	ldr	x0, [sp, #64]
     308:	str	xzr, [x0, #16]
     30c:	ldr	x0, [sp, #72]
     310:	bl	0 <ext2fs_rb_first>
     314:	str	x0, [sp, #104]
     318:	b	3c0 <rb_copy_bmap+0x110>
     31c:	ldr	x0, [sp, #104]
     320:	bl	70 <node_to_extent>
     324:	str	x0, [sp, #56]
     328:	add	x0, sp, #0x28
     32c:	mov	x1, x0
     330:	mov	x0, #0x28                  	// #40
     334:	bl	0 <ext2fs_get_mem>
     338:	str	x0, [sp, #80]
     33c:	ldr	x0, [sp, #80]
     340:	cmp	x0, #0x0
     344:	b.ne	3d0 <rb_copy_bmap+0x120>  // b.any
     348:	ldr	x0, [sp, #40]
     34c:	mov	x2, #0x28                  	// #40
     350:	ldr	x1, [sp, #56]
     354:	bl	0 <memcpy>
     358:	ldr	x0, [sp, #40]
     35c:	str	x0, [sp, #48]
     360:	ldr	x0, [sp, #64]
     364:	str	x0, [sp, #88]
     368:	str	xzr, [sp, #96]
     36c:	ldr	x0, [sp, #88]
     370:	ldr	x0, [x0]
     374:	cmp	x0, #0x0
     378:	b.eq	394 <rb_copy_bmap+0xe4>  // b.none
     37c:	ldr	x0, [sp, #64]
     380:	bl	0 <ext2fs_rb_last>
     384:	str	x0, [sp, #96]
     388:	ldr	x0, [sp, #96]
     38c:	add	x0, x0, #0x8
     390:	str	x0, [sp, #88]
     394:	ldr	x2, [sp, #88]
     398:	ldr	x1, [sp, #96]
     39c:	ldr	x0, [sp, #48]
     3a0:	bl	24 <ext2fs_rb_link_node>
     3a4:	ldr	x0, [sp, #64]
     3a8:	mov	x1, x0
     3ac:	ldr	x0, [sp, #48]
     3b0:	bl	0 <ext2fs_rb_insert_color>
     3b4:	ldr	x0, [sp, #104]
     3b8:	bl	0 <ext2fs_rb_next>
     3bc:	str	x0, [sp, #104]
     3c0:	ldr	x0, [sp, #104]
     3c4:	cmp	x0, #0x0
     3c8:	b.ne	31c <rb_copy_bmap+0x6c>  // b.any
     3cc:	b	3d4 <rb_copy_bmap+0x124>
     3d0:	nop
     3d4:	ldr	x0, [sp, #80]
     3d8:	ldp	x29, x30, [sp], #112
     3dc:	ret

00000000000003e0 <rb_truncate>:
     3e0:	stp	x29, x30, [sp, #-48]!
     3e4:	mov	x29, sp
     3e8:	str	x0, [sp, #24]
     3ec:	str	x1, [sp, #16]
     3f0:	ldr	x0, [sp, #16]
     3f4:	bl	0 <ext2fs_rb_last>
     3f8:	str	x0, [sp, #40]
     3fc:	b	484 <rb_truncate+0xa4>
     400:	ldr	x0, [sp, #40]
     404:	bl	70 <node_to_extent>
     408:	str	x0, [sp, #32]
     40c:	ldr	x0, [sp, #32]
     410:	ldr	x1, [x0, #24]
     414:	ldr	x0, [sp, #32]
     418:	ldr	x0, [x0, #32]
     41c:	add	x0, x1, x0
     420:	sub	x0, x0, #0x1
     424:	ldr	x1, [sp, #24]
     428:	cmp	x1, x0
     42c:	b.cs	494 <rb_truncate+0xb4>  // b.hs, b.nlast
     430:	ldr	x0, [sp, #32]
     434:	ldr	x0, [x0, #24]
     438:	ldr	x1, [sp, #24]
     43c:	cmp	x1, x0
     440:	b.cs	468 <rb_truncate+0x88>  // b.hs, b.nlast
     444:	ldr	x1, [sp, #16]
     448:	ldr	x0, [sp, #40]
     44c:	bl	0 <ext2fs_rb_erase>
     450:	add	x0, sp, #0x20
     454:	bl	0 <ext2fs_free_mem>
     458:	ldr	x0, [sp, #16]
     45c:	bl	0 <ext2fs_rb_last>
     460:	str	x0, [sp, #40]
     464:	b	484 <rb_truncate+0xa4>
     468:	ldr	x0, [sp, #32]
     46c:	ldr	x0, [x0, #24]
     470:	ldr	x1, [sp, #24]
     474:	sub	x1, x1, x0
     478:	ldr	x0, [sp, #32]
     47c:	add	x1, x1, #0x1
     480:	str	x1, [x0, #32]
     484:	ldr	x0, [sp, #40]
     488:	cmp	x0, #0x0
     48c:	b.ne	400 <rb_truncate+0x20>  // b.any
     490:	b	498 <rb_truncate+0xb8>
     494:	nop
     498:	nop
     49c:	ldp	x29, x30, [sp], #48
     4a0:	ret

00000000000004a4 <rb_resize_bmap>:
     4a4:	stp	x29, x30, [sp, #-64]!
     4a8:	mov	x29, sp
     4ac:	str	x0, [sp, #40]
     4b0:	str	x1, [sp, #32]
     4b4:	str	x2, [sp, #24]
     4b8:	ldr	x0, [sp, #40]
     4bc:	ldr	x0, [x0, #72]
     4c0:	str	x0, [sp, #56]
     4c4:	ldr	x0, [sp, #56]
     4c8:	str	xzr, [x0, #16]
     4cc:	ldr	x0, [sp, #56]
     4d0:	str	xzr, [x0, #8]
     4d4:	ldr	x0, [sp, #40]
     4d8:	ldr	x0, [x0, #40]
     4dc:	ldr	x2, [sp, #32]
     4e0:	ldr	x1, [sp, #32]
     4e4:	cmp	x2, x0
     4e8:	csel	x1, x1, x0, ls  // ls = plast
     4ec:	ldr	x0, [sp, #40]
     4f0:	ldr	x0, [x0, #32]
     4f4:	sub	x0, x1, x0
     4f8:	ldr	x1, [sp, #56]
     4fc:	bl	3e0 <rb_truncate>
     500:	ldr	x0, [sp, #40]
     504:	ldr	x1, [sp, #32]
     508:	str	x1, [x0, #40]
     50c:	ldr	x0, [sp, #40]
     510:	ldr	x1, [sp, #24]
     514:	str	x1, [x0, #48]
     518:	ldr	x0, [sp, #40]
     51c:	ldr	x1, [x0, #40]
     520:	ldr	x0, [sp, #40]
     524:	ldr	x0, [x0, #48]
     528:	cmp	x1, x0
     52c:	b.cs	56c <rb_resize_bmap+0xc8>  // b.hs, b.nlast
     530:	ldr	x0, [sp, #40]
     534:	ldr	x1, [x0, #40]
     538:	ldr	x0, [sp, #40]
     53c:	ldr	x0, [x0, #32]
     540:	sub	x0, x1, x0
     544:	add	x3, x0, #0x1
     548:	ldr	x0, [sp, #40]
     54c:	ldr	x1, [x0, #48]
     550:	ldr	x0, [sp, #40]
     554:	ldr	x0, [x0, #40]
     558:	sub	x0, x1, x0
     55c:	ldr	x2, [sp, #56]
     560:	mov	x1, x0
     564:	mov	x0, x3
     568:	bl	7a4 <rb_insert_extent>
     56c:	mov	x0, #0x0                   	// #0
     570:	ldp	x29, x30, [sp], #64
     574:	ret

0000000000000578 <rb_test_bit>:
     578:	stp	x29, x30, [sp, #-80]!
     57c:	mov	x29, sp
     580:	str	x0, [sp, #24]
     584:	str	x1, [sp, #16]
     588:	str	xzr, [sp, #72]
     58c:	str	xzr, [sp, #56]
     590:	ldr	x0, [sp, #24]
     594:	str	x0, [sp, #64]
     598:	ldr	x0, [sp, #24]
     59c:	ldr	x0, [x0, #16]
     5a0:	str	x0, [sp, #48]
     5a4:	ldr	x0, [sp, #48]
     5a8:	cmp	x0, #0x0
     5ac:	b.eq	6e0 <rb_test_bit+0x168>  // b.none
     5b0:	ldr	x0, [sp, #48]
     5b4:	ldr	x0, [x0, #24]
     5b8:	ldr	x1, [sp, #16]
     5bc:	cmp	x1, x0
     5c0:	b.cc	5ec <rb_test_bit+0x74>  // b.lo, b.ul, b.last
     5c4:	ldr	x0, [sp, #48]
     5c8:	ldr	x1, [x0, #24]
     5cc:	ldr	x0, [sp, #48]
     5d0:	ldr	x0, [x0, #32]
     5d4:	add	x0, x1, x0
     5d8:	ldr	x1, [sp, #16]
     5dc:	cmp	x1, x0
     5e0:	b.cs	5ec <rb_test_bit+0x74>  // b.hs, b.nlast
     5e4:	mov	w0, #0x1                   	// #1
     5e8:	b	79c <rb_test_bit+0x224>
     5ec:	ldr	x0, [sp, #24]
     5f0:	ldr	x0, [x0, #24]
     5f4:	str	x0, [sp, #72]
     5f8:	ldr	x0, [sp, #72]
     5fc:	cmp	x0, #0x0
     600:	b.ne	634 <rb_test_bit+0xbc>  // b.any
     604:	ldr	x0, [sp, #48]
     608:	bl	0 <ext2fs_rb_next>
     60c:	str	x0, [sp, #40]
     610:	ldr	x0, [sp, #40]
     614:	cmp	x0, #0x0
     618:	b.eq	628 <rb_test_bit+0xb0>  // b.none
     61c:	ldr	x0, [sp, #40]
     620:	bl	70 <node_to_extent>
     624:	str	x0, [sp, #72]
     628:	ldr	x0, [sp, #24]
     62c:	ldr	x1, [sp, #72]
     630:	str	x1, [x0, #24]
     634:	ldr	x0, [sp, #72]
     638:	cmp	x0, #0x0
     63c:	b.eq	67c <rb_test_bit+0x104>  // b.none
     640:	ldr	x0, [sp, #48]
     644:	ldr	x1, [x0, #24]
     648:	ldr	x0, [sp, #48]
     64c:	ldr	x0, [x0, #32]
     650:	add	x0, x1, x0
     654:	ldr	x1, [sp, #16]
     658:	cmp	x1, x0
     65c:	b.cc	67c <rb_test_bit+0x104>  // b.lo, b.ul, b.last
     660:	ldr	x0, [sp, #72]
     664:	ldr	x0, [x0, #24]
     668:	ldr	x1, [sp, #16]
     66c:	cmp	x1, x0
     670:	b.cs	67c <rb_test_bit+0x104>  // b.hs, b.nlast
     674:	mov	w0, #0x0                   	// #0
     678:	b	79c <rb_test_bit+0x224>
     67c:	ldr	x0, [sp, #24]
     680:	str	xzr, [x0, #16]
     684:	ldr	x0, [sp, #24]
     688:	str	xzr, [x0, #24]
     68c:	ldr	x0, [sp, #24]
     690:	ldr	x0, [x0, #8]
     694:	str	x0, [sp, #48]
     698:	ldr	x0, [sp, #48]
     69c:	cmp	x0, #0x0
     6a0:	b.eq	6e8 <rb_test_bit+0x170>  // b.none
     6a4:	ldr	x0, [sp, #48]
     6a8:	ldr	x0, [x0, #24]
     6ac:	ldr	x1, [sp, #16]
     6b0:	cmp	x1, x0
     6b4:	b.cc	6f0 <rb_test_bit+0x178>  // b.lo, b.ul, b.last
     6b8:	ldr	x0, [sp, #48]
     6bc:	ldr	x1, [x0, #24]
     6c0:	ldr	x0, [sp, #48]
     6c4:	ldr	x0, [x0, #32]
     6c8:	add	x0, x1, x0
     6cc:	ldr	x1, [sp, #16]
     6d0:	cmp	x1, x0
     6d4:	b.cs	6f0 <rb_test_bit+0x178>  // b.hs, b.nlast
     6d8:	mov	w0, #0x1                   	// #1
     6dc:	b	79c <rb_test_bit+0x224>
     6e0:	nop
     6e4:	b	788 <rb_test_bit+0x210>
     6e8:	nop
     6ec:	b	788 <rb_test_bit+0x210>
     6f0:	nop
     6f4:	b	788 <rb_test_bit+0x210>
     6f8:	ldr	x0, [sp, #64]
     6fc:	ldr	x0, [x0]
     700:	str	x0, [sp, #56]
     704:	ldr	x0, [sp, #56]
     708:	bl	70 <node_to_extent>
     70c:	str	x0, [sp, #32]
     710:	ldr	x0, [sp, #32]
     714:	ldr	x0, [x0, #24]
     718:	ldr	x1, [sp, #16]
     71c:	cmp	x1, x0
     720:	b.cs	738 <rb_test_bit+0x1c0>  // b.hs, b.nlast
     724:	ldr	x0, [sp, #64]
     728:	ldr	x0, [x0]
     72c:	add	x0, x0, #0x10
     730:	str	x0, [sp, #64]
     734:	b	788 <rb_test_bit+0x210>
     738:	ldr	x0, [sp, #32]
     73c:	ldr	x1, [x0, #24]
     740:	ldr	x0, [sp, #32]
     744:	ldr	x0, [x0, #32]
     748:	add	x0, x1, x0
     74c:	ldr	x1, [sp, #16]
     750:	cmp	x1, x0
     754:	b.cc	76c <rb_test_bit+0x1f4>  // b.lo, b.ul, b.last
     758:	ldr	x0, [sp, #64]
     75c:	ldr	x0, [x0]
     760:	add	x0, x0, #0x8
     764:	str	x0, [sp, #64]
     768:	b	788 <rb_test_bit+0x210>
     76c:	ldr	x0, [sp, #24]
     770:	ldr	x1, [sp, #32]
     774:	str	x1, [x0, #16]
     778:	ldr	x0, [sp, #24]
     77c:	str	xzr, [x0, #24]
     780:	mov	w0, #0x1                   	// #1
     784:	b	79c <rb_test_bit+0x224>
     788:	ldr	x0, [sp, #64]
     78c:	ldr	x0, [x0]
     790:	cmp	x0, #0x0
     794:	b.ne	6f8 <rb_test_bit+0x180>  // b.any
     798:	mov	w0, #0x0                   	// #0
     79c:	ldp	x29, x30, [sp], #80
     7a0:	ret

00000000000007a4 <rb_insert_extent>:
     7a4:	stp	x29, x30, [sp, #-128]!
     7a8:	mov	x29, sp
     7ac:	str	x0, [sp, #40]
     7b0:	str	x1, [sp, #32]
     7b4:	str	x2, [sp, #24]
     7b8:	ldr	x0, [sp, #24]
     7bc:	str	x0, [sp, #72]
     7c0:	str	xzr, [sp, #120]
     7c4:	ldr	x0, [sp, #72]
     7c8:	str	x0, [sp, #112]
     7cc:	str	wzr, [sp, #84]
     7d0:	ldr	x0, [sp, #32]
     7d4:	cmp	x0, #0x0
     7d8:	b.ne	7e4 <rb_insert_extent+0x40>  // b.any
     7dc:	mov	w0, #0x0                   	// #0
     7e0:	b	b5c <rb_insert_extent+0x3b8>
     7e4:	ldr	x0, [sp, #24]
     7e8:	str	xzr, [x0, #24]
     7ec:	ldr	x0, [sp, #24]
     7f0:	ldr	x0, [x0, #8]
     7f4:	str	x0, [sp, #88]
     7f8:	ldr	x0, [sp, #88]
     7fc:	cmp	x0, #0x0
     800:	b.eq	958 <rb_insert_extent+0x1b4>  // b.none
     804:	ldr	x0, [sp, #88]
     808:	ldr	x0, [x0, #24]
     80c:	ldr	x1, [sp, #40]
     810:	cmp	x1, x0
     814:	b.cc	958 <rb_insert_extent+0x1b4>  // b.lo, b.ul, b.last
     818:	ldr	x0, [sp, #88]
     81c:	ldr	x1, [x0, #24]
     820:	ldr	x0, [sp, #88]
     824:	ldr	x0, [x0, #32]
     828:	add	x0, x1, x0
     82c:	ldr	x1, [sp, #40]
     830:	cmp	x1, x0
     834:	b.ls	8b0 <rb_insert_extent+0x10c>  // b.plast
     838:	b	958 <rb_insert_extent+0x1b4>
     83c:	ldr	x0, [sp, #112]
     840:	ldr	x0, [x0]
     844:	str	x0, [sp, #120]
     848:	ldr	x0, [sp, #120]
     84c:	bl	70 <node_to_extent>
     850:	str	x0, [sp, #88]
     854:	ldr	x0, [sp, #88]
     858:	ldr	x0, [x0, #24]
     85c:	ldr	x1, [sp, #40]
     860:	cmp	x1, x0
     864:	b.cs	87c <rb_insert_extent+0xd8>  // b.hs, b.nlast
     868:	ldr	x0, [sp, #112]
     86c:	ldr	x0, [x0]
     870:	add	x0, x0, #0x10
     874:	str	x0, [sp, #112]
     878:	b	958 <rb_insert_extent+0x1b4>
     87c:	ldr	x0, [sp, #88]
     880:	ldr	x1, [x0, #24]
     884:	ldr	x0, [sp, #88]
     888:	ldr	x0, [x0, #32]
     88c:	add	x0, x1, x0
     890:	ldr	x1, [sp, #40]
     894:	cmp	x1, x0
     898:	b.ls	8b8 <rb_insert_extent+0x114>  // b.plast
     89c:	ldr	x0, [sp, #112]
     8a0:	ldr	x0, [x0]
     8a4:	add	x0, x0, #0x8
     8a8:	str	x0, [sp, #112]
     8ac:	b	958 <rb_insert_extent+0x1b4>
     8b0:	nop
     8b4:	b	8bc <rb_insert_extent+0x118>
     8b8:	nop
     8bc:	ldr	x1, [sp, #40]
     8c0:	ldr	x0, [sp, #32]
     8c4:	add	x1, x1, x0
     8c8:	ldr	x0, [sp, #88]
     8cc:	ldr	x2, [x0, #24]
     8d0:	ldr	x0, [sp, #88]
     8d4:	ldr	x0, [x0, #32]
     8d8:	add	x0, x2, x0
     8dc:	cmp	x1, x0
     8e0:	b.hi	8ec <rb_insert_extent+0x148>  // b.pmore
     8e4:	mov	w0, #0x1                   	// #1
     8e8:	b	b5c <rb_insert_extent+0x3b8>
     8ec:	ldr	x0, [sp, #88]
     8f0:	ldr	x1, [x0, #24]
     8f4:	ldr	x0, [sp, #88]
     8f8:	ldr	x0, [x0, #32]
     8fc:	add	x0, x1, x0
     900:	ldr	x1, [sp, #40]
     904:	cmp	x1, x0
     908:	b.ne	914 <rb_insert_extent+0x170>  // b.any
     90c:	str	wzr, [sp, #84]
     910:	b	91c <rb_insert_extent+0x178>
     914:	mov	w0, #0x1                   	// #1
     918:	str	w0, [sp, #84]
     91c:	ldr	x0, [sp, #88]
     920:	ldr	x0, [x0, #24]
     924:	ldr	x1, [sp, #40]
     928:	sub	x0, x1, x0
     92c:	ldr	x1, [sp, #32]
     930:	add	x0, x1, x0
     934:	str	x0, [sp, #32]
     938:	ldr	x0, [sp, #88]
     93c:	ldr	x0, [x0, #24]
     940:	str	x0, [sp, #40]
     944:	ldr	x0, [sp, #88]
     948:	str	x0, [sp, #56]
     94c:	ldr	x0, [sp, #88]
     950:	str	x0, [sp, #104]
     954:	b	a2c <rb_insert_extent+0x288>
     958:	ldr	x0, [sp, #112]
     95c:	ldr	x0, [x0]
     960:	cmp	x0, #0x0
     964:	b.ne	83c <rb_insert_extent+0x98>  // b.any
     968:	add	x0, sp, #0x38
     96c:	ldr	x2, [sp, #32]
     970:	ldr	x1, [sp, #40]
     974:	bl	84 <rb_get_new_extent>
     978:	ldr	x0, [sp, #56]
     97c:	str	x0, [sp, #104]
     980:	ldr	x2, [sp, #112]
     984:	ldr	x1, [sp, #120]
     988:	ldr	x0, [sp, #104]
     98c:	bl	24 <ext2fs_rb_link_node>
     990:	ldr	x1, [sp, #72]
     994:	ldr	x0, [sp, #104]
     998:	bl	0 <ext2fs_rb_insert_color>
     99c:	ldr	x1, [sp, #56]
     9a0:	ldr	x0, [sp, #24]
     9a4:	str	x1, [x0, #8]
     9a8:	ldr	x0, [sp, #104]
     9ac:	bl	0 <ext2fs_rb_prev>
     9b0:	str	x0, [sp, #96]
     9b4:	ldr	x0, [sp, #96]
     9b8:	cmp	x0, #0x0
     9bc:	b.eq	a28 <rb_insert_extent+0x284>  // b.none
     9c0:	ldr	x0, [sp, #96]
     9c4:	bl	70 <node_to_extent>
     9c8:	str	x0, [sp, #88]
     9cc:	ldr	x0, [sp, #88]
     9d0:	ldr	x1, [x0, #24]
     9d4:	ldr	x0, [sp, #88]
     9d8:	ldr	x0, [x0, #32]
     9dc:	add	x0, x1, x0
     9e0:	ldr	x1, [sp, #40]
     9e4:	cmp	x1, x0
     9e8:	b.ne	a28 <rb_insert_extent+0x284>  // b.any
     9ec:	ldr	x0, [sp, #88]
     9f0:	ldr	x0, [x0, #24]
     9f4:	str	x0, [sp, #40]
     9f8:	ldr	x0, [sp, #88]
     9fc:	ldr	x0, [x0, #32]
     a00:	ldr	x1, [sp, #32]
     a04:	add	x0, x1, x0
     a08:	str	x0, [sp, #32]
     a0c:	ldr	x1, [sp, #72]
     a10:	ldr	x0, [sp, #96]
     a14:	bl	0 <ext2fs_rb_erase>
     a18:	ldr	x1, [sp, #88]
     a1c:	ldr	x0, [sp, #24]
     a20:	bl	ec <rb_free_extent>
     a24:	b	a2c <rb_insert_extent+0x288>
     a28:	nop
     a2c:	ldr	x0, [sp, #104]
     a30:	bl	0 <ext2fs_rb_next>
     a34:	str	x0, [sp, #96]
     a38:	b	b2c <rb_insert_extent+0x388>
     a3c:	ldr	x0, [sp, #96]
     a40:	bl	0 <ext2fs_rb_next>
     a44:	str	x0, [sp, #64]
     a48:	ldr	x0, [sp, #96]
     a4c:	bl	70 <node_to_extent>
     a50:	str	x0, [sp, #88]
     a54:	ldr	x0, [sp, #88]
     a58:	ldr	x1, [x0, #24]
     a5c:	ldr	x0, [sp, #88]
     a60:	ldr	x0, [x0, #32]
     a64:	add	x0, x1, x0
     a68:	ldr	x1, [sp, #40]
     a6c:	cmp	x1, x0
     a70:	b.cs	b20 <rb_insert_extent+0x37c>  // b.hs, b.nlast
     a74:	ldr	x1, [sp, #40]
     a78:	ldr	x0, [sp, #32]
     a7c:	add	x1, x1, x0
     a80:	ldr	x0, [sp, #88]
     a84:	ldr	x0, [x0, #24]
     a88:	cmp	x1, x0
     a8c:	b.cc	b3c <rb_insert_extent+0x398>  // b.lo, b.ul, b.last
     a90:	ldr	x1, [sp, #40]
     a94:	ldr	x0, [sp, #32]
     a98:	add	x1, x1, x0
     a9c:	ldr	x0, [sp, #88]
     aa0:	ldr	x2, [x0, #24]
     aa4:	ldr	x0, [sp, #88]
     aa8:	ldr	x0, [x0, #32]
     aac:	add	x0, x2, x0
     ab0:	cmp	x1, x0
     ab4:	b.cc	ad4 <rb_insert_extent+0x330>  // b.lo, b.ul, b.last
     ab8:	ldr	x1, [sp, #72]
     abc:	ldr	x0, [sp, #96]
     ac0:	bl	0 <ext2fs_rb_erase>
     ac4:	ldr	x1, [sp, #88]
     ac8:	ldr	x0, [sp, #24]
     acc:	bl	ec <rb_free_extent>
     ad0:	b	b24 <rb_insert_extent+0x380>
     ad4:	ldr	x0, [sp, #88]
     ad8:	ldr	x1, [x0, #24]
     adc:	ldr	x0, [sp, #88]
     ae0:	ldr	x0, [x0, #32]
     ae4:	add	x1, x1, x0
     ae8:	ldr	x2, [sp, #40]
     aec:	ldr	x0, [sp, #32]
     af0:	add	x0, x2, x0
     af4:	sub	x0, x1, x0
     af8:	ldr	x1, [sp, #32]
     afc:	add	x0, x1, x0
     b00:	str	x0, [sp, #32]
     b04:	ldr	x1, [sp, #72]
     b08:	ldr	x0, [sp, #96]
     b0c:	bl	0 <ext2fs_rb_erase>
     b10:	ldr	x1, [sp, #88]
     b14:	ldr	x0, [sp, #24]
     b18:	bl	ec <rb_free_extent>
     b1c:	b	b40 <rb_insert_extent+0x39c>
     b20:	nop
     b24:	ldr	x0, [sp, #64]
     b28:	str	x0, [sp, #96]
     b2c:	ldr	x0, [sp, #96]
     b30:	cmp	x0, #0x0
     b34:	b.ne	a3c <rb_insert_extent+0x298>  // b.any
     b38:	b	b40 <rb_insert_extent+0x39c>
     b3c:	nop
     b40:	ldr	x0, [sp, #56]
     b44:	ldr	x1, [sp, #40]
     b48:	str	x1, [x0, #24]
     b4c:	ldr	x0, [sp, #56]
     b50:	ldr	x1, [sp, #32]
     b54:	str	x1, [x0, #32]
     b58:	ldr	w0, [sp, #84]
     b5c:	ldp	x29, x30, [sp], #128
     b60:	ret

0000000000000b64 <rb_remove_extent>:
     b64:	stp	x29, x30, [sp, #-112]!
     b68:	mov	x29, sp
     b6c:	str	x0, [sp, #40]
     b70:	str	x1, [sp, #32]
     b74:	str	x2, [sp, #24]
     b78:	ldr	x0, [sp, #24]
     b7c:	str	x0, [sp, #80]
     b80:	str	xzr, [sp, #104]
     b84:	ldr	x0, [sp, #80]
     b88:	str	x0, [sp, #96]
     b8c:	str	wzr, [sp, #92]
     b90:	ldr	x0, [sp, #80]
     b94:	bl	0 <ext2fs_rb_empty_root>
     b98:	cmp	w0, #0x0
     b9c:	b.eq	d84 <rb_remove_extent+0x220>  // b.none
     ba0:	mov	w0, #0x0                   	// #0
     ba4:	b	ea8 <rb_remove_extent+0x344>
     ba8:	ldr	x0, [sp, #96]
     bac:	ldr	x0, [x0]
     bb0:	str	x0, [sp, #104]
     bb4:	ldr	x0, [sp, #104]
     bb8:	bl	70 <node_to_extent>
     bbc:	str	x0, [sp, #72]
     bc0:	ldr	x0, [sp, #72]
     bc4:	ldr	x0, [x0, #24]
     bc8:	ldr	x1, [sp, #40]
     bcc:	cmp	x1, x0
     bd0:	b.cs	be8 <rb_remove_extent+0x84>  // b.hs, b.nlast
     bd4:	ldr	x0, [sp, #96]
     bd8:	ldr	x0, [x0]
     bdc:	add	x0, x0, #0x10
     be0:	str	x0, [sp, #96]
     be4:	b	d84 <rb_remove_extent+0x220>
     be8:	ldr	x0, [sp, #72]
     bec:	ldr	x1, [x0, #24]
     bf0:	ldr	x0, [sp, #72]
     bf4:	ldr	x0, [x0, #32]
     bf8:	add	x0, x1, x0
     bfc:	ldr	x1, [sp, #40]
     c00:	cmp	x1, x0
     c04:	b.cc	c1c <rb_remove_extent+0xb8>  // b.lo, b.ul, b.last
     c08:	ldr	x0, [sp, #96]
     c0c:	ldr	x0, [x0]
     c10:	add	x0, x0, #0x8
     c14:	str	x0, [sp, #96]
     c18:	b	d84 <rb_remove_extent+0x220>
     c1c:	ldr	x0, [sp, #72]
     c20:	ldr	x0, [x0, #24]
     c24:	ldr	x1, [sp, #40]
     c28:	cmp	x1, x0
     c2c:	b.ls	cb8 <rb_remove_extent+0x154>  // b.plast
     c30:	ldr	x1, [sp, #40]
     c34:	ldr	x0, [sp, #32]
     c38:	add	x1, x1, x0
     c3c:	ldr	x0, [sp, #72]
     c40:	ldr	x2, [x0, #24]
     c44:	ldr	x0, [sp, #72]
     c48:	ldr	x0, [x0, #32]
     c4c:	add	x0, x2, x0
     c50:	cmp	x1, x0
     c54:	b.cs	cb8 <rb_remove_extent+0x154>  // b.hs, b.nlast
     c58:	ldr	x1, [sp, #40]
     c5c:	ldr	x0, [sp, #32]
     c60:	add	x0, x1, x0
     c64:	str	x0, [sp, #64]
     c68:	ldr	x0, [sp, #72]
     c6c:	ldr	x1, [x0, #24]
     c70:	ldr	x0, [sp, #72]
     c74:	ldr	x0, [x0, #32]
     c78:	add	x1, x1, x0
     c7c:	ldr	x0, [sp, #64]
     c80:	sub	x0, x1, x0
     c84:	str	x0, [sp, #56]
     c88:	ldr	x0, [sp, #72]
     c8c:	ldr	x0, [x0, #24]
     c90:	ldr	x1, [sp, #40]
     c94:	sub	x1, x1, x0
     c98:	ldr	x0, [sp, #72]
     c9c:	str	x1, [x0, #32]
     ca0:	ldr	x2, [sp, #24]
     ca4:	ldr	x1, [sp, #56]
     ca8:	ldr	x0, [sp, #64]
     cac:	bl	7a4 <rb_insert_extent>
     cb0:	mov	w0, #0x1                   	// #1
     cb4:	b	ea8 <rb_remove_extent+0x344>
     cb8:	ldr	x1, [sp, #40]
     cbc:	ldr	x0, [sp, #32]
     cc0:	add	x1, x1, x0
     cc4:	ldr	x0, [sp, #72]
     cc8:	ldr	x2, [x0, #24]
     ccc:	ldr	x0, [sp, #72]
     cd0:	ldr	x0, [x0, #32]
     cd4:	add	x0, x2, x0
     cd8:	cmp	x1, x0
     cdc:	b.cc	d00 <rb_remove_extent+0x19c>  // b.lo, b.ul, b.last
     ce0:	ldr	x0, [sp, #72]
     ce4:	ldr	x0, [x0, #24]
     ce8:	ldr	x1, [sp, #40]
     cec:	sub	x1, x1, x0
     cf0:	ldr	x0, [sp, #72]
     cf4:	str	x1, [x0, #32]
     cf8:	mov	w0, #0x1                   	// #1
     cfc:	str	w0, [sp, #92]
     d00:	ldr	x0, [sp, #72]
     d04:	ldr	x0, [x0, #32]
     d08:	cmp	x0, #0x0
     d0c:	b.ne	d38 <rb_remove_extent+0x1d4>  // b.any
     d10:	ldr	x0, [sp, #72]
     d14:	bl	0 <ext2fs_rb_next>
     d18:	str	x0, [sp, #104]
     d1c:	ldr	x0, [sp, #72]
     d20:	ldr	x1, [sp, #80]
     d24:	bl	0 <ext2fs_rb_erase>
     d28:	ldr	x1, [sp, #72]
     d2c:	ldr	x0, [sp, #24]
     d30:	bl	ec <rb_free_extent>
     d34:	b	d94 <rb_remove_extent+0x230>
     d38:	ldr	x0, [sp, #72]
     d3c:	ldr	x0, [x0, #24]
     d40:	ldr	x1, [sp, #40]
     d44:	cmp	x1, x0
     d48:	b.ne	d84 <rb_remove_extent+0x220>  // b.any
     d4c:	ldr	x0, [sp, #72]
     d50:	ldr	x1, [x0, #24]
     d54:	ldr	x0, [sp, #32]
     d58:	add	x1, x1, x0
     d5c:	ldr	x0, [sp, #72]
     d60:	str	x1, [x0, #24]
     d64:	ldr	x0, [sp, #72]
     d68:	ldr	x1, [x0, #32]
     d6c:	ldr	x0, [sp, #32]
     d70:	sub	x1, x1, x0
     d74:	ldr	x0, [sp, #72]
     d78:	str	x1, [x0, #32]
     d7c:	mov	w0, #0x1                   	// #1
     d80:	b	ea8 <rb_remove_extent+0x344>
     d84:	ldr	x0, [sp, #96]
     d88:	ldr	x0, [x0]
     d8c:	cmp	x0, #0x0
     d90:	b.ne	ba8 <rb_remove_extent+0x44>  // b.any
     d94:	b	e90 <rb_remove_extent+0x32c>
     d98:	ldr	x0, [sp, #104]
     d9c:	bl	0 <ext2fs_rb_next>
     da0:	str	x0, [sp, #48]
     da4:	ldr	x0, [sp, #104]
     da8:	bl	70 <node_to_extent>
     dac:	str	x0, [sp, #72]
     db0:	ldr	x0, [sp, #72]
     db4:	ldr	x1, [x0, #24]
     db8:	ldr	x0, [sp, #72]
     dbc:	ldr	x0, [x0, #32]
     dc0:	add	x0, x1, x0
     dc4:	ldr	x1, [sp, #40]
     dc8:	cmp	x1, x0
     dcc:	b.cs	e84 <rb_remove_extent+0x320>  // b.hs, b.nlast
     dd0:	ldr	x1, [sp, #40]
     dd4:	ldr	x0, [sp, #32]
     dd8:	add	x1, x1, x0
     ddc:	ldr	x0, [sp, #72]
     de0:	ldr	x0, [x0, #24]
     de4:	cmp	x1, x0
     de8:	b.cc	ea0 <rb_remove_extent+0x33c>  // b.lo, b.ul, b.last
     dec:	ldr	x1, [sp, #40]
     df0:	ldr	x0, [sp, #32]
     df4:	add	x1, x1, x0
     df8:	ldr	x0, [sp, #72]
     dfc:	ldr	x2, [x0, #24]
     e00:	ldr	x0, [sp, #72]
     e04:	ldr	x0, [x0, #32]
     e08:	add	x0, x2, x0
     e0c:	cmp	x1, x0
     e10:	b.cc	e38 <rb_remove_extent+0x2d4>  // b.lo, b.ul, b.last
     e14:	ldr	x1, [sp, #80]
     e18:	ldr	x0, [sp, #104]
     e1c:	bl	0 <ext2fs_rb_erase>
     e20:	ldr	x1, [sp, #72]
     e24:	ldr	x0, [sp, #24]
     e28:	bl	ec <rb_free_extent>
     e2c:	mov	w0, #0x1                   	// #1
     e30:	str	w0, [sp, #92]
     e34:	b	e88 <rb_remove_extent+0x324>
     e38:	ldr	x0, [sp, #72]
     e3c:	ldr	x1, [x0, #32]
     e40:	ldr	x0, [sp, #72]
     e44:	ldr	x2, [x0, #24]
     e48:	ldr	x3, [sp, #40]
     e4c:	ldr	x0, [sp, #32]
     e50:	add	x0, x3, x0
     e54:	sub	x0, x2, x0
     e58:	add	x1, x1, x0
     e5c:	ldr	x0, [sp, #72]
     e60:	str	x1, [x0, #32]
     e64:	ldr	x1, [sp, #40]
     e68:	ldr	x0, [sp, #32]
     e6c:	add	x1, x1, x0
     e70:	ldr	x0, [sp, #72]
     e74:	str	x1, [x0, #24]
     e78:	mov	w0, #0x1                   	// #1
     e7c:	str	w0, [sp, #92]
     e80:	b	ea4 <rb_remove_extent+0x340>
     e84:	nop
     e88:	ldr	x0, [sp, #48]
     e8c:	str	x0, [sp, #104]
     e90:	ldr	x0, [sp, #104]
     e94:	cmp	x0, #0x0
     e98:	b.ne	d98 <rb_remove_extent+0x234>  // b.any
     e9c:	b	ea4 <rb_remove_extent+0x340>
     ea0:	nop
     ea4:	ldr	w0, [sp, #92]
     ea8:	ldp	x29, x30, [sp], #112
     eac:	ret

0000000000000eb0 <rb_mark_bmap>:
     eb0:	stp	x29, x30, [sp, #-48]!
     eb4:	mov	x29, sp
     eb8:	str	x0, [sp, #24]
     ebc:	str	x1, [sp, #16]
     ec0:	ldr	x0, [sp, #24]
     ec4:	ldr	x0, [x0, #72]
     ec8:	str	x0, [sp, #40]
     ecc:	ldr	x0, [sp, #24]
     ed0:	ldr	x0, [x0, #32]
     ed4:	ldr	x1, [sp, #16]
     ed8:	sub	x0, x1, x0
     edc:	str	x0, [sp, #16]
     ee0:	ldr	x2, [sp, #40]
     ee4:	mov	x1, #0x1                   	// #1
     ee8:	ldr	x0, [sp, #16]
     eec:	bl	7a4 <rb_insert_extent>
     ef0:	str	w0, [sp, #36]
     ef4:	ldr	w0, [sp, #36]
     ef8:	ldp	x29, x30, [sp], #48
     efc:	ret

0000000000000f00 <rb_unmark_bmap>:
     f00:	stp	x29, x30, [sp, #-48]!
     f04:	mov	x29, sp
     f08:	str	x0, [sp, #24]
     f0c:	str	x1, [sp, #16]
     f10:	ldr	x0, [sp, #24]
     f14:	ldr	x0, [x0, #72]
     f18:	str	x0, [sp, #40]
     f1c:	ldr	x0, [sp, #24]
     f20:	ldr	x0, [x0, #32]
     f24:	ldr	x1, [sp, #16]
     f28:	sub	x0, x1, x0
     f2c:	str	x0, [sp, #16]
     f30:	ldr	x2, [sp, #40]
     f34:	mov	x1, #0x1                   	// #1
     f38:	ldr	x0, [sp, #16]
     f3c:	bl	b64 <rb_remove_extent>
     f40:	str	w0, [sp, #36]
     f44:	ldr	w0, [sp, #36]
     f48:	ldp	x29, x30, [sp], #48
     f4c:	ret

0000000000000f50 <rb_test_bmap>:
     f50:	stp	x29, x30, [sp, #-48]!
     f54:	mov	x29, sp
     f58:	str	x0, [sp, #24]
     f5c:	str	x1, [sp, #16]
     f60:	ldr	x0, [sp, #24]
     f64:	ldr	x0, [x0, #72]
     f68:	str	x0, [sp, #40]
     f6c:	ldr	x0, [sp, #24]
     f70:	ldr	x0, [x0, #32]
     f74:	ldr	x1, [sp, #16]
     f78:	sub	x0, x1, x0
     f7c:	str	x0, [sp, #16]
     f80:	ldr	x1, [sp, #16]
     f84:	ldr	x0, [sp, #40]
     f88:	bl	578 <rb_test_bit>
     f8c:	ldp	x29, x30, [sp], #48
     f90:	ret

0000000000000f94 <rb_mark_bmap_extent>:
     f94:	stp	x29, x30, [sp, #-64]!
     f98:	mov	x29, sp
     f9c:	str	x0, [sp, #40]
     fa0:	str	x1, [sp, #32]
     fa4:	str	w2, [sp, #28]
     fa8:	ldr	x0, [sp, #40]
     fac:	ldr	x0, [x0, #72]
     fb0:	str	x0, [sp, #56]
     fb4:	ldr	x0, [sp, #40]
     fb8:	ldr	x0, [x0, #32]
     fbc:	ldr	x1, [sp, #32]
     fc0:	sub	x0, x1, x0
     fc4:	str	x0, [sp, #32]
     fc8:	ldr	w0, [sp, #28]
     fcc:	ldr	x2, [sp, #56]
     fd0:	mov	x1, x0
     fd4:	ldr	x0, [sp, #32]
     fd8:	bl	7a4 <rb_insert_extent>
     fdc:	nop
     fe0:	ldp	x29, x30, [sp], #64
     fe4:	ret

0000000000000fe8 <rb_unmark_bmap_extent>:
     fe8:	stp	x29, x30, [sp, #-64]!
     fec:	mov	x29, sp
     ff0:	str	x0, [sp, #40]
     ff4:	str	x1, [sp, #32]
     ff8:	str	w2, [sp, #28]
     ffc:	ldr	x0, [sp, #40]
    1000:	ldr	x0, [x0, #72]
    1004:	str	x0, [sp, #56]
    1008:	ldr	x0, [sp, #40]
    100c:	ldr	x0, [x0, #32]
    1010:	ldr	x1, [sp, #32]
    1014:	sub	x0, x1, x0
    1018:	str	x0, [sp, #32]
    101c:	ldr	w0, [sp, #28]
    1020:	ldr	x2, [sp, #56]
    1024:	mov	x1, x0
    1028:	ldr	x0, [sp, #32]
    102c:	bl	b64 <rb_remove_extent>
    1030:	nop
    1034:	ldp	x29, x30, [sp], #64
    1038:	ret

000000000000103c <rb_test_clear_bmap_extent>:
    103c:	stp	x29, x30, [sp, #-112]!
    1040:	mov	x29, sp
    1044:	str	x0, [sp, #40]
    1048:	str	x1, [sp, #32]
    104c:	str	w2, [sp, #28]
    1050:	str	xzr, [sp, #104]
    1054:	mov	w0, #0x1                   	// #1
    1058:	str	w0, [sp, #84]
    105c:	ldr	x0, [sp, #40]
    1060:	ldr	x0, [x0, #72]
    1064:	str	x0, [sp, #72]
    1068:	ldr	x0, [sp, #72]
    106c:	str	x0, [sp, #96]
    1070:	ldr	x0, [sp, #40]
    1074:	ldr	x0, [x0, #32]
    1078:	ldr	x1, [sp, #32]
    107c:	sub	x0, x1, x0
    1080:	str	x0, [sp, #32]
    1084:	ldr	w0, [sp, #28]
    1088:	cmp	w0, #0x0
    108c:	b.eq	10a0 <rb_test_clear_bmap_extent+0x64>  // b.none
    1090:	ldr	x0, [sp, #72]
    1094:	bl	0 <ext2fs_rb_empty_root>
    1098:	cmp	w0, #0x0
    109c:	b.eq	1124 <rb_test_clear_bmap_extent+0xe8>  // b.none
    10a0:	mov	w0, #0x1                   	// #1
    10a4:	b	11c0 <rb_test_clear_bmap_extent+0x184>
    10a8:	ldr	x0, [sp, #96]
    10ac:	ldr	x0, [x0]
    10b0:	str	x0, [sp, #104]
    10b4:	ldr	x0, [sp, #104]
    10b8:	bl	70 <node_to_extent>
    10bc:	str	x0, [sp, #56]
    10c0:	ldr	x0, [sp, #56]
    10c4:	ldr	x0, [x0, #24]
    10c8:	ldr	x1, [sp, #32]
    10cc:	cmp	x1, x0
    10d0:	b.cs	10e8 <rb_test_clear_bmap_extent+0xac>  // b.hs, b.nlast
    10d4:	ldr	x0, [sp, #96]
    10d8:	ldr	x0, [x0]
    10dc:	add	x0, x0, #0x10
    10e0:	str	x0, [sp, #96]
    10e4:	b	1124 <rb_test_clear_bmap_extent+0xe8>
    10e8:	ldr	x0, [sp, #56]
    10ec:	ldr	x1, [x0, #24]
    10f0:	ldr	x0, [sp, #56]
    10f4:	ldr	x0, [x0, #32]
    10f8:	add	x0, x1, x0
    10fc:	ldr	x1, [sp, #32]
    1100:	cmp	x1, x0
    1104:	b.cc	111c <rb_test_clear_bmap_extent+0xe0>  // b.lo, b.ul, b.last
    1108:	ldr	x0, [sp, #96]
    110c:	ldr	x0, [x0]
    1110:	add	x0, x0, #0x8
    1114:	str	x0, [sp, #96]
    1118:	b	1124 <rb_test_clear_bmap_extent+0xe8>
    111c:	mov	w0, #0x0                   	// #0
    1120:	b	11c0 <rb_test_clear_bmap_extent+0x184>
    1124:	ldr	x0, [sp, #96]
    1128:	ldr	x0, [x0]
    112c:	cmp	x0, #0x0
    1130:	b.ne	10a8 <rb_test_clear_bmap_extent+0x6c>  // b.any
    1134:	ldr	x0, [sp, #104]
    1138:	str	x0, [sp, #88]
    113c:	b	11a8 <rb_test_clear_bmap_extent+0x16c>
    1140:	ldr	x0, [sp, #88]
    1144:	bl	0 <ext2fs_rb_next>
    1148:	str	x0, [sp, #64]
    114c:	ldr	x0, [sp, #88]
    1150:	bl	70 <node_to_extent>
    1154:	str	x0, [sp, #56]
    1158:	ldr	x0, [sp, #64]
    115c:	str	x0, [sp, #88]
    1160:	ldr	x0, [sp, #56]
    1164:	ldr	x1, [x0, #24]
    1168:	ldr	x0, [sp, #56]
    116c:	ldr	x0, [x0, #32]
    1170:	add	x0, x1, x0
    1174:	ldr	x1, [sp, #32]
    1178:	cmp	x1, x0
    117c:	b.cc	1184 <rb_test_clear_bmap_extent+0x148>  // b.lo, b.ul, b.last
    1180:	b	11a8 <rb_test_clear_bmap_extent+0x16c>
    1184:	ldr	w1, [sp, #28]
    1188:	ldr	x0, [sp, #32]
    118c:	add	x1, x1, x0
    1190:	ldr	x0, [sp, #56]
    1194:	ldr	x0, [x0, #24]
    1198:	cmp	x1, x0
    119c:	b.ls	11b8 <rb_test_clear_bmap_extent+0x17c>  // b.plast
    11a0:	str	wzr, [sp, #84]
    11a4:	b	11bc <rb_test_clear_bmap_extent+0x180>
    11a8:	ldr	x0, [sp, #88]
    11ac:	cmp	x0, #0x0
    11b0:	b.ne	1140 <rb_test_clear_bmap_extent+0x104>  // b.any
    11b4:	b	11bc <rb_test_clear_bmap_extent+0x180>
    11b8:	nop
    11bc:	ldr	w0, [sp, #84]
    11c0:	ldp	x29, x30, [sp], #112
    11c4:	ret

00000000000011c8 <rb_set_bmap_range>:
    11c8:	stp	x29, x30, [sp, #-96]!
    11cc:	mov	x29, sp
    11d0:	str	x0, [sp, #40]
    11d4:	str	x1, [sp, #32]
    11d8:	str	x2, [sp, #24]
    11dc:	str	x3, [sp, #16]
    11e0:	ldr	x0, [sp, #16]
    11e4:	str	x0, [sp, #72]
    11e8:	mov	w0, #0xffffffff            	// #-1
    11ec:	str	w0, [sp, #84]
    11f0:	ldr	x0, [sp, #40]
    11f4:	ldr	x0, [x0, #72]
    11f8:	str	x0, [sp, #64]
    11fc:	str	xzr, [sp, #88]
    1200:	b	1314 <rb_set_bmap_range+0x14c>
    1204:	ldr	x0, [sp, #88]
    1208:	and	x0, x0, #0x7
    120c:	cmp	x0, #0x0
    1210:	b.ne	1284 <rb_set_bmap_range+0xbc>  // b.any
    1214:	ldr	x0, [sp, #88]
    1218:	lsr	x0, x0, #3
    121c:	ldr	x1, [sp, #72]
    1220:	add	x0, x1, x0
    1224:	ldrb	w0, [x0]
    1228:	strb	w0, [sp, #63]
    122c:	ldrb	w0, [sp, #63]
    1230:	cmp	w0, #0xff
    1234:	b.ne	125c <rb_set_bmap_range+0x94>  // b.any
    1238:	ldr	w0, [sp, #84]
    123c:	cmn	w0, #0x1
    1240:	b.ne	124c <rb_set_bmap_range+0x84>  // b.any
    1244:	ldr	x0, [sp, #88]
    1248:	str	w0, [sp, #84]
    124c:	ldr	x0, [sp, #88]
    1250:	add	x0, x0, #0x7
    1254:	str	x0, [sp, #88]
    1258:	b	1308 <rb_set_bmap_range+0x140>
    125c:	ldrb	w0, [sp, #63]
    1260:	cmp	w0, #0x0
    1264:	b.ne	1284 <rb_set_bmap_range+0xbc>  // b.any
    1268:	ldr	w0, [sp, #84]
    126c:	cmn	w0, #0x1
    1270:	b.ne	1284 <rb_set_bmap_range+0xbc>  // b.any
    1274:	ldr	x0, [sp, #88]
    1278:	add	x0, x0, #0x7
    127c:	str	x0, [sp, #88]
    1280:	b	1308 <rb_set_bmap_range+0x140>
    1284:	ldr	x0, [sp, #88]
    1288:	ldr	x1, [sp, #16]
    128c:	bl	0 <ext2fs_test_bit>
    1290:	cmp	w0, #0x0
    1294:	b.eq	12b0 <rb_set_bmap_range+0xe8>  // b.none
    1298:	ldr	w0, [sp, #84]
    129c:	cmn	w0, #0x1
    12a0:	b.ne	12fc <rb_set_bmap_range+0x134>  // b.any
    12a4:	ldr	x0, [sp, #88]
    12a8:	str	w0, [sp, #84]
    12ac:	b	12fc <rb_set_bmap_range+0x134>
    12b0:	ldr	w0, [sp, #84]
    12b4:	cmn	w0, #0x1
    12b8:	b.eq	1304 <rb_set_bmap_range+0x13c>  // b.none
    12bc:	ldrsw	x1, [sp, #84]
    12c0:	ldr	x0, [sp, #32]
    12c4:	add	x1, x1, x0
    12c8:	ldr	x0, [sp, #40]
    12cc:	ldr	x0, [x0, #32]
    12d0:	sub	x3, x1, x0
    12d4:	ldrsw	x0, [sp, #84]
    12d8:	ldr	x1, [sp, #88]
    12dc:	sub	x0, x1, x0
    12e0:	ldr	x2, [sp, #64]
    12e4:	mov	x1, x0
    12e8:	mov	x0, x3
    12ec:	bl	7a4 <rb_insert_extent>
    12f0:	mov	w0, #0xffffffff            	// #-1
    12f4:	str	w0, [sp, #84]
    12f8:	b	1308 <rb_set_bmap_range+0x140>
    12fc:	nop
    1300:	b	1308 <rb_set_bmap_range+0x140>
    1304:	nop
    1308:	ldr	x0, [sp, #88]
    130c:	add	x0, x0, #0x1
    1310:	str	x0, [sp, #88]
    1314:	ldr	x1, [sp, #88]
    1318:	ldr	x0, [sp, #24]
    131c:	cmp	x1, x0
    1320:	b.cc	1204 <rb_set_bmap_range+0x3c>  // b.lo, b.ul, b.last
    1324:	ldr	w0, [sp, #84]
    1328:	cmn	w0, #0x1
    132c:	b.eq	1364 <rb_set_bmap_range+0x19c>  // b.none
    1330:	ldrsw	x1, [sp, #84]
    1334:	ldr	x0, [sp, #32]
    1338:	add	x1, x1, x0
    133c:	ldr	x0, [sp, #40]
    1340:	ldr	x0, [x0, #32]
    1344:	sub	x3, x1, x0
    1348:	ldrsw	x0, [sp, #84]
    134c:	ldr	x1, [sp, #24]
    1350:	sub	x0, x1, x0
    1354:	ldr	x2, [sp, #64]
    1358:	mov	x1, x0
    135c:	mov	x0, x3
    1360:	bl	7a4 <rb_insert_extent>
    1364:	mov	x0, #0x0                   	// #0
    1368:	ldp	x29, x30, [sp], #96
    136c:	ret

0000000000001370 <rb_get_bmap_range>:
    1370:	stp	x29, x30, [sp, #-112]!
    1374:	mov	x29, sp
    1378:	str	x0, [sp, #40]
    137c:	str	x1, [sp, #32]
    1380:	str	x2, [sp, #24]
    1384:	str	x3, [sp, #16]
    1388:	str	xzr, [sp, #104]
    138c:	ldr	x0, [sp, #40]
    1390:	ldr	x0, [x0, #72]
    1394:	str	x0, [sp, #72]
    1398:	ldr	x0, [sp, #72]
    139c:	str	x0, [sp, #96]
    13a0:	ldr	x0, [sp, #40]
    13a4:	ldr	x0, [x0, #32]
    13a8:	ldr	x1, [sp, #32]
    13ac:	sub	x0, x1, x0
    13b0:	str	x0, [sp, #32]
    13b4:	ldr	x0, [sp, #72]
    13b8:	bl	0 <ext2fs_rb_empty_root>
    13bc:	cmp	w0, #0x0
    13c0:	b.eq	143c <rb_get_bmap_range+0xcc>  // b.none
    13c4:	mov	x0, #0x0                   	// #0
    13c8:	b	1634 <rb_get_bmap_range+0x2c4>
    13cc:	ldr	x0, [sp, #96]
    13d0:	ldr	x0, [x0]
    13d4:	str	x0, [sp, #104]
    13d8:	ldr	x0, [sp, #104]
    13dc:	bl	70 <node_to_extent>
    13e0:	str	x0, [sp, #64]
    13e4:	ldr	x0, [sp, #64]
    13e8:	ldr	x0, [x0, #24]
    13ec:	ldr	x1, [sp, #32]
    13f0:	cmp	x1, x0
    13f4:	b.cs	140c <rb_get_bmap_range+0x9c>  // b.hs, b.nlast
    13f8:	ldr	x0, [sp, #96]
    13fc:	ldr	x0, [x0]
    1400:	add	x0, x0, #0x10
    1404:	str	x0, [sp, #96]
    1408:	b	143c <rb_get_bmap_range+0xcc>
    140c:	ldr	x0, [sp, #64]
    1410:	ldr	x1, [x0, #24]
    1414:	ldr	x0, [sp, #64]
    1418:	ldr	x0, [x0, #32]
    141c:	add	x0, x1, x0
    1420:	ldr	x1, [sp, #32]
    1424:	cmp	x1, x0
    1428:	b.cc	1450 <rb_get_bmap_range+0xe0>  // b.lo, b.ul, b.last
    142c:	ldr	x0, [sp, #96]
    1430:	ldr	x0, [x0]
    1434:	add	x0, x0, #0x8
    1438:	str	x0, [sp, #96]
    143c:	ldr	x0, [sp, #96]
    1440:	ldr	x0, [x0]
    1444:	cmp	x0, #0x0
    1448:	b.ne	13cc <rb_get_bmap_range+0x5c>  // b.any
    144c:	b	1454 <rb_get_bmap_range+0xe4>
    1450:	nop
    1454:	ldr	x0, [sp, #24]
    1458:	add	x0, x0, #0x7
    145c:	lsr	x0, x0, #3
    1460:	mov	x2, x0
    1464:	mov	w1, #0x0                   	// #0
    1468:	ldr	x0, [sp, #16]
    146c:	bl	0 <memset>
    1470:	b	161c <rb_get_bmap_range+0x2ac>
    1474:	ldr	x0, [sp, #104]
    1478:	bl	0 <ext2fs_rb_next>
    147c:	str	x0, [sp, #56]
    1480:	ldr	x0, [sp, #104]
    1484:	bl	70 <node_to_extent>
    1488:	str	x0, [sp, #64]
    148c:	ldr	x0, [sp, #64]
    1490:	ldr	x0, [x0, #24]
    1494:	str	x0, [sp, #80]
    1498:	ldr	x0, [sp, #64]
    149c:	ldr	x0, [x0, #32]
    14a0:	str	x0, [sp, #88]
    14a4:	ldr	x1, [sp, #32]
    14a8:	ldr	x0, [sp, #24]
    14ac:	add	x0, x1, x0
    14b0:	ldr	x1, [sp, #80]
    14b4:	cmp	x1, x0
    14b8:	b.cs	162c <rb_get_bmap_range+0x2bc>  // b.hs, b.nlast
    14bc:	ldr	x1, [sp, #80]
    14c0:	ldr	x0, [sp, #32]
    14c4:	cmp	x1, x0
    14c8:	b.cs	1504 <rb_get_bmap_range+0x194>  // b.hs, b.nlast
    14cc:	ldr	x1, [sp, #80]
    14d0:	ldr	x0, [sp, #88]
    14d4:	add	x0, x1, x0
    14d8:	ldr	x1, [sp, #32]
    14dc:	cmp	x1, x0
    14e0:	b.hi	1610 <rb_get_bmap_range+0x2a0>  // b.pmore
    14e4:	ldr	x1, [sp, #80]
    14e8:	ldr	x0, [sp, #32]
    14ec:	sub	x0, x1, x0
    14f0:	ldr	x1, [sp, #88]
    14f4:	add	x0, x1, x0
    14f8:	str	x0, [sp, #88]
    14fc:	ldr	x0, [sp, #32]
    1500:	str	x0, [sp, #80]
    1504:	ldr	x1, [sp, #80]
    1508:	ldr	x0, [sp, #88]
    150c:	add	x1, x1, x0
    1510:	ldr	x2, [sp, #32]
    1514:	ldr	x0, [sp, #24]
    1518:	add	x0, x2, x0
    151c:	cmp	x1, x0
    1520:	b.ls	1600 <rb_get_bmap_range+0x290>  // b.plast
    1524:	ldr	x1, [sp, #32]
    1528:	ldr	x0, [sp, #24]
    152c:	add	x1, x1, x0
    1530:	ldr	x0, [sp, #80]
    1534:	sub	x0, x1, x0
    1538:	str	x0, [sp, #88]
    153c:	b	1600 <rb_get_bmap_range+0x290>
    1540:	ldr	x0, [sp, #88]
    1544:	cmp	x0, #0x7
    1548:	b.ls	15d4 <rb_get_bmap_range+0x264>  // b.plast
    154c:	ldr	x1, [sp, #80]
    1550:	ldr	x0, [sp, #32]
    1554:	sub	x0, x1, x0
    1558:	and	x0, x0, #0x7
    155c:	cmp	x0, #0x0
    1560:	b.ne	15d4 <rb_get_bmap_range+0x264>  // b.any
    1564:	ldr	x0, [sp, #88]
    1568:	lsr	x0, x0, #3
    156c:	str	w0, [sp, #52]
    1570:	ldr	x1, [sp, #80]
    1574:	ldr	x0, [sp, #32]
    1578:	sub	x0, x1, x0
    157c:	lsr	x0, x0, #3
    1580:	str	w0, [sp, #48]
    1584:	ldrsw	x0, [sp, #48]
    1588:	ldr	x1, [sp, #16]
    158c:	add	x0, x1, x0
    1590:	ldrsw	x1, [sp, #52]
    1594:	mov	x2, x1
    1598:	mov	w1, #0xff                  	// #255
    159c:	bl	0 <memset>
    15a0:	ldr	w0, [sp, #52]
    15a4:	lsl	w0, w0, #3
    15a8:	sxtw	x0, w0
    15ac:	ldr	x1, [sp, #80]
    15b0:	add	x0, x1, x0
    15b4:	str	x0, [sp, #80]
    15b8:	ldr	w0, [sp, #52]
    15bc:	lsl	w0, w0, #3
    15c0:	sxtw	x0, w0
    15c4:	ldr	x1, [sp, #88]
    15c8:	sub	x0, x1, x0
    15cc:	str	x0, [sp, #88]
    15d0:	b	1600 <rb_get_bmap_range+0x290>
    15d4:	ldr	x1, [sp, #80]
    15d8:	ldr	x0, [sp, #32]
    15dc:	sub	x0, x1, x0
    15e0:	ldr	x1, [sp, #16]
    15e4:	bl	0 <ext2fs_fast_set_bit64>
    15e8:	ldr	x0, [sp, #80]
    15ec:	add	x0, x0, #0x1
    15f0:	str	x0, [sp, #80]
    15f4:	ldr	x0, [sp, #88]
    15f8:	sub	x0, x0, #0x1
    15fc:	str	x0, [sp, #88]
    1600:	ldr	x0, [sp, #88]
    1604:	cmp	x0, #0x0
    1608:	b.ne	1540 <rb_get_bmap_range+0x1d0>  // b.any
    160c:	b	1614 <rb_get_bmap_range+0x2a4>
    1610:	nop
    1614:	ldr	x0, [sp, #56]
    1618:	str	x0, [sp, #104]
    161c:	ldr	x0, [sp, #104]
    1620:	cmp	x0, #0x0
    1624:	b.ne	1474 <rb_get_bmap_range+0x104>  // b.any
    1628:	b	1630 <rb_get_bmap_range+0x2c0>
    162c:	nop
    1630:	mov	x0, #0x0                   	// #0
    1634:	ldp	x29, x30, [sp], #112
    1638:	ret

000000000000163c <rb_clear_bmap>:
    163c:	stp	x29, x30, [sp, #-48]!
    1640:	mov	x29, sp
    1644:	str	x0, [sp, #24]
    1648:	ldr	x0, [sp, #24]
    164c:	ldr	x0, [x0, #72]
    1650:	str	x0, [sp, #40]
    1654:	ldr	x0, [sp, #40]
    1658:	bl	20c <rb_free_tree>
    165c:	ldr	x0, [sp, #40]
    1660:	str	xzr, [x0, #16]
    1664:	ldr	x0, [sp, #40]
    1668:	str	xzr, [x0, #24]
    166c:	ldr	x0, [sp, #40]
    1670:	str	xzr, [x0, #8]
    1674:	nop
    1678:	ldp	x29, x30, [sp], #48
    167c:	ret

0000000000001680 <rb_find_first_zero>:
    1680:	stp	x29, x30, [sp, #-80]!
    1684:	mov	x29, sp
    1688:	str	x0, [sp, #40]
    168c:	str	x1, [sp, #32]
    1690:	str	x2, [sp, #24]
    1694:	str	x3, [sp, #16]
    1698:	str	xzr, [sp, #64]
    169c:	ldr	x0, [sp, #40]
    16a0:	ldr	x0, [x0, #72]
    16a4:	str	x0, [sp, #56]
    16a8:	ldr	x0, [sp, #56]
    16ac:	str	x0, [sp, #72]
    16b0:	ldr	x0, [sp, #40]
    16b4:	ldr	x0, [x0, #32]
    16b8:	ldr	x1, [sp, #32]
    16bc:	sub	x0, x1, x0
    16c0:	str	x0, [sp, #32]
    16c4:	ldr	x0, [sp, #40]
    16c8:	ldr	x0, [x0, #32]
    16cc:	ldr	x1, [sp, #24]
    16d0:	sub	x0, x1, x0
    16d4:	str	x0, [sp, #24]
    16d8:	ldr	x1, [sp, #32]
    16dc:	ldr	x0, [sp, #24]
    16e0:	cmp	x1, x0
    16e4:	b.ls	16f0 <rb_find_first_zero+0x70>  // b.plast
    16e8:	mov	x0, #0x16                  	// #22
    16ec:	b	1800 <rb_find_first_zero+0x180>
    16f0:	ldr	x0, [sp, #56]
    16f4:	bl	0 <ext2fs_rb_empty_root>
    16f8:	cmp	w0, #0x0
    16fc:	b.eq	17d4 <rb_find_first_zero+0x154>  // b.none
    1700:	mov	x0, #0x2                   	// #2
    1704:	b	1800 <rb_find_first_zero+0x180>
    1708:	ldr	x0, [sp, #72]
    170c:	ldr	x0, [x0]
    1710:	str	x0, [sp, #64]
    1714:	ldr	x0, [sp, #64]
    1718:	bl	70 <node_to_extent>
    171c:	str	x0, [sp, #48]
    1720:	ldr	x0, [sp, #48]
    1724:	ldr	x0, [x0, #24]
    1728:	ldr	x1, [sp, #32]
    172c:	cmp	x1, x0
    1730:	b.cs	1748 <rb_find_first_zero+0xc8>  // b.hs, b.nlast
    1734:	ldr	x0, [sp, #72]
    1738:	ldr	x0, [x0]
    173c:	add	x0, x0, #0x10
    1740:	str	x0, [sp, #72]
    1744:	b	17d4 <rb_find_first_zero+0x154>
    1748:	ldr	x0, [sp, #48]
    174c:	ldr	x1, [x0, #24]
    1750:	ldr	x0, [sp, #48]
    1754:	ldr	x0, [x0, #32]
    1758:	add	x0, x1, x0
    175c:	ldr	x1, [sp, #32]
    1760:	cmp	x1, x0
    1764:	b.cc	177c <rb_find_first_zero+0xfc>  // b.lo, b.ul, b.last
    1768:	ldr	x0, [sp, #72]
    176c:	ldr	x0, [x0]
    1770:	add	x0, x0, #0x8
    1774:	str	x0, [sp, #72]
    1778:	b	17d4 <rb_find_first_zero+0x154>
    177c:	ldr	x0, [sp, #48]
    1780:	ldr	x1, [x0, #24]
    1784:	ldr	x0, [sp, #48]
    1788:	ldr	x0, [x0, #32]
    178c:	add	x0, x1, x0
    1790:	ldr	x1, [sp, #24]
    1794:	cmp	x1, x0
    1798:	b.cc	17cc <rb_find_first_zero+0x14c>  // b.lo, b.ul, b.last
    179c:	ldr	x0, [sp, #48]
    17a0:	ldr	x1, [x0, #24]
    17a4:	ldr	x0, [sp, #48]
    17a8:	ldr	x0, [x0, #32]
    17ac:	add	x1, x1, x0
    17b0:	ldr	x0, [sp, #40]
    17b4:	ldr	x0, [x0, #32]
    17b8:	add	x1, x1, x0
    17bc:	ldr	x0, [sp, #16]
    17c0:	str	x1, [x0]
    17c4:	mov	x0, #0x0                   	// #0
    17c8:	b	1800 <rb_find_first_zero+0x180>
    17cc:	mov	x0, #0x2                   	// #2
    17d0:	b	1800 <rb_find_first_zero+0x180>
    17d4:	ldr	x0, [sp, #72]
    17d8:	ldr	x0, [x0]
    17dc:	cmp	x0, #0x0
    17e0:	b.ne	1708 <rb_find_first_zero+0x88>  // b.any
    17e4:	ldr	x0, [sp, #40]
    17e8:	ldr	x1, [x0, #32]
    17ec:	ldr	x0, [sp, #32]
    17f0:	add	x1, x1, x0
    17f4:	ldr	x0, [sp, #16]
    17f8:	str	x1, [x0]
    17fc:	mov	x0, #0x0                   	// #0
    1800:	ldp	x29, x30, [sp], #80
    1804:	ret

0000000000001808 <rb_find_first_set>:
    1808:	stp	x29, x30, [sp, #-96]!
    180c:	mov	x29, sp
    1810:	str	x0, [sp, #40]
    1814:	str	x1, [sp, #32]
    1818:	str	x2, [sp, #24]
    181c:	str	x3, [sp, #16]
    1820:	str	xzr, [sp, #88]
    1824:	ldr	x0, [sp, #40]
    1828:	ldr	x0, [x0, #72]
    182c:	str	x0, [sp, #64]
    1830:	ldr	x0, [sp, #64]
    1834:	str	x0, [sp, #80]
    1838:	ldr	x0, [sp, #40]
    183c:	ldr	x0, [x0, #32]
    1840:	ldr	x1, [sp, #32]
    1844:	sub	x0, x1, x0
    1848:	str	x0, [sp, #32]
    184c:	ldr	x0, [sp, #40]
    1850:	ldr	x0, [x0, #32]
    1854:	ldr	x1, [sp, #24]
    1858:	sub	x0, x1, x0
    185c:	str	x0, [sp, #24]
    1860:	ldr	x1, [sp, #32]
    1864:	ldr	x0, [sp, #24]
    1868:	cmp	x1, x0
    186c:	b.ls	1878 <rb_find_first_set+0x70>  // b.plast
    1870:	mov	x0, #0x16                  	// #22
    1874:	b	19c4 <rb_find_first_set+0x1bc>
    1878:	ldr	x0, [sp, #64]
    187c:	bl	0 <ext2fs_rb_empty_root>
    1880:	cmp	w0, #0x0
    1884:	b.eq	1924 <rb_find_first_set+0x11c>  // b.none
    1888:	mov	x0, #0x2                   	// #2
    188c:	b	19c4 <rb_find_first_set+0x1bc>
    1890:	ldr	x0, [sp, #80]
    1894:	ldr	x0, [x0]
    1898:	str	x0, [sp, #88]
    189c:	ldr	x0, [sp, #88]
    18a0:	bl	70 <node_to_extent>
    18a4:	str	x0, [sp, #72]
    18a8:	ldr	x0, [sp, #72]
    18ac:	ldr	x0, [x0, #24]
    18b0:	ldr	x1, [sp, #32]
    18b4:	cmp	x1, x0
    18b8:	b.cs	18d0 <rb_find_first_set+0xc8>  // b.hs, b.nlast
    18bc:	ldr	x0, [sp, #80]
    18c0:	ldr	x0, [x0]
    18c4:	add	x0, x0, #0x10
    18c8:	str	x0, [sp, #80]
    18cc:	b	1924 <rb_find_first_set+0x11c>
    18d0:	ldr	x0, [sp, #72]
    18d4:	ldr	x1, [x0, #24]
    18d8:	ldr	x0, [sp, #72]
    18dc:	ldr	x0, [x0, #32]
    18e0:	add	x0, x1, x0
    18e4:	ldr	x1, [sp, #32]
    18e8:	cmp	x1, x0
    18ec:	b.cc	1904 <rb_find_first_set+0xfc>  // b.lo, b.ul, b.last
    18f0:	ldr	x0, [sp, #80]
    18f4:	ldr	x0, [x0]
    18f8:	add	x0, x0, #0x8
    18fc:	str	x0, [sp, #80]
    1900:	b	1924 <rb_find_first_set+0x11c>
    1904:	ldr	x0, [sp, #40]
    1908:	ldr	x1, [x0, #32]
    190c:	ldr	x0, [sp, #32]
    1910:	add	x1, x1, x0
    1914:	ldr	x0, [sp, #16]
    1918:	str	x1, [x0]
    191c:	mov	x0, #0x0                   	// #0
    1920:	b	19c4 <rb_find_first_set+0x1bc>
    1924:	ldr	x0, [sp, #80]
    1928:	ldr	x0, [x0]
    192c:	cmp	x0, #0x0
    1930:	b.ne	1890 <rb_find_first_set+0x88>  // b.any
    1934:	ldr	x0, [sp, #88]
    1938:	str	x0, [sp, #56]
    193c:	ldr	x0, [sp, #56]
    1940:	bl	70 <node_to_extent>
    1944:	str	x0, [sp, #72]
    1948:	ldr	x0, [sp, #72]
    194c:	ldr	x0, [x0, #24]
    1950:	ldr	x1, [sp, #32]
    1954:	cmp	x1, x0
    1958:	b.ls	1988 <rb_find_first_set+0x180>  // b.plast
    195c:	ldr	x0, [sp, #56]
    1960:	bl	0 <ext2fs_rb_next>
    1964:	str	x0, [sp, #56]
    1968:	ldr	x0, [sp, #56]
    196c:	cmp	x0, #0x0
    1970:	b.ne	197c <rb_find_first_set+0x174>  // b.any
    1974:	mov	x0, #0x2                   	// #2
    1978:	b	19c4 <rb_find_first_set+0x1bc>
    197c:	ldr	x0, [sp, #56]
    1980:	bl	70 <node_to_extent>
    1984:	str	x0, [sp, #72]
    1988:	ldr	x0, [sp, #72]
    198c:	ldr	x0, [x0, #24]
    1990:	ldr	x1, [sp, #24]
    1994:	cmp	x1, x0
    1998:	b.cc	19c0 <rb_find_first_set+0x1b8>  // b.lo, b.ul, b.last
    199c:	ldr	x0, [sp, #72]
    19a0:	ldr	x1, [x0, #24]
    19a4:	ldr	x0, [sp, #40]
    19a8:	ldr	x0, [x0, #32]
    19ac:	add	x1, x1, x0
    19b0:	ldr	x0, [sp, #16]
    19b4:	str	x1, [x0]
    19b8:	mov	x0, #0x0                   	// #0
    19bc:	b	19c4 <rb_find_first_set+0x1bc>
    19c0:	mov	x0, #0x2                   	// #2
    19c4:	ldp	x29, x30, [sp], #96
    19c8:	ret

00000000000019cc <rb_print_stats>:
    19cc:	stp	x29, x30, [sp, #-112]!
    19d0:	mov	x29, sp
    19d4:	str	x0, [sp, #24]
    19d8:	str	xzr, [sp, #104]
    19dc:	str	xzr, [sp, #96]
    19e0:	str	xzr, [sp, #88]
    19e4:	mov	x0, #0xffffffffffffffff    	// #-1
    19e8:	str	x0, [sp, #80]
    19ec:	str	xzr, [sp, #72]
    19f0:	str	xzr, [sp, #64]
    19f4:	ldr	x0, [sp, #24]
    19f8:	ldr	x0, [x0, #72]
    19fc:	str	x0, [sp, #56]
    1a00:	ldr	x0, [sp, #56]
    1a04:	bl	0 <ext2fs_rb_first>
    1a08:	str	x0, [sp, #104]
    1a0c:	b	1a88 <rb_print_stats+0xbc>
    1a10:	ldr	x0, [sp, #104]
    1a14:	bl	70 <node_to_extent>
    1a18:	str	x0, [sp, #40]
    1a1c:	ldr	x0, [sp, #96]
    1a20:	add	x0, x0, #0x1
    1a24:	str	x0, [sp, #96]
    1a28:	ldr	x0, [sp, #40]
    1a2c:	ldr	x0, [x0, #32]
    1a30:	ldr	x1, [sp, #88]
    1a34:	cmp	x1, x0
    1a38:	b.cs	1a48 <rb_print_stats+0x7c>  // b.hs, b.nlast
    1a3c:	ldr	x0, [sp, #40]
    1a40:	ldr	x0, [x0, #32]
    1a44:	str	x0, [sp, #88]
    1a48:	ldr	x0, [sp, #40]
    1a4c:	ldr	x0, [x0, #32]
    1a50:	ldr	x1, [sp, #80]
    1a54:	cmp	x1, x0
    1a58:	b.ls	1a68 <rb_print_stats+0x9c>  // b.plast
    1a5c:	ldr	x0, [sp, #40]
    1a60:	ldr	x0, [x0, #32]
    1a64:	str	x0, [sp, #80]
    1a68:	ldr	x0, [sp, #40]
    1a6c:	ldr	x0, [x0, #32]
    1a70:	ldr	x1, [sp, #72]
    1a74:	add	x0, x1, x0
    1a78:	str	x0, [sp, #72]
    1a7c:	ldr	x0, [sp, #104]
    1a80:	bl	0 <ext2fs_rb_next>
    1a84:	str	x0, [sp, #104]
    1a88:	ldr	x0, [sp, #104]
    1a8c:	cmp	x0, #0x0
    1a90:	b.ne	1a10 <rb_print_stats+0x44>  // b.any
    1a94:	ldr	x0, [sp, #96]
    1a98:	cmp	x0, #0x0
    1a9c:	b.eq	1ab0 <rb_print_stats+0xe4>  // b.none
    1aa0:	ldr	x1, [sp, #72]
    1aa4:	ldr	x0, [sp, #96]
    1aa8:	udiv	x0, x1, x0
    1aac:	str	x0, [sp, #64]
    1ab0:	ldr	x0, [sp, #80]
    1ab4:	cmn	x0, #0x1
    1ab8:	b.ne	1ac0 <rb_print_stats+0xf4>  // b.any
    1abc:	str	xzr, [sp, #80]
    1ac0:	ldr	x1, [sp, #96]
    1ac4:	mov	x0, x1
    1ac8:	lsl	x0, x0, #2
    1acc:	add	x0, x0, x1
    1ad0:	lsl	x0, x0, #3
    1ad4:	fmov	d0, x0
    1ad8:	shl	d0, d0, #3
    1adc:	ucvtf	d1, d0
    1ae0:	ldr	x0, [sp, #24]
    1ae4:	ldr	x1, [x0, #48]
    1ae8:	ldr	x0, [sp, #24]
    1aec:	ldr	x0, [x0, #32]
    1af0:	sub	x0, x1, x0
    1af4:	fmov	d0, x0
    1af8:	ucvtf	d0, d0
    1afc:	fdiv	d0, d1, d0
    1b00:	str	d0, [sp, #48]
    1b04:	adrp	x0, 0 <stderr>
    1b08:	add	x0, x0, #0x0
    1b0c:	ldr	x4, [x0]
    1b10:	ldr	x1, [sp, #96]
    1b14:	mov	x0, x1
    1b18:	lsl	x0, x0, #2
    1b1c:	add	x0, x0, x1
    1b20:	lsl	x0, x0, #3
    1b24:	add	x0, x0, #0x20
    1b28:	mov	x3, x0
    1b2c:	ldr	x2, [sp, #96]
    1b30:	adrp	x0, 0 <ext2fs_rb_empty_root>
    1b34:	add	x1, x0, #0x0
    1b38:	mov	x0, x4
    1b3c:	bl	0 <fprintf>
    1b40:	adrp	x0, 0 <stderr>
    1b44:	add	x0, x0, #0x0
    1b48:	ldr	x3, [x0]
    1b4c:	ldr	x2, [sp, #80]
    1b50:	adrp	x0, 0 <ext2fs_rb_empty_root>
    1b54:	add	x1, x0, #0x0
    1b58:	mov	x0, x3
    1b5c:	bl	0 <fprintf>
    1b60:	adrp	x0, 0 <stderr>
    1b64:	add	x0, x0, #0x0
    1b68:	ldr	x4, [x0]
    1b6c:	ldr	x3, [sp, #64]
    1b70:	ldr	x2, [sp, #88]
    1b74:	adrp	x0, 0 <ext2fs_rb_empty_root>
    1b78:	add	x1, x0, #0x0
    1b7c:	mov	x0, x4
    1b80:	bl	0 <fprintf>
    1b84:	adrp	x0, 0 <stderr>
    1b88:	add	x0, x0, #0x0
    1b8c:	ldr	x4, [x0]
    1b90:	ldr	x0, [sp, #24]
    1b94:	ldr	x1, [x0, #48]
    1b98:	ldr	x0, [sp, #24]
    1b9c:	ldr	x0, [x0, #32]
    1ba0:	sub	x0, x1, x0
    1ba4:	mov	x3, x0
    1ba8:	ldr	x2, [sp, #72]
    1bac:	adrp	x0, 0 <ext2fs_rb_empty_root>
    1bb0:	add	x1, x0, #0x0
    1bb4:	mov	x0, x4
    1bb8:	bl	0 <fprintf>
    1bbc:	adrp	x0, 0 <stderr>
    1bc0:	add	x0, x0, #0x0
    1bc4:	ldr	x2, [x0]
    1bc8:	ldr	d0, [sp, #48]
    1bcc:	adrp	x0, 0 <ext2fs_rb_empty_root>
    1bd0:	add	x1, x0, #0x0
    1bd4:	mov	x0, x2
    1bd8:	bl	0 <fprintf>
    1bdc:	nop
    1be0:	ldp	x29, x30, [sp], #112
    1be4:	ret

blknum.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_large_file>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x2
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_set_feature_large_file>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	orr	w1, w0, #0x2
      3c:	ldr	x0, [sp, #8]
      40:	str	w1, [x0, #100]
      44:	nop
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_huge_file>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #100]
      60:	and	w0, w0, #0x8
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_has_feature_64bit>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #96]
      88:	and	w0, w0, #0x80
      8c:	cmp	w0, #0x0
      90:	cset	w0, ne  // ne = any
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_needs_large_file_feature>:
      a0:	sub	sp, sp, #0x10
      a4:	str	x0, [sp, #8]
      a8:	ldr	x1, [sp, #8]
      ac:	mov	x0, #0x7fffffff            	// #2147483647
      b0:	cmp	x1, x0
      b4:	cset	w0, hi  // hi = pmore
      b8:	and	w0, w0, #0xff
      bc:	add	sp, sp, #0x10
      c0:	ret

00000000000000c4 <ext2fs_group_of_blk2>:
      c4:	sub	sp, sp, #0x10
      c8:	str	x0, [sp, #8]
      cc:	str	x1, [sp]
      d0:	ldr	x0, [sp, #8]
      d4:	ldr	x0, [x0, #32]
      d8:	ldr	w0, [x0, #20]
      dc:	mov	w0, w0
      e0:	ldr	x1, [sp]
      e4:	sub	x1, x1, x0
      e8:	ldr	x0, [sp, #8]
      ec:	ldr	x0, [x0, #32]
      f0:	ldr	w0, [x0, #32]
      f4:	mov	w0, w0
      f8:	udiv	x0, x1, x0
      fc:	add	sp, sp, #0x10
     100:	ret

0000000000000104 <ext2fs_group_first_block2>:
     104:	sub	sp, sp, #0x10
     108:	str	x0, [sp, #8]
     10c:	str	w1, [sp, #4]
     110:	ldr	x0, [sp, #8]
     114:	ldr	x0, [x0, #32]
     118:	ldr	w0, [x0, #20]
     11c:	mov	w1, w0
     120:	ldr	x0, [sp, #8]
     124:	ldr	x0, [x0, #32]
     128:	ldr	w0, [x0, #32]
     12c:	mov	w2, w0
     130:	ldr	w0, [sp, #4]
     134:	mul	x0, x2, x0
     138:	add	x0, x1, x0
     13c:	add	sp, sp, #0x10
     140:	ret

0000000000000144 <ext2fs_group_last_block2>:
     144:	stp	x29, x30, [sp, #-32]!
     148:	mov	x29, sp
     14c:	str	x0, [sp, #24]
     150:	str	w1, [sp, #20]
     154:	ldr	x0, [sp, #24]
     158:	ldr	w0, [x0, #48]
     15c:	sub	w0, w0, #0x1
     160:	ldr	w1, [sp, #20]
     164:	cmp	w1, w0
     168:	b.ne	180 <ext2fs_group_last_block2+0x3c>  // b.any
     16c:	ldr	x0, [sp, #24]
     170:	ldr	x0, [x0, #32]
     174:	bl	3d8 <ext2fs_blocks_count>
     178:	sub	x0, x0, #0x1
     17c:	b	1a8 <ext2fs_group_last_block2+0x64>
     180:	ldr	w1, [sp, #20]
     184:	ldr	x0, [sp, #24]
     188:	bl	104 <ext2fs_group_first_block2>
     18c:	mov	x1, x0
     190:	ldr	x0, [sp, #24]
     194:	ldr	x0, [x0, #32]
     198:	ldr	w0, [x0, #32]
     19c:	sub	w0, w0, #0x1
     1a0:	mov	w0, w0
     1a4:	add	x0, x1, x0
     1a8:	ldp	x29, x30, [sp], #32
     1ac:	ret

00000000000001b0 <ext2fs_group_blocks_count>:
     1b0:	stp	x29, x30, [sp, #-48]!
     1b4:	mov	x29, sp
     1b8:	str	x0, [sp, #24]
     1bc:	str	w1, [sp, #20]
     1c0:	ldr	x0, [sp, #24]
     1c4:	ldr	w0, [x0, #48]
     1c8:	sub	w0, w0, #0x1
     1cc:	ldr	w1, [sp, #20]
     1d0:	cmp	w1, w0
     1d4:	b.ne	23c <ext2fs_group_blocks_count+0x8c>  // b.any
     1d8:	ldr	x0, [sp, #24]
     1dc:	ldr	x0, [x0, #32]
     1e0:	bl	3d8 <ext2fs_blocks_count>
     1e4:	mov	x1, x0
     1e8:	ldr	x0, [sp, #24]
     1ec:	ldr	x0, [x0, #32]
     1f0:	ldr	w0, [x0, #20]
     1f4:	mov	w0, w0
     1f8:	sub	x0, x1, x0
     1fc:	ldr	x1, [sp, #24]
     200:	ldr	x1, [x1, #32]
     204:	ldr	w1, [x1, #32]
     208:	mov	w1, w1
     20c:	udiv	x2, x0, x1
     210:	mul	x1, x2, x1
     214:	sub	x0, x0, x1
     218:	str	w0, [sp, #44]
     21c:	ldr	w0, [sp, #44]
     220:	cmp	w0, #0x0
     224:	b.ne	24c <ext2fs_group_blocks_count+0x9c>  // b.any
     228:	ldr	x0, [sp, #24]
     22c:	ldr	x0, [x0, #32]
     230:	ldr	w0, [x0, #32]
     234:	str	w0, [sp, #44]
     238:	b	24c <ext2fs_group_blocks_count+0x9c>
     23c:	ldr	x0, [sp, #24]
     240:	ldr	x0, [x0, #32]
     244:	ldr	w0, [x0, #32]
     248:	str	w0, [sp, #44]
     24c:	ldr	w0, [sp, #44]
     250:	ldp	x29, x30, [sp], #48
     254:	ret

0000000000000258 <ext2fs_inode_data_blocks2>:
     258:	stp	x29, x30, [sp, #-48]!
     25c:	mov	x29, sp
     260:	str	x19, [sp, #16]
     264:	str	x0, [sp, #40]
     268:	str	x1, [sp, #32]
     26c:	ldr	x0, [sp, #32]
     270:	ldr	w0, [x0, #28]
     274:	mov	w19, w0
     278:	ldr	x0, [sp, #40]
     27c:	ldr	x0, [x0, #32]
     280:	bl	50 <ext2fs_has_feature_huge_file>
     284:	cmp	w0, #0x0
     288:	b.eq	2a0 <ext2fs_inode_data_blocks2+0x48>  // b.none
     28c:	ldr	x0, [sp, #32]
     290:	ldrh	w0, [x0, #116]
     294:	and	x0, x0, #0xffff
     298:	lsl	x0, x0, #32
     29c:	b	2a4 <ext2fs_inode_data_blocks2+0x4c>
     2a0:	mov	x0, #0x0                   	// #0
     2a4:	orr	x1, x0, x19
     2a8:	ldr	x0, [sp, #32]
     2ac:	ldr	w0, [x0, #104]
     2b0:	cmp	w0, #0x0
     2b4:	b.eq	2d8 <ext2fs_inode_data_blocks2+0x80>  // b.none
     2b8:	ldr	x0, [sp, #40]
     2bc:	ldr	x0, [x0, #32]
     2c0:	ldr	w0, [x0, #28]
     2c4:	mov	w2, #0x400                 	// #1024
     2c8:	lsl	w0, w2, w0
     2cc:	asr	w0, w0, #9
     2d0:	sxtw	x0, w0
     2d4:	b	2dc <ext2fs_inode_data_blocks2+0x84>
     2d8:	mov	x0, #0x0                   	// #0
     2dc:	sub	x0, x1, x0
     2e0:	ldr	x19, [sp, #16]
     2e4:	ldp	x29, x30, [sp], #48
     2e8:	ret

00000000000002ec <ext2fs_inode_i_blocks>:
     2ec:	stp	x29, x30, [sp, #-48]!
     2f0:	mov	x29, sp
     2f4:	str	x19, [sp, #16]
     2f8:	str	x0, [sp, #40]
     2fc:	str	x1, [sp, #32]
     300:	ldr	x0, [sp, #32]
     304:	ldr	w0, [x0, #28]
     308:	mov	w19, w0
     30c:	ldr	x0, [sp, #40]
     310:	ldr	x0, [x0, #32]
     314:	bl	50 <ext2fs_has_feature_huge_file>
     318:	cmp	w0, #0x0
     31c:	b.eq	334 <ext2fs_inode_i_blocks+0x48>  // b.none
     320:	ldr	x0, [sp, #32]
     324:	ldrh	w0, [x0, #116]
     328:	and	x0, x0, #0xffff
     32c:	lsl	x0, x0, #32
     330:	b	338 <ext2fs_inode_i_blocks+0x4c>
     334:	mov	x0, #0x0                   	// #0
     338:	orr	x0, x0, x19
     33c:	ldr	x19, [sp, #16]
     340:	ldp	x29, x30, [sp], #48
     344:	ret

0000000000000348 <ext2fs_get_stat_i_blocks>:
     348:	stp	x29, x30, [sp, #-48]!
     34c:	mov	x29, sp
     350:	str	x0, [sp, #24]
     354:	str	x1, [sp, #16]
     358:	ldr	x0, [sp, #16]
     35c:	ldr	w0, [x0, #28]
     360:	mov	w0, w0
     364:	str	x0, [sp, #40]
     368:	ldr	x0, [sp, #24]
     36c:	ldr	x0, [x0, #32]
     370:	bl	50 <ext2fs_has_feature_huge_file>
     374:	cmp	w0, #0x0
     378:	b.eq	3cc <ext2fs_get_stat_i_blocks+0x84>  // b.none
     37c:	ldr	x0, [sp, #16]
     380:	ldrh	w0, [x0, #116]
     384:	and	x0, x0, #0xffff
     388:	lsl	x0, x0, #32
     38c:	mov	x1, x0
     390:	ldr	x0, [sp, #40]
     394:	add	x0, x0, x1
     398:	str	x0, [sp, #40]
     39c:	ldr	x0, [sp, #16]
     3a0:	ldr	w0, [x0, #32]
     3a4:	and	w0, w0, #0x40000
     3a8:	cmp	w0, #0x0
     3ac:	b.eq	3cc <ext2fs_get_stat_i_blocks+0x84>  // b.none
     3b0:	ldr	x0, [sp, #24]
     3b4:	ldr	w0, [x0, #40]
     3b8:	lsr	w0, w0, #9
     3bc:	mov	w0, w0
     3c0:	ldr	x1, [sp, #40]
     3c4:	mul	x0, x1, x0
     3c8:	str	x0, [sp, #40]
     3cc:	ldr	x0, [sp, #40]
     3d0:	ldp	x29, x30, [sp], #48
     3d4:	ret

00000000000003d8 <ext2fs_blocks_count>:
     3d8:	stp	x29, x30, [sp, #-48]!
     3dc:	mov	x29, sp
     3e0:	str	x19, [sp, #16]
     3e4:	str	x0, [sp, #40]
     3e8:	ldr	x0, [sp, #40]
     3ec:	ldr	w0, [x0, #4]
     3f0:	mov	w19, w0
     3f4:	ldr	x0, [sp, #40]
     3f8:	bl	78 <ext2fs_has_feature_64bit>
     3fc:	cmp	w0, #0x0
     400:	b.eq	418 <ext2fs_blocks_count+0x40>  // b.none
     404:	ldr	x0, [sp, #40]
     408:	ldr	w0, [x0, #336]
     40c:	mov	w0, w0
     410:	lsl	x0, x0, #32
     414:	b	41c <ext2fs_blocks_count+0x44>
     418:	mov	x0, #0x0                   	// #0
     41c:	orr	x0, x0, x19
     420:	ldr	x19, [sp, #16]
     424:	ldp	x29, x30, [sp], #48
     428:	ret

000000000000042c <ext2fs_blocks_count_set>:
     42c:	stp	x29, x30, [sp, #-32]!
     430:	mov	x29, sp
     434:	str	x0, [sp, #24]
     438:	str	x1, [sp, #16]
     43c:	ldr	x0, [sp, #16]
     440:	mov	w1, w0
     444:	ldr	x0, [sp, #24]
     448:	str	w1, [x0, #4]
     44c:	ldr	x0, [sp, #24]
     450:	bl	78 <ext2fs_has_feature_64bit>
     454:	cmp	w0, #0x0
     458:	b.eq	470 <ext2fs_blocks_count_set+0x44>  // b.none
     45c:	ldr	x0, [sp, #16]
     460:	lsr	x0, x0, #32
     464:	mov	w1, w0
     468:	ldr	x0, [sp, #24]
     46c:	str	w1, [x0, #336]
     470:	nop
     474:	ldp	x29, x30, [sp], #32
     478:	ret

000000000000047c <ext2fs_blocks_count_add>:
     47c:	stp	x29, x30, [sp, #-48]!
     480:	mov	x29, sp
     484:	str	x0, [sp, #24]
     488:	str	x1, [sp, #16]
     48c:	ldr	x0, [sp, #24]
     490:	bl	3d8 <ext2fs_blocks_count>
     494:	mov	x1, x0
     498:	ldr	x0, [sp, #16]
     49c:	add	x0, x0, x1
     4a0:	str	x0, [sp, #40]
     4a4:	ldr	x1, [sp, #40]
     4a8:	ldr	x0, [sp, #24]
     4ac:	bl	42c <ext2fs_blocks_count_set>
     4b0:	nop
     4b4:	ldp	x29, x30, [sp], #48
     4b8:	ret

00000000000004bc <ext2fs_r_blocks_count>:
     4bc:	stp	x29, x30, [sp, #-48]!
     4c0:	mov	x29, sp
     4c4:	str	x19, [sp, #16]
     4c8:	str	x0, [sp, #40]
     4cc:	ldr	x0, [sp, #40]
     4d0:	ldr	w0, [x0, #8]
     4d4:	mov	w19, w0
     4d8:	ldr	x0, [sp, #40]
     4dc:	bl	78 <ext2fs_has_feature_64bit>
     4e0:	cmp	w0, #0x0
     4e4:	b.eq	4fc <ext2fs_r_blocks_count+0x40>  // b.none
     4e8:	ldr	x0, [sp, #40]
     4ec:	ldr	w0, [x0, #340]
     4f0:	mov	w0, w0
     4f4:	lsl	x0, x0, #32
     4f8:	b	500 <ext2fs_r_blocks_count+0x44>
     4fc:	mov	x0, #0x0                   	// #0
     500:	orr	x0, x0, x19
     504:	ldr	x19, [sp, #16]
     508:	ldp	x29, x30, [sp], #48
     50c:	ret

0000000000000510 <ext2fs_r_blocks_count_set>:
     510:	stp	x29, x30, [sp, #-32]!
     514:	mov	x29, sp
     518:	str	x0, [sp, #24]
     51c:	str	x1, [sp, #16]
     520:	ldr	x0, [sp, #16]
     524:	mov	w1, w0
     528:	ldr	x0, [sp, #24]
     52c:	str	w1, [x0, #8]
     530:	ldr	x0, [sp, #24]
     534:	bl	78 <ext2fs_has_feature_64bit>
     538:	cmp	w0, #0x0
     53c:	b.eq	554 <ext2fs_r_blocks_count_set+0x44>  // b.none
     540:	ldr	x0, [sp, #16]
     544:	lsr	x0, x0, #32
     548:	mov	w1, w0
     54c:	ldr	x0, [sp, #24]
     550:	str	w1, [x0, #340]
     554:	nop
     558:	ldp	x29, x30, [sp], #32
     55c:	ret

0000000000000560 <ext2fs_r_blocks_count_add>:
     560:	stp	x29, x30, [sp, #-48]!
     564:	mov	x29, sp
     568:	str	x0, [sp, #24]
     56c:	str	x1, [sp, #16]
     570:	ldr	x0, [sp, #24]
     574:	bl	4bc <ext2fs_r_blocks_count>
     578:	mov	x1, x0
     57c:	ldr	x0, [sp, #16]
     580:	add	x0, x0, x1
     584:	str	x0, [sp, #40]
     588:	ldr	x1, [sp, #40]
     58c:	ldr	x0, [sp, #24]
     590:	bl	510 <ext2fs_r_blocks_count_set>
     594:	nop
     598:	ldp	x29, x30, [sp], #48
     59c:	ret

00000000000005a0 <ext2fs_free_blocks_count>:
     5a0:	stp	x29, x30, [sp, #-48]!
     5a4:	mov	x29, sp
     5a8:	str	x19, [sp, #16]
     5ac:	str	x0, [sp, #40]
     5b0:	ldr	x0, [sp, #40]
     5b4:	ldr	w0, [x0, #12]
     5b8:	mov	w19, w0
     5bc:	ldr	x0, [sp, #40]
     5c0:	bl	78 <ext2fs_has_feature_64bit>
     5c4:	cmp	w0, #0x0
     5c8:	b.eq	5e0 <ext2fs_free_blocks_count+0x40>  // b.none
     5cc:	ldr	x0, [sp, #40]
     5d0:	ldr	w0, [x0, #344]
     5d4:	mov	w0, w0
     5d8:	lsl	x0, x0, #32
     5dc:	b	5e4 <ext2fs_free_blocks_count+0x44>
     5e0:	mov	x0, #0x0                   	// #0
     5e4:	orr	x0, x0, x19
     5e8:	ldr	x19, [sp, #16]
     5ec:	ldp	x29, x30, [sp], #48
     5f0:	ret

00000000000005f4 <ext2fs_free_blocks_count_set>:
     5f4:	stp	x29, x30, [sp, #-32]!
     5f8:	mov	x29, sp
     5fc:	str	x0, [sp, #24]
     600:	str	x1, [sp, #16]
     604:	ldr	x0, [sp, #16]
     608:	mov	w1, w0
     60c:	ldr	x0, [sp, #24]
     610:	str	w1, [x0, #12]
     614:	ldr	x0, [sp, #24]
     618:	bl	78 <ext2fs_has_feature_64bit>
     61c:	cmp	w0, #0x0
     620:	b.eq	638 <ext2fs_free_blocks_count_set+0x44>  // b.none
     624:	ldr	x0, [sp, #16]
     628:	lsr	x0, x0, #32
     62c:	mov	w1, w0
     630:	ldr	x0, [sp, #24]
     634:	str	w1, [x0, #344]
     638:	nop
     63c:	ldp	x29, x30, [sp], #32
     640:	ret

0000000000000644 <ext2fs_free_blocks_count_add>:
     644:	stp	x29, x30, [sp, #-48]!
     648:	mov	x29, sp
     64c:	str	x0, [sp, #24]
     650:	str	x1, [sp, #16]
     654:	ldr	x0, [sp, #24]
     658:	bl	5a0 <ext2fs_free_blocks_count>
     65c:	mov	x1, x0
     660:	ldr	x0, [sp, #16]
     664:	add	x0, x0, x1
     668:	str	x0, [sp, #40]
     66c:	ldr	x1, [sp, #40]
     670:	ldr	x0, [sp, #24]
     674:	bl	5f4 <ext2fs_free_blocks_count_set>
     678:	nop
     67c:	ldp	x29, x30, [sp], #48
     680:	ret

0000000000000684 <ext2fs_group_desc>:
     684:	sub	sp, sp, #0x30
     688:	str	x0, [sp, #24]
     68c:	str	x1, [sp, #16]
     690:	str	w2, [sp, #12]
     694:	ldr	x0, [sp, #24]
     698:	ldr	x0, [x0, #32]
     69c:	ldr	w0, [x0, #96]
     6a0:	and	w0, w0, #0x80
     6a4:	cmp	w0, #0x0
     6a8:	b.eq	6c0 <ext2fs_group_desc+0x3c>  // b.none
     6ac:	ldr	x0, [sp, #24]
     6b0:	ldr	x0, [x0, #32]
     6b4:	ldrh	w0, [x0, #254]
     6b8:	and	w0, w0, #0xfffffff8
     6bc:	b	6c4 <ext2fs_group_desc+0x40>
     6c0:	mov	w0, #0x20                  	// #32
     6c4:	str	w0, [sp, #44]
     6c8:	ldr	w1, [sp, #44]
     6cc:	ldr	w0, [sp, #12]
     6d0:	mul	w0, w1, w0
     6d4:	mov	w0, w0
     6d8:	ldr	x1, [sp, #16]
     6dc:	add	x0, x1, x0
     6e0:	add	sp, sp, #0x30
     6e4:	ret

00000000000006e8 <ext4fs_group_desc>:
     6e8:	stp	x29, x30, [sp, #-48]!
     6ec:	mov	x29, sp
     6f0:	str	x0, [sp, #40]
     6f4:	str	x1, [sp, #32]
     6f8:	str	w2, [sp, #28]
     6fc:	ldr	w2, [sp, #28]
     700:	ldr	x1, [sp, #32]
     704:	ldr	x0, [sp, #40]
     708:	bl	684 <ext2fs_group_desc>
     70c:	ldp	x29, x30, [sp], #48
     710:	ret

0000000000000714 <ext2fs_block_bitmap_checksum>:
     714:	stp	x29, x30, [sp, #-48]!
     718:	mov	x29, sp
     71c:	str	x0, [sp, #24]
     720:	str	w1, [sp, #20]
     724:	ldr	x0, [sp, #24]
     728:	ldr	x0, [x0, #64]
     72c:	ldr	w2, [sp, #20]
     730:	mov	x1, x0
     734:	ldr	x0, [sp, #24]
     738:	bl	6e8 <ext4fs_group_desc>
     73c:	str	x0, [sp, #32]
     740:	ldr	x0, [sp, #32]
     744:	ldrh	w0, [x0, #24]
     748:	str	w0, [sp, #44]
     74c:	ldr	x0, [sp, #24]
     750:	ldr	x0, [x0, #32]
     754:	ldr	w0, [x0, #96]
     758:	and	w0, w0, #0x80
     75c:	cmp	w0, #0x0
     760:	b.eq	790 <ext2fs_block_bitmap_checksum+0x7c>  // b.none
     764:	ldr	x0, [sp, #24]
     768:	ldr	x0, [x0, #32]
     76c:	ldrh	w0, [x0, #254]
     770:	cmp	w0, #0x39
     774:	b.ls	790 <ext2fs_block_bitmap_checksum+0x7c>  // b.plast
     778:	ldr	x0, [sp, #32]
     77c:	ldrh	w0, [x0, #56]
     780:	lsl	w0, w0, #16
     784:	ldr	w1, [sp, #44]
     788:	orr	w0, w1, w0
     78c:	str	w0, [sp, #44]
     790:	ldr	w0, [sp, #44]
     794:	ldp	x29, x30, [sp], #48
     798:	ret

000000000000079c <ext2fs_block_bitmap_loc>:
     79c:	stp	x29, x30, [sp, #-64]!
     7a0:	mov	x29, sp
     7a4:	str	x19, [sp, #16]
     7a8:	str	x0, [sp, #40]
     7ac:	str	w1, [sp, #36]
     7b0:	ldr	x0, [sp, #40]
     7b4:	ldr	x0, [x0, #64]
     7b8:	ldr	w2, [sp, #36]
     7bc:	mov	x1, x0
     7c0:	ldr	x0, [sp, #40]
     7c4:	bl	6e8 <ext4fs_group_desc>
     7c8:	str	x0, [sp, #56]
     7cc:	ldr	x0, [sp, #56]
     7d0:	ldr	w0, [x0]
     7d4:	mov	w19, w0
     7d8:	ldr	x0, [sp, #40]
     7dc:	ldr	x0, [x0, #32]
     7e0:	bl	78 <ext2fs_has_feature_64bit>
     7e4:	cmp	w0, #0x0
     7e8:	b.eq	800 <ext2fs_block_bitmap_loc+0x64>  // b.none
     7ec:	ldr	x0, [sp, #56]
     7f0:	ldr	w0, [x0, #32]
     7f4:	mov	w0, w0
     7f8:	lsl	x0, x0, #32
     7fc:	b	804 <ext2fs_block_bitmap_loc+0x68>
     800:	mov	x0, #0x0                   	// #0
     804:	orr	x0, x0, x19
     808:	ldr	x19, [sp, #16]
     80c:	ldp	x29, x30, [sp], #64
     810:	ret

0000000000000814 <ext2fs_block_bitmap_loc_set>:
     814:	stp	x29, x30, [sp, #-64]!
     818:	mov	x29, sp
     81c:	str	x0, [sp, #40]
     820:	str	w1, [sp, #36]
     824:	str	x2, [sp, #24]
     828:	ldr	x0, [sp, #40]
     82c:	ldr	x0, [x0, #64]
     830:	ldr	w2, [sp, #36]
     834:	mov	x1, x0
     838:	ldr	x0, [sp, #40]
     83c:	bl	6e8 <ext4fs_group_desc>
     840:	str	x0, [sp, #56]
     844:	ldr	x0, [sp, #24]
     848:	mov	w1, w0
     84c:	ldr	x0, [sp, #56]
     850:	str	w1, [x0]
     854:	ldr	x0, [sp, #40]
     858:	ldr	x0, [x0, #32]
     85c:	bl	78 <ext2fs_has_feature_64bit>
     860:	cmp	w0, #0x0
     864:	b.eq	87c <ext2fs_block_bitmap_loc_set+0x68>  // b.none
     868:	ldr	x0, [sp, #24]
     86c:	lsr	x0, x0, #32
     870:	mov	w1, w0
     874:	ldr	x0, [sp, #56]
     878:	str	w1, [x0, #32]
     87c:	nop
     880:	ldp	x29, x30, [sp], #64
     884:	ret

0000000000000888 <ext2fs_inode_bitmap_checksum>:
     888:	stp	x29, x30, [sp, #-48]!
     88c:	mov	x29, sp
     890:	str	x0, [sp, #24]
     894:	str	w1, [sp, #20]
     898:	ldr	x0, [sp, #24]
     89c:	ldr	x0, [x0, #64]
     8a0:	ldr	w2, [sp, #20]
     8a4:	mov	x1, x0
     8a8:	ldr	x0, [sp, #24]
     8ac:	bl	6e8 <ext4fs_group_desc>
     8b0:	str	x0, [sp, #32]
     8b4:	ldr	x0, [sp, #32]
     8b8:	ldrh	w0, [x0, #26]
     8bc:	str	w0, [sp, #44]
     8c0:	ldr	x0, [sp, #24]
     8c4:	ldr	x0, [x0, #32]
     8c8:	ldr	w0, [x0, #96]
     8cc:	and	w0, w0, #0x80
     8d0:	cmp	w0, #0x0
     8d4:	b.eq	904 <ext2fs_inode_bitmap_checksum+0x7c>  // b.none
     8d8:	ldr	x0, [sp, #24]
     8dc:	ldr	x0, [x0, #32]
     8e0:	ldrh	w0, [x0, #254]
     8e4:	cmp	w0, #0x3b
     8e8:	b.ls	904 <ext2fs_inode_bitmap_checksum+0x7c>  // b.plast
     8ec:	ldr	x0, [sp, #32]
     8f0:	ldrh	w0, [x0, #58]
     8f4:	lsl	w0, w0, #16
     8f8:	ldr	w1, [sp, #44]
     8fc:	orr	w0, w1, w0
     900:	str	w0, [sp, #44]
     904:	ldr	w0, [sp, #44]
     908:	ldp	x29, x30, [sp], #48
     90c:	ret

0000000000000910 <ext2fs_inode_bitmap_loc>:
     910:	stp	x29, x30, [sp, #-64]!
     914:	mov	x29, sp
     918:	str	x19, [sp, #16]
     91c:	str	x0, [sp, #40]
     920:	str	w1, [sp, #36]
     924:	ldr	x0, [sp, #40]
     928:	ldr	x0, [x0, #64]
     92c:	ldr	w2, [sp, #36]
     930:	mov	x1, x0
     934:	ldr	x0, [sp, #40]
     938:	bl	6e8 <ext4fs_group_desc>
     93c:	str	x0, [sp, #56]
     940:	ldr	x0, [sp, #56]
     944:	ldr	w0, [x0, #4]
     948:	mov	w19, w0
     94c:	ldr	x0, [sp, #40]
     950:	ldr	x0, [x0, #32]
     954:	bl	78 <ext2fs_has_feature_64bit>
     958:	cmp	w0, #0x0
     95c:	b.eq	974 <ext2fs_inode_bitmap_loc+0x64>  // b.none
     960:	ldr	x0, [sp, #56]
     964:	ldr	w0, [x0, #36]
     968:	mov	w0, w0
     96c:	lsl	x0, x0, #32
     970:	b	978 <ext2fs_inode_bitmap_loc+0x68>
     974:	mov	x0, #0x0                   	// #0
     978:	orr	x0, x0, x19
     97c:	ldr	x19, [sp, #16]
     980:	ldp	x29, x30, [sp], #64
     984:	ret

0000000000000988 <ext2fs_inode_bitmap_loc_set>:
     988:	stp	x29, x30, [sp, #-64]!
     98c:	mov	x29, sp
     990:	str	x0, [sp, #40]
     994:	str	w1, [sp, #36]
     998:	str	x2, [sp, #24]
     99c:	ldr	x0, [sp, #40]
     9a0:	ldr	x0, [x0, #64]
     9a4:	ldr	w2, [sp, #36]
     9a8:	mov	x1, x0
     9ac:	ldr	x0, [sp, #40]
     9b0:	bl	6e8 <ext4fs_group_desc>
     9b4:	str	x0, [sp, #56]
     9b8:	ldr	x0, [sp, #24]
     9bc:	mov	w1, w0
     9c0:	ldr	x0, [sp, #56]
     9c4:	str	w1, [x0, #4]
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldr	x0, [x0, #32]
     9d0:	bl	78 <ext2fs_has_feature_64bit>
     9d4:	cmp	w0, #0x0
     9d8:	b.eq	9f0 <ext2fs_inode_bitmap_loc_set+0x68>  // b.none
     9dc:	ldr	x0, [sp, #24]
     9e0:	lsr	x0, x0, #32
     9e4:	mov	w1, w0
     9e8:	ldr	x0, [sp, #56]
     9ec:	str	w1, [x0, #36]
     9f0:	nop
     9f4:	ldp	x29, x30, [sp], #64
     9f8:	ret

00000000000009fc <ext2fs_inode_table_loc>:
     9fc:	stp	x29, x30, [sp, #-64]!
     a00:	mov	x29, sp
     a04:	str	x19, [sp, #16]
     a08:	str	x0, [sp, #40]
     a0c:	str	w1, [sp, #36]
     a10:	ldr	x0, [sp, #40]
     a14:	ldr	x0, [x0, #64]
     a18:	ldr	w2, [sp, #36]
     a1c:	mov	x1, x0
     a20:	ldr	x0, [sp, #40]
     a24:	bl	6e8 <ext4fs_group_desc>
     a28:	str	x0, [sp, #56]
     a2c:	ldr	x0, [sp, #56]
     a30:	ldr	w0, [x0, #8]
     a34:	mov	w19, w0
     a38:	ldr	x0, [sp, #40]
     a3c:	ldr	x0, [x0, #32]
     a40:	bl	78 <ext2fs_has_feature_64bit>
     a44:	cmp	w0, #0x0
     a48:	b.eq	a60 <ext2fs_inode_table_loc+0x64>  // b.none
     a4c:	ldr	x0, [sp, #56]
     a50:	ldr	w0, [x0, #40]
     a54:	mov	w0, w0
     a58:	lsl	x0, x0, #32
     a5c:	b	a64 <ext2fs_inode_table_loc+0x68>
     a60:	mov	x0, #0x0                   	// #0
     a64:	orr	x0, x0, x19
     a68:	ldr	x19, [sp, #16]
     a6c:	ldp	x29, x30, [sp], #64
     a70:	ret

0000000000000a74 <ext2fs_inode_table_loc_set>:
     a74:	stp	x29, x30, [sp, #-64]!
     a78:	mov	x29, sp
     a7c:	str	x0, [sp, #40]
     a80:	str	w1, [sp, #36]
     a84:	str	x2, [sp, #24]
     a88:	ldr	x0, [sp, #40]
     a8c:	ldr	x0, [x0, #64]
     a90:	ldr	w2, [sp, #36]
     a94:	mov	x1, x0
     a98:	ldr	x0, [sp, #40]
     a9c:	bl	6e8 <ext4fs_group_desc>
     aa0:	str	x0, [sp, #56]
     aa4:	ldr	x0, [sp, #24]
     aa8:	mov	w1, w0
     aac:	ldr	x0, [sp, #56]
     ab0:	str	w1, [x0, #8]
     ab4:	ldr	x0, [sp, #40]
     ab8:	ldr	x0, [x0, #32]
     abc:	bl	78 <ext2fs_has_feature_64bit>
     ac0:	cmp	w0, #0x0
     ac4:	b.eq	adc <ext2fs_inode_table_loc_set+0x68>  // b.none
     ac8:	ldr	x0, [sp, #24]
     acc:	lsr	x0, x0, #32
     ad0:	mov	w1, w0
     ad4:	ldr	x0, [sp, #56]
     ad8:	str	w1, [x0, #40]
     adc:	nop
     ae0:	ldp	x29, x30, [sp], #64
     ae4:	ret

0000000000000ae8 <ext2fs_bg_free_blocks_count>:
     ae8:	stp	x29, x30, [sp, #-64]!
     aec:	mov	x29, sp
     af0:	str	x19, [sp, #16]
     af4:	str	x0, [sp, #40]
     af8:	str	w1, [sp, #36]
     afc:	ldr	x0, [sp, #40]
     b00:	ldr	x0, [x0, #64]
     b04:	ldr	w2, [sp, #36]
     b08:	mov	x1, x0
     b0c:	ldr	x0, [sp, #40]
     b10:	bl	6e8 <ext4fs_group_desc>
     b14:	str	x0, [sp, #56]
     b18:	ldr	x0, [sp, #56]
     b1c:	ldrh	w0, [x0, #12]
     b20:	mov	w19, w0
     b24:	ldr	x0, [sp, #40]
     b28:	ldr	x0, [x0, #32]
     b2c:	bl	78 <ext2fs_has_feature_64bit>
     b30:	cmp	w0, #0x0
     b34:	b.eq	b48 <ext2fs_bg_free_blocks_count+0x60>  // b.none
     b38:	ldr	x0, [sp, #56]
     b3c:	ldrh	w0, [x0, #44]
     b40:	lsl	w0, w0, #16
     b44:	b	b4c <ext2fs_bg_free_blocks_count+0x64>
     b48:	mov	w0, #0x0                   	// #0
     b4c:	orr	w0, w0, w19
     b50:	ldr	x19, [sp, #16]
     b54:	ldp	x29, x30, [sp], #64
     b58:	ret

0000000000000b5c <ext2fs_bg_free_blocks_count_set>:
     b5c:	stp	x29, x30, [sp, #-48]!
     b60:	mov	x29, sp
     b64:	str	x0, [sp, #24]
     b68:	str	w1, [sp, #20]
     b6c:	str	w2, [sp, #16]
     b70:	ldr	x0, [sp, #24]
     b74:	ldr	x0, [x0, #64]
     b78:	ldr	w2, [sp, #20]
     b7c:	mov	x1, x0
     b80:	ldr	x0, [sp, #24]
     b84:	bl	6e8 <ext4fs_group_desc>
     b88:	str	x0, [sp, #40]
     b8c:	ldr	w0, [sp, #16]
     b90:	and	w1, w0, #0xffff
     b94:	ldr	x0, [sp, #40]
     b98:	strh	w1, [x0, #12]
     b9c:	ldr	x0, [sp, #24]
     ba0:	ldr	x0, [x0, #32]
     ba4:	bl	78 <ext2fs_has_feature_64bit>
     ba8:	cmp	w0, #0x0
     bac:	b.eq	bc4 <ext2fs_bg_free_blocks_count_set+0x68>  // b.none
     bb0:	ldr	w0, [sp, #16]
     bb4:	lsr	w0, w0, #16
     bb8:	and	w1, w0, #0xffff
     bbc:	ldr	x0, [sp, #40]
     bc0:	strh	w1, [x0, #44]
     bc4:	nop
     bc8:	ldp	x29, x30, [sp], #48
     bcc:	ret

0000000000000bd0 <ext2fs_bg_free_inodes_count>:
     bd0:	stp	x29, x30, [sp, #-64]!
     bd4:	mov	x29, sp
     bd8:	str	x19, [sp, #16]
     bdc:	str	x0, [sp, #40]
     be0:	str	w1, [sp, #36]
     be4:	ldr	x0, [sp, #40]
     be8:	ldr	x0, [x0, #64]
     bec:	ldr	w2, [sp, #36]
     bf0:	mov	x1, x0
     bf4:	ldr	x0, [sp, #40]
     bf8:	bl	6e8 <ext4fs_group_desc>
     bfc:	str	x0, [sp, #56]
     c00:	ldr	x0, [sp, #56]
     c04:	ldrh	w0, [x0, #14]
     c08:	mov	w19, w0
     c0c:	ldr	x0, [sp, #40]
     c10:	ldr	x0, [x0, #32]
     c14:	bl	78 <ext2fs_has_feature_64bit>
     c18:	cmp	w0, #0x0
     c1c:	b.eq	c30 <ext2fs_bg_free_inodes_count+0x60>  // b.none
     c20:	ldr	x0, [sp, #56]
     c24:	ldrh	w0, [x0, #46]
     c28:	lsl	w0, w0, #16
     c2c:	b	c34 <ext2fs_bg_free_inodes_count+0x64>
     c30:	mov	w0, #0x0                   	// #0
     c34:	orr	w0, w0, w19
     c38:	ldr	x19, [sp, #16]
     c3c:	ldp	x29, x30, [sp], #64
     c40:	ret

0000000000000c44 <ext2fs_bg_free_inodes_count_set>:
     c44:	stp	x29, x30, [sp, #-48]!
     c48:	mov	x29, sp
     c4c:	str	x0, [sp, #24]
     c50:	str	w1, [sp, #20]
     c54:	str	w2, [sp, #16]
     c58:	ldr	x0, [sp, #24]
     c5c:	ldr	x0, [x0, #64]
     c60:	ldr	w2, [sp, #20]
     c64:	mov	x1, x0
     c68:	ldr	x0, [sp, #24]
     c6c:	bl	6e8 <ext4fs_group_desc>
     c70:	str	x0, [sp, #40]
     c74:	ldr	w0, [sp, #16]
     c78:	and	w1, w0, #0xffff
     c7c:	ldr	x0, [sp, #40]
     c80:	strh	w1, [x0, #14]
     c84:	ldr	x0, [sp, #24]
     c88:	ldr	x0, [x0, #32]
     c8c:	bl	78 <ext2fs_has_feature_64bit>
     c90:	cmp	w0, #0x0
     c94:	b.eq	cac <ext2fs_bg_free_inodes_count_set+0x68>  // b.none
     c98:	ldr	w0, [sp, #16]
     c9c:	lsr	w0, w0, #16
     ca0:	and	w1, w0, #0xffff
     ca4:	ldr	x0, [sp, #40]
     ca8:	strh	w1, [x0, #46]
     cac:	nop
     cb0:	ldp	x29, x30, [sp], #48
     cb4:	ret

0000000000000cb8 <ext2fs_bg_used_dirs_count>:
     cb8:	stp	x29, x30, [sp, #-64]!
     cbc:	mov	x29, sp
     cc0:	str	x19, [sp, #16]
     cc4:	str	x0, [sp, #40]
     cc8:	str	w1, [sp, #36]
     ccc:	ldr	x0, [sp, #40]
     cd0:	ldr	x0, [x0, #64]
     cd4:	ldr	w2, [sp, #36]
     cd8:	mov	x1, x0
     cdc:	ldr	x0, [sp, #40]
     ce0:	bl	6e8 <ext4fs_group_desc>
     ce4:	str	x0, [sp, #56]
     ce8:	ldr	x0, [sp, #56]
     cec:	ldrh	w0, [x0, #16]
     cf0:	mov	w19, w0
     cf4:	ldr	x0, [sp, #40]
     cf8:	ldr	x0, [x0, #32]
     cfc:	bl	78 <ext2fs_has_feature_64bit>
     d00:	cmp	w0, #0x0
     d04:	b.eq	d18 <ext2fs_bg_used_dirs_count+0x60>  // b.none
     d08:	ldr	x0, [sp, #56]
     d0c:	ldrh	w0, [x0, #48]
     d10:	lsl	w0, w0, #16
     d14:	b	d1c <ext2fs_bg_used_dirs_count+0x64>
     d18:	mov	w0, #0x0                   	// #0
     d1c:	orr	w0, w0, w19
     d20:	ldr	x19, [sp, #16]
     d24:	ldp	x29, x30, [sp], #64
     d28:	ret

0000000000000d2c <ext2fs_bg_used_dirs_count_set>:
     d2c:	stp	x29, x30, [sp, #-48]!
     d30:	mov	x29, sp
     d34:	str	x0, [sp, #24]
     d38:	str	w1, [sp, #20]
     d3c:	str	w2, [sp, #16]
     d40:	ldr	x0, [sp, #24]
     d44:	ldr	x0, [x0, #64]
     d48:	ldr	w2, [sp, #20]
     d4c:	mov	x1, x0
     d50:	ldr	x0, [sp, #24]
     d54:	bl	6e8 <ext4fs_group_desc>
     d58:	str	x0, [sp, #40]
     d5c:	ldr	w0, [sp, #16]
     d60:	and	w1, w0, #0xffff
     d64:	ldr	x0, [sp, #40]
     d68:	strh	w1, [x0, #16]
     d6c:	ldr	x0, [sp, #24]
     d70:	ldr	x0, [x0, #32]
     d74:	bl	78 <ext2fs_has_feature_64bit>
     d78:	cmp	w0, #0x0
     d7c:	b.eq	d94 <ext2fs_bg_used_dirs_count_set+0x68>  // b.none
     d80:	ldr	w0, [sp, #16]
     d84:	lsr	w0, w0, #16
     d88:	and	w1, w0, #0xffff
     d8c:	ldr	x0, [sp, #40]
     d90:	strh	w1, [x0, #48]
     d94:	nop
     d98:	ldp	x29, x30, [sp], #48
     d9c:	ret

0000000000000da0 <ext2fs_bg_itable_unused>:
     da0:	stp	x29, x30, [sp, #-64]!
     da4:	mov	x29, sp
     da8:	str	x19, [sp, #16]
     dac:	str	x0, [sp, #40]
     db0:	str	w1, [sp, #36]
     db4:	ldr	x0, [sp, #40]
     db8:	ldr	x0, [x0, #64]
     dbc:	ldr	w2, [sp, #36]
     dc0:	mov	x1, x0
     dc4:	ldr	x0, [sp, #40]
     dc8:	bl	6e8 <ext4fs_group_desc>
     dcc:	str	x0, [sp, #56]
     dd0:	ldr	x0, [sp, #56]
     dd4:	ldrh	w0, [x0, #28]
     dd8:	mov	w19, w0
     ddc:	ldr	x0, [sp, #40]
     de0:	ldr	x0, [x0, #32]
     de4:	bl	78 <ext2fs_has_feature_64bit>
     de8:	cmp	w0, #0x0
     dec:	b.eq	e00 <ext2fs_bg_itable_unused+0x60>  // b.none
     df0:	ldr	x0, [sp, #56]
     df4:	ldrh	w0, [x0, #50]
     df8:	lsl	w0, w0, #16
     dfc:	b	e04 <ext2fs_bg_itable_unused+0x64>
     e00:	mov	w0, #0x0                   	// #0
     e04:	orr	w0, w0, w19
     e08:	ldr	x19, [sp, #16]
     e0c:	ldp	x29, x30, [sp], #64
     e10:	ret

0000000000000e14 <ext2fs_bg_itable_unused_set>:
     e14:	stp	x29, x30, [sp, #-48]!
     e18:	mov	x29, sp
     e1c:	str	x0, [sp, #24]
     e20:	str	w1, [sp, #20]
     e24:	str	w2, [sp, #16]
     e28:	ldr	x0, [sp, #24]
     e2c:	ldr	x0, [x0, #64]
     e30:	ldr	w2, [sp, #20]
     e34:	mov	x1, x0
     e38:	ldr	x0, [sp, #24]
     e3c:	bl	6e8 <ext4fs_group_desc>
     e40:	str	x0, [sp, #40]
     e44:	ldr	w0, [sp, #16]
     e48:	and	w1, w0, #0xffff
     e4c:	ldr	x0, [sp, #40]
     e50:	strh	w1, [x0, #28]
     e54:	ldr	x0, [sp, #24]
     e58:	ldr	x0, [x0, #32]
     e5c:	bl	78 <ext2fs_has_feature_64bit>
     e60:	cmp	w0, #0x0
     e64:	b.eq	e7c <ext2fs_bg_itable_unused_set+0x68>  // b.none
     e68:	ldr	w0, [sp, #16]
     e6c:	lsr	w0, w0, #16
     e70:	and	w1, w0, #0xffff
     e74:	ldr	x0, [sp, #40]
     e78:	strh	w1, [x0, #50]
     e7c:	nop
     e80:	ldp	x29, x30, [sp], #48
     e84:	ret

0000000000000e88 <ext2fs_bg_flags>:
     e88:	stp	x29, x30, [sp, #-48]!
     e8c:	mov	x29, sp
     e90:	str	x0, [sp, #24]
     e94:	str	w1, [sp, #20]
     e98:	ldr	x0, [sp, #24]
     e9c:	ldr	x0, [x0, #64]
     ea0:	ldr	w2, [sp, #20]
     ea4:	mov	x1, x0
     ea8:	ldr	x0, [sp, #24]
     eac:	bl	6e8 <ext4fs_group_desc>
     eb0:	str	x0, [sp, #40]
     eb4:	ldr	x0, [sp, #40]
     eb8:	ldrh	w0, [x0, #18]
     ebc:	ldp	x29, x30, [sp], #48
     ec0:	ret

0000000000000ec4 <ext2fs_bg_flags_zap>:
     ec4:	stp	x29, x30, [sp, #-48]!
     ec8:	mov	x29, sp
     ecc:	str	x0, [sp, #24]
     ed0:	str	w1, [sp, #20]
     ed4:	ldr	x0, [sp, #24]
     ed8:	ldr	x0, [x0, #64]
     edc:	ldr	w2, [sp, #20]
     ee0:	mov	x1, x0
     ee4:	ldr	x0, [sp, #24]
     ee8:	bl	6e8 <ext4fs_group_desc>
     eec:	str	x0, [sp, #40]
     ef0:	ldr	x0, [sp, #40]
     ef4:	strh	wzr, [x0, #18]
     ef8:	nop
     efc:	ldp	x29, x30, [sp], #48
     f00:	ret

0000000000000f04 <ext2fs_bg_flags_test>:
     f04:	stp	x29, x30, [sp, #-48]!
     f08:	mov	x29, sp
     f0c:	str	x0, [sp, #24]
     f10:	str	w1, [sp, #20]
     f14:	strh	w2, [sp, #18]
     f18:	ldr	x0, [sp, #24]
     f1c:	ldr	x0, [x0, #64]
     f20:	ldr	w2, [sp, #20]
     f24:	mov	x1, x0
     f28:	ldr	x0, [sp, #24]
     f2c:	bl	6e8 <ext4fs_group_desc>
     f30:	str	x0, [sp, #40]
     f34:	ldr	x0, [sp, #40]
     f38:	ldrh	w1, [x0, #18]
     f3c:	ldrh	w0, [sp, #18]
     f40:	and	w0, w1, w0
     f44:	and	w0, w0, #0xffff
     f48:	ldp	x29, x30, [sp], #48
     f4c:	ret

0000000000000f50 <ext2fs_bg_flags_set>:
     f50:	stp	x29, x30, [sp, #-48]!
     f54:	mov	x29, sp
     f58:	str	x0, [sp, #24]
     f5c:	str	w1, [sp, #20]
     f60:	strh	w2, [sp, #18]
     f64:	ldr	x0, [sp, #24]
     f68:	ldr	x0, [x0, #64]
     f6c:	ldr	w2, [sp, #20]
     f70:	mov	x1, x0
     f74:	ldr	x0, [sp, #24]
     f78:	bl	6e8 <ext4fs_group_desc>
     f7c:	str	x0, [sp, #40]
     f80:	ldr	x0, [sp, #40]
     f84:	ldrh	w1, [x0, #18]
     f88:	ldrh	w0, [sp, #18]
     f8c:	orr	w0, w1, w0
     f90:	and	w1, w0, #0xffff
     f94:	ldr	x0, [sp, #40]
     f98:	strh	w1, [x0, #18]
     f9c:	nop
     fa0:	ldp	x29, x30, [sp], #48
     fa4:	ret

0000000000000fa8 <ext2fs_bg_flags_clear>:
     fa8:	stp	x29, x30, [sp, #-48]!
     fac:	mov	x29, sp
     fb0:	str	x0, [sp, #24]
     fb4:	str	w1, [sp, #20]
     fb8:	strh	w2, [sp, #18]
     fbc:	ldr	x0, [sp, #24]
     fc0:	ldr	x0, [x0, #64]
     fc4:	ldr	w2, [sp, #20]
     fc8:	mov	x1, x0
     fcc:	ldr	x0, [sp, #24]
     fd0:	bl	6e8 <ext4fs_group_desc>
     fd4:	str	x0, [sp, #40]
     fd8:	ldr	x0, [sp, #40]
     fdc:	ldrh	w0, [x0, #18]
     fe0:	sxth	w1, w0
     fe4:	ldrsh	w0, [sp, #18]
     fe8:	mvn	w0, w0
     fec:	sxth	w0, w0
     ff0:	and	w0, w1, w0
     ff4:	sxth	w0, w0
     ff8:	and	w1, w0, #0xffff
     ffc:	ldr	x0, [sp, #40]
    1000:	strh	w1, [x0, #18]
    1004:	nop
    1008:	ldp	x29, x30, [sp], #48
    100c:	ret

0000000000001010 <ext2fs_bg_checksum>:
    1010:	stp	x29, x30, [sp, #-48]!
    1014:	mov	x29, sp
    1018:	str	x0, [sp, #24]
    101c:	str	w1, [sp, #20]
    1020:	ldr	x0, [sp, #24]
    1024:	ldr	x0, [x0, #64]
    1028:	ldr	w2, [sp, #20]
    102c:	mov	x1, x0
    1030:	ldr	x0, [sp, #24]
    1034:	bl	6e8 <ext4fs_group_desc>
    1038:	str	x0, [sp, #40]
    103c:	ldr	x0, [sp, #40]
    1040:	ldrh	w0, [x0, #30]
    1044:	ldp	x29, x30, [sp], #48
    1048:	ret

000000000000104c <ext2fs_bg_checksum_set>:
    104c:	stp	x29, x30, [sp, #-48]!
    1050:	mov	x29, sp
    1054:	str	x0, [sp, #24]
    1058:	str	w1, [sp, #20]
    105c:	strh	w2, [sp, #18]
    1060:	ldr	x0, [sp, #24]
    1064:	ldr	x0, [x0, #64]
    1068:	ldr	w2, [sp, #20]
    106c:	mov	x1, x0
    1070:	ldr	x0, [sp, #24]
    1074:	bl	6e8 <ext4fs_group_desc>
    1078:	str	x0, [sp, #40]
    107c:	ldr	x0, [sp, #40]
    1080:	ldrh	w1, [sp, #18]
    1084:	strh	w1, [x0, #30]
    1088:	nop
    108c:	ldp	x29, x30, [sp], #48
    1090:	ret

0000000000001094 <ext2fs_file_acl_block>:
    1094:	stp	x29, x30, [sp, #-48]!
    1098:	mov	x29, sp
    109c:	str	x0, [sp, #24]
    10a0:	str	x1, [sp, #16]
    10a4:	ldr	x0, [sp, #16]
    10a8:	ldr	w0, [x0, #104]
    10ac:	mov	w0, w0
    10b0:	str	x0, [sp, #40]
    10b4:	ldr	x0, [sp, #24]
    10b8:	cmp	x0, #0x0
    10bc:	b.eq	10f0 <ext2fs_file_acl_block+0x5c>  // b.none
    10c0:	ldr	x0, [sp, #24]
    10c4:	ldr	x0, [x0, #32]
    10c8:	bl	78 <ext2fs_has_feature_64bit>
    10cc:	cmp	w0, #0x0
    10d0:	b.eq	10f0 <ext2fs_file_acl_block+0x5c>  // b.none
    10d4:	ldr	x0, [sp, #16]
    10d8:	ldrh	w0, [x0, #118]
    10dc:	and	x0, x0, #0xffff
    10e0:	lsl	x0, x0, #32
    10e4:	ldr	x1, [sp, #40]
    10e8:	orr	x0, x1, x0
    10ec:	str	x0, [sp, #40]
    10f0:	ldr	x0, [sp, #40]
    10f4:	ldp	x29, x30, [sp], #48
    10f8:	ret

00000000000010fc <ext2fs_file_acl_block_set>:
    10fc:	stp	x29, x30, [sp, #-48]!
    1100:	mov	x29, sp
    1104:	str	x0, [sp, #40]
    1108:	str	x1, [sp, #32]
    110c:	str	x2, [sp, #24]
    1110:	ldr	x0, [sp, #24]
    1114:	mov	w1, w0
    1118:	ldr	x0, [sp, #32]
    111c:	str	w1, [x0, #104]
    1120:	ldr	x0, [sp, #40]
    1124:	cmp	x0, #0x0
    1128:	b.eq	1154 <ext2fs_file_acl_block_set+0x58>  // b.none
    112c:	ldr	x0, [sp, #40]
    1130:	ldr	x0, [x0, #32]
    1134:	bl	78 <ext2fs_has_feature_64bit>
    1138:	cmp	w0, #0x0
    113c:	b.eq	1154 <ext2fs_file_acl_block_set+0x58>  // b.none
    1140:	ldr	x0, [sp, #24]
    1144:	lsr	x0, x0, #32
    1148:	and	w1, w0, #0xffff
    114c:	ldr	x0, [sp, #32]
    1150:	strh	w1, [x0, #118]
    1154:	nop
    1158:	ldp	x29, x30, [sp], #48
    115c:	ret

0000000000001160 <ext2fs_inode_size_set>:
    1160:	stp	x29, x30, [sp, #-48]!
    1164:	mov	x29, sp
    1168:	str	x0, [sp, #40]
    116c:	str	x1, [sp, #32]
    1170:	str	x2, [sp, #24]
    1174:	ldr	x0, [sp, #24]
    1178:	cmp	x0, #0x0
    117c:	b.ge	1188 <ext2fs_inode_size_set+0x28>  // b.tcont
    1180:	mov	x0, #0x16                  	// #22
    1184:	b	1248 <ext2fs_inode_size_set+0xe8>
    1188:	ldr	x0, [sp, #32]
    118c:	ldrh	w0, [x0]
    1190:	and	w0, w0, #0xf000
    1194:	cmp	w0, #0x8, lsl #12
    1198:	b.eq	11b8 <ext2fs_inode_size_set+0x58>  // b.none
    119c:	ldr	x0, [sp, #24]
    11a0:	asr	x0, x0, #32
    11a4:	cmp	x0, #0x0
    11a8:	b.eq	11b8 <ext2fs_inode_size_set+0x58>  // b.none
    11ac:	mov	x0, #0xb752                	// #46930
    11b0:	movk	x0, #0x7f2b, lsl #16
    11b4:	b	1248 <ext2fs_inode_size_set+0xe8>
    11b8:	ldr	x0, [sp, #32]
    11bc:	ldrh	w0, [x0]
    11c0:	and	w0, w0, #0xf000
    11c4:	cmp	w0, #0x8, lsl #12
    11c8:	b.ne	1220 <ext2fs_inode_size_set+0xc0>  // b.any
    11cc:	ldr	x0, [sp, #24]
    11d0:	bl	a0 <ext2fs_needs_large_file_feature>
    11d4:	cmp	w0, #0x0
    11d8:	b.eq	1220 <ext2fs_inode_size_set+0xc0>  // b.none
    11dc:	ldr	x0, [sp, #40]
    11e0:	ldr	x0, [x0, #32]
    11e4:	bl	0 <ext2fs_has_feature_large_file>
    11e8:	cmp	w0, #0x0
    11ec:	b.eq	1204 <ext2fs_inode_size_set+0xa4>  // b.none
    11f0:	ldr	x0, [sp, #40]
    11f4:	ldr	x0, [x0, #32]
    11f8:	ldr	w0, [x0, #76]
    11fc:	cmp	w0, #0x0
    1200:	b.ne	1220 <ext2fs_inode_size_set+0xc0>  // b.any
    1204:	ldr	x0, [sp, #40]
    1208:	ldr	x0, [x0, #32]
    120c:	bl	28 <ext2fs_set_feature_large_file>
    1210:	ldr	x0, [sp, #40]
    1214:	bl	0 <ext2fs_update_dynamic_rev>
    1218:	ldr	x0, [sp, #40]
    121c:	bl	0 <ext2fs_mark_super_dirty>
    1220:	ldr	x0, [sp, #24]
    1224:	mov	w1, w0
    1228:	ldr	x0, [sp, #32]
    122c:	str	w1, [x0, #4]
    1230:	ldr	x0, [sp, #24]
    1234:	asr	x0, x0, #32
    1238:	mov	w1, w0
    123c:	ldr	x0, [sp, #32]
    1240:	str	w1, [x0, #108]
    1244:	mov	x0, #0x0                   	// #0
    1248:	ldp	x29, x30, [sp], #48
    124c:	ret

block.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <block_iterate_ind>:
       0:	stp	x29, x30, [sp, #-112]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	str	x0, [sp, #56]
      10:	str	w1, [sp, #52]
      14:	str	w2, [sp, #48]
      18:	str	x3, [sp, #40]
      1c:	str	wzr, [sp, #108]
      20:	str	wzr, [sp, #104]
      24:	ldr	x0, [sp, #40]
      28:	ldr	x0, [x0]
      2c:	ldr	w0, [x0, #40]
      30:	lsr	w0, w0, #2
      34:	str	w0, [sp, #84]
      38:	ldr	x0, [sp, #40]
      3c:	ldr	w0, [x0, #28]
      40:	and	w0, w0, #0x2
      44:	cmp	w0, #0x0
      48:	b.ne	c0 <block_iterate_ind+0xc0>  // b.any
      4c:	ldr	x0, [sp, #40]
      50:	ldr	w0, [x0, #28]
      54:	and	w0, w0, #0x4
      58:	cmp	w0, #0x0
      5c:	b.ne	c0 <block_iterate_ind+0xc0>  // b.any
      60:	ldr	x0, [sp, #56]
      64:	ldr	w0, [x0]
      68:	mov	w0, w0
      6c:	str	x0, [sp, #72]
      70:	ldr	x0, [sp, #40]
      74:	ldr	x6, [x0, #8]
      78:	ldr	x0, [sp, #40]
      7c:	ldr	x7, [x0]
      80:	ldr	w1, [sp, #52]
      84:	ldr	x0, [sp, #40]
      88:	ldr	x2, [x0, #64]
      8c:	add	x0, sp, #0x48
      90:	mov	x5, x2
      94:	ldr	w4, [sp, #48]
      98:	mov	x3, x1
      9c:	mov	x2, #0xffffffffffffffff    	// #-1
      a0:	mov	x1, x0
      a4:	mov	x0, x7
      a8:	blr	x6
      ac:	str	w0, [sp, #108]
      b0:	ldr	x0, [sp, #72]
      b4:	mov	w1, w0
      b8:	ldr	x0, [sp, #56]
      bc:	str	w1, [x0]
      c0:	ldr	x0, [sp, #40]
      c4:	ldr	w0, [x0, #28]
      c8:	and	w0, w0, #0x8
      cc:	cmp	w0, #0x0
      d0:	b.eq	108 <block_iterate_ind+0x108>  // b.none
      d4:	ldr	w0, [sp, #108]
      d8:	and	w0, w0, #0x1
      dc:	cmp	w0, #0x0
      e0:	b.eq	108 <block_iterate_ind+0x108>  // b.none
      e4:	ldr	x0, [sp, #40]
      e8:	mov	x1, #0xb76b                	// #46955
      ec:	movk	x1, #0x7f2b, lsl #16
      f0:	str	x1, [x0, #32]
      f4:	ldr	w0, [sp, #108]
      f8:	orr	w0, w0, #0x6
      fc:	str	w0, [sp, #108]
     100:	ldr	w0, [sp, #108]
     104:	b	5bc <block_iterate_ind+0x5bc>
     108:	ldr	x0, [sp, #56]
     10c:	ldr	w0, [x0]
     110:	cmp	w0, #0x0
     114:	b.eq	128 <block_iterate_ind+0x128>  // b.none
     118:	ldr	w0, [sp, #108]
     11c:	and	w0, w0, #0x2
     120:	cmp	w0, #0x0
     124:	b.eq	148 <block_iterate_ind+0x148>  // b.none
     128:	ldr	x0, [sp, #40]
     12c:	ldr	x1, [x0, #16]
     130:	ldrsw	x0, [sp, #84]
     134:	add	x1, x1, x0
     138:	ldr	x0, [sp, #40]
     13c:	str	x1, [x0, #16]
     140:	ldr	w0, [sp, #108]
     144:	b	5bc <block_iterate_ind+0x5bc>
     148:	ldr	x0, [sp, #56]
     14c:	ldr	w0, [x0]
     150:	mov	w19, w0
     154:	ldr	x0, [sp, #40]
     158:	ldr	x0, [x0]
     15c:	ldr	x0, [x0, #32]
     160:	bl	0 <ext2fs_blocks_count>
     164:	cmp	x19, x0
     168:	b.cs	18c <block_iterate_ind+0x18c>  // b.hs, b.nlast
     16c:	ldr	x0, [sp, #56]
     170:	ldr	w1, [x0]
     174:	ldr	x0, [sp, #40]
     178:	ldr	x0, [x0]
     17c:	ldr	x0, [x0, #32]
     180:	ldr	w0, [x0, #20]
     184:	cmp	w1, w0
     188:	b.cs	1b0 <block_iterate_ind+0x1b0>  // b.hs, b.nlast
     18c:	ldr	x0, [sp, #40]
     190:	mov	x1, #0xb735                	// #46901
     194:	movk	x1, #0x7f2b, lsl #16
     198:	str	x1, [x0, #32]
     19c:	ldr	w0, [sp, #108]
     1a0:	orr	w0, w0, #0x4
     1a4:	str	w0, [sp, #108]
     1a8:	ldr	w0, [sp, #108]
     1ac:	b	5bc <block_iterate_ind+0x5bc>
     1b0:	ldr	x0, [sp, #40]
     1b4:	ldr	x3, [x0]
     1b8:	ldr	x0, [sp, #56]
     1bc:	ldr	w1, [x0]
     1c0:	ldr	x0, [sp, #40]
     1c4:	ldr	x0, [x0, #40]
     1c8:	mov	x2, x0
     1cc:	mov	x0, x3
     1d0:	bl	0 <ext2fs_read_ind_block>
     1d4:	mov	x1, x0
     1d8:	ldr	x0, [sp, #40]
     1dc:	str	x1, [x0, #32]
     1e0:	ldr	x0, [sp, #40]
     1e4:	ldr	x0, [x0, #32]
     1e8:	cmp	x0, #0x0
     1ec:	b.eq	204 <block_iterate_ind+0x204>  // b.none
     1f0:	ldr	w0, [sp, #108]
     1f4:	orr	w0, w0, #0x4
     1f8:	str	w0, [sp, #108]
     1fc:	ldr	w0, [sp, #108]
     200:	b	5bc <block_iterate_ind+0x5bc>
     204:	ldr	x0, [sp, #40]
     208:	ldr	x0, [x0, #40]
     20c:	str	x0, [sp, #88]
     210:	str	wzr, [sp, #96]
     214:	ldr	x0, [sp, #40]
     218:	ldr	w0, [x0, #28]
     21c:	and	w0, w0, #0x1
     220:	cmp	w0, #0x0
     224:	b.eq	31c <block_iterate_ind+0x31c>  // b.none
     228:	str	wzr, [sp, #100]
     22c:	b	308 <block_iterate_ind+0x308>
     230:	ldr	x0, [sp, #88]
     234:	ldr	w0, [x0]
     238:	mov	w0, w0
     23c:	str	x0, [sp, #72]
     240:	ldr	x0, [sp, #40]
     244:	ldr	x6, [x0, #8]
     248:	ldr	x0, [sp, #40]
     24c:	ldr	x7, [x0]
     250:	ldr	x0, [sp, #40]
     254:	ldr	x1, [x0, #16]
     258:	ldr	x0, [sp, #56]
     25c:	ldr	w0, [x0]
     260:	mov	w2, w0
     264:	ldr	x0, [sp, #40]
     268:	ldr	x3, [x0, #64]
     26c:	add	x0, sp, #0x48
     270:	mov	x5, x3
     274:	ldr	w4, [sp, #96]
     278:	mov	x3, x2
     27c:	mov	x2, x1
     280:	mov	x1, x0
     284:	mov	x0, x7
     288:	blr	x6
     28c:	str	w0, [sp, #80]
     290:	ldr	x0, [sp, #72]
     294:	mov	w1, w0
     298:	ldr	x0, [sp, #88]
     29c:	str	w1, [x0]
     2a0:	ldr	w1, [sp, #104]
     2a4:	ldr	w0, [sp, #80]
     2a8:	orr	w0, w1, w0
     2ac:	str	w0, [sp, #104]
     2b0:	ldr	w0, [sp, #80]
     2b4:	and	w0, w0, #0x2
     2b8:	cmp	w0, #0x0
     2bc:	b.eq	2d0 <block_iterate_ind+0x2d0>  // b.none
     2c0:	ldr	w0, [sp, #108]
     2c4:	orr	w0, w0, #0x2
     2c8:	str	w0, [sp, #108]
     2cc:	b	428 <block_iterate_ind+0x428>
     2d0:	ldr	w0, [sp, #96]
     2d4:	add	w0, w0, #0x4
     2d8:	str	w0, [sp, #96]
     2dc:	ldr	w0, [sp, #100]
     2e0:	add	w0, w0, #0x1
     2e4:	str	w0, [sp, #100]
     2e8:	ldr	x0, [sp, #40]
     2ec:	ldr	x0, [x0, #16]
     2f0:	add	x1, x0, #0x1
     2f4:	ldr	x0, [sp, #40]
     2f8:	str	x1, [x0, #16]
     2fc:	ldr	x0, [sp, #88]
     300:	add	x0, x0, #0x4
     304:	str	x0, [sp, #88]
     308:	ldr	w1, [sp, #100]
     30c:	ldr	w0, [sp, #84]
     310:	cmp	w1, w0
     314:	b.lt	230 <block_iterate_ind+0x230>  // b.tstop
     318:	b	428 <block_iterate_ind+0x428>
     31c:	str	wzr, [sp, #100]
     320:	b	418 <block_iterate_ind+0x418>
     324:	ldr	x0, [sp, #88]
     328:	ldr	w0, [x0]
     32c:	cmp	w0, #0x0
     330:	b.eq	3d4 <block_iterate_ind+0x3d4>  // b.none
     334:	ldr	x0, [sp, #88]
     338:	ldr	w0, [x0]
     33c:	mov	w0, w0
     340:	str	x0, [sp, #72]
     344:	ldr	x0, [sp, #40]
     348:	ldr	x6, [x0, #8]
     34c:	ldr	x0, [sp, #40]
     350:	ldr	x7, [x0]
     354:	ldr	x0, [sp, #40]
     358:	ldr	x1, [x0, #16]
     35c:	ldr	x0, [sp, #56]
     360:	ldr	w0, [x0]
     364:	mov	w2, w0
     368:	ldr	x0, [sp, #40]
     36c:	ldr	x3, [x0, #64]
     370:	add	x0, sp, #0x48
     374:	mov	x5, x3
     378:	ldr	w4, [sp, #96]
     37c:	mov	x3, x2
     380:	mov	x2, x1
     384:	mov	x1, x0
     388:	mov	x0, x7
     38c:	blr	x6
     390:	str	w0, [sp, #80]
     394:	ldr	x0, [sp, #72]
     398:	mov	w1, w0
     39c:	ldr	x0, [sp, #88]
     3a0:	str	w1, [x0]
     3a4:	ldr	w1, [sp, #104]
     3a8:	ldr	w0, [sp, #80]
     3ac:	orr	w0, w1, w0
     3b0:	str	w0, [sp, #104]
     3b4:	ldr	w0, [sp, #80]
     3b8:	and	w0, w0, #0x2
     3bc:	cmp	w0, #0x0
     3c0:	b.eq	3dc <block_iterate_ind+0x3dc>  // b.none
     3c4:	ldr	w0, [sp, #108]
     3c8:	orr	w0, w0, #0x2
     3cc:	str	w0, [sp, #108]
     3d0:	b	428 <block_iterate_ind+0x428>
     3d4:	nop
     3d8:	b	3e0 <block_iterate_ind+0x3e0>
     3dc:	nop
     3e0:	ldr	w0, [sp, #96]
     3e4:	add	w0, w0, #0x4
     3e8:	str	w0, [sp, #96]
     3ec:	ldr	w0, [sp, #100]
     3f0:	add	w0, w0, #0x1
     3f4:	str	w0, [sp, #100]
     3f8:	ldr	x0, [sp, #40]
     3fc:	ldr	x0, [x0, #16]
     400:	add	x1, x0, #0x1
     404:	ldr	x0, [sp, #40]
     408:	str	x1, [x0, #16]
     40c:	ldr	x0, [sp, #88]
     410:	add	x0, x0, #0x4
     414:	str	x0, [sp, #88]
     418:	ldr	w1, [sp, #100]
     41c:	ldr	w0, [sp, #84]
     420:	cmp	w1, w0
     424:	b.lt	324 <block_iterate_ind+0x324>  // b.tstop
     428:	ldr	x0, [sp, #40]
     42c:	ldr	w0, [x0, #28]
     430:	and	w0, w0, #0x8
     434:	cmp	w0, #0x0
     438:	b.eq	470 <block_iterate_ind+0x470>  // b.none
     43c:	ldr	w0, [sp, #104]
     440:	and	w0, w0, #0x1
     444:	cmp	w0, #0x0
     448:	b.eq	470 <block_iterate_ind+0x470>  // b.none
     44c:	ldr	x0, [sp, #40]
     450:	mov	x1, #0xb76b                	// #46955
     454:	movk	x1, #0x7f2b, lsl #16
     458:	str	x1, [x0, #32]
     45c:	ldr	w0, [sp, #104]
     460:	orr	w0, w0, #0x6
     464:	str	w0, [sp, #104]
     468:	ldr	w0, [sp, #104]
     46c:	b	5bc <block_iterate_ind+0x5bc>
     470:	ldr	w0, [sp, #104]
     474:	and	w0, w0, #0x1
     478:	cmp	w0, #0x0
     47c:	b.eq	4cc <block_iterate_ind+0x4cc>  // b.none
     480:	ldr	x0, [sp, #40]
     484:	ldr	x3, [x0]
     488:	ldr	x0, [sp, #56]
     48c:	ldr	w1, [x0]
     490:	ldr	x0, [sp, #40]
     494:	ldr	x0, [x0, #40]
     498:	mov	x2, x0
     49c:	mov	x0, x3
     4a0:	bl	0 <ext2fs_write_ind_block>
     4a4:	mov	x1, x0
     4a8:	ldr	x0, [sp, #40]
     4ac:	str	x1, [x0, #32]
     4b0:	ldr	x0, [sp, #40]
     4b4:	ldr	x0, [x0, #32]
     4b8:	cmp	x0, #0x0
     4bc:	b.eq	4cc <block_iterate_ind+0x4cc>  // b.none
     4c0:	ldr	w0, [sp, #108]
     4c4:	orr	w0, w0, #0x6
     4c8:	str	w0, [sp, #108]
     4cc:	ldr	x0, [sp, #40]
     4d0:	ldr	w0, [x0, #28]
     4d4:	and	w0, w0, #0x2
     4d8:	cmp	w0, #0x0
     4dc:	b.eq	570 <block_iterate_ind+0x570>  // b.none
     4e0:	ldr	x0, [sp, #40]
     4e4:	ldr	w0, [x0, #28]
     4e8:	and	w0, w0, #0x4
     4ec:	cmp	w0, #0x0
     4f0:	b.ne	570 <block_iterate_ind+0x570>  // b.any
     4f4:	ldr	w0, [sp, #108]
     4f8:	and	w0, w0, #0x2
     4fc:	cmp	w0, #0x0
     500:	b.ne	570 <block_iterate_ind+0x570>  // b.any
     504:	ldr	x0, [sp, #56]
     508:	ldr	w0, [x0]
     50c:	mov	w0, w0
     510:	str	x0, [sp, #72]
     514:	ldr	x0, [sp, #40]
     518:	ldr	x6, [x0, #8]
     51c:	ldr	x0, [sp, #40]
     520:	ldr	x7, [x0]
     524:	ldr	w1, [sp, #52]
     528:	ldr	x0, [sp, #40]
     52c:	ldr	x2, [x0, #64]
     530:	add	x0, sp, #0x48
     534:	mov	x5, x2
     538:	ldr	w4, [sp, #48]
     53c:	mov	x3, x1
     540:	mov	x2, #0xffffffffffffffff    	// #-1
     544:	mov	x1, x0
     548:	mov	x0, x7
     54c:	blr	x6
     550:	mov	w1, w0
     554:	ldr	w0, [sp, #108]
     558:	orr	w0, w0, w1
     55c:	str	w0, [sp, #108]
     560:	ldr	x0, [sp, #72]
     564:	mov	w1, w0
     568:	ldr	x0, [sp, #56]
     56c:	str	w1, [x0]
     570:	ldr	x0, [sp, #40]
     574:	ldr	w0, [x0, #28]
     578:	and	w0, w0, #0x8
     57c:	cmp	w0, #0x0
     580:	b.eq	5b8 <block_iterate_ind+0x5b8>  // b.none
     584:	ldr	w0, [sp, #108]
     588:	and	w0, w0, #0x1
     58c:	cmp	w0, #0x0
     590:	b.eq	5b8 <block_iterate_ind+0x5b8>  // b.none
     594:	ldr	x0, [sp, #40]
     598:	mov	x1, #0xb76b                	// #46955
     59c:	movk	x1, #0x7f2b, lsl #16
     5a0:	str	x1, [x0, #32]
     5a4:	ldr	w0, [sp, #108]
     5a8:	orr	w0, w0, #0x6
     5ac:	str	w0, [sp, #108]
     5b0:	ldr	w0, [sp, #108]
     5b4:	b	5bc <block_iterate_ind+0x5bc>
     5b8:	ldr	w0, [sp, #108]
     5bc:	ldr	x19, [sp, #16]
     5c0:	ldp	x29, x30, [sp], #112
     5c4:	ret

00000000000005c8 <block_iterate_dind>:
     5c8:	stp	x29, x30, [sp, #-112]!
     5cc:	mov	x29, sp
     5d0:	str	x19, [sp, #16]
     5d4:	str	x0, [sp, #56]
     5d8:	str	w1, [sp, #52]
     5dc:	str	w2, [sp, #48]
     5e0:	str	x3, [sp, #40]
     5e4:	str	wzr, [sp, #108]
     5e8:	str	wzr, [sp, #104]
     5ec:	ldr	x0, [sp, #40]
     5f0:	ldr	x0, [x0]
     5f4:	ldr	w0, [x0, #40]
     5f8:	lsr	w0, w0, #2
     5fc:	str	w0, [sp, #84]
     600:	ldr	x0, [sp, #40]
     604:	ldr	w0, [x0, #28]
     608:	and	w0, w0, #0x6
     60c:	cmp	w0, #0x0
     610:	b.ne	674 <block_iterate_dind+0xac>  // b.any
     614:	ldr	x0, [sp, #56]
     618:	ldr	w0, [x0]
     61c:	mov	w0, w0
     620:	str	x0, [sp, #72]
     624:	ldr	x0, [sp, #40]
     628:	ldr	x6, [x0, #8]
     62c:	ldr	x0, [sp, #40]
     630:	ldr	x7, [x0]
     634:	ldr	w1, [sp, #52]
     638:	ldr	x0, [sp, #40]
     63c:	ldr	x2, [x0, #64]
     640:	add	x0, sp, #0x48
     644:	mov	x5, x2
     648:	ldr	w4, [sp, #48]
     64c:	mov	x3, x1
     650:	mov	x2, #0xfffffffffffffffe    	// #-2
     654:	mov	x1, x0
     658:	mov	x0, x7
     65c:	blr	x6
     660:	str	w0, [sp, #108]
     664:	ldr	x0, [sp, #72]
     668:	mov	w1, w0
     66c:	ldr	x0, [sp, #56]
     670:	str	w1, [x0]
     674:	ldr	x0, [sp, #40]
     678:	ldr	w0, [x0, #28]
     67c:	and	w0, w0, #0x8
     680:	cmp	w0, #0x0
     684:	b.eq	6bc <block_iterate_dind+0xf4>  // b.none
     688:	ldr	w0, [sp, #108]
     68c:	and	w0, w0, #0x1
     690:	cmp	w0, #0x0
     694:	b.eq	6bc <block_iterate_dind+0xf4>  // b.none
     698:	ldr	x0, [sp, #40]
     69c:	mov	x1, #0xb76b                	// #46955
     6a0:	movk	x1, #0x7f2b, lsl #16
     6a4:	str	x1, [x0, #32]
     6a8:	ldr	w0, [sp, #108]
     6ac:	orr	w0, w0, #0x6
     6b0:	str	w0, [sp, #108]
     6b4:	ldr	w0, [sp, #108]
     6b8:	b	ad0 <block_iterate_dind+0x508>
     6bc:	ldr	x0, [sp, #56]
     6c0:	ldr	w0, [x0]
     6c4:	cmp	w0, #0x0
     6c8:	b.eq	6dc <block_iterate_dind+0x114>  // b.none
     6cc:	ldr	w0, [sp, #108]
     6d0:	and	w0, w0, #0x2
     6d4:	cmp	w0, #0x0
     6d8:	b.eq	704 <block_iterate_dind+0x13c>  // b.none
     6dc:	ldr	x0, [sp, #40]
     6e0:	ldr	x1, [x0, #16]
     6e4:	ldr	w0, [sp, #84]
     6e8:	mul	w0, w0, w0
     6ec:	sxtw	x0, w0
     6f0:	add	x1, x1, x0
     6f4:	ldr	x0, [sp, #40]
     6f8:	str	x1, [x0, #16]
     6fc:	ldr	w0, [sp, #108]
     700:	b	ad0 <block_iterate_dind+0x508>
     704:	ldr	x0, [sp, #56]
     708:	ldr	w0, [x0]
     70c:	mov	w19, w0
     710:	ldr	x0, [sp, #40]
     714:	ldr	x0, [x0]
     718:	ldr	x0, [x0, #32]
     71c:	bl	0 <ext2fs_blocks_count>
     720:	cmp	x19, x0
     724:	b.cs	748 <block_iterate_dind+0x180>  // b.hs, b.nlast
     728:	ldr	x0, [sp, #56]
     72c:	ldr	w1, [x0]
     730:	ldr	x0, [sp, #40]
     734:	ldr	x0, [x0]
     738:	ldr	x0, [x0, #32]
     73c:	ldr	w0, [x0, #20]
     740:	cmp	w1, w0
     744:	b.cs	76c <block_iterate_dind+0x1a4>  // b.hs, b.nlast
     748:	ldr	x0, [sp, #40]
     74c:	mov	x1, #0xb736                	// #46902
     750:	movk	x1, #0x7f2b, lsl #16
     754:	str	x1, [x0, #32]
     758:	ldr	w0, [sp, #108]
     75c:	orr	w0, w0, #0x4
     760:	str	w0, [sp, #108]
     764:	ldr	w0, [sp, #108]
     768:	b	ad0 <block_iterate_dind+0x508>
     76c:	ldr	x0, [sp, #40]
     770:	ldr	x3, [x0]
     774:	ldr	x0, [sp, #56]
     778:	ldr	w1, [x0]
     77c:	ldr	x0, [sp, #40]
     780:	ldr	x0, [x0, #48]
     784:	mov	x2, x0
     788:	mov	x0, x3
     78c:	bl	0 <ext2fs_read_ind_block>
     790:	mov	x1, x0
     794:	ldr	x0, [sp, #40]
     798:	str	x1, [x0, #32]
     79c:	ldr	x0, [sp, #40]
     7a0:	ldr	x0, [x0, #32]
     7a4:	cmp	x0, #0x0
     7a8:	b.eq	7c0 <block_iterate_dind+0x1f8>  // b.none
     7ac:	ldr	w0, [sp, #108]
     7b0:	orr	w0, w0, #0x4
     7b4:	str	w0, [sp, #108]
     7b8:	ldr	w0, [sp, #108]
     7bc:	b	ad0 <block_iterate_dind+0x508>
     7c0:	ldr	x0, [sp, #40]
     7c4:	ldr	x0, [x0, #48]
     7c8:	str	x0, [sp, #88]
     7cc:	str	wzr, [sp, #96]
     7d0:	ldr	x0, [sp, #40]
     7d4:	ldr	w0, [x0, #28]
     7d8:	and	w0, w0, #0x1
     7dc:	cmp	w0, #0x0
     7e0:	b.eq	87c <block_iterate_dind+0x2b4>  // b.none
     7e4:	str	wzr, [sp, #100]
     7e8:	b	868 <block_iterate_dind+0x2a0>
     7ec:	ldr	x0, [sp, #56]
     7f0:	ldr	w0, [x0]
     7f4:	ldr	x3, [sp, #40]
     7f8:	ldr	w2, [sp, #96]
     7fc:	mov	w1, w0
     800:	ldr	x0, [sp, #88]
     804:	bl	0 <block_iterate_ind>
     808:	str	w0, [sp, #80]
     80c:	ldr	w1, [sp, #104]
     810:	ldr	w0, [sp, #80]
     814:	orr	w0, w1, w0
     818:	str	w0, [sp, #104]
     81c:	ldr	w0, [sp, #80]
     820:	and	w0, w0, #0x6
     824:	cmp	w0, #0x0
     828:	b.eq	844 <block_iterate_dind+0x27c>  // b.none
     82c:	ldr	w0, [sp, #80]
     830:	and	w0, w0, #0x6
     834:	ldr	w1, [sp, #108]
     838:	orr	w0, w1, w0
     83c:	str	w0, [sp, #108]
     840:	b	93c <block_iterate_dind+0x374>
     844:	ldr	w0, [sp, #96]
     848:	add	w0, w0, #0x4
     84c:	str	w0, [sp, #96]
     850:	ldr	w0, [sp, #100]
     854:	add	w0, w0, #0x1
     858:	str	w0, [sp, #100]
     85c:	ldr	x0, [sp, #88]
     860:	add	x0, x0, #0x4
     864:	str	x0, [sp, #88]
     868:	ldr	w1, [sp, #100]
     86c:	ldr	w0, [sp, #84]
     870:	cmp	w1, w0
     874:	b.lt	7ec <block_iterate_dind+0x224>  // b.tstop
     878:	b	93c <block_iterate_dind+0x374>
     87c:	str	wzr, [sp, #100]
     880:	b	92c <block_iterate_dind+0x364>
     884:	ldr	x0, [sp, #88]
     888:	ldr	w0, [x0]
     88c:	cmp	w0, #0x0
     890:	b.ne	8b0 <block_iterate_dind+0x2e8>  // b.any
     894:	ldr	x0, [sp, #40]
     898:	ldr	x1, [x0, #16]
     89c:	ldrsw	x0, [sp, #84]
     8a0:	add	x1, x1, x0
     8a4:	ldr	x0, [sp, #40]
     8a8:	str	x1, [x0, #16]
     8ac:	b	914 <block_iterate_dind+0x34c>
     8b0:	ldr	x0, [sp, #56]
     8b4:	ldr	w0, [x0]
     8b8:	ldr	x3, [sp, #40]
     8bc:	ldr	w2, [sp, #96]
     8c0:	mov	w1, w0
     8c4:	ldr	x0, [sp, #88]
     8c8:	bl	0 <block_iterate_ind>
     8cc:	str	w0, [sp, #80]
     8d0:	ldr	w1, [sp, #104]
     8d4:	ldr	w0, [sp, #80]
     8d8:	orr	w0, w1, w0
     8dc:	str	w0, [sp, #104]
     8e0:	ldr	w0, [sp, #80]
     8e4:	and	w0, w0, #0x6
     8e8:	cmp	w0, #0x0
     8ec:	b.eq	908 <block_iterate_dind+0x340>  // b.none
     8f0:	ldr	w0, [sp, #80]
     8f4:	and	w0, w0, #0x6
     8f8:	ldr	w1, [sp, #108]
     8fc:	orr	w0, w1, w0
     900:	str	w0, [sp, #108]
     904:	b	93c <block_iterate_dind+0x374>
     908:	ldr	w0, [sp, #96]
     90c:	add	w0, w0, #0x4
     910:	str	w0, [sp, #96]
     914:	ldr	w0, [sp, #100]
     918:	add	w0, w0, #0x1
     91c:	str	w0, [sp, #100]
     920:	ldr	x0, [sp, #88]
     924:	add	x0, x0, #0x4
     928:	str	x0, [sp, #88]
     92c:	ldr	w1, [sp, #100]
     930:	ldr	w0, [sp, #84]
     934:	cmp	w1, w0
     938:	b.lt	884 <block_iterate_dind+0x2bc>  // b.tstop
     93c:	ldr	x0, [sp, #40]
     940:	ldr	w0, [x0, #28]
     944:	and	w0, w0, #0x8
     948:	cmp	w0, #0x0
     94c:	b.eq	984 <block_iterate_dind+0x3bc>  // b.none
     950:	ldr	w0, [sp, #104]
     954:	and	w0, w0, #0x1
     958:	cmp	w0, #0x0
     95c:	b.eq	984 <block_iterate_dind+0x3bc>  // b.none
     960:	ldr	x0, [sp, #40]
     964:	mov	x1, #0xb76b                	// #46955
     968:	movk	x1, #0x7f2b, lsl #16
     96c:	str	x1, [x0, #32]
     970:	ldr	w0, [sp, #104]
     974:	orr	w0, w0, #0x6
     978:	str	w0, [sp, #104]
     97c:	ldr	w0, [sp, #104]
     980:	b	ad0 <block_iterate_dind+0x508>
     984:	ldr	w0, [sp, #104]
     988:	and	w0, w0, #0x1
     98c:	cmp	w0, #0x0
     990:	b.eq	9e0 <block_iterate_dind+0x418>  // b.none
     994:	ldr	x0, [sp, #40]
     998:	ldr	x3, [x0]
     99c:	ldr	x0, [sp, #56]
     9a0:	ldr	w1, [x0]
     9a4:	ldr	x0, [sp, #40]
     9a8:	ldr	x0, [x0, #48]
     9ac:	mov	x2, x0
     9b0:	mov	x0, x3
     9b4:	bl	0 <ext2fs_write_ind_block>
     9b8:	mov	x1, x0
     9bc:	ldr	x0, [sp, #40]
     9c0:	str	x1, [x0, #32]
     9c4:	ldr	x0, [sp, #40]
     9c8:	ldr	x0, [x0, #32]
     9cc:	cmp	x0, #0x0
     9d0:	b.eq	9e0 <block_iterate_dind+0x418>  // b.none
     9d4:	ldr	w0, [sp, #108]
     9d8:	orr	w0, w0, #0x6
     9dc:	str	w0, [sp, #108]
     9e0:	ldr	x0, [sp, #40]
     9e4:	ldr	w0, [x0, #28]
     9e8:	and	w0, w0, #0x2
     9ec:	cmp	w0, #0x0
     9f0:	b.eq	a84 <block_iterate_dind+0x4bc>  // b.none
     9f4:	ldr	x0, [sp, #40]
     9f8:	ldr	w0, [x0, #28]
     9fc:	and	w0, w0, #0x4
     a00:	cmp	w0, #0x0
     a04:	b.ne	a84 <block_iterate_dind+0x4bc>  // b.any
     a08:	ldr	w0, [sp, #108]
     a0c:	and	w0, w0, #0x2
     a10:	cmp	w0, #0x0
     a14:	b.ne	a84 <block_iterate_dind+0x4bc>  // b.any
     a18:	ldr	x0, [sp, #56]
     a1c:	ldr	w0, [x0]
     a20:	mov	w0, w0
     a24:	str	x0, [sp, #72]
     a28:	ldr	x0, [sp, #40]
     a2c:	ldr	x6, [x0, #8]
     a30:	ldr	x0, [sp, #40]
     a34:	ldr	x7, [x0]
     a38:	ldr	w1, [sp, #52]
     a3c:	ldr	x0, [sp, #40]
     a40:	ldr	x2, [x0, #64]
     a44:	add	x0, sp, #0x48
     a48:	mov	x5, x2
     a4c:	ldr	w4, [sp, #48]
     a50:	mov	x3, x1
     a54:	mov	x2, #0xfffffffffffffffe    	// #-2
     a58:	mov	x1, x0
     a5c:	mov	x0, x7
     a60:	blr	x6
     a64:	mov	w1, w0
     a68:	ldr	w0, [sp, #108]
     a6c:	orr	w0, w0, w1
     a70:	str	w0, [sp, #108]
     a74:	ldr	x0, [sp, #72]
     a78:	mov	w1, w0
     a7c:	ldr	x0, [sp, #56]
     a80:	str	w1, [x0]
     a84:	ldr	x0, [sp, #40]
     a88:	ldr	w0, [x0, #28]
     a8c:	and	w0, w0, #0x8
     a90:	cmp	w0, #0x0
     a94:	b.eq	acc <block_iterate_dind+0x504>  // b.none
     a98:	ldr	w0, [sp, #108]
     a9c:	and	w0, w0, #0x1
     aa0:	cmp	w0, #0x0
     aa4:	b.eq	acc <block_iterate_dind+0x504>  // b.none
     aa8:	ldr	x0, [sp, #40]
     aac:	mov	x1, #0xb76b                	// #46955
     ab0:	movk	x1, #0x7f2b, lsl #16
     ab4:	str	x1, [x0, #32]
     ab8:	ldr	w0, [sp, #108]
     abc:	orr	w0, w0, #0x6
     ac0:	str	w0, [sp, #108]
     ac4:	ldr	w0, [sp, #108]
     ac8:	b	ad0 <block_iterate_dind+0x508>
     acc:	ldr	w0, [sp, #108]
     ad0:	ldr	x19, [sp, #16]
     ad4:	ldp	x29, x30, [sp], #112
     ad8:	ret

0000000000000adc <block_iterate_tind>:
     adc:	stp	x29, x30, [sp, #-112]!
     ae0:	mov	x29, sp
     ae4:	str	x19, [sp, #16]
     ae8:	str	x0, [sp, #56]
     aec:	str	w1, [sp, #52]
     af0:	str	w2, [sp, #48]
     af4:	str	x3, [sp, #40]
     af8:	str	wzr, [sp, #108]
     afc:	str	wzr, [sp, #104]
     b00:	ldr	x0, [sp, #40]
     b04:	ldr	x0, [x0]
     b08:	ldr	w0, [x0, #40]
     b0c:	lsr	w0, w0, #2
     b10:	str	w0, [sp, #84]
     b14:	ldr	x0, [sp, #40]
     b18:	ldr	w0, [x0, #28]
     b1c:	and	w0, w0, #0x6
     b20:	cmp	w0, #0x0
     b24:	b.ne	b88 <block_iterate_tind+0xac>  // b.any
     b28:	ldr	x0, [sp, #56]
     b2c:	ldr	w0, [x0]
     b30:	mov	w0, w0
     b34:	str	x0, [sp, #72]
     b38:	ldr	x0, [sp, #40]
     b3c:	ldr	x6, [x0, #8]
     b40:	ldr	x0, [sp, #40]
     b44:	ldr	x7, [x0]
     b48:	ldr	w1, [sp, #52]
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x2, [x0, #64]
     b54:	add	x0, sp, #0x48
     b58:	mov	x5, x2
     b5c:	ldr	w4, [sp, #48]
     b60:	mov	x3, x1
     b64:	mov	x2, #0xfffffffffffffffd    	// #-3
     b68:	mov	x1, x0
     b6c:	mov	x0, x7
     b70:	blr	x6
     b74:	str	w0, [sp, #108]
     b78:	ldr	x0, [sp, #72]
     b7c:	mov	w1, w0
     b80:	ldr	x0, [sp, #56]
     b84:	str	w1, [x0]
     b88:	ldr	x0, [sp, #40]
     b8c:	ldr	w0, [x0, #28]
     b90:	and	w0, w0, #0x8
     b94:	cmp	w0, #0x0
     b98:	b.eq	bd0 <block_iterate_tind+0xf4>  // b.none
     b9c:	ldr	w0, [sp, #108]
     ba0:	and	w0, w0, #0x1
     ba4:	cmp	w0, #0x0
     ba8:	b.eq	bd0 <block_iterate_tind+0xf4>  // b.none
     bac:	ldr	x0, [sp, #40]
     bb0:	mov	x1, #0xb76b                	// #46955
     bb4:	movk	x1, #0x7f2b, lsl #16
     bb8:	str	x1, [x0, #32]
     bbc:	ldr	w0, [sp, #108]
     bc0:	orr	w0, w0, #0x6
     bc4:	str	w0, [sp, #108]
     bc8:	ldr	w0, [sp, #108]
     bcc:	b	ffc <block_iterate_tind+0x520>
     bd0:	ldr	x0, [sp, #56]
     bd4:	ldr	w0, [x0]
     bd8:	cmp	w0, #0x0
     bdc:	b.eq	bf0 <block_iterate_tind+0x114>  // b.none
     be0:	ldr	w0, [sp, #108]
     be4:	and	w0, w0, #0x2
     be8:	cmp	w0, #0x0
     bec:	b.eq	c28 <block_iterate_tind+0x14c>  // b.none
     bf0:	ldr	x0, [sp, #40]
     bf4:	ldr	x0, [x0, #16]
     bf8:	mov	x2, x0
     bfc:	ldrsw	x1, [sp, #84]
     c00:	ldrsw	x0, [sp, #84]
     c04:	mul	x1, x1, x0
     c08:	ldrsw	x0, [sp, #84]
     c0c:	mul	x0, x1, x0
     c10:	add	x0, x2, x0
     c14:	mov	x1, x0
     c18:	ldr	x0, [sp, #40]
     c1c:	str	x1, [x0, #16]
     c20:	ldr	w0, [sp, #108]
     c24:	b	ffc <block_iterate_tind+0x520>
     c28:	ldr	x0, [sp, #56]
     c2c:	ldr	w0, [x0]
     c30:	mov	w19, w0
     c34:	ldr	x0, [sp, #40]
     c38:	ldr	x0, [x0]
     c3c:	ldr	x0, [x0, #32]
     c40:	bl	0 <ext2fs_blocks_count>
     c44:	cmp	x19, x0
     c48:	b.cs	c6c <block_iterate_tind+0x190>  // b.hs, b.nlast
     c4c:	ldr	x0, [sp, #56]
     c50:	ldr	w1, [x0]
     c54:	ldr	x0, [sp, #40]
     c58:	ldr	x0, [x0]
     c5c:	ldr	x0, [x0, #32]
     c60:	ldr	w0, [x0, #20]
     c64:	cmp	w1, w0
     c68:	b.cs	c90 <block_iterate_tind+0x1b4>  // b.hs, b.nlast
     c6c:	ldr	x0, [sp, #40]
     c70:	mov	x1, #0xb737                	// #46903
     c74:	movk	x1, #0x7f2b, lsl #16
     c78:	str	x1, [x0, #32]
     c7c:	ldr	w0, [sp, #108]
     c80:	orr	w0, w0, #0x4
     c84:	str	w0, [sp, #108]
     c88:	ldr	w0, [sp, #108]
     c8c:	b	ffc <block_iterate_tind+0x520>
     c90:	ldr	x0, [sp, #40]
     c94:	ldr	x3, [x0]
     c98:	ldr	x0, [sp, #56]
     c9c:	ldr	w1, [x0]
     ca0:	ldr	x0, [sp, #40]
     ca4:	ldr	x0, [x0, #56]
     ca8:	mov	x2, x0
     cac:	mov	x0, x3
     cb0:	bl	0 <ext2fs_read_ind_block>
     cb4:	mov	x1, x0
     cb8:	ldr	x0, [sp, #40]
     cbc:	str	x1, [x0, #32]
     cc0:	ldr	x0, [sp, #40]
     cc4:	ldr	x0, [x0, #32]
     cc8:	cmp	x0, #0x0
     ccc:	b.eq	ce4 <block_iterate_tind+0x208>  // b.none
     cd0:	ldr	w0, [sp, #108]
     cd4:	orr	w0, w0, #0x4
     cd8:	str	w0, [sp, #108]
     cdc:	ldr	w0, [sp, #108]
     ce0:	b	ffc <block_iterate_tind+0x520>
     ce4:	ldr	x0, [sp, #40]
     ce8:	ldr	x0, [x0, #56]
     cec:	str	x0, [sp, #88]
     cf0:	str	wzr, [sp, #96]
     cf4:	ldr	x0, [sp, #40]
     cf8:	ldr	w0, [x0, #28]
     cfc:	and	w0, w0, #0x1
     d00:	cmp	w0, #0x0
     d04:	b.eq	da0 <block_iterate_tind+0x2c4>  // b.none
     d08:	str	wzr, [sp, #100]
     d0c:	b	d8c <block_iterate_tind+0x2b0>
     d10:	ldr	x0, [sp, #56]
     d14:	ldr	w0, [x0]
     d18:	ldr	x3, [sp, #40]
     d1c:	ldr	w2, [sp, #96]
     d20:	mov	w1, w0
     d24:	ldr	x0, [sp, #88]
     d28:	bl	5c8 <block_iterate_dind>
     d2c:	str	w0, [sp, #80]
     d30:	ldr	w1, [sp, #104]
     d34:	ldr	w0, [sp, #80]
     d38:	orr	w0, w1, w0
     d3c:	str	w0, [sp, #104]
     d40:	ldr	w0, [sp, #80]
     d44:	and	w0, w0, #0x6
     d48:	cmp	w0, #0x0
     d4c:	b.eq	d68 <block_iterate_tind+0x28c>  // b.none
     d50:	ldr	w0, [sp, #80]
     d54:	and	w0, w0, #0x6
     d58:	ldr	w1, [sp, #108]
     d5c:	orr	w0, w1, w0
     d60:	str	w0, [sp, #108]
     d64:	b	e68 <block_iterate_tind+0x38c>
     d68:	ldr	w0, [sp, #96]
     d6c:	add	w0, w0, #0x4
     d70:	str	w0, [sp, #96]
     d74:	ldr	w0, [sp, #100]
     d78:	add	w0, w0, #0x1
     d7c:	str	w0, [sp, #100]
     d80:	ldr	x0, [sp, #88]
     d84:	add	x0, x0, #0x4
     d88:	str	x0, [sp, #88]
     d8c:	ldr	w1, [sp, #100]
     d90:	ldr	w0, [sp, #84]
     d94:	cmp	w1, w0
     d98:	b.lt	d10 <block_iterate_tind+0x234>  // b.tstop
     d9c:	b	e68 <block_iterate_tind+0x38c>
     da0:	str	wzr, [sp, #100]
     da4:	b	e58 <block_iterate_tind+0x37c>
     da8:	ldr	x0, [sp, #88]
     dac:	ldr	w0, [x0]
     db0:	cmp	w0, #0x0
     db4:	b.ne	ddc <block_iterate_tind+0x300>  // b.any
     db8:	ldr	x0, [sp, #40]
     dbc:	ldr	x1, [x0, #16]
     dc0:	ldr	w0, [sp, #84]
     dc4:	mul	w0, w0, w0
     dc8:	sxtw	x0, w0
     dcc:	add	x1, x1, x0
     dd0:	ldr	x0, [sp, #40]
     dd4:	str	x1, [x0, #16]
     dd8:	b	e40 <block_iterate_tind+0x364>
     ddc:	ldr	x0, [sp, #56]
     de0:	ldr	w0, [x0]
     de4:	ldr	x3, [sp, #40]
     de8:	ldr	w2, [sp, #96]
     dec:	mov	w1, w0
     df0:	ldr	x0, [sp, #88]
     df4:	bl	5c8 <block_iterate_dind>
     df8:	str	w0, [sp, #80]
     dfc:	ldr	w1, [sp, #104]
     e00:	ldr	w0, [sp, #80]
     e04:	orr	w0, w1, w0
     e08:	str	w0, [sp, #104]
     e0c:	ldr	w0, [sp, #80]
     e10:	and	w0, w0, #0x6
     e14:	cmp	w0, #0x0
     e18:	b.eq	e34 <block_iterate_tind+0x358>  // b.none
     e1c:	ldr	w0, [sp, #80]
     e20:	and	w0, w0, #0x6
     e24:	ldr	w1, [sp, #108]
     e28:	orr	w0, w1, w0
     e2c:	str	w0, [sp, #108]
     e30:	b	e68 <block_iterate_tind+0x38c>
     e34:	ldr	w0, [sp, #96]
     e38:	add	w0, w0, #0x4
     e3c:	str	w0, [sp, #96]
     e40:	ldr	w0, [sp, #100]
     e44:	add	w0, w0, #0x1
     e48:	str	w0, [sp, #100]
     e4c:	ldr	x0, [sp, #88]
     e50:	add	x0, x0, #0x4
     e54:	str	x0, [sp, #88]
     e58:	ldr	w1, [sp, #100]
     e5c:	ldr	w0, [sp, #84]
     e60:	cmp	w1, w0
     e64:	b.lt	da8 <block_iterate_tind+0x2cc>  // b.tstop
     e68:	ldr	x0, [sp, #40]
     e6c:	ldr	w0, [x0, #28]
     e70:	and	w0, w0, #0x8
     e74:	cmp	w0, #0x0
     e78:	b.eq	eb0 <block_iterate_tind+0x3d4>  // b.none
     e7c:	ldr	w0, [sp, #104]
     e80:	and	w0, w0, #0x1
     e84:	cmp	w0, #0x0
     e88:	b.eq	eb0 <block_iterate_tind+0x3d4>  // b.none
     e8c:	ldr	x0, [sp, #40]
     e90:	mov	x1, #0xb76b                	// #46955
     e94:	movk	x1, #0x7f2b, lsl #16
     e98:	str	x1, [x0, #32]
     e9c:	ldr	w0, [sp, #104]
     ea0:	orr	w0, w0, #0x6
     ea4:	str	w0, [sp, #104]
     ea8:	ldr	w0, [sp, #104]
     eac:	b	ffc <block_iterate_tind+0x520>
     eb0:	ldr	w0, [sp, #104]
     eb4:	and	w0, w0, #0x1
     eb8:	cmp	w0, #0x0
     ebc:	b.eq	f0c <block_iterate_tind+0x430>  // b.none
     ec0:	ldr	x0, [sp, #40]
     ec4:	ldr	x3, [x0]
     ec8:	ldr	x0, [sp, #56]
     ecc:	ldr	w1, [x0]
     ed0:	ldr	x0, [sp, #40]
     ed4:	ldr	x0, [x0, #56]
     ed8:	mov	x2, x0
     edc:	mov	x0, x3
     ee0:	bl	0 <ext2fs_write_ind_block>
     ee4:	mov	x1, x0
     ee8:	ldr	x0, [sp, #40]
     eec:	str	x1, [x0, #32]
     ef0:	ldr	x0, [sp, #40]
     ef4:	ldr	x0, [x0, #32]
     ef8:	cmp	x0, #0x0
     efc:	b.eq	f0c <block_iterate_tind+0x430>  // b.none
     f00:	ldr	w0, [sp, #108]
     f04:	orr	w0, w0, #0x6
     f08:	str	w0, [sp, #108]
     f0c:	ldr	x0, [sp, #40]
     f10:	ldr	w0, [x0, #28]
     f14:	and	w0, w0, #0x2
     f18:	cmp	w0, #0x0
     f1c:	b.eq	fb0 <block_iterate_tind+0x4d4>  // b.none
     f20:	ldr	x0, [sp, #40]
     f24:	ldr	w0, [x0, #28]
     f28:	and	w0, w0, #0x4
     f2c:	cmp	w0, #0x0
     f30:	b.ne	fb0 <block_iterate_tind+0x4d4>  // b.any
     f34:	ldr	w0, [sp, #108]
     f38:	and	w0, w0, #0x2
     f3c:	cmp	w0, #0x0
     f40:	b.ne	fb0 <block_iterate_tind+0x4d4>  // b.any
     f44:	ldr	x0, [sp, #56]
     f48:	ldr	w0, [x0]
     f4c:	mov	w0, w0
     f50:	str	x0, [sp, #72]
     f54:	ldr	x0, [sp, #40]
     f58:	ldr	x6, [x0, #8]
     f5c:	ldr	x0, [sp, #40]
     f60:	ldr	x7, [x0]
     f64:	ldr	w1, [sp, #52]
     f68:	ldr	x0, [sp, #40]
     f6c:	ldr	x2, [x0, #64]
     f70:	add	x0, sp, #0x48
     f74:	mov	x5, x2
     f78:	ldr	w4, [sp, #48]
     f7c:	mov	x3, x1
     f80:	mov	x2, #0xfffffffffffffffd    	// #-3
     f84:	mov	x1, x0
     f88:	mov	x0, x7
     f8c:	blr	x6
     f90:	mov	w1, w0
     f94:	ldr	w0, [sp, #108]
     f98:	orr	w0, w0, w1
     f9c:	str	w0, [sp, #108]
     fa0:	ldr	x0, [sp, #72]
     fa4:	mov	w1, w0
     fa8:	ldr	x0, [sp, #56]
     fac:	str	w1, [x0]
     fb0:	ldr	x0, [sp, #40]
     fb4:	ldr	w0, [x0, #28]
     fb8:	and	w0, w0, #0x8
     fbc:	cmp	w0, #0x0
     fc0:	b.eq	ff8 <block_iterate_tind+0x51c>  // b.none
     fc4:	ldr	w0, [sp, #108]
     fc8:	and	w0, w0, #0x1
     fcc:	cmp	w0, #0x0
     fd0:	b.eq	ff8 <block_iterate_tind+0x51c>  // b.none
     fd4:	ldr	x0, [sp, #40]
     fd8:	mov	x1, #0xb76b                	// #46955
     fdc:	movk	x1, #0x7f2b, lsl #16
     fe0:	str	x1, [x0, #32]
     fe4:	ldr	w0, [sp, #108]
     fe8:	orr	w0, w0, #0x6
     fec:	str	w0, [sp, #108]
     ff0:	ldr	w0, [sp, #108]
     ff4:	b	ffc <block_iterate_tind+0x520>
     ff8:	ldr	w0, [sp, #108]
     ffc:	ldr	x19, [sp, #16]
    1000:	ldp	x29, x30, [sp], #112
    1004:	ret

0000000000001008 <ext2fs_block_iterate3>:
    1008:	stp	x29, x30, [sp, #-400]!
    100c:	mov	x29, sp
    1010:	str	x0, [sp, #56]
    1014:	str	w1, [sp, #52]
    1018:	str	w2, [sp, #48]
    101c:	str	x3, [sp, #40]
    1020:	str	x4, [sp, #32]
    1024:	str	x5, [sp, #24]
    1028:	str	wzr, [sp, #392]
    102c:	ldr	x0, [sp, #56]
    1030:	ldr	x1, [x0]
    1034:	mov	x0, #0xb701                	// #46849
    1038:	movk	x0, #0x7f2b, lsl #16
    103c:	cmp	x1, x0
    1040:	b.eq	1050 <ext2fs_block_iterate3+0x48>  // b.none
    1044:	mov	x0, #0xb701                	// #46849
    1048:	movk	x0, #0x7f2b, lsl #16
    104c:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    1050:	add	x0, sp, #0xe0
    1054:	mov	x2, x0
    1058:	ldr	w1, [sp, #52]
    105c:	ldr	x0, [sp, #56]
    1060:	bl	0 <ext2fs_read_inode>
    1064:	str	x0, [sp, #184]
    1068:	ldr	x0, [sp, #184]
    106c:	cmp	x0, #0x0
    1070:	b.eq	107c <ext2fs_block_iterate3+0x74>  // b.none
    1074:	ldr	x0, [sp, #184]
    1078:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    107c:	ldr	w0, [sp, #256]
    1080:	and	w0, w0, #0x10000000
    1084:	cmp	w0, #0x0
    1088:	b.eq	1098 <ext2fs_block_iterate3+0x90>  // b.none
    108c:	mov	x0, #0xb79d                	// #47005
    1090:	movk	x0, #0x7f2b, lsl #16
    1094:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    1098:	ldr	w0, [sp, #48]
    109c:	and	w0, w0, #0x1000
    10a0:	cmp	w0, #0x0
    10a4:	b.eq	10d0 <ext2fs_block_iterate3+0xc8>  // b.none
    10a8:	ldrh	w0, [sp, #224]
    10ac:	and	w0, w0, #0xf000
    10b0:	cmp	w0, #0x4, lsl #12
    10b4:	b.eq	10d0 <ext2fs_block_iterate3+0xc8>  // b.none
    10b8:	ldr	w0, [sp, #332]
    10bc:	cmp	w0, #0x0
    10c0:	b.eq	10d0 <ext2fs_block_iterate3+0xc8>  // b.none
    10c4:	mov	x0, #0xb752                	// #46930
    10c8:	movk	x0, #0x7f2b, lsl #16
    10cc:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    10d0:	ldr	x0, [sp, #56]
    10d4:	ldr	w0, [x0, #40]
    10d8:	lsr	w0, w0, #2
    10dc:	str	w0, [sp, #368]
    10e0:	ldr	x0, [sp, #56]
    10e4:	str	x0, [sp, #152]
    10e8:	ldr	x0, [sp, #32]
    10ec:	str	x0, [sp, #160]
    10f0:	ldr	x0, [sp, #24]
    10f4:	str	x0, [sp, #216]
    10f8:	ldr	w0, [sp, #48]
    10fc:	str	w0, [sp, #180]
    1100:	str	xzr, [sp, #168]
    1104:	ldr	x0, [sp, #40]
    1108:	cmp	x0, #0x0
    110c:	b.eq	111c <ext2fs_block_iterate3+0x114>  // b.none
    1110:	ldr	x0, [sp, #40]
    1114:	str	x0, [sp, #192]
    1118:	b	1154 <ext2fs_block_iterate3+0x14c>
    111c:	ldr	x0, [sp, #56]
    1120:	ldr	w0, [x0, #40]
    1124:	mov	w1, w0
    1128:	add	x0, sp, #0x98
    112c:	add	x0, x0, #0x28
    1130:	mov	x2, x0
    1134:	mov	x0, #0x3                   	// #3
    1138:	bl	0 <ext2fs_get_array>
    113c:	str	x0, [sp, #360]
    1140:	ldr	x0, [sp, #360]
    1144:	cmp	x0, #0x0
    1148:	b.eq	1154 <ext2fs_block_iterate3+0x14c>  // b.none
    114c:	ldr	x0, [sp, #360]
    1150:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    1154:	ldr	x1, [sp, #192]
    1158:	ldr	x0, [sp, #56]
    115c:	ldr	w0, [x0, #40]
    1160:	mov	w0, w0
    1164:	add	x0, x1, x0
    1168:	str	x0, [sp, #200]
    116c:	ldr	x1, [sp, #200]
    1170:	ldr	x0, [sp, #56]
    1174:	ldr	w0, [x0, #40]
    1178:	mov	w0, w0
    117c:	add	x0, x1, x0
    1180:	str	x0, [sp, #208]
    1184:	ldr	x0, [sp, #56]
    1188:	ldr	x0, [x0, #32]
    118c:	ldr	w0, [x0, #72]
    1190:	cmp	w0, #0x1
    1194:	b.ne	1248 <ext2fs_block_iterate3+0x240>  // b.any
    1198:	ldr	w0, [sp, #48]
    119c:	and	w0, w0, #0x4
    11a0:	cmp	w0, #0x0
    11a4:	b.ne	1248 <ext2fs_block_iterate3+0x240>  // b.any
    11a8:	ldr	w0, [sp, #260]
    11ac:	cmp	w0, #0x0
    11b0:	b.eq	1248 <ext2fs_block_iterate3+0x240>  // b.none
    11b4:	ldr	w0, [sp, #260]
    11b8:	mov	w0, w0
    11bc:	str	x0, [sp, #144]
    11c0:	ldr	x6, [sp, #160]
    11c4:	add	x0, sp, #0x90
    11c8:	ldr	x5, [sp, #24]
    11cc:	mov	w4, #0x0                   	// #0
    11d0:	mov	x3, #0x0                   	// #0
    11d4:	mov	x2, #0xfffffffffffffffc    	// #-4
    11d8:	mov	x1, x0
    11dc:	ldr	x0, [sp, #56]
    11e0:	blr	x6
    11e4:	mov	w1, w0
    11e8:	ldr	w0, [sp, #392]
    11ec:	orr	w0, w0, w1
    11f0:	str	w0, [sp, #392]
    11f4:	ldr	x0, [sp, #144]
    11f8:	str	w0, [sp, #260]
    11fc:	ldr	w0, [sp, #392]
    1200:	and	w0, w0, #0x2
    1204:	cmp	w0, #0x0
    1208:	b.ne	1934 <ext2fs_block_iterate3+0x92c>  // b.any
    120c:	ldr	w0, [sp, #180]
    1210:	and	w0, w0, #0x8
    1214:	cmp	w0, #0x0
    1218:	b.eq	1248 <ext2fs_block_iterate3+0x240>  // b.none
    121c:	ldr	w0, [sp, #392]
    1220:	and	w0, w0, #0x1
    1224:	cmp	w0, #0x0
    1228:	b.eq	1248 <ext2fs_block_iterate3+0x240>  // b.none
    122c:	mov	x0, #0xb76b                	// #46955
    1230:	movk	x0, #0x7f2b, lsl #16
    1234:	str	x0, [sp, #184]
    1238:	ldr	w0, [sp, #392]
    123c:	orr	w0, w0, #0x6
    1240:	str	w0, [sp, #392]
    1244:	b	1950 <ext2fs_block_iterate3+0x948>
    1248:	ldr	w0, [sp, #256]
    124c:	and	w0, w0, #0x80000
    1250:	cmp	w0, #0x0
    1254:	b.eq	16e8 <ext2fs_block_iterate3+0x6e0>  // b.none
    1258:	str	xzr, [sp, #384]
    125c:	mov	w0, #0x1                   	// #1
    1260:	str	w0, [sp, #380]
    1264:	add	x1, sp, #0x88
    1268:	add	x0, sp, #0xe0
    126c:	mov	x3, x1
    1270:	mov	x2, x0
    1274:	ldr	w1, [sp, #52]
    1278:	ldr	x0, [sp, #56]
    127c:	bl	0 <ext2fs_extent_open2>
    1280:	str	x0, [sp, #184]
    1284:	ldr	x0, [sp, #184]
    1288:	cmp	x0, #0x0
    128c:	b.ne	193c <ext2fs_block_iterate3+0x934>  // b.any
    1290:	ldr	w0, [sp, #380]
    1294:	cmp	w0, #0x0
    1298:	b.ne	12a4 <ext2fs_block_iterate3+0x29c>  // b.any
    129c:	str	xzr, [sp, #184]
    12a0:	b	12bc <ext2fs_block_iterate3+0x2b4>
    12a4:	ldr	x0, [sp, #136]
    12a8:	add	x1, sp, #0x70
    12ac:	mov	x2, x1
    12b0:	ldr	w1, [sp, #380]
    12b4:	bl	0 <ext2fs_extent_get>
    12b8:	str	x0, [sp, #184]
    12bc:	ldr	x0, [sp, #184]
    12c0:	cmp	x0, #0x0
    12c4:	b.eq	13d4 <ext2fs_block_iterate3+0x3cc>  // b.none
    12c8:	ldr	x1, [sp, #184]
    12cc:	mov	x0, #0xb77c                	// #46972
    12d0:	movk	x0, #0x7f2b, lsl #16
    12d4:	cmp	x1, x0
    12d8:	b.ne	169c <ext2fs_block_iterate3+0x694>  // b.any
    12dc:	str	xzr, [sp, #184]
    12e0:	ldr	w0, [sp, #48]
    12e4:	and	w0, w0, #0x1
    12e8:	cmp	w0, #0x0
    12ec:	b.eq	16a4 <ext2fs_block_iterate3+0x69c>  // b.none
    12f0:	nop
    12f4:	str	xzr, [sp, #80]
    12f8:	ldr	x6, [sp, #160]
    12fc:	add	x0, sp, #0x50
    1300:	ldr	x5, [sp, #24]
    1304:	mov	w4, #0x0                   	// #0
    1308:	mov	x3, #0x0                   	// #0
    130c:	ldr	x2, [sp, #384]
    1310:	mov	x1, x0
    1314:	ldr	x0, [sp, #56]
    1318:	blr	x6
    131c:	str	w0, [sp, #356]
    1320:	ldr	w1, [sp, #392]
    1324:	ldr	w0, [sp, #356]
    1328:	orr	w0, w1, w0
    132c:	str	w0, [sp, #392]
    1330:	ldr	w0, [sp, #180]
    1334:	and	w0, w0, #0x8
    1338:	cmp	w0, #0x0
    133c:	b.eq	136c <ext2fs_block_iterate3+0x364>  // b.none
    1340:	ldr	w0, [sp, #392]
    1344:	and	w0, w0, #0x1
    1348:	cmp	w0, #0x0
    134c:	b.eq	136c <ext2fs_block_iterate3+0x364>  // b.none
    1350:	mov	x0, #0xb76b                	// #46955
    1354:	movk	x0, #0x7f2b, lsl #16
    1358:	str	x0, [sp, #184]
    135c:	ldr	w0, [sp, #392]
    1360:	orr	w0, w0, #0x6
    1364:	str	w0, [sp, #392]
    1368:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    136c:	ldr	w0, [sp, #356]
    1370:	and	w0, w0, #0x1
    1374:	cmp	w0, #0x0
    1378:	b.eq	16ac <ext2fs_block_iterate3+0x6a4>  // b.none
    137c:	ldr	x4, [sp, #136]
    1380:	ldr	x0, [sp, #384]
    1384:	add	x1, x0, #0x1
    1388:	str	x1, [sp, #384]
    138c:	mov	x1, x0
    1390:	ldr	x0, [sp, #80]
    1394:	mov	w3, #0x0                   	// #0
    1398:	mov	x2, x0
    139c:	mov	x0, x4
    13a0:	bl	0 <ext2fs_extent_set_bmap>
    13a4:	str	x0, [sp, #184]
    13a8:	ldr	x0, [sp, #184]
    13ac:	cmp	x0, #0x0
    13b0:	b.ne	16b4 <ext2fs_block_iterate3+0x6ac>  // b.any
    13b4:	ldr	w0, [sp, #392]
    13b8:	and	w0, w0, #0x2
    13bc:	cmp	w0, #0x0
    13c0:	b.ne	16b4 <ext2fs_block_iterate3+0x6ac>  // b.any
    13c4:	ldr	x0, [sp, #80]
    13c8:	cmp	x0, #0x0
    13cc:	b.eq	16ac <ext2fs_block_iterate3+0x6a4>  // b.none
    13d0:	b	12f4 <ext2fs_block_iterate3+0x2ec>
    13d4:	mov	w0, #0x9                   	// #9
    13d8:	str	w0, [sp, #380]
    13dc:	ldr	x0, [sp, #112]
    13e0:	str	x0, [sp, #80]
    13e4:	ldr	w0, [sp, #132]
    13e8:	and	w0, w0, #0x1
    13ec:	cmp	w0, #0x0
    13f0:	b.ne	14c8 <ext2fs_block_iterate3+0x4c0>  // b.any
    13f4:	ldr	w0, [sp, #180]
    13f8:	and	w0, w0, #0x4
    13fc:	cmp	w0, #0x0
    1400:	b.ne	1684 <ext2fs_block_iterate3+0x67c>  // b.any
    1404:	ldr	w0, [sp, #132]
    1408:	and	w0, w0, #0x4
    140c:	cmp	w0, #0x0
    1410:	b.ne	1424 <ext2fs_block_iterate3+0x41c>  // b.any
    1414:	ldr	w0, [sp, #180]
    1418:	and	w0, w0, #0x2
    141c:	cmp	w0, #0x0
    1420:	b.eq	1444 <ext2fs_block_iterate3+0x43c>  // b.none
    1424:	ldr	w0, [sp, #132]
    1428:	and	w0, w0, #0x4
    142c:	cmp	w0, #0x0
    1430:	b.eq	168c <ext2fs_block_iterate3+0x684>  // b.none
    1434:	ldr	w0, [sp, #180]
    1438:	and	w0, w0, #0x2
    143c:	cmp	w0, #0x0
    1440:	b.eq	168c <ext2fs_block_iterate3+0x684>  // b.none
    1444:	ldr	x6, [sp, #160]
    1448:	add	x0, sp, #0x50
    144c:	ldr	x5, [sp, #24]
    1450:	mov	w4, #0x0                   	// #0
    1454:	mov	x3, #0x0                   	// #0
    1458:	mov	x2, #0xffffffffffffffff    	// #-1
    145c:	mov	x1, x0
    1460:	ldr	x0, [sp, #56]
    1464:	blr	x6
    1468:	mov	w1, w0
    146c:	ldr	w0, [sp, #392]
    1470:	orr	w0, w0, w1
    1474:	str	w0, [sp, #392]
    1478:	ldr	w0, [sp, #392]
    147c:	and	w0, w0, #0x1
    1480:	cmp	w0, #0x0
    1484:	b.eq	14b4 <ext2fs_block_iterate3+0x4ac>  // b.none
    1488:	ldr	x0, [sp, #80]
    148c:	str	x0, [sp, #112]
    1490:	ldr	x0, [sp, #136]
    1494:	add	x1, sp, #0x70
    1498:	mov	x2, x1
    149c:	mov	w1, #0x0                   	// #0
    14a0:	bl	0 <ext2fs_extent_replace>
    14a4:	str	x0, [sp, #184]
    14a8:	ldr	x0, [sp, #184]
    14ac:	cmp	x0, #0x0
    14b0:	b.ne	16bc <ext2fs_block_iterate3+0x6b4>  // b.any
    14b4:	ldr	w0, [sp, #392]
    14b8:	and	w0, w0, #0x2
    14bc:	cmp	w0, #0x0
    14c0:	b.eq	168c <ext2fs_block_iterate3+0x684>  // b.none
    14c4:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    14c8:	str	wzr, [sp, #376]
    14cc:	ldr	w0, [sp, #132]
    14d0:	and	w0, w0, #0x2
    14d4:	cmp	w0, #0x0
    14d8:	b.eq	14e4 <ext2fs_block_iterate3+0x4dc>  // b.none
    14dc:	mov	w0, #0x1                   	// #1
    14e0:	str	w0, [sp, #376]
    14e4:	ldr	x0, [sp, #136]
    14e8:	add	x1, sp, #0x58
    14ec:	mov	x2, x1
    14f0:	ldr	w1, [sp, #380]
    14f4:	bl	0 <ext2fs_extent_get>
    14f8:	str	x0, [sp, #360]
    14fc:	ldr	x1, [sp, #120]
    1500:	ldr	w0, [sp, #128]
    1504:	mov	w0, w0
    1508:	add	x1, x1, x0
    150c:	ldr	x0, [sp, #384]
    1510:	cmp	x1, x0
    1514:	b.ls	1694 <ext2fs_block_iterate3+0x68c>  // b.plast
    1518:	ldr	x1, [sp, #120]
    151c:	ldr	x0, [sp, #384]
    1520:	cmp	x1, x0
    1524:	b.ls	1530 <ext2fs_block_iterate3+0x528>  // b.plast
    1528:	ldr	x0, [sp, #120]
    152c:	str	x0, [sp, #384]
    1530:	ldr	x0, [sp, #384]
    1534:	mov	w1, w0
    1538:	ldr	x0, [sp, #120]
    153c:	sub	w0, w1, w0
    1540:	str	w0, [sp, #372]
    1544:	ldr	w1, [sp, #372]
    1548:	ldr	x0, [sp, #80]
    154c:	add	x0, x1, x0
    1550:	str	x0, [sp, #80]
    1554:	ldr	x0, [sp, #120]
    1558:	str	x0, [sp, #384]
    155c:	str	wzr, [sp, #372]
    1560:	b	1648 <ext2fs_block_iterate3+0x640>
    1564:	ldr	x0, [sp, #80]
    1568:	str	x0, [sp, #72]
    156c:	ldr	x6, [sp, #160]
    1570:	add	x0, sp, #0x48
    1574:	ldr	x5, [sp, #24]
    1578:	mov	w4, #0x0                   	// #0
    157c:	mov	x3, #0x0                   	// #0
    1580:	ldr	x2, [sp, #384]
    1584:	mov	x1, x0
    1588:	ldr	x0, [sp, #56]
    158c:	blr	x6
    1590:	str	w0, [sp, #356]
    1594:	ldr	w1, [sp, #392]
    1598:	ldr	w0, [sp, #356]
    159c:	orr	w0, w1, w0
    15a0:	str	w0, [sp, #392]
    15a4:	ldr	w0, [sp, #180]
    15a8:	and	w0, w0, #0x8
    15ac:	cmp	w0, #0x0
    15b0:	b.eq	15e0 <ext2fs_block_iterate3+0x5d8>  // b.none
    15b4:	ldr	w0, [sp, #392]
    15b8:	and	w0, w0, #0x1
    15bc:	cmp	w0, #0x0
    15c0:	b.eq	15e0 <ext2fs_block_iterate3+0x5d8>  // b.none
    15c4:	mov	x0, #0xb76b                	// #46955
    15c8:	movk	x0, #0x7f2b, lsl #16
    15cc:	str	x0, [sp, #184]
    15d0:	ldr	w0, [sp, #392]
    15d4:	orr	w0, w0, #0x6
    15d8:	str	w0, [sp, #392]
    15dc:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    15e0:	ldr	w0, [sp, #356]
    15e4:	and	w0, w0, #0x1
    15e8:	cmp	w0, #0x0
    15ec:	b.eq	1614 <ext2fs_block_iterate3+0x60c>  // b.none
    15f0:	ldr	x0, [sp, #136]
    15f4:	ldr	x1, [sp, #384]
    15f8:	ldr	x2, [sp, #72]
    15fc:	ldr	w3, [sp, #376]
    1600:	bl	0 <ext2fs_extent_set_bmap>
    1604:	str	x0, [sp, #184]
    1608:	ldr	x0, [sp, #184]
    160c:	cmp	x0, #0x0
    1610:	b.ne	16c4 <ext2fs_block_iterate3+0x6bc>  // b.any
    1614:	ldr	w0, [sp, #392]
    1618:	and	w0, w0, #0x2
    161c:	cmp	w0, #0x0
    1620:	b.ne	16cc <ext2fs_block_iterate3+0x6c4>  // b.any
    1624:	ldr	x0, [sp, #80]
    1628:	add	x0, x0, #0x1
    162c:	str	x0, [sp, #80]
    1630:	ldr	x0, [sp, #384]
    1634:	add	x0, x0, #0x1
    1638:	str	x0, [sp, #384]
    163c:	ldr	w0, [sp, #372]
    1640:	add	w0, w0, #0x1
    1644:	str	w0, [sp, #372]
    1648:	ldr	w0, [sp, #128]
    164c:	ldr	w1, [sp, #372]
    1650:	cmp	w1, w0
    1654:	b.cc	1564 <ext2fs_block_iterate3+0x55c>  // b.lo, b.ul, b.last
    1658:	ldr	x0, [sp, #360]
    165c:	cmp	x0, #0x0
    1660:	b.ne	1290 <ext2fs_block_iterate3+0x288>  // b.any
    1664:	add	x2, sp, #0x70
    1668:	add	x3, sp, #0x58
    166c:	ldp	x0, x1, [x3]
    1670:	stp	x0, x1, [x2]
    1674:	ldr	x0, [x3, #16]
    1678:	str	x0, [x2, #16]
    167c:	str	wzr, [sp, #380]
    1680:	b	1290 <ext2fs_block_iterate3+0x288>
    1684:	nop
    1688:	b	1290 <ext2fs_block_iterate3+0x288>
    168c:	nop
    1690:	b	1290 <ext2fs_block_iterate3+0x288>
    1694:	nop
    1698:	b	1290 <ext2fs_block_iterate3+0x288>
    169c:	nop
    16a0:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16a4:	nop
    16a8:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16ac:	nop
    16b0:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16b4:	nop
    16b8:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16bc:	nop
    16c0:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16c4:	nop
    16c8:	b	16d0 <ext2fs_block_iterate3+0x6c8>
    16cc:	nop
    16d0:	ldr	x0, [sp, #136]
    16d4:	bl	0 <ext2fs_extent_free>
    16d8:	ldr	w0, [sp, #392]
    16dc:	orr	w0, w0, #0x4
    16e0:	str	w0, [sp, #392]
    16e4:	b	19a0 <ext2fs_block_iterate3+0x998>
    16e8:	str	wzr, [sp, #396]
    16ec:	b	17b4 <ext2fs_block_iterate3+0x7ac>
    16f0:	ldrsw	x0, [sp, #396]
    16f4:	add	x0, x0, #0x8
    16f8:	lsl	x0, x0, #2
    16fc:	add	x1, sp, #0xe8
    1700:	ldr	w0, [x1, x0]
    1704:	cmp	w0, #0x0
    1708:	b.ne	171c <ext2fs_block_iterate3+0x714>  // b.any
    170c:	ldr	w0, [sp, #48]
    1710:	and	w0, w0, #0x1
    1714:	cmp	w0, #0x0
    1718:	b.eq	179c <ext2fs_block_iterate3+0x794>  // b.none
    171c:	ldrsw	x0, [sp, #396]
    1720:	add	x0, x0, #0x8
    1724:	lsl	x0, x0, #2
    1728:	add	x1, sp, #0xe8
    172c:	ldr	w0, [x1, x0]
    1730:	mov	w0, w0
    1734:	str	x0, [sp, #144]
    1738:	ldr	x6, [sp, #160]
    173c:	ldr	x1, [sp, #168]
    1740:	add	x0, sp, #0x90
    1744:	ldr	x5, [sp, #24]
    1748:	ldr	w4, [sp, #396]
    174c:	mov	x3, #0x0                   	// #0
    1750:	mov	x2, x1
    1754:	mov	x1, x0
    1758:	ldr	x0, [sp, #56]
    175c:	blr	x6
    1760:	mov	w1, w0
    1764:	ldr	w0, [sp, #392]
    1768:	orr	w0, w0, w1
    176c:	str	w0, [sp, #392]
    1770:	ldr	x0, [sp, #144]
    1774:	mov	w2, w0
    1778:	ldrsw	x0, [sp, #396]
    177c:	add	x0, x0, #0x8
    1780:	lsl	x0, x0, #2
    1784:	add	x1, sp, #0xe8
    1788:	str	w2, [x1, x0]
    178c:	ldr	w0, [sp, #392]
    1790:	and	w0, w0, #0x2
    1794:	cmp	w0, #0x0
    1798:	b.ne	1944 <ext2fs_block_iterate3+0x93c>  // b.any
    179c:	ldr	w0, [sp, #396]
    17a0:	add	w0, w0, #0x1
    17a4:	str	w0, [sp, #396]
    17a8:	ldr	x0, [sp, #168]
    17ac:	add	x0, x0, #0x1
    17b0:	str	x0, [sp, #168]
    17b4:	ldr	w0, [sp, #396]
    17b8:	cmp	w0, #0xb
    17bc:	b.le	16f0 <ext2fs_block_iterate3+0x6e8>
    17c0:	ldr	w0, [sp, #180]
    17c4:	and	w0, w0, #0x8
    17c8:	cmp	w0, #0x0
    17cc:	b.eq	17fc <ext2fs_block_iterate3+0x7f4>  // b.none
    17d0:	ldr	w0, [sp, #392]
    17d4:	and	w0, w0, #0x1
    17d8:	cmp	w0, #0x0
    17dc:	b.eq	17fc <ext2fs_block_iterate3+0x7f4>  // b.none
    17e0:	mov	x0, #0xb76b                	// #46955
    17e4:	movk	x0, #0x7f2b, lsl #16
    17e8:	str	x0, [sp, #184]
    17ec:	ldr	w0, [sp, #392]
    17f0:	orr	w0, w0, #0x6
    17f4:	str	w0, [sp, #392]
    17f8:	b	1950 <ext2fs_block_iterate3+0x948>
    17fc:	ldr	w0, [sp, #312]
    1800:	cmp	w0, #0x0
    1804:	b.ne	1818 <ext2fs_block_iterate3+0x810>  // b.any
    1808:	ldr	w0, [sp, #48]
    180c:	and	w0, w0, #0x1
    1810:	cmp	w0, #0x0
    1814:	b.eq	1858 <ext2fs_block_iterate3+0x850>  // b.none
    1818:	add	x1, sp, #0x98
    181c:	add	x0, sp, #0xe0
    1820:	add	x0, x0, #0x58
    1824:	mov	x3, x1
    1828:	mov	w2, #0xc                   	// #12
    182c:	mov	w1, #0x0                   	// #0
    1830:	bl	0 <block_iterate_ind>
    1834:	mov	w1, w0
    1838:	ldr	w0, [sp, #392]
    183c:	orr	w0, w0, w1
    1840:	str	w0, [sp, #392]
    1844:	ldr	w0, [sp, #392]
    1848:	and	w0, w0, #0x2
    184c:	cmp	w0, #0x0
    1850:	b.eq	1868 <ext2fs_block_iterate3+0x860>  // b.none
    1854:	b	1950 <ext2fs_block_iterate3+0x948>
    1858:	ldr	x1, [sp, #168]
    185c:	ldrsw	x0, [sp, #368]
    1860:	add	x0, x1, x0
    1864:	str	x0, [sp, #168]
    1868:	ldr	w0, [sp, #316]
    186c:	cmp	w0, #0x0
    1870:	b.ne	1884 <ext2fs_block_iterate3+0x87c>  // b.any
    1874:	ldr	w0, [sp, #48]
    1878:	and	w0, w0, #0x1
    187c:	cmp	w0, #0x0
    1880:	b.eq	18c4 <ext2fs_block_iterate3+0x8bc>  // b.none
    1884:	add	x1, sp, #0x98
    1888:	add	x0, sp, #0xe0
    188c:	add	x0, x0, #0x5c
    1890:	mov	x3, x1
    1894:	mov	w2, #0xd                   	// #13
    1898:	mov	w1, #0x0                   	// #0
    189c:	bl	5c8 <block_iterate_dind>
    18a0:	mov	w1, w0
    18a4:	ldr	w0, [sp, #392]
    18a8:	orr	w0, w0, w1
    18ac:	str	w0, [sp, #392]
    18b0:	ldr	w0, [sp, #392]
    18b4:	and	w0, w0, #0x2
    18b8:	cmp	w0, #0x0
    18bc:	b.eq	18dc <ext2fs_block_iterate3+0x8d4>  // b.none
    18c0:	b	1950 <ext2fs_block_iterate3+0x948>
    18c4:	ldr	x1, [sp, #168]
    18c8:	ldr	w0, [sp, #368]
    18cc:	mul	w0, w0, w0
    18d0:	sxtw	x0, w0
    18d4:	add	x0, x1, x0
    18d8:	str	x0, [sp, #168]
    18dc:	ldr	w0, [sp, #320]
    18e0:	cmp	w0, #0x0
    18e4:	b.ne	18f8 <ext2fs_block_iterate3+0x8f0>  // b.any
    18e8:	ldr	w0, [sp, #48]
    18ec:	and	w0, w0, #0x1
    18f0:	cmp	w0, #0x0
    18f4:	b.eq	194c <ext2fs_block_iterate3+0x944>  // b.none
    18f8:	add	x1, sp, #0x98
    18fc:	add	x0, sp, #0xe0
    1900:	add	x0, x0, #0x60
    1904:	mov	x3, x1
    1908:	mov	w2, #0xe                   	// #14
    190c:	mov	w1, #0x0                   	// #0
    1910:	bl	adc <block_iterate_tind>
    1914:	mov	w1, w0
    1918:	ldr	w0, [sp, #392]
    191c:	orr	w0, w0, w1
    1920:	str	w0, [sp, #392]
    1924:	ldr	w0, [sp, #392]
    1928:	and	w0, w0, #0x2
    192c:	cmp	w0, #0x0
    1930:	b	194c <ext2fs_block_iterate3+0x944>
    1934:	nop
    1938:	b	1950 <ext2fs_block_iterate3+0x948>
    193c:	nop
    1940:	b	1950 <ext2fs_block_iterate3+0x948>
    1944:	nop
    1948:	b	1950 <ext2fs_block_iterate3+0x948>
    194c:	nop
    1950:	ldr	w0, [sp, #392]
    1954:	and	w0, w0, #0x1
    1958:	cmp	w0, #0x0
    195c:	b.eq	199c <ext2fs_block_iterate3+0x994>  // b.none
    1960:	add	x0, sp, #0xe0
    1964:	mov	x2, x0
    1968:	ldr	w1, [sp, #52]
    196c:	ldr	x0, [sp, #56]
    1970:	bl	0 <ext2fs_write_inode>
    1974:	str	x0, [sp, #360]
    1978:	ldr	x0, [sp, #360]
    197c:	cmp	x0, #0x0
    1980:	b.eq	199c <ext2fs_block_iterate3+0x994>  // b.none
    1984:	ldr	w0, [sp, #392]
    1988:	orr	w0, w0, #0x4
    198c:	str	w0, [sp, #392]
    1990:	ldr	x0, [sp, #360]
    1994:	str	x0, [sp, #184]
    1998:	b	19a0 <ext2fs_block_iterate3+0x998>
    199c:	nop
    19a0:	ldr	x0, [sp, #40]
    19a4:	cmp	x0, #0x0
    19a8:	b.ne	19b8 <ext2fs_block_iterate3+0x9b0>  // b.any
    19ac:	add	x0, sp, #0x98
    19b0:	add	x0, x0, #0x28
    19b4:	bl	0 <ext2fs_free_mem>
    19b8:	ldr	w0, [sp, #392]
    19bc:	and	w0, w0, #0x4
    19c0:	cmp	w0, #0x0
    19c4:	b.eq	19d0 <ext2fs_block_iterate3+0x9c8>  // b.none
    19c8:	ldr	x0, [sp, #184]
    19cc:	b	19d4 <ext2fs_block_iterate3+0x9cc>
    19d0:	mov	x0, #0x0                   	// #0
    19d4:	ldp	x29, x30, [sp], #400
    19d8:	ret

00000000000019dc <xlate64_func>:
    19dc:	stp	x29, x30, [sp, #-80]!
    19e0:	mov	x29, sp
    19e4:	str	x0, [sp, #56]
    19e8:	str	x1, [sp, #48]
    19ec:	str	x2, [sp, #40]
    19f0:	str	x3, [sp, #32]
    19f4:	str	w4, [sp, #28]
    19f8:	str	x5, [sp, #16]
    19fc:	ldr	x0, [sp, #16]
    1a00:	str	x0, [sp, #72]
    1a04:	ldr	x0, [sp, #48]
    1a08:	ldr	x0, [x0]
    1a0c:	str	w0, [sp, #64]
    1a10:	ldr	x0, [sp, #72]
    1a14:	ldr	x6, [x0]
    1a18:	ldr	x0, [sp, #32]
    1a1c:	mov	w2, w0
    1a20:	ldr	x0, [sp, #72]
    1a24:	ldr	x1, [x0, #8]
    1a28:	add	x0, sp, #0x40
    1a2c:	mov	x5, x1
    1a30:	ldr	w4, [sp, #28]
    1a34:	mov	w3, w2
    1a38:	ldr	x2, [sp, #40]
    1a3c:	mov	x1, x0
    1a40:	ldr	x0, [sp, #56]
    1a44:	blr	x6
    1a48:	str	w0, [sp, #68]
    1a4c:	ldr	w0, [sp, #64]
    1a50:	mov	w1, w0
    1a54:	ldr	x0, [sp, #48]
    1a58:	str	x1, [x0]
    1a5c:	ldr	w0, [sp, #68]
    1a60:	ldp	x29, x30, [sp], #80
    1a64:	ret

0000000000001a68 <ext2fs_block_iterate2>:
    1a68:	stp	x29, x30, [sp, #-80]!
    1a6c:	mov	x29, sp
    1a70:	str	x0, [sp, #56]
    1a74:	str	w1, [sp, #52]
    1a78:	str	w2, [sp, #48]
    1a7c:	str	x3, [sp, #40]
    1a80:	str	x4, [sp, #32]
    1a84:	str	x5, [sp, #24]
    1a88:	ldr	x0, [sp, #24]
    1a8c:	str	x0, [sp, #72]
    1a90:	ldr	x0, [sp, #32]
    1a94:	str	x0, [sp, #64]
    1a98:	add	x0, sp, #0x40
    1a9c:	mov	x5, x0
    1aa0:	adrp	x0, 0 <block_iterate_ind>
    1aa4:	add	x4, x0, #0x0
    1aa8:	ldr	x3, [sp, #40]
    1aac:	ldr	w2, [sp, #48]
    1ab0:	ldr	w1, [sp, #52]
    1ab4:	ldr	x0, [sp, #56]
    1ab8:	bl	1008 <ext2fs_block_iterate3>
    1abc:	ldp	x29, x30, [sp], #80
    1ac0:	ret

0000000000001ac4 <xlate_func>:
    1ac4:	stp	x29, x30, [sp, #-80]!
    1ac8:	mov	x29, sp
    1acc:	str	x0, [sp, #56]
    1ad0:	str	x1, [sp, #48]
    1ad4:	str	x2, [sp, #40]
    1ad8:	str	w3, [sp, #36]
    1adc:	str	w4, [sp, #32]
    1ae0:	str	x5, [sp, #24]
    1ae4:	ldr	x0, [sp, #24]
    1ae8:	str	x0, [sp, #72]
    1aec:	ldr	x0, [sp, #72]
    1af0:	ldr	x4, [x0]
    1af4:	ldr	x0, [sp, #40]
    1af8:	mov	w1, w0
    1afc:	ldr	x0, [sp, #72]
    1b00:	ldr	x0, [x0, #8]
    1b04:	mov	x3, x0
    1b08:	mov	w2, w1
    1b0c:	ldr	x1, [sp, #48]
    1b10:	ldr	x0, [sp, #56]
    1b14:	blr	x4
    1b18:	ldp	x29, x30, [sp], #80
    1b1c:	ret

0000000000001b20 <ext2fs_block_iterate>:
    1b20:	stp	x29, x30, [sp, #-80]!
    1b24:	mov	x29, sp
    1b28:	str	x0, [sp, #56]
    1b2c:	str	w1, [sp, #52]
    1b30:	str	w2, [sp, #48]
    1b34:	str	x3, [sp, #40]
    1b38:	str	x4, [sp, #32]
    1b3c:	str	x5, [sp, #24]
    1b40:	ldr	x0, [sp, #24]
    1b44:	str	x0, [sp, #72]
    1b48:	ldr	x0, [sp, #32]
    1b4c:	str	x0, [sp, #64]
    1b50:	ldr	w0, [sp, #48]
    1b54:	orr	w1, w0, #0x1000
    1b58:	add	x0, sp, #0x40
    1b5c:	mov	x5, x0
    1b60:	adrp	x0, 0 <block_iterate_ind>
    1b64:	add	x4, x0, #0x0
    1b68:	ldr	x3, [sp, #40]
    1b6c:	mov	w2, w1
    1b70:	ldr	w1, [sp, #52]
    1b74:	ldr	x0, [sp, #56]
    1b78:	bl	1a68 <ext2fs_block_iterate2>
    1b7c:	ldp	x29, x30, [sp], #80
    1b80:	ret

bmap.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_bigalloc>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x200
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <block_ind_bmap>:
      28:	stp	x29, x30, [sp, #-80]!
      2c:	mov	x29, sp
      30:	str	x0, [sp, #56]
      34:	str	w1, [sp, #52]
      38:	str	w2, [sp, #48]
      3c:	str	x3, [sp, #40]
      40:	str	x4, [sp, #32]
      44:	str	w5, [sp, #28]
      48:	str	x6, [sp, #16]
      4c:	ldr	w0, [sp, #48]
      50:	cmp	w0, #0x0
      54:	b.ne	84 <block_ind_bmap+0x5c>  // b.any
      58:	ldr	w0, [sp, #52]
      5c:	and	w0, w0, #0x2
      60:	cmp	w0, #0x0
      64:	b.eq	74 <block_ind_bmap+0x4c>  // b.none
      68:	mov	x0, #0xb75f                	// #46943
      6c:	movk	x0, #0x7f2b, lsl #16
      70:	b	250 <block_ind_bmap+0x228>
      74:	ldr	x0, [sp, #16]
      78:	str	wzr, [x0]
      7c:	mov	x0, #0x0                   	// #0
      80:	b	250 <block_ind_bmap+0x228>
      84:	ldr	x0, [sp, #56]
      88:	ldr	x0, [x0, #8]
      8c:	ldr	x0, [x0, #8]
      90:	ldr	x4, [x0, #40]
      94:	ldr	x0, [sp, #56]
      98:	ldr	x0, [x0, #8]
      9c:	ldr	w1, [sp, #48]
      a0:	ldr	x3, [sp, #40]
      a4:	mov	w2, #0x1                   	// #1
      a8:	blr	x4
      ac:	str	x0, [sp, #72]
      b0:	ldr	x0, [sp, #72]
      b4:	cmp	x0, #0x0
      b8:	b.eq	c4 <block_ind_bmap+0x9c>  // b.none
      bc:	ldr	x0, [sp, #72]
      c0:	b	250 <block_ind_bmap+0x228>
      c4:	ldr	w0, [sp, #52]
      c8:	and	w0, w0, #0x2
      cc:	cmp	w0, #0x0
      d0:	b.eq	124 <block_ind_bmap+0xfc>  // b.none
      d4:	ldr	x0, [sp, #16]
      d8:	ldr	w0, [x0]
      dc:	str	w0, [sp, #68]
      e0:	ldr	w0, [sp, #28]
      e4:	lsl	x0, x0, #2
      e8:	ldr	x1, [sp, #40]
      ec:	add	x0, x1, x0
      f0:	ldr	w1, [sp, #68]
      f4:	str	w1, [x0]
      f8:	ldr	x0, [sp, #56]
      fc:	ldr	x0, [x0, #8]
     100:	ldr	x0, [x0, #8]
     104:	ldr	x4, [x0, #48]
     108:	ldr	x0, [sp, #56]
     10c:	ldr	x0, [x0, #8]
     110:	ldr	w1, [sp, #48]
     114:	ldr	x3, [sp, #40]
     118:	mov	w2, #0x1                   	// #1
     11c:	blr	x4
     120:	b	250 <block_ind_bmap+0x228>
     124:	ldr	w0, [sp, #28]
     128:	lsl	x0, x0, #2
     12c:	ldr	x1, [sp, #40]
     130:	add	x0, x1, x0
     134:	ldr	w0, [x0]
     138:	str	w0, [sp, #68]
     13c:	ldr	w0, [sp, #68]
     140:	cmp	w0, #0x0
     144:	b.ne	240 <block_ind_bmap+0x218>  // b.any
     148:	ldr	w0, [sp, #52]
     14c:	and	w0, w0, #0x1
     150:	cmp	w0, #0x0
     154:	b.eq	240 <block_ind_bmap+0x218>  // b.none
     158:	ldr	w0, [sp, #28]
     15c:	cmp	w0, #0x0
     160:	b.eq	184 <block_ind_bmap+0x15c>  // b.none
     164:	ldr	w0, [sp, #28]
     168:	sub	w0, w0, #0x1
     16c:	mov	w0, w0
     170:	lsl	x0, x0, #2
     174:	ldr	x1, [sp, #40]
     178:	add	x0, x1, x0
     17c:	ldr	w0, [x0]
     180:	b	188 <block_ind_bmap+0x160>
     184:	ldr	w0, [sp, #48]
     188:	str	w0, [sp, #68]
     18c:	ldr	w4, [sp, #68]
     190:	ldr	x0, [sp, #56]
     194:	ldr	w0, [x0, #40]
     198:	mov	w0, w0
     19c:	ldr	x1, [sp, #40]
     1a0:	add	x0, x1, x0
     1a4:	add	x1, sp, #0x44
     1a8:	mov	x3, x1
     1ac:	mov	x2, x0
     1b0:	mov	w1, w4
     1b4:	ldr	x0, [sp, #56]
     1b8:	bl	0 <ext2fs_alloc_block>
     1bc:	str	x0, [sp, #72]
     1c0:	ldr	x0, [sp, #72]
     1c4:	cmp	x0, #0x0
     1c8:	b.eq	1d4 <block_ind_bmap+0x1ac>  // b.none
     1cc:	ldr	x0, [sp, #72]
     1d0:	b	250 <block_ind_bmap+0x228>
     1d4:	ldr	w0, [sp, #28]
     1d8:	lsl	x0, x0, #2
     1dc:	ldr	x1, [sp, #40]
     1e0:	add	x0, x1, x0
     1e4:	ldr	w1, [sp, #68]
     1e8:	str	w1, [x0]
     1ec:	ldr	x0, [sp, #56]
     1f0:	ldr	x0, [x0, #8]
     1f4:	ldr	x0, [x0, #8]
     1f8:	ldr	x4, [x0, #48]
     1fc:	ldr	x0, [sp, #56]
     200:	ldr	x0, [x0, #8]
     204:	ldr	w1, [sp, #48]
     208:	ldr	x3, [sp, #40]
     20c:	mov	w2, #0x1                   	// #1
     210:	blr	x4
     214:	str	x0, [sp, #72]
     218:	ldr	x0, [sp, #72]
     21c:	cmp	x0, #0x0
     220:	b.eq	22c <block_ind_bmap+0x204>  // b.none
     224:	ldr	x0, [sp, #72]
     228:	b	250 <block_ind_bmap+0x228>
     22c:	ldr	x0, [sp, #32]
     230:	ldr	w0, [x0]
     234:	add	w1, w0, #0x1
     238:	ldr	x0, [sp, #32]
     23c:	str	w1, [x0]
     240:	ldr	w1, [sp, #68]
     244:	ldr	x0, [sp, #16]
     248:	str	w1, [x0]
     24c:	mov	x0, #0x0                   	// #0
     250:	ldp	x29, x30, [sp], #80
     254:	ret

0000000000000258 <block_dind_bmap>:
     258:	stp	x29, x30, [sp, #-96]!
     25c:	mov	x29, sp
     260:	str	x0, [sp, #56]
     264:	str	w1, [sp, #52]
     268:	str	w2, [sp, #48]
     26c:	str	x3, [sp, #40]
     270:	str	x4, [sp, #32]
     274:	str	w5, [sp, #28]
     278:	str	x6, [sp, #16]
     27c:	str	wzr, [sp, #76]
     280:	ldr	x0, [sp, #56]
     284:	ldr	w0, [x0, #40]
     288:	lsr	w0, w0, #2
     28c:	str	w0, [sp, #92]
     290:	ldr	w0, [sp, #52]
     294:	and	w7, w0, #0xfffffffd
     298:	ldr	w1, [sp, #28]
     29c:	ldr	w0, [sp, #92]
     2a0:	udiv	w0, w1, w0
     2a4:	add	x1, sp, #0x4c
     2a8:	mov	x6, x1
     2ac:	mov	w5, w0
     2b0:	ldr	x4, [sp, #32]
     2b4:	ldr	x3, [sp, #40]
     2b8:	ldr	w2, [sp, #48]
     2bc:	mov	w1, w7
     2c0:	ldr	x0, [sp, #56]
     2c4:	bl	28 <block_ind_bmap>
     2c8:	str	x0, [sp, #80]
     2cc:	ldr	x0, [sp, #80]
     2d0:	cmp	x0, #0x0
     2d4:	b.eq	2e0 <block_dind_bmap+0x88>  // b.none
     2d8:	ldr	x0, [sp, #80]
     2dc:	b	324 <block_dind_bmap+0xcc>
     2e0:	ldr	w7, [sp, #76]
     2e4:	ldr	w0, [sp, #28]
     2e8:	ldr	w1, [sp, #92]
     2ec:	udiv	w2, w0, w1
     2f0:	ldr	w1, [sp, #92]
     2f4:	mul	w1, w2, w1
     2f8:	sub	w0, w0, w1
     2fc:	ldr	x6, [sp, #16]
     300:	mov	w5, w0
     304:	ldr	x4, [sp, #32]
     308:	ldr	x3, [sp, #40]
     30c:	mov	w2, w7
     310:	ldr	w1, [sp, #52]
     314:	ldr	x0, [sp, #56]
     318:	bl	28 <block_ind_bmap>
     31c:	str	x0, [sp, #80]
     320:	ldr	x0, [sp, #80]
     324:	ldp	x29, x30, [sp], #96
     328:	ret

000000000000032c <block_tind_bmap>:
     32c:	stp	x29, x30, [sp, #-96]!
     330:	mov	x29, sp
     334:	str	x0, [sp, #56]
     338:	str	w1, [sp, #52]
     33c:	str	w2, [sp, #48]
     340:	str	x3, [sp, #40]
     344:	str	x4, [sp, #32]
     348:	str	w5, [sp, #28]
     34c:	str	x6, [sp, #16]
     350:	str	wzr, [sp, #76]
     354:	ldr	x0, [sp, #56]
     358:	ldr	w0, [x0, #40]
     35c:	lsr	w0, w0, #2
     360:	str	w0, [sp, #92]
     364:	ldr	w0, [sp, #52]
     368:	and	w7, w0, #0xfffffffd
     36c:	ldr	w1, [sp, #28]
     370:	ldr	w0, [sp, #92]
     374:	udiv	w0, w1, w0
     378:	add	x1, sp, #0x4c
     37c:	mov	x6, x1
     380:	mov	w5, w0
     384:	ldr	x4, [sp, #32]
     388:	ldr	x3, [sp, #40]
     38c:	ldr	w2, [sp, #48]
     390:	mov	w1, w7
     394:	ldr	x0, [sp, #56]
     398:	bl	258 <block_dind_bmap>
     39c:	str	x0, [sp, #80]
     3a0:	ldr	x0, [sp, #80]
     3a4:	cmp	x0, #0x0
     3a8:	b.eq	3b4 <block_tind_bmap+0x88>  // b.none
     3ac:	ldr	x0, [sp, #80]
     3b0:	b	3f8 <block_tind_bmap+0xcc>
     3b4:	ldr	w7, [sp, #76]
     3b8:	ldr	w0, [sp, #28]
     3bc:	ldr	w1, [sp, #92]
     3c0:	udiv	w2, w0, w1
     3c4:	ldr	w1, [sp, #92]
     3c8:	mul	w1, w2, w1
     3cc:	sub	w0, w0, w1
     3d0:	ldr	x6, [sp, #16]
     3d4:	mov	w5, w0
     3d8:	ldr	x4, [sp, #32]
     3dc:	ldr	x3, [sp, #40]
     3e0:	mov	w2, w7
     3e4:	ldr	w1, [sp, #52]
     3e8:	ldr	x0, [sp, #56]
     3ec:	bl	28 <block_ind_bmap>
     3f0:	str	x0, [sp, #80]
     3f4:	ldr	x0, [sp, #80]
     3f8:	ldp	x29, x30, [sp], #96
     3fc:	ret

0000000000000400 <implied_cluster_alloc>:
     400:	sub	sp, sp, #0x70
     404:	stp	x29, x30, [sp, #16]
     408:	add	x29, sp, #0x10
     40c:	str	x0, [sp, #72]
     410:	str	w1, [sp, #68]
     414:	str	x2, [sp, #56]
     418:	str	x3, [sp, #48]
     41c:	str	x4, [sp, #40]
     420:	str	x5, [sp, #32]
     424:	str	xzr, [sp, #88]
     428:	ldr	x0, [sp, #72]
     42c:	ldr	x0, [x0, #32]
     430:	bl	0 <ext2fs_has_feature_bigalloc>
     434:	cmp	w0, #0x0
     438:	b.ne	444 <implied_cluster_alloc+0x44>  // b.any
     43c:	mov	x0, #0x0                   	// #0
     440:	b	544 <implied_cluster_alloc+0x144>
     444:	ldr	x0, [sp, #72]
     448:	ldr	w0, [x0, #192]
     44c:	mov	w1, #0x1                   	// #1
     450:	lsl	w0, w1, w0
     454:	neg	w0, w0
     458:	sxtw	x0, w0
     45c:	ldr	x1, [sp, #40]
     460:	and	x0, x1, x0
     464:	str	x0, [sp, #96]
     468:	str	wzr, [sp, #108]
     46c:	b	4e4 <implied_cluster_alloc+0xe4>
     470:	ldrsw	x1, [sp, #108]
     474:	ldr	x0, [sp, #96]
     478:	add	x0, x1, x0
     47c:	ldr	x1, [sp, #40]
     480:	cmp	x1, x0
     484:	b.eq	4d4 <implied_cluster_alloc+0xd4>  // b.none
     488:	ldrsw	x1, [sp, #108]
     48c:	ldr	x0, [sp, #96]
     490:	add	x1, x1, x0
     494:	add	x0, sp, #0x58
     498:	str	x0, [sp, #8]
     49c:	str	xzr, [sp]
     4a0:	mov	x7, #0x0                   	// #0
     4a4:	mov	x6, x1
     4a8:	mov	w5, #0x0                   	// #0
     4ac:	mov	x4, #0x0                   	// #0
     4b0:	ldr	x3, [sp, #48]
     4b4:	ldr	x2, [sp, #56]
     4b8:	ldr	w1, [sp, #68]
     4bc:	ldr	x0, [sp, #72]
     4c0:	bl	618 <extent_bmap>
     4c4:	ldr	x0, [sp, #88]
     4c8:	cmp	x0, #0x0
     4cc:	b.ne	504 <implied_cluster_alloc+0x104>  // b.any
     4d0:	b	4d8 <implied_cluster_alloc+0xd8>
     4d4:	nop
     4d8:	ldr	w0, [sp, #108]
     4dc:	add	w0, w0, #0x1
     4e0:	str	w0, [sp, #108]
     4e4:	ldr	x0, [sp, #72]
     4e8:	ldr	w0, [x0, #192]
     4ec:	mov	w1, #0x1                   	// #1
     4f0:	lsl	w0, w1, w0
     4f4:	ldr	w1, [sp, #108]
     4f8:	cmp	w1, w0
     4fc:	b.lt	470 <implied_cluster_alloc+0x70>  // b.tstop
     500:	b	508 <implied_cluster_alloc+0x108>
     504:	nop
     508:	ldr	x0, [sp, #88]
     50c:	cmp	x0, #0x0
     510:	b.ne	51c <implied_cluster_alloc+0x11c>  // b.any
     514:	mov	x0, #0x0                   	// #0
     518:	b	544 <implied_cluster_alloc+0x144>
     51c:	ldr	x1, [sp, #88]
     520:	ldrsw	x0, [sp, #108]
     524:	sub	x1, x1, x0
     528:	ldr	x2, [sp, #40]
     52c:	ldr	x0, [sp, #96]
     530:	sub	x0, x2, x0
     534:	add	x1, x1, x0
     538:	ldr	x0, [sp, #32]
     53c:	str	x1, [x0]
     540:	mov	x0, #0x0                   	// #0
     544:	ldp	x29, x30, [sp, #16]
     548:	add	sp, sp, #0x70
     54c:	ret

0000000000000550 <ext2fs_map_cluster_block>:
     550:	stp	x29, x30, [sp, #-80]!
     554:	mov	x29, sp
     558:	str	x0, [sp, #56]
     55c:	str	w1, [sp, #52]
     560:	str	x2, [sp, #40]
     564:	str	x3, [sp, #32]
     568:	str	x4, [sp, #24]
     56c:	ldr	x0, [sp, #24]
     570:	str	xzr, [x0]
     574:	ldr	x0, [sp, #56]
     578:	ldr	x0, [x0, #32]
     57c:	bl	0 <ext2fs_has_feature_bigalloc>
     580:	cmp	w0, #0x0
     584:	b.eq	59c <ext2fs_map_cluster_block+0x4c>  // b.none
     588:	ldr	x0, [sp, #40]
     58c:	ldr	w0, [x0, #32]
     590:	and	w0, w0, #0x80000
     594:	cmp	w0, #0x0
     598:	b.ne	5a4 <ext2fs_map_cluster_block+0x54>  // b.any
     59c:	mov	x0, #0x0                   	// #0
     5a0:	b	610 <ext2fs_map_cluster_block+0xc0>
     5a4:	add	x0, sp, #0x40
     5a8:	mov	x3, x0
     5ac:	ldr	x2, [sp, #40]
     5b0:	ldr	w1, [sp, #52]
     5b4:	ldr	x0, [sp, #56]
     5b8:	bl	0 <ext2fs_extent_open2>
     5bc:	str	x0, [sp, #72]
     5c0:	ldr	x0, [sp, #72]
     5c4:	cmp	x0, #0x0
     5c8:	b.ne	608 <ext2fs_map_cluster_block+0xb8>  // b.any
     5cc:	ldr	x0, [sp, #64]
     5d0:	ldr	x5, [sp, #24]
     5d4:	ldr	x4, [sp, #32]
     5d8:	mov	x3, x0
     5dc:	ldr	x2, [sp, #40]
     5e0:	ldr	w1, [sp, #52]
     5e4:	ldr	x0, [sp, #56]
     5e8:	bl	400 <implied_cluster_alloc>
     5ec:	str	x0, [sp, #72]
     5f0:	ldr	x0, [sp, #72]
     5f4:	cmp	x0, #0x0
     5f8:	nop
     5fc:	ldr	x0, [sp, #64]
     600:	bl	0 <ext2fs_extent_free>
     604:	b	60c <ext2fs_map_cluster_block+0xbc>
     608:	nop
     60c:	ldr	x0, [sp, #72]
     610:	ldp	x29, x30, [sp], #80
     614:	ret

0000000000000618 <extent_bmap>:
     618:	sub	sp, sp, #0xc0
     61c:	stp	x29, x30, [sp, #16]
     620:	add	x29, sp, #0x10
     624:	str	x0, [sp, #88]
     628:	str	w1, [sp, #84]
     62c:	str	x2, [sp, #72]
     630:	str	x3, [sp, #64]
     634:	str	x4, [sp, #56]
     638:	str	w5, [sp, #80]
     63c:	str	x6, [sp, #48]
     640:	str	x7, [sp, #40]
     644:	str	xzr, [sp, #176]
     648:	str	xzr, [sp, #104]
     64c:	str	wzr, [sp, #188]
     650:	ldr	w0, [sp, #80]
     654:	asr	w0, w0, #2
     658:	and	w0, w0, #0x1
     65c:	str	w0, [sp, #172]
     660:	ldr	w0, [sp, #80]
     664:	and	w0, w0, #0x2
     668:	cmp	w0, #0x0
     66c:	b.eq	698 <extent_bmap+0x80>  // b.none
     670:	ldr	x0, [sp, #200]
     674:	ldr	x0, [x0]
     678:	ldr	w3, [sp, #172]
     67c:	mov	x2, x0
     680:	ldr	x1, [sp, #48]
     684:	ldr	x0, [sp, #64]
     688:	bl	0 <ext2fs_extent_set_bmap>
     68c:	str	x0, [sp, #176]
     690:	ldr	x0, [sp, #176]
     694:	b	98c <extent_bmap+0x374>
     698:	ldr	x1, [sp, #48]
     69c:	ldr	x0, [sp, #64]
     6a0:	bl	0 <ext2fs_extent_goto>
     6a4:	str	x0, [sp, #176]
     6a8:	ldr	x0, [sp, #176]
     6ac:	cmp	x0, #0x0
     6b0:	b.eq	6dc <extent_bmap+0xc4>  // b.none
     6b4:	ldr	x1, [sp, #176]
     6b8:	mov	x0, #0xb784                	// #46980
     6bc:	movk	x0, #0x7f2b, lsl #16
     6c0:	cmp	x1, x0
     6c4:	b.ne	6d4 <extent_bmap+0xbc>  // b.any
     6c8:	ldr	x0, [sp, #48]
     6cc:	str	x0, [sp, #120]
     6d0:	b	788 <extent_bmap+0x170>
     6d4:	ldr	x0, [sp, #176]
     6d8:	b	98c <extent_bmap+0x374>
     6dc:	add	x0, sp, #0x70
     6e0:	mov	x2, x0
     6e4:	mov	w1, #0x0                   	// #0
     6e8:	ldr	x0, [sp, #64]
     6ec:	bl	0 <ext2fs_extent_get>
     6f0:	str	x0, [sp, #176]
     6f4:	ldr	x0, [sp, #176]
     6f8:	cmp	x0, #0x0
     6fc:	b.eq	708 <extent_bmap+0xf0>  // b.none
     700:	ldr	x0, [sp, #176]
     704:	b	98c <extent_bmap+0x374>
     708:	ldr	x0, [sp, #48]
     70c:	mov	w1, w0
     710:	ldr	x0, [sp, #120]
     714:	sub	w0, w1, w0
     718:	str	w0, [sp, #168]
     71c:	ldr	x0, [sp, #120]
     720:	ldr	x1, [sp, #48]
     724:	cmp	x1, x0
     728:	b.cc	784 <extent_bmap+0x16c>  // b.lo, b.ul, b.last
     72c:	ldr	w0, [sp, #128]
     730:	ldr	w1, [sp, #168]
     734:	cmp	w1, w0
     738:	b.hi	784 <extent_bmap+0x16c>  // b.pmore
     73c:	ldr	x1, [sp, #112]
     740:	ldr	w0, [sp, #168]
     744:	add	x1, x1, x0
     748:	ldr	x0, [sp, #200]
     74c:	str	x1, [x0]
     750:	ldr	x0, [sp, #40]
     754:	cmp	x0, #0x0
     758:	b.eq	784 <extent_bmap+0x16c>  // b.none
     75c:	ldr	w0, [sp, #132]
     760:	and	w0, w0, #0x2
     764:	cmp	w0, #0x0
     768:	b.eq	784 <extent_bmap+0x16c>  // b.none
     76c:	ldr	x0, [sp, #40]
     770:	ldr	w0, [x0]
     774:	orr	w1, w0, #0x1
     778:	ldr	x0, [sp, #40]
     77c:	str	w1, [x0]
     780:	b	788 <extent_bmap+0x170>
     784:	nop
     788:	ldr	x0, [sp, #200]
     78c:	ldr	x0, [x0]
     790:	cmp	x0, #0x0
     794:	b.ne	988 <extent_bmap+0x370>  // b.any
     798:	ldr	w0, [sp, #80]
     79c:	and	w0, w0, #0x1
     7a0:	cmp	w0, #0x0
     7a4:	b.eq	988 <extent_bmap+0x370>  // b.none
     7a8:	add	x0, sp, #0x68
     7ac:	mov	x5, x0
     7b0:	ldr	x4, [sp, #48]
     7b4:	ldr	x3, [sp, #64]
     7b8:	ldr	x2, [sp, #72]
     7bc:	ldr	w1, [sp, #84]
     7c0:	ldr	x0, [sp, #88]
     7c4:	bl	400 <implied_cluster_alloc>
     7c8:	ldr	x0, [sp, #104]
     7cc:	cmp	x0, #0x0
     7d0:	b.ne	8f4 <extent_bmap+0x2dc>  // b.any
     7d4:	ldr	x0, [sp, #48]
     7d8:	sub	x1, x0, #0x1
     7dc:	add	x0, sp, #0x68
     7e0:	str	x0, [sp, #8]
     7e4:	ldr	x0, [sp, #192]
     7e8:	str	x0, [sp]
     7ec:	mov	x7, #0x0                   	// #0
     7f0:	mov	x6, x1
     7f4:	mov	w5, #0x0                   	// #0
     7f8:	ldr	x4, [sp, #56]
     7fc:	ldr	x3, [sp, #64]
     800:	ldr	x2, [sp, #72]
     804:	ldr	w1, [sp, #84]
     808:	ldr	x0, [sp, #88]
     80c:	bl	618 <extent_bmap>
     810:	str	x0, [sp, #176]
     814:	ldr	x0, [sp, #176]
     818:	cmp	x0, #0x0
     81c:	b.eq	838 <extent_bmap+0x220>  // b.none
     820:	ldr	x3, [sp, #48]
     824:	ldr	x2, [sp, #72]
     828:	ldr	w1, [sp, #84]
     82c:	ldr	x0, [sp, #88]
     830:	bl	0 <ext2fs_find_inode_goal>
     834:	str	x0, [sp, #104]
     838:	ldr	w0, [sp, #84]
     83c:	str	w0, [sp, #136]
     840:	ldr	x0, [sp, #72]
     844:	str	x0, [sp, #144]
     848:	ldr	x0, [sp, #120]
     84c:	str	x0, [sp, #152]
     850:	mov	w0, #0x1                   	// #1
     854:	str	w0, [sp, #160]
     858:	ldr	x0, [sp, #104]
     85c:	add	x2, sp, #0x88
     860:	add	x1, sp, #0x68
     864:	mov	x4, x2
     868:	mov	x3, x1
     86c:	ldr	x2, [sp, #56]
     870:	mov	x1, x0
     874:	ldr	x0, [sp, #88]
     878:	bl	0 <ext2fs_alloc_block3>
     87c:	str	x0, [sp, #176]
     880:	ldr	x0, [sp, #176]
     884:	cmp	x0, #0x0
     888:	b.eq	894 <extent_bmap+0x27c>  // b.none
     88c:	ldr	x0, [sp, #176]
     890:	b	98c <extent_bmap+0x374>
     894:	ldr	x0, [sp, #88]
     898:	ldr	w0, [x0, #192]
     89c:	mov	w1, #0x1                   	// #1
     8a0:	lsl	w0, w1, w0
     8a4:	neg	w0, w0
     8a8:	sxtw	x1, w0
     8ac:	ldr	x0, [sp, #104]
     8b0:	and	x0, x1, x0
     8b4:	str	x0, [sp, #104]
     8b8:	ldr	x0, [sp, #88]
     8bc:	ldr	w0, [x0, #192]
     8c0:	mov	w1, #0x1                   	// #1
     8c4:	lsl	w0, w1, w0
     8c8:	sub	w0, w0, #0x1
     8cc:	sxtw	x1, w0
     8d0:	ldr	x0, [sp, #48]
     8d4:	and	x1, x1, x0
     8d8:	ldr	x0, [sp, #104]
     8dc:	add	x0, x1, x0
     8e0:	str	x0, [sp, #104]
     8e4:	ldr	w0, [sp, #188]
     8e8:	add	w0, w0, #0x1
     8ec:	str	w0, [sp, #188]
     8f0:	b	8f8 <extent_bmap+0x2e0>
     8f4:	nop
     8f8:	ldr	x0, [sp, #104]
     8fc:	ldr	w3, [sp, #172]
     900:	mov	x2, x0
     904:	ldr	x1, [sp, #48]
     908:	ldr	x0, [sp, #64]
     90c:	bl	0 <ext2fs_extent_set_bmap>
     910:	str	x0, [sp, #176]
     914:	ldr	x0, [sp, #176]
     918:	cmp	x0, #0x0
     91c:	b.eq	93c <extent_bmap+0x324>  // b.none
     920:	ldr	x0, [sp, #104]
     924:	mov	w2, #0xffffffff            	// #-1
     928:	mov	x1, x0
     92c:	ldr	x0, [sp, #88]
     930:	bl	0 <ext2fs_block_alloc_stats2>
     934:	ldr	x0, [sp, #176]
     938:	b	98c <extent_bmap+0x374>
     93c:	ldr	x2, [sp, #72]
     940:	ldr	w1, [sp, #84]
     944:	ldr	x0, [sp, #88]
     948:	bl	0 <ext2fs_read_inode>
     94c:	str	x0, [sp, #176]
     950:	ldr	x0, [sp, #176]
     954:	cmp	x0, #0x0
     958:	b.eq	964 <extent_bmap+0x34c>  // b.none
     95c:	ldr	x0, [sp, #176]
     960:	b	98c <extent_bmap+0x374>
     964:	ldr	x0, [sp, #192]
     968:	ldr	w1, [x0]
     96c:	ldr	w0, [sp, #188]
     970:	add	w1, w1, w0
     974:	ldr	x0, [sp, #192]
     978:	str	w1, [x0]
     97c:	ldr	x1, [sp, #104]
     980:	ldr	x0, [sp, #200]
     984:	str	x1, [x0]
     988:	mov	x0, #0x0                   	// #0
     98c:	ldp	x29, x30, [sp, #16]
     990:	add	sp, sp, #0xc0
     994:	ret

0000000000000998 <ext2fs_file_block_offset_too_big>:
     998:	sub	sp, sp, #0x30
     99c:	str	x0, [sp, #24]
     9a0:	str	x1, [sp, #16]
     9a4:	str	x2, [sp, #8]
     9a8:	ldr	x1, [sp, #8]
     9ac:	mov	x0, #0xfffffffe            	// #4294967294
     9b0:	cmp	x1, x0
     9b4:	b.ls	9c0 <ext2fs_file_block_offset_too_big+0x28>  // b.plast
     9b8:	mov	w0, #0x1                   	// #1
     9bc:	b	a48 <ext2fs_file_block_offset_too_big+0xb0>
     9c0:	ldr	x0, [sp, #16]
     9c4:	ldr	w0, [x0, #32]
     9c8:	and	w0, w0, #0x80000
     9cc:	cmp	w0, #0x0
     9d0:	b.eq	9dc <ext2fs_file_block_offset_too_big+0x44>  // b.none
     9d4:	mov	w0, #0x0                   	// #0
     9d8:	b	a48 <ext2fs_file_block_offset_too_big+0xb0>
     9dc:	ldr	x0, [sp, #24]
     9e0:	ldr	w0, [x0, #40]
     9e4:	lsr	w0, w0, #2
     9e8:	mov	w0, w0
     9ec:	str	x0, [sp, #40]
     9f0:	ldr	x0, [sp, #40]
     9f4:	str	x0, [sp, #32]
     9f8:	ldr	x0, [sp, #40]
     9fc:	mul	x0, x0, x0
     a00:	ldr	x1, [sp, #32]
     a04:	add	x0, x1, x0
     a08:	str	x0, [sp, #32]
     a0c:	ldr	x0, [sp, #40]
     a10:	mul	x1, x0, x0
     a14:	ldr	x0, [sp, #40]
     a18:	mul	x0, x1, x0
     a1c:	ldr	x1, [sp, #32]
     a20:	add	x0, x1, x0
     a24:	str	x0, [sp, #32]
     a28:	ldr	x0, [sp, #32]
     a2c:	add	x0, x0, #0xc
     a30:	str	x0, [sp, #32]
     a34:	ldr	x1, [sp, #8]
     a38:	ldr	x0, [sp, #32]
     a3c:	cmp	x1, x0
     a40:	cset	w0, cs  // cs = hs, nlast
     a44:	and	w0, w0, #0xff
     a48:	add	sp, sp, #0x30
     a4c:	ret

0000000000000a50 <ext2fs_bmap2>:
     a50:	sub	sp, sp, #0x140
     a54:	stp	x29, x30, [sp, #16]
     a58:	add	x29, sp, #0x10
     a5c:	str	x0, [sp, #88]
     a60:	str	w1, [sp, #84]
     a64:	str	x2, [sp, #72]
     a68:	str	x3, [sp, #64]
     a6c:	str	w4, [sp, #80]
     a70:	str	x5, [sp, #56]
     a74:	str	x6, [sp, #48]
     a78:	str	x7, [sp, #40]
     a7c:	str	xzr, [sp, #160]
     a80:	str	xzr, [sp, #136]
     a84:	str	xzr, [sp, #304]
     a88:	str	wzr, [sp, #132]
     a8c:	str	wzr, [sp, #300]
     a90:	ldr	w0, [sp, #84]
     a94:	str	w0, [sp, #96]
     a98:	ldr	x0, [sp, #72]
     a9c:	str	x0, [sp, #104]
     aa0:	str	xzr, [sp, #112]
     aa4:	mov	w0, #0x1                   	// #1
     aa8:	str	w0, [sp, #120]
     aac:	ldr	w0, [sp, #80]
     ab0:	and	w0, w0, #0x2
     ab4:	cmp	w0, #0x0
     ab8:	b.ne	ac4 <ext2fs_bmap2+0x74>  // b.any
     abc:	ldr	x0, [sp, #40]
     ac0:	str	xzr, [x0]
     ac4:	ldr	x0, [sp, #48]
     ac8:	cmp	x0, #0x0
     acc:	b.eq	ad8 <ext2fs_bmap2+0x88>  // b.none
     ad0:	ldr	x0, [sp, #48]
     ad4:	str	wzr, [x0]
     ad8:	ldr	x0, [sp, #72]
     adc:	cmp	x0, #0x0
     ae0:	b.ne	b18 <ext2fs_bmap2+0xc8>  // b.any
     ae4:	add	x0, sp, #0xa8
     ae8:	mov	x2, x0
     aec:	ldr	w1, [sp, #84]
     af0:	ldr	x0, [sp, #88]
     af4:	bl	0 <ext2fs_read_inode>
     af8:	str	x0, [sp, #304]
     afc:	ldr	x0, [sp, #304]
     b00:	cmp	x0, #0x0
     b04:	b.eq	b10 <ext2fs_bmap2+0xc0>  // b.none
     b08:	ldr	x0, [sp, #304]
     b0c:	b	1228 <ext2fs_bmap2+0x7d8>
     b10:	add	x0, sp, #0xa8
     b14:	str	x0, [sp, #72]
     b18:	ldr	x0, [sp, #88]
     b1c:	ldr	w0, [x0, #40]
     b20:	lsr	w0, w0, #2
     b24:	str	w0, [sp, #296]
     b28:	ldr	x2, [sp, #56]
     b2c:	ldr	x1, [sp, #72]
     b30:	ldr	x0, [sp, #88]
     b34:	bl	998 <ext2fs_file_block_offset_too_big>
     b38:	cmp	w0, #0x0
     b3c:	b.eq	b4c <ext2fs_bmap2+0xfc>  // b.none
     b40:	mov	x0, #0xb752                	// #46930
     b44:	movk	x0, #0x7f2b, lsl #16
     b48:	b	1228 <ext2fs_bmap2+0x7d8>
     b4c:	ldr	x0, [sp, #72]
     b50:	ldr	w0, [x0, #32]
     b54:	and	w0, w0, #0x10000000
     b58:	cmp	w0, #0x0
     b5c:	b.eq	b6c <ext2fs_bmap2+0x11c>  // b.none
     b60:	mov	x0, #0xb7a6                	// #47014
     b64:	movk	x0, #0x7f2b, lsl #16
     b68:	b	1228 <ext2fs_bmap2+0x7d8>
     b6c:	ldr	x0, [sp, #64]
     b70:	cmp	x0, #0x0
     b74:	b.ne	bb8 <ext2fs_bmap2+0x168>  // b.any
     b78:	ldr	x0, [sp, #88]
     b7c:	ldr	w0, [x0, #40]
     b80:	mov	w0, w0
     b84:	add	x1, sp, #0x88
     b88:	mov	x2, x1
     b8c:	mov	x1, x0
     b90:	mov	x0, #0x2                   	// #2
     b94:	bl	0 <ext2fs_get_array>
     b98:	str	x0, [sp, #304]
     b9c:	ldr	x0, [sp, #304]
     ba0:	cmp	x0, #0x0
     ba4:	b.eq	bb0 <ext2fs_bmap2+0x160>  // b.none
     ba8:	ldr	x0, [sp, #304]
     bac:	b	1228 <ext2fs_bmap2+0x7d8>
     bb0:	ldr	x0, [sp, #136]
     bb4:	str	x0, [sp, #64]
     bb8:	ldr	x0, [sp, #72]
     bbc:	ldr	w0, [x0, #32]
     bc0:	and	w0, w0, #0x80000
     bc4:	cmp	w0, #0x0
     bc8:	b.eq	c34 <ext2fs_bmap2+0x1e4>  // b.none
     bcc:	add	x0, sp, #0xa0
     bd0:	mov	x3, x0
     bd4:	ldr	x2, [sp, #72]
     bd8:	ldr	w1, [sp, #84]
     bdc:	ldr	x0, [sp, #88]
     be0:	bl	0 <ext2fs_extent_open2>
     be4:	str	x0, [sp, #304]
     be8:	ldr	x0, [sp, #304]
     bec:	cmp	x0, #0x0
     bf0:	b.ne	1100 <ext2fs_bmap2+0x6b0>  // b.any
     bf4:	ldr	x1, [sp, #160]
     bf8:	ldr	x0, [sp, #40]
     bfc:	str	x0, [sp, #8]
     c00:	add	x0, sp, #0x84
     c04:	str	x0, [sp]
     c08:	ldr	x7, [sp, #48]
     c0c:	ldr	x6, [sp, #56]
     c10:	ldr	w5, [sp, #80]
     c14:	ldr	x4, [sp, #64]
     c18:	mov	x3, x1
     c1c:	ldr	x2, [sp, #72]
     c20:	ldr	w1, [sp, #84]
     c24:	ldr	x0, [sp, #88]
     c28:	bl	618 <extent_bmap>
     c2c:	str	x0, [sp, #304]
     c30:	b	115c <ext2fs_bmap2+0x70c>
     c34:	ldr	x0, [sp, #56]
     c38:	cmp	x0, #0xb
     c3c:	b.hi	d8c <ext2fs_bmap2+0x33c>  // b.pmore
     c40:	ldr	w0, [sp, #80]
     c44:	and	w0, w0, #0x2
     c48:	cmp	w0, #0x0
     c4c:	b.eq	c88 <ext2fs_bmap2+0x238>  // b.none
     c50:	ldr	x0, [sp, #40]
     c54:	ldr	x0, [x0]
     c58:	str	w0, [sp, #316]
     c5c:	ldr	x1, [sp, #72]
     c60:	ldr	x0, [sp, #56]
     c64:	add	x0, x0, #0x8
     c68:	lsl	x0, x0, #2
     c6c:	add	x0, x1, x0
     c70:	ldr	w1, [sp, #316]
     c74:	str	w1, [x0, #8]
     c78:	ldr	w0, [sp, #300]
     c7c:	add	w0, w0, #0x1
     c80:	str	w0, [sp, #300]
     c84:	b	115c <ext2fs_bmap2+0x70c>
     c88:	ldr	x1, [sp, #72]
     c8c:	ldr	x0, [sp, #56]
     c90:	add	x0, x0, #0x8
     c94:	lsl	x0, x0, #2
     c98:	add	x0, x1, x0
     c9c:	ldr	w0, [x0, #8]
     ca0:	mov	w1, w0
     ca4:	ldr	x0, [sp, #40]
     ca8:	str	x1, [x0]
     cac:	ldr	x0, [sp, #56]
     cb0:	cmp	x0, #0x0
     cb4:	b.eq	cd8 <ext2fs_bmap2+0x288>  // b.none
     cb8:	ldr	x0, [sp, #56]
     cbc:	sub	x0, x0, #0x1
     cc0:	ldr	x1, [sp, #72]
     cc4:	add	x0, x0, #0x8
     cc8:	lsl	x0, x0, #2
     ccc:	add	x0, x1, x0
     cd0:	ldr	w0, [x0, #8]
     cd4:	b	cec <ext2fs_bmap2+0x29c>
     cd8:	ldr	x3, [sp, #56]
     cdc:	ldr	x2, [sp, #72]
     ce0:	ldr	w1, [sp, #84]
     ce4:	ldr	x0, [sp, #88]
     ce8:	bl	0 <ext2fs_find_inode_goal>
     cec:	str	w0, [sp, #316]
     cf0:	ldr	x0, [sp, #40]
     cf4:	ldr	x0, [x0]
     cf8:	cmp	x0, #0x0
     cfc:	b.ne	1108 <ext2fs_bmap2+0x6b8>  // b.any
     d00:	ldr	w0, [sp, #80]
     d04:	and	w0, w0, #0x1
     d08:	cmp	w0, #0x0
     d0c:	b.eq	1108 <ext2fs_bmap2+0x6b8>  // b.none
     d10:	ldr	w0, [sp, #316]
     d14:	str	x0, [sp, #144]
     d18:	ldr	x0, [sp, #144]
     d1c:	add	x2, sp, #0x60
     d20:	add	x1, sp, #0x90
     d24:	mov	x4, x2
     d28:	mov	x3, x1
     d2c:	ldr	x2, [sp, #64]
     d30:	mov	x1, x0
     d34:	ldr	x0, [sp, #88]
     d38:	bl	0 <ext2fs_alloc_block3>
     d3c:	str	x0, [sp, #304]
     d40:	ldr	x0, [sp, #144]
     d44:	str	w0, [sp, #316]
     d48:	ldr	x0, [sp, #304]
     d4c:	cmp	x0, #0x0
     d50:	b.ne	1110 <ext2fs_bmap2+0x6c0>  // b.any
     d54:	ldr	x1, [sp, #72]
     d58:	ldr	x0, [sp, #56]
     d5c:	add	x0, x0, #0x8
     d60:	lsl	x0, x0, #2
     d64:	add	x0, x1, x0
     d68:	ldr	w1, [sp, #316]
     d6c:	str	w1, [x0, #8]
     d70:	ldr	w0, [sp, #132]
     d74:	add	w0, w0, #0x1
     d78:	str	w0, [sp, #132]
     d7c:	ldr	w1, [sp, #316]
     d80:	ldr	x0, [sp, #40]
     d84:	str	x1, [x0]
     d88:	b	1108 <ext2fs_bmap2+0x6b8>
     d8c:	ldr	x0, [sp, #56]
     d90:	sub	x0, x0, #0xc
     d94:	str	x0, [sp, #56]
     d98:	ldr	x0, [sp, #40]
     d9c:	ldr	x0, [x0]
     da0:	str	w0, [sp, #156]
     da4:	ldr	w0, [sp, #296]
     da8:	ldr	x1, [sp, #56]
     dac:	cmp	x1, x0
     db0:	b.cs	eb8 <ext2fs_bmap2+0x468>  // b.hs, b.nlast
     db4:	ldr	x0, [sp, #72]
     db8:	ldr	w0, [x0, #88]
     dbc:	str	w0, [sp, #316]
     dc0:	ldr	w0, [sp, #316]
     dc4:	cmp	w0, #0x0
     dc8:	b.ne	e64 <ext2fs_bmap2+0x414>  // b.any
     dcc:	ldr	w0, [sp, #80]
     dd0:	and	w0, w0, #0x1
     dd4:	cmp	w0, #0x0
     dd8:	b.ne	dfc <ext2fs_bmap2+0x3ac>  // b.any
     ddc:	ldr	w0, [sp, #80]
     de0:	and	w0, w0, #0x2
     de4:	cmp	w0, #0x0
     de8:	b.eq	1118 <ext2fs_bmap2+0x6c8>  // b.none
     dec:	mov	x0, #0xb75f                	// #46943
     df0:	movk	x0, #0x7f2b, lsl #16
     df4:	str	x0, [sp, #304]
     df8:	b	1118 <ext2fs_bmap2+0x6c8>
     dfc:	ldr	x0, [sp, #72]
     e00:	ldr	w0, [x0, #84]
     e04:	str	w0, [sp, #316]
     e08:	ldr	w0, [sp, #316]
     e0c:	str	x0, [sp, #144]
     e10:	ldr	x0, [sp, #144]
     e14:	add	x2, sp, #0x60
     e18:	add	x1, sp, #0x90
     e1c:	mov	x4, x2
     e20:	mov	x3, x1
     e24:	ldr	x2, [sp, #64]
     e28:	mov	x1, x0
     e2c:	ldr	x0, [sp, #88]
     e30:	bl	0 <ext2fs_alloc_block3>
     e34:	str	x0, [sp, #304]
     e38:	ldr	x0, [sp, #144]
     e3c:	str	w0, [sp, #316]
     e40:	ldr	x0, [sp, #304]
     e44:	cmp	x0, #0x0
     e48:	b.ne	1120 <ext2fs_bmap2+0x6d0>  // b.any
     e4c:	ldr	x0, [sp, #72]
     e50:	ldr	w1, [sp, #316]
     e54:	str	w1, [x0, #88]
     e58:	ldr	w0, [sp, #132]
     e5c:	add	w0, w0, #0x1
     e60:	str	w0, [sp, #132]
     e64:	ldr	x0, [sp, #56]
     e68:	mov	w2, w0
     e6c:	add	x1, sp, #0x9c
     e70:	add	x0, sp, #0x84
     e74:	mov	x6, x1
     e78:	mov	w5, w2
     e7c:	mov	x4, x0
     e80:	ldr	x3, [sp, #64]
     e84:	ldr	w2, [sp, #316]
     e88:	ldr	w1, [sp, #80]
     e8c:	ldr	x0, [sp, #88]
     e90:	bl	28 <block_ind_bmap>
     e94:	str	x0, [sp, #304]
     e98:	ldr	x0, [sp, #304]
     e9c:	cmp	x0, #0x0
     ea0:	b.ne	1128 <ext2fs_bmap2+0x6d8>  // b.any
     ea4:	ldr	w0, [sp, #156]
     ea8:	mov	w1, w0
     eac:	ldr	x0, [sp, #40]
     eb0:	str	x1, [x0]
     eb4:	b	1128 <ext2fs_bmap2+0x6d8>
     eb8:	ldr	w0, [sp, #296]
     ebc:	ldr	x1, [sp, #56]
     ec0:	sub	x0, x1, x0
     ec4:	str	x0, [sp, #56]
     ec8:	ldr	w0, [sp, #296]
     ecc:	mul	w0, w0, w0
     ed0:	mov	w0, w0
     ed4:	ldr	x1, [sp, #56]
     ed8:	cmp	x1, x0
     edc:	b.cs	fe4 <ext2fs_bmap2+0x594>  // b.hs, b.nlast
     ee0:	ldr	x0, [sp, #72]
     ee4:	ldr	w0, [x0, #92]
     ee8:	str	w0, [sp, #316]
     eec:	ldr	w0, [sp, #316]
     ef0:	cmp	w0, #0x0
     ef4:	b.ne	f90 <ext2fs_bmap2+0x540>  // b.any
     ef8:	ldr	w0, [sp, #80]
     efc:	and	w0, w0, #0x1
     f00:	cmp	w0, #0x0
     f04:	b.ne	f28 <ext2fs_bmap2+0x4d8>  // b.any
     f08:	ldr	w0, [sp, #80]
     f0c:	and	w0, w0, #0x2
     f10:	cmp	w0, #0x0
     f14:	b.eq	1130 <ext2fs_bmap2+0x6e0>  // b.none
     f18:	mov	x0, #0xb75f                	// #46943
     f1c:	movk	x0, #0x7f2b, lsl #16
     f20:	str	x0, [sp, #304]
     f24:	b	1130 <ext2fs_bmap2+0x6e0>
     f28:	ldr	x0, [sp, #72]
     f2c:	ldr	w0, [x0, #88]
     f30:	str	w0, [sp, #316]
     f34:	ldr	w0, [sp, #316]
     f38:	str	x0, [sp, #144]
     f3c:	ldr	x0, [sp, #144]
     f40:	add	x2, sp, #0x60
     f44:	add	x1, sp, #0x90
     f48:	mov	x4, x2
     f4c:	mov	x3, x1
     f50:	ldr	x2, [sp, #64]
     f54:	mov	x1, x0
     f58:	ldr	x0, [sp, #88]
     f5c:	bl	0 <ext2fs_alloc_block3>
     f60:	str	x0, [sp, #304]
     f64:	ldr	x0, [sp, #144]
     f68:	str	w0, [sp, #316]
     f6c:	ldr	x0, [sp, #304]
     f70:	cmp	x0, #0x0
     f74:	b.ne	1138 <ext2fs_bmap2+0x6e8>  // b.any
     f78:	ldr	x0, [sp, #72]
     f7c:	ldr	w1, [sp, #316]
     f80:	str	w1, [x0, #92]
     f84:	ldr	w0, [sp, #132]
     f88:	add	w0, w0, #0x1
     f8c:	str	w0, [sp, #132]
     f90:	ldr	x0, [sp, #56]
     f94:	mov	w2, w0
     f98:	add	x1, sp, #0x9c
     f9c:	add	x0, sp, #0x84
     fa0:	mov	x6, x1
     fa4:	mov	w5, w2
     fa8:	mov	x4, x0
     fac:	ldr	x3, [sp, #64]
     fb0:	ldr	w2, [sp, #316]
     fb4:	ldr	w1, [sp, #80]
     fb8:	ldr	x0, [sp, #88]
     fbc:	bl	258 <block_dind_bmap>
     fc0:	str	x0, [sp, #304]
     fc4:	ldr	x0, [sp, #304]
     fc8:	cmp	x0, #0x0
     fcc:	b.ne	1140 <ext2fs_bmap2+0x6f0>  // b.any
     fd0:	ldr	w0, [sp, #156]
     fd4:	mov	w1, w0
     fd8:	ldr	x0, [sp, #40]
     fdc:	str	x1, [x0]
     fe0:	b	1140 <ext2fs_bmap2+0x6f0>
     fe4:	ldr	w0, [sp, #296]
     fe8:	mul	w0, w0, w0
     fec:	mov	w0, w0
     ff0:	ldr	x1, [sp, #56]
     ff4:	sub	x0, x1, x0
     ff8:	str	x0, [sp, #56]
     ffc:	ldr	x0, [sp, #72]
    1000:	ldr	w0, [x0, #96]
    1004:	str	w0, [sp, #316]
    1008:	ldr	w0, [sp, #316]
    100c:	cmp	w0, #0x0
    1010:	b.ne	10ac <ext2fs_bmap2+0x65c>  // b.any
    1014:	ldr	w0, [sp, #80]
    1018:	and	w0, w0, #0x1
    101c:	cmp	w0, #0x0
    1020:	b.ne	1044 <ext2fs_bmap2+0x5f4>  // b.any
    1024:	ldr	w0, [sp, #80]
    1028:	and	w0, w0, #0x2
    102c:	cmp	w0, #0x0
    1030:	b.eq	1148 <ext2fs_bmap2+0x6f8>  // b.none
    1034:	mov	x0, #0xb75f                	// #46943
    1038:	movk	x0, #0x7f2b, lsl #16
    103c:	str	x0, [sp, #304]
    1040:	b	1148 <ext2fs_bmap2+0x6f8>
    1044:	ldr	x0, [sp, #72]
    1048:	ldr	w0, [x0, #92]
    104c:	str	w0, [sp, #316]
    1050:	ldr	w0, [sp, #316]
    1054:	str	x0, [sp, #144]
    1058:	ldr	x0, [sp, #144]
    105c:	add	x2, sp, #0x60
    1060:	add	x1, sp, #0x90
    1064:	mov	x4, x2
    1068:	mov	x3, x1
    106c:	ldr	x2, [sp, #64]
    1070:	mov	x1, x0
    1074:	ldr	x0, [sp, #88]
    1078:	bl	0 <ext2fs_alloc_block3>
    107c:	str	x0, [sp, #304]
    1080:	ldr	x0, [sp, #144]
    1084:	str	w0, [sp, #316]
    1088:	ldr	x0, [sp, #304]
    108c:	cmp	x0, #0x0
    1090:	b.ne	1150 <ext2fs_bmap2+0x700>  // b.any
    1094:	ldr	x0, [sp, #72]
    1098:	ldr	w1, [sp, #316]
    109c:	str	w1, [x0, #96]
    10a0:	ldr	w0, [sp, #132]
    10a4:	add	w0, w0, #0x1
    10a8:	str	w0, [sp, #132]
    10ac:	ldr	x0, [sp, #56]
    10b0:	mov	w2, w0
    10b4:	add	x1, sp, #0x9c
    10b8:	add	x0, sp, #0x84
    10bc:	mov	x6, x1
    10c0:	mov	w5, w2
    10c4:	mov	x4, x0
    10c8:	ldr	x3, [sp, #64]
    10cc:	ldr	w2, [sp, #316]
    10d0:	ldr	w1, [sp, #80]
    10d4:	ldr	x0, [sp, #88]
    10d8:	bl	32c <block_tind_bmap>
    10dc:	str	x0, [sp, #304]
    10e0:	ldr	x0, [sp, #304]
    10e4:	cmp	x0, #0x0
    10e8:	b.ne	1158 <ext2fs_bmap2+0x708>  // b.any
    10ec:	ldr	w0, [sp, #156]
    10f0:	mov	w1, w0
    10f4:	ldr	x0, [sp, #40]
    10f8:	str	x1, [x0]
    10fc:	b	115c <ext2fs_bmap2+0x70c>
    1100:	nop
    1104:	b	115c <ext2fs_bmap2+0x70c>
    1108:	nop
    110c:	b	115c <ext2fs_bmap2+0x70c>
    1110:	nop
    1114:	b	115c <ext2fs_bmap2+0x70c>
    1118:	nop
    111c:	b	115c <ext2fs_bmap2+0x70c>
    1120:	nop
    1124:	b	115c <ext2fs_bmap2+0x70c>
    1128:	nop
    112c:	b	115c <ext2fs_bmap2+0x70c>
    1130:	nop
    1134:	b	115c <ext2fs_bmap2+0x70c>
    1138:	nop
    113c:	b	115c <ext2fs_bmap2+0x70c>
    1140:	nop
    1144:	b	115c <ext2fs_bmap2+0x70c>
    1148:	nop
    114c:	b	115c <ext2fs_bmap2+0x70c>
    1150:	nop
    1154:	b	115c <ext2fs_bmap2+0x70c>
    1158:	nop
    115c:	ldr	x0, [sp, #40]
    1160:	ldr	x0, [x0]
    1164:	cmp	x0, #0x0
    1168:	b.eq	11ac <ext2fs_bmap2+0x75c>  // b.none
    116c:	ldr	x0, [sp, #304]
    1170:	cmp	x0, #0x0
    1174:	b.ne	11ac <ext2fs_bmap2+0x75c>  // b.any
    1178:	ldr	w0, [sp, #80]
    117c:	and	w0, w0, #0x8
    1180:	cmp	w0, #0x0
    1184:	b.eq	11ac <ext2fs_bmap2+0x75c>  // b.none
    1188:	ldr	x0, [sp, #40]
    118c:	ldr	x0, [x0]
    1190:	mov	x4, #0x0                   	// #0
    1194:	mov	x3, #0x0                   	// #0
    1198:	mov	w2, #0x1                   	// #1
    119c:	mov	x1, x0
    11a0:	ldr	x0, [sp, #88]
    11a4:	bl	0 <ext2fs_zero_blocks2>
    11a8:	str	x0, [sp, #304]
    11ac:	ldr	x0, [sp, #136]
    11b0:	cmp	x0, #0x0
    11b4:	b.eq	11c0 <ext2fs_bmap2+0x770>  // b.none
    11b8:	add	x0, sp, #0x88
    11bc:	bl	0 <ext2fs_free_mem>
    11c0:	ldr	x0, [sp, #160]
    11c4:	cmp	x0, #0x0
    11c8:	b.eq	11d4 <ext2fs_bmap2+0x784>  // b.none
    11cc:	ldr	x0, [sp, #160]
    11d0:	bl	0 <ext2fs_extent_free>
    11d4:	ldr	x0, [sp, #304]
    11d8:	cmp	x0, #0x0
    11dc:	b.ne	1224 <ext2fs_bmap2+0x7d4>  // b.any
    11e0:	ldr	w0, [sp, #132]
    11e4:	cmp	w0, #0x0
    11e8:	b.ne	11f8 <ext2fs_bmap2+0x7a8>  // b.any
    11ec:	ldr	w0, [sp, #300]
    11f0:	cmp	w0, #0x0
    11f4:	b.eq	1224 <ext2fs_bmap2+0x7d4>  // b.none
    11f8:	ldr	w0, [sp, #132]
    11fc:	sxtw	x0, w0
    1200:	mov	x2, x0
    1204:	ldr	x1, [sp, #72]
    1208:	ldr	x0, [sp, #88]
    120c:	bl	0 <ext2fs_iblk_add_blocks>
    1210:	ldr	x2, [sp, #72]
    1214:	ldr	w1, [sp, #84]
    1218:	ldr	x0, [sp, #88]
    121c:	bl	0 <ext2fs_write_inode>
    1220:	str	x0, [sp, #304]
    1224:	ldr	x0, [sp, #304]
    1228:	ldp	x29, x30, [sp, #16]
    122c:	add	sp, sp, #0x140
    1230:	ret

0000000000001234 <ext2fs_bmap>:
    1234:	stp	x29, x30, [sp, #-80]!
    1238:	mov	x29, sp
    123c:	str	x0, [sp, #56]
    1240:	str	w1, [sp, #52]
    1244:	str	x2, [sp, #40]
    1248:	str	x3, [sp, #32]
    124c:	str	w4, [sp, #48]
    1250:	str	w5, [sp, #28]
    1254:	str	x6, [sp, #16]
    1258:	ldr	x0, [sp, #16]
    125c:	ldr	w0, [x0]
    1260:	mov	w0, w0
    1264:	str	x0, [sp, #64]
    1268:	ldr	w0, [sp, #28]
    126c:	add	x1, sp, #0x40
    1270:	mov	x7, x1
    1274:	mov	x6, #0x0                   	// #0
    1278:	mov	x5, x0
    127c:	ldr	w4, [sp, #48]
    1280:	ldr	x3, [sp, #32]
    1284:	ldr	x2, [sp, #40]
    1288:	ldr	w1, [sp, #52]
    128c:	ldr	x0, [sp, #56]
    1290:	bl	a50 <ext2fs_bmap2>
    1294:	str	x0, [sp, #72]
    1298:	ldr	x0, [sp, #72]
    129c:	cmp	x0, #0x0
    12a0:	b.eq	12ac <ext2fs_bmap+0x78>  // b.none
    12a4:	ldr	x0, [sp, #72]
    12a8:	b	12d8 <ext2fs_bmap+0xa4>
    12ac:	ldr	x1, [sp, #64]
    12b0:	mov	x0, #0xffffffff            	// #4294967295
    12b4:	cmp	x1, x0
    12b8:	b.ls	12c4 <ext2fs_bmap+0x90>  // b.plast
    12bc:	mov	x0, #0x4b                  	// #75
    12c0:	b	12d8 <ext2fs_bmap+0xa4>
    12c4:	ldr	x0, [sp, #64]
    12c8:	mov	w1, w0
    12cc:	ldr	x0, [sp, #16]
    12d0:	str	w1, [x0]
    12d4:	mov	x0, #0x0                   	// #0
    12d8:	ldp	x29, x30, [sp], #80
    12dc:	ret

check_desc.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_flex_bg>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x200
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_check_desc>:
  28:	stp	x29, x30, [sp, #-96]!
  2c:	mov	x29, sp
  30:	str	x0, [sp, #24]
  34:	ldr	x0, [sp, #24]
  38:	ldr	x0, [x0, #32]
  3c:	ldr	w0, [x0, #20]
  40:	mov	w0, w0
  44:	str	x0, [sp, #72]
  48:	ldr	x0, [sp, #24]
  4c:	ldr	x0, [x0, #32]
  50:	bl	0 <ext2fs_blocks_count>
  54:	sub	x0, x0, #0x1
  58:	str	x0, [sp, #64]
  5c:	ldr	x0, [sp, #24]
  60:	ldr	x1, [x0]
  64:	mov	x0, #0xb701                	// #46849
  68:	movk	x0, #0x7f2b, lsl #16
  6c:	cmp	x1, x0
  70:	b.eq	80 <ext2fs_check_desc+0x58>  // b.none
  74:	mov	x0, #0xb701                	// #46849
  78:	movk	x0, #0x7f2b, lsl #16
  7c:	b	350 <ext2fs_check_desc+0x328>
  80:	ldr	x0, [sp, #24]
  84:	ldr	x0, [x0, #32]
  88:	ldr	w0, [x0, #96]
  8c:	and	w0, w0, #0x80
  90:	cmp	w0, #0x0
  94:	b.eq	ac <ext2fs_check_desc+0x84>  // b.none
  98:	ldr	x0, [sp, #24]
  9c:	ldr	x0, [x0, #32]
  a0:	ldrh	w0, [x0, #254]
  a4:	mov	w1, w0
  a8:	b	b0 <ext2fs_check_desc+0x88>
  ac:	mov	w1, #0x20                  	// #32
  b0:	ldr	x0, [sp, #24]
  b4:	ldr	x0, [x0, #32]
  b8:	ldr	w0, [x0, #96]
  bc:	and	w0, w0, #0x80
  c0:	cmp	w0, #0x0
  c4:	b.eq	dc <ext2fs_check_desc+0xb4>  // b.none
  c8:	ldr	x0, [sp, #24]
  cc:	ldr	x0, [x0, #32]
  d0:	ldrh	w0, [x0, #254]
  d4:	sub	w0, w0, #0x1
  d8:	b	e0 <ext2fs_check_desc+0xb8>
  dc:	mov	w0, #0x1f                  	// #31
  e0:	and	w0, w1, w0
  e4:	cmp	w0, #0x0
  e8:	b.eq	f8 <ext2fs_check_desc+0xd0>  // b.none
  ec:	mov	x0, #0xb791                	// #46993
  f0:	movk	x0, #0x7f2b, lsl #16
  f4:	b	350 <ext2fs_check_desc+0x328>
  f8:	add	x0, sp, #0x20
  fc:	mov	x2, x0
 100:	adrp	x0, 0 <ext2fs_has_feature_flex_bg>
 104:	add	x1, x0, #0x0
 108:	ldr	x0, [sp, #24]
 10c:	bl	0 <ext2fs_allocate_subcluster_bitmap>
 110:	str	x0, [sp, #88]
 114:	ldr	x0, [sp, #88]
 118:	cmp	x0, #0x0
 11c:	b.eq	128 <ext2fs_check_desc+0x100>  // b.none
 120:	ldr	x0, [sp, #88]
 124:	b	350 <ext2fs_check_desc+0x328>
 128:	str	wzr, [sp, #84]
 12c:	b	150 <ext2fs_check_desc+0x128>
 130:	ldr	x0, [sp, #32]
 134:	mov	x2, x0
 138:	ldr	w1, [sp, #84]
 13c:	ldr	x0, [sp, #24]
 140:	bl	0 <ext2fs_reserve_super_and_bgd>
 144:	ldr	w0, [sp, #84]
 148:	add	w0, w0, #0x1
 14c:	str	w0, [sp, #84]
 150:	ldr	x0, [sp, #24]
 154:	ldr	w0, [x0, #48]
 158:	ldr	w1, [sp, #84]
 15c:	cmp	w1, w0
 160:	b.cc	130 <ext2fs_check_desc+0x108>  // b.lo, b.ul, b.last
 164:	str	wzr, [sp, #84]
 168:	b	32c <ext2fs_check_desc+0x304>
 16c:	ldr	x0, [sp, #24]
 170:	ldr	x0, [x0, #32]
 174:	bl	0 <ext2fs_has_feature_flex_bg>
 178:	cmp	w0, #0x0
 17c:	b.ne	1a0 <ext2fs_check_desc+0x178>  // b.any
 180:	ldr	w1, [sp, #84]
 184:	ldr	x0, [sp, #24]
 188:	bl	0 <ext2fs_group_first_block2>
 18c:	str	x0, [sp, #72]
 190:	ldr	w1, [sp, #84]
 194:	ldr	x0, [sp, #24]
 198:	bl	0 <ext2fs_group_last_block2>
 19c:	str	x0, [sp, #64]
 1a0:	ldr	w1, [sp, #84]
 1a4:	ldr	x0, [sp, #24]
 1a8:	bl	0 <ext2fs_block_bitmap_loc>
 1ac:	str	x0, [sp, #40]
 1b0:	ldr	x1, [sp, #40]
 1b4:	ldr	x0, [sp, #72]
 1b8:	cmp	x1, x0
 1bc:	b.cc	1e4 <ext2fs_check_desc+0x1bc>  // b.lo, b.ul, b.last
 1c0:	ldr	x1, [sp, #40]
 1c4:	ldr	x0, [sp, #64]
 1c8:	cmp	x1, x0
 1cc:	b.hi	1e4 <ext2fs_check_desc+0x1bc>  // b.pmore
 1d0:	ldr	x0, [sp, #32]
 1d4:	ldr	x1, [sp, #40]
 1d8:	bl	0 <ext2fs_test_block_bitmap2>
 1dc:	cmp	w0, #0x0
 1e0:	b.eq	1f4 <ext2fs_check_desc+0x1cc>  // b.none
 1e4:	mov	x0, #0xb718                	// #46872
 1e8:	movk	x0, #0x7f2b, lsl #16
 1ec:	str	x0, [sp, #88]
 1f0:	b	344 <ext2fs_check_desc+0x31c>
 1f4:	ldr	x0, [sp, #32]
 1f8:	ldr	x1, [sp, #40]
 1fc:	bl	0 <ext2fs_mark_block_bitmap2>
 200:	ldr	w1, [sp, #84]
 204:	ldr	x0, [sp, #24]
 208:	bl	0 <ext2fs_inode_bitmap_loc>
 20c:	str	x0, [sp, #40]
 210:	ldr	x1, [sp, #40]
 214:	ldr	x0, [sp, #72]
 218:	cmp	x1, x0
 21c:	b.cc	244 <ext2fs_check_desc+0x21c>  // b.lo, b.ul, b.last
 220:	ldr	x1, [sp, #40]
 224:	ldr	x0, [sp, #64]
 228:	cmp	x1, x0
 22c:	b.hi	244 <ext2fs_check_desc+0x21c>  // b.pmore
 230:	ldr	x0, [sp, #32]
 234:	ldr	x1, [sp, #40]
 238:	bl	0 <ext2fs_test_block_bitmap2>
 23c:	cmp	w0, #0x0
 240:	b.eq	254 <ext2fs_check_desc+0x22c>  // b.none
 244:	mov	x0, #0xb719                	// #46873
 248:	movk	x0, #0x7f2b, lsl #16
 24c:	str	x0, [sp, #88]
 250:	b	344 <ext2fs_check_desc+0x31c>
 254:	ldr	x0, [sp, #32]
 258:	ldr	x1, [sp, #40]
 25c:	bl	0 <ext2fs_mark_block_bitmap2>
 260:	ldr	w1, [sp, #84]
 264:	ldr	x0, [sp, #24]
 268:	bl	0 <ext2fs_inode_table_loc>
 26c:	str	x0, [sp, #40]
 270:	ldr	x1, [sp, #40]
 274:	ldr	x0, [sp, #72]
 278:	cmp	x1, x0
 27c:	b.cc	2a4 <ext2fs_check_desc+0x27c>  // b.lo, b.ul, b.last
 280:	ldr	x0, [sp, #24]
 284:	ldr	w0, [x0, #72]
 288:	mov	w1, w0
 28c:	ldr	x0, [sp, #40]
 290:	add	x0, x1, x0
 294:	sub	x0, x0, #0x1
 298:	ldr	x1, [sp, #64]
 29c:	cmp	x1, x0
 2a0:	b.cs	2b4 <ext2fs_check_desc+0x28c>  // b.hs, b.nlast
 2a4:	mov	x0, #0xb71a                	// #46874
 2a8:	movk	x0, #0x7f2b, lsl #16
 2ac:	str	x0, [sp, #88]
 2b0:	b	344 <ext2fs_check_desc+0x31c>
 2b4:	str	wzr, [sp, #52]
 2b8:	ldr	x0, [sp, #40]
 2bc:	str	x0, [sp, #56]
 2c0:	b	30c <ext2fs_check_desc+0x2e4>
 2c4:	ldr	x0, [sp, #32]
 2c8:	ldr	x1, [sp, #56]
 2cc:	bl	0 <ext2fs_test_block_bitmap2>
 2d0:	cmp	w0, #0x0
 2d4:	b.eq	2e8 <ext2fs_check_desc+0x2c0>  // b.none
 2d8:	mov	x0, #0xb71a                	// #46874
 2dc:	movk	x0, #0x7f2b, lsl #16
 2e0:	str	x0, [sp, #88]
 2e4:	b	344 <ext2fs_check_desc+0x31c>
 2e8:	ldr	x0, [sp, #32]
 2ec:	ldr	x1, [sp, #56]
 2f0:	bl	0 <ext2fs_mark_block_bitmap2>
 2f4:	ldr	w0, [sp, #52]
 2f8:	add	w0, w0, #0x1
 2fc:	str	w0, [sp, #52]
 300:	ldr	x0, [sp, #56]
 304:	add	x0, x0, #0x1
 308:	str	x0, [sp, #56]
 30c:	ldr	x0, [sp, #24]
 310:	ldr	w0, [x0, #72]
 314:	ldr	w1, [sp, #52]
 318:	cmp	w1, w0
 31c:	b.cc	2c4 <ext2fs_check_desc+0x29c>  // b.lo, b.ul, b.last
 320:	ldr	w0, [sp, #84]
 324:	add	w0, w0, #0x1
 328:	str	w0, [sp, #84]
 32c:	ldr	x0, [sp, #24]
 330:	ldr	w0, [x0, #48]
 334:	ldr	w1, [sp, #84]
 338:	cmp	w1, w0
 33c:	b.cc	16c <ext2fs_check_desc+0x144>  // b.lo, b.ul, b.last
 340:	nop
 344:	ldr	x0, [sp, #32]
 348:	bl	0 <ext2fs_free_block_bitmap>
 34c:	ldr	x0, [sp, #88]
 350:	ldp	x29, x30, [sp], #96
 354:	ret

closefs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_sparse_super2>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #92]
      10:	and	w0, w0, #0x200
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_sparse_super>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x1
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_clear_feature_journal_needs_recovery>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #96]
      60:	and	w1, w0, #0xfffffffb
      64:	ldr	x0, [sp, #8]
      68:	str	w1, [x0, #96]
      6c:	nop
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_has_feature_journal_dev>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #96]
      88:	and	w0, w0, #0x8
      8c:	cmp	w0, #0x0
      90:	cset	w0, ne  // ne = any
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_has_feature_meta_bg>:
      a0:	sub	sp, sp, #0x10
      a4:	str	x0, [sp, #8]
      a8:	ldr	x0, [sp, #8]
      ac:	ldr	w0, [x0, #96]
      b0:	and	w0, w0, #0x10
      b4:	cmp	w0, #0x0
      b8:	cset	w0, ne  // ne = any
      bc:	and	w0, w0, #0xff
      c0:	add	sp, sp, #0x10
      c4:	ret

00000000000000c8 <test_root>:
      c8:	sub	sp, sp, #0x10
      cc:	str	w0, [sp, #12]
      d0:	str	w1, [sp, #8]
      d4:	ldr	w1, [sp, #12]
      d8:	ldr	w0, [sp, #8]
      dc:	cmp	w1, w0
      e0:	b.cs	ec <test_root+0x24>  // b.hs, b.nlast
      e4:	mov	w0, #0x0                   	// #0
      e8:	b	140 <test_root+0x78>
      ec:	ldr	w1, [sp, #12]
      f0:	ldr	w0, [sp, #8]
      f4:	cmp	w1, w0
      f8:	b.ne	104 <test_root+0x3c>  // b.any
      fc:	mov	w0, #0x1                   	// #1
     100:	b	140 <test_root+0x78>
     104:	ldr	w0, [sp, #12]
     108:	ldr	w1, [sp, #8]
     10c:	udiv	w2, w0, w1
     110:	ldr	w1, [sp, #8]
     114:	mul	w1, w2, w1
     118:	sub	w0, w0, w1
     11c:	cmp	w0, #0x0
     120:	b.eq	12c <test_root+0x64>  // b.none
     124:	mov	w0, #0x0                   	// #0
     128:	b	140 <test_root+0x78>
     12c:	ldr	w1, [sp, #12]
     130:	ldr	w0, [sp, #8]
     134:	udiv	w0, w1, w0
     138:	str	w0, [sp, #12]
     13c:	b	d4 <test_root+0xc>
     140:	add	sp, sp, #0x10
     144:	ret

0000000000000148 <ext2fs_bg_has_super>:
     148:	stp	x29, x30, [sp, #-32]!
     14c:	mov	x29, sp
     150:	str	x0, [sp, #24]
     154:	str	w1, [sp, #20]
     158:	ldr	w0, [sp, #20]
     15c:	cmp	w0, #0x0
     160:	b.ne	16c <ext2fs_bg_has_super+0x24>  // b.any
     164:	mov	w0, #0x1                   	// #1
     168:	b	248 <ext2fs_bg_has_super+0x100>
     16c:	ldr	x0, [sp, #24]
     170:	ldr	x0, [x0, #32]
     174:	bl	0 <ext2fs_has_feature_sparse_super2>
     178:	cmp	w0, #0x0
     17c:	b.eq	1c0 <ext2fs_bg_has_super+0x78>  // b.none
     180:	ldr	x0, [sp, #24]
     184:	ldr	x0, [x0, #32]
     188:	ldr	w0, [x0, #588]
     18c:	ldr	w1, [sp, #20]
     190:	cmp	w1, w0
     194:	b.eq	1b0 <ext2fs_bg_has_super+0x68>  // b.none
     198:	ldr	x0, [sp, #24]
     19c:	ldr	x0, [x0, #32]
     1a0:	ldr	w0, [x0, #592]
     1a4:	ldr	w1, [sp, #20]
     1a8:	cmp	w1, w0
     1ac:	b.ne	1b8 <ext2fs_bg_has_super+0x70>  // b.any
     1b0:	mov	w0, #0x1                   	// #1
     1b4:	b	248 <ext2fs_bg_has_super+0x100>
     1b8:	mov	w0, #0x0                   	// #0
     1bc:	b	248 <ext2fs_bg_has_super+0x100>
     1c0:	ldr	w0, [sp, #20]
     1c4:	cmp	w0, #0x1
     1c8:	b.ls	1e0 <ext2fs_bg_has_super+0x98>  // b.plast
     1cc:	ldr	x0, [sp, #24]
     1d0:	ldr	x0, [x0, #32]
     1d4:	bl	28 <ext2fs_has_feature_sparse_super>
     1d8:	cmp	w0, #0x0
     1dc:	b.ne	1e8 <ext2fs_bg_has_super+0xa0>  // b.any
     1e0:	mov	w0, #0x1                   	// #1
     1e4:	b	248 <ext2fs_bg_has_super+0x100>
     1e8:	ldr	w0, [sp, #20]
     1ec:	and	w0, w0, #0x1
     1f0:	cmp	w0, #0x0
     1f4:	b.ne	200 <ext2fs_bg_has_super+0xb8>  // b.any
     1f8:	mov	w0, #0x0                   	// #0
     1fc:	b	248 <ext2fs_bg_has_super+0x100>
     200:	mov	w1, #0x3                   	// #3
     204:	ldr	w0, [sp, #20]
     208:	bl	c8 <test_root>
     20c:	cmp	w0, #0x0
     210:	b.ne	23c <ext2fs_bg_has_super+0xf4>  // b.any
     214:	mov	w1, #0x5                   	// #5
     218:	ldr	w0, [sp, #20]
     21c:	bl	c8 <test_root>
     220:	cmp	w0, #0x0
     224:	b.ne	23c <ext2fs_bg_has_super+0xf4>  // b.any
     228:	mov	w1, #0x7                   	// #7
     22c:	ldr	w0, [sp, #20]
     230:	bl	c8 <test_root>
     234:	cmp	w0, #0x0
     238:	b.eq	244 <ext2fs_bg_has_super+0xfc>  // b.none
     23c:	mov	w0, #0x1                   	// #1
     240:	b	248 <ext2fs_bg_has_super+0x100>
     244:	mov	w0, #0x0                   	// #0
     248:	ldp	x29, x30, [sp], #32
     24c:	ret

0000000000000250 <ext2fs_super_and_bgd_loc2>:
     250:	stp	x29, x30, [sp, #-128]!
     254:	mov	x29, sp
     258:	str	x0, [sp, #56]
     25c:	str	w1, [sp, #52]
     260:	str	x2, [sp, #40]
     264:	str	x3, [sp, #32]
     268:	str	x4, [sp, #24]
     26c:	str	x5, [sp, #16]
     270:	str	xzr, [sp, #112]
     274:	str	xzr, [sp, #104]
     278:	str	xzr, [sp, #96]
     27c:	str	wzr, [sp, #92]
     280:	ldr	w1, [sp, #52]
     284:	ldr	x0, [sp, #56]
     288:	bl	0 <ext2fs_group_first_block2>
     28c:	str	x0, [sp, #120]
     290:	ldr	x0, [sp, #120]
     294:	cmp	x0, #0x0
     298:	b.ne	2b4 <ext2fs_super_and_bgd_loc2+0x64>  // b.any
     29c:	ldr	x0, [sp, #56]
     2a0:	ldr	w0, [x0, #40]
     2a4:	cmp	w0, #0x400
     2a8:	b.ne	2b4 <ext2fs_super_and_bgd_loc2+0x64>  // b.any
     2ac:	mov	x0, #0x1                   	// #1
     2b0:	str	x0, [sp, #120]
     2b4:	ldr	x0, [sp, #56]
     2b8:	ldr	x0, [x0, #32]
     2bc:	bl	a0 <ext2fs_has_feature_meta_bg>
     2c0:	cmp	w0, #0x0
     2c4:	b.eq	2e0 <ext2fs_super_and_bgd_loc2+0x90>  // b.none
     2c8:	ldr	x0, [sp, #56]
     2cc:	ldr	x0, [x0, #32]
     2d0:	ldr	w0, [x0, #260]
     2d4:	mov	w0, w0
     2d8:	str	x0, [sp, #80]
     2dc:	b	300 <ext2fs_super_and_bgd_loc2+0xb0>
     2e0:	ldr	x0, [sp, #56]
     2e4:	ldr	x1, [x0, #56]
     2e8:	ldr	x0, [sp, #56]
     2ec:	ldr	x0, [x0, #32]
     2f0:	ldrh	w0, [x0, #206]
     2f4:	and	x0, x0, #0xffff
     2f8:	add	x0, x1, x0
     2fc:	str	x0, [sp, #80]
     300:	ldr	w1, [sp, #52]
     304:	ldr	x0, [sp, #56]
     308:	bl	148 <ext2fs_bg_has_super>
     30c:	str	w0, [sp, #76]
     310:	ldr	w0, [sp, #76]
     314:	cmp	w0, #0x0
     318:	b.eq	330 <ext2fs_super_and_bgd_loc2+0xe0>  // b.none
     31c:	ldr	x0, [sp, #120]
     320:	str	x0, [sp, #112]
     324:	ldr	w0, [sp, #92]
     328:	add	w0, w0, #0x1
     32c:	str	w0, [sp, #92]
     330:	ldr	x0, [sp, #56]
     334:	ldr	x0, [x0, #32]
     338:	ldr	w0, [x0, #24]
     33c:	mov	w1, #0x400                 	// #1024
     340:	lsl	w1, w1, w0
     344:	ldr	x0, [sp, #56]
     348:	ldr	x0, [x0, #32]
     34c:	ldr	w0, [x0, #96]
     350:	and	w0, w0, #0x80
     354:	cmp	w0, #0x0
     358:	b.eq	36c <ext2fs_super_and_bgd_loc2+0x11c>  // b.none
     35c:	ldr	x0, [sp, #56]
     360:	ldr	x0, [x0, #32]
     364:	ldrh	w0, [x0, #254]
     368:	b	370 <ext2fs_super_and_bgd_loc2+0x120>
     36c:	mov	w0, #0x20                  	// #32
     370:	sdiv	w0, w1, w0
     374:	str	w0, [sp, #72]
     378:	ldr	w1, [sp, #52]
     37c:	ldr	w0, [sp, #72]
     380:	udiv	w0, w1, w0
     384:	str	w0, [sp, #68]
     388:	ldr	x0, [sp, #56]
     38c:	ldr	x0, [x0, #32]
     390:	bl	a0 <ext2fs_has_feature_meta_bg>
     394:	cmp	w0, #0x0
     398:	b.eq	3b4 <ext2fs_super_and_bgd_loc2+0x164>  // b.none
     39c:	ldr	x0, [sp, #56]
     3a0:	ldr	x0, [x0, #32]
     3a4:	ldr	w0, [x0, #260]
     3a8:	ldr	w1, [sp, #68]
     3ac:	cmp	w1, w0
     3b0:	b.cs	3e4 <ext2fs_super_and_bgd_loc2+0x194>  // b.hs, b.nlast
     3b4:	ldr	w0, [sp, #76]
     3b8:	cmp	w0, #0x0
     3bc:	b.eq	47c <ext2fs_super_and_bgd_loc2+0x22c>  // b.none
     3c0:	ldr	x0, [sp, #120]
     3c4:	add	x0, x0, #0x1
     3c8:	str	x0, [sp, #104]
     3cc:	ldr	x0, [sp, #80]
     3d0:	mov	w1, w0
     3d4:	ldr	w0, [sp, #92]
     3d8:	add	w0, w0, w1
     3dc:	str	w0, [sp, #92]
     3e0:	b	47c <ext2fs_super_and_bgd_loc2+0x22c>
     3e4:	ldr	w0, [sp, #52]
     3e8:	ldr	w1, [sp, #72]
     3ec:	udiv	w2, w0, w1
     3f0:	ldr	w1, [sp, #72]
     3f4:	mul	w1, w2, w1
     3f8:	sub	w0, w0, w1
     3fc:	cmp	w0, #0x0
     400:	b.eq	44c <ext2fs_super_and_bgd_loc2+0x1fc>  // b.none
     404:	ldr	w0, [sp, #52]
     408:	ldr	w1, [sp, #72]
     40c:	udiv	w2, w0, w1
     410:	ldr	w1, [sp, #72]
     414:	mul	w1, w2, w1
     418:	sub	w0, w0, w1
     41c:	cmp	w0, #0x1
     420:	b.eq	44c <ext2fs_super_and_bgd_loc2+0x1fc>  // b.none
     424:	ldr	w0, [sp, #52]
     428:	ldr	w1, [sp, #72]
     42c:	udiv	w2, w0, w1
     430:	ldr	w1, [sp, #72]
     434:	mul	w1, w2, w1
     438:	sub	w1, w0, w1
     43c:	ldr	w0, [sp, #72]
     440:	sub	w0, w0, #0x1
     444:	cmp	w1, w0
     448:	b.ne	47c <ext2fs_super_and_bgd_loc2+0x22c>  // b.any
     44c:	ldr	w0, [sp, #76]
     450:	cmp	w0, #0x0
     454:	b.eq	460 <ext2fs_super_and_bgd_loc2+0x210>  // b.none
     458:	mov	w0, #0x1                   	// #1
     45c:	str	w0, [sp, #76]
     460:	ldrsw	x0, [sp, #76]
     464:	ldr	x1, [sp, #120]
     468:	add	x0, x1, x0
     46c:	str	x0, [sp, #96]
     470:	ldr	w0, [sp, #92]
     474:	add	w0, w0, #0x1
     478:	str	w0, [sp, #92]
     47c:	ldr	x0, [sp, #40]
     480:	cmp	x0, #0x0
     484:	b.eq	494 <ext2fs_super_and_bgd_loc2+0x244>  // b.none
     488:	ldr	x0, [sp, #40]
     48c:	ldr	x1, [sp, #112]
     490:	str	x1, [x0]
     494:	ldr	x0, [sp, #32]
     498:	cmp	x0, #0x0
     49c:	b.eq	4ac <ext2fs_super_and_bgd_loc2+0x25c>  // b.none
     4a0:	ldr	x0, [sp, #32]
     4a4:	ldr	x1, [sp, #104]
     4a8:	str	x1, [x0]
     4ac:	ldr	x0, [sp, #24]
     4b0:	cmp	x0, #0x0
     4b4:	b.eq	4c4 <ext2fs_super_and_bgd_loc2+0x274>  // b.none
     4b8:	ldr	x0, [sp, #24]
     4bc:	ldr	x1, [sp, #96]
     4c0:	str	x1, [x0]
     4c4:	ldr	x0, [sp, #16]
     4c8:	cmp	x0, #0x0
     4cc:	b.eq	4dc <ext2fs_super_and_bgd_loc2+0x28c>  // b.none
     4d0:	ldr	x0, [sp, #16]
     4d4:	ldr	w1, [sp, #92]
     4d8:	str	w1, [x0]
     4dc:	mov	x0, #0x0                   	// #0
     4e0:	ldp	x29, x30, [sp], #128
     4e4:	ret

00000000000004e8 <ext2fs_super_and_bgd_loc>:
     4e8:	stp	x29, x30, [sp, #-112]!
     4ec:	mov	x29, sp
     4f0:	str	x0, [sp, #56]
     4f4:	str	w1, [sp, #52]
     4f8:	str	x2, [sp, #40]
     4fc:	str	x3, [sp, #32]
     500:	str	x4, [sp, #24]
     504:	str	x5, [sp, #16]
     508:	add	x3, sp, #0x4c
     50c:	add	x2, sp, #0x50
     510:	add	x1, sp, #0x58
     514:	add	x0, sp, #0x60
     518:	mov	x5, x3
     51c:	mov	x4, x2
     520:	mov	x3, x1
     524:	mov	x2, x0
     528:	ldr	w1, [sp, #52]
     52c:	ldr	x0, [sp, #56]
     530:	bl	250 <ext2fs_super_and_bgd_loc2>
     534:	ldr	w1, [sp, #52]
     538:	ldr	x0, [sp, #56]
     53c:	bl	0 <ext2fs_group_blocks_count>
     540:	str	w0, [sp, #108]
     544:	ldr	x0, [sp, #40]
     548:	cmp	x0, #0x0
     54c:	b.eq	560 <ext2fs_super_and_bgd_loc+0x78>  // b.none
     550:	ldr	x0, [sp, #96]
     554:	mov	w1, w0
     558:	ldr	x0, [sp, #40]
     55c:	str	w1, [x0]
     560:	ldr	x0, [sp, #32]
     564:	cmp	x0, #0x0
     568:	b.eq	57c <ext2fs_super_and_bgd_loc+0x94>  // b.none
     56c:	ldr	x0, [sp, #88]
     570:	mov	w1, w0
     574:	ldr	x0, [sp, #32]
     578:	str	w1, [x0]
     57c:	ldr	x0, [sp, #24]
     580:	cmp	x0, #0x0
     584:	b.eq	598 <ext2fs_super_and_bgd_loc+0xb0>  // b.none
     588:	ldr	x0, [sp, #80]
     58c:	mov	w1, w0
     590:	ldr	x0, [sp, #24]
     594:	str	w1, [x0]
     598:	ldr	x0, [sp, #16]
     59c:	cmp	x0, #0x0
     5a0:	b.eq	604 <ext2fs_super_and_bgd_loc+0x11c>  // b.none
     5a4:	ldr	x0, [sp, #56]
     5a8:	ldr	x0, [x0, #32]
     5ac:	ldr	w0, [x0, #24]
     5b0:	mov	w1, #0x400                 	// #1024
     5b4:	lsl	w1, w1, w0
     5b8:	ldr	x0, [sp, #56]
     5bc:	ldr	x0, [x0, #32]
     5c0:	ldr	w0, [x0, #96]
     5c4:	and	w0, w0, #0x80
     5c8:	cmp	w0, #0x0
     5cc:	b.eq	5e0 <ext2fs_super_and_bgd_loc+0xf8>  // b.none
     5d0:	ldr	x0, [sp, #56]
     5d4:	ldr	x0, [x0, #32]
     5d8:	ldrh	w0, [x0, #254]
     5dc:	b	5e4 <ext2fs_super_and_bgd_loc+0xfc>
     5e0:	mov	w0, #0x20                  	// #32
     5e4:	sdiv	w0, w1, w0
     5e8:	str	w0, [sp, #104]
     5ec:	ldr	w1, [sp, #52]
     5f0:	ldr	w0, [sp, #104]
     5f4:	udiv	w0, w1, w0
     5f8:	mov	w1, w0
     5fc:	ldr	x0, [sp, #16]
     600:	str	w1, [x0]
     604:	ldr	x0, [sp, #56]
     608:	ldr	w1, [x0, #72]
     60c:	ldr	w0, [sp, #76]
     610:	add	w0, w1, w0
     614:	ldr	w1, [sp, #108]
     618:	sub	w0, w1, w0
     61c:	sub	w0, w0, #0x2
     620:	str	w0, [sp, #108]
     624:	ldr	w0, [sp, #108]
     628:	ldp	x29, x30, [sp], #112
     62c:	ret

0000000000000630 <write_primary_superblock>:
     630:	stp	x29, x30, [sp, #-80]!
     634:	mov	x29, sp
     638:	str	x0, [sp, #24]
     63c:	str	x1, [sp, #16]
     640:	ldr	x0, [sp, #24]
     644:	ldr	x0, [x0, #8]
     648:	ldr	x0, [x0, #8]
     64c:	ldr	x0, [x0, #64]
     650:	cmp	x0, #0x0
     654:	b.eq	668 <write_primary_superblock+0x38>  // b.none
     658:	ldr	x0, [sp, #24]
     65c:	ldr	x0, [x0, #160]
     660:	cmp	x0, #0x0
     664:	b.ne	6e4 <write_primary_superblock+0xb4>  // b.any
     668:	nop
     66c:	b	674 <write_primary_superblock+0x44>
     670:	nop
     674:	ldr	x0, [sp, #24]
     678:	ldr	x0, [x0, #8]
     67c:	ldr	x0, [x0, #8]
     680:	ldr	x2, [x0, #32]
     684:	ldr	x0, [sp, #24]
     688:	ldr	x0, [x0, #8]
     68c:	mov	w1, #0x400                 	// #1024
     690:	blr	x2
     694:	ldr	x0, [sp, #24]
     698:	ldr	x0, [x0, #8]
     69c:	ldr	x3, [sp, #16]
     6a0:	mov	w2, #0xfffffc00            	// #-1024
     6a4:	mov	x1, #0x1                   	// #1
     6a8:	bl	0 <io_channel_write_blk64>
     6ac:	str	x0, [sp, #40]
     6b0:	ldr	x0, [sp, #24]
     6b4:	ldr	x0, [x0, #8]
     6b8:	ldr	x0, [x0, #8]
     6bc:	ldr	x2, [x0, #32]
     6c0:	ldr	x0, [sp, #24]
     6c4:	ldr	x3, [x0, #8]
     6c8:	ldr	x0, [sp, #24]
     6cc:	ldr	w0, [x0, #40]
     6d0:	mov	w1, w0
     6d4:	mov	x0, x3
     6d8:	blr	x2
     6dc:	ldr	x0, [sp, #40]
     6e0:	b	848 <write_primary_superblock+0x218>
     6e4:	ldr	x0, [sp, #24]
     6e8:	ldr	x0, [x0, #160]
     6ec:	str	x0, [sp, #64]
     6f0:	ldr	x0, [sp, #16]
     6f4:	str	x0, [sp, #56]
     6f8:	str	wzr, [sp, #76]
     6fc:	b	824 <write_primary_superblock+0x1f4>
     700:	ldrsw	x0, [sp, #76]
     704:	lsl	x0, x0, #1
     708:	ldr	x1, [sp, #64]
     70c:	add	x0, x1, x0
     710:	ldrh	w1, [x0]
     714:	ldrsw	x0, [sp, #76]
     718:	lsl	x0, x0, #1
     71c:	ldr	x2, [sp, #56]
     720:	add	x0, x2, x0
     724:	ldrh	w0, [x0]
     728:	cmp	w1, w0
     72c:	b.eq	814 <write_primary_superblock+0x1e4>  // b.none
     730:	ldr	w0, [sp, #76]
     734:	str	w0, [sp, #52]
     738:	ldr	w0, [sp, #76]
     73c:	add	w0, w0, #0x1
     740:	str	w0, [sp, #76]
     744:	b	784 <write_primary_superblock+0x154>
     748:	ldrsw	x0, [sp, #76]
     74c:	lsl	x0, x0, #1
     750:	ldr	x1, [sp, #64]
     754:	add	x0, x1, x0
     758:	ldrh	w1, [x0]
     75c:	ldrsw	x0, [sp, #76]
     760:	lsl	x0, x0, #1
     764:	ldr	x2, [sp, #56]
     768:	add	x0, x2, x0
     76c:	ldrh	w0, [x0]
     770:	cmp	w1, w0
     774:	b.eq	794 <write_primary_superblock+0x164>  // b.none
     778:	ldr	w0, [sp, #76]
     77c:	add	w0, w0, #0x1
     780:	str	w0, [sp, #76]
     784:	ldr	w0, [sp, #76]
     788:	cmp	w0, #0x1ff
     78c:	b.le	748 <write_primary_superblock+0x118>
     790:	b	798 <write_primary_superblock+0x168>
     794:	nop
     798:	ldr	w1, [sp, #76]
     79c:	ldr	w0, [sp, #52]
     7a0:	sub	w0, w1, w0
     7a4:	lsl	w0, w0, #1
     7a8:	str	w0, [sp, #48]
     7ac:	ldr	x0, [sp, #24]
     7b0:	ldr	x4, [x0, #8]
     7b4:	ldr	w0, [sp, #52]
     7b8:	add	w0, w0, #0x200
     7bc:	lsl	w0, w0, #1
     7c0:	sxtw	x5, w0
     7c4:	ldrsw	x0, [sp, #52]
     7c8:	lsl	x0, x0, #1
     7cc:	ldr	x1, [sp, #56]
     7d0:	add	x0, x1, x0
     7d4:	mov	x3, x0
     7d8:	ldr	w2, [sp, #48]
     7dc:	mov	x1, x5
     7e0:	mov	x0, x4
     7e4:	bl	0 <io_channel_write_byte>
     7e8:	str	x0, [sp, #40]
     7ec:	ldr	x1, [sp, #40]
     7f0:	mov	x0, #0xb750                	// #46928
     7f4:	movk	x0, #0x7f2b, lsl #16
     7f8:	cmp	x1, x0
     7fc:	b.eq	670 <write_primary_superblock+0x40>  // b.none
     800:	ldr	x0, [sp, #40]
     804:	cmp	x0, #0x0
     808:	b.eq	818 <write_primary_superblock+0x1e8>  // b.none
     80c:	ldr	x0, [sp, #40]
     810:	b	848 <write_primary_superblock+0x218>
     814:	nop
     818:	ldr	w0, [sp, #76]
     81c:	add	w0, w0, #0x1
     820:	str	w0, [sp, #76]
     824:	ldr	w0, [sp, #76]
     828:	cmp	w0, #0x1ff
     82c:	b.le	700 <write_primary_superblock+0xd0>
     830:	ldr	x0, [sp, #24]
     834:	ldr	x0, [x0, #160]
     838:	mov	x2, #0x400                 	// #1024
     83c:	ldr	x1, [sp, #16]
     840:	bl	0 <memcpy>
     844:	mov	x0, #0x0                   	// #0
     848:	ldp	x29, x30, [sp], #80
     84c:	ret

0000000000000850 <ext2fs_update_dynamic_rev>:
     850:	sub	sp, sp, #0x20
     854:	str	x0, [sp, #8]
     858:	ldr	x0, [sp, #8]
     85c:	ldr	x0, [x0, #32]
     860:	str	x0, [sp, #24]
     864:	ldr	x0, [sp, #24]
     868:	ldr	w0, [x0, #76]
     86c:	cmp	w0, #0x0
     870:	b.ne	89c <ext2fs_update_dynamic_rev+0x4c>  // b.any
     874:	ldr	x0, [sp, #24]
     878:	mov	w1, #0x1                   	// #1
     87c:	str	w1, [x0, #76]
     880:	ldr	x0, [sp, #24]
     884:	mov	w1, #0xb                   	// #11
     888:	str	w1, [x0, #84]
     88c:	ldr	x0, [sp, #24]
     890:	mov	w1, #0x80                  	// #128
     894:	strh	w1, [x0, #88]
     898:	b	8a0 <ext2fs_update_dynamic_rev+0x50>
     89c:	nop
     8a0:	add	sp, sp, #0x20
     8a4:	ret

00000000000008a8 <write_backup_super>:
     8a8:	stp	x29, x30, [sp, #-64]!
     8ac:	mov	x29, sp
     8b0:	str	x0, [sp, #40]
     8b4:	str	w1, [sp, #36]
     8b8:	str	x2, [sp, #24]
     8bc:	str	x3, [sp, #16]
     8c0:	ldr	w0, [sp, #36]
     8c4:	str	w0, [sp, #60]
     8c8:	ldr	w1, [sp, #60]
     8cc:	mov	w0, #0xffff                	// #65535
     8d0:	cmp	w1, w0
     8d4:	b.ls	8e0 <write_backup_super+0x38>  // b.plast
     8d8:	mov	w0, #0xffff                	// #65535
     8dc:	str	w0, [sp, #60]
     8e0:	ldr	w0, [sp, #60]
     8e4:	and	w1, w0, #0xffff
     8e8:	ldr	x0, [sp, #16]
     8ec:	strh	w1, [x0, #90]
     8f0:	ldr	x1, [sp, #16]
     8f4:	ldr	x0, [sp, #40]
     8f8:	bl	0 <ext2fs_superblock_csum_set>
     8fc:	str	x0, [sp, #48]
     900:	ldr	x0, [sp, #48]
     904:	cmp	x0, #0x0
     908:	b.eq	914 <write_backup_super+0x6c>  // b.none
     90c:	ldr	x0, [sp, #48]
     910:	b	92c <write_backup_super+0x84>
     914:	ldr	x0, [sp, #40]
     918:	ldr	x0, [x0, #8]
     91c:	ldr	x3, [sp, #16]
     920:	mov	w2, #0xfffffc00            	// #-1024
     924:	ldr	x1, [sp, #24]
     928:	bl	0 <io_channel_write_blk64>
     92c:	ldp	x29, x30, [sp], #64
     930:	ret

0000000000000934 <ext2fs_flush>:
     934:	stp	x29, x30, [sp, #-32]!
     938:	mov	x29, sp
     93c:	str	x0, [sp, #24]
     940:	mov	w1, #0x0                   	// #0
     944:	ldr	x0, [sp, #24]
     948:	bl	954 <ext2fs_flush2>
     94c:	ldp	x29, x30, [sp], #32
     950:	ret

0000000000000954 <ext2fs_flush2>:
     954:	stp	x29, x30, [sp, #-144]!
     958:	mov	x29, sp
     95c:	str	x0, [sp, #24]
     960:	str	w1, [sp, #20]
     964:	str	xzr, [sp, #112]
     968:	str	xzr, [sp, #104]
     96c:	ldr	x0, [sp, #24]
     970:	ldr	x1, [x0]
     974:	mov	x0, #0xb701                	// #46849
     978:	movk	x0, #0x7f2b, lsl #16
     97c:	cmp	x1, x0
     980:	b.eq	990 <ext2fs_flush2+0x3c>  // b.none
     984:	mov	x0, #0xb701                	// #46849
     988:	movk	x0, #0x7f2b, lsl #16
     98c:	b	ed8 <ext2fs_flush2+0x584>
     990:	ldr	x0, [sp, #24]
     994:	ldr	x0, [x0, #32]
     998:	ldrh	w0, [x0, #58]
     99c:	and	x0, x0, #0xffff
     9a0:	str	x0, [sp, #96]
     9a4:	ldr	x0, [sp, #24]
     9a8:	ldr	x0, [x0, #32]
     9ac:	ldr	w0, [x0, #96]
     9b0:	str	w0, [sp, #92]
     9b4:	ldr	x0, [sp, #24]
     9b8:	ldr	x0, [x0, #184]
     9bc:	cmp	x0, #0x0
     9c0:	b.eq	9d4 <ext2fs_flush2+0x80>  // b.none
     9c4:	ldr	x0, [sp, #24]
     9c8:	ldr	x0, [x0, #184]
     9cc:	mov	w1, w0
     9d0:	b	9e0 <ext2fs_flush2+0x8c>
     9d4:	mov	x0, #0x0                   	// #0
     9d8:	bl	0 <time>
     9dc:	mov	w1, w0
     9e0:	ldr	x0, [sp, #24]
     9e4:	ldr	x0, [x0, #32]
     9e8:	str	w1, [x0, #48]
     9ec:	ldr	x0, [sp, #24]
     9f0:	ldr	x0, [x0, #32]
     9f4:	strh	wzr, [x0, #90]
     9f8:	ldr	x0, [sp, #24]
     9fc:	ldr	x0, [x0, #112]
     a00:	cmp	x0, #0x0
     a04:	b.eq	a28 <ext2fs_flush2+0xd4>  // b.none
     a08:	ldr	x0, [sp, #24]
     a0c:	ldr	x1, [x0, #112]
     a10:	ldr	x0, [sp, #24]
     a14:	blr	x1
     a18:	str	x0, [sp, #128]
     a1c:	ldr	x0, [sp, #128]
     a20:	cmp	x0, #0x0
     a24:	b.ne	e8c <ext2fs_flush2+0x538>  // b.any
     a28:	ldr	x0, [sp, #24]
     a2c:	ldr	x0, [x0, #32]
     a30:	ldrh	w1, [x0, #58]
     a34:	ldr	x0, [sp, #24]
     a38:	ldr	x0, [x0, #32]
     a3c:	and	w1, w1, #0xfffffffe
     a40:	and	w1, w1, #0xffff
     a44:	strh	w1, [x0, #58]
     a48:	ldr	x0, [sp, #24]
     a4c:	ldr	x0, [x0, #32]
     a50:	bl	50 <ext2fs_clear_feature_journal_needs_recovery>
     a54:	ldr	x0, [sp, #24]
     a58:	ldr	x0, [x0, #32]
     a5c:	str	x0, [sp, #112]
     a60:	ldr	x0, [sp, #24]
     a64:	ldr	x0, [x0, #64]
     a68:	str	x0, [sp, #104]
     a6c:	ldr	x0, [sp, #24]
     a70:	ldr	x0, [x0, #32]
     a74:	bl	78 <ext2fs_has_feature_journal_dev>
     a78:	cmp	w0, #0x0
     a7c:	b.ne	d84 <ext2fs_flush2+0x430>  // b.any
     a80:	ldr	x0, [sp, #104]
     a84:	str	x0, [sp, #80]
     a88:	ldr	x0, [sp, #24]
     a8c:	ldr	x0, [x0, #32]
     a90:	bl	a0 <ext2fs_has_feature_meta_bg>
     a94:	cmp	w0, #0x0
     a98:	b.eq	ad4 <ext2fs_flush2+0x180>  // b.none
     a9c:	ldr	x0, [sp, #24]
     aa0:	ldr	x0, [x0, #32]
     aa4:	ldr	w0, [x0, #260]
     aa8:	mov	w0, w0
     aac:	str	x0, [sp, #120]
     ab0:	ldr	x0, [sp, #24]
     ab4:	ldr	x0, [x0, #56]
     ab8:	ldr	x1, [sp, #120]
     abc:	cmp	x1, x0
     ac0:	b.ls	ae0 <ext2fs_flush2+0x18c>  // b.plast
     ac4:	ldr	x0, [sp, #24]
     ac8:	ldr	x0, [x0, #56]
     acc:	str	x0, [sp, #120]
     ad0:	b	ae0 <ext2fs_flush2+0x18c>
     ad4:	ldr	x0, [sp, #24]
     ad8:	ldr	x0, [x0, #56]
     adc:	str	x0, [sp, #120]
     ae0:	ldr	x0, [sp, #24]
     ae4:	ldr	x0, [x0, #304]
     ae8:	cmp	x0, #0x0
     aec:	b.eq	b34 <ext2fs_flush2+0x1e0>  // b.none
     af0:	ldr	x0, [sp, #24]
     af4:	ldr	x0, [x0, #304]
     af8:	ldr	x0, [x0]
     afc:	cmp	x0, #0x0
     b00:	b.eq	b34 <ext2fs_flush2+0x1e0>  // b.none
     b04:	ldr	x0, [sp, #24]
     b08:	ldr	x0, [x0, #304]
     b0c:	ldr	x4, [x0]
     b10:	ldr	x0, [sp, #24]
     b14:	ldr	w0, [x0, #48]
     b18:	mov	w1, w0
     b1c:	add	x0, sp, #0x38
     b20:	mov	x3, x1
     b24:	mov	x2, #0x0                   	// #0
     b28:	mov	x1, x0
     b2c:	ldr	x0, [sp, #24]
     b30:	blr	x4
     b34:	str	wzr, [sp, #140]
     b38:	b	d28 <ext2fs_flush2+0x3d4>
     b3c:	ldr	x0, [sp, #24]
     b40:	ldr	x0, [x0, #304]
     b44:	cmp	x0, #0x0
     b48:	b.eq	b84 <ext2fs_flush2+0x230>  // b.none
     b4c:	ldr	x0, [sp, #24]
     b50:	ldr	x0, [x0, #304]
     b54:	ldr	x0, [x0, #8]
     b58:	cmp	x0, #0x0
     b5c:	b.eq	b84 <ext2fs_flush2+0x230>  // b.none
     b60:	ldr	x0, [sp, #24]
     b64:	ldr	x0, [x0, #304]
     b68:	ldr	x3, [x0, #8]
     b6c:	ldr	w1, [sp, #140]
     b70:	add	x0, sp, #0x38
     b74:	mov	x2, x1
     b78:	mov	x1, x0
     b7c:	ldr	x0, [sp, #24]
     b80:	blr	x3
     b84:	add	x2, sp, #0x20
     b88:	add	x1, sp, #0x28
     b8c:	add	x0, sp, #0x30
     b90:	mov	x5, #0x0                   	// #0
     b94:	mov	x4, x2
     b98:	mov	x3, x1
     b9c:	mov	x2, x0
     ba0:	ldr	w1, [sp, #140]
     ba4:	ldr	x0, [sp, #24]
     ba8:	bl	250 <ext2fs_super_and_bgd_loc2>
     bac:	ldr	x0, [sp, #24]
     bb0:	ldr	w0, [x0, #16]
     bb4:	and	w0, w0, #0x200
     bb8:	cmp	w0, #0x0
     bbc:	b.ne	c00 <ext2fs_flush2+0x2ac>  // b.any
     bc0:	ldr	w0, [sp, #140]
     bc4:	cmp	w0, #0x0
     bc8:	b.eq	c00 <ext2fs_flush2+0x2ac>  // b.none
     bcc:	ldr	x0, [sp, #48]
     bd0:	cmp	x0, #0x0
     bd4:	b.eq	c00 <ext2fs_flush2+0x2ac>  // b.none
     bd8:	ldr	x0, [sp, #48]
     bdc:	ldr	x3, [sp, #112]
     be0:	mov	x2, x0
     be4:	ldr	w1, [sp, #140]
     be8:	ldr	x0, [sp, #24]
     bec:	bl	8a8 <write_backup_super>
     bf0:	str	x0, [sp, #128]
     bf4:	ldr	x0, [sp, #128]
     bf8:	cmp	x0, #0x0
     bfc:	b.ne	e94 <ext2fs_flush2+0x540>  // b.any
     c00:	ldr	x0, [sp, #24]
     c04:	ldr	w0, [x0, #16]
     c08:	and	w0, w0, #0x800
     c0c:	cmp	w0, #0x0
     c10:	b.ne	d18 <ext2fs_flush2+0x3c4>  // b.any
     c14:	ldr	x0, [sp, #40]
     c18:	cmp	x0, #0x0
     c1c:	b.eq	c68 <ext2fs_flush2+0x314>  // b.none
     c20:	ldr	x0, [sp, #24]
     c24:	ldr	w0, [x0, #16]
     c28:	and	w0, w0, #0x200
     c2c:	cmp	w0, #0x0
     c30:	b.eq	c40 <ext2fs_flush2+0x2ec>  // b.none
     c34:	ldr	w0, [sp, #140]
     c38:	cmp	w0, #0x0
     c3c:	b.ne	c68 <ext2fs_flush2+0x314>  // b.any
     c40:	ldr	x0, [sp, #24]
     c44:	ldr	x0, [x0, #8]
     c48:	ldr	x1, [sp, #40]
     c4c:	ldr	x2, [sp, #120]
     c50:	ldr	x3, [sp, #80]
     c54:	bl	0 <io_channel_write_blk64>
     c58:	str	x0, [sp, #128]
     c5c:	ldr	x0, [sp, #128]
     c60:	cmp	x0, #0x0
     c64:	b.ne	e9c <ext2fs_flush2+0x548>  // b.any
     c68:	ldr	x0, [sp, #32]
     c6c:	cmp	x0, #0x0
     c70:	b.eq	d1c <ext2fs_flush2+0x3c8>  // b.none
     c74:	ldr	x0, [sp, #24]
     c78:	ldr	x0, [x0, #32]
     c7c:	ldr	w0, [x0, #24]
     c80:	mov	w1, #0x400                 	// #1024
     c84:	lsl	w1, w1, w0
     c88:	ldr	x0, [sp, #24]
     c8c:	ldr	x0, [x0, #32]
     c90:	ldr	w0, [x0, #96]
     c94:	and	w0, w0, #0x80
     c98:	cmp	w0, #0x0
     c9c:	b.eq	cb0 <ext2fs_flush2+0x35c>  // b.none
     ca0:	ldr	x0, [sp, #24]
     ca4:	ldr	x0, [x0, #32]
     ca8:	ldrh	w0, [x0, #254]
     cac:	b	cb4 <ext2fs_flush2+0x360>
     cb0:	mov	w0, #0x20                  	// #32
     cb4:	sdiv	w0, w1, w0
     cb8:	mov	w1, w0
     cbc:	ldr	w0, [sp, #140]
     cc0:	udiv	w0, w0, w1
     cc4:	str	w0, [sp, #76]
     cc8:	ldr	x0, [sp, #24]
     ccc:	ldr	x4, [x0, #8]
     cd0:	ldr	x5, [sp, #32]
     cd4:	ldr	x0, [sp, #24]
     cd8:	ldr	w1, [x0, #40]
     cdc:	ldr	w0, [sp, #76]
     ce0:	mul	w0, w1, w0
     ce4:	mov	w0, w0
     ce8:	ldr	x1, [sp, #80]
     cec:	add	x0, x1, x0
     cf0:	mov	x3, x0
     cf4:	mov	w2, #0x1                   	// #1
     cf8:	mov	x1, x5
     cfc:	mov	x0, x4
     d00:	bl	0 <io_channel_write_blk64>
     d04:	str	x0, [sp, #128]
     d08:	ldr	x0, [sp, #128]
     d0c:	cmp	x0, #0x0
     d10:	b.ne	ea4 <ext2fs_flush2+0x550>  // b.any
     d14:	b	d1c <ext2fs_flush2+0x3c8>
     d18:	nop
     d1c:	ldr	w0, [sp, #140]
     d20:	add	w0, w0, #0x1
     d24:	str	w0, [sp, #140]
     d28:	ldr	x0, [sp, #24]
     d2c:	ldr	w0, [x0, #48]
     d30:	ldr	w1, [sp, #140]
     d34:	cmp	w1, w0
     d38:	b.cc	b3c <ext2fs_flush2+0x1e8>  // b.lo, b.ul, b.last
     d3c:	ldr	x0, [sp, #24]
     d40:	ldr	x0, [x0, #304]
     d44:	cmp	x0, #0x0
     d48:	b.eq	d8c <ext2fs_flush2+0x438>  // b.none
     d4c:	ldr	x0, [sp, #24]
     d50:	ldr	x0, [x0, #304]
     d54:	ldr	x0, [x0, #16]
     d58:	cmp	x0, #0x0
     d5c:	b.eq	d8c <ext2fs_flush2+0x438>  // b.none
     d60:	ldr	x0, [sp, #24]
     d64:	ldr	x0, [x0, #304]
     d68:	ldr	x3, [x0, #16]
     d6c:	add	x0, sp, #0x38
     d70:	mov	x2, #0x0                   	// #0
     d74:	mov	x1, x0
     d78:	ldr	x0, [sp, #24]
     d7c:	blr	x3
     d80:	b	d90 <ext2fs_flush2+0x43c>
     d84:	nop
     d88:	b	d90 <ext2fs_flush2+0x43c>
     d8c:	nop
     d90:	ldr	x0, [sp, #24]
     d94:	ldr	x0, [x0, #32]
     d98:	strh	wzr, [x0, #90]
     d9c:	ldr	x0, [sp, #24]
     da0:	ldr	x0, [x0, #32]
     da4:	ldr	x1, [sp, #96]
     da8:	and	w1, w1, #0xffff
     dac:	strh	w1, [x0, #58]
     db0:	ldr	x0, [sp, #24]
     db4:	ldr	x0, [x0, #32]
     db8:	ldr	w1, [sp, #92]
     dbc:	str	w1, [x0, #96]
     dc0:	ldr	x1, [sp, #112]
     dc4:	ldr	x0, [sp, #24]
     dc8:	bl	0 <ext2fs_superblock_csum_set>
     dcc:	str	x0, [sp, #128]
     dd0:	ldr	x0, [sp, #128]
     dd4:	cmp	x0, #0x0
     dd8:	b.eq	de4 <ext2fs_flush2+0x490>  // b.none
     ddc:	ldr	x0, [sp, #128]
     de0:	b	ed8 <ext2fs_flush2+0x584>
     de4:	ldr	w0, [sp, #20]
     de8:	and	w0, w0, #0x1
     dec:	cmp	w0, #0x0
     df0:	b.ne	e20 <ext2fs_flush2+0x4cc>  // b.any
     df4:	ldr	x0, [sp, #24]
     df8:	ldr	x0, [x0, #8]
     dfc:	ldr	x0, [x0, #8]
     e00:	ldr	x1, [x0, #56]
     e04:	ldr	x0, [sp, #24]
     e08:	ldr	x0, [x0, #8]
     e0c:	blr	x1
     e10:	str	x0, [sp, #128]
     e14:	ldr	x0, [sp, #128]
     e18:	cmp	x0, #0x0
     e1c:	b.ne	eac <ext2fs_flush2+0x558>  // b.any
     e20:	ldr	x1, [sp, #112]
     e24:	ldr	x0, [sp, #24]
     e28:	bl	630 <write_primary_superblock>
     e2c:	str	x0, [sp, #128]
     e30:	ldr	x0, [sp, #128]
     e34:	cmp	x0, #0x0
     e38:	b.ne	eb4 <ext2fs_flush2+0x560>  // b.any
     e3c:	ldr	x0, [sp, #24]
     e40:	ldr	w0, [x0, #16]
     e44:	and	w1, w0, #0xfffffffb
     e48:	ldr	x0, [sp, #24]
     e4c:	str	w1, [x0, #16]
     e50:	ldr	w0, [sp, #20]
     e54:	and	w0, w0, #0x1
     e58:	cmp	w0, #0x0
     e5c:	b.ne	ebc <ext2fs_flush2+0x568>  // b.any
     e60:	ldr	x0, [sp, #24]
     e64:	ldr	x0, [x0, #8]
     e68:	ldr	x0, [x0, #8]
     e6c:	ldr	x1, [x0, #56]
     e70:	ldr	x0, [sp, #24]
     e74:	ldr	x0, [x0, #8]
     e78:	blr	x1
     e7c:	str	x0, [sp, #128]
     e80:	ldr	x0, [sp, #128]
     e84:	cmp	x0, #0x0
     e88:	b	ebc <ext2fs_flush2+0x568>
     e8c:	nop
     e90:	b	ec0 <ext2fs_flush2+0x56c>
     e94:	nop
     e98:	b	ec0 <ext2fs_flush2+0x56c>
     e9c:	nop
     ea0:	b	ec0 <ext2fs_flush2+0x56c>
     ea4:	nop
     ea8:	b	ec0 <ext2fs_flush2+0x56c>
     eac:	nop
     eb0:	b	ec0 <ext2fs_flush2+0x56c>
     eb4:	nop
     eb8:	b	ec0 <ext2fs_flush2+0x56c>
     ebc:	nop
     ec0:	ldr	x0, [sp, #24]
     ec4:	ldr	x0, [x0, #32]
     ec8:	ldr	x1, [sp, #96]
     ecc:	and	w1, w1, #0xffff
     ed0:	strh	w1, [x0, #58]
     ed4:	ldr	x0, [sp, #128]
     ed8:	ldp	x29, x30, [sp], #144
     edc:	ret

0000000000000ee0 <ext2fs_close_free>:
     ee0:	stp	x29, x30, [sp, #-48]!
     ee4:	mov	x29, sp
     ee8:	str	x0, [sp, #24]
     eec:	ldr	x0, [sp, #24]
     ef0:	ldr	x0, [x0]
     ef4:	str	x0, [sp, #40]
     ef8:	mov	w1, #0x0                   	// #0
     efc:	ldr	x0, [sp, #40]
     f00:	bl	f50 <ext2fs_close2>
     f04:	str	x0, [sp, #32]
     f08:	ldr	x0, [sp, #32]
     f0c:	cmp	x0, #0x0
     f10:	b.eq	f1c <ext2fs_close_free+0x3c>  // b.none
     f14:	ldr	x0, [sp, #40]
     f18:	bl	0 <ext2fs_free>
     f1c:	ldr	x0, [sp, #24]
     f20:	str	xzr, [x0]
     f24:	ldr	x0, [sp, #32]
     f28:	ldp	x29, x30, [sp], #48
     f2c:	ret

0000000000000f30 <ext2fs_close>:
     f30:	stp	x29, x30, [sp, #-32]!
     f34:	mov	x29, sp
     f38:	str	x0, [sp, #24]
     f3c:	mov	w1, #0x0                   	// #0
     f40:	ldr	x0, [sp, #24]
     f44:	bl	f50 <ext2fs_close2>
     f48:	ldp	x29, x30, [sp], #32
     f4c:	ret

0000000000000f50 <ext2fs_close2>:
     f50:	stp	x29, x30, [sp, #-64]!
     f54:	mov	x29, sp
     f58:	str	x0, [sp, #24]
     f5c:	str	w1, [sp, #20]
     f60:	str	xzr, [sp, #40]
     f64:	ldr	x0, [sp, #24]
     f68:	ldr	x1, [x0]
     f6c:	mov	x0, #0xb701                	// #46849
     f70:	movk	x0, #0x7f2b, lsl #16
     f74:	cmp	x1, x0
     f78:	b.eq	f88 <ext2fs_close2+0x38>  // b.none
     f7c:	mov	x0, #0xb701                	// #46849
     f80:	movk	x0, #0x7f2b, lsl #16
     f84:	b	114c <ext2fs_close2+0x1fc>
     f88:	ldr	x0, [sp, #24]
     f8c:	ldr	x0, [x0, #112]
     f90:	cmp	x0, #0x0
     f94:	b.eq	fc0 <ext2fs_close2+0x70>  // b.none
     f98:	ldr	x0, [sp, #24]
     f9c:	ldr	x1, [x0, #112]
     fa0:	ldr	x0, [sp, #24]
     fa4:	blr	x1
     fa8:	str	x0, [sp, #56]
     fac:	ldr	x0, [sp, #56]
     fb0:	cmp	x0, #0x0
     fb4:	b.eq	fc0 <ext2fs_close2+0x70>  // b.none
     fb8:	ldr	x0, [sp, #56]
     fbc:	b	114c <ext2fs_close2+0x1fc>
     fc0:	ldr	x0, [sp, #24]
     fc4:	ldr	x0, [x0, #32]
     fc8:	ldr	x0, [x0, #376]
     fcc:	cmp	x0, #0x0
     fd0:	b.eq	100c <ext2fs_close2+0xbc>  // b.none
     fd4:	ldr	x0, [sp, #24]
     fd8:	ldr	x0, [x0, #8]
     fdc:	ldr	x0, [x0, #8]
     fe0:	ldr	x0, [x0, #80]
     fe4:	cmp	x0, #0x0
     fe8:	b.eq	100c <ext2fs_close2+0xbc>  // b.none
     fec:	ldr	x0, [sp, #24]
     ff0:	ldr	x0, [x0, #8]
     ff4:	ldr	x0, [x0, #8]
     ff8:	ldr	x2, [x0, #80]
     ffc:	ldr	x0, [sp, #24]
    1000:	ldr	x0, [x0, #8]
    1004:	add	x1, sp, #0x28
    1008:	blr	x2
    100c:	ldr	x0, [sp, #40]
    1010:	cmp	x0, #0x0
    1014:	b.eq	10e8 <ext2fs_close2+0x198>  // b.none
    1018:	ldr	x0, [sp, #40]
    101c:	ldr	x0, [x0, #16]
    1020:	cmp	x0, #0x0
    1024:	b.eq	10e8 <ext2fs_close2+0x198>  // b.none
    1028:	ldr	x0, [sp, #24]
    102c:	ldr	w0, [x0, #16]
    1030:	and	w0, w0, #0x1
    1034:	cmp	w0, #0x0
    1038:	b.eq	10e8 <ext2fs_close2+0x198>  // b.none
    103c:	ldr	x0, [sp, #24]
    1040:	ldr	x0, [x0, #32]
    1044:	ldr	x2, [x0, #376]
    1048:	ldr	x0, [sp, #40]
    104c:	ldr	x0, [x0, #16]
    1050:	lsr	x1, x0, #10
    1054:	ldr	x0, [sp, #24]
    1058:	ldr	x0, [x0, #32]
    105c:	add	x1, x2, x1
    1060:	str	x1, [x0, #376]
    1064:	ldr	x0, [sp, #24]
    1068:	ldr	x0, [x0, #56]
    106c:	add	w0, w0, #0x1
    1070:	str	w0, [sp, #52]
    1074:	ldr	x0, [sp, #24]
    1078:	ldr	w0, [x0, #16]
    107c:	and	w0, w0, #0x800
    1080:	cmp	w0, #0x0
    1084:	b.ne	10bc <ext2fs_close2+0x16c>  // b.any
    1088:	ldr	x0, [sp, #24]
    108c:	ldr	x0, [x0, #32]
    1090:	ldr	x2, [x0, #376]
    1094:	ldr	w1, [sp, #52]
    1098:	ldr	x0, [sp, #24]
    109c:	ldr	w0, [x0, #40]
    10a0:	lsr	w0, w0, #10
    10a4:	udiv	w0, w1, w0
    10a8:	mov	w1, w0
    10ac:	ldr	x0, [sp, #24]
    10b0:	ldr	x0, [x0, #32]
    10b4:	add	x1, x2, x1
    10b8:	str	x1, [x0, #376]
    10bc:	ldr	x0, [sp, #24]
    10c0:	ldr	w0, [x0, #16]
    10c4:	and	w0, w0, #0x4
    10c8:	cmp	w0, #0x0
    10cc:	b.ne	10e8 <ext2fs_close2+0x198>  // b.any
    10d0:	ldr	x0, [sp, #24]
    10d4:	ldr	w1, [x0, #16]
    10d8:	mov	w0, #0x804                 	// #2052
    10dc:	orr	w1, w1, w0
    10e0:	ldr	x0, [sp, #24]
    10e4:	str	w1, [x0, #16]
    10e8:	ldr	x0, [sp, #24]
    10ec:	ldr	w0, [x0, #16]
    10f0:	and	w0, w0, #0x4
    10f4:	cmp	w0, #0x0
    10f8:	b.eq	1120 <ext2fs_close2+0x1d0>  // b.none
    10fc:	ldr	w1, [sp, #20]
    1100:	ldr	x0, [sp, #24]
    1104:	bl	954 <ext2fs_flush2>
    1108:	str	x0, [sp, #56]
    110c:	ldr	x0, [sp, #56]
    1110:	cmp	x0, #0x0
    1114:	b.eq	1120 <ext2fs_close2+0x1d0>  // b.none
    1118:	ldr	x0, [sp, #56]
    111c:	b	114c <ext2fs_close2+0x1fc>
    1120:	ldr	x0, [sp, #24]
    1124:	bl	0 <ext2fs_mmp_stop>
    1128:	str	x0, [sp, #56]
    112c:	ldr	x0, [sp, #56]
    1130:	cmp	x0, #0x0
    1134:	b.eq	1140 <ext2fs_close2+0x1f0>  // b.none
    1138:	ldr	x0, [sp, #56]
    113c:	b	114c <ext2fs_close2+0x1fc>
    1140:	ldr	x0, [sp, #24]
    1144:	bl	0 <ext2fs_free>
    1148:	mov	x0, #0x0                   	// #0
    114c:	ldp	x29, x30, [sp], #64
    1150:	ret

crc16.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_crc16>:
   0:	sub	sp, sp, #0x20
   4:	str	w0, [sp, #12]
   8:	str	x1, [sp]
   c:	str	w2, [sp, #8]
  10:	ldr	x0, [sp]
  14:	str	x0, [sp, #24]
  18:	b	64 <ext2fs_crc16+0x64>
  1c:	ldr	w0, [sp, #12]
  20:	lsr	w0, w0, #8
  24:	and	w1, w0, #0xff
  28:	ldr	x0, [sp, #24]
  2c:	add	x2, x0, #0x1
  30:	str	x2, [sp, #24]
  34:	ldrb	w0, [x0]
  38:	mov	w2, w0
  3c:	ldr	w0, [sp, #12]
  40:	eor	w0, w2, w0
  44:	and	w2, w0, #0xff
  48:	adrp	x0, 0 <ext2fs_crc16>
  4c:	add	x0, x0, #0x0
  50:	mov	w2, w2
  54:	ldrh	w0, [x0, x2, lsl #1]
  58:	eor	w0, w1, w0
  5c:	and	w0, w0, #0xffff
  60:	str	w0, [sp, #12]
  64:	ldr	w0, [sp, #8]
  68:	sub	w1, w0, #0x1
  6c:	str	w1, [sp, #8]
  70:	cmp	w0, #0x0
  74:	b.ne	1c <ext2fs_crc16+0x1c>  // b.any
  78:	ldr	w0, [sp, #12]
  7c:	add	sp, sp, #0x20
  80:	ret

crc32c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <crc32_body>:
   0:	sub	sp, sp, #0x80
   4:	str	w0, [sp, #28]
   8:	str	x1, [sp, #16]
   c:	str	x2, [sp, #8]
  10:	str	x3, [sp]
  14:	ldr	x0, [sp]
  18:	str	x0, [sp, #104]
  1c:	ldr	x0, [sp]
  20:	add	x0, x0, #0x400
  24:	str	x0, [sp, #96]
  28:	ldr	x0, [sp]
  2c:	add	x0, x0, #0x800
  30:	str	x0, [sp, #88]
  34:	ldr	x0, [sp]
  38:	add	x0, x0, #0xc00
  3c:	str	x0, [sp, #80]
  40:	ldr	x0, [sp]
  44:	add	x0, x0, #0x1, lsl #12
  48:	str	x0, [sp, #72]
  4c:	ldr	x1, [sp]
  50:	mov	x0, #0x1400                	// #5120
  54:	add	x0, x1, x0
  58:	str	x0, [sp, #64]
  5c:	ldr	x1, [sp]
  60:	mov	x0, #0x1800                	// #6144
  64:	add	x0, x1, x0
  68:	str	x0, [sp, #56]
  6c:	ldr	x1, [sp]
  70:	mov	x0, #0x1c00                	// #7168
  74:	add	x0, x1, x0
  78:	str	x0, [sp, #48]
  7c:	ldr	x0, [sp, #16]
  80:	and	x0, x0, #0x3
  84:	cmp	x0, #0x0
  88:	cset	w0, ne  // ne = any
  8c:	and	w0, w0, #0xff
  90:	and	x0, x0, #0xff
  94:	cmp	x0, #0x0
  98:	b.eq	124 <crc32_body+0x124>  // b.none
  9c:	ldr	x0, [sp, #8]
  a0:	cmp	x0, #0x0
  a4:	cset	w0, ne  // ne = any
  a8:	and	w0, w0, #0xff
  ac:	and	x0, x0, #0xff
  b0:	cmp	x0, #0x0
  b4:	b.eq	124 <crc32_body+0x124>  // b.none
  b8:	ldr	x0, [sp, #16]
  bc:	add	x1, x0, #0x1
  c0:	str	x1, [sp, #16]
  c4:	ldrb	w0, [x0]
  c8:	mov	w1, w0
  cc:	ldr	w0, [sp, #28]
  d0:	eor	w0, w1, w0
  d4:	mov	w0, w0
  d8:	and	x0, x0, #0xff
  dc:	lsl	x0, x0, #2
  e0:	ldr	x1, [sp, #104]
  e4:	add	x0, x1, x0
  e8:	ldr	w1, [x0]
  ec:	ldr	w0, [sp, #28]
  f0:	lsr	w0, w0, #8
  f4:	eor	w0, w1, w0
  f8:	str	w0, [sp, #28]
  fc:	ldr	x0, [sp, #8]
 100:	sub	x0, x0, #0x1
 104:	str	x0, [sp, #8]
 108:	ldr	x0, [sp, #8]
 10c:	cmp	x0, #0x0
 110:	b.eq	124 <crc32_body+0x124>  // b.none
 114:	ldr	x0, [sp, #16]
 118:	and	x0, x0, #0x3
 11c:	cmp	x0, #0x0
 120:	b.ne	b8 <crc32_body+0xb8>  // b.any
 124:	ldr	x0, [sp, #8]
 128:	and	x0, x0, #0x7
 12c:	str	x0, [sp, #40]
 130:	ldr	x0, [sp, #8]
 134:	lsr	x0, x0, #3
 138:	str	x0, [sp, #8]
 13c:	ldr	x0, [sp, #16]
 140:	str	x0, [sp, #120]
 144:	ldr	x0, [sp, #120]
 148:	sub	x0, x0, #0x4
 14c:	str	x0, [sp, #120]
 150:	b	2b0 <crc32_body+0x2b0>
 154:	ldr	x0, [sp, #120]
 158:	add	x0, x0, #0x4
 15c:	str	x0, [sp, #120]
 160:	ldr	x0, [sp, #120]
 164:	ldr	w0, [x0]
 168:	ldr	w1, [sp, #28]
 16c:	eor	w0, w1, w0
 170:	str	w0, [sp, #36]
 174:	ldr	w0, [sp, #36]
 178:	and	x0, x0, #0xff
 17c:	lsl	x0, x0, #2
 180:	ldr	x1, [sp, #48]
 184:	add	x0, x1, x0
 188:	ldr	w1, [x0]
 18c:	ldr	w0, [sp, #36]
 190:	lsr	w0, w0, #8
 194:	mov	w0, w0
 198:	and	x0, x0, #0xff
 19c:	lsl	x0, x0, #2
 1a0:	ldr	x2, [sp, #56]
 1a4:	add	x0, x2, x0
 1a8:	ldr	w0, [x0]
 1ac:	eor	w1, w1, w0
 1b0:	ldr	w0, [sp, #36]
 1b4:	lsr	w0, w0, #16
 1b8:	mov	w0, w0
 1bc:	and	x0, x0, #0xff
 1c0:	lsl	x0, x0, #2
 1c4:	ldr	x2, [sp, #64]
 1c8:	add	x0, x2, x0
 1cc:	ldr	w0, [x0]
 1d0:	eor	w1, w1, w0
 1d4:	ldr	w0, [sp, #36]
 1d8:	lsr	w0, w0, #24
 1dc:	mov	w0, w0
 1e0:	and	x0, x0, #0xff
 1e4:	lsl	x0, x0, #2
 1e8:	ldr	x2, [sp, #72]
 1ec:	add	x0, x2, x0
 1f0:	ldr	w0, [x0]
 1f4:	eor	w0, w1, w0
 1f8:	str	w0, [sp, #28]
 1fc:	ldr	x0, [sp, #120]
 200:	add	x0, x0, #0x4
 204:	str	x0, [sp, #120]
 208:	ldr	x0, [sp, #120]
 20c:	ldr	w0, [x0]
 210:	str	w0, [sp, #36]
 214:	ldr	w0, [sp, #36]
 218:	and	x0, x0, #0xff
 21c:	lsl	x0, x0, #2
 220:	ldr	x1, [sp, #80]
 224:	add	x0, x1, x0
 228:	ldr	w1, [x0]
 22c:	ldr	w0, [sp, #36]
 230:	lsr	w0, w0, #8
 234:	mov	w0, w0
 238:	and	x0, x0, #0xff
 23c:	lsl	x0, x0, #2
 240:	ldr	x2, [sp, #88]
 244:	add	x0, x2, x0
 248:	ldr	w0, [x0]
 24c:	eor	w1, w1, w0
 250:	ldr	w0, [sp, #36]
 254:	lsr	w0, w0, #16
 258:	mov	w0, w0
 25c:	and	x0, x0, #0xff
 260:	lsl	x0, x0, #2
 264:	ldr	x2, [sp, #96]
 268:	add	x0, x2, x0
 26c:	ldr	w0, [x0]
 270:	eor	w1, w1, w0
 274:	ldr	w0, [sp, #36]
 278:	lsr	w0, w0, #24
 27c:	mov	w0, w0
 280:	and	x0, x0, #0xff
 284:	lsl	x0, x0, #2
 288:	ldr	x2, [sp, #104]
 28c:	add	x0, x2, x0
 290:	ldr	w0, [x0]
 294:	eor	w0, w1, w0
 298:	ldr	w1, [sp, #28]
 29c:	eor	w0, w1, w0
 2a0:	str	w0, [sp, #28]
 2a4:	ldr	x0, [sp, #8]
 2a8:	sub	x0, x0, #0x1
 2ac:	str	x0, [sp, #8]
 2b0:	ldr	x0, [sp, #8]
 2b4:	cmp	x0, #0x0
 2b8:	b.ne	154 <crc32_body+0x154>  // b.any
 2bc:	ldr	x0, [sp, #40]
 2c0:	str	x0, [sp, #8]
 2c4:	ldr	x0, [sp, #8]
 2c8:	cmp	x0, #0x0
 2cc:	b.eq	340 <crc32_body+0x340>  // b.none
 2d0:	ldr	x0, [sp, #120]
 2d4:	add	x0, x0, #0x4
 2d8:	sub	x0, x0, #0x1
 2dc:	str	x0, [sp, #112]
 2e0:	ldr	x0, [sp, #112]
 2e4:	add	x0, x0, #0x1
 2e8:	str	x0, [sp, #112]
 2ec:	ldr	x0, [sp, #112]
 2f0:	ldrb	w0, [x0]
 2f4:	mov	w1, w0
 2f8:	ldr	w0, [sp, #28]
 2fc:	eor	w0, w1, w0
 300:	mov	w0, w0
 304:	and	x0, x0, #0xff
 308:	lsl	x0, x0, #2
 30c:	ldr	x1, [sp, #104]
 310:	add	x0, x1, x0
 314:	ldr	w1, [x0]
 318:	ldr	w0, [sp, #28]
 31c:	lsr	w0, w0, #8
 320:	eor	w0, w1, w0
 324:	str	w0, [sp, #28]
 328:	ldr	x0, [sp, #8]
 32c:	sub	x0, x0, #0x1
 330:	str	x0, [sp, #8]
 334:	ldr	x0, [sp, #8]
 338:	cmp	x0, #0x0
 33c:	b.ne	2e0 <crc32_body+0x2e0>  // b.any
 340:	ldr	w0, [sp, #28]
 344:	add	sp, sp, #0x80
 348:	ret

000000000000034c <crc32_le_generic>:
 34c:	stp	x29, x30, [sp, #-48]!
 350:	mov	x29, sp
 354:	str	w0, [sp, #44]
 358:	str	x1, [sp, #32]
 35c:	str	x2, [sp, #24]
 360:	str	x3, [sp, #16]
 364:	str	w4, [sp, #40]
 368:	ldr	x3, [sp, #16]
 36c:	ldr	x2, [sp, #24]
 370:	ldr	x1, [sp, #32]
 374:	ldr	w0, [sp, #44]
 378:	bl	0 <crc32_body>
 37c:	str	w0, [sp, #44]
 380:	ldr	w0, [sp, #44]
 384:	ldp	x29, x30, [sp], #48
 388:	ret

000000000000038c <ext2fs_crc32c_le>:
 38c:	stp	x29, x30, [sp, #-48]!
 390:	mov	x29, sp
 394:	str	w0, [sp, #44]
 398:	str	x1, [sp, #32]
 39c:	str	x2, [sp, #24]
 3a0:	mov	w4, #0x3b78                	// #15224
 3a4:	movk	w4, #0x82f6, lsl #16
 3a8:	adrp	x0, 0 <crc32_body>
 3ac:	add	x3, x0, #0x0
 3b0:	ldr	x2, [sp, #24]
 3b4:	ldr	x1, [sp, #32]
 3b8:	ldr	w0, [sp, #44]
 3bc:	bl	34c <crc32_le_generic>
 3c0:	ldp	x29, x30, [sp], #48
 3c4:	ret

00000000000003c8 <crc32_be_generic>:
 3c8:	stp	x29, x30, [sp, #-48]!
 3cc:	mov	x29, sp
 3d0:	str	w0, [sp, #44]
 3d4:	str	x1, [sp, #32]
 3d8:	str	x2, [sp, #24]
 3dc:	str	x3, [sp, #16]
 3e0:	str	w4, [sp, #40]
 3e4:	ldr	w0, [sp, #44]
 3e8:	bl	0 <ext2fs_swab32>
 3ec:	str	w0, [sp, #44]
 3f0:	ldr	x3, [sp, #16]
 3f4:	ldr	x2, [sp, #24]
 3f8:	ldr	x1, [sp, #32]
 3fc:	ldr	w0, [sp, #44]
 400:	bl	0 <crc32_body>
 404:	str	w0, [sp, #44]
 408:	ldr	w0, [sp, #44]
 40c:	bl	0 <ext2fs_swab32>
 410:	str	w0, [sp, #44]
 414:	ldr	w0, [sp, #44]
 418:	ldp	x29, x30, [sp], #48
 41c:	ret

0000000000000420 <ext2fs_crc32_be>:
 420:	stp	x29, x30, [sp, #-48]!
 424:	mov	x29, sp
 428:	str	w0, [sp, #44]
 42c:	str	x1, [sp, #32]
 430:	str	x2, [sp, #24]
 434:	mov	w4, #0x1db7                	// #7607
 438:	movk	w4, #0x4c1, lsl #16
 43c:	adrp	x0, 0 <crc32_body>
 440:	add	x3, x0, #0x0
 444:	ldr	x2, [sp, #24]
 448:	ldr	x1, [sp, #32]
 44c:	ldr	w0, [sp, #44]
 450:	bl	3c8 <crc32_be_generic>
 454:	ldp	x29, x30, [sp], #48
 458:	ret

csum.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_metadata_csum>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x400
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_ea_inode>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #96]
      60:	and	w0, w0, #0x400
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_has_feature_csum_seed>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #96]
      88:	and	w0, w0, #0x2000
      8c:	cmp	w0, #0x0
      90:	cset	w0, ne  // ne = any
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_has_group_desc_csum>:
      a0:	stp	x29, x30, [sp, #-32]!
      a4:	mov	x29, sp
      a8:	str	x0, [sp, #24]
      ac:	ldr	x0, [sp, #24]
      b0:	ldr	x0, [x0, #32]
      b4:	bl	28 <ext2fs_has_feature_metadata_csum>
      b8:	cmp	w0, #0x0
      bc:	b.ne	d4 <ext2fs_has_group_desc_csum+0x34>  // b.any
      c0:	ldr	x0, [sp, #24]
      c4:	ldr	x0, [x0, #32]
      c8:	bl	0 <ext2fs_has_feature_gdt_csum>
      cc:	cmp	w0, #0x0
      d0:	b.eq	dc <ext2fs_has_group_desc_csum+0x3c>  // b.none
      d4:	mov	w0, #0x1                   	// #1
      d8:	b	e0 <ext2fs_has_group_desc_csum+0x40>
      dc:	mov	w0, #0x0                   	// #0
      e0:	ldp	x29, x30, [sp], #32
      e4:	ret

00000000000000e8 <ext2fs_init_csum_seed>:
      e8:	stp	x29, x30, [sp, #-32]!
      ec:	mov	x29, sp
      f0:	str	x0, [sp, #24]
      f4:	ldr	x0, [sp, #24]
      f8:	ldr	x0, [x0, #32]
      fc:	bl	78 <ext2fs_has_feature_csum_seed>
     100:	cmp	w0, #0x0
     104:	b.eq	120 <ext2fs_init_csum_seed+0x38>  // b.none
     108:	ldr	x0, [sp, #24]
     10c:	ldr	x0, [x0, #32]
     110:	ldr	w1, [x0, #624]
     114:	ldr	x0, [sp, #24]
     118:	str	w1, [x0, #312]
     11c:	b	170 <ext2fs_init_csum_seed+0x88>
     120:	ldr	x0, [sp, #24]
     124:	ldr	x0, [x0, #32]
     128:	bl	28 <ext2fs_has_feature_metadata_csum>
     12c:	cmp	w0, #0x0
     130:	b.ne	148 <ext2fs_init_csum_seed+0x60>  // b.any
     134:	ldr	x0, [sp, #24]
     138:	ldr	x0, [x0, #32]
     13c:	bl	50 <ext2fs_has_feature_ea_inode>
     140:	cmp	w0, #0x0
     144:	b.eq	170 <ext2fs_init_csum_seed+0x88>  // b.none
     148:	ldr	x0, [sp, #24]
     14c:	ldr	x0, [x0, #32]
     150:	add	x0, x0, #0x68
     154:	mov	x2, #0x10                  	// #16
     158:	mov	x1, x0
     15c:	mov	w0, #0xffffffff            	// #-1
     160:	bl	0 <ext2fs_crc32c_le>
     164:	mov	w1, w0
     168:	ldr	x0, [sp, #24]
     16c:	str	w1, [x0, #312]
     170:	nop
     174:	ldp	x29, x30, [sp], #32
     178:	ret

000000000000017c <ext2fs_mmp_csum>:
     17c:	stp	x29, x30, [sp, #-48]!
     180:	mov	x29, sp
     184:	str	x0, [sp, #24]
     188:	str	x1, [sp, #16]
     18c:	mov	w0, #0x3fc                 	// #1020
     190:	str	w0, [sp, #44]
     194:	ldr	x0, [sp, #24]
     198:	ldr	w0, [x0, #312]
     19c:	ldrsw	x1, [sp, #44]
     1a0:	mov	x2, x1
     1a4:	ldr	x1, [sp, #16]
     1a8:	bl	0 <ext2fs_crc32c_le>
     1ac:	ldp	x29, x30, [sp], #48
     1b0:	ret

00000000000001b4 <ext2fs_mmp_csum_verify>:
     1b4:	stp	x29, x30, [sp, #-48]!
     1b8:	mov	x29, sp
     1bc:	str	x0, [sp, #24]
     1c0:	str	x1, [sp, #16]
     1c4:	ldr	x0, [sp, #24]
     1c8:	ldr	x0, [x0, #32]
     1cc:	bl	28 <ext2fs_has_feature_metadata_csum>
     1d0:	cmp	w0, #0x0
     1d4:	b.ne	1e0 <ext2fs_mmp_csum_verify+0x2c>  // b.any
     1d8:	mov	w0, #0x1                   	// #1
     1dc:	b	208 <ext2fs_mmp_csum_verify+0x54>
     1e0:	ldr	x1, [sp, #16]
     1e4:	ldr	x0, [sp, #24]
     1e8:	bl	17c <ext2fs_mmp_csum>
     1ec:	str	w0, [sp, #44]
     1f0:	ldr	x0, [sp, #16]
     1f4:	ldr	w0, [x0, #1020]
     1f8:	ldr	w1, [sp, #44]
     1fc:	cmp	w1, w0
     200:	cset	w0, eq  // eq = none
     204:	and	w0, w0, #0xff
     208:	ldp	x29, x30, [sp], #48
     20c:	ret

0000000000000210 <ext2fs_mmp_csum_set>:
     210:	stp	x29, x30, [sp, #-48]!
     214:	mov	x29, sp
     218:	str	x0, [sp, #24]
     21c:	str	x1, [sp, #16]
     220:	ldr	x0, [sp, #24]
     224:	ldr	x0, [x0, #32]
     228:	bl	28 <ext2fs_has_feature_metadata_csum>
     22c:	cmp	w0, #0x0
     230:	b.ne	23c <ext2fs_mmp_csum_set+0x2c>  // b.any
     234:	mov	x0, #0x0                   	// #0
     238:	b	25c <ext2fs_mmp_csum_set+0x4c>
     23c:	ldr	x1, [sp, #16]
     240:	ldr	x0, [sp, #24]
     244:	bl	17c <ext2fs_mmp_csum>
     248:	str	w0, [sp, #44]
     24c:	ldr	x0, [sp, #16]
     250:	ldr	w1, [sp, #44]
     254:	str	w1, [x0, #1020]
     258:	mov	x0, #0x0                   	// #0
     25c:	ldp	x29, x30, [sp], #48
     260:	ret

0000000000000264 <ext2fs_verify_csum_type>:
     264:	stp	x29, x30, [sp, #-32]!
     268:	mov	x29, sp
     26c:	str	x0, [sp, #24]
     270:	str	x1, [sp, #16]
     274:	ldr	x0, [sp, #24]
     278:	ldr	x0, [x0, #32]
     27c:	bl	28 <ext2fs_has_feature_metadata_csum>
     280:	cmp	w0, #0x0
     284:	b.ne	290 <ext2fs_verify_csum_type+0x2c>  // b.any
     288:	mov	w0, #0x1                   	// #1
     28c:	b	2a4 <ext2fs_verify_csum_type+0x40>
     290:	ldr	x0, [sp, #16]
     294:	ldrb	w0, [x0, #373]
     298:	cmp	w0, #0x1
     29c:	cset	w0, eq  // eq = none
     2a0:	and	w0, w0, #0xff
     2a4:	ldp	x29, x30, [sp], #32
     2a8:	ret

00000000000002ac <ext2fs_superblock_csum>:
     2ac:	stp	x29, x30, [sp, #-48]!
     2b0:	mov	x29, sp
     2b4:	str	x0, [sp, #24]
     2b8:	str	x1, [sp, #16]
     2bc:	mov	w0, #0x3fc                 	// #1020
     2c0:	str	w0, [sp, #44]
     2c4:	ldrsw	x0, [sp, #44]
     2c8:	mov	x2, x0
     2cc:	ldr	x1, [sp, #16]
     2d0:	mov	w0, #0xffffffff            	// #-1
     2d4:	bl	0 <ext2fs_crc32c_le>
     2d8:	ldp	x29, x30, [sp], #48
     2dc:	ret

00000000000002e0 <ext2fs_superblock_csum_verify>:
     2e0:	stp	x29, x30, [sp, #-48]!
     2e4:	mov	x29, sp
     2e8:	str	x0, [sp, #24]
     2ec:	str	x1, [sp, #16]
     2f0:	ldr	x0, [sp, #24]
     2f4:	ldr	w0, [x0, #16]
     2f8:	and	w0, w0, #0x40
     2fc:	cmp	w0, #0x0
     300:	b.eq	310 <ext2fs_superblock_csum_verify+0x30>  // b.none
     304:	mov	w0, #0x400                 	// #1024
     308:	str	w0, [sp, #44]
     30c:	b	318 <ext2fs_superblock_csum_verify+0x38>
     310:	mov	w0, #0x400                 	// #1024
     314:	str	w0, [sp, #44]
     318:	ldr	x0, [sp, #24]
     31c:	ldr	x0, [x0, #32]
     320:	ldr	w1, [x0, #100]
     324:	ldr	w0, [sp, #44]
     328:	and	w0, w1, w0
     32c:	cmp	w0, #0x0
     330:	b.ne	33c <ext2fs_superblock_csum_verify+0x5c>  // b.any
     334:	mov	w0, #0x1                   	// #1
     338:	b	364 <ext2fs_superblock_csum_verify+0x84>
     33c:	ldr	x1, [sp, #16]
     340:	ldr	x0, [sp, #24]
     344:	bl	2ac <ext2fs_superblock_csum>
     348:	str	w0, [sp, #40]
     34c:	ldr	x0, [sp, #16]
     350:	ldr	w0, [x0, #1020]
     354:	ldr	w1, [sp, #40]
     358:	cmp	w1, w0
     35c:	cset	w0, eq  // eq = none
     360:	and	w0, w0, #0xff
     364:	ldp	x29, x30, [sp], #48
     368:	ret

000000000000036c <ext2fs_superblock_csum_set>:
     36c:	stp	x29, x30, [sp, #-48]!
     370:	mov	x29, sp
     374:	str	x0, [sp, #24]
     378:	str	x1, [sp, #16]
     37c:	ldr	x0, [sp, #24]
     380:	ldr	w0, [x0, #16]
     384:	and	w0, w0, #0x40
     388:	cmp	w0, #0x0
     38c:	b.eq	39c <ext2fs_superblock_csum_set+0x30>  // b.none
     390:	mov	w0, #0x400                 	// #1024
     394:	str	w0, [sp, #44]
     398:	b	3a4 <ext2fs_superblock_csum_set+0x38>
     39c:	mov	w0, #0x400                 	// #1024
     3a0:	str	w0, [sp, #44]
     3a4:	ldr	x0, [sp, #24]
     3a8:	ldr	x0, [x0, #32]
     3ac:	ldr	w1, [x0, #100]
     3b0:	ldr	w0, [sp, #44]
     3b4:	and	w0, w1, w0
     3b8:	cmp	w0, #0x0
     3bc:	b.ne	3c8 <ext2fs_superblock_csum_set+0x5c>  // b.any
     3c0:	mov	x0, #0x0                   	// #0
     3c4:	b	3e8 <ext2fs_superblock_csum_set+0x7c>
     3c8:	ldr	x1, [sp, #16]
     3cc:	ldr	x0, [sp, #24]
     3d0:	bl	2ac <ext2fs_superblock_csum>
     3d4:	str	w0, [sp, #40]
     3d8:	ldr	x0, [sp, #16]
     3dc:	ldr	w1, [sp, #40]
     3e0:	str	w1, [x0, #1020]
     3e4:	mov	x0, #0x0                   	// #0
     3e8:	ldp	x29, x30, [sp], #48
     3ec:	ret

00000000000003f0 <ext2fs_ext_attr_block_csum>:
     3f0:	stp	x29, x30, [sp, #-80]!
     3f4:	mov	x29, sp
     3f8:	str	x0, [sp, #56]
     3fc:	str	w1, [sp, #52]
     400:	str	x2, [sp, #40]
     404:	str	x3, [sp, #32]
     408:	str	x4, [sp, #24]
     40c:	ldr	x0, [sp, #32]
     410:	str	x0, [sp, #72]
     414:	ldr	x0, [sp, #32]
     418:	ldr	w0, [x0, #16]
     41c:	str	w0, [sp, #68]
     420:	ldr	x0, [sp, #32]
     424:	str	wzr, [x0, #16]
     428:	ldr	x0, [sp, #40]
     42c:	str	x0, [sp, #40]
     430:	ldr	x0, [sp, #56]
     434:	ldr	w0, [x0, #312]
     438:	add	x1, sp, #0x28
     43c:	mov	x2, #0x8                   	// #8
     440:	bl	0 <ext2fs_crc32c_le>
     444:	mov	w1, w0
     448:	ldr	x0, [sp, #24]
     44c:	str	w1, [x0]
     450:	ldr	x0, [sp, #24]
     454:	ldr	w3, [x0]
     458:	ldr	x0, [sp, #56]
     45c:	ldr	w0, [x0, #40]
     460:	mov	w0, w0
     464:	mov	x2, x0
     468:	ldr	x1, [sp, #72]
     46c:	mov	w0, w3
     470:	bl	0 <ext2fs_crc32c_le>
     474:	mov	w1, w0
     478:	ldr	x0, [sp, #24]
     47c:	str	w1, [x0]
     480:	ldr	x0, [sp, #32]
     484:	ldr	w1, [sp, #68]
     488:	str	w1, [x0, #16]
     48c:	mov	x0, #0x0                   	// #0
     490:	ldp	x29, x30, [sp], #80
     494:	ret

0000000000000498 <ext2fs_ext_attr_block_csum_verify>:
     498:	stp	x29, x30, [sp, #-64]!
     49c:	mov	x29, sp
     4a0:	str	x0, [sp, #40]
     4a4:	str	w1, [sp, #36]
     4a8:	str	x2, [sp, #24]
     4ac:	str	x3, [sp, #16]
     4b0:	ldr	x0, [sp, #40]
     4b4:	ldr	x0, [x0, #32]
     4b8:	bl	28 <ext2fs_has_feature_metadata_csum>
     4bc:	cmp	w0, #0x0
     4c0:	b.ne	4cc <ext2fs_ext_attr_block_csum_verify+0x34>  // b.any
     4c4:	mov	w0, #0x1                   	// #1
     4c8:	b	518 <ext2fs_ext_attr_block_csum_verify+0x80>
     4cc:	add	x0, sp, #0x34
     4d0:	mov	x4, x0
     4d4:	ldr	x3, [sp, #16]
     4d8:	ldr	x2, [sp, #24]
     4dc:	ldr	w1, [sp, #36]
     4e0:	ldr	x0, [sp, #40]
     4e4:	bl	3f0 <ext2fs_ext_attr_block_csum>
     4e8:	str	x0, [sp, #56]
     4ec:	ldr	x0, [sp, #56]
     4f0:	cmp	x0, #0x0
     4f4:	b.eq	500 <ext2fs_ext_attr_block_csum_verify+0x68>  // b.none
     4f8:	mov	w0, #0x0                   	// #0
     4fc:	b	518 <ext2fs_ext_attr_block_csum_verify+0x80>
     500:	ldr	x0, [sp, #16]
     504:	ldr	w1, [x0, #16]
     508:	ldr	w0, [sp, #52]
     50c:	cmp	w1, w0
     510:	cset	w0, eq  // eq = none
     514:	and	w0, w0, #0xff
     518:	ldp	x29, x30, [sp], #64
     51c:	ret

0000000000000520 <ext2fs_ext_attr_block_csum_set>:
     520:	stp	x29, x30, [sp, #-64]!
     524:	mov	x29, sp
     528:	str	x0, [sp, #40]
     52c:	str	w1, [sp, #36]
     530:	str	x2, [sp, #24]
     534:	str	x3, [sp, #16]
     538:	ldr	x0, [sp, #40]
     53c:	ldr	x0, [x0, #32]
     540:	bl	28 <ext2fs_has_feature_metadata_csum>
     544:	cmp	w0, #0x0
     548:	b.ne	554 <ext2fs_ext_attr_block_csum_set+0x34>  // b.any
     54c:	mov	x0, #0x0                   	// #0
     550:	b	598 <ext2fs_ext_attr_block_csum_set+0x78>
     554:	add	x0, sp, #0x34
     558:	mov	x4, x0
     55c:	ldr	x3, [sp, #16]
     560:	ldr	x2, [sp, #24]
     564:	ldr	w1, [sp, #36]
     568:	ldr	x0, [sp, #40]
     56c:	bl	3f0 <ext2fs_ext_attr_block_csum>
     570:	str	x0, [sp, #56]
     574:	ldr	x0, [sp, #56]
     578:	cmp	x0, #0x0
     57c:	b.eq	588 <ext2fs_ext_attr_block_csum_set+0x68>  // b.none
     580:	ldr	x0, [sp, #56]
     584:	b	598 <ext2fs_ext_attr_block_csum_set+0x78>
     588:	ldr	w1, [sp, #52]
     58c:	ldr	x0, [sp, #16]
     590:	str	w1, [x0, #16]
     594:	mov	x0, #0x0                   	// #0
     598:	ldp	x29, x30, [sp], #64
     59c:	ret

00000000000005a0 <do_nothing16>:
     5a0:	sub	sp, sp, #0x10
     5a4:	strh	w0, [sp, #14]
     5a8:	ldrh	w0, [sp, #14]
     5ac:	add	sp, sp, #0x10
     5b0:	ret

00000000000005b4 <disk_to_host16>:
     5b4:	sub	sp, sp, #0x10
     5b8:	strh	w0, [sp, #14]
     5bc:	ldrh	w0, [sp, #14]
     5c0:	add	sp, sp, #0x10
     5c4:	ret

00000000000005c8 <__get_dx_countlimit>:
     5c8:	stp	x29, x30, [sp, #-128]!
     5cc:	mov	x29, sp
     5d0:	str	x0, [sp, #56]
     5d4:	str	x1, [sp, #48]
     5d8:	str	x2, [sp, #40]
     5dc:	str	x3, [sp, #32]
     5e0:	str	w4, [sp, #28]
     5e4:	ldr	w0, [sp, #28]
     5e8:	cmp	w0, #0x0
     5ec:	b.eq	5fc <__get_dx_countlimit+0x34>  // b.none
     5f0:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     5f4:	add	x0, x0, #0x0
     5f8:	b	604 <__get_dx_countlimit+0x3c>
     5fc:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     600:	add	x0, x0, #0x0
     604:	str	x0, [sp, #112]
     608:	ldr	x0, [sp, #48]
     60c:	ldrh	w0, [x0, #4]
     610:	ldr	x1, [sp, #112]
     614:	blr	x1
     618:	and	w0, w0, #0xffff
     61c:	str	w0, [sp, #108]
     620:	ldr	x0, [sp, #56]
     624:	ldr	w0, [x0, #40]
     628:	ldr	w1, [sp, #108]
     62c:	cmp	w1, w0
     630:	b.ne	65c <__get_dx_countlimit+0x94>  // b.any
     634:	ldr	x0, [sp, #48]
     638:	ldrh	w0, [x0, #6]
     63c:	ldr	x1, [sp, #112]
     640:	blr	x1
     644:	and	w0, w0, #0xffff
     648:	cmp	w0, #0x0
     64c:	b.ne	65c <__get_dx_countlimit+0x94>  // b.any
     650:	mov	w0, #0x8                   	// #8
     654:	str	w0, [sp, #124]
     658:	b	704 <__get_dx_countlimit+0x13c>
     65c:	ldr	w0, [sp, #108]
     660:	cmp	w0, #0xc
     664:	b.ne	6f8 <__get_dx_countlimit+0x130>  // b.any
     668:	ldr	w0, [sp, #108]
     66c:	ldr	x1, [sp, #48]
     670:	add	x0, x1, x0
     674:	str	x0, [sp, #96]
     678:	ldr	x0, [sp, #96]
     67c:	ldrh	w0, [x0, #4]
     680:	ldr	x1, [sp, #112]
     684:	blr	x1
     688:	and	w0, w0, #0xffff
     68c:	str	w0, [sp, #108]
     690:	ldr	x0, [sp, #56]
     694:	ldr	w0, [x0, #40]
     698:	sub	w0, w0, #0xc
     69c:	ldr	w1, [sp, #108]
     6a0:	cmp	w1, w0
     6a4:	b.eq	6b4 <__get_dx_countlimit+0xec>  // b.none
     6a8:	mov	x0, #0xb74e                	// #46926
     6ac:	movk	x0, #0x7f2b, lsl #16
     6b0:	b	79c <__get_dx_countlimit+0x1d4>
     6b4:	ldr	x0, [sp, #96]
     6b8:	add	x0, x0, #0xc
     6bc:	str	x0, [sp, #88]
     6c0:	ldr	x0, [sp, #88]
     6c4:	ldr	w0, [x0]
     6c8:	cmp	w0, #0x0
     6cc:	b.ne	6e0 <__get_dx_countlimit+0x118>  // b.any
     6d0:	ldr	x0, [sp, #88]
     6d4:	ldrb	w0, [x0, #5]
     6d8:	cmp	w0, #0x8
     6dc:	b.eq	6ec <__get_dx_countlimit+0x124>  // b.none
     6e0:	mov	x0, #0xb74e                	// #46926
     6e4:	movk	x0, #0x7f2b, lsl #16
     6e8:	b	79c <__get_dx_countlimit+0x1d4>
     6ec:	mov	w0, #0x20                  	// #32
     6f0:	str	w0, [sp, #124]
     6f4:	b	704 <__get_dx_countlimit+0x13c>
     6f8:	mov	x0, #0xb74e                	// #46926
     6fc:	movk	x0, #0x7f2b, lsl #16
     700:	b	79c <__get_dx_countlimit+0x1d4>
     704:	ldrsw	x0, [sp, #124]
     708:	ldr	x1, [sp, #48]
     70c:	add	x0, x1, x0
     710:	str	x0, [sp, #80]
     714:	ldr	x0, [sp, #56]
     718:	ldr	w1, [x0, #40]
     71c:	ldr	w0, [sp, #124]
     720:	sub	w0, w1, w0
     724:	lsr	w0, w0, #3
     728:	str	w0, [sp, #76]
     72c:	ldr	x0, [sp, #80]
     730:	ldrh	w0, [x0]
     734:	mov	w1, w0
     738:	ldr	w0, [sp, #76]
     73c:	cmp	w0, w1
     740:	b.lt	75c <__get_dx_countlimit+0x194>  // b.tstop
     744:	ldr	x0, [sp, #80]
     748:	ldrh	w0, [x0, #2]
     74c:	mov	w1, w0
     750:	ldr	w0, [sp, #76]
     754:	cmp	w0, w1
     758:	b.ge	768 <__get_dx_countlimit+0x1a0>  // b.tcont
     75c:	mov	x0, #0xb795                	// #46997
     760:	movk	x0, #0x7f2b, lsl #16
     764:	b	79c <__get_dx_countlimit+0x1d4>
     768:	ldr	x0, [sp, #32]
     76c:	cmp	x0, #0x0
     770:	b.eq	780 <__get_dx_countlimit+0x1b8>  // b.none
     774:	ldr	x0, [sp, #32]
     778:	ldr	w1, [sp, #124]
     77c:	str	w1, [x0]
     780:	ldr	x0, [sp, #40]
     784:	cmp	x0, #0x0
     788:	b.eq	798 <__get_dx_countlimit+0x1d0>  // b.none
     78c:	ldr	x0, [sp, #40]
     790:	ldr	x1, [sp, #80]
     794:	str	x1, [x0]
     798:	mov	x0, #0x0                   	// #0
     79c:	ldp	x29, x30, [sp], #128
     7a0:	ret

00000000000007a4 <ext2fs_get_dx_countlimit>:
     7a4:	stp	x29, x30, [sp, #-48]!
     7a8:	mov	x29, sp
     7ac:	str	x0, [sp, #40]
     7b0:	str	x1, [sp, #32]
     7b4:	str	x2, [sp, #24]
     7b8:	str	x3, [sp, #16]
     7bc:	mov	w4, #0x0                   	// #0
     7c0:	ldr	x3, [sp, #16]
     7c4:	ldr	x2, [sp, #24]
     7c8:	ldr	x1, [sp, #32]
     7cc:	ldr	x0, [sp, #40]
     7d0:	bl	5c8 <__get_dx_countlimit>
     7d4:	ldp	x29, x30, [sp], #48
     7d8:	ret

00000000000007dc <ext2fs_initialize_dirent_tail>:
     7dc:	stp	x29, x30, [sp, #-32]!
     7e0:	mov	x29, sp
     7e4:	str	x0, [sp, #24]
     7e8:	str	x1, [sp, #16]
     7ec:	mov	x2, #0xc                   	// #12
     7f0:	mov	w1, #0x0                   	// #0
     7f4:	ldr	x0, [sp, #16]
     7f8:	bl	0 <memset>
     7fc:	ldr	x2, [sp, #16]
     800:	mov	w1, #0xc                   	// #12
     804:	ldr	x0, [sp, #24]
     808:	bl	0 <ext2fs_set_rec_len>
     80c:	ldr	x0, [sp, #16]
     810:	mov	w1, #0xffffde00            	// #-8704
     814:	strh	w1, [x0, #6]
     818:	nop
     81c:	ldp	x29, x30, [sp], #32
     820:	ret

0000000000000824 <__get_dirent_tail>:
     824:	stp	x29, x30, [sp, #-96]!
     828:	mov	x29, sp
     82c:	str	x0, [sp, #40]
     830:	str	x1, [sp, #32]
     834:	str	x2, [sp, #24]
     838:	str	w3, [sp, #20]
     83c:	str	xzr, [sp, #72]
     840:	ldr	w0, [sp, #20]
     844:	cmp	w0, #0x0
     848:	b.eq	858 <__get_dirent_tail+0x34>  // b.none
     84c:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     850:	add	x0, x0, #0x0
     854:	b	860 <__get_dirent_tail+0x3c>
     858:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     85c:	add	x0, x0, #0x0
     860:	str	x0, [sp, #64]
     864:	ldr	x0, [sp, #32]
     868:	str	x0, [sp, #88]
     86c:	ldr	x0, [sp, #40]
     870:	ldr	w0, [x0, #40]
     874:	mov	w0, w0
     878:	sub	x0, x0, #0xc
     87c:	ldr	x1, [sp, #32]
     880:	add	x0, x1, x0
     884:	str	x0, [sp, #56]
     888:	ldr	x0, [sp, #88]
     88c:	ldrh	w0, [x0, #4]
     890:	ldr	x1, [sp, #64]
     894:	blr	x1
     898:	and	w0, w0, #0xffff
     89c:	str	w0, [sp, #84]
     8a0:	b	8dc <__get_dirent_tail+0xb8>
     8a4:	ldr	w0, [sp, #84]
     8a8:	ldr	x1, [sp, #88]
     8ac:	add	x0, x1, x0
     8b0:	str	x0, [sp, #88]
     8b4:	ldr	x1, [sp, #88]
     8b8:	ldr	x0, [sp, #56]
     8bc:	cmp	x1, x0
     8c0:	b.cs	8fc <__get_dirent_tail+0xd8>  // b.hs, b.nlast
     8c4:	ldr	x0, [sp, #88]
     8c8:	ldrh	w0, [x0, #4]
     8cc:	ldr	x1, [sp, #64]
     8d0:	blr	x1
     8d4:	and	w0, w0, #0xffff
     8d8:	str	w0, [sp, #84]
     8dc:	ldr	w0, [sp, #84]
     8e0:	cmp	w0, #0x0
     8e4:	b.eq	900 <__get_dirent_tail+0xdc>  // b.none
     8e8:	ldr	w0, [sp, #84]
     8ec:	and	w0, w0, #0x3
     8f0:	cmp	w0, #0x0
     8f4:	b.eq	8a4 <__get_dirent_tail+0x80>  // b.none
     8f8:	b	900 <__get_dirent_tail+0xdc>
     8fc:	nop
     900:	ldr	x1, [sp, #88]
     904:	ldr	x0, [sp, #56]
     908:	cmp	x1, x0
     90c:	b.eq	91c <__get_dirent_tail+0xf8>  // b.none
     910:	mov	x0, #0xb795                	// #46997
     914:	movk	x0, #0x7f2b, lsl #16
     918:	b	998 <__get_dirent_tail+0x174>
     91c:	ldr	x0, [sp, #88]
     920:	str	x0, [sp, #48]
     924:	ldr	x0, [sp, #48]
     928:	ldr	w0, [x0]
     92c:	cmp	w0, #0x0
     930:	b.ne	970 <__get_dirent_tail+0x14c>  // b.any
     934:	ldr	x0, [sp, #48]
     938:	ldrh	w0, [x0, #4]
     93c:	ldr	x1, [sp, #64]
     940:	blr	x1
     944:	and	w0, w0, #0xffff
     948:	cmp	w0, #0xc
     94c:	b.ne	970 <__get_dirent_tail+0x14c>  // b.any
     950:	ldr	x0, [sp, #48]
     954:	ldrh	w0, [x0, #6]
     958:	ldr	x1, [sp, #64]
     95c:	blr	x1
     960:	and	w1, w0, #0xffff
     964:	mov	w0, #0xde00                	// #56832
     968:	cmp	w1, w0
     96c:	b.eq	97c <__get_dirent_tail+0x158>  // b.none
     970:	mov	x0, #0xb795                	// #46997
     974:	movk	x0, #0x7f2b, lsl #16
     978:	b	998 <__get_dirent_tail+0x174>
     97c:	ldr	x0, [sp, #24]
     980:	cmp	x0, #0x0
     984:	b.eq	994 <__get_dirent_tail+0x170>  // b.none
     988:	ldr	x0, [sp, #24]
     98c:	ldr	x1, [sp, #48]
     990:	str	x1, [x0]
     994:	ldr	x0, [sp, #72]
     998:	ldp	x29, x30, [sp], #96
     99c:	ret

00000000000009a0 <ext2fs_dirent_has_tail>:
     9a0:	stp	x29, x30, [sp, #-32]!
     9a4:	mov	x29, sp
     9a8:	str	x0, [sp, #24]
     9ac:	str	x1, [sp, #16]
     9b0:	mov	w3, #0x0                   	// #0
     9b4:	mov	x2, #0x0                   	// #0
     9b8:	ldr	x1, [sp, #16]
     9bc:	ldr	x0, [sp, #24]
     9c0:	bl	824 <__get_dirent_tail>
     9c4:	cmp	x0, #0x0
     9c8:	cset	w0, eq  // eq = none
     9cc:	and	w0, w0, #0xff
     9d0:	ldp	x29, x30, [sp], #32
     9d4:	ret

00000000000009d8 <ext2fs_dirent_csum>:
     9d8:	stp	x29, x30, [sp, #-208]!
     9dc:	mov	x29, sp
     9e0:	str	x0, [sp, #40]
     9e4:	str	w1, [sp, #36]
     9e8:	str	x2, [sp, #24]
     9ec:	str	x3, [sp, #16]
     9f0:	str	w4, [sp, #32]
     9f4:	ldr	x0, [sp, #24]
     9f8:	str	x0, [sp, #200]
     9fc:	ldr	w0, [sp, #36]
     a00:	add	x1, sp, #0x38
     a04:	mov	x2, x1
     a08:	mov	w1, w0
     a0c:	ldr	x0, [sp, #40]
     a10:	bl	0 <ext2fs_read_inode>
     a14:	str	x0, [sp, #192]
     a18:	ldr	x0, [sp, #192]
     a1c:	cmp	x0, #0x0
     a20:	b.eq	a2c <ext2fs_dirent_csum+0x54>  // b.none
     a24:	ldr	x0, [sp, #192]
     a28:	b	aa4 <ext2fs_dirent_csum+0xcc>
     a2c:	ldr	w0, [sp, #36]
     a30:	str	w0, [sp, #36]
     a34:	ldr	w0, [sp, #156]
     a38:	str	w0, [sp, #188]
     a3c:	ldr	x0, [sp, #40]
     a40:	ldr	w0, [x0, #312]
     a44:	add	x1, sp, #0x24
     a48:	mov	x2, #0x4                   	// #4
     a4c:	bl	0 <ext2fs_crc32c_le>
     a50:	mov	w1, w0
     a54:	ldr	x0, [sp, #16]
     a58:	str	w1, [x0]
     a5c:	ldr	x0, [sp, #16]
     a60:	ldr	w0, [x0]
     a64:	add	x1, sp, #0xbc
     a68:	mov	x2, #0x4                   	// #4
     a6c:	bl	0 <ext2fs_crc32c_le>
     a70:	mov	w1, w0
     a74:	ldr	x0, [sp, #16]
     a78:	str	w1, [x0]
     a7c:	ldr	x0, [sp, #16]
     a80:	ldr	w0, [x0]
     a84:	ldrsw	x1, [sp, #32]
     a88:	mov	x2, x1
     a8c:	ldr	x1, [sp, #200]
     a90:	bl	0 <ext2fs_crc32c_le>
     a94:	mov	w1, w0
     a98:	ldr	x0, [sp, #16]
     a9c:	str	w1, [x0]
     aa0:	mov	x0, #0x0                   	// #0
     aa4:	ldp	x29, x30, [sp], #208
     aa8:	ret

0000000000000aac <ext2fs_dirent_csum_verify>:
     aac:	stp	x29, x30, [sp, #-80]!
     ab0:	mov	x29, sp
     ab4:	str	x0, [sp, #40]
     ab8:	str	w1, [sp, #36]
     abc:	str	x2, [sp, #24]
     ac0:	add	x0, sp, #0x38
     ac4:	mov	w3, #0x1                   	// #1
     ac8:	mov	x2, x0
     acc:	ldr	x1, [sp, #24]
     ad0:	ldr	x0, [sp, #40]
     ad4:	bl	824 <__get_dirent_tail>
     ad8:	str	x0, [sp, #72]
     adc:	ldr	x0, [sp, #72]
     ae0:	cmp	x0, #0x0
     ae4:	b.eq	af0 <ext2fs_dirent_csum_verify+0x44>  // b.none
     ae8:	mov	w0, #0x1                   	// #1
     aec:	b	b4c <ext2fs_dirent_csum_verify+0xa0>
     af0:	ldr	x1, [sp, #56]
     af4:	ldr	x0, [sp, #24]
     af8:	sub	x0, x1, x0
     afc:	mov	w1, w0
     b00:	add	x0, sp, #0x44
     b04:	mov	w4, w1
     b08:	mov	x3, x0
     b0c:	ldr	x2, [sp, #24]
     b10:	ldr	w1, [sp, #36]
     b14:	ldr	x0, [sp, #40]
     b18:	bl	9d8 <ext2fs_dirent_csum>
     b1c:	str	x0, [sp, #72]
     b20:	ldr	x0, [sp, #72]
     b24:	cmp	x0, #0x0
     b28:	b.eq	b34 <ext2fs_dirent_csum_verify+0x88>  // b.none
     b2c:	mov	w0, #0x0                   	// #0
     b30:	b	b4c <ext2fs_dirent_csum_verify+0xa0>
     b34:	ldr	x0, [sp, #56]
     b38:	ldr	w1, [x0, #8]
     b3c:	ldr	w0, [sp, #68]
     b40:	cmp	w1, w0
     b44:	cset	w0, eq  // eq = none
     b48:	and	w0, w0, #0xff
     b4c:	ldp	x29, x30, [sp], #80
     b50:	ret

0000000000000b54 <ext2fs_dirent_csum_set>:
     b54:	stp	x29, x30, [sp, #-80]!
     b58:	mov	x29, sp
     b5c:	str	x0, [sp, #40]
     b60:	str	w1, [sp, #36]
     b64:	str	x2, [sp, #24]
     b68:	add	x0, sp, #0x38
     b6c:	mov	w3, #0x1                   	// #1
     b70:	mov	x2, x0
     b74:	ldr	x1, [sp, #24]
     b78:	ldr	x0, [sp, #40]
     b7c:	bl	824 <__get_dirent_tail>
     b80:	str	x0, [sp, #72]
     b84:	ldr	x0, [sp, #72]
     b88:	cmp	x0, #0x0
     b8c:	b.eq	b98 <ext2fs_dirent_csum_set+0x44>  // b.none
     b90:	ldr	x0, [sp, #72]
     b94:	b	bec <ext2fs_dirent_csum_set+0x98>
     b98:	ldr	x1, [sp, #56]
     b9c:	ldr	x0, [sp, #24]
     ba0:	sub	x0, x1, x0
     ba4:	mov	w1, w0
     ba8:	add	x0, sp, #0x44
     bac:	mov	w4, w1
     bb0:	mov	x3, x0
     bb4:	ldr	x2, [sp, #24]
     bb8:	ldr	w1, [sp, #36]
     bbc:	ldr	x0, [sp, #40]
     bc0:	bl	9d8 <ext2fs_dirent_csum>
     bc4:	str	x0, [sp, #72]
     bc8:	ldr	x0, [sp, #72]
     bcc:	cmp	x0, #0x0
     bd0:	b.eq	bdc <ext2fs_dirent_csum_set+0x88>  // b.none
     bd4:	ldr	x0, [sp, #72]
     bd8:	b	bec <ext2fs_dirent_csum_set+0x98>
     bdc:	ldr	x0, [sp, #56]
     be0:	ldr	w1, [sp, #68]
     be4:	str	w1, [x0, #8]
     be8:	mov	x0, #0x0                   	// #0
     bec:	ldp	x29, x30, [sp], #80
     bf0:	ret

0000000000000bf4 <ext2fs_dx_csum>:
     bf4:	stp	x29, x30, [sp, #-224]!
     bf8:	mov	x29, sp
     bfc:	str	x0, [sp, #56]
     c00:	str	w1, [sp, #52]
     c04:	str	x2, [sp, #40]
     c08:	str	x3, [sp, #32]
     c0c:	str	w4, [sp, #48]
     c10:	str	w5, [sp, #28]
     c14:	str	x6, [sp, #16]
     c18:	ldr	x0, [sp, #40]
     c1c:	str	x0, [sp, #216]
     c20:	ldrsw	x0, [sp, #28]
     c24:	lsl	w1, w0, #3
     c28:	ldr	w0, [sp, #48]
     c2c:	add	w0, w1, w0
     c30:	str	w0, [sp, #212]
     c34:	ldr	x0, [sp, #16]
     c38:	ldr	w0, [x0, #4]
     c3c:	str	w0, [sp, #208]
     c40:	ldr	x0, [sp, #16]
     c44:	str	wzr, [x0, #4]
     c48:	ldr	w0, [sp, #52]
     c4c:	add	x1, sp, #0x40
     c50:	mov	x2, x1
     c54:	mov	w1, w0
     c58:	ldr	x0, [sp, #56]
     c5c:	bl	0 <ext2fs_read_inode>
     c60:	str	x0, [sp, #200]
     c64:	ldr	x0, [sp, #200]
     c68:	cmp	x0, #0x0
     c6c:	b.eq	c78 <ext2fs_dx_csum+0x84>  // b.none
     c70:	ldr	x0, [sp, #200]
     c74:	b	d1c <ext2fs_dx_csum+0x128>
     c78:	ldr	w0, [sp, #52]
     c7c:	str	w0, [sp, #52]
     c80:	ldr	w0, [sp, #164]
     c84:	str	w0, [sp, #196]
     c88:	ldr	x0, [sp, #56]
     c8c:	ldr	w0, [x0, #312]
     c90:	add	x1, sp, #0x34
     c94:	mov	x2, #0x4                   	// #4
     c98:	bl	0 <ext2fs_crc32c_le>
     c9c:	mov	w1, w0
     ca0:	ldr	x0, [sp, #32]
     ca4:	str	w1, [x0]
     ca8:	ldr	x0, [sp, #32]
     cac:	ldr	w0, [x0]
     cb0:	add	x1, sp, #0xc4
     cb4:	mov	x2, #0x4                   	// #4
     cb8:	bl	0 <ext2fs_crc32c_le>
     cbc:	mov	w1, w0
     cc0:	ldr	x0, [sp, #32]
     cc4:	str	w1, [x0]
     cc8:	ldr	x0, [sp, #32]
     ccc:	ldr	w0, [x0]
     cd0:	ldrsw	x1, [sp, #212]
     cd4:	mov	x2, x1
     cd8:	ldr	x1, [sp, #216]
     cdc:	bl	0 <ext2fs_crc32c_le>
     ce0:	mov	w1, w0
     ce4:	ldr	x0, [sp, #32]
     ce8:	str	w1, [x0]
     cec:	ldr	x0, [sp, #32]
     cf0:	ldr	w0, [x0]
     cf4:	mov	x2, #0x8                   	// #8
     cf8:	ldr	x1, [sp, #16]
     cfc:	bl	0 <ext2fs_crc32c_le>
     d00:	mov	w1, w0
     d04:	ldr	x0, [sp, #32]
     d08:	str	w1, [x0]
     d0c:	ldr	x0, [sp, #16]
     d10:	ldr	w1, [sp, #208]
     d14:	str	w1, [x0, #4]
     d18:	mov	x0, #0x0                   	// #0
     d1c:	ldp	x29, x30, [sp], #224
     d20:	ret

0000000000000d24 <ext2fs_dx_csum_verify>:
     d24:	stp	x29, x30, [sp, #-96]!
     d28:	mov	x29, sp
     d2c:	str	x0, [sp, #40]
     d30:	str	w1, [sp, #36]
     d34:	str	x2, [sp, #24]
     d38:	add	x1, sp, #0x34
     d3c:	add	x0, sp, #0x38
     d40:	mov	w4, #0x1                   	// #1
     d44:	mov	x3, x1
     d48:	mov	x2, x0
     d4c:	ldr	x1, [sp, #24]
     d50:	ldr	x0, [sp, #40]
     d54:	bl	5c8 <__get_dx_countlimit>
     d58:	str	x0, [sp, #88]
     d5c:	ldr	x0, [sp, #88]
     d60:	cmp	x0, #0x0
     d64:	b.eq	d70 <ext2fs_dx_csum_verify+0x4c>  // b.none
     d68:	mov	w0, #0x1                   	// #1
     d6c:	b	e28 <ext2fs_dx_csum_verify+0x104>
     d70:	ldr	x0, [sp, #56]
     d74:	ldrh	w0, [x0]
     d78:	str	w0, [sp, #84]
     d7c:	ldr	x0, [sp, #56]
     d80:	ldrh	w0, [x0, #2]
     d84:	str	w0, [sp, #80]
     d88:	ldr	w0, [sp, #52]
     d8c:	sxtw	x1, w0
     d90:	ldrsw	x0, [sp, #84]
     d94:	lsl	x0, x0, #3
     d98:	add	x1, x1, x0
     d9c:	ldr	x0, [sp, #40]
     da0:	ldr	w0, [x0, #40]
     da4:	mov	w0, w0
     da8:	sub	x0, x0, #0x8
     dac:	cmp	x1, x0
     db0:	b.ls	dbc <ext2fs_dx_csum_verify+0x98>  // b.plast
     db4:	mov	w0, #0x0                   	// #0
     db8:	b	e28 <ext2fs_dx_csum_verify+0x104>
     dbc:	ldr	x1, [sp, #56]
     dc0:	ldrsw	x0, [sp, #84]
     dc4:	lsl	x0, x0, #3
     dc8:	add	x0, x1, x0
     dcc:	str	x0, [sp, #72]
     dd0:	ldr	w1, [sp, #52]
     dd4:	add	x0, sp, #0x44
     dd8:	ldr	x6, [sp, #72]
     ddc:	ldr	w5, [sp, #80]
     de0:	mov	w4, w1
     de4:	mov	x3, x0
     de8:	ldr	x2, [sp, #24]
     dec:	ldr	w1, [sp, #36]
     df0:	ldr	x0, [sp, #40]
     df4:	bl	bf4 <ext2fs_dx_csum>
     df8:	str	x0, [sp, #88]
     dfc:	ldr	x0, [sp, #88]
     e00:	cmp	x0, #0x0
     e04:	b.eq	e10 <ext2fs_dx_csum_verify+0xec>  // b.none
     e08:	mov	w0, #0x0                   	// #0
     e0c:	b	e28 <ext2fs_dx_csum_verify+0x104>
     e10:	ldr	x0, [sp, #72]
     e14:	ldr	w1, [x0, #4]
     e18:	ldr	w0, [sp, #68]
     e1c:	cmp	w1, w0
     e20:	cset	w0, eq  // eq = none
     e24:	and	w0, w0, #0xff
     e28:	ldp	x29, x30, [sp], #96
     e2c:	ret

0000000000000e30 <ext2fs_dx_csum_set>:
     e30:	stp	x29, x30, [sp, #-96]!
     e34:	mov	x29, sp
     e38:	str	x0, [sp, #40]
     e3c:	str	w1, [sp, #36]
     e40:	str	x2, [sp, #24]
     e44:	str	xzr, [sp, #88]
     e48:	add	x1, sp, #0x34
     e4c:	add	x0, sp, #0x38
     e50:	mov	w4, #0x1                   	// #1
     e54:	mov	x3, x1
     e58:	mov	x2, x0
     e5c:	ldr	x1, [sp, #24]
     e60:	ldr	x0, [sp, #40]
     e64:	bl	5c8 <__get_dx_countlimit>
     e68:	str	x0, [sp, #88]
     e6c:	ldr	x0, [sp, #88]
     e70:	cmp	x0, #0x0
     e74:	b.eq	e80 <ext2fs_dx_csum_set+0x50>  // b.none
     e78:	ldr	x0, [sp, #88]
     e7c:	b	f34 <ext2fs_dx_csum_set+0x104>
     e80:	ldr	x0, [sp, #56]
     e84:	ldrh	w0, [x0]
     e88:	str	w0, [sp, #84]
     e8c:	ldr	x0, [sp, #56]
     e90:	ldrh	w0, [x0, #2]
     e94:	str	w0, [sp, #80]
     e98:	ldr	w0, [sp, #52]
     e9c:	sxtw	x1, w0
     ea0:	ldrsw	x0, [sp, #84]
     ea4:	lsl	x0, x0, #3
     ea8:	add	x1, x1, x0
     eac:	ldr	x0, [sp, #40]
     eb0:	ldr	w0, [x0, #40]
     eb4:	mov	w0, w0
     eb8:	sub	x0, x0, #0x8
     ebc:	cmp	x1, x0
     ec0:	b.ls	ed0 <ext2fs_dx_csum_set+0xa0>  // b.plast
     ec4:	mov	x0, #0xb795                	// #46997
     ec8:	movk	x0, #0x7f2b, lsl #16
     ecc:	b	f34 <ext2fs_dx_csum_set+0x104>
     ed0:	ldr	x1, [sp, #56]
     ed4:	ldrsw	x0, [sp, #84]
     ed8:	lsl	x0, x0, #3
     edc:	add	x0, x1, x0
     ee0:	str	x0, [sp, #72]
     ee4:	ldr	w1, [sp, #52]
     ee8:	add	x0, sp, #0x44
     eec:	ldr	x6, [sp, #72]
     ef0:	ldr	w5, [sp, #80]
     ef4:	mov	w4, w1
     ef8:	mov	x3, x0
     efc:	ldr	x2, [sp, #24]
     f00:	ldr	w1, [sp, #36]
     f04:	ldr	x0, [sp, #40]
     f08:	bl	bf4 <ext2fs_dx_csum>
     f0c:	str	x0, [sp, #88]
     f10:	ldr	x0, [sp, #88]
     f14:	cmp	x0, #0x0
     f18:	b.eq	f24 <ext2fs_dx_csum_set+0xf4>  // b.none
     f1c:	ldr	x0, [sp, #88]
     f20:	b	f34 <ext2fs_dx_csum_set+0x104>
     f24:	ldr	w1, [sp, #68]
     f28:	ldr	x0, [sp, #72]
     f2c:	str	w1, [x0, #4]
     f30:	ldr	x0, [sp, #88]
     f34:	ldp	x29, x30, [sp], #96
     f38:	ret

0000000000000f3c <ext2fs_dir_block_csum_verify>:
     f3c:	stp	x29, x30, [sp, #-48]!
     f40:	mov	x29, sp
     f44:	str	x0, [sp, #40]
     f48:	str	w1, [sp, #36]
     f4c:	str	x2, [sp, #24]
     f50:	ldr	x0, [sp, #40]
     f54:	ldr	x0, [x0, #32]
     f58:	bl	28 <ext2fs_has_feature_metadata_csum>
     f5c:	cmp	w0, #0x0
     f60:	b.ne	f6c <ext2fs_dir_block_csum_verify+0x30>  // b.any
     f64:	mov	w0, #0x1                   	// #1
     f68:	b	fd4 <ext2fs_dir_block_csum_verify+0x98>
     f6c:	mov	w3, #0x1                   	// #1
     f70:	mov	x2, #0x0                   	// #0
     f74:	ldr	x1, [sp, #24]
     f78:	ldr	x0, [sp, #40]
     f7c:	bl	824 <__get_dirent_tail>
     f80:	cmp	x0, #0x0
     f84:	b.ne	f9c <ext2fs_dir_block_csum_verify+0x60>  // b.any
     f88:	ldr	x2, [sp, #24]
     f8c:	ldr	w1, [sp, #36]
     f90:	ldr	x0, [sp, #40]
     f94:	bl	aac <ext2fs_dirent_csum_verify>
     f98:	b	fd4 <ext2fs_dir_block_csum_verify+0x98>
     f9c:	mov	w4, #0x1                   	// #1
     fa0:	mov	x3, #0x0                   	// #0
     fa4:	mov	x2, #0x0                   	// #0
     fa8:	ldr	x1, [sp, #24]
     fac:	ldr	x0, [sp, #40]
     fb0:	bl	5c8 <__get_dx_countlimit>
     fb4:	cmp	x0, #0x0
     fb8:	b.ne	fd0 <ext2fs_dir_block_csum_verify+0x94>  // b.any
     fbc:	ldr	x2, [sp, #24]
     fc0:	ldr	w1, [sp, #36]
     fc4:	ldr	x0, [sp, #40]
     fc8:	bl	d24 <ext2fs_dx_csum_verify>
     fcc:	b	fd4 <ext2fs_dir_block_csum_verify+0x98>
     fd0:	mov	w0, #0x0                   	// #0
     fd4:	ldp	x29, x30, [sp], #48
     fd8:	ret

0000000000000fdc <ext2fs_dir_block_csum_set>:
     fdc:	stp	x29, x30, [sp, #-48]!
     fe0:	mov	x29, sp
     fe4:	str	x0, [sp, #40]
     fe8:	str	w1, [sp, #36]
     fec:	str	x2, [sp, #24]
     ff0:	ldr	x0, [sp, #40]
     ff4:	ldr	x0, [x0, #32]
     ff8:	bl	28 <ext2fs_has_feature_metadata_csum>
     ffc:	cmp	w0, #0x0
    1000:	b.ne	100c <ext2fs_dir_block_csum_set+0x30>  // b.any
    1004:	mov	x0, #0x0                   	// #0
    1008:	b	1094 <ext2fs_dir_block_csum_set+0xb8>
    100c:	mov	w3, #0x1                   	// #1
    1010:	mov	x2, #0x0                   	// #0
    1014:	ldr	x1, [sp, #24]
    1018:	ldr	x0, [sp, #40]
    101c:	bl	824 <__get_dirent_tail>
    1020:	cmp	x0, #0x0
    1024:	b.ne	103c <ext2fs_dir_block_csum_set+0x60>  // b.any
    1028:	ldr	x2, [sp, #24]
    102c:	ldr	w1, [sp, #36]
    1030:	ldr	x0, [sp, #40]
    1034:	bl	b54 <ext2fs_dirent_csum_set>
    1038:	b	1094 <ext2fs_dir_block_csum_set+0xb8>
    103c:	mov	w4, #0x1                   	// #1
    1040:	mov	x3, #0x0                   	// #0
    1044:	mov	x2, #0x0                   	// #0
    1048:	ldr	x1, [sp, #24]
    104c:	ldr	x0, [sp, #40]
    1050:	bl	5c8 <__get_dx_countlimit>
    1054:	cmp	x0, #0x0
    1058:	b.ne	1070 <ext2fs_dir_block_csum_set+0x94>  // b.any
    105c:	ldr	x2, [sp, #24]
    1060:	ldr	w1, [sp, #36]
    1064:	ldr	x0, [sp, #40]
    1068:	bl	e30 <ext2fs_dx_csum_set>
    106c:	b	1094 <ext2fs_dir_block_csum_set+0xb8>
    1070:	ldr	x0, [sp, #40]
    1074:	ldr	w0, [x0, #16]
    1078:	and	w0, w0, #0x200000
    107c:	cmp	w0, #0x0
    1080:	b.eq	108c <ext2fs_dir_block_csum_set+0xb0>  // b.none
    1084:	mov	x0, #0x0                   	// #0
    1088:	b	1094 <ext2fs_dir_block_csum_set+0xb8>
    108c:	mov	x0, #0xb795                	// #46997
    1090:	movk	x0, #0x7f2b, lsl #16
    1094:	ldp	x29, x30, [sp], #48
    1098:	ret

000000000000109c <get_extent_tail>:
    109c:	sub	sp, sp, #0x10
    10a0:	str	x0, [sp, #8]
    10a4:	ldr	x0, [sp, #8]
    10a8:	ldrh	w0, [x0, #4]
    10ac:	and	x0, x0, #0xffff
    10b0:	add	x1, x0, #0x1
    10b4:	mov	x0, x1
    10b8:	lsl	x0, x0, #1
    10bc:	add	x0, x0, x1
    10c0:	lsl	x0, x0, #2
    10c4:	mov	x1, x0
    10c8:	ldr	x0, [sp, #8]
    10cc:	add	x0, x0, x1
    10d0:	add	sp, sp, #0x10
    10d4:	ret

00000000000010d8 <ext2fs_extent_block_csum>:
    10d8:	stp	x29, x30, [sp, #-208]!
    10dc:	mov	x29, sp
    10e0:	str	x0, [sp, #40]
    10e4:	str	w1, [sp, #36]
    10e8:	str	x2, [sp, #24]
    10ec:	str	x3, [sp, #16]
    10f0:	ldr	x0, [sp, #24]
    10f4:	ldrh	w0, [x0, #4]
    10f8:	and	x0, x0, #0xffff
    10fc:	add	x0, x0, #0x1
    1100:	mov	w1, w0
    1104:	mov	w0, w1
    1108:	lsl	w0, w0, #1
    110c:	add	w0, w0, w1
    1110:	lsl	w0, w0, #2
    1114:	str	w0, [sp, #204]
    1118:	ldr	w0, [sp, #36]
    111c:	add	x1, sp, #0x38
    1120:	mov	x2, x1
    1124:	mov	w1, w0
    1128:	ldr	x0, [sp, #40]
    112c:	bl	0 <ext2fs_read_inode>
    1130:	str	x0, [sp, #192]
    1134:	ldr	x0, [sp, #192]
    1138:	cmp	x0, #0x0
    113c:	b.eq	1148 <ext2fs_extent_block_csum+0x70>  // b.none
    1140:	ldr	x0, [sp, #192]
    1144:	b	11c0 <ext2fs_extent_block_csum+0xe8>
    1148:	ldr	w0, [sp, #36]
    114c:	str	w0, [sp, #36]
    1150:	ldr	w0, [sp, #156]
    1154:	str	w0, [sp, #188]
    1158:	ldr	x0, [sp, #40]
    115c:	ldr	w0, [x0, #312]
    1160:	add	x1, sp, #0x24
    1164:	mov	x2, #0x4                   	// #4
    1168:	bl	0 <ext2fs_crc32c_le>
    116c:	mov	w1, w0
    1170:	ldr	x0, [sp, #16]
    1174:	str	w1, [x0]
    1178:	ldr	x0, [sp, #16]
    117c:	ldr	w0, [x0]
    1180:	add	x1, sp, #0xbc
    1184:	mov	x2, #0x4                   	// #4
    1188:	bl	0 <ext2fs_crc32c_le>
    118c:	mov	w1, w0
    1190:	ldr	x0, [sp, #16]
    1194:	str	w1, [x0]
    1198:	ldr	x0, [sp, #16]
    119c:	ldr	w0, [x0]
    11a0:	ldrsw	x1, [sp, #204]
    11a4:	mov	x2, x1
    11a8:	ldr	x1, [sp, #24]
    11ac:	bl	0 <ext2fs_crc32c_le>
    11b0:	mov	w1, w0
    11b4:	ldr	x0, [sp, #16]
    11b8:	str	w1, [x0]
    11bc:	mov	x0, #0x0                   	// #0
    11c0:	ldp	x29, x30, [sp], #208
    11c4:	ret

00000000000011c8 <ext2fs_extent_block_csum_verify>:
    11c8:	stp	x29, x30, [sp, #-80]!
    11cc:	mov	x29, sp
    11d0:	str	x0, [sp, #40]
    11d4:	str	w1, [sp, #36]
    11d8:	str	x2, [sp, #24]
    11dc:	ldr	x0, [sp, #24]
    11e0:	bl	109c <get_extent_tail>
    11e4:	str	x0, [sp, #72]
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	x0, [x0, #32]
    11f0:	bl	28 <ext2fs_has_feature_metadata_csum>
    11f4:	cmp	w0, #0x0
    11f8:	b.ne	1204 <ext2fs_extent_block_csum_verify+0x3c>  // b.any
    11fc:	mov	w0, #0x1                   	// #1
    1200:	b	1254 <ext2fs_extent_block_csum_verify+0x8c>
    1204:	ldr	x0, [sp, #72]
    1208:	ldr	w0, [x0]
    120c:	str	w0, [sp, #68]
    1210:	add	x0, sp, #0x34
    1214:	mov	x3, x0
    1218:	ldr	x2, [sp, #24]
    121c:	ldr	w1, [sp, #36]
    1220:	ldr	x0, [sp, #40]
    1224:	bl	10d8 <ext2fs_extent_block_csum>
    1228:	str	x0, [sp, #56]
    122c:	ldr	x0, [sp, #56]
    1230:	cmp	x0, #0x0
    1234:	b.eq	1240 <ext2fs_extent_block_csum_verify+0x78>  // b.none
    1238:	mov	w0, #0x0                   	// #0
    123c:	b	1254 <ext2fs_extent_block_csum_verify+0x8c>
    1240:	ldr	w0, [sp, #52]
    1244:	ldr	w1, [sp, #68]
    1248:	cmp	w1, w0
    124c:	cset	w0, eq  // eq = none
    1250:	and	w0, w0, #0xff
    1254:	ldp	x29, x30, [sp], #80
    1258:	ret

000000000000125c <ext2fs_extent_block_csum_set>:
    125c:	stp	x29, x30, [sp, #-80]!
    1260:	mov	x29, sp
    1264:	str	x0, [sp, #40]
    1268:	str	w1, [sp, #36]
    126c:	str	x2, [sp, #24]
    1270:	ldr	x0, [sp, #24]
    1274:	bl	109c <get_extent_tail>
    1278:	str	x0, [sp, #72]
    127c:	ldr	x0, [sp, #40]
    1280:	ldr	x0, [x0, #32]
    1284:	bl	28 <ext2fs_has_feature_metadata_csum>
    1288:	cmp	w0, #0x0
    128c:	b.ne	1298 <ext2fs_extent_block_csum_set+0x3c>  // b.any
    1290:	mov	x0, #0x0                   	// #0
    1294:	b	12d8 <ext2fs_extent_block_csum_set+0x7c>
    1298:	add	x0, sp, #0x3c
    129c:	mov	x3, x0
    12a0:	ldr	x2, [sp, #24]
    12a4:	ldr	w1, [sp, #36]
    12a8:	ldr	x0, [sp, #40]
    12ac:	bl	10d8 <ext2fs_extent_block_csum>
    12b0:	str	x0, [sp, #64]
    12b4:	ldr	x0, [sp, #64]
    12b8:	cmp	x0, #0x0
    12bc:	b.eq	12c8 <ext2fs_extent_block_csum_set+0x6c>  // b.none
    12c0:	ldr	x0, [sp, #64]
    12c4:	b	12d8 <ext2fs_extent_block_csum_set+0x7c>
    12c8:	ldr	w1, [sp, #60]
    12cc:	ldr	x0, [sp, #72]
    12d0:	str	w1, [x0]
    12d4:	ldr	x0, [sp, #64]
    12d8:	ldp	x29, x30, [sp], #80
    12dc:	ret

00000000000012e0 <ext2fs_inode_bitmap_csum_verify>:
    12e0:	stp	x29, x30, [sp, #-64]!
    12e4:	mov	x29, sp
    12e8:	str	x0, [sp, #40]
    12ec:	str	w1, [sp, #36]
    12f0:	str	x2, [sp, #24]
    12f4:	str	w3, [sp, #32]
    12f8:	ldr	x0, [sp, #40]
    12fc:	ldr	x0, [x0, #64]
    1300:	ldr	w2, [sp, #36]
    1304:	mov	x1, x0
    1308:	ldr	x0, [sp, #40]
    130c:	bl	0 <ext2fs_group_desc>
    1310:	str	x0, [sp, #48]
    1314:	ldr	x0, [sp, #40]
    1318:	ldr	x0, [x0, #32]
    131c:	bl	28 <ext2fs_has_feature_metadata_csum>
    1320:	cmp	w0, #0x0
    1324:	b.ne	1330 <ext2fs_inode_bitmap_csum_verify+0x50>  // b.any
    1328:	mov	w0, #0x1                   	// #1
    132c:	b	13c0 <ext2fs_inode_bitmap_csum_verify+0xe0>
    1330:	ldr	x0, [sp, #48]
    1334:	ldrh	w0, [x0, #26]
    1338:	str	w0, [sp, #60]
    133c:	ldr	x0, [sp, #40]
    1340:	ldr	w0, [x0, #312]
    1344:	ldrsw	x1, [sp, #32]
    1348:	mov	x2, x1
    134c:	ldr	x1, [sp, #24]
    1350:	bl	0 <ext2fs_crc32c_le>
    1354:	str	w0, [sp, #56]
    1358:	ldr	x0, [sp, #40]
    135c:	ldr	x0, [x0, #32]
    1360:	ldr	w0, [x0, #96]
    1364:	and	w0, w0, #0x80
    1368:	cmp	w0, #0x0
    136c:	b.eq	13a0 <ext2fs_inode_bitmap_csum_verify+0xc0>  // b.none
    1370:	ldr	x0, [sp, #40]
    1374:	ldr	x0, [x0, #32]
    1378:	ldrh	w0, [x0, #254]
    137c:	cmp	w0, #0x3b
    1380:	b.ls	13a0 <ext2fs_inode_bitmap_csum_verify+0xc0>  // b.plast
    1384:	ldr	x0, [sp, #48]
    1388:	ldrh	w0, [x0, #58]
    138c:	lsl	w0, w0, #16
    1390:	ldr	w1, [sp, #60]
    1394:	orr	w0, w1, w0
    1398:	str	w0, [sp, #60]
    139c:	b	13ac <ext2fs_inode_bitmap_csum_verify+0xcc>
    13a0:	ldr	w0, [sp, #56]
    13a4:	and	w0, w0, #0xffff
    13a8:	str	w0, [sp, #56]
    13ac:	ldr	w1, [sp, #60]
    13b0:	ldr	w0, [sp, #56]
    13b4:	cmp	w1, w0
    13b8:	cset	w0, eq  // eq = none
    13bc:	and	w0, w0, #0xff
    13c0:	ldp	x29, x30, [sp], #64
    13c4:	ret

00000000000013c8 <ext2fs_inode_bitmap_csum_set>:
    13c8:	stp	x29, x30, [sp, #-64]!
    13cc:	mov	x29, sp
    13d0:	str	x0, [sp, #40]
    13d4:	str	w1, [sp, #36]
    13d8:	str	x2, [sp, #24]
    13dc:	str	w3, [sp, #32]
    13e0:	ldr	x0, [sp, #40]
    13e4:	ldr	x0, [x0, #64]
    13e8:	ldr	w2, [sp, #36]
    13ec:	mov	x1, x0
    13f0:	ldr	x0, [sp, #40]
    13f4:	bl	0 <ext2fs_group_desc>
    13f8:	str	x0, [sp, #56]
    13fc:	ldr	x0, [sp, #40]
    1400:	ldr	x0, [x0, #32]
    1404:	bl	28 <ext2fs_has_feature_metadata_csum>
    1408:	cmp	w0, #0x0
    140c:	b.ne	1418 <ext2fs_inode_bitmap_csum_set+0x50>  // b.any
    1410:	mov	x0, #0x0                   	// #0
    1414:	b	1488 <ext2fs_inode_bitmap_csum_set+0xc0>
    1418:	ldr	x0, [sp, #40]
    141c:	ldr	w0, [x0, #312]
    1420:	ldrsw	x1, [sp, #32]
    1424:	mov	x2, x1
    1428:	ldr	x1, [sp, #24]
    142c:	bl	0 <ext2fs_crc32c_le>
    1430:	str	w0, [sp, #52]
    1434:	ldr	w0, [sp, #52]
    1438:	and	w1, w0, #0xffff
    143c:	ldr	x0, [sp, #56]
    1440:	strh	w1, [x0, #26]
    1444:	ldr	x0, [sp, #40]
    1448:	ldr	x0, [x0, #32]
    144c:	ldr	w0, [x0, #96]
    1450:	and	w0, w0, #0x80
    1454:	cmp	w0, #0x0
    1458:	b.eq	1484 <ext2fs_inode_bitmap_csum_set+0xbc>  // b.none
    145c:	ldr	x0, [sp, #40]
    1460:	ldr	x0, [x0, #32]
    1464:	ldrh	w0, [x0, #254]
    1468:	cmp	w0, #0x3b
    146c:	b.ls	1484 <ext2fs_inode_bitmap_csum_set+0xbc>  // b.plast
    1470:	ldr	w0, [sp, #52]
    1474:	lsr	w0, w0, #16
    1478:	and	w1, w0, #0xffff
    147c:	ldr	x0, [sp, #56]
    1480:	strh	w1, [x0, #58]
    1484:	mov	x0, #0x0                   	// #0
    1488:	ldp	x29, x30, [sp], #64
    148c:	ret

0000000000001490 <ext2fs_block_bitmap_csum_verify>:
    1490:	stp	x29, x30, [sp, #-64]!
    1494:	mov	x29, sp
    1498:	str	x0, [sp, #40]
    149c:	str	w1, [sp, #36]
    14a0:	str	x2, [sp, #24]
    14a4:	str	w3, [sp, #32]
    14a8:	ldr	x0, [sp, #40]
    14ac:	ldr	x0, [x0, #64]
    14b0:	ldr	w2, [sp, #36]
    14b4:	mov	x1, x0
    14b8:	ldr	x0, [sp, #40]
    14bc:	bl	0 <ext2fs_group_desc>
    14c0:	str	x0, [sp, #48]
    14c4:	ldr	x0, [sp, #40]
    14c8:	ldr	x0, [x0, #32]
    14cc:	bl	28 <ext2fs_has_feature_metadata_csum>
    14d0:	cmp	w0, #0x0
    14d4:	b.ne	14e0 <ext2fs_block_bitmap_csum_verify+0x50>  // b.any
    14d8:	mov	w0, #0x1                   	// #1
    14dc:	b	1570 <ext2fs_block_bitmap_csum_verify+0xe0>
    14e0:	ldr	x0, [sp, #48]
    14e4:	ldrh	w0, [x0, #24]
    14e8:	str	w0, [sp, #60]
    14ec:	ldr	x0, [sp, #40]
    14f0:	ldr	w0, [x0, #312]
    14f4:	ldrsw	x1, [sp, #32]
    14f8:	mov	x2, x1
    14fc:	ldr	x1, [sp, #24]
    1500:	bl	0 <ext2fs_crc32c_le>
    1504:	str	w0, [sp, #56]
    1508:	ldr	x0, [sp, #40]
    150c:	ldr	x0, [x0, #32]
    1510:	ldr	w0, [x0, #96]
    1514:	and	w0, w0, #0x80
    1518:	cmp	w0, #0x0
    151c:	b.eq	1550 <ext2fs_block_bitmap_csum_verify+0xc0>  // b.none
    1520:	ldr	x0, [sp, #40]
    1524:	ldr	x0, [x0, #32]
    1528:	ldrh	w0, [x0, #254]
    152c:	cmp	w0, #0x39
    1530:	b.ls	1550 <ext2fs_block_bitmap_csum_verify+0xc0>  // b.plast
    1534:	ldr	x0, [sp, #48]
    1538:	ldrh	w0, [x0, #56]
    153c:	lsl	w0, w0, #16
    1540:	ldr	w1, [sp, #60]
    1544:	orr	w0, w1, w0
    1548:	str	w0, [sp, #60]
    154c:	b	155c <ext2fs_block_bitmap_csum_verify+0xcc>
    1550:	ldr	w0, [sp, #56]
    1554:	and	w0, w0, #0xffff
    1558:	str	w0, [sp, #56]
    155c:	ldr	w1, [sp, #60]
    1560:	ldr	w0, [sp, #56]
    1564:	cmp	w1, w0
    1568:	cset	w0, eq  // eq = none
    156c:	and	w0, w0, #0xff
    1570:	ldp	x29, x30, [sp], #64
    1574:	ret

0000000000001578 <ext2fs_block_bitmap_csum_set>:
    1578:	stp	x29, x30, [sp, #-64]!
    157c:	mov	x29, sp
    1580:	str	x0, [sp, #40]
    1584:	str	w1, [sp, #36]
    1588:	str	x2, [sp, #24]
    158c:	str	w3, [sp, #32]
    1590:	ldr	x0, [sp, #40]
    1594:	ldr	x0, [x0, #64]
    1598:	ldr	w2, [sp, #36]
    159c:	mov	x1, x0
    15a0:	ldr	x0, [sp, #40]
    15a4:	bl	0 <ext2fs_group_desc>
    15a8:	str	x0, [sp, #56]
    15ac:	ldr	x0, [sp, #40]
    15b0:	ldr	x0, [x0, #32]
    15b4:	bl	28 <ext2fs_has_feature_metadata_csum>
    15b8:	cmp	w0, #0x0
    15bc:	b.ne	15c8 <ext2fs_block_bitmap_csum_set+0x50>  // b.any
    15c0:	mov	x0, #0x0                   	// #0
    15c4:	b	1638 <ext2fs_block_bitmap_csum_set+0xc0>
    15c8:	ldr	x0, [sp, #40]
    15cc:	ldr	w0, [x0, #312]
    15d0:	ldrsw	x1, [sp, #32]
    15d4:	mov	x2, x1
    15d8:	ldr	x1, [sp, #24]
    15dc:	bl	0 <ext2fs_crc32c_le>
    15e0:	str	w0, [sp, #52]
    15e4:	ldr	w0, [sp, #52]
    15e8:	and	w1, w0, #0xffff
    15ec:	ldr	x0, [sp, #56]
    15f0:	strh	w1, [x0, #24]
    15f4:	ldr	x0, [sp, #40]
    15f8:	ldr	x0, [x0, #32]
    15fc:	ldr	w0, [x0, #96]
    1600:	and	w0, w0, #0x80
    1604:	cmp	w0, #0x0
    1608:	b.eq	1634 <ext2fs_block_bitmap_csum_set+0xbc>  // b.none
    160c:	ldr	x0, [sp, #40]
    1610:	ldr	x0, [x0, #32]
    1614:	ldrh	w0, [x0, #254]
    1618:	cmp	w0, #0x39
    161c:	b.ls	1634 <ext2fs_block_bitmap_csum_set+0xbc>  // b.plast
    1620:	ldr	w0, [sp, #52]
    1624:	lsr	w0, w0, #16
    1628:	and	w1, w0, #0xffff
    162c:	ldr	x0, [sp, #56]
    1630:	strh	w1, [x0, #56]
    1634:	mov	x0, #0x0                   	// #0
    1638:	ldp	x29, x30, [sp], #64
    163c:	ret

0000000000001640 <ext2fs_inode_csum>:
    1640:	stp	x29, x30, [sp, #-80]!
    1644:	mov	x29, sp
    1648:	str	x0, [sp, #40]
    164c:	str	w1, [sp, #36]
    1650:	str	x2, [sp, #24]
    1654:	str	x3, [sp, #16]
    1658:	str	w4, [sp, #32]
    165c:	ldr	x0, [sp, #24]
    1660:	str	x0, [sp, #64]
    1664:	ldr	x0, [sp, #40]
    1668:	ldr	x0, [x0, #32]
    166c:	ldr	w0, [x0, #76]
    1670:	cmp	w0, #0x0
    1674:	b.eq	168c <ext2fs_inode_csum+0x4c>  // b.none
    1678:	ldr	x0, [sp, #40]
    167c:	ldr	x0, [x0, #32]
    1680:	ldrh	w0, [x0, #88]
    1684:	and	x0, x0, #0xffff
    1688:	b	1690 <ext2fs_inode_csum+0x50>
    168c:	mov	x0, #0x80                  	// #128
    1690:	str	x0, [sp, #56]
    1694:	strh	wzr, [sp, #78]
    1698:	ldr	x0, [sp, #24]
    169c:	ldrh	w0, [x0, #124]
    16a0:	strh	w0, [sp, #54]
    16a4:	ldr	x0, [sp, #24]
    16a8:	strh	wzr, [x0, #124]
    16ac:	ldr	w0, [sp, #32]
    16b0:	cmp	w0, #0x0
    16b4:	b.eq	16cc <ext2fs_inode_csum+0x8c>  // b.none
    16b8:	ldr	x0, [sp, #24]
    16bc:	ldrh	w0, [x0, #130]
    16c0:	strh	w0, [sp, #78]
    16c4:	ldr	x0, [sp, #24]
    16c8:	strh	wzr, [x0, #130]
    16cc:	ldr	w0, [sp, #36]
    16d0:	str	w0, [sp, #36]
    16d4:	ldr	x0, [sp, #24]
    16d8:	ldr	w0, [x0, #100]
    16dc:	str	w0, [sp, #48]
    16e0:	ldr	x0, [sp, #40]
    16e4:	ldr	w0, [x0, #312]
    16e8:	add	x1, sp, #0x24
    16ec:	mov	x2, #0x4                   	// #4
    16f0:	bl	0 <ext2fs_crc32c_le>
    16f4:	mov	w1, w0
    16f8:	ldr	x0, [sp, #16]
    16fc:	str	w1, [x0]
    1700:	ldr	x0, [sp, #16]
    1704:	ldr	w0, [x0]
    1708:	add	x1, sp, #0x30
    170c:	mov	x2, #0x4                   	// #4
    1710:	bl	0 <ext2fs_crc32c_le>
    1714:	mov	w1, w0
    1718:	ldr	x0, [sp, #16]
    171c:	str	w1, [x0]
    1720:	ldr	x0, [sp, #16]
    1724:	ldr	w0, [x0]
    1728:	ldr	x2, [sp, #56]
    172c:	ldr	x1, [sp, #64]
    1730:	bl	0 <ext2fs_crc32c_le>
    1734:	mov	w1, w0
    1738:	ldr	x0, [sp, #16]
    173c:	str	w1, [x0]
    1740:	ldr	x0, [sp, #24]
    1744:	ldrh	w1, [sp, #54]
    1748:	strh	w1, [x0, #124]
    174c:	ldr	w0, [sp, #32]
    1750:	cmp	w0, #0x0
    1754:	b.eq	1764 <ext2fs_inode_csum+0x124>  // b.none
    1758:	ldr	x0, [sp, #24]
    175c:	ldrh	w1, [sp, #78]
    1760:	strh	w1, [x0, #130]
    1764:	mov	x0, #0x0                   	// #0
    1768:	ldp	x29, x30, [sp], #80
    176c:	ret

0000000000001770 <ext2fs_inode_csum_verify>:
    1770:	stp	x29, x30, [sp, #-96]!
    1774:	mov	x29, sp
    1778:	str	x0, [sp, #40]
    177c:	str	w1, [sp, #36]
    1780:	str	x2, [sp, #24]
    1784:	ldr	x0, [sp, #40]
    1788:	ldr	x0, [x0, #32]
    178c:	bl	28 <ext2fs_has_feature_metadata_csum>
    1790:	cmp	w0, #0x0
    1794:	b.ne	17a0 <ext2fs_inode_csum_verify+0x30>  // b.any
    1798:	mov	w0, #0x1                   	// #1
    179c:	b	18d0 <ext2fs_inode_csum_verify+0x160>
    17a0:	ldr	x0, [sp, #40]
    17a4:	ldr	x0, [x0, #32]
    17a8:	ldr	w0, [x0, #76]
    17ac:	cmp	w0, #0x0
    17b0:	b.eq	17e0 <ext2fs_inode_csum_verify+0x70>  // b.none
    17b4:	ldr	x0, [sp, #40]
    17b8:	ldr	x0, [x0, #32]
    17bc:	ldrh	w0, [x0, #88]
    17c0:	cmp	w0, #0x80
    17c4:	b.ls	17e0 <ext2fs_inode_csum_verify+0x70>  // b.plast
    17c8:	ldr	x0, [sp, #24]
    17cc:	ldrh	w0, [x0, #128]
    17d0:	cmp	w0, #0x3
    17d4:	b.ls	17e0 <ext2fs_inode_csum_verify+0x70>  // b.plast
    17d8:	mov	w0, #0x1                   	// #1
    17dc:	b	17e4 <ext2fs_inode_csum_verify+0x74>
    17e0:	mov	w0, #0x0                   	// #0
    17e4:	str	w0, [sp, #76]
    17e8:	ldr	x0, [sp, #24]
    17ec:	ldrh	w0, [x0, #124]
    17f0:	str	w0, [sp, #92]
    17f4:	ldr	w1, [sp, #76]
    17f8:	add	x0, sp, #0x38
    17fc:	mov	w4, w1
    1800:	mov	x3, x0
    1804:	ldr	x2, [sp, #24]
    1808:	ldr	w1, [sp, #36]
    180c:	ldr	x0, [sp, #40]
    1810:	bl	1640 <ext2fs_inode_csum>
    1814:	str	x0, [sp, #64]
    1818:	ldr	x0, [sp, #64]
    181c:	cmp	x0, #0x0
    1820:	b.eq	182c <ext2fs_inode_csum_verify+0xbc>  // b.none
    1824:	mov	w0, #0x0                   	// #0
    1828:	b	18d0 <ext2fs_inode_csum_verify+0x160>
    182c:	ldr	w0, [sp, #76]
    1830:	cmp	w0, #0x0
    1834:	b.eq	185c <ext2fs_inode_csum_verify+0xec>  // b.none
    1838:	ldr	x0, [sp, #24]
    183c:	ldrh	w0, [x0, #130]
    1840:	str	w0, [sp, #60]
    1844:	ldr	w0, [sp, #60]
    1848:	lsl	w0, w0, #16
    184c:	ldr	w1, [sp, #92]
    1850:	orr	w0, w1, w0
    1854:	str	w0, [sp, #92]
    1858:	b	1868 <ext2fs_inode_csum_verify+0xf8>
    185c:	ldr	w0, [sp, #56]
    1860:	and	w0, w0, #0xffff
    1864:	str	w0, [sp, #56]
    1868:	ldr	w0, [sp, #56]
    186c:	ldr	w1, [sp, #92]
    1870:	cmp	w1, w0
    1874:	b.ne	1880 <ext2fs_inode_csum_verify+0x110>  // b.any
    1878:	mov	w0, #0x1                   	// #1
    187c:	b	18d0 <ext2fs_inode_csum_verify+0x160>
    1880:	ldr	x0, [sp, #24]
    1884:	str	x0, [sp, #80]
    1888:	str	wzr, [sp, #88]
    188c:	b	18c0 <ext2fs_inode_csum_verify+0x150>
    1890:	ldr	x0, [sp, #80]
    1894:	ldrb	w0, [x0]
    1898:	cmp	w0, #0x0
    189c:	b.eq	18a8 <ext2fs_inode_csum_verify+0x138>  // b.none
    18a0:	mov	w0, #0x0                   	// #0
    18a4:	b	18d0 <ext2fs_inode_csum_verify+0x160>
    18a8:	ldr	x0, [sp, #80]
    18ac:	add	x0, x0, #0x1
    18b0:	str	x0, [sp, #80]
    18b4:	ldr	w0, [sp, #88]
    18b8:	add	w0, w0, #0x1
    18bc:	str	w0, [sp, #88]
    18c0:	ldr	w0, [sp, #88]
    18c4:	cmp	w0, #0x7f
    18c8:	b.ls	1890 <ext2fs_inode_csum_verify+0x120>  // b.plast
    18cc:	mov	w0, #0x1                   	// #1
    18d0:	ldp	x29, x30, [sp], #96
    18d4:	ret

00000000000018d8 <ext2fs_inode_csum_set>:
    18d8:	stp	x29, x30, [sp, #-80]!
    18dc:	mov	x29, sp
    18e0:	str	x0, [sp, #40]
    18e4:	str	w1, [sp, #36]
    18e8:	str	x2, [sp, #24]
    18ec:	ldr	x0, [sp, #40]
    18f0:	ldr	x0, [x0, #32]
    18f4:	bl	28 <ext2fs_has_feature_metadata_csum>
    18f8:	cmp	w0, #0x0
    18fc:	b.ne	1908 <ext2fs_inode_csum_set+0x30>  // b.any
    1900:	mov	x0, #0x0                   	// #0
    1904:	b	19b8 <ext2fs_inode_csum_set+0xe0>
    1908:	ldr	x0, [sp, #40]
    190c:	ldr	x0, [x0, #32]
    1910:	ldr	w0, [x0, #76]
    1914:	cmp	w0, #0x0
    1918:	b.eq	1948 <ext2fs_inode_csum_set+0x70>  // b.none
    191c:	ldr	x0, [sp, #40]
    1920:	ldr	x0, [x0, #32]
    1924:	ldrh	w0, [x0, #88]
    1928:	cmp	w0, #0x80
    192c:	b.ls	1948 <ext2fs_inode_csum_set+0x70>  // b.plast
    1930:	ldr	x0, [sp, #24]
    1934:	ldrh	w0, [x0, #128]
    1938:	cmp	w0, #0x3
    193c:	b.ls	1948 <ext2fs_inode_csum_set+0x70>  // b.plast
    1940:	mov	w0, #0x1                   	// #1
    1944:	b	194c <ext2fs_inode_csum_set+0x74>
    1948:	mov	w0, #0x0                   	// #0
    194c:	str	w0, [sp, #76]
    1950:	add	x0, sp, #0x3c
    1954:	ldr	w4, [sp, #76]
    1958:	mov	x3, x0
    195c:	ldr	x2, [sp, #24]
    1960:	ldr	w1, [sp, #36]
    1964:	ldr	x0, [sp, #40]
    1968:	bl	1640 <ext2fs_inode_csum>
    196c:	str	x0, [sp, #64]
    1970:	ldr	x0, [sp, #64]
    1974:	cmp	x0, #0x0
    1978:	b.eq	1984 <ext2fs_inode_csum_set+0xac>  // b.none
    197c:	ldr	x0, [sp, #64]
    1980:	b	19b8 <ext2fs_inode_csum_set+0xe0>
    1984:	ldr	w0, [sp, #60]
    1988:	and	w1, w0, #0xffff
    198c:	ldr	x0, [sp, #24]
    1990:	strh	w1, [x0, #124]
    1994:	ldr	w0, [sp, #76]
    1998:	cmp	w0, #0x0
    199c:	b.eq	19b4 <ext2fs_inode_csum_set+0xdc>  // b.none
    19a0:	ldr	w0, [sp, #60]
    19a4:	lsr	w0, w0, #16
    19a8:	and	w1, w0, #0xffff
    19ac:	ldr	x0, [sp, #24]
    19b0:	strh	w1, [x0, #130]
    19b4:	mov	x0, #0x0                   	// #0
    19b8:	ldp	x29, x30, [sp], #80
    19bc:	ret

00000000000019c0 <ext2fs_group_desc_csum>:
    19c0:	stp	x29, x30, [sp, #-80]!
    19c4:	mov	x29, sp
    19c8:	str	x0, [sp, #24]
    19cc:	str	w1, [sp, #20]
    19d0:	ldr	x0, [sp, #24]
    19d4:	ldr	x0, [x0, #64]
    19d8:	ldr	w1, [sp, #20]
    19dc:	mov	w2, w1
    19e0:	mov	x1, x0
    19e4:	ldr	x0, [sp, #24]
    19e8:	bl	0 <ext2fs_group_desc>
    19ec:	str	x0, [sp, #64]
    19f0:	ldr	x0, [sp, #24]
    19f4:	ldr	x0, [x0, #32]
    19f8:	ldr	w0, [x0, #96]
    19fc:	and	w0, w0, #0x80
    1a00:	cmp	w0, #0x0
    1a04:	b.eq	1a1c <ext2fs_group_desc_csum+0x5c>  // b.none
    1a08:	ldr	x0, [sp, #24]
    1a0c:	ldr	x0, [x0, #32]
    1a10:	ldrh	w0, [x0, #254]
    1a14:	and	x0, x0, #0xffff
    1a18:	b	1a20 <ext2fs_group_desc_csum+0x60>
    1a1c:	mov	x0, #0x20                  	// #32
    1a20:	str	x0, [sp, #56]
    1a24:	strh	wzr, [sp, #78]
    1a28:	ldr	x0, [sp, #24]
    1a2c:	ldr	x0, [x0, #32]
    1a30:	bl	28 <ext2fs_has_feature_metadata_csum>
    1a34:	cmp	w0, #0x0
    1a38:	b.eq	1a94 <ext2fs_group_desc_csum+0xd4>  // b.none
    1a3c:	ldr	x0, [sp, #64]
    1a40:	ldrh	w0, [x0, #30]
    1a44:	strh	w0, [sp, #46]
    1a48:	ldr	x0, [sp, #64]
    1a4c:	strh	wzr, [x0, #30]
    1a50:	ldr	x0, [sp, #24]
    1a54:	ldr	w0, [x0, #312]
    1a58:	add	x1, sp, #0x14
    1a5c:	mov	x2, #0x4                   	// #4
    1a60:	bl	0 <ext2fs_crc32c_le>
    1a64:	str	w0, [sp, #40]
    1a68:	ldr	x2, [sp, #56]
    1a6c:	ldr	x1, [sp, #64]
    1a70:	ldr	w0, [sp, #40]
    1a74:	bl	0 <ext2fs_crc32c_le>
    1a78:	str	w0, [sp, #40]
    1a7c:	ldr	x0, [sp, #64]
    1a80:	ldrh	w1, [sp, #46]
    1a84:	strh	w1, [x0, #30]
    1a88:	ldr	w0, [sp, #40]
    1a8c:	strh	w0, [sp, #78]
    1a90:	b	1b40 <ext2fs_group_desc_csum+0x180>
    1a94:	mov	x0, #0x1e                  	// #30
    1a98:	str	x0, [sp, #48]
    1a9c:	ldr	x0, [sp, #24]
    1aa0:	ldr	x0, [x0, #32]
    1aa4:	add	x0, x0, #0x68
    1aa8:	mov	w2, #0x10                  	// #16
    1aac:	mov	x1, x0
    1ab0:	mov	w0, #0xffffffff            	// #-1
    1ab4:	bl	0 <ext2fs_crc16>
    1ab8:	strh	w0, [sp, #78]
    1abc:	ldrh	w0, [sp, #78]
    1ac0:	add	x1, sp, #0x14
    1ac4:	mov	w2, #0x4                   	// #4
    1ac8:	bl	0 <ext2fs_crc16>
    1acc:	strh	w0, [sp, #78]
    1ad0:	ldrh	w0, [sp, #78]
    1ad4:	ldr	x1, [sp, #48]
    1ad8:	mov	w2, w1
    1adc:	ldr	x1, [sp, #64]
    1ae0:	bl	0 <ext2fs_crc16>
    1ae4:	strh	w0, [sp, #78]
    1ae8:	ldr	x0, [sp, #48]
    1aec:	add	x0, x0, #0x2
    1af0:	str	x0, [sp, #48]
    1af4:	ldr	x1, [sp, #48]
    1af8:	ldr	x0, [sp, #56]
    1afc:	cmp	x1, x0
    1b00:	b.cs	1b3c <ext2fs_group_desc_csum+0x17c>  // b.hs, b.nlast
    1b04:	ldrh	w3, [sp, #78]
    1b08:	ldr	x1, [sp, #64]
    1b0c:	ldr	x0, [sp, #48]
    1b10:	add	x0, x1, x0
    1b14:	ldr	x1, [sp, #56]
    1b18:	mov	w2, w1
    1b1c:	ldr	x1, [sp, #48]
    1b20:	sub	w1, w2, w1
    1b24:	mov	w2, w1
    1b28:	mov	x1, x0
    1b2c:	mov	w0, w3
    1b30:	bl	0 <ext2fs_crc16>
    1b34:	strh	w0, [sp, #78]
    1b38:	b	1b40 <ext2fs_group_desc_csum+0x180>
    1b3c:	nop
    1b40:	ldrh	w0, [sp, #78]
    1b44:	ldp	x29, x30, [sp], #80
    1b48:	ret

0000000000001b4c <ext2fs_group_desc_csum_verify>:
    1b4c:	stp	x29, x30, [sp, #-48]!
    1b50:	mov	x29, sp
    1b54:	str	x19, [sp, #16]
    1b58:	str	x0, [sp, #40]
    1b5c:	str	w1, [sp, #36]
    1b60:	ldr	x0, [sp, #40]
    1b64:	bl	a0 <ext2fs_has_group_desc_csum>
    1b68:	cmp	w0, #0x0
    1b6c:	b.eq	1ba0 <ext2fs_group_desc_csum_verify+0x54>  // b.none
    1b70:	ldr	w1, [sp, #36]
    1b74:	ldr	x0, [sp, #40]
    1b78:	bl	0 <ext2fs_bg_checksum>
    1b7c:	and	w19, w0, #0xffff
    1b80:	ldr	w1, [sp, #36]
    1b84:	ldr	x0, [sp, #40]
    1b88:	bl	19c0 <ext2fs_group_desc_csum>
    1b8c:	and	w0, w0, #0xffff
    1b90:	cmp	w19, w0
    1b94:	b.eq	1ba0 <ext2fs_group_desc_csum_verify+0x54>  // b.none
    1b98:	mov	w0, #0x0                   	// #0
    1b9c:	b	1ba4 <ext2fs_group_desc_csum_verify+0x58>
    1ba0:	mov	w0, #0x1                   	// #1
    1ba4:	ldr	x19, [sp, #16]
    1ba8:	ldp	x29, x30, [sp], #48
    1bac:	ret

0000000000001bb0 <ext2fs_group_desc_csum_set>:
    1bb0:	stp	x29, x30, [sp, #-32]!
    1bb4:	mov	x29, sp
    1bb8:	str	x0, [sp, #24]
    1bbc:	str	w1, [sp, #20]
    1bc0:	ldr	x0, [sp, #24]
    1bc4:	bl	a0 <ext2fs_has_group_desc_csum>
    1bc8:	cmp	w0, #0x0
    1bcc:	b.eq	1bf4 <ext2fs_group_desc_csum_set+0x44>  // b.none
    1bd0:	ldr	w1, [sp, #20]
    1bd4:	ldr	x0, [sp, #24]
    1bd8:	bl	19c0 <ext2fs_group_desc_csum>
    1bdc:	and	w0, w0, #0xffff
    1be0:	mov	w2, w0
    1be4:	ldr	w1, [sp, #20]
    1be8:	ldr	x0, [sp, #24]
    1bec:	bl	0 <ext2fs_bg_checksum_set>
    1bf0:	b	1bf8 <ext2fs_group_desc_csum_set+0x48>
    1bf4:	nop
    1bf8:	ldp	x29, x30, [sp], #32
    1bfc:	ret

0000000000001c00 <find_last_inode_ingrp>:
    1c00:	stp	x29, x30, [sp, #-48]!
    1c04:	mov	x29, sp
    1c08:	str	x0, [sp, #24]
    1c0c:	str	w1, [sp, #20]
    1c10:	str	w2, [sp, #16]
    1c14:	ldr	w1, [sp, #16]
    1c18:	ldr	w0, [sp, #20]
    1c1c:	mul	w0, w1, w0
    1c20:	add	w0, w0, #0x1
    1c24:	str	w0, [sp, #40]
    1c28:	ldr	w1, [sp, #40]
    1c2c:	ldr	w0, [sp, #20]
    1c30:	add	w0, w1, w0
    1c34:	sub	w0, w0, #0x1
    1c38:	str	w0, [sp, #36]
    1c3c:	ldr	w0, [sp, #36]
    1c40:	str	w0, [sp, #44]
    1c44:	b	1c7c <find_last_inode_ingrp+0x7c>
    1c48:	ldr	w1, [sp, #44]
    1c4c:	ldr	x0, [sp, #24]
    1c50:	bl	0 <ext2fs_fast_test_inode_bitmap2>
    1c54:	cmp	w0, #0x0
    1c58:	b.eq	1c70 <find_last_inode_ingrp+0x70>  // b.none
    1c5c:	ldr	w1, [sp, #44]
    1c60:	ldr	w0, [sp, #40]
    1c64:	sub	w0, w1, w0
    1c68:	add	w0, w0, #0x1
    1c6c:	b	1c90 <find_last_inode_ingrp+0x90>
    1c70:	ldr	w0, [sp, #44]
    1c74:	sub	w0, w0, #0x1
    1c78:	str	w0, [sp, #44]
    1c7c:	ldr	w1, [sp, #44]
    1c80:	ldr	w0, [sp, #40]
    1c84:	cmp	w1, w0
    1c88:	b.cs	1c48 <find_last_inode_ingrp+0x48>  // b.hs, b.nlast
    1c8c:	ldr	w0, [sp, #20]
    1c90:	ldp	x29, x30, [sp], #48
    1c94:	ret

0000000000001c98 <ext2fs_set_gdt_csum>:
    1c98:	stp	x29, x30, [sp, #-96]!
    1c9c:	mov	x29, sp
    1ca0:	str	x19, [sp, #16]
    1ca4:	str	x0, [sp, #40]
    1ca8:	ldr	x0, [sp, #40]
    1cac:	ldr	x0, [x0, #32]
    1cb0:	str	x0, [sp, #80]
    1cb4:	str	wzr, [sp, #92]
    1cb8:	ldr	x0, [sp, #40]
    1cbc:	ldr	x0, [x0, #80]
    1cc0:	cmp	x0, #0x0
    1cc4:	b.ne	1cd4 <ext2fs_set_gdt_csum+0x3c>  // b.any
    1cc8:	mov	x0, #0xb727                	// #46887
    1ccc:	movk	x0, #0x7f2b, lsl #16
    1cd0:	b	1ed4 <ext2fs_set_gdt_csum+0x23c>
    1cd4:	ldr	x0, [sp, #40]
    1cd8:	bl	a0 <ext2fs_has_group_desc_csum>
    1cdc:	cmp	w0, #0x0
    1ce0:	b.ne	1cec <ext2fs_set_gdt_csum+0x54>  // b.any
    1ce4:	mov	x0, #0x0                   	// #0
    1ce8:	b	1ed4 <ext2fs_set_gdt_csum+0x23c>
    1cec:	str	wzr, [sp, #88]
    1cf0:	b	1ea8 <ext2fs_set_gdt_csum+0x210>
    1cf4:	ldr	w1, [sp, #88]
    1cf8:	ldr	x0, [sp, #40]
    1cfc:	bl	0 <ext2fs_bg_checksum>
    1d00:	and	w0, w0, #0xffff
    1d04:	str	w0, [sp, #76]
    1d08:	ldr	w1, [sp, #88]
    1d0c:	ldr	x0, [sp, #40]
    1d10:	bl	0 <ext2fs_bg_itable_unused>
    1d14:	str	w0, [sp, #72]
    1d18:	ldr	w1, [sp, #88]
    1d1c:	ldr	x0, [sp, #40]
    1d20:	bl	0 <ext2fs_bg_flags>
    1d24:	and	w0, w0, #0xffff
    1d28:	str	w0, [sp, #68]
    1d2c:	ldr	w1, [sp, #88]
    1d30:	ldr	x0, [sp, #40]
    1d34:	bl	0 <ext2fs_bg_free_inodes_count>
    1d38:	str	w0, [sp, #64]
    1d3c:	ldr	w1, [sp, #88]
    1d40:	ldr	x0, [sp, #40]
    1d44:	bl	0 <ext2fs_bg_free_blocks_count>
    1d48:	str	w0, [sp, #60]
    1d4c:	ldr	x0, [sp, #80]
    1d50:	ldr	w0, [x0, #32]
    1d54:	ldr	w1, [sp, #60]
    1d58:	cmp	w1, w0
    1d5c:	b.ne	1d88 <ext2fs_set_gdt_csum+0xf0>  // b.any
    1d60:	ldr	x0, [sp, #40]
    1d64:	ldr	w0, [x0, #48]
    1d68:	sub	w0, w0, #0x1
    1d6c:	ldr	w1, [sp, #88]
    1d70:	cmp	w1, w0
    1d74:	b.eq	1d88 <ext2fs_set_gdt_csum+0xf0>  // b.none
    1d78:	mov	w2, #0x2                   	// #2
    1d7c:	ldr	w1, [sp, #88]
    1d80:	ldr	x0, [sp, #40]
    1d84:	bl	0 <ext2fs_bg_flags_set>
    1d88:	ldr	x0, [sp, #80]
    1d8c:	ldr	w0, [x0, #40]
    1d90:	ldr	w1, [sp, #64]
    1d94:	cmp	w1, w0
    1d98:	b.ne	1dc8 <ext2fs_set_gdt_csum+0x130>  // b.any
    1d9c:	mov	w2, #0x1                   	// #1
    1da0:	ldr	w1, [sp, #88]
    1da4:	ldr	x0, [sp, #40]
    1da8:	bl	0 <ext2fs_bg_flags_set>
    1dac:	ldr	x0, [sp, #80]
    1db0:	ldr	w0, [x0, #40]
    1db4:	mov	w2, w0
    1db8:	ldr	w1, [sp, #88]
    1dbc:	ldr	x0, [sp, #40]
    1dc0:	bl	0 <ext2fs_bg_itable_unused_set>
    1dc4:	b	1e1c <ext2fs_set_gdt_csum+0x184>
    1dc8:	ldr	x0, [sp, #80]
    1dcc:	ldr	w19, [x0, #40]
    1dd0:	ldr	x0, [sp, #40]
    1dd4:	ldr	x3, [x0, #80]
    1dd8:	ldr	x0, [sp, #80]
    1ddc:	ldr	w0, [x0, #40]
    1de0:	ldr	w2, [sp, #88]
    1de4:	mov	w1, w0
    1de8:	mov	x0, x3
    1dec:	bl	1c00 <find_last_inode_ingrp>
    1df0:	sub	w0, w19, w0
    1df4:	str	w0, [sp, #56]
    1df8:	mov	w2, #0x1                   	// #1
    1dfc:	ldr	w1, [sp, #88]
    1e00:	ldr	x0, [sp, #40]
    1e04:	bl	0 <ext2fs_bg_flags_clear>
    1e08:	ldr	w0, [sp, #56]
    1e0c:	mov	w2, w0
    1e10:	ldr	w1, [sp, #88]
    1e14:	ldr	x0, [sp, #40]
    1e18:	bl	0 <ext2fs_bg_itable_unused_set>
    1e1c:	ldr	w1, [sp, #88]
    1e20:	ldr	x0, [sp, #40]
    1e24:	bl	1bb0 <ext2fs_group_desc_csum_set>
    1e28:	ldr	w1, [sp, #88]
    1e2c:	ldr	x0, [sp, #40]
    1e30:	bl	0 <ext2fs_bg_flags>
    1e34:	and	w0, w0, #0xffff
    1e38:	mov	w1, w0
    1e3c:	ldr	w0, [sp, #68]
    1e40:	cmp	w0, w1
    1e44:	b.eq	1e50 <ext2fs_set_gdt_csum+0x1b8>  // b.none
    1e48:	mov	w0, #0x1                   	// #1
    1e4c:	str	w0, [sp, #92]
    1e50:	ldr	w1, [sp, #88]
    1e54:	ldr	x0, [sp, #40]
    1e58:	bl	0 <ext2fs_bg_itable_unused>
    1e5c:	mov	w1, w0
    1e60:	ldr	w0, [sp, #72]
    1e64:	cmp	w0, w1
    1e68:	b.eq	1e74 <ext2fs_set_gdt_csum+0x1dc>  // b.none
    1e6c:	mov	w0, #0x1                   	// #1
    1e70:	str	w0, [sp, #92]
    1e74:	ldr	w1, [sp, #88]
    1e78:	ldr	x0, [sp, #40]
    1e7c:	bl	0 <ext2fs_bg_checksum>
    1e80:	and	w0, w0, #0xffff
    1e84:	mov	w1, w0
    1e88:	ldr	w0, [sp, #76]
    1e8c:	cmp	w0, w1
    1e90:	b.eq	1e9c <ext2fs_set_gdt_csum+0x204>  // b.none
    1e94:	mov	w0, #0x1                   	// #1
    1e98:	str	w0, [sp, #92]
    1e9c:	ldr	w0, [sp, #88]
    1ea0:	add	w0, w0, #0x1
    1ea4:	str	w0, [sp, #88]
    1ea8:	ldr	x0, [sp, #40]
    1eac:	ldr	w0, [x0, #48]
    1eb0:	ldr	w1, [sp, #88]
    1eb4:	cmp	w1, w0
    1eb8:	b.cc	1cf4 <ext2fs_set_gdt_csum+0x5c>  // b.lo, b.ul, b.last
    1ebc:	ldr	w0, [sp, #92]
    1ec0:	cmp	w0, #0x0
    1ec4:	b.eq	1ed0 <ext2fs_set_gdt_csum+0x238>  // b.none
    1ec8:	ldr	x0, [sp, #40]
    1ecc:	bl	0 <ext2fs_mark_super_dirty>
    1ed0:	mov	x0, #0x0                   	// #0
    1ed4:	ldr	x19, [sp, #16]
    1ed8:	ldp	x29, x30, [sp], #96
    1edc:	ret

dblist.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <make_dblist>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	x3, [sp, #24]
  18:	str	x4, [sp, #16]
  1c:	str	xzr, [sp, #56]
  20:	ldr	x0, [sp, #40]
  24:	ldr	x1, [x0]
  28:	mov	x0, #0xb701                	// #46849
  2c:	movk	x0, #0x7f2b, lsl #16
  30:	cmp	x1, x0
  34:	b.eq	44 <make_dblist+0x44>  // b.none
  38:	mov	x0, #0xb701                	// #46849
  3c:	movk	x0, #0x7f2b, lsl #16
  40:	b	210 <make_dblist+0x210>
  44:	ldr	x0, [sp, #16]
  48:	cmp	x0, #0x0
  4c:	b.ne	84 <make_dblist+0x84>  // b.any
  50:	ldr	x0, [sp, #40]
  54:	ldr	x0, [x0, #144]
  58:	cmp	x0, #0x0
  5c:	b.eq	84 <make_dblist+0x84>  // b.none
  60:	ldr	x0, [sp, #40]
  64:	ldr	x0, [x0, #144]
  68:	ldr	w1, [x0]
  6c:	mov	w0, #0xb70c                	// #46860
  70:	movk	w0, #0x7f2b, lsl #16
  74:	cmp	w1, w0
  78:	b.ne	84 <make_dblist+0x84>  // b.any
  7c:	mov	x0, #0x0                   	// #0
  80:	b	210 <make_dblist+0x210>
  84:	add	x0, sp, #0x38
  88:	mov	x1, x0
  8c:	mov	x0, #0x30                  	// #48
  90:	bl	0 <ext2fs_get_mem>
  94:	str	x0, [sp, #72]
  98:	ldr	x0, [sp, #72]
  9c:	cmp	x0, #0x0
  a0:	b.ne	1e4 <make_dblist+0x1e4>  // b.any
  a4:	ldr	x0, [sp, #56]
  a8:	mov	x2, #0x30                  	// #48
  ac:	mov	w1, #0x0                   	// #0
  b0:	bl	0 <memset>
  b4:	ldr	x0, [sp, #56]
  b8:	mov	w1, #0xb70c                	// #46860
  bc:	movk	w1, #0x7f2b, lsl #16
  c0:	str	w1, [x0]
  c4:	ldr	x0, [sp, #56]
  c8:	ldr	x1, [sp, #40]
  cc:	str	x1, [x0, #8]
  d0:	ldr	w0, [sp, #36]
  d4:	cmp	w0, #0x0
  d8:	b.eq	ec <make_dblist+0xec>  // b.none
  dc:	ldr	x0, [sp, #56]
  e0:	ldr	w1, [sp, #36]
  e4:	str	x1, [x0, #16]
  e8:	b	124 <make_dblist+0x124>
  ec:	add	x0, sp, #0x34
  f0:	mov	x1, x0
  f4:	ldr	x0, [sp, #40]
  f8:	bl	0 <ext2fs_get_num_dirs>
  fc:	str	x0, [sp, #72]
 100:	ldr	x0, [sp, #72]
 104:	cmp	x0, #0x0
 108:	b.ne	1ec <make_dblist+0x1ec>  // b.any
 10c:	ldr	w0, [sp, #52]
 110:	add	w0, w0, #0x6
 114:	lsl	w1, w0, #1
 118:	ldr	x0, [sp, #56]
 11c:	mov	w1, w1
 120:	str	x1, [x0, #16]
 124:	ldr	x0, [sp, #56]
 128:	ldr	x1, [x0, #16]
 12c:	mov	x0, x1
 130:	lsl	x0, x0, #1
 134:	add	x0, x0, x1
 138:	lsl	x0, x0, #3
 13c:	str	x0, [sp, #64]
 140:	ldr	x0, [sp, #56]
 144:	ldr	w1, [sp, #32]
 148:	str	x1, [x0, #24]
 14c:	ldr	x0, [sp, #56]
 150:	ldr	x3, [x0, #16]
 154:	ldr	x0, [sp, #56]
 158:	add	x0, x0, #0x28
 15c:	mov	x2, x0
 160:	mov	x1, #0x18                  	// #24
 164:	mov	x0, x3
 168:	bl	0 <ext2fs_get_array>
 16c:	str	x0, [sp, #72]
 170:	ldr	x0, [sp, #72]
 174:	cmp	x0, #0x0
 178:	b.ne	1f4 <make_dblist+0x1f4>  // b.any
 17c:	ldr	x0, [sp, #24]
 180:	cmp	x0, #0x0
 184:	b.eq	1a0 <make_dblist+0x1a0>  // b.none
 188:	ldr	x0, [sp, #56]
 18c:	ldr	x0, [x0, #40]
 190:	ldr	x2, [sp, #64]
 194:	ldr	x1, [sp, #24]
 198:	bl	0 <memcpy>
 19c:	b	1b4 <make_dblist+0x1b4>
 1a0:	ldr	x0, [sp, #56]
 1a4:	ldr	x0, [x0, #40]
 1a8:	ldr	x2, [sp, #64]
 1ac:	mov	w1, #0x0                   	// #0
 1b0:	bl	0 <memset>
 1b4:	ldr	x0, [sp, #16]
 1b8:	cmp	x0, #0x0
 1bc:	b.eq	1d0 <make_dblist+0x1d0>  // b.none
 1c0:	ldr	x1, [sp, #56]
 1c4:	ldr	x0, [sp, #16]
 1c8:	str	x1, [x0]
 1cc:	b	1dc <make_dblist+0x1dc>
 1d0:	ldr	x1, [sp, #56]
 1d4:	ldr	x0, [sp, #40]
 1d8:	str	x1, [x0, #144]
 1dc:	mov	x0, #0x0                   	// #0
 1e0:	b	210 <make_dblist+0x210>
 1e4:	nop
 1e8:	b	1f8 <make_dblist+0x1f8>
 1ec:	nop
 1f0:	b	1f8 <make_dblist+0x1f8>
 1f4:	nop
 1f8:	ldr	x0, [sp, #56]
 1fc:	cmp	x0, #0x0
 200:	b.eq	20c <make_dblist+0x20c>  // b.none
 204:	add	x0, sp, #0x38
 208:	bl	0 <ext2fs_free_mem>
 20c:	ldr	x0, [sp, #72]
 210:	ldp	x29, x30, [sp], #80
 214:	ret

0000000000000218 <ext2fs_init_dblist>:
 218:	stp	x29, x30, [sp, #-48]!
 21c:	mov	x29, sp
 220:	str	x0, [sp, #24]
 224:	str	x1, [sp, #16]
 228:	add	x0, sp, #0x20
 22c:	mov	x4, x0
 230:	mov	x3, #0x0                   	// #0
 234:	mov	w2, #0x0                   	// #0
 238:	mov	w1, #0x0                   	// #0
 23c:	ldr	x0, [sp, #24]
 240:	bl	0 <make_dblist>
 244:	str	x0, [sp, #40]
 248:	ldr	x0, [sp, #40]
 24c:	cmp	x0, #0x0
 250:	b.eq	25c <ext2fs_init_dblist+0x44>  // b.none
 254:	ldr	x0, [sp, #40]
 258:	b	294 <ext2fs_init_dblist+0x7c>
 25c:	ldr	x0, [sp, #32]
 260:	mov	w1, #0x1                   	// #1
 264:	str	w1, [x0, #32]
 268:	ldr	x0, [sp, #16]
 26c:	cmp	x0, #0x0
 270:	b.eq	284 <ext2fs_init_dblist+0x6c>  // b.none
 274:	ldr	x1, [sp, #32]
 278:	ldr	x0, [sp, #16]
 27c:	str	x1, [x0]
 280:	b	290 <ext2fs_init_dblist+0x78>
 284:	ldr	x1, [sp, #32]
 288:	ldr	x0, [sp, #24]
 28c:	str	x1, [x0, #144]
 290:	mov	x0, #0x0                   	// #0
 294:	ldp	x29, x30, [sp], #48
 298:	ret

000000000000029c <ext2fs_copy_dblist>:
 29c:	stp	x29, x30, [sp, #-48]!
 2a0:	mov	x29, sp
 2a4:	str	x0, [sp, #24]
 2a8:	str	x1, [sp, #16]
 2ac:	ldr	x0, [sp, #24]
 2b0:	ldr	x5, [x0, #8]
 2b4:	ldr	x0, [sp, #24]
 2b8:	ldr	x0, [x0, #16]
 2bc:	mov	w6, w0
 2c0:	ldr	x0, [sp, #24]
 2c4:	ldr	x0, [x0, #24]
 2c8:	mov	w2, w0
 2cc:	ldr	x0, [sp, #24]
 2d0:	ldr	x0, [x0, #40]
 2d4:	add	x1, sp, #0x20
 2d8:	mov	x4, x1
 2dc:	mov	x3, x0
 2e0:	mov	w1, w6
 2e4:	mov	x0, x5
 2e8:	bl	0 <make_dblist>
 2ec:	str	x0, [sp, #40]
 2f0:	ldr	x0, [sp, #40]
 2f4:	cmp	x0, #0x0
 2f8:	b.eq	304 <ext2fs_copy_dblist+0x68>  // b.none
 2fc:	ldr	x0, [sp, #40]
 300:	b	324 <ext2fs_copy_dblist+0x88>
 304:	ldr	x0, [sp, #32]
 308:	ldr	x1, [sp, #24]
 30c:	ldr	w1, [x1, #32]
 310:	str	w1, [x0, #32]
 314:	ldr	x1, [sp, #32]
 318:	ldr	x0, [sp, #16]
 31c:	str	x1, [x0]
 320:	mov	x0, #0x0                   	// #0
 324:	ldp	x29, x30, [sp], #48
 328:	ret

000000000000032c <ext2fs_add_dir_block2>:
 32c:	stp	x29, x30, [sp, #-80]!
 330:	mov	x29, sp
 334:	str	x0, [sp, #40]
 338:	str	w1, [sp, #36]
 33c:	str	x2, [sp, #24]
 340:	str	x3, [sp, #16]
 344:	ldr	x0, [sp, #40]
 348:	ldr	w1, [x0]
 34c:	mov	w0, #0xb70c                	// #46860
 350:	movk	w0, #0x7f2b, lsl #16
 354:	cmp	w1, w0
 358:	b.eq	368 <ext2fs_add_dir_block2+0x3c>  // b.none
 35c:	mov	x0, #0xb70c                	// #46860
 360:	movk	x0, #0x7f2b, lsl #16
 364:	b	49c <ext2fs_add_dir_block2+0x170>
 368:	ldr	x0, [sp, #40]
 36c:	ldr	x1, [x0, #24]
 370:	ldr	x0, [sp, #40]
 374:	ldr	x0, [x0, #16]
 378:	cmp	x1, x0
 37c:	b.cc	438 <ext2fs_add_dir_block2+0x10c>  // b.lo, b.ul, b.last
 380:	ldr	x0, [sp, #40]
 384:	ldr	x1, [x0, #16]
 388:	mov	x0, x1
 38c:	lsl	x0, x0, #1
 390:	add	x0, x0, x1
 394:	lsl	x0, x0, #3
 398:	str	x0, [sp, #72]
 39c:	ldr	x0, [sp, #40]
 3a0:	ldr	x1, [x0, #16]
 3a4:	ldr	x0, [sp, #40]
 3a8:	ldr	x0, [x0, #16]
 3ac:	cmp	x0, #0xc8
 3b0:	b.ls	3c4 <ext2fs_add_dir_block2+0x98>  // b.plast
 3b4:	ldr	x0, [sp, #40]
 3b8:	ldr	x0, [x0, #16]
 3bc:	lsr	x0, x0, #1
 3c0:	b	3c8 <ext2fs_add_dir_block2+0x9c>
 3c4:	mov	x0, #0x64                  	// #100
 3c8:	add	x1, x0, x1
 3cc:	ldr	x0, [sp, #40]
 3d0:	str	x1, [x0, #16]
 3d4:	ldr	x0, [sp, #40]
 3d8:	ldr	x1, [x0, #16]
 3dc:	mov	x0, x1
 3e0:	lsl	x0, x0, #1
 3e4:	add	x0, x0, x1
 3e8:	lsl	x0, x0, #3
 3ec:	mov	x1, x0
 3f0:	ldr	x0, [sp, #40]
 3f4:	add	x0, x0, #0x28
 3f8:	mov	x2, x0
 3fc:	ldr	x0, [sp, #72]
 400:	bl	0 <ext2fs_resize_mem>
 404:	str	x0, [sp, #64]
 408:	ldr	x0, [sp, #64]
 40c:	cmp	x0, #0x0
 410:	b.eq	438 <ext2fs_add_dir_block2+0x10c>  // b.none
 414:	ldr	x1, [sp, #72]
 418:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
 41c:	movk	x0, #0xaaab
 420:	umulh	x0, x1, x0
 424:	lsr	x1, x0, #4
 428:	ldr	x0, [sp, #40]
 42c:	str	x1, [x0, #16]
 430:	ldr	x0, [sp, #64]
 434:	b	49c <ext2fs_add_dir_block2+0x170>
 438:	ldr	x0, [sp, #40]
 43c:	ldr	x2, [x0, #40]
 440:	ldr	x0, [sp, #40]
 444:	ldr	x1, [x0, #24]
 448:	add	x3, x1, #0x1
 44c:	ldr	x0, [sp, #40]
 450:	str	x3, [x0, #24]
 454:	mov	x0, x1
 458:	lsl	x0, x0, #1
 45c:	add	x0, x0, x1
 460:	lsl	x0, x0, #3
 464:	add	x0, x2, x0
 468:	str	x0, [sp, #56]
 46c:	ldr	x0, [sp, #56]
 470:	ldr	x1, [sp, #24]
 474:	str	x1, [x0, #8]
 478:	ldr	x0, [sp, #56]
 47c:	ldr	w1, [sp, #36]
 480:	str	w1, [x0]
 484:	ldr	x0, [sp, #56]
 488:	ldr	x1, [sp, #16]
 48c:	str	x1, [x0, #16]
 490:	ldr	x0, [sp, #40]
 494:	str	wzr, [x0, #32]
 498:	mov	x0, #0x0                   	// #0
 49c:	ldp	x29, x30, [sp], #80
 4a0:	ret

00000000000004a4 <ext2fs_set_dir_block2>:
 4a4:	sub	sp, sp, #0x30
 4a8:	str	x0, [sp, #24]
 4ac:	str	w1, [sp, #20]
 4b0:	str	x2, [sp, #8]
 4b4:	str	x3, [sp]
 4b8:	ldr	x0, [sp, #24]
 4bc:	ldr	w1, [x0]
 4c0:	mov	w0, #0xb70c                	// #46860
 4c4:	movk	w0, #0x7f2b, lsl #16
 4c8:	cmp	w1, w0
 4cc:	b.eq	4dc <ext2fs_set_dir_block2+0x38>  // b.none
 4d0:	mov	x0, #0xb70c                	// #46860
 4d4:	movk	x0, #0x7f2b, lsl #16
 4d8:	b	5a8 <ext2fs_set_dir_block2+0x104>
 4dc:	str	wzr, [sp, #44]
 4e0:	b	58c <ext2fs_set_dir_block2+0xe8>
 4e4:	ldr	x0, [sp, #24]
 4e8:	ldr	x2, [x0, #40]
 4ec:	ldr	w1, [sp, #44]
 4f0:	mov	x0, x1
 4f4:	lsl	x0, x0, #1
 4f8:	add	x0, x0, x1
 4fc:	lsl	x0, x0, #3
 500:	add	x0, x2, x0
 504:	ldr	w0, [x0]
 508:	ldr	w1, [sp, #20]
 50c:	cmp	w1, w0
 510:	b.ne	544 <ext2fs_set_dir_block2+0xa0>  // b.any
 514:	ldr	x0, [sp, #24]
 518:	ldr	x2, [x0, #40]
 51c:	ldr	w1, [sp, #44]
 520:	mov	x0, x1
 524:	lsl	x0, x0, #1
 528:	add	x0, x0, x1
 52c:	lsl	x0, x0, #3
 530:	add	x0, x2, x0
 534:	ldr	x0, [x0, #16]
 538:	ldr	x1, [sp]
 53c:	cmp	x1, x0
 540:	b.eq	554 <ext2fs_set_dir_block2+0xb0>  // b.none
 544:	ldr	w0, [sp, #44]
 548:	add	w0, w0, #0x1
 54c:	str	w0, [sp, #44]
 550:	b	58c <ext2fs_set_dir_block2+0xe8>
 554:	ldr	x0, [sp, #24]
 558:	ldr	x2, [x0, #40]
 55c:	ldr	w1, [sp, #44]
 560:	mov	x0, x1
 564:	lsl	x0, x0, #1
 568:	add	x0, x0, x1
 56c:	lsl	x0, x0, #3
 570:	add	x0, x2, x0
 574:	ldr	x1, [sp, #8]
 578:	str	x1, [x0, #8]
 57c:	ldr	x0, [sp, #24]
 580:	str	wzr, [x0, #32]
 584:	mov	x0, #0x0                   	// #0
 588:	b	5a8 <ext2fs_set_dir_block2+0x104>
 58c:	ldr	w1, [sp, #44]
 590:	ldr	x0, [sp, #24]
 594:	ldr	x0, [x0, #24]
 598:	cmp	x1, x0
 59c:	b.cc	4e4 <ext2fs_set_dir_block2+0x40>  // b.lo, b.ul, b.last
 5a0:	mov	x0, #0xb74e                	// #46926
 5a4:	movk	x0, #0x7f2b, lsl #16
 5a8:	add	sp, sp, #0x30
 5ac:	ret

00000000000005b0 <ext2fs_dblist_sort2>:
 5b0:	stp	x29, x30, [sp, #-32]!
 5b4:	mov	x29, sp
 5b8:	str	x0, [sp, #24]
 5bc:	str	x1, [sp, #16]
 5c0:	ldr	x0, [sp, #16]
 5c4:	cmp	x0, #0x0
 5c8:	b.ne	5d8 <ext2fs_dblist_sort2+0x28>  // b.any
 5cc:	adrp	x0, 0 <make_dblist>
 5d0:	add	x0, x0, #0x0
 5d4:	str	x0, [sp, #16]
 5d8:	ldr	x0, [sp, #24]
 5dc:	ldr	x4, [x0, #40]
 5e0:	ldr	x0, [sp, #24]
 5e4:	ldr	x0, [x0, #24]
 5e8:	ldr	x3, [sp, #16]
 5ec:	mov	x2, #0x18                  	// #24
 5f0:	mov	x1, x0
 5f4:	mov	x0, x4
 5f8:	bl	0 <qsort>
 5fc:	ldr	x0, [sp, #24]
 600:	mov	w1, #0x1                   	// #1
 604:	str	w1, [x0, #32]
 608:	nop
 60c:	ldp	x29, x30, [sp], #32
 610:	ret

0000000000000614 <ext2fs_dblist_iterate3>:
 614:	stp	x29, x30, [sp, #-96]!
 618:	mov	x29, sp
 61c:	str	x0, [sp, #56]
 620:	str	x1, [sp, #48]
 624:	str	x2, [sp, #40]
 628:	str	x3, [sp, #32]
 62c:	str	x4, [sp, #24]
 630:	ldr	x0, [sp, #56]
 634:	ldr	w1, [x0]
 638:	mov	w0, #0xb70c                	// #46860
 63c:	movk	w0, #0x7f2b, lsl #16
 640:	cmp	w1, w0
 644:	b.eq	654 <ext2fs_dblist_iterate3+0x40>  // b.none
 648:	mov	x0, #0xb70c                	// #46860
 64c:	movk	x0, #0x7f2b, lsl #16
 650:	b	724 <ext2fs_dblist_iterate3+0x110>
 654:	ldr	x1, [sp, #40]
 658:	ldr	x0, [sp, #32]
 65c:	add	x0, x1, x0
 660:	str	x0, [sp, #80]
 664:	ldr	x0, [sp, #56]
 668:	ldr	w0, [x0, #32]
 66c:	cmp	w0, #0x0
 670:	b.ne	680 <ext2fs_dblist_iterate3+0x6c>  // b.any
 674:	mov	x1, #0x0                   	// #0
 678:	ldr	x0, [sp, #56]
 67c:	bl	5b0 <ext2fs_dblist_sort2>
 680:	ldr	x0, [sp, #56]
 684:	ldr	x0, [x0, #24]
 688:	ldr	x1, [sp, #80]
 68c:	cmp	x1, x0
 690:	b.ls	6a0 <ext2fs_dblist_iterate3+0x8c>  // b.plast
 694:	ldr	x0, [sp, #56]
 698:	ldr	x0, [x0, #24]
 69c:	str	x0, [sp, #80]
 6a0:	ldr	x0, [sp, #40]
 6a4:	str	x0, [sp, #88]
 6a8:	b	710 <ext2fs_dblist_iterate3+0xfc>
 6ac:	ldr	x0, [sp, #56]
 6b0:	ldr	x4, [x0, #8]
 6b4:	ldr	x0, [sp, #56]
 6b8:	ldr	x2, [x0, #40]
 6bc:	ldr	x1, [sp, #88]
 6c0:	mov	x0, x1
 6c4:	lsl	x0, x0, #1
 6c8:	add	x0, x0, x1
 6cc:	lsl	x0, x0, #3
 6d0:	add	x0, x2, x0
 6d4:	ldr	x3, [sp, #48]
 6d8:	ldr	x2, [sp, #24]
 6dc:	mov	x1, x0
 6e0:	mov	x0, x4
 6e4:	blr	x3
 6e8:	str	w0, [sp, #76]
 6ec:	ldr	w0, [sp, #76]
 6f0:	and	w0, w0, #0x1
 6f4:	cmp	w0, #0x0
 6f8:	b.eq	704 <ext2fs_dblist_iterate3+0xf0>  // b.none
 6fc:	mov	x0, #0x0                   	// #0
 700:	b	724 <ext2fs_dblist_iterate3+0x110>
 704:	ldr	x0, [sp, #88]
 708:	add	x0, x0, #0x1
 70c:	str	x0, [sp, #88]
 710:	ldr	x1, [sp, #88]
 714:	ldr	x0, [sp, #80]
 718:	cmp	x1, x0
 71c:	b.cc	6ac <ext2fs_dblist_iterate3+0x98>  // b.lo, b.ul, b.last
 720:	mov	x0, #0x0                   	// #0
 724:	ldp	x29, x30, [sp], #96
 728:	ret

000000000000072c <ext2fs_dblist_iterate2>:
 72c:	stp	x29, x30, [sp, #-48]!
 730:	mov	x29, sp
 734:	str	x0, [sp, #40]
 738:	str	x1, [sp, #32]
 73c:	str	x2, [sp, #24]
 740:	ldr	x0, [sp, #40]
 744:	ldr	x0, [x0, #24]
 748:	ldr	x4, [sp, #24]
 74c:	mov	x3, x0
 750:	mov	x2, #0x0                   	// #0
 754:	ldr	x1, [sp, #32]
 758:	ldr	x0, [sp, #40]
 75c:	bl	614 <ext2fs_dblist_iterate3>
 760:	ldp	x29, x30, [sp], #48
 764:	ret

0000000000000768 <dir_block_cmp2>:
 768:	sub	sp, sp, #0x20
 76c:	str	x0, [sp, #8]
 770:	str	x1, [sp]
 774:	ldr	x0, [sp, #8]
 778:	str	x0, [sp, #24]
 77c:	ldr	x0, [sp]
 780:	str	x0, [sp, #16]
 784:	ldr	x0, [sp, #24]
 788:	ldr	x1, [x0, #8]
 78c:	ldr	x0, [sp, #16]
 790:	ldr	x0, [x0, #8]
 794:	cmp	x1, x0
 798:	b.eq	7b8 <dir_block_cmp2+0x50>  // b.none
 79c:	ldr	x0, [sp, #24]
 7a0:	ldr	x0, [x0, #8]
 7a4:	mov	w1, w0
 7a8:	ldr	x0, [sp, #16]
 7ac:	ldr	x0, [x0, #8]
 7b0:	sub	w0, w1, w0
 7b4:	b	800 <dir_block_cmp2+0x98>
 7b8:	ldr	x0, [sp, #24]
 7bc:	ldr	w1, [x0]
 7c0:	ldr	x0, [sp, #16]
 7c4:	ldr	w0, [x0]
 7c8:	cmp	w1, w0
 7cc:	b.eq	7e8 <dir_block_cmp2+0x80>  // b.none
 7d0:	ldr	x0, [sp, #24]
 7d4:	ldr	w1, [x0]
 7d8:	ldr	x0, [sp, #16]
 7dc:	ldr	w0, [x0]
 7e0:	sub	w0, w1, w0
 7e4:	b	800 <dir_block_cmp2+0x98>
 7e8:	ldr	x0, [sp, #24]
 7ec:	ldr	x0, [x0, #16]
 7f0:	mov	w1, w0
 7f4:	ldr	x0, [sp, #16]
 7f8:	ldr	x0, [x0, #16]
 7fc:	sub	w0, w1, w0
 800:	add	sp, sp, #0x20
 804:	ret

0000000000000808 <ext2fs_dblist_count2>:
 808:	sub	sp, sp, #0x10
 80c:	str	x0, [sp, #8]
 810:	ldr	x0, [sp, #8]
 814:	ldr	x0, [x0, #24]
 818:	add	sp, sp, #0x10
 81c:	ret

0000000000000820 <ext2fs_dblist_get_last2>:
 820:	sub	sp, sp, #0x10
 824:	str	x0, [sp, #8]
 828:	str	x1, [sp]
 82c:	ldr	x0, [sp, #8]
 830:	ldr	w1, [x0]
 834:	mov	w0, #0xb70c                	// #46860
 838:	movk	w0, #0x7f2b, lsl #16
 83c:	cmp	w1, w0
 840:	b.eq	850 <ext2fs_dblist_get_last2+0x30>  // b.none
 844:	mov	x0, #0xb70c                	// #46860
 848:	movk	x0, #0x7f2b, lsl #16
 84c:	b	8ac <ext2fs_dblist_get_last2+0x8c>
 850:	ldr	x0, [sp, #8]
 854:	ldr	x0, [x0, #24]
 858:	cmp	x0, #0x0
 85c:	b.ne	86c <ext2fs_dblist_get_last2+0x4c>  // b.any
 860:	mov	x0, #0xb76a                	// #46954
 864:	movk	x0, #0x7f2b, lsl #16
 868:	b	8ac <ext2fs_dblist_get_last2+0x8c>
 86c:	ldr	x0, [sp]
 870:	cmp	x0, #0x0
 874:	b.eq	8a8 <ext2fs_dblist_get_last2+0x88>  // b.none
 878:	ldr	x0, [sp, #8]
 87c:	ldr	x2, [x0, #40]
 880:	ldr	x0, [sp, #8]
 884:	ldr	x1, [x0, #24]
 888:	mov	x0, x1
 88c:	lsl	x0, x0, #1
 890:	add	x0, x0, x1
 894:	lsl	x0, x0, #3
 898:	sub	x0, x0, #0x18
 89c:	add	x1, x2, x0
 8a0:	ldr	x0, [sp]
 8a4:	str	x1, [x0]
 8a8:	mov	x0, #0x0                   	// #0
 8ac:	add	sp, sp, #0x10
 8b0:	ret

00000000000008b4 <ext2fs_dblist_drop_last>:
 8b4:	sub	sp, sp, #0x10
 8b8:	str	x0, [sp, #8]
 8bc:	ldr	x0, [sp, #8]
 8c0:	ldr	w1, [x0]
 8c4:	mov	w0, #0xb70c                	// #46860
 8c8:	movk	w0, #0x7f2b, lsl #16
 8cc:	cmp	w1, w0
 8d0:	b.eq	8e0 <ext2fs_dblist_drop_last+0x2c>  // b.none
 8d4:	mov	x0, #0xb70c                	// #46860
 8d8:	movk	x0, #0x7f2b, lsl #16
 8dc:	b	914 <ext2fs_dblist_drop_last+0x60>
 8e0:	ldr	x0, [sp, #8]
 8e4:	ldr	x0, [x0, #24]
 8e8:	cmp	x0, #0x0
 8ec:	b.ne	8fc <ext2fs_dblist_drop_last+0x48>  // b.any
 8f0:	mov	x0, #0xb76a                	// #46954
 8f4:	movk	x0, #0x7f2b, lsl #16
 8f8:	b	914 <ext2fs_dblist_drop_last+0x60>
 8fc:	ldr	x0, [sp, #8]
 900:	ldr	x0, [x0, #24]
 904:	sub	x1, x0, #0x1
 908:	ldr	x0, [sp, #8]
 90c:	str	x1, [x0, #24]
 910:	mov	x0, #0x0                   	// #0
 914:	add	sp, sp, #0x10
 918:	ret

000000000000091c <ext2fs_add_dir_block>:
 91c:	stp	x29, x30, [sp, #-48]!
 920:	mov	x29, sp
 924:	str	x0, [sp, #40]
 928:	str	w1, [sp, #36]
 92c:	str	w2, [sp, #32]
 930:	str	w3, [sp, #28]
 934:	ldr	w0, [sp, #32]
 938:	ldrsw	x1, [sp, #28]
 93c:	mov	x3, x1
 940:	mov	x2, x0
 944:	ldr	w1, [sp, #36]
 948:	ldr	x0, [sp, #40]
 94c:	bl	32c <ext2fs_add_dir_block2>
 950:	ldp	x29, x30, [sp], #48
 954:	ret

0000000000000958 <ext2fs_set_dir_block>:
 958:	stp	x29, x30, [sp, #-48]!
 95c:	mov	x29, sp
 960:	str	x0, [sp, #40]
 964:	str	w1, [sp, #36]
 968:	str	w2, [sp, #32]
 96c:	str	w3, [sp, #28]
 970:	ldr	w0, [sp, #32]
 974:	ldrsw	x1, [sp, #28]
 978:	mov	x3, x1
 97c:	mov	x2, x0
 980:	ldr	w1, [sp, #36]
 984:	ldr	x0, [sp, #40]
 988:	bl	4a4 <ext2fs_set_dir_block2>
 98c:	ldp	x29, x30, [sp], #48
 990:	ret

0000000000000994 <ext2fs_dblist_sort>:
 994:	stp	x29, x30, [sp, #-32]!
 998:	mov	x29, sp
 99c:	str	x0, [sp, #24]
 9a0:	str	x1, [sp, #16]
 9a4:	ldr	x0, [sp, #16]
 9a8:	cmp	x0, #0x0
 9ac:	b.eq	9d0 <ext2fs_dblist_sort+0x3c>  // b.none
 9b0:	adrp	x0, 0 <make_dblist>
 9b4:	add	x0, x0, #0x0
 9b8:	ldr	x1, [sp, #16]
 9bc:	str	x1, [x0]
 9c0:	adrp	x0, 0 <make_dblist>
 9c4:	add	x0, x0, #0x0
 9c8:	str	x0, [sp, #16]
 9cc:	b	9dc <ext2fs_dblist_sort+0x48>
 9d0:	adrp	x0, 0 <make_dblist>
 9d4:	add	x0, x0, #0x0
 9d8:	str	x0, [sp, #16]
 9dc:	ldr	x0, [sp, #24]
 9e0:	ldr	x4, [x0, #40]
 9e4:	ldr	x0, [sp, #24]
 9e8:	ldr	x0, [x0, #24]
 9ec:	ldr	x3, [sp, #16]
 9f0:	mov	x2, #0x18                  	// #24
 9f4:	mov	x1, x0
 9f8:	mov	x0, x4
 9fc:	bl	0 <qsort>
 a00:	ldr	x0, [sp, #24]
 a04:	mov	w1, #0x1                   	// #1
 a08:	str	w1, [x0, #32]
 a0c:	nop
 a10:	ldp	x29, x30, [sp], #32
 a14:	ret

0000000000000a18 <passthrough_func>:
 a18:	stp	x29, x30, [sp, #-80]!
 a1c:	mov	x29, sp
 a20:	str	x0, [sp, #40]
 a24:	str	x1, [sp, #32]
 a28:	str	x2, [sp, #24]
 a2c:	ldr	x0, [sp, #24]
 a30:	str	x0, [sp, #72]
 a34:	ldr	x0, [sp, #32]
 a38:	ldr	w0, [x0]
 a3c:	str	w0, [sp, #56]
 a40:	ldr	x0, [sp, #32]
 a44:	ldr	x0, [x0, #8]
 a48:	str	w0, [sp, #60]
 a4c:	ldr	x0, [sp, #32]
 a50:	ldr	x0, [x0, #16]
 a54:	str	w0, [sp, #64]
 a58:	ldr	x0, [sp, #72]
 a5c:	ldr	x3, [x0]
 a60:	ldr	x0, [sp, #72]
 a64:	ldr	x1, [x0, #8]
 a68:	add	x0, sp, #0x38
 a6c:	mov	x2, x1
 a70:	mov	x1, x0
 a74:	ldr	x0, [sp, #40]
 a78:	blr	x3
 a7c:	str	w0, [sp, #68]
 a80:	ldr	w1, [sp, #56]
 a84:	ldr	x0, [sp, #32]
 a88:	str	w1, [x0]
 a8c:	ldr	w0, [sp, #60]
 a90:	mov	w1, w0
 a94:	ldr	x0, [sp, #32]
 a98:	str	x1, [x0, #8]
 a9c:	ldr	w0, [sp, #64]
 aa0:	sxtw	x1, w0
 aa4:	ldr	x0, [sp, #32]
 aa8:	str	x1, [x0, #16]
 aac:	ldr	w0, [sp, #68]
 ab0:	ldp	x29, x30, [sp], #80
 ab4:	ret

0000000000000ab8 <ext2fs_dblist_iterate>:
 ab8:	stp	x29, x30, [sp, #-64]!
 abc:	mov	x29, sp
 ac0:	str	x0, [sp, #40]
 ac4:	str	x1, [sp, #32]
 ac8:	str	x2, [sp, #24]
 acc:	ldr	x0, [sp, #40]
 ad0:	ldr	w1, [x0]
 ad4:	mov	w0, #0xb70c                	// #46860
 ad8:	movk	w0, #0x7f2b, lsl #16
 adc:	cmp	w1, w0
 ae0:	b.eq	af0 <ext2fs_dblist_iterate+0x38>  // b.none
 ae4:	mov	x0, #0xb70c                	// #46860
 ae8:	movk	x0, #0x7f2b, lsl #16
 aec:	b	b18 <ext2fs_dblist_iterate+0x60>
 af0:	ldr	x0, [sp, #32]
 af4:	str	x0, [sp, #48]
 af8:	ldr	x0, [sp, #24]
 afc:	str	x0, [sp, #56]
 b00:	add	x0, sp, #0x30
 b04:	mov	x2, x0
 b08:	adrp	x0, 0 <make_dblist>
 b0c:	add	x1, x0, #0x0
 b10:	ldr	x0, [sp, #40]
 b14:	bl	72c <ext2fs_dblist_iterate2>
 b18:	ldp	x29, x30, [sp], #64
 b1c:	ret

0000000000000b20 <dir_block_cmp>:
 b20:	stp	x29, x30, [sp, #-80]!
 b24:	mov	x29, sp
 b28:	str	x0, [sp, #24]
 b2c:	str	x1, [sp, #16]
 b30:	ldr	x0, [sp, #24]
 b34:	str	x0, [sp, #72]
 b38:	ldr	x0, [sp, #16]
 b3c:	str	x0, [sp, #64]
 b40:	ldr	x0, [sp, #72]
 b44:	ldr	w0, [x0]
 b48:	str	w0, [sp, #48]
 b4c:	ldr	x0, [sp, #72]
 b50:	ldr	x0, [x0, #8]
 b54:	str	w0, [sp, #52]
 b58:	ldr	x0, [sp, #72]
 b5c:	ldr	x0, [x0, #16]
 b60:	str	w0, [sp, #56]
 b64:	ldr	x0, [sp, #64]
 b68:	ldr	w0, [x0]
 b6c:	str	w0, [sp, #32]
 b70:	ldr	x0, [sp, #64]
 b74:	ldr	x0, [x0, #8]
 b78:	str	w0, [sp, #36]
 b7c:	ldr	x0, [sp, #64]
 b80:	ldr	x0, [x0, #16]
 b84:	str	w0, [sp, #40]
 b88:	adrp	x0, 0 <make_dblist>
 b8c:	add	x0, x0, #0x0
 b90:	ldr	x2, [x0]
 b94:	add	x1, sp, #0x20
 b98:	add	x0, sp, #0x30
 b9c:	blr	x2
 ba0:	ldp	x29, x30, [sp], #80
 ba4:	ret

0000000000000ba8 <ext2fs_dblist_count>:
 ba8:	sub	sp, sp, #0x10
 bac:	str	x0, [sp, #8]
 bb0:	ldr	x0, [sp, #8]
 bb4:	ldr	x0, [x0, #24]
 bb8:	add	sp, sp, #0x10
 bbc:	ret

0000000000000bc0 <ext2fs_dblist_get_last>:
 bc0:	sub	sp, sp, #0x20
 bc4:	str	x0, [sp, #8]
 bc8:	str	x1, [sp]
 bcc:	ldr	x0, [sp, #8]
 bd0:	ldr	w1, [x0]
 bd4:	mov	w0, #0xb70c                	// #46860
 bd8:	movk	w0, #0x7f2b, lsl #16
 bdc:	cmp	w1, w0
 be0:	b.eq	bf0 <ext2fs_dblist_get_last+0x30>  // b.none
 be4:	mov	x0, #0xb70c                	// #46860
 be8:	movk	x0, #0x7f2b, lsl #16
 bec:	b	ca4 <ext2fs_dblist_get_last+0xe4>
 bf0:	ldr	x0, [sp, #8]
 bf4:	ldr	x0, [x0, #24]
 bf8:	cmp	x0, #0x0
 bfc:	b.ne	c0c <ext2fs_dblist_get_last+0x4c>  // b.any
 c00:	mov	x0, #0xb76a                	// #46954
 c04:	movk	x0, #0x7f2b, lsl #16
 c08:	b	ca4 <ext2fs_dblist_get_last+0xe4>
 c0c:	ldr	x0, [sp]
 c10:	cmp	x0, #0x0
 c14:	b.ne	c20 <ext2fs_dblist_get_last+0x60>  // b.any
 c18:	mov	x0, #0x0                   	// #0
 c1c:	b	ca4 <ext2fs_dblist_get_last+0xe4>
 c20:	ldr	x0, [sp, #8]
 c24:	ldr	x2, [x0, #40]
 c28:	ldr	x0, [sp, #8]
 c2c:	ldr	x1, [x0, #24]
 c30:	mov	x0, x1
 c34:	lsl	x0, x0, #1
 c38:	add	x0, x0, x1
 c3c:	lsl	x0, x0, #3
 c40:	sub	x0, x0, #0x18
 c44:	add	x0, x2, x0
 c48:	str	x0, [sp, #24]
 c4c:	ldr	x0, [sp, #24]
 c50:	ldr	w1, [x0]
 c54:	adrp	x0, 0 <make_dblist>
 c58:	add	x0, x0, #0x0
 c5c:	str	w1, [x0]
 c60:	ldr	x0, [sp, #24]
 c64:	ldr	x0, [x0, #8]
 c68:	mov	w1, w0
 c6c:	adrp	x0, 0 <make_dblist>
 c70:	add	x0, x0, #0x0
 c74:	str	w1, [x0, #4]
 c78:	ldr	x0, [sp, #24]
 c7c:	ldr	x0, [x0, #16]
 c80:	mov	w1, w0
 c84:	adrp	x0, 0 <make_dblist>
 c88:	add	x0, x0, #0x0
 c8c:	str	w1, [x0, #8]
 c90:	ldr	x0, [sp]
 c94:	adrp	x1, 0 <make_dblist>
 c98:	add	x1, x1, #0x0
 c9c:	str	x1, [x0]
 ca0:	mov	x0, #0x0                   	// #0
 ca4:	add	sp, sp, #0x20
 ca8:	ret

dblist_dir.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_dblist_dir_iterate>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #56]
   c:	str	w1, [sp, #52]
  10:	str	x2, [sp, #40]
  14:	str	x3, [sp, #32]
  18:	str	x4, [sp, #24]
  1c:	ldr	x0, [sp, #56]
  20:	ldr	w1, [x0]
  24:	mov	w0, #0xb70c                	// #46860
  28:	movk	w0, #0x7f2b, lsl #16
  2c:	cmp	w1, w0
  30:	b.eq	40 <ext2fs_dblist_dir_iterate+0x40>  // b.none
  34:	mov	x0, #0xb70c                	// #46860
  38:	movk	x0, #0x7f2b, lsl #16
  3c:	b	100 <ext2fs_dblist_dir_iterate+0x100>
  40:	str	wzr, [sp, #72]
  44:	ldr	w0, [sp, #52]
  48:	str	w0, [sp, #76]
  4c:	ldr	x0, [sp, #40]
  50:	cmp	x0, #0x0
  54:	b.eq	64 <ext2fs_dblist_dir_iterate+0x64>  // b.none
  58:	ldr	x0, [sp, #40]
  5c:	str	x0, [sp, #80]
  60:	b	a0 <ext2fs_dblist_dir_iterate+0xa0>
  64:	ldr	x0, [sp, #56]
  68:	ldr	x0, [x0, #8]
  6c:	ldr	w0, [x0, #40]
  70:	mov	w2, w0
  74:	add	x0, sp, #0x48
  78:	add	x0, x0, #0x8
  7c:	mov	x1, x0
  80:	mov	x0, x2
  84:	bl	0 <ext2fs_get_mem>
  88:	str	x0, [sp, #120]
  8c:	ldr	x0, [sp, #120]
  90:	cmp	x0, #0x0
  94:	b.eq	a0 <ext2fs_dblist_dir_iterate+0xa0>  // b.none
  98:	ldr	x0, [sp, #120]
  9c:	b	100 <ext2fs_dblist_dir_iterate+0x100>
  a0:	ldr	x0, [sp, #32]
  a4:	str	x0, [sp, #96]
  a8:	ldr	x0, [sp, #24]
  ac:	str	x0, [sp, #104]
  b0:	str	xzr, [sp, #112]
  b4:	add	x0, sp, #0x48
  b8:	mov	x2, x0
  bc:	adrp	x0, 0 <ext2fs_dblist_dir_iterate>
  c0:	add	x1, x0, #0x0
  c4:	ldr	x0, [sp, #56]
  c8:	bl	0 <ext2fs_dblist_iterate2>
  cc:	str	x0, [sp, #120]
  d0:	ldr	x0, [sp, #40]
  d4:	cmp	x0, #0x0
  d8:	b.ne	e8 <ext2fs_dblist_dir_iterate+0xe8>  // b.any
  dc:	add	x0, sp, #0x48
  e0:	add	x0, x0, #0x8
  e4:	bl	0 <ext2fs_free_mem>
  e8:	ldr	x0, [sp, #120]
  ec:	cmp	x0, #0x0
  f0:	b.eq	fc <ext2fs_dblist_dir_iterate+0xfc>  // b.none
  f4:	ldr	x0, [sp, #120]
  f8:	b	100 <ext2fs_dblist_dir_iterate+0x100>
  fc:	ldr	x0, [sp, #112]
 100:	ldp	x29, x30, [sp], #128
 104:	ret

0000000000000108 <db_dir_proc>:
 108:	stp	x29, x30, [sp, #-192]!
 10c:	mov	x29, sp
 110:	str	x0, [sp, #40]
 114:	str	x1, [sp, #32]
 118:	str	x2, [sp, #24]
 11c:	ldr	x0, [sp, #24]
 120:	str	x0, [sp, #176]
 124:	ldr	x0, [sp, #32]
 128:	ldr	w1, [x0]
 12c:	ldr	x0, [sp, #176]
 130:	str	w1, [x0]
 134:	ldr	x0, [sp, #176]
 138:	str	xzr, [x0, #40]
 13c:	ldr	x0, [sp, #176]
 140:	ldr	w0, [x0]
 144:	add	x1, sp, #0x30
 148:	mov	x2, x1
 14c:	mov	w1, w0
 150:	ldr	x0, [sp, #40]
 154:	bl	0 <ext2fs_read_inode>
 158:	mov	x1, x0
 15c:	ldr	x0, [sp, #176]
 160:	str	x1, [x0, #40]
 164:	ldr	x0, [sp, #176]
 168:	ldr	x0, [x0, #40]
 16c:	cmp	x0, #0x0
 170:	b.eq	17c <db_dir_proc+0x74>  // b.none
 174:	mov	w0, #0x1                   	// #1
 178:	b	204 <db_dir_proc+0xfc>
 17c:	ldr	w0, [sp, #80]
 180:	and	w0, w0, #0x10000000
 184:	cmp	w0, #0x0
 188:	b.eq	1ac <db_dir_proc+0xa4>  // b.none
 18c:	ldr	x0, [sp, #176]
 190:	ldr	w0, [x0]
 194:	ldr	x2, [sp, #176]
 198:	mov	w1, w0
 19c:	ldr	x0, [sp, #40]
 1a0:	bl	0 <ext2fs_inline_data_dir_iterate>
 1a4:	str	w0, [sp, #188]
 1a8:	b	1d8 <db_dir_proc+0xd0>
 1ac:	ldr	x0, [sp, #32]
 1b0:	add	x1, x0, #0x8
 1b4:	ldr	x0, [sp, #32]
 1b8:	ldr	x0, [x0, #16]
 1bc:	ldr	x5, [sp, #24]
 1c0:	mov	w4, #0x0                   	// #0
 1c4:	mov	x3, #0x0                   	// #0
 1c8:	mov	x2, x0
 1cc:	ldr	x0, [sp, #40]
 1d0:	bl	0 <ext2fs_process_dir_block>
 1d4:	str	w0, [sp, #188]
 1d8:	ldr	w0, [sp, #188]
 1dc:	and	w0, w0, #0x2
 1e0:	cmp	w0, #0x0
 1e4:	b.eq	200 <db_dir_proc+0xf8>  // b.none
 1e8:	ldr	x0, [sp, #176]
 1ec:	ldr	x0, [x0, #40]
 1f0:	cmp	x0, #0x0
 1f4:	b.ne	200 <db_dir_proc+0xf8>  // b.any
 1f8:	mov	w0, #0x1                   	// #1
 1fc:	b	204 <db_dir_proc+0xfc>
 200:	mov	w0, #0x0                   	// #0
 204:	ldp	x29, x30, [sp], #192
 208:	ret

dirblock.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_read_dir_block4>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	x1, [sp, #32]
  10:	str	x2, [sp, #24]
  14:	str	w3, [sp, #20]
  18:	str	w4, [sp, #16]
  1c:	str	wzr, [sp, #52]
  20:	ldr	x0, [sp, #40]
  24:	ldr	x0, [x0, #8]
  28:	ldr	x3, [sp, #24]
  2c:	mov	w2, #0x1                   	// #1
  30:	ldr	x1, [sp, #32]
  34:	bl	0 <io_channel_read_blk64>
  38:	str	x0, [sp, #56]
  3c:	ldr	x0, [sp, #56]
  40:	cmp	x0, #0x0
  44:	b.eq	50 <ext2fs_read_dir_block4+0x50>  // b.none
  48:	ldr	x0, [sp, #56]
  4c:	b	ac <ext2fs_read_dir_block4+0xac>
  50:	ldr	x0, [sp, #40]
  54:	ldr	w0, [x0, #16]
  58:	and	w0, w0, #0x200000
  5c:	cmp	w0, #0x0
  60:	b.ne	84 <ext2fs_read_dir_block4+0x84>  // b.any
  64:	ldr	x2, [sp, #24]
  68:	ldr	w1, [sp, #16]
  6c:	ldr	x0, [sp, #40]
  70:	bl	0 <ext2fs_dir_block_csum_verify>
  74:	cmp	w0, #0x0
  78:	b.ne	84 <ext2fs_read_dir_block4+0x84>  // b.any
  7c:	mov	w0, #0x1                   	// #1
  80:	str	w0, [sp, #52]
  84:	ldr	x0, [sp, #56]
  88:	cmp	x0, #0x0
  8c:	b.ne	a8 <ext2fs_read_dir_block4+0xa8>  // b.any
  90:	ldr	w0, [sp, #52]
  94:	cmp	w0, #0x0
  98:	b.eq	a8 <ext2fs_read_dir_block4+0xa8>  // b.none
  9c:	mov	x0, #0xb796                	// #46998
  a0:	movk	x0, #0x7f2b, lsl #16
  a4:	str	x0, [sp, #56]
  a8:	ldr	x0, [sp, #56]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret

00000000000000b4 <ext2fs_read_dir_block3>:
  b4:	stp	x29, x30, [sp, #-48]!
  b8:	mov	x29, sp
  bc:	str	x0, [sp, #40]
  c0:	str	x1, [sp, #32]
  c4:	str	x2, [sp, #24]
  c8:	str	w3, [sp, #20]
  cc:	mov	w4, #0x0                   	// #0
  d0:	ldr	w3, [sp, #20]
  d4:	ldr	x2, [sp, #24]
  d8:	ldr	x1, [sp, #32]
  dc:	ldr	x0, [sp, #40]
  e0:	bl	0 <ext2fs_read_dir_block4>
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret

00000000000000ec <ext2fs_read_dir_block2>:
  ec:	stp	x29, x30, [sp, #-48]!
  f0:	mov	x29, sp
  f4:	str	x0, [sp, #40]
  f8:	str	w1, [sp, #36]
  fc:	str	x2, [sp, #24]
 100:	str	w3, [sp, #32]
 104:	ldr	w0, [sp, #36]
 108:	ldr	w3, [sp, #32]
 10c:	ldr	x2, [sp, #24]
 110:	mov	x1, x0
 114:	ldr	x0, [sp, #40]
 118:	bl	b4 <ext2fs_read_dir_block3>
 11c:	ldp	x29, x30, [sp], #48
 120:	ret

0000000000000124 <ext2fs_read_dir_block>:
 124:	stp	x29, x30, [sp, #-48]!
 128:	mov	x29, sp
 12c:	str	x0, [sp, #40]
 130:	str	w1, [sp, #36]
 134:	str	x2, [sp, #24]
 138:	ldr	w0, [sp, #36]
 13c:	mov	w3, #0x0                   	// #0
 140:	ldr	x2, [sp, #24]
 144:	mov	x1, x0
 148:	ldr	x0, [sp, #40]
 14c:	bl	b4 <ext2fs_read_dir_block3>
 150:	ldp	x29, x30, [sp], #48
 154:	ret

0000000000000158 <ext2fs_write_dir_block4>:
 158:	stp	x29, x30, [sp, #-64]!
 15c:	mov	x29, sp
 160:	str	x0, [sp, #40]
 164:	str	x1, [sp, #32]
 168:	str	x2, [sp, #24]
 16c:	str	w3, [sp, #20]
 170:	str	w4, [sp, #16]
 174:	ldr	x0, [sp, #24]
 178:	str	x0, [sp, #48]
 17c:	ldr	x2, [sp, #48]
 180:	ldr	w1, [sp, #16]
 184:	ldr	x0, [sp, #40]
 188:	bl	0 <ext2fs_dir_block_csum_set>
 18c:	str	x0, [sp, #56]
 190:	ldr	x0, [sp, #56]
 194:	cmp	x0, #0x0
 198:	b.ne	1bc <ext2fs_write_dir_block4+0x64>  // b.any
 19c:	ldr	x0, [sp, #40]
 1a0:	ldr	x0, [x0, #8]
 1a4:	ldr	x3, [sp, #48]
 1a8:	mov	w2, #0x1                   	// #1
 1ac:	ldr	x1, [sp, #32]
 1b0:	bl	0 <io_channel_write_blk64>
 1b4:	str	x0, [sp, #56]
 1b8:	b	1c0 <ext2fs_write_dir_block4+0x68>
 1bc:	nop
 1c0:	ldr	x0, [sp, #56]
 1c4:	ldp	x29, x30, [sp], #64
 1c8:	ret

00000000000001cc <ext2fs_write_dir_block3>:
 1cc:	stp	x29, x30, [sp, #-48]!
 1d0:	mov	x29, sp
 1d4:	str	x0, [sp, #40]
 1d8:	str	x1, [sp, #32]
 1dc:	str	x2, [sp, #24]
 1e0:	str	w3, [sp, #20]
 1e4:	mov	w4, #0x0                   	// #0
 1e8:	ldr	w3, [sp, #20]
 1ec:	ldr	x2, [sp, #24]
 1f0:	ldr	x1, [sp, #32]
 1f4:	ldr	x0, [sp, #40]
 1f8:	bl	158 <ext2fs_write_dir_block4>
 1fc:	ldp	x29, x30, [sp], #48
 200:	ret

0000000000000204 <ext2fs_write_dir_block2>:
 204:	stp	x29, x30, [sp, #-48]!
 208:	mov	x29, sp
 20c:	str	x0, [sp, #40]
 210:	str	w1, [sp, #36]
 214:	str	x2, [sp, #24]
 218:	str	w3, [sp, #32]
 21c:	ldr	w0, [sp, #36]
 220:	ldr	w3, [sp, #32]
 224:	ldr	x2, [sp, #24]
 228:	mov	x1, x0
 22c:	ldr	x0, [sp, #40]
 230:	bl	1cc <ext2fs_write_dir_block3>
 234:	ldp	x29, x30, [sp], #48
 238:	ret

000000000000023c <ext2fs_write_dir_block>:
 23c:	stp	x29, x30, [sp, #-48]!
 240:	mov	x29, sp
 244:	str	x0, [sp, #40]
 248:	str	w1, [sp, #36]
 24c:	str	x2, [sp, #24]
 250:	ldr	w0, [sp, #36]
 254:	mov	w3, #0x0                   	// #0
 258:	ldr	x2, [sp, #24]
 25c:	mov	x1, x0
 260:	ldr	x0, [sp, #40]
 264:	bl	1cc <ext2fs_write_dir_block3>
 268:	ldp	x29, x30, [sp], #48
 26c:	ret

dirhash.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <TEA_transform>:
   0:	sub	sp, sp, #0x30
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	str	wzr, [sp, #44]
  10:	ldr	x0, [sp, #8]
  14:	ldr	w0, [x0]
  18:	str	w0, [sp, #40]
  1c:	ldr	x0, [sp, #8]
  20:	ldr	w0, [x0, #4]
  24:	str	w0, [sp, #36]
  28:	ldr	x0, [sp]
  2c:	ldr	w0, [x0]
  30:	str	w0, [sp, #28]
  34:	ldr	x0, [sp]
  38:	ldr	w0, [x0, #4]
  3c:	str	w0, [sp, #24]
  40:	ldr	x0, [sp]
  44:	ldr	w0, [x0, #8]
  48:	str	w0, [sp, #20]
  4c:	ldr	x0, [sp]
  50:	ldr	w0, [x0, #12]
  54:	str	w0, [sp, #16]
  58:	mov	w0, #0x10                  	// #16
  5c:	str	w0, [sp, #32]
  60:	ldr	w1, [sp, #44]
  64:	mov	w0, #0x79b9                	// #31161
  68:	movk	w0, #0x9e37, lsl #16
  6c:	add	w0, w1, w0
  70:	str	w0, [sp, #44]
  74:	ldr	w0, [sp, #36]
  78:	lsl	w1, w0, #4
  7c:	ldr	w0, [sp, #28]
  80:	add	w1, w1, w0
  84:	ldr	w2, [sp, #36]
  88:	ldr	w0, [sp, #44]
  8c:	add	w0, w2, w0
  90:	eor	w1, w1, w0
  94:	ldr	w0, [sp, #36]
  98:	lsr	w2, w0, #5
  9c:	ldr	w0, [sp, #24]
  a0:	add	w0, w2, w0
  a4:	eor	w0, w1, w0
  a8:	ldr	w1, [sp, #40]
  ac:	add	w0, w1, w0
  b0:	str	w0, [sp, #40]
  b4:	ldr	w0, [sp, #40]
  b8:	lsl	w1, w0, #4
  bc:	ldr	w0, [sp, #20]
  c0:	add	w1, w1, w0
  c4:	ldr	w2, [sp, #40]
  c8:	ldr	w0, [sp, #44]
  cc:	add	w0, w2, w0
  d0:	eor	w1, w1, w0
  d4:	ldr	w0, [sp, #40]
  d8:	lsr	w2, w0, #5
  dc:	ldr	w0, [sp, #16]
  e0:	add	w0, w2, w0
  e4:	eor	w0, w1, w0
  e8:	ldr	w1, [sp, #36]
  ec:	add	w0, w1, w0
  f0:	str	w0, [sp, #36]
  f4:	ldr	w0, [sp, #32]
  f8:	sub	w0, w0, #0x1
  fc:	str	w0, [sp, #32]
 100:	ldr	w0, [sp, #32]
 104:	cmp	w0, #0x0
 108:	b.ne	60 <TEA_transform+0x60>  // b.any
 10c:	ldr	x0, [sp, #8]
 110:	ldr	w1, [x0]
 114:	ldr	w0, [sp, #40]
 118:	add	w1, w1, w0
 11c:	ldr	x0, [sp, #8]
 120:	str	w1, [x0]
 124:	ldr	x0, [sp, #8]
 128:	add	x0, x0, #0x4
 12c:	ldr	w2, [x0]
 130:	ldr	x0, [sp, #8]
 134:	add	x0, x0, #0x4
 138:	ldr	w1, [sp, #36]
 13c:	add	w1, w2, w1
 140:	str	w1, [x0]
 144:	nop
 148:	add	sp, sp, #0x30
 14c:	ret

0000000000000150 <halfMD4Transform>:
 150:	sub	sp, sp, #0x20
 154:	str	x0, [sp, #8]
 158:	str	x1, [sp]
 15c:	ldr	x0, [sp, #8]
 160:	ldr	w0, [x0]
 164:	str	w0, [sp, #28]
 168:	ldr	x0, [sp, #8]
 16c:	ldr	w0, [x0, #4]
 170:	str	w0, [sp, #24]
 174:	ldr	x0, [sp, #8]
 178:	ldr	w0, [x0, #8]
 17c:	str	w0, [sp, #20]
 180:	ldr	x0, [sp, #8]
 184:	ldr	w0, [x0, #12]
 188:	str	w0, [sp, #16]
 18c:	ldr	w1, [sp, #20]
 190:	ldr	w0, [sp, #16]
 194:	eor	w1, w1, w0
 198:	ldr	w0, [sp, #24]
 19c:	and	w1, w1, w0
 1a0:	ldr	w0, [sp, #16]
 1a4:	eor	w1, w1, w0
 1a8:	ldr	x0, [sp]
 1ac:	ldr	w0, [x0]
 1b0:	add	w0, w1, w0
 1b4:	ldr	w1, [sp, #28]
 1b8:	add	w0, w1, w0
 1bc:	str	w0, [sp, #28]
 1c0:	ldr	w0, [sp, #28]
 1c4:	ror	w0, w0, #29
 1c8:	str	w0, [sp, #28]
 1cc:	ldr	w1, [sp, #24]
 1d0:	ldr	w0, [sp, #20]
 1d4:	eor	w1, w1, w0
 1d8:	ldr	w0, [sp, #28]
 1dc:	and	w1, w1, w0
 1e0:	ldr	w0, [sp, #20]
 1e4:	eor	w1, w1, w0
 1e8:	ldr	x0, [sp]
 1ec:	add	x0, x0, #0x4
 1f0:	ldr	w0, [x0]
 1f4:	add	w0, w1, w0
 1f8:	ldr	w1, [sp, #16]
 1fc:	add	w0, w1, w0
 200:	str	w0, [sp, #16]
 204:	ldr	w0, [sp, #16]
 208:	ror	w0, w0, #25
 20c:	str	w0, [sp, #16]
 210:	ldr	w1, [sp, #28]
 214:	ldr	w0, [sp, #24]
 218:	eor	w1, w1, w0
 21c:	ldr	w0, [sp, #16]
 220:	and	w1, w1, w0
 224:	ldr	w0, [sp, #24]
 228:	eor	w1, w1, w0
 22c:	ldr	x0, [sp]
 230:	add	x0, x0, #0x8
 234:	ldr	w0, [x0]
 238:	add	w0, w1, w0
 23c:	ldr	w1, [sp, #20]
 240:	add	w0, w1, w0
 244:	str	w0, [sp, #20]
 248:	ldr	w0, [sp, #20]
 24c:	ror	w0, w0, #21
 250:	str	w0, [sp, #20]
 254:	ldr	w1, [sp, #16]
 258:	ldr	w0, [sp, #28]
 25c:	eor	w1, w1, w0
 260:	ldr	w0, [sp, #20]
 264:	and	w1, w1, w0
 268:	ldr	w0, [sp, #28]
 26c:	eor	w1, w1, w0
 270:	ldr	x0, [sp]
 274:	add	x0, x0, #0xc
 278:	ldr	w0, [x0]
 27c:	add	w0, w1, w0
 280:	ldr	w1, [sp, #24]
 284:	add	w0, w1, w0
 288:	str	w0, [sp, #24]
 28c:	ldr	w0, [sp, #24]
 290:	ror	w0, w0, #13
 294:	str	w0, [sp, #24]
 298:	ldr	w1, [sp, #20]
 29c:	ldr	w0, [sp, #16]
 2a0:	eor	w1, w1, w0
 2a4:	ldr	w0, [sp, #24]
 2a8:	and	w1, w1, w0
 2ac:	ldr	w0, [sp, #16]
 2b0:	eor	w1, w1, w0
 2b4:	ldr	x0, [sp]
 2b8:	add	x0, x0, #0x10
 2bc:	ldr	w0, [x0]
 2c0:	add	w0, w1, w0
 2c4:	ldr	w1, [sp, #28]
 2c8:	add	w0, w1, w0
 2cc:	str	w0, [sp, #28]
 2d0:	ldr	w0, [sp, #28]
 2d4:	ror	w0, w0, #29
 2d8:	str	w0, [sp, #28]
 2dc:	ldr	w1, [sp, #24]
 2e0:	ldr	w0, [sp, #20]
 2e4:	eor	w1, w1, w0
 2e8:	ldr	w0, [sp, #28]
 2ec:	and	w1, w1, w0
 2f0:	ldr	w0, [sp, #20]
 2f4:	eor	w1, w1, w0
 2f8:	ldr	x0, [sp]
 2fc:	add	x0, x0, #0x14
 300:	ldr	w0, [x0]
 304:	add	w0, w1, w0
 308:	ldr	w1, [sp, #16]
 30c:	add	w0, w1, w0
 310:	str	w0, [sp, #16]
 314:	ldr	w0, [sp, #16]
 318:	ror	w0, w0, #25
 31c:	str	w0, [sp, #16]
 320:	ldr	w1, [sp, #28]
 324:	ldr	w0, [sp, #24]
 328:	eor	w1, w1, w0
 32c:	ldr	w0, [sp, #16]
 330:	and	w1, w1, w0
 334:	ldr	w0, [sp, #24]
 338:	eor	w1, w1, w0
 33c:	ldr	x0, [sp]
 340:	add	x0, x0, #0x18
 344:	ldr	w0, [x0]
 348:	add	w0, w1, w0
 34c:	ldr	w1, [sp, #20]
 350:	add	w0, w1, w0
 354:	str	w0, [sp, #20]
 358:	ldr	w0, [sp, #20]
 35c:	ror	w0, w0, #21
 360:	str	w0, [sp, #20]
 364:	ldr	w1, [sp, #16]
 368:	ldr	w0, [sp, #28]
 36c:	eor	w1, w1, w0
 370:	ldr	w0, [sp, #20]
 374:	and	w1, w1, w0
 378:	ldr	w0, [sp, #28]
 37c:	eor	w1, w1, w0
 380:	ldr	x0, [sp]
 384:	add	x0, x0, #0x1c
 388:	ldr	w0, [x0]
 38c:	add	w0, w1, w0
 390:	ldr	w1, [sp, #24]
 394:	add	w0, w1, w0
 398:	str	w0, [sp, #24]
 39c:	ldr	w0, [sp, #24]
 3a0:	ror	w0, w0, #13
 3a4:	str	w0, [sp, #24]
 3a8:	ldr	w1, [sp, #24]
 3ac:	ldr	w0, [sp, #20]
 3b0:	and	w1, w1, w0
 3b4:	ldr	w2, [sp, #24]
 3b8:	ldr	w0, [sp, #20]
 3bc:	eor	w2, w2, w0
 3c0:	ldr	w0, [sp, #16]
 3c4:	and	w0, w2, w0
 3c8:	add	w1, w1, w0
 3cc:	ldr	x0, [sp]
 3d0:	add	x0, x0, #0x4
 3d4:	ldr	w0, [x0]
 3d8:	add	w1, w1, w0
 3dc:	ldr	w0, [sp, #28]
 3e0:	add	w1, w1, w0
 3e4:	mov	w0, #0x7999                	// #31129
 3e8:	movk	w0, #0x5a82, lsl #16
 3ec:	add	w0, w1, w0
 3f0:	str	w0, [sp, #28]
 3f4:	ldr	w0, [sp, #28]
 3f8:	ror	w0, w0, #29
 3fc:	str	w0, [sp, #28]
 400:	ldr	w1, [sp, #28]
 404:	ldr	w0, [sp, #24]
 408:	and	w1, w1, w0
 40c:	ldr	w2, [sp, #28]
 410:	ldr	w0, [sp, #24]
 414:	eor	w2, w2, w0
 418:	ldr	w0, [sp, #20]
 41c:	and	w0, w2, w0
 420:	add	w1, w1, w0
 424:	ldr	x0, [sp]
 428:	add	x0, x0, #0xc
 42c:	ldr	w0, [x0]
 430:	add	w1, w1, w0
 434:	ldr	w0, [sp, #16]
 438:	add	w1, w1, w0
 43c:	mov	w0, #0x7999                	// #31129
 440:	movk	w0, #0x5a82, lsl #16
 444:	add	w0, w1, w0
 448:	str	w0, [sp, #16]
 44c:	ldr	w0, [sp, #16]
 450:	ror	w0, w0, #27
 454:	str	w0, [sp, #16]
 458:	ldr	w1, [sp, #16]
 45c:	ldr	w0, [sp, #28]
 460:	and	w1, w1, w0
 464:	ldr	w2, [sp, #16]
 468:	ldr	w0, [sp, #28]
 46c:	eor	w2, w2, w0
 470:	ldr	w0, [sp, #24]
 474:	and	w0, w2, w0
 478:	add	w1, w1, w0
 47c:	ldr	x0, [sp]
 480:	add	x0, x0, #0x14
 484:	ldr	w0, [x0]
 488:	add	w1, w1, w0
 48c:	ldr	w0, [sp, #20]
 490:	add	w1, w1, w0
 494:	mov	w0, #0x7999                	// #31129
 498:	movk	w0, #0x5a82, lsl #16
 49c:	add	w0, w1, w0
 4a0:	str	w0, [sp, #20]
 4a4:	ldr	w0, [sp, #20]
 4a8:	ror	w0, w0, #23
 4ac:	str	w0, [sp, #20]
 4b0:	ldr	w1, [sp, #20]
 4b4:	ldr	w0, [sp, #16]
 4b8:	and	w1, w1, w0
 4bc:	ldr	w2, [sp, #20]
 4c0:	ldr	w0, [sp, #16]
 4c4:	eor	w2, w2, w0
 4c8:	ldr	w0, [sp, #28]
 4cc:	and	w0, w2, w0
 4d0:	add	w1, w1, w0
 4d4:	ldr	x0, [sp]
 4d8:	add	x0, x0, #0x1c
 4dc:	ldr	w0, [x0]
 4e0:	add	w1, w1, w0
 4e4:	ldr	w0, [sp, #24]
 4e8:	add	w1, w1, w0
 4ec:	mov	w0, #0x7999                	// #31129
 4f0:	movk	w0, #0x5a82, lsl #16
 4f4:	add	w0, w1, w0
 4f8:	str	w0, [sp, #24]
 4fc:	ldr	w0, [sp, #24]
 500:	ror	w0, w0, #19
 504:	str	w0, [sp, #24]
 508:	ldr	w1, [sp, #24]
 50c:	ldr	w0, [sp, #20]
 510:	and	w1, w1, w0
 514:	ldr	w2, [sp, #24]
 518:	ldr	w0, [sp, #20]
 51c:	eor	w2, w2, w0
 520:	ldr	w0, [sp, #16]
 524:	and	w0, w2, w0
 528:	add	w1, w1, w0
 52c:	ldr	x0, [sp]
 530:	ldr	w0, [x0]
 534:	add	w1, w1, w0
 538:	ldr	w0, [sp, #28]
 53c:	add	w1, w1, w0
 540:	mov	w0, #0x7999                	// #31129
 544:	movk	w0, #0x5a82, lsl #16
 548:	add	w0, w1, w0
 54c:	str	w0, [sp, #28]
 550:	ldr	w0, [sp, #28]
 554:	ror	w0, w0, #29
 558:	str	w0, [sp, #28]
 55c:	ldr	w1, [sp, #28]
 560:	ldr	w0, [sp, #24]
 564:	and	w1, w1, w0
 568:	ldr	w2, [sp, #28]
 56c:	ldr	w0, [sp, #24]
 570:	eor	w2, w2, w0
 574:	ldr	w0, [sp, #20]
 578:	and	w0, w2, w0
 57c:	add	w1, w1, w0
 580:	ldr	x0, [sp]
 584:	add	x0, x0, #0x8
 588:	ldr	w0, [x0]
 58c:	add	w1, w1, w0
 590:	ldr	w0, [sp, #16]
 594:	add	w1, w1, w0
 598:	mov	w0, #0x7999                	// #31129
 59c:	movk	w0, #0x5a82, lsl #16
 5a0:	add	w0, w1, w0
 5a4:	str	w0, [sp, #16]
 5a8:	ldr	w0, [sp, #16]
 5ac:	ror	w0, w0, #27
 5b0:	str	w0, [sp, #16]
 5b4:	ldr	w1, [sp, #16]
 5b8:	ldr	w0, [sp, #28]
 5bc:	and	w1, w1, w0
 5c0:	ldr	w2, [sp, #16]
 5c4:	ldr	w0, [sp, #28]
 5c8:	eor	w2, w2, w0
 5cc:	ldr	w0, [sp, #24]
 5d0:	and	w0, w2, w0
 5d4:	add	w1, w1, w0
 5d8:	ldr	x0, [sp]
 5dc:	add	x0, x0, #0x10
 5e0:	ldr	w0, [x0]
 5e4:	add	w1, w1, w0
 5e8:	ldr	w0, [sp, #20]
 5ec:	add	w1, w1, w0
 5f0:	mov	w0, #0x7999                	// #31129
 5f4:	movk	w0, #0x5a82, lsl #16
 5f8:	add	w0, w1, w0
 5fc:	str	w0, [sp, #20]
 600:	ldr	w0, [sp, #20]
 604:	ror	w0, w0, #23
 608:	str	w0, [sp, #20]
 60c:	ldr	w1, [sp, #20]
 610:	ldr	w0, [sp, #16]
 614:	and	w1, w1, w0
 618:	ldr	w2, [sp, #20]
 61c:	ldr	w0, [sp, #16]
 620:	eor	w2, w2, w0
 624:	ldr	w0, [sp, #28]
 628:	and	w0, w2, w0
 62c:	add	w1, w1, w0
 630:	ldr	x0, [sp]
 634:	add	x0, x0, #0x18
 638:	ldr	w0, [x0]
 63c:	add	w1, w1, w0
 640:	ldr	w0, [sp, #24]
 644:	add	w1, w1, w0
 648:	mov	w0, #0x7999                	// #31129
 64c:	movk	w0, #0x5a82, lsl #16
 650:	add	w0, w1, w0
 654:	str	w0, [sp, #24]
 658:	ldr	w0, [sp, #24]
 65c:	ror	w0, w0, #19
 660:	str	w0, [sp, #24]
 664:	ldr	w1, [sp, #24]
 668:	ldr	w0, [sp, #20]
 66c:	eor	w1, w1, w0
 670:	ldr	w0, [sp, #16]
 674:	eor	w1, w1, w0
 678:	ldr	x0, [sp]
 67c:	add	x0, x0, #0xc
 680:	ldr	w0, [x0]
 684:	add	w1, w1, w0
 688:	ldr	w0, [sp, #28]
 68c:	add	w1, w1, w0
 690:	mov	w0, #0xeba1                	// #60321
 694:	movk	w0, #0x6ed9, lsl #16
 698:	add	w0, w1, w0
 69c:	str	w0, [sp, #28]
 6a0:	ldr	w0, [sp, #28]
 6a4:	ror	w0, w0, #29
 6a8:	str	w0, [sp, #28]
 6ac:	ldr	w1, [sp, #28]
 6b0:	ldr	w0, [sp, #24]
 6b4:	eor	w1, w1, w0
 6b8:	ldr	w0, [sp, #20]
 6bc:	eor	w1, w1, w0
 6c0:	ldr	x0, [sp]
 6c4:	add	x0, x0, #0x1c
 6c8:	ldr	w0, [x0]
 6cc:	add	w1, w1, w0
 6d0:	ldr	w0, [sp, #16]
 6d4:	add	w1, w1, w0
 6d8:	mov	w0, #0xeba1                	// #60321
 6dc:	movk	w0, #0x6ed9, lsl #16
 6e0:	add	w0, w1, w0
 6e4:	str	w0, [sp, #16]
 6e8:	ldr	w0, [sp, #16]
 6ec:	ror	w0, w0, #23
 6f0:	str	w0, [sp, #16]
 6f4:	ldr	w1, [sp, #16]
 6f8:	ldr	w0, [sp, #28]
 6fc:	eor	w1, w1, w0
 700:	ldr	w0, [sp, #24]
 704:	eor	w1, w1, w0
 708:	ldr	x0, [sp]
 70c:	add	x0, x0, #0x8
 710:	ldr	w0, [x0]
 714:	add	w1, w1, w0
 718:	ldr	w0, [sp, #20]
 71c:	add	w1, w1, w0
 720:	mov	w0, #0xeba1                	// #60321
 724:	movk	w0, #0x6ed9, lsl #16
 728:	add	w0, w1, w0
 72c:	str	w0, [sp, #20]
 730:	ldr	w0, [sp, #20]
 734:	ror	w0, w0, #21
 738:	str	w0, [sp, #20]
 73c:	ldr	w1, [sp, #20]
 740:	ldr	w0, [sp, #16]
 744:	eor	w1, w1, w0
 748:	ldr	w0, [sp, #28]
 74c:	eor	w1, w1, w0
 750:	ldr	x0, [sp]
 754:	add	x0, x0, #0x18
 758:	ldr	w0, [x0]
 75c:	add	w1, w1, w0
 760:	ldr	w0, [sp, #24]
 764:	add	w1, w1, w0
 768:	mov	w0, #0xeba1                	// #60321
 76c:	movk	w0, #0x6ed9, lsl #16
 770:	add	w0, w1, w0
 774:	str	w0, [sp, #24]
 778:	ldr	w0, [sp, #24]
 77c:	ror	w0, w0, #17
 780:	str	w0, [sp, #24]
 784:	ldr	w1, [sp, #24]
 788:	ldr	w0, [sp, #20]
 78c:	eor	w1, w1, w0
 790:	ldr	w0, [sp, #16]
 794:	eor	w1, w1, w0
 798:	ldr	x0, [sp]
 79c:	add	x0, x0, #0x4
 7a0:	ldr	w0, [x0]
 7a4:	add	w1, w1, w0
 7a8:	ldr	w0, [sp, #28]
 7ac:	add	w1, w1, w0
 7b0:	mov	w0, #0xeba1                	// #60321
 7b4:	movk	w0, #0x6ed9, lsl #16
 7b8:	add	w0, w1, w0
 7bc:	str	w0, [sp, #28]
 7c0:	ldr	w0, [sp, #28]
 7c4:	ror	w0, w0, #29
 7c8:	str	w0, [sp, #28]
 7cc:	ldr	w1, [sp, #28]
 7d0:	ldr	w0, [sp, #24]
 7d4:	eor	w1, w1, w0
 7d8:	ldr	w0, [sp, #20]
 7dc:	eor	w1, w1, w0
 7e0:	ldr	x0, [sp]
 7e4:	add	x0, x0, #0x14
 7e8:	ldr	w0, [x0]
 7ec:	add	w1, w1, w0
 7f0:	ldr	w0, [sp, #16]
 7f4:	add	w1, w1, w0
 7f8:	mov	w0, #0xeba1                	// #60321
 7fc:	movk	w0, #0x6ed9, lsl #16
 800:	add	w0, w1, w0
 804:	str	w0, [sp, #16]
 808:	ldr	w0, [sp, #16]
 80c:	ror	w0, w0, #23
 810:	str	w0, [sp, #16]
 814:	ldr	w1, [sp, #16]
 818:	ldr	w0, [sp, #28]
 81c:	eor	w1, w1, w0
 820:	ldr	w0, [sp, #24]
 824:	eor	w1, w1, w0
 828:	ldr	x0, [sp]
 82c:	ldr	w0, [x0]
 830:	add	w1, w1, w0
 834:	ldr	w0, [sp, #20]
 838:	add	w1, w1, w0
 83c:	mov	w0, #0xeba1                	// #60321
 840:	movk	w0, #0x6ed9, lsl #16
 844:	add	w0, w1, w0
 848:	str	w0, [sp, #20]
 84c:	ldr	w0, [sp, #20]
 850:	ror	w0, w0, #21
 854:	str	w0, [sp, #20]
 858:	ldr	w1, [sp, #20]
 85c:	ldr	w0, [sp, #16]
 860:	eor	w1, w1, w0
 864:	ldr	w0, [sp, #28]
 868:	eor	w1, w1, w0
 86c:	ldr	x0, [sp]
 870:	add	x0, x0, #0x10
 874:	ldr	w0, [x0]
 878:	add	w1, w1, w0
 87c:	ldr	w0, [sp, #24]
 880:	add	w1, w1, w0
 884:	mov	w0, #0xeba1                	// #60321
 888:	movk	w0, #0x6ed9, lsl #16
 88c:	add	w0, w1, w0
 890:	str	w0, [sp, #24]
 894:	ldr	w0, [sp, #24]
 898:	ror	w0, w0, #17
 89c:	str	w0, [sp, #24]
 8a0:	ldr	x0, [sp, #8]
 8a4:	ldr	w1, [x0]
 8a8:	ldr	w0, [sp, #28]
 8ac:	add	w1, w1, w0
 8b0:	ldr	x0, [sp, #8]
 8b4:	str	w1, [x0]
 8b8:	ldr	x0, [sp, #8]
 8bc:	add	x0, x0, #0x4
 8c0:	ldr	w2, [x0]
 8c4:	ldr	x0, [sp, #8]
 8c8:	add	x0, x0, #0x4
 8cc:	ldr	w1, [sp, #24]
 8d0:	add	w1, w2, w1
 8d4:	str	w1, [x0]
 8d8:	ldr	x0, [sp, #8]
 8dc:	add	x0, x0, #0x8
 8e0:	ldr	w2, [x0]
 8e4:	ldr	x0, [sp, #8]
 8e8:	add	x0, x0, #0x8
 8ec:	ldr	w1, [sp, #20]
 8f0:	add	w1, w2, w1
 8f4:	str	w1, [x0]
 8f8:	ldr	x0, [sp, #8]
 8fc:	add	x0, x0, #0xc
 900:	ldr	w2, [x0]
 904:	ldr	x0, [sp, #8]
 908:	add	x0, x0, #0xc
 90c:	ldr	w1, [sp, #16]
 910:	add	w1, w2, w1
 914:	str	w1, [x0]
 918:	nop
 91c:	add	sp, sp, #0x20
 920:	ret

0000000000000924 <dx_hack_hash>:
 924:	sub	sp, sp, #0x40
 928:	str	x0, [sp, #8]
 92c:	str	w1, [sp, #4]
 930:	str	w2, [sp]
 934:	mov	w0, #0xfe2d                	// #65069
 938:	movk	w0, #0x12a3, lsl #16
 93c:	str	w0, [sp, #56]
 940:	mov	w0, #0xe8f9                	// #59641
 944:	movk	w0, #0x37ab, lsl #16
 948:	str	w0, [sp, #52]
 94c:	ldr	x0, [sp, #8]
 950:	str	x0, [sp, #40]
 954:	ldr	x0, [sp, #8]
 958:	str	x0, [sp, #32]
 95c:	b	9ec <dx_hack_hash+0xc8>
 960:	ldr	w0, [sp]
 964:	cmp	w0, #0x0
 968:	b.eq	984 <dx_hack_hash+0x60>  // b.none
 96c:	ldr	x0, [sp, #40]
 970:	add	x1, x0, #0x1
 974:	str	x1, [sp, #40]
 978:	ldrb	w0, [x0]
 97c:	str	w0, [sp, #28]
 980:	b	998 <dx_hack_hash+0x74>
 984:	ldr	x0, [sp, #32]
 988:	add	x1, x0, #0x1
 98c:	str	x1, [sp, #32]
 990:	ldrsb	w0, [x0]
 994:	str	w0, [sp, #28]
 998:	ldr	w1, [sp, #28]
 99c:	mov	w0, #0x22f5                	// #8949
 9a0:	movk	w0, #0x6d, lsl #16
 9a4:	mul	w0, w1, w0
 9a8:	mov	w1, w0
 9ac:	ldr	w0, [sp, #56]
 9b0:	eor	w0, w1, w0
 9b4:	ldr	w1, [sp, #52]
 9b8:	add	w0, w1, w0
 9bc:	str	w0, [sp, #60]
 9c0:	ldr	w0, [sp, #60]
 9c4:	cmp	w0, #0x0
 9c8:	b.ge	9dc <dx_hack_hash+0xb8>  // b.tcont
 9cc:	ldr	w1, [sp, #60]
 9d0:	mov	w0, #0x80000001            	// #-2147483647
 9d4:	add	w0, w1, w0
 9d8:	str	w0, [sp, #60]
 9dc:	ldr	w0, [sp, #56]
 9e0:	str	w0, [sp, #52]
 9e4:	ldr	w0, [sp, #60]
 9e8:	str	w0, [sp, #56]
 9ec:	ldr	w0, [sp, #4]
 9f0:	sub	w1, w0, #0x1
 9f4:	str	w1, [sp, #4]
 9f8:	cmp	w0, #0x0
 9fc:	b.ne	960 <dx_hack_hash+0x3c>  // b.any
 a00:	ldr	w0, [sp, #56]
 a04:	lsl	w0, w0, #1
 a08:	add	sp, sp, #0x40
 a0c:	ret

0000000000000a10 <str2hashbuf>:
 a10:	sub	sp, sp, #0x50
 a14:	str	x0, [sp, #24]
 a18:	str	w1, [sp, #20]
 a1c:	str	x2, [sp, #8]
 a20:	str	w3, [sp, #16]
 a24:	str	w4, [sp, #4]
 a28:	ldr	x0, [sp, #24]
 a2c:	str	x0, [sp, #56]
 a30:	ldr	x0, [sp, #24]
 a34:	str	x0, [sp, #48]
 a38:	ldr	w0, [sp, #20]
 a3c:	lsl	w1, w0, #8
 a40:	ldr	w0, [sp, #20]
 a44:	orr	w0, w1, w0
 a48:	str	w0, [sp, #44]
 a4c:	ldr	w0, [sp, #44]
 a50:	lsl	w0, w0, #16
 a54:	ldr	w1, [sp, #44]
 a58:	orr	w0, w1, w0
 a5c:	str	w0, [sp, #44]
 a60:	ldr	w0, [sp, #44]
 a64:	str	w0, [sp, #76]
 a68:	ldr	w0, [sp, #16]
 a6c:	lsl	w0, w0, #2
 a70:	ldr	w1, [sp, #20]
 a74:	cmp	w1, w0
 a78:	b.le	a88 <str2hashbuf+0x78>
 a7c:	ldr	w0, [sp, #16]
 a80:	lsl	w0, w0, #2
 a84:	str	w0, [sp, #20]
 a88:	str	wzr, [sp, #72]
 a8c:	b	b2c <str2hashbuf+0x11c>
 a90:	ldr	w0, [sp, #4]
 a94:	cmp	w0, #0x0
 a98:	b.eq	ab4 <str2hashbuf+0xa4>  // b.none
 a9c:	ldrsw	x0, [sp, #72]
 aa0:	ldr	x1, [sp, #56]
 aa4:	add	x0, x1, x0
 aa8:	ldrb	w0, [x0]
 aac:	str	w0, [sp, #68]
 ab0:	b	ac8 <str2hashbuf+0xb8>
 ab4:	ldrsw	x0, [sp, #72]
 ab8:	ldr	x1, [sp, #48]
 abc:	add	x0, x1, x0
 ac0:	ldrsb	w0, [x0]
 ac4:	str	w0, [sp, #68]
 ac8:	ldr	w0, [sp, #76]
 acc:	lsl	w1, w0, #8
 ad0:	ldr	w0, [sp, #68]
 ad4:	add	w0, w1, w0
 ad8:	str	w0, [sp, #76]
 adc:	ldr	w0, [sp, #72]
 ae0:	negs	w1, w0
 ae4:	and	w0, w0, #0x3
 ae8:	and	w1, w1, #0x3
 aec:	csneg	w0, w0, w1, mi  // mi = first
 af0:	cmp	w0, #0x3
 af4:	b.ne	b20 <str2hashbuf+0x110>  // b.any
 af8:	ldr	x0, [sp, #8]
 afc:	add	x1, x0, #0x4
 b00:	str	x1, [sp, #8]
 b04:	ldr	w1, [sp, #76]
 b08:	str	w1, [x0]
 b0c:	ldr	w0, [sp, #44]
 b10:	str	w0, [sp, #76]
 b14:	ldr	w0, [sp, #16]
 b18:	sub	w0, w0, #0x1
 b1c:	str	w0, [sp, #16]
 b20:	ldr	w0, [sp, #72]
 b24:	add	w0, w0, #0x1
 b28:	str	w0, [sp, #72]
 b2c:	ldr	w1, [sp, #72]
 b30:	ldr	w0, [sp, #20]
 b34:	cmp	w1, w0
 b38:	b.lt	a90 <str2hashbuf+0x80>  // b.tstop
 b3c:	ldr	w0, [sp, #16]
 b40:	sub	w0, w0, #0x1
 b44:	str	w0, [sp, #16]
 b48:	ldr	w0, [sp, #16]
 b4c:	cmp	w0, #0x0
 b50:	b.lt	b80 <str2hashbuf+0x170>  // b.tstop
 b54:	ldr	x0, [sp, #8]
 b58:	add	x1, x0, #0x4
 b5c:	str	x1, [sp, #8]
 b60:	ldr	w1, [sp, #76]
 b64:	str	w1, [x0]
 b68:	b	b80 <str2hashbuf+0x170>
 b6c:	ldr	x0, [sp, #8]
 b70:	add	x1, x0, #0x4
 b74:	str	x1, [sp, #8]
 b78:	ldr	w1, [sp, #44]
 b7c:	str	w1, [x0]
 b80:	ldr	w0, [sp, #16]
 b84:	sub	w0, w0, #0x1
 b88:	str	w0, [sp, #16]
 b8c:	ldr	w0, [sp, #16]
 b90:	cmp	w0, #0x0
 b94:	b.ge	b6c <str2hashbuf+0x15c>  // b.tcont
 b98:	nop
 b9c:	nop
 ba0:	add	sp, sp, #0x50
 ba4:	ret

0000000000000ba8 <ext2fs_dirhash>:
 ba8:	stp	x29, x30, [sp, #-144]!
 bac:	mov	x29, sp
 bb0:	str	w0, [sp, #60]
 bb4:	str	x1, [sp, #48]
 bb8:	str	w2, [sp, #56]
 bbc:	str	x3, [sp, #40]
 bc0:	str	x4, [sp, #32]
 bc4:	str	x5, [sp, #24]
 bc8:	str	wzr, [sp, #136]
 bcc:	str	wzr, [sp, #120]
 bd0:	mov	w0, #0x2301                	// #8961
 bd4:	movk	w0, #0x6745, lsl #16
 bd8:	str	w0, [sp, #72]
 bdc:	mov	w0, #0xab89                	// #43913
 be0:	movk	w0, #0xefcd, lsl #16
 be4:	str	w0, [sp, #76]
 be8:	mov	w0, #0xdcfe                	// #56574
 bec:	movk	w0, #0x98ba, lsl #16
 bf0:	str	w0, [sp, #80]
 bf4:	mov	w0, #0x5476                	// #21622
 bf8:	movk	w0, #0x1032, lsl #16
 bfc:	str	w0, [sp, #84]
 c00:	ldr	x0, [sp, #40]
 c04:	cmp	x0, #0x0
 c08:	b.eq	c68 <ext2fs_dirhash+0xc0>  // b.none
 c0c:	str	wzr, [sp, #124]
 c10:	b	c3c <ext2fs_dirhash+0x94>
 c14:	ldrsw	x0, [sp, #124]
 c18:	lsl	x0, x0, #2
 c1c:	ldr	x1, [sp, #40]
 c20:	add	x0, x1, x0
 c24:	ldr	w0, [x0]
 c28:	cmp	w0, #0x0
 c2c:	b.ne	c4c <ext2fs_dirhash+0xa4>  // b.any
 c30:	ldr	w0, [sp, #124]
 c34:	add	w0, w0, #0x1
 c38:	str	w0, [sp, #124]
 c3c:	ldr	w0, [sp, #124]
 c40:	cmp	w0, #0x3
 c44:	b.le	c14 <ext2fs_dirhash+0x6c>
 c48:	b	c50 <ext2fs_dirhash+0xa8>
 c4c:	nop
 c50:	ldr	w0, [sp, #124]
 c54:	cmp	w0, #0x3
 c58:	b.gt	c68 <ext2fs_dirhash+0xc0>
 c5c:	ldr	x0, [sp, #40]
 c60:	ldp	x0, x1, [x0]
 c64:	stp	x0, x1, [sp, #72]
 c68:	ldr	w0, [sp, #60]
 c6c:	cmp	w0, #0x5
 c70:	b.eq	d80 <ext2fs_dirhash+0x1d8>  // b.none
 c74:	ldr	w0, [sp, #60]
 c78:	cmp	w0, #0x5
 c7c:	b.gt	df8 <ext2fs_dirhash+0x250>
 c80:	ldr	w0, [sp, #60]
 c84:	cmp	w0, #0x4
 c88:	b.eq	d08 <ext2fs_dirhash+0x160>  // b.none
 c8c:	ldr	w0, [sp, #60]
 c90:	cmp	w0, #0x4
 c94:	b.gt	df8 <ext2fs_dirhash+0x250>
 c98:	ldr	w0, [sp, #60]
 c9c:	cmp	w0, #0x3
 ca0:	b.eq	ce4 <ext2fs_dirhash+0x13c>  // b.none
 ca4:	ldr	w0, [sp, #60]
 ca8:	cmp	w0, #0x3
 cac:	b.gt	df8 <ext2fs_dirhash+0x250>
 cb0:	ldr	w0, [sp, #60]
 cb4:	cmp	w0, #0x2
 cb8:	b.eq	d8c <ext2fs_dirhash+0x1e4>  // b.none
 cbc:	ldr	w0, [sp, #60]
 cc0:	cmp	w0, #0x2
 cc4:	b.gt	df8 <ext2fs_dirhash+0x250>
 cc8:	ldr	w0, [sp, #60]
 ccc:	cmp	w0, #0x0
 cd0:	b.eq	cf0 <ext2fs_dirhash+0x148>  // b.none
 cd4:	ldr	w0, [sp, #60]
 cd8:	cmp	w0, #0x1
 cdc:	b.eq	d14 <ext2fs_dirhash+0x16c>  // b.none
 ce0:	b	df8 <ext2fs_dirhash+0x250>
 ce4:	ldr	w0, [sp, #120]
 ce8:	add	w0, w0, #0x1
 cec:	str	w0, [sp, #120]
 cf0:	ldr	w2, [sp, #120]
 cf4:	ldr	w1, [sp, #56]
 cf8:	ldr	x0, [sp, #48]
 cfc:	bl	924 <dx_hack_hash>
 d00:	str	w0, [sp, #140]
 d04:	b	e0c <ext2fs_dirhash+0x264>
 d08:	ldr	w0, [sp, #120]
 d0c:	add	w0, w0, #0x1
 d10:	str	w0, [sp, #120]
 d14:	ldr	x0, [sp, #48]
 d18:	str	x0, [sp, #128]
 d1c:	b	d60 <ext2fs_dirhash+0x1b8>
 d20:	add	x0, sp, #0x58
 d24:	ldr	w4, [sp, #120]
 d28:	mov	w3, #0x8                   	// #8
 d2c:	mov	x2, x0
 d30:	ldr	w1, [sp, #56]
 d34:	ldr	x0, [sp, #128]
 d38:	bl	a10 <str2hashbuf>
 d3c:	add	x1, sp, #0x58
 d40:	add	x0, sp, #0x48
 d44:	bl	150 <halfMD4Transform>
 d48:	ldr	w0, [sp, #56]
 d4c:	sub	w0, w0, #0x20
 d50:	str	w0, [sp, #56]
 d54:	ldr	x0, [sp, #128]
 d58:	add	x0, x0, #0x20
 d5c:	str	x0, [sp, #128]
 d60:	ldr	w0, [sp, #56]
 d64:	cmp	w0, #0x0
 d68:	b.gt	d20 <ext2fs_dirhash+0x178>
 d6c:	ldr	w0, [sp, #80]
 d70:	str	w0, [sp, #136]
 d74:	ldr	w0, [sp, #76]
 d78:	str	w0, [sp, #140]
 d7c:	b	e0c <ext2fs_dirhash+0x264>
 d80:	ldr	w0, [sp, #120]
 d84:	add	w0, w0, #0x1
 d88:	str	w0, [sp, #120]
 d8c:	ldr	x0, [sp, #48]
 d90:	str	x0, [sp, #128]
 d94:	b	dd8 <ext2fs_dirhash+0x230>
 d98:	add	x0, sp, #0x58
 d9c:	ldr	w4, [sp, #120]
 da0:	mov	w3, #0x4                   	// #4
 da4:	mov	x2, x0
 da8:	ldr	w1, [sp, #56]
 dac:	ldr	x0, [sp, #128]
 db0:	bl	a10 <str2hashbuf>
 db4:	add	x1, sp, #0x58
 db8:	add	x0, sp, #0x48
 dbc:	bl	0 <TEA_transform>
 dc0:	ldr	w0, [sp, #56]
 dc4:	sub	w0, w0, #0x10
 dc8:	str	w0, [sp, #56]
 dcc:	ldr	x0, [sp, #128]
 dd0:	add	x0, x0, #0x10
 dd4:	str	x0, [sp, #128]
 dd8:	ldr	w0, [sp, #56]
 ddc:	cmp	w0, #0x0
 de0:	b.gt	d98 <ext2fs_dirhash+0x1f0>
 de4:	ldr	w0, [sp, #72]
 de8:	str	w0, [sp, #140]
 dec:	ldr	w0, [sp, #76]
 df0:	str	w0, [sp, #136]
 df4:	b	e0c <ext2fs_dirhash+0x264>
 df8:	ldr	x0, [sp, #32]
 dfc:	str	wzr, [x0]
 e00:	mov	x0, #0xb759                	// #46937
 e04:	movk	x0, #0x7f2b, lsl #16
 e08:	b	e38 <ext2fs_dirhash+0x290>
 e0c:	ldr	w0, [sp, #140]
 e10:	and	w1, w0, #0xfffffffe
 e14:	ldr	x0, [sp, #32]
 e18:	str	w1, [x0]
 e1c:	ldr	x0, [sp, #24]
 e20:	cmp	x0, #0x0
 e24:	b.eq	e34 <ext2fs_dirhash+0x28c>  // b.none
 e28:	ldr	x0, [sp, #24]
 e2c:	ldr	w1, [sp, #136]
 e30:	str	w1, [x0]
 e34:	mov	x0, #0x0                   	// #0
 e38:	ldp	x29, x30, [sp], #144
 e3c:	ret

0000000000000e40 <ext2fs_dirhash2>:
 e40:	mov	x12, #0x1060                	// #4192
 e44:	sub	sp, sp, x12
 e48:	stp	x29, x30, [sp]
 e4c:	mov	x29, sp
 e50:	str	w0, [sp, #76]
 e54:	str	x1, [sp, #64]
 e58:	str	w2, [sp, #72]
 e5c:	str	x3, [sp, #56]
 e60:	str	w4, [sp, #52]
 e64:	str	x5, [sp, #40]
 e68:	str	x6, [sp, #32]
 e6c:	str	x7, [sp, #24]
 e70:	ldr	w0, [sp, #72]
 e74:	cmp	w0, #0x0
 e78:	b.eq	f14 <ext2fs_dirhash2+0xd4>  // b.none
 e7c:	ldr	x0, [sp, #56]
 e80:	cmp	x0, #0x0
 e84:	b.eq	f14 <ext2fs_dirhash2+0xd4>  // b.none
 e88:	ldr	w0, [sp, #52]
 e8c:	and	w0, w0, #0x40000000
 e90:	cmp	w0, #0x0
 e94:	b.eq	f14 <ext2fs_dirhash2+0xd4>  // b.none
 e98:	ldr	x0, [sp, #56]
 e9c:	ldr	x0, [x0, #8]
 ea0:	ldr	x5, [x0]
 ea4:	ldrsw	x0, [sp, #72]
 ea8:	add	x1, sp, #0x50
 eac:	mov	x4, #0x1000                	// #4096
 eb0:	mov	x3, x1
 eb4:	mov	x2, x0
 eb8:	ldr	x1, [sp, #64]
 ebc:	ldr	x0, [sp, #56]
 ec0:	blr	x5
 ec4:	str	w0, [sp, #4188]
 ec8:	ldr	w0, [sp, #4188]
 ecc:	cmp	w0, #0x0
 ed0:	b.ge	ee8 <ext2fs_dirhash2+0xa8>  // b.tcont
 ed4:	ldr	w0, [sp, #4188]
 ed8:	cmn	w0, #0x16
 edc:	b.eq	f1c <ext2fs_dirhash2+0xdc>  // b.none
 ee0:	ldrsw	x0, [sp, #4188]
 ee4:	b	f3c <ext2fs_dirhash2+0xfc>
 ee8:	add	x0, sp, #0x50
 eec:	ldr	x5, [sp, #24]
 ef0:	ldr	x4, [sp, #32]
 ef4:	ldr	x3, [sp, #40]
 ef8:	ldr	w2, [sp, #4188]
 efc:	mov	x1, x0
 f00:	ldr	w0, [sp, #76]
 f04:	bl	ba8 <ext2fs_dirhash>
 f08:	str	x0, [sp, #4176]
 f0c:	ldr	x0, [sp, #4176]
 f10:	b	f3c <ext2fs_dirhash2+0xfc>
 f14:	nop
 f18:	b	f20 <ext2fs_dirhash2+0xe0>
 f1c:	nop
 f20:	ldr	x5, [sp, #24]
 f24:	ldr	x4, [sp, #32]
 f28:	ldr	x3, [sp, #40]
 f2c:	ldr	w2, [sp, #72]
 f30:	ldr	x1, [sp, #64]
 f34:	ldr	w0, [sp, #76]
 f38:	bl	ba8 <ext2fs_dirhash>
 f3c:	ldp	x29, x30, [sp]
 f40:	mov	x12, #0x1060                	// #4192
 f44:	add	sp, sp, x12
 f48:	ret

dir_iterate.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_metadata_csum>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x400
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_get_rec_len>:
  28:	sub	sp, sp, #0x30
  2c:	str	x0, [sp, #24]
  30:	str	x1, [sp, #16]
  34:	str	x2, [sp, #8]
  38:	ldr	x0, [sp, #16]
  3c:	ldrh	w0, [x0, #4]
  40:	str	w0, [sp, #44]
  44:	ldr	x0, [sp, #24]
  48:	ldr	w1, [x0, #40]
  4c:	mov	w0, #0xffff                	// #65535
  50:	cmp	w1, w0
  54:	b.hi	68 <ext2fs_get_rec_len+0x40>  // b.pmore
  58:	ldr	x0, [sp, #8]
  5c:	ldr	w1, [sp, #44]
  60:	str	w1, [x0]
  64:	b	b8 <ext2fs_get_rec_len+0x90>
  68:	ldr	w1, [sp, #44]
  6c:	mov	w0, #0xffff                	// #65535
  70:	cmp	w1, w0
  74:	b.eq	84 <ext2fs_get_rec_len+0x5c>  // b.none
  78:	ldr	w0, [sp, #44]
  7c:	cmp	w0, #0x0
  80:	b.ne	98 <ext2fs_get_rec_len+0x70>  // b.any
  84:	ldr	x0, [sp, #24]
  88:	ldr	w1, [x0, #40]
  8c:	ldr	x0, [sp, #8]
  90:	str	w1, [x0]
  94:	b	b8 <ext2fs_get_rec_len+0x90>
  98:	ldr	w0, [sp, #44]
  9c:	and	w1, w0, #0xfffc
  a0:	ldr	w0, [sp, #44]
  a4:	lsl	w0, w0, #16
  a8:	and	w0, w0, #0x30000
  ac:	orr	w1, w1, w0
  b0:	ldr	x0, [sp, #8]
  b4:	str	w1, [x0]
  b8:	mov	x0, #0x0                   	// #0
  bc:	add	sp, sp, #0x30
  c0:	ret

00000000000000c4 <ext2fs_set_rec_len>:
  c4:	sub	sp, sp, #0x20
  c8:	str	x0, [sp, #24]
  cc:	str	w1, [sp, #20]
  d0:	str	x2, [sp, #8]
  d4:	ldr	x0, [sp, #24]
  d8:	ldr	w0, [x0, #40]
  dc:	ldr	w1, [sp, #20]
  e0:	cmp	w1, w0
  e4:	b.hi	108 <ext2fs_set_rec_len+0x44>  // b.pmore
  e8:	ldr	x0, [sp, #24]
  ec:	ldr	w0, [x0, #40]
  f0:	cmp	w0, #0x40, lsl #12
  f4:	b.hi	108 <ext2fs_set_rec_len+0x44>  // b.pmore
  f8:	ldr	w0, [sp, #20]
  fc:	and	w0, w0, #0x3
 100:	cmp	w0, #0x0
 104:	b.eq	110 <ext2fs_set_rec_len+0x4c>  // b.none
 108:	mov	x0, #0x16                  	// #22
 10c:	b	1b0 <ext2fs_set_rec_len+0xec>
 110:	ldr	w1, [sp, #20]
 114:	mov	w0, #0xffff                	// #65535
 118:	cmp	w1, w0
 11c:	b.hi	138 <ext2fs_set_rec_len+0x74>  // b.pmore
 120:	ldr	w0, [sp, #20]
 124:	and	w1, w0, #0xffff
 128:	ldr	x0, [sp, #8]
 12c:	strh	w1, [x0, #4]
 130:	mov	x0, #0x0                   	// #0
 134:	b	1b0 <ext2fs_set_rec_len+0xec>
 138:	ldr	x0, [sp, #24]
 13c:	ldr	w0, [x0, #40]
 140:	ldr	w1, [sp, #20]
 144:	cmp	w1, w0
 148:	b.ne	178 <ext2fs_set_rec_len+0xb4>  // b.any
 14c:	ldr	x0, [sp, #24]
 150:	ldr	w0, [x0, #40]
 154:	cmp	w0, #0x10, lsl #12
 158:	b.ne	16c <ext2fs_set_rec_len+0xa8>  // b.any
 15c:	ldr	x0, [sp, #8]
 160:	mov	w1, #0xffffffff            	// #-1
 164:	strh	w1, [x0, #4]
 168:	b	1ac <ext2fs_set_rec_len+0xe8>
 16c:	ldr	x0, [sp, #8]
 170:	strh	wzr, [x0, #4]
 174:	b	1ac <ext2fs_set_rec_len+0xe8>
 178:	ldr	w0, [sp, #20]
 17c:	and	w0, w0, #0xffff
 180:	and	w0, w0, #0xfffffffc
 184:	and	w1, w0, #0xffff
 188:	ldr	w0, [sp, #20]
 18c:	lsr	w0, w0, #16
 190:	and	w0, w0, #0xffff
 194:	and	w0, w0, #0x3
 198:	and	w0, w0, #0xffff
 19c:	orr	w0, w1, w0
 1a0:	and	w1, w0, #0xffff
 1a4:	ldr	x0, [sp, #8]
 1a8:	strh	w1, [x0, #4]
 1ac:	mov	x0, #0x0                   	// #0
 1b0:	add	sp, sp, #0x20
 1b4:	ret

00000000000001b8 <ext2fs_validate_entry>:
 1b8:	stp	x29, x30, [sp, #-64]!
 1bc:	mov	x29, sp
 1c0:	str	x0, [sp, #40]
 1c4:	str	x1, [sp, #32]
 1c8:	str	w2, [sp, #28]
 1cc:	str	w3, [sp, #24]
 1d0:	b	254 <ext2fs_validate_entry+0x9c>
 1d4:	ldr	w0, [sp, #28]
 1d8:	ldr	x1, [sp, #32]
 1dc:	add	x0, x1, x0
 1e0:	str	x0, [sp, #56]
 1e4:	add	x0, sp, #0x34
 1e8:	mov	x2, x0
 1ec:	ldr	x1, [sp, #56]
 1f0:	ldr	x0, [sp, #40]
 1f4:	bl	28 <ext2fs_get_rec_len>
 1f8:	cmp	x0, #0x0
 1fc:	b.eq	208 <ext2fs_validate_entry+0x50>  // b.none
 200:	mov	w0, #0x0                   	// #0
 204:	b	290 <ext2fs_validate_entry+0xd8>
 208:	ldr	w0, [sp, #52]
 20c:	ldr	w1, [sp, #28]
 210:	add	w0, w1, w0
 214:	str	w0, [sp, #28]
 218:	ldr	w0, [sp, #52]
 21c:	cmp	w0, #0x7
 220:	b.ls	24c <ext2fs_validate_entry+0x94>  // b.plast
 224:	ldr	w0, [sp, #52]
 228:	and	w0, w0, #0x3
 22c:	cmp	w0, #0x0
 230:	b.ne	24c <ext2fs_validate_entry+0x94>  // b.any
 234:	ldr	x0, [sp, #56]
 238:	bl	0 <ext2fs_dirent_name_len>
 23c:	add	w0, w0, #0x7
 240:	ldr	w1, [sp, #52]
 244:	cmp	w0, w1
 248:	b.lt	254 <ext2fs_validate_entry+0x9c>  // b.tstop
 24c:	mov	w0, #0x0                   	// #0
 250:	b	290 <ext2fs_validate_entry+0xd8>
 254:	ldr	w1, [sp, #28]
 258:	ldr	w0, [sp, #24]
 25c:	cmp	w1, w0
 260:	b.cs	27c <ext2fs_validate_entry+0xc4>  // b.hs, b.nlast
 264:	ldr	x0, [sp, #40]
 268:	ldr	w0, [x0, #40]
 26c:	sub	w0, w0, #0xc
 270:	ldr	w1, [sp, #28]
 274:	cmp	w1, w0
 278:	b.ls	1d4 <ext2fs_validate_entry+0x1c>  // b.plast
 27c:	ldr	w1, [sp, #28]
 280:	ldr	w0, [sp, #24]
 284:	cmp	w1, w0
 288:	cset	w0, eq  // eq = none
 28c:	and	w0, w0, #0xff
 290:	ldp	x29, x30, [sp], #64
 294:	ret

0000000000000298 <ext2fs_dir_iterate2>:
 298:	stp	x29, x30, [sp, #-128]!
 29c:	mov	x29, sp
 2a0:	str	x0, [sp, #56]
 2a4:	str	w1, [sp, #52]
 2a8:	str	w2, [sp, #48]
 2ac:	str	x3, [sp, #40]
 2b0:	str	x4, [sp, #32]
 2b4:	str	x5, [sp, #24]
 2b8:	ldr	x0, [sp, #56]
 2bc:	ldr	x1, [x0]
 2c0:	mov	x0, #0xb701                	// #46849
 2c4:	movk	x0, #0x7f2b, lsl #16
 2c8:	cmp	x1, x0
 2cc:	b.eq	2dc <ext2fs_dir_iterate2+0x44>  // b.none
 2d0:	mov	x0, #0xb701                	// #46849
 2d4:	movk	x0, #0x7f2b, lsl #16
 2d8:	b	3f8 <ext2fs_dir_iterate2+0x160>
 2dc:	ldr	w1, [sp, #52]
 2e0:	ldr	x0, [sp, #56]
 2e4:	bl	0 <ext2fs_check_directory>
 2e8:	str	x0, [sp, #120]
 2ec:	ldr	x0, [sp, #120]
 2f0:	cmp	x0, #0x0
 2f4:	b.eq	300 <ext2fs_dir_iterate2+0x68>  // b.none
 2f8:	ldr	x0, [sp, #120]
 2fc:	b	3f8 <ext2fs_dir_iterate2+0x160>
 300:	ldr	w0, [sp, #52]
 304:	str	w0, [sp, #72]
 308:	ldr	w0, [sp, #48]
 30c:	str	w0, [sp, #76]
 310:	ldr	x0, [sp, #40]
 314:	cmp	x0, #0x0
 318:	b.eq	328 <ext2fs_dir_iterate2+0x90>  // b.none
 31c:	ldr	x0, [sp, #40]
 320:	str	x0, [sp, #80]
 324:	b	360 <ext2fs_dir_iterate2+0xc8>
 328:	ldr	x0, [sp, #56]
 32c:	ldr	w0, [x0, #40]
 330:	mov	w2, w0
 334:	add	x0, sp, #0x48
 338:	add	x0, x0, #0x8
 33c:	mov	x1, x0
 340:	mov	x0, x2
 344:	bl	0 <ext2fs_get_mem>
 348:	str	x0, [sp, #120]
 34c:	ldr	x0, [sp, #120]
 350:	cmp	x0, #0x0
 354:	b.eq	360 <ext2fs_dir_iterate2+0xc8>  // b.none
 358:	ldr	x0, [sp, #120]
 35c:	b	3f8 <ext2fs_dir_iterate2+0x160>
 360:	ldr	x0, [sp, #32]
 364:	str	x0, [sp, #96]
 368:	ldr	x0, [sp, #24]
 36c:	str	x0, [sp, #104]
 370:	str	xzr, [sp, #112]
 374:	add	x0, sp, #0x48
 378:	mov	x5, x0
 37c:	adrp	x0, 4b8 <ext2fs_process_dir_block>
 380:	add	x4, x0, #0x0
 384:	mov	x3, #0x0                   	// #0
 388:	mov	w2, #0x8                   	// #8
 38c:	ldr	w1, [sp, #52]
 390:	ldr	x0, [sp, #56]
 394:	bl	0 <ext2fs_block_iterate3>
 398:	str	x0, [sp, #120]
 39c:	ldr	x0, [sp, #40]
 3a0:	cmp	x0, #0x0
 3a4:	b.ne	3b4 <ext2fs_dir_iterate2+0x11c>  // b.any
 3a8:	add	x0, sp, #0x48
 3ac:	add	x0, x0, #0x8
 3b0:	bl	0 <ext2fs_free_mem>
 3b4:	ldr	x1, [sp, #120]
 3b8:	mov	x0, #0xb79d                	// #47005
 3bc:	movk	x0, #0x7f2b, lsl #16
 3c0:	cmp	x1, x0
 3c4:	b.ne	3e0 <ext2fs_dir_iterate2+0x148>  // b.any
 3c8:	add	x0, sp, #0x48
 3cc:	mov	x2, x0
 3d0:	ldr	w1, [sp, #52]
 3d4:	ldr	x0, [sp, #56]
 3d8:	bl	0 <ext2fs_inline_data_dir_iterate>
 3dc:	str	xzr, [sp, #120]
 3e0:	ldr	x0, [sp, #120]
 3e4:	cmp	x0, #0x0
 3e8:	b.eq	3f4 <ext2fs_dir_iterate2+0x15c>  // b.none
 3ec:	ldr	x0, [sp, #120]
 3f0:	b	3f8 <ext2fs_dir_iterate2+0x160>
 3f4:	ldr	x0, [sp, #112]
 3f8:	ldp	x29, x30, [sp], #128
 3fc:	ret

0000000000000400 <xlate_func>:
 400:	stp	x29, x30, [sp, #-80]!
 404:	mov	x29, sp
 408:	str	w0, [sp, #60]
 40c:	str	w1, [sp, #56]
 410:	str	x2, [sp, #48]
 414:	str	w3, [sp, #44]
 418:	str	w4, [sp, #40]
 41c:	str	x5, [sp, #32]
 420:	str	x6, [sp, #24]
 424:	ldr	x0, [sp, #24]
 428:	str	x0, [sp, #72]
 42c:	ldr	x0, [sp, #72]
 430:	ldr	x5, [x0]
 434:	ldr	x0, [sp, #72]
 438:	ldr	x0, [x0, #8]
 43c:	mov	x4, x0
 440:	ldr	x3, [sp, #32]
 444:	ldr	w2, [sp, #40]
 448:	ldr	w1, [sp, #44]
 44c:	ldr	x0, [sp, #48]
 450:	blr	x5
 454:	ldp	x29, x30, [sp], #80
 458:	ret

000000000000045c <ext2fs_dir_iterate>:
 45c:	stp	x29, x30, [sp, #-80]!
 460:	mov	x29, sp
 464:	str	x0, [sp, #56]
 468:	str	w1, [sp, #52]
 46c:	str	w2, [sp, #48]
 470:	str	x3, [sp, #40]
 474:	str	x4, [sp, #32]
 478:	str	x5, [sp, #24]
 47c:	ldr	x0, [sp, #24]
 480:	str	x0, [sp, #72]
 484:	ldr	x0, [sp, #32]
 488:	str	x0, [sp, #64]
 48c:	add	x0, sp, #0x40
 490:	mov	x5, x0
 494:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
 498:	add	x4, x0, #0x0
 49c:	ldr	x3, [sp, #40]
 4a0:	ldr	w2, [sp, #48]
 4a4:	ldr	w1, [sp, #52]
 4a8:	ldr	x0, [sp, #56]
 4ac:	bl	298 <ext2fs_dir_iterate2>
 4b0:	ldp	x29, x30, [sp], #80
 4b4:	ret

00000000000004b8 <ext2fs_process_dir_block>:
 4b8:	stp	x29, x30, [sp, #-144]!
 4bc:	mov	x29, sp
 4c0:	str	x0, [sp, #56]
 4c4:	str	x1, [sp, #48]
 4c8:	str	x2, [sp, #40]
 4cc:	str	x3, [sp, #32]
 4d0:	str	w4, [sp, #28]
 4d4:	str	x5, [sp, #16]
 4d8:	ldr	x0, [sp, #16]
 4dc:	str	x0, [sp, #96]
 4e0:	str	wzr, [sp, #140]
 4e4:	str	wzr, [sp, #136]
 4e8:	str	wzr, [sp, #92]
 4ec:	str	wzr, [sp, #132]
 4f0:	str	wzr, [sp, #128]
 4f4:	str	wzr, [sp, #116]
 4f8:	str	xzr, [sp, #104]
 4fc:	ldr	x0, [sp, #40]
 500:	cmp	x0, #0x0
 504:	b.ge	510 <ext2fs_process_dir_block+0x58>  // b.tcont
 508:	mov	w0, #0x0                   	// #0
 50c:	b	96c <ext2fs_process_dir_block+0x4b4>
 510:	ldr	x0, [sp, #40]
 514:	cmp	x0, #0x0
 518:	b.eq	524 <ext2fs_process_dir_block+0x6c>  // b.none
 51c:	mov	w0, #0x3                   	// #3
 520:	b	528 <ext2fs_process_dir_block+0x70>
 524:	mov	w0, #0x1                   	// #1
 528:	str	w0, [sp, #120]
 52c:	ldr	x0, [sp, #96]
 530:	ldr	w0, [x0, #4]
 534:	and	w0, w0, #0x8
 538:	cmp	w0, #0x0
 53c:	cset	w0, ne  // ne = any
 540:	and	w0, w0, #0xff
 544:	str	w0, [sp, #88]
 548:	ldr	w0, [sp, #88]
 54c:	cmp	w0, #0x0
 550:	b.ne	5b0 <ext2fs_process_dir_block+0xf8>  // b.any
 554:	ldr	x0, [sp, #48]
 558:	ldr	x1, [x0]
 55c:	ldr	x0, [sp, #96]
 560:	ldr	x2, [x0, #8]
 564:	ldr	x0, [sp, #96]
 568:	ldr	w0, [x0]
 56c:	mov	w4, w0
 570:	mov	w3, #0x0                   	// #0
 574:	ldr	x0, [sp, #56]
 578:	bl	0 <ext2fs_read_dir_block4>
 57c:	mov	x1, x0
 580:	ldr	x0, [sp, #96]
 584:	str	x1, [x0, #40]
 588:	ldr	x0, [sp, #96]
 58c:	ldr	x0, [x0, #40]
 590:	cmp	x0, #0x0
 594:	b.eq	5a0 <ext2fs_process_dir_block+0xe8>  // b.none
 598:	mov	w0, #0x2                   	// #2
 59c:	b	96c <ext2fs_process_dir_block+0x4b4>
 5a0:	ldr	x0, [sp, #56]
 5a4:	ldr	w0, [x0, #40]
 5a8:	str	w0, [sp, #124]
 5ac:	b	5bc <ext2fs_process_dir_block+0x104>
 5b0:	ldr	x0, [sp, #96]
 5b4:	ldr	w0, [x0, #16]
 5b8:	str	w0, [sp, #124]
 5bc:	ldr	x0, [sp, #56]
 5c0:	ldr	x0, [x0, #32]
 5c4:	bl	0 <ext2fs_has_feature_metadata_csum>
 5c8:	cmp	w0, #0x0
 5cc:	b.eq	8d0 <ext2fs_process_dir_block+0x418>  // b.none
 5d0:	mov	w0, #0xc                   	// #12
 5d4:	str	w0, [sp, #116]
 5d8:	b	8d0 <ext2fs_process_dir_block+0x418>
 5dc:	ldr	x0, [sp, #96]
 5e0:	ldr	x1, [x0, #8]
 5e4:	ldr	w0, [sp, #140]
 5e8:	add	x0, x1, x0
 5ec:	str	x0, [sp, #80]
 5f0:	add	x0, sp, #0x44
 5f4:	mov	x2, x0
 5f8:	ldr	x1, [sp, #80]
 5fc:	ldr	x0, [sp, #56]
 600:	bl	28 <ext2fs_get_rec_len>
 604:	cmp	x0, #0x0
 608:	b.eq	614 <ext2fs_process_dir_block+0x15c>  // b.none
 60c:	mov	w0, #0x2                   	// #2
 610:	b	96c <ext2fs_process_dir_block+0x4b4>
 614:	ldr	w1, [sp, #68]
 618:	ldr	w0, [sp, #140]
 61c:	add	w0, w1, w0
 620:	ldr	w1, [sp, #124]
 624:	cmp	w1, w0
 628:	b.cc	660 <ext2fs_process_dir_block+0x1a8>  // b.lo, b.ul, b.last
 62c:	ldr	w0, [sp, #68]
 630:	cmp	w0, #0x7
 634:	b.ls	660 <ext2fs_process_dir_block+0x1a8>  // b.plast
 638:	ldr	w0, [sp, #68]
 63c:	and	w0, w0, #0x3
 640:	cmp	w0, #0x0
 644:	b.ne	660 <ext2fs_process_dir_block+0x1a8>  // b.any
 648:	ldr	x0, [sp, #80]
 64c:	bl	0 <ext2fs_dirent_name_len>
 650:	add	w0, w0, #0x7
 654:	ldr	w1, [sp, #68]
 658:	cmp	w0, w1
 65c:	b.lt	678 <ext2fs_process_dir_block+0x1c0>  // b.tstop
 660:	ldr	x0, [sp, #96]
 664:	mov	x1, #0xb723                	// #46883
 668:	movk	x1, #0x7f2b, lsl #16
 66c:	str	x1, [x0, #40]
 670:	mov	w0, #0x2                   	// #2
 674:	b	96c <ext2fs_process_dir_block+0x4b4>
 678:	ldr	x0, [sp, #80]
 67c:	ldr	w0, [x0]
 680:	cmp	w0, #0x0
 684:	b.ne	70c <ext2fs_process_dir_block+0x254>  // b.any
 688:	ldr	w0, [sp, #88]
 68c:	cmp	w0, #0x0
 690:	b.ne	6f8 <ext2fs_process_dir_block+0x240>  // b.any
 694:	ldr	w0, [sp, #116]
 698:	ldr	w1, [sp, #124]
 69c:	sub	w0, w1, w0
 6a0:	ldr	w1, [sp, #140]
 6a4:	cmp	w1, w0
 6a8:	b.ne	6f8 <ext2fs_process_dir_block+0x240>  // b.any
 6ac:	ldr	x0, [sp, #80]
 6b0:	ldrh	w0, [x0, #4]
 6b4:	mov	w1, w0
 6b8:	ldr	w0, [sp, #116]
 6bc:	cmp	w0, w1
 6c0:	b.ne	6f8 <ext2fs_process_dir_block+0x240>  // b.any
 6c4:	ldr	x0, [sp, #80]
 6c8:	ldrh	w1, [x0, #6]
 6cc:	mov	w0, #0xde00                	// #56832
 6d0:	cmp	w1, w0
 6d4:	b.ne	6f8 <ext2fs_process_dir_block+0x240>  // b.any
 6d8:	ldr	x0, [sp, #96]
 6dc:	ldr	w0, [x0, #4]
 6e0:	and	w0, w0, #0x4
 6e4:	cmp	w0, #0x0
 6e8:	b.eq	7ec <ext2fs_process_dir_block+0x334>  // b.none
 6ec:	mov	w0, #0x5                   	// #5
 6f0:	str	w0, [sp, #120]
 6f4:	b	70c <ext2fs_process_dir_block+0x254>
 6f8:	ldr	x0, [sp, #96]
 6fc:	ldr	w0, [x0, #4]
 700:	and	w0, w0, #0x1
 704:	cmp	w0, #0x0
 708:	b.eq	7f4 <ext2fs_process_dir_block+0x33c>  // b.none
 70c:	ldr	x0, [sp, #96]
 710:	ldr	x7, [x0, #24]
 714:	ldr	x0, [sp, #96]
 718:	ldr	w8, [x0]
 71c:	ldr	w1, [sp, #136]
 720:	ldr	w0, [sp, #140]
 724:	cmp	w1, w0
 728:	b.hi	734 <ext2fs_process_dir_block+0x27c>  // b.pmore
 72c:	ldr	w0, [sp, #120]
 730:	b	738 <ext2fs_process_dir_block+0x280>
 734:	mov	w0, #0x4                   	// #4
 738:	ldr	w2, [sp, #140]
 73c:	ldr	w3, [sp, #124]
 740:	ldr	x1, [sp, #96]
 744:	ldr	x4, [x1, #8]
 748:	ldr	x1, [sp, #96]
 74c:	ldr	x1, [x1, #32]
 750:	mov	x6, x1
 754:	mov	x5, x4
 758:	mov	w4, w3
 75c:	mov	w3, w2
 760:	ldr	x2, [sp, #80]
 764:	mov	w1, w0
 768:	mov	w0, w8
 76c:	blr	x7
 770:	str	w0, [sp, #92]
 774:	ldr	w0, [sp, #120]
 778:	cmp	w0, #0x2
 77c:	b.gt	78c <ext2fs_process_dir_block+0x2d4>
 780:	ldr	w0, [sp, #120]
 784:	add	w0, w0, #0x1
 788:	str	w0, [sp, #120]
 78c:	ldr	w0, [sp, #92]
 790:	and	w0, w0, #0x1
 794:	cmp	w0, #0x0
 798:	b.eq	7cc <ext2fs_process_dir_block+0x314>  // b.none
 79c:	add	x0, sp, #0x44
 7a0:	mov	x2, x0
 7a4:	ldr	x1, [sp, #80]
 7a8:	ldr	x0, [sp, #56]
 7ac:	bl	28 <ext2fs_get_rec_len>
 7b0:	cmp	x0, #0x0
 7b4:	b.eq	7c0 <ext2fs_process_dir_block+0x308>  // b.none
 7b8:	mov	w0, #0x2                   	// #2
 7bc:	b	96c <ext2fs_process_dir_block+0x4b4>
 7c0:	ldr	w0, [sp, #132]
 7c4:	add	w0, w0, #0x1
 7c8:	str	w0, [sp, #132]
 7cc:	ldr	w0, [sp, #92]
 7d0:	and	w0, w0, #0x2
 7d4:	cmp	w0, #0x0
 7d8:	b.eq	7fc <ext2fs_process_dir_block+0x344>  // b.none
 7dc:	ldr	w0, [sp, #128]
 7e0:	add	w0, w0, #0x1
 7e4:	str	w0, [sp, #128]
 7e8:	b	8e4 <ext2fs_process_dir_block+0x42c>
 7ec:	nop
 7f0:	b	800 <ext2fs_process_dir_block+0x348>
 7f4:	nop
 7f8:	b	800 <ext2fs_process_dir_block+0x348>
 7fc:	nop
 800:	ldr	w1, [sp, #136]
 804:	ldr	w0, [sp, #140]
 808:	cmp	w1, w0
 80c:	b.ne	820 <ext2fs_process_dir_block+0x368>  // b.any
 810:	ldr	w0, [sp, #68]
 814:	ldr	w1, [sp, #136]
 818:	add	w0, w1, w0
 81c:	str	w0, [sp, #136]
 820:	ldr	x0, [sp, #96]
 824:	ldr	w0, [x0, #4]
 828:	and	w0, w0, #0x2
 82c:	cmp	w0, #0x0
 830:	b.eq	8c0 <ext2fs_process_dir_block+0x408>  // b.none
 834:	ldr	x0, [sp, #80]
 838:	bl	0 <ext2fs_dirent_name_len>
 83c:	add	w0, w0, #0xb
 840:	and	w0, w0, #0xfffffffc
 844:	str	w0, [sp, #76]
 848:	ldr	w0, [sp, #68]
 84c:	ldr	w1, [sp, #76]
 850:	cmp	w1, w0
 854:	b.eq	8c0 <ext2fs_process_dir_block+0x408>  // b.none
 858:	ldr	w0, [sp, #68]
 85c:	ldr	w1, [sp, #140]
 860:	add	w0, w1, w0
 864:	str	w0, [sp, #72]
 868:	ldr	w1, [sp, #140]
 86c:	ldr	w0, [sp, #76]
 870:	add	w0, w1, w0
 874:	str	w0, [sp, #140]
 878:	b	888 <ext2fs_process_dir_block+0x3d0>
 87c:	ldr	w0, [sp, #140]
 880:	add	w0, w0, #0x4
 884:	str	w0, [sp, #140]
 888:	ldr	w1, [sp, #140]
 88c:	ldr	w0, [sp, #72]
 890:	cmp	w1, w0
 894:	b.cs	8d0 <ext2fs_process_dir_block+0x418>  // b.hs, b.nlast
 898:	ldr	x0, [sp, #96]
 89c:	ldr	x0, [x0, #8]
 8a0:	ldr	w3, [sp, #72]
 8a4:	ldr	w2, [sp, #140]
 8a8:	mov	x1, x0
 8ac:	ldr	x0, [sp, #56]
 8b0:	bl	1b8 <ext2fs_validate_entry>
 8b4:	cmp	w0, #0x0
 8b8:	b.eq	87c <ext2fs_process_dir_block+0x3c4>  // b.none
 8bc:	b	8d0 <ext2fs_process_dir_block+0x418>
 8c0:	ldr	w0, [sp, #68]
 8c4:	ldr	w1, [sp, #140]
 8c8:	add	w0, w1, w0
 8cc:	str	w0, [sp, #140]
 8d0:	ldr	w0, [sp, #124]
 8d4:	sub	w0, w0, #0x8
 8d8:	ldr	w1, [sp, #140]
 8dc:	cmp	w1, w0
 8e0:	b.cc	5dc <ext2fs_process_dir_block+0x124>  // b.lo, b.ul, b.last
 8e4:	ldr	w0, [sp, #132]
 8e8:	cmp	w0, #0x0
 8ec:	b.eq	950 <ext2fs_process_dir_block+0x498>  // b.none
 8f0:	ldr	w0, [sp, #88]
 8f4:	cmp	w0, #0x0
 8f8:	b.ne	948 <ext2fs_process_dir_block+0x490>  // b.any
 8fc:	ldr	x0, [sp, #48]
 900:	ldr	x1, [x0]
 904:	ldr	x0, [sp, #96]
 908:	ldr	x2, [x0, #8]
 90c:	ldr	x0, [sp, #96]
 910:	ldr	w0, [x0]
 914:	mov	w4, w0
 918:	mov	w3, #0x0                   	// #0
 91c:	ldr	x0, [sp, #56]
 920:	bl	0 <ext2fs_write_dir_block4>
 924:	mov	x1, x0
 928:	ldr	x0, [sp, #96]
 92c:	str	x1, [x0, #40]
 930:	ldr	x0, [sp, #96]
 934:	ldr	x0, [x0, #40]
 938:	cmp	x0, #0x0
 93c:	b.eq	950 <ext2fs_process_dir_block+0x498>  // b.none
 940:	mov	w0, #0x2                   	// #2
 944:	b	96c <ext2fs_process_dir_block+0x4b4>
 948:	mov	x0, #0x8                   	// #8
 94c:	str	x0, [sp, #104]
 950:	ldr	w0, [sp, #128]
 954:	cmp	w0, #0x0
 958:	b.eq	968 <ext2fs_process_dir_block+0x4b0>  // b.none
 95c:	ldr	x0, [sp, #104]
 960:	orr	w0, w0, #0x2
 964:	b	96c <ext2fs_process_dir_block+0x4b4>
 968:	ldr	x0, [sp, #104]
 96c:	ldp	x29, x30, [sp], #144
 970:	ret

expanddir.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <expand_dir_proc>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #56]
   c:	str	x1, [sp, #48]
  10:	str	x2, [sp, #40]
  14:	str	x3, [sp, #32]
  18:	str	w4, [sp, #28]
  1c:	str	x5, [sp, #16]
  20:	ldr	x0, [sp, #16]
  24:	str	x0, [sp, #80]
  28:	ldr	x0, [sp, #48]
  2c:	ldr	x0, [x0]
  30:	cmp	x0, #0x0
  34:	b.eq	5c <expand_dir_proc+0x5c>  // b.none
  38:	ldr	x0, [sp, #40]
  3c:	cmp	x0, #0x0
  40:	b.lt	54 <expand_dir_proc+0x54>  // b.tstop
  44:	ldr	x0, [sp, #48]
  48:	ldr	x1, [x0]
  4c:	ldr	x0, [sp, #80]
  50:	str	x1, [x0, #8]
  54:	mov	w0, #0x0                   	// #0
  58:	b	24c <expand_dir_proc+0x24c>
  5c:	ldr	x0, [sp, #40]
  60:	cmp	x0, #0x0
  64:	b.eq	b0 <expand_dir_proc+0xb0>  // b.none
  68:	ldr	x0, [sp, #80]
  6c:	ldr	x1, [x0, #8]
  70:	ldr	x0, [sp, #56]
  74:	ldr	w0, [x0, #192]
  78:	lsr	x1, x1, x0
  7c:	ldr	x0, [sp, #80]
  80:	ldr	x0, [x0, #8]
  84:	add	x2, x0, #0x1
  88:	ldr	x0, [sp, #56]
  8c:	ldr	w0, [x0, #192]
  90:	lsr	x0, x2, x0
  94:	cmp	x1, x0
  98:	b.ne	b0 <expand_dir_proc+0xb0>  // b.any
  9c:	ldr	x0, [sp, #80]
  a0:	ldr	x0, [x0, #8]
  a4:	add	x0, x0, #0x1
  a8:	str	x0, [sp, #72]
  ac:	b	148 <expand_dir_proc+0x148>
  b0:	ldr	x0, [sp, #80]
  b4:	ldr	x1, [x0, #8]
  b8:	ldr	x0, [sp, #56]
  bc:	ldr	w0, [x0, #192]
  c0:	mov	w2, #0x1                   	// #1
  c4:	lsl	w0, w2, w0
  c8:	neg	w0, w0
  cc:	sxtw	x0, w0
  d0:	and	x1, x1, x0
  d4:	ldr	x0, [sp, #80]
  d8:	str	x1, [x0, #8]
  dc:	ldr	x0, [sp, #80]
  e0:	ldr	x0, [x0, #8]
  e4:	add	x1, sp, #0x48
  e8:	mov	x3, x1
  ec:	mov	x2, #0x0                   	// #0
  f0:	mov	x1, x0
  f4:	ldr	x0, [sp, #56]
  f8:	bl	0 <ext2fs_new_block2>
  fc:	str	x0, [sp, #88]
 100:	ldr	x0, [sp, #88]
 104:	cmp	x0, #0x0
 108:	b.eq	120 <expand_dir_proc+0x120>  // b.none
 10c:	ldr	x0, [sp, #80]
 110:	ldr	x1, [sp, #88]
 114:	str	x1, [x0, #16]
 118:	mov	w0, #0x2                   	// #2
 11c:	b	24c <expand_dir_proc+0x24c>
 120:	ldr	x0, [sp, #80]
 124:	ldr	w0, [x0, #4]
 128:	add	w1, w0, #0x1
 12c:	ldr	x0, [sp, #80]
 130:	str	w1, [x0, #4]
 134:	ldr	x0, [sp, #72]
 138:	mov	w2, #0x1                   	// #1
 13c:	mov	x1, x0
 140:	ldr	x0, [sp, #56]
 144:	bl	0 <ext2fs_block_alloc_stats2>
 148:	ldr	x0, [sp, #40]
 14c:	cmp	x0, #0x0
 150:	b.le	1cc <expand_dir_proc+0x1cc>
 154:	add	x0, sp, #0x40
 158:	mov	x3, x0
 15c:	mov	w2, #0x0                   	// #0
 160:	mov	w1, #0x0                   	// #0
 164:	ldr	x0, [sp, #56]
 168:	bl	0 <ext2fs_new_dir_block>
 16c:	str	x0, [sp, #88]
 170:	ldr	x0, [sp, #88]
 174:	cmp	x0, #0x0
 178:	b.eq	190 <expand_dir_proc+0x190>  // b.none
 17c:	ldr	x0, [sp, #80]
 180:	ldr	x1, [sp, #88]
 184:	str	x1, [x0, #16]
 188:	mov	w0, #0x2                   	// #2
 18c:	b	24c <expand_dir_proc+0x24c>
 190:	ldr	x0, [sp, #80]
 194:	mov	w1, #0x1                   	// #1
 198:	str	w1, [x0]
 19c:	ldr	x1, [sp, #72]
 1a0:	ldr	x2, [sp, #64]
 1a4:	ldr	x0, [sp, #80]
 1a8:	ldr	w0, [x0, #24]
 1ac:	mov	w4, w0
 1b0:	mov	w3, #0x0                   	// #0
 1b4:	ldr	x0, [sp, #56]
 1b8:	bl	0 <ext2fs_write_dir_block4>
 1bc:	str	x0, [sp, #88]
 1c0:	add	x0, sp, #0x40
 1c4:	bl	0 <ext2fs_free_mem>
 1c8:	b	1ec <expand_dir_proc+0x1ec>
 1cc:	ldr	x0, [sp, #72]
 1d0:	mov	x4, #0x0                   	// #0
 1d4:	mov	x3, #0x0                   	// #0
 1d8:	mov	w2, #0x1                   	// #1
 1dc:	mov	x1, x0
 1e0:	ldr	x0, [sp, #56]
 1e4:	bl	0 <ext2fs_zero_blocks2>
 1e8:	str	x0, [sp, #88]
 1ec:	ldr	x0, [sp, #40]
 1f0:	cmp	x0, #0x0
 1f4:	b.lt	204 <expand_dir_proc+0x204>  // b.tstop
 1f8:	ldr	x1, [sp, #72]
 1fc:	ldr	x0, [sp, #80]
 200:	str	x1, [x0, #8]
 204:	ldr	x0, [sp, #88]
 208:	cmp	x0, #0x0
 20c:	b.eq	224 <expand_dir_proc+0x224>  // b.none
 210:	ldr	x0, [sp, #80]
 214:	ldr	x1, [sp, #88]
 218:	str	x1, [x0, #16]
 21c:	mov	w0, #0x2                   	// #2
 220:	b	24c <expand_dir_proc+0x24c>
 224:	ldr	x1, [sp, #72]
 228:	ldr	x0, [sp, #48]
 22c:	str	x1, [x0]
 230:	ldr	x0, [sp, #80]
 234:	ldr	w0, [x0]
 238:	cmp	w0, #0x0
 23c:	b.eq	248 <expand_dir_proc+0x248>  // b.none
 240:	mov	w0, #0x3                   	// #3
 244:	b	24c <expand_dir_proc+0x24c>
 248:	mov	w0, #0x1                   	// #1
 24c:	ldp	x29, x30, [sp], #96
 250:	ret

0000000000000254 <ext2fs_expand_dir>:
 254:	stp	x29, x30, [sp, #-208]!
 258:	mov	x29, sp
 25c:	str	x0, [sp, #24]
 260:	str	w1, [sp, #20]
 264:	ldr	x0, [sp, #24]
 268:	ldr	x1, [x0]
 26c:	mov	x0, #0xb701                	// #46849
 270:	movk	x0, #0x7f2b, lsl #16
 274:	cmp	x1, x0
 278:	b.eq	288 <ext2fs_expand_dir+0x34>  // b.none
 27c:	mov	x0, #0xb701                	// #46849
 280:	movk	x0, #0x7f2b, lsl #16
 284:	b	448 <ext2fs_expand_dir+0x1f4>
 288:	ldr	x0, [sp, #24]
 28c:	ldr	w0, [x0, #16]
 290:	and	w0, w0, #0x1
 294:	cmp	w0, #0x0
 298:	b.ne	2a8 <ext2fs_expand_dir+0x54>  // b.any
 29c:	mov	x0, #0xb715                	// #46869
 2a0:	movk	x0, #0x7f2b, lsl #16
 2a4:	b	448 <ext2fs_expand_dir+0x1f4>
 2a8:	ldr	x0, [sp, #24]
 2ac:	ldr	x0, [x0, #88]
 2b0:	cmp	x0, #0x0
 2b4:	b.ne	2c4 <ext2fs_expand_dir+0x70>  // b.any
 2b8:	mov	x0, #0xb728                	// #46888
 2bc:	movk	x0, #0x7f2b, lsl #16
 2c0:	b	448 <ext2fs_expand_dir+0x1f4>
 2c4:	ldr	w1, [sp, #20]
 2c8:	ldr	x0, [sp, #24]
 2cc:	bl	0 <ext2fs_check_directory>
 2d0:	str	x0, [sp, #200]
 2d4:	ldr	x0, [sp, #200]
 2d8:	cmp	x0, #0x0
 2dc:	b.eq	2e8 <ext2fs_expand_dir+0x94>  // b.none
 2e0:	ldr	x0, [sp, #200]
 2e4:	b	448 <ext2fs_expand_dir+0x1f4>
 2e8:	add	x0, sp, #0x28
 2ec:	mov	x2, x0
 2f0:	ldr	w1, [sp, #20]
 2f4:	ldr	x0, [sp, #24]
 2f8:	bl	0 <ext2fs_read_inode>
 2fc:	str	x0, [sp, #200]
 300:	ldr	x0, [sp, #200]
 304:	cmp	x0, #0x0
 308:	b.eq	314 <ext2fs_expand_dir+0xc0>  // b.none
 30c:	ldr	x0, [sp, #200]
 310:	b	448 <ext2fs_expand_dir+0x1f4>
 314:	str	wzr, [sp, #168]
 318:	str	xzr, [sp, #184]
 31c:	add	x0, sp, #0x28
 320:	mov	x3, #0x0                   	// #0
 324:	mov	x2, x0
 328:	ldr	w1, [sp, #20]
 32c:	ldr	x0, [sp, #24]
 330:	bl	0 <ext2fs_find_inode_goal>
 334:	str	x0, [sp, #176]
 338:	str	wzr, [sp, #172]
 33c:	ldr	w0, [sp, #20]
 340:	str	w0, [sp, #192]
 344:	add	x0, sp, #0xa8
 348:	mov	x5, x0
 34c:	adrp	x0, 0 <expand_dir_proc>
 350:	add	x4, x0, #0x0
 354:	mov	x3, #0x0                   	// #0
 358:	mov	w2, #0x1                   	// #1
 35c:	ldr	w1, [sp, #20]
 360:	ldr	x0, [sp, #24]
 364:	bl	0 <ext2fs_block_iterate3>
 368:	str	x0, [sp, #200]
 36c:	ldr	x1, [sp, #200]
 370:	mov	x0, #0xb79d                	// #47005
 374:	movk	x0, #0x7f2b, lsl #16
 378:	cmp	x1, x0
 37c:	b.ne	390 <ext2fs_expand_dir+0x13c>  // b.any
 380:	ldr	w1, [sp, #20]
 384:	ldr	x0, [sp, #24]
 388:	bl	0 <ext2fs_inline_data_expand>
 38c:	b	448 <ext2fs_expand_dir+0x1f4>
 390:	ldr	x0, [sp, #184]
 394:	cmp	x0, #0x0
 398:	b.eq	3a4 <ext2fs_expand_dir+0x150>  // b.none
 39c:	ldr	x0, [sp, #184]
 3a0:	b	448 <ext2fs_expand_dir+0x1f4>
 3a4:	ldr	w0, [sp, #168]
 3a8:	cmp	w0, #0x0
 3ac:	b.ne	3bc <ext2fs_expand_dir+0x168>  // b.any
 3b0:	mov	x0, #0xb72b                	// #46891
 3b4:	movk	x0, #0x7f2b, lsl #16
 3b8:	b	448 <ext2fs_expand_dir+0x1f4>
 3bc:	add	x0, sp, #0x28
 3c0:	mov	x2, x0
 3c4:	ldr	w1, [sp, #20]
 3c8:	ldr	x0, [sp, #24]
 3cc:	bl	0 <ext2fs_read_inode>
 3d0:	str	x0, [sp, #200]
 3d4:	ldr	x0, [sp, #200]
 3d8:	cmp	x0, #0x0
 3dc:	b.eq	3e8 <ext2fs_expand_dir+0x194>  // b.none
 3e0:	ldr	x0, [sp, #200]
 3e4:	b	448 <ext2fs_expand_dir+0x1f4>
 3e8:	ldr	w1, [sp, #44]
 3ec:	ldr	x0, [sp, #24]
 3f0:	ldr	w0, [x0, #40]
 3f4:	add	w0, w1, w0
 3f8:	str	w0, [sp, #44]
 3fc:	ldr	w0, [sp, #172]
 400:	sxtw	x1, w0
 404:	add	x0, sp, #0x28
 408:	mov	x2, x1
 40c:	mov	x1, x0
 410:	ldr	x0, [sp, #24]
 414:	bl	0 <ext2fs_iblk_add_blocks>
 418:	add	x0, sp, #0x28
 41c:	mov	x2, x0
 420:	ldr	w1, [sp, #20]
 424:	ldr	x0, [sp, #24]
 428:	bl	0 <ext2fs_write_inode>
 42c:	str	x0, [sp, #200]
 430:	ldr	x0, [sp, #200]
 434:	cmp	x0, #0x0
 438:	b.eq	444 <ext2fs_expand_dir+0x1f0>  // b.none
 43c:	ldr	x0, [sp, #200]
 440:	b	448 <ext2fs_expand_dir+0x1f4>
 444:	mov	x0, #0x0                   	// #0
 448:	ldp	x29, x30, [sp], #208
 44c:	ret

ext_attr.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <EXT2_INODE>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	add	sp, sp, #0x10
      10:	ret

0000000000000014 <ext2fs_has_feature_xattr>:
      14:	sub	sp, sp, #0x10
      18:	str	x0, [sp, #8]
      1c:	ldr	x0, [sp, #8]
      20:	ldr	w0, [x0, #92]
      24:	and	w0, w0, #0x8
      28:	cmp	w0, #0x0
      2c:	cset	w0, ne  // ne = any
      30:	and	w0, w0, #0xff
      34:	add	sp, sp, #0x10
      38:	ret

000000000000003c <ext2fs_has_feature_extents>:
      3c:	sub	sp, sp, #0x10
      40:	str	x0, [sp, #8]
      44:	ldr	x0, [sp, #8]
      48:	ldr	w0, [x0, #96]
      4c:	and	w0, w0, #0x40
      50:	cmp	w0, #0x0
      54:	cset	w0, ne  // ne = any
      58:	and	w0, w0, #0xff
      5c:	add	sp, sp, #0x10
      60:	ret

0000000000000064 <ext2fs_has_feature_ea_inode>:
      64:	sub	sp, sp, #0x10
      68:	str	x0, [sp, #8]
      6c:	ldr	x0, [sp, #8]
      70:	ldr	w0, [x0, #96]
      74:	and	w0, w0, #0x400
      78:	cmp	w0, #0x0
      7c:	cset	w0, ne  // ne = any
      80:	and	w0, w0, #0xff
      84:	add	sp, sp, #0x10
      88:	ret

000000000000008c <ext2fs_has_feature_inline_data>:
      8c:	sub	sp, sp, #0x10
      90:	str	x0, [sp, #8]
      94:	ldr	x0, [sp, #8]
      98:	ldr	w0, [x0, #96]
      9c:	and	w0, w0, #0x8000
      a0:	cmp	w0, #0x0
      a4:	cset	w0, ne  // ne = any
      a8:	and	w0, w0, #0xff
      ac:	add	sp, sp, #0x10
      b0:	ret

00000000000000b4 <read_ea_inode_hash>:
      b4:	stp	x29, x30, [sp, #-192]!
      b8:	mov	x29, sp
      bc:	str	x0, [sp, #40]
      c0:	str	w1, [sp, #36]
      c4:	str	x2, [sp, #24]
      c8:	add	x0, sp, #0x38
      cc:	mov	x2, x0
      d0:	ldr	w1, [sp, #36]
      d4:	ldr	x0, [sp, #40]
      d8:	bl	0 <ext2fs_read_inode>
      dc:	str	x0, [sp, #184]
      e0:	ldr	x0, [sp, #184]
      e4:	cmp	x0, #0x0
      e8:	b.eq	f4 <read_ea_inode_hash+0x40>  // b.none
      ec:	ldr	x0, [sp, #184]
      f0:	b	10c <read_ea_inode_hash+0x58>
      f4:	add	x0, sp, #0x38
      f8:	bl	348 <ext2fs_get_ea_inode_hash>
      fc:	mov	w1, w0
     100:	ldr	x0, [sp, #24]
     104:	str	w1, [x0]
     108:	mov	x0, #0x0                   	// #0
     10c:	ldp	x29, x30, [sp], #192
     110:	ret

0000000000000114 <ext2fs_ext_attr_hash_entry>:
     114:	sub	sp, sp, #0x30
     118:	str	x0, [sp, #8]
     11c:	str	x1, [sp]
     120:	str	wzr, [sp, #44]
     124:	ldr	x0, [sp, #8]
     128:	add	x0, x0, #0x10
     12c:	str	x0, [sp, #32]
     130:	str	wzr, [sp, #28]
     134:	b	164 <ext2fs_ext_attr_hash_entry+0x50>
     138:	ldr	w0, [sp, #44]
     13c:	ror	w1, w0, #27
     140:	ldr	x0, [sp, #32]
     144:	add	x2, x0, #0x1
     148:	str	x2, [sp, #32]
     14c:	ldrb	w0, [x0]
     150:	eor	w0, w1, w0
     154:	str	w0, [sp, #44]
     158:	ldr	w0, [sp, #28]
     15c:	add	w0, w0, #0x1
     160:	str	w0, [sp, #28]
     164:	ldr	x0, [sp, #8]
     168:	ldrb	w0, [x0]
     16c:	mov	w1, w0
     170:	ldr	w0, [sp, #28]
     174:	cmp	w0, w1
     178:	b.lt	138 <ext2fs_ext_attr_hash_entry+0x24>  // b.tstop
     17c:	ldr	x0, [sp, #8]
     180:	ldr	w0, [x0, #4]
     184:	cmp	w0, #0x0
     188:	b.ne	1f4 <ext2fs_ext_attr_hash_entry+0xe0>  // b.any
     18c:	ldr	x0, [sp, #8]
     190:	ldr	w0, [x0, #8]
     194:	cmp	w0, #0x0
     198:	b.eq	1f4 <ext2fs_ext_attr_hash_entry+0xe0>  // b.none
     19c:	ldr	x0, [sp]
     1a0:	str	x0, [sp, #16]
     1a4:	ldr	x0, [sp, #8]
     1a8:	ldr	w0, [x0, #8]
     1ac:	add	w0, w0, #0x3
     1b0:	lsr	w0, w0, #2
     1b4:	str	w0, [sp, #28]
     1b8:	b	1e8 <ext2fs_ext_attr_hash_entry+0xd4>
     1bc:	ldr	w0, [sp, #44]
     1c0:	ror	w1, w0, #16
     1c4:	ldr	x0, [sp, #16]
     1c8:	add	x2, x0, #0x4
     1cc:	str	x2, [sp, #16]
     1d0:	ldr	w0, [x0]
     1d4:	eor	w0, w1, w0
     1d8:	str	w0, [sp, #44]
     1dc:	ldr	w0, [sp, #28]
     1e0:	sub	w0, w0, #0x1
     1e4:	str	w0, [sp, #28]
     1e8:	ldr	w0, [sp, #28]
     1ec:	cmp	w0, #0x0
     1f0:	b.ne	1bc <ext2fs_ext_attr_hash_entry+0xa8>  // b.any
     1f4:	ldr	w0, [sp, #44]
     1f8:	add	sp, sp, #0x30
     1fc:	ret

0000000000000200 <ext2fs_ext_attr_hash_entry2>:
     200:	stp	x29, x30, [sp, #-64]!
     204:	mov	x29, sp
     208:	str	x0, [sp, #40]
     20c:	str	x1, [sp, #32]
     210:	str	x2, [sp, #24]
     214:	str	x3, [sp, #16]
     218:	ldr	x1, [sp, #24]
     21c:	ldr	x0, [sp, #32]
     220:	bl	114 <ext2fs_ext_attr_hash_entry>
     224:	mov	w1, w0
     228:	ldr	x0, [sp, #16]
     22c:	str	w1, [x0]
     230:	ldr	x0, [sp, #32]
     234:	ldr	w0, [x0, #4]
     238:	cmp	w0, #0x0
     23c:	b.eq	290 <ext2fs_ext_attr_hash_entry2+0x90>  // b.none
     240:	ldr	x0, [sp, #32]
     244:	ldr	w0, [x0, #4]
     248:	add	x1, sp, #0x34
     24c:	mov	x2, x1
     250:	mov	w1, w0
     254:	ldr	x0, [sp, #40]
     258:	bl	b4 <read_ea_inode_hash>
     25c:	str	x0, [sp, #56]
     260:	ldr	x0, [sp, #56]
     264:	cmp	x0, #0x0
     268:	b.eq	274 <ext2fs_ext_attr_hash_entry2+0x74>  // b.none
     26c:	ldr	x0, [sp, #56]
     270:	b	294 <ext2fs_ext_attr_hash_entry2+0x94>
     274:	ldr	x0, [sp, #16]
     278:	ldr	w0, [x0]
     27c:	ror	w1, w0, #16
     280:	ldr	w0, [sp, #52]
     284:	eor	w1, w1, w0
     288:	ldr	x0, [sp, #16]
     28c:	str	w1, [x0]
     290:	mov	x0, #0x0                   	// #0
     294:	ldp	x29, x30, [sp], #64
     298:	ret

000000000000029c <ext2fs_ext_attr_block_rehash>:
     29c:	sub	sp, sp, #0x20
     2a0:	str	x0, [sp, #8]
     2a4:	str	x1, [sp]
     2a8:	str	wzr, [sp, #20]
     2ac:	ldr	x0, [sp, #8]
     2b0:	add	x0, x0, #0x20
     2b4:	str	x0, [sp, #24]
     2b8:	b	310 <ext2fs_ext_attr_block_rehash+0x74>
     2bc:	ldr	x0, [sp, #24]
     2c0:	ldr	w0, [x0, #12]
     2c4:	cmp	w0, #0x0
     2c8:	b.ne	2d4 <ext2fs_ext_attr_block_rehash+0x38>  // b.any
     2cc:	str	wzr, [sp, #20]
     2d0:	b	330 <ext2fs_ext_attr_block_rehash+0x94>
     2d4:	ldr	w0, [sp, #20]
     2d8:	ror	w1, w0, #16
     2dc:	ldr	x0, [sp, #24]
     2e0:	ldr	w0, [x0, #12]
     2e4:	eor	w0, w1, w0
     2e8:	str	w0, [sp, #20]
     2ec:	ldr	x0, [sp, #24]
     2f0:	ldrb	w0, [x0]
     2f4:	add	w0, w0, #0x3
     2f8:	mov	w0, w0
     2fc:	add	x0, x0, #0x10
     300:	and	x0, x0, #0xfffffffc
     304:	ldr	x1, [sp, #24]
     308:	add	x0, x1, x0
     30c:	str	x0, [sp, #24]
     310:	ldr	x1, [sp, #24]
     314:	ldr	x0, [sp]
     318:	cmp	x1, x0
     31c:	b.cs	330 <ext2fs_ext_attr_block_rehash+0x94>  // b.hs, b.nlast
     320:	ldr	x0, [sp, #24]
     324:	ldr	w0, [x0]
     328:	cmp	w0, #0x0
     32c:	b.ne	2bc <ext2fs_ext_attr_block_rehash+0x20>  // b.any
     330:	ldr	x0, [sp, #8]
     334:	ldr	w1, [sp, #20]
     338:	str	w1, [x0, #12]
     33c:	nop
     340:	add	sp, sp, #0x20
     344:	ret

0000000000000348 <ext2fs_get_ea_inode_hash>:
     348:	sub	sp, sp, #0x10
     34c:	str	x0, [sp, #8]
     350:	ldr	x0, [sp, #8]
     354:	ldr	w0, [x0, #8]
     358:	add	sp, sp, #0x10
     35c:	ret

0000000000000360 <ext2fs_set_ea_inode_hash>:
     360:	sub	sp, sp, #0x10
     364:	str	x0, [sp, #8]
     368:	str	w1, [sp, #4]
     36c:	ldr	x0, [sp, #8]
     370:	ldr	w1, [sp, #4]
     374:	str	w1, [x0, #8]
     378:	nop
     37c:	add	sp, sp, #0x10
     380:	ret

0000000000000384 <ext2fs_get_ea_inode_ref>:
     384:	sub	sp, sp, #0x10
     388:	str	x0, [sp, #8]
     38c:	ldr	x0, [sp, #8]
     390:	ldr	w0, [x0, #12]
     394:	mov	w0, w0
     398:	lsl	x1, x0, #32
     39c:	ldr	x0, [sp, #8]
     3a0:	ldr	w0, [x0, #36]
     3a4:	mov	w0, w0
     3a8:	orr	x0, x1, x0
     3ac:	add	sp, sp, #0x10
     3b0:	ret

00000000000003b4 <ext2fs_set_ea_inode_ref>:
     3b4:	sub	sp, sp, #0x10
     3b8:	str	x0, [sp, #8]
     3bc:	str	x1, [sp]
     3c0:	ldr	x0, [sp]
     3c4:	lsr	x0, x0, #32
     3c8:	mov	w1, w0
     3cc:	ldr	x0, [sp, #8]
     3d0:	str	w1, [x0, #12]
     3d4:	ldr	x0, [sp]
     3d8:	mov	w1, w0
     3dc:	ldr	x0, [sp, #8]
     3e0:	str	w1, [x0, #36]
     3e4:	nop
     3e8:	add	sp, sp, #0x10
     3ec:	ret

00000000000003f0 <check_ext_attr_header>:
     3f0:	sub	sp, sp, #0x10
     3f4:	str	x0, [sp, #8]
     3f8:	ldr	x0, [sp, #8]
     3fc:	ldr	w1, [x0]
     400:	mov	w0, #0xea010000            	// #-369033216
     404:	cmp	w1, w0
     408:	b.eq	420 <check_ext_attr_header+0x30>  // b.none
     40c:	ldr	x0, [sp, #8]
     410:	ldr	w1, [x0]
     414:	mov	w0, #0xea020000            	// #-368967680
     418:	cmp	w1, w0
     41c:	b.ne	430 <check_ext_attr_header+0x40>  // b.any
     420:	ldr	x0, [sp, #8]
     424:	ldr	w0, [x0, #8]
     428:	cmp	w0, #0x1
     42c:	b.eq	43c <check_ext_attr_header+0x4c>  // b.none
     430:	mov	x0, #0xb7a1                	// #47009
     434:	movk	x0, #0x7f2b, lsl #16
     438:	b	440 <check_ext_attr_header+0x50>
     43c:	mov	x0, #0x0                   	// #0
     440:	add	sp, sp, #0x10
     444:	ret

0000000000000448 <ext2fs_read_ext_attr3>:
     448:	stp	x29, x30, [sp, #-64]!
     44c:	mov	x29, sp
     450:	str	x0, [sp, #40]
     454:	str	x1, [sp, #32]
     458:	str	x2, [sp, #24]
     45c:	str	w3, [sp, #20]
     460:	str	wzr, [sp, #60]
     464:	ldr	x0, [sp, #40]
     468:	ldr	x0, [x0, #8]
     46c:	ldr	x3, [sp, #24]
     470:	mov	w2, #0x1                   	// #1
     474:	ldr	x1, [sp, #32]
     478:	bl	0 <io_channel_read_blk64>
     47c:	str	x0, [sp, #48]
     480:	ldr	x0, [sp, #48]
     484:	cmp	x0, #0x0
     488:	b.eq	494 <ext2fs_read_ext_attr3+0x4c>  // b.none
     48c:	ldr	x0, [sp, #48]
     490:	b	500 <ext2fs_read_ext_attr3+0xb8>
     494:	ldr	x0, [sp, #40]
     498:	ldr	w0, [x0, #16]
     49c:	and	w0, w0, #0x200000
     4a0:	cmp	w0, #0x0
     4a4:	b.ne	4cc <ext2fs_read_ext_attr3+0x84>  // b.any
     4a8:	ldr	x3, [sp, #24]
     4ac:	ldr	x2, [sp, #32]
     4b0:	ldr	w1, [sp, #20]
     4b4:	ldr	x0, [sp, #40]
     4b8:	bl	0 <ext2fs_ext_attr_block_csum_verify>
     4bc:	cmp	w0, #0x0
     4c0:	b.ne	4cc <ext2fs_read_ext_attr3+0x84>  // b.any
     4c4:	mov	w0, #0x1                   	// #1
     4c8:	str	w0, [sp, #60]
     4cc:	ldr	x0, [sp, #24]
     4d0:	bl	3f0 <check_ext_attr_header>
     4d4:	str	x0, [sp, #48]
     4d8:	ldr	x0, [sp, #48]
     4dc:	cmp	x0, #0x0
     4e0:	b.ne	4fc <ext2fs_read_ext_attr3+0xb4>  // b.any
     4e4:	ldr	w0, [sp, #60]
     4e8:	cmp	w0, #0x0
     4ec:	b.eq	4fc <ext2fs_read_ext_attr3+0xb4>  // b.none
     4f0:	mov	x0, #0xb797                	// #46999
     4f4:	movk	x0, #0x7f2b, lsl #16
     4f8:	str	x0, [sp, #48]
     4fc:	ldr	x0, [sp, #48]
     500:	ldp	x29, x30, [sp], #64
     504:	ret

0000000000000508 <ext2fs_read_ext_attr2>:
     508:	stp	x29, x30, [sp, #-48]!
     50c:	mov	x29, sp
     510:	str	x0, [sp, #40]
     514:	str	x1, [sp, #32]
     518:	str	x2, [sp, #24]
     51c:	mov	w3, #0x0                   	// #0
     520:	ldr	x2, [sp, #24]
     524:	ldr	x1, [sp, #32]
     528:	ldr	x0, [sp, #40]
     52c:	bl	448 <ext2fs_read_ext_attr3>
     530:	ldp	x29, x30, [sp], #48
     534:	ret

0000000000000538 <ext2fs_read_ext_attr>:
     538:	stp	x29, x30, [sp, #-48]!
     53c:	mov	x29, sp
     540:	str	x0, [sp, #40]
     544:	str	w1, [sp, #36]
     548:	str	x2, [sp, #24]
     54c:	ldr	w0, [sp, #36]
     550:	ldr	x2, [sp, #24]
     554:	mov	x1, x0
     558:	ldr	x0, [sp, #40]
     55c:	bl	508 <ext2fs_read_ext_attr2>
     560:	ldp	x29, x30, [sp], #48
     564:	ret

0000000000000568 <ext2fs_write_ext_attr3>:
     568:	stp	x29, x30, [sp, #-64]!
     56c:	mov	x29, sp
     570:	str	x0, [sp, #40]
     574:	str	x1, [sp, #32]
     578:	str	x2, [sp, #24]
     57c:	str	w3, [sp, #20]
     580:	ldr	x0, [sp, #24]
     584:	str	x0, [sp, #56]
     588:	ldr	x3, [sp, #56]
     58c:	ldr	x2, [sp, #32]
     590:	ldr	w1, [sp, #20]
     594:	ldr	x0, [sp, #40]
     598:	bl	0 <ext2fs_ext_attr_block_csum_set>
     59c:	str	x0, [sp, #48]
     5a0:	ldr	x0, [sp, #48]
     5a4:	cmp	x0, #0x0
     5a8:	b.eq	5b4 <ext2fs_write_ext_attr3+0x4c>  // b.none
     5ac:	ldr	x0, [sp, #48]
     5b0:	b	5e8 <ext2fs_write_ext_attr3+0x80>
     5b4:	ldr	x0, [sp, #40]
     5b8:	ldr	x0, [x0, #8]
     5bc:	ldr	x3, [sp, #56]
     5c0:	mov	w2, #0x1                   	// #1
     5c4:	ldr	x1, [sp, #32]
     5c8:	bl	0 <io_channel_write_blk64>
     5cc:	str	x0, [sp, #48]
     5d0:	ldr	x0, [sp, #48]
     5d4:	cmp	x0, #0x0
     5d8:	b.ne	5e4 <ext2fs_write_ext_attr3+0x7c>  // b.any
     5dc:	ldr	x0, [sp, #40]
     5e0:	bl	0 <ext2fs_mark_changed>
     5e4:	ldr	x0, [sp, #48]
     5e8:	ldp	x29, x30, [sp], #64
     5ec:	ret

00000000000005f0 <ext2fs_write_ext_attr2>:
     5f0:	stp	x29, x30, [sp, #-48]!
     5f4:	mov	x29, sp
     5f8:	str	x0, [sp, #40]
     5fc:	str	x1, [sp, #32]
     600:	str	x2, [sp, #24]
     604:	mov	w3, #0x0                   	// #0
     608:	ldr	x2, [sp, #24]
     60c:	ldr	x1, [sp, #32]
     610:	ldr	x0, [sp, #40]
     614:	bl	568 <ext2fs_write_ext_attr3>
     618:	ldp	x29, x30, [sp], #48
     61c:	ret

0000000000000620 <ext2fs_write_ext_attr>:
     620:	stp	x29, x30, [sp, #-48]!
     624:	mov	x29, sp
     628:	str	x0, [sp, #40]
     62c:	str	w1, [sp, #36]
     630:	str	x2, [sp, #24]
     634:	ldr	w0, [sp, #36]
     638:	ldr	x2, [sp, #24]
     63c:	mov	x1, x0
     640:	ldr	x0, [sp, #40]
     644:	bl	5f0 <ext2fs_write_ext_attr2>
     648:	ldp	x29, x30, [sp], #48
     64c:	ret

0000000000000650 <ext2fs_adjust_ea_refcount3>:
     650:	stp	x29, x30, [sp, #-96]!
     654:	mov	x29, sp
     658:	str	x0, [sp, #56]
     65c:	str	x1, [sp, #48]
     660:	str	x2, [sp, #40]
     664:	str	w3, [sp, #36]
     668:	str	x4, [sp, #24]
     66c:	str	w5, [sp, #32]
     670:	str	xzr, [sp, #72]
     674:	ldr	x0, [sp, #56]
     678:	ldr	x0, [x0, #32]
     67c:	bl	0 <ext2fs_blocks_count>
     680:	mov	x1, x0
     684:	ldr	x0, [sp, #48]
     688:	cmp	x0, x1
     68c:	b.cs	6ac <ext2fs_adjust_ea_refcount3+0x5c>  // b.hs, b.nlast
     690:	ldr	x0, [sp, #56]
     694:	ldr	x0, [x0, #32]
     698:	ldr	w0, [x0, #20]
     69c:	mov	w0, w0
     6a0:	ldr	x1, [sp, #48]
     6a4:	cmp	x1, x0
     6a8:	b.cs	6b8 <ext2fs_adjust_ea_refcount3+0x68>  // b.hs, b.nlast
     6ac:	mov	x0, #0xb75a                	// #46938
     6b0:	movk	x0, #0x7f2b, lsl #16
     6b4:	b	798 <ext2fs_adjust_ea_refcount3+0x148>
     6b8:	ldr	x0, [sp, #40]
     6bc:	cmp	x0, #0x0
     6c0:	b.ne	6f8 <ext2fs_adjust_ea_refcount3+0xa8>  // b.any
     6c4:	ldr	x0, [sp, #56]
     6c8:	ldr	w0, [x0, #40]
     6cc:	mov	w0, w0
     6d0:	add	x1, sp, #0x48
     6d4:	bl	0 <ext2fs_get_mem>
     6d8:	str	x0, [sp, #88]
     6dc:	ldr	x0, [sp, #88]
     6e0:	cmp	x0, #0x0
     6e4:	b.eq	6f0 <ext2fs_adjust_ea_refcount3+0xa0>  // b.none
     6e8:	ldr	x0, [sp, #88]
     6ec:	b	798 <ext2fs_adjust_ea_refcount3+0x148>
     6f0:	ldr	x0, [sp, #72]
     6f4:	str	x0, [sp, #40]
     6f8:	ldr	w3, [sp, #32]
     6fc:	ldr	x2, [sp, #40]
     700:	ldr	x1, [sp, #48]
     704:	ldr	x0, [sp, #56]
     708:	bl	448 <ext2fs_read_ext_attr3>
     70c:	str	x0, [sp, #88]
     710:	ldr	x0, [sp, #88]
     714:	cmp	x0, #0x0
     718:	b.ne	77c <ext2fs_adjust_ea_refcount3+0x12c>  // b.any
     71c:	ldr	x0, [sp, #40]
     720:	str	x0, [sp, #80]
     724:	ldr	x0, [sp, #80]
     728:	ldr	w1, [x0, #4]
     72c:	ldr	w0, [sp, #36]
     730:	add	w1, w1, w0
     734:	ldr	x0, [sp, #80]
     738:	str	w1, [x0, #4]
     73c:	ldr	x0, [sp, #24]
     740:	cmp	x0, #0x0
     744:	b.eq	758 <ext2fs_adjust_ea_refcount3+0x108>  // b.none
     748:	ldr	x0, [sp, #80]
     74c:	ldr	w1, [x0, #4]
     750:	ldr	x0, [sp, #24]
     754:	str	w1, [x0]
     758:	ldr	w3, [sp, #32]
     75c:	ldr	x2, [sp, #40]
     760:	ldr	x1, [sp, #48]
     764:	ldr	x0, [sp, #56]
     768:	bl	568 <ext2fs_write_ext_attr3>
     76c:	str	x0, [sp, #88]
     770:	ldr	x0, [sp, #88]
     774:	cmp	x0, #0x0
     778:	b	780 <ext2fs_adjust_ea_refcount3+0x130>
     77c:	nop
     780:	ldr	x0, [sp, #72]
     784:	cmp	x0, #0x0
     788:	b.eq	794 <ext2fs_adjust_ea_refcount3+0x144>  // b.none
     78c:	add	x0, sp, #0x48
     790:	bl	0 <ext2fs_free_mem>
     794:	ldr	x0, [sp, #88]
     798:	ldp	x29, x30, [sp], #96
     79c:	ret

00000000000007a0 <ext2fs_adjust_ea_refcount2>:
     7a0:	stp	x29, x30, [sp, #-64]!
     7a4:	mov	x29, sp
     7a8:	str	x0, [sp, #56]
     7ac:	str	x1, [sp, #48]
     7b0:	str	x2, [sp, #40]
     7b4:	str	w3, [sp, #36]
     7b8:	str	x4, [sp, #24]
     7bc:	mov	w5, #0x0                   	// #0
     7c0:	ldr	x4, [sp, #24]
     7c4:	ldr	w3, [sp, #36]
     7c8:	ldr	x2, [sp, #40]
     7cc:	ldr	x1, [sp, #48]
     7d0:	ldr	x0, [sp, #56]
     7d4:	bl	650 <ext2fs_adjust_ea_refcount3>
     7d8:	ldp	x29, x30, [sp], #64
     7dc:	ret

00000000000007e0 <ext2fs_adjust_ea_refcount>:
     7e0:	stp	x29, x30, [sp, #-48]!
     7e4:	mov	x29, sp
     7e8:	str	x0, [sp, #40]
     7ec:	str	w1, [sp, #36]
     7f0:	str	x2, [sp, #24]
     7f4:	str	w3, [sp, #32]
     7f8:	str	x4, [sp, #16]
     7fc:	ldr	w0, [sp, #36]
     800:	ldr	x4, [sp, #16]
     804:	ldr	w3, [sp, #32]
     808:	ldr	x2, [sp, #24]
     80c:	mov	x1, x0
     810:	ldr	x0, [sp, #40]
     814:	bl	7a0 <ext2fs_adjust_ea_refcount2>
     818:	ldp	x29, x30, [sp], #48
     81c:	ret

0000000000000820 <ext2fs_xattrs_expand>:
     820:	stp	x29, x30, [sp, #-48]!
     824:	mov	x29, sp
     828:	str	x0, [sp, #24]
     82c:	str	w1, [sp, #20]
     830:	ldr	x0, [sp, #24]
     834:	ldr	w0, [x0, #24]
     838:	mov	w1, w0
     83c:	ldr	w0, [sp, #20]
     840:	add	w0, w1, w0
     844:	mov	w0, w0
     848:	add	x1, sp, #0x20
     84c:	mov	x2, x1
     850:	mov	x1, #0x18                  	// #24
     854:	bl	0 <ext2fs_get_arrayzero>
     858:	str	x0, [sp, #40]
     85c:	ldr	x0, [sp, #40]
     860:	cmp	x0, #0x0
     864:	b.eq	870 <ext2fs_xattrs_expand+0x50>  // b.none
     868:	ldr	x0, [sp, #40]
     86c:	b	8e4 <ext2fs_xattrs_expand+0xc4>
     870:	ldr	x3, [sp, #32]
     874:	ldr	x0, [sp, #24]
     878:	ldr	x4, [x0, #16]
     87c:	ldr	x0, [sp, #24]
     880:	ldr	w0, [x0, #24]
     884:	sxtw	x1, w0
     888:	mov	x0, x1
     88c:	lsl	x0, x0, #1
     890:	add	x0, x0, x1
     894:	lsl	x0, x0, #3
     898:	mov	x2, x0
     89c:	mov	x1, x4
     8a0:	mov	x0, x3
     8a4:	bl	0 <memcpy>
     8a8:	ldr	x0, [sp, #24]
     8ac:	add	x0, x0, #0x10
     8b0:	bl	0 <ext2fs_free_mem>
     8b4:	ldr	x0, [sp, #24]
     8b8:	ldr	w0, [x0, #24]
     8bc:	mov	w1, w0
     8c0:	ldr	w0, [sp, #20]
     8c4:	add	w0, w1, w0
     8c8:	mov	w1, w0
     8cc:	ldr	x0, [sp, #24]
     8d0:	str	w1, [x0, #24]
     8d4:	ldr	x1, [sp, #32]
     8d8:	ldr	x0, [sp, #24]
     8dc:	str	x1, [x0, #16]
     8e0:	mov	x0, #0x0                   	// #0
     8e4:	ldp	x29, x30, [sp], #48
     8e8:	ret

00000000000008ec <find_ea_prefix>:
     8ec:	sub	sp, sp, #0x20
     8f0:	str	w0, [sp, #12]
     8f4:	adrp	x0, 0 <EXT2_INODE>
     8f8:	add	x0, x0, #0x0
     8fc:	str	x0, [sp, #24]
     900:	b	930 <find_ea_prefix+0x44>
     904:	ldr	x0, [sp, #24]
     908:	ldr	w0, [x0]
     90c:	ldr	w1, [sp, #12]
     910:	cmp	w1, w0
     914:	b.ne	924 <find_ea_prefix+0x38>  // b.any
     918:	ldr	x0, [sp, #24]
     91c:	ldr	x0, [x0, #8]
     920:	b	944 <find_ea_prefix+0x58>
     924:	ldr	x0, [sp, #24]
     928:	add	x0, x0, #0x10
     92c:	str	x0, [sp, #24]
     930:	ldr	x0, [sp, #24]
     934:	ldr	x0, [x0, #8]
     938:	cmp	x0, #0x0
     93c:	b.ne	904 <find_ea_prefix+0x18>  // b.any
     940:	mov	x0, #0x0                   	// #0
     944:	add	sp, sp, #0x20
     948:	ret

000000000000094c <find_ea_index>:
     94c:	stp	x29, x30, [sp, #-80]!
     950:	mov	x29, sp
     954:	str	x19, [sp, #16]
     958:	str	x0, [sp, #56]
     95c:	str	x1, [sp, #48]
     960:	str	x2, [sp, #40]
     964:	adrp	x0, 0 <EXT2_INODE>
     968:	add	x0, x0, #0x0
     96c:	str	x0, [sp, #72]
     970:	b	9e4 <find_ea_index+0x98>
     974:	ldr	x0, [sp, #72]
     978:	ldr	x19, [x0, #8]
     97c:	ldr	x0, [sp, #72]
     980:	ldr	x0, [x0, #8]
     984:	bl	0 <strlen>
     988:	mov	x2, x0
     98c:	mov	x1, x19
     990:	ldr	x0, [sp, #56]
     994:	bl	0 <strncmp>
     998:	cmp	w0, #0x0
     99c:	b.ne	9d8 <find_ea_index+0x8c>  // b.any
     9a0:	ldr	x0, [sp, #72]
     9a4:	ldr	x0, [x0, #8]
     9a8:	bl	0 <strlen>
     9ac:	mov	x1, x0
     9b0:	ldr	x0, [sp, #56]
     9b4:	add	x1, x0, x1
     9b8:	ldr	x0, [sp, #48]
     9bc:	str	x1, [x0]
     9c0:	ldr	x0, [sp, #72]
     9c4:	ldr	w1, [x0]
     9c8:	ldr	x0, [sp, #40]
     9cc:	str	w1, [x0]
     9d0:	mov	w0, #0x1                   	// #1
     9d4:	b	9f8 <find_ea_index+0xac>
     9d8:	ldr	x0, [sp, #72]
     9dc:	add	x0, x0, #0x10
     9e0:	str	x0, [sp, #72]
     9e4:	ldr	x0, [sp, #72]
     9e8:	ldr	x0, [x0, #8]
     9ec:	cmp	x0, #0x0
     9f0:	b.ne	974 <find_ea_index+0x28>  // b.any
     9f4:	mov	w0, #0x0                   	// #0
     9f8:	ldr	x19, [sp, #16]
     9fc:	ldp	x29, x30, [sp], #80
     a00:	ret

0000000000000a04 <ext2fs_free_ext_attr>:
     a04:	stp	x29, x30, [sp, #-240]!
     a08:	mov	x29, sp
     a0c:	str	x0, [sp, #40]
     a10:	str	w1, [sp, #36]
     a14:	str	x2, [sp, #24]
     a18:	str	xzr, [sp, #208]
     a1c:	ldr	x0, [sp, #24]
     a20:	cmp	x0, #0x0
     a24:	b.ne	a60 <ext2fs_free_ext_attr+0x5c>  // b.any
     a28:	add	x0, sp, #0x30
     a2c:	mov	w3, #0xa0                  	// #160
     a30:	mov	x2, x0
     a34:	ldr	w1, [sp, #36]
     a38:	ldr	x0, [sp, #40]
     a3c:	bl	0 <ext2fs_read_inode_full>
     a40:	str	x0, [sp, #232]
     a44:	ldr	x0, [sp, #232]
     a48:	cmp	x0, #0x0
     a4c:	b.eq	a58 <ext2fs_free_ext_attr+0x54>  // b.none
     a50:	ldr	x0, [sp, #232]
     a54:	b	c38 <ext2fs_free_ext_attr+0x234>
     a58:	add	x0, sp, #0x30
     a5c:	str	x0, [sp, #24]
     a60:	ldr	x1, [sp, #24]
     a64:	ldr	x0, [sp, #40]
     a68:	bl	0 <ext2fs_file_acl_block>
     a6c:	str	x0, [sp, #224]
     a70:	ldr	x0, [sp, #224]
     a74:	cmp	x0, #0x0
     a78:	b.ne	a84 <ext2fs_free_ext_attr+0x80>  // b.any
     a7c:	mov	x0, #0x0                   	// #0
     a80:	b	c38 <ext2fs_free_ext_attr+0x234>
     a84:	ldr	x0, [sp, #40]
     a88:	ldr	x0, [x0, #32]
     a8c:	ldr	w0, [x0, #20]
     a90:	mov	w0, w0
     a94:	ldr	x1, [sp, #224]
     a98:	cmp	x1, x0
     a9c:	b.cc	abc <ext2fs_free_ext_attr+0xb8>  // b.lo, b.ul, b.last
     aa0:	ldr	x0, [sp, #40]
     aa4:	ldr	x0, [x0, #32]
     aa8:	bl	0 <ext2fs_blocks_count>
     aac:	mov	x1, x0
     ab0:	ldr	x0, [sp, #224]
     ab4:	cmp	x0, x1
     ab8:	b.cc	acc <ext2fs_free_ext_attr+0xc8>  // b.lo, b.ul, b.last
     abc:	mov	x0, #0xb75a                	// #46938
     ac0:	movk	x0, #0x7f2b, lsl #16
     ac4:	str	x0, [sp, #232]
     ac8:	b	c34 <ext2fs_free_ext_attr+0x230>
     acc:	ldr	x0, [sp, #40]
     ad0:	ldr	w0, [x0, #40]
     ad4:	mov	w0, w0
     ad8:	add	x1, sp, #0xd0
     adc:	bl	0 <ext2fs_get_mem>
     ae0:	str	x0, [sp, #232]
     ae4:	ldr	x0, [sp, #232]
     ae8:	cmp	x0, #0x0
     aec:	b.ne	c30 <ext2fs_free_ext_attr+0x22c>  // b.any
     af0:	ldr	x0, [sp, #208]
     af4:	ldr	w3, [sp, #36]
     af8:	mov	x2, x0
     afc:	ldr	x1, [sp, #224]
     b00:	ldr	x0, [sp, #40]
     b04:	bl	448 <ext2fs_read_ext_attr3>
     b08:	str	x0, [sp, #232]
     b0c:	ldr	x0, [sp, #232]
     b10:	cmp	x0, #0x0
     b14:	b.ne	c08 <ext2fs_free_ext_attr+0x204>  // b.any
     b18:	ldr	x0, [sp, #208]
     b1c:	str	x0, [sp, #216]
     b20:	ldr	x0, [sp, #216]
     b24:	ldr	w1, [x0]
     b28:	mov	w0, #0xea020000            	// #-368967680
     b2c:	cmp	w1, w0
     b30:	b.eq	b44 <ext2fs_free_ext_attr+0x140>  // b.none
     b34:	mov	x0, #0xb7a1                	// #47009
     b38:	movk	x0, #0x7f2b, lsl #16
     b3c:	str	x0, [sp, #232]
     b40:	b	c24 <ext2fs_free_ext_attr+0x220>
     b44:	ldr	x0, [sp, #216]
     b48:	ldr	w0, [x0, #4]
     b4c:	sub	w1, w0, #0x1
     b50:	ldr	x0, [sp, #216]
     b54:	str	w1, [x0, #4]
     b58:	ldr	x0, [sp, #208]
     b5c:	ldr	w3, [sp, #36]
     b60:	mov	x2, x0
     b64:	ldr	x1, [sp, #224]
     b68:	ldr	x0, [sp, #40]
     b6c:	bl	568 <ext2fs_write_ext_attr3>
     b70:	str	x0, [sp, #232]
     b74:	ldr	x0, [sp, #232]
     b78:	cmp	x0, #0x0
     b7c:	b.ne	c10 <ext2fs_free_ext_attr+0x20c>  // b.any
     b80:	mov	x2, #0x0                   	// #0
     b84:	ldr	x1, [sp, #24]
     b88:	ldr	x0, [sp, #40]
     b8c:	bl	0 <ext2fs_file_acl_block_set>
     b90:	ldr	x0, [sp, #216]
     b94:	ldr	w0, [x0, #4]
     b98:	cmp	w0, #0x0
     b9c:	b.ne	bb0 <ext2fs_free_ext_attr+0x1ac>  // b.any
     ba0:	mov	w2, #0xffffffff            	// #-1
     ba4:	ldr	x1, [sp, #224]
     ba8:	ldr	x0, [sp, #40]
     bac:	bl	0 <ext2fs_block_alloc_stats2>
     bb0:	mov	x2, #0x1                   	// #1
     bb4:	ldr	x1, [sp, #24]
     bb8:	ldr	x0, [sp, #40]
     bbc:	bl	0 <ext2fs_iblk_sub_blocks>
     bc0:	str	x0, [sp, #232]
     bc4:	ldr	x0, [sp, #232]
     bc8:	cmp	x0, #0x0
     bcc:	b.ne	c18 <ext2fs_free_ext_attr+0x214>  // b.any
     bd0:	add	x0, sp, #0x30
     bd4:	ldr	x1, [sp, #24]
     bd8:	cmp	x1, x0
     bdc:	b.ne	c20 <ext2fs_free_ext_attr+0x21c>  // b.any
     be0:	add	x0, sp, #0x30
     be4:	mov	w3, #0xa0                  	// #160
     be8:	mov	x2, x0
     bec:	ldr	w1, [sp, #36]
     bf0:	ldr	x0, [sp, #40]
     bf4:	bl	0 <ext2fs_write_inode_full>
     bf8:	str	x0, [sp, #232]
     bfc:	ldr	x0, [sp, #232]
     c00:	cmp	x0, #0x0
     c04:	b	c20 <ext2fs_free_ext_attr+0x21c>
     c08:	nop
     c0c:	b	c24 <ext2fs_free_ext_attr+0x220>
     c10:	nop
     c14:	b	c24 <ext2fs_free_ext_attr+0x220>
     c18:	nop
     c1c:	b	c24 <ext2fs_free_ext_attr+0x220>
     c20:	nop
     c24:	add	x0, sp, #0xd0
     c28:	bl	0 <ext2fs_free_mem>
     c2c:	b	c34 <ext2fs_free_ext_attr+0x230>
     c30:	nop
     c34:	ldr	x0, [sp, #232]
     c38:	ldp	x29, x30, [sp], #240
     c3c:	ret

0000000000000c40 <prep_ea_block_for_write>:
     c40:	stp	x29, x30, [sp, #-96]!
     c44:	mov	x29, sp
     c48:	str	x0, [sp, #40]
     c4c:	str	w1, [sp, #36]
     c50:	str	x2, [sp, #24]
     c54:	str	xzr, [sp, #64]
     c58:	ldr	x1, [sp, #24]
     c5c:	ldr	x0, [sp, #40]
     c60:	bl	0 <ext2fs_file_acl_block>
     c64:	str	x0, [sp, #56]
     c68:	ldr	x0, [sp, #56]
     c6c:	cmp	x0, #0x0
     c70:	b.eq	d8c <prep_ea_block_for_write+0x14c>  // b.none
     c74:	ldr	x0, [sp, #40]
     c78:	ldr	x0, [x0, #32]
     c7c:	ldr	w0, [x0, #20]
     c80:	mov	w1, w0
     c84:	ldr	x0, [sp, #56]
     c88:	cmp	x1, x0
     c8c:	b.hi	cac <prep_ea_block_for_write+0x6c>  // b.pmore
     c90:	ldr	x0, [sp, #40]
     c94:	ldr	x0, [x0, #32]
     c98:	bl	0 <ext2fs_blocks_count>
     c9c:	mov	x1, x0
     ca0:	ldr	x0, [sp, #56]
     ca4:	cmp	x1, x0
     ca8:	b.hi	cbc <prep_ea_block_for_write+0x7c>  // b.pmore
     cac:	mov	x0, #0xb75a                	// #46938
     cb0:	movk	x0, #0x7f2b, lsl #16
     cb4:	str	x0, [sp, #88]
     cb8:	b	e44 <prep_ea_block_for_write+0x204>
     cbc:	ldr	x0, [sp, #40]
     cc0:	ldr	w0, [x0, #40]
     cc4:	mov	w0, w0
     cc8:	add	x1, sp, #0x40
     ccc:	bl	0 <ext2fs_get_mem>
     cd0:	str	x0, [sp, #88]
     cd4:	ldr	x0, [sp, #88]
     cd8:	cmp	x0, #0x0
     cdc:	b.ne	e30 <prep_ea_block_for_write+0x1f0>  // b.any
     ce0:	ldr	x0, [sp, #56]
     ce4:	ldr	x1, [sp, #64]
     ce8:	ldr	w3, [sp, #36]
     cec:	mov	x2, x1
     cf0:	mov	x1, x0
     cf4:	ldr	x0, [sp, #40]
     cf8:	bl	448 <ext2fs_read_ext_attr3>
     cfc:	str	x0, [sp, #88]
     d00:	ldr	x0, [sp, #88]
     d04:	cmp	x0, #0x0
     d08:	b.ne	e04 <prep_ea_block_for_write+0x1c4>  // b.any
     d0c:	ldr	x0, [sp, #64]
     d10:	str	x0, [sp, #80]
     d14:	ldr	x0, [sp, #80]
     d18:	ldr	w1, [x0]
     d1c:	mov	w0, #0xea020000            	// #-368967680
     d20:	cmp	w1, w0
     d24:	b.eq	d38 <prep_ea_block_for_write+0xf8>  // b.none
     d28:	mov	x0, #0xb7a1                	// #47009
     d2c:	movk	x0, #0x7f2b, lsl #16
     d30:	str	x0, [sp, #88]
     d34:	b	e18 <prep_ea_block_for_write+0x1d8>
     d38:	ldr	x0, [sp, #80]
     d3c:	ldr	w0, [x0, #4]
     d40:	cmp	w0, #0x1
     d44:	b.eq	e0c <prep_ea_block_for_write+0x1cc>  // b.none
     d48:	ldr	x0, [sp, #80]
     d4c:	ldr	w0, [x0, #4]
     d50:	sub	w1, w0, #0x1
     d54:	ldr	x0, [sp, #80]
     d58:	str	w1, [x0, #4]
     d5c:	ldr	x0, [sp, #56]
     d60:	ldr	x1, [sp, #64]
     d64:	ldr	w3, [sp, #36]
     d68:	mov	x2, x1
     d6c:	mov	x1, x0
     d70:	ldr	x0, [sp, #40]
     d74:	bl	568 <ext2fs_write_ext_attr3>
     d78:	str	x0, [sp, #88]
     d7c:	ldr	x0, [sp, #88]
     d80:	cmp	x0, #0x0
     d84:	b.eq	dac <prep_ea_block_for_write+0x16c>  // b.none
     d88:	b	e18 <prep_ea_block_for_write+0x1d8>
     d8c:	mov	x2, #0x1                   	// #1
     d90:	ldr	x1, [sp, #24]
     d94:	ldr	x0, [sp, #40]
     d98:	bl	0 <ext2fs_iblk_add_blocks>
     d9c:	str	x0, [sp, #88]
     da0:	ldr	x0, [sp, #88]
     da4:	cmp	x0, #0x0
     da8:	b.ne	e38 <prep_ea_block_for_write+0x1f8>  // b.any
     dac:	mov	x3, #0x0                   	// #0
     db0:	ldr	x2, [sp, #24]
     db4:	ldr	w1, [sp, #36]
     db8:	ldr	x0, [sp, #40]
     dbc:	bl	0 <ext2fs_find_inode_goal>
     dc0:	str	x0, [sp, #72]
     dc4:	add	x0, sp, #0x38
     dc8:	mov	x3, x0
     dcc:	mov	x2, #0x0                   	// #0
     dd0:	ldr	x1, [sp, #72]
     dd4:	ldr	x0, [sp, #40]
     dd8:	bl	0 <ext2fs_alloc_block2>
     ddc:	str	x0, [sp, #88]
     de0:	ldr	x0, [sp, #88]
     de4:	cmp	x0, #0x0
     de8:	b.ne	e14 <prep_ea_block_for_write+0x1d4>  // b.any
     dec:	ldr	x0, [sp, #56]
     df0:	mov	x2, x0
     df4:	ldr	x1, [sp, #24]
     df8:	ldr	x0, [sp, #40]
     dfc:	bl	0 <ext2fs_file_acl_block_set>
     e00:	b	e18 <prep_ea_block_for_write+0x1d8>
     e04:	nop
     e08:	b	e18 <prep_ea_block_for_write+0x1d8>
     e0c:	nop
     e10:	b	e18 <prep_ea_block_for_write+0x1d8>
     e14:	nop
     e18:	ldr	x0, [sp, #64]
     e1c:	cmp	x0, #0x0
     e20:	b.eq	e40 <prep_ea_block_for_write+0x200>  // b.none
     e24:	add	x0, sp, #0x40
     e28:	bl	0 <ext2fs_free_mem>
     e2c:	b	e44 <prep_ea_block_for_write+0x204>
     e30:	nop
     e34:	b	e44 <prep_ea_block_for_write+0x204>
     e38:	nop
     e3c:	b	e44 <prep_ea_block_for_write+0x204>
     e40:	nop
     e44:	ldr	x0, [sp, #88]
     e48:	ldp	x29, x30, [sp], #96
     e4c:	ret

0000000000000e50 <posix_acl_xattr_count>:
     e50:	sub	sp, sp, #0x10
     e54:	str	x0, [sp, #8]
     e58:	ldr	x0, [sp, #8]
     e5c:	cmp	x0, #0x3
     e60:	b.hi	e6c <posix_acl_xattr_count+0x1c>  // b.pmore
     e64:	mov	w0, #0xffffffff            	// #-1
     e68:	b	e98 <posix_acl_xattr_count+0x48>
     e6c:	ldr	x0, [sp, #8]
     e70:	sub	x0, x0, #0x4
     e74:	str	x0, [sp, #8]
     e78:	ldr	x0, [sp, #8]
     e7c:	and	x0, x0, #0x7
     e80:	cmp	x0, #0x0
     e84:	b.eq	e90 <posix_acl_xattr_count+0x40>  // b.none
     e88:	mov	w0, #0xffffffff            	// #-1
     e8c:	b	e98 <posix_acl_xattr_count+0x48>
     e90:	ldr	x0, [sp, #8]
     e94:	lsr	x0, x0, #3
     e98:	add	sp, sp, #0x10
     e9c:	ret

0000000000000ea0 <convert_posix_acl_to_disk_buffer>:
     ea0:	stp	x29, x30, [sp, #-112]!
     ea4:	mov	x29, sp
     ea8:	str	x0, [sp, #40]
     eac:	str	x1, [sp, #32]
     eb0:	str	x2, [sp, #24]
     eb4:	str	x3, [sp, #16]
     eb8:	ldr	x0, [sp, #40]
     ebc:	str	x0, [sp, #80]
     ec0:	ldr	x0, [sp, #80]
     ec4:	add	x0, x0, #0x4
     ec8:	str	x0, [sp, #104]
     ecc:	ldr	x0, [sp, #40]
     ed0:	cmp	x0, #0x0
     ed4:	b.ne	ee0 <convert_posix_acl_to_disk_buffer+0x40>  // b.any
     ed8:	mov	x0, #0x16                  	// #22
     edc:	b	1070 <convert_posix_acl_to_disk_buffer+0x1d0>
     ee0:	ldr	x0, [sp, #32]
     ee4:	cmp	x0, #0x3
     ee8:	b.hi	ef4 <convert_posix_acl_to_disk_buffer+0x54>  // b.pmore
     eec:	mov	x0, #0xc                   	// #12
     ef0:	b	1070 <convert_posix_acl_to_disk_buffer+0x1d0>
     ef4:	ldr	x0, [sp, #80]
     ef8:	ldr	w0, [x0]
     efc:	cmp	w0, #0x2
     f00:	b.eq	f0c <convert_posix_acl_to_disk_buffer+0x6c>  // b.none
     f04:	mov	x0, #0x16                  	// #22
     f08:	b	1070 <convert_posix_acl_to_disk_buffer+0x1d0>
     f0c:	ldr	x0, [sp, #32]
     f10:	bl	e50 <posix_acl_xattr_count>
     f14:	str	w0, [sp, #76]
     f18:	ldr	x0, [sp, #24]
     f1c:	str	x0, [sp, #64]
     f20:	ldr	x0, [sp, #64]
     f24:	mov	w1, #0x1                   	// #1
     f28:	str	w1, [x0]
     f2c:	ldr	w0, [sp, #76]
     f30:	cmp	w0, #0x0
     f34:	b.gt	f40 <convert_posix_acl_to_disk_buffer+0xa0>
     f38:	mov	x0, #0x16                  	// #22
     f3c:	b	1070 <convert_posix_acl_to_disk_buffer+0x1d0>
     f40:	ldr	x0, [sp, #24]
     f44:	add	x0, x0, #0x4
     f48:	str	x0, [sp, #88]
     f4c:	mov	x0, #0x4                   	// #4
     f50:	str	x0, [sp, #96]
     f54:	ldrsw	x0, [sp, #76]
     f58:	lsl	x0, x0, #3
     f5c:	ldr	x1, [sp, #104]
     f60:	add	x0, x1, x0
     f64:	str	x0, [sp, #56]
     f68:	b	1050 <convert_posix_acl_to_disk_buffer+0x1b0>
     f6c:	ldr	x0, [sp, #88]
     f70:	str	x0, [sp, #48]
     f74:	ldr	x0, [sp, #104]
     f78:	ldrh	w1, [x0]
     f7c:	ldr	x0, [sp, #48]
     f80:	strh	w1, [x0]
     f84:	ldr	x0, [sp, #104]
     f88:	ldrh	w1, [x0, #2]
     f8c:	ldr	x0, [sp, #48]
     f90:	strh	w1, [x0, #2]
     f94:	ldr	x0, [sp, #104]
     f98:	ldrh	w0, [x0]
     f9c:	cmp	w0, #0x20
     fa0:	cset	w1, hi  // hi = pmore
     fa4:	and	w1, w1, #0xff
     fa8:	cmp	w1, #0x0
     fac:	b.ne	1044 <convert_posix_acl_to_disk_buffer+0x1a4>  // b.any
     fb0:	mov	x1, #0x1                   	// #1
     fb4:	lsl	x0, x1, x0
     fb8:	mov	x1, #0x12                  	// #18
     fbc:	movk	x1, #0x1, lsl #16
     fc0:	movk	x1, #0x1, lsl #32
     fc4:	and	x1, x0, x1
     fc8:	cmp	x1, #0x0
     fcc:	cset	w1, ne  // ne = any
     fd0:	and	w1, w1, #0xff
     fd4:	cmp	w1, #0x0
     fd8:	b.ne	ffc <convert_posix_acl_to_disk_buffer+0x15c>  // b.any
     fdc:	mov	x1, #0x104                 	// #260
     fe0:	and	x0, x0, x1
     fe4:	cmp	x0, #0x0
     fe8:	cset	w0, ne  // ne = any
     fec:	and	w0, w0, #0xff
     ff0:	cmp	w0, #0x0
     ff4:	b.ne	1018 <convert_posix_acl_to_disk_buffer+0x178>  // b.any
     ff8:	b	1044 <convert_posix_acl_to_disk_buffer+0x1a4>
     ffc:	ldr	x0, [sp, #88]
    1000:	add	x0, x0, #0x4
    1004:	str	x0, [sp, #88]
    1008:	ldr	x0, [sp, #96]
    100c:	add	x0, x0, #0x4
    1010:	str	x0, [sp, #96]
    1014:	b	1044 <convert_posix_acl_to_disk_buffer+0x1a4>
    1018:	ldr	x0, [sp, #104]
    101c:	ldr	w1, [x0, #4]
    1020:	ldr	x0, [sp, #48]
    1024:	str	w1, [x0, #4]
    1028:	ldr	x0, [sp, #88]
    102c:	add	x0, x0, #0x8
    1030:	str	x0, [sp, #88]
    1034:	ldr	x0, [sp, #96]
    1038:	add	x0, x0, #0x8
    103c:	str	x0, [sp, #96]
    1040:	nop
    1044:	ldr	x0, [sp, #104]
    1048:	add	x0, x0, #0x8
    104c:	str	x0, [sp, #104]
    1050:	ldr	x1, [sp, #104]
    1054:	ldr	x0, [sp, #56]
    1058:	cmp	x1, x0
    105c:	b.ne	f6c <convert_posix_acl_to_disk_buffer+0xcc>  // b.any
    1060:	ldr	x0, [sp, #16]
    1064:	ldr	x1, [sp, #96]
    1068:	str	x1, [x0]
    106c:	mov	x0, #0x0                   	// #0
    1070:	ldp	x29, x30, [sp], #112
    1074:	ret

0000000000001078 <convert_disk_buffer_to_posix_acl>:
    1078:	stp	x29, x30, [sp, #-112]!
    107c:	mov	x29, sp
    1080:	str	x0, [sp, #40]
    1084:	str	x1, [sp, #32]
    1088:	str	x2, [sp, #24]
    108c:	str	x3, [sp, #16]
    1090:	ldr	x0, [sp, #40]
    1094:	str	x0, [sp, #88]
    1098:	ldr	x0, [sp, #40]
    109c:	cmp	x0, #0x0
    10a0:	b.eq	10c0 <convert_disk_buffer_to_posix_acl+0x48>  // b.none
    10a4:	ldr	x0, [sp, #32]
    10a8:	cmp	x0, #0x3
    10ac:	b.ls	10c0 <convert_disk_buffer_to_posix_acl+0x48>  // b.plast
    10b0:	ldr	x0, [sp, #88]
    10b4:	ldr	w0, [x0]
    10b8:	cmp	w0, #0x1
    10bc:	b.eq	10c8 <convert_disk_buffer_to_posix_acl+0x50>  // b.none
    10c0:	mov	x0, #0x16                  	// #22
    10c4:	b	125c <convert_disk_buffer_to_posix_acl+0x1e4>
    10c8:	ldr	x0, [sp, #32]
    10cc:	lsl	x0, x0, #1
    10d0:	add	x1, sp, #0x38
    10d4:	bl	0 <ext2fs_get_mem>
    10d8:	str	x0, [sp, #80]
    10dc:	ldr	x0, [sp, #80]
    10e0:	cmp	x0, #0x0
    10e4:	b.eq	10f0 <convert_disk_buffer_to_posix_acl+0x78>  // b.none
    10e8:	ldr	x0, [sp, #80]
    10ec:	b	125c <convert_disk_buffer_to_posix_acl+0x1e4>
    10f0:	ldr	x0, [sp, #56]
    10f4:	str	x0, [sp, #72]
    10f8:	ldr	x0, [sp, #72]
    10fc:	mov	w1, #0x2                   	// #2
    1100:	str	w1, [x0]
    1104:	ldr	x0, [sp, #56]
    1108:	add	x0, x0, #0x4
    110c:	str	x0, [sp, #104]
    1110:	ldr	x0, [sp, #40]
    1114:	add	x0, x0, #0x4
    1118:	str	x0, [sp, #96]
    111c:	ldr	x0, [sp, #32]
    1120:	sub	x0, x0, #0x4
    1124:	str	x0, [sp, #32]
    1128:	b	1228 <convert_disk_buffer_to_posix_acl+0x1b0>
    112c:	ldr	x0, [sp, #96]
    1130:	str	x0, [sp, #64]
    1134:	ldr	x0, [sp, #64]
    1138:	ldrh	w1, [x0]
    113c:	ldr	x0, [sp, #104]
    1140:	strh	w1, [x0]
    1144:	ldr	x0, [sp, #64]
    1148:	ldrh	w1, [x0, #2]
    114c:	ldr	x0, [sp, #104]
    1150:	strh	w1, [x0, #2]
    1154:	ldr	x0, [sp, #104]
    1158:	ldrh	w0, [x0]
    115c:	cmp	w0, #0x20
    1160:	cset	w1, hi  // hi = pmore
    1164:	and	w1, w1, #0xff
    1168:	cmp	w1, #0x0
    116c:	b.ne	120c <convert_disk_buffer_to_posix_acl+0x194>  // b.any
    1170:	mov	x1, #0x1                   	// #1
    1174:	lsl	x0, x1, x0
    1178:	mov	x1, #0x12                  	// #18
    117c:	movk	x1, #0x1, lsl #16
    1180:	movk	x1, #0x1, lsl #32
    1184:	and	x1, x0, x1
    1188:	cmp	x1, #0x0
    118c:	cset	w1, ne  // ne = any
    1190:	and	w1, w1, #0xff
    1194:	cmp	w1, #0x0
    1198:	b.ne	11bc <convert_disk_buffer_to_posix_acl+0x144>  // b.any
    119c:	mov	x1, #0x104                 	// #260
    11a0:	and	x0, x0, x1
    11a4:	cmp	x0, #0x0
    11a8:	cset	w0, ne  // ne = any
    11ac:	and	w0, w0, #0xff
    11b0:	cmp	w0, #0x0
    11b4:	b.ne	11e0 <convert_disk_buffer_to_posix_acl+0x168>  // b.any
    11b8:	b	120c <convert_disk_buffer_to_posix_acl+0x194>
    11bc:	ldr	x0, [sp, #104]
    11c0:	str	wzr, [x0, #4]
    11c4:	ldr	x0, [sp, #96]
    11c8:	add	x0, x0, #0x4
    11cc:	str	x0, [sp, #96]
    11d0:	ldr	x0, [sp, #32]
    11d4:	sub	x0, x0, #0x4
    11d8:	str	x0, [sp, #32]
    11dc:	b	121c <convert_disk_buffer_to_posix_acl+0x1a4>
    11e0:	ldr	x0, [sp, #64]
    11e4:	ldr	w1, [x0, #4]
    11e8:	ldr	x0, [sp, #104]
    11ec:	str	w1, [x0, #4]
    11f0:	ldr	x0, [sp, #96]
    11f4:	add	x0, x0, #0x8
    11f8:	str	x0, [sp, #96]
    11fc:	ldr	x0, [sp, #32]
    1200:	sub	x0, x0, #0x8
    1204:	str	x0, [sp, #32]
    1208:	b	121c <convert_disk_buffer_to_posix_acl+0x1a4>
    120c:	add	x0, sp, #0x38
    1210:	bl	0 <ext2fs_free_mem>
    1214:	mov	x0, #0x16                  	// #22
    1218:	b	125c <convert_disk_buffer_to_posix_acl+0x1e4>
    121c:	ldr	x0, [sp, #104]
    1220:	add	x0, x0, #0x8
    1224:	str	x0, [sp, #104]
    1228:	ldr	x0, [sp, #32]
    122c:	cmp	x0, #0x0
    1230:	b.ne	112c <convert_disk_buffer_to_posix_acl+0xb4>  // b.any
    1234:	ldr	x1, [sp, #56]
    1238:	ldr	x0, [sp, #24]
    123c:	str	x1, [x0]
    1240:	ldr	x0, [sp, #56]
    1244:	ldr	x1, [sp, #104]
    1248:	sub	x0, x1, x0
    124c:	mov	x1, x0
    1250:	ldr	x0, [sp, #16]
    1254:	str	x1, [x0]
    1258:	mov	x0, #0x0                   	// #0
    125c:	ldp	x29, x30, [sp], #112
    1260:	ret

0000000000001264 <write_xattrs_to_buffer>:
    1264:	stp	x29, x30, [sp, #-128]!
    1268:	mov	x29, sp
    126c:	str	x0, [sp, #56]
    1270:	str	x1, [sp, #48]
    1274:	str	w2, [sp, #44]
    1278:	str	x3, [sp, #32]
    127c:	str	w4, [sp, #40]
    1280:	str	w5, [sp, #28]
    1284:	str	w6, [sp, #24]
    1288:	ldr	x0, [sp, #32]
    128c:	str	x0, [sp, #112]
    1290:	ldr	w0, [sp, #40]
    1294:	ldr	x1, [sp, #32]
    1298:	add	x0, x1, x0
    129c:	str	x0, [sp, #104]
    12a0:	ldr	w0, [sp, #40]
    12a4:	mov	x2, x0
    12a8:	mov	w1, #0x0                   	// #0
    12ac:	ldr	x0, [sp, #32]
    12b0:	bl	0 <memset>
    12b4:	ldr	x0, [sp, #48]
    12b8:	str	x0, [sp, #120]
    12bc:	b	1498 <write_xattrs_to_buffer+0x234>
    12c0:	ldr	x0, [sp, #120]
    12c4:	ldr	x0, [x0]
    12c8:	str	x0, [sp, #80]
    12cc:	ldr	x0, [sp, #120]
    12d0:	ldr	x0, [x0]
    12d4:	add	x2, sp, #0x4c
    12d8:	add	x1, sp, #0x50
    12dc:	bl	94c <find_ea_index>
    12e0:	str	w0, [sp, #100]
    12e4:	ldr	x0, [sp, #120]
    12e8:	ldr	w0, [x0, #16]
    12ec:	add	w0, w0, #0x3
    12f0:	and	w0, w0, #0xfffffffc
    12f4:	str	w0, [sp, #96]
    12f8:	ldr	x0, [sp, #80]
    12fc:	bl	0 <strlen>
    1300:	and	w1, w0, #0xff
    1304:	ldr	x0, [sp, #112]
    1308:	strb	w1, [x0]
    130c:	ldr	w0, [sp, #100]
    1310:	cmp	w0, #0x0
    1314:	b.eq	1324 <write_xattrs_to_buffer+0xc0>  // b.none
    1318:	ldr	w0, [sp, #76]
    131c:	and	w1, w0, #0xff
    1320:	b	1328 <write_xattrs_to_buffer+0xc4>
    1324:	mov	w1, #0x0                   	// #0
    1328:	ldr	x0, [sp, #112]
    132c:	strb	w1, [x0, #1]
    1330:	ldr	x0, [sp, #120]
    1334:	ldr	w1, [x0, #16]
    1338:	ldr	x0, [sp, #112]
    133c:	str	w1, [x0, #8]
    1340:	ldr	x0, [sp, #120]
    1344:	ldr	w1, [x0, #20]
    1348:	ldr	x0, [sp, #112]
    134c:	str	w1, [x0, #4]
    1350:	ldr	x0, [sp, #112]
    1354:	add	x3, x0, #0x10
    1358:	ldr	x1, [sp, #80]
    135c:	ldr	x0, [sp, #112]
    1360:	ldrb	w0, [x0]
    1364:	and	x0, x0, #0xff
    1368:	mov	x2, x0
    136c:	mov	x0, x3
    1370:	bl	0 <memcpy>
    1374:	ldr	x0, [sp, #120]
    1378:	ldr	w0, [x0, #20]
    137c:	cmp	w0, #0x0
    1380:	b.eq	1390 <write_xattrs_to_buffer+0x12c>  // b.none
    1384:	ldr	x0, [sp, #112]
    1388:	strh	wzr, [x0, #2]
    138c:	b	13ec <write_xattrs_to_buffer+0x188>
    1390:	ldr	w0, [sp, #96]
    1394:	neg	x0, x0
    1398:	ldr	x1, [sp, #104]
    139c:	add	x0, x1, x0
    13a0:	str	x0, [sp, #104]
    13a4:	ldr	x1, [sp, #104]
    13a8:	ldr	x0, [sp, #32]
    13ac:	sub	x0, x1, x0
    13b0:	and	w1, w0, #0xffff
    13b4:	ldr	w0, [sp, #28]
    13b8:	and	w0, w0, #0xffff
    13bc:	add	w0, w1, w0
    13c0:	and	w1, w0, #0xffff
    13c4:	ldr	x0, [sp, #112]
    13c8:	strh	w1, [x0, #2]
    13cc:	ldr	x0, [sp, #120]
    13d0:	ldr	x1, [x0, #8]
    13d4:	ldr	x0, [sp, #112]
    13d8:	ldr	w0, [x0, #8]
    13dc:	mov	w0, w0
    13e0:	mov	x2, x0
    13e4:	ldr	x0, [sp, #104]
    13e8:	bl	0 <memcpy>
    13ec:	ldr	w0, [sp, #24]
    13f0:	cmp	w0, #0x0
    13f4:	b.ne	1408 <write_xattrs_to_buffer+0x1a4>  // b.any
    13f8:	ldr	x0, [sp, #120]
    13fc:	ldr	w0, [x0, #20]
    1400:	cmp	w0, #0x0
    1404:	b.eq	1458 <write_xattrs_to_buffer+0x1f4>  // b.none
    1408:	ldr	x0, [sp, #120]
    140c:	ldr	w0, [x0, #20]
    1410:	cmp	w0, #0x0
    1414:	b.ne	1420 <write_xattrs_to_buffer+0x1bc>  // b.any
    1418:	ldr	x0, [sp, #104]
    141c:	b	1424 <write_xattrs_to_buffer+0x1c0>
    1420:	mov	x0, #0x0                   	// #0
    1424:	ldr	x1, [sp, #112]
    1428:	add	x1, x1, #0xc
    142c:	mov	x3, x1
    1430:	mov	x2, x0
    1434:	ldr	x1, [sp, #112]
    1438:	ldr	x0, [sp, #56]
    143c:	bl	200 <ext2fs_ext_attr_hash_entry2>
    1440:	str	x0, [sp, #88]
    1444:	ldr	x0, [sp, #88]
    1448:	cmp	x0, #0x0
    144c:	b.eq	1460 <write_xattrs_to_buffer+0x1fc>  // b.none
    1450:	ldr	x0, [sp, #88]
    1454:	b	14c8 <write_xattrs_to_buffer+0x264>
    1458:	ldr	x0, [sp, #112]
    145c:	str	wzr, [x0, #12]
    1460:	ldr	x0, [sp, #112]
    1464:	ldrb	w0, [x0]
    1468:	add	w0, w0, #0x3
    146c:	mov	w0, w0
    1470:	add	x0, x0, #0x10
    1474:	and	x0, x0, #0xfffffffc
    1478:	ldr	x1, [sp, #112]
    147c:	add	x0, x1, x0
    1480:	str	x0, [sp, #112]
    1484:	ldr	x0, [sp, #112]
    1488:	str	wzr, [x0]
    148c:	ldr	x0, [sp, #120]
    1490:	add	x0, x0, #0x18
    1494:	str	x0, [sp, #120]
    1498:	ldrsw	x1, [sp, #44]
    149c:	mov	x0, x1
    14a0:	lsl	x0, x0, #1
    14a4:	add	x0, x0, x1
    14a8:	lsl	x0, x0, #3
    14ac:	mov	x1, x0
    14b0:	ldr	x0, [sp, #48]
    14b4:	add	x0, x0, x1
    14b8:	ldr	x1, [sp, #120]
    14bc:	cmp	x1, x0
    14c0:	b.cc	12c0 <write_xattrs_to_buffer+0x5c>  // b.lo, b.ul, b.last
    14c4:	mov	x0, #0x0                   	// #0
    14c8:	ldp	x29, x30, [sp], #128
    14cc:	ret

00000000000014d0 <ext2fs_xattrs_write>:
    14d0:	stp	x29, x30, [sp, #-160]!
    14d4:	mov	x29, sp
    14d8:	str	x19, [sp, #16]
    14dc:	str	x0, [sp, #40]
    14e0:	ldr	x0, [sp, #40]
    14e4:	ldr	x0, [x0, #8]
    14e8:	str	x0, [sp, #128]
    14ec:	ldr	x0, [sp, #128]
    14f0:	ldr	x0, [x0, #32]
    14f4:	ldr	w0, [x0, #76]
    14f8:	cmp	w0, #0x0
    14fc:	b.eq	1510 <ext2fs_xattrs_write+0x40>  // b.none
    1500:	ldr	x0, [sp, #128]
    1504:	ldr	x0, [x0, #32]
    1508:	ldrh	w0, [x0, #88]
    150c:	b	1514 <ext2fs_xattrs_write+0x44>
    1510:	mov	w0, #0x80                  	// #128
    1514:	str	w0, [sp, #124]
    1518:	str	xzr, [sp, #64]
    151c:	ldr	x0, [sp, #40]
    1520:	ldr	x1, [x0]
    1524:	mov	x0, #0xb7a8                	// #47016
    1528:	movk	x0, #0x7f2b, lsl #16
    152c:	cmp	x1, x0
    1530:	b.eq	1540 <ext2fs_xattrs_write+0x70>  // b.none
    1534:	mov	x0, #0xb7a8                	// #47016
    1538:	movk	x0, #0x7f2b, lsl #16
    153c:	b	1990 <ext2fs_xattrs_write+0x4c0>
    1540:	ldr	w0, [sp, #124]
    1544:	str	w0, [sp, #156]
    1548:	ldr	w0, [sp, #156]
    154c:	cmp	w0, #0x9f
    1550:	b.hi	155c <ext2fs_xattrs_write+0x8c>  // b.pmore
    1554:	mov	w0, #0xa0                  	// #160
    1558:	str	w0, [sp, #156]
    155c:	ldr	w0, [sp, #156]
    1560:	add	x1, sp, #0x48
    1564:	bl	0 <ext2fs_get_memzero>
    1568:	str	x0, [sp, #144]
    156c:	ldr	x0, [sp, #144]
    1570:	cmp	x0, #0x0
    1574:	b.eq	1580 <ext2fs_xattrs_write+0xb0>  // b.none
    1578:	ldr	x0, [sp, #144]
    157c:	b	1990 <ext2fs_xattrs_write+0x4c0>
    1580:	ldr	x0, [sp, #40]
    1584:	ldr	w19, [x0, #36]
    1588:	ldr	x0, [sp, #72]
    158c:	bl	0 <EXT2_INODE>
    1590:	mov	x1, x0
    1594:	ldr	w0, [sp, #124]
    1598:	mov	w3, w0
    159c:	mov	x2, x1
    15a0:	mov	w1, w19
    15a4:	ldr	x0, [sp, #128]
    15a8:	bl	0 <ext2fs_read_inode_full>
    15ac:	str	x0, [sp, #144]
    15b0:	ldr	x0, [sp, #144]
    15b4:	cmp	x0, #0x0
    15b8:	b.ne	1968 <ext2fs_xattrs_write+0x498>  // b.any
    15bc:	ldr	x0, [sp, #72]
    15c0:	ldrh	w0, [x0, #128]
    15c4:	cmp	w0, #0x0
    15c8:	b.ne	162c <ext2fs_xattrs_write+0x15c>  // b.any
    15cc:	ldr	w0, [sp, #124]
    15d0:	cmp	w0, #0x80
    15d4:	b.ls	162c <ext2fs_xattrs_write+0x15c>  // b.plast
    15d8:	ldr	x0, [sp, #72]
    15dc:	str	x0, [sp, #112]
    15e0:	ldr	x0, [sp, #128]
    15e4:	ldr	x0, [x0, #32]
    15e8:	ldrh	w0, [x0, #350]
    15ec:	and	x0, x0, #0xffff
    15f0:	str	x0, [sp, #136]
    15f4:	ldr	x0, [sp, #136]
    15f8:	cmp	x0, #0x0
    15fc:	b.ne	1608 <ext2fs_xattrs_write+0x138>  // b.any
    1600:	mov	x0, #0x4                   	// #4
    1604:	str	x0, [sp, #136]
    1608:	ldr	x0, [sp, #112]
    160c:	add	x0, x0, #0x80
    1610:	ldr	x2, [sp, #136]
    1614:	mov	w1, #0x0                   	// #0
    1618:	bl	0 <memset>
    161c:	ldr	x0, [sp, #72]
    1620:	ldr	x1, [sp, #136]
    1624:	and	w1, w1, #0xffff
    1628:	strh	w1, [x0, #128]
    162c:	ldr	x0, [sp, #72]
    1630:	ldrh	w0, [x0, #128]
    1634:	and	w0, w0, #0x3
    1638:	cmp	w0, #0x0
    163c:	b.eq	1650 <ext2fs_xattrs_write+0x180>  // b.none
    1640:	mov	x0, #0xb7b1                	// #47025
    1644:	movk	x0, #0x7f2b, lsl #16
    1648:	str	x0, [sp, #144]
    164c:	b	1984 <ext2fs_xattrs_write+0x4b4>
    1650:	ldr	x0, [sp, #72]
    1654:	ldrh	w0, [x0, #128]
    1658:	cmp	w0, #0x1
    165c:	b.ls	1720 <ext2fs_xattrs_write+0x250>  // b.plast
    1660:	ldr	w1, [sp, #124]
    1664:	ldr	x0, [sp, #72]
    1668:	ldrh	w0, [x0, #128]
    166c:	add	w0, w0, #0x80
    1670:	sxtw	x0, w0
    1674:	add	x0, x0, #0x4
    1678:	cmp	x1, x0
    167c:	b.ls	1720 <ext2fs_xattrs_write+0x250>  // b.plast
    1680:	mov	w0, #0xea020000            	// #-368967680
    1684:	str	w0, [sp, #60]
    1688:	ldr	x1, [sp, #72]
    168c:	ldr	x0, [sp, #72]
    1690:	ldrh	w0, [x0, #128]
    1694:	and	x0, x0, #0xffff
    1698:	add	x0, x0, #0x80
    169c:	add	x0, x1, x0
    16a0:	ldr	w1, [sp, #60]
    16a4:	str	w1, [x0]
    16a8:	ldr	x0, [sp, #72]
    16ac:	ldrh	w0, [x0, #128]
    16b0:	mov	w1, w0
    16b4:	ldr	w0, [sp, #124]
    16b8:	sub	w0, w0, w1
    16bc:	sub	w0, w0, #0x84
    16c0:	str	w0, [sp, #108]
    16c4:	ldr	x1, [sp, #72]
    16c8:	ldr	x0, [sp, #72]
    16cc:	ldrh	w0, [x0, #128]
    16d0:	and	x0, x0, #0xffff
    16d4:	add	x0, x0, #0x84
    16d8:	add	x0, x1, x0
    16dc:	str	x0, [sp, #96]
    16e0:	ldr	x0, [sp, #40]
    16e4:	ldr	x1, [x0, #16]
    16e8:	ldr	x0, [sp, #40]
    16ec:	ldr	w0, [x0, #32]
    16f0:	mov	w6, #0x0                   	// #0
    16f4:	mov	w5, #0x0                   	// #0
    16f8:	ldr	w4, [sp, #108]
    16fc:	ldr	x3, [sp, #96]
    1700:	mov	w2, w0
    1704:	ldr	x0, [sp, #128]
    1708:	bl	1264 <write_xattrs_to_buffer>
    170c:	str	x0, [sp, #144]
    1710:	ldr	x0, [sp, #144]
    1714:	cmp	x0, #0x0
    1718:	b.ne	1970 <ext2fs_xattrs_write+0x4a0>  // b.any
    171c:	b	1724 <ext2fs_xattrs_write+0x254>
    1720:	nop
    1724:	ldr	x0, [sp, #40]
    1728:	ldr	w1, [x0, #32]
    172c:	ldr	x0, [sp, #40]
    1730:	ldr	w0, [x0, #28]
    1734:	cmp	w1, w0
    1738:	b.ne	1758 <ext2fs_xattrs_write+0x288>  // b.any
    173c:	ldr	x0, [sp, #72]
    1740:	bl	0 <EXT2_INODE>
    1744:	mov	x1, x0
    1748:	ldr	x0, [sp, #128]
    174c:	bl	0 <ext2fs_file_acl_block>
    1750:	cmp	x0, #0x0
    1754:	b.eq	18b0 <ext2fs_xattrs_write+0x3e0>  // b.none
    1758:	ldr	x0, [sp, #128]
    175c:	ldr	w0, [x0, #40]
    1760:	mov	w0, w0
    1764:	add	x1, sp, #0x40
    1768:	bl	0 <ext2fs_get_memzero>
    176c:	str	x0, [sp, #144]
    1770:	ldr	x0, [sp, #144]
    1774:	cmp	x0, #0x0
    1778:	b.ne	1978 <ext2fs_xattrs_write+0x4a8>  // b.any
    177c:	ldr	x0, [sp, #128]
    1780:	ldr	w0, [x0, #40]
    1784:	sub	w0, w0, #0x20
    1788:	str	w0, [sp, #108]
    178c:	ldr	x0, [sp, #64]
    1790:	add	x0, x0, #0x20
    1794:	str	x0, [sp, #96]
    1798:	ldr	x0, [sp, #40]
    179c:	ldr	x2, [x0, #16]
    17a0:	ldr	x0, [sp, #40]
    17a4:	ldr	w0, [x0, #32]
    17a8:	sxtw	x1, w0
    17ac:	mov	x0, x1
    17b0:	lsl	x0, x0, #1
    17b4:	add	x0, x0, x1
    17b8:	lsl	x0, x0, #3
    17bc:	add	x7, x2, x0
    17c0:	ldr	x0, [sp, #40]
    17c4:	ldr	w1, [x0, #28]
    17c8:	ldr	x0, [sp, #40]
    17cc:	ldr	w0, [x0, #32]
    17d0:	sub	w2, w1, w0
    17d4:	ldr	x0, [sp, #64]
    17d8:	ldr	x1, [sp, #96]
    17dc:	sub	x0, x1, x0
    17e0:	mov	w6, #0x1                   	// #1
    17e4:	mov	w5, w0
    17e8:	ldr	w4, [sp, #108]
    17ec:	ldr	x3, [sp, #96]
    17f0:	mov	x1, x7
    17f4:	ldr	x0, [sp, #128]
    17f8:	bl	1264 <write_xattrs_to_buffer>
    17fc:	str	x0, [sp, #144]
    1800:	ldr	x0, [sp, #144]
    1804:	cmp	x0, #0x0
    1808:	b.ne	1948 <ext2fs_xattrs_write+0x478>  // b.any
    180c:	ldr	x0, [sp, #64]
    1810:	str	x0, [sp, #88]
    1814:	ldr	x0, [sp, #88]
    1818:	mov	w1, #0xea020000            	// #-368967680
    181c:	str	w1, [x0]
    1820:	ldr	x0, [sp, #88]
    1824:	mov	w1, #0x1                   	// #1
    1828:	str	w1, [x0, #4]
    182c:	ldr	x0, [sp, #88]
    1830:	mov	w1, #0x1                   	// #1
    1834:	str	w1, [x0, #8]
    1838:	ldr	x0, [sp, #40]
    183c:	ldr	w0, [x0, #36]
    1840:	ldr	x1, [sp, #72]
    1844:	mov	x2, x1
    1848:	mov	w1, w0
    184c:	ldr	x0, [sp, #128]
    1850:	bl	c40 <prep_ea_block_for_write>
    1854:	str	x0, [sp, #144]
    1858:	ldr	x0, [sp, #144]
    185c:	cmp	x0, #0x0
    1860:	b.ne	1950 <ext2fs_xattrs_write+0x480>  // b.any
    1864:	ldr	x0, [sp, #72]
    1868:	bl	0 <EXT2_INODE>
    186c:	mov	x1, x0
    1870:	ldr	x0, [sp, #128]
    1874:	bl	0 <ext2fs_file_acl_block>
    1878:	str	x0, [sp, #80]
    187c:	ldr	x1, [sp, #64]
    1880:	ldr	x0, [sp, #40]
    1884:	ldr	w0, [x0, #36]
    1888:	mov	w3, w0
    188c:	mov	x2, x1
    1890:	ldr	x1, [sp, #80]
    1894:	ldr	x0, [sp, #128]
    1898:	bl	568 <ext2fs_write_ext_attr3>
    189c:	str	x0, [sp, #144]
    18a0:	ldr	x0, [sp, #144]
    18a4:	cmp	x0, #0x0
    18a8:	b.ne	1958 <ext2fs_xattrs_write+0x488>  // b.any
    18ac:	b	18b4 <ext2fs_xattrs_write+0x3e4>
    18b0:	nop
    18b4:	ldr	x0, [sp, #72]
    18b8:	mov	x1, x0
    18bc:	ldr	x0, [sp, #128]
    18c0:	bl	0 <ext2fs_file_acl_block>
    18c4:	str	x0, [sp, #80]
    18c8:	ldr	x0, [sp, #64]
    18cc:	cmp	x0, #0x0
    18d0:	b.ne	190c <ext2fs_xattrs_write+0x43c>  // b.any
    18d4:	ldr	x0, [sp, #80]
    18d8:	cmp	x0, #0x0
    18dc:	b.eq	190c <ext2fs_xattrs_write+0x43c>  // b.none
    18e0:	ldr	x0, [sp, #40]
    18e4:	ldr	w0, [x0, #36]
    18e8:	ldr	x1, [sp, #72]
    18ec:	mov	x2, x1
    18f0:	mov	w1, w0
    18f4:	ldr	x0, [sp, #128]
    18f8:	bl	a04 <ext2fs_free_ext_attr>
    18fc:	str	x0, [sp, #144]
    1900:	ldr	x0, [sp, #144]
    1904:	cmp	x0, #0x0
    1908:	b.ne	1980 <ext2fs_xattrs_write+0x4b0>  // b.any
    190c:	ldr	x0, [sp, #40]
    1910:	ldr	w19, [x0, #36]
    1914:	ldr	x0, [sp, #72]
    1918:	bl	0 <EXT2_INODE>
    191c:	mov	x1, x0
    1920:	ldr	w0, [sp, #124]
    1924:	mov	w3, w0
    1928:	mov	x2, x1
    192c:	mov	w1, w19
    1930:	ldr	x0, [sp, #128]
    1934:	bl	0 <ext2fs_write_inode_full>
    1938:	str	x0, [sp, #144]
    193c:	ldr	x0, [sp, #144]
    1940:	cmp	x0, #0x0
    1944:	b	195c <ext2fs_xattrs_write+0x48c>
    1948:	nop
    194c:	b	195c <ext2fs_xattrs_write+0x48c>
    1950:	nop
    1954:	b	195c <ext2fs_xattrs_write+0x48c>
    1958:	nop
    195c:	add	x0, sp, #0x40
    1960:	bl	0 <ext2fs_free_mem>
    1964:	b	1984 <ext2fs_xattrs_write+0x4b4>
    1968:	nop
    196c:	b	1984 <ext2fs_xattrs_write+0x4b4>
    1970:	nop
    1974:	b	1984 <ext2fs_xattrs_write+0x4b4>
    1978:	nop
    197c:	b	1984 <ext2fs_xattrs_write+0x4b4>
    1980:	nop
    1984:	add	x0, sp, #0x48
    1988:	bl	0 <ext2fs_free_mem>
    198c:	ldr	x0, [sp, #144]
    1990:	ldr	x19, [sp, #16]
    1994:	ldp	x29, x30, [sp], #160
    1998:	ret

000000000000199c <read_xattrs_from_buffer>:
    199c:	stp	x29, x30, [sp, #-288]!
    19a0:	mov	x29, sp
    19a4:	str	x0, [sp, #56]
    19a8:	str	x1, [sp, #48]
    19ac:	str	x2, [sp, #40]
    19b0:	str	w3, [sp, #36]
    19b4:	str	x4, [sp, #24]
    19b8:	ldr	x1, [sp, #40]
    19bc:	ldr	x0, [sp, #24]
    19c0:	sub	x0, x1, x0
    19c4:	mov	w1, w0
    19c8:	ldr	w0, [sp, #36]
    19cc:	add	w0, w0, w1
    19d0:	str	w0, [sp, #252]
    19d4:	ldr	x0, [sp, #40]
    19d8:	str	x0, [sp, #272]
    19dc:	ldr	w0, [sp, #36]
    19e0:	str	w0, [sp, #268]
    19e4:	b	1a5c <read_xattrs_from_buffer+0xc0>
    19e8:	ldr	w0, [sp, #268]
    19ec:	sub	w0, w0, #0x10
    19f0:	str	w0, [sp, #268]
    19f4:	ldr	x0, [sp, #272]
    19f8:	ldrb	w0, [x0]
    19fc:	add	w0, w0, #0x3
    1a00:	and	w0, w0, #0xfffffffc
    1a04:	ldr	w1, [sp, #268]
    1a08:	cmp	w1, w0
    1a0c:	b.cs	1a1c <read_xattrs_from_buffer+0x80>  // b.hs, b.nlast
    1a10:	mov	x0, #0xb79e                	// #47006
    1a14:	movk	x0, #0x7f2b, lsl #16
    1a18:	b	202c <read_xattrs_from_buffer+0x690>
    1a1c:	ldr	x0, [sp, #272]
    1a20:	ldrb	w0, [x0]
    1a24:	add	w0, w0, #0x3
    1a28:	and	w0, w0, #0xfffffffc
    1a2c:	ldr	w1, [sp, #268]
    1a30:	sub	w0, w1, w0
    1a34:	str	w0, [sp, #268]
    1a38:	ldr	x0, [sp, #272]
    1a3c:	ldrb	w0, [x0]
    1a40:	add	w0, w0, #0x3
    1a44:	mov	w0, w0
    1a48:	add	x0, x0, #0x10
    1a4c:	and	x0, x0, #0xfffffffc
    1a50:	ldr	x1, [sp, #272]
    1a54:	add	x0, x1, x0
    1a58:	str	x0, [sp, #272]
    1a5c:	ldr	w0, [sp, #268]
    1a60:	cmp	w0, #0xf
    1a64:	b.ls	1a78 <read_xattrs_from_buffer+0xdc>  // b.plast
    1a68:	ldr	x0, [sp, #272]
    1a6c:	ldr	w0, [x0]
    1a70:	cmp	w0, #0x0
    1a74:	b.ne	19e8 <read_xattrs_from_buffer+0x4c>  // b.any
    1a78:	ldr	x0, [sp, #40]
    1a7c:	str	x0, [sp, #280]
    1a80:	ldr	w0, [sp, #36]
    1a84:	str	w0, [sp, #268]
    1a88:	b	200c <read_xattrs_from_buffer+0x670>
    1a8c:	ldr	x0, [sp, #56]
    1a90:	ldr	w1, [x0, #28]
    1a94:	ldr	x0, [sp, #56]
    1a98:	ldr	w0, [x0, #24]
    1a9c:	cmp	w1, w0
    1aa0:	b.ne	1ac8 <read_xattrs_from_buffer+0x12c>  // b.any
    1aa4:	mov	w1, #0x4                   	// #4
    1aa8:	ldr	x0, [sp, #56]
    1aac:	bl	820 <ext2fs_xattrs_expand>
    1ab0:	str	x0, [sp, #256]
    1ab4:	ldr	x0, [sp, #256]
    1ab8:	cmp	x0, #0x0
    1abc:	b.eq	1ac8 <read_xattrs_from_buffer+0x12c>  // b.none
    1ac0:	ldr	x0, [sp, #256]
    1ac4:	b	202c <read_xattrs_from_buffer+0x690>
    1ac8:	ldr	x0, [sp, #56]
    1acc:	ldr	x2, [x0, #16]
    1ad0:	ldr	x0, [sp, #56]
    1ad4:	ldr	w0, [x0, #28]
    1ad8:	sxtw	x1, w0
    1adc:	mov	x0, x1
    1ae0:	lsl	x0, x0, #1
    1ae4:	add	x0, x0, x1
    1ae8:	lsl	x0, x0, #3
    1aec:	add	x0, x2, x0
    1af0:	str	x0, [sp, #240]
    1af4:	ldr	w0, [sp, #268]
    1af8:	sub	w0, w0, #0x10
    1afc:	str	w0, [sp, #268]
    1b00:	ldr	x0, [sp, #280]
    1b04:	ldrb	w0, [x0]
    1b08:	add	w0, w0, #0x3
    1b0c:	and	w0, w0, #0xfffffffc
    1b10:	ldr	w1, [sp, #268]
    1b14:	sub	w0, w1, w0
    1b18:	str	w0, [sp, #268]
    1b1c:	ldr	x0, [sp, #280]
    1b20:	ldrb	w0, [x0, #1]
    1b24:	bl	8ec <find_ea_prefix>
    1b28:	str	x0, [sp, #232]
    1b2c:	ldr	x0, [sp, #232]
    1b30:	cmp	x0, #0x0
    1b34:	b.eq	1b44 <read_xattrs_from_buffer+0x1a8>  // b.none
    1b38:	ldr	x0, [sp, #232]
    1b3c:	bl	0 <strlen>
    1b40:	b	1b48 <read_xattrs_from_buffer+0x1ac>
    1b44:	mov	w0, #0x0                   	// #0
    1b48:	str	w0, [sp, #228]
    1b4c:	ldr	x0, [sp, #280]
    1b50:	ldrb	w0, [x0]
    1b54:	mov	w1, w0
    1b58:	ldr	w0, [sp, #228]
    1b5c:	add	w0, w1, w0
    1b60:	add	w0, w0, #0x1
    1b64:	mov	w0, w0
    1b68:	ldr	x1, [sp, #240]
    1b6c:	bl	0 <ext2fs_get_memzero>
    1b70:	str	x0, [sp, #256]
    1b74:	ldr	x0, [sp, #256]
    1b78:	cmp	x0, #0x0
    1b7c:	b.eq	1b88 <read_xattrs_from_buffer+0x1ec>  // b.none
    1b80:	ldr	x0, [sp, #256]
    1b84:	b	202c <read_xattrs_from_buffer+0x690>
    1b88:	ldr	x0, [sp, #232]
    1b8c:	cmp	x0, #0x0
    1b90:	b.eq	1bac <read_xattrs_from_buffer+0x210>  // b.none
    1b94:	ldr	x0, [sp, #240]
    1b98:	ldr	x0, [x0]
    1b9c:	ldr	w1, [sp, #228]
    1ba0:	mov	x2, x1
    1ba4:	ldr	x1, [sp, #232]
    1ba8:	bl	0 <memcpy>
    1bac:	ldr	x0, [sp, #280]
    1bb0:	ldrb	w0, [x0]
    1bb4:	cmp	w0, #0x0
    1bb8:	b.eq	1bec <read_xattrs_from_buffer+0x250>  // b.none
    1bbc:	ldr	x0, [sp, #240]
    1bc0:	ldr	x1, [x0]
    1bc4:	ldr	w0, [sp, #228]
    1bc8:	add	x3, x1, x0
    1bcc:	ldr	x0, [sp, #280]
    1bd0:	add	x1, x0, #0x10
    1bd4:	ldr	x0, [sp, #280]
    1bd8:	ldrb	w0, [x0]
    1bdc:	and	x0, x0, #0xff
    1be0:	mov	x2, x0
    1be4:	mov	x0, x3
    1be8:	bl	0 <memcpy>
    1bec:	ldr	x0, [sp, #56]
    1bf0:	ldr	x0, [x0, #8]
    1bf4:	ldr	x0, [x0, #32]
    1bf8:	bl	64 <ext2fs_has_feature_ea_inode>
    1bfc:	cmp	w0, #0x0
    1c00:	b.ne	1c20 <read_xattrs_from_buffer+0x284>  // b.any
    1c04:	ldr	x0, [sp, #280]
    1c08:	ldr	w0, [x0, #4]
    1c0c:	cmp	w0, #0x0
    1c10:	b.eq	1c20 <read_xattrs_from_buffer+0x284>  // b.none
    1c14:	mov	x0, #0xb75a                	// #46938
    1c18:	movk	x0, #0x7f2b, lsl #16
    1c1c:	b	202c <read_xattrs_from_buffer+0x690>
    1c20:	ldr	x0, [sp, #280]
    1c24:	ldr	w0, [x0, #4]
    1c28:	cmp	w0, #0x0
    1c2c:	b.ne	1d44 <read_xattrs_from_buffer+0x3a8>  // b.any
    1c30:	ldr	x0, [sp, #280]
    1c34:	ldr	w0, [x0, #8]
    1c38:	ldr	w1, [sp, #268]
    1c3c:	cmp	w1, w0
    1c40:	b.cs	1c50 <read_xattrs_from_buffer+0x2b4>  // b.hs, b.nlast
    1c44:	mov	x0, #0xb79f                	// #47007
    1c48:	movk	x0, #0x7f2b, lsl #16
    1c4c:	b	202c <read_xattrs_from_buffer+0x690>
    1c50:	ldr	x0, [sp, #280]
    1c54:	ldrh	w0, [x0, #2]
    1c58:	mov	w1, w0
    1c5c:	ldr	x0, [sp, #280]
    1c60:	ldr	w0, [x0, #8]
    1c64:	add	w0, w1, w0
    1c68:	ldr	w1, [sp, #252]
    1c6c:	cmp	w1, w0
    1c70:	b.cs	1c80 <read_xattrs_from_buffer+0x2e4>  // b.hs, b.nlast
    1c74:	mov	x0, #0xb7aa                	// #47018
    1c78:	movk	x0, #0x7f2b, lsl #16
    1c7c:	b	202c <read_xattrs_from_buffer+0x690>
    1c80:	ldr	x0, [sp, #280]
    1c84:	ldr	w0, [x0, #8]
    1c88:	cmp	w0, #0x0
    1c8c:	b.eq	1cc0 <read_xattrs_from_buffer+0x324>  // b.none
    1c90:	ldr	x0, [sp, #280]
    1c94:	ldrh	w0, [x0, #2]
    1c98:	and	x0, x0, #0xffff
    1c9c:	ldr	x1, [sp, #24]
    1ca0:	add	x1, x1, x0
    1ca4:	ldr	x0, [sp, #272]
    1ca8:	add	x0, x0, #0x4
    1cac:	cmp	x1, x0
    1cb0:	b.cs	1cc0 <read_xattrs_from_buffer+0x324>  // b.hs, b.nlast
    1cb4:	mov	x0, #0xb7aa                	// #47018
    1cb8:	movk	x0, #0x7f2b, lsl #16
    1cbc:	b	202c <read_xattrs_from_buffer+0x690>
    1cc0:	ldr	x0, [sp, #280]
    1cc4:	ldr	w0, [x0, #8]
    1cc8:	ldr	w1, [sp, #268]
    1ccc:	sub	w0, w1, w0
    1cd0:	str	w0, [sp, #268]
    1cd4:	ldr	x0, [sp, #280]
    1cd8:	ldr	w0, [x0, #8]
    1cdc:	mov	w2, w0
    1ce0:	ldr	x0, [sp, #240]
    1ce4:	add	x0, x0, #0x8
    1ce8:	mov	x1, x0
    1cec:	mov	x0, x2
    1cf0:	bl	0 <ext2fs_get_mem>
    1cf4:	str	x0, [sp, #256]
    1cf8:	ldr	x0, [sp, #256]
    1cfc:	cmp	x0, #0x0
    1d00:	b.eq	1d0c <read_xattrs_from_buffer+0x370>  // b.none
    1d04:	ldr	x0, [sp, #256]
    1d08:	b	202c <read_xattrs_from_buffer+0x690>
    1d0c:	ldr	x0, [sp, #240]
    1d10:	ldr	x3, [x0, #8]
    1d14:	ldr	x0, [sp, #280]
    1d18:	ldrh	w0, [x0, #2]
    1d1c:	and	x0, x0, #0xffff
    1d20:	ldr	x1, [sp, #24]
    1d24:	add	x1, x1, x0
    1d28:	ldr	x0, [sp, #280]
    1d2c:	ldr	w0, [x0, #8]
    1d30:	mov	w0, w0
    1d34:	mov	x2, x0
    1d38:	mov	x0, x3
    1d3c:	bl	0 <memcpy>
    1d40:	b	1ebc <read_xattrs_from_buffer+0x520>
    1d44:	ldr	x0, [sp, #280]
    1d48:	ldrh	w0, [x0, #2]
    1d4c:	cmp	w0, #0x0
    1d50:	b.eq	1d60 <read_xattrs_from_buffer+0x3c4>  // b.none
    1d54:	mov	x0, #0xb7aa                	// #47018
    1d58:	movk	x0, #0x7f2b, lsl #16
    1d5c:	b	202c <read_xattrs_from_buffer+0x690>
    1d60:	ldr	x0, [sp, #280]
    1d64:	ldr	w0, [x0, #8]
    1d68:	cmp	w0, #0x10, lsl #12
    1d6c:	b.ls	1d7c <read_xattrs_from_buffer+0x3e0>  // b.plast
    1d70:	mov	x0, #0xb79f                	// #47007
    1d74:	movk	x0, #0x7f2b, lsl #16
    1d78:	b	202c <read_xattrs_from_buffer+0x690>
    1d7c:	ldr	x0, [sp, #280]
    1d80:	ldr	w0, [x0, #8]
    1d84:	mov	w2, w0
    1d88:	ldr	x0, [sp, #240]
    1d8c:	add	x0, x0, #0x8
    1d90:	mov	x1, x0
    1d94:	mov	x0, x2
    1d98:	bl	0 <ext2fs_get_mem>
    1d9c:	str	x0, [sp, #256]
    1da0:	ldr	x0, [sp, #256]
    1da4:	cmp	x0, #0x0
    1da8:	b.eq	1db4 <read_xattrs_from_buffer+0x418>  // b.none
    1dac:	ldr	x0, [sp, #256]
    1db0:	b	202c <read_xattrs_from_buffer+0x690>
    1db4:	ldr	x0, [sp, #56]
    1db8:	ldr	x4, [x0, #8]
    1dbc:	ldr	x0, [sp, #280]
    1dc0:	ldr	w0, [x0, #4]
    1dc4:	add	x1, sp, #0xc8
    1dc8:	mov	x3, x1
    1dcc:	mov	w2, #0x0                   	// #0
    1dd0:	mov	w1, w0
    1dd4:	mov	x0, x4
    1dd8:	bl	0 <ext2fs_file_open>
    1ddc:	str	x0, [sp, #256]
    1de0:	ldr	x0, [sp, #256]
    1de4:	cmp	x0, #0x0
    1de8:	b.eq	1df4 <read_xattrs_from_buffer+0x458>  // b.none
    1dec:	ldr	x0, [sp, #256]
    1df0:	b	202c <read_xattrs_from_buffer+0x690>
    1df4:	ldr	x0, [sp, #200]
    1df8:	bl	0 <ext2fs_file_get_inode>
    1dfc:	str	x0, [sp, #216]
    1e00:	ldr	x0, [sp, #216]
    1e04:	ldr	w0, [x0, #32]
    1e08:	and	w0, w0, #0x10000000
    1e0c:	cmp	w0, #0x0
    1e10:	b.ne	1e38 <read_xattrs_from_buffer+0x49c>  // b.any
    1e14:	ldr	x0, [sp, #216]
    1e18:	ldr	w0, [x0, #32]
    1e1c:	and	w0, w0, #0x200000
    1e20:	cmp	w0, #0x0
    1e24:	b.eq	1e38 <read_xattrs_from_buffer+0x49c>  // b.none
    1e28:	ldr	x0, [sp, #216]
    1e2c:	ldrh	w0, [x0, #26]
    1e30:	cmp	w0, #0x0
    1e34:	b.ne	1e48 <read_xattrs_from_buffer+0x4ac>  // b.any
    1e38:	mov	x0, #0xb7b2                	// #47026
    1e3c:	movk	x0, #0x7f2b, lsl #16
    1e40:	str	x0, [sp, #256]
    1e44:	b	1ea0 <read_xattrs_from_buffer+0x504>
    1e48:	ldr	x0, [sp, #200]
    1e4c:	bl	0 <ext2fs_file_get_size>
    1e50:	sxtw	x1, w0
    1e54:	ldr	x0, [sp, #280]
    1e58:	ldr	w0, [x0, #8]
    1e5c:	mov	w0, w0
    1e60:	cmp	x1, x0
    1e64:	b.eq	1e78 <read_xattrs_from_buffer+0x4dc>  // b.none
    1e68:	mov	x0, #0xb79f                	// #47007
    1e6c:	movk	x0, #0x7f2b, lsl #16
    1e70:	str	x0, [sp, #256]
    1e74:	b	1ea0 <read_xattrs_from_buffer+0x504>
    1e78:	ldr	x4, [sp, #200]
    1e7c:	ldr	x0, [sp, #240]
    1e80:	ldr	x1, [x0, #8]
    1e84:	ldr	x0, [sp, #280]
    1e88:	ldr	w0, [x0, #8]
    1e8c:	mov	x3, #0x0                   	// #0
    1e90:	mov	w2, w0
    1e94:	mov	x0, x4
    1e98:	bl	0 <ext2fs_file_read>
    1e9c:	str	x0, [sp, #256]
    1ea0:	ldr	x0, [sp, #200]
    1ea4:	bl	0 <ext2fs_file_close>
    1ea8:	ldr	x0, [sp, #256]
    1eac:	cmp	x0, #0x0
    1eb0:	b.eq	1ebc <read_xattrs_from_buffer+0x520>  // b.none
    1eb4:	ldr	x0, [sp, #256]
    1eb8:	b	202c <read_xattrs_from_buffer+0x690>
    1ebc:	ldr	x0, [sp, #280]
    1ec0:	ldr	w1, [x0, #4]
    1ec4:	ldr	x0, [sp, #240]
    1ec8:	str	w1, [x0, #20]
    1ecc:	ldr	x0, [sp, #280]
    1ed0:	ldr	w1, [x0, #8]
    1ed4:	ldr	x0, [sp, #240]
    1ed8:	str	w1, [x0, #16]
    1edc:	ldr	x0, [sp, #280]
    1ee0:	ldr	w0, [x0, #12]
    1ee4:	cmp	w0, #0x0
    1ee8:	b.eq	1fd4 <read_xattrs_from_buffer+0x638>  // b.none
    1eec:	ldr	x0, [sp, #280]
    1ef0:	ldr	w0, [x0, #4]
    1ef4:	cmp	w0, #0x0
    1ef8:	b.ne	1f14 <read_xattrs_from_buffer+0x578>  // b.any
    1efc:	ldr	x0, [sp, #280]
    1f00:	ldrh	w0, [x0, #2]
    1f04:	and	x0, x0, #0xffff
    1f08:	ldr	x1, [sp, #24]
    1f0c:	add	x0, x1, x0
    1f10:	b	1f18 <read_xattrs_from_buffer+0x57c>
    1f14:	mov	x0, #0x0                   	// #0
    1f18:	str	x0, [sp, #208]
    1f1c:	ldr	x0, [sp, #56]
    1f20:	ldr	x0, [x0, #8]
    1f24:	add	x1, sp, #0xc4
    1f28:	mov	x3, x1
    1f2c:	ldr	x2, [sp, #208]
    1f30:	ldr	x1, [sp, #280]
    1f34:	bl	200 <ext2fs_ext_attr_hash_entry2>
    1f38:	str	x0, [sp, #256]
    1f3c:	ldr	x0, [sp, #256]
    1f40:	cmp	x0, #0x0
    1f44:	b.eq	1f50 <read_xattrs_from_buffer+0x5b4>  // b.none
    1f48:	ldr	x0, [sp, #256]
    1f4c:	b	202c <read_xattrs_from_buffer+0x690>
    1f50:	ldr	x0, [sp, #280]
    1f54:	ldr	w1, [x0, #12]
    1f58:	ldr	w0, [sp, #196]
    1f5c:	cmp	w1, w0
    1f60:	b.eq	1fd4 <read_xattrs_from_buffer+0x638>  // b.none
    1f64:	ldr	x0, [sp, #56]
    1f68:	ldr	x3, [x0, #8]
    1f6c:	ldr	x0, [sp, #280]
    1f70:	ldr	w0, [x0, #4]
    1f74:	add	x1, sp, #0x40
    1f78:	mov	x2, x1
    1f7c:	mov	w1, w0
    1f80:	mov	x0, x3
    1f84:	bl	0 <ext2fs_read_inode>
    1f88:	str	x0, [sp, #256]
    1f8c:	ldr	x0, [sp, #256]
    1f90:	cmp	x0, #0x0
    1f94:	b.eq	1fa0 <read_xattrs_from_buffer+0x604>  // b.none
    1f98:	ldr	x0, [sp, #256]
    1f9c:	b	202c <read_xattrs_from_buffer+0x690>
    1fa0:	ldr	w1, [sp, #80]
    1fa4:	ldr	x0, [sp, #56]
    1fa8:	ldr	w0, [x0, #36]
    1fac:	cmp	w1, w0
    1fb0:	b.ne	1fc8 <read_xattrs_from_buffer+0x62c>  // b.any
    1fb4:	ldr	w1, [sp, #164]
    1fb8:	ldr	x0, [sp, #48]
    1fbc:	ldr	w0, [x0, #100]
    1fc0:	cmp	w1, w0
    1fc4:	b.eq	1fd4 <read_xattrs_from_buffer+0x638>  // b.none
    1fc8:	mov	x0, #0xb7a0                	// #47008
    1fcc:	movk	x0, #0x7f2b, lsl #16
    1fd0:	b	202c <read_xattrs_from_buffer+0x690>
    1fd4:	ldr	x0, [sp, #56]
    1fd8:	ldr	w0, [x0, #28]
    1fdc:	add	w1, w0, #0x1
    1fe0:	ldr	x0, [sp, #56]
    1fe4:	str	w1, [x0, #28]
    1fe8:	ldr	x0, [sp, #280]
    1fec:	ldrb	w0, [x0]
    1ff0:	add	w0, w0, #0x3
    1ff4:	mov	w0, w0
    1ff8:	add	x0, x0, #0x10
    1ffc:	and	x0, x0, #0xfffffffc
    2000:	ldr	x1, [sp, #280]
    2004:	add	x0, x1, x0
    2008:	str	x0, [sp, #280]
    200c:	ldr	w0, [sp, #268]
    2010:	cmp	w0, #0xf
    2014:	b.ls	2028 <read_xattrs_from_buffer+0x68c>  // b.plast
    2018:	ldr	x0, [sp, #280]
    201c:	ldr	w0, [x0]
    2020:	cmp	w0, #0x0
    2024:	b.ne	1a8c <read_xattrs_from_buffer+0xf0>  // b.any
    2028:	mov	x0, #0x0                   	// #0
    202c:	ldp	x29, x30, [sp], #288
    2030:	ret

0000000000002034 <xattrs_free_keys>:
    2034:	stp	x29, x30, [sp, #-48]!
    2038:	mov	x29, sp
    203c:	str	x0, [sp, #24]
    2040:	ldr	x0, [sp, #24]
    2044:	ldr	x0, [x0, #16]
    2048:	str	x0, [sp, #32]
    204c:	str	wzr, [sp, #44]
    2050:	b	2104 <xattrs_free_keys+0xd0>
    2054:	ldrsw	x1, [sp, #44]
    2058:	mov	x0, x1
    205c:	lsl	x0, x0, #1
    2060:	add	x0, x0, x1
    2064:	lsl	x0, x0, #3
    2068:	mov	x1, x0
    206c:	ldr	x0, [sp, #32]
    2070:	add	x0, x0, x1
    2074:	ldr	x0, [x0]
    2078:	cmp	x0, #0x0
    207c:	b.eq	20a4 <xattrs_free_keys+0x70>  // b.none
    2080:	ldrsw	x1, [sp, #44]
    2084:	mov	x0, x1
    2088:	lsl	x0, x0, #1
    208c:	add	x0, x0, x1
    2090:	lsl	x0, x0, #3
    2094:	mov	x1, x0
    2098:	ldr	x0, [sp, #32]
    209c:	add	x0, x0, x1
    20a0:	bl	0 <ext2fs_free_mem>
    20a4:	ldrsw	x1, [sp, #44]
    20a8:	mov	x0, x1
    20ac:	lsl	x0, x0, #1
    20b0:	add	x0, x0, x1
    20b4:	lsl	x0, x0, #3
    20b8:	mov	x1, x0
    20bc:	ldr	x0, [sp, #32]
    20c0:	add	x0, x0, x1
    20c4:	ldr	x0, [x0, #8]
    20c8:	cmp	x0, #0x0
    20cc:	b.eq	20f8 <xattrs_free_keys+0xc4>  // b.none
    20d0:	ldrsw	x1, [sp, #44]
    20d4:	mov	x0, x1
    20d8:	lsl	x0, x0, #1
    20dc:	add	x0, x0, x1
    20e0:	lsl	x0, x0, #3
    20e4:	mov	x1, x0
    20e8:	ldr	x0, [sp, #32]
    20ec:	add	x0, x0, x1
    20f0:	add	x0, x0, #0x8
    20f4:	bl	0 <ext2fs_free_mem>
    20f8:	ldr	w0, [sp, #44]
    20fc:	add	w0, w0, #0x1
    2100:	str	w0, [sp, #44]
    2104:	ldr	x0, [sp, #24]
    2108:	ldr	w0, [x0, #24]
    210c:	ldr	w1, [sp, #44]
    2110:	cmp	w1, w0
    2114:	b.lt	2054 <xattrs_free_keys+0x20>  // b.tstop
    2118:	ldr	x0, [sp, #24]
    211c:	str	wzr, [x0, #28]
    2120:	ldr	x0, [sp, #24]
    2124:	str	wzr, [x0, #32]
    2128:	nop
    212c:	ldp	x29, x30, [sp], #48
    2130:	ret

0000000000002134 <ext2fs_xattrs_read>:
    2134:	stp	x29, x30, [sp, #-112]!
    2138:	mov	x29, sp
    213c:	str	x0, [sp, #24]
    2140:	str	xzr, [sp, #40]
    2144:	ldr	x0, [sp, #24]
    2148:	ldr	x1, [x0]
    214c:	mov	x0, #0xb7a8                	// #47016
    2150:	movk	x0, #0x7f2b, lsl #16
    2154:	cmp	x1, x0
    2158:	b.eq	2168 <ext2fs_xattrs_read+0x34>  // b.none
    215c:	mov	x0, #0xb7a8                	// #47016
    2160:	movk	x0, #0x7f2b, lsl #16
    2164:	b	254c <ext2fs_xattrs_read+0x418>
    2168:	ldr	x0, [sp, #24]
    216c:	ldr	x0, [x0, #8]
    2170:	ldr	x0, [x0, #32]
    2174:	ldr	w0, [x0, #76]
    2178:	cmp	w0, #0x0
    217c:	b.eq	2198 <ext2fs_xattrs_read+0x64>  // b.none
    2180:	ldr	x0, [sp, #24]
    2184:	ldr	x0, [x0, #8]
    2188:	ldr	x0, [x0, #32]
    218c:	ldrh	w0, [x0, #88]
    2190:	and	x0, x0, #0xffff
    2194:	b	219c <ext2fs_xattrs_read+0x68>
    2198:	mov	x0, #0x80                  	// #128
    219c:	str	x0, [sp, #104]
    21a0:	ldr	x0, [sp, #104]
    21a4:	cmp	x0, #0x9f
    21a8:	b.hi	21b4 <ext2fs_xattrs_read+0x80>  // b.pmore
    21ac:	mov	x0, #0xa0                  	// #160
    21b0:	str	x0, [sp, #104]
    21b4:	add	x0, sp, #0x38
    21b8:	mov	x1, x0
    21bc:	ldr	x0, [sp, #104]
    21c0:	bl	0 <ext2fs_get_memzero>
    21c4:	str	x0, [sp, #96]
    21c8:	ldr	x0, [sp, #96]
    21cc:	cmp	x0, #0x0
    21d0:	b.eq	21dc <ext2fs_xattrs_read+0xa8>  // b.none
    21d4:	ldr	x0, [sp, #96]
    21d8:	b	254c <ext2fs_xattrs_read+0x418>
    21dc:	ldr	x0, [sp, #24]
    21e0:	ldr	x4, [x0, #8]
    21e4:	ldr	x0, [sp, #24]
    21e8:	ldr	w1, [x0, #36]
    21ec:	ldr	x2, [sp, #56]
    21f0:	ldr	x0, [sp, #24]
    21f4:	ldr	x0, [x0, #8]
    21f8:	ldr	x0, [x0, #32]
    21fc:	ldr	w0, [x0, #76]
    2200:	cmp	w0, #0x0
    2204:	b.eq	221c <ext2fs_xattrs_read+0xe8>  // b.none
    2208:	ldr	x0, [sp, #24]
    220c:	ldr	x0, [x0, #8]
    2210:	ldr	x0, [x0, #32]
    2214:	ldrh	w0, [x0, #88]
    2218:	b	2220 <ext2fs_xattrs_read+0xec>
    221c:	mov	w0, #0x80                  	// #128
    2220:	mov	w3, w0
    2224:	mov	x0, x4
    2228:	bl	0 <ext2fs_read_inode_full>
    222c:	str	x0, [sp, #96]
    2230:	ldr	x0, [sp, #96]
    2234:	cmp	x0, #0x0
    2238:	b.ne	252c <ext2fs_xattrs_read+0x3f8>  // b.any
    223c:	ldr	x0, [sp, #24]
    2240:	bl	2034 <xattrs_free_keys>
    2244:	ldr	x0, [sp, #56]
    2248:	ldrh	w0, [x0, #128]
    224c:	cmp	w0, #0x1
    2250:	b.ls	239c <ext2fs_xattrs_read+0x268>  // b.plast
    2254:	ldr	x0, [sp, #24]
    2258:	ldr	x0, [x0, #8]
    225c:	ldr	x0, [x0, #32]
    2260:	ldr	w0, [x0, #76]
    2264:	cmp	w0, #0x0
    2268:	b.eq	2284 <ext2fs_xattrs_read+0x150>  // b.none
    226c:	ldr	x0, [sp, #24]
    2270:	ldr	x0, [x0, #8]
    2274:	ldr	x0, [x0, #32]
    2278:	ldrh	w0, [x0, #88]
    227c:	and	x0, x0, #0xffff
    2280:	b	2288 <ext2fs_xattrs_read+0x154>
    2284:	mov	x0, #0x80                  	// #128
    2288:	ldr	x1, [sp, #56]
    228c:	ldrh	w1, [x1, #128]
    2290:	add	w1, w1, #0x80
    2294:	sxtw	x1, w1
    2298:	add	x1, x1, #0x4
    229c:	cmp	x0, x1
    22a0:	b.ls	239c <ext2fs_xattrs_read+0x268>  // b.plast
    22a4:	ldr	x0, [sp, #56]
    22a8:	ldrh	w0, [x0, #128]
    22ac:	and	w0, w0, #0x3
    22b0:	cmp	w0, #0x0
    22b4:	b.eq	22c8 <ext2fs_xattrs_read+0x194>  // b.none
    22b8:	mov	x0, #0xb7b1                	// #47025
    22bc:	movk	x0, #0x7f2b, lsl #16
    22c0:	str	x0, [sp, #96]
    22c4:	b	2540 <ext2fs_xattrs_read+0x40c>
    22c8:	ldr	x1, [sp, #56]
    22cc:	ldr	x0, [sp, #56]
    22d0:	ldrh	w0, [x0, #128]
    22d4:	and	x0, x0, #0xffff
    22d8:	add	x0, x0, #0x80
    22dc:	add	x0, x1, x0
    22e0:	ldr	w0, [x0]
    22e4:	str	w0, [sp, #52]
    22e8:	ldr	w1, [sp, #52]
    22ec:	mov	w0, #0xea020000            	// #-368967680
    22f0:	cmp	w1, w0
    22f4:	b.ne	23a4 <ext2fs_xattrs_read+0x270>  // b.any
    22f8:	ldr	x0, [sp, #24]
    22fc:	ldr	x0, [x0, #8]
    2300:	ldr	x0, [x0, #32]
    2304:	ldr	w0, [x0, #76]
    2308:	cmp	w0, #0x0
    230c:	b.eq	2328 <ext2fs_xattrs_read+0x1f4>  // b.none
    2310:	ldr	x0, [sp, #24]
    2314:	ldr	x0, [x0, #8]
    2318:	ldr	x0, [x0, #32]
    231c:	ldrh	w0, [x0, #88]
    2320:	sub	w0, w0, #0x80
    2324:	b	232c <ext2fs_xattrs_read+0x1f8>
    2328:	mov	w0, #0x0                   	// #0
    232c:	ldr	x1, [sp, #56]
    2330:	ldrh	w1, [x1, #128]
    2334:	sub	w0, w0, w1
    2338:	sub	w0, w0, #0x4
    233c:	str	w0, [sp, #92]
    2340:	ldr	x1, [sp, #56]
    2344:	ldr	x0, [sp, #56]
    2348:	ldrh	w0, [x0, #128]
    234c:	and	x0, x0, #0xffff
    2350:	add	x0, x0, #0x84
    2354:	add	x0, x1, x0
    2358:	str	x0, [sp, #80]
    235c:	ldr	x0, [sp, #56]
    2360:	ldr	x4, [sp, #80]
    2364:	ldr	w3, [sp, #92]
    2368:	ldr	x2, [sp, #80]
    236c:	mov	x1, x0
    2370:	ldr	x0, [sp, #24]
    2374:	bl	199c <read_xattrs_from_buffer>
    2378:	str	x0, [sp, #96]
    237c:	ldr	x0, [sp, #96]
    2380:	cmp	x0, #0x0
    2384:	b.ne	2534 <ext2fs_xattrs_read+0x400>  // b.any
    2388:	ldr	x0, [sp, #24]
    238c:	ldr	w1, [x0, #28]
    2390:	ldr	x0, [sp, #24]
    2394:	str	w1, [x0, #32]
    2398:	b	23a8 <ext2fs_xattrs_read+0x274>
    239c:	nop
    23a0:	b	23a8 <ext2fs_xattrs_read+0x274>
    23a4:	nop
    23a8:	ldr	x0, [sp, #24]
    23ac:	ldr	x0, [x0, #8]
    23b0:	ldr	x1, [sp, #56]
    23b4:	bl	0 <ext2fs_file_acl_block>
    23b8:	str	x0, [sp, #72]
    23bc:	ldr	x0, [sp, #72]
    23c0:	cmp	x0, #0x0
    23c4:	b.eq	24fc <ext2fs_xattrs_read+0x3c8>  // b.none
    23c8:	ldr	x0, [sp, #24]
    23cc:	ldr	x0, [x0, #8]
    23d0:	ldr	x0, [x0, #32]
    23d4:	ldr	w0, [x0, #20]
    23d8:	mov	w0, w0
    23dc:	ldr	x1, [sp, #72]
    23e0:	cmp	x1, x0
    23e4:	b.cc	2408 <ext2fs_xattrs_read+0x2d4>  // b.lo, b.ul, b.last
    23e8:	ldr	x0, [sp, #24]
    23ec:	ldr	x0, [x0, #8]
    23f0:	ldr	x0, [x0, #32]
    23f4:	bl	0 <ext2fs_blocks_count>
    23f8:	mov	x1, x0
    23fc:	ldr	x0, [sp, #72]
    2400:	cmp	x0, x1
    2404:	b.cc	2418 <ext2fs_xattrs_read+0x2e4>  // b.lo, b.ul, b.last
    2408:	mov	x0, #0xb75a                	// #46938
    240c:	movk	x0, #0x7f2b, lsl #16
    2410:	str	x0, [sp, #96]
    2414:	b	2540 <ext2fs_xattrs_read+0x40c>
    2418:	ldr	x0, [sp, #24]
    241c:	ldr	x0, [x0, #8]
    2420:	ldr	w0, [x0, #40]
    2424:	mov	w0, w0
    2428:	add	x1, sp, #0x28
    242c:	bl	0 <ext2fs_get_mem>
    2430:	str	x0, [sp, #96]
    2434:	ldr	x0, [sp, #96]
    2438:	cmp	x0, #0x0
    243c:	b.ne	253c <ext2fs_xattrs_read+0x408>  // b.any
    2440:	ldr	x0, [sp, #24]
    2444:	ldr	x4, [x0, #8]
    2448:	ldr	x1, [sp, #40]
    244c:	ldr	x0, [sp, #24]
    2450:	ldr	w0, [x0, #36]
    2454:	mov	w3, w0
    2458:	mov	x2, x1
    245c:	ldr	x1, [sp, #72]
    2460:	mov	x0, x4
    2464:	bl	448 <ext2fs_read_ext_attr3>
    2468:	str	x0, [sp, #96]
    246c:	ldr	x0, [sp, #96]
    2470:	cmp	x0, #0x0
    2474:	b.ne	2514 <ext2fs_xattrs_read+0x3e0>  // b.any
    2478:	ldr	x0, [sp, #40]
    247c:	str	x0, [sp, #64]
    2480:	ldr	x0, [sp, #64]
    2484:	ldr	w1, [x0]
    2488:	mov	w0, #0xea020000            	// #-368967680
    248c:	cmp	w1, w0
    2490:	b.eq	24a4 <ext2fs_xattrs_read+0x370>  // b.none
    2494:	mov	x0, #0xb7a1                	// #47009
    2498:	movk	x0, #0x7f2b, lsl #16
    249c:	str	x0, [sp, #96]
    24a0:	b	2520 <ext2fs_xattrs_read+0x3ec>
    24a4:	ldr	x0, [sp, #24]
    24a8:	ldr	x0, [x0, #8]
    24ac:	ldr	w0, [x0, #40]
    24b0:	sub	w0, w0, #0x20
    24b4:	str	w0, [sp, #92]
    24b8:	ldr	x0, [sp, #40]
    24bc:	add	x0, x0, #0x20
    24c0:	str	x0, [sp, #80]
    24c4:	ldr	x0, [sp, #56]
    24c8:	ldr	x1, [sp, #40]
    24cc:	mov	x4, x1
    24d0:	ldr	w3, [sp, #92]
    24d4:	ldr	x2, [sp, #80]
    24d8:	mov	x1, x0
    24dc:	ldr	x0, [sp, #24]
    24e0:	bl	199c <read_xattrs_from_buffer>
    24e4:	str	x0, [sp, #96]
    24e8:	ldr	x0, [sp, #96]
    24ec:	cmp	x0, #0x0
    24f0:	b.ne	251c <ext2fs_xattrs_read+0x3e8>  // b.any
    24f4:	add	x0, sp, #0x28
    24f8:	bl	0 <ext2fs_free_mem>
    24fc:	add	x0, sp, #0x28
    2500:	bl	0 <ext2fs_free_mem>
    2504:	add	x0, sp, #0x38
    2508:	bl	0 <ext2fs_free_mem>
    250c:	mov	x0, #0x0                   	// #0
    2510:	b	254c <ext2fs_xattrs_read+0x418>
    2514:	nop
    2518:	b	2520 <ext2fs_xattrs_read+0x3ec>
    251c:	nop
    2520:	add	x0, sp, #0x28
    2524:	bl	0 <ext2fs_free_mem>
    2528:	b	2540 <ext2fs_xattrs_read+0x40c>
    252c:	nop
    2530:	b	2540 <ext2fs_xattrs_read+0x40c>
    2534:	nop
    2538:	b	2540 <ext2fs_xattrs_read+0x40c>
    253c:	nop
    2540:	add	x0, sp, #0x38
    2544:	bl	0 <ext2fs_free_mem>
    2548:	ldr	x0, [sp, #96]
    254c:	ldp	x29, x30, [sp], #112
    2550:	ret

0000000000002554 <ext2fs_xattrs_iterate>:
    2554:	stp	x29, x30, [sp, #-64]!
    2558:	mov	x29, sp
    255c:	str	x0, [sp, #40]
    2560:	str	x1, [sp, #32]
    2564:	str	x2, [sp, #24]
    2568:	str	wzr, [sp, #52]
    256c:	ldr	x0, [sp, #40]
    2570:	ldr	x1, [x0]
    2574:	mov	x0, #0xb7a8                	// #47016
    2578:	movk	x0, #0x7f2b, lsl #16
    257c:	cmp	x1, x0
    2580:	b.eq	2590 <ext2fs_xattrs_iterate+0x3c>  // b.none
    2584:	mov	x0, #0xb7a8                	// #47016
    2588:	movk	x0, #0x7f2b, lsl #16
    258c:	b	2660 <ext2fs_xattrs_iterate+0x10c>
    2590:	ldr	x0, [sp, #40]
    2594:	ldr	x0, [x0, #16]
    2598:	str	x0, [sp, #56]
    259c:	b	2608 <ext2fs_xattrs_iterate+0xb4>
    25a0:	ldr	x0, [sp, #56]
    25a4:	ldr	x5, [x0]
    25a8:	ldr	x0, [sp, #56]
    25ac:	ldr	x1, [x0, #8]
    25b0:	ldr	x0, [sp, #56]
    25b4:	ldr	w0, [x0, #16]
    25b8:	mov	w0, w0
    25bc:	ldr	x4, [sp, #32]
    25c0:	ldr	x3, [sp, #24]
    25c4:	mov	x2, x0
    25c8:	mov	x0, x5
    25cc:	blr	x4
    25d0:	str	w0, [sp, #48]
    25d4:	ldr	w0, [sp, #48]
    25d8:	and	w0, w0, #0x2
    25dc:	cmp	w0, #0x0
    25e0:	b.eq	25ec <ext2fs_xattrs_iterate+0x98>  // b.none
    25e4:	mov	w0, #0x1                   	// #1
    25e8:	str	w0, [sp, #52]
    25ec:	ldr	w0, [sp, #48]
    25f0:	and	w0, w0, #0x1
    25f4:	cmp	w0, #0x0
    25f8:	b.ne	2640 <ext2fs_xattrs_iterate+0xec>  // b.any
    25fc:	ldr	x0, [sp, #56]
    2600:	add	x0, x0, #0x18
    2604:	str	x0, [sp, #56]
    2608:	ldr	x0, [sp, #40]
    260c:	ldr	x2, [x0, #16]
    2610:	ldr	x0, [sp, #40]
    2614:	ldr	w0, [x0, #28]
    2618:	sxtw	x1, w0
    261c:	mov	x0, x1
    2620:	lsl	x0, x0, #1
    2624:	add	x0, x0, x1
    2628:	lsl	x0, x0, #3
    262c:	add	x0, x2, x0
    2630:	ldr	x1, [sp, #56]
    2634:	cmp	x1, x0
    2638:	b.cc	25a0 <ext2fs_xattrs_iterate+0x4c>  // b.lo, b.ul, b.last
    263c:	b	2644 <ext2fs_xattrs_iterate+0xf0>
    2640:	nop
    2644:	ldr	w0, [sp, #52]
    2648:	cmp	w0, #0x0
    264c:	b.eq	265c <ext2fs_xattrs_iterate+0x108>  // b.none
    2650:	ldr	x0, [sp, #40]
    2654:	bl	14d0 <ext2fs_xattrs_write>
    2658:	b	2660 <ext2fs_xattrs_iterate+0x10c>
    265c:	mov	x0, #0x0                   	// #0
    2660:	ldp	x29, x30, [sp], #64
    2664:	ret

0000000000002668 <ext2fs_xattr_get>:
    2668:	stp	x29, x30, [sp, #-80]!
    266c:	mov	x29, sp
    2670:	str	x0, [sp, #40]
    2674:	str	x1, [sp, #32]
    2678:	str	x2, [sp, #24]
    267c:	str	x3, [sp, #16]
    2680:	ldr	x0, [sp, #40]
    2684:	ldr	x1, [x0]
    2688:	mov	x0, #0xb7a8                	// #47016
    268c:	movk	x0, #0x7f2b, lsl #16
    2690:	cmp	x1, x0
    2694:	b.eq	26a4 <ext2fs_xattr_get+0x3c>  // b.none
    2698:	mov	x0, #0xb7a8                	// #47016
    269c:	movk	x0, #0x7f2b, lsl #16
    26a0:	b	2808 <ext2fs_xattr_get+0x1a0>
    26a4:	ldr	x0, [sp, #40]
    26a8:	ldr	x0, [x0, #16]
    26ac:	str	x0, [sp, #72]
    26b0:	b	27cc <ext2fs_xattr_get+0x164>
    26b4:	ldr	x0, [sp, #72]
    26b8:	ldr	x0, [x0]
    26bc:	ldr	x1, [sp, #32]
    26c0:	bl	0 <strcmp>
    26c4:	cmp	w0, #0x0
    26c8:	b.eq	26dc <ext2fs_xattr_get+0x74>  // b.none
    26cc:	ldr	x0, [sp, #72]
    26d0:	add	x0, x0, #0x18
    26d4:	str	x0, [sp, #72]
    26d8:	b	27cc <ext2fs_xattr_get+0x164>
    26dc:	ldr	x0, [sp, #40]
    26e0:	ldr	w0, [x0, #40]
    26e4:	and	w0, w0, #0x1
    26e8:	cmp	w0, #0x0
    26ec:	b.ne	2754 <ext2fs_xattr_get+0xec>  // b.any
    26f0:	adrp	x0, 0 <EXT2_INODE>
    26f4:	add	x1, x0, #0x0
    26f8:	ldr	x0, [sp, #32]
    26fc:	bl	0 <strcmp>
    2700:	cmp	w0, #0x0
    2704:	b.eq	2720 <ext2fs_xattr_get+0xb8>  // b.none
    2708:	adrp	x0, 0 <EXT2_INODE>
    270c:	add	x1, x0, #0x0
    2710:	ldr	x0, [sp, #32]
    2714:	bl	0 <strcmp>
    2718:	cmp	w0, #0x0
    271c:	b.ne	2754 <ext2fs_xattr_get+0xec>  // b.any
    2720:	ldr	x0, [sp, #72]
    2724:	ldr	x4, [x0, #8]
    2728:	ldr	x0, [sp, #72]
    272c:	ldr	w0, [x0, #16]
    2730:	mov	w0, w0
    2734:	ldr	x3, [sp, #16]
    2738:	ldr	x2, [sp, #24]
    273c:	mov	x1, x0
    2740:	mov	x0, x4
    2744:	bl	1078 <convert_disk_buffer_to_posix_acl>
    2748:	str	x0, [sp, #64]
    274c:	ldr	x0, [sp, #64]
    2750:	b	2808 <ext2fs_xattr_get+0x1a0>
    2754:	ldr	x0, [sp, #72]
    2758:	ldr	w0, [x0, #16]
    275c:	mov	w0, w0
    2760:	add	x1, sp, #0x38
    2764:	bl	0 <ext2fs_get_mem>
    2768:	str	x0, [sp, #64]
    276c:	ldr	x0, [sp, #64]
    2770:	cmp	x0, #0x0
    2774:	b.eq	2780 <ext2fs_xattr_get+0x118>  // b.none
    2778:	ldr	x0, [sp, #64]
    277c:	b	2808 <ext2fs_xattr_get+0x1a0>
    2780:	ldr	x3, [sp, #56]
    2784:	ldr	x0, [sp, #72]
    2788:	ldr	x1, [x0, #8]
    278c:	ldr	x0, [sp, #72]
    2790:	ldr	w0, [x0, #16]
    2794:	mov	w0, w0
    2798:	mov	x2, x0
    279c:	mov	x0, x3
    27a0:	bl	0 <memcpy>
    27a4:	ldr	x1, [sp, #56]
    27a8:	ldr	x0, [sp, #24]
    27ac:	str	x1, [x0]
    27b0:	ldr	x0, [sp, #72]
    27b4:	ldr	w0, [x0, #16]
    27b8:	mov	w1, w0
    27bc:	ldr	x0, [sp, #16]
    27c0:	str	x1, [x0]
    27c4:	mov	x0, #0x0                   	// #0
    27c8:	b	2808 <ext2fs_xattr_get+0x1a0>
    27cc:	ldr	x0, [sp, #40]
    27d0:	ldr	x2, [x0, #16]
    27d4:	ldr	x0, [sp, #40]
    27d8:	ldr	w0, [x0, #28]
    27dc:	sxtw	x1, w0
    27e0:	mov	x0, x1
    27e4:	lsl	x0, x0, #1
    27e8:	add	x0, x0, x1
    27ec:	lsl	x0, x0, #3
    27f0:	add	x0, x2, x0
    27f4:	ldr	x1, [sp, #72]
    27f8:	cmp	x1, x0
    27fc:	b.cc	26b4 <ext2fs_xattr_get+0x4c>  // b.lo, b.ul, b.last
    2800:	mov	x0, #0xb7a2                	// #47010
    2804:	movk	x0, #0x7f2b, lsl #16
    2808:	ldp	x29, x30, [sp], #80
    280c:	ret

0000000000002810 <ext2fs_xattr_inode_max_size>:
    2810:	stp	x29, x30, [sp, #-112]!
    2814:	mov	x29, sp
    2818:	str	x0, [sp, #40]
    281c:	str	w1, [sp, #36]
    2820:	str	x2, [sp, #24]
    2824:	ldr	x0, [sp, #40]
    2828:	ldr	x0, [x0, #32]
    282c:	ldr	w0, [x0, #76]
    2830:	cmp	w0, #0x0
    2834:	b.eq	284c <ext2fs_xattr_inode_max_size+0x3c>  // b.none
    2838:	ldr	x0, [sp, #40]
    283c:	ldr	x0, [x0, #32]
    2840:	ldrh	w0, [x0, #88]
    2844:	and	x0, x0, #0xffff
    2848:	b	2850 <ext2fs_xattr_inode_max_size+0x40>
    284c:	mov	x0, #0x80                  	// #128
    2850:	str	x0, [sp, #88]
    2854:	ldr	x0, [sp, #88]
    2858:	cmp	x0, #0x9f
    285c:	b.hi	2868 <ext2fs_xattr_inode_max_size+0x58>  // b.pmore
    2860:	mov	x0, #0xa0                  	// #160
    2864:	str	x0, [sp, #88]
    2868:	add	x0, sp, #0x38
    286c:	mov	x1, x0
    2870:	ldr	x0, [sp, #88]
    2874:	bl	0 <ext2fs_get_memzero>
    2878:	str	x0, [sp, #80]
    287c:	ldr	x0, [sp, #80]
    2880:	cmp	x0, #0x0
    2884:	b.eq	2890 <ext2fs_xattr_inode_max_size+0x80>  // b.none
    2888:	ldr	x0, [sp, #80]
    288c:	b	2a84 <ext2fs_xattr_inode_max_size+0x274>
    2890:	ldr	x1, [sp, #56]
    2894:	ldr	x0, [sp, #40]
    2898:	ldr	x0, [x0, #32]
    289c:	ldr	w0, [x0, #76]
    28a0:	cmp	w0, #0x0
    28a4:	b.eq	28b8 <ext2fs_xattr_inode_max_size+0xa8>  // b.none
    28a8:	ldr	x0, [sp, #40]
    28ac:	ldr	x0, [x0, #32]
    28b0:	ldrh	w0, [x0, #88]
    28b4:	b	28bc <ext2fs_xattr_inode_max_size+0xac>
    28b8:	mov	w0, #0x80                  	// #128
    28bc:	mov	w3, w0
    28c0:	mov	x2, x1
    28c4:	ldr	w1, [sp, #36]
    28c8:	ldr	x0, [sp, #40]
    28cc:	bl	0 <ext2fs_read_inode_full>
    28d0:	str	x0, [sp, #80]
    28d4:	ldr	x0, [sp, #80]
    28d8:	cmp	x0, #0x0
    28dc:	b.ne	2a74 <ext2fs_xattr_inode_max_size+0x264>  // b.any
    28e0:	ldr	x0, [sp, #40]
    28e4:	ldr	x0, [x0, #32]
    28e8:	ldr	w0, [x0, #76]
    28ec:	cmp	w0, #0x0
    28f0:	b.eq	2908 <ext2fs_xattr_inode_max_size+0xf8>  // b.none
    28f4:	ldr	x0, [sp, #40]
    28f8:	ldr	x0, [x0, #32]
    28fc:	ldrh	w0, [x0, #88]
    2900:	and	x0, x0, #0xffff
    2904:	b	290c <ext2fs_xattr_inode_max_size+0xfc>
    2908:	mov	x0, #0x80                  	// #128
    290c:	ldr	x1, [sp, #56]
    2910:	ldrh	w1, [x1, #128]
    2914:	add	w1, w1, #0x80
    2918:	sxtw	x1, w1
    291c:	add	x1, x1, #0x4
    2920:	cmp	x0, x1
    2924:	b.hi	2938 <ext2fs_xattr_inode_max_size+0x128>  // b.pmore
    2928:	mov	x0, #0xb7a7                	// #47015
    292c:	movk	x0, #0x7f2b, lsl #16
    2930:	str	x0, [sp, #80]
    2934:	b	2a78 <ext2fs_xattr_inode_max_size+0x268>
    2938:	ldr	x0, [sp, #40]
    293c:	ldr	x0, [x0, #32]
    2940:	ldr	w0, [x0, #76]
    2944:	cmp	w0, #0x0
    2948:	b.eq	2960 <ext2fs_xattr_inode_max_size+0x150>  // b.none
    294c:	ldr	x0, [sp, #40]
    2950:	ldr	x0, [x0, #32]
    2954:	ldrh	w0, [x0, #88]
    2958:	sub	w0, w0, #0xa4
    295c:	b	2964 <ext2fs_xattr_inode_max_size+0x154>
    2960:	mov	w0, #0xffffffdc            	// #-36
    2964:	str	w0, [sp, #100]
    2968:	ldr	x1, [sp, #56]
    296c:	ldr	x0, [sp, #56]
    2970:	ldrh	w0, [x0, #128]
    2974:	and	x0, x0, #0xffff
    2978:	add	x0, x0, #0x80
    297c:	add	x0, x1, x0
    2980:	ldr	w0, [x0]
    2984:	str	w0, [sp, #52]
    2988:	ldr	w1, [sp, #52]
    298c:	mov	w0, #0xea020000            	// #-368967680
    2990:	cmp	w1, w0
    2994:	b.ne	2a5c <ext2fs_xattr_inode_max_size+0x24c>  // b.any
    2998:	ldr	x1, [sp, #56]
    299c:	ldr	x0, [sp, #56]
    29a0:	ldrh	w0, [x0, #128]
    29a4:	and	x0, x0, #0xffff
    29a8:	add	x0, x0, #0x84
    29ac:	add	x0, x1, x0
    29b0:	str	x0, [sp, #72]
    29b4:	ldr	x0, [sp, #72]
    29b8:	str	x0, [sp, #104]
    29bc:	b	2a28 <ext2fs_xattr_inode_max_size+0x218>
    29c0:	ldr	x0, [sp, #104]
    29c4:	ldr	w0, [x0, #4]
    29c8:	cmp	w0, #0x0
    29cc:	b.ne	2a04 <ext2fs_xattr_inode_max_size+0x1f4>  // b.any
    29d0:	ldr	x0, [sp, #104]
    29d4:	ldr	w0, [x0, #8]
    29d8:	cmp	w0, #0x0
    29dc:	b.eq	2a04 <ext2fs_xattr_inode_max_size+0x1f4>  // b.none
    29e0:	ldr	x0, [sp, #104]
    29e4:	ldrh	w0, [x0, #2]
    29e8:	str	w0, [sp, #68]
    29ec:	ldr	w1, [sp, #68]
    29f0:	ldr	w0, [sp, #100]
    29f4:	cmp	w1, w0
    29f8:	b.cs	2a04 <ext2fs_xattr_inode_max_size+0x1f4>  // b.hs, b.nlast
    29fc:	ldr	w0, [sp, #68]
    2a00:	str	w0, [sp, #100]
    2a04:	ldr	x0, [sp, #104]
    2a08:	ldrb	w0, [x0]
    2a0c:	add	w0, w0, #0x3
    2a10:	mov	w0, w0
    2a14:	add	x0, x0, #0x10
    2a18:	and	x0, x0, #0xfffffffc
    2a1c:	ldr	x1, [sp, #104]
    2a20:	add	x0, x1, x0
    2a24:	str	x0, [sp, #104]
    2a28:	ldr	x0, [sp, #104]
    2a2c:	ldr	w0, [x0]
    2a30:	cmp	w0, #0x0
    2a34:	b.ne	29c0 <ext2fs_xattr_inode_max_size+0x1b0>  // b.any
    2a38:	ldr	w1, [sp, #100]
    2a3c:	ldr	x2, [sp, #104]
    2a40:	ldr	x0, [sp, #72]
    2a44:	sub	x0, x2, x0
    2a48:	sub	x0, x1, x0
    2a4c:	sub	x1, x0, #0x4
    2a50:	ldr	x0, [sp, #24]
    2a54:	str	x1, [x0]
    2a58:	b	2a78 <ext2fs_xattr_inode_max_size+0x268>
    2a5c:	ldr	w0, [sp, #100]
    2a60:	sub	x0, x0, #0x18
    2a64:	and	x1, x0, #0xfffffffc
    2a68:	ldr	x0, [sp, #24]
    2a6c:	str	x1, [x0]
    2a70:	b	2a78 <ext2fs_xattr_inode_max_size+0x268>
    2a74:	nop
    2a78:	add	x0, sp, #0x38
    2a7c:	bl	0 <ext2fs_free_mem>
    2a80:	ldr	x0, [sp, #80]
    2a84:	ldp	x29, x30, [sp], #112
    2a88:	ret

0000000000002a8c <xattr_create_ea_inode>:
    2a8c:	stp	x29, x30, [sp, #-208]!
    2a90:	mov	x29, sp
    2a94:	str	x0, [sp, #40]
    2a98:	str	x1, [sp, #32]
    2a9c:	str	x2, [sp, #24]
    2aa0:	str	x3, [sp, #16]
    2aa4:	add	x0, sp, #0x3c
    2aa8:	mov	x4, x0
    2aac:	mov	x3, #0x0                   	// #0
    2ab0:	mov	w2, #0x0                   	// #0
    2ab4:	mov	w1, #0x0                   	// #0
    2ab8:	ldr	x0, [sp, #40]
    2abc:	bl	0 <ext2fs_new_inode>
    2ac0:	str	x0, [sp, #200]
    2ac4:	ldr	x0, [sp, #200]
    2ac8:	cmp	x0, #0x0
    2acc:	b.eq	2ad8 <xattr_create_ea_inode+0x4c>  // b.none
    2ad0:	ldr	x0, [sp, #200]
    2ad4:	b	2c4c <xattr_create_ea_inode+0x1c0>
    2ad8:	add	x0, sp, #0x40
    2adc:	mov	x2, #0x80                  	// #128
    2ae0:	mov	w1, #0x0                   	// #0
    2ae4:	bl	0 <memset>
    2ae8:	ldr	w0, [sp, #96]
    2aec:	orr	w0, w0, #0x200000
    2af0:	str	w0, [sp, #96]
    2af4:	ldr	x0, [sp, #40]
    2af8:	ldr	x0, [x0, #32]
    2afc:	bl	3c <ext2fs_has_feature_extents>
    2b00:	cmp	w0, #0x0
    2b04:	b.eq	2b14 <xattr_create_ea_inode+0x88>  // b.none
    2b08:	ldr	w0, [sp, #96]
    2b0c:	orr	w0, w0, #0x80000
    2b10:	str	w0, [sp, #96]
    2b14:	str	wzr, [sp, #68]
    2b18:	mov	w0, #0xffff8180            	// #-32384
    2b1c:	strh	w0, [sp, #64]
    2b20:	mov	w0, #0x1                   	// #1
    2b24:	strh	w0, [sp, #90]
    2b28:	ldr	w0, [sp, #60]
    2b2c:	add	x1, sp, #0x40
    2b30:	mov	x2, x1
    2b34:	mov	w1, w0
    2b38:	ldr	x0, [sp, #40]
    2b3c:	bl	0 <ext2fs_write_new_inode>
    2b40:	str	x0, [sp, #200]
    2b44:	ldr	x0, [sp, #200]
    2b48:	cmp	x0, #0x0
    2b4c:	b.eq	2b58 <xattr_create_ea_inode+0xcc>  // b.none
    2b50:	ldr	x0, [sp, #200]
    2b54:	b	2c4c <xattr_create_ea_inode+0x1c0>
    2b58:	add	x0, sp, #0x40
    2b5c:	mov	x1, #0x1                   	// #1
    2b60:	bl	3b4 <ext2fs_set_ea_inode_ref>
    2b64:	ldr	x0, [sp, #40]
    2b68:	ldr	w0, [x0, #312]
    2b6c:	ldr	x2, [sp, #24]
    2b70:	ldr	x1, [sp, #32]
    2b74:	bl	0 <ext2fs_crc32c_le>
    2b78:	str	w0, [sp, #196]
    2b7c:	add	x0, sp, #0x40
    2b80:	ldr	w1, [sp, #196]
    2b84:	bl	360 <ext2fs_set_ea_inode_hash>
    2b88:	ldr	w0, [sp, #60]
    2b8c:	add	x1, sp, #0x40
    2b90:	mov	x2, x1
    2b94:	mov	w1, w0
    2b98:	ldr	x0, [sp, #40]
    2b9c:	bl	0 <ext2fs_write_inode>
    2ba0:	str	x0, [sp, #200]
    2ba4:	ldr	x0, [sp, #200]
    2ba8:	cmp	x0, #0x0
    2bac:	b.eq	2bb8 <xattr_create_ea_inode+0x12c>  // b.none
    2bb0:	ldr	x0, [sp, #200]
    2bb4:	b	2c4c <xattr_create_ea_inode+0x1c0>
    2bb8:	ldr	w0, [sp, #60]
    2bbc:	add	x1, sp, #0x30
    2bc0:	mov	x3, x1
    2bc4:	mov	w2, #0x1                   	// #1
    2bc8:	mov	w1, w0
    2bcc:	ldr	x0, [sp, #40]
    2bd0:	bl	0 <ext2fs_file_open>
    2bd4:	str	x0, [sp, #200]
    2bd8:	ldr	x0, [sp, #200]
    2bdc:	cmp	x0, #0x0
    2be0:	b.eq	2bec <xattr_create_ea_inode+0x160>  // b.none
    2be4:	ldr	x0, [sp, #200]
    2be8:	b	2c4c <xattr_create_ea_inode+0x1c0>
    2bec:	ldr	x0, [sp, #48]
    2bf0:	ldr	x1, [sp, #24]
    2bf4:	mov	x3, #0x0                   	// #0
    2bf8:	mov	w2, w1
    2bfc:	ldr	x1, [sp, #32]
    2c00:	bl	0 <ext2fs_file_write>
    2c04:	str	x0, [sp, #200]
    2c08:	ldr	x0, [sp, #48]
    2c0c:	bl	0 <ext2fs_file_close>
    2c10:	ldr	x0, [sp, #200]
    2c14:	cmp	x0, #0x0
    2c18:	b.eq	2c24 <xattr_create_ea_inode+0x198>  // b.none
    2c1c:	ldr	x0, [sp, #200]
    2c20:	b	2c4c <xattr_create_ea_inode+0x1c0>
    2c24:	ldr	w0, [sp, #60]
    2c28:	mov	w3, #0x0                   	// #0
    2c2c:	mov	w2, #0x1                   	// #1
    2c30:	mov	w1, w0
    2c34:	ldr	x0, [sp, #40]
    2c38:	bl	0 <ext2fs_inode_alloc_stats2>
    2c3c:	ldr	w1, [sp, #60]
    2c40:	ldr	x0, [sp, #16]
    2c44:	str	w1, [x0]
    2c48:	mov	x0, #0x0                   	// #0
    2c4c:	ldp	x29, x30, [sp], #208
    2c50:	ret

0000000000002c54 <xattr_inode_dec_ref>:
    2c54:	stp	x29, x30, [sp, #-208]!
    2c58:	mov	x29, sp
    2c5c:	str	x0, [sp, #24]
    2c60:	str	w1, [sp, #20]
    2c64:	add	x0, sp, #0x20
    2c68:	mov	w3, #0xa0                  	// #160
    2c6c:	mov	x2, x0
    2c70:	ldr	w1, [sp, #20]
    2c74:	ldr	x0, [sp, #24]
    2c78:	bl	0 <ext2fs_read_inode_full>
    2c7c:	str	x0, [sp, #200]
    2c80:	ldr	x0, [sp, #200]
    2c84:	cmp	x0, #0x0
    2c88:	b.ne	2da0 <xattr_inode_dec_ref+0x14c>  // b.any
    2c8c:	add	x0, sp, #0x20
    2c90:	bl	0 <EXT2_INODE>
    2c94:	bl	384 <ext2fs_get_ea_inode_ref>
    2c98:	str	x0, [sp, #192]
    2c9c:	ldr	x0, [sp, #192]
    2ca0:	sub	x0, x0, #0x1
    2ca4:	str	x0, [sp, #192]
    2ca8:	add	x0, sp, #0x20
    2cac:	bl	0 <EXT2_INODE>
    2cb0:	ldr	x1, [sp, #192]
    2cb4:	bl	3b4 <ext2fs_set_ea_inode_ref>
    2cb8:	ldr	x0, [sp, #192]
    2cbc:	cmp	x0, #0x0
    2cc0:	b.ne	2d74 <xattr_inode_dec_ref+0x120>  // b.any
    2cc4:	strh	wzr, [sp, #58]
    2cc8:	ldr	x0, [sp, #24]
    2ccc:	ldr	x0, [x0, #184]
    2cd0:	cmp	x0, #0x0
    2cd4:	b.eq	2ce4 <xattr_inode_dec_ref+0x90>  // b.none
    2cd8:	ldr	x0, [sp, #24]
    2cdc:	ldr	x0, [x0, #184]
    2ce0:	b	2cec <xattr_inode_dec_ref+0x98>
    2ce4:	mov	x0, #0x0                   	// #0
    2ce8:	bl	0 <time>
    2cec:	str	w0, [sp, #52]
    2cf0:	add	x0, sp, #0x20
    2cf4:	mov	x2, x0
    2cf8:	ldr	w1, [sp, #20]
    2cfc:	ldr	x0, [sp, #24]
    2d00:	bl	a04 <ext2fs_free_ext_attr>
    2d04:	str	x0, [sp, #200]
    2d08:	ldr	x0, [sp, #200]
    2d0c:	cmp	x0, #0x0
    2d10:	b.ne	2d7c <xattr_inode_dec_ref+0x128>  // b.any
    2d14:	add	x0, sp, #0x20
    2d18:	mov	x1, x0
    2d1c:	ldr	x0, [sp, #24]
    2d20:	bl	0 <ext2fs_inode_has_valid_blocks2>
    2d24:	cmp	w0, #0x0
    2d28:	b.eq	2d5c <xattr_inode_dec_ref+0x108>  // b.none
    2d2c:	add	x0, sp, #0x20
    2d30:	mov	x5, #0xffffffffffffffff    	// #-1
    2d34:	mov	x4, #0x0                   	// #0
    2d38:	mov	x3, #0x0                   	// #0
    2d3c:	mov	x2, x0
    2d40:	ldr	w1, [sp, #20]
    2d44:	ldr	x0, [sp, #24]
    2d48:	bl	0 <ext2fs_punch>
    2d4c:	str	x0, [sp, #200]
    2d50:	ldr	x0, [sp, #200]
    2d54:	cmp	x0, #0x0
    2d58:	b.ne	2da8 <xattr_inode_dec_ref+0x154>  // b.any
    2d5c:	mov	w3, #0x0                   	// #0
    2d60:	mov	w2, #0xffffffff            	// #-1
    2d64:	ldr	w1, [sp, #20]
    2d68:	ldr	x0, [sp, #24]
    2d6c:	bl	0 <ext2fs_inode_alloc_stats2>
    2d70:	b	2d80 <xattr_inode_dec_ref+0x12c>
    2d74:	nop
    2d78:	b	2d80 <xattr_inode_dec_ref+0x12c>
    2d7c:	nop
    2d80:	add	x0, sp, #0x20
    2d84:	mov	w3, #0xa0                  	// #160
    2d88:	mov	x2, x0
    2d8c:	ldr	w1, [sp, #20]
    2d90:	ldr	x0, [sp, #24]
    2d94:	bl	0 <ext2fs_write_inode_full>
    2d98:	str	x0, [sp, #200]
    2d9c:	b	2dac <xattr_inode_dec_ref+0x158>
    2da0:	nop
    2da4:	b	2dac <xattr_inode_dec_ref+0x158>
    2da8:	nop
    2dac:	ldr	x0, [sp, #200]
    2db0:	ldp	x29, x30, [sp], #208
    2db4:	ret

0000000000002db8 <xattr_update_entry>:
    2db8:	stp	x29, x30, [sp, #-96]!
    2dbc:	mov	x29, sp
    2dc0:	str	x0, [sp, #56]
    2dc4:	str	x1, [sp, #48]
    2dc8:	str	x2, [sp, #40]
    2dcc:	str	x3, [sp, #32]
    2dd0:	str	x4, [sp, #24]
    2dd4:	str	w5, [sp, #20]
    2dd8:	str	wzr, [sp, #80]
    2ddc:	str	xzr, [sp, #72]
    2de0:	str	xzr, [sp, #64]
    2de4:	ldr	x0, [sp, #48]
    2de8:	ldr	x0, [x0]
    2dec:	cmp	x0, #0x0
    2df0:	b.ne	2e44 <xattr_update_entry+0x8c>  // b.any
    2df4:	ldr	x0, [sp, #40]
    2df8:	bl	0 <strlen>
    2dfc:	str	w0, [sp, #84]
    2e00:	ldr	w0, [sp, #84]
    2e04:	add	w0, w0, #0x1
    2e08:	sxtw	x0, w0
    2e0c:	add	x1, sp, #0x40
    2e10:	bl	0 <ext2fs_get_mem>
    2e14:	str	x0, [sp, #88]
    2e18:	ldr	x0, [sp, #88]
    2e1c:	cmp	x0, #0x0
    2e20:	b.ne	2f44 <xattr_update_entry+0x18c>  // b.any
    2e24:	ldr	x3, [sp, #64]
    2e28:	ldr	w0, [sp, #84]
    2e2c:	add	w0, w0, #0x1
    2e30:	sxtw	x0, w0
    2e34:	mov	x2, x0
    2e38:	ldr	x1, [sp, #40]
    2e3c:	mov	x0, x3
    2e40:	bl	0 <memcpy>
    2e44:	add	x0, sp, #0x48
    2e48:	mov	x1, x0
    2e4c:	ldr	x0, [sp, #24]
    2e50:	bl	0 <ext2fs_get_mem>
    2e54:	str	x0, [sp, #88]
    2e58:	ldr	x0, [sp, #88]
    2e5c:	cmp	x0, #0x0
    2e60:	b.ne	2f4c <xattr_update_entry+0x194>  // b.any
    2e64:	ldr	x0, [sp, #72]
    2e68:	ldr	x2, [sp, #24]
    2e6c:	ldr	x1, [sp, #32]
    2e70:	bl	0 <memcpy>
    2e74:	ldr	w0, [sp, #20]
    2e78:	cmp	w0, #0x0
    2e7c:	b.eq	2ea8 <xattr_update_entry+0xf0>  // b.none
    2e80:	add	x0, sp, #0x50
    2e84:	mov	x3, x0
    2e88:	ldr	x2, [sp, #24]
    2e8c:	ldr	x1, [sp, #32]
    2e90:	ldr	x0, [sp, #56]
    2e94:	bl	2a8c <xattr_create_ea_inode>
    2e98:	str	x0, [sp, #88]
    2e9c:	ldr	x0, [sp, #88]
    2ea0:	cmp	x0, #0x0
    2ea4:	b.ne	2f54 <xattr_update_entry+0x19c>  // b.any
    2ea8:	ldr	x0, [sp, #48]
    2eac:	ldr	w0, [x0, #20]
    2eb0:	cmp	w0, #0x0
    2eb4:	b.eq	2edc <xattr_update_entry+0x124>  // b.none
    2eb8:	ldr	x0, [sp, #48]
    2ebc:	ldr	w0, [x0, #20]
    2ec0:	mov	w1, w0
    2ec4:	ldr	x0, [sp, #56]
    2ec8:	bl	2c54 <xattr_inode_dec_ref>
    2ecc:	str	x0, [sp, #88]
    2ed0:	ldr	x0, [sp, #88]
    2ed4:	cmp	x0, #0x0
    2ed8:	b.ne	2f5c <xattr_update_entry+0x1a4>  // b.any
    2edc:	ldr	x0, [sp, #48]
    2ee0:	ldr	x0, [x0]
    2ee4:	cmp	x0, #0x0
    2ee8:	b.ne	2ef8 <xattr_update_entry+0x140>  // b.any
    2eec:	ldr	x1, [sp, #64]
    2ef0:	ldr	x0, [sp, #48]
    2ef4:	str	x1, [x0]
    2ef8:	ldr	x0, [sp, #48]
    2efc:	ldr	x0, [x0, #8]
    2f00:	cmp	x0, #0x0
    2f04:	b.eq	2f14 <xattr_update_entry+0x15c>  // b.none
    2f08:	ldr	x0, [sp, #48]
    2f0c:	add	x0, x0, #0x8
    2f10:	bl	0 <ext2fs_free_mem>
    2f14:	ldr	x1, [sp, #72]
    2f18:	ldr	x0, [sp, #48]
    2f1c:	str	x1, [x0, #8]
    2f20:	ldr	x0, [sp, #24]
    2f24:	mov	w1, w0
    2f28:	ldr	x0, [sp, #48]
    2f2c:	str	w1, [x0, #16]
    2f30:	ldr	w1, [sp, #80]
    2f34:	ldr	x0, [sp, #48]
    2f38:	str	w1, [x0, #20]
    2f3c:	mov	x0, #0x0                   	// #0
    2f40:	b	2fa8 <xattr_update_entry+0x1f0>
    2f44:	nop
    2f48:	b	2f60 <xattr_update_entry+0x1a8>
    2f4c:	nop
    2f50:	b	2f60 <xattr_update_entry+0x1a8>
    2f54:	nop
    2f58:	b	2f60 <xattr_update_entry+0x1a8>
    2f5c:	nop
    2f60:	ldr	x0, [sp, #64]
    2f64:	cmp	x0, #0x0
    2f68:	b.eq	2f74 <xattr_update_entry+0x1bc>  // b.none
    2f6c:	add	x0, sp, #0x40
    2f70:	bl	0 <ext2fs_free_mem>
    2f74:	ldr	x0, [sp, #72]
    2f78:	cmp	x0, #0x0
    2f7c:	b.eq	2f88 <xattr_update_entry+0x1d0>  // b.none
    2f80:	add	x0, sp, #0x48
    2f84:	bl	0 <ext2fs_free_mem>
    2f88:	ldr	w0, [sp, #80]
    2f8c:	cmp	w0, #0x0
    2f90:	b.eq	2fa4 <xattr_update_entry+0x1ec>  // b.none
    2f94:	ldr	w0, [sp, #80]
    2f98:	mov	w1, w0
    2f9c:	ldr	x0, [sp, #56]
    2fa0:	bl	2c54 <xattr_inode_dec_ref>
    2fa4:	ldr	x0, [sp, #88]
    2fa8:	ldp	x29, x30, [sp], #96
    2fac:	ret

0000000000002fb0 <xattr_find_position>:
    2fb0:	stp	x29, x30, [sp, #-96]!
    2fb4:	mov	x29, sp
    2fb8:	str	x0, [sp, #40]
    2fbc:	str	w1, [sp, #36]
    2fc0:	str	x2, [sp, #24]
    2fc4:	add	x1, sp, #0x34
    2fc8:	add	x0, sp, #0x40
    2fcc:	mov	x2, x1
    2fd0:	mov	x1, x0
    2fd4:	ldr	x0, [sp, #24]
    2fd8:	bl	94c <find_ea_index>
    2fdc:	ldr	x0, [sp, #64]
    2fe0:	bl	0 <strlen>
    2fe4:	str	w0, [sp, #80]
    2fe8:	str	wzr, [sp, #84]
    2fec:	ldr	x0, [sp, #40]
    2ff0:	str	x0, [sp, #88]
    2ff4:	b	3098 <xattr_find_position+0xe8>
    2ff8:	ldr	x0, [sp, #88]
    2ffc:	ldr	x0, [x0]
    3000:	add	x2, sp, #0x30
    3004:	add	x1, sp, #0x38
    3008:	bl	94c <find_ea_index>
    300c:	ldr	w1, [sp, #52]
    3010:	ldr	w0, [sp, #48]
    3014:	cmp	w1, w0
    3018:	b.lt	30ac <xattr_find_position+0xfc>  // b.tstop
    301c:	ldr	w1, [sp, #52]
    3020:	ldr	w0, [sp, #48]
    3024:	cmp	w1, w0
    3028:	b.gt	3074 <xattr_find_position+0xc4>
    302c:	ldr	x0, [sp, #56]
    3030:	bl	0 <strlen>
    3034:	str	w0, [sp, #76]
    3038:	ldr	w1, [sp, #80]
    303c:	ldr	w0, [sp, #76]
    3040:	cmp	w1, w0
    3044:	b.lt	30b4 <xattr_find_position+0x104>  // b.tstop
    3048:	ldr	w1, [sp, #80]
    304c:	ldr	w0, [sp, #76]
    3050:	cmp	w1, w0
    3054:	b.gt	307c <xattr_find_position+0xcc>
    3058:	ldr	x0, [sp, #64]
    305c:	ldr	x1, [sp, #56]
    3060:	ldrsw	x2, [sp, #80]
    3064:	bl	0 <memcmp>
    3068:	cmp	w0, #0x0
    306c:	b.le	30bc <xattr_find_position+0x10c>
    3070:	b	3080 <xattr_find_position+0xd0>
    3074:	nop
    3078:	b	3080 <xattr_find_position+0xd0>
    307c:	nop
    3080:	ldr	w0, [sp, #84]
    3084:	add	w0, w0, #0x1
    3088:	str	w0, [sp, #84]
    308c:	ldr	x0, [sp, #88]
    3090:	add	x0, x0, #0x18
    3094:	str	x0, [sp, #88]
    3098:	ldr	w1, [sp, #84]
    309c:	ldr	w0, [sp, #36]
    30a0:	cmp	w1, w0
    30a4:	b.lt	2ff8 <xattr_find_position+0x48>  // b.tstop
    30a8:	b	30c0 <xattr_find_position+0x110>
    30ac:	nop
    30b0:	b	30c0 <xattr_find_position+0x110>
    30b4:	nop
    30b8:	b	30c0 <xattr_find_position+0x110>
    30bc:	nop
    30c0:	ldr	w0, [sp, #84]
    30c4:	ldp	x29, x30, [sp], #96
    30c8:	ret

00000000000030cc <xattr_array_update>:
    30cc:	stp	x29, x30, [sp, #-128]!
    30d0:	mov	x29, sp
    30d4:	str	x0, [sp, #56]
    30d8:	str	x1, [sp, #48]
    30dc:	str	x2, [sp, #40]
    30e0:	str	x3, [sp, #32]
    30e4:	str	w4, [sp, #28]
    30e8:	str	w5, [sp, #24]
    30ec:	str	w6, [sp, #20]
    30f0:	str	w7, [sp, #16]
    30f4:	add	x1, sp, #0x4c
    30f8:	add	x0, sp, #0x40
    30fc:	mov	x2, x1
    3100:	mov	x1, x0
    3104:	ldr	x0, [sp, #48]
    3108:	bl	94c <find_ea_index>
    310c:	ldr	x0, [sp, #64]
    3110:	bl	0 <strlen>
    3114:	str	w0, [sp, #112]
    3118:	ldr	w0, [sp, #112]
    311c:	add	w0, w0, #0x13
    3120:	and	w0, w0, #0xfffffffc
    3124:	str	w0, [sp, #120]
    3128:	ldr	w0, [sp, #16]
    312c:	cmp	w0, #0x0
    3130:	b.ne	314c <xattr_array_update+0x80>  // b.any
    3134:	ldr	x0, [sp, #32]
    3138:	add	w0, w0, #0x3
    313c:	and	w1, w0, #0xfffffffc
    3140:	ldr	w0, [sp, #120]
    3144:	add	w0, w1, w0
    3148:	str	w0, [sp, #120]
    314c:	ldr	w0, [sp, #20]
    3150:	cmp	w0, #0x0
    3154:	b.lt	31e8 <xattr_array_update+0x11c>  // b.tstop
    3158:	ldr	x0, [sp, #56]
    315c:	ldr	w0, [x0, #32]
    3160:	ldr	w1, [sp, #20]
    3164:	cmp	w1, w0
    3168:	b.ge	31e8 <xattr_array_update+0x11c>  // b.tcont
    316c:	ldr	w0, [sp, #112]
    3170:	add	w0, w0, #0x13
    3174:	and	w1, w0, #0xfffffffc
    3178:	ldr	w0, [sp, #28]
    317c:	add	w0, w1, w0
    3180:	str	w0, [sp, #28]
    3184:	ldr	x0, [sp, #56]
    3188:	ldr	x2, [x0, #16]
    318c:	ldrsw	x1, [sp, #20]
    3190:	mov	x0, x1
    3194:	lsl	x0, x0, #1
    3198:	add	x0, x0, x1
    319c:	lsl	x0, x0, #3
    31a0:	add	x0, x2, x0
    31a4:	ldr	w0, [x0, #20]
    31a8:	cmp	w0, #0x0
    31ac:	b.ne	31e8 <xattr_array_update+0x11c>  // b.any
    31b0:	ldr	x0, [sp, #56]
    31b4:	ldr	x2, [x0, #16]
    31b8:	ldrsw	x1, [sp, #20]
    31bc:	mov	x0, x1
    31c0:	lsl	x0, x0, #1
    31c4:	add	x0, x0, x1
    31c8:	lsl	x0, x0, #3
    31cc:	add	x0, x2, x0
    31d0:	ldr	w0, [x0, #16]
    31d4:	add	w0, w0, #0x3
    31d8:	and	w1, w0, #0xfffffffc
    31dc:	ldr	w0, [sp, #28]
    31e0:	add	w0, w1, w0
    31e4:	str	w0, [sp, #28]
    31e8:	ldr	w1, [sp, #120]
    31ec:	ldr	w0, [sp, #28]
    31f0:	cmp	w1, w0
    31f4:	b.gt	33a8 <xattr_array_update+0x2dc>
    31f8:	ldr	w0, [sp, #20]
    31fc:	cmp	w0, #0x0
    3200:	b.ge	321c <xattr_array_update+0x150>  // b.tcont
    3204:	ldr	x0, [sp, #56]
    3208:	ldr	w0, [x0, #32]
    320c:	str	w0, [sp, #116]
    3210:	mov	w0, #0x1                   	// #1
    3214:	str	w0, [sp, #124]
    3218:	b	36a0 <xattr_array_update+0x5d4>
    321c:	ldr	x0, [sp, #56]
    3220:	ldr	x6, [x0, #8]
    3224:	ldr	x0, [sp, #56]
    3228:	ldr	x2, [x0, #16]
    322c:	ldrsw	x1, [sp, #20]
    3230:	mov	x0, x1
    3234:	lsl	x0, x0, #1
    3238:	add	x0, x0, x1
    323c:	lsl	x0, x0, #3
    3240:	add	x0, x2, x0
    3244:	ldr	w5, [sp, #16]
    3248:	ldr	x4, [sp, #32]
    324c:	ldr	x3, [sp, #40]
    3250:	ldr	x2, [sp, #48]
    3254:	mov	x1, x0
    3258:	mov	x0, x6
    325c:	bl	2db8 <xattr_update_entry>
    3260:	str	w0, [sp, #108]
    3264:	ldr	w0, [sp, #108]
    3268:	cmp	w0, #0x0
    326c:	b.eq	3278 <xattr_array_update+0x1ac>  // b.none
    3270:	ldrsw	x0, [sp, #108]
    3274:	b	3868 <xattr_array_update+0x79c>
    3278:	ldr	x0, [sp, #56]
    327c:	ldr	w0, [x0, #32]
    3280:	ldr	w1, [sp, #20]
    3284:	cmp	w1, w0
    3288:	b.lt	33a0 <xattr_array_update+0x2d4>  // b.tstop
    328c:	ldr	x0, [sp, #56]
    3290:	ldr	x2, [x0, #16]
    3294:	ldrsw	x1, [sp, #20]
    3298:	mov	x0, x1
    329c:	lsl	x0, x0, #1
    32a0:	add	x0, x0, x1
    32a4:	lsl	x0, x0, #3
    32a8:	add	x0, x2, x0
    32ac:	add	x2, sp, #0x50
    32b0:	mov	x3, x0
    32b4:	ldp	x0, x1, [x3]
    32b8:	stp	x0, x1, [x2]
    32bc:	ldr	x0, [x3, #16]
    32c0:	str	x0, [x2, #16]
    32c4:	ldr	x0, [sp, #56]
    32c8:	ldr	x2, [x0, #16]
    32cc:	ldr	x0, [sp, #56]
    32d0:	ldr	w0, [x0, #32]
    32d4:	sxtw	x0, w0
    32d8:	add	x1, x0, #0x1
    32dc:	mov	x0, x1
    32e0:	lsl	x0, x0, #1
    32e4:	add	x0, x0, x1
    32e8:	lsl	x0, x0, #3
    32ec:	add	x3, x2, x0
    32f0:	ldr	x0, [sp, #56]
    32f4:	ldr	x2, [x0, #16]
    32f8:	ldr	x0, [sp, #56]
    32fc:	ldr	w0, [x0, #32]
    3300:	sxtw	x1, w0
    3304:	mov	x0, x1
    3308:	lsl	x0, x0, #1
    330c:	add	x0, x0, x1
    3310:	lsl	x0, x0, #3
    3314:	add	x4, x2, x0
    3318:	ldr	x0, [sp, #56]
    331c:	ldr	w0, [x0, #32]
    3320:	ldr	w1, [sp, #20]
    3324:	sub	w0, w1, w0
    3328:	sxtw	x1, w0
    332c:	mov	x0, x1
    3330:	lsl	x0, x0, #1
    3334:	add	x0, x0, x1
    3338:	lsl	x0, x0, #3
    333c:	mov	x2, x0
    3340:	mov	x1, x4
    3344:	mov	x0, x3
    3348:	bl	0 <memmove>
    334c:	ldr	x0, [sp, #56]
    3350:	ldr	x2, [x0, #16]
    3354:	ldr	x0, [sp, #56]
    3358:	ldr	w0, [x0, #32]
    335c:	sxtw	x1, w0
    3360:	mov	x0, x1
    3364:	lsl	x0, x0, #1
    3368:	add	x0, x0, x1
    336c:	lsl	x0, x0, #3
    3370:	add	x0, x2, x0
    3374:	mov	x3, x0
    3378:	add	x2, sp, #0x50
    337c:	ldp	x0, x1, [x2]
    3380:	stp	x0, x1, [x3]
    3384:	ldr	x0, [x2, #16]
    3388:	str	x0, [x3, #16]
    338c:	ldr	x0, [sp, #56]
    3390:	ldr	w0, [x0, #32]
    3394:	add	w1, w0, #0x1
    3398:	ldr	x0, [sp, #56]
    339c:	str	w1, [x0, #32]
    33a0:	mov	x0, #0x0                   	// #0
    33a4:	b	3868 <xattr_array_update+0x79c>
    33a8:	ldr	x0, [sp, #56]
    33ac:	ldr	w0, [x0, #32]
    33b0:	ldr	w1, [sp, #20]
    33b4:	cmp	w1, w0
    33b8:	b.lt	3438 <xattr_array_update+0x36c>  // b.tstop
    33bc:	ldr	w0, [sp, #112]
    33c0:	add	w0, w0, #0x13
    33c4:	and	w1, w0, #0xfffffffc
    33c8:	ldr	w0, [sp, #24]
    33cc:	add	w0, w1, w0
    33d0:	str	w0, [sp, #24]
    33d4:	ldr	x0, [sp, #56]
    33d8:	ldr	x2, [x0, #16]
    33dc:	ldrsw	x1, [sp, #20]
    33e0:	mov	x0, x1
    33e4:	lsl	x0, x0, #1
    33e8:	add	x0, x0, x1
    33ec:	lsl	x0, x0, #3
    33f0:	add	x0, x2, x0
    33f4:	ldr	w0, [x0, #20]
    33f8:	cmp	w0, #0x0
    33fc:	b.ne	3438 <xattr_array_update+0x36c>  // b.any
    3400:	ldr	x0, [sp, #56]
    3404:	ldr	x2, [x0, #16]
    3408:	ldrsw	x1, [sp, #20]
    340c:	mov	x0, x1
    3410:	lsl	x0, x0, #1
    3414:	add	x0, x0, x1
    3418:	lsl	x0, x0, #3
    341c:	add	x0, x2, x0
    3420:	ldr	w0, [x0, #16]
    3424:	add	w0, w0, #0x3
    3428:	and	w1, w0, #0xfffffffc
    342c:	ldr	w0, [sp, #24]
    3430:	add	w0, w1, w0
    3434:	str	w0, [sp, #24]
    3438:	ldr	w1, [sp, #120]
    343c:	ldr	w0, [sp, #24]
    3440:	cmp	w1, w0
    3444:	b.le	3454 <xattr_array_update+0x388>
    3448:	mov	x0, #0xb7a3                	// #47011
    344c:	movk	x0, #0x7f2b, lsl #16
    3450:	b	3868 <xattr_array_update+0x79c>
    3454:	ldr	w0, [sp, #20]
    3458:	cmp	w0, #0x0
    345c:	b.lt	3638 <xattr_array_update+0x56c>  // b.tstop
    3460:	ldr	x0, [sp, #56]
    3464:	ldr	x6, [x0, #8]
    3468:	ldr	x0, [sp, #56]
    346c:	ldr	x2, [x0, #16]
    3470:	ldrsw	x1, [sp, #20]
    3474:	mov	x0, x1
    3478:	lsl	x0, x0, #1
    347c:	add	x0, x0, x1
    3480:	lsl	x0, x0, #3
    3484:	add	x0, x2, x0
    3488:	ldr	w5, [sp, #16]
    348c:	ldr	x4, [sp, #32]
    3490:	ldr	x3, [sp, #40]
    3494:	ldr	x2, [sp, #48]
    3498:	mov	x1, x0
    349c:	mov	x0, x6
    34a0:	bl	2db8 <xattr_update_entry>
    34a4:	str	w0, [sp, #108]
    34a8:	ldr	w0, [sp, #108]
    34ac:	cmp	w0, #0x0
    34b0:	b.eq	34bc <xattr_array_update+0x3f0>  // b.none
    34b4:	ldrsw	x0, [sp, #108]
    34b8:	b	3868 <xattr_array_update+0x79c>
    34bc:	ldr	x0, [sp, #56]
    34c0:	ldr	w0, [x0, #32]
    34c4:	ldr	w1, [sp, #20]
    34c8:	cmp	w1, w0
    34cc:	b.ge	3630 <xattr_array_update+0x564>  // b.tcont
    34d0:	ldr	x0, [sp, #56]
    34d4:	ldr	x2, [x0, #16]
    34d8:	ldr	x0, [sp, #56]
    34dc:	ldr	w0, [x0, #32]
    34e0:	sxtw	x1, w0
    34e4:	mov	x0, x1
    34e8:	lsl	x0, x0, #1
    34ec:	add	x0, x0, x1
    34f0:	lsl	x0, x0, #3
    34f4:	add	x3, x2, x0
    34f8:	ldr	x0, [sp, #56]
    34fc:	ldr	w1, [x0, #28]
    3500:	ldr	x0, [sp, #56]
    3504:	ldr	w0, [x0, #32]
    3508:	sub	w0, w1, w0
    350c:	ldr	x2, [sp, #48]
    3510:	mov	w1, w0
    3514:	mov	x0, x3
    3518:	bl	2fb0 <xattr_find_position>
    351c:	str	w0, [sp, #116]
    3520:	ldr	x0, [sp, #56]
    3524:	ldr	w0, [x0, #32]
    3528:	sub	w0, w0, #0x1
    352c:	ldr	w1, [sp, #116]
    3530:	add	w0, w1, w0
    3534:	str	w0, [sp, #116]
    3538:	ldr	x0, [sp, #56]
    353c:	ldr	x2, [x0, #16]
    3540:	ldrsw	x1, [sp, #20]
    3544:	mov	x0, x1
    3548:	lsl	x0, x0, #1
    354c:	add	x0, x0, x1
    3550:	lsl	x0, x0, #3
    3554:	add	x0, x2, x0
    3558:	add	x2, sp, #0x50
    355c:	mov	x3, x0
    3560:	ldp	x0, x1, [x3]
    3564:	stp	x0, x1, [x2]
    3568:	ldr	x0, [x3, #16]
    356c:	str	x0, [x2, #16]
    3570:	ldr	x0, [sp, #56]
    3574:	ldr	x2, [x0, #16]
    3578:	ldrsw	x1, [sp, #20]
    357c:	mov	x0, x1
    3580:	lsl	x0, x0, #1
    3584:	add	x0, x0, x1
    3588:	lsl	x0, x0, #3
    358c:	add	x3, x2, x0
    3590:	ldr	x0, [sp, #56]
    3594:	ldr	x2, [x0, #16]
    3598:	ldrsw	x0, [sp, #20]
    359c:	add	x1, x0, #0x1
    35a0:	mov	x0, x1
    35a4:	lsl	x0, x0, #1
    35a8:	add	x0, x0, x1
    35ac:	lsl	x0, x0, #3
    35b0:	add	x4, x2, x0
    35b4:	ldr	w1, [sp, #116]
    35b8:	ldr	w0, [sp, #20]
    35bc:	sub	w0, w1, w0
    35c0:	sxtw	x1, w0
    35c4:	mov	x0, x1
    35c8:	lsl	x0, x0, #1
    35cc:	add	x0, x0, x1
    35d0:	lsl	x0, x0, #3
    35d4:	mov	x2, x0
    35d8:	mov	x1, x4
    35dc:	mov	x0, x3
    35e0:	bl	0 <memmove>
    35e4:	ldr	x0, [sp, #56]
    35e8:	ldr	x2, [x0, #16]
    35ec:	ldrsw	x1, [sp, #116]
    35f0:	mov	x0, x1
    35f4:	lsl	x0, x0, #1
    35f8:	add	x0, x0, x1
    35fc:	lsl	x0, x0, #3
    3600:	add	x0, x2, x0
    3604:	mov	x3, x0
    3608:	add	x2, sp, #0x50
    360c:	ldp	x0, x1, [x2]
    3610:	stp	x0, x1, [x3]
    3614:	ldr	x0, [x2, #16]
    3618:	str	x0, [x3, #16]
    361c:	ldr	x0, [sp, #56]
    3620:	ldr	w0, [x0, #32]
    3624:	sub	w1, w0, #0x1
    3628:	ldr	x0, [sp, #56]
    362c:	str	w1, [x0, #32]
    3630:	mov	x0, #0x0                   	// #0
    3634:	b	3868 <xattr_array_update+0x79c>
    3638:	ldr	x0, [sp, #56]
    363c:	ldr	x2, [x0, #16]
    3640:	ldr	x0, [sp, #56]
    3644:	ldr	w0, [x0, #32]
    3648:	sxtw	x1, w0
    364c:	mov	x0, x1
    3650:	lsl	x0, x0, #1
    3654:	add	x0, x0, x1
    3658:	lsl	x0, x0, #3
    365c:	add	x3, x2, x0
    3660:	ldr	x0, [sp, #56]
    3664:	ldr	w1, [x0, #28]
    3668:	ldr	x0, [sp, #56]
    366c:	ldr	w0, [x0, #32]
    3670:	sub	w0, w1, w0
    3674:	ldr	x2, [sp, #48]
    3678:	mov	w1, w0
    367c:	mov	x0, x3
    3680:	bl	2fb0 <xattr_find_position>
    3684:	str	w0, [sp, #116]
    3688:	ldr	x0, [sp, #56]
    368c:	ldr	w0, [x0, #32]
    3690:	ldr	w1, [sp, #116]
    3694:	add	w0, w1, w0
    3698:	str	w0, [sp, #116]
    369c:	str	wzr, [sp, #124]
    36a0:	ldr	x0, [sp, #56]
    36a4:	ldr	w1, [x0, #28]
    36a8:	ldr	x0, [sp, #56]
    36ac:	ldr	w0, [x0, #24]
    36b0:	cmp	w1, w0
    36b4:	b.ne	36dc <xattr_array_update+0x610>  // b.any
    36b8:	mov	w1, #0x4                   	// #4
    36bc:	ldr	x0, [sp, #56]
    36c0:	bl	820 <ext2fs_xattrs_expand>
    36c4:	str	w0, [sp, #108]
    36c8:	ldr	w0, [sp, #108]
    36cc:	cmp	w0, #0x0
    36d0:	b.eq	36dc <xattr_array_update+0x610>  // b.none
    36d4:	ldrsw	x0, [sp, #108]
    36d8:	b	3868 <xattr_array_update+0x79c>
    36dc:	ldr	x0, [sp, #56]
    36e0:	ldr	x6, [x0, #8]
    36e4:	ldr	x0, [sp, #56]
    36e8:	ldr	x2, [x0, #16]
    36ec:	ldr	x0, [sp, #56]
    36f0:	ldr	w0, [x0, #28]
    36f4:	sxtw	x1, w0
    36f8:	mov	x0, x1
    36fc:	lsl	x0, x0, #1
    3700:	add	x0, x0, x1
    3704:	lsl	x0, x0, #3
    3708:	add	x0, x2, x0
    370c:	ldr	w5, [sp, #16]
    3710:	ldr	x4, [sp, #32]
    3714:	ldr	x3, [sp, #40]
    3718:	ldr	x2, [sp, #48]
    371c:	mov	x1, x0
    3720:	mov	x0, x6
    3724:	bl	2db8 <xattr_update_entry>
    3728:	str	w0, [sp, #108]
    372c:	ldr	w0, [sp, #108]
    3730:	cmp	w0, #0x0
    3734:	b.eq	3740 <xattr_array_update+0x674>  // b.none
    3738:	ldrsw	x0, [sp, #108]
    373c:	b	3868 <xattr_array_update+0x79c>
    3740:	ldr	x0, [sp, #56]
    3744:	ldr	x2, [x0, #16]
    3748:	ldr	x0, [sp, #56]
    374c:	ldr	w0, [x0, #28]
    3750:	sxtw	x1, w0
    3754:	mov	x0, x1
    3758:	lsl	x0, x0, #1
    375c:	add	x0, x0, x1
    3760:	lsl	x0, x0, #3
    3764:	add	x0, x2, x0
    3768:	add	x2, sp, #0x50
    376c:	mov	x3, x0
    3770:	ldp	x0, x1, [x3]
    3774:	stp	x0, x1, [x2]
    3778:	ldr	x0, [x3, #16]
    377c:	str	x0, [x2, #16]
    3780:	ldr	x0, [sp, #56]
    3784:	ldr	x2, [x0, #16]
    3788:	ldrsw	x0, [sp, #116]
    378c:	add	x1, x0, #0x1
    3790:	mov	x0, x1
    3794:	lsl	x0, x0, #1
    3798:	add	x0, x0, x1
    379c:	lsl	x0, x0, #3
    37a0:	add	x3, x2, x0
    37a4:	ldr	x0, [sp, #56]
    37a8:	ldr	x2, [x0, #16]
    37ac:	ldrsw	x1, [sp, #116]
    37b0:	mov	x0, x1
    37b4:	lsl	x0, x0, #1
    37b8:	add	x0, x0, x1
    37bc:	lsl	x0, x0, #3
    37c0:	add	x4, x2, x0
    37c4:	ldr	x0, [sp, #56]
    37c8:	ldr	w1, [x0, #28]
    37cc:	ldr	w0, [sp, #116]
    37d0:	sub	w0, w1, w0
    37d4:	sxtw	x1, w0
    37d8:	mov	x0, x1
    37dc:	lsl	x0, x0, #1
    37e0:	add	x0, x0, x1
    37e4:	lsl	x0, x0, #3
    37e8:	mov	x2, x0
    37ec:	mov	x1, x4
    37f0:	mov	x0, x3
    37f4:	bl	0 <memmove>
    37f8:	ldr	x0, [sp, #56]
    37fc:	ldr	x2, [x0, #16]
    3800:	ldrsw	x1, [sp, #116]
    3804:	mov	x0, x1
    3808:	lsl	x0, x0, #1
    380c:	add	x0, x0, x1
    3810:	lsl	x0, x0, #3
    3814:	add	x0, x2, x0
    3818:	mov	x3, x0
    381c:	add	x2, sp, #0x50
    3820:	ldp	x0, x1, [x2]
    3824:	stp	x0, x1, [x3]
    3828:	ldr	x0, [x2, #16]
    382c:	str	x0, [x3, #16]
    3830:	ldr	w0, [sp, #124]
    3834:	cmp	w0, #0x0
    3838:	b.eq	3850 <xattr_array_update+0x784>  // b.none
    383c:	ldr	x0, [sp, #56]
    3840:	ldr	w0, [x0, #32]
    3844:	add	w1, w0, #0x1
    3848:	ldr	x0, [sp, #56]
    384c:	str	w1, [x0, #32]
    3850:	ldr	x0, [sp, #56]
    3854:	ldr	w0, [x0, #28]
    3858:	add	w1, w0, #0x1
    385c:	ldr	x0, [sp, #56]
    3860:	str	w1, [x0, #28]
    3864:	mov	x0, #0x0                   	// #0
    3868:	ldp	x29, x30, [sp], #128
    386c:	ret

0000000000003870 <space_used>:
    3870:	stp	x29, x30, [sp, #-80]!
    3874:	mov	x29, sp
    3878:	str	x0, [sp, #24]
    387c:	str	w1, [sp, #20]
    3880:	str	wzr, [sp, #76]
    3884:	str	wzr, [sp, #60]
    3888:	ldr	x0, [sp, #24]
    388c:	str	x0, [sp, #64]
    3890:	b	3910 <space_used+0xa0>
    3894:	ldr	x0, [sp, #64]
    3898:	ldr	x0, [x0]
    389c:	add	x2, sp, #0x2c
    38a0:	add	x1, sp, #0x30
    38a4:	bl	94c <find_ea_index>
    38a8:	ldr	x0, [sp, #48]
    38ac:	bl	0 <strlen>
    38b0:	str	w0, [sp, #56]
    38b4:	ldr	w0, [sp, #56]
    38b8:	add	w0, w0, #0x13
    38bc:	and	w1, w0, #0xfffffffc
    38c0:	ldr	w0, [sp, #76]
    38c4:	add	w0, w1, w0
    38c8:	str	w0, [sp, #76]
    38cc:	ldr	x0, [sp, #64]
    38d0:	ldr	w0, [x0, #20]
    38d4:	cmp	w0, #0x0
    38d8:	b.ne	38f8 <space_used+0x88>  // b.any
    38dc:	ldr	x0, [sp, #64]
    38e0:	ldr	w0, [x0, #16]
    38e4:	add	w0, w0, #0x3
    38e8:	and	w1, w0, #0xfffffffc
    38ec:	ldr	w0, [sp, #76]
    38f0:	add	w0, w1, w0
    38f4:	str	w0, [sp, #76]
    38f8:	ldr	w0, [sp, #60]
    38fc:	add	w0, w0, #0x1
    3900:	str	w0, [sp, #60]
    3904:	ldr	x0, [sp, #64]
    3908:	add	x0, x0, #0x18
    390c:	str	x0, [sp, #64]
    3910:	ldr	w1, [sp, #60]
    3914:	ldr	w0, [sp, #20]
    3918:	cmp	w1, w0
    391c:	b.lt	3894 <space_used+0x24>  // b.tstop
    3920:	ldr	w0, [sp, #76]
    3924:	ldp	x29, x30, [sp], #80
    3928:	ret

000000000000392c <ext2fs_xattr_set>:
    392c:	stp	x29, x30, [sp, #-112]!
    3930:	mov	x29, sp
    3934:	str	x0, [sp, #40]
    3938:	str	x1, [sp, #32]
    393c:	str	x2, [sp, #24]
    3940:	str	x3, [sp, #16]
    3944:	ldr	x0, [sp, #40]
    3948:	ldr	x0, [x0, #8]
    394c:	str	x0, [sp, #72]
    3950:	ldr	x0, [sp, #72]
    3954:	ldr	x0, [x0, #32]
    3958:	ldr	w0, [x0, #76]
    395c:	cmp	w0, #0x0
    3960:	b.eq	3974 <ext2fs_xattr_set+0x48>  // b.none
    3964:	ldr	x0, [sp, #72]
    3968:	ldr	x0, [x0, #32]
    396c:	ldrh	w0, [x0, #88]
    3970:	b	3978 <ext2fs_xattr_set+0x4c>
    3974:	mov	w0, #0x80                  	// #128
    3978:	str	w0, [sp, #68]
    397c:	str	xzr, [sp, #56]
    3980:	str	wzr, [sp, #96]
    3984:	mov	w0, #0xffffffff            	// #-1
    3988:	str	w0, [sp, #92]
    398c:	ldr	x0, [sp, #40]
    3990:	ldr	x1, [x0]
    3994:	mov	x0, #0xb7a8                	// #47016
    3998:	movk	x0, #0x7f2b, lsl #16
    399c:	cmp	x1, x0
    39a0:	b.eq	39b0 <ext2fs_xattr_set+0x84>  // b.none
    39a4:	mov	x0, #0xb7a8                	// #47016
    39a8:	movk	x0, #0x7f2b, lsl #16
    39ac:	b	3e60 <ext2fs_xattr_set+0x534>
    39b0:	ldr	x0, [sp, #16]
    39b4:	add	x1, sp, #0x30
    39b8:	bl	0 <ext2fs_get_mem>
    39bc:	str	x0, [sp, #80]
    39c0:	ldr	x0, [sp, #80]
    39c4:	cmp	x0, #0x0
    39c8:	b.eq	39d4 <ext2fs_xattr_set+0xa8>  // b.none
    39cc:	ldr	x0, [sp, #80]
    39d0:	b	3e60 <ext2fs_xattr_set+0x534>
    39d4:	ldr	x0, [sp, #40]
    39d8:	ldr	w0, [x0, #40]
    39dc:	and	w0, w0, #0x1
    39e0:	cmp	w0, #0x0
    39e4:	b.ne	3a4c <ext2fs_xattr_set+0x120>  // b.any
    39e8:	adrp	x0, 0 <EXT2_INODE>
    39ec:	add	x1, x0, #0x0
    39f0:	ldr	x0, [sp, #32]
    39f4:	bl	0 <strcmp>
    39f8:	cmp	w0, #0x0
    39fc:	b.eq	3a18 <ext2fs_xattr_set+0xec>  // b.none
    3a00:	adrp	x0, 0 <EXT2_INODE>
    3a04:	add	x1, x0, #0x0
    3a08:	ldr	x0, [sp, #32]
    3a0c:	bl	0 <strcmp>
    3a10:	cmp	w0, #0x0
    3a14:	b.ne	3a4c <ext2fs_xattr_set+0x120>  // b.any
    3a18:	ldr	x0, [sp, #16]
    3a1c:	ldr	x1, [sp, #48]
    3a20:	add	x2, sp, #0x10
    3a24:	mov	x3, x2
    3a28:	mov	x2, x1
    3a2c:	mov	x1, x0
    3a30:	ldr	x0, [sp, #24]
    3a34:	bl	ea0 <convert_posix_acl_to_disk_buffer>
    3a38:	str	x0, [sp, #80]
    3a3c:	ldr	x0, [sp, #80]
    3a40:	cmp	x0, #0x0
    3a44:	b.eq	3a6c <ext2fs_xattr_set+0x140>  // b.none
    3a48:	b	3e40 <ext2fs_xattr_set+0x514>
    3a4c:	ldr	x0, [sp, #16]
    3a50:	cmp	x0, #0x0
    3a54:	b.eq	3a6c <ext2fs_xattr_set+0x140>  // b.none
    3a58:	ldr	x0, [sp, #48]
    3a5c:	ldr	x1, [sp, #16]
    3a60:	mov	x2, x1
    3a64:	ldr	x1, [sp, #24]
    3a68:	bl	0 <memcpy>
    3a6c:	ldr	x0, [sp, #40]
    3a70:	ldr	x0, [x0, #16]
    3a74:	str	x0, [sp, #104]
    3a78:	b	3b20 <ext2fs_xattr_set+0x1f4>
    3a7c:	ldr	x0, [sp, #104]
    3a80:	ldr	x0, [x0]
    3a84:	ldr	x1, [sp, #32]
    3a88:	bl	0 <strcmp>
    3a8c:	cmp	w0, #0x0
    3a90:	b.ne	3b14 <ext2fs_xattr_set+0x1e8>  // b.any
    3a94:	ldr	x0, [sp, #104]
    3a98:	ldr	w0, [x0, #20]
    3a9c:	cmp	w0, #0x0
    3aa0:	b.ne	3aec <ext2fs_xattr_set+0x1c0>  // b.any
    3aa4:	ldr	x0, [sp, #104]
    3aa8:	ldr	w0, [x0, #16]
    3aac:	mov	w1, w0
    3ab0:	ldr	x0, [sp, #16]
    3ab4:	cmp	x1, x0
    3ab8:	b.ne	3aec <ext2fs_xattr_set+0x1c0>  // b.any
    3abc:	ldr	x0, [sp, #16]
    3ac0:	cmp	x0, #0x0
    3ac4:	b.eq	3ae4 <ext2fs_xattr_set+0x1b8>  // b.none
    3ac8:	ldr	x0, [sp, #104]
    3acc:	ldr	x0, [x0, #8]
    3ad0:	ldr	x1, [sp, #48]
    3ad4:	ldr	x2, [sp, #16]
    3ad8:	bl	0 <memcmp>
    3adc:	cmp	w0, #0x0
    3ae0:	b.ne	3aec <ext2fs_xattr_set+0x1c0>  // b.any
    3ae4:	str	xzr, [sp, #80]
    3ae8:	b	3e40 <ext2fs_xattr_set+0x514>
    3aec:	ldr	x0, [sp, #40]
    3af0:	ldr	x0, [x0, #16]
    3af4:	ldr	x1, [sp, #104]
    3af8:	sub	x0, x1, x0
    3afc:	asr	x1, x0, #3
    3b00:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3b04:	movk	x0, #0xaaab
    3b08:	mul	x0, x1, x0
    3b0c:	str	w0, [sp, #92]
    3b10:	b	3b54 <ext2fs_xattr_set+0x228>
    3b14:	ldr	x0, [sp, #104]
    3b18:	add	x0, x0, #0x18
    3b1c:	str	x0, [sp, #104]
    3b20:	ldr	x0, [sp, #40]
    3b24:	ldr	x2, [x0, #16]
    3b28:	ldr	x0, [sp, #40]
    3b2c:	ldr	w0, [x0, #28]
    3b30:	sxtw	x1, w0
    3b34:	mov	x0, x1
    3b38:	lsl	x0, x0, #1
    3b3c:	add	x0, x0, x1
    3b40:	lsl	x0, x0, #3
    3b44:	add	x0, x2, x0
    3b48:	ldr	x1, [sp, #104]
    3b4c:	cmp	x1, x0
    3b50:	b.cc	3a7c <ext2fs_xattr_set+0x150>  // b.lo, b.ul, b.last
    3b54:	ldrsw	x0, [sp, #68]
    3b58:	add	x1, sp, #0x38
    3b5c:	bl	0 <ext2fs_get_memzero>
    3b60:	str	x0, [sp, #80]
    3b64:	ldr	x0, [sp, #80]
    3b68:	cmp	x0, #0x0
    3b6c:	b.ne	3e2c <ext2fs_xattr_set+0x500>  // b.any
    3b70:	ldr	x0, [sp, #40]
    3b74:	ldr	w0, [x0, #36]
    3b78:	ldr	x1, [sp, #56]
    3b7c:	ldr	w3, [sp, #68]
    3b80:	mov	x2, x1
    3b84:	mov	w1, w0
    3b88:	ldr	x0, [sp, #72]
    3b8c:	bl	0 <ext2fs_read_inode_full>
    3b90:	str	x0, [sp, #80]
    3b94:	ldr	x0, [sp, #80]
    3b98:	cmp	x0, #0x0
    3b9c:	b.ne	3e34 <ext2fs_xattr_set+0x508>  // b.any
    3ba0:	ldr	w0, [sp, #68]
    3ba4:	cmp	w0, #0x80
    3ba8:	b.le	3c40 <ext2fs_xattr_set+0x314>
    3bac:	ldr	x0, [sp, #56]
    3bb0:	ldrh	w0, [x0, #128]
    3bb4:	str	w0, [sp, #88]
    3bb8:	ldr	w0, [sp, #88]
    3bbc:	cmp	w0, #0x0
    3bc0:	b.ne	3be8 <ext2fs_xattr_set+0x2bc>  // b.any
    3bc4:	ldr	x0, [sp, #72]
    3bc8:	ldr	x0, [x0, #32]
    3bcc:	ldrh	w0, [x0, #350]
    3bd0:	str	w0, [sp, #88]
    3bd4:	ldr	w0, [sp, #88]
    3bd8:	cmp	w0, #0x0
    3bdc:	b.ne	3be8 <ext2fs_xattr_set+0x2bc>  // b.any
    3be0:	mov	w0, #0x4                   	// #4
    3be4:	str	w0, [sp, #88]
    3be8:	ldr	w0, [sp, #68]
    3bec:	sub	w0, w0, #0x80
    3bf0:	str	w0, [sp, #100]
    3bf4:	ldr	w1, [sp, #100]
    3bf8:	ldr	w0, [sp, #88]
    3bfc:	sub	w0, w1, w0
    3c00:	str	w0, [sp, #100]
    3c04:	ldr	w0, [sp, #100]
    3c08:	sub	w0, w0, #0x8
    3c0c:	str	w0, [sp, #100]
    3c10:	ldr	x0, [sp, #40]
    3c14:	ldr	x2, [x0, #16]
    3c18:	ldr	x0, [sp, #40]
    3c1c:	ldr	w0, [x0, #32]
    3c20:	mov	w1, w0
    3c24:	mov	x0, x2
    3c28:	bl	3870 <space_used>
    3c2c:	mov	w1, w0
    3c30:	ldr	w0, [sp, #100]
    3c34:	sub	w0, w0, w1
    3c38:	str	w0, [sp, #100]
    3c3c:	b	3c44 <ext2fs_xattr_set+0x318>
    3c40:	str	wzr, [sp, #100]
    3c44:	adrp	x0, 0 <EXT2_INODE>
    3c48:	add	x1, x0, #0x0
    3c4c:	ldr	x0, [sp, #32]
    3c50:	bl	0 <strcmp>
    3c54:	cmp	w0, #0x0
    3c58:	b.ne	3cc0 <ext2fs_xattr_set+0x394>  // b.any
    3c5c:	ldr	x0, [sp, #40]
    3c60:	ldr	w0, [x0, #32]
    3c64:	ldr	w1, [sp, #92]
    3c68:	cmp	w1, w0
    3c6c:	b.lt	3c80 <ext2fs_xattr_set+0x354>  // b.tstop
    3c70:	mov	x0, #0xb7ae                	// #47022
    3c74:	movk	x0, #0x7f2b, lsl #16
    3c78:	str	x0, [sp, #80]
    3c7c:	b	3e40 <ext2fs_xattr_set+0x514>
    3c80:	ldr	x0, [sp, #48]
    3c84:	ldr	x1, [sp, #16]
    3c88:	mov	w7, #0x0                   	// #0
    3c8c:	ldr	w6, [sp, #92]
    3c90:	mov	w5, #0x0                   	// #0
    3c94:	ldr	w4, [sp, #100]
    3c98:	mov	x3, x1
    3c9c:	mov	x2, x0
    3ca0:	ldr	x1, [sp, #32]
    3ca4:	ldr	x0, [sp, #40]
    3ca8:	bl	30cc <xattr_array_update>
    3cac:	str	x0, [sp, #80]
    3cb0:	ldr	x0, [sp, #80]
    3cb4:	cmp	x0, #0x0
    3cb8:	b.eq	3e18 <ext2fs_xattr_set+0x4ec>  // b.none
    3cbc:	b	3e40 <ext2fs_xattr_set+0x514>
    3cc0:	ldr	x0, [sp, #72]
    3cc4:	ldr	w0, [x0, #40]
    3cc8:	str	w0, [sp, #64]
    3ccc:	ldr	w0, [sp, #64]
    3cd0:	sub	w0, w0, #0x20
    3cd4:	str	w0, [sp, #64]
    3cd8:	ldr	w0, [sp, #64]
    3cdc:	sub	w0, w0, #0x4
    3ce0:	str	w0, [sp, #64]
    3ce4:	ldr	x0, [sp, #40]
    3ce8:	ldr	x2, [x0, #16]
    3cec:	ldr	x0, [sp, #40]
    3cf0:	ldr	w0, [x0, #32]
    3cf4:	sxtw	x1, w0
    3cf8:	mov	x0, x1
    3cfc:	lsl	x0, x0, #1
    3d00:	add	x0, x0, x1
    3d04:	lsl	x0, x0, #3
    3d08:	add	x2, x2, x0
    3d0c:	ldr	x0, [sp, #40]
    3d10:	ldr	w1, [x0, #28]
    3d14:	ldr	x0, [sp, #40]
    3d18:	ldr	w0, [x0, #32]
    3d1c:	sub	w0, w1, w0
    3d20:	mov	w1, w0
    3d24:	mov	x0, x2
    3d28:	bl	3870 <space_used>
    3d2c:	mov	w1, w0
    3d30:	ldr	w0, [sp, #64]
    3d34:	sub	w0, w0, w1
    3d38:	str	w0, [sp, #64]
    3d3c:	ldr	x0, [sp, #72]
    3d40:	ldr	x0, [x0, #32]
    3d44:	bl	64 <ext2fs_has_feature_ea_inode>
    3d48:	cmp	w0, #0x0
    3d4c:	b.eq	3d74 <ext2fs_xattr_set+0x448>  // b.none
    3d50:	ldr	x0, [sp, #72]
    3d54:	ldr	w0, [x0, #40]
    3d58:	mov	w0, w0
    3d5c:	sub	x1, x0, #0x38
    3d60:	ldr	x0, [sp, #16]
    3d64:	cmp	x1, x0
    3d68:	b.cs	3d74 <ext2fs_xattr_set+0x448>  // b.hs, b.nlast
    3d6c:	mov	w0, #0x1                   	// #1
    3d70:	str	w0, [sp, #96]
    3d74:	ldr	x0, [sp, #48]
    3d78:	ldr	x1, [sp, #16]
    3d7c:	ldr	w7, [sp, #96]
    3d80:	ldr	w6, [sp, #92]
    3d84:	ldr	w5, [sp, #64]
    3d88:	ldr	w4, [sp, #100]
    3d8c:	mov	x3, x1
    3d90:	mov	x2, x0
    3d94:	ldr	x1, [sp, #32]
    3d98:	ldr	x0, [sp, #40]
    3d9c:	bl	30cc <xattr_array_update>
    3da0:	str	x0, [sp, #80]
    3da4:	ldr	x1, [sp, #80]
    3da8:	mov	x0, #0xb7a3                	// #47011
    3dac:	movk	x0, #0x7f2b, lsl #16
    3db0:	cmp	x1, x0
    3db4:	b.ne	3e08 <ext2fs_xattr_set+0x4dc>  // b.any
    3db8:	ldr	w0, [sp, #96]
    3dbc:	cmp	w0, #0x0
    3dc0:	b.ne	3e08 <ext2fs_xattr_set+0x4dc>  // b.any
    3dc4:	ldr	x0, [sp, #72]
    3dc8:	ldr	x0, [x0, #32]
    3dcc:	bl	64 <ext2fs_has_feature_ea_inode>
    3dd0:	cmp	w0, #0x0
    3dd4:	b.eq	3e08 <ext2fs_xattr_set+0x4dc>  // b.none
    3dd8:	ldr	x0, [sp, #48]
    3ddc:	ldr	x1, [sp, #16]
    3de0:	mov	w7, #0x1                   	// #1
    3de4:	ldr	w6, [sp, #92]
    3de8:	ldr	w5, [sp, #64]
    3dec:	ldr	w4, [sp, #100]
    3df0:	mov	x3, x1
    3df4:	mov	x2, x0
    3df8:	ldr	x1, [sp, #32]
    3dfc:	ldr	x0, [sp, #40]
    3e00:	bl	30cc <xattr_array_update>
    3e04:	str	x0, [sp, #80]
    3e08:	ldr	x0, [sp, #80]
    3e0c:	cmp	x0, #0x0
    3e10:	b.ne	3e3c <ext2fs_xattr_set+0x510>  // b.any
    3e14:	b	3e1c <ext2fs_xattr_set+0x4f0>
    3e18:	nop
    3e1c:	ldr	x0, [sp, #40]
    3e20:	bl	14d0 <ext2fs_xattrs_write>
    3e24:	str	x0, [sp, #80]
    3e28:	b	3e40 <ext2fs_xattr_set+0x514>
    3e2c:	nop
    3e30:	b	3e40 <ext2fs_xattr_set+0x514>
    3e34:	nop
    3e38:	b	3e40 <ext2fs_xattr_set+0x514>
    3e3c:	nop
    3e40:	ldr	x0, [sp, #56]
    3e44:	cmp	x0, #0x0
    3e48:	b.eq	3e54 <ext2fs_xattr_set+0x528>  // b.none
    3e4c:	add	x0, sp, #0x38
    3e50:	bl	0 <ext2fs_free_mem>
    3e54:	add	x0, sp, #0x30
    3e58:	bl	0 <ext2fs_free_mem>
    3e5c:	ldr	x0, [sp, #80]
    3e60:	ldp	x29, x30, [sp], #112
    3e64:	ret

0000000000003e68 <ext2fs_xattr_remove>:
    3e68:	stp	x29, x30, [sp, #-48]!
    3e6c:	mov	x29, sp
    3e70:	str	x0, [sp, #24]
    3e74:	str	x1, [sp, #16]
    3e78:	ldr	x0, [sp, #24]
    3e7c:	ldr	x2, [x0, #16]
    3e80:	ldr	x0, [sp, #24]
    3e84:	ldr	w0, [x0, #28]
    3e88:	sxtw	x1, w0
    3e8c:	mov	x0, x1
    3e90:	lsl	x0, x0, #1
    3e94:	add	x0, x0, x1
    3e98:	lsl	x0, x0, #3
    3e9c:	add	x0, x2, x0
    3ea0:	str	x0, [sp, #32]
    3ea4:	ldr	x0, [sp, #24]
    3ea8:	ldr	x1, [x0]
    3eac:	mov	x0, #0xb7a8                	// #47016
    3eb0:	movk	x0, #0x7f2b, lsl #16
    3eb4:	cmp	x1, x0
    3eb8:	b.eq	3ec8 <ext2fs_xattr_remove+0x60>  // b.none
    3ebc:	mov	x0, #0xb7a8                	// #47016
    3ec0:	movk	x0, #0x7f2b, lsl #16
    3ec4:	b	3ff4 <ext2fs_xattr_remove+0x18c>
    3ec8:	ldr	x0, [sp, #24]
    3ecc:	ldr	x0, [x0, #16]
    3ed0:	str	x0, [sp, #40]
    3ed4:	b	3fe0 <ext2fs_xattr_remove+0x178>
    3ed8:	ldr	x0, [sp, #40]
    3edc:	ldr	x0, [x0]
    3ee0:	ldr	x1, [sp, #16]
    3ee4:	bl	0 <strcmp>
    3ee8:	cmp	w0, #0x0
    3eec:	b.ne	3fd4 <ext2fs_xattr_remove+0x16c>  // b.any
    3ef0:	ldr	x0, [sp, #40]
    3ef4:	bl	0 <ext2fs_free_mem>
    3ef8:	ldr	x0, [sp, #40]
    3efc:	add	x0, x0, #0x8
    3f00:	bl	0 <ext2fs_free_mem>
    3f04:	ldr	x0, [sp, #40]
    3f08:	ldr	w0, [x0, #20]
    3f0c:	cmp	w0, #0x0
    3f10:	b.eq	3f30 <ext2fs_xattr_remove+0xc8>  // b.none
    3f14:	ldr	x0, [sp, #24]
    3f18:	ldr	x2, [x0, #8]
    3f1c:	ldr	x0, [sp, #40]
    3f20:	ldr	w0, [x0, #20]
    3f24:	mov	w1, w0
    3f28:	mov	x0, x2
    3f2c:	bl	2c54 <xattr_inode_dec_ref>
    3f30:	ldr	x0, [sp, #40]
    3f34:	add	x3, x0, #0x18
    3f38:	ldr	x1, [sp, #32]
    3f3c:	ldr	x0, [sp, #40]
    3f40:	sub	x0, x1, x0
    3f44:	sub	x0, x0, #0x18
    3f48:	mov	x2, x0
    3f4c:	mov	x1, x3
    3f50:	ldr	x0, [sp, #40]
    3f54:	bl	0 <memmove>
    3f58:	ldr	x0, [sp, #32]
    3f5c:	sub	x0, x0, #0x18
    3f60:	mov	x2, #0x18                  	// #24
    3f64:	mov	w1, #0x0                   	// #0
    3f68:	bl	0 <memset>
    3f6c:	ldr	x0, [sp, #24]
    3f70:	ldr	x2, [x0, #16]
    3f74:	ldr	x0, [sp, #24]
    3f78:	ldr	w0, [x0, #32]
    3f7c:	sxtw	x1, w0
    3f80:	mov	x0, x1
    3f84:	lsl	x0, x0, #1
    3f88:	add	x0, x0, x1
    3f8c:	lsl	x0, x0, #3
    3f90:	add	x0, x2, x0
    3f94:	ldr	x1, [sp, #40]
    3f98:	cmp	x1, x0
    3f9c:	b.cs	3fb4 <ext2fs_xattr_remove+0x14c>  // b.hs, b.nlast
    3fa0:	ldr	x0, [sp, #24]
    3fa4:	ldr	w0, [x0, #32]
    3fa8:	sub	w1, w0, #0x1
    3fac:	ldr	x0, [sp, #24]
    3fb0:	str	w1, [x0, #32]
    3fb4:	ldr	x0, [sp, #24]
    3fb8:	ldr	w0, [x0, #28]
    3fbc:	sub	w1, w0, #0x1
    3fc0:	ldr	x0, [sp, #24]
    3fc4:	str	w1, [x0, #28]
    3fc8:	ldr	x0, [sp, #24]
    3fcc:	bl	14d0 <ext2fs_xattrs_write>
    3fd0:	b	3ff4 <ext2fs_xattr_remove+0x18c>
    3fd4:	ldr	x0, [sp, #40]
    3fd8:	add	x0, x0, #0x18
    3fdc:	str	x0, [sp, #40]
    3fe0:	ldr	x1, [sp, #40]
    3fe4:	ldr	x0, [sp, #32]
    3fe8:	cmp	x1, x0
    3fec:	b.cc	3ed8 <ext2fs_xattr_remove+0x70>  // b.lo, b.ul, b.last
    3ff0:	mov	x0, #0x0                   	// #0
    3ff4:	ldp	x29, x30, [sp], #48
    3ff8:	ret

0000000000003ffc <ext2fs_xattrs_open>:
    3ffc:	stp	x29, x30, [sp, #-64]!
    4000:	mov	x29, sp
    4004:	str	x0, [sp, #40]
    4008:	str	w1, [sp, #36]
    400c:	str	x2, [sp, #24]
    4010:	ldr	x0, [sp, #40]
    4014:	ldr	x0, [x0, #32]
    4018:	bl	14 <ext2fs_has_feature_xattr>
    401c:	cmp	w0, #0x0
    4020:	b.ne	4044 <ext2fs_xattrs_open+0x48>  // b.any
    4024:	ldr	x0, [sp, #40]
    4028:	ldr	x0, [x0, #32]
    402c:	bl	8c <ext2fs_has_feature_inline_data>
    4030:	cmp	w0, #0x0
    4034:	b.ne	4044 <ext2fs_xattrs_open+0x48>  // b.any
    4038:	mov	x0, #0xb7a4                	// #47012
    403c:	movk	x0, #0x7f2b, lsl #16
    4040:	b	40fc <ext2fs_xattrs_open+0x100>
    4044:	add	x0, sp, #0x30
    4048:	mov	x1, x0
    404c:	mov	x0, #0x30                  	// #48
    4050:	bl	0 <ext2fs_get_memzero>
    4054:	str	x0, [sp, #56]
    4058:	ldr	x0, [sp, #56]
    405c:	cmp	x0, #0x0
    4060:	b.eq	406c <ext2fs_xattrs_open+0x70>  // b.none
    4064:	ldr	x0, [sp, #56]
    4068:	b	40fc <ext2fs_xattrs_open+0x100>
    406c:	ldr	x0, [sp, #48]
    4070:	mov	x1, #0xb7a8                	// #47016
    4074:	movk	x1, #0x7f2b, lsl #16
    4078:	str	x1, [x0]
    407c:	ldr	x0, [sp, #48]
    4080:	mov	w1, #0x4                   	// #4
    4084:	str	w1, [x0, #24]
    4088:	ldr	x0, [sp, #48]
    408c:	ldr	w0, [x0, #24]
    4090:	sxtw	x3, w0
    4094:	ldr	x0, [sp, #48]
    4098:	add	x0, x0, #0x10
    409c:	mov	x2, x0
    40a0:	mov	x1, #0x18                  	// #24
    40a4:	mov	x0, x3
    40a8:	bl	0 <ext2fs_get_arrayzero>
    40ac:	str	x0, [sp, #56]
    40b0:	ldr	x0, [sp, #56]
    40b4:	cmp	x0, #0x0
    40b8:	b.eq	40cc <ext2fs_xattrs_open+0xd0>  // b.none
    40bc:	add	x0, sp, #0x30
    40c0:	bl	0 <ext2fs_free_mem>
    40c4:	ldr	x0, [sp, #56]
    40c8:	b	40fc <ext2fs_xattrs_open+0x100>
    40cc:	ldr	x0, [sp, #48]
    40d0:	str	wzr, [x0, #28]
    40d4:	ldr	x0, [sp, #48]
    40d8:	ldr	w1, [sp, #36]
    40dc:	str	w1, [x0, #36]
    40e0:	ldr	x0, [sp, #48]
    40e4:	ldr	x1, [sp, #40]
    40e8:	str	x1, [x0, #8]
    40ec:	ldr	x1, [sp, #48]
    40f0:	ldr	x0, [sp, #24]
    40f4:	str	x1, [x0]
    40f8:	mov	x0, #0x0                   	// #0
    40fc:	ldp	x29, x30, [sp], #64
    4100:	ret

0000000000004104 <ext2fs_xattrs_close>:
    4104:	stp	x29, x30, [sp, #-48]!
    4108:	mov	x29, sp
    410c:	str	x0, [sp, #24]
    4110:	ldr	x0, [sp, #24]
    4114:	ldr	x0, [x0]
    4118:	str	x0, [sp, #40]
    411c:	ldr	x0, [sp, #40]
    4120:	ldr	x1, [x0]
    4124:	mov	x0, #0xb7a8                	// #47016
    4128:	movk	x0, #0x7f2b, lsl #16
    412c:	cmp	x1, x0
    4130:	b.eq	4140 <ext2fs_xattrs_close+0x3c>  // b.none
    4134:	mov	x0, #0xb7a8                	// #47016
    4138:	movk	x0, #0x7f2b, lsl #16
    413c:	b	4160 <ext2fs_xattrs_close+0x5c>
    4140:	ldr	x0, [sp, #40]
    4144:	bl	2034 <xattrs_free_keys>
    4148:	ldr	x0, [sp, #40]
    414c:	add	x0, x0, #0x10
    4150:	bl	0 <ext2fs_free_mem>
    4154:	ldr	x0, [sp, #24]
    4158:	bl	0 <ext2fs_free_mem>
    415c:	mov	x0, #0x0                   	// #0
    4160:	ldp	x29, x30, [sp], #48
    4164:	ret

0000000000004168 <ext2fs_xattrs_count>:
    4168:	sub	sp, sp, #0x10
    416c:	str	x0, [sp, #8]
    4170:	str	x1, [sp]
    4174:	ldr	x0, [sp, #8]
    4178:	ldr	x1, [x0]
    417c:	mov	x0, #0xb7a8                	// #47016
    4180:	movk	x0, #0x7f2b, lsl #16
    4184:	cmp	x1, x0
    4188:	b.eq	4198 <ext2fs_xattrs_count+0x30>  // b.none
    418c:	mov	x0, #0xb7a8                	// #47016
    4190:	movk	x0, #0x7f2b, lsl #16
    4194:	b	41b0 <ext2fs_xattrs_count+0x48>
    4198:	ldr	x0, [sp, #8]
    419c:	ldr	w0, [x0, #28]
    41a0:	sxtw	x1, w0
    41a4:	ldr	x0, [sp]
    41a8:	str	x1, [x0]
    41ac:	mov	x0, #0x0                   	// #0
    41b0:	add	sp, sp, #0x10
    41b4:	ret

00000000000041b8 <ext2fs_xattrs_flags>:
    41b8:	sub	sp, sp, #0x20
    41bc:	str	x0, [sp, #24]
    41c0:	str	x1, [sp, #16]
    41c4:	str	x2, [sp, #8]
    41c8:	ldr	x0, [sp, #24]
    41cc:	ldr	x1, [x0]
    41d0:	mov	x0, #0xb7a8                	// #47016
    41d4:	movk	x0, #0x7f2b, lsl #16
    41d8:	cmp	x1, x0
    41dc:	b.eq	41ec <ext2fs_xattrs_flags+0x34>  // b.none
    41e0:	mov	x0, #0xb7a8                	// #47016
    41e4:	movk	x0, #0x7f2b, lsl #16
    41e8:	b	4228 <ext2fs_xattrs_flags+0x70>
    41ec:	ldr	x0, [sp, #8]
    41f0:	cmp	x0, #0x0
    41f4:	b.eq	4208 <ext2fs_xattrs_flags+0x50>  // b.none
    41f8:	ldr	x0, [sp, #24]
    41fc:	ldr	w1, [x0, #40]
    4200:	ldr	x0, [sp, #8]
    4204:	str	w1, [x0]
    4208:	ldr	x0, [sp, #16]
    420c:	cmp	x0, #0x0
    4210:	b.eq	4224 <ext2fs_xattrs_flags+0x6c>  // b.none
    4214:	ldr	x0, [sp, #16]
    4218:	ldr	w1, [x0]
    421c:	ldr	x0, [sp, #24]
    4220:	str	w1, [x0, #40]
    4224:	mov	x0, #0x0                   	// #0
    4228:	add	sp, sp, #0x20
    422c:	ret

extent.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_metadata_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x400
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_extent_header_verify>:
      28:	sub	sp, sp, #0x30
      2c:	str	x0, [sp, #8]
      30:	str	w1, [sp, #4]
      34:	ldr	x0, [sp, #8]
      38:	str	x0, [sp, #32]
      3c:	ldr	x0, [sp, #32]
      40:	ldrh	w1, [x0]
      44:	mov	w0, #0xf30a                	// #62218
      48:	cmp	w1, w0
      4c:	b.eq	5c <ext2fs_extent_header_verify+0x34>  // b.none
      50:	mov	x0, #0xb777                	// #46967
      54:	movk	x0, #0x7f2b, lsl #16
      58:	b	fc <ext2fs_extent_header_verify+0xd4>
      5c:	ldr	x0, [sp, #32]
      60:	ldrh	w1, [x0, #2]
      64:	ldr	x0, [sp, #32]
      68:	ldrh	w0, [x0, #4]
      6c:	cmp	w1, w0
      70:	b.ls	80 <ext2fs_extent_header_verify+0x58>  // b.plast
      74:	mov	x0, #0xb777                	// #46967
      78:	movk	x0, #0x7f2b, lsl #16
      7c:	b	fc <ext2fs_extent_header_verify+0xd4>
      80:	ldr	x0, [sp, #32]
      84:	ldrh	w0, [x0, #6]
      88:	cmp	w0, #0x0
      8c:	b.ne	9c <ext2fs_extent_header_verify+0x74>  // b.any
      90:	mov	w0, #0xc                   	// #12
      94:	str	w0, [sp, #44]
      98:	b	a4 <ext2fs_extent_header_verify+0x7c>
      9c:	mov	w0, #0xc                   	// #12
      a0:	str	w0, [sp, #44]
      a4:	ldrsw	x0, [sp, #4]
      a8:	sub	x1, x0, #0xc
      ac:	ldrsw	x0, [sp, #44]
      b0:	udiv	x0, x1, x0
      b4:	str	w0, [sp, #28]
      b8:	ldr	x0, [sp, #32]
      bc:	ldrh	w0, [x0, #4]
      c0:	mov	w1, w0
      c4:	ldr	w0, [sp, #28]
      c8:	cmp	w0, w1
      cc:	b.lt	ec <ext2fs_extent_header_verify+0xc4>  // b.tstop
      d0:	ldr	x0, [sp, #32]
      d4:	ldrh	w0, [x0, #4]
      d8:	mov	w1, w0
      dc:	ldr	w0, [sp, #28]
      e0:	sub	w0, w0, #0x2
      e4:	cmp	w1, w0
      e8:	b.ge	f8 <ext2fs_extent_header_verify+0xd0>  // b.tcont
      ec:	mov	x0, #0xb777                	// #46967
      f0:	movk	x0, #0x7f2b, lsl #16
      f4:	b	fc <ext2fs_extent_header_verify+0xd4>
      f8:	mov	x0, #0x0                   	// #0
      fc:	add	sp, sp, #0x30
     100:	ret

0000000000000104 <ext2fs_extent_free>:
     104:	stp	x29, x30, [sp, #-48]!
     108:	mov	x29, sp
     10c:	str	x0, [sp, #24]
     110:	ldr	x0, [sp, #24]
     114:	cmp	x0, #0x0
     118:	b.eq	1c0 <ext2fs_extent_free+0xbc>  // b.none
     11c:	ldr	x0, [sp, #24]
     120:	ldr	x0, [x0, #176]
     124:	cmp	x0, #0x0
     128:	b.eq	1b4 <ext2fs_extent_free+0xb0>  // b.none
     12c:	mov	w0, #0x1                   	// #1
     130:	str	w0, [sp, #44]
     134:	b	194 <ext2fs_extent_free+0x90>
     138:	ldr	x0, [sp, #24]
     13c:	ldr	x2, [x0, #176]
     140:	ldrsw	x1, [sp, #44]
     144:	mov	x0, x1
     148:	lsl	x0, x0, #1
     14c:	add	x0, x0, x1
     150:	lsl	x0, x0, #4
     154:	add	x0, x2, x0
     158:	ldr	x0, [x0]
     15c:	cmp	x0, #0x0
     160:	b.eq	188 <ext2fs_extent_free+0x84>  // b.none
     164:	ldr	x0, [sp, #24]
     168:	ldr	x2, [x0, #176]
     16c:	ldrsw	x1, [sp, #44]
     170:	mov	x0, x1
     174:	lsl	x0, x0, #1
     178:	add	x0, x0, x1
     17c:	lsl	x0, x0, #4
     180:	add	x0, x2, x0
     184:	bl	0 <ext2fs_free_mem>
     188:	ldr	w0, [sp, #44]
     18c:	add	w0, w0, #0x1
     190:	str	w0, [sp, #44]
     194:	ldr	x0, [sp, #24]
     198:	ldr	w0, [x0, #172]
     19c:	ldr	w1, [sp, #44]
     1a0:	cmp	w1, w0
     1a4:	b.lt	138 <ext2fs_extent_free+0x34>  // b.tstop
     1a8:	ldr	x0, [sp, #24]
     1ac:	add	x0, x0, #0xb0
     1b0:	bl	0 <ext2fs_free_mem>
     1b4:	add	x0, sp, #0x18
     1b8:	bl	0 <ext2fs_free_mem>
     1bc:	b	1c4 <ext2fs_extent_free+0xc0>
     1c0:	nop
     1c4:	ldp	x29, x30, [sp], #48
     1c8:	ret

00000000000001cc <ext2fs_extent_open>:
     1cc:	stp	x29, x30, [sp, #-48]!
     1d0:	mov	x29, sp
     1d4:	str	x0, [sp, #40]
     1d8:	str	w1, [sp, #36]
     1dc:	str	x2, [sp, #24]
     1e0:	ldr	x3, [sp, #24]
     1e4:	mov	x2, #0x0                   	// #0
     1e8:	ldr	w1, [sp, #36]
     1ec:	ldr	x0, [sp, #40]
     1f0:	bl	1fc <ext2fs_extent_open2>
     1f4:	ldp	x29, x30, [sp], #48
     1f8:	ret

00000000000001fc <ext2fs_extent_open2>:
     1fc:	stp	x29, x30, [sp, #-80]!
     200:	mov	x29, sp
     204:	str	x0, [sp, #40]
     208:	str	w1, [sp, #36]
     20c:	str	x2, [sp, #24]
     210:	str	x3, [sp, #16]
     214:	ldr	x0, [sp, #40]
     218:	ldr	x1, [x0]
     21c:	mov	x0, #0xb701                	// #46849
     220:	movk	x0, #0x7f2b, lsl #16
     224:	cmp	x1, x0
     228:	b.eq	238 <ext2fs_extent_open2+0x3c>  // b.none
     22c:	mov	x0, #0xb701                	// #46849
     230:	movk	x0, #0x7f2b, lsl #16
     234:	b	58c <ext2fs_extent_open2+0x390>
     238:	ldr	x0, [sp, #24]
     23c:	cmp	x0, #0x0
     240:	b.ne	274 <ext2fs_extent_open2+0x78>  // b.any
     244:	ldr	w0, [sp, #36]
     248:	cmp	w0, #0x0
     24c:	b.eq	268 <ext2fs_extent_open2+0x6c>  // b.none
     250:	ldr	x0, [sp, #40]
     254:	ldr	x0, [x0, #32]
     258:	ldr	w0, [x0]
     25c:	ldr	w1, [sp, #36]
     260:	cmp	w1, w0
     264:	b.ls	274 <ext2fs_extent_open2+0x78>  // b.plast
     268:	mov	x0, #0xb729                	// #46889
     26c:	movk	x0, #0x7f2b, lsl #16
     270:	b	58c <ext2fs_extent_open2+0x390>
     274:	add	x0, sp, #0x30
     278:	mov	x1, x0
     27c:	mov	x0, #0xb8                  	// #184
     280:	bl	0 <ext2fs_get_mem>
     284:	str	x0, [sp, #72]
     288:	ldr	x0, [sp, #72]
     28c:	cmp	x0, #0x0
     290:	b.eq	29c <ext2fs_extent_open2+0xa0>  // b.none
     294:	ldr	x0, [sp, #72]
     298:	b	58c <ext2fs_extent_open2+0x390>
     29c:	ldr	x0, [sp, #48]
     2a0:	mov	x2, #0xb8                  	// #184
     2a4:	mov	w1, #0x0                   	// #0
     2a8:	bl	0 <memset>
     2ac:	ldr	x0, [sp, #48]
     2b0:	ldr	w1, [sp, #36]
     2b4:	str	w1, [x0, #16]
     2b8:	ldr	x0, [sp, #48]
     2bc:	ldr	x1, [sp, #40]
     2c0:	str	x1, [x0, #8]
     2c4:	ldr	x0, [sp, #24]
     2c8:	cmp	x0, #0x0
     2cc:	b.eq	2e0 <ext2fs_extent_open2+0xe4>  // b.none
     2d0:	ldr	x0, [sp, #48]
     2d4:	ldr	x1, [sp, #24]
     2d8:	str	x1, [x0, #24]
     2dc:	b	318 <ext2fs_extent_open2+0x11c>
     2e0:	ldr	x1, [sp, #48]
     2e4:	ldr	x0, [sp, #48]
     2e8:	add	x1, x1, #0x20
     2ec:	str	x1, [x0, #24]
     2f0:	ldr	x0, [sp, #48]
     2f4:	ldr	x0, [x0, #24]
     2f8:	mov	x2, x0
     2fc:	ldr	w1, [sp, #36]
     300:	ldr	x0, [sp, #40]
     304:	bl	0 <ext2fs_read_inode>
     308:	str	x0, [sp, #72]
     30c:	ldr	x0, [sp, #72]
     310:	cmp	x0, #0x0
     314:	b.ne	574 <ext2fs_extent_open2+0x378>  // b.any
     318:	ldr	x0, [sp, #48]
     31c:	ldr	x0, [x0, #24]
     320:	add	x0, x0, #0x28
     324:	str	x0, [sp, #56]
     328:	str	wzr, [sp, #68]
     32c:	b	360 <ext2fs_extent_open2+0x164>
     330:	ldr	x0, [sp, #48]
     334:	ldr	x1, [x0, #24]
     338:	ldrsw	x0, [sp, #68]
     33c:	add	x0, x0, #0x8
     340:	lsl	x0, x0, #2
     344:	add	x0, x1, x0
     348:	ldr	w0, [x0, #8]
     34c:	cmp	w0, #0x0
     350:	b.ne	370 <ext2fs_extent_open2+0x174>  // b.any
     354:	ldr	w0, [sp, #68]
     358:	add	w0, w0, #0x1
     35c:	str	w0, [sp, #68]
     360:	ldr	w0, [sp, #68]
     364:	cmp	w0, #0xe
     368:	b.le	330 <ext2fs_extent_open2+0x134>
     36c:	b	374 <ext2fs_extent_open2+0x178>
     370:	nop
     374:	ldr	w0, [sp, #68]
     378:	cmp	w0, #0xe
     37c:	b.le	3d0 <ext2fs_extent_open2+0x1d4>
     380:	ldr	x0, [sp, #56]
     384:	mov	w1, #0xfffff30a            	// #-3318
     388:	strh	w1, [x0]
     38c:	ldr	x0, [sp, #56]
     390:	strh	wzr, [x0, #6]
     394:	ldr	x0, [sp, #56]
     398:	strh	wzr, [x0, #2]
     39c:	mov	w0, #0x4                   	// #4
     3a0:	str	w0, [sp, #68]
     3a4:	ldr	w0, [sp, #68]
     3a8:	and	w1, w0, #0xffff
     3ac:	ldr	x0, [sp, #56]
     3b0:	strh	w1, [x0, #4]
     3b4:	ldr	x0, [sp, #48]
     3b8:	ldr	x0, [x0, #24]
     3bc:	ldr	w1, [x0, #32]
     3c0:	ldr	x0, [sp, #48]
     3c4:	ldr	x0, [x0, #24]
     3c8:	orr	w1, w1, #0x80000
     3cc:	str	w1, [x0, #32]
     3d0:	ldr	x0, [sp, #48]
     3d4:	ldr	x0, [x0, #24]
     3d8:	ldr	w0, [x0, #32]
     3dc:	and	w0, w0, #0x80000
     3e0:	cmp	w0, #0x0
     3e4:	b.ne	3f8 <ext2fs_extent_open2+0x1fc>  // b.any
     3e8:	mov	x0, #0xb77b                	// #46971
     3ec:	movk	x0, #0x7f2b, lsl #16
     3f0:	str	x0, [sp, #72]
     3f4:	b	580 <ext2fs_extent_open2+0x384>
     3f8:	mov	w1, #0x3c                  	// #60
     3fc:	ldr	x0, [sp, #56]
     400:	bl	28 <ext2fs_extent_header_verify>
     404:	str	x0, [sp, #72]
     408:	ldr	x0, [sp, #72]
     40c:	cmp	x0, #0x0
     410:	b.ne	57c <ext2fs_extent_open2+0x380>  // b.any
     414:	ldr	x0, [sp, #56]
     418:	ldrh	w1, [x0, #6]
     41c:	ldr	x0, [sp, #48]
     420:	str	w1, [x0, #168]
     424:	ldr	x0, [sp, #56]
     428:	ldrh	w1, [x0]
     42c:	ldr	x0, [sp, #48]
     430:	str	w1, [x0, #160]
     434:	ldr	x0, [sp, #48]
     438:	ldr	w1, [x0, #168]
     43c:	ldr	x0, [sp, #48]
     440:	add	w1, w1, #0x1
     444:	str	w1, [x0, #172]
     448:	ldr	x0, [sp, #48]
     44c:	ldr	w0, [x0, #172]
     450:	sxtw	x1, w0
     454:	mov	x0, x1
     458:	lsl	x0, x0, #1
     45c:	add	x0, x0, x1
     460:	lsl	x0, x0, #4
     464:	mov	x2, x0
     468:	ldr	x0, [sp, #48]
     46c:	add	x0, x0, #0xb0
     470:	mov	x1, x0
     474:	mov	x0, x2
     478:	bl	0 <ext2fs_get_memzero>
     47c:	str	x0, [sp, #72]
     480:	ldr	x0, [sp, #48]
     484:	ldr	x1, [x0, #24]
     488:	ldr	x0, [sp, #48]
     48c:	ldr	x0, [x0, #176]
     490:	add	x1, x1, #0x28
     494:	str	x1, [x0]
     498:	ldr	x0, [sp, #56]
     49c:	ldrh	w1, [x0, #2]
     4a0:	ldr	x0, [sp, #48]
     4a4:	ldr	x0, [x0, #176]
     4a8:	str	w1, [x0, #8]
     4ac:	ldr	x1, [sp, #48]
     4b0:	ldr	x1, [x1, #176]
     4b4:	ldr	w0, [x0, #8]
     4b8:	str	w0, [x1, #16]
     4bc:	ldr	x0, [sp, #56]
     4c0:	ldrh	w1, [x0, #4]
     4c4:	ldr	x0, [sp, #48]
     4c8:	ldr	x0, [x0, #176]
     4cc:	str	w1, [x0, #12]
     4d0:	ldr	x0, [sp, #48]
     4d4:	ldr	x0, [x0, #176]
     4d8:	str	xzr, [x0, #40]
     4dc:	ldr	x0, [sp, #48]
     4e0:	ldr	x0, [x0, #24]
     4e4:	ldr	w0, [x0, #4]
     4e8:	mov	w1, w0
     4ec:	ldr	x0, [sp, #48]
     4f0:	ldr	x0, [x0, #24]
     4f4:	ldr	w0, [x0, #108]
     4f8:	mov	w0, w0
     4fc:	lsl	x0, x0, #32
     500:	orr	x1, x1, x0
     504:	ldr	x0, [sp, #40]
     508:	ldr	w0, [x0, #40]
     50c:	mov	w0, w0
     510:	add	x0, x1, x0
     514:	sub	x2, x0, #0x1
     518:	ldr	x0, [sp, #40]
     51c:	ldr	x0, [x0, #32]
     520:	ldr	w0, [x0, #24]
     524:	add	w1, w0, #0xa
     528:	ldr	x0, [sp, #48]
     52c:	ldr	x0, [x0, #176]
     530:	lsr	x1, x2, x1
     534:	str	x1, [x0, #32]
     538:	ldr	x0, [sp, #48]
     53c:	ldr	x0, [x0, #176]
     540:	mov	w1, #0x1                   	// #1
     544:	str	w1, [x0, #20]
     548:	ldr	x0, [sp, #48]
     54c:	str	wzr, [x0, #164]
     550:	ldr	x0, [sp, #48]
     554:	mov	x1, #0xb712                	// #46866
     558:	movk	x1, #0x7f2b, lsl #16
     55c:	str	x1, [x0]
     560:	ldr	x1, [sp, #48]
     564:	ldr	x0, [sp, #16]
     568:	str	x1, [x0]
     56c:	mov	x0, #0x0                   	// #0
     570:	b	58c <ext2fs_extent_open2+0x390>
     574:	nop
     578:	b	580 <ext2fs_extent_open2+0x384>
     57c:	nop
     580:	ldr	x0, [sp, #48]
     584:	bl	104 <ext2fs_extent_free>
     588:	ldr	x0, [sp, #72]
     58c:	ldp	x29, x30, [sp], #80
     590:	ret

0000000000000594 <ext2fs_extent_get>:
     594:	stp	x29, x30, [sp, #-128]!
     598:	mov	x29, sp
     59c:	str	x0, [sp, #40]
     5a0:	str	w1, [sp, #36]
     5a4:	str	x2, [sp, #24]
     5a8:	str	xzr, [sp, #112]
     5ac:	str	wzr, [sp, #96]
     5b0:	ldr	x0, [sp, #40]
     5b4:	ldr	x1, [x0]
     5b8:	mov	x0, #0xb712                	// #46866
     5bc:	movk	x0, #0x7f2b, lsl #16
     5c0:	cmp	x1, x0
     5c4:	b.eq	5d4 <ext2fs_extent_get+0x40>  // b.none
     5c8:	mov	x0, #0xb712                	// #46866
     5cc:	movk	x0, #0x7f2b, lsl #16
     5d0:	b	10b8 <ext2fs_extent_get+0xb24>
     5d4:	ldr	x0, [sp, #40]
     5d8:	ldr	x0, [x0, #176]
     5dc:	cmp	x0, #0x0
     5e0:	b.ne	5f0 <ext2fs_extent_get+0x5c>  // b.any
     5e4:	mov	x0, #0xb780                	// #46976
     5e8:	movk	x0, #0x7f2b, lsl #16
     5ec:	b	10b8 <ext2fs_extent_get+0xb24>
     5f0:	ldr	w0, [sp, #36]
     5f4:	and	w0, w0, #0xf
     5f8:	str	w0, [sp, #100]
     5fc:	ldr	w0, [sp, #100]
     600:	str	w0, [sp, #92]
     604:	ldr	x0, [sp, #40]
     608:	ldr	x2, [x0, #176]
     60c:	ldr	x0, [sp, #40]
     610:	ldr	w0, [x0, #164]
     614:	sxtw	x1, w0
     618:	mov	x0, x1
     61c:	lsl	x0, x0, #1
     620:	add	x0, x0, x1
     624:	lsl	x0, x0, #4
     628:	add	x0, x2, x0
     62c:	str	x0, [sp, #120]
     630:	ldr	w0, [sp, #92]
     634:	cmp	w0, #0x9
     638:	b.eq	648 <ext2fs_extent_get+0xb4>  // b.none
     63c:	ldr	w0, [sp, #92]
     640:	cmp	w0, #0x7
     644:	b.ne	718 <ext2fs_extent_get+0x184>  // b.any
     648:	ldr	x0, [sp, #40]
     64c:	ldr	w1, [x0, #164]
     650:	ldr	x0, [sp, #40]
     654:	ldr	w0, [x0, #168]
     658:	cmp	w1, w0
     65c:	b.ge	6d4 <ext2fs_extent_get+0x140>  // b.tcont
     660:	ldr	x0, [sp, #120]
     664:	ldr	w0, [x0, #20]
     668:	cmp	w0, #0x0
     66c:	b.ne	690 <ext2fs_extent_get+0xfc>  // b.any
     670:	ldr	x0, [sp, #120]
     674:	ldr	w0, [x0, #20]
     678:	add	w1, w0, #0x1
     67c:	ldr	x0, [sp, #120]
     680:	str	w1, [x0, #20]
     684:	mov	w0, #0xc                   	// #12
     688:	str	w0, [sp, #100]
     68c:	b	718 <ext2fs_extent_get+0x184>
     690:	ldr	x0, [sp, #120]
     694:	ldr	w0, [x0, #16]
     698:	cmp	w0, #0x0
     69c:	b.le	6ac <ext2fs_extent_get+0x118>
     6a0:	mov	w0, #0x5                   	// #5
     6a4:	str	w0, [sp, #100]
     6a8:	b	718 <ext2fs_extent_get+0x184>
     6ac:	ldr	x0, [sp, #40]
     6b0:	ldr	w0, [x0, #164]
     6b4:	cmp	w0, #0x0
     6b8:	b.le	6c8 <ext2fs_extent_get+0x134>
     6bc:	mov	w0, #0xb                   	// #11
     6c0:	str	w0, [sp, #100]
     6c4:	b	718 <ext2fs_extent_get+0x184>
     6c8:	mov	x0, #0xb77c                	// #46972
     6cc:	movk	x0, #0x7f2b, lsl #16
     6d0:	b	10b8 <ext2fs_extent_get+0xb24>
     6d4:	ldr	x0, [sp, #120]
     6d8:	ldr	w0, [x0, #16]
     6dc:	cmp	w0, #0x0
     6e0:	b.le	6f0 <ext2fs_extent_get+0x15c>
     6e4:	mov	w0, #0x5                   	// #5
     6e8:	str	w0, [sp, #100]
     6ec:	b	718 <ext2fs_extent_get+0x184>
     6f0:	ldr	x0, [sp, #40]
     6f4:	ldr	w0, [x0, #164]
     6f8:	cmp	w0, #0x0
     6fc:	b.le	70c <ext2fs_extent_get+0x178>
     700:	mov	w0, #0xb                   	// #11
     704:	str	w0, [sp, #100]
     708:	b	718 <ext2fs_extent_get+0x184>
     70c:	mov	x0, #0xb77c                	// #46972
     710:	movk	x0, #0x7f2b, lsl #16
     714:	b	10b8 <ext2fs_extent_get+0xb24>
     718:	ldr	w0, [sp, #92]
     71c:	cmp	w0, #0xa
     720:	b.eq	730 <ext2fs_extent_get+0x19c>  // b.none
     724:	ldr	w0, [sp, #92]
     728:	cmp	w0, #0x8
     72c:	b.ne	804 <ext2fs_extent_get+0x270>  // b.any
     730:	ldr	x0, [sp, #40]
     734:	ldr	w1, [x0, #164]
     738:	ldr	x0, [sp, #40]
     73c:	ldr	w0, [x0, #168]
     740:	cmp	w1, w0
     744:	b.ge	7b4 <ext2fs_extent_get+0x220>  // b.tcont
     748:	ldr	x0, [sp, #120]
     74c:	ldr	w0, [x0, #20]
     750:	cmp	w0, #0x0
     754:	b.le	764 <ext2fs_extent_get+0x1d0>
     758:	mov	w0, #0xd                   	// #13
     75c:	str	w0, [sp, #100]
     760:	b	804 <ext2fs_extent_get+0x270>
     764:	ldr	x0, [sp, #120]
     768:	ldr	w1, [x0, #16]
     76c:	ldr	x0, [sp, #120]
     770:	ldr	w0, [x0, #8]
     774:	sub	w0, w0, #0x1
     778:	cmp	w1, w0
     77c:	b.ge	78c <ext2fs_extent_get+0x1f8>  // b.tcont
     780:	mov	w0, #0x6                   	// #6
     784:	str	w0, [sp, #100]
     788:	b	804 <ext2fs_extent_get+0x270>
     78c:	ldr	x0, [sp, #40]
     790:	ldr	w0, [x0, #164]
     794:	cmp	w0, #0x0
     798:	b.le	7a8 <ext2fs_extent_get+0x214>
     79c:	mov	w0, #0xb                   	// #11
     7a0:	str	w0, [sp, #100]
     7a4:	b	804 <ext2fs_extent_get+0x270>
     7a8:	mov	x0, #0xb77d                	// #46973
     7ac:	movk	x0, #0x7f2b, lsl #16
     7b0:	b	10b8 <ext2fs_extent_get+0xb24>
     7b4:	ldr	x0, [sp, #120]
     7b8:	ldr	w1, [x0, #16]
     7bc:	ldr	x0, [sp, #120]
     7c0:	ldr	w0, [x0, #8]
     7c4:	sub	w0, w0, #0x1
     7c8:	cmp	w1, w0
     7cc:	b.ge	7dc <ext2fs_extent_get+0x248>  // b.tcont
     7d0:	mov	w0, #0x6                   	// #6
     7d4:	str	w0, [sp, #100]
     7d8:	b	804 <ext2fs_extent_get+0x270>
     7dc:	ldr	x0, [sp, #40]
     7e0:	ldr	w0, [x0, #164]
     7e4:	cmp	w0, #0x0
     7e8:	b.le	7f8 <ext2fs_extent_get+0x264>
     7ec:	mov	w0, #0xb                   	// #11
     7f0:	str	w0, [sp, #100]
     7f4:	b	804 <ext2fs_extent_get+0x270>
     7f8:	mov	x0, #0xb77d                	// #46973
     7fc:	movk	x0, #0x7f2b, lsl #16
     800:	b	10b8 <ext2fs_extent_get+0xb24>
     804:	ldr	w0, [sp, #92]
     808:	cmp	w0, #0x2
     80c:	b.ne	84c <ext2fs_extent_get+0x2b8>  // b.any
     810:	ldr	x0, [sp, #40]
     814:	ldr	w1, [x0, #164]
     818:	ldr	x0, [sp, #40]
     81c:	ldr	w0, [x0, #168]
     820:	cmp	w1, w0
     824:	b.ge	844 <ext2fs_extent_get+0x2b0>  // b.tcont
     828:	ldr	x0, [sp, #120]
     82c:	ldr	w0, [x0, #16]
     830:	cmp	w0, #0x0
     834:	b.ne	844 <ext2fs_extent_get+0x2b0>  // b.any
     838:	mov	w0, #0xc                   	// #12
     83c:	str	w0, [sp, #100]
     840:	b	84c <ext2fs_extent_get+0x2b8>
     844:	mov	w0, #0x4                   	// #4
     848:	str	w0, [sp, #100]
     84c:	ldr	w0, [sp, #100]
     850:	cmp	w0, #0xd
     854:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     858:	ldr	w0, [sp, #100]
     85c:	cmp	w0, #0xc
     860:	b.ge	b44 <ext2fs_extent_get+0x5b0>  // b.tcont
     864:	ldr	w0, [sp, #100]
     868:	cmp	w0, #0xb
     86c:	b.eq	ad8 <ext2fs_extent_get+0x544>  // b.none
     870:	ldr	w0, [sp, #100]
     874:	cmp	w0, #0xb
     878:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     87c:	ldr	w0, [sp, #100]
     880:	cmp	w0, #0x6
     884:	b.eq	9e0 <ext2fs_extent_get+0x44c>  // b.none
     888:	ldr	w0, [sp, #100]
     88c:	cmp	w0, #0x6
     890:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     894:	ldr	w0, [sp, #100]
     898:	cmp	w0, #0x5
     89c:	b.eq	954 <ext2fs_extent_get+0x3c0>  // b.none
     8a0:	ldr	w0, [sp, #100]
     8a4:	cmp	w0, #0x5
     8a8:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     8ac:	ldr	w0, [sp, #100]
     8b0:	cmp	w0, #0x4
     8b4:	b.eq	a78 <ext2fs_extent_get+0x4e4>  // b.none
     8b8:	ldr	w0, [sp, #100]
     8bc:	cmp	w0, #0x4
     8c0:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     8c4:	ldr	w0, [sp, #100]
     8c8:	cmp	w0, #0x3
     8cc:	b.eq	93c <ext2fs_extent_get+0x3a8>  // b.none
     8d0:	ldr	w0, [sp, #100]
     8d4:	cmp	w0, #0x3
     8d8:	b.gt	e78 <ext2fs_extent_get+0x8e4>
     8dc:	ldr	w0, [sp, #100]
     8e0:	cmp	w0, #0x0
     8e4:	b.eq	8f8 <ext2fs_extent_get+0x364>  // b.none
     8e8:	ldr	w0, [sp, #100]
     8ec:	cmp	w0, #0x1
     8f0:	b.eq	908 <ext2fs_extent_get+0x374>  // b.none
     8f4:	b	e78 <ext2fs_extent_get+0x8e4>
     8f8:	ldr	x0, [sp, #120]
     8fc:	ldr	x0, [x0, #40]
     900:	str	x0, [sp, #112]
     904:	b	e98 <ext2fs_extent_get+0x904>
     908:	ldr	x0, [sp, #40]
     90c:	str	wzr, [x0, #164]
     910:	ldr	x0, [sp, #40]
     914:	ldr	x2, [x0, #176]
     918:	ldr	x0, [sp, #40]
     91c:	ldr	w0, [x0, #164]
     920:	sxtw	x1, w0
     924:	mov	x0, x1
     928:	lsl	x0, x0, #1
     92c:	add	x0, x0, x1
     930:	lsl	x0, x0, #4
     934:	add	x0, x2, x0
     938:	str	x0, [sp, #120]
     93c:	ldr	x0, [sp, #120]
     940:	ldr	w1, [x0, #8]
     944:	ldr	x0, [sp, #120]
     948:	str	w1, [x0, #16]
     94c:	ldr	x0, [sp, #120]
     950:	str	xzr, [x0, #40]
     954:	ldr	x0, [sp, #120]
     958:	ldr	w0, [x0, #16]
     95c:	cmp	w0, #0x0
     960:	b.gt	970 <ext2fs_extent_get+0x3dc>
     964:	mov	x0, #0xb77c                	// #46972
     968:	movk	x0, #0x7f2b, lsl #16
     96c:	b	10b8 <ext2fs_extent_get+0xb24>
     970:	ldr	x0, [sp, #120]
     974:	ldr	x0, [x0, #40]
     978:	cmp	x0, #0x0
     97c:	b.eq	99c <ext2fs_extent_get+0x408>  // b.none
     980:	ldr	x0, [sp, #120]
     984:	ldr	x0, [x0, #40]
     988:	str	x0, [sp, #112]
     98c:	ldr	x0, [sp, #112]
     990:	add	x0, x0, #0xc
     994:	str	x0, [sp, #112]
     998:	b	9b4 <ext2fs_extent_get+0x420>
     99c:	ldr	x0, [sp, #120]
     9a0:	ldr	x0, [x0]
     9a4:	str	x0, [sp, #56]
     9a8:	ldr	x0, [sp, #56]
     9ac:	add	x0, x0, #0xc
     9b0:	str	x0, [sp, #112]
     9b4:	ldr	x0, [sp, #120]
     9b8:	ldr	w0, [x0, #16]
     9bc:	sub	w1, w0, #0x1
     9c0:	ldr	x0, [sp, #120]
     9c4:	str	w1, [x0, #16]
     9c8:	ldr	x0, [sp, #120]
     9cc:	ldr	x1, [sp, #112]
     9d0:	str	x1, [x0, #40]
     9d4:	ldr	x0, [sp, #120]
     9d8:	str	wzr, [x0, #20]
     9dc:	b	e98 <ext2fs_extent_get+0x904>
     9e0:	ldr	x0, [sp, #120]
     9e4:	ldr	x0, [x0, #40]
     9e8:	cmp	x0, #0x0
     9ec:	b.eq	a0c <ext2fs_extent_get+0x478>  // b.none
     9f0:	ldr	x0, [sp, #120]
     9f4:	ldr	w0, [x0, #16]
     9f8:	add	w1, w0, #0x1
     9fc:	ldr	x0, [sp, #120]
     a00:	ldr	w0, [x0, #8]
     a04:	cmp	w1, w0
     a08:	b.lt	a18 <ext2fs_extent_get+0x484>  // b.tstop
     a0c:	mov	x0, #0xb77d                	// #46973
     a10:	movk	x0, #0x7f2b, lsl #16
     a14:	b	10b8 <ext2fs_extent_get+0xb24>
     a18:	ldr	x0, [sp, #120]
     a1c:	ldr	x0, [x0, #40]
     a20:	str	x0, [sp, #112]
     a24:	ldr	x0, [sp, #112]
     a28:	sub	x0, x0, #0xc
     a2c:	str	x0, [sp, #112]
     a30:	ldr	x0, [sp, #120]
     a34:	ldr	x1, [sp, #112]
     a38:	str	x1, [x0, #40]
     a3c:	ldr	x0, [sp, #120]
     a40:	ldr	w0, [x0, #16]
     a44:	add	w1, w0, #0x1
     a48:	ldr	x0, [sp, #120]
     a4c:	str	w1, [x0, #16]
     a50:	ldr	x0, [sp, #40]
     a54:	ldr	w1, [x0, #164]
     a58:	ldr	x0, [sp, #40]
     a5c:	ldr	w0, [x0, #168]
     a60:	cmp	w1, w0
     a64:	b.ge	e84 <ext2fs_extent_get+0x8f0>  // b.tcont
     a68:	ldr	x0, [sp, #120]
     a6c:	mov	w1, #0x1                   	// #1
     a70:	str	w1, [x0, #20]
     a74:	b	e84 <ext2fs_extent_get+0x8f0>
     a78:	ldr	x0, [sp, #120]
     a7c:	ldr	x0, [x0]
     a80:	str	x0, [sp, #56]
     a84:	ldr	x0, [sp, #56]
     a88:	ldrh	w0, [x0, #2]
     a8c:	and	x0, x0, #0xffff
     a90:	add	x1, x0, #0x1
     a94:	mov	x0, x1
     a98:	lsl	x0, x0, #1
     a9c:	add	x0, x0, x1
     aa0:	lsl	x0, x0, #2
     aa4:	sub	x0, x0, #0xc
     aa8:	ldr	x1, [sp, #56]
     aac:	add	x1, x1, x0
     ab0:	ldr	x0, [sp, #120]
     ab4:	str	x1, [x0, #40]
     ab8:	ldr	x0, [sp, #120]
     abc:	ldr	x0, [x0, #40]
     ac0:	str	x0, [sp, #112]
     ac4:	ldr	x0, [sp, #120]
     ac8:	str	wzr, [x0, #16]
     acc:	ldr	x0, [sp, #120]
     ad0:	str	wzr, [x0, #20]
     ad4:	b	e98 <ext2fs_extent_get+0x904>
     ad8:	ldr	x0, [sp, #40]
     adc:	ldr	w0, [x0, #164]
     ae0:	cmp	w0, #0x0
     ae4:	b.gt	af4 <ext2fs_extent_get+0x560>
     ae8:	mov	x0, #0xb77e                	// #46974
     aec:	movk	x0, #0x7f2b, lsl #16
     af0:	b	10b8 <ext2fs_extent_get+0xb24>
     af4:	ldr	x0, [sp, #40]
     af8:	ldr	w0, [x0, #164]
     afc:	sub	w1, w0, #0x1
     b00:	ldr	x0, [sp, #40]
     b04:	str	w1, [x0, #164]
     b08:	ldr	x0, [sp, #120]
     b0c:	sub	x0, x0, #0x30
     b10:	str	x0, [sp, #120]
     b14:	ldr	x0, [sp, #120]
     b18:	ldr	x0, [x0, #40]
     b1c:	str	x0, [sp, #112]
     b20:	ldr	w0, [sp, #92]
     b24:	cmp	w0, #0xa
     b28:	b.eq	b38 <ext2fs_extent_get+0x5a4>  // b.none
     b2c:	ldr	w0, [sp, #92]
     b30:	cmp	w0, #0x8
     b34:	b.ne	e8c <ext2fs_extent_get+0x8f8>  // b.any
     b38:	ldr	x0, [sp, #120]
     b3c:	str	wzr, [x0, #20]
     b40:	b	e8c <ext2fs_extent_get+0x8f8>
     b44:	ldr	x0, [sp, #120]
     b48:	ldr	x0, [x0, #40]
     b4c:	cmp	x0, #0x0
     b50:	b.eq	b6c <ext2fs_extent_get+0x5d8>  // b.none
     b54:	ldr	x0, [sp, #40]
     b58:	ldr	w1, [x0, #164]
     b5c:	ldr	x0, [sp, #40]
     b60:	ldr	w0, [x0, #168]
     b64:	cmp	w1, w0
     b68:	b.lt	b78 <ext2fs_extent_get+0x5e4>  // b.tstop
     b6c:	mov	x0, #0xb77f                	// #46975
     b70:	movk	x0, #0x7f2b, lsl #16
     b74:	b	10b8 <ext2fs_extent_get+0xb24>
     b78:	ldr	x0, [sp, #120]
     b7c:	ldr	x0, [x0, #40]
     b80:	str	x0, [sp, #112]
     b84:	ldr	x0, [sp, #120]
     b88:	add	x0, x0, #0x30
     b8c:	str	x0, [sp, #80]
     b90:	ldr	x0, [sp, #80]
     b94:	ldr	x0, [x0]
     b98:	cmp	x0, #0x0
     b9c:	b.ne	bd0 <ext2fs_extent_get+0x63c>  // b.any
     ba0:	ldr	x0, [sp, #40]
     ba4:	ldr	x0, [x0, #8]
     ba8:	ldr	w0, [x0, #40]
     bac:	mov	w0, w0
     bb0:	ldr	x1, [sp, #80]
     bb4:	bl	0 <ext2fs_get_mem>
     bb8:	str	x0, [sp, #72]
     bbc:	ldr	x0, [sp, #72]
     bc0:	cmp	x0, #0x0
     bc4:	b.eq	bd0 <ext2fs_extent_get+0x63c>  // b.none
     bc8:	ldr	x0, [sp, #72]
     bcc:	b	10b8 <ext2fs_extent_get+0xb24>
     bd0:	ldr	x0, [sp, #112]
     bd4:	ldr	w0, [x0, #4]
     bd8:	mov	w1, w0
     bdc:	ldr	x0, [sp, #112]
     be0:	ldrh	w0, [x0, #8]
     be4:	and	x0, x0, #0xffff
     be8:	lsl	x0, x0, #32
     bec:	add	x0, x1, x0
     bf0:	str	x0, [sp, #64]
     bf4:	ldr	x0, [sp, #40]
     bf8:	ldr	x0, [x0, #8]
     bfc:	ldr	w0, [x0, #16]
     c00:	and	w0, w0, #0x2000
     c04:	cmp	w0, #0x0
     c08:	b.eq	c58 <ext2fs_extent_get+0x6c4>  // b.none
     c0c:	ldr	x0, [sp, #40]
     c10:	ldr	x0, [x0, #8]
     c14:	ldr	x1, [x0, #8]
     c18:	ldr	x0, [sp, #40]
     c1c:	ldr	x0, [x0, #8]
     c20:	ldr	x0, [x0, #240]
     c24:	cmp	x1, x0
     c28:	b.eq	c58 <ext2fs_extent_get+0x6c4>  // b.none
     c2c:	ldr	x0, [sp, #80]
     c30:	ldr	x3, [x0]
     c34:	ldr	x0, [sp, #40]
     c38:	ldr	x0, [x0, #8]
     c3c:	ldr	w0, [x0, #40]
     c40:	mov	w0, w0
     c44:	mov	x2, x0
     c48:	mov	w1, #0x0                   	// #0
     c4c:	mov	x0, x3
     c50:	bl	0 <memset>
     c54:	b	c98 <ext2fs_extent_get+0x704>
     c58:	ldr	x0, [sp, #40]
     c5c:	ldr	x0, [x0, #8]
     c60:	ldr	x4, [x0, #8]
     c64:	ldr	x0, [sp, #80]
     c68:	ldr	x0, [x0]
     c6c:	mov	x3, x0
     c70:	mov	w2, #0x1                   	// #1
     c74:	ldr	x1, [sp, #64]
     c78:	mov	x0, x4
     c7c:	bl	0 <io_channel_read_blk64>
     c80:	str	x0, [sp, #72]
     c84:	ldr	x0, [sp, #72]
     c88:	cmp	x0, #0x0
     c8c:	b.eq	c98 <ext2fs_extent_get+0x704>  // b.none
     c90:	ldr	x0, [sp, #72]
     c94:	b	10b8 <ext2fs_extent_get+0xb24>
     c98:	ldr	x0, [sp, #40]
     c9c:	ldr	w0, [x0, #164]
     ca0:	add	w1, w0, #0x1
     ca4:	ldr	x0, [sp, #40]
     ca8:	str	w1, [x0, #164]
     cac:	ldr	x0, [sp, #80]
     cb0:	ldr	x0, [x0]
     cb4:	str	x0, [sp, #56]
     cb8:	ldr	x0, [sp, #40]
     cbc:	ldr	x0, [x0, #8]
     cc0:	ldr	w0, [x0, #40]
     cc4:	mov	w1, w0
     cc8:	ldr	x0, [sp, #56]
     ccc:	bl	28 <ext2fs_extent_header_verify>
     cd0:	str	x0, [sp, #72]
     cd4:	ldr	x0, [sp, #72]
     cd8:	cmp	x0, #0x0
     cdc:	b.eq	cfc <ext2fs_extent_get+0x768>  // b.none
     ce0:	ldr	x0, [sp, #40]
     ce4:	ldr	w0, [x0, #164]
     ce8:	sub	w1, w0, #0x1
     cec:	ldr	x0, [sp, #40]
     cf0:	str	w1, [x0, #164]
     cf4:	ldr	x0, [sp, #72]
     cf8:	b	10b8 <ext2fs_extent_get+0xb24>
     cfc:	ldr	x0, [sp, #40]
     d00:	ldr	x0, [x0, #8]
     d04:	ldr	w0, [x0, #16]
     d08:	and	w0, w0, #0x200000
     d0c:	cmp	w0, #0x0
     d10:	b.ne	d44 <ext2fs_extent_get+0x7b0>  // b.any
     d14:	ldr	x0, [sp, #40]
     d18:	ldr	x3, [x0, #8]
     d1c:	ldr	x0, [sp, #40]
     d20:	ldr	w0, [x0, #16]
     d24:	ldr	x2, [sp, #56]
     d28:	mov	w1, w0
     d2c:	mov	x0, x3
     d30:	bl	0 <ext2fs_extent_block_csum_verify>
     d34:	cmp	w0, #0x0
     d38:	b.ne	d44 <ext2fs_extent_get+0x7b0>  // b.any
     d3c:	mov	w0, #0x1                   	// #1
     d40:	str	w0, [sp, #96]
     d44:	ldr	x0, [sp, #56]
     d48:	ldrh	w0, [x0, #2]
     d4c:	mov	w1, w0
     d50:	ldr	x0, [sp, #80]
     d54:	str	w1, [x0, #8]
     d58:	ldr	x0, [sp, #80]
     d5c:	ldr	w1, [x0, #8]
     d60:	ldr	x0, [sp, #80]
     d64:	str	w1, [x0, #16]
     d68:	ldr	x0, [sp, #56]
     d6c:	ldrh	w0, [x0, #4]
     d70:	mov	w1, w0
     d74:	ldr	x0, [sp, #80]
     d78:	str	w1, [x0, #12]
     d7c:	ldr	x0, [sp, #120]
     d80:	ldr	w0, [x0, #16]
     d84:	cmp	w0, #0x0
     d88:	b.le	db0 <ext2fs_extent_get+0x81c>
     d8c:	ldr	x0, [sp, #112]
     d90:	add	x0, x0, #0xc
     d94:	str	x0, [sp, #112]
     d98:	ldr	x0, [sp, #112]
     d9c:	ldr	w0, [x0]
     da0:	mov	w1, w0
     da4:	ldr	x0, [sp, #80]
     da8:	str	x1, [x0, #32]
     dac:	b	dc0 <ext2fs_extent_get+0x82c>
     db0:	ldr	x0, [sp, #120]
     db4:	ldr	x1, [x0, #32]
     db8:	ldr	x0, [sp, #80]
     dbc:	str	x1, [x0, #32]
     dc0:	ldr	x0, [sp, #80]
     dc4:	str	x0, [sp, #120]
     dc8:	ldr	w0, [sp, #100]
     dcc:	cmp	w0, #0xc
     dd0:	b.ne	e0c <ext2fs_extent_get+0x878>  // b.any
     dd4:	ldr	x0, [sp, #56]
     dd8:	add	x0, x0, #0xc
     ddc:	str	x0, [sp, #112]
     de0:	ldr	x0, [sp, #120]
     de4:	ldr	x1, [sp, #112]
     de8:	str	x1, [x0, #40]
     dec:	ldr	x0, [sp, #120]
     df0:	ldr	w0, [x0, #8]
     df4:	sub	w1, w0, #0x1
     df8:	ldr	x0, [sp, #120]
     dfc:	str	w1, [x0, #16]
     e00:	ldr	x0, [sp, #120]
     e04:	str	wzr, [x0, #20]
     e08:	b	e94 <ext2fs_extent_get+0x900>
     e0c:	ldr	x0, [sp, #56]
     e10:	ldrh	w0, [x0, #2]
     e14:	and	x0, x0, #0xffff
     e18:	add	x1, x0, #0x1
     e1c:	mov	x0, x1
     e20:	lsl	x0, x0, #1
     e24:	add	x0, x0, x1
     e28:	lsl	x0, x0, #2
     e2c:	sub	x0, x0, #0xc
     e30:	ldr	x1, [sp, #56]
     e34:	add	x0, x1, x0
     e38:	str	x0, [sp, #112]
     e3c:	ldr	x0, [sp, #120]
     e40:	ldr	x1, [sp, #112]
     e44:	str	x1, [x0, #40]
     e48:	ldr	x0, [sp, #120]
     e4c:	str	wzr, [x0, #16]
     e50:	ldr	x0, [sp, #40]
     e54:	ldr	w1, [x0, #164]
     e58:	ldr	x0, [sp, #40]
     e5c:	ldr	w0, [x0, #168]
     e60:	cmp	w1, w0
     e64:	b.ge	e94 <ext2fs_extent_get+0x900>  // b.tcont
     e68:	ldr	x0, [sp, #120]
     e6c:	mov	w1, #0x1                   	// #1
     e70:	str	w1, [x0, #20]
     e74:	b	e94 <ext2fs_extent_get+0x900>
     e78:	mov	x0, #0xb781                	// #46977
     e7c:	movk	x0, #0x7f2b, lsl #16
     e80:	b	10b8 <ext2fs_extent_get+0xb24>
     e84:	nop
     e88:	b	e98 <ext2fs_extent_get+0x904>
     e8c:	nop
     e90:	b	e98 <ext2fs_extent_get+0x904>
     e94:	nop
     e98:	ldr	x0, [sp, #112]
     e9c:	cmp	x0, #0x0
     ea0:	b.ne	eb0 <ext2fs_extent_get+0x91c>  // b.any
     ea4:	mov	x0, #0xb780                	// #46976
     ea8:	movk	x0, #0x7f2b, lsl #16
     eac:	b	10b8 <ext2fs_extent_get+0xb24>
     eb0:	ldr	x0, [sp, #24]
     eb4:	str	wzr, [x0, #20]
     eb8:	ldr	x0, [sp, #40]
     ebc:	ldr	w1, [x0, #164]
     ec0:	ldr	x0, [sp, #40]
     ec4:	ldr	w0, [x0, #168]
     ec8:	cmp	w1, w0
     ecc:	b.ne	f78 <ext2fs_extent_get+0x9e4>  // b.any
     ed0:	ldr	x0, [sp, #112]
     ed4:	str	x0, [sp, #48]
     ed8:	ldr	x0, [sp, #48]
     edc:	ldr	w0, [x0, #8]
     ee0:	mov	w1, w0
     ee4:	ldr	x0, [sp, #48]
     ee8:	ldrh	w0, [x0, #6]
     eec:	and	x0, x0, #0xffff
     ef0:	lsl	x0, x0, #32
     ef4:	add	x1, x1, x0
     ef8:	ldr	x0, [sp, #24]
     efc:	str	x1, [x0]
     f00:	ldr	x0, [sp, #48]
     f04:	ldr	w0, [x0]
     f08:	mov	w1, w0
     f0c:	ldr	x0, [sp, #24]
     f10:	str	x1, [x0, #8]
     f14:	ldr	x0, [sp, #48]
     f18:	ldrh	w0, [x0, #4]
     f1c:	mov	w1, w0
     f20:	ldr	x0, [sp, #24]
     f24:	str	w1, [x0, #16]
     f28:	ldr	x0, [sp, #24]
     f2c:	ldr	w0, [x0, #20]
     f30:	orr	w1, w0, #0x1
     f34:	ldr	x0, [sp, #24]
     f38:	str	w1, [x0, #20]
     f3c:	ldr	x0, [sp, #24]
     f40:	ldr	w0, [x0, #16]
     f44:	cmp	w0, #0x8, lsl #12
     f48:	b.ls	100c <ext2fs_extent_get+0xa78>  // b.plast
     f4c:	ldr	x0, [sp, #24]
     f50:	ldr	w0, [x0, #16]
     f54:	sub	w1, w0, #0x8, lsl #12
     f58:	ldr	x0, [sp, #24]
     f5c:	str	w1, [x0, #16]
     f60:	ldr	x0, [sp, #24]
     f64:	ldr	w0, [x0, #20]
     f68:	orr	w1, w0, #0x2
     f6c:	ldr	x0, [sp, #24]
     f70:	str	w1, [x0, #20]
     f74:	b	100c <ext2fs_extent_get+0xa78>
     f78:	ldr	x0, [sp, #112]
     f7c:	ldr	w0, [x0, #4]
     f80:	mov	w1, w0
     f84:	ldr	x0, [sp, #112]
     f88:	ldrh	w0, [x0, #8]
     f8c:	and	x0, x0, #0xffff
     f90:	lsl	x0, x0, #32
     f94:	add	x1, x1, x0
     f98:	ldr	x0, [sp, #24]
     f9c:	str	x1, [x0]
     fa0:	ldr	x0, [sp, #112]
     fa4:	ldr	w0, [x0]
     fa8:	mov	w1, w0
     fac:	ldr	x0, [sp, #24]
     fb0:	str	x1, [x0, #8]
     fb4:	ldr	x0, [sp, #120]
     fb8:	ldr	w0, [x0, #16]
     fbc:	cmp	w0, #0x0
     fc0:	b.le	fe4 <ext2fs_extent_get+0xa50>
     fc4:	ldr	x0, [sp, #112]
     fc8:	add	x0, x0, #0xc
     fcc:	str	x0, [sp, #112]
     fd0:	ldr	x0, [sp, #112]
     fd4:	ldr	w0, [x0]
     fd8:	mov	w0, w0
     fdc:	str	x0, [sp, #104]
     fe0:	b	ff0 <ext2fs_extent_get+0xa5c>
     fe4:	ldr	x0, [sp, #120]
     fe8:	ldr	x0, [x0, #32]
     fec:	str	x0, [sp, #104]
     ff0:	ldr	x0, [sp, #104]
     ff4:	mov	w1, w0
     ff8:	ldr	x0, [sp, #24]
     ffc:	ldr	x0, [x0, #8]
    1000:	sub	w1, w1, w0
    1004:	ldr	x0, [sp, #24]
    1008:	str	w1, [x0, #16]
    100c:	ldr	x0, [sp, #120]
    1010:	ldr	w0, [x0, #20]
    1014:	cmp	w0, #0x0
    1018:	b.eq	1030 <ext2fs_extent_get+0xa9c>  // b.none
    101c:	ldr	x0, [sp, #24]
    1020:	ldr	w0, [x0, #20]
    1024:	orr	w1, w0, #0x4
    1028:	ldr	x0, [sp, #24]
    102c:	str	w1, [x0, #20]
    1030:	ldr	w0, [sp, #92]
    1034:	cmp	w0, #0x7
    1038:	b.eq	1048 <ext2fs_extent_get+0xab4>  // b.none
    103c:	ldr	w0, [sp, #92]
    1040:	cmp	w0, #0x8
    1044:	b.ne	1064 <ext2fs_extent_get+0xad0>  // b.any
    1048:	ldr	x0, [sp, #40]
    104c:	ldr	w1, [x0, #164]
    1050:	ldr	x0, [sp, #40]
    1054:	ldr	w0, [x0, #168]
    1058:	cmp	w1, w0
    105c:	b.eq	1064 <ext2fs_extent_get+0xad0>  // b.none
    1060:	b	604 <ext2fs_extent_get+0x70>
    1064:	ldr	w0, [sp, #92]
    1068:	cmp	w0, #0x2
    106c:	b.ne	109c <ext2fs_extent_get+0xb08>  // b.any
    1070:	ldr	x0, [sp, #40]
    1074:	ldr	w1, [x0, #164]
    1078:	ldr	x0, [sp, #40]
    107c:	ldr	w0, [x0, #168]
    1080:	cmp	w1, w0
    1084:	b.ne	604 <ext2fs_extent_get+0x70>  // b.any
    1088:	ldr	x0, [sp, #120]
    108c:	ldr	w0, [x0, #16]
    1090:	cmp	w0, #0x0
    1094:	b.eq	109c <ext2fs_extent_get+0xb08>  // b.none
    1098:	b	604 <ext2fs_extent_get+0x70>
    109c:	ldr	w0, [sp, #96]
    10a0:	cmp	w0, #0x0
    10a4:	b.eq	10b4 <ext2fs_extent_get+0xb20>  // b.none
    10a8:	mov	x0, #0xb794                	// #46996
    10ac:	movk	x0, #0x7f2b, lsl #16
    10b0:	b	10b8 <ext2fs_extent_get+0xb24>
    10b4:	mov	x0, #0x0                   	// #0
    10b8:	ldp	x29, x30, [sp], #128
    10bc:	ret

00000000000010c0 <update_path>:
    10c0:	stp	x29, x30, [sp, #-64]!
    10c4:	mov	x29, sp
    10c8:	str	x0, [sp, #24]
    10cc:	ldr	x0, [sp, #24]
    10d0:	ldr	w0, [x0, #164]
    10d4:	cmp	w0, #0x0
    10d8:	b.ne	1108 <update_path+0x48>  // b.any
    10dc:	ldr	x0, [sp, #24]
    10e0:	ldr	x3, [x0, #8]
    10e4:	ldr	x0, [sp, #24]
    10e8:	ldr	w1, [x0, #16]
    10ec:	ldr	x0, [sp, #24]
    10f0:	ldr	x0, [x0, #24]
    10f4:	mov	x2, x0
    10f8:	mov	x0, x3
    10fc:	bl	0 <ext2fs_write_inode>
    1100:	str	x0, [sp, #56]
    1104:	b	1218 <update_path+0x158>
    1108:	ldr	x0, [sp, #24]
    110c:	ldr	x2, [x0, #176]
    1110:	ldr	x0, [sp, #24]
    1114:	ldr	w0, [x0, #164]
    1118:	sxtw	x1, w0
    111c:	mov	x0, x1
    1120:	lsl	x0, x0, #1
    1124:	add	x0, x0, x1
    1128:	lsl	x0, x0, #4
    112c:	sub	x0, x0, #0x30
    1130:	add	x0, x2, x0
    1134:	ldr	x0, [x0, #40]
    1138:	str	x0, [sp, #48]
    113c:	ldr	x0, [sp, #48]
    1140:	ldr	w0, [x0, #4]
    1144:	mov	w1, w0
    1148:	ldr	x0, [sp, #48]
    114c:	ldrh	w0, [x0, #8]
    1150:	and	x0, x0, #0xffff
    1154:	lsl	x0, x0, #32
    1158:	add	x0, x1, x0
    115c:	str	x0, [sp, #40]
    1160:	ldr	x0, [sp, #24]
    1164:	ldr	x2, [x0, #176]
    1168:	ldr	x0, [sp, #24]
    116c:	ldr	w0, [x0, #164]
    1170:	sxtw	x1, w0
    1174:	mov	x0, x1
    1178:	lsl	x0, x0, #1
    117c:	add	x0, x0, x1
    1180:	lsl	x0, x0, #4
    1184:	add	x0, x2, x0
    1188:	ldr	x0, [x0]
    118c:	str	x0, [sp, #32]
    1190:	ldr	x0, [sp, #24]
    1194:	ldr	x3, [x0, #8]
    1198:	ldr	x0, [sp, #24]
    119c:	ldr	w0, [x0, #16]
    11a0:	ldr	x2, [sp, #32]
    11a4:	mov	w1, w0
    11a8:	mov	x0, x3
    11ac:	bl	0 <ext2fs_extent_block_csum_set>
    11b0:	str	x0, [sp, #56]
    11b4:	ldr	x0, [sp, #56]
    11b8:	cmp	x0, #0x0
    11bc:	b.eq	11c8 <update_path+0x108>  // b.none
    11c0:	ldr	x0, [sp, #56]
    11c4:	b	121c <update_path+0x15c>
    11c8:	ldr	x0, [sp, #24]
    11cc:	ldr	x0, [x0, #8]
    11d0:	ldr	x4, [x0, #8]
    11d4:	ldr	x0, [sp, #24]
    11d8:	ldr	x2, [x0, #176]
    11dc:	ldr	x0, [sp, #24]
    11e0:	ldr	w0, [x0, #164]
    11e4:	sxtw	x1, w0
    11e8:	mov	x0, x1
    11ec:	lsl	x0, x0, #1
    11f0:	add	x0, x0, x1
    11f4:	lsl	x0, x0, #4
    11f8:	add	x0, x2, x0
    11fc:	ldr	x0, [x0]
    1200:	mov	x3, x0
    1204:	mov	w2, #0x1                   	// #1
    1208:	ldr	x1, [sp, #40]
    120c:	mov	x0, x4
    1210:	bl	0 <io_channel_write_blk64>
    1214:	str	x0, [sp, #56]
    1218:	ldr	x0, [sp, #56]
    121c:	ldp	x29, x30, [sp], #64
    1220:	ret

0000000000001224 <ext2fs_extent_goto2>:
    1224:	stp	x29, x30, [sp, #-80]!
    1228:	mov	x29, sp
    122c:	str	x0, [sp, #40]
    1230:	str	w1, [sp, #36]
    1234:	str	x2, [sp, #24]
    1238:	add	x0, sp, #0x30
    123c:	mov	x2, x0
    1240:	mov	w1, #0x1                   	// #1
    1244:	ldr	x0, [sp, #40]
    1248:	bl	594 <ext2fs_extent_get>
    124c:	str	x0, [sp, #72]
    1250:	ldr	x0, [sp, #72]
    1254:	cmp	x0, #0x0
    1258:	b.eq	1284 <ext2fs_extent_goto2+0x60>  // b.none
    125c:	ldr	x1, [sp, #72]
    1260:	mov	x0, #0xb77c                	// #46972
    1264:	movk	x0, #0x7f2b, lsl #16
    1268:	cmp	x1, x0
    126c:	b.ne	127c <ext2fs_extent_goto2+0x58>  // b.any
    1270:	mov	x0, #0xb784                	// #46980
    1274:	movk	x0, #0x7f2b, lsl #16
    1278:	str	x0, [sp, #72]
    127c:	ldr	x0, [sp, #72]
    1280:	b	1454 <ext2fs_extent_goto2+0x230>
    1284:	ldr	x0, [sp, #40]
    1288:	ldr	w0, [x0, #168]
    128c:	ldr	w1, [sp, #36]
    1290:	cmp	w1, w0
    1294:	b.le	12a4 <ext2fs_extent_goto2+0x80>
    1298:	mov	x0, #0xb781                	// #46977
    129c:	movk	x0, #0x7f2b, lsl #16
    12a0:	b	1454 <ext2fs_extent_goto2+0x230>
    12a4:	ldr	x0, [sp, #40]
    12a8:	ldr	w1, [x0, #168]
    12ac:	ldr	x0, [sp, #40]
    12b0:	ldr	w0, [x0, #164]
    12b4:	sub	w0, w1, w0
    12b8:	ldr	w1, [sp, #36]
    12bc:	cmp	w1, w0
    12c0:	b.ne	1378 <ext2fs_extent_goto2+0x154>  // b.any
    12c4:	ldr	x0, [sp, #56]
    12c8:	ldr	x1, [sp, #24]
    12cc:	cmp	x1, x0
    12d0:	b.cc	12f8 <ext2fs_extent_goto2+0xd4>  // b.lo, b.ul, b.last
    12d4:	ldr	x1, [sp, #56]
    12d8:	ldr	w0, [sp, #64]
    12dc:	mov	w0, w0
    12e0:	add	x0, x1, x0
    12e4:	ldr	x1, [sp, #24]
    12e8:	cmp	x1, x0
    12ec:	b.cs	12f8 <ext2fs_extent_goto2+0xd4>  // b.hs, b.nlast
    12f0:	mov	x0, #0x0                   	// #0
    12f4:	b	1454 <ext2fs_extent_goto2+0x230>
    12f8:	ldr	x0, [sp, #56]
    12fc:	ldr	x1, [sp, #24]
    1300:	cmp	x1, x0
    1304:	b.cs	132c <ext2fs_extent_goto2+0x108>  // b.hs, b.nlast
    1308:	add	x0, sp, #0x30
    130c:	mov	x2, x0
    1310:	mov	w1, #0x6                   	// #6
    1314:	ldr	x0, [sp, #40]
    1318:	bl	594 <ext2fs_extent_get>
    131c:	str	x0, [sp, #72]
    1320:	mov	x0, #0xb784                	// #46980
    1324:	movk	x0, #0x7f2b, lsl #16
    1328:	b	1454 <ext2fs_extent_goto2+0x230>
    132c:	add	x0, sp, #0x30
    1330:	mov	x2, x0
    1334:	mov	w1, #0x5                   	// #5
    1338:	ldr	x0, [sp, #40]
    133c:	bl	594 <ext2fs_extent_get>
    1340:	str	x0, [sp, #72]
    1344:	ldr	x1, [sp, #72]
    1348:	mov	x0, #0xb77c                	// #46972
    134c:	movk	x0, #0x7f2b, lsl #16
    1350:	cmp	x1, x0
    1354:	b.ne	1364 <ext2fs_extent_goto2+0x140>  // b.any
    1358:	mov	x0, #0xb784                	// #46980
    135c:	movk	x0, #0x7f2b, lsl #16
    1360:	b	1454 <ext2fs_extent_goto2+0x230>
    1364:	ldr	x0, [sp, #72]
    1368:	cmp	x0, #0x0
    136c:	b.eq	1444 <ext2fs_extent_goto2+0x220>  // b.none
    1370:	ldr	x0, [sp, #72]
    1374:	b	1454 <ext2fs_extent_goto2+0x230>
    1378:	add	x0, sp, #0x30
    137c:	mov	x2, x0
    1380:	mov	w1, #0x5                   	// #5
    1384:	ldr	x0, [sp, #40]
    1388:	bl	594 <ext2fs_extent_get>
    138c:	str	x0, [sp, #72]
    1390:	ldr	x1, [sp, #72]
    1394:	mov	x0, #0xb77c                	// #46972
    1398:	movk	x0, #0x7f2b, lsl #16
    139c:	cmp	x1, x0
    13a0:	b.eq	1404 <ext2fs_extent_goto2+0x1e0>  // b.none
    13a4:	ldr	x0, [sp, #72]
    13a8:	cmp	x0, #0x0
    13ac:	b.eq	13b8 <ext2fs_extent_goto2+0x194>  // b.none
    13b0:	ldr	x0, [sp, #72]
    13b4:	b	1454 <ext2fs_extent_goto2+0x230>
    13b8:	ldr	x0, [sp, #56]
    13bc:	ldr	x1, [sp, #24]
    13c0:	cmp	x1, x0
    13c4:	b.eq	140c <ext2fs_extent_goto2+0x1e8>  // b.none
    13c8:	ldr	x0, [sp, #56]
    13cc:	ldr	x1, [sp, #24]
    13d0:	cmp	x1, x0
    13d4:	b.hi	144c <ext2fs_extent_goto2+0x228>  // b.pmore
    13d8:	add	x0, sp, #0x30
    13dc:	mov	x2, x0
    13e0:	mov	w1, #0x6                   	// #6
    13e4:	ldr	x0, [sp, #40]
    13e8:	bl	594 <ext2fs_extent_get>
    13ec:	str	x0, [sp, #72]
    13f0:	ldr	x0, [sp, #72]
    13f4:	cmp	x0, #0x0
    13f8:	b.eq	1414 <ext2fs_extent_goto2+0x1f0>  // b.none
    13fc:	ldr	x0, [sp, #72]
    1400:	b	1454 <ext2fs_extent_goto2+0x230>
    1404:	nop
    1408:	b	1418 <ext2fs_extent_goto2+0x1f4>
    140c:	nop
    1410:	b	1418 <ext2fs_extent_goto2+0x1f4>
    1414:	nop
    1418:	add	x0, sp, #0x30
    141c:	mov	x2, x0
    1420:	mov	w1, #0xc                   	// #12
    1424:	ldr	x0, [sp, #40]
    1428:	bl	594 <ext2fs_extent_get>
    142c:	str	x0, [sp, #72]
    1430:	ldr	x0, [sp, #72]
    1434:	cmp	x0, #0x0
    1438:	b.eq	12a4 <ext2fs_extent_goto2+0x80>  // b.none
    143c:	ldr	x0, [sp, #72]
    1440:	b	1454 <ext2fs_extent_goto2+0x230>
    1444:	nop
    1448:	b	12a4 <ext2fs_extent_goto2+0x80>
    144c:	nop
    1450:	b	12a4 <ext2fs_extent_goto2+0x80>
    1454:	ldp	x29, x30, [sp], #80
    1458:	ret

000000000000145c <ext2fs_extent_goto>:
    145c:	stp	x29, x30, [sp, #-32]!
    1460:	mov	x29, sp
    1464:	str	x0, [sp, #24]
    1468:	str	x1, [sp, #16]
    146c:	ldr	x2, [sp, #16]
    1470:	mov	w1, #0x0                   	// #0
    1474:	ldr	x0, [sp, #24]
    1478:	bl	1224 <ext2fs_extent_goto2>
    147c:	ldp	x29, x30, [sp], #32
    1480:	ret

0000000000001484 <ext2fs_extent_fix_parents>:
    1484:	stp	x29, x30, [sp, #-144]!
    1488:	mov	x29, sp
    148c:	str	x0, [sp, #24]
    1490:	str	wzr, [sp, #140]
    1494:	ldr	x0, [sp, #24]
    1498:	ldr	x1, [x0]
    149c:	mov	x0, #0xb712                	// #46866
    14a0:	movk	x0, #0x7f2b, lsl #16
    14a4:	cmp	x1, x0
    14a8:	b.eq	14b8 <ext2fs_extent_fix_parents+0x34>  // b.none
    14ac:	mov	x0, #0xb712                	// #46866
    14b0:	movk	x0, #0x7f2b, lsl #16
    14b4:	b	16bc <ext2fs_extent_fix_parents+0x238>
    14b8:	ldr	x0, [sp, #24]
    14bc:	ldr	x0, [x0, #8]
    14c0:	ldr	w0, [x0, #16]
    14c4:	and	w0, w0, #0x1
    14c8:	cmp	w0, #0x0
    14cc:	b.ne	14dc <ext2fs_extent_fix_parents+0x58>  // b.any
    14d0:	mov	x0, #0xb715                	// #46869
    14d4:	movk	x0, #0x7f2b, lsl #16
    14d8:	b	16bc <ext2fs_extent_fix_parents+0x238>
    14dc:	ldr	x0, [sp, #24]
    14e0:	ldr	x0, [x0, #176]
    14e4:	cmp	x0, #0x0
    14e8:	b.ne	14f8 <ext2fs_extent_fix_parents+0x74>  // b.any
    14ec:	mov	x0, #0xb780                	// #46976
    14f0:	movk	x0, #0x7f2b, lsl #16
    14f4:	b	16bc <ext2fs_extent_fix_parents+0x238>
    14f8:	ldr	x0, [sp, #24]
    14fc:	ldr	x2, [x0, #176]
    1500:	ldr	x0, [sp, #24]
    1504:	ldr	w0, [x0, #164]
    1508:	sxtw	x1, w0
    150c:	mov	x0, x1
    1510:	lsl	x0, x0, #1
    1514:	add	x0, x0, x1
    1518:	lsl	x0, x0, #4
    151c:	add	x0, x2, x0
    1520:	str	x0, [sp, #128]
    1524:	ldr	x0, [sp, #128]
    1528:	ldr	x0, [x0, #40]
    152c:	cmp	x0, #0x0
    1530:	b.ne	1540 <ext2fs_extent_fix_parents+0xbc>  // b.any
    1534:	mov	x0, #0xb780                	// #46976
    1538:	movk	x0, #0x7f2b, lsl #16
    153c:	b	16bc <ext2fs_extent_fix_parents+0x238>
    1540:	add	x0, sp, #0x58
    1544:	mov	x2, x0
    1548:	mov	w1, #0x0                   	// #0
    154c:	ldr	x0, [sp, #24]
    1550:	bl	594 <ext2fs_extent_get>
    1554:	str	w0, [sp, #140]
    1558:	ldr	w0, [sp, #140]
    155c:	cmp	w0, #0x0
    1560:	b.ne	16a4 <ext2fs_extent_fix_parents+0x220>  // b.any
    1564:	ldr	x0, [sp, #96]
    1568:	str	x0, [sp, #120]
    156c:	add	x0, sp, #0x28
    1570:	mov	x1, x0
    1574:	ldr	x0, [sp, #24]
    1578:	bl	3430 <ext2fs_extent_get_info>
    157c:	str	w0, [sp, #140]
    1580:	ldr	w0, [sp, #140]
    1584:	cmp	w0, #0x0
    1588:	b.eq	1594 <ext2fs_extent_fix_parents+0x110>  // b.none
    158c:	ldrsw	x0, [sp, #140]
    1590:	b	16bc <ext2fs_extent_fix_parents+0x238>
    1594:	ldr	w1, [sp, #56]
    1598:	ldr	w0, [sp, #44]
    159c:	sub	w0, w1, w0
    15a0:	str	w0, [sp, #116]
    15a4:	b	1658 <ext2fs_extent_fix_parents+0x1d4>
    15a8:	add	x0, sp, #0x58
    15ac:	mov	x2, x0
    15b0:	mov	w1, #0xb                   	// #11
    15b4:	ldr	x0, [sp, #24]
    15b8:	bl	594 <ext2fs_extent_get>
    15bc:	str	w0, [sp, #140]
    15c0:	ldr	w0, [sp, #140]
    15c4:	cmp	w0, #0x0
    15c8:	b.ne	16ac <ext2fs_extent_fix_parents+0x228>  // b.any
    15cc:	ldr	x0, [sp, #96]
    15d0:	ldr	x1, [sp, #120]
    15d4:	cmp	x1, x0
    15d8:	b.eq	1688 <ext2fs_extent_fix_parents+0x204>  // b.none
    15dc:	ldr	x0, [sp, #24]
    15e0:	ldr	x2, [x0, #176]
    15e4:	ldr	x0, [sp, #24]
    15e8:	ldr	w0, [x0, #164]
    15ec:	sxtw	x1, w0
    15f0:	mov	x0, x1
    15f4:	lsl	x0, x0, #1
    15f8:	add	x0, x0, x1
    15fc:	lsl	x0, x0, #4
    1600:	add	x0, x2, x0
    1604:	str	x0, [sp, #128]
    1608:	ldr	w1, [sp, #104]
    160c:	ldr	x0, [sp, #96]
    1610:	mov	w2, w0
    1614:	ldr	x0, [sp, #120]
    1618:	sub	w0, w2, w0
    161c:	add	w0, w1, w0
    1620:	str	w0, [sp, #104]
    1624:	ldr	x0, [sp, #120]
    1628:	str	x0, [sp, #96]
    162c:	add	x0, sp, #0x58
    1630:	mov	x2, x0
    1634:	mov	w1, #0x0                   	// #0
    1638:	ldr	x0, [sp, #24]
    163c:	bl	16c4 <ext2fs_extent_replace>
    1640:	str	w0, [sp, #140]
    1644:	ldr	w0, [sp, #140]
    1648:	cmp	w0, #0x0
    164c:	b.ne	16b4 <ext2fs_extent_fix_parents+0x230>  // b.any
    1650:	ldr	x0, [sp, #24]
    1654:	bl	10c0 <update_path>
    1658:	ldr	x0, [sp, #24]
    165c:	ldr	w0, [x0, #164]
    1660:	cmp	w0, #0x0
    1664:	b.le	168c <ext2fs_extent_fix_parents+0x208>
    1668:	ldr	x0, [sp, #128]
    166c:	ldr	w1, [x0, #16]
    1670:	ldr	x0, [sp, #128]
    1674:	ldr	w0, [x0, #8]
    1678:	sub	w0, w0, #0x1
    167c:	cmp	w1, w0
    1680:	b.eq	15a8 <ext2fs_extent_fix_parents+0x124>  // b.none
    1684:	b	168c <ext2fs_extent_fix_parents+0x208>
    1688:	nop
    168c:	ldr	x2, [sp, #120]
    1690:	ldr	w1, [sp, #116]
    1694:	ldr	x0, [sp, #24]
    1698:	bl	1224 <ext2fs_extent_goto2>
    169c:	str	w0, [sp, #140]
    16a0:	b	16b8 <ext2fs_extent_fix_parents+0x234>
    16a4:	nop
    16a8:	b	16b8 <ext2fs_extent_fix_parents+0x234>
    16ac:	nop
    16b0:	b	16b8 <ext2fs_extent_fix_parents+0x234>
    16b4:	nop
    16b8:	ldrsw	x0, [sp, #140]
    16bc:	ldp	x29, x30, [sp], #144
    16c0:	ret

00000000000016c4 <ext2fs_extent_replace>:
    16c4:	stp	x29, x30, [sp, #-80]!
    16c8:	mov	x29, sp
    16cc:	str	x0, [sp, #40]
    16d0:	str	w1, [sp, #36]
    16d4:	str	x2, [sp, #24]
    16d8:	ldr	x0, [sp, #40]
    16dc:	ldr	x1, [x0]
    16e0:	mov	x0, #0xb712                	// #46866
    16e4:	movk	x0, #0x7f2b, lsl #16
    16e8:	cmp	x1, x0
    16ec:	b.eq	16fc <ext2fs_extent_replace+0x38>  // b.none
    16f0:	mov	x0, #0xb712                	// #46866
    16f4:	movk	x0, #0x7f2b, lsl #16
    16f8:	b	18d0 <ext2fs_extent_replace+0x20c>
    16fc:	ldr	x0, [sp, #40]
    1700:	ldr	x0, [x0, #8]
    1704:	ldr	w0, [x0, #16]
    1708:	and	w0, w0, #0x1
    170c:	cmp	w0, #0x0
    1710:	b.ne	1720 <ext2fs_extent_replace+0x5c>  // b.any
    1714:	mov	x0, #0xb715                	// #46869
    1718:	movk	x0, #0x7f2b, lsl #16
    171c:	b	18d0 <ext2fs_extent_replace+0x20c>
    1720:	ldr	x0, [sp, #40]
    1724:	ldr	x0, [x0, #176]
    1728:	cmp	x0, #0x0
    172c:	b.ne	173c <ext2fs_extent_replace+0x78>  // b.any
    1730:	mov	x0, #0xb780                	// #46976
    1734:	movk	x0, #0x7f2b, lsl #16
    1738:	b	18d0 <ext2fs_extent_replace+0x20c>
    173c:	ldr	x0, [sp, #40]
    1740:	ldr	x2, [x0, #176]
    1744:	ldr	x0, [sp, #40]
    1748:	ldr	w0, [x0, #164]
    174c:	sxtw	x1, w0
    1750:	mov	x0, x1
    1754:	lsl	x0, x0, #1
    1758:	add	x0, x0, x1
    175c:	lsl	x0, x0, #4
    1760:	add	x0, x2, x0
    1764:	str	x0, [sp, #72]
    1768:	ldr	x0, [sp, #72]
    176c:	ldr	x0, [x0, #40]
    1770:	cmp	x0, #0x0
    1774:	b.ne	1784 <ext2fs_extent_replace+0xc0>  // b.any
    1778:	mov	x0, #0xb780                	// #46976
    177c:	movk	x0, #0x7f2b, lsl #16
    1780:	b	18d0 <ext2fs_extent_replace+0x20c>
    1784:	ldr	x0, [sp, #40]
    1788:	ldr	w1, [x0, #164]
    178c:	ldr	x0, [sp, #40]
    1790:	ldr	w0, [x0, #168]
    1794:	cmp	w1, w0
    1798:	b.ne	1870 <ext2fs_extent_replace+0x1ac>  // b.any
    179c:	ldr	x0, [sp, #72]
    17a0:	ldr	x0, [x0, #40]
    17a4:	str	x0, [sp, #56]
    17a8:	ldr	x0, [sp, #24]
    17ac:	ldr	x0, [x0, #8]
    17b0:	mov	w1, w0
    17b4:	ldr	x0, [sp, #56]
    17b8:	str	w1, [x0]
    17bc:	ldr	x0, [sp, #24]
    17c0:	ldr	x0, [x0]
    17c4:	mov	w1, w0
    17c8:	ldr	x0, [sp, #56]
    17cc:	str	w1, [x0, #8]
    17d0:	ldr	x0, [sp, #24]
    17d4:	ldr	x0, [x0]
    17d8:	lsr	x0, x0, #32
    17dc:	and	w1, w0, #0xffff
    17e0:	ldr	x0, [sp, #56]
    17e4:	strh	w1, [x0, #6]
    17e8:	ldr	x0, [sp, #24]
    17ec:	ldr	w0, [x0, #20]
    17f0:	and	w0, w0, #0x2
    17f4:	cmp	w0, #0x0
    17f8:	b.eq	183c <ext2fs_extent_replace+0x178>  // b.none
    17fc:	ldr	x0, [sp, #24]
    1800:	ldr	w1, [x0, #16]
    1804:	mov	w0, #0x7fff                	// #32767
    1808:	cmp	w1, w0
    180c:	b.ls	181c <ext2fs_extent_replace+0x158>  // b.plast
    1810:	mov	x0, #0xb786                	// #46982
    1814:	movk	x0, #0x7f2b, lsl #16
    1818:	b	18d0 <ext2fs_extent_replace+0x20c>
    181c:	ldr	x0, [sp, #24]
    1820:	ldr	w0, [x0, #16]
    1824:	and	w0, w0, #0xffff
    1828:	sub	w0, w0, #0x8, lsl #12
    182c:	and	w1, w0, #0xffff
    1830:	ldr	x0, [sp, #56]
    1834:	strh	w1, [x0, #4]
    1838:	b	18c4 <ext2fs_extent_replace+0x200>
    183c:	ldr	x0, [sp, #24]
    1840:	ldr	w0, [x0, #16]
    1844:	cmp	w0, #0x8, lsl #12
    1848:	b.ls	1858 <ext2fs_extent_replace+0x194>  // b.plast
    184c:	mov	x0, #0xb786                	// #46982
    1850:	movk	x0, #0x7f2b, lsl #16
    1854:	b	18d0 <ext2fs_extent_replace+0x20c>
    1858:	ldr	x0, [sp, #24]
    185c:	ldr	w0, [x0, #16]
    1860:	and	w1, w0, #0xffff
    1864:	ldr	x0, [sp, #56]
    1868:	strh	w1, [x0, #4]
    186c:	b	18c4 <ext2fs_extent_replace+0x200>
    1870:	ldr	x0, [sp, #72]
    1874:	ldr	x0, [x0, #40]
    1878:	str	x0, [sp, #64]
    187c:	ldr	x0, [sp, #24]
    1880:	ldr	x0, [x0]
    1884:	mov	w1, w0
    1888:	ldr	x0, [sp, #64]
    188c:	str	w1, [x0, #4]
    1890:	ldr	x0, [sp, #24]
    1894:	ldr	x0, [x0]
    1898:	lsr	x0, x0, #32
    189c:	and	w1, w0, #0xffff
    18a0:	ldr	x0, [sp, #64]
    18a4:	strh	w1, [x0, #8]
    18a8:	ldr	x0, [sp, #24]
    18ac:	ldr	x0, [x0, #8]
    18b0:	mov	w1, w0
    18b4:	ldr	x0, [sp, #64]
    18b8:	str	w1, [x0]
    18bc:	ldr	x0, [sp, #64]
    18c0:	strh	wzr, [x0, #10]
    18c4:	ldr	x0, [sp, #40]
    18c8:	bl	10c0 <update_path>
    18cc:	mov	x0, #0x0                   	// #0
    18d0:	ldp	x29, x30, [sp], #80
    18d4:	ret

00000000000018d8 <splitting_at_eof>:
    18d8:	sub	sp, sp, #0x20
    18dc:	str	x0, [sp, #8]
    18e0:	str	x1, [sp]
    18e4:	ldr	x0, [sp]
    18e8:	str	x0, [sp, #24]
    18ec:	ldr	x0, [sp, #8]
    18f0:	ldr	w0, [x0, #164]
    18f4:	cmp	w0, #0x0
    18f8:	b.ne	1904 <splitting_at_eof+0x2c>  // b.any
    18fc:	mov	w0, #0x0                   	// #0
    1900:	b	1940 <splitting_at_eof+0x68>
    1904:	ldr	x0, [sp, #24]
    1908:	ldr	w0, [x0, #16]
    190c:	cmp	w0, #0x0
    1910:	b.eq	191c <splitting_at_eof+0x44>  // b.none
    1914:	mov	w0, #0x0                   	// #0
    1918:	b	1940 <splitting_at_eof+0x68>
    191c:	ldr	x0, [sp, #24]
    1920:	sub	x0, x0, #0x30
    1924:	str	x0, [sp, #24]
    1928:	ldr	x0, [sp, #8]
    192c:	ldr	x0, [x0, #176]
    1930:	ldr	x1, [sp, #24]
    1934:	cmp	x1, x0
    1938:	b.cs	1904 <splitting_at_eof+0x2c>  // b.hs, b.nlast
    193c:	mov	w0, #0x1                   	// #1
    1940:	add	sp, sp, #0x20
    1944:	ret

0000000000001948 <extent_node_split>:
    1948:	stp	x29, x30, [sp, #-240]!
    194c:	mov	x29, sp
    1950:	str	x0, [sp, #24]
    1954:	str	w1, [sp, #20]
    1958:	str	xzr, [sp, #232]
    195c:	str	xzr, [sp, #224]
    1960:	str	xzr, [sp, #216]
    1964:	str	xzr, [sp, #88]
    1968:	str	wzr, [sp, #200]
    196c:	ldr	x0, [sp, #24]
    1970:	ldr	x1, [x0]
    1974:	mov	x0, #0xb712                	// #46866
    1978:	movk	x0, #0x7f2b, lsl #16
    197c:	cmp	x1, x0
    1980:	b.eq	1990 <extent_node_split+0x48>  // b.none
    1984:	mov	x0, #0xb712                	// #46866
    1988:	movk	x0, #0x7f2b, lsl #16
    198c:	b	2230 <extent_node_split+0x8e8>
    1990:	ldr	x0, [sp, #24]
    1994:	ldr	x0, [x0, #8]
    1998:	ldr	w0, [x0, #16]
    199c:	and	w0, w0, #0x1
    19a0:	cmp	w0, #0x0
    19a4:	b.ne	19b4 <extent_node_split+0x6c>  // b.any
    19a8:	mov	x0, #0xb715                	// #46869
    19ac:	movk	x0, #0x7f2b, lsl #16
    19b0:	b	2230 <extent_node_split+0x8e8>
    19b4:	ldr	x0, [sp, #24]
    19b8:	ldr	x0, [x0, #176]
    19bc:	cmp	x0, #0x0
    19c0:	b.ne	19d0 <extent_node_split+0x88>  // b.any
    19c4:	mov	x0, #0xb780                	// #46976
    19c8:	movk	x0, #0x7f2b, lsl #16
    19cc:	b	2230 <extent_node_split+0x8e8>
    19d0:	add	x0, sp, #0x60
    19d4:	mov	x2, x0
    19d8:	mov	w1, #0x0                   	// #0
    19dc:	ldr	x0, [sp, #24]
    19e0:	bl	594 <ext2fs_extent_get>
    19e4:	str	x0, [sp, #232]
    19e8:	ldr	x0, [sp, #232]
    19ec:	cmp	x0, #0x0
    19f0:	b.ne	21ac <extent_node_split+0x864>  // b.any
    19f4:	add	x0, sp, #0x28
    19f8:	mov	x1, x0
    19fc:	ldr	x0, [sp, #24]
    1a00:	bl	3430 <ext2fs_extent_get_info>
    1a04:	str	x0, [sp, #232]
    1a08:	ldr	x0, [sp, #232]
    1a0c:	cmp	x0, #0x0
    1a10:	b.ne	21b4 <extent_node_split+0x86c>  // b.any
    1a14:	ldr	w1, [sp, #56]
    1a18:	ldr	w0, [sp, #44]
    1a1c:	sub	w0, w1, w0
    1a20:	str	w0, [sp, #196]
    1a24:	ldr	x0, [sp, #104]
    1a28:	str	x0, [sp, #184]
    1a2c:	ldr	x0, [sp, #24]
    1a30:	ldr	x2, [x0, #176]
    1a34:	ldr	x0, [sp, #24]
    1a38:	ldr	w0, [x0, #164]
    1a3c:	sxtw	x1, w0
    1a40:	mov	x0, x1
    1a44:	lsl	x0, x0, #1
    1a48:	add	x0, x0, x1
    1a4c:	lsl	x0, x0, #4
    1a50:	add	x0, x2, x0
    1a54:	str	x0, [sp, #208]
    1a58:	ldr	x0, [sp, #208]
    1a5c:	ldr	x0, [x0]
    1a60:	str	x0, [sp, #176]
    1a64:	ldr	x0, [sp, #24]
    1a68:	ldr	w1, [x0, #164]
    1a6c:	ldr	x0, [sp, #24]
    1a70:	ldr	w0, [x0, #168]
    1a74:	cmp	w1, w0
    1a78:	b.ne	1ab0 <extent_node_split+0x168>  // b.any
    1a7c:	ldr	x0, [sp, #176]
    1a80:	add	x0, x0, #0xc
    1a84:	str	x0, [sp, #160]
    1a88:	ldr	x0, [sp, #160]
    1a8c:	ldr	w0, [x0, #8]
    1a90:	mov	w1, w0
    1a94:	ldr	x0, [sp, #160]
    1a98:	ldrh	w0, [x0, #6]
    1a9c:	and	x0, x0, #0xffff
    1aa0:	lsl	x0, x0, #32
    1aa4:	add	x0, x1, x0
    1aa8:	str	x0, [sp, #224]
    1aac:	b	1ae0 <extent_node_split+0x198>
    1ab0:	ldr	x0, [sp, #176]
    1ab4:	add	x0, x0, #0xc
    1ab8:	str	x0, [sp, #168]
    1abc:	ldr	x0, [sp, #168]
    1ac0:	ldr	w0, [x0, #4]
    1ac4:	mov	w1, w0
    1ac8:	ldr	x0, [sp, #168]
    1acc:	ldrh	w0, [x0, #8]
    1ad0:	and	x0, x0, #0xffff
    1ad4:	lsl	x0, x0, #32
    1ad8:	add	x0, x1, x0
    1adc:	str	x0, [sp, #224]
    1ae0:	ldr	x0, [sp, #24]
    1ae4:	ldr	x0, [x0, #8]
    1ae8:	ldr	w0, [x0, #192]
    1aec:	mov	w1, #0x1                   	// #1
    1af0:	lsl	w0, w1, w0
    1af4:	sxtw	x0, w0
    1af8:	ldr	x1, [sp, #224]
    1afc:	sub	x0, x1, x0
    1b00:	str	x0, [sp, #224]
    1b04:	ldr	x0, [sp, #24]
    1b08:	ldr	x0, [x0, #8]
    1b0c:	ldr	w0, [x0, #192]
    1b10:	mov	w1, #0x1                   	// #1
    1b14:	lsl	w0, w1, w0
    1b18:	neg	w0, w0
    1b1c:	sxtw	x0, w0
    1b20:	ldr	x1, [sp, #224]
    1b24:	and	x0, x1, x0
    1b28:	str	x0, [sp, #224]
    1b2c:	ldr	x0, [sp, #24]
    1b30:	ldr	w0, [x0, #164]
    1b34:	cmp	w0, #0x0
    1b38:	b.eq	1c04 <extent_node_split+0x2bc>  // b.none
    1b3c:	ldr	x0, [sp, #24]
    1b40:	ldr	x2, [x0, #176]
    1b44:	ldr	x0, [sp, #24]
    1b48:	ldr	w0, [x0, #164]
    1b4c:	sxtw	x1, w0
    1b50:	mov	x0, x1
    1b54:	lsl	x0, x0, #1
    1b58:	add	x0, x0, x1
    1b5c:	lsl	x0, x0, #4
    1b60:	sub	x0, x0, #0x30
    1b64:	add	x0, x2, x0
    1b68:	ldr	w2, [x0, #8]
    1b6c:	ldr	x0, [sp, #24]
    1b70:	ldr	x3, [x0, #176]
    1b74:	ldr	x0, [sp, #24]
    1b78:	ldr	w0, [x0, #164]
    1b7c:	sxtw	x1, w0
    1b80:	mov	x0, x1
    1b84:	lsl	x0, x0, #1
    1b88:	add	x0, x0, x1
    1b8c:	lsl	x0, x0, #4
    1b90:	sub	x0, x0, #0x30
    1b94:	add	x0, x3, x0
    1b98:	ldr	w0, [x0, #12]
    1b9c:	cmp	w2, w0
    1ba0:	b.lt	1c04 <extent_node_split+0x2bc>  // b.tstop
    1ba4:	add	x0, sp, #0x60
    1ba8:	mov	x2, x0
    1bac:	mov	w1, #0xb                   	// #11
    1bb0:	ldr	x0, [sp, #24]
    1bb4:	bl	594 <ext2fs_extent_get>
    1bb8:	str	x0, [sp, #232]
    1bbc:	ldr	x0, [sp, #232]
    1bc0:	cmp	x0, #0x0
    1bc4:	b.ne	21bc <extent_node_split+0x874>  // b.any
    1bc8:	ldr	w1, [sp, #20]
    1bcc:	ldr	x0, [sp, #24]
    1bd0:	bl	1948 <extent_node_split>
    1bd4:	str	x0, [sp, #232]
    1bd8:	ldr	x0, [sp, #232]
    1bdc:	cmp	x0, #0x0
    1be0:	b.ne	21c4 <extent_node_split+0x87c>  // b.any
    1be4:	ldr	x2, [sp, #184]
    1be8:	ldr	w1, [sp, #196]
    1bec:	ldr	x0, [sp, #24]
    1bf0:	bl	1224 <ext2fs_extent_goto2>
    1bf4:	str	x0, [sp, #232]
    1bf8:	ldr	x0, [sp, #232]
    1bfc:	cmp	x0, #0x0
    1c00:	b.ne	21cc <extent_node_split+0x884>  // b.any
    1c04:	ldr	x0, [sp, #24]
    1c08:	ldr	x2, [x0, #176]
    1c0c:	ldr	x0, [sp, #24]
    1c10:	ldr	w0, [x0, #164]
    1c14:	sxtw	x1, w0
    1c18:	mov	x0, x1
    1c1c:	lsl	x0, x0, #1
    1c20:	add	x0, x0, x1
    1c24:	lsl	x0, x0, #4
    1c28:	add	x0, x2, x0
    1c2c:	str	x0, [sp, #208]
    1c30:	ldr	x0, [sp, #208]
    1c34:	ldr	x0, [x0, #40]
    1c38:	cmp	x0, #0x0
    1c3c:	b.ne	1c4c <extent_node_split+0x304>  // b.any
    1c40:	mov	x0, #0xb780                	// #46976
    1c44:	movk	x0, #0x7f2b, lsl #16
    1c48:	b	2230 <extent_node_split+0x8e8>
    1c4c:	ldr	w0, [sp, #20]
    1c50:	cmp	w0, #0x0
    1c54:	b.eq	1c68 <extent_node_split+0x320>  // b.none
    1c58:	ldr	x1, [sp, #208]
    1c5c:	ldr	x0, [sp, #24]
    1c60:	bl	18d8 <splitting_at_eof>
    1c64:	b	1c6c <extent_node_split+0x324>
    1c68:	mov	w0, #0x0                   	// #0
    1c6c:	str	w0, [sp, #156]
    1c70:	ldr	x0, [sp, #208]
    1c74:	ldr	x0, [x0]
    1c78:	str	x0, [sp, #176]
    1c7c:	ldr	x0, [sp, #24]
    1c80:	ldr	w0, [x0, #164]
    1c84:	cmp	w0, #0x0
    1c88:	b.ne	1ce8 <extent_node_split+0x3a0>  // b.any
    1c8c:	mov	w0, #0x1                   	// #1
    1c90:	str	w0, [sp, #200]
    1c94:	ldr	x0, [sp, #176]
    1c98:	ldrh	w0, [x0, #2]
    1c9c:	str	w0, [sp, #204]
    1ca0:	ldr	x0, [sp, #24]
    1ca4:	ldr	w0, [x0, #172]
    1ca8:	add	w0, w0, #0x1
    1cac:	sxtw	x1, w0
    1cb0:	mov	x0, x1
    1cb4:	lsl	x0, x0, #1
    1cb8:	add	x0, x0, x1
    1cbc:	lsl	x0, x0, #4
    1cc0:	mov	x2, x0
    1cc4:	add	x0, sp, #0x58
    1cc8:	mov	x1, x0
    1ccc:	mov	x0, x2
    1cd0:	bl	0 <ext2fs_get_memzero>
    1cd4:	str	x0, [sp, #232]
    1cd8:	ldr	x0, [sp, #232]
    1cdc:	cmp	x0, #0x0
    1ce0:	b.eq	1d14 <extent_node_split+0x3cc>  // b.none
    1ce4:	b	2210 <extent_node_split+0x8c8>
    1ce8:	ldr	w0, [sp, #156]
    1cec:	cmp	w0, #0x0
    1cf0:	b.eq	1d00 <extent_node_split+0x3b8>  // b.none
    1cf4:	mov	w0, #0x1                   	// #1
    1cf8:	str	w0, [sp, #204]
    1cfc:	b	1d14 <extent_node_split+0x3cc>
    1d00:	ldr	x0, [sp, #176]
    1d04:	ldrh	w0, [x0, #2]
    1d08:	lsr	w0, w0, #1
    1d0c:	and	w0, w0, #0xffff
    1d10:	str	w0, [sp, #204]
    1d14:	ldr	w0, [sp, #204]
    1d18:	cmp	w0, #0x0
    1d1c:	b.ne	1d3c <extent_node_split+0x3f4>  // b.any
    1d20:	ldr	w0, [sp, #156]
    1d24:	cmp	w0, #0x0
    1d28:	b.ne	1d3c <extent_node_split+0x3f4>  // b.any
    1d2c:	mov	x0, #0xb783                	// #46979
    1d30:	movk	x0, #0x7f2b, lsl #16
    1d34:	str	x0, [sp, #232]
    1d38:	b	2210 <extent_node_split+0x8c8>
    1d3c:	ldr	x0, [sp, #24]
    1d40:	ldr	x0, [x0, #8]
    1d44:	ldr	w0, [x0, #40]
    1d48:	mov	w0, w0
    1d4c:	bl	0 <malloc>
    1d50:	str	x0, [sp, #216]
    1d54:	ldr	x0, [sp, #216]
    1d58:	cmp	x0, #0x0
    1d5c:	b.ne	1d6c <extent_node_split+0x424>  // b.any
    1d60:	mov	x0, #0xc                   	// #12
    1d64:	str	x0, [sp, #232]
    1d68:	b	2210 <extent_node_split+0x8c8>
    1d6c:	ldr	x0, [sp, #224]
    1d70:	cmp	x0, #0x0
    1d74:	b.ne	1da4 <extent_node_split+0x45c>  // b.any
    1d78:	ldr	x0, [sp, #24]
    1d7c:	ldr	x4, [x0, #8]
    1d80:	ldr	x0, [sp, #24]
    1d84:	ldr	w1, [x0, #16]
    1d88:	ldr	x0, [sp, #24]
    1d8c:	ldr	x0, [x0, #24]
    1d90:	mov	x3, #0x0                   	// #0
    1d94:	mov	x2, x0
    1d98:	mov	x0, x4
    1d9c:	bl	0 <ext2fs_find_inode_goal>
    1da0:	str	x0, [sp, #224]
    1da4:	ldr	x0, [sp, #24]
    1da8:	ldr	x0, [x0, #8]
    1dac:	add	x1, sp, #0x78
    1db0:	mov	x3, x1
    1db4:	ldr	x2, [sp, #216]
    1db8:	ldr	x1, [sp, #224]
    1dbc:	bl	0 <ext2fs_alloc_block2>
    1dc0:	str	x0, [sp, #232]
    1dc4:	ldr	x0, [sp, #232]
    1dc8:	cmp	x0, #0x0
    1dcc:	b.ne	21d4 <extent_node_split+0x88c>  // b.any
    1dd0:	ldr	x0, [sp, #216]
    1dd4:	str	x0, [sp, #144]
    1dd8:	mov	x2, #0xc                   	// #12
    1ddc:	ldr	x1, [sp, #176]
    1de0:	ldr	x0, [sp, #144]
    1de4:	bl	0 <memcpy>
    1de8:	ldr	w0, [sp, #204]
    1dec:	and	w1, w0, #0xffff
    1df0:	ldr	x0, [sp, #144]
    1df4:	strh	w1, [x0, #2]
    1df8:	ldr	x0, [sp, #24]
    1dfc:	ldr	x0, [x0, #8]
    1e00:	ldr	w0, [x0, #40]
    1e04:	mov	w0, w0
    1e08:	sub	x1, x0, #0xc
    1e0c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    1e10:	movk	x0, #0xaaab
    1e14:	umulh	x0, x1, x0
    1e18:	lsr	x0, x0, #3
    1e1c:	and	w1, w0, #0xffff
    1e20:	ldr	x0, [sp, #144]
    1e24:	strh	w1, [x0, #4]
    1e28:	ldr	x0, [sp, #144]
    1e2c:	add	x3, x0, #0xc
    1e30:	ldr	x0, [sp, #176]
    1e34:	ldrh	w0, [x0, #2]
    1e38:	mov	w1, w0
    1e3c:	ldr	w0, [sp, #204]
    1e40:	sub	w0, w1, w0
    1e44:	sxtw	x0, w0
    1e48:	add	x1, x0, #0x1
    1e4c:	mov	x0, x1
    1e50:	lsl	x0, x0, #1
    1e54:	add	x0, x0, x1
    1e58:	lsl	x0, x0, #2
    1e5c:	mov	x1, x0
    1e60:	ldr	x0, [sp, #176]
    1e64:	add	x4, x0, x1
    1e68:	ldrsw	x1, [sp, #204]
    1e6c:	mov	x0, x1
    1e70:	lsl	x0, x0, #1
    1e74:	add	x0, x0, x1
    1e78:	lsl	x0, x0, #2
    1e7c:	mov	x2, x0
    1e80:	mov	x1, x4
    1e84:	mov	x0, x3
    1e88:	bl	0 <memcpy>
    1e8c:	ldr	x0, [sp, #144]
    1e90:	add	x0, x0, #0xc
    1e94:	ldr	w0, [x0]
    1e98:	mov	w0, w0
    1e9c:	str	x0, [sp, #136]
    1ea0:	ldr	x0, [sp, #24]
    1ea4:	ldr	x3, [x0, #8]
    1ea8:	ldr	x0, [sp, #24]
    1eac:	ldr	w0, [x0, #16]
    1eb0:	ldr	x2, [sp, #144]
    1eb4:	mov	w1, w0
    1eb8:	mov	x0, x3
    1ebc:	bl	0 <ext2fs_extent_block_csum_set>
    1ec0:	str	x0, [sp, #232]
    1ec4:	ldr	x0, [sp, #232]
    1ec8:	cmp	x0, #0x0
    1ecc:	b.ne	21dc <extent_node_split+0x894>  // b.any
    1ed0:	ldr	x0, [sp, #24]
    1ed4:	ldr	x0, [x0, #8]
    1ed8:	ldr	x0, [x0, #8]
    1edc:	ldr	x1, [sp, #120]
    1ee0:	ldr	x3, [sp, #216]
    1ee4:	mov	w2, #0x1                   	// #1
    1ee8:	bl	0 <io_channel_write_blk64>
    1eec:	str	x0, [sp, #232]
    1ef0:	ldr	x0, [sp, #232]
    1ef4:	cmp	x0, #0x0
    1ef8:	b.ne	21e4 <extent_node_split+0x89c>  // b.any
    1efc:	ldr	x0, [sp, #24]
    1f00:	ldr	w0, [x0, #164]
    1f04:	cmp	w0, #0x0
    1f08:	b.ne	1fbc <extent_node_split+0x674>  // b.any
    1f0c:	ldr	x3, [sp, #88]
    1f10:	ldr	x0, [sp, #24]
    1f14:	ldr	w0, [x0, #172]
    1f18:	sxtw	x1, w0
    1f1c:	mov	x0, x1
    1f20:	lsl	x0, x0, #1
    1f24:	add	x0, x0, x1
    1f28:	lsl	x0, x0, #4
    1f2c:	mov	x2, x0
    1f30:	ldr	x1, [sp, #208]
    1f34:	mov	x0, x3
    1f38:	bl	0 <memcpy>
    1f3c:	ldr	x1, [sp, #88]
    1f40:	ldr	x0, [sp, #24]
    1f44:	str	x1, [x0, #176]
    1f48:	ldr	x0, [sp, #208]
    1f4c:	str	x0, [sp, #88]
    1f50:	ldr	x0, [sp, #24]
    1f54:	ldr	x0, [x0, #176]
    1f58:	str	x0, [sp, #208]
    1f5c:	ldr	x0, [sp, #208]
    1f60:	mov	w1, #0x1                   	// #1
    1f64:	str	w1, [x0, #8]
    1f68:	ldr	x0, [sp, #208]
    1f6c:	ldr	w0, [x0, #12]
    1f70:	sub	w1, w0, #0x1
    1f74:	ldr	x0, [sp, #208]
    1f78:	str	w1, [x0, #16]
    1f7c:	ldr	x0, [sp, #24]
    1f80:	ldr	w0, [x0, #168]
    1f84:	add	w1, w0, #0x1
    1f88:	ldr	x0, [sp, #24]
    1f8c:	str	w1, [x0, #168]
    1f90:	ldr	x0, [sp, #24]
    1f94:	ldr	w0, [x0, #172]
    1f98:	add	w1, w0, #0x1
    1f9c:	ldr	x0, [sp, #24]
    1fa0:	str	w1, [x0, #172]
    1fa4:	ldr	x0, [sp, #24]
    1fa8:	ldr	w0, [x0, #168]
    1fac:	and	w1, w0, #0xffff
    1fb0:	ldr	x0, [sp, #176]
    1fb4:	strh	w1, [x0, #6]
    1fb8:	b	1fec <extent_node_split+0x6a4>
    1fbc:	ldr	x0, [sp, #208]
    1fc0:	ldr	w1, [x0, #8]
    1fc4:	ldr	w0, [sp, #204]
    1fc8:	sub	w1, w1, w0
    1fcc:	ldr	x0, [sp, #208]
    1fd0:	str	w1, [x0, #8]
    1fd4:	ldr	x0, [sp, #208]
    1fd8:	ldr	w1, [x0, #16]
    1fdc:	ldr	w0, [sp, #204]
    1fe0:	sub	w1, w1, w0
    1fe4:	ldr	x0, [sp, #208]
    1fe8:	str	w1, [x0, #16]
    1fec:	ldr	x0, [sp, #208]
    1ff0:	ldr	w0, [x0, #8]
    1ff4:	and	w1, w0, #0xffff
    1ff8:	ldr	x0, [sp, #176]
    1ffc:	strh	w1, [x0, #2]
    2000:	ldr	x0, [sp, #24]
    2004:	bl	10c0 <update_path>
    2008:	str	x0, [sp, #232]
    200c:	ldr	x0, [sp, #232]
    2010:	cmp	x0, #0x0
    2014:	b.ne	21ec <extent_node_split+0x8a4>  // b.any
    2018:	ldr	w0, [sp, #200]
    201c:	cmp	w0, #0x0
    2020:	b.eq	209c <extent_node_split+0x754>  // b.none
    2024:	add	x0, sp, #0x60
    2028:	mov	x2, x0
    202c:	mov	w1, #0x3                   	// #3
    2030:	ldr	x0, [sp, #24]
    2034:	bl	594 <ext2fs_extent_get>
    2038:	str	x0, [sp, #232]
    203c:	ldr	x0, [sp, #232]
    2040:	cmp	x0, #0x0
    2044:	b.ne	21f4 <extent_node_split+0x8ac>  // b.any
    2048:	ldr	x0, [sp, #136]
    204c:	str	x0, [sp, #104]
    2050:	ldr	x0, [sp, #120]
    2054:	str	x0, [sp, #96]
    2058:	ldr	x0, [sp, #24]
    205c:	ldr	x0, [x0, #176]
    2060:	ldr	x0, [x0, #32]
    2064:	mov	w1, w0
    2068:	ldr	x0, [sp, #104]
    206c:	sub	w0, w1, w0
    2070:	str	w0, [sp, #112]
    2074:	add	x0, sp, #0x60
    2078:	mov	x2, x0
    207c:	mov	w1, #0x0                   	// #0
    2080:	ldr	x0, [sp, #24]
    2084:	bl	16c4 <ext2fs_extent_replace>
    2088:	str	x0, [sp, #232]
    208c:	ldr	x0, [sp, #232]
    2090:	cmp	x0, #0x0
    2094:	b.eq	2138 <extent_node_split+0x7f0>  // b.none
    2098:	b	2210 <extent_node_split+0x8c8>
    209c:	add	x0, sp, #0x60
    20a0:	mov	x2, x0
    20a4:	mov	w1, #0xb                   	// #11
    20a8:	ldr	x0, [sp, #24]
    20ac:	bl	594 <ext2fs_extent_get>
    20b0:	str	x0, [sp, #232]
    20b4:	ldr	x0, [sp, #136]
    20b8:	mov	w1, w0
    20bc:	ldr	x0, [sp, #104]
    20c0:	sub	w0, w1, w0
    20c4:	str	w0, [sp, #132]
    20c8:	ldr	w1, [sp, #112]
    20cc:	ldr	w0, [sp, #132]
    20d0:	sub	w0, w1, w0
    20d4:	str	w0, [sp, #112]
    20d8:	add	x0, sp, #0x60
    20dc:	mov	x2, x0
    20e0:	mov	w1, #0x0                   	// #0
    20e4:	ldr	x0, [sp, #24]
    20e8:	bl	16c4 <ext2fs_extent_replace>
    20ec:	str	x0, [sp, #232]
    20f0:	ldr	x0, [sp, #232]
    20f4:	cmp	x0, #0x0
    20f8:	b.ne	21fc <extent_node_split+0x8b4>  // b.any
    20fc:	ldr	x0, [sp, #136]
    2100:	str	x0, [sp, #104]
    2104:	ldr	x0, [sp, #120]
    2108:	str	x0, [sp, #96]
    210c:	ldr	w0, [sp, #132]
    2110:	str	w0, [sp, #112]
    2114:	add	x0, sp, #0x60
    2118:	mov	x2, x0
    211c:	mov	w1, #0x1                   	// #1
    2120:	ldr	x0, [sp, #24]
    2124:	bl	2258 <ext2fs_extent_insert>
    2128:	str	x0, [sp, #232]
    212c:	ldr	x0, [sp, #232]
    2130:	cmp	x0, #0x0
    2134:	b.ne	2204 <extent_node_split+0x8bc>  // b.any
    2138:	ldr	x2, [sp, #184]
    213c:	ldr	w1, [sp, #196]
    2140:	ldr	x0, [sp, #24]
    2144:	bl	1224 <ext2fs_extent_goto2>
    2148:	str	x0, [sp, #232]
    214c:	ldr	x0, [sp, #232]
    2150:	cmp	x0, #0x0
    2154:	b.ne	220c <extent_node_split+0x8c4>  // b.any
    2158:	ldr	x0, [sp, #24]
    215c:	ldr	x3, [x0, #8]
    2160:	ldr	x0, [sp, #24]
    2164:	ldr	x0, [x0, #24]
    2168:	mov	x2, #0x1                   	// #1
    216c:	mov	x1, x0
    2170:	mov	x0, x3
    2174:	bl	0 <ext2fs_iblk_add_blocks>
    2178:	ldr	x0, [sp, #24]
    217c:	ldr	x3, [x0, #8]
    2180:	ldr	x0, [sp, #24]
    2184:	ldr	w1, [x0, #16]
    2188:	ldr	x0, [sp, #24]
    218c:	ldr	x0, [x0, #24]
    2190:	mov	x2, x0
    2194:	mov	x0, x3
    2198:	bl	0 <ext2fs_write_inode>
    219c:	str	x0, [sp, #232]
    21a0:	ldr	x0, [sp, #232]
    21a4:	cmp	x0, #0x0
    21a8:	b	2210 <extent_node_split+0x8c8>
    21ac:	nop
    21b0:	b	2210 <extent_node_split+0x8c8>
    21b4:	nop
    21b8:	b	2210 <extent_node_split+0x8c8>
    21bc:	nop
    21c0:	b	2210 <extent_node_split+0x8c8>
    21c4:	nop
    21c8:	b	2210 <extent_node_split+0x8c8>
    21cc:	nop
    21d0:	b	2210 <extent_node_split+0x8c8>
    21d4:	nop
    21d8:	b	2210 <extent_node_split+0x8c8>
    21dc:	nop
    21e0:	b	2210 <extent_node_split+0x8c8>
    21e4:	nop
    21e8:	b	2210 <extent_node_split+0x8c8>
    21ec:	nop
    21f0:	b	2210 <extent_node_split+0x8c8>
    21f4:	nop
    21f8:	b	2210 <extent_node_split+0x8c8>
    21fc:	nop
    2200:	b	2210 <extent_node_split+0x8c8>
    2204:	nop
    2208:	b	2210 <extent_node_split+0x8c8>
    220c:	nop
    2210:	ldr	x0, [sp, #88]
    2214:	cmp	x0, #0x0
    2218:	b.eq	2224 <extent_node_split+0x8dc>  // b.none
    221c:	add	x0, sp, #0x58
    2220:	bl	0 <ext2fs_free_mem>
    2224:	ldr	x0, [sp, #216]
    2228:	bl	0 <free>
    222c:	ldr	x0, [sp, #232]
    2230:	ldp	x29, x30, [sp], #240
    2234:	ret

0000000000002238 <ext2fs_extent_node_split>:
    2238:	stp	x29, x30, [sp, #-32]!
    223c:	mov	x29, sp
    2240:	str	x0, [sp, #24]
    2244:	mov	w1, #0x0                   	// #0
    2248:	ldr	x0, [sp, #24]
    224c:	bl	1948 <extent_node_split>
    2250:	ldp	x29, x30, [sp], #32
    2254:	ret

0000000000002258 <ext2fs_extent_insert>:
    2258:	stp	x29, x30, [sp, #-80]!
    225c:	mov	x29, sp
    2260:	str	x0, [sp, #40]
    2264:	str	w1, [sp, #36]
    2268:	str	x2, [sp, #24]
    226c:	ldr	x0, [sp, #40]
    2270:	ldr	x1, [x0]
    2274:	mov	x0, #0xb712                	// #46866
    2278:	movk	x0, #0x7f2b, lsl #16
    227c:	cmp	x1, x0
    2280:	b.eq	2290 <ext2fs_extent_insert+0x38>  // b.none
    2284:	mov	x0, #0xb712                	// #46866
    2288:	movk	x0, #0x7f2b, lsl #16
    228c:	b	24ec <ext2fs_extent_insert+0x294>
    2290:	ldr	x0, [sp, #40]
    2294:	ldr	x0, [x0, #8]
    2298:	ldr	w0, [x0, #16]
    229c:	and	w0, w0, #0x1
    22a0:	cmp	w0, #0x0
    22a4:	b.ne	22b4 <ext2fs_extent_insert+0x5c>  // b.any
    22a8:	mov	x0, #0xb715                	// #46869
    22ac:	movk	x0, #0x7f2b, lsl #16
    22b0:	b	24ec <ext2fs_extent_insert+0x294>
    22b4:	ldr	x0, [sp, #40]
    22b8:	ldr	x0, [x0, #176]
    22bc:	cmp	x0, #0x0
    22c0:	b.ne	22d0 <ext2fs_extent_insert+0x78>  // b.any
    22c4:	mov	x0, #0xb780                	// #46976
    22c8:	movk	x0, #0x7f2b, lsl #16
    22cc:	b	24ec <ext2fs_extent_insert+0x294>
    22d0:	ldr	x0, [sp, #40]
    22d4:	ldr	x2, [x0, #176]
    22d8:	ldr	x0, [sp, #40]
    22dc:	ldr	w0, [x0, #164]
    22e0:	sxtw	x1, w0
    22e4:	mov	x0, x1
    22e8:	lsl	x0, x0, #1
    22ec:	add	x0, x0, x1
    22f0:	lsl	x0, x0, #4
    22f4:	add	x0, x2, x0
    22f8:	str	x0, [sp, #72]
    22fc:	ldr	x0, [sp, #72]
    2300:	ldr	w1, [x0, #8]
    2304:	ldr	x0, [sp, #72]
    2308:	ldr	w0, [x0, #12]
    230c:	cmp	w1, w0
    2310:	b.lt	2380 <ext2fs_extent_insert+0x128>  // b.tstop
    2314:	ldr	w0, [sp, #36]
    2318:	and	w0, w0, #0x2
    231c:	cmp	w0, #0x0
    2320:	b.eq	2330 <ext2fs_extent_insert+0xd8>  // b.none
    2324:	mov	x0, #0xb782                	// #46978
    2328:	movk	x0, #0x7f2b, lsl #16
    232c:	b	24ec <ext2fs_extent_insert+0x294>
    2330:	mov	w1, #0x1                   	// #1
    2334:	ldr	x0, [sp, #40]
    2338:	bl	1948 <extent_node_split>
    233c:	str	x0, [sp, #56]
    2340:	ldr	x0, [sp, #56]
    2344:	cmp	x0, #0x0
    2348:	b.eq	2354 <ext2fs_extent_insert+0xfc>  // b.none
    234c:	ldr	x0, [sp, #56]
    2350:	b	24ec <ext2fs_extent_insert+0x294>
    2354:	ldr	x0, [sp, #40]
    2358:	ldr	x2, [x0, #176]
    235c:	ldr	x0, [sp, #40]
    2360:	ldr	w0, [x0, #164]
    2364:	sxtw	x1, w0
    2368:	mov	x0, x1
    236c:	lsl	x0, x0, #1
    2370:	add	x0, x0, x1
    2374:	lsl	x0, x0, #4
    2378:	add	x0, x2, x0
    237c:	str	x0, [sp, #72]
    2380:	ldr	x0, [sp, #72]
    2384:	ldr	x0, [x0]
    2388:	str	x0, [sp, #48]
    238c:	ldr	x0, [sp, #72]
    2390:	ldr	x0, [x0, #40]
    2394:	cmp	x0, #0x0
    2398:	b.eq	23dc <ext2fs_extent_insert+0x184>  // b.none
    239c:	ldr	x0, [sp, #72]
    23a0:	ldr	x0, [x0, #40]
    23a4:	str	x0, [sp, #64]
    23a8:	ldr	w0, [sp, #36]
    23ac:	and	w0, w0, #0x1
    23b0:	cmp	w0, #0x0
    23b4:	b.eq	23f4 <ext2fs_extent_insert+0x19c>  // b.none
    23b8:	ldr	x0, [sp, #64]
    23bc:	add	x0, x0, #0xc
    23c0:	str	x0, [sp, #64]
    23c4:	ldr	x0, [sp, #72]
    23c8:	ldr	w0, [x0, #16]
    23cc:	sub	w1, w0, #0x1
    23d0:	ldr	x0, [sp, #72]
    23d4:	str	w1, [x0, #16]
    23d8:	b	23f4 <ext2fs_extent_insert+0x19c>
    23dc:	ldr	x0, [sp, #48]
    23e0:	add	x0, x0, #0xc
    23e4:	str	x0, [sp, #64]
    23e8:	ldr	x0, [sp, #72]
    23ec:	mov	w1, #0xffffffff            	// #-1
    23f0:	str	w1, [x0, #16]
    23f4:	ldr	x0, [sp, #72]
    23f8:	ldr	x1, [sp, #64]
    23fc:	str	x1, [x0, #40]
    2400:	ldr	x0, [sp, #72]
    2404:	ldr	w0, [x0, #16]
    2408:	cmp	w0, #0x0
    240c:	b.lt	2448 <ext2fs_extent_insert+0x1f0>  // b.tstop
    2410:	ldr	x0, [sp, #64]
    2414:	add	x3, x0, #0xc
    2418:	ldr	x0, [sp, #72]
    241c:	ldr	w0, [x0, #16]
    2420:	add	w0, w0, #0x1
    2424:	sxtw	x1, w0
    2428:	mov	x0, x1
    242c:	lsl	x0, x0, #1
    2430:	add	x0, x0, x1
    2434:	lsl	x0, x0, #2
    2438:	mov	x2, x0
    243c:	ldr	x1, [sp, #64]
    2440:	mov	x0, x3
    2444:	bl	0 <memmove>
    2448:	ldr	x0, [sp, #72]
    244c:	ldr	w0, [x0, #16]
    2450:	add	w1, w0, #0x1
    2454:	ldr	x0, [sp, #72]
    2458:	str	w1, [x0, #16]
    245c:	ldr	x0, [sp, #72]
    2460:	ldr	w0, [x0, #8]
    2464:	add	w1, w0, #0x1
    2468:	ldr	x0, [sp, #72]
    246c:	str	w1, [x0, #8]
    2470:	ldr	x0, [sp, #72]
    2474:	ldr	x0, [x0]
    2478:	str	x0, [sp, #48]
    247c:	ldr	x0, [sp, #72]
    2480:	ldr	w0, [x0, #8]
    2484:	and	w1, w0, #0xffff
    2488:	ldr	x0, [sp, #48]
    248c:	strh	w1, [x0, #2]
    2490:	ldr	x2, [sp, #24]
    2494:	mov	w1, #0x0                   	// #0
    2498:	ldr	x0, [sp, #40]
    249c:	bl	16c4 <ext2fs_extent_replace>
    24a0:	str	x0, [sp, #56]
    24a4:	ldr	x0, [sp, #56]
    24a8:	cmp	x0, #0x0
    24ac:	b.ne	24d0 <ext2fs_extent_insert+0x278>  // b.any
    24b0:	ldr	x0, [sp, #40]
    24b4:	bl	10c0 <update_path>
    24b8:	str	x0, [sp, #56]
    24bc:	ldr	x0, [sp, #56]
    24c0:	cmp	x0, #0x0
    24c4:	b.ne	24d8 <ext2fs_extent_insert+0x280>  // b.any
    24c8:	mov	x0, #0x0                   	// #0
    24cc:	b	24ec <ext2fs_extent_insert+0x294>
    24d0:	nop
    24d4:	b	24dc <ext2fs_extent_insert+0x284>
    24d8:	nop
    24dc:	mov	w1, #0x0                   	// #0
    24e0:	ldr	x0, [sp, #40]
    24e4:	bl	3168 <ext2fs_extent_delete>
    24e8:	ldr	x0, [sp, #56]
    24ec:	ldp	x29, x30, [sp], #80
    24f0:	ret

00000000000024f4 <ext2fs_extent_set_bmap>:
    24f4:	stp	x29, x30, [sp, #-320]!
    24f8:	mov	x29, sp
    24fc:	str	x0, [sp, #40]
    2500:	str	x1, [sp, #32]
    2504:	str	x2, [sp, #24]
    2508:	str	w3, [sp, #20]
    250c:	str	xzr, [sp, #312]
    2510:	mov	w0, #0x1                   	// #1
    2514:	str	w0, [sp, #308]
    2518:	str	wzr, [sp, #300]
    251c:	str	wzr, [sp, #296]
    2520:	str	wzr, [sp, #292]
    2524:	str	wzr, [sp, #288]
    2528:	mov	w0, #0x8000                	// #32768
    252c:	str	w0, [sp, #284]
    2530:	ldr	x0, [sp, #40]
    2534:	ldr	x1, [x0]
    2538:	mov	x0, #0xb712                	// #46866
    253c:	movk	x0, #0x7f2b, lsl #16
    2540:	cmp	x1, x0
    2544:	b.eq	2554 <ext2fs_extent_set_bmap+0x60>  // b.none
    2548:	mov	x0, #0xb712                	// #46866
    254c:	movk	x0, #0x7f2b, lsl #16
    2550:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    2554:	ldr	x0, [sp, #40]
    2558:	ldr	x0, [x0, #8]
    255c:	ldr	w0, [x0, #16]
    2560:	and	w0, w0, #0x1
    2564:	cmp	w0, #0x0
    2568:	b.ne	2578 <ext2fs_extent_set_bmap+0x84>  // b.any
    256c:	mov	x0, #0xb715                	// #46869
    2570:	movk	x0, #0x7f2b, lsl #16
    2574:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    2578:	ldr	x0, [sp, #40]
    257c:	ldr	x0, [x0, #176]
    2580:	cmp	x0, #0x0
    2584:	b.ne	2594 <ext2fs_extent_set_bmap+0xa0>  // b.any
    2588:	mov	x0, #0xb780                	// #46976
    258c:	movk	x0, #0x7f2b, lsl #16
    2590:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    2594:	ldr	x0, [sp, #40]
    2598:	ldr	x2, [x0, #176]
    259c:	ldr	x0, [sp, #40]
    25a0:	ldr	w0, [x0, #164]
    25a4:	sxtw	x1, w0
    25a8:	mov	x0, x1
    25ac:	lsl	x0, x0, #1
    25b0:	add	x0, x0, x1
    25b4:	lsl	x0, x0, #4
    25b8:	add	x0, x2, x0
    25bc:	str	x0, [sp, #264]
    25c0:	ldr	w0, [sp, #20]
    25c4:	and	w0, w0, #0x1
    25c8:	cmp	w0, #0x0
    25cc:	b.eq	25e0 <ext2fs_extent_set_bmap+0xec>  // b.none
    25d0:	mov	w0, #0x1                   	// #1
    25d4:	str	w0, [sp, #288]
    25d8:	mov	w0, #0x7fff                	// #32767
    25dc:	str	w0, [sp, #284]
    25e0:	ldr	x0, [sp, #24]
    25e4:	cmp	x0, #0x0
    25e8:	b.eq	2624 <ext2fs_extent_set_bmap+0x130>  // b.none
    25ec:	mov	w0, #0x1                   	// #1
    25f0:	str	w0, [sp, #144]
    25f4:	ldr	x0, [sp, #24]
    25f8:	str	x0, [sp, #128]
    25fc:	ldr	x0, [sp, #32]
    2600:	str	x0, [sp, #136]
    2604:	mov	w0, #0x1                   	// #1
    2608:	str	w0, [sp, #148]
    260c:	ldr	w0, [sp, #288]
    2610:	cmp	w0, #0x0
    2614:	b.eq	2624 <ext2fs_extent_set_bmap+0x130>  // b.none
    2618:	ldr	w0, [sp, #148]
    261c:	orr	w0, w0, #0x2
    2620:	str	w0, [sp, #148]
    2624:	ldr	x0, [sp, #40]
    2628:	ldr	w0, [x0, #168]
    262c:	cmp	w0, #0x0
    2630:	b.ne	2664 <ext2fs_extent_set_bmap+0x170>  // b.any
    2634:	ldr	x0, [sp, #264]
    2638:	ldr	w0, [x0, #8]
    263c:	cmp	w0, #0x0
    2640:	b.ne	2664 <ext2fs_extent_set_bmap+0x170>  // b.any
    2644:	add	x0, sp, #0x80
    2648:	mov	x2, x0
    264c:	mov	w1, #0x0                   	// #0
    2650:	ldr	x0, [sp, #40]
    2654:	bl	2258 <ext2fs_extent_insert>
    2658:	str	x0, [sp, #312]
    265c:	ldr	x0, [sp, #312]
    2660:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    2664:	add	x0, sp, #0xc8
    2668:	mov	x2, x0
    266c:	mov	w1, #0x0                   	// #0
    2670:	ldr	x0, [sp, #40]
    2674:	bl	594 <ext2fs_extent_get>
    2678:	str	x0, [sp, #312]
    267c:	ldr	x0, [sp, #312]
    2680:	cmp	x0, #0x0
    2684:	b.eq	26b4 <ext2fs_extent_set_bmap+0x1c0>  // b.none
    2688:	ldr	x1, [sp, #312]
    268c:	mov	x0, #0xb780                	// #46976
    2690:	movk	x0, #0x7f2b, lsl #16
    2694:	cmp	x1, x0
    2698:	b.eq	26a4 <ext2fs_extent_set_bmap+0x1b0>  // b.none
    269c:	ldr	x0, [sp, #312]
    26a0:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    26a4:	add	x0, sp, #0xc8
    26a8:	mov	x2, #0x18                  	// #24
    26ac:	mov	w1, #0x0                   	// #0
    26b0:	bl	0 <memset>
    26b4:	add	x0, sp, #0x50
    26b8:	mov	x1, x0
    26bc:	ldr	x0, [sp, #40]
    26c0:	bl	3430 <ext2fs_extent_get_info>
    26c4:	str	x0, [sp, #312]
    26c8:	ldr	x0, [sp, #312]
    26cc:	cmp	x0, #0x0
    26d0:	b.eq	26dc <ext2fs_extent_set_bmap+0x1e8>  // b.none
    26d4:	ldr	x0, [sp, #312]
    26d8:	b	3160 <ext2fs_extent_set_bmap+0xc6c>
    26dc:	ldr	w1, [sp, #96]
    26e0:	ldr	w0, [sp, #84]
    26e4:	sub	w0, w1, w0
    26e8:	str	w0, [sp, #304]
    26ec:	ldr	x0, [sp, #208]
    26f0:	str	x0, [sp, #256]
    26f4:	ldr	x1, [sp, #32]
    26f8:	ldr	x0, [sp, #40]
    26fc:	bl	145c <ext2fs_extent_goto>
    2700:	str	x0, [sp, #312]
    2704:	ldr	x0, [sp, #312]
    2708:	cmp	x0, #0x0
    270c:	b.eq	2738 <ext2fs_extent_set_bmap+0x244>  // b.none
    2710:	ldr	x1, [sp, #312]
    2714:	mov	x0, #0xb784                	// #46980
    2718:	movk	x0, #0x7f2b, lsl #16
    271c:	cmp	x1, x0
    2720:	b.ne	3080 <ext2fs_extent_set_bmap+0xb8c>  // b.any
    2724:	str	xzr, [sp, #312]
    2728:	str	wzr, [sp, #308]
    272c:	ldr	x0, [sp, #24]
    2730:	cmp	x0, #0x0
    2734:	b.eq	3088 <ext2fs_extent_set_bmap+0xb94>  // b.none
    2738:	add	x0, sp, #0xc8
    273c:	mov	x2, x0
    2740:	mov	w1, #0x0                   	// #0
    2744:	ldr	x0, [sp, #40]
    2748:	bl	594 <ext2fs_extent_get>
    274c:	str	x0, [sp, #312]
    2750:	ldr	x0, [sp, #312]
    2754:	cmp	x0, #0x0
    2758:	b.ne	3090 <ext2fs_extent_set_bmap+0xb9c>  // b.any
    275c:	ldr	w0, [sp, #220]
    2760:	and	w0, w0, #0x2
    2764:	cmp	w0, #0x0
    2768:	b.eq	2774 <ext2fs_extent_set_bmap+0x280>  // b.none
    276c:	mov	w0, #0x1                   	// #1
    2770:	str	w0, [sp, #300]
    2774:	add	x0, sp, #0xb0
    2778:	mov	x2, x0
    277c:	mov	w1, #0x7                   	// #7
    2780:	ldr	x0, [sp, #40]
    2784:	bl	594 <ext2fs_extent_get>
    2788:	str	x0, [sp, #312]
    278c:	ldr	x0, [sp, #312]
    2790:	cmp	x0, #0x0
    2794:	b.eq	27b4 <ext2fs_extent_set_bmap+0x2c0>  // b.none
    2798:	str	wzr, [sp, #276]
    279c:	ldr	x1, [sp, #312]
    27a0:	mov	x0, #0xb77c                	// #46972
    27a4:	movk	x0, #0x7f2b, lsl #16
    27a8:	cmp	x1, x0
    27ac:	b.eq	27d4 <ext2fs_extent_set_bmap+0x2e0>  // b.none
    27b0:	b	312c <ext2fs_extent_set_bmap+0xc38>
    27b4:	mov	w0, #0x1                   	// #1
    27b8:	str	w0, [sp, #276]
    27bc:	ldr	w0, [sp, #196]
    27c0:	and	w0, w0, #0x2
    27c4:	cmp	w0, #0x0
    27c8:	b.eq	27d4 <ext2fs_extent_set_bmap+0x2e0>  // b.none
    27cc:	mov	w0, #0x1                   	// #1
    27d0:	str	w0, [sp, #292]
    27d4:	ldr	x1, [sp, #32]
    27d8:	ldr	x0, [sp, #40]
    27dc:	bl	145c <ext2fs_extent_goto>
    27e0:	str	x0, [sp, #312]
    27e4:	ldr	x0, [sp, #312]
    27e8:	cmp	x0, #0x0
    27ec:	b.eq	2804 <ext2fs_extent_set_bmap+0x310>  // b.none
    27f0:	ldr	x1, [sp, #312]
    27f4:	mov	x0, #0xb784                	// #46980
    27f8:	movk	x0, #0x7f2b, lsl #16
    27fc:	cmp	x1, x0
    2800:	b.ne	3098 <ext2fs_extent_set_bmap+0xba4>  // b.any
    2804:	add	x0, sp, #0x98
    2808:	mov	x2, x0
    280c:	mov	w1, #0x8                   	// #8
    2810:	ldr	x0, [sp, #40]
    2814:	bl	594 <ext2fs_extent_get>
    2818:	str	x0, [sp, #312]
    281c:	ldr	x0, [sp, #312]
    2820:	cmp	x0, #0x0
    2824:	b.eq	2844 <ext2fs_extent_set_bmap+0x350>  // b.none
    2828:	str	wzr, [sp, #280]
    282c:	ldr	x1, [sp, #312]
    2830:	mov	x0, #0xb77d                	// #46973
    2834:	movk	x0, #0x7f2b, lsl #16
    2838:	cmp	x1, x0
    283c:	b.eq	2864 <ext2fs_extent_set_bmap+0x370>  // b.none
    2840:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2844:	mov	w0, #0x1                   	// #1
    2848:	str	w0, [sp, #280]
    284c:	ldr	w0, [sp, #172]
    2850:	and	w0, w0, #0x2
    2854:	cmp	w0, #0x0
    2858:	b.eq	2864 <ext2fs_extent_set_bmap+0x370>  // b.none
    285c:	mov	w0, #0x1                   	// #1
    2860:	str	w0, [sp, #296]
    2864:	ldr	x1, [sp, #32]
    2868:	ldr	x0, [sp, #40]
    286c:	bl	145c <ext2fs_extent_goto>
    2870:	str	x0, [sp, #312]
    2874:	ldr	x0, [sp, #312]
    2878:	cmp	x0, #0x0
    287c:	b.eq	2894 <ext2fs_extent_set_bmap+0x3a0>  // b.none
    2880:	ldr	x1, [sp, #312]
    2884:	mov	x0, #0xb784                	// #46980
    2888:	movk	x0, #0x7f2b, lsl #16
    288c:	cmp	x1, x0
    2890:	b.ne	30a0 <ext2fs_extent_set_bmap+0xbac>  // b.any
    2894:	ldr	w0, [sp, #308]
    2898:	cmp	w0, #0x0
    289c:	b.eq	28d0 <ext2fs_extent_set_bmap+0x3dc>  // b.none
    28a0:	ldr	w1, [sp, #288]
    28a4:	ldr	w0, [sp, #300]
    28a8:	cmp	w1, w0
    28ac:	b.ne	28d0 <ext2fs_extent_set_bmap+0x3dc>  // b.any
    28b0:	ldr	x1, [sp, #200]
    28b4:	ldr	x0, [sp, #208]
    28b8:	ldr	x2, [sp, #32]
    28bc:	sub	x0, x2, x0
    28c0:	add	x0, x1, x0
    28c4:	ldr	x1, [sp, #24]
    28c8:	cmp	x1, x0
    28cc:	b.eq	30a8 <ext2fs_extent_set_bmap+0xbb4>  // b.none
    28d0:	ldr	w0, [sp, #308]
    28d4:	cmp	w0, #0x0
    28d8:	b.ne	2b1c <ext2fs_extent_set_bmap+0x628>  // b.any
    28dc:	ldr	x1, [sp, #208]
    28e0:	ldr	w0, [sp, #216]
    28e4:	mov	w0, w0
    28e8:	add	x0, x1, x0
    28ec:	ldr	x1, [sp, #32]
    28f0:	cmp	x1, x0
    28f4:	b.ne	2964 <ext2fs_extent_set_bmap+0x470>  // b.any
    28f8:	ldr	x1, [sp, #200]
    28fc:	ldr	w0, [sp, #216]
    2900:	mov	w0, w0
    2904:	add	x0, x1, x0
    2908:	ldr	x1, [sp, #24]
    290c:	cmp	x1, x0
    2910:	b.ne	2964 <ext2fs_extent_set_bmap+0x470>  // b.any
    2914:	ldr	w1, [sp, #288]
    2918:	ldr	w0, [sp, #300]
    291c:	cmp	w1, w0
    2920:	b.ne	2964 <ext2fs_extent_set_bmap+0x470>  // b.any
    2924:	ldr	w0, [sp, #216]
    2928:	mov	w1, w0
    292c:	ldr	w0, [sp, #284]
    2930:	sub	w0, w0, #0x1
    2934:	cmp	w1, w0
    2938:	b.ge	2964 <ext2fs_extent_set_bmap+0x470>  // b.tcont
    293c:	ldr	w0, [sp, #216]
    2940:	add	w0, w0, #0x1
    2944:	str	w0, [sp, #216]
    2948:	add	x0, sp, #0xc8
    294c:	mov	x2, x0
    2950:	mov	w1, #0x0                   	// #0
    2954:	ldr	x0, [sp, #40]
    2958:	bl	16c4 <ext2fs_extent_replace>
    295c:	str	x0, [sp, #312]
    2960:	b	2af8 <ext2fs_extent_set_bmap+0x604>
    2964:	ldr	x0, [sp, #208]
    2968:	sub	x0, x0, #0x1
    296c:	ldr	x1, [sp, #32]
    2970:	cmp	x1, x0
    2974:	b.ne	29f4 <ext2fs_extent_set_bmap+0x500>  // b.any
    2978:	ldr	x0, [sp, #200]
    297c:	sub	x0, x0, #0x1
    2980:	ldr	x1, [sp, #24]
    2984:	cmp	x1, x0
    2988:	b.ne	29f4 <ext2fs_extent_set_bmap+0x500>  // b.any
    298c:	ldr	w1, [sp, #288]
    2990:	ldr	w0, [sp, #300]
    2994:	cmp	w1, w0
    2998:	b.ne	29f4 <ext2fs_extent_set_bmap+0x500>  // b.any
    299c:	ldr	w0, [sp, #216]
    29a0:	mov	w1, w0
    29a4:	ldr	w0, [sp, #284]
    29a8:	sub	w0, w0, #0x1
    29ac:	cmp	w1, w0
    29b0:	b.ge	29f4 <ext2fs_extent_set_bmap+0x500>  // b.tcont
    29b4:	ldr	w0, [sp, #216]
    29b8:	add	w0, w0, #0x1
    29bc:	str	w0, [sp, #216]
    29c0:	ldr	x0, [sp, #208]
    29c4:	sub	x0, x0, #0x1
    29c8:	str	x0, [sp, #208]
    29cc:	ldr	x0, [sp, #200]
    29d0:	sub	x0, x0, #0x1
    29d4:	str	x0, [sp, #200]
    29d8:	add	x0, sp, #0xc8
    29dc:	mov	x2, x0
    29e0:	mov	w1, #0x0                   	// #0
    29e4:	ldr	x0, [sp, #40]
    29e8:	bl	16c4 <ext2fs_extent_replace>
    29ec:	str	x0, [sp, #312]
    29f0:	b	2af8 <ext2fs_extent_set_bmap+0x604>
    29f4:	ldr	w0, [sp, #276]
    29f8:	cmp	w0, #0x0
    29fc:	b.eq	2ab4 <ext2fs_extent_set_bmap+0x5c0>  // b.none
    2a00:	ldr	x0, [sp, #184]
    2a04:	sub	x0, x0, #0x1
    2a08:	ldr	x1, [sp, #32]
    2a0c:	cmp	x1, x0
    2a10:	b.ne	2ab4 <ext2fs_extent_set_bmap+0x5c0>  // b.any
    2a14:	ldr	x0, [sp, #176]
    2a18:	sub	x0, x0, #0x1
    2a1c:	ldr	x1, [sp, #24]
    2a20:	cmp	x1, x0
    2a24:	b.ne	2ab4 <ext2fs_extent_set_bmap+0x5c0>  // b.any
    2a28:	ldr	w1, [sp, #288]
    2a2c:	ldr	w0, [sp, #292]
    2a30:	cmp	w1, w0
    2a34:	b.ne	2ab4 <ext2fs_extent_set_bmap+0x5c0>  // b.any
    2a38:	ldr	w0, [sp, #192]
    2a3c:	mov	w1, w0
    2a40:	ldr	w0, [sp, #284]
    2a44:	sub	w0, w0, #0x1
    2a48:	cmp	w1, w0
    2a4c:	b.ge	2ab4 <ext2fs_extent_set_bmap+0x5c0>  // b.tcont
    2a50:	add	x0, sp, #0xb0
    2a54:	mov	x2, x0
    2a58:	mov	w1, #0x7                   	// #7
    2a5c:	ldr	x0, [sp, #40]
    2a60:	bl	594 <ext2fs_extent_get>
    2a64:	str	x0, [sp, #312]
    2a68:	ldr	x0, [sp, #312]
    2a6c:	cmp	x0, #0x0
    2a70:	b.ne	30b0 <ext2fs_extent_set_bmap+0xbbc>  // b.any
    2a74:	ldr	w0, [sp, #192]
    2a78:	add	w0, w0, #0x1
    2a7c:	str	w0, [sp, #192]
    2a80:	ldr	x0, [sp, #184]
    2a84:	sub	x0, x0, #0x1
    2a88:	str	x0, [sp, #184]
    2a8c:	ldr	x0, [sp, #176]
    2a90:	sub	x0, x0, #0x1
    2a94:	str	x0, [sp, #176]
    2a98:	add	x0, sp, #0xb0
    2a9c:	mov	x2, x0
    2aa0:	mov	w1, #0x0                   	// #0
    2aa4:	ldr	x0, [sp, #40]
    2aa8:	bl	16c4 <ext2fs_extent_replace>
    2aac:	str	x0, [sp, #312]
    2ab0:	b	2af8 <ext2fs_extent_set_bmap+0x604>
    2ab4:	ldr	x0, [sp, #208]
    2ab8:	ldr	x1, [sp, #32]
    2abc:	cmp	x1, x0
    2ac0:	b.cs	2ae0 <ext2fs_extent_set_bmap+0x5ec>  // b.hs, b.nlast
    2ac4:	add	x0, sp, #0x80
    2ac8:	mov	x2, x0
    2acc:	mov	w1, #0x0                   	// #0
    2ad0:	ldr	x0, [sp, #40]
    2ad4:	bl	2258 <ext2fs_extent_insert>
    2ad8:	str	x0, [sp, #312]
    2adc:	b	2af8 <ext2fs_extent_set_bmap+0x604>
    2ae0:	add	x0, sp, #0x80
    2ae4:	mov	x2, x0
    2ae8:	mov	w1, #0x1                   	// #1
    2aec:	ldr	x0, [sp, #40]
    2af0:	bl	2258 <ext2fs_extent_insert>
    2af4:	str	x0, [sp, #312]
    2af8:	ldr	x0, [sp, #312]
    2afc:	cmp	x0, #0x0
    2b00:	b.ne	30b8 <ext2fs_extent_set_bmap+0xbc4>  // b.any
    2b04:	ldr	x0, [sp, #40]
    2b08:	bl	1484 <ext2fs_extent_fix_parents>
    2b0c:	str	x0, [sp, #312]
    2b10:	ldr	x0, [sp, #312]
    2b14:	cmp	x0, #0x0
    2b18:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2b1c:	ldr	x0, [sp, #208]
    2b20:	ldr	x1, [sp, #32]
    2b24:	cmp	x1, x0
    2b28:	b.ne	2bb0 <ext2fs_extent_set_bmap+0x6bc>  // b.any
    2b2c:	ldr	w0, [sp, #216]
    2b30:	cmp	w0, #0x1
    2b34:	b.ne	2bb0 <ext2fs_extent_set_bmap+0x6bc>  // b.any
    2b38:	ldr	x0, [sp, #24]
    2b3c:	cmp	x0, #0x0
    2b40:	b.eq	2b60 <ext2fs_extent_set_bmap+0x66c>  // b.none
    2b44:	add	x0, sp, #0x80
    2b48:	mov	x2, x0
    2b4c:	mov	w1, #0x0                   	// #0
    2b50:	ldr	x0, [sp, #40]
    2b54:	bl	16c4 <ext2fs_extent_replace>
    2b58:	str	x0, [sp, #312]
    2b5c:	b	2ba4 <ext2fs_extent_set_bmap+0x6b0>
    2b60:	mov	w1, #0x0                   	// #0
    2b64:	ldr	x0, [sp, #40]
    2b68:	bl	3168 <ext2fs_extent_delete>
    2b6c:	str	x0, [sp, #312]
    2b70:	ldr	x0, [sp, #312]
    2b74:	cmp	x0, #0x0
    2b78:	b.ne	30c0 <ext2fs_extent_set_bmap+0xbcc>  // b.any
    2b7c:	ldr	x0, [sp, #40]
    2b80:	bl	1484 <ext2fs_extent_fix_parents>
    2b84:	str	x0, [sp, #248]
    2b88:	ldr	x1, [sp, #248]
    2b8c:	mov	x0, #0xb780                	// #46976
    2b90:	movk	x0, #0x7f2b, lsl #16
    2b94:	cmp	x1, x0
    2b98:	b.eq	2ba4 <ext2fs_extent_set_bmap+0x6b0>  // b.none
    2b9c:	ldr	x0, [sp, #248]
    2ba0:	str	x0, [sp, #312]
    2ba4:	ldr	x0, [sp, #312]
    2ba8:	cmp	x0, #0x0
    2bac:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2bb0:	ldr	x1, [sp, #208]
    2bb4:	ldr	w0, [sp, #216]
    2bb8:	mov	w0, w0
    2bbc:	add	x0, x1, x0
    2bc0:	sub	x0, x0, #0x1
    2bc4:	ldr	x1, [sp, #32]
    2bc8:	cmp	x1, x0
    2bcc:	b.ne	2d54 <ext2fs_extent_set_bmap+0x860>  // b.any
    2bd0:	ldr	x0, [sp, #24]
    2bd4:	cmp	x0, #0x0
    2bd8:	b.eq	2d24 <ext2fs_extent_set_bmap+0x830>  // b.none
    2bdc:	ldr	w0, [sp, #276]
    2be0:	cmp	w0, #0x0
    2be4:	b.eq	2ca8 <ext2fs_extent_set_bmap+0x7b4>  // b.none
    2be8:	ldr	x0, [sp, #184]
    2bec:	sub	x0, x0, #0x1
    2bf0:	ldr	x1, [sp, #32]
    2bf4:	cmp	x1, x0
    2bf8:	b.ne	2ca8 <ext2fs_extent_set_bmap+0x7b4>  // b.any
    2bfc:	ldr	x0, [sp, #176]
    2c00:	sub	x0, x0, #0x1
    2c04:	ldr	x1, [sp, #24]
    2c08:	cmp	x1, x0
    2c0c:	b.ne	2ca8 <ext2fs_extent_set_bmap+0x7b4>  // b.any
    2c10:	ldr	w1, [sp, #288]
    2c14:	ldr	w0, [sp, #292]
    2c18:	cmp	w1, w0
    2c1c:	b.ne	2ca8 <ext2fs_extent_set_bmap+0x7b4>  // b.any
    2c20:	ldr	w0, [sp, #192]
    2c24:	mov	w1, w0
    2c28:	ldr	w0, [sp, #284]
    2c2c:	sub	w0, w0, #0x1
    2c30:	cmp	w1, w0
    2c34:	b.ge	2ca8 <ext2fs_extent_set_bmap+0x7b4>  // b.tcont
    2c38:	add	x0, sp, #0xb0
    2c3c:	mov	x2, x0
    2c40:	mov	w1, #0x7                   	// #7
    2c44:	ldr	x0, [sp, #40]
    2c48:	bl	594 <ext2fs_extent_get>
    2c4c:	str	x0, [sp, #312]
    2c50:	ldr	x0, [sp, #312]
    2c54:	cmp	x0, #0x0
    2c58:	b.ne	30c8 <ext2fs_extent_set_bmap+0xbd4>  // b.any
    2c5c:	ldr	w0, [sp, #192]
    2c60:	add	w0, w0, #0x1
    2c64:	str	w0, [sp, #192]
    2c68:	ldr	x0, [sp, #184]
    2c6c:	sub	x0, x0, #0x1
    2c70:	str	x0, [sp, #184]
    2c74:	ldr	x0, [sp, #176]
    2c78:	sub	x0, x0, #0x1
    2c7c:	str	x0, [sp, #176]
    2c80:	add	x0, sp, #0xb0
    2c84:	mov	x2, x0
    2c88:	mov	w1, #0x0                   	// #0
    2c8c:	ldr	x0, [sp, #40]
    2c90:	bl	16c4 <ext2fs_extent_replace>
    2c94:	str	x0, [sp, #312]
    2c98:	ldr	x0, [sp, #312]
    2c9c:	cmp	x0, #0x0
    2ca0:	b.eq	2cc0 <ext2fs_extent_set_bmap+0x7cc>  // b.none
    2ca4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2ca8:	add	x0, sp, #0x80
    2cac:	mov	x2, x0
    2cb0:	mov	w1, #0x1                   	// #1
    2cb4:	ldr	x0, [sp, #40]
    2cb8:	bl	2258 <ext2fs_extent_insert>
    2cbc:	str	x0, [sp, #312]
    2cc0:	ldr	x0, [sp, #312]
    2cc4:	cmp	x0, #0x0
    2cc8:	b.ne	30d0 <ext2fs_extent_set_bmap+0xbdc>  // b.any
    2ccc:	ldr	x0, [sp, #40]
    2cd0:	bl	1484 <ext2fs_extent_fix_parents>
    2cd4:	str	x0, [sp, #312]
    2cd8:	ldr	x0, [sp, #312]
    2cdc:	cmp	x0, #0x0
    2ce0:	b.ne	30d8 <ext2fs_extent_set_bmap+0xbe4>  // b.any
    2ce4:	ldr	x1, [sp, #32]
    2ce8:	ldr	x0, [sp, #40]
    2cec:	bl	145c <ext2fs_extent_goto>
    2cf0:	str	x0, [sp, #312]
    2cf4:	ldr	x0, [sp, #312]
    2cf8:	cmp	x0, #0x0
    2cfc:	b.ne	30e0 <ext2fs_extent_set_bmap+0xbec>  // b.any
    2d00:	add	x0, sp, #0xc8
    2d04:	mov	x2, x0
    2d08:	mov	w1, #0x0                   	// #0
    2d0c:	ldr	x0, [sp, #40]
    2d10:	bl	594 <ext2fs_extent_get>
    2d14:	str	x0, [sp, #312]
    2d18:	ldr	x0, [sp, #312]
    2d1c:	cmp	x0, #0x0
    2d20:	b.ne	30e8 <ext2fs_extent_set_bmap+0xbf4>  // b.any
    2d24:	ldr	w0, [sp, #216]
    2d28:	sub	w0, w0, #0x1
    2d2c:	str	w0, [sp, #216]
    2d30:	add	x0, sp, #0xc8
    2d34:	mov	x2, x0
    2d38:	mov	w1, #0x0                   	// #0
    2d3c:	ldr	x0, [sp, #40]
    2d40:	bl	16c4 <ext2fs_extent_replace>
    2d44:	str	x0, [sp, #312]
    2d48:	ldr	x0, [sp, #312]
    2d4c:	cmp	x0, #0x0
    2d50:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2d54:	ldr	x0, [sp, #208]
    2d58:	ldr	x1, [sp, #32]
    2d5c:	cmp	x1, x0
    2d60:	b.ne	2ee8 <ext2fs_extent_set_bmap+0x9f4>  // b.any
    2d64:	ldr	x0, [sp, #24]
    2d68:	cmp	x0, #0x0
    2d6c:	b.eq	2e88 <ext2fs_extent_set_bmap+0x994>  // b.none
    2d70:	ldr	w0, [sp, #280]
    2d74:	cmp	w0, #0x0
    2d78:	b.eq	2e28 <ext2fs_extent_set_bmap+0x934>  // b.none
    2d7c:	ldr	x1, [sp, #160]
    2d80:	ldr	w0, [sp, #168]
    2d84:	mov	w0, w0
    2d88:	add	x0, x1, x0
    2d8c:	ldr	x1, [sp, #32]
    2d90:	cmp	x1, x0
    2d94:	b.ne	2e28 <ext2fs_extent_set_bmap+0x934>  // b.any
    2d98:	ldr	x1, [sp, #152]
    2d9c:	ldr	w0, [sp, #168]
    2da0:	mov	w0, w0
    2da4:	add	x0, x1, x0
    2da8:	ldr	x1, [sp, #24]
    2dac:	cmp	x1, x0
    2db0:	b.ne	2e28 <ext2fs_extent_set_bmap+0x934>  // b.any
    2db4:	ldr	w1, [sp, #288]
    2db8:	ldr	w0, [sp, #296]
    2dbc:	cmp	w1, w0
    2dc0:	b.ne	2e28 <ext2fs_extent_set_bmap+0x934>  // b.any
    2dc4:	ldr	w0, [sp, #168]
    2dc8:	mov	w1, w0
    2dcc:	ldr	w0, [sp, #284]
    2dd0:	sub	w0, w0, #0x1
    2dd4:	cmp	w1, w0
    2dd8:	b.ge	2e28 <ext2fs_extent_set_bmap+0x934>  // b.tcont
    2ddc:	add	x0, sp, #0x98
    2de0:	mov	x2, x0
    2de4:	mov	w1, #0x8                   	// #8
    2de8:	ldr	x0, [sp, #40]
    2dec:	bl	594 <ext2fs_extent_get>
    2df0:	str	x0, [sp, #312]
    2df4:	ldr	x0, [sp, #312]
    2df8:	cmp	x0, #0x0
    2dfc:	b.ne	30f0 <ext2fs_extent_set_bmap+0xbfc>  // b.any
    2e00:	ldr	w0, [sp, #168]
    2e04:	add	w0, w0, #0x1
    2e08:	str	w0, [sp, #168]
    2e0c:	add	x0, sp, #0x98
    2e10:	mov	x2, x0
    2e14:	mov	w1, #0x0                   	// #0
    2e18:	ldr	x0, [sp, #40]
    2e1c:	bl	16c4 <ext2fs_extent_replace>
    2e20:	str	x0, [sp, #312]
    2e24:	b	2e40 <ext2fs_extent_set_bmap+0x94c>
    2e28:	add	x0, sp, #0x80
    2e2c:	mov	x2, x0
    2e30:	mov	w1, #0x0                   	// #0
    2e34:	ldr	x0, [sp, #40]
    2e38:	bl	2258 <ext2fs_extent_insert>
    2e3c:	str	x0, [sp, #312]
    2e40:	ldr	x0, [sp, #312]
    2e44:	cmp	x0, #0x0
    2e48:	b.ne	30f8 <ext2fs_extent_set_bmap+0xc04>  // b.any
    2e4c:	ldr	x0, [sp, #40]
    2e50:	bl	1484 <ext2fs_extent_fix_parents>
    2e54:	str	x0, [sp, #312]
    2e58:	ldr	x0, [sp, #312]
    2e5c:	cmp	x0, #0x0
    2e60:	b.ne	3100 <ext2fs_extent_set_bmap+0xc0c>  // b.any
    2e64:	add	x0, sp, #0xc8
    2e68:	mov	x2, x0
    2e6c:	mov	w1, #0x7                   	// #7
    2e70:	ldr	x0, [sp, #40]
    2e74:	bl	594 <ext2fs_extent_get>
    2e78:	str	x0, [sp, #312]
    2e7c:	ldr	x0, [sp, #312]
    2e80:	cmp	x0, #0x0
    2e84:	b.ne	3108 <ext2fs_extent_set_bmap+0xc14>  // b.any
    2e88:	ldr	x0, [sp, #200]
    2e8c:	add	x0, x0, #0x1
    2e90:	str	x0, [sp, #200]
    2e94:	ldr	x0, [sp, #208]
    2e98:	add	x0, x0, #0x1
    2e9c:	str	x0, [sp, #208]
    2ea0:	ldr	w0, [sp, #216]
    2ea4:	sub	w0, w0, #0x1
    2ea8:	str	w0, [sp, #216]
    2eac:	add	x0, sp, #0xc8
    2eb0:	mov	x2, x0
    2eb4:	mov	w1, #0x0                   	// #0
    2eb8:	ldr	x0, [sp, #40]
    2ebc:	bl	16c4 <ext2fs_extent_replace>
    2ec0:	str	x0, [sp, #312]
    2ec4:	ldr	x0, [sp, #312]
    2ec8:	cmp	x0, #0x0
    2ecc:	b.ne	3110 <ext2fs_extent_set_bmap+0xc1c>  // b.any
    2ed0:	ldr	x0, [sp, #40]
    2ed4:	bl	1484 <ext2fs_extent_fix_parents>
    2ed8:	str	x0, [sp, #312]
    2edc:	ldr	x0, [sp, #312]
    2ee0:	cmp	x0, #0x0
    2ee4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    2ee8:	ldr	x0, [sp, #208]
    2eec:	str	x0, [sp, #240]
    2ef0:	ldr	w0, [sp, #216]
    2ef4:	str	w0, [sp, #236]
    2ef8:	add	x2, sp, #0x38
    2efc:	add	x3, sp, #0xc8
    2f00:	ldp	x0, x1, [x3]
    2f04:	stp	x0, x1, [x2]
    2f08:	ldr	x0, [x3, #16]
    2f0c:	str	x0, [x2, #16]
    2f10:	ldr	x0, [sp, #32]
    2f14:	mov	w1, w0
    2f18:	ldr	x0, [sp, #208]
    2f1c:	sub	w0, w1, w0
    2f20:	str	w0, [sp, #216]
    2f24:	add	x0, sp, #0xc8
    2f28:	mov	x2, x0
    2f2c:	mov	w1, #0x0                   	// #0
    2f30:	ldr	x0, [sp, #40]
    2f34:	bl	16c4 <ext2fs_extent_replace>
    2f38:	str	x0, [sp, #312]
    2f3c:	ldr	x0, [sp, #312]
    2f40:	cmp	x0, #0x0
    2f44:	b.ne	3118 <ext2fs_extent_set_bmap+0xc24>  // b.any
    2f48:	ldr	x0, [sp, #24]
    2f4c:	cmp	x0, #0x0
    2f50:	b.eq	2fac <ext2fs_extent_set_bmap+0xab8>  // b.none
    2f54:	add	x0, sp, #0x80
    2f58:	mov	x2, x0
    2f5c:	mov	w1, #0x1                   	// #1
    2f60:	ldr	x0, [sp, #40]
    2f64:	bl	2258 <ext2fs_extent_insert>
    2f68:	str	x0, [sp, #312]
    2f6c:	ldr	x0, [sp, #312]
    2f70:	cmp	x0, #0x0
    2f74:	b.eq	2fac <ext2fs_extent_set_bmap+0xab8>  // b.none
    2f78:	ldr	x1, [sp, #240]
    2f7c:	ldr	x0, [sp, #40]
    2f80:	bl	145c <ext2fs_extent_goto>
    2f84:	str	x0, [sp, #224]
    2f88:	ldr	x0, [sp, #224]
    2f8c:	cmp	x0, #0x0
    2f90:	b.ne	3120 <ext2fs_extent_set_bmap+0xc2c>  // b.any
    2f94:	add	x0, sp, #0x38
    2f98:	mov	x2, x0
    2f9c:	mov	w1, #0x0                   	// #0
    2fa0:	ldr	x0, [sp, #40]
    2fa4:	bl	16c4 <ext2fs_extent_replace>
    2fa8:	b	3120 <ext2fs_extent_set_bmap+0xc2c>
    2fac:	ldr	x1, [sp, #200]
    2fb0:	ldr	w0, [sp, #216]
    2fb4:	add	w0, w0, #0x1
    2fb8:	mov	w0, w0
    2fbc:	add	x0, x1, x0
    2fc0:	str	x0, [sp, #200]
    2fc4:	ldr	x1, [sp, #208]
    2fc8:	ldr	w0, [sp, #216]
    2fcc:	add	w0, w0, #0x1
    2fd0:	mov	w0, w0
    2fd4:	add	x0, x1, x0
    2fd8:	str	x0, [sp, #208]
    2fdc:	ldr	w0, [sp, #216]
    2fe0:	ldr	w1, [sp, #236]
    2fe4:	sub	w0, w1, w0
    2fe8:	sub	w0, w0, #0x1
    2fec:	str	w0, [sp, #216]
    2ff0:	add	x0, sp, #0xc8
    2ff4:	mov	x2, x0
    2ff8:	mov	w1, #0x1                   	// #1
    2ffc:	ldr	x0, [sp, #40]
    3000:	bl	2258 <ext2fs_extent_insert>
    3004:	str	x0, [sp, #312]
    3008:	ldr	x0, [sp, #312]
    300c:	cmp	x0, #0x0
    3010:	b.eq	312c <ext2fs_extent_set_bmap+0xc38>  // b.none
    3014:	ldr	x0, [sp, #24]
    3018:	cmp	x0, #0x0
    301c:	b.eq	304c <ext2fs_extent_set_bmap+0xb58>  // b.none
    3020:	ldr	x0, [sp, #136]
    3024:	mov	x1, x0
    3028:	ldr	x0, [sp, #40]
    302c:	bl	145c <ext2fs_extent_goto>
    3030:	str	x0, [sp, #224]
    3034:	ldr	x0, [sp, #224]
    3038:	cmp	x0, #0x0
    303c:	b.ne	304c <ext2fs_extent_set_bmap+0xb58>  // b.any
    3040:	mov	w1, #0x0                   	// #0
    3044:	ldr	x0, [sp, #40]
    3048:	bl	3168 <ext2fs_extent_delete>
    304c:	ldr	x1, [sp, #240]
    3050:	ldr	x0, [sp, #40]
    3054:	bl	145c <ext2fs_extent_goto>
    3058:	str	x0, [sp, #224]
    305c:	ldr	x0, [sp, #224]
    3060:	cmp	x0, #0x0
    3064:	b.ne	3128 <ext2fs_extent_set_bmap+0xc34>  // b.any
    3068:	add	x0, sp, #0x38
    306c:	mov	x2, x0
    3070:	mov	w1, #0x0                   	// #0
    3074:	ldr	x0, [sp, #40]
    3078:	bl	16c4 <ext2fs_extent_replace>
    307c:	b	3128 <ext2fs_extent_set_bmap+0xc34>
    3080:	nop
    3084:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3088:	nop
    308c:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3090:	nop
    3094:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3098:	nop
    309c:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30a0:	nop
    30a4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30a8:	nop
    30ac:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30b0:	nop
    30b4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30b8:	nop
    30bc:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30c0:	nop
    30c4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30c8:	nop
    30cc:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30d0:	nop
    30d4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30d8:	nop
    30dc:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30e0:	nop
    30e4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30e8:	nop
    30ec:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30f0:	nop
    30f4:	b	312c <ext2fs_extent_set_bmap+0xc38>
    30f8:	nop
    30fc:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3100:	nop
    3104:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3108:	nop
    310c:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3110:	nop
    3114:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3118:	nop
    311c:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3120:	nop
    3124:	b	312c <ext2fs_extent_set_bmap+0xc38>
    3128:	nop
    312c:	ldr	x0, [sp, #40]
    3130:	ldr	w0, [x0, #168]
    3134:	ldr	w1, [sp, #304]
    3138:	cmp	w1, w0
    313c:	b.le	314c <ext2fs_extent_set_bmap+0xc58>
    3140:	ldr	x0, [sp, #40]
    3144:	ldr	w0, [x0, #168]
    3148:	str	w0, [sp, #304]
    314c:	ldr	x2, [sp, #256]
    3150:	ldr	w1, [sp, #304]
    3154:	ldr	x0, [sp, #40]
    3158:	bl	1224 <ext2fs_extent_goto2>
    315c:	ldr	x0, [sp, #312]
    3160:	ldp	x29, x30, [sp], #320
    3164:	ret

0000000000003168 <ext2fs_extent_delete>:
    3168:	stp	x29, x30, [sp, #-96]!
    316c:	mov	x29, sp
    3170:	str	x0, [sp, #24]
    3174:	str	w1, [sp, #20]
    3178:	str	xzr, [sp, #88]
    317c:	ldr	x0, [sp, #24]
    3180:	ldr	x1, [x0]
    3184:	mov	x0, #0xb712                	// #46866
    3188:	movk	x0, #0x7f2b, lsl #16
    318c:	cmp	x1, x0
    3190:	b.eq	31a0 <ext2fs_extent_delete+0x38>  // b.none
    3194:	mov	x0, #0xb712                	// #46866
    3198:	movk	x0, #0x7f2b, lsl #16
    319c:	b	3428 <ext2fs_extent_delete+0x2c0>
    31a0:	ldr	x0, [sp, #24]
    31a4:	ldr	x0, [x0, #8]
    31a8:	ldr	w0, [x0, #16]
    31ac:	and	w0, w0, #0x1
    31b0:	cmp	w0, #0x0
    31b4:	b.ne	31c4 <ext2fs_extent_delete+0x5c>  // b.any
    31b8:	mov	x0, #0xb715                	// #46869
    31bc:	movk	x0, #0x7f2b, lsl #16
    31c0:	b	3428 <ext2fs_extent_delete+0x2c0>
    31c4:	ldr	x0, [sp, #24]
    31c8:	ldr	x0, [x0, #176]
    31cc:	cmp	x0, #0x0
    31d0:	b.ne	31e0 <ext2fs_extent_delete+0x78>  // b.any
    31d4:	mov	x0, #0xb780                	// #46976
    31d8:	movk	x0, #0x7f2b, lsl #16
    31dc:	b	3428 <ext2fs_extent_delete+0x2c0>
    31e0:	ldr	x0, [sp, #24]
    31e4:	ldr	x2, [x0, #176]
    31e8:	ldr	x0, [sp, #24]
    31ec:	ldr	w0, [x0, #164]
    31f0:	sxtw	x1, w0
    31f4:	mov	x0, x1
    31f8:	lsl	x0, x0, #1
    31fc:	add	x0, x0, x1
    3200:	lsl	x0, x0, #4
    3204:	add	x0, x2, x0
    3208:	str	x0, [sp, #80]
    320c:	ldr	x0, [sp, #80]
    3210:	ldr	x0, [x0, #40]
    3214:	cmp	x0, #0x0
    3218:	b.ne	3228 <ext2fs_extent_delete+0xc0>  // b.any
    321c:	mov	x0, #0xb780                	// #46976
    3220:	movk	x0, #0x7f2b, lsl #16
    3224:	b	3428 <ext2fs_extent_delete+0x2c0>
    3228:	ldr	x0, [sp, #80]
    322c:	ldr	x0, [x0, #40]
    3230:	str	x0, [sp, #72]
    3234:	ldr	x0, [sp, #80]
    3238:	ldr	w0, [x0, #16]
    323c:	cmp	w0, #0x0
    3240:	b.eq	3290 <ext2fs_extent_delete+0x128>  // b.none
    3244:	ldr	x0, [sp, #72]
    3248:	add	x3, x0, #0xc
    324c:	ldr	x0, [sp, #80]
    3250:	ldr	w0, [x0, #16]
    3254:	sxtw	x1, w0
    3258:	mov	x0, x1
    325c:	lsl	x0, x0, #1
    3260:	add	x0, x0, x1
    3264:	lsl	x0, x0, #2
    3268:	mov	x2, x0
    326c:	mov	x1, x3
    3270:	ldr	x0, [sp, #72]
    3274:	bl	0 <memmove>
    3278:	ldr	x0, [sp, #80]
    327c:	ldr	w0, [x0, #16]
    3280:	sub	w1, w0, #0x1
    3284:	ldr	x0, [sp, #80]
    3288:	str	w1, [x0, #16]
    328c:	b	32b4 <ext2fs_extent_delete+0x14c>
    3290:	ldr	x0, [sp, #80]
    3294:	ldr	x0, [x0, #40]
    3298:	str	x0, [sp, #64]
    329c:	ldr	x0, [sp, #64]
    32a0:	sub	x0, x0, #0xc
    32a4:	str	x0, [sp, #64]
    32a8:	ldr	x0, [sp, #80]
    32ac:	ldr	x1, [sp, #64]
    32b0:	str	x1, [x0, #40]
    32b4:	ldr	x0, [sp, #80]
    32b8:	ldr	w0, [x0, #8]
    32bc:	sub	w1, w0, #0x1
    32c0:	ldr	x0, [sp, #80]
    32c4:	str	w1, [x0, #8]
    32c8:	ldr	x0, [sp, #80]
    32cc:	ldr	w0, [x0, #8]
    32d0:	cmp	w0, #0x0
    32d4:	b.ne	32e0 <ext2fs_extent_delete+0x178>  // b.any
    32d8:	ldr	x0, [sp, #80]
    32dc:	str	xzr, [x0, #40]
    32e0:	ldr	x0, [sp, #80]
    32e4:	ldr	w0, [x0, #8]
    32e8:	cmp	w0, #0x0
    32ec:	b.ne	33c8 <ext2fs_extent_delete+0x260>  // b.any
    32f0:	ldr	x0, [sp, #24]
    32f4:	ldr	w0, [x0, #164]
    32f8:	cmp	w0, #0x0
    32fc:	b.eq	33c8 <ext2fs_extent_delete+0x260>  // b.none
    3300:	ldr	w0, [sp, #20]
    3304:	and	w0, w0, #0x1
    3308:	cmp	w0, #0x0
    330c:	b.ne	3424 <ext2fs_extent_delete+0x2bc>  // b.any
    3310:	add	x0, sp, #0x20
    3314:	mov	x2, x0
    3318:	mov	w1, #0xb                   	// #11
    331c:	ldr	x0, [sp, #24]
    3320:	bl	594 <ext2fs_extent_get>
    3324:	str	x0, [sp, #88]
    3328:	ldr	x0, [sp, #88]
    332c:	cmp	x0, #0x0
    3330:	b.eq	333c <ext2fs_extent_delete+0x1d4>  // b.none
    3334:	ldr	x0, [sp, #88]
    3338:	b	3428 <ext2fs_extent_delete+0x2c0>
    333c:	ldr	w1, [sp, #20]
    3340:	ldr	x0, [sp, #24]
    3344:	bl	3168 <ext2fs_extent_delete>
    3348:	str	x0, [sp, #88]
    334c:	ldr	x0, [sp, #24]
    3350:	ldr	x0, [x0, #24]
    3354:	ldr	w2, [x0, #28]
    3358:	ldr	x0, [sp, #24]
    335c:	ldr	x0, [x0, #8]
    3360:	ldr	w1, [x0, #40]
    3364:	ldr	x0, [sp, #24]
    3368:	ldr	x0, [x0, #8]
    336c:	ldr	w0, [x0, #192]
    3370:	lsl	w0, w1, w0
    3374:	lsr	w1, w0, #9
    3378:	ldr	x0, [sp, #24]
    337c:	ldr	x0, [x0, #24]
    3380:	sub	w1, w2, w1
    3384:	str	w1, [x0, #28]
    3388:	ldr	x0, [sp, #24]
    338c:	ldr	x3, [x0, #8]
    3390:	ldr	x0, [sp, #24]
    3394:	ldr	w1, [x0, #16]
    3398:	ldr	x0, [sp, #24]
    339c:	ldr	x0, [x0, #24]
    33a0:	mov	x2, x0
    33a4:	mov	x0, x3
    33a8:	bl	0 <ext2fs_write_inode>
    33ac:	str	x0, [sp, #88]
    33b0:	ldr	x0, [sp, #24]
    33b4:	ldr	x0, [x0, #8]
    33b8:	ldr	x1, [sp, #32]
    33bc:	mov	w2, #0xffffffff            	// #-1
    33c0:	bl	0 <ext2fs_block_alloc_stats2>
    33c4:	b	3424 <ext2fs_extent_delete+0x2bc>
    33c8:	ldr	x0, [sp, #80]
    33cc:	ldr	x0, [x0]
    33d0:	str	x0, [sp, #56]
    33d4:	ldr	x0, [sp, #80]
    33d8:	ldr	w0, [x0, #8]
    33dc:	and	w1, w0, #0xffff
    33e0:	ldr	x0, [sp, #56]
    33e4:	strh	w1, [x0, #2]
    33e8:	ldr	x0, [sp, #80]
    33ec:	ldr	w0, [x0, #8]
    33f0:	cmp	w0, #0x0
    33f4:	b.ne	3418 <ext2fs_extent_delete+0x2b0>  // b.any
    33f8:	ldr	x0, [sp, #24]
    33fc:	ldr	w0, [x0, #164]
    3400:	cmp	w0, #0x0
    3404:	b.ne	3418 <ext2fs_extent_delete+0x2b0>  // b.any
    3408:	ldr	x0, [sp, #56]
    340c:	strh	wzr, [x0, #6]
    3410:	ldr	x0, [sp, #24]
    3414:	str	wzr, [x0, #168]
    3418:	ldr	x0, [sp, #24]
    341c:	bl	10c0 <update_path>
    3420:	str	x0, [sp, #88]
    3424:	ldr	x0, [sp, #88]
    3428:	ldp	x29, x30, [sp], #96
    342c:	ret

0000000000003430 <ext2fs_extent_get_info>:
    3430:	stp	x29, x30, [sp, #-48]!
    3434:	mov	x29, sp
    3438:	str	x0, [sp, #24]
    343c:	str	x1, [sp, #16]
    3440:	ldr	x0, [sp, #24]
    3444:	ldr	x1, [x0]
    3448:	mov	x0, #0xb712                	// #46866
    344c:	movk	x0, #0x7f2b, lsl #16
    3450:	cmp	x1, x0
    3454:	b.eq	3464 <ext2fs_extent_get_info+0x34>  // b.none
    3458:	mov	x0, #0xb712                	// #46866
    345c:	movk	x0, #0x7f2b, lsl #16
    3460:	b	35a8 <ext2fs_extent_get_info+0x178>
    3464:	mov	x2, #0x30                  	// #48
    3468:	mov	w1, #0x0                   	// #0
    346c:	ldr	x0, [sp, #16]
    3470:	bl	0 <memset>
    3474:	ldr	x0, [sp, #24]
    3478:	ldr	x2, [x0, #176]
    347c:	ldr	x0, [sp, #24]
    3480:	ldr	w0, [x0, #164]
    3484:	sxtw	x1, w0
    3488:	mov	x0, x1
    348c:	lsl	x0, x0, #1
    3490:	add	x0, x0, x1
    3494:	lsl	x0, x0, #4
    3498:	add	x0, x2, x0
    349c:	str	x0, [sp, #40]
    34a0:	ldr	x0, [sp, #40]
    34a4:	cmp	x0, #0x0
    34a8:	b.eq	3554 <ext2fs_extent_get_info+0x124>  // b.none
    34ac:	ldr	x0, [sp, #40]
    34b0:	ldr	x0, [x0, #40]
    34b4:	cmp	x0, #0x0
    34b8:	b.eq	34f4 <ext2fs_extent_get_info+0xc4>  // b.none
    34bc:	ldr	x0, [sp, #40]
    34c0:	ldr	x1, [x0, #40]
    34c4:	ldr	x0, [sp, #40]
    34c8:	ldr	x0, [x0]
    34cc:	sub	x0, x1, x0
    34d0:	mov	x1, x0
    34d4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    34d8:	movk	x0, #0xaaab
    34dc:	umulh	x0, x1, x0
    34e0:	lsr	x0, x0, #3
    34e4:	mov	w1, w0
    34e8:	ldr	x0, [sp, #16]
    34ec:	str	w1, [x0]
    34f0:	b	34fc <ext2fs_extent_get_info+0xcc>
    34f4:	ldr	x0, [sp, #16]
    34f8:	str	wzr, [x0]
    34fc:	ldr	x0, [sp, #40]
    3500:	ldr	w1, [x0, #8]
    3504:	ldr	x0, [sp, #16]
    3508:	str	w1, [x0, #8]
    350c:	ldr	x0, [sp, #40]
    3510:	ldr	w1, [x0, #12]
    3514:	ldr	x0, [sp, #16]
    3518:	str	w1, [x0, #12]
    351c:	ldr	x0, [sp, #40]
    3520:	ldr	w1, [x0, #12]
    3524:	ldr	x0, [sp, #40]
    3528:	ldr	w0, [x0, #8]
    352c:	sub	w0, w1, w0
    3530:	sxtw	x0, w0
    3534:	mov	w1, w0
    3538:	mov	w0, w1
    353c:	lsl	w0, w0, #1
    3540:	add	w0, w0, w1
    3544:	lsl	w0, w0, #2
    3548:	mov	w1, w0
    354c:	ldr	x0, [sp, #16]
    3550:	str	w1, [x0, #20]
    3554:	ldr	x0, [sp, #24]
    3558:	ldr	w1, [x0, #164]
    355c:	ldr	x0, [sp, #16]
    3560:	str	w1, [x0, #4]
    3564:	ldr	x0, [sp, #24]
    3568:	ldr	w1, [x0, #168]
    356c:	ldr	x0, [sp, #16]
    3570:	str	w1, [x0, #16]
    3574:	ldr	x0, [sp, #16]
    3578:	mov	x1, #0xffffffff            	// #4294967295
    357c:	str	x1, [x0, #24]
    3580:	ldr	x0, [sp, #16]
    3584:	mov	x1, #0xffffffffffff        	// #281474976710655
    3588:	str	x1, [x0, #32]
    358c:	ldr	x0, [sp, #16]
    3590:	mov	w1, #0x8000                	// #32768
    3594:	str	w1, [x0, #40]
    3598:	ldr	x0, [sp, #16]
    359c:	mov	w1, #0x7fff                	// #32767
    35a0:	str	w1, [x0, #44]
    35a4:	mov	x0, #0x0                   	// #0
    35a8:	ldp	x29, x30, [sp], #48
    35ac:	ret

00000000000035b0 <ul_log2>:
    35b0:	sub	sp, sp, #0x20
    35b4:	str	x0, [sp, #8]
    35b8:	str	wzr, [sp, #28]
    35bc:	ldr	x0, [sp, #8]
    35c0:	lsr	x0, x0, #1
    35c4:	str	x0, [sp, #8]
    35c8:	b	35e4 <ul_log2+0x34>
    35cc:	ldr	w0, [sp, #28]
    35d0:	add	w0, w0, #0x1
    35d4:	str	w0, [sp, #28]
    35d8:	ldr	x0, [sp, #8]
    35dc:	lsr	x0, x0, #1
    35e0:	str	x0, [sp, #8]
    35e4:	ldr	x0, [sp, #8]
    35e8:	cmp	x0, #0x0
    35ec:	b.ne	35cc <ul_log2+0x1c>  // b.any
    35f0:	ldr	w0, [sp, #28]
    35f4:	add	sp, sp, #0x20
    35f8:	ret

00000000000035fc <ext2fs_max_extent_depth>:
    35fc:	stp	x29, x30, [sp, #-80]!
    3600:	mov	x29, sp
    3604:	str	x19, [sp, #16]
    3608:	str	x0, [sp, #40]
    360c:	mov	x0, #0x3c                  	// #60
    3610:	str	x0, [sp, #72]
    3614:	ldr	x0, [sp, #72]
    3618:	sub	x1, x0, #0xc
    361c:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3620:	movk	x0, #0xaaab
    3624:	umulh	x0, x1, x0
    3628:	lsr	x0, x0, #3
    362c:	str	x0, [sp, #64]
    3630:	ldr	x0, [sp, #40]
    3634:	ldr	x0, [x0, #8]
    3638:	ldr	w0, [x0, #40]
    363c:	mov	w0, w0
    3640:	sub	x1, x0, #0xc
    3644:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3648:	movk	x0, #0xaaab
    364c:	umulh	x0, x1, x0
    3650:	lsr	x0, x0, #3
    3654:	str	x0, [sp, #56]
    3658:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    365c:	add	x0, x0, #0x0
    3660:	ldr	w0, [x0]
    3664:	cmp	w0, #0x0
    3668:	b.eq	369c <ext2fs_max_extent_depth+0xa0>  // b.none
    366c:	ldr	x0, [sp, #40]
    3670:	ldr	x0, [x0, #8]
    3674:	ldr	w1, [x0, #40]
    3678:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    367c:	add	x0, x0, #0x0
    3680:	ldr	w0, [x0]
    3684:	cmp	w1, w0
    3688:	b.ne	369c <ext2fs_max_extent_depth+0xa0>  // b.any
    368c:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    3690:	add	x0, x0, #0x0
    3694:	ldr	x0, [x0]
    3698:	b	36f8 <ext2fs_max_extent_depth+0xfc>
    369c:	mov	x0, #0xffffffff            	// #4294967295
    36a0:	bl	35b0 <ul_log2>
    36a4:	mov	w19, w0
    36a8:	ldr	x0, [sp, #64]
    36ac:	bl	35b0 <ul_log2>
    36b0:	sub	w19, w19, w0
    36b4:	ldr	x0, [sp, #56]
    36b8:	bl	35b0 <ul_log2>
    36bc:	sdiv	w0, w19, w0
    36c0:	add	w0, w0, #0x1
    36c4:	sxtw	x1, w0
    36c8:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    36cc:	add	x0, x0, #0x0
    36d0:	str	x1, [x0]
    36d4:	ldr	x0, [sp, #40]
    36d8:	ldr	x0, [x0, #8]
    36dc:	ldr	w1, [x0, #40]
    36e0:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    36e4:	add	x0, x0, #0x0
    36e8:	str	w1, [x0]
    36ec:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
    36f0:	add	x0, x0, #0x0
    36f4:	ldr	x0, [x0]
    36f8:	ldr	x19, [sp, #16]
    36fc:	ldp	x29, x30, [sp], #80
    3700:	ret

0000000000003704 <ext2fs_fix_extents_checksums>:
    3704:	stp	x29, x30, [sp, #-96]!
    3708:	mov	x29, sp
    370c:	str	x0, [sp, #40]
    3710:	str	w1, [sp, #36]
    3714:	str	x2, [sp, #24]
    3718:	ldr	x0, [sp, #40]
    371c:	ldr	w0, [x0, #16]
    3720:	str	w0, [sp, #84]
    3724:	ldr	x0, [sp, #40]
    3728:	ldr	x0, [x0, #32]
    372c:	bl	0 <ext2fs_has_feature_metadata_csum>
    3730:	cmp	w0, #0x0
    3734:	b.eq	3758 <ext2fs_fix_extents_checksums+0x54>  // b.none
    3738:	ldr	x0, [sp, #24]
    373c:	cmp	x0, #0x0
    3740:	b.eq	3760 <ext2fs_fix_extents_checksums+0x5c>  // b.none
    3744:	ldr	x0, [sp, #24]
    3748:	ldr	w0, [x0, #32]
    374c:	and	w0, w0, #0x80000
    3750:	cmp	w0, #0x0
    3754:	b.ne	3760 <ext2fs_fix_extents_checksums+0x5c>  // b.any
    3758:	mov	x0, #0x0                   	// #0
    375c:	b	3898 <ext2fs_fix_extents_checksums+0x194>
    3760:	add	x0, sp, #0x48
    3764:	mov	x3, x0
    3768:	ldr	x2, [sp, #24]
    376c:	ldr	w1, [sp, #36]
    3770:	ldr	x0, [sp, #40]
    3774:	bl	1fc <ext2fs_extent_open2>
    3778:	str	x0, [sp, #88]
    377c:	ldr	x0, [sp, #88]
    3780:	cmp	x0, #0x0
    3784:	b.eq	37a8 <ext2fs_fix_extents_checksums+0xa4>  // b.none
    3788:	ldr	x1, [sp, #88]
    378c:	mov	x0, #0xb77b                	// #46971
    3790:	movk	x0, #0x7f2b, lsl #16
    3794:	cmp	x1, x0
    3798:	b.ne	37a0 <ext2fs_fix_extents_checksums+0x9c>  // b.any
    379c:	str	xzr, [sp, #88]
    37a0:	ldr	x0, [sp, #88]
    37a4:	b	3898 <ext2fs_fix_extents_checksums+0x194>
    37a8:	ldr	x0, [sp, #40]
    37ac:	ldr	w0, [x0, #16]
    37b0:	and	w1, w0, #0xffdfffff
    37b4:	ldr	x0, [sp, #40]
    37b8:	str	w1, [x0, #16]
    37bc:	ldr	x0, [sp, #72]
    37c0:	add	x1, sp, #0x30
    37c4:	mov	x2, x1
    37c8:	mov	w1, #0x1                   	// #1
    37cc:	bl	594 <ext2fs_extent_get>
    37d0:	str	x0, [sp, #88]
    37d4:	ldr	x0, [sp, #88]
    37d8:	cmp	x0, #0x0
    37dc:	b.ne	385c <ext2fs_fix_extents_checksums+0x158>  // b.any
    37e0:	ldr	w0, [sp, #68]
    37e4:	and	w0, w0, #0x1
    37e8:	cmp	w0, #0x0
    37ec:	b.eq	3814 <ext2fs_fix_extents_checksums+0x110>  // b.none
    37f0:	ldr	x0, [sp, #72]
    37f4:	add	x1, sp, #0x30
    37f8:	mov	x2, x1
    37fc:	mov	w1, #0x4                   	// #4
    3800:	bl	594 <ext2fs_extent_get>
    3804:	str	x0, [sp, #88]
    3808:	ldr	x0, [sp, #88]
    380c:	cmp	x0, #0x0
    3810:	b.ne	3864 <ext2fs_fix_extents_checksums+0x160>  // b.any
    3814:	ldr	x0, [sp, #72]
    3818:	add	x1, sp, #0x30
    381c:	mov	x2, x1
    3820:	mov	w1, #0x9                   	// #9
    3824:	bl	594 <ext2fs_extent_get>
    3828:	str	x0, [sp, #88]
    382c:	ldr	x1, [sp, #88]
    3830:	mov	x0, #0xb794                	// #46996
    3834:	movk	x0, #0x7f2b, lsl #16
    3838:	cmp	x1, x0
    383c:	b.ne	384c <ext2fs_fix_extents_checksums+0x148>  // b.any
    3840:	ldr	x0, [sp, #72]
    3844:	bl	10c0 <update_path>
    3848:	str	x0, [sp, #88]
    384c:	ldr	x0, [sp, #88]
    3850:	cmp	x0, #0x0
    3854:	b.eq	37e0 <ext2fs_fix_extents_checksums+0xdc>  // b.none
    3858:	b	3868 <ext2fs_fix_extents_checksums+0x164>
    385c:	nop
    3860:	b	3868 <ext2fs_fix_extents_checksums+0x164>
    3864:	nop
    3868:	ldr	x1, [sp, #88]
    386c:	mov	x0, #0xb77c                	// #46972
    3870:	movk	x0, #0x7f2b, lsl #16
    3874:	cmp	x1, x0
    3878:	b.ne	3880 <ext2fs_fix_extents_checksums+0x17c>  // b.any
    387c:	str	xzr, [sp, #88]
    3880:	ldr	x0, [sp, #72]
    3884:	bl	104 <ext2fs_extent_free>
    3888:	ldr	x0, [sp, #40]
    388c:	ldr	w1, [sp, #84]
    3890:	str	w1, [x0, #16]
    3894:	ldr	x0, [sp, #88]
    3898:	ldp	x29, x30, [sp], #96
    389c:	ret

fallocate.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <dbg_print_extent>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	str	x1, [sp]
       c:	nop
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <claim_range>:
      18:	stp	x29, x30, [sp, #-64]!
      1c:	mov	x29, sp
      20:	str	x0, [sp, #40]
      24:	str	x1, [sp, #32]
      28:	str	x2, [sp, #24]
      2c:	str	x3, [sp, #16]
      30:	ldr	x0, [sp, #40]
      34:	ldr	w0, [x0, #192]
      38:	mov	w1, #0x1                   	// #1
      3c:	lsl	w0, w1, w0
      40:	sxtw	x1, w0
      44:	ldr	x0, [sp, #16]
      48:	add	x0, x1, x0
      4c:	sub	x1, x0, #0x1
      50:	ldr	x0, [sp, #40]
      54:	ldr	w0, [x0, #192]
      58:	mov	w2, #0x1                   	// #1
      5c:	lsl	w0, w2, w0
      60:	sxtw	x0, w0
      64:	udiv	x0, x1, x0
      68:	str	x0, [sp, #56]
      6c:	ldr	x0, [sp, #40]
      70:	ldr	w0, [x0, #192]
      74:	mov	w1, #0x1                   	// #1
      78:	lsl	w0, w1, w0
      7c:	sxtw	x0, w0
      80:	mov	w1, w0
      84:	ldr	x0, [sp, #56]
      88:	mul	w0, w1, w0
      8c:	mov	w3, #0x1                   	// #1
      90:	mov	w2, w0
      94:	ldr	x1, [sp, #24]
      98:	ldr	x0, [sp, #40]
      9c:	bl	0 <ext2fs_block_alloc_stats_range>
      a0:	ldr	x2, [sp, #56]
      a4:	ldr	x1, [sp, #32]
      a8:	ldr	x0, [sp, #40]
      ac:	bl	0 <ext2fs_iblk_add_blocks>
      b0:	ldp	x29, x30, [sp], #64
      b4:	ret

00000000000000b8 <ext_falloc_helper>:
      b8:	stp	x29, x30, [sp, #-224]!
      bc:	mov	x29, sp
      c0:	str	x0, [sp, #72]
      c4:	str	w1, [sp, #68]
      c8:	str	w2, [sp, #64]
      cc:	str	x3, [sp, #56]
      d0:	str	x4, [sp, #48]
      d4:	str	x5, [sp, #40]
      d8:	str	x6, [sp, #32]
      dc:	str	x7, [sp, #24]
      e0:	str	xzr, [sp, #192]
      e4:	str	xzr, [sp, #184]
      e8:	ldr	w0, [sp, #68]
      ec:	and	w0, w0, #0x8
      f0:	cmp	w0, #0x0
      f4:	b.ne	12c <ext_falloc_helper+0x74>  // b.any
      f8:	ldr	x0, [sp, #56]
      fc:	ldr	w0, [x0, #4]
     100:	mov	w1, w0
     104:	ldr	x0, [sp, #56]
     108:	ldr	w0, [x0, #108]
     10c:	mov	w0, w0
     110:	lsl	x0, x0, #32
     114:	orr	x1, x1, x0
     118:	ldr	x0, [sp, #72]
     11c:	ldr	w0, [x0, #40]
     120:	mov	w0, w0
     124:	udiv	x0, x1, x0
     128:	str	x0, [sp, #192]
     12c:	ldr	x0, [sp, #72]
     130:	ldr	w0, [x0, #192]
     134:	mov	w1, #0x1                   	// #1
     138:	lsl	w0, w1, w0
     13c:	neg	w0, w0
     140:	sxtw	x1, w0
     144:	ldr	x0, [sp, #232]
     148:	and	x1, x1, x0
     14c:	ldr	x0, [sp, #72]
     150:	ldr	w0, [x0, #192]
     154:	mov	w2, #0x1                   	// #1
     158:	lsl	w0, w2, w0
     15c:	sub	w0, w0, #0x1
     160:	sxtw	x2, w0
     164:	ldr	x0, [sp, #24]
     168:	and	x0, x2, x0
     16c:	orr	x0, x1, x0
     170:	str	x0, [sp, #232]
     174:	ldr	x0, [sp, #72]
     178:	ldr	w0, [x0, #192]
     17c:	mov	w1, #0x1                   	// #1
     180:	lsl	w0, w1, w0
     184:	neg	w0, w0
     188:	and	w0, w0, #0x7fff
     18c:	str	w0, [sp, #168]
     190:	ldr	x0, [sp, #72]
     194:	ldr	w0, [x0, #192]
     198:	mov	w1, #0x1                   	// #1
     19c:	lsl	w0, w1, w0
     1a0:	neg	w0, w0
     1a4:	and	w0, w0, #0x8000
     1a8:	str	w0, [sp, #164]
     1ac:	ldr	x0, [sp, #40]
     1b0:	cmp	x0, #0x0
     1b4:	b.eq	448 <ext_falloc_helper+0x390>  // b.none
     1b8:	ldr	x0, [sp, #72]
     1bc:	ldr	w0, [x0, #192]
     1c0:	mov	w1, #0x1                   	// #1
     1c4:	lsl	w0, w1, w0
     1c8:	cmp	w0, #0x1
     1cc:	b.le	448 <ext_falloc_helper+0x390>
     1d0:	ldr	x0, [sp, #40]
     1d4:	ldr	w0, [x0, #20]
     1d8:	and	w0, w0, #0x2
     1dc:	cmp	w0, #0x0
     1e0:	b.eq	200 <ext_falloc_helper+0x148>  // b.none
     1e4:	ldr	x0, [sp, #40]
     1e8:	ldr	w0, [x0, #16]
     1ec:	ldr	w1, [sp, #168]
     1f0:	sub	w0, w1, w0
     1f4:	mov	w0, w0
     1f8:	str	x0, [sp, #208]
     1fc:	b	218 <ext_falloc_helper+0x160>
     200:	ldr	x0, [sp, #40]
     204:	ldr	w0, [x0, #16]
     208:	ldr	w1, [sp, #164]
     20c:	sub	w0, w1, w0
     210:	mov	w0, w0
     214:	str	x0, [sp, #208]
     218:	ldr	x1, [sp, #208]
     21c:	ldr	x0, [sp, #224]
     220:	cmp	x1, x0
     224:	b.ls	230 <ext_falloc_helper+0x178>  // b.plast
     228:	ldr	x0, [sp, #224]
     22c:	str	x0, [sp, #208]
     230:	ldr	x0, [sp, #208]
     234:	cmp	x0, #0x0
     238:	b.eq	450 <ext_falloc_helper+0x398>  // b.none
     23c:	ldr	x0, [sp, #72]
     240:	ldr	w0, [x0, #192]
     244:	mov	w1, #0x1                   	// #1
     248:	lsl	w0, w1, w0
     24c:	sxtw	x1, w0
     250:	ldr	x0, [sp, #72]
     254:	ldr	w0, [x0, #192]
     258:	mov	w2, #0x1                   	// #1
     25c:	lsl	w0, w2, w0
     260:	sub	w0, w0, #0x1
     264:	sxtw	x2, w0
     268:	ldr	x0, [sp, #24]
     26c:	and	x0, x2, x0
     270:	sub	x0, x1, x0
     274:	str	x0, [sp, #184]
     278:	ldr	x0, [sp, #72]
     27c:	ldr	w0, [x0, #192]
     280:	mov	w1, #0x1                   	// #1
     284:	lsl	w0, w1, w0
     288:	sub	w0, w0, #0x1
     28c:	sxtw	x0, w0
     290:	ldr	x1, [sp, #184]
     294:	and	x0, x1, x0
     298:	str	x0, [sp, #184]
     29c:	ldr	x0, [sp, #184]
     2a0:	cmp	x0, #0x0
     2a4:	b.eq	458 <ext_falloc_helper+0x3a0>  // b.none
     2a8:	ldr	x1, [sp, #184]
     2ac:	ldr	x0, [sp, #208]
     2b0:	cmp	x1, x0
     2b4:	b.ls	2c0 <ext_falloc_helper+0x208>  // b.plast
     2b8:	ldr	x0, [sp, #208]
     2bc:	str	x0, [sp, #184]
     2c0:	ldr	w0, [sp, #68]
     2c4:	and	w0, w0, #0x8
     2c8:	cmp	w0, #0x0
     2cc:	b.ne	334 <ext_falloc_helper+0x27c>  // b.any
     2d0:	ldr	x0, [sp, #40]
     2d4:	ldr	x1, [x0, #8]
     2d8:	ldr	x0, [sp, #40]
     2dc:	ldr	w0, [x0, #16]
     2e0:	mov	w0, w0
     2e4:	add	x0, x1, x0
     2e8:	sub	x0, x0, #0x1
     2ec:	str	x0, [sp, #200]
     2f0:	ldr	x1, [sp, #192]
     2f4:	ldr	x0, [sp, #200]
     2f8:	cmp	x1, x0
     2fc:	b.cc	328 <ext_falloc_helper+0x270>  // b.lo, b.ul, b.last
     300:	ldr	x1, [sp, #200]
     304:	ldr	x0, [sp, #184]
     308:	add	x0, x1, x0
     30c:	ldr	x1, [sp, #192]
     310:	cmp	x1, x0
     314:	b.hi	328 <ext_falloc_helper+0x270>  // b.pmore
     318:	ldr	x1, [sp, #192]
     31c:	ldr	x0, [sp, #200]
     320:	sub	x0, x1, x0
     324:	str	x0, [sp, #184]
     328:	ldr	x0, [sp, #184]
     32c:	cmp	x0, #0x0
     330:	b.eq	460 <ext_falloc_helper+0x3a8>  // b.none
     334:	ldr	x0, [sp, #40]
     338:	ldr	x0, [x0, #8]
     33c:	mov	x1, x0
     340:	ldr	x0, [sp, #48]
     344:	bl	0 <ext2fs_extent_goto>
     348:	str	x0, [sp, #176]
     34c:	ldr	x0, [sp, #176]
     350:	cmp	x0, #0x0
     354:	b.ne	468 <ext_falloc_helper+0x3b0>  // b.any
     358:	ldr	x0, [sp, #40]
     35c:	ldr	w0, [x0, #16]
     360:	ldr	x1, [sp, #184]
     364:	add	w1, w0, w1
     368:	ldr	x0, [sp, #40]
     36c:	str	w1, [x0, #16]
     370:	ldr	x1, [sp, #24]
     374:	ldr	x0, [sp, #184]
     378:	add	x0, x1, x0
     37c:	str	x0, [sp, #24]
     380:	ldr	x1, [sp, #224]
     384:	ldr	x0, [sp, #184]
     388:	sub	x0, x1, x0
     38c:	str	x0, [sp, #224]
     390:	ldr	x1, [sp, #232]
     394:	ldr	x0, [sp, #184]
     398:	add	x0, x1, x0
     39c:	str	x0, [sp, #232]
     3a0:	ldr	x1, [sp, #40]
     3a4:	adrp	x0, 0 <dbg_print_extent>
     3a8:	add	x0, x0, #0x0
     3ac:	bl	0 <dbg_print_extent>
     3b0:	ldr	x2, [sp, #40]
     3b4:	mov	w1, #0x0                   	// #0
     3b8:	ldr	x0, [sp, #48]
     3bc:	bl	0 <ext2fs_extent_replace>
     3c0:	str	x0, [sp, #176]
     3c4:	ldr	x0, [sp, #176]
     3c8:	cmp	x0, #0x0
     3cc:	b.ne	1850 <ext_falloc_helper+0x1798>  // b.any
     3d0:	ldr	x0, [sp, #48]
     3d4:	bl	0 <ext2fs_extent_fix_parents>
     3d8:	str	x0, [sp, #176]
     3dc:	ldr	x0, [sp, #176]
     3e0:	cmp	x0, #0x0
     3e4:	b.ne	1858 <ext_falloc_helper+0x17a0>  // b.any
     3e8:	ldr	x0, [sp, #40]
     3ec:	ldr	w0, [x0, #20]
     3f0:	and	w0, w0, #0x2
     3f4:	cmp	w0, #0x0
     3f8:	b.ne	448 <ext_falloc_helper+0x390>  // b.any
     3fc:	ldr	x0, [sp, #40]
     400:	ldr	x1, [x0]
     404:	ldr	x0, [sp, #40]
     408:	ldr	w0, [x0, #16]
     40c:	mov	w0, w0
     410:	add	x1, x1, x0
     414:	ldr	x0, [sp, #184]
     418:	sub	x0, x1, x0
     41c:	ldr	x1, [sp, #184]
     420:	mov	x4, #0x0                   	// #0
     424:	mov	x3, #0x0                   	// #0
     428:	mov	w2, w1
     42c:	mov	x1, x0
     430:	ldr	x0, [sp, #72]
     434:	bl	0 <ext2fs_zero_blocks2>
     438:	str	x0, [sp, #176]
     43c:	ldr	x0, [sp, #176]
     440:	cmp	x0, #0x0
     444:	b.ne	1860 <ext_falloc_helper+0x17a8>  // b.any
     448:	nop
     44c:	b	46c <ext_falloc_helper+0x3b4>
     450:	nop
     454:	b	46c <ext_falloc_helper+0x3b4>
     458:	nop
     45c:	b	46c <ext_falloc_helper+0x3b4>
     460:	nop
     464:	b	46c <ext_falloc_helper+0x3b4>
     468:	nop
     46c:	ldr	x0, [sp, #32]
     470:	cmp	x0, #0x0
     474:	b.eq	654 <ext_falloc_helper+0x59c>  // b.none
     478:	ldr	x0, [sp, #72]
     47c:	ldr	w0, [x0, #192]
     480:	mov	w1, #0x1                   	// #1
     484:	lsl	w0, w1, w0
     488:	cmp	w0, #0x1
     48c:	b.le	654 <ext_falloc_helper+0x59c>
     490:	ldr	x0, [sp, #32]
     494:	ldr	w0, [x0, #20]
     498:	and	w0, w0, #0x2
     49c:	cmp	w0, #0x0
     4a0:	b.eq	4c0 <ext_falloc_helper+0x408>  // b.none
     4a4:	ldr	x0, [sp, #32]
     4a8:	ldr	w0, [x0, #16]
     4ac:	ldr	w1, [sp, #168]
     4b0:	sub	w0, w1, w0
     4b4:	mov	w0, w0
     4b8:	str	x0, [sp, #208]
     4bc:	b	4d8 <ext_falloc_helper+0x420>
     4c0:	ldr	x0, [sp, #32]
     4c4:	ldr	w0, [x0, #16]
     4c8:	ldr	w1, [sp, #164]
     4cc:	sub	w0, w1, w0
     4d0:	mov	w0, w0
     4d4:	str	x0, [sp, #208]
     4d8:	ldr	x1, [sp, #208]
     4dc:	ldr	x0, [sp, #224]
     4e0:	cmp	x1, x0
     4e4:	b.ls	4f0 <ext_falloc_helper+0x438>  // b.plast
     4e8:	ldr	x0, [sp, #224]
     4ec:	str	x0, [sp, #208]
     4f0:	ldr	x0, [sp, #208]
     4f4:	cmp	x0, #0x0
     4f8:	b.eq	65c <ext_falloc_helper+0x5a4>  // b.none
     4fc:	ldr	x0, [sp, #32]
     500:	ldr	x1, [x0, #8]
     504:	ldr	x0, [sp, #72]
     508:	ldr	w0, [x0, #192]
     50c:	mov	w2, #0x1                   	// #1
     510:	lsl	w0, w2, w0
     514:	sub	w0, w0, #0x1
     518:	sxtw	x0, w0
     51c:	and	x0, x1, x0
     520:	str	x0, [sp, #184]
     524:	ldr	x0, [sp, #184]
     528:	cmp	x0, #0x0
     52c:	b.eq	664 <ext_falloc_helper+0x5ac>  // b.none
     530:	ldr	x0, [sp, #32]
     534:	ldr	x0, [x0, #8]
     538:	mov	x1, x0
     53c:	ldr	x0, [sp, #48]
     540:	bl	0 <ext2fs_extent_goto>
     544:	str	x0, [sp, #176]
     548:	ldr	x0, [sp, #176]
     54c:	cmp	x0, #0x0
     550:	b.ne	1868 <ext_falloc_helper+0x17b0>  // b.any
     554:	ldr	x1, [sp, #184]
     558:	ldr	x0, [sp, #208]
     55c:	cmp	x1, x0
     560:	b.ls	56c <ext_falloc_helper+0x4b4>  // b.plast
     564:	ldr	x0, [sp, #208]
     568:	str	x0, [sp, #184]
     56c:	ldr	x0, [sp, #32]
     570:	ldr	x1, [x0, #8]
     574:	ldr	x0, [sp, #184]
     578:	sub	x1, x1, x0
     57c:	ldr	x0, [sp, #32]
     580:	str	x1, [x0, #8]
     584:	ldr	x0, [sp, #32]
     588:	ldr	x1, [x0]
     58c:	ldr	x0, [sp, #184]
     590:	sub	x1, x1, x0
     594:	ldr	x0, [sp, #32]
     598:	str	x1, [x0]
     59c:	ldr	x0, [sp, #32]
     5a0:	ldr	w0, [x0, #16]
     5a4:	ldr	x1, [sp, #184]
     5a8:	add	w1, w0, w1
     5ac:	ldr	x0, [sp, #32]
     5b0:	str	w1, [x0, #16]
     5b4:	ldr	x1, [sp, #224]
     5b8:	ldr	x0, [sp, #184]
     5bc:	sub	x0, x1, x0
     5c0:	str	x0, [sp, #224]
     5c4:	ldr	x1, [sp, #32]
     5c8:	adrp	x0, 0 <dbg_print_extent>
     5cc:	add	x0, x0, #0x0
     5d0:	bl	0 <dbg_print_extent>
     5d4:	ldr	x2, [sp, #32]
     5d8:	mov	w1, #0x0                   	// #0
     5dc:	ldr	x0, [sp, #48]
     5e0:	bl	0 <ext2fs_extent_replace>
     5e4:	str	x0, [sp, #176]
     5e8:	ldr	x0, [sp, #176]
     5ec:	cmp	x0, #0x0
     5f0:	b.ne	1870 <ext_falloc_helper+0x17b8>  // b.any
     5f4:	ldr	x0, [sp, #48]
     5f8:	bl	0 <ext2fs_extent_fix_parents>
     5fc:	str	x0, [sp, #176]
     600:	ldr	x0, [sp, #176]
     604:	cmp	x0, #0x0
     608:	b.ne	1878 <ext_falloc_helper+0x17c0>  // b.any
     60c:	ldr	x0, [sp, #32]
     610:	ldr	w0, [x0, #20]
     614:	and	w0, w0, #0x2
     618:	cmp	w0, #0x0
     61c:	b.ne	654 <ext_falloc_helper+0x59c>  // b.any
     620:	ldr	x0, [sp, #32]
     624:	ldr	x0, [x0]
     628:	ldr	x1, [sp, #184]
     62c:	mov	x4, #0x0                   	// #0
     630:	mov	x3, #0x0                   	// #0
     634:	mov	w2, w1
     638:	mov	x1, x0
     63c:	ldr	x0, [sp, #72]
     640:	bl	0 <ext2fs_zero_blocks2>
     644:	str	x0, [sp, #176]
     648:	ldr	x0, [sp, #176]
     64c:	cmp	x0, #0x0
     650:	b.ne	1880 <ext_falloc_helper+0x17c8>  // b.any
     654:	nop
     658:	b	668 <ext_falloc_helper+0x5b0>
     65c:	nop
     660:	b	668 <ext_falloc_helper+0x5b0>
     664:	nop
     668:	ldr	x0, [sp, #40]
     66c:	cmp	x0, #0x0
     670:	b.eq	96c <ext_falloc_helper+0x8b4>  // b.none
     674:	ldr	x0, [sp, #32]
     678:	cmp	x0, #0x0
     67c:	b.eq	96c <ext_falloc_helper+0x8b4>  // b.none
     680:	ldr	x0, [sp, #40]
     684:	ldr	w1, [x0, #20]
     688:	ldr	x0, [sp, #32]
     68c:	ldr	w0, [x0, #20]
     690:	eor	w0, w1, w0
     694:	and	w0, w0, #0x2
     698:	cmp	w0, #0x0
     69c:	b.ne	974 <ext_falloc_helper+0x8bc>  // b.any
     6a0:	ldr	w0, [sp, #68]
     6a4:	and	w0, w0, #0x2
     6a8:	cmp	w0, #0x0
     6ac:	b.eq	6c4 <ext_falloc_helper+0x60c>  // b.none
     6b0:	ldr	x0, [sp, #40]
     6b4:	ldr	w0, [x0, #20]
     6b8:	and	w0, w0, #0x2
     6bc:	cmp	w0, #0x0
     6c0:	b.ne	97c <ext_falloc_helper+0x8c4>  // b.any
     6c4:	ldr	w0, [sp, #68]
     6c8:	and	w0, w0, #0x4
     6cc:	cmp	w0, #0x0
     6d0:	b.eq	6e8 <ext_falloc_helper+0x630>  // b.none
     6d4:	ldr	x0, [sp, #40]
     6d8:	ldr	w0, [x0, #20]
     6dc:	and	w0, w0, #0x2
     6e0:	cmp	w0, #0x0
     6e4:	b.eq	97c <ext_falloc_helper+0x8c4>  // b.none
     6e8:	ldr	x0, [sp, #40]
     6ec:	ldr	w0, [x0, #20]
     6f0:	and	w0, w0, #0x2
     6f4:	cmp	w0, #0x0
     6f8:	b.ne	71c <ext_falloc_helper+0x664>  // b.any
     6fc:	ldr	w0, [sp, #68]
     700:	and	w0, w0, #0x1
     704:	cmp	w0, #0x0
     708:	b.eq	984 <ext_falloc_helper+0x8cc>  // b.none
     70c:	ldr	w0, [sp, #68]
     710:	and	w0, w0, #0x2
     714:	cmp	w0, #0x0
     718:	b.eq	984 <ext_falloc_helper+0x8cc>  // b.none
     71c:	ldr	x0, [sp, #40]
     720:	ldr	w0, [x0, #16]
     724:	mov	w1, w0
     728:	ldr	x0, [sp, #224]
     72c:	add	x1, x1, x0
     730:	ldr	x0, [sp, #32]
     734:	ldr	w0, [x0, #16]
     738:	mov	w0, w0
     73c:	add	x0, x1, x0
     740:	str	x0, [sp, #200]
     744:	ldr	x0, [sp, #40]
     748:	ldr	w0, [x0, #20]
     74c:	and	w0, w0, #0x2
     750:	cmp	w0, #0x0
     754:	b.eq	760 <ext_falloc_helper+0x6a8>  // b.none
     758:	ldr	w0, [sp, #168]
     75c:	b	764 <ext_falloc_helper+0x6ac>
     760:	ldr	w0, [sp, #164]
     764:	ldr	x1, [sp, #200]
     768:	cmp	x0, x1
     76c:	b.cc	98c <ext_falloc_helper+0x8d4>  // b.lo, b.ul, b.last
     770:	ldr	x0, [sp, #40]
     774:	ldr	x0, [x0, #8]
     778:	mov	x1, x0
     77c:	ldr	x0, [sp, #48]
     780:	bl	0 <ext2fs_extent_goto>
     784:	str	x0, [sp, #176]
     788:	ldr	x0, [sp, #176]
     78c:	cmp	x0, #0x0
     790:	b.ne	994 <ext_falloc_helper+0x8dc>  // b.any
     794:	ldr	x0, [sp, #40]
     798:	ldr	x1, [x0]
     79c:	ldr	x0, [sp, #40]
     7a0:	ldr	w0, [x0, #16]
     7a4:	mov	w0, w0
     7a8:	add	x0, x1, x0
     7ac:	str	x0, [sp, #152]
     7b0:	ldr	x0, [sp, #32]
     7b4:	ldr	x1, [x0]
     7b8:	ldr	x0, [sp, #152]
     7bc:	sub	x0, x1, x0
     7c0:	add	x0, x0, #0x1
     7c4:	add	x2, sp, #0x58
     7c8:	add	x1, sp, #0x60
     7cc:	mov	x6, x2
     7d0:	mov	x5, x1
     7d4:	mov	x4, #0x0                   	// #0
     7d8:	mov	x3, x0
     7dc:	ldr	x2, [sp, #152]
     7e0:	mov	w1, #0x3                   	// #3
     7e4:	ldr	x0, [sp, #72]
     7e8:	bl	0 <ext2fs_new_range>
     7ec:	str	x0, [sp, #176]
     7f0:	ldr	x0, [sp, #176]
     7f4:	cmp	x0, #0x0
     7f8:	b.ne	99c <ext_falloc_helper+0x8e4>  // b.any
     7fc:	ldr	x1, [sp, #96]
     800:	ldr	x0, [sp, #88]
     804:	add	x1, x1, x0
     808:	ldr	x0, [sp, #32]
     80c:	ldr	x0, [x0]
     810:	cmp	x1, x0
     814:	b.ne	9a4 <ext_falloc_helper+0x8ec>  // b.any
     818:	ldr	x0, [sp, #96]
     81c:	ldr	x1, [sp, #88]
     820:	mov	x3, x1
     824:	mov	x2, x0
     828:	ldr	x1, [sp, #56]
     82c:	ldr	x0, [sp, #72]
     830:	bl	18 <claim_range>
     834:	str	x0, [sp, #176]
     838:	ldr	x0, [sp, #176]
     83c:	cmp	x0, #0x0
     840:	b.ne	1888 <ext_falloc_helper+0x17d0>  // b.any
     844:	ldr	x0, [sp, #200]
     848:	mov	w1, w0
     84c:	ldr	x0, [sp, #40]
     850:	str	w1, [x0, #16]
     854:	ldr	x1, [sp, #40]
     858:	adrp	x0, 0 <dbg_print_extent>
     85c:	add	x0, x0, #0x0
     860:	bl	0 <dbg_print_extent>
     864:	ldr	x2, [sp, #40]
     868:	mov	w1, #0x0                   	// #0
     86c:	ldr	x0, [sp, #48]
     870:	bl	0 <ext2fs_extent_replace>
     874:	str	x0, [sp, #176]
     878:	ldr	x0, [sp, #176]
     87c:	cmp	x0, #0x0
     880:	b.ne	1890 <ext_falloc_helper+0x17d8>  // b.any
     884:	ldr	x0, [sp, #48]
     888:	bl	0 <ext2fs_extent_fix_parents>
     88c:	str	x0, [sp, #176]
     890:	ldr	x0, [sp, #176]
     894:	cmp	x0, #0x0
     898:	b.ne	1898 <ext_falloc_helper+0x17e0>  // b.any
     89c:	add	x0, sp, #0x80
     8a0:	mov	x2, x0
     8a4:	mov	w1, #0x7                   	// #7
     8a8:	ldr	x0, [sp, #48]
     8ac:	bl	0 <ext2fs_extent_get>
     8b0:	str	x0, [sp, #176]
     8b4:	ldr	x0, [sp, #176]
     8b8:	cmp	x0, #0x0
     8bc:	b.ne	18a0 <ext_falloc_helper+0x17e8>  // b.any
     8c0:	mov	w1, #0x0                   	// #0
     8c4:	ldr	x0, [sp, #48]
     8c8:	bl	0 <ext2fs_extent_delete>
     8cc:	str	x0, [sp, #176]
     8d0:	ldr	x0, [sp, #176]
     8d4:	cmp	x0, #0x0
     8d8:	b.ne	18a8 <ext_falloc_helper+0x17f0>  // b.any
     8dc:	ldr	x0, [sp, #48]
     8e0:	bl	0 <ext2fs_extent_fix_parents>
     8e4:	str	x0, [sp, #176]
     8e8:	ldr	x0, [sp, #176]
     8ec:	cmp	x0, #0x0
     8f0:	b.ne	18b0 <ext_falloc_helper+0x17f8>  // b.any
     8f4:	ldr	x1, [sp, #32]
     8f8:	ldr	x0, [sp, #40]
     8fc:	mov	x2, x1
     900:	mov	x3, x0
     904:	ldp	x0, x1, [x3]
     908:	stp	x0, x1, [x2]
     90c:	ldr	x0, [x3, #16]
     910:	str	x0, [x2, #16]
     914:	ldr	x0, [sp, #40]
     918:	ldr	w0, [x0, #20]
     91c:	and	w0, w0, #0x2
     920:	cmp	w0, #0x0
     924:	b.ne	964 <ext_falloc_helper+0x8ac>  // b.any
     928:	ldr	w0, [sp, #68]
     92c:	and	w0, w0, #0x1
     930:	cmp	w0, #0x0
     934:	b.eq	964 <ext_falloc_helper+0x8ac>  // b.none
     938:	ldr	x0, [sp, #224]
     93c:	mov	x4, #0x0                   	// #0
     940:	mov	x3, #0x0                   	// #0
     944:	mov	w2, w0
     948:	ldr	x1, [sp, #24]
     94c:	ldr	x0, [sp, #72]
     950:	bl	0 <ext2fs_zero_blocks2>
     954:	str	x0, [sp, #176]
     958:	ldr	x0, [sp, #176]
     95c:	cmp	x0, #0x0
     960:	b.ne	18b8 <ext_falloc_helper+0x1800>  // b.any
     964:	mov	x0, #0x0                   	// #0
     968:	b	19a0 <ext_falloc_helper+0x18e8>
     96c:	nop
     970:	b	9a8 <ext_falloc_helper+0x8f0>
     974:	nop
     978:	b	9a8 <ext_falloc_helper+0x8f0>
     97c:	nop
     980:	b	9a8 <ext_falloc_helper+0x8f0>
     984:	nop
     988:	b	9a8 <ext_falloc_helper+0x8f0>
     98c:	nop
     990:	b	9a8 <ext_falloc_helper+0x8f0>
     994:	nop
     998:	b	9a8 <ext_falloc_helper+0x8f0>
     99c:	nop
     9a0:	b	9a8 <ext_falloc_helper+0x8f0>
     9a4:	nop
     9a8:	ldr	x0, [sp, #40]
     9ac:	cmp	x0, #0x0
     9b0:	b.eq	d00 <ext_falloc_helper+0xc48>  // b.none
     9b4:	ldr	x0, [sp, #40]
     9b8:	ldr	w0, [x0, #20]
     9bc:	and	w0, w0, #0x2
     9c0:	cmp	w0, #0x0
     9c4:	b.eq	9e4 <ext_falloc_helper+0x92c>  // b.none
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldr	w0, [x0, #16]
     9d0:	ldr	w1, [sp, #168]
     9d4:	sub	w0, w1, w0
     9d8:	mov	w0, w0
     9dc:	str	x0, [sp, #208]
     9e0:	b	a14 <ext_falloc_helper+0x95c>
     9e4:	ldr	w0, [sp, #68]
     9e8:	and	w0, w0, #0x1
     9ec:	cmp	w0, #0x0
     9f0:	b.eq	a10 <ext_falloc_helper+0x958>  // b.none
     9f4:	ldr	x0, [sp, #40]
     9f8:	ldr	w0, [x0, #16]
     9fc:	ldr	w1, [sp, #164]
     a00:	sub	w0, w1, w0
     a04:	mov	w0, w0
     a08:	str	x0, [sp, #208]
     a0c:	b	a14 <ext_falloc_helper+0x95c>
     a10:	str	xzr, [sp, #208]
     a14:	ldr	w0, [sp, #68]
     a18:	and	w0, w0, #0x2
     a1c:	cmp	w0, #0x0
     a20:	b.eq	a38 <ext_falloc_helper+0x980>  // b.none
     a24:	ldr	x0, [sp, #40]
     a28:	ldr	w0, [x0, #20]
     a2c:	and	w0, w0, #0x2
     a30:	cmp	w0, #0x0
     a34:	b.ne	d08 <ext_falloc_helper+0xc50>  // b.any
     a38:	ldr	w0, [sp, #68]
     a3c:	and	w0, w0, #0x4
     a40:	cmp	w0, #0x0
     a44:	b.eq	a5c <ext_falloc_helper+0x9a4>  // b.none
     a48:	ldr	x0, [sp, #40]
     a4c:	ldr	w0, [x0, #20]
     a50:	and	w0, w0, #0x2
     a54:	cmp	w0, #0x0
     a58:	b.eq	d08 <ext_falloc_helper+0xc50>  // b.none
     a5c:	ldr	x1, [sp, #208]
     a60:	ldr	x0, [sp, #224]
     a64:	cmp	x1, x0
     a68:	b.ls	a74 <ext_falloc_helper+0x9bc>  // b.plast
     a6c:	ldr	x0, [sp, #224]
     a70:	str	x0, [sp, #208]
     a74:	ldr	x0, [sp, #40]
     a78:	ldr	x1, [x0, #8]
     a7c:	ldr	x0, [sp, #40]
     a80:	ldr	w0, [x0, #16]
     a84:	mov	w0, w0
     a88:	add	x0, x1, x0
     a8c:	sub	x0, x0, #0x1
     a90:	str	x0, [sp, #200]
     a94:	ldr	w0, [sp, #68]
     a98:	and	w0, w0, #0x8
     a9c:	cmp	w0, #0x0
     aa0:	b.ne	adc <ext_falloc_helper+0xa24>  // b.any
     aa4:	ldr	x1, [sp, #192]
     aa8:	ldr	x0, [sp, #200]
     aac:	cmp	x1, x0
     ab0:	b.cc	adc <ext_falloc_helper+0xa24>  // b.lo, b.ul, b.last
     ab4:	ldr	x1, [sp, #200]
     ab8:	ldr	x0, [sp, #208]
     abc:	add	x0, x1, x0
     ac0:	ldr	x1, [sp, #192]
     ac4:	cmp	x1, x0
     ac8:	b.hi	adc <ext_falloc_helper+0xa24>  // b.pmore
     acc:	ldr	x1, [sp, #192]
     ad0:	ldr	x0, [sp, #200]
     ad4:	sub	x0, x1, x0
     ad8:	str	x0, [sp, #208]
     adc:	ldr	x0, [sp, #208]
     ae0:	cmp	x0, #0x0
     ae4:	b.eq	d10 <ext_falloc_helper+0xc58>  // b.none
     ae8:	ldr	x0, [sp, #72]
     aec:	ldr	w0, [x0, #192]
     af0:	mov	w1, #0x1                   	// #1
     af4:	lsl	w0, w1, w0
     af8:	cmp	w0, #0x1
     afc:	b.le	b88 <ext_falloc_helper+0xad0>
     b00:	ldr	x1, [sp, #200]
     b04:	ldr	x0, [sp, #208]
     b08:	add	x0, x1, x0
     b0c:	add	x1, sp, #0x60
     b10:	mov	x4, x1
     b14:	mov	x3, x0
     b18:	ldr	x2, [sp, #56]
     b1c:	ldr	w1, [sp, #64]
     b20:	ldr	x0, [sp, #72]
     b24:	bl	0 <ext2fs_map_cluster_block>
     b28:	str	x0, [sp, #176]
     b2c:	ldr	x0, [sp, #176]
     b30:	cmp	x0, #0x0
     b34:	b.ne	18c0 <ext_falloc_helper+0x1808>  // b.any
     b38:	ldr	x0, [sp, #96]
     b3c:	cmp	x0, #0x0
     b40:	b.eq	b7c <ext_falloc_helper+0xac4>  // b.none
     b44:	ldr	x1, [sp, #200]
     b48:	ldr	x0, [sp, #208]
     b4c:	add	x1, x1, x0
     b50:	ldr	x0, [sp, #72]
     b54:	ldr	w0, [x0, #192]
     b58:	mov	w2, #0x1                   	// #1
     b5c:	lsl	w0, w2, w0
     b60:	sub	w0, w0, #0x1
     b64:	sxtw	x0, w0
     b68:	and	x0, x1, x0
     b6c:	ldr	x1, [sp, #208]
     b70:	sub	x0, x1, x0
     b74:	sub	x0, x0, #0x1
     b78:	str	x0, [sp, #208]
     b7c:	ldr	x0, [sp, #208]
     b80:	cmp	x0, #0x0
     b84:	b.eq	d18 <ext_falloc_helper+0xc60>  // b.none
     b88:	ldr	x0, [sp, #40]
     b8c:	ldr	x1, [x0]
     b90:	ldr	x0, [sp, #40]
     b94:	ldr	w0, [x0, #16]
     b98:	mov	w0, w0
     b9c:	add	x0, x1, x0
     ba0:	str	x0, [sp, #200]
     ba4:	add	x1, sp, #0x58
     ba8:	add	x0, sp, #0x60
     bac:	mov	x6, x1
     bb0:	mov	x5, x0
     bb4:	mov	x4, #0x0                   	// #0
     bb8:	ldr	x3, [sp, #208]
     bbc:	ldr	x2, [sp, #200]
     bc0:	mov	w1, #0x3                   	// #3
     bc4:	ldr	x0, [sp, #72]
     bc8:	bl	0 <ext2fs_new_range>
     bcc:	str	x0, [sp, #176]
     bd0:	ldr	x0, [sp, #176]
     bd4:	cmp	x0, #0x0
     bd8:	b.ne	d20 <ext_falloc_helper+0xc68>  // b.any
     bdc:	ldr	x0, [sp, #96]
     be0:	ldr	x1, [sp, #88]
     be4:	mov	x3, x1
     be8:	mov	x2, x0
     bec:	ldr	x1, [sp, #56]
     bf0:	ldr	x0, [sp, #72]
     bf4:	bl	18 <claim_range>
     bf8:	str	x0, [sp, #176]
     bfc:	ldr	x0, [sp, #176]
     c00:	cmp	x0, #0x0
     c04:	b.ne	18c8 <ext_falloc_helper+0x1810>  // b.any
     c08:	ldr	x0, [sp, #40]
     c0c:	ldr	x0, [x0, #8]
     c10:	mov	x1, x0
     c14:	ldr	x0, [sp, #48]
     c18:	bl	0 <ext2fs_extent_goto>
     c1c:	str	x0, [sp, #176]
     c20:	ldr	x0, [sp, #176]
     c24:	cmp	x0, #0x0
     c28:	b.ne	18d0 <ext_falloc_helper+0x1818>  // b.any
     c2c:	ldr	x0, [sp, #88]
     c30:	ldr	x1, [sp, #24]
     c34:	add	x0, x1, x0
     c38:	str	x0, [sp, #24]
     c3c:	ldr	x0, [sp, #88]
     c40:	ldr	x1, [sp, #224]
     c44:	sub	x0, x1, x0
     c48:	str	x0, [sp, #224]
     c4c:	ldr	x0, [sp, #40]
     c50:	ldr	w0, [x0, #16]
     c54:	ldr	x1, [sp, #88]
     c58:	add	w1, w0, w1
     c5c:	ldr	x0, [sp, #40]
     c60:	str	w1, [x0, #16]
     c64:	ldr	x1, [sp, #40]
     c68:	adrp	x0, 0 <dbg_print_extent>
     c6c:	add	x0, x0, #0x0
     c70:	bl	0 <dbg_print_extent>
     c74:	ldr	x2, [sp, #40]
     c78:	mov	w1, #0x0                   	// #0
     c7c:	ldr	x0, [sp, #48]
     c80:	bl	0 <ext2fs_extent_replace>
     c84:	str	x0, [sp, #176]
     c88:	ldr	x0, [sp, #176]
     c8c:	cmp	x0, #0x0
     c90:	b.ne	18d8 <ext_falloc_helper+0x1820>  // b.any
     c94:	ldr	x0, [sp, #48]
     c98:	bl	0 <ext2fs_extent_fix_parents>
     c9c:	str	x0, [sp, #176]
     ca0:	ldr	x0, [sp, #176]
     ca4:	cmp	x0, #0x0
     ca8:	b.ne	18e0 <ext_falloc_helper+0x1828>  // b.any
     cac:	ldr	x0, [sp, #40]
     cb0:	ldr	w0, [x0, #20]
     cb4:	and	w0, w0, #0x2
     cb8:	cmp	w0, #0x0
     cbc:	b.ne	d00 <ext_falloc_helper+0xc48>  // b.any
     cc0:	ldr	w0, [sp, #68]
     cc4:	and	w0, w0, #0x1
     cc8:	cmp	w0, #0x0
     ccc:	b.eq	d00 <ext_falloc_helper+0xc48>  // b.none
     cd0:	ldr	x0, [sp, #96]
     cd4:	ldr	x1, [sp, #88]
     cd8:	mov	x4, #0x0                   	// #0
     cdc:	mov	x3, #0x0                   	// #0
     ce0:	mov	w2, w1
     ce4:	mov	x1, x0
     ce8:	ldr	x0, [sp, #72]
     cec:	bl	0 <ext2fs_zero_blocks2>
     cf0:	str	x0, [sp, #176]
     cf4:	ldr	x0, [sp, #176]
     cf8:	cmp	x0, #0x0
     cfc:	b.ne	18e8 <ext_falloc_helper+0x1830>  // b.any
     d00:	nop
     d04:	b	d24 <ext_falloc_helper+0xc6c>
     d08:	nop
     d0c:	b	d24 <ext_falloc_helper+0xc6c>
     d10:	nop
     d14:	b	d24 <ext_falloc_helper+0xc6c>
     d18:	nop
     d1c:	b	d24 <ext_falloc_helper+0xc6c>
     d20:	nop
     d24:	ldr	x0, [sp, #32]
     d28:	cmp	x0, #0x0
     d2c:	b.eq	108c <ext_falloc_helper+0xfd4>  // b.none
     d30:	ldr	x0, [sp, #32]
     d34:	ldr	w0, [x0, #20]
     d38:	and	w0, w0, #0x2
     d3c:	cmp	w0, #0x0
     d40:	b.eq	d60 <ext_falloc_helper+0xca8>  // b.none
     d44:	ldr	x0, [sp, #32]
     d48:	ldr	w0, [x0, #16]
     d4c:	ldr	w1, [sp, #168]
     d50:	sub	w0, w1, w0
     d54:	mov	w0, w0
     d58:	str	x0, [sp, #208]
     d5c:	b	d90 <ext_falloc_helper+0xcd8>
     d60:	ldr	w0, [sp, #68]
     d64:	and	w0, w0, #0x1
     d68:	cmp	w0, #0x0
     d6c:	b.eq	d8c <ext_falloc_helper+0xcd4>  // b.none
     d70:	ldr	x0, [sp, #32]
     d74:	ldr	w0, [x0, #16]
     d78:	ldr	w1, [sp, #164]
     d7c:	sub	w0, w1, w0
     d80:	mov	w0, w0
     d84:	str	x0, [sp, #208]
     d88:	b	d90 <ext_falloc_helper+0xcd8>
     d8c:	str	xzr, [sp, #208]
     d90:	ldr	w0, [sp, #68]
     d94:	and	w0, w0, #0x2
     d98:	cmp	w0, #0x0
     d9c:	b.eq	db4 <ext_falloc_helper+0xcfc>  // b.none
     da0:	ldr	x0, [sp, #32]
     da4:	ldr	w0, [x0, #20]
     da8:	and	w0, w0, #0x2
     dac:	cmp	w0, #0x0
     db0:	b.ne	1094 <ext_falloc_helper+0xfdc>  // b.any
     db4:	ldr	w0, [sp, #68]
     db8:	and	w0, w0, #0x4
     dbc:	cmp	w0, #0x0
     dc0:	b.eq	dd8 <ext_falloc_helper+0xd20>  // b.none
     dc4:	ldr	x0, [sp, #32]
     dc8:	ldr	w0, [x0, #20]
     dcc:	and	w0, w0, #0x2
     dd0:	cmp	w0, #0x0
     dd4:	b.eq	1094 <ext_falloc_helper+0xfdc>  // b.none
     dd8:	ldr	x1, [sp, #208]
     ddc:	ldr	x0, [sp, #224]
     de0:	cmp	x1, x0
     de4:	b.ls	df0 <ext_falloc_helper+0xd38>  // b.plast
     de8:	ldr	x0, [sp, #224]
     dec:	str	x0, [sp, #208]
     df0:	ldr	x0, [sp, #208]
     df4:	cmp	x0, #0x0
     df8:	b.eq	109c <ext_falloc_helper+0xfe4>  // b.none
     dfc:	ldr	x0, [sp, #72]
     e00:	ldr	w0, [x0, #192]
     e04:	mov	w1, #0x1                   	// #1
     e08:	lsl	w0, w1, w0
     e0c:	cmp	w0, #0x1
     e10:	b.le	eb8 <ext_falloc_helper+0xe00>
     e14:	ldr	x0, [sp, #32]
     e18:	ldr	x1, [x0, #8]
     e1c:	ldr	x0, [sp, #208]
     e20:	sub	x0, x1, x0
     e24:	add	x1, sp, #0x60
     e28:	mov	x4, x1
     e2c:	mov	x3, x0
     e30:	ldr	x2, [sp, #56]
     e34:	ldr	w1, [sp, #64]
     e38:	ldr	x0, [sp, #72]
     e3c:	bl	0 <ext2fs_map_cluster_block>
     e40:	str	x0, [sp, #176]
     e44:	ldr	x0, [sp, #176]
     e48:	cmp	x0, #0x0
     e4c:	b.ne	18f0 <ext_falloc_helper+0x1838>  // b.any
     e50:	ldr	x0, [sp, #96]
     e54:	cmp	x0, #0x0
     e58:	b.eq	eac <ext_falloc_helper+0xdf4>  // b.none
     e5c:	ldr	x0, [sp, #32]
     e60:	ldr	x1, [x0, #8]
     e64:	ldr	x0, [sp, #208]
     e68:	sub	x1, x1, x0
     e6c:	ldr	x0, [sp, #72]
     e70:	ldr	w0, [x0, #192]
     e74:	mov	w2, #0x1                   	// #1
     e78:	lsl	w0, w2, w0
     e7c:	sub	w0, w0, #0x1
     e80:	sxtw	x0, w0
     e84:	and	x1, x1, x0
     e88:	ldr	x0, [sp, #72]
     e8c:	ldr	w0, [x0, #192]
     e90:	mov	w2, #0x1                   	// #1
     e94:	lsl	w0, w2, w0
     e98:	sxtw	x0, w0
     e9c:	sub	x0, x1, x0
     ea0:	ldr	x1, [sp, #208]
     ea4:	add	x0, x1, x0
     ea8:	str	x0, [sp, #208]
     eac:	ldr	x0, [sp, #208]
     eb0:	cmp	x0, #0x0
     eb4:	b.eq	10a4 <ext_falloc_helper+0xfec>  // b.none
     eb8:	ldr	x0, [sp, #32]
     ebc:	ldr	x1, [x0]
     ec0:	ldr	x0, [sp, #208]
     ec4:	sub	x0, x1, x0
     ec8:	add	x2, sp, #0x58
     ecc:	add	x1, sp, #0x60
     ed0:	mov	x6, x2
     ed4:	mov	x5, x1
     ed8:	mov	x4, #0x0                   	// #0
     edc:	ldr	x3, [sp, #208]
     ee0:	mov	x2, x0
     ee4:	mov	w1, #0x3                   	// #3
     ee8:	ldr	x0, [sp, #72]
     eec:	bl	0 <ext2fs_new_range>
     ef0:	str	x0, [sp, #176]
     ef4:	ldr	x0, [sp, #176]
     ef8:	cmp	x0, #0x0
     efc:	b.ne	10ac <ext_falloc_helper+0xff4>  // b.any
     f00:	ldr	x0, [sp, #72]
     f04:	ldr	w0, [x0, #192]
     f08:	mov	w1, #0x1                   	// #1
     f0c:	lsl	w0, w1, w0
     f10:	neg	w0, w0
     f14:	sxtw	x1, w0
     f18:	ldr	x0, [sp, #96]
     f1c:	and	x2, x1, x0
     f20:	ldr	x0, [sp, #72]
     f24:	ldr	w0, [x0, #192]
     f28:	mov	w1, #0x1                   	// #1
     f2c:	lsl	w0, w1, w0
     f30:	sub	w0, w0, #0x1
     f34:	sxtw	x1, w0
     f38:	ldr	x0, [sp, #96]
     f3c:	and	x1, x1, x0
     f40:	ldr	x0, [sp, #88]
     f44:	add	x0, x1, x0
     f48:	mov	x3, x0
     f4c:	ldr	x1, [sp, #56]
     f50:	ldr	x0, [sp, #72]
     f54:	bl	18 <claim_range>
     f58:	str	x0, [sp, #176]
     f5c:	ldr	x0, [sp, #176]
     f60:	cmp	x0, #0x0
     f64:	b.ne	18f8 <ext_falloc_helper+0x1840>  // b.any
     f68:	ldr	x0, [sp, #32]
     f6c:	ldr	x0, [x0, #8]
     f70:	mov	x1, x0
     f74:	ldr	x0, [sp, #48]
     f78:	bl	0 <ext2fs_extent_goto>
     f7c:	str	x0, [sp, #176]
     f80:	ldr	x0, [sp, #176]
     f84:	cmp	x0, #0x0
     f88:	b.ne	1900 <ext_falloc_helper+0x1848>  // b.any
     f8c:	ldr	x0, [sp, #88]
     f90:	ldr	x1, [sp, #224]
     f94:	sub	x0, x1, x0
     f98:	str	x0, [sp, #224]
     f9c:	ldr	x0, [sp, #32]
     fa0:	ldr	x1, [x0, #8]
     fa4:	ldr	x0, [sp, #88]
     fa8:	sub	x1, x1, x0
     fac:	ldr	x0, [sp, #32]
     fb0:	str	x1, [x0, #8]
     fb4:	ldr	x0, [sp, #32]
     fb8:	ldr	x1, [x0]
     fbc:	ldr	x0, [sp, #88]
     fc0:	sub	x1, x1, x0
     fc4:	ldr	x0, [sp, #32]
     fc8:	str	x1, [x0]
     fcc:	ldr	x0, [sp, #32]
     fd0:	ldr	w0, [x0, #16]
     fd4:	ldr	x1, [sp, #88]
     fd8:	add	w1, w0, w1
     fdc:	ldr	x0, [sp, #32]
     fe0:	str	w1, [x0, #16]
     fe4:	ldr	x1, [sp, #32]
     fe8:	adrp	x0, 0 <dbg_print_extent>
     fec:	add	x0, x0, #0x0
     ff0:	bl	0 <dbg_print_extent>
     ff4:	ldr	x2, [sp, #32]
     ff8:	mov	w1, #0x0                   	// #0
     ffc:	ldr	x0, [sp, #48]
    1000:	bl	0 <ext2fs_extent_replace>
    1004:	str	x0, [sp, #176]
    1008:	ldr	x0, [sp, #176]
    100c:	cmp	x0, #0x0
    1010:	b.ne	1908 <ext_falloc_helper+0x1850>  // b.any
    1014:	ldr	x0, [sp, #48]
    1018:	bl	0 <ext2fs_extent_fix_parents>
    101c:	str	x0, [sp, #176]
    1020:	ldr	x0, [sp, #176]
    1024:	cmp	x0, #0x0
    1028:	b.ne	1910 <ext_falloc_helper+0x1858>  // b.any
    102c:	ldr	x0, [sp, #32]
    1030:	ldr	w0, [x0, #20]
    1034:	and	w0, w0, #0x2
    1038:	cmp	w0, #0x0
    103c:	b.ne	108c <ext_falloc_helper+0xfd4>  // b.any
    1040:	ldr	w0, [sp, #68]
    1044:	and	w0, w0, #0x1
    1048:	cmp	w0, #0x0
    104c:	b.eq	108c <ext_falloc_helper+0xfd4>  // b.none
    1050:	ldr	x0, [sp, #96]
    1054:	ldr	x1, [sp, #88]
    1058:	mov	w2, w1
    105c:	ldr	x1, [sp, #184]
    1060:	add	w1, w2, w1
    1064:	mov	x4, #0x0                   	// #0
    1068:	mov	x3, #0x0                   	// #0
    106c:	mov	w2, w1
    1070:	mov	x1, x0
    1074:	ldr	x0, [sp, #72]
    1078:	bl	0 <ext2fs_zero_blocks2>
    107c:	str	x0, [sp, #176]
    1080:	ldr	x0, [sp, #176]
    1084:	cmp	x0, #0x0
    1088:	b.ne	1918 <ext_falloc_helper+0x1860>  // b.any
    108c:	nop
    1090:	b	10b0 <ext_falloc_helper+0xff8>
    1094:	nop
    1098:	b	10b0 <ext_falloc_helper+0xff8>
    109c:	nop
    10a0:	b	10b0 <ext_falloc_helper+0xff8>
    10a4:	nop
    10a8:	b	10b0 <ext_falloc_helper+0xff8>
    10ac:	nop
    10b0:	ldr	x0, [sp, #224]
    10b4:	cmp	x0, #0x0
    10b8:	b.eq	1304 <ext_falloc_helper+0x124c>  // b.none
    10bc:	ldr	x0, [sp, #72]
    10c0:	ldr	w0, [x0, #192]
    10c4:	mov	w1, #0x1                   	// #1
    10c8:	lsl	w0, w1, w0
    10cc:	sub	w0, w0, #0x1
    10d0:	sxtw	x1, w0
    10d4:	ldr	x0, [sp, #24]
    10d8:	and	x0, x1, x0
    10dc:	cmp	x0, #0x0
    10e0:	b.eq	1304 <ext_falloc_helper+0x124c>  // b.none
    10e4:	ldr	x0, [sp, #72]
    10e8:	ldr	w0, [x0, #192]
    10ec:	mov	w1, #0x1                   	// #1
    10f0:	lsl	w0, w1, w0
    10f4:	sxtw	x1, w0
    10f8:	ldr	x0, [sp, #72]
    10fc:	ldr	w0, [x0, #192]
    1100:	mov	w2, #0x1                   	// #1
    1104:	lsl	w0, w2, w0
    1108:	sub	w0, w0, #0x1
    110c:	sxtw	x2, w0
    1110:	ldr	x0, [sp, #24]
    1114:	and	x0, x2, x0
    1118:	sub	x0, x1, x0
    111c:	str	x0, [sp, #184]
    1120:	ldr	x0, [sp, #72]
    1124:	ldr	w0, [x0, #192]
    1128:	mov	w1, #0x1                   	// #1
    112c:	lsl	w0, w1, w0
    1130:	sub	w0, w0, #0x1
    1134:	sxtw	x0, w0
    1138:	ldr	x1, [sp, #184]
    113c:	and	x0, x1, x0
    1140:	str	x0, [sp, #184]
    1144:	ldr	x1, [sp, #184]
    1148:	ldr	x0, [sp, #224]
    114c:	cmp	x1, x0
    1150:	b.ls	115c <ext_falloc_helper+0x10a4>  // b.plast
    1154:	ldr	x0, [sp, #224]
    1158:	str	x0, [sp, #184]
    115c:	ldr	x0, [sp, #24]
    1160:	str	x0, [sp, #136]
    1164:	ldr	x0, [sp, #136]
    1168:	add	x1, sp, #0x60
    116c:	mov	x4, x1
    1170:	mov	x3, x0
    1174:	ldr	x2, [sp, #56]
    1178:	ldr	w1, [sp, #64]
    117c:	ldr	x0, [sp, #72]
    1180:	bl	0 <ext2fs_map_cluster_block>
    1184:	str	x0, [sp, #176]
    1188:	ldr	x0, [sp, #176]
    118c:	cmp	x0, #0x0
    1190:	b.ne	1920 <ext_falloc_helper+0x1868>  // b.any
    1194:	ldr	x0, [sp, #96]
    1198:	cmp	x0, #0x0
    119c:	b.eq	130c <ext_falloc_helper+0x1254>  // b.none
    11a0:	ldr	x0, [sp, #96]
    11a4:	str	x0, [sp, #128]
    11a8:	ldr	x0, [sp, #184]
    11ac:	str	w0, [sp, #144]
    11b0:	ldr	w0, [sp, #68]
    11b4:	and	w0, w0, #0x2
    11b8:	cmp	w0, #0x0
    11bc:	b.eq	11c8 <ext_falloc_helper+0x1110>  // b.none
    11c0:	mov	w0, #0x0                   	// #0
    11c4:	b	11cc <ext_falloc_helper+0x1114>
    11c8:	mov	w0, #0x2                   	// #2
    11cc:	str	w0, [sp, #148]
    11d0:	add	x0, sp, #0x80
    11d4:	mov	x1, x0
    11d8:	adrp	x0, 0 <dbg_print_extent>
    11dc:	add	x0, x0, #0x0
    11e0:	bl	0 <dbg_print_extent>
    11e4:	ldr	x0, [sp, #136]
    11e8:	mov	x1, x0
    11ec:	ldr	x0, [sp, #48]
    11f0:	bl	0 <ext2fs_extent_goto>
    11f4:	add	x0, sp, #0x68
    11f8:	mov	x2, x0
    11fc:	mov	w1, #0x0                   	// #0
    1200:	ldr	x0, [sp, #48]
    1204:	bl	0 <ext2fs_extent_get>
    1208:	str	x0, [sp, #176]
    120c:	ldr	x1, [sp, #176]
    1210:	mov	x0, #0xb780                	// #46976
    1214:	movk	x0, #0x7f2b, lsl #16
    1218:	cmp	x1, x0
    121c:	b.ne	1228 <ext_falloc_helper+0x1170>  // b.any
    1220:	str	xzr, [sp, #112]
    1224:	b	1234 <ext_falloc_helper+0x117c>
    1228:	ldr	x0, [sp, #176]
    122c:	cmp	x0, #0x0
    1230:	b.ne	1928 <ext_falloc_helper+0x1870>  // b.any
    1234:	ldr	x1, [sp, #112]
    1238:	ldr	x0, [sp, #136]
    123c:	cmp	x1, x0
    1240:	b.ls	124c <ext_falloc_helper+0x1194>  // b.plast
    1244:	str	wzr, [sp, #220]
    1248:	b	1254 <ext_falloc_helper+0x119c>
    124c:	mov	w0, #0x1                   	// #1
    1250:	str	w0, [sp, #220]
    1254:	add	x0, sp, #0x80
    1258:	mov	x2, x0
    125c:	ldr	w1, [sp, #220]
    1260:	ldr	x0, [sp, #48]
    1264:	bl	0 <ext2fs_extent_insert>
    1268:	str	x0, [sp, #176]
    126c:	ldr	x0, [sp, #176]
    1270:	cmp	x0, #0x0
    1274:	b.ne	1930 <ext_falloc_helper+0x1878>  // b.any
    1278:	ldr	x0, [sp, #48]
    127c:	bl	0 <ext2fs_extent_fix_parents>
    1280:	str	x0, [sp, #176]
    1284:	ldr	x0, [sp, #176]
    1288:	cmp	x0, #0x0
    128c:	b.ne	1938 <ext_falloc_helper+0x1880>  // b.any
    1290:	ldr	w0, [sp, #148]
    1294:	and	w0, w0, #0x2
    1298:	cmp	w0, #0x0
    129c:	b.ne	12e0 <ext_falloc_helper+0x1228>  // b.any
    12a0:	ldr	w0, [sp, #68]
    12a4:	and	w0, w0, #0x1
    12a8:	cmp	w0, #0x0
    12ac:	b.eq	12e0 <ext_falloc_helper+0x1228>  // b.none
    12b0:	ldr	x0, [sp, #128]
    12b4:	ldr	w1, [sp, #144]
    12b8:	mov	x4, #0x0                   	// #0
    12bc:	mov	x3, #0x0                   	// #0
    12c0:	mov	w2, w1
    12c4:	mov	x1, x0
    12c8:	ldr	x0, [sp, #72]
    12cc:	bl	0 <ext2fs_zero_blocks2>
    12d0:	str	x0, [sp, #176]
    12d4:	ldr	x0, [sp, #176]
    12d8:	cmp	x0, #0x0
    12dc:	b.ne	1940 <ext_falloc_helper+0x1888>  // b.any
    12e0:	ldr	x1, [sp, #24]
    12e4:	ldr	x0, [sp, #184]
    12e8:	add	x0, x1, x0
    12ec:	str	x0, [sp, #24]
    12f0:	ldr	x1, [sp, #224]
    12f4:	ldr	x0, [sp, #184]
    12f8:	sub	x0, x1, x0
    12fc:	str	x0, [sp, #224]
    1300:	b	1310 <ext_falloc_helper+0x1258>
    1304:	nop
    1308:	b	1310 <ext_falloc_helper+0x1258>
    130c:	nop
    1310:	ldr	x1, [sp, #24]
    1314:	ldr	x0, [sp, #224]
    1318:	add	x0, x1, x0
    131c:	str	x0, [sp, #152]
    1320:	ldr	x0, [sp, #224]
    1324:	cmp	x0, #0x0
    1328:	b.eq	1544 <ext_falloc_helper+0x148c>  // b.none
    132c:	ldr	x0, [sp, #72]
    1330:	ldr	w0, [x0, #192]
    1334:	mov	w1, #0x1                   	// #1
    1338:	lsl	w0, w1, w0
    133c:	sub	w0, w0, #0x1
    1340:	sxtw	x1, w0
    1344:	ldr	x0, [sp, #152]
    1348:	and	x0, x1, x0
    134c:	cmp	x0, #0x0
    1350:	b.eq	1544 <ext_falloc_helper+0x148c>  // b.none
    1354:	ldr	x0, [sp, #72]
    1358:	ldr	w0, [x0, #192]
    135c:	mov	w1, #0x1                   	// #1
    1360:	lsl	w0, w1, w0
    1364:	sub	w0, w0, #0x1
    1368:	sxtw	x0, w0
    136c:	ldr	x1, [sp, #152]
    1370:	and	x0, x1, x0
    1374:	str	x0, [sp, #184]
    1378:	ldr	x1, [sp, #184]
    137c:	ldr	x0, [sp, #224]
    1380:	cmp	x1, x0
    1384:	b.ls	1390 <ext_falloc_helper+0x12d8>  // b.plast
    1388:	ldr	x0, [sp, #224]
    138c:	str	x0, [sp, #184]
    1390:	ldr	x0, [sp, #72]
    1394:	ldr	w0, [x0, #192]
    1398:	mov	w1, #0x1                   	// #1
    139c:	lsl	w0, w1, w0
    13a0:	neg	w0, w0
    13a4:	sxtw	x1, w0
    13a8:	ldr	x0, [sp, #152]
    13ac:	and	x0, x1, x0
    13b0:	str	x0, [sp, #136]
    13b4:	ldr	x0, [sp, #136]
    13b8:	add	x1, sp, #0x60
    13bc:	mov	x4, x1
    13c0:	mov	x3, x0
    13c4:	ldr	x2, [sp, #56]
    13c8:	ldr	w1, [sp, #64]
    13cc:	ldr	x0, [sp, #72]
    13d0:	bl	0 <ext2fs_map_cluster_block>
    13d4:	str	x0, [sp, #176]
    13d8:	ldr	x0, [sp, #176]
    13dc:	cmp	x0, #0x0
    13e0:	b.ne	1948 <ext_falloc_helper+0x1890>  // b.any
    13e4:	ldr	x0, [sp, #96]
    13e8:	cmp	x0, #0x0
    13ec:	b.eq	154c <ext_falloc_helper+0x1494>  // b.none
    13f0:	ldr	x0, [sp, #96]
    13f4:	str	x0, [sp, #128]
    13f8:	ldr	x0, [sp, #184]
    13fc:	str	w0, [sp, #144]
    1400:	ldr	w0, [sp, #68]
    1404:	and	w0, w0, #0x2
    1408:	cmp	w0, #0x0
    140c:	b.eq	1418 <ext_falloc_helper+0x1360>  // b.none
    1410:	mov	w0, #0x0                   	// #0
    1414:	b	141c <ext_falloc_helper+0x1364>
    1418:	mov	w0, #0x2                   	// #2
    141c:	str	w0, [sp, #148]
    1420:	add	x0, sp, #0x80
    1424:	mov	x1, x0
    1428:	adrp	x0, 0 <dbg_print_extent>
    142c:	add	x0, x0, #0x0
    1430:	bl	0 <dbg_print_extent>
    1434:	ldr	x0, [sp, #136]
    1438:	mov	x1, x0
    143c:	ldr	x0, [sp, #48]
    1440:	bl	0 <ext2fs_extent_goto>
    1444:	add	x0, sp, #0x68
    1448:	mov	x2, x0
    144c:	mov	w1, #0x0                   	// #0
    1450:	ldr	x0, [sp, #48]
    1454:	bl	0 <ext2fs_extent_get>
    1458:	str	x0, [sp, #176]
    145c:	ldr	x1, [sp, #176]
    1460:	mov	x0, #0xb780                	// #46976
    1464:	movk	x0, #0x7f2b, lsl #16
    1468:	cmp	x1, x0
    146c:	b.ne	1478 <ext_falloc_helper+0x13c0>  // b.any
    1470:	str	xzr, [sp, #112]
    1474:	b	1484 <ext_falloc_helper+0x13cc>
    1478:	ldr	x0, [sp, #176]
    147c:	cmp	x0, #0x0
    1480:	b.ne	1950 <ext_falloc_helper+0x1898>  // b.any
    1484:	ldr	x1, [sp, #112]
    1488:	ldr	x0, [sp, #136]
    148c:	cmp	x1, x0
    1490:	b.ls	149c <ext_falloc_helper+0x13e4>  // b.plast
    1494:	str	wzr, [sp, #220]
    1498:	b	14a4 <ext_falloc_helper+0x13ec>
    149c:	mov	w0, #0x1                   	// #1
    14a0:	str	w0, [sp, #220]
    14a4:	add	x0, sp, #0x80
    14a8:	mov	x2, x0
    14ac:	ldr	w1, [sp, #220]
    14b0:	ldr	x0, [sp, #48]
    14b4:	bl	0 <ext2fs_extent_insert>
    14b8:	str	x0, [sp, #176]
    14bc:	ldr	x0, [sp, #176]
    14c0:	cmp	x0, #0x0
    14c4:	b.ne	1958 <ext_falloc_helper+0x18a0>  // b.any
    14c8:	ldr	x0, [sp, #48]
    14cc:	bl	0 <ext2fs_extent_fix_parents>
    14d0:	str	x0, [sp, #176]
    14d4:	ldr	x0, [sp, #176]
    14d8:	cmp	x0, #0x0
    14dc:	b.ne	1960 <ext_falloc_helper+0x18a8>  // b.any
    14e0:	ldr	w0, [sp, #148]
    14e4:	and	w0, w0, #0x2
    14e8:	cmp	w0, #0x0
    14ec:	b.ne	1530 <ext_falloc_helper+0x1478>  // b.any
    14f0:	ldr	w0, [sp, #68]
    14f4:	and	w0, w0, #0x1
    14f8:	cmp	w0, #0x0
    14fc:	b.eq	1530 <ext_falloc_helper+0x1478>  // b.none
    1500:	ldr	x0, [sp, #128]
    1504:	ldr	w1, [sp, #144]
    1508:	mov	x4, #0x0                   	// #0
    150c:	mov	x3, #0x0                   	// #0
    1510:	mov	w2, w1
    1514:	mov	x1, x0
    1518:	ldr	x0, [sp, #72]
    151c:	bl	0 <ext2fs_zero_blocks2>
    1520:	str	x0, [sp, #176]
    1524:	ldr	x0, [sp, #176]
    1528:	cmp	x0, #0x0
    152c:	b.ne	1968 <ext_falloc_helper+0x18b0>  // b.any
    1530:	ldr	x1, [sp, #224]
    1534:	ldr	x0, [sp, #184]
    1538:	sub	x0, x1, x0
    153c:	str	x0, [sp, #224]
    1540:	b	1550 <ext_falloc_helper+0x1498>
    1544:	nop
    1548:	b	1550 <ext_falloc_helper+0x1498>
    154c:	nop
    1550:	ldr	x0, [sp, #224]
    1554:	cmp	x0, #0x0
    1558:	b.ne	1564 <ext_falloc_helper+0x14ac>  // b.any
    155c:	mov	x0, #0x0                   	// #0
    1560:	b	19a0 <ext_falloc_helper+0x18e8>
    1564:	ldr	x0, [sp, #24]
    1568:	str	x0, [sp, #136]
    156c:	ldr	w0, [sp, #68]
    1570:	and	w0, w0, #0x2
    1574:	cmp	w0, #0x0
    1578:	b.eq	158c <ext_falloc_helper+0x14d4>  // b.none
    157c:	ldr	w0, [sp, #164]
    1580:	str	w0, [sp, #172]
    1584:	str	wzr, [sp, #148]
    1588:	b	159c <ext_falloc_helper+0x14e4>
    158c:	ldr	w0, [sp, #168]
    1590:	str	w0, [sp, #172]
    1594:	mov	w0, #0x2                   	// #2
    1598:	str	w0, [sp, #148]
    159c:	ldr	x0, [sp, #232]
    15a0:	str	x0, [sp, #96]
    15a4:	ldr	x0, [sp, #224]
    15a8:	str	x0, [sp, #152]
    15ac:	str	xzr, [sp, #200]
    15b0:	b	183c <ext_falloc_helper+0x1784>
    15b4:	ldr	x1, [sp, #136]
    15b8:	ldr	x0, [sp, #72]
    15bc:	ldr	w0, [x0, #192]
    15c0:	mov	w2, #0x1                   	// #1
    15c4:	lsl	w0, w2, w0
    15c8:	sub	w0, w0, #0x1
    15cc:	sxtw	x0, w0
    15d0:	and	x0, x1, x0
    15d4:	str	x0, [sp, #184]
    15d8:	ldr	w1, [sp, #172]
    15dc:	ldr	x2, [sp, #224]
    15e0:	ldr	x0, [sp, #184]
    15e4:	add	x0, x2, x0
    15e8:	cmp	x1, x0
    15ec:	csel	x0, x1, x0, ls  // ls = plast
    15f0:	str	x0, [sp, #208]
    15f4:	ldr	x0, [sp, #72]
    15f8:	ldr	w0, [x0, #192]
    15fc:	mov	w1, #0x1                   	// #1
    1600:	lsl	w0, w1, w0
    1604:	neg	w0, w0
    1608:	sxtw	x1, w0
    160c:	ldr	x0, [sp, #96]
    1610:	and	x0, x1, x0
    1614:	add	x2, sp, #0x58
    1618:	add	x1, sp, #0x60
    161c:	mov	x6, x2
    1620:	mov	x5, x1
    1624:	mov	x4, #0x0                   	// #0
    1628:	ldr	x3, [sp, #208]
    162c:	mov	x2, x0
    1630:	mov	w1, #0x0                   	// #0
    1634:	ldr	x0, [sp, #72]
    1638:	bl	0 <ext2fs_new_range>
    163c:	str	x0, [sp, #176]
    1640:	ldr	x0, [sp, #176]
    1644:	cmp	x0, #0x0
    1648:	b.ne	1970 <ext_falloc_helper+0x18b8>  // b.any
    164c:	ldr	x0, [sp, #96]
    1650:	ldr	x1, [sp, #88]
    1654:	mov	x3, x1
    1658:	mov	x2, x0
    165c:	ldr	x1, [sp, #56]
    1660:	ldr	x0, [sp, #72]
    1664:	bl	18 <claim_range>
    1668:	str	x0, [sp, #176]
    166c:	ldr	x0, [sp, #176]
    1670:	cmp	x0, #0x0
    1674:	b.ne	1978 <ext_falloc_helper+0x18c0>  // b.any
    1678:	ldr	x1, [sp, #96]
    167c:	ldr	x0, [sp, #184]
    1680:	add	x0, x1, x0
    1684:	str	x0, [sp, #128]
    1688:	ldr	x0, [sp, #88]
    168c:	mov	w1, w0
    1690:	ldr	x0, [sp, #184]
    1694:	sub	w0, w1, w0
    1698:	str	w0, [sp, #144]
    169c:	add	x0, sp, #0x80
    16a0:	mov	x1, x0
    16a4:	adrp	x0, 0 <dbg_print_extent>
    16a8:	add	x0, x0, #0x0
    16ac:	bl	0 <dbg_print_extent>
    16b0:	ldr	x0, [sp, #136]
    16b4:	mov	x1, x0
    16b8:	ldr	x0, [sp, #48]
    16bc:	bl	0 <ext2fs_extent_goto>
    16c0:	add	x0, sp, #0x68
    16c4:	mov	x2, x0
    16c8:	mov	w1, #0x0                   	// #0
    16cc:	ldr	x0, [sp, #48]
    16d0:	bl	0 <ext2fs_extent_get>
    16d4:	str	x0, [sp, #176]
    16d8:	ldr	x1, [sp, #176]
    16dc:	mov	x0, #0xb780                	// #46976
    16e0:	movk	x0, #0x7f2b, lsl #16
    16e4:	cmp	x1, x0
    16e8:	b.ne	16f4 <ext_falloc_helper+0x163c>  // b.any
    16ec:	str	xzr, [sp, #112]
    16f0:	b	1700 <ext_falloc_helper+0x1648>
    16f4:	ldr	x0, [sp, #176]
    16f8:	cmp	x0, #0x0
    16fc:	b.ne	1980 <ext_falloc_helper+0x18c8>  // b.any
    1700:	ldr	x1, [sp, #112]
    1704:	ldr	x0, [sp, #136]
    1708:	cmp	x1, x0
    170c:	b.ls	1718 <ext_falloc_helper+0x1660>  // b.plast
    1710:	str	wzr, [sp, #220]
    1714:	b	1720 <ext_falloc_helper+0x1668>
    1718:	mov	w0, #0x1                   	// #1
    171c:	str	w0, [sp, #220]
    1720:	add	x0, sp, #0x80
    1724:	mov	x2, x0
    1728:	ldr	w1, [sp, #220]
    172c:	ldr	x0, [sp, #48]
    1730:	bl	0 <ext2fs_extent_insert>
    1734:	str	x0, [sp, #176]
    1738:	ldr	x0, [sp, #176]
    173c:	cmp	x0, #0x0
    1740:	b.ne	1988 <ext_falloc_helper+0x18d0>  // b.any
    1744:	ldr	x0, [sp, #48]
    1748:	bl	0 <ext2fs_extent_fix_parents>
    174c:	str	x0, [sp, #176]
    1750:	ldr	x0, [sp, #176]
    1754:	cmp	x0, #0x0
    1758:	b.ne	1990 <ext_falloc_helper+0x18d8>  // b.any
    175c:	ldr	w0, [sp, #148]
    1760:	and	w0, w0, #0x2
    1764:	cmp	w0, #0x0
    1768:	b.ne	17ac <ext_falloc_helper+0x16f4>  // b.any
    176c:	ldr	w0, [sp, #68]
    1770:	and	w0, w0, #0x1
    1774:	cmp	w0, #0x0
    1778:	b.eq	17ac <ext_falloc_helper+0x16f4>  // b.none
    177c:	ldr	x0, [sp, #96]
    1780:	ldr	x1, [sp, #88]
    1784:	mov	x4, #0x0                   	// #0
    1788:	mov	x3, #0x0                   	// #0
    178c:	mov	w2, w1
    1790:	mov	x1, x0
    1794:	ldr	x0, [sp, #72]
    1798:	bl	0 <ext2fs_zero_blocks2>
    179c:	str	x0, [sp, #176]
    17a0:	ldr	x0, [sp, #176]
    17a4:	cmp	x0, #0x0
    17a8:	b.ne	1998 <ext_falloc_helper+0x18e0>  // b.any
    17ac:	ldr	x1, [sp, #88]
    17b0:	ldr	x0, [sp, #184]
    17b4:	sub	x0, x1, x0
    17b8:	ldr	x1, [sp, #200]
    17bc:	add	x0, x1, x0
    17c0:	str	x0, [sp, #200]
    17c4:	ldr	x0, [sp, #88]
    17c8:	ldr	x1, [sp, #184]
    17cc:	sub	x0, x1, x0
    17d0:	ldr	x1, [sp, #224]
    17d4:	add	x0, x1, x0
    17d8:	str	x0, [sp, #224]
    17dc:	ldr	x1, [sp, #136]
    17e0:	ldr	x2, [sp, #88]
    17e4:	ldr	x0, [sp, #184]
    17e8:	sub	x0, x2, x0
    17ec:	add	x0, x1, x0
    17f0:	str	x0, [sp, #136]
    17f4:	ldr	x1, [sp, #88]
    17f8:	ldr	x0, [sp, #184]
    17fc:	sub	x1, x1, x0
    1800:	ldr	x0, [sp, #96]
    1804:	add	x0, x1, x0
    1808:	str	x0, [sp, #96]
    180c:	ldr	x0, [sp, #72]
    1810:	ldr	x0, [x0, #32]
    1814:	bl	0 <ext2fs_blocks_count>
    1818:	mov	x1, x0
    181c:	ldr	x0, [sp, #96]
    1820:	cmp	x1, x0
    1824:	b.hi	183c <ext_falloc_helper+0x1784>  // b.pmore
    1828:	ldr	x0, [sp, #72]
    182c:	ldr	x0, [x0, #32]
    1830:	ldr	w0, [x0, #20]
    1834:	mov	w0, w0
    1838:	str	x0, [sp, #96]
    183c:	ldr	x1, [sp, #200]
    1840:	ldr	x0, [sp, #152]
    1844:	cmp	x1, x0
    1848:	b.cc	15b4 <ext_falloc_helper+0x14fc>  // b.lo, b.ul, b.last
    184c:	b	199c <ext_falloc_helper+0x18e4>
    1850:	nop
    1854:	b	199c <ext_falloc_helper+0x18e4>
    1858:	nop
    185c:	b	199c <ext_falloc_helper+0x18e4>
    1860:	nop
    1864:	b	199c <ext_falloc_helper+0x18e4>
    1868:	nop
    186c:	b	199c <ext_falloc_helper+0x18e4>
    1870:	nop
    1874:	b	199c <ext_falloc_helper+0x18e4>
    1878:	nop
    187c:	b	199c <ext_falloc_helper+0x18e4>
    1880:	nop
    1884:	b	199c <ext_falloc_helper+0x18e4>
    1888:	nop
    188c:	b	199c <ext_falloc_helper+0x18e4>
    1890:	nop
    1894:	b	199c <ext_falloc_helper+0x18e4>
    1898:	nop
    189c:	b	199c <ext_falloc_helper+0x18e4>
    18a0:	nop
    18a4:	b	199c <ext_falloc_helper+0x18e4>
    18a8:	nop
    18ac:	b	199c <ext_falloc_helper+0x18e4>
    18b0:	nop
    18b4:	b	199c <ext_falloc_helper+0x18e4>
    18b8:	nop
    18bc:	b	199c <ext_falloc_helper+0x18e4>
    18c0:	nop
    18c4:	b	199c <ext_falloc_helper+0x18e4>
    18c8:	nop
    18cc:	b	199c <ext_falloc_helper+0x18e4>
    18d0:	nop
    18d4:	b	199c <ext_falloc_helper+0x18e4>
    18d8:	nop
    18dc:	b	199c <ext_falloc_helper+0x18e4>
    18e0:	nop
    18e4:	b	199c <ext_falloc_helper+0x18e4>
    18e8:	nop
    18ec:	b	199c <ext_falloc_helper+0x18e4>
    18f0:	nop
    18f4:	b	199c <ext_falloc_helper+0x18e4>
    18f8:	nop
    18fc:	b	199c <ext_falloc_helper+0x18e4>
    1900:	nop
    1904:	b	199c <ext_falloc_helper+0x18e4>
    1908:	nop
    190c:	b	199c <ext_falloc_helper+0x18e4>
    1910:	nop
    1914:	b	199c <ext_falloc_helper+0x18e4>
    1918:	nop
    191c:	b	199c <ext_falloc_helper+0x18e4>
    1920:	nop
    1924:	b	199c <ext_falloc_helper+0x18e4>
    1928:	nop
    192c:	b	199c <ext_falloc_helper+0x18e4>
    1930:	nop
    1934:	b	199c <ext_falloc_helper+0x18e4>
    1938:	nop
    193c:	b	199c <ext_falloc_helper+0x18e4>
    1940:	nop
    1944:	b	199c <ext_falloc_helper+0x18e4>
    1948:	nop
    194c:	b	199c <ext_falloc_helper+0x18e4>
    1950:	nop
    1954:	b	199c <ext_falloc_helper+0x18e4>
    1958:	nop
    195c:	b	199c <ext_falloc_helper+0x18e4>
    1960:	nop
    1964:	b	199c <ext_falloc_helper+0x18e4>
    1968:	nop
    196c:	b	199c <ext_falloc_helper+0x18e4>
    1970:	nop
    1974:	b	199c <ext_falloc_helper+0x18e4>
    1978:	nop
    197c:	b	199c <ext_falloc_helper+0x18e4>
    1980:	nop
    1984:	b	199c <ext_falloc_helper+0x18e4>
    1988:	nop
    198c:	b	199c <ext_falloc_helper+0x18e4>
    1990:	nop
    1994:	b	199c <ext_falloc_helper+0x18e4>
    1998:	nop
    199c:	ldr	x0, [sp, #176]
    19a0:	ldp	x29, x30, [sp], #224
    19a4:	ret

00000000000019a8 <extent_fallocate>:
    19a8:	sub	sp, sp, #0xe0
    19ac:	stp	x29, x30, [sp, #16]
    19b0:	add	x29, sp, #0x10
    19b4:	str	x0, [sp, #72]
    19b8:	str	w1, [sp, #68]
    19bc:	str	w2, [sp, #64]
    19c0:	str	x3, [sp, #56]
    19c4:	str	x4, [sp, #48]
    19c8:	str	x5, [sp, #40]
    19cc:	str	x6, [sp, #32]
    19d0:	str	xzr, [sp, #184]
    19d4:	ldr	x1, [sp, #40]
    19d8:	ldr	x0, [sp, #32]
    19dc:	add	x0, x1, x0
    19e0:	sub	x0, x0, #0x1
    19e4:	str	x0, [sp, #168]
    19e8:	add	x0, sp, #0x88
    19ec:	mov	x3, x0
    19f0:	ldr	x2, [sp, #56]
    19f4:	ldr	w1, [sp, #64]
    19f8:	ldr	x0, [sp, #72]
    19fc:	bl	0 <ext2fs_extent_open2>
    1a00:	str	x0, [sp, #200]
    1a04:	ldr	x0, [sp, #200]
    1a08:	cmp	x0, #0x0
    1a0c:	b.eq	1a18 <extent_fallocate+0x70>  // b.none
    1a10:	ldr	x0, [sp, #200]
    1a14:	b	1e50 <extent_fallocate+0x4a8>
    1a18:	nop
    1a1c:	ldr	x0, [sp, #136]
    1a20:	ldr	x1, [sp, #40]
    1a24:	bl	0 <ext2fs_extent_goto>
    1a28:	ldr	x0, [sp, #136]
    1a2c:	add	x1, sp, #0x70
    1a30:	mov	x2, x1
    1a34:	mov	w1, #0x0                   	// #0
    1a38:	bl	0 <ext2fs_extent_get>
    1a3c:	str	x0, [sp, #200]
    1a40:	ldr	x1, [sp, #200]
    1a44:	mov	x0, #0xb780                	// #46976
    1a48:	movk	x0, #0x7f2b, lsl #16
    1a4c:	cmp	x1, x0
    1a50:	b.ne	1b04 <extent_fallocate+0x15c>  // b.any
    1a54:	ldr	x0, [sp, #72]
    1a58:	ldr	x0, [x0, #32]
    1a5c:	bl	0 <ext2fs_blocks_count>
    1a60:	str	x0, [sp, #144]
    1a64:	ldr	x0, [sp, #48]
    1a68:	cmn	x0, #0x1
    1a6c:	b.ne	1a88 <extent_fallocate+0xe0>  // b.any
    1a70:	ldr	x3, [sp, #40]
    1a74:	ldr	x2, [sp, #56]
    1a78:	ldr	w1, [sp, #64]
    1a7c:	ldr	x0, [sp, #72]
    1a80:	bl	0 <ext2fs_find_inode_goal>
    1a84:	str	x0, [sp, #48]
    1a88:	ldr	x0, [sp, #72]
    1a8c:	ldr	x4, [x0, #88]
    1a90:	ldr	x1, [sp, #48]
    1a94:	ldr	x0, [sp, #144]
    1a98:	sub	x0, x0, #0x1
    1a9c:	add	x2, sp, #0x30
    1aa0:	mov	x3, x2
    1aa4:	mov	x2, x0
    1aa8:	mov	x0, x4
    1aac:	bl	0 <ext2fs_find_first_zero_block_bitmap2>
    1ab0:	str	x0, [sp, #200]
    1ab4:	ldr	x1, [sp, #48]
    1ab8:	ldr	x0, [sp, #40]
    1abc:	add	x0, x1, x0
    1ac0:	str	x0, [sp, #48]
    1ac4:	ldr	x1, [sp, #136]
    1ac8:	ldr	x0, [sp, #48]
    1acc:	str	x0, [sp, #8]
    1ad0:	ldr	x0, [sp, #32]
    1ad4:	str	x0, [sp]
    1ad8:	ldr	x7, [sp, #40]
    1adc:	mov	x6, #0x0                   	// #0
    1ae0:	mov	x5, #0x0                   	// #0
    1ae4:	mov	x4, x1
    1ae8:	ldr	x3, [sp, #56]
    1aec:	ldr	w2, [sp, #64]
    1af0:	ldr	w1, [sp, #68]
    1af4:	ldr	x0, [sp, #72]
    1af8:	bl	b8 <ext_falloc_helper>
    1afc:	str	x0, [sp, #200]
    1b00:	b	1e44 <extent_fallocate+0x49c>
    1b04:	ldr	x0, [sp, #200]
    1b08:	cmp	x0, #0x0
    1b0c:	b.ne	1e18 <extent_fallocate+0x470>  // b.any
    1b10:	add	x0, sp, #0x70
    1b14:	mov	x1, x0
    1b18:	adrp	x0, 0 <dbg_print_extent>
    1b1c:	add	x0, x0, #0x0
    1b20:	bl	0 <dbg_print_extent>
    1b24:	ldr	x1, [sp, #120]
    1b28:	ldr	w0, [sp, #128]
    1b2c:	mov	w0, w0
    1b30:	add	x0, x1, x0
    1b34:	str	x0, [sp, #176]
    1b38:	ldr	x0, [sp, #120]
    1b3c:	ldr	x1, [sp, #40]
    1b40:	cmp	x1, x0
    1b44:	b.cs	1bb8 <extent_fallocate+0x210>  // b.hs, b.nlast
    1b48:	ldr	x1, [sp, #112]
    1b4c:	ldr	x0, [sp, #120]
    1b50:	ldr	x2, [sp, #40]
    1b54:	sub	x0, x2, x0
    1b58:	add	x0, x1, x0
    1b5c:	str	x0, [sp, #48]
    1b60:	ldr	x2, [sp, #136]
    1b64:	ldr	x1, [sp, #120]
    1b68:	ldr	x0, [sp, #40]
    1b6c:	sub	x0, x1, x0
    1b70:	ldr	x1, [sp, #48]
    1b74:	add	x3, sp, #0x70
    1b78:	str	x1, [sp, #8]
    1b7c:	str	x0, [sp]
    1b80:	ldr	x7, [sp, #40]
    1b84:	mov	x6, x3
    1b88:	mov	x5, #0x0                   	// #0
    1b8c:	mov	x4, x2
    1b90:	ldr	x3, [sp, #56]
    1b94:	ldr	w2, [sp, #64]
    1b98:	ldr	w1, [sp, #68]
    1b9c:	ldr	x0, [sp, #72]
    1ba0:	bl	b8 <ext_falloc_helper>
    1ba4:	str	x0, [sp, #200]
    1ba8:	ldr	x0, [sp, #200]
    1bac:	cmp	x0, #0x0
    1bb0:	b.ne	1e20 <extent_fallocate+0x478>  // b.any
    1bb4:	b	1a1c <extent_fallocate+0x74>
    1bb8:	ldr	x1, [sp, #176]
    1bbc:	ldr	x0, [sp, #40]
    1bc0:	cmp	x1, x0
    1bc4:	b.cc	1bdc <extent_fallocate+0x234>  // b.lo, b.ul, b.last
    1bc8:	ldr	x0, [sp, #176]
    1bcc:	str	x0, [sp, #192]
    1bd0:	add	x0, sp, #0x70
    1bd4:	str	x0, [sp, #216]
    1bd8:	b	1be8 <extent_fallocate+0x240>
    1bdc:	ldr	x0, [sp, #40]
    1be0:	str	x0, [sp, #192]
    1be4:	str	xzr, [sp, #216]
    1be8:	ldr	x1, [sp, #112]
    1bec:	ldr	x0, [sp, #120]
    1bf0:	ldr	x2, [sp, #192]
    1bf4:	sub	x0, x2, x0
    1bf8:	add	x0, x1, x0
    1bfc:	str	x0, [sp, #48]
    1c00:	ldr	x0, [sp, #136]
    1c04:	add	x1, sp, #0x58
    1c08:	mov	x2, x1
    1c0c:	mov	w1, #0x7                   	// #7
    1c10:	bl	0 <ext2fs_extent_get>
    1c14:	str	x0, [sp, #200]
    1c18:	add	x0, sp, #0x58
    1c1c:	mov	x1, x0
    1c20:	adrp	x0, 0 <dbg_print_extent>
    1c24:	add	x0, x0, #0x0
    1c28:	bl	0 <dbg_print_extent>
    1c2c:	ldr	x0, [sp, #200]
    1c30:	cmp	x0, #0x0
    1c34:	b.ne	1c54 <extent_fallocate+0x2ac>  // b.any
    1c38:	ldr	x1, [sp, #96]
    1c3c:	ldr	x0, [sp, #120]
    1c40:	cmp	x1, x0
    1c44:	b.hi	1c54 <extent_fallocate+0x2ac>  // b.pmore
    1c48:	mov	x0, #0xb77c                	// #46972
    1c4c:	movk	x0, #0x7f2b, lsl #16
    1c50:	str	x0, [sp, #200]
    1c54:	ldr	x0, [sp, #200]
    1c58:	cmp	x0, #0x0
    1c5c:	b.eq	1c74 <extent_fallocate+0x2cc>  // b.none
    1c60:	ldr	x1, [sp, #200]
    1c64:	mov	x0, #0xb77c                	// #46972
    1c68:	movk	x0, #0x7f2b, lsl #16
    1c6c:	cmp	x1, x0
    1c70:	b.ne	1e28 <extent_fallocate+0x480>  // b.any
    1c74:	ldr	x1, [sp, #200]
    1c78:	mov	x0, #0xb77c                	// #46972
    1c7c:	movk	x0, #0x7f2b, lsl #16
    1c80:	cmp	x1, x0
    1c84:	b.eq	1c9c <extent_fallocate+0x2f4>  // b.none
    1c88:	ldr	x1, [sp, #96]
    1c8c:	ldr	x0, [sp, #168]
    1c90:	add	x0, x0, #0x1
    1c94:	cmp	x1, x0
    1c98:	b.ls	1cac <extent_fallocate+0x304>  // b.plast
    1c9c:	ldr	x0, [sp, #168]
    1ca0:	str	x0, [sp, #184]
    1ca4:	str	xzr, [sp, #208]
    1ca8:	b	1cc0 <extent_fallocate+0x318>
    1cac:	ldr	x0, [sp, #96]
    1cb0:	sub	x0, x0, #0x1
    1cb4:	str	x0, [sp, #184]
    1cb8:	add	x0, sp, #0x58
    1cbc:	str	x0, [sp, #208]
    1cc0:	ldr	x1, [sp, #192]
    1cc4:	ldr	x0, [sp, #176]
    1cc8:	sub	x0, x1, x0
    1ccc:	str	x0, [sp, #160]
    1cd0:	ldr	x1, [sp, #200]
    1cd4:	mov	x0, #0xb77c                	// #46972
    1cd8:	movk	x0, #0x7f2b, lsl #16
    1cdc:	cmp	x1, x0
    1ce0:	b.eq	1d14 <extent_fallocate+0x36c>  // b.none
    1ce4:	ldr	x0, [sp, #96]
    1ce8:	ldr	x1, [sp, #184]
    1cec:	sub	x0, x1, x0
    1cf0:	ldr	x1, [sp, #160]
    1cf4:	cmp	x1, x0
    1cf8:	b.ls	1d14 <extent_fallocate+0x36c>  // b.plast
    1cfc:	ldr	x1, [sp, #88]
    1d00:	ldr	x0, [sp, #96]
    1d04:	ldr	x2, [sp, #192]
    1d08:	sub	x0, x2, x0
    1d0c:	add	x0, x1, x0
    1d10:	str	x0, [sp, #48]
    1d14:	str	xzr, [sp, #200]
    1d18:	ldr	x1, [sp, #192]
    1d1c:	ldr	x0, [sp, #184]
    1d20:	cmp	x1, x0
    1d24:	b.hi	1d84 <extent_fallocate+0x3dc>  // b.pmore
    1d28:	ldr	x1, [sp, #184]
    1d2c:	ldr	x0, [sp, #192]
    1d30:	sub	x0, x1, x0
    1d34:	add	x0, x0, #0x1
    1d38:	str	x0, [sp, #152]
    1d3c:	ldr	x1, [sp, #136]
    1d40:	ldr	x0, [sp, #48]
    1d44:	str	x0, [sp, #8]
    1d48:	ldr	x0, [sp, #152]
    1d4c:	str	x0, [sp]
    1d50:	ldr	x7, [sp, #192]
    1d54:	ldr	x6, [sp, #208]
    1d58:	ldr	x5, [sp, #216]
    1d5c:	mov	x4, x1
    1d60:	ldr	x3, [sp, #56]
    1d64:	ldr	w2, [sp, #64]
    1d68:	ldr	w1, [sp, #68]
    1d6c:	ldr	x0, [sp, #72]
    1d70:	bl	b8 <ext_falloc_helper>
    1d74:	str	x0, [sp, #200]
    1d78:	ldr	x0, [sp, #200]
    1d7c:	cmp	x0, #0x0
    1d80:	b.ne	1e30 <extent_fallocate+0x488>  // b.any
    1d84:	ldr	x1, [sp, #184]
    1d88:	ldr	x0, [sp, #168]
    1d8c:	cmp	x1, x0
    1d90:	b.eq	1e38 <extent_fallocate+0x490>  // b.none
    1d94:	ldr	x0, [sp, #136]
    1d98:	ldr	x1, [sp, #96]
    1d9c:	bl	0 <ext2fs_extent_goto>
    1da0:	str	x0, [sp, #200]
    1da4:	ldr	x0, [sp, #200]
    1da8:	cmp	x0, #0x0
    1dac:	b.ne	1e40 <extent_fallocate+0x498>  // b.any
    1db0:	ldr	x1, [sp, #96]
    1db4:	ldr	w0, [sp, #104]
    1db8:	mov	w0, w0
    1dbc:	add	x0, x1, x0
    1dc0:	str	x0, [sp, #176]
    1dc4:	add	x2, sp, #0x70
    1dc8:	add	x3, sp, #0x58
    1dcc:	ldp	x0, x1, [x3]
    1dd0:	stp	x0, x1, [x2]
    1dd4:	ldr	x0, [x3, #16]
    1dd8:	str	x0, [x2, #16]
    1ddc:	add	x0, sp, #0x70
    1de0:	str	x0, [sp, #216]
    1de4:	ldr	x0, [sp, #176]
    1de8:	str	x0, [sp, #192]
    1dec:	ldr	x1, [sp, #112]
    1df0:	ldr	x0, [sp, #120]
    1df4:	ldr	x2, [sp, #192]
    1df8:	sub	x0, x2, x0
    1dfc:	add	x0, x1, x0
    1e00:	str	x0, [sp, #48]
    1e04:	ldr	x1, [sp, #184]
    1e08:	ldr	x0, [sp, #168]
    1e0c:	cmp	x1, x0
    1e10:	b.cc	1c00 <extent_fallocate+0x258>  // b.lo, b.ul, b.last
    1e14:	b	1e44 <extent_fallocate+0x49c>
    1e18:	nop
    1e1c:	b	1e44 <extent_fallocate+0x49c>
    1e20:	nop
    1e24:	b	1e44 <extent_fallocate+0x49c>
    1e28:	nop
    1e2c:	b	1e44 <extent_fallocate+0x49c>
    1e30:	nop
    1e34:	b	1e44 <extent_fallocate+0x49c>
    1e38:	nop
    1e3c:	b	1e44 <extent_fallocate+0x49c>
    1e40:	nop
    1e44:	ldr	x0, [sp, #136]
    1e48:	bl	0 <ext2fs_extent_free>
    1e4c:	ldr	x0, [sp, #200]
    1e50:	ldp	x29, x30, [sp, #16]
    1e54:	add	sp, sp, #0xe0
    1e58:	ret

0000000000001e5c <ext2fs_fallocate>:
    1e5c:	stp	x29, x30, [sp, #-224]!
    1e60:	mov	x29, sp
    1e64:	str	x0, [sp, #56]
    1e68:	str	w1, [sp, #52]
    1e6c:	str	w2, [sp, #48]
    1e70:	str	x3, [sp, #40]
    1e74:	str	x4, [sp, #32]
    1e78:	str	x5, [sp, #24]
    1e7c:	str	x6, [sp, #16]
    1e80:	ldr	w0, [sp, #52]
    1e84:	and	w0, w0, #0x2
    1e88:	cmp	w0, #0x0
    1e8c:	b.eq	1ea0 <ext2fs_fallocate+0x44>  // b.none
    1e90:	ldr	w0, [sp, #52]
    1e94:	and	w0, w0, #0x4
    1e98:	cmp	w0, #0x0
    1e9c:	b.ne	1eb0 <ext2fs_fallocate+0x54>  // b.any
    1ea0:	ldr	w0, [sp, #52]
    1ea4:	and	w0, w0, #0xfffffff0
    1ea8:	cmp	w0, #0x0
    1eac:	b.eq	1ebc <ext2fs_fallocate+0x60>  // b.none
    1eb0:	mov	x0, #0xb747                	// #46919
    1eb4:	movk	x0, #0x7f2b, lsl #16
    1eb8:	b	205c <ext2fs_fallocate+0x200>
    1ebc:	ldr	x0, [sp, #56]
    1ec0:	ldr	x0, [x0, #32]
    1ec4:	bl	0 <ext2fs_blocks_count>
    1ec8:	mov	x1, x0
    1ecc:	ldr	x0, [sp, #16]
    1ed0:	cmp	x0, x1
    1ed4:	b.ls	1ee4 <ext2fs_fallocate+0x88>  // b.plast
    1ed8:	mov	x0, #0xb748                	// #46920
    1edc:	movk	x0, #0x7f2b, lsl #16
    1ee0:	b	205c <ext2fs_fallocate+0x200>
    1ee4:	ldr	x0, [sp, #16]
    1ee8:	cmp	x0, #0x0
    1eec:	b.ne	1ef8 <ext2fs_fallocate+0x9c>  // b.any
    1ef0:	mov	x0, #0x0                   	// #0
    1ef4:	b	205c <ext2fs_fallocate+0x200>
    1ef8:	ldr	x0, [sp, #40]
    1efc:	cmp	x0, #0x0
    1f00:	b.ne	1f38 <ext2fs_fallocate+0xdc>  // b.any
    1f04:	add	x0, sp, #0x50
    1f08:	mov	x2, x0
    1f0c:	ldr	w1, [sp, #48]
    1f10:	ldr	x0, [sp, #56]
    1f14:	bl	0 <ext2fs_read_inode>
    1f18:	str	x0, [sp, #208]
    1f1c:	ldr	x0, [sp, #208]
    1f20:	cmp	x0, #0x0
    1f24:	b.eq	1f30 <ext2fs_fallocate+0xd4>  // b.none
    1f28:	ldr	x0, [sp, #208]
    1f2c:	b	205c <ext2fs_fallocate+0x200>
    1f30:	add	x0, sp, #0x50
    1f34:	str	x0, [sp, #40]
    1f38:	ldr	x0, [sp, #40]
    1f3c:	ldr	w0, [x0, #32]
    1f40:	and	w0, w0, #0x80000
    1f44:	cmp	w0, #0x0
    1f48:	b.eq	1f74 <ext2fs_fallocate+0x118>  // b.none
    1f4c:	ldr	x6, [sp, #16]
    1f50:	ldr	x5, [sp, #24]
    1f54:	ldr	x4, [sp, #32]
    1f58:	ldr	x3, [sp, #40]
    1f5c:	ldr	w2, [sp, #48]
    1f60:	ldr	w1, [sp, #52]
    1f64:	ldr	x0, [sp, #56]
    1f68:	bl	19a8 <extent_fallocate>
    1f6c:	str	x0, [sp, #208]
    1f70:	b	2038 <ext2fs_fallocate+0x1dc>
    1f74:	ldr	x0, [sp, #24]
    1f78:	str	x0, [sp, #216]
    1f7c:	b	201c <ext2fs_fallocate+0x1c0>
    1f80:	add	x0, sp, #0x48
    1f84:	mov	x7, x0
    1f88:	mov	x6, #0x0                   	// #0
    1f8c:	ldr	x5, [sp, #216]
    1f90:	mov	w4, #0x0                   	// #0
    1f94:	mov	x3, #0x0                   	// #0
    1f98:	ldr	x2, [sp, #40]
    1f9c:	ldr	w1, [sp, #48]
    1fa0:	ldr	x0, [sp, #56]
    1fa4:	bl	0 <ext2fs_bmap2>
    1fa8:	str	x0, [sp, #208]
    1fac:	ldr	x0, [sp, #208]
    1fb0:	cmp	x0, #0x0
    1fb4:	b.eq	1fc0 <ext2fs_fallocate+0x164>  // b.none
    1fb8:	ldr	x0, [sp, #208]
    1fbc:	b	205c <ext2fs_fallocate+0x200>
    1fc0:	ldr	x0, [sp, #72]
    1fc4:	cmp	x0, #0x0
    1fc8:	b.ne	200c <ext2fs_fallocate+0x1b0>  // b.any
    1fcc:	add	x0, sp, #0x48
    1fd0:	mov	x7, x0
    1fd4:	mov	x6, #0x0                   	// #0
    1fd8:	ldr	x5, [sp, #216]
    1fdc:	mov	w4, #0xd                   	// #13
    1fe0:	mov	x3, #0x0                   	// #0
    1fe4:	ldr	x2, [sp, #40]
    1fe8:	ldr	w1, [sp, #48]
    1fec:	ldr	x0, [sp, #56]
    1ff0:	bl	0 <ext2fs_bmap2>
    1ff4:	str	x0, [sp, #208]
    1ff8:	ldr	x0, [sp, #208]
    1ffc:	cmp	x0, #0x0
    2000:	b.eq	2010 <ext2fs_fallocate+0x1b4>  // b.none
    2004:	ldr	x0, [sp, #208]
    2008:	b	205c <ext2fs_fallocate+0x200>
    200c:	nop
    2010:	ldr	x0, [sp, #216]
    2014:	add	x0, x0, #0x1
    2018:	str	x0, [sp, #216]
    201c:	ldr	x1, [sp, #24]
    2020:	ldr	x0, [sp, #16]
    2024:	add	x0, x1, x0
    2028:	ldr	x1, [sp, #216]
    202c:	cmp	x1, x0
    2030:	b.cc	1f80 <ext2fs_fallocate+0x124>  // b.lo, b.ul, b.last
    2034:	nop
    2038:	add	x0, sp, #0x50
    203c:	ldr	x1, [sp, #40]
    2040:	cmp	x1, x0
    2044:	b.ne	2058 <ext2fs_fallocate+0x1fc>  // b.any
    2048:	ldr	x2, [sp, #40]
    204c:	ldr	w1, [sp, #48]
    2050:	ldr	x0, [sp, #56]
    2054:	bl	0 <ext2fs_write_inode>
    2058:	ldr	x0, [sp, #208]
    205c:	ldp	x29, x30, [sp], #224
    2060:	ret

fileio.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_file_open2>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	w1, [sp, #36]
      10:	str	x2, [sp, #24]
      14:	str	w3, [sp, #32]
      18:	str	x4, [sp, #16]
      1c:	ldr	w0, [sp, #32]
      20:	and	w0, w0, #0x3
      24:	cmp	w0, #0x0
      28:	b.eq	4c <ext2fs_file_open2+0x4c>  // b.none
      2c:	ldr	x0, [sp, #40]
      30:	ldr	w0, [x0, #16]
      34:	and	w0, w0, #0x1
      38:	cmp	w0, #0x0
      3c:	b.ne	4c <ext2fs_file_open2+0x4c>  // b.any
      40:	mov	x0, #0xb715                	// #46869
      44:	movk	x0, #0x7f2b, lsl #16
      48:	b	180 <ext2fs_file_open2+0x180>
      4c:	add	x0, sp, #0x30
      50:	mov	x1, x0
      54:	mov	x0, #0xb8                  	// #184
      58:	bl	0 <ext2fs_get_mem>
      5c:	str	x0, [sp, #56]
      60:	ldr	x0, [sp, #56]
      64:	cmp	x0, #0x0
      68:	b.eq	74 <ext2fs_file_open2+0x74>  // b.none
      6c:	ldr	x0, [sp, #56]
      70:	b	180 <ext2fs_file_open2+0x180>
      74:	ldr	x0, [sp, #48]
      78:	mov	x2, #0xb8                  	// #184
      7c:	mov	w1, #0x0                   	// #0
      80:	bl	0 <memset>
      84:	ldr	x0, [sp, #48]
      88:	mov	x1, #0xb70f                	// #46863
      8c:	movk	x1, #0x7f2b, lsl #16
      90:	str	x1, [x0]
      94:	ldr	x0, [sp, #48]
      98:	ldr	x1, [sp, #40]
      9c:	str	x1, [x0, #8]
      a0:	ldr	x0, [sp, #48]
      a4:	ldr	w1, [sp, #36]
      a8:	str	w1, [x0, #16]
      ac:	ldr	x0, [sp, #48]
      b0:	ldr	w1, [sp, #32]
      b4:	and	w1, w1, #0xff
      b8:	str	w1, [x0, #148]
      bc:	ldr	x0, [sp, #24]
      c0:	cmp	x0, #0x0
      c4:	b.eq	e0 <ext2fs_file_open2+0xe0>  // b.none
      c8:	ldr	x0, [sp, #48]
      cc:	add	x0, x0, #0x14
      d0:	mov	x2, #0x80                  	// #128
      d4:	ldr	x1, [sp, #24]
      d8:	bl	0 <memcpy>
      dc:	b	108 <ext2fs_file_open2+0x108>
      e0:	ldr	x0, [sp, #48]
      e4:	add	x0, x0, #0x14
      e8:	mov	x2, x0
      ec:	ldr	w1, [sp, #36]
      f0:	ldr	x0, [sp, #40]
      f4:	bl	0 <ext2fs_read_inode>
      f8:	str	x0, [sp, #56]
      fc:	ldr	x0, [sp, #56]
     100:	cmp	x0, #0x0
     104:	b.ne	14c <ext2fs_file_open2+0x14c>  // b.any
     108:	ldr	x0, [sp, #40]
     10c:	ldr	w0, [x0, #40]
     110:	mov	w1, w0
     114:	ldr	x0, [sp, #48]
     118:	add	x0, x0, #0xb0
     11c:	mov	x2, x0
     120:	mov	x0, #0x3                   	// #3
     124:	bl	0 <ext2fs_get_array>
     128:	str	x0, [sp, #56]
     12c:	ldr	x0, [sp, #56]
     130:	cmp	x0, #0x0
     134:	b.ne	154 <ext2fs_file_open2+0x154>  // b.any
     138:	ldr	x1, [sp, #48]
     13c:	ldr	x0, [sp, #16]
     140:	str	x1, [x0]
     144:	mov	x0, #0x0                   	// #0
     148:	b	180 <ext2fs_file_open2+0x180>
     14c:	nop
     150:	b	158 <ext2fs_file_open2+0x158>
     154:	nop
     158:	ldr	x0, [sp, #48]
     15c:	ldr	x0, [x0, #176]
     160:	cmp	x0, #0x0
     164:	b.eq	174 <ext2fs_file_open2+0x174>  // b.none
     168:	ldr	x0, [sp, #48]
     16c:	add	x0, x0, #0xb0
     170:	bl	0 <ext2fs_free_mem>
     174:	add	x0, sp, #0x30
     178:	bl	0 <ext2fs_free_mem>
     17c:	ldr	x0, [sp, #56]
     180:	ldp	x29, x30, [sp], #64
     184:	ret

0000000000000188 <ext2fs_file_open>:
     188:	stp	x29, x30, [sp, #-48]!
     18c:	mov	x29, sp
     190:	str	x0, [sp, #40]
     194:	str	w1, [sp, #36]
     198:	str	w2, [sp, #32]
     19c:	str	x3, [sp, #24]
     1a0:	ldr	x4, [sp, #24]
     1a4:	ldr	w3, [sp, #32]
     1a8:	mov	x2, #0x0                   	// #0
     1ac:	ldr	w1, [sp, #36]
     1b0:	ldr	x0, [sp, #40]
     1b4:	bl	0 <ext2fs_file_open2>
     1b8:	ldp	x29, x30, [sp], #48
     1bc:	ret

00000000000001c0 <ext2fs_file_get_fs>:
     1c0:	sub	sp, sp, #0x10
     1c4:	str	x0, [sp, #8]
     1c8:	ldr	x0, [sp, #8]
     1cc:	ldr	x1, [x0]
     1d0:	mov	x0, #0xb70f                	// #46863
     1d4:	movk	x0, #0x7f2b, lsl #16
     1d8:	cmp	x1, x0
     1dc:	b.eq	1e8 <ext2fs_file_get_fs+0x28>  // b.none
     1e0:	mov	x0, #0x0                   	// #0
     1e4:	b	1f0 <ext2fs_file_get_fs+0x30>
     1e8:	ldr	x0, [sp, #8]
     1ec:	ldr	x0, [x0, #8]
     1f0:	add	sp, sp, #0x10
     1f4:	ret

00000000000001f8 <ext2fs_file_get_inode>:
     1f8:	sub	sp, sp, #0x10
     1fc:	str	x0, [sp, #8]
     200:	ldr	x0, [sp, #8]
     204:	ldr	x1, [x0]
     208:	mov	x0, #0xb70f                	// #46863
     20c:	movk	x0, #0x7f2b, lsl #16
     210:	cmp	x1, x0
     214:	b.eq	220 <ext2fs_file_get_inode+0x28>  // b.none
     218:	mov	x0, #0x0                   	// #0
     21c:	b	228 <ext2fs_file_get_inode+0x30>
     220:	ldr	x0, [sp, #8]
     224:	add	x0, x0, #0x14
     228:	add	sp, sp, #0x10
     22c:	ret

0000000000000230 <ext2fs_file_get_inode_num>:
     230:	sub	sp, sp, #0x10
     234:	str	x0, [sp, #8]
     238:	ldr	x0, [sp, #8]
     23c:	ldr	x1, [x0]
     240:	mov	x0, #0xb70f                	// #46863
     244:	movk	x0, #0x7f2b, lsl #16
     248:	cmp	x1, x0
     24c:	b.eq	258 <ext2fs_file_get_inode_num+0x28>  // b.none
     250:	mov	w0, #0x0                   	// #0
     254:	b	260 <ext2fs_file_get_inode_num+0x30>
     258:	ldr	x0, [sp, #8]
     25c:	ldr	w0, [x0, #16]
     260:	add	sp, sp, #0x10
     264:	ret

0000000000000268 <ext2fs_file_flush>:
     268:	stp	x29, x30, [sp, #-64]!
     26c:	mov	x29, sp
     270:	str	x0, [sp, #24]
     274:	ldr	x0, [sp, #24]
     278:	ldr	x1, [x0]
     27c:	mov	x0, #0xb70f                	// #46863
     280:	movk	x0, #0x7f2b, lsl #16
     284:	cmp	x1, x0
     288:	b.eq	298 <ext2fs_file_flush+0x30>  // b.none
     28c:	mov	x0, #0xb70f                	// #46863
     290:	movk	x0, #0x7f2b, lsl #16
     294:	b	4d4 <ext2fs_file_flush+0x26c>
     298:	ldr	x0, [sp, #24]
     29c:	ldr	x0, [x0, #8]
     2a0:	str	x0, [sp, #56]
     2a4:	ldr	x0, [sp, #24]
     2a8:	ldr	w0, [x0, #148]
     2ac:	and	w0, w0, #0x2000
     2b0:	cmp	w0, #0x0
     2b4:	b.eq	2cc <ext2fs_file_flush+0x64>  // b.none
     2b8:	ldr	x0, [sp, #24]
     2bc:	ldr	w0, [x0, #148]
     2c0:	and	w0, w0, #0x4000
     2c4:	cmp	w0, #0x0
     2c8:	b.ne	2d4 <ext2fs_file_flush+0x6c>  // b.any
     2cc:	mov	x0, #0x0                   	// #0
     2d0:	b	4d4 <ext2fs_file_flush+0x26c>
     2d4:	ldr	x0, [sp, #24]
     2d8:	ldr	x0, [x0, #168]
     2dc:	cmp	x0, #0x0
     2e0:	b.eq	3e8 <ext2fs_file_flush+0x180>  // b.none
     2e4:	ldr	x0, [sp, #24]
     2e8:	ldr	w0, [x0, #52]
     2ec:	and	w0, w0, #0x80000
     2f0:	cmp	w0, #0x0
     2f4:	b.eq	3e8 <ext2fs_file_flush+0x180>  // b.none
     2f8:	ldr	x0, [sp, #24]
     2fc:	ldr	w8, [x0, #16]
     300:	ldr	x0, [sp, #24]
     304:	add	x2, x0, #0x14
     308:	ldr	x0, [sp, #24]
     30c:	ldr	x1, [x0, #176]
     310:	ldr	x0, [sp, #56]
     314:	ldr	w0, [x0, #40]
     318:	mov	w0, w0
     31c:	add	x1, x1, x0
     320:	ldr	x0, [sp, #24]
     324:	ldr	x0, [x0, #160]
     328:	add	x4, sp, #0x20
     32c:	add	x3, sp, #0x2c
     330:	mov	x7, x4
     334:	mov	x6, x3
     338:	mov	x5, x0
     33c:	mov	w4, #0x0                   	// #0
     340:	mov	x3, x1
     344:	mov	w1, w8
     348:	ldr	x0, [sp, #56]
     34c:	bl	0 <ext2fs_bmap2>
     350:	str	x0, [sp, #48]
     354:	ldr	x0, [sp, #48]
     358:	cmp	x0, #0x0
     35c:	b.eq	368 <ext2fs_file_flush+0x100>  // b.none
     360:	ldr	x0, [sp, #48]
     364:	b	4d4 <ext2fs_file_flush+0x26c>
     368:	ldr	w0, [sp, #44]
     36c:	and	w0, w0, #0x1
     370:	cmp	w0, #0x0
     374:	b.eq	3e8 <ext2fs_file_flush+0x180>  // b.none
     378:	ldr	x0, [sp, #24]
     37c:	ldr	w8, [x0, #16]
     380:	ldr	x0, [sp, #24]
     384:	add	x2, x0, #0x14
     388:	ldr	x0, [sp, #24]
     38c:	ldr	x1, [x0, #176]
     390:	ldr	x0, [sp, #56]
     394:	ldr	w0, [x0, #40]
     398:	mov	w0, w0
     39c:	add	x1, x1, x0
     3a0:	ldr	x0, [sp, #24]
     3a4:	ldr	x3, [x0, #160]
     3a8:	ldr	x0, [sp, #24]
     3ac:	add	x0, x0, #0xa8
     3b0:	mov	x7, x0
     3b4:	mov	x6, #0x0                   	// #0
     3b8:	mov	x5, x3
     3bc:	mov	w4, #0x2                   	// #2
     3c0:	mov	x3, x1
     3c4:	mov	w1, w8
     3c8:	ldr	x0, [sp, #56]
     3cc:	bl	0 <ext2fs_bmap2>
     3d0:	str	x0, [sp, #48]
     3d4:	ldr	x0, [sp, #48]
     3d8:	cmp	x0, #0x0
     3dc:	b.eq	3e8 <ext2fs_file_flush+0x180>  // b.none
     3e0:	ldr	x0, [sp, #48]
     3e4:	b	4d4 <ext2fs_file_flush+0x26c>
     3e8:	ldr	x0, [sp, #24]
     3ec:	ldr	x0, [x0, #168]
     3f0:	cmp	x0, #0x0
     3f4:	b.ne	47c <ext2fs_file_flush+0x214>  // b.any
     3f8:	ldr	x0, [sp, #24]
     3fc:	ldr	w8, [x0, #16]
     400:	ldr	x0, [sp, #24]
     404:	add	x2, x0, #0x14
     408:	ldr	x0, [sp, #24]
     40c:	ldr	x1, [x0, #176]
     410:	ldr	x0, [sp, #56]
     414:	ldr	w0, [x0, #40]
     418:	mov	w0, w0
     41c:	add	x1, x1, x0
     420:	ldr	x0, [sp, #24]
     424:	ldr	w0, [x0, #16]
     428:	cmp	w0, #0x0
     42c:	cset	w0, ne  // ne = any
     430:	and	w0, w0, #0xff
     434:	mov	w4, w0
     438:	ldr	x0, [sp, #24]
     43c:	ldr	x3, [x0, #160]
     440:	ldr	x0, [sp, #24]
     444:	add	x0, x0, #0xa8
     448:	mov	x7, x0
     44c:	mov	x6, #0x0                   	// #0
     450:	mov	x5, x3
     454:	mov	x3, x1
     458:	mov	w1, w8
     45c:	ldr	x0, [sp, #56]
     460:	bl	0 <ext2fs_bmap2>
     464:	str	x0, [sp, #48]
     468:	ldr	x0, [sp, #48]
     46c:	cmp	x0, #0x0
     470:	b.eq	47c <ext2fs_file_flush+0x214>  // b.none
     474:	ldr	x0, [sp, #48]
     478:	b	4d4 <ext2fs_file_flush+0x26c>
     47c:	ldr	x0, [sp, #56]
     480:	ldr	x4, [x0, #8]
     484:	ldr	x0, [sp, #24]
     488:	ldr	x1, [x0, #168]
     48c:	ldr	x0, [sp, #24]
     490:	ldr	x0, [x0, #176]
     494:	mov	x3, x0
     498:	mov	w2, #0x1                   	// #1
     49c:	mov	x0, x4
     4a0:	bl	0 <io_channel_write_blk64>
     4a4:	str	x0, [sp, #48]
     4a8:	ldr	x0, [sp, #48]
     4ac:	cmp	x0, #0x0
     4b0:	b.eq	4bc <ext2fs_file_flush+0x254>  // b.none
     4b4:	ldr	x0, [sp, #48]
     4b8:	b	4d4 <ext2fs_file_flush+0x26c>
     4bc:	ldr	x0, [sp, #24]
     4c0:	ldr	w0, [x0, #148]
     4c4:	and	w1, w0, #0xffffbfff
     4c8:	ldr	x0, [sp, #24]
     4cc:	str	w1, [x0, #148]
     4d0:	ldr	x0, [sp, #48]
     4d4:	ldp	x29, x30, [sp], #64
     4d8:	ret

00000000000004dc <sync_buffer_position>:
     4dc:	stp	x29, x30, [sp, #-48]!
     4e0:	mov	x29, sp
     4e4:	str	x0, [sp, #24]
     4e8:	ldr	x0, [sp, #24]
     4ec:	ldr	x1, [x0, #152]
     4f0:	ldr	x0, [sp, #24]
     4f4:	ldr	x0, [x0, #8]
     4f8:	ldr	w0, [x0, #40]
     4fc:	mov	w0, w0
     500:	udiv	x0, x1, x0
     504:	str	x0, [sp, #40]
     508:	ldr	x0, [sp, #24]
     50c:	ldr	x0, [x0, #160]
     510:	ldr	x1, [sp, #40]
     514:	cmp	x1, x0
     518:	b.eq	550 <sync_buffer_position+0x74>  // b.none
     51c:	ldr	x0, [sp, #24]
     520:	bl	268 <ext2fs_file_flush>
     524:	str	x0, [sp, #32]
     528:	ldr	x0, [sp, #32]
     52c:	cmp	x0, #0x0
     530:	b.eq	53c <sync_buffer_position+0x60>  // b.none
     534:	ldr	x0, [sp, #32]
     538:	b	560 <sync_buffer_position+0x84>
     53c:	ldr	x0, [sp, #24]
     540:	ldr	w0, [x0, #148]
     544:	and	w1, w0, #0xffffdfff
     548:	ldr	x0, [sp, #24]
     54c:	str	w1, [x0, #148]
     550:	ldr	x0, [sp, #24]
     554:	ldr	x1, [sp, #40]
     558:	str	x1, [x0, #160]
     55c:	mov	x0, #0x0                   	// #0
     560:	ldp	x29, x30, [sp], #48
     564:	ret

0000000000000568 <load_buffer>:
     568:	stp	x29, x30, [sp, #-64]!
     56c:	mov	x29, sp
     570:	str	x0, [sp, #24]
     574:	str	w1, [sp, #20]
     578:	ldr	x0, [sp, #24]
     57c:	ldr	x0, [x0, #8]
     580:	str	x0, [sp, #56]
     584:	ldr	x0, [sp, #24]
     588:	ldr	w0, [x0, #148]
     58c:	and	w0, w0, #0x2000
     590:	cmp	w0, #0x0
     594:	b.ne	6b0 <load_buffer+0x148>  // b.any
     598:	ldr	x0, [sp, #24]
     59c:	ldr	w8, [x0, #16]
     5a0:	ldr	x0, [sp, #24]
     5a4:	add	x2, x0, #0x14
     5a8:	ldr	x0, [sp, #24]
     5ac:	ldr	x1, [x0, #176]
     5b0:	ldr	x0, [sp, #56]
     5b4:	ldr	w0, [x0, #40]
     5b8:	mov	w0, w0
     5bc:	add	x1, x1, x0
     5c0:	ldr	x0, [sp, #24]
     5c4:	ldr	x3, [x0, #160]
     5c8:	ldr	x0, [sp, #24]
     5cc:	add	x4, x0, #0xa8
     5d0:	add	x0, sp, #0x2c
     5d4:	mov	x7, x4
     5d8:	mov	x6, x0
     5dc:	mov	x5, x3
     5e0:	mov	w4, #0x0                   	// #0
     5e4:	mov	x3, x1
     5e8:	mov	w1, w8
     5ec:	ldr	x0, [sp, #56]
     5f0:	bl	0 <ext2fs_bmap2>
     5f4:	str	x0, [sp, #48]
     5f8:	ldr	x0, [sp, #48]
     5fc:	cmp	x0, #0x0
     600:	b.eq	60c <load_buffer+0xa4>  // b.none
     604:	ldr	x0, [sp, #48]
     608:	b	6b4 <load_buffer+0x14c>
     60c:	ldr	w0, [sp, #20]
     610:	cmp	w0, #0x0
     614:	b.ne	69c <load_buffer+0x134>  // b.any
     618:	ldr	x0, [sp, #24]
     61c:	ldr	x0, [x0, #168]
     620:	cmp	x0, #0x0
     624:	b.eq	678 <load_buffer+0x110>  // b.none
     628:	ldr	w0, [sp, #44]
     62c:	and	w0, w0, #0x1
     630:	cmp	w0, #0x0
     634:	b.ne	678 <load_buffer+0x110>  // b.any
     638:	ldr	x0, [sp, #56]
     63c:	ldr	x4, [x0, #8]
     640:	ldr	x0, [sp, #24]
     644:	ldr	x1, [x0, #168]
     648:	ldr	x0, [sp, #24]
     64c:	ldr	x0, [x0, #176]
     650:	mov	x3, x0
     654:	mov	w2, #0x1                   	// #1
     658:	mov	x0, x4
     65c:	bl	0 <io_channel_read_blk64>
     660:	str	x0, [sp, #48]
     664:	ldr	x0, [sp, #48]
     668:	cmp	x0, #0x0
     66c:	b.eq	69c <load_buffer+0x134>  // b.none
     670:	ldr	x0, [sp, #48]
     674:	b	6b4 <load_buffer+0x14c>
     678:	ldr	x0, [sp, #24]
     67c:	ldr	x3, [x0, #176]
     680:	ldr	x0, [sp, #56]
     684:	ldr	w0, [x0, #40]
     688:	mov	w0, w0
     68c:	mov	x2, x0
     690:	mov	w1, #0x0                   	// #0
     694:	mov	x0, x3
     698:	bl	0 <memset>
     69c:	ldr	x0, [sp, #24]
     6a0:	ldr	w0, [x0, #148]
     6a4:	orr	w1, w0, #0x2000
     6a8:	ldr	x0, [sp, #24]
     6ac:	str	w1, [x0, #148]
     6b0:	mov	x0, #0x0                   	// #0
     6b4:	ldp	x29, x30, [sp], #64
     6b8:	ret

00000000000006bc <ext2fs_file_close>:
     6bc:	stp	x29, x30, [sp, #-48]!
     6c0:	mov	x29, sp
     6c4:	str	x0, [sp, #24]
     6c8:	ldr	x0, [sp, #24]
     6cc:	ldr	x1, [x0]
     6d0:	mov	x0, #0xb70f                	// #46863
     6d4:	movk	x0, #0x7f2b, lsl #16
     6d8:	cmp	x1, x0
     6dc:	b.eq	6ec <ext2fs_file_close+0x30>  // b.none
     6e0:	mov	x0, #0xb70f                	// #46863
     6e4:	movk	x0, #0x7f2b, lsl #16
     6e8:	b	720 <ext2fs_file_close+0x64>
     6ec:	ldr	x0, [sp, #24]
     6f0:	bl	268 <ext2fs_file_flush>
     6f4:	str	x0, [sp, #40]
     6f8:	ldr	x0, [sp, #24]
     6fc:	ldr	x0, [x0, #176]
     700:	cmp	x0, #0x0
     704:	b.eq	714 <ext2fs_file_close+0x58>  // b.none
     708:	ldr	x0, [sp, #24]
     70c:	add	x0, x0, #0xb0
     710:	bl	0 <ext2fs_free_mem>
     714:	add	x0, sp, #0x18
     718:	bl	0 <ext2fs_free_mem>
     71c:	ldr	x0, [sp, #40]
     720:	ldp	x29, x30, [sp], #48
     724:	ret

0000000000000728 <ext2fs_file_read_inline_data>:
     728:	stp	x29, x30, [sp, #-80]!
     72c:	mov	x29, sp
     730:	str	x0, [sp, #40]
     734:	str	x1, [sp, #32]
     738:	str	w2, [sp, #28]
     73c:	str	x3, [sp, #16]
     740:	str	wzr, [sp, #76]
     744:	ldr	x0, [sp, #40]
     748:	ldr	x0, [x0, #8]
     74c:	str	x0, [sp, #64]
     750:	ldr	x0, [sp, #40]
     754:	ldr	w1, [x0, #16]
     758:	ldr	x0, [sp, #40]
     75c:	add	x2, x0, #0x14
     760:	ldr	x0, [sp, #40]
     764:	ldr	x0, [x0, #176]
     768:	add	x3, sp, #0x30
     76c:	mov	x4, x3
     770:	mov	x3, x0
     774:	ldr	x0, [sp, #64]
     778:	bl	0 <ext2fs_inline_data_get>
     77c:	str	x0, [sp, #56]
     780:	ldr	x0, [sp, #56]
     784:	cmp	x0, #0x0
     788:	b.eq	794 <ext2fs_file_read_inline_data+0x6c>  // b.none
     78c:	ldr	x0, [sp, #56]
     790:	b	84c <ext2fs_file_read_inline_data+0x124>
     794:	ldr	x0, [sp, #40]
     798:	ldr	x1, [x0, #152]
     79c:	ldr	x0, [sp, #48]
     7a0:	cmp	x1, x0
     7a4:	b.cs	82c <ext2fs_file_read_inline_data+0x104>  // b.hs, b.nlast
     7a8:	ldr	x0, [sp, #48]
     7ac:	mov	w1, w0
     7b0:	ldr	x0, [sp, #40]
     7b4:	ldr	x0, [x0, #152]
     7b8:	sub	w0, w1, w0
     7bc:	str	w0, [sp, #76]
     7c0:	ldr	w1, [sp, #76]
     7c4:	ldr	w0, [sp, #28]
     7c8:	cmp	w1, w0
     7cc:	b.ls	7d8 <ext2fs_file_read_inline_data+0xb0>  // b.plast
     7d0:	ldr	w0, [sp, #28]
     7d4:	str	w0, [sp, #76]
     7d8:	ldr	x0, [sp, #40]
     7dc:	ldr	x1, [x0, #176]
     7e0:	ldr	x0, [sp, #40]
     7e4:	ldr	x0, [x0, #152]
     7e8:	add	x0, x1, x0
     7ec:	ldr	w1, [sp, #76]
     7f0:	mov	x2, x1
     7f4:	mov	x1, x0
     7f8:	ldr	x0, [sp, #32]
     7fc:	bl	0 <memcpy>
     800:	ldr	x0, [sp, #40]
     804:	ldr	x1, [x0, #152]
     808:	ldr	w0, [sp, #76]
     80c:	add	x1, x1, x0
     810:	ldr	x0, [sp, #40]
     814:	str	x1, [x0, #152]
     818:	ldr	w0, [sp, #76]
     81c:	ldr	x1, [sp, #32]
     820:	add	x0, x1, x0
     824:	str	x0, [sp, #32]
     828:	b	830 <ext2fs_file_read_inline_data+0x108>
     82c:	nop
     830:	ldr	x0, [sp, #16]
     834:	cmp	x0, #0x0
     838:	b.eq	848 <ext2fs_file_read_inline_data+0x120>  // b.none
     83c:	ldr	x0, [sp, #16]
     840:	ldr	w1, [sp, #76]
     844:	str	w1, [x0]
     848:	ldr	x0, [sp, #56]
     84c:	ldp	x29, x30, [sp], #80
     850:	ret

0000000000000854 <ext2fs_file_read>:
     854:	stp	x29, x30, [sp, #-96]!
     858:	mov	x29, sp
     85c:	str	x0, [sp, #40]
     860:	str	x1, [sp, #32]
     864:	str	w2, [sp, #28]
     868:	str	x3, [sp, #16]
     86c:	str	xzr, [sp, #88]
     870:	str	wzr, [sp, #80]
     874:	ldr	x0, [sp, #32]
     878:	str	x0, [sp, #72]
     87c:	ldr	x0, [sp, #40]
     880:	ldr	x1, [x0]
     884:	mov	x0, #0xb70f                	// #46863
     888:	movk	x0, #0x7f2b, lsl #16
     88c:	cmp	x1, x0
     890:	b.eq	8a0 <ext2fs_file_read+0x4c>  // b.none
     894:	mov	x0, #0xb70f                	// #46863
     898:	movk	x0, #0x7f2b, lsl #16
     89c:	b	a80 <ext2fs_file_read+0x22c>
     8a0:	ldr	x0, [sp, #40]
     8a4:	ldr	x0, [x0, #8]
     8a8:	str	x0, [sp, #64]
     8ac:	ldr	x0, [sp, #40]
     8b0:	ldr	w0, [x0, #52]
     8b4:	and	w0, w0, #0x10000000
     8b8:	cmp	w0, #0x0
     8bc:	b.eq	a10 <ext2fs_file_read+0x1bc>  // b.none
     8c0:	ldr	x3, [sp, #16]
     8c4:	ldr	w2, [sp, #28]
     8c8:	ldr	x1, [sp, #32]
     8cc:	ldr	x0, [sp, #40]
     8d0:	bl	728 <ext2fs_file_read_inline_data>
     8d4:	b	a80 <ext2fs_file_read+0x22c>
     8d8:	ldr	x0, [sp, #40]
     8dc:	bl	4dc <sync_buffer_position>
     8e0:	str	x0, [sp, #88]
     8e4:	ldr	x0, [sp, #88]
     8e8:	cmp	x0, #0x0
     8ec:	b.ne	a50 <ext2fs_file_read+0x1fc>  // b.any
     8f0:	mov	w1, #0x0                   	// #0
     8f4:	ldr	x0, [sp, #40]
     8f8:	bl	568 <load_buffer>
     8fc:	str	x0, [sp, #88]
     900:	ldr	x0, [sp, #88]
     904:	cmp	x0, #0x0
     908:	b.ne	a58 <ext2fs_file_read+0x204>  // b.any
     90c:	ldr	x0, [sp, #40]
     910:	ldr	x0, [x0, #152]
     914:	ldr	x1, [sp, #64]
     918:	ldr	w1, [x1, #40]
     91c:	mov	w1, w1
     920:	udiv	x2, x0, x1
     924:	mul	x1, x2, x1
     928:	sub	x0, x0, x1
     92c:	str	w0, [sp, #60]
     930:	ldr	x0, [sp, #64]
     934:	ldr	w1, [x0, #40]
     938:	ldr	w0, [sp, #60]
     93c:	sub	w0, w1, w0
     940:	str	w0, [sp, #84]
     944:	ldr	w1, [sp, #84]
     948:	ldr	w0, [sp, #28]
     94c:	cmp	w1, w0
     950:	b.ls	95c <ext2fs_file_read+0x108>  // b.plast
     954:	ldr	w0, [sp, #28]
     958:	str	w0, [sp, #84]
     95c:	ldr	x0, [sp, #40]
     960:	ldr	w0, [x0, #24]
     964:	mov	w1, w0
     968:	ldr	x0, [sp, #40]
     96c:	ldr	w0, [x0, #128]
     970:	mov	w0, w0
     974:	lsl	x0, x0, #32
     978:	orr	x1, x1, x0
     97c:	ldr	x0, [sp, #40]
     980:	ldr	x0, [x0, #152]
     984:	sub	x0, x1, x0
     988:	str	x0, [sp, #48]
     98c:	ldr	w0, [sp, #84]
     990:	ldr	x1, [sp, #48]
     994:	cmp	x1, x0
     998:	b.cs	9a4 <ext2fs_file_read+0x150>  // b.hs, b.nlast
     99c:	ldr	x0, [sp, #48]
     9a0:	str	w0, [sp, #84]
     9a4:	ldr	x0, [sp, #40]
     9a8:	ldr	x1, [x0, #176]
     9ac:	ldr	w0, [sp, #60]
     9b0:	add	x0, x1, x0
     9b4:	ldr	w1, [sp, #84]
     9b8:	mov	x2, x1
     9bc:	mov	x1, x0
     9c0:	ldr	x0, [sp, #72]
     9c4:	bl	0 <memcpy>
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldr	x1, [x0, #152]
     9d0:	ldr	w0, [sp, #84]
     9d4:	add	x1, x1, x0
     9d8:	ldr	x0, [sp, #40]
     9dc:	str	x1, [x0, #152]
     9e0:	ldr	w0, [sp, #84]
     9e4:	ldr	x1, [sp, #72]
     9e8:	add	x0, x1, x0
     9ec:	str	x0, [sp, #72]
     9f0:	ldr	w1, [sp, #80]
     9f4:	ldr	w0, [sp, #84]
     9f8:	add	w0, w1, w0
     9fc:	str	w0, [sp, #80]
     a00:	ldr	w1, [sp, #28]
     a04:	ldr	w0, [sp, #84]
     a08:	sub	w0, w1, w0
     a0c:	str	w0, [sp, #28]
     a10:	ldr	x0, [sp, #40]
     a14:	ldr	x1, [x0, #152]
     a18:	ldr	x0, [sp, #40]
     a1c:	ldr	w0, [x0, #24]
     a20:	mov	w2, w0
     a24:	ldr	x0, [sp, #40]
     a28:	ldr	w0, [x0, #128]
     a2c:	mov	w0, w0
     a30:	lsl	x0, x0, #32
     a34:	orr	x0, x2, x0
     a38:	cmp	x1, x0
     a3c:	b.cs	a60 <ext2fs_file_read+0x20c>  // b.hs, b.nlast
     a40:	ldr	w0, [sp, #28]
     a44:	cmp	w0, #0x0
     a48:	b.ne	8d8 <ext2fs_file_read+0x84>  // b.any
     a4c:	b	a60 <ext2fs_file_read+0x20c>
     a50:	nop
     a54:	b	a64 <ext2fs_file_read+0x210>
     a58:	nop
     a5c:	b	a64 <ext2fs_file_read+0x210>
     a60:	nop
     a64:	ldr	x0, [sp, #16]
     a68:	cmp	x0, #0x0
     a6c:	b.eq	a7c <ext2fs_file_read+0x228>  // b.none
     a70:	ldr	x0, [sp, #16]
     a74:	ldr	w1, [sp, #80]
     a78:	str	w1, [x0]
     a7c:	ldr	x0, [sp, #88]
     a80:	ldp	x29, x30, [sp], #96
     a84:	ret

0000000000000a88 <ext2fs_file_write_inline_data>:
     a88:	stp	x29, x30, [sp, #-96]!
     a8c:	mov	x29, sp
     a90:	str	x0, [sp, #40]
     a94:	str	x1, [sp, #32]
     a98:	str	w2, [sp, #28]
     a9c:	str	x3, [sp, #16]
     aa0:	str	wzr, [sp, #92]
     aa4:	ldr	x0, [sp, #40]
     aa8:	ldr	x0, [x0, #8]
     aac:	str	x0, [sp, #80]
     ab0:	ldr	x0, [sp, #40]
     ab4:	ldr	w1, [x0, #16]
     ab8:	ldr	x0, [sp, #40]
     abc:	add	x2, x0, #0x14
     ac0:	ldr	x0, [sp, #40]
     ac4:	ldr	x0, [x0, #176]
     ac8:	add	x3, sp, #0x38
     acc:	mov	x4, x3
     ad0:	mov	x3, x0
     ad4:	ldr	x0, [sp, #80]
     ad8:	bl	0 <ext2fs_inline_data_get>
     adc:	str	x0, [sp, #72]
     ae0:	ldr	x0, [sp, #72]
     ae4:	cmp	x0, #0x0
     ae8:	b.eq	af4 <ext2fs_file_write_inline_data+0x6c>  // b.none
     aec:	ldr	x0, [sp, #72]
     af0:	b	cb0 <ext2fs_file_write_inline_data+0x228>
     af4:	ldr	x0, [sp, #40]
     af8:	ldr	x1, [x0, #152]
     afc:	ldr	x0, [sp, #56]
     b00:	cmp	x1, x0
     b04:	b.cs	c3c <ext2fs_file_write_inline_data+0x1b4>  // b.hs, b.nlast
     b08:	ldr	x0, [sp, #40]
     b0c:	ldr	x0, [x0, #152]
     b10:	mov	w1, w0
     b14:	ldr	w0, [sp, #28]
     b18:	sub	w0, w0, w1
     b1c:	str	w0, [sp, #92]
     b20:	ldr	x0, [sp, #40]
     b24:	ldr	x1, [x0, #176]
     b28:	ldr	x0, [sp, #40]
     b2c:	ldr	x0, [x0, #152]
     b30:	add	x0, x1, x0
     b34:	ldr	w1, [sp, #92]
     b38:	mov	x2, x1
     b3c:	ldr	x1, [sp, #32]
     b40:	bl	0 <memcpy>
     b44:	ldr	x0, [sp, #40]
     b48:	ldr	w1, [x0, #16]
     b4c:	ldr	x0, [sp, #40]
     b50:	add	x2, x0, #0x14
     b54:	ldr	x0, [sp, #40]
     b58:	ldr	x0, [x0, #176]
     b5c:	ldr	w3, [sp, #92]
     b60:	mov	x4, x3
     b64:	mov	x3, x0
     b68:	ldr	x0, [sp, #80]
     b6c:	bl	0 <ext2fs_inline_data_set>
     b70:	str	x0, [sp, #72]
     b74:	ldr	x1, [sp, #72]
     b78:	mov	x0, #0xb7a7                	// #47015
     b7c:	movk	x0, #0x7f2b, lsl #16
     b80:	cmp	x1, x0
     b84:	b.eq	c44 <ext2fs_file_write_inline_data+0x1bc>  // b.none
     b88:	ldr	x0, [sp, #72]
     b8c:	cmp	x0, #0x0
     b90:	b.eq	b9c <ext2fs_file_write_inline_data+0x114>  // b.none
     b94:	ldr	x0, [sp, #72]
     b98:	b	cb0 <ext2fs_file_write_inline_data+0x228>
     b9c:	ldr	x0, [sp, #40]
     ba0:	ldr	x1, [x0, #152]
     ba4:	ldr	w0, [sp, #92]
     ba8:	add	x1, x1, x0
     bac:	ldr	x0, [sp, #40]
     bb0:	str	x1, [x0, #152]
     bb4:	ldr	w0, [sp, #92]
     bb8:	cmp	w0, #0x0
     bbc:	b.eq	c1c <ext2fs_file_write_inline_data+0x194>  // b.none
     bc0:	ldr	x0, [sp, #40]
     bc4:	ldr	w0, [x0, #24]
     bc8:	mov	w1, w0
     bcc:	ldr	x0, [sp, #40]
     bd0:	ldr	w0, [x0, #128]
     bd4:	mov	w0, w0
     bd8:	lsl	x0, x0, #32
     bdc:	orr	x1, x1, x0
     be0:	ldr	x0, [sp, #40]
     be4:	ldr	x0, [x0, #152]
     be8:	cmp	x1, x0
     bec:	b.cs	c1c <ext2fs_file_write_inline_data+0x194>  // b.hs, b.nlast
     bf0:	ldr	x0, [sp, #40]
     bf4:	ldr	x0, [x0, #152]
     bf8:	mov	x1, x0
     bfc:	ldr	x0, [sp, #40]
     c00:	bl	1504 <ext2fs_file_set_size2>
     c04:	str	x0, [sp, #64]
     c08:	ldr	x0, [sp, #72]
     c0c:	cmp	x0, #0x0
     c10:	b.ne	c1c <ext2fs_file_write_inline_data+0x194>  // b.any
     c14:	ldr	x0, [sp, #64]
     c18:	str	x0, [sp, #72]
     c1c:	ldr	x0, [sp, #16]
     c20:	cmp	x0, #0x0
     c24:	b.eq	c34 <ext2fs_file_write_inline_data+0x1ac>  // b.none
     c28:	ldr	x0, [sp, #16]
     c2c:	ldr	w1, [sp, #92]
     c30:	str	w1, [x0]
     c34:	mov	x0, #0x0                   	// #0
     c38:	b	cb0 <ext2fs_file_write_inline_data+0x228>
     c3c:	nop
     c40:	b	c48 <ext2fs_file_write_inline_data+0x1c0>
     c44:	nop
     c48:	ldr	x0, [sp, #40]
     c4c:	ldr	w0, [x0, #16]
     c50:	mov	w1, w0
     c54:	ldr	x0, [sp, #80]
     c58:	bl	0 <ext2fs_inline_data_expand>
     c5c:	str	x0, [sp, #72]
     c60:	ldr	x0, [sp, #72]
     c64:	cmp	x0, #0x0
     c68:	b.eq	c74 <ext2fs_file_write_inline_data+0x1ec>  // b.none
     c6c:	ldr	x0, [sp, #72]
     c70:	b	cb0 <ext2fs_file_write_inline_data+0x228>
     c74:	ldr	x0, [sp, #40]
     c78:	ldr	w1, [x0, #16]
     c7c:	ldr	x0, [sp, #40]
     c80:	add	x0, x0, #0x14
     c84:	mov	x2, x0
     c88:	ldr	x0, [sp, #80]
     c8c:	bl	0 <ext2fs_read_inode>
     c90:	str	x0, [sp, #72]
     c94:	ldr	x0, [sp, #72]
     c98:	cmp	x0, #0x0
     c9c:	b.eq	ca8 <ext2fs_file_write_inline_data+0x220>  // b.none
     ca0:	ldr	x0, [sp, #72]
     ca4:	b	cb0 <ext2fs_file_write_inline_data+0x228>
     ca8:	mov	x0, #0xb7a7                	// #47015
     cac:	movk	x0, #0x7f2b, lsl #16
     cb0:	ldp	x29, x30, [sp], #96
     cb4:	ret

0000000000000cb8 <ext2fs_file_write>:
     cb8:	stp	x29, x30, [sp, #-128]!
     cbc:	mov	x29, sp
     cc0:	str	x0, [sp, #40]
     cc4:	str	x1, [sp, #32]
     cc8:	str	w2, [sp, #28]
     ccc:	str	x3, [sp, #16]
     cd0:	str	xzr, [sp, #120]
     cd4:	str	wzr, [sp, #112]
     cd8:	ldr	x0, [sp, #32]
     cdc:	str	x0, [sp, #104]
     ce0:	str	xzr, [sp, #96]
     ce4:	str	xzr, [sp, #88]
     ce8:	str	wzr, [sp, #84]
     cec:	ldr	x0, [sp, #40]
     cf0:	ldr	x1, [x0]
     cf4:	mov	x0, #0xb70f                	// #46863
     cf8:	movk	x0, #0x7f2b, lsl #16
     cfc:	cmp	x1, x0
     d00:	b.eq	d10 <ext2fs_file_write+0x58>  // b.none
     d04:	mov	x0, #0xb70f                	// #46863
     d08:	movk	x0, #0x7f2b, lsl #16
     d0c:	b	1128 <ext2fs_file_write+0x470>
     d10:	ldr	x0, [sp, #40]
     d14:	ldr	x0, [x0, #8]
     d18:	str	x0, [sp, #72]
     d1c:	ldr	x0, [sp, #40]
     d20:	ldr	w0, [x0, #148]
     d24:	and	w0, w0, #0x1
     d28:	cmp	w0, #0x0
     d2c:	b.ne	d3c <ext2fs_file_write+0x84>  // b.any
     d30:	mov	x0, #0xb74d                	// #46925
     d34:	movk	x0, #0x7f2b, lsl #16
     d38:	b	1128 <ext2fs_file_write+0x470>
     d3c:	ldr	x0, [sp, #40]
     d40:	ldr	w0, [x0, #52]
     d44:	and	w0, w0, #0x10000000
     d48:	cmp	w0, #0x0
     d4c:	b.eq	1088 <ext2fs_file_write+0x3d0>  // b.none
     d50:	ldr	x3, [sp, #16]
     d54:	ldr	w2, [sp, #28]
     d58:	ldr	x1, [sp, #32]
     d5c:	ldr	x0, [sp, #40]
     d60:	bl	a88 <ext2fs_file_write_inline_data>
     d64:	str	x0, [sp, #120]
     d68:	ldr	x1, [sp, #120]
     d6c:	mov	x0, #0xb7a7                	// #47015
     d70:	movk	x0, #0x7f2b, lsl #16
     d74:	cmp	x1, x0
     d78:	b.eq	d84 <ext2fs_file_write+0xcc>  // b.none
     d7c:	ldr	x0, [sp, #120]
     d80:	b	1128 <ext2fs_file_write+0x470>
     d84:	str	xzr, [sp, #120]
     d88:	b	1088 <ext2fs_file_write+0x3d0>
     d8c:	ldr	x0, [sp, #40]
     d90:	bl	4dc <sync_buffer_position>
     d94:	str	x0, [sp, #120]
     d98:	ldr	x0, [sp, #120]
     d9c:	cmp	x0, #0x0
     da0:	b.ne	1098 <ext2fs_file_write+0x3e0>  // b.any
     da4:	ldr	x0, [sp, #40]
     da8:	ldr	x0, [x0, #152]
     dac:	ldr	x1, [sp, #72]
     db0:	ldr	w1, [x1, #40]
     db4:	mov	w1, w1
     db8:	udiv	x2, x0, x1
     dbc:	mul	x1, x2, x1
     dc0:	sub	x0, x0, x1
     dc4:	str	w0, [sp, #68]
     dc8:	ldr	x0, [sp, #72]
     dcc:	ldr	w1, [x0, #40]
     dd0:	ldr	w0, [sp, #68]
     dd4:	sub	w0, w1, w0
     dd8:	str	w0, [sp, #116]
     ddc:	ldr	w1, [sp, #116]
     de0:	ldr	w0, [sp, #28]
     de4:	cmp	w1, w0
     de8:	b.ls	df4 <ext2fs_file_write+0x13c>  // b.plast
     dec:	ldr	w0, [sp, #28]
     df0:	str	w0, [sp, #116]
     df4:	ldr	x0, [sp, #72]
     df8:	ldr	w0, [x0, #40]
     dfc:	ldr	w1, [sp, #116]
     e00:	cmp	w1, w0
     e04:	cset	w0, eq  // eq = none
     e08:	and	w0, w0, #0xff
     e0c:	mov	w1, w0
     e10:	ldr	x0, [sp, #40]
     e14:	bl	568 <load_buffer>
     e18:	str	x0, [sp, #120]
     e1c:	ldr	x0, [sp, #120]
     e20:	cmp	x0, #0x0
     e24:	b.ne	10a0 <ext2fs_file_write+0x3e8>  // b.any
     e28:	ldr	x0, [sp, #40]
     e2c:	ldr	w0, [x0, #148]
     e30:	orr	w1, w0, #0x4000
     e34:	ldr	x0, [sp, #40]
     e38:	str	w1, [x0, #148]
     e3c:	ldr	x0, [sp, #40]
     e40:	ldr	x1, [x0, #176]
     e44:	ldr	w0, [sp, #68]
     e48:	add	x0, x1, x0
     e4c:	ldr	w1, [sp, #116]
     e50:	mov	x2, x1
     e54:	ldr	x1, [sp, #104]
     e58:	bl	0 <memcpy>
     e5c:	ldr	x0, [sp, #40]
     e60:	ldr	x0, [x0, #168]
     e64:	cmp	x0, #0x0
     e68:	b.ne	1040 <ext2fs_file_write+0x388>  // b.any
     e6c:	ldr	x0, [sp, #40]
     e70:	ldr	w0, [x0, #16]
     e74:	cmp	w0, #0x0
     e78:	cset	w0, ne  // ne = any
     e7c:	and	w0, w0, #0xff
     e80:	str	w0, [sp, #84]
     e84:	ldr	x0, [sp, #72]
     e88:	ldr	w0, [x0, #16]
     e8c:	and	w0, w0, #0x400000
     e90:	cmp	w0, #0x0
     e94:	b.eq	f10 <ext2fs_file_write+0x258>  // b.none
     e98:	mov	x1, #0x48                  	// #72
     e9c:	mov	x0, #0x1                   	// #1
     ea0:	bl	0 <calloc>
     ea4:	str	x0, [sp, #96]
     ea8:	ldr	x0, [sp, #96]
     eac:	cmp	x0, #0x0
     eb0:	b.ne	ec4 <ext2fs_file_write+0x20c>  // b.any
     eb4:	mov	x0, #0xb746                	// #46918
     eb8:	movk	x0, #0x7f2b, lsl #16
     ebc:	str	x0, [sp, #120]
     ec0:	b	10a4 <ext2fs_file_write+0x3ec>
     ec4:	ldr	x0, [sp, #40]
     ec8:	ldr	x3, [x0, #176]
     ecc:	ldr	x0, [sp, #72]
     ed0:	ldr	w0, [x0, #40]
     ed4:	mov	w1, w0
     ed8:	ldr	x0, [sp, #96]
     edc:	add	x0, x0, #0x8
     ee0:	mov	x2, x0
     ee4:	mov	x0, x3
     ee8:	bl	0 <ext2fs_sha512>
     eec:	ldr	x0, [sp, #72]
     ef0:	ldr	x3, [x0, #352]
     ef4:	ldr	x0, [sp, #96]
     ef8:	add	x0, x0, #0x8
     efc:	mov	x2, #0x40                  	// #64
     f00:	mov	x1, x0
     f04:	mov	x0, x3
     f08:	bl	0 <ext2fs_hashmap_lookup>
     f0c:	str	x0, [sp, #88]
     f10:	ldr	x0, [sp, #88]
     f14:	cmp	x0, #0x0
     f18:	b.eq	f44 <ext2fs_file_write+0x28c>  // b.none
     f1c:	ldr	x0, [sp, #88]
     f20:	ldr	x1, [x0]
     f24:	ldr	x0, [sp, #40]
     f28:	str	x1, [x0, #168]
     f2c:	ldr	w0, [sp, #84]
     f30:	orr	w0, w0, #0x2
     f34:	str	w0, [sp, #84]
     f38:	ldr	x0, [sp, #96]
     f3c:	bl	0 <free>
     f40:	str	xzr, [sp, #96]
     f44:	ldr	x0, [sp, #40]
     f48:	ldr	w8, [x0, #16]
     f4c:	ldr	x0, [sp, #40]
     f50:	add	x2, x0, #0x14
     f54:	ldr	x0, [sp, #40]
     f58:	ldr	x1, [x0, #176]
     f5c:	ldr	x0, [sp, #72]
     f60:	ldr	w0, [x0, #40]
     f64:	mov	w0, w0
     f68:	add	x1, x1, x0
     f6c:	ldr	x0, [sp, #40]
     f70:	ldr	x3, [x0, #160]
     f74:	ldr	x0, [sp, #40]
     f78:	add	x0, x0, #0xa8
     f7c:	mov	x7, x0
     f80:	mov	x6, #0x0                   	// #0
     f84:	mov	x5, x3
     f88:	ldr	w4, [sp, #84]
     f8c:	mov	x3, x1
     f90:	mov	w1, w8
     f94:	ldr	x0, [sp, #72]
     f98:	bl	0 <ext2fs_bmap2>
     f9c:	str	x0, [sp, #120]
     fa0:	ldr	x0, [sp, #120]
     fa4:	cmp	x0, #0x0
     fa8:	b.eq	fbc <ext2fs_file_write+0x304>  // b.none
     fac:	ldr	x0, [sp, #96]
     fb0:	bl	0 <free>
     fb4:	str	xzr, [sp, #96]
     fb8:	b	10a4 <ext2fs_file_write+0x3ec>
     fbc:	ldr	x0, [sp, #96]
     fc0:	cmp	x0, #0x0
     fc4:	b.eq	ffc <ext2fs_file_write+0x344>  // b.none
     fc8:	ldr	x0, [sp, #40]
     fcc:	ldr	x1, [x0, #168]
     fd0:	ldr	x0, [sp, #96]
     fd4:	str	x1, [x0]
     fd8:	ldr	x0, [sp, #72]
     fdc:	ldr	x4, [x0, #352]
     fe0:	ldr	x0, [sp, #96]
     fe4:	add	x0, x0, #0x8
     fe8:	mov	x3, #0x40                  	// #64
     fec:	mov	x2, x0
     ff0:	ldr	x1, [sp, #96]
     ff4:	mov	x0, x4
     ff8:	bl	0 <ext2fs_hashmap_add>
     ffc:	ldr	w0, [sp, #84]
    1000:	and	w0, w0, #0x2
    1004:	cmp	w0, #0x0
    1008:	b.eq	1040 <ext2fs_file_write+0x388>  // b.none
    100c:	ldr	x0, [sp, #40]
    1010:	add	x0, x0, #0x14
    1014:	mov	x2, #0x1                   	// #1
    1018:	mov	x1, x0
    101c:	ldr	x0, [sp, #72]
    1020:	bl	0 <ext2fs_iblk_add_blocks>
    1024:	ldr	x0, [sp, #40]
    1028:	ldr	w1, [x0, #16]
    102c:	ldr	x0, [sp, #40]
    1030:	add	x0, x0, #0x14
    1034:	mov	x2, x0
    1038:	ldr	x0, [sp, #72]
    103c:	bl	0 <ext2fs_write_inode>
    1040:	ldr	x0, [sp, #40]
    1044:	ldr	x1, [x0, #152]
    1048:	ldr	w0, [sp, #116]
    104c:	add	x1, x1, x0
    1050:	ldr	x0, [sp, #40]
    1054:	str	x1, [x0, #152]
    1058:	ldr	w0, [sp, #116]
    105c:	ldr	x1, [sp, #104]
    1060:	add	x0, x1, x0
    1064:	str	x0, [sp, #104]
    1068:	ldr	w1, [sp, #112]
    106c:	ldr	w0, [sp, #116]
    1070:	add	w0, w1, w0
    1074:	str	w0, [sp, #112]
    1078:	ldr	w1, [sp, #28]
    107c:	ldr	w0, [sp, #116]
    1080:	sub	w0, w1, w0
    1084:	str	w0, [sp, #28]
    1088:	ldr	w0, [sp, #28]
    108c:	cmp	w0, #0x0
    1090:	b.ne	d8c <ext2fs_file_write+0xd4>  // b.any
    1094:	b	10a4 <ext2fs_file_write+0x3ec>
    1098:	nop
    109c:	b	10a4 <ext2fs_file_write+0x3ec>
    10a0:	nop
    10a4:	ldr	w0, [sp, #112]
    10a8:	cmp	w0, #0x0
    10ac:	b.eq	110c <ext2fs_file_write+0x454>  // b.none
    10b0:	ldr	x0, [sp, #40]
    10b4:	ldr	w0, [x0, #24]
    10b8:	mov	w1, w0
    10bc:	ldr	x0, [sp, #40]
    10c0:	ldr	w0, [x0, #128]
    10c4:	mov	w0, w0
    10c8:	lsl	x0, x0, #32
    10cc:	orr	x1, x1, x0
    10d0:	ldr	x0, [sp, #40]
    10d4:	ldr	x0, [x0, #152]
    10d8:	cmp	x1, x0
    10dc:	b.cs	110c <ext2fs_file_write+0x454>  // b.hs, b.nlast
    10e0:	ldr	x0, [sp, #40]
    10e4:	ldr	x0, [x0, #152]
    10e8:	mov	x1, x0
    10ec:	ldr	x0, [sp, #40]
    10f0:	bl	1504 <ext2fs_file_set_size2>
    10f4:	str	x0, [sp, #56]
    10f8:	ldr	x0, [sp, #120]
    10fc:	cmp	x0, #0x0
    1100:	b.ne	110c <ext2fs_file_write+0x454>  // b.any
    1104:	ldr	x0, [sp, #56]
    1108:	str	x0, [sp, #120]
    110c:	ldr	x0, [sp, #16]
    1110:	cmp	x0, #0x0
    1114:	b.eq	1124 <ext2fs_file_write+0x46c>  // b.none
    1118:	ldr	x0, [sp, #16]
    111c:	ldr	w1, [sp, #112]
    1120:	str	w1, [x0]
    1124:	ldr	x0, [sp, #120]
    1128:	ldp	x29, x30, [sp], #128
    112c:	ret

0000000000001130 <ext2fs_file_llseek>:
    1130:	sub	sp, sp, #0x20
    1134:	str	x0, [sp, #24]
    1138:	str	x1, [sp, #16]
    113c:	str	w2, [sp, #12]
    1140:	str	x3, [sp]
    1144:	ldr	x0, [sp, #24]
    1148:	ldr	x1, [x0]
    114c:	mov	x0, #0xb70f                	// #46863
    1150:	movk	x0, #0x7f2b, lsl #16
    1154:	cmp	x1, x0
    1158:	b.eq	1168 <ext2fs_file_llseek+0x38>  // b.none
    115c:	mov	x0, #0xb70f                	// #46863
    1160:	movk	x0, #0x7f2b, lsl #16
    1164:	b	1218 <ext2fs_file_llseek+0xe8>
    1168:	ldr	w0, [sp, #12]
    116c:	cmp	w0, #0x0
    1170:	b.ne	1184 <ext2fs_file_llseek+0x54>  // b.any
    1174:	ldr	x0, [sp, #24]
    1178:	ldr	x1, [sp, #16]
    117c:	str	x1, [x0, #152]
    1180:	b	11f8 <ext2fs_file_llseek+0xc8>
    1184:	ldr	w0, [sp, #12]
    1188:	cmp	w0, #0x1
    118c:	b.ne	11ac <ext2fs_file_llseek+0x7c>  // b.any
    1190:	ldr	x0, [sp, #24]
    1194:	ldr	x1, [x0, #152]
    1198:	ldr	x0, [sp, #16]
    119c:	add	x1, x1, x0
    11a0:	ldr	x0, [sp, #24]
    11a4:	str	x1, [x0, #152]
    11a8:	b	11f8 <ext2fs_file_llseek+0xc8>
    11ac:	ldr	w0, [sp, #12]
    11b0:	cmp	w0, #0x2
    11b4:	b.ne	11ec <ext2fs_file_llseek+0xbc>  // b.any
    11b8:	ldr	x0, [sp, #24]
    11bc:	ldr	w0, [x0, #24]
    11c0:	mov	w1, w0
    11c4:	ldr	x0, [sp, #24]
    11c8:	ldr	w0, [x0, #128]
    11cc:	mov	w0, w0
    11d0:	lsl	x0, x0, #32
    11d4:	orr	x1, x1, x0
    11d8:	ldr	x0, [sp, #16]
    11dc:	add	x1, x1, x0
    11e0:	ldr	x0, [sp, #24]
    11e4:	str	x1, [x0, #152]
    11e8:	b	11f8 <ext2fs_file_llseek+0xc8>
    11ec:	mov	x0, #0xb747                	// #46919
    11f0:	movk	x0, #0x7f2b, lsl #16
    11f4:	b	1218 <ext2fs_file_llseek+0xe8>
    11f8:	ldr	x0, [sp]
    11fc:	cmp	x0, #0x0
    1200:	b.eq	1214 <ext2fs_file_llseek+0xe4>  // b.none
    1204:	ldr	x0, [sp, #24]
    1208:	ldr	x1, [x0, #152]
    120c:	ldr	x0, [sp]
    1210:	str	x1, [x0]
    1214:	mov	x0, #0x0                   	// #0
    1218:	add	sp, sp, #0x20
    121c:	ret

0000000000001220 <ext2fs_file_lseek>:
    1220:	stp	x29, x30, [sp, #-80]!
    1224:	mov	x29, sp
    1228:	str	x0, [sp, #40]
    122c:	str	w1, [sp, #36]
    1230:	str	w2, [sp, #32]
    1234:	str	x3, [sp, #24]
    1238:	str	xzr, [sp, #56]
    123c:	ldrsw	x0, [sp, #36]
    1240:	str	x0, [sp, #72]
    1244:	add	x0, sp, #0x38
    1248:	mov	x3, x0
    124c:	ldr	w2, [sp, #32]
    1250:	ldr	x1, [sp, #72]
    1254:	ldr	x0, [sp, #40]
    1258:	bl	1130 <ext2fs_file_llseek>
    125c:	str	x0, [sp, #64]
    1260:	ldr	x0, [sp, #24]
    1264:	cmp	x0, #0x0
    1268:	b.eq	127c <ext2fs_file_lseek+0x5c>  // b.none
    126c:	ldr	x0, [sp, #56]
    1270:	mov	w1, w0
    1274:	ldr	x0, [sp, #24]
    1278:	str	w1, [x0]
    127c:	ldr	x0, [sp, #64]
    1280:	ldp	x29, x30, [sp], #80
    1284:	ret

0000000000001288 <ext2fs_file_get_lsize>:
    1288:	sub	sp, sp, #0x10
    128c:	str	x0, [sp, #8]
    1290:	str	x1, [sp]
    1294:	ldr	x0, [sp, #8]
    1298:	ldr	x1, [x0]
    129c:	mov	x0, #0xb70f                	// #46863
    12a0:	movk	x0, #0x7f2b, lsl #16
    12a4:	cmp	x1, x0
    12a8:	b.eq	12b8 <ext2fs_file_get_lsize+0x30>  // b.none
    12ac:	mov	x0, #0xb70f                	// #46863
    12b0:	movk	x0, #0x7f2b, lsl #16
    12b4:	b	12e4 <ext2fs_file_get_lsize+0x5c>
    12b8:	ldr	x0, [sp, #8]
    12bc:	ldr	w0, [x0, #24]
    12c0:	mov	w1, w0
    12c4:	ldr	x0, [sp, #8]
    12c8:	ldr	w0, [x0, #128]
    12cc:	mov	w0, w0
    12d0:	lsl	x0, x0, #32
    12d4:	orr	x1, x1, x0
    12d8:	ldr	x0, [sp]
    12dc:	str	x1, [x0]
    12e0:	mov	x0, #0x0                   	// #0
    12e4:	add	sp, sp, #0x10
    12e8:	ret

00000000000012ec <ext2fs_file_get_size>:
    12ec:	stp	x29, x30, [sp, #-48]!
    12f0:	mov	x29, sp
    12f4:	str	x0, [sp, #24]
    12f8:	add	x0, sp, #0x28
    12fc:	mov	x1, x0
    1300:	ldr	x0, [sp, #24]
    1304:	bl	1288 <ext2fs_file_get_lsize>
    1308:	cmp	x0, #0x0
    130c:	b.eq	1318 <ext2fs_file_get_size+0x2c>  // b.none
    1310:	mov	w0, #0x0                   	// #0
    1314:	b	1334 <ext2fs_file_get_size+0x48>
    1318:	ldr	x0, [sp, #40]
    131c:	lsr	x0, x0, #32
    1320:	cmp	x0, #0x0
    1324:	b.eq	1330 <ext2fs_file_get_size+0x44>  // b.none
    1328:	mov	w0, #0x0                   	// #0
    132c:	b	1334 <ext2fs_file_get_size+0x48>
    1330:	ldr	x0, [sp, #40]
    1334:	ldp	x29, x30, [sp], #48
    1338:	ret

000000000000133c <ext2fs_file_zero_past_offset>:
    133c:	stp	x29, x30, [sp, #-80]!
    1340:	mov	x29, sp
    1344:	str	x0, [sp, #24]
    1348:	str	x1, [sp, #16]
    134c:	ldr	x0, [sp, #24]
    1350:	ldr	x0, [x0, #8]
    1354:	str	x0, [sp, #64]
    1358:	str	xzr, [sp, #48]
    135c:	ldr	x0, [sp, #64]
    1360:	ldr	w0, [x0, #40]
    1364:	mov	w1, w0
    1368:	ldr	x0, [sp, #16]
    136c:	sdiv	x2, x0, x1
    1370:	mul	x1, x2, x1
    1374:	sub	x0, x0, x1
    1378:	str	x0, [sp, #56]
    137c:	ldr	x0, [sp, #56]
    1380:	cmp	x0, #0x0
    1384:	b.ne	1390 <ext2fs_file_zero_past_offset+0x54>  // b.any
    1388:	mov	x0, #0x0                   	// #0
    138c:	b	14fc <ext2fs_file_zero_past_offset+0x1c0>
    1390:	ldr	x0, [sp, #24]
    1394:	bl	4dc <sync_buffer_position>
    1398:	str	x0, [sp, #72]
    139c:	ldr	x0, [sp, #72]
    13a0:	cmp	x0, #0x0
    13a4:	b.eq	13b0 <ext2fs_file_zero_past_offset+0x74>  // b.none
    13a8:	ldr	x0, [sp, #72]
    13ac:	b	14fc <ext2fs_file_zero_past_offset+0x1c0>
    13b0:	ldr	x0, [sp, #24]
    13b4:	ldr	w8, [x0, #16]
    13b8:	ldr	x0, [sp, #64]
    13bc:	ldr	w0, [x0, #40]
    13c0:	mov	w0, w0
    13c4:	ldr	x1, [sp, #16]
    13c8:	sdiv	x0, x1, x0
    13cc:	mov	x2, x0
    13d0:	add	x1, sp, #0x28
    13d4:	add	x0, sp, #0x24
    13d8:	mov	x7, x1
    13dc:	mov	x6, x0
    13e0:	mov	x5, x2
    13e4:	mov	w4, #0x0                   	// #0
    13e8:	mov	x3, #0x0                   	// #0
    13ec:	mov	x2, #0x0                   	// #0
    13f0:	mov	w1, w8
    13f4:	ldr	x0, [sp, #64]
    13f8:	bl	0 <ext2fs_bmap2>
    13fc:	str	x0, [sp, #72]
    1400:	ldr	x0, [sp, #72]
    1404:	cmp	x0, #0x0
    1408:	b.eq	1414 <ext2fs_file_zero_past_offset+0xd8>  // b.none
    140c:	ldr	x0, [sp, #72]
    1410:	b	14fc <ext2fs_file_zero_past_offset+0x1c0>
    1414:	ldr	x0, [sp, #40]
    1418:	cmp	x0, #0x0
    141c:	b.eq	1430 <ext2fs_file_zero_past_offset+0xf4>  // b.none
    1420:	ldr	w0, [sp, #36]
    1424:	and	w0, w0, #0x1
    1428:	cmp	w0, #0x0
    142c:	b.eq	1438 <ext2fs_file_zero_past_offset+0xfc>  // b.none
    1430:	mov	x0, #0x0                   	// #0
    1434:	b	14fc <ext2fs_file_zero_past_offset+0x1c0>
    1438:	ldr	x0, [sp, #64]
    143c:	ldr	w0, [x0, #40]
    1440:	mov	w0, w0
    1444:	add	x1, sp, #0x30
    1448:	bl	0 <ext2fs_get_mem>
    144c:	str	x0, [sp, #72]
    1450:	ldr	x0, [sp, #72]
    1454:	cmp	x0, #0x0
    1458:	b.eq	1464 <ext2fs_file_zero_past_offset+0x128>  // b.none
    145c:	ldr	x0, [sp, #72]
    1460:	b	14fc <ext2fs_file_zero_past_offset+0x1c0>
    1464:	ldr	x0, [sp, #64]
    1468:	ldr	x0, [x0, #8]
    146c:	ldr	x1, [sp, #40]
    1470:	ldr	x2, [sp, #48]
    1474:	mov	x3, x2
    1478:	mov	w2, #0x1                   	// #1
    147c:	bl	0 <io_channel_read_blk64>
    1480:	str	x0, [sp, #72]
    1484:	ldr	x0, [sp, #72]
    1488:	cmp	x0, #0x0
    148c:	b.ne	14ec <ext2fs_file_zero_past_offset+0x1b0>  // b.any
    1490:	ldr	x1, [sp, #48]
    1494:	ldr	x0, [sp, #56]
    1498:	add	x3, x1, x0
    149c:	ldr	x0, [sp, #64]
    14a0:	ldr	w0, [x0, #40]
    14a4:	mov	w1, w0
    14a8:	ldr	x0, [sp, #56]
    14ac:	sub	x0, x1, x0
    14b0:	mov	x2, x0
    14b4:	mov	w1, #0x0                   	// #0
    14b8:	mov	x0, x3
    14bc:	bl	0 <memset>
    14c0:	ldr	x0, [sp, #64]
    14c4:	ldr	x0, [x0, #8]
    14c8:	ldr	x1, [sp, #40]
    14cc:	ldr	x2, [sp, #48]
    14d0:	mov	x3, x2
    14d4:	mov	w2, #0x1                   	// #1
    14d8:	bl	0 <io_channel_write_blk64>
    14dc:	str	x0, [sp, #72]
    14e0:	ldr	x0, [sp, #72]
    14e4:	cmp	x0, #0x0
    14e8:	b	14f0 <ext2fs_file_zero_past_offset+0x1b4>
    14ec:	nop
    14f0:	add	x0, sp, #0x30
    14f4:	bl	0 <ext2fs_free_mem>
    14f8:	ldr	x0, [sp, #72]
    14fc:	ldp	x29, x30, [sp], #80
    1500:	ret

0000000000001504 <ext2fs_file_set_size2>:
    1504:	stp	x29, x30, [sp, #-64]!
    1508:	mov	x29, sp
    150c:	str	x0, [sp, #24]
    1510:	str	x1, [sp, #16]
    1514:	ldr	x0, [sp, #24]
    1518:	ldr	x1, [x0]
    151c:	mov	x0, #0xb70f                	// #46863
    1520:	movk	x0, #0x7f2b, lsl #16
    1524:	cmp	x1, x0
    1528:	b.eq	1538 <ext2fs_file_set_size2+0x34>  // b.none
    152c:	mov	x0, #0xb70f                	// #46863
    1530:	movk	x0, #0x7f2b, lsl #16
    1534:	b	1718 <ext2fs_file_set_size2+0x214>
    1538:	ldr	x0, [sp, #16]
    153c:	cmp	x0, #0x0
    1540:	b.eq	1594 <ext2fs_file_set_size2+0x90>  // b.none
    1544:	ldr	x0, [sp, #24]
    1548:	ldr	x3, [x0, #8]
    154c:	ldr	x0, [sp, #24]
    1550:	add	x4, x0, #0x14
    1554:	ldr	x0, [sp, #16]
    1558:	sub	x1, x0, #0x1
    155c:	ldr	x0, [sp, #24]
    1560:	ldr	x0, [x0, #8]
    1564:	ldr	w0, [x0, #40]
    1568:	mov	w0, w0
    156c:	sdiv	x0, x1, x0
    1570:	mov	x2, x0
    1574:	mov	x1, x4
    1578:	mov	x0, x3
    157c:	bl	0 <ext2fs_file_block_offset_too_big>
    1580:	cmp	w0, #0x0
    1584:	b.eq	1594 <ext2fs_file_set_size2+0x90>  // b.none
    1588:	mov	x0, #0xb752                	// #46930
    158c:	movk	x0, #0x7f2b, lsl #16
    1590:	b	1718 <ext2fs_file_set_size2+0x214>
    1594:	ldr	x0, [sp, #24]
    1598:	ldr	x0, [x0, #8]
    159c:	ldr	w0, [x0, #40]
    15a0:	mov	w1, w0
    15a4:	ldr	x0, [sp, #16]
    15a8:	add	x0, x1, x0
    15ac:	sub	x1, x0, #0x1
    15b0:	ldr	x0, [sp, #24]
    15b4:	ldr	x0, [x0, #8]
    15b8:	ldr	x0, [x0, #32]
    15bc:	ldr	w0, [x0, #24]
    15c0:	add	w0, w0, #0xa
    15c4:	asr	x0, x1, x0
    15c8:	str	x0, [sp, #56]
    15cc:	ldr	x0, [sp, #24]
    15d0:	ldr	w0, [x0, #24]
    15d4:	mov	w1, w0
    15d8:	ldr	x0, [sp, #24]
    15dc:	ldr	w0, [x0, #128]
    15e0:	mov	w0, w0
    15e4:	lsl	x0, x0, #32
    15e8:	orr	x0, x1, x0
    15ec:	str	x0, [sp, #48]
    15f0:	ldr	x0, [sp, #24]
    15f4:	ldr	x0, [x0, #8]
    15f8:	ldr	w0, [x0, #40]
    15fc:	mov	w1, w0
    1600:	ldr	x0, [sp, #48]
    1604:	add	x0, x1, x0
    1608:	sub	x1, x0, #0x1
    160c:	ldr	x0, [sp, #24]
    1610:	ldr	x0, [x0, #8]
    1614:	ldr	x0, [x0, #32]
    1618:	ldr	w0, [x0, #24]
    161c:	add	w0, w0, #0xa
    1620:	asr	x0, x1, x0
    1624:	str	x0, [sp, #40]
    1628:	ldr	x0, [sp, #24]
    162c:	ldr	x3, [x0, #8]
    1630:	ldr	x0, [sp, #24]
    1634:	add	x0, x0, #0x14
    1638:	ldr	x2, [sp, #16]
    163c:	mov	x1, x0
    1640:	mov	x0, x3
    1644:	bl	0 <ext2fs_inode_size_set>
    1648:	str	x0, [sp, #32]
    164c:	ldr	x0, [sp, #32]
    1650:	cmp	x0, #0x0
    1654:	b.eq	1660 <ext2fs_file_set_size2+0x15c>  // b.none
    1658:	ldr	x0, [sp, #32]
    165c:	b	1718 <ext2fs_file_set_size2+0x214>
    1660:	ldr	x0, [sp, #24]
    1664:	ldr	w0, [x0, #16]
    1668:	cmp	w0, #0x0
    166c:	b.eq	16ac <ext2fs_file_set_size2+0x1a8>  // b.none
    1670:	ldr	x0, [sp, #24]
    1674:	ldr	x3, [x0, #8]
    1678:	ldr	x0, [sp, #24]
    167c:	ldr	w1, [x0, #16]
    1680:	ldr	x0, [sp, #24]
    1684:	add	x0, x0, #0x14
    1688:	mov	x2, x0
    168c:	mov	x0, x3
    1690:	bl	0 <ext2fs_write_inode>
    1694:	str	x0, [sp, #32]
    1698:	ldr	x0, [sp, #32]
    169c:	cmp	x0, #0x0
    16a0:	b.eq	16ac <ext2fs_file_set_size2+0x1a8>  // b.none
    16a4:	ldr	x0, [sp, #32]
    16a8:	b	1718 <ext2fs_file_set_size2+0x214>
    16ac:	ldr	x1, [sp, #16]
    16b0:	ldr	x0, [sp, #24]
    16b4:	bl	133c <ext2fs_file_zero_past_offset>
    16b8:	str	x0, [sp, #32]
    16bc:	ldr	x0, [sp, #32]
    16c0:	cmp	x0, #0x0
    16c4:	b.eq	16d0 <ext2fs_file_set_size2+0x1cc>  // b.none
    16c8:	ldr	x0, [sp, #32]
    16cc:	b	1718 <ext2fs_file_set_size2+0x214>
    16d0:	ldr	x1, [sp, #56]
    16d4:	ldr	x0, [sp, #40]
    16d8:	cmp	x1, x0
    16dc:	b.cc	16e8 <ext2fs_file_set_size2+0x1e4>  // b.lo, b.ul, b.last
    16e0:	mov	x0, #0x0                   	// #0
    16e4:	b	1718 <ext2fs_file_set_size2+0x214>
    16e8:	ldr	x0, [sp, #24]
    16ec:	ldr	x6, [x0, #8]
    16f0:	ldr	x0, [sp, #24]
    16f4:	ldr	w1, [x0, #16]
    16f8:	ldr	x0, [sp, #24]
    16fc:	add	x0, x0, #0x14
    1700:	mov	x5, #0xffffffffffffffff    	// #-1
    1704:	ldr	x4, [sp, #56]
    1708:	mov	x3, #0x0                   	// #0
    170c:	mov	x2, x0
    1710:	mov	x0, x6
    1714:	bl	0 <ext2fs_punch>
    1718:	ldp	x29, x30, [sp], #64
    171c:	ret

0000000000001720 <ext2fs_file_set_size>:
    1720:	stp	x29, x30, [sp, #-32]!
    1724:	mov	x29, sp
    1728:	str	x0, [sp, #24]
    172c:	str	w1, [sp, #20]
    1730:	ldrsw	x0, [sp, #20]
    1734:	mov	x1, x0
    1738:	ldr	x0, [sp, #24]
    173c:	bl	1504 <ext2fs_file_set_size2>
    1740:	ldp	x29, x30, [sp], #32
    1744:	ret

finddev.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fsP_is_disk_device>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	and	w0, w0, #0xf000
  10:	cmp	w0, #0x6, lsl #12
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	add	sp, sp, #0x10
  20:	ret

0000000000000024 <add_to_dirlist>:
  24:	stp	x29, x30, [sp, #-48]!
  28:	mov	x29, sp
  2c:	str	x0, [sp, #24]
  30:	str	x1, [sp, #16]
  34:	mov	x0, #0x10                  	// #16
  38:	bl	0 <malloc>
  3c:	str	x0, [sp, #40]
  40:	ldr	x0, [sp, #40]
  44:	cmp	x0, #0x0
  48:	b.eq	b4 <add_to_dirlist+0x90>  // b.none
  4c:	ldr	x0, [sp, #24]
  50:	bl	0 <strlen>
  54:	add	x0, x0, #0x1
  58:	bl	0 <malloc>
  5c:	mov	x1, x0
  60:	ldr	x0, [sp, #40]
  64:	str	x1, [x0]
  68:	ldr	x0, [sp, #40]
  6c:	ldr	x0, [x0]
  70:	cmp	x0, #0x0
  74:	b.ne	84 <add_to_dirlist+0x60>  // b.any
  78:	ldr	x0, [sp, #40]
  7c:	bl	0 <free>
  80:	b	b8 <add_to_dirlist+0x94>
  84:	ldr	x0, [sp, #40]
  88:	ldr	x0, [x0]
  8c:	ldr	x1, [sp, #24]
  90:	bl	0 <strcpy>
  94:	ldr	x0, [sp, #16]
  98:	ldr	x1, [x0]
  9c:	ldr	x0, [sp, #40]
  a0:	str	x1, [x0, #8]
  a4:	ldr	x0, [sp, #16]
  a8:	ldr	x1, [sp, #40]
  ac:	str	x1, [x0]
  b0:	b	b8 <add_to_dirlist+0x94>
  b4:	nop
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret

00000000000000c0 <free_dirlist>:
  c0:	stp	x29, x30, [sp, #-48]!
  c4:	mov	x29, sp
  c8:	str	x0, [sp, #24]
  cc:	ldr	x0, [sp, #24]
  d0:	ldr	x0, [x0]
  d4:	str	x0, [sp, #40]
  d8:	b	104 <free_dirlist+0x44>
  dc:	ldr	x0, [sp, #40]
  e0:	ldr	x0, [x0, #8]
  e4:	str	x0, [sp, #32]
  e8:	ldr	x0, [sp, #40]
  ec:	ldr	x0, [x0]
  f0:	bl	0 <free>
  f4:	ldr	x0, [sp, #40]
  f8:	bl	0 <free>
  fc:	ldr	x0, [sp, #32]
 100:	str	x0, [sp, #40]
 104:	ldr	x0, [sp, #40]
 108:	cmp	x0, #0x0
 10c:	b.ne	dc <free_dirlist+0x1c>  // b.any
 110:	ldr	x0, [sp, #24]
 114:	str	xzr, [x0]
 118:	nop
 11c:	ldp	x29, x30, [sp], #48
 120:	ret

0000000000000124 <scan_dir>:
 124:	sub	sp, sp, #0x4e0
 128:	stp	x29, x30, [sp]
 12c:	mov	x29, sp
 130:	str	x19, [sp, #16]
 134:	str	x0, [sp, #56]
 138:	str	x1, [sp, #48]
 13c:	str	x2, [sp, #40]
 140:	str	x3, [sp, #32]
 144:	ldr	x0, [sp, #56]
 148:	bl	0 <strlen>
 14c:	str	w0, [sp, #1236]
 150:	ldr	x0, [sp, #56]
 154:	bl	0 <opendir>
 158:	str	x0, [sp, #1224]
 15c:	ldr	x0, [sp, #1224]
 160:	cmp	x0, #0x0
 164:	b.ne	174 <scan_dir+0x50>  // b.any
 168:	bl	0 <__errno_location>
 16c:	ldr	w0, [x0]
 170:	b	2ec <scan_dir+0x1c8>
 174:	ldr	x0, [sp, #1224]
 178:	bl	0 <readdir>
 17c:	str	x0, [sp, #1240]
 180:	b	2d0 <scan_dir+0x1ac>
 184:	ldrsw	x19, [sp, #1236]
 188:	ldr	x0, [sp, #1240]
 18c:	add	x0, x0, #0x13
 190:	bl	0 <strlen>
 194:	add	x0, x19, x0
 198:	add	x0, x0, #0x2
 19c:	cmp	x0, #0x3ff
 1a0:	b.hi	2a8 <scan_dir+0x184>  // b.pmore
 1a4:	ldr	x0, [sp, #1240]
 1a8:	ldrb	w0, [x0, #19]
 1ac:	cmp	w0, #0x2e
 1b0:	b.ne	1e4 <scan_dir+0xc0>  // b.any
 1b4:	ldr	x0, [sp, #1240]
 1b8:	ldrb	w0, [x0, #20]
 1bc:	cmp	w0, #0x0
 1c0:	b.eq	2b0 <scan_dir+0x18c>  // b.none
 1c4:	ldr	x0, [sp, #1240]
 1c8:	ldrb	w0, [x0, #20]
 1cc:	cmp	w0, #0x2e
 1d0:	b.ne	1e4 <scan_dir+0xc0>  // b.any
 1d4:	ldr	x0, [sp, #1240]
 1d8:	ldrb	w0, [x0, #21]
 1dc:	cmp	w0, #0x0
 1e0:	b.eq	2b0 <scan_dir+0x18c>  // b.none
 1e4:	ldr	x0, [sp, #1240]
 1e8:	add	x0, x0, #0x13
 1ec:	add	x4, sp, #0xc0
 1f0:	mov	x3, x0
 1f4:	ldr	x2, [sp, #56]
 1f8:	adrp	x0, 0 <ext2fsP_is_disk_device>
 1fc:	add	x1, x0, #0x0
 200:	mov	x0, x4
 204:	bl	0 <sprintf>
 208:	add	x1, sp, #0x40
 20c:	add	x0, sp, #0xc0
 210:	bl	0 <stat>
 214:	cmp	w0, #0x0
 218:	b.lt	2b8 <scan_dir+0x194>  // b.tstop
 21c:	ldr	w0, [sp, #80]
 220:	and	w0, w0, #0xf000
 224:	cmp	w0, #0x4, lsl #12
 228:	b.ne	238 <scan_dir+0x114>  // b.any
 22c:	add	x0, sp, #0xc0
 230:	ldr	x1, [sp, #40]
 234:	bl	24 <add_to_dirlist>
 238:	ldr	w0, [sp, #80]
 23c:	bl	0 <ext2fsP_is_disk_device>
 240:	cmp	w0, #0x0
 244:	b.eq	2c0 <scan_dir+0x19c>  // b.none
 248:	ldr	x0, [sp, #96]
 24c:	ldr	x1, [sp, #48]
 250:	cmp	x1, x0
 254:	b.ne	2c0 <scan_dir+0x19c>  // b.any
 258:	add	x0, sp, #0xc0
 25c:	bl	0 <strlen>
 260:	add	x0, x0, #0x1
 264:	bl	0 <malloc>
 268:	str	x0, [sp, #1216]
 26c:	ldr	x0, [sp, #1216]
 270:	cmp	x0, #0x0
 274:	b.ne	288 <scan_dir+0x164>  // b.any
 278:	ldr	x0, [sp, #1224]
 27c:	bl	0 <closedir>
 280:	mov	w0, #0xc                   	// #12
 284:	b	2ec <scan_dir+0x1c8>
 288:	add	x0, sp, #0xc0
 28c:	mov	x1, x0
 290:	ldr	x0, [sp, #1216]
 294:	bl	0 <strcpy>
 298:	ldr	x0, [sp, #32]
 29c:	ldr	x1, [sp, #1216]
 2a0:	str	x1, [x0]
 2a4:	b	2e0 <scan_dir+0x1bc>
 2a8:	nop
 2ac:	b	2c4 <scan_dir+0x1a0>
 2b0:	nop
 2b4:	b	2c4 <scan_dir+0x1a0>
 2b8:	nop
 2bc:	b	2c4 <scan_dir+0x1a0>
 2c0:	nop
 2c4:	ldr	x0, [sp, #1224]
 2c8:	bl	0 <readdir>
 2cc:	str	x0, [sp, #1240]
 2d0:	ldr	x0, [sp, #1240]
 2d4:	cmp	x0, #0x0
 2d8:	b.ne	184 <scan_dir+0x60>  // b.any
 2dc:	nop
 2e0:	ldr	x0, [sp, #1224]
 2e4:	bl	0 <closedir>
 2e8:	mov	w0, #0x0                   	// #0
 2ec:	ldr	x19, [sp, #16]
 2f0:	ldp	x29, x30, [sp]
 2f4:	add	sp, sp, #0x4e0
 2f8:	ret

00000000000002fc <ext2fs_find_block_device>:
 2fc:	stp	x29, x30, [sp, #-80]!
 300:	mov	x29, sp
 304:	str	x0, [sp, #24]
 308:	str	xzr, [sp, #56]
 30c:	str	xzr, [sp, #48]
 310:	str	xzr, [sp, #40]
 314:	str	wzr, [sp, #76]
 318:	add	x0, sp, #0x38
 31c:	mov	x1, x0
 320:	adrp	x0, 0 <ext2fsP_is_disk_device>
 324:	add	x0, x0, #0x0
 328:	bl	24 <add_to_dirlist>
 32c:	add	x0, sp, #0x38
 330:	mov	x1, x0
 334:	adrp	x0, 0 <ext2fsP_is_disk_device>
 338:	add	x0, x0, #0x0
 33c:	bl	24 <add_to_dirlist>
 340:	add	x0, sp, #0x38
 344:	mov	x1, x0
 348:	adrp	x0, 0 <ext2fsP_is_disk_device>
 34c:	add	x0, x0, #0x0
 350:	bl	24 <add_to_dirlist>
 354:	b	3dc <ext2fs_find_block_device+0xe0>
 358:	ldr	x0, [sp, #56]
 35c:	str	x0, [sp, #64]
 360:	ldr	x0, [sp, #56]
 364:	ldr	x0, [x0, #8]
 368:	str	x0, [sp, #56]
 36c:	ldr	x0, [sp, #64]
 370:	ldr	x0, [x0]
 374:	add	x2, sp, #0x28
 378:	add	x1, sp, #0x30
 37c:	mov	x3, x2
 380:	mov	x2, x1
 384:	ldr	x1, [sp, #24]
 388:	bl	124 <scan_dir>
 38c:	ldr	x0, [sp, #64]
 390:	ldr	x0, [x0]
 394:	bl	0 <free>
 398:	ldr	x0, [sp, #64]
 39c:	bl	0 <free>
 3a0:	ldr	x0, [sp, #40]
 3a4:	cmp	x0, #0x0
 3a8:	b.ne	3ec <ext2fs_find_block_device+0xf0>  // b.any
 3ac:	ldr	x0, [sp, #56]
 3b0:	cmp	x0, #0x0
 3b4:	b.ne	3dc <ext2fs_find_block_device+0xe0>  // b.any
 3b8:	ldr	x0, [sp, #48]
 3bc:	str	x0, [sp, #56]
 3c0:	str	xzr, [sp, #48]
 3c4:	ldr	w0, [sp, #76]
 3c8:	add	w0, w0, #0x1
 3cc:	str	w0, [sp, #76]
 3d0:	ldr	w0, [sp, #76]
 3d4:	cmp	w0, #0x7
 3d8:	b.gt	3f4 <ext2fs_find_block_device+0xf8>
 3dc:	ldr	x0, [sp, #56]
 3e0:	cmp	x0, #0x0
 3e4:	b.ne	358 <ext2fs_find_block_device+0x5c>  // b.any
 3e8:	b	3f8 <ext2fs_find_block_device+0xfc>
 3ec:	nop
 3f0:	b	3f8 <ext2fs_find_block_device+0xfc>
 3f4:	nop
 3f8:	add	x0, sp, #0x38
 3fc:	bl	c0 <free_dirlist>
 400:	add	x0, sp, #0x30
 404:	bl	c0 <free_dirlist>
 408:	ldr	x0, [sp, #40]
 40c:	ldp	x29, x30, [sp], #80
 410:	ret

flushb.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_sync_device>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	w1, [sp, #24]
  10:	ldr	w0, [sp, #28]
  14:	bl	0 <fsync>
  18:	cmn	w0, #0x1
  1c:	b.ne	30 <ext2fs_sync_device+0x30>  // b.any
  20:	bl	0 <__errno_location>
  24:	ldr	w0, [x0]
  28:	sxtw	x0, w0
  2c:	b	b8 <ext2fs_sync_device+0xb8>
  30:	ldr	w0, [sp, #24]
  34:	cmp	w0, #0x0
  38:	b.eq	b4 <ext2fs_sync_device+0xb4>  // b.none
  3c:	str	xzr, [sp, #40]
  40:	mov	w2, #0x0                   	// #0
  44:	mov	x1, #0x1261                	// #4705
  48:	ldr	w0, [sp, #28]
  4c:	bl	0 <ioctl>
  50:	cmp	w0, #0x0
  54:	b.ne	60 <ext2fs_sync_device+0x60>  // b.any
  58:	mov	x0, #0x0                   	// #0
  5c:	b	b8 <ext2fs_sync_device+0xb8>
  60:	bl	0 <__errno_location>
  64:	ldr	w0, [x0]
  68:	sxtw	x0, w0
  6c:	str	x0, [sp, #40]
  70:	mov	w2, #0x0                   	// #0
  74:	mov	x1, #0x24b                 	// #587
  78:	ldr	w0, [sp, #28]
  7c:	bl	0 <ioctl>
  80:	cmp	w0, #0x0
  84:	b.ne	90 <ext2fs_sync_device+0x90>  // b.any
  88:	mov	x0, #0x0                   	// #0
  8c:	b	b8 <ext2fs_sync_device+0xb8>
  90:	ldr	x0, [sp, #40]
  94:	cmp	x0, #0x0
  98:	b.ne	ac <ext2fs_sync_device+0xac>  // b.any
  9c:	bl	0 <__errno_location>
  a0:	ldr	w0, [x0]
  a4:	sxtw	x0, w0
  a8:	str	x0, [sp, #40]
  ac:	ldr	x0, [sp, #40]
  b0:	b	b8 <ext2fs_sync_device+0xb8>
  b4:	mov	x0, #0x0                   	// #0
  b8:	ldp	x29, x30, [sp], #48
  bc:	ret

freefs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_free>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	ldr	x0, [sp, #24]
  10:	cmp	x0, #0x0
  14:	b.eq	240 <ext2fs_free+0x240>  // b.none
  18:	ldr	x0, [sp, #24]
  1c:	ldr	x1, [x0]
  20:	mov	x0, #0xb701                	// #46849
  24:	movk	x0, #0x7f2b, lsl #16
  28:	cmp	x1, x0
  2c:	b.ne	240 <ext2fs_free+0x240>  // b.any
  30:	ldr	x0, [sp, #24]
  34:	ldr	x1, [x0, #240]
  38:	ldr	x0, [sp, #24]
  3c:	ldr	x0, [x0, #8]
  40:	cmp	x1, x0
  44:	b.eq	74 <ext2fs_free+0x74>  // b.none
  48:	ldr	x0, [sp, #24]
  4c:	ldr	x0, [x0, #240]
  50:	cmp	x0, #0x0
  54:	b.eq	74 <ext2fs_free+0x74>  // b.none
  58:	ldr	x0, [sp, #24]
  5c:	ldr	x0, [x0, #240]
  60:	ldr	x0, [x0, #8]
  64:	ldr	x1, [x0, #24]
  68:	ldr	x0, [sp, #24]
  6c:	ldr	x0, [x0, #240]
  70:	blr	x1
  74:	ldr	x0, [sp, #24]
  78:	ldr	x0, [x0, #8]
  7c:	cmp	x0, #0x0
  80:	b.eq	a0 <ext2fs_free+0xa0>  // b.none
  84:	ldr	x0, [sp, #24]
  88:	ldr	x0, [x0, #8]
  8c:	ldr	x0, [x0, #8]
  90:	ldr	x1, [x0, #24]
  94:	ldr	x0, [sp, #24]
  98:	ldr	x0, [x0, #8]
  9c:	blr	x1
  a0:	ldr	x0, [sp, #24]
  a4:	ldr	x0, [x0, #24]
  a8:	cmp	x0, #0x0
  ac:	b.eq	bc <ext2fs_free+0xbc>  // b.none
  b0:	ldr	x0, [sp, #24]
  b4:	add	x0, x0, #0x18
  b8:	bl	0 <ext2fs_free_mem>
  bc:	ldr	x0, [sp, #24]
  c0:	ldr	x0, [x0, #32]
  c4:	cmp	x0, #0x0
  c8:	b.eq	d8 <ext2fs_free+0xd8>  // b.none
  cc:	ldr	x0, [sp, #24]
  d0:	add	x0, x0, #0x20
  d4:	bl	0 <ext2fs_free_mem>
  d8:	ldr	x0, [sp, #24]
  dc:	ldr	x0, [x0, #160]
  e0:	cmp	x0, #0x0
  e4:	b.eq	f4 <ext2fs_free+0xf4>  // b.none
  e8:	ldr	x0, [sp, #24]
  ec:	add	x0, x0, #0xa0
  f0:	bl	0 <ext2fs_free_mem>
  f4:	ldr	x0, [sp, #24]
  f8:	ldr	x0, [x0, #64]
  fc:	cmp	x0, #0x0
 100:	b.eq	110 <ext2fs_free+0x110>  // b.none
 104:	ldr	x0, [sp, #24]
 108:	add	x0, x0, #0x40
 10c:	bl	0 <ext2fs_free_mem>
 110:	ldr	x0, [sp, #24]
 114:	ldr	x0, [x0, #88]
 118:	cmp	x0, #0x0
 11c:	b.eq	12c <ext2fs_free+0x12c>  // b.none
 120:	ldr	x0, [sp, #24]
 124:	ldr	x0, [x0, #88]
 128:	bl	0 <ext2fs_free_block_bitmap>
 12c:	ldr	x0, [sp, #24]
 130:	ldr	x0, [x0, #80]
 134:	cmp	x0, #0x0
 138:	b.eq	148 <ext2fs_free+0x148>  // b.none
 13c:	ldr	x0, [sp, #24]
 140:	ldr	x0, [x0, #80]
 144:	bl	0 <ext2fs_free_inode_bitmap>
 148:	ldr	x0, [sp, #24]
 14c:	ldr	x0, [x0, #168]
 150:	cmp	x0, #0x0
 154:	b.eq	164 <ext2fs_free+0x164>  // b.none
 158:	ldr	x0, [sp, #24]
 15c:	add	x0, x0, #0xa8
 160:	bl	0 <ext2fs_free_mem>
 164:	ldr	x0, [sp, #24]
 168:	ldr	x0, [x0, #136]
 16c:	cmp	x0, #0x0
 170:	b.eq	180 <ext2fs_free+0x180>  // b.none
 174:	ldr	x0, [sp, #24]
 178:	ldr	x0, [x0, #136]
 17c:	bl	2ac <ext2fs_badblocks_list_free>
 180:	ldr	x0, [sp, #24]
 184:	str	xzr, [x0, #136]
 188:	ldr	x0, [sp, #24]
 18c:	ldr	x0, [x0, #144]
 190:	cmp	x0, #0x0
 194:	b.eq	1a4 <ext2fs_free+0x1a4>  // b.none
 198:	ldr	x0, [sp, #24]
 19c:	ldr	x0, [x0, #144]
 1a0:	bl	2cc <ext2fs_free_dblist>
 1a4:	ldr	x0, [sp, #24]
 1a8:	ldr	x0, [x0, #232]
 1ac:	cmp	x0, #0x0
 1b0:	b.eq	1c0 <ext2fs_free+0x1c0>  // b.none
 1b4:	ldr	x0, [sp, #24]
 1b8:	ldr	x0, [x0, #232]
 1bc:	bl	0 <ext2fs_free_inode_cache>
 1c0:	ldr	x0, [sp, #24]
 1c4:	ldr	x0, [x0, #272]
 1c8:	cmp	x0, #0x0
 1cc:	b.eq	1dc <ext2fs_free+0x1dc>  // b.none
 1d0:	ldr	x0, [sp, #24]
 1d4:	add	x0, x0, #0x110
 1d8:	bl	0 <ext2fs_free_mem>
 1dc:	ldr	x0, [sp, #24]
 1e0:	ldr	x0, [x0, #280]
 1e4:	cmp	x0, #0x0
 1e8:	b.eq	1f8 <ext2fs_free+0x1f8>  // b.none
 1ec:	ldr	x0, [sp, #24]
 1f0:	add	x0, x0, #0x118
 1f4:	bl	0 <ext2fs_free_mem>
 1f8:	ldr	x0, [sp, #24]
 1fc:	ldr	x0, [x0, #352]
 200:	cmp	x0, #0x0
 204:	b.eq	214 <ext2fs_free+0x214>  // b.none
 208:	ldr	x0, [sp, #24]
 20c:	ldr	x0, [x0, #352]
 210:	bl	0 <ext2fs_hashmap_free>
 214:	ldr	x0, [sp, #24]
 218:	str	xzr, [x0]
 21c:	mov	x4, #0x0                   	// #0
 220:	mov	x3, #0x0                   	// #0
 224:	mov	w2, #0x0                   	// #0
 228:	mov	x1, #0x0                   	// #0
 22c:	mov	x0, #0x0                   	// #0
 230:	bl	0 <ext2fs_zero_blocks2>
 234:	add	x0, sp, #0x18
 238:	bl	0 <ext2fs_free_mem>
 23c:	b	244 <ext2fs_free+0x244>
 240:	nop
 244:	ldp	x29, x30, [sp], #32
 248:	ret

000000000000024c <ext2fs_u32_list_free>:
 24c:	stp	x29, x30, [sp, #-32]!
 250:	mov	x29, sp
 254:	str	x0, [sp, #24]
 258:	ldr	x0, [sp, #24]
 25c:	ldr	w1, [x0]
 260:	mov	w0, #0xb702                	// #46850
 264:	movk	w0, #0x7f2b, lsl #16
 268:	cmp	w1, w0
 26c:	b.ne	2a0 <ext2fs_u32_list_free+0x54>  // b.any
 270:	ldr	x0, [sp, #24]
 274:	ldr	x0, [x0, #16]
 278:	cmp	x0, #0x0
 27c:	b.eq	28c <ext2fs_u32_list_free+0x40>  // b.none
 280:	ldr	x0, [sp, #24]
 284:	add	x0, x0, #0x10
 288:	bl	0 <ext2fs_free_mem>
 28c:	ldr	x0, [sp, #24]
 290:	str	xzr, [x0, #16]
 294:	add	x0, sp, #0x18
 298:	bl	0 <ext2fs_free_mem>
 29c:	b	2a4 <ext2fs_u32_list_free+0x58>
 2a0:	nop
 2a4:	ldp	x29, x30, [sp], #32
 2a8:	ret

00000000000002ac <ext2fs_badblocks_list_free>:
 2ac:	stp	x29, x30, [sp, #-32]!
 2b0:	mov	x29, sp
 2b4:	str	x0, [sp, #24]
 2b8:	ldr	x0, [sp, #24]
 2bc:	bl	24c <ext2fs_u32_list_free>
 2c0:	nop
 2c4:	ldp	x29, x30, [sp], #32
 2c8:	ret

00000000000002cc <ext2fs_free_dblist>:
 2cc:	stp	x29, x30, [sp, #-32]!
 2d0:	mov	x29, sp
 2d4:	str	x0, [sp, #24]
 2d8:	ldr	x0, [sp, #24]
 2dc:	cmp	x0, #0x0
 2e0:	b.eq	368 <ext2fs_free_dblist+0x9c>  // b.none
 2e4:	ldr	x0, [sp, #24]
 2e8:	ldr	w1, [x0]
 2ec:	mov	w0, #0xb70c                	// #46860
 2f0:	movk	w0, #0x7f2b, lsl #16
 2f4:	cmp	w1, w0
 2f8:	b.ne	368 <ext2fs_free_dblist+0x9c>  // b.any
 2fc:	ldr	x0, [sp, #24]
 300:	ldr	x0, [x0, #40]
 304:	cmp	x0, #0x0
 308:	b.eq	318 <ext2fs_free_dblist+0x4c>  // b.none
 30c:	ldr	x0, [sp, #24]
 310:	add	x0, x0, #0x28
 314:	bl	0 <ext2fs_free_mem>
 318:	ldr	x0, [sp, #24]
 31c:	str	xzr, [x0, #40]
 320:	ldr	x0, [sp, #24]
 324:	ldr	x0, [x0, #8]
 328:	cmp	x0, #0x0
 32c:	b.eq	354 <ext2fs_free_dblist+0x88>  // b.none
 330:	ldr	x0, [sp, #24]
 334:	ldr	x0, [x0, #8]
 338:	ldr	x1, [x0, #144]
 33c:	ldr	x0, [sp, #24]
 340:	cmp	x1, x0
 344:	b.ne	354 <ext2fs_free_dblist+0x88>  // b.any
 348:	ldr	x0, [sp, #24]
 34c:	ldr	x0, [x0, #8]
 350:	str	xzr, [x0, #144]
 354:	ldr	x0, [sp, #24]
 358:	str	wzr, [x0]
 35c:	add	x0, sp, #0x18
 360:	bl	0 <ext2fs_free_mem>
 364:	b	36c <ext2fs_free_dblist+0xa0>
 368:	nop
 36c:	ldp	x29, x30, [sp], #32
 370:	ret

gen_bitmap.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_warn_bitmap2>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	w1, [sp, #36]
      10:	str	x2, [sp, #24]
      14:	ldr	x0, [sp, #40]
      18:	str	x0, [sp, #56]
      1c:	ldr	x0, [sp, #56]
      20:	ldr	x0, [x0, #32]
      24:	cmp	x0, #0x0
      28:	b.eq	60 <ext2fs_warn_bitmap2+0x60>  // b.none
      2c:	ldr	x0, [sp, #56]
      30:	ldr	x1, [x0, #48]
      34:	ldrsw	x0, [sp, #36]
      38:	add	x1, x1, x0
      3c:	ldr	x0, [sp, #56]
      40:	ldr	x0, [x0, #32]
      44:	mov	x4, x0
      48:	ldr	x3, [sp, #24]
      4c:	adrp	x0, 0 <ext2fs_warn_bitmap2>
      50:	add	x2, x0, #0x0
      54:	mov	x0, #0x0                   	// #0
      58:	bl	0 <com_err>
      5c:	b	84 <ext2fs_warn_bitmap2+0x84>
      60:	ldr	x0, [sp, #56]
      64:	ldr	x1, [x0, #48]
      68:	ldrsw	x0, [sp, #36]
      6c:	add	x1, x1, x0
      70:	ldr	x3, [sp, #24]
      74:	adrp	x0, 0 <ext2fs_warn_bitmap2>
      78:	add	x2, x0, #0x0
      7c:	mov	x0, #0x0                   	// #0
      80:	bl	0 <com_err>
      84:	nop
      88:	ldp	x29, x30, [sp], #64
      8c:	ret

0000000000000090 <check_magic>:
      90:	sub	sp, sp, #0x10
      94:	str	x0, [sp, #8]
      98:	ldr	x0, [sp, #8]
      9c:	cmp	x0, #0x0
      a0:	b.eq	ec <check_magic+0x5c>  // b.none
      a4:	ldr	x0, [sp, #8]
      a8:	ldr	x1, [x0]
      ac:	mov	x0, #0xb70a                	// #46858
      b0:	movk	x0, #0x7f2b, lsl #16
      b4:	cmp	x1, x0
      b8:	b.eq	f8 <check_magic+0x68>  // b.none
      bc:	ldr	x0, [sp, #8]
      c0:	ldr	x1, [x0]
      c4:	mov	x0, #0xb709                	// #46857
      c8:	movk	x0, #0x7f2b, lsl #16
      cc:	cmp	x1, x0
      d0:	b.eq	f8 <check_magic+0x68>  // b.none
      d4:	ldr	x0, [sp, #8]
      d8:	ldr	x1, [x0]
      dc:	mov	x0, #0xb708                	// #46856
      e0:	movk	x0, #0x7f2b, lsl #16
      e4:	cmp	x1, x0
      e8:	b.eq	f8 <check_magic+0x68>  // b.none
      ec:	mov	x0, #0xb70a                	// #46858
      f0:	movk	x0, #0x7f2b, lsl #16
      f4:	b	fc <check_magic+0x6c>
      f8:	mov	x0, #0x0                   	// #0
      fc:	add	sp, sp, #0x10
     100:	ret

0000000000000104 <ext2fs_make_generic_bitmap>:
     104:	stp	x29, x30, [sp, #-112]!
     108:	mov	x29, sp
     10c:	str	x0, [sp, #72]
     110:	str	x1, [sp, #64]
     114:	str	w2, [sp, #60]
     118:	str	w3, [sp, #56]
     11c:	str	w4, [sp, #52]
     120:	str	x5, [sp, #40]
     124:	str	x6, [sp, #32]
     128:	str	x7, [sp, #24]
     12c:	add	x0, sp, #0x58
     130:	mov	x1, x0
     134:	mov	x0, #0x58                  	// #88
     138:	bl	0 <ext2fs_get_mem>
     13c:	str	x0, [sp, #104]
     140:	ldr	x0, [sp, #104]
     144:	cmp	x0, #0x0
     148:	b.eq	154 <ext2fs_make_generic_bitmap+0x50>  // b.none
     14c:	ldr	x0, [sp, #104]
     150:	b	314 <ext2fs_make_generic_bitmap+0x210>
     154:	ldr	x0, [sp, #88]
     158:	ldr	x1, [sp, #72]
     15c:	str	x1, [x0]
     160:	ldr	x0, [sp, #88]
     164:	ldr	x1, [sp, #64]
     168:	str	x1, [x0, #8]
     16c:	ldr	x0, [sp, #88]
     170:	ldr	w1, [sp, #60]
     174:	str	w1, [x0, #16]
     178:	ldr	x0, [sp, #88]
     17c:	ldr	w1, [sp, #56]
     180:	str	w1, [x0, #20]
     184:	ldr	x0, [sp, #88]
     188:	ldr	w1, [sp, #52]
     18c:	str	w1, [x0, #24]
     190:	ldr	x1, [sp, #72]
     194:	mov	x0, #0xb708                	// #46856
     198:	movk	x0, #0x7f2b, lsl #16
     19c:	cmp	x1, x0
     1a0:	b.eq	1cc <ext2fs_make_generic_bitmap+0xc8>  // b.none
     1a4:	ldr	x1, [sp, #72]
     1a8:	mov	x0, #0xb709                	// #46857
     1ac:	movk	x0, #0x7f2b, lsl #16
     1b0:	cmp	x1, x0
     1b4:	b.ne	1e0 <ext2fs_make_generic_bitmap+0xdc>  // b.any
     1b8:	ldr	x0, [sp, #88]
     1bc:	mov	x1, #0xb730                	// #46896
     1c0:	movk	x1, #0x7f2b, lsl #16
     1c4:	str	x1, [x0, #48]
     1c8:	b	1f0 <ext2fs_make_generic_bitmap+0xec>
     1cc:	ldr	x0, [sp, #88]
     1d0:	mov	x1, #0xb72d                	// #46893
     1d4:	movk	x1, #0x7f2b, lsl #16
     1d8:	str	x1, [x0, #48]
     1dc:	b	1f0 <ext2fs_make_generic_bitmap+0xec>
     1e0:	ldr	x0, [sp, #88]
     1e4:	mov	x1, #0xb73d                	// #46909
     1e8:	movk	x1, #0x7f2b, lsl #16
     1ec:	str	x1, [x0, #48]
     1f0:	ldr	x0, [sp, #40]
     1f4:	cmp	x0, #0x0
     1f8:	b.eq	250 <ext2fs_make_generic_bitmap+0x14c>  // b.none
     1fc:	ldr	x0, [sp, #40]
     200:	bl	0 <strlen>
     204:	add	x2, x0, #0x1
     208:	ldr	x0, [sp, #88]
     20c:	add	x0, x0, #0x20
     210:	mov	x1, x0
     214:	mov	x0, x2
     218:	bl	0 <ext2fs_get_mem>
     21c:	str	x0, [sp, #104]
     220:	ldr	x0, [sp, #104]
     224:	cmp	x0, #0x0
     228:	b.eq	23c <ext2fs_make_generic_bitmap+0x138>  // b.none
     22c:	add	x0, sp, #0x58
     230:	bl	0 <ext2fs_free_mem>
     234:	ldr	x0, [sp, #104]
     238:	b	314 <ext2fs_make_generic_bitmap+0x210>
     23c:	ldr	x0, [sp, #88]
     240:	ldr	x0, [x0, #32]
     244:	ldr	x1, [sp, #40]
     248:	bl	0 <strcpy>
     24c:	b	258 <ext2fs_make_generic_bitmap+0x154>
     250:	ldr	x0, [sp, #88]
     254:	str	xzr, [x0, #32]
     258:	ldr	x0, [sp, #88]
     25c:	ldr	w1, [x0, #24]
     260:	ldr	x0, [sp, #88]
     264:	ldr	w0, [x0, #16]
     268:	sub	w0, w1, w0
     26c:	lsr	w0, w0, #3
     270:	add	w0, w0, #0x1
     274:	mov	w0, w0
     278:	str	x0, [sp, #96]
     27c:	ldr	x0, [sp, #96]
     280:	add	x0, x0, #0x7
     284:	and	x0, x0, #0xfffffffffffffffc
     288:	str	x0, [sp, #96]
     28c:	ldr	x0, [sp, #88]
     290:	add	x0, x0, #0x28
     294:	mov	x1, x0
     298:	ldr	x0, [sp, #96]
     29c:	bl	0 <ext2fs_get_mem>
     2a0:	str	x0, [sp, #104]
     2a4:	ldr	x0, [sp, #104]
     2a8:	cmp	x0, #0x0
     2ac:	b.eq	2cc <ext2fs_make_generic_bitmap+0x1c8>  // b.none
     2b0:	ldr	x0, [sp, #88]
     2b4:	add	x0, x0, #0x20
     2b8:	bl	0 <ext2fs_free_mem>
     2bc:	add	x0, sp, #0x58
     2c0:	bl	0 <ext2fs_free_mem>
     2c4:	ldr	x0, [sp, #104]
     2c8:	b	314 <ext2fs_make_generic_bitmap+0x210>
     2cc:	ldr	x0, [sp, #32]
     2d0:	cmp	x0, #0x0
     2d4:	b.eq	2f0 <ext2fs_make_generic_bitmap+0x1ec>  // b.none
     2d8:	ldr	x0, [sp, #88]
     2dc:	ldr	x0, [x0, #40]
     2e0:	ldr	x2, [sp, #96]
     2e4:	ldr	x1, [sp, #32]
     2e8:	bl	0 <memcpy>
     2ec:	b	304 <ext2fs_make_generic_bitmap+0x200>
     2f0:	ldr	x0, [sp, #88]
     2f4:	ldr	x0, [x0, #40]
     2f8:	ldr	x2, [sp, #96]
     2fc:	mov	w1, #0x0                   	// #0
     300:	bl	0 <memset>
     304:	ldr	x1, [sp, #88]
     308:	ldr	x0, [sp, #24]
     30c:	str	x1, [x0]
     310:	mov	x0, #0x0                   	// #0
     314:	ldp	x29, x30, [sp], #112
     318:	ret

000000000000031c <ext2fs_allocate_generic_bitmap>:
     31c:	stp	x29, x30, [sp, #-48]!
     320:	mov	x29, sp
     324:	str	w0, [sp, #44]
     328:	str	w1, [sp, #40]
     32c:	str	w2, [sp, #36]
     330:	str	x3, [sp, #24]
     334:	str	x4, [sp, #16]
     338:	ldr	x7, [sp, #16]
     33c:	mov	x6, #0x0                   	// #0
     340:	ldr	x5, [sp, #24]
     344:	ldr	w4, [sp, #36]
     348:	ldr	w3, [sp, #40]
     34c:	ldr	w2, [sp, #44]
     350:	mov	x1, #0x0                   	// #0
     354:	mov	x0, #0xb70a                	// #46858
     358:	movk	x0, #0x7f2b, lsl #16
     35c:	bl	104 <ext2fs_make_generic_bitmap>
     360:	ldp	x29, x30, [sp], #48
     364:	ret

0000000000000368 <ext2fs_copy_generic_bitmap>:
     368:	stp	x29, x30, [sp, #-48]!
     36c:	mov	x29, sp
     370:	str	x0, [sp, #24]
     374:	str	x1, [sp, #16]
     378:	ldr	x0, [sp, #24]
     37c:	str	x0, [sp, #40]
     380:	ldr	x0, [sp, #40]
     384:	ldr	x8, [x0]
     388:	ldr	x0, [sp, #40]
     38c:	ldr	x1, [x0, #8]
     390:	ldr	x0, [sp, #40]
     394:	ldr	w2, [x0, #16]
     398:	ldr	x0, [sp, #40]
     39c:	ldr	w3, [x0, #20]
     3a0:	ldr	x0, [sp, #40]
     3a4:	ldr	w4, [x0, #24]
     3a8:	ldr	x0, [sp, #40]
     3ac:	ldr	x5, [x0, #32]
     3b0:	ldr	x0, [sp, #40]
     3b4:	ldr	x0, [x0, #40]
     3b8:	ldr	x7, [sp, #16]
     3bc:	mov	x6, x0
     3c0:	mov	x0, x8
     3c4:	bl	104 <ext2fs_make_generic_bitmap>
     3c8:	ldp	x29, x30, [sp], #48
     3cc:	ret

00000000000003d0 <ext2fs_free_generic_bitmap>:
     3d0:	stp	x29, x30, [sp, #-48]!
     3d4:	mov	x29, sp
     3d8:	str	x0, [sp, #24]
     3dc:	ldr	x0, [sp, #24]
     3e0:	str	x0, [sp, #40]
     3e4:	ldr	x0, [sp, #24]
     3e8:	bl	90 <check_magic>
     3ec:	cmp	x0, #0x0
     3f0:	b.ne	450 <ext2fs_free_generic_bitmap+0x80>  // b.any
     3f4:	ldr	x0, [sp, #40]
     3f8:	str	xzr, [x0]
     3fc:	ldr	x0, [sp, #40]
     400:	ldr	x0, [x0, #32]
     404:	cmp	x0, #0x0
     408:	b.eq	420 <ext2fs_free_generic_bitmap+0x50>  // b.none
     40c:	ldr	x0, [sp, #40]
     410:	add	x0, x0, #0x20
     414:	bl	0 <ext2fs_free_mem>
     418:	ldr	x0, [sp, #40]
     41c:	str	xzr, [x0, #32]
     420:	ldr	x0, [sp, #40]
     424:	ldr	x0, [x0, #40]
     428:	cmp	x0, #0x0
     42c:	b.eq	444 <ext2fs_free_generic_bitmap+0x74>  // b.none
     430:	ldr	x0, [sp, #40]
     434:	add	x0, x0, #0x28
     438:	bl	0 <ext2fs_free_mem>
     43c:	ldr	x0, [sp, #40]
     440:	str	xzr, [x0, #40]
     444:	add	x0, sp, #0x28
     448:	bl	0 <ext2fs_free_mem>
     44c:	b	454 <ext2fs_free_generic_bitmap+0x84>
     450:	nop
     454:	ldp	x29, x30, [sp], #48
     458:	ret

000000000000045c <ext2fs_test_generic_bitmap>:
     45c:	stp	x29, x30, [sp, #-48]!
     460:	mov	x29, sp
     464:	str	x0, [sp, #24]
     468:	str	w1, [sp, #20]
     46c:	ldr	x0, [sp, #24]
     470:	str	x0, [sp, #40]
     474:	ldr	x0, [sp, #24]
     478:	ldr	x1, [x0]
     47c:	mov	x0, #0xb70a                	// #46858
     480:	movk	x0, #0x7f2b, lsl #16
     484:	cmp	x1, x0
     488:	b.eq	550 <ext2fs_test_generic_bitmap+0xf4>  // b.none
     48c:	ldr	x0, [sp, #24]
     490:	ldr	x1, [x0]
     494:	mov	x0, #0xb708                	// #46856
     498:	movk	x0, #0x7f2b, lsl #16
     49c:	cmp	x1, x0
     4a0:	b.eq	550 <ext2fs_test_generic_bitmap+0xf4>  // b.none
     4a4:	ldr	x0, [sp, #24]
     4a8:	ldr	x1, [x0]
     4ac:	mov	x0, #0xb709                	// #46857
     4b0:	movk	x0, #0x7f2b, lsl #16
     4b4:	cmp	x1, x0
     4b8:	b.eq	550 <ext2fs_test_generic_bitmap+0xf4>  // b.none
     4bc:	ldr	x0, [sp, #24]
     4c0:	ldr	x1, [x0]
     4c4:	mov	x0, #0xb76d                	// #46957
     4c8:	movk	x0, #0x7f2b, lsl #16
     4cc:	cmp	x1, x0
     4d0:	b.eq	504 <ext2fs_test_generic_bitmap+0xa8>  // b.none
     4d4:	ldr	x0, [sp, #24]
     4d8:	ldr	x1, [x0]
     4dc:	mov	x0, #0xb76e                	// #46958
     4e0:	movk	x0, #0x7f2b, lsl #16
     4e4:	cmp	x1, x0
     4e8:	b.eq	504 <ext2fs_test_generic_bitmap+0xa8>  // b.none
     4ec:	ldr	x0, [sp, #24]
     4f0:	ldr	x1, [x0]
     4f4:	mov	x0, #0xb76f                	// #46959
     4f8:	movk	x0, #0x7f2b, lsl #16
     4fc:	cmp	x1, x0
     500:	b.ne	528 <ext2fs_test_generic_bitmap+0xcc>  // b.any
     504:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     508:	add	x1, x0, #0x0
     50c:	ldr	x0, [sp, #24]
     510:	bl	0 <ext2fs_warn_bitmap32>
     514:	ldr	w0, [sp, #20]
     518:	mov	x1, x0
     51c:	ldr	x0, [sp, #24]
     520:	bl	0 <ext2fs_test_generic_bmap>
     524:	b	5b8 <ext2fs_test_generic_bitmap+0x15c>
     528:	ldr	w0, [sp, #20]
     52c:	mov	x3, x0
     530:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     534:	add	x2, x0, #0x0
     538:	mov	x1, #0xb70a                	// #46858
     53c:	movk	x1, #0x7f2b, lsl #16
     540:	mov	x0, #0x0                   	// #0
     544:	bl	0 <com_err>
     548:	mov	w0, #0x0                   	// #0
     54c:	b	5b8 <ext2fs_test_generic_bitmap+0x15c>
     550:	ldr	x0, [sp, #40]
     554:	ldr	w0, [x0, #16]
     558:	ldr	w1, [sp, #20]
     55c:	cmp	w1, w0
     560:	b.cc	578 <ext2fs_test_generic_bitmap+0x11c>  // b.lo, b.ul, b.last
     564:	ldr	x0, [sp, #40]
     568:	ldr	w0, [x0, #20]
     56c:	ldr	w1, [sp, #20]
     570:	cmp	w1, w0
     574:	b.ls	594 <ext2fs_test_generic_bitmap+0x138>  // b.plast
     578:	ldr	w0, [sp, #20]
     57c:	mov	x2, x0
     580:	mov	w1, #0x2                   	// #2
     584:	ldr	x0, [sp, #24]
     588:	bl	0 <ext2fs_warn_bitmap2>
     58c:	mov	w0, #0x0                   	// #0
     590:	b	5b8 <ext2fs_test_generic_bitmap+0x15c>
     594:	ldr	x0, [sp, #40]
     598:	ldr	w0, [x0, #16]
     59c:	ldr	w1, [sp, #20]
     5a0:	sub	w2, w1, w0
     5a4:	ldr	x0, [sp, #40]
     5a8:	ldr	x0, [x0, #40]
     5ac:	mov	x1, x0
     5b0:	mov	w0, w2
     5b4:	bl	0 <ext2fs_test_bit>
     5b8:	ldp	x29, x30, [sp], #48
     5bc:	ret

00000000000005c0 <ext2fs_mark_generic_bitmap>:
     5c0:	stp	x29, x30, [sp, #-48]!
     5c4:	mov	x29, sp
     5c8:	str	x0, [sp, #24]
     5cc:	str	w1, [sp, #20]
     5d0:	ldr	x0, [sp, #24]
     5d4:	str	x0, [sp, #40]
     5d8:	ldr	x0, [sp, #24]
     5dc:	ldr	x1, [x0]
     5e0:	mov	x0, #0xb70a                	// #46858
     5e4:	movk	x0, #0x7f2b, lsl #16
     5e8:	cmp	x1, x0
     5ec:	b.eq	6b4 <ext2fs_mark_generic_bitmap+0xf4>  // b.none
     5f0:	ldr	x0, [sp, #24]
     5f4:	ldr	x1, [x0]
     5f8:	mov	x0, #0xb708                	// #46856
     5fc:	movk	x0, #0x7f2b, lsl #16
     600:	cmp	x1, x0
     604:	b.eq	6b4 <ext2fs_mark_generic_bitmap+0xf4>  // b.none
     608:	ldr	x0, [sp, #24]
     60c:	ldr	x1, [x0]
     610:	mov	x0, #0xb709                	// #46857
     614:	movk	x0, #0x7f2b, lsl #16
     618:	cmp	x1, x0
     61c:	b.eq	6b4 <ext2fs_mark_generic_bitmap+0xf4>  // b.none
     620:	ldr	x0, [sp, #24]
     624:	ldr	x1, [x0]
     628:	mov	x0, #0xb76d                	// #46957
     62c:	movk	x0, #0x7f2b, lsl #16
     630:	cmp	x1, x0
     634:	b.eq	668 <ext2fs_mark_generic_bitmap+0xa8>  // b.none
     638:	ldr	x0, [sp, #24]
     63c:	ldr	x1, [x0]
     640:	mov	x0, #0xb76e                	// #46958
     644:	movk	x0, #0x7f2b, lsl #16
     648:	cmp	x1, x0
     64c:	b.eq	668 <ext2fs_mark_generic_bitmap+0xa8>  // b.none
     650:	ldr	x0, [sp, #24]
     654:	ldr	x1, [x0]
     658:	mov	x0, #0xb76f                	// #46959
     65c:	movk	x0, #0x7f2b, lsl #16
     660:	cmp	x1, x0
     664:	b.ne	68c <ext2fs_mark_generic_bitmap+0xcc>  // b.any
     668:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     66c:	add	x1, x0, #0x0
     670:	ldr	x0, [sp, #24]
     674:	bl	0 <ext2fs_warn_bitmap32>
     678:	ldr	w0, [sp, #20]
     67c:	mov	x1, x0
     680:	ldr	x0, [sp, #24]
     684:	bl	0 <ext2fs_mark_generic_bmap>
     688:	b	71c <ext2fs_mark_generic_bitmap+0x15c>
     68c:	ldr	w0, [sp, #20]
     690:	mov	x3, x0
     694:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     698:	add	x2, x0, #0x0
     69c:	mov	x1, #0xb70a                	// #46858
     6a0:	movk	x1, #0x7f2b, lsl #16
     6a4:	mov	x0, #0x0                   	// #0
     6a8:	bl	0 <com_err>
     6ac:	mov	w0, #0x0                   	// #0
     6b0:	b	71c <ext2fs_mark_generic_bitmap+0x15c>
     6b4:	ldr	x0, [sp, #40]
     6b8:	ldr	w0, [x0, #16]
     6bc:	ldr	w1, [sp, #20]
     6c0:	cmp	w1, w0
     6c4:	b.cc	6dc <ext2fs_mark_generic_bitmap+0x11c>  // b.lo, b.ul, b.last
     6c8:	ldr	x0, [sp, #40]
     6cc:	ldr	w0, [x0, #20]
     6d0:	ldr	w1, [sp, #20]
     6d4:	cmp	w1, w0
     6d8:	b.ls	6f8 <ext2fs_mark_generic_bitmap+0x138>  // b.plast
     6dc:	ldr	w0, [sp, #20]
     6e0:	mov	x2, x0
     6e4:	mov	w1, #0x0                   	// #0
     6e8:	ldr	x0, [sp, #24]
     6ec:	bl	0 <ext2fs_warn_bitmap2>
     6f0:	mov	w0, #0x0                   	// #0
     6f4:	b	71c <ext2fs_mark_generic_bitmap+0x15c>
     6f8:	ldr	x0, [sp, #40]
     6fc:	ldr	w0, [x0, #16]
     700:	ldr	w1, [sp, #20]
     704:	sub	w2, w1, w0
     708:	ldr	x0, [sp, #40]
     70c:	ldr	x0, [x0, #40]
     710:	mov	x1, x0
     714:	mov	w0, w2
     718:	bl	0 <ext2fs_set_bit>
     71c:	ldp	x29, x30, [sp], #48
     720:	ret

0000000000000724 <ext2fs_unmark_generic_bitmap>:
     724:	stp	x29, x30, [sp, #-48]!
     728:	mov	x29, sp
     72c:	str	x0, [sp, #24]
     730:	str	w1, [sp, #20]
     734:	ldr	x0, [sp, #24]
     738:	str	x0, [sp, #40]
     73c:	ldr	x0, [sp, #24]
     740:	ldr	x1, [x0]
     744:	mov	x0, #0xb70a                	// #46858
     748:	movk	x0, #0x7f2b, lsl #16
     74c:	cmp	x1, x0
     750:	b.eq	818 <ext2fs_unmark_generic_bitmap+0xf4>  // b.none
     754:	ldr	x0, [sp, #24]
     758:	ldr	x1, [x0]
     75c:	mov	x0, #0xb708                	// #46856
     760:	movk	x0, #0x7f2b, lsl #16
     764:	cmp	x1, x0
     768:	b.eq	818 <ext2fs_unmark_generic_bitmap+0xf4>  // b.none
     76c:	ldr	x0, [sp, #24]
     770:	ldr	x1, [x0]
     774:	mov	x0, #0xb709                	// #46857
     778:	movk	x0, #0x7f2b, lsl #16
     77c:	cmp	x1, x0
     780:	b.eq	818 <ext2fs_unmark_generic_bitmap+0xf4>  // b.none
     784:	ldr	x0, [sp, #24]
     788:	ldr	x1, [x0]
     78c:	mov	x0, #0xb76d                	// #46957
     790:	movk	x0, #0x7f2b, lsl #16
     794:	cmp	x1, x0
     798:	b.eq	7cc <ext2fs_unmark_generic_bitmap+0xa8>  // b.none
     79c:	ldr	x0, [sp, #24]
     7a0:	ldr	x1, [x0]
     7a4:	mov	x0, #0xb76e                	// #46958
     7a8:	movk	x0, #0x7f2b, lsl #16
     7ac:	cmp	x1, x0
     7b0:	b.eq	7cc <ext2fs_unmark_generic_bitmap+0xa8>  // b.none
     7b4:	ldr	x0, [sp, #24]
     7b8:	ldr	x1, [x0]
     7bc:	mov	x0, #0xb76f                	// #46959
     7c0:	movk	x0, #0x7f2b, lsl #16
     7c4:	cmp	x1, x0
     7c8:	b.ne	7f0 <ext2fs_unmark_generic_bitmap+0xcc>  // b.any
     7cc:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     7d0:	add	x1, x0, #0x0
     7d4:	ldr	x0, [sp, #24]
     7d8:	bl	0 <ext2fs_warn_bitmap32>
     7dc:	ldr	w0, [sp, #20]
     7e0:	mov	x1, x0
     7e4:	ldr	x0, [sp, #24]
     7e8:	bl	0 <ext2fs_unmark_generic_bmap>
     7ec:	b	880 <ext2fs_unmark_generic_bitmap+0x15c>
     7f0:	ldr	w0, [sp, #20]
     7f4:	mov	x3, x0
     7f8:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     7fc:	add	x2, x0, #0x0
     800:	mov	x1, #0xb70a                	// #46858
     804:	movk	x1, #0x7f2b, lsl #16
     808:	mov	x0, #0x0                   	// #0
     80c:	bl	0 <com_err>
     810:	mov	w0, #0x0                   	// #0
     814:	b	880 <ext2fs_unmark_generic_bitmap+0x15c>
     818:	ldr	x0, [sp, #40]
     81c:	ldr	w0, [x0, #16]
     820:	ldr	w1, [sp, #20]
     824:	cmp	w1, w0
     828:	b.cc	840 <ext2fs_unmark_generic_bitmap+0x11c>  // b.lo, b.ul, b.last
     82c:	ldr	x0, [sp, #40]
     830:	ldr	w0, [x0, #20]
     834:	ldr	w1, [sp, #20]
     838:	cmp	w1, w0
     83c:	b.ls	85c <ext2fs_unmark_generic_bitmap+0x138>  // b.plast
     840:	ldr	w0, [sp, #20]
     844:	mov	x2, x0
     848:	mov	w1, #0x1                   	// #1
     84c:	ldr	x0, [sp, #24]
     850:	bl	0 <ext2fs_warn_bitmap2>
     854:	mov	w0, #0x0                   	// #0
     858:	b	880 <ext2fs_unmark_generic_bitmap+0x15c>
     85c:	ldr	x0, [sp, #40]
     860:	ldr	w0, [x0, #16]
     864:	ldr	w1, [sp, #20]
     868:	sub	w2, w1, w0
     86c:	ldr	x0, [sp, #40]
     870:	ldr	x0, [x0, #40]
     874:	mov	x1, x0
     878:	mov	w0, w2
     87c:	bl	0 <ext2fs_clear_bit>
     880:	ldp	x29, x30, [sp], #48
     884:	ret

0000000000000888 <ext2fs_get_generic_bitmap_start>:
     888:	stp	x29, x30, [sp, #-48]!
     88c:	mov	x29, sp
     890:	str	x0, [sp, #24]
     894:	ldr	x0, [sp, #24]
     898:	str	x0, [sp, #40]
     89c:	ldr	x0, [sp, #24]
     8a0:	ldr	x1, [x0]
     8a4:	mov	x0, #0xb70a                	// #46858
     8a8:	movk	x0, #0x7f2b, lsl #16
     8ac:	cmp	x1, x0
     8b0:	b.eq	968 <ext2fs_get_generic_bitmap_start+0xe0>  // b.none
     8b4:	ldr	x0, [sp, #24]
     8b8:	ldr	x1, [x0]
     8bc:	mov	x0, #0xb708                	// #46856
     8c0:	movk	x0, #0x7f2b, lsl #16
     8c4:	cmp	x1, x0
     8c8:	b.eq	968 <ext2fs_get_generic_bitmap_start+0xe0>  // b.none
     8cc:	ldr	x0, [sp, #24]
     8d0:	ldr	x1, [x0]
     8d4:	mov	x0, #0xb709                	// #46857
     8d8:	movk	x0, #0x7f2b, lsl #16
     8dc:	cmp	x1, x0
     8e0:	b.eq	968 <ext2fs_get_generic_bitmap_start+0xe0>  // b.none
     8e4:	ldr	x0, [sp, #24]
     8e8:	ldr	x1, [x0]
     8ec:	mov	x0, #0xb76d                	// #46957
     8f0:	movk	x0, #0x7f2b, lsl #16
     8f4:	cmp	x1, x0
     8f8:	b.eq	92c <ext2fs_get_generic_bitmap_start+0xa4>  // b.none
     8fc:	ldr	x0, [sp, #24]
     900:	ldr	x1, [x0]
     904:	mov	x0, #0xb76e                	// #46958
     908:	movk	x0, #0x7f2b, lsl #16
     90c:	cmp	x1, x0
     910:	b.eq	92c <ext2fs_get_generic_bitmap_start+0xa4>  // b.none
     914:	ldr	x0, [sp, #24]
     918:	ldr	x1, [x0]
     91c:	mov	x0, #0xb76f                	// #46959
     920:	movk	x0, #0x7f2b, lsl #16
     924:	cmp	x1, x0
     928:	b.ne	948 <ext2fs_get_generic_bitmap_start+0xc0>  // b.any
     92c:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     930:	add	x1, x0, #0x0
     934:	ldr	x0, [sp, #24]
     938:	bl	0 <ext2fs_warn_bitmap32>
     93c:	ldr	x0, [sp, #24]
     940:	bl	0 <ext2fs_get_generic_bmap_start>
     944:	b	970 <ext2fs_get_generic_bitmap_start+0xe8>
     948:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     94c:	add	x2, x0, #0x0
     950:	mov	x1, #0xb70a                	// #46858
     954:	movk	x1, #0x7f2b, lsl #16
     958:	mov	x0, #0x0                   	// #0
     95c:	bl	0 <com_err>
     960:	mov	w0, #0x0                   	// #0
     964:	b	970 <ext2fs_get_generic_bitmap_start+0xe8>
     968:	ldr	x0, [sp, #40]
     96c:	ldr	w0, [x0, #16]
     970:	ldp	x29, x30, [sp], #48
     974:	ret

0000000000000978 <ext2fs_get_generic_bitmap_end>:
     978:	stp	x29, x30, [sp, #-48]!
     97c:	mov	x29, sp
     980:	str	x0, [sp, #24]
     984:	ldr	x0, [sp, #24]
     988:	str	x0, [sp, #40]
     98c:	ldr	x0, [sp, #24]
     990:	ldr	x1, [x0]
     994:	mov	x0, #0xb70a                	// #46858
     998:	movk	x0, #0x7f2b, lsl #16
     99c:	cmp	x1, x0
     9a0:	b.eq	a58 <ext2fs_get_generic_bitmap_end+0xe0>  // b.none
     9a4:	ldr	x0, [sp, #24]
     9a8:	ldr	x1, [x0]
     9ac:	mov	x0, #0xb708                	// #46856
     9b0:	movk	x0, #0x7f2b, lsl #16
     9b4:	cmp	x1, x0
     9b8:	b.eq	a58 <ext2fs_get_generic_bitmap_end+0xe0>  // b.none
     9bc:	ldr	x0, [sp, #24]
     9c0:	ldr	x1, [x0]
     9c4:	mov	x0, #0xb709                	// #46857
     9c8:	movk	x0, #0x7f2b, lsl #16
     9cc:	cmp	x1, x0
     9d0:	b.eq	a58 <ext2fs_get_generic_bitmap_end+0xe0>  // b.none
     9d4:	ldr	x0, [sp, #24]
     9d8:	ldr	x1, [x0]
     9dc:	mov	x0, #0xb76d                	// #46957
     9e0:	movk	x0, #0x7f2b, lsl #16
     9e4:	cmp	x1, x0
     9e8:	b.eq	a1c <ext2fs_get_generic_bitmap_end+0xa4>  // b.none
     9ec:	ldr	x0, [sp, #24]
     9f0:	ldr	x1, [x0]
     9f4:	mov	x0, #0xb76e                	// #46958
     9f8:	movk	x0, #0x7f2b, lsl #16
     9fc:	cmp	x1, x0
     a00:	b.eq	a1c <ext2fs_get_generic_bitmap_end+0xa4>  // b.none
     a04:	ldr	x0, [sp, #24]
     a08:	ldr	x1, [x0]
     a0c:	mov	x0, #0xb76f                	// #46959
     a10:	movk	x0, #0x7f2b, lsl #16
     a14:	cmp	x1, x0
     a18:	b.ne	a38 <ext2fs_get_generic_bitmap_end+0xc0>  // b.any
     a1c:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     a20:	add	x1, x0, #0x0
     a24:	ldr	x0, [sp, #24]
     a28:	bl	0 <ext2fs_warn_bitmap32>
     a2c:	ldr	x0, [sp, #24]
     a30:	bl	0 <ext2fs_get_generic_bmap_end>
     a34:	b	a60 <ext2fs_get_generic_bitmap_end+0xe8>
     a38:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     a3c:	add	x2, x0, #0x0
     a40:	mov	x1, #0xb70a                	// #46858
     a44:	movk	x1, #0x7f2b, lsl #16
     a48:	mov	x0, #0x0                   	// #0
     a4c:	bl	0 <com_err>
     a50:	mov	w0, #0x0                   	// #0
     a54:	b	a60 <ext2fs_get_generic_bitmap_end+0xe8>
     a58:	ldr	x0, [sp, #40]
     a5c:	ldr	w0, [x0, #20]
     a60:	ldp	x29, x30, [sp], #48
     a64:	ret

0000000000000a68 <ext2fs_clear_generic_bitmap>:
     a68:	stp	x29, x30, [sp, #-48]!
     a6c:	mov	x29, sp
     a70:	str	x0, [sp, #24]
     a74:	ldr	x0, [sp, #24]
     a78:	str	x0, [sp, #40]
     a7c:	ldr	x0, [sp, #24]
     a80:	ldr	x1, [x0]
     a84:	mov	x0, #0xb70a                	// #46858
     a88:	movk	x0, #0x7f2b, lsl #16
     a8c:	cmp	x1, x0
     a90:	b.eq	b44 <ext2fs_clear_generic_bitmap+0xdc>  // b.none
     a94:	ldr	x0, [sp, #24]
     a98:	ldr	x1, [x0]
     a9c:	mov	x0, #0xb708                	// #46856
     aa0:	movk	x0, #0x7f2b, lsl #16
     aa4:	cmp	x1, x0
     aa8:	b.eq	b44 <ext2fs_clear_generic_bitmap+0xdc>  // b.none
     aac:	ldr	x0, [sp, #24]
     ab0:	ldr	x1, [x0]
     ab4:	mov	x0, #0xb709                	// #46857
     ab8:	movk	x0, #0x7f2b, lsl #16
     abc:	cmp	x1, x0
     ac0:	b.eq	b44 <ext2fs_clear_generic_bitmap+0xdc>  // b.none
     ac4:	ldr	x0, [sp, #24]
     ac8:	ldr	x1, [x0]
     acc:	mov	x0, #0xb76d                	// #46957
     ad0:	movk	x0, #0x7f2b, lsl #16
     ad4:	cmp	x1, x0
     ad8:	b.eq	b0c <ext2fs_clear_generic_bitmap+0xa4>  // b.none
     adc:	ldr	x0, [sp, #24]
     ae0:	ldr	x1, [x0]
     ae4:	mov	x0, #0xb76e                	// #46958
     ae8:	movk	x0, #0x7f2b, lsl #16
     aec:	cmp	x1, x0
     af0:	b.eq	b0c <ext2fs_clear_generic_bitmap+0xa4>  // b.none
     af4:	ldr	x0, [sp, #24]
     af8:	ldr	x1, [x0]
     afc:	mov	x0, #0xb76f                	// #46959
     b00:	movk	x0, #0x7f2b, lsl #16
     b04:	cmp	x1, x0
     b08:	b.ne	b28 <ext2fs_clear_generic_bitmap+0xc0>  // b.any
     b0c:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     b10:	add	x1, x0, #0x0
     b14:	ldr	x0, [sp, #24]
     b18:	bl	0 <ext2fs_warn_bitmap32>
     b1c:	ldr	x0, [sp, #24]
     b20:	bl	0 <ext2fs_clear_generic_bmap>
     b24:	b	b7c <ext2fs_clear_generic_bitmap+0x114>
     b28:	adrp	x0, 0 <ext2fs_warn_bitmap2>
     b2c:	add	x2, x0, #0x0
     b30:	mov	x1, #0xb70a                	// #46858
     b34:	movk	x1, #0x7f2b, lsl #16
     b38:	mov	x0, #0x0                   	// #0
     b3c:	bl	0 <com_err>
     b40:	b	b7c <ext2fs_clear_generic_bitmap+0x114>
     b44:	ldr	x0, [sp, #40]
     b48:	ldr	x3, [x0, #40]
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	w1, [x0, #24]
     b54:	ldr	x0, [sp, #40]
     b58:	ldr	w0, [x0, #16]
     b5c:	sub	w0, w1, w0
     b60:	lsr	w0, w0, #3
     b64:	add	w0, w0, #0x1
     b68:	mov	w0, w0
     b6c:	mov	x2, x0
     b70:	mov	w1, #0x0                   	// #0
     b74:	mov	x0, x3
     b78:	bl	0 <memset>
     b7c:	ldp	x29, x30, [sp], #48
     b80:	ret

0000000000000b84 <ext2fs_fudge_generic_bitmap_end>:
     b84:	sub	sp, sp, #0x40
     b88:	str	x0, [sp, #40]
     b8c:	str	x1, [sp, #32]
     b90:	str	x2, [sp, #24]
     b94:	str	w3, [sp, #20]
     b98:	str	x4, [sp, #8]
     b9c:	ldr	x0, [sp, #40]
     ba0:	str	x0, [sp, #56]
     ba4:	ldr	x0, [sp, #56]
     ba8:	ldr	x0, [x0]
     bac:	ldr	x1, [sp, #32]
     bb0:	cmp	x1, x0
     bb4:	b.eq	bc0 <ext2fs_fudge_generic_bitmap_end+0x3c>  // b.none
     bb8:	ldr	x0, [sp, #32]
     bbc:	b	c08 <ext2fs_fudge_generic_bitmap_end+0x84>
     bc0:	ldr	x0, [sp, #56]
     bc4:	ldr	w0, [x0, #24]
     bc8:	ldr	w1, [sp, #20]
     bcc:	cmp	w1, w0
     bd0:	b.ls	bdc <ext2fs_fudge_generic_bitmap_end+0x58>  // b.plast
     bd4:	ldr	x0, [sp, #24]
     bd8:	b	c08 <ext2fs_fudge_generic_bitmap_end+0x84>
     bdc:	ldr	x0, [sp, #8]
     be0:	cmp	x0, #0x0
     be4:	b.eq	bf8 <ext2fs_fudge_generic_bitmap_end+0x74>  // b.none
     be8:	ldr	x0, [sp, #56]
     bec:	ldr	w1, [x0, #20]
     bf0:	ldr	x0, [sp, #8]
     bf4:	str	w1, [x0]
     bf8:	ldr	x0, [sp, #56]
     bfc:	ldr	w1, [sp, #20]
     c00:	str	w1, [x0, #20]
     c04:	mov	x0, #0x0                   	// #0
     c08:	add	sp, sp, #0x40
     c0c:	ret

0000000000000c10 <ext2fs_resize_generic_bitmap>:
     c10:	stp	x29, x30, [sp, #-96]!
     c14:	mov	x29, sp
     c18:	str	x0, [sp, #40]
     c1c:	str	w1, [sp, #36]
     c20:	str	w2, [sp, #32]
     c24:	str	x3, [sp, #24]
     c28:	ldr	x0, [sp, #24]
     c2c:	str	x0, [sp, #80]
     c30:	ldr	x0, [sp, #80]
     c34:	cmp	x0, #0x0
     c38:	b.eq	c50 <ext2fs_resize_generic_bitmap+0x40>  // b.none
     c3c:	ldr	x0, [sp, #80]
     c40:	ldr	x0, [x0]
     c44:	ldr	x1, [sp, #40]
     c48:	cmp	x1, x0
     c4c:	b.eq	c58 <ext2fs_resize_generic_bitmap+0x48>  // b.none
     c50:	ldr	x0, [sp, #40]
     c54:	b	ddc <ext2fs_resize_generic_bitmap+0x1cc>
     c58:	ldr	x0, [sp, #80]
     c5c:	ldr	w0, [x0, #20]
     c60:	ldr	w1, [sp, #36]
     c64:	cmp	w1, w0
     c68:	b.ls	cd8 <ext2fs_resize_generic_bitmap+0xc8>  // b.plast
     c6c:	ldr	x0, [sp, #80]
     c70:	ldr	w0, [x0, #24]
     c74:	str	w0, [sp, #92]
     c78:	ldr	w1, [sp, #92]
     c7c:	ldr	w0, [sp, #36]
     c80:	cmp	w1, w0
     c84:	b.ls	cc4 <ext2fs_resize_generic_bitmap+0xb4>  // b.plast
     c88:	ldr	w0, [sp, #36]
     c8c:	str	w0, [sp, #92]
     c90:	b	cc4 <ext2fs_resize_generic_bitmap+0xb4>
     c94:	ldr	x0, [sp, #80]
     c98:	ldr	w0, [x0, #16]
     c9c:	ldr	w1, [sp, #92]
     ca0:	sub	w2, w1, w0
     ca4:	ldr	x0, [sp, #80]
     ca8:	ldr	x0, [x0, #40]
     cac:	mov	x1, x0
     cb0:	mov	w0, w2
     cb4:	bl	0 <ext2fs_clear_bit>
     cb8:	ldr	w0, [sp, #92]
     cbc:	sub	w0, w0, #0x1
     cc0:	str	w0, [sp, #92]
     cc4:	ldr	x0, [sp, #80]
     cc8:	ldr	w0, [x0, #20]
     ccc:	ldr	w1, [sp, #92]
     cd0:	cmp	w1, w0
     cd4:	b.hi	c94 <ext2fs_resize_generic_bitmap+0x84>  // b.pmore
     cd8:	ldr	x0, [sp, #80]
     cdc:	ldr	w0, [x0, #24]
     ce0:	ldr	w1, [sp, #32]
     ce4:	cmp	w1, w0
     ce8:	b.ne	d00 <ext2fs_resize_generic_bitmap+0xf0>  // b.any
     cec:	ldr	x0, [sp, #80]
     cf0:	ldr	w1, [sp, #36]
     cf4:	str	w1, [x0, #20]
     cf8:	mov	x0, #0x0                   	// #0
     cfc:	b	ddc <ext2fs_resize_generic_bitmap+0x1cc>
     d00:	ldr	x0, [sp, #80]
     d04:	ldr	w1, [x0, #24]
     d08:	ldr	x0, [sp, #80]
     d0c:	ldr	w0, [x0, #16]
     d10:	sub	w0, w1, w0
     d14:	lsr	w0, w0, #3
     d18:	add	w0, w0, #0x1
     d1c:	mov	w0, w0
     d20:	str	x0, [sp, #72]
     d24:	ldr	x0, [sp, #80]
     d28:	ldr	w0, [x0, #16]
     d2c:	ldr	w1, [sp, #32]
     d30:	sub	w0, w1, w0
     d34:	lsr	w0, w0, #3
     d38:	add	w0, w0, #0x1
     d3c:	mov	w0, w0
     d40:	str	x0, [sp, #64]
     d44:	ldr	x1, [sp, #72]
     d48:	ldr	x0, [sp, #64]
     d4c:	cmp	x1, x0
     d50:	b.eq	d84 <ext2fs_resize_generic_bitmap+0x174>  // b.none
     d54:	ldr	x0, [sp, #80]
     d58:	add	x0, x0, #0x28
     d5c:	mov	x2, x0
     d60:	ldr	x1, [sp, #64]
     d64:	ldr	x0, [sp, #72]
     d68:	bl	0 <ext2fs_resize_mem>
     d6c:	str	x0, [sp, #56]
     d70:	ldr	x0, [sp, #56]
     d74:	cmp	x0, #0x0
     d78:	b.eq	d84 <ext2fs_resize_generic_bitmap+0x174>  // b.none
     d7c:	ldr	x0, [sp, #56]
     d80:	b	ddc <ext2fs_resize_generic_bitmap+0x1cc>
     d84:	ldr	x1, [sp, #64]
     d88:	ldr	x0, [sp, #72]
     d8c:	cmp	x1, x0
     d90:	b.ls	dc0 <ext2fs_resize_generic_bitmap+0x1b0>  // b.plast
     d94:	ldr	x0, [sp, #80]
     d98:	ldr	x1, [x0, #40]
     d9c:	ldr	x0, [sp, #72]
     da0:	add	x3, x1, x0
     da4:	ldr	x1, [sp, #64]
     da8:	ldr	x0, [sp, #72]
     dac:	sub	x0, x1, x0
     db0:	mov	x2, x0
     db4:	mov	w1, #0x0                   	// #0
     db8:	mov	x0, x3
     dbc:	bl	0 <memset>
     dc0:	ldr	x0, [sp, #80]
     dc4:	ldr	w1, [sp, #36]
     dc8:	str	w1, [x0, #20]
     dcc:	ldr	x0, [sp, #80]
     dd0:	ldr	w1, [sp, #32]
     dd4:	str	w1, [x0, #24]
     dd8:	mov	x0, #0x0                   	// #0
     ddc:	ldp	x29, x30, [sp], #96
     de0:	ret

0000000000000de4 <ext2fs_compare_generic_bitmap>:
     de4:	stp	x29, x30, [sp, #-96]!
     de8:	mov	x29, sp
     dec:	str	x19, [sp, #16]
     df0:	str	x0, [sp, #56]
     df4:	str	x1, [sp, #48]
     df8:	str	x2, [sp, #40]
     dfc:	str	x3, [sp, #32]
     e00:	ldr	x0, [sp, #40]
     e04:	str	x0, [sp, #80]
     e08:	ldr	x0, [sp, #32]
     e0c:	str	x0, [sp, #72]
     e10:	ldr	x0, [sp, #80]
     e14:	cmp	x0, #0x0
     e18:	b.eq	e30 <ext2fs_compare_generic_bitmap+0x4c>  // b.none
     e1c:	ldr	x0, [sp, #80]
     e20:	ldr	x0, [x0]
     e24:	ldr	x1, [sp, #56]
     e28:	cmp	x1, x0
     e2c:	b.eq	e38 <ext2fs_compare_generic_bitmap+0x54>  // b.none
     e30:	ldr	x0, [sp, #56]
     e34:	b	f58 <ext2fs_compare_generic_bitmap+0x174>
     e38:	ldr	x0, [sp, #72]
     e3c:	cmp	x0, #0x0
     e40:	b.eq	e58 <ext2fs_compare_generic_bitmap+0x74>  // b.none
     e44:	ldr	x0, [sp, #72]
     e48:	ldr	x0, [x0]
     e4c:	ldr	x1, [sp, #56]
     e50:	cmp	x1, x0
     e54:	b.eq	e60 <ext2fs_compare_generic_bitmap+0x7c>  // b.none
     e58:	ldr	x0, [sp, #56]
     e5c:	b	f58 <ext2fs_compare_generic_bitmap+0x174>
     e60:	ldr	x0, [sp, #80]
     e64:	ldr	w1, [x0, #16]
     e68:	ldr	x0, [sp, #72]
     e6c:	ldr	w0, [x0, #16]
     e70:	cmp	w1, w0
     e74:	b.ne	ed4 <ext2fs_compare_generic_bitmap+0xf0>  // b.any
     e78:	ldr	x0, [sp, #80]
     e7c:	ldr	w1, [x0, #20]
     e80:	ldr	x0, [sp, #72]
     e84:	ldr	w0, [x0, #20]
     e88:	cmp	w1, w0
     e8c:	b.ne	ed4 <ext2fs_compare_generic_bitmap+0xf0>  // b.any
     e90:	ldr	x0, [sp, #80]
     e94:	ldr	x3, [x0, #40]
     e98:	ldr	x0, [sp, #72]
     e9c:	ldr	x4, [x0, #40]
     ea0:	ldr	x0, [sp, #80]
     ea4:	ldr	w1, [x0, #20]
     ea8:	ldr	x0, [sp, #80]
     eac:	ldr	w0, [x0, #16]
     eb0:	sub	w0, w1, w0
     eb4:	lsr	w0, w0, #3
     eb8:	mov	w0, w0
     ebc:	mov	x2, x0
     ec0:	mov	x1, x4
     ec4:	mov	x0, x3
     ec8:	bl	0 <memcmp>
     ecc:	cmp	w0, #0x0
     ed0:	b.eq	edc <ext2fs_compare_generic_bitmap+0xf8>  // b.none
     ed4:	ldr	x0, [sp, #48]
     ed8:	b	f58 <ext2fs_compare_generic_bitmap+0x174>
     edc:	ldr	x0, [sp, #80]
     ee0:	ldr	w1, [x0, #20]
     ee4:	ldr	x0, [sp, #80]
     ee8:	ldr	w2, [x0, #20]
     eec:	ldr	x0, [sp, #80]
     ef0:	ldr	w0, [x0, #16]
     ef4:	sub	w0, w2, w0
     ef8:	and	w0, w0, #0x7
     efc:	sub	w0, w1, w0
     f00:	str	w0, [sp, #92]
     f04:	b	f40 <ext2fs_compare_generic_bitmap+0x15c>
     f08:	ldr	w1, [sp, #92]
     f0c:	ldr	x0, [sp, #40]
     f10:	bl	0 <ext2fs_fast_test_block_bitmap>
     f14:	mov	w19, w0
     f18:	ldr	w1, [sp, #92]
     f1c:	ldr	x0, [sp, #32]
     f20:	bl	0 <ext2fs_fast_test_block_bitmap>
     f24:	cmp	w19, w0
     f28:	b.eq	f34 <ext2fs_compare_generic_bitmap+0x150>  // b.none
     f2c:	ldr	x0, [sp, #48]
     f30:	b	f58 <ext2fs_compare_generic_bitmap+0x174>
     f34:	ldr	w0, [sp, #92]
     f38:	add	w0, w0, #0x1
     f3c:	str	w0, [sp, #92]
     f40:	ldr	x0, [sp, #80]
     f44:	ldr	w0, [x0, #20]
     f48:	ldr	w1, [sp, #92]
     f4c:	cmp	w1, w0
     f50:	b.ls	f08 <ext2fs_compare_generic_bitmap+0x124>  // b.plast
     f54:	mov	x0, #0x0                   	// #0
     f58:	ldr	x19, [sp, #16]
     f5c:	ldp	x29, x30, [sp], #96
     f60:	ret

0000000000000f64 <ext2fs_set_generic_bitmap_padding>:
     f64:	stp	x29, x30, [sp, #-48]!
     f68:	mov	x29, sp
     f6c:	str	x0, [sp, #24]
     f70:	ldr	x0, [sp, #24]
     f74:	str	x0, [sp, #32]
     f78:	ldr	x0, [sp, #32]
     f7c:	ldr	w0, [x0, #20]
     f80:	add	w0, w0, #0x1
     f84:	str	w0, [sp, #44]
     f88:	ldr	x0, [sp, #32]
     f8c:	ldr	w0, [x0, #16]
     f90:	ldr	w1, [sp, #44]
     f94:	sub	w0, w1, w0
     f98:	str	w0, [sp, #40]
     f9c:	b	fcc <ext2fs_set_generic_bitmap_padding+0x68>
     fa0:	ldr	x0, [sp, #32]
     fa4:	ldr	x0, [x0, #40]
     fa8:	mov	x1, x0
     fac:	ldr	w0, [sp, #40]
     fb0:	bl	0 <ext2fs_set_bit>
     fb4:	ldr	w0, [sp, #44]
     fb8:	add	w0, w0, #0x1
     fbc:	str	w0, [sp, #44]
     fc0:	ldr	w0, [sp, #40]
     fc4:	add	w0, w0, #0x1
     fc8:	str	w0, [sp, #40]
     fcc:	ldr	x0, [sp, #32]
     fd0:	ldr	w0, [x0, #24]
     fd4:	ldr	w1, [sp, #44]
     fd8:	cmp	w1, w0
     fdc:	b.hi	ff4 <ext2fs_set_generic_bitmap_padding+0x90>  // b.pmore
     fe0:	ldr	x0, [sp, #32]
     fe4:	ldr	w0, [x0, #20]
     fe8:	ldr	w1, [sp, #44]
     fec:	cmp	w1, w0
     ff0:	b.hi	fa0 <ext2fs_set_generic_bitmap_padding+0x3c>  // b.pmore
     ff4:	nop
     ff8:	ldp	x29, x30, [sp], #48
     ffc:	ret

0000000000001000 <ext2fs_get_generic_bitmap_range>:
    1000:	stp	x29, x30, [sp, #-64]!
    1004:	mov	x29, sp
    1008:	str	x0, [sp, #40]
    100c:	str	x1, [sp, #32]
    1010:	str	w2, [sp, #28]
    1014:	str	w3, [sp, #24]
    1018:	str	x4, [sp, #16]
    101c:	ldr	x0, [sp, #40]
    1020:	str	x0, [sp, #56]
    1024:	ldr	x0, [sp, #56]
    1028:	cmp	x0, #0x0
    102c:	b.eq	1044 <ext2fs_get_generic_bitmap_range+0x44>  // b.none
    1030:	ldr	x0, [sp, #56]
    1034:	ldr	x0, [x0]
    1038:	ldr	x1, [sp, #32]
    103c:	cmp	x1, x0
    1040:	b.eq	104c <ext2fs_get_generic_bitmap_range+0x4c>  // b.none
    1044:	ldr	x0, [sp, #32]
    1048:	b	10c4 <ext2fs_get_generic_bitmap_range+0xc4>
    104c:	ldr	x0, [sp, #56]
    1050:	ldr	w0, [x0, #16]
    1054:	ldr	w1, [sp, #28]
    1058:	cmp	w1, w0
    105c:	b.cc	1080 <ext2fs_get_generic_bitmap_range+0x80>  // b.lo, b.ul, b.last
    1060:	ldr	w1, [sp, #28]
    1064:	ldr	w0, [sp, #24]
    1068:	add	w0, w1, w0
    106c:	sub	w1, w0, #0x1
    1070:	ldr	x0, [sp, #56]
    1074:	ldr	w0, [x0, #24]
    1078:	cmp	w1, w0
    107c:	b.ls	108c <ext2fs_get_generic_bitmap_range+0x8c>  // b.plast
    1080:	mov	x0, #0xb747                	// #46919
    1084:	movk	x0, #0x7f2b, lsl #16
    1088:	b	10c4 <ext2fs_get_generic_bitmap_range+0xc4>
    108c:	ldr	x0, [sp, #56]
    1090:	ldr	x1, [x0, #40]
    1094:	ldr	w0, [sp, #28]
    1098:	lsr	w0, w0, #3
    109c:	mov	w0, w0
    10a0:	add	x1, x1, x0
    10a4:	ldr	w0, [sp, #24]
    10a8:	add	w0, w0, #0x7
    10ac:	lsr	w0, w0, #3
    10b0:	mov	w0, w0
    10b4:	mov	x2, x0
    10b8:	ldr	x0, [sp, #16]
    10bc:	bl	0 <memcpy>
    10c0:	mov	x0, #0x0                   	// #0
    10c4:	ldp	x29, x30, [sp], #64
    10c8:	ret

00000000000010cc <ext2fs_set_generic_bitmap_range>:
    10cc:	stp	x29, x30, [sp, #-64]!
    10d0:	mov	x29, sp
    10d4:	str	x0, [sp, #40]
    10d8:	str	x1, [sp, #32]
    10dc:	str	w2, [sp, #28]
    10e0:	str	w3, [sp, #24]
    10e4:	str	x4, [sp, #16]
    10e8:	ldr	x0, [sp, #40]
    10ec:	str	x0, [sp, #56]
    10f0:	ldr	x0, [sp, #56]
    10f4:	cmp	x0, #0x0
    10f8:	b.eq	1110 <ext2fs_set_generic_bitmap_range+0x44>  // b.none
    10fc:	ldr	x0, [sp, #56]
    1100:	ldr	x0, [x0]
    1104:	ldr	x1, [sp, #32]
    1108:	cmp	x1, x0
    110c:	b.eq	1118 <ext2fs_set_generic_bitmap_range+0x4c>  // b.none
    1110:	ldr	x0, [sp, #32]
    1114:	b	1194 <ext2fs_set_generic_bitmap_range+0xc8>
    1118:	ldr	x0, [sp, #56]
    111c:	ldr	w0, [x0, #16]
    1120:	ldr	w1, [sp, #28]
    1124:	cmp	w1, w0
    1128:	b.cc	114c <ext2fs_set_generic_bitmap_range+0x80>  // b.lo, b.ul, b.last
    112c:	ldr	w1, [sp, #28]
    1130:	ldr	w0, [sp, #24]
    1134:	add	w0, w1, w0
    1138:	sub	w1, w0, #0x1
    113c:	ldr	x0, [sp, #56]
    1140:	ldr	w0, [x0, #24]
    1144:	cmp	w1, w0
    1148:	b.ls	1158 <ext2fs_set_generic_bitmap_range+0x8c>  // b.plast
    114c:	mov	x0, #0xb747                	// #46919
    1150:	movk	x0, #0x7f2b, lsl #16
    1154:	b	1194 <ext2fs_set_generic_bitmap_range+0xc8>
    1158:	ldr	x0, [sp, #56]
    115c:	ldr	x1, [x0, #40]
    1160:	ldr	w0, [sp, #28]
    1164:	lsr	w0, w0, #3
    1168:	mov	w0, w0
    116c:	add	x3, x1, x0
    1170:	ldr	w0, [sp, #24]
    1174:	add	w0, w0, #0x7
    1178:	lsr	w0, w0, #3
    117c:	mov	w0, w0
    1180:	mov	x2, x0
    1184:	ldr	x1, [sp, #16]
    1188:	mov	x0, x3
    118c:	bl	0 <memcpy>
    1190:	mov	x0, #0x0                   	// #0
    1194:	ldp	x29, x30, [sp], #64
    1198:	ret

000000000000119c <ext2fs_mem_is_zero>:
    119c:	stp	x29, x30, [sp, #-32]!
    11a0:	mov	x29, sp
    11a4:	str	x0, [sp, #24]
    11a8:	str	x1, [sp, #16]
    11ac:	b	11ec <ext2fs_mem_is_zero+0x50>
    11b0:	mov	x2, #0x100                 	// #256
    11b4:	adrp	x0, 0 <ext2fs_warn_bitmap2>
    11b8:	add	x1, x0, #0x0
    11bc:	ldr	x0, [sp, #24]
    11c0:	bl	0 <memcmp>
    11c4:	cmp	w0, #0x0
    11c8:	b.eq	11d4 <ext2fs_mem_is_zero+0x38>  // b.none
    11cc:	mov	w0, #0x0                   	// #0
    11d0:	b	122c <ext2fs_mem_is_zero+0x90>
    11d4:	ldr	x0, [sp, #16]
    11d8:	sub	x0, x0, #0x100
    11dc:	str	x0, [sp, #16]
    11e0:	ldr	x0, [sp, #24]
    11e4:	add	x0, x0, #0x100
    11e8:	str	x0, [sp, #24]
    11ec:	ldr	x0, [sp, #16]
    11f0:	cmp	x0, #0xff
    11f4:	b.hi	11b0 <ext2fs_mem_is_zero+0x14>  // b.pmore
    11f8:	ldr	x0, [sp, #16]
    11fc:	cmp	x0, #0x0
    1200:	b.eq	1228 <ext2fs_mem_is_zero+0x8c>  // b.none
    1204:	ldr	x2, [sp, #16]
    1208:	adrp	x0, 0 <ext2fs_warn_bitmap2>
    120c:	add	x1, x0, #0x0
    1210:	ldr	x0, [sp, #24]
    1214:	bl	0 <memcmp>
    1218:	cmp	w0, #0x0
    121c:	cset	w0, eq  // eq = none
    1220:	and	w0, w0, #0xff
    1224:	b	122c <ext2fs_mem_is_zero+0x90>
    1228:	mov	w0, #0x1                   	// #1
    122c:	ldp	x29, x30, [sp], #32
    1230:	ret

0000000000001234 <ext2fs_test_clear_generic_bitmap_range>:
    1234:	stp	x29, x30, [sp, #-96]!
    1238:	mov	x29, sp
    123c:	str	x0, [sp, #24]
    1240:	str	w1, [sp, #20]
    1244:	str	w2, [sp, #16]
    1248:	ldr	x0, [sp, #24]
    124c:	str	x0, [sp, #48]
    1250:	ldr	w0, [sp, #16]
    1254:	lsr	w0, w0, #3
    1258:	mov	w0, w0
    125c:	str	x0, [sp, #80]
    1260:	ldr	w0, [sp, #16]
    1264:	and	w0, w0, #0x7
    1268:	str	w0, [sp, #76]
    126c:	str	wzr, [sp, #72]
    1270:	str	wzr, [sp, #68]
    1274:	str	wzr, [sp, #64]
    1278:	str	wzr, [sp, #60]
    127c:	ldr	x0, [sp, #48]
    1280:	ldr	x0, [x0, #40]
    1284:	str	x0, [sp, #40]
    1288:	ldr	x0, [sp, #48]
    128c:	ldr	w0, [x0, #16]
    1290:	ldr	w1, [sp, #20]
    1294:	sub	w0, w1, w0
    1298:	str	w0, [sp, #20]
    129c:	ldr	w0, [sp, #20]
    12a0:	lsr	w0, w0, #3
    12a4:	mov	w0, w0
    12a8:	str	x0, [sp, #88]
    12ac:	ldr	w0, [sp, #20]
    12b0:	and	w0, w0, #0x7
    12b4:	str	w0, [sp, #36]
    12b8:	ldr	w0, [sp, #36]
    12bc:	cmp	w0, #0x0
    12c0:	b.eq	13e0 <ext2fs_test_clear_generic_bitmap_range+0x1ac>  // b.none
    12c4:	mov	w1, #0x8                   	// #8
    12c8:	ldr	w0, [sp, #36]
    12cc:	sub	w0, w1, w0
    12d0:	str	w0, [sp, #64]
    12d4:	mov	w1, #0x8                   	// #8
    12d8:	ldr	w0, [sp, #36]
    12dc:	sub	w0, w1, w0
    12e0:	ldr	w1, [sp, #16]
    12e4:	cmp	w1, w0
    12e8:	b.cs	130c <ext2fs_test_clear_generic_bitmap_range+0xd8>  // b.hs, b.nlast
    12ec:	ldr	w0, [sp, #16]
    12f0:	str	w0, [sp, #64]
    12f4:	ldr	w1, [sp, #16]
    12f8:	ldr	w0, [sp, #36]
    12fc:	add	w0, w1, w0
    1300:	sub	w0, w0, #0x1
    1304:	str	w0, [sp, #60]
    1308:	b	1314 <ext2fs_test_clear_generic_bitmap_range+0xe0>
    130c:	mov	w0, #0x7                   	// #7
    1310:	str	w0, [sp, #60]
    1314:	ldr	w0, [sp, #64]
    1318:	str	w0, [sp, #56]
    131c:	b	1350 <ext2fs_test_clear_generic_bitmap_range+0x11c>
    1320:	ldr	w0, [sp, #60]
    1324:	mov	w1, #0x1                   	// #1
    1328:	lsl	w0, w1, w0
    132c:	ldr	w1, [sp, #72]
    1330:	orr	w0, w1, w0
    1334:	str	w0, [sp, #72]
    1338:	ldr	w0, [sp, #56]
    133c:	sub	w0, w0, #0x1
    1340:	str	w0, [sp, #56]
    1344:	ldr	w0, [sp, #60]
    1348:	sub	w0, w0, #0x1
    134c:	str	w0, [sp, #60]
    1350:	ldr	w0, [sp, #56]
    1354:	cmp	w0, #0x0
    1358:	b.gt	1320 <ext2fs_test_clear_generic_bitmap_range+0xec>
    135c:	ldr	x1, [sp, #40]
    1360:	ldr	x0, [sp, #88]
    1364:	add	x0, x1, x0
    1368:	ldrb	w0, [x0]
    136c:	mov	w1, w0
    1370:	ldr	w0, [sp, #72]
    1374:	and	w0, w1, w0
    1378:	cmp	w0, #0x0
    137c:	b.eq	1388 <ext2fs_test_clear_generic_bitmap_range+0x154>  // b.none
    1380:	mov	w0, #0x0                   	// #0
    1384:	b	1488 <ext2fs_test_clear_generic_bitmap_range+0x254>
    1388:	mov	w1, #0x8                   	// #8
    138c:	ldr	w0, [sp, #36]
    1390:	sub	w0, w1, w0
    1394:	ldr	w1, [sp, #16]
    1398:	cmp	w1, w0
    139c:	b.hi	13a8 <ext2fs_test_clear_generic_bitmap_range+0x174>  // b.pmore
    13a0:	mov	w0, #0x1                   	// #1
    13a4:	b	1488 <ext2fs_test_clear_generic_bitmap_range+0x254>
    13a8:	ldr	x0, [sp, #88]
    13ac:	add	x0, x0, #0x1
    13b0:	str	x0, [sp, #88]
    13b4:	ldr	w0, [sp, #64]
    13b8:	ldr	w1, [sp, #16]
    13bc:	sub	w0, w1, w0
    13c0:	and	w0, w0, #0x7
    13c4:	str	w0, [sp, #76]
    13c8:	ldr	w0, [sp, #64]
    13cc:	ldr	w1, [sp, #16]
    13d0:	sub	w0, w1, w0
    13d4:	lsr	w0, w0, #3
    13d8:	mov	w0, w0
    13dc:	str	x0, [sp, #80]
    13e0:	ldr	w0, [sp, #76]
    13e4:	cmp	w0, #0x0
    13e8:	b.eq	1474 <ext2fs_test_clear_generic_bitmap_range+0x240>  // b.none
    13ec:	ldr	w0, [sp, #76]
    13f0:	sub	w0, w0, #0x1
    13f4:	str	w0, [sp, #60]
    13f8:	b	1420 <ext2fs_test_clear_generic_bitmap_range+0x1ec>
    13fc:	ldr	w0, [sp, #60]
    1400:	mov	w1, #0x1                   	// #1
    1404:	lsl	w0, w1, w0
    1408:	ldr	w1, [sp, #68]
    140c:	orr	w0, w1, w0
    1410:	str	w0, [sp, #68]
    1414:	ldr	w0, [sp, #60]
    1418:	sub	w0, w0, #0x1
    141c:	str	w0, [sp, #60]
    1420:	ldr	w0, [sp, #60]
    1424:	cmp	w0, #0x0
    1428:	b.ge	13fc <ext2fs_test_clear_generic_bitmap_range+0x1c8>  // b.tcont
    142c:	ldr	x1, [sp, #88]
    1430:	ldr	x0, [sp, #80]
    1434:	add	x0, x1, x0
    1438:	ldr	x1, [sp, #40]
    143c:	add	x0, x1, x0
    1440:	ldrb	w0, [x0]
    1444:	mov	w1, w0
    1448:	ldr	w0, [sp, #68]
    144c:	and	w0, w1, w0
    1450:	cmp	w0, #0x0
    1454:	b.eq	1460 <ext2fs_test_clear_generic_bitmap_range+0x22c>  // b.none
    1458:	mov	w0, #0x0                   	// #0
    145c:	b	1488 <ext2fs_test_clear_generic_bitmap_range+0x254>
    1460:	ldr	x0, [sp, #80]
    1464:	cmp	x0, #0x0
    1468:	b.ne	1474 <ext2fs_test_clear_generic_bitmap_range+0x240>  // b.any
    146c:	mov	w0, #0x1                   	// #1
    1470:	b	1488 <ext2fs_test_clear_generic_bitmap_range+0x254>
    1474:	ldr	x1, [sp, #40]
    1478:	ldr	x0, [sp, #88]
    147c:	add	x0, x1, x0
    1480:	ldr	x1, [sp, #80]
    1484:	bl	119c <ext2fs_mem_is_zero>
    1488:	ldp	x29, x30, [sp], #96
    148c:	ret

0000000000001490 <ext2fs_find_first_zero_generic_bitmap>:
    1490:	stp	x29, x30, [sp, #-64]!
    1494:	mov	x29, sp
    1498:	str	x0, [sp, #40]
    149c:	str	w1, [sp, #36]
    14a0:	str	w2, [sp, #32]
    14a4:	str	x3, [sp, #24]
    14a8:	ldr	x0, [sp, #40]
    14ac:	str	x0, [sp, #56]
    14b0:	ldr	x0, [sp, #56]
    14b4:	ldr	w0, [x0, #16]
    14b8:	ldr	w1, [sp, #36]
    14bc:	cmp	w1, w0
    14c0:	b.cc	14e8 <ext2fs_find_first_zero_generic_bitmap+0x58>  // b.lo, b.ul, b.last
    14c4:	ldr	x0, [sp, #56]
    14c8:	ldr	w0, [x0, #20]
    14cc:	ldr	w1, [sp, #32]
    14d0:	cmp	w1, w0
    14d4:	b.hi	14e8 <ext2fs_find_first_zero_generic_bitmap+0x58>  // b.pmore
    14d8:	ldr	w1, [sp, #36]
    14dc:	ldr	w0, [sp, #32]
    14e0:	cmp	w1, w0
    14e4:	b.ls	1558 <ext2fs_find_first_zero_generic_bitmap+0xc8>  // b.plast
    14e8:	ldr	w0, [sp, #36]
    14ec:	mov	x2, x0
    14f0:	mov	w1, #0x2                   	// #2
    14f4:	ldr	x0, [sp, #40]
    14f8:	bl	0 <ext2fs_warn_bitmap2>
    14fc:	mov	x0, #0x16                  	// #22
    1500:	b	156c <ext2fs_find_first_zero_generic_bitmap+0xdc>
    1504:	ldr	x0, [sp, #56]
    1508:	ldr	w0, [x0, #16]
    150c:	ldr	w1, [sp, #36]
    1510:	sub	w2, w1, w0
    1514:	ldr	x0, [sp, #56]
    1518:	ldr	x0, [x0, #40]
    151c:	mov	x1, x0
    1520:	mov	w0, w2
    1524:	bl	0 <ext2fs_test_bit>
    1528:	str	w0, [sp, #52]
    152c:	ldr	w0, [sp, #52]
    1530:	cmp	w0, #0x0
    1534:	b.ne	154c <ext2fs_find_first_zero_generic_bitmap+0xbc>  // b.any
    1538:	ldr	x0, [sp, #24]
    153c:	ldr	w1, [sp, #36]
    1540:	str	w1, [x0]
    1544:	mov	x0, #0x0                   	// #0
    1548:	b	156c <ext2fs_find_first_zero_generic_bitmap+0xdc>
    154c:	ldr	w0, [sp, #36]
    1550:	add	w0, w0, #0x1
    1554:	str	w0, [sp, #36]
    1558:	ldr	w1, [sp, #36]
    155c:	ldr	w0, [sp, #32]
    1560:	cmp	w1, w0
    1564:	b.ls	1504 <ext2fs_find_first_zero_generic_bitmap+0x74>  // b.plast
    1568:	mov	x0, #0x2                   	// #2
    156c:	ldp	x29, x30, [sp], #64
    1570:	ret

0000000000001574 <ext2fs_find_first_set_generic_bitmap>:
    1574:	stp	x29, x30, [sp, #-64]!
    1578:	mov	x29, sp
    157c:	str	x0, [sp, #40]
    1580:	str	w1, [sp, #36]
    1584:	str	w2, [sp, #32]
    1588:	str	x3, [sp, #24]
    158c:	ldr	x0, [sp, #40]
    1590:	str	x0, [sp, #56]
    1594:	ldr	x0, [sp, #56]
    1598:	ldr	w0, [x0, #16]
    159c:	ldr	w1, [sp, #36]
    15a0:	cmp	w1, w0
    15a4:	b.cc	15cc <ext2fs_find_first_set_generic_bitmap+0x58>  // b.lo, b.ul, b.last
    15a8:	ldr	x0, [sp, #56]
    15ac:	ldr	w0, [x0, #20]
    15b0:	ldr	w1, [sp, #32]
    15b4:	cmp	w1, w0
    15b8:	b.hi	15cc <ext2fs_find_first_set_generic_bitmap+0x58>  // b.pmore
    15bc:	ldr	w1, [sp, #36]
    15c0:	ldr	w0, [sp, #32]
    15c4:	cmp	w1, w0
    15c8:	b.ls	163c <ext2fs_find_first_set_generic_bitmap+0xc8>  // b.plast
    15cc:	ldr	w0, [sp, #36]
    15d0:	mov	x2, x0
    15d4:	mov	w1, #0x2                   	// #2
    15d8:	ldr	x0, [sp, #40]
    15dc:	bl	0 <ext2fs_warn_bitmap2>
    15e0:	mov	x0, #0x16                  	// #22
    15e4:	b	1650 <ext2fs_find_first_set_generic_bitmap+0xdc>
    15e8:	ldr	x0, [sp, #56]
    15ec:	ldr	w0, [x0, #16]
    15f0:	ldr	w1, [sp, #36]
    15f4:	sub	w2, w1, w0
    15f8:	ldr	x0, [sp, #56]
    15fc:	ldr	x0, [x0, #40]
    1600:	mov	x1, x0
    1604:	mov	w0, w2
    1608:	bl	0 <ext2fs_test_bit>
    160c:	str	w0, [sp, #52]
    1610:	ldr	w0, [sp, #52]
    1614:	cmp	w0, #0x0
    1618:	b.eq	1630 <ext2fs_find_first_set_generic_bitmap+0xbc>  // b.none
    161c:	ldr	x0, [sp, #24]
    1620:	ldr	w1, [sp, #36]
    1624:	str	w1, [x0]
    1628:	mov	x0, #0x0                   	// #0
    162c:	b	1650 <ext2fs_find_first_set_generic_bitmap+0xdc>
    1630:	ldr	w0, [sp, #36]
    1634:	add	w0, w0, #0x1
    1638:	str	w0, [sp, #36]
    163c:	ldr	w1, [sp, #36]
    1640:	ldr	w0, [sp, #32]
    1644:	cmp	w1, w0
    1648:	b.ls	15e8 <ext2fs_find_first_set_generic_bitmap+0x74>  // b.plast
    164c:	mov	x0, #0x2                   	// #2
    1650:	ldp	x29, x30, [sp], #64
    1654:	ret

0000000000001658 <ext2fs_test_block_bitmap_range>:
    1658:	stp	x29, x30, [sp, #-48]!
    165c:	mov	x29, sp
    1660:	str	x0, [sp, #24]
    1664:	str	w1, [sp, #20]
    1668:	str	w2, [sp, #16]
    166c:	ldr	x0, [sp, #24]
    1670:	str	x0, [sp, #40]
    1674:	ldr	x0, [sp, #40]
    1678:	ldr	x1, [x0]
    167c:	mov	x0, #0xb708                	// #46856
    1680:	movk	x0, #0x7f2b, lsl #16
    1684:	cmp	x1, x0
    1688:	b.eq	1698 <ext2fs_test_block_bitmap_range+0x40>  // b.none
    168c:	mov	w0, #0xb708                	// #46856
    1690:	movk	w0, #0x7f2b, lsl #16
    1694:	b	1718 <ext2fs_test_block_bitmap_range+0xc0>
    1698:	ldr	x0, [sp, #40]
    169c:	ldr	w0, [x0, #16]
    16a0:	ldr	w1, [sp, #20]
    16a4:	cmp	w1, w0
    16a8:	b.cc	16e0 <ext2fs_test_block_bitmap_range+0x88>  // b.lo, b.ul, b.last
    16ac:	ldr	x0, [sp, #40]
    16b0:	ldr	w0, [x0, #24]
    16b4:	ldr	w1, [sp, #20]
    16b8:	cmp	w1, w0
    16bc:	b.hi	16e0 <ext2fs_test_block_bitmap_range+0x88>  // b.pmore
    16c0:	ldr	w1, [sp, #16]
    16c4:	ldr	w0, [sp, #20]
    16c8:	add	w0, w1, w0
    16cc:	sub	w1, w0, #0x1
    16d0:	ldr	x0, [sp, #40]
    16d4:	ldr	w0, [x0, #24]
    16d8:	cmp	w1, w0
    16dc:	b.ls	1704 <ext2fs_test_block_bitmap_range+0xac>  // b.plast
    16e0:	ldr	w1, [sp, #20]
    16e4:	ldr	x0, [sp, #40]
    16e8:	ldr	x0, [x0, #32]
    16ec:	mov	x2, x0
    16f0:	mov	x0, #0xb72f                	// #46895
    16f4:	movk	x0, #0x7f2b, lsl #16
    16f8:	bl	0 <ext2fs_warn_bitmap>
    16fc:	mov	w0, #0x0                   	// #0
    1700:	b	1718 <ext2fs_test_block_bitmap_range+0xc0>
    1704:	ldr	w0, [sp, #16]
    1708:	mov	w2, w0
    170c:	ldr	w1, [sp, #20]
    1710:	ldr	x0, [sp, #40]
    1714:	bl	1234 <ext2fs_test_clear_generic_bitmap_range>
    1718:	ldp	x29, x30, [sp], #48
    171c:	ret

0000000000001720 <ext2fs_test_inode_bitmap_range>:
    1720:	stp	x29, x30, [sp, #-48]!
    1724:	mov	x29, sp
    1728:	str	x0, [sp, #24]
    172c:	str	w1, [sp, #20]
    1730:	str	w2, [sp, #16]
    1734:	ldr	x0, [sp, #24]
    1738:	str	x0, [sp, #40]
    173c:	ldr	x0, [sp, #40]
    1740:	ldr	x1, [x0]
    1744:	mov	x0, #0xb709                	// #46857
    1748:	movk	x0, #0x7f2b, lsl #16
    174c:	cmp	x1, x0
    1750:	b.eq	1760 <ext2fs_test_inode_bitmap_range+0x40>  // b.none
    1754:	mov	w0, #0xb709                	// #46857
    1758:	movk	w0, #0x7f2b, lsl #16
    175c:	b	17e0 <ext2fs_test_inode_bitmap_range+0xc0>
    1760:	ldr	x0, [sp, #40]
    1764:	ldr	w0, [x0, #16]
    1768:	ldr	w1, [sp, #20]
    176c:	cmp	w1, w0
    1770:	b.cc	17a8 <ext2fs_test_inode_bitmap_range+0x88>  // b.lo, b.ul, b.last
    1774:	ldr	x0, [sp, #40]
    1778:	ldr	w0, [x0, #24]
    177c:	ldr	w1, [sp, #20]
    1780:	cmp	w1, w0
    1784:	b.hi	17a8 <ext2fs_test_inode_bitmap_range+0x88>  // b.pmore
    1788:	ldr	w1, [sp, #16]
    178c:	ldr	w0, [sp, #20]
    1790:	add	w0, w1, w0
    1794:	sub	w1, w0, #0x1
    1798:	ldr	x0, [sp, #40]
    179c:	ldr	w0, [x0, #24]
    17a0:	cmp	w1, w0
    17a4:	b.ls	17cc <ext2fs_test_inode_bitmap_range+0xac>  // b.plast
    17a8:	ldr	w1, [sp, #20]
    17ac:	ldr	x0, [sp, #40]
    17b0:	ldr	x0, [x0, #32]
    17b4:	mov	x2, x0
    17b8:	mov	x0, #0xb732                	// #46898
    17bc:	movk	x0, #0x7f2b, lsl #16
    17c0:	bl	0 <ext2fs_warn_bitmap>
    17c4:	mov	w0, #0x0                   	// #0
    17c8:	b	17e0 <ext2fs_test_inode_bitmap_range+0xc0>
    17cc:	ldr	w0, [sp, #16]
    17d0:	mov	w2, w0
    17d4:	ldr	w1, [sp, #20]
    17d8:	ldr	x0, [sp, #40]
    17dc:	bl	1234 <ext2fs_test_clear_generic_bitmap_range>
    17e0:	ldp	x29, x30, [sp], #48
    17e4:	ret

00000000000017e8 <ext2fs_mark_block_bitmap_range>:
    17e8:	stp	x29, x30, [sp, #-48]!
    17ec:	mov	x29, sp
    17f0:	str	x0, [sp, #24]
    17f4:	str	w1, [sp, #20]
    17f8:	str	w2, [sp, #16]
    17fc:	ldr	x0, [sp, #24]
    1800:	str	x0, [sp, #32]
    1804:	ldr	x0, [sp, #32]
    1808:	ldr	w0, [x0, #16]
    180c:	ldr	w1, [sp, #20]
    1810:	cmp	w1, w0
    1814:	b.cc	184c <ext2fs_mark_block_bitmap_range+0x64>  // b.lo, b.ul, b.last
    1818:	ldr	x0, [sp, #32]
    181c:	ldr	w0, [x0, #20]
    1820:	ldr	w1, [sp, #20]
    1824:	cmp	w1, w0
    1828:	b.hi	184c <ext2fs_mark_block_bitmap_range+0x64>  // b.pmore
    182c:	ldr	w1, [sp, #16]
    1830:	ldr	w0, [sp, #20]
    1834:	add	w0, w1, w0
    1838:	sub	w1, w0, #0x1
    183c:	ldr	x0, [sp, #32]
    1840:	ldr	w0, [x0, #20]
    1844:	cmp	w1, w0
    1848:	b.ls	186c <ext2fs_mark_block_bitmap_range+0x84>  // b.plast
    184c:	ldr	w1, [sp, #20]
    1850:	ldr	x0, [sp, #32]
    1854:	ldr	x0, [x0, #32]
    1858:	mov	x2, x0
    185c:	mov	x0, #0xb72d                	// #46893
    1860:	movk	x0, #0x7f2b, lsl #16
    1864:	bl	0 <ext2fs_warn_bitmap>
    1868:	b	18bc <ext2fs_mark_block_bitmap_range+0xd4>
    186c:	str	wzr, [sp, #44]
    1870:	b	18ac <ext2fs_mark_block_bitmap_range+0xc4>
    1874:	ldr	w1, [sp, #44]
    1878:	ldr	w0, [sp, #20]
    187c:	add	w1, w1, w0
    1880:	ldr	x0, [sp, #32]
    1884:	ldr	w0, [x0, #16]
    1888:	sub	w2, w1, w0
    188c:	ldr	x0, [sp, #32]
    1890:	ldr	x0, [x0, #40]
    1894:	mov	x1, x0
    1898:	mov	w0, w2
    189c:	bl	0 <ext2fs_fast_set_bit>
    18a0:	ldr	w0, [sp, #44]
    18a4:	add	w0, w0, #0x1
    18a8:	str	w0, [sp, #44]
    18ac:	ldr	w1, [sp, #44]
    18b0:	ldr	w0, [sp, #16]
    18b4:	cmp	w1, w0
    18b8:	b.lt	1874 <ext2fs_mark_block_bitmap_range+0x8c>  // b.tstop
    18bc:	ldp	x29, x30, [sp], #48
    18c0:	ret

00000000000018c4 <ext2fs_unmark_block_bitmap_range>:
    18c4:	stp	x29, x30, [sp, #-48]!
    18c8:	mov	x29, sp
    18cc:	str	x0, [sp, #24]
    18d0:	str	w1, [sp, #20]
    18d4:	str	w2, [sp, #16]
    18d8:	ldr	x0, [sp, #24]
    18dc:	str	x0, [sp, #32]
    18e0:	ldr	x0, [sp, #32]
    18e4:	ldr	w0, [x0, #16]
    18e8:	ldr	w1, [sp, #20]
    18ec:	cmp	w1, w0
    18f0:	b.cc	1928 <ext2fs_unmark_block_bitmap_range+0x64>  // b.lo, b.ul, b.last
    18f4:	ldr	x0, [sp, #32]
    18f8:	ldr	w0, [x0, #20]
    18fc:	ldr	w1, [sp, #20]
    1900:	cmp	w1, w0
    1904:	b.hi	1928 <ext2fs_unmark_block_bitmap_range+0x64>  // b.pmore
    1908:	ldr	w1, [sp, #16]
    190c:	ldr	w0, [sp, #20]
    1910:	add	w0, w1, w0
    1914:	sub	w1, w0, #0x1
    1918:	ldr	x0, [sp, #32]
    191c:	ldr	w0, [x0, #20]
    1920:	cmp	w1, w0
    1924:	b.ls	1948 <ext2fs_unmark_block_bitmap_range+0x84>  // b.plast
    1928:	ldr	w1, [sp, #20]
    192c:	ldr	x0, [sp, #32]
    1930:	ldr	x0, [x0, #32]
    1934:	mov	x2, x0
    1938:	mov	x0, #0xb72e                	// #46894
    193c:	movk	x0, #0x7f2b, lsl #16
    1940:	bl	0 <ext2fs_warn_bitmap>
    1944:	b	1998 <ext2fs_unmark_block_bitmap_range+0xd4>
    1948:	str	wzr, [sp, #44]
    194c:	b	1988 <ext2fs_unmark_block_bitmap_range+0xc4>
    1950:	ldr	w1, [sp, #44]
    1954:	ldr	w0, [sp, #20]
    1958:	add	w1, w1, w0
    195c:	ldr	x0, [sp, #32]
    1960:	ldr	w0, [x0, #16]
    1964:	sub	w2, w1, w0
    1968:	ldr	x0, [sp, #32]
    196c:	ldr	x0, [x0, #40]
    1970:	mov	x1, x0
    1974:	mov	w0, w2
    1978:	bl	0 <ext2fs_fast_clear_bit>
    197c:	ldr	w0, [sp, #44]
    1980:	add	w0, w0, #0x1
    1984:	str	w0, [sp, #44]
    1988:	ldr	w1, [sp, #44]
    198c:	ldr	w0, [sp, #16]
    1990:	cmp	w1, w0
    1994:	b.lt	1950 <ext2fs_unmark_block_bitmap_range+0x8c>  // b.tstop
    1998:	ldp	x29, x30, [sp], #48
    199c:	ret

gen_bitmap64.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <warn_bitmap>:
       0:	stp	x29, x30, [sp, #-48]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #40]
       c:	str	w1, [sp, #36]
      10:	str	x2, [sp, #24]
      14:	ldr	x0, [sp, #40]
      18:	ldr	x0, [x0, #64]
      1c:	cmp	x0, #0x0
      20:	b.eq	58 <warn_bitmap+0x58>  // b.none
      24:	ldr	x0, [sp, #40]
      28:	ldr	x1, [x0, #80]
      2c:	ldrsw	x0, [sp, #36]
      30:	add	x1, x1, x0
      34:	ldr	x0, [sp, #40]
      38:	ldr	x0, [x0, #64]
      3c:	mov	x4, x0
      40:	ldr	x3, [sp, #24]
      44:	adrp	x0, 0 <warn_bitmap>
      48:	add	x2, x0, #0x0
      4c:	mov	x0, #0x0                   	// #0
      50:	bl	0 <com_err>
      54:	b	7c <warn_bitmap+0x7c>
      58:	ldr	x0, [sp, #40]
      5c:	ldr	x1, [x0, #80]
      60:	ldrsw	x0, [sp, #36]
      64:	add	x1, x1, x0
      68:	ldr	x3, [sp, #24]
      6c:	adrp	x0, 0 <warn_bitmap>
      70:	add	x2, x0, #0x0
      74:	mov	x0, #0x0                   	// #0
      78:	bl	0 <com_err>
      7c:	nop
      80:	ldp	x29, x30, [sp], #48
      84:	ret

0000000000000088 <ext2fs_alloc_generic_bmap>:
      88:	stp	x29, x30, [sp, #-112]!
      8c:	mov	x29, sp
      90:	str	x0, [sp, #72]
      94:	str	x1, [sp, #64]
      98:	str	w2, [sp, #60]
      9c:	str	x3, [sp, #48]
      a0:	str	x4, [sp, #40]
      a4:	str	x5, [sp, #32]
      a8:	str	x6, [sp, #24]
      ac:	str	x7, [sp, #16]
      b0:	ldr	w0, [sp, #60]
      b4:	cmp	w0, #0x0
      b8:	b.ne	c4 <ext2fs_alloc_generic_bmap+0x3c>  // b.any
      bc:	mov	w0, #0x1                   	// #1
      c0:	str	w0, [sp, #60]
      c4:	ldr	w0, [sp, #60]
      c8:	cmp	w0, #0x3
      cc:	b.eq	118 <ext2fs_alloc_generic_bmap+0x90>  // b.none
      d0:	ldr	w0, [sp, #60]
      d4:	cmp	w0, #0x3
      d8:	b.gt	184 <ext2fs_alloc_generic_bmap+0xfc>
      dc:	ldr	w0, [sp, #60]
      e0:	cmp	w0, #0x1
      e4:	b.eq	f8 <ext2fs_alloc_generic_bmap+0x70>  // b.none
      e8:	ldr	w0, [sp, #60]
      ec:	cmp	w0, #0x2
      f0:	b.eq	108 <ext2fs_alloc_generic_bmap+0x80>  // b.none
      f4:	b	184 <ext2fs_alloc_generic_bmap+0xfc>
      f8:	adrp	x0, 0 <ext2fs_blkmap64_bitarray>
      fc:	add	x0, x0, #0x0
     100:	str	x0, [sp, #104]
     104:	b	18c <ext2fs_alloc_generic_bmap+0x104>
     108:	adrp	x0, 0 <ext2fs_blkmap64_rbtree>
     10c:	add	x0, x0, #0x0
     110:	str	x0, [sp, #104]
     114:	b	18c <ext2fs_alloc_generic_bmap+0x104>
     118:	add	x0, sp, #0x54
     11c:	mov	x1, x0
     120:	ldr	x0, [sp, #72]
     124:	bl	0 <ext2fs_get_num_dirs>
     128:	str	x0, [sp, #96]
     12c:	ldr	x0, [sp, #96]
     130:	cmp	x0, #0x0
     134:	b.ne	164 <ext2fs_alloc_generic_bmap+0xdc>  // b.any
     138:	ldr	x0, [sp, #72]
     13c:	ldr	x0, [x0, #32]
     140:	ldr	w1, [x0]
     144:	mov	w0, #0xcccd                	// #52429
     148:	movk	w0, #0xcccc, lsl #16
     14c:	umull	x0, w1, w0
     150:	lsr	x0, x0, #32
     154:	lsr	w1, w0, #8
     158:	ldr	w0, [sp, #84]
     15c:	cmp	w1, w0
     160:	b.cs	174 <ext2fs_alloc_generic_bmap+0xec>  // b.hs, b.nlast
     164:	adrp	x0, 0 <ext2fs_blkmap64_bitarray>
     168:	add	x0, x0, #0x0
     16c:	str	x0, [sp, #104]
     170:	b	18c <ext2fs_alloc_generic_bmap+0x104>
     174:	adrp	x0, 0 <ext2fs_blkmap64_rbtree>
     178:	add	x0, x0, #0x0
     17c:	str	x0, [sp, #104]
     180:	b	18c <ext2fs_alloc_generic_bmap+0x104>
     184:	mov	x0, #0x16                  	// #22
     188:	b	374 <ext2fs_alloc_generic_bmap+0x2ec>
     18c:	add	x0, sp, #0x58
     190:	mov	x1, x0
     194:	mov	x0, #0x70                  	// #112
     198:	bl	0 <ext2fs_get_memzero>
     19c:	str	x0, [sp, #96]
     1a0:	ldr	x0, [sp, #96]
     1a4:	cmp	x0, #0x0
     1a8:	b.eq	1b4 <ext2fs_alloc_generic_bmap+0x12c>  // b.none
     1ac:	ldr	x0, [sp, #96]
     1b0:	b	374 <ext2fs_alloc_generic_bmap+0x2ec>
     1b4:	ldr	x0, [sp, #88]
     1b8:	add	x0, x0, #0x60
     1bc:	mov	x1, #0x0                   	// #0
     1c0:	bl	0 <gettimeofday>
     1c4:	cmn	w0, #0x1
     1c8:	b.ne	1e8 <ext2fs_alloc_generic_bmap+0x160>  // b.any
     1cc:	adrp	x0, 0 <warn_bitmap>
     1d0:	add	x0, x0, #0x0
     1d4:	bl	0 <perror>
     1d8:	add	x0, sp, #0x58
     1dc:	bl	0 <ext2fs_free_mem>
     1e0:	mov	x0, #0x1                   	// #1
     1e4:	b	374 <ext2fs_alloc_generic_bmap+0x2ec>
     1e8:	ldr	x0, [sp, #88]
     1ec:	ldr	w1, [sp, #60]
     1f0:	str	w1, [x0, #88]
     1f4:	ldr	x0, [sp, #88]
     1f8:	ldr	x1, [sp, #64]
     1fc:	str	x1, [x0]
     200:	ldr	x0, [sp, #88]
     204:	ldr	x1, [sp, #72]
     208:	str	x1, [x0, #8]
     20c:	ldr	x0, [sp, #88]
     210:	ldr	x1, [sp, #48]
     214:	str	x1, [x0, #32]
     218:	ldr	x0, [sp, #88]
     21c:	ldr	x1, [sp, #40]
     220:	str	x1, [x0, #40]
     224:	ldr	x0, [sp, #88]
     228:	ldr	x1, [sp, #32]
     22c:	str	x1, [x0, #48]
     230:	ldr	x0, [sp, #88]
     234:	ldr	x1, [sp, #104]
     238:	str	x1, [x0, #16]
     23c:	ldr	x0, [sp, #88]
     240:	str	wzr, [x0, #56]
     244:	ldr	x1, [sp, #64]
     248:	mov	x0, #0xb76e                	// #46958
     24c:	movk	x0, #0x7f2b, lsl #16
     250:	cmp	x1, x0
     254:	b.eq	280 <ext2fs_alloc_generic_bmap+0x1f8>  // b.none
     258:	ldr	x1, [sp, #64]
     25c:	mov	x0, #0xb76f                	// #46959
     260:	movk	x0, #0x7f2b, lsl #16
     264:	cmp	x1, x0
     268:	b.ne	2a4 <ext2fs_alloc_generic_bmap+0x21c>  // b.any
     26c:	ldr	x0, [sp, #88]
     270:	mov	x1, #0xb730                	// #46896
     274:	movk	x1, #0x7f2b, lsl #16
     278:	str	x1, [x0, #80]
     27c:	b	2b4 <ext2fs_alloc_generic_bmap+0x22c>
     280:	ldr	x0, [sp, #88]
     284:	mov	x1, #0xb72d                	// #46893
     288:	movk	x1, #0x7f2b, lsl #16
     28c:	str	x1, [x0, #80]
     290:	ldr	x0, [sp, #88]
     294:	ldr	x1, [sp, #72]
     298:	ldr	w1, [x1, #192]
     29c:	str	w1, [x0, #56]
     2a0:	b	2b4 <ext2fs_alloc_generic_bmap+0x22c>
     2a4:	ldr	x0, [sp, #88]
     2a8:	mov	x1, #0xb73d                	// #46909
     2ac:	movk	x1, #0x7f2b, lsl #16
     2b0:	str	x1, [x0, #80]
     2b4:	ldr	x0, [sp, #24]
     2b8:	cmp	x0, #0x0
     2bc:	b.eq	314 <ext2fs_alloc_generic_bmap+0x28c>  // b.none
     2c0:	ldr	x0, [sp, #24]
     2c4:	bl	0 <strlen>
     2c8:	add	x2, x0, #0x1
     2cc:	ldr	x0, [sp, #88]
     2d0:	add	x0, x0, #0x40
     2d4:	mov	x1, x0
     2d8:	mov	x0, x2
     2dc:	bl	0 <ext2fs_get_mem>
     2e0:	str	x0, [sp, #96]
     2e4:	ldr	x0, [sp, #96]
     2e8:	cmp	x0, #0x0
     2ec:	b.eq	300 <ext2fs_alloc_generic_bmap+0x278>  // b.none
     2f0:	add	x0, sp, #0x58
     2f4:	bl	0 <ext2fs_free_mem>
     2f8:	ldr	x0, [sp, #96]
     2fc:	b	374 <ext2fs_alloc_generic_bmap+0x2ec>
     300:	ldr	x0, [sp, #88]
     304:	ldr	x0, [x0, #64]
     308:	ldr	x1, [sp, #24]
     30c:	bl	0 <strcpy>
     310:	b	31c <ext2fs_alloc_generic_bmap+0x294>
     314:	ldr	x0, [sp, #88]
     318:	str	xzr, [x0, #64]
     31c:	ldr	x0, [sp, #88]
     320:	ldr	x0, [x0, #16]
     324:	ldr	x2, [x0, #8]
     328:	ldr	x0, [sp, #88]
     32c:	mov	x1, x0
     330:	ldr	x0, [sp, #72]
     334:	blr	x2
     338:	str	x0, [sp, #96]
     33c:	ldr	x0, [sp, #96]
     340:	cmp	x0, #0x0
     344:	b.eq	364 <ext2fs_alloc_generic_bmap+0x2dc>  // b.none
     348:	ldr	x0, [sp, #88]
     34c:	add	x0, x0, #0x40
     350:	bl	0 <ext2fs_free_mem>
     354:	add	x0, sp, #0x58
     358:	bl	0 <ext2fs_free_mem>
     35c:	ldr	x0, [sp, #96]
     360:	b	374 <ext2fs_alloc_generic_bmap+0x2ec>
     364:	ldr	x1, [sp, #88]
     368:	ldr	x0, [sp, #16]
     36c:	str	x1, [x0]
     370:	mov	x0, #0x0                   	// #0
     374:	ldp	x29, x30, [sp], #112
     378:	ret

000000000000037c <ext2fs_print_bmap_statistics>:
     37c:	stp	x29, x30, [sp, #-64]!
     380:	mov	x29, sp
     384:	str	x0, [sp, #24]
     388:	ldr	x0, [sp, #24]
     38c:	add	x0, x0, #0x58
     390:	str	x0, [sp, #56]
     394:	add	x0, sp, #0x20
     398:	mov	x1, #0x0                   	// #0
     39c:	bl	0 <gettimeofday>
     3a0:	cmn	w0, #0x1
     3a4:	b.ne	3b8 <ext2fs_print_bmap_statistics+0x3c>  // b.any
     3a8:	adrp	x0, 0 <warn_bitmap>
     3ac:	add	x0, x0, #0x0
     3b0:	bl	0 <perror>
     3b4:	b	468 <ext2fs_print_bmap_statistics+0xec>
     3b8:	ldr	d0, [sp, #32]
     3bc:	scvtf	d1, d0
     3c0:	ldr	d0, [sp, #40]
     3c4:	scvtf	d0, d0
     3c8:	adrp	x0, 0 <warn_bitmap>
     3cc:	ldr	d2, [x0]
     3d0:	fmul	d0, d0, d2
     3d4:	fadd	d0, d1, d0
     3d8:	str	d0, [sp, #48]
     3dc:	ldr	x0, [sp, #56]
     3e0:	ldr	d0, [x0, #8]
     3e4:	scvtf	d1, d0
     3e8:	ldr	x0, [sp, #56]
     3ec:	ldr	d0, [x0, #16]
     3f0:	scvtf	d0, d0
     3f4:	adrp	x0, 0 <warn_bitmap>
     3f8:	ldr	d2, [x0]
     3fc:	fmul	d0, d0, d2
     400:	fadd	d0, d1, d0
     404:	ldr	d1, [sp, #48]
     408:	fsub	d0, d1, d0
     40c:	str	d0, [sp, #48]
     410:	adrp	x0, 0 <stderr>
     414:	add	x0, x0, #0x0
     418:	ldr	x4, [x0]
     41c:	ldr	x0, [sp, #24]
     420:	ldr	x1, [x0, #64]
     424:	ldr	x0, [sp, #56]
     428:	ldr	w0, [x0]
     42c:	mov	w3, w0
     430:	mov	x2, x1
     434:	adrp	x0, 0 <warn_bitmap>
     438:	add	x1, x0, #0x0
     43c:	mov	x0, x4
     440:	bl	0 <fprintf>
     444:	adrp	x0, 0 <stderr>
     448:	add	x0, x0, #0x0
     44c:	ldr	x0, [x0]
     450:	mov	x3, x0
     454:	mov	x2, #0x32                  	// #50
     458:	mov	x1, #0x1                   	// #1
     45c:	adrp	x0, 0 <warn_bitmap>
     460:	add	x0, x0, #0x0
     464:	bl	0 <fwrite>
     468:	ldp	x29, x30, [sp], #64
     46c:	ret

0000000000000470 <ext2fs_free_generic_bmap>:
     470:	stp	x29, x30, [sp, #-48]!
     474:	mov	x29, sp
     478:	str	x0, [sp, #24]
     47c:	ldr	x0, [sp, #24]
     480:	str	x0, [sp, #40]
     484:	ldr	x0, [sp, #40]
     488:	cmp	x0, #0x0
     48c:	b.eq	5a8 <ext2fs_free_generic_bmap+0x138>  // b.none
     490:	ldr	x0, [sp, #40]
     494:	ldr	x1, [x0]
     498:	mov	x0, #0xb70a                	// #46858
     49c:	movk	x0, #0x7f2b, lsl #16
     4a0:	cmp	x1, x0
     4a4:	b.eq	4d8 <ext2fs_free_generic_bmap+0x68>  // b.none
     4a8:	ldr	x0, [sp, #40]
     4ac:	ldr	x1, [x0]
     4b0:	mov	x0, #0xb708                	// #46856
     4b4:	movk	x0, #0x7f2b, lsl #16
     4b8:	cmp	x1, x0
     4bc:	b.eq	4d8 <ext2fs_free_generic_bmap+0x68>  // b.none
     4c0:	ldr	x0, [sp, #40]
     4c4:	ldr	x1, [x0]
     4c8:	mov	x0, #0xb709                	// #46857
     4cc:	movk	x0, #0x7f2b, lsl #16
     4d0:	cmp	x1, x0
     4d4:	b.ne	4e4 <ext2fs_free_generic_bmap+0x74>  // b.any
     4d8:	ldr	x0, [sp, #24]
     4dc:	bl	0 <ext2fs_free_generic_bitmap>
     4e0:	b	5b4 <ext2fs_free_generic_bmap+0x144>
     4e4:	ldr	x0, [sp, #40]
     4e8:	ldr	x1, [x0]
     4ec:	mov	x0, #0xb76d                	// #46957
     4f0:	movk	x0, #0x7f2b, lsl #16
     4f4:	cmp	x1, x0
     4f8:	b.eq	52c <ext2fs_free_generic_bmap+0xbc>  // b.none
     4fc:	ldr	x0, [sp, #40]
     500:	ldr	x1, [x0]
     504:	mov	x0, #0xb76e                	// #46958
     508:	movk	x0, #0x7f2b, lsl #16
     50c:	cmp	x1, x0
     510:	b.eq	52c <ext2fs_free_generic_bmap+0xbc>  // b.none
     514:	ldr	x0, [sp, #40]
     518:	ldr	x1, [x0]
     51c:	mov	x0, #0xb76f                	// #46959
     520:	movk	x0, #0x7f2b, lsl #16
     524:	cmp	x1, x0
     528:	b.ne	5b0 <ext2fs_free_generic_bmap+0x140>  // b.any
     52c:	adrp	x0, 0 <warn_bitmap>
     530:	add	x0, x0, #0x0
     534:	bl	0 <getenv>
     538:	cmp	x0, #0x0
     53c:	b.eq	55c <ext2fs_free_generic_bmap+0xec>  // b.none
     540:	ldr	x0, [sp, #40]
     544:	bl	37c <ext2fs_print_bmap_statistics>
     548:	ldr	x0, [sp, #40]
     54c:	ldr	x0, [x0, #16]
     550:	ldr	x1, [x0, #112]
     554:	ldr	x0, [sp, #40]
     558:	blr	x1
     55c:	ldr	x0, [sp, #40]
     560:	ldr	x0, [x0, #16]
     564:	ldr	x1, [x0, #16]
     568:	ldr	x0, [sp, #40]
     56c:	blr	x1
     570:	ldr	x0, [sp, #40]
     574:	ldr	x0, [x0, #64]
     578:	cmp	x0, #0x0
     57c:	b.eq	594 <ext2fs_free_generic_bmap+0x124>  // b.none
     580:	ldr	x0, [sp, #40]
     584:	add	x0, x0, #0x40
     588:	bl	0 <ext2fs_free_mem>
     58c:	ldr	x0, [sp, #40]
     590:	str	xzr, [x0, #64]
     594:	ldr	x0, [sp, #40]
     598:	str	xzr, [x0]
     59c:	add	x0, sp, #0x28
     5a0:	bl	0 <ext2fs_free_mem>
     5a4:	b	5b4 <ext2fs_free_generic_bmap+0x144>
     5a8:	nop
     5ac:	b	5b4 <ext2fs_free_generic_bmap+0x144>
     5b0:	nop
     5b4:	ldp	x29, x30, [sp], #48
     5b8:	ret

00000000000005bc <ext2fs_copy_generic_bmap>:
     5bc:	stp	x29, x30, [sp, #-80]!
     5c0:	mov	x29, sp
     5c4:	str	x0, [sp, #24]
     5c8:	str	x1, [sp, #16]
     5cc:	ldr	x0, [sp, #24]
     5d0:	str	x0, [sp, #72]
     5d4:	ldr	x0, [sp, #72]
     5d8:	cmp	x0, #0x0
     5dc:	b.ne	5e8 <ext2fs_copy_generic_bmap+0x2c>  // b.any
     5e0:	mov	x0, #0x16                  	// #22
     5e4:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     5e8:	ldr	x0, [sp, #72]
     5ec:	ldr	x1, [x0]
     5f0:	mov	x0, #0xb70a                	// #46858
     5f4:	movk	x0, #0x7f2b, lsl #16
     5f8:	cmp	x1, x0
     5fc:	b.eq	630 <ext2fs_copy_generic_bmap+0x74>  // b.none
     600:	ldr	x0, [sp, #72]
     604:	ldr	x1, [x0]
     608:	mov	x0, #0xb708                	// #46856
     60c:	movk	x0, #0x7f2b, lsl #16
     610:	cmp	x1, x0
     614:	b.eq	630 <ext2fs_copy_generic_bmap+0x74>  // b.none
     618:	ldr	x0, [sp, #72]
     61c:	ldr	x1, [x0]
     620:	mov	x0, #0xb709                	// #46857
     624:	movk	x0, #0x7f2b, lsl #16
     628:	cmp	x1, x0
     62c:	b.ne	640 <ext2fs_copy_generic_bmap+0x84>  // b.any
     630:	ldr	x1, [sp, #16]
     634:	ldr	x0, [sp, #24]
     638:	bl	0 <ext2fs_copy_generic_bitmap>
     63c:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     640:	ldr	x0, [sp, #72]
     644:	ldr	x1, [x0]
     648:	mov	x0, #0xb76d                	// #46957
     64c:	movk	x0, #0x7f2b, lsl #16
     650:	cmp	x1, x0
     654:	b.eq	690 <ext2fs_copy_generic_bmap+0xd4>  // b.none
     658:	ldr	x0, [sp, #72]
     65c:	ldr	x1, [x0]
     660:	mov	x0, #0xb76e                	// #46958
     664:	movk	x0, #0x7f2b, lsl #16
     668:	cmp	x1, x0
     66c:	b.eq	690 <ext2fs_copy_generic_bmap+0xd4>  // b.none
     670:	ldr	x0, [sp, #72]
     674:	ldr	x1, [x0]
     678:	mov	x0, #0xb76f                	// #46959
     67c:	movk	x0, #0x7f2b, lsl #16
     680:	cmp	x1, x0
     684:	b.eq	690 <ext2fs_copy_generic_bmap+0xd4>  // b.none
     688:	mov	x0, #0x16                  	// #22
     68c:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     690:	add	x0, sp, #0x28
     694:	mov	x1, x0
     698:	mov	x0, #0x70                  	// #112
     69c:	bl	0 <ext2fs_get_memzero>
     6a0:	str	x0, [sp, #64]
     6a4:	ldr	x0, [sp, #64]
     6a8:	cmp	x0, #0x0
     6ac:	b.eq	6b8 <ext2fs_copy_generic_bmap+0xfc>  // b.none
     6b0:	ldr	x0, [sp, #64]
     6b4:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     6b8:	ldr	x0, [sp, #40]
     6bc:	add	x0, x0, #0x60
     6c0:	mov	x1, #0x0                   	// #0
     6c4:	bl	0 <gettimeofday>
     6c8:	cmn	w0, #0x1
     6cc:	b.ne	6ec <ext2fs_copy_generic_bmap+0x130>  // b.any
     6d0:	adrp	x0, 0 <warn_bitmap>
     6d4:	add	x0, x0, #0x0
     6d8:	bl	0 <perror>
     6dc:	add	x0, sp, #0x28
     6e0:	bl	0 <ext2fs_free_mem>
     6e4:	mov	x0, #0x1                   	// #1
     6e8:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     6ec:	ldr	x0, [sp, #40]
     6f0:	ldr	x1, [sp, #72]
     6f4:	ldr	w1, [x1, #88]
     6f8:	str	w1, [x0, #88]
     6fc:	ldr	x0, [sp, #40]
     700:	ldr	x1, [sp, #72]
     704:	ldr	x1, [x1]
     708:	str	x1, [x0]
     70c:	ldr	x0, [sp, #40]
     710:	ldr	x1, [sp, #72]
     714:	ldr	x1, [x1, #8]
     718:	str	x1, [x0, #8]
     71c:	ldr	x0, [sp, #40]
     720:	ldr	x1, [sp, #72]
     724:	ldr	x1, [x1, #32]
     728:	str	x1, [x0, #32]
     72c:	ldr	x0, [sp, #40]
     730:	ldr	x1, [sp, #72]
     734:	ldr	x1, [x1, #40]
     738:	str	x1, [x0, #40]
     73c:	ldr	x0, [sp, #40]
     740:	ldr	x1, [sp, #72]
     744:	ldr	x1, [x1, #48]
     748:	str	x1, [x0, #48]
     74c:	ldr	x0, [sp, #40]
     750:	ldr	x1, [sp, #72]
     754:	ldr	x1, [x1, #16]
     758:	str	x1, [x0, #16]
     75c:	ldr	x0, [sp, #40]
     760:	ldr	x1, [sp, #72]
     764:	ldr	x1, [x1, #80]
     768:	str	x1, [x0, #80]
     76c:	ldr	x0, [sp, #40]
     770:	ldr	x1, [sp, #72]
     774:	ldr	w1, [x1, #56]
     778:	str	w1, [x0, #56]
     77c:	ldr	x0, [sp, #72]
     780:	ldr	x0, [x0, #64]
     784:	str	x0, [sp, #56]
     788:	ldr	x0, [sp, #56]
     78c:	cmp	x0, #0x0
     790:	b.eq	800 <ext2fs_copy_generic_bmap+0x244>  // b.none
     794:	ldr	x0, [sp, #56]
     798:	bl	0 <strlen>
     79c:	add	x0, x0, #0xa
     7a0:	add	x1, sp, #0x30
     7a4:	bl	0 <ext2fs_get_mem>
     7a8:	str	x0, [sp, #64]
     7ac:	ldr	x0, [sp, #64]
     7b0:	cmp	x0, #0x0
     7b4:	b.eq	7c8 <ext2fs_copy_generic_bmap+0x20c>  // b.none
     7b8:	add	x0, sp, #0x28
     7bc:	bl	0 <ext2fs_free_mem>
     7c0:	ldr	x0, [sp, #64]
     7c4:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     7c8:	ldr	x2, [sp, #48]
     7cc:	adrp	x0, 0 <warn_bitmap>
     7d0:	add	x1, x0, #0x0
     7d4:	mov	x0, x2
     7d8:	ldr	x2, [x1]
     7dc:	str	x2, [x0]
     7e0:	ldrb	w1, [x1, #8]
     7e4:	strb	w1, [x0, #8]
     7e8:	ldr	x0, [sp, #48]
     7ec:	ldr	x1, [sp, #56]
     7f0:	bl	0 <strcat>
     7f4:	ldr	x0, [sp, #40]
     7f8:	ldr	x1, [sp, #48]
     7fc:	str	x1, [x0, #64]
     800:	ldr	x0, [sp, #72]
     804:	ldr	x0, [x0, #16]
     808:	ldr	x2, [x0, #24]
     80c:	ldr	x0, [sp, #40]
     810:	mov	x1, x0
     814:	ldr	x0, [sp, #72]
     818:	blr	x2
     81c:	str	x0, [sp, #64]
     820:	ldr	x0, [sp, #64]
     824:	cmp	x0, #0x0
     828:	b.eq	848 <ext2fs_copy_generic_bmap+0x28c>  // b.none
     82c:	ldr	x0, [sp, #40]
     830:	add	x0, x0, #0x40
     834:	bl	0 <ext2fs_free_mem>
     838:	add	x0, sp, #0x28
     83c:	bl	0 <ext2fs_free_mem>
     840:	ldr	x0, [sp, #64]
     844:	b	858 <ext2fs_copy_generic_bmap+0x29c>
     848:	ldr	x1, [sp, #40]
     84c:	ldr	x0, [sp, #16]
     850:	str	x1, [x0]
     854:	mov	x0, #0x0                   	// #0
     858:	ldp	x29, x30, [sp], #80
     85c:	ret

0000000000000860 <ext2fs_resize_generic_bmap>:
     860:	stp	x29, x30, [sp, #-64]!
     864:	mov	x29, sp
     868:	str	x0, [sp, #40]
     86c:	str	x1, [sp, #32]
     870:	str	x2, [sp, #24]
     874:	ldr	x0, [sp, #40]
     878:	str	x0, [sp, #56]
     87c:	ldr	x0, [sp, #56]
     880:	cmp	x0, #0x0
     884:	b.ne	890 <ext2fs_resize_generic_bmap+0x30>  // b.any
     888:	mov	x0, #0x16                  	// #22
     88c:	b	96c <ext2fs_resize_generic_bmap+0x10c>
     890:	ldr	x0, [sp, #56]
     894:	ldr	x1, [x0]
     898:	mov	x0, #0xb70a                	// #46858
     89c:	movk	x0, #0x7f2b, lsl #16
     8a0:	cmp	x1, x0
     8a4:	b.eq	8d8 <ext2fs_resize_generic_bmap+0x78>  // b.none
     8a8:	ldr	x0, [sp, #56]
     8ac:	ldr	x1, [x0]
     8b0:	mov	x0, #0xb708                	// #46856
     8b4:	movk	x0, #0x7f2b, lsl #16
     8b8:	cmp	x1, x0
     8bc:	b.eq	8d8 <ext2fs_resize_generic_bmap+0x78>  // b.none
     8c0:	ldr	x0, [sp, #56]
     8c4:	ldr	x1, [x0]
     8c8:	mov	x0, #0xb709                	// #46857
     8cc:	movk	x0, #0x7f2b, lsl #16
     8d0:	cmp	x1, x0
     8d4:	b.ne	900 <ext2fs_resize_generic_bmap+0xa0>  // b.any
     8d8:	ldr	x0, [sp, #40]
     8dc:	ldr	x0, [x0]
     8e0:	ldr	x1, [sp, #32]
     8e4:	mov	w4, w1
     8e8:	ldr	x1, [sp, #24]
     8ec:	ldr	x3, [sp, #40]
     8f0:	mov	w2, w1
     8f4:	mov	w1, w4
     8f8:	bl	0 <ext2fs_resize_generic_bitmap>
     8fc:	b	96c <ext2fs_resize_generic_bmap+0x10c>
     900:	ldr	x0, [sp, #56]
     904:	ldr	x1, [x0]
     908:	mov	x0, #0xb76d                	// #46957
     90c:	movk	x0, #0x7f2b, lsl #16
     910:	cmp	x1, x0
     914:	b.eq	950 <ext2fs_resize_generic_bmap+0xf0>  // b.none
     918:	ldr	x0, [sp, #56]
     91c:	ldr	x1, [x0]
     920:	mov	x0, #0xb76e                	// #46958
     924:	movk	x0, #0x7f2b, lsl #16
     928:	cmp	x1, x0
     92c:	b.eq	950 <ext2fs_resize_generic_bmap+0xf0>  // b.none
     930:	ldr	x0, [sp, #56]
     934:	ldr	x1, [x0]
     938:	mov	x0, #0xb76f                	// #46959
     93c:	movk	x0, #0x7f2b, lsl #16
     940:	cmp	x1, x0
     944:	b.eq	950 <ext2fs_resize_generic_bmap+0xf0>  // b.none
     948:	mov	x0, #0x16                  	// #22
     94c:	b	96c <ext2fs_resize_generic_bmap+0x10c>
     950:	ldr	x0, [sp, #56]
     954:	ldr	x0, [x0, #16]
     958:	ldr	x3, [x0, #32]
     95c:	ldr	x2, [sp, #24]
     960:	ldr	x1, [sp, #32]
     964:	ldr	x0, [sp, #56]
     968:	blr	x3
     96c:	ldp	x29, x30, [sp], #64
     970:	ret

0000000000000974 <ext2fs_fudge_generic_bmap_end>:
     974:	stp	x29, x30, [sp, #-64]!
     978:	mov	x29, sp
     97c:	str	x0, [sp, #40]
     980:	str	x1, [sp, #32]
     984:	str	x2, [sp, #24]
     988:	str	x3, [sp, #16]
     98c:	ldr	x0, [sp, #40]
     990:	str	x0, [sp, #56]
     994:	ldr	x0, [sp, #56]
     998:	cmp	x0, #0x0
     99c:	b.ne	9a8 <ext2fs_fudge_generic_bmap_end+0x34>  // b.any
     9a0:	mov	x0, #0x16                  	// #22
     9a4:	b	adc <ext2fs_fudge_generic_bmap_end+0x168>
     9a8:	ldr	x0, [sp, #56]
     9ac:	ldr	x1, [x0]
     9b0:	mov	x0, #0xb70a                	// #46858
     9b4:	movk	x0, #0x7f2b, lsl #16
     9b8:	cmp	x1, x0
     9bc:	b.eq	9f0 <ext2fs_fudge_generic_bmap_end+0x7c>  // b.none
     9c0:	ldr	x0, [sp, #56]
     9c4:	ldr	x1, [x0]
     9c8:	mov	x0, #0xb708                	// #46856
     9cc:	movk	x0, #0x7f2b, lsl #16
     9d0:	cmp	x1, x0
     9d4:	b.eq	9f0 <ext2fs_fudge_generic_bmap_end+0x7c>  // b.none
     9d8:	ldr	x0, [sp, #56]
     9dc:	ldr	x1, [x0]
     9e0:	mov	x0, #0xb709                	// #46857
     9e4:	movk	x0, #0x7f2b, lsl #16
     9e8:	cmp	x1, x0
     9ec:	b.ne	a44 <ext2fs_fudge_generic_bmap_end+0xd0>  // b.any
     9f0:	ldr	x0, [sp, #56]
     9f4:	ldr	x0, [x0]
     9f8:	ldr	x1, [sp, #24]
     9fc:	mov	w2, w1
     a00:	add	x1, sp, #0x30
     a04:	mov	x4, x1
     a08:	mov	w3, w2
     a0c:	ldr	x2, [sp, #32]
     a10:	mov	x1, x0
     a14:	ldr	x0, [sp, #40]
     a18:	bl	0 <ext2fs_fudge_generic_bitmap_end>
     a1c:	str	w0, [sp, #52]
     a20:	ldr	x0, [sp, #16]
     a24:	cmp	x0, #0x0
     a28:	b.eq	a3c <ext2fs_fudge_generic_bmap_end+0xc8>  // b.none
     a2c:	ldr	w0, [sp, #48]
     a30:	mov	w1, w0
     a34:	ldr	x0, [sp, #16]
     a38:	str	x1, [x0]
     a3c:	ldrsw	x0, [sp, #52]
     a40:	b	adc <ext2fs_fudge_generic_bmap_end+0x168>
     a44:	ldr	x0, [sp, #56]
     a48:	ldr	x1, [x0]
     a4c:	mov	x0, #0xb76d                	// #46957
     a50:	movk	x0, #0x7f2b, lsl #16
     a54:	cmp	x1, x0
     a58:	b.eq	a94 <ext2fs_fudge_generic_bmap_end+0x120>  // b.none
     a5c:	ldr	x0, [sp, #56]
     a60:	ldr	x1, [x0]
     a64:	mov	x0, #0xb76e                	// #46958
     a68:	movk	x0, #0x7f2b, lsl #16
     a6c:	cmp	x1, x0
     a70:	b.eq	a94 <ext2fs_fudge_generic_bmap_end+0x120>  // b.none
     a74:	ldr	x0, [sp, #56]
     a78:	ldr	x1, [x0]
     a7c:	mov	x0, #0xb76f                	// #46959
     a80:	movk	x0, #0x7f2b, lsl #16
     a84:	cmp	x1, x0
     a88:	b.eq	a94 <ext2fs_fudge_generic_bmap_end+0x120>  // b.none
     a8c:	mov	x0, #0x16                  	// #22
     a90:	b	adc <ext2fs_fudge_generic_bmap_end+0x168>
     a94:	ldr	x0, [sp, #56]
     a98:	ldr	x0, [x0, #48]
     a9c:	ldr	x1, [sp, #24]
     aa0:	cmp	x1, x0
     aa4:	b.ls	ab0 <ext2fs_fudge_generic_bmap_end+0x13c>  // b.plast
     aa8:	ldr	x0, [sp, #32]
     aac:	b	adc <ext2fs_fudge_generic_bmap_end+0x168>
     ab0:	ldr	x0, [sp, #16]
     ab4:	cmp	x0, #0x0
     ab8:	b.eq	acc <ext2fs_fudge_generic_bmap_end+0x158>  // b.none
     abc:	ldr	x0, [sp, #56]
     ac0:	ldr	x1, [x0, #40]
     ac4:	ldr	x0, [sp, #16]
     ac8:	str	x1, [x0]
     acc:	ldr	x0, [sp, #56]
     ad0:	ldr	x1, [sp, #24]
     ad4:	str	x1, [x0, #40]
     ad8:	mov	x0, #0x0                   	// #0
     adc:	ldp	x29, x30, [sp], #64
     ae0:	ret

0000000000000ae4 <ext2fs_get_generic_bmap_start>:
     ae4:	stp	x29, x30, [sp, #-48]!
     ae8:	mov	x29, sp
     aec:	str	x0, [sp, #24]
     af0:	ldr	x0, [sp, #24]
     af4:	str	x0, [sp, #40]
     af8:	ldr	x0, [sp, #40]
     afc:	cmp	x0, #0x0
     b00:	b.ne	b0c <ext2fs_get_generic_bmap_start+0x28>  // b.any
     b04:	mov	x0, #0x16                  	// #22
     b08:	b	bbc <ext2fs_get_generic_bmap_start+0xd8>
     b0c:	ldr	x0, [sp, #40]
     b10:	ldr	x1, [x0]
     b14:	mov	x0, #0xb70a                	// #46858
     b18:	movk	x0, #0x7f2b, lsl #16
     b1c:	cmp	x1, x0
     b20:	b.eq	b54 <ext2fs_get_generic_bmap_start+0x70>  // b.none
     b24:	ldr	x0, [sp, #40]
     b28:	ldr	x1, [x0]
     b2c:	mov	x0, #0xb708                	// #46856
     b30:	movk	x0, #0x7f2b, lsl #16
     b34:	cmp	x1, x0
     b38:	b.eq	b54 <ext2fs_get_generic_bmap_start+0x70>  // b.none
     b3c:	ldr	x0, [sp, #40]
     b40:	ldr	x1, [x0]
     b44:	mov	x0, #0xb709                	// #46857
     b48:	movk	x0, #0x7f2b, lsl #16
     b4c:	cmp	x1, x0
     b50:	b.ne	b64 <ext2fs_get_generic_bmap_start+0x80>  // b.any
     b54:	ldr	x0, [sp, #24]
     b58:	bl	0 <ext2fs_get_generic_bitmap_start>
     b5c:	mov	w0, w0
     b60:	b	bbc <ext2fs_get_generic_bmap_start+0xd8>
     b64:	ldr	x0, [sp, #40]
     b68:	ldr	x1, [x0]
     b6c:	mov	x0, #0xb76d                	// #46957
     b70:	movk	x0, #0x7f2b, lsl #16
     b74:	cmp	x1, x0
     b78:	b.eq	bb4 <ext2fs_get_generic_bmap_start+0xd0>  // b.none
     b7c:	ldr	x0, [sp, #40]
     b80:	ldr	x1, [x0]
     b84:	mov	x0, #0xb76e                	// #46958
     b88:	movk	x0, #0x7f2b, lsl #16
     b8c:	cmp	x1, x0
     b90:	b.eq	bb4 <ext2fs_get_generic_bmap_start+0xd0>  // b.none
     b94:	ldr	x0, [sp, #40]
     b98:	ldr	x1, [x0]
     b9c:	mov	x0, #0xb76f                	// #46959
     ba0:	movk	x0, #0x7f2b, lsl #16
     ba4:	cmp	x1, x0
     ba8:	b.eq	bb4 <ext2fs_get_generic_bmap_start+0xd0>  // b.none
     bac:	mov	x0, #0x16                  	// #22
     bb0:	b	bbc <ext2fs_get_generic_bmap_start+0xd8>
     bb4:	ldr	x0, [sp, #40]
     bb8:	ldr	x0, [x0, #32]
     bbc:	ldp	x29, x30, [sp], #48
     bc0:	ret

0000000000000bc4 <ext2fs_get_generic_bmap_end>:
     bc4:	stp	x29, x30, [sp, #-48]!
     bc8:	mov	x29, sp
     bcc:	str	x0, [sp, #24]
     bd0:	ldr	x0, [sp, #24]
     bd4:	str	x0, [sp, #40]
     bd8:	ldr	x0, [sp, #40]
     bdc:	cmp	x0, #0x0
     be0:	b.ne	bec <ext2fs_get_generic_bmap_end+0x28>  // b.any
     be4:	mov	x0, #0x16                  	// #22
     be8:	b	c9c <ext2fs_get_generic_bmap_end+0xd8>
     bec:	ldr	x0, [sp, #40]
     bf0:	ldr	x1, [x0]
     bf4:	mov	x0, #0xb70a                	// #46858
     bf8:	movk	x0, #0x7f2b, lsl #16
     bfc:	cmp	x1, x0
     c00:	b.eq	c34 <ext2fs_get_generic_bmap_end+0x70>  // b.none
     c04:	ldr	x0, [sp, #40]
     c08:	ldr	x1, [x0]
     c0c:	mov	x0, #0xb708                	// #46856
     c10:	movk	x0, #0x7f2b, lsl #16
     c14:	cmp	x1, x0
     c18:	b.eq	c34 <ext2fs_get_generic_bmap_end+0x70>  // b.none
     c1c:	ldr	x0, [sp, #40]
     c20:	ldr	x1, [x0]
     c24:	mov	x0, #0xb709                	// #46857
     c28:	movk	x0, #0x7f2b, lsl #16
     c2c:	cmp	x1, x0
     c30:	b.ne	c44 <ext2fs_get_generic_bmap_end+0x80>  // b.any
     c34:	ldr	x0, [sp, #24]
     c38:	bl	0 <ext2fs_get_generic_bitmap_end>
     c3c:	mov	w0, w0
     c40:	b	c9c <ext2fs_get_generic_bmap_end+0xd8>
     c44:	ldr	x0, [sp, #40]
     c48:	ldr	x1, [x0]
     c4c:	mov	x0, #0xb76d                	// #46957
     c50:	movk	x0, #0x7f2b, lsl #16
     c54:	cmp	x1, x0
     c58:	b.eq	c94 <ext2fs_get_generic_bmap_end+0xd0>  // b.none
     c5c:	ldr	x0, [sp, #40]
     c60:	ldr	x1, [x0]
     c64:	mov	x0, #0xb76e                	// #46958
     c68:	movk	x0, #0x7f2b, lsl #16
     c6c:	cmp	x1, x0
     c70:	b.eq	c94 <ext2fs_get_generic_bmap_end+0xd0>  // b.none
     c74:	ldr	x0, [sp, #40]
     c78:	ldr	x1, [x0]
     c7c:	mov	x0, #0xb76f                	// #46959
     c80:	movk	x0, #0x7f2b, lsl #16
     c84:	cmp	x1, x0
     c88:	b.eq	c94 <ext2fs_get_generic_bmap_end+0xd0>  // b.none
     c8c:	mov	x0, #0x16                  	// #22
     c90:	b	c9c <ext2fs_get_generic_bmap_end+0xd8>
     c94:	ldr	x0, [sp, #40]
     c98:	ldr	x0, [x0, #40]
     c9c:	ldp	x29, x30, [sp], #48
     ca0:	ret

0000000000000ca4 <ext2fs_clear_generic_bmap>:
     ca4:	stp	x29, x30, [sp, #-48]!
     ca8:	mov	x29, sp
     cac:	str	x0, [sp, #24]
     cb0:	ldr	x0, [sp, #24]
     cb4:	str	x0, [sp, #40]
     cb8:	ldr	x0, [sp, #40]
     cbc:	ldr	x1, [x0]
     cc0:	mov	x0, #0xb70a                	// #46858
     cc4:	movk	x0, #0x7f2b, lsl #16
     cc8:	cmp	x1, x0
     ccc:	b.eq	d00 <ext2fs_clear_generic_bmap+0x5c>  // b.none
     cd0:	ldr	x0, [sp, #40]
     cd4:	ldr	x1, [x0]
     cd8:	mov	x0, #0xb708                	// #46856
     cdc:	movk	x0, #0x7f2b, lsl #16
     ce0:	cmp	x1, x0
     ce4:	b.eq	d00 <ext2fs_clear_generic_bmap+0x5c>  // b.none
     ce8:	ldr	x0, [sp, #40]
     cec:	ldr	x1, [x0]
     cf0:	mov	x0, #0xb709                	// #46857
     cf4:	movk	x0, #0x7f2b, lsl #16
     cf8:	cmp	x1, x0
     cfc:	b.ne	d0c <ext2fs_clear_generic_bmap+0x68>  // b.any
     d00:	ldr	x0, [sp, #24]
     d04:	bl	0 <ext2fs_clear_generic_bitmap>
     d08:	b	d24 <ext2fs_clear_generic_bmap+0x80>
     d0c:	ldr	x0, [sp, #40]
     d10:	ldr	x0, [x0, #16]
     d14:	ldr	x1, [x0, #104]
     d18:	ldr	x0, [sp, #40]
     d1c:	blr	x1
     d20:	nop
     d24:	nop
     d28:	ldp	x29, x30, [sp], #48
     d2c:	ret

0000000000000d30 <ext2fs_mark_generic_bmap>:
     d30:	stp	x29, x30, [sp, #-48]!
     d34:	mov	x29, sp
     d38:	str	x0, [sp, #24]
     d3c:	str	x1, [sp, #16]
     d40:	ldr	x0, [sp, #24]
     d44:	str	x0, [sp, #40]
     d48:	ldr	x0, [sp, #40]
     d4c:	cmp	x0, #0x0
     d50:	b.ne	d5c <ext2fs_mark_generic_bmap+0x2c>  // b.any
     d54:	mov	w0, #0x0                   	// #0
     d58:	b	e9c <ext2fs_mark_generic_bmap+0x16c>
     d5c:	ldr	x0, [sp, #40]
     d60:	ldr	x1, [x0]
     d64:	mov	x0, #0xb70a                	// #46858
     d68:	movk	x0, #0x7f2b, lsl #16
     d6c:	cmp	x1, x0
     d70:	b.eq	da4 <ext2fs_mark_generic_bmap+0x74>  // b.none
     d74:	ldr	x0, [sp, #40]
     d78:	ldr	x1, [x0]
     d7c:	mov	x0, #0xb708                	// #46856
     d80:	movk	x0, #0x7f2b, lsl #16
     d84:	cmp	x1, x0
     d88:	b.eq	da4 <ext2fs_mark_generic_bmap+0x74>  // b.none
     d8c:	ldr	x0, [sp, #40]
     d90:	ldr	x1, [x0]
     d94:	mov	x0, #0xb709                	// #46857
     d98:	movk	x0, #0x7f2b, lsl #16
     d9c:	cmp	x1, x0
     da0:	b.ne	de0 <ext2fs_mark_generic_bmap+0xb0>  // b.any
     da4:	ldr	x0, [sp, #16]
     da8:	and	x0, x0, #0xffffffff00000000
     dac:	cmp	x0, #0x0
     db0:	b.eq	dcc <ext2fs_mark_generic_bmap+0x9c>  // b.none
     db4:	mov	x2, #0xffffffff            	// #4294967295
     db8:	mov	w1, #0x0                   	// #0
     dbc:	ldr	x0, [sp, #24]
     dc0:	bl	0 <ext2fs_warn_bitmap2>
     dc4:	mov	w0, #0x0                   	// #0
     dc8:	b	e9c <ext2fs_mark_generic_bmap+0x16c>
     dcc:	ldr	x0, [sp, #16]
     dd0:	mov	w1, w0
     dd4:	ldr	x0, [sp, #24]
     dd8:	bl	0 <ext2fs_mark_generic_bitmap>
     ddc:	b	e9c <ext2fs_mark_generic_bmap+0x16c>
     de0:	ldr	x0, [sp, #40]
     de4:	ldr	x1, [x0]
     de8:	mov	x0, #0xb76d                	// #46957
     dec:	movk	x0, #0x7f2b, lsl #16
     df0:	cmp	x1, x0
     df4:	b.eq	e30 <ext2fs_mark_generic_bmap+0x100>  // b.none
     df8:	ldr	x0, [sp, #40]
     dfc:	ldr	x1, [x0]
     e00:	mov	x0, #0xb76e                	// #46958
     e04:	movk	x0, #0x7f2b, lsl #16
     e08:	cmp	x1, x0
     e0c:	b.eq	e30 <ext2fs_mark_generic_bmap+0x100>  // b.none
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	x1, [x0]
     e18:	mov	x0, #0xb76f                	// #46959
     e1c:	movk	x0, #0x7f2b, lsl #16
     e20:	cmp	x1, x0
     e24:	b.eq	e30 <ext2fs_mark_generic_bmap+0x100>  // b.none
     e28:	mov	w0, #0x0                   	// #0
     e2c:	b	e9c <ext2fs_mark_generic_bmap+0x16c>
     e30:	ldr	x0, [sp, #40]
     e34:	ldr	w0, [x0, #56]
     e38:	ldr	x1, [sp, #16]
     e3c:	lsr	x0, x1, x0
     e40:	str	x0, [sp, #16]
     e44:	ldr	x0, [sp, #40]
     e48:	ldr	x0, [x0, #32]
     e4c:	ldr	x1, [sp, #16]
     e50:	cmp	x1, x0
     e54:	b.cc	e6c <ext2fs_mark_generic_bmap+0x13c>  // b.lo, b.ul, b.last
     e58:	ldr	x0, [sp, #40]
     e5c:	ldr	x0, [x0, #40]
     e60:	ldr	x1, [sp, #16]
     e64:	cmp	x1, x0
     e68:	b.ls	e84 <ext2fs_mark_generic_bmap+0x154>  // b.plast
     e6c:	ldr	x2, [sp, #16]
     e70:	mov	w1, #0x0                   	// #0
     e74:	ldr	x0, [sp, #40]
     e78:	bl	0 <warn_bitmap>
     e7c:	mov	w0, #0x0                   	// #0
     e80:	b	e9c <ext2fs_mark_generic_bmap+0x16c>
     e84:	ldr	x0, [sp, #40]
     e88:	ldr	x0, [x0, #16]
     e8c:	ldr	x2, [x0, #40]
     e90:	ldr	x1, [sp, #16]
     e94:	ldr	x0, [sp, #40]
     e98:	blr	x2
     e9c:	ldp	x29, x30, [sp], #48
     ea0:	ret

0000000000000ea4 <ext2fs_unmark_generic_bmap>:
     ea4:	stp	x29, x30, [sp, #-48]!
     ea8:	mov	x29, sp
     eac:	str	x0, [sp, #24]
     eb0:	str	x1, [sp, #16]
     eb4:	ldr	x0, [sp, #24]
     eb8:	str	x0, [sp, #40]
     ebc:	ldr	x0, [sp, #40]
     ec0:	cmp	x0, #0x0
     ec4:	b.ne	ed0 <ext2fs_unmark_generic_bmap+0x2c>  // b.any
     ec8:	mov	w0, #0x0                   	// #0
     ecc:	b	1010 <ext2fs_unmark_generic_bmap+0x16c>
     ed0:	ldr	x0, [sp, #40]
     ed4:	ldr	x1, [x0]
     ed8:	mov	x0, #0xb70a                	// #46858
     edc:	movk	x0, #0x7f2b, lsl #16
     ee0:	cmp	x1, x0
     ee4:	b.eq	f18 <ext2fs_unmark_generic_bmap+0x74>  // b.none
     ee8:	ldr	x0, [sp, #40]
     eec:	ldr	x1, [x0]
     ef0:	mov	x0, #0xb708                	// #46856
     ef4:	movk	x0, #0x7f2b, lsl #16
     ef8:	cmp	x1, x0
     efc:	b.eq	f18 <ext2fs_unmark_generic_bmap+0x74>  // b.none
     f00:	ldr	x0, [sp, #40]
     f04:	ldr	x1, [x0]
     f08:	mov	x0, #0xb709                	// #46857
     f0c:	movk	x0, #0x7f2b, lsl #16
     f10:	cmp	x1, x0
     f14:	b.ne	f54 <ext2fs_unmark_generic_bmap+0xb0>  // b.any
     f18:	ldr	x0, [sp, #16]
     f1c:	and	x0, x0, #0xffffffff00000000
     f20:	cmp	x0, #0x0
     f24:	b.eq	f40 <ext2fs_unmark_generic_bmap+0x9c>  // b.none
     f28:	mov	x2, #0xffffffff            	// #4294967295
     f2c:	mov	w1, #0x1                   	// #1
     f30:	ldr	x0, [sp, #24]
     f34:	bl	0 <ext2fs_warn_bitmap2>
     f38:	mov	w0, #0x0                   	// #0
     f3c:	b	1010 <ext2fs_unmark_generic_bmap+0x16c>
     f40:	ldr	x0, [sp, #16]
     f44:	mov	w1, w0
     f48:	ldr	x0, [sp, #24]
     f4c:	bl	0 <ext2fs_unmark_generic_bitmap>
     f50:	b	1010 <ext2fs_unmark_generic_bmap+0x16c>
     f54:	ldr	x0, [sp, #40]
     f58:	ldr	x1, [x0]
     f5c:	mov	x0, #0xb76d                	// #46957
     f60:	movk	x0, #0x7f2b, lsl #16
     f64:	cmp	x1, x0
     f68:	b.eq	fa4 <ext2fs_unmark_generic_bmap+0x100>  // b.none
     f6c:	ldr	x0, [sp, #40]
     f70:	ldr	x1, [x0]
     f74:	mov	x0, #0xb76e                	// #46958
     f78:	movk	x0, #0x7f2b, lsl #16
     f7c:	cmp	x1, x0
     f80:	b.eq	fa4 <ext2fs_unmark_generic_bmap+0x100>  // b.none
     f84:	ldr	x0, [sp, #40]
     f88:	ldr	x1, [x0]
     f8c:	mov	x0, #0xb76f                	// #46959
     f90:	movk	x0, #0x7f2b, lsl #16
     f94:	cmp	x1, x0
     f98:	b.eq	fa4 <ext2fs_unmark_generic_bmap+0x100>  // b.none
     f9c:	mov	w0, #0x0                   	// #0
     fa0:	b	1010 <ext2fs_unmark_generic_bmap+0x16c>
     fa4:	ldr	x0, [sp, #40]
     fa8:	ldr	w0, [x0, #56]
     fac:	ldr	x1, [sp, #16]
     fb0:	lsr	x0, x1, x0
     fb4:	str	x0, [sp, #16]
     fb8:	ldr	x0, [sp, #40]
     fbc:	ldr	x0, [x0, #32]
     fc0:	ldr	x1, [sp, #16]
     fc4:	cmp	x1, x0
     fc8:	b.cc	fe0 <ext2fs_unmark_generic_bmap+0x13c>  // b.lo, b.ul, b.last
     fcc:	ldr	x0, [sp, #40]
     fd0:	ldr	x0, [x0, #40]
     fd4:	ldr	x1, [sp, #16]
     fd8:	cmp	x1, x0
     fdc:	b.ls	ff8 <ext2fs_unmark_generic_bmap+0x154>  // b.plast
     fe0:	ldr	x2, [sp, #16]
     fe4:	mov	w1, #0x1                   	// #1
     fe8:	ldr	x0, [sp, #40]
     fec:	bl	0 <warn_bitmap>
     ff0:	mov	w0, #0x0                   	// #0
     ff4:	b	1010 <ext2fs_unmark_generic_bmap+0x16c>
     ff8:	ldr	x0, [sp, #40]
     ffc:	ldr	x0, [x0, #16]
    1000:	ldr	x2, [x0, #48]
    1004:	ldr	x1, [sp, #16]
    1008:	ldr	x0, [sp, #40]
    100c:	blr	x2
    1010:	ldp	x29, x30, [sp], #48
    1014:	ret

0000000000001018 <ext2fs_test_generic_bmap>:
    1018:	stp	x29, x30, [sp, #-48]!
    101c:	mov	x29, sp
    1020:	str	x0, [sp, #24]
    1024:	str	x1, [sp, #16]
    1028:	ldr	x0, [sp, #24]
    102c:	str	x0, [sp, #40]
    1030:	ldr	x0, [sp, #40]
    1034:	cmp	x0, #0x0
    1038:	b.ne	1044 <ext2fs_test_generic_bmap+0x2c>  // b.any
    103c:	mov	w0, #0x0                   	// #0
    1040:	b	1184 <ext2fs_test_generic_bmap+0x16c>
    1044:	ldr	x0, [sp, #40]
    1048:	ldr	x1, [x0]
    104c:	mov	x0, #0xb70a                	// #46858
    1050:	movk	x0, #0x7f2b, lsl #16
    1054:	cmp	x1, x0
    1058:	b.eq	108c <ext2fs_test_generic_bmap+0x74>  // b.none
    105c:	ldr	x0, [sp, #40]
    1060:	ldr	x1, [x0]
    1064:	mov	x0, #0xb708                	// #46856
    1068:	movk	x0, #0x7f2b, lsl #16
    106c:	cmp	x1, x0
    1070:	b.eq	108c <ext2fs_test_generic_bmap+0x74>  // b.none
    1074:	ldr	x0, [sp, #40]
    1078:	ldr	x1, [x0]
    107c:	mov	x0, #0xb709                	// #46857
    1080:	movk	x0, #0x7f2b, lsl #16
    1084:	cmp	x1, x0
    1088:	b.ne	10c8 <ext2fs_test_generic_bmap+0xb0>  // b.any
    108c:	ldr	x0, [sp, #16]
    1090:	and	x0, x0, #0xffffffff00000000
    1094:	cmp	x0, #0x0
    1098:	b.eq	10b4 <ext2fs_test_generic_bmap+0x9c>  // b.none
    109c:	mov	x2, #0xffffffff            	// #4294967295
    10a0:	mov	w1, #0x2                   	// #2
    10a4:	ldr	x0, [sp, #24]
    10a8:	bl	0 <ext2fs_warn_bitmap2>
    10ac:	mov	w0, #0x0                   	// #0
    10b0:	b	1184 <ext2fs_test_generic_bmap+0x16c>
    10b4:	ldr	x0, [sp, #16]
    10b8:	mov	w1, w0
    10bc:	ldr	x0, [sp, #24]
    10c0:	bl	0 <ext2fs_test_generic_bitmap>
    10c4:	b	1184 <ext2fs_test_generic_bmap+0x16c>
    10c8:	ldr	x0, [sp, #40]
    10cc:	ldr	x1, [x0]
    10d0:	mov	x0, #0xb76d                	// #46957
    10d4:	movk	x0, #0x7f2b, lsl #16
    10d8:	cmp	x1, x0
    10dc:	b.eq	1118 <ext2fs_test_generic_bmap+0x100>  // b.none
    10e0:	ldr	x0, [sp, #40]
    10e4:	ldr	x1, [x0]
    10e8:	mov	x0, #0xb76e                	// #46958
    10ec:	movk	x0, #0x7f2b, lsl #16
    10f0:	cmp	x1, x0
    10f4:	b.eq	1118 <ext2fs_test_generic_bmap+0x100>  // b.none
    10f8:	ldr	x0, [sp, #40]
    10fc:	ldr	x1, [x0]
    1100:	mov	x0, #0xb76f                	// #46959
    1104:	movk	x0, #0x7f2b, lsl #16
    1108:	cmp	x1, x0
    110c:	b.eq	1118 <ext2fs_test_generic_bmap+0x100>  // b.none
    1110:	mov	w0, #0x0                   	// #0
    1114:	b	1184 <ext2fs_test_generic_bmap+0x16c>
    1118:	ldr	x0, [sp, #40]
    111c:	ldr	w0, [x0, #56]
    1120:	ldr	x1, [sp, #16]
    1124:	lsr	x0, x1, x0
    1128:	str	x0, [sp, #16]
    112c:	ldr	x0, [sp, #40]
    1130:	ldr	x0, [x0, #32]
    1134:	ldr	x1, [sp, #16]
    1138:	cmp	x1, x0
    113c:	b.cc	1154 <ext2fs_test_generic_bmap+0x13c>  // b.lo, b.ul, b.last
    1140:	ldr	x0, [sp, #40]
    1144:	ldr	x0, [x0, #40]
    1148:	ldr	x1, [sp, #16]
    114c:	cmp	x1, x0
    1150:	b.ls	116c <ext2fs_test_generic_bmap+0x154>  // b.plast
    1154:	ldr	x2, [sp, #16]
    1158:	mov	w1, #0x2                   	// #2
    115c:	ldr	x0, [sp, #40]
    1160:	bl	0 <warn_bitmap>
    1164:	mov	w0, #0x0                   	// #0
    1168:	b	1184 <ext2fs_test_generic_bmap+0x16c>
    116c:	ldr	x0, [sp, #40]
    1170:	ldr	x0, [x0, #16]
    1174:	ldr	x2, [x0, #56]
    1178:	ldr	x1, [sp, #16]
    117c:	ldr	x0, [sp, #40]
    1180:	blr	x2
    1184:	ldp	x29, x30, [sp], #48
    1188:	ret

000000000000118c <ext2fs_set_generic_bmap_range>:
    118c:	stp	x29, x30, [sp, #-64]!
    1190:	mov	x29, sp
    1194:	str	x0, [sp, #40]
    1198:	str	x1, [sp, #32]
    119c:	str	w2, [sp, #28]
    11a0:	str	x3, [sp, #16]
    11a4:	ldr	x0, [sp, #40]
    11a8:	str	x0, [sp, #56]
    11ac:	ldr	x0, [sp, #56]
    11b0:	cmp	x0, #0x0
    11b4:	b.ne	11c0 <ext2fs_set_generic_bmap_range+0x34>  // b.any
    11b8:	mov	x0, #0x16                  	// #22
    11bc:	b	12d8 <ext2fs_set_generic_bmap_range+0x14c>
    11c0:	ldr	x0, [sp, #56]
    11c4:	ldr	x1, [x0]
    11c8:	mov	x0, #0xb70a                	// #46858
    11cc:	movk	x0, #0x7f2b, lsl #16
    11d0:	cmp	x1, x0
    11d4:	b.eq	1208 <ext2fs_set_generic_bmap_range+0x7c>  // b.none
    11d8:	ldr	x0, [sp, #56]
    11dc:	ldr	x1, [x0]
    11e0:	mov	x0, #0xb708                	// #46856
    11e4:	movk	x0, #0x7f2b, lsl #16
    11e8:	cmp	x1, x0
    11ec:	b.eq	1208 <ext2fs_set_generic_bmap_range+0x7c>  // b.none
    11f0:	ldr	x0, [sp, #56]
    11f4:	ldr	x1, [x0]
    11f8:	mov	x0, #0xb709                	// #46857
    11fc:	movk	x0, #0x7f2b, lsl #16
    1200:	cmp	x1, x0
    1204:	b.ne	1264 <ext2fs_set_generic_bmap_range+0xd8>  // b.any
    1208:	ldr	w1, [sp, #28]
    120c:	ldr	x0, [sp, #32]
    1210:	add	x0, x1, x0
    1214:	sub	x0, x0, #0x1
    1218:	and	x0, x0, #0xffffffff00000000
    121c:	cmp	x0, #0x0
    1220:	b.eq	123c <ext2fs_set_generic_bmap_range+0xb0>  // b.none
    1224:	mov	x2, #0xffffffff            	// #4294967295
    1228:	mov	w1, #0x1                   	// #1
    122c:	ldr	x0, [sp, #40]
    1230:	bl	0 <ext2fs_warn_bitmap2>
    1234:	mov	x0, #0x16                  	// #22
    1238:	b	12d8 <ext2fs_set_generic_bmap_range+0x14c>
    123c:	ldr	x0, [sp, #56]
    1240:	ldr	x0, [x0]
    1244:	ldr	x1, [sp, #32]
    1248:	ldr	x4, [sp, #16]
    124c:	ldr	w3, [sp, #28]
    1250:	mov	w2, w1
    1254:	mov	x1, x0
    1258:	ldr	x0, [sp, #40]
    125c:	bl	0 <ext2fs_set_generic_bitmap_range>
    1260:	b	12d8 <ext2fs_set_generic_bmap_range+0x14c>
    1264:	ldr	x0, [sp, #56]
    1268:	ldr	x1, [x0]
    126c:	mov	x0, #0xb76d                	// #46957
    1270:	movk	x0, #0x7f2b, lsl #16
    1274:	cmp	x1, x0
    1278:	b.eq	12b4 <ext2fs_set_generic_bmap_range+0x128>  // b.none
    127c:	ldr	x0, [sp, #56]
    1280:	ldr	x1, [x0]
    1284:	mov	x0, #0xb76e                	// #46958
    1288:	movk	x0, #0x7f2b, lsl #16
    128c:	cmp	x1, x0
    1290:	b.eq	12b4 <ext2fs_set_generic_bmap_range+0x128>  // b.none
    1294:	ldr	x0, [sp, #56]
    1298:	ldr	x1, [x0]
    129c:	mov	x0, #0xb76f                	// #46959
    12a0:	movk	x0, #0x7f2b, lsl #16
    12a4:	cmp	x1, x0
    12a8:	b.eq	12b4 <ext2fs_set_generic_bmap_range+0x128>  // b.none
    12ac:	mov	x0, #0x16                  	// #22
    12b0:	b	12d8 <ext2fs_set_generic_bmap_range+0x14c>
    12b4:	ldr	x0, [sp, #56]
    12b8:	ldr	x0, [x0, #16]
    12bc:	ldr	x4, [x0, #88]
    12c0:	ldr	w0, [sp, #28]
    12c4:	ldr	x3, [sp, #16]
    12c8:	mov	x2, x0
    12cc:	ldr	x1, [sp, #32]
    12d0:	ldr	x0, [sp, #56]
    12d4:	blr	x4
    12d8:	ldp	x29, x30, [sp], #64
    12dc:	ret

00000000000012e0 <ext2fs_get_generic_bmap_range>:
    12e0:	stp	x29, x30, [sp, #-64]!
    12e4:	mov	x29, sp
    12e8:	str	x0, [sp, #40]
    12ec:	str	x1, [sp, #32]
    12f0:	str	w2, [sp, #28]
    12f4:	str	x3, [sp, #16]
    12f8:	ldr	x0, [sp, #40]
    12fc:	str	x0, [sp, #56]
    1300:	ldr	x0, [sp, #56]
    1304:	cmp	x0, #0x0
    1308:	b.ne	1314 <ext2fs_get_generic_bmap_range+0x34>  // b.any
    130c:	mov	x0, #0x16                  	// #22
    1310:	b	142c <ext2fs_get_generic_bmap_range+0x14c>
    1314:	ldr	x0, [sp, #56]
    1318:	ldr	x1, [x0]
    131c:	mov	x0, #0xb70a                	// #46858
    1320:	movk	x0, #0x7f2b, lsl #16
    1324:	cmp	x1, x0
    1328:	b.eq	135c <ext2fs_get_generic_bmap_range+0x7c>  // b.none
    132c:	ldr	x0, [sp, #56]
    1330:	ldr	x1, [x0]
    1334:	mov	x0, #0xb708                	// #46856
    1338:	movk	x0, #0x7f2b, lsl #16
    133c:	cmp	x1, x0
    1340:	b.eq	135c <ext2fs_get_generic_bmap_range+0x7c>  // b.none
    1344:	ldr	x0, [sp, #56]
    1348:	ldr	x1, [x0]
    134c:	mov	x0, #0xb709                	// #46857
    1350:	movk	x0, #0x7f2b, lsl #16
    1354:	cmp	x1, x0
    1358:	b.ne	13b8 <ext2fs_get_generic_bmap_range+0xd8>  // b.any
    135c:	ldr	w1, [sp, #28]
    1360:	ldr	x0, [sp, #32]
    1364:	add	x0, x1, x0
    1368:	sub	x0, x0, #0x1
    136c:	and	x0, x0, #0xffffffff00000000
    1370:	cmp	x0, #0x0
    1374:	b.eq	1390 <ext2fs_get_generic_bmap_range+0xb0>  // b.none
    1378:	mov	x2, #0xffffffff            	// #4294967295
    137c:	mov	w1, #0x1                   	// #1
    1380:	ldr	x0, [sp, #40]
    1384:	bl	0 <ext2fs_warn_bitmap2>
    1388:	mov	x0, #0x16                  	// #22
    138c:	b	142c <ext2fs_get_generic_bmap_range+0x14c>
    1390:	ldr	x0, [sp, #56]
    1394:	ldr	x0, [x0]
    1398:	ldr	x1, [sp, #32]
    139c:	ldr	x4, [sp, #16]
    13a0:	ldr	w3, [sp, #28]
    13a4:	mov	w2, w1
    13a8:	mov	x1, x0
    13ac:	ldr	x0, [sp, #40]
    13b0:	bl	0 <ext2fs_get_generic_bitmap_range>
    13b4:	b	142c <ext2fs_get_generic_bmap_range+0x14c>
    13b8:	ldr	x0, [sp, #56]
    13bc:	ldr	x1, [x0]
    13c0:	mov	x0, #0xb76d                	// #46957
    13c4:	movk	x0, #0x7f2b, lsl #16
    13c8:	cmp	x1, x0
    13cc:	b.eq	1408 <ext2fs_get_generic_bmap_range+0x128>  // b.none
    13d0:	ldr	x0, [sp, #56]
    13d4:	ldr	x1, [x0]
    13d8:	mov	x0, #0xb76e                	// #46958
    13dc:	movk	x0, #0x7f2b, lsl #16
    13e0:	cmp	x1, x0
    13e4:	b.eq	1408 <ext2fs_get_generic_bmap_range+0x128>  // b.none
    13e8:	ldr	x0, [sp, #56]
    13ec:	ldr	x1, [x0]
    13f0:	mov	x0, #0xb76f                	// #46959
    13f4:	movk	x0, #0x7f2b, lsl #16
    13f8:	cmp	x1, x0
    13fc:	b.eq	1408 <ext2fs_get_generic_bmap_range+0x128>  // b.none
    1400:	mov	x0, #0x16                  	// #22
    1404:	b	142c <ext2fs_get_generic_bmap_range+0x14c>
    1408:	ldr	x0, [sp, #56]
    140c:	ldr	x0, [x0, #16]
    1410:	ldr	x4, [x0, #96]
    1414:	ldr	w0, [sp, #28]
    1418:	ldr	x3, [sp, #16]
    141c:	mov	x2, x0
    1420:	ldr	x1, [sp, #32]
    1424:	ldr	x0, [sp, #56]
    1428:	blr	x4
    142c:	ldp	x29, x30, [sp], #64
    1430:	ret

0000000000001434 <ext2fs_compare_generic_bmap>:
    1434:	stp	x29, x30, [sp, #-96]!
    1438:	mov	x29, sp
    143c:	str	x19, [sp, #16]
    1440:	str	x0, [sp, #56]
    1444:	str	x1, [sp, #48]
    1448:	str	x2, [sp, #40]
    144c:	ldr	x0, [sp, #48]
    1450:	str	x0, [sp, #80]
    1454:	ldr	x0, [sp, #40]
    1458:	str	x0, [sp, #72]
    145c:	ldr	x0, [sp, #80]
    1460:	cmp	x0, #0x0
    1464:	b.eq	1474 <ext2fs_compare_generic_bmap+0x40>  // b.none
    1468:	ldr	x0, [sp, #72]
    146c:	cmp	x0, #0x0
    1470:	b.ne	147c <ext2fs_compare_generic_bmap+0x48>  // b.any
    1474:	mov	x0, #0x16                  	// #22
    1478:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    147c:	ldr	x0, [sp, #80]
    1480:	ldr	x1, [x0]
    1484:	ldr	x0, [sp, #72]
    1488:	ldr	x0, [x0]
    148c:	cmp	x1, x0
    1490:	b.eq	149c <ext2fs_compare_generic_bmap+0x68>  // b.none
    1494:	mov	x0, #0x16                  	// #22
    1498:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    149c:	ldr	x0, [sp, #80]
    14a0:	ldr	x1, [x0]
    14a4:	mov	x0, #0xb70a                	// #46858
    14a8:	movk	x0, #0x7f2b, lsl #16
    14ac:	cmp	x1, x0
    14b0:	b.eq	14e4 <ext2fs_compare_generic_bmap+0xb0>  // b.none
    14b4:	ldr	x0, [sp, #80]
    14b8:	ldr	x1, [x0]
    14bc:	mov	x0, #0xb708                	// #46856
    14c0:	movk	x0, #0x7f2b, lsl #16
    14c4:	cmp	x1, x0
    14c8:	b.eq	14e4 <ext2fs_compare_generic_bmap+0xb0>  // b.none
    14cc:	ldr	x0, [sp, #80]
    14d0:	ldr	x1, [x0]
    14d4:	mov	x0, #0xb709                	// #46857
    14d8:	movk	x0, #0x7f2b, lsl #16
    14dc:	cmp	x1, x0
    14e0:	b.ne	1500 <ext2fs_compare_generic_bmap+0xcc>  // b.any
    14e4:	ldr	x0, [sp, #80]
    14e8:	ldr	x0, [x0]
    14ec:	ldr	x3, [sp, #40]
    14f0:	ldr	x2, [sp, #48]
    14f4:	ldr	x1, [sp, #56]
    14f8:	bl	0 <ext2fs_compare_generic_bitmap>
    14fc:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    1500:	ldr	x0, [sp, #80]
    1504:	ldr	x1, [x0]
    1508:	mov	x0, #0xb76d                	// #46957
    150c:	movk	x0, #0x7f2b, lsl #16
    1510:	cmp	x1, x0
    1514:	b.eq	1550 <ext2fs_compare_generic_bmap+0x11c>  // b.none
    1518:	ldr	x0, [sp, #80]
    151c:	ldr	x1, [x0]
    1520:	mov	x0, #0xb76e                	// #46958
    1524:	movk	x0, #0x7f2b, lsl #16
    1528:	cmp	x1, x0
    152c:	b.eq	1550 <ext2fs_compare_generic_bmap+0x11c>  // b.none
    1530:	ldr	x0, [sp, #80]
    1534:	ldr	x1, [x0]
    1538:	mov	x0, #0xb76f                	// #46959
    153c:	movk	x0, #0x7f2b, lsl #16
    1540:	cmp	x1, x0
    1544:	b.eq	1550 <ext2fs_compare_generic_bmap+0x11c>  // b.none
    1548:	mov	x0, #0x16                  	// #22
    154c:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    1550:	ldr	x0, [sp, #80]
    1554:	ldr	x1, [x0, #32]
    1558:	ldr	x0, [sp, #72]
    155c:	ldr	x0, [x0, #32]
    1560:	cmp	x1, x0
    1564:	b.ne	1580 <ext2fs_compare_generic_bmap+0x14c>  // b.any
    1568:	ldr	x0, [sp, #80]
    156c:	ldr	x1, [x0, #40]
    1570:	ldr	x0, [sp, #72]
    1574:	ldr	x0, [x0, #40]
    1578:	cmp	x1, x0
    157c:	b.eq	1588 <ext2fs_compare_generic_bmap+0x154>  // b.none
    1580:	ldr	x0, [sp, #56]
    1584:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    1588:	ldr	x0, [sp, #80]
    158c:	ldr	x1, [x0, #40]
    1590:	ldr	x0, [sp, #80]
    1594:	ldr	x2, [x0, #40]
    1598:	ldr	x0, [sp, #80]
    159c:	ldr	x0, [x0, #32]
    15a0:	sub	x0, x2, x0
    15a4:	and	x0, x0, #0x7
    15a8:	sub	x0, x1, x0
    15ac:	str	x0, [sp, #88]
    15b0:	b	15ec <ext2fs_compare_generic_bmap+0x1b8>
    15b4:	ldr	x1, [sp, #88]
    15b8:	ldr	x0, [sp, #48]
    15bc:	bl	1018 <ext2fs_test_generic_bmap>
    15c0:	mov	w19, w0
    15c4:	ldr	x1, [sp, #88]
    15c8:	ldr	x0, [sp, #40]
    15cc:	bl	1018 <ext2fs_test_generic_bmap>
    15d0:	cmp	w19, w0
    15d4:	b.eq	15e0 <ext2fs_compare_generic_bmap+0x1ac>  // b.none
    15d8:	ldr	x0, [sp, #56]
    15dc:	b	1604 <ext2fs_compare_generic_bmap+0x1d0>
    15e0:	ldr	x0, [sp, #88]
    15e4:	add	x0, x0, #0x1
    15e8:	str	x0, [sp, #88]
    15ec:	ldr	x0, [sp, #80]
    15f0:	ldr	x0, [x0, #40]
    15f4:	ldr	x1, [sp, #88]
    15f8:	cmp	x1, x0
    15fc:	b.ls	15b4 <ext2fs_compare_generic_bmap+0x180>  // b.plast
    1600:	mov	x0, #0x0                   	// #0
    1604:	ldr	x19, [sp, #16]
    1608:	ldp	x29, x30, [sp], #96
    160c:	ret

0000000000001610 <ext2fs_set_generic_bmap_padding>:
    1610:	stp	x29, x30, [sp, #-64]!
    1614:	mov	x29, sp
    1618:	str	x0, [sp, #24]
    161c:	ldr	x0, [sp, #24]
    1620:	str	x0, [sp, #56]
    1624:	ldr	x0, [sp, #56]
    1628:	ldr	x1, [x0]
    162c:	mov	x0, #0xb70a                	// #46858
    1630:	movk	x0, #0x7f2b, lsl #16
    1634:	cmp	x1, x0
    1638:	b.eq	166c <ext2fs_set_generic_bmap_padding+0x5c>  // b.none
    163c:	ldr	x0, [sp, #56]
    1640:	ldr	x1, [x0]
    1644:	mov	x0, #0xb708                	// #46856
    1648:	movk	x0, #0x7f2b, lsl #16
    164c:	cmp	x1, x0
    1650:	b.eq	166c <ext2fs_set_generic_bmap_padding+0x5c>  // b.none
    1654:	ldr	x0, [sp, #56]
    1658:	ldr	x1, [x0]
    165c:	mov	x0, #0xb709                	// #46857
    1660:	movk	x0, #0x7f2b, lsl #16
    1664:	cmp	x1, x0
    1668:	b.ne	1678 <ext2fs_set_generic_bmap_padding+0x68>  // b.any
    166c:	ldr	x0, [sp, #24]
    1670:	bl	0 <ext2fs_set_generic_bitmap_padding>
    1674:	b	16c0 <ext2fs_set_generic_bmap_padding+0xb0>
    1678:	ldr	x0, [sp, #56]
    167c:	ldr	x0, [x0, #40]
    1680:	add	x0, x0, #0x1
    1684:	str	x0, [sp, #48]
    1688:	ldr	x0, [sp, #56]
    168c:	ldr	x1, [x0, #48]
    1690:	ldr	x0, [sp, #56]
    1694:	ldr	x0, [x0, #40]
    1698:	sub	x0, x1, x0
    169c:	str	x0, [sp, #40]
    16a0:	ldr	x0, [sp, #56]
    16a4:	ldr	x0, [x0, #16]
    16a8:	ldr	x3, [x0, #64]
    16ac:	ldr	x0, [sp, #40]
    16b0:	mov	w2, w0
    16b4:	ldr	x1, [sp, #48]
    16b8:	ldr	x0, [sp, #56]
    16bc:	blr	x3
    16c0:	ldp	x29, x30, [sp], #64
    16c4:	ret

00000000000016c8 <ext2fs_test_block_bitmap_range2>:
    16c8:	stp	x29, x30, [sp, #-64]!
    16cc:	mov	x29, sp
    16d0:	str	x0, [sp, #40]
    16d4:	str	x1, [sp, #32]
    16d8:	str	w2, [sp, #28]
    16dc:	ldr	x0, [sp, #40]
    16e0:	str	x0, [sp, #56]
    16e4:	ldr	w0, [sp, #28]
    16e8:	ldr	x1, [sp, #32]
    16ec:	add	x0, x1, x0
    16f0:	str	x0, [sp, #48]
    16f4:	ldr	x0, [sp, #56]
    16f8:	cmp	x0, #0x0
    16fc:	b.ne	1708 <ext2fs_test_block_bitmap_range2+0x40>  // b.any
    1700:	mov	w0, #0x16                  	// #22
    1704:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    1708:	ldr	w0, [sp, #28]
    170c:	cmp	w0, #0x1
    1710:	b.ne	1730 <ext2fs_test_block_bitmap_range2+0x68>  // b.any
    1714:	ldr	x1, [sp, #32]
    1718:	ldr	x0, [sp, #56]
    171c:	bl	1018 <ext2fs_test_generic_bmap>
    1720:	cmp	w0, #0x0
    1724:	cset	w0, eq  // eq = none
    1728:	and	w0, w0, #0xff
    172c:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    1730:	ldr	x0, [sp, #56]
    1734:	ldr	x1, [x0]
    1738:	mov	x0, #0xb70a                	// #46858
    173c:	movk	x0, #0x7f2b, lsl #16
    1740:	cmp	x1, x0
    1744:	b.eq	1778 <ext2fs_test_block_bitmap_range2+0xb0>  // b.none
    1748:	ldr	x0, [sp, #56]
    174c:	ldr	x1, [x0]
    1750:	mov	x0, #0xb708                	// #46856
    1754:	movk	x0, #0x7f2b, lsl #16
    1758:	cmp	x1, x0
    175c:	b.eq	1778 <ext2fs_test_block_bitmap_range2+0xb0>  // b.none
    1760:	ldr	x0, [sp, #56]
    1764:	ldr	x1, [x0]
    1768:	mov	x0, #0xb709                	// #46857
    176c:	movk	x0, #0x7f2b, lsl #16
    1770:	cmp	x1, x0
    1774:	b.ne	17d8 <ext2fs_test_block_bitmap_range2+0x110>  // b.any
    1778:	ldr	x0, [sp, #32]
    177c:	and	x0, x0, #0xffffffff00000000
    1780:	cmp	x0, #0x0
    1784:	b.ne	17a4 <ext2fs_test_block_bitmap_range2+0xdc>  // b.any
    1788:	ldr	w1, [sp, #28]
    178c:	ldr	x0, [sp, #32]
    1790:	add	x0, x1, x0
    1794:	sub	x0, x0, #0x1
    1798:	and	x0, x0, #0xffffffff00000000
    179c:	cmp	x0, #0x0
    17a0:	b.eq	17bc <ext2fs_test_block_bitmap_range2+0xf4>  // b.none
    17a4:	mov	x2, #0xffffffff            	// #4294967295
    17a8:	mov	w1, #0x1                   	// #1
    17ac:	ldr	x0, [sp, #56]
    17b0:	bl	0 <ext2fs_warn_bitmap2>
    17b4:	mov	w0, #0x16                  	// #22
    17b8:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    17bc:	ldr	x0, [sp, #32]
    17c0:	mov	w1, w0
    17c4:	ldr	w0, [sp, #28]
    17c8:	mov	w2, w0
    17cc:	ldr	x0, [sp, #56]
    17d0:	bl	0 <ext2fs_test_block_bitmap_range>
    17d4:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    17d8:	ldr	x0, [sp, #56]
    17dc:	ldr	x1, [x0]
    17e0:	mov	x0, #0xb76d                	// #46957
    17e4:	movk	x0, #0x7f2b, lsl #16
    17e8:	cmp	x1, x0
    17ec:	b.eq	1828 <ext2fs_test_block_bitmap_range2+0x160>  // b.none
    17f0:	ldr	x0, [sp, #56]
    17f4:	ldr	x1, [x0]
    17f8:	mov	x0, #0xb76e                	// #46958
    17fc:	movk	x0, #0x7f2b, lsl #16
    1800:	cmp	x1, x0
    1804:	b.eq	1828 <ext2fs_test_block_bitmap_range2+0x160>  // b.none
    1808:	ldr	x0, [sp, #56]
    180c:	ldr	x1, [x0]
    1810:	mov	x0, #0xb76f                	// #46959
    1814:	movk	x0, #0x7f2b, lsl #16
    1818:	cmp	x1, x0
    181c:	b.eq	1828 <ext2fs_test_block_bitmap_range2+0x160>  // b.none
    1820:	mov	w0, #0x16                  	// #22
    1824:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    1828:	ldr	x0, [sp, #56]
    182c:	ldr	w0, [x0, #56]
    1830:	ldr	x1, [sp, #32]
    1834:	lsr	x0, x1, x0
    1838:	str	x0, [sp, #32]
    183c:	ldr	x0, [sp, #56]
    1840:	ldr	w0, [x0, #56]
    1844:	mov	w1, #0x1                   	// #1
    1848:	lsl	w0, w1, w0
    184c:	sub	w0, w0, #0x1
    1850:	sxtw	x0, w0
    1854:	ldr	x1, [sp, #48]
    1858:	add	x0, x1, x0
    185c:	str	x0, [sp, #48]
    1860:	ldr	x0, [sp, #56]
    1864:	ldr	w0, [x0, #56]
    1868:	ldr	x1, [sp, #48]
    186c:	lsr	x0, x1, x0
    1870:	str	x0, [sp, #48]
    1874:	ldr	x0, [sp, #48]
    1878:	mov	w1, w0
    187c:	ldr	x0, [sp, #32]
    1880:	sub	w0, w1, w0
    1884:	str	w0, [sp, #28]
    1888:	ldr	x0, [sp, #56]
    188c:	ldr	x0, [x0, #32]
    1890:	ldr	x1, [sp, #32]
    1894:	cmp	x1, x0
    1898:	b.cc	18d0 <ext2fs_test_block_bitmap_range2+0x208>  // b.lo, b.ul, b.last
    189c:	ldr	x0, [sp, #56]
    18a0:	ldr	x0, [x0, #40]
    18a4:	ldr	x1, [sp, #32]
    18a8:	cmp	x1, x0
    18ac:	b.hi	18d0 <ext2fs_test_block_bitmap_range2+0x208>  // b.pmore
    18b0:	ldr	w1, [sp, #28]
    18b4:	ldr	x0, [sp, #32]
    18b8:	add	x0, x1, x0
    18bc:	sub	x1, x0, #0x1
    18c0:	ldr	x0, [sp, #56]
    18c4:	ldr	x0, [x0, #40]
    18c8:	cmp	x1, x0
    18cc:	b.ls	18f4 <ext2fs_test_block_bitmap_range2+0x22c>  // b.plast
    18d0:	ldr	x0, [sp, #56]
    18d4:	ldr	x0, [x0, #64]
    18d8:	mov	x2, x0
    18dc:	ldr	x1, [sp, #32]
    18e0:	mov	x0, #0xb72f                	// #46895
    18e4:	movk	x0, #0x7f2b, lsl #16
    18e8:	bl	0 <ext2fs_warn_bitmap>
    18ec:	mov	w0, #0x16                  	// #22
    18f0:	b	1910 <ext2fs_test_block_bitmap_range2+0x248>
    18f4:	ldr	x0, [sp, #56]
    18f8:	ldr	x0, [x0, #16]
    18fc:	ldr	x3, [x0, #80]
    1900:	ldr	w2, [sp, #28]
    1904:	ldr	x1, [sp, #32]
    1908:	ldr	x0, [sp, #56]
    190c:	blr	x3
    1910:	ldp	x29, x30, [sp], #64
    1914:	ret

0000000000001918 <ext2fs_mark_block_bitmap_range2>:
    1918:	stp	x29, x30, [sp, #-64]!
    191c:	mov	x29, sp
    1920:	str	x0, [sp, #40]
    1924:	str	x1, [sp, #32]
    1928:	str	w2, [sp, #28]
    192c:	ldr	x0, [sp, #40]
    1930:	str	x0, [sp, #56]
    1934:	ldr	w0, [sp, #28]
    1938:	ldr	x1, [sp, #32]
    193c:	add	x0, x1, x0
    1940:	str	x0, [sp, #48]
    1944:	ldr	x0, [sp, #56]
    1948:	cmp	x0, #0x0
    194c:	b.eq	1b20 <ext2fs_mark_block_bitmap_range2+0x208>  // b.none
    1950:	ldr	x0, [sp, #56]
    1954:	ldr	x1, [x0]
    1958:	mov	x0, #0xb70a                	// #46858
    195c:	movk	x0, #0x7f2b, lsl #16
    1960:	cmp	x1, x0
    1964:	b.eq	1998 <ext2fs_mark_block_bitmap_range2+0x80>  // b.none
    1968:	ldr	x0, [sp, #56]
    196c:	ldr	x1, [x0]
    1970:	mov	x0, #0xb708                	// #46856
    1974:	movk	x0, #0x7f2b, lsl #16
    1978:	cmp	x1, x0
    197c:	b.eq	1998 <ext2fs_mark_block_bitmap_range2+0x80>  // b.none
    1980:	ldr	x0, [sp, #56]
    1984:	ldr	x1, [x0]
    1988:	mov	x0, #0xb709                	// #46857
    198c:	movk	x0, #0x7f2b, lsl #16
    1990:	cmp	x1, x0
    1994:	b.ne	19f0 <ext2fs_mark_block_bitmap_range2+0xd8>  // b.any
    1998:	ldr	x0, [sp, #32]
    199c:	and	x0, x0, #0xffffffff00000000
    19a0:	cmp	x0, #0x0
    19a4:	b.ne	19c4 <ext2fs_mark_block_bitmap_range2+0xac>  // b.any
    19a8:	ldr	w1, [sp, #28]
    19ac:	ldr	x0, [sp, #32]
    19b0:	add	x0, x1, x0
    19b4:	sub	x0, x0, #0x1
    19b8:	and	x0, x0, #0xffffffff00000000
    19bc:	cmp	x0, #0x0
    19c0:	b.eq	19d8 <ext2fs_mark_block_bitmap_range2+0xc0>  // b.none
    19c4:	mov	x2, #0xffffffff            	// #4294967295
    19c8:	mov	w1, #0x1                   	// #1
    19cc:	ldr	x0, [sp, #56]
    19d0:	bl	0 <ext2fs_warn_bitmap2>
    19d4:	b	1b2c <ext2fs_mark_block_bitmap_range2+0x214>
    19d8:	ldr	x0, [sp, #32]
    19dc:	mov	w1, w0
    19e0:	ldr	w0, [sp, #28]
    19e4:	mov	w2, w0
    19e8:	ldr	x0, [sp, #56]
    19ec:	bl	0 <ext2fs_mark_block_bitmap_range>
    19f0:	ldr	x0, [sp, #56]
    19f4:	ldr	x1, [x0]
    19f8:	mov	x0, #0xb76d                	// #46957
    19fc:	movk	x0, #0x7f2b, lsl #16
    1a00:	cmp	x1, x0
    1a04:	b.eq	1a38 <ext2fs_mark_block_bitmap_range2+0x120>  // b.none
    1a08:	ldr	x0, [sp, #56]
    1a0c:	ldr	x1, [x0]
    1a10:	mov	x0, #0xb76e                	// #46958
    1a14:	movk	x0, #0x7f2b, lsl #16
    1a18:	cmp	x1, x0
    1a1c:	b.eq	1a38 <ext2fs_mark_block_bitmap_range2+0x120>  // b.none
    1a20:	ldr	x0, [sp, #56]
    1a24:	ldr	x1, [x0]
    1a28:	mov	x0, #0xb76f                	// #46959
    1a2c:	movk	x0, #0x7f2b, lsl #16
    1a30:	cmp	x1, x0
    1a34:	b.ne	1b28 <ext2fs_mark_block_bitmap_range2+0x210>  // b.any
    1a38:	ldr	x0, [sp, #56]
    1a3c:	ldr	w0, [x0, #56]
    1a40:	ldr	x1, [sp, #32]
    1a44:	lsr	x0, x1, x0
    1a48:	str	x0, [sp, #32]
    1a4c:	ldr	x0, [sp, #56]
    1a50:	ldr	w0, [x0, #56]
    1a54:	mov	w1, #0x1                   	// #1
    1a58:	lsl	w0, w1, w0
    1a5c:	sub	w0, w0, #0x1
    1a60:	sxtw	x0, w0
    1a64:	ldr	x1, [sp, #48]
    1a68:	add	x0, x1, x0
    1a6c:	str	x0, [sp, #48]
    1a70:	ldr	x0, [sp, #56]
    1a74:	ldr	w0, [x0, #56]
    1a78:	ldr	x1, [sp, #48]
    1a7c:	lsr	x0, x1, x0
    1a80:	str	x0, [sp, #48]
    1a84:	ldr	x0, [sp, #48]
    1a88:	mov	w1, w0
    1a8c:	ldr	x0, [sp, #32]
    1a90:	sub	w0, w1, w0
    1a94:	str	w0, [sp, #28]
    1a98:	ldr	x0, [sp, #56]
    1a9c:	ldr	x0, [x0, #32]
    1aa0:	ldr	x1, [sp, #32]
    1aa4:	cmp	x1, x0
    1aa8:	b.cc	1ae0 <ext2fs_mark_block_bitmap_range2+0x1c8>  // b.lo, b.ul, b.last
    1aac:	ldr	x0, [sp, #56]
    1ab0:	ldr	x0, [x0, #40]
    1ab4:	ldr	x1, [sp, #32]
    1ab8:	cmp	x1, x0
    1abc:	b.hi	1ae0 <ext2fs_mark_block_bitmap_range2+0x1c8>  // b.pmore
    1ac0:	ldr	w1, [sp, #28]
    1ac4:	ldr	x0, [sp, #32]
    1ac8:	add	x0, x1, x0
    1acc:	sub	x1, x0, #0x1
    1ad0:	ldr	x0, [sp, #56]
    1ad4:	ldr	x0, [x0, #40]
    1ad8:	cmp	x1, x0
    1adc:	b.ls	1b00 <ext2fs_mark_block_bitmap_range2+0x1e8>  // b.plast
    1ae0:	ldr	x0, [sp, #56]
    1ae4:	ldr	x0, [x0, #64]
    1ae8:	mov	x2, x0
    1aec:	ldr	x1, [sp, #32]
    1af0:	mov	x0, #0xb72d                	// #46893
    1af4:	movk	x0, #0x7f2b, lsl #16
    1af8:	bl	0 <ext2fs_warn_bitmap>
    1afc:	b	1b2c <ext2fs_mark_block_bitmap_range2+0x214>
    1b00:	ldr	x0, [sp, #56]
    1b04:	ldr	x0, [x0, #16]
    1b08:	ldr	x3, [x0, #64]
    1b0c:	ldr	w2, [sp, #28]
    1b10:	ldr	x1, [sp, #32]
    1b14:	ldr	x0, [sp, #56]
    1b18:	blr	x3
    1b1c:	b	1b2c <ext2fs_mark_block_bitmap_range2+0x214>
    1b20:	nop
    1b24:	b	1b2c <ext2fs_mark_block_bitmap_range2+0x214>
    1b28:	nop
    1b2c:	ldp	x29, x30, [sp], #64
    1b30:	ret

0000000000001b34 <ext2fs_unmark_block_bitmap_range2>:
    1b34:	stp	x29, x30, [sp, #-64]!
    1b38:	mov	x29, sp
    1b3c:	str	x0, [sp, #40]
    1b40:	str	x1, [sp, #32]
    1b44:	str	w2, [sp, #28]
    1b48:	ldr	x0, [sp, #40]
    1b4c:	str	x0, [sp, #56]
    1b50:	ldr	w0, [sp, #28]
    1b54:	ldr	x1, [sp, #32]
    1b58:	add	x0, x1, x0
    1b5c:	str	x0, [sp, #48]
    1b60:	ldr	x0, [sp, #56]
    1b64:	cmp	x0, #0x0
    1b68:	b.eq	1d3c <ext2fs_unmark_block_bitmap_range2+0x208>  // b.none
    1b6c:	ldr	x0, [sp, #56]
    1b70:	ldr	x1, [x0]
    1b74:	mov	x0, #0xb70a                	// #46858
    1b78:	movk	x0, #0x7f2b, lsl #16
    1b7c:	cmp	x1, x0
    1b80:	b.eq	1bb4 <ext2fs_unmark_block_bitmap_range2+0x80>  // b.none
    1b84:	ldr	x0, [sp, #56]
    1b88:	ldr	x1, [x0]
    1b8c:	mov	x0, #0xb708                	// #46856
    1b90:	movk	x0, #0x7f2b, lsl #16
    1b94:	cmp	x1, x0
    1b98:	b.eq	1bb4 <ext2fs_unmark_block_bitmap_range2+0x80>  // b.none
    1b9c:	ldr	x0, [sp, #56]
    1ba0:	ldr	x1, [x0]
    1ba4:	mov	x0, #0xb709                	// #46857
    1ba8:	movk	x0, #0x7f2b, lsl #16
    1bac:	cmp	x1, x0
    1bb0:	b.ne	1c0c <ext2fs_unmark_block_bitmap_range2+0xd8>  // b.any
    1bb4:	ldr	x0, [sp, #32]
    1bb8:	and	x0, x0, #0xffffffff00000000
    1bbc:	cmp	x0, #0x0
    1bc0:	b.ne	1be0 <ext2fs_unmark_block_bitmap_range2+0xac>  // b.any
    1bc4:	ldr	w1, [sp, #28]
    1bc8:	ldr	x0, [sp, #32]
    1bcc:	add	x0, x1, x0
    1bd0:	sub	x0, x0, #0x1
    1bd4:	and	x0, x0, #0xffffffff00000000
    1bd8:	cmp	x0, #0x0
    1bdc:	b.eq	1bf4 <ext2fs_unmark_block_bitmap_range2+0xc0>  // b.none
    1be0:	mov	x2, #0xffffffff            	// #4294967295
    1be4:	mov	w1, #0x1                   	// #1
    1be8:	ldr	x0, [sp, #56]
    1bec:	bl	0 <ext2fs_warn_bitmap2>
    1bf0:	b	1d48 <ext2fs_unmark_block_bitmap_range2+0x214>
    1bf4:	ldr	x0, [sp, #32]
    1bf8:	mov	w1, w0
    1bfc:	ldr	w0, [sp, #28]
    1c00:	mov	w2, w0
    1c04:	ldr	x0, [sp, #56]
    1c08:	bl	0 <ext2fs_unmark_block_bitmap_range>
    1c0c:	ldr	x0, [sp, #56]
    1c10:	ldr	x1, [x0]
    1c14:	mov	x0, #0xb76d                	// #46957
    1c18:	movk	x0, #0x7f2b, lsl #16
    1c1c:	cmp	x1, x0
    1c20:	b.eq	1c54 <ext2fs_unmark_block_bitmap_range2+0x120>  // b.none
    1c24:	ldr	x0, [sp, #56]
    1c28:	ldr	x1, [x0]
    1c2c:	mov	x0, #0xb76e                	// #46958
    1c30:	movk	x0, #0x7f2b, lsl #16
    1c34:	cmp	x1, x0
    1c38:	b.eq	1c54 <ext2fs_unmark_block_bitmap_range2+0x120>  // b.none
    1c3c:	ldr	x0, [sp, #56]
    1c40:	ldr	x1, [x0]
    1c44:	mov	x0, #0xb76f                	// #46959
    1c48:	movk	x0, #0x7f2b, lsl #16
    1c4c:	cmp	x1, x0
    1c50:	b.ne	1d44 <ext2fs_unmark_block_bitmap_range2+0x210>  // b.any
    1c54:	ldr	x0, [sp, #56]
    1c58:	ldr	w0, [x0, #56]
    1c5c:	ldr	x1, [sp, #32]
    1c60:	lsr	x0, x1, x0
    1c64:	str	x0, [sp, #32]
    1c68:	ldr	x0, [sp, #56]
    1c6c:	ldr	w0, [x0, #56]
    1c70:	mov	w1, #0x1                   	// #1
    1c74:	lsl	w0, w1, w0
    1c78:	sub	w0, w0, #0x1
    1c7c:	sxtw	x0, w0
    1c80:	ldr	x1, [sp, #48]
    1c84:	add	x0, x1, x0
    1c88:	str	x0, [sp, #48]
    1c8c:	ldr	x0, [sp, #56]
    1c90:	ldr	w0, [x0, #56]
    1c94:	ldr	x1, [sp, #48]
    1c98:	lsr	x0, x1, x0
    1c9c:	str	x0, [sp, #48]
    1ca0:	ldr	x0, [sp, #48]
    1ca4:	mov	w1, w0
    1ca8:	ldr	x0, [sp, #32]
    1cac:	sub	w0, w1, w0
    1cb0:	str	w0, [sp, #28]
    1cb4:	ldr	x0, [sp, #56]
    1cb8:	ldr	x0, [x0, #32]
    1cbc:	ldr	x1, [sp, #32]
    1cc0:	cmp	x1, x0
    1cc4:	b.cc	1cfc <ext2fs_unmark_block_bitmap_range2+0x1c8>  // b.lo, b.ul, b.last
    1cc8:	ldr	x0, [sp, #56]
    1ccc:	ldr	x0, [x0, #40]
    1cd0:	ldr	x1, [sp, #32]
    1cd4:	cmp	x1, x0
    1cd8:	b.hi	1cfc <ext2fs_unmark_block_bitmap_range2+0x1c8>  // b.pmore
    1cdc:	ldr	w1, [sp, #28]
    1ce0:	ldr	x0, [sp, #32]
    1ce4:	add	x0, x1, x0
    1ce8:	sub	x1, x0, #0x1
    1cec:	ldr	x0, [sp, #56]
    1cf0:	ldr	x0, [x0, #40]
    1cf4:	cmp	x1, x0
    1cf8:	b.ls	1d1c <ext2fs_unmark_block_bitmap_range2+0x1e8>  // b.plast
    1cfc:	ldr	x0, [sp, #56]
    1d00:	ldr	x0, [x0, #64]
    1d04:	mov	x2, x0
    1d08:	ldr	x1, [sp, #32]
    1d0c:	mov	x0, #0xb72e                	// #46894
    1d10:	movk	x0, #0x7f2b, lsl #16
    1d14:	bl	0 <ext2fs_warn_bitmap>
    1d18:	b	1d48 <ext2fs_unmark_block_bitmap_range2+0x214>
    1d1c:	ldr	x0, [sp, #56]
    1d20:	ldr	x0, [x0, #16]
    1d24:	ldr	x3, [x0, #72]
    1d28:	ldr	w2, [sp, #28]
    1d2c:	ldr	x1, [sp, #32]
    1d30:	ldr	x0, [sp, #56]
    1d34:	blr	x3
    1d38:	b	1d48 <ext2fs_unmark_block_bitmap_range2+0x214>
    1d3c:	nop
    1d40:	b	1d48 <ext2fs_unmark_block_bitmap_range2+0x214>
    1d44:	nop
    1d48:	ldp	x29, x30, [sp], #64
    1d4c:	ret

0000000000001d50 <ext2fs_warn_bitmap32>:
    1d50:	stp	x29, x30, [sp, #-48]!
    1d54:	mov	x29, sp
    1d58:	str	x0, [sp, #24]
    1d5c:	str	x1, [sp, #16]
    1d60:	ldr	x0, [sp, #24]
    1d64:	str	x0, [sp, #40]
    1d68:	ldr	x0, [sp, #40]
    1d6c:	cmp	x0, #0x0
    1d70:	b.eq	1db0 <ext2fs_warn_bitmap32+0x60>  // b.none
    1d74:	ldr	x0, [sp, #40]
    1d78:	ldr	x0, [x0, #64]
    1d7c:	cmp	x0, #0x0
    1d80:	b.eq	1db0 <ext2fs_warn_bitmap32+0x60>  // b.none
    1d84:	ldr	x0, [sp, #40]
    1d88:	ldr	x0, [x0, #64]
    1d8c:	mov	x4, x0
    1d90:	ldr	x3, [sp, #16]
    1d94:	adrp	x0, 0 <warn_bitmap>
    1d98:	add	x2, x0, #0x0
    1d9c:	mov	x1, #0xb70a                	// #46858
    1da0:	movk	x1, #0x7f2b, lsl #16
    1da4:	mov	x0, #0x0                   	// #0
    1da8:	bl	0 <com_err>
    1dac:	b	1dd0 <ext2fs_warn_bitmap32+0x80>
    1db0:	ldr	x3, [sp, #16]
    1db4:	adrp	x0, 0 <warn_bitmap>
    1db8:	add	x2, x0, #0x0
    1dbc:	mov	x1, #0xb70a                	// #46858
    1dc0:	movk	x1, #0x7f2b, lsl #16
    1dc4:	mov	x0, #0x0                   	// #0
    1dc8:	bl	0 <com_err>
    1dcc:	nop
    1dd0:	nop
    1dd4:	ldp	x29, x30, [sp], #48
    1dd8:	ret

0000000000001ddc <ext2fs_convert_subcluster_bitmap>:
    1ddc:	stp	x29, x30, [sp, #-128]!
    1de0:	mov	x29, sp
    1de4:	str	x19, [sp, #16]
    1de8:	str	x0, [sp, #40]
    1dec:	str	x1, [sp, #32]
    1df0:	ldr	x0, [sp, #32]
    1df4:	ldr	x0, [x0]
    1df8:	str	x0, [sp, #104]
    1dfc:	ldr	x0, [sp, #104]
    1e00:	str	x0, [sp, #96]
    1e04:	ldr	x0, [sp, #40]
    1e08:	ldr	w19, [x0, #192]
    1e0c:	ldr	x0, [sp, #104]
    1e10:	bl	0 <ext2fs_get_bitmap_granularity>
    1e14:	cmp	w19, w0
    1e18:	b.ne	1e24 <ext2fs_convert_subcluster_bitmap+0x48>  // b.any
    1e1c:	mov	x0, #0x0                   	// #0
    1e20:	b	1f70 <ext2fs_convert_subcluster_bitmap+0x194>
    1e24:	add	x0, sp, #0x30
    1e28:	mov	x2, x0
    1e2c:	adrp	x0, 0 <warn_bitmap>
    1e30:	add	x1, x0, #0x0
    1e34:	ldr	x0, [sp, #40]
    1e38:	bl	0 <ext2fs_allocate_block_bitmap>
    1e3c:	str	x0, [sp, #88]
    1e40:	ldr	x0, [sp, #88]
    1e44:	cmp	x0, #0x0
    1e48:	b.eq	1e54 <ext2fs_convert_subcluster_bitmap+0x78>  // b.none
    1e4c:	ldr	x0, [sp, #88]
    1e50:	b	1f70 <ext2fs_convert_subcluster_bitmap+0x194>
    1e54:	ldr	x0, [sp, #48]
    1e58:	str	x0, [sp, #80]
    1e5c:	ldr	x0, [sp, #96]
    1e60:	ldr	x0, [x0, #32]
    1e64:	str	x0, [sp, #120]
    1e68:	ldr	x0, [sp, #96]
    1e6c:	ldr	x0, [x0, #40]
    1e70:	str	x0, [sp, #72]
    1e74:	ldr	x0, [sp, #96]
    1e78:	ldr	x1, [x0, #48]
    1e7c:	ldr	x0, [sp, #96]
    1e80:	str	x1, [x0, #40]
    1e84:	ldr	x0, [sp, #80]
    1e88:	ldr	x0, [x0, #40]
    1e8c:	str	x0, [sp, #64]
    1e90:	ldr	x0, [sp, #80]
    1e94:	ldr	x1, [x0, #48]
    1e98:	ldr	x0, [sp, #80]
    1e9c:	str	x1, [x0, #40]
    1ea0:	str	wzr, [sp, #116]
    1ea4:	ldr	x0, [sp, #40]
    1ea8:	ldr	w0, [x0, #192]
    1eac:	mov	w1, #0x1                   	// #1
    1eb0:	lsl	w0, w1, w0
    1eb4:	str	w0, [sp, #60]
    1eb8:	b	1f2c <ext2fs_convert_subcluster_bitmap+0x150>
    1ebc:	ldr	x1, [sp, #120]
    1ec0:	ldr	x0, [sp, #104]
    1ec4:	bl	0 <ext2fs_test_block_bitmap2>
    1ec8:	cmp	w0, #0x0
    1ecc:	b.eq	1f00 <ext2fs_convert_subcluster_bitmap+0x124>  // b.none
    1ed0:	ldr	x0, [sp, #48]
    1ed4:	ldr	x1, [sp, #120]
    1ed8:	bl	0 <ext2fs_mark_block_bitmap2>
    1edc:	ldr	w1, [sp, #60]
    1ee0:	ldr	w0, [sp, #116]
    1ee4:	sub	w0, w1, w0
    1ee8:	sxtw	x0, w0
    1eec:	ldr	x1, [sp, #120]
    1ef0:	add	x0, x1, x0
    1ef4:	str	x0, [sp, #120]
    1ef8:	str	wzr, [sp, #116]
    1efc:	b	1f2c <ext2fs_convert_subcluster_bitmap+0x150>
    1f00:	ldr	x0, [sp, #120]
    1f04:	add	x0, x0, #0x1
    1f08:	str	x0, [sp, #120]
    1f0c:	ldr	w0, [sp, #116]
    1f10:	add	w0, w0, #0x1
    1f14:	str	w0, [sp, #116]
    1f18:	ldr	w1, [sp, #116]
    1f1c:	ldr	w0, [sp, #60]
    1f20:	cmp	w1, w0
    1f24:	b.lt	1f2c <ext2fs_convert_subcluster_bitmap+0x150>  // b.tstop
    1f28:	str	wzr, [sp, #116]
    1f2c:	ldr	x0, [sp, #96]
    1f30:	ldr	x0, [x0, #48]
    1f34:	ldr	x1, [sp, #120]
    1f38:	cmp	x1, x0
    1f3c:	b.cc	1ebc <ext2fs_convert_subcluster_bitmap+0xe0>  // b.lo, b.ul, b.last
    1f40:	ldr	x0, [sp, #96]
    1f44:	ldr	x1, [sp, #72]
    1f48:	str	x1, [x0, #40]
    1f4c:	ldr	x0, [sp, #80]
    1f50:	ldr	x1, [sp, #64]
    1f54:	str	x1, [x0, #40]
    1f58:	ldr	x0, [sp, #104]
    1f5c:	bl	0 <ext2fs_free_block_bitmap>
    1f60:	ldr	x0, [sp, #32]
    1f64:	ldr	x1, [sp, #80]
    1f68:	str	x1, [x0]
    1f6c:	mov	x0, #0x0                   	// #0
    1f70:	ldr	x19, [sp, #16]
    1f74:	ldp	x29, x30, [sp], #128
    1f78:	ret

0000000000001f7c <ext2fs_find_first_zero_generic_bmap>:
    1f7c:	stp	x29, x30, [sp, #-96]!
    1f80:	mov	x29, sp
    1f84:	str	x0, [sp, #40]
    1f88:	str	x1, [sp, #32]
    1f8c:	str	x2, [sp, #24]
    1f90:	str	x3, [sp, #16]
    1f94:	ldr	x0, [sp, #40]
    1f98:	str	x0, [sp, #88]
    1f9c:	ldr	x0, [sp, #40]
    1fa0:	cmp	x0, #0x0
    1fa4:	b.ne	1fb0 <ext2fs_find_first_zero_generic_bmap+0x34>  // b.any
    1fa8:	mov	x0, #0x16                  	// #22
    1fac:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    1fb0:	ldr	x0, [sp, #40]
    1fb4:	ldr	x1, [x0]
    1fb8:	mov	x0, #0xb70a                	// #46858
    1fbc:	movk	x0, #0x7f2b, lsl #16
    1fc0:	cmp	x1, x0
    1fc4:	b.eq	1ff8 <ext2fs_find_first_zero_generic_bmap+0x7c>  // b.none
    1fc8:	ldr	x0, [sp, #40]
    1fcc:	ldr	x1, [x0]
    1fd0:	mov	x0, #0xb708                	// #46856
    1fd4:	movk	x0, #0x7f2b, lsl #16
    1fd8:	cmp	x1, x0
    1fdc:	b.eq	1ff8 <ext2fs_find_first_zero_generic_bmap+0x7c>  // b.none
    1fe0:	ldr	x0, [sp, #40]
    1fe4:	ldr	x1, [x0]
    1fe8:	mov	x0, #0xb709                	// #46857
    1fec:	movk	x0, #0x7f2b, lsl #16
    1ff0:	cmp	x1, x0
    1ff4:	b.ne	207c <ext2fs_find_first_zero_generic_bmap+0x100>  // b.any
    1ff8:	str	wzr, [sp, #52]
    1ffc:	ldr	x0, [sp, #32]
    2000:	and	x0, x0, #0xffffffff00000000
    2004:	cmp	x0, #0x0
    2008:	b.ne	201c <ext2fs_find_first_zero_generic_bmap+0xa0>  // b.any
    200c:	ldr	x0, [sp, #24]
    2010:	and	x0, x0, #0xffffffff00000000
    2014:	cmp	x0, #0x0
    2018:	b.eq	2034 <ext2fs_find_first_zero_generic_bmap+0xb8>  // b.none
    201c:	ldr	x2, [sp, #32]
    2020:	mov	w1, #0x2                   	// #2
    2024:	ldr	x0, [sp, #40]
    2028:	bl	0 <ext2fs_warn_bitmap2>
    202c:	mov	x0, #0x16                  	// #22
    2030:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    2034:	ldr	x0, [sp, #32]
    2038:	mov	w1, w0
    203c:	ldr	x0, [sp, #24]
    2040:	mov	w2, w0
    2044:	add	x0, sp, #0x34
    2048:	mov	x3, x0
    204c:	ldr	x0, [sp, #40]
    2050:	bl	0 <ext2fs_find_first_zero_generic_bitmap>
    2054:	str	x0, [sp, #64]
    2058:	ldr	x0, [sp, #64]
    205c:	cmp	x0, #0x0
    2060:	b.ne	2074 <ext2fs_find_first_zero_generic_bmap+0xf8>  // b.any
    2064:	ldr	w0, [sp, #52]
    2068:	mov	w1, w0
    206c:	ldr	x0, [sp, #16]
    2070:	str	x1, [x0]
    2074:	ldr	x0, [sp, #64]
    2078:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    207c:	ldr	x0, [sp, #40]
    2080:	ldr	x1, [x0]
    2084:	mov	x0, #0xb76d                	// #46957
    2088:	movk	x0, #0x7f2b, lsl #16
    208c:	cmp	x1, x0
    2090:	b.eq	20cc <ext2fs_find_first_zero_generic_bmap+0x150>  // b.none
    2094:	ldr	x0, [sp, #40]
    2098:	ldr	x1, [x0]
    209c:	mov	x0, #0xb76e                	// #46958
    20a0:	movk	x0, #0x7f2b, lsl #16
    20a4:	cmp	x1, x0
    20a8:	b.eq	20cc <ext2fs_find_first_zero_generic_bmap+0x150>  // b.none
    20ac:	ldr	x0, [sp, #40]
    20b0:	ldr	x1, [x0]
    20b4:	mov	x0, #0xb76f                	// #46959
    20b8:	movk	x0, #0x7f2b, lsl #16
    20bc:	cmp	x1, x0
    20c0:	b.eq	20cc <ext2fs_find_first_zero_generic_bmap+0x150>  // b.none
    20c4:	mov	x0, #0x16                  	// #22
    20c8:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    20cc:	ldr	x0, [sp, #88]
    20d0:	ldr	w0, [x0, #56]
    20d4:	ldr	x1, [sp, #32]
    20d8:	lsr	x0, x1, x0
    20dc:	str	x0, [sp, #80]
    20e0:	ldr	x0, [sp, #88]
    20e4:	ldr	w0, [x0, #56]
    20e8:	ldr	x1, [sp, #24]
    20ec:	lsr	x0, x1, x0
    20f0:	str	x0, [sp, #72]
    20f4:	ldr	x0, [sp, #88]
    20f8:	ldr	x0, [x0, #32]
    20fc:	ldr	x1, [sp, #80]
    2100:	cmp	x1, x0
    2104:	b.cc	212c <ext2fs_find_first_zero_generic_bmap+0x1b0>  // b.lo, b.ul, b.last
    2108:	ldr	x0, [sp, #88]
    210c:	ldr	x0, [x0, #40]
    2110:	ldr	x1, [sp, #72]
    2114:	cmp	x1, x0
    2118:	b.hi	212c <ext2fs_find_first_zero_generic_bmap+0x1b0>  // b.pmore
    211c:	ldr	x1, [sp, #32]
    2120:	ldr	x0, [sp, #24]
    2124:	cmp	x1, x0
    2128:	b.ls	2144 <ext2fs_find_first_zero_generic_bmap+0x1c8>  // b.plast
    212c:	ldr	x2, [sp, #32]
    2130:	mov	w1, #0x2                   	// #2
    2134:	ldr	x0, [sp, #88]
    2138:	bl	0 <warn_bitmap>
    213c:	mov	x0, #0x16                  	// #22
    2140:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    2144:	ldr	x0, [sp, #88]
    2148:	ldr	x0, [x0, #16]
    214c:	ldr	x0, [x0, #120]
    2150:	cmp	x0, #0x0
    2154:	b.eq	21d8 <ext2fs_find_first_zero_generic_bmap+0x25c>  // b.none
    2158:	ldr	x0, [sp, #88]
    215c:	ldr	x0, [x0, #16]
    2160:	ldr	x4, [x0, #120]
    2164:	add	x0, sp, #0x38
    2168:	mov	x3, x0
    216c:	ldr	x2, [sp, #72]
    2170:	ldr	x1, [sp, #80]
    2174:	ldr	x0, [sp, #88]
    2178:	blr	x4
    217c:	str	x0, [sp, #64]
    2180:	ldr	x0, [sp, #64]
    2184:	cmp	x0, #0x0
    2188:	b.eq	2194 <ext2fs_find_first_zero_generic_bmap+0x218>  // b.none
    218c:	ldr	x0, [sp, #64]
    2190:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    2194:	nop
    2198:	b	21a0 <ext2fs_find_first_zero_generic_bmap+0x224>
    219c:	nop
    21a0:	ldr	x1, [sp, #56]
    21a4:	ldr	x0, [sp, #88]
    21a8:	ldr	w0, [x0, #56]
    21ac:	lsl	x0, x1, x0
    21b0:	str	x0, [sp, #56]
    21b4:	ldr	x0, [sp, #56]
    21b8:	ldr	x2, [sp, #32]
    21bc:	ldr	x1, [sp, #32]
    21c0:	cmp	x2, x0
    21c4:	csel	x1, x1, x0, cs  // cs = hs, nlast
    21c8:	ldr	x0, [sp, #16]
    21cc:	str	x1, [x0]
    21d0:	mov	x0, #0x0                   	// #0
    21d4:	b	2228 <ext2fs_find_first_zero_generic_bmap+0x2ac>
    21d8:	ldr	x0, [sp, #80]
    21dc:	str	x0, [sp, #56]
    21e0:	b	2214 <ext2fs_find_first_zero_generic_bmap+0x298>
    21e4:	ldr	x0, [sp, #88]
    21e8:	ldr	x0, [x0, #16]
    21ec:	ldr	x2, [x0, #56]
    21f0:	ldr	x0, [sp, #56]
    21f4:	mov	x1, x0
    21f8:	ldr	x0, [sp, #88]
    21fc:	blr	x2
    2200:	cmp	w0, #0x0
    2204:	b.eq	219c <ext2fs_find_first_zero_generic_bmap+0x220>  // b.none
    2208:	ldr	x0, [sp, #56]
    220c:	add	x0, x0, #0x1
    2210:	str	x0, [sp, #56]
    2214:	ldr	x0, [sp, #56]
    2218:	ldr	x1, [sp, #72]
    221c:	cmp	x1, x0
    2220:	b.cs	21e4 <ext2fs_find_first_zero_generic_bmap+0x268>  // b.hs, b.nlast
    2224:	mov	x0, #0x2                   	// #2
    2228:	ldp	x29, x30, [sp], #96
    222c:	ret

0000000000002230 <ext2fs_find_first_set_generic_bmap>:
    2230:	stp	x29, x30, [sp, #-96]!
    2234:	mov	x29, sp
    2238:	str	x0, [sp, #40]
    223c:	str	x1, [sp, #32]
    2240:	str	x2, [sp, #24]
    2244:	str	x3, [sp, #16]
    2248:	ldr	x0, [sp, #40]
    224c:	str	x0, [sp, #88]
    2250:	ldr	x0, [sp, #40]
    2254:	cmp	x0, #0x0
    2258:	b.ne	2264 <ext2fs_find_first_set_generic_bmap+0x34>  // b.any
    225c:	mov	x0, #0x16                  	// #22
    2260:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    2264:	ldr	x0, [sp, #40]
    2268:	ldr	x1, [x0]
    226c:	mov	x0, #0xb70a                	// #46858
    2270:	movk	x0, #0x7f2b, lsl #16
    2274:	cmp	x1, x0
    2278:	b.eq	22ac <ext2fs_find_first_set_generic_bmap+0x7c>  // b.none
    227c:	ldr	x0, [sp, #40]
    2280:	ldr	x1, [x0]
    2284:	mov	x0, #0xb708                	// #46856
    2288:	movk	x0, #0x7f2b, lsl #16
    228c:	cmp	x1, x0
    2290:	b.eq	22ac <ext2fs_find_first_set_generic_bmap+0x7c>  // b.none
    2294:	ldr	x0, [sp, #40]
    2298:	ldr	x1, [x0]
    229c:	mov	x0, #0xb709                	// #46857
    22a0:	movk	x0, #0x7f2b, lsl #16
    22a4:	cmp	x1, x0
    22a8:	b.ne	2330 <ext2fs_find_first_set_generic_bmap+0x100>  // b.any
    22ac:	str	wzr, [sp, #52]
    22b0:	ldr	x0, [sp, #32]
    22b4:	and	x0, x0, #0xffffffff00000000
    22b8:	cmp	x0, #0x0
    22bc:	b.ne	22d0 <ext2fs_find_first_set_generic_bmap+0xa0>  // b.any
    22c0:	ldr	x0, [sp, #24]
    22c4:	and	x0, x0, #0xffffffff00000000
    22c8:	cmp	x0, #0x0
    22cc:	b.eq	22e8 <ext2fs_find_first_set_generic_bmap+0xb8>  // b.none
    22d0:	ldr	x2, [sp, #32]
    22d4:	mov	w1, #0x2                   	// #2
    22d8:	ldr	x0, [sp, #40]
    22dc:	bl	0 <ext2fs_warn_bitmap2>
    22e0:	mov	x0, #0x16                  	// #22
    22e4:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    22e8:	ldr	x0, [sp, #32]
    22ec:	mov	w1, w0
    22f0:	ldr	x0, [sp, #24]
    22f4:	mov	w2, w0
    22f8:	add	x0, sp, #0x34
    22fc:	mov	x3, x0
    2300:	ldr	x0, [sp, #40]
    2304:	bl	0 <ext2fs_find_first_set_generic_bitmap>
    2308:	str	x0, [sp, #64]
    230c:	ldr	x0, [sp, #64]
    2310:	cmp	x0, #0x0
    2314:	b.ne	2328 <ext2fs_find_first_set_generic_bmap+0xf8>  // b.any
    2318:	ldr	w0, [sp, #52]
    231c:	mov	w1, w0
    2320:	ldr	x0, [sp, #16]
    2324:	str	x1, [x0]
    2328:	ldr	x0, [sp, #64]
    232c:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    2330:	ldr	x0, [sp, #40]
    2334:	ldr	x1, [x0]
    2338:	mov	x0, #0xb76d                	// #46957
    233c:	movk	x0, #0x7f2b, lsl #16
    2340:	cmp	x1, x0
    2344:	b.eq	2380 <ext2fs_find_first_set_generic_bmap+0x150>  // b.none
    2348:	ldr	x0, [sp, #40]
    234c:	ldr	x1, [x0]
    2350:	mov	x0, #0xb76e                	// #46958
    2354:	movk	x0, #0x7f2b, lsl #16
    2358:	cmp	x1, x0
    235c:	b.eq	2380 <ext2fs_find_first_set_generic_bmap+0x150>  // b.none
    2360:	ldr	x0, [sp, #40]
    2364:	ldr	x1, [x0]
    2368:	mov	x0, #0xb76f                	// #46959
    236c:	movk	x0, #0x7f2b, lsl #16
    2370:	cmp	x1, x0
    2374:	b.eq	2380 <ext2fs_find_first_set_generic_bmap+0x150>  // b.none
    2378:	mov	x0, #0x16                  	// #22
    237c:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    2380:	ldr	x0, [sp, #88]
    2384:	ldr	w0, [x0, #56]
    2388:	ldr	x1, [sp, #32]
    238c:	lsr	x0, x1, x0
    2390:	str	x0, [sp, #80]
    2394:	ldr	x0, [sp, #88]
    2398:	ldr	w0, [x0, #56]
    239c:	ldr	x1, [sp, #24]
    23a0:	lsr	x0, x1, x0
    23a4:	str	x0, [sp, #72]
    23a8:	ldr	x0, [sp, #88]
    23ac:	ldr	x0, [x0, #32]
    23b0:	ldr	x1, [sp, #80]
    23b4:	cmp	x1, x0
    23b8:	b.cc	23e0 <ext2fs_find_first_set_generic_bmap+0x1b0>  // b.lo, b.ul, b.last
    23bc:	ldr	x0, [sp, #88]
    23c0:	ldr	x0, [x0, #40]
    23c4:	ldr	x1, [sp, #72]
    23c8:	cmp	x1, x0
    23cc:	b.hi	23e0 <ext2fs_find_first_set_generic_bmap+0x1b0>  // b.pmore
    23d0:	ldr	x1, [sp, #32]
    23d4:	ldr	x0, [sp, #24]
    23d8:	cmp	x1, x0
    23dc:	b.ls	23f8 <ext2fs_find_first_set_generic_bmap+0x1c8>  // b.plast
    23e0:	ldr	x2, [sp, #32]
    23e4:	mov	w1, #0x2                   	// #2
    23e8:	ldr	x0, [sp, #88]
    23ec:	bl	0 <warn_bitmap>
    23f0:	mov	x0, #0x16                  	// #22
    23f4:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    23f8:	ldr	x0, [sp, #88]
    23fc:	ldr	x0, [x0, #16]
    2400:	ldr	x0, [x0, #128]
    2404:	cmp	x0, #0x0
    2408:	b.eq	248c <ext2fs_find_first_set_generic_bmap+0x25c>  // b.none
    240c:	ldr	x0, [sp, #88]
    2410:	ldr	x0, [x0, #16]
    2414:	ldr	x4, [x0, #128]
    2418:	add	x0, sp, #0x38
    241c:	mov	x3, x0
    2420:	ldr	x2, [sp, #72]
    2424:	ldr	x1, [sp, #80]
    2428:	ldr	x0, [sp, #88]
    242c:	blr	x4
    2430:	str	x0, [sp, #64]
    2434:	ldr	x0, [sp, #64]
    2438:	cmp	x0, #0x0
    243c:	b.eq	2448 <ext2fs_find_first_set_generic_bmap+0x218>  // b.none
    2440:	ldr	x0, [sp, #64]
    2444:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    2448:	nop
    244c:	b	2454 <ext2fs_find_first_set_generic_bmap+0x224>
    2450:	nop
    2454:	ldr	x1, [sp, #56]
    2458:	ldr	x0, [sp, #88]
    245c:	ldr	w0, [x0, #56]
    2460:	lsl	x0, x1, x0
    2464:	str	x0, [sp, #56]
    2468:	ldr	x0, [sp, #56]
    246c:	ldr	x2, [sp, #32]
    2470:	ldr	x1, [sp, #32]
    2474:	cmp	x2, x0
    2478:	csel	x1, x1, x0, cs  // cs = hs, nlast
    247c:	ldr	x0, [sp, #16]
    2480:	str	x1, [x0]
    2484:	mov	x0, #0x0                   	// #0
    2488:	b	24dc <ext2fs_find_first_set_generic_bmap+0x2ac>
    248c:	ldr	x0, [sp, #80]
    2490:	str	x0, [sp, #56]
    2494:	b	24c8 <ext2fs_find_first_set_generic_bmap+0x298>
    2498:	ldr	x0, [sp, #88]
    249c:	ldr	x0, [x0, #16]
    24a0:	ldr	x2, [x0, #56]
    24a4:	ldr	x0, [sp, #56]
    24a8:	mov	x1, x0
    24ac:	ldr	x0, [sp, #88]
    24b0:	blr	x2
    24b4:	cmp	w0, #0x0
    24b8:	b.ne	2450 <ext2fs_find_first_set_generic_bmap+0x220>  // b.any
    24bc:	ldr	x0, [sp, #56]
    24c0:	add	x0, x0, #0x1
    24c4:	str	x0, [sp, #56]
    24c8:	ldr	x0, [sp, #56]
    24cc:	ldr	x1, [sp, #72]
    24d0:	cmp	x1, x0
    24d4:	b.cs	2498 <ext2fs_find_first_set_generic_bmap+0x268>  // b.hs, b.nlast
    24d8:	mov	x0, #0x2                   	// #2
    24dc:	ldp	x29, x30, [sp], #96
    24e0:	ret

get_num_dirs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_get_num_dirs>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #24]
  14:	ldr	x1, [x0]
  18:	mov	x0, #0xb701                	// #46849
  1c:	movk	x0, #0x7f2b, lsl #16
  20:	cmp	x1, x0
  24:	b.eq	34 <ext2fs_get_num_dirs+0x34>  // b.none
  28:	mov	x0, #0xb701                	// #46849
  2c:	movk	x0, #0x7f2b, lsl #16
  30:	b	f8 <ext2fs_get_num_dirs+0xf8>
  34:	str	wzr, [sp, #40]
  38:	ldr	x0, [sp, #24]
  3c:	ldr	x0, [x0, #32]
  40:	ldr	w0, [x0, #40]
  44:	str	w0, [sp, #36]
  48:	str	wzr, [sp, #44]
  4c:	b	ac <ext2fs_get_num_dirs+0xac>
  50:	ldr	w1, [sp, #44]
  54:	ldr	x0, [sp, #24]
  58:	bl	0 <ext2fs_bg_used_dirs_count>
  5c:	mov	w1, w0
  60:	ldr	w0, [sp, #36]
  64:	cmp	w0, w1
  68:	b.cs	84 <ext2fs_get_num_dirs+0x84>  // b.hs, b.nlast
  6c:	ldr	w0, [sp, #36]
  70:	lsr	w0, w0, #3
  74:	ldr	w1, [sp, #40]
  78:	add	w0, w1, w0
  7c:	str	w0, [sp, #40]
  80:	b	a0 <ext2fs_get_num_dirs+0xa0>
  84:	ldr	w1, [sp, #44]
  88:	ldr	x0, [sp, #24]
  8c:	bl	0 <ext2fs_bg_used_dirs_count>
  90:	mov	w1, w0
  94:	ldr	w0, [sp, #40]
  98:	add	w0, w0, w1
  9c:	str	w0, [sp, #40]
  a0:	ldr	w0, [sp, #44]
  a4:	add	w0, w0, #0x1
  a8:	str	w0, [sp, #44]
  ac:	ldr	x0, [sp, #24]
  b0:	ldr	w0, [x0, #48]
  b4:	ldr	w1, [sp, #44]
  b8:	cmp	w1, w0
  bc:	b.cc	50 <ext2fs_get_num_dirs+0x50>  // b.lo, b.ul, b.last
  c0:	ldr	x0, [sp, #24]
  c4:	ldr	x0, [x0, #32]
  c8:	ldr	w0, [x0]
  cc:	ldr	w1, [sp, #40]
  d0:	cmp	w1, w0
  d4:	b.ls	e8 <ext2fs_get_num_dirs+0xe8>  // b.plast
  d8:	ldr	x0, [sp, #24]
  dc:	ldr	x0, [x0, #32]
  e0:	ldr	w0, [x0]
  e4:	str	w0, [sp, #40]
  e8:	ldr	x0, [sp, #16]
  ec:	ldr	w1, [sp, #40]
  f0:	str	w1, [x0]
  f4:	mov	x0, #0x0                   	// #0
  f8:	ldp	x29, x30, [sp], #48
  fc:	ret

get_pathname.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <get_pathname_proc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	w2, [sp, #32]
  14:	str	x3, [sp, #24]
  18:	str	x4, [sp, #16]
  1c:	ldr	x0, [sp, #40]
  20:	bl	0 <ext2fs_dirent_name_len>
  24:	str	w0, [sp, #76]
  28:	ldr	x0, [sp, #16]
  2c:	str	x0, [sp, #64]
  30:	ldr	w0, [sp, #76]
  34:	cmp	w0, #0x2
  38:	b.ne	70 <get_pathname_proc+0x70>  // b.any
  3c:	ldr	x0, [sp, #40]
  40:	add	x3, x0, #0x8
  44:	mov	x2, #0x2                   	// #2
  48:	adrp	x0, 0 <get_pathname_proc>
  4c:	add	x1, x0, #0x0
  50:	mov	x0, x3
  54:	bl	0 <strncmp>
  58:	cmp	w0, #0x0
  5c:	b.ne	70 <get_pathname_proc+0x70>  // b.any
  60:	ldr	x0, [sp, #40]
  64:	ldr	w1, [x0]
  68:	ldr	x0, [sp, #64]
  6c:	str	w1, [x0, #4]
  70:	ldr	x0, [sp, #40]
  74:	ldr	w1, [x0]
  78:	ldr	x0, [sp, #64]
  7c:	ldr	w0, [x0]
  80:	cmp	w1, w0
  84:	b.ne	10c <get_pathname_proc+0x10c>  // b.any
  88:	ldr	w0, [sp, #76]
  8c:	add	w0, w0, #0x1
  90:	sxtw	x2, w0
  94:	ldr	x0, [sp, #64]
  98:	add	x0, x0, #0x8
  9c:	mov	x1, x0
  a0:	mov	x0, x2
  a4:	bl	0 <ext2fs_get_mem>
  a8:	str	x0, [sp, #56]
  ac:	ldr	x0, [sp, #56]
  b0:	cmp	x0, #0x0
  b4:	b.eq	cc <get_pathname_proc+0xcc>  // b.none
  b8:	ldr	x0, [sp, #64]
  bc:	ldr	x1, [sp, #56]
  c0:	str	x1, [x0, #16]
  c4:	mov	w0, #0x2                   	// #2
  c8:	b	110 <get_pathname_proc+0x110>
  cc:	ldr	x0, [sp, #64]
  d0:	ldr	x3, [x0, #8]
  d4:	ldr	x0, [sp, #40]
  d8:	add	x0, x0, #0x8
  dc:	ldrsw	x1, [sp, #76]
  e0:	mov	x2, x1
  e4:	mov	x1, x0
  e8:	mov	x0, x3
  ec:	bl	0 <strncpy>
  f0:	ldr	x0, [sp, #64]
  f4:	ldr	x1, [x0, #8]
  f8:	ldrsw	x0, [sp, #76]
  fc:	add	x0, x1, x0
 100:	strb	wzr, [x0]
 104:	mov	w0, #0x2                   	// #2
 108:	b	110 <get_pathname_proc+0x110>
 10c:	mov	w0, #0x0                   	// #0
 110:	ldp	x29, x30, [sp], #80
 114:	ret

0000000000000118 <ext2fs_get_pathname_int>:
 118:	stp	x29, x30, [sp, #-160]!
 11c:	mov	x29, sp
 120:	str	x19, [sp, #16]
 124:	str	x0, [sp, #72]
 128:	str	w1, [sp, #68]
 12c:	str	w2, [sp, #64]
 130:	str	w3, [sp, #60]
 134:	str	x4, [sp, #48]
 138:	str	x5, [sp, #40]
 13c:	str	xzr, [sp, #120]
 140:	ldr	w1, [sp, #68]
 144:	ldr	w0, [sp, #64]
 148:	cmp	w1, w0
 14c:	b.ne	1b0 <ext2fs_get_pathname_int+0x98>  // b.any
 150:	ldr	x1, [sp, #40]
 154:	mov	x0, #0x2                   	// #2
 158:	bl	0 <ext2fs_get_mem>
 15c:	str	x0, [sp, #152]
 160:	ldr	x0, [sp, #152]
 164:	cmp	x0, #0x0
 168:	b.eq	174 <ext2fs_get_pathname_int+0x5c>  // b.none
 16c:	ldr	x0, [sp, #152]
 170:	b	478 <ext2fs_get_pathname_int+0x360>
 174:	ldr	x0, [sp, #40]
 178:	ldr	x2, [x0]
 17c:	ldr	w0, [sp, #68]
 180:	cmp	w0, #0x2
 184:	b.ne	194 <ext2fs_get_pathname_int+0x7c>  // b.any
 188:	adrp	x0, 0 <get_pathname_proc>
 18c:	add	x0, x0, #0x0
 190:	b	19c <ext2fs_get_pathname_int+0x84>
 194:	adrp	x0, 0 <get_pathname_proc>
 198:	add	x0, x0, #0x0
 19c:	mov	x1, x0
 1a0:	mov	x0, x2
 1a4:	bl	0 <strcpy>
 1a8:	mov	x0, #0x0                   	// #0
 1ac:	b	478 <ext2fs_get_pathname_int+0x360>
 1b0:	ldr	w0, [sp, #68]
 1b4:	cmp	w0, #0x0
 1b8:	b.eq	1c8 <ext2fs_get_pathname_int+0xb0>  // b.none
 1bc:	ldr	w0, [sp, #60]
 1c0:	cmp	w0, #0x0
 1c4:	b.ge	208 <ext2fs_get_pathname_int+0xf0>  // b.tcont
 1c8:	ldr	x1, [sp, #40]
 1cc:	mov	x0, #0x4                   	// #4
 1d0:	bl	0 <ext2fs_get_mem>
 1d4:	str	x0, [sp, #152]
 1d8:	ldr	x0, [sp, #152]
 1dc:	cmp	x0, #0x0
 1e0:	b.eq	1ec <ext2fs_get_pathname_int+0xd4>  // b.none
 1e4:	ldr	x0, [sp, #152]
 1e8:	b	478 <ext2fs_get_pathname_int+0x360>
 1ec:	ldr	x0, [sp, #40]
 1f0:	ldr	x0, [x0]
 1f4:	mov	w1, #0x2e2e                	// #11822
 1f8:	movk	w1, #0x2e, lsl #16
 1fc:	str	w1, [x0]
 200:	mov	x0, #0x0                   	// #0
 204:	b	478 <ext2fs_get_pathname_int+0x360>
 208:	ldr	w0, [sp, #64]
 20c:	str	w0, [sp, #128]
 210:	str	wzr, [sp, #132]
 214:	str	xzr, [sp, #136]
 218:	str	xzr, [sp, #144]
 21c:	add	x0, sp, #0x80
 220:	mov	x5, x0
 224:	adrp	x0, 0 <get_pathname_proc>
 228:	add	x4, x0, #0x0
 22c:	ldr	x3, [sp, #48]
 230:	mov	w2, #0x0                   	// #0
 234:	ldr	w1, [sp, #68]
 238:	ldr	x0, [sp, #72]
 23c:	bl	0 <ext2fs_dir_iterate>
 240:	str	x0, [sp, #152]
 244:	ldr	x1, [sp, #152]
 248:	mov	x0, #0xb74a                	// #46922
 24c:	movk	x0, #0x7f2b, lsl #16
 250:	cmp	x1, x0
 254:	b.ne	2e0 <ext2fs_get_pathname_int+0x1c8>  // b.any
 258:	ldr	w0, [sp, #64]
 25c:	cmp	w0, #0x0
 260:	b.eq	288 <ext2fs_get_pathname_int+0x170>  // b.none
 264:	add	x5, sp, #0x50
 268:	ldr	w4, [sp, #64]
 26c:	ldr	w3, [sp, #68]
 270:	adrp	x0, 0 <get_pathname_proc>
 274:	add	x2, x0, #0x0
 278:	mov	x1, #0x20                  	// #32
 27c:	mov	x0, x5
 280:	bl	0 <snprintf>
 284:	b	2a4 <ext2fs_get_pathname_int+0x18c>
 288:	add	x4, sp, #0x50
 28c:	ldr	w3, [sp, #68]
 290:	adrp	x0, 0 <get_pathname_proc>
 294:	add	x2, x0, #0x0
 298:	mov	x1, #0x20                  	// #32
 29c:	mov	x0, x4
 2a0:	bl	0 <snprintf>
 2a4:	add	x0, sp, #0x50
 2a8:	bl	0 <strlen>
 2ac:	add	x0, x0, #0x1
 2b0:	ldr	x1, [sp, #40]
 2b4:	bl	0 <ext2fs_get_mem>
 2b8:	str	x0, [sp, #152]
 2bc:	ldr	x0, [sp, #152]
 2c0:	cmp	x0, #0x0
 2c4:	b.ne	444 <ext2fs_get_pathname_int+0x32c>  // b.any
 2c8:	ldr	x0, [sp, #40]
 2cc:	ldr	x0, [x0]
 2d0:	add	x1, sp, #0x50
 2d4:	bl	0 <strcpy>
 2d8:	mov	x0, #0x0                   	// #0
 2dc:	b	478 <ext2fs_get_pathname_int+0x360>
 2e0:	ldr	x0, [sp, #152]
 2e4:	cmp	x0, #0x0
 2e8:	b.ne	44c <ext2fs_get_pathname_int+0x334>  // b.any
 2ec:	ldr	x0, [sp, #144]
 2f0:	cmp	x0, #0x0
 2f4:	b.eq	304 <ext2fs_get_pathname_int+0x1ec>  // b.none
 2f8:	ldr	x0, [sp, #144]
 2fc:	str	x0, [sp, #152]
 300:	b	460 <ext2fs_get_pathname_int+0x348>
 304:	ldr	w1, [sp, #132]
 308:	ldr	w0, [sp, #60]
 30c:	sub	w0, w0, #0x1
 310:	add	x2, sp, #0x78
 314:	mov	x5, x2
 318:	ldr	x4, [sp, #48]
 31c:	mov	w3, w0
 320:	ldr	w2, [sp, #68]
 324:	ldr	x0, [sp, #72]
 328:	bl	118 <ext2fs_get_pathname_int>
 32c:	str	x0, [sp, #152]
 330:	ldr	x0, [sp, #152]
 334:	cmp	x0, #0x0
 338:	b.ne	454 <ext2fs_get_pathname_int+0x33c>  // b.any
 33c:	ldr	w0, [sp, #64]
 340:	cmp	w0, #0x0
 344:	b.ne	35c <ext2fs_get_pathname_int+0x244>  // b.any
 348:	ldr	x1, [sp, #120]
 34c:	ldr	x0, [sp, #40]
 350:	str	x1, [x0]
 354:	mov	x0, #0x0                   	// #0
 358:	b	478 <ext2fs_get_pathname_int+0x360>
 35c:	ldr	x0, [sp, #136]
 360:	cmp	x0, #0x0
 364:	b.eq	394 <ext2fs_get_pathname_int+0x27c>  // b.none
 368:	ldr	x0, [sp, #120]
 36c:	bl	0 <strlen>
 370:	mov	x19, x0
 374:	ldr	x0, [sp, #136]
 378:	bl	0 <strlen>
 37c:	add	x0, x19, x0
 380:	add	x0, x0, #0x2
 384:	add	x1, sp, #0x70
 388:	bl	0 <ext2fs_get_mem>
 38c:	str	x0, [sp, #152]
 390:	b	3ac <ext2fs_get_pathname_int+0x294>
 394:	ldr	x0, [sp, #120]
 398:	bl	0 <strlen>
 39c:	add	x0, x0, #0x5
 3a0:	add	x1, sp, #0x70
 3a4:	bl	0 <ext2fs_get_mem>
 3a8:	str	x0, [sp, #152]
 3ac:	ldr	x0, [sp, #152]
 3b0:	cmp	x0, #0x0
 3b4:	b.ne	45c <ext2fs_get_pathname_int+0x344>  // b.any
 3b8:	ldr	x0, [sp, #112]
 3bc:	strb	wzr, [x0]
 3c0:	ldr	x0, [sp, #120]
 3c4:	add	x0, x0, #0x1
 3c8:	ldrb	w0, [x0]
 3cc:	cmp	w0, #0x0
 3d0:	b.eq	3e0 <ext2fs_get_pathname_int+0x2c8>  // b.none
 3d4:	ldr	x0, [sp, #112]
 3d8:	ldr	x1, [sp, #120]
 3dc:	bl	0 <strcat>
 3e0:	ldr	x19, [sp, #112]
 3e4:	mov	x0, x19
 3e8:	bl	0 <strlen>
 3ec:	add	x0, x19, x0
 3f0:	mov	w1, #0x2f                  	// #47
 3f4:	strh	w1, [x0]
 3f8:	ldr	x0, [sp, #136]
 3fc:	cmp	x0, #0x0
 400:	b.eq	414 <ext2fs_get_pathname_int+0x2fc>  // b.none
 404:	ldr	x0, [sp, #112]
 408:	ldr	x1, [sp, #136]
 40c:	bl	0 <strcat>
 410:	b	430 <ext2fs_get_pathname_int+0x318>
 414:	ldr	x19, [sp, #112]
 418:	mov	x0, x19
 41c:	bl	0 <strlen>
 420:	add	x0, x19, x0
 424:	mov	w1, #0x3f3f                	// #16191
 428:	movk	w1, #0x3f, lsl #16
 42c:	str	w1, [x0]
 430:	ldr	x1, [sp, #112]
 434:	ldr	x0, [sp, #40]
 438:	str	x1, [x0]
 43c:	str	xzr, [sp, #152]
 440:	b	460 <ext2fs_get_pathname_int+0x348>
 444:	nop
 448:	b	460 <ext2fs_get_pathname_int+0x348>
 44c:	nop
 450:	b	460 <ext2fs_get_pathname_int+0x348>
 454:	nop
 458:	b	460 <ext2fs_get_pathname_int+0x348>
 45c:	nop
 460:	add	x0, sp, #0x78
 464:	bl	0 <ext2fs_free_mem>
 468:	add	x0, sp, #0x80
 46c:	add	x0, x0, #0x8
 470:	bl	0 <ext2fs_free_mem>
 474:	ldr	x0, [sp, #152]
 478:	ldr	x19, [sp, #16]
 47c:	ldp	x29, x30, [sp], #160
 480:	ret

0000000000000484 <ext2fs_get_pathname>:
 484:	stp	x29, x30, [sp, #-64]!
 488:	mov	x29, sp
 48c:	str	x0, [sp, #40]
 490:	str	w1, [sp, #36]
 494:	str	w2, [sp, #32]
 498:	str	x3, [sp, #24]
 49c:	ldr	x0, [sp, #40]
 4a0:	ldr	x1, [x0]
 4a4:	mov	x0, #0xb701                	// #46849
 4a8:	movk	x0, #0x7f2b, lsl #16
 4ac:	cmp	x1, x0
 4b0:	b.eq	4c0 <ext2fs_get_pathname+0x3c>  // b.none
 4b4:	mov	x0, #0xb701                	// #46849
 4b8:	movk	x0, #0x7f2b, lsl #16
 4bc:	b	530 <ext2fs_get_pathname+0xac>
 4c0:	ldr	x0, [sp, #40]
 4c4:	ldr	w0, [x0, #40]
 4c8:	mov	w0, w0
 4cc:	add	x1, sp, #0x30
 4d0:	bl	0 <ext2fs_get_mem>
 4d4:	str	x0, [sp, #56]
 4d8:	ldr	x0, [sp, #56]
 4dc:	cmp	x0, #0x0
 4e0:	b.eq	4ec <ext2fs_get_pathname+0x68>  // b.none
 4e4:	ldr	x0, [sp, #56]
 4e8:	b	530 <ext2fs_get_pathname+0xac>
 4ec:	ldr	w1, [sp, #36]
 4f0:	ldr	w0, [sp, #32]
 4f4:	cmp	w1, w0
 4f8:	b.ne	500 <ext2fs_get_pathname+0x7c>  // b.any
 4fc:	str	wzr, [sp, #32]
 500:	ldr	x0, [sp, #48]
 504:	ldr	x5, [sp, #24]
 508:	mov	x4, x0
 50c:	mov	w3, #0x20                  	// #32
 510:	ldr	w2, [sp, #32]
 514:	ldr	w1, [sp, #36]
 518:	ldr	x0, [sp, #40]
 51c:	bl	118 <ext2fs_get_pathname_int>
 520:	str	x0, [sp, #56]
 524:	add	x0, sp, #0x30
 528:	bl	0 <ext2fs_free_mem>
 52c:	ldr	x0, [sp, #56]
 530:	ldp	x29, x30, [sp], #64
 534:	ret

getsize.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <valid_offset>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	mov	w2, #0x0                   	// #0
  14:	ldr	x1, [sp, #16]
  18:	ldr	w0, [sp, #28]
  1c:	bl	0 <ext2fs_llseek>
  20:	cmp	x0, #0x0
  24:	b.ge	30 <valid_offset+0x30>  // b.tcont
  28:	mov	w0, #0x0                   	// #0
  2c:	b	58 <valid_offset+0x58>
  30:	add	x0, sp, #0x2f
  34:	mov	x2, #0x1                   	// #1
  38:	mov	x1, x0
  3c:	ldr	w0, [sp, #28]
  40:	bl	0 <read>
  44:	cmp	x0, #0x0
  48:	b.gt	54 <valid_offset+0x54>
  4c:	mov	w0, #0x0                   	// #0
  50:	b	58 <valid_offset+0x58>
  54:	mov	w0, #0x1                   	// #1
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

0000000000000060 <ext2fs_get_device_size2>:
  60:	stp	x29, x30, [sp, #-496]!
  64:	mov	x29, sp
  68:	str	x0, [sp, #40]
  6c:	str	w1, [sp, #36]
  70:	str	x2, [sp, #24]
  74:	str	wzr, [sp, #472]
  78:	mov	w2, #0x0                   	// #0
  7c:	mov	w1, #0x0                   	// #0
  80:	ldr	x0, [sp, #40]
  84:	bl	0 <ext2fs_open_file>
  88:	str	w0, [sp, #468]
  8c:	ldr	w0, [sp, #468]
  90:	cmp	w0, #0x0
  94:	b.ge	a8 <ext2fs_get_device_size2+0x48>  // b.tcont
  98:	bl	0 <__errno_location>
  9c:	ldr	w0, [x0]
  a0:	sxtw	x0, w0
  a4:	b	2dc <ext2fs_get_device_size2+0x27c>
  a8:	mov	w0, #0x1                   	// #1
  ac:	str	w0, [sp, #476]
  b0:	add	x0, sp, #0x30
  b4:	bl	0 <uname>
  b8:	cmp	w0, #0x0
  bc:	b.ne	f4 <ext2fs_get_device_size2+0x94>  // b.any
  c0:	ldrb	w0, [sp, #178]
  c4:	cmp	w0, #0x32
  c8:	b.ne	f4 <ext2fs_get_device_size2+0x94>  // b.any
  cc:	ldrb	w0, [sp, #179]
  d0:	cmp	w0, #0x2e
  d4:	b.ne	f4 <ext2fs_get_device_size2+0x94>  // b.any
  d8:	ldrb	w0, [sp, #180]
  dc:	cmp	w0, #0x35
  e0:	b.hi	f4 <ext2fs_get_device_size2+0x94>  // b.pmore
  e4:	ldrb	w0, [sp, #181]
  e8:	cmp	w0, #0x2e
  ec:	b.ne	f4 <ext2fs_get_device_size2+0x94>  // b.any
  f0:	str	wzr, [sp, #476]
  f4:	ldr	w0, [sp, #476]
  f8:	cmp	w0, #0x0
  fc:	b.eq	138 <ext2fs_get_device_size2+0xd8>  // b.none
 100:	add	x0, sp, #0x1c0
 104:	mov	x2, x0
 108:	mov	x1, #0x1272                	// #4722
 10c:	movk	x1, #0x8008, lsl #16
 110:	ldr	w0, [sp, #468]
 114:	bl	0 <ioctl>
 118:	cmp	w0, #0x0
 11c:	b.lt	138 <ext2fs_get_device_size2+0xd8>  // b.tstop
 120:	ldr	x1, [sp, #448]
 124:	ldrsw	x0, [sp, #36]
 128:	udiv	x1, x1, x0
 12c:	ldr	x0, [sp, #24]
 130:	str	x1, [x0]
 134:	b	2d0 <ext2fs_get_device_size2+0x270>
 138:	add	x0, sp, #0x1b8
 13c:	mov	x2, x0
 140:	mov	x1, #0x1260                	// #4704
 144:	ldr	w0, [sp, #468]
 148:	bl	0 <ioctl>
 14c:	cmp	w0, #0x0
 150:	b.lt	180 <ext2fs_get_device_size2+0x120>  // b.tstop
 154:	ldr	x1, [sp, #440]
 158:	ldr	w0, [sp, #36]
 15c:	add	w2, w0, #0x1ff
 160:	cmp	w0, #0x0
 164:	csel	w0, w2, w0, lt  // lt = tstop
 168:	asr	w0, w0, #9
 16c:	sxtw	x0, w0
 170:	udiv	x1, x1, x0
 174:	ldr	x0, [sp, #24]
 178:	str	x1, [x0]
 17c:	b	2d0 <ext2fs_get_device_size2+0x270>
 180:	add	x0, sp, #0x30
 184:	mov	x2, x0
 188:	mov	x1, #0x204                 	// #516
 18c:	movk	x1, #0x8020, lsl #16
 190:	ldr	w0, [sp, #468]
 194:	bl	0 <ioctl>
 198:	cmp	w0, #0x0
 19c:	b.lt	1cc <ext2fs_get_device_size2+0x16c>  // b.tstop
 1a0:	ldr	w1, [sp, #48]
 1a4:	ldr	w0, [sp, #36]
 1a8:	add	w2, w0, #0x1ff
 1ac:	cmp	w0, #0x0
 1b0:	csel	w0, w2, w0, lt  // lt = tstop
 1b4:	asr	w0, w0, #9
 1b8:	udiv	w0, w1, w0
 1bc:	mov	w1, w0
 1c0:	ldr	x0, [sp, #24]
 1c4:	str	x1, [x0]
 1c8:	b	2d0 <ext2fs_get_device_size2+0x270>
 1cc:	add	x0, sp, #0x30
 1d0:	mov	x1, x0
 1d4:	ldr	w0, [sp, #468]
 1d8:	bl	0 <ext2fs_fstat>
 1dc:	cmp	w0, #0x0
 1e0:	b.ne	210 <ext2fs_get_device_size2+0x1b0>  // b.any
 1e4:	ldr	w0, [sp, #64]
 1e8:	and	w0, w0, #0xf000
 1ec:	cmp	w0, #0x8, lsl #12
 1f0:	b.ne	210 <ext2fs_get_device_size2+0x1b0>  // b.any
 1f4:	ldr	x1, [sp, #96]
 1f8:	ldrsw	x0, [sp, #36]
 1fc:	sdiv	x0, x1, x0
 200:	mov	x1, x0
 204:	ldr	x0, [sp, #24]
 208:	str	x1, [x0]
 20c:	b	2d0 <ext2fs_get_device_size2+0x270>
 210:	str	xzr, [sp, #480]
 214:	mov	x0, #0x400                 	// #1024
 218:	str	x0, [sp, #488]
 21c:	b	234 <ext2fs_get_device_size2+0x1d4>
 220:	ldr	x0, [sp, #488]
 224:	str	x0, [sp, #480]
 228:	ldr	x0, [sp, #488]
 22c:	lsl	x0, x0, #1
 230:	str	x0, [sp, #488]
 234:	ldr	x1, [sp, #488]
 238:	ldr	w0, [sp, #468]
 23c:	bl	0 <valid_offset>
 240:	cmp	w0, #0x0
 244:	b.ne	220 <ext2fs_get_device_size2+0x1c0>  // b.any
 248:	b	290 <ext2fs_get_device_size2+0x230>
 24c:	ldr	x1, [sp, #480]
 250:	ldr	x0, [sp, #488]
 254:	add	x0, x1, x0
 258:	lsr	x1, x0, #63
 25c:	add	x0, x1, x0
 260:	asr	x0, x0, #1
 264:	str	x0, [sp, #456]
 268:	ldr	x1, [sp, #456]
 26c:	ldr	w0, [sp, #468]
 270:	bl	0 <valid_offset>
 274:	cmp	w0, #0x0
 278:	b.eq	288 <ext2fs_get_device_size2+0x228>  // b.none
 27c:	ldr	x0, [sp, #456]
 280:	str	x0, [sp, #480]
 284:	b	290 <ext2fs_get_device_size2+0x230>
 288:	ldr	x0, [sp, #456]
 28c:	str	x0, [sp, #488]
 290:	ldr	x0, [sp, #488]
 294:	sub	x0, x0, #0x1
 298:	ldr	x1, [sp, #480]
 29c:	cmp	x1, x0
 2a0:	b.lt	24c <ext2fs_get_device_size2+0x1ec>  // b.tstop
 2a4:	mov	x1, #0x0                   	// #0
 2a8:	ldr	w0, [sp, #468]
 2ac:	bl	0 <valid_offset>
 2b0:	ldr	x0, [sp, #480]
 2b4:	add	x0, x0, #0x1
 2b8:	str	x0, [sp, #448]
 2bc:	ldr	x1, [sp, #448]
 2c0:	ldrsw	x0, [sp, #36]
 2c4:	udiv	x1, x1, x0
 2c8:	ldr	x0, [sp, #24]
 2cc:	str	x1, [x0]
 2d0:	ldr	w0, [sp, #468]
 2d4:	bl	0 <close>
 2d8:	ldrsw	x0, [sp, #472]
 2dc:	ldp	x29, x30, [sp], #496
 2e0:	ret

00000000000002e4 <ext2fs_get_device_size>:
 2e4:	stp	x29, x30, [sp, #-64]!
 2e8:	mov	x29, sp
 2ec:	str	x0, [sp, #40]
 2f0:	str	w1, [sp, #36]
 2f4:	str	x2, [sp, #24]
 2f8:	add	x0, sp, #0x30
 2fc:	mov	x2, x0
 300:	ldr	w1, [sp, #36]
 304:	ldr	x0, [sp, #40]
 308:	bl	60 <ext2fs_get_device_size2>
 30c:	str	x0, [sp, #56]
 310:	ldr	x0, [sp, #56]
 314:	cmp	x0, #0x0
 318:	b.eq	324 <ext2fs_get_device_size+0x40>  // b.none
 31c:	ldr	x0, [sp, #56]
 320:	b	350 <ext2fs_get_device_size+0x6c>
 324:	ldr	x1, [sp, #48]
 328:	mov	x0, #0xffffffff            	// #4294967295
 32c:	cmp	x1, x0
 330:	b.ls	33c <ext2fs_get_device_size+0x58>  // b.plast
 334:	mov	x0, #0x1b                  	// #27
 338:	b	350 <ext2fs_get_device_size+0x6c>
 33c:	ldr	x0, [sp, #48]
 340:	mov	w1, w0
 344:	ldr	x0, [sp, #24]
 348:	str	w1, [x0]
 34c:	mov	x0, #0x0                   	// #0
 350:	ldp	x29, x30, [sp], #64
 354:	ret

getsectsize.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_get_device_sectsize>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	mov	w2, #0x0                   	// #0
  14:	mov	w1, #0x0                   	// #0
  18:	ldr	x0, [sp, #24]
  1c:	bl	0 <ext2fs_open_file>
  20:	str	w0, [sp, #44]
  24:	ldr	w0, [sp, #44]
  28:	cmp	w0, #0x0
  2c:	b.ge	40 <ext2fs_get_device_sectsize+0x40>  // b.tcont
  30:	bl	0 <__errno_location>
  34:	ldr	w0, [x0]
  38:	sxtw	x0, w0
  3c:	b	7c <ext2fs_get_device_sectsize+0x7c>
  40:	ldr	x2, [sp, #16]
  44:	mov	x1, #0x1268                	// #4712
  48:	ldr	w0, [sp, #44]
  4c:	bl	0 <ioctl>
  50:	cmp	w0, #0x0
  54:	b.lt	68 <ext2fs_get_device_sectsize+0x68>  // b.tstop
  58:	ldr	w0, [sp, #44]
  5c:	bl	0 <close>
  60:	mov	x0, #0x0                   	// #0
  64:	b	7c <ext2fs_get_device_sectsize+0x7c>
  68:	ldr	x0, [sp, #16]
  6c:	str	wzr, [x0]
  70:	ldr	w0, [sp, #44]
  74:	bl	0 <close>
  78:	mov	x0, #0x0                   	// #0
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

0000000000000084 <ext2fs_get_dio_alignment>:
  84:	stp	x29, x30, [sp, #-48]!
  88:	mov	x29, sp
  8c:	str	w0, [sp, #28]
  90:	str	wzr, [sp, #44]
  94:	add	x0, sp, #0x2c
  98:	mov	x2, x0
  9c:	mov	x1, #0x1268                	// #4712
  a0:	ldr	w0, [sp, #28]
  a4:	bl	0 <ioctl>
  a8:	cmp	w0, #0x0
  ac:	b.ge	b4 <ext2fs_get_dio_alignment+0x30>  // b.tcont
  b0:	str	wzr, [sp, #44]
  b4:	ldr	w0, [sp, #44]
  b8:	cmp	w0, #0x0
  bc:	b.gt	cc <ext2fs_get_dio_alignment+0x48>
  c0:	mov	w0, #0x1e                  	// #30
  c4:	bl	0 <sysconf>
  c8:	str	w0, [sp, #44]
  cc:	ldr	w0, [sp, #44]
  d0:	cmp	w0, #0x0
  d4:	b.gt	e0 <ext2fs_get_dio_alignment+0x5c>
  d8:	bl	0 <getpagesize>
  dc:	str	w0, [sp, #44]
  e0:	ldr	w0, [sp, #44]
  e4:	cmp	w0, #0x0
  e8:	b.gt	f4 <ext2fs_get_dio_alignment+0x70>
  ec:	mov	w0, #0x1000                	// #4096
  f0:	str	w0, [sp, #44]
  f4:	ldr	w0, [sp, #44]
  f8:	ldp	x29, x30, [sp], #48
  fc:	ret

0000000000000100 <ext2fs_get_device_phys_sectsize>:
 100:	stp	x29, x30, [sp, #-48]!
 104:	mov	x29, sp
 108:	str	x0, [sp, #24]
 10c:	str	x1, [sp, #16]
 110:	mov	w2, #0x0                   	// #0
 114:	mov	w1, #0x0                   	// #0
 118:	ldr	x0, [sp, #24]
 11c:	bl	0 <ext2fs_open_file>
 120:	str	w0, [sp, #44]
 124:	ldr	w0, [sp, #44]
 128:	cmp	w0, #0x0
 12c:	b.ge	140 <ext2fs_get_device_phys_sectsize+0x40>  // b.tcont
 130:	bl	0 <__errno_location>
 134:	ldr	w0, [x0]
 138:	sxtw	x0, w0
 13c:	b	17c <ext2fs_get_device_phys_sectsize+0x7c>
 140:	ldr	x2, [sp, #16]
 144:	mov	x1, #0x127b                	// #4731
 148:	ldr	w0, [sp, #44]
 14c:	bl	0 <ioctl>
 150:	cmp	w0, #0x0
 154:	b.lt	168 <ext2fs_get_device_phys_sectsize+0x68>  // b.tstop
 158:	ldr	w0, [sp, #44]
 15c:	bl	0 <close>
 160:	mov	x0, #0x0                   	// #0
 164:	b	17c <ext2fs_get_device_phys_sectsize+0x7c>
 168:	ldr	x0, [sp, #16]
 16c:	str	wzr, [x0]
 170:	ldr	w0, [sp, #44]
 174:	bl	0 <close>
 178:	mov	x0, #0x0                   	// #0
 17c:	ldp	x29, x30, [sp], #48
 180:	ret

hashmap.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_djb2_hash>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	mov	w0, #0x1505                	// #5381
  18:	str	w0, [sp, #20]
  1c:	b	50 <ext2fs_djb2_hash+0x50>
  20:	ldr	x0, [sp, #24]
  24:	add	x1, x0, #0x1
  28:	str	x1, [sp, #24]
  2c:	ldrb	w0, [x0]
  30:	str	w0, [sp, #16]
  34:	ldr	w0, [sp, #20]
  38:	lsl	w1, w0, #5
  3c:	ldr	w0, [sp, #20]
  40:	add	w1, w1, w0
  44:	ldr	w0, [sp, #16]
  48:	add	w0, w1, w0
  4c:	str	w0, [sp, #20]
  50:	ldr	x0, [sp]
  54:	sub	x1, x0, #0x1
  58:	str	x1, [sp]
  5c:	cmp	x0, #0x0
  60:	b.ne	20 <ext2fs_djb2_hash+0x20>  // b.any
  64:	ldr	w0, [sp, #20]
  68:	add	sp, sp, #0x20
  6c:	ret

0000000000000070 <ext2fs_hashmap_create>:
  70:	stp	x29, x30, [sp, #-64]!
  74:	mov	x29, sp
  78:	str	x0, [sp, #40]
  7c:	str	x1, [sp, #32]
  80:	str	x2, [sp, #24]
  84:	ldr	x1, [sp, #24]
  88:	mov	x0, x1
  8c:	lsl	x0, x0, #1
  90:	add	x0, x0, x1
  94:	lsl	x0, x0, #4
  98:	add	x0, x0, #0x28
  9c:	mov	x1, #0x1                   	// #1
  a0:	bl	0 <calloc>
  a4:	str	x0, [sp, #56]
  a8:	ldr	x0, [sp, #24]
  ac:	mov	w1, w0
  b0:	ldr	x0, [sp, #56]
  b4:	str	w1, [x0]
  b8:	ldr	x0, [sp, #56]
  bc:	ldr	x1, [sp, #32]
  c0:	str	x1, [x0, #16]
  c4:	ldr	x0, [sp, #56]
  c8:	ldr	x1, [sp, #40]
  cc:	str	x1, [x0, #8]
  d0:	ldr	x0, [sp, #56]
  d4:	str	xzr, [x0, #32]
  d8:	ldr	x0, [sp, #56]
  dc:	ldr	x1, [x0, #32]
  e0:	ldr	x0, [sp, #56]
  e4:	str	x1, [x0, #24]
  e8:	ldr	x0, [sp, #56]
  ec:	ldp	x29, x30, [sp], #64
  f0:	ret

00000000000000f4 <ext2fs_hashmap_add>:
  f4:	stp	x29, x30, [sp, #-64]!
  f8:	mov	x29, sp
  fc:	str	x0, [sp, #40]
 100:	str	x1, [sp, #32]
 104:	str	x2, [sp, #24]
 108:	str	x3, [sp, #16]
 10c:	ldr	x0, [sp, #40]
 110:	ldr	x2, [x0, #8]
 114:	ldr	x1, [sp, #16]
 118:	ldr	x0, [sp, #24]
 11c:	blr	x2
 120:	mov	w1, w0
 124:	ldr	x0, [sp, #40]
 128:	ldr	w0, [x0]
 12c:	udiv	w2, w1, w0
 130:	mul	w0, w2, w0
 134:	sub	w0, w1, w0
 138:	str	w0, [sp, #60]
 13c:	mov	x0, #0x30                  	// #48
 140:	bl	0 <malloc>
 144:	str	x0, [sp, #48]
 148:	ldr	x0, [sp, #48]
 14c:	ldr	x1, [sp, #32]
 150:	str	x1, [x0]
 154:	ldr	x0, [sp, #48]
 158:	ldr	x1, [sp, #24]
 15c:	str	x1, [x0, #8]
 160:	ldr	x0, [sp, #48]
 164:	ldr	x1, [sp, #16]
 168:	str	x1, [x0, #16]
 16c:	ldr	x1, [sp, #40]
 170:	ldr	w0, [sp, #60]
 174:	add	x0, x0, #0x4
 178:	lsl	x0, x0, #3
 17c:	add	x0, x1, x0
 180:	ldr	x1, [x0, #8]
 184:	ldr	x0, [sp, #48]
 188:	str	x1, [x0, #24]
 18c:	ldr	x1, [sp, #40]
 190:	ldr	w0, [sp, #60]
 194:	add	x0, x0, #0x4
 198:	lsl	x0, x0, #3
 19c:	add	x0, x1, x0
 1a0:	ldr	x1, [sp, #48]
 1a4:	str	x1, [x0, #8]
 1a8:	ldr	x0, [sp, #48]
 1ac:	str	xzr, [x0, #40]
 1b0:	ldr	x0, [sp, #40]
 1b4:	ldr	x1, [x0, #24]
 1b8:	ldr	x0, [sp, #48]
 1bc:	str	x1, [x0, #32]
 1c0:	ldr	x0, [sp, #40]
 1c4:	ldr	x0, [x0, #24]
 1c8:	cmp	x0, #0x0
 1cc:	b.eq	1e0 <ext2fs_hashmap_add+0xec>  // b.none
 1d0:	ldr	x0, [sp, #40]
 1d4:	ldr	x0, [x0, #24]
 1d8:	ldr	x1, [sp, #48]
 1dc:	str	x1, [x0, #40]
 1e0:	ldr	x0, [sp, #40]
 1e4:	ldr	x1, [sp, #48]
 1e8:	str	x1, [x0, #24]
 1ec:	ldr	x0, [sp, #40]
 1f0:	ldr	x0, [x0, #32]
 1f4:	cmp	x0, #0x0
 1f8:	b.ne	208 <ext2fs_hashmap_add+0x114>  // b.any
 1fc:	ldr	x0, [sp, #40]
 200:	ldr	x1, [sp, #48]
 204:	str	x1, [x0, #32]
 208:	nop
 20c:	ldp	x29, x30, [sp], #64
 210:	ret

0000000000000214 <ext2fs_hashmap_lookup>:
 214:	stp	x29, x30, [sp, #-64]!
 218:	mov	x29, sp
 21c:	str	x0, [sp, #40]
 220:	str	x1, [sp, #32]
 224:	str	x2, [sp, #24]
 228:	ldr	x0, [sp, #40]
 22c:	ldr	x2, [x0, #8]
 230:	ldr	x1, [sp, #24]
 234:	ldr	x0, [sp, #32]
 238:	blr	x2
 23c:	mov	w1, w0
 240:	ldr	x0, [sp, #40]
 244:	ldr	w0, [x0]
 248:	udiv	w2, w1, w0
 24c:	mul	w0, w2, w0
 250:	sub	w0, w1, w0
 254:	str	w0, [sp, #52]
 258:	ldr	x1, [sp, #40]
 25c:	ldr	w0, [sp, #52]
 260:	add	x0, x0, #0x4
 264:	lsl	x0, x0, #3
 268:	add	x0, x1, x0
 26c:	ldr	x0, [x0, #8]
 270:	str	x0, [sp, #56]
 274:	b	2c0 <ext2fs_hashmap_lookup+0xac>
 278:	ldr	x0, [sp, #56]
 27c:	ldr	x0, [x0, #16]
 280:	ldr	x1, [sp, #24]
 284:	cmp	x1, x0
 288:	b.ne	2b4 <ext2fs_hashmap_lookup+0xa0>  // b.any
 28c:	ldr	x0, [sp, #56]
 290:	ldr	x0, [x0, #8]
 294:	ldr	x2, [sp, #24]
 298:	ldr	x1, [sp, #32]
 29c:	bl	0 <memcmp>
 2a0:	cmp	w0, #0x0
 2a4:	b.ne	2b4 <ext2fs_hashmap_lookup+0xa0>  // b.any
 2a8:	ldr	x0, [sp, #56]
 2ac:	ldr	x0, [x0]
 2b0:	b	2d0 <ext2fs_hashmap_lookup+0xbc>
 2b4:	ldr	x0, [sp, #56]
 2b8:	ldr	x0, [x0, #24]
 2bc:	str	x0, [sp, #56]
 2c0:	ldr	x0, [sp, #56]
 2c4:	cmp	x0, #0x0
 2c8:	b.ne	278 <ext2fs_hashmap_lookup+0x64>  // b.any
 2cc:	mov	x0, #0x0                   	// #0
 2d0:	ldp	x29, x30, [sp], #64
 2d4:	ret

00000000000002d8 <ext2fs_hashmap_iter_in_order>:
 2d8:	sub	sp, sp, #0x10
 2dc:	str	x0, [sp, #8]
 2e0:	str	x1, [sp]
 2e4:	ldr	x0, [sp]
 2e8:	ldr	x0, [x0]
 2ec:	cmp	x0, #0x0
 2f0:	b.eq	304 <ext2fs_hashmap_iter_in_order+0x2c>  // b.none
 2f4:	ldr	x0, [sp]
 2f8:	ldr	x0, [x0]
 2fc:	ldr	x0, [x0, #32]
 300:	b	30c <ext2fs_hashmap_iter_in_order+0x34>
 304:	ldr	x0, [sp, #8]
 308:	ldr	x0, [x0, #24]
 30c:	ldr	x1, [sp]
 310:	str	x0, [x1]
 314:	ldr	x0, [sp]
 318:	ldr	x0, [x0]
 31c:	cmp	x0, #0x0
 320:	b.eq	334 <ext2fs_hashmap_iter_in_order+0x5c>  // b.none
 324:	ldr	x0, [sp]
 328:	ldr	x0, [x0]
 32c:	ldr	x0, [x0]
 330:	b	338 <ext2fs_hashmap_iter_in_order+0x60>
 334:	mov	x0, #0x0                   	// #0
 338:	add	sp, sp, #0x10
 33c:	ret

0000000000000340 <ext2fs_hashmap_free>:
 340:	stp	x29, x30, [sp, #-64]!
 344:	mov	x29, sp
 348:	str	x0, [sp, #24]
 34c:	str	xzr, [sp, #56]
 350:	b	3cc <ext2fs_hashmap_free+0x8c>
 354:	ldr	x1, [sp, #24]
 358:	ldr	x0, [sp, #56]
 35c:	add	x0, x0, #0x4
 360:	lsl	x0, x0, #3
 364:	add	x0, x1, x0
 368:	ldr	x0, [x0, #8]
 36c:	str	x0, [sp, #48]
 370:	b	3b4 <ext2fs_hashmap_free+0x74>
 374:	ldr	x0, [sp, #48]
 378:	ldr	x0, [x0, #24]
 37c:	str	x0, [sp, #40]
 380:	ldr	x0, [sp, #24]
 384:	ldr	x0, [x0, #16]
 388:	cmp	x0, #0x0
 38c:	b.eq	3a4 <ext2fs_hashmap_free+0x64>  // b.none
 390:	ldr	x0, [sp, #24]
 394:	ldr	x1, [x0, #16]
 398:	ldr	x0, [sp, #48]
 39c:	ldr	x0, [x0]
 3a0:	blr	x1
 3a4:	ldr	x0, [sp, #48]
 3a8:	bl	0 <free>
 3ac:	ldr	x0, [sp, #40]
 3b0:	str	x0, [sp, #48]
 3b4:	ldr	x0, [sp, #48]
 3b8:	cmp	x0, #0x0
 3bc:	b.ne	374 <ext2fs_hashmap_free+0x34>  // b.any
 3c0:	ldr	x0, [sp, #56]
 3c4:	add	x0, x0, #0x1
 3c8:	str	x0, [sp, #56]
 3cc:	ldr	x0, [sp, #24]
 3d0:	ldr	w0, [x0]
 3d4:	mov	w0, w0
 3d8:	ldr	x1, [sp, #56]
 3dc:	cmp	x1, x0
 3e0:	b.cc	354 <ext2fs_hashmap_free+0x14>  // b.lo, b.ul, b.last
 3e4:	ldr	x0, [sp, #24]
 3e8:	bl	0 <free>
 3ec:	nop
 3f0:	ldp	x29, x30, [sp], #64
 3f4:	ret

i_block.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_huge_file>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x8
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_iblk_add_blocks>:
  28:	stp	x29, x30, [sp, #-64]!
  2c:	mov	x29, sp
  30:	str	x0, [sp, #40]
  34:	str	x1, [sp, #32]
  38:	str	x2, [sp, #24]
  3c:	ldr	x0, [sp, #32]
  40:	ldr	w0, [x0, #28]
  44:	mov	w0, w0
  48:	str	x0, [sp, #56]
  4c:	ldr	x0, [sp, #40]
  50:	ldr	x0, [x0, #32]
  54:	bl	0 <ext2fs_has_feature_huge_file>
  58:	cmp	w0, #0x0
  5c:	b.eq	80 <ext2fs_iblk_add_blocks+0x58>  // b.none
  60:	ldr	x0, [sp, #32]
  64:	ldrh	w0, [x0, #116]
  68:	and	x0, x0, #0xffff
  6c:	lsl	x0, x0, #32
  70:	mov	x1, x0
  74:	ldr	x0, [sp, #56]
  78:	add	x0, x0, x1
  7c:	str	x0, [sp, #56]
  80:	ldr	x0, [sp, #40]
  84:	ldr	x0, [x0, #32]
  88:	bl	0 <ext2fs_has_feature_huge_file>
  8c:	cmp	w0, #0x0
  90:	b.eq	a8 <ext2fs_iblk_add_blocks+0x80>  // b.none
  94:	ldr	x0, [sp, #32]
  98:	ldr	w0, [x0, #32]
  9c:	and	w0, w0, #0x40000
  a0:	cmp	w0, #0x0
  a4:	b.ne	c4 <ext2fs_iblk_add_blocks+0x9c>  // b.any
  a8:	ldr	x0, [sp, #40]
  ac:	ldr	w0, [x0, #40]
  b0:	lsr	w0, w0, #9
  b4:	mov	w0, w0
  b8:	ldr	x1, [sp, #24]
  bc:	mul	x0, x1, x0
  c0:	str	x0, [sp, #24]
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	w0, [x0, #192]
  cc:	mov	w1, #0x1                   	// #1
  d0:	lsl	w0, w1, w0
  d4:	sxtw	x0, w0
  d8:	ldr	x1, [sp, #24]
  dc:	mul	x0, x1, x0
  e0:	str	x0, [sp, #24]
  e4:	ldr	x1, [sp, #56]
  e8:	ldr	x0, [sp, #24]
  ec:	add	x0, x1, x0
  f0:	str	x0, [sp, #56]
  f4:	ldr	x0, [sp, #40]
  f8:	ldr	x0, [x0, #32]
  fc:	bl	0 <ext2fs_has_feature_huge_file>
 100:	cmp	w0, #0x0
 104:	b.eq	120 <ext2fs_iblk_add_blocks+0xf8>  // b.none
 108:	ldr	x0, [sp, #56]
 10c:	lsr	x0, x0, #32
 110:	and	w1, w0, #0xffff
 114:	ldr	x0, [sp, #32]
 118:	strh	w1, [x0, #116]
 11c:	b	138 <ext2fs_iblk_add_blocks+0x110>
 120:	ldr	x1, [sp, #56]
 124:	mov	x0, #0xffffffff            	// #4294967295
 128:	cmp	x1, x0
 12c:	b.ls	138 <ext2fs_iblk_add_blocks+0x110>  // b.plast
 130:	mov	x0, #0x4b                  	// #75
 134:	b	14c <ext2fs_iblk_add_blocks+0x124>
 138:	ldr	x0, [sp, #56]
 13c:	mov	w1, w0
 140:	ldr	x0, [sp, #32]
 144:	str	w1, [x0, #28]
 148:	mov	x0, #0x0                   	// #0
 14c:	ldp	x29, x30, [sp], #64
 150:	ret

0000000000000154 <ext2fs_iblk_sub_blocks>:
 154:	stp	x29, x30, [sp, #-64]!
 158:	mov	x29, sp
 15c:	str	x0, [sp, #40]
 160:	str	x1, [sp, #32]
 164:	str	x2, [sp, #24]
 168:	ldr	x0, [sp, #32]
 16c:	ldr	w0, [x0, #28]
 170:	mov	w0, w0
 174:	str	x0, [sp, #56]
 178:	ldr	x0, [sp, #40]
 17c:	ldr	x0, [x0, #32]
 180:	bl	0 <ext2fs_has_feature_huge_file>
 184:	cmp	w0, #0x0
 188:	b.eq	1ac <ext2fs_iblk_sub_blocks+0x58>  // b.none
 18c:	ldr	x0, [sp, #32]
 190:	ldrh	w0, [x0, #116]
 194:	and	x0, x0, #0xffff
 198:	lsl	x0, x0, #32
 19c:	mov	x1, x0
 1a0:	ldr	x0, [sp, #56]
 1a4:	add	x0, x0, x1
 1a8:	str	x0, [sp, #56]
 1ac:	ldr	x0, [sp, #40]
 1b0:	ldr	x0, [x0, #32]
 1b4:	bl	0 <ext2fs_has_feature_huge_file>
 1b8:	cmp	w0, #0x0
 1bc:	b.eq	1d4 <ext2fs_iblk_sub_blocks+0x80>  // b.none
 1c0:	ldr	x0, [sp, #32]
 1c4:	ldr	w0, [x0, #32]
 1c8:	and	w0, w0, #0x40000
 1cc:	cmp	w0, #0x0
 1d0:	b.ne	1f0 <ext2fs_iblk_sub_blocks+0x9c>  // b.any
 1d4:	ldr	x0, [sp, #40]
 1d8:	ldr	w0, [x0, #40]
 1dc:	lsr	w0, w0, #9
 1e0:	mov	w0, w0
 1e4:	ldr	x1, [sp, #24]
 1e8:	mul	x0, x1, x0
 1ec:	str	x0, [sp, #24]
 1f0:	ldr	x0, [sp, #40]
 1f4:	ldr	w0, [x0, #192]
 1f8:	mov	w1, #0x1                   	// #1
 1fc:	lsl	w0, w1, w0
 200:	sxtw	x0, w0
 204:	ldr	x1, [sp, #24]
 208:	mul	x0, x1, x0
 20c:	str	x0, [sp, #24]
 210:	ldr	x1, [sp, #24]
 214:	ldr	x0, [sp, #56]
 218:	cmp	x1, x0
 21c:	b.ls	228 <ext2fs_iblk_sub_blocks+0xd4>  // b.plast
 220:	mov	x0, #0x4b                  	// #75
 224:	b	274 <ext2fs_iblk_sub_blocks+0x120>
 228:	ldr	x1, [sp, #56]
 22c:	ldr	x0, [sp, #24]
 230:	sub	x0, x1, x0
 234:	str	x0, [sp, #56]
 238:	ldr	x0, [sp, #40]
 23c:	ldr	x0, [x0, #32]
 240:	bl	0 <ext2fs_has_feature_huge_file>
 244:	cmp	w0, #0x0
 248:	b.eq	260 <ext2fs_iblk_sub_blocks+0x10c>  // b.none
 24c:	ldr	x0, [sp, #56]
 250:	lsr	x0, x0, #32
 254:	and	w1, w0, #0xffff
 258:	ldr	x0, [sp, #32]
 25c:	strh	w1, [x0, #116]
 260:	ldr	x0, [sp, #56]
 264:	mov	w1, w0
 268:	ldr	x0, [sp, #32]
 26c:	str	w1, [x0, #28]
 270:	mov	x0, #0x0                   	// #0
 274:	ldp	x29, x30, [sp], #64
 278:	ret

000000000000027c <ext2fs_iblk_set>:
 27c:	stp	x29, x30, [sp, #-48]!
 280:	mov	x29, sp
 284:	str	x0, [sp, #40]
 288:	str	x1, [sp, #32]
 28c:	str	x2, [sp, #24]
 290:	ldr	x0, [sp, #40]
 294:	ldr	x0, [x0, #32]
 298:	bl	0 <ext2fs_has_feature_huge_file>
 29c:	cmp	w0, #0x0
 2a0:	b.eq	2b8 <ext2fs_iblk_set+0x3c>  // b.none
 2a4:	ldr	x0, [sp, #32]
 2a8:	ldr	w0, [x0, #32]
 2ac:	and	w0, w0, #0x40000
 2b0:	cmp	w0, #0x0
 2b4:	b.ne	2d4 <ext2fs_iblk_set+0x58>  // b.any
 2b8:	ldr	x0, [sp, #40]
 2bc:	ldr	w0, [x0, #40]
 2c0:	lsr	w0, w0, #9
 2c4:	mov	w0, w0
 2c8:	ldr	x1, [sp, #24]
 2cc:	mul	x0, x1, x0
 2d0:	str	x0, [sp, #24]
 2d4:	ldr	x0, [sp, #40]
 2d8:	ldr	w0, [x0, #192]
 2dc:	mov	w1, #0x1                   	// #1
 2e0:	lsl	w0, w1, w0
 2e4:	sxtw	x0, w0
 2e8:	ldr	x1, [sp, #24]
 2ec:	mul	x0, x1, x0
 2f0:	str	x0, [sp, #24]
 2f4:	ldr	x0, [sp, #24]
 2f8:	mov	w1, w0
 2fc:	ldr	x0, [sp, #32]
 300:	str	w1, [x0, #28]
 304:	ldr	x0, [sp, #40]
 308:	ldr	x0, [x0, #32]
 30c:	bl	0 <ext2fs_has_feature_huge_file>
 310:	cmp	w0, #0x0
 314:	b.eq	330 <ext2fs_iblk_set+0xb4>  // b.none
 318:	ldr	x0, [sp, #24]
 31c:	lsr	x0, x0, #32
 320:	and	w1, w0, #0xffff
 324:	ldr	x0, [sp, #32]
 328:	strh	w1, [x0, #116]
 32c:	b	348 <ext2fs_iblk_set+0xcc>
 330:	ldr	x0, [sp, #24]
 334:	lsr	x0, x0, #32
 338:	cmp	x0, #0x0
 33c:	b.eq	348 <ext2fs_iblk_set+0xcc>  // b.none
 340:	mov	x0, #0x4b                  	// #75
 344:	b	34c <ext2fs_iblk_set+0xd0>
 348:	mov	x0, #0x0                   	// #0
 34c:	ldp	x29, x30, [sp], #48
 350:	ret

icount.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_free_icount>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x0, [sp, #24]
       c:	ldr	x0, [sp, #24]
      10:	cmp	x0, #0x0
      14:	b.eq	e0 <ext2fs_free_icount+0xe0>  // b.none
      18:	ldr	x0, [sp, #24]
      1c:	str	xzr, [x0]
      20:	ldr	x0, [sp, #24]
      24:	ldr	x0, [x0, #40]
      28:	cmp	x0, #0x0
      2c:	b.eq	3c <ext2fs_free_icount+0x3c>  // b.none
      30:	ldr	x0, [sp, #24]
      34:	add	x0, x0, #0x28
      38:	bl	0 <ext2fs_free_mem>
      3c:	ldr	x0, [sp, #24]
      40:	ldr	x0, [x0, #8]
      44:	cmp	x0, #0x0
      48:	b.eq	58 <ext2fs_free_icount+0x58>  // b.none
      4c:	ldr	x0, [sp, #24]
      50:	ldr	x0, [x0, #8]
      54:	bl	0 <ext2fs_free_inode_bitmap>
      58:	ldr	x0, [sp, #24]
      5c:	ldr	x0, [x0, #16]
      60:	cmp	x0, #0x0
      64:	b.eq	74 <ext2fs_free_icount+0x74>  // b.none
      68:	ldr	x0, [sp, #24]
      6c:	ldr	x0, [x0, #16]
      70:	bl	0 <ext2fs_free_inode_bitmap>
      74:	ldr	x0, [sp, #24]
      78:	ldr	x0, [x0, #64]
      7c:	cmp	x0, #0x0
      80:	b.eq	90 <ext2fs_free_icount+0x90>  // b.none
      84:	ldr	x0, [sp, #24]
      88:	ldr	x0, [x0, #64]
      8c:	bl	0 <ext2fs_tdb_close>
      90:	ldr	x0, [sp, #24]
      94:	ldr	x0, [x0, #56]
      98:	cmp	x0, #0x0
      9c:	b.eq	b8 <ext2fs_free_icount+0xb8>  // b.none
      a0:	ldr	x0, [sp, #24]
      a4:	ldr	x0, [x0, #56]
      a8:	bl	0 <unlink>
      ac:	ldr	x0, [sp, #24]
      b0:	ldr	x0, [x0, #56]
      b4:	bl	0 <free>
      b8:	ldr	x0, [sp, #24]
      bc:	ldr	x0, [x0, #72]
      c0:	cmp	x0, #0x0
      c4:	b.eq	d4 <ext2fs_free_icount+0xd4>  // b.none
      c8:	ldr	x0, [sp, #24]
      cc:	add	x0, x0, #0x48
      d0:	bl	0 <ext2fs_free_mem>
      d4:	add	x0, sp, #0x18
      d8:	bl	0 <ext2fs_free_mem>
      dc:	b	e4 <ext2fs_free_icount+0xe4>
      e0:	nop
      e4:	ldp	x29, x30, [sp], #32
      e8:	ret

00000000000000ec <alloc_icount>:
      ec:	stp	x29, x30, [sp, #-80]!
      f0:	mov	x29, sp
      f4:	str	x0, [sp, #40]
      f8:	str	w1, [sp, #36]
      fc:	str	x2, [sp, #24]
     100:	ldr	x0, [sp, #24]
     104:	str	xzr, [x0]
     108:	add	x0, sp, #0x38
     10c:	mov	x1, x0
     110:	mov	x0, #0x50                  	// #80
     114:	bl	0 <ext2fs_get_mem>
     118:	str	x0, [sp, #72]
     11c:	ldr	x0, [sp, #72]
     120:	cmp	x0, #0x0
     124:	b.eq	130 <alloc_icount+0x44>  // b.none
     128:	ldr	x0, [sp, #72]
     12c:	b	280 <alloc_icount+0x194>
     130:	ldr	x0, [sp, #56]
     134:	mov	x2, #0x50                  	// #80
     138:	mov	w1, #0x0                   	// #0
     13c:	bl	0 <memset>
     140:	ldr	x0, [sp, #56]
     144:	mov	x1, #0xb70d                	// #46861
     148:	movk	x1, #0x7f2b, lsl #16
     14c:	str	x1, [x0]
     150:	ldr	x0, [sp, #40]
     154:	ldr	x1, [x0, #32]
     158:	ldr	x0, [sp, #56]
     15c:	ldr	w1, [x1]
     160:	str	w1, [x0, #32]
     164:	ldr	w0, [sp, #36]
     168:	and	w0, w0, #0x2
     16c:	cmp	w0, #0x0
     170:	b.eq	1e8 <alloc_icount+0xfc>  // b.none
     174:	ldr	w0, [sp, #36]
     178:	and	w0, w0, #0x1
     17c:	cmp	w0, #0x0
     180:	b.eq	1e8 <alloc_icount+0xfc>  // b.none
     184:	ldr	x0, [sp, #56]
     188:	ldr	w0, [x0, #32]
     18c:	lsl	w0, w0, #1
     190:	str	w0, [sp, #68]
     194:	ldr	w2, [sp, #68]
     198:	ldr	x0, [sp, #56]
     19c:	add	x0, x0, #0x48
     1a0:	mov	x1, x0
     1a4:	mov	x0, x2
     1a8:	bl	0 <ext2fs_get_mem>
     1ac:	str	x0, [sp, #72]
     1b0:	ldr	x0, [sp, #72]
     1b4:	cmp	x0, #0x0
     1b8:	b.ne	1e8 <alloc_icount+0xfc>  // b.any
     1bc:	ldr	x0, [sp, #56]
     1c0:	ldr	x0, [x0, #72]
     1c4:	ldr	w1, [sp, #68]
     1c8:	mov	x2, x1
     1cc:	mov	w1, #0x0                   	// #0
     1d0:	bl	0 <memset>
     1d4:	ldr	x1, [sp, #56]
     1d8:	ldr	x0, [sp, #24]
     1dc:	str	x1, [x0]
     1e0:	mov	x0, #0x0                   	// #0
     1e4:	b	280 <alloc_icount+0x194>
     1e8:	ldr	x0, [sp, #56]
     1ec:	add	x0, x0, #0x8
     1f0:	mov	x2, x0
     1f4:	adrp	x0, 0 <ext2fs_free_icount>
     1f8:	add	x1, x0, #0x0
     1fc:	ldr	x0, [sp, #40]
     200:	bl	0 <ext2fs_allocate_inode_bitmap>
     204:	str	x0, [sp, #72]
     208:	ldr	x0, [sp, #72]
     20c:	cmp	x0, #0x0
     210:	b.ne	270 <alloc_icount+0x184>  // b.any
     214:	ldr	w0, [sp, #36]
     218:	and	w0, w0, #0x1
     21c:	cmp	w0, #0x0
     220:	b.eq	254 <alloc_icount+0x168>  // b.none
     224:	ldr	x0, [sp, #56]
     228:	add	x0, x0, #0x10
     22c:	mov	x2, x0
     230:	adrp	x0, 0 <ext2fs_free_icount>
     234:	add	x1, x0, #0x0
     238:	ldr	x0, [sp, #40]
     23c:	bl	0 <ext2fs_allocate_inode_bitmap>
     240:	str	x0, [sp, #72]
     244:	ldr	x0, [sp, #72]
     248:	cmp	x0, #0x0
     24c:	b.eq	25c <alloc_icount+0x170>  // b.none
     250:	b	274 <alloc_icount+0x188>
     254:	ldr	x0, [sp, #56]
     258:	str	xzr, [x0, #16]
     25c:	ldr	x1, [sp, #56]
     260:	ldr	x0, [sp, #24]
     264:	str	x1, [x0]
     268:	mov	x0, #0x0                   	// #0
     26c:	b	280 <alloc_icount+0x194>
     270:	nop
     274:	ldr	x0, [sp, #56]
     278:	bl	0 <ext2fs_free_icount>
     27c:	ldr	x0, [sp, #72]
     280:	ldp	x29, x30, [sp], #80
     284:	ret

0000000000000288 <unpack_uuid>:
     288:	stp	x29, x30, [sp, #-48]!
     28c:	mov	x29, sp
     290:	str	x0, [sp, #24]
     294:	str	x1, [sp, #16]
     298:	ldr	x0, [sp, #24]
     29c:	str	x0, [sp, #40]
     2a0:	ldr	x0, [sp, #40]
     2a4:	add	x1, x0, #0x1
     2a8:	str	x1, [sp, #40]
     2ac:	ldrb	w0, [x0]
     2b0:	str	w0, [sp, #36]
     2b4:	ldr	w0, [sp, #36]
     2b8:	lsl	w1, w0, #8
     2bc:	ldr	x0, [sp, #40]
     2c0:	add	x2, x0, #0x1
     2c4:	str	x2, [sp, #40]
     2c8:	ldrb	w0, [x0]
     2cc:	orr	w0, w1, w0
     2d0:	str	w0, [sp, #36]
     2d4:	ldr	w0, [sp, #36]
     2d8:	lsl	w1, w0, #8
     2dc:	ldr	x0, [sp, #40]
     2e0:	add	x2, x0, #0x1
     2e4:	str	x2, [sp, #40]
     2e8:	ldrb	w0, [x0]
     2ec:	orr	w0, w1, w0
     2f0:	str	w0, [sp, #36]
     2f4:	ldr	w0, [sp, #36]
     2f8:	lsl	w1, w0, #8
     2fc:	ldr	x0, [sp, #40]
     300:	add	x2, x0, #0x1
     304:	str	x2, [sp, #40]
     308:	ldrb	w0, [x0]
     30c:	orr	w0, w1, w0
     310:	str	w0, [sp, #36]
     314:	ldr	x0, [sp, #16]
     318:	ldr	w1, [sp, #36]
     31c:	str	w1, [x0]
     320:	ldr	x0, [sp, #40]
     324:	add	x1, x0, #0x1
     328:	str	x1, [sp, #40]
     32c:	ldrb	w0, [x0]
     330:	str	w0, [sp, #36]
     334:	ldr	w0, [sp, #36]
     338:	lsl	w1, w0, #8
     33c:	ldr	x0, [sp, #40]
     340:	add	x2, x0, #0x1
     344:	str	x2, [sp, #40]
     348:	ldrb	w0, [x0]
     34c:	orr	w0, w1, w0
     350:	str	w0, [sp, #36]
     354:	ldr	w0, [sp, #36]
     358:	and	w1, w0, #0xffff
     35c:	ldr	x0, [sp, #16]
     360:	strh	w1, [x0, #4]
     364:	ldr	x0, [sp, #40]
     368:	add	x1, x0, #0x1
     36c:	str	x1, [sp, #40]
     370:	ldrb	w0, [x0]
     374:	str	w0, [sp, #36]
     378:	ldr	w0, [sp, #36]
     37c:	lsl	w1, w0, #8
     380:	ldr	x0, [sp, #40]
     384:	add	x2, x0, #0x1
     388:	str	x2, [sp, #40]
     38c:	ldrb	w0, [x0]
     390:	orr	w0, w1, w0
     394:	str	w0, [sp, #36]
     398:	ldr	w0, [sp, #36]
     39c:	and	w1, w0, #0xffff
     3a0:	ldr	x0, [sp, #16]
     3a4:	strh	w1, [x0, #6]
     3a8:	ldr	x0, [sp, #40]
     3ac:	add	x1, x0, #0x1
     3b0:	str	x1, [sp, #40]
     3b4:	ldrb	w0, [x0]
     3b8:	str	w0, [sp, #36]
     3bc:	ldr	w0, [sp, #36]
     3c0:	lsl	w1, w0, #8
     3c4:	ldr	x0, [sp, #40]
     3c8:	add	x2, x0, #0x1
     3cc:	str	x2, [sp, #40]
     3d0:	ldrb	w0, [x0]
     3d4:	orr	w0, w1, w0
     3d8:	str	w0, [sp, #36]
     3dc:	ldr	w0, [sp, #36]
     3e0:	and	w1, w0, #0xffff
     3e4:	ldr	x0, [sp, #16]
     3e8:	strh	w1, [x0, #8]
     3ec:	ldr	x0, [sp, #16]
     3f0:	add	x0, x0, #0xa
     3f4:	mov	x2, #0x6                   	// #6
     3f8:	ldr	x1, [sp, #40]
     3fc:	bl	0 <memcpy>
     400:	nop
     404:	ldp	x29, x30, [sp], #48
     408:	ret

000000000000040c <uuid_unparse>:
     40c:	sub	sp, sp, #0x60
     410:	stp	x29, x30, [sp, #48]
     414:	add	x29, sp, #0x30
     418:	str	x0, [sp, #72]
     41c:	str	x1, [sp, #64]
     420:	add	x0, sp, #0x50
     424:	mov	x1, x0
     428:	ldr	x0, [sp, #72]
     42c:	bl	288 <unpack_uuid>
     430:	ldr	w1, [sp, #80]
     434:	ldrh	w0, [sp, #84]
     438:	mov	w8, w0
     43c:	ldrh	w0, [sp, #86]
     440:	mov	w9, w0
     444:	ldrh	w0, [sp, #88]
     448:	lsr	w0, w0, #8
     44c:	and	w0, w0, #0xffff
     450:	mov	w10, w0
     454:	ldrh	w0, [sp, #88]
     458:	and	w0, w0, #0xff
     45c:	ldrb	w2, [sp, #90]
     460:	mov	w7, w2
     464:	ldrb	w2, [sp, #91]
     468:	ldrb	w3, [sp, #92]
     46c:	ldrb	w4, [sp, #93]
     470:	ldrb	w5, [sp, #94]
     474:	ldrb	w6, [sp, #95]
     478:	str	w6, [sp, #32]
     47c:	str	w5, [sp, #24]
     480:	str	w4, [sp, #16]
     484:	str	w3, [sp, #8]
     488:	str	w2, [sp]
     48c:	mov	w6, w0
     490:	mov	w5, w10
     494:	mov	w4, w9
     498:	mov	w3, w8
     49c:	mov	w2, w1
     4a0:	adrp	x0, 0 <ext2fs_free_icount>
     4a4:	add	x1, x0, #0x0
     4a8:	ldr	x0, [sp, #64]
     4ac:	bl	0 <sprintf>
     4b0:	nop
     4b4:	ldp	x29, x30, [sp, #48]
     4b8:	add	sp, sp, #0x60
     4bc:	ret

00000000000004c0 <ext2fs_create_icount_tdb>:
     4c0:	stp	x29, x30, [sp, #-144]!
     4c4:	mov	x29, sp
     4c8:	str	x19, [sp, #16]
     4cc:	str	x0, [sp, #56]
     4d0:	str	x1, [sp, #48]
     4d4:	str	w2, [sp, #44]
     4d8:	str	x3, [sp, #32]
     4dc:	add	x0, sp, #0x70
     4e0:	mov	x2, x0
     4e4:	ldr	w1, [sp, #44]
     4e8:	ldr	x0, [sp, #56]
     4ec:	bl	ec <alloc_icount>
     4f0:	str	x0, [sp, #136]
     4f4:	ldr	x0, [sp, #136]
     4f8:	cmp	x0, #0x0
     4fc:	b.eq	508 <ext2fs_create_icount_tdb+0x48>  // b.none
     500:	ldr	x0, [sp, #136]
     504:	b	644 <ext2fs_create_icount_tdb+0x184>
     508:	ldr	x0, [sp, #48]
     50c:	bl	0 <strlen>
     510:	add	x0, x0, #0x40
     514:	add	x1, sp, #0x68
     518:	bl	0 <ext2fs_get_mem>
     51c:	str	x0, [sp, #136]
     520:	ldr	x0, [sp, #136]
     524:	cmp	x0, #0x0
     528:	b.ne	634 <ext2fs_create_icount_tdb+0x174>  // b.any
     52c:	ldr	x0, [sp, #56]
     530:	ldr	x0, [x0, #32]
     534:	add	x0, x0, #0x68
     538:	add	x1, sp, #0x40
     53c:	bl	40c <uuid_unparse>
     540:	ldr	x4, [sp, #104]
     544:	add	x0, sp, #0x40
     548:	mov	x3, x0
     54c:	ldr	x2, [sp, #48]
     550:	adrp	x0, 0 <ext2fs_free_icount>
     554:	add	x1, x0, #0x0
     558:	mov	x0, x4
     55c:	bl	0 <sprintf>
     560:	mov	w0, #0x3f                  	// #63
     564:	bl	0 <umask>
     568:	str	w0, [sp, #132]
     56c:	ldr	x0, [sp, #104]
     570:	bl	0 <mkstemp>
     574:	str	w0, [sp, #128]
     578:	ldr	w0, [sp, #128]
     57c:	cmp	w0, #0x0
     580:	b.ge	5a0 <ext2fs_create_icount_tdb+0xe0>  // b.tcont
     584:	bl	0 <__errno_location>
     588:	ldr	w0, [x0]
     58c:	sxtw	x0, w0
     590:	str	x0, [sp, #136]
     594:	add	x0, sp, #0x68
     598:	bl	0 <ext2fs_free_mem>
     59c:	b	638 <ext2fs_create_icount_tdb+0x178>
     5a0:	ldr	x0, [sp, #112]
     5a4:	ldr	x1, [sp, #104]
     5a8:	str	x1, [x0, #56]
     5ac:	ldr	w0, [sp, #132]
     5b0:	bl	0 <umask>
     5b4:	ldr	x0, [sp, #56]
     5b8:	ldr	x0, [x0, #32]
     5bc:	ldr	w1, [x0]
     5c0:	ldr	x0, [sp, #56]
     5c4:	ldr	x0, [x0, #32]
     5c8:	ldr	w0, [x0, #16]
     5cc:	sub	w0, w1, w0
     5d0:	str	w0, [sp, #124]
     5d4:	ldr	x0, [sp, #104]
     5d8:	ldr	w1, [sp, #124]
     5dc:	ldr	x19, [sp, #112]
     5e0:	mov	w4, #0x180                 	// #384
     5e4:	mov	w3, #0x242                 	// #578
     5e8:	mov	w2, #0x44                  	// #68
     5ec:	bl	0 <ext2fs_tdb_open>
     5f0:	str	x0, [x19, #64]
     5f4:	ldr	w0, [sp, #128]
     5f8:	bl	0 <close>
     5fc:	ldr	x0, [sp, #112]
     600:	ldr	x0, [x0, #64]
     604:	cmp	x0, #0x0
     608:	b.ne	620 <ext2fs_create_icount_tdb+0x160>  // b.any
     60c:	bl	0 <__errno_location>
     610:	ldr	w0, [x0]
     614:	sxtw	x0, w0
     618:	str	x0, [sp, #136]
     61c:	b	638 <ext2fs_create_icount_tdb+0x178>
     620:	ldr	x1, [sp, #112]
     624:	ldr	x0, [sp, #32]
     628:	str	x1, [x0]
     62c:	mov	x0, #0x0                   	// #0
     630:	b	644 <ext2fs_create_icount_tdb+0x184>
     634:	nop
     638:	ldr	x0, [sp, #112]
     63c:	bl	0 <ext2fs_free_icount>
     640:	ldr	x0, [sp, #136]
     644:	ldr	x19, [sp, #16]
     648:	ldp	x29, x30, [sp], #144
     64c:	ret

0000000000000650 <ext2fs_create_icount2>:
     650:	stp	x29, x30, [sp, #-80]!
     654:	mov	x29, sp
     658:	str	x0, [sp, #40]
     65c:	str	w1, [sp, #36]
     660:	str	w2, [sp, #32]
     664:	str	x3, [sp, #24]
     668:	str	x4, [sp, #16]
     66c:	ldr	x0, [sp, #24]
     670:	cmp	x0, #0x0
     674:	b.eq	6bc <ext2fs_create_icount2+0x6c>  // b.none
     678:	ldr	x0, [sp, #24]
     67c:	ldr	x1, [x0]
     680:	mov	x0, #0xb70d                	// #46861
     684:	movk	x0, #0x7f2b, lsl #16
     688:	cmp	x1, x0
     68c:	b.eq	69c <ext2fs_create_icount2+0x4c>  // b.none
     690:	mov	x0, #0xb70d                	// #46861
     694:	movk	x0, #0x7f2b, lsl #16
     698:	b	888 <ext2fs_create_icount2+0x238>
     69c:	ldr	x0, [sp, #24]
     6a0:	ldr	w0, [x0, #28]
     6a4:	ldr	w1, [sp, #32]
     6a8:	cmp	w1, w0
     6ac:	b.cs	6bc <ext2fs_create_icount2+0x6c>  // b.hs, b.nlast
     6b0:	ldr	x0, [sp, #24]
     6b4:	ldr	w0, [x0, #28]
     6b8:	str	w0, [sp, #32]
     6bc:	add	x0, sp, #0x30
     6c0:	mov	x2, x0
     6c4:	ldr	w1, [sp, #36]
     6c8:	ldr	x0, [sp, #40]
     6cc:	bl	ec <alloc_icount>
     6d0:	str	x0, [sp, #72]
     6d4:	ldr	x0, [sp, #72]
     6d8:	cmp	x0, #0x0
     6dc:	b.eq	6e8 <ext2fs_create_icount2+0x98>  // b.none
     6e0:	ldr	x0, [sp, #72]
     6e4:	b	888 <ext2fs_create_icount2+0x238>
     6e8:	ldr	x0, [sp, #48]
     6ec:	ldr	x0, [x0, #72]
     6f0:	cmp	x0, #0x0
     6f4:	b.ne	850 <ext2fs_create_icount2+0x200>  // b.any
     6f8:	ldr	w0, [sp, #32]
     6fc:	cmp	w0, #0x0
     700:	b.eq	714 <ext2fs_create_icount2+0xc4>  // b.none
     704:	ldr	x0, [sp, #48]
     708:	ldr	w1, [sp, #32]
     70c:	str	w1, [x0, #28]
     710:	b	76c <ext2fs_create_icount2+0x11c>
     714:	ldr	x0, [sp, #48]
     718:	add	x0, x0, #0x1c
     71c:	mov	x1, x0
     720:	ldr	x0, [sp, #40]
     724:	bl	0 <ext2fs_get_num_dirs>
     728:	str	x0, [sp, #72]
     72c:	ldr	x0, [sp, #72]
     730:	cmp	x0, #0x0
     734:	b.ne	870 <ext2fs_create_icount2+0x220>  // b.any
     738:	ldr	x0, [sp, #48]
     73c:	ldr	w2, [x0, #28]
     740:	ldr	x0, [sp, #40]
     744:	ldr	x0, [x0, #32]
     748:	ldr	w1, [x0]
     74c:	mov	w0, #0x851f                	// #34079
     750:	movk	w0, #0x51eb, lsl #16
     754:	umull	x0, w1, w0
     758:	lsr	x0, x0, #32
     75c:	lsr	w1, w0, #4
     760:	ldr	x0, [sp, #48]
     764:	add	w1, w2, w1
     768:	str	w1, [x0, #28]
     76c:	ldr	x0, [sp, #48]
     770:	ldr	w0, [x0, #28]
     774:	mov	w0, w0
     778:	lsl	x0, x0, #3
     77c:	str	x0, [sp, #56]
     780:	ldr	x0, [sp, #48]
     784:	ldr	w0, [x0, #28]
     788:	mov	w3, w0
     78c:	ldr	x0, [sp, #48]
     790:	add	x0, x0, #0x28
     794:	mov	x2, x0
     798:	mov	x1, #0x8                   	// #8
     79c:	mov	x0, x3
     7a0:	bl	0 <ext2fs_get_array>
     7a4:	str	x0, [sp, #72]
     7a8:	ldr	x0, [sp, #72]
     7ac:	cmp	x0, #0x0
     7b0:	b.ne	878 <ext2fs_create_icount2+0x228>  // b.any
     7b4:	ldr	x0, [sp, #48]
     7b8:	ldr	x0, [x0, #40]
     7bc:	ldr	x2, [sp, #56]
     7c0:	mov	w1, #0x0                   	// #0
     7c4:	bl	0 <memset>
     7c8:	ldr	x0, [sp, #48]
     7cc:	str	wzr, [x0, #24]
     7d0:	ldr	x0, [sp, #48]
     7d4:	str	wzr, [x0, #36]
     7d8:	ldr	x0, [sp, #24]
     7dc:	cmp	x0, #0x0
     7e0:	b.eq	858 <ext2fs_create_icount2+0x208>  // b.none
     7e4:	str	wzr, [sp, #68]
     7e8:	b	828 <ext2fs_create_icount2+0x1d8>
     7ec:	ldr	x0, [sp, #24]
     7f0:	ldr	x1, [x0, #40]
     7f4:	ldr	w0, [sp, #68]
     7f8:	lsl	x0, x0, #3
     7fc:	add	x1, x1, x0
     800:	ldr	x0, [sp, #48]
     804:	ldr	x2, [x0, #40]
     808:	ldr	w0, [sp, #68]
     80c:	lsl	x0, x0, #3
     810:	add	x0, x2, x0
     814:	ldr	w1, [x1]
     818:	str	w1, [x0]
     81c:	ldr	w0, [sp, #68]
     820:	add	w0, w0, #0x1
     824:	str	w0, [sp, #68]
     828:	ldr	x0, [sp, #24]
     82c:	ldr	w0, [x0, #24]
     830:	ldr	w1, [sp, #68]
     834:	cmp	w1, w0
     838:	b.cc	7ec <ext2fs_create_icount2+0x19c>  // b.lo, b.ul, b.last
     83c:	ldr	x0, [sp, #48]
     840:	ldr	x1, [sp, #24]
     844:	ldr	w1, [x1, #24]
     848:	str	w1, [x0, #24]
     84c:	b	85c <ext2fs_create_icount2+0x20c>
     850:	nop
     854:	b	85c <ext2fs_create_icount2+0x20c>
     858:	nop
     85c:	ldr	x1, [sp, #48]
     860:	ldr	x0, [sp, #16]
     864:	str	x1, [x0]
     868:	mov	x0, #0x0                   	// #0
     86c:	b	888 <ext2fs_create_icount2+0x238>
     870:	nop
     874:	b	87c <ext2fs_create_icount2+0x22c>
     878:	nop
     87c:	ldr	x0, [sp, #48]
     880:	bl	0 <ext2fs_free_icount>
     884:	ldr	x0, [sp, #72]
     888:	ldp	x29, x30, [sp], #80
     88c:	ret

0000000000000890 <ext2fs_create_icount>:
     890:	stp	x29, x30, [sp, #-48]!
     894:	mov	x29, sp
     898:	str	x0, [sp, #40]
     89c:	str	w1, [sp, #36]
     8a0:	str	w2, [sp, #32]
     8a4:	str	x3, [sp, #24]
     8a8:	ldr	x4, [sp, #24]
     8ac:	mov	x3, #0x0                   	// #0
     8b0:	ldr	w2, [sp, #32]
     8b4:	ldr	w1, [sp, #36]
     8b8:	ldr	x0, [sp, #40]
     8bc:	bl	650 <ext2fs_create_icount2>
     8c0:	ldp	x29, x30, [sp], #48
     8c4:	ret

00000000000008c8 <insert_icount_el>:
     8c8:	stp	x29, x30, [sp, #-64]!
     8cc:	mov	x29, sp
     8d0:	str	x0, [sp, #24]
     8d4:	str	w1, [sp, #20]
     8d8:	str	w2, [sp, #16]
     8dc:	str	wzr, [sp, #60]
     8e0:	ldr	x0, [sp, #24]
     8e4:	ldr	x0, [x0, #48]
     8e8:	cmp	x0, #0x0
     8ec:	b.eq	914 <insert_icount_el+0x4c>  // b.none
     8f0:	ldr	x0, [sp, #24]
     8f4:	ldr	x0, [x0, #48]
     8f8:	ldr	w0, [x0]
     8fc:	ldr	w1, [sp, #20]
     900:	cmp	w1, w0
     904:	b.ne	914 <insert_icount_el+0x4c>  // b.any
     908:	ldr	x0, [sp, #24]
     90c:	ldr	x0, [x0, #48]
     910:	b	ad4 <insert_icount_el+0x20c>
     914:	ldr	x0, [sp, #24]
     918:	ldr	w1, [x0, #24]
     91c:	ldr	x0, [sp, #24]
     920:	ldr	w0, [x0, #28]
     924:	cmp	w1, w0
     928:	b.cc	a0c <insert_icount_el+0x144>  // b.lo, b.ul, b.last
     92c:	ldr	x0, [sp, #24]
     930:	ldr	w0, [x0, #24]
     934:	cmp	w0, #0x0
     938:	b.eq	994 <insert_icount_el+0xcc>  // b.none
     93c:	ldr	x0, [sp, #24]
     940:	ldr	x1, [x0, #40]
     944:	ldr	x0, [sp, #24]
     948:	ldr	w0, [x0, #24]
     94c:	sub	w0, w0, #0x1
     950:	mov	w0, w0
     954:	lsl	x0, x0, #3
     958:	add	x0, x1, x0
     95c:	ldr	w0, [x0]
     960:	str	w0, [sp, #60]
     964:	ldr	x0, [sp, #24]
     968:	ldr	s0, [x0, #24]
     96c:	ucvtf	s1, s0
     970:	ldr	x0, [sp, #24]
     974:	ldr	s0, [x0, #32]
     978:	ucvtf	s2, s0
     97c:	ldr	s0, [sp, #60]
     980:	ucvtf	s0, s0
     984:	fdiv	s0, s2, s0
     988:	fmul	s0, s1, s0
     98c:	fcvtzu	s0, s0
     990:	str	s0, [sp, #60]
     994:	ldr	x0, [sp, #24]
     998:	ldr	w0, [x0, #28]
     99c:	add	w0, w0, #0x64
     9a0:	ldr	w1, [sp, #60]
     9a4:	cmp	w1, w0
     9a8:	b.cs	9bc <insert_icount_el+0xf4>  // b.hs, b.nlast
     9ac:	ldr	x0, [sp, #24]
     9b0:	ldr	w0, [x0, #28]
     9b4:	add	w0, w0, #0x64
     9b8:	str	w0, [sp, #60]
     9bc:	ldr	x0, [sp, #24]
     9c0:	ldr	w0, [x0, #28]
     9c4:	mov	w0, w0
     9c8:	lsl	x3, x0, #3
     9cc:	ldr	w0, [sp, #60]
     9d0:	lsl	x1, x0, #3
     9d4:	ldr	x0, [sp, #24]
     9d8:	add	x0, x0, #0x28
     9dc:	mov	x2, x0
     9e0:	mov	x0, x3
     9e4:	bl	0 <ext2fs_resize_mem>
     9e8:	str	x0, [sp, #48]
     9ec:	ldr	x0, [sp, #48]
     9f0:	cmp	x0, #0x0
     9f4:	b.eq	a00 <insert_icount_el+0x138>  // b.none
     9f8:	mov	x0, #0x0                   	// #0
     9fc:	b	ad4 <insert_icount_el+0x20c>
     a00:	ldr	x0, [sp, #24]
     a04:	ldr	w1, [sp, #60]
     a08:	str	w1, [x0, #28]
     a0c:	ldr	x0, [sp, #24]
     a10:	ldr	w0, [x0, #24]
     a14:	mov	w1, w0
     a18:	ldr	w0, [sp, #16]
     a1c:	sub	w0, w1, w0
     a20:	str	w0, [sp, #44]
     a24:	ldr	w0, [sp, #44]
     a28:	cmp	w0, #0x0
     a2c:	b.ge	a38 <insert_icount_el+0x170>  // b.tcont
     a30:	mov	x0, #0x0                   	// #0
     a34:	b	ad4 <insert_icount_el+0x20c>
     a38:	ldr	w0, [sp, #44]
     a3c:	cmp	w0, #0x0
     a40:	b.eq	a84 <insert_icount_el+0x1bc>  // b.none
     a44:	ldr	x0, [sp, #24]
     a48:	ldr	x1, [x0, #40]
     a4c:	ldrsw	x0, [sp, #16]
     a50:	add	x0, x0, #0x1
     a54:	lsl	x0, x0, #3
     a58:	add	x3, x1, x0
     a5c:	ldr	x0, [sp, #24]
     a60:	ldr	x1, [x0, #40]
     a64:	ldrsw	x0, [sp, #16]
     a68:	lsl	x0, x0, #3
     a6c:	add	x1, x1, x0
     a70:	ldrsw	x0, [sp, #44]
     a74:	lsl	x0, x0, #3
     a78:	mov	x2, x0
     a7c:	mov	x0, x3
     a80:	bl	0 <memmove>
     a84:	ldr	x0, [sp, #24]
     a88:	ldr	w0, [x0, #24]
     a8c:	add	w1, w0, #0x1
     a90:	ldr	x0, [sp, #24]
     a94:	str	w1, [x0, #24]
     a98:	ldr	x0, [sp, #24]
     a9c:	ldr	x1, [x0, #40]
     aa0:	ldrsw	x0, [sp, #16]
     aa4:	lsl	x0, x0, #3
     aa8:	add	x0, x1, x0
     aac:	str	x0, [sp, #32]
     ab0:	ldr	x0, [sp, #32]
     ab4:	str	wzr, [x0, #4]
     ab8:	ldr	x0, [sp, #32]
     abc:	ldr	w1, [sp, #20]
     ac0:	str	w1, [x0]
     ac4:	ldr	x0, [sp, #24]
     ac8:	ldr	x1, [sp, #32]
     acc:	str	x1, [x0, #48]
     ad0:	ldr	x0, [sp, #32]
     ad4:	ldp	x29, x30, [sp], #64
     ad8:	ret

0000000000000adc <get_icount_el>:
     adc:	stp	x29, x30, [sp, #-48]!
     ae0:	mov	x29, sp
     ae4:	str	x0, [sp, #24]
     ae8:	str	w1, [sp, #20]
     aec:	str	w2, [sp, #16]
     af0:	ldr	x0, [sp, #24]
     af4:	cmp	x0, #0x0
     af8:	b.eq	b0c <get_icount_el+0x30>  // b.none
     afc:	ldr	x0, [sp, #24]
     b00:	ldr	x0, [x0, #40]
     b04:	cmp	x0, #0x0
     b08:	b.ne	b14 <get_icount_el+0x38>  // b.any
     b0c:	mov	x0, #0x0                   	// #0
     b10:	b	cfc <get_icount_el+0x220>
     b14:	ldr	w0, [sp, #16]
     b18:	cmp	w0, #0x0
     b1c:	b.eq	b7c <get_icount_el+0xa0>  // b.none
     b20:	ldr	x0, [sp, #24]
     b24:	ldr	w0, [x0, #24]
     b28:	cmp	w0, #0x0
     b2c:	b.eq	b60 <get_icount_el+0x84>  // b.none
     b30:	ldr	x0, [sp, #24]
     b34:	ldr	x1, [x0, #40]
     b38:	ldr	x0, [sp, #24]
     b3c:	ldr	w0, [x0, #24]
     b40:	sub	w0, w0, #0x1
     b44:	mov	w0, w0
     b48:	lsl	x0, x0, #3
     b4c:	add	x0, x1, x0
     b50:	ldr	w0, [x0]
     b54:	ldr	w1, [sp, #20]
     b58:	cmp	w1, w0
     b5c:	b.ls	b7c <get_icount_el+0xa0>  // b.plast
     b60:	ldr	x0, [sp, #24]
     b64:	ldr	w0, [x0, #24]
     b68:	mov	w2, w0
     b6c:	ldr	w1, [sp, #20]
     b70:	ldr	x0, [sp, #24]
     b74:	bl	8c8 <insert_icount_el>
     b78:	b	cfc <get_icount_el+0x220>
     b7c:	ldr	x0, [sp, #24]
     b80:	ldr	w0, [x0, #24]
     b84:	cmp	w0, #0x0
     b88:	b.ne	b94 <get_icount_el+0xb8>  // b.any
     b8c:	mov	x0, #0x0                   	// #0
     b90:	b	cfc <get_icount_el+0x220>
     b94:	ldr	x0, [sp, #24]
     b98:	ldr	w1, [x0, #36]
     b9c:	ldr	x0, [sp, #24]
     ba0:	ldr	w0, [x0, #24]
     ba4:	cmp	w1, w0
     ba8:	b.cc	bb4 <get_icount_el+0xd8>  // b.lo, b.ul, b.last
     bac:	ldr	x0, [sp, #24]
     bb0:	str	wzr, [x0, #36]
     bb4:	ldr	x0, [sp, #24]
     bb8:	ldr	x1, [x0, #40]
     bbc:	ldr	x0, [sp, #24]
     bc0:	ldr	w0, [x0, #36]
     bc4:	mov	w0, w0
     bc8:	lsl	x0, x0, #3
     bcc:	add	x0, x1, x0
     bd0:	ldr	w0, [x0]
     bd4:	ldr	w1, [sp, #20]
     bd8:	cmp	w1, w0
     bdc:	b.ne	c0c <get_icount_el+0x130>  // b.any
     be0:	ldr	x0, [sp, #24]
     be4:	ldr	x1, [x0, #40]
     be8:	ldr	x0, [sp, #24]
     bec:	ldr	w0, [x0, #36]
     bf0:	add	w3, w0, #0x1
     bf4:	ldr	x2, [sp, #24]
     bf8:	str	w3, [x2, #36]
     bfc:	mov	w0, w0
     c00:	lsl	x0, x0, #3
     c04:	add	x0, x1, x0
     c08:	b	cfc <get_icount_el+0x220>
     c0c:	str	wzr, [sp, #44]
     c10:	ldr	x0, [sp, #24]
     c14:	ldr	w0, [x0, #24]
     c18:	sub	w0, w0, #0x1
     c1c:	str	w0, [sp, #40]
     c20:	b	cc8 <get_icount_el+0x1ec>
     c24:	ldr	w1, [sp, #44]
     c28:	ldr	w0, [sp, #40]
     c2c:	add	w0, w1, w0
     c30:	lsr	w0, w0, #1
     c34:	str	w0, [sp, #36]
     c38:	ldr	x0, [sp, #24]
     c3c:	ldr	x1, [x0, #40]
     c40:	ldrsw	x0, [sp, #36]
     c44:	lsl	x0, x0, #3
     c48:	add	x0, x1, x0
     c4c:	ldr	w0, [x0]
     c50:	ldr	w1, [sp, #20]
     c54:	cmp	w1, w0
     c58:	b.ne	c88 <get_icount_el+0x1ac>  // b.any
     c5c:	ldr	w0, [sp, #36]
     c60:	add	w0, w0, #0x1
     c64:	mov	w1, w0
     c68:	ldr	x0, [sp, #24]
     c6c:	str	w1, [x0, #36]
     c70:	ldr	x0, [sp, #24]
     c74:	ldr	x1, [x0, #40]
     c78:	ldrsw	x0, [sp, #36]
     c7c:	lsl	x0, x0, #3
     c80:	add	x0, x1, x0
     c84:	b	cfc <get_icount_el+0x220>
     c88:	ldr	x0, [sp, #24]
     c8c:	ldr	x1, [x0, #40]
     c90:	ldrsw	x0, [sp, #36]
     c94:	lsl	x0, x0, #3
     c98:	add	x0, x1, x0
     c9c:	ldr	w0, [x0]
     ca0:	ldr	w1, [sp, #20]
     ca4:	cmp	w1, w0
     ca8:	b.cs	cbc <get_icount_el+0x1e0>  // b.hs, b.nlast
     cac:	ldr	w0, [sp, #36]
     cb0:	sub	w0, w0, #0x1
     cb4:	str	w0, [sp, #40]
     cb8:	b	cc8 <get_icount_el+0x1ec>
     cbc:	ldr	w0, [sp, #36]
     cc0:	add	w0, w0, #0x1
     cc4:	str	w0, [sp, #44]
     cc8:	ldr	w1, [sp, #44]
     ccc:	ldr	w0, [sp, #40]
     cd0:	cmp	w1, w0
     cd4:	b.le	c24 <get_icount_el+0x148>
     cd8:	ldr	w0, [sp, #16]
     cdc:	cmp	w0, #0x0
     ce0:	b.eq	cf8 <get_icount_el+0x21c>  // b.none
     ce4:	ldr	w2, [sp, #44]
     ce8:	ldr	w1, [sp, #20]
     cec:	ldr	x0, [sp, #24]
     cf0:	bl	8c8 <insert_icount_el>
     cf4:	b	cfc <get_icount_el+0x220>
     cf8:	mov	x0, #0x0                   	// #0
     cfc:	ldp	x29, x30, [sp], #48
     d00:	ret

0000000000000d04 <set_inode_count>:
     d04:	stp	x29, x30, [sp, #-80]!
     d08:	mov	x29, sp
     d0c:	str	x0, [sp, #24]
     d10:	str	w1, [sp, #20]
     d14:	str	w2, [sp, #16]
     d18:	ldr	x0, [sp, #24]
     d1c:	ldr	x0, [x0, #64]
     d20:	cmp	x0, #0x0
     d24:	b.eq	dd4 <set_inode_count+0xd0>  // b.none
     d28:	add	x0, sp, #0x14
     d2c:	str	x0, [sp, #56]
     d30:	mov	x0, #0x4                   	// #4
     d34:	str	x0, [sp, #64]
     d38:	add	x0, sp, #0x10
     d3c:	str	x0, [sp, #40]
     d40:	mov	x0, #0x4                   	// #4
     d44:	str	x0, [sp, #48]
     d48:	ldr	w0, [sp, #16]
     d4c:	cmp	w0, #0x0
     d50:	b.eq	d94 <set_inode_count+0x90>  // b.none
     d54:	ldr	x0, [sp, #24]
     d58:	ldr	x0, [x0, #64]
     d5c:	mov	w5, #0x1                   	// #1
     d60:	ldp	x3, x4, [sp, #40]
     d64:	ldp	x1, x2, [sp, #56]
     d68:	bl	0 <ext2fs_tdb_store>
     d6c:	cmp	w0, #0x0
     d70:	b.eq	dcc <set_inode_count+0xc8>  // b.none
     d74:	ldr	x0, [sp, #24]
     d78:	ldr	x0, [x0, #64]
     d7c:	bl	0 <ext2fs_tdb_error>
     d80:	mov	w1, w0
     d84:	mov	x0, #0xb760                	// #46944
     d88:	movk	x0, #0x7f2b, lsl #16
     d8c:	add	x0, x1, x0
     d90:	b	e60 <set_inode_count+0x15c>
     d94:	ldr	x0, [sp, #24]
     d98:	ldr	x0, [x0, #64]
     d9c:	ldp	x1, x2, [sp, #56]
     da0:	bl	0 <ext2fs_tdb_delete>
     da4:	cmp	w0, #0x0
     da8:	b.eq	dcc <set_inode_count+0xc8>  // b.none
     dac:	ldr	x0, [sp, #24]
     db0:	ldr	x0, [x0, #64]
     db4:	bl	0 <ext2fs_tdb_error>
     db8:	mov	w1, w0
     dbc:	mov	x0, #0xb760                	// #46944
     dc0:	movk	x0, #0x7f2b, lsl #16
     dc4:	add	x0, x1, x0
     dc8:	b	e60 <set_inode_count+0x15c>
     dcc:	mov	x0, #0x0                   	// #0
     dd0:	b	e60 <set_inode_count+0x15c>
     dd4:	ldr	x0, [sp, #24]
     dd8:	ldr	x0, [x0, #72]
     ddc:	cmp	x0, #0x0
     de0:	b.eq	e20 <set_inode_count+0x11c>  // b.none
     de4:	ldr	w0, [sp, #16]
     de8:	mov	w2, #0xffdc                	// #65500
     dec:	mov	w1, #0xffdc                	// #65500
     df0:	cmp	w0, w2
     df4:	csel	w2, w0, w1, ls  // ls = plast
     df8:	ldr	x0, [sp, #24]
     dfc:	ldr	x1, [x0, #72]
     e00:	ldr	w0, [sp, #20]
     e04:	mov	w0, w0
     e08:	lsl	x0, x0, #1
     e0c:	add	x0, x1, x0
     e10:	and	w1, w2, #0xffff
     e14:	strh	w1, [x0]
     e18:	mov	x0, #0x0                   	// #0
     e1c:	b	e60 <set_inode_count+0x15c>
     e20:	ldr	w0, [sp, #20]
     e24:	mov	w2, #0x1                   	// #1
     e28:	mov	w1, w0
     e2c:	ldr	x0, [sp, #24]
     e30:	bl	adc <get_icount_el>
     e34:	str	x0, [sp, #72]
     e38:	ldr	x0, [sp, #72]
     e3c:	cmp	x0, #0x0
     e40:	b.ne	e50 <set_inode_count+0x14c>  // b.any
     e44:	mov	x0, #0xb746                	// #46918
     e48:	movk	x0, #0x7f2b, lsl #16
     e4c:	b	e60 <set_inode_count+0x15c>
     e50:	ldr	w1, [sp, #16]
     e54:	ldr	x0, [sp, #72]
     e58:	str	w1, [x0, #4]
     e5c:	mov	x0, #0x0                   	// #0
     e60:	ldp	x29, x30, [sp], #80
     e64:	ret

0000000000000e68 <get_inode_count>:
     e68:	stp	x29, x30, [sp, #-96]!
     e6c:	mov	x29, sp
     e70:	str	x0, [sp, #40]
     e74:	str	w1, [sp, #36]
     e78:	str	x2, [sp, #24]
     e7c:	ldr	x0, [sp, #40]
     e80:	ldr	x0, [x0, #64]
     e84:	cmp	x0, #0x0
     e88:	b.eq	f04 <get_inode_count+0x9c>  // b.none
     e8c:	add	x0, sp, #0x24
     e90:	str	x0, [sp, #72]
     e94:	mov	x0, #0x4                   	// #4
     e98:	str	x0, [sp, #80]
     e9c:	ldr	x0, [sp, #40]
     ea0:	ldr	x0, [x0, #64]
     ea4:	ldp	x1, x2, [sp, #72]
     ea8:	bl	0 <ext2fs_tdb_fetch>
     eac:	stp	x0, x1, [sp, #56]
     eb0:	ldr	x0, [sp, #56]
     eb4:	cmp	x0, #0x0
     eb8:	b.ne	ee4 <get_inode_count+0x7c>  // b.any
     ebc:	ldr	x0, [sp, #24]
     ec0:	str	wzr, [x0]
     ec4:	ldr	x0, [sp, #40]
     ec8:	ldr	x0, [x0, #64]
     ecc:	bl	0 <ext2fs_tdb_error>
     ed0:	mov	w1, w0
     ed4:	mov	x0, #0xb760                	// #46944
     ed8:	movk	x0, #0x7f2b, lsl #16
     edc:	add	x0, x1, x0
     ee0:	b	f8c <get_inode_count+0x124>
     ee4:	ldr	x0, [sp, #56]
     ee8:	ldr	w1, [x0]
     eec:	ldr	x0, [sp, #24]
     ef0:	str	w1, [x0]
     ef4:	ldr	x0, [sp, #56]
     ef8:	bl	0 <free>
     efc:	mov	x0, #0x0                   	// #0
     f00:	b	f8c <get_inode_count+0x124>
     f04:	ldr	x0, [sp, #40]
     f08:	ldr	x0, [x0, #72]
     f0c:	cmp	x0, #0x0
     f10:	b.eq	f44 <get_inode_count+0xdc>  // b.none
     f14:	ldr	x0, [sp, #40]
     f18:	ldr	x1, [x0, #72]
     f1c:	ldr	w0, [sp, #36]
     f20:	mov	w0, w0
     f24:	lsl	x0, x0, #1
     f28:	add	x0, x1, x0
     f2c:	ldrh	w0, [x0]
     f30:	mov	w1, w0
     f34:	ldr	x0, [sp, #24]
     f38:	str	w1, [x0]
     f3c:	mov	x0, #0x0                   	// #0
     f40:	b	f8c <get_inode_count+0x124>
     f44:	ldr	w0, [sp, #36]
     f48:	mov	w2, #0x0                   	// #0
     f4c:	mov	w1, w0
     f50:	ldr	x0, [sp, #40]
     f54:	bl	adc <get_icount_el>
     f58:	str	x0, [sp, #88]
     f5c:	ldr	x0, [sp, #88]
     f60:	cmp	x0, #0x0
     f64:	b.ne	f78 <get_inode_count+0x110>  // b.any
     f68:	ldr	x0, [sp, #24]
     f6c:	str	wzr, [x0]
     f70:	mov	x0, #0x2                   	// #2
     f74:	b	f8c <get_inode_count+0x124>
     f78:	ldr	x0, [sp, #88]
     f7c:	ldr	w1, [x0, #4]
     f80:	ldr	x0, [sp, #24]
     f84:	str	w1, [x0]
     f88:	mov	x0, #0x0                   	// #0
     f8c:	ldp	x29, x30, [sp], #96
     f90:	ret

0000000000000f94 <ext2fs_icount_validate>:
     f94:	stp	x29, x30, [sp, #-64]!
     f98:	mov	x29, sp
     f9c:	str	x0, [sp, #24]
     fa0:	str	x1, [sp, #16]
     fa4:	str	xzr, [sp, #56]
     fa8:	adrp	x0, 0 <ext2fs_free_icount>
     fac:	add	x0, x0, #0x0
     fb0:	str	x0, [sp, #40]
     fb4:	ldr	x0, [sp, #24]
     fb8:	ldr	x1, [x0]
     fbc:	mov	x0, #0xb70d                	// #46861
     fc0:	movk	x0, #0x7f2b, lsl #16
     fc4:	cmp	x1, x0
     fc8:	b.eq	fd8 <ext2fs_icount_validate+0x44>  // b.none
     fcc:	mov	x0, #0xb70d                	// #46861
     fd0:	movk	x0, #0x7f2b, lsl #16
     fd4:	b	10f0 <ext2fs_icount_validate+0x15c>
     fd8:	ldr	x0, [sp, #24]
     fdc:	ldr	w1, [x0, #24]
     fe0:	ldr	x0, [sp, #24]
     fe4:	ldr	w0, [x0, #28]
     fe8:	cmp	w1, w0
     fec:	b.ls	1010 <ext2fs_icount_validate+0x7c>  // b.plast
     ff0:	ldr	x2, [sp, #40]
     ff4:	adrp	x0, 0 <ext2fs_free_icount>
     ff8:	add	x1, x0, #0x0
     ffc:	ldr	x0, [sp, #16]
    1000:	bl	0 <fprintf>
    1004:	mov	x0, #0xb747                	// #46919
    1008:	movk	x0, #0x7f2b, lsl #16
    100c:	b	10f0 <ext2fs_icount_validate+0x15c>
    1010:	mov	w0, #0x1                   	// #1
    1014:	str	w0, [sp, #52]
    1018:	b	10d8 <ext2fs_icount_validate+0x144>
    101c:	ldr	x0, [sp, #24]
    1020:	ldr	x1, [x0, #40]
    1024:	ldr	w0, [sp, #52]
    1028:	sub	w0, w0, #0x1
    102c:	mov	w0, w0
    1030:	lsl	x0, x0, #3
    1034:	add	x0, x1, x0
    1038:	ldr	w1, [x0]
    103c:	ldr	x0, [sp, #24]
    1040:	ldr	x2, [x0, #40]
    1044:	ldr	w0, [sp, #52]
    1048:	lsl	x0, x0, #3
    104c:	add	x0, x2, x0
    1050:	ldr	w0, [x0]
    1054:	cmp	w1, w0
    1058:	b.cc	10cc <ext2fs_icount_validate+0x138>  // b.lo, b.ul, b.last
    105c:	ldr	w0, [sp, #52]
    1060:	sub	w2, w0, #0x1
    1064:	ldr	x0, [sp, #24]
    1068:	ldr	x1, [x0, #40]
    106c:	ldr	w0, [sp, #52]
    1070:	sub	w0, w0, #0x1
    1074:	mov	w0, w0
    1078:	lsl	x0, x0, #3
    107c:	add	x0, x1, x0
    1080:	ldr	w3, [x0]
    1084:	ldr	x0, [sp, #24]
    1088:	ldr	x1, [x0, #40]
    108c:	ldr	w0, [sp, #52]
    1090:	lsl	x0, x0, #3
    1094:	add	x0, x1, x0
    1098:	ldr	w0, [x0]
    109c:	mov	w6, w0
    10a0:	ldr	w5, [sp, #52]
    10a4:	mov	w4, w3
    10a8:	mov	w3, w2
    10ac:	ldr	x2, [sp, #40]
    10b0:	adrp	x0, 0 <ext2fs_free_icount>
    10b4:	add	x1, x0, #0x0
    10b8:	ldr	x0, [sp, #16]
    10bc:	bl	0 <fprintf>
    10c0:	mov	x0, #0xb747                	// #46919
    10c4:	movk	x0, #0x7f2b, lsl #16
    10c8:	str	x0, [sp, #56]
    10cc:	ldr	w0, [sp, #52]
    10d0:	add	w0, w0, #0x1
    10d4:	str	w0, [sp, #52]
    10d8:	ldr	x0, [sp, #24]
    10dc:	ldr	w0, [x0, #24]
    10e0:	ldr	w1, [sp, #52]
    10e4:	cmp	w1, w0
    10e8:	b.cc	101c <ext2fs_icount_validate+0x88>  // b.lo, b.ul, b.last
    10ec:	ldr	x0, [sp, #56]
    10f0:	ldp	x29, x30, [sp], #64
    10f4:	ret

00000000000010f8 <ext2fs_icount_fetch>:
    10f8:	stp	x29, x30, [sp, #-64]!
    10fc:	mov	x29, sp
    1100:	str	x0, [sp, #40]
    1104:	str	w1, [sp, #36]
    1108:	str	x2, [sp, #24]
    110c:	ldr	x0, [sp, #40]
    1110:	ldr	x1, [x0]
    1114:	mov	x0, #0xb70d                	// #46861
    1118:	movk	x0, #0x7f2b, lsl #16
    111c:	cmp	x1, x0
    1120:	b.eq	1130 <ext2fs_icount_fetch+0x38>  // b.none
    1124:	mov	x0, #0xb70d                	// #46861
    1128:	movk	x0, #0x7f2b, lsl #16
    112c:	b	1208 <ext2fs_icount_fetch+0x110>
    1130:	ldr	w0, [sp, #36]
    1134:	cmp	w0, #0x0
    1138:	b.eq	1150 <ext2fs_icount_fetch+0x58>  // b.none
    113c:	ldr	x0, [sp, #40]
    1140:	ldr	w0, [x0, #32]
    1144:	ldr	w1, [sp, #36]
    1148:	cmp	w1, w0
    114c:	b.ls	115c <ext2fs_icount_fetch+0x64>  // b.plast
    1150:	mov	x0, #0xb747                	// #46919
    1154:	movk	x0, #0x7f2b, lsl #16
    1158:	b	1208 <ext2fs_icount_fetch+0x110>
    115c:	ldr	x0, [sp, #40]
    1160:	ldr	x0, [x0, #72]
    1164:	cmp	x0, #0x0
    1168:	b.ne	11d0 <ext2fs_icount_fetch+0xd8>  // b.any
    116c:	ldr	x0, [sp, #40]
    1170:	ldr	x0, [x0, #8]
    1174:	ldr	w1, [sp, #36]
    1178:	bl	0 <ext2fs_test_inode_bitmap2>
    117c:	cmp	w0, #0x0
    1180:	b.eq	1198 <ext2fs_icount_fetch+0xa0>  // b.none
    1184:	ldr	x0, [sp, #24]
    1188:	mov	w1, #0x1                   	// #1
    118c:	strh	w1, [x0]
    1190:	mov	x0, #0x0                   	// #0
    1194:	b	1208 <ext2fs_icount_fetch+0x110>
    1198:	ldr	x0, [sp, #40]
    119c:	ldr	x0, [x0, #16]
    11a0:	cmp	x0, #0x0
    11a4:	b.eq	11d0 <ext2fs_icount_fetch+0xd8>  // b.none
    11a8:	ldr	x0, [sp, #40]
    11ac:	ldr	x0, [x0, #16]
    11b0:	ldr	w1, [sp, #36]
    11b4:	bl	0 <ext2fs_test_inode_bitmap2>
    11b8:	cmp	w0, #0x0
    11bc:	b.ne	11d0 <ext2fs_icount_fetch+0xd8>  // b.any
    11c0:	ldr	x0, [sp, #24]
    11c4:	strh	wzr, [x0]
    11c8:	mov	x0, #0x0                   	// #0
    11cc:	b	1208 <ext2fs_icount_fetch+0x110>
    11d0:	add	x0, sp, #0x3c
    11d4:	mov	x2, x0
    11d8:	ldr	w1, [sp, #36]
    11dc:	ldr	x0, [sp, #40]
    11e0:	bl	e68 <get_inode_count>
    11e4:	ldr	w0, [sp, #60]
    11e8:	mov	w2, #0xffdc                	// #65500
    11ec:	mov	w1, #0xffdc                	// #65500
    11f0:	cmp	w0, w2
    11f4:	csel	w0, w0, w1, ls  // ls = plast
    11f8:	and	w1, w0, #0xffff
    11fc:	ldr	x0, [sp, #24]
    1200:	strh	w1, [x0]
    1204:	mov	x0, #0x0                   	// #0
    1208:	ldp	x29, x30, [sp], #64
    120c:	ret

0000000000001210 <ext2fs_icount_increment>:
    1210:	stp	x29, x30, [sp, #-64]!
    1214:	mov	x29, sp
    1218:	str	x0, [sp, #40]
    121c:	str	w1, [sp, #36]
    1220:	str	x2, [sp, #24]
    1224:	ldr	x0, [sp, #40]
    1228:	ldr	x1, [x0]
    122c:	mov	x0, #0xb70d                	// #46861
    1230:	movk	x0, #0x7f2b, lsl #16
    1234:	cmp	x1, x0
    1238:	b.eq	1248 <ext2fs_icount_increment+0x38>  // b.none
    123c:	mov	x0, #0xb70d                	// #46861
    1240:	movk	x0, #0x7f2b, lsl #16
    1244:	b	1484 <ext2fs_icount_increment+0x274>
    1248:	ldr	w0, [sp, #36]
    124c:	cmp	w0, #0x0
    1250:	b.eq	1268 <ext2fs_icount_increment+0x58>  // b.none
    1254:	ldr	x0, [sp, #40]
    1258:	ldr	w0, [x0, #32]
    125c:	ldr	w1, [sp, #36]
    1260:	cmp	w1, w0
    1264:	b.ls	1274 <ext2fs_icount_increment+0x64>  // b.plast
    1268:	mov	x0, #0xb747                	// #46919
    126c:	movk	x0, #0x7f2b, lsl #16
    1270:	b	1484 <ext2fs_icount_increment+0x274>
    1274:	ldr	x0, [sp, #40]
    1278:	ldr	x0, [x0, #72]
    127c:	cmp	x0, #0x0
    1280:	b.eq	12f4 <ext2fs_icount_increment+0xe4>  // b.none
    1284:	ldr	x0, [sp, #40]
    1288:	ldr	x1, [x0, #72]
    128c:	ldr	w0, [sp, #36]
    1290:	lsl	x0, x0, #1
    1294:	add	x0, x1, x0
    1298:	ldrh	w1, [x0]
    129c:	mov	w0, #0xffdb                	// #65499
    12a0:	cmp	w1, w0
    12a4:	b.hi	12c8 <ext2fs_icount_increment+0xb8>  // b.pmore
    12a8:	ldr	x0, [sp, #40]
    12ac:	ldr	x1, [x0, #72]
    12b0:	ldr	w0, [sp, #36]
    12b4:	lsl	x0, x0, #1
    12b8:	add	x0, x1, x0
    12bc:	ldrh	w0, [x0]
    12c0:	add	w0, w0, #0x1
    12c4:	b	12cc <ext2fs_icount_increment+0xbc>
    12c8:	mov	w0, #0xffdc                	// #65500
    12cc:	str	w0, [sp, #60]
    12d0:	ldr	w2, [sp, #60]
    12d4:	ldr	x0, [sp, #40]
    12d8:	ldr	x1, [x0, #72]
    12dc:	ldr	w0, [sp, #36]
    12e0:	lsl	x0, x0, #1
    12e4:	add	x0, x1, x0
    12e8:	and	w1, w2, #0xffff
    12ec:	strh	w1, [x0]
    12f0:	b	1434 <ext2fs_icount_increment+0x224>
    12f4:	ldr	x0, [sp, #40]
    12f8:	ldr	x0, [x0, #8]
    12fc:	ldr	w1, [sp, #36]
    1300:	bl	0 <ext2fs_test_inode_bitmap2>
    1304:	cmp	w0, #0x0
    1308:	b.eq	134c <ext2fs_icount_increment+0x13c>  // b.none
    130c:	mov	w2, #0x2                   	// #2
    1310:	ldr	w1, [sp, #36]
    1314:	ldr	x0, [sp, #40]
    1318:	bl	d04 <set_inode_count>
    131c:	cmp	x0, #0x0
    1320:	b.eq	1330 <ext2fs_icount_increment+0x120>  // b.none
    1324:	mov	x0, #0xb746                	// #46918
    1328:	movk	x0, #0x7f2b, lsl #16
    132c:	b	1484 <ext2fs_icount_increment+0x274>
    1330:	mov	w0, #0x2                   	// #2
    1334:	str	w0, [sp, #60]
    1338:	ldr	x0, [sp, #40]
    133c:	ldr	x0, [x0, #8]
    1340:	ldr	w1, [sp, #36]
    1344:	bl	0 <ext2fs_unmark_inode_bitmap2>
    1348:	b	1434 <ext2fs_icount_increment+0x224>
    134c:	ldr	x0, [sp, #40]
    1350:	ldr	x0, [x0, #16]
    1354:	cmp	x0, #0x0
    1358:	b.eq	13ec <ext2fs_icount_increment+0x1dc>  // b.none
    135c:	ldr	x0, [sp, #40]
    1360:	ldr	x0, [x0, #16]
    1364:	ldr	w1, [sp, #36]
    1368:	bl	0 <ext2fs_test_inode_bitmap2>
    136c:	cmp	w0, #0x0
    1370:	b.eq	13bc <ext2fs_icount_increment+0x1ac>  // b.none
    1374:	add	x0, sp, #0x3c
    1378:	mov	x2, x0
    137c:	ldr	w1, [sp, #36]
    1380:	ldr	x0, [sp, #40]
    1384:	bl	e68 <get_inode_count>
    1388:	ldr	w0, [sp, #60]
    138c:	add	w0, w0, #0x1
    1390:	str	w0, [sp, #60]
    1394:	ldr	w0, [sp, #60]
    1398:	mov	w2, w0
    139c:	ldr	w1, [sp, #36]
    13a0:	ldr	x0, [sp, #40]
    13a4:	bl	d04 <set_inode_count>
    13a8:	cmp	x0, #0x0
    13ac:	b.eq	1434 <ext2fs_icount_increment+0x224>  // b.none
    13b0:	mov	x0, #0xb746                	// #46918
    13b4:	movk	x0, #0x7f2b, lsl #16
    13b8:	b	1484 <ext2fs_icount_increment+0x274>
    13bc:	ldr	x0, [sp, #40]
    13c0:	ldr	x0, [x0, #8]
    13c4:	ldr	w1, [sp, #36]
    13c8:	bl	0 <ext2fs_mark_inode_bitmap2>
    13cc:	ldr	x0, [sp, #24]
    13d0:	cmp	x0, #0x0
    13d4:	b.eq	13e4 <ext2fs_icount_increment+0x1d4>  // b.none
    13d8:	ldr	x0, [sp, #24]
    13dc:	mov	w1, #0x1                   	// #1
    13e0:	strh	w1, [x0]
    13e4:	mov	x0, #0x0                   	// #0
    13e8:	b	1484 <ext2fs_icount_increment+0x274>
    13ec:	add	x0, sp, #0x3c
    13f0:	mov	x2, x0
    13f4:	ldr	w1, [sp, #36]
    13f8:	ldr	x0, [sp, #40]
    13fc:	bl	e68 <get_inode_count>
    1400:	ldr	w0, [sp, #60]
    1404:	add	w0, w0, #0x1
    1408:	str	w0, [sp, #60]
    140c:	ldr	w0, [sp, #60]
    1410:	mov	w2, w0
    1414:	ldr	w1, [sp, #36]
    1418:	ldr	x0, [sp, #40]
    141c:	bl	d04 <set_inode_count>
    1420:	cmp	x0, #0x0
    1424:	b.eq	1434 <ext2fs_icount_increment+0x224>  // b.none
    1428:	mov	x0, #0xb746                	// #46918
    142c:	movk	x0, #0x7f2b, lsl #16
    1430:	b	1484 <ext2fs_icount_increment+0x274>
    1434:	ldr	x0, [sp, #40]
    1438:	ldr	x0, [x0, #16]
    143c:	cmp	x0, #0x0
    1440:	b.eq	1454 <ext2fs_icount_increment+0x244>  // b.none
    1444:	ldr	x0, [sp, #40]
    1448:	ldr	x0, [x0, #16]
    144c:	ldr	w1, [sp, #36]
    1450:	bl	0 <ext2fs_mark_inode_bitmap2>
    1454:	ldr	x0, [sp, #24]
    1458:	cmp	x0, #0x0
    145c:	b.eq	1480 <ext2fs_icount_increment+0x270>  // b.none
    1460:	ldr	w0, [sp, #60]
    1464:	mov	w2, #0xffdc                	// #65500
    1468:	mov	w1, #0xffdc                	// #65500
    146c:	cmp	w0, w2
    1470:	csel	w0, w0, w1, ls  // ls = plast
    1474:	and	w1, w0, #0xffff
    1478:	ldr	x0, [sp, #24]
    147c:	strh	w1, [x0]
    1480:	mov	x0, #0x0                   	// #0
    1484:	ldp	x29, x30, [sp], #64
    1488:	ret

000000000000148c <ext2fs_icount_decrement>:
    148c:	stp	x29, x30, [sp, #-64]!
    1490:	mov	x29, sp
    1494:	str	x0, [sp, #40]
    1498:	str	w1, [sp, #36]
    149c:	str	x2, [sp, #24]
    14a0:	ldr	w0, [sp, #36]
    14a4:	cmp	w0, #0x0
    14a8:	b.eq	14c0 <ext2fs_icount_decrement+0x34>  // b.none
    14ac:	ldr	x0, [sp, #40]
    14b0:	ldr	w0, [x0, #32]
    14b4:	ldr	w1, [sp, #36]
    14b8:	cmp	w1, w0
    14bc:	b.ls	14cc <ext2fs_icount_decrement+0x40>  // b.plast
    14c0:	mov	x0, #0xb747                	// #46919
    14c4:	movk	x0, #0x7f2b, lsl #16
    14c8:	b	1710 <ext2fs_icount_decrement+0x284>
    14cc:	ldr	x0, [sp, #40]
    14d0:	ldr	x1, [x0]
    14d4:	mov	x0, #0xb70d                	// #46861
    14d8:	movk	x0, #0x7f2b, lsl #16
    14dc:	cmp	x1, x0
    14e0:	b.eq	14f0 <ext2fs_icount_decrement+0x64>  // b.none
    14e4:	mov	x0, #0xb70d                	// #46861
    14e8:	movk	x0, #0x7f2b, lsl #16
    14ec:	b	1710 <ext2fs_icount_decrement+0x284>
    14f0:	ldr	x0, [sp, #40]
    14f4:	ldr	x0, [x0, #72]
    14f8:	cmp	x0, #0x0
    14fc:	b.eq	158c <ext2fs_icount_decrement+0x100>  // b.none
    1500:	ldr	x0, [sp, #40]
    1504:	ldr	x1, [x0, #72]
    1508:	ldr	w0, [sp, #36]
    150c:	lsl	x0, x0, #1
    1510:	add	x0, x1, x0
    1514:	ldrh	w0, [x0]
    1518:	cmp	w0, #0x0
    151c:	b.ne	152c <ext2fs_icount_decrement+0xa0>  // b.any
    1520:	mov	x0, #0xb747                	// #46919
    1524:	movk	x0, #0x7f2b, lsl #16
    1528:	b	1710 <ext2fs_icount_decrement+0x284>
    152c:	ldr	x0, [sp, #40]
    1530:	ldr	x1, [x0, #72]
    1534:	ldr	w0, [sp, #36]
    1538:	lsl	x0, x0, #1
    153c:	add	x0, x1, x0
    1540:	ldrh	w1, [x0]
    1544:	sub	w1, w1, #0x1
    1548:	and	w1, w1, #0xffff
    154c:	strh	w1, [x0]
    1550:	ldrh	w0, [x0]
    1554:	str	w0, [sp, #60]
    1558:	ldr	x0, [sp, #24]
    155c:	cmp	x0, #0x0
    1560:	b.eq	1584 <ext2fs_icount_decrement+0xf8>  // b.none
    1564:	ldr	w0, [sp, #60]
    1568:	mov	w2, #0xffdc                	// #65500
    156c:	mov	w1, #0xffdc                	// #65500
    1570:	cmp	w0, w2
    1574:	csel	w0, w0, w1, ls  // ls = plast
    1578:	and	w1, w0, #0xffff
    157c:	ldr	x0, [sp, #24]
    1580:	strh	w1, [x0]
    1584:	mov	x0, #0x0                   	// #0
    1588:	b	1710 <ext2fs_icount_decrement+0x284>
    158c:	ldr	x0, [sp, #40]
    1590:	ldr	x0, [x0, #8]
    1594:	ldr	w1, [sp, #36]
    1598:	bl	0 <ext2fs_test_inode_bitmap2>
    159c:	cmp	w0, #0x0
    15a0:	b.eq	1604 <ext2fs_icount_decrement+0x178>  // b.none
    15a4:	ldr	x0, [sp, #40]
    15a8:	ldr	x0, [x0, #8]
    15ac:	ldr	w1, [sp, #36]
    15b0:	bl	0 <ext2fs_unmark_inode_bitmap2>
    15b4:	ldr	x0, [sp, #40]
    15b8:	ldr	x0, [x0, #16]
    15bc:	cmp	x0, #0x0
    15c0:	b.eq	15d8 <ext2fs_icount_decrement+0x14c>  // b.none
    15c4:	ldr	x0, [sp, #40]
    15c8:	ldr	x0, [x0, #16]
    15cc:	ldr	w1, [sp, #36]
    15d0:	bl	0 <ext2fs_unmark_inode_bitmap2>
    15d4:	b	15e8 <ext2fs_icount_decrement+0x15c>
    15d8:	mov	w2, #0x0                   	// #0
    15dc:	ldr	w1, [sp, #36]
    15e0:	ldr	x0, [sp, #40]
    15e4:	bl	d04 <set_inode_count>
    15e8:	ldr	x0, [sp, #24]
    15ec:	cmp	x0, #0x0
    15f0:	b.eq	15fc <ext2fs_icount_decrement+0x170>  // b.none
    15f4:	ldr	x0, [sp, #24]
    15f8:	strh	wzr, [x0]
    15fc:	mov	x0, #0x0                   	// #0
    1600:	b	1710 <ext2fs_icount_decrement+0x284>
    1604:	ldr	x0, [sp, #40]
    1608:	ldr	x0, [x0, #16]
    160c:	cmp	x0, #0x0
    1610:	b.eq	1638 <ext2fs_icount_decrement+0x1ac>  // b.none
    1614:	ldr	x0, [sp, #40]
    1618:	ldr	x0, [x0, #16]
    161c:	ldr	w1, [sp, #36]
    1620:	bl	0 <ext2fs_test_inode_bitmap2>
    1624:	cmp	w0, #0x0
    1628:	b.ne	1638 <ext2fs_icount_decrement+0x1ac>  // b.any
    162c:	mov	x0, #0xb747                	// #46919
    1630:	movk	x0, #0x7f2b, lsl #16
    1634:	b	1710 <ext2fs_icount_decrement+0x284>
    1638:	add	x0, sp, #0x3c
    163c:	mov	x2, x0
    1640:	ldr	w1, [sp, #36]
    1644:	ldr	x0, [sp, #40]
    1648:	bl	e68 <get_inode_count>
    164c:	ldr	w0, [sp, #60]
    1650:	cmp	w0, #0x0
    1654:	b.ne	1664 <ext2fs_icount_decrement+0x1d8>  // b.any
    1658:	mov	x0, #0xb747                	// #46919
    165c:	movk	x0, #0x7f2b, lsl #16
    1660:	b	1710 <ext2fs_icount_decrement+0x284>
    1664:	ldr	w0, [sp, #60]
    1668:	sub	w0, w0, #0x1
    166c:	str	w0, [sp, #60]
    1670:	ldr	w0, [sp, #60]
    1674:	mov	w2, w0
    1678:	ldr	w1, [sp, #36]
    167c:	ldr	x0, [sp, #40]
    1680:	bl	d04 <set_inode_count>
    1684:	cmp	x0, #0x0
    1688:	b.eq	1698 <ext2fs_icount_decrement+0x20c>  // b.none
    168c:	mov	x0, #0xb746                	// #46918
    1690:	movk	x0, #0x7f2b, lsl #16
    1694:	b	1710 <ext2fs_icount_decrement+0x284>
    1698:	ldr	w0, [sp, #60]
    169c:	cmp	w0, #0x1
    16a0:	b.ne	16b4 <ext2fs_icount_decrement+0x228>  // b.any
    16a4:	ldr	x0, [sp, #40]
    16a8:	ldr	x0, [x0, #8]
    16ac:	ldr	w1, [sp, #36]
    16b0:	bl	0 <ext2fs_mark_inode_bitmap2>
    16b4:	ldr	w0, [sp, #60]
    16b8:	cmp	w0, #0x0
    16bc:	b.ne	16e0 <ext2fs_icount_decrement+0x254>  // b.any
    16c0:	ldr	x0, [sp, #40]
    16c4:	ldr	x0, [x0, #16]
    16c8:	cmp	x0, #0x0
    16cc:	b.eq	16e0 <ext2fs_icount_decrement+0x254>  // b.none
    16d0:	ldr	x0, [sp, #40]
    16d4:	ldr	x0, [x0, #16]
    16d8:	ldr	w1, [sp, #36]
    16dc:	bl	0 <ext2fs_unmark_inode_bitmap2>
    16e0:	ldr	x0, [sp, #24]
    16e4:	cmp	x0, #0x0
    16e8:	b.eq	170c <ext2fs_icount_decrement+0x280>  // b.none
    16ec:	ldr	w0, [sp, #60]
    16f0:	mov	w2, #0xffdc                	// #65500
    16f4:	mov	w1, #0xffdc                	// #65500
    16f8:	cmp	w0, w2
    16fc:	csel	w0, w0, w1, ls  // ls = plast
    1700:	and	w1, w0, #0xffff
    1704:	ldr	x0, [sp, #24]
    1708:	strh	w1, [x0]
    170c:	mov	x0, #0x0                   	// #0
    1710:	ldp	x29, x30, [sp], #64
    1714:	ret

0000000000001718 <ext2fs_icount_store>:
    1718:	stp	x29, x30, [sp, #-32]!
    171c:	mov	x29, sp
    1720:	str	x0, [sp, #24]
    1724:	str	w1, [sp, #20]
    1728:	strh	w2, [sp, #18]
    172c:	ldr	w0, [sp, #20]
    1730:	cmp	w0, #0x0
    1734:	b.eq	174c <ext2fs_icount_store+0x34>  // b.none
    1738:	ldr	x0, [sp, #24]
    173c:	ldr	w0, [x0, #32]
    1740:	ldr	w1, [sp, #20]
    1744:	cmp	w1, w0
    1748:	b.ls	1758 <ext2fs_icount_store+0x40>  // b.plast
    174c:	mov	x0, #0xb747                	// #46919
    1750:	movk	x0, #0x7f2b, lsl #16
    1754:	b	189c <ext2fs_icount_store+0x184>
    1758:	ldr	x0, [sp, #24]
    175c:	ldr	x1, [x0]
    1760:	mov	x0, #0xb70d                	// #46861
    1764:	movk	x0, #0x7f2b, lsl #16
    1768:	cmp	x1, x0
    176c:	b.eq	177c <ext2fs_icount_store+0x64>  // b.none
    1770:	mov	x0, #0xb70d                	// #46861
    1774:	movk	x0, #0x7f2b, lsl #16
    1778:	b	189c <ext2fs_icount_store+0x184>
    177c:	ldr	x0, [sp, #24]
    1780:	ldr	x0, [x0, #72]
    1784:	cmp	x0, #0x0
    1788:	b.eq	17a4 <ext2fs_icount_store+0x8c>  // b.none
    178c:	ldrh	w0, [sp, #18]
    1790:	mov	w2, w0
    1794:	ldr	w1, [sp, #20]
    1798:	ldr	x0, [sp, #24]
    179c:	bl	d04 <set_inode_count>
    17a0:	b	189c <ext2fs_icount_store+0x184>
    17a4:	ldrh	w0, [sp, #18]
    17a8:	cmp	w0, #0x1
    17ac:	b.ne	17e8 <ext2fs_icount_store+0xd0>  // b.any
    17b0:	ldr	x0, [sp, #24]
    17b4:	ldr	x0, [x0, #8]
    17b8:	ldr	w1, [sp, #20]
    17bc:	bl	0 <ext2fs_mark_inode_bitmap2>
    17c0:	ldr	x0, [sp, #24]
    17c4:	ldr	x0, [x0, #16]
    17c8:	cmp	x0, #0x0
    17cc:	b.eq	17e0 <ext2fs_icount_store+0xc8>  // b.none
    17d0:	ldr	x0, [sp, #24]
    17d4:	ldr	x0, [x0, #16]
    17d8:	ldr	w1, [sp, #20]
    17dc:	bl	0 <ext2fs_unmark_inode_bitmap2>
    17e0:	mov	x0, #0x0                   	// #0
    17e4:	b	189c <ext2fs_icount_store+0x184>
    17e8:	ldrh	w0, [sp, #18]
    17ec:	cmp	w0, #0x0
    17f0:	b.ne	1840 <ext2fs_icount_store+0x128>  // b.any
    17f4:	ldr	x0, [sp, #24]
    17f8:	ldr	x0, [x0, #8]
    17fc:	ldr	w1, [sp, #20]
    1800:	bl	0 <ext2fs_unmark_inode_bitmap2>
    1804:	ldr	x0, [sp, #24]
    1808:	ldr	x0, [x0, #16]
    180c:	cmp	x0, #0x0
    1810:	b.eq	1828 <ext2fs_icount_store+0x110>  // b.none
    1814:	ldr	x0, [sp, #24]
    1818:	ldr	x0, [x0, #16]
    181c:	ldr	w1, [sp, #20]
    1820:	bl	0 <ext2fs_unmark_inode_bitmap2>
    1824:	b	1838 <ext2fs_icount_store+0x120>
    1828:	mov	w2, #0x0                   	// #0
    182c:	ldr	w1, [sp, #20]
    1830:	ldr	x0, [sp, #24]
    1834:	bl	d04 <set_inode_count>
    1838:	mov	x0, #0x0                   	// #0
    183c:	b	189c <ext2fs_icount_store+0x184>
    1840:	ldrh	w0, [sp, #18]
    1844:	mov	w2, w0
    1848:	ldr	w1, [sp, #20]
    184c:	ldr	x0, [sp, #24]
    1850:	bl	d04 <set_inode_count>
    1854:	cmp	x0, #0x0
    1858:	b.eq	1868 <ext2fs_icount_store+0x150>  // b.none
    185c:	mov	x0, #0xb746                	// #46918
    1860:	movk	x0, #0x7f2b, lsl #16
    1864:	b	189c <ext2fs_icount_store+0x184>
    1868:	ldr	x0, [sp, #24]
    186c:	ldr	x0, [x0, #8]
    1870:	ldr	w1, [sp, #20]
    1874:	bl	0 <ext2fs_unmark_inode_bitmap2>
    1878:	ldr	x0, [sp, #24]
    187c:	ldr	x0, [x0, #16]
    1880:	cmp	x0, #0x0
    1884:	b.eq	1898 <ext2fs_icount_store+0x180>  // b.none
    1888:	ldr	x0, [sp, #24]
    188c:	ldr	x0, [x0, #16]
    1890:	ldr	w1, [sp, #20]
    1894:	bl	0 <ext2fs_mark_inode_bitmap2>
    1898:	mov	x0, #0x0                   	// #0
    189c:	ldp	x29, x30, [sp], #32
    18a0:	ret

00000000000018a4 <ext2fs_get_icount_size>:
    18a4:	sub	sp, sp, #0x10
    18a8:	str	x0, [sp, #8]
    18ac:	ldr	x0, [sp, #8]
    18b0:	cmp	x0, #0x0
    18b4:	b.eq	18d0 <ext2fs_get_icount_size+0x2c>  // b.none
    18b8:	ldr	x0, [sp, #8]
    18bc:	ldr	x1, [x0]
    18c0:	mov	x0, #0xb70d                	// #46861
    18c4:	movk	x0, #0x7f2b, lsl #16
    18c8:	cmp	x1, x0
    18cc:	b.eq	18d8 <ext2fs_get_icount_size+0x34>  // b.none
    18d0:	mov	w0, #0x0                   	// #0
    18d4:	b	18e0 <ext2fs_get_icount_size+0x3c>
    18d8:	ldr	x0, [sp, #8]
    18dc:	ldr	w0, [x0, #28]
    18e0:	add	sp, sp, #0x10
    18e4:	ret

ind_block.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_read_ind_block>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #40]
   c:	str	w1, [sp, #36]
  10:	str	x2, [sp, #24]
  14:	ldr	x0, [sp, #40]
  18:	ldr	w0, [x0, #16]
  1c:	and	w0, w0, #0x2000
  20:	cmp	w0, #0x0
  24:	b.eq	60 <ext2fs_read_ind_block+0x60>  // b.none
  28:	ldr	x0, [sp, #40]
  2c:	ldr	x1, [x0, #8]
  30:	ldr	x0, [sp, #40]
  34:	ldr	x0, [x0, #240]
  38:	cmp	x1, x0
  3c:	b.eq	60 <ext2fs_read_ind_block+0x60>  // b.none
  40:	ldr	x0, [sp, #40]
  44:	ldr	w0, [x0, #40]
  48:	mov	w0, w0
  4c:	mov	x2, x0
  50:	mov	w1, #0x0                   	// #0
  54:	ldr	x0, [sp, #24]
  58:	bl	0 <memset>
  5c:	b	a0 <ext2fs_read_ind_block+0xa0>
  60:	ldr	x0, [sp, #40]
  64:	ldr	x0, [x0, #8]
  68:	ldr	x0, [x0, #8]
  6c:	ldr	x4, [x0, #40]
  70:	ldr	x0, [sp, #40]
  74:	ldr	x0, [x0, #8]
  78:	ldr	w1, [sp, #36]
  7c:	ldr	x3, [sp, #24]
  80:	mov	w2, #0x1                   	// #1
  84:	blr	x4
  88:	str	x0, [sp, #56]
  8c:	ldr	x0, [sp, #56]
  90:	cmp	x0, #0x0
  94:	b.eq	a0 <ext2fs_read_ind_block+0xa0>  // b.none
  98:	ldr	x0, [sp, #56]
  9c:	b	a4 <ext2fs_read_ind_block+0xa4>
  a0:	mov	x0, #0x0                   	// #0
  a4:	ldp	x29, x30, [sp], #64
  a8:	ret

00000000000000ac <ext2fs_write_ind_block>:
  ac:	stp	x29, x30, [sp, #-48]!
  b0:	mov	x29, sp
  b4:	str	x0, [sp, #40]
  b8:	str	w1, [sp, #36]
  bc:	str	x2, [sp, #24]
  c0:	ldr	x0, [sp, #40]
  c4:	ldr	w0, [x0, #16]
  c8:	and	w0, w0, #0x2000
  cc:	cmp	w0, #0x0
  d0:	b.eq	dc <ext2fs_write_ind_block+0x30>  // b.none
  d4:	mov	x0, #0x0                   	// #0
  d8:	b	104 <ext2fs_write_ind_block+0x58>
  dc:	ldr	x0, [sp, #40]
  e0:	ldr	x0, [x0, #8]
  e4:	ldr	x0, [x0, #8]
  e8:	ldr	x4, [x0, #48]
  ec:	ldr	x0, [sp, #40]
  f0:	ldr	x0, [x0, #8]
  f4:	ldr	w1, [sp, #36]
  f8:	ldr	x3, [sp, #24]
  fc:	mov	w2, #0x1                   	// #1
 100:	blr	x4
 104:	ldp	x29, x30, [sp], #48
 108:	ret

initialize.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_resize_inode>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #92]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_clear_feature_resize_inode>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #92]
      38:	and	w1, w0, #0xffffffef
      3c:	ldr	x0, [sp, #8]
      40:	str	w1, [x0, #92]
      44:	nop
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_sparse_super2>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #92]
      60:	and	w0, w0, #0x200
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_has_feature_gdt_csum>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #100]
      88:	and	w0, w0, #0x10
      8c:	cmp	w0, #0x0
      90:	cset	w0, ne  // ne = any
      94:	and	w0, w0, #0xff
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_has_feature_bigalloc>:
      a0:	sub	sp, sp, #0x10
      a4:	str	x0, [sp, #8]
      a8:	ldr	x0, [sp, #8]
      ac:	ldr	w0, [x0, #100]
      b0:	and	w0, w0, #0x200
      b4:	cmp	w0, #0x0
      b8:	cset	w0, ne  // ne = any
      bc:	and	w0, w0, #0xff
      c0:	add	sp, sp, #0x10
      c4:	ret

00000000000000c8 <ext2fs_has_feature_metadata_csum>:
      c8:	sub	sp, sp, #0x10
      cc:	str	x0, [sp, #8]
      d0:	ldr	x0, [sp, #8]
      d4:	ldr	w0, [x0, #100]
      d8:	and	w0, w0, #0x400
      dc:	cmp	w0, #0x0
      e0:	cset	w0, ne  // ne = any
      e4:	and	w0, w0, #0xff
      e8:	add	sp, sp, #0x10
      ec:	ret

00000000000000f0 <ext2fs_has_feature_journal_dev>:
      f0:	sub	sp, sp, #0x10
      f4:	str	x0, [sp, #8]
      f8:	ldr	x0, [sp, #8]
      fc:	ldr	w0, [x0, #96]
     100:	and	w0, w0, #0x8
     104:	cmp	w0, #0x0
     108:	cset	w0, ne  // ne = any
     10c:	and	w0, w0, #0xff
     110:	add	sp, sp, #0x10
     114:	ret

0000000000000118 <ext2fs_has_feature_meta_bg>:
     118:	sub	sp, sp, #0x10
     11c:	str	x0, [sp, #8]
     120:	ldr	x0, [sp, #8]
     124:	ldr	w0, [x0, #96]
     128:	and	w0, w0, #0x10
     12c:	cmp	w0, #0x0
     130:	cset	w0, ne  // ne = any
     134:	and	w0, w0, #0xff
     138:	add	sp, sp, #0x10
     13c:	ret

0000000000000140 <ext2fs_set_feature_meta_bg>:
     140:	sub	sp, sp, #0x10
     144:	str	x0, [sp, #8]
     148:	ldr	x0, [sp, #8]
     14c:	ldr	w0, [x0, #96]
     150:	orr	w1, w0, #0x10
     154:	ldr	x0, [sp, #8]
     158:	str	w1, [x0, #96]
     15c:	nop
     160:	add	sp, sp, #0x10
     164:	ret

0000000000000168 <ext2fs_has_feature_64bit>:
     168:	sub	sp, sp, #0x10
     16c:	str	x0, [sp, #8]
     170:	ldr	x0, [sp, #8]
     174:	ldr	w0, [x0, #96]
     178:	and	w0, w0, #0x80
     17c:	cmp	w0, #0x0
     180:	cset	w0, ne  // ne = any
     184:	and	w0, w0, #0xff
     188:	add	sp, sp, #0x10
     18c:	ret

0000000000000190 <ext2fs_has_feature_casefold>:
     190:	sub	sp, sp, #0x10
     194:	str	x0, [sp, #8]
     198:	ldr	x0, [sp, #8]
     19c:	ldr	w0, [x0, #96]
     1a0:	and	w0, w0, #0x20000
     1a4:	cmp	w0, #0x0
     1a8:	cset	w0, ne  // ne = any
     1ac:	and	w0, w0, #0xff
     1b0:	add	sp, sp, #0x10
     1b4:	ret

00000000000001b8 <ext2fs_has_group_desc_csum>:
     1b8:	stp	x29, x30, [sp, #-32]!
     1bc:	mov	x29, sp
     1c0:	str	x0, [sp, #24]
     1c4:	ldr	x0, [sp, #24]
     1c8:	ldr	x0, [x0, #32]
     1cc:	bl	c8 <ext2fs_has_feature_metadata_csum>
     1d0:	cmp	w0, #0x0
     1d4:	b.ne	1ec <ext2fs_has_group_desc_csum+0x34>  // b.any
     1d8:	ldr	x0, [sp, #24]
     1dc:	ldr	x0, [x0, #32]
     1e0:	bl	78 <ext2fs_has_feature_gdt_csum>
     1e4:	cmp	w0, #0x0
     1e8:	b.eq	1f4 <ext2fs_has_group_desc_csum+0x3c>  // b.none
     1ec:	mov	w0, #0x1                   	// #1
     1f0:	b	1f8 <ext2fs_has_group_desc_csum+0x40>
     1f4:	mov	w0, #0x0                   	// #0
     1f8:	ldp	x29, x30, [sp], #32
     1fc:	ret

0000000000000200 <calc_reserved_gdt_blocks>:
     200:	stp	x29, x30, [sp, #-80]!
     204:	mov	x29, sp
     208:	str	x0, [sp, #24]
     20c:	ldr	x0, [sp, #24]
     210:	ldr	x0, [x0, #32]
     214:	str	x0, [sp, #56]
     218:	ldr	x0, [sp, #56]
     21c:	ldr	w0, [x0, #32]
     220:	mov	w0, w0
     224:	str	x0, [sp, #48]
     228:	ldr	x0, [sp, #56]
     22c:	ldr	w0, [x0, #24]
     230:	mov	w1, #0x400                 	// #1024
     234:	lsl	w1, w1, w0
     238:	ldr	x0, [sp, #56]
     23c:	ldr	w0, [x0, #96]
     240:	and	w0, w0, #0x80
     244:	cmp	w0, #0x0
     248:	b.eq	258 <calc_reserved_gdt_blocks+0x58>  // b.none
     24c:	ldr	x0, [sp, #56]
     250:	ldrh	w0, [x0, #254]
     254:	b	25c <calc_reserved_gdt_blocks+0x5c>
     258:	mov	w0, #0x20                  	// #32
     25c:	sdiv	w0, w1, w0
     260:	str	w0, [sp, #44]
     264:	mov	x0, #0xffffffff            	// #4294967295
     268:	str	x0, [sp, #72]
     26c:	ldr	x0, [sp, #56]
     270:	bl	0 <ext2fs_blocks_count>
     274:	mov	x1, x0
     278:	ldr	x0, [sp, #72]
     27c:	lsr	x0, x0, #10
     280:	cmp	x1, x0
     284:	b.cs	298 <calc_reserved_gdt_blocks+0x98>  // b.hs, b.nlast
     288:	ldr	x0, [sp, #56]
     28c:	bl	0 <ext2fs_blocks_count>
     290:	lsl	x0, x0, #10
     294:	str	x0, [sp, #72]
     298:	ldr	x0, [sp, #72]
     29c:	mov	w1, w0
     2a0:	ldr	x0, [sp, #56]
     2a4:	ldr	w0, [x0, #20]
     2a8:	sub	w0, w1, w0
     2ac:	ldr	x1, [sp, #48]
     2b0:	bl	0 <ext2fs_div_ceil>
     2b4:	mov	w0, w0
     2b8:	str	x0, [sp, #32]
     2bc:	ldr	x0, [sp, #32]
     2c0:	ldr	w1, [sp, #44]
     2c4:	bl	0 <ext2fs_div_ceil>
     2c8:	mov	w1, w0
     2cc:	ldr	x0, [sp, #24]
     2d0:	ldr	x0, [x0, #56]
     2d4:	sub	w0, w1, w0
     2d8:	str	w0, [sp, #68]
     2dc:	ldr	w1, [sp, #68]
     2e0:	ldr	x0, [sp, #56]
     2e4:	ldr	w0, [x0, #24]
     2e8:	mov	w2, #0x400                 	// #1024
     2ec:	lsl	w0, w2, w0
     2f0:	sxtw	x0, w0
     2f4:	lsr	x0, x0, #2
     2f8:	cmp	x1, x0
     2fc:	b.ls	31c <calc_reserved_gdt_blocks+0x11c>  // b.plast
     300:	ldr	x0, [sp, #56]
     304:	ldr	w0, [x0, #24]
     308:	mov	w1, #0x400                 	// #1024
     30c:	lsl	w0, w1, w0
     310:	sxtw	x0, w0
     314:	lsr	x0, x0, #2
     318:	str	w0, [sp, #68]
     31c:	ldr	w0, [sp, #68]
     320:	ldp	x29, x30, [sp], #80
     324:	ret

0000000000000328 <ext2fs_initialize>:
     328:	stp	x29, x30, [sp, #-224]!
     32c:	mov	x29, sp
     330:	str	x19, [sp, #16]
     334:	str	d8, [sp, #24]
     338:	str	x0, [sp, #72]
     33c:	str	w1, [sp, #68]
     340:	str	x2, [sp, #56]
     344:	str	x3, [sp, #48]
     348:	str	x4, [sp, #40]
     34c:	str	wzr, [sp, #212]
     350:	str	xzr, [sp, #88]
     354:	ldr	x0, [sp, #56]
     358:	cmp	x0, #0x0
     35c:	b.eq	370 <ext2fs_initialize+0x48>  // b.none
     360:	ldr	x0, [sp, #56]
     364:	bl	0 <ext2fs_blocks_count>
     368:	cmp	x0, #0x0
     36c:	b.ne	37c <ext2fs_initialize+0x54>  // b.any
     370:	mov	x0, #0xb747                	// #46919
     374:	movk	x0, #0x7f2b, lsl #16
     378:	b	1904 <ext2fs_initialize+0x15dc>
     37c:	add	x0, sp, #0x68
     380:	mov	x1, x0
     384:	mov	x0, #0x170                 	// #368
     388:	bl	0 <ext2fs_get_mem>
     38c:	str	x0, [sp, #216]
     390:	ldr	x0, [sp, #216]
     394:	cmp	x0, #0x0
     398:	b.eq	3a4 <ext2fs_initialize+0x7c>  // b.none
     39c:	ldr	x0, [sp, #216]
     3a0:	b	1904 <ext2fs_initialize+0x15dc>
     3a4:	ldr	x0, [sp, #104]
     3a8:	mov	x2, #0x170                 	// #368
     3ac:	mov	w1, #0x0                   	// #0
     3b0:	bl	0 <memset>
     3b4:	ldr	x0, [sp, #104]
     3b8:	mov	x1, #0xb701                	// #46849
     3bc:	movk	x1, #0x7f2b, lsl #16
     3c0:	str	x1, [x0]
     3c4:	ldr	x0, [sp, #104]
     3c8:	ldr	w1, [sp, #68]
     3cc:	orr	w1, w1, #0x1
     3d0:	str	w1, [x0, #16]
     3d4:	ldr	x0, [sp, #104]
     3d8:	mov	w1, #0x12                  	// #18
     3dc:	str	w1, [x0, #176]
     3e0:	ldr	x0, [sp, #104]
     3e4:	mov	w1, #0x2                   	// #2
     3e8:	strh	w1, [x0, #196]
     3ec:	adrp	x0, 0 <ext2fs_has_feature_resize_inode>
     3f0:	add	x0, x0, #0x0
     3f4:	bl	0 <getenv>
     3f8:	str	x0, [sp, #160]
     3fc:	ldr	x0, [sp, #160]
     400:	cmp	x0, #0x0
     404:	b.eq	424 <ext2fs_initialize+0xfc>  // b.none
     408:	mov	w2, #0x0                   	// #0
     40c:	mov	x1, #0x0                   	// #0
     410:	ldr	x0, [sp, #160]
     414:	bl	0 <strtoul>
     418:	mov	x1, x0
     41c:	ldr	x0, [sp, #104]
     420:	str	x1, [x0, #184]
     424:	mov	w0, #0x1                   	// #1
     428:	str	w0, [sp, #180]
     42c:	ldr	w0, [sp, #68]
     430:	and	w0, w0, #0x4000
     434:	cmp	w0, #0x0
     438:	b.eq	448 <ext2fs_initialize+0x120>  // b.none
     43c:	ldr	w0, [sp, #180]
     440:	orr	w0, w0, #0x2
     444:	str	w0, [sp, #180]
     448:	ldr	w0, [sp, #68]
     44c:	and	w0, w0, #0x80000
     450:	cmp	w0, #0x0
     454:	b.eq	464 <ext2fs_initialize+0x13c>  // b.none
     458:	ldr	w0, [sp, #180]
     45c:	orr	w0, w0, #0x4
     460:	str	w0, [sp, #180]
     464:	ldr	x0, [sp, #48]
     468:	ldr	x3, [x0, #16]
     46c:	ldr	x0, [sp, #104]
     470:	add	x0, x0, #0x8
     474:	mov	x2, x0
     478:	ldr	w1, [sp, #180]
     47c:	ldr	x0, [sp, #72]
     480:	blr	x3
     484:	str	x0, [sp, #216]
     488:	ldr	x0, [sp, #216]
     48c:	cmp	x0, #0x0
     490:	b.ne	18bc <ext2fs_initialize+0x1594>  // b.any
     494:	ldr	x1, [sp, #104]
     498:	ldr	x0, [sp, #104]
     49c:	ldr	x1, [x1, #8]
     4a0:	str	x1, [x0, #240]
     4a4:	ldr	x0, [sp, #104]
     4a8:	ldr	x0, [x0, #8]
     4ac:	ldr	x1, [sp, #104]
     4b0:	str	x1, [x0, #176]
     4b4:	ldr	x0, [sp, #72]
     4b8:	bl	0 <strlen>
     4bc:	add	x2, x0, #0x1
     4c0:	ldr	x0, [sp, #104]
     4c4:	add	x0, x0, #0x18
     4c8:	mov	x1, x0
     4cc:	mov	x0, x2
     4d0:	bl	0 <ext2fs_get_mem>
     4d4:	str	x0, [sp, #216]
     4d8:	ldr	x0, [sp, #216]
     4dc:	cmp	x0, #0x0
     4e0:	b.ne	18c4 <ext2fs_initialize+0x159c>  // b.any
     4e4:	ldr	x0, [sp, #104]
     4e8:	ldr	x0, [x0, #24]
     4ec:	ldr	x1, [sp, #72]
     4f0:	bl	0 <strcpy>
     4f4:	add	x0, sp, #0x60
     4f8:	mov	x1, x0
     4fc:	mov	x0, #0x400                 	// #1024
     500:	bl	0 <ext2fs_get_mem>
     504:	str	x0, [sp, #216]
     508:	ldr	x0, [sp, #216]
     50c:	cmp	x0, #0x0
     510:	b.ne	18cc <ext2fs_initialize+0x15a4>  // b.any
     514:	ldr	x0, [sp, #104]
     518:	ldr	x1, [sp, #96]
     51c:	str	x1, [x0, #32]
     520:	ldr	x0, [sp, #96]
     524:	mov	x2, #0x400                 	// #1024
     528:	mov	w1, #0x0                   	// #0
     52c:	bl	0 <memset>
     530:	ldr	x0, [sp, #96]
     534:	mov	w1, #0xffffef53            	// #-4269
     538:	strh	w1, [x0, #56]
     53c:	ldr	x0, [sp, #96]
     540:	mov	w1, #0x1                   	// #1
     544:	strh	w1, [x0, #58]
     548:	ldr	x0, [sp, #56]
     54c:	bl	a0 <ext2fs_has_feature_bigalloc>
     550:	str	w0, [sp, #156]
     554:	ldr	x0, [sp, #96]
     558:	ldr	x1, [sp, #56]
     55c:	ldr	w1, [x1, #24]
     560:	str	w1, [x0, #24]
     564:	ldr	w0, [sp, #156]
     568:	cmp	w0, #0x0
     56c:	b.eq	5c8 <ext2fs_initialize+0x2a0>  // b.none
     570:	ldr	x0, [sp, #56]
     574:	ldr	w0, [x0, #28]
     578:	cmp	w0, #0x0
     57c:	b.eq	58c <ext2fs_initialize+0x264>  // b.none
     580:	ldr	x0, [sp, #56]
     584:	ldr	w0, [x0, #28]
     588:	b	598 <ext2fs_initialize+0x270>
     58c:	ldr	x0, [sp, #96]
     590:	ldr	w0, [x0, #24]
     594:	add	w0, w0, #0x4
     598:	ldr	x1, [sp, #96]
     59c:	str	w0, [x1, #28]
     5a0:	ldr	x0, [sp, #96]
     5a4:	ldr	w1, [x0, #24]
     5a8:	ldr	x0, [sp, #96]
     5ac:	ldr	w0, [x0, #28]
     5b0:	cmp	w1, w0
     5b4:	b.ls	5d8 <ext2fs_initialize+0x2b0>  // b.plast
     5b8:	mov	x0, #0xb747                	// #46919
     5bc:	movk	x0, #0x7f2b, lsl #16
     5c0:	str	x0, [sp, #216]
     5c4:	b	18f0 <ext2fs_initialize+0x15c8>
     5c8:	ldr	x1, [sp, #96]
     5cc:	ldr	x0, [sp, #96]
     5d0:	ldr	w1, [x1, #24]
     5d4:	str	w1, [x0, #28]
     5d8:	ldr	x0, [sp, #56]
     5dc:	ldr	w0, [x0, #20]
     5e0:	cmp	w0, #0x0
     5e4:	b.eq	5f4 <ext2fs_initialize+0x2cc>  // b.none
     5e8:	ldr	x0, [sp, #56]
     5ec:	ldr	w0, [x0, #20]
     5f0:	b	608 <ext2fs_initialize+0x2e0>
     5f4:	ldr	x0, [sp, #96]
     5f8:	ldr	w0, [x0, #28]
     5fc:	cmp	w0, #0x0
     600:	cset	w0, eq  // eq = none
     604:	and	w0, w0, #0xff
     608:	ldr	x1, [sp, #96]
     60c:	str	w0, [x1, #20]
     610:	ldr	x0, [sp, #96]
     614:	ldr	x1, [sp, #56]
     618:	ldrsh	w1, [x1, #54]
     61c:	strh	w1, [x0, #54]
     620:	ldr	x0, [sp, #56]
     624:	ldrh	w0, [x0, #60]
     628:	cmp	w0, #0x0
     62c:	b.eq	63c <ext2fs_initialize+0x314>  // b.none
     630:	ldr	x0, [sp, #56]
     634:	ldrh	w0, [x0, #60]
     638:	b	640 <ext2fs_initialize+0x318>
     63c:	mov	w0, #0x1                   	// #1
     640:	ldr	x1, [sp, #96]
     644:	strh	w0, [x1, #60]
     648:	ldr	x0, [sp, #96]
     64c:	ldr	x1, [sp, #56]
     650:	ldr	w1, [x1, #92]
     654:	str	w1, [x0, #92]
     658:	ldr	x0, [sp, #96]
     65c:	ldr	x1, [sp, #56]
     660:	ldr	w1, [x1, #96]
     664:	str	w1, [x0, #96]
     668:	ldr	x0, [sp, #96]
     66c:	ldr	x1, [sp, #56]
     670:	ldr	w1, [x1, #100]
     674:	str	w1, [x0, #100]
     678:	ldr	x0, [sp, #96]
     67c:	ldr	x1, [sp, #56]
     680:	ldr	w1, [x1, #256]
     684:	str	w1, [x0, #256]
     688:	ldr	x0, [sp, #96]
     68c:	ldr	x1, [sp, #56]
     690:	ldr	w1, [x1, #260]
     694:	str	w1, [x0, #260]
     698:	ldr	x0, [sp, #96]
     69c:	ldr	x1, [sp, #56]
     6a0:	ldrh	w1, [x1, #356]
     6a4:	strh	w1, [x0, #356]
     6a8:	ldr	x0, [sp, #96]
     6ac:	ldr	x1, [sp, #56]
     6b0:	ldr	w1, [x1, #368]
     6b4:	str	w1, [x0, #368]
     6b8:	ldr	x0, [sp, #96]
     6bc:	ldr	x1, [sp, #56]
     6c0:	ldrb	w1, [x1, #372]
     6c4:	strb	w1, [x0, #372]
     6c8:	ldr	x0, [sp, #96]
     6cc:	ldr	x1, [sp, #56]
     6d0:	ldr	w1, [x1, #352]
     6d4:	str	w1, [x0, #352]
     6d8:	ldr	x0, [sp, #96]
     6dc:	ldr	x1, [sp, #56]
     6e0:	ldr	w1, [x1, #588]
     6e4:	str	w1, [x0, #588]
     6e8:	ldr	x0, [sp, #96]
     6ec:	ldr	x1, [sp, #56]
     6f0:	ldr	w1, [x1, #592]
     6f4:	str	w1, [x0, #592]
     6f8:	ldr	x0, [sp, #96]
     6fc:	ldr	x1, [sp, #56]
     700:	ldrh	w1, [x1, #636]
     704:	strh	w1, [x0, #636]
     708:	ldr	x0, [sp, #96]
     70c:	ldr	x1, [sp, #56]
     710:	ldrh	w1, [x1, #638]
     714:	strh	w1, [x0, #638]
     718:	ldr	x0, [sp, #56]
     71c:	bl	190 <ext2fs_has_feature_casefold>
     720:	cmp	w0, #0x0
     724:	b.eq	73c <ext2fs_initialize+0x414>  // b.none
     728:	ldr	x0, [sp, #56]
     72c:	ldrh	w0, [x0, #636]
     730:	ldr	x19, [sp, #104]
     734:	bl	0 <ext2fs_load_nls_table>
     738:	str	x0, [x19, #360]
     73c:	ldr	x0, [sp, #96]
     740:	ldr	w1, [x0, #96]
     744:	mov	w0, #0x1821                	// #6177
     748:	movk	w0, #0xfffc, lsl #16
     74c:	and	w0, w1, w0
     750:	cmp	w0, #0x0
     754:	b.eq	768 <ext2fs_initialize+0x440>  // b.none
     758:	mov	x0, #0xb743                	// #46915
     75c:	movk	x0, #0x7f2b, lsl #16
     760:	str	x0, [sp, #216]
     764:	b	18f0 <ext2fs_initialize+0x15c8>
     768:	ldr	x0, [sp, #96]
     76c:	ldr	w1, [x0, #100]
     770:	mov	w0, #0xffff0884            	// #-63356
     774:	and	w0, w1, w0
     778:	cmp	w0, #0x0
     77c:	b.eq	790 <ext2fs_initialize+0x468>  // b.none
     780:	mov	x0, #0xb744                	// #46916
     784:	movk	x0, #0x7f2b, lsl #16
     788:	str	x0, [sp, #216]
     78c:	b	18f0 <ext2fs_initialize+0x15c8>
     790:	ldr	x0, [sp, #96]
     794:	ldr	x1, [sp, #56]
     798:	ldr	w1, [x1, #76]
     79c:	str	w1, [x0, #76]
     7a0:	ldr	x0, [sp, #96]
     7a4:	ldr	w0, [x0, #76]
     7a8:	cmp	w0, #0x0
     7ac:	b.eq	874 <ext2fs_initialize+0x54c>  // b.none
     7b0:	ldr	x0, [sp, #56]
     7b4:	ldr	w0, [x0, #84]
     7b8:	cmp	w0, #0x0
     7bc:	b.eq	7cc <ext2fs_initialize+0x4a4>  // b.none
     7c0:	ldr	x0, [sp, #56]
     7c4:	ldr	w0, [x0, #84]
     7c8:	b	7d0 <ext2fs_initialize+0x4a8>
     7cc:	mov	w0, #0xb                   	// #11
     7d0:	ldr	x1, [sp, #96]
     7d4:	str	w0, [x1, #84]
     7d8:	ldr	x0, [sp, #56]
     7dc:	ldrh	w0, [x0, #88]
     7e0:	cmp	w0, #0x0
     7e4:	b.eq	7f4 <ext2fs_initialize+0x4cc>  // b.none
     7e8:	ldr	x0, [sp, #56]
     7ec:	ldrh	w0, [x0, #88]
     7f0:	b	7f8 <ext2fs_initialize+0x4d0>
     7f4:	mov	w0, #0x80                  	// #128
     7f8:	ldr	x1, [sp, #96]
     7fc:	strh	w0, [x1, #88]
     800:	ldr	x0, [sp, #96]
     804:	ldrh	w0, [x0, #88]
     808:	cmp	w0, #0x9f
     80c:	b.ls	88c <ext2fs_initialize+0x564>  // b.plast
     810:	mov	w0, #0x20                  	// #32
     814:	str	w0, [sp, #152]
     818:	ldr	x0, [sp, #56]
     81c:	ldrh	w0, [x0, #348]
     820:	cmp	w0, #0x0
     824:	b.eq	834 <ext2fs_initialize+0x50c>  // b.none
     828:	ldr	x0, [sp, #56]
     82c:	ldrh	w0, [x0, #348]
     830:	b	83c <ext2fs_initialize+0x514>
     834:	ldr	w0, [sp, #152]
     838:	and	w0, w0, #0xffff
     83c:	ldr	x1, [sp, #96]
     840:	strh	w0, [x1, #348]
     844:	ldr	x0, [sp, #56]
     848:	ldrh	w0, [x0, #350]
     84c:	cmp	w0, #0x0
     850:	b.eq	860 <ext2fs_initialize+0x538>  // b.none
     854:	ldr	x0, [sp, #56]
     858:	ldrh	w0, [x0, #350]
     85c:	b	868 <ext2fs_initialize+0x540>
     860:	ldr	w0, [sp, #152]
     864:	and	w0, w0, #0xffff
     868:	ldr	x1, [sp, #96]
     86c:	strh	w0, [x1, #350]
     870:	b	88c <ext2fs_initialize+0x564>
     874:	ldr	x0, [sp, #96]
     878:	mov	w1, #0xb                   	// #11
     87c:	str	w1, [x0, #84]
     880:	ldr	x0, [sp, #96]
     884:	mov	w1, #0x80                  	// #128
     888:	strh	w1, [x0, #88]
     88c:	ldr	x0, [sp, #96]
     890:	ldr	x1, [sp, #56]
     894:	ldr	w1, [x1, #68]
     898:	str	w1, [x0, #68]
     89c:	ldr	x0, [sp, #104]
     8a0:	ldr	x0, [x0, #184]
     8a4:	cmp	x0, #0x0
     8a8:	b.eq	8bc <ext2fs_initialize+0x594>  // b.none
     8ac:	ldr	x0, [sp, #104]
     8b0:	ldr	x0, [x0, #184]
     8b4:	mov	w1, w0
     8b8:	b	8c8 <ext2fs_initialize+0x5a0>
     8bc:	mov	x0, #0x0                   	// #0
     8c0:	bl	0 <time>
     8c4:	mov	w1, w0
     8c8:	ldr	x0, [sp, #96]
     8cc:	str	w1, [x0, #64]
     8d0:	ldr	x1, [sp, #96]
     8d4:	ldr	w0, [x0, #64]
     8d8:	str	w0, [x1, #264]
     8dc:	ldr	x0, [sp, #96]
     8e0:	str	wzr, [x0, #72]
     8e4:	ldr	x0, [sp, #96]
     8e8:	ldr	w0, [x0, #24]
     8ec:	mov	w1, #0x400                 	// #1024
     8f0:	lsl	w1, w1, w0
     8f4:	ldr	x0, [sp, #104]
     8f8:	str	w1, [x0, #40]
     8fc:	ldr	w1, [x0, #40]
     900:	ldr	x0, [sp, #104]
     904:	str	w1, [x0, #44]
     908:	ldr	x0, [sp, #96]
     90c:	ldr	w1, [x0, #28]
     910:	ldr	x0, [sp, #96]
     914:	ldr	w0, [x0, #24]
     918:	sub	w1, w1, w0
     91c:	ldr	x0, [sp, #104]
     920:	str	w1, [x0, #192]
     924:	ldr	w0, [sp, #156]
     928:	cmp	w0, #0x0
     92c:	b.eq	a88 <ext2fs_initialize+0x760>  // b.none
     930:	ldr	x0, [sp, #56]
     934:	ldr	w0, [x0, #32]
     938:	cmp	w0, #0x0
     93c:	b.eq	984 <ext2fs_initialize+0x65c>  // b.none
     940:	ldr	x0, [sp, #56]
     944:	ldr	w0, [x0, #36]
     948:	cmp	w0, #0x0
     94c:	b.eq	984 <ext2fs_initialize+0x65c>  // b.none
     950:	ldr	x0, [sp, #56]
     954:	ldr	w1, [x0, #36]
     958:	ldr	x0, [sp, #104]
     95c:	ldr	w0, [x0, #192]
     960:	lsl	w1, w1, w0
     964:	ldr	x0, [sp, #56]
     968:	ldr	w0, [x0, #32]
     96c:	cmp	w1, w0
     970:	b.eq	984 <ext2fs_initialize+0x65c>  // b.none
     974:	mov	x0, #0xb747                	// #46919
     978:	movk	x0, #0x7f2b, lsl #16
     97c:	str	x0, [sp, #216]
     980:	b	18f0 <ext2fs_initialize+0x15c8>
     984:	ldr	x0, [sp, #56]
     988:	ldr	w0, [x0, #36]
     98c:	cmp	w0, #0x0
     990:	b.eq	9a8 <ext2fs_initialize+0x680>  // b.none
     994:	ldr	x0, [sp, #96]
     998:	ldr	x1, [sp, #56]
     99c:	ldr	w1, [x1, #36]
     9a0:	str	w1, [x0, #36]
     9a4:	b	a1c <ext2fs_initialize+0x6f4>
     9a8:	ldr	x0, [sp, #56]
     9ac:	ldr	w0, [x0, #32]
     9b0:	cmp	w0, #0x0
     9b4:	b.eq	9d8 <ext2fs_initialize+0x6b0>  // b.none
     9b8:	ldr	x0, [sp, #56]
     9bc:	ldr	w2, [x0, #32]
     9c0:	ldr	x0, [sp, #104]
     9c4:	ldr	w1, [x0, #192]
     9c8:	ldr	x0, [sp, #96]
     9cc:	lsr	w1, w2, w1
     9d0:	str	w1, [x0, #36]
     9d4:	b	a1c <ext2fs_initialize+0x6f4>
     9d8:	ldr	x0, [sp, #96]
     9dc:	ldr	w0, [x0, #28]
     9e0:	add	w0, w0, #0xf
     9e4:	cmp	w0, #0x1f
     9e8:	b.hi	a04 <ext2fs_initialize+0x6dc>  // b.pmore
     9ec:	ldr	x0, [sp, #104]
     9f0:	ldr	w1, [x0, #40]
     9f4:	ldr	x0, [sp, #96]
     9f8:	lsl	w1, w1, #3
     9fc:	str	w1, [x0, #36]
     a00:	b	a1c <ext2fs_initialize+0x6f4>
     a04:	ldr	x0, [sp, #104]
     a08:	ldr	w0, [x0, #40]
     a0c:	sub	w1, w0, #0x1
     a10:	ldr	x0, [sp, #96]
     a14:	lsl	w1, w1, #3
     a18:	str	w1, [x0, #36]
     a1c:	ldr	x0, [sp, #96]
     a20:	ldr	w1, [x0, #36]
     a24:	mov	w0, #0xfff8                	// #65528
     a28:	cmp	w1, w0
     a2c:	b.ls	a3c <ext2fs_initialize+0x714>  // b.plast
     a30:	ldr	x0, [sp, #96]
     a34:	mov	w1, #0xfff8                	// #65528
     a38:	str	w1, [x0, #36]
     a3c:	ldr	x0, [sp, #96]
     a40:	ldr	w0, [x0, #36]
     a44:	mov	w1, w0
     a48:	ldr	x0, [sp, #104]
     a4c:	ldr	w0, [x0, #192]
     a50:	lsl	x0, x1, x0
     a54:	str	x0, [sp, #144]
     a58:	ldr	x1, [sp, #144]
     a5c:	mov	x0, #0xffffffff            	// #4294967295
     a60:	cmp	x1, x0
     a64:	b.ls	a78 <ext2fs_initialize+0x750>  // b.plast
     a68:	mov	x0, #0xb747                	// #46919
     a6c:	movk	x0, #0x7f2b, lsl #16
     a70:	str	x0, [sp, #216]
     a74:	b	18f0 <ext2fs_initialize+0x15c8>
     a78:	ldr	x0, [sp, #96]
     a7c:	ldr	x1, [sp, #144]
     a80:	str	w1, [x0, #32]
     a84:	b	b50 <ext2fs_initialize+0x828>
     a88:	ldr	x0, [sp, #56]
     a8c:	ldr	w0, [x0, #32]
     a90:	cmp	w0, #0x0
     a94:	b.eq	aa4 <ext2fs_initialize+0x77c>  // b.none
     a98:	ldr	x0, [sp, #56]
     a9c:	ldr	w0, [x0, #32]
     aa0:	b	ab0 <ext2fs_initialize+0x788>
     aa4:	ldr	x0, [sp, #104]
     aa8:	ldr	w0, [x0, #40]
     aac:	lsl	w0, w0, #3
     ab0:	ldr	x1, [sp, #96]
     ab4:	str	w0, [x1, #32]
     ab8:	ldr	x0, [sp, #96]
     abc:	ldr	w1, [x0, #32]
     ac0:	ldr	x0, [sp, #96]
     ac4:	ldr	w0, [x0, #28]
     ac8:	mov	w2, #0x400                 	// #1024
     acc:	lsl	w2, w2, w0
     ad0:	ldr	x0, [sp, #96]
     ad4:	ldr	w0, [x0, #24]
     ad8:	mov	w3, #0x400                 	// #1024
     adc:	lsl	w0, w3, w0
     ae0:	sdiv	w0, w2, w0
     ae4:	mov	w2, w0
     ae8:	mov	w0, w2
     aec:	lsl	w0, w0, #13
     af0:	sub	w0, w0, w2
     af4:	lsl	w0, w0, #3
     af8:	cmp	w1, w0
     afc:	b.ls	b40 <ext2fs_initialize+0x818>  // b.plast
     b00:	ldr	x0, [sp, #96]
     b04:	ldr	w0, [x0, #28]
     b08:	mov	w1, #0x400                 	// #1024
     b0c:	lsl	w1, w1, w0
     b10:	ldr	x0, [sp, #96]
     b14:	ldr	w0, [x0, #24]
     b18:	mov	w2, #0x400                 	// #1024
     b1c:	lsl	w0, w2, w0
     b20:	sdiv	w0, w1, w0
     b24:	mov	w2, w0
     b28:	ldr	x1, [sp, #96]
     b2c:	mov	w0, w2
     b30:	lsl	w0, w0, #13
     b34:	sub	w0, w0, w2
     b38:	lsl	w0, w0, #3
     b3c:	str	w0, [x1, #32]
     b40:	ldr	x1, [sp, #96]
     b44:	ldr	x0, [sp, #96]
     b48:	ldr	w1, [x1, #32]
     b4c:	str	w1, [x0, #36]
     b50:	ldr	x19, [sp, #96]
     b54:	ldr	x0, [sp, #56]
     b58:	bl	0 <ext2fs_blocks_count>
     b5c:	mov	x2, x0
     b60:	ldr	x0, [sp, #104]
     b64:	ldr	w0, [x0, #192]
     b68:	mov	w1, #0x1                   	// #1
     b6c:	lsl	w0, w1, w0
     b70:	neg	w0, w0
     b74:	sxtw	x0, w0
     b78:	and	x0, x2, x0
     b7c:	mov	x1, x0
     b80:	mov	x0, x19
     b84:	bl	0 <ext2fs_blocks_count_set>
     b88:	ldr	x19, [sp, #96]
     b8c:	ldr	x0, [sp, #56]
     b90:	bl	0 <ext2fs_r_blocks_count>
     b94:	mov	x1, x0
     b98:	mov	x0, x19
     b9c:	bl	0 <ext2fs_r_blocks_count_set>
     ba0:	ldr	x0, [sp, #96]
     ba4:	bl	0 <ext2fs_r_blocks_count>
     ba8:	mov	x19, x0
     bac:	ldr	x0, [sp, #56]
     bb0:	bl	0 <ext2fs_blocks_count>
     bb4:	cmp	x19, x0
     bb8:	b.cc	bcc <ext2fs_initialize+0x8a4>  // b.lo, b.ul, b.last
     bbc:	mov	x0, #0xb747                	// #46919
     bc0:	movk	x0, #0x7f2b, lsl #16
     bc4:	str	x0, [sp, #216]
     bc8:	b	18f0 <ext2fs_initialize+0x15c8>
     bcc:	ldr	x0, [sp, #96]
     bd0:	ldr	x1, [sp, #56]
     bd4:	ldrh	w1, [x1, #358]
     bd8:	strh	w1, [x0, #358]
     bdc:	ldr	x0, [sp, #96]
     be0:	bl	f0 <ext2fs_has_feature_journal_dev>
     be4:	cmp	w0, #0x0
     be8:	b.eq	c10 <ext2fs_initialize+0x8e8>  // b.none
     bec:	ldr	x0, [sp, #104]
     bf0:	str	wzr, [x0, #48]
     bf4:	ldr	x0, [sp, #104]
     bf8:	bl	0 <ext2fs_mark_super_dirty>
     bfc:	ldr	x1, [sp, #104]
     c00:	ldr	x0, [sp, #40]
     c04:	str	x1, [x0]
     c08:	mov	x0, #0x0                   	// #0
     c0c:	b	1904 <ext2fs_initialize+0x15dc>
     c10:	nop
     c14:	ldr	x0, [sp, #96]
     c18:	bl	0 <ext2fs_blocks_count>
     c1c:	mov	x1, x0
     c20:	ldr	x0, [sp, #96]
     c24:	ldr	w0, [x0, #20]
     c28:	mov	w0, w0
     c2c:	sub	x2, x1, x0
     c30:	ldr	x0, [sp, #96]
     c34:	ldr	w0, [x0, #32]
     c38:	mov	w0, w0
     c3c:	mov	x1, x0
     c40:	mov	x0, x2
     c44:	bl	0 <ext2fs_div64_ceil>
     c48:	mov	x1, x0
     c4c:	ldr	x0, [sp, #104]
     c50:	str	w1, [x0, #48]
     c54:	ldr	x0, [sp, #104]
     c58:	ldr	w0, [x0, #48]
     c5c:	cmp	w0, #0x0
     c60:	b.ne	c74 <ext2fs_initialize+0x94c>  // b.any
     c64:	mov	x0, #0xb72c                	// #46892
     c68:	movk	x0, #0x7f2b, lsl #16
     c6c:	str	x0, [sp, #216]
     c70:	b	18f0 <ext2fs_initialize+0x15c8>
     c74:	ldr	x0, [sp, #56]
     c78:	ldrh	w0, [x0, #254]
     c7c:	cmp	w0, #0x0
     c80:	b.eq	c90 <ext2fs_initialize+0x968>  // b.none
     c84:	ldr	x0, [sp, #56]
     c88:	ldrh	w0, [x0, #254]
     c8c:	b	cac <ext2fs_initialize+0x984>
     c90:	ldr	x0, [sp, #96]
     c94:	bl	168 <ext2fs_has_feature_64bit>
     c98:	cmp	w0, #0x0
     c9c:	b.eq	ca8 <ext2fs_initialize+0x980>  // b.none
     ca0:	mov	w0, #0x40                  	// #64
     ca4:	b	cac <ext2fs_initialize+0x984>
     ca8:	mov	w0, #0x0                   	// #0
     cac:	ldr	x1, [sp, #96]
     cb0:	strh	w0, [x1, #254]
     cb4:	ldr	x0, [sp, #104]
     cb8:	ldr	w2, [x0, #48]
     cbc:	ldr	x0, [sp, #96]
     cc0:	ldr	w0, [x0, #24]
     cc4:	mov	w1, #0x400                 	// #1024
     cc8:	lsl	w1, w1, w0
     ccc:	ldr	x0, [sp, #96]
     cd0:	ldr	w0, [x0, #96]
     cd4:	and	w0, w0, #0x80
     cd8:	cmp	w0, #0x0
     cdc:	b.eq	cec <ext2fs_initialize+0x9c4>  // b.none
     ce0:	ldr	x0, [sp, #96]
     ce4:	ldrh	w0, [x0, #254]
     ce8:	b	cf0 <ext2fs_initialize+0x9c8>
     cec:	mov	w0, #0x20                  	// #32
     cf0:	sdiv	w0, w1, w0
     cf4:	mov	w1, w0
     cf8:	mov	w0, w2
     cfc:	bl	0 <ext2fs_div_ceil>
     d00:	mov	w1, w0
     d04:	ldr	x0, [sp, #104]
     d08:	mov	w1, w1
     d0c:	str	x1, [x0, #56]
     d10:	ldr	x0, [sp, #104]
     d14:	ldr	w0, [x0, #40]
     d18:	cmp	w0, #0xfff
     d1c:	b.hi	d34 <ext2fs_initialize+0xa0c>  // b.pmore
     d20:	ldr	x0, [sp, #104]
     d24:	ldr	w0, [x0, #40]
     d28:	mov	w1, #0x1000                	// #4096
     d2c:	udiv	w0, w1, w0
     d30:	b	d38 <ext2fs_initialize+0xa10>
     d34:	mov	w0, #0x1                   	// #1
     d38:	str	w0, [sp, #204]
     d3c:	ldr	x0, [sp, #96]
     d40:	bl	168 <ext2fs_has_feature_64bit>
     d44:	cmp	w0, #0x0
     d48:	b.eq	d98 <ext2fs_initialize+0xa70>  // b.none
     d4c:	ldr	x0, [sp, #96]
     d50:	bl	0 <ext2fs_blocks_count>
     d54:	mov	x1, x0
     d58:	ldr	w0, [sp, #204]
     d5c:	udiv	x1, x1, x0
     d60:	mov	x0, #0xffffffff            	// #4294967295
     d64:	cmp	x1, x0
     d68:	b.ls	d98 <ext2fs_initialize+0xa70>  // b.plast
     d6c:	ldr	x0, [sp, #56]
     d70:	ldr	w0, [x0]
     d74:	cmp	w0, #0x0
     d78:	b.eq	d88 <ext2fs_initialize+0xa60>  // b.none
     d7c:	ldr	x0, [sp, #56]
     d80:	ldr	w0, [x0]
     d84:	b	d8c <ext2fs_initialize+0xa64>
     d88:	mov	w0, #0xffffffff            	// #-1
     d8c:	ldr	x1, [sp, #96]
     d90:	str	w0, [x1]
     d94:	b	dd0 <ext2fs_initialize+0xaa8>
     d98:	ldr	x0, [sp, #56]
     d9c:	ldr	w0, [x0]
     da0:	cmp	w0, #0x0
     da4:	b.eq	db4 <ext2fs_initialize+0xa8c>  // b.none
     da8:	ldr	x0, [sp, #56]
     dac:	ldr	w0, [x0]
     db0:	b	dc8 <ext2fs_initialize+0xaa0>
     db4:	ldr	x0, [sp, #96]
     db8:	bl	0 <ext2fs_blocks_count>
     dbc:	mov	x1, x0
     dc0:	ldr	w0, [sp, #204]
     dc4:	udiv	x0, x1, x0
     dc8:	ldr	x1, [sp, #96]
     dcc:	str	w0, [x1]
     dd0:	ldr	x0, [sp, #96]
     dd4:	ldr	w1, [x0]
     dd8:	ldr	x0, [sp, #96]
     ddc:	ldr	w0, [x0, #76]
     de0:	cmp	w0, #0x0
     de4:	b.eq	df8 <ext2fs_initialize+0xad0>  // b.none
     de8:	ldr	x0, [sp, #96]
     dec:	ldr	w0, [x0, #84]
     df0:	add	w0, w0, #0x1
     df4:	b	dfc <ext2fs_initialize+0xad4>
     df8:	mov	w0, #0xc                   	// #12
     dfc:	cmp	w0, w1
     e00:	b.ls	e30 <ext2fs_initialize+0xb08>  // b.plast
     e04:	ldr	x0, [sp, #96]
     e08:	ldr	w0, [x0, #76]
     e0c:	cmp	w0, #0x0
     e10:	b.eq	e24 <ext2fs_initialize+0xafc>  // b.none
     e14:	ldr	x0, [sp, #96]
     e18:	ldr	w0, [x0, #84]
     e1c:	add	w0, w0, #0x1
     e20:	b	e28 <ext2fs_initialize+0xb00>
     e24:	mov	w0, #0xc                   	// #12
     e28:	ldr	x1, [sp, #96]
     e2c:	str	w0, [x1]
     e30:	ldr	x0, [sp, #96]
     e34:	ldr	w2, [x0]
     e38:	ldr	x0, [sp, #104]
     e3c:	ldr	w0, [x0, #48]
     e40:	mov	w1, w0
     e44:	mov	w0, w2
     e48:	bl	0 <ext2fs_div_ceil>
     e4c:	str	w0, [sp, #208]
     e50:	ldr	x0, [sp, #104]
     e54:	ldr	w0, [x0, #40]
     e58:	lsl	w0, w0, #3
     e5c:	ldr	w1, [sp, #208]
     e60:	cmp	w1, w0
     e64:	b.ls	ed4 <ext2fs_initialize+0xbac>  // b.plast
     e68:	ldr	w0, [sp, #156]
     e6c:	cmp	w0, #0x0
     e70:	b.ne	ec4 <ext2fs_initialize+0xb9c>  // b.any
     e74:	ldr	x0, [sp, #96]
     e78:	ldr	w0, [x0, #32]
     e7c:	cmp	w0, #0xff
     e80:	b.ls	ec4 <ext2fs_initialize+0xb9c>  // b.plast
     e84:	ldr	x0, [sp, #96]
     e88:	ldr	w1, [x0, #32]
     e8c:	ldr	x0, [sp, #96]
     e90:	sub	w1, w1, #0x8
     e94:	str	w1, [x0, #32]
     e98:	ldr	x19, [sp, #96]
     e9c:	ldr	x0, [sp, #56]
     ea0:	bl	0 <ext2fs_blocks_count>
     ea4:	mov	x1, x0
     ea8:	mov	x0, x19
     eac:	bl	0 <ext2fs_blocks_count_set>
     eb0:	ldr	x1, [sp, #96]
     eb4:	ldr	x0, [sp, #96]
     eb8:	ldr	w1, [x1, #32]
     ebc:	str	w1, [x0, #36]
     ec0:	b	c14 <ext2fs_initialize+0x8ec>
     ec4:	mov	x0, #0xb75b                	// #46939
     ec8:	movk	x0, #0x7f2b, lsl #16
     ecc:	str	x0, [sp, #216]
     ed0:	b	18f0 <ext2fs_initialize+0x15c8>
     ed4:	ldr	x0, [sp, #96]
     ed8:	ldr	w0, [x0, #24]
     edc:	mov	w1, #0x400                 	// #1024
     ee0:	lsl	w1, w1, w0
     ee4:	ldr	x0, [sp, #96]
     ee8:	ldr	w0, [x0, #76]
     eec:	cmp	w0, #0x0
     ef0:	b.eq	f00 <ext2fs_initialize+0xbd8>  // b.none
     ef4:	ldr	x0, [sp, #96]
     ef8:	ldrh	w0, [x0, #88]
     efc:	b	f04 <ext2fs_initialize+0xbdc>
     f00:	mov	w0, #0x80                  	// #128
     f04:	sdiv	w0, w1, w0
     f08:	mov	w1, w0
     f0c:	mov	w0, #0x10000               	// #65536
     f10:	sub	w0, w0, w1
     f14:	ldr	w1, [sp, #208]
     f18:	cmp	w1, w0
     f1c:	b.ls	f68 <ext2fs_initialize+0xc40>  // b.plast
     f20:	ldr	x0, [sp, #96]
     f24:	ldr	w0, [x0, #24]
     f28:	mov	w1, #0x400                 	// #1024
     f2c:	lsl	w1, w1, w0
     f30:	ldr	x0, [sp, #96]
     f34:	ldr	w0, [x0, #76]
     f38:	cmp	w0, #0x0
     f3c:	b.eq	f4c <ext2fs_initialize+0xc24>  // b.none
     f40:	ldr	x0, [sp, #96]
     f44:	ldrh	w0, [x0, #88]
     f48:	b	f50 <ext2fs_initialize+0xc28>
     f4c:	mov	w0, #0x80                  	// #128
     f50:	sdiv	w0, w1, w0
     f54:	mov	w1, w0
     f58:	mov	w0, #0x10000               	// #65536
     f5c:	sub	w0, w0, w1
     f60:	str	w0, [sp, #208]
     f64:	b	f6c <ext2fs_initialize+0xc44>
     f68:	nop
     f6c:	ldr	x0, [sp, #96]
     f70:	ldr	w1, [sp, #208]
     f74:	str	w1, [x0, #40]
     f78:	ldr	x0, [sp, #96]
     f7c:	ldr	w1, [x0, #40]
     f80:	ldr	x0, [sp, #96]
     f84:	ldr	w0, [x0, #76]
     f88:	cmp	w0, #0x0
     f8c:	b.eq	f9c <ext2fs_initialize+0xc74>  // b.none
     f90:	ldr	x0, [sp, #96]
     f94:	ldrh	w0, [x0, #88]
     f98:	b	fa0 <ext2fs_initialize+0xc78>
     f9c:	mov	w0, #0x80                  	// #128
     fa0:	mul	w0, w0, w1
     fa4:	ldr	x1, [sp, #96]
     fa8:	ldr	w1, [x1, #24]
     fac:	mov	w2, #0x400                 	// #1024
     fb0:	lsl	w1, w2, w1
     fb4:	add	w0, w0, w1
     fb8:	sub	w2, w0, #0x1
     fbc:	ldr	x0, [sp, #96]
     fc0:	ldr	w0, [x0, #24]
     fc4:	add	w1, w0, #0xa
     fc8:	ldr	x0, [sp, #104]
     fcc:	lsr	w1, w2, w1
     fd0:	str	w1, [x0, #72]
     fd4:	ldr	x0, [sp, #104]
     fd8:	ldr	w0, [x0, #72]
     fdc:	ldr	x1, [sp, #96]
     fe0:	ldr	w1, [x1, #24]
     fe4:	mov	w2, #0x400                 	// #1024
     fe8:	lsl	w1, w2, w1
     fec:	mul	w2, w0, w1
     ff0:	ldr	x0, [sp, #96]
     ff4:	ldr	w0, [x0, #76]
     ff8:	cmp	w0, #0x0
     ffc:	b.eq	100c <ext2fs_initialize+0xce4>  // b.none
    1000:	ldr	x0, [sp, #96]
    1004:	ldrh	w0, [x0, #88]
    1008:	b	1010 <ext2fs_initialize+0xce8>
    100c:	mov	w0, #0x80                  	// #128
    1010:	ldr	x1, [sp, #96]
    1014:	udiv	w0, w2, w0
    1018:	str	w0, [x1, #40]
    101c:	ldr	x0, [sp, #96]
    1020:	ldr	w0, [x0, #40]
    1024:	cmp	w0, #0x7
    1028:	b.hi	1038 <ext2fs_initialize+0xd10>  // b.pmore
    102c:	ldr	x0, [sp, #96]
    1030:	mov	w1, #0x8                   	// #8
    1034:	str	w1, [x0, #40]
    1038:	ldr	x0, [sp, #96]
    103c:	ldr	w1, [x0, #40]
    1040:	ldr	x0, [sp, #96]
    1044:	and	w1, w1, #0xfffffff8
    1048:	str	w1, [x0, #40]
    104c:	ldr	x0, [sp, #96]
    1050:	ldr	w1, [x0, #40]
    1054:	ldr	x0, [sp, #96]
    1058:	ldr	w0, [x0, #76]
    105c:	cmp	w0, #0x0
    1060:	b.eq	1070 <ext2fs_initialize+0xd48>  // b.none
    1064:	ldr	x0, [sp, #96]
    1068:	ldrh	w0, [x0, #88]
    106c:	b	1074 <ext2fs_initialize+0xd4c>
    1070:	mov	w0, #0x80                  	// #128
    1074:	mul	w0, w0, w1
    1078:	ldr	x1, [sp, #96]
    107c:	ldr	w1, [x1, #24]
    1080:	mov	w2, #0x400                 	// #1024
    1084:	lsl	w1, w2, w1
    1088:	add	w0, w0, w1
    108c:	sub	w2, w0, #0x1
    1090:	ldr	x0, [sp, #96]
    1094:	ldr	w0, [x0, #24]
    1098:	add	w1, w0, #0xa
    109c:	ldr	x0, [sp, #104]
    10a0:	lsr	w1, w2, w1
    10a4:	str	w1, [x0, #72]
    10a8:	ldr	x0, [sp, #96]
    10ac:	ldr	w0, [x0, #40]
    10b0:	mov	w1, w0
    10b4:	ldr	x0, [sp, #104]
    10b8:	ldr	w0, [x0, #48]
    10bc:	mov	w0, w0
    10c0:	mul	x1, x1, x0
    10c4:	mov	x0, #0xffffffff            	// #4294967295
    10c8:	cmp	x1, x0
    10cc:	b.ls	10e0 <ext2fs_initialize+0xdb8>  // b.plast
    10d0:	ldr	w0, [sp, #208]
    10d4:	sub	w0, w0, #0x1
    10d8:	str	w0, [sp, #208]
    10dc:	b	f6c <ext2fs_initialize+0xc44>
    10e0:	ldr	x0, [sp, #96]
    10e4:	ldr	w2, [x0, #40]
    10e8:	ldr	x0, [sp, #104]
    10ec:	ldr	w1, [x0, #48]
    10f0:	ldr	x0, [sp, #96]
    10f4:	mul	w1, w2, w1
    10f8:	str	w1, [x0]
    10fc:	ldr	x1, [sp, #96]
    1100:	ldr	x0, [sp, #96]
    1104:	ldr	w1, [x1]
    1108:	str	w1, [x0, #16]
    110c:	ldr	x0, [sp, #96]
    1110:	bl	0 <ext2fs_has_feature_resize_inode>
    1114:	cmp	w0, #0x0
    1118:	b.eq	112c <ext2fs_initialize+0xe04>  // b.none
    111c:	ldr	x0, [sp, #104]
    1120:	bl	200 <calc_reserved_gdt_blocks>
    1124:	str	w0, [sp, #184]
    1128:	b	1130 <ext2fs_initialize+0xe08>
    112c:	str	wzr, [sp, #184]
    1130:	ldr	x0, [sp, #56]
    1134:	ldrh	w0, [x0, #206]
    1138:	cmp	w0, #0x0
    113c:	b.eq	114c <ext2fs_initialize+0xe24>  // b.none
    1140:	ldr	x0, [sp, #56]
    1144:	ldrh	w0, [x0, #206]
    1148:	b	1154 <ext2fs_initialize+0xe2c>
    114c:	ldr	w0, [sp, #184]
    1150:	and	w0, w0, #0xffff
    1154:	ldr	x1, [sp, #96]
    1158:	strh	w0, [x1, #206]
    115c:	ldr	x0, [sp, #96]
    1160:	ldrh	w0, [x0, #206]
    1164:	and	x1, x0, #0xffff
    1168:	ldr	x0, [sp, #96]
    116c:	ldr	w0, [x0, #24]
    1170:	mov	w2, #0x400                 	// #1024
    1174:	lsl	w0, w2, w0
    1178:	sxtw	x0, w0
    117c:	lsr	x0, x0, #2
    1180:	cmp	x1, x0
    1184:	b.ls	1198 <ext2fs_initialize+0xe70>  // b.plast
    1188:	mov	x0, #0xb75d                	// #46941
    118c:	movk	x0, #0x7f2b, lsl #16
    1190:	str	x0, [sp, #216]
    1194:	b	18f0 <ext2fs_initialize+0x15c8>
    1198:	ldr	x0, [sp, #96]
    119c:	ldrh	w0, [x0, #206]
    11a0:	and	x1, x0, #0xffff
    11a4:	ldr	x0, [sp, #104]
    11a8:	ldr	x0, [x0, #56]
    11ac:	add	x2, x1, x0
    11b0:	ldr	x0, [sp, #96]
    11b4:	ldr	w1, [x0, #32]
    11b8:	mov	w0, w1
    11bc:	lsl	w0, w0, #1
    11c0:	add	w0, w0, w1
    11c4:	lsr	w0, w0, #2
    11c8:	mov	w0, w0
    11cc:	cmp	x2, x0
    11d0:	b.ls	11fc <ext2fs_initialize+0xed4>  // b.plast
    11d4:	ldr	x0, [sp, #104]
    11d8:	ldr	x0, [x0, #32]
    11dc:	bl	140 <ext2fs_set_feature_meta_bg>
    11e0:	ldr	x0, [sp, #104]
    11e4:	ldr	x0, [x0, #32]
    11e8:	bl	28 <ext2fs_clear_feature_resize_inode>
    11ec:	ldr	x0, [sp, #96]
    11f0:	ldr	x1, [sp, #56]
    11f4:	ldrh	w1, [x1, #206]
    11f8:	strh	w1, [x0, #206]
    11fc:	ldr	x0, [sp, #104]
    1200:	ldr	w0, [x0, #72]
    1204:	ldr	x1, [sp, #96]
    1208:	ldrh	w1, [x1, #206]
    120c:	add	w0, w0, w1
    1210:	add	w0, w0, #0x3
    1214:	str	w0, [sp, #212]
    1218:	ldr	x0, [sp, #104]
    121c:	ldr	x0, [x0, #32]
    1220:	bl	118 <ext2fs_has_feature_meta_bg>
    1224:	cmp	w0, #0x0
    1228:	b.eq	123c <ext2fs_initialize+0xf14>  // b.none
    122c:	ldr	w0, [sp, #212]
    1230:	add	w0, w0, #0x1
    1234:	str	w0, [sp, #212]
    1238:	b	1254 <ext2fs_initialize+0xf2c>
    123c:	ldr	x0, [sp, #104]
    1240:	ldr	x0, [x0, #56]
    1244:	mov	w1, w0
    1248:	ldr	w0, [sp, #212]
    124c:	add	w0, w0, w1
    1250:	str	w0, [sp, #212]
    1254:	ldr	x0, [sp, #96]
    1258:	ldr	w0, [x0, #32]
    125c:	ldr	w1, [sp, #212]
    1260:	cmp	w1, w0
    1264:	b.ls	1278 <ext2fs_initialize+0xf50>  // b.plast
    1268:	mov	x0, #0xb75b                	// #46939
    126c:	movk	x0, #0x7f2b, lsl #16
    1270:	str	x0, [sp, #216]
    1274:	b	18f0 <ext2fs_initialize+0x15c8>
    1278:	ldr	x0, [sp, #104]
    127c:	ldr	w0, [x0, #72]
    1280:	add	w0, w0, #0x2
    1284:	str	w0, [sp, #212]
    1288:	str	wzr, [sp, #176]
    128c:	ldr	x0, [sp, #96]
    1290:	bl	50 <ext2fs_has_feature_sparse_super2>
    1294:	cmp	w0, #0x0
    1298:	b.eq	12e4 <ext2fs_initialize+0xfbc>  // b.none
    129c:	ldr	x0, [sp, #104]
    12a0:	ldr	w0, [x0, #48]
    12a4:	cmp	w0, #0x2
    12a8:	b.ne	12c8 <ext2fs_initialize+0xfa0>  // b.any
    12ac:	ldr	x0, [sp, #56]
    12b0:	ldr	w0, [x0, #588]
    12b4:	cmp	w0, #0x0
    12b8:	cset	w0, ne  // ne = any
    12bc:	and	w0, w0, #0xff
    12c0:	str	w0, [sp, #176]
    12c4:	b	1304 <ext2fs_initialize+0xfdc>
    12c8:	ldr	x0, [sp, #56]
    12cc:	ldr	w0, [x0, #592]
    12d0:	cmp	w0, #0x0
    12d4:	cset	w0, ne  // ne = any
    12d8:	and	w0, w0, #0xff
    12dc:	str	w0, [sp, #176]
    12e0:	b	1304 <ext2fs_initialize+0xfdc>
    12e4:	ldr	x2, [sp, #104]
    12e8:	ldr	x0, [sp, #104]
    12ec:	ldr	w0, [x0, #48]
    12f0:	sub	w0, w0, #0x1
    12f4:	mov	w1, w0
    12f8:	mov	x0, x2
    12fc:	bl	0 <ext2fs_bg_has_super>
    1300:	str	w0, [sp, #176]
    1304:	ldr	w0, [sp, #176]
    1308:	cmp	w0, #0x0
    130c:	b.eq	1338 <ext2fs_initialize+0x1010>  // b.none
    1310:	ldr	x0, [sp, #104]
    1314:	ldr	x0, [x0, #56]
    1318:	mov	w1, w0
    131c:	ldr	x0, [sp, #96]
    1320:	ldrh	w0, [x0, #206]
    1324:	add	w1, w1, w0
    1328:	ldr	w0, [sp, #212]
    132c:	add	w0, w1, w0
    1330:	add	w0, w0, #0x1
    1334:	str	w0, [sp, #212]
    1338:	ldr	x0, [sp, #96]
    133c:	bl	0 <ext2fs_blocks_count>
    1340:	mov	x1, x0
    1344:	ldr	x0, [sp, #96]
    1348:	ldr	w0, [x0, #20]
    134c:	mov	w0, w0
    1350:	sub	x0, x1, x0
    1354:	ldr	x1, [sp, #96]
    1358:	ldr	w1, [x1, #32]
    135c:	mov	w1, w1
    1360:	udiv	x2, x0, x1
    1364:	mul	x1, x2, x1
    1368:	sub	x0, x0, x1
    136c:	str	w0, [sp, #140]
    1370:	ldr	x0, [sp, #104]
    1374:	ldr	w0, [x0, #48]
    1378:	cmp	w0, #0x1
    137c:	b.ne	13ac <ext2fs_initialize+0x1084>  // b.any
    1380:	ldr	w0, [sp, #140]
    1384:	cmp	w0, #0x0
    1388:	b.eq	13ac <ext2fs_initialize+0x1084>  // b.none
    138c:	ldr	w1, [sp, #140]
    1390:	ldr	w0, [sp, #212]
    1394:	cmp	w1, w0
    1398:	b.cs	13ac <ext2fs_initialize+0x1084>  // b.hs, b.nlast
    139c:	mov	x0, #0xb72c                	// #46892
    13a0:	movk	x0, #0x7f2b, lsl #16
    13a4:	str	x0, [sp, #216]
    13a8:	b	18f0 <ext2fs_initialize+0x15c8>
    13ac:	ldr	w0, [sp, #140]
    13b0:	cmp	w0, #0x0
    13b4:	b.eq	1454 <ext2fs_initialize+0x112c>  // b.none
    13b8:	ldr	w0, [sp, #212]
    13bc:	add	w0, w0, #0x32
    13c0:	ldr	w1, [sp, #140]
    13c4:	cmp	w1, w0
    13c8:	b.cs	1454 <ext2fs_initialize+0x112c>  // b.hs, b.nlast
    13cc:	ldr	x19, [sp, #96]
    13d0:	ldr	x0, [sp, #96]
    13d4:	bl	0 <ext2fs_blocks_count>
    13d8:	mov	x1, x0
    13dc:	ldr	w0, [sp, #140]
    13e0:	sub	x0, x1, x0
    13e4:	mov	x1, x0
    13e8:	mov	x0, x19
    13ec:	bl	0 <ext2fs_blocks_count_set>
    13f0:	ldr	x0, [sp, #56]
    13f4:	bl	0 <ext2fs_r_blocks_count>
    13f8:	ucvtf	d0, x0
    13fc:	mov	x0, #0x4059000000000000    	// #4636737291354636288
    1400:	fmov	d1, x0
    1404:	fmul	d8, d0, d1
    1408:	ldr	x0, [sp, #56]
    140c:	bl	0 <ext2fs_blocks_count>
    1410:	ucvtf	d0, x0
    1414:	fdiv	d0, d8, d0
    1418:	str	d0, [sp, #128]
    141c:	ldr	x19, [sp, #96]
    1420:	ldr	x0, [sp, #96]
    1424:	bl	0 <ext2fs_blocks_count>
    1428:	ucvtf	d1, x0
    142c:	ldr	d0, [sp, #128]
    1430:	fmul	d0, d1, d0
    1434:	mov	x0, #0x4059000000000000    	// #4636737291354636288
    1438:	fmov	d1, x0
    143c:	fdiv	d0, d0, d1
    1440:	fcvtzu	x0, d0
    1444:	mov	x1, x0
    1448:	mov	x0, x19
    144c:	bl	0 <ext2fs_r_blocks_count_set>
    1450:	b	c14 <ext2fs_initialize+0x8ec>
    1454:	ldr	x0, [sp, #96]
    1458:	bl	50 <ext2fs_has_feature_sparse_super2>
    145c:	cmp	w0, #0x0
    1460:	b.eq	151c <ext2fs_initialize+0x11f4>  // b.none
    1464:	ldr	x0, [sp, #96]
    1468:	ldr	w1, [x0, #588]
    146c:	ldr	x0, [sp, #104]
    1470:	ldr	w0, [x0, #48]
    1474:	cmp	w1, w0
    1478:	b.cc	1490 <ext2fs_initialize+0x1168>  // b.lo, b.ul, b.last
    147c:	ldr	x0, [sp, #104]
    1480:	ldr	w1, [x0, #48]
    1484:	ldr	x0, [sp, #96]
    1488:	sub	w1, w1, #0x1
    148c:	str	w1, [x0, #588]
    1490:	ldr	x0, [sp, #96]
    1494:	ldr	w1, [x0, #592]
    1498:	ldr	x0, [sp, #104]
    149c:	ldr	w0, [x0, #48]
    14a0:	cmp	w1, w0
    14a4:	b.cc	14bc <ext2fs_initialize+0x1194>  // b.lo, b.ul, b.last
    14a8:	ldr	x0, [sp, #104]
    14ac:	ldr	w1, [x0, #48]
    14b0:	ldr	x0, [sp, #96]
    14b4:	sub	w1, w1, #0x1
    14b8:	str	w1, [x0, #592]
    14bc:	ldr	x0, [sp, #96]
    14c0:	ldr	w1, [x0, #588]
    14c4:	ldr	x0, [sp, #96]
    14c8:	ldr	w0, [x0, #592]
    14cc:	cmp	w1, w0
    14d0:	b.ne	14dc <ext2fs_initialize+0x11b4>  // b.any
    14d4:	ldr	x0, [sp, #96]
    14d8:	str	wzr, [x0, #592]
    14dc:	ldr	x0, [sp, #96]
    14e0:	ldr	w1, [x0, #588]
    14e4:	ldr	x0, [sp, #96]
    14e8:	ldr	w0, [x0, #592]
    14ec:	cmp	w1, w0
    14f0:	b.ls	151c <ext2fs_initialize+0x11f4>  // b.plast
    14f4:	ldr	x0, [sp, #96]
    14f8:	ldr	w0, [x0, #588]
    14fc:	str	w0, [sp, #124]
    1500:	ldr	x1, [sp, #96]
    1504:	ldr	x0, [sp, #96]
    1508:	ldr	w1, [x1, #592]
    150c:	str	w1, [x0, #588]
    1510:	ldr	x0, [sp, #96]
    1514:	ldr	w1, [sp, #124]
    1518:	str	w1, [x0, #592]
    151c:	ldr	x0, [sp, #104]
    1520:	ldr	x0, [x0, #24]
    1524:	bl	0 <strlen>
    1528:	add	x0, x0, #0x50
    152c:	add	x1, sp, #0x58
    1530:	bl	0 <ext2fs_get_mem>
    1534:	str	x0, [sp, #216]
    1538:	ldr	x0, [sp, #216]
    153c:	cmp	x0, #0x0
    1540:	b.ne	18d4 <ext2fs_initialize+0x15ac>  // b.any
    1544:	ldr	x1, [sp, #88]
    1548:	adrp	x0, 0 <ext2fs_has_feature_resize_inode>
    154c:	add	x0, x0, #0x0
    1550:	mov	x2, x1
    1554:	mov	x3, x0
    1558:	ldp	x0, x1, [x3]
    155c:	stp	x0, x1, [x2]
    1560:	ldrh	w0, [x3, #16]
    1564:	strh	w0, [x2, #16]
    1568:	ldr	x2, [sp, #88]
    156c:	ldr	x0, [sp, #104]
    1570:	ldr	x0, [x0, #24]
    1574:	mov	x1, x0
    1578:	mov	x0, x2
    157c:	bl	0 <strcat>
    1580:	ldr	x3, [sp, #104]
    1584:	ldr	x1, [sp, #88]
    1588:	ldr	x0, [sp, #104]
    158c:	add	x0, x0, #0x58
    1590:	mov	x2, x0
    1594:	mov	x0, x3
    1598:	bl	0 <ext2fs_allocate_subcluster_bitmap>
    159c:	str	x0, [sp, #216]
    15a0:	ldr	x0, [sp, #216]
    15a4:	cmp	x0, #0x0
    15a8:	b.ne	18dc <ext2fs_initialize+0x15b4>  // b.any
    15ac:	ldr	x1, [sp, #88]
    15b0:	adrp	x0, 0 <ext2fs_has_feature_resize_inode>
    15b4:	add	x0, x0, #0x0
    15b8:	mov	x2, x1
    15bc:	mov	x3, x0
    15c0:	ldp	x0, x1, [x3]
    15c4:	stp	x0, x1, [x2]
    15c8:	ldrh	w0, [x3, #16]
    15cc:	strh	w0, [x2, #16]
    15d0:	ldr	x2, [sp, #88]
    15d4:	ldr	x0, [sp, #104]
    15d8:	ldr	x0, [x0, #24]
    15dc:	mov	x1, x0
    15e0:	mov	x0, x2
    15e4:	bl	0 <strcat>
    15e8:	ldr	x3, [sp, #104]
    15ec:	ldr	x1, [sp, #88]
    15f0:	ldr	x0, [sp, #104]
    15f4:	add	x0, x0, #0x50
    15f8:	mov	x2, x0
    15fc:	mov	x0, x3
    1600:	bl	0 <ext2fs_allocate_inode_bitmap>
    1604:	str	x0, [sp, #216]
    1608:	ldr	x0, [sp, #216]
    160c:	cmp	x0, #0x0
    1610:	b.ne	18e4 <ext2fs_initialize+0x15bc>  // b.any
    1614:	add	x0, sp, #0x58
    1618:	bl	0 <ext2fs_free_mem>
    161c:	ldr	x0, [sp, #104]
    1620:	ldr	x3, [x0, #56]
    1624:	ldr	x0, [sp, #104]
    1628:	ldr	w0, [x0, #40]
    162c:	mov	w1, w0
    1630:	ldr	x0, [sp, #104]
    1634:	add	x0, x0, #0x40
    1638:	mov	x2, x0
    163c:	mov	x0, x3
    1640:	bl	0 <ext2fs_get_array>
    1644:	str	x0, [sp, #216]
    1648:	ldr	x0, [sp, #216]
    164c:	cmp	x0, #0x0
    1650:	b.ne	18ec <ext2fs_initialize+0x15c4>  // b.any
    1654:	ldr	x0, [sp, #104]
    1658:	ldr	x3, [x0, #64]
    165c:	ldr	x0, [sp, #104]
    1660:	ldr	x1, [x0, #56]
    1664:	ldr	x0, [sp, #104]
    1668:	ldr	w0, [x0, #40]
    166c:	mov	w0, w0
    1670:	mul	x0, x1, x0
    1674:	mov	x2, x0
    1678:	mov	w1, #0x0                   	// #0
    167c:	mov	x0, x3
    1680:	bl	0 <memset>
    1684:	str	xzr, [sp, #192]
    1688:	ldr	x0, [sp, #104]
    168c:	bl	1b8 <ext2fs_has_group_desc_csum>
    1690:	str	w0, [sp, #120]
    1694:	ldr	x0, [sp, #96]
    1698:	ldr	w0, [x0, #84]
    169c:	str	w0, [sp, #172]
    16a0:	str	wzr, [sp, #204]
    16a4:	b	1804 <ext2fs_initialize+0x14dc>
    16a8:	ldr	w0, [sp, #120]
    16ac:	cmp	w0, #0x0
    16b0:	b.eq	1750 <ext2fs_initialize+0x1428>  // b.none
    16b4:	ldr	x0, [sp, #104]
    16b8:	ldr	w0, [x0, #48]
    16bc:	sub	w0, w0, #0x1
    16c0:	ldr	w1, [sp, #204]
    16c4:	cmp	w1, w0
    16c8:	b.eq	16dc <ext2fs_initialize+0x13b4>  // b.none
    16cc:	ldr	x0, [sp, #104]
    16d0:	mov	w2, #0x2                   	// #2
    16d4:	ldr	w1, [sp, #204]
    16d8:	bl	0 <ext2fs_bg_flags_set>
    16dc:	ldr	x0, [sp, #104]
    16e0:	mov	w2, #0x1                   	// #1
    16e4:	ldr	w1, [sp, #204]
    16e8:	bl	0 <ext2fs_bg_flags_set>
    16ec:	ldr	x0, [sp, #96]
    16f0:	ldr	w0, [x0, #40]
    16f4:	str	w0, [sp, #188]
    16f8:	ldr	w0, [sp, #172]
    16fc:	cmp	w0, #0x0
    1700:	b.eq	1740 <ext2fs_initialize+0x1418>  // b.none
    1704:	ldr	w1, [sp, #188]
    1708:	ldr	w0, [sp, #172]
    170c:	cmp	w1, w0
    1710:	b.ls	172c <ext2fs_initialize+0x1404>  // b.plast
    1714:	ldr	w1, [sp, #188]
    1718:	ldr	w0, [sp, #172]
    171c:	sub	w0, w1, w0
    1720:	str	w0, [sp, #188]
    1724:	str	wzr, [sp, #172]
    1728:	b	1740 <ext2fs_initialize+0x1418>
    172c:	ldr	w1, [sp, #172]
    1730:	ldr	w0, [sp, #188]
    1734:	sub	w0, w1, w0
    1738:	str	w0, [sp, #172]
    173c:	str	wzr, [sp, #188]
    1740:	ldr	x0, [sp, #104]
    1744:	ldr	w2, [sp, #188]
    1748:	ldr	w1, [sp, #204]
    174c:	bl	0 <ext2fs_bg_itable_unused_set>
    1750:	ldr	x3, [sp, #104]
    1754:	ldr	x0, [sp, #104]
    1758:	ldr	x0, [x0, #88]
    175c:	mov	x2, x0
    1760:	ldr	w1, [sp, #204]
    1764:	mov	x0, x3
    1768:	bl	0 <ext2fs_reserve_super_and_bgd>
    176c:	str	w0, [sp, #188]
    1770:	ldr	x0, [sp, #104]
    1774:	ldr	x0, [x0, #32]
    1778:	ldrb	w0, [x0, #372]
    177c:	cmp	w0, #0x0
    1780:	b.eq	179c <ext2fs_initialize+0x1474>  // b.none
    1784:	ldr	x0, [sp, #104]
    1788:	ldr	w1, [x0, #72]
    178c:	ldr	w0, [sp, #188]
    1790:	add	w0, w1, w0
    1794:	add	w0, w0, #0x2
    1798:	str	w0, [sp, #188]
    179c:	ldr	w0, [sp, #188]
    17a0:	ldr	x1, [sp, #192]
    17a4:	add	x0, x1, x0
    17a8:	str	x0, [sp, #192]
    17ac:	ldr	x0, [sp, #104]
    17b0:	ldr	w2, [sp, #188]
    17b4:	ldr	w1, [sp, #204]
    17b8:	bl	0 <ext2fs_bg_free_blocks_count_set>
    17bc:	ldr	x3, [sp, #104]
    17c0:	ldr	x0, [sp, #104]
    17c4:	ldr	x0, [x0, #32]
    17c8:	ldr	w0, [x0, #40]
    17cc:	mov	w2, w0
    17d0:	ldr	w1, [sp, #204]
    17d4:	mov	x0, x3
    17d8:	bl	0 <ext2fs_bg_free_inodes_count_set>
    17dc:	ldr	x0, [sp, #104]
    17e0:	mov	w2, #0x0                   	// #0
    17e4:	ldr	w1, [sp, #204]
    17e8:	bl	0 <ext2fs_bg_used_dirs_count_set>
    17ec:	ldr	x0, [sp, #104]
    17f0:	ldr	w1, [sp, #204]
    17f4:	bl	0 <ext2fs_group_desc_csum_set>
    17f8:	ldr	w0, [sp, #204]
    17fc:	add	w0, w0, #0x1
    1800:	str	w0, [sp, #204]
    1804:	ldr	x0, [sp, #104]
    1808:	ldr	w0, [x0, #48]
    180c:	ldr	w1, [sp, #204]
    1810:	cmp	w1, w0
    1814:	b.cc	16a8 <ext2fs_initialize+0x1380>  // b.lo, b.ul, b.last
    1818:	ldr	x0, [sp, #104]
    181c:	ldr	w0, [x0, #192]
    1820:	mov	w1, #0x1                   	// #1
    1824:	lsl	w0, w1, w0
    1828:	neg	w0, w0
    182c:	sxtw	x0, w0
    1830:	ldr	x1, [sp, #192]
    1834:	and	x0, x1, x0
    1838:	str	x0, [sp, #192]
    183c:	ldr	x0, [sp, #96]
    1840:	ldr	x1, [sp, #192]
    1844:	bl	0 <ext2fs_free_blocks_count_set>
    1848:	mov	w0, #0xffffffff            	// #-1
    184c:	strb	w0, [sp, #119]
    1850:	ldr	x0, [sp, #96]
    1854:	ldr	w1, [x0, #352]
    1858:	ldr	x0, [sp, #96]
    185c:	orr	w1, w1, #0x2
    1860:	str	w1, [x0, #352]
    1864:	ldr	x0, [sp, #104]
    1868:	bl	0 <ext2fs_mark_super_dirty>
    186c:	ldr	x0, [sp, #104]
    1870:	bl	0 <ext2fs_mark_bb_dirty>
    1874:	ldr	x0, [sp, #104]
    1878:	bl	0 <ext2fs_mark_ib_dirty>
    187c:	ldr	x0, [sp, #104]
    1880:	ldr	x0, [x0, #8]
    1884:	ldr	x0, [x0, #8]
    1888:	ldr	x2, [x0, #32]
    188c:	ldr	x0, [sp, #104]
    1890:	ldr	x3, [x0, #8]
    1894:	ldr	x0, [sp, #104]
    1898:	ldr	w0, [x0, #40]
    189c:	mov	w1, w0
    18a0:	mov	x0, x3
    18a4:	blr	x2
    18a8:	ldr	x1, [sp, #104]
    18ac:	ldr	x0, [sp, #40]
    18b0:	str	x1, [x0]
    18b4:	mov	x0, #0x0                   	// #0
    18b8:	b	1904 <ext2fs_initialize+0x15dc>
    18bc:	nop
    18c0:	b	18f0 <ext2fs_initialize+0x15c8>
    18c4:	nop
    18c8:	b	18f0 <ext2fs_initialize+0x15c8>
    18cc:	nop
    18d0:	b	18f0 <ext2fs_initialize+0x15c8>
    18d4:	nop
    18d8:	b	18f0 <ext2fs_initialize+0x15c8>
    18dc:	nop
    18e0:	b	18f0 <ext2fs_initialize+0x15c8>
    18e4:	nop
    18e8:	b	18f0 <ext2fs_initialize+0x15c8>
    18ec:	nop
    18f0:	ldr	x0, [sp, #88]
    18f4:	bl	0 <free>
    18f8:	ldr	x0, [sp, #104]
    18fc:	bl	0 <ext2fs_free>
    1900:	ldr	x0, [sp, #216]
    1904:	ldr	x19, [sp, #16]
    1908:	ldr	d8, [sp, #24]
    190c:	ldp	x29, x30, [sp], #224
    1910:	ret

inline.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_fast_set_bit>:
   0:	sub	sp, sp, #0x20
   4:	str	w0, [sp, #12]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp]
  10:	str	x0, [sp, #24]
  14:	ldr	w0, [sp, #12]
  18:	lsr	w0, w0, #3
  1c:	mov	w0, w0
  20:	ldr	x1, [sp, #24]
  24:	add	x0, x1, x0
  28:	str	x0, [sp, #24]
  2c:	ldr	x0, [sp, #24]
  30:	ldrb	w1, [x0]
  34:	ldr	w0, [sp, #12]
  38:	and	w0, w0, #0x7
  3c:	mov	w2, #0x1                   	// #1
  40:	lsl	w0, w2, w0
  44:	and	w0, w0, #0xff
  48:	orr	w0, w1, w0
  4c:	and	w1, w0, #0xff
  50:	ldr	x0, [sp, #24]
  54:	strb	w1, [x0]
  58:	nop
  5c:	add	sp, sp, #0x20
  60:	ret

0000000000000064 <ext2fs_fast_clear_bit>:
  64:	sub	sp, sp, #0x20
  68:	str	w0, [sp, #12]
  6c:	str	x1, [sp]
  70:	ldr	x0, [sp]
  74:	str	x0, [sp, #24]
  78:	ldr	w0, [sp, #12]
  7c:	lsr	w0, w0, #3
  80:	mov	w0, w0
  84:	ldr	x1, [sp, #24]
  88:	add	x0, x1, x0
  8c:	str	x0, [sp, #24]
  90:	ldr	x0, [sp, #24]
  94:	ldrb	w1, [x0]
  98:	ldr	w0, [sp, #12]
  9c:	and	w0, w0, #0x7
  a0:	mov	w2, #0x1                   	// #1
  a4:	lsl	w0, w2, w0
  a8:	and	w0, w0, #0xff
  ac:	mvn	w0, w0
  b0:	and	w0, w0, #0xff
  b4:	and	w0, w1, w0
  b8:	and	w1, w0, #0xff
  bc:	ldr	x0, [sp, #24]
  c0:	strb	w1, [x0]
  c4:	nop
  c8:	add	sp, sp, #0x20
  cc:	ret

00000000000000d0 <ext2fs_fast_set_bit64>:
  d0:	sub	sp, sp, #0x20
  d4:	str	x0, [sp, #8]
  d8:	str	x1, [sp]
  dc:	ldr	x0, [sp]
  e0:	str	x0, [sp, #24]
  e4:	ldr	x0, [sp, #8]
  e8:	lsr	x0, x0, #3
  ec:	ldr	x1, [sp, #24]
  f0:	add	x0, x1, x0
  f4:	str	x0, [sp, #24]
  f8:	ldr	x0, [sp, #24]
  fc:	ldrb	w1, [x0]
 100:	ldr	x0, [sp, #8]
 104:	and	w0, w0, #0x7
 108:	mov	w2, #0x1                   	// #1
 10c:	lsl	w0, w2, w0
 110:	and	w0, w0, #0xff
 114:	orr	w0, w1, w0
 118:	and	w1, w0, #0xff
 11c:	ldr	x0, [sp, #24]
 120:	strb	w1, [x0]
 124:	nop
 128:	add	sp, sp, #0x20
 12c:	ret

0000000000000130 <ext2fs_fast_clear_bit64>:
 130:	sub	sp, sp, #0x20
 134:	str	x0, [sp, #8]
 138:	str	x1, [sp]
 13c:	ldr	x0, [sp]
 140:	str	x0, [sp, #24]
 144:	ldr	x0, [sp, #8]
 148:	lsr	x0, x0, #3
 14c:	ldr	x1, [sp, #24]
 150:	add	x0, x1, x0
 154:	str	x0, [sp, #24]
 158:	ldr	x0, [sp, #24]
 15c:	ldrb	w1, [x0]
 160:	ldr	x0, [sp, #8]
 164:	and	w0, w0, #0x7
 168:	mov	w2, #0x1                   	// #1
 16c:	lsl	w0, w2, w0
 170:	and	w0, w0, #0xff
 174:	mvn	w0, w0
 178:	and	w0, w0, #0xff
 17c:	and	w0, w1, w0
 180:	and	w1, w0, #0xff
 184:	ldr	x0, [sp, #24]
 188:	strb	w1, [x0]
 18c:	nop
 190:	add	sp, sp, #0x20
 194:	ret

0000000000000198 <ext2fs_swab16>:
 198:	sub	sp, sp, #0x10
 19c:	strh	w0, [sp, #14]
 1a0:	ldrh	w0, [sp, #14]
 1a4:	rev16	w0, w0
 1a8:	and	w0, w0, #0xffff
 1ac:	add	sp, sp, #0x10
 1b0:	ret

00000000000001b4 <ext2fs_swab32>:
 1b4:	sub	sp, sp, #0x10
 1b8:	str	w0, [sp, #12]
 1bc:	ldr	w0, [sp, #12]
 1c0:	lsr	w1, w0, #24
 1c4:	ldr	w0, [sp, #12]
 1c8:	lsr	w0, w0, #8
 1cc:	and	w0, w0, #0xff00
 1d0:	orr	w1, w1, w0
 1d4:	ldr	w0, [sp, #12]
 1d8:	lsl	w0, w0, #8
 1dc:	and	w0, w0, #0xff0000
 1e0:	orr	w1, w1, w0
 1e4:	ldr	w0, [sp, #12]
 1e8:	lsl	w0, w0, #24
 1ec:	orr	w0, w1, w0
 1f0:	add	sp, sp, #0x10
 1f4:	ret

00000000000001f8 <ext2fs_swab64>:
 1f8:	stp	x29, x30, [sp, #-48]!
 1fc:	mov	x29, sp
 200:	str	x19, [sp, #16]
 204:	str	x0, [sp, #40]
 208:	ldr	x0, [sp, #40]
 20c:	lsr	x0, x0, #32
 210:	bl	1b4 <ext2fs_swab32>
 214:	mov	w19, w0
 218:	ldr	x0, [sp, #40]
 21c:	bl	1b4 <ext2fs_swab32>
 220:	mov	w0, w0
 224:	lsl	x0, x0, #32
 228:	orr	x0, x19, x0
 22c:	ldr	x19, [sp, #16]
 230:	ldp	x29, x30, [sp], #48
 234:	ret

0000000000000238 <ext2fs_mark_block_bitmap>:
 238:	stp	x29, x30, [sp, #-32]!
 23c:	mov	x29, sp
 240:	str	x0, [sp, #24]
 244:	str	w1, [sp, #20]
 248:	ldr	w1, [sp, #20]
 24c:	ldr	x0, [sp, #24]
 250:	bl	0 <ext2fs_mark_generic_bitmap>
 254:	ldp	x29, x30, [sp], #32
 258:	ret

000000000000025c <ext2fs_unmark_block_bitmap>:
 25c:	stp	x29, x30, [sp, #-32]!
 260:	mov	x29, sp
 264:	str	x0, [sp, #24]
 268:	str	w1, [sp, #20]
 26c:	ldr	w1, [sp, #20]
 270:	ldr	x0, [sp, #24]
 274:	bl	0 <ext2fs_unmark_generic_bitmap>
 278:	ldp	x29, x30, [sp], #32
 27c:	ret

0000000000000280 <ext2fs_test_block_bitmap>:
 280:	stp	x29, x30, [sp, #-32]!
 284:	mov	x29, sp
 288:	str	x0, [sp, #24]
 28c:	str	w1, [sp, #20]
 290:	ldr	w1, [sp, #20]
 294:	ldr	x0, [sp, #24]
 298:	bl	0 <ext2fs_test_generic_bitmap>
 29c:	ldp	x29, x30, [sp], #32
 2a0:	ret

00000000000002a4 <ext2fs_mark_inode_bitmap>:
 2a4:	stp	x29, x30, [sp, #-32]!
 2a8:	mov	x29, sp
 2ac:	str	x0, [sp, #24]
 2b0:	str	w1, [sp, #20]
 2b4:	ldr	w1, [sp, #20]
 2b8:	ldr	x0, [sp, #24]
 2bc:	bl	0 <ext2fs_mark_generic_bitmap>
 2c0:	ldp	x29, x30, [sp], #32
 2c4:	ret

00000000000002c8 <ext2fs_unmark_inode_bitmap>:
 2c8:	stp	x29, x30, [sp, #-32]!
 2cc:	mov	x29, sp
 2d0:	str	x0, [sp, #24]
 2d4:	str	w1, [sp, #20]
 2d8:	ldr	w1, [sp, #20]
 2dc:	ldr	x0, [sp, #24]
 2e0:	bl	0 <ext2fs_unmark_generic_bitmap>
 2e4:	ldp	x29, x30, [sp], #32
 2e8:	ret

00000000000002ec <ext2fs_test_inode_bitmap>:
 2ec:	stp	x29, x30, [sp, #-32]!
 2f0:	mov	x29, sp
 2f4:	str	x0, [sp, #24]
 2f8:	str	w1, [sp, #20]
 2fc:	ldr	w1, [sp, #20]
 300:	ldr	x0, [sp, #24]
 304:	bl	0 <ext2fs_test_generic_bitmap>
 308:	ldp	x29, x30, [sp], #32
 30c:	ret

0000000000000310 <ext2fs_fast_mark_block_bitmap>:
 310:	stp	x29, x30, [sp, #-32]!
 314:	mov	x29, sp
 318:	str	x0, [sp, #24]
 31c:	str	w1, [sp, #20]
 320:	ldr	w1, [sp, #20]
 324:	ldr	x0, [sp, #24]
 328:	bl	0 <ext2fs_mark_generic_bitmap>
 32c:	nop
 330:	ldp	x29, x30, [sp], #32
 334:	ret

0000000000000338 <ext2fs_fast_unmark_block_bitmap>:
 338:	stp	x29, x30, [sp, #-32]!
 33c:	mov	x29, sp
 340:	str	x0, [sp, #24]
 344:	str	w1, [sp, #20]
 348:	ldr	w1, [sp, #20]
 34c:	ldr	x0, [sp, #24]
 350:	bl	0 <ext2fs_unmark_generic_bitmap>
 354:	nop
 358:	ldp	x29, x30, [sp], #32
 35c:	ret

0000000000000360 <ext2fs_fast_test_block_bitmap>:
 360:	stp	x29, x30, [sp, #-32]!
 364:	mov	x29, sp
 368:	str	x0, [sp, #24]
 36c:	str	w1, [sp, #20]
 370:	ldr	w1, [sp, #20]
 374:	ldr	x0, [sp, #24]
 378:	bl	0 <ext2fs_test_generic_bitmap>
 37c:	ldp	x29, x30, [sp], #32
 380:	ret

0000000000000384 <ext2fs_fast_mark_inode_bitmap>:
 384:	stp	x29, x30, [sp, #-32]!
 388:	mov	x29, sp
 38c:	str	x0, [sp, #24]
 390:	str	w1, [sp, #20]
 394:	ldr	w1, [sp, #20]
 398:	ldr	x0, [sp, #24]
 39c:	bl	0 <ext2fs_mark_generic_bitmap>
 3a0:	nop
 3a4:	ldp	x29, x30, [sp], #32
 3a8:	ret

00000000000003ac <ext2fs_fast_unmark_inode_bitmap>:
 3ac:	stp	x29, x30, [sp, #-32]!
 3b0:	mov	x29, sp
 3b4:	str	x0, [sp, #24]
 3b8:	str	w1, [sp, #20]
 3bc:	ldr	w1, [sp, #20]
 3c0:	ldr	x0, [sp, #24]
 3c4:	bl	0 <ext2fs_unmark_generic_bitmap>
 3c8:	nop
 3cc:	ldp	x29, x30, [sp], #32
 3d0:	ret

00000000000003d4 <ext2fs_fast_test_inode_bitmap>:
 3d4:	stp	x29, x30, [sp, #-32]!
 3d8:	mov	x29, sp
 3dc:	str	x0, [sp, #24]
 3e0:	str	w1, [sp, #20]
 3e4:	ldr	w1, [sp, #20]
 3e8:	ldr	x0, [sp, #24]
 3ec:	bl	0 <ext2fs_test_generic_bitmap>
 3f0:	ldp	x29, x30, [sp], #32
 3f4:	ret

00000000000003f8 <ext2fs_get_block_bitmap_start>:
 3f8:	stp	x29, x30, [sp, #-32]!
 3fc:	mov	x29, sp
 400:	str	x0, [sp, #24]
 404:	ldr	x0, [sp, #24]
 408:	bl	0 <ext2fs_get_generic_bitmap_start>
 40c:	ldp	x29, x30, [sp], #32
 410:	ret

0000000000000414 <ext2fs_get_inode_bitmap_start>:
 414:	stp	x29, x30, [sp, #-32]!
 418:	mov	x29, sp
 41c:	str	x0, [sp, #24]
 420:	ldr	x0, [sp, #24]
 424:	bl	0 <ext2fs_get_generic_bitmap_start>
 428:	ldp	x29, x30, [sp], #32
 42c:	ret

0000000000000430 <ext2fs_get_block_bitmap_end>:
 430:	stp	x29, x30, [sp, #-32]!
 434:	mov	x29, sp
 438:	str	x0, [sp, #24]
 43c:	ldr	x0, [sp, #24]
 440:	bl	0 <ext2fs_get_generic_bitmap_end>
 444:	ldp	x29, x30, [sp], #32
 448:	ret

000000000000044c <ext2fs_get_inode_bitmap_end>:
 44c:	stp	x29, x30, [sp, #-32]!
 450:	mov	x29, sp
 454:	str	x0, [sp, #24]
 458:	ldr	x0, [sp, #24]
 45c:	bl	0 <ext2fs_get_generic_bitmap_end>
 460:	ldp	x29, x30, [sp], #32
 464:	ret

0000000000000468 <ext2fs_fast_test_block_bitmap_range>:
 468:	stp	x29, x30, [sp, #-32]!
 46c:	mov	x29, sp
 470:	str	x0, [sp, #24]
 474:	str	w1, [sp, #20]
 478:	str	w2, [sp, #16]
 47c:	ldr	w2, [sp, #16]
 480:	ldr	w1, [sp, #20]
 484:	ldr	x0, [sp, #24]
 488:	bl	0 <ext2fs_test_block_bitmap_range>
 48c:	ldp	x29, x30, [sp], #32
 490:	ret

0000000000000494 <ext2fs_fast_mark_block_bitmap_range>:
 494:	stp	x29, x30, [sp, #-32]!
 498:	mov	x29, sp
 49c:	str	x0, [sp, #24]
 4a0:	str	w1, [sp, #20]
 4a4:	str	w2, [sp, #16]
 4a8:	ldr	w2, [sp, #16]
 4ac:	ldr	w1, [sp, #20]
 4b0:	ldr	x0, [sp, #24]
 4b4:	bl	0 <ext2fs_mark_block_bitmap_range>
 4b8:	nop
 4bc:	ldp	x29, x30, [sp], #32
 4c0:	ret

00000000000004c4 <ext2fs_fast_unmark_block_bitmap_range>:
 4c4:	stp	x29, x30, [sp, #-32]!
 4c8:	mov	x29, sp
 4cc:	str	x0, [sp, #24]
 4d0:	str	w1, [sp, #20]
 4d4:	str	w2, [sp, #16]
 4d8:	ldr	w2, [sp, #16]
 4dc:	ldr	w1, [sp, #20]
 4e0:	ldr	x0, [sp, #24]
 4e4:	bl	0 <ext2fs_unmark_block_bitmap_range>
 4e8:	nop
 4ec:	ldp	x29, x30, [sp], #32
 4f0:	ret

00000000000004f4 <ext2fs_mark_block_bitmap2>:
 4f4:	stp	x29, x30, [sp, #-32]!
 4f8:	mov	x29, sp
 4fc:	str	x0, [sp, #24]
 500:	str	x1, [sp, #16]
 504:	ldr	x1, [sp, #16]
 508:	ldr	x0, [sp, #24]
 50c:	bl	0 <ext2fs_mark_generic_bmap>
 510:	ldp	x29, x30, [sp], #32
 514:	ret

0000000000000518 <ext2fs_unmark_block_bitmap2>:
 518:	stp	x29, x30, [sp, #-32]!
 51c:	mov	x29, sp
 520:	str	x0, [sp, #24]
 524:	str	x1, [sp, #16]
 528:	ldr	x1, [sp, #16]
 52c:	ldr	x0, [sp, #24]
 530:	bl	0 <ext2fs_unmark_generic_bmap>
 534:	ldp	x29, x30, [sp], #32
 538:	ret

000000000000053c <ext2fs_test_block_bitmap2>:
 53c:	stp	x29, x30, [sp, #-32]!
 540:	mov	x29, sp
 544:	str	x0, [sp, #24]
 548:	str	x1, [sp, #16]
 54c:	ldr	x1, [sp, #16]
 550:	ldr	x0, [sp, #24]
 554:	bl	0 <ext2fs_test_generic_bmap>
 558:	ldp	x29, x30, [sp], #32
 55c:	ret

0000000000000560 <ext2fs_mark_inode_bitmap2>:
 560:	stp	x29, x30, [sp, #-32]!
 564:	mov	x29, sp
 568:	str	x0, [sp, #24]
 56c:	str	w1, [sp, #20]
 570:	ldr	w0, [sp, #20]
 574:	mov	x1, x0
 578:	ldr	x0, [sp, #24]
 57c:	bl	0 <ext2fs_mark_generic_bmap>
 580:	ldp	x29, x30, [sp], #32
 584:	ret

0000000000000588 <ext2fs_unmark_inode_bitmap2>:
 588:	stp	x29, x30, [sp, #-32]!
 58c:	mov	x29, sp
 590:	str	x0, [sp, #24]
 594:	str	w1, [sp, #20]
 598:	ldr	w0, [sp, #20]
 59c:	mov	x1, x0
 5a0:	ldr	x0, [sp, #24]
 5a4:	bl	0 <ext2fs_unmark_generic_bmap>
 5a8:	ldp	x29, x30, [sp], #32
 5ac:	ret

00000000000005b0 <ext2fs_test_inode_bitmap2>:
 5b0:	stp	x29, x30, [sp, #-32]!
 5b4:	mov	x29, sp
 5b8:	str	x0, [sp, #24]
 5bc:	str	w1, [sp, #20]
 5c0:	ldr	w0, [sp, #20]
 5c4:	mov	x1, x0
 5c8:	ldr	x0, [sp, #24]
 5cc:	bl	0 <ext2fs_test_generic_bmap>
 5d0:	ldp	x29, x30, [sp], #32
 5d4:	ret

00000000000005d8 <ext2fs_fast_mark_block_bitmap2>:
 5d8:	stp	x29, x30, [sp, #-32]!
 5dc:	mov	x29, sp
 5e0:	str	x0, [sp, #24]
 5e4:	str	x1, [sp, #16]
 5e8:	ldr	x1, [sp, #16]
 5ec:	ldr	x0, [sp, #24]
 5f0:	bl	0 <ext2fs_mark_generic_bmap>
 5f4:	nop
 5f8:	ldp	x29, x30, [sp], #32
 5fc:	ret

0000000000000600 <ext2fs_fast_unmark_block_bitmap2>:
 600:	stp	x29, x30, [sp, #-32]!
 604:	mov	x29, sp
 608:	str	x0, [sp, #24]
 60c:	str	x1, [sp, #16]
 610:	ldr	x1, [sp, #16]
 614:	ldr	x0, [sp, #24]
 618:	bl	0 <ext2fs_unmark_generic_bmap>
 61c:	nop
 620:	ldp	x29, x30, [sp], #32
 624:	ret

0000000000000628 <ext2fs_fast_test_block_bitmap2>:
 628:	stp	x29, x30, [sp, #-32]!
 62c:	mov	x29, sp
 630:	str	x0, [sp, #24]
 634:	str	x1, [sp, #16]
 638:	ldr	x1, [sp, #16]
 63c:	ldr	x0, [sp, #24]
 640:	bl	0 <ext2fs_test_generic_bmap>
 644:	ldp	x29, x30, [sp], #32
 648:	ret

000000000000064c <ext2fs_fast_mark_inode_bitmap2>:
 64c:	stp	x29, x30, [sp, #-32]!
 650:	mov	x29, sp
 654:	str	x0, [sp, #24]
 658:	str	w1, [sp, #20]
 65c:	ldr	w0, [sp, #20]
 660:	mov	x1, x0
 664:	ldr	x0, [sp, #24]
 668:	bl	0 <ext2fs_mark_generic_bmap>
 66c:	nop
 670:	ldp	x29, x30, [sp], #32
 674:	ret

0000000000000678 <ext2fs_fast_unmark_inode_bitmap2>:
 678:	stp	x29, x30, [sp, #-32]!
 67c:	mov	x29, sp
 680:	str	x0, [sp, #24]
 684:	str	w1, [sp, #20]
 688:	ldr	w0, [sp, #20]
 68c:	mov	x1, x0
 690:	ldr	x0, [sp, #24]
 694:	bl	0 <ext2fs_unmark_generic_bmap>
 698:	nop
 69c:	ldp	x29, x30, [sp], #32
 6a0:	ret

00000000000006a4 <ext2fs_fast_test_inode_bitmap2>:
 6a4:	stp	x29, x30, [sp, #-32]!
 6a8:	mov	x29, sp
 6ac:	str	x0, [sp, #24]
 6b0:	str	w1, [sp, #20]
 6b4:	ldr	w0, [sp, #20]
 6b8:	mov	x1, x0
 6bc:	ldr	x0, [sp, #24]
 6c0:	bl	0 <ext2fs_test_generic_bmap>
 6c4:	ldp	x29, x30, [sp], #32
 6c8:	ret

00000000000006cc <ext2fs_find_first_zero_block_bitmap2>:
 6cc:	stp	x29, x30, [sp, #-64]!
 6d0:	mov	x29, sp
 6d4:	str	x0, [sp, #40]
 6d8:	str	x1, [sp, #32]
 6dc:	str	x2, [sp, #24]
 6e0:	str	x3, [sp, #16]
 6e4:	add	x0, sp, #0x30
 6e8:	mov	x3, x0
 6ec:	ldr	x2, [sp, #24]
 6f0:	ldr	x1, [sp, #32]
 6f4:	ldr	x0, [sp, #40]
 6f8:	bl	0 <ext2fs_find_first_zero_generic_bmap>
 6fc:	str	x0, [sp, #56]
 700:	ldr	x0, [sp, #56]
 704:	cmp	x0, #0x0
 708:	b.ne	718 <ext2fs_find_first_zero_block_bitmap2+0x4c>  // b.any
 70c:	ldr	x1, [sp, #48]
 710:	ldr	x0, [sp, #16]
 714:	str	x1, [x0]
 718:	ldr	x0, [sp, #56]
 71c:	ldp	x29, x30, [sp], #64
 720:	ret

0000000000000724 <ext2fs_find_first_zero_inode_bitmap2>:
 724:	stp	x29, x30, [sp, #-64]!
 728:	mov	x29, sp
 72c:	str	x0, [sp, #40]
 730:	str	w1, [sp, #36]
 734:	str	w2, [sp, #32]
 738:	str	x3, [sp, #24]
 73c:	ldr	w0, [sp, #36]
 740:	ldr	w1, [sp, #32]
 744:	add	x2, sp, #0x30
 748:	mov	x3, x2
 74c:	mov	x2, x1
 750:	mov	x1, x0
 754:	ldr	x0, [sp, #40]
 758:	bl	0 <ext2fs_find_first_zero_generic_bmap>
 75c:	str	x0, [sp, #56]
 760:	ldr	x0, [sp, #56]
 764:	cmp	x0, #0x0
 768:	b.ne	77c <ext2fs_find_first_zero_inode_bitmap2+0x58>  // b.any
 76c:	ldr	x0, [sp, #48]
 770:	mov	w1, w0
 774:	ldr	x0, [sp, #24]
 778:	str	w1, [x0]
 77c:	ldr	x0, [sp, #56]
 780:	ldp	x29, x30, [sp], #64
 784:	ret

0000000000000788 <ext2fs_find_first_set_block_bitmap2>:
 788:	stp	x29, x30, [sp, #-64]!
 78c:	mov	x29, sp
 790:	str	x0, [sp, #40]
 794:	str	x1, [sp, #32]
 798:	str	x2, [sp, #24]
 79c:	str	x3, [sp, #16]
 7a0:	add	x0, sp, #0x30
 7a4:	mov	x3, x0
 7a8:	ldr	x2, [sp, #24]
 7ac:	ldr	x1, [sp, #32]
 7b0:	ldr	x0, [sp, #40]
 7b4:	bl	0 <ext2fs_find_first_set_generic_bmap>
 7b8:	str	x0, [sp, #56]
 7bc:	ldr	x0, [sp, #56]
 7c0:	cmp	x0, #0x0
 7c4:	b.ne	7d4 <ext2fs_find_first_set_block_bitmap2+0x4c>  // b.any
 7c8:	ldr	x1, [sp, #48]
 7cc:	ldr	x0, [sp, #16]
 7d0:	str	x1, [x0]
 7d4:	ldr	x0, [sp, #56]
 7d8:	ldp	x29, x30, [sp], #64
 7dc:	ret

00000000000007e0 <ext2fs_find_first_set_inode_bitmap2>:
 7e0:	stp	x29, x30, [sp, #-64]!
 7e4:	mov	x29, sp
 7e8:	str	x0, [sp, #40]
 7ec:	str	w1, [sp, #36]
 7f0:	str	w2, [sp, #32]
 7f4:	str	x3, [sp, #24]
 7f8:	ldr	w0, [sp, #36]
 7fc:	ldr	w1, [sp, #32]
 800:	add	x2, sp, #0x30
 804:	mov	x3, x2
 808:	mov	x2, x1
 80c:	mov	x1, x0
 810:	ldr	x0, [sp, #40]
 814:	bl	0 <ext2fs_find_first_set_generic_bmap>
 818:	str	x0, [sp, #56]
 81c:	ldr	x0, [sp, #56]
 820:	cmp	x0, #0x0
 824:	b.ne	838 <ext2fs_find_first_set_inode_bitmap2+0x58>  // b.any
 828:	ldr	x0, [sp, #48]
 82c:	mov	w1, w0
 830:	ldr	x0, [sp, #24]
 834:	str	w1, [x0]
 838:	ldr	x0, [sp, #56]
 83c:	ldp	x29, x30, [sp], #64
 840:	ret

0000000000000844 <ext2fs_get_block_bitmap_start2>:
 844:	stp	x29, x30, [sp, #-32]!
 848:	mov	x29, sp
 84c:	str	x0, [sp, #24]
 850:	ldr	x0, [sp, #24]
 854:	bl	0 <ext2fs_get_generic_bmap_start>
 858:	ldp	x29, x30, [sp], #32
 85c:	ret

0000000000000860 <ext2fs_get_inode_bitmap_start2>:
 860:	stp	x29, x30, [sp, #-32]!
 864:	mov	x29, sp
 868:	str	x0, [sp, #24]
 86c:	ldr	x0, [sp, #24]
 870:	bl	0 <ext2fs_get_generic_bmap_start>
 874:	ldp	x29, x30, [sp], #32
 878:	ret

000000000000087c <ext2fs_get_block_bitmap_end2>:
 87c:	stp	x29, x30, [sp, #-32]!
 880:	mov	x29, sp
 884:	str	x0, [sp, #24]
 888:	ldr	x0, [sp, #24]
 88c:	bl	0 <ext2fs_get_generic_bmap_end>
 890:	ldp	x29, x30, [sp], #32
 894:	ret

0000000000000898 <ext2fs_get_inode_bitmap_end2>:
 898:	stp	x29, x30, [sp, #-32]!
 89c:	mov	x29, sp
 8a0:	str	x0, [sp, #24]
 8a4:	ldr	x0, [sp, #24]
 8a8:	bl	0 <ext2fs_get_generic_bmap_end>
 8ac:	ldp	x29, x30, [sp], #32
 8b0:	ret

00000000000008b4 <ext2fs_fast_test_block_bitmap_range2>:
 8b4:	stp	x29, x30, [sp, #-48]!
 8b8:	mov	x29, sp
 8bc:	str	x0, [sp, #40]
 8c0:	str	x1, [sp, #32]
 8c4:	str	w2, [sp, #28]
 8c8:	ldr	w2, [sp, #28]
 8cc:	ldr	x1, [sp, #32]
 8d0:	ldr	x0, [sp, #40]
 8d4:	bl	0 <ext2fs_test_block_bitmap_range2>
 8d8:	ldp	x29, x30, [sp], #48
 8dc:	ret

00000000000008e0 <ext2fs_fast_mark_block_bitmap_range2>:
 8e0:	stp	x29, x30, [sp, #-48]!
 8e4:	mov	x29, sp
 8e8:	str	x0, [sp, #40]
 8ec:	str	x1, [sp, #32]
 8f0:	str	w2, [sp, #28]
 8f4:	ldr	w2, [sp, #28]
 8f8:	ldr	x1, [sp, #32]
 8fc:	ldr	x0, [sp, #40]
 900:	bl	0 <ext2fs_mark_block_bitmap_range2>
 904:	nop
 908:	ldp	x29, x30, [sp], #48
 90c:	ret

0000000000000910 <ext2fs_fast_unmark_block_bitmap_range2>:
 910:	stp	x29, x30, [sp, #-48]!
 914:	mov	x29, sp
 918:	str	x0, [sp, #40]
 91c:	str	x1, [sp, #32]
 920:	str	w2, [sp, #28]
 924:	ldr	w2, [sp, #28]
 928:	ldr	x1, [sp, #32]
 92c:	ldr	x0, [sp, #40]
 930:	bl	0 <ext2fs_unmark_block_bitmap_range2>
 934:	nop
 938:	ldp	x29, x30, [sp], #48
 93c:	ret

0000000000000940 <ext2fs_get_mem>:
 940:	stp	x29, x30, [sp, #-48]!
 944:	mov	x29, sp
 948:	str	x0, [sp, #24]
 94c:	str	x1, [sp, #16]
 950:	ldr	x0, [sp, #24]
 954:	bl	0 <malloc>
 958:	str	x0, [sp, #40]
 95c:	ldr	x0, [sp, #40]
 960:	cmp	x0, #0x0
 964:	b.ne	974 <ext2fs_get_mem+0x34>  // b.any
 968:	mov	x0, #0xb746                	// #46918
 96c:	movk	x0, #0x7f2b, lsl #16
 970:	b	984 <ext2fs_get_mem+0x44>
 974:	ldr	x1, [sp, #40]
 978:	ldr	x0, [sp, #16]
 97c:	str	x1, [x0]
 980:	mov	x0, #0x0                   	// #0
 984:	ldp	x29, x30, [sp], #48
 988:	ret

000000000000098c <ext2fs_get_memzero>:
 98c:	stp	x29, x30, [sp, #-48]!
 990:	mov	x29, sp
 994:	str	x0, [sp, #24]
 998:	str	x1, [sp, #16]
 99c:	ldr	x0, [sp, #24]
 9a0:	bl	0 <malloc>
 9a4:	str	x0, [sp, #40]
 9a8:	ldr	x0, [sp, #40]
 9ac:	cmp	x0, #0x0
 9b0:	b.ne	9c0 <ext2fs_get_memzero+0x34>  // b.any
 9b4:	mov	x0, #0xb746                	// #46918
 9b8:	movk	x0, #0x7f2b, lsl #16
 9bc:	b	9e0 <ext2fs_get_memzero+0x54>
 9c0:	ldr	x0, [sp, #40]
 9c4:	ldr	x2, [sp, #24]
 9c8:	mov	w1, #0x0                   	// #0
 9cc:	bl	0 <memset>
 9d0:	ldr	x1, [sp, #40]
 9d4:	ldr	x0, [sp, #16]
 9d8:	str	x1, [x0]
 9dc:	mov	x0, #0x0                   	// #0
 9e0:	ldp	x29, x30, [sp], #48
 9e4:	ret

00000000000009e8 <ext2fs_get_array>:
 9e8:	stp	x29, x30, [sp, #-48]!
 9ec:	mov	x29, sp
 9f0:	str	x0, [sp, #40]
 9f4:	str	x1, [sp, #32]
 9f8:	str	x2, [sp, #24]
 9fc:	ldr	x0, [sp, #40]
 a00:	cmp	x0, #0x0
 a04:	b.eq	a3c <ext2fs_get_array+0x54>  // b.none
 a08:	mov	x2, #0x0                   	// #0
 a0c:	ldr	x1, [sp, #32]
 a10:	ldr	x0, [sp, #40]
 a14:	umulh	x0, x1, x0
 a18:	cmp	x0, #0x0
 a1c:	b.eq	a24 <ext2fs_get_array+0x3c>  // b.none
 a20:	mov	x2, #0x1                   	// #1
 a24:	mov	x0, x2
 a28:	cmp	x0, #0x0
 a2c:	b.eq	a3c <ext2fs_get_array+0x54>  // b.none
 a30:	mov	x0, #0xb746                	// #46918
 a34:	movk	x0, #0x7f2b, lsl #16
 a38:	b	a50 <ext2fs_get_array+0x68>
 a3c:	ldr	x1, [sp, #40]
 a40:	ldr	x0, [sp, #32]
 a44:	mul	x0, x1, x0
 a48:	ldr	x1, [sp, #24]
 a4c:	bl	940 <ext2fs_get_mem>
 a50:	ldp	x29, x30, [sp], #48
 a54:	ret

0000000000000a58 <ext2fs_get_arrayzero>:
 a58:	stp	x29, x30, [sp, #-64]!
 a5c:	mov	x29, sp
 a60:	str	x0, [sp, #40]
 a64:	str	x1, [sp, #32]
 a68:	str	x2, [sp, #24]
 a6c:	ldr	x0, [sp, #40]
 a70:	cmp	x0, #0x0
 a74:	b.eq	aac <ext2fs_get_arrayzero+0x54>  // b.none
 a78:	mov	x2, #0x0                   	// #0
 a7c:	ldr	x1, [sp, #32]
 a80:	ldr	x0, [sp, #40]
 a84:	umulh	x0, x1, x0
 a88:	cmp	x0, #0x0
 a8c:	b.eq	a94 <ext2fs_get_arrayzero+0x3c>  // b.none
 a90:	mov	x2, #0x1                   	// #1
 a94:	mov	x0, x2
 a98:	cmp	x0, #0x0
 a9c:	b.eq	aac <ext2fs_get_arrayzero+0x54>  // b.none
 aa0:	mov	x0, #0xb746                	// #46918
 aa4:	movk	x0, #0x7f2b, lsl #16
 aa8:	b	ae4 <ext2fs_get_arrayzero+0x8c>
 aac:	ldr	x1, [sp, #32]
 ab0:	ldr	x0, [sp, #40]
 ab4:	bl	0 <calloc>
 ab8:	str	x0, [sp, #56]
 abc:	ldr	x0, [sp, #56]
 ac0:	cmp	x0, #0x0
 ac4:	b.ne	ad4 <ext2fs_get_arrayzero+0x7c>  // b.any
 ac8:	mov	x0, #0xb746                	// #46918
 acc:	movk	x0, #0x7f2b, lsl #16
 ad0:	b	ae4 <ext2fs_get_arrayzero+0x8c>
 ad4:	ldr	x1, [sp, #56]
 ad8:	ldr	x0, [sp, #24]
 adc:	str	x1, [x0]
 ae0:	mov	x0, #0x0                   	// #0
 ae4:	ldp	x29, x30, [sp], #64
 ae8:	ret

0000000000000aec <ext2fs_free_mem>:
 aec:	stp	x29, x30, [sp, #-48]!
 af0:	mov	x29, sp
 af4:	str	x0, [sp, #24]
 af8:	ldr	x0, [sp, #24]
 afc:	ldr	x0, [x0]
 b00:	str	x0, [sp, #40]
 b04:	ldr	x0, [sp, #40]
 b08:	bl	0 <free>
 b0c:	str	xzr, [sp, #40]
 b10:	ldr	x1, [sp, #40]
 b14:	ldr	x0, [sp, #24]
 b18:	str	x1, [x0]
 b1c:	mov	x0, #0x0                   	// #0
 b20:	ldp	x29, x30, [sp], #48
 b24:	ret

0000000000000b28 <ext2fs_resize_mem>:
 b28:	stp	x29, x30, [sp, #-64]!
 b2c:	mov	x29, sp
 b30:	str	x0, [sp, #40]
 b34:	str	x1, [sp, #32]
 b38:	str	x2, [sp, #24]
 b3c:	ldr	x0, [sp, #24]
 b40:	ldr	x0, [x0]
 b44:	str	x0, [sp, #56]
 b48:	ldr	x0, [sp, #56]
 b4c:	ldr	x1, [sp, #32]
 b50:	bl	0 <realloc>
 b54:	str	x0, [sp, #56]
 b58:	ldr	x0, [sp, #56]
 b5c:	cmp	x0, #0x0
 b60:	b.ne	b70 <ext2fs_resize_mem+0x48>  // b.any
 b64:	mov	x0, #0xb746                	// #46918
 b68:	movk	x0, #0x7f2b, lsl #16
 b6c:	b	b80 <ext2fs_resize_mem+0x58>
 b70:	ldr	x1, [sp, #56]
 b74:	ldr	x0, [sp, #24]
 b78:	str	x1, [x0]
 b7c:	mov	x0, #0x0                   	// #0
 b80:	ldp	x29, x30, [sp], #64
 b84:	ret

0000000000000b88 <ext2fs_mark_super_dirty>:
 b88:	sub	sp, sp, #0x10
 b8c:	str	x0, [sp, #8]
 b90:	ldr	x0, [sp, #8]
 b94:	ldr	w0, [x0, #16]
 b98:	orr	w1, w0, #0x6
 b9c:	ldr	x0, [sp, #8]
 ba0:	str	w1, [x0, #16]
 ba4:	nop
 ba8:	add	sp, sp, #0x10
 bac:	ret

0000000000000bb0 <ext2fs_mark_changed>:
 bb0:	sub	sp, sp, #0x10
 bb4:	str	x0, [sp, #8]
 bb8:	ldr	x0, [sp, #8]
 bbc:	ldr	w0, [x0, #16]
 bc0:	orr	w1, w0, #0x2
 bc4:	ldr	x0, [sp, #8]
 bc8:	str	w1, [x0, #16]
 bcc:	nop
 bd0:	add	sp, sp, #0x10
 bd4:	ret

0000000000000bd8 <ext2fs_test_changed>:
 bd8:	sub	sp, sp, #0x10
 bdc:	str	x0, [sp, #8]
 be0:	ldr	x0, [sp, #8]
 be4:	ldr	w0, [x0, #16]
 be8:	and	w0, w0, #0x2
 bec:	add	sp, sp, #0x10
 bf0:	ret

0000000000000bf4 <ext2fs_mark_valid>:
 bf4:	sub	sp, sp, #0x10
 bf8:	str	x0, [sp, #8]
 bfc:	ldr	x0, [sp, #8]
 c00:	ldr	w0, [x0, #16]
 c04:	orr	w1, w0, #0x8
 c08:	ldr	x0, [sp, #8]
 c0c:	str	w1, [x0, #16]
 c10:	nop
 c14:	add	sp, sp, #0x10
 c18:	ret

0000000000000c1c <ext2fs_unmark_valid>:
 c1c:	sub	sp, sp, #0x10
 c20:	str	x0, [sp, #8]
 c24:	ldr	x0, [sp, #8]
 c28:	ldr	w0, [x0, #16]
 c2c:	and	w1, w0, #0xfffffff7
 c30:	ldr	x0, [sp, #8]
 c34:	str	w1, [x0, #16]
 c38:	nop
 c3c:	add	sp, sp, #0x10
 c40:	ret

0000000000000c44 <ext2fs_test_valid>:
 c44:	sub	sp, sp, #0x10
 c48:	str	x0, [sp, #8]
 c4c:	ldr	x0, [sp, #8]
 c50:	ldr	w0, [x0, #16]
 c54:	and	w0, w0, #0x8
 c58:	add	sp, sp, #0x10
 c5c:	ret

0000000000000c60 <ext2fs_mark_ib_dirty>:
 c60:	sub	sp, sp, #0x10
 c64:	str	x0, [sp, #8]
 c68:	ldr	x0, [sp, #8]
 c6c:	ldr	w1, [x0, #16]
 c70:	mov	w0, #0x12                  	// #18
 c74:	orr	w1, w1, w0
 c78:	ldr	x0, [sp, #8]
 c7c:	str	w1, [x0, #16]
 c80:	nop
 c84:	add	sp, sp, #0x10
 c88:	ret

0000000000000c8c <ext2fs_mark_bb_dirty>:
 c8c:	sub	sp, sp, #0x10
 c90:	str	x0, [sp, #8]
 c94:	ldr	x0, [sp, #8]
 c98:	ldr	w1, [x0, #16]
 c9c:	mov	w0, #0x22                  	// #34
 ca0:	orr	w1, w1, w0
 ca4:	ldr	x0, [sp, #8]
 ca8:	str	w1, [x0, #16]
 cac:	nop
 cb0:	add	sp, sp, #0x10
 cb4:	ret

0000000000000cb8 <ext2fs_test_ib_dirty>:
 cb8:	sub	sp, sp, #0x10
 cbc:	str	x0, [sp, #8]
 cc0:	ldr	x0, [sp, #8]
 cc4:	ldr	w0, [x0, #16]
 cc8:	and	w0, w0, #0x10
 ccc:	add	sp, sp, #0x10
 cd0:	ret

0000000000000cd4 <ext2fs_test_bb_dirty>:
 cd4:	sub	sp, sp, #0x10
 cd8:	str	x0, [sp, #8]
 cdc:	ldr	x0, [sp, #8]
 ce0:	ldr	w0, [x0, #16]
 ce4:	and	w0, w0, #0x20
 ce8:	add	sp, sp, #0x10
 cec:	ret

0000000000000cf0 <ext2fs_group_of_blk>:
 cf0:	stp	x29, x30, [sp, #-32]!
 cf4:	mov	x29, sp
 cf8:	str	x0, [sp, #24]
 cfc:	str	w1, [sp, #20]
 d00:	ldr	w0, [sp, #20]
 d04:	mov	x1, x0
 d08:	ldr	x0, [sp, #24]
 d0c:	bl	0 <ext2fs_group_of_blk2>
 d10:	ldp	x29, x30, [sp], #32
 d14:	ret

0000000000000d18 <ext2fs_group_of_ino>:
 d18:	sub	sp, sp, #0x10
 d1c:	str	x0, [sp, #8]
 d20:	str	w1, [sp, #4]
 d24:	ldr	w0, [sp, #4]
 d28:	sub	w1, w0, #0x1
 d2c:	ldr	x0, [sp, #8]
 d30:	ldr	x0, [x0, #32]
 d34:	ldr	w0, [x0, #40]
 d38:	udiv	w0, w1, w0
 d3c:	add	sp, sp, #0x10
 d40:	ret

0000000000000d44 <ext2fs_group_first_block>:
 d44:	stp	x29, x30, [sp, #-32]!
 d48:	mov	x29, sp
 d4c:	str	x0, [sp, #24]
 d50:	str	w1, [sp, #20]
 d54:	ldr	w1, [sp, #20]
 d58:	ldr	x0, [sp, #24]
 d5c:	bl	0 <ext2fs_group_first_block2>
 d60:	ldp	x29, x30, [sp], #32
 d64:	ret

0000000000000d68 <ext2fs_group_last_block>:
 d68:	stp	x29, x30, [sp, #-32]!
 d6c:	mov	x29, sp
 d70:	str	x0, [sp, #24]
 d74:	str	w1, [sp, #20]
 d78:	ldr	w1, [sp, #20]
 d7c:	ldr	x0, [sp, #24]
 d80:	bl	0 <ext2fs_group_last_block2>
 d84:	ldp	x29, x30, [sp], #32
 d88:	ret

0000000000000d8c <ext2fs_inode_data_blocks>:
 d8c:	stp	x29, x30, [sp, #-32]!
 d90:	mov	x29, sp
 d94:	str	x0, [sp, #24]
 d98:	str	x1, [sp, #16]
 d9c:	ldr	x1, [sp, #16]
 da0:	ldr	x0, [sp, #24]
 da4:	bl	0 <ext2fs_inode_data_blocks2>
 da8:	ldp	x29, x30, [sp], #32
 dac:	ret

0000000000000db0 <ext2fs_htree_intnode_maxrecs>:
 db0:	sub	sp, sp, #0x10
 db4:	str	x0, [sp, #8]
 db8:	str	w1, [sp, #4]
 dbc:	ldrsw	x0, [sp, #4]
 dc0:	mov	w1, w0
 dc4:	ldr	x0, [sp, #8]
 dc8:	ldr	w0, [x0, #40]
 dcc:	sub	w0, w0, #0x8
 dd0:	lsr	w0, w0, #3
 dd4:	mul	w0, w1, w0
 dd8:	add	sp, sp, #0x10
 ddc:	ret

0000000000000de0 <ext2fs_div_ceil>:
 de0:	sub	sp, sp, #0x10
 de4:	str	w0, [sp, #12]
 de8:	str	w1, [sp, #8]
 dec:	ldr	w0, [sp, #12]
 df0:	cmp	w0, #0x0
 df4:	b.ne	e00 <ext2fs_div_ceil+0x20>  // b.any
 df8:	mov	w0, #0x0                   	// #0
 dfc:	b	e14 <ext2fs_div_ceil+0x34>
 e00:	ldr	w0, [sp, #12]
 e04:	sub	w1, w0, #0x1
 e08:	ldr	w0, [sp, #8]
 e0c:	udiv	w0, w1, w0
 e10:	add	w0, w0, #0x1
 e14:	add	sp, sp, #0x10
 e18:	ret

0000000000000e1c <ext2fs_div64_ceil>:
 e1c:	sub	sp, sp, #0x10
 e20:	str	x0, [sp, #8]
 e24:	str	x1, [sp]
 e28:	ldr	x0, [sp, #8]
 e2c:	cmp	x0, #0x0
 e30:	b.ne	e3c <ext2fs_div64_ceil+0x20>  // b.any
 e34:	mov	x0, #0x0                   	// #0
 e38:	b	e50 <ext2fs_div64_ceil+0x34>
 e3c:	ldr	x0, [sp, #8]
 e40:	sub	x1, x0, #0x1
 e44:	ldr	x0, [sp]
 e48:	udiv	x0, x1, x0
 e4c:	add	x0, x0, #0x1
 e50:	add	sp, sp, #0x10
 e54:	ret

0000000000000e58 <ext2fs_dirent_name_len>:
 e58:	sub	sp, sp, #0x10
 e5c:	str	x0, [sp, #8]
 e60:	ldr	x0, [sp, #8]
 e64:	ldrh	w0, [x0, #6]
 e68:	and	w0, w0, #0xff
 e6c:	add	sp, sp, #0x10
 e70:	ret

0000000000000e74 <ext2fs_dirent_set_name_len>:
 e74:	sub	sp, sp, #0x10
 e78:	str	x0, [sp, #8]
 e7c:	str	w1, [sp, #4]
 e80:	ldr	x0, [sp, #8]
 e84:	ldrh	w0, [x0, #6]
 e88:	sxth	w0, w0
 e8c:	and	w0, w0, #0xffffff00
 e90:	sxth	w1, w0
 e94:	ldr	w0, [sp, #4]
 e98:	sxth	w0, w0
 e9c:	and	w0, w0, #0xff
 ea0:	sxth	w0, w0
 ea4:	orr	w0, w1, w0
 ea8:	sxth	w0, w0
 eac:	and	w1, w0, #0xffff
 eb0:	ldr	x0, [sp, #8]
 eb4:	strh	w1, [x0, #6]
 eb8:	nop
 ebc:	add	sp, sp, #0x10
 ec0:	ret

0000000000000ec4 <ext2fs_dirent_file_type>:
 ec4:	sub	sp, sp, #0x10
 ec8:	str	x0, [sp, #8]
 ecc:	ldr	x0, [sp, #8]
 ed0:	ldrh	w0, [x0, #6]
 ed4:	lsr	w0, w0, #8
 ed8:	and	w0, w0, #0xffff
 edc:	add	sp, sp, #0x10
 ee0:	ret

0000000000000ee4 <ext2fs_dirent_set_file_type>:
 ee4:	sub	sp, sp, #0x10
 ee8:	str	x0, [sp, #8]
 eec:	str	w1, [sp, #4]
 ef0:	ldr	x0, [sp, #8]
 ef4:	ldrh	w0, [x0, #6]
 ef8:	sxth	w0, w0
 efc:	and	w0, w0, #0xff
 f00:	sxth	w1, w0
 f04:	ldr	w0, [sp, #4]
 f08:	lsl	w0, w0, #8
 f0c:	sxth	w0, w0
 f10:	orr	w0, w1, w0
 f14:	sxth	w0, w0
 f18:	and	w1, w0, #0xffff
 f1c:	ldr	x0, [sp, #8]
 f20:	strh	w1, [x0, #6]
 f24:	nop
 f28:	add	sp, sp, #0x10
 f2c:	ret

0000000000000f30 <ext2fs_inode>:
 f30:	sub	sp, sp, #0x10
 f34:	str	x0, [sp, #8]
 f38:	ldr	x0, [sp, #8]
 f3c:	add	sp, sp, #0x10
 f40:	ret

0000000000000f44 <ext2fs_const_inode>:
 f44:	sub	sp, sp, #0x10
 f48:	str	x0, [sp, #8]
 f4c:	ldr	x0, [sp, #8]
 f50:	add	sp, sp, #0x10
 f54:	ret

0000000000000f58 <ext2fs_get_memalign>:
 f58:	stp	x29, x30, [sp, #-64]!
 f5c:	mov	x29, sp
 f60:	str	x0, [sp, #40]
 f64:	str	x1, [sp, #32]
 f68:	str	x2, [sp, #24]
 f6c:	str	xzr, [sp, #56]
 f70:	ldr	x0, [sp, #24]
 f74:	str	x0, [sp, #48]
 f78:	ldr	x0, [sp, #32]
 f7c:	cmp	x0, #0x7
 f80:	b.hi	f8c <ext2fs_get_memalign+0x34>  // b.pmore
 f84:	mov	x0, #0x8                   	// #8
 f88:	str	x0, [sp, #32]
 f8c:	ldr	x2, [sp, #40]
 f90:	ldr	x1, [sp, #32]
 f94:	ldr	x0, [sp, #48]
 f98:	bl	0 <posix_memalign>
 f9c:	sxtw	x0, w0
 fa0:	str	x0, [sp, #56]
 fa4:	ldr	x0, [sp, #56]
 fa8:	cmp	x0, #0xc
 fac:	b.ne	fbc <ext2fs_get_memalign+0x64>  // b.any
 fb0:	mov	x0, #0xb746                	// #46918
 fb4:	movk	x0, #0x7f2b, lsl #16
 fb8:	b	fc0 <ext2fs_get_memalign+0x68>
 fbc:	ldr	x0, [sp, #56]
 fc0:	ldp	x29, x30, [sp], #64
 fc4:	ret

inline_data.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_metadata_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x400
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_filetype>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #96]
      38:	and	w0, w0, #0x2
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_extents>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #96]
      60:	and	w0, w0, #0x40
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_inline_data_ea_set>:
      78:	stp	x29, x30, [sp, #-48]!
      7c:	mov	x29, sp
      80:	str	x0, [sp, #24]
      84:	ldr	x0, [sp, #24]
      88:	ldr	x3, [x0]
      8c:	ldr	x0, [sp, #24]
      90:	ldr	w0, [x0, #8]
      94:	add	x1, sp, #0x20
      98:	mov	x2, x1
      9c:	mov	w1, w0
      a0:	mov	x0, x3
      a4:	bl	0 <ext2fs_xattrs_open>
      a8:	str	x0, [sp, #40]
      ac:	ldr	x0, [sp, #40]
      b0:	cmp	x0, #0x0
      b4:	b.eq	c0 <ext2fs_inline_data_ea_set+0x48>  // b.none
      b8:	ldr	x0, [sp, #40]
      bc:	b	11c <ext2fs_inline_data_ea_set+0xa4>
      c0:	ldr	x0, [sp, #32]
      c4:	bl	0 <ext2fs_xattrs_read>
      c8:	str	x0, [sp, #40]
      cc:	ldr	x0, [sp, #40]
      d0:	cmp	x0, #0x0
      d4:	b.ne	10c <ext2fs_inline_data_ea_set+0x94>  // b.any
      d8:	ldr	x4, [sp, #32]
      dc:	ldr	x0, [sp, #24]
      e0:	ldr	x1, [x0, #24]
      e4:	ldr	x0, [sp, #24]
      e8:	ldr	x0, [x0, #16]
      ec:	mov	x3, x0
      f0:	mov	x2, x1
      f4:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
      f8:	add	x1, x0, #0x0
      fc:	mov	x0, x4
     100:	bl	0 <ext2fs_xattr_set>
     104:	str	x0, [sp, #40]
     108:	b	110 <ext2fs_inline_data_ea_set+0x98>
     10c:	nop
     110:	add	x0, sp, #0x20
     114:	bl	0 <ext2fs_xattrs_close>
     118:	ldr	x0, [sp, #40]
     11c:	ldp	x29, x30, [sp], #48
     120:	ret

0000000000000124 <ext2fs_inline_data_ea_get>:
     124:	stp	x29, x30, [sp, #-48]!
     128:	mov	x29, sp
     12c:	str	x0, [sp, #24]
     130:	ldr	x0, [sp, #24]
     134:	str	xzr, [x0, #16]
     138:	ldr	x0, [sp, #24]
     13c:	str	xzr, [x0, #24]
     140:	ldr	x0, [sp, #24]
     144:	ldr	x3, [x0]
     148:	ldr	x0, [sp, #24]
     14c:	ldr	w0, [x0, #8]
     150:	add	x1, sp, #0x20
     154:	mov	x2, x1
     158:	mov	w1, w0
     15c:	mov	x0, x3
     160:	bl	0 <ext2fs_xattrs_open>
     164:	str	x0, [sp, #40]
     168:	ldr	x0, [sp, #40]
     16c:	cmp	x0, #0x0
     170:	b.eq	17c <ext2fs_inline_data_ea_get+0x58>  // b.none
     174:	ldr	x0, [sp, #40]
     178:	b	20c <ext2fs_inline_data_ea_get+0xe8>
     17c:	ldr	x0, [sp, #32]
     180:	bl	0 <ext2fs_xattrs_read>
     184:	str	x0, [sp, #40]
     188:	ldr	x0, [sp, #40]
     18c:	cmp	x0, #0x0
     190:	b.ne	1fc <ext2fs_inline_data_ea_get+0xd8>  // b.any
     194:	ldr	x4, [sp, #32]
     198:	ldr	x0, [sp, #24]
     19c:	add	x1, x0, #0x18
     1a0:	ldr	x0, [sp, #24]
     1a4:	add	x0, x0, #0x10
     1a8:	mov	x3, x0
     1ac:	mov	x2, x1
     1b0:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
     1b4:	add	x1, x0, #0x0
     1b8:	mov	x0, x4
     1bc:	bl	0 <ext2fs_xattr_get>
     1c0:	str	x0, [sp, #40]
     1c4:	ldr	x1, [sp, #40]
     1c8:	mov	x0, #0xb7a2                	// #47010
     1cc:	movk	x0, #0x7f2b, lsl #16
     1d0:	cmp	x1, x0
     1d4:	b.ne	1f0 <ext2fs_inline_data_ea_get+0xcc>  // b.any
     1d8:	ldr	x0, [sp, #24]
     1dc:	str	xzr, [x0, #16]
     1e0:	ldr	x0, [sp, #24]
     1e4:	str	xzr, [x0, #24]
     1e8:	str	xzr, [sp, #40]
     1ec:	b	200 <ext2fs_inline_data_ea_get+0xdc>
     1f0:	ldr	x0, [sp, #40]
     1f4:	cmp	x0, #0x0
     1f8:	b	200 <ext2fs_inline_data_ea_get+0xdc>
     1fc:	nop
     200:	add	x0, sp, #0x20
     204:	bl	0 <ext2fs_xattrs_close>
     208:	ldr	x0, [sp, #40]
     20c:	ldp	x29, x30, [sp], #48
     210:	ret

0000000000000214 <ext2fs_inline_data_init>:
     214:	stp	x29, x30, [sp, #-80]!
     218:	mov	x29, sp
     21c:	str	x0, [sp, #24]
     220:	str	w1, [sp, #20]
     224:	strb	wzr, [sp, #40]
     228:	ldr	x0, [sp, #24]
     22c:	str	x0, [sp, #48]
     230:	ldr	w0, [sp, #20]
     234:	str	w0, [sp, #56]
     238:	str	xzr, [sp, #64]
     23c:	add	x0, sp, #0x28
     240:	str	x0, [sp, #72]
     244:	add	x0, sp, #0x30
     248:	bl	78 <ext2fs_inline_data_ea_set>
     24c:	ldp	x29, x30, [sp], #80
     250:	ret

0000000000000254 <ext2fs_inline_data_size>:
     254:	stp	x29, x30, [sp, #-224]!
     258:	mov	x29, sp
     25c:	str	x0, [sp, #40]
     260:	str	w1, [sp, #36]
     264:	str	x2, [sp, #24]
     268:	add	x0, sp, #0x58
     26c:	mov	x2, x0
     270:	ldr	w1, [sp, #36]
     274:	ldr	x0, [sp, #40]
     278:	bl	0 <ext2fs_read_inode>
     27c:	str	x0, [sp, #216]
     280:	ldr	x0, [sp, #216]
     284:	cmp	x0, #0x0
     288:	b.eq	294 <ext2fs_inline_data_size+0x40>  // b.none
     28c:	ldr	x0, [sp, #216]
     290:	b	2fc <ext2fs_inline_data_size+0xa8>
     294:	ldr	w0, [sp, #120]
     298:	and	w0, w0, #0x10000000
     29c:	cmp	w0, #0x0
     2a0:	b.ne	2b0 <ext2fs_inline_data_size+0x5c>  // b.any
     2a4:	mov	x0, #0xb7a5                	// #47013
     2a8:	movk	x0, #0x7f2b, lsl #16
     2ac:	b	2fc <ext2fs_inline_data_size+0xa8>
     2b0:	ldr	x0, [sp, #40]
     2b4:	str	x0, [sp, #56]
     2b8:	ldr	w0, [sp, #36]
     2bc:	str	w0, [sp, #64]
     2c0:	add	x0, sp, #0x38
     2c4:	bl	124 <ext2fs_inline_data_ea_get>
     2c8:	str	x0, [sp, #216]
     2cc:	ldr	x0, [sp, #216]
     2d0:	cmp	x0, #0x0
     2d4:	b.eq	2e0 <ext2fs_inline_data_size+0x8c>  // b.none
     2d8:	ldr	x0, [sp, #216]
     2dc:	b	2fc <ext2fs_inline_data_size+0xa8>
     2e0:	ldr	x0, [sp, #72]
     2e4:	add	x1, x0, #0x3c
     2e8:	ldr	x0, [sp, #24]
     2ec:	str	x1, [x0]
     2f0:	add	x0, sp, #0x38
     2f4:	add	x0, x0, #0x18
     2f8:	bl	0 <ext2fs_free_mem>
     2fc:	ldp	x29, x30, [sp], #224
     300:	ret

0000000000000304 <ext2fs_inline_data_dir_iterate>:
     304:	sub	sp, sp, #0x210
     308:	stp	x29, x30, [sp]
     30c:	mov	x29, sp
     310:	str	x0, [sp, #40]
     314:	str	w1, [sp, #36]
     318:	str	x2, [sp, #24]
     31c:	mov	w0, #0x2                   	// #2
     320:	str	w0, [sp, #524]
     324:	str	xzr, [sp, #512]
     328:	ldr	x0, [sp, #24]
     32c:	str	x0, [sp, #504]
     330:	ldr	x0, [sp, #504]
     334:	ldr	x0, [x0, #8]
     338:	str	x0, [sp, #496]
     33c:	ldr	x0, [sp, #504]
     340:	ldr	w0, [x0, #16]
     344:	str	w0, [sp, #492]
     348:	ldr	x0, [sp, #504]
     34c:	ldr	w0, [x0, #4]
     350:	str	w0, [sp, #488]
     354:	ldr	x0, [sp, #504]
     358:	ldr	w0, [x0, #4]
     35c:	orr	w1, w0, #0x8
     360:	ldr	x0, [sp, #504]
     364:	str	w1, [x0, #4]
     368:	add	x0, sp, #0x160
     36c:	mov	x2, x0
     370:	ldr	w1, [sp, #36]
     374:	ldr	x0, [sp, #40]
     378:	bl	0 <ext2fs_read_inode>
     37c:	mov	x1, x0
     380:	ldr	x0, [sp, #504]
     384:	str	x1, [x0, #40]
     388:	ldr	x0, [sp, #504]
     38c:	ldr	x0, [x0, #40]
     390:	cmp	x0, #0x0
     394:	b.ne	738 <ext2fs_inline_data_dir_iterate+0x434>  // b.any
     398:	ldr	w0, [sp, #384]
     39c:	and	w0, w0, #0x10000000
     3a0:	cmp	w0, #0x0
     3a4:	b.ne	3bc <ext2fs_inline_data_dir_iterate+0xb8>  // b.any
     3a8:	ldr	x0, [sp, #504]
     3ac:	mov	x1, #0xb7a5                	// #47013
     3b0:	movk	x1, #0x7f2b, lsl #16
     3b4:	str	x1, [x0, #40]
     3b8:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     3bc:	ldrh	w0, [sp, #352]
     3c0:	and	w0, w0, #0xf000
     3c4:	cmp	w0, #0x4, lsl #12
     3c8:	b.eq	3e0 <ext2fs_inline_data_dir_iterate+0xdc>  // b.none
     3cc:	ldr	x0, [sp, #504]
     3d0:	mov	x1, #0xb74a                	// #46922
     3d4:	movk	x1, #0x7f2b, lsl #16
     3d8:	str	x1, [x0, #40]
     3dc:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     3e0:	str	wzr, [sp, #524]
     3e4:	ldr	w0, [sp, #36]
     3e8:	str	w0, [sp, #88]
     3ec:	mov	w0, #0x1                   	// #1
     3f0:	strh	w0, [sp, #94]
     3f4:	add	x0, sp, #0x58
     3f8:	mov	x2, x0
     3fc:	mov	w1, #0xc                   	// #12
     400:	ldr	x0, [sp, #40]
     404:	bl	0 <ext2fs_set_rec_len>
     408:	mov	w0, #0x2e                  	// #46
     40c:	strb	w0, [sp, #96]
     410:	strb	wzr, [sp, #97]
     414:	ldr	x0, [sp, #504]
     418:	add	x1, sp, #0x58
     41c:	str	x1, [x0, #8]
     420:	ldr	x0, [sp, #504]
     424:	add	x1, x0, #0x10
     428:	add	x0, sp, #0x58
     42c:	mov	x2, x1
     430:	mov	x1, x0
     434:	ldr	x0, [sp, #40]
     438:	bl	0 <ext2fs_get_rec_len>
     43c:	ldr	x0, [sp, #512]
     440:	add	x1, x0, #0x1
     444:	str	x1, [sp, #512]
     448:	ldr	x5, [sp, #24]
     44c:	mov	w4, #0x0                   	// #0
     450:	mov	x3, #0x0                   	// #0
     454:	mov	x2, x0
     458:	mov	x1, #0x0                   	// #0
     45c:	ldr	x0, [sp, #40]
     460:	bl	0 <ext2fs_process_dir_block>
     464:	mov	w1, w0
     468:	ldr	w0, [sp, #524]
     46c:	orr	w0, w0, w1
     470:	str	w0, [sp, #524]
     474:	ldr	w0, [sp, #524]
     478:	and	w0, w0, #0x2
     47c:	cmp	w0, #0x0
     480:	b.ne	740 <ext2fs_inline_data_dir_iterate+0x43c>  // b.any
     484:	ldr	w0, [sp, #392]
     488:	str	w0, [sp, #88]
     48c:	mov	w0, #0x2                   	// #2
     490:	strh	w0, [sp, #94]
     494:	add	x0, sp, #0x58
     498:	mov	x2, x0
     49c:	mov	w1, #0xc                   	// #12
     4a0:	ldr	x0, [sp, #40]
     4a4:	bl	0 <ext2fs_set_rec_len>
     4a8:	mov	w0, #0x2e                  	// #46
     4ac:	strb	w0, [sp, #96]
     4b0:	mov	w0, #0x2e                  	// #46
     4b4:	strb	w0, [sp, #97]
     4b8:	strb	wzr, [sp, #98]
     4bc:	ldr	x0, [sp, #504]
     4c0:	add	x1, sp, #0x58
     4c4:	str	x1, [x0, #8]
     4c8:	ldr	x0, [sp, #504]
     4cc:	add	x1, x0, #0x10
     4d0:	add	x0, sp, #0x58
     4d4:	mov	x2, x1
     4d8:	mov	x1, x0
     4dc:	ldr	x0, [sp, #40]
     4e0:	bl	0 <ext2fs_get_rec_len>
     4e4:	ldr	x0, [sp, #512]
     4e8:	add	x1, x0, #0x1
     4ec:	str	x1, [sp, #512]
     4f0:	ldr	x5, [sp, #24]
     4f4:	mov	w4, #0x0                   	// #0
     4f8:	mov	x3, #0x0                   	// #0
     4fc:	mov	x2, x0
     500:	mov	x1, #0x0                   	// #0
     504:	ldr	x0, [sp, #40]
     508:	bl	0 <ext2fs_process_dir_block>
     50c:	mov	w1, w0
     510:	ldr	w0, [sp, #524]
     514:	orr	w0, w0, w1
     518:	str	w0, [sp, #524]
     51c:	ldr	w0, [sp, #524]
     520:	and	w0, w0, #0x8
     524:	cmp	w0, #0x0
     528:	b.eq	564 <ext2fs_inline_data_dir_iterate+0x260>  // b.none
     52c:	ldr	w0, [sp, #88]
     530:	str	w0, [sp, #392]
     534:	add	x0, sp, #0x160
     538:	mov	x2, x0
     53c:	ldr	w1, [sp, #36]
     540:	ldr	x0, [sp, #40]
     544:	bl	0 <ext2fs_write_inode>
     548:	str	x0, [sp, #480]
     54c:	ldr	x0, [sp, #480]
     550:	cmp	x0, #0x0
     554:	b.ne	748 <ext2fs_inline_data_dir_iterate+0x444>  // b.any
     558:	ldr	w0, [sp, #524]
     55c:	and	w0, w0, #0xfffffff7
     560:	str	w0, [sp, #524]
     564:	ldr	w0, [sp, #524]
     568:	and	w0, w0, #0x2
     56c:	cmp	w0, #0x0
     570:	b.ne	750 <ext2fs_inline_data_dir_iterate+0x44c>  // b.any
     574:	add	x0, sp, #0x160
     578:	add	x0, x0, #0x28
     57c:	add	x0, x0, #0x4
     580:	ldr	x1, [sp, #504]
     584:	str	x0, [x1, #8]
     588:	ldr	x0, [sp, #504]
     58c:	mov	w1, #0x38                  	// #56
     590:	str	w1, [x0, #16]
     594:	ldr	x0, [sp, #512]
     598:	add	x1, x0, #0x1
     59c:	str	x1, [sp, #512]
     5a0:	ldr	x5, [sp, #24]
     5a4:	mov	w4, #0x0                   	// #0
     5a8:	mov	x3, #0x0                   	// #0
     5ac:	mov	x2, x0
     5b0:	mov	x1, #0x0                   	// #0
     5b4:	ldr	x0, [sp, #40]
     5b8:	bl	0 <ext2fs_process_dir_block>
     5bc:	mov	w1, w0
     5c0:	ldr	w0, [sp, #524]
     5c4:	orr	w0, w0, w1
     5c8:	str	w0, [sp, #524]
     5cc:	ldr	w0, [sp, #524]
     5d0:	and	w0, w0, #0x8
     5d4:	cmp	w0, #0x0
     5d8:	b.eq	624 <ext2fs_inline_data_dir_iterate+0x320>  // b.none
     5dc:	add	x0, sp, #0x160
     5e0:	mov	x2, x0
     5e4:	ldr	w1, [sp, #36]
     5e8:	ldr	x0, [sp, #40]
     5ec:	bl	0 <ext2fs_write_inode>
     5f0:	mov	x1, x0
     5f4:	ldr	x0, [sp, #504]
     5f8:	str	x1, [x0, #40]
     5fc:	ldr	x0, [sp, #504]
     600:	ldr	x0, [x0, #40]
     604:	cmp	x0, #0x0
     608:	b.eq	618 <ext2fs_inline_data_dir_iterate+0x314>  // b.none
     60c:	ldr	w0, [sp, #524]
     610:	orr	w0, w0, #0x2
     614:	str	w0, [sp, #524]
     618:	ldr	w0, [sp, #524]
     61c:	and	w0, w0, #0xfffffff7
     620:	str	w0, [sp, #524]
     624:	ldr	w0, [sp, #524]
     628:	and	w0, w0, #0x2
     62c:	cmp	w0, #0x0
     630:	b.ne	758 <ext2fs_inline_data_dir_iterate+0x454>  // b.any
     634:	ldr	x0, [sp, #40]
     638:	str	x0, [sp, #56]
     63c:	ldr	w0, [sp, #36]
     640:	str	w0, [sp, #64]
     644:	add	x0, sp, #0x38
     648:	bl	124 <ext2fs_inline_data_ea_get>
     64c:	mov	x1, x0
     650:	ldr	x0, [sp, #504]
     654:	str	x1, [x0, #40]
     658:	ldr	x0, [sp, #504]
     65c:	ldr	x0, [x0, #40]
     660:	cmp	x0, #0x0
     664:	b.eq	678 <ext2fs_inline_data_dir_iterate+0x374>  // b.none
     668:	ldr	w0, [sp, #524]
     66c:	orr	w0, w0, #0x2
     670:	str	w0, [sp, #524]
     674:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     678:	ldr	x0, [sp, #72]
     67c:	cmp	x0, #0x0
     680:	b.eq	71c <ext2fs_inline_data_dir_iterate+0x418>  // b.none
     684:	ldr	x1, [sp, #80]
     688:	ldr	x0, [sp, #504]
     68c:	str	x1, [x0, #8]
     690:	ldr	x0, [sp, #72]
     694:	mov	w1, w0
     698:	ldr	x0, [sp, #504]
     69c:	str	w1, [x0, #16]
     6a0:	ldr	x0, [sp, #512]
     6a4:	add	x1, x0, #0x1
     6a8:	str	x1, [sp, #512]
     6ac:	ldr	x5, [sp, #24]
     6b0:	mov	w4, #0x0                   	// #0
     6b4:	mov	x3, #0x0                   	// #0
     6b8:	mov	x2, x0
     6bc:	mov	x1, #0x0                   	// #0
     6c0:	ldr	x0, [sp, #40]
     6c4:	bl	0 <ext2fs_process_dir_block>
     6c8:	mov	w1, w0
     6cc:	ldr	w0, [sp, #524]
     6d0:	orr	w0, w0, w1
     6d4:	str	w0, [sp, #524]
     6d8:	ldr	w0, [sp, #524]
     6dc:	and	w0, w0, #0x8
     6e0:	cmp	w0, #0x0
     6e4:	b.eq	724 <ext2fs_inline_data_dir_iterate+0x420>  // b.none
     6e8:	add	x0, sp, #0x38
     6ec:	bl	78 <ext2fs_inline_data_ea_set>
     6f0:	mov	x1, x0
     6f4:	ldr	x0, [sp, #504]
     6f8:	str	x1, [x0, #40]
     6fc:	ldr	x0, [sp, #504]
     700:	ldr	x0, [x0, #40]
     704:	cmp	x0, #0x0
     708:	b.eq	724 <ext2fs_inline_data_dir_iterate+0x420>  // b.none
     70c:	ldr	w0, [sp, #524]
     710:	orr	w0, w0, #0x2
     714:	str	w0, [sp, #524]
     718:	b	728 <ext2fs_inline_data_dir_iterate+0x424>
     71c:	nop
     720:	b	728 <ext2fs_inline_data_dir_iterate+0x424>
     724:	nop
     728:	add	x0, sp, #0x38
     72c:	add	x0, x0, #0x18
     730:	bl	0 <ext2fs_free_mem>
     734:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     738:	nop
     73c:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     740:	nop
     744:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     748:	nop
     74c:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     750:	nop
     754:	b	75c <ext2fs_inline_data_dir_iterate+0x458>
     758:	nop
     75c:	ldr	x0, [sp, #504]
     760:	ldr	x1, [sp, #496]
     764:	str	x1, [x0, #8]
     768:	ldr	x0, [sp, #504]
     76c:	ldr	w1, [sp, #492]
     770:	str	w1, [x0, #16]
     774:	ldr	x0, [sp, #504]
     778:	ldr	w1, [sp, #488]
     77c:	str	w1, [x0, #4]
     780:	ldr	w1, [sp, #524]
     784:	mov	w0, #0xfffffff5            	// #-11
     788:	and	w0, w1, w0
     78c:	str	w0, [sp, #524]
     790:	ldr	w0, [sp, #524]
     794:	ldp	x29, x30, [sp]
     798:	add	sp, sp, #0x210
     79c:	ret

00000000000007a0 <ext2fs_inline_data_ea_remove>:
     7a0:	stp	x29, x30, [sp, #-48]!
     7a4:	mov	x29, sp
     7a8:	str	x0, [sp, #24]
     7ac:	str	w1, [sp, #20]
     7b0:	add	x0, sp, #0x20
     7b4:	mov	x2, x0
     7b8:	ldr	w1, [sp, #20]
     7bc:	ldr	x0, [sp, #24]
     7c0:	bl	0 <ext2fs_xattrs_open>
     7c4:	str	x0, [sp, #40]
     7c8:	ldr	x0, [sp, #40]
     7cc:	cmp	x0, #0x0
     7d0:	b.eq	7dc <ext2fs_inline_data_ea_remove+0x3c>  // b.none
     7d4:	ldr	x0, [sp, #40]
     7d8:	b	820 <ext2fs_inline_data_ea_remove+0x80>
     7dc:	ldr	x0, [sp, #32]
     7e0:	bl	0 <ext2fs_xattrs_read>
     7e4:	str	x0, [sp, #40]
     7e8:	ldr	x0, [sp, #40]
     7ec:	cmp	x0, #0x0
     7f0:	b.ne	810 <ext2fs_inline_data_ea_remove+0x70>  // b.any
     7f4:	ldr	x2, [sp, #32]
     7f8:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
     7fc:	add	x1, x0, #0x0
     800:	mov	x0, x2
     804:	bl	0 <ext2fs_xattr_remove>
     808:	str	x0, [sp, #40]
     80c:	b	814 <ext2fs_inline_data_ea_remove+0x74>
     810:	nop
     814:	add	x0, sp, #0x20
     818:	bl	0 <ext2fs_xattrs_close>
     81c:	ldr	x0, [sp, #40]
     820:	ldp	x29, x30, [sp], #48
     824:	ret

0000000000000828 <ext2fs_inline_data_convert_dir>:
     828:	stp	x29, x30, [sp, #-112]!
     82c:	mov	x29, sp
     830:	str	x0, [sp, #40]
     834:	str	w1, [sp, #36]
     838:	str	x2, [sp, #24]
     83c:	str	x3, [sp, #16]
     840:	str	w4, [sp, #32]
     844:	str	wzr, [sp, #88]
     848:	str	wzr, [sp, #84]
     84c:	ldr	x0, [sp, #40]
     850:	ldr	x0, [x0, #32]
     854:	bl	0 <ext2fs_has_feature_metadata_csum>
     858:	cmp	w0, #0x0
     85c:	b.eq	868 <ext2fs_inline_data_convert_dir+0x40>  // b.none
     860:	mov	w0, #0xc                   	// #12
     864:	str	w0, [sp, #88]
     868:	ldr	x0, [sp, #40]
     86c:	ldr	x0, [x0, #32]
     870:	bl	28 <ext2fs_has_feature_filetype>
     874:	cmp	w0, #0x0
     878:	b.eq	884 <ext2fs_inline_data_convert_dir+0x5c>  // b.none
     87c:	mov	w0, #0x2                   	// #2
     880:	str	w0, [sp, #84]
     884:	ldr	x0, [sp, #24]
     888:	str	x0, [sp, #104]
     88c:	ldr	x0, [sp, #104]
     890:	ldr	w1, [sp, #36]
     894:	str	w1, [x0]
     898:	mov	w1, #0x1                   	// #1
     89c:	ldr	x0, [sp, #104]
     8a0:	bl	0 <ext2fs_dirent_set_name_len>
     8a4:	ldr	w1, [sp, #84]
     8a8:	ldr	x0, [sp, #104]
     8ac:	bl	0 <ext2fs_dirent_set_file_type>
     8b0:	ldr	x0, [sp, #104]
     8b4:	mov	w1, #0x2e                  	// #46
     8b8:	strb	w1, [x0, #8]
     8bc:	ldr	x0, [sp, #40]
     8c0:	ldr	w1, [x0, #40]
     8c4:	ldr	w0, [sp, #88]
     8c8:	sub	w0, w1, w0
     8cc:	sub	w0, w0, #0xc
     8d0:	str	w0, [sp, #60]
     8d4:	ldr	x0, [sp, #104]
     8d8:	mov	w1, #0xc                   	// #12
     8dc:	strh	w1, [x0, #4]
     8e0:	ldr	x0, [sp, #104]
     8e4:	ldrh	w0, [x0, #4]
     8e8:	and	x0, x0, #0xffff
     8ec:	ldr	x1, [sp, #24]
     8f0:	add	x0, x1, x0
     8f4:	str	x0, [sp, #104]
     8f8:	ldr	x0, [sp, #104]
     8fc:	mov	w1, #0xc                   	// #12
     900:	strh	w1, [x0, #4]
     904:	ldr	x0, [sp, #16]
     908:	ldr	w1, [x0]
     90c:	ldr	x0, [sp, #104]
     910:	str	w1, [x0]
     914:	mov	w1, #0x2                   	// #2
     918:	ldr	x0, [sp, #104]
     91c:	bl	0 <ext2fs_dirent_set_name_len>
     920:	ldr	w1, [sp, #84]
     924:	ldr	x0, [sp, #104]
     928:	bl	0 <ext2fs_dirent_set_file_type>
     92c:	ldr	x0, [sp, #104]
     930:	mov	w1, #0x2e                  	// #46
     934:	strb	w1, [x0, #8]
     938:	ldr	x0, [sp, #104]
     93c:	mov	w1, #0x2e                  	// #46
     940:	strb	w1, [x0, #9]
     944:	mov	w0, #0x18                  	// #24
     948:	str	w0, [sp, #92]
     94c:	ldrsw	x0, [sp, #92]
     950:	ldr	x1, [sp, #24]
     954:	add	x0, x1, x0
     958:	str	x0, [sp, #104]
     95c:	ldrsw	x0, [sp, #92]
     960:	ldr	x1, [sp, #24]
     964:	add	x3, x1, x0
     968:	ldr	x0, [sp, #16]
     96c:	add	x1, x0, #0x4
     970:	ldr	w0, [sp, #32]
     974:	sub	w0, w0, #0x4
     978:	sxtw	x0, w0
     97c:	mov	x2, x0
     980:	mov	x0, x3
     984:	bl	0 <memcpy>
     988:	ldr	w0, [sp, #32]
     98c:	add	w0, w0, #0x14
     990:	str	w0, [sp, #32]
     994:	ldr	x0, [sp, #104]
     998:	str	x0, [sp, #72]
     99c:	add	x0, sp, #0x3c
     9a0:	mov	x2, x0
     9a4:	ldr	x1, [sp, #104]
     9a8:	ldr	x0, [sp, #40]
     9ac:	bl	0 <ext2fs_get_rec_len>
     9b0:	str	x0, [sp, #96]
     9b4:	ldr	x0, [sp, #96]
     9b8:	cmp	x0, #0x0
     9bc:	b.ne	a70 <ext2fs_inline_data_convert_dir+0x248>  // b.any
     9c0:	ldr	w1, [sp, #92]
     9c4:	ldr	w0, [sp, #60]
     9c8:	add	w0, w1, w0
     9cc:	str	w0, [sp, #92]
     9d0:	ldrsw	x0, [sp, #92]
     9d4:	ldr	x1, [sp, #24]
     9d8:	add	x0, x1, x0
     9dc:	str	x0, [sp, #104]
     9e0:	ldr	w1, [sp, #92]
     9e4:	ldr	w0, [sp, #32]
     9e8:	cmp	w1, w0
     9ec:	b.lt	994 <ext2fs_inline_data_convert_dir+0x16c>  // b.tstop
     9f0:	ldr	x0, [sp, #40]
     9f4:	ldr	w1, [x0, #40]
     9f8:	ldr	w0, [sp, #88]
     9fc:	sub	w1, w1, w0
     a00:	ldr	w0, [sp, #92]
     a04:	sub	w1, w1, w0
     a08:	ldr	w0, [sp, #60]
     a0c:	add	w0, w1, w0
     a10:	str	w0, [sp, #60]
     a14:	ldr	w0, [sp, #60]
     a18:	ldr	x2, [sp, #72]
     a1c:	mov	w1, w0
     a20:	ldr	x0, [sp, #40]
     a24:	bl	0 <ext2fs_set_rec_len>
     a28:	str	x0, [sp, #96]
     a2c:	ldr	x0, [sp, #96]
     a30:	cmp	x0, #0x0
     a34:	b.ne	a78 <ext2fs_inline_data_convert_dir+0x250>  // b.any
     a38:	ldr	w0, [sp, #88]
     a3c:	cmp	w0, #0x0
     a40:	b.eq	a80 <ext2fs_inline_data_convert_dir+0x258>  // b.none
     a44:	ldr	x0, [sp, #40]
     a48:	ldr	w0, [x0, #40]
     a4c:	mov	w0, w0
     a50:	sub	x0, x0, #0xc
     a54:	ldr	x1, [sp, #24]
     a58:	add	x0, x1, x0
     a5c:	str	x0, [sp, #64]
     a60:	ldr	x1, [sp, #64]
     a64:	ldr	x0, [sp, #40]
     a68:	bl	0 <ext2fs_initialize_dirent_tail>
     a6c:	b	a84 <ext2fs_inline_data_convert_dir+0x25c>
     a70:	nop
     a74:	b	a84 <ext2fs_inline_data_convert_dir+0x25c>
     a78:	nop
     a7c:	b	a84 <ext2fs_inline_data_convert_dir+0x25c>
     a80:	nop
     a84:	ldr	x0, [sp, #96]
     a88:	ldp	x29, x30, [sp], #112
     a8c:	ret

0000000000000a90 <ext2fs_inline_data_dir_expand>:
     a90:	stp	x29, x30, [sp, #-96]!
     a94:	mov	x29, sp
     a98:	str	x0, [sp, #56]
     a9c:	str	w1, [sp, #52]
     aa0:	str	x2, [sp, #40]
     aa4:	str	x3, [sp, #32]
     aa8:	str	x4, [sp, #24]
     aac:	ldr	x0, [sp, #56]
     ab0:	ldr	w0, [x0, #40]
     ab4:	mov	w0, w0
     ab8:	add	x1, sp, #0x48
     abc:	bl	0 <ext2fs_get_memzero>
     ac0:	str	x0, [sp, #88]
     ac4:	ldr	x0, [sp, #88]
     ac8:	cmp	x0, #0x0
     acc:	b.eq	ad8 <ext2fs_inline_data_dir_expand+0x48>  // b.none
     ad0:	ldr	x0, [sp, #88]
     ad4:	b	c74 <ext2fs_inline_data_dir_expand+0x1e4>
     ad8:	ldr	x0, [sp, #72]
     adc:	ldr	x1, [sp, #24]
     ae0:	mov	w4, w1
     ae4:	ldr	x3, [sp, #32]
     ae8:	mov	x2, x0
     aec:	ldr	w1, [sp, #52]
     af0:	ldr	x0, [sp, #56]
     af4:	bl	828 <ext2fs_inline_data_convert_dir>
     af8:	str	x0, [sp, #88]
     afc:	ldr	x0, [sp, #88]
     b00:	cmp	x0, #0x0
     b04:	b.ne	c3c <ext2fs_inline_data_dir_expand+0x1ac>  // b.any
     b08:	add	x0, sp, #0x50
     b0c:	mov	x3, x0
     b10:	mov	x2, #0x0                   	// #0
     b14:	mov	x1, #0x0                   	// #0
     b18:	ldr	x0, [sp, #56]
     b1c:	bl	0 <ext2fs_new_block2>
     b20:	str	x0, [sp, #88]
     b24:	ldr	x0, [sp, #88]
     b28:	cmp	x0, #0x0
     b2c:	b.ne	c44 <ext2fs_inline_data_dir_expand+0x1b4>  // b.any
     b30:	ldr	x0, [sp, #80]
     b34:	ldr	x1, [sp, #72]
     b38:	ldr	w4, [sp, #52]
     b3c:	mov	w3, #0x0                   	// #0
     b40:	mov	x2, x1
     b44:	mov	x1, x0
     b48:	ldr	x0, [sp, #56]
     b4c:	bl	0 <ext2fs_write_dir_block4>
     b50:	str	x0, [sp, #88]
     b54:	ldr	x0, [sp, #88]
     b58:	cmp	x0, #0x0
     b5c:	b.ne	c4c <ext2fs_inline_data_dir_expand+0x1bc>  // b.any
     b60:	ldr	x0, [sp, #56]
     b64:	ldr	x0, [x0, #32]
     b68:	bl	50 <ext2fs_has_feature_extents>
     b6c:	cmp	w0, #0x0
     b70:	b.eq	b88 <ext2fs_inline_data_dir_expand+0xf8>  // b.none
     b74:	ldr	x0, [sp, #40]
     b78:	ldr	w0, [x0, #32]
     b7c:	orr	w1, w0, #0x80000
     b80:	ldr	x0, [sp, #40]
     b84:	str	w1, [x0, #32]
     b88:	ldr	x0, [sp, #40]
     b8c:	ldr	w0, [x0, #32]
     b90:	and	w1, w0, #0xefffffff
     b94:	ldr	x0, [sp, #40]
     b98:	str	w1, [x0, #32]
     b9c:	mov	x2, #0x1                   	// #1
     ba0:	ldr	x1, [sp, #40]
     ba4:	ldr	x0, [sp, #56]
     ba8:	bl	0 <ext2fs_iblk_add_blocks>
     bac:	str	x0, [sp, #88]
     bb0:	ldr	x0, [sp, #88]
     bb4:	cmp	x0, #0x0
     bb8:	b.ne	c54 <ext2fs_inline_data_dir_expand+0x1c4>  // b.any
     bbc:	ldr	x0, [sp, #56]
     bc0:	ldr	w1, [x0, #40]
     bc4:	ldr	x0, [sp, #40]
     bc8:	str	w1, [x0, #4]
     bcc:	add	x0, sp, #0x50
     bd0:	mov	x7, x0
     bd4:	mov	x6, #0x0                   	// #0
     bd8:	mov	x5, #0x0                   	// #0
     bdc:	mov	w4, #0x2                   	// #2
     be0:	mov	x3, #0x0                   	// #0
     be4:	ldr	x2, [sp, #40]
     be8:	ldr	w1, [sp, #52]
     bec:	ldr	x0, [sp, #56]
     bf0:	bl	0 <ext2fs_bmap2>
     bf4:	str	x0, [sp, #88]
     bf8:	ldr	x0, [sp, #88]
     bfc:	cmp	x0, #0x0
     c00:	b.ne	c5c <ext2fs_inline_data_dir_expand+0x1cc>  // b.any
     c04:	ldr	x2, [sp, #40]
     c08:	ldr	w1, [sp, #52]
     c0c:	ldr	x0, [sp, #56]
     c10:	bl	0 <ext2fs_write_inode>
     c14:	str	x0, [sp, #88]
     c18:	ldr	x0, [sp, #88]
     c1c:	cmp	x0, #0x0
     c20:	b.ne	c64 <ext2fs_inline_data_dir_expand+0x1d4>  // b.any
     c24:	ldr	x0, [sp, #80]
     c28:	mov	w2, #0x1                   	// #1
     c2c:	mov	w1, w0
     c30:	ldr	x0, [sp, #56]
     c34:	bl	0 <ext2fs_block_alloc_stats>
     c38:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c3c:	nop
     c40:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c44:	nop
     c48:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c4c:	nop
     c50:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c54:	nop
     c58:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c5c:	nop
     c60:	b	c68 <ext2fs_inline_data_dir_expand+0x1d8>
     c64:	nop
     c68:	add	x0, sp, #0x48
     c6c:	bl	0 <ext2fs_free_mem>
     c70:	ldr	x0, [sp, #88]
     c74:	ldp	x29, x30, [sp], #96
     c78:	ret

0000000000000c7c <ext2fs_inline_data_file_expand>:
     c7c:	stp	x29, x30, [sp, #-96]!
     c80:	mov	x29, sp
     c84:	str	x0, [sp, #56]
     c88:	str	w1, [sp, #52]
     c8c:	str	x2, [sp, #40]
     c90:	str	x3, [sp, #32]
     c94:	str	x4, [sp, #24]
     c98:	ldr	x0, [sp, #40]
     c9c:	add	x0, x0, #0x28
     ca0:	mov	x2, #0x3c                  	// #60
     ca4:	mov	w1, #0x0                   	// #0
     ca8:	bl	0 <memset>
     cac:	ldr	x0, [sp, #56]
     cb0:	ldr	x0, [x0, #32]
     cb4:	bl	50 <ext2fs_has_feature_extents>
     cb8:	cmp	w0, #0x0
     cbc:	b.eq	d0c <ext2fs_inline_data_file_expand+0x90>  // b.none
     cc0:	ldr	x0, [sp, #40]
     cc4:	ldr	w0, [x0, #32]
     cc8:	and	w1, w0, #0xfff7ffff
     ccc:	ldr	x0, [sp, #40]
     cd0:	str	w1, [x0, #32]
     cd4:	add	x0, sp, #0x48
     cd8:	mov	x3, x0
     cdc:	ldr	x2, [sp, #40]
     ce0:	ldr	w1, [sp, #52]
     ce4:	ldr	x0, [sp, #56]
     ce8:	bl	0 <ext2fs_extent_open2>
     cec:	str	x0, [sp, #88]
     cf0:	ldr	x0, [sp, #88]
     cf4:	cmp	x0, #0x0
     cf8:	b.eq	d04 <ext2fs_inline_data_file_expand+0x88>  // b.none
     cfc:	ldr	x0, [sp, #88]
     d00:	b	da8 <ext2fs_inline_data_file_expand+0x12c>
     d04:	ldr	x0, [sp, #72]
     d08:	bl	0 <ext2fs_extent_free>
     d0c:	ldr	x0, [sp, #40]
     d10:	ldr	w0, [x0, #32]
     d14:	and	w1, w0, #0xefffffff
     d18:	ldr	x0, [sp, #40]
     d1c:	str	w1, [x0, #32]
     d20:	ldr	x0, [sp, #40]
     d24:	str	wzr, [x0, #4]
     d28:	ldr	x2, [sp, #40]
     d2c:	ldr	w1, [sp, #52]
     d30:	ldr	x0, [sp, #56]
     d34:	bl	0 <ext2fs_write_inode>
     d38:	str	x0, [sp, #88]
     d3c:	ldr	x0, [sp, #88]
     d40:	cmp	x0, #0x0
     d44:	b.eq	d50 <ext2fs_inline_data_file_expand+0xd4>  // b.none
     d48:	ldr	x0, [sp, #88]
     d4c:	b	da8 <ext2fs_inline_data_file_expand+0x12c>
     d50:	add	x0, sp, #0x50
     d54:	mov	x3, x0
     d58:	mov	w2, #0x1                   	// #1
     d5c:	ldr	w1, [sp, #52]
     d60:	ldr	x0, [sp, #56]
     d64:	bl	0 <ext2fs_file_open>
     d68:	str	x0, [sp, #88]
     d6c:	ldr	x0, [sp, #88]
     d70:	cmp	x0, #0x0
     d74:	b.eq	d80 <ext2fs_inline_data_file_expand+0x104>  // b.none
     d78:	ldr	x0, [sp, #88]
     d7c:	b	da8 <ext2fs_inline_data_file_expand+0x12c>
     d80:	ldr	x0, [sp, #80]
     d84:	ldr	x1, [sp, #24]
     d88:	mov	x3, #0x0                   	// #0
     d8c:	mov	w2, w1
     d90:	ldr	x1, [sp, #32]
     d94:	bl	0 <ext2fs_file_write>
     d98:	str	x0, [sp, #88]
     d9c:	ldr	x0, [sp, #80]
     da0:	bl	0 <ext2fs_file_close>
     da4:	ldr	x0, [sp, #88]
     da8:	ldp	x29, x30, [sp], #96
     dac:	ret

0000000000000db0 <ext2fs_inline_data_expand>:
     db0:	stp	x29, x30, [sp, #-224]!
     db4:	mov	x29, sp
     db8:	str	x0, [sp, #24]
     dbc:	str	w1, [sp, #20]
     dc0:	str	xzr, [sp, #40]
     dc4:	ldr	x0, [sp, #24]
     dc8:	ldr	x1, [x0]
     dcc:	mov	x0, #0xb701                	// #46849
     dd0:	movk	x0, #0x7f2b, lsl #16
     dd4:	cmp	x1, x0
     dd8:	b.eq	de8 <ext2fs_inline_data_expand+0x38>  // b.none
     ddc:	mov	x0, #0xb701                	// #46849
     de0:	movk	x0, #0x7f2b, lsl #16
     de4:	b	ff8 <ext2fs_inline_data_expand+0x248>
     de8:	add	x0, sp, #0x50
     dec:	mov	x2, x0
     df0:	ldr	w1, [sp, #20]
     df4:	ldr	x0, [sp, #24]
     df8:	bl	0 <ext2fs_read_inode>
     dfc:	str	x0, [sp, #216]
     e00:	ldr	x0, [sp, #216]
     e04:	cmp	x0, #0x0
     e08:	b.eq	e14 <ext2fs_inline_data_expand+0x64>  // b.none
     e0c:	ldr	x0, [sp, #216]
     e10:	b	ff8 <ext2fs_inline_data_expand+0x248>
     e14:	ldr	w0, [sp, #112]
     e18:	and	w0, w0, #0x10000000
     e1c:	cmp	w0, #0x0
     e20:	b.ne	e30 <ext2fs_inline_data_expand+0x80>  // b.any
     e24:	mov	x0, #0xb7a5                	// #47013
     e28:	movk	x0, #0x7f2b, lsl #16
     e2c:	b	ff8 <ext2fs_inline_data_expand+0x248>
     e30:	ldr	x0, [sp, #24]
     e34:	str	x0, [sp, #48]
     e38:	ldr	w0, [sp, #20]
     e3c:	str	w0, [sp, #56]
     e40:	add	x0, sp, #0x30
     e44:	bl	124 <ext2fs_inline_data_ea_get>
     e48:	str	x0, [sp, #216]
     e4c:	ldr	x0, [sp, #216]
     e50:	cmp	x0, #0x0
     e54:	b.eq	e60 <ext2fs_inline_data_expand+0xb0>  // b.none
     e58:	ldr	x0, [sp, #216]
     e5c:	b	ff8 <ext2fs_inline_data_expand+0x248>
     e60:	ldr	x0, [sp, #64]
     e64:	add	x0, x0, #0x3c
     e68:	str	x0, [sp, #208]
     e6c:	add	x0, sp, #0x28
     e70:	mov	x1, x0
     e74:	ldr	x0, [sp, #208]
     e78:	bl	0 <ext2fs_get_mem>
     e7c:	str	x0, [sp, #216]
     e80:	ldr	x0, [sp, #216]
     e84:	cmp	x0, #0x0
     e88:	b.ne	fb8 <ext2fs_inline_data_expand+0x208>  // b.any
     e8c:	ldr	x0, [sp, #40]
     e90:	mov	x1, x0
     e94:	add	x0, sp, #0x78
     e98:	ldp	x2, x3, [x0]
     e9c:	stp	x2, x3, [x1]
     ea0:	ldp	x2, x3, [x0, #16]
     ea4:	stp	x2, x3, [x1, #16]
     ea8:	ldp	x2, x3, [x0, #32]
     eac:	stp	x2, x3, [x1, #32]
     eb0:	ldr	x2, [x0, #48]
     eb4:	str	x2, [x1, #48]
     eb8:	ldr	w0, [x0, #56]
     ebc:	str	w0, [x1, #56]
     ec0:	ldr	x0, [sp, #64]
     ec4:	cmp	x0, #0x0
     ec8:	b.eq	ee0 <ext2fs_inline_data_expand+0x130>  // b.none
     ecc:	ldr	x0, [sp, #40]
     ed0:	add	x0, x0, #0x3c
     ed4:	ldr	x1, [sp, #72]
     ed8:	ldr	x2, [sp, #64]
     edc:	bl	0 <memcpy>
     ee0:	add	x0, sp, #0x50
     ee4:	add	x0, x0, #0x28
     ee8:	mov	x2, #0x3c                  	// #60
     eec:	mov	w1, #0x0                   	// #0
     ef0:	bl	0 <memset>
     ef4:	add	x0, sp, #0x50
     ef8:	mov	x2, x0
     efc:	ldr	w1, [sp, #20]
     f00:	ldr	x0, [sp, #24]
     f04:	bl	0 <ext2fs_write_inode>
     f08:	str	x0, [sp, #216]
     f0c:	ldr	x0, [sp, #216]
     f10:	cmp	x0, #0x0
     f14:	b.ne	fc0 <ext2fs_inline_data_expand+0x210>  // b.any
     f18:	ldr	w1, [sp, #20]
     f1c:	ldr	x0, [sp, #24]
     f20:	bl	7a0 <ext2fs_inline_data_ea_remove>
     f24:	str	x0, [sp, #216]
     f28:	ldr	x0, [sp, #216]
     f2c:	cmp	x0, #0x0
     f30:	b.ne	fc8 <ext2fs_inline_data_expand+0x218>  // b.any
     f34:	add	x0, sp, #0x50
     f38:	mov	x2, x0
     f3c:	ldr	w1, [sp, #20]
     f40:	ldr	x0, [sp, #24]
     f44:	bl	0 <ext2fs_read_inode>
     f48:	str	x0, [sp, #216]
     f4c:	ldr	x0, [sp, #216]
     f50:	cmp	x0, #0x0
     f54:	b.ne	fd0 <ext2fs_inline_data_expand+0x220>  // b.any
     f58:	ldrh	w0, [sp, #80]
     f5c:	and	w0, w0, #0xf000
     f60:	cmp	w0, #0x4, lsl #12
     f64:	b.ne	f90 <ext2fs_inline_data_expand+0x1e0>  // b.any
     f68:	ldr	x1, [sp, #40]
     f6c:	add	x0, sp, #0x50
     f70:	ldr	x4, [sp, #208]
     f74:	mov	x3, x1
     f78:	mov	x2, x0
     f7c:	ldr	w1, [sp, #20]
     f80:	ldr	x0, [sp, #24]
     f84:	bl	a90 <ext2fs_inline_data_dir_expand>
     f88:	str	x0, [sp, #216]
     f8c:	b	fd4 <ext2fs_inline_data_expand+0x224>
     f90:	ldr	x1, [sp, #40]
     f94:	add	x0, sp, #0x50
     f98:	ldr	x4, [sp, #208]
     f9c:	mov	x3, x1
     fa0:	mov	x2, x0
     fa4:	ldr	w1, [sp, #20]
     fa8:	ldr	x0, [sp, #24]
     fac:	bl	c7c <ext2fs_inline_data_file_expand>
     fb0:	str	x0, [sp, #216]
     fb4:	b	fd4 <ext2fs_inline_data_expand+0x224>
     fb8:	nop
     fbc:	b	fd4 <ext2fs_inline_data_expand+0x224>
     fc0:	nop
     fc4:	b	fd4 <ext2fs_inline_data_expand+0x224>
     fc8:	nop
     fcc:	b	fd4 <ext2fs_inline_data_expand+0x224>
     fd0:	nop
     fd4:	ldr	x0, [sp, #40]
     fd8:	cmp	x0, #0x0
     fdc:	b.eq	fe8 <ext2fs_inline_data_expand+0x238>  // b.none
     fe0:	add	x0, sp, #0x28
     fe4:	bl	0 <ext2fs_free_mem>
     fe8:	add	x0, sp, #0x30
     fec:	add	x0, x0, #0x18
     ff0:	bl	0 <ext2fs_free_mem>
     ff4:	ldr	x0, [sp, #216]
     ff8:	ldp	x29, x30, [sp], #224
     ffc:	ret

0000000000001000 <ext2fs_inline_data_get>:
    1000:	stp	x29, x30, [sp, #-240]!
    1004:	mov	x29, sp
    1008:	str	x0, [sp, #56]
    100c:	str	w1, [sp, #52]
    1010:	str	x2, [sp, #40]
    1014:	str	x3, [sp, #32]
    1018:	str	x4, [sp, #24]
    101c:	ldr	x0, [sp, #40]
    1020:	cmp	x0, #0x0
    1024:	b.ne	105c <ext2fs_inline_data_get+0x5c>  // b.any
    1028:	add	x0, sp, #0x68
    102c:	mov	x2, x0
    1030:	ldr	w1, [sp, #52]
    1034:	ldr	x0, [sp, #56]
    1038:	bl	0 <ext2fs_read_inode>
    103c:	str	x0, [sp, #232]
    1040:	ldr	x0, [sp, #232]
    1044:	cmp	x0, #0x0
    1048:	b.eq	1054 <ext2fs_inline_data_get+0x54>  // b.none
    104c:	ldr	x0, [sp, #232]
    1050:	b	10f0 <ext2fs_inline_data_get+0xf0>
    1054:	add	x0, sp, #0x68
    1058:	str	x0, [sp, #40]
    105c:	ldr	x0, [sp, #56]
    1060:	str	x0, [sp, #72]
    1064:	ldr	w0, [sp, #52]
    1068:	str	w0, [sp, #80]
    106c:	add	x0, sp, #0x48
    1070:	bl	124 <ext2fs_inline_data_ea_get>
    1074:	str	x0, [sp, #232]
    1078:	ldr	x0, [sp, #232]
    107c:	cmp	x0, #0x0
    1080:	b.eq	108c <ext2fs_inline_data_get+0x8c>  // b.none
    1084:	ldr	x0, [sp, #232]
    1088:	b	10f0 <ext2fs_inline_data_get+0xf0>
    108c:	ldr	x0, [sp, #40]
    1090:	add	x0, x0, #0x28
    1094:	mov	x2, #0x3c                  	// #60
    1098:	mov	x1, x0
    109c:	ldr	x0, [sp, #32]
    10a0:	bl	0 <memcpy>
    10a4:	ldr	x0, [sp, #88]
    10a8:	cmp	x0, #0x0
    10ac:	b.eq	10c4 <ext2fs_inline_data_get+0xc4>  // b.none
    10b0:	ldr	x0, [sp, #32]
    10b4:	add	x0, x0, #0x3c
    10b8:	ldr	x1, [sp, #96]
    10bc:	ldr	x2, [sp, #88]
    10c0:	bl	0 <memcpy>
    10c4:	ldr	x0, [sp, #24]
    10c8:	cmp	x0, #0x0
    10cc:	b.eq	10e0 <ext2fs_inline_data_get+0xe0>  // b.none
    10d0:	ldr	x0, [sp, #88]
    10d4:	add	x1, x0, #0x3c
    10d8:	ldr	x0, [sp, #24]
    10dc:	str	x1, [x0]
    10e0:	add	x0, sp, #0x48
    10e4:	add	x0, x0, #0x18
    10e8:	bl	0 <ext2fs_free_mem>
    10ec:	mov	x0, #0x0                   	// #0
    10f0:	ldp	x29, x30, [sp], #240
    10f4:	ret

00000000000010f8 <ext2fs_inline_data_set>:
    10f8:	stp	x29, x30, [sp, #-256]!
    10fc:	mov	x29, sp
    1100:	str	x0, [sp, #56]
    1104:	str	w1, [sp, #52]
    1108:	str	x2, [sp, #40]
    110c:	str	x3, [sp, #32]
    1110:	str	x4, [sp, #24]
    1114:	stp	xzr, xzr, [sp, #80]
    1118:	stp	xzr, xzr, [sp, #96]
    111c:	ldr	x0, [sp, #56]
    1120:	str	x0, [sp, #80]
    1124:	ldr	w0, [sp, #52]
    1128:	str	w0, [sp, #88]
    112c:	ldr	x0, [sp, #40]
    1130:	cmp	x0, #0x0
    1134:	b.ne	116c <ext2fs_inline_data_set+0x74>  // b.any
    1138:	add	x0, sp, #0x70
    113c:	mov	x2, x0
    1140:	ldr	w1, [sp, #52]
    1144:	ldr	x0, [sp, #56]
    1148:	bl	0 <ext2fs_read_inode>
    114c:	str	x0, [sp, #240]
    1150:	ldr	x0, [sp, #240]
    1154:	cmp	x0, #0x0
    1158:	b.eq	1164 <ext2fs_inline_data_set+0x6c>  // b.none
    115c:	ldr	x0, [sp, #240]
    1160:	b	12b0 <ext2fs_inline_data_set+0x1b8>
    1164:	add	x0, sp, #0x70
    1168:	str	x0, [sp, #40]
    116c:	ldr	x0, [sp, #24]
    1170:	cmp	x0, #0x3c
    1174:	b.hi	1190 <ext2fs_inline_data_set+0x98>  // b.pmore
    1178:	ldr	x0, [sp, #40]
    117c:	add	x0, x0, #0x28
    1180:	ldr	x2, [sp, #24]
    1184:	ldr	x1, [sp, #32]
    1188:	bl	0 <memcpy>
    118c:	b	1280 <ext2fs_inline_data_set+0x188>
    1190:	add	x0, sp, #0x48
    1194:	mov	x2, x0
    1198:	ldr	w1, [sp, #52]
    119c:	ldr	x0, [sp, #56]
    11a0:	bl	0 <ext2fs_xattr_inode_max_size>
    11a4:	str	x0, [sp, #240]
    11a8:	ldr	x0, [sp, #240]
    11ac:	cmp	x0, #0x0
    11b0:	b.eq	11bc <ext2fs_inline_data_set+0xc4>  // b.none
    11b4:	ldr	x0, [sp, #240]
    11b8:	b	12b0 <ext2fs_inline_data_set+0x1b8>
    11bc:	add	x0, sp, #0x40
    11c0:	mov	x2, x0
    11c4:	ldr	w1, [sp, #52]
    11c8:	ldr	x0, [sp, #56]
    11cc:	bl	254 <ext2fs_inline_data_size>
    11d0:	str	x0, [sp, #240]
    11d4:	ldr	x0, [sp, #240]
    11d8:	cmp	x0, #0x0
    11dc:	b.eq	11e8 <ext2fs_inline_data_set+0xf0>  // b.none
    11e0:	ldr	x0, [sp, #240]
    11e4:	b	12b0 <ext2fs_inline_data_set+0x1b8>
    11e8:	ldr	x0, [sp, #64]
    11ec:	cmp	x0, #0x3b
    11f0:	b.hi	1208 <ext2fs_inline_data_set+0x110>  // b.pmore
    11f4:	ldr	x0, [sp, #64]
    11f8:	mov	x1, #0x3c                  	// #60
    11fc:	sub	x0, x1, x0
    1200:	str	x0, [sp, #248]
    1204:	b	120c <ext2fs_inline_data_set+0x114>
    1208:	str	xzr, [sp, #248]
    120c:	ldr	x0, [sp, #64]
    1210:	ldr	x1, [sp, #24]
    1214:	cmp	x1, x0
    1218:	b.eq	1248 <ext2fs_inline_data_set+0x150>  // b.none
    121c:	ldr	x1, [sp, #64]
    1220:	ldr	x0, [sp, #72]
    1224:	add	x1, x1, x0
    1228:	ldr	x0, [sp, #248]
    122c:	add	x0, x1, x0
    1230:	ldr	x1, [sp, #24]
    1234:	cmp	x1, x0
    1238:	b.ls	1248 <ext2fs_inline_data_set+0x150>  // b.plast
    123c:	mov	x0, #0xb7a7                	// #47015
    1240:	movk	x0, #0x7f2b, lsl #16
    1244:	b	12b0 <ext2fs_inline_data_set+0x1b8>
    1248:	ldr	x0, [sp, #40]
    124c:	add	x0, x0, #0x28
    1250:	mov	x2, #0x3c                  	// #60
    1254:	ldr	x1, [sp, #32]
    1258:	bl	0 <memcpy>
    125c:	ldr	x0, [sp, #24]
    1260:	cmp	x0, #0x3c
    1264:	b.ls	1274 <ext2fs_inline_data_set+0x17c>  // b.plast
    1268:	ldr	x0, [sp, #24]
    126c:	sub	x0, x0, #0x3c
    1270:	str	x0, [sp, #96]
    1274:	ldr	x0, [sp, #32]
    1278:	add	x0, x0, #0x3c
    127c:	str	x0, [sp, #104]
    1280:	ldr	x2, [sp, #40]
    1284:	ldr	w1, [sp, #52]
    1288:	ldr	x0, [sp, #56]
    128c:	bl	0 <ext2fs_write_inode>
    1290:	str	x0, [sp, #240]
    1294:	ldr	x0, [sp, #240]
    1298:	cmp	x0, #0x0
    129c:	b.eq	12a8 <ext2fs_inline_data_set+0x1b0>  // b.none
    12a0:	ldr	x0, [sp, #240]
    12a4:	b	12b0 <ext2fs_inline_data_set+0x1b8>
    12a8:	add	x0, sp, #0x50
    12ac:	bl	78 <ext2fs_inline_data_ea_set>
    12b0:	ldp	x29, x30, [sp], #256
    12b4:	ret

inode.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_metadata_csum>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x400
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_group_desc_csum>:
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x0, [sp, #24]
      60:	ldr	x0, [x0, #32]
      64:	bl	28 <ext2fs_has_feature_metadata_csum>
      68:	cmp	w0, #0x0
      6c:	b.ne	84 <ext2fs_has_group_desc_csum+0x34>  // b.any
      70:	ldr	x0, [sp, #24]
      74:	ldr	x0, [x0, #32]
      78:	bl	0 <ext2fs_has_feature_gdt_csum>
      7c:	cmp	w0, #0x0
      80:	b.eq	8c <ext2fs_has_group_desc_csum+0x3c>  // b.none
      84:	mov	w0, #0x1                   	// #1
      88:	b	90 <ext2fs_has_group_desc_csum+0x40>
      8c:	mov	w0, #0x0                   	// #0
      90:	ldp	x29, x30, [sp], #32
      94:	ret

0000000000000098 <ext2fs_flush_icache>:
      98:	sub	sp, sp, #0x20
      9c:	str	x0, [sp, #8]
      a0:	ldr	x0, [sp, #8]
      a4:	ldr	x0, [x0, #232]
      a8:	cmp	x0, #0x0
      ac:	b.ne	b8 <ext2fs_flush_icache+0x20>  // b.any
      b0:	mov	x0, #0x0                   	// #0
      b4:	b	110 <ext2fs_flush_icache+0x78>
      b8:	str	wzr, [sp, #28]
      bc:	b	e8 <ext2fs_flush_icache+0x50>
      c0:	ldr	x0, [sp, #8]
      c4:	ldr	x0, [x0, #232]
      c8:	ldr	x1, [x0, #32]
      cc:	ldr	w0, [sp, #28]
      d0:	lsl	x0, x0, #4
      d4:	add	x0, x1, x0
      d8:	str	wzr, [x0]
      dc:	ldr	w0, [sp, #28]
      e0:	add	w0, w0, #0x1
      e4:	str	w0, [sp, #28]
      e8:	ldr	x0, [sp, #8]
      ec:	ldr	x0, [x0, #232]
      f0:	ldr	w0, [x0, #20]
      f4:	ldr	w1, [sp, #28]
      f8:	cmp	w1, w0
      fc:	b.cc	c0 <ext2fs_flush_icache+0x28>  // b.lo, b.ul, b.last
     100:	ldr	x0, [sp, #8]
     104:	ldr	x0, [x0, #232]
     108:	str	xzr, [x0, #8]
     10c:	mov	x0, #0x0                   	// #0
     110:	add	sp, sp, #0x20
     114:	ret

0000000000000118 <ext2fs_free_inode_cache>:
     118:	stp	x29, x30, [sp, #-48]!
     11c:	mov	x29, sp
     120:	str	x0, [sp, #24]
     124:	ldr	x0, [sp, #24]
     128:	ldr	w1, [x0, #24]
     12c:	sub	w1, w1, #0x1
     130:	str	w1, [x0, #24]
     134:	ldr	w0, [x0, #24]
     138:	cmp	w0, #0x0
     13c:	b.ne	1cc <ext2fs_free_inode_cache+0xb4>  // b.any
     140:	ldr	x0, [sp, #24]
     144:	ldr	x0, [x0]
     148:	cmp	x0, #0x0
     14c:	b.eq	158 <ext2fs_free_inode_cache+0x40>  // b.none
     150:	ldr	x0, [sp, #24]
     154:	bl	0 <ext2fs_free_mem>
     158:	str	wzr, [sp, #44]
     15c:	b	188 <ext2fs_free_inode_cache+0x70>
     160:	ldr	x0, [sp, #24]
     164:	ldr	x1, [x0, #32]
     168:	ldr	w0, [sp, #44]
     16c:	lsl	x0, x0, #4
     170:	add	x0, x1, x0
     174:	add	x0, x0, #0x8
     178:	bl	0 <ext2fs_free_mem>
     17c:	ldr	w0, [sp, #44]
     180:	add	w0, w0, #0x1
     184:	str	w0, [sp, #44]
     188:	ldr	x0, [sp, #24]
     18c:	ldr	w0, [x0, #20]
     190:	ldr	w1, [sp, #44]
     194:	cmp	w1, w0
     198:	b.cc	160 <ext2fs_free_inode_cache+0x48>  // b.lo, b.ul, b.last
     19c:	ldr	x0, [sp, #24]
     1a0:	ldr	x0, [x0, #32]
     1a4:	cmp	x0, #0x0
     1a8:	b.eq	1b8 <ext2fs_free_inode_cache+0xa0>  // b.none
     1ac:	ldr	x0, [sp, #24]
     1b0:	add	x0, x0, #0x20
     1b4:	bl	0 <ext2fs_free_mem>
     1b8:	ldr	x0, [sp, #24]
     1bc:	str	xzr, [x0, #8]
     1c0:	add	x0, sp, #0x18
     1c4:	bl	0 <ext2fs_free_mem>
     1c8:	b	1d0 <ext2fs_free_inode_cache+0xb8>
     1cc:	nop
     1d0:	ldp	x29, x30, [sp], #48
     1d4:	ret

00000000000001d8 <ext2fs_create_inode_cache>:
     1d8:	stp	x29, x30, [sp, #-48]!
     1dc:	mov	x29, sp
     1e0:	str	x0, [sp, #24]
     1e4:	str	w1, [sp, #20]
     1e8:	ldr	x0, [sp, #24]
     1ec:	ldr	x0, [x0, #232]
     1f0:	cmp	x0, #0x0
     1f4:	b.eq	200 <ext2fs_create_inode_cache+0x28>  // b.none
     1f8:	mov	x0, #0x0                   	// #0
     1fc:	b	3ac <ext2fs_create_inode_cache+0x1d4>
     200:	ldr	x0, [sp, #24]
     204:	add	x0, x0, #0xe8
     208:	mov	x1, x0
     20c:	mov	x0, #0x28                  	// #40
     210:	bl	0 <ext2fs_get_mem>
     214:	str	x0, [sp, #32]
     218:	ldr	x0, [sp, #32]
     21c:	cmp	x0, #0x0
     220:	b.eq	22c <ext2fs_create_inode_cache+0x54>  // b.none
     224:	ldr	x0, [sp, #32]
     228:	b	3ac <ext2fs_create_inode_cache+0x1d4>
     22c:	ldr	x0, [sp, #24]
     230:	ldr	x0, [x0, #232]
     234:	mov	x2, #0x28                  	// #40
     238:	mov	w1, #0x0                   	// #0
     23c:	bl	0 <memset>
     240:	ldr	x0, [sp, #24]
     244:	ldr	w0, [x0, #40]
     248:	mov	w2, w0
     24c:	ldr	x0, [sp, #24]
     250:	ldr	x0, [x0, #232]
     254:	mov	x1, x0
     258:	mov	x0, x2
     25c:	bl	0 <ext2fs_get_mem>
     260:	str	x0, [sp, #32]
     264:	ldr	x0, [sp, #32]
     268:	cmp	x0, #0x0
     26c:	b.ne	380 <ext2fs_create_inode_cache+0x1a8>  // b.any
     270:	ldr	x0, [sp, #24]
     274:	ldr	x0, [x0, #232]
     278:	str	xzr, [x0, #8]
     27c:	ldr	x0, [sp, #24]
     280:	ldr	x0, [x0, #232]
     284:	mov	w1, #0xffffffff            	// #-1
     288:	str	w1, [x0, #16]
     28c:	ldr	x0, [sp, #24]
     290:	ldr	x0, [x0, #232]
     294:	ldr	w1, [sp, #20]
     298:	str	w1, [x0, #20]
     29c:	ldr	x0, [sp, #24]
     2a0:	ldr	x0, [x0, #232]
     2a4:	mov	w1, #0x1                   	// #1
     2a8:	str	w1, [x0, #24]
     2ac:	ldr	x0, [sp, #24]
     2b0:	ldr	x0, [x0, #232]
     2b4:	ldr	w0, [x0, #20]
     2b8:	mov	w3, w0
     2bc:	ldr	x0, [sp, #24]
     2c0:	ldr	x0, [x0, #232]
     2c4:	add	x0, x0, #0x20
     2c8:	mov	x2, x0
     2cc:	mov	x1, #0x10                  	// #16
     2d0:	mov	x0, x3
     2d4:	bl	0 <ext2fs_get_array>
     2d8:	str	x0, [sp, #32]
     2dc:	ldr	x0, [sp, #32]
     2e0:	cmp	x0, #0x0
     2e4:	b.ne	388 <ext2fs_create_inode_cache+0x1b0>  // b.any
     2e8:	str	wzr, [sp, #44]
     2ec:	b	358 <ext2fs_create_inode_cache+0x180>
     2f0:	ldr	x0, [sp, #24]
     2f4:	ldr	x0, [x0, #32]
     2f8:	ldr	w0, [x0, #76]
     2fc:	cmp	w0, #0x0
     300:	b.eq	318 <ext2fs_create_inode_cache+0x140>  // b.none
     304:	ldr	x0, [sp, #24]
     308:	ldr	x0, [x0, #32]
     30c:	ldrh	w0, [x0, #88]
     310:	and	x0, x0, #0xffff
     314:	b	31c <ext2fs_create_inode_cache+0x144>
     318:	mov	x0, #0x80                  	// #128
     31c:	ldr	x1, [sp, #24]
     320:	ldr	x1, [x1, #232]
     324:	ldr	x2, [x1, #32]
     328:	ldr	w1, [sp, #44]
     32c:	lsl	x1, x1, #4
     330:	add	x1, x2, x1
     334:	add	x1, x1, #0x8
     338:	bl	0 <ext2fs_get_mem>
     33c:	str	x0, [sp, #32]
     340:	ldr	x0, [sp, #32]
     344:	cmp	x0, #0x0
     348:	b.ne	390 <ext2fs_create_inode_cache+0x1b8>  // b.any
     34c:	ldr	w0, [sp, #44]
     350:	add	w0, w0, #0x1
     354:	str	w0, [sp, #44]
     358:	ldr	x0, [sp, #24]
     35c:	ldr	x0, [x0, #232]
     360:	ldr	w0, [x0, #20]
     364:	ldr	w1, [sp, #44]
     368:	cmp	w1, w0
     36c:	b.cc	2f0 <ext2fs_create_inode_cache+0x118>  // b.lo, b.ul, b.last
     370:	ldr	x0, [sp, #24]
     374:	bl	98 <ext2fs_flush_icache>
     378:	mov	x0, #0x0                   	// #0
     37c:	b	3ac <ext2fs_create_inode_cache+0x1d4>
     380:	nop
     384:	b	394 <ext2fs_create_inode_cache+0x1bc>
     388:	nop
     38c:	b	394 <ext2fs_create_inode_cache+0x1bc>
     390:	nop
     394:	ldr	x0, [sp, #24]
     398:	ldr	x0, [x0, #232]
     39c:	bl	118 <ext2fs_free_inode_cache>
     3a0:	ldr	x0, [sp, #24]
     3a4:	str	xzr, [x0, #232]
     3a8:	ldr	x0, [sp, #32]
     3ac:	ldp	x29, x30, [sp], #48
     3b0:	ret

00000000000003b4 <ext2fs_open_inode_scan>:
     3b4:	stp	x29, x30, [sp, #-96]!
     3b8:	mov	x29, sp
     3bc:	str	x19, [sp, #16]
     3c0:	str	x0, [sp, #56]
     3c4:	str	w1, [sp, #52]
     3c8:	str	x2, [sp, #40]
     3cc:	ldr	x0, [sp, #56]
     3d0:	ldr	x1, [x0]
     3d4:	mov	x0, #0xb701                	// #46849
     3d8:	movk	x0, #0x7f2b, lsl #16
     3dc:	cmp	x1, x0
     3e0:	b.eq	3f0 <ext2fs_open_inode_scan+0x3c>  // b.none
     3e4:	mov	x0, #0xb701                	// #46849
     3e8:	movk	x0, #0x7f2b, lsl #16
     3ec:	b	7fc <ext2fs_open_inode_scan+0x448>
     3f0:	ldr	x0, [sp, #56]
     3f4:	ldr	x0, [x0, #136]
     3f8:	cmp	x0, #0x0
     3fc:	b.ne	468 <ext2fs_open_inode_scan+0xb4>  // b.any
     400:	ldr	x0, [sp, #56]
     404:	ldr	x0, [x0, #96]
     408:	str	x0, [sp, #88]
     40c:	ldr	x0, [sp, #56]
     410:	str	xzr, [x0, #96]
     414:	ldr	x0, [sp, #56]
     418:	add	x0, x0, #0x88
     41c:	mov	x1, x0
     420:	ldr	x0, [sp, #56]
     424:	bl	0 <ext2fs_read_bb_inode>
     428:	str	x0, [sp, #80]
     42c:	ldr	x0, [sp, #80]
     430:	cmp	x0, #0x0
     434:	b.eq	45c <ext2fs_open_inode_scan+0xa8>  // b.none
     438:	ldr	x0, [sp, #56]
     43c:	ldr	x0, [x0, #136]
     440:	cmp	x0, #0x0
     444:	b.eq	45c <ext2fs_open_inode_scan+0xa8>  // b.none
     448:	ldr	x0, [sp, #56]
     44c:	ldr	x0, [x0, #136]
     450:	bl	0 <ext2fs_badblocks_list_free>
     454:	ldr	x0, [sp, #56]
     458:	str	xzr, [x0, #136]
     45c:	ldr	x0, [sp, #56]
     460:	ldr	x1, [sp, #88]
     464:	str	x1, [x0, #96]
     468:	add	x0, sp, #0x40
     46c:	mov	x1, x0
     470:	mov	x0, #0x90                  	// #144
     474:	bl	0 <ext2fs_get_mem>
     478:	str	x0, [sp, #80]
     47c:	ldr	x0, [sp, #80]
     480:	cmp	x0, #0x0
     484:	b.eq	490 <ext2fs_open_inode_scan+0xdc>  // b.none
     488:	ldr	x0, [sp, #80]
     48c:	b	7fc <ext2fs_open_inode_scan+0x448>
     490:	ldr	x0, [sp, #64]
     494:	mov	x2, #0x90                  	// #144
     498:	mov	w1, #0x0                   	// #0
     49c:	bl	0 <memset>
     4a0:	ldr	x0, [sp, #64]
     4a4:	mov	x1, #0xb704                	// #46852
     4a8:	movk	x1, #0x7f2b, lsl #16
     4ac:	str	x1, [x0]
     4b0:	ldr	x0, [sp, #64]
     4b4:	ldr	x1, [sp, #56]
     4b8:	str	x1, [x0, #8]
     4bc:	ldr	x0, [sp, #56]
     4c0:	ldr	x0, [x0, #32]
     4c4:	ldr	w0, [x0, #76]
     4c8:	cmp	w0, #0x0
     4cc:	b.eq	4e0 <ext2fs_open_inode_scan+0x12c>  // b.none
     4d0:	ldr	x0, [sp, #56]
     4d4:	ldr	x0, [x0, #32]
     4d8:	ldrh	w0, [x0, #88]
     4dc:	b	4e4 <ext2fs_open_inode_scan+0x130>
     4e0:	mov	w0, #0x80                  	// #128
     4e4:	ldr	x1, [sp, #64]
     4e8:	str	w0, [x1, #64]
     4ec:	ldr	x0, [sp, #64]
     4f0:	str	wzr, [x0, #80]
     4f4:	ldr	x0, [sp, #64]
     4f8:	str	wzr, [x0, #32]
     4fc:	ldr	x0, [sp, #56]
     500:	ldr	w1, [x0, #48]
     504:	ldr	x0, [sp, #64]
     508:	sub	w1, w1, #0x1
     50c:	str	w1, [x0, #44]
     510:	ldr	w0, [sp, #52]
     514:	cmp	w0, #0x0
     518:	b.eq	524 <ext2fs_open_inode_scan+0x170>  // b.none
     51c:	ldr	w0, [sp, #52]
     520:	b	528 <ext2fs_open_inode_scan+0x174>
     524:	mov	w0, #0x8                   	// #8
     528:	ldr	x1, [sp, #64]
     52c:	str	w0, [x1, #48]
     530:	ldr	x0, [sp, #64]
     534:	ldr	x2, [x0, #8]
     538:	ldr	x0, [sp, #64]
     53c:	ldr	w0, [x0, #32]
     540:	ldr	x19, [sp, #64]
     544:	mov	w1, w0
     548:	mov	x0, x2
     54c:	bl	0 <ext2fs_inode_table_loc>
     550:	str	x0, [x19, #24]
     554:	ldr	x0, [sp, #64]
     558:	ldr	x0, [x0, #24]
     55c:	cmp	x0, #0x0
     560:	b.eq	5c8 <ext2fs_open_inode_scan+0x214>  // b.none
     564:	ldr	x0, [sp, #64]
     568:	ldr	x1, [x0, #24]
     56c:	ldr	x0, [sp, #56]
     570:	ldr	x0, [x0, #32]
     574:	ldr	w0, [x0, #20]
     578:	mov	w0, w0
     57c:	cmp	x1, x0
     580:	b.cc	5b4 <ext2fs_open_inode_scan+0x200>  // b.lo, b.ul, b.last
     584:	ldr	x0, [sp, #64]
     588:	ldr	x1, [x0, #24]
     58c:	ldr	x0, [sp, #56]
     590:	ldr	w0, [x0, #72]
     594:	mov	w0, w0
     598:	add	x0, x1, x0
     59c:	sub	x19, x0, #0x1
     5a0:	ldr	x0, [sp, #56]
     5a4:	ldr	x0, [x0, #32]
     5a8:	bl	0 <ext2fs_blocks_count>
     5ac:	cmp	x19, x0
     5b0:	b.cc	5c8 <ext2fs_open_inode_scan+0x214>  // b.lo, b.ul, b.last
     5b4:	add	x0, sp, #0x40
     5b8:	bl	0 <ext2fs_free_mem>
     5bc:	mov	x0, #0xb71a                	// #46874
     5c0:	movk	x0, #0x7f2b, lsl #16
     5c4:	b	7fc <ext2fs_open_inode_scan+0x448>
     5c8:	ldr	x0, [sp, #64]
     5cc:	ldr	x0, [x0, #8]
     5d0:	ldr	x1, [x0, #32]
     5d4:	ldr	x0, [sp, #64]
     5d8:	ldr	w1, [x1, #40]
     5dc:	str	w1, [x0, #36]
     5e0:	ldr	x0, [sp, #64]
     5e4:	ldr	x1, [x0, #8]
     5e8:	ldr	x0, [sp, #64]
     5ec:	ldr	w1, [x1, #72]
     5f0:	str	w1, [x0, #40]
     5f4:	ldr	x0, [sp, #56]
     5f8:	bl	50 <ext2fs_has_group_desc_csum>
     5fc:	cmp	w0, #0x0
     600:	b.eq	698 <ext2fs_open_inode_scan+0x2e4>  // b.none
     604:	ldr	x0, [sp, #64]
     608:	ldr	w0, [x0, #32]
     60c:	mov	w1, w0
     610:	ldr	x0, [sp, #56]
     614:	bl	0 <ext2fs_bg_itable_unused>
     618:	str	w0, [sp, #76]
     61c:	ldr	x0, [sp, #64]
     620:	ldr	w0, [x0, #36]
     624:	ldr	w1, [sp, #76]
     628:	cmp	w1, w0
     62c:	b.cs	64c <ext2fs_open_inode_scan+0x298>  // b.hs, b.nlast
     630:	ldr	x0, [sp, #64]
     634:	ldr	w2, [x0, #36]
     638:	ldr	x0, [sp, #64]
     63c:	ldr	w1, [sp, #76]
     640:	sub	w1, w2, w1
     644:	str	w1, [x0, #36]
     648:	b	654 <ext2fs_open_inode_scan+0x2a0>
     64c:	ldr	x0, [sp, #64]
     650:	str	wzr, [x0, #36]
     654:	ldr	x0, [sp, #64]
     658:	ldr	w1, [x0, #36]
     65c:	ldr	x0, [sp, #56]
     660:	ldr	w0, [x0, #40]
     664:	ldr	x2, [sp, #64]
     668:	ldr	w2, [x2, #64]
     66c:	udiv	w0, w0, w2
     670:	add	w0, w1, w0
     674:	sub	w0, w0, #0x1
     678:	ldr	x1, [sp, #64]
     67c:	ldr	w1, [x1, #64]
     680:	mul	w2, w0, w1
     684:	ldr	x0, [sp, #56]
     688:	ldr	w1, [x0, #40]
     68c:	ldr	x0, [sp, #64]
     690:	udiv	w1, w2, w1
     694:	str	w1, [x0, #40]
     698:	ldr	x0, [sp, #56]
     69c:	ldr	x3, [x0, #8]
     6a0:	ldr	x0, [sp, #64]
     6a4:	ldr	w0, [x0, #48]
     6a8:	mov	w1, w0
     6ac:	ldr	x0, [sp, #64]
     6b0:	add	x0, x0, #0x38
     6b4:	mov	x2, x0
     6b8:	mov	x0, x3
     6bc:	bl	0 <io_channel_alloc_buf>
     6c0:	str	x0, [sp, #80]
     6c4:	ldr	x0, [sp, #64]
     6c8:	str	xzr, [x0, #96]
     6cc:	ldr	x0, [sp, #64]
     6d0:	str	xzr, [x0, #104]
     6d4:	ldr	x0, [sp, #64]
     6d8:	str	wzr, [x0, #112]
     6dc:	ldr	x0, [sp, #80]
     6e0:	cmp	x0, #0x0
     6e4:	b.eq	6f8 <ext2fs_open_inode_scan+0x344>  // b.none
     6e8:	add	x0, sp, #0x40
     6ec:	bl	0 <ext2fs_free_mem>
     6f0:	ldr	x0, [sp, #80]
     6f4:	b	7fc <ext2fs_open_inode_scan+0x448>
     6f8:	ldr	x0, [sp, #64]
     6fc:	ldr	w0, [x0, #64]
     700:	mov	w1, w0
     704:	ldr	x0, [sp, #64]
     708:	ldr	w0, [x0, #48]
     70c:	add	w0, w1, w0
     710:	mov	w2, w0
     714:	ldr	x0, [sp, #64]
     718:	add	x0, x0, #0x58
     71c:	mov	x1, x0
     720:	mov	x0, x2
     724:	bl	0 <ext2fs_get_mem>
     728:	str	x0, [sp, #80]
     72c:	ldr	x0, [sp, #80]
     730:	cmp	x0, #0x0
     734:	b.eq	754 <ext2fs_open_inode_scan+0x3a0>  // b.none
     738:	ldr	x0, [sp, #64]
     73c:	add	x0, x0, #0x38
     740:	bl	0 <ext2fs_free_mem>
     744:	add	x0, sp, #0x40
     748:	bl	0 <ext2fs_free_mem>
     74c:	ldr	x0, [sp, #80]
     750:	b	7fc <ext2fs_open_inode_scan+0x448>
     754:	ldr	x0, [sp, #64]
     758:	ldr	x1, [x0, #88]
     75c:	ldr	x0, [sp, #64]
     760:	ldr	w0, [x0, #64]
     764:	sxtw	x0, w0
     768:	add	x3, x1, x0
     76c:	ldr	x0, [sp, #64]
     770:	ldr	w0, [x0, #48]
     774:	mov	w0, w0
     778:	mov	x2, x0
     77c:	mov	w1, #0x0                   	// #0
     780:	mov	x0, x3
     784:	bl	0 <memset>
     788:	ldr	x0, [sp, #64]
     78c:	ldr	x0, [x0, #8]
     790:	ldr	x0, [x0, #136]
     794:	cmp	x0, #0x0
     798:	b.eq	7c8 <ext2fs_open_inode_scan+0x414>  // b.none
     79c:	ldr	x0, [sp, #64]
     7a0:	ldr	x0, [x0, #8]
     7a4:	ldr	x0, [x0, #136]
     7a8:	ldr	w0, [x0, #4]
     7ac:	cmp	w0, #0x0
     7b0:	b.eq	7c8 <ext2fs_open_inode_scan+0x414>  // b.none
     7b4:	ldr	x0, [sp, #64]
     7b8:	ldr	w1, [x0, #116]
     7bc:	ldr	x0, [sp, #64]
     7c0:	orr	w1, w1, #0x1
     7c4:	str	w1, [x0, #116]
     7c8:	ldr	x0, [sp, #56]
     7cc:	bl	50 <ext2fs_has_group_desc_csum>
     7d0:	cmp	w0, #0x0
     7d4:	b.eq	7ec <ext2fs_open_inode_scan+0x438>  // b.none
     7d8:	ldr	x0, [sp, #64]
     7dc:	ldr	w1, [x0, #116]
     7e0:	ldr	x0, [sp, #64]
     7e4:	orr	w1, w1, #0x10
     7e8:	str	w1, [x0, #116]
     7ec:	ldr	x1, [sp, #64]
     7f0:	ldr	x0, [sp, #40]
     7f4:	str	x1, [x0]
     7f8:	mov	x0, #0x0                   	// #0
     7fc:	ldr	x19, [sp, #16]
     800:	ldp	x29, x30, [sp], #96
     804:	ret

0000000000000808 <ext2fs_close_inode_scan>:
     808:	stp	x29, x30, [sp, #-32]!
     80c:	mov	x29, sp
     810:	str	x0, [sp, #24]
     814:	ldr	x0, [sp, #24]
     818:	cmp	x0, #0x0
     81c:	b.eq	86c <ext2fs_close_inode_scan+0x64>  // b.none
     820:	ldr	x0, [sp, #24]
     824:	ldr	x1, [x0]
     828:	mov	x0, #0xb704                	// #46852
     82c:	movk	x0, #0x7f2b, lsl #16
     830:	cmp	x1, x0
     834:	b.ne	86c <ext2fs_close_inode_scan+0x64>  // b.any
     838:	ldr	x0, [sp, #24]
     83c:	add	x0, x0, #0x38
     840:	bl	0 <ext2fs_free_mem>
     844:	ldr	x0, [sp, #24]
     848:	str	xzr, [x0, #56]
     84c:	ldr	x0, [sp, #24]
     850:	add	x0, x0, #0x58
     854:	bl	0 <ext2fs_free_mem>
     858:	ldr	x0, [sp, #24]
     85c:	str	xzr, [x0, #88]
     860:	add	x0, sp, #0x18
     864:	bl	0 <ext2fs_free_mem>
     868:	b	870 <ext2fs_close_inode_scan+0x68>
     86c:	nop
     870:	ldp	x29, x30, [sp], #32
     874:	ret

0000000000000878 <ext2fs_set_inode_callback>:
     878:	sub	sp, sp, #0x20
     87c:	str	x0, [sp, #24]
     880:	str	x1, [sp, #16]
     884:	str	x2, [sp, #8]
     888:	ldr	x0, [sp, #24]
     88c:	cmp	x0, #0x0
     890:	b.eq	8c8 <ext2fs_set_inode_callback+0x50>  // b.none
     894:	ldr	x0, [sp, #24]
     898:	ldr	x1, [x0]
     89c:	mov	x0, #0xb704                	// #46852
     8a0:	movk	x0, #0x7f2b, lsl #16
     8a4:	cmp	x1, x0
     8a8:	b.ne	8c8 <ext2fs_set_inode_callback+0x50>  // b.any
     8ac:	ldr	x0, [sp, #24]
     8b0:	ldr	x1, [sp, #16]
     8b4:	str	x1, [x0, #96]
     8b8:	ldr	x0, [sp, #24]
     8bc:	ldr	x1, [sp, #8]
     8c0:	str	x1, [x0, #104]
     8c4:	b	8cc <ext2fs_set_inode_callback+0x54>
     8c8:	nop
     8cc:	add	sp, sp, #0x20
     8d0:	ret

00000000000008d4 <ext2fs_inode_scan_flags>:
     8d4:	sub	sp, sp, #0x20
     8d8:	str	x0, [sp, #8]
     8dc:	str	w1, [sp, #4]
     8e0:	str	w2, [sp]
     8e4:	ldr	x0, [sp, #8]
     8e8:	cmp	x0, #0x0
     8ec:	b.eq	908 <ext2fs_inode_scan_flags+0x34>  // b.none
     8f0:	ldr	x0, [sp, #8]
     8f4:	ldr	x1, [x0]
     8f8:	mov	x0, #0xb704                	// #46852
     8fc:	movk	x0, #0x7f2b, lsl #16
     900:	cmp	x1, x0
     904:	b.eq	910 <ext2fs_inode_scan_flags+0x3c>  // b.none
     908:	mov	w0, #0x0                   	// #0
     90c:	b	954 <ext2fs_inode_scan_flags+0x80>
     910:	ldr	x0, [sp, #8]
     914:	ldr	w0, [x0, #116]
     918:	str	w0, [sp, #28]
     91c:	ldr	x0, [sp, #8]
     920:	ldr	w1, [x0, #116]
     924:	ldr	w0, [sp]
     928:	mvn	w0, w0
     92c:	and	w1, w1, w0
     930:	ldr	x0, [sp, #8]
     934:	str	w1, [x0, #116]
     938:	ldr	x0, [sp, #8]
     93c:	ldr	w1, [x0, #116]
     940:	ldr	w0, [sp, #4]
     944:	orr	w1, w1, w0
     948:	ldr	x0, [sp, #8]
     94c:	str	w1, [x0, #116]
     950:	ldr	w0, [sp, #28]
     954:	add	sp, sp, #0x20
     958:	ret

000000000000095c <get_next_blockgroup>:
     95c:	stp	x29, x30, [sp, #-64]!
     960:	mov	x29, sp
     964:	str	x19, [sp, #16]
     968:	str	x0, [sp, #40]
     96c:	ldr	x0, [sp, #40]
     970:	ldr	x0, [x0, #8]
     974:	str	x0, [sp, #56]
     978:	ldr	x0, [sp, #40]
     97c:	ldr	w0, [x0, #32]
     980:	add	w1, w0, #0x1
     984:	ldr	x0, [sp, #40]
     988:	str	w1, [x0, #32]
     98c:	ldr	x0, [sp, #40]
     990:	ldr	w0, [x0, #44]
     994:	sub	w1, w0, #0x1
     998:	ldr	x0, [sp, #40]
     99c:	str	w1, [x0, #44]
     9a0:	ldr	x0, [sp, #40]
     9a4:	ldr	x2, [x0, #8]
     9a8:	ldr	x0, [sp, #40]
     9ac:	ldr	w0, [x0, #32]
     9b0:	mov	w1, w0
     9b4:	mov	x0, x2
     9b8:	bl	0 <ext2fs_inode_table_loc>
     9bc:	mov	x1, x0
     9c0:	ldr	x0, [sp, #40]
     9c4:	str	x1, [x0, #24]
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldr	w1, [x0, #32]
     9d0:	ldr	x0, [sp, #56]
     9d4:	ldr	x0, [x0, #32]
     9d8:	ldr	w0, [x0, #40]
     9dc:	mul	w1, w1, w0
     9e0:	ldr	x0, [sp, #40]
     9e4:	str	w1, [x0, #16]
     9e8:	ldr	x0, [sp, #40]
     9ec:	str	wzr, [x0, #80]
     9f0:	ldr	x0, [sp, #56]
     9f4:	ldr	x0, [x0, #32]
     9f8:	ldr	w1, [x0, #40]
     9fc:	ldr	x0, [sp, #40]
     a00:	str	w1, [x0, #36]
     a04:	ldr	x0, [sp, #56]
     a08:	ldr	w1, [x0, #72]
     a0c:	ldr	x0, [sp, #40]
     a10:	str	w1, [x0, #40]
     a14:	ldr	x0, [sp, #56]
     a18:	bl	50 <ext2fs_has_group_desc_csum>
     a1c:	cmp	w0, #0x0
     a20:	b.eq	ab8 <get_next_blockgroup+0x15c>  // b.none
     a24:	ldr	x0, [sp, #40]
     a28:	ldr	w0, [x0, #32]
     a2c:	mov	w1, w0
     a30:	ldr	x0, [sp, #56]
     a34:	bl	0 <ext2fs_bg_itable_unused>
     a38:	str	w0, [sp, #52]
     a3c:	ldr	x0, [sp, #40]
     a40:	ldr	w0, [x0, #36]
     a44:	ldr	w1, [sp, #52]
     a48:	cmp	w1, w0
     a4c:	b.cs	a6c <get_next_blockgroup+0x110>  // b.hs, b.nlast
     a50:	ldr	x0, [sp, #40]
     a54:	ldr	w1, [x0, #36]
     a58:	ldr	w0, [sp, #52]
     a5c:	sub	w1, w1, w0
     a60:	ldr	x0, [sp, #40]
     a64:	str	w1, [x0, #36]
     a68:	b	a74 <get_next_blockgroup+0x118>
     a6c:	ldr	x0, [sp, #40]
     a70:	str	wzr, [x0, #36]
     a74:	ldr	x0, [sp, #40]
     a78:	ldr	w1, [x0, #36]
     a7c:	ldr	x0, [sp, #56]
     a80:	ldr	w0, [x0, #40]
     a84:	ldr	x2, [sp, #40]
     a88:	ldr	w2, [x2, #64]
     a8c:	udiv	w0, w0, w2
     a90:	add	w0, w1, w0
     a94:	sub	w0, w0, #0x1
     a98:	ldr	x1, [sp, #40]
     a9c:	ldr	w1, [x1, #64]
     aa0:	mul	w1, w0, w1
     aa4:	ldr	x0, [sp, #56]
     aa8:	ldr	w0, [x0, #40]
     aac:	udiv	w1, w1, w0
     ab0:	ldr	x0, [sp, #40]
     ab4:	str	w1, [x0, #40]
     ab8:	ldr	x0, [sp, #40]
     abc:	ldr	x0, [x0, #24]
     ac0:	cmp	x0, #0x0
     ac4:	b.eq	b24 <get_next_blockgroup+0x1c8>  // b.none
     ac8:	ldr	x0, [sp, #40]
     acc:	ldr	x1, [x0, #24]
     ad0:	ldr	x0, [sp, #56]
     ad4:	ldr	x0, [x0, #32]
     ad8:	ldr	w0, [x0, #20]
     adc:	mov	w0, w0
     ae0:	cmp	x1, x0
     ae4:	b.cc	b18 <get_next_blockgroup+0x1bc>  // b.lo, b.ul, b.last
     ae8:	ldr	x0, [sp, #40]
     aec:	ldr	x1, [x0, #24]
     af0:	ldr	x0, [sp, #56]
     af4:	ldr	w0, [x0, #72]
     af8:	mov	w0, w0
     afc:	add	x0, x1, x0
     b00:	sub	x19, x0, #0x1
     b04:	ldr	x0, [sp, #56]
     b08:	ldr	x0, [x0, #32]
     b0c:	bl	0 <ext2fs_blocks_count>
     b10:	cmp	x19, x0
     b14:	b.cc	b24 <get_next_blockgroup+0x1c8>  // b.lo, b.ul, b.last
     b18:	mov	x0, #0xb71a                	// #46874
     b1c:	movk	x0, #0x7f2b, lsl #16
     b20:	b	b28 <get_next_blockgroup+0x1cc>
     b24:	mov	x0, #0x0                   	// #0
     b28:	ldr	x19, [sp, #16]
     b2c:	ldp	x29, x30, [sp], #64
     b30:	ret

0000000000000b34 <ext2fs_inode_scan_goto_blockgroup>:
     b34:	stp	x29, x30, [sp, #-32]!
     b38:	mov	x29, sp
     b3c:	str	x0, [sp, #24]
     b40:	str	w1, [sp, #20]
     b44:	ldr	w0, [sp, #20]
     b48:	sub	w0, w0, #0x1
     b4c:	mov	w1, w0
     b50:	ldr	x0, [sp, #24]
     b54:	str	w1, [x0, #32]
     b58:	ldr	x0, [sp, #24]
     b5c:	ldr	x0, [x0, #8]
     b60:	ldr	w1, [x0, #48]
     b64:	ldr	w0, [sp, #20]
     b68:	sub	w1, w1, w0
     b6c:	ldr	x0, [sp, #24]
     b70:	str	w1, [x0, #44]
     b74:	ldr	x0, [sp, #24]
     b78:	bl	95c <get_next_blockgroup>
     b7c:	ldp	x29, x30, [sp], #32
     b80:	ret

0000000000000b84 <check_for_inode_bad_blocks>:
     b84:	sub	sp, sp, #0x20
     b88:	str	x0, [sp, #8]
     b8c:	str	x1, [sp]
     b90:	ldr	x0, [sp, #8]
     b94:	ldr	x0, [x0, #24]
     b98:	str	x0, [sp, #24]
     b9c:	ldr	x0, [sp, #8]
     ba0:	ldr	x0, [x0, #8]
     ba4:	ldr	x0, [x0, #136]
     ba8:	str	x0, [sp, #16]
     bac:	ldr	x0, [sp, #24]
     bb0:	cmp	x0, #0x0
     bb4:	b.ne	c08 <check_for_inode_bad_blocks+0x84>  // b.any
     bb8:	mov	x0, #0x0                   	// #0
     bbc:	b	d44 <check_for_inode_bad_blocks+0x1c0>
     bc0:	ldr	x0, [sp, #8]
     bc4:	ldr	w0, [x0, #112]
     bc8:	add	w1, w0, #0x1
     bcc:	ldr	x0, [sp, #8]
     bd0:	str	w1, [x0, #112]
     bd4:	ldr	x0, [sp, #8]
     bd8:	ldr	w1, [x0, #112]
     bdc:	ldr	x0, [sp, #16]
     be0:	ldr	w0, [x0, #4]
     be4:	cmp	w1, w0
     be8:	b.lt	c08 <check_for_inode_bad_blocks+0x84>  // b.tstop
     bec:	ldr	x0, [sp, #8]
     bf0:	ldr	w0, [x0, #116]
     bf4:	and	w1, w0, #0xfffffffe
     bf8:	ldr	x0, [sp, #8]
     bfc:	str	w1, [x0, #116]
     c00:	mov	x0, #0x0                   	// #0
     c04:	b	d44 <check_for_inode_bad_blocks+0x1c0>
     c08:	ldr	x0, [sp, #16]
     c0c:	ldr	x1, [x0, #16]
     c10:	ldr	x0, [sp, #8]
     c14:	ldr	w0, [x0, #112]
     c18:	sxtw	x0, w0
     c1c:	lsl	x0, x0, #2
     c20:	add	x0, x1, x0
     c24:	ldr	w0, [x0]
     c28:	mov	w0, w0
     c2c:	ldr	x1, [sp, #24]
     c30:	cmp	x1, x0
     c34:	b.hi	bc0 <check_for_inode_bad_blocks+0x3c>  // b.pmore
     c38:	ldr	x0, [sp, #16]
     c3c:	ldr	x1, [x0, #16]
     c40:	ldr	x0, [sp, #8]
     c44:	ldr	w0, [x0, #112]
     c48:	sxtw	x0, w0
     c4c:	lsl	x0, x0, #2
     c50:	add	x0, x1, x0
     c54:	ldr	w0, [x0]
     c58:	mov	w0, w0
     c5c:	ldr	x1, [sp, #24]
     c60:	cmp	x1, x0
     c64:	b.ne	cd0 <check_for_inode_bad_blocks+0x14c>  // b.any
     c68:	ldr	x0, [sp, #8]
     c6c:	ldr	w0, [x0, #116]
     c70:	orr	w1, w0, #0x2
     c74:	ldr	x0, [sp, #8]
     c78:	str	w1, [x0, #116]
     c7c:	ldr	x0, [sp]
     c80:	mov	x1, #0x1                   	// #1
     c84:	str	x1, [x0]
     c88:	ldr	x0, [sp, #8]
     c8c:	ldr	w0, [x0, #112]
     c90:	add	w1, w0, #0x1
     c94:	ldr	x0, [sp, #8]
     c98:	str	w1, [x0, #112]
     c9c:	ldr	x0, [sp, #8]
     ca0:	ldr	w1, [x0, #112]
     ca4:	ldr	x0, [sp, #16]
     ca8:	ldr	w0, [x0, #4]
     cac:	cmp	w1, w0
     cb0:	b.lt	cc8 <check_for_inode_bad_blocks+0x144>  // b.tstop
     cb4:	ldr	x0, [sp, #8]
     cb8:	ldr	w0, [x0, #116]
     cbc:	and	w1, w0, #0xfffffffe
     cc0:	ldr	x0, [sp, #8]
     cc4:	str	w1, [x0, #116]
     cc8:	mov	x0, #0x0                   	// #0
     ccc:	b	d44 <check_for_inode_bad_blocks+0x1c0>
     cd0:	ldr	x0, [sp]
     cd4:	ldr	x1, [x0]
     cd8:	ldr	x0, [sp, #24]
     cdc:	add	x1, x1, x0
     ce0:	ldr	x0, [sp, #16]
     ce4:	ldr	x2, [x0, #16]
     ce8:	ldr	x0, [sp, #8]
     cec:	ldr	w0, [x0, #112]
     cf0:	sxtw	x0, w0
     cf4:	lsl	x0, x0, #2
     cf8:	add	x0, x2, x0
     cfc:	ldr	w0, [x0]
     d00:	mov	w0, w0
     d04:	cmp	x1, x0
     d08:	b.ls	d40 <check_for_inode_bad_blocks+0x1bc>  // b.plast
     d0c:	ldr	x0, [sp, #16]
     d10:	ldr	x1, [x0, #16]
     d14:	ldr	x0, [sp, #8]
     d18:	ldr	w0, [x0, #112]
     d1c:	sxtw	x0, w0
     d20:	lsl	x0, x0, #2
     d24:	add	x0, x1, x0
     d28:	ldr	w0, [x0]
     d2c:	ldr	x1, [sp, #24]
     d30:	sub	w0, w0, w1
     d34:	sxtw	x1, w0
     d38:	ldr	x0, [sp]
     d3c:	str	x1, [x0]
     d40:	mov	x0, #0x0                   	// #0
     d44:	add	sp, sp, #0x20
     d48:	ret

0000000000000d4c <block_map_looks_insane>:
     d4c:	stp	x29, x30, [sp, #-64]!
     d50:	mov	x29, sp
     d54:	str	x19, [sp, #16]
     d58:	str	x0, [sp, #40]
     d5c:	str	x1, [sp, #32]
     d60:	ldr	x0, [sp, #32]
     d64:	ldr	w0, [x0, #32]
     d68:	and	w0, w0, #0x10000000
     d6c:	cmp	w0, #0x0
     d70:	b.ne	d88 <block_map_looks_insane+0x3c>  // b.any
     d74:	ldr	x0, [sp, #32]
     d78:	ldr	w0, [x0, #32]
     d7c:	and	w0, w0, #0x80000
     d80:	cmp	w0, #0x0
     d84:	b.eq	d90 <block_map_looks_insane+0x44>  // b.none
     d88:	mov	w0, #0x0                   	// #0
     d8c:	b	eec <block_map_looks_insane+0x1a0>
     d90:	ldr	x0, [sp, #32]
     d94:	ldrh	w0, [x0]
     d98:	and	w0, w0, #0xf000
     d9c:	cmp	w0, #0x8, lsl #12
     da0:	b.eq	dd4 <block_map_looks_insane+0x88>  // b.none
     da4:	ldr	x0, [sp, #32]
     da8:	ldrh	w0, [x0]
     dac:	and	w0, w0, #0xf000
     db0:	cmp	w0, #0xa, lsl #12
     db4:	b.eq	dd4 <block_map_looks_insane+0x88>  // b.none
     db8:	ldr	x0, [sp, #32]
     dbc:	ldrh	w0, [x0]
     dc0:	and	w0, w0, #0xf000
     dc4:	cmp	w0, #0x4, lsl #12
     dc8:	b.eq	dd4 <block_map_looks_insane+0x88>  // b.none
     dcc:	mov	w0, #0x0                   	// #0
     dd0:	b	eec <block_map_looks_insane+0x1a0>
     dd4:	ldr	x0, [sp, #32]
     dd8:	ldrh	w0, [x0]
     ddc:	and	w0, w0, #0xf000
     de0:	cmp	w0, #0xa, lsl #12
     de4:	b.ne	e18 <block_map_looks_insane+0xcc>  // b.any
     de8:	ldr	x0, [sp, #32]
     dec:	ldr	w0, [x0, #4]
     df0:	mov	w1, w0
     df4:	ldr	x0, [sp, #32]
     df8:	ldr	w0, [x0, #108]
     dfc:	mov	w0, w0
     e00:	lsl	x0, x0, #32
     e04:	orr	x0, x1, x0
     e08:	cmp	x0, #0x3c
     e0c:	b.hi	e18 <block_map_looks_insane+0xcc>  // b.pmore
     e10:	mov	w0, #0x0                   	// #0
     e14:	b	eec <block_map_looks_insane+0x1a0>
     e18:	ldr	x0, [sp, #32]
     e1c:	ldrh	w0, [x0, #26]
     e20:	cmp	w0, #0x0
     e24:	b.ne	e30 <block_map_looks_insane+0xe4>  // b.any
     e28:	mov	w0, #0x0                   	// #0
     e2c:	b	eec <block_map_looks_insane+0x1a0>
     e30:	str	wzr, [sp, #60]
     e34:	str	wzr, [sp, #56]
     e38:	b	ed0 <block_map_looks_insane+0x184>
     e3c:	ldr	x1, [sp, #32]
     e40:	ldr	w0, [sp, #60]
     e44:	add	x0, x0, #0x8
     e48:	lsl	x0, x0, #2
     e4c:	add	x0, x1, x0
     e50:	ldr	w0, [x0, #8]
     e54:	cmp	w0, #0x0
     e58:	b.eq	ec4 <block_map_looks_insane+0x178>  // b.none
     e5c:	ldr	x1, [sp, #32]
     e60:	ldr	w0, [sp, #60]
     e64:	add	x0, x0, #0x8
     e68:	lsl	x0, x0, #2
     e6c:	add	x0, x1, x0
     e70:	ldr	w1, [x0, #8]
     e74:	ldr	x0, [sp, #40]
     e78:	ldr	x0, [x0, #32]
     e7c:	ldr	w0, [x0, #20]
     e80:	cmp	w1, w0
     e84:	b.cc	eb8 <block_map_looks_insane+0x16c>  // b.lo, b.ul, b.last
     e88:	ldr	x1, [sp, #32]
     e8c:	ldr	w0, [sp, #60]
     e90:	add	x0, x0, #0x8
     e94:	lsl	x0, x0, #2
     e98:	add	x0, x1, x0
     e9c:	ldr	w0, [x0, #8]
     ea0:	mov	w19, w0
     ea4:	ldr	x0, [sp, #40]
     ea8:	ldr	x0, [x0, #32]
     eac:	bl	0 <ext2fs_blocks_count>
     eb0:	cmp	x19, x0
     eb4:	b.cc	ec4 <block_map_looks_insane+0x178>  // b.lo, b.ul, b.last
     eb8:	ldr	w0, [sp, #56]
     ebc:	add	w0, w0, #0x1
     ec0:	str	w0, [sp, #56]
     ec4:	ldr	w0, [sp, #60]
     ec8:	add	w0, w0, #0x1
     ecc:	str	w0, [sp, #60]
     ed0:	ldr	w0, [sp, #60]
     ed4:	cmp	w0, #0xe
     ed8:	b.ls	e3c <block_map_looks_insane+0xf0>  // b.plast
     edc:	ldr	w0, [sp, #56]
     ee0:	cmp	w0, #0x7
     ee4:	cset	w0, hi  // hi = pmore
     ee8:	and	w0, w0, #0xff
     eec:	ldr	x19, [sp, #16]
     ef0:	ldp	x29, x30, [sp], #64
     ef4:	ret

0000000000000ef8 <extent_head_looks_insane>:
     ef8:	stp	x29, x30, [sp, #-32]!
     efc:	mov	x29, sp
     f00:	str	x0, [sp, #24]
     f04:	ldr	x0, [sp, #24]
     f08:	ldr	w0, [x0, #32]
     f0c:	and	w0, w0, #0x80000
     f10:	cmp	w0, #0x0
     f14:	b.eq	f30 <extent_head_looks_insane+0x38>  // b.none
     f18:	ldr	x0, [sp, #24]
     f1c:	add	x0, x0, #0x28
     f20:	mov	w1, #0x3c                  	// #60
     f24:	bl	0 <ext2fs_extent_header_verify>
     f28:	cmp	x0, #0x0
     f2c:	b.ne	f38 <extent_head_looks_insane+0x40>  // b.any
     f30:	mov	w0, #0x0                   	// #0
     f34:	b	f3c <extent_head_looks_insane+0x44>
     f38:	mov	w0, #0x1                   	// #1
     f3c:	ldp	x29, x30, [sp], #32
     f40:	ret

0000000000000f44 <check_inode_block_sanity>:
     f44:	stp	x29, x30, [sp, #-96]!
     f48:	mov	x29, sp
     f4c:	str	x0, [sp, #24]
     f50:	str	x1, [sp, #16]
     f54:	ldr	x0, [sp, #24]
     f58:	ldr	w0, [x0, #116]
     f5c:	and	w0, w0, #0x20
     f60:	cmp	w0, #0x0
     f64:	b.eq	1298 <check_inode_block_sanity+0x354>  // b.none
     f68:	ldr	x0, [sp, #24]
     f6c:	ldr	w0, [x0, #36]
     f70:	str	w0, [sp, #88]
     f74:	ldr	x0, [sp, #24]
     f78:	ldr	x0, [x0, #8]
     f7c:	ldr	w0, [x0, #40]
     f80:	mov	w1, w0
     f84:	ldr	x0, [sp, #16]
     f88:	mul	x1, x1, x0
     f8c:	ldr	x0, [sp, #24]
     f90:	ldr	w0, [x0, #64]
     f94:	sxtw	x0, w0
     f98:	udiv	x0, x1, x0
     f9c:	str	w0, [sp, #64]
     fa0:	ldr	w1, [sp, #88]
     fa4:	ldr	w0, [sp, #64]
     fa8:	cmp	w1, w0
     fac:	b.ls	fb8 <check_inode_block_sanity+0x74>  // b.plast
     fb0:	ldr	w0, [sp, #64]
     fb4:	str	w0, [sp, #88]
     fb8:	ldr	x0, [sp, #24]
     fbc:	ldr	x0, [x0, #56]
     fc0:	str	x0, [sp, #72]
     fc4:	ldr	x0, [sp, #24]
     fc8:	ldr	w0, [x0, #16]
     fcc:	add	w0, w0, #0x1
     fd0:	str	w0, [sp, #92]
     fd4:	str	wzr, [sp, #84]
     fd8:	ldr	w0, [sp, #84]
     fdc:	str	w0, [sp, #80]
     fe0:	ldr	x0, [sp, #24]
     fe4:	ldr	x1, [x0, #88]
     fe8:	ldr	x0, [sp, #24]
     fec:	ldr	w0, [x0, #64]
     ff0:	sxtw	x0, w0
     ff4:	add	x0, x1, x0
     ff8:	str	x0, [sp, #56]
     ffc:	ldr	x0, [sp, #24]
    1000:	ldr	w0, [x0, #48]
    1004:	mov	w0, w0
    1008:	mov	x2, x0
    100c:	mov	w1, #0x0                   	// #0
    1010:	ldr	x0, [sp, #56]
    1014:	bl	0 <memset>
    1018:	ldr	x0, [sp, #24]
    101c:	ldr	x0, [x0, #8]
    1020:	ldr	x0, [x0, #32]
    1024:	ldr	w0, [x0, #24]
    1028:	mov	w1, #0x400                 	// #1024
    102c:	lsl	w1, w1, w0
    1030:	ldr	x0, [sp, #24]
    1034:	ldr	x0, [x0, #8]
    1038:	ldr	x0, [x0, #32]
    103c:	ldr	w0, [x0, #76]
    1040:	cmp	w0, #0x0
    1044:	b.eq	105c <check_inode_block_sanity+0x118>  // b.none
    1048:	ldr	x0, [sp, #24]
    104c:	ldr	x0, [x0, #8]
    1050:	ldr	x0, [x0, #32]
    1054:	ldrh	w0, [x0, #88]
    1058:	b	1060 <check_inode_block_sanity+0x11c>
    105c:	mov	w0, #0x80                  	// #128
    1060:	sdiv	w0, w1, w0
    1064:	str	w0, [sp, #52]
    1068:	ldr	w0, [sp, #52]
    106c:	cmp	w0, #0x1
    1070:	b.ls	12a0 <check_inode_block_sanity+0x35c>  // b.plast
    1074:	b	1288 <check_inode_block_sanity+0x344>
    1078:	ldr	x0, [sp, #24]
    107c:	ldr	x0, [x0, #56]
    1080:	ldr	x1, [sp, #72]
    1084:	sub	x1, x1, x0
    1088:	ldr	x0, [sp, #24]
    108c:	ldr	x0, [x0, #8]
    1090:	ldr	w0, [x0, #40]
    1094:	mov	w0, w0
    1098:	sdiv	x0, x1, x0
    109c:	str	w0, [sp, #48]
    10a0:	ldr	x0, [sp, #24]
    10a4:	ldr	x0, [x0, #8]
    10a8:	ldr	x2, [sp, #72]
    10ac:	ldr	w1, [sp, #92]
    10b0:	bl	0 <ext2fs_inode_csum_verify>
    10b4:	cmp	w0, #0x0
    10b8:	cset	w0, eq  // eq = none
    10bc:	and	w0, w0, #0xff
    10c0:	str	w0, [sp, #44]
    10c4:	ldr	x0, [sp, #72]
    10c8:	str	x0, [sp, #32]
    10cc:	ldr	w0, [sp, #44]
    10d0:	cmp	w0, #0x0
    10d4:	b.eq	10f4 <check_inode_block_sanity+0x1b0>  // b.none
    10d8:	ldr	w0, [sp, #80]
    10dc:	add	w0, w0, #0x1
    10e0:	str	w0, [sp, #80]
    10e4:	ldr	w0, [sp, #84]
    10e8:	add	w0, w0, #0x1
    10ec:	str	w0, [sp, #84]
    10f0:	b	1128 <check_inode_block_sanity+0x1e4>
    10f4:	ldr	x0, [sp, #32]
    10f8:	bl	ef8 <extent_head_looks_insane>
    10fc:	cmp	w0, #0x0
    1100:	b.ne	111c <check_inode_block_sanity+0x1d8>  // b.any
    1104:	ldr	x0, [sp, #24]
    1108:	ldr	x0, [x0, #8]
    110c:	ldr	x1, [sp, #32]
    1110:	bl	d4c <block_map_looks_insane>
    1114:	cmp	w0, #0x0
    1118:	b.eq	1128 <check_inode_block_sanity+0x1e4>  // b.none
    111c:	ldr	w0, [sp, #84]
    1120:	add	w0, w0, #0x1
    1124:	str	w0, [sp, #84]
    1128:	ldr	w0, [sp, #52]
    112c:	lsr	w0, w0, #1
    1130:	ldr	w1, [sp, #84]
    1134:	cmp	w1, w0
    1138:	b.ls	11f8 <check_inode_block_sanity+0x2b4>  // b.plast
    113c:	ldr	w0, [sp, #48]
    1140:	ldr	x1, [sp, #56]
    1144:	add	x0, x1, x0
    1148:	ldrb	w1, [x0]
    114c:	ldr	w0, [sp, #48]
    1150:	ldr	x2, [sp, #56]
    1154:	add	x0, x2, x0
    1158:	orr	w1, w1, #0x2
    115c:	and	w1, w1, #0xff
    1160:	strb	w1, [x0]
    1164:	ldr	w0, [sp, #92]
    1168:	sub	w0, w0, #0x1
    116c:	ldr	w1, [sp, #52]
    1170:	udiv	w2, w0, w1
    1174:	ldr	w1, [sp, #52]
    1178:	mul	w1, w2, w1
    117c:	sub	w0, w0, w1
    1180:	ldr	w1, [sp, #52]
    1184:	sub	w0, w1, w0
    1188:	str	w0, [sp, #68]
    118c:	ldr	w1, [sp, #68]
    1190:	ldr	w0, [sp, #88]
    1194:	cmp	w1, w0
    1198:	b.ls	11a4 <check_inode_block_sanity+0x260>  // b.plast
    119c:	ldr	w0, [sp, #88]
    11a0:	str	w0, [sp, #68]
    11a4:	ldr	w1, [sp, #88]
    11a8:	ldr	w0, [sp, #68]
    11ac:	sub	w0, w1, w0
    11b0:	str	w0, [sp, #88]
    11b4:	ldr	x0, [sp, #24]
    11b8:	ldr	w0, [x0, #64]
    11bc:	mov	w1, w0
    11c0:	ldr	w0, [sp, #68]
    11c4:	mul	w0, w1, w0
    11c8:	mov	w0, w0
    11cc:	ldr	x1, [sp, #72]
    11d0:	add	x0, x1, x0
    11d4:	str	x0, [sp, #72]
    11d8:	ldr	w1, [sp, #92]
    11dc:	ldr	w0, [sp, #68]
    11e0:	add	w0, w1, w0
    11e4:	str	w0, [sp, #92]
    11e8:	str	wzr, [sp, #84]
    11ec:	ldr	w0, [sp, #84]
    11f0:	str	w0, [sp, #80]
    11f4:	b	1288 <check_inode_block_sanity+0x344>
    11f8:	ldr	w0, [sp, #92]
    11fc:	ldr	w1, [sp, #52]
    1200:	udiv	w2, w0, w1
    1204:	ldr	w1, [sp, #52]
    1208:	mul	w1, w2, w1
    120c:	sub	w0, w0, w1
    1210:	cmp	w0, #0x0
    1214:	b.ne	1258 <check_inode_block_sanity+0x314>  // b.any
    1218:	ldr	w0, [sp, #80]
    121c:	cmp	w0, #0x0
    1220:	b.ne	124c <check_inode_block_sanity+0x308>  // b.any
    1224:	ldr	w0, [sp, #48]
    1228:	ldr	x1, [sp, #56]
    122c:	add	x0, x1, x0
    1230:	ldrb	w1, [x0]
    1234:	ldr	w0, [sp, #48]
    1238:	ldr	x2, [sp, #56]
    123c:	add	x0, x2, x0
    1240:	orr	w1, w1, #0x1
    1244:	and	w1, w1, #0xff
    1248:	strb	w1, [x0]
    124c:	str	wzr, [sp, #84]
    1250:	ldr	w0, [sp, #84]
    1254:	str	w0, [sp, #80]
    1258:	ldr	w0, [sp, #88]
    125c:	sub	w0, w0, #0x1
    1260:	str	w0, [sp, #88]
    1264:	ldr	x0, [sp, #24]
    1268:	ldr	w0, [x0, #64]
    126c:	sxtw	x0, w0
    1270:	ldr	x1, [sp, #72]
    1274:	add	x0, x1, x0
    1278:	str	x0, [sp, #72]
    127c:	ldr	w0, [sp, #92]
    1280:	add	w0, w0, #0x1
    1284:	str	w0, [sp, #92]
    1288:	ldr	w0, [sp, #88]
    128c:	cmp	w0, #0x0
    1290:	b.ne	1078 <check_inode_block_sanity+0x134>  // b.any
    1294:	b	12a4 <check_inode_block_sanity+0x360>
    1298:	nop
    129c:	b	12a4 <check_inode_block_sanity+0x360>
    12a0:	nop
    12a4:	ldp	x29, x30, [sp], #96
    12a8:	ret

00000000000012ac <get_next_blocks>:
    12ac:	stp	x29, x30, [sp, #-48]!
    12b0:	mov	x29, sp
    12b4:	str	x0, [sp, #24]
    12b8:	ldr	x0, [sp, #24]
    12bc:	ldr	w0, [x0, #48]
    12c0:	mov	w0, w0
    12c4:	str	x0, [sp, #32]
    12c8:	ldr	x0, [sp, #24]
    12cc:	ldr	w0, [x0, #40]
    12d0:	mov	w1, w0
    12d4:	ldr	x0, [sp, #32]
    12d8:	cmp	x1, x0
    12dc:	b.cs	12f0 <get_next_blocks+0x44>  // b.hs, b.nlast
    12e0:	ldr	x0, [sp, #24]
    12e4:	ldr	w0, [x0, #40]
    12e8:	mov	w0, w0
    12ec:	str	x0, [sp, #32]
    12f0:	ldr	x0, [sp, #24]
    12f4:	ldr	w0, [x0, #116]
    12f8:	and	w0, w0, #0x2
    12fc:	cmp	w0, #0x0
    1300:	b.eq	133c <get_next_blocks+0x90>  // b.none
    1304:	ldr	x0, [sp, #24]
    1308:	ldr	w0, [x0, #80]
    130c:	cmp	w0, #0x0
    1310:	b.eq	1328 <get_next_blocks+0x7c>  // b.none
    1314:	ldr	x0, [sp, #24]
    1318:	ldr	w0, [x0, #116]
    131c:	orr	w1, w0, #0x4
    1320:	ldr	x0, [sp, #24]
    1324:	str	w1, [x0, #116]
    1328:	ldr	x0, [sp, #24]
    132c:	ldr	w0, [x0, #116]
    1330:	and	w1, w0, #0xfffffffd
    1334:	ldr	x0, [sp, #24]
    1338:	str	w1, [x0, #116]
    133c:	ldr	x0, [sp, #24]
    1340:	ldr	w0, [x0, #116]
    1344:	and	w0, w0, #0x1
    1348:	cmp	w0, #0x0
    134c:	b.eq	1378 <get_next_blocks+0xcc>  // b.none
    1350:	add	x0, sp, #0x20
    1354:	mov	x1, x0
    1358:	ldr	x0, [sp, #24]
    135c:	bl	b84 <check_for_inode_bad_blocks>
    1360:	str	x0, [sp, #40]
    1364:	ldr	x0, [sp, #40]
    1368:	cmp	x0, #0x0
    136c:	b.eq	1378 <get_next_blocks+0xcc>  // b.none
    1370:	ldr	x0, [sp, #40]
    1374:	b	14a0 <get_next_blocks+0x1f4>
    1378:	ldr	x0, [sp, #24]
    137c:	ldr	w0, [x0, #116]
    1380:	and	w0, w0, #0x2
    1384:	cmp	w0, #0x0
    1388:	b.ne	139c <get_next_blocks+0xf0>  // b.any
    138c:	ldr	x0, [sp, #24]
    1390:	ldr	x0, [x0, #24]
    1394:	cmp	x0, #0x0
    1398:	b.ne	13d0 <get_next_blocks+0x124>  // b.any
    139c:	ldr	x0, [sp, #24]
    13a0:	ldr	x3, [x0, #56]
    13a4:	ldr	x0, [sp, #24]
    13a8:	ldr	x0, [x0, #8]
    13ac:	ldr	w0, [x0, #40]
    13b0:	mov	w1, w0
    13b4:	ldr	x0, [sp, #32]
    13b8:	mul	x0, x1, x0
    13bc:	mov	x2, x0
    13c0:	mov	w1, #0x0                   	// #0
    13c4:	mov	x0, x3
    13c8:	bl	0 <memset>
    13cc:	b	141c <get_next_blocks+0x170>
    13d0:	ldr	x0, [sp, #24]
    13d4:	ldr	x0, [x0, #8]
    13d8:	ldr	x4, [x0, #8]
    13dc:	ldr	x0, [sp, #24]
    13e0:	ldr	x1, [x0, #24]
    13e4:	ldr	x0, [sp, #32]
    13e8:	mov	w2, w0
    13ec:	ldr	x0, [sp, #24]
    13f0:	ldr	x0, [x0, #56]
    13f4:	mov	x3, x0
    13f8:	mov	x0, x4
    13fc:	bl	0 <io_channel_read_blk64>
    1400:	str	x0, [sp, #40]
    1404:	ldr	x0, [sp, #40]
    1408:	cmp	x0, #0x0
    140c:	b.eq	141c <get_next_blocks+0x170>  // b.none
    1410:	mov	x0, #0xb721                	// #46881
    1414:	movk	x0, #0x7f2b, lsl #16
    1418:	b	14a0 <get_next_blocks+0x1f4>
    141c:	ldr	x0, [sp, #32]
    1420:	mov	x1, x0
    1424:	ldr	x0, [sp, #24]
    1428:	bl	f44 <check_inode_block_sanity>
    142c:	ldr	x0, [sp, #24]
    1430:	ldr	x1, [x0, #56]
    1434:	ldr	x0, [sp, #24]
    1438:	str	x1, [x0, #72]
    143c:	ldr	x0, [sp, #24]
    1440:	ldr	x0, [x0, #8]
    1444:	ldr	w0, [x0, #40]
    1448:	ldr	x1, [sp, #32]
    144c:	mul	w0, w0, w1
    1450:	mov	w1, w0
    1454:	ldr	x0, [sp, #24]
    1458:	str	w1, [x0, #80]
    145c:	ldr	x0, [sp, #24]
    1460:	ldr	w0, [x0, #40]
    1464:	ldr	x1, [sp, #32]
    1468:	sub	w1, w0, w1
    146c:	ldr	x0, [sp, #24]
    1470:	str	w1, [x0, #40]
    1474:	ldr	x0, [sp, #24]
    1478:	ldr	x0, [x0, #24]
    147c:	cmp	x0, #0x0
    1480:	b.eq	149c <get_next_blocks+0x1f0>  // b.none
    1484:	ldr	x0, [sp, #24]
    1488:	ldr	x1, [x0, #24]
    148c:	ldr	x0, [sp, #32]
    1490:	add	x1, x1, x0
    1494:	ldr	x0, [sp, #24]
    1498:	str	x1, [x0, #24]
    149c:	mov	x0, #0x0                   	// #0
    14a0:	ldp	x29, x30, [sp], #48
    14a4:	ret

00000000000014a8 <ext2fs_get_next_inode_full>:
    14a8:	stp	x29, x30, [sp, #-96]!
    14ac:	mov	x29, sp
    14b0:	str	x0, [sp, #40]
    14b4:	str	x1, [sp, #32]
    14b8:	str	x2, [sp, #24]
    14bc:	str	w3, [sp, #20]
    14c0:	str	wzr, [sp, #84]
    14c4:	ldr	x0, [sp, #24]
    14c8:	str	x0, [sp, #56]
    14cc:	ldr	x0, [sp, #40]
    14d0:	ldr	x1, [x0]
    14d4:	mov	x0, #0xb704                	// #46852
    14d8:	movk	x0, #0x7f2b, lsl #16
    14dc:	cmp	x1, x0
    14e0:	b.eq	14f0 <ext2fs_get_next_inode_full+0x48>  // b.none
    14e4:	mov	x0, #0xb704                	// #46852
    14e8:	movk	x0, #0x7f2b, lsl #16
    14ec:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    14f0:	ldr	x0, [sp, #40]
    14f4:	ldr	x0, [x0, #8]
    14f8:	ldr	x0, [x0, #32]
    14fc:	ldr	w0, [x0, #76]
    1500:	cmp	w0, #0x0
    1504:	b.eq	151c <ext2fs_get_next_inode_full+0x74>  // b.none
    1508:	ldr	x0, [sp, #40]
    150c:	ldr	x0, [x0, #8]
    1510:	ldr	x0, [x0, #32]
    1514:	ldrh	w0, [x0, #88]
    1518:	b	1520 <ext2fs_get_next_inode_full+0x78>
    151c:	mov	w0, #0x80                  	// #128
    1520:	str	w0, [sp, #80]
    1524:	ldr	x0, [sp, #40]
    1528:	ldr	x1, [x0, #88]
    152c:	ldr	x0, [sp, #40]
    1530:	ldr	w0, [x0, #64]
    1534:	sxtw	x0, w0
    1538:	add	x0, x1, x0
    153c:	str	x0, [sp, #72]
    1540:	ldr	x0, [sp, #40]
    1544:	ldr	w0, [x0, #36]
    1548:	cmp	w0, #0x0
    154c:	b.ne	1608 <ext2fs_get_next_inode_full+0x160>  // b.any
    1550:	nop
    1554:	b	156c <ext2fs_get_next_inode_full+0xc4>
    1558:	nop
    155c:	b	156c <ext2fs_get_next_inode_full+0xc4>
    1560:	nop
    1564:	b	156c <ext2fs_get_next_inode_full+0xc4>
    1568:	nop
    156c:	ldr	x0, [sp, #40]
    1570:	ldr	x0, [x0, #96]
    1574:	cmp	x0, #0x0
    1578:	b.eq	15c8 <ext2fs_get_next_inode_full+0x120>  // b.none
    157c:	ldr	x0, [sp, #40]
    1580:	ldr	x4, [x0, #96]
    1584:	ldr	x0, [sp, #40]
    1588:	ldr	x5, [x0, #8]
    158c:	ldr	x0, [sp, #40]
    1590:	ldr	w1, [x0, #32]
    1594:	ldr	x0, [sp, #40]
    1598:	ldr	x0, [x0, #104]
    159c:	mov	x3, x0
    15a0:	mov	w2, w1
    15a4:	ldr	x1, [sp, #40]
    15a8:	mov	x0, x5
    15ac:	blr	x4
    15b0:	str	x0, [sp, #88]
    15b4:	ldr	x0, [sp, #88]
    15b8:	cmp	x0, #0x0
    15bc:	b.eq	15c8 <ext2fs_get_next_inode_full+0x120>  // b.none
    15c0:	ldr	x0, [sp, #88]
    15c4:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    15c8:	ldr	x0, [sp, #40]
    15cc:	ldr	w0, [x0, #44]
    15d0:	cmp	w0, #0x0
    15d4:	b.ne	15e8 <ext2fs_get_next_inode_full+0x140>  // b.any
    15d8:	ldr	x0, [sp, #32]
    15dc:	str	wzr, [x0]
    15e0:	mov	x0, #0x0                   	// #0
    15e4:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    15e8:	ldr	x0, [sp, #40]
    15ec:	bl	95c <get_next_blockgroup>
    15f0:	str	x0, [sp, #88]
    15f4:	ldr	x0, [sp, #88]
    15f8:	cmp	x0, #0x0
    15fc:	b.eq	1608 <ext2fs_get_next_inode_full+0x160>  // b.none
    1600:	ldr	x0, [sp, #88]
    1604:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    1608:	ldr	x0, [sp, #40]
    160c:	ldr	w0, [x0, #116]
    1610:	and	w0, w0, #0x10
    1614:	cmp	w0, #0x0
    1618:	b.eq	1644 <ext2fs_get_next_inode_full+0x19c>  // b.none
    161c:	ldr	x0, [sp, #40]
    1620:	ldr	x3, [x0, #8]
    1624:	ldr	x0, [sp, #40]
    1628:	ldr	w0, [x0, #32]
    162c:	mov	w2, #0x1                   	// #1
    1630:	mov	w1, w0
    1634:	mov	x0, x3
    1638:	bl	0 <ext2fs_bg_flags_test>
    163c:	cmp	w0, #0x0
    1640:	b.ne	1558 <ext2fs_get_next_inode_full+0xb0>  // b.any
    1644:	ldr	x0, [sp, #40]
    1648:	ldr	w0, [x0, #36]
    164c:	cmp	w0, #0x0
    1650:	b.eq	1560 <ext2fs_get_next_inode_full+0xb8>  // b.none
    1654:	ldr	x0, [sp, #40]
    1658:	ldr	x0, [x0, #24]
    165c:	cmp	x0, #0x0
    1660:	b.ne	1684 <ext2fs_get_next_inode_full+0x1dc>  // b.any
    1664:	ldr	x0, [sp, #40]
    1668:	ldr	w0, [x0, #116]
    166c:	and	w0, w0, #0x8
    1670:	cmp	w0, #0x0
    1674:	b.ne	1568 <ext2fs_get_next_inode_full+0xc0>  // b.any
    1678:	mov	x0, #0xb73b                	// #46907
    167c:	movk	x0, #0x7f2b, lsl #16
    1680:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    1684:	ldr	x0, [sp, #40]
    1688:	ldr	w1, [x0, #80]
    168c:	ldr	x0, [sp, #40]
    1690:	ldr	w0, [x0, #64]
    1694:	cmp	w1, w0
    1698:	b.ge	1700 <ext2fs_get_next_inode_full+0x258>  // b.tcont
    169c:	ldr	x0, [sp, #40]
    16a0:	ldr	w0, [x0, #80]
    16a4:	cmp	w0, #0x0
    16a8:	b.eq	16d4 <ext2fs_get_next_inode_full+0x22c>  // b.none
    16ac:	ldr	x0, [sp, #40]
    16b0:	ldr	x3, [x0, #88]
    16b4:	ldr	x0, [sp, #40]
    16b8:	ldr	x1, [x0, #72]
    16bc:	ldr	x0, [sp, #40]
    16c0:	ldr	w0, [x0, #80]
    16c4:	sxtw	x0, w0
    16c8:	mov	x2, x0
    16cc:	mov	x0, x3
    16d0:	bl	0 <memcpy>
    16d4:	ldr	x0, [sp, #40]
    16d8:	ldr	w0, [x0, #80]
    16dc:	str	w0, [sp, #84]
    16e0:	ldr	x0, [sp, #40]
    16e4:	bl	12ac <get_next_blocks>
    16e8:	str	x0, [sp, #88]
    16ec:	ldr	x0, [sp, #88]
    16f0:	cmp	x0, #0x0
    16f4:	b.eq	1700 <ext2fs_get_next_inode_full+0x258>  // b.none
    16f8:	ldr	x0, [sp, #88]
    16fc:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    1700:	ldr	w1, [sp, #20]
    1704:	ldr	w0, [sp, #80]
    1708:	cmp	w1, w0
    170c:	b.ge	1734 <ext2fs_get_next_inode_full+0x28c>  // b.tcont
    1710:	ldrsw	x0, [sp, #80]
    1714:	add	x1, sp, #0x38
    1718:	bl	0 <ext2fs_get_mem>
    171c:	str	x0, [sp, #88]
    1720:	ldr	x0, [sp, #88]
    1724:	cmp	x0, #0x0
    1728:	b.eq	1734 <ext2fs_get_next_inode_full+0x28c>  // b.none
    172c:	ldr	x0, [sp, #88]
    1730:	b	1ac0 <ext2fs_get_next_inode_full+0x618>
    1734:	str	xzr, [sp, #88]
    1738:	ldr	x0, [sp, #40]
    173c:	ldr	w0, [x0, #16]
    1740:	ldr	x1, [sp, #40]
    1744:	ldr	x1, [x1, #8]
    1748:	ldr	x1, [x1, #32]
    174c:	ldr	w1, [x1, #40]
    1750:	udiv	w2, w0, w1
    1754:	mul	w1, w2, w1
    1758:	sub	w1, w0, w1
    175c:	ldr	x0, [sp, #40]
    1760:	ldr	x0, [x0, #8]
    1764:	ldr	x0, [x0, #32]
    1768:	ldr	w0, [x0, #24]
    176c:	mov	w2, #0x400                 	// #1024
    1770:	lsl	w2, w2, w0
    1774:	ldr	x0, [sp, #40]
    1778:	ldr	x0, [x0, #8]
    177c:	ldr	x0, [x0, #32]
    1780:	ldr	w0, [x0, #76]
    1784:	cmp	w0, #0x0
    1788:	b.eq	17a0 <ext2fs_get_next_inode_full+0x2f8>  // b.none
    178c:	ldr	x0, [sp, #40]
    1790:	ldr	x0, [x0, #8]
    1794:	ldr	x0, [x0, #32]
    1798:	ldrh	w0, [x0, #88]
    179c:	b	17a4 <ext2fs_get_next_inode_full+0x2fc>
    17a0:	mov	w0, #0x80                  	// #128
    17a4:	sdiv	w0, w2, w0
    17a8:	udiv	w0, w1, w0
    17ac:	ldr	x1, [sp, #40]
    17b0:	ldr	w1, [x1, #48]
    17b4:	udiv	w2, w0, w1
    17b8:	mul	w1, w2, w1
    17bc:	sub	w0, w0, w1
    17c0:	str	w0, [sp, #68]
    17c4:	ldr	w0, [sp, #84]
    17c8:	cmp	w0, #0x0
    17cc:	b.eq	1920 <ext2fs_get_next_inode_full+0x478>  // b.none
    17d0:	ldr	x0, [sp, #40]
    17d4:	ldr	x1, [x0, #88]
    17d8:	ldrsw	x0, [sp, #84]
    17dc:	add	x3, x1, x0
    17e0:	ldr	x0, [sp, #40]
    17e4:	ldr	x4, [x0, #72]
    17e8:	ldr	x0, [sp, #40]
    17ec:	ldr	w1, [x0, #64]
    17f0:	ldr	w0, [sp, #84]
    17f4:	sub	w0, w1, w0
    17f8:	sxtw	x0, w0
    17fc:	mov	x2, x0
    1800:	mov	x1, x4
    1804:	mov	x0, x3
    1808:	bl	0 <memcpy>
    180c:	ldr	x0, [sp, #40]
    1810:	ldr	x1, [x0, #72]
    1814:	ldr	x0, [sp, #40]
    1818:	ldr	w2, [x0, #64]
    181c:	ldr	w0, [sp, #84]
    1820:	sub	w0, w2, w0
    1824:	sxtw	x0, w0
    1828:	add	x1, x1, x0
    182c:	ldr	x0, [sp, #40]
    1830:	str	x1, [x0, #72]
    1834:	ldr	x0, [sp, #40]
    1838:	ldr	w1, [x0, #80]
    183c:	ldr	x0, [sp, #40]
    1840:	ldr	w2, [x0, #64]
    1844:	ldr	w0, [sp, #84]
    1848:	sub	w0, w2, w0
    184c:	sub	w1, w1, w0
    1850:	ldr	x0, [sp, #40]
    1854:	str	w1, [x0, #80]
    1858:	ldr	w0, [sp, #68]
    185c:	ldr	x1, [sp, #72]
    1860:	add	x0, x1, x0
    1864:	ldrb	w0, [x0]
    1868:	and	w0, w0, #0x1
    186c:	cmp	w0, #0x0
    1870:	b.ne	18c8 <ext2fs_get_next_inode_full+0x420>  // b.any
    1874:	ldr	x0, [sp, #40]
    1878:	ldr	x0, [x0, #8]
    187c:	ldr	w0, [x0, #16]
    1880:	and	w0, w0, #0x200000
    1884:	cmp	w0, #0x0
    1888:	b.ne	18c8 <ext2fs_get_next_inode_full+0x420>  // b.any
    188c:	ldr	x0, [sp, #40]
    1890:	ldr	x3, [x0, #8]
    1894:	ldr	x0, [sp, #40]
    1898:	ldr	w0, [x0, #16]
    189c:	add	w1, w0, #0x1
    18a0:	ldr	x0, [sp, #40]
    18a4:	ldr	x0, [x0, #88]
    18a8:	mov	x2, x0
    18ac:	mov	x0, x3
    18b0:	bl	0 <ext2fs_inode_csum_verify>
    18b4:	cmp	w0, #0x0
    18b8:	b.ne	18c8 <ext2fs_get_next_inode_full+0x420>  // b.any
    18bc:	mov	x0, #0xb792                	// #46994
    18c0:	movk	x0, #0x7f2b, lsl #16
    18c4:	str	x0, [sp, #88]
    18c8:	ldr	x3, [sp, #56]
    18cc:	ldr	x0, [sp, #40]
    18d0:	ldr	x0, [x0, #88]
    18d4:	ldrsw	x1, [sp, #80]
    18d8:	mov	x2, x1
    18dc:	mov	x1, x0
    18e0:	mov	x0, x3
    18e4:	bl	0 <memcpy>
    18e8:	ldr	x0, [sp, #40]
    18ec:	ldr	w0, [x0, #116]
    18f0:	and	w0, w0, #0x4
    18f4:	cmp	w0, #0x0
    18f8:	b.eq	1908 <ext2fs_get_next_inode_full+0x460>  // b.none
    18fc:	mov	x0, #0xb742                	// #46914
    1900:	movk	x0, #0x7f2b, lsl #16
    1904:	str	x0, [sp, #88]
    1908:	ldr	x0, [sp, #40]
    190c:	ldr	w0, [x0, #116]
    1910:	and	w1, w0, #0xfffffffb
    1914:	ldr	x0, [sp, #40]
    1918:	str	w1, [x0, #116]
    191c:	b	1a0c <ext2fs_get_next_inode_full+0x564>
    1920:	ldr	w0, [sp, #68]
    1924:	ldr	x1, [sp, #72]
    1928:	add	x0, x1, x0
    192c:	ldrb	w0, [x0]
    1930:	and	w0, w0, #0x1
    1934:	cmp	w0, #0x0
    1938:	b.ne	1990 <ext2fs_get_next_inode_full+0x4e8>  // b.any
    193c:	ldr	x0, [sp, #40]
    1940:	ldr	x0, [x0, #8]
    1944:	ldr	w0, [x0, #16]
    1948:	and	w0, w0, #0x200000
    194c:	cmp	w0, #0x0
    1950:	b.ne	1990 <ext2fs_get_next_inode_full+0x4e8>  // b.any
    1954:	ldr	x0, [sp, #40]
    1958:	ldr	x3, [x0, #8]
    195c:	ldr	x0, [sp, #40]
    1960:	ldr	w0, [x0, #16]
    1964:	add	w1, w0, #0x1
    1968:	ldr	x0, [sp, #40]
    196c:	ldr	x0, [x0, #72]
    1970:	mov	x2, x0
    1974:	mov	x0, x3
    1978:	bl	0 <ext2fs_inode_csum_verify>
    197c:	cmp	w0, #0x0
    1980:	b.ne	1990 <ext2fs_get_next_inode_full+0x4e8>  // b.any
    1984:	mov	x0, #0xb792                	// #46994
    1988:	movk	x0, #0x7f2b, lsl #16
    198c:	str	x0, [sp, #88]
    1990:	ldr	x3, [sp, #56]
    1994:	ldr	x0, [sp, #40]
    1998:	ldr	x0, [x0, #72]
    199c:	ldrsw	x1, [sp, #80]
    19a0:	mov	x2, x1
    19a4:	mov	x1, x0
    19a8:	mov	x0, x3
    19ac:	bl	0 <memcpy>
    19b0:	ldr	x0, [sp, #40]
    19b4:	ldr	x1, [x0, #72]
    19b8:	ldr	x0, [sp, #40]
    19bc:	ldr	w0, [x0, #64]
    19c0:	sxtw	x0, w0
    19c4:	add	x1, x1, x0
    19c8:	ldr	x0, [sp, #40]
    19cc:	str	x1, [x0, #72]
    19d0:	ldr	x0, [sp, #40]
    19d4:	ldr	w1, [x0, #80]
    19d8:	ldr	x0, [sp, #40]
    19dc:	ldr	w0, [x0, #64]
    19e0:	sub	w1, w1, w0
    19e4:	ldr	x0, [sp, #40]
    19e8:	str	w1, [x0, #80]
    19ec:	ldr	x0, [sp, #40]
    19f0:	ldr	w0, [x0, #116]
    19f4:	and	w0, w0, #0x2
    19f8:	cmp	w0, #0x0
    19fc:	b.eq	1a0c <ext2fs_get_next_inode_full+0x564>  // b.none
    1a00:	mov	x0, #0xb742                	// #46914
    1a04:	movk	x0, #0x7f2b, lsl #16
    1a08:	str	x0, [sp, #88]
    1a0c:	ldr	w0, [sp, #68]
    1a10:	ldr	x1, [sp, #72]
    1a14:	add	x0, x1, x0
    1a18:	ldrb	w0, [x0]
    1a1c:	and	w0, w0, #0x2
    1a20:	cmp	w0, #0x0
    1a24:	b.eq	1a54 <ext2fs_get_next_inode_full+0x5ac>  // b.none
    1a28:	ldr	x0, [sp, #88]
    1a2c:	cmp	x0, #0x0
    1a30:	b.eq	1a48 <ext2fs_get_next_inode_full+0x5a0>  // b.none
    1a34:	ldr	x1, [sp, #88]
    1a38:	mov	x0, #0xb792                	// #46994
    1a3c:	movk	x0, #0x7f2b, lsl #16
    1a40:	cmp	x1, x0
    1a44:	b.ne	1a54 <ext2fs_get_next_inode_full+0x5ac>  // b.any
    1a48:	mov	x0, #0xb7a9                	// #47017
    1a4c:	movk	x0, #0x7f2b, lsl #16
    1a50:	str	x0, [sp, #88]
    1a54:	ldr	x0, [sp, #40]
    1a58:	ldr	w0, [x0, #36]
    1a5c:	sub	w1, w0, #0x1
    1a60:	ldr	x0, [sp, #40]
    1a64:	str	w1, [x0, #36]
    1a68:	ldr	x0, [sp, #40]
    1a6c:	ldr	w0, [x0, #16]
    1a70:	add	w1, w0, #0x1
    1a74:	ldr	x0, [sp, #40]
    1a78:	str	w1, [x0, #16]
    1a7c:	ldr	x0, [sp, #40]
    1a80:	ldr	w1, [x0, #16]
    1a84:	ldr	x0, [sp, #32]
    1a88:	str	w1, [x0]
    1a8c:	ldr	x0, [sp, #56]
    1a90:	ldr	x1, [sp, #24]
    1a94:	cmp	x1, x0
    1a98:	b.eq	1abc <ext2fs_get_next_inode_full+0x614>  // b.none
    1a9c:	ldr	x0, [sp, #56]
    1aa0:	ldrsw	x1, [sp, #20]
    1aa4:	mov	x2, x1
    1aa8:	mov	x1, x0
    1aac:	ldr	x0, [sp, #24]
    1ab0:	bl	0 <memcpy>
    1ab4:	add	x0, sp, #0x38
    1ab8:	bl	0 <ext2fs_free_mem>
    1abc:	ldr	x0, [sp, #88]
    1ac0:	ldp	x29, x30, [sp], #96
    1ac4:	ret

0000000000001ac8 <ext2fs_get_next_inode>:
    1ac8:	stp	x29, x30, [sp, #-48]!
    1acc:	mov	x29, sp
    1ad0:	str	x0, [sp, #40]
    1ad4:	str	x1, [sp, #32]
    1ad8:	str	x2, [sp, #24]
    1adc:	mov	w3, #0x80                  	// #128
    1ae0:	ldr	x2, [sp, #24]
    1ae4:	ldr	x1, [sp, #32]
    1ae8:	ldr	x0, [sp, #40]
    1aec:	bl	14a8 <ext2fs_get_next_inode_full>
    1af0:	ldp	x29, x30, [sp], #48
    1af4:	ret

0000000000001af8 <ext2fs_read_inode2>:
    1af8:	stp	x29, x30, [sp, #-160]!
    1afc:	mov	x29, sp
    1b00:	str	x19, [sp, #16]
    1b04:	str	x0, [sp, #56]
    1b08:	str	w1, [sp, #52]
    1b0c:	str	x2, [sp, #40]
    1b10:	str	w3, [sp, #48]
    1b14:	str	w4, [sp, #36]
    1b18:	ldr	x0, [sp, #56]
    1b1c:	ldr	x0, [x0, #32]
    1b20:	ldr	w0, [x0, #76]
    1b24:	cmp	w0, #0x0
    1b28:	b.eq	1b3c <ext2fs_read_inode2+0x44>  // b.none
    1b2c:	ldr	x0, [sp, #56]
    1b30:	ldr	x0, [x0, #32]
    1b34:	ldrh	w0, [x0, #88]
    1b38:	b	1b40 <ext2fs_read_inode2+0x48>
    1b3c:	mov	w0, #0x80                  	// #128
    1b40:	str	w0, [sp, #116]
    1b44:	ldr	x0, [sp, #56]
    1b48:	ldr	x1, [x0]
    1b4c:	mov	x0, #0xb701                	// #46849
    1b50:	movk	x0, #0x7f2b, lsl #16
    1b54:	cmp	x1, x0
    1b58:	b.eq	1b68 <ext2fs_read_inode2+0x70>  // b.none
    1b5c:	mov	x0, #0xb701                	// #46849
    1b60:	movk	x0, #0x7f2b, lsl #16
    1b64:	b	218c <ext2fs_read_inode2+0x694>
    1b68:	ldr	x0, [sp, #56]
    1b6c:	ldr	x0, [x0, #120]
    1b70:	cmp	x0, #0x0
    1b74:	b.eq	1be4 <ext2fs_read_inode2+0xec>  // b.none
    1b78:	ldr	w0, [sp, #48]
    1b7c:	cmp	w0, #0x80
    1b80:	b.eq	1bac <ext2fs_read_inode2+0xb4>  // b.none
    1b84:	ldr	x0, [sp, #56]
    1b88:	ldr	x0, [x0, #32]
    1b8c:	ldr	w0, [x0, #76]
    1b90:	cmp	w0, #0x0
    1b94:	b.eq	1bac <ext2fs_read_inode2+0xb4>  // b.none
    1b98:	ldr	x0, [sp, #56]
    1b9c:	ldr	x0, [x0, #32]
    1ba0:	ldrh	w0, [x0, #88]
    1ba4:	cmp	w0, #0x80
    1ba8:	b.ne	1be4 <ext2fs_read_inode2+0xec>  // b.any
    1bac:	ldr	x0, [sp, #56]
    1bb0:	ldr	x3, [x0, #120]
    1bb4:	ldr	x2, [sp, #40]
    1bb8:	ldr	w1, [sp, #52]
    1bbc:	ldr	x0, [sp, #56]
    1bc0:	blr	x3
    1bc4:	str	x0, [sp, #104]
    1bc8:	ldr	x1, [sp, #104]
    1bcc:	mov	x0, #0xb741                	// #46913
    1bd0:	movk	x0, #0x7f2b, lsl #16
    1bd4:	cmp	x1, x0
    1bd8:	b.eq	1be4 <ext2fs_read_inode2+0xec>  // b.none
    1bdc:	ldr	x0, [sp, #104]
    1be0:	b	218c <ext2fs_read_inode2+0x694>
    1be4:	ldr	w0, [sp, #52]
    1be8:	cmp	w0, #0x0
    1bec:	b.eq	1c08 <ext2fs_read_inode2+0x110>  // b.none
    1bf0:	ldr	x0, [sp, #56]
    1bf4:	ldr	x0, [x0, #32]
    1bf8:	ldr	w0, [x0]
    1bfc:	ldr	w1, [sp, #52]
    1c00:	cmp	w1, w0
    1c04:	b.ls	1c14 <ext2fs_read_inode2+0x11c>  // b.plast
    1c08:	mov	x0, #0xb729                	// #46889
    1c0c:	movk	x0, #0x7f2b, lsl #16
    1c10:	b	218c <ext2fs_read_inode2+0x694>
    1c14:	ldr	x0, [sp, #56]
    1c18:	ldr	x0, [x0, #232]
    1c1c:	cmp	x0, #0x0
    1c20:	b.ne	1c48 <ext2fs_read_inode2+0x150>  // b.any
    1c24:	mov	w1, #0x4                   	// #4
    1c28:	ldr	x0, [sp, #56]
    1c2c:	bl	1d8 <ext2fs_create_inode_cache>
    1c30:	str	x0, [sp, #104]
    1c34:	ldr	x0, [sp, #104]
    1c38:	cmp	x0, #0x0
    1c3c:	b.eq	1c48 <ext2fs_read_inode2+0x150>  // b.none
    1c40:	ldr	x0, [sp, #104]
    1c44:	b	218c <ext2fs_read_inode2+0x694>
    1c48:	str	wzr, [sp, #132]
    1c4c:	b	1cd0 <ext2fs_read_inode2+0x1d8>
    1c50:	ldr	x0, [sp, #56]
    1c54:	ldr	x0, [x0, #232]
    1c58:	ldr	x1, [x0, #32]
    1c5c:	ldr	w0, [sp, #132]
    1c60:	lsl	x0, x0, #4
    1c64:	add	x0, x1, x0
    1c68:	ldr	w0, [x0]
    1c6c:	ldr	w1, [sp, #52]
    1c70:	cmp	w1, w0
    1c74:	b.ne	1cc4 <ext2fs_read_inode2+0x1cc>  // b.any
    1c78:	ldr	x0, [sp, #56]
    1c7c:	ldr	x0, [x0, #232]
    1c80:	ldr	x1, [x0, #32]
    1c84:	ldr	w0, [sp, #132]
    1c88:	lsl	x0, x0, #4
    1c8c:	add	x0, x1, x0
    1c90:	ldr	x3, [x0, #8]
    1c94:	ldr	w0, [sp, #116]
    1c98:	ldr	w2, [sp, #48]
    1c9c:	ldr	w1, [sp, #48]
    1ca0:	cmp	w2, w0
    1ca4:	csel	w0, w1, w0, le
    1ca8:	sxtw	x0, w0
    1cac:	mov	x2, x0
    1cb0:	mov	x1, x3
    1cb4:	ldr	x0, [sp, #40]
    1cb8:	bl	0 <memcpy>
    1cbc:	mov	x0, #0x0                   	// #0
    1cc0:	b	218c <ext2fs_read_inode2+0x694>
    1cc4:	ldr	w0, [sp, #132]
    1cc8:	add	w0, w0, #0x1
    1ccc:	str	w0, [sp, #132]
    1cd0:	ldr	x0, [sp, #56]
    1cd4:	ldr	x0, [x0, #232]
    1cd8:	ldr	w0, [x0, #20]
    1cdc:	ldr	w1, [sp, #132]
    1ce0:	cmp	w1, w0
    1ce4:	b.cc	1c50 <ext2fs_read_inode2+0x158>  // b.lo, b.ul, b.last
    1ce8:	ldr	x0, [sp, #56]
    1cec:	ldr	w0, [x0, #16]
    1cf0:	and	w0, w0, #0x2000
    1cf4:	cmp	w0, #0x0
    1cf8:	b.eq	1dd0 <ext2fs_read_inode2+0x2d8>  // b.none
    1cfc:	ldr	x0, [sp, #56]
    1d00:	ldr	w1, [x0, #40]
    1d04:	ldr	x0, [sp, #56]
    1d08:	ldr	x0, [x0, #32]
    1d0c:	ldr	w0, [x0, #76]
    1d10:	cmp	w0, #0x0
    1d14:	b.eq	1d28 <ext2fs_read_inode2+0x230>  // b.none
    1d18:	ldr	x0, [sp, #56]
    1d1c:	ldr	x0, [x0, #32]
    1d20:	ldrh	w0, [x0, #88]
    1d24:	b	1d2c <ext2fs_read_inode2+0x234>
    1d28:	mov	w0, #0x80                  	// #128
    1d2c:	udiv	w0, w1, w0
    1d30:	str	w0, [sp, #84]
    1d34:	ldr	x0, [sp, #56]
    1d38:	ldr	x0, [x0, #168]
    1d3c:	ldr	w1, [x0, #288]
    1d40:	ldr	x0, [sp, #56]
    1d44:	ldr	w0, [x0, #40]
    1d48:	udiv	w0, w1, w0
    1d4c:	mov	w0, w0
    1d50:	str	x0, [sp, #152]
    1d54:	ldr	w0, [sp, #52]
    1d58:	sub	w1, w0, #0x1
    1d5c:	ldr	w0, [sp, #84]
    1d60:	udiv	w0, w1, w0
    1d64:	mov	w0, w0
    1d68:	ldr	x1, [sp, #152]
    1d6c:	add	x0, x1, x0
    1d70:	str	x0, [sp, #152]
    1d74:	ldr	w0, [sp, #52]
    1d78:	sub	w0, w0, #0x1
    1d7c:	ldr	w1, [sp, #84]
    1d80:	udiv	w2, w0, w1
    1d84:	mul	w1, w2, w1
    1d88:	sub	w1, w0, w1
    1d8c:	ldr	x0, [sp, #56]
    1d90:	ldr	x0, [x0, #32]
    1d94:	ldr	w0, [x0, #76]
    1d98:	cmp	w0, #0x0
    1d9c:	b.eq	1db0 <ext2fs_read_inode2+0x2b8>  // b.none
    1da0:	ldr	x0, [sp, #56]
    1da4:	ldr	x0, [x0, #32]
    1da8:	ldrh	w0, [x0, #88]
    1dac:	b	1db4 <ext2fs_read_inode2+0x2bc>
    1db0:	mov	w0, #0x80                  	// #128
    1db4:	mul	w0, w0, w1
    1db8:	mov	w0, w0
    1dbc:	str	x0, [sp, #144]
    1dc0:	ldr	x0, [sp, #56]
    1dc4:	ldr	x0, [x0, #240]
    1dc8:	str	x0, [sp, #120]
    1dcc:	b	1f14 <ext2fs_read_inode2+0x41c>
    1dd0:	ldr	w0, [sp, #52]
    1dd4:	sub	w1, w0, #0x1
    1dd8:	ldr	x0, [sp, #56]
    1ddc:	ldr	x0, [x0, #32]
    1de0:	ldr	w0, [x0, #40]
    1de4:	udiv	w0, w1, w0
    1de8:	str	w0, [sp, #100]
    1dec:	ldr	x0, [sp, #56]
    1df0:	ldr	w0, [x0, #48]
    1df4:	ldr	w1, [sp, #100]
    1df8:	cmp	w1, w0
    1dfc:	b.ls	1e0c <ext2fs_read_inode2+0x314>  // b.plast
    1e00:	mov	x0, #0xb729                	// #46889
    1e04:	movk	x0, #0x7f2b, lsl #16
    1e08:	b	218c <ext2fs_read_inode2+0x694>
    1e0c:	ldr	w0, [sp, #52]
    1e10:	sub	w0, w0, #0x1
    1e14:	ldr	x1, [sp, #56]
    1e18:	ldr	x1, [x1, #32]
    1e1c:	ldr	w1, [x1, #40]
    1e20:	udiv	w2, w0, w1
    1e24:	mul	w1, w2, w1
    1e28:	sub	w1, w0, w1
    1e2c:	ldr	x0, [sp, #56]
    1e30:	ldr	x0, [x0, #32]
    1e34:	ldr	w0, [x0, #76]
    1e38:	cmp	w0, #0x0
    1e3c:	b.eq	1e50 <ext2fs_read_inode2+0x358>  // b.none
    1e40:	ldr	x0, [sp, #56]
    1e44:	ldr	x0, [x0, #32]
    1e48:	ldrh	w0, [x0, #88]
    1e4c:	b	1e54 <ext2fs_read_inode2+0x35c>
    1e50:	mov	w0, #0x80                  	// #128
    1e54:	mul	w0, w0, w1
    1e58:	mov	w0, w0
    1e5c:	str	x0, [sp, #144]
    1e60:	ldr	x0, [sp, #56]
    1e64:	ldr	x0, [x0, #32]
    1e68:	ldr	w0, [x0, #24]
    1e6c:	add	w0, w0, #0xa
    1e70:	ldr	x1, [sp, #144]
    1e74:	lsr	x0, x1, x0
    1e78:	str	x0, [sp, #88]
    1e7c:	ldr	w1, [sp, #100]
    1e80:	ldr	x0, [sp, #56]
    1e84:	bl	0 <ext2fs_inode_table_loc>
    1e88:	str	x0, [sp, #152]
    1e8c:	ldr	x0, [sp, #152]
    1e90:	cmp	x0, #0x0
    1e94:	b.ne	1ea4 <ext2fs_read_inode2+0x3ac>  // b.any
    1e98:	mov	x0, #0xb73b                	// #46907
    1e9c:	movk	x0, #0x7f2b, lsl #16
    1ea0:	b	218c <ext2fs_read_inode2+0x694>
    1ea4:	ldr	x0, [sp, #56]
    1ea8:	ldr	x0, [x0, #32]
    1eac:	ldr	w0, [x0, #20]
    1eb0:	mov	w0, w0
    1eb4:	ldr	x1, [sp, #152]
    1eb8:	cmp	x1, x0
    1ebc:	b.cc	1eec <ext2fs_read_inode2+0x3f4>  // b.lo, b.ul, b.last
    1ec0:	ldr	x0, [sp, #56]
    1ec4:	ldr	w0, [x0, #72]
    1ec8:	mov	w1, w0
    1ecc:	ldr	x0, [sp, #152]
    1ed0:	add	x0, x1, x0
    1ed4:	sub	x19, x0, #0x1
    1ed8:	ldr	x0, [sp, #56]
    1edc:	ldr	x0, [x0, #32]
    1ee0:	bl	0 <ext2fs_blocks_count>
    1ee4:	cmp	x19, x0
    1ee8:	b.cc	1ef8 <ext2fs_read_inode2+0x400>  // b.lo, b.ul, b.last
    1eec:	mov	x0, #0xb71a                	// #46874
    1ef0:	movk	x0, #0x7f2b, lsl #16
    1ef4:	b	218c <ext2fs_read_inode2+0x694>
    1ef8:	ldr	x1, [sp, #152]
    1efc:	ldr	x0, [sp, #88]
    1f00:	add	x0, x1, x0
    1f04:	str	x0, [sp, #152]
    1f08:	ldr	x0, [sp, #56]
    1f0c:	ldr	x0, [x0, #8]
    1f10:	str	x0, [sp, #120]
    1f14:	ldr	x0, [sp, #56]
    1f18:	ldr	x0, [x0, #32]
    1f1c:	ldr	w0, [x0, #24]
    1f20:	mov	w1, #0x400                 	// #1024
    1f24:	lsl	w0, w1, w0
    1f28:	sub	w0, w0, #0x1
    1f2c:	sxtw	x0, w0
    1f30:	ldr	x1, [sp, #144]
    1f34:	and	x0, x1, x0
    1f38:	str	x0, [sp, #144]
    1f3c:	ldr	x0, [sp, #56]
    1f40:	ldr	x0, [x0, #232]
    1f44:	ldr	w0, [x0, #16]
    1f48:	add	w0, w0, #0x1
    1f4c:	mov	w1, w0
    1f50:	ldr	x0, [sp, #56]
    1f54:	ldr	x0, [x0, #232]
    1f58:	ldr	w0, [x0, #20]
    1f5c:	udiv	w2, w1, w0
    1f60:	mul	w0, w2, w0
    1f64:	sub	w0, w1, w0
    1f68:	str	w0, [sp, #80]
    1f6c:	ldr	x0, [sp, #56]
    1f70:	ldr	x0, [x0, #232]
    1f74:	ldr	x1, [x0, #32]
    1f78:	ldrsw	x0, [sp, #80]
    1f7c:	lsl	x0, x0, #4
    1f80:	add	x0, x1, x0
    1f84:	ldr	x0, [x0, #8]
    1f88:	str	x0, [sp, #72]
    1f8c:	ldr	x0, [sp, #72]
    1f90:	str	x0, [sp, #136]
    1f94:	b	2090 <ext2fs_read_inode2+0x598>
    1f98:	ldr	w0, [sp, #116]
    1f9c:	str	w0, [sp, #128]
    1fa0:	ldrsw	x1, [sp, #116]
    1fa4:	ldr	x0, [sp, #144]
    1fa8:	add	x1, x1, x0
    1fac:	ldr	x0, [sp, #56]
    1fb0:	ldr	w0, [x0, #40]
    1fb4:	mov	w0, w0
    1fb8:	cmp	x1, x0
    1fbc:	b.ls	1fd4 <ext2fs_read_inode2+0x4dc>  // b.plast
    1fc0:	ldr	x0, [sp, #56]
    1fc4:	ldr	w0, [x0, #40]
    1fc8:	ldr	x1, [sp, #144]
    1fcc:	sub	w0, w0, w1
    1fd0:	str	w0, [sp, #128]
    1fd4:	ldr	x0, [sp, #56]
    1fd8:	ldr	x0, [x0, #232]
    1fdc:	ldr	x0, [x0, #8]
    1fe0:	ldr	x1, [sp, #152]
    1fe4:	cmp	x1, x0
    1fe8:	b.eq	2034 <ext2fs_read_inode2+0x53c>  // b.none
    1fec:	ldr	x0, [sp, #56]
    1ff0:	ldr	x0, [x0, #232]
    1ff4:	ldr	x0, [x0]
    1ff8:	mov	x3, x0
    1ffc:	mov	w2, #0x1                   	// #1
    2000:	ldr	x1, [sp, #152]
    2004:	ldr	x0, [sp, #120]
    2008:	bl	0 <io_channel_read_blk64>
    200c:	str	x0, [sp, #104]
    2010:	ldr	x0, [sp, #104]
    2014:	cmp	x0, #0x0
    2018:	b.eq	2024 <ext2fs_read_inode2+0x52c>  // b.none
    201c:	ldr	x0, [sp, #104]
    2020:	b	218c <ext2fs_read_inode2+0x694>
    2024:	ldr	x0, [sp, #56]
    2028:	ldr	x0, [x0, #232]
    202c:	ldr	x1, [sp, #152]
    2030:	str	x1, [x0, #8]
    2034:	ldr	x0, [sp, #56]
    2038:	ldr	x0, [x0, #232]
    203c:	ldr	x1, [x0]
    2040:	ldr	x0, [sp, #144]
    2044:	mov	w0, w0
    2048:	add	x0, x1, x0
    204c:	ldrsw	x1, [sp, #128]
    2050:	mov	x2, x1
    2054:	mov	x1, x0
    2058:	ldr	x0, [sp, #136]
    205c:	bl	0 <memcpy>
    2060:	str	xzr, [sp, #144]
    2064:	ldr	w1, [sp, #116]
    2068:	ldr	w0, [sp, #128]
    206c:	sub	w0, w1, w0
    2070:	str	w0, [sp, #116]
    2074:	ldrsw	x0, [sp, #128]
    2078:	ldr	x1, [sp, #136]
    207c:	add	x0, x1, x0
    2080:	str	x0, [sp, #136]
    2084:	ldr	x0, [sp, #152]
    2088:	add	x0, x0, #0x1
    208c:	str	x0, [sp, #152]
    2090:	ldr	w0, [sp, #116]
    2094:	cmp	w0, #0x0
    2098:	b.ne	1f98 <ext2fs_read_inode2+0x4a0>  // b.any
    209c:	ldr	x0, [sp, #56]
    20a0:	ldr	x0, [x0, #32]
    20a4:	ldr	w0, [x0, #76]
    20a8:	cmp	w0, #0x0
    20ac:	b.eq	20c0 <ext2fs_read_inode2+0x5c8>  // b.none
    20b0:	ldr	x0, [sp, #56]
    20b4:	ldr	x0, [x0, #32]
    20b8:	ldrh	w0, [x0, #88]
    20bc:	b	20c4 <ext2fs_read_inode2+0x5cc>
    20c0:	mov	w0, #0x80                  	// #128
    20c4:	str	w0, [sp, #116]
    20c8:	ldr	x2, [sp, #72]
    20cc:	ldr	w1, [sp, #52]
    20d0:	ldr	x0, [sp, #56]
    20d4:	bl	0 <ext2fs_inode_csum_verify>
    20d8:	cmp	w0, #0x0
    20dc:	cset	w0, eq  // eq = none
    20e0:	and	w0, w0, #0xff
    20e4:	str	w0, [sp, #68]
    20e8:	ldr	w0, [sp, #68]
    20ec:	cmp	w0, #0x0
    20f0:	b.ne	2124 <ext2fs_read_inode2+0x62c>  // b.any
    20f4:	ldr	x0, [sp, #56]
    20f8:	ldr	x0, [x0, #232]
    20fc:	ldr	w1, [sp, #80]
    2100:	str	w1, [x0, #16]
    2104:	ldr	x0, [sp, #56]
    2108:	ldr	x0, [x0, #232]
    210c:	ldr	x1, [x0, #32]
    2110:	ldrsw	x0, [sp, #80]
    2114:	lsl	x0, x0, #4
    2118:	add	x0, x1, x0
    211c:	ldr	w1, [sp, #52]
    2120:	str	w1, [x0]
    2124:	ldr	w0, [sp, #116]
    2128:	ldr	w2, [sp, #48]
    212c:	ldr	w1, [sp, #48]
    2130:	cmp	w2, w0
    2134:	csel	w0, w1, w0, le
    2138:	sxtw	x0, w0
    213c:	mov	x2, x0
    2140:	ldr	x1, [sp, #72]
    2144:	ldr	x0, [sp, #40]
    2148:	bl	0 <memcpy>
    214c:	ldr	x0, [sp, #56]
    2150:	ldr	w0, [x0, #16]
    2154:	and	w0, w0, #0x200000
    2158:	cmp	w0, #0x0
    215c:	b.ne	2188 <ext2fs_read_inode2+0x690>  // b.any
    2160:	ldr	w0, [sp, #36]
    2164:	and	w0, w0, #0x1
    2168:	cmp	w0, #0x0
    216c:	b.ne	2188 <ext2fs_read_inode2+0x690>  // b.any
    2170:	ldr	w0, [sp, #68]
    2174:	cmp	w0, #0x0
    2178:	b.eq	2188 <ext2fs_read_inode2+0x690>  // b.none
    217c:	mov	x0, #0xb792                	// #46994
    2180:	movk	x0, #0x7f2b, lsl #16
    2184:	b	218c <ext2fs_read_inode2+0x694>
    2188:	mov	x0, #0x0                   	// #0
    218c:	ldr	x19, [sp, #16]
    2190:	ldp	x29, x30, [sp], #160
    2194:	ret

0000000000002198 <ext2fs_read_inode_full>:
    2198:	stp	x29, x30, [sp, #-48]!
    219c:	mov	x29, sp
    21a0:	str	x0, [sp, #40]
    21a4:	str	w1, [sp, #36]
    21a8:	str	x2, [sp, #24]
    21ac:	str	w3, [sp, #32]
    21b0:	mov	w4, #0x0                   	// #0
    21b4:	ldr	w3, [sp, #32]
    21b8:	ldr	x2, [sp, #24]
    21bc:	ldr	w1, [sp, #36]
    21c0:	ldr	x0, [sp, #40]
    21c4:	bl	1af8 <ext2fs_read_inode2>
    21c8:	ldp	x29, x30, [sp], #48
    21cc:	ret

00000000000021d0 <ext2fs_read_inode>:
    21d0:	stp	x29, x30, [sp, #-48]!
    21d4:	mov	x29, sp
    21d8:	str	x0, [sp, #40]
    21dc:	str	w1, [sp, #36]
    21e0:	str	x2, [sp, #24]
    21e4:	mov	w4, #0x0                   	// #0
    21e8:	mov	w3, #0x80                  	// #128
    21ec:	ldr	x2, [sp, #24]
    21f0:	ldr	w1, [sp, #36]
    21f4:	ldr	x0, [sp, #40]
    21f8:	bl	1af8 <ext2fs_read_inode2>
    21fc:	ldp	x29, x30, [sp], #48
    2200:	ret

0000000000002204 <ext2fs_write_inode2>:
    2204:	stp	x29, x30, [sp, #-128]!
    2208:	mov	x29, sp
    220c:	str	x19, [sp, #16]
    2210:	str	x0, [sp, #56]
    2214:	str	w1, [sp, #52]
    2218:	str	x2, [sp, #40]
    221c:	str	w3, [sp, #48]
    2220:	str	w4, [sp, #36]
    2224:	str	xzr, [sp, #104]
    2228:	ldr	x0, [sp, #56]
    222c:	ldr	x0, [x0, #32]
    2230:	ldr	w0, [x0, #76]
    2234:	cmp	w0, #0x0
    2238:	b.eq	224c <ext2fs_write_inode2+0x48>  // b.none
    223c:	ldr	x0, [sp, #56]
    2240:	ldr	x0, [x0, #32]
    2244:	ldrh	w0, [x0, #88]
    2248:	b	2250 <ext2fs_write_inode2+0x4c>
    224c:	mov	w0, #0x80                  	// #128
    2250:	str	w0, [sp, #84]
    2254:	ldr	x0, [sp, #56]
    2258:	ldr	x1, [x0]
    225c:	mov	x0, #0xb701                	// #46849
    2260:	movk	x0, #0x7f2b, lsl #16
    2264:	cmp	x1, x0
    2268:	b.eq	2278 <ext2fs_write_inode2+0x74>  // b.none
    226c:	mov	x0, #0xb701                	// #46849
    2270:	movk	x0, #0x7f2b, lsl #16
    2274:	b	2774 <ext2fs_write_inode2+0x570>
    2278:	ldr	x0, [sp, #56]
    227c:	ldr	x0, [x0, #128]
    2280:	cmp	x0, #0x0
    2284:	b.eq	22c0 <ext2fs_write_inode2+0xbc>  // b.none
    2288:	ldr	x0, [sp, #56]
    228c:	ldr	x3, [x0, #128]
    2290:	ldr	x2, [sp, #40]
    2294:	ldr	w1, [sp, #52]
    2298:	ldr	x0, [sp, #56]
    229c:	blr	x3
    22a0:	str	x0, [sp, #104]
    22a4:	ldr	x1, [sp, #104]
    22a8:	mov	x0, #0xb741                	// #46913
    22ac:	movk	x0, #0x7f2b, lsl #16
    22b0:	cmp	x1, x0
    22b4:	b.eq	22c0 <ext2fs_write_inode2+0xbc>  // b.none
    22b8:	ldr	x0, [sp, #104]
    22bc:	b	2774 <ext2fs_write_inode2+0x570>
    22c0:	ldr	w0, [sp, #52]
    22c4:	cmp	w0, #0x0
    22c8:	b.eq	22e4 <ext2fs_write_inode2+0xe0>  // b.none
    22cc:	ldr	x0, [sp, #56]
    22d0:	ldr	x0, [x0, #32]
    22d4:	ldr	w0, [x0]
    22d8:	ldr	w1, [sp, #52]
    22dc:	cmp	w1, w0
    22e0:	b.ls	22f0 <ext2fs_write_inode2+0xec>  // b.plast
    22e4:	mov	x0, #0xb729                	// #46889
    22e8:	movk	x0, #0x7f2b, lsl #16
    22ec:	b	2774 <ext2fs_write_inode2+0x570>
    22f0:	ldrsw	x0, [sp, #84]
    22f4:	add	x1, sp, #0x40
    22f8:	bl	0 <ext2fs_get_mem>
    22fc:	str	x0, [sp, #104]
    2300:	ldr	x0, [sp, #104]
    2304:	cmp	x0, #0x0
    2308:	b.eq	2314 <ext2fs_write_inode2+0x110>  // b.none
    230c:	ldr	x0, [sp, #104]
    2310:	b	2774 <ext2fs_write_inode2+0x570>
    2314:	ldr	w1, [sp, #48]
    2318:	ldr	w0, [sp, #84]
    231c:	cmp	w1, w0
    2320:	b.ge	2350 <ext2fs_write_inode2+0x14c>  // b.tcont
    2324:	ldr	x0, [sp, #64]
    2328:	mov	w4, #0x1                   	// #1
    232c:	ldr	w3, [sp, #84]
    2330:	mov	x2, x0
    2334:	ldr	w1, [sp, #52]
    2338:	ldr	x0, [sp, #56]
    233c:	bl	1af8 <ext2fs_read_inode2>
    2340:	str	x0, [sp, #104]
    2344:	ldr	x0, [sp, #104]
    2348:	cmp	x0, #0x0
    234c:	b.ne	2744 <ext2fs_write_inode2+0x540>  // b.any
    2350:	ldr	x0, [sp, #56]
    2354:	ldr	x0, [x0, #232]
    2358:	cmp	x0, #0x0
    235c:	b.eq	2400 <ext2fs_write_inode2+0x1fc>  // b.none
    2360:	str	wzr, [sp, #92]
    2364:	b	23e4 <ext2fs_write_inode2+0x1e0>
    2368:	ldr	x0, [sp, #56]
    236c:	ldr	x0, [x0, #232]
    2370:	ldr	x1, [x0, #32]
    2374:	ldr	w0, [sp, #92]
    2378:	lsl	x0, x0, #4
    237c:	add	x0, x1, x0
    2380:	ldr	w0, [x0]
    2384:	ldr	w1, [sp, #52]
    2388:	cmp	w1, w0
    238c:	b.ne	23d8 <ext2fs_write_inode2+0x1d4>  // b.any
    2390:	ldr	x0, [sp, #56]
    2394:	ldr	x0, [x0, #232]
    2398:	ldr	x1, [x0, #32]
    239c:	ldr	w0, [sp, #92]
    23a0:	lsl	x0, x0, #4
    23a4:	add	x0, x1, x0
    23a8:	ldr	x3, [x0, #8]
    23ac:	ldr	w0, [sp, #84]
    23b0:	ldr	w2, [sp, #48]
    23b4:	ldr	w1, [sp, #48]
    23b8:	cmp	w2, w0
    23bc:	csel	w0, w1, w0, le
    23c0:	sxtw	x0, w0
    23c4:	mov	x2, x0
    23c8:	ldr	x1, [sp, #40]
    23cc:	mov	x0, x3
    23d0:	bl	0 <memcpy>
    23d4:	b	241c <ext2fs_write_inode2+0x218>
    23d8:	ldr	w0, [sp, #92]
    23dc:	add	w0, w0, #0x1
    23e0:	str	w0, [sp, #92]
    23e4:	ldr	x0, [sp, #56]
    23e8:	ldr	x0, [x0, #232]
    23ec:	ldr	w0, [x0, #20]
    23f0:	ldr	w1, [sp, #92]
    23f4:	cmp	w1, w0
    23f8:	b.cc	2368 <ext2fs_write_inode2+0x164>  // b.lo, b.ul, b.last
    23fc:	b	241c <ext2fs_write_inode2+0x218>
    2400:	mov	w1, #0x4                   	// #4
    2404:	ldr	x0, [sp, #56]
    2408:	bl	1d8 <ext2fs_create_inode_cache>
    240c:	str	x0, [sp, #104]
    2410:	ldr	x0, [sp, #104]
    2414:	cmp	x0, #0x0
    2418:	b.ne	274c <ext2fs_write_inode2+0x548>  // b.any
    241c:	ldr	x3, [sp, #64]
    2420:	ldr	w0, [sp, #84]
    2424:	ldr	w2, [sp, #48]
    2428:	ldr	w1, [sp, #48]
    242c:	cmp	w2, w0
    2430:	csel	w0, w1, w0, le
    2434:	sxtw	x0, w0
    2438:	mov	x2, x0
    243c:	ldr	x1, [sp, #40]
    2440:	mov	x0, x3
    2444:	bl	0 <memcpy>
    2448:	ldr	x0, [sp, #56]
    244c:	ldr	w0, [x0, #16]
    2450:	and	w0, w0, #0x1
    2454:	cmp	w0, #0x0
    2458:	b.ne	246c <ext2fs_write_inode2+0x268>  // b.any
    245c:	mov	x0, #0xb715                	// #46869
    2460:	movk	x0, #0x7f2b, lsl #16
    2464:	str	x0, [sp, #104]
    2468:	b	2768 <ext2fs_write_inode2+0x564>
    246c:	ldr	w0, [sp, #36]
    2470:	and	w0, w0, #0x1
    2474:	cmp	w0, #0x0
    2478:	b.ne	24a0 <ext2fs_write_inode2+0x29c>  // b.any
    247c:	ldr	x0, [sp, #64]
    2480:	mov	x2, x0
    2484:	ldr	w1, [sp, #52]
    2488:	ldr	x0, [sp, #56]
    248c:	bl	0 <ext2fs_inode_csum_set>
    2490:	str	x0, [sp, #104]
    2494:	ldr	x0, [sp, #104]
    2498:	cmp	x0, #0x0
    249c:	b.ne	2754 <ext2fs_write_inode2+0x550>  // b.any
    24a0:	ldr	w0, [sp, #52]
    24a4:	sub	w1, w0, #0x1
    24a8:	ldr	x0, [sp, #56]
    24ac:	ldr	x0, [x0, #32]
    24b0:	ldr	w0, [x0, #40]
    24b4:	udiv	w0, w1, w0
    24b8:	str	w0, [sp, #80]
    24bc:	ldr	w0, [sp, #52]
    24c0:	sub	w0, w0, #0x1
    24c4:	ldr	x1, [sp, #56]
    24c8:	ldr	x1, [x1, #32]
    24cc:	ldr	w1, [x1, #40]
    24d0:	udiv	w2, w0, w1
    24d4:	mul	w1, w2, w1
    24d8:	sub	w1, w0, w1
    24dc:	ldr	x0, [sp, #56]
    24e0:	ldr	x0, [x0, #32]
    24e4:	ldr	w0, [x0, #76]
    24e8:	cmp	w0, #0x0
    24ec:	b.eq	2500 <ext2fs_write_inode2+0x2fc>  // b.none
    24f0:	ldr	x0, [sp, #56]
    24f4:	ldr	x0, [x0, #32]
    24f8:	ldrh	w0, [x0, #88]
    24fc:	b	2504 <ext2fs_write_inode2+0x300>
    2500:	mov	w0, #0x80                  	// #128
    2504:	mul	w0, w0, w1
    2508:	mov	w0, w0
    250c:	str	x0, [sp, #112]
    2510:	ldr	x0, [sp, #56]
    2514:	ldr	x0, [x0, #32]
    2518:	ldr	w0, [x0, #24]
    251c:	add	w0, w0, #0xa
    2520:	ldr	x1, [sp, #112]
    2524:	lsr	x0, x1, x0
    2528:	str	x0, [sp, #72]
    252c:	ldr	w1, [sp, #80]
    2530:	ldr	x0, [sp, #56]
    2534:	bl	0 <ext2fs_inode_table_loc>
    2538:	str	x0, [sp, #120]
    253c:	ldr	x0, [sp, #120]
    2540:	cmp	x0, #0x0
    2544:	b.ne	2558 <ext2fs_write_inode2+0x354>  // b.any
    2548:	mov	x0, #0xb73b                	// #46907
    254c:	movk	x0, #0x7f2b, lsl #16
    2550:	str	x0, [sp, #104]
    2554:	b	2768 <ext2fs_write_inode2+0x564>
    2558:	ldr	x0, [sp, #56]
    255c:	ldr	x0, [x0, #32]
    2560:	ldr	w0, [x0, #20]
    2564:	mov	w0, w0
    2568:	ldr	x1, [sp, #120]
    256c:	cmp	x1, x0
    2570:	b.cc	25a0 <ext2fs_write_inode2+0x39c>  // b.lo, b.ul, b.last
    2574:	ldr	x0, [sp, #56]
    2578:	ldr	w0, [x0, #72]
    257c:	mov	w1, w0
    2580:	ldr	x0, [sp, #120]
    2584:	add	x0, x1, x0
    2588:	sub	x19, x0, #0x1
    258c:	ldr	x0, [sp, #56]
    2590:	ldr	x0, [x0, #32]
    2594:	bl	0 <ext2fs_blocks_count>
    2598:	cmp	x19, x0
    259c:	b.cc	25b0 <ext2fs_write_inode2+0x3ac>  // b.lo, b.ul, b.last
    25a0:	mov	x0, #0xb71a                	// #46874
    25a4:	movk	x0, #0x7f2b, lsl #16
    25a8:	str	x0, [sp, #104]
    25ac:	b	2768 <ext2fs_write_inode2+0x564>
    25b0:	ldr	x1, [sp, #120]
    25b4:	ldr	x0, [sp, #72]
    25b8:	add	x0, x1, x0
    25bc:	str	x0, [sp, #120]
    25c0:	ldr	x0, [sp, #56]
    25c4:	ldr	x0, [x0, #32]
    25c8:	ldr	w0, [x0, #24]
    25cc:	mov	w1, #0x400                 	// #1024
    25d0:	lsl	w0, w1, w0
    25d4:	sub	w0, w0, #0x1
    25d8:	sxtw	x0, w0
    25dc:	ldr	x1, [sp, #112]
    25e0:	and	x0, x1, x0
    25e4:	str	x0, [sp, #112]
    25e8:	ldr	x0, [sp, #64]
    25ec:	str	x0, [sp, #96]
    25f0:	b	2720 <ext2fs_write_inode2+0x51c>
    25f4:	ldr	w0, [sp, #84]
    25f8:	str	w0, [sp, #88]
    25fc:	ldrsw	x1, [sp, #84]
    2600:	ldr	x0, [sp, #112]
    2604:	add	x1, x1, x0
    2608:	ldr	x0, [sp, #56]
    260c:	ldr	w0, [x0, #40]
    2610:	mov	w0, w0
    2614:	cmp	x1, x0
    2618:	b.ls	2630 <ext2fs_write_inode2+0x42c>  // b.plast
    261c:	ldr	x0, [sp, #56]
    2620:	ldr	w0, [x0, #40]
    2624:	ldr	x1, [sp, #112]
    2628:	sub	w0, w0, w1
    262c:	str	w0, [sp, #88]
    2630:	ldr	x0, [sp, #56]
    2634:	ldr	x0, [x0, #232]
    2638:	ldr	x0, [x0, #8]
    263c:	ldr	x1, [sp, #120]
    2640:	cmp	x1, x0
    2644:	b.eq	2690 <ext2fs_write_inode2+0x48c>  // b.none
    2648:	ldr	x0, [sp, #56]
    264c:	ldr	x4, [x0, #8]
    2650:	ldr	x0, [sp, #56]
    2654:	ldr	x0, [x0, #232]
    2658:	ldr	x0, [x0]
    265c:	mov	x3, x0
    2660:	mov	w2, #0x1                   	// #1
    2664:	ldr	x1, [sp, #120]
    2668:	mov	x0, x4
    266c:	bl	0 <io_channel_read_blk64>
    2670:	str	x0, [sp, #104]
    2674:	ldr	x0, [sp, #104]
    2678:	cmp	x0, #0x0
    267c:	b.ne	275c <ext2fs_write_inode2+0x558>  // b.any
    2680:	ldr	x0, [sp, #56]
    2684:	ldr	x0, [x0, #232]
    2688:	ldr	x1, [sp, #120]
    268c:	str	x1, [x0, #8]
    2690:	ldr	x0, [sp, #56]
    2694:	ldr	x0, [x0, #232]
    2698:	ldr	x1, [x0]
    269c:	ldr	x0, [sp, #112]
    26a0:	mov	w0, w0
    26a4:	add	x0, x1, x0
    26a8:	ldrsw	x1, [sp, #88]
    26ac:	mov	x2, x1
    26b0:	ldr	x1, [sp, #96]
    26b4:	bl	0 <memcpy>
    26b8:	ldr	x0, [sp, #56]
    26bc:	ldr	x4, [x0, #8]
    26c0:	ldr	x0, [sp, #56]
    26c4:	ldr	x0, [x0, #232]
    26c8:	ldr	x0, [x0]
    26cc:	mov	x3, x0
    26d0:	mov	w2, #0x1                   	// #1
    26d4:	ldr	x1, [sp, #120]
    26d8:	mov	x0, x4
    26dc:	bl	0 <io_channel_write_blk64>
    26e0:	str	x0, [sp, #104]
    26e4:	ldr	x0, [sp, #104]
    26e8:	cmp	x0, #0x0
    26ec:	b.ne	2764 <ext2fs_write_inode2+0x560>  // b.any
    26f0:	str	xzr, [sp, #112]
    26f4:	ldrsw	x0, [sp, #88]
    26f8:	ldr	x1, [sp, #96]
    26fc:	add	x0, x1, x0
    2700:	str	x0, [sp, #96]
    2704:	ldr	w1, [sp, #84]
    2708:	ldr	w0, [sp, #88]
    270c:	sub	w0, w1, w0
    2710:	str	w0, [sp, #84]
    2714:	ldr	x0, [sp, #120]
    2718:	add	x0, x0, #0x1
    271c:	str	x0, [sp, #120]
    2720:	ldr	w0, [sp, #84]
    2724:	cmp	w0, #0x0
    2728:	b.ne	25f4 <ext2fs_write_inode2+0x3f0>  // b.any
    272c:	ldr	x0, [sp, #56]
    2730:	ldr	w0, [x0, #16]
    2734:	orr	w1, w0, #0x2
    2738:	ldr	x0, [sp, #56]
    273c:	str	w1, [x0, #16]
    2740:	b	2768 <ext2fs_write_inode2+0x564>
    2744:	nop
    2748:	b	2768 <ext2fs_write_inode2+0x564>
    274c:	nop
    2750:	b	2768 <ext2fs_write_inode2+0x564>
    2754:	nop
    2758:	b	2768 <ext2fs_write_inode2+0x564>
    275c:	nop
    2760:	b	2768 <ext2fs_write_inode2+0x564>
    2764:	nop
    2768:	add	x0, sp, #0x40
    276c:	bl	0 <ext2fs_free_mem>
    2770:	ldr	x0, [sp, #104]
    2774:	ldr	x19, [sp, #16]
    2778:	ldp	x29, x30, [sp], #128
    277c:	ret

0000000000002780 <ext2fs_write_inode_full>:
    2780:	stp	x29, x30, [sp, #-48]!
    2784:	mov	x29, sp
    2788:	str	x0, [sp, #40]
    278c:	str	w1, [sp, #36]
    2790:	str	x2, [sp, #24]
    2794:	str	w3, [sp, #32]
    2798:	mov	w4, #0x0                   	// #0
    279c:	ldr	w3, [sp, #32]
    27a0:	ldr	x2, [sp, #24]
    27a4:	ldr	w1, [sp, #36]
    27a8:	ldr	x0, [sp, #40]
    27ac:	bl	2204 <ext2fs_write_inode2>
    27b0:	ldp	x29, x30, [sp], #48
    27b4:	ret

00000000000027b8 <ext2fs_write_inode>:
    27b8:	stp	x29, x30, [sp, #-48]!
    27bc:	mov	x29, sp
    27c0:	str	x0, [sp, #40]
    27c4:	str	w1, [sp, #36]
    27c8:	str	x2, [sp, #24]
    27cc:	mov	w4, #0x0                   	// #0
    27d0:	mov	w3, #0x80                  	// #128
    27d4:	ldr	x2, [sp, #24]
    27d8:	ldr	w1, [sp, #36]
    27dc:	ldr	x0, [sp, #40]
    27e0:	bl	2204 <ext2fs_write_inode2>
    27e4:	ldp	x29, x30, [sp], #48
    27e8:	ret

00000000000027ec <ext2fs_write_new_inode>:
    27ec:	stp	x29, x30, [sp, #-80]!
    27f0:	mov	x29, sp
    27f4:	str	x0, [sp, #40]
    27f8:	str	w1, [sp, #36]
    27fc:	str	x2, [sp, #24]
    2800:	ldr	x0, [sp, #40]
    2804:	ldr	x0, [x0, #32]
    2808:	ldr	w0, [x0, #76]
    280c:	cmp	w0, #0x0
    2810:	b.eq	2824 <ext2fs_write_new_inode+0x38>  // b.none
    2814:	ldr	x0, [sp, #40]
    2818:	ldr	x0, [x0, #32]
    281c:	ldrh	w0, [x0, #88]
    2820:	b	2828 <ext2fs_write_new_inode+0x3c>
    2824:	mov	w0, #0x80                  	// #128
    2828:	str	w0, [sp, #76]
    282c:	ldr	x0, [sp, #40]
    2830:	ldr	x0, [x0, #184]
    2834:	cmp	x0, #0x0
    2838:	b.eq	2848 <ext2fs_write_new_inode+0x5c>  // b.none
    283c:	ldr	x0, [sp, #40]
    2840:	ldr	x0, [x0, #184]
    2844:	b	2850 <ext2fs_write_new_inode+0x64>
    2848:	mov	x0, #0x0                   	// #0
    284c:	bl	0 <time>
    2850:	str	w0, [sp, #72]
    2854:	ldr	x0, [sp, #24]
    2858:	ldr	w0, [x0, #12]
    285c:	cmp	w0, #0x0
    2860:	b.ne	2870 <ext2fs_write_new_inode+0x84>  // b.any
    2864:	ldr	x0, [sp, #24]
    2868:	ldr	w1, [sp, #72]
    286c:	str	w1, [x0, #12]
    2870:	ldr	x0, [sp, #24]
    2874:	ldr	w0, [x0, #16]
    2878:	cmp	w0, #0x0
    287c:	b.ne	288c <ext2fs_write_new_inode+0xa0>  // b.any
    2880:	ldr	x0, [sp, #24]
    2884:	ldr	w1, [sp, #72]
    2888:	str	w1, [x0, #16]
    288c:	ldr	x0, [sp, #24]
    2890:	ldr	w0, [x0, #8]
    2894:	cmp	w0, #0x0
    2898:	b.ne	28a8 <ext2fs_write_new_inode+0xbc>  // b.any
    289c:	ldr	x0, [sp, #24]
    28a0:	ldr	w1, [sp, #72]
    28a4:	str	w1, [x0, #8]
    28a8:	ldr	w0, [sp, #76]
    28ac:	cmp	w0, #0x80
    28b0:	b.ne	28cc <ext2fs_write_new_inode+0xe0>  // b.any
    28b4:	mov	w3, #0x80                  	// #128
    28b8:	ldr	x2, [sp, #24]
    28bc:	ldr	w1, [sp, #36]
    28c0:	ldr	x0, [sp, #40]
    28c4:	bl	2780 <ext2fs_write_inode_full>
    28c8:	b	299c <ext2fs_write_new_inode+0x1b0>
    28cc:	ldrsw	x0, [sp, #76]
    28d0:	bl	0 <malloc>
    28d4:	str	x0, [sp, #64]
    28d8:	ldr	x0, [sp, #64]
    28dc:	cmp	x0, #0x0
    28e0:	b.ne	28ec <ext2fs_write_new_inode+0x100>  // b.any
    28e4:	mov	x0, #0xc                   	// #12
    28e8:	b	299c <ext2fs_write_new_inode+0x1b0>
    28ec:	ldrsw	x0, [sp, #76]
    28f0:	mov	x2, x0
    28f4:	mov	w1, #0x0                   	// #0
    28f8:	ldr	x0, [sp, #64]
    28fc:	bl	0 <memset>
    2900:	ldr	x0, [sp, #64]
    2904:	ldr	x1, [sp, #24]
    2908:	ldp	x2, x3, [x1]
    290c:	stp	x2, x3, [x0]
    2910:	ldp	x2, x3, [x1, #16]
    2914:	stp	x2, x3, [x0, #16]
    2918:	ldp	x2, x3, [x1, #32]
    291c:	stp	x2, x3, [x0, #32]
    2920:	ldp	x2, x3, [x1, #48]
    2924:	stp	x2, x3, [x0, #48]
    2928:	ldp	x2, x3, [x1, #64]
    292c:	stp	x2, x3, [x0, #64]
    2930:	ldp	x2, x3, [x1, #80]
    2934:	stp	x2, x3, [x0, #80]
    2938:	ldp	x2, x3, [x1, #96]
    293c:	stp	x2, x3, [x0, #96]
    2940:	ldp	x2, x3, [x1, #112]
    2944:	stp	x2, x3, [x0, #112]
    2948:	ldr	x0, [sp, #64]
    294c:	str	x0, [sp, #56]
    2950:	ldr	x0, [sp, #56]
    2954:	mov	w1, #0x20                  	// #32
    2958:	strh	w1, [x0, #128]
    295c:	ldr	x0, [sp, #56]
    2960:	ldr	w0, [x0, #144]
    2964:	cmp	w0, #0x0
    2968:	b.ne	2978 <ext2fs_write_new_inode+0x18c>  // b.any
    296c:	ldr	x0, [sp, #56]
    2970:	ldr	w1, [sp, #72]
    2974:	str	w1, [x0, #144]
    2978:	ldr	w3, [sp, #76]
    297c:	ldr	x2, [sp, #64]
    2980:	ldr	w1, [sp, #36]
    2984:	ldr	x0, [sp, #40]
    2988:	bl	2780 <ext2fs_write_inode_full>
    298c:	str	x0, [sp, #48]
    2990:	ldr	x0, [sp, #64]
    2994:	bl	0 <free>
    2998:	ldr	x0, [sp, #48]
    299c:	ldp	x29, x30, [sp], #80
    29a0:	ret

00000000000029a4 <ext2fs_get_blocks>:
    29a4:	stp	x29, x30, [sp, #-192]!
    29a8:	mov	x29, sp
    29ac:	str	x0, [sp, #40]
    29b0:	str	w1, [sp, #36]
    29b4:	str	x2, [sp, #24]
    29b8:	ldr	x0, [sp, #40]
    29bc:	ldr	x1, [x0]
    29c0:	mov	x0, #0xb701                	// #46849
    29c4:	movk	x0, #0x7f2b, lsl #16
    29c8:	cmp	x1, x0
    29cc:	b.eq	29dc <ext2fs_get_blocks+0x38>  // b.none
    29d0:	mov	x0, #0xb701                	// #46849
    29d4:	movk	x0, #0x7f2b, lsl #16
    29d8:	b	2ab0 <ext2fs_get_blocks+0x10c>
    29dc:	ldr	x0, [sp, #40]
    29e0:	ldr	x0, [x0, #32]
    29e4:	ldr	w0, [x0]
    29e8:	ldr	w1, [sp, #36]
    29ec:	cmp	w1, w0
    29f0:	b.ls	2a00 <ext2fs_get_blocks+0x5c>  // b.plast
    29f4:	mov	x0, #0xb729                	// #46889
    29f8:	movk	x0, #0x7f2b, lsl #16
    29fc:	b	2ab0 <ext2fs_get_blocks+0x10c>
    2a00:	ldr	x0, [sp, #40]
    2a04:	ldr	x0, [x0, #96]
    2a08:	cmp	x0, #0x0
    2a0c:	b.eq	2a38 <ext2fs_get_blocks+0x94>  // b.none
    2a10:	ldr	x0, [sp, #40]
    2a14:	ldr	x3, [x0, #96]
    2a18:	ldr	x2, [sp, #24]
    2a1c:	ldr	w1, [sp, #36]
    2a20:	ldr	x0, [sp, #40]
    2a24:	blr	x3
    2a28:	cmp	x0, #0x0
    2a2c:	b.ne	2a38 <ext2fs_get_blocks+0x94>  // b.any
    2a30:	mov	x0, #0x0                   	// #0
    2a34:	b	2ab0 <ext2fs_get_blocks+0x10c>
    2a38:	add	x0, sp, #0x30
    2a3c:	mov	x2, x0
    2a40:	ldr	w1, [sp, #36]
    2a44:	ldr	x0, [sp, #40]
    2a48:	bl	21d0 <ext2fs_read_inode>
    2a4c:	str	x0, [sp, #176]
    2a50:	ldr	x0, [sp, #176]
    2a54:	cmp	x0, #0x0
    2a58:	b.eq	2a64 <ext2fs_get_blocks+0xc0>  // b.none
    2a5c:	ldr	x0, [sp, #176]
    2a60:	b	2ab0 <ext2fs_get_blocks+0x10c>
    2a64:	str	wzr, [sp, #188]
    2a68:	b	2aa0 <ext2fs_get_blocks+0xfc>
    2a6c:	ldrsw	x0, [sp, #188]
    2a70:	lsl	x0, x0, #2
    2a74:	ldr	x1, [sp, #24]
    2a78:	add	x0, x1, x0
    2a7c:	ldrsw	x1, [sp, #188]
    2a80:	add	x1, x1, #0x8
    2a84:	lsl	x1, x1, #2
    2a88:	add	x2, sp, #0x38
    2a8c:	ldr	w1, [x2, x1]
    2a90:	str	w1, [x0]
    2a94:	ldr	w0, [sp, #188]
    2a98:	add	w0, w0, #0x1
    2a9c:	str	w0, [sp, #188]
    2aa0:	ldr	w0, [sp, #188]
    2aa4:	cmp	w0, #0xe
    2aa8:	b.le	2a6c <ext2fs_get_blocks+0xc8>
    2aac:	mov	x0, #0x0                   	// #0
    2ab0:	ldp	x29, x30, [sp], #192
    2ab4:	ret

0000000000002ab8 <ext2fs_check_directory>:
    2ab8:	stp	x29, x30, [sp, #-176]!
    2abc:	mov	x29, sp
    2ac0:	str	x0, [sp, #24]
    2ac4:	str	w1, [sp, #20]
    2ac8:	ldr	x0, [sp, #24]
    2acc:	ldr	x1, [x0]
    2ad0:	mov	x0, #0xb701                	// #46849
    2ad4:	movk	x0, #0x7f2b, lsl #16
    2ad8:	cmp	x1, x0
    2adc:	b.eq	2aec <ext2fs_check_directory+0x34>  // b.none
    2ae0:	mov	x0, #0xb701                	// #46849
    2ae4:	movk	x0, #0x7f2b, lsl #16
    2ae8:	b	2ba0 <ext2fs_check_directory+0xe8>
    2aec:	ldr	x0, [sp, #24]
    2af0:	ldr	x0, [x0, #32]
    2af4:	ldr	w0, [x0]
    2af8:	ldr	w1, [sp, #20]
    2afc:	cmp	w1, w0
    2b00:	b.ls	2b10 <ext2fs_check_directory+0x58>  // b.plast
    2b04:	mov	x0, #0xb729                	// #46889
    2b08:	movk	x0, #0x7f2b, lsl #16
    2b0c:	b	2ba0 <ext2fs_check_directory+0xe8>
    2b10:	ldr	x0, [sp, #24]
    2b14:	ldr	x0, [x0, #104]
    2b18:	cmp	x0, #0x0
    2b1c:	b.eq	2b54 <ext2fs_check_directory+0x9c>  // b.none
    2b20:	ldr	x0, [sp, #24]
    2b24:	ldr	x2, [x0, #104]
    2b28:	ldr	w1, [sp, #20]
    2b2c:	ldr	x0, [sp, #24]
    2b30:	blr	x2
    2b34:	str	x0, [sp, #168]
    2b38:	ldr	x1, [sp, #168]
    2b3c:	mov	x0, #0xb741                	// #46913
    2b40:	movk	x0, #0x7f2b, lsl #16
    2b44:	cmp	x1, x0
    2b48:	b.eq	2b54 <ext2fs_check_directory+0x9c>  // b.none
    2b4c:	ldr	x0, [sp, #168]
    2b50:	b	2ba0 <ext2fs_check_directory+0xe8>
    2b54:	add	x0, sp, #0x28
    2b58:	mov	x2, x0
    2b5c:	ldr	w1, [sp, #20]
    2b60:	ldr	x0, [sp, #24]
    2b64:	bl	21d0 <ext2fs_read_inode>
    2b68:	str	x0, [sp, #168]
    2b6c:	ldr	x0, [sp, #168]
    2b70:	cmp	x0, #0x0
    2b74:	b.eq	2b80 <ext2fs_check_directory+0xc8>  // b.none
    2b78:	ldr	x0, [sp, #168]
    2b7c:	b	2ba0 <ext2fs_check_directory+0xe8>
    2b80:	ldrh	w0, [sp, #40]
    2b84:	and	w0, w0, #0xf000
    2b88:	cmp	w0, #0x4, lsl #12
    2b8c:	b.eq	2b9c <ext2fs_check_directory+0xe4>  // b.none
    2b90:	mov	x0, #0xb74a                	// #46922
    2b94:	movk	x0, #0x7f2b, lsl #16
    2b98:	b	2ba0 <ext2fs_check_directory+0xe8>
    2b9c:	mov	x0, #0x0                   	// #0
    2ba0:	ldp	x29, x30, [sp], #176
    2ba4:	ret

io_manager.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <io_channel_set_options>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	str	xzr, [sp, #72]
  14:	ldr	x0, [sp, #24]
  18:	ldr	x1, [x0]
  1c:	mov	x0, #0xb705                	// #46853
  20:	movk	x0, #0x7f2b, lsl #16
  24:	cmp	x1, x0
  28:	b.eq	38 <io_channel_set_options+0x38>  // b.none
  2c:	mov	x0, #0xb705                	// #46853
  30:	movk	x0, #0x7f2b, lsl #16
  34:	b	16c <io_channel_set_options+0x16c>
  38:	ldr	x0, [sp, #16]
  3c:	cmp	x0, #0x0
  40:	b.ne	4c <io_channel_set_options+0x4c>  // b.any
  44:	mov	x0, #0x0                   	// #0
  48:	b	16c <io_channel_set_options+0x16c>
  4c:	ldr	x0, [sp, #24]
  50:	ldr	x0, [x0, #8]
  54:	ldr	x0, [x0, #72]
  58:	cmp	x0, #0x0
  5c:	b.ne	6c <io_channel_set_options+0x6c>  // b.any
  60:	mov	x0, #0xb747                	// #46919
  64:	movk	x0, #0x7f2b, lsl #16
  68:	b	16c <io_channel_set_options+0x16c>
  6c:	ldr	x0, [sp, #16]
  70:	bl	0 <strlen>
  74:	add	x0, x0, #0x1
  78:	bl	0 <malloc>
  7c:	str	x0, [sp, #40]
  80:	ldr	x0, [sp, #40]
  84:	cmp	x0, #0x0
  88:	b.ne	98 <io_channel_set_options+0x98>  // b.any
  8c:	mov	x0, #0xb746                	// #46918
  90:	movk	x0, #0x7f2b, lsl #16
  94:	b	16c <io_channel_set_options+0x16c>
  98:	ldr	x1, [sp, #16]
  9c:	ldr	x0, [sp, #40]
  a0:	bl	0 <strcpy>
  a4:	ldr	x0, [sp, #40]
  a8:	str	x0, [sp, #56]
  ac:	b	13c <io_channel_set_options+0x13c>
  b0:	mov	w1, #0x26                  	// #38
  b4:	ldr	x0, [sp, #56]
  b8:	bl	0 <strchr>
  bc:	str	x0, [sp, #64]
  c0:	ldr	x0, [sp, #64]
  c4:	cmp	x0, #0x0
  c8:	b.eq	dc <io_channel_set_options+0xdc>  // b.none
  cc:	ldr	x0, [sp, #64]
  d0:	add	x1, x0, #0x1
  d4:	str	x1, [sp, #64]
  d8:	strb	wzr, [x0]
  dc:	mov	w1, #0x3d                  	// #61
  e0:	ldr	x0, [sp, #56]
  e4:	bl	0 <strchr>
  e8:	str	x0, [sp, #48]
  ec:	ldr	x0, [sp, #48]
  f0:	cmp	x0, #0x0
  f4:	b.eq	108 <io_channel_set_options+0x108>  // b.none
  f8:	ldr	x0, [sp, #48]
  fc:	add	x1, x0, #0x1
 100:	str	x1, [sp, #48]
 104:	strb	wzr, [x0]
 108:	ldr	x0, [sp, #24]
 10c:	ldr	x0, [x0, #8]
 110:	ldr	x3, [x0, #72]
 114:	ldr	x2, [sp, #48]
 118:	ldr	x1, [sp, #56]
 11c:	ldr	x0, [sp, #24]
 120:	blr	x3
 124:	str	x0, [sp, #72]
 128:	ldr	x0, [sp, #72]
 12c:	cmp	x0, #0x0
 130:	b.ne	15c <io_channel_set_options+0x15c>  // b.any
 134:	ldr	x0, [sp, #64]
 138:	str	x0, [sp, #56]
 13c:	ldr	x0, [sp, #56]
 140:	cmp	x0, #0x0
 144:	b.eq	160 <io_channel_set_options+0x160>  // b.none
 148:	ldr	x0, [sp, #56]
 14c:	ldrb	w0, [x0]
 150:	cmp	w0, #0x0
 154:	b.ne	b0 <io_channel_set_options+0xb0>  // b.any
 158:	b	160 <io_channel_set_options+0x160>
 15c:	nop
 160:	ldr	x0, [sp, #40]
 164:	bl	0 <free>
 168:	ldr	x0, [sp, #72]
 16c:	ldp	x29, x30, [sp], #80
 170:	ret

0000000000000174 <io_channel_write_byte>:
 174:	stp	x29, x30, [sp, #-48]!
 178:	mov	x29, sp
 17c:	str	x0, [sp, #40]
 180:	str	x1, [sp, #32]
 184:	str	w2, [sp, #28]
 188:	str	x3, [sp, #16]
 18c:	ldr	x0, [sp, #40]
 190:	ldr	x1, [x0]
 194:	mov	x0, #0xb705                	// #46853
 198:	movk	x0, #0x7f2b, lsl #16
 19c:	cmp	x1, x0
 1a0:	b.eq	1b0 <io_channel_write_byte+0x3c>  // b.none
 1a4:	mov	x0, #0xb705                	// #46853
 1a8:	movk	x0, #0x7f2b, lsl #16
 1ac:	b	1f0 <io_channel_write_byte+0x7c>
 1b0:	ldr	x0, [sp, #40]
 1b4:	ldr	x0, [x0, #8]
 1b8:	ldr	x0, [x0, #64]
 1bc:	cmp	x0, #0x0
 1c0:	b.eq	1e8 <io_channel_write_byte+0x74>  // b.none
 1c4:	ldr	x0, [sp, #40]
 1c8:	ldr	x0, [x0, #8]
 1cc:	ldr	x4, [x0, #64]
 1d0:	ldr	x3, [sp, #16]
 1d4:	ldr	w2, [sp, #28]
 1d8:	ldr	x1, [sp, #32]
 1dc:	ldr	x0, [sp, #40]
 1e0:	blr	x4
 1e4:	b	1f0 <io_channel_write_byte+0x7c>
 1e8:	mov	x0, #0xb750                	// #46928
 1ec:	movk	x0, #0x7f2b, lsl #16
 1f0:	ldp	x29, x30, [sp], #48
 1f4:	ret

00000000000001f8 <io_channel_read_blk64>:
 1f8:	stp	x29, x30, [sp, #-48]!
 1fc:	mov	x29, sp
 200:	str	x0, [sp, #40]
 204:	str	x1, [sp, #32]
 208:	str	w2, [sp, #28]
 20c:	str	x3, [sp, #16]
 210:	ldr	x0, [sp, #40]
 214:	ldr	x1, [x0]
 218:	mov	x0, #0xb705                	// #46853
 21c:	movk	x0, #0x7f2b, lsl #16
 220:	cmp	x1, x0
 224:	b.eq	234 <io_channel_read_blk64+0x3c>  // b.none
 228:	mov	x0, #0xb705                	// #46853
 22c:	movk	x0, #0x7f2b, lsl #16
 230:	b	2a8 <io_channel_read_blk64+0xb0>
 234:	ldr	x0, [sp, #40]
 238:	ldr	x0, [x0, #8]
 23c:	ldr	x0, [x0, #88]
 240:	cmp	x0, #0x0
 244:	b.eq	26c <io_channel_read_blk64+0x74>  // b.none
 248:	ldr	x0, [sp, #40]
 24c:	ldr	x0, [x0, #8]
 250:	ldr	x4, [x0, #88]
 254:	ldr	x3, [sp, #16]
 258:	ldr	w2, [sp, #28]
 25c:	ldr	x1, [sp, #32]
 260:	ldr	x0, [sp, #40]
 264:	blr	x4
 268:	b	2a8 <io_channel_read_blk64+0xb0>
 26c:	ldr	x0, [sp, #32]
 270:	lsr	x0, x0, #32
 274:	cmp	x0, #0x0
 278:	b.eq	288 <io_channel_read_blk64+0x90>  // b.none
 27c:	mov	x0, #0xb787                	// #46983
 280:	movk	x0, #0x7f2b, lsl #16
 284:	b	2a8 <io_channel_read_blk64+0xb0>
 288:	ldr	x0, [sp, #40]
 28c:	ldr	x0, [x0, #8]
 290:	ldr	x4, [x0, #40]
 294:	ldr	x3, [sp, #16]
 298:	ldr	w2, [sp, #28]
 29c:	ldr	x1, [sp, #32]
 2a0:	ldr	x0, [sp, #40]
 2a4:	blr	x4
 2a8:	ldp	x29, x30, [sp], #48
 2ac:	ret

00000000000002b0 <io_channel_write_blk64>:
 2b0:	stp	x29, x30, [sp, #-48]!
 2b4:	mov	x29, sp
 2b8:	str	x0, [sp, #40]
 2bc:	str	x1, [sp, #32]
 2c0:	str	w2, [sp, #28]
 2c4:	str	x3, [sp, #16]
 2c8:	ldr	x0, [sp, #40]
 2cc:	ldr	x1, [x0]
 2d0:	mov	x0, #0xb705                	// #46853
 2d4:	movk	x0, #0x7f2b, lsl #16
 2d8:	cmp	x1, x0
 2dc:	b.eq	2ec <io_channel_write_blk64+0x3c>  // b.none
 2e0:	mov	x0, #0xb705                	// #46853
 2e4:	movk	x0, #0x7f2b, lsl #16
 2e8:	b	360 <io_channel_write_blk64+0xb0>
 2ec:	ldr	x0, [sp, #40]
 2f0:	ldr	x0, [x0, #8]
 2f4:	ldr	x0, [x0, #96]
 2f8:	cmp	x0, #0x0
 2fc:	b.eq	324 <io_channel_write_blk64+0x74>  // b.none
 300:	ldr	x0, [sp, #40]
 304:	ldr	x0, [x0, #8]
 308:	ldr	x4, [x0, #96]
 30c:	ldr	x3, [sp, #16]
 310:	ldr	w2, [sp, #28]
 314:	ldr	x1, [sp, #32]
 318:	ldr	x0, [sp, #40]
 31c:	blr	x4
 320:	b	360 <io_channel_write_blk64+0xb0>
 324:	ldr	x0, [sp, #32]
 328:	lsr	x0, x0, #32
 32c:	cmp	x0, #0x0
 330:	b.eq	340 <io_channel_write_blk64+0x90>  // b.none
 334:	mov	x0, #0xb787                	// #46983
 338:	movk	x0, #0x7f2b, lsl #16
 33c:	b	360 <io_channel_write_blk64+0xb0>
 340:	ldr	x0, [sp, #40]
 344:	ldr	x0, [x0, #8]
 348:	ldr	x4, [x0, #48]
 34c:	ldr	x3, [sp, #16]
 350:	ldr	w2, [sp, #28]
 354:	ldr	x1, [sp, #32]
 358:	ldr	x0, [sp, #40]
 35c:	blr	x4
 360:	ldp	x29, x30, [sp], #48
 364:	ret

0000000000000368 <io_channel_discard>:
 368:	stp	x29, x30, [sp, #-48]!
 36c:	mov	x29, sp
 370:	str	x0, [sp, #40]
 374:	str	x1, [sp, #32]
 378:	str	x2, [sp, #24]
 37c:	ldr	x0, [sp, #40]
 380:	ldr	x1, [x0]
 384:	mov	x0, #0xb705                	// #46853
 388:	movk	x0, #0x7f2b, lsl #16
 38c:	cmp	x1, x0
 390:	b.eq	3a0 <io_channel_discard+0x38>  // b.none
 394:	mov	x0, #0xb705                	// #46853
 398:	movk	x0, #0x7f2b, lsl #16
 39c:	b	3dc <io_channel_discard+0x74>
 3a0:	ldr	x0, [sp, #40]
 3a4:	ldr	x0, [x0, #8]
 3a8:	ldr	x0, [x0, #104]
 3ac:	cmp	x0, #0x0
 3b0:	b.eq	3d4 <io_channel_discard+0x6c>  // b.none
 3b4:	ldr	x0, [sp, #40]
 3b8:	ldr	x0, [x0, #8]
 3bc:	ldr	x3, [x0, #104]
 3c0:	ldr	x2, [sp, #24]
 3c4:	ldr	x1, [sp, #32]
 3c8:	ldr	x0, [sp, #40]
 3cc:	blr	x3
 3d0:	b	3dc <io_channel_discard+0x74>
 3d4:	mov	x0, #0xb750                	// #46928
 3d8:	movk	x0, #0x7f2b, lsl #16
 3dc:	ldp	x29, x30, [sp], #48
 3e0:	ret

00000000000003e4 <io_channel_zeroout>:
 3e4:	stp	x29, x30, [sp, #-48]!
 3e8:	mov	x29, sp
 3ec:	str	x0, [sp, #40]
 3f0:	str	x1, [sp, #32]
 3f4:	str	x2, [sp, #24]
 3f8:	ldr	x0, [sp, #40]
 3fc:	ldr	x1, [x0]
 400:	mov	x0, #0xb705                	// #46853
 404:	movk	x0, #0x7f2b, lsl #16
 408:	cmp	x1, x0
 40c:	b.eq	41c <io_channel_zeroout+0x38>  // b.none
 410:	mov	x0, #0xb705                	// #46853
 414:	movk	x0, #0x7f2b, lsl #16
 418:	b	458 <io_channel_zeroout+0x74>
 41c:	ldr	x0, [sp, #40]
 420:	ldr	x0, [x0, #8]
 424:	ldr	x0, [x0, #120]
 428:	cmp	x0, #0x0
 42c:	b.eq	450 <io_channel_zeroout+0x6c>  // b.none
 430:	ldr	x0, [sp, #40]
 434:	ldr	x0, [x0, #8]
 438:	ldr	x3, [x0, #120]
 43c:	ldr	x2, [sp, #24]
 440:	ldr	x1, [sp, #32]
 444:	ldr	x0, [sp, #40]
 448:	blr	x3
 44c:	b	458 <io_channel_zeroout+0x74>
 450:	mov	x0, #0xb750                	// #46928
 454:	movk	x0, #0x7f2b, lsl #16
 458:	ldp	x29, x30, [sp], #48
 45c:	ret

0000000000000460 <io_channel_alloc_buf>:
 460:	stp	x29, x30, [sp, #-64]!
 464:	mov	x29, sp
 468:	str	x0, [sp, #40]
 46c:	str	w1, [sp, #36]
 470:	str	x2, [sp, #24]
 474:	ldr	w0, [sp, #36]
 478:	cmp	w0, #0x0
 47c:	b.ne	494 <io_channel_alloc_buf+0x34>  // b.any
 480:	ldr	x0, [sp, #40]
 484:	ldr	w0, [x0, #24]
 488:	sxtw	x0, w0
 48c:	str	x0, [sp, #56]
 490:	b	4cc <io_channel_alloc_buf+0x6c>
 494:	ldr	w0, [sp, #36]
 498:	cmp	w0, #0x0
 49c:	b.le	4bc <io_channel_alloc_buf+0x5c>
 4a0:	ldr	x0, [sp, #40]
 4a4:	ldr	w1, [x0, #24]
 4a8:	ldr	w0, [sp, #36]
 4ac:	mul	w0, w1, w0
 4b0:	sxtw	x0, w0
 4b4:	str	x0, [sp, #56]
 4b8:	b	4cc <io_channel_alloc_buf+0x6c>
 4bc:	ldr	w0, [sp, #36]
 4c0:	neg	w0, w0
 4c4:	sxtw	x0, w0
 4c8:	str	x0, [sp, #56]
 4cc:	ldr	x0, [sp, #40]
 4d0:	ldr	w0, [x0, #184]
 4d4:	cmp	w0, #0x0
 4d8:	b.eq	4fc <io_channel_alloc_buf+0x9c>  // b.none
 4dc:	ldr	x0, [sp, #40]
 4e0:	ldr	w0, [x0, #184]
 4e4:	sxtw	x0, w0
 4e8:	ldr	x2, [sp, #24]
 4ec:	mov	x1, x0
 4f0:	ldr	x0, [sp, #56]
 4f4:	bl	0 <ext2fs_get_memalign>
 4f8:	b	508 <io_channel_alloc_buf+0xa8>
 4fc:	ldr	x1, [sp, #24]
 500:	ldr	x0, [sp, #56]
 504:	bl	0 <ext2fs_get_mem>
 508:	ldp	x29, x30, [sp], #64
 50c:	ret

0000000000000510 <io_channel_cache_readahead>:
 510:	stp	x29, x30, [sp, #-48]!
 514:	mov	x29, sp
 518:	str	x0, [sp, #40]
 51c:	str	x1, [sp, #32]
 520:	str	x2, [sp, #24]
 524:	ldr	x0, [sp, #40]
 528:	ldr	x0, [x0, #8]
 52c:	ldr	x0, [x0, #112]
 530:	cmp	x0, #0x0
 534:	b.ne	544 <io_channel_cache_readahead+0x34>  // b.any
 538:	mov	x0, #0xb781                	// #46977
 53c:	movk	x0, #0x7f2b, lsl #16
 540:	b	560 <io_channel_cache_readahead+0x50>
 544:	ldr	x0, [sp, #40]
 548:	ldr	x0, [x0, #8]
 54c:	ldr	x3, [x0, #112]
 550:	ldr	x2, [sp, #24]
 554:	ldr	x1, [sp, #32]
 558:	ldr	x0, [sp, #40]
 55c:	blr	x3
 560:	ldp	x29, x30, [sp], #48
 564:	ret

ismounted.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fsP_is_disk_device>:
   0:	sub	sp, sp, #0x10
   4:	str	w0, [sp, #12]
   8:	ldr	w0, [sp, #12]
   c:	and	w0, w0, #0xf000
  10:	cmp	w0, #0x6, lsl #12
  14:	cset	w0, eq  // eq = none
  18:	and	w0, w0, #0xff
  1c:	add	sp, sp, #0x10
  20:	ret

0000000000000024 <check_loop_mounted>:
  24:	stp	x29, x30, [sp, #-288]!
  28:	mov	x29, sp
  2c:	str	x0, [sp, #40]
  30:	str	x1, [sp, #32]
  34:	str	x2, [sp, #24]
  38:	str	x3, [sp, #16]
  3c:	add	x0, sp, #0x30
  40:	mov	x1, #0xe8                  	// #232
  44:	mov	x2, x1
  48:	mov	w1, #0x0                   	// #0
  4c:	bl	0 <memset>
  50:	ldr	x0, [sp, #32]
  54:	bl	0 <gnu_dev_major>
  58:	cmp	w0, #0x7
  5c:	b.ne	e0 <check_loop_mounted+0xbc>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	ldr	x0, [sp, #40]
  68:	bl	0 <open>
  6c:	str	w0, [sp, #284]
  70:	ldr	w0, [sp, #284]
  74:	cmp	w0, #0x0
  78:	b.ge	84 <check_loop_mounted+0x60>  // b.tcont
  7c:	mov	w0, #0xffffffff            	// #-1
  80:	b	e4 <check_loop_mounted+0xc0>
  84:	add	x0, sp, #0x30
  88:	mov	x2, x0
  8c:	mov	x1, #0x4c05                	// #19461
  90:	ldr	w0, [sp, #284]
  94:	bl	0 <ioctl>
  98:	str	w0, [sp, #280]
  9c:	ldr	w0, [sp, #284]
  a0:	bl	0 <close>
  a4:	ldr	w0, [sp, #280]
  a8:	cmp	w0, #0x0
  ac:	b.ge	b8 <check_loop_mounted+0x94>  // b.tcont
  b0:	mov	w0, #0xffffffff            	// #-1
  b4:	b	e4 <check_loop_mounted+0xc0>
  b8:	ldr	x0, [sp, #48]
  bc:	ldr	x1, [sp, #24]
  c0:	cmp	x1, x0
  c4:	b.ne	e0 <check_loop_mounted+0xbc>  // b.any
  c8:	ldr	x0, [sp, #56]
  cc:	ldr	x1, [sp, #16]
  d0:	cmp	x1, x0
  d4:	b.ne	e0 <check_loop_mounted+0xbc>  // b.any
  d8:	mov	w0, #0x1                   	// #1
  dc:	b	e4 <check_loop_mounted+0xc0>
  e0:	mov	w0, #0x0                   	// #0
  e4:	ldp	x29, x30, [sp], #288
  e8:	ret

00000000000000ec <check_mntent_file>:
  ec:	stp	x29, x30, [sp, #-256]!
  f0:	mov	x29, sp
  f4:	str	x0, [sp, #56]
  f8:	str	x1, [sp, #48]
  fc:	str	x2, [sp, #40]
 100:	str	x3, [sp, #32]
 104:	str	w4, [sp, #28]
 108:	str	xzr, [sp, #248]
 10c:	str	xzr, [sp, #240]
 110:	str	xzr, [sp, #232]
 114:	str	xzr, [sp, #224]
 118:	ldr	x0, [sp, #40]
 11c:	str	wzr, [x0]
 120:	adrp	x0, 0 <ext2fsP_is_disk_device>
 124:	add	x1, x0, #0x0
 128:	ldr	x0, [sp, #56]
 12c:	bl	0 <setmntent>
 130:	str	x0, [sp, #216]
 134:	ldr	x0, [sp, #216]
 138:	cmp	x0, #0x0
 13c:	b.ne	188 <check_mntent_file+0x9c>  // b.any
 140:	bl	0 <__errno_location>
 144:	ldr	w0, [x0]
 148:	cmp	w0, #0x2
 14c:	b.ne	178 <check_mntent_file+0x8c>  // b.any
 150:	adrp	x0, 0 <ext2fsP_is_disk_device>
 154:	add	x0, x0, #0x0
 158:	bl	0 <getenv>
 15c:	cmp	x0, #0x0
 160:	b.eq	16c <check_mntent_file+0x80>  // b.none
 164:	mov	x0, #0x0                   	// #0
 168:	b	490 <check_mntent_file+0x3a4>
 16c:	mov	x0, #0xb788                	// #46984
 170:	movk	x0, #0x7f2b, lsl #16
 174:	b	490 <check_mntent_file+0x3a4>
 178:	bl	0 <__errno_location>
 17c:	ldr	w0, [x0]
 180:	sxtw	x0, w0
 184:	b	490 <check_mntent_file+0x3a4>
 188:	add	x0, sp, #0x48
 18c:	mov	x1, x0
 190:	ldr	x0, [sp, #48]
 194:	bl	0 <stat>
 198:	cmp	w0, #0x0
 19c:	b.ne	2d4 <check_mntent_file+0x1e8>  // b.any
 1a0:	ldr	w0, [sp, #88]
 1a4:	bl	0 <ext2fsP_is_disk_device>
 1a8:	cmp	w0, #0x0
 1ac:	b.eq	1bc <check_mntent_file+0xd0>  // b.none
 1b0:	ldr	x0, [sp, #104]
 1b4:	str	x0, [sp, #232]
 1b8:	b	2d4 <check_mntent_file+0x1e8>
 1bc:	ldr	x0, [sp, #72]
 1c0:	str	x0, [sp, #240]
 1c4:	ldr	x0, [sp, #80]
 1c8:	str	x0, [sp, #224]
 1cc:	b	2d4 <check_mntent_file+0x1e8>
 1d0:	ldr	x0, [sp, #208]
 1d4:	ldr	x0, [x0]
 1d8:	ldrb	w0, [x0]
 1dc:	cmp	w0, #0x2f
 1e0:	b.eq	1e8 <check_mntent_file+0xfc>  // b.none
 1e4:	b	2d4 <check_mntent_file+0x1e8>
 1e8:	ldr	x0, [sp, #208]
 1ec:	ldr	x0, [x0, #8]
 1f0:	add	x1, sp, #0x48
 1f4:	bl	0 <stat>
 1f8:	cmp	w0, #0x0
 1fc:	b.eq	204 <check_mntent_file+0x118>  // b.none
 200:	b	2d4 <check_mntent_file+0x1e8>
 204:	ldr	x0, [sp, #208]
 208:	ldr	x0, [x0]
 20c:	mov	x1, x0
 210:	ldr	x0, [sp, #48]
 214:	bl	0 <strcmp>
 218:	cmp	w0, #0x0
 21c:	b.ne	240 <check_mntent_file+0x154>  // b.any
 220:	ldr	x0, [sp, #232]
 224:	cmp	x0, #0x0
 228:	b.eq	2f0 <check_mntent_file+0x204>  // b.none
 22c:	ldr	x0, [sp, #72]
 230:	ldr	x1, [sp, #232]
 234:	cmp	x1, x0
 238:	b.eq	2f0 <check_mntent_file+0x204>  // b.none
 23c:	b	2d4 <check_mntent_file+0x1e8>
 240:	ldr	x0, [sp, #208]
 244:	ldr	x0, [x0]
 248:	add	x1, sp, #0x48
 24c:	bl	0 <stat>
 250:	cmp	w0, #0x0
 254:	b.ne	2d4 <check_mntent_file+0x1e8>  // b.any
 258:	ldr	w0, [sp, #88]
 25c:	bl	0 <ext2fsP_is_disk_device>
 260:	cmp	w0, #0x0
 264:	b.eq	2a8 <check_mntent_file+0x1bc>  // b.none
 268:	ldr	x0, [sp, #232]
 26c:	cmp	x0, #0x0
 270:	b.eq	284 <check_mntent_file+0x198>  // b.none
 274:	ldr	x0, [sp, #104]
 278:	ldr	x1, [sp, #232]
 27c:	cmp	x1, x0
 280:	b.eq	2f8 <check_mntent_file+0x20c>  // b.none
 284:	ldr	x0, [sp, #208]
 288:	ldr	x0, [x0]
 28c:	ldr	x1, [sp, #104]
 290:	ldr	x3, [sp, #224]
 294:	ldr	x2, [sp, #240]
 298:	bl	24 <check_loop_mounted>
 29c:	cmp	w0, #0x1
 2a0:	b.ne	2d4 <check_mntent_file+0x1e8>  // b.any
 2a4:	b	304 <check_mntent_file+0x218>
 2a8:	ldr	x0, [sp, #240]
 2ac:	cmp	x0, #0x0
 2b0:	b.eq	2d4 <check_mntent_file+0x1e8>  // b.none
 2b4:	ldr	x0, [sp, #72]
 2b8:	ldr	x1, [sp, #240]
 2bc:	cmp	x1, x0
 2c0:	b.ne	2d4 <check_mntent_file+0x1e8>  // b.any
 2c4:	ldr	x0, [sp, #80]
 2c8:	ldr	x1, [sp, #224]
 2cc:	cmp	x1, x0
 2d0:	b.eq	300 <check_mntent_file+0x214>  // b.none
 2d4:	ldr	x0, [sp, #216]
 2d8:	bl	0 <getmntent>
 2dc:	str	x0, [sp, #208]
 2e0:	ldr	x0, [sp, #208]
 2e4:	cmp	x0, #0x0
 2e8:	b.ne	1d0 <check_mntent_file+0xe4>  // b.any
 2ec:	b	304 <check_mntent_file+0x218>
 2f0:	nop
 2f4:	b	304 <check_mntent_file+0x218>
 2f8:	nop
 2fc:	b	304 <check_mntent_file+0x218>
 300:	nop
 304:	ldr	x0, [sp, #208]
 308:	cmp	x0, #0x0
 30c:	b.ne	37c <check_mntent_file+0x290>  // b.any
 310:	ldr	x0, [sp, #232]
 314:	cmp	x0, #0x0
 318:	b.eq	480 <check_mntent_file+0x394>  // b.none
 31c:	add	x0, sp, #0x48
 320:	mov	x1, x0
 324:	adrp	x0, 0 <ext2fsP_is_disk_device>
 328:	add	x0, x0, #0x0
 32c:	bl	0 <stat>
 330:	cmp	w0, #0x0
 334:	b.ne	480 <check_mntent_file+0x394>  // b.any
 338:	ldr	x0, [sp, #72]
 33c:	ldr	x1, [sp, #232]
 340:	cmp	x1, x0
 344:	b.ne	480 <check_mntent_file+0x394>  // b.any
 348:	ldr	x0, [sp, #40]
 34c:	mov	w1, #0x1                   	// #1
 350:	str	w1, [x0]
 354:	ldr	x0, [sp, #32]
 358:	cmp	x0, #0x0
 35c:	b.eq	400 <check_mntent_file+0x314>  // b.none
 360:	ldrsw	x0, [sp, #28]
 364:	mov	x2, x0
 368:	adrp	x0, 0 <ext2fsP_is_disk_device>
 36c:	add	x1, x0, #0x0
 370:	ldr	x0, [sp, #32]
 374:	bl	0 <strncpy>
 378:	b	400 <check_mntent_file+0x314>
 37c:	ldr	x0, [sp, #40]
 380:	mov	w1, #0x1                   	// #1
 384:	str	w1, [x0]
 388:	adrp	x0, 0 <ext2fsP_is_disk_device>
 38c:	add	x1, x0, #0x0
 390:	ldr	x0, [sp, #208]
 394:	bl	0 <hasmntopt>
 398:	cmp	x0, #0x0
 39c:	b.eq	3b4 <check_mntent_file+0x2c8>  // b.none
 3a0:	ldr	x0, [sp, #40]
 3a4:	ldr	w0, [x0]
 3a8:	orr	w1, w0, #0x4
 3ac:	ldr	x0, [sp, #40]
 3b0:	str	w1, [x0]
 3b4:	ldr	x0, [sp, #32]
 3b8:	cmp	x0, #0x0
 3bc:	b.eq	3dc <check_mntent_file+0x2f0>  // b.none
 3c0:	ldr	x0, [sp, #208]
 3c4:	ldr	x0, [x0, #8]
 3c8:	ldrsw	x1, [sp, #28]
 3cc:	mov	x2, x1
 3d0:	mov	x1, x0
 3d4:	ldr	x0, [sp, #32]
 3d8:	bl	0 <strncpy>
 3dc:	ldr	x0, [sp, #208]
 3e0:	ldr	x2, [x0, #8]
 3e4:	adrp	x0, 0 <ext2fsP_is_disk_device>
 3e8:	add	x1, x0, #0x0
 3ec:	mov	x0, x2
 3f0:	bl	0 <strcmp>
 3f4:	cmp	w0, #0x0
 3f8:	b.ne	478 <check_mntent_file+0x38c>  // b.any
 3fc:	b	404 <check_mntent_file+0x318>
 400:	nop
 404:	ldr	x0, [sp, #40]
 408:	ldr	w0, [x0]
 40c:	orr	w1, w0, #0x2
 410:	ldr	x0, [sp, #40]
 414:	str	w1, [x0]
 418:	mov	w2, #0x180                 	// #384
 41c:	mov	w1, #0x42                  	// #66
 420:	adrp	x0, 0 <ext2fsP_is_disk_device>
 424:	add	x0, x0, #0x0
 428:	bl	0 <open>
 42c:	str	w0, [sp, #204]
 430:	ldr	w0, [sp, #204]
 434:	cmp	w0, #0x0
 438:	b.ge	464 <check_mntent_file+0x378>  // b.tcont
 43c:	bl	0 <__errno_location>
 440:	ldr	w0, [x0]
 444:	cmp	w0, #0x1e
 448:	b.ne	46c <check_mntent_file+0x380>  // b.any
 44c:	ldr	x0, [sp, #40]
 450:	ldr	w0, [x0]
 454:	orr	w1, w0, #0x4
 458:	ldr	x0, [sp, #40]
 45c:	str	w1, [x0]
 460:	b	46c <check_mntent_file+0x380>
 464:	ldr	w0, [sp, #204]
 468:	bl	0 <close>
 46c:	adrp	x0, 0 <ext2fsP_is_disk_device>
 470:	add	x0, x0, #0x0
 474:	bl	0 <unlink>
 478:	str	xzr, [sp, #248]
 47c:	b	484 <check_mntent_file+0x398>
 480:	nop
 484:	ldr	x0, [sp, #216]
 488:	bl	0 <endmntent>
 48c:	ldr	x0, [sp, #248]
 490:	ldp	x29, x30, [sp], #256
 494:	ret

0000000000000498 <check_mntent>:
 498:	stp	x29, x30, [sp, #-64]!
 49c:	mov	x29, sp
 4a0:	str	x0, [sp, #40]
 4a4:	str	x1, [sp, #32]
 4a8:	str	x2, [sp, #24]
 4ac:	str	w3, [sp, #20]
 4b0:	ldr	w4, [sp, #20]
 4b4:	ldr	x3, [sp, #24]
 4b8:	ldr	x2, [sp, #32]
 4bc:	ldr	x1, [sp, #40]
 4c0:	adrp	x0, 0 <ext2fsP_is_disk_device>
 4c4:	add	x0, x0, #0x0
 4c8:	bl	ec <check_mntent_file>
 4cc:	str	x0, [sp, #56]
 4d0:	ldr	x0, [sp, #56]
 4d4:	cmp	x0, #0x0
 4d8:	b.ne	4e4 <check_mntent+0x4c>  // b.any
 4dc:	mov	x0, #0x0                   	// #0
 4e0:	b	508 <check_mntent+0x70>
 4e4:	ldr	w4, [sp, #20]
 4e8:	ldr	x3, [sp, #24]
 4ec:	ldr	x2, [sp, #32]
 4f0:	ldr	x1, [sp, #40]
 4f4:	adrp	x0, 0 <ext2fsP_is_disk_device>
 4f8:	add	x0, x0, #0x0
 4fc:	bl	ec <check_mntent_file>
 500:	str	x0, [sp, #56]
 504:	ldr	x0, [sp, #56]
 508:	ldp	x29, x30, [sp], #64
 50c:	ret

0000000000000510 <is_swap_device>:
 510:	sub	sp, sp, #0x4c0
 514:	stp	x29, x30, [sp]
 518:	mov	x29, sp
 51c:	str	x0, [sp, #24]
 520:	str	wzr, [sp, #1204]
 524:	str	xzr, [sp, #1208]
 528:	add	x0, sp, #0x20
 52c:	mov	x1, x0
 530:	ldr	x0, [sp, #24]
 534:	bl	0 <stat>
 538:	cmp	w0, #0x0
 53c:	b.ne	558 <is_swap_device+0x48>  // b.any
 540:	ldr	w0, [sp, #48]
 544:	bl	0 <ext2fsP_is_disk_device>
 548:	cmp	w0, #0x0
 54c:	b.eq	558 <is_swap_device+0x48>  // b.none
 550:	ldr	x0, [sp, #64]
 554:	str	x0, [sp, #1208]
 558:	adrp	x0, 0 <ext2fsP_is_disk_device>
 55c:	add	x1, x0, #0x0
 560:	adrp	x0, 0 <ext2fsP_is_disk_device>
 564:	add	x0, x0, #0x0
 568:	bl	0 <fopen>
 56c:	str	x0, [sp, #1192]
 570:	ldr	x0, [sp, #1192]
 574:	cmp	x0, #0x0
 578:	b.ne	584 <is_swap_device+0x74>  // b.any
 57c:	mov	w0, #0x0                   	// #0
 580:	b	6c0 <is_swap_device+0x1b0>
 584:	add	x0, sp, #0xa0
 588:	ldr	x2, [sp, #1192]
 58c:	mov	w1, #0x400                 	// #1024
 590:	bl	0 <fgets>
 594:	cmp	x0, #0x0
 598:	b.eq	6b0 <is_swap_device+0x1a0>  // b.none
 59c:	ldrb	w0, [sp, #160]
 5a0:	cmp	w0, #0x0
 5a4:	b.eq	690 <is_swap_device+0x180>  // b.none
 5a8:	add	x3, sp, #0xa0
 5ac:	mov	x2, #0x9                   	// #9
 5b0:	adrp	x0, 0 <ext2fsP_is_disk_device>
 5b4:	add	x1, x0, #0x0
 5b8:	mov	x0, x3
 5bc:	bl	0 <strncmp>
 5c0:	cmp	w0, #0x0
 5c4:	b.eq	690 <is_swap_device+0x180>  // b.none
 5c8:	nop
 5cc:	b	5d4 <is_swap_device+0xc4>
 5d0:	nop
 5d4:	add	x0, sp, #0xa0
 5d8:	mov	w1, #0x20                  	// #32
 5dc:	bl	0 <strchr>
 5e0:	str	x0, [sp, #1184]
 5e4:	ldr	x0, [sp, #1184]
 5e8:	cmp	x0, #0x0
 5ec:	b.eq	5f8 <is_swap_device+0xe8>  // b.none
 5f0:	ldr	x0, [sp, #1184]
 5f4:	strb	wzr, [x0]
 5f8:	add	x0, sp, #0xa0
 5fc:	mov	w1, #0x9                   	// #9
 600:	bl	0 <strchr>
 604:	str	x0, [sp, #1184]
 608:	ldr	x0, [sp, #1184]
 60c:	cmp	x0, #0x0
 610:	b.eq	61c <is_swap_device+0x10c>  // b.none
 614:	ldr	x0, [sp, #1184]
 618:	strb	wzr, [x0]
 61c:	add	x0, sp, #0xa0
 620:	ldr	x1, [sp, #24]
 624:	bl	0 <strcmp>
 628:	cmp	w0, #0x0
 62c:	b.ne	640 <is_swap_device+0x130>  // b.any
 630:	ldr	w0, [sp, #1204]
 634:	add	w0, w0, #0x1
 638:	str	w0, [sp, #1204]
 63c:	b	6b4 <is_swap_device+0x1a4>
 640:	ldr	x0, [sp, #1208]
 644:	cmp	x0, #0x0
 648:	b.eq	694 <is_swap_device+0x184>  // b.none
 64c:	add	x1, sp, #0x20
 650:	add	x0, sp, #0xa0
 654:	bl	0 <stat>
 658:	cmp	w0, #0x0
 65c:	b.ne	694 <is_swap_device+0x184>  // b.any
 660:	ldr	w0, [sp, #48]
 664:	bl	0 <ext2fsP_is_disk_device>
 668:	cmp	w0, #0x0
 66c:	b.eq	694 <is_swap_device+0x184>  // b.none
 670:	ldr	x0, [sp, #64]
 674:	ldr	x1, [sp, #1208]
 678:	cmp	x1, x0
 67c:	b.ne	694 <is_swap_device+0x184>  // b.any
 680:	ldr	w0, [sp, #1204]
 684:	add	w0, w0, #0x1
 688:	str	w0, [sp, #1204]
 68c:	b	6b4 <is_swap_device+0x1a4>
 690:	nop
 694:	add	x0, sp, #0xa0
 698:	ldr	x2, [sp, #1192]
 69c:	mov	w1, #0x400                 	// #1024
 6a0:	bl	0 <fgets>
 6a4:	cmp	x0, #0x0
 6a8:	b.ne	5d0 <is_swap_device+0xc0>  // b.any
 6ac:	b	6b4 <is_swap_device+0x1a4>
 6b0:	nop
 6b4:	ldr	x0, [sp, #1192]
 6b8:	bl	0 <fclose>
 6bc:	ldr	w0, [sp, #1204]
 6c0:	ldp	x29, x30, [sp]
 6c4:	add	sp, sp, #0x4c0
 6c8:	ret

00000000000006cc <ext2fs_check_mount_point>:
 6cc:	stp	x29, x30, [sp, #-192]!
 6d0:	mov	x29, sp
 6d4:	str	x0, [sp, #40]
 6d8:	str	x1, [sp, #32]
 6dc:	str	x2, [sp, #24]
 6e0:	str	w3, [sp, #20]
 6e4:	str	xzr, [sp, #184]
 6e8:	adrp	x0, 0 <ext2fsP_is_disk_device>
 6ec:	add	x0, x0, #0x0
 6f0:	bl	0 <getenv>
 6f4:	cmp	x0, #0x0
 6f8:	b.eq	730 <ext2fs_check_mount_point+0x64>  // b.none
 6fc:	ldr	x0, [sp, #32]
 700:	mov	w1, #0x5                   	// #5
 704:	str	w1, [x0]
 708:	adrp	x0, 0 <ext2fsP_is_disk_device>
 70c:	add	x0, x0, #0x0
 710:	bl	0 <getenv>
 714:	cmp	x0, #0x0
 718:	b.eq	728 <ext2fs_check_mount_point+0x5c>  // b.none
 71c:	ldr	x0, [sp, #32]
 720:	mov	w1, #0x2                   	// #2
 724:	str	w1, [x0]
 728:	mov	x0, #0x0                   	// #0
 72c:	b	854 <ext2fs_check_mount_point+0x188>
 730:	adrp	x0, 0 <ext2fsP_is_disk_device>
 734:	add	x0, x0, #0x0
 738:	bl	0 <getenv>
 73c:	cmp	x0, #0x0
 740:	b.eq	778 <ext2fs_check_mount_point+0xac>  // b.none
 744:	ldr	x0, [sp, #32]
 748:	mov	w1, #0x1                   	// #1
 74c:	str	w1, [x0]
 750:	adrp	x0, 0 <ext2fsP_is_disk_device>
 754:	add	x0, x0, #0x0
 758:	bl	0 <getenv>
 75c:	cmp	x0, #0x0
 760:	b.eq	770 <ext2fs_check_mount_point+0xa4>  // b.none
 764:	ldr	x0, [sp, #32]
 768:	mov	w1, #0x2                   	// #2
 76c:	str	w1, [x0]
 770:	mov	x0, #0x0                   	// #0
 774:	b	854 <ext2fs_check_mount_point+0x188>
 778:	ldr	x0, [sp, #40]
 77c:	bl	510 <is_swap_device>
 780:	cmp	w0, #0x0
 784:	b.eq	7b0 <ext2fs_check_mount_point+0xe4>  // b.none
 788:	ldr	x0, [sp, #32]
 78c:	mov	w1, #0x9                   	// #9
 790:	str	w1, [x0]
 794:	ldrsw	x0, [sp, #20]
 798:	mov	x2, x0
 79c:	adrp	x0, 0 <ext2fsP_is_disk_device>
 7a0:	add	x1, x0, #0x0
 7a4:	ldr	x0, [sp, #24]
 7a8:	bl	0 <strncpy>
 7ac:	b	7c8 <ext2fs_check_mount_point+0xfc>
 7b0:	ldr	w3, [sp, #20]
 7b4:	ldr	x2, [sp, #24]
 7b8:	ldr	x1, [sp, #32]
 7bc:	ldr	x0, [sp, #40]
 7c0:	bl	498 <check_mntent>
 7c4:	str	x0, [sp, #184]
 7c8:	ldr	x0, [sp, #184]
 7cc:	cmp	x0, #0x0
 7d0:	b.eq	7dc <ext2fs_check_mount_point+0x110>  // b.none
 7d4:	ldr	x0, [sp, #184]
 7d8:	b	854 <ext2fs_check_mount_point+0x188>
 7dc:	add	x0, sp, #0x30
 7e0:	mov	x1, x0
 7e4:	ldr	x0, [sp, #40]
 7e8:	bl	0 <stat>
 7ec:	cmp	w0, #0x0
 7f0:	b.ne	850 <ext2fs_check_mount_point+0x184>  // b.any
 7f4:	ldr	w0, [sp, #64]
 7f8:	bl	0 <ext2fsP_is_disk_device>
 7fc:	cmp	w0, #0x0
 800:	b.eq	850 <ext2fs_check_mount_point+0x184>  // b.none
 804:	mov	w1, #0x80                  	// #128
 808:	ldr	x0, [sp, #40]
 80c:	bl	0 <open>
 810:	str	w0, [sp, #180]
 814:	ldr	w0, [sp, #180]
 818:	cmp	w0, #0x0
 81c:	b.lt	82c <ext2fs_check_mount_point+0x160>  // b.tstop
 820:	ldr	w0, [sp, #180]
 824:	bl	0 <close>
 828:	b	850 <ext2fs_check_mount_point+0x184>
 82c:	bl	0 <__errno_location>
 830:	ldr	w0, [x0]
 834:	cmp	w0, #0x10
 838:	b.ne	850 <ext2fs_check_mount_point+0x184>  // b.any
 83c:	ldr	x0, [sp, #32]
 840:	ldr	w0, [x0]
 844:	orr	w1, w0, #0x10
 848:	ldr	x0, [sp, #32]
 84c:	str	w1, [x0]
 850:	mov	x0, #0x0                   	// #0
 854:	ldp	x29, x30, [sp], #192
 858:	ret

000000000000085c <ext2fs_check_if_mounted>:
 85c:	stp	x29, x30, [sp, #-32]!
 860:	mov	x29, sp
 864:	str	x0, [sp, #24]
 868:	str	x1, [sp, #16]
 86c:	mov	w3, #0x0                   	// #0
 870:	mov	x2, #0x0                   	// #0
 874:	ldr	x1, [sp, #16]
 878:	ldr	x0, [sp, #24]
 87c:	bl	6cc <ext2fs_check_mount_point>
 880:	ldp	x29, x30, [sp], #32
 884:	ret

link.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_metadata_csum>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x400
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_filetype>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #96]
  38:	and	w0, w0, #0x2
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <link_proc>:
  50:	stp	x29, x30, [sp, #-96]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	w1, [sp, #36]
  60:	str	w2, [sp, #32]
  64:	str	x3, [sp, #24]
  68:	str	x4, [sp, #16]
  6c:	ldr	x0, [sp, #16]
  70:	str	x0, [sp, #80]
  74:	str	wzr, [sp, #92]
  78:	str	wzr, [sp, #88]
  7c:	ldr	x0, [sp, #80]
  80:	ldr	w0, [x0, #28]
  84:	cmp	w0, #0x0
  88:	b.eq	94 <link_proc+0x44>  // b.none
  8c:	mov	w0, #0x2                   	// #2
  90:	b	514 <link_proc+0x4c4>
  94:	ldr	x0, [sp, #80]
  98:	ldr	w0, [x0, #16]
  9c:	add	w0, w0, #0xb
  a0:	and	w0, w0, #0xfffffffc
  a4:	str	w0, [sp, #76]
  a8:	ldr	x0, [sp, #80]
  ac:	ldr	x0, [x0]
  b0:	add	x1, sp, #0x30
  b4:	mov	x2, x1
  b8:	ldr	x1, [sp, #40]
  bc:	bl	0 <ext2fs_get_rec_len>
  c0:	mov	x1, x0
  c4:	ldr	x0, [sp, #80]
  c8:	str	x1, [x0, #40]
  cc:	ldr	x0, [sp, #80]
  d0:	ldr	x0, [x0, #40]
  d4:	cmp	x0, #0x0
  d8:	b.eq	e4 <link_proc+0x94>  // b.none
  dc:	mov	w0, #0x2                   	// #2
  e0:	b	514 <link_proc+0x4c4>
  e4:	ldr	x0, [sp, #80]
  e8:	ldr	x0, [x0]
  ec:	ldr	x0, [x0, #32]
  f0:	bl	0 <ext2fs_has_feature_metadata_csum>
  f4:	cmp	w0, #0x0
  f8:	b.eq	104 <link_proc+0xb4>  // b.none
  fc:	mov	w0, #0xc                   	// #12
 100:	str	w0, [sp, #88]
 104:	ldrsw	x1, [sp, #36]
 108:	ldr	w0, [sp, #48]
 10c:	mov	w0, w0
 110:	add	x0, x1, x0
 114:	ldr	x1, [sp, #24]
 118:	add	x0, x1, x0
 11c:	str	x0, [sp, #64]
 120:	ldr	w0, [sp, #48]
 124:	mov	w1, w0
 128:	ldr	w0, [sp, #36]
 12c:	add	w1, w1, w0
 130:	ldr	w0, [sp, #88]
 134:	add	w0, w0, #0x8
 138:	ldr	w2, [sp, #32]
 13c:	sub	w0, w2, w0
 140:	cmp	w1, w0
 144:	b.ge	1d8 <link_proc+0x188>  // b.tcont
 148:	ldr	x0, [sp, #64]
 14c:	ldr	w0, [x0]
 150:	cmp	w0, #0x0
 154:	b.ne	1d8 <link_proc+0x188>  // b.any
 158:	ldr	w0, [sp, #48]
 15c:	mov	w1, w0
 160:	ldr	w0, [sp, #36]
 164:	add	w0, w1, w0
 168:	ldr	x1, [sp, #64]
 16c:	ldrh	w1, [x1, #4]
 170:	add	w0, w0, w1
 174:	ldr	w1, [sp, #32]
 178:	cmp	w1, w0
 17c:	b.lt	1d8 <link_proc+0x188>  // b.tstop
 180:	ldr	x0, [sp, #64]
 184:	ldrh	w0, [x0, #4]
 188:	mov	w1, w0
 18c:	ldr	w0, [sp, #48]
 190:	add	w0, w1, w0
 194:	str	w0, [sp, #48]
 198:	ldr	x0, [sp, #80]
 19c:	ldr	x0, [x0]
 1a0:	ldr	w1, [sp, #48]
 1a4:	ldr	x2, [sp, #40]
 1a8:	bl	0 <ext2fs_set_rec_len>
 1ac:	mov	x1, x0
 1b0:	ldr	x0, [sp, #80]
 1b4:	str	x1, [x0, #40]
 1b8:	ldr	x0, [sp, #80]
 1bc:	ldr	x0, [x0, #40]
 1c0:	cmp	x0, #0x0
 1c4:	b.eq	1d0 <link_proc+0x180>  // b.none
 1c8:	mov	w0, #0x2                   	// #2
 1cc:	b	514 <link_proc+0x4c4>
 1d0:	mov	w0, #0x1                   	// #1
 1d4:	str	w0, [sp, #92]
 1d8:	ldr	w0, [sp, #88]
 1dc:	cmp	w0, #0x0
 1e0:	b.eq	28c <link_proc+0x23c>  // b.none
 1e4:	ldr	x0, [sp, #80]
 1e8:	ldr	x0, [x0]
 1ec:	ldr	w1, [x0, #40]
 1f0:	ldr	w0, [sp, #48]
 1f4:	cmp	w1, w0
 1f8:	b.ne	28c <link_proc+0x23c>  // b.any
 1fc:	ldr	x0, [sp, #40]
 200:	ldr	w0, [x0]
 204:	cmp	w0, #0x0
 208:	b.ne	28c <link_proc+0x23c>  // b.any
 20c:	ldr	w1, [sp, #48]
 210:	ldr	w0, [sp, #88]
 214:	sub	w0, w1, w0
 218:	str	w0, [sp, #48]
 21c:	ldr	x0, [sp, #80]
 220:	ldr	x0, [x0]
 224:	ldr	w1, [sp, #48]
 228:	ldr	x2, [sp, #40]
 22c:	bl	0 <ext2fs_set_rec_len>
 230:	mov	x1, x0
 234:	ldr	x0, [sp, #80]
 238:	str	x1, [x0, #40]
 23c:	ldr	x0, [sp, #80]
 240:	ldr	x0, [x0, #40]
 244:	cmp	x0, #0x0
 248:	b.eq	254 <link_proc+0x204>  // b.none
 24c:	mov	w0, #0x2                   	// #2
 250:	b	514 <link_proc+0x4c4>
 254:	ldr	x0, [sp, #80]
 258:	ldr	x0, [x0]
 25c:	ldr	w0, [x0, #40]
 260:	mov	w0, w0
 264:	sub	x0, x0, #0xc
 268:	ldr	x1, [sp, #24]
 26c:	add	x0, x1, x0
 270:	str	x0, [sp, #56]
 274:	ldr	x0, [sp, #80]
 278:	ldr	x0, [x0]
 27c:	ldr	x1, [sp, #56]
 280:	bl	0 <ext2fs_initialize_dirent_tail>
 284:	mov	w0, #0x1                   	// #1
 288:	str	w0, [sp, #92]
 28c:	ldr	w0, [sp, #88]
 290:	cmp	w0, #0x0
 294:	b.eq	360 <link_proc+0x310>  // b.none
 298:	ldr	x0, [sp, #80]
 29c:	ldr	x0, [x0]
 2a0:	ldr	w0, [x0, #40]
 2a4:	sub	w1, w0, #0xc
 2a8:	ldr	w0, [sp, #48]
 2ac:	cmp	w1, w0
 2b0:	b.ne	360 <link_proc+0x310>  // b.any
 2b4:	ldr	w0, [sp, #36]
 2b8:	cmp	w0, #0xc
 2bc:	b.ne	360 <link_proc+0x310>  // b.any
 2c0:	ldr	x0, [sp, #40]
 2c4:	ldrb	w0, [x0, #8]
 2c8:	cmp	w0, #0x2e
 2cc:	b.ne	360 <link_proc+0x310>  // b.any
 2d0:	ldr	x0, [sp, #40]
 2d4:	ldrb	w0, [x0, #9]
 2d8:	cmp	w0, #0x2e
 2dc:	b.ne	360 <link_proc+0x310>  // b.any
 2e0:	ldr	w1, [sp, #48]
 2e4:	ldr	w0, [sp, #88]
 2e8:	sub	w0, w1, w0
 2ec:	str	w0, [sp, #48]
 2f0:	ldr	x0, [sp, #80]
 2f4:	ldr	x0, [x0]
 2f8:	ldr	w1, [sp, #48]
 2fc:	ldr	x2, [sp, #40]
 300:	bl	0 <ext2fs_set_rec_len>
 304:	mov	x1, x0
 308:	ldr	x0, [sp, #80]
 30c:	str	x1, [x0, #40]
 310:	ldr	x0, [sp, #80]
 314:	ldr	x0, [x0, #40]
 318:	cmp	x0, #0x0
 31c:	b.eq	328 <link_proc+0x2d8>  // b.none
 320:	mov	w0, #0x2                   	// #2
 324:	b	514 <link_proc+0x4c4>
 328:	ldr	x0, [sp, #80]
 32c:	ldr	x0, [x0]
 330:	ldr	w0, [x0, #40]
 334:	mov	w0, w0
 338:	sub	x0, x0, #0xc
 33c:	ldr	x1, [sp, #24]
 340:	add	x0, x1, x0
 344:	str	x0, [sp, #56]
 348:	ldr	x0, [sp, #80]
 34c:	ldr	x0, [x0]
 350:	ldr	x1, [sp, #56]
 354:	bl	0 <ext2fs_initialize_dirent_tail>
 358:	mov	w0, #0x1                   	// #1
 35c:	str	w0, [sp, #92]
 360:	ldr	x0, [sp, #40]
 364:	ldr	w0, [x0]
 368:	cmp	w0, #0x0
 36c:	b.eq	46c <link_proc+0x41c>  // b.none
 370:	ldr	x0, [sp, #40]
 374:	bl	0 <ext2fs_dirent_name_len>
 378:	add	w0, w0, #0xb
 37c:	and	w0, w0, #0xfffffffc
 380:	str	w0, [sp, #52]
 384:	ldr	w1, [sp, #52]
 388:	ldr	w0, [sp, #76]
 38c:	add	w1, w1, w0
 390:	ldr	w0, [sp, #48]
 394:	cmp	w1, w0
 398:	b.ls	3a4 <link_proc+0x354>  // b.plast
 39c:	ldr	w0, [sp, #92]
 3a0:	b	514 <link_proc+0x4c4>
 3a4:	ldr	w1, [sp, #48]
 3a8:	ldr	w0, [sp, #52]
 3ac:	sub	w0, w1, w0
 3b0:	str	w0, [sp, #76]
 3b4:	ldr	x0, [sp, #80]
 3b8:	ldr	x0, [x0]
 3bc:	ldr	x2, [sp, #40]
 3c0:	ldr	w1, [sp, #52]
 3c4:	bl	0 <ext2fs_set_rec_len>
 3c8:	mov	x1, x0
 3cc:	ldr	x0, [sp, #80]
 3d0:	str	x1, [x0, #40]
 3d4:	ldr	x0, [sp, #80]
 3d8:	ldr	x0, [x0, #40]
 3dc:	cmp	x0, #0x0
 3e0:	b.eq	3ec <link_proc+0x39c>  // b.none
 3e4:	mov	w0, #0x2                   	// #2
 3e8:	b	514 <link_proc+0x4c4>
 3ec:	ldrsw	x1, [sp, #36]
 3f0:	ldr	x0, [sp, #40]
 3f4:	ldrh	w0, [x0, #4]
 3f8:	and	x0, x0, #0xffff
 3fc:	add	x0, x1, x0
 400:	ldr	x1, [sp, #24]
 404:	add	x0, x1, x0
 408:	str	x0, [sp, #64]
 40c:	ldr	x0, [sp, #64]
 410:	str	wzr, [x0]
 414:	mov	w1, #0x0                   	// #0
 418:	ldr	x0, [sp, #64]
 41c:	bl	0 <ext2fs_dirent_set_name_len>
 420:	mov	w1, #0x0                   	// #0
 424:	ldr	x0, [sp, #64]
 428:	bl	0 <ext2fs_dirent_set_file_type>
 42c:	ldr	x0, [sp, #80]
 430:	ldr	x0, [x0]
 434:	ldr	x2, [sp, #64]
 438:	ldr	w1, [sp, #76]
 43c:	bl	0 <ext2fs_set_rec_len>
 440:	mov	x1, x0
 444:	ldr	x0, [sp, #80]
 448:	str	x1, [x0, #40]
 44c:	ldr	x0, [sp, #80]
 450:	ldr	x0, [x0, #40]
 454:	cmp	x0, #0x0
 458:	b.eq	464 <link_proc+0x414>  // b.none
 45c:	mov	w0, #0x2                   	// #2
 460:	b	514 <link_proc+0x4c4>
 464:	mov	w0, #0x1                   	// #1
 468:	b	514 <link_proc+0x4c4>
 46c:	ldr	w0, [sp, #48]
 470:	ldr	w1, [sp, #76]
 474:	cmp	w1, w0
 478:	b.ls	484 <link_proc+0x434>  // b.plast
 47c:	ldr	w0, [sp, #92]
 480:	b	514 <link_proc+0x4c4>
 484:	ldr	x0, [sp, #80]
 488:	ldr	w1, [x0, #20]
 48c:	ldr	x0, [sp, #40]
 490:	str	w1, [x0]
 494:	ldr	x0, [sp, #80]
 498:	ldr	w0, [x0, #16]
 49c:	mov	w1, w0
 4a0:	ldr	x0, [sp, #40]
 4a4:	bl	0 <ext2fs_dirent_set_name_len>
 4a8:	ldr	x0, [sp, #40]
 4ac:	add	x3, x0, #0x8
 4b0:	ldr	x0, [sp, #80]
 4b4:	ldr	x1, [x0, #8]
 4b8:	ldr	x0, [sp, #80]
 4bc:	ldr	w0, [x0, #16]
 4c0:	sxtw	x0, w0
 4c4:	mov	x2, x0
 4c8:	mov	x0, x3
 4cc:	bl	0 <strncpy>
 4d0:	ldr	x0, [sp, #80]
 4d4:	ldr	x0, [x0, #48]
 4d8:	bl	28 <ext2fs_has_feature_filetype>
 4dc:	cmp	w0, #0x0
 4e0:	b.eq	4fc <link_proc+0x4ac>  // b.none
 4e4:	ldr	x0, [sp, #80]
 4e8:	ldr	w0, [x0, #24]
 4ec:	and	w0, w0, #0x7
 4f0:	mov	w1, w0
 4f4:	ldr	x0, [sp, #40]
 4f8:	bl	0 <ext2fs_dirent_set_file_type>
 4fc:	ldr	x0, [sp, #80]
 500:	ldr	w0, [x0, #28]
 504:	add	w1, w0, #0x1
 508:	ldr	x0, [sp, #80]
 50c:	str	w1, [x0, #28]
 510:	mov	w0, #0x3                   	// #3
 514:	ldp	x29, x30, [sp], #96
 518:	ret

000000000000051c <ext2fs_link>:
 51c:	stp	x29, x30, [sp, #-240]!
 520:	mov	x29, sp
 524:	str	x0, [sp, #40]
 528:	str	w1, [sp, #36]
 52c:	str	x2, [sp, #24]
 530:	str	w3, [sp, #32]
 534:	str	w4, [sp, #20]
 538:	ldr	x0, [sp, #40]
 53c:	ldr	x1, [x0]
 540:	mov	x0, #0xb701                	// #46849
 544:	movk	x0, #0x7f2b, lsl #16
 548:	cmp	x1, x0
 54c:	b.eq	55c <ext2fs_link+0x40>  // b.none
 550:	mov	x0, #0xb701                	// #46849
 554:	movk	x0, #0x7f2b, lsl #16
 558:	b	6bc <ext2fs_link+0x1a0>
 55c:	ldr	x0, [sp, #40]
 560:	ldr	w0, [x0, #16]
 564:	and	w0, w0, #0x1
 568:	cmp	w0, #0x0
 56c:	b.ne	57c <ext2fs_link+0x60>  // b.any
 570:	mov	x0, #0xb715                	// #46869
 574:	movk	x0, #0x7f2b, lsl #16
 578:	b	6bc <ext2fs_link+0x1a0>
 57c:	ldr	x0, [sp, #40]
 580:	str	x0, [sp, #176]
 584:	ldr	x0, [sp, #24]
 588:	str	x0, [sp, #184]
 58c:	ldr	x0, [sp, #24]
 590:	cmp	x0, #0x0
 594:	b.eq	5a4 <ext2fs_link+0x88>  // b.none
 598:	ldr	x0, [sp, #24]
 59c:	bl	0 <strlen>
 5a0:	b	5a8 <ext2fs_link+0x8c>
 5a4:	mov	w0, #0x0                   	// #0
 5a8:	str	w0, [sp, #192]
 5ac:	ldr	w0, [sp, #32]
 5b0:	str	w0, [sp, #196]
 5b4:	ldr	w0, [sp, #20]
 5b8:	str	w0, [sp, #200]
 5bc:	str	wzr, [sp, #204]
 5c0:	ldr	x0, [sp, #40]
 5c4:	ldr	x0, [x0, #32]
 5c8:	str	x0, [sp, #224]
 5cc:	ldr	x0, [sp, #40]
 5d0:	ldr	w0, [x0, #40]
 5d4:	str	w0, [sp, #208]
 5d8:	str	xzr, [sp, #216]
 5dc:	add	x0, sp, #0xb0
 5e0:	mov	x5, x0
 5e4:	adrp	x0, 0 <ext2fs_has_feature_metadata_csum>
 5e8:	add	x4, x0, #0x0
 5ec:	mov	x3, #0x0                   	// #0
 5f0:	mov	w2, #0x1                   	// #1
 5f4:	ldr	w1, [sp, #36]
 5f8:	ldr	x0, [sp, #40]
 5fc:	bl	0 <ext2fs_dir_iterate>
 600:	str	x0, [sp, #232]
 604:	ldr	x0, [sp, #232]
 608:	cmp	x0, #0x0
 60c:	b.eq	618 <ext2fs_link+0xfc>  // b.none
 610:	ldr	x0, [sp, #232]
 614:	b	6bc <ext2fs_link+0x1a0>
 618:	ldr	x0, [sp, #216]
 61c:	cmp	x0, #0x0
 620:	b.eq	62c <ext2fs_link+0x110>  // b.none
 624:	ldr	x0, [sp, #216]
 628:	b	6bc <ext2fs_link+0x1a0>
 62c:	ldr	w0, [sp, #204]
 630:	cmp	w0, #0x0
 634:	b.ne	644 <ext2fs_link+0x128>  // b.any
 638:	mov	x0, #0xb726                	// #46886
 63c:	movk	x0, #0x7f2b, lsl #16
 640:	b	6bc <ext2fs_link+0x1a0>
 644:	add	x0, sp, #0x30
 648:	mov	x2, x0
 64c:	ldr	w1, [sp, #36]
 650:	ldr	x0, [sp, #40]
 654:	bl	0 <ext2fs_read_inode>
 658:	str	x0, [sp, #232]
 65c:	ldr	x0, [sp, #232]
 660:	cmp	x0, #0x0
 664:	b.eq	670 <ext2fs_link+0x154>  // b.none
 668:	ldr	x0, [sp, #232]
 66c:	b	6bc <ext2fs_link+0x1a0>
 670:	ldr	w0, [sp, #80]
 674:	and	w0, w0, #0x1000
 678:	cmp	w0, #0x0
 67c:	b.eq	6b8 <ext2fs_link+0x19c>  // b.none
 680:	ldr	w0, [sp, #80]
 684:	and	w0, w0, #0xffffefff
 688:	str	w0, [sp, #80]
 68c:	add	x0, sp, #0x30
 690:	mov	x2, x0
 694:	ldr	w1, [sp, #36]
 698:	ldr	x0, [sp, #40]
 69c:	bl	0 <ext2fs_write_inode>
 6a0:	str	x0, [sp, #232]
 6a4:	ldr	x0, [sp, #232]
 6a8:	cmp	x0, #0x0
 6ac:	b.eq	6b8 <ext2fs_link+0x19c>  // b.none
 6b0:	ldr	x0, [sp, #232]
 6b4:	b	6bc <ext2fs_link+0x1a0>
 6b8:	mov	x0, #0x0                   	// #0
 6bc:	ldp	x29, x30, [sp], #240
 6c0:	ret

llseek.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_llseek>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	x1, [sp, #16]
  10:	str	w2, [sp, #24]
  14:	ldr	w2, [sp, #24]
  18:	ldr	x1, [sp, #16]
  1c:	ldr	w0, [sp, #28]
  20:	bl	0 <lseek64>
  24:	ldp	x29, x30, [sp], #32
  28:	ret

lookup.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lookup_proc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	w1, [sp, #52]
  14:	str	w2, [sp, #48]
  18:	str	x3, [sp, #40]
  1c:	str	x4, [sp, #32]
  20:	ldr	x0, [sp, #32]
  24:	str	x0, [sp, #72]
  28:	ldr	x0, [sp, #72]
  2c:	ldr	w19, [x0, #8]
  30:	ldr	x0, [sp, #56]
  34:	bl	0 <ext2fs_dirent_name_len>
  38:	cmp	w19, w0
  3c:	b.eq	48 <lookup_proc+0x48>  // b.none
  40:	mov	w0, #0x0                   	// #0
  44:	b	b0 <lookup_proc+0xb0>
  48:	ldr	x0, [sp, #72]
  4c:	ldr	x19, [x0]
  50:	ldr	x0, [sp, #56]
  54:	add	x20, x0, #0x8
  58:	ldr	x0, [sp, #56]
  5c:	bl	0 <ext2fs_dirent_name_len>
  60:	sxtw	x0, w0
  64:	mov	x2, x0
  68:	mov	x1, x20
  6c:	mov	x0, x19
  70:	bl	0 <strncmp>
  74:	cmp	w0, #0x0
  78:	b.eq	84 <lookup_proc+0x84>  // b.none
  7c:	mov	w0, #0x0                   	// #0
  80:	b	b0 <lookup_proc+0xb0>
  84:	ldr	x0, [sp, #72]
  88:	ldr	x0, [x0, #16]
  8c:	ldr	x1, [sp, #56]
  90:	ldr	w1, [x1]
  94:	str	w1, [x0]
  98:	ldr	x0, [sp, #72]
  9c:	ldr	w0, [x0, #24]
  a0:	add	w1, w0, #0x1
  a4:	ldr	x0, [sp, #72]
  a8:	str	w1, [x0, #24]
  ac:	mov	w0, #0x2                   	// #2
  b0:	ldp	x19, x20, [sp, #16]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret

00000000000000bc <ext2fs_lookup>:
  bc:	stp	x29, x30, [sp, #-112]!
  c0:	mov	x29, sp
  c4:	str	x0, [sp, #56]
  c8:	str	w1, [sp, #52]
  cc:	str	x2, [sp, #40]
  d0:	str	w3, [sp, #48]
  d4:	str	x4, [sp, #32]
  d8:	str	x5, [sp, #24]
  dc:	ldr	x0, [sp, #56]
  e0:	ldr	x1, [x0]
  e4:	mov	x0, #0xb701                	// #46849
  e8:	movk	x0, #0x7f2b, lsl #16
  ec:	cmp	x1, x0
  f0:	b.eq	100 <ext2fs_lookup+0x44>  // b.none
  f4:	mov	x0, #0xb701                	// #46849
  f8:	movk	x0, #0x7f2b, lsl #16
  fc:	b	174 <ext2fs_lookup+0xb8>
 100:	ldr	x0, [sp, #40]
 104:	str	x0, [sp, #72]
 108:	ldr	w0, [sp, #48]
 10c:	str	w0, [sp, #80]
 110:	ldr	x0, [sp, #24]
 114:	str	x0, [sp, #88]
 118:	str	wzr, [sp, #96]
 11c:	add	x0, sp, #0x48
 120:	mov	x5, x0
 124:	adrp	x0, 0 <lookup_proc>
 128:	add	x4, x0, #0x0
 12c:	ldr	x3, [sp, #32]
 130:	mov	w2, #0x0                   	// #0
 134:	ldr	w1, [sp, #52]
 138:	ldr	x0, [sp, #56]
 13c:	bl	0 <ext2fs_dir_iterate>
 140:	str	x0, [sp, #104]
 144:	ldr	x0, [sp, #104]
 148:	cmp	x0, #0x0
 14c:	b.eq	158 <ext2fs_lookup+0x9c>  // b.none
 150:	ldr	x0, [sp, #104]
 154:	b	174 <ext2fs_lookup+0xb8>
 158:	ldr	w0, [sp, #96]
 15c:	cmp	w0, #0x0
 160:	b.eq	16c <ext2fs_lookup+0xb0>  // b.none
 164:	mov	x0, #0x0                   	// #0
 168:	b	174 <ext2fs_lookup+0xb8>
 16c:	mov	x0, #0xb74c                	// #46924
 170:	movk	x0, #0x7f2b, lsl #16
 174:	ldp	x29, x30, [sp], #112
 178:	ret

mkdir.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_extents>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x40
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_inline_data>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #96]
  38:	and	w0, w0, #0x8000
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <ext2fs_mkdir>:
  50:	stp	x29, x30, [sp, #-352]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	w1, [sp, #36]
  60:	str	w2, [sp, #32]
  64:	str	x3, [sp, #24]
  68:	ldr	w0, [sp, #32]
  6c:	str	w0, [sp, #68]
  70:	str	xzr, [sp, #48]
  74:	str	wzr, [sp, #340]
  78:	ldr	x0, [sp, #40]
  7c:	ldr	x1, [x0]
  80:	mov	x0, #0xb701                	// #46849
  84:	movk	x0, #0x7f2b, lsl #16
  88:	cmp	x1, x0
  8c:	b.eq	9c <ext2fs_mkdir+0x4c>  // b.none
  90:	mov	x0, #0xb701                	// #46849
  94:	movk	x0, #0x7f2b, lsl #16
  98:	b	580 <ext2fs_mkdir+0x530>
  9c:	ldr	w0, [sp, #68]
  a0:	cmp	w0, #0x0
  a4:	b.eq	dc <ext2fs_mkdir+0x8c>  // b.none
  a8:	ldr	x0, [sp, #40]
  ac:	ldr	x0, [x0, #32]
  b0:	ldr	w0, [x0, #76]
  b4:	cmp	w0, #0x0
  b8:	b.eq	cc <ext2fs_mkdir+0x7c>  // b.none
  bc:	ldr	x0, [sp, #40]
  c0:	ldr	x0, [x0, #32]
  c4:	ldr	w0, [x0, #84]
  c8:	b	d0 <ext2fs_mkdir+0x80>
  cc:	mov	w0, #0xb                   	// #11
  d0:	ldr	w1, [sp, #68]
  d4:	cmp	w0, w1
  d8:	b.hi	f8 <ext2fs_mkdir+0xa8>  // b.pmore
  dc:	ldr	x0, [sp, #40]
  e0:	ldr	x0, [x0, #32]
  e4:	bl	28 <ext2fs_has_feature_inline_data>
  e8:	cmp	w0, #0x0
  ec:	b.eq	f8 <ext2fs_mkdir+0xa8>  // b.none
  f0:	mov	w0, #0x1                   	// #1
  f4:	str	w0, [sp, #340]
  f8:	ldr	w0, [sp, #68]
  fc:	cmp	w0, #0x0
 100:	b.ne	130 <ext2fs_mkdir+0xe0>  // b.any
 104:	add	x0, sp, #0x44
 108:	mov	x4, x0
 10c:	mov	x3, #0x0                   	// #0
 110:	mov	w2, #0x41ed                	// #16877
 114:	ldr	w1, [sp, #36]
 118:	ldr	x0, [sp, #40]
 11c:	bl	0 <ext2fs_new_inode>
 120:	str	x0, [sp, #344]
 124:	ldr	x0, [sp, #344]
 128:	cmp	x0, #0x0
 12c:	b.ne	514 <ext2fs_mkdir+0x4c4>  // b.any
 130:	add	x0, sp, #0x48
 134:	mov	x2, #0x80                  	// #128
 138:	mov	w1, #0x0                   	// #0
 13c:	bl	0 <memset>
 140:	ldr	w0, [sp, #340]
 144:	cmp	w0, #0x0
 148:	b.ne	190 <ext2fs_mkdir+0x140>  // b.any
 14c:	ldr	w0, [sp, #68]
 150:	add	x1, sp, #0x48
 154:	mov	x3, #0x0                   	// #0
 158:	mov	x2, x1
 15c:	mov	w1, w0
 160:	ldr	x0, [sp, #40]
 164:	bl	0 <ext2fs_find_inode_goal>
 168:	mov	x1, x0
 16c:	add	x0, sp, #0x38
 170:	mov	x3, x0
 174:	mov	x2, #0x0                   	// #0
 178:	ldr	x0, [sp, #40]
 17c:	bl	0 <ext2fs_new_block2>
 180:	str	x0, [sp, #344]
 184:	ldr	x0, [sp, #344]
 188:	cmp	x0, #0x0
 18c:	b.ne	51c <ext2fs_mkdir+0x4cc>  // b.any
 190:	ldr	w0, [sp, #340]
 194:	cmp	w0, #0x0
 198:	b.eq	1c0 <ext2fs_mkdir+0x170>  // b.none
 19c:	ldr	w1, [sp, #68]
 1a0:	add	x0, sp, #0x48
 1a4:	add	x0, x0, #0x28
 1a8:	mov	x3, x0
 1ac:	ldr	w2, [sp, #36]
 1b0:	ldr	x0, [sp, #40]
 1b4:	bl	0 <ext2fs_new_dir_inline_data>
 1b8:	str	x0, [sp, #344]
 1bc:	b	1e0 <ext2fs_mkdir+0x190>
 1c0:	ldr	w0, [sp, #68]
 1c4:	add	x1, sp, #0x30
 1c8:	mov	x3, x1
 1cc:	ldr	w2, [sp, #36]
 1d0:	mov	w1, w0
 1d4:	ldr	x0, [sp, #40]
 1d8:	bl	0 <ext2fs_new_dir_block>
 1dc:	str	x0, [sp, #344]
 1e0:	ldr	x0, [sp, #344]
 1e4:	cmp	x0, #0x0
 1e8:	b.ne	524 <ext2fs_mkdir+0x4d4>  // b.any
 1ec:	ldr	w0, [sp, #68]
 1f0:	ldr	w1, [sp, #36]
 1f4:	cmp	w1, w0
 1f8:	b.eq	224 <ext2fs_mkdir+0x1d4>  // b.none
 1fc:	add	x0, sp, #0xc8
 200:	mov	x2, x0
 204:	ldr	w1, [sp, #36]
 208:	ldr	x0, [sp, #40]
 20c:	bl	0 <ext2fs_read_inode>
 210:	str	x0, [sp, #344]
 214:	ldr	x0, [sp, #344]
 218:	cmp	x0, #0x0
 21c:	b.eq	234 <ext2fs_mkdir+0x1e4>  // b.none
 220:	b	568 <ext2fs_mkdir+0x518>
 224:	add	x0, sp, #0xc8
 228:	mov	x2, #0x80                  	// #128
 22c:	mov	w1, #0x0                   	// #0
 230:	bl	0 <memset>
 234:	ldr	x0, [sp, #40]
 238:	ldr	w0, [x0, #176]
 23c:	and	w0, w0, #0xffff
 240:	mvn	w0, w0
 244:	and	w0, w0, #0xffff
 248:	and	w0, w0, #0x1ff
 24c:	and	w0, w0, #0xffff
 250:	orr	w0, w0, #0x4000
 254:	and	w0, w0, #0xffff
 258:	strh	w0, [sp, #72]
 25c:	strh	wzr, [sp, #96]
 260:	ldrh	w0, [sp, #96]
 264:	strh	w0, [sp, #74]
 268:	ldr	w0, [sp, #340]
 26c:	cmp	w0, #0x0
 270:	b.eq	28c <ext2fs_mkdir+0x23c>  // b.none
 274:	ldr	w0, [sp, #104]
 278:	orr	w0, w0, #0x10000000
 27c:	str	w0, [sp, #104]
 280:	mov	w0, #0x3c                  	// #60
 284:	str	w0, [sp, #76]
 288:	b	2d8 <ext2fs_mkdir+0x288>
 28c:	ldr	x0, [sp, #40]
 290:	ldr	x0, [x0, #32]
 294:	bl	0 <ext2fs_has_feature_extents>
 298:	cmp	w0, #0x0
 29c:	b.eq	2b0 <ext2fs_mkdir+0x260>  // b.none
 2a0:	ldr	w0, [sp, #104]
 2a4:	orr	w0, w0, #0x80000
 2a8:	str	w0, [sp, #104]
 2ac:	b	2b8 <ext2fs_mkdir+0x268>
 2b0:	ldr	x0, [sp, #56]
 2b4:	str	w0, [sp, #112]
 2b8:	ldr	x0, [sp, #40]
 2bc:	ldr	w0, [x0, #40]
 2c0:	str	w0, [sp, #76]
 2c4:	add	x0, sp, #0x48
 2c8:	mov	x2, #0x1                   	// #1
 2cc:	mov	x1, x0
 2d0:	ldr	x0, [sp, #40]
 2d4:	bl	0 <ext2fs_iblk_set>
 2d8:	mov	w0, #0x2                   	// #2
 2dc:	strh	w0, [sp, #98]
 2e0:	ldr	w0, [sp, #68]
 2e4:	add	x1, sp, #0x48
 2e8:	mov	x2, x1
 2ec:	mov	w1, w0
 2f0:	ldr	x0, [sp, #40]
 2f4:	bl	0 <ext2fs_write_new_inode>
 2f8:	str	x0, [sp, #344]
 2fc:	ldr	x0, [sp, #344]
 300:	cmp	x0, #0x0
 304:	b.ne	52c <ext2fs_mkdir+0x4dc>  // b.any
 308:	ldr	w0, [sp, #340]
 30c:	cmp	w0, #0x0
 310:	b.eq	32c <ext2fs_mkdir+0x2dc>  // b.none
 314:	ldr	w0, [sp, #68]
 318:	mov	w1, w0
 31c:	ldr	x0, [sp, #40]
 320:	bl	0 <ext2fs_inline_data_init>
 324:	str	x0, [sp, #344]
 328:	b	3d4 <ext2fs_mkdir+0x384>
 32c:	ldr	x0, [sp, #56]
 330:	ldr	x1, [sp, #48]
 334:	ldr	w2, [sp, #68]
 338:	mov	w4, w2
 33c:	mov	w3, #0x0                   	// #0
 340:	mov	x2, x1
 344:	mov	x1, x0
 348:	ldr	x0, [sp, #40]
 34c:	bl	0 <ext2fs_write_dir_block4>
 350:	str	x0, [sp, #344]
 354:	ldr	x0, [sp, #344]
 358:	cmp	x0, #0x0
 35c:	b.ne	534 <ext2fs_mkdir+0x4e4>  // b.any
 360:	ldr	x0, [sp, #40]
 364:	ldr	x0, [x0, #32]
 368:	bl	0 <ext2fs_has_feature_extents>
 36c:	cmp	w0, #0x0
 370:	b.eq	3d4 <ext2fs_mkdir+0x384>  // b.none
 374:	ldr	w0, [sp, #68]
 378:	add	x2, sp, #0x148
 37c:	add	x1, sp, #0x48
 380:	mov	x3, x2
 384:	mov	x2, x1
 388:	mov	w1, w0
 38c:	ldr	x0, [sp, #40]
 390:	bl	0 <ext2fs_extent_open2>
 394:	str	x0, [sp, #344]
 398:	ldr	x0, [sp, #344]
 39c:	cmp	x0, #0x0
 3a0:	b.ne	53c <ext2fs_mkdir+0x4ec>  // b.any
 3a4:	ldr	x0, [sp, #328]
 3a8:	ldr	x1, [sp, #56]
 3ac:	mov	w3, #0x0                   	// #0
 3b0:	mov	x2, x1
 3b4:	mov	x1, #0x0                   	// #0
 3b8:	bl	0 <ext2fs_extent_set_bmap>
 3bc:	str	x0, [sp, #344]
 3c0:	ldr	x0, [sp, #328]
 3c4:	bl	0 <ext2fs_extent_free>
 3c8:	ldr	x0, [sp, #344]
 3cc:	cmp	x0, #0x0
 3d0:	b.ne	544 <ext2fs_mkdir+0x4f4>  // b.any
 3d4:	ldr	x0, [sp, #24]
 3d8:	cmp	x0, #0x0
 3dc:	b.eq	470 <ext2fs_mkdir+0x420>  // b.none
 3e0:	ldr	x0, [sp, #24]
 3e4:	bl	0 <strlen>
 3e8:	mov	w1, w0
 3ec:	add	x0, sp, #0x40
 3f0:	mov	x5, x0
 3f4:	mov	x4, #0x0                   	// #0
 3f8:	mov	w3, w1
 3fc:	ldr	x2, [sp, #24]
 400:	ldr	w1, [sp, #36]
 404:	ldr	x0, [sp, #40]
 408:	bl	0 <ext2fs_lookup>
 40c:	str	x0, [sp, #344]
 410:	ldr	x0, [sp, #344]
 414:	cmp	x0, #0x0
 418:	b.ne	430 <ext2fs_mkdir+0x3e0>  // b.any
 41c:	mov	x0, #0xb74f                	// #46927
 420:	movk	x0, #0x7f2b, lsl #16
 424:	str	x0, [sp, #344]
 428:	str	xzr, [sp, #24]
 42c:	b	568 <ext2fs_mkdir+0x518>
 430:	ldr	x1, [sp, #344]
 434:	mov	x0, #0xb74c                	// #46924
 438:	movk	x0, #0x7f2b, lsl #16
 43c:	cmp	x1, x0
 440:	b.ne	54c <ext2fs_mkdir+0x4fc>  // b.any
 444:	ldr	w0, [sp, #68]
 448:	mov	w4, #0x2                   	// #2
 44c:	mov	w3, w0
 450:	ldr	x2, [sp, #24]
 454:	ldr	w1, [sp, #36]
 458:	ldr	x0, [sp, #40]
 45c:	bl	0 <ext2fs_link>
 460:	str	x0, [sp, #344]
 464:	ldr	x0, [sp, #344]
 468:	cmp	x0, #0x0
 46c:	b.ne	554 <ext2fs_mkdir+0x504>  // b.any
 470:	ldr	w0, [sp, #68]
 474:	ldr	w1, [sp, #36]
 478:	cmp	w1, w0
 47c:	b.eq	4d8 <ext2fs_mkdir+0x488>  // b.none
 480:	add	x0, sp, #0xc8
 484:	mov	x2, x0
 488:	ldr	w1, [sp, #36]
 48c:	ldr	x0, [sp, #40]
 490:	bl	0 <ext2fs_read_inode>
 494:	str	x0, [sp, #344]
 498:	ldr	x0, [sp, #344]
 49c:	cmp	x0, #0x0
 4a0:	b.ne	55c <ext2fs_mkdir+0x50c>  // b.any
 4a4:	ldrh	w0, [sp, #226]
 4a8:	add	w0, w0, #0x1
 4ac:	and	w0, w0, #0xffff
 4b0:	strh	w0, [sp, #226]
 4b4:	add	x0, sp, #0xc8
 4b8:	mov	x2, x0
 4bc:	ldr	w1, [sp, #36]
 4c0:	ldr	x0, [sp, #40]
 4c4:	bl	0 <ext2fs_write_inode>
 4c8:	str	x0, [sp, #344]
 4cc:	ldr	x0, [sp, #344]
 4d0:	cmp	x0, #0x0
 4d4:	b.ne	564 <ext2fs_mkdir+0x514>  // b.any
 4d8:	ldr	w0, [sp, #340]
 4dc:	cmp	w0, #0x0
 4e0:	b.ne	4f8 <ext2fs_mkdir+0x4a8>  // b.any
 4e4:	ldr	x0, [sp, #56]
 4e8:	mov	w2, #0x1                   	// #1
 4ec:	mov	x1, x0
 4f0:	ldr	x0, [sp, #40]
 4f4:	bl	0 <ext2fs_block_alloc_stats2>
 4f8:	ldr	w0, [sp, #68]
 4fc:	mov	w3, #0x1                   	// #1
 500:	mov	w2, #0x1                   	// #1
 504:	mov	w1, w0
 508:	ldr	x0, [sp, #40]
 50c:	bl	0 <ext2fs_inode_alloc_stats2>
 510:	b	568 <ext2fs_mkdir+0x518>
 514:	nop
 518:	b	568 <ext2fs_mkdir+0x518>
 51c:	nop
 520:	b	568 <ext2fs_mkdir+0x518>
 524:	nop
 528:	b	568 <ext2fs_mkdir+0x518>
 52c:	nop
 530:	b	568 <ext2fs_mkdir+0x518>
 534:	nop
 538:	b	568 <ext2fs_mkdir+0x518>
 53c:	nop
 540:	b	568 <ext2fs_mkdir+0x518>
 544:	nop
 548:	b	568 <ext2fs_mkdir+0x518>
 54c:	nop
 550:	b	568 <ext2fs_mkdir+0x518>
 554:	nop
 558:	b	568 <ext2fs_mkdir+0x518>
 55c:	nop
 560:	b	568 <ext2fs_mkdir+0x518>
 564:	nop
 568:	ldr	x0, [sp, #48]
 56c:	cmp	x0, #0x0
 570:	b.eq	57c <ext2fs_mkdir+0x52c>  // b.none
 574:	add	x0, sp, #0x30
 578:	bl	0 <ext2fs_free_mem>
 57c:	ldr	x0, [sp, #344]
 580:	ldp	x29, x30, [sp], #352
 584:	ret

mkjournal.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_set_feature_journal>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #92]
      10:	orr	w1, w0, #0x4
      14:	ldr	x0, [sp, #8]
      18:	str	w1, [x0, #92]
      1c:	nop
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_journal_dev>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #96]
      38:	and	w0, w0, #0x8
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_extents>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #96]
      60:	and	w0, w0, #0x40
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_create_journal_superblock>:
      78:	stp	x29, x30, [sp, #-80]!
      7c:	mov	x29, sp
      80:	str	x19, [sp, #16]
      84:	str	x0, [sp, #56]
      88:	str	w1, [sp, #52]
      8c:	str	w2, [sp, #48]
      90:	str	x3, [sp, #40]
      94:	ldr	w0, [sp, #52]
      98:	cmp	w0, #0x3ff
      9c:	b.hi	ac <ext2fs_create_journal_superblock+0x34>  // b.pmore
      a0:	mov	x0, #0xb755                	// #46933
      a4:	movk	x0, #0x7f2b, lsl #16
      a8:	b	1f8 <ext2fs_create_journal_superblock+0x180>
      ac:	ldr	x0, [sp, #56]
      b0:	ldr	w0, [x0, #40]
      b4:	mov	w0, w0
      b8:	add	x1, sp, #0x40
      bc:	bl	0 <ext2fs_get_mem>
      c0:	str	x0, [sp, #72]
      c4:	ldr	x0, [sp, #72]
      c8:	cmp	x0, #0x0
      cc:	b.eq	d8 <ext2fs_create_journal_superblock+0x60>  // b.none
      d0:	ldr	x0, [sp, #72]
      d4:	b	1f8 <ext2fs_create_journal_superblock+0x180>
      d8:	ldr	x3, [sp, #64]
      dc:	ldr	x0, [sp, #56]
      e0:	ldr	w0, [x0, #40]
      e4:	mov	w0, w0
      e8:	mov	x2, x0
      ec:	mov	w1, #0x0                   	// #0
      f0:	mov	x0, x3
      f4:	bl	0 <memset>
      f8:	ldr	x19, [sp, #64]
      fc:	mov	w0, #0x3998                	// #14744
     100:	movk	w0, #0xc03b, lsl #16
     104:	bl	0 <htonl>
     108:	str	w0, [x19]
     10c:	ldr	w0, [sp, #48]
     110:	and	w0, w0, #0x1
     114:	cmp	w0, #0x0
     118:	b.eq	130 <ext2fs_create_journal_superblock+0xb8>  // b.none
     11c:	ldr	x19, [sp, #64]
     120:	mov	w0, #0x3                   	// #3
     124:	bl	0 <htonl>
     128:	str	w0, [x19, #4]
     12c:	b	140 <ext2fs_create_journal_superblock+0xc8>
     130:	ldr	x19, [sp, #64]
     134:	mov	w0, #0x4                   	// #4
     138:	bl	0 <htonl>
     13c:	str	w0, [x19, #4]
     140:	ldr	x0, [sp, #56]
     144:	ldr	w0, [x0, #40]
     148:	ldr	x19, [sp, #64]
     14c:	bl	0 <htonl>
     150:	str	w0, [x19, #12]
     154:	ldr	x19, [sp, #64]
     158:	ldr	w0, [sp, #52]
     15c:	bl	0 <htonl>
     160:	str	w0, [x19, #16]
     164:	ldr	x19, [sp, #64]
     168:	mov	w0, #0x1                   	// #1
     16c:	bl	0 <htonl>
     170:	str	w0, [x19, #64]
     174:	ldr	x19, [sp, #64]
     178:	mov	w0, #0x1                   	// #1
     17c:	bl	0 <htonl>
     180:	str	w0, [x19, #20]
     184:	ldr	x19, [sp, #64]
     188:	mov	w0, #0x1                   	// #1
     18c:	bl	0 <htonl>
     190:	str	w0, [x19, #24]
     194:	ldr	x0, [sp, #64]
     198:	add	x2, x0, #0x30
     19c:	ldr	x0, [sp, #56]
     1a0:	ldr	x0, [x0, #32]
     1a4:	add	x0, x0, #0x68
     1a8:	ldp	x0, x1, [x0]
     1ac:	stp	x0, x1, [x2]
     1b0:	ldr	x0, [sp, #56]
     1b4:	ldr	x0, [x0, #32]
     1b8:	bl	28 <ext2fs_has_feature_journal_dev>
     1bc:	cmp	w0, #0x0
     1c0:	b.eq	1e8 <ext2fs_create_journal_superblock+0x170>  // b.none
     1c4:	ldr	x0, [sp, #64]
     1c8:	str	wzr, [x0, #64]
     1cc:	ldr	x0, [sp, #56]
     1d0:	ldr	w0, [x0, #40]
     1d4:	bl	cf0 <ext2fs_journal_sb_start>
     1d8:	add	w0, w0, #0x1
     1dc:	ldr	x19, [sp, #64]
     1e0:	bl	0 <htonl>
     1e4:	str	w0, [x19, #20]
     1e8:	ldr	x1, [sp, #64]
     1ec:	ldr	x0, [sp, #40]
     1f0:	str	x1, [x0]
     1f4:	mov	x0, #0x0                   	// #0
     1f8:	ldr	x19, [sp, #16]
     1fc:	ldp	x29, x30, [sp], #80
     200:	ret

0000000000000204 <write_journal_file>:
     204:	stp	x29, x30, [sp, #-80]!
     208:	mov	x29, sp
     20c:	str	x0, [sp, #40]
     210:	str	x1, [sp, #32]
     214:	str	w2, [sp, #28]
     218:	str	w3, [sp, #24]
     21c:	str	xzr, [sp, #48]
     220:	add	x0, sp, #0x30
     224:	mov	x3, x0
     228:	ldr	w2, [sp, #24]
     22c:	ldr	w1, [sp, #28]
     230:	ldr	x0, [sp, #40]
     234:	bl	78 <ext2fs_create_journal_superblock>
     238:	str	x0, [sp, #72]
     23c:	ldr	x0, [sp, #72]
     240:	cmp	x0, #0x0
     244:	b.eq	250 <write_journal_file+0x4c>  // b.none
     248:	ldr	x0, [sp, #72]
     24c:	b	3c4 <write_journal_file+0x1c0>
     250:	mov	w1, #0x1                   	// #1
     254:	ldr	x0, [sp, #32]
     258:	bl	0 <open>
     25c:	str	w0, [sp, #64]
     260:	ldr	w0, [sp, #64]
     264:	cmp	w0, #0x0
     268:	b.ge	280 <write_journal_file+0x7c>  // b.tcont
     26c:	bl	0 <__errno_location>
     270:	ldr	w0, [x0]
     274:	sxtw	x0, w0
     278:	str	x0, [sp, #72]
     27c:	b	3b8 <write_journal_file+0x1b4>
     280:	mov	x0, #0xb725                	// #46885
     284:	movk	x0, #0x7f2b, lsl #16
     288:	str	x0, [sp, #72]
     28c:	ldr	x1, [sp, #48]
     290:	ldr	x0, [sp, #40]
     294:	ldr	w0, [x0, #40]
     298:	mov	w0, w0
     29c:	mov	x2, x0
     2a0:	ldr	w0, [sp, #64]
     2a4:	bl	0 <write>
     2a8:	str	w0, [sp, #60]
     2ac:	ldr	w0, [sp, #60]
     2b0:	cmp	w0, #0x0
     2b4:	b.ge	2cc <write_journal_file+0xc8>  // b.tcont
     2b8:	bl	0 <__errno_location>
     2bc:	ldr	w0, [x0]
     2c0:	sxtw	x0, w0
     2c4:	str	x0, [sp, #72]
     2c8:	b	3b0 <write_journal_file+0x1ac>
     2cc:	ldr	x0, [sp, #40]
     2d0:	ldr	w0, [x0, #40]
     2d4:	mov	w1, w0
     2d8:	ldr	w0, [sp, #60]
     2dc:	cmp	w0, w1
     2e0:	b.ne	3a4 <write_journal_file+0x1a0>  // b.any
     2e4:	ldr	x3, [sp, #48]
     2e8:	ldr	x0, [sp, #40]
     2ec:	ldr	w0, [x0, #40]
     2f0:	mov	w0, w0
     2f4:	mov	x2, x0
     2f8:	mov	w1, #0x0                   	// #0
     2fc:	mov	x0, x3
     300:	bl	0 <memset>
     304:	ldr	w0, [sp, #24]
     308:	and	w0, w0, #0x2
     30c:	cmp	w0, #0x0
     310:	b.ne	398 <write_journal_file+0x194>  // b.any
     314:	mov	w0, #0x1                   	// #1
     318:	str	w0, [sp, #68]
     31c:	b	384 <write_journal_file+0x180>
     320:	ldr	x1, [sp, #48]
     324:	ldr	x0, [sp, #40]
     328:	ldr	w0, [x0, #40]
     32c:	mov	w0, w0
     330:	mov	x2, x0
     334:	ldr	w0, [sp, #64]
     338:	bl	0 <write>
     33c:	str	w0, [sp, #60]
     340:	ldr	w0, [sp, #60]
     344:	cmp	w0, #0x0
     348:	b.ge	360 <write_journal_file+0x15c>  // b.tcont
     34c:	bl	0 <__errno_location>
     350:	ldr	w0, [x0]
     354:	sxtw	x0, w0
     358:	str	x0, [sp, #72]
     35c:	b	3b0 <write_journal_file+0x1ac>
     360:	ldr	x0, [sp, #40]
     364:	ldr	w0, [x0, #40]
     368:	mov	w1, w0
     36c:	ldr	w0, [sp, #60]
     370:	cmp	w0, w1
     374:	b.ne	3ac <write_journal_file+0x1a8>  // b.any
     378:	ldr	w0, [sp, #68]
     37c:	add	w0, w0, #0x1
     380:	str	w0, [sp, #68]
     384:	ldr	w1, [sp, #68]
     388:	ldr	w0, [sp, #28]
     38c:	cmp	w1, w0
     390:	b.cc	320 <write_journal_file+0x11c>  // b.lo, b.ul, b.last
     394:	b	39c <write_journal_file+0x198>
     398:	nop
     39c:	str	xzr, [sp, #72]
     3a0:	b	3b0 <write_journal_file+0x1ac>
     3a4:	nop
     3a8:	b	3b0 <write_journal_file+0x1ac>
     3ac:	nop
     3b0:	ldr	w0, [sp, #64]
     3b4:	bl	0 <close>
     3b8:	add	x0, sp, #0x30
     3bc:	bl	0 <ext2fs_free_mem>
     3c0:	ldr	x0, [sp, #72]
     3c4:	ldp	x29, x30, [sp], #80
     3c8:	ret

00000000000003cc <ext2fs_zero_blocks2>:
     3cc:	stp	x29, x30, [sp, #-96]!
     3d0:	mov	x29, sp
     3d4:	str	x0, [sp, #56]
     3d8:	str	x1, [sp, #48]
     3dc:	str	w2, [sp, #44]
     3e0:	str	x3, [sp, #32]
     3e4:	str	x4, [sp, #24]
     3e8:	ldr	x0, [sp, #56]
     3ec:	cmp	x0, #0x0
     3f0:	b.ne	438 <ext2fs_zero_blocks2+0x6c>  // b.any
     3f4:	adrp	x0, 0 <ext2fs_set_feature_journal>
     3f8:	add	x0, x0, #0x0
     3fc:	ldr	x0, [x0]
     400:	cmp	x0, #0x0
     404:	b.eq	430 <ext2fs_zero_blocks2+0x64>  // b.none
     408:	adrp	x0, 0 <ext2fs_set_feature_journal>
     40c:	add	x0, x0, #0x0
     410:	ldr	x0, [x0]
     414:	bl	0 <free>
     418:	adrp	x0, 0 <ext2fs_set_feature_journal>
     41c:	add	x0, x0, #0x0
     420:	str	xzr, [x0]
     424:	adrp	x0, 0 <ext2fs_set_feature_journal>
     428:	add	x0, x0, #0x0
     42c:	str	wzr, [x0]
     430:	mov	x0, #0x0                   	// #0
     434:	b	70c <ext2fs_zero_blocks2+0x340>
     438:	ldr	w0, [sp, #44]
     43c:	cmp	w0, #0x0
     440:	b.gt	44c <ext2fs_zero_blocks2+0x80>
     444:	mov	x0, #0x0                   	// #0
     448:	b	70c <ext2fs_zero_blocks2+0x340>
     44c:	ldr	x0, [sp, #56]
     450:	ldr	x0, [x0, #8]
     454:	ldrsw	x1, [sp, #44]
     458:	mov	x2, x1
     45c:	ldr	x1, [sp, #48]
     460:	bl	0 <io_channel_zeroout>
     464:	str	x0, [sp, #72]
     468:	ldr	x0, [sp, #72]
     46c:	cmp	x0, #0x0
     470:	b.ne	47c <ext2fs_zero_blocks2+0xb0>  // b.any
     474:	mov	x0, #0x0                   	// #0
     478:	b	70c <ext2fs_zero_blocks2+0x340>
     47c:	adrp	x0, 0 <ext2fs_set_feature_journal>
     480:	add	x0, x0, #0x0
     484:	ldr	w0, [x0]
     488:	ldr	w1, [sp, #44]
     48c:	cmp	w1, w0
     490:	b.le	59c <ext2fs_zero_blocks2+0x1d0>
     494:	ldr	x0, [sp, #56]
     498:	ldr	w0, [x0, #40]
     49c:	mov	w1, w0
     4a0:	mov	w0, #0x400000              	// #4194304
     4a4:	sdiv	w1, w0, w1
     4a8:	adrp	x0, 0 <ext2fs_set_feature_journal>
     4ac:	add	x0, x0, #0x0
     4b0:	ldr	w0, [x0]
     4b4:	cmp	w1, w0
     4b8:	b.le	59c <ext2fs_zero_blocks2+0x1d0>
     4bc:	ldr	w0, [sp, #44]
     4c0:	str	w0, [sp, #84]
     4c4:	ldr	x0, [sp, #56]
     4c8:	ldr	w0, [x0, #40]
     4cc:	mov	w1, w0
     4d0:	mov	w0, #0x400000              	// #4194304
     4d4:	sdiv	w0, w0, w1
     4d8:	ldr	w1, [sp, #84]
     4dc:	cmp	w1, w0
     4e0:	b.le	4fc <ext2fs_zero_blocks2+0x130>
     4e4:	ldr	x0, [sp, #56]
     4e8:	ldr	w0, [x0, #40]
     4ec:	mov	w1, w0
     4f0:	mov	w0, #0x400000              	// #4194304
     4f4:	sdiv	w0, w0, w1
     4f8:	str	w0, [sp, #84]
     4fc:	adrp	x0, 0 <ext2fs_set_feature_journal>
     500:	add	x0, x0, #0x0
     504:	ldr	x2, [x0]
     508:	ldr	x0, [sp, #56]
     50c:	ldr	w1, [x0, #40]
     510:	ldr	w0, [sp, #84]
     514:	mul	w0, w1, w0
     518:	mov	w0, w0
     51c:	mov	x1, x0
     520:	mov	x0, x2
     524:	bl	0 <realloc>
     528:	str	x0, [sp, #64]
     52c:	ldr	x0, [sp, #64]
     530:	cmp	x0, #0x0
     534:	b.ne	544 <ext2fs_zero_blocks2+0x178>  // b.any
     538:	mov	x0, #0xb746                	// #46918
     53c:	movk	x0, #0x7f2b, lsl #16
     540:	b	70c <ext2fs_zero_blocks2+0x340>
     544:	adrp	x0, 0 <ext2fs_set_feature_journal>
     548:	add	x0, x0, #0x0
     54c:	ldr	x1, [sp, #64]
     550:	str	x1, [x0]
     554:	adrp	x0, 0 <ext2fs_set_feature_journal>
     558:	add	x0, x0, #0x0
     55c:	ldr	w1, [sp, #84]
     560:	str	w1, [x0]
     564:	adrp	x0, 0 <ext2fs_set_feature_journal>
     568:	add	x0, x0, #0x0
     56c:	ldr	x3, [x0]
     570:	ldr	x0, [sp, #56]
     574:	ldr	w0, [x0, #40]
     578:	adrp	x1, 0 <ext2fs_set_feature_journal>
     57c:	add	x1, x1, #0x0
     580:	ldr	w1, [x1]
     584:	mul	w0, w0, w1
     588:	mov	w0, w0
     58c:	mov	x2, x0
     590:	mov	w1, #0x0                   	// #0
     594:	mov	x0, x3
     598:	bl	0 <memset>
     59c:	str	wzr, [sp, #92]
     5a0:	b	6f8 <ext2fs_zero_blocks2+0x32c>
     5a4:	adrp	x0, 0 <ext2fs_set_feature_journal>
     5a8:	add	x0, x0, #0x0
     5ac:	ldr	w0, [x0]
     5b0:	sxtw	x1, w0
     5b4:	ldr	x0, [sp, #48]
     5b8:	udiv	x2, x0, x1
     5bc:	mul	x1, x2, x1
     5c0:	sub	x0, x0, x1
     5c4:	cmp	x0, #0x0
     5c8:	b.eq	630 <ext2fs_zero_blocks2+0x264>  // b.none
     5cc:	adrp	x0, 0 <ext2fs_set_feature_journal>
     5d0:	add	x0, x0, #0x0
     5d4:	ldr	w0, [x0]
     5d8:	mov	w3, w0
     5dc:	adrp	x0, 0 <ext2fs_set_feature_journal>
     5e0:	add	x0, x0, #0x0
     5e4:	ldr	w0, [x0]
     5e8:	sxtw	x1, w0
     5ec:	ldr	x0, [sp, #48]
     5f0:	udiv	x2, x0, x1
     5f4:	mul	x1, x2, x1
     5f8:	sub	x0, x0, x1
     5fc:	sub	w0, w3, w0
     600:	str	w0, [sp, #88]
     604:	ldr	w1, [sp, #44]
     608:	ldr	w0, [sp, #92]
     60c:	sub	w0, w1, w0
     610:	ldr	w1, [sp, #88]
     614:	cmp	w1, w0
     618:	b.le	668 <ext2fs_zero_blocks2+0x29c>
     61c:	ldr	w1, [sp, #44]
     620:	ldr	w0, [sp, #92]
     624:	sub	w0, w1, w0
     628:	str	w0, [sp, #88]
     62c:	b	668 <ext2fs_zero_blocks2+0x29c>
     630:	ldr	w1, [sp, #44]
     634:	ldr	w0, [sp, #92]
     638:	sub	w0, w1, w0
     63c:	str	w0, [sp, #88]
     640:	adrp	x0, 0 <ext2fs_set_feature_journal>
     644:	add	x0, x0, #0x0
     648:	ldr	w0, [x0]
     64c:	ldr	w1, [sp, #88]
     650:	cmp	w1, w0
     654:	b.le	668 <ext2fs_zero_blocks2+0x29c>
     658:	adrp	x0, 0 <ext2fs_set_feature_journal>
     65c:	add	x0, x0, #0x0
     660:	ldr	w0, [x0]
     664:	str	w0, [sp, #88]
     668:	ldr	x0, [sp, #56]
     66c:	ldr	x4, [x0, #8]
     670:	adrp	x0, 0 <ext2fs_set_feature_journal>
     674:	add	x0, x0, #0x0
     678:	ldr	x0, [x0]
     67c:	mov	x3, x0
     680:	ldr	w2, [sp, #88]
     684:	ldr	x1, [sp, #48]
     688:	mov	x0, x4
     68c:	bl	0 <io_channel_write_blk64>
     690:	str	x0, [sp, #72]
     694:	ldr	x0, [sp, #72]
     698:	cmp	x0, #0x0
     69c:	b.eq	6d8 <ext2fs_zero_blocks2+0x30c>  // b.none
     6a0:	ldr	x0, [sp, #24]
     6a4:	cmp	x0, #0x0
     6a8:	b.eq	6b8 <ext2fs_zero_blocks2+0x2ec>  // b.none
     6ac:	ldr	x0, [sp, #24]
     6b0:	ldr	w1, [sp, #88]
     6b4:	str	w1, [x0]
     6b8:	ldr	x0, [sp, #32]
     6bc:	cmp	x0, #0x0
     6c0:	b.eq	6d0 <ext2fs_zero_blocks2+0x304>  // b.none
     6c4:	ldr	x0, [sp, #32]
     6c8:	ldr	x1, [sp, #48]
     6cc:	str	x1, [x0]
     6d0:	ldr	x0, [sp, #72]
     6d4:	b	70c <ext2fs_zero_blocks2+0x340>
     6d8:	ldr	w1, [sp, #92]
     6dc:	ldr	w0, [sp, #88]
     6e0:	add	w0, w1, w0
     6e4:	str	w0, [sp, #92]
     6e8:	ldrsw	x0, [sp, #88]
     6ec:	ldr	x1, [sp, #48]
     6f0:	add	x0, x1, x0
     6f4:	str	x0, [sp, #48]
     6f8:	ldr	w1, [sp, #92]
     6fc:	ldr	w0, [sp, #44]
     700:	cmp	w1, w0
     704:	b.lt	5a4 <ext2fs_zero_blocks2+0x1d8>  // b.tstop
     708:	mov	x0, #0x0                   	// #0
     70c:	ldp	x29, x30, [sp], #96
     710:	ret

0000000000000714 <ext2fs_zero_blocks>:
     714:	stp	x29, x30, [sp, #-64]!
     718:	mov	x29, sp
     71c:	str	x0, [sp, #40]
     720:	str	w1, [sp, #36]
     724:	str	w2, [sp, #32]
     728:	str	x3, [sp, #24]
     72c:	str	x4, [sp, #16]
     730:	ldr	w0, [sp, #36]
     734:	add	x1, sp, #0x30
     738:	ldr	x4, [sp, #16]
     73c:	mov	x3, x1
     740:	ldr	w2, [sp, #32]
     744:	mov	x1, x0
     748:	ldr	x0, [sp, #40]
     74c:	bl	3cc <ext2fs_zero_blocks2>
     750:	str	x0, [sp, #56]
     754:	ldr	x0, [sp, #56]
     758:	cmp	x0, #0x0
     75c:	b.eq	770 <ext2fs_zero_blocks+0x5c>  // b.none
     760:	ldr	x0, [sp, #48]
     764:	mov	w1, w0
     768:	ldr	x0, [sp, #24]
     76c:	str	w1, [x0]
     770:	ldr	x0, [sp, #56]
     774:	ldp	x29, x30, [sp], #64
     778:	ret

000000000000077c <get_midpoint_journal_block>:
     77c:	stp	x29, x30, [sp, #-80]!
     780:	mov	x29, sp
     784:	str	x19, [sp, #16]
     788:	str	x0, [sp, #40]
     78c:	ldr	x0, [sp, #40]
     790:	ldr	x0, [x0, #32]
     794:	bl	0 <ext2fs_blocks_count>
     798:	mov	x1, x0
     79c:	ldr	x0, [sp, #40]
     7a0:	ldr	x0, [x0, #32]
     7a4:	ldr	w0, [x0, #20]
     7a8:	mov	w0, w0
     7ac:	sub	x0, x1, x0
     7b0:	lsr	x0, x0, #1
     7b4:	mov	x1, x0
     7b8:	ldr	x0, [sp, #40]
     7bc:	bl	0 <ext2fs_group_of_blk2>
     7c0:	str	w0, [sp, #76]
     7c4:	ldr	x0, [sp, #40]
     7c8:	ldr	x0, [x0, #32]
     7cc:	ldrb	w0, [x0, #372]
     7d0:	mov	w1, w0
     7d4:	mov	w0, #0x1                   	// #1
     7d8:	lsl	w0, w0, w1
     7dc:	str	w0, [sp, #64]
     7e0:	ldr	x0, [sp, #40]
     7e4:	ldr	x0, [x0, #32]
     7e8:	ldrb	w0, [x0, #372]
     7ec:	cmp	w0, #0x0
     7f0:	b.eq	874 <get_midpoint_journal_block+0xf8>  // b.none
     7f4:	ldr	w1, [sp, #76]
     7f8:	ldr	w0, [sp, #64]
     7fc:	cmp	w1, w0
     800:	b.ls	874 <get_midpoint_journal_block+0xf8>  // b.plast
     804:	ldr	w0, [sp, #64]
     808:	neg	w0, w0
     80c:	ldr	w1, [sp, #76]
     810:	and	w0, w1, w0
     814:	str	w0, [sp, #76]
     818:	b	828 <get_midpoint_journal_block+0xac>
     81c:	ldr	w0, [sp, #76]
     820:	add	w0, w0, #0x1
     824:	str	w0, [sp, #76]
     828:	ldr	x0, [sp, #40]
     82c:	ldr	w0, [x0, #48]
     830:	ldr	w1, [sp, #76]
     834:	cmp	w1, w0
     838:	b.cs	850 <get_midpoint_journal_block+0xd4>  // b.hs, b.nlast
     83c:	ldr	w1, [sp, #76]
     840:	ldr	x0, [sp, #40]
     844:	bl	0 <ext2fs_bg_free_blocks_count>
     848:	cmp	w0, #0x0
     84c:	b.eq	81c <get_midpoint_journal_block+0xa0>  // b.none
     850:	ldr	x0, [sp, #40]
     854:	ldr	w0, [x0, #48]
     858:	ldr	w1, [sp, #76]
     85c:	cmp	w1, w0
     860:	b.ne	868 <get_midpoint_journal_block+0xec>  // b.any
     864:	str	wzr, [sp, #76]
     868:	ldr	w0, [sp, #76]
     86c:	str	w0, [sp, #72]
     870:	b	894 <get_midpoint_journal_block+0x118>
     874:	ldr	w0, [sp, #76]
     878:	cmp	w0, #0x0
     87c:	b.eq	88c <get_midpoint_journal_block+0x110>  // b.none
     880:	ldr	w0, [sp, #76]
     884:	sub	w0, w0, #0x1
     888:	b	890 <get_midpoint_journal_block+0x114>
     88c:	ldr	w0, [sp, #76]
     890:	str	w0, [sp, #72]
     894:	ldr	w0, [sp, #76]
     898:	add	w1, w0, #0x1
     89c:	ldr	x0, [sp, #40]
     8a0:	ldr	w0, [x0, #48]
     8a4:	cmp	w1, w0
     8a8:	b.cs	8b8 <get_midpoint_journal_block+0x13c>  // b.hs, b.nlast
     8ac:	ldr	w0, [sp, #76]
     8b0:	add	w0, w0, #0x1
     8b4:	b	8bc <get_midpoint_journal_block+0x140>
     8b8:	ldr	w0, [sp, #76]
     8bc:	str	w0, [sp, #60]
     8c0:	ldr	w0, [sp, #72]
     8c4:	str	w0, [sp, #76]
     8c8:	ldr	w0, [sp, #72]
     8cc:	add	w0, w0, #0x1
     8d0:	str	w0, [sp, #68]
     8d4:	b	910 <get_midpoint_journal_block+0x194>
     8d8:	ldr	w1, [sp, #68]
     8dc:	ldr	x0, [sp, #40]
     8e0:	bl	0 <ext2fs_bg_free_blocks_count>
     8e4:	mov	w19, w0
     8e8:	ldr	w1, [sp, #76]
     8ec:	ldr	x0, [sp, #40]
     8f0:	bl	0 <ext2fs_bg_free_blocks_count>
     8f4:	cmp	w19, w0
     8f8:	b.ls	904 <get_midpoint_journal_block+0x188>  // b.plast
     8fc:	ldr	w0, [sp, #68]
     900:	str	w0, [sp, #76]
     904:	ldr	w0, [sp, #68]
     908:	add	w0, w0, #0x1
     90c:	str	w0, [sp, #68]
     910:	ldr	w1, [sp, #68]
     914:	ldr	w0, [sp, #60]
     918:	cmp	w1, w0
     91c:	b.ls	8d8 <get_midpoint_journal_block+0x15c>  // b.plast
     920:	ldr	w1, [sp, #76]
     924:	ldr	x0, [sp, #40]
     928:	bl	0 <ext2fs_group_first_block2>
     92c:	ldr	x19, [sp, #16]
     930:	ldp	x29, x30, [sp], #80
     934:	ret

0000000000000938 <write_journal_inode>:
     938:	stp	x29, x30, [sp, #-224]!
     93c:	mov	x29, sp
     940:	str	x0, [sp, #40]
     944:	str	w1, [sp, #36]
     948:	str	w2, [sp, #32]
     94c:	str	x3, [sp, #24]
     950:	str	w4, [sp, #20]
     954:	mov	w0, #0x2                   	// #2
     958:	str	w0, [sp, #212]
     95c:	add	x0, sp, #0xc0
     960:	mov	x3, x0
     964:	ldr	w2, [sp, #20]
     968:	ldr	w1, [sp, #32]
     96c:	ldr	x0, [sp, #40]
     970:	bl	78 <ext2fs_create_journal_superblock>
     974:	str	x0, [sp, #216]
     978:	ldr	x0, [sp, #216]
     97c:	cmp	x0, #0x0
     980:	b.eq	98c <write_journal_inode+0x54>  // b.none
     984:	ldr	x0, [sp, #216]
     988:	b	c18 <write_journal_inode+0x2e0>
     98c:	ldr	x0, [sp, #40]
     990:	bl	0 <ext2fs_read_bitmaps>
     994:	str	x0, [sp, #216]
     998:	ldr	x0, [sp, #216]
     99c:	cmp	x0, #0x0
     9a0:	b.ne	bd8 <write_journal_inode+0x2a0>  // b.any
     9a4:	add	x0, sp, #0x40
     9a8:	mov	x2, x0
     9ac:	ldr	w1, [sp, #36]
     9b0:	ldr	x0, [sp, #40]
     9b4:	bl	0 <ext2fs_read_inode>
     9b8:	str	x0, [sp, #216]
     9bc:	ldr	x0, [sp, #216]
     9c0:	cmp	x0, #0x0
     9c4:	b.ne	be0 <write_journal_inode+0x2a8>  // b.any
     9c8:	ldr	w0, [sp, #92]
     9cc:	cmp	w0, #0x0
     9d0:	b.eq	9e0 <write_journal_inode+0xa8>  // b.none
     9d4:	mov	x0, #0x11                  	// #17
     9d8:	str	x0, [sp, #216]
     9dc:	b	c0c <write_journal_inode+0x2d4>
     9e0:	ldr	x0, [sp, #24]
     9e4:	cmn	x0, #0x1
     9e8:	b.ne	9f8 <write_journal_inode+0xc0>  // b.any
     9ec:	ldr	x0, [sp, #40]
     9f0:	bl	77c <get_midpoint_journal_block>
     9f4:	str	x0, [sp, #24]
     9f8:	ldr	x0, [sp, #40]
     9fc:	ldr	x0, [x0, #32]
     a00:	bl	50 <ext2fs_has_feature_extents>
     a04:	cmp	w0, #0x0
     a08:	b.eq	a18 <write_journal_inode+0xe0>  // b.none
     a0c:	ldr	w0, [sp, #96]
     a10:	orr	w0, w0, #0x80000
     a14:	str	w0, [sp, #96]
     a18:	ldr	w0, [sp, #20]
     a1c:	and	w0, w0, #0x2
     a20:	cmp	w0, #0x0
     a24:	b.ne	a34 <write_journal_inode+0xfc>  // b.any
     a28:	ldr	w0, [sp, #212]
     a2c:	orr	w0, w0, #0x1
     a30:	str	w0, [sp, #212]
     a34:	ldr	x0, [sp, #40]
     a38:	ldr	w0, [x0, #40]
     a3c:	mov	w1, w0
     a40:	ldr	w0, [sp, #32]
     a44:	mul	x0, x1, x0
     a48:	str	x0, [sp, #200]
     a4c:	ldr	x0, [sp, #40]
     a50:	ldr	x0, [x0, #184]
     a54:	cmp	x0, #0x0
     a58:	b.eq	a68 <write_journal_inode+0x130>  // b.none
     a5c:	ldr	x0, [sp, #40]
     a60:	ldr	x0, [x0, #184]
     a64:	b	a70 <write_journal_inode+0x138>
     a68:	mov	x0, #0x0                   	// #0
     a6c:	bl	0 <time>
     a70:	str	w0, [sp, #76]
     a74:	ldr	w0, [sp, #76]
     a78:	str	w0, [sp, #80]
     a7c:	mov	w0, #0x1                   	// #1
     a80:	strh	w0, [sp, #90]
     a84:	mov	w0, #0xffff8180            	// #-32384
     a88:	strh	w0, [sp, #64]
     a8c:	ldr	x1, [sp, #200]
     a90:	add	x0, sp, #0x40
     a94:	mov	x2, x1
     a98:	mov	x1, x0
     a9c:	ldr	x0, [sp, #40]
     aa0:	bl	0 <ext2fs_inode_size_set>
     aa4:	str	x0, [sp, #216]
     aa8:	ldr	x0, [sp, #216]
     aac:	cmp	x0, #0x0
     ab0:	b.ne	be8 <write_journal_inode+0x2b0>  // b.any
     ab4:	ldr	w1, [sp, #32]
     ab8:	add	x0, sp, #0x40
     abc:	mov	x6, x1
     ac0:	mov	x5, #0x0                   	// #0
     ac4:	ldr	x4, [sp, #24]
     ac8:	mov	x3, x0
     acc:	ldr	w2, [sp, #36]
     ad0:	ldr	w1, [sp, #212]
     ad4:	ldr	x0, [sp, #40]
     ad8:	bl	0 <ext2fs_fallocate>
     adc:	str	x0, [sp, #216]
     ae0:	ldr	x0, [sp, #216]
     ae4:	cmp	x0, #0x0
     ae8:	b.ne	bf0 <write_journal_inode+0x2b8>  // b.any
     aec:	add	x0, sp, #0x40
     af0:	mov	x2, x0
     af4:	ldr	w1, [sp, #36]
     af8:	ldr	x0, [sp, #40]
     afc:	bl	0 <ext2fs_write_new_inode>
     b00:	str	x0, [sp, #216]
     b04:	ldr	x0, [sp, #216]
     b08:	cmp	x0, #0x0
     b0c:	b.ne	bf8 <write_journal_inode+0x2c0>  // b.any
     b10:	add	x1, sp, #0x38
     b14:	add	x0, sp, #0x40
     b18:	mov	x7, x1
     b1c:	mov	x6, #0x0                   	// #0
     b20:	mov	x5, #0x0                   	// #0
     b24:	mov	w4, #0x0                   	// #0
     b28:	mov	x3, #0x0                   	// #0
     b2c:	mov	x2, x0
     b30:	ldr	w1, [sp, #36]
     b34:	ldr	x0, [sp, #40]
     b38:	bl	0 <ext2fs_bmap2>
     b3c:	str	x0, [sp, #216]
     b40:	ldr	x0, [sp, #216]
     b44:	cmp	x0, #0x0
     b48:	b.ne	c00 <write_journal_inode+0x2c8>  // b.any
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	x0, [x0, #8]
     b54:	ldr	x1, [sp, #56]
     b58:	ldr	x2, [sp, #192]
     b5c:	mov	x3, x2
     b60:	mov	w2, #0x1                   	// #1
     b64:	bl	0 <io_channel_write_blk64>
     b68:	str	x0, [sp, #216]
     b6c:	ldr	x0, [sp, #216]
     b70:	cmp	x0, #0x0
     b74:	b.ne	c08 <write_journal_inode+0x2d0>  // b.any
     b78:	ldr	x0, [sp, #40]
     b7c:	ldr	x0, [x0, #32]
     b80:	add	x3, x0, #0x10c
     b84:	add	x0, sp, #0x40
     b88:	add	x0, x0, #0x28
     b8c:	mov	x2, #0x3c                  	// #60
     b90:	mov	x1, x0
     b94:	mov	x0, x3
     b98:	bl	0 <memcpy>
     b9c:	ldr	x0, [sp, #40]
     ba0:	ldr	x0, [x0, #32]
     ba4:	ldr	w1, [sp, #172]
     ba8:	str	w1, [x0, #328]
     bac:	ldr	x0, [sp, #40]
     bb0:	ldr	x0, [x0, #32]
     bb4:	ldr	w1, [sp, #68]
     bb8:	str	w1, [x0, #332]
     bbc:	ldr	x0, [sp, #40]
     bc0:	ldr	x0, [x0, #32]
     bc4:	mov	w1, #0x1                   	// #1
     bc8:	strb	w1, [x0, #253]
     bcc:	ldr	x0, [sp, #40]
     bd0:	bl	0 <ext2fs_mark_super_dirty>
     bd4:	b	c0c <write_journal_inode+0x2d4>
     bd8:	nop
     bdc:	b	c0c <write_journal_inode+0x2d4>
     be0:	nop
     be4:	b	c0c <write_journal_inode+0x2d4>
     be8:	nop
     bec:	b	c0c <write_journal_inode+0x2d4>
     bf0:	nop
     bf4:	b	c0c <write_journal_inode+0x2d4>
     bf8:	nop
     bfc:	b	c0c <write_journal_inode+0x2d4>
     c00:	nop
     c04:	b	c0c <write_journal_inode+0x2d4>
     c08:	nop
     c0c:	add	x0, sp, #0xc0
     c10:	bl	0 <ext2fs_free_mem>
     c14:	ldr	x0, [sp, #216]
     c18:	ldp	x29, x30, [sp], #224
     c1c:	ret

0000000000000c20 <ext2fs_default_journal_size>:
     c20:	sub	sp, sp, #0x10
     c24:	str	x0, [sp, #8]
     c28:	ldr	x0, [sp, #8]
     c2c:	cmp	x0, #0x7ff
     c30:	b.hi	c3c <ext2fs_default_journal_size+0x1c>  // b.pmore
     c34:	mov	w0, #0xffffffff            	// #-1
     c38:	b	ce8 <ext2fs_default_journal_size+0xc8>
     c3c:	ldr	x1, [sp, #8]
     c40:	mov	x0, #0x7fff                	// #32767
     c44:	cmp	x1, x0
     c48:	b.hi	c54 <ext2fs_default_journal_size+0x34>  // b.pmore
     c4c:	mov	w0, #0x400                 	// #1024
     c50:	b	ce8 <ext2fs_default_journal_size+0xc8>
     c54:	ldr	x1, [sp, #8]
     c58:	mov	x0, #0x3ffff               	// #262143
     c5c:	cmp	x1, x0
     c60:	b.hi	c6c <ext2fs_default_journal_size+0x4c>  // b.pmore
     c64:	mov	w0, #0x1000                	// #4096
     c68:	b	ce8 <ext2fs_default_journal_size+0xc8>
     c6c:	ldr	x1, [sp, #8]
     c70:	mov	x0, #0x7ffff               	// #524287
     c74:	cmp	x1, x0
     c78:	b.hi	c84 <ext2fs_default_journal_size+0x64>  // b.pmore
     c7c:	mov	w0, #0x2000                	// #8192
     c80:	b	ce8 <ext2fs_default_journal_size+0xc8>
     c84:	ldr	x1, [sp, #8]
     c88:	mov	x0, #0x3fffff              	// #4194303
     c8c:	cmp	x1, x0
     c90:	b.hi	c9c <ext2fs_default_journal_size+0x7c>  // b.pmore
     c94:	mov	w0, #0x4000                	// #16384
     c98:	b	ce8 <ext2fs_default_journal_size+0xc8>
     c9c:	ldr	x1, [sp, #8]
     ca0:	mov	x0, #0x7fffff              	// #8388607
     ca4:	cmp	x1, x0
     ca8:	b.hi	cb4 <ext2fs_default_journal_size+0x94>  // b.pmore
     cac:	mov	w0, #0x8000                	// #32768
     cb0:	b	ce8 <ext2fs_default_journal_size+0xc8>
     cb4:	ldr	x1, [sp, #8]
     cb8:	mov	x0, #0xffffff              	// #16777215
     cbc:	cmp	x1, x0
     cc0:	b.hi	ccc <ext2fs_default_journal_size+0xac>  // b.pmore
     cc4:	mov	w0, #0x10000               	// #65536
     cc8:	b	ce8 <ext2fs_default_journal_size+0xc8>
     ccc:	ldr	x1, [sp, #8]
     cd0:	mov	x0, #0x1ffffff             	// #33554431
     cd4:	cmp	x1, x0
     cd8:	b.hi	ce4 <ext2fs_default_journal_size+0xc4>  // b.pmore
     cdc:	mov	w0, #0x20000               	// #131072
     ce0:	b	ce8 <ext2fs_default_journal_size+0xc8>
     ce4:	mov	w0, #0x40000               	// #262144
     ce8:	add	sp, sp, #0x10
     cec:	ret

0000000000000cf0 <ext2fs_journal_sb_start>:
     cf0:	sub	sp, sp, #0x10
     cf4:	str	w0, [sp, #12]
     cf8:	ldr	w0, [sp, #12]
     cfc:	cmp	w0, #0x400
     d00:	b.ne	d0c <ext2fs_journal_sb_start+0x1c>  // b.any
     d04:	mov	w0, #0x2                   	// #2
     d08:	b	d10 <ext2fs_journal_sb_start+0x20>
     d0c:	mov	w0, #0x1                   	// #1
     d10:	add	sp, sp, #0x10
     d14:	ret

0000000000000d18 <ext2fs_add_journal_device>:
     d18:	sub	sp, sp, #0x4d0
     d1c:	stp	x29, x30, [sp]
     d20:	mov	x29, sp
     d24:	str	x19, [sp, #16]
     d28:	str	x0, [sp, #40]
     d2c:	str	x1, [sp, #32]
     d30:	ldr	x0, [sp, #32]
     d34:	ldr	x0, [x0, #24]
     d38:	add	x1, sp, #0x430
     d3c:	bl	0 <stat>
     d40:	cmp	w0, #0x0
     d44:	b.ge	d58 <ext2fs_add_journal_device+0x40>  // b.tcont
     d48:	bl	0 <__errno_location>
     d4c:	ldr	w0, [x0]
     d50:	sxtw	x0, w0
     d54:	b	fac <ext2fs_add_journal_device+0x294>
     d58:	ldr	w0, [sp, #1088]
     d5c:	and	w0, w0, #0xf000
     d60:	cmp	w0, #0x6, lsl #12
     d64:	b.eq	d74 <ext2fs_add_journal_device+0x5c>  // b.none
     d68:	mov	x0, #0xb753                	// #46931
     d6c:	movk	x0, #0x7f2b, lsl #16
     d70:	b	fac <ext2fs_add_journal_device+0x294>
     d74:	ldr	x0, [sp, #32]
     d78:	ldr	w0, [x0, #40]
     d7c:	bl	cf0 <ext2fs_journal_sb_start>
     d80:	str	w0, [sp, #1224]
     d84:	ldr	x0, [sp, #32]
     d88:	ldr	x0, [x0, #8]
     d8c:	ldrsw	x1, [sp, #1224]
     d90:	add	x2, sp, #0x30
     d94:	mov	x3, x2
     d98:	mov	w2, #0xfffffc00            	// #-1024
     d9c:	bl	0 <io_channel_read_blk64>
     da0:	str	x0, [sp, #1216]
     da4:	ldr	x0, [sp, #1216]
     da8:	cmp	x0, #0x0
     dac:	b.eq	db8 <ext2fs_add_journal_device+0xa0>  // b.none
     db0:	ldr	x0, [sp, #1216]
     db4:	b	fac <ext2fs_add_journal_device+0x294>
     db8:	add	x0, sp, #0x30
     dbc:	str	x0, [sp, #1208]
     dc0:	ldr	x0, [sp, #1208]
     dc4:	ldr	w19, [x0]
     dc8:	mov	w0, #0x3998                	// #14744
     dcc:	movk	w0, #0xc03b, lsl #16
     dd0:	bl	0 <ntohl>
     dd4:	cmp	w19, w0
     dd8:	b.ne	df4 <ext2fs_add_journal_device+0xdc>  // b.any
     ddc:	ldr	x0, [sp, #1208]
     de0:	ldr	w19, [x0, #4]
     de4:	mov	w0, #0x4                   	// #4
     de8:	bl	0 <ntohl>
     dec:	cmp	w19, w0
     df0:	b.eq	e00 <ext2fs_add_journal_device+0xe8>  // b.none
     df4:	mov	x0, #0xb754                	// #46932
     df8:	movk	x0, #0x7f2b, lsl #16
     dfc:	b	fac <ext2fs_add_journal_device+0x294>
     e00:	ldr	x0, [sp, #1208]
     e04:	ldr	w0, [x0, #12]
     e08:	bl	0 <ntohl>
     e0c:	mov	w1, w0
     e10:	ldr	x0, [sp, #40]
     e14:	ldr	w0, [x0, #40]
     e18:	cmp	w1, w0
     e1c:	b.eq	e2c <ext2fs_add_journal_device+0x114>  // b.none
     e20:	mov	x0, #0xb722                	// #46882
     e24:	movk	x0, #0x7f2b, lsl #16
     e28:	b	fac <ext2fs_add_journal_device+0x294>
     e2c:	ldr	x0, [sp, #1208]
     e30:	ldr	w0, [x0, #64]
     e34:	bl	0 <ntohl>
     e38:	str	w0, [sp, #1204]
     e3c:	ldr	w0, [sp, #1204]
     e40:	cmp	w0, #0x30
     e44:	b.ls	e54 <ext2fs_add_journal_device+0x13c>  // b.plast
     e48:	mov	x0, #0xb7b0                	// #47024
     e4c:	movk	x0, #0x7f2b, lsl #16
     e50:	b	fac <ext2fs_add_journal_device+0x294>
     e54:	str	wzr, [sp, #1228]
     e58:	b	ea4 <ext2fs_add_journal_device+0x18c>
     e5c:	ldr	x0, [sp, #40]
     e60:	ldr	x0, [x0, #32]
     e64:	add	x3, x0, #0x68
     e68:	ldr	w0, [sp, #1228]
     e6c:	lsl	w0, w0, #4
     e70:	mov	w0, w0
     e74:	add	x0, x0, #0x100
     e78:	ldr	x1, [sp, #1208]
     e7c:	add	x0, x1, x0
     e80:	mov	x2, #0x10                  	// #16
     e84:	mov	x1, x0
     e88:	mov	x0, x3
     e8c:	bl	0 <memcmp>
     e90:	cmp	w0, #0x0
     e94:	b.eq	eb8 <ext2fs_add_journal_device+0x1a0>  // b.none
     e98:	ldr	w0, [sp, #1228]
     e9c:	add	w0, w0, #0x1
     ea0:	str	w0, [sp, #1228]
     ea4:	ldr	w1, [sp, #1228]
     ea8:	ldr	w0, [sp, #1204]
     eac:	cmp	w1, w0
     eb0:	b.cc	e5c <ext2fs_add_journal_device+0x144>  // b.lo, b.ul, b.last
     eb4:	b	ebc <ext2fs_add_journal_device+0x1a4>
     eb8:	nop
     ebc:	ldr	w1, [sp, #1228]
     ec0:	ldr	w0, [sp, #1204]
     ec4:	cmp	w1, w0
     ec8:	b.cc	f10 <ext2fs_add_journal_device+0x1f8>  // b.lo, b.ul, b.last
     ecc:	ldr	w0, [sp, #1204]
     ed0:	lsl	w0, w0, #4
     ed4:	mov	w0, w0
     ed8:	add	x0, x0, #0x100
     edc:	ldr	x1, [sp, #1208]
     ee0:	add	x2, x1, x0
     ee4:	ldr	x0, [sp, #40]
     ee8:	ldr	x0, [x0, #32]
     eec:	add	x0, x0, #0x68
     ef0:	ldp	x0, x1, [x0]
     ef4:	stp	x0, x1, [x2]
     ef8:	ldr	w0, [sp, #1204]
     efc:	add	w0, w0, #0x1
     f00:	bl	0 <htonl>
     f04:	mov	w1, w0
     f08:	ldr	x0, [sp, #1208]
     f0c:	str	w1, [x0, #64]
     f10:	ldr	x0, [sp, #32]
     f14:	ldr	x0, [x0, #8]
     f18:	ldrsw	x1, [sp, #1224]
     f1c:	add	x2, sp, #0x30
     f20:	mov	x3, x2
     f24:	mov	w2, #0xfffffc00            	// #-1024
     f28:	bl	0 <io_channel_write_blk64>
     f2c:	str	x0, [sp, #1216]
     f30:	ldr	x0, [sp, #1216]
     f34:	cmp	x0, #0x0
     f38:	b.eq	f44 <ext2fs_add_journal_device+0x22c>  // b.none
     f3c:	ldr	x0, [sp, #1216]
     f40:	b	fac <ext2fs_add_journal_device+0x294>
     f44:	ldr	x0, [sp, #40]
     f48:	ldr	x0, [x0, #32]
     f4c:	str	wzr, [x0, #224]
     f50:	ldr	x1, [sp, #1104]
     f54:	ldr	x0, [sp, #40]
     f58:	ldr	x0, [x0, #32]
     f5c:	str	w1, [x0, #228]
     f60:	ldr	x0, [sp, #40]
     f64:	ldr	x0, [x0, #32]
     f68:	add	x2, x0, #0xd0
     f6c:	ldr	x0, [sp, #1208]
     f70:	add	x0, x0, #0x30
     f74:	ldp	x0, x1, [x0]
     f78:	stp	x0, x1, [x2]
     f7c:	ldr	x0, [sp, #40]
     f80:	ldr	x0, [x0, #32]
     f84:	add	x0, x0, #0x10c
     f88:	mov	x2, #0x44                  	// #68
     f8c:	mov	w1, #0x0                   	// #0
     f90:	bl	0 <memset>
     f94:	ldr	x0, [sp, #40]
     f98:	ldr	x0, [x0, #32]
     f9c:	bl	0 <ext2fs_set_feature_journal>
     fa0:	ldr	x0, [sp, #40]
     fa4:	bl	0 <ext2fs_mark_super_dirty>
     fa8:	mov	x0, #0x0                   	// #0
     fac:	ldr	x19, [sp, #16]
     fb0:	ldp	x29, x30, [sp]
     fb4:	add	sp, sp, #0x4d0
     fb8:	ret

0000000000000fbc <ext2fs_add_journal_inode2>:
     fbc:	sub	sp, sp, #0x4d0
     fc0:	stp	x29, x30, [sp]
     fc4:	mov	x29, sp
     fc8:	str	x0, [sp, #40]
     fcc:	str	w1, [sp, #36]
     fd0:	str	x2, [sp, #24]
     fd4:	str	w3, [sp, #32]
     fd8:	mov	w0, #0xffffffff            	// #-1
     fdc:	str	w0, [sp, #1216]
     fe0:	ldr	w0, [sp, #32]
     fe4:	and	w0, w0, #0x4
     fe8:	cmp	w0, #0x0
     fec:	b.eq	ff8 <ext2fs_add_journal_inode2+0x3c>  // b.none
     ff0:	str	wzr, [sp, #60]
     ff4:	b	1028 <ext2fs_add_journal_inode2+0x6c>
     ff8:	ldr	x0, [sp, #40]
     ffc:	ldr	x0, [x0, #24]
    1000:	add	x2, sp, #0x40
    1004:	add	x1, sp, #0x3c
    1008:	mov	w3, #0x3f6                 	// #1014
    100c:	bl	0 <ext2fs_check_mount_point>
    1010:	str	x0, [sp, #1224]
    1014:	ldr	x0, [sp, #1224]
    1018:	cmp	x0, #0x0
    101c:	b.eq	1028 <ext2fs_add_journal_inode2+0x6c>  // b.none
    1020:	ldr	x0, [sp, #1224]
    1024:	b	12fc <ext2fs_add_journal_inode2+0x340>
    1028:	ldr	w0, [sp, #60]
    102c:	and	w0, w0, #0x1
    1030:	cmp	w0, #0x0
    1034:	b.eq	1228 <ext2fs_add_journal_inode2+0x26c>  // b.none
    1038:	str	wzr, [sp, #56]
    103c:	add	x0, sp, #0x40
    1040:	bl	0 <strlen>
    1044:	mov	x1, x0
    1048:	add	x0, sp, #0x40
    104c:	add	x2, x0, x1
    1050:	adrp	x0, 0 <ext2fs_set_feature_journal>
    1054:	add	x1, x0, #0x0
    1058:	mov	x0, x2
    105c:	ldr	x2, [x1]
    1060:	str	x2, [x0]
    1064:	ldrh	w1, [x1, #8]
    1068:	strh	w1, [x0, #8]
    106c:	add	x0, sp, #0x40
    1070:	mov	w1, #0x0                   	// #0
    1074:	bl	0 <open>
    1078:	str	w0, [sp, #1216]
    107c:	ldr	w0, [sp, #1216]
    1080:	cmp	w0, #0x0
    1084:	b.lt	10c4 <ext2fs_add_journal_inode2+0x108>  // b.tstop
    1088:	add	x0, sp, #0x38
    108c:	mov	x2, x0
    1090:	mov	x1, #0x6602                	// #26114
    1094:	movk	x1, #0x4008, lsl #16
    1098:	ldr	w0, [sp, #1216]
    109c:	bl	0 <ioctl>
    10a0:	sxtw	x0, w0
    10a4:	str	x0, [sp, #1224]
    10a8:	ldr	w0, [sp, #1216]
    10ac:	bl	0 <close>
    10b0:	ldr	x0, [sp, #1224]
    10b4:	cmp	x0, #0x0
    10b8:	b.eq	10c4 <ext2fs_add_journal_inode2+0x108>  // b.none
    10bc:	ldr	x0, [sp, #1224]
    10c0:	b	12fc <ext2fs_add_journal_inode2+0x340>
    10c4:	add	x0, sp, #0x40
    10c8:	mov	w2, #0x180                 	// #384
    10cc:	mov	w1, #0x41                  	// #65
    10d0:	bl	0 <open>
    10d4:	str	w0, [sp, #1216]
    10d8:	ldr	w0, [sp, #1216]
    10dc:	cmp	w0, #0x0
    10e0:	b.ge	10f4 <ext2fs_add_journal_inode2+0x138>  // b.tcont
    10e4:	bl	0 <__errno_location>
    10e8:	ldr	w0, [x0]
    10ec:	sxtw	x0, w0
    10f0:	b	12fc <ext2fs_add_journal_inode2+0x340>
    10f4:	ldr	w0, [sp, #32]
    10f8:	and	w0, w0, #0xfffffffd
    10fc:	str	w0, [sp, #32]
    1100:	add	x0, sp, #0x40
    1104:	ldr	w3, [sp, #32]
    1108:	ldr	w2, [sp, #36]
    110c:	mov	x1, x0
    1110:	ldr	x0, [sp, #40]
    1114:	bl	204 <write_journal_file>
    1118:	str	x0, [sp, #1224]
    111c:	ldr	x0, [sp, #1224]
    1120:	cmp	x0, #0x0
    1124:	b.ne	12e0 <ext2fs_add_journal_inode2+0x324>  // b.any
    1128:	add	x0, sp, #0x440
    112c:	mov	x1, x0
    1130:	ldr	w0, [sp, #1216]
    1134:	bl	0 <fstat>
    1138:	cmp	w0, #0x0
    113c:	b.ge	1154 <ext2fs_add_journal_inode2+0x198>  // b.tcont
    1140:	bl	0 <__errno_location>
    1144:	ldr	w0, [x0]
    1148:	sxtw	x0, w0
    114c:	str	x0, [sp, #1224]
    1150:	b	12e4 <ext2fs_add_journal_inode2+0x328>
    1154:	add	x0, sp, #0x38
    1158:	mov	x2, x0
    115c:	mov	x1, #0x6601                	// #26113
    1160:	movk	x1, #0x8008, lsl #16
    1164:	ldr	w0, [sp, #1216]
    1168:	bl	0 <ioctl>
    116c:	cmp	w0, #0x0
    1170:	b.ge	1188 <ext2fs_add_journal_inode2+0x1cc>  // b.tcont
    1174:	bl	0 <__errno_location>
    1178:	ldr	w0, [x0]
    117c:	sxtw	x0, w0
    1180:	str	x0, [sp, #1224]
    1184:	b	12e4 <ext2fs_add_journal_inode2+0x328>
    1188:	ldr	w1, [sp, #56]
    118c:	mov	w0, #0x50                  	// #80
    1190:	orr	w0, w1, w0
    1194:	str	w0, [sp, #56]
    1198:	add	x0, sp, #0x38
    119c:	mov	x2, x0
    11a0:	mov	x1, #0x6602                	// #26114
    11a4:	movk	x1, #0x4008, lsl #16
    11a8:	ldr	w0, [sp, #1216]
    11ac:	bl	0 <ioctl>
    11b0:	sxtw	x0, w0
    11b4:	str	x0, [sp, #1224]
    11b8:	ldr	x0, [sp, #1224]
    11bc:	cmp	x0, #0x0
    11c0:	b.eq	11d8 <ext2fs_add_journal_inode2+0x21c>  // b.none
    11c4:	bl	0 <__errno_location>
    11c8:	ldr	w0, [x0]
    11cc:	sxtw	x0, w0
    11d0:	str	x0, [sp, #1224]
    11d4:	b	12e4 <ext2fs_add_journal_inode2+0x328>
    11d8:	ldr	w0, [sp, #1216]
    11dc:	bl	0 <close>
    11e0:	cmp	w0, #0x0
    11e4:	b.ge	1204 <ext2fs_add_journal_inode2+0x248>  // b.tcont
    11e8:	bl	0 <__errno_location>
    11ec:	ldr	w0, [x0]
    11f0:	sxtw	x0, w0
    11f4:	str	x0, [sp, #1224]
    11f8:	mov	w0, #0xffffffff            	// #-1
    11fc:	str	w0, [sp, #1216]
    1200:	b	12e4 <ext2fs_add_journal_inode2+0x328>
    1204:	ldr	x0, [sp, #1096]
    1208:	str	w0, [sp, #1220]
    120c:	ldr	x0, [sp, #40]
    1210:	ldr	x0, [x0, #32]
    1214:	add	x0, x0, #0x10c
    1218:	mov	x2, #0x44                  	// #68
    121c:	mov	w1, #0x0                   	// #0
    1220:	bl	0 <memset>
    1224:	b	1290 <ext2fs_add_journal_inode2+0x2d4>
    1228:	ldr	w0, [sp, #60]
    122c:	and	w0, w0, #0x10
    1230:	cmp	w0, #0x0
    1234:	b.eq	1258 <ext2fs_add_journal_inode2+0x29c>  // b.none
    1238:	ldr	x0, [sp, #40]
    123c:	ldr	w0, [x0, #16]
    1240:	and	w0, w0, #0x4000
    1244:	cmp	w0, #0x0
    1248:	b.ne	1258 <ext2fs_add_journal_inode2+0x29c>  // b.any
    124c:	mov	x0, #0x10                  	// #16
    1250:	str	x0, [sp, #1224]
    1254:	b	12e4 <ext2fs_add_journal_inode2+0x328>
    1258:	mov	w0, #0x8                   	// #8
    125c:	str	w0, [sp, #1220]
    1260:	ldr	w4, [sp, #32]
    1264:	ldr	x3, [sp, #24]
    1268:	ldr	w2, [sp, #36]
    126c:	ldr	w1, [sp, #1220]
    1270:	ldr	x0, [sp, #40]
    1274:	bl	938 <write_journal_inode>
    1278:	str	x0, [sp, #1224]
    127c:	ldr	x0, [sp, #1224]
    1280:	cmp	x0, #0x0
    1284:	b.eq	1290 <ext2fs_add_journal_inode2+0x2d4>  // b.none
    1288:	ldr	x0, [sp, #1224]
    128c:	b	12fc <ext2fs_add_journal_inode2+0x340>
    1290:	ldr	x0, [sp, #40]
    1294:	ldr	x0, [x0, #32]
    1298:	ldr	w1, [sp, #1220]
    129c:	str	w1, [x0, #224]
    12a0:	ldr	x0, [sp, #40]
    12a4:	ldr	x0, [x0, #32]
    12a8:	str	wzr, [x0, #228]
    12ac:	ldr	x0, [sp, #40]
    12b0:	ldr	x0, [x0, #32]
    12b4:	add	x0, x0, #0xd0
    12b8:	mov	x2, #0x10                  	// #16
    12bc:	mov	w1, #0x0                   	// #0
    12c0:	bl	0 <memset>
    12c4:	ldr	x0, [sp, #40]
    12c8:	ldr	x0, [x0, #32]
    12cc:	bl	0 <ext2fs_set_feature_journal>
    12d0:	ldr	x0, [sp, #40]
    12d4:	bl	0 <ext2fs_mark_super_dirty>
    12d8:	mov	x0, #0x0                   	// #0
    12dc:	b	12fc <ext2fs_add_journal_inode2+0x340>
    12e0:	nop
    12e4:	ldr	w0, [sp, #1216]
    12e8:	cmp	w0, #0x0
    12ec:	b.lt	12f8 <ext2fs_add_journal_inode2+0x33c>  // b.tstop
    12f0:	ldr	w0, [sp, #1216]
    12f4:	bl	0 <close>
    12f8:	ldr	x0, [sp, #1224]
    12fc:	ldp	x29, x30, [sp]
    1300:	add	sp, sp, #0x4d0
    1304:	ret

0000000000001308 <ext2fs_add_journal_inode>:
    1308:	stp	x29, x30, [sp, #-32]!
    130c:	mov	x29, sp
    1310:	str	x0, [sp, #24]
    1314:	str	w1, [sp, #20]
    1318:	str	w2, [sp, #16]
    131c:	ldr	w3, [sp, #16]
    1320:	mov	x2, #0xffffffffffffffff    	// #-1
    1324:	ldr	w1, [sp, #20]
    1328:	ldr	x0, [sp, #24]
    132c:	bl	fbc <ext2fs_add_journal_inode2>
    1330:	ldp	x29, x30, [sp], #32
    1334:	ret

mmp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_mmp>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x100
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_mmp_read>:
  28:	stp	x29, x30, [sp, #-80]!
  2c:	mov	x29, sp
  30:	str	x0, [sp, #40]
  34:	str	x1, [sp, #32]
  38:	str	x2, [sp, #24]
  3c:	str	xzr, [sp, #72]
  40:	ldr	x0, [sp, #40]
  44:	ldr	x0, [x0, #32]
  48:	ldr	w0, [x0, #20]
  4c:	mov	w0, w0
  50:	ldr	x1, [sp, #32]
  54:	cmp	x1, x0
  58:	b.ls	78 <ext2fs_mmp_read+0x50>  // b.plast
  5c:	ldr	x0, [sp, #40]
  60:	ldr	x0, [x0, #32]
  64:	bl	0 <ext2fs_blocks_count>
  68:	mov	x1, x0
  6c:	ldr	x0, [sp, #32]
  70:	cmp	x0, x1
  74:	b.cc	84 <ext2fs_mmp_read+0x5c>  // b.lo, b.ul, b.last
  78:	mov	x0, #0xb78d                	// #46989
  7c:	movk	x0, #0x7f2b, lsl #16
  80:	b	28c <ext2fs_mmp_read+0x264>
  84:	ldr	x0, [sp, #40]
  88:	ldr	w0, [x0, #288]
  8c:	cmp	w0, #0x0
  90:	b.gt	d4 <ext2fs_mmp_read+0xac>
  94:	ldr	x0, [sp, #40]
  98:	ldr	x0, [x0, #24]
  9c:	mov	w1, #0x2                   	// #2
  a0:	movk	w1, #0x1, lsl #16
  a4:	bl	0 <open>
  a8:	mov	w1, w0
  ac:	ldr	x0, [sp, #40]
  b0:	str	w1, [x0, #288]
  b4:	ldr	x0, [sp, #40]
  b8:	ldr	w0, [x0, #288]
  bc:	cmp	w0, #0x0
  c0:	b.ge	d4 <ext2fs_mmp_read+0xac>  // b.tcont
  c4:	mov	x0, #0xb790                	// #46992
  c8:	movk	x0, #0x7f2b, lsl #16
  cc:	str	x0, [sp, #72]
  d0:	b	288 <ext2fs_mmp_read+0x260>
  d4:	ldr	x0, [sp, #40]
  d8:	ldr	x0, [x0, #280]
  dc:	cmp	x0, #0x0
  e0:	b.ne	130 <ext2fs_mmp_read+0x108>  // b.any
  e4:	ldr	x0, [sp, #40]
  e8:	ldr	w0, [x0, #288]
  ec:	bl	0 <ext2fs_get_dio_alignment>
  f0:	str	w0, [sp, #68]
  f4:	ldr	x0, [sp, #40]
  f8:	ldr	w0, [x0, #40]
  fc:	mov	w3, w0
 100:	ldrsw	x1, [sp, #68]
 104:	ldr	x0, [sp, #40]
 108:	add	x0, x0, #0x118
 10c:	mov	x2, x0
 110:	mov	x0, x3
 114:	bl	0 <ext2fs_get_memalign>
 118:	str	x0, [sp, #72]
 11c:	ldr	x0, [sp, #72]
 120:	cmp	x0, #0x0
 124:	b.eq	130 <ext2fs_mmp_read+0x108>  // b.none
 128:	ldr	x0, [sp, #72]
 12c:	b	28c <ext2fs_mmp_read+0x264>
 130:	ldr	x0, [sp, #40]
 134:	ldr	w3, [x0, #288]
 138:	ldr	x0, [sp, #40]
 13c:	ldr	w0, [x0, #40]
 140:	mov	w1, w0
 144:	ldr	x0, [sp, #32]
 148:	mul	x0, x1, x0
 14c:	mov	w2, #0x0                   	// #0
 150:	mov	x1, x0
 154:	mov	w0, w3
 158:	bl	0 <ext2fs_llseek>
 15c:	mov	x2, x0
 160:	ldr	x0, [sp, #40]
 164:	ldr	w0, [x0, #40]
 168:	mov	w1, w0
 16c:	ldr	x0, [sp, #32]
 170:	mul	x0, x1, x0
 174:	cmp	x2, x0
 178:	b.eq	18c <ext2fs_mmp_read+0x164>  // b.none
 17c:	mov	x0, #0xb745                	// #46917
 180:	movk	x0, #0x7f2b, lsl #16
 184:	str	x0, [sp, #72]
 188:	b	288 <ext2fs_mmp_read+0x260>
 18c:	ldr	x0, [sp, #40]
 190:	ldr	w3, [x0, #288]
 194:	ldr	x0, [sp, #40]
 198:	ldr	x1, [x0, #280]
 19c:	ldr	x0, [sp, #40]
 1a0:	ldr	w0, [x0, #40]
 1a4:	mov	w0, w0
 1a8:	mov	x2, x0
 1ac:	mov	w0, w3
 1b0:	bl	0 <read>
 1b4:	mov	x1, x0
 1b8:	ldr	x0, [sp, #40]
 1bc:	ldr	w0, [x0, #40]
 1c0:	mov	w0, w0
 1c4:	cmp	x1, x0
 1c8:	b.eq	1dc <ext2fs_mmp_read+0x1b4>  // b.none
 1cc:	mov	x0, #0xb724                	// #46884
 1d0:	movk	x0, #0x7f2b, lsl #16
 1d4:	str	x0, [sp, #72]
 1d8:	b	288 <ext2fs_mmp_read+0x260>
 1dc:	ldr	x0, [sp, #40]
 1e0:	ldr	x0, [x0, #280]
 1e4:	str	x0, [sp, #56]
 1e8:	ldr	x0, [sp, #40]
 1ec:	ldr	w0, [x0, #16]
 1f0:	and	w0, w0, #0x200000
 1f4:	cmp	w0, #0x0
 1f8:	b.ne	21c <ext2fs_mmp_read+0x1f4>  // b.any
 1fc:	ldr	x1, [sp, #56]
 200:	ldr	x0, [sp, #40]
 204:	bl	0 <ext2fs_mmp_csum_verify>
 208:	cmp	w0, #0x0
 20c:	b.ne	21c <ext2fs_mmp_read+0x1f4>  // b.any
 210:	mov	x0, #0xb79a                	// #47002
 214:	movk	x0, #0x7f2b, lsl #16
 218:	str	x0, [sp, #72]
 21c:	ldr	x0, [sp, #24]
 220:	cmp	x0, #0x0
 224:	b.eq	25c <ext2fs_mmp_read+0x234>  // b.none
 228:	ldr	x0, [sp, #40]
 22c:	ldr	x0, [x0, #280]
 230:	ldr	x1, [sp, #24]
 234:	cmp	x1, x0
 238:	b.eq	25c <ext2fs_mmp_read+0x234>  // b.none
 23c:	ldr	x0, [sp, #40]
 240:	ldr	x1, [x0, #280]
 244:	ldr	x0, [sp, #40]
 248:	ldr	w0, [x0, #40]
 24c:	mov	w0, w0
 250:	mov	x2, x0
 254:	ldr	x0, [sp, #24]
 258:	bl	0 <memcpy>
 25c:	ldr	x0, [sp, #56]
 260:	ldr	w1, [x0]
 264:	mov	w0, #0x4d50                	// #19792
 268:	movk	w0, #0x4d, lsl #16
 26c:	cmp	w1, w0
 270:	b.eq	284 <ext2fs_mmp_read+0x25c>  // b.none
 274:	mov	x0, #0xb78a                	// #46986
 278:	movk	x0, #0x7f2b, lsl #16
 27c:	str	x0, [sp, #72]
 280:	b	288 <ext2fs_mmp_read+0x260>
 284:	nop
 288:	ldr	x0, [sp, #72]
 28c:	ldp	x29, x30, [sp], #80
 290:	ret

0000000000000294 <ext2fs_mmp_write>:
 294:	stp	x29, x30, [sp, #-96]!
 298:	mov	x29, sp
 29c:	str	x19, [sp, #16]
 2a0:	str	x0, [sp, #56]
 2a4:	str	x1, [sp, #48]
 2a8:	str	x2, [sp, #40]
 2ac:	ldr	x0, [sp, #40]
 2b0:	str	x0, [sp, #88]
 2b4:	str	xzr, [sp, #80]
 2b8:	add	x0, sp, #0x40
 2bc:	mov	x1, #0x0                   	// #0
 2c0:	bl	0 <gettimeofday>
 2c4:	ldr	x0, [sp, #64]
 2c8:	mov	x1, x0
 2cc:	ldr	x0, [sp, #88]
 2d0:	str	x1, [x0, #8]
 2d4:	ldr	x1, [sp, #64]
 2d8:	ldr	x0, [sp, #56]
 2dc:	str	x1, [x0, #296]
 2e0:	ldr	x0, [sp, #56]
 2e4:	ldr	x0, [x0, #32]
 2e8:	ldr	x1, [x0, #360]
 2ec:	ldr	x0, [sp, #56]
 2f0:	ldr	x0, [x0, #32]
 2f4:	ldr	w0, [x0, #20]
 2f8:	mov	w0, w0
 2fc:	cmp	x1, x0
 300:	b.cc	324 <ext2fs_mmp_write+0x90>  // b.lo, b.ul, b.last
 304:	ldr	x0, [sp, #56]
 308:	ldr	x0, [x0, #32]
 30c:	ldr	x19, [x0, #360]
 310:	ldr	x0, [sp, #56]
 314:	ldr	x0, [x0, #32]
 318:	bl	0 <ext2fs_blocks_count>
 31c:	cmp	x19, x0
 320:	b.ls	330 <ext2fs_mmp_write+0x9c>  // b.plast
 324:	mov	x0, #0xb78d                	// #46989
 328:	movk	x0, #0x7f2b, lsl #16
 32c:	b	390 <ext2fs_mmp_write+0xfc>
 330:	ldr	x1, [sp, #88]
 334:	ldr	x0, [sp, #56]
 338:	bl	0 <ext2fs_mmp_csum_set>
 33c:	str	x0, [sp, #80]
 340:	ldr	x0, [sp, #80]
 344:	cmp	x0, #0x0
 348:	b.eq	354 <ext2fs_mmp_write+0xc0>  // b.none
 34c:	ldr	x0, [sp, #80]
 350:	b	390 <ext2fs_mmp_write+0xfc>
 354:	ldr	x0, [sp, #56]
 358:	ldr	x0, [x0, #8]
 35c:	ldr	x3, [sp, #40]
 360:	mov	w2, #0xfffffc00            	// #-1024
 364:	ldr	x1, [sp, #48]
 368:	bl	0 <io_channel_write_blk64>
 36c:	str	x0, [sp, #80]
 370:	ldr	x0, [sp, #56]
 374:	ldr	x0, [x0, #8]
 378:	ldr	x0, [x0, #8]
 37c:	ldr	x1, [x0, #56]
 380:	ldr	x0, [sp, #56]
 384:	ldr	x0, [x0, #8]
 388:	blr	x1
 38c:	ldr	x0, [sp, #80]
 390:	ldr	x19, [sp, #16]
 394:	ldp	x29, x30, [sp], #96
 398:	ret

000000000000039c <ext2fs_mmp_new_seq>:
 39c:	stp	x29, x30, [sp, #-64]!
 3a0:	mov	x29, sp
 3a4:	str	x19, [sp, #16]
 3a8:	add	x0, sp, #0x28
 3ac:	mov	x1, #0x0                   	// #0
 3b0:	bl	0 <gettimeofday>
 3b4:	bl	0 <getpid>
 3b8:	lsl	w0, w0, #16
 3bc:	mov	w19, w0
 3c0:	bl	0 <getuid>
 3c4:	eor	w0, w19, w0
 3c8:	mov	w1, w0
 3cc:	ldr	x0, [sp, #40]
 3d0:	eor	w0, w1, w0
 3d4:	ldr	x1, [sp, #48]
 3d8:	eor	w0, w0, w1
 3dc:	bl	0 <srandom>
 3e0:	add	x0, sp, #0x28
 3e4:	mov	x1, #0x0                   	// #0
 3e8:	bl	0 <gettimeofday>
 3ec:	ldr	x0, [sp, #40]
 3f0:	mov	w1, w0
 3f4:	ldr	x0, [sp, #48]
 3f8:	eor	w0, w1, w0
 3fc:	and	w0, w0, #0x1f
 400:	str	w0, [sp, #60]
 404:	b	418 <ext2fs_mmp_new_seq+0x7c>
 408:	bl	0 <random>
 40c:	ldr	w0, [sp, #60]
 410:	sub	w0, w0, #0x1
 414:	str	w0, [sp, #60]
 418:	ldr	w0, [sp, #60]
 41c:	cmp	w0, #0x0
 420:	b.ne	408 <ext2fs_mmp_new_seq+0x6c>  // b.any
 424:	bl	0 <random>
 428:	str	w0, [sp, #60]
 42c:	ldr	w1, [sp, #60]
 430:	mov	w0, #0x4d4f                	// #19791
 434:	movk	w0, #0xe24d, lsl #16
 438:	cmp	w1, w0
 43c:	b.hi	424 <ext2fs_mmp_new_seq+0x88>  // b.pmore
 440:	ldr	w0, [sp, #60]
 444:	ldr	x19, [sp, #16]
 448:	ldp	x29, x30, [sp], #64
 44c:	ret

0000000000000450 <ext2fs_mmp_reset>:
 450:	stp	x29, x30, [sp, #-48]!
 454:	mov	x29, sp
 458:	str	x0, [sp, #24]
 45c:	str	xzr, [sp, #32]
 460:	str	xzr, [sp, #40]
 464:	ldr	x0, [sp, #24]
 468:	ldr	x0, [x0, #272]
 46c:	cmp	x0, #0x0
 470:	b.ne	4a4 <ext2fs_mmp_reset+0x54>  // b.any
 474:	ldr	x0, [sp, #24]
 478:	ldr	w0, [x0, #40]
 47c:	mov	w2, w0
 480:	ldr	x0, [sp, #24]
 484:	add	x0, x0, #0x110
 488:	mov	x1, x0
 48c:	mov	x0, x2
 490:	bl	0 <ext2fs_get_mem>
 494:	str	x0, [sp, #40]
 498:	ldr	x0, [sp, #40]
 49c:	cmp	x0, #0x0
 4a0:	b.ne	584 <ext2fs_mmp_reset+0x134>  // b.any
 4a4:	ldr	x0, [sp, #24]
 4a8:	ldr	x3, [x0, #272]
 4ac:	ldr	x0, [sp, #24]
 4b0:	ldr	w0, [x0, #40]
 4b4:	mov	w0, w0
 4b8:	mov	x2, x0
 4bc:	mov	w1, #0x0                   	// #0
 4c0:	mov	x0, x3
 4c4:	bl	0 <memset>
 4c8:	ldr	x0, [sp, #24]
 4cc:	ldr	x0, [x0, #272]
 4d0:	str	x0, [sp, #32]
 4d4:	ldr	x0, [sp, #32]
 4d8:	mov	w1, #0x4d50                	// #19792
 4dc:	movk	w1, #0x4d, lsl #16
 4e0:	str	w1, [x0]
 4e4:	ldr	x0, [sp, #32]
 4e8:	mov	w1, #0x4d50                	// #19792
 4ec:	movk	w1, #0xff4d, lsl #16
 4f0:	str	w1, [x0, #4]
 4f4:	ldr	x0, [sp, #32]
 4f8:	str	xzr, [x0, #8]
 4fc:	ldr	x0, [sp, #32]
 500:	add	x0, x0, #0x10
 504:	mov	x1, #0x40                  	// #64
 508:	bl	0 <gethostname>
 50c:	ldr	x0, [sp, #32]
 510:	add	x3, x0, #0x50
 514:	ldr	x0, [sp, #24]
 518:	ldr	x0, [x0, #24]
 51c:	mov	x2, #0x20                  	// #32
 520:	mov	x1, x0
 524:	mov	x0, x3
 528:	bl	0 <strncpy>
 52c:	ldr	x0, [sp, #24]
 530:	ldr	x0, [x0, #32]
 534:	ldrh	w1, [x0, #358]
 538:	ldr	x0, [sp, #32]
 53c:	strh	w1, [x0, #112]
 540:	ldr	x0, [sp, #32]
 544:	ldrh	w0, [x0, #112]
 548:	cmp	w0, #0x4
 54c:	b.hi	55c <ext2fs_mmp_reset+0x10c>  // b.pmore
 550:	ldr	x0, [sp, #32]
 554:	mov	w1, #0x5                   	// #5
 558:	strh	w1, [x0, #112]
 55c:	ldr	x0, [sp, #24]
 560:	ldr	x0, [x0, #32]
 564:	ldr	x1, [x0, #360]
 568:	ldr	x0, [sp, #24]
 56c:	ldr	x0, [x0, #272]
 570:	mov	x2, x0
 574:	ldr	x0, [sp, #24]
 578:	bl	294 <ext2fs_mmp_write>
 57c:	str	x0, [sp, #40]
 580:	b	588 <ext2fs_mmp_reset+0x138>
 584:	nop
 588:	ldr	x0, [sp, #40]
 58c:	ldp	x29, x30, [sp], #48
 590:	ret

0000000000000594 <ext2fs_mmp_update>:
 594:	stp	x29, x30, [sp, #-32]!
 598:	mov	x29, sp
 59c:	str	x0, [sp, #24]
 5a0:	mov	w1, #0x0                   	// #0
 5a4:	ldr	x0, [sp, #24]
 5a8:	bl	b70 <ext2fs_mmp_update2>
 5ac:	ldp	x29, x30, [sp], #32
 5b0:	ret

00000000000005b4 <ext2fs_mmp_clear>:
 5b4:	stp	x29, x30, [sp, #-48]!
 5b8:	mov	x29, sp
 5bc:	str	x0, [sp, #24]
 5c0:	str	xzr, [sp, #40]
 5c4:	ldr	x0, [sp, #24]
 5c8:	ldr	w0, [x0, #16]
 5cc:	and	w0, w0, #0x1
 5d0:	cmp	w0, #0x0
 5d4:	b.ne	5e4 <ext2fs_mmp_clear+0x30>  // b.any
 5d8:	mov	x0, #0xb715                	// #46869
 5dc:	movk	x0, #0x7f2b, lsl #16
 5e0:	b	5f4 <ext2fs_mmp_clear+0x40>
 5e4:	ldr	x0, [sp, #24]
 5e8:	bl	450 <ext2fs_mmp_reset>
 5ec:	str	x0, [sp, #40]
 5f0:	ldr	x0, [sp, #40]
 5f4:	ldp	x29, x30, [sp], #48
 5f8:	ret

00000000000005fc <ext2fs_mmp_init>:
 5fc:	stp	x29, x30, [sp, #-64]!
 600:	mov	x29, sp
 604:	str	x0, [sp, #24]
 608:	ldr	x0, [sp, #24]
 60c:	ldr	x0, [x0, #32]
 610:	str	x0, [sp, #48]
 614:	ldr	x0, [sp, #48]
 618:	ldrh	w0, [x0, #358]
 61c:	cmp	w0, #0x0
 620:	b.ne	634 <ext2fs_mmp_init+0x38>  // b.any
 624:	ldr	x0, [sp, #48]
 628:	mov	w1, #0x5                   	// #5
 62c:	strh	w1, [x0, #358]
 630:	b	650 <ext2fs_mmp_init+0x54>
 634:	ldr	x0, [sp, #48]
 638:	ldrh	w0, [x0, #358]
 63c:	cmp	w0, #0x12c
 640:	b.ls	650 <ext2fs_mmp_init+0x54>  // b.plast
 644:	mov	x0, #0xb747                	// #46919
 648:	movk	x0, #0x7f2b, lsl #16
 64c:	b	6f4 <ext2fs_mmp_init+0xf8>
 650:	ldr	x0, [sp, #24]
 654:	ldr	x0, [x0, #272]
 658:	cmp	x0, #0x0
 65c:	b.ne	690 <ext2fs_mmp_init+0x94>  // b.any
 660:	ldr	x0, [sp, #24]
 664:	ldr	w0, [x0, #40]
 668:	mov	w2, w0
 66c:	ldr	x0, [sp, #24]
 670:	add	x0, x0, #0x110
 674:	mov	x1, x0
 678:	mov	x0, x2
 67c:	bl	0 <ext2fs_get_mem>
 680:	str	x0, [sp, #56]
 684:	ldr	x0, [sp, #56]
 688:	cmp	x0, #0x0
 68c:	b.ne	6e4 <ext2fs_mmp_init+0xe8>  // b.any
 690:	ldr	x0, [sp, #24]
 694:	ldr	x0, [x0, #272]
 698:	add	x1, sp, #0x28
 69c:	mov	x3, x1
 6a0:	mov	x2, x0
 6a4:	mov	x1, #0x0                   	// #0
 6a8:	ldr	x0, [sp, #24]
 6ac:	bl	0 <ext2fs_alloc_block2>
 6b0:	str	x0, [sp, #56]
 6b4:	ldr	x0, [sp, #56]
 6b8:	cmp	x0, #0x0
 6bc:	b.ne	6ec <ext2fs_mmp_init+0xf0>  // b.any
 6c0:	ldr	x1, [sp, #40]
 6c4:	ldr	x0, [sp, #48]
 6c8:	str	x1, [x0, #360]
 6cc:	ldr	x0, [sp, #24]
 6d0:	bl	450 <ext2fs_mmp_reset>
 6d4:	str	x0, [sp, #56]
 6d8:	ldr	x0, [sp, #56]
 6dc:	cmp	x0, #0x0
 6e0:	b	6f0 <ext2fs_mmp_init+0xf4>
 6e4:	nop
 6e8:	b	6f0 <ext2fs_mmp_init+0xf4>
 6ec:	nop
 6f0:	ldr	x0, [sp, #56]
 6f4:	ldp	x29, x30, [sp], #64
 6f8:	ret

00000000000006fc <ext2fs_mmp_start>:
 6fc:	stp	x29, x30, [sp, #-64]!
 700:	mov	x29, sp
 704:	str	x0, [sp, #24]
 708:	str	xzr, [sp, #48]
 70c:	ldr	x0, [sp, #24]
 710:	ldr	x0, [x0, #272]
 714:	cmp	x0, #0x0
 718:	b.ne	74c <ext2fs_mmp_start+0x50>  // b.any
 71c:	ldr	x0, [sp, #24]
 720:	ldr	w0, [x0, #40]
 724:	mov	w2, w0
 728:	ldr	x0, [sp, #24]
 72c:	add	x0, x0, #0x110
 730:	mov	x1, x0
 734:	mov	x0, x2
 738:	bl	0 <ext2fs_get_mem>
 73c:	str	x0, [sp, #48]
 740:	ldr	x0, [sp, #48]
 744:	cmp	x0, #0x0
 748:	b.ne	9fc <ext2fs_mmp_start+0x300>  // b.any
 74c:	ldr	x0, [sp, #24]
 750:	ldr	x0, [x0, #32]
 754:	ldr	x1, [x0, #360]
 758:	ldr	x0, [sp, #24]
 75c:	ldr	x0, [x0, #272]
 760:	mov	x2, x0
 764:	ldr	x0, [sp, #24]
 768:	bl	28 <ext2fs_mmp_read>
 76c:	str	x0, [sp, #48]
 770:	ldr	x0, [sp, #48]
 774:	cmp	x0, #0x0
 778:	b.ne	a04 <ext2fs_mmp_start+0x308>  // b.any
 77c:	ldr	x0, [sp, #24]
 780:	ldr	x0, [x0, #272]
 784:	str	x0, [sp, #40]
 788:	ldr	x0, [sp, #24]
 78c:	ldr	x0, [x0, #32]
 790:	ldrh	w0, [x0, #358]
 794:	str	w0, [sp, #60]
 798:	ldr	w0, [sp, #60]
 79c:	cmp	w0, #0x4
 7a0:	b.hi	7ac <ext2fs_mmp_start+0xb0>  // b.pmore
 7a4:	mov	w0, #0x5                   	// #5
 7a8:	str	w0, [sp, #60]
 7ac:	ldr	x0, [sp, #40]
 7b0:	ldr	w0, [x0, #4]
 7b4:	str	w0, [sp, #36]
 7b8:	ldr	w1, [sp, #36]
 7bc:	mov	w0, #0x4d50                	// #19792
 7c0:	movk	w0, #0xff4d, lsl #16
 7c4:	cmp	w1, w0
 7c8:	b.eq	8ac <ext2fs_mmp_start+0x1b0>  // b.none
 7cc:	ldr	w1, [sp, #36]
 7d0:	mov	w0, #0x4d50                	// #19792
 7d4:	movk	w0, #0xe24d, lsl #16
 7d8:	cmp	w1, w0
 7dc:	b.ne	7f0 <ext2fs_mmp_start+0xf4>  // b.any
 7e0:	mov	x0, #0xb78c                	// #46988
 7e4:	movk	x0, #0x7f2b, lsl #16
 7e8:	str	x0, [sp, #48]
 7ec:	b	a30 <ext2fs_mmp_start+0x334>
 7f0:	ldr	w1, [sp, #36]
 7f4:	mov	w0, #0x4d50                	// #19792
 7f8:	movk	w0, #0xe24d, lsl #16
 7fc:	cmp	w1, w0
 800:	b.ls	814 <ext2fs_mmp_start+0x118>  // b.plast
 804:	mov	x0, #0xb78e                	// #46990
 808:	movk	x0, #0x7f2b, lsl #16
 80c:	str	x0, [sp, #48]
 810:	b	a30 <ext2fs_mmp_start+0x334>
 814:	ldr	x0, [sp, #40]
 818:	ldrh	w0, [x0, #112]
 81c:	mov	w1, w0
 820:	ldr	w0, [sp, #60]
 824:	cmp	w0, w1
 828:	b.cs	838 <ext2fs_mmp_start+0x13c>  // b.hs, b.nlast
 82c:	ldr	x0, [sp, #40]
 830:	ldrh	w0, [x0, #112]
 834:	str	w0, [sp, #60]
 838:	ldr	w0, [sp, #60]
 83c:	add	w1, w0, #0x3c
 840:	ldr	w0, [sp, #60]
 844:	lsl	w0, w0, #1
 848:	add	w0, w0, #0x1
 84c:	cmp	w1, w0
 850:	csel	w0, w1, w0, ls  // ls = plast
 854:	bl	0 <sleep>
 858:	ldr	x0, [sp, #24]
 85c:	ldr	x0, [x0, #32]
 860:	ldr	x1, [x0, #360]
 864:	ldr	x0, [sp, #24]
 868:	ldr	x0, [x0, #272]
 86c:	mov	x2, x0
 870:	ldr	x0, [sp, #24]
 874:	bl	28 <ext2fs_mmp_read>
 878:	str	x0, [sp, #48]
 87c:	ldr	x0, [sp, #48]
 880:	cmp	x0, #0x0
 884:	b.ne	a0c <ext2fs_mmp_start+0x310>  // b.any
 888:	ldr	x0, [sp, #40]
 88c:	ldr	w0, [x0, #4]
 890:	ldr	w1, [sp, #36]
 894:	cmp	w1, w0
 898:	b.eq	8b4 <ext2fs_mmp_start+0x1b8>  // b.none
 89c:	mov	x0, #0xb78b                	// #46987
 8a0:	movk	x0, #0x7f2b, lsl #16
 8a4:	str	x0, [sp, #48]
 8a8:	b	a30 <ext2fs_mmp_start+0x334>
 8ac:	nop
 8b0:	b	8b8 <ext2fs_mmp_start+0x1bc>
 8b4:	nop
 8b8:	ldr	x0, [sp, #24]
 8bc:	ldr	w0, [x0, #16]
 8c0:	and	w0, w0, #0x1
 8c4:	cmp	w0, #0x0
 8c8:	b.eq	a14 <ext2fs_mmp_start+0x318>  // b.none
 8cc:	bl	39c <ext2fs_mmp_new_seq>
 8d0:	str	w0, [sp, #36]
 8d4:	ldr	x0, [sp, #40]
 8d8:	ldr	w1, [sp, #36]
 8dc:	str	w1, [x0, #4]
 8e0:	ldr	x0, [sp, #40]
 8e4:	add	x0, x0, #0x10
 8e8:	mov	x1, #0x40                  	// #64
 8ec:	bl	0 <gethostname>
 8f0:	ldr	x0, [sp, #40]
 8f4:	add	x3, x0, #0x50
 8f8:	ldr	x0, [sp, #24]
 8fc:	ldr	x0, [x0, #24]
 900:	mov	x2, #0x20                  	// #32
 904:	mov	x1, x0
 908:	mov	x0, x3
 90c:	bl	0 <strncpy>
 910:	ldr	x0, [sp, #24]
 914:	ldr	x0, [x0, #32]
 918:	ldr	x1, [x0, #360]
 91c:	ldr	x0, [sp, #24]
 920:	ldr	x0, [x0, #272]
 924:	mov	x2, x0
 928:	ldr	x0, [sp, #24]
 92c:	bl	294 <ext2fs_mmp_write>
 930:	str	x0, [sp, #48]
 934:	ldr	x0, [sp, #48]
 938:	cmp	x0, #0x0
 93c:	b.ne	a1c <ext2fs_mmp_start+0x320>  // b.any
 940:	ldr	w0, [sp, #60]
 944:	add	w1, w0, #0x3c
 948:	ldr	w0, [sp, #60]
 94c:	lsl	w0, w0, #1
 950:	add	w0, w0, #0x1
 954:	cmp	w1, w0
 958:	csel	w0, w1, w0, ls  // ls = plast
 95c:	bl	0 <sleep>
 960:	ldr	x0, [sp, #24]
 964:	ldr	x0, [x0, #32]
 968:	ldr	x1, [x0, #360]
 96c:	ldr	x0, [sp, #24]
 970:	ldr	x0, [x0, #272]
 974:	mov	x2, x0
 978:	ldr	x0, [sp, #24]
 97c:	bl	28 <ext2fs_mmp_read>
 980:	str	x0, [sp, #48]
 984:	ldr	x0, [sp, #48]
 988:	cmp	x0, #0x0
 98c:	b.ne	a24 <ext2fs_mmp_start+0x328>  // b.any
 990:	ldr	x0, [sp, #40]
 994:	ldr	w0, [x0, #4]
 998:	ldr	w1, [sp, #36]
 99c:	cmp	w1, w0
 9a0:	b.eq	9b4 <ext2fs_mmp_start+0x2b8>  // b.none
 9a4:	mov	x0, #0xb78b                	// #46987
 9a8:	movk	x0, #0x7f2b, lsl #16
 9ac:	str	x0, [sp, #48]
 9b0:	b	a30 <ext2fs_mmp_start+0x334>
 9b4:	ldr	x0, [sp, #40]
 9b8:	mov	w1, #0x4d50                	// #19792
 9bc:	movk	w1, #0xe24d, lsl #16
 9c0:	str	w1, [x0, #4]
 9c4:	ldr	x0, [sp, #24]
 9c8:	ldr	x0, [x0, #32]
 9cc:	ldr	x1, [x0, #360]
 9d0:	ldr	x0, [sp, #24]
 9d4:	ldr	x0, [x0, #272]
 9d8:	mov	x2, x0
 9dc:	ldr	x0, [sp, #24]
 9e0:	bl	294 <ext2fs_mmp_write>
 9e4:	str	x0, [sp, #48]
 9e8:	ldr	x0, [sp, #48]
 9ec:	cmp	x0, #0x0
 9f0:	b.ne	a2c <ext2fs_mmp_start+0x330>  // b.any
 9f4:	mov	x0, #0x0                   	// #0
 9f8:	b	a34 <ext2fs_mmp_start+0x338>
 9fc:	nop
 a00:	b	a30 <ext2fs_mmp_start+0x334>
 a04:	nop
 a08:	b	a30 <ext2fs_mmp_start+0x334>
 a0c:	nop
 a10:	b	a30 <ext2fs_mmp_start+0x334>
 a14:	nop
 a18:	b	a30 <ext2fs_mmp_start+0x334>
 a1c:	nop
 a20:	b	a30 <ext2fs_mmp_start+0x334>
 a24:	nop
 a28:	b	a30 <ext2fs_mmp_start+0x334>
 a2c:	nop
 a30:	ldr	x0, [sp, #48]
 a34:	ldp	x29, x30, [sp], #64
 a38:	ret

0000000000000a3c <ext2fs_mmp_stop>:
 a3c:	stp	x29, x30, [sp, #-64]!
 a40:	mov	x29, sp
 a44:	str	x0, [sp, #24]
 a48:	str	xzr, [sp, #56]
 a4c:	ldr	x0, [sp, #24]
 a50:	ldr	x0, [x0, #32]
 a54:	bl	0 <ext2fs_has_feature_mmp>
 a58:	cmp	w0, #0x0
 a5c:	b.eq	b30 <ext2fs_mmp_stop+0xf4>  // b.none
 a60:	ldr	x0, [sp, #24]
 a64:	ldr	w0, [x0, #16]
 a68:	and	w0, w0, #0x1
 a6c:	cmp	w0, #0x0
 a70:	b.eq	b30 <ext2fs_mmp_stop+0xf4>  // b.none
 a74:	ldr	x0, [sp, #24]
 a78:	ldr	w0, [x0, #16]
 a7c:	and	w0, w0, #0x100000
 a80:	cmp	w0, #0x0
 a84:	b.ne	b30 <ext2fs_mmp_stop+0xf4>  // b.any
 a88:	ldr	x0, [sp, #24]
 a8c:	ldr	x0, [x0, #32]
 a90:	ldr	x1, [x0, #360]
 a94:	ldr	x0, [sp, #24]
 a98:	ldr	x0, [x0, #272]
 a9c:	mov	x2, x0
 aa0:	ldr	x0, [sp, #24]
 aa4:	bl	28 <ext2fs_mmp_read>
 aa8:	str	x0, [sp, #56]
 aac:	ldr	x0, [sp, #56]
 ab0:	cmp	x0, #0x0
 ab4:	b.ne	b38 <ext2fs_mmp_stop+0xfc>  // b.any
 ab8:	ldr	x0, [sp, #24]
 abc:	ldr	x0, [x0, #272]
 ac0:	str	x0, [sp, #48]
 ac4:	ldr	x0, [sp, #24]
 ac8:	ldr	x0, [x0, #280]
 acc:	str	x0, [sp, #40]
 ad0:	mov	x2, #0x400                 	// #1024
 ad4:	ldr	x1, [sp, #40]
 ad8:	ldr	x0, [sp, #48]
 adc:	bl	0 <memcmp>
 ae0:	cmp	w0, #0x0
 ae4:	b.eq	af8 <ext2fs_mmp_stop+0xbc>  // b.none
 ae8:	mov	x0, #0xb78f                	// #46991
 aec:	movk	x0, #0x7f2b, lsl #16
 af0:	str	x0, [sp, #56]
 af4:	b	b3c <ext2fs_mmp_stop+0x100>
 af8:	ldr	x0, [sp, #40]
 afc:	mov	w1, #0x4d50                	// #19792
 b00:	movk	w1, #0xff4d, lsl #16
 b04:	str	w1, [x0, #4]
 b08:	ldr	x0, [sp, #24]
 b0c:	ldr	x0, [x0, #32]
 b10:	ldr	x1, [x0, #360]
 b14:	ldr	x0, [sp, #24]
 b18:	ldr	x0, [x0, #280]
 b1c:	mov	x2, x0
 b20:	ldr	x0, [sp, #24]
 b24:	bl	294 <ext2fs_mmp_write>
 b28:	str	x0, [sp, #56]
 b2c:	b	b3c <ext2fs_mmp_stop+0x100>
 b30:	nop
 b34:	b	b3c <ext2fs_mmp_stop+0x100>
 b38:	nop
 b3c:	ldr	x0, [sp, #24]
 b40:	ldr	w0, [x0, #288]
 b44:	cmp	w0, #0x0
 b48:	b.le	b64 <ext2fs_mmp_stop+0x128>
 b4c:	ldr	x0, [sp, #24]
 b50:	ldr	w0, [x0, #288]
 b54:	bl	0 <close>
 b58:	ldr	x0, [sp, #24]
 b5c:	mov	w1, #0xffffffff            	// #-1
 b60:	str	w1, [x0, #288]
 b64:	ldr	x0, [sp, #56]
 b68:	ldp	x29, x30, [sp], #64
 b6c:	ret

0000000000000b70 <ext2fs_mmp_update2>:
 b70:	stp	x29, x30, [sp, #-80]!
 b74:	mov	x29, sp
 b78:	str	x0, [sp, #24]
 b7c:	str	w1, [sp, #20]
 b80:	str	xzr, [sp, #72]
 b84:	ldr	x0, [sp, #24]
 b88:	ldr	x0, [x0, #32]
 b8c:	bl	0 <ext2fs_has_feature_mmp>
 b90:	cmp	w0, #0x0
 b94:	b.eq	bc0 <ext2fs_mmp_update2+0x50>  // b.none
 b98:	ldr	x0, [sp, #24]
 b9c:	ldr	w0, [x0, #16]
 ba0:	and	w0, w0, #0x1
 ba4:	cmp	w0, #0x0
 ba8:	b.eq	bc0 <ext2fs_mmp_update2+0x50>  // b.none
 bac:	ldr	x0, [sp, #24]
 bb0:	ldr	w0, [x0, #16]
 bb4:	and	w0, w0, #0x100000
 bb8:	cmp	w0, #0x0
 bbc:	b.eq	bc8 <ext2fs_mmp_update2+0x58>  // b.none
 bc0:	mov	x0, #0x0                   	// #0
 bc4:	b	cb8 <ext2fs_mmp_update2+0x148>
 bc8:	add	x0, sp, #0x28
 bcc:	mov	x1, #0x0                   	// #0
 bd0:	bl	0 <gettimeofday>
 bd4:	ldr	w0, [sp, #20]
 bd8:	cmp	w0, #0x0
 bdc:	b.ne	c00 <ext2fs_mmp_update2+0x90>  // b.any
 be0:	ldr	x1, [sp, #40]
 be4:	ldr	x0, [sp, #24]
 be8:	ldr	x0, [x0, #296]
 bec:	sub	x0, x1, x0
 bf0:	cmp	x0, #0x3b
 bf4:	b.gt	c00 <ext2fs_mmp_update2+0x90>
 bf8:	mov	x0, #0x0                   	// #0
 bfc:	b	cb8 <ext2fs_mmp_update2+0x148>
 c00:	ldr	x0, [sp, #24]
 c04:	ldr	x0, [x0, #32]
 c08:	ldr	x0, [x0, #360]
 c0c:	mov	x2, #0x0                   	// #0
 c10:	mov	x1, x0
 c14:	ldr	x0, [sp, #24]
 c18:	bl	28 <ext2fs_mmp_read>
 c1c:	str	x0, [sp, #72]
 c20:	ldr	x0, [sp, #72]
 c24:	cmp	x0, #0x0
 c28:	b.ne	cb0 <ext2fs_mmp_update2+0x140>  // b.any
 c2c:	ldr	x0, [sp, #24]
 c30:	ldr	x0, [x0, #272]
 c34:	str	x0, [sp, #64]
 c38:	ldr	x0, [sp, #24]
 c3c:	ldr	x0, [x0, #280]
 c40:	str	x0, [sp, #56]
 c44:	mov	x2, #0x400                 	// #1024
 c48:	ldr	x1, [sp, #56]
 c4c:	ldr	x0, [sp, #64]
 c50:	bl	0 <memcmp>
 c54:	cmp	w0, #0x0
 c58:	b.eq	c68 <ext2fs_mmp_update2+0xf8>  // b.none
 c5c:	mov	x0, #0xb78f                	// #46991
 c60:	movk	x0, #0x7f2b, lsl #16
 c64:	b	cb8 <ext2fs_mmp_update2+0x148>
 c68:	ldr	x0, [sp, #40]
 c6c:	mov	x1, x0
 c70:	ldr	x0, [sp, #64]
 c74:	str	x1, [x0, #8]
 c78:	ldr	x0, [sp, #64]
 c7c:	mov	w1, #0x4d50                	// #19792
 c80:	movk	w1, #0xe24d, lsl #16
 c84:	str	w1, [x0, #4]
 c88:	ldr	x0, [sp, #24]
 c8c:	ldr	x0, [x0, #32]
 c90:	ldr	x1, [x0, #360]
 c94:	ldr	x0, [sp, #24]
 c98:	ldr	x0, [x0, #272]
 c9c:	mov	x2, x0
 ca0:	ldr	x0, [sp, #24]
 ca4:	bl	294 <ext2fs_mmp_write>
 ca8:	str	x0, [sp, #72]
 cac:	b	cb4 <ext2fs_mmp_update2+0x144>
 cb0:	nop
 cb4:	ldr	x0, [sp, #72]
 cb8:	ldp	x29, x30, [sp], #80
 cbc:	ret

namei.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <follow_link>:
   0:	sub	sp, sp, #0xf0
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #72]
  10:	str	w1, [sp, #68]
  14:	str	w2, [sp, #64]
  18:	str	w3, [sp, #60]
  1c:	str	w4, [sp, #56]
  20:	str	x5, [sp, #48]
  24:	str	x6, [sp, #40]
  28:	str	xzr, [sp, #216]
  2c:	add	x0, sp, #0x58
  30:	mov	x2, x0
  34:	ldr	w1, [sp, #60]
  38:	ldr	x0, [sp, #72]
  3c:	bl	0 <ext2fs_read_inode>
  40:	str	x0, [sp, #224]
  44:	ldr	x0, [sp, #224]
  48:	cmp	x0, #0x0
  4c:	b.eq	58 <follow_link+0x58>  // b.none
  50:	ldr	x0, [sp, #224]
  54:	b	244 <follow_link+0x244>
  58:	ldrh	w0, [sp, #88]
  5c:	and	w0, w0, #0xf000
  60:	cmp	w0, #0xa, lsl #12
  64:	b.eq	7c <follow_link+0x7c>  // b.none
  68:	ldr	x0, [sp, #40]
  6c:	ldr	w1, [sp, #60]
  70:	str	w1, [x0]
  74:	mov	x0, #0x0                   	// #0
  78:	b	244 <follow_link+0x244>
  7c:	ldr	w0, [sp, #56]
  80:	add	w1, w0, #0x1
  84:	str	w1, [sp, #56]
  88:	cmp	w0, #0x7
  8c:	b.le	9c <follow_link+0x9c>
  90:	mov	x0, #0xb740                	// #46912
  94:	movk	x0, #0x7f2b, lsl #16
  98:	b	244 <follow_link+0x244>
  9c:	add	x0, sp, #0x58
  a0:	bl	0 <ext2fs_is_fast_symlink>
  a4:	cmp	w0, #0x0
  a8:	b.eq	bc <follow_link+0xbc>  // b.none
  ac:	add	x0, sp, #0x58
  b0:	add	x0, x0, #0x28
  b4:	str	x0, [sp, #232]
  b8:	b	1f4 <follow_link+0x1f4>
  bc:	ldr	w0, [sp, #120]
  c0:	and	w0, w0, #0x10000000
  c4:	cmp	w0, #0x0
  c8:	b.eq	140 <follow_link+0x140>  // b.none
  cc:	ldr	w0, [sp, #92]
  d0:	mov	w0, w0
  d4:	add	x1, sp, #0xd8
  d8:	bl	0 <ext2fs_get_memzero>
  dc:	str	x0, [sp, #224]
  e0:	ldr	x0, [sp, #224]
  e4:	cmp	x0, #0x0
  e8:	b.eq	f4 <follow_link+0xf4>  // b.none
  ec:	ldr	x0, [sp, #224]
  f0:	b	244 <follow_link+0x244>
  f4:	ldr	x1, [sp, #216]
  f8:	add	x0, sp, #0x58
  fc:	mov	x4, #0x0                   	// #0
 100:	mov	x3, x1
 104:	mov	x2, x0
 108:	ldr	w1, [sp, #60]
 10c:	ldr	x0, [sp, #72]
 110:	bl	0 <ext2fs_inline_data_get>
 114:	str	x0, [sp, #224]
 118:	ldr	x0, [sp, #224]
 11c:	cmp	x0, #0x0
 120:	b.eq	134 <follow_link+0x134>  // b.none
 124:	add	x0, sp, #0xd8
 128:	bl	0 <ext2fs_free_mem>
 12c:	ldr	x0, [sp, #224]
 130:	b	244 <follow_link+0x244>
 134:	ldr	x0, [sp, #216]
 138:	str	x0, [sp, #232]
 13c:	b	1f4 <follow_link+0x1f4>
 140:	add	x1, sp, #0x50
 144:	add	x0, sp, #0x58
 148:	mov	x7, x1
 14c:	mov	x6, #0x0                   	// #0
 150:	mov	x5, #0x0                   	// #0
 154:	mov	w4, #0x0                   	// #0
 158:	mov	x3, #0x0                   	// #0
 15c:	mov	x2, x0
 160:	ldr	w1, [sp, #60]
 164:	ldr	x0, [sp, #72]
 168:	bl	0 <ext2fs_bmap2>
 16c:	str	x0, [sp, #224]
 170:	ldr	x0, [sp, #224]
 174:	cmp	x0, #0x0
 178:	b.eq	184 <follow_link+0x184>  // b.none
 17c:	ldr	x0, [sp, #224]
 180:	b	244 <follow_link+0x244>
 184:	ldr	x0, [sp, #72]
 188:	ldr	w0, [x0, #40]
 18c:	mov	w0, w0
 190:	add	x1, sp, #0xd8
 194:	bl	0 <ext2fs_get_mem>
 198:	str	x0, [sp, #224]
 19c:	ldr	x0, [sp, #224]
 1a0:	cmp	x0, #0x0
 1a4:	b.eq	1b0 <follow_link+0x1b0>  // b.none
 1a8:	ldr	x0, [sp, #224]
 1ac:	b	244 <follow_link+0x244>
 1b0:	ldr	x0, [sp, #72]
 1b4:	ldr	x0, [x0, #8]
 1b8:	ldr	x1, [sp, #80]
 1bc:	ldr	x2, [sp, #216]
 1c0:	mov	x3, x2
 1c4:	mov	w2, #0x1                   	// #1
 1c8:	bl	0 <io_channel_read_blk64>
 1cc:	str	x0, [sp, #224]
 1d0:	ldr	x0, [sp, #224]
 1d4:	cmp	x0, #0x0
 1d8:	b.eq	1ec <follow_link+0x1ec>  // b.none
 1dc:	add	x0, sp, #0xd8
 1e0:	bl	0 <ext2fs_free_mem>
 1e4:	ldr	x0, [sp, #224]
 1e8:	b	244 <follow_link+0x244>
 1ec:	ldr	x0, [sp, #216]
 1f0:	str	x0, [sp, #232]
 1f4:	ldr	w0, [sp, #92]
 1f8:	mov	w1, w0
 1fc:	ldr	x0, [sp, #40]
 200:	str	x0, [sp]
 204:	ldr	x7, [sp, #48]
 208:	ldr	w6, [sp, #56]
 20c:	mov	w5, #0x1                   	// #1
 210:	mov	x4, x1
 214:	ldr	x3, [sp, #232]
 218:	ldr	w2, [sp, #64]
 21c:	ldr	w1, [sp, #68]
 220:	ldr	x0, [sp, #72]
 224:	bl	3cc <open_namei>
 228:	str	x0, [sp, #224]
 22c:	ldr	x0, [sp, #216]
 230:	cmp	x0, #0x0
 234:	b.eq	240 <follow_link+0x240>  // b.none
 238:	add	x0, sp, #0xd8
 23c:	bl	0 <ext2fs_free_mem>
 240:	ldr	x0, [sp, #224]
 244:	ldp	x29, x30, [sp, #16]
 248:	add	sp, sp, #0xf0
 24c:	ret

0000000000000250 <dir_namei>:
 250:	stp	x29, x30, [sp, #-96]!
 254:	mov	x29, sp
 258:	str	x0, [sp, #56]
 25c:	str	w1, [sp, #52]
 260:	str	w2, [sp, #48]
 264:	str	x3, [sp, #40]
 268:	str	w4, [sp, #36]
 26c:	str	w5, [sp, #32]
 270:	str	x6, [sp, #24]
 274:	str	x7, [sp, #16]
 278:	ldr	x0, [sp, #40]
 27c:	ldrb	w0, [x0]
 280:	strb	w0, [sp, #91]
 284:	ldrb	w0, [sp, #91]
 288:	cmp	w0, #0x2f
 28c:	b.ne	2b0 <dir_namei+0x60>  // b.any
 290:	ldr	w0, [sp, #52]
 294:	str	w0, [sp, #48]
 298:	ldr	x0, [sp, #40]
 29c:	add	x0, x0, #0x1
 2a0:	str	x0, [sp, #40]
 2a4:	ldr	w0, [sp, #36]
 2a8:	sub	w0, w0, #0x1
 2ac:	str	w0, [sp, #36]
 2b0:	ldr	x0, [sp, #40]
 2b4:	str	x0, [sp, #80]
 2b8:	str	wzr, [sp, #92]
 2bc:	b	2ec <dir_namei+0x9c>
 2c0:	ldr	x0, [sp, #40]
 2c4:	add	x1, x0, #0x1
 2c8:	str	x1, [sp, #40]
 2cc:	ldrb	w0, [x0]
 2d0:	strb	w0, [sp, #91]
 2d4:	ldrb	w0, [sp, #91]
 2d8:	cmp	w0, #0x2f
 2dc:	b.eq	308 <dir_namei+0xb8>  // b.none
 2e0:	ldr	w0, [sp, #92]
 2e4:	add	w0, w0, #0x1
 2e8:	str	w0, [sp, #92]
 2ec:	ldr	w0, [sp, #36]
 2f0:	sub	w0, w0, #0x1
 2f4:	str	w0, [sp, #36]
 2f8:	ldr	w0, [sp, #36]
 2fc:	cmp	w0, #0x0
 300:	b.ge	2c0 <dir_namei+0x70>  // b.tcont
 304:	b	30c <dir_namei+0xbc>
 308:	nop
 30c:	ldr	w0, [sp, #36]
 310:	cmp	w0, #0x0
 314:	b.lt	398 <dir_namei+0x148>  // b.tstop
 318:	ldr	w0, [sp, #48]
 31c:	add	x1, sp, #0x44
 320:	mov	x5, x1
 324:	ldr	x4, [sp, #24]
 328:	ldr	w3, [sp, #92]
 32c:	ldr	x2, [sp, #80]
 330:	mov	w1, w0
 334:	ldr	x0, [sp, #56]
 338:	bl	0 <ext2fs_lookup>
 33c:	str	x0, [sp, #72]
 340:	ldr	x0, [sp, #72]
 344:	cmp	x0, #0x0
 348:	b.eq	354 <dir_namei+0x104>  // b.none
 34c:	ldr	x0, [sp, #72]
 350:	b	3c4 <dir_namei+0x174>
 354:	ldr	w0, [sp, #48]
 358:	ldr	w1, [sp, #68]
 35c:	add	x2, sp, #0x30
 360:	mov	x6, x2
 364:	ldr	x5, [sp, #24]
 368:	ldr	w4, [sp, #32]
 36c:	mov	w3, w1
 370:	mov	w2, w0
 374:	ldr	w1, [sp, #52]
 378:	ldr	x0, [sp, #56]
 37c:	bl	0 <follow_link>
 380:	str	x0, [sp, #72]
 384:	ldr	x0, [sp, #72]
 388:	cmp	x0, #0x0
 38c:	b.eq	2b0 <dir_namei+0x60>  // b.none
 390:	ldr	x0, [sp, #72]
 394:	b	3c4 <dir_namei+0x174>
 398:	nop
 39c:	ldr	x0, [sp, #16]
 3a0:	ldr	x1, [sp, #80]
 3a4:	str	x1, [x0]
 3a8:	ldr	x0, [sp, #96]
 3ac:	ldr	w1, [sp, #92]
 3b0:	str	w1, [x0]
 3b4:	ldr	w1, [sp, #48]
 3b8:	ldr	x0, [sp, #104]
 3bc:	str	w1, [x0]
 3c0:	mov	x0, #0x0                   	// #0
 3c4:	ldp	x29, x30, [sp], #96
 3c8:	ret

00000000000003cc <open_namei>:
 3cc:	sub	sp, sp, #0x70
 3d0:	stp	x29, x30, [sp, #16]
 3d4:	add	x29, sp, #0x10
 3d8:	str	x0, [sp, #72]
 3dc:	str	w1, [sp, #68]
 3e0:	str	w2, [sp, #64]
 3e4:	str	x3, [sp, #56]
 3e8:	str	x4, [sp, #48]
 3ec:	str	w5, [sp, #44]
 3f0:	str	w6, [sp, #40]
 3f4:	str	x7, [sp, #32]
 3f8:	ldr	x0, [sp, #48]
 3fc:	mov	w2, w0
 400:	add	x1, sp, #0x60
 404:	add	x0, sp, #0x58
 408:	str	x0, [sp, #8]
 40c:	add	x0, sp, #0x5c
 410:	str	x0, [sp]
 414:	mov	x7, x1
 418:	ldr	x6, [sp, #32]
 41c:	ldr	w5, [sp, #40]
 420:	mov	w4, w2
 424:	ldr	x3, [sp, #56]
 428:	ldr	w2, [sp, #64]
 42c:	ldr	w1, [sp, #68]
 430:	ldr	x0, [sp, #72]
 434:	bl	250 <dir_namei>
 438:	str	x0, [sp, #104]
 43c:	ldr	x0, [sp, #104]
 440:	cmp	x0, #0x0
 444:	b.eq	450 <open_namei+0x84>  // b.none
 448:	ldr	x0, [sp, #104]
 44c:	b	514 <open_namei+0x148>
 450:	ldr	w0, [sp, #92]
 454:	cmp	w0, #0x0
 458:	b.ne	470 <open_namei+0xa4>  // b.any
 45c:	ldr	w1, [sp, #88]
 460:	ldr	x0, [sp, #112]
 464:	str	w1, [x0]
 468:	mov	x0, #0x0                   	// #0
 46c:	b	514 <open_namei+0x148>
 470:	ldr	w0, [sp, #88]
 474:	ldr	x1, [sp, #96]
 478:	ldr	w2, [sp, #92]
 47c:	add	x3, sp, #0x54
 480:	mov	x5, x3
 484:	ldr	x4, [sp, #32]
 488:	mov	w3, w2
 48c:	mov	x2, x1
 490:	mov	w1, w0
 494:	ldr	x0, [sp, #72]
 498:	bl	0 <ext2fs_lookup>
 49c:	str	x0, [sp, #104]
 4a0:	ldr	x0, [sp, #104]
 4a4:	cmp	x0, #0x0
 4a8:	b.eq	4b4 <open_namei+0xe8>  // b.none
 4ac:	ldr	x0, [sp, #104]
 4b0:	b	514 <open_namei+0x148>
 4b4:	ldr	w0, [sp, #44]
 4b8:	cmp	w0, #0x0
 4bc:	b.eq	504 <open_namei+0x138>  // b.none
 4c0:	ldr	w0, [sp, #88]
 4c4:	ldr	w1, [sp, #84]
 4c8:	add	x2, sp, #0x54
 4cc:	mov	x6, x2
 4d0:	ldr	x5, [sp, #32]
 4d4:	ldr	w4, [sp, #40]
 4d8:	mov	w3, w1
 4dc:	mov	w2, w0
 4e0:	ldr	w1, [sp, #68]
 4e4:	ldr	x0, [sp, #72]
 4e8:	bl	0 <follow_link>
 4ec:	str	x0, [sp, #104]
 4f0:	ldr	x0, [sp, #104]
 4f4:	cmp	x0, #0x0
 4f8:	b.eq	504 <open_namei+0x138>  // b.none
 4fc:	ldr	x0, [sp, #104]
 500:	b	514 <open_namei+0x148>
 504:	ldr	w1, [sp, #84]
 508:	ldr	x0, [sp, #112]
 50c:	str	w1, [x0]
 510:	mov	x0, #0x0                   	// #0
 514:	ldp	x29, x30, [sp, #16]
 518:	add	sp, sp, #0x70
 51c:	ret

0000000000000520 <ext2fs_namei>:
 520:	sub	sp, sp, #0x50
 524:	stp	x29, x30, [sp, #16]
 528:	add	x29, sp, #0x10
 52c:	str	x0, [sp, #56]
 530:	str	w1, [sp, #52]
 534:	str	w2, [sp, #48]
 538:	str	x3, [sp, #40]
 53c:	str	x4, [sp, #32]
 540:	ldr	x0, [sp, #56]
 544:	ldr	x1, [x0]
 548:	mov	x0, #0xb701                	// #46849
 54c:	movk	x0, #0x7f2b, lsl #16
 550:	cmp	x1, x0
 554:	b.eq	564 <ext2fs_namei+0x44>  // b.none
 558:	mov	x0, #0xb701                	// #46849
 55c:	movk	x0, #0x7f2b, lsl #16
 560:	b	5dc <ext2fs_namei+0xbc>
 564:	ldr	x0, [sp, #56]
 568:	ldr	w0, [x0, #40]
 56c:	mov	w0, w0
 570:	add	x1, sp, #0x40
 574:	bl	0 <ext2fs_get_mem>
 578:	str	x0, [sp, #72]
 57c:	ldr	x0, [sp, #72]
 580:	cmp	x0, #0x0
 584:	b.eq	590 <ext2fs_namei+0x70>  // b.none
 588:	ldr	x0, [sp, #72]
 58c:	b	5dc <ext2fs_namei+0xbc>
 590:	ldr	x0, [sp, #40]
 594:	bl	0 <strlen>
 598:	mov	x2, x0
 59c:	ldr	x1, [sp, #64]
 5a0:	ldr	x0, [sp, #32]
 5a4:	str	x0, [sp]
 5a8:	mov	x7, x1
 5ac:	mov	w6, #0x0                   	// #0
 5b0:	mov	w5, #0x0                   	// #0
 5b4:	mov	x4, x2
 5b8:	ldr	x3, [sp, #40]
 5bc:	ldr	w2, [sp, #48]
 5c0:	ldr	w1, [sp, #52]
 5c4:	ldr	x0, [sp, #56]
 5c8:	bl	3cc <open_namei>
 5cc:	str	x0, [sp, #72]
 5d0:	add	x0, sp, #0x40
 5d4:	bl	0 <ext2fs_free_mem>
 5d8:	ldr	x0, [sp, #72]
 5dc:	ldp	x29, x30, [sp, #16]
 5e0:	add	sp, sp, #0x50
 5e4:	ret

00000000000005e8 <ext2fs_namei_follow>:
 5e8:	sub	sp, sp, #0x50
 5ec:	stp	x29, x30, [sp, #16]
 5f0:	add	x29, sp, #0x10
 5f4:	str	x0, [sp, #56]
 5f8:	str	w1, [sp, #52]
 5fc:	str	w2, [sp, #48]
 600:	str	x3, [sp, #40]
 604:	str	x4, [sp, #32]
 608:	ldr	x0, [sp, #56]
 60c:	ldr	x1, [x0]
 610:	mov	x0, #0xb701                	// #46849
 614:	movk	x0, #0x7f2b, lsl #16
 618:	cmp	x1, x0
 61c:	b.eq	62c <ext2fs_namei_follow+0x44>  // b.none
 620:	mov	x0, #0xb701                	// #46849
 624:	movk	x0, #0x7f2b, lsl #16
 628:	b	6a4 <ext2fs_namei_follow+0xbc>
 62c:	ldr	x0, [sp, #56]
 630:	ldr	w0, [x0, #40]
 634:	mov	w0, w0
 638:	add	x1, sp, #0x40
 63c:	bl	0 <ext2fs_get_mem>
 640:	str	x0, [sp, #72]
 644:	ldr	x0, [sp, #72]
 648:	cmp	x0, #0x0
 64c:	b.eq	658 <ext2fs_namei_follow+0x70>  // b.none
 650:	ldr	x0, [sp, #72]
 654:	b	6a4 <ext2fs_namei_follow+0xbc>
 658:	ldr	x0, [sp, #40]
 65c:	bl	0 <strlen>
 660:	mov	x2, x0
 664:	ldr	x1, [sp, #64]
 668:	ldr	x0, [sp, #32]
 66c:	str	x0, [sp]
 670:	mov	x7, x1
 674:	mov	w6, #0x0                   	// #0
 678:	mov	w5, #0x1                   	// #1
 67c:	mov	x4, x2
 680:	ldr	x3, [sp, #40]
 684:	ldr	w2, [sp, #48]
 688:	ldr	w1, [sp, #52]
 68c:	ldr	x0, [sp, #56]
 690:	bl	3cc <open_namei>
 694:	str	x0, [sp, #72]
 698:	add	x0, sp, #0x40
 69c:	bl	0 <ext2fs_free_mem>
 6a0:	ldr	x0, [sp, #72]
 6a4:	ldp	x29, x30, [sp, #16]
 6a8:	add	sp, sp, #0x50
 6ac:	ret

00000000000006b0 <ext2fs_follow_link>:
 6b0:	stp	x29, x30, [sp, #-64]!
 6b4:	mov	x29, sp
 6b8:	str	x0, [sp, #40]
 6bc:	str	w1, [sp, #36]
 6c0:	str	w2, [sp, #32]
 6c4:	str	w3, [sp, #28]
 6c8:	str	x4, [sp, #16]
 6cc:	ldr	x0, [sp, #40]
 6d0:	ldr	x1, [x0]
 6d4:	mov	x0, #0xb701                	// #46849
 6d8:	movk	x0, #0x7f2b, lsl #16
 6dc:	cmp	x1, x0
 6e0:	b.eq	6f0 <ext2fs_follow_link+0x40>  // b.none
 6e4:	mov	x0, #0xb701                	// #46849
 6e8:	movk	x0, #0x7f2b, lsl #16
 6ec:	b	750 <ext2fs_follow_link+0xa0>
 6f0:	ldr	x0, [sp, #40]
 6f4:	ldr	w0, [x0, #40]
 6f8:	mov	w0, w0
 6fc:	add	x1, sp, #0x30
 700:	bl	0 <ext2fs_get_mem>
 704:	str	x0, [sp, #56]
 708:	ldr	x0, [sp, #56]
 70c:	cmp	x0, #0x0
 710:	b.eq	71c <ext2fs_follow_link+0x6c>  // b.none
 714:	ldr	x0, [sp, #56]
 718:	b	750 <ext2fs_follow_link+0xa0>
 71c:	ldr	x0, [sp, #48]
 720:	ldr	x6, [sp, #16]
 724:	mov	x5, x0
 728:	mov	w4, #0x0                   	// #0
 72c:	ldr	w3, [sp, #28]
 730:	ldr	w2, [sp, #32]
 734:	ldr	w1, [sp, #36]
 738:	ldr	x0, [sp, #40]
 73c:	bl	0 <follow_link>
 740:	str	x0, [sp, #56]
 744:	add	x0, sp, #0x30
 748:	bl	0 <ext2fs_free_mem>
 74c:	ldr	x0, [sp, #56]
 750:	ldp	x29, x30, [sp], #64
 754:	ret

native.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_native_flag>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

newdir.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_metadata_csum>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x400
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_filetype>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #96]
  38:	and	w0, w0, #0x2
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <ext2fs_new_dir_block>:
  50:	stp	x29, x30, [sp, #-96]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	w1, [sp, #36]
  60:	str	w2, [sp, #32]
  64:	str	x3, [sp, #24]
  68:	str	xzr, [sp, #80]
  6c:	str	wzr, [sp, #92]
  70:	str	wzr, [sp, #88]
  74:	ldr	x0, [sp, #40]
  78:	ldr	x1, [x0]
  7c:	mov	x0, #0xb701                	// #46849
  80:	movk	x0, #0x7f2b, lsl #16
  84:	cmp	x1, x0
  88:	b.eq	98 <ext2fs_new_dir_block+0x48>  // b.none
  8c:	mov	x0, #0xb701                	// #46849
  90:	movk	x0, #0x7f2b, lsl #16
  94:	b	290 <ext2fs_new_dir_block+0x240>
  98:	ldr	x0, [sp, #40]
  9c:	ldr	w0, [x0, #40]
  a0:	mov	w0, w0
  a4:	add	x1, sp, #0x30
  a8:	bl	0 <ext2fs_get_mem>
  ac:	str	x0, [sp, #72]
  b0:	ldr	x0, [sp, #72]
  b4:	cmp	x0, #0x0
  b8:	b.eq	c4 <ext2fs_new_dir_block+0x74>  // b.none
  bc:	ldr	x0, [sp, #72]
  c0:	b	290 <ext2fs_new_dir_block+0x240>
  c4:	ldr	x3, [sp, #48]
  c8:	ldr	x0, [sp, #40]
  cc:	ldr	w0, [x0, #40]
  d0:	mov	w0, w0
  d4:	mov	x2, x0
  d8:	mov	w1, #0x0                   	// #0
  dc:	mov	x0, x3
  e0:	bl	0 <memset>
  e4:	ldr	x0, [sp, #48]
  e8:	str	x0, [sp, #80]
  ec:	ldr	x0, [sp, #40]
  f0:	ldr	x0, [x0, #32]
  f4:	bl	0 <ext2fs_has_feature_metadata_csum>
  f8:	cmp	w0, #0x0
  fc:	b.eq	108 <ext2fs_new_dir_block+0xb8>  // b.none
 100:	mov	w0, #0xc                   	// #12
 104:	str	w0, [sp, #88]
 108:	ldr	x0, [sp, #40]
 10c:	ldr	w1, [x0, #40]
 110:	ldr	w0, [sp, #88]
 114:	sub	w0, w1, w0
 118:	ldr	x2, [sp, #80]
 11c:	mov	w1, w0
 120:	ldr	x0, [sp, #40]
 124:	bl	0 <ext2fs_set_rec_len>
 128:	str	x0, [sp, #72]
 12c:	ldr	x0, [sp, #72]
 130:	cmp	x0, #0x0
 134:	b.eq	148 <ext2fs_new_dir_block+0xf8>  // b.none
 138:	add	x0, sp, #0x30
 13c:	bl	0 <ext2fs_free_mem>
 140:	ldr	x0, [sp, #72]
 144:	b	290 <ext2fs_new_dir_block+0x240>
 148:	ldr	w0, [sp, #36]
 14c:	cmp	w0, #0x0
 150:	b.eq	24c <ext2fs_new_dir_block+0x1fc>  // b.none
 154:	ldr	x0, [sp, #40]
 158:	ldr	x0, [x0, #32]
 15c:	bl	28 <ext2fs_has_feature_filetype>
 160:	cmp	w0, #0x0
 164:	b.eq	170 <ext2fs_new_dir_block+0x120>  // b.none
 168:	mov	w0, #0x2                   	// #2
 16c:	str	w0, [sp, #92]
 170:	ldr	x0, [sp, #80]
 174:	ldr	w1, [sp, #36]
 178:	str	w1, [x0]
 17c:	mov	w1, #0x1                   	// #1
 180:	ldr	x0, [sp, #80]
 184:	bl	0 <ext2fs_dirent_set_name_len>
 188:	ldr	w1, [sp, #92]
 18c:	ldr	x0, [sp, #80]
 190:	bl	0 <ext2fs_dirent_set_file_type>
 194:	ldr	x0, [sp, #80]
 198:	mov	w1, #0x2e                  	// #46
 19c:	strb	w1, [x0, #8]
 1a0:	ldr	x0, [sp, #40]
 1a4:	ldr	w1, [x0, #40]
 1a8:	ldr	w0, [sp, #88]
 1ac:	sub	w0, w1, w0
 1b0:	sub	w0, w0, #0xc
 1b4:	str	w0, [sp, #68]
 1b8:	ldr	x0, [sp, #80]
 1bc:	mov	w1, #0xc                   	// #12
 1c0:	strh	w1, [x0, #4]
 1c4:	ldr	x1, [sp, #48]
 1c8:	ldr	x0, [sp, #80]
 1cc:	ldrh	w0, [x0, #4]
 1d0:	and	x0, x0, #0xffff
 1d4:	add	x0, x1, x0
 1d8:	str	x0, [sp, #80]
 1dc:	ldr	w0, [sp, #68]
 1e0:	ldr	x2, [sp, #80]
 1e4:	mov	w1, w0
 1e8:	ldr	x0, [sp, #40]
 1ec:	bl	0 <ext2fs_set_rec_len>
 1f0:	str	x0, [sp, #72]
 1f4:	ldr	x0, [sp, #72]
 1f8:	cmp	x0, #0x0
 1fc:	b.eq	210 <ext2fs_new_dir_block+0x1c0>  // b.none
 200:	add	x0, sp, #0x30
 204:	bl	0 <ext2fs_free_mem>
 208:	ldr	x0, [sp, #72]
 20c:	b	290 <ext2fs_new_dir_block+0x240>
 210:	ldr	x0, [sp, #80]
 214:	ldr	w1, [sp, #32]
 218:	str	w1, [x0]
 21c:	mov	w1, #0x2                   	// #2
 220:	ldr	x0, [sp, #80]
 224:	bl	0 <ext2fs_dirent_set_name_len>
 228:	ldr	w1, [sp, #92]
 22c:	ldr	x0, [sp, #80]
 230:	bl	0 <ext2fs_dirent_set_file_type>
 234:	ldr	x0, [sp, #80]
 238:	mov	w1, #0x2e                  	// #46
 23c:	strb	w1, [x0, #8]
 240:	ldr	x0, [sp, #80]
 244:	mov	w1, #0x2e                  	// #46
 248:	strb	w1, [x0, #9]
 24c:	ldr	w0, [sp, #88]
 250:	cmp	w0, #0x0
 254:	b.eq	280 <ext2fs_new_dir_block+0x230>  // b.none
 258:	ldr	x1, [sp, #48]
 25c:	ldr	x0, [sp, #40]
 260:	ldr	w0, [x0, #40]
 264:	mov	w0, w0
 268:	sub	x0, x0, #0xc
 26c:	add	x0, x1, x0
 270:	str	x0, [sp, #56]
 274:	ldr	x1, [sp, #56]
 278:	ldr	x0, [sp, #40]
 27c:	bl	0 <ext2fs_initialize_dirent_tail>
 280:	ldr	x1, [sp, #48]
 284:	ldr	x0, [sp, #24]
 288:	str	x1, [x0]
 28c:	mov	x0, #0x0                   	// #0
 290:	ldp	x29, x30, [sp], #96
 294:	ret

0000000000000298 <ext2fs_new_dir_inline_data>:
 298:	stp	x29, x30, [sp, #-80]!
 29c:	mov	x29, sp
 2a0:	str	x0, [sp, #40]
 2a4:	str	w1, [sp, #36]
 2a8:	str	w2, [sp, #32]
 2ac:	str	x3, [sp, #24]
 2b0:	str	xzr, [sp, #72]
 2b4:	ldr	x0, [sp, #40]
 2b8:	ldr	x1, [x0]
 2bc:	mov	x0, #0xb701                	// #46849
 2c0:	movk	x0, #0x7f2b, lsl #16
 2c4:	cmp	x1, x0
 2c8:	b.eq	2d8 <ext2fs_new_dir_inline_data+0x40>  // b.none
 2cc:	mov	x0, #0xb701                	// #46849
 2d0:	movk	x0, #0x7f2b, lsl #16
 2d4:	b	328 <ext2fs_new_dir_inline_data+0x90>
 2d8:	ldr	x0, [sp, #24]
 2dc:	ldr	w1, [sp, #32]
 2e0:	str	w1, [x0]
 2e4:	ldr	x0, [sp, #24]
 2e8:	add	x0, x0, #0x4
 2ec:	str	x0, [sp, #72]
 2f0:	ldr	x0, [sp, #72]
 2f4:	str	wzr, [x0]
 2f8:	mov	w0, #0x38                  	// #56
 2fc:	str	w0, [sp, #68]
 300:	ldr	w0, [sp, #68]
 304:	ldr	x2, [sp, #72]
 308:	mov	w1, w0
 30c:	ldr	x0, [sp, #40]
 310:	bl	0 <ext2fs_set_rec_len>
 314:	str	x0, [sp, #56]
 318:	ldr	x0, [sp, #56]
 31c:	cmp	x0, #0x0
 320:	nop
 324:	ldr	x0, [sp, #56]
 328:	ldp	x29, x30, [sp], #80
 32c:	ret

nls_utf8.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <utf8clen>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldrb	w0, [x0]
  10:	strb	w0, [sp, #31]
  14:	ldrb	w0, [sp, #31]
  18:	cmp	w0, #0xbf
  1c:	b.ls	28 <utf8clen+0x28>  // b.plast
  20:	mov	w0, #0x2                   	// #2
  24:	b	2c <utf8clen+0x2c>
  28:	mov	w0, #0x1                   	// #1
  2c:	ldrb	w1, [sp, #31]
  30:	cmp	w1, #0xdf
  34:	cset	w1, hi  // hi = pmore
  38:	and	w1, w1, #0xff
  3c:	add	w0, w0, w1
  40:	ldrb	w1, [sp, #31]
  44:	cmp	w1, #0xef
  48:	cset	w1, hi  // hi = pmore
  4c:	and	w1, w1, #0xff
  50:	add	w0, w0, w1
  54:	add	sp, sp, #0x20
  58:	ret

000000000000005c <utf8decode3>:
  5c:	sub	sp, sp, #0x20
  60:	str	x0, [sp, #8]
  64:	ldr	x0, [sp, #8]
  68:	add	x1, x0, #0x1
  6c:	str	x1, [sp, #8]
  70:	ldrb	w0, [x0]
  74:	and	w0, w0, #0xf
  78:	str	w0, [sp, #28]
  7c:	ldr	w0, [sp, #28]
  80:	lsl	w0, w0, #6
  84:	str	w0, [sp, #28]
  88:	ldr	x0, [sp, #8]
  8c:	add	x1, x0, #0x1
  90:	str	x1, [sp, #8]
  94:	ldrb	w0, [x0]
  98:	and	w0, w0, #0x3f
  9c:	mov	w1, w0
  a0:	ldr	w0, [sp, #28]
  a4:	orr	w0, w0, w1
  a8:	str	w0, [sp, #28]
  ac:	ldr	w0, [sp, #28]
  b0:	lsl	w0, w0, #6
  b4:	str	w0, [sp, #28]
  b8:	ldr	x0, [sp, #8]
  bc:	add	x1, x0, #0x1
  c0:	str	x1, [sp, #8]
  c4:	ldrb	w0, [x0]
  c8:	and	w0, w0, #0x3f
  cc:	mov	w1, w0
  d0:	ldr	w0, [sp, #28]
  d4:	orr	w0, w0, w1
  d8:	str	w0, [sp, #28]
  dc:	ldr	w0, [sp, #28]
  e0:	add	sp, sp, #0x20
  e4:	ret

00000000000000e8 <utf8encode3>:
  e8:	sub	sp, sp, #0x10
  ec:	str	x0, [sp, #8]
  f0:	str	w1, [sp, #4]
  f4:	ldr	w0, [sp, #4]
  f8:	and	w0, w0, #0xff
  fc:	and	w0, w0, #0x3f
 100:	and	w1, w0, #0xff
 104:	ldr	x0, [sp, #8]
 108:	add	x0, x0, #0x2
 10c:	orr	w1, w1, #0xffffff80
 110:	and	w1, w1, #0xff
 114:	strb	w1, [x0]
 118:	ldr	w0, [sp, #4]
 11c:	lsr	w0, w0, #6
 120:	str	w0, [sp, #4]
 124:	ldr	w0, [sp, #4]
 128:	and	w0, w0, #0xff
 12c:	and	w0, w0, #0x3f
 130:	and	w1, w0, #0xff
 134:	ldr	x0, [sp, #8]
 138:	add	x0, x0, #0x1
 13c:	orr	w1, w1, #0xffffff80
 140:	and	w1, w1, #0xff
 144:	strb	w1, [x0]
 148:	ldr	w0, [sp, #4]
 14c:	lsr	w0, w0, #6
 150:	str	w0, [sp, #4]
 154:	ldr	w0, [sp, #4]
 158:	and	w0, w0, #0xff
 15c:	orr	w0, w0, #0xffffffe0
 160:	and	w1, w0, #0xff
 164:	ldr	x0, [sp, #8]
 168:	strb	w1, [x0]
 16c:	mov	w0, #0x3                   	// #3
 170:	add	sp, sp, #0x10
 174:	ret

0000000000000178 <utf8hangul>:
 178:	stp	x29, x30, [sp, #-64]!
 17c:	mov	x29, sp
 180:	str	x0, [sp, #24]
 184:	str	x1, [sp, #16]
 188:	ldr	x0, [sp, #24]
 18c:	bl	5c <utf8decode3>
 190:	mov	w1, w0
 194:	mov	w0, #0xffff5400            	// #-44032
 198:	add	w0, w1, w0
 19c:	str	w0, [sp, #52]
 1a0:	ldr	w1, [sp, #52]
 1a4:	mov	w0, #0x5c4d                	// #23629
 1a8:	movk	w0, #0xdee9, lsl #16
 1ac:	umull	x0, w1, w0
 1b0:	lsr	x0, x0, #32
 1b4:	lsr	w0, w0, #9
 1b8:	str	w0, [sp, #48]
 1bc:	ldr	w1, [sp, #52]
 1c0:	mov	w0, #0x5c4d                	// #23629
 1c4:	movk	w0, #0xdee9, lsl #16
 1c8:	umull	x0, w1, w0
 1cc:	lsr	x0, x0, #32
 1d0:	lsr	w0, w0, #9
 1d4:	mov	w2, #0x24c                 	// #588
 1d8:	mul	w0, w0, w2
 1dc:	sub	w0, w1, w0
 1e0:	lsr	w1, w0, #2
 1e4:	mov	w0, #0x4925                	// #18725
 1e8:	movk	w0, #0x2492, lsl #16
 1ec:	umull	x0, w1, w0
 1f0:	lsr	x0, x0, #32
 1f4:	str	w0, [sp, #44]
 1f8:	ldr	w1, [sp, #52]
 1fc:	lsr	w2, w1, #2
 200:	mov	w0, #0x4925                	// #18725
 204:	movk	w0, #0x2492, lsl #16
 208:	umull	x0, w2, w0
 20c:	lsr	x0, x0, #32
 210:	mov	w2, w0
 214:	mov	w0, w2
 218:	lsl	w0, w0, #3
 21c:	sub	w0, w0, w2
 220:	lsl	w0, w0, #2
 224:	sub	w0, w1, w0
 228:	str	w0, [sp, #40]
 22c:	ldr	x0, [sp, #16]
 230:	str	x0, [sp, #56]
 234:	ldr	x0, [sp, #56]
 238:	mov	w1, #0x2                   	// #2
 23c:	strb	w1, [x0]
 240:	ldr	x0, [sp, #56]
 244:	add	x0, x0, #0x1
 248:	mov	w1, #0xffffffff            	// #-1
 24c:	strb	w1, [x0]
 250:	ldr	x0, [sp, #56]
 254:	add	x0, x0, #0x2
 258:	str	x0, [sp, #56]
 25c:	ldr	w1, [sp, #48]
 260:	mov	w0, #0x1100                	// #4352
 264:	add	w0, w1, w0
 268:	mov	w1, w0
 26c:	ldr	x0, [sp, #56]
 270:	bl	e8 <utf8encode3>
 274:	sxtw	x0, w0
 278:	ldr	x1, [sp, #56]
 27c:	add	x0, x1, x0
 280:	str	x0, [sp, #56]
 284:	ldr	w1, [sp, #44]
 288:	mov	w0, #0x1161                	// #4449
 28c:	add	w0, w1, w0
 290:	mov	w1, w0
 294:	ldr	x0, [sp, #56]
 298:	bl	e8 <utf8encode3>
 29c:	sxtw	x0, w0
 2a0:	ldr	x1, [sp, #56]
 2a4:	add	x0, x1, x0
 2a8:	str	x0, [sp, #56]
 2ac:	ldr	w0, [sp, #40]
 2b0:	cmp	w0, #0x0
 2b4:	b.eq	2e0 <utf8hangul+0x168>  // b.none
 2b8:	ldr	w1, [sp, #40]
 2bc:	mov	w0, #0x11a7                	// #4519
 2c0:	add	w0, w1, w0
 2c4:	mov	w1, w0
 2c8:	ldr	x0, [sp, #56]
 2cc:	bl	e8 <utf8encode3>
 2d0:	sxtw	x0, w0
 2d4:	ldr	x1, [sp, #56]
 2d8:	add	x0, x1, x0
 2dc:	str	x0, [sp, #56]
 2e0:	ldr	x0, [sp, #56]
 2e4:	strb	wzr, [x0]
 2e8:	ldr	x0, [sp, #16]
 2ec:	ldp	x29, x30, [sp], #64
 2f0:	ret

00000000000002f4 <utf8nlookup>:
 2f4:	stp	x29, x30, [sp, #-80]!
 2f8:	mov	x29, sp
 2fc:	str	x0, [sp, #40]
 300:	str	x1, [sp, #32]
 304:	str	x2, [sp, #24]
 308:	str	x3, [sp, #16]
 30c:	ldr	x0, [sp, #40]
 310:	cmp	x0, #0x0
 314:	b.ne	320 <utf8nlookup+0x2c>  // b.any
 318:	mov	x0, #0x0                   	// #0
 31c:	b	564 <utf8nlookup+0x270>
 320:	ldr	x0, [sp, #16]
 324:	cmp	x0, #0x0
 328:	b.ne	334 <utf8nlookup+0x40>  // b.any
 32c:	mov	x0, #0x0                   	// #0
 330:	b	564 <utf8nlookup+0x270>
 334:	ldr	x0, [sp, #40]
 338:	ldr	w0, [x0, #4]
 33c:	mov	w1, w0
 340:	adrp	x0, 0 <utf8clen>
 344:	add	x0, x0, #0x0
 348:	add	x0, x1, x0
 34c:	str	x0, [sp, #72]
 350:	mov	w0, #0x1                   	// #1
 354:	str	w0, [sp, #60]
 358:	b	518 <utf8nlookup+0x224>
 35c:	ldr	x0, [sp, #72]
 360:	ldrb	w0, [x0]
 364:	asr	w0, w0, #4
 368:	and	w0, w0, #0x3
 36c:	str	w0, [sp, #68]
 370:	ldr	x0, [sp, #72]
 374:	ldrb	w0, [x0]
 378:	and	w0, w0, #0x8
 37c:	cmp	w0, #0x0
 380:	b.eq	3b0 <utf8nlookup+0xbc>  // b.none
 384:	ldr	x0, [sp, #16]
 388:	sub	x0, x0, #0x1
 38c:	str	x0, [sp, #16]
 390:	ldr	x0, [sp, #16]
 394:	cmp	x0, #0x0
 398:	b.ne	3a4 <utf8nlookup+0xb0>  // b.any
 39c:	mov	x0, #0x0                   	// #0
 3a0:	b	564 <utf8nlookup+0x270>
 3a4:	ldr	x0, [sp, #24]
 3a8:	add	x0, x0, #0x1
 3ac:	str	x0, [sp, #24]
 3b0:	ldr	x0, [sp, #72]
 3b4:	ldrb	w0, [x0]
 3b8:	and	w0, w0, #0x7
 3bc:	mov	w1, #0x1                   	// #1
 3c0:	lsl	w0, w1, w0
 3c4:	str	w0, [sp, #56]
 3c8:	ldr	x0, [sp, #24]
 3cc:	ldrb	w0, [x0]
 3d0:	mov	w1, w0
 3d4:	ldr	w0, [sp, #56]
 3d8:	and	w0, w1, w0
 3dc:	cmp	w0, #0x0
 3e0:	b.eq	4ac <utf8nlookup+0x1b8>  // b.none
 3e4:	ldr	w0, [sp, #68]
 3e8:	cmp	w0, #0x0
 3ec:	b.eq	470 <utf8nlookup+0x17c>  // b.none
 3f0:	ldr	x0, [sp, #72]
 3f4:	ldrb	w0, [x0]
 3f8:	and	w0, w0, #0x40
 3fc:	str	w0, [sp, #60]
 400:	ldrsw	x0, [sp, #68]
 404:	ldr	x1, [sp, #72]
 408:	add	x0, x1, x0
 40c:	ldrb	w0, [x0]
 410:	str	w0, [sp, #64]
 414:	b	444 <utf8nlookup+0x150>
 418:	ldr	w0, [sp, #64]
 41c:	lsl	w0, w0, #8
 420:	str	w0, [sp, #64]
 424:	ldrsw	x0, [sp, #68]
 428:	ldr	x1, [sp, #72]
 42c:	add	x0, x1, x0
 430:	ldrb	w0, [x0]
 434:	mov	w1, w0
 438:	ldr	w0, [sp, #64]
 43c:	orr	w0, w0, w1
 440:	str	w0, [sp, #64]
 444:	ldr	w0, [sp, #68]
 448:	sub	w0, w0, #0x1
 44c:	str	w0, [sp, #68]
 450:	ldr	w0, [sp, #68]
 454:	cmp	w0, #0x0
 458:	b.ne	418 <utf8nlookup+0x124>  // b.any
 45c:	ldrsw	x0, [sp, #64]
 460:	ldr	x1, [sp, #72]
 464:	add	x0, x1, x0
 468:	str	x0, [sp, #72]
 46c:	b	518 <utf8nlookup+0x224>
 470:	ldr	x0, [sp, #72]
 474:	ldrb	w0, [x0]
 478:	and	w0, w0, #0x40
 47c:	cmp	w0, #0x0
 480:	b.eq	4a4 <utf8nlookup+0x1b0>  // b.none
 484:	ldr	x0, [sp, #72]
 488:	ldrb	w0, [x0]
 48c:	and	w0, w0, #0x80
 490:	str	w0, [sp, #60]
 494:	ldr	x0, [sp, #72]
 498:	add	x0, x0, #0x1
 49c:	str	x0, [sp, #72]
 4a0:	b	518 <utf8nlookup+0x224>
 4a4:	mov	x0, #0x0                   	// #0
 4a8:	b	564 <utf8nlookup+0x270>
 4ac:	ldr	w0, [sp, #68]
 4b0:	cmp	w0, #0x0
 4b4:	b.eq	4e0 <utf8nlookup+0x1ec>  // b.none
 4b8:	ldr	x0, [sp, #72]
 4bc:	ldrb	w0, [x0]
 4c0:	and	w0, w0, #0x80
 4c4:	str	w0, [sp, #60]
 4c8:	ldrsw	x0, [sp, #68]
 4cc:	add	x0, x0, #0x1
 4d0:	ldr	x1, [sp, #72]
 4d4:	add	x0, x1, x0
 4d8:	str	x0, [sp, #72]
 4dc:	b	518 <utf8nlookup+0x224>
 4e0:	ldr	x0, [sp, #72]
 4e4:	ldrb	w0, [x0]
 4e8:	and	w0, w0, #0x40
 4ec:	cmp	w0, #0x0
 4f0:	b.eq	4fc <utf8nlookup+0x208>  // b.none
 4f4:	mov	x0, #0x0                   	// #0
 4f8:	b	564 <utf8nlookup+0x270>
 4fc:	ldr	x0, [sp, #72]
 500:	ldrb	w0, [x0]
 504:	and	w0, w0, #0x80
 508:	str	w0, [sp, #60]
 50c:	ldr	x0, [sp, #72]
 510:	add	x0, x0, #0x1
 514:	str	x0, [sp, #72]
 518:	ldr	w0, [sp, #60]
 51c:	cmp	w0, #0x0
 520:	b.ne	35c <utf8nlookup+0x68>  // b.any
 524:	ldr	x0, [sp, #72]
 528:	add	x0, x0, #0x1
 52c:	ldrb	w0, [x0]
 530:	cmp	w0, #0xff
 534:	b.ne	560 <utf8nlookup+0x26c>  // b.any
 538:	ldr	x0, [sp, #72]
 53c:	add	x0, x0, #0x2
 540:	ldrb	w0, [x0]
 544:	cmp	w0, #0xff
 548:	b.ne	560 <utf8nlookup+0x26c>  // b.any
 54c:	ldr	x0, [sp, #24]
 550:	sub	x0, x0, #0x2
 554:	ldr	x1, [sp, #32]
 558:	bl	178 <utf8hangul>
 55c:	str	x0, [sp, #72]
 560:	ldr	x0, [sp, #72]
 564:	ldp	x29, x30, [sp], #80
 568:	ret

000000000000056c <utf8lookup>:
 56c:	stp	x29, x30, [sp, #-48]!
 570:	mov	x29, sp
 574:	str	x0, [sp, #40]
 578:	str	x1, [sp, #32]
 57c:	str	x2, [sp, #24]
 580:	mov	x3, #0xffffffffffffffff    	// #-1
 584:	ldr	x2, [sp, #24]
 588:	ldr	x1, [sp, #32]
 58c:	ldr	x0, [sp, #40]
 590:	bl	2f4 <utf8nlookup>
 594:	ldp	x29, x30, [sp], #48
 598:	ret

000000000000059c <utf8ncursor>:
 59c:	sub	sp, sp, #0x20
 5a0:	str	x0, [sp, #24]
 5a4:	str	x1, [sp, #16]
 5a8:	str	x2, [sp, #8]
 5ac:	str	x3, [sp]
 5b0:	ldr	x0, [sp, #16]
 5b4:	cmp	x0, #0x0
 5b8:	b.ne	5c4 <utf8ncursor+0x28>  // b.any
 5bc:	mov	w0, #0xffffffff            	// #-1
 5c0:	b	67c <utf8ncursor+0xe0>
 5c4:	ldr	x0, [sp, #8]
 5c8:	cmp	x0, #0x0
 5cc:	b.ne	5d8 <utf8ncursor+0x3c>  // b.any
 5d0:	mov	w0, #0xffffffff            	// #-1
 5d4:	b	67c <utf8ncursor+0xe0>
 5d8:	ldr	x0, [sp, #24]
 5dc:	ldr	x1, [sp, #16]
 5e0:	str	x1, [x0]
 5e4:	ldr	x0, [sp, #24]
 5e8:	ldr	x1, [sp, #8]
 5ec:	str	x1, [x0, #8]
 5f0:	ldr	x0, [sp, #24]
 5f4:	str	xzr, [x0, #16]
 5f8:	ldr	x0, [sp, #24]
 5fc:	str	xzr, [x0, #24]
 600:	ldr	x0, [sp, #24]
 604:	str	xzr, [x0, #32]
 608:	ldr	x0, [sp]
 60c:	mov	w1, w0
 610:	ldr	x0, [sp, #24]
 614:	str	w1, [x0, #40]
 618:	ldr	x0, [sp, #24]
 61c:	str	wzr, [x0, #44]
 620:	ldr	x0, [sp, #24]
 624:	strh	wzr, [x0, #48]
 628:	ldr	x0, [sp, #24]
 62c:	strh	wzr, [x0, #50]
 630:	ldr	x0, [sp, #24]
 634:	ldr	w0, [x0, #40]
 638:	mov	w0, w0
 63c:	ldr	x1, [sp]
 640:	cmp	x1, x0
 644:	b.eq	650 <utf8ncursor+0xb4>  // b.none
 648:	mov	w0, #0xffffffff            	// #-1
 64c:	b	67c <utf8ncursor+0xe0>
 650:	ldr	x0, [sp]
 654:	cmp	x0, #0x0
 658:	b.eq	678 <utf8ncursor+0xdc>  // b.none
 65c:	ldr	x0, [sp, #8]
 660:	ldrb	w0, [x0]
 664:	and	w0, w0, #0xc0
 668:	cmp	w0, #0x80
 66c:	b.ne	678 <utf8ncursor+0xdc>  // b.any
 670:	mov	w0, #0xffffffff            	// #-1
 674:	b	67c <utf8ncursor+0xe0>
 678:	mov	w0, #0x0                   	// #0
 67c:	add	sp, sp, #0x20
 680:	ret

0000000000000684 <utf8byte>:
 684:	stp	x29, x30, [sp, #-64]!
 688:	mov	x29, sp
 68c:	str	x19, [sp, #16]
 690:	str	x0, [sp, #40]
 694:	ldr	x0, [sp, #40]
 698:	ldr	x0, [x0, #16]
 69c:	cmp	x0, #0x0
 6a0:	b.eq	6d0 <utf8byte+0x4c>  // b.none
 6a4:	ldr	x0, [sp, #40]
 6a8:	ldr	x0, [x0, #8]
 6ac:	ldrb	w0, [x0]
 6b0:	cmp	w0, #0x0
 6b4:	b.ne	6d0 <utf8byte+0x4c>  // b.any
 6b8:	ldr	x0, [sp, #40]
 6bc:	ldr	x1, [x0, #16]
 6c0:	ldr	x0, [sp, #40]
 6c4:	str	x1, [x0, #8]
 6c8:	ldr	x0, [sp, #40]
 6cc:	str	xzr, [x0, #16]
 6d0:	ldr	x0, [sp, #40]
 6d4:	ldr	x0, [x0, #16]
 6d8:	cmp	x0, #0x0
 6dc:	b.ne	724 <utf8byte+0xa0>  // b.any
 6e0:	ldr	x0, [sp, #40]
 6e4:	ldr	w0, [x0, #40]
 6e8:	cmp	w0, #0x0
 6ec:	b.eq	704 <utf8byte+0x80>  // b.none
 6f0:	ldr	x0, [sp, #40]
 6f4:	ldr	x0, [x0, #8]
 6f8:	ldrb	w0, [x0]
 6fc:	cmp	w0, #0x0
 700:	b.ne	724 <utf8byte+0xa0>  // b.any
 704:	ldr	x0, [sp, #40]
 708:	ldrsh	w0, [x0, #48]
 70c:	cmp	w0, #0x0
 710:	b.ne	71c <utf8byte+0x98>  // b.any
 714:	mov	w0, #0x0                   	// #0
 718:	b	b88 <utf8byte+0x504>
 71c:	str	wzr, [sp, #52]
 720:	b	9cc <utf8byte+0x348>
 724:	ldr	x0, [sp, #40]
 728:	ldr	x0, [x0, #8]
 72c:	ldrb	w0, [x0]
 730:	and	w0, w0, #0xc0
 734:	cmp	w0, #0x80
 738:	b.ne	77c <utf8byte+0xf8>  // b.any
 73c:	ldr	x0, [sp, #40]
 740:	ldr	x0, [x0, #16]
 744:	cmp	x0, #0x0
 748:	b.ne	760 <utf8byte+0xdc>  // b.any
 74c:	ldr	x0, [sp, #40]
 750:	ldr	w0, [x0, #40]
 754:	sub	w1, w0, #0x1
 758:	ldr	x0, [sp, #40]
 75c:	str	w1, [x0, #40]
 760:	ldr	x0, [sp, #40]
 764:	ldr	x0, [x0, #8]
 768:	add	x2, x0, #0x1
 76c:	ldr	x1, [sp, #40]
 770:	str	x2, [x1, #8]
 774:	ldrb	w0, [x0]
 778:	b	b88 <utf8byte+0x504>
 77c:	ldr	x0, [sp, #40]
 780:	ldr	x0, [x0, #16]
 784:	cmp	x0, #0x0
 788:	b.eq	7b8 <utf8byte+0x134>  // b.none
 78c:	ldr	x0, [sp, #40]
 790:	ldr	x3, [x0]
 794:	ldr	x0, [sp, #40]
 798:	add	x1, x0, #0x34
 79c:	ldr	x0, [sp, #40]
 7a0:	ldr	x0, [x0, #8]
 7a4:	mov	x2, x0
 7a8:	mov	x0, x3
 7ac:	bl	56c <utf8lookup>
 7b0:	str	x0, [sp, #56]
 7b4:	b	7ec <utf8byte+0x168>
 7b8:	ldr	x0, [sp, #40]
 7bc:	ldr	x4, [x0]
 7c0:	ldr	x0, [sp, #40]
 7c4:	add	x1, x0, #0x34
 7c8:	ldr	x0, [sp, #40]
 7cc:	ldr	x2, [x0, #8]
 7d0:	ldr	x0, [sp, #40]
 7d4:	ldr	w0, [x0, #40]
 7d8:	mov	w0, w0
 7dc:	mov	x3, x0
 7e0:	mov	x0, x4
 7e4:	bl	2f4 <utf8nlookup>
 7e8:	str	x0, [sp, #56]
 7ec:	ldr	x0, [sp, #56]
 7f0:	cmp	x0, #0x0
 7f4:	b.ne	800 <utf8byte+0x17c>  // b.any
 7f8:	mov	w0, #0xffffffff            	// #-1
 7fc:	b	b88 <utf8byte+0x504>
 800:	ldr	x0, [sp, #56]
 804:	add	x0, x0, #0x1
 808:	ldrb	w0, [x0]
 80c:	str	w0, [sp, #52]
 810:	ldr	x0, [sp, #56]
 814:	ldrb	w0, [x0]
 818:	mov	w1, w0
 81c:	adrp	x0, 0 <utf8clen>
 820:	add	x0, x0, #0x0
 824:	sxtw	x1, w1
 828:	ldr	w1, [x0, x1, lsl #2]
 82c:	ldr	x0, [sp, #40]
 830:	ldr	x0, [x0]
 834:	ldr	w0, [x0]
 838:	cmp	w1, w0
 83c:	b.ls	848 <utf8byte+0x1c4>  // b.plast
 840:	str	wzr, [sp, #52]
 844:	b	924 <utf8byte+0x2a0>
 848:	ldr	w0, [sp, #52]
 84c:	cmp	w0, #0xff
 850:	b.ne	924 <utf8byte+0x2a0>  // b.any
 854:	ldr	x0, [sp, #40]
 858:	ldr	x0, [x0, #8]
 85c:	bl	0 <utf8clen>
 860:	mov	w1, w0
 864:	ldr	x0, [sp, #40]
 868:	ldr	w0, [x0, #40]
 86c:	sub	w1, w0, w1
 870:	ldr	x0, [sp, #40]
 874:	str	w1, [x0, #40]
 878:	ldr	x0, [sp, #40]
 87c:	ldr	x19, [x0, #8]
 880:	ldr	x0, [sp, #40]
 884:	ldr	x0, [x0, #8]
 888:	bl	0 <utf8clen>
 88c:	sxtw	x0, w0
 890:	add	x1, x19, x0
 894:	ldr	x0, [sp, #40]
 898:	str	x1, [x0, #16]
 89c:	ldr	x0, [sp, #56]
 8a0:	add	x1, x0, #0x2
 8a4:	ldr	x0, [sp, #40]
 8a8:	str	x1, [x0, #8]
 8ac:	ldr	x0, [sp, #40]
 8b0:	ldr	x0, [x0, #8]
 8b4:	ldrb	w0, [x0]
 8b8:	cmp	w0, #0x0
 8bc:	b.ne	8d8 <utf8byte+0x254>  // b.any
 8c0:	ldr	x0, [sp, #40]
 8c4:	ldrsh	w0, [x0, #48]
 8c8:	cmp	w0, #0x0
 8cc:	b.eq	b80 <utf8byte+0x4fc>  // b.none
 8d0:	str	wzr, [sp, #52]
 8d4:	b	9cc <utf8byte+0x348>
 8d8:	ldr	x0, [sp, #40]
 8dc:	ldr	x3, [x0]
 8e0:	ldr	x0, [sp, #40]
 8e4:	add	x1, x0, #0x34
 8e8:	ldr	x0, [sp, #40]
 8ec:	ldr	x0, [x0, #8]
 8f0:	mov	x2, x0
 8f4:	mov	x0, x3
 8f8:	bl	56c <utf8lookup>
 8fc:	str	x0, [sp, #56]
 900:	ldr	x0, [sp, #56]
 904:	cmp	x0, #0x0
 908:	b.ne	914 <utf8byte+0x290>  // b.any
 90c:	mov	w0, #0xffffffff            	// #-1
 910:	b	b88 <utf8byte+0x504>
 914:	ldr	x0, [sp, #56]
 918:	add	x0, x0, #0x1
 91c:	ldrb	w0, [x0]
 920:	str	w0, [sp, #52]
 924:	ldr	w0, [sp, #52]
 928:	cmp	w0, #0x0
 92c:	b.eq	970 <utf8byte+0x2ec>  // b.none
 930:	ldr	x0, [sp, #40]
 934:	ldrsh	w0, [x0, #48]
 938:	mov	w1, w0
 93c:	ldr	w0, [sp, #52]
 940:	cmp	w0, w1
 944:	b.le	970 <utf8byte+0x2ec>
 948:	ldr	x0, [sp, #40]
 94c:	ldrsh	w0, [x0, #50]
 950:	mov	w1, w0
 954:	ldr	w0, [sp, #52]
 958:	cmp	w0, w1
 95c:	b.ge	970 <utf8byte+0x2ec>  // b.tcont
 960:	ldr	w0, [sp, #52]
 964:	sxth	w1, w0
 968:	ldr	x0, [sp, #40]
 96c:	strh	w1, [x0, #50]
 970:	ldr	x0, [sp, #40]
 974:	ldrsh	w0, [x0, #48]
 978:	mov	w1, w0
 97c:	ldr	w0, [sp, #52]
 980:	cmp	w0, w1
 984:	b.ne	9c8 <utf8byte+0x344>  // b.any
 988:	ldr	x0, [sp, #40]
 98c:	ldr	x0, [x0, #16]
 990:	cmp	x0, #0x0
 994:	b.ne	9ac <utf8byte+0x328>  // b.any
 998:	ldr	x0, [sp, #40]
 99c:	ldr	w0, [x0, #40]
 9a0:	sub	w1, w0, #0x1
 9a4:	ldr	x0, [sp, #40]
 9a8:	str	w1, [x0, #40]
 9ac:	ldr	x0, [sp, #40]
 9b0:	ldr	x0, [x0, #8]
 9b4:	add	x2, x0, #0x1
 9b8:	ldr	x1, [sp, #40]
 9bc:	str	x2, [x1, #8]
 9c0:	ldrb	w0, [x0]
 9c4:	b	b88 <utf8byte+0x504>
 9c8:	nop
 9cc:	ldr	x0, [sp, #40]
 9d0:	ldrsh	w0, [x0, #50]
 9d4:	cmp	w0, #0x0
 9d8:	b.ne	a88 <utf8byte+0x404>  // b.any
 9dc:	ldr	x0, [sp, #40]
 9e0:	mov	w1, #0xffffffff            	// #-1
 9e4:	strh	w1, [x0, #48]
 9e8:	ldr	w0, [sp, #52]
 9ec:	sxth	w1, w0
 9f0:	ldr	x0, [sp, #40]
 9f4:	strh	w1, [x0, #50]
 9f8:	ldr	x0, [sp, #40]
 9fc:	ldr	x1, [x0, #16]
 a00:	ldr	x0, [sp, #40]
 a04:	str	x1, [x0, #32]
 a08:	ldr	x0, [sp, #40]
 a0c:	ldr	x1, [x0, #8]
 a10:	ldr	x0, [sp, #40]
 a14:	str	x1, [x0, #24]
 a18:	ldr	x0, [sp, #40]
 a1c:	ldr	w1, [x0, #40]
 a20:	ldr	x0, [sp, #40]
 a24:	str	w1, [x0, #44]
 a28:	ldr	x0, [sp, #40]
 a2c:	ldr	x0, [x0, #16]
 a30:	cmp	x0, #0x0
 a34:	b.ne	a5c <utf8byte+0x3d8>  // b.any
 a38:	ldr	x0, [sp, #40]
 a3c:	ldr	x0, [x0, #8]
 a40:	bl	0 <utf8clen>
 a44:	mov	w1, w0
 a48:	ldr	x0, [sp, #40]
 a4c:	ldr	w0, [x0, #40]
 a50:	sub	w1, w0, w1
 a54:	ldr	x0, [sp, #40]
 a58:	str	w1, [x0, #40]
 a5c:	ldr	x0, [sp, #40]
 a60:	ldr	x0, [x0, #8]
 a64:	bl	0 <utf8clen>
 a68:	mov	w2, w0
 a6c:	ldr	x0, [sp, #40]
 a70:	ldr	x1, [x0, #8]
 a74:	sxtw	x0, w2
 a78:	add	x1, x1, x0
 a7c:	ldr	x0, [sp, #40]
 a80:	str	x1, [x0, #8]
 a84:	b	694 <utf8byte+0x10>
 a88:	ldr	w0, [sp, #52]
 a8c:	cmp	w0, #0x0
 a90:	b.eq	af4 <utf8byte+0x470>  // b.none
 a94:	ldr	x0, [sp, #40]
 a98:	ldr	x0, [x0, #16]
 a9c:	cmp	x0, #0x0
 aa0:	b.ne	ac8 <utf8byte+0x444>  // b.any
 aa4:	ldr	x0, [sp, #40]
 aa8:	ldr	x0, [x0, #8]
 aac:	bl	0 <utf8clen>
 ab0:	mov	w1, w0
 ab4:	ldr	x0, [sp, #40]
 ab8:	ldr	w0, [x0, #40]
 abc:	sub	w1, w0, w1
 ac0:	ldr	x0, [sp, #40]
 ac4:	str	w1, [x0, #40]
 ac8:	ldr	x0, [sp, #40]
 acc:	ldr	x0, [x0, #8]
 ad0:	bl	0 <utf8clen>
 ad4:	mov	w2, w0
 ad8:	ldr	x0, [sp, #40]
 adc:	ldr	x1, [x0, #8]
 ae0:	sxtw	x0, w2
 ae4:	add	x1, x1, x0
 ae8:	ldr	x0, [sp, #40]
 aec:	str	x1, [x0, #8]
 af0:	b	694 <utf8byte+0x10>
 af4:	ldr	x0, [sp, #40]
 af8:	ldrsh	w0, [x0, #50]
 afc:	cmp	w0, #0xff
 b00:	b.eq	b54 <utf8byte+0x4d0>  // b.none
 b04:	ldr	x0, [sp, #40]
 b08:	ldrsh	w1, [x0, #50]
 b0c:	ldr	x0, [sp, #40]
 b10:	strh	w1, [x0, #48]
 b14:	ldr	x0, [sp, #40]
 b18:	mov	w1, #0xff                  	// #255
 b1c:	strh	w1, [x0, #50]
 b20:	ldr	x0, [sp, #40]
 b24:	ldr	x1, [x0, #24]
 b28:	ldr	x0, [sp, #40]
 b2c:	str	x1, [x0, #8]
 b30:	ldr	x0, [sp, #40]
 b34:	ldr	x1, [x0, #32]
 b38:	ldr	x0, [sp, #40]
 b3c:	str	x1, [x0, #16]
 b40:	ldr	x0, [sp, #40]
 b44:	ldr	w1, [x0, #44]
 b48:	ldr	x0, [sp, #40]
 b4c:	str	w1, [x0, #40]
 b50:	b	694 <utf8byte+0x10>
 b54:	ldr	x0, [sp, #40]
 b58:	strh	wzr, [x0, #48]
 b5c:	ldr	x0, [sp, #40]
 b60:	strh	wzr, [x0, #50]
 b64:	ldr	x0, [sp, #40]
 b68:	str	xzr, [x0, #32]
 b6c:	ldr	x0, [sp, #40]
 b70:	str	xzr, [x0, #24]
 b74:	ldr	x0, [sp, #40]
 b78:	str	wzr, [x0, #44]
 b7c:	b	694 <utf8byte+0x10>
 b80:	nop
 b84:	b	694 <utf8byte+0x10>
 b88:	ldr	x19, [sp, #16]
 b8c:	ldp	x29, x30, [sp], #64
 b90:	ret

0000000000000b94 <utf8nfdicf>:
 b94:	sub	sp, sp, #0x20
 b98:	str	w0, [sp, #12]
 b9c:	mov	w0, #0x16                  	// #22
 ba0:	str	w0, [sp, #28]
 ba4:	b	bb4 <utf8nfdicf+0x20>
 ba8:	ldr	w0, [sp, #28]
 bac:	sub	w0, w0, #0x1
 bb0:	str	w0, [sp, #28]
 bb4:	adrp	x0, 0 <utf8clen>
 bb8:	add	x1, x0, #0x0
 bbc:	ldrsw	x0, [sp, #28]
 bc0:	lsl	x0, x0, #3
 bc4:	add	x0, x1, x0
 bc8:	ldr	w0, [x0]
 bcc:	ldr	w1, [sp, #12]
 bd0:	cmp	w1, w0
 bd4:	b.cc	ba8 <utf8nfdicf+0x14>  // b.lo, b.ul, b.last
 bd8:	adrp	x0, 0 <utf8clen>
 bdc:	add	x1, x0, #0x0
 be0:	ldrsw	x0, [sp, #28]
 be4:	lsl	x0, x0, #3
 be8:	add	x0, x1, x0
 bec:	ldr	w0, [x0]
 bf0:	ldr	w1, [sp, #12]
 bf4:	cmp	w1, w0
 bf8:	b.ls	c04 <utf8nfdicf+0x70>  // b.plast
 bfc:	mov	x0, #0x0                   	// #0
 c00:	b	c18 <utf8nfdicf+0x84>
 c04:	ldrsw	x0, [sp, #28]
 c08:	lsl	x1, x0, #3
 c0c:	adrp	x0, 0 <utf8clen>
 c10:	add	x0, x0, #0x0
 c14:	add	x0, x1, x0
 c18:	add	sp, sp, #0x20
 c1c:	ret

0000000000000c20 <utf8_casefold>:
 c20:	stp	x29, x30, [sp, #-160]!
 c24:	mov	x29, sp
 c28:	str	x0, [sp, #56]
 c2c:	str	x1, [sp, #48]
 c30:	str	x2, [sp, #40]
 c34:	str	x3, [sp, #32]
 c38:	str	x4, [sp, #24]
 c3c:	ldr	x0, [sp, #56]
 c40:	ldr	w0, [x0]
 c44:	bl	b94 <utf8nfdicf>
 c48:	str	x0, [sp, #144]
 c4c:	str	xzr, [sp, #152]
 c50:	add	x0, sp, #0x48
 c54:	ldr	x3, [sp, #40]
 c58:	ldr	x2, [sp, #48]
 c5c:	ldr	x1, [sp, #144]
 c60:	bl	59c <utf8ncursor>
 c64:	cmp	w0, #0x0
 c68:	b.lt	ce4 <utf8_casefold+0xc4>  // b.tstop
 c6c:	str	xzr, [sp, #152]
 c70:	b	cc4 <utf8_casefold+0xa4>
 c74:	add	x0, sp, #0x48
 c78:	bl	684 <utf8byte>
 c7c:	str	w0, [sp, #140]
 c80:	ldr	x1, [sp, #32]
 c84:	ldr	x0, [sp, #152]
 c88:	add	x0, x1, x0
 c8c:	ldr	w1, [sp, #140]
 c90:	and	w1, w1, #0xff
 c94:	strb	w1, [x0]
 c98:	ldr	w0, [sp, #140]
 c9c:	cmp	w0, #0x0
 ca0:	b.ne	cac <utf8_casefold+0x8c>  // b.any
 ca4:	ldr	x0, [sp, #152]
 ca8:	b	d04 <utf8_casefold+0xe4>
 cac:	ldr	w0, [sp, #140]
 cb0:	cmn	w0, #0x1
 cb4:	b.eq	cd8 <utf8_casefold+0xb8>  // b.none
 cb8:	ldr	x0, [sp, #152]
 cbc:	add	x0, x0, #0x1
 cc0:	str	x0, [sp, #152]
 cc4:	ldr	x1, [sp, #152]
 cc8:	ldr	x0, [sp, #24]
 ccc:	cmp	x1, x0
 cd0:	b.cc	c74 <utf8_casefold+0x54>  // b.lo, b.ul, b.last
 cd4:	b	cdc <utf8_casefold+0xbc>
 cd8:	nop
 cdc:	mov	w0, #0xffffffdc            	// #-36
 ce0:	b	d04 <utf8_casefold+0xe4>
 ce4:	nop
 ce8:	ldr	x1, [sp, #24]
 cec:	ldr	x0, [sp, #40]
 cf0:	cmp	x1, x0
 cf4:	b.cs	d00 <utf8_casefold+0xe0>  // b.hs, b.nlast
 cf8:	mov	w0, #0xffffffdc            	// #-36
 cfc:	b	d04 <utf8_casefold+0xe4>
 d00:	mov	w0, #0xffffffea            	// #-22
 d04:	ldp	x29, x30, [sp], #160
 d08:	ret

0000000000000d0c <ext2fs_load_nls_table>:
 d0c:	sub	sp, sp, #0x10
 d10:	str	w0, [sp, #12]
 d14:	ldr	w0, [sp, #12]
 d18:	cmp	w0, #0x1
 d1c:	b.ne	d2c <ext2fs_load_nls_table+0x20>  // b.any
 d20:	adrp	x0, 0 <utf8clen>
 d24:	add	x0, x0, #0x0
 d28:	b	d30 <ext2fs_load_nls_table+0x24>
 d2c:	mov	x0, #0x0                   	// #0
 d30:	add	sp, sp, #0x10
 d34:	ret

openfs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_bigalloc>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x200
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_feature_metadata_csum>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	ldr	x0, [sp, #8]
      5c:	ldr	w0, [x0, #100]
      60:	and	w0, w0, #0x400
      64:	cmp	w0, #0x0
      68:	cset	w0, ne  // ne = any
      6c:	and	w0, w0, #0xff
      70:	add	sp, sp, #0x10
      74:	ret

0000000000000078 <ext2fs_set_feature_shared_blocks>:
      78:	sub	sp, sp, #0x10
      7c:	str	x0, [sp, #8]
      80:	ldr	x0, [sp, #8]
      84:	ldr	w0, [x0, #100]
      88:	orr	w1, w0, #0x4000
      8c:	ldr	x0, [sp, #8]
      90:	str	w1, [x0, #100]
      94:	nop
      98:	add	sp, sp, #0x10
      9c:	ret

00000000000000a0 <ext2fs_has_feature_journal_dev>:
      a0:	sub	sp, sp, #0x10
      a4:	str	x0, [sp, #8]
      a8:	ldr	x0, [sp, #8]
      ac:	ldr	w0, [x0, #96]
      b0:	and	w0, w0, #0x8
      b4:	cmp	w0, #0x0
      b8:	cset	w0, ne  // ne = any
      bc:	and	w0, w0, #0xff
      c0:	add	sp, sp, #0x10
      c4:	ret

00000000000000c8 <ext2fs_has_feature_meta_bg>:
      c8:	sub	sp, sp, #0x10
      cc:	str	x0, [sp, #8]
      d0:	ldr	x0, [sp, #8]
      d4:	ldr	w0, [x0, #96]
      d8:	and	w0, w0, #0x10
      dc:	cmp	w0, #0x0
      e0:	cset	w0, ne  // ne = any
      e4:	and	w0, w0, #0xff
      e8:	add	sp, sp, #0x10
      ec:	ret

00000000000000f0 <ext2fs_has_feature_64bit>:
      f0:	sub	sp, sp, #0x10
      f4:	str	x0, [sp, #8]
      f8:	ldr	x0, [sp, #8]
      fc:	ldr	w0, [x0, #96]
     100:	and	w0, w0, #0x80
     104:	cmp	w0, #0x0
     108:	cset	w0, ne  // ne = any
     10c:	and	w0, w0, #0xff
     110:	add	sp, sp, #0x10
     114:	ret

0000000000000118 <ext2fs_has_feature_mmp>:
     118:	sub	sp, sp, #0x10
     11c:	str	x0, [sp, #8]
     120:	ldr	x0, [sp, #8]
     124:	ldr	w0, [x0, #96]
     128:	and	w0, w0, #0x100
     12c:	cmp	w0, #0x0
     130:	cset	w0, ne  // ne = any
     134:	and	w0, w0, #0xff
     138:	add	sp, sp, #0x10
     13c:	ret

0000000000000140 <ext2fs_has_feature_casefold>:
     140:	sub	sp, sp, #0x10
     144:	str	x0, [sp, #8]
     148:	ldr	x0, [sp, #8]
     14c:	ldr	w0, [x0, #96]
     150:	and	w0, w0, #0x20000
     154:	cmp	w0, #0x0
     158:	cset	w0, ne  // ne = any
     15c:	and	w0, w0, #0xff
     160:	add	sp, sp, #0x10
     164:	ret

0000000000000168 <ext2fs_has_group_desc_csum>:
     168:	stp	x29, x30, [sp, #-32]!
     16c:	mov	x29, sp
     170:	str	x0, [sp, #24]
     174:	ldr	x0, [sp, #24]
     178:	ldr	x0, [x0, #32]
     17c:	bl	50 <ext2fs_has_feature_metadata_csum>
     180:	cmp	w0, #0x0
     184:	b.ne	19c <ext2fs_has_group_desc_csum+0x34>  // b.any
     188:	ldr	x0, [sp, #24]
     18c:	ldr	x0, [x0, #32]
     190:	bl	0 <ext2fs_has_feature_gdt_csum>
     194:	cmp	w0, #0x0
     198:	b.eq	1a4 <ext2fs_has_group_desc_csum+0x3c>  // b.none
     19c:	mov	w0, #0x1                   	// #1
     1a0:	b	1a8 <ext2fs_has_group_desc_csum+0x40>
     1a4:	mov	w0, #0x0                   	// #0
     1a8:	ldp	x29, x30, [sp], #32
     1ac:	ret

00000000000001b0 <ext2fs_descriptor_block_loc2>:
     1b0:	stp	x29, x30, [sp, #-96]!
     1b4:	mov	x29, sp
     1b8:	str	x19, [sp, #16]
     1bc:	str	x0, [sp, #56]
     1c0:	str	x1, [sp, #48]
     1c4:	str	w2, [sp, #44]
     1c8:	str	wzr, [sp, #92]
     1cc:	str	wzr, [sp, #88]
     1d0:	ldr	w0, [sp, #44]
     1d4:	cmp	w0, #0x0
     1d8:	b.ne	20c <ext2fs_descriptor_block_loc2+0x5c>  // b.any
     1dc:	ldr	x0, [sp, #56]
     1e0:	ldr	w0, [x0, #40]
     1e4:	cmp	w0, #0x400
     1e8:	b.ne	20c <ext2fs_descriptor_block_loc2+0x5c>  // b.any
     1ec:	ldr	x0, [sp, #56]
     1f0:	ldr	w0, [x0, #192]
     1f4:	mov	w1, #0x1                   	// #1
     1f8:	lsl	w0, w1, w0
     1fc:	cmp	w0, #0x1
     200:	b.le	20c <ext2fs_descriptor_block_loc2+0x5c>
     204:	mov	w0, #0x1                   	// #1
     208:	str	w0, [sp, #88]
     20c:	ldr	x0, [sp, #56]
     210:	ldr	x0, [x0, #32]
     214:	bl	c8 <ext2fs_has_feature_meta_bg>
     218:	cmp	w0, #0x0
     21c:	b.eq	238 <ext2fs_descriptor_block_loc2+0x88>  // b.none
     220:	ldr	x0, [sp, #56]
     224:	ldr	x0, [x0, #32]
     228:	ldr	w0, [x0, #260]
     22c:	ldr	w1, [sp, #44]
     230:	cmp	w1, w0
     234:	b.cs	254 <ext2fs_descriptor_block_loc2+0xa4>  // b.hs, b.nlast
     238:	ldr	w1, [sp, #44]
     23c:	ldr	x0, [sp, #48]
     240:	add	x1, x1, x0
     244:	ldrsw	x0, [sp, #88]
     248:	add	x0, x1, x0
     24c:	add	x0, x0, #0x1
     250:	b	388 <ext2fs_descriptor_block_loc2+0x1d8>
     254:	ldr	x0, [sp, #56]
     258:	ldr	x0, [x0, #32]
     25c:	ldr	w0, [x0, #24]
     260:	mov	w1, #0x400                 	// #1024
     264:	lsl	w1, w1, w0
     268:	ldr	x0, [sp, #56]
     26c:	ldr	x0, [x0, #32]
     270:	ldr	w0, [x0, #96]
     274:	and	w0, w0, #0x80
     278:	cmp	w0, #0x0
     27c:	b.eq	290 <ext2fs_descriptor_block_loc2+0xe0>  // b.none
     280:	ldr	x0, [sp, #56]
     284:	ldr	x0, [x0, #32]
     288:	ldrh	w0, [x0, #254]
     28c:	b	294 <ext2fs_descriptor_block_loc2+0xe4>
     290:	mov	w0, #0x20                  	// #32
     294:	sdiv	w0, w1, w0
     298:	mov	w1, w0
     29c:	ldr	w0, [sp, #44]
     2a0:	mul	w0, w1, w0
     2a4:	str	w0, [sp, #76]
     2a8:	ldr	w0, [sp, #76]
     2ac:	mov	w1, w0
     2b0:	ldr	x0, [sp, #56]
     2b4:	bl	0 <ext2fs_bg_has_super>
     2b8:	cmp	w0, #0x0
     2bc:	b.eq	2c8 <ext2fs_descriptor_block_loc2+0x118>  // b.none
     2c0:	mov	w0, #0x1                   	// #1
     2c4:	str	w0, [sp, #92]
     2c8:	ldr	w0, [sp, #76]
     2cc:	mov	w1, w0
     2d0:	ldr	x0, [sp, #56]
     2d4:	bl	0 <ext2fs_group_first_block2>
     2d8:	str	x0, [sp, #80]
     2dc:	ldr	x0, [sp, #56]
     2e0:	ldr	x0, [x0, #32]
     2e4:	ldr	w0, [x0, #20]
     2e8:	mov	w0, w0
     2ec:	ldr	x1, [sp, #48]
     2f0:	cmp	x1, x0
     2f4:	b.eq	374 <ext2fs_descriptor_block_loc2+0x1c4>  // b.none
     2f8:	ldrsw	x1, [sp, #92]
     2fc:	ldr	x0, [sp, #80]
     300:	add	x1, x1, x0
     304:	ldr	x0, [sp, #56]
     308:	ldr	x0, [x0, #32]
     30c:	ldr	w0, [x0, #32]
     310:	mov	w0, w0
     314:	add	x19, x1, x0
     318:	ldr	x0, [sp, #56]
     31c:	ldr	x0, [x0, #32]
     320:	bl	0 <ext2fs_blocks_count>
     324:	cmp	x19, x0
     328:	b.cs	374 <ext2fs_descriptor_block_loc2+0x1c4>  // b.hs, b.nlast
     32c:	ldr	x0, [sp, #56]
     330:	ldr	x0, [x0, #32]
     334:	ldr	w0, [x0, #32]
     338:	mov	w0, w0
     33c:	ldr	x1, [sp, #80]
     340:	add	x0, x1, x0
     344:	str	x0, [sp, #80]
     348:	ldr	w0, [sp, #76]
     34c:	add	w0, w0, #0x1
     350:	mov	w1, w0
     354:	ldr	x0, [sp, #56]
     358:	bl	0 <ext2fs_bg_has_super>
     35c:	cmp	w0, #0x0
     360:	b.eq	370 <ext2fs_descriptor_block_loc2+0x1c0>  // b.none
     364:	mov	w0, #0x1                   	// #1
     368:	str	w0, [sp, #92]
     36c:	b	374 <ext2fs_descriptor_block_loc2+0x1c4>
     370:	str	wzr, [sp, #92]
     374:	ldrsw	x1, [sp, #92]
     378:	ldr	x0, [sp, #80]
     37c:	add	x1, x1, x0
     380:	ldrsw	x0, [sp, #88]
     384:	add	x0, x1, x0
     388:	ldr	x19, [sp, #16]
     38c:	ldp	x29, x30, [sp], #96
     390:	ret

0000000000000394 <ext2fs_descriptor_block_loc>:
     394:	stp	x29, x30, [sp, #-32]!
     398:	mov	x29, sp
     39c:	str	x0, [sp, #24]
     3a0:	str	w1, [sp, #20]
     3a4:	str	w2, [sp, #16]
     3a8:	ldr	w0, [sp, #20]
     3ac:	ldr	w2, [sp, #16]
     3b0:	mov	x1, x0
     3b4:	ldr	x0, [sp, #24]
     3b8:	bl	1b0 <ext2fs_descriptor_block_loc2>
     3bc:	ldp	x29, x30, [sp], #32
     3c0:	ret

00000000000003c4 <ext2fs_open>:
     3c4:	stp	x29, x30, [sp, #-64]!
     3c8:	mov	x29, sp
     3cc:	str	x0, [sp, #56]
     3d0:	str	w1, [sp, #52]
     3d4:	str	w2, [sp, #48]
     3d8:	str	w3, [sp, #44]
     3dc:	str	x4, [sp, #32]
     3e0:	str	x5, [sp, #24]
     3e4:	ldr	x6, [sp, #24]
     3e8:	ldr	x5, [sp, #32]
     3ec:	ldr	w4, [sp, #44]
     3f0:	ldr	w3, [sp, #48]
     3f4:	ldr	w2, [sp, #52]
     3f8:	mov	x1, #0x0                   	// #0
     3fc:	ldr	x0, [sp, #56]
     400:	bl	42c <ext2fs_open2>
     404:	ldp	x29, x30, [sp], #64
     408:	ret

000000000000040c <block_sha_map_free_entry>:
     40c:	stp	x29, x30, [sp, #-32]!
     410:	mov	x29, sp
     414:	str	x0, [sp, #24]
     418:	ldr	x0, [sp, #24]
     41c:	bl	0 <free>
     420:	nop
     424:	ldp	x29, x30, [sp], #32
     428:	ret

000000000000042c <ext2fs_open2>:
     42c:	stp	x29, x30, [sp, #-192]!
     430:	mov	x29, sp
     434:	str	x19, [sp, #16]
     438:	str	x0, [sp, #72]
     43c:	str	x1, [sp, #64]
     440:	str	w2, [sp, #60]
     444:	str	w3, [sp, #56]
     448:	str	w4, [sp, #52]
     44c:	str	x5, [sp, #40]
     450:	str	x6, [sp, #32]
     454:	str	wzr, [sp, #140]
     458:	ldr	x0, [sp, #40]
     45c:	ldr	x1, [x0]
     460:	mov	x0, #0xb707                	// #46855
     464:	movk	x0, #0x7f2b, lsl #16
     468:	cmp	x1, x0
     46c:	b.eq	47c <ext2fs_open2+0x50>  // b.none
     470:	mov	x0, #0xb707                	// #46855
     474:	movk	x0, #0x7f2b, lsl #16
     478:	b	1460 <ext2fs_open2+0x1034>
     47c:	add	x0, sp, #0x58
     480:	mov	x1, x0
     484:	mov	x0, #0x170                 	// #368
     488:	bl	0 <ext2fs_get_mem>
     48c:	str	x0, [sp, #184]
     490:	ldr	x0, [sp, #184]
     494:	cmp	x0, #0x0
     498:	b.eq	4a4 <ext2fs_open2+0x78>  // b.none
     49c:	ldr	x0, [sp, #184]
     4a0:	b	1460 <ext2fs_open2+0x1034>
     4a4:	ldr	x0, [sp, #88]
     4a8:	mov	x2, #0x170                 	// #368
     4ac:	mov	w1, #0x0                   	// #0
     4b0:	bl	0 <memset>
     4b4:	ldr	x0, [sp, #88]
     4b8:	mov	x1, #0xb701                	// #46849
     4bc:	movk	x1, #0x7f2b, lsl #16
     4c0:	str	x1, [x0]
     4c4:	ldr	x0, [sp, #88]
     4c8:	ldr	w1, [sp, #60]
     4cc:	str	w1, [x0, #16]
     4d0:	ldr	x0, [sp, #88]
     4d4:	ldr	w1, [x0, #16]
     4d8:	ldr	x0, [sp, #88]
     4dc:	orr	w1, w1, #0x200
     4e0:	str	w1, [x0, #16]
     4e4:	ldr	x0, [sp, #88]
     4e8:	mov	w1, #0x12                  	// #18
     4ec:	str	w1, [x0, #176]
     4f0:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     4f4:	add	x0, x0, #0x0
     4f8:	bl	0 <getenv>
     4fc:	str	x0, [sp, #128]
     500:	ldr	x0, [sp, #128]
     504:	cmp	x0, #0x0
     508:	b.eq	528 <ext2fs_open2+0xfc>  // b.none
     50c:	mov	w2, #0x0                   	// #0
     510:	mov	x1, #0x0                   	// #0
     514:	ldr	x0, [sp, #128]
     518:	bl	0 <strtoul>
     51c:	mov	x1, x0
     520:	ldr	x0, [sp, #88]
     524:	str	x1, [x0, #184]
     528:	ldr	x0, [sp, #72]
     52c:	bl	0 <strlen>
     530:	add	x2, x0, #0x1
     534:	ldr	x0, [sp, #88]
     538:	add	x0, x0, #0x18
     53c:	mov	x1, x0
     540:	mov	x0, x2
     544:	bl	0 <ext2fs_get_mem>
     548:	str	x0, [sp, #184]
     54c:	ldr	x0, [sp, #184]
     550:	cmp	x0, #0x0
     554:	b.ne	13d8 <ext2fs_open2+0xfac>  // b.any
     558:	ldr	x0, [sp, #88]
     55c:	ldr	x0, [x0, #24]
     560:	ldr	x1, [sp, #72]
     564:	bl	0 <strcpy>
     568:	ldr	x0, [sp, #88]
     56c:	ldr	x0, [x0, #24]
     570:	mov	w1, #0x3f                  	// #63
     574:	bl	0 <strchr>
     578:	str	x0, [sp, #120]
     57c:	ldr	x0, [sp, #64]
     580:	cmp	x0, #0x0
     584:	b.ne	5ac <ext2fs_open2+0x180>  // b.any
     588:	ldr	x0, [sp, #120]
     58c:	cmp	x0, #0x0
     590:	b.eq	5ac <ext2fs_open2+0x180>  // b.none
     594:	ldr	x0, [sp, #120]
     598:	add	x1, x0, #0x1
     59c:	str	x1, [sp, #120]
     5a0:	strb	wzr, [x0]
     5a4:	ldr	x0, [sp, #120]
     5a8:	str	x0, [sp, #64]
     5ac:	str	wzr, [sp, #160]
     5b0:	ldr	w0, [sp, #60]
     5b4:	and	w0, w0, #0x1
     5b8:	cmp	w0, #0x0
     5bc:	b.eq	5cc <ext2fs_open2+0x1a0>  // b.none
     5c0:	ldr	w0, [sp, #160]
     5c4:	orr	w0, w0, #0x1
     5c8:	str	w0, [sp, #160]
     5cc:	ldr	w0, [sp, #60]
     5d0:	and	w0, w0, #0x4000
     5d4:	cmp	w0, #0x0
     5d8:	b.eq	5e8 <ext2fs_open2+0x1bc>  // b.none
     5dc:	ldr	w0, [sp, #160]
     5e0:	orr	w0, w0, #0x2
     5e4:	str	w0, [sp, #160]
     5e8:	ldr	w0, [sp, #60]
     5ec:	and	w0, w0, #0x80000
     5f0:	cmp	w0, #0x0
     5f4:	b.eq	604 <ext2fs_open2+0x1d8>  // b.none
     5f8:	ldr	w0, [sp, #160]
     5fc:	orr	w0, w0, #0x4
     600:	str	w0, [sp, #160]
     604:	ldr	x0, [sp, #40]
     608:	ldr	x3, [x0, #16]
     60c:	ldr	x0, [sp, #88]
     610:	ldr	x4, [x0, #24]
     614:	ldr	w1, [sp, #160]
     618:	ldr	x0, [sp, #88]
     61c:	add	x0, x0, #0x8
     620:	mov	x2, x0
     624:	mov	x0, x4
     628:	blr	x3
     62c:	str	x0, [sp, #184]
     630:	ldr	x0, [sp, #184]
     634:	cmp	x0, #0x0
     638:	b.ne	13e0 <ext2fs_open2+0xfb4>  // b.any
     63c:	ldr	x0, [sp, #64]
     640:	cmp	x0, #0x0
     644:	b.eq	668 <ext2fs_open2+0x23c>  // b.none
     648:	ldr	x0, [sp, #88]
     64c:	ldr	x0, [x0, #8]
     650:	ldr	x1, [sp, #64]
     654:	bl	0 <io_channel_set_options>
     658:	str	x0, [sp, #184]
     65c:	ldr	x0, [sp, #184]
     660:	cmp	x0, #0x0
     664:	b.ne	13e8 <ext2fs_open2+0xfbc>  // b.any
     668:	ldr	x1, [sp, #88]
     66c:	ldr	x0, [sp, #88]
     670:	ldr	x1, [x1, #8]
     674:	str	x1, [x0, #240]
     678:	ldr	x0, [sp, #88]
     67c:	ldr	x0, [x0, #8]
     680:	ldr	x1, [sp, #88]
     684:	str	x1, [x0, #176]
     688:	ldr	x0, [sp, #88]
     68c:	ldr	x3, [x0, #8]
     690:	ldr	x0, [sp, #88]
     694:	add	x0, x0, #0x20
     698:	mov	x2, x0
     69c:	mov	w1, #0xfffffc00            	// #-1024
     6a0:	mov	x0, x3
     6a4:	bl	0 <io_channel_alloc_buf>
     6a8:	str	x0, [sp, #184]
     6ac:	ldr	x0, [sp, #184]
     6b0:	cmp	x0, #0x0
     6b4:	b.ne	13f0 <ext2fs_open2+0xfc4>  // b.any
     6b8:	ldr	w0, [sp, #60]
     6bc:	and	w0, w0, #0x2000
     6c0:	cmp	w0, #0x0
     6c4:	b.eq	770 <ext2fs_open2+0x344>  // b.none
     6c8:	ldr	x0, [sp, #88]
     6cc:	add	x0, x0, #0xa8
     6d0:	mov	x1, x0
     6d4:	mov	x0, #0x14c                 	// #332
     6d8:	bl	0 <ext2fs_get_mem>
     6dc:	str	x0, [sp, #184]
     6e0:	ldr	x0, [sp, #184]
     6e4:	cmp	x0, #0x0
     6e8:	b.ne	13f8 <ext2fs_open2+0xfcc>  // b.any
     6ec:	ldr	x0, [sp, #88]
     6f0:	ldr	x0, [x0, #8]
     6f4:	ldr	x0, [x0, #8]
     6f8:	ldr	x4, [x0, #40]
     6fc:	ldr	x0, [sp, #88]
     700:	ldr	x5, [x0, #8]
     704:	ldr	x0, [sp, #88]
     708:	ldr	x0, [x0, #168]
     70c:	mov	x3, x0
     710:	mov	w2, #0xfffffeb4            	// #-332
     714:	mov	x1, #0x0                   	// #0
     718:	mov	x0, x5
     71c:	blr	x4
     720:	str	x0, [sp, #184]
     724:	ldr	x0, [sp, #184]
     728:	cmp	x0, #0x0
     72c:	b.ne	1400 <ext2fs_open2+0xfd4>  // b.any
     730:	ldr	x0, [sp, #88]
     734:	ldr	x0, [x0, #168]
     738:	ldr	w1, [x0]
     73c:	mov	w0, #0xb710                	// #46864
     740:	movk	w0, #0x7f2b, lsl #16
     744:	cmp	w1, w0
     748:	b.eq	758 <ext2fs_open2+0x32c>  // b.none
     74c:	mov	x0, #0xb710                	// #46864
     750:	movk	x0, #0x7f2b, lsl #16
     754:	b	1460 <ext2fs_open2+0x1034>
     758:	mov	w0, #0x1                   	// #1
     75c:	str	w0, [sp, #56]
     760:	ldr	x0, [sp, #88]
     764:	ldr	x0, [x0, #168]
     768:	ldr	w0, [x0, #204]
     76c:	str	w0, [sp, #52]
     770:	ldr	w0, [sp, #56]
     774:	cmp	w0, #0x0
     778:	b.eq	7cc <ext2fs_open2+0x3a0>  // b.none
     77c:	ldr	w0, [sp, #52]
     780:	cmp	w0, #0x0
     784:	b.ne	798 <ext2fs_open2+0x36c>  // b.any
     788:	mov	x0, #0xb747                	// #46919
     78c:	movk	x0, #0x7f2b, lsl #16
     790:	str	x0, [sp, #184]
     794:	b	1434 <ext2fs_open2+0x1008>
     798:	ldr	x0, [sp, #88]
     79c:	ldr	x0, [x0, #8]
     7a0:	ldr	x0, [x0, #8]
     7a4:	ldr	x2, [x0, #32]
     7a8:	ldr	x0, [sp, #88]
     7ac:	ldr	x0, [x0, #8]
     7b0:	ldr	w1, [sp, #52]
     7b4:	blr	x2
     7b8:	ldrsw	x0, [sp, #56]
     7bc:	str	x0, [sp, #152]
     7c0:	ldr	x0, [sp, #88]
     7c4:	str	xzr, [x0, #160]
     7c8:	b	81c <ext2fs_open2+0x3f0>
     7cc:	ldr	x0, [sp, #88]
     7d0:	ldr	x0, [x0, #8]
     7d4:	ldr	x0, [x0, #8]
     7d8:	ldr	x2, [x0, #32]
     7dc:	ldr	x0, [sp, #88]
     7e0:	ldr	x0, [x0, #8]
     7e4:	mov	w1, #0x400                 	// #1024
     7e8:	blr	x2
     7ec:	mov	w0, #0x1                   	// #1
     7f0:	str	w0, [sp, #56]
     7f4:	str	xzr, [sp, #152]
     7f8:	ldr	x0, [sp, #88]
     7fc:	add	x0, x0, #0xa0
     800:	mov	x1, x0
     804:	mov	x0, #0x400                 	// #1024
     808:	bl	0 <ext2fs_get_mem>
     80c:	str	x0, [sp, #184]
     810:	ldr	x0, [sp, #184]
     814:	cmp	x0, #0x0
     818:	b.ne	1408 <ext2fs_open2+0xfdc>  // b.any
     81c:	ldr	x0, [sp, #88]
     820:	ldr	x0, [x0, #8]
     824:	ldr	x0, [x0, #8]
     828:	ldr	x4, [x0, #40]
     82c:	ldr	x0, [sp, #88]
     830:	ldr	x5, [x0, #8]
     834:	ldrsw	x1, [sp, #56]
     838:	ldr	x0, [sp, #88]
     83c:	ldr	x0, [x0, #32]
     840:	mov	x3, x0
     844:	mov	w2, #0xfffffc00            	// #-1024
     848:	mov	x0, x5
     84c:	blr	x4
     850:	str	x0, [sp, #184]
     854:	ldr	x0, [sp, #184]
     858:	cmp	x0, #0x0
     85c:	b.ne	1410 <ext2fs_open2+0xfe4>  // b.any
     860:	ldr	x0, [sp, #88]
     864:	ldr	x0, [x0, #160]
     868:	cmp	x0, #0x0
     86c:	b.eq	890 <ext2fs_open2+0x464>  // b.none
     870:	ldr	x0, [sp, #88]
     874:	ldr	x3, [x0, #160]
     878:	ldr	x0, [sp, #88]
     87c:	ldr	x0, [x0, #32]
     880:	mov	x2, #0x400                 	// #1024
     884:	mov	x1, x0
     888:	mov	x0, x3
     88c:	bl	0 <memcpy>
     890:	ldr	x0, [sp, #88]
     894:	ldr	w0, [x0, #16]
     898:	and	w0, w0, #0x200000
     89c:	cmp	w0, #0x0
     8a0:	b.ne	900 <ext2fs_open2+0x4d4>  // b.any
     8a4:	str	xzr, [sp, #184]
     8a8:	ldr	x2, [sp, #88]
     8ac:	ldr	x0, [sp, #88]
     8b0:	ldr	x0, [x0, #32]
     8b4:	mov	x1, x0
     8b8:	mov	x0, x2
     8bc:	bl	0 <ext2fs_verify_csum_type>
     8c0:	cmp	w0, #0x0
     8c4:	b.ne	8d4 <ext2fs_open2+0x4a8>  // b.any
     8c8:	mov	x0, #0xb799                	// #47001
     8cc:	movk	x0, #0x7f2b, lsl #16
     8d0:	str	x0, [sp, #184]
     8d4:	ldr	x2, [sp, #88]
     8d8:	ldr	x0, [sp, #88]
     8dc:	ldr	x0, [x0, #32]
     8e0:	mov	x1, x0
     8e4:	mov	x0, x2
     8e8:	bl	0 <ext2fs_superblock_csum_verify>
     8ec:	cmp	w0, #0x0
     8f0:	b.ne	900 <ext2fs_open2+0x4d4>  // b.any
     8f4:	mov	x0, #0xb798                	// #47000
     8f8:	movk	x0, #0x7f2b, lsl #16
     8fc:	str	x0, [sp, #184]
     900:	ldr	x0, [sp, #88]
     904:	ldr	w0, [x0, #16]
     908:	and	w0, w0, #0x40
     90c:	cmp	w0, #0x0
     910:	b.eq	924 <ext2fs_open2+0x4f8>  // b.none
     914:	mov	x0, #0xb750                	// #46928
     918:	movk	x0, #0x7f2b, lsl #16
     91c:	str	x0, [sp, #184]
     920:	b	1434 <ext2fs_open2+0x1008>
     924:	ldr	x0, [sp, #88]
     928:	ldr	x0, [x0, #32]
     92c:	ldrh	w1, [x0, #56]
     930:	mov	w0, #0xef53                	// #61267
     934:	cmp	w1, w0
     938:	b.eq	948 <ext2fs_open2+0x51c>  // b.none
     93c:	mov	x0, #0xb713                	// #46867
     940:	movk	x0, #0x7f2b, lsl #16
     944:	str	x0, [sp, #184]
     948:	ldr	x0, [sp, #184]
     94c:	cmp	x0, #0x0
     950:	b.ne	1418 <ext2fs_open2+0xfec>  // b.any
     954:	ldr	x0, [sp, #88]
     958:	ldr	x0, [x0, #32]
     95c:	ldr	w0, [x0, #76]
     960:	cmp	w0, #0x1
     964:	b.ls	978 <ext2fs_open2+0x54c>  // b.plast
     968:	mov	x0, #0xb714                	// #46868
     96c:	movk	x0, #0x7f2b, lsl #16
     970:	str	x0, [sp, #184]
     974:	b	1434 <ext2fs_open2+0x1008>
     978:	ldr	w0, [sp, #60]
     97c:	and	w0, w0, #0x400
     980:	cmp	w0, #0x0
     984:	b.ne	a60 <ext2fs_open2+0x634>  // b.any
     988:	ldr	x0, [sp, #88]
     98c:	ldr	x0, [x0, #32]
     990:	ldr	w0, [x0, #96]
     994:	str	w0, [sp, #164]
     998:	ldr	w0, [sp, #60]
     99c:	and	w0, w0, #0x8000
     9a0:	cmp	w0, #0x0
     9a4:	ldr	w1, [sp, #164]
     9a8:	mov	w0, #0x1821                	// #6177
     9ac:	movk	w0, #0xfffc, lsl #16
     9b0:	and	w0, w1, w0
     9b4:	cmp	w0, #0x0
     9b8:	b.eq	9cc <ext2fs_open2+0x5a0>  // b.none
     9bc:	mov	x0, #0xb743                	// #46915
     9c0:	movk	x0, #0x7f2b, lsl #16
     9c4:	str	x0, [sp, #184]
     9c8:	b	1434 <ext2fs_open2+0x1008>
     9cc:	ldr	x0, [sp, #88]
     9d0:	ldr	x0, [x0, #32]
     9d4:	ldr	w0, [x0, #100]
     9d8:	str	w0, [sp, #164]
     9dc:	ldr	w0, [sp, #60]
     9e0:	and	w0, w0, #0x8000
     9e4:	cmp	w0, #0x0
     9e8:	b.eq	9f8 <ext2fs_open2+0x5cc>  // b.none
     9ec:	ldr	w0, [sp, #164]
     9f0:	and	w0, w0, #0xfffff7ff
     9f4:	str	w0, [sp, #164]
     9f8:	ldr	w0, [sp, #60]
     9fc:	and	w0, w0, #0x1
     a00:	cmp	w0, #0x0
     a04:	b.eq	a2c <ext2fs_open2+0x600>  // b.none
     a08:	ldr	w1, [sp, #164]
     a0c:	mov	w0, #0xffff0884            	// #-63356
     a10:	and	w0, w1, w0
     a14:	cmp	w0, #0x0
     a18:	b.eq	a2c <ext2fs_open2+0x600>  // b.none
     a1c:	mov	x0, #0xb744                	// #46916
     a20:	movk	x0, #0x7f2b, lsl #16
     a24:	str	x0, [sp, #184]
     a28:	b	1434 <ext2fs_open2+0x1008>
     a2c:	ldr	w0, [sp, #60]
     a30:	and	w0, w0, #0x1000
     a34:	cmp	w0, #0x0
     a38:	b.ne	a60 <ext2fs_open2+0x634>  // b.any
     a3c:	ldr	x0, [sp, #88]
     a40:	ldr	x0, [x0, #32]
     a44:	bl	a0 <ext2fs_has_feature_journal_dev>
     a48:	cmp	w0, #0x0
     a4c:	b.eq	a60 <ext2fs_open2+0x634>  // b.none
     a50:	mov	x0, #0xb743                	// #46915
     a54:	movk	x0, #0x7f2b, lsl #16
     a58:	str	x0, [sp, #184]
     a5c:	b	1434 <ext2fs_open2+0x1008>
     a60:	ldr	x0, [sp, #88]
     a64:	ldr	x0, [x0, #32]
     a68:	ldr	w0, [x0, #24]
     a6c:	cmp	w0, #0x6
     a70:	b.ls	a84 <ext2fs_open2+0x658>  // b.plast
     a74:	mov	x0, #0xb73c                	// #46908
     a78:	movk	x0, #0x7f2b, lsl #16
     a7c:	str	x0, [sp, #184]
     a80:	b	1434 <ext2fs_open2+0x1008>
     a84:	ldr	x0, [sp, #88]
     a88:	ldr	x0, [x0, #32]
     a8c:	bl	28 <ext2fs_has_feature_bigalloc>
     a90:	cmp	w0, #0x0
     a94:	b.eq	ab8 <ext2fs_open2+0x68c>  // b.none
     a98:	ldr	w0, [sp, #60]
     a9c:	and	w0, w0, #0x20000
     aa0:	cmp	w0, #0x0
     aa4:	b.ne	ab8 <ext2fs_open2+0x68c>  // b.any
     aa8:	mov	x0, #0xb789                	// #46985
     aac:	movk	x0, #0x7f2b, lsl #16
     ab0:	str	x0, [sp, #184]
     ab4:	b	1434 <ext2fs_open2+0x1008>
     ab8:	ldr	x0, [sp, #88]
     abc:	ldr	x0, [x0, #32]
     ac0:	bl	28 <ext2fs_has_feature_bigalloc>
     ac4:	cmp	w0, #0x0
     ac8:	b.ne	afc <ext2fs_open2+0x6d0>  // b.any
     acc:	ldr	x0, [sp, #88]
     ad0:	ldr	x0, [x0, #32]
     ad4:	ldr	w1, [x0, #24]
     ad8:	ldr	x0, [sp, #88]
     adc:	ldr	x0, [x0, #32]
     ae0:	ldr	w0, [x0, #28]
     ae4:	cmp	w1, w0
     ae8:	b.eq	afc <ext2fs_open2+0x6d0>  // b.none
     aec:	mov	x0, #0xb73c                	// #46908
     af0:	movk	x0, #0x7f2b, lsl #16
     af4:	str	x0, [sp, #184]
     af8:	b	1434 <ext2fs_open2+0x1008>
     afc:	ldr	x0, [sp, #88]
     b00:	ldr	x0, [x0, #32]
     b04:	ldr	w0, [x0, #24]
     b08:	mov	w1, #0x400                 	// #1024
     b0c:	lsl	w1, w1, w0
     b10:	ldr	x0, [sp, #88]
     b14:	str	w1, [x0, #40]
     b18:	ldr	w1, [x0, #40]
     b1c:	ldr	x0, [sp, #88]
     b20:	str	w1, [x0, #44]
     b24:	ldr	x0, [sp, #88]
     b28:	ldr	x0, [x0, #32]
     b2c:	ldr	w0, [x0, #76]
     b30:	cmp	w0, #0x0
     b34:	b.eq	b48 <ext2fs_open2+0x71c>  // b.none
     b38:	ldr	x0, [sp, #88]
     b3c:	ldr	x0, [x0, #32]
     b40:	ldrh	w0, [x0, #88]
     b44:	b	b4c <ext2fs_open2+0x720>
     b48:	mov	w0, #0x80                  	// #128
     b4c:	str	w0, [sp, #116]
     b50:	ldr	w0, [sp, #116]
     b54:	cmp	w0, #0x7f
     b58:	b.ls	b88 <ext2fs_open2+0x75c>  // b.plast
     b5c:	ldr	x0, [sp, #88]
     b60:	ldr	w0, [x0, #40]
     b64:	ldr	w1, [sp, #116]
     b68:	cmp	w1, w0
     b6c:	b.hi	b88 <ext2fs_open2+0x75c>  // b.pmore
     b70:	ldr	w0, [sp, #116]
     b74:	sub	w1, w0, #0x1
     b78:	ldr	w0, [sp, #116]
     b7c:	and	w0, w1, w0
     b80:	cmp	w0, #0x0
     b84:	b.eq	b98 <ext2fs_open2+0x76c>  // b.none
     b88:	mov	x0, #0xb73c                	// #46908
     b8c:	movk	x0, #0x7f2b, lsl #16
     b90:	str	x0, [sp, #184]
     b94:	b	1434 <ext2fs_open2+0x1008>
     b98:	ldr	x0, [sp, #88]
     b9c:	ldr	x0, [x0, #32]
     ba0:	bl	f0 <ext2fs_has_feature_64bit>
     ba4:	cmp	w0, #0x0
     ba8:	b.eq	bd0 <ext2fs_open2+0x7a4>  // b.none
     bac:	ldr	x0, [sp, #88]
     bb0:	ldr	x0, [x0, #32]
     bb4:	ldrh	w0, [x0, #254]
     bb8:	cmp	w0, #0x3f
     bbc:	b.hi	bd0 <ext2fs_open2+0x7a4>  // b.pmore
     bc0:	mov	x0, #0xb791                	// #46993
     bc4:	movk	x0, #0x7f2b, lsl #16
     bc8:	str	x0, [sp, #184]
     bcc:	b	1434 <ext2fs_open2+0x1008>
     bd0:	ldr	x0, [sp, #88]
     bd4:	ldr	x0, [x0, #32]
     bd8:	ldr	w1, [x0, #28]
     bdc:	ldr	x0, [sp, #88]
     be0:	ldr	x0, [x0, #32]
     be4:	ldr	w0, [x0, #24]
     be8:	sub	w1, w1, w0
     bec:	ldr	x0, [sp, #88]
     bf0:	str	w1, [x0, #192]
     bf4:	ldr	x0, [sp, #88]
     bf8:	ldr	x0, [x0, #32]
     bfc:	ldr	w1, [x0, #32]
     c00:	ldr	x0, [sp, #88]
     c04:	ldr	x0, [x0, #32]
     c08:	ldr	w2, [x0, #36]
     c0c:	ldr	x0, [sp, #88]
     c10:	ldr	w0, [x0, #192]
     c14:	lsl	w0, w2, w0
     c18:	cmp	w1, w0
     c1c:	b.eq	c30 <ext2fs_open2+0x804>  // b.none
     c20:	mov	x0, #0xb73c                	// #46908
     c24:	movk	x0, #0x7f2b, lsl #16
     c28:	str	x0, [sp, #184]
     c2c:	b	1434 <ext2fs_open2+0x1008>
     c30:	ldr	x0, [sp, #88]
     c34:	ldr	x0, [x0, #32]
     c38:	ldr	w1, [x0, #40]
     c3c:	ldr	x0, [sp, #88]
     c40:	ldr	x0, [x0, #32]
     c44:	ldr	w0, [x0, #76]
     c48:	cmp	w0, #0x0
     c4c:	b.eq	c60 <ext2fs_open2+0x834>  // b.none
     c50:	ldr	x0, [sp, #88]
     c54:	ldr	x0, [x0, #32]
     c58:	ldrh	w0, [x0, #88]
     c5c:	b	c64 <ext2fs_open2+0x838>
     c60:	mov	w0, #0x80                  	// #128
     c64:	mul	w0, w0, w1
     c68:	ldr	x1, [sp, #88]
     c6c:	ldr	x1, [x1, #32]
     c70:	ldr	w1, [x1, #24]
     c74:	mov	w2, #0x400                 	// #1024
     c78:	lsl	w1, w2, w1
     c7c:	add	w0, w0, w1
     c80:	sub	w2, w0, #0x1
     c84:	ldr	x0, [sp, #88]
     c88:	ldr	x0, [x0, #32]
     c8c:	ldr	w0, [x0, #24]
     c90:	add	w1, w0, #0xa
     c94:	ldr	x0, [sp, #88]
     c98:	lsr	w1, w2, w1
     c9c:	str	w1, [x0, #72]
     ca0:	ldr	w0, [sp, #52]
     ca4:	cmp	w0, #0x0
     ca8:	b.eq	cd0 <ext2fs_open2+0x8a4>  // b.none
     cac:	ldr	x0, [sp, #88]
     cb0:	ldr	w0, [x0, #40]
     cb4:	ldr	w1, [sp, #52]
     cb8:	cmp	w1, w0
     cbc:	b.eq	cd0 <ext2fs_open2+0x8a4>  // b.none
     cc0:	mov	x0, #0xb722                	// #46882
     cc4:	movk	x0, #0x7f2b, lsl #16
     cc8:	str	x0, [sp, #184]
     ccc:	b	1434 <ext2fs_open2+0x1008>
     cd0:	ldr	x0, [sp, #88]
     cd4:	ldr	x0, [x0, #8]
     cd8:	ldr	x0, [x0, #8]
     cdc:	ldr	x2, [x0, #32]
     ce0:	ldr	x0, [sp, #88]
     ce4:	ldr	x3, [x0, #8]
     ce8:	ldr	x0, [sp, #88]
     cec:	ldr	w0, [x0, #40]
     cf0:	mov	w1, w0
     cf4:	mov	x0, x3
     cf8:	blr	x2
     cfc:	ldr	x0, [sp, #88]
     d00:	ldr	x0, [x0, #32]
     d04:	bl	a0 <ext2fs_has_feature_journal_dev>
     d08:	cmp	w0, #0x0
     d0c:	b.eq	d2c <ext2fs_open2+0x900>  // b.none
     d10:	ldr	x0, [sp, #88]
     d14:	str	wzr, [x0, #48]
     d18:	ldr	x1, [sp, #88]
     d1c:	ldr	x0, [sp, #32]
     d20:	str	x1, [x0]
     d24:	mov	x0, #0x0                   	// #0
     d28:	b	1460 <ext2fs_open2+0x1034>
     d2c:	ldr	x0, [sp, #88]
     d30:	ldr	x0, [x0, #32]
     d34:	ldr	w0, [x0, #40]
     d38:	cmp	w0, #0x0
     d3c:	b.ne	d50 <ext2fs_open2+0x924>  // b.any
     d40:	mov	x0, #0xb73c                	// #46908
     d44:	movk	x0, #0x7f2b, lsl #16
     d48:	str	x0, [sp, #184]
     d4c:	b	1434 <ext2fs_open2+0x1008>
     d50:	ldr	x0, [sp, #88]
     d54:	bl	0 <ext2fs_init_csum_seed>
     d58:	ldr	x0, [sp, #88]
     d5c:	ldr	x0, [x0, #32]
     d60:	ldr	w0, [x0, #32]
     d64:	str	w0, [sp, #112]
     d68:	ldr	w0, [sp, #112]
     d6c:	cmp	w0, #0x0
     d70:	b.eq	e90 <ext2fs_open2+0xa64>  // b.none
     d74:	ldr	x0, [sp, #88]
     d78:	ldr	x0, [x0, #32]
     d7c:	ldr	w0, [x0, #28]
     d80:	mov	w1, #0x400                 	// #1024
     d84:	lsl	w1, w1, w0
     d88:	ldr	x0, [sp, #88]
     d8c:	ldr	x0, [x0, #32]
     d90:	ldr	w0, [x0, #24]
     d94:	mov	w2, #0x400                 	// #1024
     d98:	lsl	w0, w2, w0
     d9c:	sdiv	w0, w1, w0
     da0:	mov	w1, w0
     da4:	mov	w0, w1
     da8:	lsl	w0, w0, #13
     dac:	sub	w0, w0, w1
     db0:	lsl	w0, w0, #3
     db4:	mov	w1, w0
     db8:	ldr	w0, [sp, #112]
     dbc:	cmp	w0, w1
     dc0:	b.hi	e90 <ext2fs_open2+0xa64>  // b.pmore
     dc4:	ldr	x0, [sp, #88]
     dc8:	ldr	w1, [x0, #72]
     dcc:	ldr	x0, [sp, #88]
     dd0:	ldr	x0, [x0, #32]
     dd4:	ldr	w0, [x0, #24]
     dd8:	mov	w2, #0x400                 	// #1024
     ddc:	lsl	w2, w2, w0
     de0:	ldr	x0, [sp, #88]
     de4:	ldr	x0, [x0, #32]
     de8:	ldr	w0, [x0, #76]
     dec:	cmp	w0, #0x0
     df0:	b.eq	e04 <ext2fs_open2+0x9d8>  // b.none
     df4:	ldr	x0, [sp, #88]
     df8:	ldr	x0, [x0, #32]
     dfc:	ldrh	w0, [x0, #88]
     e00:	b	e08 <ext2fs_open2+0x9dc>
     e04:	mov	w0, #0x80                  	// #128
     e08:	sdiv	w0, w2, w0
     e0c:	mov	w2, w0
     e10:	mov	w0, #0x10000               	// #65536
     e14:	sub	w0, w0, w2
     e18:	cmp	w1, w0
     e1c:	b.hi	e90 <ext2fs_open2+0xa64>  // b.pmore
     e20:	ldr	x0, [sp, #88]
     e24:	ldr	x0, [x0, #32]
     e28:	ldr	w0, [x0, #24]
     e2c:	mov	w1, #0x400                 	// #1024
     e30:	lsl	w1, w1, w0
     e34:	ldr	x0, [sp, #88]
     e38:	ldr	x0, [x0, #32]
     e3c:	ldr	w0, [x0, #96]
     e40:	and	w0, w0, #0x80
     e44:	cmp	w0, #0x0
     e48:	b.eq	e5c <ext2fs_open2+0xa30>  // b.none
     e4c:	ldr	x0, [sp, #88]
     e50:	ldr	x0, [x0, #32]
     e54:	ldrh	w0, [x0, #254]
     e58:	b	e60 <ext2fs_open2+0xa34>
     e5c:	mov	w0, #0x20                  	// #32
     e60:	sdiv	w0, w1, w0
     e64:	cmp	w0, #0x0
     e68:	b.eq	e90 <ext2fs_open2+0xa64>  // b.none
     e6c:	ldr	x0, [sp, #88]
     e70:	ldr	x0, [x0, #32]
     e74:	ldr	w0, [x0, #20]
     e78:	mov	w19, w0
     e7c:	ldr	x0, [sp, #88]
     e80:	ldr	x0, [x0, #32]
     e84:	bl	0 <ext2fs_blocks_count>
     e88:	cmp	x19, x0
     e8c:	b.cc	ea0 <ext2fs_open2+0xa74>  // b.lo, b.ul, b.last
     e90:	mov	x0, #0xb73c                	// #46908
     e94:	movk	x0, #0x7f2b, lsl #16
     e98:	str	x0, [sp, #184]
     e9c:	b	1434 <ext2fs_open2+0x1008>
     ea0:	ldr	x0, [sp, #88]
     ea4:	ldr	x0, [x0, #32]
     ea8:	bl	0 <ext2fs_blocks_count>
     eac:	mov	x1, x0
     eb0:	ldr	x0, [sp, #88]
     eb4:	ldr	x0, [x0, #32]
     eb8:	ldr	w0, [x0, #20]
     ebc:	mov	w0, w0
     ec0:	sub	x0, x1, x0
     ec4:	ldr	w1, [sp, #112]
     ec8:	bl	0 <ext2fs_div64_ceil>
     ecc:	str	x0, [sp, #104]
     ed0:	ldr	x0, [sp, #104]
     ed4:	lsr	x0, x0, #32
     ed8:	cmp	x0, #0x0
     edc:	b.eq	ef0 <ext2fs_open2+0xac4>  // b.none
     ee0:	mov	x0, #0xb73c                	// #46908
     ee4:	movk	x0, #0x7f2b, lsl #16
     ee8:	str	x0, [sp, #184]
     eec:	b	1434 <ext2fs_open2+0x1008>
     ef0:	ldr	x0, [sp, #88]
     ef4:	ldr	x1, [sp, #104]
     ef8:	str	w1, [x0, #48]
     efc:	ldr	w0, [sp, #60]
     f00:	and	w0, w0, #0x800000
     f04:	cmp	w0, #0x0
     f08:	b.ne	f54 <ext2fs_open2+0xb28>  // b.any
     f0c:	ldr	x0, [sp, #88]
     f10:	ldr	w0, [x0, #48]
     f14:	mov	w1, w0
     f18:	ldr	x0, [sp, #88]
     f1c:	ldr	x0, [x0, #32]
     f20:	ldr	w0, [x0, #40]
     f24:	mov	w0, w0
     f28:	mul	x1, x1, x0
     f2c:	ldr	x0, [sp, #88]
     f30:	ldr	x0, [x0, #32]
     f34:	ldr	w0, [x0]
     f38:	mov	w0, w0
     f3c:	cmp	x1, x0
     f40:	b.eq	f54 <ext2fs_open2+0xb28>  // b.none
     f44:	mov	x0, #0xb73c                	// #46908
     f48:	movk	x0, #0x7f2b, lsl #16
     f4c:	str	x0, [sp, #184]
     f50:	b	1434 <ext2fs_open2+0x1008>
     f54:	ldr	x0, [sp, #88]
     f58:	ldr	w2, [x0, #48]
     f5c:	ldr	x0, [sp, #88]
     f60:	ldr	x0, [x0, #32]
     f64:	ldr	w0, [x0, #24]
     f68:	mov	w1, #0x400                 	// #1024
     f6c:	lsl	w1, w1, w0
     f70:	ldr	x0, [sp, #88]
     f74:	ldr	x0, [x0, #32]
     f78:	ldr	w0, [x0, #96]
     f7c:	and	w0, w0, #0x80
     f80:	cmp	w0, #0x0
     f84:	b.eq	f98 <ext2fs_open2+0xb6c>  // b.none
     f88:	ldr	x0, [sp, #88]
     f8c:	ldr	x0, [x0, #32]
     f90:	ldrh	w0, [x0, #254]
     f94:	b	f9c <ext2fs_open2+0xb70>
     f98:	mov	w0, #0x20                  	// #32
     f9c:	sdiv	w0, w1, w0
     fa0:	mov	w1, w0
     fa4:	mov	w0, w2
     fa8:	bl	0 <ext2fs_div_ceil>
     fac:	mov	w1, w0
     fb0:	ldr	x0, [sp, #88]
     fb4:	mov	w1, w1
     fb8:	str	x1, [x0, #56]
     fbc:	ldr	x0, [sp, #88]
     fc0:	ldr	x3, [x0, #56]
     fc4:	ldr	x0, [sp, #88]
     fc8:	ldr	w0, [x0, #40]
     fcc:	mov	w1, w0
     fd0:	ldr	x0, [sp, #88]
     fd4:	add	x0, x0, #0x40
     fd8:	mov	x2, x0
     fdc:	mov	x0, x3
     fe0:	bl	0 <ext2fs_get_array>
     fe4:	str	x0, [sp, #184]
     fe8:	ldr	x0, [sp, #184]
     fec:	cmp	x0, #0x0
     ff0:	b.ne	1420 <ext2fs_open2+0xff4>  // b.any
     ff4:	ldr	x0, [sp, #152]
     ff8:	cmp	x0, #0x0
     ffc:	b.ne	1014 <ext2fs_open2+0xbe8>  // b.any
    1000:	ldr	x0, [sp, #88]
    1004:	ldr	x0, [x0, #32]
    1008:	ldr	w0, [x0, #20]
    100c:	mov	w0, w0
    1010:	str	x0, [sp, #152]
    1014:	ldr	x0, [sp, #152]
    1018:	cmp	x0, #0x0
    101c:	b.ne	1038 <ext2fs_open2+0xc0c>  // b.any
    1020:	ldr	x0, [sp, #88]
    1024:	ldr	w0, [x0, #40]
    1028:	cmp	w0, #0x400
    102c:	b.ne	1038 <ext2fs_open2+0xc0c>  // b.any
    1030:	mov	w0, #0x1                   	// #1
    1034:	str	w0, [sp, #140]
    1038:	ldr	x0, [sp, #88]
    103c:	ldr	x0, [x0, #64]
    1040:	str	x0, [sp, #144]
    1044:	ldr	x0, [sp, #88]
    1048:	ldr	x0, [x0, #32]
    104c:	bl	c8 <ext2fs_has_feature_meta_bg>
    1050:	cmp	w0, #0x0
    1054:	b.eq	10a0 <ext2fs_open2+0xc74>  // b.none
    1058:	ldr	w0, [sp, #60]
    105c:	and	w0, w0, #0x2000
    1060:	cmp	w0, #0x0
    1064:	b.ne	10a0 <ext2fs_open2+0xc74>  // b.any
    1068:	ldr	x0, [sp, #88]
    106c:	ldr	x0, [x0, #32]
    1070:	ldr	w0, [x0, #260]
    1074:	mov	w0, w0
    1078:	str	x0, [sp, #168]
    107c:	ldr	x0, [sp, #88]
    1080:	ldr	x0, [x0, #56]
    1084:	ldr	x1, [sp, #168]
    1088:	cmp	x1, x0
    108c:	b.ls	10ac <ext2fs_open2+0xc80>  // b.plast
    1090:	ldr	x0, [sp, #88]
    1094:	ldr	x0, [x0, #56]
    1098:	str	x0, [sp, #168]
    109c:	b	10ac <ext2fs_open2+0xc80>
    10a0:	ldr	x0, [sp, #88]
    10a4:	ldr	x0, [x0, #56]
    10a8:	str	x0, [sp, #168]
    10ac:	ldr	x0, [sp, #168]
    10b0:	cmp	x0, #0x0
    10b4:	b.eq	1128 <ext2fs_open2+0xcfc>  // b.none
    10b8:	ldr	x0, [sp, #88]
    10bc:	ldr	x0, [x0, #8]
    10c0:	ldr	x0, [x0, #8]
    10c4:	ldr	x4, [x0, #40]
    10c8:	ldr	x0, [sp, #88]
    10cc:	ldr	x5, [x0, #8]
    10d0:	ldrsw	x1, [sp, #140]
    10d4:	ldr	x0, [sp, #152]
    10d8:	add	x0, x1, x0
    10dc:	add	x0, x0, #0x1
    10e0:	ldr	x1, [sp, #168]
    10e4:	ldr	x3, [sp, #144]
    10e8:	mov	w2, w1
    10ec:	mov	x1, x0
    10f0:	mov	x0, x5
    10f4:	blr	x4
    10f8:	str	x0, [sp, #184]
    10fc:	ldr	x0, [sp, #184]
    1100:	cmp	x0, #0x0
    1104:	b.ne	1428 <ext2fs_open2+0xffc>  // b.any
    1108:	ldr	x0, [sp, #88]
    110c:	ldr	w0, [x0, #40]
    1110:	mov	w1, w0
    1114:	ldr	x0, [sp, #168]
    1118:	mul	x0, x1, x0
    111c:	ldr	x1, [sp, #144]
    1120:	add	x0, x1, x0
    1124:	str	x0, [sp, #144]
    1128:	ldr	x0, [sp, #168]
    112c:	str	x0, [sp, #176]
    1130:	b	116c <ext2fs_open2+0xd40>
    1134:	ldr	x0, [sp, #88]
    1138:	ldr	x1, [sp, #176]
    113c:	mov	w2, w1
    1140:	ldr	x1, [sp, #152]
    1144:	bl	1b0 <ext2fs_descriptor_block_loc2>
    1148:	str	x0, [sp, #96]
    114c:	ldr	x0, [sp, #88]
    1150:	ldr	x0, [x0, #8]
    1154:	mov	x2, #0x1                   	// #1
    1158:	ldr	x1, [sp, #96]
    115c:	bl	0 <io_channel_cache_readahead>
    1160:	ldr	x0, [sp, #176]
    1164:	add	x0, x0, #0x1
    1168:	str	x0, [sp, #176]
    116c:	ldr	x0, [sp, #88]
    1170:	ldr	x0, [x0, #56]
    1174:	ldr	x1, [sp, #176]
    1178:	cmp	x1, x0
    117c:	b.cc	1134 <ext2fs_open2+0xd08>  // b.lo, b.ul, b.last
    1180:	ldr	x0, [sp, #168]
    1184:	str	x0, [sp, #176]
    1188:	b	11f0 <ext2fs_open2+0xdc4>
    118c:	ldr	x0, [sp, #88]
    1190:	ldr	x1, [sp, #176]
    1194:	mov	w2, w1
    1198:	ldr	x1, [sp, #152]
    119c:	bl	1b0 <ext2fs_descriptor_block_loc2>
    11a0:	str	x0, [sp, #96]
    11a4:	ldr	x0, [sp, #88]
    11a8:	ldr	x0, [x0, #8]
    11ac:	ldr	x3, [sp, #144]
    11b0:	mov	w2, #0x1                   	// #1
    11b4:	ldr	x1, [sp, #96]
    11b8:	bl	0 <io_channel_read_blk64>
    11bc:	str	x0, [sp, #184]
    11c0:	ldr	x0, [sp, #184]
    11c4:	cmp	x0, #0x0
    11c8:	b.ne	1430 <ext2fs_open2+0x1004>  // b.any
    11cc:	ldr	x0, [sp, #88]
    11d0:	ldr	w0, [x0, #40]
    11d4:	mov	w0, w0
    11d8:	ldr	x1, [sp, #144]
    11dc:	add	x0, x1, x0
    11e0:	str	x0, [sp, #144]
    11e4:	ldr	x0, [sp, #176]
    11e8:	add	x0, x0, #0x1
    11ec:	str	x0, [sp, #176]
    11f0:	ldr	x0, [sp, #88]
    11f4:	ldr	x0, [x0, #56]
    11f8:	ldr	x1, [sp, #176]
    11fc:	cmp	x1, x0
    1200:	b.cc	118c <ext2fs_open2+0xd60>  // b.lo, b.ul, b.last
    1204:	ldr	x0, [sp, #88]
    1208:	ldr	x0, [x0, #32]
    120c:	ldrh	w1, [x0, #356]
    1210:	ldr	x0, [sp, #88]
    1214:	str	w1, [x0, #152]
    1218:	ldr	w0, [sp, #56]
    121c:	cmp	w0, #0x1
    1220:	b.le	12b4 <ext2fs_open2+0xe88>
    1224:	ldr	x0, [sp, #88]
    1228:	bl	168 <ext2fs_has_group_desc_csum>
    122c:	cmp	w0, #0x0
    1230:	b.eq	12b4 <ext2fs_open2+0xe88>  // b.none
    1234:	str	wzr, [sp, #136]
    1238:	b	1284 <ext2fs_open2+0xe58>
    123c:	ldr	x0, [sp, #88]
    1240:	mov	w2, #0x2                   	// #2
    1244:	ldr	w1, [sp, #136]
    1248:	bl	0 <ext2fs_bg_flags_clear>
    124c:	ldr	x0, [sp, #88]
    1250:	mov	w2, #0x1                   	// #1
    1254:	ldr	w1, [sp, #136]
    1258:	bl	0 <ext2fs_bg_flags_clear>
    125c:	ldr	x0, [sp, #88]
    1260:	mov	w2, #0x0                   	// #0
    1264:	ldr	w1, [sp, #136]
    1268:	bl	0 <ext2fs_bg_itable_unused_set>
    126c:	ldr	x0, [sp, #88]
    1270:	ldr	w1, [sp, #136]
    1274:	bl	0 <ext2fs_group_desc_csum_set>
    1278:	ldr	w0, [sp, #136]
    127c:	add	w0, w0, #0x1
    1280:	str	w0, [sp, #136]
    1284:	ldr	x0, [sp, #88]
    1288:	ldr	w0, [x0, #48]
    128c:	ldr	w1, [sp, #136]
    1290:	cmp	w1, w0
    1294:	b.cc	123c <ext2fs_open2+0xe10>  // b.lo, b.ul, b.last
    1298:	ldr	x0, [sp, #88]
    129c:	ldr	w0, [x0, #16]
    12a0:	and	w0, w0, #0x1
    12a4:	cmp	w0, #0x0
    12a8:	b.eq	12b4 <ext2fs_open2+0xe88>  // b.none
    12ac:	ldr	x0, [sp, #88]
    12b0:	bl	0 <ext2fs_mark_super_dirty>
    12b4:	ldr	x0, [sp, #88]
    12b8:	ldr	x0, [x0, #32]
    12bc:	bl	118 <ext2fs_has_feature_mmp>
    12c0:	cmp	w0, #0x0
    12c4:	b.eq	1324 <ext2fs_open2+0xef8>  // b.none
    12c8:	ldr	w0, [sp, #60]
    12cc:	and	w0, w0, #0x100000
    12d0:	cmp	w0, #0x0
    12d4:	b.ne	1324 <ext2fs_open2+0xef8>  // b.any
    12d8:	ldr	w1, [sp, #60]
    12dc:	mov	w0, #0x4001                	// #16385
    12e0:	and	w0, w1, w0
    12e4:	cmp	w0, #0x0
    12e8:	b.eq	1324 <ext2fs_open2+0xef8>  // b.none
    12ec:	ldr	x0, [sp, #88]
    12f0:	bl	0 <ext2fs_mmp_start>
    12f4:	str	x0, [sp, #184]
    12f8:	ldr	x0, [sp, #184]
    12fc:	cmp	x0, #0x0
    1300:	b.eq	1324 <ext2fs_open2+0xef8>  // b.none
    1304:	ldr	x0, [sp, #88]
    1308:	ldr	w1, [x0, #16]
    130c:	ldr	x0, [sp, #88]
    1310:	orr	w1, w1, #0x100000
    1314:	str	w1, [x0, #16]
    1318:	ldr	x0, [sp, #88]
    131c:	bl	0 <ext2fs_mmp_stop>
    1320:	b	1434 <ext2fs_open2+0x1008>
    1324:	ldr	x0, [sp, #88]
    1328:	ldr	w0, [x0, #16]
    132c:	and	w0, w0, #0x400000
    1330:	cmp	w0, #0x0
    1334:	b.eq	1384 <ext2fs_open2+0xf58>  // b.none
    1338:	ldr	x19, [sp, #88]
    133c:	mov	x2, #0x1000                	// #4096
    1340:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
    1344:	add	x1, x0, #0x0
    1348:	adrp	x0, 0 <ext2fs_djb2_hash>
    134c:	add	x0, x0, #0x0
    1350:	bl	0 <ext2fs_hashmap_create>
    1354:	str	x0, [x19, #352]
    1358:	ldr	x0, [sp, #88]
    135c:	ldr	x0, [x0, #352]
    1360:	cmp	x0, #0x0
    1364:	b.ne	1378 <ext2fs_open2+0xf4c>  // b.any
    1368:	mov	x0, #0xb746                	// #46918
    136c:	movk	x0, #0x7f2b, lsl #16
    1370:	str	x0, [sp, #184]
    1374:	b	1434 <ext2fs_open2+0x1008>
    1378:	ldr	x0, [sp, #88]
    137c:	ldr	x0, [x0, #32]
    1380:	bl	78 <ext2fs_set_feature_shared_blocks>
    1384:	ldr	x0, [sp, #88]
    1388:	ldr	x0, [x0, #32]
    138c:	bl	140 <ext2fs_has_feature_casefold>
    1390:	cmp	w0, #0x0
    1394:	b.eq	13b0 <ext2fs_open2+0xf84>  // b.none
    1398:	ldr	x0, [sp, #88]
    139c:	ldr	x0, [x0, #32]
    13a0:	ldrh	w0, [x0, #636]
    13a4:	ldr	x19, [sp, #88]
    13a8:	bl	0 <ext2fs_load_nls_table>
    13ac:	str	x0, [x19, #360]
    13b0:	ldr	x0, [sp, #88]
    13b4:	ldr	w1, [x0, #16]
    13b8:	ldr	x0, [sp, #88]
    13bc:	and	w1, w1, #0xfffeffff
    13c0:	str	w1, [x0, #16]
    13c4:	ldr	x1, [sp, #88]
    13c8:	ldr	x0, [sp, #32]
    13cc:	str	x1, [x0]
    13d0:	mov	x0, #0x0                   	// #0
    13d4:	b	1460 <ext2fs_open2+0x1034>
    13d8:	nop
    13dc:	b	1434 <ext2fs_open2+0x1008>
    13e0:	nop
    13e4:	b	1434 <ext2fs_open2+0x1008>
    13e8:	nop
    13ec:	b	1434 <ext2fs_open2+0x1008>
    13f0:	nop
    13f4:	b	1434 <ext2fs_open2+0x1008>
    13f8:	nop
    13fc:	b	1434 <ext2fs_open2+0x1008>
    1400:	nop
    1404:	b	1434 <ext2fs_open2+0x1008>
    1408:	nop
    140c:	b	1434 <ext2fs_open2+0x1008>
    1410:	nop
    1414:	b	1434 <ext2fs_open2+0x1008>
    1418:	nop
    141c:	b	1434 <ext2fs_open2+0x1008>
    1420:	nop
    1424:	b	1434 <ext2fs_open2+0x1008>
    1428:	nop
    142c:	b	1434 <ext2fs_open2+0x1008>
    1430:	nop
    1434:	ldr	w0, [sp, #60]
    1438:	and	w0, w0, #0x10000
    143c:	cmp	w0, #0x0
    1440:	b.ne	1450 <ext2fs_open2+0x1024>  // b.any
    1444:	ldr	x0, [sp, #88]
    1448:	bl	0 <ext2fs_free>
    144c:	str	xzr, [sp, #88]
    1450:	ldr	x1, [sp, #88]
    1454:	ldr	x0, [sp, #32]
    1458:	str	x1, [x0]
    145c:	ldr	x0, [sp, #184]
    1460:	ldr	x19, [sp, #16]
    1464:	ldp	x29, x30, [sp], #192
    1468:	ret

000000000000146c <ext2fs_get_data_io>:
    146c:	sub	sp, sp, #0x10
    1470:	str	x0, [sp, #8]
    1474:	str	x1, [sp]
    1478:	ldr	x0, [sp, #8]
    147c:	ldr	w0, [x0, #16]
    1480:	and	w0, w0, #0x2000
    1484:	cmp	w0, #0x0
    1488:	b.ne	1498 <ext2fs_get_data_io+0x2c>  // b.any
    148c:	mov	x0, #0xb75c                	// #46940
    1490:	movk	x0, #0x7f2b, lsl #16
    1494:	b	14d8 <ext2fs_get_data_io+0x6c>
    1498:	ldr	x0, [sp]
    149c:	cmp	x0, #0x0
    14a0:	b.eq	14d4 <ext2fs_get_data_io+0x68>  // b.none
    14a4:	ldr	x0, [sp, #8]
    14a8:	ldr	x1, [x0, #240]
    14ac:	ldr	x0, [sp, #8]
    14b0:	ldr	x0, [x0, #8]
    14b4:	cmp	x1, x0
    14b8:	b.eq	14c8 <ext2fs_get_data_io+0x5c>  // b.none
    14bc:	ldr	x0, [sp, #8]
    14c0:	ldr	x0, [x0, #8]
    14c4:	b	14cc <ext2fs_get_data_io+0x60>
    14c8:	mov	x0, #0x0                   	// #0
    14cc:	ldr	x1, [sp]
    14d0:	str	x0, [x1]
    14d4:	mov	x0, #0x0                   	// #0
    14d8:	add	sp, sp, #0x10
    14dc:	ret

00000000000014e0 <ext2fs_set_data_io>:
    14e0:	sub	sp, sp, #0x10
    14e4:	str	x0, [sp, #8]
    14e8:	str	x1, [sp]
    14ec:	ldr	x0, [sp, #8]
    14f0:	ldr	w0, [x0, #16]
    14f4:	and	w0, w0, #0x2000
    14f8:	cmp	w0, #0x0
    14fc:	b.ne	150c <ext2fs_set_data_io+0x2c>  // b.any
    1500:	mov	x0, #0xb75c                	// #46940
    1504:	movk	x0, #0x7f2b, lsl #16
    1508:	b	1534 <ext2fs_set_data_io+0x54>
    150c:	ldr	x0, [sp]
    1510:	cmp	x0, #0x0
    1514:	b.ne	1524 <ext2fs_set_data_io+0x44>  // b.any
    1518:	ldr	x0, [sp, #8]
    151c:	ldr	x0, [x0, #240]
    1520:	b	1528 <ext2fs_set_data_io+0x48>
    1524:	ldr	x0, [sp]
    1528:	ldr	x1, [sp, #8]
    152c:	str	x0, [x1, #8]
    1530:	mov	x0, #0x0                   	// #0
    1534:	add	sp, sp, #0x10
    1538:	ret

000000000000153c <ext2fs_rewrite_to_io>:
    153c:	stp	x29, x30, [sp, #-48]!
    1540:	mov	x29, sp
    1544:	str	x0, [sp, #24]
    1548:	str	x1, [sp, #16]
    154c:	ldr	x0, [sp, #24]
    1550:	ldr	w0, [x0, #16]
    1554:	and	w0, w0, #0x2000
    1558:	cmp	w0, #0x0
    155c:	b.ne	156c <ext2fs_rewrite_to_io+0x30>  // b.any
    1560:	mov	x0, #0xb75c                	// #46940
    1564:	movk	x0, #0x7f2b, lsl #16
    1568:	b	1690 <ext2fs_rewrite_to_io+0x154>
    156c:	ldr	x0, [sp, #16]
    1570:	ldr	x0, [x0, #8]
    1574:	ldr	x2, [x0, #32]
    1578:	ldr	x0, [sp, #24]
    157c:	ldr	w0, [x0, #40]
    1580:	mov	w1, w0
    1584:	ldr	x0, [sp, #16]
    1588:	blr	x2
    158c:	str	x0, [sp, #40]
    1590:	ldr	x0, [sp, #40]
    1594:	cmp	x0, #0x0
    1598:	b.eq	15a4 <ext2fs_rewrite_to_io+0x68>  // b.none
    159c:	ldr	x0, [sp, #40]
    15a0:	b	1690 <ext2fs_rewrite_to_io+0x154>
    15a4:	ldr	x0, [sp, #24]
    15a8:	ldr	x0, [x0, #240]
    15ac:	ldr	x1, [sp, #16]
    15b0:	cmp	x1, x0
    15b4:	b.eq	15cc <ext2fs_rewrite_to_io+0x90>  // b.none
    15b8:	ldr	x0, [sp, #24]
    15bc:	ldr	x0, [x0, #8]
    15c0:	ldr	x1, [sp, #16]
    15c4:	cmp	x1, x0
    15c8:	b.ne	15d4 <ext2fs_rewrite_to_io+0x98>  // b.any
    15cc:	mov	x0, #0x0                   	// #0
    15d0:	b	1690 <ext2fs_rewrite_to_io+0x154>
    15d4:	ldr	x0, [sp, #24]
    15d8:	ldr	x1, [x0, #240]
    15dc:	ldr	x0, [sp, #24]
    15e0:	ldr	x0, [x0, #8]
    15e4:	cmp	x1, x0
    15e8:	b.eq	1618 <ext2fs_rewrite_to_io+0xdc>  // b.none
    15ec:	ldr	x0, [sp, #24]
    15f0:	ldr	x0, [x0, #240]
    15f4:	cmp	x0, #0x0
    15f8:	b.eq	1618 <ext2fs_rewrite_to_io+0xdc>  // b.none
    15fc:	ldr	x0, [sp, #24]
    1600:	ldr	x0, [x0, #240]
    1604:	ldr	x0, [x0, #8]
    1608:	ldr	x1, [x0, #24]
    160c:	ldr	x0, [sp, #24]
    1610:	ldr	x0, [x0, #240]
    1614:	blr	x1
    1618:	ldr	x0, [sp, #24]
    161c:	ldr	x0, [x0, #8]
    1620:	cmp	x0, #0x0
    1624:	b.eq	1644 <ext2fs_rewrite_to_io+0x108>  // b.none
    1628:	ldr	x0, [sp, #24]
    162c:	ldr	x0, [x0, #8]
    1630:	ldr	x0, [x0, #8]
    1634:	ldr	x1, [x0, #24]
    1638:	ldr	x0, [sp, #24]
    163c:	ldr	x0, [x0, #8]
    1640:	blr	x1
    1644:	ldr	x0, [sp, #24]
    1648:	ldr	x1, [sp, #16]
    164c:	str	x1, [x0, #240]
    1650:	ldr	x0, [sp, #24]
    1654:	ldr	x1, [x0, #240]
    1658:	ldr	x0, [sp, #24]
    165c:	str	x1, [x0, #8]
    1660:	ldr	x0, [sp, #24]
    1664:	ldr	w1, [x0, #16]
    1668:	mov	w0, #0x35                  	// #53
    166c:	orr	w1, w1, w0
    1670:	ldr	x0, [sp, #24]
    1674:	str	w1, [x0, #16]
    1678:	ldr	x0, [sp, #24]
    167c:	ldr	w0, [x0, #16]
    1680:	and	w1, w0, #0xffffdfff
    1684:	ldr	x0, [sp, #24]
    1688:	str	w1, [x0, #16]
    168c:	mov	x0, #0x0                   	// #0
    1690:	ldp	x29, x30, [sp], #48
    1694:	ret

progress.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <int_log10>:
   0:	sub	sp, sp, #0x20
   4:	str	w0, [sp, #12]
   8:	str	wzr, [sp, #28]
   c:	b	38 <int_log10+0x38>
  10:	ldr	w1, [sp, #12]
  14:	mov	w0, #0xcccd                	// #52429
  18:	movk	w0, #0xcccc, lsl #16
  1c:	umull	x0, w1, w0
  20:	lsr	x0, x0, #32
  24:	lsr	w0, w0, #3
  28:	str	w0, [sp, #12]
  2c:	ldr	w0, [sp, #28]
  30:	add	w0, w0, #0x1
  34:	str	w0, [sp, #28]
  38:	ldr	w0, [sp, #12]
  3c:	cmp	w0, #0x0
  40:	b.ne	10 <int_log10+0x10>  // b.any
  44:	ldr	w0, [sp, #28]
  48:	add	sp, sp, #0x20
  4c:	ret

0000000000000050 <ext2fs_numeric_progress_init>:
  50:	stp	x29, x30, [sp, #-48]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	x1, [sp, #32]
  60:	str	x2, [sp, #24]
  64:	str	x3, [sp, #16]
  68:	ldr	x0, [sp, #40]
  6c:	ldr	w0, [x0, #16]
  70:	and	w0, w0, #0x40000
  74:	cmp	w0, #0x0
  78:	b.eq	158 <ext2fs_numeric_progress_init+0x108>  // b.none
  7c:	mov	x2, #0x4f                  	// #79
  80:	mov	w1, #0x20                  	// #32
  84:	adrp	x0, 0 <int_log10>
  88:	add	x0, x0, #0x0
  8c:	bl	0 <memset>
  90:	adrp	x0, 0 <int_log10>
  94:	add	x0, x0, #0x0
  98:	strb	wzr, [x0, #79]
  9c:	mov	x2, #0x4f                  	// #79
  a0:	mov	w1, #0x8                   	// #8
  a4:	adrp	x0, 0 <int_log10>
  a8:	add	x0, x0, #0x0
  ac:	bl	0 <memset>
  b0:	adrp	x0, 0 <int_log10>
  b4:	add	x0, x0, #0x0
  b8:	strb	wzr, [x0, #79]
  bc:	mov	x2, #0x10                  	// #16
  c0:	mov	w1, #0x0                   	// #0
  c4:	ldr	x0, [sp, #32]
  c8:	bl	0 <memset>
  cc:	adrp	x0, 0 <int_log10>
  d0:	add	x0, x0, #0x0
  d4:	bl	0 <getenv>
  d8:	cmp	x0, #0x0
  dc:	b.eq	f4 <ext2fs_numeric_progress_init+0xa4>  // b.none
  e0:	ldr	x0, [sp, #32]
  e4:	ldr	w0, [x0, #12]
  e8:	add	w1, w0, #0x1
  ec:	ldr	x0, [sp, #32]
  f0:	str	w1, [x0, #12]
  f4:	ldr	x0, [sp, #32]
  f8:	ldr	x1, [sp, #16]
  fc:	str	x1, [x0]
 100:	ldr	x0, [sp, #16]
 104:	bl	0 <int_log10>
 108:	mov	w1, w0
 10c:	ldr	x0, [sp, #32]
 110:	str	w1, [x0, #8]
 114:	ldr	x0, [sp, #24]
 118:	cmp	x0, #0x0
 11c:	b.eq	148 <ext2fs_numeric_progress_init+0xf8>  // b.none
 120:	adrp	x0, 0 <stdout>
 124:	add	x0, x0, #0x0
 128:	ldr	x0, [x0]
 12c:	mov	x1, x0
 130:	ldr	x0, [sp, #24]
 134:	bl	0 <fputs>
 138:	adrp	x0, 0 <stdout>
 13c:	add	x0, x0, #0x0
 140:	ldr	x0, [x0]
 144:	bl	0 <fflush>
 148:	adrp	x0, 0 <int_log10>
 14c:	add	x0, x0, #0x0
 150:	str	xzr, [x0]
 154:	b	15c <ext2fs_numeric_progress_init+0x10c>
 158:	nop
 15c:	ldp	x29, x30, [sp], #48
 160:	ret

0000000000000164 <ext2fs_numeric_progress_update>:
 164:	stp	x29, x30, [sp, #-64]!
 168:	mov	x29, sp
 16c:	str	x0, [sp, #40]
 170:	str	x1, [sp, #32]
 174:	str	x2, [sp, #24]
 178:	ldr	x0, [sp, #40]
 17c:	ldr	w0, [x0, #16]
 180:	and	w0, w0, #0x40000
 184:	cmp	w0, #0x0
 188:	b.eq	23c <ext2fs_numeric_progress_update+0xd8>  // b.none
 18c:	ldr	x0, [sp, #32]
 190:	ldr	w0, [x0, #12]
 194:	cmp	w0, #0x0
 198:	b.ne	244 <ext2fs_numeric_progress_update+0xe0>  // b.any
 19c:	mov	x0, #0x0                   	// #0
 1a0:	bl	0 <time>
 1a4:	str	x0, [sp, #56]
 1a8:	adrp	x0, 0 <int_log10>
 1ac:	add	x0, x0, #0x0
 1b0:	ldr	x0, [x0]
 1b4:	ldr	x1, [sp, #56]
 1b8:	cmp	x1, x0
 1bc:	b.eq	24c <ext2fs_numeric_progress_update+0xe8>  // b.none
 1c0:	adrp	x0, 0 <int_log10>
 1c4:	add	x0, x0, #0x0
 1c8:	ldr	x1, [sp, #56]
 1cc:	str	x1, [x0]
 1d0:	ldr	x0, [sp, #32]
 1d4:	ldr	w1, [x0, #8]
 1d8:	ldr	x0, [sp, #32]
 1dc:	ldr	w2, [x0, #8]
 1e0:	ldr	x0, [sp, #32]
 1e4:	ldr	x0, [x0]
 1e8:	mov	x4, x0
 1ec:	mov	w3, w2
 1f0:	ldr	x2, [sp, #24]
 1f4:	adrp	x0, 0 <int_log10>
 1f8:	add	x0, x0, #0x0
 1fc:	bl	0 <printf>
 200:	adrp	x0, 0 <stdout>
 204:	add	x0, x0, #0x0
 208:	ldr	x4, [x0]
 20c:	ldr	x0, [sp, #32]
 210:	ldr	w0, [x0, #8]
 214:	lsl	w0, w0, #1
 218:	add	w1, w0, #0x1
 21c:	adrp	x0, 0 <int_log10>
 220:	add	x3, x0, #0x0
 224:	mov	w2, w1
 228:	adrp	x0, 0 <int_log10>
 22c:	add	x1, x0, #0x0
 230:	mov	x0, x4
 234:	bl	0 <fprintf>
 238:	b	250 <ext2fs_numeric_progress_update+0xec>
 23c:	nop
 240:	b	250 <ext2fs_numeric_progress_update+0xec>
 244:	nop
 248:	b	250 <ext2fs_numeric_progress_update+0xec>
 24c:	nop
 250:	ldp	x29, x30, [sp], #64
 254:	ret

0000000000000258 <ext2fs_numeric_progress_close>:
 258:	stp	x29, x30, [sp, #-48]!
 25c:	mov	x29, sp
 260:	str	x0, [sp, #40]
 264:	str	x1, [sp, #32]
 268:	str	x2, [sp, #24]
 26c:	ldr	x0, [sp, #40]
 270:	ldr	w0, [x0, #16]
 274:	and	w0, w0, #0x40000
 278:	cmp	w0, #0x0
 27c:	b.eq	318 <ext2fs_numeric_progress_close+0xc0>  // b.none
 280:	adrp	x0, 0 <stdout>
 284:	add	x0, x0, #0x0
 288:	ldr	x4, [x0]
 28c:	ldr	x0, [sp, #32]
 290:	ldr	w0, [x0, #8]
 294:	lsl	w0, w0, #1
 298:	add	w1, w0, #0x1
 29c:	adrp	x0, 0 <int_log10>
 2a0:	add	x3, x0, #0x0
 2a4:	mov	w2, w1
 2a8:	adrp	x0, 0 <int_log10>
 2ac:	add	x1, x0, #0x0
 2b0:	mov	x0, x4
 2b4:	bl	0 <fprintf>
 2b8:	adrp	x0, 0 <stdout>
 2bc:	add	x0, x0, #0x0
 2c0:	ldr	x4, [x0]
 2c4:	ldr	x0, [sp, #32]
 2c8:	ldr	w0, [x0, #8]
 2cc:	lsl	w0, w0, #1
 2d0:	add	w1, w0, #0x1
 2d4:	adrp	x0, 0 <int_log10>
 2d8:	add	x3, x0, #0x0
 2dc:	mov	w2, w1
 2e0:	adrp	x0, 0 <int_log10>
 2e4:	add	x1, x0, #0x0
 2e8:	mov	x0, x4
 2ec:	bl	0 <fprintf>
 2f0:	ldr	x0, [sp, #24]
 2f4:	cmp	x0, #0x0
 2f8:	b.eq	31c <ext2fs_numeric_progress_close+0xc4>  // b.none
 2fc:	adrp	x0, 0 <stdout>
 300:	add	x0, x0, #0x0
 304:	ldr	x0, [x0]
 308:	mov	x1, x0
 30c:	ldr	x0, [sp, #24]
 310:	bl	0 <fputs>
 314:	b	31c <ext2fs_numeric_progress_close+0xc4>
 318:	nop
 31c:	ldp	x29, x30, [sp], #48
 320:	ret

punch.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <check_zero_block>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #8]
   8:	str	w1, [sp, #4]
   c:	ldr	x0, [sp, #8]
  10:	str	x0, [sp, #24]
  14:	ldr	w0, [sp, #4]
  18:	str	w0, [sp, #20]
  1c:	b	4c <check_zero_block+0x4c>
  20:	ldr	x0, [sp, #24]
  24:	add	x1, x0, #0x1
  28:	str	x1, [sp, #24]
  2c:	ldrb	w0, [x0]
  30:	cmp	w0, #0x0
  34:	b.eq	40 <check_zero_block+0x40>  // b.none
  38:	mov	w0, #0x0                   	// #0
  3c:	b	5c <check_zero_block+0x5c>
  40:	ldr	w0, [sp, #20]
  44:	sub	w0, w0, #0x1
  48:	str	w0, [sp, #20]
  4c:	ldr	w0, [sp, #20]
  50:	cmp	w0, #0x0
  54:	b.gt	20 <check_zero_block+0x20>
  58:	mov	w0, #0x1                   	// #1
  5c:	add	sp, sp, #0x20
  60:	ret

0000000000000064 <ind_punch>:
  64:	stp	x29, x30, [sp, #-144]!
  68:	mov	x29, sp
  6c:	str	x0, [sp, #72]
  70:	str	x1, [sp, #64]
  74:	str	x2, [sp, #56]
  78:	str	x3, [sp, #48]
  7c:	str	w4, [sp, #44]
  80:	str	x5, [sp, #32]
  84:	str	x6, [sp, #24]
  88:	str	w7, [sp, #40]
  8c:	str	wzr, [sp, #124]
  90:	ldr	x0, [sp, #72]
  94:	ldr	x0, [x0, #32]
  98:	ldr	w0, [x0, #24]
  9c:	add	w1, w0, #0x8
  a0:	ldr	w0, [sp, #44]
  a4:	mul	w0, w1, w0
  a8:	mov	x1, #0x1                   	// #1
  ac:	lsl	x0, x1, x0
  b0:	str	x0, [sp, #112]
  b4:	str	wzr, [sp, #140]
  b8:	str	xzr, [sp, #128]
  bc:	b	27c <ind_punch+0x218>
  c0:	ldr	x1, [sp, #32]
  c4:	ldr	x0, [sp, #24]
  c8:	add	x0, x1, x0
  cc:	ldr	x1, [sp, #128]
  d0:	cmp	x1, x0
  d4:	b.cs	290 <ind_punch+0x22c>  // b.hs, b.nlast
  d8:	ldr	x0, [sp, #48]
  dc:	ldr	w0, [x0]
  e0:	cmp	w0, #0x0
  e4:	b.eq	248 <ind_punch+0x1e4>  // b.none
  e8:	ldr	x1, [sp, #128]
  ec:	ldr	x0, [sp, #112]
  f0:	add	x0, x1, x0
  f4:	ldr	x1, [sp, #32]
  f8:	cmp	x1, x0
  fc:	b.cs	248 <ind_punch+0x1e4>  // b.hs, b.nlast
 100:	ldr	x0, [sp, #48]
 104:	ldr	w0, [x0]
 108:	str	w0, [sp, #108]
 10c:	ldr	w0, [sp, #44]
 110:	cmp	w0, #0x0
 114:	b.le	220 <ind_punch+0x1bc>
 118:	ldr	x2, [sp, #56]
 11c:	ldr	w1, [sp, #108]
 120:	ldr	x0, [sp, #72]
 124:	bl	0 <ext2fs_read_ind_block>
 128:	str	x0, [sp, #96]
 12c:	ldr	x0, [sp, #96]
 130:	cmp	x0, #0x0
 134:	b.eq	140 <ind_punch+0xdc>  // b.none
 138:	ldr	x0, [sp, #96]
 13c:	b	2a8 <ind_punch+0x244>
 140:	ldr	x1, [sp, #32]
 144:	ldr	x0, [sp, #128]
 148:	cmp	x1, x0
 14c:	b.ls	164 <ind_punch+0x100>  // b.plast
 150:	ldr	x0, [sp, #32]
 154:	mov	w1, w0
 158:	ldr	x0, [sp, #128]
 15c:	sub	w0, w1, w0
 160:	b	168 <ind_punch+0x104>
 164:	mov	w0, #0x0                   	// #0
 168:	str	w0, [sp, #92]
 16c:	ldr	x0, [sp, #72]
 170:	ldr	w0, [x0, #40]
 174:	mov	w0, w0
 178:	ldr	x1, [sp, #56]
 17c:	add	x2, x1, x0
 180:	ldr	w0, [sp, #44]
 184:	sub	w3, w0, #0x1
 188:	ldr	w4, [sp, #92]
 18c:	ldr	x1, [sp, #24]
 190:	ldr	x0, [sp, #128]
 194:	sub	x1, x1, x0
 198:	ldr	x0, [sp, #72]
 19c:	ldr	w0, [x0, #40]
 1a0:	lsr	w0, w0, #2
 1a4:	mov	w7, w0
 1a8:	mov	x6, x1
 1ac:	mov	x5, x4
 1b0:	mov	w4, w3
 1b4:	ldr	x3, [sp, #56]
 1b8:	ldr	x1, [sp, #64]
 1bc:	ldr	x0, [sp, #72]
 1c0:	bl	64 <ind_punch>
 1c4:	str	x0, [sp, #96]
 1c8:	ldr	x0, [sp, #96]
 1cc:	cmp	x0, #0x0
 1d0:	b.eq	1dc <ind_punch+0x178>  // b.none
 1d4:	ldr	x0, [sp, #96]
 1d8:	b	2a8 <ind_punch+0x244>
 1dc:	ldr	x2, [sp, #56]
 1e0:	ldr	w1, [sp, #108]
 1e4:	ldr	x0, [sp, #72]
 1e8:	bl	0 <ext2fs_write_ind_block>
 1ec:	str	x0, [sp, #96]
 1f0:	ldr	x0, [sp, #96]
 1f4:	cmp	x0, #0x0
 1f8:	b.eq	204 <ind_punch+0x1a0>  // b.none
 1fc:	ldr	x0, [sp, #96]
 200:	b	2a8 <ind_punch+0x244>
 204:	ldr	x0, [sp, #72]
 208:	ldr	w0, [x0, #40]
 20c:	mov	w1, w0
 210:	ldr	x0, [sp, #56]
 214:	bl	0 <check_zero_block>
 218:	cmp	w0, #0x0
 21c:	b.eq	250 <ind_punch+0x1ec>  // b.none
 220:	mov	w2, #0xffffffff            	// #-1
 224:	ldr	w1, [sp, #108]
 228:	ldr	x0, [sp, #72]
 22c:	bl	0 <ext2fs_block_alloc_stats>
 230:	ldr	x0, [sp, #48]
 234:	str	wzr, [x0]
 238:	ldr	w0, [sp, #124]
 23c:	add	w0, w0, #0x1
 240:	str	w0, [sp, #124]
 244:	b	254 <ind_punch+0x1f0>
 248:	nop
 24c:	b	254 <ind_punch+0x1f0>
 250:	nop
 254:	ldr	w0, [sp, #140]
 258:	add	w0, w0, #0x1
 25c:	str	w0, [sp, #140]
 260:	ldr	x0, [sp, #48]
 264:	add	x0, x0, #0x4
 268:	str	x0, [sp, #48]
 26c:	ldr	x1, [sp, #128]
 270:	ldr	x0, [sp, #112]
 274:	add	x0, x1, x0
 278:	str	x0, [sp, #128]
 27c:	ldr	w1, [sp, #140]
 280:	ldr	w0, [sp, #40]
 284:	cmp	w1, w0
 288:	b.lt	c0 <ind_punch+0x5c>  // b.tstop
 28c:	b	294 <ind_punch+0x230>
 290:	nop
 294:	ldrsw	x0, [sp, #124]
 298:	mov	x2, x0
 29c:	ldr	x1, [sp, #64]
 2a0:	ldr	x0, [sp, #72]
 2a4:	bl	0 <ext2fs_iblk_sub_blocks>
 2a8:	ldp	x29, x30, [sp], #144
 2ac:	ret

00000000000002b0 <ext2fs_punch_ind>:
 2b0:	stp	x29, x30, [sp, #-112]!
 2b4:	mov	x29, sp
 2b8:	str	x0, [sp, #56]
 2bc:	str	x1, [sp, #48]
 2c0:	str	x2, [sp, #40]
 2c4:	str	x3, [sp, #32]
 2c8:	str	x4, [sp, #24]
 2cc:	str	xzr, [sp, #64]
 2d0:	mov	w0, #0xc                   	// #12
 2d4:	str	w0, [sp, #96]
 2d8:	ldr	x0, [sp, #48]
 2dc:	add	x0, x0, #0x28
 2e0:	str	x0, [sp, #88]
 2e4:	mov	x0, #0xc                   	// #12
 2e8:	str	x0, [sp, #80]
 2ec:	ldr	x1, [sp, #32]
 2f0:	mov	x0, #0xffffffff            	// #4294967295
 2f4:	cmp	x1, x0
 2f8:	b.ls	304 <ext2fs_punch_ind+0x54>  // b.plast
 2fc:	mov	x0, #0x0                   	// #0
 300:	b	4cc <ext2fs_punch_ind+0x21c>
 304:	ldr	x1, [sp, #24]
 308:	mov	x0, #0xfffffffe            	// #4294967294
 30c:	cmp	x1, x0
 310:	b.hi	330 <ext2fs_punch_ind+0x80>  // b.pmore
 314:	ldr	x1, [sp, #24]
 318:	ldr	x0, [sp, #32]
 31c:	sub	x0, x1, x0
 320:	add	x1, x0, #0x1
 324:	mov	x0, #0xfffffffe            	// #4294967294
 328:	cmp	x1, x0
 32c:	b.ls	340 <ext2fs_punch_ind+0x90>  // b.plast
 330:	ldr	x0, [sp, #32]
 334:	mvn	w0, w0
 338:	str	w0, [sp, #76]
 33c:	b	358 <ext2fs_punch_ind+0xa8>
 340:	ldr	x0, [sp, #24]
 344:	mov	w1, w0
 348:	ldr	x0, [sp, #32]
 34c:	sub	w0, w1, w0
 350:	add	w0, w0, #0x1
 354:	str	w0, [sp, #76]
 358:	ldr	x0, [sp, #40]
 35c:	cmp	x0, #0x0
 360:	b.ne	3a4 <ext2fs_punch_ind+0xf4>  // b.any
 364:	ldr	x0, [sp, #56]
 368:	ldr	w0, [x0, #40]
 36c:	mov	w0, w0
 370:	add	x1, sp, #0x40
 374:	mov	x2, x1
 378:	mov	x1, x0
 37c:	mov	x0, #0x3                   	// #3
 380:	bl	0 <ext2fs_get_array>
 384:	str	x0, [sp, #104]
 388:	ldr	x0, [sp, #104]
 38c:	cmp	x0, #0x0
 390:	b.eq	39c <ext2fs_punch_ind+0xec>  // b.none
 394:	ldr	x0, [sp, #104]
 398:	b	4cc <ext2fs_punch_ind+0x21c>
 39c:	ldr	x0, [sp, #64]
 3a0:	str	x0, [sp, #40]
 3a4:	ldr	x0, [sp, #56]
 3a8:	ldr	w0, [x0, #40]
 3ac:	lsr	w0, w0, #2
 3b0:	str	w0, [sp, #72]
 3b4:	str	wzr, [sp, #100]
 3b8:	b	494 <ext2fs_punch_ind+0x1e4>
 3bc:	ldr	x1, [sp, #32]
 3c0:	ldr	x0, [sp, #80]
 3c4:	cmp	x1, x0
 3c8:	b.cs	438 <ext2fs_punch_ind+0x188>  // b.hs, b.nlast
 3cc:	ldr	w0, [sp, #76]
 3d0:	ldr	w7, [sp, #96]
 3d4:	mov	x6, x0
 3d8:	ldr	x5, [sp, #32]
 3dc:	ldr	w4, [sp, #100]
 3e0:	ldr	x3, [sp, #88]
 3e4:	ldr	x2, [sp, #40]
 3e8:	ldr	x1, [sp, #48]
 3ec:	ldr	x0, [sp, #56]
 3f0:	bl	64 <ind_punch>
 3f4:	str	x0, [sp, #104]
 3f8:	ldr	x0, [sp, #104]
 3fc:	cmp	x0, #0x0
 400:	b.ne	4b0 <ext2fs_punch_ind+0x200>  // b.any
 404:	ldr	w0, [sp, #76]
 408:	ldr	x1, [sp, #80]
 40c:	cmp	x1, x0
 410:	b.cs	4a4 <ext2fs_punch_ind+0x1f4>  // b.hs, b.nlast
 414:	ldr	x0, [sp, #32]
 418:	mov	w1, w0
 41c:	ldr	x0, [sp, #80]
 420:	sub	w0, w1, w0
 424:	ldr	w1, [sp, #76]
 428:	add	w0, w1, w0
 42c:	str	w0, [sp, #76]
 430:	str	xzr, [sp, #32]
 434:	b	448 <ext2fs_punch_ind+0x198>
 438:	ldr	x1, [sp, #32]
 43c:	ldr	x0, [sp, #80]
 440:	sub	x0, x1, x0
 444:	str	x0, [sp, #32]
 448:	ldrsw	x0, [sp, #96]
 44c:	lsl	x0, x0, #2
 450:	ldr	x1, [sp, #88]
 454:	add	x0, x1, x0
 458:	str	x0, [sp, #88]
 45c:	ldr	w0, [sp, #100]
 460:	cmp	w0, #0x0
 464:	b.ne	478 <ext2fs_punch_ind+0x1c8>  // b.any
 468:	mov	w0, #0x1                   	// #1
 46c:	str	w0, [sp, #96]
 470:	mov	x0, #0x1                   	// #1
 474:	str	x0, [sp, #80]
 478:	ldr	w0, [sp, #100]
 47c:	add	w0, w0, #0x1
 480:	str	w0, [sp, #100]
 484:	ldr	w0, [sp, #72]
 488:	ldr	x1, [sp, #80]
 48c:	mul	x0, x1, x0
 490:	str	x0, [sp, #80]
 494:	ldr	w0, [sp, #100]
 498:	cmp	w0, #0x3
 49c:	b.le	3bc <ext2fs_punch_ind+0x10c>
 4a0:	b	4a8 <ext2fs_punch_ind+0x1f8>
 4a4:	nop
 4a8:	str	xzr, [sp, #104]
 4ac:	b	4b4 <ext2fs_punch_ind+0x204>
 4b0:	nop
 4b4:	ldr	x0, [sp, #64]
 4b8:	cmp	x0, #0x0
 4bc:	b.eq	4c8 <ext2fs_punch_ind+0x218>  // b.none
 4c0:	add	x0, sp, #0x40
 4c4:	bl	0 <ext2fs_free_mem>
 4c8:	ldr	x0, [sp, #104]
 4cc:	ldp	x29, x30, [sp], #112
 4d0:	ret

00000000000004d4 <punch_extent_blocks>:
 4d4:	stp	x29, x30, [sp, #-96]!
 4d8:	mov	x29, sp
 4dc:	str	x0, [sp, #56]
 4e0:	str	w1, [sp, #52]
 4e4:	str	x2, [sp, #40]
 4e8:	str	x3, [sp, #32]
 4ec:	str	x4, [sp, #24]
 4f0:	str	w5, [sp, #48]
 4f4:	str	x6, [sp, #16]
 4f8:	str	wzr, [sp, #92]
 4fc:	str	xzr, [sp, #80]
 500:	ldr	x0, [sp, #56]
 504:	ldr	w0, [x0, #192]
 508:	cmp	w0, #0x0
 50c:	b.ne	56c <punch_extent_blocks+0x98>  // b.any
 510:	ldr	x0, [sp, #16]
 514:	ldr	w0, [x0]
 518:	mov	w1, w0
 51c:	ldr	w0, [sp, #48]
 520:	add	w0, w1, w0
 524:	mov	w1, w0
 528:	ldr	x0, [sp, #16]
 52c:	str	w1, [x0]
 530:	b	550 <punch_extent_blocks+0x7c>
 534:	ldr	x0, [sp, #24]
 538:	add	x1, x0, #0x1
 53c:	str	x1, [sp, #24]
 540:	mov	w2, #0xffffffff            	// #-1
 544:	mov	x1, x0
 548:	ldr	x0, [sp, #56]
 54c:	bl	0 <ext2fs_block_alloc_stats2>
 550:	ldr	w0, [sp, #48]
 554:	sub	w1, w0, #0x1
 558:	str	w1, [sp, #48]
 55c:	cmp	w0, #0x0
 560:	b.ne	534 <punch_extent_blocks+0x60>  // b.any
 564:	ldr	x0, [sp, #80]
 568:	b	790 <punch_extent_blocks+0x2bc>
 56c:	ldr	x0, [sp, #56]
 570:	ldr	w0, [x0, #192]
 574:	mov	w1, #0x1                   	// #1
 578:	lsl	w0, w1, w0
 57c:	sub	w0, w0, #0x1
 580:	sxtw	x1, w0
 584:	ldr	x0, [sp, #24]
 588:	and	x0, x1, x0
 58c:	cmp	x0, #0x0
 590:	b.eq	6d0 <punch_extent_blocks+0x1fc>  // b.none
 594:	add	x0, sp, #0x48
 598:	mov	x4, x0
 59c:	ldr	x3, [sp, #32]
 5a0:	ldr	x2, [sp, #40]
 5a4:	ldr	w1, [sp, #52]
 5a8:	ldr	x0, [sp, #56]
 5ac:	bl	0 <ext2fs_map_cluster_block>
 5b0:	str	x0, [sp, #80]
 5b4:	ldr	x0, [sp, #80]
 5b8:	cmp	x0, #0x0
 5bc:	b.ne	760 <punch_extent_blocks+0x28c>  // b.any
 5c0:	ldr	x0, [sp, #72]
 5c4:	cmp	x0, #0x0
 5c8:	b.ne	5e8 <punch_extent_blocks+0x114>  // b.any
 5cc:	mov	w2, #0xffffffff            	// #-1
 5d0:	ldr	x1, [sp, #24]
 5d4:	ldr	x0, [sp, #56]
 5d8:	bl	0 <ext2fs_block_alloc_stats2>
 5dc:	ldr	w0, [sp, #92]
 5e0:	add	w0, w0, #0x1
 5e4:	str	w0, [sp, #92]
 5e8:	ldr	x0, [sp, #56]
 5ec:	ldr	w0, [x0, #192]
 5f0:	mov	w1, #0x1                   	// #1
 5f4:	lsl	w0, w1, w0
 5f8:	mov	w2, w0
 5fc:	ldr	x0, [sp, #56]
 600:	ldr	w0, [x0, #192]
 604:	mov	w1, #0x1                   	// #1
 608:	lsl	w0, w1, w0
 60c:	sub	w0, w0, #0x1
 610:	mov	w1, w0
 614:	ldr	x0, [sp, #24]
 618:	and	w0, w1, w0
 61c:	sub	w0, w2, w0
 620:	str	w0, [sp, #88]
 624:	ldr	w1, [sp, #88]
 628:	ldr	w0, [sp, #48]
 62c:	cmp	w1, w0
 630:	b.ls	63c <punch_extent_blocks+0x168>  // b.plast
 634:	ldr	w0, [sp, #48]
 638:	str	w0, [sp, #88]
 63c:	ldr	w1, [sp, #48]
 640:	ldr	w0, [sp, #88]
 644:	sub	w0, w1, w0
 648:	str	w0, [sp, #48]
 64c:	ldr	w0, [sp, #88]
 650:	ldr	x1, [sp, #24]
 654:	add	x0, x1, x0
 658:	str	x0, [sp, #24]
 65c:	ldr	w0, [sp, #88]
 660:	ldr	x1, [sp, #32]
 664:	add	x0, x1, x0
 668:	str	x0, [sp, #32]
 66c:	b	6d0 <punch_extent_blocks+0x1fc>
 670:	mov	w2, #0xffffffff            	// #-1
 674:	ldr	x1, [sp, #24]
 678:	ldr	x0, [sp, #56]
 67c:	bl	0 <ext2fs_block_alloc_stats2>
 680:	ldr	w0, [sp, #92]
 684:	add	w0, w0, #0x1
 688:	str	w0, [sp, #92]
 68c:	ldr	x0, [sp, #56]
 690:	ldr	w0, [x0, #192]
 694:	mov	w1, #0x1                   	// #1
 698:	lsl	w0, w1, w0
 69c:	str	w0, [sp, #88]
 6a0:	ldr	w1, [sp, #48]
 6a4:	ldr	w0, [sp, #88]
 6a8:	sub	w0, w1, w0
 6ac:	str	w0, [sp, #48]
 6b0:	ldr	w0, [sp, #88]
 6b4:	ldr	x1, [sp, #24]
 6b8:	add	x0, x1, x0
 6bc:	str	x0, [sp, #24]
 6c0:	ldr	w0, [sp, #88]
 6c4:	ldr	x1, [sp, #32]
 6c8:	add	x0, x1, x0
 6cc:	str	x0, [sp, #32]
 6d0:	ldr	w0, [sp, #48]
 6d4:	cmp	w0, #0x0
 6d8:	b.eq	6fc <punch_extent_blocks+0x228>  // b.none
 6dc:	ldr	x0, [sp, #56]
 6e0:	ldr	w0, [x0, #192]
 6e4:	mov	w1, #0x1                   	// #1
 6e8:	lsl	w0, w1, w0
 6ec:	mov	w1, w0
 6f0:	ldr	w0, [sp, #48]
 6f4:	cmp	w0, w1
 6f8:	b.cs	670 <punch_extent_blocks+0x19c>  // b.hs, b.nlast
 6fc:	ldr	w0, [sp, #48]
 700:	cmp	w0, #0x0
 704:	b.eq	768 <punch_extent_blocks+0x294>  // b.none
 708:	add	x0, sp, #0x48
 70c:	mov	x4, x0
 710:	ldr	x3, [sp, #32]
 714:	ldr	x2, [sp, #40]
 718:	ldr	w1, [sp, #52]
 71c:	ldr	x0, [sp, #56]
 720:	bl	0 <ext2fs_map_cluster_block>
 724:	str	x0, [sp, #80]
 728:	ldr	x0, [sp, #80]
 72c:	cmp	x0, #0x0
 730:	b.ne	770 <punch_extent_blocks+0x29c>  // b.any
 734:	ldr	x0, [sp, #72]
 738:	cmp	x0, #0x0
 73c:	b.ne	768 <punch_extent_blocks+0x294>  // b.any
 740:	mov	w2, #0xffffffff            	// #-1
 744:	ldr	x1, [sp, #24]
 748:	ldr	x0, [sp, #56]
 74c:	bl	0 <ext2fs_block_alloc_stats2>
 750:	ldr	w0, [sp, #92]
 754:	add	w0, w0, #0x1
 758:	str	w0, [sp, #92]
 75c:	b	774 <punch_extent_blocks+0x2a0>
 760:	nop
 764:	b	774 <punch_extent_blocks+0x2a0>
 768:	nop
 76c:	b	774 <punch_extent_blocks+0x2a0>
 770:	nop
 774:	ldr	x0, [sp, #16]
 778:	ldr	w1, [x0]
 77c:	ldr	w0, [sp, #92]
 780:	add	w1, w1, w0
 784:	ldr	x0, [sp, #16]
 788:	str	w1, [x0]
 78c:	ldr	x0, [sp, #80]
 790:	ldp	x29, x30, [sp], #96
 794:	ret

0000000000000798 <ext2fs_punch_extent>:
 798:	stp	x29, x30, [sp, #-224]!
 79c:	mov	x29, sp
 7a0:	str	x0, [sp, #56]
 7a4:	str	w1, [sp, #52]
 7a8:	str	x2, [sp, #40]
 7ac:	str	x3, [sp, #32]
 7b0:	str	x4, [sp, #24]
 7b4:	str	xzr, [sp, #152]
 7b8:	str	wzr, [sp, #124]
 7bc:	add	x0, sp, #0x98
 7c0:	mov	x3, x0
 7c4:	ldr	x2, [sp, #40]
 7c8:	ldr	w1, [sp, #52]
 7cc:	ldr	x0, [sp, #56]
 7d0:	bl	0 <ext2fs_extent_open2>
 7d4:	str	x0, [sp, #216]
 7d8:	ldr	x0, [sp, #216]
 7dc:	cmp	x0, #0x0
 7e0:	b.eq	7ec <ext2fs_punch_extent+0x54>  // b.none
 7e4:	ldr	x0, [sp, #216]
 7e8:	b	cb0 <ext2fs_punch_extent+0x518>
 7ec:	ldr	x0, [sp, #152]
 7f0:	ldr	x1, [sp, #32]
 7f4:	bl	0 <ext2fs_extent_goto>
 7f8:	ldr	x0, [sp, #152]
 7fc:	add	x1, sp, #0x80
 800:	mov	x2, x1
 804:	mov	w1, #0x0                   	// #0
 808:	bl	0 <ext2fs_extent_get>
 80c:	str	x0, [sp, #216]
 810:	ldr	x1, [sp, #216]
 814:	mov	x0, #0xb780                	// #46976
 818:	movk	x0, #0x7f2b, lsl #16
 81c:	cmp	x1, x0
 820:	b.ne	82c <ext2fs_punch_extent+0x94>  // b.any
 824:	str	xzr, [sp, #216]
 828:	b	ca4 <ext2fs_punch_extent+0x50c>
 82c:	ldr	x0, [sp, #216]
 830:	cmp	x0, #0x0
 834:	b.ne	c40 <ext2fs_punch_extent+0x4a8>  // b.any
 838:	mov	w0, #0x7                   	// #7
 83c:	str	w0, [sp, #192]
 840:	ldr	x1, [sp, #136]
 844:	ldr	w0, [sp, #144]
 848:	mov	w0, w0
 84c:	add	x0, x1, x0
 850:	str	x0, [sp, #176]
 854:	ldr	x0, [sp, #136]
 858:	ldr	x1, [sp, #32]
 85c:	cmp	x1, x0
 860:	b.hi	8ec <ext2fs_punch_extent+0x154>  // b.pmore
 864:	ldr	x0, [sp, #136]
 868:	ldr	x1, [sp, #24]
 86c:	cmp	x1, x0
 870:	b.cc	c1c <ext2fs_punch_extent+0x484>  // b.lo, b.ul, b.last
 874:	ldr	x0, [sp, #128]
 878:	str	x0, [sp, #208]
 87c:	ldr	x0, [sp, #136]
 880:	str	x0, [sp, #200]
 884:	ldr	x1, [sp, #176]
 888:	ldr	x0, [sp, #24]
 88c:	cmp	x1, x0
 890:	b.ls	8b0 <ext2fs_punch_extent+0x118>  // b.plast
 894:	ldr	x0, [sp, #24]
 898:	mov	w1, w0
 89c:	ldr	x0, [sp, #136]
 8a0:	sub	w0, w1, w0
 8a4:	add	w0, w0, #0x1
 8a8:	str	w0, [sp, #196]
 8ac:	b	8b8 <ext2fs_punch_extent+0x120>
 8b0:	ldr	w0, [sp, #144]
 8b4:	str	w0, [sp, #196]
 8b8:	ldr	w1, [sp, #144]
 8bc:	ldr	w0, [sp, #196]
 8c0:	sub	w0, w1, w0
 8c4:	str	w0, [sp, #144]
 8c8:	ldr	x1, [sp, #136]
 8cc:	ldr	w0, [sp, #196]
 8d0:	add	x0, x1, x0
 8d4:	str	x0, [sp, #136]
 8d8:	ldr	x1, [sp, #128]
 8dc:	ldr	w0, [sp, #196]
 8e0:	add	x0, x1, x0
 8e4:	str	x0, [sp, #128]
 8e8:	b	a54 <ext2fs_punch_extent+0x2bc>
 8ec:	ldr	x0, [sp, #176]
 8f0:	sub	x0, x0, #0x1
 8f4:	ldr	x1, [sp, #24]
 8f8:	cmp	x1, x0
 8fc:	b.cc	960 <ext2fs_punch_extent+0x1c8>  // b.lo, b.ul, b.last
 900:	ldr	x1, [sp, #32]
 904:	ldr	x0, [sp, #176]
 908:	cmp	x1, x0
 90c:	b.cs	bc8 <ext2fs_punch_extent+0x430>  // b.hs, b.nlast
 910:	ldr	x0, [sp, #32]
 914:	mov	w1, w0
 918:	ldr	x0, [sp, #136]
 91c:	sub	w0, w1, w0
 920:	str	w0, [sp, #172]
 924:	ldr	x1, [sp, #128]
 928:	ldr	w0, [sp, #172]
 92c:	add	x0, x1, x0
 930:	str	x0, [sp, #208]
 934:	ldr	x1, [sp, #136]
 938:	ldr	w0, [sp, #172]
 93c:	add	x0, x1, x0
 940:	str	x0, [sp, #200]
 944:	ldr	w1, [sp, #144]
 948:	ldr	w0, [sp, #172]
 94c:	sub	w0, w1, w0
 950:	str	w0, [sp, #196]
 954:	ldr	w0, [sp, #172]
 958:	str	w0, [sp, #144]
 95c:	b	a54 <ext2fs_punch_extent+0x2bc>
 960:	ldr	x1, [sp, #128]
 964:	ldr	x0, [sp, #136]
 968:	ldr	x2, [sp, #24]
 96c:	sub	x0, x2, x0
 970:	add	x0, x1, x0
 974:	add	x0, x0, #0x1
 978:	str	x0, [sp, #96]
 97c:	ldr	x0, [sp, #24]
 980:	add	x0, x0, #0x1
 984:	str	x0, [sp, #104]
 988:	ldr	x0, [sp, #176]
 98c:	mov	w1, w0
 990:	ldr	x0, [sp, #24]
 994:	sub	w0, w1, w0
 998:	sub	w0, w0, #0x1
 99c:	str	w0, [sp, #112]
 9a0:	ldr	w0, [sp, #148]
 9a4:	str	w0, [sp, #116]
 9a8:	ldr	x0, [sp, #32]
 9ac:	mov	w1, w0
 9b0:	ldr	x0, [sp, #136]
 9b4:	sub	w0, w1, w0
 9b8:	str	w0, [sp, #144]
 9bc:	ldr	x1, [sp, #128]
 9c0:	ldr	w0, [sp, #144]
 9c4:	mov	w0, w0
 9c8:	add	x0, x1, x0
 9cc:	str	x0, [sp, #208]
 9d0:	ldr	x1, [sp, #136]
 9d4:	ldr	w0, [sp, #144]
 9d8:	mov	w0, w0
 9dc:	add	x0, x1, x0
 9e0:	str	x0, [sp, #200]
 9e4:	ldr	x0, [sp, #24]
 9e8:	mov	w1, w0
 9ec:	ldr	x0, [sp, #32]
 9f0:	sub	w0, w1, w0
 9f4:	add	w0, w0, #0x1
 9f8:	str	w0, [sp, #196]
 9fc:	ldr	x0, [sp, #152]
 a00:	add	x1, sp, #0x60
 a04:	mov	x2, x1
 a08:	mov	w1, #0x1                   	// #1
 a0c:	bl	0 <ext2fs_extent_insert>
 a10:	str	x0, [sp, #216]
 a14:	ldr	x0, [sp, #216]
 a18:	cmp	x0, #0x0
 a1c:	b.ne	c48 <ext2fs_punch_extent+0x4b0>  // b.any
 a20:	ldr	x0, [sp, #152]
 a24:	bl	0 <ext2fs_extent_fix_parents>
 a28:	str	x0, [sp, #216]
 a2c:	ldr	x0, [sp, #216]
 a30:	cmp	x0, #0x0
 a34:	b.ne	c50 <ext2fs_punch_extent+0x4b8>  // b.any
 a38:	ldr	x0, [sp, #152]
 a3c:	ldr	x1, [sp, #136]
 a40:	bl	0 <ext2fs_extent_goto>
 a44:	str	x0, [sp, #216]
 a48:	ldr	x0, [sp, #216]
 a4c:	cmp	x0, #0x0
 a50:	b.ne	c58 <ext2fs_punch_extent+0x4c0>  // b.any
 a54:	ldr	w0, [sp, #144]
 a58:	cmp	w0, #0x0
 a5c:	b.eq	a94 <ext2fs_punch_extent+0x2fc>  // b.none
 a60:	ldr	x0, [sp, #152]
 a64:	add	x1, sp, #0x80
 a68:	mov	x2, x1
 a6c:	mov	w1, #0x0                   	// #0
 a70:	bl	0 <ext2fs_extent_replace>
 a74:	str	x0, [sp, #216]
 a78:	ldr	x0, [sp, #216]
 a7c:	cmp	x0, #0x0
 a80:	b.ne	c60 <ext2fs_punch_extent+0x4c8>  // b.any
 a84:	ldr	x0, [sp, #152]
 a88:	bl	0 <ext2fs_extent_fix_parents>
 a8c:	str	x0, [sp, #216]
 a90:	b	b84 <ext2fs_punch_extent+0x3ec>
 a94:	ldr	x0, [sp, #152]
 a98:	add	x1, sp, #0x48
 a9c:	mov	x2, x1
 aa0:	mov	w1, #0x0                   	// #0
 aa4:	bl	0 <ext2fs_extent_get>
 aa8:	str	x0, [sp, #216]
 aac:	ldr	x0, [sp, #216]
 ab0:	cmp	x0, #0x0
 ab4:	b.ne	c68 <ext2fs_punch_extent+0x4d0>  // b.any
 ab8:	ldr	x0, [sp, #80]
 abc:	str	x0, [sp, #160]
 ac0:	ldr	x0, [sp, #152]
 ac4:	add	x1, sp, #0x48
 ac8:	mov	x2, x1
 acc:	mov	w1, #0x7                   	// #7
 ad0:	bl	0 <ext2fs_extent_get>
 ad4:	str	x0, [sp, #216]
 ad8:	ldr	x1, [sp, #216]
 adc:	mov	x0, #0xb77c                	// #46972
 ae0:	movk	x0, #0x7f2b, lsl #16
 ae4:	cmp	x1, x0
 ae8:	b.ne	af8 <ext2fs_punch_extent+0x360>  // b.any
 aec:	ldr	x0, [sp, #160]
 af0:	str	x0, [sp, #184]
 af4:	b	b0c <ext2fs_punch_extent+0x374>
 af8:	ldr	x0, [sp, #216]
 afc:	cmp	x0, #0x0
 b00:	b.ne	c70 <ext2fs_punch_extent+0x4d8>  // b.any
 b04:	ldr	x0, [sp, #80]
 b08:	str	x0, [sp, #184]
 b0c:	ldr	x0, [sp, #152]
 b10:	ldr	x1, [sp, #160]
 b14:	bl	0 <ext2fs_extent_goto>
 b18:	str	x0, [sp, #216]
 b1c:	ldr	x0, [sp, #216]
 b20:	cmp	x0, #0x0
 b24:	b.ne	c78 <ext2fs_punch_extent+0x4e0>  // b.any
 b28:	ldr	x0, [sp, #152]
 b2c:	mov	w1, #0x0                   	// #0
 b30:	bl	0 <ext2fs_extent_delete>
 b34:	str	x0, [sp, #216]
 b38:	ldr	x0, [sp, #216]
 b3c:	cmp	x0, #0x0
 b40:	b.ne	c80 <ext2fs_punch_extent+0x4e8>  // b.any
 b44:	ldr	x0, [sp, #152]
 b48:	bl	0 <ext2fs_extent_fix_parents>
 b4c:	str	x0, [sp, #216]
 b50:	ldr	x0, [sp, #216]
 b54:	cmp	x0, #0x0
 b58:	b.eq	b70 <ext2fs_punch_extent+0x3d8>  // b.none
 b5c:	ldr	x1, [sp, #216]
 b60:	mov	x0, #0xb780                	// #46976
 b64:	movk	x0, #0x7f2b, lsl #16
 b68:	cmp	x1, x0
 b6c:	b.ne	c88 <ext2fs_punch_extent+0x4f0>  // b.any
 b70:	str	xzr, [sp, #216]
 b74:	ldr	x0, [sp, #152]
 b78:	ldr	x1, [sp, #184]
 b7c:	bl	0 <ext2fs_extent_goto>
 b80:	str	wzr, [sp, #192]
 b84:	ldr	x0, [sp, #216]
 b88:	cmp	x0, #0x0
 b8c:	b.ne	c90 <ext2fs_punch_extent+0x4f8>  // b.any
 b90:	add	x0, sp, #0x7c
 b94:	mov	x6, x0
 b98:	ldr	w5, [sp, #196]
 b9c:	ldr	x4, [sp, #208]
 ba0:	ldr	x3, [sp, #200]
 ba4:	ldr	x2, [sp, #40]
 ba8:	ldr	w1, [sp, #52]
 bac:	ldr	x0, [sp, #56]
 bb0:	bl	4d4 <punch_extent_blocks>
 bb4:	str	x0, [sp, #216]
 bb8:	ldr	x0, [sp, #216]
 bbc:	cmp	x0, #0x0
 bc0:	b.ne	c98 <ext2fs_punch_extent+0x500>  // b.any
 bc4:	b	bcc <ext2fs_punch_extent+0x434>
 bc8:	nop
 bcc:	ldr	x0, [sp, #152]
 bd0:	add	x1, sp, #0x80
 bd4:	mov	x2, x1
 bd8:	ldr	w1, [sp, #192]
 bdc:	bl	0 <ext2fs_extent_get>
 be0:	str	x0, [sp, #216]
 be4:	ldr	x1, [sp, #216]
 be8:	mov	x0, #0xb77c                	// #46972
 bec:	movk	x0, #0x7f2b, lsl #16
 bf0:	cmp	x1, x0
 bf4:	b.eq	c20 <ext2fs_punch_extent+0x488>  // b.none
 bf8:	ldr	x1, [sp, #216]
 bfc:	mov	x0, #0xb780                	// #46976
 c00:	movk	x0, #0x7f2b, lsl #16
 c04:	cmp	x1, x0
 c08:	b.eq	c20 <ext2fs_punch_extent+0x488>  // b.none
 c0c:	ldr	x0, [sp, #216]
 c10:	cmp	x0, #0x0
 c14:	b.ne	ca0 <ext2fs_punch_extent+0x508>  // b.any
 c18:	b	838 <ext2fs_punch_extent+0xa0>
 c1c:	nop
 c20:	ldr	w0, [sp, #124]
 c24:	sxtw	x0, w0
 c28:	mov	x2, x0
 c2c:	ldr	x1, [sp, #40]
 c30:	ldr	x0, [sp, #56]
 c34:	bl	0 <ext2fs_iblk_sub_blocks>
 c38:	str	x0, [sp, #216]
 c3c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c40:	nop
 c44:	b	ca4 <ext2fs_punch_extent+0x50c>
 c48:	nop
 c4c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c50:	nop
 c54:	b	ca4 <ext2fs_punch_extent+0x50c>
 c58:	nop
 c5c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c60:	nop
 c64:	b	ca4 <ext2fs_punch_extent+0x50c>
 c68:	nop
 c6c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c70:	nop
 c74:	b	ca4 <ext2fs_punch_extent+0x50c>
 c78:	nop
 c7c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c80:	nop
 c84:	b	ca4 <ext2fs_punch_extent+0x50c>
 c88:	nop
 c8c:	b	ca4 <ext2fs_punch_extent+0x50c>
 c90:	nop
 c94:	b	ca4 <ext2fs_punch_extent+0x50c>
 c98:	nop
 c9c:	b	ca4 <ext2fs_punch_extent+0x50c>
 ca0:	nop
 ca4:	ldr	x0, [sp, #152]
 ca8:	bl	0 <ext2fs_extent_free>
 cac:	ldr	x0, [sp, #216]
 cb0:	ldp	x29, x30, [sp], #224
 cb4:	ret

0000000000000cb8 <ext2fs_punch_inline_data>:
 cb8:	stp	x29, x30, [sp, #-80]!
 cbc:	mov	x29, sp
 cc0:	str	x0, [sp, #56]
 cc4:	str	w1, [sp, #52]
 cc8:	str	x2, [sp, #40]
 ccc:	str	x3, [sp, #32]
 cd0:	str	x4, [sp, #24]
 cd4:	ldr	x0, [sp, #32]
 cd8:	cmp	x0, #0x0
 cdc:	b.eq	ce8 <ext2fs_punch_inline_data+0x30>  // b.none
 ce0:	mov	x0, #0x0                   	// #0
 ce4:	b	d38 <ext2fs_punch_inline_data+0x80>
 ce8:	ldr	x0, [sp, #40]
 cec:	add	x0, x0, #0x28
 cf0:	mov	x2, #0x3c                  	// #60
 cf4:	mov	w1, #0x0                   	// #0
 cf8:	bl	0 <memset>
 cfc:	ldr	x0, [sp, #40]
 d00:	str	wzr, [x0, #4]
 d04:	ldr	x2, [sp, #40]
 d08:	ldr	w1, [sp, #52]
 d0c:	ldr	x0, [sp, #56]
 d10:	bl	0 <ext2fs_write_inode>
 d14:	str	x0, [sp, #72]
 d18:	ldr	x0, [sp, #72]
 d1c:	cmp	x0, #0x0
 d20:	b.eq	d2c <ext2fs_punch_inline_data+0x74>  // b.none
 d24:	ldr	x0, [sp, #72]
 d28:	b	d38 <ext2fs_punch_inline_data+0x80>
 d2c:	ldr	w1, [sp, #52]
 d30:	ldr	x0, [sp, #56]
 d34:	bl	0 <ext2fs_inline_data_ea_remove>
 d38:	ldp	x29, x30, [sp], #80
 d3c:	ret

0000000000000d40 <ext2fs_punch>:
 d40:	stp	x29, x30, [sp, #-208]!
 d44:	mov	x29, sp
 d48:	str	x0, [sp, #56]
 d4c:	str	w1, [sp, #52]
 d50:	str	x2, [sp, #40]
 d54:	str	x3, [sp, #32]
 d58:	str	x4, [sp, #24]
 d5c:	str	x5, [sp, #16]
 d60:	ldr	x1, [sp, #24]
 d64:	ldr	x0, [sp, #16]
 d68:	cmp	x1, x0
 d6c:	b.ls	d78 <ext2fs_punch+0x38>  // b.plast
 d70:	mov	x0, #0x16                  	// #22
 d74:	b	e5c <ext2fs_punch+0x11c>
 d78:	ldr	x0, [sp, #40]
 d7c:	cmp	x0, #0x0
 d80:	b.ne	db8 <ext2fs_punch+0x78>  // b.any
 d84:	add	x0, sp, #0x48
 d88:	mov	x2, x0
 d8c:	ldr	w1, [sp, #52]
 d90:	ldr	x0, [sp, #56]
 d94:	bl	0 <ext2fs_read_inode>
 d98:	str	x0, [sp, #200]
 d9c:	ldr	x0, [sp, #200]
 da0:	cmp	x0, #0x0
 da4:	b.eq	db0 <ext2fs_punch+0x70>  // b.none
 da8:	ldr	x0, [sp, #200]
 dac:	b	e5c <ext2fs_punch+0x11c>
 db0:	add	x0, sp, #0x48
 db4:	str	x0, [sp, #40]
 db8:	ldr	x0, [sp, #40]
 dbc:	ldr	w0, [x0, #32]
 dc0:	and	w0, w0, #0x10000000
 dc4:	cmp	w0, #0x0
 dc8:	b.eq	de8 <ext2fs_punch+0xa8>  // b.none
 dcc:	ldr	x4, [sp, #16]
 dd0:	ldr	x3, [sp, #24]
 dd4:	ldr	x2, [sp, #40]
 dd8:	ldr	w1, [sp, #52]
 ddc:	ldr	x0, [sp, #56]
 de0:	bl	cb8 <ext2fs_punch_inline_data>
 de4:	b	e5c <ext2fs_punch+0x11c>
 de8:	ldr	x0, [sp, #40]
 dec:	ldr	w0, [x0, #32]
 df0:	and	w0, w0, #0x80000
 df4:	cmp	w0, #0x0
 df8:	b.eq	e1c <ext2fs_punch+0xdc>  // b.none
 dfc:	ldr	x4, [sp, #16]
 e00:	ldr	x3, [sp, #24]
 e04:	ldr	x2, [sp, #40]
 e08:	ldr	w1, [sp, #52]
 e0c:	ldr	x0, [sp, #56]
 e10:	bl	798 <ext2fs_punch_extent>
 e14:	str	x0, [sp, #200]
 e18:	b	e38 <ext2fs_punch+0xf8>
 e1c:	ldr	x4, [sp, #16]
 e20:	ldr	x3, [sp, #24]
 e24:	ldr	x2, [sp, #32]
 e28:	ldr	x1, [sp, #40]
 e2c:	ldr	x0, [sp, #56]
 e30:	bl	2b0 <ext2fs_punch_ind>
 e34:	str	x0, [sp, #200]
 e38:	ldr	x0, [sp, #200]
 e3c:	cmp	x0, #0x0
 e40:	b.eq	e4c <ext2fs_punch+0x10c>  // b.none
 e44:	ldr	x0, [sp, #200]
 e48:	b	e5c <ext2fs_punch+0x11c>
 e4c:	ldr	x2, [sp, #40]
 e50:	ldr	w1, [sp, #52]
 e54:	ldr	x0, [sp, #56]
 e58:	bl	0 <ext2fs_write_inode>
 e5c:	ldp	x29, x30, [sp], #208
 e60:	ret

qcow2.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <qcow2_read_header>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	str	w0, [sp, #28]
   c:	str	xzr, [sp, #40]
  10:	str	xzr, [sp, #32]
  14:	add	x0, sp, #0x28
  18:	mov	x1, x0
  1c:	mov	x0, #0x48                  	// #72
  20:	bl	0 <ext2fs_get_mem>
  24:	str	x0, [sp, #56]
  28:	ldr	x0, [sp, #56]
  2c:	cmp	x0, #0x0
  30:	b.eq	3c <qcow2_read_header+0x3c>  // b.none
  34:	mov	x0, #0x0                   	// #0
  38:	b	f8 <qcow2_read_header+0xf8>
  3c:	ldr	x0, [sp, #40]
  40:	mov	x2, #0x48                  	// #72
  44:	mov	w1, #0x0                   	// #0
  48:	bl	0 <memset>
  4c:	mov	w2, #0x0                   	// #0
  50:	mov	x1, #0x0                   	// #0
  54:	ldr	w0, [sp, #28]
  58:	bl	0 <ext2fs_llseek>
  5c:	cmp	x0, #0x0
  60:	b.eq	74 <qcow2_read_header+0x74>  // b.none
  64:	add	x0, sp, #0x28
  68:	bl	0 <ext2fs_free_mem>
  6c:	mov	x0, #0x0                   	// #0
  70:	b	f8 <qcow2_read_header+0xf8>
  74:	ldr	x0, [sp, #40]
  78:	mov	x2, #0x48                  	// #72
  7c:	mov	x1, x0
  80:	ldr	w0, [sp, #28]
  84:	bl	0 <read>
  88:	str	x0, [sp, #48]
  8c:	ldr	x0, [sp, #48]
  90:	cmp	x0, #0x48
  94:	b.eq	a8 <qcow2_read_header+0xa8>  // b.none
  98:	add	x0, sp, #0x28
  9c:	bl	0 <ext2fs_free_mem>
  a0:	mov	x0, #0x0                   	// #0
  a4:	b	f8 <qcow2_read_header+0xf8>
  a8:	ldr	x0, [sp, #40]
  ac:	str	x0, [sp, #32]
  b0:	ldr	x0, [sp, #32]
  b4:	ldr	w0, [x0]
  b8:	bl	0 <ext2fs_swab32>
  bc:	mov	w1, w0
  c0:	mov	w0, #0x49fb                	// #18939
  c4:	movk	w0, #0x5146, lsl #16
  c8:	cmp	w1, w0
  cc:	b.ne	e4 <qcow2_read_header+0xe4>  // b.any
  d0:	ldr	x0, [sp, #32]
  d4:	ldr	w0, [x0, #4]
  d8:	bl	0 <ext2fs_swab32>
  dc:	cmp	w0, #0x2
  e0:	b.eq	f4 <qcow2_read_header+0xf4>  // b.none
  e4:	add	x0, sp, #0x20
  e8:	bl	0 <ext2fs_free_mem>
  ec:	mov	x0, #0x0                   	// #0
  f0:	b	f8 <qcow2_read_header+0xf8>
  f4:	ldr	x0, [sp, #32]
  f8:	ldp	x29, x30, [sp], #64
  fc:	ret

0000000000000100 <qcow2_read_l1_table>:
 100:	stp	x29, x30, [sp, #-80]!
 104:	mov	x29, sp
 108:	str	x0, [sp, #24]
 10c:	ldr	x0, [sp, #24]
 110:	ldr	w0, [x0]
 114:	str	w0, [sp, #76]
 118:	ldr	x0, [sp, #24]
 11c:	ldr	w0, [x0, #80]
 120:	mov	w0, w0
 124:	lsl	x0, x0, #3
 128:	str	x0, [sp, #64]
 12c:	add	x0, sp, #0x28
 130:	mov	x1, x0
 134:	ldr	x0, [sp, #64]
 138:	bl	0 <ext2fs_get_memzero>
 13c:	str	x0, [sp, #56]
 140:	ldr	x0, [sp, #56]
 144:	cmp	x0, #0x0
 148:	b.eq	154 <qcow2_read_l1_table+0x54>  // b.none
 14c:	ldr	x0, [sp, #56]
 150:	b	1d4 <qcow2_read_l1_table+0xd4>
 154:	ldr	x0, [sp, #24]
 158:	ldr	x0, [x0, #104]
 15c:	mov	w2, #0x0                   	// #0
 160:	mov	x1, x0
 164:	ldr	w0, [sp, #76]
 168:	bl	0 <ext2fs_llseek>
 16c:	cmp	x0, #0x0
 170:	b.ge	188 <qcow2_read_l1_table+0x88>  // b.tcont
 174:	add	x0, sp, #0x28
 178:	bl	0 <ext2fs_free_mem>
 17c:	bl	0 <__errno_location>
 180:	ldr	w0, [x0]
 184:	b	1d4 <qcow2_read_l1_table+0xd4>
 188:	ldr	x0, [sp, #40]
 18c:	ldr	x2, [sp, #64]
 190:	mov	x1, x0
 194:	ldr	w0, [sp, #76]
 198:	bl	0 <read>
 19c:	str	x0, [sp, #48]
 1a0:	ldr	x1, [sp, #48]
 1a4:	ldr	x0, [sp, #64]
 1a8:	cmp	x1, x0
 1ac:	b.eq	1c4 <qcow2_read_l1_table+0xc4>  // b.none
 1b0:	add	x0, sp, #0x28
 1b4:	bl	0 <ext2fs_free_mem>
 1b8:	bl	0 <__errno_location>
 1bc:	ldr	w0, [x0]
 1c0:	b	1d4 <qcow2_read_l1_table+0xd4>
 1c4:	ldr	x1, [sp, #40]
 1c8:	ldr	x0, [sp, #24]
 1cc:	str	x1, [x0, #88]
 1d0:	mov	w0, #0x0                   	// #0
 1d4:	ldp	x29, x30, [sp], #80
 1d8:	ret

00000000000001dc <qcow2_read_l2_table>:
 1dc:	stp	x29, x30, [sp, #-64]!
 1e0:	mov	x29, sp
 1e4:	str	x0, [sp, #40]
 1e8:	str	x1, [sp, #32]
 1ec:	str	x2, [sp, #24]
 1f0:	ldr	x0, [sp, #40]
 1f4:	ldr	w0, [x0]
 1f8:	str	w0, [sp, #60]
 1fc:	ldr	x0, [sp, #24]
 200:	ldr	x0, [x0]
 204:	cmp	x0, #0x0
 208:	b.ne	22c <qcow2_read_l2_table+0x50>  // b.any
 20c:	adrp	x0, 0 <qcow2_read_header>
 210:	add	x3, x0, #0x0
 214:	mov	w2, #0x7a                  	// #122
 218:	adrp	x0, 0 <qcow2_read_header>
 21c:	add	x1, x0, #0x0
 220:	adrp	x0, 0 <qcow2_read_header>
 224:	add	x0, x0, #0x0
 228:	bl	0 <__assert_fail>
 22c:	ldr	x0, [sp, #32]
 230:	mov	w2, #0x0                   	// #0
 234:	mov	x1, x0
 238:	ldr	w0, [sp, #60]
 23c:	bl	0 <ext2fs_llseek>
 240:	cmp	x0, #0x0
 244:	b.ge	254 <qcow2_read_l2_table+0x78>  // b.tcont
 248:	bl	0 <__errno_location>
 24c:	ldr	w0, [x0]
 250:	b	2a0 <qcow2_read_l2_table+0xc4>
 254:	ldr	x0, [sp, #24]
 258:	ldr	x1, [x0]
 25c:	ldr	x0, [sp, #40]
 260:	ldr	w0, [x0, #72]
 264:	mov	w0, w0
 268:	mov	x2, x0
 26c:	ldr	w0, [sp, #60]
 270:	bl	0 <read>
 274:	str	x0, [sp, #48]
 278:	ldr	x0, [sp, #40]
 27c:	ldr	w0, [x0, #72]
 280:	mov	w0, w0
 284:	ldr	x1, [sp, #48]
 288:	cmp	x1, x0
 28c:	b.eq	29c <qcow2_read_l2_table+0xc0>  // b.none
 290:	bl	0 <__errno_location>
 294:	ldr	w0, [x0]
 298:	b	2a0 <qcow2_read_l2_table+0xc4>
 29c:	mov	w0, #0x0                   	// #0
 2a0:	ldp	x29, x30, [sp], #64
 2a4:	ret

00000000000002a8 <qcow2_copy_data>:
 2a8:	stp	x29, x30, [sp, #-80]!
 2ac:	mov	x29, sp
 2b0:	str	w0, [sp, #60]
 2b4:	str	w1, [sp, #56]
 2b8:	str	x2, [sp, #48]
 2bc:	str	x3, [sp, #40]
 2c0:	str	x4, [sp, #32]
 2c4:	str	x5, [sp, #24]
 2c8:	ldr	x0, [sp, #32]
 2cc:	cmp	x0, #0x0
 2d0:	b.ne	2f4 <qcow2_copy_data+0x4c>  // b.any
 2d4:	adrp	x0, 0 <qcow2_read_header>
 2d8:	add	x3, x0, #0x0
 2dc:	mov	w2, #0x8b                  	// #139
 2e0:	adrp	x0, 0 <qcow2_read_header>
 2e4:	add	x1, x0, #0x0
 2e8:	adrp	x0, 0 <qcow2_read_header>
 2ec:	add	x0, x0, #0x0
 2f0:	bl	0 <__assert_fail>
 2f4:	ldr	x0, [sp, #40]
 2f8:	mov	w2, #0x0                   	// #0
 2fc:	mov	x1, x0
 300:	ldr	w0, [sp, #56]
 304:	bl	0 <ext2fs_llseek>
 308:	cmp	x0, #0x0
 30c:	b.ge	31c <qcow2_copy_data+0x74>  // b.tcont
 310:	bl	0 <__errno_location>
 314:	ldr	w0, [x0]
 318:	b	3a8 <qcow2_copy_data+0x100>
 31c:	ldr	x0, [sp, #48]
 320:	mov	w2, #0x0                   	// #0
 324:	mov	x1, x0
 328:	ldr	w0, [sp, #60]
 32c:	bl	0 <ext2fs_llseek>
 330:	cmp	x0, #0x0
 334:	b.ge	344 <qcow2_copy_data+0x9c>  // b.tcont
 338:	bl	0 <__errno_location>
 33c:	ldr	w0, [x0]
 340:	b	3a8 <qcow2_copy_data+0x100>
 344:	ldr	x2, [sp, #24]
 348:	ldr	x1, [sp, #32]
 34c:	ldr	w0, [sp, #60]
 350:	bl	0 <read>
 354:	str	x0, [sp, #72]
 358:	ldr	x1, [sp, #72]
 35c:	ldr	x0, [sp, #24]
 360:	cmp	x1, x0
 364:	b.eq	374 <qcow2_copy_data+0xcc>  // b.none
 368:	bl	0 <__errno_location>
 36c:	ldr	w0, [x0]
 370:	b	3a8 <qcow2_copy_data+0x100>
 374:	ldr	x2, [sp, #24]
 378:	ldr	x1, [sp, #32]
 37c:	ldr	w0, [sp, #56]
 380:	bl	0 <write>
 384:	str	x0, [sp, #72]
 388:	ldr	x1, [sp, #72]
 38c:	ldr	x0, [sp, #24]
 390:	cmp	x1, x0
 394:	b.eq	3a4 <qcow2_copy_data+0xfc>  // b.none
 398:	bl	0 <__errno_location>
 39c:	ldr	w0, [x0]
 3a0:	b	3a8 <qcow2_copy_data+0x100>
 3a4:	mov	w0, #0x0                   	// #0
 3a8:	ldp	x29, x30, [sp], #80
 3ac:	ret

00000000000003b0 <qcow2_write_raw_image>:
 3b0:	stp	x29, x30, [sp, #-224]!
 3b4:	mov	x29, sp
 3b8:	str	w0, [sp, #28]
 3bc:	str	w1, [sp, #24]
 3c0:	str	x2, [sp, #16]
 3c4:	str	xzr, [sp, #216]
 3c8:	str	xzr, [sp, #40]
 3cc:	str	xzr, [sp, #32]
 3d0:	ldr	x0, [sp, #16]
 3d4:	ldr	w0, [x0, #32]
 3d8:	cmp	w0, #0x0
 3dc:	b.eq	3e8 <qcow2_write_raw_image+0x38>  // b.none
 3e0:	mov	w0, #0xfffffffe            	// #-2
 3e4:	b	7cc <qcow2_write_raw_image+0x41c>
 3e8:	ldr	w0, [sp, #28]
 3ec:	str	w0, [sp, #48]
 3f0:	ldr	x0, [sp, #16]
 3f4:	str	x0, [sp, #56]
 3f8:	str	xzr, [sp, #64]
 3fc:	str	xzr, [sp, #136]
 400:	ldr	x0, [sp, #16]
 404:	ldr	w0, [x0, #20]
 408:	bl	0 <ext2fs_swab32>
 40c:	str	w0, [sp, #124]
 410:	ldr	w0, [sp, #124]
 414:	cmp	w0, #0x8
 418:	b.ls	428 <qcow2_write_raw_image+0x78>  // b.plast
 41c:	ldr	w0, [sp, #124]
 420:	cmp	w0, #0x1f
 424:	b.ls	430 <qcow2_write_raw_image+0x80>  // b.plast
 428:	mov	w0, #0xfffffffd            	// #-3
 42c:	b	7cc <qcow2_write_raw_image+0x41c>
 430:	ldr	w0, [sp, #124]
 434:	mov	w1, #0x1                   	// #1
 438:	lsl	w0, w1, w0
 43c:	str	w0, [sp, #120]
 440:	ldr	x0, [sp, #16]
 444:	ldr	w0, [x0, #36]
 448:	bl	0 <ext2fs_swab32>
 44c:	str	w0, [sp, #128]
 450:	ldr	x0, [sp, #16]
 454:	ldr	x0, [x0, #40]
 458:	bl	0 <ext2fs_swab64>
 45c:	str	x0, [sp, #152]
 460:	ldr	w0, [sp, #124]
 464:	sub	w0, w0, #0x3
 468:	mov	w1, #0x1                   	// #1
 46c:	lsl	w0, w1, w0
 470:	str	w0, [sp, #132]
 474:	ldr	x0, [sp, #16]
 478:	ldr	x0, [x0, #24]
 47c:	bl	0 <ext2fs_swab64>
 480:	str	x0, [sp, #160]
 484:	ldr	x1, [sp, #152]
 488:	ldr	w0, [sp, #120]
 48c:	sub	w0, w0, #0x1
 490:	mov	w0, w0
 494:	and	x0, x1, x0
 498:	cmp	x0, #0x0
 49c:	b.eq	4a8 <qcow2_write_raw_image+0xf8>  // b.none
 4a0:	mov	w0, #0xfffffffd            	// #-3
 4a4:	b	7cc <qcow2_write_raw_image+0x41c>
 4a8:	ldr	x1, [sp, #160]
 4ac:	ldr	w0, [sp, #124]
 4b0:	lsl	w0, w0, #1
 4b4:	sub	w0, w0, #0x3
 4b8:	lsr	x0, x1, x0
 4bc:	mov	w1, w0
 4c0:	ldr	w0, [sp, #120]
 4c4:	add	w0, w1, w0
 4c8:	str	w0, [sp, #204]
 4cc:	ldr	w0, [sp, #128]
 4d0:	ldr	w1, [sp, #204]
 4d4:	cmp	w1, w0
 4d8:	b.cs	4e4 <qcow2_write_raw_image+0x134>  // b.hs, b.nlast
 4dc:	mov	w0, #0xfffffffd            	// #-3
 4e0:	b	7cc <qcow2_write_raw_image+0x41c>
 4e4:	ldr	w0, [sp, #120]
 4e8:	mov	w0, w0
 4ec:	add	x1, sp, #0x28
 4f0:	bl	0 <ext2fs_get_memzero>
 4f4:	str	x0, [sp, #216]
 4f8:	ldr	x0, [sp, #216]
 4fc:	cmp	x0, #0x0
 500:	b.ne	764 <qcow2_write_raw_image+0x3b4>  // b.any
 504:	ldr	w0, [sp, #124]
 508:	mov	w1, #0x1                   	// #1
 50c:	lsl	w0, w1, w0
 510:	sxtw	x0, w0
 514:	add	x1, sp, #0x20
 518:	bl	0 <ext2fs_get_memzero>
 51c:	str	x0, [sp, #216]
 520:	ldr	x0, [sp, #216]
 524:	cmp	x0, #0x0
 528:	b.ne	76c <qcow2_write_raw_image+0x3bc>  // b.any
 52c:	mov	w2, #0x0                   	// #0
 530:	mov	x1, #0x0                   	// #0
 534:	ldr	w0, [sp, #24]
 538:	bl	0 <ext2fs_llseek>
 53c:	cmp	x0, #0x0
 540:	b.ge	558 <qcow2_write_raw_image+0x1a8>  // b.tcont
 544:	bl	0 <__errno_location>
 548:	ldr	w0, [x0]
 54c:	sxtw	x0, w0
 550:	str	x0, [sp, #216]
 554:	b	788 <qcow2_write_raw_image+0x3d8>
 558:	add	x0, sp, #0x30
 55c:	bl	100 <qcow2_read_l1_table>
 560:	sxtw	x0, w0
 564:	str	x0, [sp, #216]
 568:	ldr	x0, [sp, #216]
 56c:	cmp	x0, #0x0
 570:	b.ne	774 <qcow2_write_raw_image+0x3c4>  // b.any
 574:	ldr	x0, [sp, #136]
 578:	str	x0, [sp, #192]
 57c:	str	wzr, [sp, #212]
 580:	b	6d8 <qcow2_write_raw_image+0x328>
 584:	ldr	w0, [sp, #212]
 588:	lsl	x0, x0, #3
 58c:	ldr	x1, [sp, #192]
 590:	add	x0, x1, x0
 594:	ldr	x0, [x0]
 598:	bl	0 <ext2fs_swab64>
 59c:	and	x0, x0, #0x7fffffffffffffff
 5a0:	str	x0, [sp, #184]
 5a4:	ldr	x0, [sp, #160]
 5a8:	ldr	x1, [sp, #184]
 5ac:	cmp	x1, x0
 5b0:	b.hi	6c8 <qcow2_write_raw_image+0x318>  // b.pmore
 5b4:	ldr	x0, [sp, #184]
 5b8:	cmp	x0, #0x0
 5bc:	b.eq	6c8 <qcow2_write_raw_image+0x318>  // b.none
 5c0:	ldr	x0, [sp, #184]
 5c4:	and	x0, x0, #0x4000000000000000
 5c8:	cmp	x0, #0x0
 5cc:	b.eq	5dc <qcow2_write_raw_image+0x22c>  // b.none
 5d0:	mov	x0, #0xffffffffffffffff    	// #-1
 5d4:	str	x0, [sp, #216]
 5d8:	b	788 <qcow2_write_raw_image+0x3d8>
 5dc:	add	x1, sp, #0x28
 5e0:	add	x0, sp, #0x30
 5e4:	mov	x2, x1
 5e8:	ldr	x1, [sp, #184]
 5ec:	bl	1dc <qcow2_read_l2_table>
 5f0:	sxtw	x0, w0
 5f4:	str	x0, [sp, #216]
 5f8:	ldr	x0, [sp, #216]
 5fc:	cmp	x0, #0x0
 600:	b.ne	6ec <qcow2_write_raw_image+0x33c>  // b.any
 604:	str	wzr, [sp, #208]
 608:	b	6b4 <qcow2_write_raw_image+0x304>
 60c:	ldr	x1, [sp, #40]
 610:	ldr	w0, [sp, #208]
 614:	lsl	x0, x0, #3
 618:	add	x0, x1, x0
 61c:	ldr	x0, [x0]
 620:	bl	0 <ext2fs_swab64>
 624:	and	x0, x0, #0x7fffffffffffffff
 628:	str	x0, [sp, #184]
 62c:	ldr	x0, [sp, #184]
 630:	cmp	x0, #0x0
 634:	b.eq	6a4 <qcow2_write_raw_image+0x2f4>  // b.none
 638:	ldr	w1, [sp, #132]
 63c:	ldr	w0, [sp, #212]
 640:	mul	w1, w1, w0
 644:	ldr	w0, [sp, #208]
 648:	add	w0, w1, w0
 64c:	mov	w0, w0
 650:	str	x0, [sp, #176]
 654:	ldr	w0, [sp, #124]
 658:	ldr	x1, [sp, #176]
 65c:	lsl	x0, x1, x0
 660:	str	x0, [sp, #176]
 664:	ldr	x0, [sp, #32]
 668:	ldr	w1, [sp, #120]
 66c:	mov	w1, w1
 670:	mov	x5, x1
 674:	mov	x4, x0
 678:	ldr	x3, [sp, #176]
 67c:	ldr	x2, [sp, #184]
 680:	ldr	w1, [sp, #24]
 684:	ldr	w0, [sp, #28]
 688:	bl	2a8 <qcow2_copy_data>
 68c:	sxtw	x0, w0
 690:	str	x0, [sp, #216]
 694:	ldr	x0, [sp, #216]
 698:	cmp	x0, #0x0
 69c:	b.ne	77c <qcow2_write_raw_image+0x3cc>  // b.any
 6a0:	b	6a8 <qcow2_write_raw_image+0x2f8>
 6a4:	nop
 6a8:	ldr	w0, [sp, #208]
 6ac:	add	w0, w0, #0x1
 6b0:	str	w0, [sp, #208]
 6b4:	ldr	w0, [sp, #132]
 6b8:	ldr	w1, [sp, #208]
 6bc:	cmp	w1, w0
 6c0:	b.cc	60c <qcow2_write_raw_image+0x25c>  // b.lo, b.ul, b.last
 6c4:	b	6cc <qcow2_write_raw_image+0x31c>
 6c8:	nop
 6cc:	ldr	w0, [sp, #212]
 6d0:	add	w0, w0, #0x1
 6d4:	str	w0, [sp, #212]
 6d8:	ldr	w0, [sp, #128]
 6dc:	ldr	w1, [sp, #212]
 6e0:	cmp	w1, w0
 6e4:	b.cc	584 <qcow2_write_raw_image+0x1d4>  // b.lo, b.ul, b.last
 6e8:	b	6f0 <qcow2_write_raw_image+0x340>
 6ec:	nop
 6f0:	ldr	x0, [sp, #160]
 6f4:	sub	x0, x0, #0x1
 6f8:	mov	w2, #0x0                   	// #0
 6fc:	mov	x1, x0
 700:	ldr	w0, [sp, #24]
 704:	bl	0 <ext2fs_llseek>
 708:	cmp	x0, #0x0
 70c:	b.ge	724 <qcow2_write_raw_image+0x374>  // b.tcont
 710:	bl	0 <__errno_location>
 714:	ldr	w0, [x0]
 718:	sxtw	x0, w0
 71c:	str	x0, [sp, #216]
 720:	b	788 <qcow2_write_raw_image+0x3d8>
 724:	ldr	x0, [sp, #32]
 728:	strb	wzr, [x0]
 72c:	ldr	x0, [sp, #32]
 730:	mov	x2, #0x1                   	// #1
 734:	mov	x1, x0
 738:	ldr	w0, [sp, #24]
 73c:	bl	0 <write>
 740:	str	x0, [sp, #168]
 744:	ldr	x0, [sp, #168]
 748:	cmp	x0, #0x1
 74c:	b.eq	784 <qcow2_write_raw_image+0x3d4>  // b.none
 750:	bl	0 <__errno_location>
 754:	ldr	w0, [x0]
 758:	sxtw	x0, w0
 75c:	str	x0, [sp, #216]
 760:	b	788 <qcow2_write_raw_image+0x3d8>
 764:	nop
 768:	b	788 <qcow2_write_raw_image+0x3d8>
 76c:	nop
 770:	b	788 <qcow2_write_raw_image+0x3d8>
 774:	nop
 778:	b	788 <qcow2_write_raw_image+0x3d8>
 77c:	nop
 780:	b	788 <qcow2_write_raw_image+0x3d8>
 784:	nop
 788:	ldr	x0, [sp, #32]
 78c:	cmp	x0, #0x0
 790:	b.eq	79c <qcow2_write_raw_image+0x3ec>  // b.none
 794:	add	x0, sp, #0x20
 798:	bl	0 <ext2fs_free_mem>
 79c:	ldr	x0, [sp, #136]
 7a0:	cmp	x0, #0x0
 7a4:	b.eq	7b4 <qcow2_write_raw_image+0x404>  // b.none
 7a8:	add	x0, sp, #0x30
 7ac:	add	x0, x0, #0x58
 7b0:	bl	0 <ext2fs_free_mem>
 7b4:	ldr	x0, [sp, #40]
 7b8:	cmp	x0, #0x0
 7bc:	b.eq	7c8 <qcow2_write_raw_image+0x418>  // b.none
 7c0:	add	x0, sp, #0x28
 7c4:	bl	0 <ext2fs_free_mem>
 7c8:	ldr	x0, [sp, #216]
 7cc:	ldp	x29, x30, [sp], #224
 7d0:	ret

read_bb.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_huge_file>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #100]
  10:	and	w0, w0, #0x8
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <mark_bad_block>:
  28:	stp	x29, x30, [sp, #-96]!
  2c:	mov	x29, sp
  30:	str	x19, [sp, #16]
  34:	str	x0, [sp, #72]
  38:	str	x1, [sp, #64]
  3c:	str	x2, [sp, #56]
  40:	str	w3, [sp, #52]
  44:	str	w4, [sp, #48]
  48:	str	x5, [sp, #40]
  4c:	ldr	x0, [sp, #40]
  50:	str	x0, [sp, #88]
  54:	ldr	x0, [sp, #56]
  58:	cmp	x0, #0x0
  5c:	b.ge	68 <mark_bad_block+0x40>  // b.tcont
  60:	mov	w0, #0x0                   	// #0
  64:	b	f0 <mark_bad_block+0xc8>
  68:	ldr	x0, [sp, #64]
  6c:	ldr	w1, [x0]
  70:	ldr	x0, [sp, #72]
  74:	ldr	x0, [x0, #32]
  78:	ldr	w0, [x0, #20]
  7c:	cmp	w1, w0
  80:	b.cc	a4 <mark_bad_block+0x7c>  // b.lo, b.ul, b.last
  84:	ldr	x0, [sp, #64]
  88:	ldr	w0, [x0]
  8c:	mov	w19, w0
  90:	ldr	x0, [sp, #72]
  94:	ldr	x0, [x0, #32]
  98:	bl	0 <ext2fs_blocks_count>
  9c:	cmp	x19, x0
  a0:	b.cc	ac <mark_bad_block+0x84>  // b.lo, b.ul, b.last
  a4:	mov	w0, #0x0                   	// #0
  a8:	b	f0 <mark_bad_block+0xc8>
  ac:	ldr	x0, [sp, #88]
  b0:	ldr	x2, [x0]
  b4:	ldr	x0, [sp, #64]
  b8:	ldr	w0, [x0]
  bc:	mov	w1, w0
  c0:	mov	x0, x2
  c4:	bl	0 <ext2fs_badblocks_list_add>
  c8:	mov	x1, x0
  cc:	ldr	x0, [sp, #88]
  d0:	str	x1, [x0, #8]
  d4:	ldr	x0, [sp, #88]
  d8:	ldr	x0, [x0, #8]
  dc:	cmp	x0, #0x0
  e0:	b.eq	ec <mark_bad_block+0xc4>  // b.none
  e4:	mov	w0, #0x2                   	// #2
  e8:	b	f0 <mark_bad_block+0xc8>
  ec:	mov	w0, #0x0                   	// #0
  f0:	ldr	x19, [sp, #16]
  f4:	ldp	x29, x30, [sp], #96
  f8:	ret

00000000000000fc <ext2fs_read_bb_inode>:
  fc:	stp	x29, x30, [sp, #-192]!
 100:	mov	x29, sp
 104:	str	x0, [sp, #24]
 108:	str	x1, [sp, #16]
 10c:	ldr	x0, [sp, #24]
 110:	ldr	x1, [x0]
 114:	mov	x0, #0xb701                	// #46849
 118:	movk	x0, #0x7f2b, lsl #16
 11c:	cmp	x1, x0
 120:	b.eq	130 <ext2fs_read_bb_inode+0x34>  // b.none
 124:	mov	x0, #0xb701                	// #46849
 128:	movk	x0, #0x7f2b, lsl #16
 12c:	b	260 <ext2fs_read_bb_inode+0x164>
 130:	ldr	x0, [sp, #16]
 134:	ldr	x0, [x0]
 138:	cmp	x0, #0x0
 13c:	b.ne	210 <ext2fs_read_bb_inode+0x114>  // b.any
 140:	add	x0, sp, #0x20
 144:	mov	x2, x0
 148:	mov	w1, #0x1                   	// #1
 14c:	ldr	x0, [sp, #24]
 150:	bl	0 <ext2fs_read_inode>
 154:	str	x0, [sp, #176]
 158:	ldr	x0, [sp, #176]
 15c:	cmp	x0, #0x0
 160:	b.eq	16c <ext2fs_read_bb_inode+0x70>  // b.none
 164:	ldr	x0, [sp, #176]
 168:	b	260 <ext2fs_read_bb_inode+0x164>
 16c:	ldr	w0, [sp, #60]
 170:	str	w0, [sp, #188]
 174:	ldr	x0, [sp, #24]
 178:	ldr	x0, [x0, #32]
 17c:	bl	0 <ext2fs_has_feature_huge_file>
 180:	cmp	w0, #0x0
 184:	b.eq	198 <ext2fs_read_bb_inode+0x9c>  // b.none
 188:	ldr	w0, [sp, #64]
 18c:	and	w0, w0, #0x40000
 190:	cmp	w0, #0x0
 194:	b.ne	1b0 <ext2fs_read_bb_inode+0xb4>  // b.any
 198:	ldr	x0, [sp, #24]
 19c:	ldr	w0, [x0, #40]
 1a0:	lsr	w0, w0, #9
 1a4:	ldr	w1, [sp, #188]
 1a8:	udiv	w0, w1, w0
 1ac:	str	w0, [sp, #188]
 1b0:	ldr	w0, [sp, #188]
 1b4:	add	w0, w0, #0x14
 1b8:	str	w0, [sp, #188]
 1bc:	ldr	w0, [sp, #188]
 1c0:	cmp	w0, #0x31
 1c4:	b.hi	1d0 <ext2fs_read_bb_inode+0xd4>  // b.pmore
 1c8:	mov	w0, #0x32                  	// #50
 1cc:	str	w0, [sp, #188]
 1d0:	ldr	w1, [sp, #188]
 1d4:	mov	w0, #0xc350                	// #50000
 1d8:	cmp	w1, w0
 1dc:	b.ls	1e8 <ext2fs_read_bb_inode+0xec>  // b.plast
 1e0:	mov	w0, #0x1f4                 	// #500
 1e4:	str	w0, [sp, #188]
 1e8:	ldr	w0, [sp, #188]
 1ec:	mov	w1, w0
 1f0:	ldr	x0, [sp, #16]
 1f4:	bl	0 <ext2fs_badblocks_list_create>
 1f8:	str	x0, [sp, #176]
 1fc:	ldr	x0, [sp, #176]
 200:	cmp	x0, #0x0
 204:	b.eq	210 <ext2fs_read_bb_inode+0x114>  // b.none
 208:	ldr	x0, [sp, #176]
 20c:	b	260 <ext2fs_read_bb_inode+0x164>
 210:	ldr	x0, [sp, #16]
 214:	ldr	x0, [x0]
 218:	str	x0, [sp, #160]
 21c:	str	xzr, [sp, #168]
 220:	add	x0, sp, #0xa0
 224:	mov	x5, x0
 228:	adrp	x0, 0 <ext2fs_has_feature_huge_file>
 22c:	add	x4, x0, #0x0
 230:	mov	x3, #0x0                   	// #0
 234:	mov	w2, #0x8                   	// #8
 238:	mov	w1, #0x1                   	// #1
 23c:	ldr	x0, [sp, #24]
 240:	bl	0 <ext2fs_block_iterate2>
 244:	str	x0, [sp, #176]
 248:	ldr	x0, [sp, #176]
 24c:	cmp	x0, #0x0
 250:	b.eq	25c <ext2fs_read_bb_inode+0x160>  // b.none
 254:	ldr	x0, [sp, #176]
 258:	b	260 <ext2fs_read_bb_inode+0x164>
 25c:	ldr	x0, [sp, #168]
 260:	ldp	x29, x30, [sp], #192
 264:	ret

read_bb_file.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_read_bb_FILE2>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #56]
   c:	str	x1, [sp, #48]
  10:	str	x2, [sp, #40]
  14:	str	x3, [sp, #32]
  18:	str	x4, [sp, #24]
  1c:	ldr	x0, [sp, #56]
  20:	cmp	x0, #0x0
  24:	b.eq	4c <ext2fs_read_bb_FILE2+0x4c>  // b.none
  28:	ldr	x0, [sp, #56]
  2c:	ldr	x1, [x0]
  30:	mov	x0, #0xb701                	// #46849
  34:	movk	x0, #0x7f2b, lsl #16
  38:	cmp	x1, x0
  3c:	b.eq	4c <ext2fs_read_bb_FILE2+0x4c>  // b.none
  40:	mov	x0, #0xb701                	// #46849
  44:	movk	x0, #0x7f2b, lsl #16
  48:	b	198 <ext2fs_read_bb_FILE2+0x198>
  4c:	ldr	x0, [sp, #40]
  50:	ldr	x0, [x0]
  54:	cmp	x0, #0x0
  58:	b.ne	17c <ext2fs_read_bb_FILE2+0x17c>  // b.any
  5c:	mov	w1, #0xa                   	// #10
  60:	ldr	x0, [sp, #40]
  64:	bl	0 <ext2fs_badblocks_list_create>
  68:	str	x0, [sp, #216]
  6c:	ldr	x0, [sp, #216]
  70:	cmp	x0, #0x0
  74:	b.eq	17c <ext2fs_read_bb_FILE2+0x17c>  // b.none
  78:	ldr	x0, [sp, #216]
  7c:	b	198 <ext2fs_read_bb_FILE2+0x198>
  80:	add	x0, sp, #0x48
  84:	ldr	x2, [sp, #48]
  88:	mov	w1, #0x80                  	// #128
  8c:	bl	0 <fgets>
  90:	cmp	x0, #0x0
  94:	b.eq	190 <ext2fs_read_bb_FILE2+0x190>  // b.none
  98:	add	x0, sp, #0xc8
  9c:	add	x3, sp, #0x48
  a0:	mov	x2, x0
  a4:	adrp	x0, 0 <ext2fs_read_bb_FILE2>
  a8:	add	x1, x0, #0x0
  ac:	mov	x0, x3
  b0:	bl	0 <__isoc99_sscanf>
  b4:	str	w0, [sp, #212]
  b8:	ldr	w0, [sp, #212]
  bc:	cmp	w0, #0x0
  c0:	b.gt	c8 <ext2fs_read_bb_FILE2+0xc8>
  c4:	b	17c <ext2fs_read_bb_FILE2+0x17c>
  c8:	ldr	x0, [sp, #200]
  cc:	lsr	x0, x0, #32
  d0:	cmp	x0, #0x0
  d4:	b.eq	e0 <ext2fs_read_bb_FILE2+0xe0>  // b.none
  d8:	mov	x0, #0x4b                  	// #75
  dc:	b	198 <ext2fs_read_bb_FILE2+0x198>
  e0:	ldr	x0, [sp, #56]
  e4:	cmp	x0, #0x0
  e8:	b.eq	154 <ext2fs_read_bb_FILE2+0x154>  // b.none
  ec:	ldr	x0, [sp, #56]
  f0:	ldr	x0, [x0, #32]
  f4:	ldr	w0, [x0, #20]
  f8:	mov	w1, w0
  fc:	ldr	x0, [sp, #200]
 100:	cmp	x1, x0
 104:	b.hi	124 <ext2fs_read_bb_FILE2+0x124>  // b.pmore
 108:	ldr	x0, [sp, #56]
 10c:	ldr	x0, [x0, #32]
 110:	bl	0 <ext2fs_blocks_count>
 114:	mov	x1, x0
 118:	ldr	x0, [sp, #200]
 11c:	cmp	x1, x0
 120:	b.hi	154 <ext2fs_read_bb_FILE2+0x154>  // b.pmore
 124:	ldr	x0, [sp, #24]
 128:	cmp	x0, #0x0
 12c:	b.eq	17c <ext2fs_read_bb_FILE2+0x17c>  // b.none
 130:	ldr	x0, [sp, #200]
 134:	mov	w1, w0
 138:	add	x0, sp, #0x48
 13c:	ldr	x4, [sp, #24]
 140:	ldr	x3, [sp, #32]
 144:	mov	x2, x0
 148:	ldr	x0, [sp, #56]
 14c:	blr	x4
 150:	b	17c <ext2fs_read_bb_FILE2+0x17c>
 154:	ldr	x0, [sp, #40]
 158:	ldr	x0, [x0]
 15c:	ldr	x1, [sp, #200]
 160:	bl	0 <ext2fs_badblocks_list_add>
 164:	str	x0, [sp, #216]
 168:	ldr	x0, [sp, #216]
 16c:	cmp	x0, #0x0
 170:	b.eq	17c <ext2fs_read_bb_FILE2+0x17c>  // b.none
 174:	ldr	x0, [sp, #216]
 178:	b	198 <ext2fs_read_bb_FILE2+0x198>
 17c:	ldr	x0, [sp, #48]
 180:	bl	0 <feof>
 184:	cmp	w0, #0x0
 188:	b.eq	80 <ext2fs_read_bb_FILE2+0x80>  // b.none
 18c:	b	194 <ext2fs_read_bb_FILE2+0x194>
 190:	nop
 194:	mov	x0, #0x0                   	// #0
 198:	ldp	x29, x30, [sp], #224
 19c:	ret

00000000000001a0 <call_compat_invalid>:
 1a0:	stp	x29, x30, [sp, #-64]!
 1a4:	mov	x29, sp
 1a8:	str	x0, [sp, #40]
 1ac:	str	w1, [sp, #36]
 1b0:	str	x2, [sp, #24]
 1b4:	str	x3, [sp, #16]
 1b8:	ldr	x0, [sp, #16]
 1bc:	str	x0, [sp, #56]
 1c0:	ldr	x0, [sp, #56]
 1c4:	ldr	x0, [x0]
 1c8:	cmp	x0, #0x0
 1cc:	b.eq	1e4 <call_compat_invalid+0x44>  // b.none
 1d0:	ldr	x0, [sp, #56]
 1d4:	ldr	x2, [x0]
 1d8:	ldr	w1, [sp, #36]
 1dc:	ldr	x0, [sp, #40]
 1e0:	blr	x2
 1e4:	nop
 1e8:	ldp	x29, x30, [sp], #64
 1ec:	ret

00000000000001f0 <ext2fs_read_bb_FILE>:
 1f0:	stp	x29, x30, [sp, #-64]!
 1f4:	mov	x29, sp
 1f8:	str	x0, [sp, #40]
 1fc:	str	x1, [sp, #32]
 200:	str	x2, [sp, #24]
 204:	str	x3, [sp, #16]
 208:	ldr	x0, [sp, #16]
 20c:	str	x0, [sp, #56]
 210:	add	x1, sp, #0x38
 214:	adrp	x0, 0 <ext2fs_read_bb_FILE2>
 218:	add	x4, x0, #0x0
 21c:	mov	x3, x1
 220:	ldr	x2, [sp, #24]
 224:	ldr	x1, [sp, #32]
 228:	ldr	x0, [sp, #40]
 22c:	bl	0 <ext2fs_read_bb_FILE2>
 230:	ldp	x29, x30, [sp], #64
 234:	ret

res_gdt.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_sparse_super2>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #92]
  10:	and	w0, w0, #0x200
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_sparse_super>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #100]
  38:	and	w0, w0, #0x1
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <list_backups>:
  50:	stp	x29, x30, [sp, #-64]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	x1, [sp, #32]
  60:	str	x2, [sp, #24]
  64:	str	x3, [sp, #16]
  68:	ldr	x0, [sp, #32]
  6c:	str	x0, [sp, #56]
  70:	mov	w0, #0x3                   	// #3
  74:	str	w0, [sp, #52]
  78:	ldr	x0, [sp, #40]
  7c:	ldr	x0, [x0, #32]
  80:	bl	0 <ext2fs_has_feature_sparse_super2>
  84:	cmp	w0, #0x0
  88:	b.eq	128 <list_backups+0xd8>  // b.none
  8c:	ldr	x0, [sp, #56]
  90:	ldr	w0, [x0]
  94:	cmp	w0, #0x1
  98:	b.ne	d4 <list_backups+0x84>  // b.any
  9c:	ldr	x0, [sp, #56]
  a0:	ldr	w0, [x0]
  a4:	add	w1, w0, #0x1
  a8:	ldr	x0, [sp, #56]
  ac:	str	w1, [x0]
  b0:	ldr	x0, [sp, #40]
  b4:	ldr	x0, [x0, #32]
  b8:	ldr	w0, [x0, #588]
  bc:	cmp	w0, #0x0
  c0:	b.eq	d4 <list_backups+0x84>  // b.none
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	x0, [x0, #32]
  cc:	ldr	w0, [x0, #588]
  d0:	b	1dc <list_backups+0x18c>
  d4:	ldr	x0, [sp, #56]
  d8:	ldr	w0, [x0]
  dc:	cmp	w0, #0x2
  e0:	b.ne	11c <list_backups+0xcc>  // b.any
  e4:	ldr	x0, [sp, #56]
  e8:	ldr	w0, [x0]
  ec:	add	w1, w0, #0x1
  f0:	ldr	x0, [sp, #56]
  f4:	str	w1, [x0]
  f8:	ldr	x0, [sp, #40]
  fc:	ldr	x0, [x0, #32]
 100:	ldr	w0, [x0, #592]
 104:	cmp	w0, #0x0
 108:	b.eq	11c <list_backups+0xcc>  // b.none
 10c:	ldr	x0, [sp, #40]
 110:	ldr	x0, [x0, #32]
 114:	ldr	w0, [x0, #592]
 118:	b	1dc <list_backups+0x18c>
 11c:	ldr	x0, [sp, #40]
 120:	ldr	w0, [x0, #48]
 124:	b	1dc <list_backups+0x18c>
 128:	ldr	x0, [sp, #40]
 12c:	ldr	x0, [x0, #32]
 130:	bl	28 <ext2fs_has_feature_sparse_super>
 134:	cmp	w0, #0x0
 138:	b.ne	164 <list_backups+0x114>  // b.any
 13c:	ldr	x0, [sp, #56]
 140:	ldr	w0, [x0]
 144:	str	w0, [sp, #48]
 148:	ldr	x0, [sp, #56]
 14c:	ldr	w0, [x0]
 150:	add	w1, w0, #0x1
 154:	ldr	x0, [sp, #56]
 158:	str	w1, [x0]
 15c:	ldr	w0, [sp, #48]
 160:	b	1dc <list_backups+0x18c>
 164:	ldr	x0, [sp, #24]
 168:	ldr	w1, [x0]
 16c:	ldr	x0, [sp, #56]
 170:	ldr	w0, [x0]
 174:	cmp	w1, w0
 178:	b.cs	18c <list_backups+0x13c>  // b.hs, b.nlast
 17c:	ldr	x0, [sp, #24]
 180:	str	x0, [sp, #56]
 184:	mov	w0, #0x5                   	// #5
 188:	str	w0, [sp, #52]
 18c:	ldr	x0, [sp, #16]
 190:	ldr	w1, [x0]
 194:	ldr	x0, [sp, #56]
 198:	ldr	w0, [x0]
 19c:	cmp	w1, w0
 1a0:	b.cs	1b4 <list_backups+0x164>  // b.hs, b.nlast
 1a4:	ldr	x0, [sp, #16]
 1a8:	str	x0, [sp, #56]
 1ac:	mov	w0, #0x7                   	// #7
 1b0:	str	w0, [sp, #52]
 1b4:	ldr	x0, [sp, #56]
 1b8:	ldr	w0, [x0]
 1bc:	str	w0, [sp, #48]
 1c0:	ldr	x0, [sp, #56]
 1c4:	ldr	w1, [x0]
 1c8:	ldr	w0, [sp, #52]
 1cc:	mul	w1, w1, w0
 1d0:	ldr	x0, [sp, #56]
 1d4:	str	w1, [x0]
 1d8:	ldr	w0, [sp, #48]
 1dc:	ldp	x29, x30, [sp], #64
 1e0:	ret

00000000000001e4 <ext2fs_create_resize_inode>:
 1e4:	stp	x29, x30, [sp, #-288]!
 1e8:	mov	x29, sp
 1ec:	str	x0, [sp, #24]
 1f0:	str	wzr, [sp, #264]
 1f4:	str	wzr, [sp, #260]
 1f8:	str	wzr, [sp, #256]
 1fc:	ldr	x0, [sp, #24]
 200:	ldr	x1, [x0]
 204:	mov	x0, #0xb701                	// #46849
 208:	movk	x0, #0x7f2b, lsl #16
 20c:	cmp	x1, x0
 210:	b.eq	220 <ext2fs_create_resize_inode+0x3c>  // b.none
 214:	mov	x0, #0xb701                	// #46849
 218:	movk	x0, #0x7f2b, lsl #16
 21c:	b	7d8 <ext2fs_create_resize_inode+0x5f4>
 220:	ldr	x0, [sp, #24]
 224:	ldr	x0, [x0, #32]
 228:	str	x0, [sp, #240]
 22c:	ldr	x0, [sp, #24]
 230:	ldr	w0, [x0, #40]
 234:	mov	w0, w0
 238:	add	x1, sp, #0x38
 23c:	mov	x2, x1
 240:	mov	x1, x0
 244:	mov	x0, #0x2                   	// #2
 248:	bl	0 <ext2fs_get_array>
 24c:	str	x0, [sp, #280]
 250:	ldr	x0, [sp, #280]
 254:	cmp	x0, #0x0
 258:	b.eq	264 <ext2fs_create_resize_inode+0x80>  // b.none
 25c:	ldr	x0, [sp, #280]
 260:	b	7d8 <ext2fs_create_resize_inode+0x5f4>
 264:	ldr	x1, [sp, #56]
 268:	ldr	x0, [sp, #24]
 26c:	ldr	w0, [x0, #40]
 270:	mov	w0, w0
 274:	add	x0, x1, x0
 278:	str	x0, [sp, #232]
 27c:	add	x0, sp, #0x40
 280:	mov	x2, x0
 284:	mov	w1, #0x7                   	// #7
 288:	ldr	x0, [sp, #24]
 28c:	bl	0 <ext2fs_read_inode>
 290:	str	x0, [sp, #280]
 294:	ldr	x0, [sp, #280]
 298:	cmp	x0, #0x0
 29c:	b.ne	7b0 <ext2fs_create_resize_inode+0x5cc>  // b.any
 2a0:	ldr	x0, [sp, #240]
 2a4:	ldr	w0, [x0, #20]
 2a8:	str	w0, [sp, #256]
 2ac:	ldr	x0, [sp, #24]
 2b0:	ldr	w0, [x0, #40]
 2b4:	cmp	w0, #0x400
 2b8:	b.ne	2d0 <ext2fs_create_resize_inode+0xec>  // b.any
 2bc:	ldr	w0, [sp, #256]
 2c0:	cmp	w0, #0x0
 2c4:	b.ne	2d0 <ext2fs_create_resize_inode+0xec>  // b.any
 2c8:	mov	w0, #0x1                   	// #1
 2cc:	str	w0, [sp, #256]
 2d0:	ldr	x0, [sp, #240]
 2d4:	ldr	w0, [x0, #24]
 2d8:	mov	w1, #0x400                 	// #1024
 2dc:	lsl	w0, w1, w0
 2e0:	sxtw	x0, w0
 2e4:	lsr	x0, x0, #2
 2e8:	str	x0, [sp, #224]
 2ec:	ldr	w0, [sp, #156]
 2f0:	str	w0, [sp, #52]
 2f4:	ldr	w0, [sp, #52]
 2f8:	cmp	w0, #0x0
 2fc:	b.eq	32c <ext2fs_create_resize_inode+0x148>  // b.none
 300:	ldr	w0, [sp, #52]
 304:	ldr	x1, [sp, #56]
 308:	mov	x2, x1
 30c:	mov	w1, w0
 310:	ldr	x0, [sp, #24]
 314:	bl	0 <ext2fs_read_ind_block>
 318:	str	x0, [sp, #280]
 31c:	ldr	x0, [sp, #280]
 320:	cmp	x0, #0x0
 324:	b.eq	464 <ext2fs_create_resize_inode+0x280>  // b.none
 328:	b	744 <ext2fs_create_resize_inode+0x560>
 32c:	ldr	x0, [sp, #24]
 330:	ldr	x0, [x0, #56]
 334:	mov	w1, w0
 338:	ldr	w0, [sp, #256]
 33c:	add	w0, w1, w0
 340:	ldr	x1, [sp, #240]
 344:	ldrh	w1, [x1, #206]
 348:	add	w1, w0, w1
 34c:	ldr	x0, [sp, #24]
 350:	ldr	w0, [x0, #72]
 354:	add	w0, w1, w0
 358:	add	w0, w0, #0x2
 35c:	str	w0, [sp, #220]
 360:	add	x0, sp, #0x34
 364:	mov	x3, x0
 368:	mov	x2, #0x0                   	// #0
 36c:	ldr	w1, [sp, #220]
 370:	ldr	x0, [sp, #24]
 374:	bl	0 <ext2fs_alloc_block>
 378:	str	x0, [sp, #280]
 37c:	ldr	x0, [sp, #280]
 380:	cmp	x0, #0x0
 384:	b.ne	7b8 <ext2fs_create_resize_inode+0x5d4>  // b.any
 388:	mov	w0, #0xffff8180            	// #-32384
 38c:	strh	w0, [sp, #64]
 390:	mov	w0, #0x1                   	// #1
 394:	strh	w0, [sp, #90]
 398:	ldr	w0, [sp, #52]
 39c:	str	w0, [sp, #156]
 3a0:	add	x0, sp, #0x40
 3a4:	mov	x2, #0x1                   	// #1
 3a8:	mov	x1, x0
 3ac:	ldr	x0, [sp, #24]
 3b0:	bl	0 <ext2fs_iblk_set>
 3b4:	ldr	x3, [sp, #56]
 3b8:	ldr	x0, [sp, #24]
 3bc:	ldr	w0, [x0, #40]
 3c0:	mov	w0, w0
 3c4:	mov	x2, x0
 3c8:	mov	w1, #0x0                   	// #0
 3cc:	mov	x0, x3
 3d0:	bl	0 <memset>
 3d4:	mov	w0, #0x1                   	// #1
 3d8:	str	w0, [sp, #260]
 3dc:	ldr	w0, [sp, #260]
 3e0:	str	w0, [sp, #264]
 3e4:	ldr	x0, [sp, #224]
 3e8:	add	x1, x0, #0x1
 3ec:	ldr	x0, [sp, #224]
 3f0:	mul	x0, x1, x0
 3f4:	add	x0, x0, #0xc
 3f8:	str	x0, [sp, #208]
 3fc:	ldr	x0, [sp, #24]
 400:	ldr	w0, [x0, #40]
 404:	mov	w0, w0
 408:	ldr	x1, [sp, #208]
 40c:	mul	x0, x1, x0
 410:	str	x0, [sp, #208]
 414:	ldr	x1, [sp, #208]
 418:	add	x0, sp, #0x40
 41c:	mov	x2, x1
 420:	mov	x1, x0
 424:	ldr	x0, [sp, #24]
 428:	bl	0 <ext2fs_inode_size_set>
 42c:	str	x0, [sp, #280]
 430:	ldr	x0, [sp, #280]
 434:	cmp	x0, #0x0
 438:	b.ne	7c0 <ext2fs_create_resize_inode+0x5dc>  // b.any
 43c:	ldr	x0, [sp, #24]
 440:	ldr	x0, [x0, #184]
 444:	cmp	x0, #0x0
 448:	b.eq	458 <ext2fs_create_resize_inode+0x274>  // b.none
 44c:	ldr	x0, [sp, #24]
 450:	ldr	x0, [x0, #184]
 454:	b	460 <ext2fs_create_resize_inode+0x27c>
 458:	mov	x0, #0x0                   	// #0
 45c:	bl	0 <time>
 460:	str	w0, [sp, #76]
 464:	str	wzr, [sp, #276]
 468:	ldr	x0, [sp, #24]
 46c:	ldr	x0, [x0, #56]
 470:	str	w0, [sp, #272]
 474:	ldr	x0, [sp, #24]
 478:	ldr	x0, [x0, #56]
 47c:	mov	w1, w0
 480:	ldr	w0, [sp, #256]
 484:	add	w0, w1, w0
 488:	add	w0, w0, #0x1
 48c:	str	w0, [sp, #268]
 490:	b	6e0 <ext2fs_create_resize_inode+0x4fc>
 494:	mov	w0, #0x1                   	// #1
 498:	str	w0, [sp, #48]
 49c:	mov	w0, #0x5                   	// #5
 4a0:	str	w0, [sp, #44]
 4a4:	mov	w0, #0x7                   	// #7
 4a8:	str	w0, [sp, #40]
 4ac:	str	wzr, [sp, #252]
 4b0:	str	wzr, [sp, #248]
 4b4:	ldr	w0, [sp, #272]
 4b8:	ldr	x1, [sp, #224]
 4bc:	udiv	x2, x0, x1
 4c0:	ldr	x1, [sp, #224]
 4c4:	mul	x1, x2, x1
 4c8:	sub	x0, x0, x1
 4cc:	str	w0, [sp, #272]
 4d0:	ldr	x1, [sp, #56]
 4d4:	ldr	w0, [sp, #272]
 4d8:	lsl	x0, x0, #2
 4dc:	add	x0, x1, x0
 4e0:	ldr	w0, [x0]
 4e4:	cmp	w0, #0x0
 4e8:	b.ne	550 <ext2fs_create_resize_inode+0x36c>  // b.any
 4ec:	mov	w0, #0x1                   	// #1
 4f0:	str	w0, [sp, #260]
 4f4:	ldr	w0, [sp, #260]
 4f8:	str	w0, [sp, #264]
 4fc:	ldr	w0, [sp, #264]
 500:	str	w0, [sp, #248]
 504:	ldr	x0, [sp, #24]
 508:	ldr	w0, [x0, #40]
 50c:	mov	w0, w0
 510:	mov	x2, x0
 514:	mov	w1, #0x0                   	// #0
 518:	ldr	x0, [sp, #232]
 51c:	bl	0 <memset>
 520:	ldr	x1, [sp, #56]
 524:	ldr	w0, [sp, #272]
 528:	lsl	x0, x0, #2
 52c:	add	x0, x1, x0
 530:	ldr	w1, [sp, #268]
 534:	str	w1, [x0]
 538:	add	x0, sp, #0x40
 53c:	mov	x2, #0x1                   	// #1
 540:	mov	x1, x0
 544:	ldr	x0, [sp, #24]
 548:	bl	0 <ext2fs_iblk_add_blocks>
 54c:	b	658 <ext2fs_create_resize_inode+0x474>
 550:	ldr	x1, [sp, #56]
 554:	ldr	w0, [sp, #272]
 558:	lsl	x0, x0, #2
 55c:	add	x0, x1, x0
 560:	ldr	w0, [x0]
 564:	ldr	w1, [sp, #268]
 568:	cmp	w1, w0
 56c:	b.ne	594 <ext2fs_create_resize_inode+0x3b0>  // b.any
 570:	ldr	x2, [sp, #232]
 574:	ldr	w1, [sp, #268]
 578:	ldr	x0, [sp, #24]
 57c:	bl	0 <ext2fs_read_ind_block>
 580:	str	x0, [sp, #280]
 584:	ldr	x0, [sp, #280]
 588:	cmp	x0, #0x0
 58c:	b.eq	658 <ext2fs_create_resize_inode+0x474>  // b.none
 590:	b	700 <ext2fs_create_resize_inode+0x51c>
 594:	mov	x0, #0xb75e                	// #46942
 598:	movk	x0, #0x7f2b, lsl #16
 59c:	str	x0, [sp, #280]
 5a0:	b	700 <ext2fs_create_resize_inode+0x51c>
 5a4:	ldr	x0, [sp, #240]
 5a8:	ldr	w1, [x0, #32]
 5ac:	ldr	w0, [sp, #204]
 5b0:	mul	w0, w1, w0
 5b4:	ldr	w1, [sp, #268]
 5b8:	add	w0, w1, w0
 5bc:	str	w0, [sp, #200]
 5c0:	ldr	w0, [sp, #252]
 5c4:	lsl	x0, x0, #2
 5c8:	ldr	x1, [sp, #232]
 5cc:	add	x0, x1, x0
 5d0:	ldr	w0, [x0]
 5d4:	cmp	w0, #0x0
 5d8:	b.ne	61c <ext2fs_create_resize_inode+0x438>  // b.any
 5dc:	ldr	w0, [sp, #252]
 5e0:	lsl	x0, x0, #2
 5e4:	ldr	x1, [sp, #232]
 5e8:	add	x0, x1, x0
 5ec:	ldr	w1, [sp, #200]
 5f0:	str	w1, [x0]
 5f4:	add	x0, sp, #0x40
 5f8:	mov	x2, #0x1                   	// #1
 5fc:	mov	x1, x0
 600:	ldr	x0, [sp, #24]
 604:	bl	0 <ext2fs_iblk_add_blocks>
 608:	mov	w0, #0x1                   	// #1
 60c:	str	w0, [sp, #260]
 610:	ldr	w0, [sp, #260]
 614:	str	w0, [sp, #248]
 618:	b	64c <ext2fs_create_resize_inode+0x468>
 61c:	ldr	w0, [sp, #252]
 620:	lsl	x0, x0, #2
 624:	ldr	x1, [sp, #232]
 628:	add	x0, x1, x0
 62c:	ldr	w0, [x0]
 630:	ldr	w1, [sp, #200]
 634:	cmp	w1, w0
 638:	b.eq	64c <ext2fs_create_resize_inode+0x468>  // b.none
 63c:	mov	x0, #0xb75e                	// #46942
 640:	movk	x0, #0x7f2b, lsl #16
 644:	str	x0, [sp, #280]
 648:	b	700 <ext2fs_create_resize_inode+0x51c>
 64c:	ldr	w0, [sp, #252]
 650:	add	w0, w0, #0x1
 654:	str	w0, [sp, #252]
 658:	add	x2, sp, #0x28
 65c:	add	x1, sp, #0x2c
 660:	add	x0, sp, #0x30
 664:	mov	x3, x2
 668:	mov	x2, x1
 66c:	mov	x1, x0
 670:	ldr	x0, [sp, #24]
 674:	bl	50 <list_backups>
 678:	str	w0, [sp, #204]
 67c:	ldr	x0, [sp, #24]
 680:	ldr	w0, [x0, #48]
 684:	ldr	w1, [sp, #204]
 688:	cmp	w1, w0
 68c:	b.cc	5a4 <ext2fs_create_resize_inode+0x3c0>  // b.lo, b.ul, b.last
 690:	ldr	w0, [sp, #248]
 694:	cmp	w0, #0x0
 698:	b.eq	6bc <ext2fs_create_resize_inode+0x4d8>  // b.none
 69c:	ldr	x2, [sp, #232]
 6a0:	ldr	w1, [sp, #268]
 6a4:	ldr	x0, [sp, #24]
 6a8:	bl	0 <ext2fs_write_ind_block>
 6ac:	str	x0, [sp, #280]
 6b0:	ldr	x0, [sp, #280]
 6b4:	cmp	x0, #0x0
 6b8:	b.ne	6fc <ext2fs_create_resize_inode+0x518>  // b.any
 6bc:	ldr	w0, [sp, #276]
 6c0:	add	w0, w0, #0x1
 6c4:	str	w0, [sp, #276]
 6c8:	ldr	w0, [sp, #272]
 6cc:	add	w0, w0, #0x1
 6d0:	str	w0, [sp, #272]
 6d4:	ldr	w0, [sp, #268]
 6d8:	add	w0, w0, #0x1
 6dc:	str	w0, [sp, #268]
 6e0:	ldr	x0, [sp, #240]
 6e4:	ldrh	w0, [x0, #206]
 6e8:	mov	w1, w0
 6ec:	ldr	w0, [sp, #276]
 6f0:	cmp	w0, w1
 6f4:	b.cc	494 <ext2fs_create_resize_inode+0x2b0>  // b.lo, b.ul, b.last
 6f8:	b	700 <ext2fs_create_resize_inode+0x51c>
 6fc:	nop
 700:	ldr	w0, [sp, #264]
 704:	cmp	w0, #0x0
 708:	b.eq	740 <ext2fs_create_resize_inode+0x55c>  // b.none
 70c:	ldr	w0, [sp, #52]
 710:	ldr	x1, [sp, #56]
 714:	mov	x2, x1
 718:	mov	w1, w0
 71c:	ldr	x0, [sp, #24]
 720:	bl	0 <ext2fs_write_ind_block>
 724:	str	x0, [sp, #192]
 728:	ldr	x0, [sp, #280]
 72c:	cmp	x0, #0x0
 730:	b.ne	740 <ext2fs_create_resize_inode+0x55c>  // b.any
 734:	ldr	x0, [sp, #192]
 738:	str	x0, [sp, #280]
 73c:	b	744 <ext2fs_create_resize_inode+0x560>
 740:	nop
 744:	ldr	w0, [sp, #260]
 748:	cmp	w0, #0x0
 74c:	b.eq	7c8 <ext2fs_create_resize_inode+0x5e4>  // b.none
 750:	ldr	x0, [sp, #24]
 754:	ldr	x0, [x0, #184]
 758:	cmp	x0, #0x0
 75c:	b.eq	76c <ext2fs_create_resize_inode+0x588>  // b.none
 760:	ldr	x0, [sp, #24]
 764:	ldr	x0, [x0, #184]
 768:	b	774 <ext2fs_create_resize_inode+0x590>
 76c:	mov	x0, #0x0                   	// #0
 770:	bl	0 <time>
 774:	str	w0, [sp, #80]
 778:	ldr	w0, [sp, #80]
 77c:	str	w0, [sp, #72]
 780:	add	x0, sp, #0x40
 784:	mov	x2, x0
 788:	mov	w1, #0x7                   	// #7
 78c:	ldr	x0, [sp, #24]
 790:	bl	0 <ext2fs_write_new_inode>
 794:	str	x0, [sp, #192]
 798:	ldr	x0, [sp, #280]
 79c:	cmp	x0, #0x0
 7a0:	b.ne	7c8 <ext2fs_create_resize_inode+0x5e4>  // b.any
 7a4:	ldr	x0, [sp, #192]
 7a8:	str	x0, [sp, #280]
 7ac:	b	7cc <ext2fs_create_resize_inode+0x5e8>
 7b0:	nop
 7b4:	b	7cc <ext2fs_create_resize_inode+0x5e8>
 7b8:	nop
 7bc:	b	7cc <ext2fs_create_resize_inode+0x5e8>
 7c0:	nop
 7c4:	b	7cc <ext2fs_create_resize_inode+0x5e8>
 7c8:	nop
 7cc:	add	x0, sp, #0x38
 7d0:	bl	0 <ext2fs_free_mem>
 7d4:	ldr	x0, [sp, #280]
 7d8:	ldp	x29, x30, [sp], #288
 7dc:	ret

rw_bitmaps.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_gdt_csum>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #100]
      10:	and	w0, w0, #0x10
      14:	cmp	w0, #0x0
      18:	cset	w0, ne  // ne = any
      1c:	and	w0, w0, #0xff
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <ext2fs_has_feature_metadata_csum>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #100]
      38:	and	w0, w0, #0x400
      3c:	cmp	w0, #0x0
      40:	cset	w0, ne  // ne = any
      44:	and	w0, w0, #0xff
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <ext2fs_has_group_desc_csum>:
      50:	stp	x29, x30, [sp, #-32]!
      54:	mov	x29, sp
      58:	str	x0, [sp, #24]
      5c:	ldr	x0, [sp, #24]
      60:	ldr	x0, [x0, #32]
      64:	bl	28 <ext2fs_has_feature_metadata_csum>
      68:	cmp	w0, #0x0
      6c:	b.ne	84 <ext2fs_has_group_desc_csum+0x34>  // b.any
      70:	ldr	x0, [sp, #24]
      74:	ldr	x0, [x0, #32]
      78:	bl	0 <ext2fs_has_feature_gdt_csum>
      7c:	cmp	w0, #0x0
      80:	b.eq	8c <ext2fs_has_group_desc_csum+0x3c>  // b.none
      84:	mov	w0, #0x1                   	// #1
      88:	b	90 <ext2fs_has_group_desc_csum+0x40>
      8c:	mov	w0, #0x0                   	// #0
      90:	ldp	x29, x30, [sp], #32
      94:	ret

0000000000000098 <write_bitmaps>:
      98:	stp	x29, x30, [sp, #-112]!
      9c:	mov	x29, sp
      a0:	str	x0, [sp, #24]
      a4:	str	w1, [sp, #20]
      a8:	str	w2, [sp, #16]
      ac:	str	xzr, [sp, #48]
      b0:	str	xzr, [sp, #40]
      b4:	ldr	x0, [sp, #24]
      b8:	ldr	x0, [x0, #32]
      bc:	ldr	w1, [x0, #20]
      c0:	ldr	x0, [sp, #24]
      c4:	ldr	w0, [x0, #192]
      c8:	lsr	w0, w1, w0
      cc:	mov	w0, w0
      d0:	str	x0, [sp, #80]
      d4:	mov	w0, #0x1                   	// #1
      d8:	str	w0, [sp, #76]
      dc:	ldr	x0, [sp, #24]
      e0:	ldr	x1, [x0]
      e4:	mov	x0, #0xb701                	// #46849
      e8:	movk	x0, #0x7f2b, lsl #16
      ec:	cmp	x1, x0
      f0:	b.eq	100 <write_bitmaps+0x68>  // b.none
      f4:	mov	x0, #0xb701                	// #46849
      f8:	movk	x0, #0x7f2b, lsl #16
      fc:	b	624 <write_bitmaps+0x58c>
     100:	ldr	x0, [sp, #24]
     104:	ldr	w0, [x0, #16]
     108:	and	w0, w0, #0x1
     10c:	cmp	w0, #0x0
     110:	b.ne	120 <write_bitmaps+0x88>  // b.any
     114:	mov	x0, #0xb715                	// #46869
     118:	movk	x0, #0x7f2b, lsl #16
     11c:	b	624 <write_bitmaps+0x58c>
     120:	ldr	x0, [sp, #24]
     124:	bl	50 <ext2fs_has_group_desc_csum>
     128:	str	w0, [sp, #72]
     12c:	str	wzr, [sp, #100]
     130:	ldr	w0, [sp, #100]
     134:	str	w0, [sp, #96]
     138:	ldr	w0, [sp, #16]
     13c:	cmp	w0, #0x0
     140:	b.eq	1a0 <write_bitmaps+0x108>  // b.none
     144:	ldr	x0, [sp, #24]
     148:	ldr	x0, [x0, #32]
     14c:	ldr	w0, [x0, #36]
     150:	lsr	w0, w0, #3
     154:	str	w0, [sp, #100]
     158:	ldr	x0, [sp, #24]
     15c:	ldr	x0, [x0, #8]
     160:	add	x1, sp, #0x30
     164:	mov	x2, x1
     168:	mov	w1, #0x0                   	// #0
     16c:	bl	0 <io_channel_alloc_buf>
     170:	str	x0, [sp, #88]
     174:	ldr	x0, [sp, #88]
     178:	cmp	x0, #0x0
     17c:	b.ne	5d4 <write_bitmaps+0x53c>  // b.any
     180:	ldr	x3, [sp, #48]
     184:	ldr	x0, [sp, #24]
     188:	ldr	w0, [x0, #40]
     18c:	mov	w0, w0
     190:	mov	x2, x0
     194:	mov	w1, #0xff                  	// #255
     198:	mov	x0, x3
     19c:	bl	0 <memset>
     1a0:	ldr	w0, [sp, #20]
     1a4:	cmp	w0, #0x0
     1a8:	b.eq	20c <write_bitmaps+0x174>  // b.none
     1ac:	ldr	x0, [sp, #24]
     1b0:	ldr	x0, [x0, #32]
     1b4:	ldr	w0, [x0, #40]
     1b8:	add	w0, w0, #0x7
     1bc:	lsr	w0, w0, #3
     1c0:	str	w0, [sp, #96]
     1c4:	ldr	x0, [sp, #24]
     1c8:	ldr	x0, [x0, #8]
     1cc:	add	x1, sp, #0x28
     1d0:	mov	x2, x1
     1d4:	mov	w1, #0x0                   	// #0
     1d8:	bl	0 <io_channel_alloc_buf>
     1dc:	str	x0, [sp, #88]
     1e0:	ldr	x0, [sp, #88]
     1e4:	cmp	x0, #0x0
     1e8:	b.ne	5dc <write_bitmaps+0x544>  // b.any
     1ec:	ldr	x3, [sp, #40]
     1f0:	ldr	x0, [sp, #24]
     1f4:	ldr	w0, [x0, #40]
     1f8:	mov	w0, w0
     1fc:	mov	x2, x0
     200:	mov	w1, #0xff                  	// #255
     204:	mov	x0, x3
     208:	bl	0 <memset>
     20c:	str	wzr, [sp, #108]
     210:	b	568 <write_bitmaps+0x4d0>
     214:	ldr	w0, [sp, #16]
     218:	cmp	w0, #0x0
     21c:	b.eq	420 <write_bitmaps+0x388>  // b.none
     220:	ldr	w0, [sp, #72]
     224:	cmp	w0, #0x0
     228:	b.eq	244 <write_bitmaps+0x1ac>  // b.none
     22c:	mov	w2, #0x2                   	// #2
     230:	ldr	w1, [sp, #108]
     234:	ldr	x0, [sp, #24]
     238:	bl	0 <ext2fs_bg_flags_test>
     23c:	cmp	w0, #0x0
     240:	b.ne	3f8 <write_bitmaps+0x360>  // b.any
     244:	ldr	x0, [sp, #24]
     248:	ldr	x4, [x0, #88]
     24c:	ldr	w0, [sp, #100]
     250:	lsl	w0, w0, #3
     254:	sxtw	x0, w0
     258:	ldr	x1, [sp, #48]
     25c:	mov	x3, x1
     260:	mov	x2, x0
     264:	ldr	x1, [sp, #80]
     268:	mov	x0, x4
     26c:	bl	0 <ext2fs_get_block_bitmap_range2>
     270:	str	x0, [sp, #88]
     274:	ldr	x0, [sp, #88]
     278:	cmp	x0, #0x0
     27c:	b.ne	5e4 <write_bitmaps+0x54c>  // b.any
     280:	ldr	x0, [sp, #24]
     284:	ldr	w0, [x0, #48]
     288:	sub	w0, w0, #0x1
     28c:	ldr	w1, [sp, #108]
     290:	cmp	w1, w0
     294:	b.ne	350 <write_bitmaps+0x2b8>  // b.any
     298:	ldr	x0, [sp, #24]
     29c:	ldr	x0, [x0, #32]
     2a0:	bl	0 <ext2fs_blocks_count>
     2a4:	mov	x1, x0
     2a8:	ldr	x0, [sp, #24]
     2ac:	ldr	x0, [x0, #32]
     2b0:	ldr	w0, [x0, #20]
     2b4:	mov	w0, w0
     2b8:	sub	x0, x1, x0
     2bc:	ldr	x1, [sp, #24]
     2c0:	ldr	x1, [x1, #32]
     2c4:	ldr	w1, [x1, #32]
     2c8:	mov	w1, w1
     2cc:	udiv	x2, x0, x1
     2d0:	mul	x1, x2, x1
     2d4:	sub	x1, x0, x1
     2d8:	ldr	x0, [sp, #24]
     2dc:	ldr	w0, [x0, #192]
     2e0:	mov	w2, #0x1                   	// #1
     2e4:	lsl	w0, w2, w0
     2e8:	sub	w0, w0, #0x1
     2ec:	sxtw	x0, w0
     2f0:	add	x1, x1, x0
     2f4:	ldr	x0, [sp, #24]
     2f8:	ldr	w0, [x0, #192]
     2fc:	lsr	x0, x1, x0
     300:	str	w0, [sp, #68]
     304:	ldr	w0, [sp, #68]
     308:	cmp	w0, #0x0
     30c:	b.eq	350 <write_bitmaps+0x2b8>  // b.none
     310:	ldr	w0, [sp, #68]
     314:	str	w0, [sp, #104]
     318:	b	338 <write_bitmaps+0x2a0>
     31c:	ldr	x0, [sp, #48]
     320:	mov	x1, x0
     324:	ldr	w0, [sp, #104]
     328:	bl	0 <ext2fs_set_bit>
     32c:	ldr	w0, [sp, #104]
     330:	add	w0, w0, #0x1
     334:	str	w0, [sp, #104]
     338:	ldr	x0, [sp, #24]
     33c:	ldr	w0, [x0, #40]
     340:	lsl	w0, w0, #3
     344:	ldr	w1, [sp, #104]
     348:	cmp	w1, w0
     34c:	b.cc	31c <write_bitmaps+0x284>  // b.lo, b.ul, b.last
     350:	ldr	x0, [sp, #48]
     354:	ldr	w3, [sp, #100]
     358:	mov	x2, x0
     35c:	ldr	w1, [sp, #108]
     360:	ldr	x0, [sp, #24]
     364:	bl	0 <ext2fs_block_bitmap_csum_set>
     368:	str	x0, [sp, #88]
     36c:	ldr	x0, [sp, #88]
     370:	cmp	x0, #0x0
     374:	b.eq	380 <write_bitmaps+0x2e8>  // b.none
     378:	ldr	x0, [sp, #88]
     37c:	b	624 <write_bitmaps+0x58c>
     380:	ldr	w1, [sp, #108]
     384:	ldr	x0, [sp, #24]
     388:	bl	0 <ext2fs_group_desc_csum_set>
     38c:	ldr	x0, [sp, #24]
     390:	ldr	w0, [x0, #16]
     394:	orr	w1, w0, #0x4
     398:	ldr	x0, [sp, #24]
     39c:	str	w1, [x0, #16]
     3a0:	ldr	w1, [sp, #108]
     3a4:	ldr	x0, [sp, #24]
     3a8:	bl	0 <ext2fs_block_bitmap_loc>
     3ac:	str	x0, [sp, #56]
     3b0:	ldr	x0, [sp, #56]
     3b4:	cmp	x0, #0x0
     3b8:	b.eq	400 <write_bitmaps+0x368>  // b.none
     3bc:	ldr	x0, [sp, #24]
     3c0:	ldr	x0, [x0, #8]
     3c4:	ldr	x1, [sp, #48]
     3c8:	mov	x3, x1
     3cc:	mov	w2, #0x1                   	// #1
     3d0:	ldr	x1, [sp, #56]
     3d4:	bl	0 <io_channel_write_blk64>
     3d8:	str	x0, [sp, #88]
     3dc:	ldr	x0, [sp, #88]
     3e0:	cmp	x0, #0x0
     3e4:	b.eq	400 <write_bitmaps+0x368>  // b.none
     3e8:	mov	x0, #0xb71d                	// #46877
     3ec:	movk	x0, #0x7f2b, lsl #16
     3f0:	str	x0, [sp, #88]
     3f4:	b	5f8 <write_bitmaps+0x560>
     3f8:	nop
     3fc:	b	404 <write_bitmaps+0x36c>
     400:	nop
     404:	ldr	w0, [sp, #100]
     408:	lsl	w0, w0, #3
     40c:	sxtw	x0, w0
     410:	ldr	x1, [sp, #80]
     414:	add	x0, x1, x0
     418:	str	x0, [sp, #80]
     41c:	b	424 <write_bitmaps+0x38c>
     420:	nop
     424:	ldr	w0, [sp, #20]
     428:	cmp	w0, #0x0
     42c:	b.eq	558 <write_bitmaps+0x4c0>  // b.none
     430:	ldr	w0, [sp, #72]
     434:	cmp	w0, #0x0
     438:	b.eq	454 <write_bitmaps+0x3bc>  // b.none
     43c:	mov	w2, #0x1                   	// #1
     440:	ldr	w1, [sp, #108]
     444:	ldr	x0, [sp, #24]
     448:	bl	0 <ext2fs_bg_flags_test>
     44c:	cmp	w0, #0x0
     450:	b.ne	530 <write_bitmaps+0x498>  // b.any
     454:	ldr	x0, [sp, #24]
     458:	ldr	x4, [x0, #80]
     45c:	ldr	w1, [sp, #76]
     460:	ldr	w0, [sp, #96]
     464:	lsl	w0, w0, #3
     468:	sxtw	x0, w0
     46c:	ldr	x2, [sp, #40]
     470:	mov	x3, x2
     474:	mov	x2, x0
     478:	mov	x0, x4
     47c:	bl	0 <ext2fs_get_inode_bitmap_range2>
     480:	str	x0, [sp, #88]
     484:	ldr	x0, [sp, #88]
     488:	cmp	x0, #0x0
     48c:	b.ne	5ec <write_bitmaps+0x554>  // b.any
     490:	ldr	x0, [sp, #40]
     494:	ldr	w3, [sp, #96]
     498:	mov	x2, x0
     49c:	ldr	w1, [sp, #108]
     4a0:	ldr	x0, [sp, #24]
     4a4:	bl	0 <ext2fs_inode_bitmap_csum_set>
     4a8:	str	x0, [sp, #88]
     4ac:	ldr	x0, [sp, #88]
     4b0:	cmp	x0, #0x0
     4b4:	b.ne	5f4 <write_bitmaps+0x55c>  // b.any
     4b8:	ldr	w1, [sp, #108]
     4bc:	ldr	x0, [sp, #24]
     4c0:	bl	0 <ext2fs_group_desc_csum_set>
     4c4:	ldr	x0, [sp, #24]
     4c8:	ldr	w0, [x0, #16]
     4cc:	orr	w1, w0, #0x4
     4d0:	ldr	x0, [sp, #24]
     4d4:	str	w1, [x0, #16]
     4d8:	ldr	w1, [sp, #108]
     4dc:	ldr	x0, [sp, #24]
     4e0:	bl	0 <ext2fs_inode_bitmap_loc>
     4e4:	str	x0, [sp, #56]
     4e8:	ldr	x0, [sp, #56]
     4ec:	cmp	x0, #0x0
     4f0:	b.eq	538 <write_bitmaps+0x4a0>  // b.none
     4f4:	ldr	x0, [sp, #24]
     4f8:	ldr	x0, [x0, #8]
     4fc:	ldr	x1, [sp, #40]
     500:	mov	x3, x1
     504:	mov	w2, #0x1                   	// #1
     508:	ldr	x1, [sp, #56]
     50c:	bl	0 <io_channel_write_blk64>
     510:	str	x0, [sp, #88]
     514:	ldr	x0, [sp, #88]
     518:	cmp	x0, #0x0
     51c:	b.eq	538 <write_bitmaps+0x4a0>  // b.none
     520:	mov	x0, #0xb71b                	// #46875
     524:	movk	x0, #0x7f2b, lsl #16
     528:	str	x0, [sp, #88]
     52c:	b	5f8 <write_bitmaps+0x560>
     530:	nop
     534:	b	53c <write_bitmaps+0x4a4>
     538:	nop
     53c:	ldr	w0, [sp, #96]
     540:	lsl	w0, w0, #3
     544:	mov	w1, w0
     548:	ldr	w0, [sp, #76]
     54c:	add	w0, w0, w1
     550:	str	w0, [sp, #76]
     554:	b	55c <write_bitmaps+0x4c4>
     558:	nop
     55c:	ldr	w0, [sp, #108]
     560:	add	w0, w0, #0x1
     564:	str	w0, [sp, #108]
     568:	ldr	x0, [sp, #24]
     56c:	ldr	w0, [x0, #48]
     570:	ldr	w1, [sp, #108]
     574:	cmp	w1, w0
     578:	b.cc	214 <write_bitmaps+0x17c>  // b.lo, b.ul, b.last
     57c:	ldr	w0, [sp, #16]
     580:	cmp	w0, #0x0
     584:	b.eq	5a4 <write_bitmaps+0x50c>  // b.none
     588:	ldr	x0, [sp, #24]
     58c:	ldr	w0, [x0, #16]
     590:	and	w1, w0, #0xffffffdf
     594:	ldr	x0, [sp, #24]
     598:	str	w1, [x0, #16]
     59c:	add	x0, sp, #0x30
     5a0:	bl	0 <ext2fs_free_mem>
     5a4:	ldr	w0, [sp, #20]
     5a8:	cmp	w0, #0x0
     5ac:	b.eq	5cc <write_bitmaps+0x534>  // b.none
     5b0:	ldr	x0, [sp, #24]
     5b4:	ldr	w0, [x0, #16]
     5b8:	and	w1, w0, #0xffffffef
     5bc:	ldr	x0, [sp, #24]
     5c0:	str	w1, [x0, #16]
     5c4:	add	x0, sp, #0x28
     5c8:	bl	0 <ext2fs_free_mem>
     5cc:	mov	x0, #0x0                   	// #0
     5d0:	b	624 <write_bitmaps+0x58c>
     5d4:	nop
     5d8:	b	5f8 <write_bitmaps+0x560>
     5dc:	nop
     5e0:	b	5f8 <write_bitmaps+0x560>
     5e4:	nop
     5e8:	b	5f8 <write_bitmaps+0x560>
     5ec:	nop
     5f0:	b	5f8 <write_bitmaps+0x560>
     5f4:	nop
     5f8:	ldr	x0, [sp, #40]
     5fc:	cmp	x0, #0x0
     600:	b.eq	60c <write_bitmaps+0x574>  // b.none
     604:	add	x0, sp, #0x28
     608:	bl	0 <ext2fs_free_mem>
     60c:	ldr	x0, [sp, #48]
     610:	cmp	x0, #0x0
     614:	b.eq	620 <write_bitmaps+0x588>  // b.none
     618:	add	x0, sp, #0x30
     61c:	bl	0 <ext2fs_free_mem>
     620:	ldr	x0, [sp, #88]
     624:	ldp	x29, x30, [sp], #112
     628:	ret

000000000000062c <mark_uninit_bg_group_blocks>:
     62c:	stp	x29, x30, [sp, #-64]!
     630:	mov	x29, sp
     634:	str	x0, [sp, #24]
     638:	ldr	x0, [sp, #24]
     63c:	ldr	x0, [x0, #88]
     640:	str	x0, [sp, #48]
     644:	str	wzr, [sp, #60]
     648:	b	70c <mark_uninit_bg_group_blocks+0xe0>
     64c:	mov	w2, #0x2                   	// #2
     650:	ldr	w1, [sp, #60]
     654:	ldr	x0, [sp, #24]
     658:	bl	0 <ext2fs_bg_flags_test>
     65c:	cmp	w0, #0x0
     660:	b.eq	6fc <mark_uninit_bg_group_blocks+0xd0>  // b.none
     664:	ldr	x2, [sp, #48]
     668:	ldr	w1, [sp, #60]
     66c:	ldr	x0, [sp, #24]
     670:	bl	0 <ext2fs_reserve_super_and_bgd>
     674:	ldr	w1, [sp, #60]
     678:	ldr	x0, [sp, #24]
     67c:	bl	0 <ext2fs_inode_table_loc>
     680:	str	x0, [sp, #40]
     684:	ldr	x0, [sp, #40]
     688:	cmp	x0, #0x0
     68c:	b.eq	6a8 <mark_uninit_bg_group_blocks+0x7c>  // b.none
     690:	ldr	x0, [sp, #24]
     694:	ldr	w0, [x0, #72]
     698:	mov	w2, w0
     69c:	ldr	x1, [sp, #40]
     6a0:	ldr	x0, [sp, #48]
     6a4:	bl	0 <ext2fs_mark_block_bitmap_range2>
     6a8:	ldr	w1, [sp, #60]
     6ac:	ldr	x0, [sp, #24]
     6b0:	bl	0 <ext2fs_block_bitmap_loc>
     6b4:	str	x0, [sp, #40]
     6b8:	ldr	x0, [sp, #40]
     6bc:	cmp	x0, #0x0
     6c0:	b.eq	6d0 <mark_uninit_bg_group_blocks+0xa4>  // b.none
     6c4:	ldr	x1, [sp, #40]
     6c8:	ldr	x0, [sp, #48]
     6cc:	bl	0 <ext2fs_mark_block_bitmap2>
     6d0:	ldr	w1, [sp, #60]
     6d4:	ldr	x0, [sp, #24]
     6d8:	bl	0 <ext2fs_inode_bitmap_loc>
     6dc:	str	x0, [sp, #40]
     6e0:	ldr	x0, [sp, #40]
     6e4:	cmp	x0, #0x0
     6e8:	b.eq	700 <mark_uninit_bg_group_blocks+0xd4>  // b.none
     6ec:	ldr	x1, [sp, #40]
     6f0:	ldr	x0, [sp, #48]
     6f4:	bl	0 <ext2fs_mark_block_bitmap2>
     6f8:	b	700 <mark_uninit_bg_group_blocks+0xd4>
     6fc:	nop
     700:	ldr	w0, [sp, #60]
     704:	add	w0, w0, #0x1
     708:	str	w0, [sp, #60]
     70c:	ldr	x0, [sp, #24]
     710:	ldr	w0, [x0, #48]
     714:	ldr	w1, [sp, #60]
     718:	cmp	w1, w0
     71c:	b.cc	64c <mark_uninit_bg_group_blocks+0x20>  // b.lo, b.ul, b.last
     720:	mov	x0, #0x0                   	// #0
     724:	ldp	x29, x30, [sp], #64
     728:	ret

000000000000072c <bitmap_tail_verify>:
     72c:	sub	sp, sp, #0x20
     730:	str	x0, [sp, #8]
     734:	str	w1, [sp, #4]
     738:	str	w2, [sp]
     73c:	ldr	w0, [sp, #4]
     740:	str	w0, [sp, #28]
     744:	b	774 <bitmap_tail_verify+0x48>
     748:	ldrsw	x0, [sp, #28]
     74c:	ldr	x1, [sp, #8]
     750:	add	x0, x1, x0
     754:	ldrb	w0, [x0]
     758:	cmp	w0, #0xff
     75c:	b.eq	768 <bitmap_tail_verify+0x3c>  // b.none
     760:	mov	w0, #0x0                   	// #0
     764:	b	788 <bitmap_tail_verify+0x5c>
     768:	ldr	w0, [sp, #28]
     76c:	add	w0, w0, #0x1
     770:	str	w0, [sp, #28]
     774:	ldr	w1, [sp, #28]
     778:	ldr	w0, [sp]
     77c:	cmp	w1, w0
     780:	b.le	748 <bitmap_tail_verify+0x1c>
     784:	mov	w0, #0x1                   	// #1
     788:	add	sp, sp, #0x20
     78c:	ret

0000000000000790 <read_bitmaps>:
     790:	stp	x29, x30, [sp, #-128]!
     794:	mov	x29, sp
     798:	str	x0, [sp, #24]
     79c:	str	w1, [sp, #20]
     7a0:	str	w2, [sp, #16]
     7a4:	str	xzr, [sp, #48]
     7a8:	str	xzr, [sp, #40]
     7ac:	ldr	x0, [sp, #24]
     7b0:	ldr	x0, [x0, #32]
     7b4:	ldr	w0, [x0, #36]
     7b8:	lsr	w0, w0, #3
     7bc:	str	w0, [sp, #108]
     7c0:	ldr	x0, [sp, #24]
     7c4:	ldr	x0, [x0, #32]
     7c8:	ldr	w0, [x0, #40]
     7cc:	lsr	w0, w0, #3
     7d0:	str	w0, [sp, #104]
     7d4:	str	wzr, [sp, #100]
     7d8:	ldr	x0, [sp, #24]
     7dc:	ldr	x0, [x0, #32]
     7e0:	ldr	w1, [x0, #20]
     7e4:	ldr	x0, [sp, #24]
     7e8:	ldr	w0, [x0, #192]
     7ec:	lsr	w0, w1, w0
     7f0:	mov	w0, w0
     7f4:	str	x0, [sp, #80]
     7f8:	mov	w0, #0x1                   	// #1
     7fc:	str	w0, [sp, #68]
     800:	ldr	x0, [sp, #24]
     804:	ldr	x1, [x0]
     808:	mov	x0, #0xb701                	// #46849
     80c:	movk	x0, #0x7f2b, lsl #16
     810:	cmp	x1, x0
     814:	b.eq	824 <read_bitmaps+0x94>  // b.none
     818:	mov	x0, #0xb701                	// #46849
     81c:	movk	x0, #0x7f2b, lsl #16
     820:	b	1118 <read_bitmaps+0x988>
     824:	ldr	x0, [sp, #24]
     828:	ldr	w0, [x0, #40]
     82c:	mov	w1, w0
     830:	ldr	w0, [sp, #108]
     834:	cmp	w0, w1
     838:	b.gt	854 <read_bitmaps+0xc4>
     83c:	ldr	x0, [sp, #24]
     840:	ldr	w0, [x0, #40]
     844:	mov	w1, w0
     848:	ldr	w0, [sp, #104]
     84c:	cmp	w0, w1
     850:	b.le	860 <read_bitmaps+0xd0>
     854:	mov	x0, #0xb73c                	// #46908
     858:	movk	x0, #0x7f2b, lsl #16
     85c:	b	1118 <read_bitmaps+0x988>
     860:	ldr	x0, [sp, #24]
     864:	adrp	x1, 1224 <ext2fs_write_bitmaps>
     868:	add	x1, x1, #0x0
     86c:	str	x1, [x0, #112]
     870:	ldr	x0, [sp, #24]
     874:	bl	50 <ext2fs_has_group_desc_csum>
     878:	str	w0, [sp, #60]
     87c:	ldr	x0, [sp, #24]
     880:	ldr	x0, [x0, #24]
     884:	bl	0 <strlen>
     888:	add	x0, x0, #0x50
     88c:	add	x1, sp, #0x20
     890:	bl	0 <ext2fs_get_mem>
     894:	str	x0, [sp, #112]
     898:	ldr	x0, [sp, #112]
     89c:	cmp	x0, #0x0
     8a0:	b.eq	8ac <read_bitmaps+0x11c>  // b.none
     8a4:	ldr	x0, [sp, #112]
     8a8:	b	1118 <read_bitmaps+0x988>
     8ac:	ldr	w0, [sp, #16]
     8b0:	cmp	w0, #0x0
     8b4:	b.eq	964 <read_bitmaps+0x1d4>  // b.none
     8b8:	ldr	x0, [sp, #24]
     8bc:	ldr	x0, [x0, #88]
     8c0:	cmp	x0, #0x0
     8c4:	b.eq	8d4 <read_bitmaps+0x144>  // b.none
     8c8:	ldr	x0, [sp, #24]
     8cc:	ldr	x0, [x0, #88]
     8d0:	bl	0 <ext2fs_free_block_bitmap>
     8d4:	ldr	x1, [sp, #32]
     8d8:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     8dc:	add	x0, x0, #0x0
     8e0:	mov	x2, x1
     8e4:	mov	x3, x0
     8e8:	ldp	x0, x1, [x3]
     8ec:	stp	x0, x1, [x2]
     8f0:	ldrh	w0, [x3, #16]
     8f4:	strh	w0, [x2, #16]
     8f8:	ldr	x2, [sp, #32]
     8fc:	ldr	x0, [sp, #24]
     900:	ldr	x0, [x0, #24]
     904:	mov	x1, x0
     908:	mov	x0, x2
     90c:	bl	0 <strcat>
     910:	ldr	x1, [sp, #32]
     914:	ldr	x0, [sp, #24]
     918:	add	x0, x0, #0x58
     91c:	mov	x2, x0
     920:	ldr	x0, [sp, #24]
     924:	bl	0 <ext2fs_allocate_block_bitmap>
     928:	str	x0, [sp, #112]
     92c:	ldr	x0, [sp, #112]
     930:	cmp	x0, #0x0
     934:	b.ne	1054 <read_bitmaps+0x8c4>  // b.any
     938:	ldr	x0, [sp, #24]
     93c:	ldr	x0, [x0, #8]
     940:	add	x1, sp, #0x30
     944:	mov	x2, x1
     948:	mov	w1, #0x0                   	// #0
     94c:	bl	0 <io_channel_alloc_buf>
     950:	str	x0, [sp, #112]
     954:	ldr	x0, [sp, #112]
     958:	cmp	x0, #0x0
     95c:	b.eq	968 <read_bitmaps+0x1d8>  // b.none
     960:	b	1098 <read_bitmaps+0x908>
     964:	str	wzr, [sp, #108]
     968:	ldr	w0, [sp, #20]
     96c:	cmp	w0, #0x0
     970:	b.eq	a20 <read_bitmaps+0x290>  // b.none
     974:	ldr	x0, [sp, #24]
     978:	ldr	x0, [x0, #80]
     97c:	cmp	x0, #0x0
     980:	b.eq	990 <read_bitmaps+0x200>  // b.none
     984:	ldr	x0, [sp, #24]
     988:	ldr	x0, [x0, #80]
     98c:	bl	0 <ext2fs_free_inode_bitmap>
     990:	ldr	x1, [sp, #32]
     994:	adrp	x0, 0 <ext2fs_has_feature_gdt_csum>
     998:	add	x0, x0, #0x0
     99c:	mov	x2, x1
     9a0:	mov	x3, x0
     9a4:	ldp	x0, x1, [x3]
     9a8:	stp	x0, x1, [x2]
     9ac:	ldrh	w0, [x3, #16]
     9b0:	strh	w0, [x2, #16]
     9b4:	ldr	x2, [sp, #32]
     9b8:	ldr	x0, [sp, #24]
     9bc:	ldr	x0, [x0, #24]
     9c0:	mov	x1, x0
     9c4:	mov	x0, x2
     9c8:	bl	0 <strcat>
     9cc:	ldr	x1, [sp, #32]
     9d0:	ldr	x0, [sp, #24]
     9d4:	add	x0, x0, #0x50
     9d8:	mov	x2, x0
     9dc:	ldr	x0, [sp, #24]
     9e0:	bl	0 <ext2fs_allocate_inode_bitmap>
     9e4:	str	x0, [sp, #112]
     9e8:	ldr	x0, [sp, #112]
     9ec:	cmp	x0, #0x0
     9f0:	b.ne	105c <read_bitmaps+0x8cc>  // b.any
     9f4:	ldr	x0, [sp, #24]
     9f8:	ldr	x0, [x0, #8]
     9fc:	add	x1, sp, #0x28
     a00:	mov	x2, x1
     a04:	mov	w1, #0x0                   	// #0
     a08:	bl	0 <io_channel_alloc_buf>
     a0c:	str	x0, [sp, #112]
     a10:	ldr	x0, [sp, #112]
     a14:	cmp	x0, #0x0
     a18:	b.eq	a24 <read_bitmaps+0x294>  // b.none
     a1c:	b	1098 <read_bitmaps+0x908>
     a20:	str	wzr, [sp, #104]
     a24:	add	x0, sp, #0x20
     a28:	bl	0 <ext2fs_free_mem>
     a2c:	ldr	x0, [sp, #24]
     a30:	ldr	w0, [x0, #16]
     a34:	and	w0, w0, #0x2000
     a38:	cmp	w0, #0x0
     a3c:	b.eq	c50 <read_bitmaps+0x4c0>  // b.none
     a40:	ldr	x0, [sp, #24]
     a44:	ldr	x0, [x0, #168]
     a48:	ldr	w1, [x0, #292]
     a4c:	ldr	x0, [sp, #24]
     a50:	ldr	w0, [x0, #40]
     a54:	udiv	w0, w1, w0
     a58:	mov	w0, w0
     a5c:	str	x0, [sp, #88]
     a60:	ldr	x0, [sp, #24]
     a64:	ldr	x0, [x0, #32]
     a68:	ldr	w0, [x0]
     a6c:	str	w0, [sp, #64]
     a70:	b	b20 <read_bitmaps+0x390>
     a74:	ldr	x0, [sp, #24]
     a78:	ldr	x4, [x0, #240]
     a7c:	ldr	x0, [sp, #88]
     a80:	add	x1, x0, #0x1
     a84:	str	x1, [sp, #88]
     a88:	ldr	x1, [sp, #40]
     a8c:	mov	x3, x1
     a90:	mov	w2, #0x1                   	// #1
     a94:	mov	x1, x0
     a98:	mov	x0, x4
     a9c:	bl	0 <io_channel_read_blk64>
     aa0:	str	x0, [sp, #112]
     aa4:	ldr	x0, [sp, #112]
     aa8:	cmp	x0, #0x0
     aac:	b.ne	1064 <read_bitmaps+0x8d4>  // b.any
     ab0:	ldr	x0, [sp, #24]
     ab4:	ldr	w0, [x0, #40]
     ab8:	lsl	w0, w0, #3
     abc:	str	w0, [sp, #96]
     ac0:	ldr	w1, [sp, #96]
     ac4:	ldr	w0, [sp, #64]
     ac8:	cmp	w1, w0
     acc:	b.ls	ad8 <read_bitmaps+0x348>  // b.plast
     ad0:	ldr	w0, [sp, #64]
     ad4:	str	w0, [sp, #96]
     ad8:	ldr	x0, [sp, #24]
     adc:	ldr	x0, [x0, #80]
     ae0:	ldr	w1, [sp, #68]
     ae4:	ldr	w2, [sp, #96]
     ae8:	ldr	x3, [sp, #40]
     aec:	bl	0 <ext2fs_set_inode_bitmap_range2>
     af0:	str	x0, [sp, #112]
     af4:	ldr	x0, [sp, #112]
     af8:	cmp	x0, #0x0
     afc:	b.ne	106c <read_bitmaps+0x8dc>  // b.any
     b00:	ldr	w1, [sp, #68]
     b04:	ldr	w0, [sp, #96]
     b08:	add	w0, w1, w0
     b0c:	str	w0, [sp, #68]
     b10:	ldr	w1, [sp, #64]
     b14:	ldr	w0, [sp, #96]
     b18:	sub	w0, w1, w0
     b1c:	str	w0, [sp, #64]
     b20:	ldr	x0, [sp, #40]
     b24:	cmp	x0, #0x0
     b28:	b.eq	b38 <read_bitmaps+0x3a8>  // b.none
     b2c:	ldr	w0, [sp, #64]
     b30:	cmp	w0, #0x0
     b34:	b.ne	a74 <read_bitmaps+0x2e4>  // b.any
     b38:	ldr	x0, [sp, #24]
     b3c:	ldr	x0, [x0, #168]
     b40:	ldr	w1, [x0, #296]
     b44:	ldr	x0, [sp, #24]
     b48:	ldr	w0, [x0, #40]
     b4c:	udiv	w0, w1, w0
     b50:	mov	w0, w0
     b54:	str	x0, [sp, #88]
     b58:	ldr	x0, [sp, #24]
     b5c:	ldr	x0, [x0, #32]
     b60:	ldr	w0, [x0, #36]
     b64:	mov	w1, w0
     b68:	ldr	x0, [sp, #24]
     b6c:	ldr	w0, [x0, #48]
     b70:	mov	w0, w0
     b74:	mul	x0, x1, x0
     b78:	str	x0, [sp, #72]
     b7c:	b	c34 <read_bitmaps+0x4a4>
     b80:	ldr	x0, [sp, #24]
     b84:	ldr	x4, [x0, #240]
     b88:	ldr	x0, [sp, #88]
     b8c:	add	x1, x0, #0x1
     b90:	str	x1, [sp, #88]
     b94:	ldr	x1, [sp, #48]
     b98:	mov	x3, x1
     b9c:	mov	w2, #0x1                   	// #1
     ba0:	mov	x1, x0
     ba4:	mov	x0, x4
     ba8:	bl	0 <io_channel_read_blk64>
     bac:	str	x0, [sp, #112]
     bb0:	ldr	x0, [sp, #112]
     bb4:	cmp	x0, #0x0
     bb8:	b.ne	1074 <read_bitmaps+0x8e4>  // b.any
     bbc:	ldr	x0, [sp, #24]
     bc0:	ldr	w0, [x0, #40]
     bc4:	lsl	w0, w0, #3
     bc8:	str	w0, [sp, #96]
     bcc:	ldr	w0, [sp, #96]
     bd0:	ldr	x1, [sp, #72]
     bd4:	cmp	x1, x0
     bd8:	b.cs	be4 <read_bitmaps+0x454>  // b.hs, b.nlast
     bdc:	ldr	x0, [sp, #72]
     be0:	str	w0, [sp, #96]
     be4:	ldr	x0, [sp, #24]
     be8:	ldr	x0, [x0, #88]
     bec:	ldr	w1, [sp, #96]
     bf0:	ldr	x2, [sp, #48]
     bf4:	mov	x3, x2
     bf8:	mov	x2, x1
     bfc:	ldr	x1, [sp, #80]
     c00:	bl	0 <ext2fs_set_block_bitmap_range2>
     c04:	str	x0, [sp, #112]
     c08:	ldr	x0, [sp, #112]
     c0c:	cmp	x0, #0x0
     c10:	b.ne	107c <read_bitmaps+0x8ec>  // b.any
     c14:	ldr	w0, [sp, #96]
     c18:	ldr	x1, [sp, #80]
     c1c:	add	x0, x1, x0
     c20:	str	x0, [sp, #80]
     c24:	ldr	w0, [sp, #96]
     c28:	ldr	x1, [sp, #72]
     c2c:	sub	x0, x1, x0
     c30:	str	x0, [sp, #72]
     c34:	ldr	x0, [sp, #48]
     c38:	cmp	x0, #0x0
     c3c:	b.eq	fd8 <read_bitmaps+0x848>  // b.none
     c40:	ldr	x0, [sp, #72]
     c44:	cmp	x0, #0x0
     c48:	b.ne	b80 <read_bitmaps+0x3f0>  // b.any
     c4c:	b	fd8 <read_bitmaps+0x848>
     c50:	str	wzr, [sp, #124]
     c54:	b	f9c <read_bitmaps+0x80c>
     c58:	ldr	x0, [sp, #48]
     c5c:	cmp	x0, #0x0
     c60:	b.eq	df8 <read_bitmaps+0x668>  // b.none
     c64:	ldr	w1, [sp, #124]
     c68:	ldr	x0, [sp, #24]
     c6c:	bl	0 <ext2fs_block_bitmap_loc>
     c70:	str	x0, [sp, #88]
     c74:	ldr	w0, [sp, #60]
     c78:	cmp	w0, #0x0
     c7c:	b.eq	cac <read_bitmaps+0x51c>  // b.none
     c80:	mov	w2, #0x2                   	// #2
     c84:	ldr	w1, [sp, #124]
     c88:	ldr	x0, [sp, #24]
     c8c:	bl	0 <ext2fs_bg_flags_test>
     c90:	cmp	w0, #0x0
     c94:	b.eq	cac <read_bitmaps+0x51c>  // b.none
     c98:	ldr	w1, [sp, #124]
     c9c:	ldr	x0, [sp, #24]
     ca0:	bl	0 <ext2fs_group_desc_csum_verify>
     ca4:	cmp	w0, #0x0
     ca8:	b.ne	cc8 <read_bitmaps+0x538>  // b.any
     cac:	ldr	x0, [sp, #24]
     cb0:	ldr	x0, [x0, #32]
     cb4:	bl	0 <ext2fs_blocks_count>
     cb8:	mov	x1, x0
     cbc:	ldr	x0, [sp, #88]
     cc0:	cmp	x0, x1
     cc4:	b.cc	ccc <read_bitmaps+0x53c>  // b.lo, b.ul, b.last
     cc8:	str	xzr, [sp, #88]
     ccc:	ldr	x0, [sp, #88]
     cd0:	cmp	x0, #0x0
     cd4:	b.eq	d90 <read_bitmaps+0x600>  // b.none
     cd8:	ldr	x0, [sp, #24]
     cdc:	ldr	x0, [x0, #8]
     ce0:	ldr	x1, [sp, #48]
     ce4:	mov	x3, x1
     ce8:	mov	w2, #0x1                   	// #1
     cec:	ldr	x1, [sp, #88]
     cf0:	bl	0 <io_channel_read_blk64>
     cf4:	str	x0, [sp, #112]
     cf8:	ldr	x0, [sp, #112]
     cfc:	cmp	x0, #0x0
     d00:	b.eq	d14 <read_bitmaps+0x584>  // b.none
     d04:	mov	x0, #0xb71e                	// #46878
     d08:	movk	x0, #0x7f2b, lsl #16
     d0c:	str	x0, [sp, #112]
     d10:	b	1098 <read_bitmaps+0x908>
     d14:	ldr	x0, [sp, #24]
     d18:	ldr	w0, [x0, #16]
     d1c:	and	w0, w0, #0x200000
     d20:	cmp	w0, #0x0
     d24:	b.ne	d58 <read_bitmaps+0x5c8>  // b.any
     d28:	ldr	x0, [sp, #48]
     d2c:	ldr	w3, [sp, #108]
     d30:	mov	x2, x0
     d34:	ldr	w1, [sp, #124]
     d38:	ldr	x0, [sp, #24]
     d3c:	bl	0 <ext2fs_block_bitmap_csum_verify>
     d40:	cmp	w0, #0x0
     d44:	b.ne	d58 <read_bitmaps+0x5c8>  // b.any
     d48:	mov	x0, #0xb79c                	// #47004
     d4c:	movk	x0, #0x7f2b, lsl #16
     d50:	str	x0, [sp, #112]
     d54:	b	1098 <read_bitmaps+0x908>
     d58:	ldr	x3, [sp, #48]
     d5c:	ldr	x0, [sp, #24]
     d60:	ldr	w0, [x0, #40]
     d64:	sub	w0, w0, #0x1
     d68:	mov	w2, w0
     d6c:	ldr	w1, [sp, #108]
     d70:	mov	x0, x3
     d74:	bl	72c <bitmap_tail_verify>
     d78:	cmp	w0, #0x0
     d7c:	b.ne	da4 <read_bitmaps+0x614>  // b.any
     d80:	ldr	w0, [sp, #100]
     d84:	orr	w0, w0, #0x1000000
     d88:	str	w0, [sp, #100]
     d8c:	b	da4 <read_bitmaps+0x614>
     d90:	ldr	x0, [sp, #48]
     d94:	ldrsw	x1, [sp, #108]
     d98:	mov	x2, x1
     d9c:	mov	w1, #0x0                   	// #0
     da0:	bl	0 <memset>
     da4:	ldr	w0, [sp, #108]
     da8:	lsl	w0, w0, #3
     dac:	str	w0, [sp, #96]
     db0:	ldr	x0, [sp, #24]
     db4:	ldr	x0, [x0, #88]
     db8:	ldr	w1, [sp, #96]
     dbc:	ldr	x2, [sp, #48]
     dc0:	mov	x3, x2
     dc4:	mov	x2, x1
     dc8:	ldr	x1, [sp, #80]
     dcc:	bl	0 <ext2fs_set_block_bitmap_range2>
     dd0:	str	x0, [sp, #112]
     dd4:	ldr	x0, [sp, #112]
     dd8:	cmp	x0, #0x0
     ddc:	b.ne	1084 <read_bitmaps+0x8f4>  // b.any
     de0:	ldr	w0, [sp, #108]
     de4:	lsl	w0, w0, #3
     de8:	sxtw	x0, w0
     dec:	ldr	x1, [sp, #80]
     df0:	add	x0, x1, x0
     df4:	str	x0, [sp, #80]
     df8:	ldr	x0, [sp, #40]
     dfc:	cmp	x0, #0x0
     e00:	b.eq	f90 <read_bitmaps+0x800>  // b.none
     e04:	ldr	w1, [sp, #124]
     e08:	ldr	x0, [sp, #24]
     e0c:	bl	0 <ext2fs_inode_bitmap_loc>
     e10:	str	x0, [sp, #88]
     e14:	ldr	w0, [sp, #60]
     e18:	cmp	w0, #0x0
     e1c:	b.eq	e4c <read_bitmaps+0x6bc>  // b.none
     e20:	mov	w2, #0x1                   	// #1
     e24:	ldr	w1, [sp, #124]
     e28:	ldr	x0, [sp, #24]
     e2c:	bl	0 <ext2fs_bg_flags_test>
     e30:	cmp	w0, #0x0
     e34:	b.eq	e4c <read_bitmaps+0x6bc>  // b.none
     e38:	ldr	w1, [sp, #124]
     e3c:	ldr	x0, [sp, #24]
     e40:	bl	0 <ext2fs_group_desc_csum_verify>
     e44:	cmp	w0, #0x0
     e48:	b.ne	e68 <read_bitmaps+0x6d8>  // b.any
     e4c:	ldr	x0, [sp, #24]
     e50:	ldr	x0, [x0, #32]
     e54:	bl	0 <ext2fs_blocks_count>
     e58:	mov	x1, x0
     e5c:	ldr	x0, [sp, #88]
     e60:	cmp	x0, x1
     e64:	b.cc	e6c <read_bitmaps+0x6dc>  // b.lo, b.ul, b.last
     e68:	str	xzr, [sp, #88]
     e6c:	ldr	x0, [sp, #88]
     e70:	cmp	x0, #0x0
     e74:	b.eq	f30 <read_bitmaps+0x7a0>  // b.none
     e78:	ldr	x0, [sp, #24]
     e7c:	ldr	x0, [x0, #8]
     e80:	ldr	x1, [sp, #40]
     e84:	mov	x3, x1
     e88:	mov	w2, #0x1                   	// #1
     e8c:	ldr	x1, [sp, #88]
     e90:	bl	0 <io_channel_read_blk64>
     e94:	str	x0, [sp, #112]
     e98:	ldr	x0, [sp, #112]
     e9c:	cmp	x0, #0x0
     ea0:	b.eq	eb4 <read_bitmaps+0x724>  // b.none
     ea4:	mov	x0, #0xb71c                	// #46876
     ea8:	movk	x0, #0x7f2b, lsl #16
     eac:	str	x0, [sp, #112]
     eb0:	b	1098 <read_bitmaps+0x908>
     eb4:	ldr	x0, [sp, #24]
     eb8:	ldr	w0, [x0, #16]
     ebc:	and	w0, w0, #0x200000
     ec0:	cmp	w0, #0x0
     ec4:	b.ne	ef8 <read_bitmaps+0x768>  // b.any
     ec8:	ldr	x0, [sp, #40]
     ecc:	ldr	w3, [sp, #104]
     ed0:	mov	x2, x0
     ed4:	ldr	w1, [sp, #124]
     ed8:	ldr	x0, [sp, #24]
     edc:	bl	0 <ext2fs_inode_bitmap_csum_verify>
     ee0:	cmp	w0, #0x0
     ee4:	b.ne	ef8 <read_bitmaps+0x768>  // b.any
     ee8:	mov	x0, #0xb793                	// #46995
     eec:	movk	x0, #0x7f2b, lsl #16
     ef0:	str	x0, [sp, #112]
     ef4:	b	1098 <read_bitmaps+0x908>
     ef8:	ldr	x3, [sp, #40]
     efc:	ldr	x0, [sp, #24]
     f00:	ldr	w0, [x0, #40]
     f04:	sub	w0, w0, #0x1
     f08:	mov	w2, w0
     f0c:	ldr	w1, [sp, #104]
     f10:	mov	x0, x3
     f14:	bl	72c <bitmap_tail_verify>
     f18:	cmp	w0, #0x0
     f1c:	b.ne	f44 <read_bitmaps+0x7b4>  // b.any
     f20:	ldr	w0, [sp, #100]
     f24:	orr	w0, w0, #0x2000000
     f28:	str	w0, [sp, #100]
     f2c:	b	f44 <read_bitmaps+0x7b4>
     f30:	ldr	x0, [sp, #40]
     f34:	ldrsw	x1, [sp, #104]
     f38:	mov	x2, x1
     f3c:	mov	w1, #0x0                   	// #0
     f40:	bl	0 <memset>
     f44:	ldr	w0, [sp, #104]
     f48:	lsl	w0, w0, #3
     f4c:	str	w0, [sp, #96]
     f50:	ldr	x0, [sp, #24]
     f54:	ldr	x0, [x0, #80]
     f58:	ldr	w1, [sp, #68]
     f5c:	ldr	w2, [sp, #96]
     f60:	ldr	x3, [sp, #40]
     f64:	bl	0 <ext2fs_set_inode_bitmap_range2>
     f68:	str	x0, [sp, #112]
     f6c:	ldr	x0, [sp, #112]
     f70:	cmp	x0, #0x0
     f74:	b.ne	108c <read_bitmaps+0x8fc>  // b.any
     f78:	ldr	w0, [sp, #104]
     f7c:	lsl	w0, w0, #3
     f80:	mov	w1, w0
     f84:	ldr	w0, [sp, #68]
     f88:	add	w0, w0, w1
     f8c:	str	w0, [sp, #68]
     f90:	ldr	w0, [sp, #124]
     f94:	add	w0, w0, #0x1
     f98:	str	w0, [sp, #124]
     f9c:	ldr	x0, [sp, #24]
     fa0:	ldr	w0, [x0, #48]
     fa4:	ldr	w1, [sp, #124]
     fa8:	cmp	w1, w0
     fac:	b.cc	c58 <read_bitmaps+0x4c8>  // b.lo, b.ul, b.last
     fb0:	ldr	w0, [sp, #16]
     fb4:	cmp	w0, #0x0
     fb8:	b.eq	fe0 <read_bitmaps+0x850>  // b.none
     fbc:	ldr	x0, [sp, #24]
     fc0:	bl	62c <mark_uninit_bg_group_blocks>
     fc4:	str	x0, [sp, #112]
     fc8:	ldr	x0, [sp, #112]
     fcc:	cmp	x0, #0x0
     fd0:	b.ne	1094 <read_bitmaps+0x904>  // b.any
     fd4:	b	fe0 <read_bitmaps+0x850>
     fd8:	nop
     fdc:	b	fe4 <read_bitmaps+0x854>
     fe0:	nop
     fe4:	ldr	x0, [sp, #40]
     fe8:	cmp	x0, #0x0
     fec:	b.eq	100c <read_bitmaps+0x87c>  // b.none
     ff0:	add	x0, sp, #0x28
     ff4:	bl	0 <ext2fs_free_mem>
     ff8:	ldr	x0, [sp, #24]
     ffc:	ldr	w0, [x0, #16]
    1000:	and	w1, w0, #0xfdffffff
    1004:	ldr	x0, [sp, #24]
    1008:	str	w1, [x0, #16]
    100c:	ldr	x0, [sp, #48]
    1010:	cmp	x0, #0x0
    1014:	b.eq	1034 <read_bitmaps+0x8a4>  // b.none
    1018:	add	x0, sp, #0x30
    101c:	bl	0 <ext2fs_free_mem>
    1020:	ldr	x0, [sp, #24]
    1024:	ldr	w0, [x0, #16]
    1028:	and	w1, w0, #0xfeffffff
    102c:	ldr	x0, [sp, #24]
    1030:	str	w1, [x0, #16]
    1034:	ldr	x0, [sp, #24]
    1038:	ldr	w1, [x0, #16]
    103c:	ldr	w0, [sp, #100]
    1040:	orr	w1, w1, w0
    1044:	ldr	x0, [sp, #24]
    1048:	str	w1, [x0, #16]
    104c:	mov	x0, #0x0                   	// #0
    1050:	b	1118 <read_bitmaps+0x988>
    1054:	nop
    1058:	b	1098 <read_bitmaps+0x908>
    105c:	nop
    1060:	b	1098 <read_bitmaps+0x908>
    1064:	nop
    1068:	b	1098 <read_bitmaps+0x908>
    106c:	nop
    1070:	b	1098 <read_bitmaps+0x908>
    1074:	nop
    1078:	b	1098 <read_bitmaps+0x908>
    107c:	nop
    1080:	b	1098 <read_bitmaps+0x908>
    1084:	nop
    1088:	b	1098 <read_bitmaps+0x908>
    108c:	nop
    1090:	b	1098 <read_bitmaps+0x908>
    1094:	nop
    1098:	ldr	w0, [sp, #16]
    109c:	cmp	w0, #0x0
    10a0:	b.eq	10b8 <read_bitmaps+0x928>  // b.none
    10a4:	ldr	x0, [sp, #24]
    10a8:	ldr	x0, [x0, #88]
    10ac:	bl	0 <ext2fs_free_block_bitmap>
    10b0:	ldr	x0, [sp, #24]
    10b4:	str	xzr, [x0, #88]
    10b8:	ldr	w0, [sp, #20]
    10bc:	cmp	w0, #0x0
    10c0:	b.eq	10d8 <read_bitmaps+0x948>  // b.none
    10c4:	ldr	x0, [sp, #24]
    10c8:	ldr	x0, [x0, #80]
    10cc:	bl	0 <ext2fs_free_inode_bitmap>
    10d0:	ldr	x0, [sp, #24]
    10d4:	str	xzr, [x0, #80]
    10d8:	ldr	x0, [sp, #40]
    10dc:	cmp	x0, #0x0
    10e0:	b.eq	10ec <read_bitmaps+0x95c>  // b.none
    10e4:	add	x0, sp, #0x28
    10e8:	bl	0 <ext2fs_free_mem>
    10ec:	ldr	x0, [sp, #48]
    10f0:	cmp	x0, #0x0
    10f4:	b.eq	1100 <read_bitmaps+0x970>  // b.none
    10f8:	add	x0, sp, #0x30
    10fc:	bl	0 <ext2fs_free_mem>
    1100:	ldr	x0, [sp, #32]
    1104:	cmp	x0, #0x0
    1108:	b.eq	1114 <read_bitmaps+0x984>  // b.none
    110c:	add	x0, sp, #0x20
    1110:	bl	0 <ext2fs_free_mem>
    1114:	ldr	x0, [sp, #112]
    1118:	ldp	x29, x30, [sp], #128
    111c:	ret

0000000000001120 <ext2fs_read_inode_bitmap>:
    1120:	stp	x29, x30, [sp, #-32]!
    1124:	mov	x29, sp
    1128:	str	x0, [sp, #24]
    112c:	mov	w2, #0x0                   	// #0
    1130:	mov	w1, #0x1                   	// #1
    1134:	ldr	x0, [sp, #24]
    1138:	bl	790 <read_bitmaps>
    113c:	ldp	x29, x30, [sp], #32
    1140:	ret

0000000000001144 <ext2fs_read_block_bitmap>:
    1144:	stp	x29, x30, [sp, #-32]!
    1148:	mov	x29, sp
    114c:	str	x0, [sp, #24]
    1150:	mov	w2, #0x1                   	// #1
    1154:	mov	w1, #0x0                   	// #0
    1158:	ldr	x0, [sp, #24]
    115c:	bl	790 <read_bitmaps>
    1160:	ldp	x29, x30, [sp], #32
    1164:	ret

0000000000001168 <ext2fs_write_inode_bitmap>:
    1168:	stp	x29, x30, [sp, #-32]!
    116c:	mov	x29, sp
    1170:	str	x0, [sp, #24]
    1174:	mov	w2, #0x0                   	// #0
    1178:	mov	w1, #0x1                   	// #1
    117c:	ldr	x0, [sp, #24]
    1180:	bl	98 <write_bitmaps>
    1184:	ldp	x29, x30, [sp], #32
    1188:	ret

000000000000118c <ext2fs_write_block_bitmap>:
    118c:	stp	x29, x30, [sp, #-32]!
    1190:	mov	x29, sp
    1194:	str	x0, [sp, #24]
    1198:	mov	w2, #0x1                   	// #1
    119c:	mov	w1, #0x0                   	// #0
    11a0:	ldr	x0, [sp, #24]
    11a4:	bl	98 <write_bitmaps>
    11a8:	ldp	x29, x30, [sp], #32
    11ac:	ret

00000000000011b0 <ext2fs_read_bitmaps>:
    11b0:	stp	x29, x30, [sp, #-32]!
    11b4:	mov	x29, sp
    11b8:	str	x0, [sp, #24]
    11bc:	ldr	x0, [sp, #24]
    11c0:	ldr	x0, [x0, #80]
    11c4:	cmp	x0, #0x0
    11c8:	b.eq	11e4 <ext2fs_read_bitmaps+0x34>  // b.none
    11cc:	ldr	x0, [sp, #24]
    11d0:	ldr	x0, [x0, #88]
    11d4:	cmp	x0, #0x0
    11d8:	b.eq	11e4 <ext2fs_read_bitmaps+0x34>  // b.none
    11dc:	mov	x0, #0x0                   	// #0
    11e0:	b	121c <ext2fs_read_bitmaps+0x6c>
    11e4:	ldr	x0, [sp, #24]
    11e8:	ldr	x0, [x0, #80]
    11ec:	cmp	x0, #0x0
    11f0:	cset	w0, eq  // eq = none
    11f4:	and	w0, w0, #0xff
    11f8:	mov	w1, w0
    11fc:	ldr	x0, [sp, #24]
    1200:	ldr	x0, [x0, #88]
    1204:	cmp	x0, #0x0
    1208:	cset	w0, eq  // eq = none
    120c:	and	w0, w0, #0xff
    1210:	mov	w2, w0
    1214:	ldr	x0, [sp, #24]
    1218:	bl	790 <read_bitmaps>
    121c:	ldp	x29, x30, [sp], #32
    1220:	ret

0000000000001224 <ext2fs_write_bitmaps>:
    1224:	stp	x29, x30, [sp, #-48]!
    1228:	mov	x29, sp
    122c:	str	x0, [sp, #24]
    1230:	ldr	x0, [sp, #24]
    1234:	ldr	x0, [x0, #80]
    1238:	cmp	x0, #0x0
    123c:	b.eq	1258 <ext2fs_write_bitmaps+0x34>  // b.none
    1240:	ldr	x0, [sp, #24]
    1244:	bl	0 <ext2fs_test_ib_dirty>
    1248:	cmp	w0, #0x0
    124c:	b.eq	1258 <ext2fs_write_bitmaps+0x34>  // b.none
    1250:	mov	w0, #0x1                   	// #1
    1254:	b	125c <ext2fs_write_bitmaps+0x38>
    1258:	mov	w0, #0x0                   	// #0
    125c:	str	w0, [sp, #44]
    1260:	ldr	x0, [sp, #24]
    1264:	ldr	x0, [x0, #88]
    1268:	cmp	x0, #0x0
    126c:	b.eq	1288 <ext2fs_write_bitmaps+0x64>  // b.none
    1270:	ldr	x0, [sp, #24]
    1274:	bl	0 <ext2fs_test_bb_dirty>
    1278:	cmp	w0, #0x0
    127c:	b.eq	1288 <ext2fs_write_bitmaps+0x64>  // b.none
    1280:	mov	w0, #0x1                   	// #1
    1284:	b	128c <ext2fs_write_bitmaps+0x68>
    1288:	mov	w0, #0x0                   	// #0
    128c:	str	w0, [sp, #40]
    1290:	ldr	w0, [sp, #44]
    1294:	cmp	w0, #0x0
    1298:	b.ne	12b0 <ext2fs_write_bitmaps+0x8c>  // b.any
    129c:	ldr	w0, [sp, #40]
    12a0:	cmp	w0, #0x0
    12a4:	b.ne	12b0 <ext2fs_write_bitmaps+0x8c>  // b.any
    12a8:	mov	x0, #0x0                   	// #0
    12ac:	b	12c0 <ext2fs_write_bitmaps+0x9c>
    12b0:	ldr	w2, [sp, #40]
    12b4:	ldr	w1, [sp, #44]
    12b8:	ldr	x0, [sp, #24]
    12bc:	bl	98 <write_bitmaps>
    12c0:	ldp	x29, x30, [sp], #48
    12c4:	ret

sha512.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sha512_compress>:
       0:	sub	sp, sp, #0x2f0
       4:	str	x0, [sp, #8]
       8:	str	x1, [sp]
       c:	str	wzr, [sp, #748]
      10:	b	44 <sha512_compress+0x44>
      14:	ldr	x1, [sp, #8]
      18:	ldrsw	x0, [sp, #748]
      1c:	lsl	x0, x0, #3
      20:	add	x0, x1, x0
      24:	ldr	x2, [x0, #8]
      28:	ldrsw	x0, [sp, #748]
      2c:	lsl	x0, x0, #3
      30:	add	x1, sp, #0x298
      34:	str	x2, [x1, x0]
      38:	ldr	w0, [sp, #748]
      3c:	add	w0, w0, #0x1
      40:	str	w0, [sp, #748]
      44:	ldr	w0, [sp, #748]
      48:	cmp	w0, #0x7
      4c:	b.le	14 <sha512_compress+0x14>
      50:	str	wzr, [sp, #748]
      54:	b	1a8 <sha512_compress+0x1a8>
      58:	ldr	w0, [sp, #748]
      5c:	lsl	w0, w0, #3
      60:	sxtw	x0, w0
      64:	ldr	x1, [sp]
      68:	add	x0, x1, x0
      6c:	ldrb	w0, [x0]
      70:	and	x0, x0, #0xff
      74:	lsl	x1, x0, #56
      78:	ldr	w0, [sp, #748]
      7c:	lsl	w0, w0, #3
      80:	sxtw	x0, w0
      84:	add	x0, x0, #0x1
      88:	ldr	x2, [sp]
      8c:	add	x0, x2, x0
      90:	ldrb	w0, [x0]
      94:	and	x0, x0, #0xff
      98:	lsl	x0, x0, #48
      9c:	orr	x1, x1, x0
      a0:	ldr	w0, [sp, #748]
      a4:	lsl	w0, w0, #3
      a8:	sxtw	x0, w0
      ac:	add	x0, x0, #0x2
      b0:	ldr	x2, [sp]
      b4:	add	x0, x2, x0
      b8:	ldrb	w0, [x0]
      bc:	and	x0, x0, #0xff
      c0:	lsl	x0, x0, #40
      c4:	orr	x1, x1, x0
      c8:	ldr	w0, [sp, #748]
      cc:	lsl	w0, w0, #3
      d0:	sxtw	x0, w0
      d4:	add	x0, x0, #0x3
      d8:	ldr	x2, [sp]
      dc:	add	x0, x2, x0
      e0:	ldrb	w0, [x0]
      e4:	and	x0, x0, #0xff
      e8:	lsl	x0, x0, #32
      ec:	orr	x1, x1, x0
      f0:	ldr	w0, [sp, #748]
      f4:	lsl	w0, w0, #3
      f8:	sxtw	x0, w0
      fc:	add	x0, x0, #0x4
     100:	ldr	x2, [sp]
     104:	add	x0, x2, x0
     108:	ldrb	w0, [x0]
     10c:	and	x0, x0, #0xff
     110:	lsl	x0, x0, #24
     114:	orr	x1, x1, x0
     118:	ldr	w0, [sp, #748]
     11c:	lsl	w0, w0, #3
     120:	sxtw	x0, w0
     124:	add	x0, x0, #0x5
     128:	ldr	x2, [sp]
     12c:	add	x0, x2, x0
     130:	ldrb	w0, [x0]
     134:	and	x0, x0, #0xff
     138:	lsl	x0, x0, #16
     13c:	orr	x1, x1, x0
     140:	ldr	w0, [sp, #748]
     144:	lsl	w0, w0, #3
     148:	sxtw	x0, w0
     14c:	add	x0, x0, #0x6
     150:	ldr	x2, [sp]
     154:	add	x0, x2, x0
     158:	ldrb	w0, [x0]
     15c:	and	x0, x0, #0xff
     160:	lsl	x0, x0, #8
     164:	orr	x1, x1, x0
     168:	ldr	w0, [sp, #748]
     16c:	lsl	w0, w0, #3
     170:	sxtw	x0, w0
     174:	add	x0, x0, #0x7
     178:	ldr	x2, [sp]
     17c:	add	x0, x2, x0
     180:	ldrb	w0, [x0]
     184:	and	x0, x0, #0xff
     188:	orr	x2, x1, x0
     18c:	ldrsw	x0, [sp, #748]
     190:	lsl	x0, x0, #3
     194:	add	x1, sp, #0x18
     198:	str	x2, [x1, x0]
     19c:	ldr	w0, [sp, #748]
     1a0:	add	w0, w0, #0x1
     1a4:	str	w0, [sp, #748]
     1a8:	ldr	w0, [sp, #748]
     1ac:	cmp	w0, #0xf
     1b0:	b.le	58 <sha512_compress+0x58>
     1b4:	mov	w0, #0x10                  	// #16
     1b8:	str	w0, [sp, #748]
     1bc:	b	2d0 <sha512_compress+0x2d0>
     1c0:	ldr	w0, [sp, #748]
     1c4:	sub	w0, w0, #0x2
     1c8:	sxtw	x0, w0
     1cc:	lsl	x0, x0, #3
     1d0:	add	x1, sp, #0x18
     1d4:	ldr	x0, [x1, x0]
     1d8:	ror	x1, x0, #19
     1dc:	ldr	w0, [sp, #748]
     1e0:	sub	w0, w0, #0x2
     1e4:	sxtw	x0, w0
     1e8:	lsl	x0, x0, #3
     1ec:	add	x2, sp, #0x18
     1f0:	ldr	x0, [x2, x0]
     1f4:	ror	x0, x0, #61
     1f8:	eor	x1, x1, x0
     1fc:	ldr	w0, [sp, #748]
     200:	sub	w0, w0, #0x2
     204:	sxtw	x0, w0
     208:	lsl	x0, x0, #3
     20c:	add	x2, sp, #0x18
     210:	ldr	x0, [x2, x0]
     214:	lsr	x0, x0, #6
     218:	eor	x1, x1, x0
     21c:	ldr	w0, [sp, #748]
     220:	sub	w0, w0, #0x7
     224:	sxtw	x0, w0
     228:	lsl	x0, x0, #3
     22c:	add	x2, sp, #0x18
     230:	ldr	x0, [x2, x0]
     234:	add	x1, x1, x0
     238:	ldr	w0, [sp, #748]
     23c:	sub	w0, w0, #0xf
     240:	sxtw	x0, w0
     244:	lsl	x0, x0, #3
     248:	add	x2, sp, #0x18
     24c:	ldr	x0, [x2, x0]
     250:	ror	x2, x0, #1
     254:	ldr	w0, [sp, #748]
     258:	sub	w0, w0, #0xf
     25c:	sxtw	x0, w0
     260:	lsl	x0, x0, #3
     264:	add	x3, sp, #0x18
     268:	ldr	x0, [x3, x0]
     26c:	ror	x0, x0, #8
     270:	eor	x2, x2, x0
     274:	ldr	w0, [sp, #748]
     278:	sub	w0, w0, #0xf
     27c:	sxtw	x0, w0
     280:	lsl	x0, x0, #3
     284:	add	x3, sp, #0x18
     288:	ldr	x0, [x3, x0]
     28c:	lsr	x0, x0, #7
     290:	eor	x0, x2, x0
     294:	add	x1, x1, x0
     298:	ldr	w0, [sp, #748]
     29c:	sub	w0, w0, #0x10
     2a0:	sxtw	x0, w0
     2a4:	lsl	x0, x0, #3
     2a8:	add	x2, sp, #0x18
     2ac:	ldr	x0, [x2, x0]
     2b0:	add	x2, x1, x0
     2b4:	ldrsw	x0, [sp, #748]
     2b8:	lsl	x0, x0, #3
     2bc:	add	x1, sp, #0x18
     2c0:	str	x2, [x1, x0]
     2c4:	ldr	w0, [sp, #748]
     2c8:	add	w0, w0, #0x1
     2cc:	str	w0, [sp, #748]
     2d0:	ldr	w0, [sp, #748]
     2d4:	cmp	w0, #0x4f
     2d8:	b.le	1c0 <sha512_compress+0x1c0>
     2dc:	str	wzr, [sp, #748]
     2e0:	b	a60 <sha512_compress+0xa60>
     2e4:	ldr	x1, [sp, #720]
     2e8:	ldr	x0, [sp, #696]
     2ec:	ror	x2, x0, #14
     2f0:	ldr	x0, [sp, #696]
     2f4:	ror	x0, x0, #18
     2f8:	eor	x2, x2, x0
     2fc:	ldr	x0, [sp, #696]
     300:	ror	x0, x0, #41
     304:	eor	x0, x2, x0
     308:	add	x1, x1, x0
     30c:	ldr	x2, [sp, #712]
     310:	ldr	x3, [sp, #696]
     314:	ldr	x4, [sp, #704]
     318:	ldr	x0, [sp, #712]
     31c:	eor	x0, x4, x0
     320:	and	x0, x3, x0
     324:	eor	x0, x2, x0
     328:	add	x1, x1, x0
     32c:	adrp	x0, 0 <sha512_compress>
     330:	add	x0, x0, #0x0
     334:	ldrsw	x2, [sp, #748]
     338:	ldr	x0, [x0, x2, lsl #3]
     33c:	add	x1, x1, x0
     340:	ldrsw	x0, [sp, #748]
     344:	lsl	x0, x0, #3
     348:	add	x2, sp, #0x18
     34c:	ldr	x0, [x2, x0]
     350:	add	x0, x1, x0
     354:	str	x0, [sp, #736]
     358:	ldr	x0, [sp, #664]
     35c:	ror	x1, x0, #28
     360:	ldr	x0, [sp, #664]
     364:	ror	x0, x0, #34
     368:	eor	x1, x1, x0
     36c:	ldr	x0, [sp, #664]
     370:	ror	x0, x0, #39
     374:	eor	x1, x1, x0
     378:	ldr	x2, [sp, #664]
     37c:	ldr	x0, [sp, #672]
     380:	orr	x2, x2, x0
     384:	ldr	x0, [sp, #680]
     388:	and	x2, x2, x0
     38c:	ldr	x3, [sp, #664]
     390:	ldr	x0, [sp, #672]
     394:	and	x0, x3, x0
     398:	orr	x0, x2, x0
     39c:	add	x0, x1, x0
     3a0:	str	x0, [sp, #728]
     3a4:	ldr	x1, [sp, #688]
     3a8:	ldr	x0, [sp, #736]
     3ac:	add	x0, x1, x0
     3b0:	str	x0, [sp, #688]
     3b4:	ldr	x1, [sp, #736]
     3b8:	ldr	x0, [sp, #728]
     3bc:	add	x0, x1, x0
     3c0:	str	x0, [sp, #720]
     3c4:	ldr	x1, [sp, #712]
     3c8:	ldr	x0, [sp, #688]
     3cc:	ror	x2, x0, #14
     3d0:	ldr	x0, [sp, #688]
     3d4:	ror	x0, x0, #18
     3d8:	eor	x2, x2, x0
     3dc:	ldr	x0, [sp, #688]
     3e0:	ror	x0, x0, #41
     3e4:	eor	x0, x2, x0
     3e8:	add	x1, x1, x0
     3ec:	ldr	x2, [sp, #704]
     3f0:	ldr	x3, [sp, #688]
     3f4:	ldr	x4, [sp, #696]
     3f8:	ldr	x0, [sp, #704]
     3fc:	eor	x0, x4, x0
     400:	and	x0, x3, x0
     404:	eor	x0, x2, x0
     408:	add	x1, x1, x0
     40c:	ldr	w0, [sp, #748]
     410:	add	w2, w0, #0x1
     414:	adrp	x0, 0 <sha512_compress>
     418:	add	x0, x0, #0x0
     41c:	sxtw	x2, w2
     420:	ldr	x0, [x0, x2, lsl #3]
     424:	add	x1, x1, x0
     428:	ldr	w0, [sp, #748]
     42c:	add	w0, w0, #0x1
     430:	sxtw	x0, w0
     434:	lsl	x0, x0, #3
     438:	add	x2, sp, #0x18
     43c:	ldr	x0, [x2, x0]
     440:	add	x0, x1, x0
     444:	str	x0, [sp, #736]
     448:	ldr	x0, [sp, #720]
     44c:	ror	x1, x0, #28
     450:	ldr	x0, [sp, #720]
     454:	ror	x0, x0, #34
     458:	eor	x1, x1, x0
     45c:	ldr	x0, [sp, #720]
     460:	ror	x0, x0, #39
     464:	eor	x1, x1, x0
     468:	ldr	x2, [sp, #720]
     46c:	ldr	x0, [sp, #664]
     470:	orr	x2, x2, x0
     474:	ldr	x0, [sp, #672]
     478:	and	x2, x2, x0
     47c:	ldr	x3, [sp, #720]
     480:	ldr	x0, [sp, #664]
     484:	and	x0, x3, x0
     488:	orr	x0, x2, x0
     48c:	add	x0, x1, x0
     490:	str	x0, [sp, #728]
     494:	ldr	x1, [sp, #680]
     498:	ldr	x0, [sp, #736]
     49c:	add	x0, x1, x0
     4a0:	str	x0, [sp, #680]
     4a4:	ldr	x1, [sp, #736]
     4a8:	ldr	x0, [sp, #728]
     4ac:	add	x0, x1, x0
     4b0:	str	x0, [sp, #712]
     4b4:	ldr	x1, [sp, #704]
     4b8:	ldr	x0, [sp, #680]
     4bc:	ror	x2, x0, #14
     4c0:	ldr	x0, [sp, #680]
     4c4:	ror	x0, x0, #18
     4c8:	eor	x2, x2, x0
     4cc:	ldr	x0, [sp, #680]
     4d0:	ror	x0, x0, #41
     4d4:	eor	x0, x2, x0
     4d8:	add	x1, x1, x0
     4dc:	ldr	x2, [sp, #696]
     4e0:	ldr	x3, [sp, #680]
     4e4:	ldr	x4, [sp, #688]
     4e8:	ldr	x0, [sp, #696]
     4ec:	eor	x0, x4, x0
     4f0:	and	x0, x3, x0
     4f4:	eor	x0, x2, x0
     4f8:	add	x1, x1, x0
     4fc:	ldr	w0, [sp, #748]
     500:	add	w2, w0, #0x2
     504:	adrp	x0, 0 <sha512_compress>
     508:	add	x0, x0, #0x0
     50c:	sxtw	x2, w2
     510:	ldr	x0, [x0, x2, lsl #3]
     514:	add	x1, x1, x0
     518:	ldr	w0, [sp, #748]
     51c:	add	w0, w0, #0x2
     520:	sxtw	x0, w0
     524:	lsl	x0, x0, #3
     528:	add	x2, sp, #0x18
     52c:	ldr	x0, [x2, x0]
     530:	add	x0, x1, x0
     534:	str	x0, [sp, #736]
     538:	ldr	x0, [sp, #712]
     53c:	ror	x1, x0, #28
     540:	ldr	x0, [sp, #712]
     544:	ror	x0, x0, #34
     548:	eor	x1, x1, x0
     54c:	ldr	x0, [sp, #712]
     550:	ror	x0, x0, #39
     554:	eor	x1, x1, x0
     558:	ldr	x2, [sp, #712]
     55c:	ldr	x0, [sp, #720]
     560:	orr	x2, x2, x0
     564:	ldr	x0, [sp, #664]
     568:	and	x2, x2, x0
     56c:	ldr	x3, [sp, #712]
     570:	ldr	x0, [sp, #720]
     574:	and	x0, x3, x0
     578:	orr	x0, x2, x0
     57c:	add	x0, x1, x0
     580:	str	x0, [sp, #728]
     584:	ldr	x1, [sp, #672]
     588:	ldr	x0, [sp, #736]
     58c:	add	x0, x1, x0
     590:	str	x0, [sp, #672]
     594:	ldr	x1, [sp, #736]
     598:	ldr	x0, [sp, #728]
     59c:	add	x0, x1, x0
     5a0:	str	x0, [sp, #704]
     5a4:	ldr	x1, [sp, #696]
     5a8:	ldr	x0, [sp, #672]
     5ac:	ror	x2, x0, #14
     5b0:	ldr	x0, [sp, #672]
     5b4:	ror	x0, x0, #18
     5b8:	eor	x2, x2, x0
     5bc:	ldr	x0, [sp, #672]
     5c0:	ror	x0, x0, #41
     5c4:	eor	x0, x2, x0
     5c8:	add	x1, x1, x0
     5cc:	ldr	x2, [sp, #688]
     5d0:	ldr	x3, [sp, #672]
     5d4:	ldr	x4, [sp, #680]
     5d8:	ldr	x0, [sp, #688]
     5dc:	eor	x0, x4, x0
     5e0:	and	x0, x3, x0
     5e4:	eor	x0, x2, x0
     5e8:	add	x1, x1, x0
     5ec:	ldr	w0, [sp, #748]
     5f0:	add	w2, w0, #0x3
     5f4:	adrp	x0, 0 <sha512_compress>
     5f8:	add	x0, x0, #0x0
     5fc:	sxtw	x2, w2
     600:	ldr	x0, [x0, x2, lsl #3]
     604:	add	x1, x1, x0
     608:	ldr	w0, [sp, #748]
     60c:	add	w0, w0, #0x3
     610:	sxtw	x0, w0
     614:	lsl	x0, x0, #3
     618:	add	x2, sp, #0x18
     61c:	ldr	x0, [x2, x0]
     620:	add	x0, x1, x0
     624:	str	x0, [sp, #736]
     628:	ldr	x0, [sp, #704]
     62c:	ror	x1, x0, #28
     630:	ldr	x0, [sp, #704]
     634:	ror	x0, x0, #34
     638:	eor	x1, x1, x0
     63c:	ldr	x0, [sp, #704]
     640:	ror	x0, x0, #39
     644:	eor	x1, x1, x0
     648:	ldr	x2, [sp, #704]
     64c:	ldr	x0, [sp, #712]
     650:	orr	x2, x2, x0
     654:	ldr	x0, [sp, #720]
     658:	and	x2, x2, x0
     65c:	ldr	x3, [sp, #704]
     660:	ldr	x0, [sp, #712]
     664:	and	x0, x3, x0
     668:	orr	x0, x2, x0
     66c:	add	x0, x1, x0
     670:	str	x0, [sp, #728]
     674:	ldr	x1, [sp, #664]
     678:	ldr	x0, [sp, #736]
     67c:	add	x0, x1, x0
     680:	str	x0, [sp, #664]
     684:	ldr	x1, [sp, #736]
     688:	ldr	x0, [sp, #728]
     68c:	add	x0, x1, x0
     690:	str	x0, [sp, #696]
     694:	ldr	x1, [sp, #688]
     698:	ldr	x0, [sp, #664]
     69c:	ror	x2, x0, #14
     6a0:	ldr	x0, [sp, #664]
     6a4:	ror	x0, x0, #18
     6a8:	eor	x2, x2, x0
     6ac:	ldr	x0, [sp, #664]
     6b0:	ror	x0, x0, #41
     6b4:	eor	x0, x2, x0
     6b8:	add	x1, x1, x0
     6bc:	ldr	x2, [sp, #680]
     6c0:	ldr	x3, [sp, #664]
     6c4:	ldr	x4, [sp, #672]
     6c8:	ldr	x0, [sp, #680]
     6cc:	eor	x0, x4, x0
     6d0:	and	x0, x3, x0
     6d4:	eor	x0, x2, x0
     6d8:	add	x1, x1, x0
     6dc:	ldr	w0, [sp, #748]
     6e0:	add	w2, w0, #0x4
     6e4:	adrp	x0, 0 <sha512_compress>
     6e8:	add	x0, x0, #0x0
     6ec:	sxtw	x2, w2
     6f0:	ldr	x0, [x0, x2, lsl #3]
     6f4:	add	x1, x1, x0
     6f8:	ldr	w0, [sp, #748]
     6fc:	add	w0, w0, #0x4
     700:	sxtw	x0, w0
     704:	lsl	x0, x0, #3
     708:	add	x2, sp, #0x18
     70c:	ldr	x0, [x2, x0]
     710:	add	x0, x1, x0
     714:	str	x0, [sp, #736]
     718:	ldr	x0, [sp, #696]
     71c:	ror	x1, x0, #28
     720:	ldr	x0, [sp, #696]
     724:	ror	x0, x0, #34
     728:	eor	x1, x1, x0
     72c:	ldr	x0, [sp, #696]
     730:	ror	x0, x0, #39
     734:	eor	x1, x1, x0
     738:	ldr	x2, [sp, #696]
     73c:	ldr	x0, [sp, #704]
     740:	orr	x2, x2, x0
     744:	ldr	x0, [sp, #712]
     748:	and	x2, x2, x0
     74c:	ldr	x3, [sp, #696]
     750:	ldr	x0, [sp, #704]
     754:	and	x0, x3, x0
     758:	orr	x0, x2, x0
     75c:	add	x0, x1, x0
     760:	str	x0, [sp, #728]
     764:	ldr	x1, [sp, #720]
     768:	ldr	x0, [sp, #736]
     76c:	add	x0, x1, x0
     770:	str	x0, [sp, #720]
     774:	ldr	x1, [sp, #736]
     778:	ldr	x0, [sp, #728]
     77c:	add	x0, x1, x0
     780:	str	x0, [sp, #688]
     784:	ldr	x1, [sp, #680]
     788:	ldr	x0, [sp, #720]
     78c:	ror	x2, x0, #14
     790:	ldr	x0, [sp, #720]
     794:	ror	x0, x0, #18
     798:	eor	x2, x2, x0
     79c:	ldr	x0, [sp, #720]
     7a0:	ror	x0, x0, #41
     7a4:	eor	x0, x2, x0
     7a8:	add	x1, x1, x0
     7ac:	ldr	x2, [sp, #672]
     7b0:	ldr	x3, [sp, #720]
     7b4:	ldr	x4, [sp, #664]
     7b8:	ldr	x0, [sp, #672]
     7bc:	eor	x0, x4, x0
     7c0:	and	x0, x3, x0
     7c4:	eor	x0, x2, x0
     7c8:	add	x1, x1, x0
     7cc:	ldr	w0, [sp, #748]
     7d0:	add	w2, w0, #0x5
     7d4:	adrp	x0, 0 <sha512_compress>
     7d8:	add	x0, x0, #0x0
     7dc:	sxtw	x2, w2
     7e0:	ldr	x0, [x0, x2, lsl #3]
     7e4:	add	x1, x1, x0
     7e8:	ldr	w0, [sp, #748]
     7ec:	add	w0, w0, #0x5
     7f0:	sxtw	x0, w0
     7f4:	lsl	x0, x0, #3
     7f8:	add	x2, sp, #0x18
     7fc:	ldr	x0, [x2, x0]
     800:	add	x0, x1, x0
     804:	str	x0, [sp, #736]
     808:	ldr	x0, [sp, #688]
     80c:	ror	x1, x0, #28
     810:	ldr	x0, [sp, #688]
     814:	ror	x0, x0, #34
     818:	eor	x1, x1, x0
     81c:	ldr	x0, [sp, #688]
     820:	ror	x0, x0, #39
     824:	eor	x1, x1, x0
     828:	ldr	x2, [sp, #688]
     82c:	ldr	x0, [sp, #696]
     830:	orr	x2, x2, x0
     834:	ldr	x0, [sp, #704]
     838:	and	x2, x2, x0
     83c:	ldr	x3, [sp, #688]
     840:	ldr	x0, [sp, #696]
     844:	and	x0, x3, x0
     848:	orr	x0, x2, x0
     84c:	add	x0, x1, x0
     850:	str	x0, [sp, #728]
     854:	ldr	x1, [sp, #712]
     858:	ldr	x0, [sp, #736]
     85c:	add	x0, x1, x0
     860:	str	x0, [sp, #712]
     864:	ldr	x1, [sp, #736]
     868:	ldr	x0, [sp, #728]
     86c:	add	x0, x1, x0
     870:	str	x0, [sp, #680]
     874:	ldr	x1, [sp, #672]
     878:	ldr	x0, [sp, #712]
     87c:	ror	x2, x0, #14
     880:	ldr	x0, [sp, #712]
     884:	ror	x0, x0, #18
     888:	eor	x2, x2, x0
     88c:	ldr	x0, [sp, #712]
     890:	ror	x0, x0, #41
     894:	eor	x0, x2, x0
     898:	add	x1, x1, x0
     89c:	ldr	x2, [sp, #664]
     8a0:	ldr	x3, [sp, #712]
     8a4:	ldr	x4, [sp, #720]
     8a8:	ldr	x0, [sp, #664]
     8ac:	eor	x0, x4, x0
     8b0:	and	x0, x3, x0
     8b4:	eor	x0, x2, x0
     8b8:	add	x1, x1, x0
     8bc:	ldr	w0, [sp, #748]
     8c0:	add	w2, w0, #0x6
     8c4:	adrp	x0, 0 <sha512_compress>
     8c8:	add	x0, x0, #0x0
     8cc:	sxtw	x2, w2
     8d0:	ldr	x0, [x0, x2, lsl #3]
     8d4:	add	x1, x1, x0
     8d8:	ldr	w0, [sp, #748]
     8dc:	add	w0, w0, #0x6
     8e0:	sxtw	x0, w0
     8e4:	lsl	x0, x0, #3
     8e8:	add	x2, sp, #0x18
     8ec:	ldr	x0, [x2, x0]
     8f0:	add	x0, x1, x0
     8f4:	str	x0, [sp, #736]
     8f8:	ldr	x0, [sp, #680]
     8fc:	ror	x1, x0, #28
     900:	ldr	x0, [sp, #680]
     904:	ror	x0, x0, #34
     908:	eor	x1, x1, x0
     90c:	ldr	x0, [sp, #680]
     910:	ror	x0, x0, #39
     914:	eor	x1, x1, x0
     918:	ldr	x2, [sp, #680]
     91c:	ldr	x0, [sp, #688]
     920:	orr	x2, x2, x0
     924:	ldr	x0, [sp, #696]
     928:	and	x2, x2, x0
     92c:	ldr	x3, [sp, #680]
     930:	ldr	x0, [sp, #688]
     934:	and	x0, x3, x0
     938:	orr	x0, x2, x0
     93c:	add	x0, x1, x0
     940:	str	x0, [sp, #728]
     944:	ldr	x1, [sp, #704]
     948:	ldr	x0, [sp, #736]
     94c:	add	x0, x1, x0
     950:	str	x0, [sp, #704]
     954:	ldr	x1, [sp, #736]
     958:	ldr	x0, [sp, #728]
     95c:	add	x0, x1, x0
     960:	str	x0, [sp, #672]
     964:	ldr	x1, [sp, #664]
     968:	ldr	x0, [sp, #704]
     96c:	ror	x2, x0, #14
     970:	ldr	x0, [sp, #704]
     974:	ror	x0, x0, #18
     978:	eor	x2, x2, x0
     97c:	ldr	x0, [sp, #704]
     980:	ror	x0, x0, #41
     984:	eor	x0, x2, x0
     988:	add	x1, x1, x0
     98c:	ldr	x2, [sp, #720]
     990:	ldr	x3, [sp, #704]
     994:	ldr	x4, [sp, #712]
     998:	ldr	x0, [sp, #720]
     99c:	eor	x0, x4, x0
     9a0:	and	x0, x3, x0
     9a4:	eor	x0, x2, x0
     9a8:	add	x1, x1, x0
     9ac:	ldr	w0, [sp, #748]
     9b0:	add	w2, w0, #0x7
     9b4:	adrp	x0, 0 <sha512_compress>
     9b8:	add	x0, x0, #0x0
     9bc:	sxtw	x2, w2
     9c0:	ldr	x0, [x0, x2, lsl #3]
     9c4:	add	x1, x1, x0
     9c8:	ldr	w0, [sp, #748]
     9cc:	add	w0, w0, #0x7
     9d0:	sxtw	x0, w0
     9d4:	lsl	x0, x0, #3
     9d8:	add	x2, sp, #0x18
     9dc:	ldr	x0, [x2, x0]
     9e0:	add	x0, x1, x0
     9e4:	str	x0, [sp, #736]
     9e8:	ldr	x0, [sp, #672]
     9ec:	ror	x1, x0, #28
     9f0:	ldr	x0, [sp, #672]
     9f4:	ror	x0, x0, #34
     9f8:	eor	x1, x1, x0
     9fc:	ldr	x0, [sp, #672]
     a00:	ror	x0, x0, #39
     a04:	eor	x1, x1, x0
     a08:	ldr	x2, [sp, #672]
     a0c:	ldr	x0, [sp, #680]
     a10:	orr	x2, x2, x0
     a14:	ldr	x0, [sp, #688]
     a18:	and	x2, x2, x0
     a1c:	ldr	x3, [sp, #672]
     a20:	ldr	x0, [sp, #680]
     a24:	and	x0, x3, x0
     a28:	orr	x0, x2, x0
     a2c:	add	x0, x1, x0
     a30:	str	x0, [sp, #728]
     a34:	ldr	x1, [sp, #696]
     a38:	ldr	x0, [sp, #736]
     a3c:	add	x0, x1, x0
     a40:	str	x0, [sp, #696]
     a44:	ldr	x1, [sp, #736]
     a48:	ldr	x0, [sp, #728]
     a4c:	add	x0, x1, x0
     a50:	str	x0, [sp, #664]
     a54:	ldr	w0, [sp, #748]
     a58:	add	w0, w0, #0x8
     a5c:	str	w0, [sp, #748]
     a60:	ldr	w0, [sp, #748]
     a64:	cmp	w0, #0x4f
     a68:	b.le	2e4 <sha512_compress+0x2e4>
     a6c:	str	wzr, [sp, #748]
     a70:	b	abc <sha512_compress+0xabc>
     a74:	ldr	x1, [sp, #8]
     a78:	ldrsw	x0, [sp, #748]
     a7c:	lsl	x0, x0, #3
     a80:	add	x0, x1, x0
     a84:	ldr	x1, [x0, #8]
     a88:	ldrsw	x0, [sp, #748]
     a8c:	lsl	x0, x0, #3
     a90:	add	x2, sp, #0x298
     a94:	ldr	x0, [x2, x0]
     a98:	add	x1, x1, x0
     a9c:	ldr	x2, [sp, #8]
     aa0:	ldrsw	x0, [sp, #748]
     aa4:	lsl	x0, x0, #3
     aa8:	add	x0, x2, x0
     aac:	str	x1, [x0, #8]
     ab0:	ldr	w0, [sp, #748]
     ab4:	add	w0, w0, #0x1
     ab8:	str	w0, [sp, #748]
     abc:	ldr	w0, [sp, #748]
     ac0:	cmp	w0, #0x7
     ac4:	b.le	a74 <sha512_compress+0xa74>
     ac8:	nop
     acc:	nop
     ad0:	add	sp, sp, #0x2f0
     ad4:	ret

0000000000000ad8 <sha512_init>:
     ad8:	sub	sp, sp, #0x10
     adc:	str	x0, [sp, #8]
     ae0:	ldr	x0, [sp, #8]
     ae4:	str	xzr, [x0, #72]
     ae8:	ldr	x0, [sp, #8]
     aec:	str	xzr, [x0]
     af0:	ldr	x0, [sp, #8]
     af4:	mov	x1, #0xc908                	// #51464
     af8:	movk	x1, #0xf3bc, lsl #16
     afc:	movk	x1, #0xe667, lsl #32
     b00:	movk	x1, #0x6a09, lsl #48
     b04:	str	x1, [x0, #8]
     b08:	ldr	x0, [sp, #8]
     b0c:	mov	x1, #0xa73b                	// #42811
     b10:	movk	x1, #0x84ca, lsl #16
     b14:	movk	x1, #0xae85, lsl #32
     b18:	movk	x1, #0xbb67, lsl #48
     b1c:	str	x1, [x0, #16]
     b20:	ldr	x0, [sp, #8]
     b24:	mov	x1, #0xf82b                	// #63531
     b28:	movk	x1, #0xfe94, lsl #16
     b2c:	movk	x1, #0xf372, lsl #32
     b30:	movk	x1, #0x3c6e, lsl #48
     b34:	str	x1, [x0, #24]
     b38:	ldr	x0, [sp, #8]
     b3c:	mov	x1, #0x36f1                	// #14065
     b40:	movk	x1, #0x5f1d, lsl #16
     b44:	movk	x1, #0xf53a, lsl #32
     b48:	movk	x1, #0xa54f, lsl #48
     b4c:	str	x1, [x0, #32]
     b50:	ldr	x0, [sp, #8]
     b54:	mov	x1, #0x82d1                	// #33489
     b58:	movk	x1, #0xade6, lsl #16
     b5c:	movk	x1, #0x527f, lsl #32
     b60:	movk	x1, #0x510e, lsl #48
     b64:	str	x1, [x0, #40]
     b68:	ldr	x0, [sp, #8]
     b6c:	mov	x1, #0x6c1f                	// #27679
     b70:	movk	x1, #0x2b3e, lsl #16
     b74:	movk	x1, #0x688c, lsl #32
     b78:	movk	x1, #0x9b05, lsl #48
     b7c:	str	x1, [x0, #48]
     b80:	ldr	x0, [sp, #8]
     b84:	mov	x1, #0xbd6b                	// #48491
     b88:	movk	x1, #0xfb41, lsl #16
     b8c:	movk	x1, #0xd9ab, lsl #32
     b90:	movk	x1, #0x1f83, lsl #48
     b94:	str	x1, [x0, #56]
     b98:	ldr	x0, [sp, #8]
     b9c:	mov	x1, #0x2179                	// #8569
     ba0:	movk	x1, #0x137e, lsl #16
     ba4:	movk	x1, #0xcd19, lsl #32
     ba8:	movk	x1, #0x5be0, lsl #48
     bac:	str	x1, [x0, #64]
     bb0:	nop
     bb4:	add	sp, sp, #0x10
     bb8:	ret

0000000000000bbc <sha512_done>:
     bbc:	stp	x29, x30, [sp, #-48]!
     bc0:	mov	x29, sp
     bc4:	str	x0, [sp, #24]
     bc8:	str	x1, [sp, #16]
     bcc:	ldr	x0, [sp, #24]
     bd0:	ldr	x1, [x0]
     bd4:	ldr	x0, [sp, #24]
     bd8:	ldr	x0, [x0, #72]
     bdc:	lsl	x0, x0, #3
     be0:	add	x1, x1, x0
     be4:	ldr	x0, [sp, #24]
     be8:	str	x1, [x0]
     bec:	ldr	x0, [sp, #24]
     bf0:	ldr	x0, [x0, #72]
     bf4:	add	x2, x0, #0x1
     bf8:	ldr	x1, [sp, #24]
     bfc:	str	x2, [x1, #72]
     c00:	ldr	x1, [sp, #24]
     c04:	add	x0, x1, x0
     c08:	mov	w1, #0xffffff80            	// #-128
     c0c:	strb	w1, [x0, #80]
     c10:	ldr	x0, [sp, #24]
     c14:	ldr	x0, [x0, #72]
     c18:	cmp	x0, #0x70
     c1c:	b.ls	c94 <sha512_done+0xd8>  // b.plast
     c20:	b	c44 <sha512_done+0x88>
     c24:	ldr	x0, [sp, #24]
     c28:	ldr	x0, [x0, #72]
     c2c:	add	x2, x0, #0x1
     c30:	ldr	x1, [sp, #24]
     c34:	str	x2, [x1, #72]
     c38:	ldr	x1, [sp, #24]
     c3c:	add	x0, x1, x0
     c40:	strb	wzr, [x0, #80]
     c44:	ldr	x0, [sp, #24]
     c48:	ldr	x0, [x0, #72]
     c4c:	cmp	x0, #0x7f
     c50:	b.ls	c24 <sha512_done+0x68>  // b.plast
     c54:	ldr	x0, [sp, #24]
     c58:	add	x0, x0, #0x50
     c5c:	mov	x1, x0
     c60:	ldr	x0, [sp, #24]
     c64:	bl	0 <sha512_compress>
     c68:	ldr	x0, [sp, #24]
     c6c:	str	xzr, [x0, #72]
     c70:	b	c94 <sha512_done+0xd8>
     c74:	ldr	x0, [sp, #24]
     c78:	ldr	x0, [x0, #72]
     c7c:	add	x2, x0, #0x1
     c80:	ldr	x1, [sp, #24]
     c84:	str	x2, [x1, #72]
     c88:	ldr	x1, [sp, #24]
     c8c:	add	x0, x1, x0
     c90:	strb	wzr, [x0, #80]
     c94:	ldr	x0, [sp, #24]
     c98:	ldr	x0, [x0, #72]
     c9c:	cmp	x0, #0x77
     ca0:	b.ls	c74 <sha512_done+0xb8>  // b.plast
     ca4:	ldr	x0, [sp, #24]
     ca8:	ldr	x0, [x0]
     cac:	lsr	x0, x0, #56
     cb0:	and	w1, w0, #0xff
     cb4:	ldr	x0, [sp, #24]
     cb8:	strb	w1, [x0, #200]
     cbc:	ldr	x0, [sp, #24]
     cc0:	ldr	x0, [x0]
     cc4:	lsr	x0, x0, #48
     cc8:	and	w1, w0, #0xff
     ccc:	ldr	x0, [sp, #24]
     cd0:	strb	w1, [x0, #201]
     cd4:	ldr	x0, [sp, #24]
     cd8:	ldr	x0, [x0]
     cdc:	lsr	x0, x0, #40
     ce0:	and	w1, w0, #0xff
     ce4:	ldr	x0, [sp, #24]
     ce8:	strb	w1, [x0, #202]
     cec:	ldr	x0, [sp, #24]
     cf0:	ldr	x0, [x0]
     cf4:	lsr	x0, x0, #32
     cf8:	and	w1, w0, #0xff
     cfc:	ldr	x0, [sp, #24]
     d00:	strb	w1, [x0, #203]
     d04:	ldr	x0, [sp, #24]
     d08:	ldr	x0, [x0]
     d0c:	lsr	x0, x0, #24
     d10:	and	w1, w0, #0xff
     d14:	ldr	x0, [sp, #24]
     d18:	strb	w1, [x0, #204]
     d1c:	ldr	x0, [sp, #24]
     d20:	ldr	x0, [x0]
     d24:	lsr	x0, x0, #16
     d28:	and	w1, w0, #0xff
     d2c:	ldr	x0, [sp, #24]
     d30:	strb	w1, [x0, #205]
     d34:	ldr	x0, [sp, #24]
     d38:	ldr	x0, [x0]
     d3c:	lsr	x0, x0, #8
     d40:	and	w1, w0, #0xff
     d44:	ldr	x0, [sp, #24]
     d48:	strb	w1, [x0, #206]
     d4c:	ldr	x0, [sp, #24]
     d50:	ldr	x0, [x0]
     d54:	and	w1, w0, #0xff
     d58:	ldr	x0, [sp, #24]
     d5c:	strb	w1, [x0, #207]
     d60:	ldr	x0, [sp, #24]
     d64:	add	x0, x0, #0x50
     d68:	mov	x1, x0
     d6c:	ldr	x0, [sp, #24]
     d70:	bl	0 <sha512_compress>
     d74:	str	wzr, [sp, #44]
     d78:	b	f40 <sha512_done+0x384>
     d7c:	ldr	x1, [sp, #24]
     d80:	ldrsw	x0, [sp, #44]
     d84:	lsl	x0, x0, #3
     d88:	add	x0, x1, x0
     d8c:	ldr	x0, [x0, #8]
     d90:	lsr	x2, x0, #56
     d94:	ldr	w0, [sp, #44]
     d98:	lsl	w0, w0, #3
     d9c:	sxtw	x0, w0
     da0:	ldr	x1, [sp, #16]
     da4:	add	x0, x1, x0
     da8:	and	w1, w2, #0xff
     dac:	strb	w1, [x0]
     db0:	ldr	x1, [sp, #24]
     db4:	ldrsw	x0, [sp, #44]
     db8:	lsl	x0, x0, #3
     dbc:	add	x0, x1, x0
     dc0:	ldr	x0, [x0, #8]
     dc4:	lsr	x2, x0, #48
     dc8:	ldr	w0, [sp, #44]
     dcc:	lsl	w0, w0, #3
     dd0:	sxtw	x0, w0
     dd4:	add	x0, x0, #0x1
     dd8:	ldr	x1, [sp, #16]
     ddc:	add	x0, x1, x0
     de0:	and	w1, w2, #0xff
     de4:	strb	w1, [x0]
     de8:	ldr	x1, [sp, #24]
     dec:	ldrsw	x0, [sp, #44]
     df0:	lsl	x0, x0, #3
     df4:	add	x0, x1, x0
     df8:	ldr	x0, [x0, #8]
     dfc:	lsr	x2, x0, #40
     e00:	ldr	w0, [sp, #44]
     e04:	lsl	w0, w0, #3
     e08:	sxtw	x0, w0
     e0c:	add	x0, x0, #0x2
     e10:	ldr	x1, [sp, #16]
     e14:	add	x0, x1, x0
     e18:	and	w1, w2, #0xff
     e1c:	strb	w1, [x0]
     e20:	ldr	x1, [sp, #24]
     e24:	ldrsw	x0, [sp, #44]
     e28:	lsl	x0, x0, #3
     e2c:	add	x0, x1, x0
     e30:	ldr	x0, [x0, #8]
     e34:	lsr	x2, x0, #32
     e38:	ldr	w0, [sp, #44]
     e3c:	lsl	w0, w0, #3
     e40:	sxtw	x0, w0
     e44:	add	x0, x0, #0x3
     e48:	ldr	x1, [sp, #16]
     e4c:	add	x0, x1, x0
     e50:	and	w1, w2, #0xff
     e54:	strb	w1, [x0]
     e58:	ldr	x1, [sp, #24]
     e5c:	ldrsw	x0, [sp, #44]
     e60:	lsl	x0, x0, #3
     e64:	add	x0, x1, x0
     e68:	ldr	x0, [x0, #8]
     e6c:	lsr	x2, x0, #24
     e70:	ldr	w0, [sp, #44]
     e74:	lsl	w0, w0, #3
     e78:	sxtw	x0, w0
     e7c:	add	x0, x0, #0x4
     e80:	ldr	x1, [sp, #16]
     e84:	add	x0, x1, x0
     e88:	and	w1, w2, #0xff
     e8c:	strb	w1, [x0]
     e90:	ldr	x1, [sp, #24]
     e94:	ldrsw	x0, [sp, #44]
     e98:	lsl	x0, x0, #3
     e9c:	add	x0, x1, x0
     ea0:	ldr	x0, [x0, #8]
     ea4:	lsr	x2, x0, #16
     ea8:	ldr	w0, [sp, #44]
     eac:	lsl	w0, w0, #3
     eb0:	sxtw	x0, w0
     eb4:	add	x0, x0, #0x5
     eb8:	ldr	x1, [sp, #16]
     ebc:	add	x0, x1, x0
     ec0:	and	w1, w2, #0xff
     ec4:	strb	w1, [x0]
     ec8:	ldr	x1, [sp, #24]
     ecc:	ldrsw	x0, [sp, #44]
     ed0:	lsl	x0, x0, #3
     ed4:	add	x0, x1, x0
     ed8:	ldr	x0, [x0, #8]
     edc:	lsr	x2, x0, #8
     ee0:	ldr	w0, [sp, #44]
     ee4:	lsl	w0, w0, #3
     ee8:	sxtw	x0, w0
     eec:	add	x0, x0, #0x6
     ef0:	ldr	x1, [sp, #16]
     ef4:	add	x0, x1, x0
     ef8:	and	w1, w2, #0xff
     efc:	strb	w1, [x0]
     f00:	ldr	x1, [sp, #24]
     f04:	ldrsw	x0, [sp, #44]
     f08:	lsl	x0, x0, #3
     f0c:	add	x0, x1, x0
     f10:	ldr	x2, [x0, #8]
     f14:	ldr	w0, [sp, #44]
     f18:	lsl	w0, w0, #3
     f1c:	sxtw	x0, w0
     f20:	add	x0, x0, #0x7
     f24:	ldr	x1, [sp, #16]
     f28:	add	x0, x1, x0
     f2c:	and	w1, w2, #0xff
     f30:	strb	w1, [x0]
     f34:	ldr	w0, [sp, #44]
     f38:	add	w0, w0, #0x1
     f3c:	str	w0, [sp, #44]
     f40:	ldr	w0, [sp, #44]
     f44:	cmp	w0, #0x7
     f48:	b.le	d7c <sha512_done+0x1c0>
     f4c:	nop
     f50:	nop
     f54:	ldp	x29, x30, [sp], #48
     f58:	ret

0000000000000f5c <sha512_process>:
     f5c:	stp	x29, x30, [sp, #-64]!
     f60:	mov	x29, sp
     f64:	str	x0, [sp, #40]
     f68:	str	x1, [sp, #32]
     f6c:	str	x2, [sp, #24]
     f70:	b	1088 <sha512_process+0x12c>
     f74:	ldr	x0, [sp, #40]
     f78:	ldr	x0, [x0, #72]
     f7c:	cmp	x0, #0x0
     f80:	b.ne	fcc <sha512_process+0x70>  // b.any
     f84:	ldr	x0, [sp, #24]
     f88:	cmp	x0, #0x7f
     f8c:	b.ls	fcc <sha512_process+0x70>  // b.plast
     f90:	ldr	x1, [sp, #32]
     f94:	ldr	x0, [sp, #40]
     f98:	bl	0 <sha512_compress>
     f9c:	ldr	x0, [sp, #40]
     fa0:	ldr	x0, [x0]
     fa4:	add	x1, x0, #0x400
     fa8:	ldr	x0, [sp, #40]
     fac:	str	x1, [x0]
     fb0:	ldr	x0, [sp, #32]
     fb4:	add	x0, x0, #0x80
     fb8:	str	x0, [sp, #32]
     fbc:	ldr	x0, [sp, #24]
     fc0:	sub	x0, x0, #0x80
     fc4:	str	x0, [sp, #24]
     fc8:	b	1088 <sha512_process+0x12c>
     fcc:	ldr	x0, [sp, #40]
     fd0:	ldr	x0, [x0, #72]
     fd4:	mov	x1, #0x80                  	// #128
     fd8:	sub	x0, x1, x0
     fdc:	ldr	x2, [sp, #24]
     fe0:	ldr	x1, [sp, #24]
     fe4:	cmp	x2, x0
     fe8:	csel	x0, x1, x0, ls  // ls = plast
     fec:	str	x0, [sp, #56]
     ff0:	ldr	x0, [sp, #40]
     ff4:	add	x1, x0, #0x50
     ff8:	ldr	x0, [sp, #40]
     ffc:	ldr	x0, [x0, #72]
    1000:	add	x0, x1, x0
    1004:	ldr	x2, [sp, #56]
    1008:	ldr	x1, [sp, #32]
    100c:	bl	0 <memcpy>
    1010:	ldr	x0, [sp, #40]
    1014:	ldr	x1, [x0, #72]
    1018:	ldr	x0, [sp, #56]
    101c:	add	x1, x1, x0
    1020:	ldr	x0, [sp, #40]
    1024:	str	x1, [x0, #72]
    1028:	ldr	x1, [sp, #32]
    102c:	ldr	x0, [sp, #56]
    1030:	add	x0, x1, x0
    1034:	str	x0, [sp, #32]
    1038:	ldr	x1, [sp, #24]
    103c:	ldr	x0, [sp, #56]
    1040:	sub	x0, x1, x0
    1044:	str	x0, [sp, #24]
    1048:	ldr	x0, [sp, #40]
    104c:	ldr	x0, [x0, #72]
    1050:	cmp	x0, #0x80
    1054:	b.ne	1088 <sha512_process+0x12c>  // b.any
    1058:	ldr	x0, [sp, #40]
    105c:	add	x0, x0, #0x50
    1060:	mov	x1, x0
    1064:	ldr	x0, [sp, #40]
    1068:	bl	0 <sha512_compress>
    106c:	ldr	x0, [sp, #40]
    1070:	ldr	x0, [x0]
    1074:	add	x1, x0, #0x400
    1078:	ldr	x0, [sp, #40]
    107c:	str	x1, [x0]
    1080:	ldr	x0, [sp, #40]
    1084:	str	xzr, [x0, #72]
    1088:	ldr	x0, [sp, #24]
    108c:	cmp	x0, #0x0
    1090:	b.ne	f74 <sha512_process+0x18>  // b.any
    1094:	nop
    1098:	nop
    109c:	ldp	x29, x30, [sp], #64
    10a0:	ret

00000000000010a4 <ext2fs_sha512>:
    10a4:	stp	x29, x30, [sp, #-256]!
    10a8:	mov	x29, sp
    10ac:	str	x0, [sp, #40]
    10b0:	str	x1, [sp, #32]
    10b4:	str	x2, [sp, #24]
    10b8:	add	x0, sp, #0x30
    10bc:	bl	ad8 <sha512_init>
    10c0:	add	x0, sp, #0x30
    10c4:	ldr	x2, [sp, #32]
    10c8:	ldr	x1, [sp, #40]
    10cc:	bl	f5c <sha512_process>
    10d0:	add	x0, sp, #0x30
    10d4:	ldr	x1, [sp, #24]
    10d8:	bl	bbc <sha512_done>
    10dc:	nop
    10e0:	ldp	x29, x30, [sp], #256
    10e4:	ret

swapfs.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <EXT2_INODE>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	add	sp, sp, #0x10
      10:	ret

0000000000000014 <ext2fs_swap_super>:
      14:	stp	x29, x30, [sp, #-48]!
      18:	mov	x29, sp
      1c:	str	x0, [sp, #24]
      20:	ldr	x0, [sp, #24]
      24:	ldr	w0, [x0]
      28:	bl	0 <ext2fs_swab32>
      2c:	mov	w1, w0
      30:	ldr	x0, [sp, #24]
      34:	str	w1, [x0]
      38:	ldr	x0, [sp, #24]
      3c:	ldr	w0, [x0, #4]
      40:	bl	0 <ext2fs_swab32>
      44:	mov	w1, w0
      48:	ldr	x0, [sp, #24]
      4c:	str	w1, [x0, #4]
      50:	ldr	x0, [sp, #24]
      54:	ldr	w0, [x0, #8]
      58:	bl	0 <ext2fs_swab32>
      5c:	mov	w1, w0
      60:	ldr	x0, [sp, #24]
      64:	str	w1, [x0, #8]
      68:	ldr	x0, [sp, #24]
      6c:	ldr	w0, [x0, #12]
      70:	bl	0 <ext2fs_swab32>
      74:	mov	w1, w0
      78:	ldr	x0, [sp, #24]
      7c:	str	w1, [x0, #12]
      80:	ldr	x0, [sp, #24]
      84:	ldr	w0, [x0, #16]
      88:	bl	0 <ext2fs_swab32>
      8c:	mov	w1, w0
      90:	ldr	x0, [sp, #24]
      94:	str	w1, [x0, #16]
      98:	ldr	x0, [sp, #24]
      9c:	ldr	w0, [x0, #20]
      a0:	bl	0 <ext2fs_swab32>
      a4:	mov	w1, w0
      a8:	ldr	x0, [sp, #24]
      ac:	str	w1, [x0, #20]
      b0:	ldr	x0, [sp, #24]
      b4:	ldr	w0, [x0, #24]
      b8:	bl	0 <ext2fs_swab32>
      bc:	mov	w1, w0
      c0:	ldr	x0, [sp, #24]
      c4:	str	w1, [x0, #24]
      c8:	ldr	x0, [sp, #24]
      cc:	ldr	w0, [x0, #28]
      d0:	bl	0 <ext2fs_swab32>
      d4:	mov	w1, w0
      d8:	ldr	x0, [sp, #24]
      dc:	str	w1, [x0, #28]
      e0:	ldr	x0, [sp, #24]
      e4:	ldr	w0, [x0, #32]
      e8:	bl	0 <ext2fs_swab32>
      ec:	mov	w1, w0
      f0:	ldr	x0, [sp, #24]
      f4:	str	w1, [x0, #32]
      f8:	ldr	x0, [sp, #24]
      fc:	ldr	w0, [x0, #36]
     100:	bl	0 <ext2fs_swab32>
     104:	mov	w1, w0
     108:	ldr	x0, [sp, #24]
     10c:	str	w1, [x0, #36]
     110:	ldr	x0, [sp, #24]
     114:	ldr	w0, [x0, #40]
     118:	bl	0 <ext2fs_swab32>
     11c:	mov	w1, w0
     120:	ldr	x0, [sp, #24]
     124:	str	w1, [x0, #40]
     128:	ldr	x0, [sp, #24]
     12c:	ldr	w0, [x0, #44]
     130:	bl	0 <ext2fs_swab32>
     134:	mov	w1, w0
     138:	ldr	x0, [sp, #24]
     13c:	str	w1, [x0, #44]
     140:	ldr	x0, [sp, #24]
     144:	ldr	w0, [x0, #48]
     148:	bl	0 <ext2fs_swab32>
     14c:	mov	w1, w0
     150:	ldr	x0, [sp, #24]
     154:	str	w1, [x0, #48]
     158:	ldr	x0, [sp, #24]
     15c:	ldrh	w0, [x0, #52]
     160:	bl	0 <ext2fs_swab16>
     164:	and	w1, w0, #0xffff
     168:	ldr	x0, [sp, #24]
     16c:	strh	w1, [x0, #52]
     170:	ldr	x0, [sp, #24]
     174:	ldrsh	w0, [x0, #54]
     178:	and	w0, w0, #0xffff
     17c:	bl	0 <ext2fs_swab16>
     180:	and	w0, w0, #0xffff
     184:	sxth	w1, w0
     188:	ldr	x0, [sp, #24]
     18c:	strh	w1, [x0, #54]
     190:	ldr	x0, [sp, #24]
     194:	ldrh	w0, [x0, #56]
     198:	bl	0 <ext2fs_swab16>
     19c:	and	w1, w0, #0xffff
     1a0:	ldr	x0, [sp, #24]
     1a4:	strh	w1, [x0, #56]
     1a8:	ldr	x0, [sp, #24]
     1ac:	ldrh	w0, [x0, #58]
     1b0:	bl	0 <ext2fs_swab16>
     1b4:	and	w1, w0, #0xffff
     1b8:	ldr	x0, [sp, #24]
     1bc:	strh	w1, [x0, #58]
     1c0:	ldr	x0, [sp, #24]
     1c4:	ldrh	w0, [x0, #60]
     1c8:	bl	0 <ext2fs_swab16>
     1cc:	and	w1, w0, #0xffff
     1d0:	ldr	x0, [sp, #24]
     1d4:	strh	w1, [x0, #60]
     1d8:	ldr	x0, [sp, #24]
     1dc:	ldrh	w0, [x0, #62]
     1e0:	bl	0 <ext2fs_swab16>
     1e4:	and	w1, w0, #0xffff
     1e8:	ldr	x0, [sp, #24]
     1ec:	strh	w1, [x0, #62]
     1f0:	ldr	x0, [sp, #24]
     1f4:	ldr	w0, [x0, #64]
     1f8:	bl	0 <ext2fs_swab32>
     1fc:	mov	w1, w0
     200:	ldr	x0, [sp, #24]
     204:	str	w1, [x0, #64]
     208:	ldr	x0, [sp, #24]
     20c:	ldr	w0, [x0, #68]
     210:	bl	0 <ext2fs_swab32>
     214:	mov	w1, w0
     218:	ldr	x0, [sp, #24]
     21c:	str	w1, [x0, #68]
     220:	ldr	x0, [sp, #24]
     224:	ldr	w0, [x0, #72]
     228:	bl	0 <ext2fs_swab32>
     22c:	mov	w1, w0
     230:	ldr	x0, [sp, #24]
     234:	str	w1, [x0, #72]
     238:	ldr	x0, [sp, #24]
     23c:	ldr	w0, [x0, #76]
     240:	bl	0 <ext2fs_swab32>
     244:	mov	w1, w0
     248:	ldr	x0, [sp, #24]
     24c:	str	w1, [x0, #76]
     250:	ldr	x0, [sp, #24]
     254:	ldrh	w0, [x0, #80]
     258:	bl	0 <ext2fs_swab16>
     25c:	and	w1, w0, #0xffff
     260:	ldr	x0, [sp, #24]
     264:	strh	w1, [x0, #80]
     268:	ldr	x0, [sp, #24]
     26c:	ldrh	w0, [x0, #82]
     270:	bl	0 <ext2fs_swab16>
     274:	and	w1, w0, #0xffff
     278:	ldr	x0, [sp, #24]
     27c:	strh	w1, [x0, #82]
     280:	ldr	x0, [sp, #24]
     284:	ldr	w0, [x0, #84]
     288:	bl	0 <ext2fs_swab32>
     28c:	mov	w1, w0
     290:	ldr	x0, [sp, #24]
     294:	str	w1, [x0, #84]
     298:	ldr	x0, [sp, #24]
     29c:	ldrh	w0, [x0, #88]
     2a0:	bl	0 <ext2fs_swab16>
     2a4:	and	w1, w0, #0xffff
     2a8:	ldr	x0, [sp, #24]
     2ac:	strh	w1, [x0, #88]
     2b0:	ldr	x0, [sp, #24]
     2b4:	ldrh	w0, [x0, #90]
     2b8:	bl	0 <ext2fs_swab16>
     2bc:	and	w1, w0, #0xffff
     2c0:	ldr	x0, [sp, #24]
     2c4:	strh	w1, [x0, #90]
     2c8:	ldr	x0, [sp, #24]
     2cc:	ldr	w0, [x0, #92]
     2d0:	bl	0 <ext2fs_swab32>
     2d4:	mov	w1, w0
     2d8:	ldr	x0, [sp, #24]
     2dc:	str	w1, [x0, #92]
     2e0:	ldr	x0, [sp, #24]
     2e4:	ldr	w0, [x0, #96]
     2e8:	bl	0 <ext2fs_swab32>
     2ec:	mov	w1, w0
     2f0:	ldr	x0, [sp, #24]
     2f4:	str	w1, [x0, #96]
     2f8:	ldr	x0, [sp, #24]
     2fc:	ldr	w0, [x0, #100]
     300:	bl	0 <ext2fs_swab32>
     304:	mov	w1, w0
     308:	ldr	x0, [sp, #24]
     30c:	str	w1, [x0, #100]
     310:	ldr	x0, [sp, #24]
     314:	ldr	w0, [x0, #200]
     318:	bl	0 <ext2fs_swab32>
     31c:	mov	w1, w0
     320:	ldr	x0, [sp, #24]
     324:	str	w1, [x0, #200]
     328:	ldr	x0, [sp, #24]
     32c:	ldrh	w0, [x0, #206]
     330:	bl	0 <ext2fs_swab16>
     334:	and	w1, w0, #0xffff
     338:	ldr	x0, [sp, #24]
     33c:	strh	w1, [x0, #206]
     340:	ldr	x0, [sp, #24]
     344:	ldr	w0, [x0, #224]
     348:	bl	0 <ext2fs_swab32>
     34c:	mov	w1, w0
     350:	ldr	x0, [sp, #24]
     354:	str	w1, [x0, #224]
     358:	ldr	x0, [sp, #24]
     35c:	ldr	w0, [x0, #228]
     360:	bl	0 <ext2fs_swab32>
     364:	mov	w1, w0
     368:	ldr	x0, [sp, #24]
     36c:	str	w1, [x0, #228]
     370:	ldr	x0, [sp, #24]
     374:	ldr	w0, [x0, #232]
     378:	bl	0 <ext2fs_swab32>
     37c:	mov	w1, w0
     380:	ldr	x0, [sp, #24]
     384:	str	w1, [x0, #232]
     388:	str	wzr, [sp, #44]
     38c:	b	3d4 <ext2fs_swap_super+0x3c0>
     390:	ldr	x1, [sp, #24]
     394:	ldrsw	x0, [sp, #44]
     398:	add	x0, x0, #0x38
     39c:	lsl	x0, x0, #2
     3a0:	add	x0, x1, x0
     3a4:	ldr	w0, [x0, #12]
     3a8:	bl	0 <ext2fs_swab32>
     3ac:	mov	w2, w0
     3b0:	ldr	x1, [sp, #24]
     3b4:	ldrsw	x0, [sp, #44]
     3b8:	add	x0, x0, #0x38
     3bc:	lsl	x0, x0, #2
     3c0:	add	x0, x1, x0
     3c4:	str	w2, [x0, #12]
     3c8:	ldr	w0, [sp, #44]
     3cc:	add	w0, w0, #0x1
     3d0:	str	w0, [sp, #44]
     3d4:	ldr	w0, [sp, #44]
     3d8:	cmp	w0, #0x3
     3dc:	b.le	390 <ext2fs_swap_super+0x37c>
     3e0:	ldr	x0, [sp, #24]
     3e4:	ldrh	w0, [x0, #254]
     3e8:	bl	0 <ext2fs_swab16>
     3ec:	and	w1, w0, #0xffff
     3f0:	ldr	x0, [sp, #24]
     3f4:	strh	w1, [x0, #254]
     3f8:	ldr	x0, [sp, #24]
     3fc:	ldr	w0, [x0, #256]
     400:	bl	0 <ext2fs_swab32>
     404:	mov	w1, w0
     408:	ldr	x0, [sp, #24]
     40c:	str	w1, [x0, #256]
     410:	ldr	x0, [sp, #24]
     414:	ldr	w0, [x0, #260]
     418:	bl	0 <ext2fs_swab32>
     41c:	mov	w1, w0
     420:	ldr	x0, [sp, #24]
     424:	str	w1, [x0, #260]
     428:	ldr	x0, [sp, #24]
     42c:	ldr	w0, [x0, #264]
     430:	bl	0 <ext2fs_swab32>
     434:	mov	w1, w0
     438:	ldr	x0, [sp, #24]
     43c:	str	w1, [x0, #264]
     440:	ldr	x0, [sp, #24]
     444:	add	x0, x0, #0x10c
     448:	mov	w1, #0x44                  	// #68
     44c:	bl	0 <ext2fs_extent_header_verify>
     450:	cmp	x0, #0x0
     454:	b.ne	464 <ext2fs_swap_super+0x450>  // b.any
     458:	mov	w0, #0xf                   	// #15
     45c:	str	w0, [sp, #44]
     460:	b	4b0 <ext2fs_swap_super+0x49c>
     464:	str	wzr, [sp, #44]
     468:	b	4b0 <ext2fs_swap_super+0x49c>
     46c:	ldr	x1, [sp, #24]
     470:	ldrsw	x0, [sp, #44]
     474:	add	x0, x0, #0x40
     478:	lsl	x0, x0, #2
     47c:	add	x0, x1, x0
     480:	ldr	w0, [x0, #12]
     484:	bl	0 <ext2fs_swab32>
     488:	mov	w2, w0
     48c:	ldr	x1, [sp, #24]
     490:	ldrsw	x0, [sp, #44]
     494:	add	x0, x0, #0x40
     498:	lsl	x0, x0, #2
     49c:	add	x0, x1, x0
     4a0:	str	w2, [x0, #12]
     4a4:	ldr	w0, [sp, #44]
     4a8:	add	w0, w0, #0x1
     4ac:	str	w0, [sp, #44]
     4b0:	ldr	w0, [sp, #44]
     4b4:	cmp	w0, #0x10
     4b8:	b.le	46c <ext2fs_swap_super+0x458>
     4bc:	ldr	x0, [sp, #24]
     4c0:	ldr	w0, [x0, #336]
     4c4:	bl	0 <ext2fs_swab32>
     4c8:	mov	w1, w0
     4cc:	ldr	x0, [sp, #24]
     4d0:	str	w1, [x0, #336]
     4d4:	ldr	x0, [sp, #24]
     4d8:	ldr	w0, [x0, #340]
     4dc:	bl	0 <ext2fs_swab32>
     4e0:	mov	w1, w0
     4e4:	ldr	x0, [sp, #24]
     4e8:	str	w1, [x0, #340]
     4ec:	ldr	x0, [sp, #24]
     4f0:	ldr	w0, [x0, #344]
     4f4:	bl	0 <ext2fs_swab32>
     4f8:	mov	w1, w0
     4fc:	ldr	x0, [sp, #24]
     500:	str	w1, [x0, #344]
     504:	ldr	x0, [sp, #24]
     508:	ldrh	w0, [x0, #348]
     50c:	bl	0 <ext2fs_swab16>
     510:	and	w1, w0, #0xffff
     514:	ldr	x0, [sp, #24]
     518:	strh	w1, [x0, #348]
     51c:	ldr	x0, [sp, #24]
     520:	ldrh	w0, [x0, #350]
     524:	bl	0 <ext2fs_swab16>
     528:	and	w1, w0, #0xffff
     52c:	ldr	x0, [sp, #24]
     530:	strh	w1, [x0, #350]
     534:	ldr	x0, [sp, #24]
     538:	ldr	w0, [x0, #352]
     53c:	bl	0 <ext2fs_swab32>
     540:	mov	w1, w0
     544:	ldr	x0, [sp, #24]
     548:	str	w1, [x0, #352]
     54c:	ldr	x0, [sp, #24]
     550:	ldrh	w0, [x0, #356]
     554:	bl	0 <ext2fs_swab16>
     558:	and	w1, w0, #0xffff
     55c:	ldr	x0, [sp, #24]
     560:	strh	w1, [x0, #356]
     564:	ldr	x0, [sp, #24]
     568:	ldrh	w0, [x0, #358]
     56c:	bl	0 <ext2fs_swab16>
     570:	and	w1, w0, #0xffff
     574:	ldr	x0, [sp, #24]
     578:	strh	w1, [x0, #358]
     57c:	ldr	x0, [sp, #24]
     580:	ldr	x0, [x0, #360]
     584:	bl	0 <ext2fs_swab64>
     588:	mov	x1, x0
     58c:	ldr	x0, [sp, #24]
     590:	str	x1, [x0, #360]
     594:	ldr	x0, [sp, #24]
     598:	ldr	w0, [x0, #368]
     59c:	bl	0 <ext2fs_swab32>
     5a0:	mov	w1, w0
     5a4:	ldr	x0, [sp, #24]
     5a8:	str	w1, [x0, #368]
     5ac:	ldr	x0, [sp, #24]
     5b0:	ldr	x0, [x0, #376]
     5b4:	bl	0 <ext2fs_swab64>
     5b8:	mov	x1, x0
     5bc:	ldr	x0, [sp, #24]
     5c0:	str	x1, [x0, #376]
     5c4:	ldr	x0, [sp, #24]
     5c8:	ldr	w0, [x0, #384]
     5cc:	bl	0 <ext2fs_swab32>
     5d0:	mov	w1, w0
     5d4:	ldr	x0, [sp, #24]
     5d8:	str	w1, [x0, #384]
     5dc:	ldr	x0, [sp, #24]
     5e0:	ldr	w0, [x0, #388]
     5e4:	bl	0 <ext2fs_swab32>
     5e8:	mov	w1, w0
     5ec:	ldr	x0, [sp, #24]
     5f0:	str	w1, [x0, #388]
     5f4:	ldr	x0, [sp, #24]
     5f8:	ldr	x0, [x0, #392]
     5fc:	bl	0 <ext2fs_swab64>
     600:	mov	x1, x0
     604:	ldr	x0, [sp, #24]
     608:	str	x1, [x0, #392]
     60c:	ldr	x0, [sp, #24]
     610:	ldr	w0, [x0, #400]
     614:	bl	0 <ext2fs_swab32>
     618:	mov	w1, w0
     61c:	ldr	x0, [sp, #24]
     620:	str	w1, [x0, #400]
     624:	ldr	x0, [sp, #24]
     628:	ldr	w0, [x0, #404]
     62c:	bl	0 <ext2fs_swab32>
     630:	mov	w1, w0
     634:	ldr	x0, [sp, #24]
     638:	str	w1, [x0, #404]
     63c:	ldr	x0, [sp, #24]
     640:	ldr	w0, [x0, #408]
     644:	bl	0 <ext2fs_swab32>
     648:	mov	w1, w0
     64c:	ldr	x0, [sp, #24]
     650:	str	w1, [x0, #408]
     654:	ldr	x0, [sp, #24]
     658:	ldr	w0, [x0, #412]
     65c:	bl	0 <ext2fs_swab32>
     660:	mov	w1, w0
     664:	ldr	x0, [sp, #24]
     668:	str	w1, [x0, #412]
     66c:	ldr	x0, [sp, #24]
     670:	ldr	x0, [x0, #416]
     674:	bl	0 <ext2fs_swab64>
     678:	mov	x1, x0
     67c:	ldr	x0, [sp, #24]
     680:	str	x1, [x0, #416]
     684:	ldr	x0, [sp, #24]
     688:	ldr	w0, [x0, #460]
     68c:	bl	0 <ext2fs_swab32>
     690:	mov	w1, w0
     694:	ldr	x0, [sp, #24]
     698:	str	w1, [x0, #460]
     69c:	ldr	x0, [sp, #24]
     6a0:	ldr	w0, [x0, #464]
     6a4:	bl	0 <ext2fs_swab32>
     6a8:	mov	w1, w0
     6ac:	ldr	x0, [sp, #24]
     6b0:	str	w1, [x0, #464]
     6b4:	ldr	x0, [sp, #24]
     6b8:	ldr	x0, [x0, #472]
     6bc:	bl	0 <ext2fs_swab64>
     6c0:	mov	x1, x0
     6c4:	ldr	x0, [sp, #24]
     6c8:	str	x1, [x0, #472]
     6cc:	ldr	x0, [sp, #24]
     6d0:	ldr	w0, [x0, #576]
     6d4:	bl	0 <ext2fs_swab32>
     6d8:	mov	w1, w0
     6dc:	ldr	x0, [sp, #24]
     6e0:	str	w1, [x0, #576]
     6e4:	ldr	x0, [sp, #24]
     6e8:	ldr	w0, [x0, #580]
     6ec:	bl	0 <ext2fs_swab32>
     6f0:	mov	w1, w0
     6f4:	ldr	x0, [sp, #24]
     6f8:	str	w1, [x0, #580]
     6fc:	ldr	x0, [sp, #24]
     700:	ldr	w0, [x0, #584]
     704:	bl	0 <ext2fs_swab32>
     708:	mov	w1, w0
     70c:	ldr	x0, [sp, #24]
     710:	str	w1, [x0, #584]
     714:	ldr	x0, [sp, #24]
     718:	ldr	w0, [x0, #588]
     71c:	bl	0 <ext2fs_swab32>
     720:	mov	w1, w0
     724:	ldr	x0, [sp, #24]
     728:	str	w1, [x0, #588]
     72c:	ldr	x0, [sp, #24]
     730:	ldr	w0, [x0, #592]
     734:	bl	0 <ext2fs_swab32>
     738:	mov	w1, w0
     73c:	ldr	x0, [sp, #24]
     740:	str	w1, [x0, #592]
     744:	ldr	x0, [sp, #24]
     748:	ldr	w0, [x0, #616]
     74c:	bl	0 <ext2fs_swab32>
     750:	mov	w1, w0
     754:	ldr	x0, [sp, #24]
     758:	str	w1, [x0, #616]
     75c:	ldr	x0, [sp, #24]
     760:	ldr	w0, [x0, #620]
     764:	bl	0 <ext2fs_swab32>
     768:	mov	w1, w0
     76c:	ldr	x0, [sp, #24]
     770:	str	w1, [x0, #620]
     774:	ldr	x0, [sp, #24]
     778:	ldr	w0, [x0, #624]
     77c:	bl	0 <ext2fs_swab32>
     780:	mov	w1, w0
     784:	ldr	x0, [sp, #24]
     788:	str	w1, [x0, #624]
     78c:	ldr	x0, [sp, #24]
     790:	ldrh	w0, [x0, #636]
     794:	bl	0 <ext2fs_swab16>
     798:	and	w1, w0, #0xffff
     79c:	ldr	x0, [sp, #24]
     7a0:	strh	w1, [x0, #636]
     7a4:	ldr	x0, [sp, #24]
     7a8:	ldrh	w0, [x0, #638]
     7ac:	bl	0 <ext2fs_swab16>
     7b0:	and	w1, w0, #0xffff
     7b4:	ldr	x0, [sp, #24]
     7b8:	strh	w1, [x0, #638]
     7bc:	ldr	x0, [sp, #24]
     7c0:	ldr	w0, [x0, #1020]
     7c4:	bl	0 <ext2fs_swab32>
     7c8:	mov	w1, w0
     7cc:	ldr	x0, [sp, #24]
     7d0:	str	w1, [x0, #1020]
     7d4:	nop
     7d8:	ldp	x29, x30, [sp], #48
     7dc:	ret

00000000000007e0 <ext2fs_swap_group_desc2>:
     7e0:	stp	x29, x30, [sp, #-48]!
     7e4:	mov	x29, sp
     7e8:	str	x0, [sp, #24]
     7ec:	str	x1, [sp, #16]
     7f0:	ldr	x0, [sp, #16]
     7f4:	str	x0, [sp, #40]
     7f8:	ldr	x0, [sp, #16]
     7fc:	ldr	w0, [x0]
     800:	bl	0 <ext2fs_swab32>
     804:	mov	w1, w0
     808:	ldr	x0, [sp, #16]
     80c:	str	w1, [x0]
     810:	ldr	x0, [sp, #16]
     814:	ldr	w0, [x0, #4]
     818:	bl	0 <ext2fs_swab32>
     81c:	mov	w1, w0
     820:	ldr	x0, [sp, #16]
     824:	str	w1, [x0, #4]
     828:	ldr	x0, [sp, #16]
     82c:	ldr	w0, [x0, #8]
     830:	bl	0 <ext2fs_swab32>
     834:	mov	w1, w0
     838:	ldr	x0, [sp, #16]
     83c:	str	w1, [x0, #8]
     840:	ldr	x0, [sp, #16]
     844:	ldrh	w0, [x0, #12]
     848:	bl	0 <ext2fs_swab16>
     84c:	and	w1, w0, #0xffff
     850:	ldr	x0, [sp, #16]
     854:	strh	w1, [x0, #12]
     858:	ldr	x0, [sp, #16]
     85c:	ldrh	w0, [x0, #14]
     860:	bl	0 <ext2fs_swab16>
     864:	and	w1, w0, #0xffff
     868:	ldr	x0, [sp, #16]
     86c:	strh	w1, [x0, #14]
     870:	ldr	x0, [sp, #16]
     874:	ldrh	w0, [x0, #16]
     878:	bl	0 <ext2fs_swab16>
     87c:	and	w1, w0, #0xffff
     880:	ldr	x0, [sp, #16]
     884:	strh	w1, [x0, #16]
     888:	ldr	x0, [sp, #16]
     88c:	ldrh	w0, [x0, #18]
     890:	bl	0 <ext2fs_swab16>
     894:	and	w1, w0, #0xffff
     898:	ldr	x0, [sp, #16]
     89c:	strh	w1, [x0, #18]
     8a0:	ldr	x0, [sp, #16]
     8a4:	ldr	w0, [x0, #20]
     8a8:	bl	0 <ext2fs_swab32>
     8ac:	mov	w1, w0
     8b0:	ldr	x0, [sp, #16]
     8b4:	str	w1, [x0, #20]
     8b8:	ldr	x0, [sp, #16]
     8bc:	ldrh	w0, [x0, #24]
     8c0:	bl	0 <ext2fs_swab16>
     8c4:	and	w1, w0, #0xffff
     8c8:	ldr	x0, [sp, #16]
     8cc:	strh	w1, [x0, #24]
     8d0:	ldr	x0, [sp, #16]
     8d4:	ldrh	w0, [x0, #26]
     8d8:	bl	0 <ext2fs_swab16>
     8dc:	and	w1, w0, #0xffff
     8e0:	ldr	x0, [sp, #16]
     8e4:	strh	w1, [x0, #26]
     8e8:	ldr	x0, [sp, #16]
     8ec:	ldrh	w0, [x0, #28]
     8f0:	bl	0 <ext2fs_swab16>
     8f4:	and	w1, w0, #0xffff
     8f8:	ldr	x0, [sp, #16]
     8fc:	strh	w1, [x0, #28]
     900:	ldr	x0, [sp, #16]
     904:	ldrh	w0, [x0, #30]
     908:	bl	0 <ext2fs_swab16>
     90c:	and	w1, w0, #0xffff
     910:	ldr	x0, [sp, #16]
     914:	strh	w1, [x0, #30]
     918:	ldr	x0, [sp, #24]
     91c:	cmp	x0, #0x0
     920:	b.eq	a4c <ext2fs_swap_group_desc2+0x26c>  // b.none
     924:	ldr	x0, [sp, #24]
     928:	ldr	x0, [x0, #32]
     92c:	ldr	w0, [x0, #96]
     930:	and	w0, w0, #0x80
     934:	cmp	w0, #0x0
     938:	b.eq	a4c <ext2fs_swap_group_desc2+0x26c>  // b.none
     93c:	ldr	x0, [sp, #24]
     940:	ldr	x0, [x0, #32]
     944:	ldrh	w0, [x0, #254]
     948:	cmp	w0, #0x3f
     94c:	b.ls	a4c <ext2fs_swap_group_desc2+0x26c>  // b.plast
     950:	ldr	x0, [sp, #40]
     954:	ldr	w0, [x0, #32]
     958:	bl	0 <ext2fs_swab32>
     95c:	mov	w1, w0
     960:	ldr	x0, [sp, #40]
     964:	str	w1, [x0, #32]
     968:	ldr	x0, [sp, #40]
     96c:	ldr	w0, [x0, #36]
     970:	bl	0 <ext2fs_swab32>
     974:	mov	w1, w0
     978:	ldr	x0, [sp, #40]
     97c:	str	w1, [x0, #36]
     980:	ldr	x0, [sp, #40]
     984:	ldr	w0, [x0, #40]
     988:	bl	0 <ext2fs_swab32>
     98c:	mov	w1, w0
     990:	ldr	x0, [sp, #40]
     994:	str	w1, [x0, #40]
     998:	ldr	x0, [sp, #40]
     99c:	ldrh	w0, [x0, #44]
     9a0:	bl	0 <ext2fs_swab16>
     9a4:	and	w1, w0, #0xffff
     9a8:	ldr	x0, [sp, #40]
     9ac:	strh	w1, [x0, #44]
     9b0:	ldr	x0, [sp, #40]
     9b4:	ldrh	w0, [x0, #46]
     9b8:	bl	0 <ext2fs_swab16>
     9bc:	and	w1, w0, #0xffff
     9c0:	ldr	x0, [sp, #40]
     9c4:	strh	w1, [x0, #46]
     9c8:	ldr	x0, [sp, #40]
     9cc:	ldrh	w0, [x0, #48]
     9d0:	bl	0 <ext2fs_swab16>
     9d4:	and	w1, w0, #0xffff
     9d8:	ldr	x0, [sp, #40]
     9dc:	strh	w1, [x0, #48]
     9e0:	ldr	x0, [sp, #40]
     9e4:	ldrh	w0, [x0, #50]
     9e8:	bl	0 <ext2fs_swab16>
     9ec:	and	w1, w0, #0xffff
     9f0:	ldr	x0, [sp, #40]
     9f4:	strh	w1, [x0, #50]
     9f8:	ldr	x0, [sp, #40]
     9fc:	ldr	w0, [x0, #52]
     a00:	and	w0, w0, #0xffff
     a04:	bl	0 <ext2fs_swab16>
     a08:	and	w0, w0, #0xffff
     a0c:	mov	w1, w0
     a10:	ldr	x0, [sp, #40]
     a14:	str	w1, [x0, #52]
     a18:	ldr	x0, [sp, #40]
     a1c:	ldrh	w0, [x0, #56]
     a20:	bl	0 <ext2fs_swab16>
     a24:	and	w1, w0, #0xffff
     a28:	ldr	x0, [sp, #40]
     a2c:	strh	w1, [x0, #56]
     a30:	ldr	x0, [sp, #40]
     a34:	ldrh	w0, [x0, #58]
     a38:	bl	0 <ext2fs_swab16>
     a3c:	and	w1, w0, #0xffff
     a40:	ldr	x0, [sp, #40]
     a44:	strh	w1, [x0, #58]
     a48:	b	a50 <ext2fs_swap_group_desc2+0x270>
     a4c:	nop
     a50:	ldp	x29, x30, [sp], #48
     a54:	ret

0000000000000a58 <ext2fs_swap_group_desc>:
     a58:	stp	x29, x30, [sp, #-32]!
     a5c:	mov	x29, sp
     a60:	str	x0, [sp, #24]
     a64:	ldr	x1, [sp, #24]
     a68:	mov	x0, #0x0                   	// #0
     a6c:	bl	7e0 <ext2fs_swap_group_desc2>
     a70:	nop
     a74:	ldp	x29, x30, [sp], #32
     a78:	ret

0000000000000a7c <ext2fs_swap_ext_attr_header>:
     a7c:	stp	x29, x30, [sp, #-48]!
     a80:	mov	x29, sp
     a84:	str	x0, [sp, #24]
     a88:	str	x1, [sp, #16]
     a8c:	ldr	x0, [sp, #16]
     a90:	ldr	w0, [x0]
     a94:	bl	0 <ext2fs_swab32>
     a98:	mov	w1, w0
     a9c:	ldr	x0, [sp, #24]
     aa0:	str	w1, [x0]
     aa4:	ldr	x0, [sp, #16]
     aa8:	ldr	w0, [x0, #8]
     aac:	bl	0 <ext2fs_swab32>
     ab0:	mov	w1, w0
     ab4:	ldr	x0, [sp, #24]
     ab8:	str	w1, [x0, #8]
     abc:	ldr	x0, [sp, #16]
     ac0:	ldr	w0, [x0, #4]
     ac4:	bl	0 <ext2fs_swab32>
     ac8:	mov	w1, w0
     acc:	ldr	x0, [sp, #24]
     ad0:	str	w1, [x0, #4]
     ad4:	ldr	x0, [sp, #16]
     ad8:	ldr	w0, [x0, #12]
     adc:	bl	0 <ext2fs_swab32>
     ae0:	mov	w1, w0
     ae4:	ldr	x0, [sp, #24]
     ae8:	str	w1, [x0, #12]
     aec:	ldr	x0, [sp, #16]
     af0:	ldr	w0, [x0, #16]
     af4:	bl	0 <ext2fs_swab32>
     af8:	mov	w1, w0
     afc:	ldr	x0, [sp, #24]
     b00:	str	w1, [x0, #16]
     b04:	str	wzr, [sp, #44]
     b08:	b	b50 <ext2fs_swap_ext_attr_header+0xd4>
     b0c:	ldr	x1, [sp, #16]
     b10:	ldrsw	x0, [sp, #44]
     b14:	add	x0, x0, #0x4
     b18:	lsl	x0, x0, #2
     b1c:	add	x0, x1, x0
     b20:	ldr	w0, [x0, #4]
     b24:	bl	0 <ext2fs_swab32>
     b28:	mov	w2, w0
     b2c:	ldr	x1, [sp, #24]
     b30:	ldrsw	x0, [sp, #44]
     b34:	add	x0, x0, #0x4
     b38:	lsl	x0, x0, #2
     b3c:	add	x0, x1, x0
     b40:	str	w2, [x0, #4]
     b44:	ldr	w0, [sp, #44]
     b48:	add	w0, w0, #0x1
     b4c:	str	w0, [sp, #44]
     b50:	ldr	w0, [sp, #44]
     b54:	cmp	w0, #0x2
     b58:	b.le	b0c <ext2fs_swap_ext_attr_header+0x90>
     b5c:	nop
     b60:	nop
     b64:	ldp	x29, x30, [sp], #48
     b68:	ret

0000000000000b6c <ext2fs_swap_ext_attr_entry>:
     b6c:	stp	x29, x30, [sp, #-32]!
     b70:	mov	x29, sp
     b74:	str	x0, [sp, #24]
     b78:	str	x1, [sp, #16]
     b7c:	ldr	x0, [sp, #16]
     b80:	ldrh	w0, [x0, #2]
     b84:	bl	0 <ext2fs_swab16>
     b88:	and	w1, w0, #0xffff
     b8c:	ldr	x0, [sp, #24]
     b90:	strh	w1, [x0, #2]
     b94:	ldr	x0, [sp, #16]
     b98:	ldr	w0, [x0, #4]
     b9c:	bl	0 <ext2fs_swab32>
     ba0:	mov	w1, w0
     ba4:	ldr	x0, [sp, #24]
     ba8:	str	w1, [x0, #4]
     bac:	ldr	x0, [sp, #16]
     bb0:	ldr	w0, [x0, #8]
     bb4:	bl	0 <ext2fs_swab32>
     bb8:	mov	w1, w0
     bbc:	ldr	x0, [sp, #24]
     bc0:	str	w1, [x0, #8]
     bc4:	ldr	x0, [sp, #16]
     bc8:	ldr	w0, [x0, #12]
     bcc:	bl	0 <ext2fs_swab32>
     bd0:	mov	w1, w0
     bd4:	ldr	x0, [sp, #24]
     bd8:	str	w1, [x0, #12]
     bdc:	nop
     be0:	ldp	x29, x30, [sp], #32
     be4:	ret

0000000000000be8 <ext2fs_swap_ext_attr>:
     be8:	stp	x29, x30, [sp, #-96]!
     bec:	mov	x29, sp
     bf0:	str	x0, [sp, #40]
     bf4:	str	x1, [sp, #32]
     bf8:	str	w2, [sp, #28]
     bfc:	str	w3, [sp, #24]
     c00:	ldr	x0, [sp, #32]
     c04:	str	x0, [sp, #72]
     c08:	ldr	x0, [sp, #40]
     c0c:	str	x0, [sp, #64]
     c10:	ldrsw	x0, [sp, #28]
     c14:	ldr	x1, [sp, #72]
     c18:	add	x0, x1, x0
     c1c:	str	x0, [sp, #56]
     c20:	ldr	x1, [sp, #64]
     c24:	ldr	x0, [sp, #72]
     c28:	cmp	x1, x0
     c2c:	b.eq	c44 <ext2fs_swap_ext_attr+0x5c>  // b.none
     c30:	ldrsw	x0, [sp, #28]
     c34:	mov	x2, x0
     c38:	ldr	x1, [sp, #72]
     c3c:	ldr	x0, [sp, #64]
     c40:	bl	0 <memcpy>
     c44:	ldr	w0, [sp, #24]
     c48:	cmp	w0, #0x0
     c4c:	b.eq	c78 <ext2fs_swap_ext_attr+0x90>  // b.none
     c50:	ldr	x1, [sp, #72]
     c54:	ldr	x0, [sp, #64]
     c58:	bl	a7c <ext2fs_swap_ext_attr_header>
     c5c:	ldr	x0, [sp, #72]
     c60:	add	x0, x0, #0x20
     c64:	str	x0, [sp, #88]
     c68:	ldr	x0, [sp, #64]
     c6c:	add	x0, x0, #0x20
     c70:	str	x0, [sp, #80]
     c74:	b	ce0 <ext2fs_swap_ext_attr+0xf8>
     c78:	ldr	x0, [sp, #72]
     c7c:	str	x0, [sp, #88]
     c80:	ldr	x0, [sp, #64]
     c84:	str	x0, [sp, #80]
     c88:	b	ce0 <ext2fs_swap_ext_attr+0xf8>
     c8c:	ldr	x1, [sp, #88]
     c90:	ldr	x0, [sp, #80]
     c94:	bl	b6c <ext2fs_swap_ext_attr_entry>
     c98:	ldr	x0, [sp, #88]
     c9c:	ldrb	w0, [x0]
     ca0:	add	w0, w0, #0x3
     ca4:	mov	w0, w0
     ca8:	add	x0, x0, #0x10
     cac:	and	x0, x0, #0xfffffffc
     cb0:	ldr	x1, [sp, #88]
     cb4:	add	x0, x1, x0
     cb8:	str	x0, [sp, #88]
     cbc:	ldr	x0, [sp, #80]
     cc0:	ldrb	w0, [x0]
     cc4:	add	w0, w0, #0x3
     cc8:	mov	w0, w0
     ccc:	add	x0, x0, #0x10
     cd0:	and	x0, x0, #0xfffffffc
     cd4:	ldr	x1, [sp, #80]
     cd8:	add	x0, x1, x0
     cdc:	str	x0, [sp, #80]
     ce0:	ldr	x1, [sp, #88]
     ce4:	ldr	x0, [sp, #56]
     ce8:	cmp	x1, x0
     cec:	b.cs	d2c <ext2fs_swap_ext_attr+0x144>  // b.hs, b.nlast
     cf0:	ldr	x0, [sp, #88]
     cf4:	ldrb	w0, [x0]
     cf8:	add	w0, w0, #0x3
     cfc:	mov	w0, w0
     d00:	add	x0, x0, #0x10
     d04:	and	x0, x0, #0xfffffffc
     d08:	ldr	x1, [sp, #88]
     d0c:	add	x0, x1, x0
     d10:	ldr	x1, [sp, #56]
     d14:	cmp	x1, x0
     d18:	b.cc	d2c <ext2fs_swap_ext_attr+0x144>  // b.lo, b.ul, b.last
     d1c:	ldr	x0, [sp, #88]
     d20:	ldr	w0, [x0]
     d24:	cmp	w0, #0x0
     d28:	b.ne	c8c <ext2fs_swap_ext_attr+0xa4>  // b.any
     d2c:	nop
     d30:	ldp	x29, x30, [sp], #96
     d34:	ret

0000000000000d38 <ext2fs_swap_inode_full>:
     d38:	stp	x29, x30, [sp, #-96]!
     d3c:	mov	x29, sp
     d40:	str	x0, [sp, #40]
     d44:	str	x1, [sp, #32]
     d48:	str	x2, [sp, #24]
     d4c:	str	w3, [sp, #20]
     d50:	str	w4, [sp, #16]
     d54:	ldr	w0, [sp, #20]
     d58:	cmp	w0, #0x0
     d5c:	b.eq	dc4 <ext2fs_swap_inode_full+0x8c>  // b.none
     d60:	ldr	x0, [sp, #24]
     d64:	ldrh	w0, [x0]
     d68:	and	w0, w0, #0xf000
     d6c:	cmp	w0, #0xa, lsl #12
     d70:	cset	w0, eq  // eq = none
     d74:	and	w0, w0, #0xff
     d78:	str	w0, [sp, #72]
     d7c:	ldr	x0, [sp, #24]
     d80:	bl	0 <EXT2_INODE>
     d84:	bl	0 <ext2fs_is_fast_symlink>
     d88:	str	w0, [sp, #68]
     d8c:	ldr	x0, [sp, #24]
     d90:	ldr	w0, [x0, #32]
     d94:	and	w0, w0, #0x80000
     d98:	cmp	w0, #0x0
     d9c:	cset	w0, ne  // ne = any
     da0:	and	w0, w0, #0xff
     da4:	str	w0, [sp, #80]
     da8:	ldr	x0, [sp, #24]
     dac:	ldr	w0, [x0, #32]
     db0:	and	w0, w0, #0x10000000
     db4:	cmp	w0, #0x0
     db8:	cset	w0, ne  // ne = any
     dbc:	and	w0, w0, #0xff
     dc0:	str	w0, [sp, #76]
     dc4:	ldr	x0, [sp, #24]
     dc8:	ldrh	w0, [x0]
     dcc:	bl	0 <ext2fs_swab16>
     dd0:	and	w1, w0, #0xffff
     dd4:	ldr	x0, [sp, #32]
     dd8:	strh	w1, [x0]
     ddc:	ldr	x0, [sp, #24]
     de0:	ldrh	w0, [x0, #2]
     de4:	bl	0 <ext2fs_swab16>
     de8:	and	w1, w0, #0xffff
     dec:	ldr	x0, [sp, #32]
     df0:	strh	w1, [x0, #2]
     df4:	ldr	x0, [sp, #24]
     df8:	ldr	w0, [x0, #4]
     dfc:	bl	0 <ext2fs_swab32>
     e00:	mov	w1, w0
     e04:	ldr	x0, [sp, #32]
     e08:	str	w1, [x0, #4]
     e0c:	ldr	x0, [sp, #24]
     e10:	ldr	w0, [x0, #8]
     e14:	bl	0 <ext2fs_swab32>
     e18:	mov	w1, w0
     e1c:	ldr	x0, [sp, #32]
     e20:	str	w1, [x0, #8]
     e24:	ldr	x0, [sp, #24]
     e28:	ldr	w0, [x0, #12]
     e2c:	bl	0 <ext2fs_swab32>
     e30:	mov	w1, w0
     e34:	ldr	x0, [sp, #32]
     e38:	str	w1, [x0, #12]
     e3c:	ldr	x0, [sp, #24]
     e40:	ldr	w0, [x0, #16]
     e44:	bl	0 <ext2fs_swab32>
     e48:	mov	w1, w0
     e4c:	ldr	x0, [sp, #32]
     e50:	str	w1, [x0, #16]
     e54:	ldr	x0, [sp, #24]
     e58:	ldr	w0, [x0, #20]
     e5c:	bl	0 <ext2fs_swab32>
     e60:	mov	w1, w0
     e64:	ldr	x0, [sp, #32]
     e68:	str	w1, [x0, #20]
     e6c:	ldr	x0, [sp, #24]
     e70:	ldrh	w0, [x0, #24]
     e74:	bl	0 <ext2fs_swab16>
     e78:	and	w1, w0, #0xffff
     e7c:	ldr	x0, [sp, #32]
     e80:	strh	w1, [x0, #24]
     e84:	ldr	x0, [sp, #24]
     e88:	ldrh	w0, [x0, #26]
     e8c:	bl	0 <ext2fs_swab16>
     e90:	and	w1, w0, #0xffff
     e94:	ldr	x0, [sp, #32]
     e98:	strh	w1, [x0, #26]
     e9c:	ldr	x0, [sp, #24]
     ea0:	ldr	w0, [x0, #104]
     ea4:	bl	0 <ext2fs_swab32>
     ea8:	mov	w1, w0
     eac:	ldr	x0, [sp, #32]
     eb0:	str	w1, [x0, #104]
     eb4:	ldr	x0, [sp, #24]
     eb8:	ldr	w0, [x0, #28]
     ebc:	bl	0 <ext2fs_swab32>
     ec0:	mov	w1, w0
     ec4:	ldr	x0, [sp, #32]
     ec8:	str	w1, [x0, #28]
     ecc:	ldr	x0, [sp, #24]
     ed0:	ldr	w0, [x0, #32]
     ed4:	bl	0 <ext2fs_swab32>
     ed8:	mov	w1, w0
     edc:	ldr	x0, [sp, #32]
     ee0:	str	w1, [x0, #32]
     ee4:	ldr	x0, [sp, #24]
     ee8:	ldr	w0, [x0, #108]
     eec:	bl	0 <ext2fs_swab32>
     ef0:	mov	w1, w0
     ef4:	ldr	x0, [sp, #32]
     ef8:	str	w1, [x0, #108]
     efc:	ldr	w0, [sp, #20]
     f00:	cmp	w0, #0x0
     f04:	b.ne	f6c <ext2fs_swap_inode_full+0x234>  // b.any
     f08:	ldr	x0, [sp, #32]
     f0c:	ldrh	w0, [x0]
     f10:	and	w0, w0, #0xf000
     f14:	cmp	w0, #0xa, lsl #12
     f18:	cset	w0, eq  // eq = none
     f1c:	and	w0, w0, #0xff
     f20:	str	w0, [sp, #72]
     f24:	ldr	x0, [sp, #32]
     f28:	bl	0 <EXT2_INODE>
     f2c:	bl	0 <ext2fs_is_fast_symlink>
     f30:	str	w0, [sp, #68]
     f34:	ldr	x0, [sp, #32]
     f38:	ldr	w0, [x0, #32]
     f3c:	and	w0, w0, #0x80000
     f40:	cmp	w0, #0x0
     f44:	cset	w0, ne  // ne = any
     f48:	and	w0, w0, #0xff
     f4c:	str	w0, [sp, #80]
     f50:	ldr	x0, [sp, #32]
     f54:	ldr	w0, [x0, #32]
     f58:	and	w0, w0, #0x10000000
     f5c:	cmp	w0, #0x0
     f60:	cset	w0, ne  // ne = any
     f64:	and	w0, w0, #0xff
     f68:	str	w0, [sp, #76]
     f6c:	ldr	w0, [sp, #80]
     f70:	cmp	w0, #0x0
     f74:	b.ne	ff8 <ext2fs_swap_inode_full+0x2c0>  // b.any
     f78:	ldr	w0, [sp, #76]
     f7c:	cmp	w0, #0x0
     f80:	b.ne	ff8 <ext2fs_swap_inode_full+0x2c0>  // b.any
     f84:	ldr	w0, [sp, #72]
     f88:	cmp	w0, #0x0
     f8c:	b.eq	f9c <ext2fs_swap_inode_full+0x264>  // b.none
     f90:	ldr	w0, [sp, #68]
     f94:	cmp	w0, #0x0
     f98:	b.ne	ff8 <ext2fs_swap_inode_full+0x2c0>  // b.any
     f9c:	str	wzr, [sp, #92]
     fa0:	b	fe8 <ext2fs_swap_inode_full+0x2b0>
     fa4:	ldr	x1, [sp, #24]
     fa8:	ldr	w0, [sp, #92]
     fac:	add	x0, x0, #0x8
     fb0:	lsl	x0, x0, #2
     fb4:	add	x0, x1, x0
     fb8:	ldr	w0, [x0, #8]
     fbc:	bl	0 <ext2fs_swab32>
     fc0:	mov	w2, w0
     fc4:	ldr	x1, [sp, #32]
     fc8:	ldr	w0, [sp, #92]
     fcc:	add	x0, x0, #0x8
     fd0:	lsl	x0, x0, #2
     fd4:	add	x0, x1, x0
     fd8:	str	w2, [x0, #8]
     fdc:	ldr	w0, [sp, #92]
     fe0:	add	w0, w0, #0x1
     fe4:	str	w0, [sp, #92]
     fe8:	ldr	w0, [sp, #92]
     fec:	cmp	w0, #0xe
     ff0:	b.ls	fa4 <ext2fs_swap_inode_full+0x26c>  // b.plast
     ff4:	b	1058 <ext2fs_swap_inode_full+0x320>
     ff8:	ldr	x1, [sp, #32]
     ffc:	ldr	x0, [sp, #24]
    1000:	cmp	x1, x0
    1004:	b.eq	1058 <ext2fs_swap_inode_full+0x320>  // b.none
    1008:	str	wzr, [sp, #92]
    100c:	b	104c <ext2fs_swap_inode_full+0x314>
    1010:	ldr	x1, [sp, #24]
    1014:	ldr	w0, [sp, #92]
    1018:	add	x0, x0, #0x8
    101c:	lsl	x0, x0, #2
    1020:	add	x0, x1, x0
    1024:	ldr	w1, [x0, #8]
    1028:	ldr	x2, [sp, #32]
    102c:	ldr	w0, [sp, #92]
    1030:	add	x0, x0, #0x8
    1034:	lsl	x0, x0, #2
    1038:	add	x0, x2, x0
    103c:	str	w1, [x0, #8]
    1040:	ldr	w0, [sp, #92]
    1044:	add	w0, w0, #0x1
    1048:	str	w0, [sp, #92]
    104c:	ldr	w0, [sp, #92]
    1050:	cmp	w0, #0xe
    1054:	b.ls	1010 <ext2fs_swap_inode_full+0x2d8>  // b.plast
    1058:	ldr	x0, [sp, #24]
    105c:	ldr	w0, [x0, #100]
    1060:	bl	0 <ext2fs_swab32>
    1064:	mov	w1, w0
    1068:	ldr	x0, [sp, #32]
    106c:	str	w1, [x0, #100]
    1070:	ldr	x0, [sp, #24]
    1074:	ldr	w0, [x0, #112]
    1078:	bl	0 <ext2fs_swab32>
    107c:	mov	w1, w0
    1080:	ldr	x0, [sp, #32]
    1084:	str	w1, [x0, #112]
    1088:	ldr	x0, [sp, #40]
    108c:	ldr	x0, [x0, #32]
    1090:	ldr	w0, [x0, #72]
    1094:	cmp	w0, #0x0
    1098:	b.eq	10a8 <ext2fs_swap_inode_full+0x370>  // b.none
    109c:	cmp	w0, #0x1
    10a0:	b.eq	113c <ext2fs_swap_inode_full+0x404>  // b.none
    10a4:	b	11d8 <ext2fs_swap_inode_full+0x4a0>
    10a8:	ldr	x0, [sp, #24]
    10ac:	ldr	w0, [x0, #36]
    10b0:	bl	0 <ext2fs_swab32>
    10b4:	mov	w1, w0
    10b8:	ldr	x0, [sp, #32]
    10bc:	str	w1, [x0, #36]
    10c0:	ldr	x0, [sp, #24]
    10c4:	ldrh	w0, [x0, #116]
    10c8:	bl	0 <ext2fs_swab16>
    10cc:	and	w1, w0, #0xffff
    10d0:	ldr	x0, [sp, #32]
    10d4:	strh	w1, [x0, #116]
    10d8:	ldr	x0, [sp, #24]
    10dc:	ldrh	w0, [x0, #118]
    10e0:	bl	0 <ext2fs_swab16>
    10e4:	and	w1, w0, #0xffff
    10e8:	ldr	x0, [sp, #32]
    10ec:	strh	w1, [x0, #118]
    10f0:	ldr	x0, [sp, #24]
    10f4:	ldrh	w0, [x0, #120]
    10f8:	bl	0 <ext2fs_swab16>
    10fc:	and	w1, w0, #0xffff
    1100:	ldr	x0, [sp, #32]
    1104:	strh	w1, [x0, #120]
    1108:	ldr	x0, [sp, #24]
    110c:	ldrh	w0, [x0, #122]
    1110:	bl	0 <ext2fs_swab16>
    1114:	and	w1, w0, #0xffff
    1118:	ldr	x0, [sp, #32]
    111c:	strh	w1, [x0, #122]
    1120:	ldr	x0, [sp, #24]
    1124:	ldrh	w0, [x0, #124]
    1128:	bl	0 <ext2fs_swab16>
    112c:	and	w1, w0, #0xffff
    1130:	ldr	x0, [sp, #32]
    1134:	strh	w1, [x0, #124]
    1138:	b	11d8 <ext2fs_swap_inode_full+0x4a0>
    113c:	ldr	x0, [sp, #24]
    1140:	ldr	w0, [x0, #36]
    1144:	bl	0 <ext2fs_swab32>
    1148:	mov	w1, w0
    114c:	ldr	x0, [sp, #32]
    1150:	str	w1, [x0, #36]
    1154:	ldr	x0, [sp, #24]
    1158:	ldrb	w1, [x0, #116]
    115c:	ldr	x0, [sp, #32]
    1160:	strb	w1, [x0, #116]
    1164:	ldr	x0, [sp, #24]
    1168:	ldrb	w1, [x0, #117]
    116c:	ldr	x0, [sp, #32]
    1170:	strb	w1, [x0, #117]
    1174:	ldr	x0, [sp, #24]
    1178:	ldrh	w0, [x0, #118]
    117c:	bl	0 <ext2fs_swab16>
    1180:	and	w1, w0, #0xffff
    1184:	ldr	x0, [sp, #32]
    1188:	strh	w1, [x0, #118]
    118c:	ldr	x0, [sp, #24]
    1190:	ldrh	w0, [x0, #120]
    1194:	bl	0 <ext2fs_swab16>
    1198:	and	w1, w0, #0xffff
    119c:	ldr	x0, [sp, #32]
    11a0:	strh	w1, [x0, #120]
    11a4:	ldr	x0, [sp, #24]
    11a8:	ldrh	w0, [x0, #122]
    11ac:	bl	0 <ext2fs_swab16>
    11b0:	and	w1, w0, #0xffff
    11b4:	ldr	x0, [sp, #32]
    11b8:	strh	w1, [x0, #122]
    11bc:	ldr	x0, [sp, #24]
    11c0:	ldr	w0, [x0, #124]
    11c4:	bl	0 <ext2fs_swab32>
    11c8:	mov	w1, w0
    11cc:	ldr	x0, [sp, #32]
    11d0:	str	w1, [x0, #124]
    11d4:	nop
    11d8:	ldr	w0, [sp, #16]
    11dc:	cmp	w0, #0x81
    11e0:	b.le	146c <ext2fs_swap_inode_full+0x734>
    11e4:	ldr	w0, [sp, #20]
    11e8:	cmp	w0, #0x0
    11ec:	b.eq	11fc <ext2fs_swap_inode_full+0x4c4>  // b.none
    11f0:	ldr	x0, [sp, #24]
    11f4:	ldrh	w0, [x0, #128]
    11f8:	str	w0, [sp, #88]
    11fc:	ldr	x0, [sp, #24]
    1200:	ldrh	w0, [x0, #128]
    1204:	bl	0 <ext2fs_swab16>
    1208:	and	w1, w0, #0xffff
    120c:	ldr	x0, [sp, #32]
    1210:	strh	w1, [x0, #128]
    1214:	ldr	w0, [sp, #20]
    1218:	cmp	w0, #0x0
    121c:	b.ne	122c <ext2fs_swap_inode_full+0x4f4>  // b.any
    1220:	ldr	x0, [sp, #32]
    1224:	ldrh	w0, [x0, #128]
    1228:	str	w0, [sp, #88]
    122c:	ldr	w1, [sp, #88]
    1230:	ldr	x0, [sp, #40]
    1234:	ldr	x0, [x0, #32]
    1238:	ldr	w0, [x0, #76]
    123c:	cmp	w0, #0x0
    1240:	b.eq	125c <ext2fs_swap_inode_full+0x524>  // b.none
    1244:	ldr	x0, [sp, #40]
    1248:	ldr	x0, [x0, #32]
    124c:	ldrh	w0, [x0, #88]
    1250:	and	x0, x0, #0xffff
    1254:	sub	x0, x0, #0x80
    1258:	b	1260 <ext2fs_swap_inode_full+0x528>
    125c:	mov	x0, #0x0                   	// #0
    1260:	cmp	x0, x1
    1264:	b.cc	1474 <ext2fs_swap_inode_full+0x73c>  // b.lo, b.ul, b.last
    1268:	ldr	w0, [sp, #88]
    126c:	and	w0, w0, #0x3
    1270:	cmp	w0, #0x0
    1274:	b.ne	147c <ext2fs_swap_inode_full+0x744>  // b.any
    1278:	ldr	w0, [sp, #88]
    127c:	add	w0, w0, #0x80
    1280:	str	w0, [sp, #64]
    1284:	ldr	w0, [sp, #64]
    1288:	cmp	w0, #0x83
    128c:	b.ls	12a8 <ext2fs_swap_inode_full+0x570>  // b.plast
    1290:	ldr	x0, [sp, #24]
    1294:	ldrh	w0, [x0, #130]
    1298:	bl	0 <ext2fs_swab16>
    129c:	and	w1, w0, #0xffff
    12a0:	ldr	x0, [sp, #32]
    12a4:	strh	w1, [x0, #130]
    12a8:	ldr	w0, [sp, #64]
    12ac:	cmp	w0, #0x87
    12b0:	b.ls	12cc <ext2fs_swap_inode_full+0x594>  // b.plast
    12b4:	ldr	x0, [sp, #24]
    12b8:	ldr	w0, [x0, #132]
    12bc:	bl	0 <ext2fs_swab32>
    12c0:	mov	w1, w0
    12c4:	ldr	x0, [sp, #32]
    12c8:	str	w1, [x0, #132]
    12cc:	ldr	w0, [sp, #64]
    12d0:	cmp	w0, #0x8b
    12d4:	b.ls	12f0 <ext2fs_swap_inode_full+0x5b8>  // b.plast
    12d8:	ldr	x0, [sp, #24]
    12dc:	ldr	w0, [x0, #136]
    12e0:	bl	0 <ext2fs_swab32>
    12e4:	mov	w1, w0
    12e8:	ldr	x0, [sp, #32]
    12ec:	str	w1, [x0, #136]
    12f0:	ldr	w0, [sp, #64]
    12f4:	cmp	w0, #0x8f
    12f8:	b.ls	1314 <ext2fs_swap_inode_full+0x5dc>  // b.plast
    12fc:	ldr	x0, [sp, #24]
    1300:	ldr	w0, [x0, #140]
    1304:	bl	0 <ext2fs_swab32>
    1308:	mov	w1, w0
    130c:	ldr	x0, [sp, #32]
    1310:	str	w1, [x0, #140]
    1314:	ldr	w0, [sp, #64]
    1318:	cmp	w0, #0x93
    131c:	b.ls	1338 <ext2fs_swap_inode_full+0x600>  // b.plast
    1320:	ldr	x0, [sp, #24]
    1324:	ldr	w0, [x0, #144]
    1328:	bl	0 <ext2fs_swab32>
    132c:	mov	w1, w0
    1330:	ldr	x0, [sp, #32]
    1334:	str	w1, [x0, #144]
    1338:	ldr	w0, [sp, #64]
    133c:	cmp	w0, #0x97
    1340:	b.ls	135c <ext2fs_swap_inode_full+0x624>  // b.plast
    1344:	ldr	x0, [sp, #24]
    1348:	ldr	w0, [x0, #148]
    134c:	bl	0 <ext2fs_swab32>
    1350:	mov	w1, w0
    1354:	ldr	x0, [sp, #32]
    1358:	str	w1, [x0, #148]
    135c:	ldr	w0, [sp, #64]
    1360:	cmp	w0, #0x9b
    1364:	b.ls	1380 <ext2fs_swap_inode_full+0x648>  // b.plast
    1368:	ldr	x0, [sp, #24]
    136c:	ldr	w0, [x0, #152]
    1370:	bl	0 <ext2fs_swab32>
    1374:	mov	w1, w0
    1378:	ldr	x0, [sp, #32]
    137c:	str	w1, [x0, #152]
    1380:	ldr	w0, [sp, #64]
    1384:	cmp	w0, #0x9f
    1388:	b.ls	13a4 <ext2fs_swap_inode_full+0x66c>  // b.plast
    138c:	ldr	x0, [sp, #24]
    1390:	ldr	w0, [x0, #156]
    1394:	bl	0 <ext2fs_swab32>
    1398:	mov	w1, w0
    139c:	ldr	x0, [sp, #32]
    13a0:	str	w1, [x0, #156]
    13a4:	ldr	w0, [sp, #88]
    13a8:	add	w0, w0, #0x84
    13ac:	str	w0, [sp, #92]
    13b0:	ldr	w0, [sp, #92]
    13b4:	ldr	w1, [sp, #16]
    13b8:	cmp	w1, w0
    13bc:	b.lt	1484 <ext2fs_swap_inode_full+0x74c>  // b.tstop
    13c0:	ldr	w0, [sp, #88]
    13c4:	add	x0, x0, #0x80
    13c8:	ldr	x1, [sp, #24]
    13cc:	add	x0, x1, x0
    13d0:	str	x0, [sp, #56]
    13d4:	ldr	x0, [sp, #56]
    13d8:	ldr	w0, [x0]
    13dc:	str	w0, [sp, #84]
    13e0:	ldr	w0, [sp, #20]
    13e4:	cmp	w0, #0x0
    13e8:	b.ne	13f8 <ext2fs_swap_inode_full+0x6c0>  // b.any
    13ec:	ldr	w0, [sp, #84]
    13f0:	bl	0 <ext2fs_swab32>
    13f4:	str	w0, [sp, #84]
    13f8:	ldr	w1, [sp, #84]
    13fc:	mov	w0, #0xea020000            	// #-368967680
    1400:	cmp	w1, w0
    1404:	b.ne	148c <ext2fs_swap_inode_full+0x754>  // b.any
    1408:	ldr	w0, [sp, #88]
    140c:	add	x0, x0, #0x80
    1410:	ldr	x1, [sp, #32]
    1414:	add	x0, x1, x0
    1418:	str	x0, [sp, #48]
    141c:	ldr	x0, [sp, #56]
    1420:	ldr	w0, [x0]
    1424:	bl	0 <ext2fs_swab32>
    1428:	mov	w1, w0
    142c:	ldr	x0, [sp, #48]
    1430:	str	w1, [x0]
    1434:	ldr	x0, [sp, #48]
    1438:	add	x4, x0, #0x4
    143c:	ldr	x0, [sp, #56]
    1440:	add	x5, x0, #0x4
    1444:	ldr	w1, [sp, #16]
    1448:	ldr	w0, [sp, #88]
    144c:	sub	w0, w1, w0
    1450:	sub	w0, w0, #0x84
    1454:	mov	w3, #0x0                   	// #0
    1458:	mov	w2, w0
    145c:	mov	x1, x5
    1460:	mov	x0, x4
    1464:	bl	be8 <ext2fs_swap_ext_attr>
    1468:	b	1490 <ext2fs_swap_inode_full+0x758>
    146c:	nop
    1470:	b	1490 <ext2fs_swap_inode_full+0x758>
    1474:	nop
    1478:	b	1490 <ext2fs_swap_inode_full+0x758>
    147c:	nop
    1480:	b	1490 <ext2fs_swap_inode_full+0x758>
    1484:	nop
    1488:	b	1490 <ext2fs_swap_inode_full+0x758>
    148c:	nop
    1490:	ldp	x29, x30, [sp], #96
    1494:	ret

0000000000001498 <ext2fs_swap_inode>:
    1498:	stp	x29, x30, [sp, #-48]!
    149c:	mov	x29, sp
    14a0:	str	x0, [sp, #40]
    14a4:	str	x1, [sp, #32]
    14a8:	str	x2, [sp, #24]
    14ac:	str	w3, [sp, #20]
    14b0:	mov	w4, #0x80                  	// #128
    14b4:	ldr	w3, [sp, #20]
    14b8:	ldr	x2, [sp, #24]
    14bc:	ldr	x1, [sp, #32]
    14c0:	ldr	x0, [sp, #40]
    14c4:	bl	d38 <ext2fs_swap_inode_full>
    14c8:	nop
    14cc:	ldp	x29, x30, [sp], #48
    14d0:	ret

00000000000014d4 <ext2fs_swap_mmp>:
    14d4:	stp	x29, x30, [sp, #-32]!
    14d8:	mov	x29, sp
    14dc:	str	x0, [sp, #24]
    14e0:	ldr	x0, [sp, #24]
    14e4:	ldr	w0, [x0]
    14e8:	bl	0 <ext2fs_swab32>
    14ec:	mov	w1, w0
    14f0:	ldr	x0, [sp, #24]
    14f4:	str	w1, [x0]
    14f8:	ldr	x0, [sp, #24]
    14fc:	ldr	w0, [x0, #4]
    1500:	bl	0 <ext2fs_swab32>
    1504:	mov	w1, w0
    1508:	ldr	x0, [sp, #24]
    150c:	str	w1, [x0, #4]
    1510:	ldr	x0, [sp, #24]
    1514:	ldr	x0, [x0, #8]
    1518:	bl	0 <ext2fs_swab64>
    151c:	mov	x1, x0
    1520:	ldr	x0, [sp, #24]
    1524:	str	x1, [x0, #8]
    1528:	ldr	x0, [sp, #24]
    152c:	ldrh	w0, [x0, #112]
    1530:	bl	0 <ext2fs_swab16>
    1534:	and	w1, w0, #0xffff
    1538:	ldr	x0, [sp, #24]
    153c:	strh	w1, [x0, #112]
    1540:	ldr	x0, [sp, #24]
    1544:	ldr	w0, [x0, #1020]
    1548:	bl	0 <ext2fs_swab32>
    154c:	mov	w1, w0
    1550:	ldr	x0, [sp, #24]
    1554:	str	w1, [x0, #1020]
    1558:	nop
    155c:	ldp	x29, x30, [sp], #32
    1560:	ret

0000000000001564 <ext2fs_dirent_swab_in>:
    1564:	stp	x29, x30, [sp, #-48]!
    1568:	mov	x29, sp
    156c:	str	x0, [sp, #40]
    1570:	str	x1, [sp, #32]
    1574:	str	w2, [sp, #28]
    1578:	ldr	x0, [sp, #40]
    157c:	ldr	w0, [x0, #40]
    1580:	mov	w0, w0
    1584:	ldr	w3, [sp, #28]
    1588:	mov	x2, x0
    158c:	ldr	x1, [sp, #32]
    1590:	ldr	x0, [sp, #40]
    1594:	bl	15a0 <ext2fs_dirent_swab_in2>
    1598:	ldp	x29, x30, [sp], #48
    159c:	ret

00000000000015a0 <ext2fs_dirent_swab_in2>:
    15a0:	stp	x29, x30, [sp, #-96]!
    15a4:	mov	x29, sp
    15a8:	str	x0, [sp, #40]
    15ac:	str	x1, [sp, #32]
    15b0:	str	x2, [sp, #24]
    15b4:	str	w3, [sp, #20]
    15b8:	ldr	x0, [sp, #32]
    15bc:	str	x0, [sp, #88]
    15c0:	ldr	x1, [sp, #32]
    15c4:	ldr	x0, [sp, #24]
    15c8:	add	x0, x1, x0
    15cc:	str	x0, [sp, #80]
    15d0:	b	16f0 <ext2fs_dirent_swab_in2+0x150>
    15d4:	ldr	x0, [sp, #88]
    15d8:	str	x0, [sp, #72]
    15dc:	ldr	x0, [sp, #72]
    15e0:	ldr	w0, [x0]
    15e4:	bl	0 <ext2fs_swab32>
    15e8:	mov	w1, w0
    15ec:	ldr	x0, [sp, #72]
    15f0:	str	w1, [x0]
    15f4:	ldr	x0, [sp, #72]
    15f8:	ldrh	w0, [x0, #4]
    15fc:	bl	0 <ext2fs_swab16>
    1600:	and	w1, w0, #0xffff
    1604:	ldr	x0, [sp, #72]
    1608:	strh	w1, [x0, #4]
    160c:	ldr	x0, [sp, #72]
    1610:	ldrh	w0, [x0, #6]
    1614:	bl	0 <ext2fs_swab16>
    1618:	and	w1, w0, #0xffff
    161c:	ldr	x0, [sp, #72]
    1620:	strh	w1, [x0, #6]
    1624:	ldr	x0, [sp, #72]
    1628:	ldrh	w0, [x0, #6]
    162c:	str	w0, [sp, #68]
    1630:	ldr	w0, [sp, #20]
    1634:	and	w0, w0, #0x1
    1638:	cmp	w0, #0x0
    163c:	b.eq	1658 <ext2fs_dirent_swab_in2+0xb8>  // b.none
    1640:	ldr	x0, [sp, #72]
    1644:	ldrh	w0, [x0, #6]
    1648:	bl	0 <ext2fs_swab16>
    164c:	and	w1, w0, #0xffff
    1650:	ldr	x0, [sp, #72]
    1654:	strh	w1, [x0, #6]
    1658:	add	x0, sp, #0x34
    165c:	mov	x2, x0
    1660:	ldr	x1, [sp, #72]
    1664:	ldr	x0, [sp, #40]
    1668:	bl	0 <ext2fs_get_rec_len>
    166c:	str	x0, [sp, #56]
    1670:	ldr	x0, [sp, #56]
    1674:	cmp	x0, #0x0
    1678:	b.eq	1684 <ext2fs_dirent_swab_in2+0xe4>  // b.none
    167c:	ldr	x0, [sp, #56]
    1680:	b	1708 <ext2fs_dirent_swab_in2+0x168>
    1684:	ldr	w0, [sp, #52]
    1688:	cmp	w0, #0x7
    168c:	b.ls	16a0 <ext2fs_dirent_swab_in2+0x100>  // b.plast
    1690:	ldr	w0, [sp, #52]
    1694:	and	w0, w0, #0x3
    1698:	cmp	w0, #0x0
    169c:	b.eq	16b8 <ext2fs_dirent_swab_in2+0x118>  // b.none
    16a0:	mov	w0, #0x8                   	// #8
    16a4:	str	w0, [sp, #52]
    16a8:	mov	x0, #0xb723                	// #46883
    16ac:	movk	x0, #0x7f2b, lsl #16
    16b0:	str	x0, [sp, #56]
    16b4:	b	16dc <ext2fs_dirent_swab_in2+0x13c>
    16b8:	ldr	w0, [sp, #68]
    16bc:	and	w0, w0, #0xff
    16c0:	add	w1, w0, #0x8
    16c4:	ldr	w0, [sp, #52]
    16c8:	cmp	w1, w0
    16cc:	b.ls	16dc <ext2fs_dirent_swab_in2+0x13c>  // b.plast
    16d0:	mov	x0, #0xb723                	// #46883
    16d4:	movk	x0, #0x7f2b, lsl #16
    16d8:	str	x0, [sp, #56]
    16dc:	ldr	w0, [sp, #52]
    16e0:	mov	w0, w0
    16e4:	ldr	x1, [sp, #88]
    16e8:	add	x0, x1, x0
    16ec:	str	x0, [sp, #88]
    16f0:	ldr	x0, [sp, #80]
    16f4:	sub	x0, x0, #0x8
    16f8:	ldr	x1, [sp, #88]
    16fc:	cmp	x1, x0
    1700:	b.cc	15d4 <ext2fs_dirent_swab_in2+0x34>  // b.lo, b.ul, b.last
    1704:	mov	x0, #0x0                   	// #0
    1708:	ldp	x29, x30, [sp], #96
    170c:	ret

0000000000001710 <ext2fs_dirent_swab_out>:
    1710:	stp	x29, x30, [sp, #-48]!
    1714:	mov	x29, sp
    1718:	str	x0, [sp, #40]
    171c:	str	x1, [sp, #32]
    1720:	str	w2, [sp, #28]
    1724:	ldr	x0, [sp, #40]
    1728:	ldr	w0, [x0, #40]
    172c:	mov	w0, w0
    1730:	ldr	w3, [sp, #28]
    1734:	mov	x2, x0
    1738:	ldr	x1, [sp, #32]
    173c:	ldr	x0, [sp, #40]
    1740:	bl	174c <ext2fs_dirent_swab_out2>
    1744:	ldp	x29, x30, [sp], #48
    1748:	ret

000000000000174c <ext2fs_dirent_swab_out2>:
    174c:	stp	x29, x30, [sp, #-96]!
    1750:	mov	x29, sp
    1754:	str	x0, [sp, #40]
    1758:	str	x1, [sp, #32]
    175c:	str	x2, [sp, #24]
    1760:	str	w3, [sp, #20]
    1764:	ldr	x0, [sp, #32]
    1768:	str	x0, [sp, #88]
    176c:	ldr	x1, [sp, #32]
    1770:	ldr	x0, [sp, #24]
    1774:	add	x0, x1, x0
    1778:	str	x0, [sp, #80]
    177c:	b	1868 <ext2fs_dirent_swab_out2+0x11c>
    1780:	ldr	x0, [sp, #88]
    1784:	str	x0, [sp, #72]
    1788:	add	x0, sp, #0x3c
    178c:	mov	x2, x0
    1790:	ldr	x1, [sp, #72]
    1794:	ldr	x0, [sp, #40]
    1798:	bl	0 <ext2fs_get_rec_len>
    179c:	str	x0, [sp, #64]
    17a0:	ldr	x0, [sp, #64]
    17a4:	cmp	x0, #0x0
    17a8:	b.eq	17b4 <ext2fs_dirent_swab_out2+0x68>  // b.none
    17ac:	ldr	x0, [sp, #64]
    17b0:	b	187c <ext2fs_dirent_swab_out2+0x130>
    17b4:	ldr	w0, [sp, #60]
    17b8:	cmp	w0, #0x7
    17bc:	b.ls	17d0 <ext2fs_dirent_swab_out2+0x84>  // b.plast
    17c0:	ldr	w0, [sp, #60]
    17c4:	and	w0, w0, #0x3
    17c8:	cmp	w0, #0x0
    17cc:	b.eq	17e4 <ext2fs_dirent_swab_out2+0x98>  // b.none
    17d0:	add	x0, sp, #0x20
    17d4:	bl	0 <ext2fs_free_mem>
    17d8:	mov	x0, #0xb723                	// #46883
    17dc:	movk	x0, #0x7f2b, lsl #16
    17e0:	b	187c <ext2fs_dirent_swab_out2+0x130>
    17e4:	ldr	w0, [sp, #60]
    17e8:	mov	w0, w0
    17ec:	ldr	x1, [sp, #88]
    17f0:	add	x0, x1, x0
    17f4:	str	x0, [sp, #88]
    17f8:	ldr	x0, [sp, #72]
    17fc:	ldr	w0, [x0]
    1800:	bl	0 <ext2fs_swab32>
    1804:	mov	w1, w0
    1808:	ldr	x0, [sp, #72]
    180c:	str	w1, [x0]
    1810:	ldr	x0, [sp, #72]
    1814:	ldrh	w0, [x0, #4]
    1818:	bl	0 <ext2fs_swab16>
    181c:	and	w1, w0, #0xffff
    1820:	ldr	x0, [sp, #72]
    1824:	strh	w1, [x0, #4]
    1828:	ldr	x0, [sp, #72]
    182c:	ldrh	w0, [x0, #6]
    1830:	bl	0 <ext2fs_swab16>
    1834:	and	w1, w0, #0xffff
    1838:	ldr	x0, [sp, #72]
    183c:	strh	w1, [x0, #6]
    1840:	ldr	w0, [sp, #20]
    1844:	and	w0, w0, #0x1
    1848:	cmp	w0, #0x0
    184c:	b.eq	1868 <ext2fs_dirent_swab_out2+0x11c>  // b.none
    1850:	ldr	x0, [sp, #72]
    1854:	ldrh	w0, [x0, #6]
    1858:	bl	0 <ext2fs_swab16>
    185c:	and	w1, w0, #0xffff
    1860:	ldr	x0, [sp, #72]
    1864:	strh	w1, [x0, #6]
    1868:	ldr	x1, [sp, #88]
    186c:	ldr	x0, [sp, #80]
    1870:	cmp	x1, x0
    1874:	b.cc	1780 <ext2fs_dirent_swab_out2+0x34>  // b.lo, b.ul, b.last
    1878:	mov	x0, #0x0                   	// #0
    187c:	ldp	x29, x30, [sp], #96
    1880:	ret

symlink.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_has_feature_extents>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	ldr	x0, [sp, #8]
   c:	ldr	w0, [x0, #96]
  10:	and	w0, w0, #0x40
  14:	cmp	w0, #0x0
  18:	cset	w0, ne  // ne = any
  1c:	and	w0, w0, #0xff
  20:	add	sp, sp, #0x10
  24:	ret

0000000000000028 <ext2fs_has_feature_inline_data>:
  28:	sub	sp, sp, #0x10
  2c:	str	x0, [sp, #8]
  30:	ldr	x0, [sp, #8]
  34:	ldr	w0, [x0, #96]
  38:	and	w0, w0, #0x8000
  3c:	cmp	w0, #0x0
  40:	cset	w0, ne  // ne = any
  44:	and	w0, w0, #0xff
  48:	add	sp, sp, #0x10
  4c:	ret

0000000000000050 <ext2fs_symlink>:
  50:	stp	x29, x30, [sp, #-224]!
  54:	mov	x29, sp
  58:	str	x0, [sp, #40]
  5c:	str	w1, [sp, #36]
  60:	str	w2, [sp, #32]
  64:	str	x3, [sp, #24]
  68:	str	x4, [sp, #16]
  6c:	str	xzr, [sp, #48]
  70:	ldr	x0, [sp, #40]
  74:	ldr	x1, [x0]
  78:	mov	x0, #0xb701                	// #46849
  7c:	movk	x0, #0x7f2b, lsl #16
  80:	cmp	x1, x0
  84:	b.eq	94 <ext2fs_symlink+0x44>  // b.none
  88:	mov	x0, #0xb701                	// #46849
  8c:	movk	x0, #0x7f2b, lsl #16
  90:	b	570 <ext2fs_symlink+0x520>
  94:	ldr	x0, [sp, #40]
  98:	ldr	w0, [x0, #40]
  9c:	add	w0, w0, #0x1
  a0:	mov	w0, w0
  a4:	mov	x1, x0
  a8:	ldr	x0, [sp, #16]
  ac:	bl	0 <strnlen>
  b0:	str	w0, [sp, #208]
  b4:	ldr	x0, [sp, #40]
  b8:	ldr	w0, [x0, #40]
  bc:	ldr	w1, [sp, #208]
  c0:	cmp	w1, w0
  c4:	b.cc	d8 <ext2fs_symlink+0x88>  // b.lo, b.ul, b.last
  c8:	mov	x0, #0xb747                	// #46919
  cc:	movk	x0, #0x7f2b, lsl #16
  d0:	str	x0, [sp, #216]
  d4:	b	558 <ext2fs_symlink+0x508>
  d8:	ldr	x0, [sp, #40]
  dc:	ldr	w0, [x0, #40]
  e0:	mov	w0, w0
  e4:	add	x1, sp, #0x30
  e8:	bl	0 <ext2fs_get_mem>
  ec:	str	x0, [sp, #216]
  f0:	ldr	x0, [sp, #216]
  f4:	cmp	x0, #0x0
  f8:	b.ne	514 <ext2fs_symlink+0x4c4>  // b.any
  fc:	ldr	x3, [sp, #48]
 100:	ldr	x0, [sp, #40]
 104:	ldr	w0, [x0, #40]
 108:	mov	w0, w0
 10c:	mov	x2, x0
 110:	mov	w1, #0x0                   	// #0
 114:	mov	x0, x3
 118:	bl	0 <memset>
 11c:	ldr	x3, [sp, #48]
 120:	ldr	x0, [sp, #40]
 124:	ldr	w0, [x0, #40]
 128:	mov	w0, w0
 12c:	mov	x2, x0
 130:	ldr	x1, [sp, #16]
 134:	mov	x0, x3
 138:	bl	0 <strncpy>
 13c:	add	x0, sp, #0x48
 140:	mov	x2, #0x80                  	// #128
 144:	mov	w1, #0x0                   	// #0
 148:	bl	0 <memset>
 14c:	ldr	w0, [sp, #208]
 150:	cmp	w0, #0x3b
 154:	cset	w0, ls  // ls = plast
 158:	and	w0, w0, #0xff
 15c:	str	w0, [sp, #204]
 160:	ldr	w0, [sp, #204]
 164:	cmp	w0, #0x0
 168:	b.ne	1b0 <ext2fs_symlink+0x160>  // b.any
 16c:	ldr	w0, [sp, #32]
 170:	add	x1, sp, #0x48
 174:	mov	x3, #0x0                   	// #0
 178:	mov	x2, x1
 17c:	mov	w1, w0
 180:	ldr	x0, [sp, #40]
 184:	bl	0 <ext2fs_find_inode_goal>
 188:	mov	x1, x0
 18c:	add	x0, sp, #0x38
 190:	mov	x3, x0
 194:	mov	x2, #0x0                   	// #0
 198:	ldr	x0, [sp, #40]
 19c:	bl	0 <ext2fs_new_block2>
 1a0:	str	x0, [sp, #216]
 1a4:	ldr	x0, [sp, #216]
 1a8:	cmp	x0, #0x0
 1ac:	b.ne	51c <ext2fs_symlink+0x4cc>  // b.any
 1b0:	ldr	w0, [sp, #32]
 1b4:	cmp	w0, #0x0
 1b8:	b.ne	1e8 <ext2fs_symlink+0x198>  // b.any
 1bc:	add	x0, sp, #0x20
 1c0:	mov	x4, x0
 1c4:	mov	x3, #0x0                   	// #0
 1c8:	mov	w2, #0xa1ed                	// #41453
 1cc:	ldr	w1, [sp, #36]
 1d0:	ldr	x0, [sp, #40]
 1d4:	bl	0 <ext2fs_new_inode>
 1d8:	str	x0, [sp, #216]
 1dc:	ldr	x0, [sp, #216]
 1e0:	cmp	x0, #0x0
 1e4:	b.ne	524 <ext2fs_symlink+0x4d4>  // b.any
 1e8:	mov	w0, #0xffffa1ff            	// #-24065
 1ec:	strh	w0, [sp, #72]
 1f0:	strh	wzr, [sp, #96]
 1f4:	ldrh	w0, [sp, #96]
 1f8:	strh	w0, [sp, #74]
 1fc:	mov	w0, #0x1                   	// #1
 200:	strh	w0, [sp, #98]
 204:	ldr	w1, [sp, #208]
 208:	add	x0, sp, #0x48
 20c:	mov	x2, x1
 210:	mov	x1, x0
 214:	ldr	x0, [sp, #40]
 218:	bl	0 <ext2fs_inode_size_set>
 21c:	ldr	w0, [sp, #204]
 220:	cmp	w0, #0x0
 224:	b.ne	244 <ext2fs_symlink+0x1f4>  // b.any
 228:	ldr	x0, [sp, #40]
 22c:	ldr	x0, [x0, #32]
 230:	bl	28 <ext2fs_has_feature_inline_data>
 234:	cmp	w0, #0x0
 238:	b.eq	244 <ext2fs_symlink+0x1f4>  // b.none
 23c:	mov	w0, #0x1                   	// #1
 240:	b	248 <ext2fs_symlink+0x1f8>
 244:	mov	w0, #0x0                   	// #0
 248:	str	w0, [sp, #212]
 24c:	ldr	w0, [sp, #204]
 250:	cmp	w0, #0x0
 254:	b.eq	26c <ext2fs_symlink+0x21c>  // b.none
 258:	add	x0, sp, #0x48
 25c:	add	x0, x0, #0x28
 260:	ldr	x1, [sp, #16]
 264:	bl	0 <strcpy>
 268:	b	35c <ext2fs_symlink+0x30c>
 26c:	ldr	w0, [sp, #212]
 270:	cmp	w0, #0x0
 274:	b.eq	324 <ext2fs_symlink+0x2d4>  // b.none
 278:	ldr	w0, [sp, #104]
 27c:	orr	w0, w0, #0x10000000
 280:	str	w0, [sp, #104]
 284:	ldr	w0, [sp, #32]
 288:	add	x1, sp, #0x48
 28c:	mov	x2, x1
 290:	mov	w1, w0
 294:	ldr	x0, [sp, #40]
 298:	bl	0 <ext2fs_write_new_inode>
 29c:	str	x0, [sp, #216]
 2a0:	ldr	x0, [sp, #216]
 2a4:	cmp	x0, #0x0
 2a8:	b.ne	52c <ext2fs_symlink+0x4dc>  // b.any
 2ac:	ldr	w0, [sp, #32]
 2b0:	ldr	x2, [sp, #48]
 2b4:	ldr	w3, [sp, #208]
 2b8:	add	x1, sp, #0x48
 2bc:	mov	x4, x3
 2c0:	mov	x3, x2
 2c4:	mov	x2, x1
 2c8:	mov	w1, w0
 2cc:	ldr	x0, [sp, #40]
 2d0:	bl	0 <ext2fs_inline_data_set>
 2d4:	str	x0, [sp, #216]
 2d8:	ldr	x0, [sp, #216]
 2dc:	cmp	x0, #0x0
 2e0:	b.eq	2f8 <ext2fs_symlink+0x2a8>  // b.none
 2e4:	ldr	w0, [sp, #104]
 2e8:	and	w0, w0, #0xefffffff
 2ec:	str	w0, [sp, #104]
 2f0:	str	wzr, [sp, #212]
 2f4:	b	328 <ext2fs_symlink+0x2d8>
 2f8:	ldr	w0, [sp, #32]
 2fc:	add	x1, sp, #0x48
 300:	mov	x2, x1
 304:	mov	w1, w0
 308:	ldr	x0, [sp, #40]
 30c:	bl	0 <ext2fs_read_inode>
 310:	str	x0, [sp, #216]
 314:	ldr	x0, [sp, #216]
 318:	cmp	x0, #0x0
 31c:	b.eq	35c <ext2fs_symlink+0x30c>  // b.none
 320:	b	558 <ext2fs_symlink+0x508>
 324:	nop
 328:	add	x0, sp, #0x48
 32c:	mov	x2, #0x1                   	// #1
 330:	mov	x1, x0
 334:	ldr	x0, [sp, #40]
 338:	bl	0 <ext2fs_iblk_set>
 33c:	ldr	x0, [sp, #40]
 340:	ldr	x0, [x0, #32]
 344:	bl	0 <ext2fs_has_feature_extents>
 348:	cmp	w0, #0x0
 34c:	b.eq	35c <ext2fs_symlink+0x30c>  // b.none
 350:	ldr	w0, [sp, #104]
 354:	orr	w0, w0, #0x80000
 358:	str	w0, [sp, #104]
 35c:	ldr	w0, [sp, #212]
 360:	cmp	w0, #0x0
 364:	b.eq	388 <ext2fs_symlink+0x338>  // b.none
 368:	ldr	w0, [sp, #32]
 36c:	add	x1, sp, #0x48
 370:	mov	x2, x1
 374:	mov	w1, w0
 378:	ldr	x0, [sp, #40]
 37c:	bl	0 <ext2fs_write_inode>
 380:	str	x0, [sp, #216]
 384:	b	3a4 <ext2fs_symlink+0x354>
 388:	ldr	w0, [sp, #32]
 38c:	add	x1, sp, #0x48
 390:	mov	x2, x1
 394:	mov	w1, w0
 398:	ldr	x0, [sp, #40]
 39c:	bl	0 <ext2fs_write_new_inode>
 3a0:	str	x0, [sp, #216]
 3a4:	ldr	x0, [sp, #216]
 3a8:	cmp	x0, #0x0
 3ac:	b.ne	534 <ext2fs_symlink+0x4e4>  // b.any
 3b0:	ldr	w0, [sp, #204]
 3b4:	cmp	w0, #0x0
 3b8:	b.ne	434 <ext2fs_symlink+0x3e4>  // b.any
 3bc:	ldr	w0, [sp, #212]
 3c0:	cmp	w0, #0x0
 3c4:	b.ne	434 <ext2fs_symlink+0x3e4>  // b.any
 3c8:	ldr	w0, [sp, #32]
 3cc:	add	x2, sp, #0x38
 3d0:	add	x1, sp, #0x48
 3d4:	mov	x7, x2
 3d8:	mov	x6, #0x0                   	// #0
 3dc:	mov	x5, #0x0                   	// #0
 3e0:	mov	w4, #0x2                   	// #2
 3e4:	mov	x3, #0x0                   	// #0
 3e8:	mov	x2, x1
 3ec:	mov	w1, w0
 3f0:	ldr	x0, [sp, #40]
 3f4:	bl	0 <ext2fs_bmap2>
 3f8:	str	x0, [sp, #216]
 3fc:	ldr	x0, [sp, #216]
 400:	cmp	x0, #0x0
 404:	b.ne	53c <ext2fs_symlink+0x4ec>  // b.any
 408:	ldr	x0, [sp, #40]
 40c:	ldr	x0, [x0, #8]
 410:	ldr	x1, [sp, #56]
 414:	ldr	x2, [sp, #48]
 418:	mov	x3, x2
 41c:	mov	w2, #0x1                   	// #1
 420:	bl	0 <io_channel_write_blk64>
 424:	str	x0, [sp, #216]
 428:	ldr	x0, [sp, #216]
 42c:	cmp	x0, #0x0
 430:	b.ne	544 <ext2fs_symlink+0x4f4>  // b.any
 434:	ldr	x0, [sp, #24]
 438:	cmp	x0, #0x0
 43c:	b.eq	4cc <ext2fs_symlink+0x47c>  // b.none
 440:	ldr	x0, [sp, #24]
 444:	bl	0 <strlen>
 448:	mov	w1, w0
 44c:	add	x0, sp, #0x44
 450:	mov	x5, x0
 454:	mov	x4, #0x0                   	// #0
 458:	mov	w3, w1
 45c:	ldr	x2, [sp, #24]
 460:	ldr	w1, [sp, #36]
 464:	ldr	x0, [sp, #40]
 468:	bl	0 <ext2fs_lookup>
 46c:	str	x0, [sp, #216]
 470:	ldr	x0, [sp, #216]
 474:	cmp	x0, #0x0
 478:	b.ne	48c <ext2fs_symlink+0x43c>  // b.any
 47c:	mov	x0, #0xb79b                	// #47003
 480:	movk	x0, #0x7f2b, lsl #16
 484:	str	x0, [sp, #216]
 488:	b	558 <ext2fs_symlink+0x508>
 48c:	ldr	x1, [sp, #216]
 490:	mov	x0, #0xb74c                	// #46924
 494:	movk	x0, #0x7f2b, lsl #16
 498:	cmp	x1, x0
 49c:	b.ne	54c <ext2fs_symlink+0x4fc>  // b.any
 4a0:	ldr	w0, [sp, #32]
 4a4:	mov	w4, #0x7                   	// #7
 4a8:	mov	w3, w0
 4ac:	ldr	x2, [sp, #24]
 4b0:	ldr	w1, [sp, #36]
 4b4:	ldr	x0, [sp, #40]
 4b8:	bl	0 <ext2fs_link>
 4bc:	str	x0, [sp, #216]
 4c0:	ldr	x0, [sp, #216]
 4c4:	cmp	x0, #0x0
 4c8:	b.ne	554 <ext2fs_symlink+0x504>  // b.any
 4cc:	ldr	w0, [sp, #204]
 4d0:	cmp	w0, #0x0
 4d4:	b.ne	4f8 <ext2fs_symlink+0x4a8>  // b.any
 4d8:	ldr	w0, [sp, #212]
 4dc:	cmp	w0, #0x0
 4e0:	b.ne	4f8 <ext2fs_symlink+0x4a8>  // b.any
 4e4:	ldr	x0, [sp, #56]
 4e8:	mov	w2, #0x1                   	// #1
 4ec:	mov	x1, x0
 4f0:	ldr	x0, [sp, #40]
 4f4:	bl	0 <ext2fs_block_alloc_stats2>
 4f8:	ldr	w0, [sp, #32]
 4fc:	mov	w3, #0x0                   	// #0
 500:	mov	w2, #0x1                   	// #1
 504:	mov	w1, w0
 508:	ldr	x0, [sp, #40]
 50c:	bl	0 <ext2fs_inode_alloc_stats2>
 510:	b	558 <ext2fs_symlink+0x508>
 514:	nop
 518:	b	558 <ext2fs_symlink+0x508>
 51c:	nop
 520:	b	558 <ext2fs_symlink+0x508>
 524:	nop
 528:	b	558 <ext2fs_symlink+0x508>
 52c:	nop
 530:	b	558 <ext2fs_symlink+0x508>
 534:	nop
 538:	b	558 <ext2fs_symlink+0x508>
 53c:	nop
 540:	b	558 <ext2fs_symlink+0x508>
 544:	nop
 548:	b	558 <ext2fs_symlink+0x508>
 54c:	nop
 550:	b	558 <ext2fs_symlink+0x508>
 554:	nop
 558:	ldr	x0, [sp, #48]
 55c:	cmp	x0, #0x0
 560:	b.eq	56c <ext2fs_symlink+0x51c>  // b.none
 564:	add	x0, sp, #0x30
 568:	bl	0 <ext2fs_free_mem>
 56c:	ldr	x0, [sp, #216]
 570:	ldp	x29, x30, [sp], #224
 574:	ret

0000000000000578 <ext2fs_is_fast_symlink>:
 578:	sub	sp, sp, #0x10
 57c:	str	x0, [sp, #8]
 580:	ldr	x0, [sp, #8]
 584:	ldrh	w0, [x0]
 588:	and	w0, w0, #0xf000
 58c:	cmp	w0, #0xa, lsl #12
 590:	b.ne	5ec <ext2fs_is_fast_symlink+0x74>  // b.any
 594:	ldr	x0, [sp, #8]
 598:	ldr	w0, [x0, #4]
 59c:	mov	w1, w0
 5a0:	ldr	x0, [sp, #8]
 5a4:	ldr	w0, [x0, #108]
 5a8:	mov	w0, w0
 5ac:	lsl	x0, x0, #32
 5b0:	orr	x0, x1, x0
 5b4:	cmp	x0, #0x0
 5b8:	b.eq	5ec <ext2fs_is_fast_symlink+0x74>  // b.none
 5bc:	ldr	x0, [sp, #8]
 5c0:	ldr	w0, [x0, #4]
 5c4:	mov	w1, w0
 5c8:	ldr	x0, [sp, #8]
 5cc:	ldr	w0, [x0, #108]
 5d0:	mov	w0, w0
 5d4:	lsl	x0, x0, #32
 5d8:	orr	x0, x1, x0
 5dc:	cmp	x0, #0x3b
 5e0:	b.hi	5ec <ext2fs_is_fast_symlink+0x74>  // b.pmore
 5e4:	mov	w0, #0x1                   	// #1
 5e8:	b	5f0 <ext2fs_is_fast_symlink+0x78>
 5ec:	mov	w0, #0x0                   	// #0
 5f0:	add	sp, sp, #0x10
 5f4:	ret

tdb.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_tdb_error>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #56]
      10:	add	sp, sp, #0x10
      14:	ret

0000000000000018 <ext2fs_tdb_errorstr>:
      18:	sub	sp, sp, #0x20
      1c:	str	x0, [sp, #8]
      20:	str	wzr, [sp, #28]
      24:	b	78 <ext2fs_tdb_errorstr+0x60>
      28:	ldr	x0, [sp, #8]
      2c:	ldr	w1, [x0, #56]
      30:	adrp	x0, 0 <ext2fs_tdb_error>
      34:	add	x2, x0, #0x0
      38:	ldr	w0, [sp, #28]
      3c:	lsl	x0, x0, #4
      40:	add	x0, x2, x0
      44:	ldr	w0, [x0]
      48:	cmp	w1, w0
      4c:	b.ne	6c <ext2fs_tdb_errorstr+0x54>  // b.any
      50:	adrp	x0, 0 <ext2fs_tdb_error>
      54:	add	x1, x0, #0x0
      58:	ldr	w0, [sp, #28]
      5c:	lsl	x0, x0, #4
      60:	add	x0, x1, x0
      64:	ldr	x0, [x0, #8]
      68:	b	8c <ext2fs_tdb_errorstr+0x74>
      6c:	ldr	w0, [sp, #28]
      70:	add	w0, w0, #0x1
      74:	str	w0, [sp, #28]
      78:	ldr	w0, [sp, #28]
      7c:	cmp	w0, #0x9
      80:	b.ls	28 <ext2fs_tdb_errorstr+0x10>  // b.plast
      84:	adrp	x0, 0 <ext2fs_tdb_error>
      88:	add	x0, x0, #0x0
      8c:	add	sp, sp, #0x20
      90:	ret

0000000000000094 <tdb_brlock>:
      94:	stp	x29, x30, [sp, #-96]!
      98:	mov	x29, sp
      9c:	str	x0, [sp, #40]
      a0:	str	w1, [sp, #36]
      a4:	str	w2, [sp, #32]
      a8:	str	w3, [sp, #28]
      ac:	str	w4, [sp, #24]
      b0:	str	x5, [sp, #16]
      b4:	ldr	x0, [sp, #40]
      b8:	ldr	w0, [x0, #228]
      bc:	and	w0, w0, #0x4
      c0:	cmp	w0, #0x0
      c4:	b.eq	d0 <tdb_brlock+0x3c>  // b.none
      c8:	mov	w0, #0x0                   	// #0
      cc:	b	1f0 <tdb_brlock+0x15c>
      d0:	ldr	w0, [sp, #32]
      d4:	cmp	w0, #0x1
      d8:	b.ne	110 <tdb_brlock+0x7c>  // b.any
      dc:	ldr	x0, [sp, #40]
      e0:	ldr	w0, [x0, #24]
      e4:	cmp	w0, #0x0
      e8:	b.ne	fc <tdb_brlock+0x68>  // b.any
      ec:	ldr	x0, [sp, #40]
      f0:	ldr	w0, [x0, #28]
      f4:	cmp	w0, #0x0
      f8:	b.eq	110 <tdb_brlock+0x7c>  // b.none
      fc:	ldr	x0, [sp, #40]
     100:	mov	w1, #0xa                   	// #10
     104:	str	w1, [x0, #56]
     108:	mov	w0, #0xffffffff            	// #-1
     10c:	b	1f0 <tdb_brlock+0x15c>
     110:	ldr	w0, [sp, #32]
     114:	sxth	w0, w0
     118:	strh	w0, [sp, #56]
     11c:	strh	wzr, [sp, #58]
     120:	ldr	w0, [sp, #36]
     124:	str	x0, [sp, #64]
     128:	ldr	x0, [sp, #16]
     12c:	str	x0, [sp, #72]
     130:	str	wzr, [sp, #80]
     134:	ldr	x0, [sp, #40]
     138:	ldr	w0, [x0, #16]
     13c:	add	x1, sp, #0x38
     140:	mov	x2, x1
     144:	ldr	w1, [sp, #28]
     148:	bl	0 <fcntl>
     14c:	str	w0, [sp, #92]
     150:	ldr	w0, [sp, #92]
     154:	cmn	w0, #0x1
     158:	b.ne	16c <tdb_brlock+0xd8>  // b.any
     15c:	bl	0 <__errno_location>
     160:	ldr	w0, [x0]
     164:	cmp	w0, #0x4
     168:	b.eq	134 <tdb_brlock+0xa0>  // b.none
     16c:	ldr	w0, [sp, #92]
     170:	cmn	w0, #0x1
     174:	b.ne	1ec <tdb_brlock+0x158>  // b.any
     178:	ldr	w0, [sp, #24]
     17c:	cmp	w0, #0x0
     180:	b.ne	1d8 <tdb_brlock+0x144>  // b.any
     184:	ldr	w0, [sp, #28]
     188:	cmp	w0, #0x6
     18c:	b.eq	1d8 <tdb_brlock+0x144>  // b.none
     190:	ldr	x0, [sp, #40]
     194:	mov	w1, #0x3                   	// #3
     198:	str	w1, [x0, #56]
     19c:	ldr	x0, [sp, #40]
     1a0:	ldr	x8, [x0, #280]
     1a4:	ldr	x0, [sp, #40]
     1a8:	ldr	w0, [x0, #16]
     1ac:	ldr	x1, [sp, #16]
     1b0:	mov	w7, w1
     1b4:	ldr	w6, [sp, #28]
     1b8:	ldr	w5, [sp, #32]
     1bc:	ldr	w4, [sp, #36]
     1c0:	mov	w3, w0
     1c4:	adrp	x0, 0 <ext2fs_tdb_error>
     1c8:	add	x2, x0, #0x0
     1cc:	mov	w1, #0x3                   	// #3
     1d0:	ldr	x0, [sp, #40]
     1d4:	blr	x8
     1d8:	ldr	x0, [sp, #40]
     1dc:	mov	w1, #0x3                   	// #3
     1e0:	str	w1, [x0, #56]
     1e4:	mov	w0, #0xffffffff            	// #-1
     1e8:	b	1f0 <tdb_brlock+0x15c>
     1ec:	mov	w0, #0x0                   	// #0
     1f0:	ldp	x29, x30, [sp], #96
     1f4:	ret

00000000000001f8 <tdb_brlock_upgrade>:
     1f8:	stp	x29, x30, [sp, #-80]!
     1fc:	mov	x29, sp
     200:	str	x0, [sp, #40]
     204:	str	w1, [sp, #36]
     208:	str	x2, [sp, #24]
     20c:	mov	w0, #0x3e8                 	// #1000
     210:	str	w0, [sp, #76]
     214:	b	27c <tdb_brlock_upgrade+0x84>
     218:	ldr	x5, [sp, #24]
     21c:	mov	w4, #0x1                   	// #1
     220:	mov	w3, #0x7                   	// #7
     224:	mov	w2, #0x1                   	// #1
     228:	ldr	w1, [sp, #36]
     22c:	ldr	x0, [sp, #40]
     230:	bl	94 <tdb_brlock>
     234:	cmp	w0, #0x0
     238:	b.ne	244 <tdb_brlock_upgrade+0x4c>  // b.any
     23c:	mov	w0, #0x0                   	// #0
     240:	b	2bc <tdb_brlock_upgrade+0xc4>
     244:	bl	0 <__errno_location>
     248:	ldr	w0, [x0]
     24c:	cmp	w0, #0x23
     250:	b.ne	294 <tdb_brlock_upgrade+0x9c>  // b.any
     254:	str	xzr, [sp, #56]
     258:	mov	x0, #0x1                   	// #1
     25c:	str	x0, [sp, #64]
     260:	add	x0, sp, #0x38
     264:	mov	x4, x0
     268:	mov	x3, #0x0                   	// #0
     26c:	mov	x2, #0x0                   	// #0
     270:	mov	x1, #0x0                   	// #0
     274:	mov	w0, #0x0                   	// #0
     278:	bl	0 <select>
     27c:	ldr	w0, [sp, #76]
     280:	sub	w1, w0, #0x1
     284:	str	w1, [sp, #76]
     288:	cmp	w0, #0x0
     28c:	b.ne	218 <tdb_brlock_upgrade+0x20>  // b.any
     290:	b	298 <tdb_brlock_upgrade+0xa0>
     294:	nop
     298:	ldr	x0, [sp, #40]
     29c:	ldr	x4, [x0, #280]
     2a0:	ldr	w3, [sp, #36]
     2a4:	adrp	x0, 0 <ext2fs_tdb_error>
     2a8:	add	x2, x0, #0x0
     2ac:	mov	w1, #0x3                   	// #3
     2b0:	ldr	x0, [sp, #40]
     2b4:	blr	x4
     2b8:	mov	w0, #0xffffffff            	// #-1
     2bc:	ldp	x29, x30, [sp], #80
     2c0:	ret

00000000000002c4 <_tdb_lock>:
     2c4:	stp	x29, x30, [sp, #-64]!
     2c8:	mov	x29, sp
     2cc:	str	x0, [sp, #40]
     2d0:	str	w1, [sp, #36]
     2d4:	str	w2, [sp, #32]
     2d8:	str	w3, [sp, #28]
     2dc:	ldr	w0, [sp, #32]
     2e0:	lsr	w0, w0, #31
     2e4:	and	w0, w0, #0xff
     2e8:	str	w0, [sp, #56]
     2ec:	ldr	w0, [sp, #32]
     2f0:	and	w0, w0, #0x7fffffff
     2f4:	str	w0, [sp, #32]
     2f8:	ldr	x0, [sp, #40]
     2fc:	ldr	w0, [x0, #36]
     300:	cmp	w0, #0x0
     304:	b.eq	330 <_tdb_lock+0x6c>  // b.none
     308:	ldr	x0, [sp, #40]
     30c:	ldr	w1, [x0, #40]
     310:	ldr	w0, [sp, #32]
     314:	cmp	w1, w0
     318:	b.eq	328 <_tdb_lock+0x64>  // b.none
     31c:	ldr	w0, [sp, #32]
     320:	cmp	w0, #0x0
     324:	b.ne	330 <_tdb_lock+0x6c>  // b.any
     328:	mov	w0, #0x0                   	// #0
     32c:	b	60c <_tdb_lock+0x348>
     330:	ldr	x0, [sp, #40]
     334:	ldr	w0, [x0, #36]
     338:	cmp	w0, #0x0
     33c:	b.eq	354 <_tdb_lock+0x90>  // b.none
     340:	ldr	x0, [sp, #40]
     344:	mov	w1, #0x3                   	// #3
     348:	str	w1, [x0, #56]
     34c:	mov	w0, #0xffffffff            	// #-1
     350:	b	60c <_tdb_lock+0x348>
     354:	ldr	w0, [sp, #36]
     358:	cmn	w0, #0x1
     35c:	b.lt	378 <_tdb_lock+0xb4>  // b.tstop
     360:	ldr	x0, [sp, #40]
     364:	ldr	w0, [x0, #96]
     368:	mov	w1, w0
     36c:	ldr	w0, [sp, #36]
     370:	cmp	w0, w1
     374:	b.lt	3a4 <_tdb_lock+0xe0>  // b.tstop
     378:	ldr	x0, [sp, #40]
     37c:	ldr	x5, [x0, #280]
     380:	ldr	w4, [sp, #32]
     384:	ldr	w3, [sp, #36]
     388:	adrp	x0, 0 <ext2fs_tdb_error>
     38c:	add	x2, x0, #0x0
     390:	mov	w1, #0x1                   	// #1
     394:	ldr	x0, [sp, #40]
     398:	blr	x5
     39c:	mov	w0, #0xffffffff            	// #-1
     3a0:	b	60c <_tdb_lock+0x348>
     3a4:	ldr	x0, [sp, #40]
     3a8:	ldr	w0, [x0, #228]
     3ac:	and	w0, w0, #0x4
     3b0:	cmp	w0, #0x0
     3b4:	b.eq	3c0 <_tdb_lock+0xfc>  // b.none
     3b8:	mov	w0, #0x0                   	// #0
     3bc:	b	60c <_tdb_lock+0x348>
     3c0:	str	wzr, [sp, #60]
     3c4:	b	484 <_tdb_lock+0x1c0>
     3c8:	ldr	x0, [sp, #40]
     3cc:	ldr	x2, [x0, #48]
     3d0:	ldrsw	x1, [sp, #60]
     3d4:	mov	x0, x1
     3d8:	lsl	x0, x0, #1
     3dc:	add	x0, x0, x1
     3e0:	lsl	x0, x0, #2
     3e4:	add	x0, x2, x0
     3e8:	ldr	w0, [x0]
     3ec:	ldr	w1, [sp, #36]
     3f0:	cmp	w1, w0
     3f4:	b.ne	478 <_tdb_lock+0x1b4>  // b.any
     3f8:	ldr	x0, [sp, #40]
     3fc:	ldr	x2, [x0, #48]
     400:	ldrsw	x1, [sp, #60]
     404:	mov	x0, x1
     408:	lsl	x0, x0, #1
     40c:	add	x0, x0, x1
     410:	lsl	x0, x0, #2
     414:	add	x0, x2, x0
     418:	ldr	w0, [x0, #4]
     41c:	cmp	w0, #0x0
     420:	b.ne	444 <_tdb_lock+0x180>  // b.any
     424:	ldr	x0, [sp, #40]
     428:	ldr	x4, [x0, #280]
     42c:	ldr	w3, [sp, #36]
     430:	adrp	x0, 0 <ext2fs_tdb_error>
     434:	add	x2, x0, #0x0
     438:	mov	w1, #0x1                   	// #1
     43c:	ldr	x0, [sp, #40]
     440:	blr	x4
     444:	ldr	x0, [sp, #40]
     448:	ldr	x2, [x0, #48]
     44c:	ldrsw	x1, [sp, #60]
     450:	mov	x0, x1
     454:	lsl	x0, x0, #1
     458:	add	x0, x0, x1
     45c:	lsl	x0, x0, #2
     460:	add	x0, x2, x0
     464:	ldr	w1, [x0, #4]
     468:	add	w1, w1, #0x1
     46c:	str	w1, [x0, #4]
     470:	mov	w0, #0x0                   	// #0
     474:	b	60c <_tdb_lock+0x348>
     478:	ldr	w0, [sp, #60]
     47c:	add	w0, w0, #0x1
     480:	str	w0, [sp, #60]
     484:	ldr	x0, [sp, #40]
     488:	ldr	w0, [x0, #44]
     48c:	ldr	w1, [sp, #60]
     490:	cmp	w1, w0
     494:	b.lt	3c8 <_tdb_lock+0x104>  // b.tstop
     498:	ldr	x0, [sp, #40]
     49c:	ldr	x2, [x0, #48]
     4a0:	ldr	x0, [sp, #40]
     4a4:	ldr	w0, [x0, #44]
     4a8:	add	w0, w0, #0x1
     4ac:	sxtw	x1, w0
     4b0:	mov	x0, x1
     4b4:	lsl	x0, x0, #1
     4b8:	add	x0, x0, x1
     4bc:	lsl	x0, x0, #2
     4c0:	mov	x1, x0
     4c4:	mov	x0, x2
     4c8:	bl	0 <realloc>
     4cc:	str	x0, [sp, #48]
     4d0:	ldr	x0, [sp, #48]
     4d4:	cmp	x0, #0x0
     4d8:	b.ne	4f4 <_tdb_lock+0x230>  // b.any
     4dc:	bl	0 <__errno_location>
     4e0:	mov	x1, x0
     4e4:	mov	w0, #0xc                   	// #12
     4e8:	str	w0, [x1]
     4ec:	mov	w0, #0xffffffff            	// #-1
     4f0:	b	60c <_tdb_lock+0x348>
     4f4:	ldr	x0, [sp, #40]
     4f8:	ldr	x1, [sp, #48]
     4fc:	str	x1, [x0, #48]
     500:	ldr	w0, [sp, #56]
     504:	cmp	w0, #0x0
     508:	b.ne	550 <_tdb_lock+0x28c>  // b.any
     50c:	ldr	x0, [sp, #40]
     510:	ldr	x0, [x0, #312]
     514:	ldr	x6, [x0, #40]
     518:	ldr	w0, [sp, #36]
     51c:	lsl	w0, w0, #2
     520:	add	w0, w0, #0xa8
     524:	mov	x5, #0x1                   	// #1
     528:	mov	w4, #0x0                   	// #0
     52c:	ldr	w3, [sp, #28]
     530:	ldr	w2, [sp, #32]
     534:	mov	w1, w0
     538:	ldr	x0, [sp, #40]
     53c:	blr	x6
     540:	cmp	w0, #0x0
     544:	b.eq	550 <_tdb_lock+0x28c>  // b.none
     548:	mov	w0, #0xffffffff            	// #-1
     54c:	b	60c <_tdb_lock+0x348>
     550:	ldr	x0, [sp, #40]
     554:	ldr	w0, [x0, #308]
     558:	add	w1, w0, #0x1
     55c:	ldr	x0, [sp, #40]
     560:	str	w1, [x0, #308]
     564:	ldr	x0, [sp, #40]
     568:	ldr	x2, [x0, #48]
     56c:	ldr	x0, [sp, #40]
     570:	ldr	w0, [x0, #44]
     574:	sxtw	x1, w0
     578:	mov	x0, x1
     57c:	lsl	x0, x0, #1
     580:	add	x0, x0, x1
     584:	lsl	x0, x0, #2
     588:	add	x0, x2, x0
     58c:	ldr	w1, [sp, #36]
     590:	str	w1, [x0]
     594:	ldr	x0, [sp, #40]
     598:	ldr	x2, [x0, #48]
     59c:	ldr	x0, [sp, #40]
     5a0:	ldr	w0, [x0, #44]
     5a4:	sxtw	x1, w0
     5a8:	mov	x0, x1
     5ac:	lsl	x0, x0, #1
     5b0:	add	x0, x0, x1
     5b4:	lsl	x0, x0, #2
     5b8:	add	x0, x2, x0
     5bc:	mov	w1, #0x1                   	// #1
     5c0:	str	w1, [x0, #4]
     5c4:	ldr	x0, [sp, #40]
     5c8:	ldr	x2, [x0, #48]
     5cc:	ldr	x0, [sp, #40]
     5d0:	ldr	w0, [x0, #44]
     5d4:	sxtw	x1, w0
     5d8:	mov	x0, x1
     5dc:	lsl	x0, x0, #1
     5e0:	add	x0, x0, x1
     5e4:	lsl	x0, x0, #2
     5e8:	add	x0, x2, x0
     5ec:	ldr	w1, [sp, #32]
     5f0:	str	w1, [x0, #8]
     5f4:	ldr	x0, [sp, #40]
     5f8:	ldr	w0, [x0, #44]
     5fc:	add	w1, w0, #0x1
     600:	ldr	x0, [sp, #40]
     604:	str	w1, [x0, #44]
     608:	mov	w0, #0x0                   	// #0
     60c:	ldp	x29, x30, [sp], #64
     610:	ret

0000000000000614 <tdb_lock>:
     614:	stp	x29, x30, [sp, #-64]!
     618:	mov	x29, sp
     61c:	str	x19, [sp, #16]
     620:	str	x0, [sp, #40]
     624:	str	w1, [sp, #36]
     628:	str	w2, [sp, #32]
     62c:	mov	w3, #0x7                   	// #7
     630:	ldr	w2, [sp, #32]
     634:	ldr	w1, [sp, #36]
     638:	ldr	x0, [sp, #40]
     63c:	bl	2c4 <_tdb_lock>
     640:	str	w0, [sp, #60]
     644:	ldr	w0, [sp, #60]
     648:	cmp	w0, #0x0
     64c:	b.eq	684 <tdb_lock+0x70>  // b.none
     650:	ldr	x0, [sp, #40]
     654:	ldr	x19, [x0, #280]
     658:	bl	0 <__errno_location>
     65c:	ldr	w0, [x0]
     660:	bl	0 <strerror>
     664:	mov	x5, x0
     668:	ldr	w4, [sp, #32]
     66c:	ldr	w3, [sp, #36]
     670:	adrp	x0, 0 <ext2fs_tdb_error>
     674:	add	x2, x0, #0x0
     678:	mov	w1, #0x1                   	// #1
     67c:	ldr	x0, [sp, #40]
     680:	blr	x19
     684:	ldr	w0, [sp, #60]
     688:	ldr	x19, [sp, #16]
     68c:	ldp	x29, x30, [sp], #64
     690:	ret

0000000000000694 <ext2fs_tdb_lock_nonblock>:
     694:	stp	x29, x30, [sp, #-32]!
     698:	mov	x29, sp
     69c:	str	x0, [sp, #24]
     6a0:	str	w1, [sp, #20]
     6a4:	str	w2, [sp, #16]
     6a8:	mov	w3, #0x6                   	// #6
     6ac:	ldr	w2, [sp, #16]
     6b0:	ldr	w1, [sp, #20]
     6b4:	ldr	x0, [sp, #24]
     6b8:	bl	2c4 <_tdb_lock>
     6bc:	ldp	x29, x30, [sp], #32
     6c0:	ret

00000000000006c4 <tdb_unlock>:
     6c4:	stp	x29, x30, [sp, #-64]!
     6c8:	mov	x29, sp
     6cc:	str	x0, [sp, #24]
     6d0:	str	w1, [sp, #20]
     6d4:	str	w2, [sp, #16]
     6d8:	mov	w0, #0xffffffff            	// #-1
     6dc:	str	w0, [sp, #60]
     6e0:	str	xzr, [sp, #48]
     6e4:	ldr	w0, [sp, #16]
     6e8:	lsr	w0, w0, #31
     6ec:	and	w0, w0, #0xff
     6f0:	str	w0, [sp, #44]
     6f4:	ldr	w0, [sp, #16]
     6f8:	and	w0, w0, #0x7fffffff
     6fc:	str	w0, [sp, #16]
     700:	ldr	x0, [sp, #24]
     704:	ldr	w0, [x0, #36]
     708:	cmp	w0, #0x0
     70c:	b.eq	738 <tdb_unlock+0x74>  // b.none
     710:	ldr	x0, [sp, #24]
     714:	ldr	w1, [x0, #40]
     718:	ldr	w0, [sp, #16]
     71c:	cmp	w1, w0
     720:	b.eq	730 <tdb_unlock+0x6c>  // b.none
     724:	ldr	w0, [sp, #16]
     728:	cmp	w0, #0x0
     72c:	b.ne	738 <tdb_unlock+0x74>  // b.any
     730:	mov	w0, #0x0                   	// #0
     734:	b	9e0 <tdb_unlock+0x31c>
     738:	ldr	x0, [sp, #24]
     73c:	ldr	w0, [x0, #36]
     740:	cmp	w0, #0x0
     744:	b.eq	75c <tdb_unlock+0x98>  // b.none
     748:	ldr	x0, [sp, #24]
     74c:	mov	w1, #0x3                   	// #3
     750:	str	w1, [x0, #56]
     754:	mov	w0, #0xffffffff            	// #-1
     758:	b	9e0 <tdb_unlock+0x31c>
     75c:	ldr	x0, [sp, #24]
     760:	ldr	w0, [x0, #228]
     764:	and	w0, w0, #0x4
     768:	cmp	w0, #0x0
     76c:	b.eq	778 <tdb_unlock+0xb4>  // b.none
     770:	mov	w0, #0x0                   	// #0
     774:	b	9e0 <tdb_unlock+0x31c>
     778:	ldr	w0, [sp, #20]
     77c:	cmn	w0, #0x1
     780:	b.lt	79c <tdb_unlock+0xd8>  // b.tstop
     784:	ldr	x0, [sp, #24]
     788:	ldr	w0, [x0, #96]
     78c:	mov	w1, w0
     790:	ldr	w0, [sp, #20]
     794:	cmp	w0, w1
     798:	b.lt	7d0 <tdb_unlock+0x10c>  // b.tstop
     79c:	ldr	x0, [sp, #24]
     7a0:	ldr	x5, [x0, #280]
     7a4:	ldr	x0, [sp, #24]
     7a8:	ldr	w0, [x0, #96]
     7ac:	mov	w4, w0
     7b0:	ldr	w3, [sp, #20]
     7b4:	adrp	x0, 0 <ext2fs_tdb_error>
     7b8:	add	x2, x0, #0x0
     7bc:	mov	w1, #0x1                   	// #1
     7c0:	ldr	x0, [sp, #24]
     7c4:	blr	x5
     7c8:	ldr	w0, [sp, #60]
     7cc:	b	9e0 <tdb_unlock+0x31c>
     7d0:	str	wzr, [sp, #56]
     7d4:	b	83c <tdb_unlock+0x178>
     7d8:	ldr	x0, [sp, #24]
     7dc:	ldr	x2, [x0, #48]
     7e0:	ldrsw	x1, [sp, #56]
     7e4:	mov	x0, x1
     7e8:	lsl	x0, x0, #1
     7ec:	add	x0, x0, x1
     7f0:	lsl	x0, x0, #2
     7f4:	add	x0, x2, x0
     7f8:	ldr	w0, [x0]
     7fc:	ldr	w1, [sp, #20]
     800:	cmp	w1, w0
     804:	b.ne	830 <tdb_unlock+0x16c>  // b.any
     808:	ldr	x0, [sp, #24]
     80c:	ldr	x2, [x0, #48]
     810:	ldrsw	x1, [sp, #56]
     814:	mov	x0, x1
     818:	lsl	x0, x0, #1
     81c:	add	x0, x0, x1
     820:	lsl	x0, x0, #2
     824:	add	x0, x2, x0
     828:	str	x0, [sp, #48]
     82c:	b	850 <tdb_unlock+0x18c>
     830:	ldr	w0, [sp, #56]
     834:	add	w0, w0, #0x1
     838:	str	w0, [sp, #56]
     83c:	ldr	x0, [sp, #24]
     840:	ldr	w0, [x0, #44]
     844:	ldr	w1, [sp, #56]
     848:	cmp	w1, w0
     84c:	b.lt	7d8 <tdb_unlock+0x114>  // b.tstop
     850:	ldr	x0, [sp, #48]
     854:	cmp	x0, #0x0
     858:	b.eq	86c <tdb_unlock+0x1a8>  // b.none
     85c:	ldr	x0, [sp, #48]
     860:	ldr	w0, [x0, #4]
     864:	cmp	w0, #0x0
     868:	b.ne	890 <tdb_unlock+0x1cc>  // b.any
     86c:	ldr	x0, [sp, #24]
     870:	ldr	x3, [x0, #280]
     874:	adrp	x0, 0 <ext2fs_tdb_error>
     878:	add	x2, x0, #0x0
     87c:	mov	w1, #0x1                   	// #1
     880:	ldr	x0, [sp, #24]
     884:	blr	x3
     888:	mov	w0, #0xffffffff            	// #-1
     88c:	b	9e0 <tdb_unlock+0x31c>
     890:	ldr	x0, [sp, #48]
     894:	ldr	w0, [x0, #4]
     898:	cmp	w0, #0x1
     89c:	b.ls	8bc <tdb_unlock+0x1f8>  // b.plast
     8a0:	ldr	x0, [sp, #48]
     8a4:	ldr	w0, [x0, #4]
     8a8:	sub	w1, w0, #0x1
     8ac:	ldr	x0, [sp, #48]
     8b0:	str	w1, [x0, #4]
     8b4:	mov	w0, #0x0                   	// #0
     8b8:	b	9e0 <tdb_unlock+0x31c>
     8bc:	ldr	w0, [sp, #44]
     8c0:	cmp	w0, #0x0
     8c4:	b.eq	8d0 <tdb_unlock+0x20c>  // b.none
     8c8:	str	wzr, [sp, #60]
     8cc:	b	908 <tdb_unlock+0x244>
     8d0:	ldr	x0, [sp, #24]
     8d4:	ldr	x0, [x0, #312]
     8d8:	ldr	x6, [x0, #40]
     8dc:	ldr	w0, [sp, #20]
     8e0:	lsl	w0, w0, #2
     8e4:	add	w0, w0, #0xa8
     8e8:	mov	x5, #0x1                   	// #1
     8ec:	mov	w4, #0x0                   	// #0
     8f0:	mov	w3, #0x7                   	// #7
     8f4:	mov	w2, #0x2                   	// #2
     8f8:	mov	w1, w0
     8fc:	ldr	x0, [sp, #24]
     900:	blr	x6
     904:	str	w0, [sp, #60]
     908:	ldr	x0, [sp, #24]
     90c:	ldr	w0, [x0, #308]
     910:	sub	w1, w0, #0x1
     914:	ldr	x0, [sp, #24]
     918:	str	w1, [x0, #308]
     91c:	ldr	x0, [sp, #24]
     920:	ldr	w0, [x0, #44]
     924:	cmp	w0, #0x1
     928:	b.le	96c <tdb_unlock+0x2a8>
     92c:	ldr	x0, [sp, #24]
     930:	ldr	x2, [x0, #48]
     934:	ldr	x0, [sp, #24]
     938:	ldr	w0, [x0, #44]
     93c:	sxtw	x1, w0
     940:	mov	x0, x1
     944:	lsl	x0, x0, #1
     948:	add	x0, x0, x1
     94c:	lsl	x0, x0, #2
     950:	sub	x0, x0, #0xc
     954:	add	x1, x2, x0
     958:	ldr	x0, [sp, #48]
     95c:	ldr	x2, [x1]
     960:	str	x2, [x0]
     964:	ldr	w1, [x1, #8]
     968:	str	w1, [x0, #8]
     96c:	ldr	x0, [sp, #24]
     970:	ldr	w0, [x0, #44]
     974:	sub	w1, w0, #0x1
     978:	ldr	x0, [sp, #24]
     97c:	str	w1, [x0, #44]
     980:	ldr	x0, [sp, #24]
     984:	ldr	w0, [x0, #44]
     988:	cmp	w0, #0x0
     98c:	b.ne	9b4 <tdb_unlock+0x2f0>  // b.any
     990:	ldr	x0, [sp, #24]
     994:	ldr	x0, [x0, #48]
     998:	cmp	x0, #0x0
     99c:	b.eq	9b4 <tdb_unlock+0x2f0>  // b.none
     9a0:	ldr	x0, [sp, #24]
     9a4:	ldr	x0, [x0, #48]
     9a8:	bl	0 <free>
     9ac:	ldr	x0, [sp, #24]
     9b0:	str	xzr, [x0, #48]
     9b4:	ldr	w0, [sp, #60]
     9b8:	cmp	w0, #0x0
     9bc:	b.eq	9dc <tdb_unlock+0x318>  // b.none
     9c0:	ldr	x0, [sp, #24]
     9c4:	ldr	x3, [x0, #280]
     9c8:	adrp	x0, 0 <ext2fs_tdb_error>
     9cc:	add	x2, x0, #0x0
     9d0:	mov	w1, #0x1                   	// #1
     9d4:	ldr	x0, [sp, #24]
     9d8:	blr	x3
     9dc:	ldr	w0, [sp, #60]
     9e0:	ldp	x29, x30, [sp], #64
     9e4:	ret

00000000000009e8 <tdb_transaction_lock>:
     9e8:	stp	x29, x30, [sp, #-32]!
     9ec:	mov	x29, sp
     9f0:	str	x0, [sp, #24]
     9f4:	str	w1, [sp, #20]
     9f8:	ldr	x0, [sp, #24]
     9fc:	ldr	w0, [x0, #336]
     a00:	cmp	w0, #0x0
     a04:	b.ne	a18 <tdb_transaction_lock+0x30>  // b.any
     a08:	ldr	x0, [sp, #24]
     a0c:	ldr	w0, [x0, #36]
     a10:	cmp	w0, #0x0
     a14:	b.eq	a20 <tdb_transaction_lock+0x38>  // b.none
     a18:	mov	w0, #0x0                   	// #0
     a1c:	b	a90 <tdb_transaction_lock+0xa8>
     a20:	ldr	x0, [sp, #24]
     a24:	ldr	x0, [x0, #312]
     a28:	ldr	x6, [x0, #40]
     a2c:	mov	x5, #0x1                   	// #1
     a30:	mov	w4, #0x0                   	// #0
     a34:	mov	w3, #0x7                   	// #7
     a38:	ldr	w2, [sp, #20]
     a3c:	mov	w1, #0x8                   	// #8
     a40:	ldr	x0, [sp, #24]
     a44:	blr	x6
     a48:	cmn	w0, #0x1
     a4c:	b.ne	a80 <tdb_transaction_lock+0x98>  // b.any
     a50:	ldr	x0, [sp, #24]
     a54:	ldr	x3, [x0, #280]
     a58:	adrp	x0, 0 <ext2fs_tdb_error>
     a5c:	add	x2, x0, #0x0
     a60:	mov	w1, #0x1                   	// #1
     a64:	ldr	x0, [sp, #24]
     a68:	blr	x3
     a6c:	ldr	x0, [sp, #24]
     a70:	mov	w1, #0x3                   	// #3
     a74:	str	w1, [x0, #56]
     a78:	mov	w0, #0xffffffff            	// #-1
     a7c:	b	a90 <tdb_transaction_lock+0xa8>
     a80:	ldr	x0, [sp, #24]
     a84:	mov	w1, #0x1                   	// #1
     a88:	str	w1, [x0, #336]
     a8c:	mov	w0, #0x0                   	// #0
     a90:	ldp	x29, x30, [sp], #32
     a94:	ret

0000000000000a98 <tdb_transaction_unlock>:
     a98:	stp	x29, x30, [sp, #-48]!
     a9c:	mov	x29, sp
     aa0:	str	x0, [sp, #24]
     aa4:	ldr	x0, [sp, #24]
     aa8:	ldr	w0, [x0, #336]
     aac:	cmp	w0, #0x0
     ab0:	b.ne	abc <tdb_transaction_unlock+0x24>  // b.any
     ab4:	mov	w0, #0x0                   	// #0
     ab8:	b	b00 <tdb_transaction_unlock+0x68>
     abc:	ldr	x0, [sp, #24]
     ac0:	ldr	x0, [x0, #312]
     ac4:	ldr	x6, [x0, #40]
     ac8:	mov	x5, #0x1                   	// #1
     acc:	mov	w4, #0x0                   	// #0
     ad0:	mov	w3, #0x7                   	// #7
     ad4:	mov	w2, #0x2                   	// #2
     ad8:	mov	w1, #0x8                   	// #8
     adc:	ldr	x0, [sp, #24]
     ae0:	blr	x6
     ae4:	str	w0, [sp, #44]
     ae8:	ldr	w0, [sp, #44]
     aec:	cmp	w0, #0x0
     af0:	b.ne	afc <tdb_transaction_unlock+0x64>  // b.any
     af4:	ldr	x0, [sp, #24]
     af8:	str	wzr, [x0, #336]
     afc:	ldr	w0, [sp, #44]
     b00:	ldp	x29, x30, [sp], #48
     b04:	ret

0000000000000b08 <_tdb_lockall>:
     b08:	stp	x29, x30, [sp, #-64]!
     b0c:	mov	x29, sp
     b10:	str	x19, [sp, #16]
     b14:	str	x0, [sp, #40]
     b18:	str	w1, [sp, #36]
     b1c:	str	w2, [sp, #32]
     b20:	ldr	w0, [sp, #36]
     b24:	lsr	w0, w0, #31
     b28:	and	w0, w0, #0xff
     b2c:	str	w0, [sp, #60]
     b30:	ldr	w0, [sp, #36]
     b34:	and	w0, w0, #0x7fffffff
     b38:	str	w0, [sp, #36]
     b3c:	ldr	x0, [sp, #40]
     b40:	ldr	w0, [x0, #24]
     b44:	cmp	w0, #0x0
     b48:	b.ne	b5c <_tdb_lockall+0x54>  // b.any
     b4c:	ldr	x0, [sp, #40]
     b50:	ldr	w0, [x0, #28]
     b54:	cmp	w0, #0x0
     b58:	b.eq	b70 <_tdb_lockall+0x68>  // b.none
     b5c:	ldr	x0, [sp, #40]
     b60:	mov	w1, #0x3                   	// #3
     b64:	str	w1, [x0, #56]
     b68:	mov	w0, #0xffffffff            	// #-1
     b6c:	b	ca0 <_tdb_lockall+0x198>
     b70:	ldr	x0, [sp, #40]
     b74:	ldr	w0, [x0, #36]
     b78:	cmp	w0, #0x0
     b7c:	b.eq	bb0 <_tdb_lockall+0xa8>  // b.none
     b80:	ldr	x0, [sp, #40]
     b84:	ldr	w1, [x0, #40]
     b88:	ldr	w0, [sp, #36]
     b8c:	cmp	w1, w0
     b90:	b.ne	bb0 <_tdb_lockall+0xa8>  // b.any
     b94:	ldr	x0, [sp, #40]
     b98:	ldr	w0, [x0, #36]
     b9c:	add	w1, w0, #0x1
     ba0:	ldr	x0, [sp, #40]
     ba4:	str	w1, [x0, #36]
     ba8:	mov	w0, #0x0                   	// #0
     bac:	b	ca0 <_tdb_lockall+0x198>
     bb0:	ldr	x0, [sp, #40]
     bb4:	ldr	w0, [x0, #36]
     bb8:	cmp	w0, #0x0
     bbc:	b.eq	bd4 <_tdb_lockall+0xcc>  // b.none
     bc0:	ldr	x0, [sp, #40]
     bc4:	mov	w1, #0x3                   	// #3
     bc8:	str	w1, [x0, #56]
     bcc:	mov	w0, #0xffffffff            	// #-1
     bd0:	b	ca0 <_tdb_lockall+0x198>
     bd4:	ldr	x0, [sp, #40]
     bd8:	ldr	w0, [x0, #308]
     bdc:	cmp	w0, #0x0
     be0:	b.eq	bf8 <_tdb_lockall+0xf0>  // b.none
     be4:	ldr	x0, [sp, #40]
     be8:	mov	w1, #0x3                   	// #3
     bec:	str	w1, [x0, #56]
     bf0:	mov	w0, #0xffffffff            	// #-1
     bf4:	b	ca0 <_tdb_lockall+0x198>
     bf8:	ldr	w0, [sp, #60]
     bfc:	cmp	w0, #0x0
     c00:	b.ne	c84 <_tdb_lockall+0x17c>  // b.any
     c04:	ldr	x0, [sp, #40]
     c08:	ldr	x0, [x0, #312]
     c0c:	ldr	x6, [x0, #40]
     c10:	ldr	x0, [sp, #40]
     c14:	ldr	w0, [x0, #96]
     c18:	lsl	w0, w0, #2
     c1c:	mov	w0, w0
     c20:	mov	x5, x0
     c24:	mov	w4, #0x0                   	// #0
     c28:	ldr	w3, [sp, #32]
     c2c:	ldr	w2, [sp, #36]
     c30:	mov	w1, #0xa8                  	// #168
     c34:	ldr	x0, [sp, #40]
     c38:	blr	x6
     c3c:	cmp	w0, #0x0
     c40:	b.eq	c84 <_tdb_lockall+0x17c>  // b.none
     c44:	ldr	w0, [sp, #32]
     c48:	cmp	w0, #0x7
     c4c:	b.ne	c7c <_tdb_lockall+0x174>  // b.any
     c50:	ldr	x0, [sp, #40]
     c54:	ldr	x19, [x0, #280]
     c58:	bl	0 <__errno_location>
     c5c:	ldr	w0, [x0]
     c60:	bl	0 <strerror>
     c64:	mov	x3, x0
     c68:	adrp	x0, 0 <ext2fs_tdb_error>
     c6c:	add	x2, x0, #0x0
     c70:	mov	w1, #0x1                   	// #1
     c74:	ldr	x0, [sp, #40]
     c78:	blr	x19
     c7c:	mov	w0, #0xffffffff            	// #-1
     c80:	b	ca0 <_tdb_lockall+0x198>
     c84:	ldr	x0, [sp, #40]
     c88:	mov	w1, #0x1                   	// #1
     c8c:	str	w1, [x0, #36]
     c90:	ldr	w1, [sp, #36]
     c94:	ldr	x0, [sp, #40]
     c98:	str	w1, [x0, #40]
     c9c:	mov	w0, #0x0                   	// #0
     ca0:	ldr	x19, [sp, #16]
     ca4:	ldp	x29, x30, [sp], #64
     ca8:	ret

0000000000000cac <_tdb_unlockall>:
     cac:	stp	x29, x30, [sp, #-64]!
     cb0:	mov	x29, sp
     cb4:	str	x19, [sp, #16]
     cb8:	str	x0, [sp, #40]
     cbc:	str	w1, [sp, #36]
     cc0:	ldr	w0, [sp, #36]
     cc4:	lsr	w0, w0, #31
     cc8:	and	w0, w0, #0xff
     ccc:	str	w0, [sp, #60]
     cd0:	ldr	w0, [sp, #36]
     cd4:	and	w0, w0, #0x7fffffff
     cd8:	str	w0, [sp, #36]
     cdc:	ldr	x0, [sp, #40]
     ce0:	ldr	w0, [x0, #24]
     ce4:	cmp	w0, #0x0
     ce8:	b.ne	cfc <_tdb_unlockall+0x50>  // b.any
     cec:	ldr	x0, [sp, #40]
     cf0:	ldr	w0, [x0, #28]
     cf4:	cmp	w0, #0x0
     cf8:	b.eq	d10 <_tdb_unlockall+0x64>  // b.none
     cfc:	ldr	x0, [sp, #40]
     d00:	mov	w1, #0x3                   	// #3
     d04:	str	w1, [x0, #56]
     d08:	mov	w0, #0xffffffff            	// #-1
     d0c:	b	e08 <_tdb_unlockall+0x15c>
     d10:	ldr	x0, [sp, #40]
     d14:	ldr	w1, [x0, #40]
     d18:	ldr	w0, [sp, #36]
     d1c:	cmp	w1, w0
     d20:	b.ne	d34 <_tdb_unlockall+0x88>  // b.any
     d24:	ldr	x0, [sp, #40]
     d28:	ldr	w0, [x0, #36]
     d2c:	cmp	w0, #0x0
     d30:	b.ne	d48 <_tdb_unlockall+0x9c>  // b.any
     d34:	ldr	x0, [sp, #40]
     d38:	mov	w1, #0x3                   	// #3
     d3c:	str	w1, [x0, #56]
     d40:	mov	w0, #0xffffffff            	// #-1
     d44:	b	e08 <_tdb_unlockall+0x15c>
     d48:	ldr	x0, [sp, #40]
     d4c:	ldr	w0, [x0, #36]
     d50:	cmp	w0, #0x1
     d54:	b.ls	d74 <_tdb_unlockall+0xc8>  // b.plast
     d58:	ldr	x0, [sp, #40]
     d5c:	ldr	w0, [x0, #36]
     d60:	sub	w1, w0, #0x1
     d64:	ldr	x0, [sp, #40]
     d68:	str	w1, [x0, #36]
     d6c:	mov	w0, #0x0                   	// #0
     d70:	b	e08 <_tdb_unlockall+0x15c>
     d74:	ldr	w0, [sp, #60]
     d78:	cmp	w0, #0x0
     d7c:	b.ne	df4 <_tdb_unlockall+0x148>  // b.any
     d80:	ldr	x0, [sp, #40]
     d84:	ldr	x0, [x0, #312]
     d88:	ldr	x6, [x0, #40]
     d8c:	ldr	x0, [sp, #40]
     d90:	ldr	w0, [x0, #96]
     d94:	lsl	w0, w0, #2
     d98:	mov	w0, w0
     d9c:	mov	x5, x0
     da0:	mov	w4, #0x0                   	// #0
     da4:	mov	w3, #0x7                   	// #7
     da8:	mov	w2, #0x2                   	// #2
     dac:	mov	w1, #0xa8                  	// #168
     db0:	ldr	x0, [sp, #40]
     db4:	blr	x6
     db8:	cmp	w0, #0x0
     dbc:	b.eq	df4 <_tdb_unlockall+0x148>  // b.none
     dc0:	ldr	x0, [sp, #40]
     dc4:	ldr	x19, [x0, #280]
     dc8:	bl	0 <__errno_location>
     dcc:	ldr	w0, [x0]
     dd0:	bl	0 <strerror>
     dd4:	mov	x3, x0
     dd8:	adrp	x0, 0 <ext2fs_tdb_error>
     ddc:	add	x2, x0, #0x0
     de0:	mov	w1, #0x1                   	// #1
     de4:	ldr	x0, [sp, #40]
     de8:	blr	x19
     dec:	mov	w0, #0xffffffff            	// #-1
     df0:	b	e08 <_tdb_unlockall+0x15c>
     df4:	ldr	x0, [sp, #40]
     df8:	str	wzr, [x0, #36]
     dfc:	ldr	x0, [sp, #40]
     e00:	str	wzr, [x0, #40]
     e04:	mov	w0, #0x0                   	// #0
     e08:	ldr	x19, [sp, #16]
     e0c:	ldp	x29, x30, [sp], #64
     e10:	ret

0000000000000e14 <ext2fs_tdb_lockall>:
     e14:	stp	x29, x30, [sp, #-32]!
     e18:	mov	x29, sp
     e1c:	str	x0, [sp, #24]
     e20:	mov	w2, #0x7                   	// #7
     e24:	mov	w1, #0x1                   	// #1
     e28:	ldr	x0, [sp, #24]
     e2c:	bl	b08 <_tdb_lockall>
     e30:	ldp	x29, x30, [sp], #32
     e34:	ret

0000000000000e38 <ext2fs_tdb_lockall_mark>:
     e38:	stp	x29, x30, [sp, #-32]!
     e3c:	mov	x29, sp
     e40:	str	x0, [sp, #24]
     e44:	mov	w2, #0x7                   	// #7
     e48:	mov	w1, #0x80000001            	// #-2147483647
     e4c:	ldr	x0, [sp, #24]
     e50:	bl	b08 <_tdb_lockall>
     e54:	ldp	x29, x30, [sp], #32
     e58:	ret

0000000000000e5c <ext2fs_tdb_lockall_unmark>:
     e5c:	stp	x29, x30, [sp, #-32]!
     e60:	mov	x29, sp
     e64:	str	x0, [sp, #24]
     e68:	mov	w1, #0x80000001            	// #-2147483647
     e6c:	ldr	x0, [sp, #24]
     e70:	bl	cac <_tdb_unlockall>
     e74:	ldp	x29, x30, [sp], #32
     e78:	ret

0000000000000e7c <ext2fs_tdb_lockall_nonblock>:
     e7c:	stp	x29, x30, [sp, #-32]!
     e80:	mov	x29, sp
     e84:	str	x0, [sp, #24]
     e88:	mov	w2, #0x6                   	// #6
     e8c:	mov	w1, #0x1                   	// #1
     e90:	ldr	x0, [sp, #24]
     e94:	bl	b08 <_tdb_lockall>
     e98:	ldp	x29, x30, [sp], #32
     e9c:	ret

0000000000000ea0 <ext2fs_tdb_unlockall>:
     ea0:	stp	x29, x30, [sp, #-32]!
     ea4:	mov	x29, sp
     ea8:	str	x0, [sp, #24]
     eac:	mov	w1, #0x1                   	// #1
     eb0:	ldr	x0, [sp, #24]
     eb4:	bl	cac <_tdb_unlockall>
     eb8:	ldp	x29, x30, [sp], #32
     ebc:	ret

0000000000000ec0 <ext2fs_tdb_lockall_read>:
     ec0:	stp	x29, x30, [sp, #-32]!
     ec4:	mov	x29, sp
     ec8:	str	x0, [sp, #24]
     ecc:	mov	w2, #0x7                   	// #7
     ed0:	mov	w1, #0x0                   	// #0
     ed4:	ldr	x0, [sp, #24]
     ed8:	bl	b08 <_tdb_lockall>
     edc:	ldp	x29, x30, [sp], #32
     ee0:	ret

0000000000000ee4 <ext2fs_tdb_lockall_read_nonblock>:
     ee4:	stp	x29, x30, [sp, #-32]!
     ee8:	mov	x29, sp
     eec:	str	x0, [sp, #24]
     ef0:	mov	w2, #0x6                   	// #6
     ef4:	mov	w1, #0x0                   	// #0
     ef8:	ldr	x0, [sp, #24]
     efc:	bl	b08 <_tdb_lockall>
     f00:	ldp	x29, x30, [sp], #32
     f04:	ret

0000000000000f08 <ext2fs_tdb_unlockall_read>:
     f08:	stp	x29, x30, [sp, #-32]!
     f0c:	mov	x29, sp
     f10:	str	x0, [sp, #24]
     f14:	mov	w1, #0x0                   	// #0
     f18:	ldr	x0, [sp, #24]
     f1c:	bl	cac <_tdb_unlockall>
     f20:	ldp	x29, x30, [sp], #32
     f24:	ret

0000000000000f28 <ext2fs_tdb_chainlock>:
     f28:	stp	x29, x30, [sp, #-48]!
     f2c:	mov	x29, sp
     f30:	str	x0, [sp, #40]
     f34:	stp	x1, x2, [sp, #24]
     f38:	ldr	x0, [sp, #40]
     f3c:	ldr	x1, [x0, #296]
     f40:	add	x0, sp, #0x18
     f44:	blr	x1
     f48:	mov	w1, w0
     f4c:	ldr	x0, [sp, #40]
     f50:	ldr	w0, [x0, #96]
     f54:	udiv	w2, w1, w0
     f58:	mul	w0, w2, w0
     f5c:	sub	w0, w1, w0
     f60:	mov	w2, #0x1                   	// #1
     f64:	mov	w1, w0
     f68:	ldr	x0, [sp, #40]
     f6c:	bl	614 <tdb_lock>
     f70:	ldp	x29, x30, [sp], #48
     f74:	ret

0000000000000f78 <ext2fs_tdb_chainlock_nonblock>:
     f78:	stp	x29, x30, [sp, #-48]!
     f7c:	mov	x29, sp
     f80:	str	x0, [sp, #40]
     f84:	stp	x1, x2, [sp, #24]
     f88:	ldr	x0, [sp, #40]
     f8c:	ldr	x1, [x0, #296]
     f90:	add	x0, sp, #0x18
     f94:	blr	x1
     f98:	mov	w1, w0
     f9c:	ldr	x0, [sp, #40]
     fa0:	ldr	w0, [x0, #96]
     fa4:	udiv	w2, w1, w0
     fa8:	mul	w0, w2, w0
     fac:	sub	w0, w1, w0
     fb0:	mov	w2, #0x1                   	// #1
     fb4:	mov	w1, w0
     fb8:	ldr	x0, [sp, #40]
     fbc:	bl	694 <ext2fs_tdb_lock_nonblock>
     fc0:	ldp	x29, x30, [sp], #48
     fc4:	ret

0000000000000fc8 <ext2fs_tdb_chainlock_mark>:
     fc8:	stp	x29, x30, [sp, #-48]!
     fcc:	mov	x29, sp
     fd0:	str	x0, [sp, #40]
     fd4:	stp	x1, x2, [sp, #24]
     fd8:	ldr	x0, [sp, #40]
     fdc:	ldr	x1, [x0, #296]
     fe0:	add	x0, sp, #0x18
     fe4:	blr	x1
     fe8:	mov	w1, w0
     fec:	ldr	x0, [sp, #40]
     ff0:	ldr	w0, [x0, #96]
     ff4:	udiv	w2, w1, w0
     ff8:	mul	w0, w2, w0
     ffc:	sub	w0, w1, w0
    1000:	mov	w2, #0x80000001            	// #-2147483647
    1004:	mov	w1, w0
    1008:	ldr	x0, [sp, #40]
    100c:	bl	614 <tdb_lock>
    1010:	ldp	x29, x30, [sp], #48
    1014:	ret

0000000000001018 <ext2fs_tdb_chainlock_unmark>:
    1018:	stp	x29, x30, [sp, #-48]!
    101c:	mov	x29, sp
    1020:	str	x0, [sp, #40]
    1024:	stp	x1, x2, [sp, #24]
    1028:	ldr	x0, [sp, #40]
    102c:	ldr	x1, [x0, #296]
    1030:	add	x0, sp, #0x18
    1034:	blr	x1
    1038:	mov	w1, w0
    103c:	ldr	x0, [sp, #40]
    1040:	ldr	w0, [x0, #96]
    1044:	udiv	w2, w1, w0
    1048:	mul	w0, w2, w0
    104c:	sub	w0, w1, w0
    1050:	mov	w2, #0x80000001            	// #-2147483647
    1054:	mov	w1, w0
    1058:	ldr	x0, [sp, #40]
    105c:	bl	6c4 <tdb_unlock>
    1060:	ldp	x29, x30, [sp], #48
    1064:	ret

0000000000001068 <ext2fs_tdb_chainunlock>:
    1068:	stp	x29, x30, [sp, #-48]!
    106c:	mov	x29, sp
    1070:	str	x0, [sp, #40]
    1074:	stp	x1, x2, [sp, #24]
    1078:	ldr	x0, [sp, #40]
    107c:	ldr	x1, [x0, #296]
    1080:	add	x0, sp, #0x18
    1084:	blr	x1
    1088:	mov	w1, w0
    108c:	ldr	x0, [sp, #40]
    1090:	ldr	w0, [x0, #96]
    1094:	udiv	w2, w1, w0
    1098:	mul	w0, w2, w0
    109c:	sub	w0, w1, w0
    10a0:	mov	w2, #0x1                   	// #1
    10a4:	mov	w1, w0
    10a8:	ldr	x0, [sp, #40]
    10ac:	bl	6c4 <tdb_unlock>
    10b0:	ldp	x29, x30, [sp], #48
    10b4:	ret

00000000000010b8 <ext2fs_tdb_chainlock_read>:
    10b8:	stp	x29, x30, [sp, #-48]!
    10bc:	mov	x29, sp
    10c0:	str	x0, [sp, #40]
    10c4:	stp	x1, x2, [sp, #24]
    10c8:	ldr	x0, [sp, #40]
    10cc:	ldr	x1, [x0, #296]
    10d0:	add	x0, sp, #0x18
    10d4:	blr	x1
    10d8:	mov	w1, w0
    10dc:	ldr	x0, [sp, #40]
    10e0:	ldr	w0, [x0, #96]
    10e4:	udiv	w2, w1, w0
    10e8:	mul	w0, w2, w0
    10ec:	sub	w0, w1, w0
    10f0:	mov	w2, #0x0                   	// #0
    10f4:	mov	w1, w0
    10f8:	ldr	x0, [sp, #40]
    10fc:	bl	614 <tdb_lock>
    1100:	ldp	x29, x30, [sp], #48
    1104:	ret

0000000000001108 <ext2fs_tdb_chainunlock_read>:
    1108:	stp	x29, x30, [sp, #-48]!
    110c:	mov	x29, sp
    1110:	str	x0, [sp, #40]
    1114:	stp	x1, x2, [sp, #24]
    1118:	ldr	x0, [sp, #40]
    111c:	ldr	x1, [x0, #296]
    1120:	add	x0, sp, #0x18
    1124:	blr	x1
    1128:	mov	w1, w0
    112c:	ldr	x0, [sp, #40]
    1130:	ldr	w0, [x0, #96]
    1134:	udiv	w2, w1, w0
    1138:	mul	w0, w2, w0
    113c:	sub	w0, w1, w0
    1140:	mov	w2, #0x0                   	// #0
    1144:	mov	w1, w0
    1148:	ldr	x0, [sp, #40]
    114c:	bl	6c4 <tdb_unlock>
    1150:	ldp	x29, x30, [sp], #48
    1154:	ret

0000000000001158 <tdb_lock_record>:
    1158:	stp	x29, x30, [sp, #-32]!
    115c:	mov	x29, sp
    1160:	str	x0, [sp, #24]
    1164:	str	w1, [sp, #20]
    1168:	ldr	w0, [sp, #20]
    116c:	cmp	w0, #0x0
    1170:	b.eq	11a0 <tdb_lock_record+0x48>  // b.none
    1174:	ldr	x0, [sp, #24]
    1178:	ldr	x0, [x0, #312]
    117c:	ldr	x6, [x0, #40]
    1180:	mov	x5, #0x1                   	// #1
    1184:	mov	w4, #0x0                   	// #0
    1188:	mov	w3, #0x7                   	// #7
    118c:	mov	w2, #0x0                   	// #0
    1190:	ldr	w1, [sp, #20]
    1194:	ldr	x0, [sp, #24]
    1198:	blr	x6
    119c:	b	11a4 <tdb_lock_record+0x4c>
    11a0:	mov	w0, #0x0                   	// #0
    11a4:	ldp	x29, x30, [sp], #32
    11a8:	ret

00000000000011ac <tdb_write_lock_record>:
    11ac:	stp	x29, x30, [sp, #-48]!
    11b0:	mov	x29, sp
    11b4:	str	x0, [sp, #24]
    11b8:	str	w1, [sp, #20]
    11bc:	ldr	x0, [sp, #24]
    11c0:	add	x0, x0, #0xe8
    11c4:	str	x0, [sp, #40]
    11c8:	b	11f4 <tdb_write_lock_record+0x48>
    11cc:	ldr	x0, [sp, #40]
    11d0:	ldr	w0, [x0, #8]
    11d4:	ldr	w1, [sp, #20]
    11d8:	cmp	w1, w0
    11dc:	b.ne	11e8 <tdb_write_lock_record+0x3c>  // b.any
    11e0:	mov	w0, #0xffffffff            	// #-1
    11e4:	b	1228 <tdb_write_lock_record+0x7c>
    11e8:	ldr	x0, [sp, #40]
    11ec:	ldr	x0, [x0]
    11f0:	str	x0, [sp, #40]
    11f4:	ldr	x0, [sp, #40]
    11f8:	cmp	x0, #0x0
    11fc:	b.ne	11cc <tdb_write_lock_record+0x20>  // b.any
    1200:	ldr	x0, [sp, #24]
    1204:	ldr	x0, [x0, #312]
    1208:	ldr	x6, [x0, #40]
    120c:	mov	x5, #0x1                   	// #1
    1210:	mov	w4, #0x1                   	// #1
    1214:	mov	w3, #0x6                   	// #6
    1218:	mov	w2, #0x1                   	// #1
    121c:	ldr	w1, [sp, #20]
    1220:	ldr	x0, [sp, #24]
    1224:	blr	x6
    1228:	ldp	x29, x30, [sp], #48
    122c:	ret

0000000000001230 <tdb_write_unlock_record>:
    1230:	stp	x29, x30, [sp, #-32]!
    1234:	mov	x29, sp
    1238:	str	x0, [sp, #24]
    123c:	str	w1, [sp, #20]
    1240:	ldr	x0, [sp, #24]
    1244:	ldr	x0, [x0, #312]
    1248:	ldr	x6, [x0, #40]
    124c:	mov	x5, #0x1                   	// #1
    1250:	mov	w4, #0x0                   	// #0
    1254:	mov	w3, #0x6                   	// #6
    1258:	mov	w2, #0x2                   	// #2
    125c:	ldr	w1, [sp, #20]
    1260:	ldr	x0, [sp, #24]
    1264:	blr	x6
    1268:	ldp	x29, x30, [sp], #32
    126c:	ret

0000000000001270 <tdb_unlock_record>:
    1270:	stp	x29, x30, [sp, #-48]!
    1274:	mov	x29, sp
    1278:	str	x0, [sp, #24]
    127c:	str	w1, [sp, #20]
    1280:	str	wzr, [sp, #36]
    1284:	ldr	w0, [sp, #20]
    1288:	cmp	w0, #0x0
    128c:	b.ne	1298 <tdb_unlock_record+0x28>  // b.any
    1290:	mov	w0, #0x0                   	// #0
    1294:	b	131c <tdb_unlock_record+0xac>
    1298:	ldr	x0, [sp, #24]
    129c:	add	x0, x0, #0xe8
    12a0:	str	x0, [sp, #40]
    12a4:	b	12d4 <tdb_unlock_record+0x64>
    12a8:	ldr	x0, [sp, #40]
    12ac:	ldr	w0, [x0, #8]
    12b0:	ldr	w1, [sp, #20]
    12b4:	cmp	w1, w0
    12b8:	b.ne	12c8 <tdb_unlock_record+0x58>  // b.any
    12bc:	ldr	w0, [sp, #36]
    12c0:	add	w0, w0, #0x1
    12c4:	str	w0, [sp, #36]
    12c8:	ldr	x0, [sp, #40]
    12cc:	ldr	x0, [x0]
    12d0:	str	x0, [sp, #40]
    12d4:	ldr	x0, [sp, #40]
    12d8:	cmp	x0, #0x0
    12dc:	b.ne	12a8 <tdb_unlock_record+0x38>  // b.any
    12e0:	ldr	w0, [sp, #36]
    12e4:	cmp	w0, #0x1
    12e8:	b.ne	1318 <tdb_unlock_record+0xa8>  // b.any
    12ec:	ldr	x0, [sp, #24]
    12f0:	ldr	x0, [x0, #312]
    12f4:	ldr	x6, [x0, #40]
    12f8:	mov	x5, #0x1                   	// #1
    12fc:	mov	w4, #0x0                   	// #0
    1300:	mov	w3, #0x7                   	// #7
    1304:	mov	w2, #0x2                   	// #2
    1308:	ldr	w1, [sp, #20]
    130c:	ldr	x0, [sp, #24]
    1310:	blr	x6
    1314:	b	131c <tdb_unlock_record+0xac>
    1318:	mov	w0, #0x0                   	// #0
    131c:	ldp	x29, x30, [sp], #48
    1320:	ret

0000000000001324 <tdb_oob>:
    1324:	stp	x29, x30, [sp, #-160]!
    1328:	mov	x29, sp
    132c:	str	x0, [sp, #24]
    1330:	str	w1, [sp, #20]
    1334:	str	w2, [sp, #16]
    1338:	ldr	x0, [sp, #24]
    133c:	ldr	w0, [x0, #20]
    1340:	ldr	w1, [sp, #20]
    1344:	cmp	w1, w0
    1348:	b.hi	1354 <tdb_oob+0x30>  // b.pmore
    134c:	mov	w0, #0x0                   	// #0
    1350:	b	149c <tdb_oob+0x178>
    1354:	ldr	x0, [sp, #24]
    1358:	ldr	w0, [x0, #228]
    135c:	and	w0, w0, #0x2
    1360:	cmp	w0, #0x0
    1364:	b.eq	13c4 <tdb_oob+0xa0>  // b.none
    1368:	ldr	w0, [sp, #16]
    136c:	cmp	w0, #0x0
    1370:	b.ne	13b0 <tdb_oob+0x8c>  // b.any
    1374:	ldr	x0, [sp, #24]
    1378:	mov	w1, #0x2                   	// #2
    137c:	str	w1, [x0, #56]
    1380:	ldr	x0, [sp, #24]
    1384:	ldr	x5, [x0, #280]
    1388:	ldr	w1, [sp, #20]
    138c:	ldr	x0, [sp, #24]
    1390:	ldr	w0, [x0, #20]
    1394:	mov	w4, w0
    1398:	mov	w3, w1
    139c:	adrp	x0, 0 <ext2fs_tdb_error>
    13a0:	add	x2, x0, #0x0
    13a4:	mov	w1, #0x0                   	// #0
    13a8:	ldr	x0, [sp, #24]
    13ac:	blr	x5
    13b0:	ldr	x0, [sp, #24]
    13b4:	mov	w1, #0x2                   	// #2
    13b8:	str	w1, [x0, #56]
    13bc:	mov	w0, #0xffffffff            	// #-1
    13c0:	b	149c <tdb_oob+0x178>
    13c4:	ldr	x0, [sp, #24]
    13c8:	ldr	w0, [x0, #16]
    13cc:	add	x1, sp, #0x20
    13d0:	bl	0 <fstat>
    13d4:	cmn	w0, #0x1
    13d8:	b.ne	13f0 <tdb_oob+0xcc>  // b.any
    13dc:	ldr	x0, [sp, #24]
    13e0:	mov	w1, #0x2                   	// #2
    13e4:	str	w1, [x0, #56]
    13e8:	mov	w0, #0xffffffff            	// #-1
    13ec:	b	149c <tdb_oob+0x178>
    13f0:	ldr	x0, [sp, #80]
    13f4:	mov	x1, x0
    13f8:	ldr	w0, [sp, #20]
    13fc:	cmp	x1, x0
    1400:	b.cs	145c <tdb_oob+0x138>  // b.hs, b.nlast
    1404:	ldr	w0, [sp, #16]
    1408:	cmp	w0, #0x0
    140c:	b.ne	1448 <tdb_oob+0x124>  // b.any
    1410:	ldr	x0, [sp, #24]
    1414:	mov	w1, #0x2                   	// #2
    1418:	str	w1, [x0, #56]
    141c:	ldr	x0, [sp, #24]
    1420:	ldr	x5, [x0, #280]
    1424:	ldr	w0, [sp, #20]
    1428:	ldr	x1, [sp, #80]
    142c:	mov	w4, w1
    1430:	mov	w3, w0
    1434:	adrp	x0, 0 <ext2fs_tdb_error>
    1438:	add	x2, x0, #0x0
    143c:	mov	w1, #0x0                   	// #0
    1440:	ldr	x0, [sp, #24]
    1444:	blr	x5
    1448:	ldr	x0, [sp, #24]
    144c:	mov	w1, #0x2                   	// #2
    1450:	str	w1, [x0, #56]
    1454:	mov	w0, #0xffffffff            	// #-1
    1458:	b	149c <tdb_oob+0x178>
    145c:	ldr	x0, [sp, #24]
    1460:	bl	1968 <tdb_munmap>
    1464:	cmn	w0, #0x1
    1468:	b.ne	1480 <tdb_oob+0x15c>  // b.any
    146c:	ldr	x0, [sp, #24]
    1470:	mov	w1, #0x2                   	// #2
    1474:	str	w1, [x0, #56]
    1478:	mov	w0, #0xffffffff            	// #-1
    147c:	b	149c <tdb_oob+0x178>
    1480:	ldr	x0, [sp, #80]
    1484:	mov	w1, w0
    1488:	ldr	x0, [sp, #24]
    148c:	str	w1, [x0, #20]
    1490:	ldr	x0, [sp, #24]
    1494:	bl	19f4 <tdb_mmap>
    1498:	mov	w0, #0x0                   	// #0
    149c:	ldp	x29, x30, [sp], #160
    14a0:	ret

00000000000014a4 <tdb_write>:
    14a4:	stp	x29, x30, [sp, #-64]!
    14a8:	mov	x29, sp
    14ac:	str	x19, [sp, #16]
    14b0:	str	x0, [sp, #56]
    14b4:	str	w1, [sp, #52]
    14b8:	str	x2, [sp, #40]
    14bc:	str	w3, [sp, #48]
    14c0:	ldr	w0, [sp, #48]
    14c4:	cmp	w0, #0x0
    14c8:	b.ne	14d4 <tdb_write+0x30>  // b.any
    14cc:	mov	w0, #0x0                   	// #0
    14d0:	b	15fc <tdb_write+0x158>
    14d4:	ldr	x0, [sp, #56]
    14d8:	ldr	w0, [x0, #24]
    14dc:	cmp	w0, #0x0
    14e0:	b.ne	14f4 <tdb_write+0x50>  // b.any
    14e4:	ldr	x0, [sp, #56]
    14e8:	ldr	w0, [x0, #28]
    14ec:	cmp	w0, #0x0
    14f0:	b.eq	1508 <tdb_write+0x64>  // b.none
    14f4:	ldr	x0, [sp, #56]
    14f8:	mov	w1, #0xa                   	// #10
    14fc:	str	w1, [x0, #56]
    1500:	mov	w0, #0xffffffff            	// #-1
    1504:	b	15fc <tdb_write+0x158>
    1508:	ldr	x0, [sp, #56]
    150c:	ldr	x0, [x0, #312]
    1510:	ldr	x3, [x0, #24]
    1514:	ldr	w1, [sp, #52]
    1518:	ldr	w0, [sp, #48]
    151c:	add	w0, w1, w0
    1520:	mov	w2, #0x0                   	// #0
    1524:	mov	w1, w0
    1528:	ldr	x0, [sp, #56]
    152c:	blr	x3
    1530:	cmp	w0, #0x0
    1534:	b.eq	1540 <tdb_write+0x9c>  // b.none
    1538:	mov	w0, #0xffffffff            	// #-1
    153c:	b	15fc <tdb_write+0x158>
    1540:	ldr	x0, [sp, #56]
    1544:	ldr	x0, [x0, #8]
    1548:	cmp	x0, #0x0
    154c:	b.eq	1574 <tdb_write+0xd0>  // b.none
    1550:	ldr	x0, [sp, #56]
    1554:	ldr	x1, [x0, #8]
    1558:	ldr	w0, [sp, #52]
    155c:	add	x0, x1, x0
    1560:	ldr	w1, [sp, #48]
    1564:	mov	x2, x1
    1568:	ldr	x1, [sp, #40]
    156c:	bl	0 <memcpy>
    1570:	b	15f8 <tdb_write+0x154>
    1574:	ldr	x0, [sp, #56]
    1578:	ldr	w0, [x0, #16]
    157c:	ldr	w1, [sp, #48]
    1580:	ldr	w2, [sp, #52]
    1584:	mov	x3, x2
    1588:	mov	x2, x1
    158c:	ldr	x1, [sp, #40]
    1590:	bl	0 <pwrite>
    1594:	mov	x1, x0
    1598:	ldr	w0, [sp, #48]
    159c:	cmp	x1, x0
    15a0:	b.eq	15f8 <tdb_write+0x154>  // b.none
    15a4:	ldr	x0, [sp, #56]
    15a8:	mov	w1, #0x2                   	// #2
    15ac:	str	w1, [x0, #56]
    15b0:	ldr	x0, [sp, #56]
    15b4:	ldr	x19, [x0, #280]
    15b8:	bl	0 <__errno_location>
    15bc:	ldr	w0, [x0]
    15c0:	bl	0 <strerror>
    15c4:	mov	x5, x0
    15c8:	ldr	w4, [sp, #48]
    15cc:	ldr	w3, [sp, #52]
    15d0:	adrp	x0, 0 <ext2fs_tdb_error>
    15d4:	add	x2, x0, #0x0
    15d8:	mov	w1, #0x0                   	// #0
    15dc:	ldr	x0, [sp, #56]
    15e0:	blr	x19
    15e4:	ldr	x0, [sp, #56]
    15e8:	mov	w1, #0x2                   	// #2
    15ec:	str	w1, [x0, #56]
    15f0:	mov	w0, #0xffffffff            	// #-1
    15f4:	b	15fc <tdb_write+0x158>
    15f8:	mov	w0, #0x0                   	// #0
    15fc:	ldr	x19, [sp, #16]
    1600:	ldp	x29, x30, [sp], #64
    1604:	ret

0000000000001608 <tdb_convert>:
    1608:	sub	sp, sp, #0x20
    160c:	str	x0, [sp, #8]
    1610:	str	w1, [sp, #4]
    1614:	ldr	x0, [sp, #8]
    1618:	str	x0, [sp, #16]
    161c:	str	wzr, [sp, #28]
    1620:	b	16b8 <tdb_convert+0xb0>
    1624:	ldr	w0, [sp, #28]
    1628:	lsl	x0, x0, #2
    162c:	ldr	x1, [sp, #16]
    1630:	add	x0, x1, x0
    1634:	ldr	w0, [x0]
    1638:	lsl	w1, w0, #24
    163c:	ldr	w0, [sp, #28]
    1640:	lsl	x0, x0, #2
    1644:	ldr	x2, [sp, #16]
    1648:	add	x0, x2, x0
    164c:	ldr	w0, [x0]
    1650:	lsl	w0, w0, #8
    1654:	and	w0, w0, #0xff0000
    1658:	orr	w1, w1, w0
    165c:	ldr	w0, [sp, #28]
    1660:	lsl	x0, x0, #2
    1664:	ldr	x2, [sp, #16]
    1668:	add	x0, x2, x0
    166c:	ldr	w0, [x0]
    1670:	lsr	w0, w0, #8
    1674:	and	w0, w0, #0xff00
    1678:	orr	w2, w1, w0
    167c:	ldr	w0, [sp, #28]
    1680:	lsl	x0, x0, #2
    1684:	ldr	x1, [sp, #16]
    1688:	add	x0, x1, x0
    168c:	ldr	w0, [x0]
    1690:	lsr	w1, w0, #24
    1694:	ldr	w0, [sp, #28]
    1698:	lsl	x0, x0, #2
    169c:	ldr	x3, [sp, #16]
    16a0:	add	x0, x3, x0
    16a4:	orr	w1, w2, w1
    16a8:	str	w1, [x0]
    16ac:	ldr	w0, [sp, #28]
    16b0:	add	w0, w0, #0x1
    16b4:	str	w0, [sp, #28]
    16b8:	ldr	w0, [sp, #4]
    16bc:	lsr	w0, w0, #2
    16c0:	ldr	w1, [sp, #28]
    16c4:	cmp	w1, w0
    16c8:	b.cc	1624 <tdb_convert+0x1c>  // b.lo, b.ul, b.last
    16cc:	ldr	x0, [sp, #8]
    16d0:	add	sp, sp, #0x20
    16d4:	ret

00000000000016d8 <tdb_read>:
    16d8:	stp	x29, x30, [sp, #-96]!
    16dc:	mov	x29, sp
    16e0:	stp	x19, x20, [sp, #16]
    16e4:	stp	x21, x22, [sp, #32]
    16e8:	str	x0, [sp, #72]
    16ec:	str	w1, [sp, #68]
    16f0:	str	x2, [sp, #56]
    16f4:	str	w3, [sp, #64]
    16f8:	str	w4, [sp, #52]
    16fc:	ldr	x0, [sp, #72]
    1700:	ldr	x0, [x0, #312]
    1704:	ldr	x3, [x0, #24]
    1708:	ldr	w1, [sp, #68]
    170c:	ldr	w0, [sp, #64]
    1710:	add	w0, w1, w0
    1714:	mov	w2, #0x0                   	// #0
    1718:	mov	w1, w0
    171c:	ldr	x0, [sp, #72]
    1720:	blr	x3
    1724:	cmp	w0, #0x0
    1728:	b.eq	1734 <tdb_read+0x5c>  // b.none
    172c:	mov	w0, #0xffffffff            	// #-1
    1730:	b	1834 <tdb_read+0x15c>
    1734:	ldr	x0, [sp, #72]
    1738:	ldr	x0, [x0, #8]
    173c:	cmp	x0, #0x0
    1740:	b.eq	176c <tdb_read+0x94>  // b.none
    1744:	ldr	x0, [sp, #72]
    1748:	ldr	x1, [x0, #8]
    174c:	ldr	w0, [sp, #68]
    1750:	add	x0, x1, x0
    1754:	ldr	w1, [sp, #64]
    1758:	mov	x2, x1
    175c:	mov	x1, x0
    1760:	ldr	x0, [sp, #56]
    1764:	bl	0 <memcpy>
    1768:	b	1818 <tdb_read+0x140>
    176c:	ldr	x0, [sp, #72]
    1770:	ldr	w0, [x0, #16]
    1774:	ldr	w1, [sp, #64]
    1778:	ldr	w2, [sp, #68]
    177c:	mov	x3, x2
    1780:	mov	x2, x1
    1784:	ldr	x1, [sp, #56]
    1788:	bl	0 <pread>
    178c:	str	x0, [sp, #88]
    1790:	ldr	w0, [sp, #64]
    1794:	ldr	x1, [sp, #88]
    1798:	cmp	x1, x0
    179c:	b.eq	1818 <tdb_read+0x140>  // b.none
    17a0:	ldr	x0, [sp, #72]
    17a4:	mov	w1, #0x2                   	// #2
    17a8:	str	w1, [x0, #56]
    17ac:	ldr	x0, [sp, #72]
    17b0:	ldr	x19, [x0, #280]
    17b4:	ldr	w20, [sp, #68]
    17b8:	ldr	w21, [sp, #64]
    17bc:	ldr	x0, [sp, #88]
    17c0:	mov	w22, w0
    17c4:	bl	0 <__errno_location>
    17c8:	ldr	w0, [x0]
    17cc:	bl	0 <strerror>
    17d0:	mov	x1, x0
    17d4:	ldr	x0, [sp, #72]
    17d8:	ldr	w0, [x0, #20]
    17dc:	mov	w7, w0
    17e0:	mov	x6, x1
    17e4:	mov	w5, w22
    17e8:	mov	w4, w21
    17ec:	mov	w3, w20
    17f0:	adrp	x0, 0 <ext2fs_tdb_error>
    17f4:	add	x2, x0, #0x0
    17f8:	mov	w1, #0x0                   	// #0
    17fc:	ldr	x0, [sp, #72]
    1800:	blr	x19
    1804:	ldr	x0, [sp, #72]
    1808:	mov	w1, #0x2                   	// #2
    180c:	str	w1, [x0, #56]
    1810:	mov	w0, #0xffffffff            	// #-1
    1814:	b	1834 <tdb_read+0x15c>
    1818:	ldr	w0, [sp, #52]
    181c:	cmp	w0, #0x0
    1820:	b.eq	1830 <tdb_read+0x158>  // b.none
    1824:	ldr	w1, [sp, #64]
    1828:	ldr	x0, [sp, #56]
    182c:	bl	1608 <tdb_convert>
    1830:	mov	w0, #0x0                   	// #0
    1834:	ldp	x19, x20, [sp, #16]
    1838:	ldp	x21, x22, [sp, #32]
    183c:	ldp	x29, x30, [sp], #96
    1840:	ret

0000000000001844 <tdb_next_hash_chain>:
    1844:	stp	x29, x30, [sp, #-48]!
    1848:	mov	x29, sp
    184c:	str	x0, [sp, #24]
    1850:	str	x1, [sp, #16]
    1854:	ldr	x0, [sp, #16]
    1858:	ldr	w0, [x0]
    185c:	str	w0, [sp, #44]
    1860:	ldr	x0, [sp, #24]
    1864:	ldr	x0, [x0, #8]
    1868:	cmp	x0, #0x0
    186c:	b.eq	18d8 <tdb_next_hash_chain+0x94>  // b.none
    1870:	b	18c0 <tdb_next_hash_chain+0x7c>
    1874:	ldr	x0, [sp, #24]
    1878:	ldr	x2, [x0, #8]
    187c:	ldr	x0, [sp, #24]
    1880:	ldr	w1, [x0, #96]
    1884:	ldr	w0, [sp, #44]
    1888:	udiv	w3, w0, w1
    188c:	mul	w1, w3, w1
    1890:	sub	w0, w0, w1
    1894:	add	w0, w0, #0x1
    1898:	mov	w0, w0
    189c:	add	x0, x0, #0x2a
    18a0:	lsl	x0, x0, #2
    18a4:	add	x0, x2, x0
    18a8:	ldr	w0, [x0]
    18ac:	cmp	w0, #0x0
    18b0:	b.ne	194c <tdb_next_hash_chain+0x108>  // b.any
    18b4:	ldr	w0, [sp, #44]
    18b8:	add	w0, w0, #0x1
    18bc:	str	w0, [sp, #44]
    18c0:	ldr	x0, [sp, #24]
    18c4:	ldr	w0, [x0, #96]
    18c8:	ldr	w1, [sp, #44]
    18cc:	cmp	w1, w0
    18d0:	b.cc	1874 <tdb_next_hash_chain+0x30>  // b.lo, b.ul, b.last
    18d4:	b	1950 <tdb_next_hash_chain+0x10c>
    18d8:	str	wzr, [sp, #40]
    18dc:	b	1934 <tdb_next_hash_chain+0xf0>
    18e0:	ldr	x0, [sp, #24]
    18e4:	ldr	w1, [x0, #96]
    18e8:	ldr	w0, [sp, #44]
    18ec:	udiv	w2, w0, w1
    18f0:	mul	w1, w2, w1
    18f4:	sub	w0, w0, w1
    18f8:	add	w0, w0, #0x2b
    18fc:	lsl	w0, w0, #2
    1900:	add	x1, sp, #0x28
    1904:	mov	x2, x1
    1908:	mov	w1, w0
    190c:	ldr	x0, [sp, #24]
    1910:	bl	1f18 <tdb_ofs_read>
    1914:	cmp	w0, #0x0
    1918:	b.ne	1950 <tdb_next_hash_chain+0x10c>  // b.any
    191c:	ldr	w0, [sp, #40]
    1920:	cmp	w0, #0x0
    1924:	b.ne	1950 <tdb_next_hash_chain+0x10c>  // b.any
    1928:	ldr	w0, [sp, #44]
    192c:	add	w0, w0, #0x1
    1930:	str	w0, [sp, #44]
    1934:	ldr	x0, [sp, #24]
    1938:	ldr	w0, [x0, #96]
    193c:	ldr	w1, [sp, #44]
    1940:	cmp	w1, w0
    1944:	b.cc	18e0 <tdb_next_hash_chain+0x9c>  // b.lo, b.ul, b.last
    1948:	b	1950 <tdb_next_hash_chain+0x10c>
    194c:	nop
    1950:	ldr	x0, [sp, #16]
    1954:	ldr	w1, [sp, #44]
    1958:	str	w1, [x0]
    195c:	nop
    1960:	ldp	x29, x30, [sp], #48
    1964:	ret

0000000000001968 <tdb_munmap>:
    1968:	stp	x29, x30, [sp, #-48]!
    196c:	mov	x29, sp
    1970:	str	x0, [sp, #24]
    1974:	ldr	x0, [sp, #24]
    1978:	ldr	w0, [x0, #228]
    197c:	and	w0, w0, #0x2
    1980:	cmp	w0, #0x0
    1984:	b.eq	1990 <tdb_munmap+0x28>  // b.none
    1988:	mov	w0, #0x0                   	// #0
    198c:	b	19ec <tdb_munmap+0x84>
    1990:	ldr	x0, [sp, #24]
    1994:	ldr	x0, [x0, #8]
    1998:	cmp	x0, #0x0
    199c:	b.eq	19e0 <tdb_munmap+0x78>  // b.none
    19a0:	ldr	x0, [sp, #24]
    19a4:	ldr	x2, [x0, #8]
    19a8:	ldr	x0, [sp, #24]
    19ac:	ldr	w0, [x0, #340]
    19b0:	mov	w0, w0
    19b4:	mov	x1, x0
    19b8:	mov	x0, x2
    19bc:	bl	0 <munmap>
    19c0:	str	w0, [sp, #44]
    19c4:	ldr	w0, [sp, #44]
    19c8:	cmp	w0, #0x0
    19cc:	b.eq	19d8 <tdb_munmap+0x70>  // b.none
    19d0:	ldr	w0, [sp, #44]
    19d4:	b	19ec <tdb_munmap+0x84>
    19d8:	ldr	x0, [sp, #24]
    19dc:	str	wzr, [x0, #340]
    19e0:	ldr	x0, [sp, #24]
    19e4:	str	xzr, [x0, #8]
    19e8:	mov	w0, #0x0                   	// #0
    19ec:	ldp	x29, x30, [sp], #48
    19f0:	ret

00000000000019f4 <tdb_mmap>:
    19f4:	stp	x29, x30, [sp, #-48]!
    19f8:	mov	x29, sp
    19fc:	stp	x19, x20, [sp, #16]
    1a00:	str	x0, [sp, #40]
    1a04:	ldr	x0, [sp, #40]
    1a08:	ldr	w0, [x0, #228]
    1a0c:	and	w0, w0, #0x2
    1a10:	cmp	w0, #0x0
    1a14:	b.ne	1afc <tdb_mmap+0x108>  // b.any
    1a18:	ldr	x0, [sp, #40]
    1a1c:	ldr	w0, [x0, #228]
    1a20:	and	w0, w0, #0x8
    1a24:	cmp	w0, #0x0
    1a28:	b.ne	1af0 <tdb_mmap+0xfc>  // b.any
    1a2c:	ldr	x0, [sp, #40]
    1a30:	ldr	w0, [x0, #20]
    1a34:	mov	w6, w0
    1a38:	ldr	x0, [sp, #40]
    1a3c:	ldr	w0, [x0, #24]
    1a40:	cmp	w0, #0x0
    1a44:	b.eq	1a50 <tdb_mmap+0x5c>  // b.none
    1a48:	mov	w0, #0x1                   	// #1
    1a4c:	b	1a54 <tdb_mmap+0x60>
    1a50:	mov	w0, #0x3                   	// #3
    1a54:	ldr	x1, [sp, #40]
    1a58:	ldr	w1, [x1, #16]
    1a5c:	mov	x5, #0x0                   	// #0
    1a60:	mov	w4, w1
    1a64:	mov	w3, #0x1                   	// #1
    1a68:	mov	w2, w0
    1a6c:	mov	x1, x6
    1a70:	mov	x0, #0x0                   	// #0
    1a74:	bl	0 <mmap>
    1a78:	mov	x1, x0
    1a7c:	ldr	x0, [sp, #40]
    1a80:	str	x1, [x0, #8]
    1a84:	ldr	x0, [sp, #40]
    1a88:	ldr	x0, [x0, #8]
    1a8c:	cmn	x0, #0x1
    1a90:	b.ne	1adc <tdb_mmap+0xe8>  // b.any
    1a94:	ldr	x0, [sp, #40]
    1a98:	str	wzr, [x0, #340]
    1a9c:	ldr	x0, [sp, #40]
    1aa0:	str	xzr, [x0, #8]
    1aa4:	ldr	x0, [sp, #40]
    1aa8:	ldr	x19, [x0, #280]
    1aac:	ldr	x0, [sp, #40]
    1ab0:	ldr	w20, [x0, #20]
    1ab4:	bl	0 <__errno_location>
    1ab8:	ldr	w0, [x0]
    1abc:	bl	0 <strerror>
    1ac0:	mov	x4, x0
    1ac4:	mov	w3, w20
    1ac8:	adrp	x0, 0 <ext2fs_tdb_error>
    1acc:	add	x2, x0, #0x0
    1ad0:	mov	w1, #0x2                   	// #2
    1ad4:	ldr	x0, [sp, #40]
    1ad8:	blr	x19
    1adc:	ldr	x0, [sp, #40]
    1ae0:	ldr	w1, [x0, #20]
    1ae4:	ldr	x0, [sp, #40]
    1ae8:	str	w1, [x0, #340]
    1aec:	b	1b00 <tdb_mmap+0x10c>
    1af0:	ldr	x0, [sp, #40]
    1af4:	str	xzr, [x0, #8]
    1af8:	b	1b00 <tdb_mmap+0x10c>
    1afc:	nop
    1b00:	ldp	x19, x20, [sp, #16]
    1b04:	ldp	x29, x30, [sp], #48
    1b08:	ret

0000000000001b0c <tdb_expand_file>:
    1b0c:	sub	sp, sp, #0x440
    1b10:	stp	x29, x30, [sp]
    1b14:	mov	x29, sp
    1b18:	stp	x19, x20, [sp, #16]
    1b1c:	str	x0, [sp, #40]
    1b20:	str	w1, [sp, #36]
    1b24:	str	w2, [sp, #32]
    1b28:	ldr	x0, [sp, #40]
    1b2c:	ldr	w0, [x0, #24]
    1b30:	cmp	w0, #0x0
    1b34:	b.ne	1b48 <tdb_expand_file+0x3c>  // b.any
    1b38:	ldr	x0, [sp, #40]
    1b3c:	ldr	w0, [x0, #28]
    1b40:	cmp	w0, #0x0
    1b44:	b.eq	1b5c <tdb_expand_file+0x50>  // b.none
    1b48:	ldr	x0, [sp, #40]
    1b4c:	mov	w1, #0xa                   	// #10
    1b50:	str	w1, [x0, #56]
    1b54:	mov	w0, #0xffffffff            	// #-1
    1b58:	b	1ccc <tdb_expand_file+0x1c0>
    1b5c:	ldr	x0, [sp, #40]
    1b60:	ldr	w2, [x0, #16]
    1b64:	ldr	w1, [sp, #36]
    1b68:	ldr	w0, [sp, #32]
    1b6c:	add	w0, w1, w0
    1b70:	mov	w0, w0
    1b74:	mov	x1, x0
    1b78:	mov	w0, w2
    1b7c:	bl	0 <ftruncate>
    1b80:	cmn	w0, #0x1
    1b84:	b.ne	1c0c <tdb_expand_file+0x100>  // b.any
    1b88:	strb	wzr, [sp, #55]
    1b8c:	ldr	x0, [sp, #40]
    1b90:	ldr	w4, [x0, #16]
    1b94:	ldr	w1, [sp, #36]
    1b98:	ldr	w0, [sp, #32]
    1b9c:	add	w0, w1, w0
    1ba0:	sub	w0, w0, #0x1
    1ba4:	mov	w1, w0
    1ba8:	add	x0, sp, #0x37
    1bac:	mov	x3, x1
    1bb0:	mov	x2, #0x1                   	// #1
    1bb4:	mov	x1, x0
    1bb8:	mov	w0, w4
    1bbc:	bl	0 <pwrite>
    1bc0:	cmp	x0, #0x1
    1bc4:	b.eq	1c0c <tdb_expand_file+0x100>  // b.none
    1bc8:	ldr	x0, [sp, #40]
    1bcc:	ldr	x19, [x0, #280]
    1bd0:	ldr	w1, [sp, #36]
    1bd4:	ldr	w0, [sp, #32]
    1bd8:	add	w20, w1, w0
    1bdc:	bl	0 <__errno_location>
    1be0:	ldr	w0, [x0]
    1be4:	bl	0 <strerror>
    1be8:	mov	x4, x0
    1bec:	mov	w3, w20
    1bf0:	adrp	x0, 0 <ext2fs_tdb_error>
    1bf4:	add	x2, x0, #0x0
    1bf8:	mov	w1, #0x0                   	// #0
    1bfc:	ldr	x0, [sp, #40]
    1c00:	blr	x19
    1c04:	mov	w0, #0xffffffff            	// #-1
    1c08:	b	1ccc <tdb_expand_file+0x1c0>
    1c0c:	add	x0, sp, #0x38
    1c10:	mov	x2, #0x400                 	// #1024
    1c14:	mov	w1, #0x42                  	// #66
    1c18:	bl	0 <memset>
    1c1c:	b	1cbc <tdb_expand_file+0x1b0>
    1c20:	ldr	w2, [sp, #32]
    1c24:	ldr	w1, [sp, #32]
    1c28:	mov	w0, #0x400                 	// #1024
    1c2c:	cmp	w2, #0x400
    1c30:	csel	w0, w1, w0, ls  // ls = plast
    1c34:	str	w0, [sp, #1084]
    1c38:	ldr	x0, [sp, #40]
    1c3c:	ldr	w0, [x0, #16]
    1c40:	ldrsw	x2, [sp, #1084]
    1c44:	ldr	w3, [sp, #36]
    1c48:	add	x1, sp, #0x38
    1c4c:	bl	0 <pwrite>
    1c50:	str	w0, [sp, #1080]
    1c54:	ldr	w1, [sp, #1080]
    1c58:	ldr	w0, [sp, #1084]
    1c5c:	cmp	w1, w0
    1c60:	b.eq	1c9c <tdb_expand_file+0x190>  // b.none
    1c64:	ldr	x0, [sp, #40]
    1c68:	ldr	x19, [x0, #280]
    1c6c:	bl	0 <__errno_location>
    1c70:	ldr	w0, [x0]
    1c74:	bl	0 <strerror>
    1c78:	mov	x4, x0
    1c7c:	ldr	w3, [sp, #1084]
    1c80:	adrp	x0, 0 <ext2fs_tdb_error>
    1c84:	add	x2, x0, #0x0
    1c88:	mov	w1, #0x0                   	// #0
    1c8c:	ldr	x0, [sp, #40]
    1c90:	blr	x19
    1c94:	mov	w0, #0xffffffff            	// #-1
    1c98:	b	1ccc <tdb_expand_file+0x1c0>
    1c9c:	ldr	w0, [sp, #1084]
    1ca0:	ldr	w1, [sp, #32]
    1ca4:	sub	w0, w1, w0
    1ca8:	str	w0, [sp, #32]
    1cac:	ldr	w0, [sp, #1084]
    1cb0:	ldr	w1, [sp, #36]
    1cb4:	add	w0, w1, w0
    1cb8:	str	w0, [sp, #36]
    1cbc:	ldr	w0, [sp, #32]
    1cc0:	cmp	w0, #0x0
    1cc4:	b.ne	1c20 <tdb_expand_file+0x114>  // b.any
    1cc8:	mov	w0, #0x0                   	// #0
    1ccc:	ldp	x19, x20, [sp, #16]
    1cd0:	ldp	x29, x30, [sp]
    1cd4:	add	sp, sp, #0x440
    1cd8:	ret

0000000000001cdc <tdb_expand>:
    1cdc:	stp	x29, x30, [sp, #-80]!
    1ce0:	mov	x29, sp
    1ce4:	str	x0, [sp, #24]
    1ce8:	str	w1, [sp, #20]
    1cec:	mov	w2, #0x1                   	// #1
    1cf0:	mov	w1, #0xffffffff            	// #-1
    1cf4:	ldr	x0, [sp, #24]
    1cf8:	bl	614 <tdb_lock>
    1cfc:	cmn	w0, #0x1
    1d00:	b.ne	1d28 <tdb_expand+0x4c>  // b.any
    1d04:	ldr	x0, [sp, #24]
    1d08:	ldr	x3, [x0, #280]
    1d0c:	adrp	x0, 0 <ext2fs_tdb_error>
    1d10:	add	x2, x0, #0x0
    1d14:	mov	w1, #0x1                   	// #1
    1d18:	ldr	x0, [sp, #24]
    1d1c:	blr	x3
    1d20:	mov	w0, #0xffffffff            	// #-1
    1d24:	b	1f10 <tdb_expand+0x234>
    1d28:	ldr	x0, [sp, #24]
    1d2c:	ldr	x0, [x0, #312]
    1d30:	ldr	x3, [x0, #24]
    1d34:	ldr	x0, [sp, #24]
    1d38:	ldr	w0, [x0, #20]
    1d3c:	add	w0, w0, #0x1
    1d40:	mov	w2, #0x1                   	// #1
    1d44:	mov	w1, w0
    1d48:	ldr	x0, [sp, #24]
    1d4c:	blr	x3
    1d50:	ldr	x0, [sp, #24]
    1d54:	ldr	w2, [x0, #20]
    1d58:	ldr	w1, [sp, #20]
    1d5c:	mov	w0, w1
    1d60:	lsl	w0, w0, #2
    1d64:	add	w0, w0, w1
    1d68:	lsl	w0, w0, #1
    1d6c:	add	w0, w2, w0
    1d70:	ldr	x1, [sp, #24]
    1d74:	ldr	w1, [x1, #328]
    1d78:	add	w0, w0, w1
    1d7c:	sub	w0, w0, #0x1
    1d80:	ldr	x1, [sp, #24]
    1d84:	ldr	w1, [x1, #328]
    1d88:	neg	w1, w1
    1d8c:	and	w1, w0, w1
    1d90:	ldr	x0, [sp, #24]
    1d94:	ldr	w0, [x0, #20]
    1d98:	sub	w0, w1, w0
    1d9c:	str	w0, [sp, #20]
    1da0:	ldr	x0, [sp, #24]
    1da4:	ldr	w0, [x0, #228]
    1da8:	and	w0, w0, #0x2
    1dac:	cmp	w0, #0x0
    1db0:	b.ne	1dbc <tdb_expand+0xe0>  // b.any
    1db4:	ldr	x0, [sp, #24]
    1db8:	bl	1968 <tdb_munmap>
    1dbc:	ldr	x0, [sp, #24]
    1dc0:	ldr	w0, [x0, #228]
    1dc4:	and	w0, w0, #0x2
    1dc8:	cmp	w0, #0x0
    1dcc:	b.ne	1dfc <tdb_expand+0x120>  // b.any
    1dd0:	ldr	x0, [sp, #24]
    1dd4:	ldr	x0, [x0, #312]
    1dd8:	ldr	x3, [x0, #32]
    1ddc:	ldr	x0, [sp, #24]
    1de0:	ldr	w0, [x0, #20]
    1de4:	ldr	w2, [sp, #20]
    1de8:	mov	w1, w0
    1dec:	ldr	x0, [sp, #24]
    1df0:	blr	x3
    1df4:	cmp	w0, #0x0
    1df8:	b.ne	1ef0 <tdb_expand+0x214>  // b.any
    1dfc:	ldr	x0, [sp, #24]
    1e00:	ldr	w1, [x0, #20]
    1e04:	ldr	w0, [sp, #20]
    1e08:	add	w1, w1, w0
    1e0c:	ldr	x0, [sp, #24]
    1e10:	str	w1, [x0, #20]
    1e14:	ldr	x0, [sp, #24]
    1e18:	ldr	w0, [x0, #228]
    1e1c:	and	w0, w0, #0x2
    1e20:	cmp	w0, #0x0
    1e24:	b.eq	1e84 <tdb_expand+0x1a8>  // b.none
    1e28:	ldr	x0, [sp, #24]
    1e2c:	ldr	x2, [x0, #8]
    1e30:	ldr	x0, [sp, #24]
    1e34:	ldr	w0, [x0, #20]
    1e38:	mov	w0, w0
    1e3c:	mov	x1, x0
    1e40:	mov	x0, x2
    1e44:	bl	0 <realloc>
    1e48:	str	x0, [sp, #72]
    1e4c:	ldr	x0, [sp, #72]
    1e50:	cmp	x0, #0x0
    1e54:	b.ne	1e74 <tdb_expand+0x198>  // b.any
    1e58:	ldr	x0, [sp, #24]
    1e5c:	ldr	w1, [x0, #20]
    1e60:	ldr	w0, [sp, #20]
    1e64:	sub	w1, w1, w0
    1e68:	ldr	x0, [sp, #24]
    1e6c:	str	w1, [x0, #20]
    1e70:	b	1efc <tdb_expand+0x220>
    1e74:	ldr	x0, [sp, #24]
    1e78:	ldr	x1, [sp, #72]
    1e7c:	str	x1, [x0, #8]
    1e80:	b	1e8c <tdb_expand+0x1b0>
    1e84:	ldr	x0, [sp, #24]
    1e88:	bl	19f4 <tdb_mmap>
    1e8c:	add	x0, sp, #0x28
    1e90:	mov	x2, #0x18                  	// #24
    1e94:	mov	w1, #0x0                   	// #0
    1e98:	bl	0 <memset>
    1e9c:	ldr	w0, [sp, #20]
    1ea0:	sub	w0, w0, #0x18
    1ea4:	str	w0, [sp, #44]
    1ea8:	ldr	x0, [sp, #24]
    1eac:	ldr	w1, [x0, #20]
    1eb0:	ldr	w0, [sp, #20]
    1eb4:	sub	w0, w1, w0
    1eb8:	str	w0, [sp, #68]
    1ebc:	add	x0, sp, #0x28
    1ec0:	mov	x2, x0
    1ec4:	ldr	w1, [sp, #68]
    1ec8:	ldr	x0, [sp, #24]
    1ecc:	bl	4900 <tdb_free>
    1ed0:	cmn	w0, #0x1
    1ed4:	b.eq	1ef8 <tdb_expand+0x21c>  // b.none
    1ed8:	mov	w2, #0x1                   	// #1
    1edc:	mov	w1, #0xffffffff            	// #-1
    1ee0:	ldr	x0, [sp, #24]
    1ee4:	bl	6c4 <tdb_unlock>
    1ee8:	mov	w0, #0x0                   	// #0
    1eec:	b	1f10 <tdb_expand+0x234>
    1ef0:	nop
    1ef4:	b	1efc <tdb_expand+0x220>
    1ef8:	nop
    1efc:	mov	w2, #0x1                   	// #1
    1f00:	mov	w1, #0xffffffff            	// #-1
    1f04:	ldr	x0, [sp, #24]
    1f08:	bl	6c4 <tdb_unlock>
    1f0c:	mov	w0, #0xffffffff            	// #-1
    1f10:	ldp	x29, x30, [sp], #80
    1f14:	ret

0000000000001f18 <tdb_ofs_read>:
    1f18:	stp	x29, x30, [sp, #-48]!
    1f1c:	mov	x29, sp
    1f20:	str	x0, [sp, #40]
    1f24:	str	w1, [sp, #36]
    1f28:	str	x2, [sp, #24]
    1f2c:	ldr	x0, [sp, #40]
    1f30:	ldr	x0, [x0, #312]
    1f34:	ldr	x5, [x0]
    1f38:	ldr	x0, [sp, #40]
    1f3c:	ldr	w0, [x0, #228]
    1f40:	and	w0, w0, #0x10
    1f44:	mov	w4, w0
    1f48:	mov	w3, #0x4                   	// #4
    1f4c:	ldr	x2, [sp, #24]
    1f50:	ldr	w1, [sp, #36]
    1f54:	ldr	x0, [sp, #40]
    1f58:	blr	x5
    1f5c:	ldp	x29, x30, [sp], #48
    1f60:	ret

0000000000001f64 <tdb_ofs_write>:
    1f64:	stp	x29, x30, [sp, #-80]!
    1f68:	mov	x29, sp
    1f6c:	str	x19, [sp, #16]
    1f70:	str	x0, [sp, #56]
    1f74:	str	w1, [sp, #52]
    1f78:	str	x2, [sp, #40]
    1f7c:	ldr	x0, [sp, #40]
    1f80:	ldr	w0, [x0]
    1f84:	str	w0, [sp, #76]
    1f88:	ldr	x0, [sp, #56]
    1f8c:	ldr	x0, [x0, #312]
    1f90:	ldr	x19, [x0, #8]
    1f94:	ldr	x0, [sp, #56]
    1f98:	ldr	w0, [x0, #228]
    1f9c:	and	w0, w0, #0x10
    1fa0:	cmp	w0, #0x0
    1fa4:	b.eq	1fb8 <tdb_ofs_write+0x54>  // b.none
    1fa8:	add	x0, sp, #0x4c
    1fac:	mov	w1, #0x4                   	// #4
    1fb0:	bl	1608 <tdb_convert>
    1fb4:	b	1fbc <tdb_ofs_write+0x58>
    1fb8:	add	x0, sp, #0x4c
    1fbc:	mov	w3, #0x4                   	// #4
    1fc0:	mov	x2, x0
    1fc4:	ldr	w1, [sp, #52]
    1fc8:	ldr	x0, [sp, #56]
    1fcc:	blr	x19
    1fd0:	ldr	x19, [sp, #16]
    1fd4:	ldp	x29, x30, [sp], #80
    1fd8:	ret

0000000000001fdc <tdb_alloc_read>:
    1fdc:	stp	x29, x30, [sp, #-64]!
    1fe0:	mov	x29, sp
    1fe4:	str	x19, [sp, #16]
    1fe8:	str	x0, [sp, #40]
    1fec:	str	w1, [sp, #36]
    1ff0:	str	w2, [sp, #32]
    1ff4:	ldr	w0, [sp, #32]
    1ff8:	cmp	w0, #0x0
    1ffc:	b.ne	2008 <tdb_alloc_read+0x2c>  // b.any
    2000:	mov	w0, #0x1                   	// #1
    2004:	str	w0, [sp, #32]
    2008:	ldr	w0, [sp, #32]
    200c:	bl	0 <malloc>
    2010:	str	x0, [sp, #56]
    2014:	ldr	x0, [sp, #56]
    2018:	cmp	x0, #0x0
    201c:	b.ne	2070 <tdb_alloc_read+0x94>  // b.any
    2020:	ldr	x0, [sp, #40]
    2024:	mov	w1, #0x4                   	// #4
    2028:	str	w1, [x0, #56]
    202c:	ldr	x0, [sp, #40]
    2030:	ldr	x19, [x0, #280]
    2034:	bl	0 <__errno_location>
    2038:	ldr	w0, [x0]
    203c:	bl	0 <strerror>
    2040:	mov	x4, x0
    2044:	ldr	w3, [sp, #32]
    2048:	adrp	x0, 0 <ext2fs_tdb_error>
    204c:	add	x2, x0, #0x0
    2050:	mov	w1, #0x1                   	// #1
    2054:	ldr	x0, [sp, #40]
    2058:	blr	x19
    205c:	ldr	x0, [sp, #40]
    2060:	mov	w1, #0x4                   	// #4
    2064:	str	w1, [x0, #56]
    2068:	ldr	x0, [sp, #56]
    206c:	b	20c0 <tdb_alloc_read+0xe4>
    2070:	ldr	x0, [sp, #40]
    2074:	ldr	x0, [x0, #312]
    2078:	ldr	x5, [x0]
    207c:	mov	w4, #0x0                   	// #0
    2080:	ldr	w3, [sp, #32]
    2084:	ldr	x2, [sp, #56]
    2088:	ldr	w1, [sp, #36]
    208c:	ldr	x0, [sp, #40]
    2090:	blr	x5
    2094:	cmn	w0, #0x1
    2098:	b.ne	20bc <tdb_alloc_read+0xe0>  // b.any
    209c:	ldr	x0, [sp, #56]
    20a0:	cmp	x0, #0x0
    20a4:	b.eq	20b4 <tdb_alloc_read+0xd8>  // b.none
    20a8:	ldr	x0, [sp, #56]
    20ac:	bl	0 <free>
    20b0:	str	xzr, [sp, #56]
    20b4:	mov	x0, #0x0                   	// #0
    20b8:	b	20c0 <tdb_alloc_read+0xe4>
    20bc:	ldr	x0, [sp, #56]
    20c0:	ldr	x19, [sp, #16]
    20c4:	ldp	x29, x30, [sp], #64
    20c8:	ret

00000000000020cc <tdb_parse_data>:
    20cc:	stp	x29, x30, [sp, #-96]!
    20d0:	mov	x29, sp
    20d4:	str	x0, [sp, #56]
    20d8:	stp	x1, x2, [sp, #40]
    20dc:	str	w3, [sp, #36]
    20e0:	str	w4, [sp, #32]
    20e4:	str	x5, [sp, #24]
    20e8:	str	x6, [sp, #16]
    20ec:	ldr	w0, [sp, #32]
    20f0:	str	x0, [sp, #80]
    20f4:	ldr	x0, [sp, #56]
    20f8:	ldr	x0, [x0, #320]
    20fc:	cmp	x0, #0x0
    2100:	b.ne	2178 <tdb_parse_data+0xac>  // b.any
    2104:	ldr	x0, [sp, #56]
    2108:	ldr	x0, [x0, #8]
    210c:	cmp	x0, #0x0
    2110:	b.eq	2178 <tdb_parse_data+0xac>  // b.none
    2114:	ldr	x0, [sp, #56]
    2118:	ldr	x0, [x0, #312]
    211c:	ldr	x3, [x0, #24]
    2120:	ldr	w1, [sp, #36]
    2124:	ldr	w0, [sp, #32]
    2128:	add	w0, w1, w0
    212c:	mov	w2, #0x0                   	// #0
    2130:	mov	w1, w0
    2134:	ldr	x0, [sp, #56]
    2138:	blr	x3
    213c:	cmp	w0, #0x0
    2140:	b.eq	214c <tdb_parse_data+0x80>  // b.none
    2144:	mov	w0, #0xffffffff            	// #-1
    2148:	b	21c4 <tdb_parse_data+0xf8>
    214c:	ldr	x0, [sp, #56]
    2150:	ldr	x1, [x0, #8]
    2154:	ldr	w0, [sp, #36]
    2158:	add	x0, x1, x0
    215c:	str	x0, [sp, #72]
    2160:	ldr	x5, [sp, #24]
    2164:	ldr	x4, [sp, #16]
    2168:	ldp	x2, x3, [sp, #72]
    216c:	ldp	x0, x1, [sp, #40]
    2170:	blr	x5
    2174:	b	21c4 <tdb_parse_data+0xf8>
    2178:	ldr	w2, [sp, #32]
    217c:	ldr	w1, [sp, #36]
    2180:	ldr	x0, [sp, #56]
    2184:	bl	1fdc <tdb_alloc_read>
    2188:	str	x0, [sp, #72]
    218c:	ldr	x0, [sp, #72]
    2190:	cmp	x0, #0x0
    2194:	b.ne	21a0 <tdb_parse_data+0xd4>  // b.any
    2198:	mov	w0, #0xffffffff            	// #-1
    219c:	b	21c4 <tdb_parse_data+0xf8>
    21a0:	ldr	x5, [sp, #24]
    21a4:	ldr	x4, [sp, #16]
    21a8:	ldp	x2, x3, [sp, #72]
    21ac:	ldp	x0, x1, [sp, #40]
    21b0:	blr	x5
    21b4:	str	w0, [sp, #92]
    21b8:	ldr	x0, [sp, #72]
    21bc:	bl	0 <free>
    21c0:	ldr	w0, [sp, #92]
    21c4:	ldp	x29, x30, [sp], #96
    21c8:	ret

00000000000021cc <tdb_rec_read>:
    21cc:	stp	x29, x30, [sp, #-48]!
    21d0:	mov	x29, sp
    21d4:	str	x0, [sp, #40]
    21d8:	str	w1, [sp, #36]
    21dc:	str	x2, [sp, #24]
    21e0:	ldr	x0, [sp, #40]
    21e4:	ldr	x0, [x0, #312]
    21e8:	ldr	x5, [x0]
    21ec:	ldr	x0, [sp, #40]
    21f0:	ldr	w0, [x0, #228]
    21f4:	and	w0, w0, #0x10
    21f8:	mov	w4, w0
    21fc:	mov	w3, #0x18                  	// #24
    2200:	ldr	x2, [sp, #24]
    2204:	ldr	w1, [sp, #36]
    2208:	ldr	x0, [sp, #40]
    220c:	blr	x5
    2210:	cmn	w0, #0x1
    2214:	b.ne	2220 <tdb_rec_read+0x54>  // b.any
    2218:	mov	w0, #0xffffffff            	// #-1
    221c:	b	22c4 <tdb_rec_read+0xf8>
    2220:	ldr	x0, [sp, #24]
    2224:	ldr	w1, [x0, #20]
    2228:	mov	w0, #0x1999                	// #6553
    222c:	movk	w0, #0x2601, lsl #16
    2230:	cmp	w1, w0
    2234:	b.eq	229c <tdb_rec_read+0xd0>  // b.none
    2238:	ldr	x0, [sp, #24]
    223c:	ldr	w1, [x0, #20]
    2240:	mov	w0, #0xdead                	// #57005
    2244:	movk	w0, #0xfee1, lsl #16
    2248:	cmp	w1, w0
    224c:	b.eq	229c <tdb_rec_read+0xd0>  // b.none
    2250:	ldr	x0, [sp, #40]
    2254:	mov	w1, #0x1                   	// #1
    2258:	str	w1, [x0, #56]
    225c:	ldr	x0, [sp, #40]
    2260:	ldr	x5, [x0, #280]
    2264:	ldr	x0, [sp, #24]
    2268:	ldr	w0, [x0, #20]
    226c:	ldr	w4, [sp, #36]
    2270:	mov	w3, w0
    2274:	adrp	x0, 0 <ext2fs_tdb_error>
    2278:	add	x2, x0, #0x0
    227c:	mov	w1, #0x0                   	// #0
    2280:	ldr	x0, [sp, #40]
    2284:	blr	x5
    2288:	ldr	x0, [sp, #40]
    228c:	mov	w1, #0x1                   	// #1
    2290:	str	w1, [x0, #56]
    2294:	mov	w0, #0xffffffff            	// #-1
    2298:	b	22c4 <tdb_rec_read+0xf8>
    229c:	ldr	x0, [sp, #40]
    22a0:	ldr	x0, [x0, #312]
    22a4:	ldr	x3, [x0, #24]
    22a8:	ldr	x0, [sp, #24]
    22ac:	ldr	w0, [x0]
    22b0:	add	w0, w0, #0x18
    22b4:	mov	w2, #0x0                   	// #0
    22b8:	mov	w1, w0
    22bc:	ldr	x0, [sp, #40]
    22c0:	blr	x3
    22c4:	ldp	x29, x30, [sp], #48
    22c8:	ret

00000000000022cc <tdb_rec_write>:
    22cc:	stp	x29, x30, [sp, #-96]!
    22d0:	mov	x29, sp
    22d4:	str	x19, [sp, #16]
    22d8:	str	x0, [sp, #56]
    22dc:	str	w1, [sp, #52]
    22e0:	str	x2, [sp, #40]
    22e4:	ldr	x0, [sp, #40]
    22e8:	add	x2, sp, #0x48
    22ec:	mov	x3, x0
    22f0:	ldp	x0, x1, [x3]
    22f4:	stp	x0, x1, [x2]
    22f8:	ldr	x0, [x3, #16]
    22fc:	str	x0, [x2, #16]
    2300:	ldr	x0, [sp, #56]
    2304:	ldr	x0, [x0, #312]
    2308:	ldr	x19, [x0, #8]
    230c:	ldr	x0, [sp, #56]
    2310:	ldr	w0, [x0, #228]
    2314:	and	w0, w0, #0x10
    2318:	cmp	w0, #0x0
    231c:	b.eq	2330 <tdb_rec_write+0x64>  // b.none
    2320:	add	x0, sp, #0x48
    2324:	mov	w1, #0x18                  	// #24
    2328:	bl	1608 <tdb_convert>
    232c:	b	2334 <tdb_rec_write+0x68>
    2330:	add	x0, sp, #0x48
    2334:	mov	w3, #0x18                  	// #24
    2338:	mov	x2, x0
    233c:	ldr	w1, [sp, #52]
    2340:	ldr	x0, [sp, #56]
    2344:	blr	x19
    2348:	ldr	x19, [sp, #16]
    234c:	ldp	x29, x30, [sp], #96
    2350:	ret

0000000000002354 <tdb_io_init>:
    2354:	sub	sp, sp, #0x10
    2358:	str	x0, [sp, #8]
    235c:	ldr	x0, [sp, #8]
    2360:	adrp	x1, 0 <ext2fs_tdb_error>
    2364:	add	x1, x1, #0x0
    2368:	str	x1, [x0, #312]
    236c:	nop
    2370:	add	sp, sp, #0x10
    2374:	ret

0000000000002378 <transaction_read>:
    2378:	stp	x29, x30, [sp, #-64]!
    237c:	mov	x29, sp
    2380:	str	x0, [sp, #40]
    2384:	str	w1, [sp, #36]
    2388:	str	x2, [sp, #24]
    238c:	str	w3, [sp, #32]
    2390:	str	w4, [sp, #20]
    2394:	ldr	x0, [sp, #40]
    2398:	ldr	x0, [x0, #320]
    239c:	ldr	x0, [x0, #24]
    23a0:	str	x0, [sp, #56]
    23a4:	b	2578 <transaction_read+0x200>
    23a8:	ldr	w1, [sp, #36]
    23ac:	ldr	w0, [sp, #32]
    23b0:	add	w1, w1, w0
    23b4:	ldr	x0, [sp, #56]
    23b8:	ldr	w0, [x0, #16]
    23bc:	cmp	w1, w0
    23c0:	b.ls	2560 <transaction_read+0x1e8>  // b.plast
    23c4:	ldr	x0, [sp, #56]
    23c8:	ldr	w1, [x0, #16]
    23cc:	ldr	x0, [sp, #56]
    23d0:	ldr	w0, [x0, #20]
    23d4:	add	w0, w1, w0
    23d8:	ldr	w1, [sp, #36]
    23dc:	cmp	w1, w0
    23e0:	b.cs	2568 <transaction_read+0x1f0>  // b.hs, b.nlast
    23e4:	ldr	x0, [sp, #56]
    23e8:	ldr	w0, [x0, #16]
    23ec:	ldr	w1, [sp, #36]
    23f0:	cmp	w1, w0
    23f4:	b.cs	245c <transaction_read+0xe4>  // b.hs, b.nlast
    23f8:	ldr	x0, [sp, #56]
    23fc:	ldr	w1, [x0, #16]
    2400:	ldr	w0, [sp, #36]
    2404:	sub	w0, w1, w0
    2408:	str	w0, [sp, #52]
    240c:	ldr	w4, [sp, #20]
    2410:	ldr	w3, [sp, #52]
    2414:	ldr	x2, [sp, #24]
    2418:	ldr	w1, [sp, #36]
    241c:	ldr	x0, [sp, #40]
    2420:	bl	2378 <transaction_read>
    2424:	cmp	w0, #0x0
    2428:	b.ne	25b0 <transaction_read+0x238>  // b.any
    242c:	ldr	w1, [sp, #32]
    2430:	ldr	w0, [sp, #52]
    2434:	sub	w0, w1, w0
    2438:	str	w0, [sp, #32]
    243c:	ldr	w1, [sp, #36]
    2440:	ldr	w0, [sp, #52]
    2444:	add	w0, w1, w0
    2448:	str	w0, [sp, #36]
    244c:	ldr	w0, [sp, #52]
    2450:	ldr	x1, [sp, #24]
    2454:	add	x0, x1, x0
    2458:	str	x0, [sp, #24]
    245c:	ldr	w1, [sp, #36]
    2460:	ldr	w0, [sp, #32]
    2464:	add	w1, w1, w0
    2468:	ldr	x0, [sp, #56]
    246c:	ldr	w2, [x0, #16]
    2470:	ldr	x0, [sp, #56]
    2474:	ldr	w0, [x0, #20]
    2478:	add	w0, w2, w0
    247c:	cmp	w1, w0
    2480:	b.hi	2490 <transaction_read+0x118>  // b.pmore
    2484:	ldr	w0, [sp, #32]
    2488:	str	w0, [sp, #52]
    248c:	b	24b0 <transaction_read+0x138>
    2490:	ldr	x0, [sp, #56]
    2494:	ldr	w1, [x0, #16]
    2498:	ldr	x0, [sp, #56]
    249c:	ldr	w0, [x0, #20]
    24a0:	add	w1, w1, w0
    24a4:	ldr	w0, [sp, #36]
    24a8:	sub	w0, w1, w0
    24ac:	str	w0, [sp, #52]
    24b0:	ldr	x0, [sp, #56]
    24b4:	ldr	x1, [x0, #24]
    24b8:	ldr	x0, [sp, #56]
    24bc:	ldr	w0, [x0, #16]
    24c0:	ldr	w2, [sp, #36]
    24c4:	sub	w0, w2, w0
    24c8:	mov	w0, w0
    24cc:	add	x0, x1, x0
    24d0:	ldr	w1, [sp, #52]
    24d4:	mov	x2, x1
    24d8:	mov	x1, x0
    24dc:	ldr	x0, [sp, #24]
    24e0:	bl	0 <memcpy>
    24e4:	ldr	w0, [sp, #20]
    24e8:	cmp	w0, #0x0
    24ec:	b.eq	24fc <transaction_read+0x184>  // b.none
    24f0:	ldr	w1, [sp, #32]
    24f4:	ldr	x0, [sp, #24]
    24f8:	bl	1608 <tdb_convert>
    24fc:	ldr	w1, [sp, #32]
    2500:	ldr	w0, [sp, #52]
    2504:	sub	w0, w1, w0
    2508:	str	w0, [sp, #32]
    250c:	ldr	w1, [sp, #36]
    2510:	ldr	w0, [sp, #52]
    2514:	add	w0, w1, w0
    2518:	str	w0, [sp, #36]
    251c:	ldr	w0, [sp, #52]
    2520:	ldr	x1, [sp, #24]
    2524:	add	x0, x1, x0
    2528:	str	x0, [sp, #24]
    252c:	ldr	w0, [sp, #32]
    2530:	cmp	w0, #0x0
    2534:	b.eq	2558 <transaction_read+0x1e0>  // b.none
    2538:	ldr	w4, [sp, #20]
    253c:	ldr	w3, [sp, #32]
    2540:	ldr	x2, [sp, #24]
    2544:	ldr	w1, [sp, #36]
    2548:	ldr	x0, [sp, #40]
    254c:	bl	2378 <transaction_read>
    2550:	cmp	w0, #0x0
    2554:	b.ne	25b8 <transaction_read+0x240>  // b.any
    2558:	mov	w0, #0x0                   	// #0
    255c:	b	2600 <transaction_read+0x288>
    2560:	nop
    2564:	b	256c <transaction_read+0x1f4>
    2568:	nop
    256c:	ldr	x0, [sp, #56]
    2570:	ldr	x0, [x0, #8]
    2574:	str	x0, [sp, #56]
    2578:	ldr	x0, [sp, #56]
    257c:	cmp	x0, #0x0
    2580:	b.ne	23a8 <transaction_read+0x30>  // b.any
    2584:	ldr	x0, [sp, #40]
    2588:	ldr	x0, [x0, #320]
    258c:	ldr	x0, [x0, #8]
    2590:	ldr	x5, [x0]
    2594:	ldr	w4, [sp, #20]
    2598:	ldr	w3, [sp, #32]
    259c:	ldr	x2, [sp, #24]
    25a0:	ldr	w1, [sp, #36]
    25a4:	ldr	x0, [sp, #40]
    25a8:	blr	x5
    25ac:	b	2600 <transaction_read+0x288>
    25b0:	nop
    25b4:	b	25bc <transaction_read+0x244>
    25b8:	nop
    25bc:	ldr	x0, [sp, #40]
    25c0:	ldr	x5, [x0, #280]
    25c4:	ldr	w4, [sp, #32]
    25c8:	ldr	w3, [sp, #36]
    25cc:	adrp	x0, 0 <ext2fs_tdb_error>
    25d0:	add	x2, x0, #0x0
    25d4:	mov	w1, #0x0                   	// #0
    25d8:	ldr	x0, [sp, #40]
    25dc:	blr	x5
    25e0:	ldr	x0, [sp, #40]
    25e4:	mov	w1, #0x2                   	// #2
    25e8:	str	w1, [x0, #56]
    25ec:	ldr	x0, [sp, #40]
    25f0:	ldr	x0, [x0, #320]
    25f4:	mov	w1, #0x1                   	// #1
    25f8:	str	w1, [x0, #32]
    25fc:	mov	w0, #0xffffffff            	// #-1
    2600:	ldp	x29, x30, [sp], #64
    2604:	ret

0000000000002608 <transaction_write>:
    2608:	stp	x29, x30, [sp, #-80]!
    260c:	mov	x29, sp
    2610:	str	x0, [sp, #40]
    2614:	str	w1, [sp, #36]
    2618:	str	x2, [sp, #24]
    261c:	str	w3, [sp, #32]
    2620:	str	xzr, [sp, #64]
    2624:	ldr	w0, [sp, #32]
    2628:	cmp	w0, #0x0
    262c:	b.ne	2638 <transaction_write+0x30>  // b.any
    2630:	mov	w0, #0x0                   	// #0
    2634:	b	2bb4 <transaction_write+0x5ac>
    2638:	ldr	w0, [sp, #32]
    263c:	cmp	w0, #0x4
    2640:	b.ne	26ac <transaction_write+0xa4>  // b.any
    2644:	ldr	w0, [sp, #36]
    2648:	cmp	w0, #0xa7
    264c:	b.ls	26ac <transaction_write+0xa4>  // b.plast
    2650:	ldr	w1, [sp, #36]
    2654:	ldr	x0, [sp, #40]
    2658:	ldr	w0, [x0, #96]
    265c:	add	w0, w0, #0x1
    2660:	mov	w0, w0
    2664:	add	x0, x0, #0x2a
    2668:	lsl	x0, x0, #2
    266c:	cmp	x1, x0
    2670:	b.cs	26ac <transaction_write+0xa4>  // b.hs, b.nlast
    2674:	ldr	w0, [sp, #36]
    2678:	sub	x0, x0, #0xa8
    267c:	lsr	x0, x0, #2
    2680:	str	w0, [sp, #56]
    2684:	ldr	x0, [sp, #40]
    2688:	ldr	x0, [x0, #320]
    268c:	ldr	x1, [x0]
    2690:	ldr	w0, [sp, #56]
    2694:	lsl	x0, x0, #2
    2698:	add	x0, x1, x0
    269c:	ldr	w1, [sp, #32]
    26a0:	mov	x2, x1
    26a4:	ldr	x1, [sp, #24]
    26a8:	bl	0 <memcpy>
    26ac:	ldr	x0, [sp, #40]
    26b0:	ldr	x0, [x0, #320]
    26b4:	ldr	x0, [x0, #24]
    26b8:	str	x0, [sp, #72]
    26bc:	b	28a0 <transaction_write+0x298>
    26c0:	ldr	x0, [sp, #64]
    26c4:	cmp	x0, #0x0
    26c8:	b.ne	26f4 <transaction_write+0xec>  // b.any
    26cc:	ldr	x0, [sp, #72]
    26d0:	ldr	w1, [x0, #16]
    26d4:	ldr	x0, [sp, #72]
    26d8:	ldr	w0, [x0, #20]
    26dc:	add	w0, w1, w0
    26e0:	ldr	w1, [sp, #36]
    26e4:	cmp	w1, w0
    26e8:	b.ne	26f4 <transaction_write+0xec>  // b.any
    26ec:	ldr	x0, [sp, #72]
    26f0:	str	x0, [sp, #64]
    26f4:	ldr	w1, [sp, #36]
    26f8:	ldr	w0, [sp, #32]
    26fc:	add	w1, w1, w0
    2700:	ldr	x0, [sp, #72]
    2704:	ldr	w0, [x0, #16]
    2708:	cmp	w1, w0
    270c:	b.ls	2888 <transaction_write+0x280>  // b.plast
    2710:	ldr	x0, [sp, #72]
    2714:	ldr	w1, [x0, #16]
    2718:	ldr	x0, [sp, #72]
    271c:	ldr	w0, [x0, #20]
    2720:	add	w0, w1, w0
    2724:	ldr	w1, [sp, #36]
    2728:	cmp	w1, w0
    272c:	b.cs	2890 <transaction_write+0x288>  // b.hs, b.nlast
    2730:	ldr	x0, [sp, #72]
    2734:	ldr	w0, [x0, #16]
    2738:	ldr	w1, [sp, #36]
    273c:	cmp	w1, w0
    2740:	b.cs	27a4 <transaction_write+0x19c>  // b.hs, b.nlast
    2744:	ldr	x0, [sp, #72]
    2748:	ldr	w1, [x0, #16]
    274c:	ldr	w0, [sp, #36]
    2750:	sub	w0, w1, w0
    2754:	str	w0, [sp, #60]
    2758:	ldr	w3, [sp, #60]
    275c:	ldr	x2, [sp, #24]
    2760:	ldr	w1, [sp, #36]
    2764:	ldr	x0, [sp, #40]
    2768:	bl	2608 <transaction_write>
    276c:	cmp	w0, #0x0
    2770:	b.ne	2b64 <transaction_write+0x55c>  // b.any
    2774:	ldr	w1, [sp, #32]
    2778:	ldr	w0, [sp, #60]
    277c:	sub	w0, w1, w0
    2780:	str	w0, [sp, #32]
    2784:	ldr	w1, [sp, #36]
    2788:	ldr	w0, [sp, #60]
    278c:	add	w0, w1, w0
    2790:	str	w0, [sp, #36]
    2794:	ldr	w0, [sp, #60]
    2798:	ldr	x1, [sp, #24]
    279c:	add	x0, x1, x0
    27a0:	str	x0, [sp, #24]
    27a4:	ldr	w1, [sp, #36]
    27a8:	ldr	w0, [sp, #32]
    27ac:	add	w1, w1, w0
    27b0:	ldr	x0, [sp, #72]
    27b4:	ldr	w2, [x0, #16]
    27b8:	ldr	x0, [sp, #72]
    27bc:	ldr	w0, [x0, #20]
    27c0:	add	w0, w2, w0
    27c4:	cmp	w1, w0
    27c8:	b.hi	27d8 <transaction_write+0x1d0>  // b.pmore
    27cc:	ldr	w0, [sp, #32]
    27d0:	str	w0, [sp, #60]
    27d4:	b	27f8 <transaction_write+0x1f0>
    27d8:	ldr	x0, [sp, #72]
    27dc:	ldr	w1, [x0, #16]
    27e0:	ldr	x0, [sp, #72]
    27e4:	ldr	w0, [x0, #20]
    27e8:	add	w1, w1, w0
    27ec:	ldr	w0, [sp, #36]
    27f0:	sub	w0, w1, w0
    27f4:	str	w0, [sp, #60]
    27f8:	ldr	x0, [sp, #72]
    27fc:	ldr	x1, [x0, #24]
    2800:	ldr	x0, [sp, #72]
    2804:	ldr	w0, [x0, #16]
    2808:	ldr	w2, [sp, #36]
    280c:	sub	w0, w2, w0
    2810:	mov	w0, w0
    2814:	add	x0, x1, x0
    2818:	ldr	w1, [sp, #60]
    281c:	mov	x2, x1
    2820:	ldr	x1, [sp, #24]
    2824:	bl	0 <memcpy>
    2828:	ldr	w1, [sp, #32]
    282c:	ldr	w0, [sp, #60]
    2830:	sub	w0, w1, w0
    2834:	str	w0, [sp, #32]
    2838:	ldr	w1, [sp, #36]
    283c:	ldr	w0, [sp, #60]
    2840:	add	w0, w1, w0
    2844:	str	w0, [sp, #36]
    2848:	ldr	w0, [sp, #60]
    284c:	ldr	x1, [sp, #24]
    2850:	add	x0, x1, x0
    2854:	str	x0, [sp, #24]
    2858:	ldr	w0, [sp, #32]
    285c:	cmp	w0, #0x0
    2860:	b.eq	2880 <transaction_write+0x278>  // b.none
    2864:	ldr	w3, [sp, #32]
    2868:	ldr	x2, [sp, #24]
    286c:	ldr	w1, [sp, #36]
    2870:	ldr	x0, [sp, #40]
    2874:	bl	2608 <transaction_write>
    2878:	cmp	w0, #0x0
    287c:	b.ne	2b6c <transaction_write+0x564>  // b.any
    2880:	mov	w0, #0x0                   	// #0
    2884:	b	2bb4 <transaction_write+0x5ac>
    2888:	nop
    288c:	b	2894 <transaction_write+0x28c>
    2890:	nop
    2894:	ldr	x0, [sp, #72]
    2898:	ldr	x0, [x0, #8]
    289c:	str	x0, [sp, #72]
    28a0:	ldr	x0, [sp, #72]
    28a4:	cmp	x0, #0x0
    28a8:	b.ne	26c0 <transaction_write+0xb8>  // b.any
    28ac:	ldr	x0, [sp, #64]
    28b0:	cmp	x0, #0x0
    28b4:	b.eq	2a18 <transaction_write+0x410>  // b.none
    28b8:	ldr	x0, [sp, #64]
    28bc:	ldr	w1, [x0, #16]
    28c0:	ldr	x0, [sp, #64]
    28c4:	ldr	w0, [x0, #20]
    28c8:	add	w0, w1, w0
    28cc:	ldr	w1, [sp, #36]
    28d0:	cmp	w1, w0
    28d4:	b.ne	2a18 <transaction_write+0x410>  // b.any
    28d8:	ldr	w1, [sp, #36]
    28dc:	ldr	w0, [sp, #32]
    28e0:	add	w1, w1, w0
    28e4:	ldr	x0, [sp, #40]
    28e8:	ldr	x0, [x0, #320]
    28ec:	ldr	w0, [x0, #40]
    28f0:	cmp	w1, w0
    28f4:	b.cc	2910 <transaction_write+0x308>  // b.lo, b.ul, b.last
    28f8:	ldr	x0, [sp, #40]
    28fc:	ldr	x0, [x0, #320]
    2900:	ldr	w0, [x0, #40]
    2904:	ldr	w1, [sp, #36]
    2908:	cmp	w1, w0
    290c:	b.ls	2a18 <transaction_write+0x410>  // b.plast
    2910:	ldr	x0, [sp, #64]
    2914:	ldr	x0, [x0, #24]
    2918:	str	x0, [sp, #48]
    291c:	ldr	x0, [sp, #64]
    2920:	str	x0, [sp, #72]
    2924:	ldr	x0, [sp, #72]
    2928:	ldr	x2, [x0, #24]
    292c:	ldr	x0, [sp, #72]
    2930:	ldr	w1, [x0, #20]
    2934:	ldr	w0, [sp, #32]
    2938:	add	w0, w1, w0
    293c:	mov	w0, w0
    2940:	mov	x1, x0
    2944:	mov	x0, x2
    2948:	bl	0 <realloc>
    294c:	mov	x1, x0
    2950:	ldr	x0, [sp, #72]
    2954:	str	x1, [x0, #24]
    2958:	ldr	x0, [sp, #72]
    295c:	ldr	x0, [x0, #24]
    2960:	cmp	x0, #0x0
    2964:	b.ne	2998 <transaction_write+0x390>  // b.any
    2968:	ldr	x0, [sp, #40]
    296c:	mov	w1, #0x4                   	// #4
    2970:	str	w1, [x0, #56]
    2974:	ldr	x0, [sp, #40]
    2978:	ldr	x0, [x0, #320]
    297c:	mov	w1, #0x1                   	// #1
    2980:	str	w1, [x0, #32]
    2984:	ldr	x0, [sp, #72]
    2988:	ldr	x1, [sp, #48]
    298c:	str	x1, [x0, #24]
    2990:	mov	w0, #0xffffffff            	// #-1
    2994:	b	2bb4 <transaction_write+0x5ac>
    2998:	ldr	x0, [sp, #24]
    299c:	cmp	x0, #0x0
    29a0:	b.eq	29d0 <transaction_write+0x3c8>  // b.none
    29a4:	ldr	x0, [sp, #72]
    29a8:	ldr	x1, [x0, #24]
    29ac:	ldr	x0, [sp, #72]
    29b0:	ldr	w0, [x0, #20]
    29b4:	mov	w0, w0
    29b8:	add	x0, x1, x0
    29bc:	ldr	w1, [sp, #32]
    29c0:	mov	x2, x1
    29c4:	ldr	x1, [sp, #24]
    29c8:	bl	0 <memcpy>
    29cc:	b	29f8 <transaction_write+0x3f0>
    29d0:	ldr	x0, [sp, #72]
    29d4:	ldr	x1, [x0, #24]
    29d8:	ldr	x0, [sp, #72]
    29dc:	ldr	w0, [x0, #20]
    29e0:	mov	w0, w0
    29e4:	add	x0, x1, x0
    29e8:	ldr	w1, [sp, #32]
    29ec:	mov	x2, x1
    29f0:	mov	w1, #0x42                  	// #66
    29f4:	bl	0 <memset>
    29f8:	ldr	x0, [sp, #72]
    29fc:	ldr	w1, [x0, #20]
    2a00:	ldr	w0, [sp, #32]
    2a04:	add	w1, w1, w0
    2a08:	ldr	x0, [sp, #72]
    2a0c:	str	w1, [x0, #20]
    2a10:	mov	w0, #0x0                   	// #0
    2a14:	b	2bb4 <transaction_write+0x5ac>
    2a18:	mov	x0, #0x20                  	// #32
    2a1c:	bl	0 <malloc>
    2a20:	str	x0, [sp, #72]
    2a24:	ldr	x0, [sp, #72]
    2a28:	cmp	x0, #0x0
    2a2c:	b.ne	2a54 <transaction_write+0x44c>  // b.any
    2a30:	ldr	x0, [sp, #40]
    2a34:	mov	w1, #0x4                   	// #4
    2a38:	str	w1, [x0, #56]
    2a3c:	ldr	x0, [sp, #40]
    2a40:	ldr	x0, [x0, #320]
    2a44:	mov	w1, #0x1                   	// #1
    2a48:	str	w1, [x0, #32]
    2a4c:	mov	w0, #0xffffffff            	// #-1
    2a50:	b	2bb4 <transaction_write+0x5ac>
    2a54:	ldr	x0, [sp, #72]
    2a58:	str	xzr, [x0]
    2a5c:	ldr	x0, [sp, #40]
    2a60:	ldr	x0, [x0, #320]
    2a64:	ldr	x1, [x0, #24]
    2a68:	ldr	x0, [sp, #72]
    2a6c:	str	x1, [x0, #8]
    2a70:	ldr	x0, [sp, #72]
    2a74:	ldr	w1, [sp, #36]
    2a78:	str	w1, [x0, #16]
    2a7c:	ldr	x0, [sp, #72]
    2a80:	ldr	w1, [sp, #32]
    2a84:	str	w1, [x0, #20]
    2a88:	ldr	w0, [sp, #32]
    2a8c:	bl	0 <malloc>
    2a90:	mov	x1, x0
    2a94:	ldr	x0, [sp, #72]
    2a98:	str	x1, [x0, #24]
    2a9c:	ldr	x0, [sp, #72]
    2aa0:	ldr	x0, [x0, #24]
    2aa4:	cmp	x0, #0x0
    2aa8:	b.ne	2ad8 <transaction_write+0x4d0>  // b.any
    2aac:	ldr	x0, [sp, #72]
    2ab0:	bl	0 <free>
    2ab4:	ldr	x0, [sp, #40]
    2ab8:	mov	w1, #0x4                   	// #4
    2abc:	str	w1, [x0, #56]
    2ac0:	ldr	x0, [sp, #40]
    2ac4:	ldr	x0, [x0, #320]
    2ac8:	mov	w1, #0x1                   	// #1
    2acc:	str	w1, [x0, #32]
    2ad0:	mov	w0, #0xffffffff            	// #-1
    2ad4:	b	2bb4 <transaction_write+0x5ac>
    2ad8:	ldr	x0, [sp, #24]
    2adc:	cmp	x0, #0x0
    2ae0:	b.eq	2b00 <transaction_write+0x4f8>  // b.none
    2ae4:	ldr	x0, [sp, #72]
    2ae8:	ldr	x0, [x0, #24]
    2aec:	ldr	w1, [sp, #32]
    2af0:	mov	x2, x1
    2af4:	ldr	x1, [sp, #24]
    2af8:	bl	0 <memcpy>
    2afc:	b	2b18 <transaction_write+0x510>
    2b00:	ldr	x0, [sp, #72]
    2b04:	ldr	x0, [x0, #24]
    2b08:	ldr	w1, [sp, #32]
    2b0c:	mov	x2, x1
    2b10:	mov	w1, #0x42                  	// #66
    2b14:	bl	0 <memset>
    2b18:	ldr	x0, [sp, #72]
    2b1c:	ldr	x0, [x0, #8]
    2b20:	cmp	x0, #0x0
    2b24:	b.eq	2b3c <transaction_write+0x534>  // b.none
    2b28:	ldr	x0, [sp, #72]
    2b2c:	ldr	x0, [x0, #8]
    2b30:	ldr	x1, [sp, #72]
    2b34:	str	x1, [x0]
    2b38:	b	2b4c <transaction_write+0x544>
    2b3c:	ldr	x0, [sp, #40]
    2b40:	ldr	x0, [x0, #320]
    2b44:	ldr	x1, [sp, #72]
    2b48:	str	x1, [x0, #16]
    2b4c:	ldr	x0, [sp, #40]
    2b50:	ldr	x0, [x0, #320]
    2b54:	ldr	x1, [sp, #72]
    2b58:	str	x1, [x0, #24]
    2b5c:	mov	w0, #0x0                   	// #0
    2b60:	b	2bb4 <transaction_write+0x5ac>
    2b64:	nop
    2b68:	b	2b70 <transaction_write+0x568>
    2b6c:	nop
    2b70:	ldr	x0, [sp, #40]
    2b74:	ldr	x5, [x0, #280]
    2b78:	ldr	w4, [sp, #32]
    2b7c:	ldr	w3, [sp, #36]
    2b80:	adrp	x0, 0 <ext2fs_tdb_error>
    2b84:	add	x2, x0, #0x0
    2b88:	mov	w1, #0x0                   	// #0
    2b8c:	ldr	x0, [sp, #40]
    2b90:	blr	x5
    2b94:	ldr	x0, [sp, #40]
    2b98:	mov	w1, #0x2                   	// #2
    2b9c:	str	w1, [x0, #56]
    2ba0:	ldr	x0, [sp, #40]
    2ba4:	ldr	x0, [x0, #320]
    2ba8:	mov	w1, #0x1                   	// #1
    2bac:	str	w1, [x0, #32]
    2bb0:	mov	w0, #0xffffffff            	// #-1
    2bb4:	ldp	x29, x30, [sp], #80
    2bb8:	ret

0000000000002bbc <transaction_next_hash_chain>:
    2bbc:	sub	sp, sp, #0x20
    2bc0:	str	x0, [sp, #8]
    2bc4:	str	x1, [sp]
    2bc8:	ldr	x0, [sp]
    2bcc:	ldr	w0, [x0]
    2bd0:	str	w0, [sp, #28]
    2bd4:	b	2c10 <transaction_next_hash_chain+0x54>
    2bd8:	ldr	x0, [sp, #8]
    2bdc:	ldr	x0, [x0, #320]
    2be0:	ldr	x1, [x0]
    2be4:	ldr	w0, [sp, #28]
    2be8:	add	w0, w0, #0x1
    2bec:	mov	w0, w0
    2bf0:	lsl	x0, x0, #2
    2bf4:	add	x0, x1, x0
    2bf8:	ldr	w0, [x0]
    2bfc:	cmp	w0, #0x0
    2c00:	b.ne	2c28 <transaction_next_hash_chain+0x6c>  // b.any
    2c04:	ldr	w0, [sp, #28]
    2c08:	add	w0, w0, #0x1
    2c0c:	str	w0, [sp, #28]
    2c10:	ldr	x0, [sp, #8]
    2c14:	ldr	w0, [x0, #96]
    2c18:	ldr	w1, [sp, #28]
    2c1c:	cmp	w1, w0
    2c20:	b.cc	2bd8 <transaction_next_hash_chain+0x1c>  // b.lo, b.ul, b.last
    2c24:	b	2c2c <transaction_next_hash_chain+0x70>
    2c28:	nop
    2c2c:	ldr	x0, [sp]
    2c30:	ldr	w1, [sp, #28]
    2c34:	str	w1, [x0]
    2c38:	nop
    2c3c:	add	sp, sp, #0x20
    2c40:	ret

0000000000002c44 <transaction_oob>:
    2c44:	sub	sp, sp, #0x10
    2c48:	str	x0, [sp, #8]
    2c4c:	str	w1, [sp, #4]
    2c50:	str	w2, [sp]
    2c54:	ldr	x0, [sp, #8]
    2c58:	ldr	w0, [x0, #20]
    2c5c:	ldr	w1, [sp, #4]
    2c60:	cmp	w1, w0
    2c64:	b.hi	2c70 <transaction_oob+0x2c>  // b.pmore
    2c68:	mov	w0, #0x0                   	// #0
    2c6c:	b	2c80 <transaction_oob+0x3c>
    2c70:	ldr	x0, [sp, #8]
    2c74:	mov	w1, #0x2                   	// #2
    2c78:	str	w1, [x0, #56]
    2c7c:	mov	w0, #0xffffffff            	// #-1
    2c80:	add	sp, sp, #0x10
    2c84:	ret

0000000000002c88 <transaction_expand_file>:
    2c88:	stp	x29, x30, [sp, #-32]!
    2c8c:	mov	x29, sp
    2c90:	str	x0, [sp, #24]
    2c94:	str	w1, [sp, #20]
    2c98:	str	w2, [sp, #16]
    2c9c:	ldr	w3, [sp, #16]
    2ca0:	mov	x2, #0x0                   	// #0
    2ca4:	ldr	w1, [sp, #20]
    2ca8:	ldr	x0, [sp, #24]
    2cac:	bl	2608 <transaction_write>
    2cb0:	cmp	w0, #0x0
    2cb4:	b.eq	2cc0 <transaction_expand_file+0x38>  // b.none
    2cb8:	mov	w0, #0xffffffff            	// #-1
    2cbc:	b	2cc4 <transaction_expand_file+0x3c>
    2cc0:	mov	w0, #0x0                   	// #0
    2cc4:	ldp	x29, x30, [sp], #32
    2cc8:	ret

0000000000002ccc <transaction_brlock>:
    2ccc:	sub	sp, sp, #0x20
    2cd0:	str	x0, [sp, #24]
    2cd4:	str	w1, [sp, #20]
    2cd8:	str	w2, [sp, #16]
    2cdc:	str	w3, [sp, #12]
    2ce0:	str	w4, [sp, #8]
    2ce4:	str	x5, [sp]
    2ce8:	mov	w0, #0x0                   	// #0
    2cec:	add	sp, sp, #0x20
    2cf0:	ret

0000000000002cf4 <ext2fs_tdb_transaction_start>:
    2cf4:	stp	x29, x30, [sp, #-48]!
    2cf8:	mov	x29, sp
    2cfc:	str	x19, [sp, #16]
    2d00:	str	x0, [sp, #40]
    2d04:	ldr	x0, [sp, #40]
    2d08:	ldr	w0, [x0, #24]
    2d0c:	cmp	w0, #0x0
    2d10:	b.ne	2d38 <ext2fs_tdb_transaction_start+0x44>  // b.any
    2d14:	ldr	x0, [sp, #40]
    2d18:	ldr	w0, [x0, #228]
    2d1c:	and	w0, w0, #0x2
    2d20:	cmp	w0, #0x0
    2d24:	b.ne	2d38 <ext2fs_tdb_transaction_start+0x44>  // b.any
    2d28:	ldr	x0, [sp, #40]
    2d2c:	ldr	w0, [x0, #28]
    2d30:	cmp	w0, #0x0
    2d34:	b.eq	2d68 <ext2fs_tdb_transaction_start+0x74>  // b.none
    2d38:	ldr	x0, [sp, #40]
    2d3c:	ldr	x3, [x0, #280]
    2d40:	adrp	x0, 0 <ext2fs_tdb_error>
    2d44:	add	x2, x0, #0x0
    2d48:	mov	w1, #0x1                   	// #1
    2d4c:	ldr	x0, [sp, #40]
    2d50:	blr	x3
    2d54:	ldr	x0, [sp, #40]
    2d58:	mov	w1, #0x9                   	// #9
    2d5c:	str	w1, [x0, #56]
    2d60:	mov	w0, #0xffffffff            	// #-1
    2d64:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2d68:	ldr	x0, [sp, #40]
    2d6c:	ldr	x0, [x0, #320]
    2d70:	cmp	x0, #0x0
    2d74:	b.eq	2dc0 <ext2fs_tdb_transaction_start+0xcc>  // b.none
    2d78:	ldr	x0, [sp, #40]
    2d7c:	ldr	x0, [x0, #320]
    2d80:	ldr	w1, [x0, #36]
    2d84:	add	w1, w1, #0x1
    2d88:	str	w1, [x0, #36]
    2d8c:	ldr	x0, [sp, #40]
    2d90:	ldr	x4, [x0, #280]
    2d94:	ldr	x0, [sp, #40]
    2d98:	ldr	x0, [x0, #320]
    2d9c:	ldr	w0, [x0, #36]
    2da0:	mov	w3, w0
    2da4:	adrp	x0, 0 <ext2fs_tdb_error>
    2da8:	add	x2, x0, #0x0
    2dac:	mov	w1, #0x3                   	// #3
    2db0:	ldr	x0, [sp, #40]
    2db4:	blr	x4
    2db8:	mov	w0, #0x0                   	// #0
    2dbc:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2dc0:	ldr	x0, [sp, #40]
    2dc4:	ldr	w0, [x0, #308]
    2dc8:	cmp	w0, #0x0
    2dcc:	b.ne	2de0 <ext2fs_tdb_transaction_start+0xec>  // b.any
    2dd0:	ldr	x0, [sp, #40]
    2dd4:	ldr	w0, [x0, #36]
    2dd8:	cmp	w0, #0x0
    2ddc:	b.eq	2e10 <ext2fs_tdb_transaction_start+0x11c>  // b.none
    2de0:	ldr	x0, [sp, #40]
    2de4:	ldr	x3, [x0, #280]
    2de8:	adrp	x0, 0 <ext2fs_tdb_error>
    2dec:	add	x2, x0, #0x0
    2df0:	mov	w1, #0x1                   	// #1
    2df4:	ldr	x0, [sp, #40]
    2df8:	blr	x3
    2dfc:	ldr	x0, [sp, #40]
    2e00:	mov	w1, #0x3                   	// #3
    2e04:	str	w1, [x0, #56]
    2e08:	mov	w0, #0xffffffff            	// #-1
    2e0c:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2e10:	ldr	x0, [sp, #40]
    2e14:	ldr	x0, [x0, #232]
    2e18:	cmp	x0, #0x0
    2e1c:	b.eq	2e50 <ext2fs_tdb_transaction_start+0x15c>  // b.none
    2e20:	ldr	x0, [sp, #40]
    2e24:	ldr	x3, [x0, #280]
    2e28:	adrp	x0, 0 <ext2fs_tdb_error>
    2e2c:	add	x2, x0, #0x0
    2e30:	mov	w1, #0x1                   	// #1
    2e34:	ldr	x0, [sp, #40]
    2e38:	blr	x3
    2e3c:	ldr	x0, [sp, #40]
    2e40:	mov	w1, #0x3                   	// #3
    2e44:	str	w1, [x0, #56]
    2e48:	mov	w0, #0xffffffff            	// #-1
    2e4c:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2e50:	mov	x1, #0x1                   	// #1
    2e54:	mov	x0, #0x30                  	// #48
    2e58:	bl	0 <calloc>
    2e5c:	mov	x1, x0
    2e60:	ldr	x0, [sp, #40]
    2e64:	str	x1, [x0, #320]
    2e68:	ldr	x0, [sp, #40]
    2e6c:	ldr	x0, [x0, #320]
    2e70:	cmp	x0, #0x0
    2e74:	b.ne	2e8c <ext2fs_tdb_transaction_start+0x198>  // b.any
    2e78:	ldr	x0, [sp, #40]
    2e7c:	mov	w1, #0x4                   	// #4
    2e80:	str	w1, [x0, #56]
    2e84:	mov	w0, #0xffffffff            	// #-1
    2e88:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2e8c:	mov	w1, #0x1                   	// #1
    2e90:	ldr	x0, [sp, #40]
    2e94:	bl	9e8 <tdb_transaction_lock>
    2e98:	cmn	w0, #0x1
    2e9c:	b.ne	2ecc <ext2fs_tdb_transaction_start+0x1d8>  // b.any
    2ea0:	ldr	x0, [sp, #40]
    2ea4:	ldr	x0, [x0, #320]
    2ea8:	cmp	x0, #0x0
    2eac:	b.eq	2ec4 <ext2fs_tdb_transaction_start+0x1d0>  // b.none
    2eb0:	ldr	x0, [sp, #40]
    2eb4:	ldr	x0, [x0, #320]
    2eb8:	bl	0 <free>
    2ebc:	ldr	x0, [sp, #40]
    2ec0:	str	xzr, [x0, #320]
    2ec4:	mov	w0, #0xffffffff            	// #-1
    2ec8:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    2ecc:	mov	x5, #0x0                   	// #0
    2ed0:	mov	w4, #0x0                   	// #0
    2ed4:	mov	w3, #0x7                   	// #7
    2ed8:	mov	w2, #0x0                   	// #0
    2edc:	mov	w1, #0xa8                  	// #168
    2ee0:	ldr	x0, [sp, #40]
    2ee4:	bl	94 <tdb_brlock>
    2ee8:	cmn	w0, #0x1
    2eec:	b.ne	2f1c <ext2fs_tdb_transaction_start+0x228>  // b.any
    2ef0:	ldr	x0, [sp, #40]
    2ef4:	ldr	x3, [x0, #280]
    2ef8:	adrp	x0, 0 <ext2fs_tdb_error>
    2efc:	add	x2, x0, #0x0
    2f00:	mov	w1, #0x1                   	// #1
    2f04:	ldr	x0, [sp, #40]
    2f08:	blr	x3
    2f0c:	ldr	x0, [sp, #40]
    2f10:	mov	w1, #0x3                   	// #3
    2f14:	str	w1, [x0, #56]
    2f18:	b	30bc <ext2fs_tdb_transaction_start+0x3c8>
    2f1c:	ldr	x0, [sp, #40]
    2f20:	ldr	w0, [x0, #96]
    2f24:	add	w0, w0, #0x1
    2f28:	mov	w2, w0
    2f2c:	ldr	x0, [sp, #40]
    2f30:	ldr	x19, [x0, #320]
    2f34:	mov	x1, #0x4                   	// #4
    2f38:	mov	x0, x2
    2f3c:	bl	0 <calloc>
    2f40:	str	x0, [x19]
    2f44:	ldr	x0, [sp, #40]
    2f48:	ldr	x0, [x0, #320]
    2f4c:	ldr	x0, [x0]
    2f50:	cmp	x0, #0x0
    2f54:	b.ne	2f68 <ext2fs_tdb_transaction_start+0x274>  // b.any
    2f58:	ldr	x0, [sp, #40]
    2f5c:	mov	w1, #0x4                   	// #4
    2f60:	str	w1, [x0, #56]
    2f64:	b	30bc <ext2fs_tdb_transaction_start+0x3c8>
    2f68:	ldr	x0, [sp, #40]
    2f6c:	ldr	x0, [x0, #312]
    2f70:	ldr	x5, [x0]
    2f74:	ldr	x0, [sp, #40]
    2f78:	ldr	x0, [x0, #320]
    2f7c:	ldr	x1, [x0]
    2f80:	ldr	x0, [sp, #40]
    2f84:	ldr	w0, [x0, #96]
    2f88:	add	w0, w0, #0x1
    2f8c:	lsl	w0, w0, #2
    2f90:	mov	w4, #0x0                   	// #0
    2f94:	mov	w3, w0
    2f98:	mov	x2, x1
    2f9c:	mov	w1, #0xa8                  	// #168
    2fa0:	ldr	x0, [sp, #40]
    2fa4:	blr	x5
    2fa8:	cmp	w0, #0x0
    2fac:	b.eq	2fdc <ext2fs_tdb_transaction_start+0x2e8>  // b.none
    2fb0:	ldr	x0, [sp, #40]
    2fb4:	ldr	x3, [x0, #280]
    2fb8:	adrp	x0, 0 <ext2fs_tdb_error>
    2fbc:	add	x2, x0, #0x0
    2fc0:	mov	w1, #0x0                   	// #0
    2fc4:	ldr	x0, [sp, #40]
    2fc8:	blr	x3
    2fcc:	ldr	x0, [sp, #40]
    2fd0:	mov	w1, #0x2                   	// #2
    2fd4:	str	w1, [x0, #56]
    2fd8:	b	30bc <ext2fs_tdb_transaction_start+0x3c8>
    2fdc:	ldr	x0, [sp, #40]
    2fe0:	ldr	x0, [x0, #312]
    2fe4:	ldr	x3, [x0, #24]
    2fe8:	ldr	x0, [sp, #40]
    2fec:	ldr	w0, [x0, #20]
    2ff0:	add	w0, w0, #0x1
    2ff4:	mov	w2, #0x1                   	// #1
    2ff8:	mov	w1, w0
    2ffc:	ldr	x0, [sp, #40]
    3000:	blr	x3
    3004:	ldr	x0, [sp, #40]
    3008:	ldr	x0, [x0, #320]
    300c:	ldr	x1, [sp, #40]
    3010:	ldr	w1, [x1, #20]
    3014:	str	w1, [x0, #40]
    3018:	ldr	x0, [sp, #40]
    301c:	ldr	x0, [x0, #320]
    3020:	ldr	x1, [sp, #40]
    3024:	ldr	x1, [x1, #312]
    3028:	str	x1, [x0, #8]
    302c:	ldr	x0, [sp, #40]
    3030:	adrp	x1, 0 <ext2fs_tdb_error>
    3034:	add	x1, x1, #0x0
    3038:	str	x1, [x0, #312]
    303c:	ldr	x0, [sp, #40]
    3040:	ldr	x0, [x0, #320]
    3044:	ldr	x1, [x0]
    3048:	ldr	x0, [sp, #40]
    304c:	ldr	w0, [x0, #96]
    3050:	add	w0, w0, #0x1
    3054:	lsl	w0, w0, #2
    3058:	mov	w3, w0
    305c:	mov	x2, x1
    3060:	mov	w1, #0xa8                  	// #168
    3064:	ldr	x0, [sp, #40]
    3068:	bl	2608 <transaction_write>
    306c:	cmp	w0, #0x0
    3070:	b.eq	30b4 <ext2fs_tdb_transaction_start+0x3c0>  // b.none
    3074:	ldr	x0, [sp, #40]
    3078:	ldr	x3, [x0, #280]
    307c:	adrp	x0, 0 <ext2fs_tdb_error>
    3080:	add	x2, x0, #0x0
    3084:	mov	w1, #0x0                   	// #0
    3088:	ldr	x0, [sp, #40]
    308c:	blr	x3
    3090:	ldr	x0, [sp, #40]
    3094:	mov	w1, #0x2                   	// #2
    3098:	str	w1, [x0, #56]
    309c:	ldr	x0, [sp, #40]
    30a0:	ldr	x0, [x0, #320]
    30a4:	ldr	x1, [x0, #8]
    30a8:	ldr	x0, [sp, #40]
    30ac:	str	x1, [x0, #312]
    30b0:	b	30bc <ext2fs_tdb_transaction_start+0x3c8>
    30b4:	mov	w0, #0x0                   	// #0
    30b8:	b	3138 <ext2fs_tdb_transaction_start+0x444>
    30bc:	mov	x5, #0x0                   	// #0
    30c0:	mov	w4, #0x0                   	// #0
    30c4:	mov	w3, #0x7                   	// #7
    30c8:	mov	w2, #0x2                   	// #2
    30cc:	mov	w1, #0xa8                  	// #168
    30d0:	ldr	x0, [sp, #40]
    30d4:	bl	94 <tdb_brlock>
    30d8:	ldr	x0, [sp, #40]
    30dc:	bl	a98 <tdb_transaction_unlock>
    30e0:	ldr	x0, [sp, #40]
    30e4:	ldr	x0, [x0, #320]
    30e8:	ldr	x0, [x0]
    30ec:	cmp	x0, #0x0
    30f0:	b.eq	3110 <ext2fs_tdb_transaction_start+0x41c>  // b.none
    30f4:	ldr	x0, [sp, #40]
    30f8:	ldr	x0, [x0, #320]
    30fc:	ldr	x0, [x0]
    3100:	bl	0 <free>
    3104:	ldr	x0, [sp, #40]
    3108:	ldr	x0, [x0, #320]
    310c:	str	xzr, [x0]
    3110:	ldr	x0, [sp, #40]
    3114:	ldr	x0, [x0, #320]
    3118:	cmp	x0, #0x0
    311c:	b.eq	3134 <ext2fs_tdb_transaction_start+0x440>  // b.none
    3120:	ldr	x0, [sp, #40]
    3124:	ldr	x0, [x0, #320]
    3128:	bl	0 <free>
    312c:	ldr	x0, [sp, #40]
    3130:	str	xzr, [x0, #320]
    3134:	mov	w0, #0xffffffff            	// #-1
    3138:	ldr	x19, [sp, #16]
    313c:	ldp	x29, x30, [sp], #48
    3140:	ret

0000000000003144 <ext2fs_tdb_transaction_cancel>:
    3144:	stp	x29, x30, [sp, #-48]!
    3148:	mov	x29, sp
    314c:	str	x0, [sp, #24]
    3150:	ldr	x0, [sp, #24]
    3154:	ldr	x0, [x0, #320]
    3158:	cmp	x0, #0x0
    315c:	b.ne	3184 <ext2fs_tdb_transaction_cancel+0x40>  // b.any
    3160:	ldr	x0, [sp, #24]
    3164:	ldr	x3, [x0, #280]
    3168:	adrp	x0, 0 <ext2fs_tdb_error>
    316c:	add	x2, x0, #0x0
    3170:	mov	w1, #0x1                   	// #1
    3174:	ldr	x0, [sp, #24]
    3178:	blr	x3
    317c:	mov	w0, #0xffffffff            	// #-1
    3180:	b	33b0 <ext2fs_tdb_transaction_cancel+0x26c>
    3184:	ldr	x0, [sp, #24]
    3188:	ldr	x0, [x0, #320]
    318c:	ldr	w0, [x0, #36]
    3190:	cmp	w0, #0x0
    3194:	b.eq	31c4 <ext2fs_tdb_transaction_cancel+0x80>  // b.none
    3198:	ldr	x0, [sp, #24]
    319c:	ldr	x0, [x0, #320]
    31a0:	mov	w1, #0x1                   	// #1
    31a4:	str	w1, [x0, #32]
    31a8:	ldr	x0, [sp, #24]
    31ac:	ldr	x0, [x0, #320]
    31b0:	ldr	w1, [x0, #36]
    31b4:	sub	w1, w1, #0x1
    31b8:	str	w1, [x0, #36]
    31bc:	mov	w0, #0x0                   	// #0
    31c0:	b	33b0 <ext2fs_tdb_transaction_cancel+0x26c>
    31c4:	ldr	x0, [sp, #24]
    31c8:	ldr	x0, [x0, #320]
    31cc:	ldr	w1, [x0, #40]
    31d0:	ldr	x0, [sp, #24]
    31d4:	str	w1, [x0, #20]
    31d8:	b	3214 <ext2fs_tdb_transaction_cancel+0xd0>
    31dc:	ldr	x0, [sp, #24]
    31e0:	ldr	x0, [x0, #320]
    31e4:	ldr	x0, [x0, #16]
    31e8:	str	x0, [sp, #32]
    31ec:	ldr	x0, [sp, #24]
    31f0:	ldr	x0, [x0, #320]
    31f4:	ldr	x1, [sp, #32]
    31f8:	ldr	x1, [x1]
    31fc:	str	x1, [x0, #16]
    3200:	ldr	x0, [sp, #32]
    3204:	ldr	x0, [x0, #24]
    3208:	bl	0 <free>
    320c:	ldr	x0, [sp, #32]
    3210:	bl	0 <free>
    3214:	ldr	x0, [sp, #24]
    3218:	ldr	x0, [x0, #320]
    321c:	ldr	x0, [x0, #16]
    3220:	cmp	x0, #0x0
    3224:	b.ne	31dc <ext2fs_tdb_transaction_cancel+0x98>  // b.any
    3228:	ldr	x0, [sp, #24]
    322c:	ldr	w0, [x0, #36]
    3230:	cmp	w0, #0x0
    3234:	b.eq	326c <ext2fs_tdb_transaction_cancel+0x128>  // b.none
    3238:	ldr	x0, [sp, #24]
    323c:	ldr	w0, [x0, #96]
    3240:	lsl	w0, w0, #2
    3244:	mov	w0, w0
    3248:	mov	x5, x0
    324c:	mov	w4, #0x0                   	// #0
    3250:	mov	w3, #0x7                   	// #7
    3254:	mov	w2, #0x2                   	// #2
    3258:	mov	w1, #0xa8                  	// #168
    325c:	ldr	x0, [sp, #24]
    3260:	bl	94 <tdb_brlock>
    3264:	ldr	x0, [sp, #24]
    3268:	str	wzr, [x0, #36]
    326c:	ldr	x0, [sp, #24]
    3270:	ldr	w0, [x0, #308]
    3274:	cmp	w0, #0x0
    3278:	b.eq	3320 <ext2fs_tdb_transaction_cancel+0x1dc>  // b.none
    327c:	str	wzr, [sp, #44]
    3280:	b	32d8 <ext2fs_tdb_transaction_cancel+0x194>
    3284:	ldr	x0, [sp, #24]
    3288:	ldr	x2, [x0, #48]
    328c:	ldrsw	x1, [sp, #44]
    3290:	mov	x0, x1
    3294:	lsl	x0, x0, #1
    3298:	add	x0, x0, x1
    329c:	lsl	x0, x0, #2
    32a0:	add	x0, x2, x0
    32a4:	ldr	w0, [x0]
    32a8:	lsl	w0, w0, #2
    32ac:	add	w0, w0, #0xa8
    32b0:	mov	x5, #0x1                   	// #1
    32b4:	mov	w4, #0x0                   	// #0
    32b8:	mov	w3, #0x7                   	// #7
    32bc:	mov	w2, #0x2                   	// #2
    32c0:	mov	w1, w0
    32c4:	ldr	x0, [sp, #24]
    32c8:	bl	94 <tdb_brlock>
    32cc:	ldr	w0, [sp, #44]
    32d0:	add	w0, w0, #0x1
    32d4:	str	w0, [sp, #44]
    32d8:	ldr	x0, [sp, #24]
    32dc:	ldr	w0, [x0, #44]
    32e0:	ldr	w1, [sp, #44]
    32e4:	cmp	w1, w0
    32e8:	b.lt	3284 <ext2fs_tdb_transaction_cancel+0x140>  // b.tstop
    32ec:	ldr	x0, [sp, #24]
    32f0:	str	wzr, [x0, #308]
    32f4:	ldr	x0, [sp, #24]
    32f8:	str	wzr, [x0, #44]
    32fc:	ldr	x0, [sp, #24]
    3300:	ldr	x0, [x0, #48]
    3304:	cmp	x0, #0x0
    3308:	b.eq	3320 <ext2fs_tdb_transaction_cancel+0x1dc>  // b.none
    330c:	ldr	x0, [sp, #24]
    3310:	ldr	x0, [x0, #48]
    3314:	bl	0 <free>
    3318:	ldr	x0, [sp, #24]
    331c:	str	xzr, [x0, #48]
    3320:	ldr	x0, [sp, #24]
    3324:	ldr	x0, [x0, #320]
    3328:	ldr	x1, [x0, #8]
    332c:	ldr	x0, [sp, #24]
    3330:	str	x1, [x0, #312]
    3334:	mov	x5, #0x0                   	// #0
    3338:	mov	w4, #0x0                   	// #0
    333c:	mov	w3, #0x7                   	// #7
    3340:	mov	w2, #0x2                   	// #2
    3344:	mov	w1, #0xa8                  	// #168
    3348:	ldr	x0, [sp, #24]
    334c:	bl	94 <tdb_brlock>
    3350:	ldr	x0, [sp, #24]
    3354:	bl	a98 <tdb_transaction_unlock>
    3358:	ldr	x0, [sp, #24]
    335c:	ldr	x0, [x0, #320]
    3360:	ldr	x0, [x0]
    3364:	cmp	x0, #0x0
    3368:	b.eq	3388 <ext2fs_tdb_transaction_cancel+0x244>  // b.none
    336c:	ldr	x0, [sp, #24]
    3370:	ldr	x0, [x0, #320]
    3374:	ldr	x0, [x0]
    3378:	bl	0 <free>
    337c:	ldr	x0, [sp, #24]
    3380:	ldr	x0, [x0, #320]
    3384:	str	xzr, [x0]
    3388:	ldr	x0, [sp, #24]
    338c:	ldr	x0, [x0, #320]
    3390:	cmp	x0, #0x0
    3394:	b.eq	33ac <ext2fs_tdb_transaction_cancel+0x268>  // b.none
    3398:	ldr	x0, [sp, #24]
    339c:	ldr	x0, [x0, #320]
    33a0:	bl	0 <free>
    33a4:	ldr	x0, [sp, #24]
    33a8:	str	xzr, [x0, #320]
    33ac:	mov	w0, #0x0                   	// #0
    33b0:	ldp	x29, x30, [sp], #48
    33b4:	ret

00000000000033b8 <transaction_sync>:
    33b8:	stp	x29, x30, [sp, #-64]!
    33bc:	mov	x29, sp
    33c0:	str	x19, [sp, #16]
    33c4:	str	x0, [sp, #40]
    33c8:	str	w1, [sp, #36]
    33cc:	str	w2, [sp, #32]
    33d0:	ldr	x0, [sp, #40]
    33d4:	ldr	w0, [x0, #16]
    33d8:	bl	0 <fsync>
    33dc:	cmp	w0, #0x0
    33e0:	b.eq	3414 <transaction_sync+0x5c>  // b.none
    33e4:	ldr	x0, [sp, #40]
    33e8:	mov	w1, #0x2                   	// #2
    33ec:	str	w1, [x0, #56]
    33f0:	ldr	x0, [sp, #40]
    33f4:	ldr	x3, [x0, #280]
    33f8:	adrp	x0, 0 <ext2fs_tdb_error>
    33fc:	add	x2, x0, #0x0
    3400:	mov	w1, #0x0                   	// #0
    3404:	ldr	x0, [sp, #40]
    3408:	blr	x3
    340c:	mov	w0, #0xffffffff            	// #-1
    3410:	b	34c4 <transaction_sync+0x10c>
    3414:	ldr	x0, [sp, #40]
    3418:	ldr	x0, [x0, #8]
    341c:	cmp	x0, #0x0
    3420:	b.eq	34c0 <transaction_sync+0x108>  // b.none
    3424:	ldr	x0, [sp, #40]
    3428:	ldr	w0, [x0, #328]
    342c:	neg	w0, w0
    3430:	mov	w1, w0
    3434:	ldr	w0, [sp, #36]
    3438:	and	w0, w0, w1
    343c:	str	w0, [sp, #60]
    3440:	ldr	x0, [sp, #40]
    3444:	ldr	x1, [x0, #8]
    3448:	ldr	w0, [sp, #60]
    344c:	add	x3, x1, x0
    3450:	ldr	w1, [sp, #36]
    3454:	ldr	w0, [sp, #60]
    3458:	sub	w1, w1, w0
    345c:	ldr	w0, [sp, #32]
    3460:	add	w0, w1, w0
    3464:	mov	w0, w0
    3468:	mov	w2, #0x4                   	// #4
    346c:	mov	x1, x0
    3470:	mov	x0, x3
    3474:	bl	0 <msync>
    3478:	cmp	w0, #0x0
    347c:	b.eq	34c0 <transaction_sync+0x108>  // b.none
    3480:	ldr	x0, [sp, #40]
    3484:	mov	w1, #0x2                   	// #2
    3488:	str	w1, [x0, #56]
    348c:	ldr	x0, [sp, #40]
    3490:	ldr	x19, [x0, #280]
    3494:	bl	0 <__errno_location>
    3498:	ldr	w0, [x0]
    349c:	bl	0 <strerror>
    34a0:	mov	x3, x0
    34a4:	adrp	x0, 0 <ext2fs_tdb_error>
    34a8:	add	x2, x0, #0x0
    34ac:	mov	w1, #0x0                   	// #0
    34b0:	ldr	x0, [sp, #40]
    34b4:	blr	x19
    34b8:	mov	w0, #0xffffffff            	// #-1
    34bc:	b	34c4 <transaction_sync+0x10c>
    34c0:	mov	w0, #0x0                   	// #0
    34c4:	ldr	x19, [sp, #16]
    34c8:	ldp	x29, x30, [sp], #64
    34cc:	ret

00000000000034d0 <tdb_recovery_size>:
    34d0:	sub	sp, sp, #0x20
    34d4:	str	x0, [sp, #8]
    34d8:	str	wzr, [sp, #20]
    34dc:	mov	w0, #0x4                   	// #4
    34e0:	str	w0, [sp, #20]
    34e4:	ldr	x0, [sp, #8]
    34e8:	ldr	x0, [x0, #320]
    34ec:	ldr	x0, [x0, #16]
    34f0:	str	x0, [sp, #24]
    34f4:	b	3540 <tdb_recovery_size+0x70>
    34f8:	ldr	x0, [sp, #24]
    34fc:	ldr	w1, [x0, #16]
    3500:	ldr	x0, [sp, #8]
    3504:	ldr	x0, [x0, #320]
    3508:	ldr	w0, [x0, #40]
    350c:	cmp	w1, w0
    3510:	b.cs	3530 <tdb_recovery_size+0x60>  // b.hs, b.nlast
    3514:	ldr	x0, [sp, #24]
    3518:	ldr	w1, [x0, #20]
    351c:	ldr	w0, [sp, #20]
    3520:	add	w0, w1, w0
    3524:	add	w0, w0, #0x8
    3528:	str	w0, [sp, #20]
    352c:	b	3534 <tdb_recovery_size+0x64>
    3530:	nop
    3534:	ldr	x0, [sp, #24]
    3538:	ldr	x0, [x0]
    353c:	str	x0, [sp, #24]
    3540:	ldr	x0, [sp, #24]
    3544:	cmp	x0, #0x0
    3548:	b.ne	34f8 <tdb_recovery_size+0x28>  // b.any
    354c:	ldr	w0, [sp, #20]
    3550:	add	sp, sp, #0x20
    3554:	ret

0000000000003558 <tdb_recovery_allocate>:
    3558:	stp	x29, x30, [sp, #-96]!
    355c:	mov	x29, sp
    3560:	str	x0, [sp, #40]
    3564:	str	x1, [sp, #32]
    3568:	str	x2, [sp, #24]
    356c:	str	x3, [sp, #16]
    3570:	ldr	x0, [sp, #40]
    3574:	ldr	x0, [x0, #320]
    3578:	ldr	x0, [x0, #8]
    357c:	str	x0, [sp, #88]
    3580:	add	x0, sp, #0x3c
    3584:	mov	x2, x0
    3588:	mov	w1, #0x2c                  	// #44
    358c:	ldr	x0, [sp, #40]
    3590:	bl	1f18 <tdb_ofs_read>
    3594:	cmn	w0, #0x1
    3598:	b.ne	35c0 <tdb_recovery_allocate+0x68>  // b.any
    359c:	ldr	x0, [sp, #40]
    35a0:	ldr	x3, [x0, #280]
    35a4:	adrp	x0, 0 <ext2fs_tdb_error>
    35a8:	add	x2, x0, #0x0
    35ac:	mov	w1, #0x0                   	// #0
    35b0:	ldr	x0, [sp, #40]
    35b4:	blr	x3
    35b8:	mov	w0, #0xffffffff            	// #-1
    35bc:	b	3854 <tdb_recovery_allocate+0x2fc>
    35c0:	str	wzr, [sp, #68]
    35c4:	ldr	w0, [sp, #60]
    35c8:	cmp	w0, #0x0
    35cc:	b.eq	362c <tdb_recovery_allocate+0xd4>  // b.none
    35d0:	ldr	x0, [sp, #88]
    35d4:	ldr	x5, [x0]
    35d8:	ldr	w1, [sp, #60]
    35dc:	ldr	x0, [sp, #40]
    35e0:	ldr	w0, [x0, #228]
    35e4:	and	w2, w0, #0x10
    35e8:	add	x0, sp, #0x40
    35ec:	mov	w4, w2
    35f0:	mov	w3, #0x18                  	// #24
    35f4:	mov	x2, x0
    35f8:	ldr	x0, [sp, #40]
    35fc:	blr	x5
    3600:	cmn	w0, #0x1
    3604:	b.ne	362c <tdb_recovery_allocate+0xd4>  // b.any
    3608:	ldr	x0, [sp, #40]
    360c:	ldr	x3, [x0, #280]
    3610:	adrp	x0, 0 <ext2fs_tdb_error>
    3614:	add	x2, x0, #0x0
    3618:	mov	w1, #0x0                   	// #0
    361c:	ldr	x0, [sp, #40]
    3620:	blr	x3
    3624:	mov	w0, #0xffffffff            	// #-1
    3628:	b	3854 <tdb_recovery_allocate+0x2fc>
    362c:	ldr	x0, [sp, #40]
    3630:	bl	34d0 <tdb_recovery_size>
    3634:	mov	w1, w0
    3638:	ldr	x0, [sp, #32]
    363c:	str	w1, [x0]
    3640:	ldr	w0, [sp, #60]
    3644:	cmp	w0, #0x0
    3648:	b.eq	3680 <tdb_recovery_allocate+0x128>  // b.none
    364c:	ldr	x0, [sp, #32]
    3650:	ldr	w1, [x0]
    3654:	ldr	w0, [sp, #68]
    3658:	cmp	w1, w0
    365c:	b.hi	3680 <tdb_recovery_allocate+0x128>  // b.pmore
    3660:	ldr	w1, [sp, #68]
    3664:	ldr	x0, [sp, #16]
    3668:	str	w1, [x0]
    366c:	ldr	w1, [sp, #60]
    3670:	ldr	x0, [sp, #24]
    3674:	str	w1, [x0]
    3678:	mov	w0, #0x0                   	// #0
    367c:	b	3854 <tdb_recovery_allocate+0x2fc>
    3680:	ldr	w0, [sp, #60]
    3684:	cmp	w0, #0x0
    3688:	b.eq	36d0 <tdb_recovery_allocate+0x178>  // b.none
    368c:	ldr	w0, [sp, #60]
    3690:	add	x1, sp, #0x40
    3694:	mov	x2, x1
    3698:	mov	w1, w0
    369c:	ldr	x0, [sp, #40]
    36a0:	bl	4900 <tdb_free>
    36a4:	cmn	w0, #0x1
    36a8:	b.ne	36d0 <tdb_recovery_allocate+0x178>  // b.any
    36ac:	ldr	x0, [sp, #40]
    36b0:	ldr	x3, [x0, #280]
    36b4:	adrp	x0, 0 <ext2fs_tdb_error>
    36b8:	add	x2, x0, #0x0
    36bc:	mov	w1, #0x0                   	// #0
    36c0:	ldr	x0, [sp, #40]
    36c4:	blr	x3
    36c8:	mov	w0, #0xffffffff            	// #-1
    36cc:	b	3854 <tdb_recovery_allocate+0x2fc>
    36d0:	ldr	x0, [sp, #40]
    36d4:	bl	34d0 <tdb_recovery_size>
    36d8:	mov	w1, w0
    36dc:	ldr	x0, [sp, #32]
    36e0:	str	w1, [x0]
    36e4:	ldr	x0, [sp, #32]
    36e8:	ldr	w0, [x0]
    36ec:	ldr	x1, [sp, #40]
    36f0:	ldr	w1, [x1, #328]
    36f4:	add	w0, w0, w1
    36f8:	add	w0, w0, #0x17
    36fc:	ldr	x1, [sp, #40]
    3700:	ldr	w1, [x1, #328]
    3704:	neg	w1, w1
    3708:	and	w0, w0, w1
    370c:	sub	w1, w0, #0x18
    3710:	ldr	x0, [sp, #16]
    3714:	str	w1, [x0]
    3718:	ldr	x0, [sp, #40]
    371c:	ldr	w1, [x0, #20]
    3720:	ldr	x0, [sp, #24]
    3724:	str	w1, [x0]
    3728:	ldr	x0, [sp, #24]
    372c:	ldr	w0, [x0]
    3730:	str	w0, [sp, #60]
    3734:	ldr	x0, [sp, #88]
    3738:	ldr	x3, [x0, #32]
    373c:	ldr	x0, [sp, #40]
    3740:	ldr	x0, [x0, #320]
    3744:	ldr	w4, [x0, #40]
    3748:	ldr	x0, [sp, #40]
    374c:	ldr	w1, [x0, #20]
    3750:	ldr	x0, [sp, #40]
    3754:	ldr	x0, [x0, #320]
    3758:	ldr	w0, [x0, #40]
    375c:	sub	w1, w1, w0
    3760:	ldr	x0, [sp, #16]
    3764:	ldr	w0, [x0]
    3768:	add	w0, w1, w0
    376c:	add	w0, w0, #0x18
    3770:	mov	w2, w0
    3774:	mov	w1, w4
    3778:	ldr	x0, [sp, #40]
    377c:	blr	x3
    3780:	cmn	w0, #0x1
    3784:	b.ne	37ac <tdb_recovery_allocate+0x254>  // b.any
    3788:	ldr	x0, [sp, #40]
    378c:	ldr	x3, [x0, #280]
    3790:	adrp	x0, 0 <ext2fs_tdb_error>
    3794:	add	x2, x0, #0x0
    3798:	mov	w1, #0x0                   	// #0
    379c:	ldr	x0, [sp, #40]
    37a0:	blr	x3
    37a4:	mov	w0, #0xffffffff            	// #-1
    37a8:	b	3854 <tdb_recovery_allocate+0x2fc>
    37ac:	ldr	x0, [sp, #88]
    37b0:	ldr	x3, [x0, #24]
    37b4:	ldr	x0, [sp, #40]
    37b8:	ldr	w0, [x0, #20]
    37bc:	add	w0, w0, #0x1
    37c0:	mov	w2, #0x1                   	// #1
    37c4:	mov	w1, w0
    37c8:	ldr	x0, [sp, #40]
    37cc:	blr	x3
    37d0:	ldr	x0, [sp, #40]
    37d4:	ldr	x0, [x0, #320]
    37d8:	ldr	x1, [sp, #40]
    37dc:	ldr	w1, [x1, #20]
    37e0:	str	w1, [x0, #40]
    37e4:	ldr	x0, [sp, #40]
    37e8:	ldr	w0, [x0, #228]
    37ec:	and	w0, w0, #0x10
    37f0:	cmp	w0, #0x0
    37f4:	b.eq	3804 <tdb_recovery_allocate+0x2ac>  // b.none
    37f8:	add	x0, sp, #0x3c
    37fc:	mov	w1, #0x4                   	// #4
    3800:	bl	1608 <tdb_convert>
    3804:	ldr	x0, [sp, #88]
    3808:	ldr	x4, [x0, #8]
    380c:	add	x0, sp, #0x3c
    3810:	mov	w3, #0x4                   	// #4
    3814:	mov	x2, x0
    3818:	mov	w1, #0x2c                  	// #44
    381c:	ldr	x0, [sp, #40]
    3820:	blr	x4
    3824:	cmn	w0, #0x1
    3828:	b.ne	3850 <tdb_recovery_allocate+0x2f8>  // b.any
    382c:	ldr	x0, [sp, #40]
    3830:	ldr	x3, [x0, #280]
    3834:	adrp	x0, 0 <ext2fs_tdb_error>
    3838:	add	x2, x0, #0x0
    383c:	mov	w1, #0x0                   	// #0
    3840:	ldr	x0, [sp, #40]
    3844:	blr	x3
    3848:	mov	w0, #0xffffffff            	// #-1
    384c:	b	3854 <tdb_recovery_allocate+0x2fc>
    3850:	mov	w0, #0x0                   	// #0
    3854:	ldp	x29, x30, [sp], #96
    3858:	ret

000000000000385c <transaction_setup_recovery>:
    385c:	stp	x29, x30, [sp, #-112]!
    3860:	mov	x29, sp
    3864:	str	x0, [sp, #24]
    3868:	str	x1, [sp, #16]
    386c:	ldr	x0, [sp, #24]
    3870:	ldr	x0, [x0, #320]
    3874:	ldr	x0, [x0, #8]
    3878:	str	x0, [sp, #96]
    387c:	ldr	x0, [sp, #24]
    3880:	ldr	x0, [x0, #320]
    3884:	ldr	w0, [x0, #40]
    3888:	str	w0, [sp, #92]
    388c:	add	x2, sp, #0x30
    3890:	add	x1, sp, #0x34
    3894:	add	x0, sp, #0x4c
    3898:	mov	x3, x2
    389c:	mov	x2, x1
    38a0:	mov	x1, x0
    38a4:	ldr	x0, [sp, #24]
    38a8:	bl	3558 <tdb_recovery_allocate>
    38ac:	cmn	w0, #0x1
    38b0:	b.ne	38bc <transaction_setup_recovery+0x60>  // b.any
    38b4:	mov	w0, #0xffffffff            	// #-1
    38b8:	b	3c60 <transaction_setup_recovery+0x404>
    38bc:	ldr	w0, [sp, #76]
    38c0:	mov	w0, w0
    38c4:	add	x0, x0, #0x18
    38c8:	bl	0 <malloc>
    38cc:	str	x0, [sp, #80]
    38d0:	ldr	x0, [sp, #80]
    38d4:	cmp	x0, #0x0
    38d8:	b.ne	38f0 <transaction_setup_recovery+0x94>  // b.any
    38dc:	ldr	x0, [sp, #24]
    38e0:	mov	w1, #0x4                   	// #4
    38e4:	str	w1, [x0, #56]
    38e8:	mov	w0, #0xffffffff            	// #-1
    38ec:	b	3c60 <transaction_setup_recovery+0x404>
    38f0:	ldr	x0, [sp, #80]
    38f4:	str	x0, [sp, #56]
    38f8:	ldr	x0, [sp, #56]
    38fc:	mov	x2, #0x18                  	// #24
    3900:	mov	w1, #0x0                   	// #0
    3904:	bl	0 <memset>
    3908:	ldr	x0, [sp, #56]
    390c:	str	wzr, [x0, #20]
    3910:	ldr	x0, [sp, #56]
    3914:	ldr	w1, [sp, #76]
    3918:	str	w1, [x0, #12]
    391c:	ldr	x0, [sp, #56]
    3920:	ldr	w1, [sp, #48]
    3924:	str	w1, [x0, #4]
    3928:	ldr	x0, [sp, #56]
    392c:	ldr	w1, [sp, #92]
    3930:	str	w1, [x0, #8]
    3934:	ldr	x0, [sp, #24]
    3938:	ldr	w0, [x0, #228]
    393c:	and	w0, w0, #0x10
    3940:	cmp	w0, #0x0
    3944:	b.eq	3954 <transaction_setup_recovery+0xf8>  // b.none
    3948:	add	x0, sp, #0x38
    394c:	mov	w1, #0x8                   	// #8
    3950:	bl	1608 <tdb_convert>
    3954:	ldr	x0, [sp, #80]
    3958:	add	x0, x0, #0x18
    395c:	str	x0, [sp, #64]
    3960:	ldr	x0, [sp, #24]
    3964:	ldr	x0, [x0, #320]
    3968:	ldr	x0, [x0, #16]
    396c:	str	x0, [sp, #104]
    3970:	b	3ab8 <transaction_setup_recovery+0x25c>
    3974:	ldr	x0, [sp, #104]
    3978:	ldr	w0, [x0, #16]
    397c:	ldr	w1, [sp, #92]
    3980:	cmp	w1, w0
    3984:	b.ls	3aa8 <transaction_setup_recovery+0x24c>  // b.plast
    3988:	ldr	x0, [sp, #104]
    398c:	ldr	w1, [x0, #16]
    3990:	ldr	x0, [sp, #104]
    3994:	ldr	w0, [x0, #20]
    3998:	add	w1, w1, w0
    399c:	ldr	x0, [sp, #24]
    39a0:	ldr	x0, [x0, #320]
    39a4:	ldr	w0, [x0, #40]
    39a8:	cmp	w1, w0
    39ac:	b.ls	39e8 <transaction_setup_recovery+0x18c>  // b.plast
    39b0:	ldr	x0, [sp, #24]
    39b4:	ldr	x3, [x0, #280]
    39b8:	adrp	x0, 0 <ext2fs_tdb_error>
    39bc:	add	x2, x0, #0x0
    39c0:	mov	w1, #0x0                   	// #0
    39c4:	ldr	x0, [sp, #24]
    39c8:	blr	x3
    39cc:	ldr	x0, [sp, #80]
    39d0:	bl	0 <free>
    39d4:	ldr	x0, [sp, #24]
    39d8:	mov	w1, #0x1                   	// #1
    39dc:	str	w1, [x0, #56]
    39e0:	mov	w0, #0xffffffff            	// #-1
    39e4:	b	3c60 <transaction_setup_recovery+0x404>
    39e8:	ldr	x0, [sp, #64]
    39ec:	ldr	x1, [sp, #104]
    39f0:	add	x1, x1, #0x10
    39f4:	ldr	w1, [x1]
    39f8:	str	w1, [x0]
    39fc:	ldr	x0, [sp, #64]
    3a00:	add	x0, x0, #0x4
    3a04:	ldr	x1, [sp, #104]
    3a08:	add	x1, x1, #0x14
    3a0c:	ldr	w1, [x1]
    3a10:	str	w1, [x0]
    3a14:	ldr	x0, [sp, #24]
    3a18:	ldr	w0, [x0, #228]
    3a1c:	and	w0, w0, #0x10
    3a20:	cmp	w0, #0x0
    3a24:	b.eq	3a34 <transaction_setup_recovery+0x1d8>  // b.none
    3a28:	ldr	x0, [sp, #64]
    3a2c:	mov	w1, #0x8                   	// #8
    3a30:	bl	1608 <tdb_convert>
    3a34:	ldr	x0, [sp, #96]
    3a38:	ldr	x5, [x0]
    3a3c:	ldr	x0, [sp, #104]
    3a40:	ldr	w1, [x0, #16]
    3a44:	ldr	x0, [sp, #64]
    3a48:	add	x2, x0, #0x8
    3a4c:	ldr	x0, [sp, #104]
    3a50:	ldr	w0, [x0, #20]
    3a54:	mov	w4, #0x0                   	// #0
    3a58:	mov	w3, w0
    3a5c:	ldr	x0, [sp, #24]
    3a60:	blr	x5
    3a64:	cmp	w0, #0x0
    3a68:	b.eq	3a88 <transaction_setup_recovery+0x22c>  // b.none
    3a6c:	ldr	x0, [sp, #80]
    3a70:	bl	0 <free>
    3a74:	ldr	x0, [sp, #24]
    3a78:	mov	w1, #0x2                   	// #2
    3a7c:	str	w1, [x0, #56]
    3a80:	mov	w0, #0xffffffff            	// #-1
    3a84:	b	3c60 <transaction_setup_recovery+0x404>
    3a88:	ldr	x1, [sp, #64]
    3a8c:	ldr	x0, [sp, #104]
    3a90:	ldr	w0, [x0, #20]
    3a94:	add	w0, w0, #0x8
    3a98:	mov	w0, w0
    3a9c:	add	x0, x1, x0
    3aa0:	str	x0, [sp, #64]
    3aa4:	b	3aac <transaction_setup_recovery+0x250>
    3aa8:	nop
    3aac:	ldr	x0, [sp, #104]
    3ab0:	ldr	x0, [x0]
    3ab4:	str	x0, [sp, #104]
    3ab8:	ldr	x0, [sp, #104]
    3abc:	cmp	x0, #0x0
    3ac0:	b.ne	3974 <transaction_setup_recovery+0x118>  // b.any
    3ac4:	ldr	w0, [sp, #48]
    3ac8:	add	w0, w0, #0x18
    3acc:	str	w0, [sp, #40]
    3ad0:	ldr	x0, [sp, #64]
    3ad4:	ldr	w1, [sp, #40]
    3ad8:	str	w1, [x0]
    3adc:	ldr	x0, [sp, #24]
    3ae0:	ldr	w0, [x0, #228]
    3ae4:	and	w0, w0, #0x10
    3ae8:	cmp	w0, #0x0
    3aec:	b.eq	3afc <transaction_setup_recovery+0x2a0>  // b.none
    3af0:	add	x0, sp, #0x40
    3af4:	mov	w1, #0x8                   	// #8
    3af8:	bl	1608 <tdb_convert>
    3afc:	ldr	x0, [sp, #96]
    3b00:	ldr	x4, [x0, #8]
    3b04:	ldr	w1, [sp, #52]
    3b08:	ldr	w0, [sp, #76]
    3b0c:	add	w0, w0, #0x18
    3b10:	mov	w3, w0
    3b14:	ldr	x2, [sp, #80]
    3b18:	ldr	x0, [sp, #24]
    3b1c:	blr	x4
    3b20:	cmn	w0, #0x1
    3b24:	b.ne	3b60 <transaction_setup_recovery+0x304>  // b.any
    3b28:	ldr	x0, [sp, #24]
    3b2c:	ldr	x3, [x0, #280]
    3b30:	adrp	x0, 0 <ext2fs_tdb_error>
    3b34:	add	x2, x0, #0x0
    3b38:	mov	w1, #0x0                   	// #0
    3b3c:	ldr	x0, [sp, #24]
    3b40:	blr	x3
    3b44:	ldr	x0, [sp, #80]
    3b48:	bl	0 <free>
    3b4c:	ldr	x0, [sp, #24]
    3b50:	mov	w1, #0x2                   	// #2
    3b54:	str	w1, [x0, #56]
    3b58:	mov	w0, #0xffffffff            	// #-1
    3b5c:	b	3c60 <transaction_setup_recovery+0x404>
    3b60:	ldr	w1, [sp, #52]
    3b64:	ldr	w0, [sp, #76]
    3b68:	add	w0, w0, #0x18
    3b6c:	mov	w2, w0
    3b70:	ldr	x0, [sp, #24]
    3b74:	bl	33b8 <transaction_sync>
    3b78:	cmn	w0, #0x1
    3b7c:	b.ne	3b90 <transaction_setup_recovery+0x334>  // b.any
    3b80:	ldr	x0, [sp, #80]
    3b84:	bl	0 <free>
    3b88:	mov	w0, #0xffffffff            	// #-1
    3b8c:	b	3c60 <transaction_setup_recovery+0x404>
    3b90:	ldr	x0, [sp, #80]
    3b94:	bl	0 <free>
    3b98:	mov	w0, #0xc0e7                	// #49383
    3b9c:	movk	w0, #0xf53b, lsl #16
    3ba0:	str	w0, [sp, #44]
    3ba4:	ldr	x0, [sp, #24]
    3ba8:	ldr	w0, [x0, #228]
    3bac:	and	w0, w0, #0x10
    3bb0:	cmp	w0, #0x0
    3bb4:	b.eq	3bc4 <transaction_setup_recovery+0x368>  // b.none
    3bb8:	add	x0, sp, #0x2c
    3bbc:	mov	w1, #0x4                   	// #4
    3bc0:	bl	1608 <tdb_convert>
    3bc4:	ldr	w0, [sp, #52]
    3bc8:	add	w1, w0, #0x14
    3bcc:	ldr	x0, [sp, #16]
    3bd0:	str	w1, [x0]
    3bd4:	ldr	x0, [sp, #96]
    3bd8:	ldr	x4, [x0, #8]
    3bdc:	ldr	x0, [sp, #16]
    3be0:	ldr	w0, [x0]
    3be4:	add	x1, sp, #0x2c
    3be8:	mov	w3, #0x4                   	// #4
    3bec:	mov	x2, x1
    3bf0:	mov	w1, w0
    3bf4:	ldr	x0, [sp, #24]
    3bf8:	blr	x4
    3bfc:	cmn	w0, #0x1
    3c00:	b.ne	3c34 <transaction_setup_recovery+0x3d8>  // b.any
    3c04:	ldr	x0, [sp, #24]
    3c08:	ldr	x3, [x0, #280]
    3c0c:	adrp	x0, 0 <ext2fs_tdb_error>
    3c10:	add	x2, x0, #0x0
    3c14:	mov	w1, #0x0                   	// #0
    3c18:	ldr	x0, [sp, #24]
    3c1c:	blr	x3
    3c20:	ldr	x0, [sp, #24]
    3c24:	mov	w1, #0x2                   	// #2
    3c28:	str	w1, [x0, #56]
    3c2c:	mov	w0, #0xffffffff            	// #-1
    3c30:	b	3c60 <transaction_setup_recovery+0x404>
    3c34:	ldr	x0, [sp, #16]
    3c38:	ldr	w0, [x0]
    3c3c:	mov	w2, #0x4                   	// #4
    3c40:	mov	w1, w0
    3c44:	ldr	x0, [sp, #24]
    3c48:	bl	33b8 <transaction_sync>
    3c4c:	cmn	w0, #0x1
    3c50:	b.ne	3c5c <transaction_setup_recovery+0x400>  // b.any
    3c54:	mov	w0, #0xffffffff            	// #-1
    3c58:	b	3c60 <transaction_setup_recovery+0x404>
    3c5c:	mov	w0, #0x0                   	// #0
    3c60:	ldp	x29, x30, [sp], #112
    3c64:	ret

0000000000003c68 <ext2fs_tdb_transaction_commit>:
    3c68:	stp	x29, x30, [sp, #-64]!
    3c6c:	mov	x29, sp
    3c70:	str	x0, [sp, #24]
    3c74:	str	wzr, [sp, #44]
    3c78:	str	wzr, [sp, #40]
    3c7c:	ldr	x0, [sp, #24]
    3c80:	ldr	x0, [x0, #320]
    3c84:	cmp	x0, #0x0
    3c88:	b.ne	3cb0 <ext2fs_tdb_transaction_commit+0x48>  // b.any
    3c8c:	ldr	x0, [sp, #24]
    3c90:	ldr	x3, [x0, #280]
    3c94:	adrp	x0, 0 <ext2fs_tdb_error>
    3c98:	add	x2, x0, #0x0
    3c9c:	mov	w1, #0x1                   	// #1
    3ca0:	ldr	x0, [sp, #24]
    3ca4:	blr	x3
    3ca8:	mov	w0, #0xffffffff            	// #-1
    3cac:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3cb0:	ldr	x0, [sp, #24]
    3cb4:	ldr	x0, [x0, #320]
    3cb8:	ldr	w0, [x0, #32]
    3cbc:	cmp	w0, #0x0
    3cc0:	b.eq	3cfc <ext2fs_tdb_transaction_commit+0x94>  // b.none
    3cc4:	ldr	x0, [sp, #24]
    3cc8:	mov	w1, #0x2                   	// #2
    3ccc:	str	w1, [x0, #56]
    3cd0:	ldr	x0, [sp, #24]
    3cd4:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3cd8:	ldr	x0, [sp, #24]
    3cdc:	ldr	x3, [x0, #280]
    3ce0:	adrp	x0, 0 <ext2fs_tdb_error>
    3ce4:	add	x2, x0, #0x0
    3ce8:	mov	w1, #0x1                   	// #1
    3cec:	ldr	x0, [sp, #24]
    3cf0:	blr	x3
    3cf4:	mov	w0, #0xffffffff            	// #-1
    3cf8:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3cfc:	ldr	x0, [sp, #24]
    3d00:	ldr	x0, [x0, #320]
    3d04:	ldr	w0, [x0, #36]
    3d08:	cmp	w0, #0x0
    3d0c:	b.eq	3d2c <ext2fs_tdb_transaction_commit+0xc4>  // b.none
    3d10:	ldr	x0, [sp, #24]
    3d14:	ldr	x0, [x0, #320]
    3d18:	ldr	w1, [x0, #36]
    3d1c:	sub	w1, w1, #0x1
    3d20:	str	w1, [x0, #36]
    3d24:	mov	w0, #0x0                   	// #0
    3d28:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3d2c:	ldr	x0, [sp, #24]
    3d30:	ldr	x0, [x0, #320]
    3d34:	ldr	x0, [x0, #16]
    3d38:	cmp	x0, #0x0
    3d3c:	b.ne	3d50 <ext2fs_tdb_transaction_commit+0xe8>  // b.any
    3d40:	ldr	x0, [sp, #24]
    3d44:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3d48:	mov	w0, #0x0                   	// #0
    3d4c:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3d50:	ldr	x0, [sp, #24]
    3d54:	ldr	x0, [x0, #320]
    3d58:	ldr	x0, [x0, #8]
    3d5c:	str	x0, [sp, #56]
    3d60:	ldr	x0, [sp, #24]
    3d64:	ldr	w0, [x0, #308]
    3d68:	cmp	w0, #0x0
    3d6c:	b.ne	3d80 <ext2fs_tdb_transaction_commit+0x118>  // b.any
    3d70:	ldr	x0, [sp, #24]
    3d74:	ldr	w0, [x0, #36]
    3d78:	cmp	w0, #0x0
    3d7c:	b.eq	3db8 <ext2fs_tdb_transaction_commit+0x150>  // b.none
    3d80:	ldr	x0, [sp, #24]
    3d84:	mov	w1, #0x3                   	// #3
    3d88:	str	w1, [x0, #56]
    3d8c:	ldr	x0, [sp, #24]
    3d90:	ldr	x3, [x0, #280]
    3d94:	adrp	x0, 0 <ext2fs_tdb_error>
    3d98:	add	x2, x0, #0x0
    3d9c:	mov	w1, #0x1                   	// #1
    3da0:	ldr	x0, [sp, #24]
    3da4:	blr	x3
    3da8:	ldr	x0, [sp, #24]
    3dac:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3db0:	mov	w0, #0xffffffff            	// #-1
    3db4:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3db8:	mov	x2, #0x0                   	// #0
    3dbc:	mov	w1, #0xa8                  	// #168
    3dc0:	ldr	x0, [sp, #24]
    3dc4:	bl	1f8 <tdb_brlock_upgrade>
    3dc8:	cmn	w0, #0x1
    3dcc:	b.ne	3e08 <ext2fs_tdb_transaction_commit+0x1a0>  // b.any
    3dd0:	ldr	x0, [sp, #24]
    3dd4:	ldr	x3, [x0, #280]
    3dd8:	adrp	x0, 0 <ext2fs_tdb_error>
    3ddc:	add	x2, x0, #0x0
    3de0:	mov	w1, #0x1                   	// #1
    3de4:	ldr	x0, [sp, #24]
    3de8:	blr	x3
    3dec:	ldr	x0, [sp, #24]
    3df0:	mov	w1, #0x3                   	// #3
    3df4:	str	w1, [x0, #56]
    3df8:	ldr	x0, [sp, #24]
    3dfc:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3e00:	mov	w0, #0xffffffff            	// #-1
    3e04:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3e08:	mov	x5, #0x1                   	// #1
    3e0c:	mov	w4, #0x0                   	// #0
    3e10:	mov	w3, #0x7                   	// #7
    3e14:	mov	w2, #0x1                   	// #1
    3e18:	mov	w1, #0x0                   	// #0
    3e1c:	ldr	x0, [sp, #24]
    3e20:	bl	94 <tdb_brlock>
    3e24:	cmn	w0, #0x1
    3e28:	b.ne	3e64 <ext2fs_tdb_transaction_commit+0x1fc>  // b.any
    3e2c:	ldr	x0, [sp, #24]
    3e30:	ldr	x3, [x0, #280]
    3e34:	adrp	x0, 0 <ext2fs_tdb_error>
    3e38:	add	x2, x0, #0x0
    3e3c:	mov	w1, #0x1                   	// #1
    3e40:	ldr	x0, [sp, #24]
    3e44:	blr	x3
    3e48:	ldr	x0, [sp, #24]
    3e4c:	mov	w1, #0x3                   	// #3
    3e50:	str	w1, [x0, #56]
    3e54:	ldr	x0, [sp, #24]
    3e58:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3e5c:	mov	w0, #0xffffffff            	// #-1
    3e60:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3e64:	ldr	x0, [sp, #24]
    3e68:	ldr	w0, [x0, #228]
    3e6c:	and	w0, w0, #0x40
    3e70:	cmp	w0, #0x0
    3e74:	b.ne	3ed8 <ext2fs_tdb_transaction_commit+0x270>  // b.any
    3e78:	add	x0, sp, #0x2c
    3e7c:	mov	x1, x0
    3e80:	ldr	x0, [sp, #24]
    3e84:	bl	385c <transaction_setup_recovery>
    3e88:	cmn	w0, #0x1
    3e8c:	b.ne	3ed8 <ext2fs_tdb_transaction_commit+0x270>  // b.any
    3e90:	ldr	x0, [sp, #24]
    3e94:	ldr	x3, [x0, #280]
    3e98:	adrp	x0, 0 <ext2fs_tdb_error>
    3e9c:	add	x2, x0, #0x0
    3ea0:	mov	w1, #0x0                   	// #0
    3ea4:	ldr	x0, [sp, #24]
    3ea8:	blr	x3
    3eac:	mov	x5, #0x1                   	// #1
    3eb0:	mov	w4, #0x0                   	// #0
    3eb4:	mov	w3, #0x7                   	// #7
    3eb8:	mov	w2, #0x2                   	// #2
    3ebc:	mov	w1, #0x0                   	// #0
    3ec0:	ldr	x0, [sp, #24]
    3ec4:	bl	94 <tdb_brlock>
    3ec8:	ldr	x0, [sp, #24]
    3ecc:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3ed0:	mov	w0, #0xffffffff            	// #-1
    3ed4:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3ed8:	ldr	x0, [sp, #24]
    3edc:	ldr	w1, [x0, #20]
    3ee0:	ldr	x0, [sp, #24]
    3ee4:	ldr	x0, [x0, #320]
    3ee8:	ldr	w0, [x0, #40]
    3eec:	cmp	w1, w0
    3ef0:	b.eq	40ac <ext2fs_tdb_transaction_commit+0x444>  // b.none
    3ef4:	ldr	x0, [sp, #56]
    3ef8:	ldr	x3, [x0, #32]
    3efc:	ldr	x0, [sp, #24]
    3f00:	ldr	x0, [x0, #320]
    3f04:	ldr	w4, [x0, #40]
    3f08:	ldr	x0, [sp, #24]
    3f0c:	ldr	w1, [x0, #20]
    3f10:	ldr	x0, [sp, #24]
    3f14:	ldr	x0, [x0, #320]
    3f18:	ldr	w0, [x0, #40]
    3f1c:	sub	w0, w1, w0
    3f20:	mov	w2, w0
    3f24:	mov	w1, w4
    3f28:	ldr	x0, [sp, #24]
    3f2c:	blr	x3
    3f30:	cmn	w0, #0x1
    3f34:	b.ne	3f8c <ext2fs_tdb_transaction_commit+0x324>  // b.any
    3f38:	ldr	x0, [sp, #24]
    3f3c:	mov	w1, #0x2                   	// #2
    3f40:	str	w1, [x0, #56]
    3f44:	ldr	x0, [sp, #24]
    3f48:	ldr	x3, [x0, #280]
    3f4c:	adrp	x0, 0 <ext2fs_tdb_error>
    3f50:	add	x2, x0, #0x0
    3f54:	mov	w1, #0x0                   	// #0
    3f58:	ldr	x0, [sp, #24]
    3f5c:	blr	x3
    3f60:	mov	x5, #0x1                   	// #1
    3f64:	mov	w4, #0x0                   	// #0
    3f68:	mov	w3, #0x7                   	// #7
    3f6c:	mov	w2, #0x2                   	// #2
    3f70:	mov	w1, #0x0                   	// #0
    3f74:	ldr	x0, [sp, #24]
    3f78:	bl	94 <tdb_brlock>
    3f7c:	ldr	x0, [sp, #24]
    3f80:	bl	3144 <ext2fs_tdb_transaction_cancel>
    3f84:	mov	w0, #0xffffffff            	// #-1
    3f88:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    3f8c:	ldr	x0, [sp, #24]
    3f90:	ldr	x0, [x0, #320]
    3f94:	ldr	w1, [x0, #40]
    3f98:	ldr	x0, [sp, #24]
    3f9c:	str	w1, [x0, #20]
    3fa0:	ldr	x0, [sp, #56]
    3fa4:	ldr	x3, [x0, #24]
    3fa8:	ldr	x0, [sp, #24]
    3fac:	ldr	w0, [x0, #20]
    3fb0:	add	w0, w0, #0x1
    3fb4:	mov	w2, #0x1                   	// #1
    3fb8:	mov	w1, w0
    3fbc:	ldr	x0, [sp, #24]
    3fc0:	blr	x3
    3fc4:	b	40ac <ext2fs_tdb_transaction_commit+0x444>
    3fc8:	ldr	x0, [sp, #24]
    3fcc:	ldr	x0, [x0, #320]
    3fd0:	ldr	x0, [x0, #16]
    3fd4:	str	x0, [sp, #48]
    3fd8:	ldr	x0, [sp, #56]
    3fdc:	ldr	x4, [x0, #8]
    3fe0:	ldr	x0, [sp, #48]
    3fe4:	ldr	w1, [x0, #16]
    3fe8:	ldr	x0, [sp, #48]
    3fec:	ldr	x2, [x0, #24]
    3ff0:	ldr	x0, [sp, #48]
    3ff4:	ldr	w0, [x0, #20]
    3ff8:	mov	w3, w0
    3ffc:	ldr	x0, [sp, #24]
    4000:	blr	x4
    4004:	cmn	w0, #0x1
    4008:	b.ne	4084 <ext2fs_tdb_transaction_commit+0x41c>  // b.any
    400c:	ldr	x0, [sp, #24]
    4010:	ldr	x3, [x0, #280]
    4014:	adrp	x0, 0 <ext2fs_tdb_error>
    4018:	add	x2, x0, #0x0
    401c:	mov	w1, #0x0                   	// #0
    4020:	ldr	x0, [sp, #24]
    4024:	blr	x3
    4028:	ldr	x0, [sp, #24]
    402c:	ldr	x1, [sp, #56]
    4030:	str	x1, [x0, #312]
    4034:	ldr	x0, [sp, #24]
    4038:	bl	41b0 <ext2fs_tdb_transaction_recover>
    403c:	ldr	x0, [sp, #24]
    4040:	bl	3144 <ext2fs_tdb_transaction_cancel>
    4044:	mov	x5, #0x1                   	// #1
    4048:	mov	w4, #0x0                   	// #0
    404c:	mov	w3, #0x7                   	// #7
    4050:	mov	w2, #0x2                   	// #2
    4054:	mov	w1, #0x0                   	// #0
    4058:	ldr	x0, [sp, #24]
    405c:	bl	94 <tdb_brlock>
    4060:	ldr	x0, [sp, #24]
    4064:	ldr	x3, [x0, #280]
    4068:	adrp	x0, 0 <ext2fs_tdb_error>
    406c:	add	x2, x0, #0x0
    4070:	mov	w1, #0x0                   	// #0
    4074:	ldr	x0, [sp, #24]
    4078:	blr	x3
    407c:	mov	w0, #0xffffffff            	// #-1
    4080:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    4084:	ldr	x0, [sp, #24]
    4088:	ldr	x0, [x0, #320]
    408c:	ldr	x1, [sp, #48]
    4090:	ldr	x1, [x1]
    4094:	str	x1, [x0, #16]
    4098:	ldr	x0, [sp, #48]
    409c:	ldr	x0, [x0, #24]
    40a0:	bl	0 <free>
    40a4:	ldr	x0, [sp, #48]
    40a8:	bl	0 <free>
    40ac:	ldr	x0, [sp, #24]
    40b0:	ldr	x0, [x0, #320]
    40b4:	ldr	x0, [x0, #16]
    40b8:	cmp	x0, #0x0
    40bc:	b.ne	3fc8 <ext2fs_tdb_transaction_commit+0x360>  // b.any
    40c0:	ldr	x0, [sp, #24]
    40c4:	ldr	w0, [x0, #228]
    40c8:	and	w0, w0, #0x40
    40cc:	cmp	w0, #0x0
    40d0:	b.ne	4170 <ext2fs_tdb_transaction_commit+0x508>  // b.any
    40d4:	ldr	x0, [sp, #24]
    40d8:	ldr	w0, [x0, #20]
    40dc:	mov	w2, w0
    40e0:	mov	w1, #0x0                   	// #0
    40e4:	ldr	x0, [sp, #24]
    40e8:	bl	33b8 <transaction_sync>
    40ec:	cmn	w0, #0x1
    40f0:	b.ne	40fc <ext2fs_tdb_transaction_commit+0x494>  // b.any
    40f4:	mov	w0, #0xffffffff            	// #-1
    40f8:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    40fc:	ldr	x0, [sp, #56]
    4100:	ldr	x4, [x0, #8]
    4104:	ldr	w0, [sp, #44]
    4108:	add	x1, sp, #0x28
    410c:	mov	w3, #0x4                   	// #4
    4110:	mov	x2, x1
    4114:	mov	w1, w0
    4118:	ldr	x0, [sp, #24]
    411c:	blr	x4
    4120:	cmn	w0, #0x1
    4124:	b.ne	414c <ext2fs_tdb_transaction_commit+0x4e4>  // b.any
    4128:	ldr	x0, [sp, #24]
    412c:	ldr	x3, [x0, #280]
    4130:	adrp	x0, 0 <ext2fs_tdb_error>
    4134:	add	x2, x0, #0x0
    4138:	mov	w1, #0x0                   	// #0
    413c:	ldr	x0, [sp, #24]
    4140:	blr	x3
    4144:	mov	w0, #0xffffffff            	// #-1
    4148:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    414c:	ldr	w0, [sp, #44]
    4150:	mov	w2, #0x4                   	// #4
    4154:	mov	w1, w0
    4158:	ldr	x0, [sp, #24]
    415c:	bl	33b8 <transaction_sync>
    4160:	cmn	w0, #0x1
    4164:	b.ne	4170 <ext2fs_tdb_transaction_commit+0x508>  // b.any
    4168:	mov	w0, #0xffffffff            	// #-1
    416c:	b	41a8 <ext2fs_tdb_transaction_commit+0x540>
    4170:	mov	x5, #0x1                   	// #1
    4174:	mov	w4, #0x0                   	// #0
    4178:	mov	w3, #0x7                   	// #7
    417c:	mov	w2, #0x2                   	// #2
    4180:	mov	w1, #0x0                   	// #0
    4184:	ldr	x0, [sp, #24]
    4188:	bl	94 <tdb_brlock>
    418c:	ldr	x0, [sp, #24]
    4190:	ldr	x0, [x0]
    4194:	mov	x1, #0x0                   	// #0
    4198:	bl	0 <utime>
    419c:	ldr	x0, [sp, #24]
    41a0:	bl	3144 <ext2fs_tdb_transaction_cancel>
    41a4:	mov	w0, #0x0                   	// #0
    41a8:	ldp	x29, x30, [sp], #64
    41ac:	ret

00000000000041b0 <ext2fs_tdb_transaction_recover>:
    41b0:	stp	x29, x30, [sp, #-96]!
    41b4:	mov	x29, sp
    41b8:	str	x0, [sp, #24]
    41bc:	str	wzr, [sp, #64]
    41c0:	add	x0, sp, #0x44
    41c4:	mov	x2, x0
    41c8:	mov	w1, #0x2c                  	// #44
    41cc:	ldr	x0, [sp, #24]
    41d0:	bl	1f18 <tdb_ofs_read>
    41d4:	cmn	w0, #0x1
    41d8:	b.ne	420c <ext2fs_tdb_transaction_recover+0x5c>  // b.any
    41dc:	ldr	x0, [sp, #24]
    41e0:	ldr	x3, [x0, #280]
    41e4:	adrp	x0, 0 <ext2fs_tdb_error>
    41e8:	add	x2, x0, #0x0
    41ec:	mov	w1, #0x0                   	// #0
    41f0:	ldr	x0, [sp, #24]
    41f4:	blr	x3
    41f8:	ldr	x0, [sp, #24]
    41fc:	mov	w1, #0x2                   	// #2
    4200:	str	w1, [x0, #56]
    4204:	mov	w0, #0xffffffff            	// #-1
    4208:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    420c:	ldr	w0, [sp, #68]
    4210:	cmp	w0, #0x0
    4214:	b.ne	4220 <ext2fs_tdb_transaction_recover+0x70>  // b.any
    4218:	mov	w0, #0x0                   	// #0
    421c:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    4220:	ldr	x0, [sp, #24]
    4224:	ldr	x0, [x0, #312]
    4228:	ldr	x5, [x0]
    422c:	ldr	w1, [sp, #68]
    4230:	ldr	x0, [sp, #24]
    4234:	ldr	w0, [x0, #228]
    4238:	and	w2, w0, #0x10
    423c:	add	x0, sp, #0x28
    4240:	mov	w4, w2
    4244:	mov	w3, #0x18                  	// #24
    4248:	mov	x2, x0
    424c:	ldr	x0, [sp, #24]
    4250:	blr	x5
    4254:	cmn	w0, #0x1
    4258:	b.ne	428c <ext2fs_tdb_transaction_recover+0xdc>  // b.any
    425c:	ldr	x0, [sp, #24]
    4260:	ldr	x3, [x0, #280]
    4264:	adrp	x0, 0 <ext2fs_tdb_error>
    4268:	add	x2, x0, #0x0
    426c:	mov	w1, #0x0                   	// #0
    4270:	ldr	x0, [sp, #24]
    4274:	blr	x3
    4278:	ldr	x0, [sp, #24]
    427c:	mov	w1, #0x2                   	// #2
    4280:	str	w1, [x0, #56]
    4284:	mov	w0, #0xffffffff            	// #-1
    4288:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    428c:	ldr	w1, [sp, #60]
    4290:	mov	w0, #0xc0e7                	// #49383
    4294:	movk	w0, #0xf53b, lsl #16
    4298:	cmp	w1, w0
    429c:	b.eq	42a8 <ext2fs_tdb_transaction_recover+0xf8>  // b.none
    42a0:	mov	w0, #0x0                   	// #0
    42a4:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    42a8:	ldr	x0, [sp, #24]
    42ac:	ldr	w0, [x0, #24]
    42b0:	cmp	w0, #0x0
    42b4:	b.eq	42e8 <ext2fs_tdb_transaction_recover+0x138>  // b.none
    42b8:	ldr	x0, [sp, #24]
    42bc:	ldr	x3, [x0, #280]
    42c0:	adrp	x0, 0 <ext2fs_tdb_error>
    42c4:	add	x2, x0, #0x0
    42c8:	mov	w1, #0x0                   	// #0
    42cc:	ldr	x0, [sp, #24]
    42d0:	blr	x3
    42d4:	ldr	x0, [sp, #24]
    42d8:	mov	w1, #0x1                   	// #1
    42dc:	str	w1, [x0, #56]
    42e0:	mov	w0, #0xffffffff            	// #-1
    42e4:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    42e8:	ldr	w0, [sp, #48]
    42ec:	str	w0, [sp, #84]
    42f0:	ldr	w0, [sp, #52]
    42f4:	mov	w0, w0
    42f8:	bl	0 <malloc>
    42fc:	str	x0, [sp, #72]
    4300:	ldr	x0, [sp, #72]
    4304:	cmp	x0, #0x0
    4308:	b.ne	433c <ext2fs_tdb_transaction_recover+0x18c>  // b.any
    430c:	ldr	x0, [sp, #24]
    4310:	ldr	x3, [x0, #280]
    4314:	adrp	x0, 0 <ext2fs_tdb_error>
    4318:	add	x2, x0, #0x0
    431c:	mov	w1, #0x0                   	// #0
    4320:	ldr	x0, [sp, #24]
    4324:	blr	x3
    4328:	ldr	x0, [sp, #24]
    432c:	mov	w1, #0x4                   	// #4
    4330:	str	w1, [x0, #56]
    4334:	mov	w0, #0xffffffff            	// #-1
    4338:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    433c:	ldr	x0, [sp, #24]
    4340:	ldr	x0, [x0, #312]
    4344:	ldr	x5, [x0]
    4348:	ldr	w0, [sp, #68]
    434c:	add	w0, w0, #0x18
    4350:	ldr	w1, [sp, #52]
    4354:	mov	w4, #0x0                   	// #0
    4358:	mov	w3, w1
    435c:	ldr	x2, [sp, #72]
    4360:	mov	w1, w0
    4364:	ldr	x0, [sp, #24]
    4368:	blr	x5
    436c:	cmn	w0, #0x1
    4370:	b.ne	43a4 <ext2fs_tdb_transaction_recover+0x1f4>  // b.any
    4374:	ldr	x0, [sp, #24]
    4378:	ldr	x3, [x0, #280]
    437c:	adrp	x0, 0 <ext2fs_tdb_error>
    4380:	add	x2, x0, #0x0
    4384:	mov	w1, #0x0                   	// #0
    4388:	ldr	x0, [sp, #24]
    438c:	blr	x3
    4390:	ldr	x0, [sp, #24]
    4394:	mov	w1, #0x2                   	// #2
    4398:	str	w1, [x0, #56]
    439c:	mov	w0, #0xffffffff            	// #-1
    43a0:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    43a4:	ldr	x0, [sp, #72]
    43a8:	str	x0, [sp, #88]
    43ac:	b	4480 <ext2fs_tdb_transaction_recover+0x2d0>
    43b0:	ldr	x0, [sp, #24]
    43b4:	ldr	w0, [x0, #228]
    43b8:	and	w0, w0, #0x10
    43bc:	cmp	w0, #0x0
    43c0:	b.eq	43d0 <ext2fs_tdb_transaction_recover+0x220>  // b.none
    43c4:	mov	w1, #0x8                   	// #8
    43c8:	ldr	x0, [sp, #88]
    43cc:	bl	1608 <tdb_convert>
    43d0:	ldr	x0, [sp, #88]
    43d4:	ldr	w0, [x0]
    43d8:	str	w0, [sp, #36]
    43dc:	ldr	x0, [sp, #88]
    43e0:	add	x0, x0, #0x4
    43e4:	ldr	w0, [x0]
    43e8:	str	w0, [sp, #32]
    43ec:	ldr	x0, [sp, #24]
    43f0:	ldr	x0, [x0, #312]
    43f4:	ldr	x4, [x0, #8]
    43f8:	ldr	w1, [sp, #36]
    43fc:	ldr	x0, [sp, #88]
    4400:	add	x0, x0, #0x8
    4404:	ldr	w2, [sp, #32]
    4408:	mov	w3, w2
    440c:	mov	x2, x0
    4410:	ldr	x0, [sp, #24]
    4414:	blr	x4
    4418:	cmn	w0, #0x1
    441c:	b.ne	4468 <ext2fs_tdb_transaction_recover+0x2b8>  // b.any
    4420:	ldr	x0, [sp, #72]
    4424:	bl	0 <free>
    4428:	ldr	x0, [sp, #24]
    442c:	ldr	x5, [x0, #280]
    4430:	ldr	w0, [sp, #32]
    4434:	ldr	w1, [sp, #36]
    4438:	mov	w4, w1
    443c:	mov	w3, w0
    4440:	adrp	x0, 0 <ext2fs_tdb_error>
    4444:	add	x2, x0, #0x0
    4448:	mov	w1, #0x0                   	// #0
    444c:	ldr	x0, [sp, #24]
    4450:	blr	x5
    4454:	ldr	x0, [sp, #24]
    4458:	mov	w1, #0x2                   	// #2
    445c:	str	w1, [x0, #56]
    4460:	mov	w0, #0xffffffff            	// #-1
    4464:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    4468:	ldr	w0, [sp, #32]
    446c:	add	w0, w0, #0x8
    4470:	mov	w0, w0
    4474:	ldr	x1, [sp, #88]
    4478:	add	x0, x1, x0
    447c:	str	x0, [sp, #88]
    4480:	ldr	x0, [sp, #88]
    4484:	add	x1, x0, #0x8
    4488:	ldr	w0, [sp, #52]
    448c:	mov	w0, w0
    4490:	ldr	x2, [sp, #72]
    4494:	add	x0, x2, x0
    4498:	cmp	x1, x0
    449c:	b.cc	43b0 <ext2fs_tdb_transaction_recover+0x200>  // b.lo, b.ul, b.last
    44a0:	ldr	x0, [sp, #72]
    44a4:	bl	0 <free>
    44a8:	ldr	x0, [sp, #24]
    44ac:	ldr	w0, [x0, #20]
    44b0:	mov	w2, w0
    44b4:	mov	w1, #0x0                   	// #0
    44b8:	ldr	x0, [sp, #24]
    44bc:	bl	33b8 <transaction_sync>
    44c0:	cmn	w0, #0x1
    44c4:	b.ne	44f8 <ext2fs_tdb_transaction_recover+0x348>  // b.any
    44c8:	ldr	x0, [sp, #24]
    44cc:	ldr	x3, [x0, #280]
    44d0:	adrp	x0, 0 <ext2fs_tdb_error>
    44d4:	add	x2, x0, #0x0
    44d8:	mov	w1, #0x0                   	// #0
    44dc:	ldr	x0, [sp, #24]
    44e0:	blr	x3
    44e4:	ldr	x0, [sp, #24]
    44e8:	mov	w1, #0x2                   	// #2
    44ec:	str	w1, [x0, #56]
    44f0:	mov	w0, #0xffffffff            	// #-1
    44f4:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    44f8:	ldr	w0, [sp, #68]
    44fc:	ldr	w1, [sp, #84]
    4500:	cmp	w1, w0
    4504:	b.hi	4554 <ext2fs_tdb_transaction_recover+0x3a4>  // b.pmore
    4508:	add	x0, sp, #0x40
    450c:	mov	x2, x0
    4510:	mov	w1, #0x2c                  	// #44
    4514:	ldr	x0, [sp, #24]
    4518:	bl	1f64 <tdb_ofs_write>
    451c:	cmn	w0, #0x1
    4520:	b.ne	4554 <ext2fs_tdb_transaction_recover+0x3a4>  // b.any
    4524:	ldr	x0, [sp, #24]
    4528:	ldr	x3, [x0, #280]
    452c:	adrp	x0, 0 <ext2fs_tdb_error>
    4530:	add	x2, x0, #0x0
    4534:	mov	w1, #0x0                   	// #0
    4538:	ldr	x0, [sp, #24]
    453c:	blr	x3
    4540:	ldr	x0, [sp, #24]
    4544:	mov	w1, #0x2                   	// #2
    4548:	str	w1, [x0, #56]
    454c:	mov	w0, #0xffffffff            	// #-1
    4550:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    4554:	ldr	w0, [sp, #68]
    4558:	add	w0, w0, #0x14
    455c:	add	x1, sp, #0x40
    4560:	mov	x2, x1
    4564:	mov	w1, w0
    4568:	ldr	x0, [sp, #24]
    456c:	bl	1f64 <tdb_ofs_write>
    4570:	cmn	w0, #0x1
    4574:	b.ne	45a8 <ext2fs_tdb_transaction_recover+0x3f8>  // b.any
    4578:	ldr	x0, [sp, #24]
    457c:	ldr	x3, [x0, #280]
    4580:	adrp	x0, 0 <ext2fs_tdb_error>
    4584:	add	x2, x0, #0x0
    4588:	mov	w1, #0x0                   	// #0
    458c:	ldr	x0, [sp, #24]
    4590:	blr	x3
    4594:	ldr	x0, [sp, #24]
    4598:	mov	w1, #0x2                   	// #2
    459c:	str	w1, [x0, #56]
    45a0:	mov	w0, #0xffffffff            	// #-1
    45a4:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    45a8:	ldr	x0, [sp, #24]
    45ac:	bl	1968 <tdb_munmap>
    45b0:	ldr	x0, [sp, #24]
    45b4:	ldr	w0, [x0, #16]
    45b8:	ldr	w1, [sp, #84]
    45bc:	bl	0 <ftruncate>
    45c0:	cmp	w0, #0x0
    45c4:	b.eq	45f8 <ext2fs_tdb_transaction_recover+0x448>  // b.none
    45c8:	ldr	x0, [sp, #24]
    45cc:	ldr	x3, [x0, #280]
    45d0:	adrp	x0, 0 <ext2fs_tdb_error>
    45d4:	add	x2, x0, #0x0
    45d8:	mov	w1, #0x0                   	// #0
    45dc:	ldr	x0, [sp, #24]
    45e0:	blr	x3
    45e4:	ldr	x0, [sp, #24]
    45e8:	mov	w1, #0x2                   	// #2
    45ec:	str	w1, [x0, #56]
    45f0:	mov	w0, #0xffffffff            	// #-1
    45f4:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    45f8:	ldr	x0, [sp, #24]
    45fc:	ldr	w1, [sp, #84]
    4600:	str	w1, [x0, #20]
    4604:	ldr	x0, [sp, #24]
    4608:	bl	19f4 <tdb_mmap>
    460c:	ldr	w2, [sp, #84]
    4610:	mov	w1, #0x0                   	// #0
    4614:	ldr	x0, [sp, #24]
    4618:	bl	33b8 <transaction_sync>
    461c:	cmn	w0, #0x1
    4620:	b.ne	4654 <ext2fs_tdb_transaction_recover+0x4a4>  // b.any
    4624:	ldr	x0, [sp, #24]
    4628:	ldr	x3, [x0, #280]
    462c:	adrp	x0, 0 <ext2fs_tdb_error>
    4630:	add	x2, x0, #0x0
    4634:	mov	w1, #0x0                   	// #0
    4638:	ldr	x0, [sp, #24]
    463c:	blr	x3
    4640:	ldr	x0, [sp, #24]
    4644:	mov	w1, #0x2                   	// #2
    4648:	str	w1, [x0, #56]
    464c:	mov	w0, #0xffffffff            	// #-1
    4650:	b	4678 <ext2fs_tdb_transaction_recover+0x4c8>
    4654:	ldr	x0, [sp, #24]
    4658:	ldr	x4, [x0, #280]
    465c:	ldr	w3, [sp, #84]
    4660:	adrp	x0, 0 <ext2fs_tdb_error>
    4664:	add	x2, x0, #0x0
    4668:	mov	w1, #0x3                   	// #3
    466c:	ldr	x0, [sp, #24]
    4670:	blr	x4
    4674:	mov	w0, #0x0                   	// #0
    4678:	ldp	x29, x30, [sp], #96
    467c:	ret

0000000000004680 <tdb_rec_free_read>:
    4680:	stp	x29, x30, [sp, #-48]!
    4684:	mov	x29, sp
    4688:	str	x0, [sp, #40]
    468c:	str	w1, [sp, #36]
    4690:	str	x2, [sp, #24]
    4694:	ldr	x0, [sp, #40]
    4698:	ldr	x0, [x0, #312]
    469c:	ldr	x5, [x0]
    46a0:	ldr	x0, [sp, #40]
    46a4:	ldr	w0, [x0, #228]
    46a8:	and	w0, w0, #0x10
    46ac:	mov	w4, w0
    46b0:	mov	w3, #0x18                  	// #24
    46b4:	ldr	x2, [sp, #24]
    46b8:	ldr	w1, [sp, #36]
    46bc:	ldr	x0, [sp, #40]
    46c0:	blr	x5
    46c4:	cmn	w0, #0x1
    46c8:	b.ne	46d4 <tdb_rec_free_read+0x54>  // b.any
    46cc:	mov	w0, #0xffffffff            	// #-1
    46d0:	b	47f8 <tdb_rec_free_read+0x178>
    46d4:	ldr	x0, [sp, #24]
    46d8:	ldr	w1, [x0, #20]
    46dc:	mov	w0, #0x1999                	// #6553
    46e0:	movk	w0, #0x2601, lsl #16
    46e4:	cmp	w1, w0
    46e8:	b.ne	4758 <tdb_rec_free_read+0xd8>  // b.any
    46ec:	ldr	x0, [sp, #40]
    46f0:	ldr	x5, [x0, #280]
    46f4:	ldr	x0, [sp, #24]
    46f8:	ldr	w0, [x0, #20]
    46fc:	ldr	w4, [sp, #36]
    4700:	mov	w3, w0
    4704:	adrp	x0, 0 <ext2fs_tdb_error>
    4708:	add	x2, x0, #0x0
    470c:	mov	w1, #0x2                   	// #2
    4710:	ldr	x0, [sp, #40]
    4714:	blr	x5
    4718:	ldr	x0, [sp, #24]
    471c:	mov	w1, #0xe666                	// #58982
    4720:	movk	w1, #0xd9fe, lsl #16
    4724:	str	w1, [x0, #20]
    4728:	ldr	x0, [sp, #40]
    472c:	ldr	x0, [x0, #312]
    4730:	ldr	x4, [x0, #8]
    4734:	mov	w3, #0x18                  	// #24
    4738:	ldr	x2, [sp, #24]
    473c:	ldr	w1, [sp, #36]
    4740:	ldr	x0, [sp, #40]
    4744:	blr	x4
    4748:	cmn	w0, #0x1
    474c:	b.ne	4758 <tdb_rec_free_read+0xd8>  // b.any
    4750:	mov	w0, #0xffffffff            	// #-1
    4754:	b	47f8 <tdb_rec_free_read+0x178>
    4758:	ldr	x0, [sp, #24]
    475c:	ldr	w1, [x0, #20]
    4760:	mov	w0, #0xe666                	// #58982
    4764:	movk	w0, #0xd9fe, lsl #16
    4768:	cmp	w1, w0
    476c:	b.eq	47bc <tdb_rec_free_read+0x13c>  // b.none
    4770:	ldr	x0, [sp, #40]
    4774:	mov	w1, #0x1                   	// #1
    4778:	str	w1, [x0, #56]
    477c:	ldr	x0, [sp, #40]
    4780:	ldr	x5, [x0, #280]
    4784:	ldr	x0, [sp, #24]
    4788:	ldr	w0, [x0, #20]
    478c:	ldr	w4, [sp, #36]
    4790:	mov	w3, w0
    4794:	adrp	x0, 0 <ext2fs_tdb_error>
    4798:	add	x2, x0, #0x0
    479c:	mov	w1, #0x2                   	// #2
    47a0:	ldr	x0, [sp, #40]
    47a4:	blr	x5
    47a8:	ldr	x0, [sp, #40]
    47ac:	mov	w1, #0x1                   	// #1
    47b0:	str	w1, [x0, #56]
    47b4:	mov	w0, #0xffffffff            	// #-1
    47b8:	b	47f8 <tdb_rec_free_read+0x178>
    47bc:	ldr	x0, [sp, #40]
    47c0:	ldr	x0, [x0, #312]
    47c4:	ldr	x3, [x0, #24]
    47c8:	ldr	x0, [sp, #24]
    47cc:	ldr	w0, [x0]
    47d0:	add	w0, w0, #0x18
    47d4:	mov	w2, #0x0                   	// #0
    47d8:	mov	w1, w0
    47dc:	ldr	x0, [sp, #40]
    47e0:	blr	x3
    47e4:	cmp	w0, #0x0
    47e8:	b.eq	47f4 <tdb_rec_free_read+0x174>  // b.none
    47ec:	mov	w0, #0xffffffff            	// #-1
    47f0:	b	47f8 <tdb_rec_free_read+0x178>
    47f4:	mov	w0, #0x0                   	// #0
    47f8:	ldp	x29, x30, [sp], #48
    47fc:	ret

0000000000004800 <remove_from_freelist>:
    4800:	stp	x29, x30, [sp, #-48]!
    4804:	mov	x29, sp
    4808:	str	x0, [sp, #24]
    480c:	str	w1, [sp, #20]
    4810:	str	w2, [sp, #16]
    4814:	mov	w0, #0xa8                  	// #168
    4818:	str	w0, [sp, #44]
    481c:	b	4850 <remove_from_freelist+0x50>
    4820:	ldr	w0, [sp, #40]
    4824:	ldr	w1, [sp, #20]
    4828:	cmp	w1, w0
    482c:	b.ne	4848 <remove_from_freelist+0x48>  // b.any
    4830:	add	x0, sp, #0x10
    4834:	mov	x2, x0
    4838:	ldr	w1, [sp, #44]
    483c:	ldr	x0, [sp, #24]
    4840:	bl	1f64 <tdb_ofs_write>
    4844:	b	48a8 <remove_from_freelist+0xa8>
    4848:	ldr	w0, [sp, #40]
    484c:	str	w0, [sp, #44]
    4850:	add	x0, sp, #0x28
    4854:	mov	x2, x0
    4858:	ldr	w1, [sp, #44]
    485c:	ldr	x0, [sp, #24]
    4860:	bl	1f18 <tdb_ofs_read>
    4864:	cmn	w0, #0x1
    4868:	b.eq	4878 <remove_from_freelist+0x78>  // b.none
    486c:	ldr	w0, [sp, #40]
    4870:	cmp	w0, #0x0
    4874:	b.ne	4820 <remove_from_freelist+0x20>  // b.any
    4878:	ldr	x0, [sp, #24]
    487c:	ldr	x4, [x0, #280]
    4880:	ldr	w3, [sp, #20]
    4884:	adrp	x0, 0 <ext2fs_tdb_error>
    4888:	add	x2, x0, #0x0
    488c:	mov	w1, #0x0                   	// #0
    4890:	ldr	x0, [sp, #24]
    4894:	blr	x4
    4898:	ldr	x0, [sp, #24]
    489c:	mov	w1, #0x1                   	// #1
    48a0:	str	w1, [x0, #56]
    48a4:	mov	w0, #0xffffffff            	// #-1
    48a8:	ldp	x29, x30, [sp], #48
    48ac:	ret

00000000000048b0 <update_tailer>:
    48b0:	stp	x29, x30, [sp, #-64]!
    48b4:	mov	x29, sp
    48b8:	str	x0, [sp, #40]
    48bc:	str	w1, [sp, #36]
    48c0:	str	x2, [sp, #24]
    48c4:	ldr	x0, [sp, #24]
    48c8:	ldr	w0, [x0, #4]
    48cc:	add	w0, w0, #0x18
    48d0:	str	w0, [sp, #60]
    48d4:	ldr	w1, [sp, #60]
    48d8:	ldr	w0, [sp, #36]
    48dc:	add	w0, w1, w0
    48e0:	sub	w0, w0, #0x4
    48e4:	add	x1, sp, #0x3c
    48e8:	mov	x2, x1
    48ec:	mov	w1, w0
    48f0:	ldr	x0, [sp, #40]
    48f4:	bl	1f64 <tdb_ofs_write>
    48f8:	ldp	x29, x30, [sp], #64
    48fc:	ret

0000000000004900 <tdb_free>:
    4900:	stp	x29, x30, [sp, #-112]!
    4904:	mov	x29, sp
    4908:	str	x0, [sp, #40]
    490c:	str	w1, [sp, #36]
    4910:	str	x2, [sp, #24]
    4914:	mov	w2, #0x1                   	// #1
    4918:	mov	w1, #0xffffffff            	// #-1
    491c:	ldr	x0, [sp, #40]
    4920:	bl	614 <tdb_lock>
    4924:	cmp	w0, #0x0
    4928:	b.eq	4934 <tdb_free+0x34>  // b.none
    492c:	mov	w0, #0xffffffff            	// #-1
    4930:	b	4d1c <tdb_free+0x41c>
    4934:	ldr	w0, [sp, #36]
    4938:	ldr	x2, [sp, #24]
    493c:	mov	w1, w0
    4940:	ldr	x0, [sp, #40]
    4944:	bl	48b0 <update_tailer>
    4948:	cmp	w0, #0x0
    494c:	b.eq	4970 <tdb_free+0x70>  // b.none
    4950:	ldr	x0, [sp, #40]
    4954:	ldr	x3, [x0, #280]
    4958:	adrp	x0, 0 <ext2fs_tdb_error>
    495c:	add	x2, x0, #0x0
    4960:	mov	w1, #0x0                   	// #0
    4964:	ldr	x0, [sp, #40]
    4968:	blr	x3
    496c:	b	4d08 <tdb_free+0x408>
    4970:	ldr	x0, [sp, #24]
    4974:	ldr	w1, [x0, #4]
    4978:	ldr	w0, [sp, #36]
    497c:	add	w0, w1, w0
    4980:	add	w0, w0, #0x18
    4984:	str	w0, [sp, #108]
    4988:	ldr	w0, [sp, #108]
    498c:	add	x1, x0, #0x18
    4990:	ldr	x0, [sp, #40]
    4994:	ldr	w0, [x0, #20]
    4998:	mov	w0, w0
    499c:	cmp	x1, x0
    49a0:	b.hi	4a78 <tdb_free+0x178>  // b.pmore
    49a4:	ldr	x0, [sp, #40]
    49a8:	ldr	x0, [x0, #312]
    49ac:	ldr	x5, [x0]
    49b0:	ldr	x0, [sp, #40]
    49b4:	ldr	w0, [x0, #228]
    49b8:	and	w1, w0, #0x10
    49bc:	add	x0, sp, #0x50
    49c0:	mov	w4, w1
    49c4:	mov	w3, #0x18                  	// #24
    49c8:	mov	x2, x0
    49cc:	ldr	w1, [sp, #108]
    49d0:	ldr	x0, [sp, #40]
    49d4:	blr	x5
    49d8:	cmn	w0, #0x1
    49dc:	b.ne	4a04 <tdb_free+0x104>  // b.any
    49e0:	ldr	x0, [sp, #40]
    49e4:	ldr	x4, [x0, #280]
    49e8:	ldr	w3, [sp, #108]
    49ec:	adrp	x0, 0 <ext2fs_tdb_error>
    49f0:	add	x2, x0, #0x0
    49f4:	mov	w1, #0x0                   	// #0
    49f8:	ldr	x0, [sp, #40]
    49fc:	blr	x4
    4a00:	b	4a7c <tdb_free+0x17c>
    4a04:	ldr	w1, [sp, #100]
    4a08:	mov	w0, #0xe666                	// #58982
    4a0c:	movk	w0, #0xd9fe, lsl #16
    4a10:	cmp	w1, w0
    4a14:	b.ne	4a7c <tdb_free+0x17c>  // b.any
    4a18:	ldr	w0, [sp, #80]
    4a1c:	mov	w2, w0
    4a20:	ldr	w1, [sp, #108]
    4a24:	ldr	x0, [sp, #40]
    4a28:	bl	4800 <remove_from_freelist>
    4a2c:	cmn	w0, #0x1
    4a30:	b.ne	4a58 <tdb_free+0x158>  // b.any
    4a34:	ldr	x0, [sp, #40]
    4a38:	ldr	x4, [x0, #280]
    4a3c:	ldr	w3, [sp, #108]
    4a40:	adrp	x0, 0 <ext2fs_tdb_error>
    4a44:	add	x2, x0, #0x0
    4a48:	mov	w1, #0x0                   	// #0
    4a4c:	ldr	x0, [sp, #40]
    4a50:	blr	x4
    4a54:	b	4a7c <tdb_free+0x17c>
    4a58:	ldr	x0, [sp, #24]
    4a5c:	ldr	w1, [x0, #4]
    4a60:	ldr	w0, [sp, #84]
    4a64:	add	w0, w1, w0
    4a68:	add	w1, w0, #0x18
    4a6c:	ldr	x0, [sp, #24]
    4a70:	str	w1, [x0, #4]
    4a74:	b	4a7c <tdb_free+0x17c>
    4a78:	nop
    4a7c:	ldr	w0, [sp, #36]
    4a80:	sub	w0, w0, #0x4
    4a84:	str	w0, [sp, #104]
    4a88:	ldr	w2, [sp, #104]
    4a8c:	ldr	x0, [sp, #40]
    4a90:	ldr	w0, [x0, #96]
    4a94:	sub	w0, w0, #0x1
    4a98:	ldr	x1, [sp, #40]
    4a9c:	ldr	w1, [x1, #96]
    4aa0:	udiv	w3, w0, w1
    4aa4:	mul	w1, w3, w1
    4aa8:	sub	w0, w0, w1
    4aac:	add	w0, w0, #0x1
    4ab0:	mov	w0, w0
    4ab4:	add	x0, x0, #0x2a
    4ab8:	lsl	x0, x0, #2
    4abc:	cmp	x2, x0
    4ac0:	b.ls	4c14 <tdb_free+0x314>  // b.plast
    4ac4:	add	x0, sp, #0x34
    4ac8:	mov	x2, x0
    4acc:	ldr	w1, [sp, #104]
    4ad0:	ldr	x0, [sp, #40]
    4ad4:	bl	1f18 <tdb_ofs_read>
    4ad8:	cmn	w0, #0x1
    4adc:	b.ne	4b04 <tdb_free+0x204>  // b.any
    4ae0:	ldr	x0, [sp, #40]
    4ae4:	ldr	x4, [x0, #280]
    4ae8:	ldr	w3, [sp, #104]
    4aec:	adrp	x0, 0 <ext2fs_tdb_error>
    4af0:	add	x2, x0, #0x0
    4af4:	mov	w1, #0x0                   	// #0
    4af8:	ldr	x0, [sp, #40]
    4afc:	blr	x4
    4b00:	b	4c20 <tdb_free+0x320>
    4b04:	ldr	w0, [sp, #52]
    4b08:	cmp	w0, #0x0
    4b0c:	b.eq	4c1c <tdb_free+0x31c>  // b.none
    4b10:	ldr	w1, [sp, #52]
    4b14:	mov	w0, #0x4242                	// #16962
    4b18:	movk	w0, #0x4242, lsl #16
    4b1c:	cmp	w1, w0
    4b20:	b.eq	4c1c <tdb_free+0x31c>  // b.none
    4b24:	ldr	w1, [sp, #36]
    4b28:	ldr	w0, [sp, #52]
    4b2c:	sub	w0, w1, w0
    4b30:	str	w0, [sp, #104]
    4b34:	ldr	x0, [sp, #40]
    4b38:	ldr	x0, [x0, #312]
    4b3c:	ldr	x5, [x0]
    4b40:	ldr	x0, [sp, #40]
    4b44:	ldr	w0, [x0, #228]
    4b48:	and	w1, w0, #0x10
    4b4c:	add	x0, sp, #0x38
    4b50:	mov	w4, w1
    4b54:	mov	w3, #0x18                  	// #24
    4b58:	mov	x2, x0
    4b5c:	ldr	w1, [sp, #104]
    4b60:	ldr	x0, [sp, #40]
    4b64:	blr	x5
    4b68:	cmn	w0, #0x1
    4b6c:	b.ne	4b9c <tdb_free+0x29c>  // b.any
    4b70:	ldr	x0, [sp, #40]
    4b74:	ldr	x5, [x0, #280]
    4b78:	ldr	w0, [sp, #52]
    4b7c:	mov	w4, w0
    4b80:	ldr	w3, [sp, #104]
    4b84:	adrp	x0, 0 <ext2fs_tdb_error>
    4b88:	add	x2, x0, #0x0
    4b8c:	mov	w1, #0x0                   	// #0
    4b90:	ldr	x0, [sp, #40]
    4b94:	blr	x5
    4b98:	b	4c20 <tdb_free+0x320>
    4b9c:	ldr	w1, [sp, #76]
    4ba0:	mov	w0, #0xe666                	// #58982
    4ba4:	movk	w0, #0xd9fe, lsl #16
    4ba8:	cmp	w1, w0
    4bac:	b.ne	4c20 <tdb_free+0x320>  // b.any
    4bb0:	ldr	w0, [sp, #56]
    4bb4:	mov	w2, w0
    4bb8:	ldr	w1, [sp, #104]
    4bbc:	ldr	x0, [sp, #40]
    4bc0:	bl	4800 <remove_from_freelist>
    4bc4:	cmn	w0, #0x1
    4bc8:	b.ne	4bf0 <tdb_free+0x2f0>  // b.any
    4bcc:	ldr	x0, [sp, #40]
    4bd0:	ldr	x4, [x0, #280]
    4bd4:	ldr	w3, [sp, #104]
    4bd8:	adrp	x0, 0 <ext2fs_tdb_error>
    4bdc:	add	x2, x0, #0x0
    4be0:	mov	w1, #0x0                   	// #0
    4be4:	ldr	x0, [sp, #40]
    4be8:	blr	x4
    4bec:	b	4c20 <tdb_free+0x320>
    4bf0:	ldr	w0, [sp, #104]
    4bf4:	str	w0, [sp, #36]
    4bf8:	ldr	x0, [sp, #24]
    4bfc:	ldr	w1, [x0, #4]
    4c00:	ldr	w0, [sp, #52]
    4c04:	add	w1, w1, w0
    4c08:	ldr	x0, [sp, #24]
    4c0c:	str	w1, [x0, #4]
    4c10:	b	4c20 <tdb_free+0x320>
    4c14:	nop
    4c18:	b	4c20 <tdb_free+0x320>
    4c1c:	nop
    4c20:	ldr	w0, [sp, #36]
    4c24:	ldr	x2, [sp, #24]
    4c28:	mov	w1, w0
    4c2c:	ldr	x0, [sp, #40]
    4c30:	bl	48b0 <update_tailer>
    4c34:	cmn	w0, #0x1
    4c38:	b.ne	4c64 <tdb_free+0x364>  // b.any
    4c3c:	ldr	x0, [sp, #40]
    4c40:	ldr	x4, [x0, #280]
    4c44:	ldr	w0, [sp, #36]
    4c48:	mov	w3, w0
    4c4c:	adrp	x0, 0 <ext2fs_tdb_error>
    4c50:	add	x2, x0, #0x0
    4c54:	mov	w1, #0x0                   	// #0
    4c58:	ldr	x0, [sp, #40]
    4c5c:	blr	x4
    4c60:	b	4d08 <tdb_free+0x408>
    4c64:	ldr	x0, [sp, #24]
    4c68:	mov	w1, #0xe666                	// #58982
    4c6c:	movk	w1, #0xd9fe, lsl #16
    4c70:	str	w1, [x0, #20]
    4c74:	ldr	x0, [sp, #24]
    4c78:	mov	x2, x0
    4c7c:	mov	w1, #0xa8                  	// #168
    4c80:	ldr	x0, [sp, #40]
    4c84:	bl	1f18 <tdb_ofs_read>
    4c88:	cmn	w0, #0x1
    4c8c:	b.eq	4cc8 <tdb_free+0x3c8>  // b.none
    4c90:	ldr	w0, [sp, #36]
    4c94:	ldr	x2, [sp, #24]
    4c98:	mov	w1, w0
    4c9c:	ldr	x0, [sp, #40]
    4ca0:	bl	22cc <tdb_rec_write>
    4ca4:	cmn	w0, #0x1
    4ca8:	b.eq	4cc8 <tdb_free+0x3c8>  // b.none
    4cac:	add	x0, sp, #0x24
    4cb0:	mov	x2, x0
    4cb4:	mov	w1, #0xa8                  	// #168
    4cb8:	ldr	x0, [sp, #40]
    4cbc:	bl	1f64 <tdb_ofs_write>
    4cc0:	cmn	w0, #0x1
    4cc4:	b.ne	4cf0 <tdb_free+0x3f0>  // b.any
    4cc8:	ldr	x0, [sp, #40]
    4ccc:	ldr	x4, [x0, #280]
    4cd0:	ldr	w0, [sp, #36]
    4cd4:	mov	w3, w0
    4cd8:	adrp	x0, 0 <ext2fs_tdb_error>
    4cdc:	add	x2, x0, #0x0
    4ce0:	mov	w1, #0x0                   	// #0
    4ce4:	ldr	x0, [sp, #40]
    4ce8:	blr	x4
    4cec:	b	4d08 <tdb_free+0x408>
    4cf0:	mov	w2, #0x1                   	// #1
    4cf4:	mov	w1, #0xffffffff            	// #-1
    4cf8:	ldr	x0, [sp, #40]
    4cfc:	bl	6c4 <tdb_unlock>
    4d00:	mov	w0, #0x0                   	// #0
    4d04:	b	4d1c <tdb_free+0x41c>
    4d08:	mov	w2, #0x1                   	// #1
    4d0c:	mov	w1, #0xffffffff            	// #-1
    4d10:	ldr	x0, [sp, #40]
    4d14:	bl	6c4 <tdb_unlock>
    4d18:	mov	w0, #0xffffffff            	// #-1
    4d1c:	ldp	x29, x30, [sp], #112
    4d20:	ret

0000000000004d24 <tdb_allocate_ofs>:
    4d24:	stp	x29, x30, [sp, #-80]!
    4d28:	mov	x29, sp
    4d2c:	str	x0, [sp, #40]
    4d30:	str	w1, [sp, #36]
    4d34:	str	w2, [sp, #32]
    4d38:	str	x3, [sp, #24]
    4d3c:	str	w4, [sp, #20]
    4d40:	add	x0, sp, #0x30
    4d44:	mov	x2, #0x18                  	// #24
    4d48:	mov	w1, #0x0                   	// #0
    4d4c:	bl	0 <memset>
    4d50:	ldr	x0, [sp, #24]
    4d54:	ldr	w0, [x0, #4]
    4d58:	mov	w1, w0
    4d5c:	ldr	w0, [sp, #36]
    4d60:	add	x0, x0, #0x34
    4d64:	cmp	x1, x0
    4d68:	b.ls	4db8 <tdb_allocate_ofs+0x94>  // b.plast
    4d6c:	ldr	w0, [sp, #36]
    4d70:	add	w0, w0, #0x3
    4d74:	and	w0, w0, #0xfffffffc
    4d78:	str	w0, [sp, #36]
    4d7c:	ldr	x0, [sp, #24]
    4d80:	ldr	w1, [x0, #4]
    4d84:	ldr	w0, [sp, #36]
    4d88:	sub	w0, w1, w0
    4d8c:	sub	w0, w0, #0x18
    4d90:	str	w0, [sp, #52]
    4d94:	ldr	w1, [sp, #32]
    4d98:	ldr	w0, [sp, #36]
    4d9c:	add	w0, w1, w0
    4da0:	add	w0, w0, #0x18
    4da4:	str	w0, [sp, #76]
    4da8:	ldr	x0, [sp, #24]
    4dac:	ldr	w1, [sp, #36]
    4db0:	str	w1, [x0, #4]
    4db4:	b	4dbc <tdb_allocate_ofs+0x98>
    4db8:	str	wzr, [sp, #76]
    4dbc:	ldr	x0, [sp, #24]
    4dc0:	mov	x2, x0
    4dc4:	ldr	w1, [sp, #20]
    4dc8:	ldr	x0, [sp, #40]
    4dcc:	bl	1f64 <tdb_ofs_write>
    4dd0:	cmn	w0, #0x1
    4dd4:	b.ne	4de0 <tdb_allocate_ofs+0xbc>  // b.any
    4dd8:	mov	w0, #0x0                   	// #0
    4ddc:	b	4e64 <tdb_allocate_ofs+0x140>
    4de0:	ldr	x0, [sp, #24]
    4de4:	mov	w1, #0x1999                	// #6553
    4de8:	movk	w1, #0x2601, lsl #16
    4dec:	str	w1, [x0, #20]
    4df0:	ldr	x2, [sp, #24]
    4df4:	ldr	w1, [sp, #32]
    4df8:	ldr	x0, [sp, #40]
    4dfc:	bl	22cc <tdb_rec_write>
    4e00:	cmn	w0, #0x1
    4e04:	b.ne	4e10 <tdb_allocate_ofs+0xec>  // b.any
    4e08:	mov	w0, #0x0                   	// #0
    4e0c:	b	4e64 <tdb_allocate_ofs+0x140>
    4e10:	ldr	w0, [sp, #76]
    4e14:	cmp	w0, #0x0
    4e18:	b.eq	4e60 <tdb_allocate_ofs+0x13c>  // b.none
    4e1c:	ldr	x2, [sp, #24]
    4e20:	ldr	w1, [sp, #32]
    4e24:	ldr	x0, [sp, #40]
    4e28:	bl	48b0 <update_tailer>
    4e2c:	cmn	w0, #0x1
    4e30:	b.ne	4e3c <tdb_allocate_ofs+0x118>  // b.any
    4e34:	mov	w0, #0x0                   	// #0
    4e38:	b	4e64 <tdb_allocate_ofs+0x140>
    4e3c:	add	x0, sp, #0x30
    4e40:	mov	x2, x0
    4e44:	ldr	w1, [sp, #76]
    4e48:	ldr	x0, [sp, #40]
    4e4c:	bl	4900 <tdb_free>
    4e50:	cmn	w0, #0x1
    4e54:	b.ne	4e60 <tdb_allocate_ofs+0x13c>  // b.any
    4e58:	mov	w0, #0x0                   	// #0
    4e5c:	b	4e64 <tdb_allocate_ofs+0x140>
    4e60:	ldr	w0, [sp, #32]
    4e64:	ldp	x29, x30, [sp], #80
    4e68:	ret

0000000000004e6c <tdb_allocate>:
    4e6c:	stp	x29, x30, [sp, #-80]!
    4e70:	mov	x29, sp
    4e74:	str	x0, [sp, #40]
    4e78:	str	w1, [sp, #36]
    4e7c:	str	x2, [sp, #24]
    4e80:	mov	w2, #0x1                   	// #1
    4e84:	mov	w1, #0xffffffff            	// #-1
    4e88:	ldr	x0, [sp, #40]
    4e8c:	bl	614 <tdb_lock>
    4e90:	cmn	w0, #0x1
    4e94:	b.ne	4ea0 <tdb_allocate+0x34>  // b.any
    4e98:	mov	w0, #0x0                   	// #0
    4e9c:	b	503c <tdb_allocate+0x1d0>
    4ea0:	ldr	w0, [sp, #36]
    4ea4:	add	w0, w0, #0x4
    4ea8:	str	w0, [sp, #36]
    4eac:	mov	w0, #0xa8                  	// #168
    4eb0:	str	w0, [sp, #76]
    4eb4:	add	x0, sp, #0x44
    4eb8:	mov	x2, x0
    4ebc:	mov	w1, #0xa8                  	// #168
    4ec0:	ldr	x0, [sp, #40]
    4ec4:	bl	1f18 <tdb_ofs_read>
    4ec8:	cmn	w0, #0x1
    4ecc:	b.eq	500c <tdb_allocate+0x1a0>  // b.none
    4ed0:	str	wzr, [sp, #56]
    4ed4:	str	wzr, [sp, #60]
    4ed8:	str	wzr, [sp, #64]
    4edc:	b	4f74 <tdb_allocate+0x108>
    4ee0:	ldr	w0, [sp, #68]
    4ee4:	ldr	x2, [sp, #24]
    4ee8:	mov	w1, w0
    4eec:	ldr	x0, [sp, #40]
    4ef0:	bl	4680 <tdb_rec_free_read>
    4ef4:	cmn	w0, #0x1
    4ef8:	b.eq	5014 <tdb_allocate+0x1a8>  // b.none
    4efc:	ldr	x0, [sp, #24]
    4f00:	ldr	w0, [x0, #4]
    4f04:	ldr	w1, [sp, #36]
    4f08:	cmp	w1, w0
    4f0c:	b.hi	4f60 <tdb_allocate+0xf4>  // b.pmore
    4f10:	ldr	w0, [sp, #56]
    4f14:	cmp	w0, #0x0
    4f18:	b.eq	4f30 <tdb_allocate+0xc4>  // b.none
    4f1c:	ldr	x0, [sp, #24]
    4f20:	ldr	w1, [x0, #4]
    4f24:	ldr	w0, [sp, #64]
    4f28:	cmp	w1, w0
    4f2c:	b.cs	4f60 <tdb_allocate+0xf4>  // b.hs, b.nlast
    4f30:	ldr	x0, [sp, #24]
    4f34:	ldr	w0, [x0, #4]
    4f38:	str	w0, [sp, #64]
    4f3c:	ldr	w0, [sp, #68]
    4f40:	str	w0, [sp, #56]
    4f44:	ldr	w0, [sp, #76]
    4f48:	str	w0, [sp, #60]
    4f4c:	ldr	w1, [sp, #64]
    4f50:	ldr	w0, [sp, #36]
    4f54:	lsl	w0, w0, #1
    4f58:	cmp	w1, w0
    4f5c:	b.cc	4f84 <tdb_allocate+0x118>  // b.lo, b.ul, b.last
    4f60:	ldr	w0, [sp, #68]
    4f64:	str	w0, [sp, #76]
    4f68:	ldr	x0, [sp, #24]
    4f6c:	ldr	w0, [x0]
    4f70:	str	w0, [sp, #68]
    4f74:	ldr	w0, [sp, #68]
    4f78:	cmp	w0, #0x0
    4f7c:	b.ne	4ee0 <tdb_allocate+0x74>  // b.any
    4f80:	b	4f88 <tdb_allocate+0x11c>
    4f84:	nop
    4f88:	ldr	w0, [sp, #56]
    4f8c:	cmp	w0, #0x0
    4f90:	b.eq	4fec <tdb_allocate+0x180>  // b.none
    4f94:	ldr	w0, [sp, #56]
    4f98:	ldr	x2, [sp, #24]
    4f9c:	mov	w1, w0
    4fa0:	ldr	x0, [sp, #40]
    4fa4:	bl	4680 <tdb_rec_free_read>
    4fa8:	cmn	w0, #0x1
    4fac:	b.eq	501c <tdb_allocate+0x1b0>  // b.none
    4fb0:	ldr	w0, [sp, #56]
    4fb4:	ldr	w1, [sp, #60]
    4fb8:	mov	w4, w1
    4fbc:	ldr	x3, [sp, #24]
    4fc0:	mov	w2, w0
    4fc4:	ldr	w1, [sp, #36]
    4fc8:	ldr	x0, [sp, #40]
    4fcc:	bl	4d24 <tdb_allocate_ofs>
    4fd0:	str	w0, [sp, #72]
    4fd4:	mov	w2, #0x1                   	// #1
    4fd8:	mov	w1, #0xffffffff            	// #-1
    4fdc:	ldr	x0, [sp, #40]
    4fe0:	bl	6c4 <tdb_unlock>
    4fe4:	ldr	w0, [sp, #72]
    4fe8:	b	503c <tdb_allocate+0x1d0>
    4fec:	ldr	w0, [sp, #36]
    4ff0:	add	w0, w0, #0x18
    4ff4:	mov	w1, w0
    4ff8:	ldr	x0, [sp, #40]
    4ffc:	bl	1cdc <tdb_expand>
    5000:	cmp	w0, #0x0
    5004:	b.ne	5024 <tdb_allocate+0x1b8>  // b.any
    5008:	b	4eac <tdb_allocate+0x40>
    500c:	nop
    5010:	b	5028 <tdb_allocate+0x1bc>
    5014:	nop
    5018:	b	5028 <tdb_allocate+0x1bc>
    501c:	nop
    5020:	b	5028 <tdb_allocate+0x1bc>
    5024:	nop
    5028:	mov	w2, #0x1                   	// #1
    502c:	mov	w1, #0xffffffff            	// #-1
    5030:	ldr	x0, [sp, #40]
    5034:	bl	6c4 <tdb_unlock>
    5038:	mov	w0, #0x0                   	// #0
    503c:	ldp	x29, x30, [sp], #80
    5040:	ret

0000000000005044 <seen_insert>:
    5044:	stp	x29, x30, [sp, #-64]!
    5048:	mov	x29, sp
    504c:	str	x0, [sp, #24]
    5050:	str	w1, [sp, #20]
    5054:	add	x0, sp, #0x20
    5058:	mov	x2, #0x10                  	// #16
    505c:	mov	w1, #0x0                   	// #0
    5060:	bl	0 <memset>
    5064:	add	x0, sp, #0x14
    5068:	str	x0, [sp, #48]
    506c:	mov	x0, #0x4                   	// #4
    5070:	str	x0, [sp, #56]
    5074:	mov	w5, #0x2                   	// #2
    5078:	ldp	x3, x4, [sp, #32]
    507c:	ldp	x1, x2, [sp, #48]
    5080:	ldr	x0, [sp, #24]
    5084:	bl	6e90 <ext2fs_tdb_store>
    5088:	ldp	x29, x30, [sp], #64
    508c:	ret

0000000000005090 <ext2fs_tdb_validate_freelist>:
    5090:	stp	x29, x30, [sp, #-96]!
    5094:	mov	x29, sp
    5098:	str	x0, [sp, #24]
    509c:	str	x1, [sp, #16]
    50a0:	str	xzr, [sp, #80]
    50a4:	mov	w0, #0xffffffff            	// #-1
    50a8:	str	w0, [sp, #92]
    50ac:	ldr	x0, [sp, #16]
    50b0:	str	wzr, [x0]
    50b4:	ldr	x0, [sp, #24]
    50b8:	ldr	w0, [x0, #96]
    50bc:	mov	w4, #0x180                 	// #384
    50c0:	mov	w3, #0x2                   	// #2
    50c4:	mov	w2, #0x2                   	// #2
    50c8:	mov	w1, w0
    50cc:	adrp	x0, 0 <ext2fs_tdb_error>
    50d0:	add	x0, x0, #0x0
    50d4:	bl	7858 <ext2fs_tdb_open>
    50d8:	str	x0, [sp, #80]
    50dc:	ldr	x0, [sp, #80]
    50e0:	cmp	x0, #0x0
    50e4:	b.ne	50f0 <ext2fs_tdb_validate_freelist+0x60>  // b.any
    50e8:	mov	w0, #0xffffffff            	// #-1
    50ec:	b	521c <ext2fs_tdb_validate_freelist+0x18c>
    50f0:	mov	w2, #0x1                   	// #1
    50f4:	mov	w1, #0xffffffff            	// #-1
    50f8:	ldr	x0, [sp, #24]
    50fc:	bl	614 <tdb_lock>
    5100:	cmn	w0, #0x1
    5104:	b.ne	5118 <ext2fs_tdb_validate_freelist+0x88>  // b.any
    5108:	ldr	x0, [sp, #80]
    510c:	bl	81c0 <ext2fs_tdb_close>
    5110:	mov	w0, #0x0                   	// #0
    5114:	b	521c <ext2fs_tdb_validate_freelist+0x18c>
    5118:	mov	w0, #0xa8                  	// #168
    511c:	str	w0, [sp, #76]
    5120:	ldr	w1, [sp, #76]
    5124:	ldr	x0, [sp, #80]
    5128:	bl	5044 <seen_insert>
    512c:	cmn	w0, #0x1
    5130:	b.ne	514c <ext2fs_tdb_validate_freelist+0xbc>  // b.any
    5134:	ldr	x0, [sp, #24]
    5138:	mov	w1, #0x1                   	// #1
    513c:	str	w1, [x0, #56]
    5140:	mov	w0, #0xffffffff            	// #-1
    5144:	str	w0, [sp, #92]
    5148:	b	5200 <ext2fs_tdb_validate_freelist+0x170>
    514c:	add	x0, sp, #0x2c
    5150:	mov	x2, x0
    5154:	mov	w1, #0xa8                  	// #168
    5158:	ldr	x0, [sp, #24]
    515c:	bl	1f18 <tdb_ofs_read>
    5160:	cmn	w0, #0x1
    5164:	b.eq	51f4 <ext2fs_tdb_validate_freelist+0x164>  // b.none
    5168:	b	51e0 <ext2fs_tdb_validate_freelist+0x150>
    516c:	ldr	w0, [sp, #44]
    5170:	mov	w1, w0
    5174:	ldr	x0, [sp, #80]
    5178:	bl	5044 <seen_insert>
    517c:	cmp	w0, #0x0
    5180:	b.eq	519c <ext2fs_tdb_validate_freelist+0x10c>  // b.none
    5184:	ldr	x0, [sp, #24]
    5188:	mov	w1, #0x1                   	// #1
    518c:	str	w1, [x0, #56]
    5190:	mov	w0, #0xffffffff            	// #-1
    5194:	str	w0, [sp, #92]
    5198:	b	5200 <ext2fs_tdb_validate_freelist+0x170>
    519c:	ldr	w0, [sp, #44]
    51a0:	add	x1, sp, #0x30
    51a4:	mov	x2, x1
    51a8:	mov	w1, w0
    51ac:	ldr	x0, [sp, #24]
    51b0:	bl	4680 <tdb_rec_free_read>
    51b4:	cmn	w0, #0x1
    51b8:	b.eq	51fc <ext2fs_tdb_validate_freelist+0x16c>  // b.none
    51bc:	ldr	w0, [sp, #44]
    51c0:	str	w0, [sp, #76]
    51c4:	ldr	w0, [sp, #48]
    51c8:	str	w0, [sp, #44]
    51cc:	ldr	x0, [sp, #16]
    51d0:	ldr	w0, [x0]
    51d4:	add	w1, w0, #0x1
    51d8:	ldr	x0, [sp, #16]
    51dc:	str	w1, [x0]
    51e0:	ldr	w0, [sp, #44]
    51e4:	cmp	w0, #0x0
    51e8:	b.ne	516c <ext2fs_tdb_validate_freelist+0xdc>  // b.any
    51ec:	str	wzr, [sp, #92]
    51f0:	b	5200 <ext2fs_tdb_validate_freelist+0x170>
    51f4:	nop
    51f8:	b	5200 <ext2fs_tdb_validate_freelist+0x170>
    51fc:	nop
    5200:	ldr	x0, [sp, #80]
    5204:	bl	81c0 <ext2fs_tdb_close>
    5208:	mov	w2, #0x1                   	// #1
    520c:	mov	w1, #0xffffffff            	// #-1
    5210:	ldr	x0, [sp, #24]
    5214:	bl	6c4 <tdb_unlock>
    5218:	ldr	w0, [sp, #92]
    521c:	ldp	x29, x30, [sp], #96
    5220:	ret

0000000000005224 <tdb_next_lock>:
    5224:	stp	x29, x30, [sp, #-64]!
    5228:	mov	x29, sp
    522c:	str	x0, [sp, #40]
    5230:	str	x1, [sp, #32]
    5234:	str	x2, [sp, #24]
    5238:	ldr	x0, [sp, #32]
    523c:	ldr	w0, [x0, #8]
    5240:	cmp	w0, #0x0
    5244:	cset	w0, ne  // ne = any
    5248:	and	w0, w0, #0xff
    524c:	str	w0, [sp, #60]
    5250:	b	54c8 <tdb_next_lock+0x2a4>
    5254:	ldr	x0, [sp, #32]
    5258:	ldr	w0, [x0, #8]
    525c:	cmp	w0, #0x0
    5260:	b.ne	52ac <tdb_next_lock+0x88>  // b.any
    5264:	ldr	x0, [sp, #32]
    5268:	ldr	w0, [x0, #12]
    526c:	cmp	w0, #0x0
    5270:	b.eq	52ac <tdb_next_lock+0x88>  // b.none
    5274:	ldr	x0, [sp, #40]
    5278:	ldr	x0, [x0, #312]
    527c:	ldr	x2, [x0, #16]
    5280:	ldr	x0, [sp, #32]
    5284:	add	x0, x0, #0xc
    5288:	mov	x1, x0
    528c:	ldr	x0, [sp, #40]
    5290:	blr	x2
    5294:	ldr	x0, [sp, #32]
    5298:	ldr	w1, [x0, #12]
    529c:	ldr	x0, [sp, #40]
    52a0:	ldr	w0, [x0, #96]
    52a4:	cmp	w1, w0
    52a8:	b.eq	54b0 <tdb_next_lock+0x28c>  // b.none
    52ac:	ldr	x0, [sp, #32]
    52b0:	ldr	w0, [x0, #12]
    52b4:	mov	w1, w0
    52b8:	ldr	x0, [sp, #32]
    52bc:	ldr	w0, [x0, #16]
    52c0:	mov	w2, w0
    52c4:	ldr	x0, [sp, #40]
    52c8:	bl	614 <tdb_lock>
    52cc:	cmn	w0, #0x1
    52d0:	b.ne	52dc <tdb_next_lock+0xb8>  // b.any
    52d4:	mov	w0, #0xffffffff            	// #-1
    52d8:	b	5564 <tdb_next_lock+0x340>
    52dc:	ldr	x0, [sp, #32]
    52e0:	ldr	w0, [x0, #8]
    52e4:	cmp	w0, #0x0
    52e8:	b.ne	5330 <tdb_next_lock+0x10c>  // b.any
    52ec:	ldr	x0, [sp, #32]
    52f0:	ldr	w0, [x0, #12]
    52f4:	ldr	x1, [sp, #40]
    52f8:	ldr	w1, [x1, #96]
    52fc:	udiv	w2, w0, w1
    5300:	mul	w1, w2, w1
    5304:	sub	w0, w0, w1
    5308:	add	w0, w0, #0x2b
    530c:	lsl	w1, w0, #2
    5310:	ldr	x0, [sp, #32]
    5314:	add	x0, x0, #0x8
    5318:	mov	x2, x0
    531c:	ldr	x0, [sp, #40]
    5320:	bl	1f18 <tdb_ofs_read>
    5324:	cmn	w0, #0x1
    5328:	b.ne	534c <tdb_next_lock+0x128>  // b.any
    532c:	b	5514 <tdb_next_lock+0x2f0>
    5330:	ldr	x0, [sp, #32]
    5334:	ldr	w0, [x0, #8]
    5338:	mov	w1, w0
    533c:	ldr	x0, [sp, #40]
    5340:	bl	1270 <tdb_unlock_record>
    5344:	cmp	w0, #0x0
    5348:	b.ne	54f0 <tdb_next_lock+0x2cc>  // b.any
    534c:	ldr	w0, [sp, #60]
    5350:	cmp	w0, #0x0
    5354:	b.eq	5478 <tdb_next_lock+0x254>  // b.none
    5358:	ldr	x0, [sp, #32]
    535c:	ldr	w0, [x0, #8]
    5360:	ldr	x2, [sp, #24]
    5364:	mov	w1, w0
    5368:	ldr	x0, [sp, #40]
    536c:	bl	21cc <tdb_rec_read>
    5370:	cmn	w0, #0x1
    5374:	b.eq	54f8 <tdb_next_lock+0x2d4>  // b.none
    5378:	ldr	x0, [sp, #24]
    537c:	ldr	w1, [x0]
    5380:	ldr	x0, [sp, #32]
    5384:	str	w1, [x0, #8]
    5388:	b	5478 <tdb_next_lock+0x254>
    538c:	ldr	x0, [sp, #32]
    5390:	ldr	w0, [x0, #8]
    5394:	ldr	x2, [sp, #24]
    5398:	mov	w1, w0
    539c:	ldr	x0, [sp, #40]
    53a0:	bl	21cc <tdb_rec_read>
    53a4:	cmn	w0, #0x1
    53a8:	b.eq	5500 <tdb_next_lock+0x2dc>  // b.none
    53ac:	ldr	x0, [sp, #32]
    53b0:	ldr	w1, [x0, #8]
    53b4:	ldr	x0, [sp, #24]
    53b8:	ldr	w0, [x0]
    53bc:	cmp	w1, w0
    53c0:	b.ne	53e4 <tdb_next_lock+0x1c0>  // b.any
    53c4:	ldr	x0, [sp, #40]
    53c8:	ldr	x3, [x0, #280]
    53cc:	adrp	x0, 0 <ext2fs_tdb_error>
    53d0:	add	x2, x0, #0x0
    53d4:	mov	w1, #0x0                   	// #0
    53d8:	ldr	x0, [sp, #40]
    53dc:	blr	x3
    53e0:	b	5514 <tdb_next_lock+0x2f0>
    53e4:	ldr	x0, [sp, #24]
    53e8:	ldr	w1, [x0, #20]
    53ec:	mov	w0, #0xdead                	// #57005
    53f0:	movk	w0, #0xfee1, lsl #16
    53f4:	cmp	w1, w0
    53f8:	b.eq	5424 <tdb_next_lock+0x200>  // b.none
    53fc:	ldr	x0, [sp, #32]
    5400:	ldr	w0, [x0, #8]
    5404:	mov	w1, w0
    5408:	ldr	x0, [sp, #40]
    540c:	bl	1158 <tdb_lock_record>
    5410:	cmp	w0, #0x0
    5414:	b.ne	5508 <tdb_next_lock+0x2e4>  // b.any
    5418:	ldr	x0, [sp, #32]
    541c:	ldr	w0, [x0, #8]
    5420:	b	5564 <tdb_next_lock+0x340>
    5424:	ldr	x0, [sp, #32]
    5428:	ldr	w0, [x0, #8]
    542c:	str	w0, [sp, #56]
    5430:	ldr	x0, [sp, #24]
    5434:	ldr	w1, [x0]
    5438:	ldr	x0, [sp, #32]
    543c:	str	w1, [x0, #8]
    5440:	ldr	x0, [sp, #40]
    5444:	ldr	w0, [x0, #24]
    5448:	cmp	w0, #0x0
    544c:	b.ne	5478 <tdb_next_lock+0x254>  // b.any
    5450:	ldr	x0, [sp, #40]
    5454:	ldr	w0, [x0, #28]
    5458:	cmp	w0, #0x0
    545c:	b.ne	5478 <tdb_next_lock+0x254>  // b.any
    5460:	ldr	x2, [sp, #24]
    5464:	ldr	w1, [sp, #56]
    5468:	ldr	x0, [sp, #40]
    546c:	bl	6830 <tdb_do_delete>
    5470:	cmp	w0, #0x0
    5474:	b.ne	5510 <tdb_next_lock+0x2ec>  // b.any
    5478:	ldr	x0, [sp, #32]
    547c:	ldr	w0, [x0, #8]
    5480:	cmp	w0, #0x0
    5484:	b.ne	538c <tdb_next_lock+0x168>  // b.any
    5488:	ldr	x0, [sp, #32]
    548c:	ldr	w0, [x0, #12]
    5490:	mov	w1, w0
    5494:	ldr	x0, [sp, #32]
    5498:	ldr	w0, [x0, #16]
    549c:	mov	w2, w0
    54a0:	ldr	x0, [sp, #40]
    54a4:	bl	6c4 <tdb_unlock>
    54a8:	str	wzr, [sp, #60]
    54ac:	b	54b4 <tdb_next_lock+0x290>
    54b0:	nop
    54b4:	ldr	x0, [sp, #32]
    54b8:	ldr	w0, [x0, #12]
    54bc:	add	w1, w0, #0x1
    54c0:	ldr	x0, [sp, #32]
    54c4:	str	w1, [x0, #12]
    54c8:	ldr	x0, [sp, #32]
    54cc:	ldr	w1, [x0, #12]
    54d0:	ldr	x0, [sp, #40]
    54d4:	ldr	w0, [x0, #96]
    54d8:	cmp	w1, w0
    54dc:	b.cc	5254 <tdb_next_lock+0x30>  // b.lo, b.ul, b.last
    54e0:	ldr	x0, [sp, #40]
    54e4:	str	wzr, [x0, #56]
    54e8:	mov	w0, #0x0                   	// #0
    54ec:	b	5564 <tdb_next_lock+0x340>
    54f0:	nop
    54f4:	b	5514 <tdb_next_lock+0x2f0>
    54f8:	nop
    54fc:	b	5514 <tdb_next_lock+0x2f0>
    5500:	nop
    5504:	b	5514 <tdb_next_lock+0x2f0>
    5508:	nop
    550c:	b	5514 <tdb_next_lock+0x2f0>
    5510:	nop
    5514:	ldr	x0, [sp, #32]
    5518:	str	wzr, [x0, #8]
    551c:	ldr	x0, [sp, #32]
    5520:	ldr	w0, [x0, #12]
    5524:	mov	w1, w0
    5528:	ldr	x0, [sp, #32]
    552c:	ldr	w0, [x0, #16]
    5530:	mov	w2, w0
    5534:	ldr	x0, [sp, #40]
    5538:	bl	6c4 <tdb_unlock>
    553c:	cmp	w0, #0x0
    5540:	b.eq	5560 <tdb_next_lock+0x33c>  // b.none
    5544:	ldr	x0, [sp, #40]
    5548:	ldr	x3, [x0, #280]
    554c:	adrp	x0, 0 <ext2fs_tdb_error>
    5550:	add	x2, x0, #0x0
    5554:	mov	w1, #0x0                   	// #0
    5558:	ldr	x0, [sp, #40]
    555c:	blr	x3
    5560:	mov	w0, #0xffffffff            	// #-1
    5564:	ldp	x29, x30, [sp], #64
    5568:	ret

000000000000556c <tdb_traverse_internal>:
    556c:	stp	x29, x30, [sp, #-112]!
    5570:	mov	x29, sp
    5574:	str	x0, [sp, #40]
    5578:	str	x1, [sp, #32]
    557c:	str	x2, [sp, #24]
    5580:	str	x3, [sp, #16]
    5584:	str	wzr, [sp, #104]
    5588:	ldr	x0, [sp, #40]
    558c:	ldr	x1, [x0, #232]
    5590:	ldr	x0, [sp, #16]
    5594:	str	x1, [x0]
    5598:	ldr	x0, [sp, #40]
    559c:	ldr	x1, [sp, #16]
    55a0:	str	x1, [x0, #232]
    55a4:	b	5778 <tdb_traverse_internal+0x20c>
    55a8:	ldr	w0, [sp, #104]
    55ac:	add	w0, w0, #0x1
    55b0:	str	w0, [sp, #104]
    55b4:	ldr	x0, [sp, #16]
    55b8:	ldr	w0, [x0, #8]
    55bc:	add	w3, w0, #0x18
    55c0:	ldr	w1, [sp, #56]
    55c4:	ldr	w0, [sp, #60]
    55c8:	add	w0, w1, w0
    55cc:	mov	w2, w0
    55d0:	mov	w1, w3
    55d4:	ldr	x0, [sp, #40]
    55d8:	bl	1fdc <tdb_alloc_read>
    55dc:	str	x0, [sp, #88]
    55e0:	ldr	x0, [sp, #88]
    55e4:	cmp	x0, #0x0
    55e8:	b.ne	5658 <tdb_traverse_internal+0xec>  // b.any
    55ec:	mov	w0, #0xffffffff            	// #-1
    55f0:	str	w0, [sp, #108]
    55f4:	ldr	x0, [sp, #16]
    55f8:	ldr	w0, [x0, #12]
    55fc:	mov	w1, w0
    5600:	ldr	x0, [sp, #16]
    5604:	ldr	w0, [x0, #16]
    5608:	mov	w2, w0
    560c:	ldr	x0, [sp, #40]
    5610:	bl	6c4 <tdb_unlock>
    5614:	cmp	w0, #0x0
    5618:	b.ne	57a0 <tdb_traverse_internal+0x234>  // b.any
    561c:	ldr	x0, [sp, #16]
    5620:	ldr	w0, [x0, #8]
    5624:	mov	w1, w0
    5628:	ldr	x0, [sp, #40]
    562c:	bl	1270 <tdb_unlock_record>
    5630:	cmp	w0, #0x0
    5634:	b.eq	57a8 <tdb_traverse_internal+0x23c>  // b.none
    5638:	ldr	x0, [sp, #40]
    563c:	ldr	x3, [x0, #280]
    5640:	adrp	x0, 0 <ext2fs_tdb_error>
    5644:	add	x2, x0, #0x0
    5648:	mov	w1, #0x0                   	// #0
    564c:	ldr	x0, [sp, #40]
    5650:	blr	x3
    5654:	b	57a8 <tdb_traverse_internal+0x23c>
    5658:	ldr	w0, [sp, #56]
    565c:	mov	w0, w0
    5660:	str	x0, [sp, #96]
    5664:	ldr	x1, [sp, #88]
    5668:	ldr	w0, [sp, #56]
    566c:	mov	w0, w0
    5670:	add	x0, x1, x0
    5674:	str	x0, [sp, #72]
    5678:	ldr	w0, [sp, #60]
    567c:	mov	w0, w0
    5680:	str	x0, [sp, #80]
    5684:	ldr	x0, [sp, #16]
    5688:	ldr	w0, [x0, #12]
    568c:	mov	w1, w0
    5690:	ldr	x0, [sp, #16]
    5694:	ldr	w0, [x0, #16]
    5698:	mov	w2, w0
    569c:	ldr	x0, [sp, #40]
    56a0:	bl	6c4 <tdb_unlock>
    56a4:	cmp	w0, #0x0
    56a8:	b.eq	56d0 <tdb_traverse_internal+0x164>  // b.none
    56ac:	mov	w0, #0xffffffff            	// #-1
    56b0:	str	w0, [sp, #108]
    56b4:	ldr	x0, [sp, #88]
    56b8:	cmp	x0, #0x0
    56bc:	b.eq	57b0 <tdb_traverse_internal+0x244>  // b.none
    56c0:	ldr	x0, [sp, #88]
    56c4:	bl	0 <free>
    56c8:	str	xzr, [sp, #88]
    56cc:	b	57b0 <tdb_traverse_internal+0x244>
    56d0:	ldr	x0, [sp, #32]
    56d4:	cmp	x0, #0x0
    56d8:	b.eq	5760 <tdb_traverse_internal+0x1f4>  // b.none
    56dc:	ldr	x6, [sp, #32]
    56e0:	ldr	x5, [sp, #24]
    56e4:	ldp	x3, x4, [sp, #72]
    56e8:	ldp	x1, x2, [sp, #88]
    56ec:	ldr	x0, [sp, #40]
    56f0:	blr	x6
    56f4:	cmp	w0, #0x0
    56f8:	b.eq	5760 <tdb_traverse_internal+0x1f4>  // b.none
    56fc:	ldr	w0, [sp, #104]
    5700:	str	w0, [sp, #108]
    5704:	ldr	x0, [sp, #16]
    5708:	ldr	w0, [x0, #8]
    570c:	mov	w1, w0
    5710:	ldr	x0, [sp, #40]
    5714:	bl	1270 <tdb_unlock_record>
    5718:	cmp	w0, #0x0
    571c:	b.eq	5744 <tdb_traverse_internal+0x1d8>  // b.none
    5720:	ldr	x0, [sp, #40]
    5724:	ldr	x3, [x0, #280]
    5728:	adrp	x0, 0 <ext2fs_tdb_error>
    572c:	add	x2, x0, #0x0
    5730:	mov	w1, #0x0                   	// #0
    5734:	ldr	x0, [sp, #40]
    5738:	blr	x3
    573c:	mov	w0, #0xffffffff            	// #-1
    5740:	str	w0, [sp, #108]
    5744:	ldr	x0, [sp, #88]
    5748:	cmp	x0, #0x0
    574c:	b.eq	57b8 <tdb_traverse_internal+0x24c>  // b.none
    5750:	ldr	x0, [sp, #88]
    5754:	bl	0 <free>
    5758:	str	xzr, [sp, #88]
    575c:	b	57b8 <tdb_traverse_internal+0x24c>
    5760:	ldr	x0, [sp, #88]
    5764:	cmp	x0, #0x0
    5768:	b.eq	5778 <tdb_traverse_internal+0x20c>  // b.none
    576c:	ldr	x0, [sp, #88]
    5770:	bl	0 <free>
    5774:	str	xzr, [sp, #88]
    5778:	add	x0, sp, #0x30
    577c:	mov	x2, x0
    5780:	ldr	x1, [sp, #16]
    5784:	ldr	x0, [sp, #40]
    5788:	bl	5224 <tdb_next_lock>
    578c:	str	w0, [sp, #108]
    5790:	ldr	w0, [sp, #108]
    5794:	cmp	w0, #0x0
    5798:	b.gt	55a8 <tdb_traverse_internal+0x3c>
    579c:	b	57bc <tdb_traverse_internal+0x250>
    57a0:	nop
    57a4:	b	57bc <tdb_traverse_internal+0x250>
    57a8:	nop
    57ac:	b	57bc <tdb_traverse_internal+0x250>
    57b0:	nop
    57b4:	b	57bc <tdb_traverse_internal+0x250>
    57b8:	nop
    57bc:	ldr	x0, [sp, #16]
    57c0:	ldr	x1, [x0]
    57c4:	ldr	x0, [sp, #40]
    57c8:	str	x1, [x0, #232]
    57cc:	ldr	w0, [sp, #108]
    57d0:	cmp	w0, #0x0
    57d4:	b.ge	57e0 <tdb_traverse_internal+0x274>  // b.tcont
    57d8:	mov	w0, #0xffffffff            	// #-1
    57dc:	b	57e4 <tdb_traverse_internal+0x278>
    57e0:	ldr	w0, [sp, #104]
    57e4:	ldp	x29, x30, [sp], #112
    57e8:	ret

00000000000057ec <ext2fs_tdb_traverse_read>:
    57ec:	stp	x29, x30, [sp, #-80]!
    57f0:	mov	x29, sp
    57f4:	str	x0, [sp, #40]
    57f8:	str	x1, [sp, #32]
    57fc:	str	x2, [sp, #24]
    5800:	str	xzr, [sp, #48]
    5804:	str	wzr, [sp, #56]
    5808:	str	wzr, [sp, #60]
    580c:	str	wzr, [sp, #64]
    5810:	mov	w1, #0x0                   	// #0
    5814:	ldr	x0, [sp, #40]
    5818:	bl	9e8 <tdb_transaction_lock>
    581c:	cmp	w0, #0x0
    5820:	b.eq	582c <ext2fs_tdb_traverse_read+0x40>  // b.none
    5824:	mov	w0, #0xffffffff            	// #-1
    5828:	b	587c <ext2fs_tdb_traverse_read+0x90>
    582c:	ldr	x0, [sp, #40]
    5830:	ldr	w0, [x0, #28]
    5834:	add	w1, w0, #0x1
    5838:	ldr	x0, [sp, #40]
    583c:	str	w1, [x0, #28]
    5840:	add	x0, sp, #0x30
    5844:	mov	x3, x0
    5848:	ldr	x2, [sp, #24]
    584c:	ldr	x1, [sp, #32]
    5850:	ldr	x0, [sp, #40]
    5854:	bl	556c <tdb_traverse_internal>
    5858:	str	w0, [sp, #76]
    585c:	ldr	x0, [sp, #40]
    5860:	ldr	w0, [x0, #28]
    5864:	sub	w1, w0, #0x1
    5868:	ldr	x0, [sp, #40]
    586c:	str	w1, [x0, #28]
    5870:	ldr	x0, [sp, #40]
    5874:	bl	a98 <tdb_transaction_unlock>
    5878:	ldr	w0, [sp, #76]
    587c:	ldp	x29, x30, [sp], #80
    5880:	ret

0000000000005884 <ext2fs_tdb_traverse>:
    5884:	stp	x29, x30, [sp, #-80]!
    5888:	mov	x29, sp
    588c:	str	x0, [sp, #40]
    5890:	str	x1, [sp, #32]
    5894:	str	x2, [sp, #24]
    5898:	str	xzr, [sp, #48]
    589c:	str	wzr, [sp, #56]
    58a0:	str	wzr, [sp, #60]
    58a4:	mov	w0, #0x1                   	// #1
    58a8:	str	w0, [sp, #64]
    58ac:	ldr	x0, [sp, #40]
    58b0:	ldr	w0, [x0, #24]
    58b4:	cmp	w0, #0x0
    58b8:	b.ne	58cc <ext2fs_tdb_traverse+0x48>  // b.any
    58bc:	ldr	x0, [sp, #40]
    58c0:	ldr	w0, [x0, #28]
    58c4:	cmp	w0, #0x0
    58c8:	b.eq	58e0 <ext2fs_tdb_traverse+0x5c>  // b.none
    58cc:	ldr	x2, [sp, #24]
    58d0:	ldr	x1, [sp, #32]
    58d4:	ldr	x0, [sp, #40]
    58d8:	bl	57ec <ext2fs_tdb_traverse_read>
    58dc:	b	5924 <ext2fs_tdb_traverse+0xa0>
    58e0:	mov	w1, #0x1                   	// #1
    58e4:	ldr	x0, [sp, #40]
    58e8:	bl	9e8 <tdb_transaction_lock>
    58ec:	cmp	w0, #0x0
    58f0:	b.eq	58fc <ext2fs_tdb_traverse+0x78>  // b.none
    58f4:	mov	w0, #0xffffffff            	// #-1
    58f8:	b	5924 <ext2fs_tdb_traverse+0xa0>
    58fc:	add	x0, sp, #0x30
    5900:	mov	x3, x0
    5904:	ldr	x2, [sp, #24]
    5908:	ldr	x1, [sp, #32]
    590c:	ldr	x0, [sp, #40]
    5910:	bl	556c <tdb_traverse_internal>
    5914:	str	w0, [sp, #76]
    5918:	ldr	x0, [sp, #40]
    591c:	bl	a98 <tdb_transaction_unlock>
    5920:	ldr	w0, [sp, #76]
    5924:	ldp	x29, x30, [sp], #80
    5928:	ret

000000000000592c <ext2fs_tdb_firstkey>:
    592c:	stp	x29, x30, [sp, #-80]!
    5930:	mov	x29, sp
    5934:	str	x0, [sp, #24]
    5938:	ldr	x0, [sp, #24]
    593c:	ldr	w0, [x0, #240]
    5940:	mov	w1, w0
    5944:	ldr	x0, [sp, #24]
    5948:	bl	1270 <tdb_unlock_record>
    594c:	cmp	w0, #0x0
    5950:	b.eq	5964 <ext2fs_tdb_firstkey+0x38>  // b.none
    5954:	adrp	x0, 0 <ext2fs_tdb_error>
    5958:	add	x0, x0, #0x0
    595c:	ldp	x0, x1, [x0]
    5960:	b	5a30 <ext2fs_tdb_firstkey+0x104>
    5964:	ldr	x0, [sp, #24]
    5968:	str	wzr, [x0, #244]
    596c:	ldr	x0, [sp, #24]
    5970:	ldr	w1, [x0, #244]
    5974:	ldr	x0, [sp, #24]
    5978:	str	w1, [x0, #240]
    597c:	ldr	x0, [sp, #24]
    5980:	str	wzr, [x0, #248]
    5984:	ldr	x0, [sp, #24]
    5988:	add	x0, x0, #0xe8
    598c:	add	x1, sp, #0x28
    5990:	mov	x2, x1
    5994:	mov	x1, x0
    5998:	ldr	x0, [sp, #24]
    599c:	bl	5224 <tdb_next_lock>
    59a0:	cmp	w0, #0x0
    59a4:	b.gt	59b8 <ext2fs_tdb_firstkey+0x8c>
    59a8:	adrp	x0, 0 <ext2fs_tdb_error>
    59ac:	add	x0, x0, #0x0
    59b0:	ldp	x0, x1, [x0]
    59b4:	b	5a30 <ext2fs_tdb_firstkey+0x104>
    59b8:	ldr	w0, [sp, #48]
    59bc:	mov	w0, w0
    59c0:	str	x0, [sp, #72]
    59c4:	ldr	x0, [sp, #24]
    59c8:	ldr	w0, [x0, #240]
    59cc:	add	w0, w0, #0x18
    59d0:	ldr	x1, [sp, #72]
    59d4:	mov	w2, w1
    59d8:	mov	w1, w0
    59dc:	ldr	x0, [sp, #24]
    59e0:	bl	1fdc <tdb_alloc_read>
    59e4:	str	x0, [sp, #64]
    59e8:	ldr	x0, [sp, #24]
    59ec:	ldr	w0, [x0, #244]
    59f0:	mov	w1, w0
    59f4:	ldr	x0, [sp, #24]
    59f8:	ldr	w0, [x0, #248]
    59fc:	mov	w2, w0
    5a00:	ldr	x0, [sp, #24]
    5a04:	bl	6c4 <tdb_unlock>
    5a08:	cmp	w0, #0x0
    5a0c:	b.eq	5a2c <ext2fs_tdb_firstkey+0x100>  // b.none
    5a10:	ldr	x0, [sp, #24]
    5a14:	ldr	x3, [x0, #280]
    5a18:	adrp	x0, 0 <ext2fs_tdb_error>
    5a1c:	add	x2, x0, #0x0
    5a20:	mov	w1, #0x0                   	// #0
    5a24:	ldr	x0, [sp, #24]
    5a28:	blr	x3
    5a2c:	ldp	x0, x1, [sp, #64]
    5a30:	ldp	x29, x30, [sp], #80
    5a34:	ret

0000000000005a38 <ext2fs_tdb_nextkey>:
    5a38:	stp	x29, x30, [sp, #-128]!
    5a3c:	mov	x29, sp
    5a40:	str	x19, [sp, #16]
    5a44:	str	x0, [sp, #56]
    5a48:	stp	x1, x2, [sp, #40]
    5a4c:	adrp	x0, 0 <ext2fs_tdb_error>
    5a50:	add	x0, x0, #0x0
    5a54:	ldp	x0, x1, [x0]
    5a58:	stp	x0, x1, [sp, #96]
    5a5c:	str	xzr, [sp, #120]
    5a60:	ldr	x0, [sp, #56]
    5a64:	ldr	w0, [x0, #240]
    5a68:	cmp	w0, #0x0
    5a6c:	b.eq	5bd0 <ext2fs_tdb_nextkey+0x198>  // b.none
    5a70:	ldr	x0, [sp, #56]
    5a74:	ldr	w0, [x0, #244]
    5a78:	mov	w1, w0
    5a7c:	ldr	x0, [sp, #56]
    5a80:	ldr	w0, [x0, #248]
    5a84:	mov	w2, w0
    5a88:	ldr	x0, [sp, #56]
    5a8c:	bl	614 <tdb_lock>
    5a90:	cmp	w0, #0x0
    5a94:	b.eq	5aa8 <ext2fs_tdb_nextkey+0x70>  // b.none
    5a98:	adrp	x0, 0 <ext2fs_tdb_error>
    5a9c:	add	x0, x0, #0x0
    5aa0:	ldp	x0, x1, [x0]
    5aa4:	b	5db8 <ext2fs_tdb_nextkey+0x380>
    5aa8:	ldr	x0, [sp, #56]
    5aac:	ldr	w0, [x0, #240]
    5ab0:	add	x1, sp, #0x48
    5ab4:	mov	x2, x1
    5ab8:	mov	w1, w0
    5abc:	ldr	x0, [sp, #56]
    5ac0:	bl	21cc <tdb_rec_read>
    5ac4:	cmn	w0, #0x1
    5ac8:	b.eq	5b1c <ext2fs_tdb_nextkey+0xe4>  // b.none
    5acc:	ldr	x0, [sp, #56]
    5ad0:	ldr	w0, [x0, #240]
    5ad4:	add	w0, w0, #0x18
    5ad8:	ldr	w1, [sp, #80]
    5adc:	mov	w2, w1
    5ae0:	mov	w1, w0
    5ae4:	ldr	x0, [sp, #56]
    5ae8:	bl	1fdc <tdb_alloc_read>
    5aec:	str	x0, [sp, #120]
    5af0:	ldr	x0, [sp, #120]
    5af4:	cmp	x0, #0x0
    5af8:	b.eq	5b1c <ext2fs_tdb_nextkey+0xe4>  // b.none
    5afc:	ldr	x0, [sp, #40]
    5b00:	ldr	x1, [sp, #48]
    5b04:	mov	x2, x1
    5b08:	mov	x1, x0
    5b0c:	ldr	x0, [sp, #120]
    5b10:	bl	0 <memcmp>
    5b14:	cmp	w0, #0x0
    5b18:	b.eq	5bb8 <ext2fs_tdb_nextkey+0x180>  // b.none
    5b1c:	ldr	x0, [sp, #56]
    5b20:	ldr	w0, [x0, #240]
    5b24:	mov	w1, w0
    5b28:	ldr	x0, [sp, #56]
    5b2c:	bl	1270 <tdb_unlock_record>
    5b30:	cmp	w0, #0x0
    5b34:	b.eq	5b60 <ext2fs_tdb_nextkey+0x128>  // b.none
    5b38:	ldr	x0, [sp, #120]
    5b3c:	cmp	x0, #0x0
    5b40:	b.eq	5b50 <ext2fs_tdb_nextkey+0x118>  // b.none
    5b44:	ldr	x0, [sp, #120]
    5b48:	bl	0 <free>
    5b4c:	str	xzr, [sp, #120]
    5b50:	adrp	x0, 0 <ext2fs_tdb_error>
    5b54:	add	x0, x0, #0x0
    5b58:	ldp	x0, x1, [x0]
    5b5c:	b	5db8 <ext2fs_tdb_nextkey+0x380>
    5b60:	ldr	x0, [sp, #56]
    5b64:	ldr	w0, [x0, #244]
    5b68:	mov	w1, w0
    5b6c:	ldr	x0, [sp, #56]
    5b70:	ldr	w0, [x0, #248]
    5b74:	mov	w2, w0
    5b78:	ldr	x0, [sp, #56]
    5b7c:	bl	6c4 <tdb_unlock>
    5b80:	cmp	w0, #0x0
    5b84:	b.eq	5bb0 <ext2fs_tdb_nextkey+0x178>  // b.none
    5b88:	ldr	x0, [sp, #120]
    5b8c:	cmp	x0, #0x0
    5b90:	b.eq	5ba0 <ext2fs_tdb_nextkey+0x168>  // b.none
    5b94:	ldr	x0, [sp, #120]
    5b98:	bl	0 <free>
    5b9c:	str	xzr, [sp, #120]
    5ba0:	adrp	x0, 0 <ext2fs_tdb_error>
    5ba4:	add	x0, x0, #0x0
    5ba8:	ldp	x0, x1, [x0]
    5bac:	b	5db8 <ext2fs_tdb_nextkey+0x380>
    5bb0:	ldr	x0, [sp, #56]
    5bb4:	str	wzr, [x0, #240]
    5bb8:	ldr	x0, [sp, #120]
    5bbc:	cmp	x0, #0x0
    5bc0:	b.eq	5bd0 <ext2fs_tdb_nextkey+0x198>  // b.none
    5bc4:	ldr	x0, [sp, #120]
    5bc8:	bl	0 <free>
    5bcc:	str	xzr, [sp, #120]
    5bd0:	ldr	x0, [sp, #56]
    5bd4:	ldr	w0, [x0, #240]
    5bd8:	cmp	w0, #0x0
    5bdc:	b.ne	5cbc <ext2fs_tdb_nextkey+0x284>  // b.any
    5be0:	ldr	x0, [sp, #56]
    5be4:	ldr	x1, [x0, #296]
    5be8:	add	x0, sp, #0x28
    5bec:	blr	x1
    5bf0:	mov	w2, w0
    5bf4:	ldr	x0, [sp, #56]
    5bf8:	ldr	w0, [x0, #248]
    5bfc:	add	x1, sp, #0x48
    5c00:	mov	x5, x1
    5c04:	mov	w4, w0
    5c08:	mov	w3, w2
    5c0c:	ldp	x1, x2, [sp, #40]
    5c10:	ldr	x0, [sp, #56]
    5c14:	bl	6438 <tdb_find_lock_hash>
    5c18:	mov	w1, w0
    5c1c:	ldr	x0, [sp, #56]
    5c20:	str	w1, [x0, #240]
    5c24:	ldr	x0, [sp, #56]
    5c28:	ldr	w0, [x0, #240]
    5c2c:	cmp	w0, #0x0
    5c30:	b.ne	5c44 <ext2fs_tdb_nextkey+0x20c>  // b.any
    5c34:	adrp	x0, 0 <ext2fs_tdb_error>
    5c38:	add	x0, x0, #0x0
    5c3c:	ldp	x0, x1, [x0]
    5c40:	b	5db8 <ext2fs_tdb_nextkey+0x380>
    5c44:	ldr	w0, [sp, #88]
    5c48:	ldr	x1, [sp, #56]
    5c4c:	ldr	w1, [x1, #96]
    5c50:	udiv	w2, w0, w1
    5c54:	mul	w1, w2, w1
    5c58:	sub	w1, w0, w1
    5c5c:	ldr	x0, [sp, #56]
    5c60:	str	w1, [x0, #244]
    5c64:	ldr	x0, [sp, #56]
    5c68:	ldr	w0, [x0, #240]
    5c6c:	mov	w1, w0
    5c70:	ldr	x0, [sp, #56]
    5c74:	bl	1158 <tdb_lock_record>
    5c78:	cmp	w0, #0x0
    5c7c:	b.eq	5cbc <ext2fs_tdb_nextkey+0x284>  // b.none
    5c80:	ldr	x0, [sp, #56]
    5c84:	ldr	x19, [x0, #280]
    5c88:	bl	0 <__errno_location>
    5c8c:	ldr	w0, [x0]
    5c90:	bl	0 <strerror>
    5c94:	mov	x3, x0
    5c98:	adrp	x0, 0 <ext2fs_tdb_error>
    5c9c:	add	x2, x0, #0x0
    5ca0:	mov	w1, #0x0                   	// #0
    5ca4:	ldr	x0, [sp, #56]
    5ca8:	blr	x19
    5cac:	adrp	x0, 0 <ext2fs_tdb_error>
    5cb0:	add	x0, x0, #0x0
    5cb4:	ldp	x0, x1, [x0]
    5cb8:	b	5db8 <ext2fs_tdb_nextkey+0x380>
    5cbc:	ldr	x0, [sp, #56]
    5cc0:	ldr	w0, [x0, #244]
    5cc4:	str	w0, [sp, #116]
    5cc8:	ldr	x0, [sp, #56]
    5ccc:	add	x0, x0, #0xe8
    5cd0:	add	x1, sp, #0x48
    5cd4:	mov	x2, x1
    5cd8:	mov	x1, x0
    5cdc:	ldr	x0, [sp, #56]
    5ce0:	bl	5224 <tdb_next_lock>
    5ce4:	cmp	w0, #0x0
    5ce8:	b.le	5d60 <ext2fs_tdb_nextkey+0x328>
    5cec:	ldr	w0, [sp, #80]
    5cf0:	mov	w0, w0
    5cf4:	str	x0, [sp, #104]
    5cf8:	ldr	x0, [sp, #56]
    5cfc:	ldr	w0, [x0, #240]
    5d00:	add	w0, w0, #0x18
    5d04:	ldr	x1, [sp, #104]
    5d08:	mov	w2, w1
    5d0c:	mov	w1, w0
    5d10:	ldr	x0, [sp, #56]
    5d14:	bl	1fdc <tdb_alloc_read>
    5d18:	str	x0, [sp, #96]
    5d1c:	ldr	x0, [sp, #56]
    5d20:	ldr	w0, [x0, #244]
    5d24:	mov	w1, w0
    5d28:	ldr	x0, [sp, #56]
    5d2c:	ldr	w0, [x0, #248]
    5d30:	mov	w2, w0
    5d34:	ldr	x0, [sp, #56]
    5d38:	bl	6c4 <tdb_unlock>
    5d3c:	cmp	w0, #0x0
    5d40:	b.eq	5d60 <ext2fs_tdb_nextkey+0x328>  // b.none
    5d44:	ldr	x0, [sp, #56]
    5d48:	ldr	x3, [x0, #280]
    5d4c:	adrp	x0, 0 <ext2fs_tdb_error>
    5d50:	add	x2, x0, #0x0
    5d54:	mov	w1, #0x0                   	// #0
    5d58:	ldr	x0, [sp, #56]
    5d5c:	blr	x3
    5d60:	ldr	x0, [sp, #56]
    5d64:	ldr	w1, [x0, #96]
    5d68:	ldr	w0, [sp, #116]
    5d6c:	udiv	w2, w0, w1
    5d70:	mul	w1, w2, w1
    5d74:	sub	w0, w0, w1
    5d78:	mov	w1, w0
    5d7c:	ldr	x0, [sp, #56]
    5d80:	ldr	w0, [x0, #248]
    5d84:	mov	w2, w0
    5d88:	ldr	x0, [sp, #56]
    5d8c:	bl	6c4 <tdb_unlock>
    5d90:	cmp	w0, #0x0
    5d94:	b.eq	5db4 <ext2fs_tdb_nextkey+0x37c>  // b.none
    5d98:	ldr	x0, [sp, #56]
    5d9c:	ldr	x3, [x0, #280]
    5da0:	adrp	x0, 0 <ext2fs_tdb_error>
    5da4:	add	x2, x0, #0x0
    5da8:	mov	w1, #0x0                   	// #0
    5dac:	ldr	x0, [sp, #56]
    5db0:	blr	x3
    5db4:	ldp	x0, x1, [sp, #96]
    5db8:	ldr	x19, [sp, #16]
    5dbc:	ldp	x29, x30, [sp], #128
    5dc0:	ret

0000000000005dc4 <tdb_dump_record>:
    5dc4:	sub	sp, sp, #0x60
    5dc8:	stp	x29, x30, [sp, #16]
    5dcc:	add	x29, sp, #0x10
    5dd0:	str	x0, [sp, #40]
    5dd4:	str	w1, [sp, #36]
    5dd8:	str	w2, [sp, #32]
    5ddc:	ldr	x0, [sp, #40]
    5de0:	ldr	x0, [x0, #312]
    5de4:	ldr	x5, [x0]
    5de8:	ldr	x0, [sp, #40]
    5dec:	ldr	w0, [x0, #228]
    5df0:	and	w1, w0, #0x10
    5df4:	add	x0, sp, #0x40
    5df8:	mov	w4, w1
    5dfc:	mov	w3, #0x18                  	// #24
    5e00:	mov	x2, x0
    5e04:	ldr	w1, [sp, #32]
    5e08:	ldr	x0, [sp, #40]
    5e0c:	blr	x5
    5e10:	cmn	w0, #0x1
    5e14:	b.ne	5e30 <tdb_dump_record+0x6c>  // b.any
    5e18:	ldr	w1, [sp, #32]
    5e1c:	adrp	x0, 0 <ext2fs_tdb_error>
    5e20:	add	x0, x0, #0x0
    5e24:	bl	0 <printf>
    5e28:	mov	w0, #0x0                   	// #0
    5e2c:	b	5ef8 <tdb_dump_record+0x134>
    5e30:	ldr	w1, [sp, #64]
    5e34:	ldr	w2, [sp, #68]
    5e38:	ldr	w3, [sp, #72]
    5e3c:	ldr	w4, [sp, #76]
    5e40:	ldr	w5, [sp, #80]
    5e44:	ldr	w0, [sp, #84]
    5e48:	str	w0, [sp]
    5e4c:	mov	w7, w5
    5e50:	mov	w6, w4
    5e54:	mov	w5, w3
    5e58:	mov	w4, w2
    5e5c:	mov	w3, w1
    5e60:	ldr	w2, [sp, #32]
    5e64:	ldr	w1, [sp, #36]
    5e68:	adrp	x0, 0 <ext2fs_tdb_error>
    5e6c:	add	x0, x0, #0x0
    5e70:	bl	0 <printf>
    5e74:	ldr	w1, [sp, #68]
    5e78:	ldr	w0, [sp, #32]
    5e7c:	add	w0, w1, w0
    5e80:	add	w0, w0, #0x14
    5e84:	str	w0, [sp, #92]
    5e88:	add	x0, sp, #0x3c
    5e8c:	mov	x2, x0
    5e90:	ldr	w1, [sp, #92]
    5e94:	ldr	x0, [sp, #40]
    5e98:	bl	1f18 <tdb_ofs_read>
    5e9c:	cmn	w0, #0x1
    5ea0:	b.ne	5ebc <tdb_dump_record+0xf8>  // b.any
    5ea4:	ldr	w1, [sp, #92]
    5ea8:	adrp	x0, 0 <ext2fs_tdb_error>
    5eac:	add	x0, x0, #0x0
    5eb0:	bl	0 <printf>
    5eb4:	ldr	w0, [sp, #64]
    5eb8:	b	5ef8 <tdb_dump_record+0x134>
    5ebc:	ldr	w0, [sp, #60]
    5ec0:	mov	w1, w0
    5ec4:	ldr	w0, [sp, #68]
    5ec8:	mov	w0, w0
    5ecc:	add	x0, x0, #0x18
    5ed0:	cmp	x1, x0
    5ed4:	b.eq	5ef4 <tdb_dump_record+0x130>  // b.none
    5ed8:	ldr	w1, [sp, #60]
    5edc:	ldr	w0, [sp, #68]
    5ee0:	add	w0, w0, #0x18
    5ee4:	mov	w2, w0
    5ee8:	adrp	x0, 0 <ext2fs_tdb_error>
    5eec:	add	x0, x0, #0x0
    5ef0:	bl	0 <printf>
    5ef4:	ldr	w0, [sp, #64]
    5ef8:	ldp	x29, x30, [sp, #16]
    5efc:	add	sp, sp, #0x60
    5f00:	ret

0000000000005f04 <tdb_dump_chain>:
    5f04:	stp	x29, x30, [sp, #-48]!
    5f08:	mov	x29, sp
    5f0c:	str	x0, [sp, #24]
    5f10:	str	w1, [sp, #20]
    5f14:	ldr	w0, [sp, #20]
    5f18:	ldr	x1, [sp, #24]
    5f1c:	ldr	w1, [x1, #96]
    5f20:	udiv	w2, w0, w1
    5f24:	mul	w1, w2, w1
    5f28:	sub	w0, w0, w1
    5f2c:	add	w0, w0, #0x2b
    5f30:	lsl	w0, w0, #2
    5f34:	str	w0, [sp, #44]
    5f38:	mov	w2, #0x1                   	// #1
    5f3c:	ldr	w1, [sp, #20]
    5f40:	ldr	x0, [sp, #24]
    5f44:	bl	614 <tdb_lock>
    5f48:	cmp	w0, #0x0
    5f4c:	b.eq	5f58 <tdb_dump_chain+0x54>  // b.none
    5f50:	mov	w0, #0xffffffff            	// #-1
    5f54:	b	5fdc <tdb_dump_chain+0xd8>
    5f58:	add	x0, sp, #0x28
    5f5c:	mov	x2, x0
    5f60:	ldr	w1, [sp, #44]
    5f64:	ldr	x0, [sp, #24]
    5f68:	bl	1f18 <tdb_ofs_read>
    5f6c:	cmn	w0, #0x1
    5f70:	b.ne	5f88 <tdb_dump_chain+0x84>  // b.any
    5f74:	mov	w2, #0x1                   	// #1
    5f78:	ldr	w1, [sp, #20]
    5f7c:	ldr	x0, [sp, #24]
    5f80:	bl	6c4 <tdb_unlock>
    5f84:	b	5fdc <tdb_dump_chain+0xd8>
    5f88:	ldr	w0, [sp, #40]
    5f8c:	cmp	w0, #0x0
    5f90:	b.eq	5fc0 <tdb_dump_chain+0xbc>  // b.none
    5f94:	ldr	w1, [sp, #20]
    5f98:	adrp	x0, 0 <ext2fs_tdb_error>
    5f9c:	add	x0, x0, #0x0
    5fa0:	bl	0 <printf>
    5fa4:	b	5fc0 <tdb_dump_chain+0xbc>
    5fa8:	ldr	w0, [sp, #40]
    5fac:	mov	w2, w0
    5fb0:	ldr	w1, [sp, #20]
    5fb4:	ldr	x0, [sp, #24]
    5fb8:	bl	5dc4 <tdb_dump_record>
    5fbc:	str	w0, [sp, #40]
    5fc0:	ldr	w0, [sp, #40]
    5fc4:	cmp	w0, #0x0
    5fc8:	b.ne	5fa8 <tdb_dump_chain+0xa4>  // b.any
    5fcc:	mov	w2, #0x1                   	// #1
    5fd0:	ldr	w1, [sp, #20]
    5fd4:	ldr	x0, [sp, #24]
    5fd8:	bl	6c4 <tdb_unlock>
    5fdc:	ldp	x29, x30, [sp], #48
    5fe0:	ret

0000000000005fe4 <ext2fs_tdb_dump_all>:
    5fe4:	stp	x29, x30, [sp, #-48]!
    5fe8:	mov	x29, sp
    5fec:	str	x0, [sp, #24]
    5ff0:	str	wzr, [sp, #44]
    5ff4:	b	6010 <ext2fs_tdb_dump_all+0x2c>
    5ff8:	ldr	w1, [sp, #44]
    5ffc:	ldr	x0, [sp, #24]
    6000:	bl	5f04 <tdb_dump_chain>
    6004:	ldr	w0, [sp, #44]
    6008:	add	w0, w0, #0x1
    600c:	str	w0, [sp, #44]
    6010:	ldr	x0, [sp, #24]
    6014:	ldr	w1, [x0, #96]
    6018:	ldr	w0, [sp, #44]
    601c:	cmp	w1, w0
    6020:	b.hi	5ff8 <ext2fs_tdb_dump_all+0x14>  // b.pmore
    6024:	adrp	x0, 0 <ext2fs_tdb_error>
    6028:	add	x0, x0, #0x0
    602c:	bl	0 <puts>
    6030:	mov	w1, #0xffffffff            	// #-1
    6034:	ldr	x0, [sp, #24]
    6038:	bl	5f04 <tdb_dump_chain>
    603c:	nop
    6040:	ldp	x29, x30, [sp], #48
    6044:	ret

0000000000006048 <ext2fs_tdb_printfreelist>:
    6048:	stp	x29, x30, [sp, #-80]!
    604c:	mov	x29, sp
    6050:	str	x0, [sp, #24]
    6054:	str	xzr, [sp, #72]
    6058:	mov	w2, #0x1                   	// #1
    605c:	mov	w1, #0xffffffff            	// #-1
    6060:	ldr	x0, [sp, #24]
    6064:	bl	614 <tdb_lock>
    6068:	str	w0, [sp, #68]
    606c:	ldr	w0, [sp, #68]
    6070:	cmp	w0, #0x0
    6074:	b.eq	6080 <ext2fs_tdb_printfreelist+0x38>  // b.none
    6078:	ldr	w0, [sp, #68]
    607c:	b	61e8 <ext2fs_tdb_printfreelist+0x1a0>
    6080:	mov	w0, #0xa8                  	// #168
    6084:	str	w0, [sp, #64]
    6088:	add	x0, sp, #0x3c
    608c:	mov	x2, x0
    6090:	ldr	w1, [sp, #64]
    6094:	ldr	x0, [sp, #24]
    6098:	bl	1f18 <tdb_ofs_read>
    609c:	cmn	w0, #0x1
    60a0:	b.ne	60bc <ext2fs_tdb_printfreelist+0x74>  // b.any
    60a4:	mov	w2, #0x1                   	// #1
    60a8:	mov	w1, #0xffffffff            	// #-1
    60ac:	ldr	x0, [sp, #24]
    60b0:	bl	6c4 <tdb_unlock>
    60b4:	mov	w0, #0x0                   	// #0
    60b8:	b	61e8 <ext2fs_tdb_printfreelist+0x1a0>
    60bc:	ldr	w0, [sp, #60]
    60c0:	mov	w1, w0
    60c4:	adrp	x0, 0 <ext2fs_tdb_error>
    60c8:	add	x0, x0, #0x0
    60cc:	bl	0 <printf>
    60d0:	b	61b0 <ext2fs_tdb_printfreelist+0x168>
    60d4:	ldr	x0, [sp, #24]
    60d8:	ldr	x0, [x0, #312]
    60dc:	ldr	x5, [x0]
    60e0:	ldr	w1, [sp, #60]
    60e4:	ldr	x0, [sp, #24]
    60e8:	ldr	w0, [x0, #228]
    60ec:	and	w2, w0, #0x10
    60f0:	add	x0, sp, #0x20
    60f4:	mov	w4, w2
    60f8:	mov	w3, #0x18                  	// #24
    60fc:	mov	x2, x0
    6100:	ldr	x0, [sp, #24]
    6104:	blr	x5
    6108:	cmn	w0, #0x1
    610c:	b.ne	6128 <ext2fs_tdb_printfreelist+0xe0>  // b.any
    6110:	mov	w2, #0x1                   	// #1
    6114:	mov	w1, #0xffffffff            	// #-1
    6118:	ldr	x0, [sp, #24]
    611c:	bl	6c4 <tdb_unlock>
    6120:	mov	w0, #0xffffffff            	// #-1
    6124:	b	61e8 <ext2fs_tdb_printfreelist+0x1a0>
    6128:	ldr	w1, [sp, #52]
    612c:	mov	w0, #0xe666                	// #58982
    6130:	movk	w0, #0xd9fe, lsl #16
    6134:	cmp	w1, w0
    6138:	b.eq	6168 <ext2fs_tdb_printfreelist+0x120>  // b.none
    613c:	ldr	w0, [sp, #52]
    6140:	mov	w1, w0
    6144:	adrp	x0, 0 <ext2fs_tdb_error>
    6148:	add	x0, x0, #0x0
    614c:	bl	0 <printf>
    6150:	mov	w2, #0x1                   	// #1
    6154:	mov	w1, #0xffffffff            	// #-1
    6158:	ldr	x0, [sp, #24]
    615c:	bl	6c4 <tdb_unlock>
    6160:	mov	w0, #0xffffffff            	// #-1
    6164:	b	61e8 <ext2fs_tdb_printfreelist+0x1a0>
    6168:	ldr	w5, [sp, #60]
    616c:	ldr	w2, [sp, #36]
    6170:	ldr	w3, [sp, #36]
    6174:	ldr	w1, [sp, #36]
    6178:	ldr	w0, [sp, #60]
    617c:	add	w0, w1, w0
    6180:	mov	w4, w0
    6184:	mov	w1, w5
    6188:	adrp	x0, 0 <ext2fs_tdb_error>
    618c:	add	x0, x0, #0x0
    6190:	bl	0 <printf>
    6194:	ldr	w0, [sp, #36]
    6198:	mov	w0, w0
    619c:	ldr	x1, [sp, #72]
    61a0:	add	x0, x1, x0
    61a4:	str	x0, [sp, #72]
    61a8:	ldr	w0, [sp, #32]
    61ac:	str	w0, [sp, #60]
    61b0:	ldr	w0, [sp, #60]
    61b4:	cmp	w0, #0x0
    61b8:	b.ne	60d4 <ext2fs_tdb_printfreelist+0x8c>  // b.any
    61bc:	ldr	x0, [sp, #72]
    61c0:	mov	w1, w0
    61c4:	ldr	x0, [sp, #72]
    61c8:	mov	w2, w0
    61cc:	adrp	x0, 0 <ext2fs_tdb_error>
    61d0:	add	x0, x0, #0x0
    61d4:	bl	0 <printf>
    61d8:	mov	w2, #0x1                   	// #1
    61dc:	mov	w1, #0xffffffff            	// #-1
    61e0:	ldr	x0, [sp, #24]
    61e4:	bl	6c4 <tdb_unlock>
    61e8:	ldp	x29, x30, [sp], #80
    61ec:	ret

00000000000061f0 <ext2fs_tdb_increment_seqnum_nonblock>:
    61f0:	stp	x29, x30, [sp, #-48]!
    61f4:	mov	x29, sp
    61f8:	str	x0, [sp, #24]
    61fc:	str	wzr, [sp, #44]
    6200:	ldr	x0, [sp, #24]
    6204:	ldr	w0, [x0, #228]
    6208:	and	w0, w0, #0x80
    620c:	cmp	w0, #0x0
    6210:	b.eq	624c <ext2fs_tdb_increment_seqnum_nonblock+0x5c>  // b.none
    6214:	add	x0, sp, #0x2c
    6218:	mov	x2, x0
    621c:	mov	w1, #0x30                  	// #48
    6220:	ldr	x0, [sp, #24]
    6224:	bl	1f18 <tdb_ofs_read>
    6228:	ldr	w0, [sp, #44]
    622c:	add	w0, w0, #0x1
    6230:	str	w0, [sp, #44]
    6234:	add	x0, sp, #0x2c
    6238:	mov	x2, x0
    623c:	mov	w1, #0x30                  	// #48
    6240:	ldr	x0, [sp, #24]
    6244:	bl	1f64 <tdb_ofs_write>
    6248:	b	6250 <ext2fs_tdb_increment_seqnum_nonblock+0x60>
    624c:	nop
    6250:	ldp	x29, x30, [sp], #48
    6254:	ret

0000000000006258 <tdb_increment_seqnum>:
    6258:	stp	x29, x30, [sp, #-32]!
    625c:	mov	x29, sp
    6260:	str	x0, [sp, #24]
    6264:	ldr	x0, [sp, #24]
    6268:	ldr	w0, [x0, #228]
    626c:	and	w0, w0, #0x80
    6270:	cmp	w0, #0x0
    6274:	b.eq	62c4 <tdb_increment_seqnum+0x6c>  // b.none
    6278:	mov	x5, #0x1                   	// #1
    627c:	mov	w4, #0x1                   	// #1
    6280:	mov	w3, #0x7                   	// #7
    6284:	mov	w2, #0x1                   	// #1
    6288:	mov	w1, #0x30                  	// #48
    628c:	ldr	x0, [sp, #24]
    6290:	bl	94 <tdb_brlock>
    6294:	cmp	w0, #0x0
    6298:	b.ne	62cc <tdb_increment_seqnum+0x74>  // b.any
    629c:	ldr	x0, [sp, #24]
    62a0:	bl	61f0 <ext2fs_tdb_increment_seqnum_nonblock>
    62a4:	mov	x5, #0x1                   	// #1
    62a8:	mov	w4, #0x1                   	// #1
    62ac:	mov	w3, #0x7                   	// #7
    62b0:	mov	w2, #0x2                   	// #2
    62b4:	mov	w1, #0x30                  	// #48
    62b8:	ldr	x0, [sp, #24]
    62bc:	bl	94 <tdb_brlock>
    62c0:	b	62d0 <tdb_increment_seqnum+0x78>
    62c4:	nop
    62c8:	b	62d0 <tdb_increment_seqnum+0x78>
    62cc:	nop
    62d0:	ldp	x29, x30, [sp], #32
    62d4:	ret

00000000000062d8 <tdb_key_compare>:
    62d8:	stp	x29, x30, [sp, #-64]!
    62dc:	mov	x29, sp
    62e0:	stp	x0, x1, [sp, #48]
    62e4:	stp	x2, x3, [sp, #32]
    62e8:	str	x4, [sp, #24]
    62ec:	ldr	x0, [sp, #32]
    62f0:	ldr	x1, [sp, #48]
    62f4:	ldr	x2, [sp, #40]
    62f8:	bl	0 <memcmp>
    62fc:	ldp	x29, x30, [sp], #64
    6300:	ret

0000000000006304 <tdb_find>:
    6304:	stp	x29, x30, [sp, #-80]!
    6308:	mov	x29, sp
    630c:	str	x0, [sp, #56]
    6310:	stp	x1, x2, [sp, #40]
    6314:	str	w3, [sp, #36]
    6318:	str	x4, [sp, #24]
    631c:	ldr	x0, [sp, #56]
    6320:	ldr	w1, [x0, #96]
    6324:	ldr	w0, [sp, #36]
    6328:	udiv	w2, w0, w1
    632c:	mul	w1, w2, w1
    6330:	sub	w0, w0, w1
    6334:	add	w0, w0, #0x2b
    6338:	lsl	w0, w0, #2
    633c:	add	x1, sp, #0x4c
    6340:	mov	x2, x1
    6344:	mov	w1, w0
    6348:	ldr	x0, [sp, #56]
    634c:	bl	1f18 <tdb_ofs_read>
    6350:	cmn	w0, #0x1
    6354:	b.ne	6414 <tdb_find+0x110>  // b.any
    6358:	mov	w0, #0x0                   	// #0
    635c:	b	6430 <tdb_find+0x12c>
    6360:	ldr	w0, [sp, #76]
    6364:	ldr	x2, [sp, #24]
    6368:	mov	w1, w0
    636c:	ldr	x0, [sp, #56]
    6370:	bl	21cc <tdb_rec_read>
    6374:	cmn	w0, #0x1
    6378:	b.ne	6384 <tdb_find+0x80>  // b.any
    637c:	mov	w0, #0x0                   	// #0
    6380:	b	6430 <tdb_find+0x12c>
    6384:	ldr	x0, [sp, #24]
    6388:	ldr	w1, [x0, #20]
    638c:	mov	w0, #0xdead                	// #57005
    6390:	movk	w0, #0xfee1, lsl #16
    6394:	cmp	w1, w0
    6398:	b.eq	6408 <tdb_find+0x104>  // b.none
    639c:	ldr	x0, [sp, #24]
    63a0:	ldr	w0, [x0, #16]
    63a4:	ldr	w1, [sp, #36]
    63a8:	cmp	w1, w0
    63ac:	b.ne	6408 <tdb_find+0x104>  // b.any
    63b0:	ldr	x1, [sp, #48]
    63b4:	ldr	x0, [sp, #24]
    63b8:	ldr	w0, [x0, #8]
    63bc:	mov	w0, w0
    63c0:	cmp	x1, x0
    63c4:	b.ne	6408 <tdb_find+0x104>  // b.any
    63c8:	ldr	w0, [sp, #76]
    63cc:	add	w1, w0, #0x18
    63d0:	ldr	x0, [sp, #24]
    63d4:	ldr	w2, [x0, #8]
    63d8:	mov	x6, #0x0                   	// #0
    63dc:	adrp	x0, 0 <ext2fs_tdb_error>
    63e0:	add	x5, x0, #0x0
    63e4:	mov	w4, w2
    63e8:	mov	w3, w1
    63ec:	ldp	x1, x2, [sp, #40]
    63f0:	ldr	x0, [sp, #56]
    63f4:	bl	20cc <tdb_parse_data>
    63f8:	cmp	w0, #0x0
    63fc:	b.ne	6408 <tdb_find+0x104>  // b.any
    6400:	ldr	w0, [sp, #76]
    6404:	b	6430 <tdb_find+0x12c>
    6408:	ldr	x0, [sp, #24]
    640c:	ldr	w0, [x0]
    6410:	str	w0, [sp, #76]
    6414:	ldr	w0, [sp, #76]
    6418:	cmp	w0, #0x0
    641c:	b.ne	6360 <tdb_find+0x5c>  // b.any
    6420:	ldr	x0, [sp, #56]
    6424:	mov	w1, #0x8                   	// #8
    6428:	str	w1, [x0, #56]
    642c:	mov	w0, #0x0                   	// #0
    6430:	ldp	x29, x30, [sp], #80
    6434:	ret

0000000000006438 <tdb_find_lock_hash>:
    6438:	stp	x29, x30, [sp, #-80]!
    643c:	mov	x29, sp
    6440:	str	x0, [sp, #56]
    6444:	stp	x1, x2, [sp, #40]
    6448:	str	w3, [sp, #36]
    644c:	str	w4, [sp, #32]
    6450:	str	x5, [sp, #24]
    6454:	ldr	x0, [sp, #56]
    6458:	ldr	w1, [x0, #96]
    645c:	ldr	w0, [sp, #36]
    6460:	udiv	w2, w0, w1
    6464:	mul	w1, w2, w1
    6468:	sub	w0, w0, w1
    646c:	ldr	w2, [sp, #32]
    6470:	mov	w1, w0
    6474:	ldr	x0, [sp, #56]
    6478:	bl	614 <tdb_lock>
    647c:	cmn	w0, #0x1
    6480:	b.ne	648c <tdb_find_lock_hash+0x54>  // b.any
    6484:	mov	w0, #0x0                   	// #0
    6488:	b	64dc <tdb_find_lock_hash+0xa4>
    648c:	ldr	x4, [sp, #24]
    6490:	ldr	w3, [sp, #36]
    6494:	ldp	x1, x2, [sp, #40]
    6498:	ldr	x0, [sp, #56]
    649c:	bl	6304 <tdb_find>
    64a0:	str	w0, [sp, #76]
    64a4:	ldr	w0, [sp, #76]
    64a8:	cmp	w0, #0x0
    64ac:	b.ne	64d8 <tdb_find_lock_hash+0xa0>  // b.any
    64b0:	ldr	x0, [sp, #56]
    64b4:	ldr	w1, [x0, #96]
    64b8:	ldr	w0, [sp, #36]
    64bc:	udiv	w2, w0, w1
    64c0:	mul	w1, w2, w1
    64c4:	sub	w0, w0, w1
    64c8:	ldr	w2, [sp, #32]
    64cc:	mov	w1, w0
    64d0:	ldr	x0, [sp, #56]
    64d4:	bl	6c4 <tdb_unlock>
    64d8:	ldr	w0, [sp, #76]
    64dc:	ldp	x29, x30, [sp], #80
    64e0:	ret

00000000000064e4 <tdb_update_hash>:
    64e4:	stp	x29, x30, [sp, #-96]!
    64e8:	mov	x29, sp
    64ec:	str	x0, [sp, #56]
    64f0:	stp	x1, x2, [sp, #40]
    64f4:	str	w3, [sp, #36]
    64f8:	stp	x4, x5, [sp, #16]
    64fc:	add	x0, sp, #0x40
    6500:	mov	x4, x0
    6504:	ldr	w3, [sp, #36]
    6508:	ldp	x1, x2, [sp, #40]
    650c:	ldr	x0, [sp, #56]
    6510:	bl	6304 <tdb_find>
    6514:	str	w0, [sp, #92]
    6518:	ldr	w0, [sp, #92]
    651c:	cmp	w0, #0x0
    6520:	b.ne	652c <tdb_update_hash+0x48>  // b.any
    6524:	mov	w0, #0xffffffff            	// #-1
    6528:	b	65dc <tdb_update_hash+0xf8>
    652c:	ldr	w0, [sp, #68]
    6530:	mov	w1, w0
    6534:	ldr	x2, [sp, #48]
    6538:	ldr	x0, [sp, #24]
    653c:	add	x0, x2, x0
    6540:	add	x0, x0, #0x4
    6544:	cmp	x1, x0
    6548:	b.cs	655c <tdb_update_hash+0x78>  // b.hs, b.nlast
    654c:	ldr	x0, [sp, #56]
    6550:	str	wzr, [x0, #56]
    6554:	mov	w0, #0xffffffff            	// #-1
    6558:	b	65dc <tdb_update_hash+0xf8>
    655c:	ldr	x0, [sp, #56]
    6560:	ldr	x0, [x0, #312]
    6564:	ldr	x4, [x0, #8]
    6568:	ldr	w1, [sp, #72]
    656c:	ldr	w0, [sp, #92]
    6570:	add	w0, w1, w0
    6574:	add	w0, w0, #0x18
    6578:	ldr	x1, [sp, #16]
    657c:	ldr	x2, [sp, #24]
    6580:	mov	w3, w2
    6584:	mov	x2, x1
    6588:	mov	w1, w0
    658c:	ldr	x0, [sp, #56]
    6590:	blr	x4
    6594:	cmn	w0, #0x1
    6598:	b.ne	65a4 <tdb_update_hash+0xc0>  // b.any
    659c:	mov	w0, #0xffffffff            	// #-1
    65a0:	b	65dc <tdb_update_hash+0xf8>
    65a4:	ldr	x1, [sp, #24]
    65a8:	ldr	w0, [sp, #76]
    65ac:	mov	w0, w0
    65b0:	cmp	x1, x0
    65b4:	b.eq	65d8 <tdb_update_hash+0xf4>  // b.none
    65b8:	ldr	x0, [sp, #24]
    65bc:	str	w0, [sp, #76]
    65c0:	add	x0, sp, #0x40
    65c4:	mov	x2, x0
    65c8:	ldr	w1, [sp, #92]
    65cc:	ldr	x0, [sp, #56]
    65d0:	bl	22cc <tdb_rec_write>
    65d4:	b	65dc <tdb_update_hash+0xf8>
    65d8:	mov	w0, #0x0                   	// #0
    65dc:	ldp	x29, x30, [sp], #96
    65e0:	ret

00000000000065e4 <ext2fs_tdb_fetch>:
    65e4:	stp	x29, x30, [sp, #-96]!
    65e8:	mov	x29, sp
    65ec:	str	x0, [sp, #40]
    65f0:	stp	x1, x2, [sp, #24]
    65f4:	ldr	x0, [sp, #40]
    65f8:	ldr	x1, [x0, #296]
    65fc:	add	x0, sp, #0x18
    6600:	blr	x1
    6604:	str	w0, [sp, #92]
    6608:	add	x0, sp, #0x40
    660c:	mov	x5, x0
    6610:	mov	w4, #0x0                   	// #0
    6614:	ldr	w3, [sp, #92]
    6618:	ldp	x1, x2, [sp, #24]
    661c:	ldr	x0, [sp, #40]
    6620:	bl	6438 <tdb_find_lock_hash>
    6624:	str	w0, [sp, #88]
    6628:	ldr	w0, [sp, #88]
    662c:	cmp	w0, #0x0
    6630:	b.ne	6644 <ext2fs_tdb_fetch+0x60>  // b.any
    6634:	adrp	x0, 0 <ext2fs_tdb_error>
    6638:	add	x0, x0, #0x0
    663c:	ldp	x0, x1, [x0]
    6640:	b	66a4 <ext2fs_tdb_fetch+0xc0>
    6644:	ldr	w1, [sp, #72]
    6648:	ldr	w0, [sp, #88]
    664c:	add	w0, w1, w0
    6650:	add	w0, w0, #0x18
    6654:	ldr	w1, [sp, #76]
    6658:	mov	w2, w1
    665c:	mov	w1, w0
    6660:	ldr	x0, [sp, #40]
    6664:	bl	1fdc <tdb_alloc_read>
    6668:	str	x0, [sp, #48]
    666c:	ldr	w0, [sp, #76]
    6670:	mov	w0, w0
    6674:	str	x0, [sp, #56]
    6678:	ldr	w0, [sp, #80]
    667c:	ldr	x1, [sp, #40]
    6680:	ldr	w1, [x1, #96]
    6684:	udiv	w2, w0, w1
    6688:	mul	w1, w2, w1
    668c:	sub	w0, w0, w1
    6690:	mov	w2, #0x0                   	// #0
    6694:	mov	w1, w0
    6698:	ldr	x0, [sp, #40]
    669c:	bl	6c4 <tdb_unlock>
    66a0:	ldp	x0, x1, [sp, #48]
    66a4:	ldp	x29, x30, [sp], #96
    66a8:	ret

00000000000066ac <ext2fs_tdb_parse_record>:
    66ac:	stp	x29, x30, [sp, #-112]!
    66b0:	mov	x29, sp
    66b4:	str	x0, [sp, #56]
    66b8:	stp	x1, x2, [sp, #40]
    66bc:	str	x3, [sp, #32]
    66c0:	str	x4, [sp, #24]
    66c4:	ldr	x0, [sp, #56]
    66c8:	ldr	x1, [x0, #296]
    66cc:	add	x0, sp, #0x28
    66d0:	blr	x1
    66d4:	str	w0, [sp, #108]
    66d8:	add	x0, sp, #0x48
    66dc:	mov	x5, x0
    66e0:	mov	w4, #0x0                   	// #0
    66e4:	ldr	w3, [sp, #108]
    66e8:	ldp	x1, x2, [sp, #40]
    66ec:	ldr	x0, [sp, #56]
    66f0:	bl	6438 <tdb_find_lock_hash>
    66f4:	str	w0, [sp, #104]
    66f8:	ldr	w0, [sp, #104]
    66fc:	cmp	w0, #0x0
    6700:	b.ne	6718 <ext2fs_tdb_parse_record+0x6c>  // b.any
    6704:	ldr	x0, [sp, #56]
    6708:	mov	w1, #0x8                   	// #8
    670c:	str	w1, [x0, #56]
    6710:	mov	w0, #0x0                   	// #0
    6714:	b	6778 <ext2fs_tdb_parse_record+0xcc>
    6718:	ldr	w1, [sp, #80]
    671c:	ldr	w0, [sp, #104]
    6720:	add	w0, w1, w0
    6724:	add	w0, w0, #0x18
    6728:	ldr	w1, [sp, #84]
    672c:	ldr	x6, [sp, #24]
    6730:	ldr	x5, [sp, #32]
    6734:	mov	w4, w1
    6738:	mov	w3, w0
    673c:	ldp	x1, x2, [sp, #40]
    6740:	ldr	x0, [sp, #56]
    6744:	bl	20cc <tdb_parse_data>
    6748:	str	w0, [sp, #100]
    674c:	ldr	w0, [sp, #88]
    6750:	ldr	x1, [sp, #56]
    6754:	ldr	w1, [x1, #96]
    6758:	udiv	w2, w0, w1
    675c:	mul	w1, w2, w1
    6760:	sub	w0, w0, w1
    6764:	mov	w2, #0x0                   	// #0
    6768:	mov	w1, w0
    676c:	ldr	x0, [sp, #56]
    6770:	bl	6c4 <tdb_unlock>
    6774:	ldr	w0, [sp, #100]
    6778:	ldp	x29, x30, [sp], #112
    677c:	ret

0000000000006780 <tdb_exists_hash>:
    6780:	stp	x29, x30, [sp, #-80]!
    6784:	mov	x29, sp
    6788:	str	x0, [sp, #40]
    678c:	stp	x1, x2, [sp, #24]
    6790:	str	w3, [sp, #20]
    6794:	add	x0, sp, #0x38
    6798:	mov	x5, x0
    679c:	mov	w4, #0x0                   	// #0
    67a0:	ldr	w3, [sp, #20]
    67a4:	ldp	x1, x2, [sp, #24]
    67a8:	ldr	x0, [sp, #40]
    67ac:	bl	6438 <tdb_find_lock_hash>
    67b0:	cmp	w0, #0x0
    67b4:	b.ne	67c0 <tdb_exists_hash+0x40>  // b.any
    67b8:	mov	w0, #0x0                   	// #0
    67bc:	b	67ec <tdb_exists_hash+0x6c>
    67c0:	ldr	w0, [sp, #72]
    67c4:	ldr	x1, [sp, #40]
    67c8:	ldr	w1, [x1, #96]
    67cc:	udiv	w2, w0, w1
    67d0:	mul	w1, w2, w1
    67d4:	sub	w0, w0, w1
    67d8:	mov	w2, #0x0                   	// #0
    67dc:	mov	w1, w0
    67e0:	ldr	x0, [sp, #40]
    67e4:	bl	6c4 <tdb_unlock>
    67e8:	mov	w0, #0x1                   	// #1
    67ec:	ldp	x29, x30, [sp], #80
    67f0:	ret

00000000000067f4 <ext2fs_tdb_exists>:
    67f4:	stp	x29, x30, [sp, #-64]!
    67f8:	mov	x29, sp
    67fc:	str	x0, [sp, #40]
    6800:	stp	x1, x2, [sp, #24]
    6804:	ldr	x0, [sp, #40]
    6808:	ldr	x1, [x0, #296]
    680c:	add	x0, sp, #0x18
    6810:	blr	x1
    6814:	str	w0, [sp, #60]
    6818:	ldr	w3, [sp, #60]
    681c:	ldp	x1, x2, [sp, #24]
    6820:	ldr	x0, [sp, #40]
    6824:	bl	6780 <tdb_exists_hash>
    6828:	ldp	x29, x30, [sp], #64
    682c:	ret

0000000000006830 <tdb_do_delete>:
    6830:	stp	x29, x30, [sp, #-80]!
    6834:	mov	x29, sp
    6838:	str	x0, [sp, #40]
    683c:	str	w1, [sp, #36]
    6840:	str	x2, [sp, #24]
    6844:	ldr	x0, [sp, #40]
    6848:	ldr	w0, [x0, #24]
    684c:	cmp	w0, #0x0
    6850:	b.ne	6864 <tdb_do_delete+0x34>  // b.any
    6854:	ldr	x0, [sp, #40]
    6858:	ldr	w0, [x0, #28]
    685c:	cmp	w0, #0x0
    6860:	b.eq	686c <tdb_do_delete+0x3c>  // b.none
    6864:	mov	w0, #0xffffffff            	// #-1
    6868:	b	69d4 <tdb_do_delete+0x1a4>
    686c:	ldr	w1, [sp, #36]
    6870:	ldr	x0, [sp, #40]
    6874:	bl	11ac <tdb_write_lock_record>
    6878:	cmn	w0, #0x1
    687c:	b.ne	68a4 <tdb_do_delete+0x74>  // b.any
    6880:	ldr	x0, [sp, #24]
    6884:	mov	w1, #0xdead                	// #57005
    6888:	movk	w1, #0xfee1, lsl #16
    688c:	str	w1, [x0, #20]
    6890:	ldr	x2, [sp, #24]
    6894:	ldr	w1, [sp, #36]
    6898:	ldr	x0, [sp, #40]
    689c:	bl	22cc <tdb_rec_write>
    68a0:	b	69d4 <tdb_do_delete+0x1a4>
    68a4:	ldr	w1, [sp, #36]
    68a8:	ldr	x0, [sp, #40]
    68ac:	bl	1230 <tdb_write_unlock_record>
    68b0:	cmp	w0, #0x0
    68b4:	b.eq	68c0 <tdb_do_delete+0x90>  // b.none
    68b8:	mov	w0, #0xffffffff            	// #-1
    68bc:	b	69d4 <tdb_do_delete+0x1a4>
    68c0:	ldr	x0, [sp, #24]
    68c4:	ldr	w0, [x0, #16]
    68c8:	ldr	x1, [sp, #40]
    68cc:	ldr	w1, [x1, #96]
    68d0:	udiv	w2, w0, w1
    68d4:	mul	w1, w2, w1
    68d8:	sub	w0, w0, w1
    68dc:	add	w0, w0, #0x2b
    68e0:	lsl	w0, w0, #2
    68e4:	add	x1, sp, #0x48
    68e8:	mov	x2, x1
    68ec:	mov	w1, w0
    68f0:	ldr	x0, [sp, #40]
    68f4:	bl	1f18 <tdb_ofs_read>
    68f8:	cmn	w0, #0x1
    68fc:	b.ne	6908 <tdb_do_delete+0xd8>  // b.any
    6900:	mov	w0, #0xffffffff            	// #-1
    6904:	b	69d4 <tdb_do_delete+0x1a4>
    6908:	str	wzr, [sp, #76]
    690c:	b	6948 <tdb_do_delete+0x118>
    6910:	ldr	w0, [sp, #72]
    6914:	add	x1, sp, #0x30
    6918:	mov	x2, x1
    691c:	mov	w1, w0
    6920:	ldr	x0, [sp, #40]
    6924:	bl	21cc <tdb_rec_read>
    6928:	cmn	w0, #0x1
    692c:	b.ne	6938 <tdb_do_delete+0x108>  // b.any
    6930:	mov	w0, #0xffffffff            	// #-1
    6934:	b	69d4 <tdb_do_delete+0x1a4>
    6938:	ldr	w0, [sp, #72]
    693c:	str	w0, [sp, #76]
    6940:	ldr	w0, [sp, #48]
    6944:	str	w0, [sp, #72]
    6948:	ldr	w0, [sp, #72]
    694c:	ldr	w1, [sp, #36]
    6950:	cmp	w1, w0
    6954:	b.ne	6910 <tdb_do_delete+0xe0>  // b.any
    6958:	ldr	w0, [sp, #76]
    695c:	cmp	w0, #0x0
    6960:	b.ne	698c <tdb_do_delete+0x15c>  // b.any
    6964:	ldr	x0, [sp, #24]
    6968:	ldr	w0, [x0, #16]
    696c:	ldr	x1, [sp, #40]
    6970:	ldr	w1, [x1, #96]
    6974:	udiv	w2, w0, w1
    6978:	mul	w1, w2, w1
    697c:	sub	w0, w0, w1
    6980:	add	w0, w0, #0x2b
    6984:	lsl	w0, w0, #2
    6988:	str	w0, [sp, #76]
    698c:	ldr	x0, [sp, #24]
    6990:	mov	x2, x0
    6994:	ldr	w1, [sp, #76]
    6998:	ldr	x0, [sp, #40]
    699c:	bl	1f64 <tdb_ofs_write>
    69a0:	cmn	w0, #0x1
    69a4:	b.ne	69b0 <tdb_do_delete+0x180>  // b.any
    69a8:	mov	w0, #0xffffffff            	// #-1
    69ac:	b	69d4 <tdb_do_delete+0x1a4>
    69b0:	ldr	x2, [sp, #24]
    69b4:	ldr	w1, [sp, #36]
    69b8:	ldr	x0, [sp, #40]
    69bc:	bl	4900 <tdb_free>
    69c0:	cmn	w0, #0x1
    69c4:	b.ne	69d0 <tdb_do_delete+0x1a0>  // b.any
    69c8:	mov	w0, #0xffffffff            	// #-1
    69cc:	b	69d4 <tdb_do_delete+0x1a4>
    69d0:	mov	w0, #0x0                   	// #0
    69d4:	ldp	x29, x30, [sp], #80
    69d8:	ret

00000000000069dc <tdb_count_dead>:
    69dc:	stp	x29, x30, [sp, #-64]!
    69e0:	mov	x29, sp
    69e4:	str	x0, [sp, #24]
    69e8:	str	w1, [sp, #20]
    69ec:	str	wzr, [sp, #60]
    69f0:	ldr	x0, [sp, #24]
    69f4:	ldr	w1, [x0, #96]
    69f8:	ldr	w0, [sp, #20]
    69fc:	udiv	w2, w0, w1
    6a00:	mul	w1, w2, w1
    6a04:	sub	w0, w0, w1
    6a08:	add	w0, w0, #0x2b
    6a0c:	lsl	w0, w0, #2
    6a10:	add	x1, sp, #0x38
    6a14:	mov	x2, x1
    6a18:	mov	w1, w0
    6a1c:	ldr	x0, [sp, #24]
    6a20:	bl	1f18 <tdb_ofs_read>
    6a24:	cmn	w0, #0x1
    6a28:	b.ne	6a84 <tdb_count_dead+0xa8>  // b.any
    6a2c:	mov	w0, #0x0                   	// #0
    6a30:	b	6a94 <tdb_count_dead+0xb8>
    6a34:	ldr	w0, [sp, #56]
    6a38:	add	x1, sp, #0x20
    6a3c:	mov	x2, x1
    6a40:	mov	w1, w0
    6a44:	ldr	x0, [sp, #24]
    6a48:	bl	21cc <tdb_rec_read>
    6a4c:	cmn	w0, #0x1
    6a50:	b.ne	6a5c <tdb_count_dead+0x80>  // b.any
    6a54:	mov	w0, #0x0                   	// #0
    6a58:	b	6a94 <tdb_count_dead+0xb8>
    6a5c:	ldr	w1, [sp, #52]
    6a60:	mov	w0, #0xdead                	// #57005
    6a64:	movk	w0, #0xfee1, lsl #16
    6a68:	cmp	w1, w0
    6a6c:	b.ne	6a7c <tdb_count_dead+0xa0>  // b.any
    6a70:	ldr	w0, [sp, #60]
    6a74:	add	w0, w0, #0x1
    6a78:	str	w0, [sp, #60]
    6a7c:	ldr	w0, [sp, #32]
    6a80:	str	w0, [sp, #56]
    6a84:	ldr	w0, [sp, #56]
    6a88:	cmp	w0, #0x0
    6a8c:	b.ne	6a34 <tdb_count_dead+0x58>  // b.any
    6a90:	ldr	w0, [sp, #60]
    6a94:	ldp	x29, x30, [sp], #64
    6a98:	ret

0000000000006a9c <tdb_purge_dead>:
    6a9c:	stp	x29, x30, [sp, #-80]!
    6aa0:	mov	x29, sp
    6aa4:	str	x0, [sp, #24]
    6aa8:	str	w1, [sp, #20]
    6aac:	mov	w0, #0xffffffff            	// #-1
    6ab0:	str	w0, [sp, #76]
    6ab4:	mov	w2, #0x1                   	// #1
    6ab8:	mov	w1, #0xffffffff            	// #-1
    6abc:	ldr	x0, [sp, #24]
    6ac0:	bl	614 <tdb_lock>
    6ac4:	cmn	w0, #0x1
    6ac8:	b.ne	6ad4 <tdb_purge_dead+0x38>  // b.any
    6acc:	mov	w0, #0xffffffff            	// #-1
    6ad0:	b	6bb4 <tdb_purge_dead+0x118>
    6ad4:	ldr	x0, [sp, #24]
    6ad8:	ldr	w1, [x0, #96]
    6adc:	ldr	w0, [sp, #20]
    6ae0:	udiv	w2, w0, w1
    6ae4:	mul	w1, w2, w1
    6ae8:	sub	w0, w0, w1
    6aec:	add	w0, w0, #0x2b
    6af0:	lsl	w0, w0, #2
    6af4:	add	x1, sp, #0x2c
    6af8:	mov	x2, x1
    6afc:	mov	w1, w0
    6b00:	ldr	x0, [sp, #24]
    6b04:	bl	1f18 <tdb_ofs_read>
    6b08:	cmn	w0, #0x1
    6b0c:	b.eq	6b8c <tdb_purge_dead+0xf0>  // b.none
    6b10:	b	6b78 <tdb_purge_dead+0xdc>
    6b14:	ldr	w0, [sp, #44]
    6b18:	add	x1, sp, #0x30
    6b1c:	mov	x2, x1
    6b20:	mov	w1, w0
    6b24:	ldr	x0, [sp, #24]
    6b28:	bl	21cc <tdb_rec_read>
    6b2c:	cmn	w0, #0x1
    6b30:	b.eq	6b94 <tdb_purge_dead+0xf8>  // b.none
    6b34:	ldr	w0, [sp, #48]
    6b38:	str	w0, [sp, #72]
    6b3c:	ldr	w1, [sp, #68]
    6b40:	mov	w0, #0xdead                	// #57005
    6b44:	movk	w0, #0xfee1, lsl #16
    6b48:	cmp	w1, w0
    6b4c:	b.ne	6b70 <tdb_purge_dead+0xd4>  // b.any
    6b50:	ldr	w0, [sp, #44]
    6b54:	add	x1, sp, #0x30
    6b58:	mov	x2, x1
    6b5c:	mov	w1, w0
    6b60:	ldr	x0, [sp, #24]
    6b64:	bl	6830 <tdb_do_delete>
    6b68:	cmn	w0, #0x1
    6b6c:	b.eq	6b9c <tdb_purge_dead+0x100>  // b.none
    6b70:	ldr	w0, [sp, #72]
    6b74:	str	w0, [sp, #44]
    6b78:	ldr	w0, [sp, #44]
    6b7c:	cmp	w0, #0x0
    6b80:	b.ne	6b14 <tdb_purge_dead+0x78>  // b.any
    6b84:	str	wzr, [sp, #76]
    6b88:	b	6ba0 <tdb_purge_dead+0x104>
    6b8c:	nop
    6b90:	b	6ba0 <tdb_purge_dead+0x104>
    6b94:	nop
    6b98:	b	6ba0 <tdb_purge_dead+0x104>
    6b9c:	nop
    6ba0:	mov	w2, #0x1                   	// #1
    6ba4:	mov	w1, #0xffffffff            	// #-1
    6ba8:	ldr	x0, [sp, #24]
    6bac:	bl	6c4 <tdb_unlock>
    6bb0:	ldr	w0, [sp, #76]
    6bb4:	ldp	x29, x30, [sp], #80
    6bb8:	ret

0000000000006bbc <tdb_delete_hash>:
    6bbc:	stp	x29, x30, [sp, #-80]!
    6bc0:	mov	x29, sp
    6bc4:	str	x0, [sp, #40]
    6bc8:	stp	x1, x2, [sp, #24]
    6bcc:	str	w3, [sp, #20]
    6bd0:	ldr	x0, [sp, #40]
    6bd4:	ldr	w0, [x0, #332]
    6bd8:	cmp	w0, #0x0
    6bdc:	b.eq	6cc4 <tdb_delete_hash+0x108>  // b.none
    6be0:	ldr	x0, [sp, #40]
    6be4:	ldr	w1, [x0, #96]
    6be8:	ldr	w0, [sp, #20]
    6bec:	udiv	w2, w0, w1
    6bf0:	mul	w1, w2, w1
    6bf4:	sub	w0, w0, w1
    6bf8:	mov	w2, #0x1                   	// #1
    6bfc:	mov	w1, w0
    6c00:	ldr	x0, [sp, #40]
    6c04:	bl	614 <tdb_lock>
    6c08:	cmn	w0, #0x1
    6c0c:	b.ne	6c18 <tdb_delete_hash+0x5c>  // b.any
    6c10:	mov	w0, #0xffffffff            	// #-1
    6c14:	b	6d74 <tdb_delete_hash+0x1b8>
    6c18:	ldr	w1, [sp, #20]
    6c1c:	ldr	x0, [sp, #40]
    6c20:	bl	69dc <tdb_count_dead>
    6c24:	mov	w1, w0
    6c28:	ldr	x0, [sp, #40]
    6c2c:	ldr	w0, [x0, #332]
    6c30:	cmp	w1, w0
    6c34:	b.lt	6c44 <tdb_delete_hash+0x88>  // b.tstop
    6c38:	ldr	w1, [sp, #20]
    6c3c:	ldr	x0, [sp, #40]
    6c40:	bl	6a9c <tdb_purge_dead>
    6c44:	add	x0, sp, #0x30
    6c48:	mov	x4, x0
    6c4c:	ldr	w3, [sp, #20]
    6c50:	ldp	x1, x2, [sp, #24]
    6c54:	ldr	x0, [sp, #40]
    6c58:	bl	6304 <tdb_find>
    6c5c:	str	w0, [sp, #72]
    6c60:	ldr	w0, [sp, #72]
    6c64:	cmp	w0, #0x0
    6c68:	b.ne	6c9c <tdb_delete_hash+0xe0>  // b.any
    6c6c:	ldr	x0, [sp, #40]
    6c70:	ldr	w1, [x0, #96]
    6c74:	ldr	w0, [sp, #20]
    6c78:	udiv	w2, w0, w1
    6c7c:	mul	w1, w2, w1
    6c80:	sub	w0, w0, w1
    6c84:	mov	w2, #0x1                   	// #1
    6c88:	mov	w1, w0
    6c8c:	ldr	x0, [sp, #40]
    6c90:	bl	6c4 <tdb_unlock>
    6c94:	mov	w0, #0xffffffff            	// #-1
    6c98:	b	6d74 <tdb_delete_hash+0x1b8>
    6c9c:	mov	w0, #0xdead                	// #57005
    6ca0:	movk	w0, #0xfee1, lsl #16
    6ca4:	str	w0, [sp, #68]
    6ca8:	add	x0, sp, #0x30
    6cac:	mov	x2, x0
    6cb0:	ldr	w1, [sp, #72]
    6cb4:	ldr	x0, [sp, #40]
    6cb8:	bl	22cc <tdb_rec_write>
    6cbc:	str	w0, [sp, #76]
    6cc0:	b	6d10 <tdb_delete_hash+0x154>
    6cc4:	add	x0, sp, #0x30
    6cc8:	mov	x5, x0
    6ccc:	mov	w4, #0x1                   	// #1
    6cd0:	ldr	w3, [sp, #20]
    6cd4:	ldp	x1, x2, [sp, #24]
    6cd8:	ldr	x0, [sp, #40]
    6cdc:	bl	6438 <tdb_find_lock_hash>
    6ce0:	str	w0, [sp, #72]
    6ce4:	ldr	w0, [sp, #72]
    6ce8:	cmp	w0, #0x0
    6cec:	b.ne	6cf8 <tdb_delete_hash+0x13c>  // b.any
    6cf0:	mov	w0, #0xffffffff            	// #-1
    6cf4:	b	6d74 <tdb_delete_hash+0x1b8>
    6cf8:	add	x0, sp, #0x30
    6cfc:	mov	x2, x0
    6d00:	ldr	w1, [sp, #72]
    6d04:	ldr	x0, [sp, #40]
    6d08:	bl	6830 <tdb_do_delete>
    6d0c:	str	w0, [sp, #76]
    6d10:	ldr	w0, [sp, #76]
    6d14:	cmp	w0, #0x0
    6d18:	b.ne	6d24 <tdb_delete_hash+0x168>  // b.any
    6d1c:	ldr	x0, [sp, #40]
    6d20:	bl	6258 <tdb_increment_seqnum>
    6d24:	ldr	w0, [sp, #64]
    6d28:	ldr	x1, [sp, #40]
    6d2c:	ldr	w1, [x1, #96]
    6d30:	udiv	w2, w0, w1
    6d34:	mul	w1, w2, w1
    6d38:	sub	w0, w0, w1
    6d3c:	mov	w2, #0x1                   	// #1
    6d40:	mov	w1, w0
    6d44:	ldr	x0, [sp, #40]
    6d48:	bl	6c4 <tdb_unlock>
    6d4c:	cmp	w0, #0x0
    6d50:	b.eq	6d70 <tdb_delete_hash+0x1b4>  // b.none
    6d54:	ldr	x0, [sp, #40]
    6d58:	ldr	x3, [x0, #280]
    6d5c:	adrp	x0, 0 <ext2fs_tdb_error>
    6d60:	add	x2, x0, #0x0
    6d64:	mov	w1, #0x2                   	// #2
    6d68:	ldr	x0, [sp, #40]
    6d6c:	blr	x3
    6d70:	ldr	w0, [sp, #76]
    6d74:	ldp	x29, x30, [sp], #80
    6d78:	ret

0000000000006d7c <ext2fs_tdb_delete>:
    6d7c:	stp	x29, x30, [sp, #-64]!
    6d80:	mov	x29, sp
    6d84:	str	x0, [sp, #40]
    6d88:	stp	x1, x2, [sp, #24]
    6d8c:	ldr	x0, [sp, #40]
    6d90:	ldr	x1, [x0, #296]
    6d94:	add	x0, sp, #0x18
    6d98:	blr	x1
    6d9c:	str	w0, [sp, #60]
    6da0:	ldr	w3, [sp, #60]
    6da4:	ldp	x1, x2, [sp, #24]
    6da8:	ldr	x0, [sp, #40]
    6dac:	bl	6bbc <tdb_delete_hash>
    6db0:	ldp	x29, x30, [sp], #64
    6db4:	ret

0000000000006db8 <tdb_find_dead>:
    6db8:	stp	x29, x30, [sp, #-64]!
    6dbc:	mov	x29, sp
    6dc0:	str	x0, [sp, #40]
    6dc4:	str	w1, [sp, #36]
    6dc8:	str	x2, [sp, #24]
    6dcc:	str	w3, [sp, #32]
    6dd0:	ldr	x0, [sp, #40]
    6dd4:	ldr	w1, [x0, #96]
    6dd8:	ldr	w0, [sp, #36]
    6ddc:	udiv	w2, w0, w1
    6de0:	mul	w1, w2, w1
    6de4:	sub	w0, w0, w1
    6de8:	add	w0, w0, #0x2b
    6dec:	lsl	w0, w0, #2
    6df0:	add	x1, sp, #0x3c
    6df4:	mov	x2, x1
    6df8:	mov	w1, w0
    6dfc:	ldr	x0, [sp, #40]
    6e00:	bl	1f18 <tdb_ofs_read>
    6e04:	cmn	w0, #0x1
    6e08:	b.ne	6e78 <tdb_find_dead+0xc0>  // b.any
    6e0c:	mov	w0, #0x0                   	// #0
    6e10:	b	6e88 <tdb_find_dead+0xd0>
    6e14:	ldr	w0, [sp, #60]
    6e18:	ldr	x2, [sp, #24]
    6e1c:	mov	w1, w0
    6e20:	ldr	x0, [sp, #40]
    6e24:	bl	21cc <tdb_rec_read>
    6e28:	cmn	w0, #0x1
    6e2c:	b.ne	6e38 <tdb_find_dead+0x80>  // b.any
    6e30:	mov	w0, #0x0                   	// #0
    6e34:	b	6e88 <tdb_find_dead+0xd0>
    6e38:	ldr	x0, [sp, #24]
    6e3c:	ldr	w1, [x0, #20]
    6e40:	mov	w0, #0xdead                	// #57005
    6e44:	movk	w0, #0xfee1, lsl #16
    6e48:	cmp	w1, w0
    6e4c:	b.ne	6e6c <tdb_find_dead+0xb4>  // b.any
    6e50:	ldr	x0, [sp, #24]
    6e54:	ldr	w0, [x0, #4]
    6e58:	ldr	w1, [sp, #32]
    6e5c:	cmp	w1, w0
    6e60:	b.hi	6e6c <tdb_find_dead+0xb4>  // b.pmore
    6e64:	ldr	w0, [sp, #60]
    6e68:	b	6e88 <tdb_find_dead+0xd0>
    6e6c:	ldr	x0, [sp, #24]
    6e70:	ldr	w0, [x0]
    6e74:	str	w0, [sp, #60]
    6e78:	ldr	w0, [sp, #60]
    6e7c:	cmp	w0, #0x0
    6e80:	b.ne	6e14 <tdb_find_dead+0x5c>  // b.any
    6e84:	mov	w0, #0x0                   	// #0
    6e88:	ldp	x29, x30, [sp], #64
    6e8c:	ret

0000000000006e90 <ext2fs_tdb_store>:
    6e90:	stp	x29, x30, [sp, #-112]!
    6e94:	mov	x29, sp
    6e98:	str	x0, [sp, #56]
    6e9c:	stp	x1, x2, [sp, #40]
    6ea0:	stp	x3, x4, [sp, #24]
    6ea4:	str	w5, [sp, #20]
    6ea8:	str	xzr, [sp, #104]
    6eac:	mov	w0, #0xffffffff            	// #-1
    6eb0:	str	w0, [sp, #100]
    6eb4:	ldr	x0, [sp, #56]
    6eb8:	ldr	w0, [x0, #24]
    6ebc:	cmp	w0, #0x0
    6ec0:	b.ne	6ed4 <ext2fs_tdb_store+0x44>  // b.any
    6ec4:	ldr	x0, [sp, #56]
    6ec8:	ldr	w0, [x0, #28]
    6ecc:	cmp	w0, #0x0
    6ed0:	b.eq	6ee8 <ext2fs_tdb_store+0x58>  // b.none
    6ed4:	ldr	x0, [sp, #56]
    6ed8:	mov	w1, #0xa                   	// #10
    6edc:	str	w1, [x0, #56]
    6ee0:	mov	w0, #0xffffffff            	// #-1
    6ee4:	b	7330 <ext2fs_tdb_store+0x4a0>
    6ee8:	ldr	x0, [sp, #56]
    6eec:	ldr	x1, [x0, #296]
    6ef0:	add	x0, sp, #0x28
    6ef4:	blr	x1
    6ef8:	str	w0, [sp, #96]
    6efc:	ldr	x0, [sp, #56]
    6f00:	ldr	w1, [x0, #96]
    6f04:	ldr	w0, [sp, #96]
    6f08:	udiv	w2, w0, w1
    6f0c:	mul	w1, w2, w1
    6f10:	sub	w0, w0, w1
    6f14:	mov	w2, #0x1                   	// #1
    6f18:	mov	w1, w0
    6f1c:	ldr	x0, [sp, #56]
    6f20:	bl	614 <tdb_lock>
    6f24:	cmn	w0, #0x1
    6f28:	b.ne	6f34 <ext2fs_tdb_store+0xa4>  // b.any
    6f2c:	mov	w0, #0xffffffff            	// #-1
    6f30:	b	7330 <ext2fs_tdb_store+0x4a0>
    6f34:	ldr	w0, [sp, #20]
    6f38:	cmp	w0, #0x2
    6f3c:	b.ne	6f68 <ext2fs_tdb_store+0xd8>  // b.any
    6f40:	ldr	w3, [sp, #96]
    6f44:	ldp	x1, x2, [sp, #40]
    6f48:	ldr	x0, [sp, #56]
    6f4c:	bl	6780 <tdb_exists_hash>
    6f50:	cmp	w0, #0x0
    6f54:	b.eq	6fa0 <ext2fs_tdb_store+0x110>  // b.none
    6f58:	ldr	x0, [sp, #56]
    6f5c:	mov	w1, #0x5                   	// #5
    6f60:	str	w1, [x0, #56]
    6f64:	b	72d8 <ext2fs_tdb_store+0x448>
    6f68:	ldp	x4, x5, [sp, #24]
    6f6c:	ldr	w3, [sp, #96]
    6f70:	ldp	x1, x2, [sp, #40]
    6f74:	ldr	x0, [sp, #56]
    6f78:	bl	64e4 <tdb_update_hash>
    6f7c:	cmp	w0, #0x0
    6f80:	b.eq	7298 <ext2fs_tdb_store+0x408>  // b.none
    6f84:	ldr	x0, [sp, #56]
    6f88:	ldr	w0, [x0, #56]
    6f8c:	cmp	w0, #0x8
    6f90:	b.ne	6fa0 <ext2fs_tdb_store+0x110>  // b.any
    6f94:	ldr	w0, [sp, #20]
    6f98:	cmp	w0, #0x3
    6f9c:	b.eq	72ac <ext2fs_tdb_store+0x41c>  // b.none
    6fa0:	ldr	x0, [sp, #56]
    6fa4:	str	wzr, [x0, #56]
    6fa8:	ldr	w0, [sp, #20]
    6fac:	cmp	w0, #0x2
    6fb0:	b.eq	6fc4 <ext2fs_tdb_store+0x134>  // b.none
    6fb4:	ldr	w3, [sp, #96]
    6fb8:	ldp	x1, x2, [sp, #40]
    6fbc:	ldr	x0, [sp, #56]
    6fc0:	bl	6bbc <tdb_delete_hash>
    6fc4:	ldr	x1, [sp, #48]
    6fc8:	ldr	x0, [sp, #32]
    6fcc:	add	x0, x1, x0
    6fd0:	bl	0 <malloc>
    6fd4:	str	x0, [sp, #104]
    6fd8:	ldr	x0, [sp, #104]
    6fdc:	cmp	x0, #0x0
    6fe0:	b.ne	6ff4 <ext2fs_tdb_store+0x164>  // b.any
    6fe4:	ldr	x0, [sp, #56]
    6fe8:	mov	w1, #0x4                   	// #4
    6fec:	str	w1, [x0, #56]
    6ff0:	b	72d8 <ext2fs_tdb_store+0x448>
    6ff4:	ldr	x0, [sp, #40]
    6ff8:	ldr	x1, [sp, #48]
    6ffc:	mov	x2, x1
    7000:	mov	x1, x0
    7004:	ldr	x0, [sp, #104]
    7008:	bl	0 <memcpy>
    700c:	ldr	x0, [sp, #32]
    7010:	cmp	x0, #0x0
    7014:	b.eq	7030 <ext2fs_tdb_store+0x1a0>  // b.none
    7018:	ldr	x0, [sp, #48]
    701c:	ldr	x1, [sp, #104]
    7020:	add	x0, x1, x0
    7024:	ldr	x1, [sp, #24]
    7028:	ldr	x2, [sp, #32]
    702c:	bl	0 <memcpy>
    7030:	ldr	x0, [sp, #56]
    7034:	ldr	w0, [x0, #332]
    7038:	cmp	w0, #0x0
    703c:	b.eq	7104 <ext2fs_tdb_store+0x274>  // b.none
    7040:	ldr	x0, [sp, #48]
    7044:	mov	w1, w0
    7048:	ldr	x0, [sp, #32]
    704c:	add	w0, w1, w0
    7050:	add	w1, w0, #0x4
    7054:	add	x0, sp, #0x48
    7058:	mov	w3, w1
    705c:	mov	x2, x0
    7060:	ldr	w1, [sp, #96]
    7064:	ldr	x0, [sp, #56]
    7068:	bl	6db8 <tdb_find_dead>
    706c:	str	w0, [sp, #68]
    7070:	ldr	w0, [sp, #68]
    7074:	cmp	w0, #0x0
    7078:	b.eq	7104 <ext2fs_tdb_store+0x274>  // b.none
    707c:	ldr	x0, [sp, #48]
    7080:	str	w0, [sp, #80]
    7084:	ldr	x0, [sp, #32]
    7088:	str	w0, [sp, #84]
    708c:	ldr	w0, [sp, #96]
    7090:	str	w0, [sp, #88]
    7094:	mov	w0, #0x1999                	// #6553
    7098:	movk	w0, #0x2601, lsl #16
    709c:	str	w0, [sp, #92]
    70a0:	ldr	w0, [sp, #68]
    70a4:	add	x1, sp, #0x48
    70a8:	mov	x2, x1
    70ac:	mov	w1, w0
    70b0:	ldr	x0, [sp, #56]
    70b4:	bl	22cc <tdb_rec_write>
    70b8:	cmn	w0, #0x1
    70bc:	b.eq	72b4 <ext2fs_tdb_store+0x424>  // b.none
    70c0:	ldr	x0, [sp, #56]
    70c4:	ldr	x0, [x0, #312]
    70c8:	ldr	x4, [x0, #8]
    70cc:	ldr	w0, [sp, #68]
    70d0:	add	w0, w0, #0x18
    70d4:	ldr	x1, [sp, #48]
    70d8:	mov	w2, w1
    70dc:	ldr	x1, [sp, #32]
    70e0:	add	w1, w2, w1
    70e4:	mov	w3, w1
    70e8:	ldr	x2, [sp, #104]
    70ec:	mov	w1, w0
    70f0:	ldr	x0, [sp, #56]
    70f4:	blr	x4
    70f8:	cmn	w0, #0x1
    70fc:	b.ne	72a0 <ext2fs_tdb_store+0x410>  // b.any
    7100:	b	72b4 <ext2fs_tdb_store+0x424>
    7104:	mov	w2, #0x1                   	// #1
    7108:	mov	w1, #0xffffffff            	// #-1
    710c:	ldr	x0, [sp, #56]
    7110:	bl	614 <tdb_lock>
    7114:	cmn	w0, #0x1
    7118:	b.eq	72bc <ext2fs_tdb_store+0x42c>  // b.none
    711c:	ldr	x0, [sp, #56]
    7120:	ldr	w0, [x0, #332]
    7124:	cmp	w0, #0x0
    7128:	b.eq	7154 <ext2fs_tdb_store+0x2c4>  // b.none
    712c:	ldr	w1, [sp, #96]
    7130:	ldr	x0, [sp, #56]
    7134:	bl	6a9c <tdb_purge_dead>
    7138:	cmn	w0, #0x1
    713c:	b.ne	7154 <ext2fs_tdb_store+0x2c4>  // b.any
    7140:	mov	w2, #0x1                   	// #1
    7144:	mov	w1, #0xffffffff            	// #-1
    7148:	ldr	x0, [sp, #56]
    714c:	bl	6c4 <tdb_unlock>
    7150:	b	72d8 <ext2fs_tdb_store+0x448>
    7154:	ldr	x0, [sp, #48]
    7158:	mov	w1, w0
    715c:	ldr	x0, [sp, #32]
    7160:	add	w0, w1, w0
    7164:	add	x1, sp, #0x48
    7168:	mov	x2, x1
    716c:	mov	w1, w0
    7170:	ldr	x0, [sp, #56]
    7174:	bl	4e6c <tdb_allocate>
    7178:	str	w0, [sp, #68]
    717c:	mov	w2, #0x1                   	// #1
    7180:	mov	w1, #0xffffffff            	// #-1
    7184:	ldr	x0, [sp, #56]
    7188:	bl	6c4 <tdb_unlock>
    718c:	ldr	w0, [sp, #68]
    7190:	cmp	w0, #0x0
    7194:	b.eq	72c4 <ext2fs_tdb_store+0x434>  // b.none
    7198:	ldr	x0, [sp, #56]
    719c:	ldr	w1, [x0, #96]
    71a0:	ldr	w0, [sp, #96]
    71a4:	udiv	w2, w0, w1
    71a8:	mul	w1, w2, w1
    71ac:	sub	w0, w0, w1
    71b0:	add	w0, w0, #0x2b
    71b4:	lsl	w0, w0, #2
    71b8:	add	x1, sp, #0x48
    71bc:	mov	x2, x1
    71c0:	mov	w1, w0
    71c4:	ldr	x0, [sp, #56]
    71c8:	bl	1f18 <tdb_ofs_read>
    71cc:	cmn	w0, #0x1
    71d0:	b.eq	72cc <ext2fs_tdb_store+0x43c>  // b.none
    71d4:	ldr	x0, [sp, #48]
    71d8:	str	w0, [sp, #80]
    71dc:	ldr	x0, [sp, #32]
    71e0:	str	w0, [sp, #84]
    71e4:	ldr	w0, [sp, #96]
    71e8:	str	w0, [sp, #88]
    71ec:	mov	w0, #0x1999                	// #6553
    71f0:	movk	w0, #0x2601, lsl #16
    71f4:	str	w0, [sp, #92]
    71f8:	ldr	w0, [sp, #68]
    71fc:	add	x1, sp, #0x48
    7200:	mov	x2, x1
    7204:	mov	w1, w0
    7208:	ldr	x0, [sp, #56]
    720c:	bl	22cc <tdb_rec_write>
    7210:	cmn	w0, #0x1
    7214:	b.eq	72d4 <ext2fs_tdb_store+0x444>  // b.none
    7218:	ldr	x0, [sp, #56]
    721c:	ldr	x0, [x0, #312]
    7220:	ldr	x4, [x0, #8]
    7224:	ldr	w0, [sp, #68]
    7228:	add	w0, w0, #0x18
    722c:	ldr	x1, [sp, #48]
    7230:	mov	w2, w1
    7234:	ldr	x1, [sp, #32]
    7238:	add	w1, w2, w1
    723c:	mov	w3, w1
    7240:	ldr	x2, [sp, #104]
    7244:	mov	w1, w0
    7248:	ldr	x0, [sp, #56]
    724c:	blr	x4
    7250:	cmn	w0, #0x1
    7254:	b.eq	72d4 <ext2fs_tdb_store+0x444>  // b.none
    7258:	ldr	x0, [sp, #56]
    725c:	ldr	w1, [x0, #96]
    7260:	ldr	w0, [sp, #96]
    7264:	udiv	w2, w0, w1
    7268:	mul	w1, w2, w1
    726c:	sub	w0, w0, w1
    7270:	add	w0, w0, #0x2b
    7274:	lsl	w0, w0, #2
    7278:	add	x1, sp, #0x44
    727c:	mov	x2, x1
    7280:	mov	w1, w0
    7284:	ldr	x0, [sp, #56]
    7288:	bl	1f64 <tdb_ofs_write>
    728c:	cmn	w0, #0x1
    7290:	b.eq	72d4 <ext2fs_tdb_store+0x444>  // b.none
    7294:	b	72a4 <ext2fs_tdb_store+0x414>
    7298:	nop
    729c:	b	72a4 <ext2fs_tdb_store+0x414>
    72a0:	nop
    72a4:	str	wzr, [sp, #100]
    72a8:	b	72d8 <ext2fs_tdb_store+0x448>
    72ac:	nop
    72b0:	b	72d8 <ext2fs_tdb_store+0x448>
    72b4:	nop
    72b8:	b	72d8 <ext2fs_tdb_store+0x448>
    72bc:	nop
    72c0:	b	72d8 <ext2fs_tdb_store+0x448>
    72c4:	nop
    72c8:	b	72d8 <ext2fs_tdb_store+0x448>
    72cc:	nop
    72d0:	b	72d8 <ext2fs_tdb_store+0x448>
    72d4:	nop
    72d8:	ldr	w0, [sp, #100]
    72dc:	cmp	w0, #0x0
    72e0:	b.ne	72ec <ext2fs_tdb_store+0x45c>  // b.any
    72e4:	ldr	x0, [sp, #56]
    72e8:	bl	6258 <tdb_increment_seqnum>
    72ec:	ldr	x0, [sp, #104]
    72f0:	cmp	x0, #0x0
    72f4:	b.eq	7304 <ext2fs_tdb_store+0x474>  // b.none
    72f8:	ldr	x0, [sp, #104]
    72fc:	bl	0 <free>
    7300:	str	xzr, [sp, #104]
    7304:	ldr	x0, [sp, #56]
    7308:	ldr	w1, [x0, #96]
    730c:	ldr	w0, [sp, #96]
    7310:	udiv	w2, w0, w1
    7314:	mul	w1, w2, w1
    7318:	sub	w0, w0, w1
    731c:	mov	w2, #0x1                   	// #1
    7320:	mov	w1, w0
    7324:	ldr	x0, [sp, #56]
    7328:	bl	6c4 <tdb_unlock>
    732c:	ldr	w0, [sp, #100]
    7330:	ldp	x29, x30, [sp], #112
    7334:	ret

0000000000007338 <ext2fs_tdb_append>:
    7338:	stp	x29, x30, [sp, #-96]!
    733c:	mov	x29, sp
    7340:	str	x0, [sp, #56]
    7344:	stp	x1, x2, [sp, #40]
    7348:	stp	x3, x4, [sp, #24]
    734c:	mov	w0, #0xffffffff            	// #-1
    7350:	str	w0, [sp, #92]
    7354:	ldr	x0, [sp, #56]
    7358:	ldr	x1, [x0, #296]
    735c:	add	x0, sp, #0x28
    7360:	blr	x1
    7364:	str	w0, [sp, #88]
    7368:	ldr	x0, [sp, #56]
    736c:	ldr	w1, [x0, #96]
    7370:	ldr	w0, [sp, #88]
    7374:	udiv	w2, w0, w1
    7378:	mul	w1, w2, w1
    737c:	sub	w0, w0, w1
    7380:	mov	w2, #0x1                   	// #1
    7384:	mov	w1, w0
    7388:	ldr	x0, [sp, #56]
    738c:	bl	614 <tdb_lock>
    7390:	cmn	w0, #0x1
    7394:	b.ne	73a0 <ext2fs_tdb_append+0x68>  // b.any
    7398:	mov	w0, #0xffffffff            	// #-1
    739c:	b	74a8 <ext2fs_tdb_append+0x170>
    73a0:	ldp	x1, x2, [sp, #40]
    73a4:	ldr	x0, [sp, #56]
    73a8:	bl	65e4 <ext2fs_tdb_fetch>
    73ac:	stp	x0, x1, [sp, #64]
    73b0:	ldr	x0, [sp, #64]
    73b4:	cmp	x0, #0x0
    73b8:	b.ne	73cc <ext2fs_tdb_append+0x94>  // b.any
    73bc:	ldr	x0, [sp, #32]
    73c0:	bl	0 <malloc>
    73c4:	str	x0, [sp, #64]
    73c8:	b	7408 <ext2fs_tdb_append+0xd0>
    73cc:	ldr	x2, [sp, #64]
    73d0:	ldr	x1, [sp, #72]
    73d4:	ldr	x0, [sp, #32]
    73d8:	add	x0, x1, x0
    73dc:	mov	x1, x0
    73e0:	mov	x0, x2
    73e4:	bl	0 <realloc>
    73e8:	str	x0, [sp, #80]
    73ec:	ldr	x0, [sp, #80]
    73f0:	cmp	x0, #0x0
    73f4:	b.ne	7400 <ext2fs_tdb_append+0xc8>  // b.any
    73f8:	ldr	x0, [sp, #64]
    73fc:	bl	0 <free>
    7400:	ldr	x0, [sp, #80]
    7404:	str	x0, [sp, #64]
    7408:	ldr	x0, [sp, #64]
    740c:	cmp	x0, #0x0
    7410:	b.ne	7424 <ext2fs_tdb_append+0xec>  // b.any
    7414:	ldr	x0, [sp, #56]
    7418:	mov	w1, #0x4                   	// #4
    741c:	str	w1, [x0, #56]
    7420:	b	7464 <ext2fs_tdb_append+0x12c>
    7424:	ldr	x1, [sp, #64]
    7428:	ldr	x0, [sp, #72]
    742c:	add	x0, x1, x0
    7430:	ldr	x1, [sp, #24]
    7434:	ldr	x2, [sp, #32]
    7438:	bl	0 <memcpy>
    743c:	ldr	x1, [sp, #72]
    7440:	ldr	x0, [sp, #32]
    7444:	add	x0, x1, x0
    7448:	str	x0, [sp, #72]
    744c:	mov	w5, #0x0                   	// #0
    7450:	ldp	x3, x4, [sp, #64]
    7454:	ldp	x1, x2, [sp, #40]
    7458:	ldr	x0, [sp, #56]
    745c:	bl	6e90 <ext2fs_tdb_store>
    7460:	str	w0, [sp, #92]
    7464:	ldr	x0, [sp, #56]
    7468:	ldr	w1, [x0, #96]
    746c:	ldr	w0, [sp, #88]
    7470:	udiv	w2, w0, w1
    7474:	mul	w1, w2, w1
    7478:	sub	w0, w0, w1
    747c:	mov	w2, #0x1                   	// #1
    7480:	mov	w1, w0
    7484:	ldr	x0, [sp, #56]
    7488:	bl	6c4 <tdb_unlock>
    748c:	ldr	x0, [sp, #64]
    7490:	cmp	x0, #0x0
    7494:	b.eq	74a4 <ext2fs_tdb_append+0x16c>  // b.none
    7498:	ldr	x0, [sp, #64]
    749c:	bl	0 <free>
    74a0:	str	xzr, [sp, #64]
    74a4:	ldr	w0, [sp, #92]
    74a8:	ldp	x29, x30, [sp], #96
    74ac:	ret

00000000000074b0 <ext2fs_tdb_name>:
    74b0:	sub	sp, sp, #0x10
    74b4:	str	x0, [sp, #8]
    74b8:	ldr	x0, [sp, #8]
    74bc:	ldr	x0, [x0]
    74c0:	add	sp, sp, #0x10
    74c4:	ret

00000000000074c8 <ext2fs_tdb_fd>:
    74c8:	sub	sp, sp, #0x10
    74cc:	str	x0, [sp, #8]
    74d0:	ldr	x0, [sp, #8]
    74d4:	ldr	w0, [x0, #16]
    74d8:	add	sp, sp, #0x10
    74dc:	ret

00000000000074e0 <ext2fs_tdb_log_fn>:
    74e0:	sub	sp, sp, #0x10
    74e4:	str	x0, [sp, #8]
    74e8:	ldr	x0, [sp, #8]
    74ec:	ldr	x0, [x0, #280]
    74f0:	add	sp, sp, #0x10
    74f4:	ret

00000000000074f8 <ext2fs_tdb_get_seqnum>:
    74f8:	stp	x29, x30, [sp, #-48]!
    74fc:	mov	x29, sp
    7500:	str	x0, [sp, #24]
    7504:	str	wzr, [sp, #44]
    7508:	add	x0, sp, #0x2c
    750c:	mov	x2, x0
    7510:	mov	w1, #0x30                  	// #48
    7514:	ldr	x0, [sp, #24]
    7518:	bl	1f18 <tdb_ofs_read>
    751c:	ldr	w0, [sp, #44]
    7520:	ldp	x29, x30, [sp], #48
    7524:	ret

0000000000007528 <ext2fs_tdb_hash_size>:
    7528:	sub	sp, sp, #0x10
    752c:	str	x0, [sp, #8]
    7530:	ldr	x0, [sp, #8]
    7534:	ldr	w0, [x0, #96]
    7538:	add	sp, sp, #0x10
    753c:	ret

0000000000007540 <ext2fs_tdb_map_size>:
    7540:	sub	sp, sp, #0x10
    7544:	str	x0, [sp, #8]
    7548:	ldr	x0, [sp, #8]
    754c:	ldr	w0, [x0, #20]
    7550:	mov	w0, w0
    7554:	add	sp, sp, #0x10
    7558:	ret

000000000000755c <ext2fs_tdb_get_flags>:
    755c:	sub	sp, sp, #0x10
    7560:	str	x0, [sp, #8]
    7564:	ldr	x0, [sp, #8]
    7568:	ldr	w0, [x0, #228]
    756c:	add	sp, sp, #0x10
    7570:	ret

0000000000007574 <ext2fs_tdb_enable_seqnum>:
    7574:	sub	sp, sp, #0x10
    7578:	str	x0, [sp, #8]
    757c:	ldr	x0, [sp, #8]
    7580:	ldr	w0, [x0, #228]
    7584:	orr	w1, w0, #0x80
    7588:	ldr	x0, [sp, #8]
    758c:	str	w1, [x0, #228]
    7590:	nop
    7594:	add	sp, sp, #0x10
    7598:	ret

000000000000759c <default_tdb_hash>:
    759c:	sub	sp, sp, #0x20
    75a0:	str	x0, [sp, #8]
    75a4:	str	wzr, [sp, #28]
    75a8:	str	wzr, [sp, #24]
    75ac:	b	75f4 <default_tdb_hash+0x58>
    75b0:	ldr	w0, [sp, #28]
    75b4:	lsl	w1, w0, #8
    75b8:	ldr	w0, [sp, #28]
    75bc:	lsr	w2, w0, #24
    75c0:	mov	w0, #0xf1                  	// #241
    75c4:	mul	w0, w2, w0
    75c8:	add	w0, w1, w0
    75cc:	ldr	x1, [sp, #8]
    75d0:	ldr	x2, [x1]
    75d4:	ldr	w1, [sp, #24]
    75d8:	add	x1, x2, x1
    75dc:	ldrb	w1, [x1]
    75e0:	add	w0, w0, w1
    75e4:	str	w0, [sp, #28]
    75e8:	ldr	w0, [sp, #24]
    75ec:	add	w0, w0, #0x1
    75f0:	str	w0, [sp, #24]
    75f4:	ldr	w1, [sp, #24]
    75f8:	ldr	x0, [sp, #8]
    75fc:	ldr	x0, [x0, #8]
    7600:	cmp	x1, x0
    7604:	b.cc	75b0 <default_tdb_hash+0x14>  // b.lo, b.ul, b.last
    7608:	ldr	w0, [sp, #28]
    760c:	add	sp, sp, #0x20
    7610:	ret

0000000000007614 <tdb_new_database>:
    7614:	stp	x29, x30, [sp, #-48]!
    7618:	mov	x29, sp
    761c:	str	x0, [sp, #24]
    7620:	str	w1, [sp, #20]
    7624:	mov	w0, #0xffffffff            	// #-1
    7628:	str	w0, [sp, #44]
    762c:	ldr	w0, [sp, #20]
    7630:	add	w0, w0, #0x1
    7634:	sxtw	x0, w0
    7638:	add	x0, x0, #0x2a
    763c:	lsl	w0, w0, #2
    7640:	str	w0, [sp, #40]
    7644:	ldrsw	x0, [sp, #40]
    7648:	mov	x1, #0x1                   	// #1
    764c:	bl	0 <calloc>
    7650:	str	x0, [sp, #32]
    7654:	ldr	x0, [sp, #32]
    7658:	cmp	x0, #0x0
    765c:	b.ne	7674 <tdb_new_database+0x60>  // b.any
    7660:	ldr	x0, [sp, #24]
    7664:	mov	w1, #0x4                   	// #4
    7668:	str	w1, [x0, #56]
    766c:	mov	w0, #0xffffffff            	// #-1
    7670:	b	77dc <tdb_new_database+0x1c8>
    7674:	ldr	x0, [sp, #32]
    7678:	mov	w1, #0x196d                	// #6509
    767c:	movk	w1, #0x2601, lsl #16
    7680:	str	w1, [x0, #32]
    7684:	ldr	w1, [sp, #20]
    7688:	ldr	x0, [sp, #32]
    768c:	str	w1, [x0, #36]
    7690:	ldr	x0, [sp, #24]
    7694:	ldr	w0, [x0, #228]
    7698:	and	w0, w0, #0x2
    769c:	cmp	w0, #0x0
    76a0:	b.eq	76f8 <tdb_new_database+0xe4>  // b.none
    76a4:	ldr	w1, [sp, #40]
    76a8:	ldr	x0, [sp, #24]
    76ac:	str	w1, [x0, #20]
    76b0:	ldr	x0, [sp, #24]
    76b4:	ldr	x1, [sp, #32]
    76b8:	str	x1, [x0, #8]
    76bc:	ldr	x0, [sp, #24]
    76c0:	add	x0, x0, #0x3c
    76c4:	mov	x2, #0xa8                  	// #168
    76c8:	ldr	x1, [sp, #32]
    76cc:	bl	0 <memcpy>
    76d0:	ldr	x0, [sp, #24]
    76d4:	ldr	w0, [x0, #228]
    76d8:	and	w0, w0, #0x10
    76dc:	cmp	w0, #0x0
    76e0:	b.eq	76f0 <tdb_new_database+0xdc>  // b.none
    76e4:	mov	w1, #0xa8                  	// #168
    76e8:	ldr	x0, [sp, #32]
    76ec:	bl	1608 <tdb_convert>
    76f0:	mov	w0, #0x0                   	// #0
    76f4:	b	77dc <tdb_new_database+0x1c8>
    76f8:	ldr	x0, [sp, #24]
    76fc:	ldr	w0, [x0, #16]
    7700:	mov	w2, #0x0                   	// #0
    7704:	mov	x1, #0x0                   	// #0
    7708:	bl	0 <lseek>
    770c:	cmn	x0, #0x1
    7710:	b.eq	77b4 <tdb_new_database+0x1a0>  // b.none
    7714:	ldr	x0, [sp, #24]
    7718:	ldr	w0, [x0, #16]
    771c:	mov	x1, #0x0                   	// #0
    7720:	bl	0 <ftruncate>
    7724:	cmn	w0, #0x1
    7728:	b.eq	77bc <tdb_new_database+0x1a8>  // b.none
    772c:	ldr	x0, [sp, #24]
    7730:	ldr	w0, [x0, #228]
    7734:	and	w0, w0, #0x10
    7738:	cmp	w0, #0x0
    773c:	b.eq	774c <tdb_new_database+0x138>  // b.none
    7740:	mov	w1, #0xa8                  	// #168
    7744:	ldr	x0, [sp, #32]
    7748:	bl	1608 <tdb_convert>
    774c:	ldr	x0, [sp, #24]
    7750:	add	x0, x0, #0x3c
    7754:	mov	x2, #0xa8                  	// #168
    7758:	ldr	x1, [sp, #32]
    775c:	bl	0 <memcpy>
    7760:	ldr	x3, [sp, #32]
    7764:	mov	x2, #0xa                   	// #10
    7768:	adrp	x0, 0 <ext2fs_tdb_error>
    776c:	add	x1, x0, #0x0
    7770:	mov	x0, x3
    7774:	bl	0 <memcpy>
    7778:	ldr	x0, [sp, #24]
    777c:	ldr	w0, [x0, #16]
    7780:	ldrsw	x1, [sp, #40]
    7784:	mov	x2, x1
    7788:	ldr	x1, [sp, #32]
    778c:	bl	0 <write>
    7790:	mov	x1, x0
    7794:	ldrsw	x0, [sp, #40]
    7798:	cmp	x1, x0
    779c:	b.eq	77ac <tdb_new_database+0x198>  // b.none
    77a0:	mov	w0, #0xffffffff            	// #-1
    77a4:	str	w0, [sp, #44]
    77a8:	b	77c0 <tdb_new_database+0x1ac>
    77ac:	str	wzr, [sp, #44]
    77b0:	b	77c0 <tdb_new_database+0x1ac>
    77b4:	nop
    77b8:	b	77c0 <tdb_new_database+0x1ac>
    77bc:	nop
    77c0:	ldr	x0, [sp, #32]
    77c4:	cmp	x0, #0x0
    77c8:	b.eq	77d8 <tdb_new_database+0x1c4>  // b.none
    77cc:	ldr	x0, [sp, #32]
    77d0:	bl	0 <free>
    77d4:	str	xzr, [sp, #32]
    77d8:	ldr	w0, [sp, #44]
    77dc:	ldp	x29, x30, [sp], #48
    77e0:	ret

00000000000077e4 <tdb_already_open>:
    77e4:	sub	sp, sp, #0x20
    77e8:	str	x0, [sp, #8]
    77ec:	str	x1, [sp]
    77f0:	adrp	x0, 0 <ext2fs_tdb_error>
    77f4:	add	x0, x0, #0x0
    77f8:	ldr	x0, [x0]
    77fc:	str	x0, [sp, #24]
    7800:	b	7840 <tdb_already_open+0x5c>
    7804:	ldr	x0, [sp, #24]
    7808:	ldr	x0, [x0, #264]
    780c:	ldr	x1, [sp, #8]
    7810:	cmp	x1, x0
    7814:	b.ne	7834 <tdb_already_open+0x50>  // b.any
    7818:	ldr	x0, [sp, #24]
    781c:	ldr	x0, [x0, #272]
    7820:	ldr	x1, [sp]
    7824:	cmp	x1, x0
    7828:	b.ne	7834 <tdb_already_open+0x50>  // b.any
    782c:	mov	w0, #0x1                   	// #1
    7830:	b	7850 <tdb_already_open+0x6c>
    7834:	ldr	x0, [sp, #24]
    7838:	ldr	x0, [x0, #256]
    783c:	str	x0, [sp, #24]
    7840:	ldr	x0, [sp, #24]
    7844:	cmp	x0, #0x0
    7848:	b.ne	7804 <tdb_already_open+0x20>  // b.any
    784c:	mov	w0, #0x0                   	// #0
    7850:	add	sp, sp, #0x20
    7854:	ret

0000000000007858 <ext2fs_tdb_open>:
    7858:	stp	x29, x30, [sp, #-48]!
    785c:	mov	x29, sp
    7860:	str	x0, [sp, #40]
    7864:	str	w1, [sp, #36]
    7868:	str	w2, [sp, #32]
    786c:	str	w3, [sp, #28]
    7870:	str	w4, [sp, #24]
    7874:	mov	x6, #0x0                   	// #0
    7878:	mov	x5, #0x0                   	// #0
    787c:	ldr	w4, [sp, #24]
    7880:	ldr	w3, [sp, #28]
    7884:	ldr	w2, [sp, #32]
    7888:	ldr	w1, [sp, #36]
    788c:	ldr	x0, [sp, #40]
    7890:	bl	78ec <ext2fs_tdb_open_ex>
    7894:	ldp	x29, x30, [sp], #48
    7898:	ret

000000000000789c <null_log_fn>:
    789c:	sub	sp, sp, #0xd0
    78a0:	str	x0, [sp, #24]
    78a4:	str	w1, [sp, #20]
    78a8:	str	x2, [sp, #8]
    78ac:	str	x3, [sp, #168]
    78b0:	str	x4, [sp, #176]
    78b4:	str	x5, [sp, #184]
    78b8:	str	x6, [sp, #192]
    78bc:	str	x7, [sp, #200]
    78c0:	str	q0, [sp, #32]
    78c4:	str	q1, [sp, #48]
    78c8:	str	q2, [sp, #64]
    78cc:	str	q3, [sp, #80]
    78d0:	str	q4, [sp, #96]
    78d4:	str	q5, [sp, #112]
    78d8:	str	q6, [sp, #128]
    78dc:	str	q7, [sp, #144]
    78e0:	nop
    78e4:	add	sp, sp, #0xd0
    78e8:	ret

00000000000078ec <ext2fs_tdb_open_ex>:
    78ec:	stp	x29, x30, [sp, #-240]!
    78f0:	mov	x29, sp
    78f4:	str	x19, [sp, #16]
    78f8:	str	x0, [sp, #72]
    78fc:	str	w1, [sp, #68]
    7900:	str	w2, [sp, #64]
    7904:	str	w3, [sp, #60]
    7908:	str	w4, [sp, #56]
    790c:	str	x5, [sp, #48]
    7910:	str	x6, [sp, #40]
    7914:	str	wzr, [sp, #236]
    7918:	str	wzr, [sp, #232]
    791c:	mov	x1, #0x158                 	// #344
    7920:	mov	x0, #0x1                   	// #1
    7924:	bl	0 <calloc>
    7928:	str	x0, [sp, #224]
    792c:	ldr	x0, [sp, #224]
    7930:	cmp	x0, #0x0
    7934:	b.ne	794c <ext2fs_tdb_open_ex+0x60>  // b.any
    7938:	bl	0 <__errno_location>
    793c:	mov	x1, x0
    7940:	mov	w0, #0xc                   	// #12
    7944:	str	w0, [x1]
    7948:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    794c:	ldr	x0, [sp, #224]
    7950:	bl	2354 <tdb_io_init>
    7954:	ldr	x0, [sp, #224]
    7958:	mov	w1, #0xffffffff            	// #-1
    795c:	str	w1, [x0, #16]
    7960:	ldr	x0, [sp, #224]
    7964:	str	xzr, [x0]
    7968:	ldr	x0, [sp, #224]
    796c:	str	xzr, [x0, #8]
    7970:	ldr	w1, [sp, #64]
    7974:	ldr	x0, [sp, #224]
    7978:	str	w1, [x0, #228]
    797c:	ldr	x0, [sp, #224]
    7980:	ldr	w1, [sp, #60]
    7984:	str	w1, [x0, #304]
    7988:	ldr	x0, [sp, #48]
    798c:	cmp	x0, #0x0
    7990:	b.eq	79ac <ext2fs_tdb_open_ex+0xc0>  // b.none
    7994:	ldr	x0, [sp, #224]
    7998:	add	x2, x0, #0x200
    799c:	ldr	x0, [sp, #48]
    79a0:	ldp	x0, x1, [x0]
    79a4:	stp	x0, x1, [x2, #-232]
    79a8:	b	79c4 <ext2fs_tdb_open_ex+0xd8>
    79ac:	ldr	x0, [sp, #224]
    79b0:	adrp	x1, 0 <ext2fs_tdb_error>
    79b4:	add	x1, x1, #0x0
    79b8:	str	x1, [x0, #280]
    79bc:	ldr	x0, [sp, #224]
    79c0:	str	xzr, [x0, #288]
    79c4:	ldr	x0, [sp, #40]
    79c8:	cmp	x0, #0x0
    79cc:	b.eq	79d8 <ext2fs_tdb_open_ex+0xec>  // b.none
    79d0:	ldr	x0, [sp, #40]
    79d4:	b	79e0 <ext2fs_tdb_open_ex+0xf4>
    79d8:	adrp	x0, 0 <ext2fs_tdb_error>
    79dc:	add	x0, x0, #0x0
    79e0:	ldr	x1, [sp, #224]
    79e4:	str	x0, [x1, #296]
    79e8:	mov	w0, #0x1e                  	// #30
    79ec:	bl	0 <sysconf>
    79f0:	mov	w1, w0
    79f4:	ldr	x0, [sp, #224]
    79f8:	str	w1, [x0, #328]
    79fc:	ldr	x0, [sp, #224]
    7a00:	ldr	w0, [x0, #328]
    7a04:	cmp	w0, #0x0
    7a08:	b.gt	7a18 <ext2fs_tdb_open_ex+0x12c>
    7a0c:	ldr	x0, [sp, #224]
    7a10:	mov	w1, #0x2000                	// #8192
    7a14:	str	w1, [x0, #328]
    7a18:	ldr	w0, [sp, #60]
    7a1c:	and	w0, w0, #0x3
    7a20:	cmp	w0, #0x1
    7a24:	b.ne	7a5c <ext2fs_tdb_open_ex+0x170>  // b.any
    7a28:	ldr	x0, [sp, #224]
    7a2c:	ldr	x4, [x0, #280]
    7a30:	ldr	x3, [sp, #72]
    7a34:	adrp	x0, 0 <ext2fs_tdb_error>
    7a38:	add	x2, x0, #0x0
    7a3c:	mov	w1, #0x1                   	// #1
    7a40:	ldr	x0, [sp, #224]
    7a44:	blr	x4
    7a48:	bl	0 <__errno_location>
    7a4c:	mov	x1, x0
    7a50:	mov	w0, #0x16                  	// #22
    7a54:	str	w0, [x1]
    7a58:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7a5c:	ldr	w0, [sp, #68]
    7a60:	cmp	w0, #0x0
    7a64:	b.ne	7a70 <ext2fs_tdb_open_ex+0x184>  // b.any
    7a68:	mov	w0, #0x83                  	// #131
    7a6c:	str	w0, [sp, #68]
    7a70:	ldr	w0, [sp, #60]
    7a74:	and	w0, w0, #0x3
    7a78:	cmp	w0, #0x0
    7a7c:	b.ne	7ab4 <ext2fs_tdb_open_ex+0x1c8>  // b.any
    7a80:	ldr	x0, [sp, #224]
    7a84:	mov	w1, #0x1                   	// #1
    7a88:	str	w1, [x0, #24]
    7a8c:	ldr	x0, [sp, #224]
    7a90:	ldr	w0, [x0, #228]
    7a94:	orr	w1, w0, #0x4
    7a98:	ldr	x0, [sp, #224]
    7a9c:	str	w1, [x0, #228]
    7aa0:	ldr	x0, [sp, #224]
    7aa4:	ldr	w0, [x0, #228]
    7aa8:	and	w1, w0, #0xfffffffe
    7aac:	ldr	x0, [sp, #224]
    7ab0:	str	w1, [x0, #228]
    7ab4:	ldr	x0, [sp, #224]
    7ab8:	ldr	w0, [x0, #228]
    7abc:	and	w0, w0, #0x2
    7ac0:	cmp	w0, #0x0
    7ac4:	b.eq	7b24 <ext2fs_tdb_open_ex+0x238>  // b.none
    7ac8:	ldr	x0, [sp, #224]
    7acc:	ldr	w0, [x0, #228]
    7ad0:	orr	w1, w0, #0xc
    7ad4:	ldr	x0, [sp, #224]
    7ad8:	str	w1, [x0, #228]
    7adc:	ldr	x0, [sp, #224]
    7ae0:	ldr	w0, [x0, #228]
    7ae4:	and	w1, w0, #0xfffffffe
    7ae8:	ldr	x0, [sp, #224]
    7aec:	str	w1, [x0, #228]
    7af0:	ldr	w1, [sp, #68]
    7af4:	ldr	x0, [sp, #224]
    7af8:	bl	7614 <tdb_new_database>
    7afc:	cmp	w0, #0x0
    7b00:	b.eq	8010 <ext2fs_tdb_open_ex+0x724>  // b.none
    7b04:	ldr	x0, [sp, #224]
    7b08:	ldr	x3, [x0, #280]
    7b0c:	adrp	x0, 0 <ext2fs_tdb_error>
    7b10:	add	x2, x0, #0x0
    7b14:	mov	w1, #0x1                   	// #1
    7b18:	ldr	x0, [sp, #224]
    7b1c:	blr	x3
    7b20:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7b24:	ldr	w2, [sp, #56]
    7b28:	ldr	w1, [sp, #60]
    7b2c:	ldr	x0, [sp, #72]
    7b30:	bl	0 <open>
    7b34:	mov	w1, w0
    7b38:	ldr	x0, [sp, #224]
    7b3c:	str	w1, [x0, #16]
    7b40:	ldr	x0, [sp, #224]
    7b44:	ldr	w0, [x0, #16]
    7b48:	cmn	w0, #0x1
    7b4c:	b.ne	7b84 <ext2fs_tdb_open_ex+0x298>  // b.any
    7b50:	ldr	x0, [sp, #224]
    7b54:	ldr	x19, [x0, #280]
    7b58:	bl	0 <__errno_location>
    7b5c:	ldr	w0, [x0]
    7b60:	bl	0 <strerror>
    7b64:	mov	x4, x0
    7b68:	ldr	x3, [sp, #72]
    7b6c:	adrp	x0, 0 <ext2fs_tdb_error>
    7b70:	add	x2, x0, #0x0
    7b74:	mov	w1, #0x2                   	// #2
    7b78:	ldr	x0, [sp, #224]
    7b7c:	blr	x19
    7b80:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7b84:	ldr	x0, [sp, #224]
    7b88:	ldr	x0, [x0, #312]
    7b8c:	ldr	x6, [x0, #40]
    7b90:	mov	x5, #0x1                   	// #1
    7b94:	mov	w4, #0x0                   	// #0
    7b98:	mov	w3, #0x7                   	// #7
    7b9c:	mov	w2, #0x1                   	// #1
    7ba0:	mov	w1, #0x0                   	// #0
    7ba4:	ldr	x0, [sp, #224]
    7ba8:	blr	x6
    7bac:	cmn	w0, #0x1
    7bb0:	b.ne	7be8 <ext2fs_tdb_open_ex+0x2fc>  // b.any
    7bb4:	ldr	x0, [sp, #224]
    7bb8:	ldr	x19, [x0, #280]
    7bbc:	bl	0 <__errno_location>
    7bc0:	ldr	w0, [x0]
    7bc4:	bl	0 <strerror>
    7bc8:	mov	x4, x0
    7bcc:	ldr	x3, [sp, #72]
    7bd0:	adrp	x0, 0 <ext2fs_tdb_error>
    7bd4:	add	x2, x0, #0x0
    7bd8:	mov	w1, #0x1                   	// #1
    7bdc:	ldr	x0, [sp, #224]
    7be0:	blr	x19
    7be4:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7be8:	ldr	w0, [sp, #64]
    7bec:	and	w0, w0, #0x1
    7bf0:	cmp	w0, #0x0
    7bf4:	b.eq	7c94 <ext2fs_tdb_open_ex+0x3a8>  // b.none
    7bf8:	ldr	x0, [sp, #224]
    7bfc:	ldr	x0, [x0, #312]
    7c00:	ldr	x6, [x0, #40]
    7c04:	mov	x5, #0x1                   	// #1
    7c08:	mov	w4, #0x0                   	// #0
    7c0c:	mov	w3, #0x6                   	// #6
    7c10:	mov	w2, #0x1                   	// #1
    7c14:	mov	w1, #0x4                   	// #4
    7c18:	ldr	x0, [sp, #224]
    7c1c:	blr	x6
    7c20:	cmp	w0, #0x0
    7c24:	cset	w0, eq  // eq = none
    7c28:	and	w0, w0, #0xff
    7c2c:	str	w0, [sp, #232]
    7c30:	ldr	w0, [sp, #232]
    7c34:	cmp	w0, #0x0
    7c38:	b.eq	7c94 <ext2fs_tdb_open_ex+0x3a8>  // b.none
    7c3c:	ldr	w0, [sp, #60]
    7c40:	orr	w0, w0, #0x40
    7c44:	str	w0, [sp, #60]
    7c48:	ldr	x0, [sp, #224]
    7c4c:	ldr	w0, [x0, #16]
    7c50:	mov	x1, #0x0                   	// #0
    7c54:	bl	0 <ftruncate>
    7c58:	cmn	w0, #0x1
    7c5c:	b.ne	7c94 <ext2fs_tdb_open_ex+0x3a8>  // b.any
    7c60:	ldr	x0, [sp, #224]
    7c64:	ldr	x19, [x0, #280]
    7c68:	bl	0 <__errno_location>
    7c6c:	ldr	w0, [x0]
    7c70:	bl	0 <strerror>
    7c74:	mov	x4, x0
    7c78:	ldr	x3, [sp, #72]
    7c7c:	adrp	x0, 0 <ext2fs_tdb_error>
    7c80:	add	x2, x0, #0x0
    7c84:	mov	w1, #0x0                   	// #0
    7c88:	ldr	x0, [sp, #224]
    7c8c:	blr	x19
    7c90:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7c94:	ldr	x0, [sp, #224]
    7c98:	ldr	w3, [x0, #16]
    7c9c:	ldr	x0, [sp, #224]
    7ca0:	add	x0, x0, #0x3c
    7ca4:	mov	x2, #0xa8                  	// #168
    7ca8:	mov	x1, x0
    7cac:	mov	w0, w3
    7cb0:	bl	0 <read>
    7cb4:	cmp	x0, #0xa8
    7cb8:	b.ne	7d20 <ext2fs_tdb_open_ex+0x434>  // b.any
    7cbc:	ldr	x0, [sp, #224]
    7cc0:	add	x2, x0, #0x3c
    7cc4:	adrp	x0, 0 <ext2fs_tdb_error>
    7cc8:	add	x1, x0, #0x0
    7ccc:	mov	x0, x2
    7cd0:	bl	0 <strcmp>
    7cd4:	cmp	w0, #0x0
    7cd8:	b.ne	7d20 <ext2fs_tdb_open_ex+0x434>  // b.any
    7cdc:	ldr	x0, [sp, #224]
    7ce0:	ldr	w1, [x0, #92]
    7ce4:	mov	w0, #0x196d                	// #6509
    7ce8:	movk	w0, #0x2601, lsl #16
    7cec:	cmp	w1, w0
    7cf0:	b.eq	7d68 <ext2fs_tdb_open_ex+0x47c>  // b.none
    7cf4:	ldr	x0, [sp, #224]
    7cf8:	ldr	w1, [x0, #92]
    7cfc:	mov	w0, #0x126                 	// #294
    7d00:	movk	w0, #0x6d19, lsl #16
    7d04:	cmp	w1, w0
    7d08:	cset	w0, eq  // eq = none
    7d0c:	and	w0, w0, #0xff
    7d10:	str	w0, [sp, #236]
    7d14:	ldr	w0, [sp, #236]
    7d18:	cmp	w0, #0x0
    7d1c:	b.ne	7d68 <ext2fs_tdb_open_ex+0x47c>  // b.any
    7d20:	ldr	w0, [sp, #60]
    7d24:	and	w0, w0, #0x40
    7d28:	cmp	w0, #0x0
    7d2c:	b.eq	7d44 <ext2fs_tdb_open_ex+0x458>  // b.none
    7d30:	ldr	w1, [sp, #68]
    7d34:	ldr	x0, [sp, #224]
    7d38:	bl	7614 <tdb_new_database>
    7d3c:	cmn	w0, #0x1
    7d40:	b.ne	7d58 <ext2fs_tdb_open_ex+0x46c>  // b.any
    7d44:	bl	0 <__errno_location>
    7d48:	mov	x1, x0
    7d4c:	mov	w0, #0x5                   	// #5
    7d50:	str	w0, [x1]
    7d54:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7d58:	ldr	x0, [sp, #224]
    7d5c:	ldr	w0, [x0, #228]
    7d60:	and	w0, w0, #0x10
    7d64:	str	w0, [sp, #236]
    7d68:	ldr	x0, [sp, #224]
    7d6c:	add	x0, x0, #0x5c
    7d70:	str	x0, [sp, #216]
    7d74:	ldr	x0, [sp, #216]
    7d78:	ldrb	w0, [x0]
    7d7c:	lsl	w1, w0, #24
    7d80:	ldr	x0, [sp, #216]
    7d84:	add	x0, x0, #0x1
    7d88:	ldrb	w0, [x0]
    7d8c:	lsl	w0, w0, #16
    7d90:	orr	w1, w1, w0
    7d94:	ldr	x0, [sp, #216]
    7d98:	add	x0, x0, #0x2
    7d9c:	ldrb	w0, [x0]
    7da0:	lsl	w0, w0, #8
    7da4:	orr	w0, w1, w0
    7da8:	ldr	x1, [sp, #216]
    7dac:	add	x1, x1, #0x3
    7db0:	ldrb	w1, [x1]
    7db4:	orr	w0, w0, w1
    7db8:	str	w0, [sp, #212]
    7dbc:	ldr	x0, [sp, #224]
    7dc0:	ldr	w1, [x0, #228]
    7dc4:	ldr	w2, [sp, #212]
    7dc8:	mov	w0, #0x196d                	// #6509
    7dcc:	movk	w0, #0x2601, lsl #16
    7dd0:	cmp	w2, w0
    7dd4:	b.ne	7de0 <ext2fs_tdb_open_ex+0x4f4>  // b.any
    7dd8:	mov	w0, #0x20                  	// #32
    7ddc:	b	7de4 <ext2fs_tdb_open_ex+0x4f8>
    7de0:	mov	w0, #0x0                   	// #0
    7de4:	orr	w1, w0, w1
    7de8:	ldr	x0, [sp, #224]
    7dec:	str	w1, [x0, #228]
    7df0:	ldr	w0, [sp, #236]
    7df4:	cmp	w0, #0x0
    7df8:	b.ne	7e14 <ext2fs_tdb_open_ex+0x528>  // b.any
    7dfc:	ldr	x0, [sp, #224]
    7e00:	ldr	w0, [x0, #228]
    7e04:	and	w1, w0, #0xffffffef
    7e08:	ldr	x0, [sp, #224]
    7e0c:	str	w1, [x0, #228]
    7e10:	b	7e38 <ext2fs_tdb_open_ex+0x54c>
    7e14:	ldr	x0, [sp, #224]
    7e18:	ldr	w0, [x0, #228]
    7e1c:	orr	w1, w0, #0x10
    7e20:	ldr	x0, [sp, #224]
    7e24:	str	w1, [x0, #228]
    7e28:	ldr	x0, [sp, #224]
    7e2c:	add	x0, x0, #0x3c
    7e30:	mov	w1, #0xa8                  	// #168
    7e34:	bl	1608 <tdb_convert>
    7e38:	ldr	x0, [sp, #224]
    7e3c:	ldr	w0, [x0, #16]
    7e40:	add	x1, sp, #0x50
    7e44:	bl	0 <fstat>
    7e48:	cmn	w0, #0x1
    7e4c:	b.eq	8070 <ext2fs_tdb_open_ex+0x784>  // b.none
    7e50:	ldr	x0, [sp, #224]
    7e54:	ldr	w0, [x0, #100]
    7e58:	cmp	w0, #0x0
    7e5c:	b.eq	7e80 <ext2fs_tdb_open_ex+0x594>  // b.none
    7e60:	ldr	x0, [sp, #224]
    7e64:	ldr	x3, [x0, #280]
    7e68:	adrp	x0, 0 <ext2fs_tdb_error>
    7e6c:	add	x2, x0, #0x0
    7e70:	mov	w1, #0x1                   	// #1
    7e74:	ldr	x0, [sp, #224]
    7e78:	blr	x3
    7e7c:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7e80:	ldr	x0, [sp, #80]
    7e84:	ldr	x1, [sp, #88]
    7e88:	bl	77e4 <tdb_already_open>
    7e8c:	cmp	w0, #0x0
    7e90:	b.eq	7edc <ext2fs_tdb_open_ex+0x5f0>  // b.none
    7e94:	ldr	x0, [sp, #224]
    7e98:	ldr	x6, [x0, #280]
    7e9c:	ldr	x0, [sp, #80]
    7ea0:	mov	w1, w0
    7ea4:	ldr	x0, [sp, #88]
    7ea8:	mov	w5, w0
    7eac:	mov	w4, w1
    7eb0:	ldr	x3, [sp, #72]
    7eb4:	adrp	x0, 0 <ext2fs_tdb_error>
    7eb8:	add	x2, x0, #0x0
    7ebc:	mov	w1, #0x1                   	// #1
    7ec0:	ldr	x0, [sp, #224]
    7ec4:	blr	x6
    7ec8:	bl	0 <__errno_location>
    7ecc:	mov	x1, x0
    7ed0:	mov	w0, #0x10                  	// #16
    7ed4:	str	w0, [x1]
    7ed8:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7edc:	ldr	x0, [sp, #72]
    7ee0:	bl	0 <strdup>
    7ee4:	mov	x1, x0
    7ee8:	ldr	x0, [sp, #224]
    7eec:	str	x1, [x0]
    7ef0:	ldr	x0, [sp, #224]
    7ef4:	ldr	x0, [x0]
    7ef8:	cmp	x0, #0x0
    7efc:	b.ne	7f14 <ext2fs_tdb_open_ex+0x628>  // b.any
    7f00:	bl	0 <__errno_location>
    7f04:	mov	x1, x0
    7f08:	mov	w0, #0xc                   	// #12
    7f0c:	str	w0, [x1]
    7f10:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7f14:	ldr	x0, [sp, #128]
    7f18:	mov	w1, w0
    7f1c:	ldr	x0, [sp, #224]
    7f20:	str	w1, [x0, #20]
    7f24:	ldr	x1, [sp, #80]
    7f28:	ldr	x0, [sp, #224]
    7f2c:	str	x1, [x0, #264]
    7f30:	ldr	x1, [sp, #88]
    7f34:	ldr	x0, [sp, #224]
    7f38:	str	x1, [x0, #272]
    7f3c:	ldr	x0, [sp, #224]
    7f40:	str	wzr, [x0, #332]
    7f44:	ldr	x0, [sp, #224]
    7f48:	bl	19f4 <tdb_mmap>
    7f4c:	ldr	w0, [sp, #232]
    7f50:	cmp	w0, #0x0
    7f54:	b.eq	7fbc <ext2fs_tdb_open_ex+0x6d0>  // b.none
    7f58:	ldr	x0, [sp, #224]
    7f5c:	ldr	x0, [x0, #312]
    7f60:	ldr	x6, [x0, #40]
    7f64:	mov	x5, #0x1                   	// #1
    7f68:	mov	w4, #0x0                   	// #0
    7f6c:	mov	w3, #0x6                   	// #6
    7f70:	mov	w2, #0x2                   	// #2
    7f74:	mov	w1, #0x4                   	// #4
    7f78:	ldr	x0, [sp, #224]
    7f7c:	blr	x6
    7f80:	cmn	w0, #0x1
    7f84:	b.ne	7fbc <ext2fs_tdb_open_ex+0x6d0>  // b.any
    7f88:	ldr	x0, [sp, #224]
    7f8c:	ldr	x19, [x0, #280]
    7f90:	bl	0 <__errno_location>
    7f94:	ldr	w0, [x0]
    7f98:	bl	0 <strerror>
    7f9c:	mov	x4, x0
    7fa0:	ldr	x3, [sp, #72]
    7fa4:	adrp	x0, 0 <ext2fs_tdb_error>
    7fa8:	add	x2, x0, #0x0
    7fac:	mov	w1, #0x1                   	// #1
    7fb0:	ldr	x0, [sp, #224]
    7fb4:	blr	x19
    7fb8:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    7fbc:	ldr	w0, [sp, #64]
    7fc0:	and	w0, w0, #0x1
    7fc4:	cmp	w0, #0x0
    7fc8:	b.eq	7ffc <ext2fs_tdb_open_ex+0x710>  // b.none
    7fcc:	ldr	x0, [sp, #224]
    7fd0:	ldr	x0, [x0, #312]
    7fd4:	ldr	x6, [x0, #40]
    7fd8:	mov	x5, #0x1                   	// #1
    7fdc:	mov	w4, #0x0                   	// #0
    7fe0:	mov	w3, #0x7                   	// #7
    7fe4:	mov	w2, #0x0                   	// #0
    7fe8:	mov	w1, #0x4                   	// #4
    7fec:	ldr	x0, [sp, #224]
    7ff0:	blr	x6
    7ff4:	cmn	w0, #0x1
    7ff8:	b.eq	8078 <ext2fs_tdb_open_ex+0x78c>  // b.none
    7ffc:	ldr	x0, [sp, #224]
    8000:	bl	41b0 <ext2fs_tdb_transaction_recover>
    8004:	cmn	w0, #0x1
    8008:	b.eq	8080 <ext2fs_tdb_open_ex+0x794>  // b.none
    800c:	b	8014 <ext2fs_tdb_open_ex+0x728>
    8010:	nop
    8014:	ldr	x0, [sp, #224]
    8018:	ldr	x0, [x0, #312]
    801c:	ldr	x6, [x0, #40]
    8020:	mov	x5, #0x1                   	// #1
    8024:	mov	w4, #0x0                   	// #0
    8028:	mov	w3, #0x7                   	// #7
    802c:	mov	w2, #0x2                   	// #2
    8030:	mov	w1, #0x0                   	// #0
    8034:	ldr	x0, [sp, #224]
    8038:	blr	x6
    803c:	cmn	w0, #0x1
    8040:	b.eq	8088 <ext2fs_tdb_open_ex+0x79c>  // b.none
    8044:	adrp	x0, 0 <ext2fs_tdb_error>
    8048:	add	x0, x0, #0x0
    804c:	ldr	x1, [x0]
    8050:	ldr	x0, [sp, #224]
    8054:	str	x1, [x0, #256]
    8058:	adrp	x0, 0 <ext2fs_tdb_error>
    805c:	add	x0, x0, #0x0
    8060:	ldr	x1, [sp, #224]
    8064:	str	x1, [x0]
    8068:	ldr	x0, [sp, #224]
    806c:	b	8190 <ext2fs_tdb_open_ex+0x8a4>
    8070:	nop
    8074:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    8078:	nop
    807c:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    8080:	nop
    8084:	b	808c <ext2fs_tdb_open_ex+0x7a0>
    8088:	nop
    808c:	bl	0 <__errno_location>
    8090:	ldr	w0, [x0]
    8094:	str	w0, [sp, #208]
    8098:	ldr	x0, [sp, #224]
    809c:	cmp	x0, #0x0
    80a0:	b.ne	80ac <ext2fs_tdb_open_ex+0x7c0>  // b.any
    80a4:	mov	x0, #0x0                   	// #0
    80a8:	b	8190 <ext2fs_tdb_open_ex+0x8a4>
    80ac:	ldr	x0, [sp, #224]
    80b0:	ldr	x0, [x0, #8]
    80b4:	cmp	x0, #0x0
    80b8:	b.eq	8100 <ext2fs_tdb_open_ex+0x814>  // b.none
    80bc:	ldr	x0, [sp, #224]
    80c0:	ldr	w0, [x0, #228]
    80c4:	and	w0, w0, #0x2
    80c8:	cmp	w0, #0x0
    80cc:	b.eq	80f8 <ext2fs_tdb_open_ex+0x80c>  // b.none
    80d0:	ldr	x0, [sp, #224]
    80d4:	ldr	x0, [x0, #8]
    80d8:	cmp	x0, #0x0
    80dc:	b.eq	8100 <ext2fs_tdb_open_ex+0x814>  // b.none
    80e0:	ldr	x0, [sp, #224]
    80e4:	ldr	x0, [x0, #8]
    80e8:	bl	0 <free>
    80ec:	ldr	x0, [sp, #224]
    80f0:	str	xzr, [x0, #8]
    80f4:	b	8100 <ext2fs_tdb_open_ex+0x814>
    80f8:	ldr	x0, [sp, #224]
    80fc:	bl	1968 <tdb_munmap>
    8100:	ldr	x0, [sp, #224]
    8104:	ldr	x0, [x0]
    8108:	cmp	x0, #0x0
    810c:	b.eq	8124 <ext2fs_tdb_open_ex+0x838>  // b.none
    8110:	ldr	x0, [sp, #224]
    8114:	ldr	x0, [x0]
    8118:	bl	0 <free>
    811c:	ldr	x0, [sp, #224]
    8120:	str	xzr, [x0]
    8124:	ldr	x0, [sp, #224]
    8128:	ldr	w0, [x0, #16]
    812c:	cmn	w0, #0x1
    8130:	b.eq	8164 <ext2fs_tdb_open_ex+0x878>  // b.none
    8134:	ldr	x0, [sp, #224]
    8138:	ldr	w0, [x0, #16]
    813c:	bl	0 <close>
    8140:	cmp	w0, #0x0
    8144:	b.eq	8164 <ext2fs_tdb_open_ex+0x878>  // b.none
    8148:	ldr	x0, [sp, #224]
    814c:	ldr	x3, [x0, #280]
    8150:	adrp	x0, 0 <ext2fs_tdb_error>
    8154:	add	x2, x0, #0x0
    8158:	mov	w1, #0x1                   	// #1
    815c:	ldr	x0, [sp, #224]
    8160:	blr	x3
    8164:	ldr	x0, [sp, #224]
    8168:	cmp	x0, #0x0
    816c:	b.eq	817c <ext2fs_tdb_open_ex+0x890>  // b.none
    8170:	ldr	x0, [sp, #224]
    8174:	bl	0 <free>
    8178:	str	xzr, [sp, #224]
    817c:	bl	0 <__errno_location>
    8180:	mov	x1, x0
    8184:	ldr	w0, [sp, #208]
    8188:	str	w0, [x1]
    818c:	mov	x0, #0x0                   	// #0
    8190:	ldr	x19, [sp, #16]
    8194:	ldp	x29, x30, [sp], #240
    8198:	ret

000000000000819c <ext2fs_tdb_set_max_dead>:
    819c:	sub	sp, sp, #0x10
    81a0:	str	x0, [sp, #8]
    81a4:	str	w1, [sp, #4]
    81a8:	ldr	x0, [sp, #8]
    81ac:	ldr	w1, [sp, #4]
    81b0:	str	w1, [x0, #332]
    81b4:	nop
    81b8:	add	sp, sp, #0x10
    81bc:	ret

00000000000081c0 <ext2fs_tdb_close>:
    81c0:	stp	x29, x30, [sp, #-48]!
    81c4:	mov	x29, sp
    81c8:	str	x0, [sp, #24]
    81cc:	str	wzr, [sp, #36]
    81d0:	ldr	x0, [sp, #24]
    81d4:	ldr	x0, [x0, #320]
    81d8:	cmp	x0, #0x0
    81dc:	b.eq	81e8 <ext2fs_tdb_close+0x28>  // b.none
    81e0:	ldr	x0, [sp, #24]
    81e4:	bl	3144 <ext2fs_tdb_transaction_cancel>
    81e8:	ldr	x0, [sp, #24]
    81ec:	ldr	x0, [x0, #8]
    81f0:	cmp	x0, #0x0
    81f4:	b.eq	823c <ext2fs_tdb_close+0x7c>  // b.none
    81f8:	ldr	x0, [sp, #24]
    81fc:	ldr	w0, [x0, #228]
    8200:	and	w0, w0, #0x2
    8204:	cmp	w0, #0x0
    8208:	b.eq	8234 <ext2fs_tdb_close+0x74>  // b.none
    820c:	ldr	x0, [sp, #24]
    8210:	ldr	x0, [x0, #8]
    8214:	cmp	x0, #0x0
    8218:	b.eq	823c <ext2fs_tdb_close+0x7c>  // b.none
    821c:	ldr	x0, [sp, #24]
    8220:	ldr	x0, [x0, #8]
    8224:	bl	0 <free>
    8228:	ldr	x0, [sp, #24]
    822c:	str	xzr, [x0, #8]
    8230:	b	823c <ext2fs_tdb_close+0x7c>
    8234:	ldr	x0, [sp, #24]
    8238:	bl	1968 <tdb_munmap>
    823c:	ldr	x0, [sp, #24]
    8240:	ldr	x0, [x0]
    8244:	cmp	x0, #0x0
    8248:	b.eq	8260 <ext2fs_tdb_close+0xa0>  // b.none
    824c:	ldr	x0, [sp, #24]
    8250:	ldr	x0, [x0]
    8254:	bl	0 <free>
    8258:	ldr	x0, [sp, #24]
    825c:	str	xzr, [x0]
    8260:	ldr	x0, [sp, #24]
    8264:	ldr	w0, [x0, #16]
    8268:	cmn	w0, #0x1
    826c:	b.eq	8280 <ext2fs_tdb_close+0xc0>  // b.none
    8270:	ldr	x0, [sp, #24]
    8274:	ldr	w0, [x0, #16]
    8278:	bl	0 <close>
    827c:	str	w0, [sp, #36]
    8280:	ldr	x0, [sp, #24]
    8284:	ldr	x0, [x0, #48]
    8288:	cmp	x0, #0x0
    828c:	b.eq	82a4 <ext2fs_tdb_close+0xe4>  // b.none
    8290:	ldr	x0, [sp, #24]
    8294:	ldr	x0, [x0, #48]
    8298:	bl	0 <free>
    829c:	ldr	x0, [sp, #24]
    82a0:	str	xzr, [x0, #48]
    82a4:	adrp	x0, 0 <ext2fs_tdb_error>
    82a8:	add	x0, x0, #0x0
    82ac:	str	x0, [sp, #40]
    82b0:	b	82ec <ext2fs_tdb_close+0x12c>
    82b4:	ldr	x0, [sp, #40]
    82b8:	ldr	x0, [x0]
    82bc:	ldr	x1, [sp, #24]
    82c0:	cmp	x1, x0
    82c4:	b.ne	82dc <ext2fs_tdb_close+0x11c>  // b.any
    82c8:	ldr	x0, [sp, #24]
    82cc:	ldr	x1, [x0, #256]
    82d0:	ldr	x0, [sp, #40]
    82d4:	str	x1, [x0]
    82d8:	b	82fc <ext2fs_tdb_close+0x13c>
    82dc:	ldr	x0, [sp, #40]
    82e0:	ldr	x0, [x0]
    82e4:	add	x0, x0, #0x100
    82e8:	str	x0, [sp, #40]
    82ec:	ldr	x0, [sp, #40]
    82f0:	ldr	x0, [x0]
    82f4:	cmp	x0, #0x0
    82f8:	b.ne	82b4 <ext2fs_tdb_close+0xf4>  // b.any
    82fc:	mov	x2, #0x158                 	// #344
    8300:	mov	w1, #0x0                   	// #0
    8304:	ldr	x0, [sp, #24]
    8308:	bl	0 <memset>
    830c:	ldr	x0, [sp, #24]
    8310:	cmp	x0, #0x0
    8314:	b.eq	8324 <ext2fs_tdb_close+0x164>  // b.none
    8318:	ldr	x0, [sp, #24]
    831c:	bl	0 <free>
    8320:	str	xzr, [sp, #24]
    8324:	ldr	w0, [sp, #36]
    8328:	ldp	x29, x30, [sp], #48
    832c:	ret

0000000000008330 <ext2fs_tdb_set_logging_function>:
    8330:	sub	sp, sp, #0x10
    8334:	str	x0, [sp, #8]
    8338:	str	x1, [sp]
    833c:	ldr	x0, [sp, #8]
    8340:	add	x2, x0, #0x200
    8344:	ldr	x0, [sp]
    8348:	ldp	x0, x1, [x0]
    834c:	stp	x0, x1, [x2, #-232]
    8350:	nop
    8354:	add	sp, sp, #0x10
    8358:	ret

000000000000835c <ext2fs_tdb_get_logging_private>:
    835c:	sub	sp, sp, #0x10
    8360:	str	x0, [sp, #8]
    8364:	ldr	x0, [sp, #8]
    8368:	ldr	x0, [x0, #288]
    836c:	add	sp, sp, #0x10
    8370:	ret

0000000000008374 <ext2fs_tdb_reopen>:
    8374:	stp	x29, x30, [sp, #-176]!
    8378:	mov	x29, sp
    837c:	str	x19, [sp, #16]
    8380:	str	x0, [sp, #40]
    8384:	ldr	x0, [sp, #40]
    8388:	ldr	w0, [x0, #228]
    838c:	and	w0, w0, #0x2
    8390:	cmp	w0, #0x0
    8394:	b.eq	83a0 <ext2fs_tdb_reopen+0x2c>  // b.none
    8398:	mov	w0, #0x0                   	// #0
    839c:	b	8604 <ext2fs_tdb_reopen+0x290>
    83a0:	ldr	x0, [sp, #40]
    83a4:	ldr	w0, [x0, #308]
    83a8:	cmp	w0, #0x0
    83ac:	b.ne	83c0 <ext2fs_tdb_reopen+0x4c>  // b.any
    83b0:	ldr	x0, [sp, #40]
    83b4:	ldr	w0, [x0, #36]
    83b8:	cmp	w0, #0x0
    83bc:	b.eq	83e0 <ext2fs_tdb_reopen+0x6c>  // b.none
    83c0:	ldr	x0, [sp, #40]
    83c4:	ldr	x3, [x0, #280]
    83c8:	adrp	x0, 0 <ext2fs_tdb_error>
    83cc:	add	x2, x0, #0x0
    83d0:	mov	w1, #0x1                   	// #1
    83d4:	ldr	x0, [sp, #40]
    83d8:	blr	x3
    83dc:	b	85f8 <ext2fs_tdb_reopen+0x284>
    83e0:	ldr	x0, [sp, #40]
    83e4:	ldr	x0, [x0, #320]
    83e8:	cmp	x0, #0x0
    83ec:	b.eq	8410 <ext2fs_tdb_reopen+0x9c>  // b.none
    83f0:	ldr	x0, [sp, #40]
    83f4:	ldr	x3, [x0, #280]
    83f8:	adrp	x0, 0 <ext2fs_tdb_error>
    83fc:	add	x2, x0, #0x0
    8400:	mov	w1, #0x1                   	// #1
    8404:	ldr	x0, [sp, #40]
    8408:	blr	x3
    840c:	b	85f8 <ext2fs_tdb_reopen+0x284>
    8410:	ldr	x0, [sp, #40]
    8414:	bl	1968 <tdb_munmap>
    8418:	cmp	w0, #0x0
    841c:	b.eq	8450 <ext2fs_tdb_reopen+0xdc>  // b.none
    8420:	ldr	x0, [sp, #40]
    8424:	ldr	x19, [x0, #280]
    8428:	bl	0 <__errno_location>
    842c:	ldr	w0, [x0]
    8430:	bl	0 <strerror>
    8434:	mov	x3, x0
    8438:	adrp	x0, 0 <ext2fs_tdb_error>
    843c:	add	x2, x0, #0x0
    8440:	mov	w1, #0x0                   	// #0
    8444:	ldr	x0, [sp, #40]
    8448:	blr	x19
    844c:	b	85f8 <ext2fs_tdb_reopen+0x284>
    8450:	ldr	x0, [sp, #40]
    8454:	ldr	w0, [x0, #16]
    8458:	bl	0 <close>
    845c:	cmp	w0, #0x0
    8460:	b.eq	8480 <ext2fs_tdb_reopen+0x10c>  // b.none
    8464:	ldr	x0, [sp, #40]
    8468:	ldr	x3, [x0, #280]
    846c:	adrp	x0, 0 <ext2fs_tdb_error>
    8470:	add	x2, x0, #0x0
    8474:	mov	w1, #0x0                   	// #0
    8478:	ldr	x0, [sp, #40]
    847c:	blr	x3
    8480:	ldr	x0, [sp, #40]
    8484:	ldr	x3, [x0]
    8488:	ldr	x0, [sp, #40]
    848c:	ldr	w1, [x0, #304]
    8490:	mov	w0, #0xfffffdbf            	// #-577
    8494:	and	w0, w1, w0
    8498:	mov	w2, #0x0                   	// #0
    849c:	mov	w1, w0
    84a0:	mov	x0, x3
    84a4:	bl	0 <open>
    84a8:	mov	w1, w0
    84ac:	ldr	x0, [sp, #40]
    84b0:	str	w1, [x0, #16]
    84b4:	ldr	x0, [sp, #40]
    84b8:	ldr	w0, [x0, #16]
    84bc:	cmn	w0, #0x1
    84c0:	b.ne	84f4 <ext2fs_tdb_reopen+0x180>  // b.any
    84c4:	ldr	x0, [sp, #40]
    84c8:	ldr	x19, [x0, #280]
    84cc:	bl	0 <__errno_location>
    84d0:	ldr	w0, [x0]
    84d4:	bl	0 <strerror>
    84d8:	mov	x3, x0
    84dc:	adrp	x0, 0 <ext2fs_tdb_error>
    84e0:	add	x2, x0, #0x0
    84e4:	mov	w1, #0x0                   	// #0
    84e8:	ldr	x0, [sp, #40]
    84ec:	blr	x19
    84f0:	b	85f8 <ext2fs_tdb_reopen+0x284>
    84f4:	ldr	x0, [sp, #40]
    84f8:	ldr	w0, [x0, #228]
    84fc:	and	w0, w0, #0x1
    8500:	cmp	w0, #0x0
    8504:	b.eq	8558 <ext2fs_tdb_reopen+0x1e4>  // b.none
    8508:	ldr	x0, [sp, #40]
    850c:	ldr	x0, [x0, #312]
    8510:	ldr	x6, [x0, #40]
    8514:	mov	x5, #0x1                   	// #1
    8518:	mov	w4, #0x0                   	// #0
    851c:	mov	w3, #0x7                   	// #7
    8520:	mov	w2, #0x0                   	// #0
    8524:	mov	w1, #0x4                   	// #4
    8528:	ldr	x0, [sp, #40]
    852c:	blr	x6
    8530:	cmn	w0, #0x1
    8534:	b.ne	8558 <ext2fs_tdb_reopen+0x1e4>  // b.any
    8538:	ldr	x0, [sp, #40]
    853c:	ldr	x3, [x0, #280]
    8540:	adrp	x0, 0 <ext2fs_tdb_error>
    8544:	add	x2, x0, #0x0
    8548:	mov	w1, #0x0                   	// #0
    854c:	ldr	x0, [sp, #40]
    8550:	blr	x3
    8554:	b	85f8 <ext2fs_tdb_reopen+0x284>
    8558:	ldr	x0, [sp, #40]
    855c:	ldr	w0, [x0, #16]
    8560:	add	x1, sp, #0x30
    8564:	bl	0 <fstat>
    8568:	cmp	w0, #0x0
    856c:	b.eq	85a0 <ext2fs_tdb_reopen+0x22c>  // b.none
    8570:	ldr	x0, [sp, #40]
    8574:	ldr	x19, [x0, #280]
    8578:	bl	0 <__errno_location>
    857c:	ldr	w0, [x0]
    8580:	bl	0 <strerror>
    8584:	mov	x3, x0
    8588:	adrp	x0, 0 <ext2fs_tdb_error>
    858c:	add	x2, x0, #0x0
    8590:	mov	w1, #0x0                   	// #0
    8594:	ldr	x0, [sp, #40]
    8598:	blr	x19
    859c:	b	85f8 <ext2fs_tdb_reopen+0x284>
    85a0:	ldr	x1, [sp, #56]
    85a4:	ldr	x0, [sp, #40]
    85a8:	ldr	x0, [x0, #272]
    85ac:	cmp	x1, x0
    85b0:	b.ne	85c8 <ext2fs_tdb_reopen+0x254>  // b.any
    85b4:	ldr	x1, [sp, #48]
    85b8:	ldr	x0, [sp, #40]
    85bc:	ldr	x0, [x0, #264]
    85c0:	cmp	x1, x0
    85c4:	b.eq	85e8 <ext2fs_tdb_reopen+0x274>  // b.none
    85c8:	ldr	x0, [sp, #40]
    85cc:	ldr	x3, [x0, #280]
    85d0:	adrp	x0, 0 <ext2fs_tdb_error>
    85d4:	add	x2, x0, #0x0
    85d8:	mov	w1, #0x0                   	// #0
    85dc:	ldr	x0, [sp, #40]
    85e0:	blr	x3
    85e4:	b	85f8 <ext2fs_tdb_reopen+0x284>
    85e8:	ldr	x0, [sp, #40]
    85ec:	bl	19f4 <tdb_mmap>
    85f0:	mov	w0, #0x0                   	// #0
    85f4:	b	8604 <ext2fs_tdb_reopen+0x290>
    85f8:	ldr	x0, [sp, #40]
    85fc:	bl	81c0 <ext2fs_tdb_close>
    8600:	mov	w0, #0xffffffff            	// #-1
    8604:	ldr	x19, [sp, #16]
    8608:	ldp	x29, x30, [sp], #176
    860c:	ret

0000000000008610 <ext2fs_tdb_reopen_all>:
    8610:	stp	x29, x30, [sp, #-48]!
    8614:	mov	x29, sp
    8618:	str	w0, [sp, #28]
    861c:	adrp	x0, 0 <ext2fs_tdb_error>
    8620:	add	x0, x0, #0x0
    8624:	ldr	x0, [x0]
    8628:	str	x0, [sp, #40]
    862c:	b	8674 <ext2fs_tdb_reopen_all+0x64>
    8630:	ldr	w0, [sp, #28]
    8634:	cmp	w0, #0x0
    8638:	b.eq	8650 <ext2fs_tdb_reopen_all+0x40>  // b.none
    863c:	ldr	x0, [sp, #40]
    8640:	ldr	w0, [x0, #228]
    8644:	and	w1, w0, #0xfffffffe
    8648:	ldr	x0, [sp, #40]
    864c:	str	w1, [x0, #228]
    8650:	ldr	x0, [sp, #40]
    8654:	bl	8374 <ext2fs_tdb_reopen>
    8658:	cmp	w0, #0x0
    865c:	b.eq	8668 <ext2fs_tdb_reopen_all+0x58>  // b.none
    8660:	mov	w0, #0xffffffff            	// #-1
    8664:	b	8684 <ext2fs_tdb_reopen_all+0x74>
    8668:	ldr	x0, [sp, #40]
    866c:	ldr	x0, [x0, #256]
    8670:	str	x0, [sp, #40]
    8674:	ldr	x0, [sp, #40]
    8678:	cmp	x0, #0x0
    867c:	b.ne	8630 <ext2fs_tdb_reopen_all+0x20>  // b.any
    8680:	mov	w0, #0x0                   	// #0
    8684:	ldp	x29, x30, [sp], #48
    8688:	ret

000000000000868c <ext2fs_tdb_flush>:
    868c:	stp	x29, x30, [sp, #-32]!
    8690:	mov	x29, sp
    8694:	str	x0, [sp, #24]
    8698:	ldr	x0, [sp, #24]
    869c:	ldr	w0, [x0, #16]
    86a0:	cmn	w0, #0x1
    86a4:	b.eq	86b8 <ext2fs_tdb_flush+0x2c>  // b.none
    86a8:	ldr	x0, [sp, #24]
    86ac:	ldr	w0, [x0, #16]
    86b0:	bl	0 <fsync>
    86b4:	b	86bc <ext2fs_tdb_flush+0x30>
    86b8:	mov	w0, #0x0                   	// #0
    86bc:	ldp	x29, x30, [sp], #32
    86c0:	ret

undo_io.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <e2undo_set_feature_fs_offset>:
       0:	sub	sp, sp, #0x10
       4:	str	x0, [sp, #8]
       8:	ldr	x0, [sp, #8]
       c:	ldr	w0, [x0, #48]
      10:	orr	w1, w0, #0x1
      14:	ldr	x0, [sp, #8]
      18:	str	w1, [x0, #48]
      1c:	nop
      20:	add	sp, sp, #0x10
      24:	ret

0000000000000028 <e2undo_clear_feature_fs_offset>:
      28:	sub	sp, sp, #0x10
      2c:	str	x0, [sp, #8]
      30:	ldr	x0, [sp, #8]
      34:	ldr	w0, [x0, #48]
      38:	and	w1, w0, #0xfffffffe
      3c:	ldr	x0, [sp, #8]
      40:	str	w1, [x0, #48]
      44:	nop
      48:	add	sp, sp, #0x10
      4c:	ret

0000000000000050 <set_undo_io_backing_manager>:
      50:	sub	sp, sp, #0x10
      54:	str	x0, [sp, #8]
      58:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
      5c:	add	x0, x0, #0x0
      60:	ldr	x1, [sp, #8]
      64:	str	x1, [x0]
      68:	mov	x0, #0x0                   	// #0
      6c:	add	sp, sp, #0x10
      70:	ret

0000000000000074 <set_undo_io_backup_file>:
      74:	stp	x29, x30, [sp, #-32]!
      78:	mov	x29, sp
      7c:	str	x0, [sp, #24]
      80:	ldr	x0, [sp, #24]
      84:	bl	0 <strdup>
      88:	mov	x1, x0
      8c:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
      90:	add	x0, x0, #0x0
      94:	str	x1, [x0]
      98:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
      9c:	add	x0, x0, #0x0
      a0:	ldr	x0, [x0]
      a4:	cmp	x0, #0x0
      a8:	b.ne	b8 <set_undo_io_backup_file+0x44>  // b.any
      ac:	mov	x0, #0xb746                	// #46918
      b0:	movk	x0, #0x7f2b, lsl #16
      b4:	b	bc <set_undo_io_backup_file+0x48>
      b8:	mov	x0, #0x0                   	// #0
      bc:	ldp	x29, x30, [sp], #32
      c0:	ret

00000000000000c4 <write_undo_indexes>:
      c4:	sub	sp, sp, #0x450
      c8:	stp	x29, x30, [sp]
      cc:	mov	x29, sp
      d0:	str	x19, [sp, #16]
      d4:	str	x0, [sp, #40]
      d8:	str	w1, [sp, #36]
      dc:	ldr	x0, [sp, #40]
      e0:	ldr	x0, [x0, #64]
      e4:	cmp	x0, #0x0
      e8:	b.eq	1dc <write_undo_indexes+0x118>  // b.none
      ec:	ldr	x0, [sp, #40]
      f0:	ldr	x0, [x0, #48]
      f4:	mov	w1, #0xcade                	// #51934
      f8:	movk	w1, #0xcade, lsl #16
      fc:	str	w1, [x0]
     100:	ldr	x0, [sp, #40]
     104:	ldr	x0, [x0, #48]
     108:	str	wzr, [x0, #4]
     10c:	ldr	x0, [sp, #40]
     110:	ldr	x1, [x0, #48]
     114:	ldr	x0, [sp, #40]
     118:	ldr	x2, [x0, #80]
     11c:	ldr	x0, [sp, #40]
     120:	ldr	x19, [x0, #48]
     124:	mov	w0, #0xffffffff            	// #-1
     128:	bl	0 <ext2fs_crc32c_le>
     12c:	str	w0, [x19, #4]
     130:	ldr	x0, [sp, #40]
     134:	ldr	x4, [x0, #8]
     138:	ldr	x0, [sp, #40]
     13c:	ldr	x1, [x0, #24]
     140:	ldr	x0, [sp, #40]
     144:	ldr	x0, [x0, #48]
     148:	mov	x3, x0
     14c:	mov	w2, #0x1                   	// #1
     150:	mov	x0, x4
     154:	bl	0 <io_channel_write_blk64>
     158:	str	x0, [sp, #1096]
     15c:	ldr	x0, [sp, #1096]
     160:	cmp	x0, #0x0
     164:	b.eq	170 <write_undo_indexes+0xac>  // b.none
     168:	ldr	x0, [sp, #1096]
     16c:	b	3fc <write_undo_indexes+0x338>
     170:	ldr	x0, [sp, #40]
     174:	ldr	x1, [x0, #64]
     178:	ldr	x0, [sp, #40]
     17c:	ldr	x0, [x0, #80]
     180:	lsr	x0, x0, #4
     184:	sub	x0, x0, #0x1
     188:	cmp	x1, x0
     18c:	b.ne	1dc <write_undo_indexes+0x118>  // b.any
     190:	ldr	x0, [sp, #40]
     194:	ldr	x3, [x0, #48]
     198:	ldr	x0, [sp, #40]
     19c:	ldr	x0, [x0, #80]
     1a0:	mov	x2, x0
     1a4:	mov	w1, #0x0                   	// #0
     1a8:	mov	x0, x3
     1ac:	bl	0 <memset>
     1b0:	ldr	x0, [sp, #40]
     1b4:	str	xzr, [x0, #64]
     1b8:	ldr	x0, [sp, #40]
     1bc:	ldr	x1, [x0, #16]
     1c0:	ldr	x0, [sp, #40]
     1c4:	str	x1, [x0, #24]
     1c8:	ldr	x0, [sp, #40]
     1cc:	ldr	x0, [x0, #16]
     1d0:	add	x1, x0, #0x1
     1d4:	ldr	x0, [sp, #40]
     1d8:	str	x1, [x0, #16]
     1dc:	ldr	x0, [sp, #40]
     1e0:	ldr	x0, [x0, #72]
     1e4:	str	x0, [sp, #1088]
     1e8:	ldr	x0, [sp, #1088]
     1ec:	ldr	w0, [x0, #24]
     1f0:	str	w0, [sp, #1084]
     1f4:	ldr	x0, [sp, #1088]
     1f8:	ldr	x0, [x0, #8]
     1fc:	ldr	x2, [x0, #32]
     200:	mov	w1, #0x400                 	// #1024
     204:	ldr	x0, [sp, #1088]
     208:	blr	x2
     20c:	add	x0, sp, #0x30
     210:	mov	x3, x0
     214:	mov	w2, #0xfffffc00            	// #-1024
     218:	mov	x1, #0x1                   	// #1
     21c:	ldr	x0, [sp, #1088]
     220:	bl	0 <io_channel_read_blk64>
     224:	str	x0, [sp, #1096]
     228:	ldr	x0, [sp, #1096]
     22c:	cmp	x0, #0x0
     230:	b.ne	3c4 <write_undo_indexes+0x300>  // b.any
     234:	add	x0, sp, #0x30
     238:	mov	x2, #0x400                 	// #1024
     23c:	mov	x1, x0
     240:	mov	w0, #0xffffffff            	// #-1
     244:	bl	0 <ext2fs_crc32c_le>
     248:	str	w0, [sp, #1080]
     24c:	ldrh	w0, [sp, #104]
     250:	mvn	w0, w0
     254:	and	w0, w0, #0xffff
     258:	strh	w0, [sp, #104]
     25c:	ldr	x0, [sp, #40]
     260:	add	x3, x0, #0x1e8
     264:	mov	x2, #0x8                   	// #8
     268:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     26c:	add	x1, x0, #0x0
     270:	mov	x0, x3
     274:	bl	0 <memcpy>
     278:	ldr	x0, [sp, #40]
     27c:	ldr	x1, [x0, #56]
     280:	ldr	x0, [sp, #40]
     284:	str	x1, [x0, #496]
     288:	ldr	x0, [sp, #40]
     28c:	ldr	x1, [x0, #32]
     290:	ldr	x0, [sp, #40]
     294:	str	x1, [x0, #504]
     298:	ldr	x0, [sp, #40]
     29c:	ldr	x1, [x0, #40]
     2a0:	ldr	x0, [sp, #40]
     2a4:	str	x1, [x0, #512]
     2a8:	ldr	w1, [sp, #1084]
     2ac:	ldr	x0, [sp, #40]
     2b0:	str	w1, [x0, #524]
     2b4:	ldr	x0, [sp, #40]
     2b8:	ldr	w1, [sp, #1080]
     2bc:	str	w1, [x0, #528]
     2c0:	ldr	x0, [sp, #40]
     2c4:	ldr	x0, [x0, #96]
     2c8:	mov	x1, x0
     2cc:	ldr	x0, [sp, #40]
     2d0:	str	x1, [x0, #552]
     2d4:	ldr	x0, [sp, #40]
     2d8:	ldr	x0, [x0, #96]
     2dc:	cmp	x0, #0x0
     2e0:	b.eq	2f4 <write_undo_indexes+0x230>  // b.none
     2e4:	ldr	x0, [sp, #40]
     2e8:	add	x0, x0, #0x1e8
     2ec:	bl	0 <e2undo_set_feature_fs_offset>
     2f0:	b	300 <write_undo_indexes+0x23c>
     2f4:	ldr	x0, [sp, #40]
     2f8:	add	x0, x0, #0x1e8
     2fc:	bl	28 <e2undo_clear_feature_fs_offset>
     300:	ldr	x0, [sp, #40]
     304:	add	x0, x0, #0x1e8
     308:	mov	x2, #0x1fc                 	// #508
     30c:	mov	x1, x0
     310:	mov	w0, #0xffffffff            	// #-1
     314:	bl	0 <ext2fs_crc32c_le>
     318:	str	w0, [sp, #1076]
     31c:	ldr	x0, [sp, #40]
     320:	ldr	w1, [sp, #1076]
     324:	str	w1, [x0, #996]
     328:	ldr	x0, [sp, #40]
     32c:	ldr	x4, [x0, #8]
     330:	ldr	x0, [sp, #40]
     334:	add	x0, x0, #0x1e8
     338:	mov	x3, x0
     33c:	mov	w2, #0xfffffe00            	// #-512
     340:	mov	x1, #0x0                   	// #0
     344:	mov	x0, x4
     348:	bl	0 <io_channel_write_blk64>
     34c:	str	x0, [sp, #1096]
     350:	ldr	x0, [sp, #1096]
     354:	cmp	x0, #0x0
     358:	b.ne	3cc <write_undo_indexes+0x308>  // b.any
     35c:	ldr	x0, [sp, #40]
     360:	ldr	x4, [x0, #8]
     364:	ldr	x0, [sp, #40]
     368:	ldr	x0, [x0, #32]
     36c:	add	x1, sp, #0x30
     370:	mov	x3, x1
     374:	mov	w2, #0xfffffc00            	// #-1024
     378:	mov	x1, x0
     37c:	mov	x0, x4
     380:	bl	0 <io_channel_write_blk64>
     384:	str	x0, [sp, #1096]
     388:	ldr	x0, [sp, #1096]
     38c:	cmp	x0, #0x0
     390:	b.ne	3d4 <write_undo_indexes+0x310>  // b.any
     394:	ldr	w0, [sp, #36]
     398:	cmp	w0, #0x0
     39c:	b.eq	3dc <write_undo_indexes+0x318>  // b.none
     3a0:	ldr	x0, [sp, #40]
     3a4:	ldr	x0, [x0, #8]
     3a8:	ldr	x0, [x0, #8]
     3ac:	ldr	x1, [x0, #56]
     3b0:	ldr	x0, [sp, #40]
     3b4:	ldr	x0, [x0, #8]
     3b8:	blr	x1
     3bc:	str	x0, [sp, #1096]
     3c0:	b	3e0 <write_undo_indexes+0x31c>
     3c4:	nop
     3c8:	b	3e0 <write_undo_indexes+0x31c>
     3cc:	nop
     3d0:	b	3e0 <write_undo_indexes+0x31c>
     3d4:	nop
     3d8:	b	3e0 <write_undo_indexes+0x31c>
     3dc:	nop
     3e0:	ldr	x0, [sp, #1088]
     3e4:	ldr	x0, [x0, #8]
     3e8:	ldr	x2, [x0, #32]
     3ec:	ldr	w1, [sp, #1084]
     3f0:	ldr	x0, [sp, #1088]
     3f4:	blr	x2
     3f8:	ldr	x0, [sp, #1096]
     3fc:	ldr	x19, [sp, #16]
     400:	ldp	x29, x30, [sp]
     404:	add	sp, sp, #0x450
     408:	ret

000000000000040c <undo_setup_tdb>:
     40c:	stp	x29, x30, [sp, #-48]!
     410:	mov	x29, sp
     414:	str	x0, [sp, #24]
     418:	ldr	x0, [sp, #24]
     41c:	ldr	w0, [x0, #88]
     420:	cmp	w0, #0x1
     424:	b.ne	430 <undo_setup_tdb+0x24>  // b.any
     428:	mov	x0, #0x0                   	// #0
     42c:	b	644 <undo_setup_tdb+0x238>
     430:	ldr	x0, [sp, #24]
     434:	mov	w1, #0x1                   	// #1
     438:	str	w1, [x0, #88]
     43c:	ldr	x0, [sp, #24]
     440:	add	x0, x0, #0x70
     444:	mov	x2, #0x170                 	// #368
     448:	mov	w1, #0x0                   	// #0
     44c:	bl	0 <memset>
     450:	ldr	x0, [sp, #24]
     454:	ldr	x0, [x0, #80]
     458:	mov	w1, w0
     45c:	ldr	x0, [sp, #24]
     460:	str	w1, [x0, #152]
     464:	ldr	x0, [sp, #24]
     468:	add	x8, x0, #0x70
     46c:	ldr	x0, [sp, #24]
     470:	add	x0, x0, #0x68
     474:	mov	x7, x0
     478:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     47c:	add	x6, x0, #0x0
     480:	mov	x5, #0xfffffffffffffffe    	// #-2
     484:	mov	x4, #0xfffffffffffffffe    	// #-2
     488:	mov	x3, #0x0                   	// #0
     48c:	mov	w2, #0x2                   	// #2
     490:	mov	x1, #0xb76e                	// #46958
     494:	movk	x1, #0x7f2b, lsl #16
     498:	mov	x0, x8
     49c:	bl	0 <ext2fs_alloc_generic_bmap>
     4a0:	str	x0, [sp, #32]
     4a4:	ldr	x0, [sp, #32]
     4a8:	cmp	x0, #0x0
     4ac:	b.eq	4b8 <undo_setup_tdb+0xac>  // b.none
     4b0:	ldr	x0, [sp, #32]
     4b4:	b	644 <undo_setup_tdb+0x238>
     4b8:	ldr	x0, [sp, #24]
     4bc:	ldr	x2, [x0, #80]
     4c0:	ldr	x0, [sp, #24]
     4c4:	add	x0, x0, #0x30
     4c8:	mov	x1, x0
     4cc:	mov	x0, x2
     4d0:	bl	0 <ext2fs_get_mem>
     4d4:	str	x0, [sp, #32]
     4d8:	ldr	x0, [sp, #32]
     4dc:	cmp	x0, #0x0
     4e0:	b.eq	4ec <undo_setup_tdb+0xe0>  // b.none
     4e4:	ldr	x0, [sp, #32]
     4e8:	b	644 <undo_setup_tdb+0x238>
     4ec:	ldr	x0, [sp, #24]
     4f0:	ldr	x1, [x0, #40]
     4f4:	ldr	x0, [sp, #24]
     4f8:	str	x1, [x0, #24]
     4fc:	ldr	x0, [sp, #24]
     500:	ldr	x0, [x0, #80]
     504:	mov	w1, w0
     508:	ldr	x0, [sp, #24]
     50c:	str	w1, [x0, #520]
     510:	ldr	x0, [sp, #24]
     514:	ldr	x0, [x0, #8]
     518:	ldr	x0, [x0, #8]
     51c:	ldr	x2, [x0, #32]
     520:	ldr	x0, [sp, #24]
     524:	ldr	x3, [x0, #8]
     528:	ldr	x0, [sp, #24]
     52c:	ldr	x0, [x0, #80]
     530:	mov	w1, w0
     534:	mov	x0, x3
     538:	blr	x2
     53c:	str	wzr, [sp, #44]
     540:	b	614 <undo_setup_tdb+0x208>
     544:	ldr	x0, [sp, #24]
     548:	ldr	x4, [x0, #8]
     54c:	ldrsw	x1, [sp, #44]
     550:	ldr	x0, [sp, #24]
     554:	ldr	x0, [x0, #48]
     558:	mov	x3, x0
     55c:	mov	w2, #0x1                   	// #1
     560:	mov	x0, x4
     564:	bl	0 <io_channel_read_blk64>
     568:	str	x0, [sp, #32]
     56c:	ldr	x0, [sp, #32]
     570:	cmp	x0, #0x0
     574:	b.eq	598 <undo_setup_tdb+0x18c>  // b.none
     578:	ldr	x0, [sp, #24]
     57c:	ldr	x3, [x0, #48]
     580:	ldr	x0, [sp, #24]
     584:	ldr	x0, [x0, #80]
     588:	mov	x2, x0
     58c:	mov	w1, #0x0                   	// #0
     590:	mov	x0, x3
     594:	bl	0 <memset>
     598:	ldr	x0, [sp, #24]
     59c:	ldr	x4, [x0, #8]
     5a0:	ldrsw	x1, [sp, #44]
     5a4:	ldr	x0, [sp, #24]
     5a8:	ldr	x0, [x0, #48]
     5ac:	mov	x3, x0
     5b0:	mov	w2, #0x1                   	// #1
     5b4:	mov	x0, x4
     5b8:	bl	0 <io_channel_write_blk64>
     5bc:	str	x0, [sp, #32]
     5c0:	ldr	x0, [sp, #32]
     5c4:	cmp	x0, #0x0
     5c8:	b.eq	5d4 <undo_setup_tdb+0x1c8>  // b.none
     5cc:	ldr	x0, [sp, #32]
     5d0:	b	644 <undo_setup_tdb+0x238>
     5d4:	ldr	x0, [sp, #24]
     5d8:	ldr	x0, [x0, #8]
     5dc:	ldr	x0, [x0, #8]
     5e0:	ldr	x1, [x0, #56]
     5e4:	ldr	x0, [sp, #24]
     5e8:	ldr	x0, [x0, #8]
     5ec:	blr	x1
     5f0:	str	x0, [sp, #32]
     5f4:	ldr	x0, [sp, #32]
     5f8:	cmp	x0, #0x0
     5fc:	b.eq	608 <undo_setup_tdb+0x1fc>  // b.none
     600:	ldr	x0, [sp, #32]
     604:	b	644 <undo_setup_tdb+0x238>
     608:	ldr	w0, [sp, #44]
     60c:	add	w0, w0, #0x1
     610:	str	w0, [sp, #44]
     614:	ldr	w0, [sp, #44]
     618:	cmp	w0, #0x2
     61c:	b.le	544 <undo_setup_tdb+0x138>
     620:	ldr	x0, [sp, #24]
     624:	ldr	x3, [x0, #48]
     628:	ldr	x0, [sp, #24]
     62c:	ldr	x0, [x0, #80]
     630:	mov	x2, x0
     634:	mov	w1, #0x0                   	// #0
     638:	mov	x0, x3
     63c:	bl	0 <memset>
     640:	mov	x0, #0x0                   	// #0
     644:	ldp	x29, x30, [sp], #48
     648:	ret

000000000000064c <undo_write_tdb>:
     64c:	stp	x29, x30, [sp, #-144]!
     650:	mov	x29, sp
     654:	str	x0, [sp, #40]
     658:	str	x1, [sp, #32]
     65c:	str	w2, [sp, #28]
     660:	str	xzr, [sp, #120]
     664:	ldr	x0, [sp, #40]
     668:	ldr	x0, [x0, #168]
     66c:	str	x0, [sp, #88]
     670:	ldr	x0, [sp, #88]
     674:	ldr	x0, [x0, #8]
     678:	cmp	x0, #0x0
     67c:	b.ne	688 <undo_write_tdb+0x3c>  // b.any
     680:	mov	x0, #0x0                   	// #0
     684:	b	bb4 <undo_write_tdb+0x568>
     688:	ldr	w0, [sp, #28]
     68c:	cmp	w0, #0x1
     690:	b.ne	6a4 <undo_write_tdb+0x58>  // b.any
     694:	ldr	x0, [sp, #40]
     698:	ldr	w0, [x0, #24]
     69c:	str	w0, [sp, #140]
     6a0:	b	6d4 <undo_write_tdb+0x88>
     6a4:	ldr	w0, [sp, #28]
     6a8:	cmp	w0, #0x0
     6ac:	b.ge	6c0 <undo_write_tdb+0x74>  // b.tcont
     6b0:	ldr	w0, [sp, #28]
     6b4:	neg	w0, w0
     6b8:	str	w0, [sp, #140]
     6bc:	b	6d4 <undo_write_tdb+0x88>
     6c0:	ldr	x0, [sp, #40]
     6c4:	ldr	w0, [x0, #24]
     6c8:	ldr	w1, [sp, #28]
     6cc:	mul	w0, w1, w0
     6d0:	str	w0, [sp, #140]
     6d4:	ldr	x0, [sp, #88]
     6d8:	bl	40c <undo_setup_tdb>
     6dc:	str	x0, [sp, #120]
     6e0:	ldr	x0, [sp, #120]
     6e4:	cmp	x0, #0x0
     6e8:	b.eq	6f4 <undo_write_tdb+0xa8>  // b.none
     6ec:	ldr	x0, [sp, #120]
     6f0:	b	bb4 <undo_write_tdb+0x568>
     6f4:	ldr	x0, [sp, #40]
     6f8:	ldr	w0, [x0, #24]
     6fc:	sxtw	x1, w0
     700:	ldr	x0, [sp, #32]
     704:	mul	x0, x1, x0
     708:	ldr	x1, [sp, #88]
     70c:	ldr	x1, [x1, #96]
     710:	add	x0, x0, x1
     714:	str	x0, [sp, #80]
     718:	ldr	x1, [sp, #80]
     71c:	ldr	x0, [sp, #88]
     720:	ldr	x0, [x0, #80]
     724:	udiv	x0, x1, x0
     728:	str	x0, [sp, #128]
     72c:	ldrsw	x1, [sp, #140]
     730:	ldr	x0, [sp, #80]
     734:	add	x0, x1, x0
     738:	sub	x0, x0, #0x1
     73c:	mov	x1, x0
     740:	ldr	x0, [sp, #88]
     744:	ldr	x0, [x0, #80]
     748:	udiv	x0, x1, x0
     74c:	str	x0, [sp, #72]
     750:	b	ba0 <undo_write_tdb+0x554>
     754:	ldr	x0, [sp, #88]
     758:	ldr	x0, [x0, #104]
     75c:	ldr	x1, [sp, #128]
     760:	bl	0 <ext2fs_test_block_bitmap2>
     764:	cmp	w0, #0x0
     768:	b.eq	77c <undo_write_tdb+0x130>  // b.none
     76c:	ldr	x0, [sp, #128]
     770:	add	x0, x0, #0x1
     774:	str	x0, [sp, #128]
     778:	b	ba0 <undo_write_tdb+0x554>
     77c:	ldr	x0, [sp, #88]
     780:	ldr	x0, [x0, #104]
     784:	ldr	x1, [sp, #128]
     788:	bl	0 <ext2fs_mark_block_bitmap2>
     78c:	ldr	x0, [sp, #88]
     790:	ldr	x1, [x0, #80]
     794:	ldr	x0, [sp, #128]
     798:	mul	x2, x1, x0
     79c:	ldr	x0, [sp, #88]
     7a0:	ldr	x0, [x0, #96]
     7a4:	mov	x1, x0
     7a8:	ldr	x0, [sp, #88]
     7ac:	ldr	x0, [x0, #80]
     7b0:	udiv	x3, x1, x0
     7b4:	mul	x0, x3, x0
     7b8:	sub	x0, x1, x0
     7bc:	add	x0, x2, x0
     7c0:	str	x0, [sp, #80]
     7c4:	ldr	x0, [sp, #88]
     7c8:	ldr	x0, [x0, #96]
     7cc:	ldr	x1, [sp, #80]
     7d0:	sub	x1, x1, x0
     7d4:	ldr	x0, [sp, #40]
     7d8:	ldr	w0, [x0, #24]
     7dc:	sxtw	x0, w0
     7e0:	sdiv	x0, x1, x0
     7e4:	str	x0, [sp, #64]
     7e8:	ldr	x0, [sp, #88]
     7ec:	ldr	x0, [x0, #80]
     7f0:	add	x1, sp, #0x30
     7f4:	bl	0 <ext2fs_get_mem>
     7f8:	str	x0, [sp, #120]
     7fc:	ldr	x0, [sp, #120]
     800:	cmp	x0, #0x0
     804:	b.eq	810 <undo_write_tdb+0x1c4>  // b.none
     808:	ldr	x0, [sp, #120]
     80c:	b	bb4 <undo_write_tdb+0x568>
     810:	ldr	x3, [sp, #48]
     814:	ldr	x0, [sp, #88]
     818:	ldr	x0, [x0, #80]
     81c:	mov	x2, x0
     820:	mov	w1, #0x0                   	// #0
     824:	mov	x0, x3
     828:	bl	0 <memset>
     82c:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     830:	add	x0, x0, #0x0
     834:	str	wzr, [x0]
     838:	ldr	x0, [sp, #88]
     83c:	ldr	x0, [x0, #80]
     840:	ldr	x1, [sp, #40]
     844:	ldr	w1, [x1, #24]
     848:	sxtw	x1, w1
     84c:	udiv	x2, x0, x1
     850:	mul	x1, x2, x1
     854:	sub	x0, x0, x1
     858:	cmp	x0, #0x0
     85c:	b.ne	880 <undo_write_tdb+0x234>  // b.any
     860:	ldr	x0, [sp, #88]
     864:	ldr	x1, [x0, #80]
     868:	ldr	x0, [sp, #40]
     86c:	ldr	w0, [x0, #24]
     870:	sxtw	x0, w0
     874:	udiv	x0, x1, x0
     878:	str	w0, [sp, #136]
     87c:	b	890 <undo_write_tdb+0x244>
     880:	ldr	x0, [sp, #88]
     884:	ldr	x0, [x0, #80]
     888:	neg	w0, w0
     88c:	str	w0, [sp, #136]
     890:	ldr	x0, [sp, #88]
     894:	ldr	x0, [x0, #72]
     898:	ldr	x1, [sp, #48]
     89c:	mov	x3, x1
     8a0:	ldr	w2, [sp, #136]
     8a4:	ldr	x1, [sp, #64]
     8a8:	bl	0 <io_channel_read_blk64>
     8ac:	str	x0, [sp, #120]
     8b0:	ldr	x0, [sp, #120]
     8b4:	cmp	x0, #0x0
     8b8:	b.eq	8f8 <undo_write_tdb+0x2ac>  // b.none
     8bc:	ldr	x1, [sp, #120]
     8c0:	mov	x0, #0xb724                	// #46884
     8c4:	movk	x0, #0x7f2b, lsl #16
     8c8:	cmp	x1, x0
     8cc:	b.eq	8e0 <undo_write_tdb+0x294>  // b.none
     8d0:	ldr	x0, [sp, #48]
     8d4:	bl	0 <free>
     8d8:	ldr	x0, [sp, #120]
     8dc:	b	bb4 <undo_write_tdb+0x568>
     8e0:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     8e4:	add	x0, x0, #0x0
     8e8:	ldr	w0, [x0]
     8ec:	sxtw	x0, w0
     8f0:	str	x0, [sp, #112]
     8f4:	b	904 <undo_write_tdb+0x2b8>
     8f8:	ldr	x0, [sp, #88]
     8fc:	ldr	x0, [x0, #80]
     900:	str	x0, [sp, #112]
     904:	ldr	x0, [sp, #112]
     908:	cmp	x0, #0x0
     90c:	b.ne	928 <undo_write_tdb+0x2dc>  // b.any
     910:	ldr	x0, [sp, #48]
     914:	bl	0 <free>
     918:	ldr	x0, [sp, #128]
     91c:	add	x0, x0, #0x1
     920:	str	x0, [sp, #128]
     924:	b	ba0 <undo_write_tdb+0x554>
     928:	ldr	x0, [sp, #88]
     92c:	ldr	x0, [x0, #8]
     930:	ldr	w0, [x0, #24]
     934:	sxtw	x1, w0
     938:	ldr	x0, [sp, #112]
     93c:	udiv	x2, x0, x1
     940:	mul	x1, x2, x1
     944:	sub	x0, x0, x1
     948:	cmp	x0, #0x0
     94c:	b.ne	970 <undo_write_tdb+0x324>  // b.any
     950:	ldr	x0, [sp, #88]
     954:	ldr	x0, [x0, #8]
     958:	ldr	w0, [x0, #24]
     95c:	sxtw	x0, w0
     960:	ldr	x1, [sp, #112]
     964:	udiv	x0, x1, x0
     968:	str	w0, [sp, #136]
     96c:	b	97c <undo_write_tdb+0x330>
     970:	ldr	x0, [sp, #112]
     974:	neg	w0, w0
     978:	str	w0, [sp, #136]
     97c:	ldr	x0, [sp, #88]
     980:	ldr	x0, [x0, #64]
     984:	cmp	x0, #0x0
     988:	b.eq	9c0 <undo_write_tdb+0x374>  // b.none
     98c:	ldr	x0, [sp, #88]
     990:	ldr	x0, [x0, #48]
     994:	add	x1, x0, #0x10
     998:	ldr	x0, [sp, #88]
     99c:	ldr	x0, [x0, #64]
     9a0:	lsl	x0, x0, #4
     9a4:	sub	x0, x0, #0x10
     9a8:	add	x0, x1, x0
     9ac:	str	x0, [sp, #104]
     9b0:	ldr	x0, [sp, #104]
     9b4:	ldr	w0, [x0, #12]
     9b8:	str	w0, [sp, #100]
     9bc:	b	9c8 <undo_write_tdb+0x37c>
     9c0:	str	xzr, [sp, #104]
     9c4:	str	wzr, [sp, #100]
     9c8:	ldr	x0, [sp, #104]
     9cc:	cmp	x0, #0x0
     9d0:	b.eq	a84 <undo_write_tdb+0x438>  // b.none
     9d4:	ldr	x0, [sp, #104]
     9d8:	ldr	x0, [x0]
     9dc:	add	x1, x0, #0x1
     9e0:	ldr	x0, [sp, #40]
     9e4:	ldr	w0, [x0, #24]
     9e8:	sxtw	x0, w0
     9ec:	mul	x1, x1, x0
     9f0:	ldr	w0, [sp, #100]
     9f4:	add	x0, x1, x0
     9f8:	sub	x1, x0, #0x1
     9fc:	ldr	x0, [sp, #40]
     a00:	ldr	w0, [x0, #24]
     a04:	sxtw	x0, w0
     a08:	udiv	x0, x1, x0
     a0c:	ldr	x1, [sp, #64]
     a10:	cmp	x1, x0
     a14:	b.ne	a84 <undo_write_tdb+0x438>  // b.any
     a18:	ldr	x0, [sp, #88]
     a1c:	ldr	x0, [x0, #80]
     a20:	lsl	x1, x0, #9
     a24:	ldr	w2, [sp, #100]
     a28:	ldr	x0, [sp, #112]
     a2c:	add	x0, x2, x0
     a30:	cmp	x1, x0
     a34:	b.ls	a84 <undo_write_tdb+0x438>  // b.plast
     a38:	ldr	x0, [sp, #104]
     a3c:	ldr	w0, [x0, #8]
     a40:	str	w0, [sp, #60]
     a44:	ldr	x0, [sp, #48]
     a48:	ldr	x2, [sp, #112]
     a4c:	mov	x1, x0
     a50:	ldr	w0, [sp, #60]
     a54:	bl	0 <ext2fs_crc32c_le>
     a58:	str	w0, [sp, #60]
     a5c:	ldr	x0, [sp, #104]
     a60:	ldr	w1, [sp, #60]
     a64:	str	w1, [x0, #8]
     a68:	ldr	x0, [sp, #112]
     a6c:	mov	w1, w0
     a70:	ldr	w0, [sp, #100]
     a74:	add	w1, w1, w0
     a78:	ldr	x0, [sp, #104]
     a7c:	str	w1, [x0, #12]
     a80:	b	b0c <undo_write_tdb+0x4c0>
     a84:	ldr	x0, [sp, #88]
     a88:	ldr	x0, [x0, #56]
     a8c:	add	x1, x0, #0x1
     a90:	ldr	x0, [sp, #88]
     a94:	str	x1, [x0, #56]
     a98:	ldr	x0, [sp, #88]
     a9c:	ldr	x0, [x0, #48]
     aa0:	add	x1, x0, #0x10
     aa4:	ldr	x0, [sp, #88]
     aa8:	ldr	x0, [x0, #64]
     aac:	lsl	x0, x0, #4
     ab0:	add	x0, x1, x0
     ab4:	str	x0, [sp, #104]
     ab8:	ldr	x0, [sp, #88]
     abc:	ldr	x0, [x0, #64]
     ac0:	add	x1, x0, #0x1
     ac4:	ldr	x0, [sp, #88]
     ac8:	str	x1, [x0, #64]
     acc:	ldr	x0, [sp, #104]
     ad0:	ldr	x1, [sp, #64]
     ad4:	str	x1, [x0]
     ad8:	ldr	x0, [sp, #48]
     adc:	ldr	x2, [sp, #112]
     ae0:	mov	x1, x0
     ae4:	mov	w0, #0xffffffff            	// #-1
     ae8:	bl	0 <ext2fs_crc32c_le>
     aec:	str	w0, [sp, #60]
     af0:	ldr	x0, [sp, #104]
     af4:	ldr	w1, [sp, #60]
     af8:	str	w1, [x0, #8]
     afc:	ldr	x0, [sp, #112]
     b00:	mov	w1, w0
     b04:	ldr	x0, [sp, #104]
     b08:	str	w1, [x0, #12]
     b0c:	ldr	x0, [sp, #88]
     b10:	ldr	x4, [x0, #8]
     b14:	ldr	x0, [sp, #88]
     b18:	ldr	x0, [x0, #16]
     b1c:	ldr	x1, [sp, #48]
     b20:	mov	x3, x1
     b24:	ldr	w2, [sp, #136]
     b28:	mov	x1, x0
     b2c:	mov	x0, x4
     b30:	bl	0 <io_channel_write_blk64>
     b34:	str	x0, [sp, #120]
     b38:	ldr	x0, [sp, #120]
     b3c:	cmp	x0, #0x0
     b40:	b.eq	b54 <undo_write_tdb+0x508>  // b.none
     b44:	ldr	x0, [sp, #48]
     b48:	bl	0 <free>
     b4c:	ldr	x0, [sp, #120]
     b50:	b	bb4 <undo_write_tdb+0x568>
     b54:	ldr	x0, [sp, #88]
     b58:	ldr	x0, [x0, #16]
     b5c:	add	x1, x0, #0x1
     b60:	ldr	x0, [sp, #88]
     b64:	str	x1, [x0, #16]
     b68:	ldr	x0, [sp, #48]
     b6c:	bl	0 <free>
     b70:	mov	w1, #0x0                   	// #0
     b74:	ldr	x0, [sp, #88]
     b78:	bl	c4 <write_undo_indexes>
     b7c:	str	x0, [sp, #120]
     b80:	ldr	x0, [sp, #120]
     b84:	cmp	x0, #0x0
     b88:	b.eq	b94 <undo_write_tdb+0x548>  // b.none
     b8c:	ldr	x0, [sp, #120]
     b90:	b	bb4 <undo_write_tdb+0x568>
     b94:	ldr	x0, [sp, #128]
     b98:	add	x0, x0, #0x1
     b9c:	str	x0, [sp, #128]
     ba0:	ldr	x1, [sp, #128]
     ba4:	ldr	x0, [sp, #72]
     ba8:	cmp	x1, x0
     bac:	b.ls	754 <undo_write_tdb+0x108>  // b.plast
     bb0:	ldr	x0, [sp, #120]
     bb4:	ldp	x29, x30, [sp], #144
     bb8:	ret

0000000000000bbc <undo_io_read_error>:
     bbc:	sub	sp, sp, #0x30
     bc0:	str	x0, [sp, #40]
     bc4:	str	x1, [sp, #32]
     bc8:	str	w2, [sp, #28]
     bcc:	str	x3, [sp, #16]
     bd0:	str	x4, [sp, #8]
     bd4:	str	w5, [sp, #24]
     bd8:	str	x6, [sp]
     bdc:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     be0:	add	x0, x0, #0x0
     be4:	ldr	w1, [sp, #24]
     be8:	str	w1, [x0]
     bec:	ldr	x0, [sp]
     bf0:	add	sp, sp, #0x30
     bf4:	ret

0000000000000bf8 <undo_err_handler_init>:
     bf8:	sub	sp, sp, #0x10
     bfc:	str	x0, [sp, #8]
     c00:	ldr	x0, [sp, #8]
     c04:	adrp	x1, 0 <e2undo_set_feature_fs_offset>
     c08:	add	x1, x1, #0x0
     c0c:	str	x1, [x0, #32]
     c10:	nop
     c14:	add	sp, sp, #0x10
     c18:	ret

0000000000000c1c <check_filesystem>:
     c1c:	sub	sp, sp, #0x460
     c20:	stp	x29, x30, [sp]
     c24:	mov	x29, sp
     c28:	str	x0, [sp, #56]
     c2c:	str	x1, [sp, #48]
     c30:	str	w2, [sp, #44]
     c34:	str	x3, [sp, #32]
     c38:	str	x4, [sp, #24]
     c3c:	ldr	x0, [sp, #24]
     c40:	ldr	x0, [x0, #8]
     c44:	ldr	x2, [x0, #32]
     c48:	mov	w1, #0x400                 	// #1024
     c4c:	ldr	x0, [sp, #24]
     c50:	blr	x2
     c54:	add	x0, sp, #0x48
     c58:	mov	x3, x0
     c5c:	mov	w2, #0xfffffc00            	// #-1024
     c60:	mov	x1, #0x1                   	// #1
     c64:	ldr	x0, [sp, #24]
     c68:	bl	0 <io_channel_read_blk64>
     c6c:	str	x0, [sp, #1112]
     c70:	ldr	x0, [sp, #1112]
     c74:	cmp	x0, #0x0
     c78:	b.eq	c84 <check_filesystem+0x68>  // b.none
     c7c:	ldr	x0, [sp, #1112]
     c80:	b	d64 <check_filesystem+0x148>
     c84:	ldr	w0, [sp, #44]
     c88:	add	x1, sp, #0x40
     c8c:	bl	0 <ext2fs_get_mem>
     c90:	str	x0, [sp, #1112]
     c94:	ldr	x0, [sp, #1112]
     c98:	cmp	x0, #0x0
     c9c:	b.eq	ca8 <check_filesystem+0x8c>  // b.none
     ca0:	ldr	x0, [sp, #1112]
     ca4:	b	d64 <check_filesystem+0x148>
     ca8:	ldr	x0, [sp, #64]
     cac:	mov	x3, x0
     cb0:	mov	w2, #0xfffffc00            	// #-1024
     cb4:	ldr	x1, [sp, #32]
     cb8:	ldr	x0, [sp, #48]
     cbc:	bl	0 <io_channel_read_blk64>
     cc0:	str	x0, [sp, #1112]
     cc4:	ldr	x0, [sp, #1112]
     cc8:	cmp	x0, #0x0
     ccc:	b.ne	d4c <check_filesystem+0x130>  // b.any
     cd0:	ldr	x0, [sp, #64]
     cd4:	str	x0, [sp, #1104]
     cd8:	ldr	x0, [sp, #1104]
     cdc:	ldrh	w0, [x0, #56]
     ce0:	mvn	w0, w0
     ce4:	and	w1, w0, #0xffff
     ce8:	ldr	x0, [sp, #1104]
     cec:	strh	w1, [x0, #56]
     cf0:	ldr	x1, [sp, #64]
     cf4:	add	x0, sp, #0x48
     cf8:	mov	x2, #0x400                 	// #1024
     cfc:	bl	0 <memcmp>
     d00:	cmp	w0, #0x0
     d04:	b.eq	d14 <check_filesystem+0xf8>  // b.none
     d08:	mov	x0, #0xffffffffffffffff    	// #-1
     d0c:	str	x0, [sp, #1112]
     d10:	b	d58 <check_filesystem+0x13c>
     d14:	ldr	x0, [sp, #64]
     d18:	mov	x2, #0x400                 	// #1024
     d1c:	mov	x1, x0
     d20:	mov	w0, #0xffffffff            	// #-1
     d24:	bl	0 <ext2fs_crc32c_le>
     d28:	str	w0, [sp, #1100]
     d2c:	ldr	x0, [sp, #56]
     d30:	ldr	w0, [x0, #40]
     d34:	ldr	w1, [sp, #1100]
     d38:	cmp	w1, w0
     d3c:	b.eq	d54 <check_filesystem+0x138>  // b.none
     d40:	mov	x0, #0xffffffffffffffff    	// #-1
     d44:	str	x0, [sp, #1112]
     d48:	b	d58 <check_filesystem+0x13c>
     d4c:	nop
     d50:	b	d58 <check_filesystem+0x13c>
     d54:	nop
     d58:	add	x0, sp, #0x40
     d5c:	bl	0 <ext2fs_free_mem>
     d60:	ldr	x0, [sp, #1112]
     d64:	ldp	x29, x30, [sp]
     d68:	add	sp, sp, #0x460
     d6c:	ret

0000000000000d70 <try_reopen_undo_file>:
     d70:	sub	sp, sp, #0x320
     d74:	stp	x29, x30, [sp]
     d78:	mov	x29, sp
     d7c:	str	w0, [sp, #28]
     d80:	str	x1, [sp, #16]
     d84:	add	x0, sp, #0x28
     d88:	mov	x1, x0
     d8c:	ldr	w0, [sp, #28]
     d90:	bl	0 <ext2fs_fstat>
     d94:	sxtw	x0, w0
     d98:	str	x0, [sp, #768]
     d9c:	ldr	x0, [sp, #768]
     da0:	cmp	x0, #0x0
     da4:	b.ne	11e4 <try_reopen_undo_file+0x474>  // b.any
     da8:	ldr	x0, [sp, #88]
     dac:	cmp	x0, #0x0
     db0:	b.eq	1228 <try_reopen_undo_file+0x4b8>  // b.none
     db4:	ldr	x0, [sp, #16]
     db8:	ldr	x0, [x0, #8]
     dbc:	add	x1, sp, #0xa8
     dc0:	mov	x3, x1
     dc4:	mov	w2, #0xfffffe00            	// #-512
     dc8:	mov	x1, #0x0                   	// #0
     dcc:	bl	0 <io_channel_read_blk64>
     dd0:	str	x0, [sp, #768]
     dd4:	ldr	x0, [sp, #768]
     dd8:	cmp	x0, #0x0
     ddc:	b.ne	11ec <try_reopen_undo_file+0x47c>  // b.any
     de0:	add	x3, sp, #0xa8
     de4:	mov	x2, #0x8                   	// #8
     de8:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
     dec:	add	x1, x0, #0x0
     df0:	mov	x0, x3
     df4:	bl	0 <memcmp>
     df8:	cmp	w0, #0x0
     dfc:	b.ne	11f4 <try_reopen_undo_file+0x484>  // b.any
     e00:	add	x0, sp, #0xa8
     e04:	mov	x2, #0x1fc                 	// #508
     e08:	mov	x1, x0
     e0c:	mov	w0, #0xffffffff            	// #-1
     e10:	bl	0 <ext2fs_crc32c_le>
     e14:	str	w0, [sp, #748]
     e18:	ldr	w0, [sp, #676]
     e1c:	ldr	w1, [sp, #748]
     e20:	cmp	w1, w0
     e24:	b.ne	11fc <try_reopen_undo_file+0x48c>  // b.any
     e28:	ldr	w0, [sp, #200]
     e2c:	str	w0, [sp, #744]
     e30:	ldr	w0, [sp, #204]
     e34:	str	w0, [sp, #740]
     e38:	ldr	w0, [sp, #744]
     e3c:	cmp	w0, #0x100, lsl #12
     e40:	b.hi	1204 <try_reopen_undo_file+0x494>  // b.pmore
     e44:	ldr	w0, [sp, #744]
     e48:	cmp	w0, #0x3ff
     e4c:	b.ls	1204 <try_reopen_undo_file+0x494>  // b.plast
     e50:	ldr	w0, [sp, #744]
     e54:	cmp	w0, #0x0
     e58:	b.eq	1204 <try_reopen_undo_file+0x494>  // b.none
     e5c:	ldr	w0, [sp, #740]
     e60:	cmp	w0, #0x0
     e64:	b.eq	1204 <try_reopen_undo_file+0x494>  // b.none
     e68:	ldr	x0, [sp, #184]
     e6c:	str	x0, [sp, #728]
     e70:	ldr	x0, [sp, #176]
     e74:	str	x0, [sp, #720]
     e78:	ldr	x0, [sp, #16]
     e7c:	ldr	x0, [x0, #8]
     e80:	ldr	x0, [x0, #8]
     e84:	ldr	x2, [x0, #32]
     e88:	ldr	x0, [sp, #16]
     e8c:	ldr	x0, [x0, #8]
     e90:	ldr	w1, [sp, #744]
     e94:	blr	x2
     e98:	ldr	w0, [sp, #220]
     e9c:	cmp	w0, #0x0
     ea0:	b.ne	120c <try_reopen_undo_file+0x49c>  // b.any
     ea4:	ldr	w0, [sp, #224]
     ea8:	cmp	w0, #0x0
     eac:	b.ne	120c <try_reopen_undo_file+0x49c>  // b.any
     eb0:	ldr	x0, [sp, #16]
     eb4:	ldr	x1, [x0, #8]
     eb8:	ldr	x0, [sp, #16]
     ebc:	ldr	x2, [x0, #72]
     ec0:	add	x0, sp, #0xa8
     ec4:	mov	x4, x2
     ec8:	ldr	x3, [sp, #728]
     ecc:	ldr	w2, [sp, #744]
     ed0:	bl	c1c <check_filesystem>
     ed4:	cmp	w0, #0x0
     ed8:	b.eq	eec <try_reopen_undo_file+0x17c>  // b.none
     edc:	mov	x0, #0xb7ad                	// #47021
     ee0:	movk	x0, #0x7f2b, lsl #16
     ee4:	str	x0, [sp, #768]
     ee8:	b	122c <try_reopen_undo_file+0x4bc>
     eec:	ldr	w1, [sp, #744]
     ef0:	ldr	x0, [sp, #16]
     ef4:	str	x1, [x0, #80]
     ef8:	ldr	x0, [sp, #16]
     efc:	bl	40c <undo_setup_tdb>
     f00:	str	x0, [sp, #768]
     f04:	ldr	x0, [sp, #768]
     f08:	cmp	x0, #0x0
     f0c:	b.ne	1214 <try_reopen_undo_file+0x4a4>  // b.any
     f10:	ldr	x0, [sp, #16]
     f14:	ldr	x1, [sp, #720]
     f18:	str	x1, [x0, #56]
     f1c:	ldr	x0, [sp, #16]
     f20:	ldr	x1, [sp, #728]
     f24:	str	x1, [x0, #32]
     f28:	ldr	x1, [sp, #192]
     f2c:	ldr	x0, [sp, #16]
     f30:	str	x1, [x0, #40]
     f34:	ldr	x0, [sp, #16]
     f38:	ldr	x0, [x0, #80]
     f3c:	lsr	x0, x0, #4
     f40:	sub	x0, x0, #0x1
     f44:	str	x0, [sp, #712]
     f48:	ldr	x0, [sp, #16]
     f4c:	ldr	x0, [x0, #40]
     f50:	str	x0, [sp, #784]
     f54:	str	xzr, [sp, #776]
     f58:	b	1150 <try_reopen_undo_file+0x3e0>
     f5c:	ldr	x0, [sp, #16]
     f60:	ldr	x1, [sp, #784]
     f64:	str	x1, [x0, #24]
     f68:	ldr	x0, [sp, #16]
     f6c:	ldr	x4, [x0, #8]
     f70:	ldr	x0, [sp, #16]
     f74:	ldr	x0, [x0, #48]
     f78:	mov	x3, x0
     f7c:	mov	w2, #0x1                   	// #1
     f80:	ldr	x1, [sp, #784]
     f84:	mov	x0, x4
     f88:	bl	0 <io_channel_read_blk64>
     f8c:	str	x0, [sp, #768]
     f90:	ldr	x0, [sp, #768]
     f94:	cmp	x0, #0x0
     f98:	b.ne	119c <try_reopen_undo_file+0x42c>  // b.any
     f9c:	ldr	x0, [sp, #16]
     fa0:	ldr	x0, [x0, #48]
     fa4:	ldr	w1, [x0]
     fa8:	mov	w0, #0xcade                	// #51934
     fac:	movk	w0, #0xcade, lsl #16
     fb0:	cmp	w1, w0
     fb4:	b.eq	fc8 <try_reopen_undo_file+0x258>  // b.none
     fb8:	mov	x0, #0xb7ac                	// #47020
     fbc:	movk	x0, #0x7f2b, lsl #16
     fc0:	str	x0, [sp, #768]
     fc4:	b	11a0 <try_reopen_undo_file+0x430>
     fc8:	ldr	x0, [sp, #16]
     fcc:	ldr	x0, [x0, #48]
     fd0:	ldr	w0, [x0, #4]
     fd4:	str	w0, [sp, #708]
     fd8:	ldr	x0, [sp, #16]
     fdc:	ldr	x0, [x0, #48]
     fe0:	str	wzr, [x0, #4]
     fe4:	ldr	x0, [sp, #16]
     fe8:	ldr	x0, [x0, #48]
     fec:	ldr	w1, [sp, #744]
     ff0:	mov	x2, x1
     ff4:	mov	x1, x0
     ff8:	mov	w0, #0xffffffff            	// #-1
     ffc:	bl	0 <ext2fs_crc32c_le>
    1000:	str	w0, [sp, #704]
    1004:	ldr	w1, [sp, #708]
    1008:	ldr	w0, [sp, #704]
    100c:	cmp	w1, w0
    1010:	b.eq	1024 <try_reopen_undo_file+0x2b4>  // b.none
    1014:	mov	x0, #0xb7ac                	// #47020
    1018:	movk	x0, #0x7f2b, lsl #16
    101c:	str	x0, [sp, #768]
    1020:	b	11a0 <try_reopen_undo_file+0x430>
    1024:	ldr	x0, [sp, #784]
    1028:	add	x0, x0, #0x1
    102c:	str	x0, [sp, #784]
    1030:	ldr	x0, [sp, #16]
    1034:	ldr	x1, [x0, #56]
    1038:	ldr	x0, [sp, #776]
    103c:	sub	x0, x1, x0
    1040:	str	x0, [sp, #752]
    1044:	ldr	x1, [sp, #752]
    1048:	ldr	x0, [sp, #712]
    104c:	cmp	x1, x0
    1050:	b.ls	105c <try_reopen_undo_file+0x2ec>  // b.plast
    1054:	ldr	x0, [sp, #712]
    1058:	str	x0, [sp, #752]
    105c:	str	xzr, [sp, #760]
    1060:	ldr	x0, [sp, #16]
    1064:	ldr	x0, [x0, #48]
    1068:	add	x0, x0, #0x10
    106c:	str	x0, [sp, #792]
    1070:	b	1130 <try_reopen_undo_file+0x3c0>
    1074:	ldr	x0, [sp, #792]
    1078:	ldr	x0, [x0]
    107c:	str	x0, [sp, #696]
    1080:	ldr	w1, [sp, #740]
    1084:	ldr	x0, [sp, #696]
    1088:	mul	x1, x1, x0
    108c:	ldr	w0, [sp, #744]
    1090:	udiv	x0, x1, x0
    1094:	str	x0, [sp, #688]
    1098:	ldr	x0, [sp, #792]
    109c:	ldr	w0, [x0, #12]
    10a0:	mov	w0, w0
    10a4:	str	x0, [sp, #680]
    10a8:	ldr	x0, [sp, #16]
    10ac:	ldr	x3, [x0, #104]
    10b0:	ldr	w1, [sp, #744]
    10b4:	ldr	x0, [sp, #680]
    10b8:	add	x0, x1, x0
    10bc:	sub	x1, x0, #0x1
    10c0:	ldr	w0, [sp, #744]
    10c4:	udiv	x0, x1, x0
    10c8:	mov	w2, w0
    10cc:	ldr	x1, [sp, #688]
    10d0:	mov	x0, x3
    10d4:	bl	0 <ext2fs_mark_block_bitmap_range2>
    10d8:	ldr	w1, [sp, #744]
    10dc:	ldr	x0, [sp, #680]
    10e0:	add	x0, x1, x0
    10e4:	sub	x1, x0, #0x1
    10e8:	ldr	w0, [sp, #744]
    10ec:	udiv	x0, x1, x0
    10f0:	ldr	x1, [sp, #784]
    10f4:	add	x0, x1, x0
    10f8:	str	x0, [sp, #784]
    10fc:	ldr	x0, [sp, #16]
    1100:	ldr	x1, [sp, #784]
    1104:	str	x1, [x0, #16]
    1108:	ldr	x0, [sp, #760]
    110c:	add	x1, x0, #0x1
    1110:	ldr	x0, [sp, #16]
    1114:	str	x1, [x0, #64]
    1118:	ldr	x0, [sp, #760]
    111c:	add	x0, x0, #0x1
    1120:	str	x0, [sp, #760]
    1124:	ldr	x0, [sp, #792]
    1128:	add	x0, x0, #0x10
    112c:	str	x0, [sp, #792]
    1130:	ldr	x1, [sp, #760]
    1134:	ldr	x0, [sp, #752]
    1138:	cmp	x1, x0
    113c:	b.cc	1074 <try_reopen_undo_file+0x304>  // b.lo, b.ul, b.last
    1140:	ldr	x1, [sp, #776]
    1144:	ldr	x0, [sp, #712]
    1148:	add	x0, x1, x0
    114c:	str	x0, [sp, #776]
    1150:	ldr	x1, [sp, #776]
    1154:	ldr	x0, [sp, #720]
    1158:	cmp	x1, x0
    115c:	b.cc	f5c <try_reopen_undo_file+0x1ec>  // b.lo, b.ul, b.last
    1160:	ldr	w0, [sp, #212]
    1164:	and	w1, w0, #0xfffffffe
    1168:	ldr	x0, [sp, #16]
    116c:	str	w1, [x0, #532]
    1170:	ldr	w1, [sp, #216]
    1174:	ldr	x0, [sp, #16]
    1178:	str	w1, [x0, #536]
    117c:	ldr	w1, [sp, #220]
    1180:	ldr	x0, [sp, #16]
    1184:	str	w1, [x0, #540]
    1188:	ldr	w1, [sp, #224]
    118c:	ldr	x0, [sp, #16]
    1190:	str	w1, [x0, #544]
    1194:	ldr	x0, [sp, #768]
    1198:	b	1230 <try_reopen_undo_file+0x4c0>
    119c:	nop
    11a0:	ldr	x0, [sp, #16]
    11a4:	str	xzr, [x0, #16]
    11a8:	ldr	x0, [sp, #16]
    11ac:	ldr	x1, [x0, #16]
    11b0:	ldr	x0, [sp, #16]
    11b4:	str	x1, [x0, #24]
    11b8:	ldr	x0, [sp, #16]
    11bc:	str	xzr, [x0, #64]
    11c0:	ldr	x0, [sp, #16]
    11c4:	add	x0, x0, #0x30
    11c8:	bl	0 <ext2fs_free_mem>
    11cc:	ldr	x0, [sp, #16]
    11d0:	ldr	x0, [x0, #104]
    11d4:	bl	0 <ext2fs_free_generic_bitmap>
    11d8:	ldr	x0, [sp, #16]
    11dc:	str	wzr, [x0, #88]
    11e0:	b	122c <try_reopen_undo_file+0x4bc>
    11e4:	nop
    11e8:	b	1218 <try_reopen_undo_file+0x4a8>
    11ec:	nop
    11f0:	b	1218 <try_reopen_undo_file+0x4a8>
    11f4:	nop
    11f8:	b	1218 <try_reopen_undo_file+0x4a8>
    11fc:	nop
    1200:	b	1218 <try_reopen_undo_file+0x4a8>
    1204:	nop
    1208:	b	1218 <try_reopen_undo_file+0x4a8>
    120c:	nop
    1210:	b	1218 <try_reopen_undo_file+0x4a8>
    1214:	nop
    1218:	mov	x0, #0xb7ac                	// #47020
    121c:	movk	x0, #0x7f2b, lsl #16
    1220:	str	x0, [sp, #768]
    1224:	b	122c <try_reopen_undo_file+0x4bc>
    1228:	nop
    122c:	ldr	x0, [sp, #768]
    1230:	ldp	x29, x30, [sp]
    1234:	add	sp, sp, #0x320
    1238:	ret

000000000000123c <undo_atexit>:
    123c:	stp	x29, x30, [sp, #-48]!
    1240:	mov	x29, sp
    1244:	str	x0, [sp, #24]
    1248:	ldr	x0, [sp, #24]
    124c:	str	x0, [sp, #40]
    1250:	mov	w1, #0x1                   	// #1
    1254:	ldr	x0, [sp, #40]
    1258:	bl	c4 <write_undo_indexes>
    125c:	str	x0, [sp, #32]
    1260:	ldr	x0, [sp, #40]
    1264:	ldr	x0, [x0, #8]
    1268:	ldr	x0, [x0, #8]
    126c:	ldr	x1, [x0, #24]
    1270:	ldr	x0, [sp, #40]
    1274:	ldr	x0, [x0, #8]
    1278:	blr	x1
    127c:	ldr	x0, [sp, #40]
    1280:	ldr	x3, [x0, #480]
    1284:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    1288:	add	x2, x0, #0x0
    128c:	ldr	x1, [sp, #32]
    1290:	mov	x0, x3
    1294:	bl	0 <com_err>
    1298:	nop
    129c:	ldp	x29, x30, [sp], #48
    12a0:	ret

00000000000012a4 <undo_open>:
    12a4:	stp	x29, x30, [sp, #-96]!
    12a8:	mov	x29, sp
    12ac:	str	x19, [sp, #16]
    12b0:	str	x0, [sp, #56]
    12b4:	str	w1, [sp, #52]
    12b8:	str	x2, [sp, #40]
    12bc:	str	xzr, [sp, #72]
    12c0:	str	xzr, [sp, #64]
    12c4:	mov	w0, #0xffffffff            	// #-1
    12c8:	str	w0, [sp, #92]
    12cc:	ldr	x0, [sp, #56]
    12d0:	cmp	x0, #0x0
    12d4:	b.ne	12e4 <undo_open+0x40>  // b.any
    12d8:	mov	x0, #0xb73a                	// #46906
    12dc:	movk	x0, #0x7f2b, lsl #16
    12e0:	b	16f4 <undo_open+0x450>
    12e4:	add	x0, sp, #0x48
    12e8:	mov	x1, x0
    12ec:	mov	x0, #0xc0                  	// #192
    12f0:	bl	0 <ext2fs_get_mem>
    12f4:	str	x0, [sp, #80]
    12f8:	ldr	x0, [sp, #80]
    12fc:	cmp	x0, #0x0
    1300:	b.ne	15cc <undo_open+0x328>  // b.any
    1304:	ldr	x0, [sp, #72]
    1308:	mov	x2, #0xc0                  	// #192
    130c:	mov	w1, #0x0                   	// #0
    1310:	bl	0 <memset>
    1314:	ldr	x0, [sp, #72]
    1318:	mov	x1, #0xb705                	// #46853
    131c:	movk	x1, #0x7f2b, lsl #16
    1320:	str	x1, [x0]
    1324:	add	x0, sp, #0x40
    1328:	mov	x1, x0
    132c:	mov	x0, #0x3e8                 	// #1000
    1330:	bl	0 <ext2fs_get_mem>
    1334:	str	x0, [sp, #80]
    1338:	ldr	x0, [sp, #80]
    133c:	cmp	x0, #0x0
    1340:	b.ne	15d4 <undo_open+0x330>  // b.any
    1344:	ldr	x0, [sp, #72]
    1348:	adrp	x1, f0 <write_undo_indexes+0x2c>
    134c:	add	x1, x1, #0x0
    1350:	ldr	x1, [x1]
    1354:	str	x1, [x0, #8]
    1358:	ldr	x0, [sp, #56]
    135c:	bl	0 <strlen>
    1360:	add	x2, x0, #0x1
    1364:	ldr	x0, [sp, #72]
    1368:	add	x0, x0, #0x10
    136c:	mov	x1, x0
    1370:	mov	x0, x2
    1374:	bl	0 <ext2fs_get_mem>
    1378:	str	x0, [sp, #80]
    137c:	ldr	x0, [sp, #80]
    1380:	cmp	x0, #0x0
    1384:	b.ne	15dc <undo_open+0x338>  // b.any
    1388:	ldr	x0, [sp, #72]
    138c:	ldr	x0, [x0, #16]
    1390:	ldr	x1, [sp, #56]
    1394:	bl	0 <strcpy>
    1398:	ldr	x0, [sp, #72]
    139c:	ldr	x1, [sp, #64]
    13a0:	str	x1, [x0, #168]
    13a4:	ldr	x0, [sp, #72]
    13a8:	mov	w1, #0x400                 	// #1024
    13ac:	str	w1, [x0, #24]
    13b0:	ldr	x0, [sp, #72]
    13b4:	str	xzr, [x0, #32]
    13b8:	ldr	x0, [sp, #72]
    13bc:	str	xzr, [x0, #40]
    13c0:	ldr	x0, [sp, #72]
    13c4:	mov	w1, #0x1                   	// #1
    13c8:	str	w1, [x0, #48]
    13cc:	ldr	x0, [sp, #64]
    13d0:	mov	x2, #0x3e8                 	// #1000
    13d4:	mov	w1, #0x0                   	// #0
    13d8:	bl	0 <memset>
    13dc:	ldr	x0, [sp, #64]
    13e0:	mov	w1, #0xb706                	// #46854
    13e4:	movk	w1, #0x7f2b, lsl #16
    13e8:	str	w1, [x0]
    13ec:	ldr	x0, [sp, #64]
    13f0:	mov	x1, #0x1                   	// #1
    13f4:	str	x1, [x0, #32]
    13f8:	ldr	x0, [sp, #64]
    13fc:	mov	x1, #0x2                   	// #2
    1400:	str	x1, [x0, #40]
    1404:	ldr	x0, [sp, #64]
    1408:	mov	x1, #0x3                   	// #3
    140c:	str	x1, [x0, #16]
    1410:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    1414:	add	x0, x0, #0x0
    1418:	ldr	x0, [x0]
    141c:	cmp	x0, #0x0
    1420:	b.eq	14ec <undo_open+0x248>  // b.none
    1424:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    1428:	add	x0, x0, #0x0
    142c:	ldr	x0, [x0]
    1430:	ldr	x3, [x0, #16]
    1434:	ldr	x0, [sp, #64]
    1438:	add	x0, x0, #0x48
    143c:	mov	x2, x0
    1440:	ldr	w1, [sp, #52]
    1444:	ldr	x0, [sp, #56]
    1448:	blr	x3
    144c:	str	x0, [sp, #80]
    1450:	ldr	x0, [sp, #80]
    1454:	cmp	x0, #0x0
    1458:	b.ne	15e4 <undo_open+0x340>  // b.any
    145c:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    1460:	add	x0, x0, #0x0
    1464:	ldr	x0, [x0]
    1468:	ldr	x19, [sp, #64]
    146c:	bl	0 <strdup>
    1470:	str	x0, [x19, #480]
    1474:	ldr	x0, [sp, #64]
    1478:	ldr	x0, [x0, #480]
    147c:	cmp	x0, #0x0
    1480:	b.eq	15ec <undo_open+0x348>  // b.none
    1484:	ldr	x0, [sp, #64]
    1488:	ldr	x0, [x0, #480]
    148c:	mov	w2, #0x180                 	// #384
    1490:	mov	w1, #0x42                  	// #66
    1494:	bl	0 <ext2fs_open_file>
    1498:	str	w0, [sp, #92]
    149c:	ldr	w0, [sp, #92]
    14a0:	cmp	w0, #0x0
    14a4:	b.lt	15f4 <undo_open+0x350>  // b.tstop
    14a8:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    14ac:	add	x0, x0, #0x0
    14b0:	ldr	x0, [x0]
    14b4:	ldr	x3, [x0, #16]
    14b8:	ldr	x0, [sp, #64]
    14bc:	ldr	x4, [x0, #480]
    14c0:	ldr	x0, [sp, #64]
    14c4:	add	x0, x0, #0x8
    14c8:	mov	x2, x0
    14cc:	mov	w1, #0x1                   	// #1
    14d0:	mov	x0, x4
    14d4:	blr	x3
    14d8:	str	x0, [sp, #80]
    14dc:	ldr	x0, [sp, #80]
    14e0:	cmp	x0, #0x0
    14e4:	b.eq	14fc <undo_open+0x258>  // b.none
    14e8:	b	1608 <undo_open+0x364>
    14ec:	ldr	x0, [sp, #64]
    14f0:	str	xzr, [x0, #72]
    14f4:	ldr	x0, [sp, #64]
    14f8:	str	xzr, [x0, #8]
    14fc:	ldr	x0, [sp, #64]
    1500:	ldr	x0, [x0, #72]
    1504:	cmp	x0, #0x0
    1508:	b.eq	1534 <undo_open+0x290>  // b.none
    150c:	ldr	x0, [sp, #72]
    1510:	ldr	w0, [x0, #52]
    1514:	and	w2, w0, #0xfffffffd
    1518:	ldr	x0, [sp, #64]
    151c:	ldr	x0, [x0, #72]
    1520:	ldr	w0, [x0, #52]
    1524:	and	w1, w0, #0x2
    1528:	ldr	x0, [sp, #72]
    152c:	orr	w1, w2, w1
    1530:	str	w1, [x0, #52]
    1534:	ldr	x0, [sp, #64]
    1538:	ldr	x0, [x0, #72]
    153c:	cmp	x0, #0x0
    1540:	b.eq	1550 <undo_open+0x2ac>  // b.none
    1544:	ldr	x0, [sp, #64]
    1548:	ldr	x0, [x0, #72]
    154c:	bl	bf8 <undo_err_handler_init>
    1550:	ldr	x0, [sp, #64]
    1554:	ldr	x0, [x0, #8]
    1558:	cmp	x0, #0x0
    155c:	b.eq	1580 <undo_open+0x2dc>  // b.none
    1560:	ldr	x0, [sp, #64]
    1564:	mov	x1, x0
    1568:	ldr	w0, [sp, #92]
    156c:	bl	d70 <try_reopen_undo_file>
    1570:	str	x0, [sp, #80]
    1574:	ldr	x0, [sp, #80]
    1578:	cmp	x0, #0x0
    157c:	b.ne	15fc <undo_open+0x358>  // b.any
    1580:	ldr	x0, [sp, #64]
    1584:	mov	x1, x0
    1588:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    158c:	add	x0, x0, #0x0
    1590:	bl	0 <ext2fs_add_exit_fn>
    1594:	str	x0, [sp, #80]
    1598:	ldr	x0, [sp, #80]
    159c:	cmp	x0, #0x0
    15a0:	b.ne	1604 <undo_open+0x360>  // b.any
    15a4:	ldr	x1, [sp, #72]
    15a8:	ldr	x0, [sp, #40]
    15ac:	str	x1, [x0]
    15b0:	ldr	w0, [sp, #92]
    15b4:	cmp	w0, #0x0
    15b8:	b.lt	15c4 <undo_open+0x320>  // b.tstop
    15bc:	ldr	w0, [sp, #92]
    15c0:	bl	0 <close>
    15c4:	ldr	x0, [sp, #80]
    15c8:	b	16f4 <undo_open+0x450>
    15cc:	nop
    15d0:	b	1608 <undo_open+0x364>
    15d4:	nop
    15d8:	b	1608 <undo_open+0x364>
    15dc:	nop
    15e0:	b	1608 <undo_open+0x364>
    15e4:	nop
    15e8:	b	1608 <undo_open+0x364>
    15ec:	nop
    15f0:	b	1608 <undo_open+0x364>
    15f4:	nop
    15f8:	b	1608 <undo_open+0x364>
    15fc:	nop
    1600:	b	1608 <undo_open+0x364>
    1604:	nop
    1608:	ldr	x0, [sp, #64]
    160c:	mov	x1, x0
    1610:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    1614:	add	x0, x0, #0x0
    1618:	bl	0 <ext2fs_remove_exit_fn>
    161c:	ldr	w0, [sp, #92]
    1620:	cmp	w0, #0x0
    1624:	b.lt	1630 <undo_open+0x38c>  // b.tstop
    1628:	ldr	w0, [sp, #92]
    162c:	bl	0 <close>
    1630:	ldr	x0, [sp, #64]
    1634:	cmp	x0, #0x0
    1638:	b.eq	1668 <undo_open+0x3c4>  // b.none
    163c:	ldr	x0, [sp, #64]
    1640:	ldr	x0, [x0, #8]
    1644:	cmp	x0, #0x0
    1648:	b.eq	1668 <undo_open+0x3c4>  // b.none
    164c:	ldr	x0, [sp, #64]
    1650:	ldr	x0, [x0, #8]
    1654:	ldr	x0, [x0, #8]
    1658:	ldr	x1, [x0, #24]
    165c:	ldr	x0, [sp, #64]
    1660:	ldr	x0, [x0, #8]
    1664:	blr	x1
    1668:	ldr	x0, [sp, #64]
    166c:	cmp	x0, #0x0
    1670:	b.eq	1690 <undo_open+0x3ec>  // b.none
    1674:	ldr	x0, [sp, #64]
    1678:	ldr	x0, [x0, #480]
    167c:	cmp	x0, #0x0
    1680:	b.eq	1690 <undo_open+0x3ec>  // b.none
    1684:	ldr	x0, [sp, #64]
    1688:	ldr	x0, [x0, #480]
    168c:	bl	0 <free>
    1690:	ldr	x0, [sp, #64]
    1694:	cmp	x0, #0x0
    1698:	b.eq	16c8 <undo_open+0x424>  // b.none
    169c:	ldr	x0, [sp, #64]
    16a0:	ldr	x0, [x0, #72]
    16a4:	cmp	x0, #0x0
    16a8:	b.eq	16c8 <undo_open+0x424>  // b.none
    16ac:	ldr	x0, [sp, #64]
    16b0:	ldr	x0, [x0, #72]
    16b4:	ldr	x0, [x0, #8]
    16b8:	ldr	x1, [x0, #24]
    16bc:	ldr	x0, [sp, #64]
    16c0:	ldr	x0, [x0, #72]
    16c4:	blr	x1
    16c8:	ldr	x0, [sp, #64]
    16cc:	cmp	x0, #0x0
    16d0:	b.eq	16dc <undo_open+0x438>  // b.none
    16d4:	add	x0, sp, #0x40
    16d8:	bl	0 <ext2fs_free_mem>
    16dc:	ldr	x0, [sp, #72]
    16e0:	cmp	x0, #0x0
    16e4:	b.eq	16f0 <undo_open+0x44c>  // b.none
    16e8:	add	x0, sp, #0x48
    16ec:	bl	0 <ext2fs_free_mem>
    16f0:	ldr	x0, [sp, #80]
    16f4:	ldr	x19, [sp, #16]
    16f8:	ldp	x29, x30, [sp], #96
    16fc:	ret

0000000000001700 <undo_close>:
    1700:	stp	x29, x30, [sp, #-64]!
    1704:	mov	x29, sp
    1708:	str	x0, [sp, #24]
    170c:	str	xzr, [sp, #56]
    1710:	ldr	x0, [sp, #24]
    1714:	ldr	x1, [x0]
    1718:	mov	x0, #0xb705                	// #46853
    171c:	movk	x0, #0x7f2b, lsl #16
    1720:	cmp	x1, x0
    1724:	b.eq	1734 <undo_close+0x34>  // b.none
    1728:	mov	x0, #0xb705                	// #46853
    172c:	movk	x0, #0x7f2b, lsl #16
    1730:	b	18b0 <undo_close+0x1b0>
    1734:	ldr	x0, [sp, #24]
    1738:	ldr	x0, [x0, #168]
    173c:	str	x0, [sp, #48]
    1740:	ldr	x0, [sp, #48]
    1744:	ldr	w1, [x0]
    1748:	mov	w0, #0xb706                	// #46854
    174c:	movk	w0, #0x7f2b, lsl #16
    1750:	cmp	w1, w0
    1754:	b.eq	1764 <undo_close+0x64>  // b.none
    1758:	mov	x0, #0xb706                	// #46854
    175c:	movk	x0, #0x7f2b, lsl #16
    1760:	b	18b0 <undo_close+0x1b0>
    1764:	ldr	x0, [sp, #24]
    1768:	ldr	w1, [x0, #48]
    176c:	sub	w1, w1, #0x1
    1770:	str	w1, [x0, #48]
    1774:	ldr	w0, [x0, #48]
    1778:	cmp	w0, #0x0
    177c:	b.le	1788 <undo_close+0x88>
    1780:	mov	x0, #0x0                   	// #0
    1784:	b	18b0 <undo_close+0x1b0>
    1788:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    178c:	add	x0, x0, #0x0
    1790:	bl	0 <getenv>
    1794:	cmp	x0, #0x0
    1798:	b.ne	17a8 <undo_close+0xa8>  // b.any
    179c:	ldr	x0, [sp, #48]
    17a0:	mov	w1, #0x1                   	// #1
    17a4:	str	w1, [x0, #532]
    17a8:	mov	w1, #0x1                   	// #1
    17ac:	ldr	x0, [sp, #48]
    17b0:	bl	c4 <write_undo_indexes>
    17b4:	str	x0, [sp, #40]
    17b8:	ldr	x1, [sp, #48]
    17bc:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    17c0:	add	x0, x0, #0x0
    17c4:	bl	0 <ext2fs_remove_exit_fn>
    17c8:	ldr	x0, [sp, #48]
    17cc:	ldr	x0, [x0, #72]
    17d0:	cmp	x0, #0x0
    17d4:	b.eq	17f8 <undo_close+0xf8>  // b.none
    17d8:	ldr	x0, [sp, #48]
    17dc:	ldr	x0, [x0, #72]
    17e0:	ldr	x0, [x0, #8]
    17e4:	ldr	x1, [x0, #24]
    17e8:	ldr	x0, [sp, #48]
    17ec:	ldr	x0, [x0, #72]
    17f0:	blr	x1
    17f4:	str	x0, [sp, #56]
    17f8:	ldr	x0, [sp, #48]
    17fc:	ldr	x0, [x0, #480]
    1800:	cmp	x0, #0x0
    1804:	b.eq	1814 <undo_close+0x114>  // b.none
    1808:	ldr	x0, [sp, #48]
    180c:	ldr	x0, [x0, #480]
    1810:	bl	0 <free>
    1814:	ldr	x0, [sp, #48]
    1818:	ldr	x0, [x0, #8]
    181c:	cmp	x0, #0x0
    1820:	b.eq	1840 <undo_close+0x140>  // b.none
    1824:	ldr	x0, [sp, #48]
    1828:	ldr	x0, [x0, #8]
    182c:	ldr	x0, [x0, #8]
    1830:	ldr	x1, [x0, #24]
    1834:	ldr	x0, [sp, #48]
    1838:	ldr	x0, [x0, #8]
    183c:	blr	x1
    1840:	ldr	x0, [sp, #48]
    1844:	add	x0, x0, #0x30
    1848:	bl	0 <ext2fs_free_mem>
    184c:	ldr	x0, [sp, #48]
    1850:	ldr	x0, [x0, #104]
    1854:	cmp	x0, #0x0
    1858:	b.eq	1868 <undo_close+0x168>  // b.none
    185c:	ldr	x0, [sp, #48]
    1860:	ldr	x0, [x0, #104]
    1864:	bl	0 <ext2fs_free_generic_bitmap>
    1868:	ldr	x0, [sp, #24]
    186c:	add	x0, x0, #0xa8
    1870:	bl	0 <ext2fs_free_mem>
    1874:	ldr	x0, [sp, #24]
    1878:	ldr	x0, [x0, #16]
    187c:	cmp	x0, #0x0
    1880:	b.eq	1890 <undo_close+0x190>  // b.none
    1884:	ldr	x0, [sp, #24]
    1888:	add	x0, x0, #0x10
    188c:	bl	0 <ext2fs_free_mem>
    1890:	add	x0, sp, #0x18
    1894:	bl	0 <ext2fs_free_mem>
    1898:	ldr	x0, [sp, #40]
    189c:	cmp	x0, #0x0
    18a0:	b.eq	18ac <undo_close+0x1ac>  // b.none
    18a4:	ldr	x0, [sp, #40]
    18a8:	b	18b0 <undo_close+0x1b0>
    18ac:	ldr	x0, [sp, #56]
    18b0:	ldp	x29, x30, [sp], #64
    18b4:	ret

00000000000018b8 <undo_set_blksize>:
    18b8:	stp	x29, x30, [sp, #-48]!
    18bc:	mov	x29, sp
    18c0:	str	x0, [sp, #24]
    18c4:	str	w1, [sp, #20]
    18c8:	str	xzr, [sp, #40]
    18cc:	ldr	x0, [sp, #24]
    18d0:	ldr	x1, [x0]
    18d4:	mov	x0, #0xb705                	// #46853
    18d8:	movk	x0, #0x7f2b, lsl #16
    18dc:	cmp	x1, x0
    18e0:	b.eq	18f0 <undo_set_blksize+0x38>  // b.none
    18e4:	mov	x0, #0xb705                	// #46853
    18e8:	movk	x0, #0x7f2b, lsl #16
    18ec:	b	19b4 <undo_set_blksize+0xfc>
    18f0:	ldr	x0, [sp, #24]
    18f4:	ldr	x0, [x0, #168]
    18f8:	str	x0, [sp, #32]
    18fc:	ldr	x0, [sp, #32]
    1900:	ldr	w1, [x0]
    1904:	mov	w0, #0xb706                	// #46854
    1908:	movk	w0, #0x7f2b, lsl #16
    190c:	cmp	w1, w0
    1910:	b.eq	1920 <undo_set_blksize+0x68>  // b.none
    1914:	mov	x0, #0xb706                	// #46854
    1918:	movk	x0, #0x7f2b, lsl #16
    191c:	b	19b4 <undo_set_blksize+0xfc>
    1920:	ldr	w0, [sp, #20]
    1924:	cmp	w0, #0x100, lsl #12
    1928:	b.gt	1938 <undo_set_blksize+0x80>
    192c:	ldr	w0, [sp, #20]
    1930:	cmp	w0, #0x3ff
    1934:	b.gt	1944 <undo_set_blksize+0x8c>
    1938:	mov	x0, #0xb747                	// #46919
    193c:	movk	x0, #0x7f2b, lsl #16
    1940:	b	19b4 <undo_set_blksize+0xfc>
    1944:	ldr	x0, [sp, #32]
    1948:	ldr	x0, [x0, #72]
    194c:	cmp	x0, #0x0
    1950:	b.eq	1978 <undo_set_blksize+0xc0>  // b.none
    1954:	ldr	x0, [sp, #32]
    1958:	ldr	x0, [x0, #72]
    195c:	ldr	x0, [x0, #8]
    1960:	ldr	x2, [x0, #32]
    1964:	ldr	x0, [sp, #32]
    1968:	ldr	x0, [x0, #72]
    196c:	ldr	w1, [sp, #20]
    1970:	blr	x2
    1974:	str	x0, [sp, #40]
    1978:	ldr	x0, [sp, #32]
    197c:	ldr	x0, [x0, #80]
    1980:	cmp	x0, #0x0
    1984:	b.eq	1998 <undo_set_blksize+0xe0>  // b.none
    1988:	ldr	x0, [sp, #32]
    198c:	ldr	w0, [x0, #88]
    1990:	cmp	w0, #0x0
    1994:	b.ne	19a4 <undo_set_blksize+0xec>  // b.any
    1998:	ldrsw	x1, [sp, #20]
    199c:	ldr	x0, [sp, #32]
    19a0:	str	x1, [x0, #80]
    19a4:	ldr	x0, [sp, #24]
    19a8:	ldr	w1, [sp, #20]
    19ac:	str	w1, [x0, #24]
    19b0:	ldr	x0, [sp, #40]
    19b4:	ldp	x29, x30, [sp], #48
    19b8:	ret

00000000000019bc <undo_read_blk64>:
    19bc:	stp	x29, x30, [sp, #-64]!
    19c0:	mov	x29, sp
    19c4:	str	x0, [sp, #40]
    19c8:	str	x1, [sp, #32]
    19cc:	str	w2, [sp, #28]
    19d0:	str	x3, [sp, #16]
    19d4:	str	xzr, [sp, #56]
    19d8:	ldr	x0, [sp, #40]
    19dc:	ldr	x1, [x0]
    19e0:	mov	x0, #0xb705                	// #46853
    19e4:	movk	x0, #0x7f2b, lsl #16
    19e8:	cmp	x1, x0
    19ec:	b.eq	19fc <undo_read_blk64+0x40>  // b.none
    19f0:	mov	x0, #0xb705                	// #46853
    19f4:	movk	x0, #0x7f2b, lsl #16
    19f8:	b	1a5c <undo_read_blk64+0xa0>
    19fc:	ldr	x0, [sp, #40]
    1a00:	ldr	x0, [x0, #168]
    1a04:	str	x0, [sp, #48]
    1a08:	ldr	x0, [sp, #48]
    1a0c:	ldr	w1, [x0]
    1a10:	mov	w0, #0xb706                	// #46854
    1a14:	movk	w0, #0x7f2b, lsl #16
    1a18:	cmp	w1, w0
    1a1c:	b.eq	1a2c <undo_read_blk64+0x70>  // b.none
    1a20:	mov	x0, #0xb706                	// #46854
    1a24:	movk	x0, #0x7f2b, lsl #16
    1a28:	b	1a5c <undo_read_blk64+0xa0>
    1a2c:	ldr	x0, [sp, #48]
    1a30:	ldr	x0, [x0, #72]
    1a34:	cmp	x0, #0x0
    1a38:	b.eq	1a58 <undo_read_blk64+0x9c>  // b.none
    1a3c:	ldr	x0, [sp, #48]
    1a40:	ldr	x0, [x0, #72]
    1a44:	ldr	x3, [sp, #16]
    1a48:	ldr	w2, [sp, #28]
    1a4c:	ldr	x1, [sp, #32]
    1a50:	bl	0 <io_channel_read_blk64>
    1a54:	str	x0, [sp, #56]
    1a58:	ldr	x0, [sp, #56]
    1a5c:	ldp	x29, x30, [sp], #64
    1a60:	ret

0000000000001a64 <undo_read_blk>:
    1a64:	stp	x29, x30, [sp, #-48]!
    1a68:	mov	x29, sp
    1a6c:	str	x0, [sp, #40]
    1a70:	str	x1, [sp, #32]
    1a74:	str	w2, [sp, #28]
    1a78:	str	x3, [sp, #16]
    1a7c:	ldr	x3, [sp, #16]
    1a80:	ldr	w2, [sp, #28]
    1a84:	ldr	x1, [sp, #32]
    1a88:	ldr	x0, [sp, #40]
    1a8c:	bl	19bc <undo_read_blk64>
    1a90:	ldp	x29, x30, [sp], #48
    1a94:	ret

0000000000001a98 <undo_write_blk64>:
    1a98:	stp	x29, x30, [sp, #-64]!
    1a9c:	mov	x29, sp
    1aa0:	str	x0, [sp, #40]
    1aa4:	str	x1, [sp, #32]
    1aa8:	str	w2, [sp, #28]
    1aac:	str	x3, [sp, #16]
    1ab0:	str	xzr, [sp, #56]
    1ab4:	ldr	x0, [sp, #40]
    1ab8:	ldr	x1, [x0]
    1abc:	mov	x0, #0xb705                	// #46853
    1ac0:	movk	x0, #0x7f2b, lsl #16
    1ac4:	cmp	x1, x0
    1ac8:	b.eq	1ad8 <undo_write_blk64+0x40>  // b.none
    1acc:	mov	x0, #0xb705                	// #46853
    1ad0:	movk	x0, #0x7f2b, lsl #16
    1ad4:	b	1b60 <undo_write_blk64+0xc8>
    1ad8:	ldr	x0, [sp, #40]
    1adc:	ldr	x0, [x0, #168]
    1ae0:	str	x0, [sp, #48]
    1ae4:	ldr	x0, [sp, #48]
    1ae8:	ldr	w1, [x0]
    1aec:	mov	w0, #0xb706                	// #46854
    1af0:	movk	w0, #0x7f2b, lsl #16
    1af4:	cmp	w1, w0
    1af8:	b.eq	1b08 <undo_write_blk64+0x70>  // b.none
    1afc:	mov	x0, #0xb706                	// #46854
    1b00:	movk	x0, #0x7f2b, lsl #16
    1b04:	b	1b60 <undo_write_blk64+0xc8>
    1b08:	ldr	w2, [sp, #28]
    1b0c:	ldr	x1, [sp, #32]
    1b10:	ldr	x0, [sp, #40]
    1b14:	bl	64c <undo_write_tdb>
    1b18:	str	x0, [sp, #56]
    1b1c:	ldr	x0, [sp, #56]
    1b20:	cmp	x0, #0x0
    1b24:	b.eq	1b30 <undo_write_blk64+0x98>  // b.none
    1b28:	ldr	x0, [sp, #56]
    1b2c:	b	1b60 <undo_write_blk64+0xc8>
    1b30:	ldr	x0, [sp, #48]
    1b34:	ldr	x0, [x0, #72]
    1b38:	cmp	x0, #0x0
    1b3c:	b.eq	1b5c <undo_write_blk64+0xc4>  // b.none
    1b40:	ldr	x0, [sp, #48]
    1b44:	ldr	x0, [x0, #72]
    1b48:	ldr	x3, [sp, #16]
    1b4c:	ldr	w2, [sp, #28]
    1b50:	ldr	x1, [sp, #32]
    1b54:	bl	0 <io_channel_write_blk64>
    1b58:	str	x0, [sp, #56]
    1b5c:	ldr	x0, [sp, #56]
    1b60:	ldp	x29, x30, [sp], #64
    1b64:	ret

0000000000001b68 <undo_write_blk>:
    1b68:	stp	x29, x30, [sp, #-48]!
    1b6c:	mov	x29, sp
    1b70:	str	x0, [sp, #40]
    1b74:	str	x1, [sp, #32]
    1b78:	str	w2, [sp, #28]
    1b7c:	str	x3, [sp, #16]
    1b80:	ldr	x3, [sp, #16]
    1b84:	ldr	w2, [sp, #28]
    1b88:	ldr	x1, [sp, #32]
    1b8c:	ldr	x0, [sp, #40]
    1b90:	bl	1a98 <undo_write_blk64>
    1b94:	ldp	x29, x30, [sp], #48
    1b98:	ret

0000000000001b9c <undo_write_byte>:
    1b9c:	stp	x29, x30, [sp, #-96]!
    1ba0:	mov	x29, sp
    1ba4:	str	x0, [sp, #40]
    1ba8:	str	x1, [sp, #32]
    1bac:	str	w2, [sp, #28]
    1bb0:	str	x3, [sp, #16]
    1bb4:	str	xzr, [sp, #88]
    1bb8:	ldr	x0, [sp, #40]
    1bbc:	ldr	x1, [x0]
    1bc0:	mov	x0, #0xb705                	// #46853
    1bc4:	movk	x0, #0x7f2b, lsl #16
    1bc8:	cmp	x1, x0
    1bcc:	b.eq	1bdc <undo_write_byte+0x40>  // b.none
    1bd0:	mov	x0, #0xb705                	// #46853
    1bd4:	movk	x0, #0x7f2b, lsl #16
    1bd8:	b	1cfc <undo_write_byte+0x160>
    1bdc:	ldr	x0, [sp, #40]
    1be0:	ldr	x0, [x0, #168]
    1be4:	str	x0, [sp, #80]
    1be8:	ldr	x0, [sp, #80]
    1bec:	ldr	w1, [x0]
    1bf0:	mov	w0, #0xb706                	// #46854
    1bf4:	movk	w0, #0x7f2b, lsl #16
    1bf8:	cmp	w1, w0
    1bfc:	b.eq	1c0c <undo_write_byte+0x70>  // b.none
    1c00:	mov	x0, #0xb706                	// #46854
    1c04:	movk	x0, #0x7f2b, lsl #16
    1c08:	b	1cfc <undo_write_byte+0x160>
    1c0c:	ldr	x0, [sp, #80]
    1c10:	ldr	x0, [x0, #96]
    1c14:	mov	x1, x0
    1c18:	ldr	x0, [sp, #32]
    1c1c:	add	x0, x1, x0
    1c20:	str	x0, [sp, #72]
    1c24:	ldr	x0, [sp, #40]
    1c28:	ldr	w0, [x0, #24]
    1c2c:	sxtw	x0, w0
    1c30:	ldr	x1, [sp, #72]
    1c34:	sdiv	x0, x1, x0
    1c38:	str	x0, [sp, #64]
    1c3c:	ldrsw	x2, [sp, #28]
    1c40:	ldr	x0, [sp, #40]
    1c44:	ldr	w0, [x0, #24]
    1c48:	sxtw	x1, w0
    1c4c:	ldr	x0, [sp, #72]
    1c50:	sdiv	x3, x0, x1
    1c54:	mul	x1, x3, x1
    1c58:	sub	x0, x0, x1
    1c5c:	add	x1, x2, x0
    1c60:	ldr	x0, [sp, #40]
    1c64:	ldr	w0, [x0, #24]
    1c68:	sxtw	x0, w0
    1c6c:	add	x0, x1, x0
    1c70:	sub	x1, x0, #0x1
    1c74:	ldr	x0, [sp, #40]
    1c78:	ldr	w0, [x0, #24]
    1c7c:	sxtw	x0, w0
    1c80:	sdiv	x0, x1, x0
    1c84:	str	x0, [sp, #56]
    1c88:	ldr	x0, [sp, #56]
    1c8c:	mov	w2, w0
    1c90:	ldr	x1, [sp, #64]
    1c94:	ldr	x0, [sp, #40]
    1c98:	bl	64c <undo_write_tdb>
    1c9c:	str	x0, [sp, #88]
    1ca0:	ldr	x0, [sp, #88]
    1ca4:	cmp	x0, #0x0
    1ca8:	b.eq	1cb4 <undo_write_byte+0x118>  // b.none
    1cac:	ldr	x0, [sp, #88]
    1cb0:	b	1cfc <undo_write_byte+0x160>
    1cb4:	ldr	x0, [sp, #80]
    1cb8:	ldr	x0, [x0, #72]
    1cbc:	cmp	x0, #0x0
    1cc0:	b.eq	1cf8 <undo_write_byte+0x15c>  // b.none
    1cc4:	ldr	x0, [sp, #80]
    1cc8:	ldr	x0, [x0, #72]
    1ccc:	ldr	x0, [x0, #8]
    1cd0:	ldr	x0, [x0, #64]
    1cd4:	cmp	x0, #0x0
    1cd8:	b.eq	1cf8 <undo_write_byte+0x15c>  // b.none
    1cdc:	ldr	x0, [sp, #80]
    1ce0:	ldr	x0, [x0, #72]
    1ce4:	ldr	x3, [sp, #16]
    1ce8:	ldr	w2, [sp, #28]
    1cec:	ldr	x1, [sp, #32]
    1cf0:	bl	0 <io_channel_write_byte>
    1cf4:	str	x0, [sp, #88]
    1cf8:	ldr	x0, [sp, #88]
    1cfc:	ldp	x29, x30, [sp], #96
    1d00:	ret

0000000000001d04 <undo_discard>:
    1d04:	stp	x29, x30, [sp, #-80]!
    1d08:	mov	x29, sp
    1d0c:	str	x0, [sp, #40]
    1d10:	str	x1, [sp, #32]
    1d14:	str	x2, [sp, #24]
    1d18:	str	xzr, [sp, #72]
    1d1c:	ldr	x0, [sp, #40]
    1d20:	ldr	x1, [x0]
    1d24:	mov	x0, #0xb705                	// #46853
    1d28:	movk	x0, #0x7f2b, lsl #16
    1d2c:	cmp	x1, x0
    1d30:	b.eq	1d40 <undo_discard+0x3c>  // b.none
    1d34:	mov	x0, #0xb705                	// #46853
    1d38:	movk	x0, #0x7f2b, lsl #16
    1d3c:	b	1de8 <undo_discard+0xe4>
    1d40:	ldr	x0, [sp, #40]
    1d44:	ldr	x0, [x0, #168]
    1d48:	str	x0, [sp, #64]
    1d4c:	ldr	x0, [sp, #64]
    1d50:	ldr	w1, [x0]
    1d54:	mov	w0, #0xb706                	// #46854
    1d58:	movk	w0, #0x7f2b, lsl #16
    1d5c:	cmp	w1, w0
    1d60:	b.eq	1d70 <undo_discard+0x6c>  // b.none
    1d64:	mov	x0, #0xb706                	// #46854
    1d68:	movk	x0, #0x7f2b, lsl #16
    1d6c:	b	1de8 <undo_discard+0xe4>
    1d70:	ldr	x1, [sp, #24]
    1d74:	mov	x0, #0x7fffffff            	// #2147483647
    1d78:	cmp	x1, x0
    1d7c:	b.ls	1d8c <undo_discard+0x88>  // b.plast
    1d80:	mov	x0, #0xb750                	// #46928
    1d84:	movk	x0, #0x7f2b, lsl #16
    1d88:	b	1de8 <undo_discard+0xe4>
    1d8c:	ldr	x0, [sp, #24]
    1d90:	str	w0, [sp, #60]
    1d94:	ldr	w2, [sp, #60]
    1d98:	ldr	x1, [sp, #32]
    1d9c:	ldr	x0, [sp, #40]
    1da0:	bl	64c <undo_write_tdb>
    1da4:	str	x0, [sp, #72]
    1da8:	ldr	x0, [sp, #72]
    1dac:	cmp	x0, #0x0
    1db0:	b.eq	1dbc <undo_discard+0xb8>  // b.none
    1db4:	ldr	x0, [sp, #72]
    1db8:	b	1de8 <undo_discard+0xe4>
    1dbc:	ldr	x0, [sp, #64]
    1dc0:	ldr	x0, [x0, #72]
    1dc4:	cmp	x0, #0x0
    1dc8:	b.eq	1de4 <undo_discard+0xe0>  // b.none
    1dcc:	ldr	x0, [sp, #64]
    1dd0:	ldr	x0, [x0, #72]
    1dd4:	ldr	x2, [sp, #24]
    1dd8:	ldr	x1, [sp, #32]
    1ddc:	bl	0 <io_channel_discard>
    1de0:	str	x0, [sp, #72]
    1de4:	ldr	x0, [sp, #72]
    1de8:	ldp	x29, x30, [sp], #80
    1dec:	ret

0000000000001df0 <undo_zeroout>:
    1df0:	stp	x29, x30, [sp, #-80]!
    1df4:	mov	x29, sp
    1df8:	str	x0, [sp, #40]
    1dfc:	str	x1, [sp, #32]
    1e00:	str	x2, [sp, #24]
    1e04:	str	xzr, [sp, #72]
    1e08:	ldr	x0, [sp, #40]
    1e0c:	ldr	x1, [x0]
    1e10:	mov	x0, #0xb705                	// #46853
    1e14:	movk	x0, #0x7f2b, lsl #16
    1e18:	cmp	x1, x0
    1e1c:	b.eq	1e2c <undo_zeroout+0x3c>  // b.none
    1e20:	mov	x0, #0xb705                	// #46853
    1e24:	movk	x0, #0x7f2b, lsl #16
    1e28:	b	1ed4 <undo_zeroout+0xe4>
    1e2c:	ldr	x0, [sp, #40]
    1e30:	ldr	x0, [x0, #168]
    1e34:	str	x0, [sp, #64]
    1e38:	ldr	x0, [sp, #64]
    1e3c:	ldr	w1, [x0]
    1e40:	mov	w0, #0xb706                	// #46854
    1e44:	movk	w0, #0x7f2b, lsl #16
    1e48:	cmp	w1, w0
    1e4c:	b.eq	1e5c <undo_zeroout+0x6c>  // b.none
    1e50:	mov	x0, #0xb706                	// #46854
    1e54:	movk	x0, #0x7f2b, lsl #16
    1e58:	b	1ed4 <undo_zeroout+0xe4>
    1e5c:	ldr	x1, [sp, #24]
    1e60:	mov	x0, #0x7fffffff            	// #2147483647
    1e64:	cmp	x1, x0
    1e68:	b.ls	1e78 <undo_zeroout+0x88>  // b.plast
    1e6c:	mov	x0, #0xb750                	// #46928
    1e70:	movk	x0, #0x7f2b, lsl #16
    1e74:	b	1ed4 <undo_zeroout+0xe4>
    1e78:	ldr	x0, [sp, #24]
    1e7c:	str	w0, [sp, #60]
    1e80:	ldr	w2, [sp, #60]
    1e84:	ldr	x1, [sp, #32]
    1e88:	ldr	x0, [sp, #40]
    1e8c:	bl	64c <undo_write_tdb>
    1e90:	str	x0, [sp, #72]
    1e94:	ldr	x0, [sp, #72]
    1e98:	cmp	x0, #0x0
    1e9c:	b.eq	1ea8 <undo_zeroout+0xb8>  // b.none
    1ea0:	ldr	x0, [sp, #72]
    1ea4:	b	1ed4 <undo_zeroout+0xe4>
    1ea8:	ldr	x0, [sp, #64]
    1eac:	ldr	x0, [x0, #72]
    1eb0:	cmp	x0, #0x0
    1eb4:	b.eq	1ed0 <undo_zeroout+0xe0>  // b.none
    1eb8:	ldr	x0, [sp, #64]
    1ebc:	ldr	x0, [x0, #72]
    1ec0:	ldr	x2, [sp, #24]
    1ec4:	ldr	x1, [sp, #32]
    1ec8:	bl	0 <io_channel_zeroout>
    1ecc:	str	x0, [sp, #72]
    1ed0:	ldr	x0, [sp, #72]
    1ed4:	ldp	x29, x30, [sp], #80
    1ed8:	ret

0000000000001edc <undo_cache_readahead>:
    1edc:	stp	x29, x30, [sp, #-64]!
    1ee0:	mov	x29, sp
    1ee4:	str	x0, [sp, #40]
    1ee8:	str	x1, [sp, #32]
    1eec:	str	x2, [sp, #24]
    1ef0:	str	xzr, [sp, #56]
    1ef4:	ldr	x0, [sp, #40]
    1ef8:	ldr	x1, [x0]
    1efc:	mov	x0, #0xb705                	// #46853
    1f00:	movk	x0, #0x7f2b, lsl #16
    1f04:	cmp	x1, x0
    1f08:	b.eq	1f18 <undo_cache_readahead+0x3c>  // b.none
    1f0c:	mov	x0, #0xb705                	// #46853
    1f10:	movk	x0, #0x7f2b, lsl #16
    1f14:	b	1f74 <undo_cache_readahead+0x98>
    1f18:	ldr	x0, [sp, #40]
    1f1c:	ldr	x0, [x0, #168]
    1f20:	str	x0, [sp, #48]
    1f24:	ldr	x0, [sp, #48]
    1f28:	ldr	w1, [x0]
    1f2c:	mov	w0, #0xb706                	// #46854
    1f30:	movk	w0, #0x7f2b, lsl #16
    1f34:	cmp	w1, w0
    1f38:	b.eq	1f48 <undo_cache_readahead+0x6c>  // b.none
    1f3c:	mov	x0, #0xb706                	// #46854
    1f40:	movk	x0, #0x7f2b, lsl #16
    1f44:	b	1f74 <undo_cache_readahead+0x98>
    1f48:	ldr	x0, [sp, #48]
    1f4c:	ldr	x0, [x0, #72]
    1f50:	cmp	x0, #0x0
    1f54:	b.eq	1f70 <undo_cache_readahead+0x94>  // b.none
    1f58:	ldr	x0, [sp, #48]
    1f5c:	ldr	x0, [x0, #72]
    1f60:	ldr	x2, [sp, #24]
    1f64:	ldr	x1, [sp, #32]
    1f68:	bl	0 <io_channel_cache_readahead>
    1f6c:	str	x0, [sp, #56]
    1f70:	ldr	x0, [sp, #56]
    1f74:	ldp	x29, x30, [sp], #64
    1f78:	ret

0000000000001f7c <undo_flush>:
    1f7c:	stp	x29, x30, [sp, #-48]!
    1f80:	mov	x29, sp
    1f84:	str	x0, [sp, #24]
    1f88:	str	xzr, [sp, #40]
    1f8c:	ldr	x0, [sp, #24]
    1f90:	ldr	x1, [x0]
    1f94:	mov	x0, #0xb705                	// #46853
    1f98:	movk	x0, #0x7f2b, lsl #16
    1f9c:	cmp	x1, x0
    1fa0:	b.eq	1fb0 <undo_flush+0x34>  // b.none
    1fa4:	mov	x0, #0xb705                	// #46853
    1fa8:	movk	x0, #0x7f2b, lsl #16
    1fac:	b	2014 <undo_flush+0x98>
    1fb0:	ldr	x0, [sp, #24]
    1fb4:	ldr	x0, [x0, #168]
    1fb8:	str	x0, [sp, #32]
    1fbc:	ldr	x0, [sp, #32]
    1fc0:	ldr	w1, [x0]
    1fc4:	mov	w0, #0xb706                	// #46854
    1fc8:	movk	w0, #0x7f2b, lsl #16
    1fcc:	cmp	w1, w0
    1fd0:	b.eq	1fe0 <undo_flush+0x64>  // b.none
    1fd4:	mov	x0, #0xb706                	// #46854
    1fd8:	movk	x0, #0x7f2b, lsl #16
    1fdc:	b	2014 <undo_flush+0x98>
    1fe0:	ldr	x0, [sp, #32]
    1fe4:	ldr	x0, [x0, #72]
    1fe8:	cmp	x0, #0x0
    1fec:	b.eq	2010 <undo_flush+0x94>  // b.none
    1ff0:	ldr	x0, [sp, #32]
    1ff4:	ldr	x0, [x0, #72]
    1ff8:	ldr	x0, [x0, #8]
    1ffc:	ldr	x1, [x0, #56]
    2000:	ldr	x0, [sp, #32]
    2004:	ldr	x0, [x0, #72]
    2008:	blr	x1
    200c:	str	x0, [sp, #40]
    2010:	ldr	x0, [sp, #40]
    2014:	ldp	x29, x30, [sp], #48
    2018:	ret

000000000000201c <undo_set_option>:
    201c:	stp	x29, x30, [sp, #-80]!
    2020:	mov	x29, sp
    2024:	str	x0, [sp, #40]
    2028:	str	x1, [sp, #32]
    202c:	str	x2, [sp, #24]
    2030:	str	xzr, [sp, #72]
    2034:	ldr	x0, [sp, #40]
    2038:	ldr	x1, [x0]
    203c:	mov	x0, #0xb705                	// #46853
    2040:	movk	x0, #0x7f2b, lsl #16
    2044:	cmp	x1, x0
    2048:	b.eq	2058 <undo_set_option+0x3c>  // b.none
    204c:	mov	x0, #0xb705                	// #46853
    2050:	movk	x0, #0x7f2b, lsl #16
    2054:	b	2220 <undo_set_option+0x204>
    2058:	ldr	x0, [sp, #40]
    205c:	ldr	x0, [x0, #168]
    2060:	str	x0, [sp, #64]
    2064:	ldr	x0, [sp, #64]
    2068:	ldr	w1, [x0]
    206c:	mov	w0, #0xb706                	// #46854
    2070:	movk	w0, #0x7f2b, lsl #16
    2074:	cmp	w1, w0
    2078:	b.eq	2088 <undo_set_option+0x6c>  // b.none
    207c:	mov	x0, #0xb706                	// #46854
    2080:	movk	x0, #0x7f2b, lsl #16
    2084:	b	2220 <undo_set_option+0x204>
    2088:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    208c:	add	x1, x0, #0x0
    2090:	ldr	x0, [sp, #32]
    2094:	bl	0 <strcmp>
    2098:	cmp	w0, #0x0
    209c:	b.ne	2150 <undo_set_option+0x134>  // b.any
    20a0:	ldr	x0, [sp, #24]
    20a4:	cmp	x0, #0x0
    20a8:	b.ne	20b8 <undo_set_option+0x9c>  // b.any
    20ac:	mov	x0, #0xb747                	// #46919
    20b0:	movk	x0, #0x7f2b, lsl #16
    20b4:	b	2220 <undo_set_option+0x204>
    20b8:	add	x0, sp, #0x30
    20bc:	mov	w2, #0x0                   	// #0
    20c0:	mov	x1, x0
    20c4:	ldr	x0, [sp, #24]
    20c8:	bl	0 <strtoul>
    20cc:	str	x0, [sp, #56]
    20d0:	ldr	x0, [sp, #48]
    20d4:	ldrb	w0, [x0]
    20d8:	cmp	w0, #0x0
    20dc:	b.eq	20ec <undo_set_option+0xd0>  // b.none
    20e0:	mov	x0, #0xb747                	// #46919
    20e4:	movk	x0, #0x7f2b, lsl #16
    20e8:	b	2220 <undo_set_option+0x204>
    20ec:	ldr	x0, [sp, #56]
    20f0:	cmp	x0, #0x100, lsl #12
    20f4:	b.hi	2104 <undo_set_option+0xe8>  // b.pmore
    20f8:	ldr	x0, [sp, #56]
    20fc:	cmp	x0, #0x3ff
    2100:	b.hi	2110 <undo_set_option+0xf4>  // b.pmore
    2104:	mov	x0, #0xb747                	// #46919
    2108:	movk	x0, #0x7f2b, lsl #16
    210c:	b	2220 <undo_set_option+0x204>
    2110:	ldr	x0, [sp, #64]
    2114:	ldr	x0, [x0, #80]
    2118:	cmp	x0, #0x0
    211c:	b.eq	2130 <undo_set_option+0x114>  // b.none
    2120:	ldr	x0, [sp, #64]
    2124:	ldr	w0, [x0, #88]
    2128:	cmp	w0, #0x0
    212c:	b.ne	2148 <undo_set_option+0x12c>  // b.any
    2130:	ldr	x0, [sp, #64]
    2134:	mov	w1, #0xffffffff            	// #-1
    2138:	str	w1, [x0, #88]
    213c:	ldr	x0, [sp, #64]
    2140:	ldr	x1, [sp, #56]
    2144:	str	x1, [x0, #80]
    2148:	mov	x0, #0x0                   	// #0
    214c:	b	2220 <undo_set_option+0x204>
    2150:	ldr	x0, [sp, #64]
    2154:	ldr	x0, [x0, #72]
    2158:	cmp	x0, #0x0
    215c:	b.eq	21a0 <undo_set_option+0x184>  // b.none
    2160:	ldr	x0, [sp, #64]
    2164:	ldr	x0, [x0, #72]
    2168:	ldr	x0, [x0, #8]
    216c:	ldr	x0, [x0, #72]
    2170:	cmp	x0, #0x0
    2174:	b.eq	21a0 <undo_set_option+0x184>  // b.none
    2178:	ldr	x0, [sp, #64]
    217c:	ldr	x0, [x0, #72]
    2180:	ldr	x0, [x0, #8]
    2184:	ldr	x3, [x0, #72]
    2188:	ldr	x0, [sp, #64]
    218c:	ldr	x0, [x0, #72]
    2190:	ldr	x2, [sp, #24]
    2194:	ldr	x1, [sp, #32]
    2198:	blr	x3
    219c:	str	x0, [sp, #72]
    21a0:	ldr	x0, [sp, #72]
    21a4:	cmp	x0, #0x0
    21a8:	b.ne	221c <undo_set_option+0x200>  // b.any
    21ac:	adrp	x0, 0 <e2undo_set_feature_fs_offset>
    21b0:	add	x1, x0, #0x0
    21b4:	ldr	x0, [sp, #32]
    21b8:	bl	0 <strcmp>
    21bc:	cmp	w0, #0x0
    21c0:	b.ne	221c <undo_set_option+0x200>  // b.any
    21c4:	ldr	x0, [sp, #24]
    21c8:	cmp	x0, #0x0
    21cc:	b.ne	21dc <undo_set_option+0x1c0>  // b.any
    21d0:	mov	x0, #0xb747                	// #46919
    21d4:	movk	x0, #0x7f2b, lsl #16
    21d8:	b	2220 <undo_set_option+0x204>
    21dc:	add	x0, sp, #0x30
    21e0:	mov	w2, #0x0                   	// #0
    21e4:	mov	x1, x0
    21e8:	ldr	x0, [sp, #24]
    21ec:	bl	0 <strtoul>
    21f0:	str	x0, [sp, #56]
    21f4:	ldr	x0, [sp, #48]
    21f8:	ldrb	w0, [x0]
    21fc:	cmp	w0, #0x0
    2200:	b.eq	2210 <undo_set_option+0x1f4>  // b.none
    2204:	mov	x0, #0xb747                	// #46919
    2208:	movk	x0, #0x7f2b, lsl #16
    220c:	b	2220 <undo_set_option+0x204>
    2210:	ldr	x1, [sp, #56]
    2214:	ldr	x0, [sp, #64]
    2218:	str	x1, [x0, #96]
    221c:	ldr	x0, [sp, #72]
    2220:	ldp	x29, x30, [sp], #80
    2224:	ret

0000000000002228 <undo_get_stats>:
    2228:	stp	x29, x30, [sp, #-48]!
    222c:	mov	x29, sp
    2230:	str	x0, [sp, #24]
    2234:	str	x1, [sp, #16]
    2238:	str	xzr, [sp, #40]
    223c:	ldr	x0, [sp, #24]
    2240:	ldr	x1, [x0]
    2244:	mov	x0, #0xb705                	// #46853
    2248:	movk	x0, #0x7f2b, lsl #16
    224c:	cmp	x1, x0
    2250:	b.eq	2260 <undo_get_stats+0x38>  // b.none
    2254:	mov	x0, #0xb705                	// #46853
    2258:	movk	x0, #0x7f2b, lsl #16
    225c:	b	22c8 <undo_get_stats+0xa0>
    2260:	ldr	x0, [sp, #24]
    2264:	ldr	x0, [x0, #168]
    2268:	str	x0, [sp, #32]
    226c:	ldr	x0, [sp, #32]
    2270:	ldr	w1, [x0]
    2274:	mov	w0, #0xb706                	// #46854
    2278:	movk	w0, #0x7f2b, lsl #16
    227c:	cmp	w1, w0
    2280:	b.eq	2290 <undo_get_stats+0x68>  // b.none
    2284:	mov	x0, #0xb706                	// #46854
    2288:	movk	x0, #0x7f2b, lsl #16
    228c:	b	22c8 <undo_get_stats+0xa0>
    2290:	ldr	x0, [sp, #32]
    2294:	ldr	x0, [x0, #72]
    2298:	cmp	x0, #0x0
    229c:	b.eq	22c4 <undo_get_stats+0x9c>  // b.none
    22a0:	ldr	x0, [sp, #32]
    22a4:	ldr	x0, [x0, #72]
    22a8:	ldr	x0, [x0, #8]
    22ac:	ldr	x2, [x0, #80]
    22b0:	ldr	x0, [sp, #32]
    22b4:	ldr	x0, [x0, #72]
    22b8:	ldr	x1, [sp, #16]
    22bc:	blr	x2
    22c0:	str	x0, [sp, #40]
    22c4:	ldr	x0, [sp, #40]
    22c8:	ldp	x29, x30, [sp], #48
    22cc:	ret

unix_io.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fsP_is_disk_device>:
       0:	sub	sp, sp, #0x10
       4:	str	w0, [sp, #12]
       8:	ldr	w0, [sp, #12]
       c:	and	w0, w0, #0xf000
      10:	cmp	w0, #0x6, lsl #12
      14:	cset	w0, eq  // eq = none
      18:	and	w0, w0, #0xff
      1c:	add	sp, sp, #0x10
      20:	ret

0000000000000024 <unix_get_stats>:
      24:	sub	sp, sp, #0x20
      28:	str	x0, [sp, #8]
      2c:	str	x1, [sp]
      30:	str	xzr, [sp, #24]
      34:	ldr	x0, [sp, #8]
      38:	ldr	x1, [x0]
      3c:	mov	x0, #0xb705                	// #46853
      40:	movk	x0, #0x7f2b, lsl #16
      44:	cmp	x1, x0
      48:	b.eq	58 <unix_get_stats+0x34>  // b.none
      4c:	mov	x0, #0xb705                	// #46853
      50:	movk	x0, #0x7f2b, lsl #16
      54:	b	a8 <unix_get_stats+0x84>
      58:	ldr	x0, [sp, #8]
      5c:	ldr	x0, [x0, #168]
      60:	str	x0, [sp, #16]
      64:	ldr	x0, [sp, #16]
      68:	ldr	w1, [x0]
      6c:	mov	w0, #0xb706                	// #46854
      70:	movk	w0, #0x7f2b, lsl #16
      74:	cmp	w1, w0
      78:	b.eq	88 <unix_get_stats+0x64>  // b.none
      7c:	mov	x0, #0xb706                	// #46854
      80:	movk	x0, #0x7f2b, lsl #16
      84:	b	a8 <unix_get_stats+0x84>
      88:	ldr	x0, [sp]
      8c:	cmp	x0, #0x0
      90:	b.eq	a4 <unix_get_stats+0x80>  // b.none
      94:	ldr	x0, [sp, #16]
      98:	add	x1, x0, #0xe8
      9c:	ldr	x0, [sp]
      a0:	str	x1, [x0]
      a4:	ldr	x0, [sp, #24]
      a8:	add	sp, sp, #0x20
      ac:	ret

00000000000000b0 <safe_getenv>:
      b0:	stp	x29, x30, [sp, #-48]!
      b4:	mov	x29, sp
      b8:	str	x19, [sp, #16]
      bc:	str	x0, [sp, #40]
      c0:	bl	0 <getuid>
      c4:	mov	w19, w0
      c8:	bl	0 <geteuid>
      cc:	cmp	w19, w0
      d0:	b.ne	e8 <safe_getenv+0x38>  // b.any
      d4:	bl	0 <getgid>
      d8:	mov	w19, w0
      dc:	bl	0 <getegid>
      e0:	cmp	w19, w0
      e4:	b.eq	f0 <safe_getenv+0x40>  // b.none
      e8:	mov	x0, #0x0                   	// #0
      ec:	b	120 <safe_getenv+0x70>
      f0:	mov	w4, #0x0                   	// #0
      f4:	mov	w3, #0x0                   	// #0
      f8:	mov	w2, #0x0                   	// #0
      fc:	mov	w1, #0x0                   	// #0
     100:	mov	w0, #0x3                   	// #3
     104:	bl	0 <prctl>
     108:	cmp	w0, #0x0
     10c:	b.ne	118 <safe_getenv+0x68>  // b.any
     110:	mov	x0, #0x0                   	// #0
     114:	b	120 <safe_getenv+0x70>
     118:	ldr	x0, [sp, #40]
     11c:	bl	0 <secure_getenv>
     120:	ldr	x19, [sp, #16]
     124:	ldp	x29, x30, [sp], #48
     128:	ret

000000000000012c <raw_read_blk>:
     12c:	stp	x29, x30, [sp, #-112]!
     130:	mov	x29, sp
     134:	str	x0, [sp, #56]
     138:	str	x1, [sp, #48]
     13c:	str	x2, [sp, #40]
     140:	str	w3, [sp, #36]
     144:	str	x4, [sp, #24]
     148:	str	wzr, [sp, #92]
     14c:	ldr	x0, [sp, #24]
     150:	str	x0, [sp, #80]
     154:	str	xzr, [sp, #72]
     158:	ldr	w0, [sp, #36]
     15c:	cmp	w0, #0x0
     160:	b.ge	174 <raw_read_blk+0x48>  // b.tcont
     164:	ldr	w0, [sp, #36]
     168:	neg	w0, w0
     16c:	sxtw	x0, w0
     170:	b	188 <raw_read_blk+0x5c>
     174:	ldrsw	x1, [sp, #36]
     178:	ldr	x0, [sp, #56]
     17c:	ldr	w0, [x0, #24]
     180:	sxtw	x0, w0
     184:	mul	x0, x1, x0
     188:	str	x0, [sp, #96]
     18c:	ldr	x0, [sp, #48]
     190:	ldr	x1, [x0, #240]
     194:	ldr	x0, [sp, #96]
     198:	add	x1, x1, x0
     19c:	ldr	x0, [sp, #48]
     1a0:	str	x1, [x0, #240]
     1a4:	ldr	x0, [sp, #56]
     1a8:	ldr	w0, [x0, #24]
     1ac:	sxtw	x1, w0
     1b0:	ldr	x0, [sp, #40]
     1b4:	mul	x1, x1, x0
     1b8:	ldr	x0, [sp, #48]
     1bc:	ldr	x0, [x0, #24]
     1c0:	add	x0, x1, x0
     1c4:	str	x0, [sp, #64]
     1c8:	ldr	x0, [sp, #48]
     1cc:	ldr	w0, [x0, #8]
     1d0:	and	w0, w0, #0x8
     1d4:	cmp	w0, #0x0
     1d8:	b.eq	230 <raw_read_blk+0x104>  // b.none
     1dc:	ldr	x0, [sp, #48]
     1e0:	ldr	w0, [x0, #4]
     1e4:	mov	w2, #0x0                   	// #0
     1e8:	ldr	x1, [sp, #64]
     1ec:	bl	0 <ext2fs_llseek>
     1f0:	mov	x1, x0
     1f4:	ldr	x0, [sp, #64]
     1f8:	cmp	x0, x1
     1fc:	b.eq	3cc <raw_read_blk+0x2a0>  // b.none
     200:	bl	0 <__errno_location>
     204:	ldr	w0, [x0]
     208:	cmp	w0, #0x0
     20c:	b.eq	220 <raw_read_blk+0xf4>  // b.none
     210:	bl	0 <__errno_location>
     214:	ldr	w0, [x0]
     218:	sxtw	x0, w0
     21c:	b	228 <raw_read_blk+0xfc>
     220:	mov	x0, #0xb745                	// #46917
     224:	movk	x0, #0x7f2b, lsl #16
     228:	str	x0, [sp, #104]
     22c:	b	4d8 <raw_read_blk+0x3ac>
     230:	ldr	x0, [sp, #56]
     234:	ldr	w0, [x0, #184]
     238:	cmp	w0, #0x0
     23c:	b.eq	280 <raw_read_blk+0x154>  // b.none
     240:	ldr	x0, [sp, #56]
     244:	ldr	w0, [x0, #184]
     248:	sub	w0, w0, #0x1
     24c:	sxtw	x1, w0
     250:	ldr	x0, [sp, #80]
     254:	and	x0, x1, x0
     258:	cmp	x0, #0x0
     25c:	b.ne	2bc <raw_read_blk+0x190>  // b.any
     260:	ldr	x0, [sp, #56]
     264:	ldr	w0, [x0, #184]
     268:	sub	w0, w0, #0x1
     26c:	sxtw	x1, w0
     270:	ldr	x0, [sp, #96]
     274:	and	x0, x1, x0
     278:	cmp	x0, #0x0
     27c:	b.ne	2bc <raw_read_blk+0x190>  // b.any
     280:	ldr	x0, [sp, #48]
     284:	ldr	w0, [x0, #4]
     288:	ldr	x1, [sp, #96]
     28c:	ldr	x3, [sp, #64]
     290:	mov	x2, x1
     294:	ldr	x1, [sp, #80]
     298:	bl	0 <pread64>
     29c:	str	w0, [sp, #92]
     2a0:	ldrsw	x0, [sp, #92]
     2a4:	ldr	x1, [sp, #96]
     2a8:	cmp	x1, x0
     2ac:	b.ne	2b8 <raw_read_blk+0x18c>  // b.any
     2b0:	mov	x0, #0x0                   	// #0
     2b4:	b	560 <raw_read_blk+0x434>
     2b8:	str	wzr, [sp, #92]
     2bc:	ldr	x0, [sp, #48]
     2c0:	ldr	w0, [x0, #4]
     2c4:	mov	w2, #0x0                   	// #0
     2c8:	ldr	x1, [sp, #64]
     2cc:	bl	0 <ext2fs_llseek>
     2d0:	mov	x1, x0
     2d4:	ldr	x0, [sp, #64]
     2d8:	cmp	x0, x1
     2dc:	b.eq	310 <raw_read_blk+0x1e4>  // b.none
     2e0:	bl	0 <__errno_location>
     2e4:	ldr	w0, [x0]
     2e8:	cmp	w0, #0x0
     2ec:	b.eq	300 <raw_read_blk+0x1d4>  // b.none
     2f0:	bl	0 <__errno_location>
     2f4:	ldr	w0, [x0]
     2f8:	sxtw	x0, w0
     2fc:	b	308 <raw_read_blk+0x1dc>
     300:	mov	x0, #0xb745                	// #46917
     304:	movk	x0, #0x7f2b, lsl #16
     308:	str	x0, [sp, #104]
     30c:	b	4d8 <raw_read_blk+0x3ac>
     310:	ldr	x0, [sp, #56]
     314:	ldr	w0, [x0, #184]
     318:	cmp	w0, #0x0
     31c:	b.eq	360 <raw_read_blk+0x234>  // b.none
     320:	ldr	x0, [sp, #56]
     324:	ldr	w0, [x0, #184]
     328:	sub	w0, w0, #0x1
     32c:	sxtw	x1, w0
     330:	ldr	x0, [sp, #80]
     334:	and	x0, x1, x0
     338:	cmp	x0, #0x0
     33c:	b.ne	3d4 <raw_read_blk+0x2a8>  // b.any
     340:	ldr	x0, [sp, #56]
     344:	ldr	w0, [x0, #184]
     348:	sub	w0, w0, #0x1
     34c:	sxtw	x1, w0
     350:	ldr	x0, [sp, #96]
     354:	and	x0, x1, x0
     358:	cmp	x0, #0x0
     35c:	b.ne	3d4 <raw_read_blk+0x2a8>  // b.any
     360:	ldr	x0, [sp, #48]
     364:	ldr	w0, [x0, #4]
     368:	ldr	x1, [sp, #96]
     36c:	mov	x2, x1
     370:	ldr	x1, [sp, #80]
     374:	bl	0 <read>
     378:	str	w0, [sp, #92]
     37c:	ldrsw	x0, [sp, #92]
     380:	ldr	x1, [sp, #96]
     384:	cmp	x1, x0
     388:	b.eq	3c4 <raw_read_blk+0x298>  // b.none
     38c:	nop
     390:	ldr	w0, [sp, #92]
     394:	cmp	w0, #0x0
     398:	b.ge	3b4 <raw_read_blk+0x288>  // b.tcont
     39c:	bl	0 <__errno_location>
     3a0:	ldr	w0, [x0]
     3a4:	sxtw	x0, w0
     3a8:	str	x0, [sp, #104]
     3ac:	str	wzr, [sp, #92]
     3b0:	b	4d8 <raw_read_blk+0x3ac>
     3b4:	mov	x0, #0xb724                	// #46884
     3b8:	movk	x0, #0x7f2b, lsl #16
     3bc:	str	x0, [sp, #104]
     3c0:	b	4d8 <raw_read_blk+0x3ac>
     3c4:	mov	x0, #0x0                   	// #0
     3c8:	b	560 <raw_read_blk+0x434>
     3cc:	nop
     3d0:	b	4c4 <raw_read_blk+0x398>
     3d4:	nop
     3d8:	b	4c4 <raw_read_blk+0x398>
     3dc:	ldr	x0, [sp, #48]
     3e0:	ldr	w3, [x0, #4]
     3e4:	ldr	x0, [sp, #48]
     3e8:	ldr	x1, [x0, #224]
     3ec:	ldr	x0, [sp, #56]
     3f0:	ldr	w0, [x0, #24]
     3f4:	sxtw	x0, w0
     3f8:	mov	x2, x0
     3fc:	mov	w0, w3
     400:	bl	0 <read>
     404:	str	w0, [sp, #92]
     408:	ldr	x0, [sp, #56]
     40c:	ldr	w0, [x0, #24]
     410:	ldr	w1, [sp, #92]
     414:	cmp	w1, w0
     418:	b.eq	44c <raw_read_blk+0x320>  // b.none
     41c:	ldr	x0, [sp, #72]
     420:	str	w0, [sp, #92]
     424:	ldr	x0, [sp, #72]
     428:	neg	x0, x0
     42c:	ldr	x1, [sp, #80]
     430:	add	x0, x1, x0
     434:	str	x0, [sp, #80]
     438:	ldr	x1, [sp, #96]
     43c:	ldr	x0, [sp, #72]
     440:	add	x0, x1, x0
     444:	str	x0, [sp, #96]
     448:	b	390 <raw_read_blk+0x264>
     44c:	ldr	x0, [sp, #96]
     450:	str	w0, [sp, #92]
     454:	ldr	x0, [sp, #56]
     458:	ldr	w0, [x0, #24]
     45c:	sxtw	x0, w0
     460:	ldr	x1, [sp, #96]
     464:	cmp	x1, x0
     468:	b.le	478 <raw_read_blk+0x34c>
     46c:	ldr	x0, [sp, #56]
     470:	ldr	w0, [x0, #24]
     474:	str	w0, [sp, #92]
     478:	ldr	x0, [sp, #48]
     47c:	ldr	x0, [x0, #224]
     480:	ldrsw	x1, [sp, #92]
     484:	mov	x2, x1
     488:	mov	x1, x0
     48c:	ldr	x0, [sp, #80]
     490:	bl	0 <memcpy>
     494:	ldrsw	x0, [sp, #92]
     498:	ldr	x1, [sp, #72]
     49c:	add	x0, x1, x0
     4a0:	str	x0, [sp, #72]
     4a4:	ldrsw	x0, [sp, #92]
     4a8:	ldr	x1, [sp, #96]
     4ac:	sub	x0, x1, x0
     4b0:	str	x0, [sp, #96]
     4b4:	ldrsw	x0, [sp, #92]
     4b8:	ldr	x1, [sp, #80]
     4bc:	add	x0, x1, x0
     4c0:	str	x0, [sp, #80]
     4c4:	ldr	x0, [sp, #96]
     4c8:	cmp	x0, #0x0
     4cc:	b.gt	3dc <raw_read_blk+0x2b0>
     4d0:	mov	x0, #0x0                   	// #0
     4d4:	b	560 <raw_read_blk+0x434>
     4d8:	ldr	w0, [sp, #92]
     4dc:	cmp	w0, #0x0
     4e0:	b.lt	51c <raw_read_blk+0x3f0>  // b.tstop
     4e4:	ldrsw	x0, [sp, #92]
     4e8:	ldr	x1, [sp, #96]
     4ec:	cmp	x1, x0
     4f0:	b.le	51c <raw_read_blk+0x3f0>
     4f4:	ldrsw	x0, [sp, #92]
     4f8:	ldr	x1, [sp, #80]
     4fc:	add	x3, x1, x0
     500:	ldrsw	x0, [sp, #92]
     504:	ldr	x1, [sp, #96]
     508:	sub	x0, x1, x0
     50c:	mov	x2, x0
     510:	mov	w1, #0x0                   	// #0
     514:	mov	x0, x3
     518:	bl	0 <memset>
     51c:	ldr	x0, [sp, #56]
     520:	ldr	x0, [x0, #32]
     524:	cmp	x0, #0x0
     528:	b.eq	55c <raw_read_blk+0x430>  // b.none
     52c:	ldr	x0, [sp, #56]
     530:	ldr	x7, [x0, #32]
     534:	ldr	x0, [sp, #96]
     538:	ldr	x6, [sp, #104]
     53c:	ldr	w5, [sp, #92]
     540:	mov	x4, x0
     544:	ldr	x3, [sp, #80]
     548:	ldr	w2, [sp, #36]
     54c:	ldr	x1, [sp, #40]
     550:	ldr	x0, [sp, #56]
     554:	blr	x7
     558:	str	x0, [sp, #104]
     55c:	ldr	x0, [sp, #104]
     560:	ldp	x29, x30, [sp], #112
     564:	ret

0000000000000568 <raw_write_blk>:
     568:	stp	x29, x30, [sp, #-112]!
     56c:	mov	x29, sp
     570:	str	x0, [sp, #56]
     574:	str	x1, [sp, #48]
     578:	str	x2, [sp, #40]
     57c:	str	w3, [sp, #36]
     580:	str	x4, [sp, #24]
     584:	str	wzr, [sp, #92]
     588:	ldr	x0, [sp, #24]
     58c:	str	x0, [sp, #72]
     590:	ldr	w0, [sp, #36]
     594:	cmp	w0, #0x1
     598:	b.ne	5b0 <raw_write_blk+0x48>  // b.any
     59c:	ldr	x0, [sp, #56]
     5a0:	ldr	w0, [x0, #24]
     5a4:	sxtw	x0, w0
     5a8:	str	x0, [sp, #104]
     5ac:	b	5e8 <raw_write_blk+0x80>
     5b0:	ldr	w0, [sp, #36]
     5b4:	cmp	w0, #0x0
     5b8:	b.ge	5d0 <raw_write_blk+0x68>  // b.tcont
     5bc:	ldr	w0, [sp, #36]
     5c0:	neg	w0, w0
     5c4:	sxtw	x0, w0
     5c8:	str	x0, [sp, #104]
     5cc:	b	5e8 <raw_write_blk+0x80>
     5d0:	ldrsw	x1, [sp, #36]
     5d4:	ldr	x0, [sp, #56]
     5d8:	ldr	w0, [x0, #24]
     5dc:	sxtw	x0, w0
     5e0:	mul	x0, x1, x0
     5e4:	str	x0, [sp, #104]
     5e8:	ldr	x0, [sp, #48]
     5ec:	ldr	x1, [x0, #248]
     5f0:	ldr	x0, [sp, #104]
     5f4:	add	x1, x1, x0
     5f8:	ldr	x0, [sp, #48]
     5fc:	str	x1, [x0, #248]
     600:	ldr	x0, [sp, #56]
     604:	ldr	w0, [x0, #24]
     608:	sxtw	x1, w0
     60c:	ldr	x0, [sp, #40]
     610:	mul	x1, x1, x0
     614:	ldr	x0, [sp, #48]
     618:	ldr	x0, [x0, #24]
     61c:	add	x0, x1, x0
     620:	str	x0, [sp, #96]
     624:	ldr	x0, [sp, #48]
     628:	ldr	w0, [x0, #8]
     62c:	and	w0, w0, #0x8
     630:	cmp	w0, #0x0
     634:	b.eq	68c <raw_write_blk+0x124>  // b.none
     638:	ldr	x0, [sp, #48]
     63c:	ldr	w0, [x0, #4]
     640:	mov	w2, #0x0                   	// #0
     644:	ldr	x1, [sp, #96]
     648:	bl	0 <ext2fs_llseek>
     64c:	mov	x1, x0
     650:	ldr	x0, [sp, #96]
     654:	cmp	x0, x1
     658:	b.eq	828 <raw_write_blk+0x2c0>  // b.none
     65c:	bl	0 <__errno_location>
     660:	ldr	w0, [x0]
     664:	cmp	w0, #0x0
     668:	b.eq	67c <raw_write_blk+0x114>  // b.none
     66c:	bl	0 <__errno_location>
     670:	ldr	w0, [x0]
     674:	sxtw	x0, w0
     678:	b	684 <raw_write_blk+0x11c>
     67c:	mov	x0, #0xb745                	// #46917
     680:	movk	x0, #0x7f2b, lsl #16
     684:	str	x0, [sp, #80]
     688:	b	a20 <raw_write_blk+0x4b8>
     68c:	ldr	x0, [sp, #56]
     690:	ldr	w0, [x0, #184]
     694:	cmp	w0, #0x0
     698:	b.eq	6dc <raw_write_blk+0x174>  // b.none
     69c:	ldr	x0, [sp, #56]
     6a0:	ldr	w0, [x0, #184]
     6a4:	sub	w0, w0, #0x1
     6a8:	sxtw	x1, w0
     6ac:	ldr	x0, [sp, #72]
     6b0:	and	x0, x1, x0
     6b4:	cmp	x0, #0x0
     6b8:	b.ne	714 <raw_write_blk+0x1ac>  // b.any
     6bc:	ldr	x0, [sp, #56]
     6c0:	ldr	w0, [x0, #184]
     6c4:	sub	w0, w0, #0x1
     6c8:	sxtw	x1, w0
     6cc:	ldr	x0, [sp, #104]
     6d0:	and	x0, x1, x0
     6d4:	cmp	x0, #0x0
     6d8:	b.ne	714 <raw_write_blk+0x1ac>  // b.any
     6dc:	ldr	x0, [sp, #48]
     6e0:	ldr	w0, [x0, #4]
     6e4:	ldr	x1, [sp, #104]
     6e8:	ldr	x3, [sp, #96]
     6ec:	mov	x2, x1
     6f0:	ldr	x1, [sp, #72]
     6f4:	bl	0 <pwrite64>
     6f8:	str	w0, [sp, #92]
     6fc:	ldrsw	x0, [sp, #92]
     700:	ldr	x1, [sp, #104]
     704:	cmp	x1, x0
     708:	b.ne	714 <raw_write_blk+0x1ac>  // b.any
     70c:	mov	x0, #0x0                   	// #0
     710:	b	a64 <raw_write_blk+0x4fc>
     714:	ldr	x0, [sp, #48]
     718:	ldr	w0, [x0, #4]
     71c:	mov	w2, #0x0                   	// #0
     720:	ldr	x1, [sp, #96]
     724:	bl	0 <ext2fs_llseek>
     728:	mov	x1, x0
     72c:	ldr	x0, [sp, #96]
     730:	cmp	x0, x1
     734:	b.eq	768 <raw_write_blk+0x200>  // b.none
     738:	bl	0 <__errno_location>
     73c:	ldr	w0, [x0]
     740:	cmp	w0, #0x0
     744:	b.eq	758 <raw_write_blk+0x1f0>  // b.none
     748:	bl	0 <__errno_location>
     74c:	ldr	w0, [x0]
     750:	sxtw	x0, w0
     754:	b	760 <raw_write_blk+0x1f8>
     758:	mov	x0, #0xb745                	// #46917
     75c:	movk	x0, #0x7f2b, lsl #16
     760:	str	x0, [sp, #80]
     764:	b	a20 <raw_write_blk+0x4b8>
     768:	ldr	x0, [sp, #56]
     76c:	ldr	w0, [x0, #184]
     770:	cmp	w0, #0x0
     774:	b.eq	7b8 <raw_write_blk+0x250>  // b.none
     778:	ldr	x0, [sp, #56]
     77c:	ldr	w0, [x0, #184]
     780:	sub	w0, w0, #0x1
     784:	sxtw	x1, w0
     788:	ldr	x0, [sp, #72]
     78c:	and	x0, x1, x0
     790:	cmp	x0, #0x0
     794:	b.ne	830 <raw_write_blk+0x2c8>  // b.any
     798:	ldr	x0, [sp, #56]
     79c:	ldr	w0, [x0, #184]
     7a0:	sub	w0, w0, #0x1
     7a4:	sxtw	x1, w0
     7a8:	ldr	x0, [sp, #104]
     7ac:	and	x0, x1, x0
     7b0:	cmp	x0, #0x0
     7b4:	b.ne	830 <raw_write_blk+0x2c8>  // b.any
     7b8:	ldr	x0, [sp, #48]
     7bc:	ldr	w0, [x0, #4]
     7c0:	ldr	x1, [sp, #104]
     7c4:	mov	x2, x1
     7c8:	ldr	x1, [sp, #72]
     7cc:	bl	0 <write>
     7d0:	str	w0, [sp, #92]
     7d4:	ldr	w0, [sp, #92]
     7d8:	cmp	w0, #0x0
     7dc:	b.ge	7f4 <raw_write_blk+0x28c>  // b.tcont
     7e0:	bl	0 <__errno_location>
     7e4:	ldr	w0, [x0]
     7e8:	sxtw	x0, w0
     7ec:	str	x0, [sp, #80]
     7f0:	b	a20 <raw_write_blk+0x4b8>
     7f4:	ldrsw	x0, [sp, #92]
     7f8:	ldr	x1, [sp, #104]
     7fc:	cmp	x1, x0
     800:	b.eq	820 <raw_write_blk+0x2b8>  // b.none
     804:	nop
     808:	b	810 <raw_write_blk+0x2a8>
     80c:	nop
     810:	mov	x0, #0xb725                	// #46885
     814:	movk	x0, #0x7f2b, lsl #16
     818:	str	x0, [sp, #80]
     81c:	b	a20 <raw_write_blk+0x4b8>
     820:	mov	x0, #0x0                   	// #0
     824:	b	a64 <raw_write_blk+0x4fc>
     828:	nop
     82c:	b	a0c <raw_write_blk+0x4a4>
     830:	nop
     834:	b	a0c <raw_write_blk+0x4a4>
     838:	ldr	x0, [sp, #56]
     83c:	ldr	w0, [x0, #24]
     840:	sxtw	x0, w0
     844:	ldr	x1, [sp, #104]
     848:	cmp	x1, x0
     84c:	b.ge	8e4 <raw_write_blk+0x37c>  // b.tcont
     850:	ldr	x0, [sp, #48]
     854:	ldr	w3, [x0, #4]
     858:	ldr	x0, [sp, #48]
     85c:	ldr	x1, [x0, #224]
     860:	ldr	x0, [sp, #56]
     864:	ldr	w0, [x0, #24]
     868:	sxtw	x0, w0
     86c:	mov	x2, x0
     870:	mov	w0, w3
     874:	bl	0 <read>
     878:	str	w0, [sp, #92]
     87c:	ldr	x0, [sp, #56]
     880:	ldr	w0, [x0, #24]
     884:	ldr	w1, [sp, #92]
     888:	cmp	w1, w0
     88c:	b.eq	8e4 <raw_write_blk+0x37c>  // b.none
     890:	ldr	w0, [sp, #92]
     894:	cmp	w0, #0x0
     898:	b.ge	8b0 <raw_write_blk+0x348>  // b.tcont
     89c:	bl	0 <__errno_location>
     8a0:	ldr	w0, [x0]
     8a4:	sxtw	x0, w0
     8a8:	str	x0, [sp, #80]
     8ac:	b	a20 <raw_write_blk+0x4b8>
     8b0:	ldr	x0, [sp, #48]
     8b4:	ldr	x1, [x0, #224]
     8b8:	ldrsw	x0, [sp, #92]
     8bc:	add	x3, x1, x0
     8c0:	ldr	x0, [sp, #56]
     8c4:	ldr	w1, [x0, #24]
     8c8:	ldr	w0, [sp, #92]
     8cc:	sub	w0, w1, w0
     8d0:	sxtw	x0, w0
     8d4:	mov	x2, x0
     8d8:	mov	w1, #0x0                   	// #0
     8dc:	mov	x0, x3
     8e0:	bl	0 <memset>
     8e4:	ldr	x0, [sp, #104]
     8e8:	str	w0, [sp, #92]
     8ec:	ldr	x0, [sp, #56]
     8f0:	ldr	w0, [x0, #24]
     8f4:	sxtw	x0, w0
     8f8:	ldr	x1, [sp, #104]
     8fc:	cmp	x1, x0
     900:	b.le	910 <raw_write_blk+0x3a8>
     904:	ldr	x0, [sp, #56]
     908:	ldr	w0, [x0, #24]
     90c:	str	w0, [sp, #92]
     910:	ldr	x0, [sp, #48]
     914:	ldr	x0, [x0, #224]
     918:	ldrsw	x1, [sp, #92]
     91c:	mov	x2, x1
     920:	ldr	x1, [sp, #72]
     924:	bl	0 <memcpy>
     928:	ldr	x0, [sp, #48]
     92c:	ldr	w0, [x0, #4]
     930:	mov	w2, #0x0                   	// #0
     934:	ldr	x1, [sp, #96]
     938:	bl	0 <ext2fs_llseek>
     93c:	mov	x1, x0
     940:	ldr	x0, [sp, #96]
     944:	cmp	x0, x1
     948:	b.eq	97c <raw_write_blk+0x414>  // b.none
     94c:	bl	0 <__errno_location>
     950:	ldr	w0, [x0]
     954:	cmp	w0, #0x0
     958:	b.eq	96c <raw_write_blk+0x404>  // b.none
     95c:	bl	0 <__errno_location>
     960:	ldr	w0, [x0]
     964:	sxtw	x0, w0
     968:	b	974 <raw_write_blk+0x40c>
     96c:	mov	x0, #0xb745                	// #46917
     970:	movk	x0, #0x7f2b, lsl #16
     974:	str	x0, [sp, #80]
     978:	b	a20 <raw_write_blk+0x4b8>
     97c:	ldr	x0, [sp, #48]
     980:	ldr	w3, [x0, #4]
     984:	ldr	x0, [sp, #48]
     988:	ldr	x1, [x0, #224]
     98c:	ldr	x0, [sp, #56]
     990:	ldr	w0, [x0, #24]
     994:	sxtw	x0, w0
     998:	mov	x2, x0
     99c:	mov	w0, w3
     9a0:	bl	0 <write>
     9a4:	str	w0, [sp, #92]
     9a8:	ldr	w0, [sp, #92]
     9ac:	cmp	w0, #0x0
     9b0:	b.ge	9c8 <raw_write_blk+0x460>  // b.tcont
     9b4:	bl	0 <__errno_location>
     9b8:	ldr	w0, [x0]
     9bc:	sxtw	x0, w0
     9c0:	str	x0, [sp, #80]
     9c4:	b	a20 <raw_write_blk+0x4b8>
     9c8:	ldr	x0, [sp, #56]
     9cc:	ldr	w0, [x0, #24]
     9d0:	ldr	w1, [sp, #92]
     9d4:	cmp	w1, w0
     9d8:	b.ne	80c <raw_write_blk+0x2a4>  // b.any
     9dc:	ldrsw	x0, [sp, #92]
     9e0:	ldr	x1, [sp, #104]
     9e4:	sub	x0, x1, x0
     9e8:	str	x0, [sp, #104]
     9ec:	ldrsw	x0, [sp, #92]
     9f0:	ldr	x1, [sp, #72]
     9f4:	add	x0, x1, x0
     9f8:	str	x0, [sp, #72]
     9fc:	ldrsw	x0, [sp, #92]
     a00:	ldr	x1, [sp, #96]
     a04:	add	x0, x1, x0
     a08:	str	x0, [sp, #96]
     a0c:	ldr	x0, [sp, #104]
     a10:	cmp	x0, #0x0
     a14:	b.gt	838 <raw_write_blk+0x2d0>
     a18:	mov	x0, #0x0                   	// #0
     a1c:	b	a64 <raw_write_blk+0x4fc>
     a20:	ldr	x0, [sp, #56]
     a24:	ldr	x0, [x0, #40]
     a28:	cmp	x0, #0x0
     a2c:	b.eq	a60 <raw_write_blk+0x4f8>  // b.none
     a30:	ldr	x0, [sp, #56]
     a34:	ldr	x7, [x0, #40]
     a38:	ldr	x0, [sp, #104]
     a3c:	ldr	x6, [sp, #80]
     a40:	ldr	w5, [sp, #92]
     a44:	mov	x4, x0
     a48:	ldr	x3, [sp, #72]
     a4c:	ldr	w2, [sp, #36]
     a50:	ldr	x1, [sp, #40]
     a54:	ldr	x0, [sp, #56]
     a58:	blr	x7
     a5c:	str	x0, [sp, #80]
     a60:	ldr	x0, [sp, #80]
     a64:	ldp	x29, x30, [sp], #112
     a68:	ret

0000000000000a6c <alloc_cache>:
     a6c:	stp	x29, x30, [sp, #-64]!
     a70:	mov	x29, sp
     a74:	str	x0, [sp, #24]
     a78:	str	x1, [sp, #16]
     a7c:	ldr	x0, [sp, #16]
     a80:	str	wzr, [x0, #16]
     a84:	str	wzr, [sp, #44]
     a88:	ldr	x0, [sp, #16]
     a8c:	add	x0, x0, #0x20
     a90:	str	x0, [sp, #48]
     a94:	b	b24 <alloc_cache+0xb8>
     a98:	ldr	x0, [sp, #48]
     a9c:	str	xzr, [x0, #8]
     aa0:	ldr	x0, [sp, #48]
     aa4:	str	wzr, [x0, #16]
     aa8:	ldr	x0, [sp, #48]
     aac:	ldrb	w1, [x0, #20]
     ab0:	and	w1, w1, #0xfffffffe
     ab4:	strb	w1, [x0, #20]
     ab8:	ldr	x0, [sp, #48]
     abc:	ldrb	w1, [x0, #20]
     ac0:	and	w1, w1, #0xfffffffd
     ac4:	strb	w1, [x0, #20]
     ac8:	ldr	x0, [sp, #48]
     acc:	ldr	x0, [x0]
     ad0:	cmp	x0, #0x0
     ad4:	b.eq	ae0 <alloc_cache+0x74>  // b.none
     ad8:	ldr	x0, [sp, #48]
     adc:	bl	0 <ext2fs_free_mem>
     ae0:	ldr	x0, [sp, #48]
     ae4:	mov	x2, x0
     ae8:	mov	w1, #0x0                   	// #0
     aec:	ldr	x0, [sp, #24]
     af0:	bl	0 <io_channel_alloc_buf>
     af4:	str	x0, [sp, #56]
     af8:	ldr	x0, [sp, #56]
     afc:	cmp	x0, #0x0
     b00:	b.eq	b0c <alloc_cache+0xa0>  // b.none
     b04:	ldr	x0, [sp, #56]
     b08:	b	b90 <alloc_cache+0x124>
     b0c:	ldr	w0, [sp, #44]
     b10:	add	w0, w0, #0x1
     b14:	str	w0, [sp, #44]
     b18:	ldr	x0, [sp, #48]
     b1c:	add	x0, x0, #0x18
     b20:	str	x0, [sp, #48]
     b24:	ldr	w0, [sp, #44]
     b28:	cmp	w0, #0x7
     b2c:	b.le	a98 <alloc_cache+0x2c>
     b30:	ldr	x0, [sp, #24]
     b34:	ldr	w0, [x0, #184]
     b38:	cmp	w0, #0x0
     b3c:	b.ne	b54 <alloc_cache+0xe8>  // b.any
     b40:	ldr	x0, [sp, #16]
     b44:	ldr	w0, [x0, #8]
     b48:	and	w0, w0, #0x8
     b4c:	cmp	w0, #0x0
     b50:	b.eq	b8c <alloc_cache+0x120>  // b.none
     b54:	ldr	x0, [sp, #16]
     b58:	ldr	x0, [x0, #224]
     b5c:	cmp	x0, #0x0
     b60:	b.eq	b70 <alloc_cache+0x104>  // b.none
     b64:	ldr	x0, [sp, #16]
     b68:	add	x0, x0, #0xe0
     b6c:	bl	0 <ext2fs_free_mem>
     b70:	ldr	x0, [sp, #16]
     b74:	add	x0, x0, #0xe0
     b78:	mov	x2, x0
     b7c:	mov	w1, #0x0                   	// #0
     b80:	ldr	x0, [sp, #24]
     b84:	bl	0 <io_channel_alloc_buf>
     b88:	str	x0, [sp, #56]
     b8c:	ldr	x0, [sp, #56]
     b90:	ldp	x29, x30, [sp], #64
     b94:	ret

0000000000000b98 <free_cache>:
     b98:	stp	x29, x30, [sp, #-48]!
     b9c:	mov	x29, sp
     ba0:	str	x0, [sp, #24]
     ba4:	ldr	x0, [sp, #24]
     ba8:	str	wzr, [x0, #16]
     bac:	str	wzr, [sp, #36]
     bb0:	ldr	x0, [sp, #24]
     bb4:	add	x0, x0, #0x20
     bb8:	str	x0, [sp, #40]
     bbc:	b	c20 <free_cache+0x88>
     bc0:	ldr	x0, [sp, #40]
     bc4:	str	xzr, [x0, #8]
     bc8:	ldr	x0, [sp, #40]
     bcc:	str	wzr, [x0, #16]
     bd0:	ldr	x0, [sp, #40]
     bd4:	ldrb	w1, [x0, #20]
     bd8:	and	w1, w1, #0xfffffffe
     bdc:	strb	w1, [x0, #20]
     be0:	ldr	x0, [sp, #40]
     be4:	ldrb	w1, [x0, #20]
     be8:	and	w1, w1, #0xfffffffd
     bec:	strb	w1, [x0, #20]
     bf0:	ldr	x0, [sp, #40]
     bf4:	ldr	x0, [x0]
     bf8:	cmp	x0, #0x0
     bfc:	b.eq	c08 <free_cache+0x70>  // b.none
     c00:	ldr	x0, [sp, #40]
     c04:	bl	0 <ext2fs_free_mem>
     c08:	ldr	w0, [sp, #36]
     c0c:	add	w0, w0, #0x1
     c10:	str	w0, [sp, #36]
     c14:	ldr	x0, [sp, #40]
     c18:	add	x0, x0, #0x18
     c1c:	str	x0, [sp, #40]
     c20:	ldr	w0, [sp, #36]
     c24:	cmp	w0, #0x7
     c28:	b.le	bc0 <free_cache+0x28>
     c2c:	ldr	x0, [sp, #24]
     c30:	ldr	x0, [x0, #224]
     c34:	cmp	x0, #0x0
     c38:	b.eq	c48 <free_cache+0xb0>  // b.none
     c3c:	ldr	x0, [sp, #24]
     c40:	add	x0, x0, #0xe0
     c44:	bl	0 <ext2fs_free_mem>
     c48:	nop
     c4c:	ldp	x29, x30, [sp], #48
     c50:	ret

0000000000000c54 <find_cached_block>:
     c54:	sub	sp, sp, #0x40
     c58:	str	x0, [sp, #24]
     c5c:	str	x1, [sp, #16]
     c60:	str	x2, [sp, #8]
     c64:	str	xzr, [sp, #40]
     c68:	ldr	x0, [sp, #40]
     c6c:	str	x0, [sp, #48]
     c70:	str	wzr, [sp, #36]
     c74:	ldr	x0, [sp, #24]
     c78:	add	x0, x0, #0x20
     c7c:	str	x0, [sp, #56]
     c80:	b	d40 <find_cached_block+0xec>
     c84:	ldr	x0, [sp, #56]
     c88:	ldrb	w0, [x0, #20]
     c8c:	and	w0, w0, #0x2
     c90:	and	w0, w0, #0xff
     c94:	cmp	w0, #0x0
     c98:	b.ne	cb4 <find_cached_block+0x60>  // b.any
     c9c:	ldr	x0, [sp, #48]
     ca0:	cmp	x0, #0x0
     ca4:	b.ne	d24 <find_cached_block+0xd0>  // b.any
     ca8:	ldr	x0, [sp, #56]
     cac:	str	x0, [sp, #48]
     cb0:	b	d24 <find_cached_block+0xd0>
     cb4:	ldr	x0, [sp, #56]
     cb8:	ldr	x0, [x0, #8]
     cbc:	ldr	x1, [sp, #16]
     cc0:	cmp	x1, x0
     cc4:	b.ne	cf4 <find_cached_block+0xa0>  // b.any
     cc8:	ldr	x0, [sp, #24]
     ccc:	ldr	w0, [x0, #16]
     cd0:	add	w1, w0, #0x1
     cd4:	ldr	x0, [sp, #24]
     cd8:	str	w1, [x0, #16]
     cdc:	ldr	x0, [sp, #24]
     ce0:	ldr	w1, [x0, #16]
     ce4:	ldr	x0, [sp, #56]
     ce8:	str	w1, [x0, #16]
     cec:	ldr	x0, [sp, #56]
     cf0:	b	d7c <find_cached_block+0x128>
     cf4:	ldr	x0, [sp, #40]
     cf8:	cmp	x0, #0x0
     cfc:	b.eq	d18 <find_cached_block+0xc4>  // b.none
     d00:	ldr	x0, [sp, #56]
     d04:	ldr	w1, [x0, #16]
     d08:	ldr	x0, [sp, #40]
     d0c:	ldr	w0, [x0, #16]
     d10:	cmp	w1, w0
     d14:	b.ge	d28 <find_cached_block+0xd4>  // b.tcont
     d18:	ldr	x0, [sp, #56]
     d1c:	str	x0, [sp, #40]
     d20:	b	d28 <find_cached_block+0xd4>
     d24:	nop
     d28:	ldr	w0, [sp, #36]
     d2c:	add	w0, w0, #0x1
     d30:	str	w0, [sp, #36]
     d34:	ldr	x0, [sp, #56]
     d38:	add	x0, x0, #0x18
     d3c:	str	x0, [sp, #56]
     d40:	ldr	w0, [sp, #36]
     d44:	cmp	w0, #0x7
     d48:	b.le	c84 <find_cached_block+0x30>
     d4c:	ldr	x0, [sp, #8]
     d50:	cmp	x0, #0x0
     d54:	b.eq	d78 <find_cached_block+0x124>  // b.none
     d58:	ldr	x0, [sp, #48]
     d5c:	cmp	x0, #0x0
     d60:	b.eq	d6c <find_cached_block+0x118>  // b.none
     d64:	ldr	x0, [sp, #48]
     d68:	b	d70 <find_cached_block+0x11c>
     d6c:	ldr	x0, [sp, #40]
     d70:	ldr	x1, [sp, #8]
     d74:	str	x0, [x1]
     d78:	mov	x0, #0x0                   	// #0
     d7c:	add	sp, sp, #0x40
     d80:	ret

0000000000000d84 <reuse_cache>:
     d84:	stp	x29, x30, [sp, #-48]!
     d88:	mov	x29, sp
     d8c:	str	x0, [sp, #40]
     d90:	str	x1, [sp, #32]
     d94:	str	x2, [sp, #24]
     d98:	str	x3, [sp, #16]
     d9c:	ldr	x0, [sp, #24]
     da0:	ldrb	w0, [x0, #20]
     da4:	and	w0, w0, #0x1
     da8:	and	w0, w0, #0xff
     dac:	cmp	w0, #0x0
     db0:	b.eq	df4 <reuse_cache+0x70>  // b.none
     db4:	ldr	x0, [sp, #24]
     db8:	ldrb	w0, [x0, #20]
     dbc:	and	w0, w0, #0x2
     dc0:	and	w0, w0, #0xff
     dc4:	cmp	w0, #0x0
     dc8:	b.eq	df4 <reuse_cache+0x70>  // b.none
     dcc:	ldr	x0, [sp, #24]
     dd0:	ldr	x1, [x0, #8]
     dd4:	ldr	x0, [sp, #24]
     dd8:	ldr	x0, [x0]
     ddc:	mov	x4, x0
     de0:	mov	w3, #0x1                   	// #1
     de4:	mov	x2, x1
     de8:	ldr	x1, [sp, #32]
     dec:	ldr	x0, [sp, #40]
     df0:	bl	568 <raw_write_blk>
     df4:	ldr	x0, [sp, #24]
     df8:	ldrb	w1, [x0, #20]
     dfc:	orr	w1, w1, #0x2
     e00:	strb	w1, [x0, #20]
     e04:	ldr	x0, [sp, #24]
     e08:	ldrb	w1, [x0, #20]
     e0c:	and	w1, w1, #0xfffffffe
     e10:	strb	w1, [x0, #20]
     e14:	ldr	x0, [sp, #24]
     e18:	ldr	x1, [sp, #16]
     e1c:	str	x1, [x0, #8]
     e20:	ldr	x0, [sp, #32]
     e24:	ldr	w0, [x0, #16]
     e28:	add	w1, w0, #0x1
     e2c:	ldr	x0, [sp, #32]
     e30:	str	w1, [x0, #16]
     e34:	ldr	x0, [sp, #32]
     e38:	ldr	w1, [x0, #16]
     e3c:	ldr	x0, [sp, #24]
     e40:	str	w1, [x0, #16]
     e44:	nop
     e48:	ldp	x29, x30, [sp], #48
     e4c:	ret

0000000000000e50 <flush_cached_blocks>:
     e50:	stp	x29, x30, [sp, #-80]!
     e54:	mov	x29, sp
     e58:	str	x0, [sp, #40]
     e5c:	str	x1, [sp, #32]
     e60:	str	w2, [sp, #28]
     e64:	str	xzr, [sp, #64]
     e68:	str	wzr, [sp, #60]
     e6c:	ldr	x0, [sp, #32]
     e70:	add	x0, x0, #0x20
     e74:	str	x0, [sp, #72]
     e78:	b	f44 <flush_cached_blocks+0xf4>
     e7c:	ldr	x0, [sp, #72]
     e80:	ldrb	w0, [x0, #20]
     e84:	and	w0, w0, #0x2
     e88:	and	w0, w0, #0xff
     e8c:	cmp	w0, #0x0
     e90:	b.eq	f20 <flush_cached_blocks+0xd0>  // b.none
     e94:	ldr	w0, [sp, #28]
     e98:	cmp	w0, #0x0
     e9c:	b.eq	eb0 <flush_cached_blocks+0x60>  // b.none
     ea0:	ldr	x0, [sp, #72]
     ea4:	ldrb	w1, [x0, #20]
     ea8:	and	w1, w1, #0xfffffffd
     eac:	strb	w1, [x0, #20]
     eb0:	ldr	x0, [sp, #72]
     eb4:	ldrb	w0, [x0, #20]
     eb8:	and	w0, w0, #0x1
     ebc:	and	w0, w0, #0xff
     ec0:	cmp	w0, #0x0
     ec4:	b.eq	f28 <flush_cached_blocks+0xd8>  // b.none
     ec8:	ldr	x0, [sp, #72]
     ecc:	ldr	x1, [x0, #8]
     ed0:	ldr	x0, [sp, #72]
     ed4:	ldr	x0, [x0]
     ed8:	mov	x4, x0
     edc:	mov	w3, #0x1                   	// #1
     ee0:	mov	x2, x1
     ee4:	ldr	x1, [sp, #32]
     ee8:	ldr	x0, [sp, #40]
     eec:	bl	568 <raw_write_blk>
     ef0:	str	x0, [sp, #48]
     ef4:	ldr	x0, [sp, #48]
     ef8:	cmp	x0, #0x0
     efc:	b.eq	f0c <flush_cached_blocks+0xbc>  // b.none
     f00:	ldr	x0, [sp, #48]
     f04:	str	x0, [sp, #64]
     f08:	b	f2c <flush_cached_blocks+0xdc>
     f0c:	ldr	x0, [sp, #72]
     f10:	ldrb	w1, [x0, #20]
     f14:	and	w1, w1, #0xfffffffe
     f18:	strb	w1, [x0, #20]
     f1c:	b	f2c <flush_cached_blocks+0xdc>
     f20:	nop
     f24:	b	f2c <flush_cached_blocks+0xdc>
     f28:	nop
     f2c:	ldr	w0, [sp, #60]
     f30:	add	w0, w0, #0x1
     f34:	str	w0, [sp, #60]
     f38:	ldr	x0, [sp, #72]
     f3c:	add	x0, x0, #0x18
     f40:	str	x0, [sp, #72]
     f44:	ldr	w0, [sp, #60]
     f48:	cmp	w0, #0x7
     f4c:	b.le	e7c <flush_cached_blocks+0x2c>
     f50:	ldr	x0, [sp, #64]
     f54:	ldp	x29, x30, [sp], #80
     f58:	ret

0000000000000f5c <ext2fs_open_file>:
     f5c:	stp	x29, x30, [sp, #-32]!
     f60:	mov	x29, sp
     f64:	str	x0, [sp, #24]
     f68:	str	w1, [sp, #20]
     f6c:	str	w2, [sp, #16]
     f70:	ldr	w0, [sp, #16]
     f74:	cmp	w0, #0x0
     f78:	b.eq	f90 <ext2fs_open_file+0x34>  // b.none
     f7c:	ldr	w2, [sp, #16]
     f80:	ldr	w1, [sp, #20]
     f84:	ldr	x0, [sp, #24]
     f88:	bl	0 <open64>
     f8c:	b	f9c <ext2fs_open_file+0x40>
     f90:	ldr	w1, [sp, #20]
     f94:	ldr	x0, [sp, #24]
     f98:	bl	0 <open64>
     f9c:	ldp	x29, x30, [sp], #32
     fa0:	ret

0000000000000fa4 <ext2fs_stat>:
     fa4:	stp	x29, x30, [sp, #-32]!
     fa8:	mov	x29, sp
     fac:	str	x0, [sp, #24]
     fb0:	str	x1, [sp, #16]
     fb4:	ldr	x1, [sp, #16]
     fb8:	ldr	x0, [sp, #24]
     fbc:	bl	0 <stat64>
     fc0:	ldp	x29, x30, [sp], #32
     fc4:	ret

0000000000000fc8 <ext2fs_fstat>:
     fc8:	stp	x29, x30, [sp, #-32]!
     fcc:	mov	x29, sp
     fd0:	str	w0, [sp, #28]
     fd4:	str	x1, [sp, #16]
     fd8:	ldr	x1, [sp, #16]
     fdc:	ldr	w0, [sp, #28]
     fe0:	bl	0 <fstat64>
     fe4:	ldp	x29, x30, [sp], #32
     fe8:	ret

0000000000000fec <unix_open_channel>:
     fec:	sub	sp, sp, #0x280
     ff0:	stp	x29, x30, [sp]
     ff4:	mov	x29, sp
     ff8:	str	x19, [sp, #16]
     ffc:	str	x0, [sp, #56]
    1000:	str	w1, [sp, #52]
    1004:	str	w2, [sp, #48]
    1008:	str	x3, [sp, #40]
    100c:	str	x4, [sp, #32]
    1010:	str	xzr, [sp, #616]
    1014:	str	xzr, [sp, #608]
    1018:	adrp	x0, 0 <ext2fsP_is_disk_device>
    101c:	add	x0, x0, #0x0
    1020:	bl	b0 <safe_getenv>
    1024:	cmp	x0, #0x0
    1028:	b.eq	1038 <unix_open_channel+0x4c>  // b.none
    102c:	ldr	w0, [sp, #48]
    1030:	orr	w0, w0, #0x8
    1034:	str	w0, [sp, #48]
    1038:	ldr	w0, [sp, #52]
    103c:	bl	0 <fsync>
    1040:	add	x0, sp, #0x268
    1044:	mov	x1, x0
    1048:	mov	x0, #0xc0                  	// #192
    104c:	bl	0 <ext2fs_get_mem>
    1050:	str	x0, [sp, #632]
    1054:	ldr	x0, [sp, #632]
    1058:	cmp	x0, #0x0
    105c:	b.ne	1398 <unix_open_channel+0x3ac>  // b.any
    1060:	ldr	x0, [sp, #616]
    1064:	mov	x2, #0xc0                  	// #192
    1068:	mov	w1, #0x0                   	// #0
    106c:	bl	0 <memset>
    1070:	ldr	x0, [sp, #616]
    1074:	mov	x1, #0xb705                	// #46853
    1078:	movk	x1, #0x7f2b, lsl #16
    107c:	str	x1, [x0]
    1080:	add	x0, sp, #0x260
    1084:	mov	x1, x0
    1088:	mov	x0, #0x100                 	// #256
    108c:	bl	0 <ext2fs_get_mem>
    1090:	str	x0, [sp, #632]
    1094:	ldr	x0, [sp, #632]
    1098:	cmp	x0, #0x0
    109c:	b.ne	13a0 <unix_open_channel+0x3b4>  // b.any
    10a0:	ldr	x0, [sp, #616]
    10a4:	ldr	x1, [sp, #32]
    10a8:	str	x1, [x0, #8]
    10ac:	ldr	x0, [sp, #56]
    10b0:	bl	0 <strlen>
    10b4:	add	x2, x0, #0x1
    10b8:	ldr	x0, [sp, #616]
    10bc:	add	x0, x0, #0x10
    10c0:	mov	x1, x0
    10c4:	mov	x0, x2
    10c8:	bl	0 <ext2fs_get_mem>
    10cc:	str	x0, [sp, #632]
    10d0:	ldr	x0, [sp, #632]
    10d4:	cmp	x0, #0x0
    10d8:	b.ne	13a8 <unix_open_channel+0x3bc>  // b.any
    10dc:	ldr	x0, [sp, #616]
    10e0:	ldr	x0, [x0, #16]
    10e4:	ldr	x1, [sp, #56]
    10e8:	bl	0 <strcpy>
    10ec:	ldr	x0, [sp, #616]
    10f0:	ldr	x1, [sp, #608]
    10f4:	str	x1, [x0, #168]
    10f8:	ldr	x0, [sp, #616]
    10fc:	mov	w1, #0x400                 	// #1024
    1100:	str	w1, [x0, #24]
    1104:	ldr	x0, [sp, #616]
    1108:	str	xzr, [x0, #32]
    110c:	ldr	x0, [sp, #616]
    1110:	str	xzr, [x0, #40]
    1114:	ldr	x0, [sp, #616]
    1118:	mov	w1, #0x1                   	// #1
    111c:	str	w1, [x0, #48]
    1120:	ldr	x0, [sp, #608]
    1124:	mov	x2, #0x100                 	// #256
    1128:	mov	w1, #0x0                   	// #0
    112c:	bl	0 <memset>
    1130:	ldr	x0, [sp, #608]
    1134:	mov	w1, #0xb706                	// #46854
    1138:	movk	w1, #0x7f2b, lsl #16
    113c:	str	w1, [x0]
    1140:	ldr	x0, [sp, #608]
    1144:	mov	w1, #0x2                   	// #2
    1148:	str	w1, [x0, #232]
    114c:	ldr	x0, [sp, #608]
    1150:	ldr	w1, [sp, #48]
    1154:	str	w1, [x0, #8]
    1158:	ldr	x0, [sp, #608]
    115c:	ldr	w1, [sp, #52]
    1160:	str	w1, [x0, #4]
    1164:	ldr	w0, [sp, #48]
    1168:	and	w0, w0, #0x4
    116c:	cmp	w0, #0x0
    1170:	b.eq	1188 <unix_open_channel+0x19c>  // b.none
    1174:	ldr	x0, [sp, #608]
    1178:	ldr	w0, [x0, #4]
    117c:	ldr	x19, [sp, #616]
    1180:	bl	0 <ext2fs_get_dio_alignment>
    1184:	str	w0, [x19, #184]
    1188:	ldr	x0, [sp, #608]
    118c:	ldr	w0, [x0, #4]
    1190:	add	x1, sp, #0x1e0
    1194:	bl	fc8 <ext2fs_fstat>
    1198:	cmp	w0, #0x0
    119c:	b.ne	11dc <unix_open_channel+0x1f0>  // b.any
    11a0:	ldr	w0, [sp, #496]
    11a4:	bl	0 <ext2fsP_is_disk_device>
    11a8:	cmp	w0, #0x0
    11ac:	b.eq	11c8 <unix_open_channel+0x1dc>  // b.none
    11b0:	ldr	x0, [sp, #616]
    11b4:	ldr	w1, [x0, #52]
    11b8:	ldr	x0, [sp, #616]
    11bc:	orr	w1, w1, #0x4
    11c0:	str	w1, [x0, #52]
    11c4:	b	11dc <unix_open_channel+0x1f0>
    11c8:	ldr	x0, [sp, #616]
    11cc:	ldr	w1, [x0, #52]
    11d0:	ldr	x0, [sp, #616]
    11d4:	orr	w1, w1, #0x2
    11d8:	str	w1, [x0, #52]
    11dc:	str	wzr, [sp, #84]
    11e0:	ldr	x0, [sp, #608]
    11e4:	ldr	w0, [x0, #4]
    11e8:	add	x1, sp, #0x54
    11ec:	mov	x2, x1
    11f0:	mov	x1, #0x127c                	// #4732
    11f4:	bl	0 <ioctl>
    11f8:	cmp	w0, #0x0
    11fc:	b.ne	1220 <unix_open_channel+0x234>  // b.any
    1200:	ldr	w0, [sp, #84]
    1204:	cmp	w0, #0x0
    1208:	b.eq	1220 <unix_open_channel+0x234>  // b.none
    120c:	ldr	x0, [sp, #616]
    1210:	ldr	w1, [x0, #52]
    1214:	ldr	x0, [sp, #616]
    1218:	orr	w1, w1, #0x2
    121c:	str	w1, [x0, #52]
    1220:	ldr	x0, [sp, #616]
    1224:	ldr	x1, [sp, #608]
    1228:	bl	a6c <alloc_cache>
    122c:	str	x0, [sp, #632]
    1230:	ldr	x0, [sp, #632]
    1234:	cmp	x0, #0x0
    1238:	b.ne	13b0 <unix_open_channel+0x3c4>  // b.any
    123c:	ldr	w0, [sp, #48]
    1240:	and	w0, w0, #0x1
    1244:	cmp	w0, #0x0
    1248:	b.eq	1290 <unix_open_channel+0x2a4>  // b.none
    124c:	str	wzr, [sp, #80]
    1250:	ldr	x0, [sp, #608]
    1254:	ldr	w0, [x0, #4]
    1258:	add	x1, sp, #0x50
    125c:	mov	x2, x1
    1260:	mov	x1, #0x125e                	// #4702
    1264:	bl	0 <ioctl>
    1268:	str	w0, [sp, #628]
    126c:	ldr	w0, [sp, #628]
    1270:	cmp	w0, #0x0
    1274:	b.ne	1290 <unix_open_channel+0x2a4>  // b.any
    1278:	ldr	w0, [sp, #80]
    127c:	cmp	w0, #0x0
    1280:	b.eq	1290 <unix_open_channel+0x2a4>  // b.none
    1284:	mov	x0, #0x1                   	// #1
    1288:	str	x0, [sp, #632]
    128c:	b	13b4 <unix_open_channel+0x3c8>
    1290:	ldr	w0, [sp, #48]
    1294:	and	w0, w0, #0x1
    1298:	cmp	w0, #0x0
    129c:	b.eq	1384 <unix_open_channel+0x398>  // b.none
    12a0:	add	x0, sp, #0x58
    12a4:	bl	0 <uname>
    12a8:	cmp	w0, #0x0
    12ac:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12b0:	ldrb	w0, [sp, #218]
    12b4:	cmp	w0, #0x32
    12b8:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12bc:	ldrb	w0, [sp, #219]
    12c0:	cmp	w0, #0x2e
    12c4:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12c8:	ldrb	w0, [sp, #220]
    12cc:	cmp	w0, #0x34
    12d0:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12d4:	ldrb	w0, [sp, #221]
    12d8:	cmp	w0, #0x2e
    12dc:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12e0:	ldrb	w0, [sp, #222]
    12e4:	cmp	w0, #0x31
    12e8:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    12ec:	ldrb	w0, [sp, #223]
    12f0:	cmp	w0, #0x2f
    12f4:	b.ls	1384 <unix_open_channel+0x398>  // b.plast
    12f8:	ldrb	w0, [sp, #223]
    12fc:	cmp	w0, #0x37
    1300:	b.hi	1384 <unix_open_channel+0x398>  // b.pmore
    1304:	ldr	x0, [sp, #608]
    1308:	ldr	w0, [x0, #4]
    130c:	add	x1, sp, #0x1e0
    1310:	bl	fc8 <ext2fs_fstat>
    1314:	cmp	w0, #0x0
    1318:	b.ne	1384 <unix_open_channel+0x398>  // b.any
    131c:	ldr	w0, [sp, #496]
    1320:	bl	0 <ext2fsP_is_disk_device>
    1324:	cmp	w0, #0x0
    1328:	b.eq	1384 <unix_open_channel+0x398>  // b.none
    132c:	mov	x0, #0xffffffffffffffff    	// #-1
    1330:	str	x0, [sp, #72]
    1334:	ldr	x0, [sp, #72]
    1338:	str	x0, [sp, #64]
    133c:	add	x0, sp, #0x40
    1340:	mov	x1, x0
    1344:	mov	w0, #0x1                   	// #1
    1348:	bl	0 <setrlimit64>
    134c:	add	x0, sp, #0x40
    1350:	mov	x1, x0
    1354:	mov	w0, #0x1                   	// #1
    1358:	bl	0 <getrlimit64>
    135c:	ldr	x1, [sp, #64]
    1360:	ldr	x0, [sp, #72]
    1364:	cmp	x1, x0
    1368:	b.cs	1384 <unix_open_channel+0x398>  // b.hs, b.nlast
    136c:	ldr	x0, [sp, #72]
    1370:	str	x0, [sp, #64]
    1374:	add	x0, sp, #0x40
    1378:	mov	x1, x0
    137c:	mov	w0, #0x1                   	// #1
    1380:	bl	0 <setrlimit64>
    1384:	ldr	x1, [sp, #616]
    1388:	ldr	x0, [sp, #40]
    138c:	str	x1, [x0]
    1390:	mov	x0, #0x0                   	// #0
    1394:	b	1420 <unix_open_channel+0x434>
    1398:	nop
    139c:	b	13b4 <unix_open_channel+0x3c8>
    13a0:	nop
    13a4:	b	13b4 <unix_open_channel+0x3c8>
    13a8:	nop
    13ac:	b	13b4 <unix_open_channel+0x3c8>
    13b0:	nop
    13b4:	ldr	x0, [sp, #608]
    13b8:	cmp	x0, #0x0
    13bc:	b.eq	13ec <unix_open_channel+0x400>  // b.none
    13c0:	ldr	x0, [sp, #608]
    13c4:	ldr	w0, [x0, #4]
    13c8:	cmp	w0, #0x0
    13cc:	b.lt	13dc <unix_open_channel+0x3f0>  // b.tstop
    13d0:	ldr	x0, [sp, #608]
    13d4:	ldr	w0, [x0, #4]
    13d8:	bl	0 <close>
    13dc:	ldr	x0, [sp, #608]
    13e0:	bl	b98 <free_cache>
    13e4:	add	x0, sp, #0x260
    13e8:	bl	0 <ext2fs_free_mem>
    13ec:	ldr	x0, [sp, #616]
    13f0:	cmp	x0, #0x0
    13f4:	b.eq	141c <unix_open_channel+0x430>  // b.none
    13f8:	ldr	x0, [sp, #616]
    13fc:	ldr	x0, [x0, #16]
    1400:	cmp	x0, #0x0
    1404:	b.eq	1414 <unix_open_channel+0x428>  // b.none
    1408:	ldr	x0, [sp, #616]
    140c:	add	x0, x0, #0x10
    1410:	bl	0 <ext2fs_free_mem>
    1414:	add	x0, sp, #0x268
    1418:	bl	0 <ext2fs_free_mem>
    141c:	ldr	x0, [sp, #632]
    1420:	ldr	x19, [sp, #16]
    1424:	ldp	x29, x30, [sp]
    1428:	add	sp, sp, #0x280
    142c:	ret

0000000000001430 <unixfd_open>:
    1430:	stp	x29, x30, [sp, #-64]!
    1434:	mov	x29, sp
    1438:	str	x0, [sp, #40]
    143c:	str	w1, [sp, #36]
    1440:	str	x2, [sp, #24]
    1444:	ldr	x0, [sp, #40]
    1448:	bl	0 <atoi>
    144c:	str	w0, [sp, #60]
    1450:	mov	w1, #0x1                   	// #1
    1454:	ldr	w0, [sp, #60]
    1458:	bl	0 <fcntl64>
    145c:	str	w0, [sp, #56]
    1460:	ldr	w0, [sp, #56]
    1464:	cmn	w0, #0x1
    1468:	b.ne	1474 <unixfd_open+0x44>  // b.any
    146c:	mov	x0, #0xfffffffffffffff7    	// #-9
    1470:	b	14f0 <unixfd_open+0xc0>
    1474:	str	wzr, [sp, #36]
    1478:	ldr	w0, [sp, #56]
    147c:	and	w0, w0, #0x2
    1480:	cmp	w0, #0x0
    1484:	b.eq	1494 <unixfd_open+0x64>  // b.none
    1488:	ldr	w0, [sp, #36]
    148c:	orr	w0, w0, #0x1
    1490:	str	w0, [sp, #36]
    1494:	ldr	w0, [sp, #56]
    1498:	and	w0, w0, #0x80
    149c:	cmp	w0, #0x0
    14a0:	b.eq	14b0 <unixfd_open+0x80>  // b.none
    14a4:	ldr	w0, [sp, #36]
    14a8:	orr	w0, w0, #0x2
    14ac:	str	w0, [sp, #36]
    14b0:	ldr	w0, [sp, #56]
    14b4:	and	w0, w0, #0x10000
    14b8:	cmp	w0, #0x0
    14bc:	b.eq	14cc <unixfd_open+0x9c>  // b.none
    14c0:	ldr	w0, [sp, #36]
    14c4:	orr	w0, w0, #0x4
    14c8:	str	w0, [sp, #36]
    14cc:	adrp	x0, 1e8 <raw_read_blk+0xbc>
    14d0:	add	x0, x0, #0x0
    14d4:	ldr	x0, [x0]
    14d8:	mov	x4, x0
    14dc:	ldr	x3, [sp, #24]
    14e0:	ldr	w2, [sp, #36]
    14e4:	ldr	w1, [sp, #60]
    14e8:	ldr	x0, [sp, #40]
    14ec:	bl	fec <unix_open_channel>
    14f0:	ldp	x29, x30, [sp], #64
    14f4:	ret

00000000000014f8 <unix_open>:
    14f8:	stp	x29, x30, [sp, #-64]!
    14fc:	mov	x29, sp
    1500:	str	x0, [sp, #40]
    1504:	str	w1, [sp, #36]
    1508:	str	x2, [sp, #24]
    150c:	mov	w0, #0xffffffff            	// #-1
    1510:	str	w0, [sp, #56]
    1514:	ldr	x0, [sp, #40]
    1518:	cmp	x0, #0x0
    151c:	b.ne	152c <unix_open+0x34>  // b.any
    1520:	mov	x0, #0xb73a                	// #46906
    1524:	movk	x0, #0x7f2b, lsl #16
    1528:	b	15c8 <unix_open+0xd0>
    152c:	ldr	w0, [sp, #36]
    1530:	lsl	w0, w0, #1
    1534:	and	w0, w0, #0x2
    1538:	str	w0, [sp, #60]
    153c:	ldr	w0, [sp, #36]
    1540:	and	w0, w0, #0x2
    1544:	cmp	w0, #0x0
    1548:	b.eq	1558 <unix_open+0x60>  // b.none
    154c:	ldr	w0, [sp, #60]
    1550:	orr	w0, w0, #0x80
    1554:	str	w0, [sp, #60]
    1558:	ldr	w0, [sp, #36]
    155c:	and	w0, w0, #0x4
    1560:	cmp	w0, #0x0
    1564:	b.eq	1574 <unix_open+0x7c>  // b.none
    1568:	ldr	w0, [sp, #60]
    156c:	orr	w0, w0, #0x10000
    1570:	str	w0, [sp, #60]
    1574:	mov	w2, #0x0                   	// #0
    1578:	ldr	w1, [sp, #60]
    157c:	ldr	x0, [sp, #40]
    1580:	bl	f5c <ext2fs_open_file>
    1584:	str	w0, [sp, #56]
    1588:	ldr	w0, [sp, #56]
    158c:	cmp	w0, #0x0
    1590:	b.ge	15a4 <unix_open+0xac>  // b.tcont
    1594:	bl	0 <__errno_location>
    1598:	ldr	w0, [x0]
    159c:	sxtw	x0, w0
    15a0:	b	15c8 <unix_open+0xd0>
    15a4:	adrp	x0, f0 <safe_getenv+0x40>
    15a8:	add	x0, x0, #0x0
    15ac:	ldr	x0, [x0]
    15b0:	mov	x4, x0
    15b4:	ldr	x3, [sp, #24]
    15b8:	ldr	w2, [sp, #36]
    15bc:	ldr	w1, [sp, #56]
    15c0:	ldr	x0, [sp, #40]
    15c4:	bl	fec <unix_open_channel>
    15c8:	ldp	x29, x30, [sp], #64
    15cc:	ret

00000000000015d0 <unix_close>:
    15d0:	stp	x29, x30, [sp, #-48]!
    15d4:	mov	x29, sp
    15d8:	str	x0, [sp, #24]
    15dc:	str	xzr, [sp, #40]
    15e0:	ldr	x0, [sp, #24]
    15e4:	ldr	x1, [x0]
    15e8:	mov	x0, #0xb705                	// #46853
    15ec:	movk	x0, #0x7f2b, lsl #16
    15f0:	cmp	x1, x0
    15f4:	b.eq	1604 <unix_close+0x34>  // b.none
    15f8:	mov	x0, #0xb705                	// #46853
    15fc:	movk	x0, #0x7f2b, lsl #16
    1600:	b	16cc <unix_close+0xfc>
    1604:	ldr	x0, [sp, #24]
    1608:	ldr	x0, [x0, #168]
    160c:	str	x0, [sp, #32]
    1610:	ldr	x0, [sp, #32]
    1614:	ldr	w1, [x0]
    1618:	mov	w0, #0xb706                	// #46854
    161c:	movk	w0, #0x7f2b, lsl #16
    1620:	cmp	w1, w0
    1624:	b.eq	1634 <unix_close+0x64>  // b.none
    1628:	mov	x0, #0xb706                	// #46854
    162c:	movk	x0, #0x7f2b, lsl #16
    1630:	b	16cc <unix_close+0xfc>
    1634:	ldr	x0, [sp, #24]
    1638:	ldr	w1, [x0, #48]
    163c:	sub	w1, w1, #0x1
    1640:	str	w1, [x0, #48]
    1644:	ldr	w0, [x0, #48]
    1648:	cmp	w0, #0x0
    164c:	b.le	1658 <unix_close+0x88>
    1650:	mov	x0, #0x0                   	// #0
    1654:	b	16cc <unix_close+0xfc>
    1658:	ldr	x0, [sp, #24]
    165c:	mov	w2, #0x0                   	// #0
    1660:	ldr	x1, [sp, #32]
    1664:	bl	e50 <flush_cached_blocks>
    1668:	str	x0, [sp, #40]
    166c:	ldr	x0, [sp, #32]
    1670:	ldr	w0, [x0, #4]
    1674:	bl	0 <close>
    1678:	cmp	w0, #0x0
    167c:	b.ge	1690 <unix_close+0xc0>  // b.tcont
    1680:	bl	0 <__errno_location>
    1684:	ldr	w0, [x0]
    1688:	sxtw	x0, w0
    168c:	str	x0, [sp, #40]
    1690:	ldr	x0, [sp, #32]
    1694:	bl	b98 <free_cache>
    1698:	ldr	x0, [sp, #24]
    169c:	add	x0, x0, #0xa8
    16a0:	bl	0 <ext2fs_free_mem>
    16a4:	ldr	x0, [sp, #24]
    16a8:	ldr	x0, [x0, #16]
    16ac:	cmp	x0, #0x0
    16b0:	b.eq	16c0 <unix_close+0xf0>  // b.none
    16b4:	ldr	x0, [sp, #24]
    16b8:	add	x0, x0, #0x10
    16bc:	bl	0 <ext2fs_free_mem>
    16c0:	add	x0, sp, #0x18
    16c4:	bl	0 <ext2fs_free_mem>
    16c8:	ldr	x0, [sp, #40]
    16cc:	ldp	x29, x30, [sp], #48
    16d0:	ret

00000000000016d4 <unix_set_blksize>:
    16d4:	stp	x29, x30, [sp, #-48]!
    16d8:	mov	x29, sp
    16dc:	str	x0, [sp, #24]
    16e0:	str	w1, [sp, #20]
    16e4:	ldr	x0, [sp, #24]
    16e8:	ldr	x1, [x0]
    16ec:	mov	x0, #0xb705                	// #46853
    16f0:	movk	x0, #0x7f2b, lsl #16
    16f4:	cmp	x1, x0
    16f8:	b.eq	1708 <unix_set_blksize+0x34>  // b.none
    16fc:	mov	x0, #0xb705                	// #46853
    1700:	movk	x0, #0x7f2b, lsl #16
    1704:	b	17b0 <unix_set_blksize+0xdc>
    1708:	ldr	x0, [sp, #24]
    170c:	ldr	x0, [x0, #168]
    1710:	str	x0, [sp, #40]
    1714:	ldr	x0, [sp, #40]
    1718:	ldr	w1, [x0]
    171c:	mov	w0, #0xb706                	// #46854
    1720:	movk	w0, #0x7f2b, lsl #16
    1724:	cmp	w1, w0
    1728:	b.eq	1738 <unix_set_blksize+0x64>  // b.none
    172c:	mov	x0, #0xb706                	// #46854
    1730:	movk	x0, #0x7f2b, lsl #16
    1734:	b	17b0 <unix_set_blksize+0xdc>
    1738:	ldr	x0, [sp, #24]
    173c:	ldr	w0, [x0, #24]
    1740:	ldr	w1, [sp, #20]
    1744:	cmp	w1, w0
    1748:	b.eq	17ac <unix_set_blksize+0xd8>  // b.none
    174c:	mov	w2, #0x0                   	// #0
    1750:	ldr	x1, [sp, #40]
    1754:	ldr	x0, [sp, #24]
    1758:	bl	e50 <flush_cached_blocks>
    175c:	str	x0, [sp, #32]
    1760:	ldr	x0, [sp, #32]
    1764:	cmp	x0, #0x0
    1768:	b.eq	1774 <unix_set_blksize+0xa0>  // b.none
    176c:	ldr	x0, [sp, #32]
    1770:	b	17b0 <unix_set_blksize+0xdc>
    1774:	ldr	x0, [sp, #24]
    1778:	ldr	w1, [sp, #20]
    177c:	str	w1, [x0, #24]
    1780:	ldr	x0, [sp, #40]
    1784:	bl	b98 <free_cache>
    1788:	ldr	x1, [sp, #40]
    178c:	ldr	x0, [sp, #24]
    1790:	bl	a6c <alloc_cache>
    1794:	str	x0, [sp, #32]
    1798:	ldr	x0, [sp, #32]
    179c:	cmp	x0, #0x0
    17a0:	b.eq	17ac <unix_set_blksize+0xd8>  // b.none
    17a4:	ldr	x0, [sp, #32]
    17a8:	b	17b0 <unix_set_blksize+0xdc>
    17ac:	mov	x0, #0x0                   	// #0
    17b0:	ldp	x29, x30, [sp], #48
    17b4:	ret

00000000000017b8 <unix_read_blk64>:
    17b8:	stp	x29, x30, [sp, #-128]!
    17bc:	mov	x29, sp
    17c0:	str	x0, [sp, #40]
    17c4:	str	x1, [sp, #32]
    17c8:	str	w2, [sp, #28]
    17cc:	str	x3, [sp, #16]
    17d0:	ldr	x0, [sp, #40]
    17d4:	ldr	x1, [x0]
    17d8:	mov	x0, #0xb705                	// #46853
    17dc:	movk	x0, #0x7f2b, lsl #16
    17e0:	cmp	x1, x0
    17e4:	b.eq	17f4 <unix_read_blk64+0x3c>  // b.none
    17e8:	mov	x0, #0xb705                	// #46853
    17ec:	movk	x0, #0x7f2b, lsl #16
    17f0:	b	1ae8 <unix_read_blk64+0x330>
    17f4:	ldr	x0, [sp, #40]
    17f8:	ldr	x0, [x0, #168]
    17fc:	str	x0, [sp, #104]
    1800:	ldr	x0, [sp, #104]
    1804:	ldr	w1, [x0]
    1808:	mov	w0, #0xb706                	// #46854
    180c:	movk	w0, #0x7f2b, lsl #16
    1810:	cmp	w1, w0
    1814:	b.eq	1824 <unix_read_blk64+0x6c>  // b.none
    1818:	mov	x0, #0xb706                	// #46854
    181c:	movk	x0, #0x7f2b, lsl #16
    1820:	b	1ae8 <unix_read_blk64+0x330>
    1824:	ldr	w0, [sp, #28]
    1828:	cmp	w0, #0x0
    182c:	b.lt	183c <unix_read_blk64+0x84>  // b.tstop
    1830:	ldr	w0, [sp, #28]
    1834:	cmp	w0, #0x4
    1838:	b.le	1880 <unix_read_blk64+0xc8>
    183c:	mov	w2, #0x0                   	// #0
    1840:	ldr	x1, [sp, #104]
    1844:	ldr	x0, [sp, #40]
    1848:	bl	e50 <flush_cached_blocks>
    184c:	str	x0, [sp, #88]
    1850:	ldr	x0, [sp, #88]
    1854:	cmp	x0, #0x0
    1858:	b.eq	1864 <unix_read_blk64+0xac>  // b.none
    185c:	ldr	x0, [sp, #88]
    1860:	b	1ae8 <unix_read_blk64+0x330>
    1864:	ldr	x4, [sp, #16]
    1868:	ldr	w3, [sp, #28]
    186c:	ldr	x2, [sp, #32]
    1870:	ldr	x1, [sp, #104]
    1874:	ldr	x0, [sp, #40]
    1878:	bl	12c <raw_read_blk>
    187c:	b	1ae8 <unix_read_blk64+0x330>
    1880:	ldr	x0, [sp, #16]
    1884:	str	x0, [sp, #120]
    1888:	b	1ad8 <unix_read_blk64+0x320>
    188c:	add	x0, sp, #0x38
    1890:	mov	x2, x0
    1894:	ldr	x1, [sp, #32]
    1898:	ldr	x0, [sp, #104]
    189c:	bl	c54 <find_cached_block>
    18a0:	str	x0, [sp, #96]
    18a4:	ldr	x0, [sp, #96]
    18a8:	cmp	x0, #0x0
    18ac:	b.eq	1904 <unix_read_blk64+0x14c>  // b.none
    18b0:	ldr	x0, [sp, #96]
    18b4:	ldr	x1, [x0]
    18b8:	ldr	x0, [sp, #40]
    18bc:	ldr	w0, [x0, #24]
    18c0:	sxtw	x0, w0
    18c4:	mov	x2, x0
    18c8:	ldr	x0, [sp, #120]
    18cc:	bl	0 <memcpy>
    18d0:	ldr	w0, [sp, #28]
    18d4:	sub	w0, w0, #0x1
    18d8:	str	w0, [sp, #28]
    18dc:	ldr	x0, [sp, #32]
    18e0:	add	x0, x0, #0x1
    18e4:	str	x0, [sp, #32]
    18e8:	ldr	x0, [sp, #40]
    18ec:	ldr	w0, [x0, #24]
    18f0:	sxtw	x0, w0
    18f4:	ldr	x1, [sp, #120]
    18f8:	add	x0, x1, x0
    18fc:	str	x0, [sp, #120]
    1900:	b	1ad8 <unix_read_blk64+0x320>
    1904:	ldr	w0, [sp, #28]
    1908:	cmp	w0, #0x1
    190c:	b.ne	19a4 <unix_read_blk64+0x1ec>  // b.any
    1910:	add	x0, sp, #0x88
    1914:	sub	x0, x0, #0x50
    1918:	ldr	x0, [x0]
    191c:	str	x0, [sp, #96]
    1920:	ldr	x3, [sp, #32]
    1924:	ldr	x2, [sp, #96]
    1928:	ldr	x1, [sp, #104]
    192c:	ldr	x0, [sp, #40]
    1930:	bl	d84 <reuse_cache>
    1934:	ldr	x0, [sp, #96]
    1938:	ldr	x0, [x0]
    193c:	mov	x4, x0
    1940:	mov	w3, #0x1                   	// #1
    1944:	ldr	x2, [sp, #32]
    1948:	ldr	x1, [sp, #104]
    194c:	ldr	x0, [sp, #40]
    1950:	bl	12c <raw_read_blk>
    1954:	str	x0, [sp, #88]
    1958:	ldr	x0, [sp, #88]
    195c:	cmp	x0, #0x0
    1960:	b.eq	197c <unix_read_blk64+0x1c4>  // b.none
    1964:	ldr	x0, [sp, #96]
    1968:	ldrb	w1, [x0, #20]
    196c:	and	w1, w1, #0xfffffffd
    1970:	strb	w1, [x0, #20]
    1974:	ldr	x0, [sp, #88]
    1978:	b	1ae8 <unix_read_blk64+0x330>
    197c:	ldr	x0, [sp, #96]
    1980:	ldr	x1, [x0]
    1984:	ldr	x0, [sp, #40]
    1988:	ldr	w0, [x0, #24]
    198c:	sxtw	x0, w0
    1990:	mov	x2, x0
    1994:	ldr	x0, [sp, #120]
    1998:	bl	0 <memcpy>
    199c:	mov	x0, #0x0                   	// #0
    19a0:	b	1ae8 <unix_read_blk64+0x330>
    19a4:	mov	w0, #0x1                   	// #1
    19a8:	str	w0, [sp, #116]
    19ac:	b	19f0 <unix_read_blk64+0x238>
    19b0:	ldrsw	x1, [sp, #116]
    19b4:	ldr	x0, [sp, #32]
    19b8:	add	x3, x1, x0
    19bc:	add	x1, sp, #0x38
    19c0:	ldrsw	x0, [sp, #116]
    19c4:	lsl	x0, x0, #3
    19c8:	add	x0, x1, x0
    19cc:	mov	x2, x0
    19d0:	mov	x1, x3
    19d4:	ldr	x0, [sp, #104]
    19d8:	bl	c54 <find_cached_block>
    19dc:	cmp	x0, #0x0
    19e0:	b.ne	1a04 <unix_read_blk64+0x24c>  // b.any
    19e4:	ldr	w0, [sp, #116]
    19e8:	add	w0, w0, #0x1
    19ec:	str	w0, [sp, #116]
    19f0:	ldr	w1, [sp, #116]
    19f4:	ldr	w0, [sp, #28]
    19f8:	cmp	w1, w0
    19fc:	b.lt	19b0 <unix_read_blk64+0x1f8>  // b.tstop
    1a00:	b	1a08 <unix_read_blk64+0x250>
    1a04:	nop
    1a08:	ldr	x4, [sp, #120]
    1a0c:	ldr	w3, [sp, #116]
    1a10:	ldr	x2, [sp, #32]
    1a14:	ldr	x1, [sp, #104]
    1a18:	ldr	x0, [sp, #40]
    1a1c:	bl	12c <raw_read_blk>
    1a20:	str	x0, [sp, #88]
    1a24:	ldr	x0, [sp, #88]
    1a28:	cmp	x0, #0x0
    1a2c:	b.eq	1a38 <unix_read_blk64+0x280>  // b.none
    1a30:	ldr	x0, [sp, #88]
    1a34:	b	1ae8 <unix_read_blk64+0x330>
    1a38:	str	wzr, [sp, #112]
    1a3c:	b	1ac8 <unix_read_blk64+0x310>
    1a40:	ldr	w0, [sp, #28]
    1a44:	sub	w0, w0, #0x1
    1a48:	str	w0, [sp, #28]
    1a4c:	add	x0, sp, #0x88
    1a50:	sub	x0, x0, #0x50
    1a54:	ldrsw	x1, [sp, #112]
    1a58:	ldr	x0, [x0, x1, lsl #3]
    1a5c:	str	x0, [sp, #96]
    1a60:	ldr	x0, [sp, #32]
    1a64:	add	x1, x0, #0x1
    1a68:	str	x1, [sp, #32]
    1a6c:	mov	x3, x0
    1a70:	ldr	x2, [sp, #96]
    1a74:	ldr	x1, [sp, #104]
    1a78:	ldr	x0, [sp, #40]
    1a7c:	bl	d84 <reuse_cache>
    1a80:	ldr	x0, [sp, #96]
    1a84:	ldr	x3, [x0]
    1a88:	ldr	x0, [sp, #40]
    1a8c:	ldr	w0, [x0, #24]
    1a90:	sxtw	x0, w0
    1a94:	mov	x2, x0
    1a98:	ldr	x1, [sp, #120]
    1a9c:	mov	x0, x3
    1aa0:	bl	0 <memcpy>
    1aa4:	ldr	x0, [sp, #40]
    1aa8:	ldr	w0, [x0, #24]
    1aac:	sxtw	x0, w0
    1ab0:	ldr	x1, [sp, #120]
    1ab4:	add	x0, x1, x0
    1ab8:	str	x0, [sp, #120]
    1abc:	ldr	w0, [sp, #112]
    1ac0:	add	w0, w0, #0x1
    1ac4:	str	w0, [sp, #112]
    1ac8:	ldr	w1, [sp, #112]
    1acc:	ldr	w0, [sp, #116]
    1ad0:	cmp	w1, w0
    1ad4:	b.lt	1a40 <unix_read_blk64+0x288>  // b.tstop
    1ad8:	ldr	w0, [sp, #28]
    1adc:	cmp	w0, #0x0
    1ae0:	b.gt	188c <unix_read_blk64+0xd4>
    1ae4:	mov	x0, #0x0                   	// #0
    1ae8:	ldp	x29, x30, [sp], #128
    1aec:	ret

0000000000001af0 <unix_read_blk>:
    1af0:	stp	x29, x30, [sp, #-48]!
    1af4:	mov	x29, sp
    1af8:	str	x0, [sp, #40]
    1afc:	str	x1, [sp, #32]
    1b00:	str	w2, [sp, #28]
    1b04:	str	x3, [sp, #16]
    1b08:	ldr	x3, [sp, #16]
    1b0c:	ldr	w2, [sp, #28]
    1b10:	ldr	x1, [sp, #32]
    1b14:	ldr	x0, [sp, #40]
    1b18:	bl	17b8 <unix_read_blk64>
    1b1c:	ldp	x29, x30, [sp], #48
    1b20:	ret

0000000000001b24 <unix_write_blk64>:
    1b24:	stp	x29, x30, [sp, #-96]!
    1b28:	mov	x29, sp
    1b2c:	str	x0, [sp, #40]
    1b30:	str	x1, [sp, #32]
    1b34:	str	w2, [sp, #28]
    1b38:	str	x3, [sp, #16]
    1b3c:	str	xzr, [sp, #80]
    1b40:	ldr	x0, [sp, #40]
    1b44:	ldr	x1, [x0]
    1b48:	mov	x0, #0xb705                	// #46853
    1b4c:	movk	x0, #0x7f2b, lsl #16
    1b50:	cmp	x1, x0
    1b54:	b.eq	1b64 <unix_write_blk64+0x40>  // b.none
    1b58:	mov	x0, #0xb705                	// #46853
    1b5c:	movk	x0, #0x7f2b, lsl #16
    1b60:	b	1d0c <unix_write_blk64+0x1e8>
    1b64:	ldr	x0, [sp, #40]
    1b68:	ldr	x0, [x0, #168]
    1b6c:	str	x0, [sp, #64]
    1b70:	ldr	x0, [sp, #64]
    1b74:	ldr	w1, [x0]
    1b78:	mov	w0, #0xb706                	// #46854
    1b7c:	movk	w0, #0x7f2b, lsl #16
    1b80:	cmp	w1, w0
    1b84:	b.eq	1b94 <unix_write_blk64+0x70>  // b.none
    1b88:	mov	x0, #0xb706                	// #46854
    1b8c:	movk	x0, #0x7f2b, lsl #16
    1b90:	b	1d0c <unix_write_blk64+0x1e8>
    1b94:	ldr	w0, [sp, #28]
    1b98:	cmp	w0, #0x0
    1b9c:	b.lt	1bac <unix_write_blk64+0x88>  // b.tstop
    1ba0:	ldr	w0, [sp, #28]
    1ba4:	cmp	w0, #0x4
    1ba8:	b.le	1bf0 <unix_write_blk64+0xcc>
    1bac:	mov	w2, #0x1                   	// #1
    1bb0:	ldr	x1, [sp, #64]
    1bb4:	ldr	x0, [sp, #40]
    1bb8:	bl	e50 <flush_cached_blocks>
    1bbc:	str	x0, [sp, #80]
    1bc0:	ldr	x0, [sp, #80]
    1bc4:	cmp	x0, #0x0
    1bc8:	b.eq	1bd4 <unix_write_blk64+0xb0>  // b.none
    1bcc:	ldr	x0, [sp, #80]
    1bd0:	b	1d0c <unix_write_blk64+0x1e8>
    1bd4:	ldr	x4, [sp, #16]
    1bd8:	ldr	w3, [sp, #28]
    1bdc:	ldr	x2, [sp, #32]
    1be0:	ldr	x1, [sp, #64]
    1be4:	ldr	x0, [sp, #40]
    1be8:	bl	568 <raw_write_blk>
    1bec:	b	1d0c <unix_write_blk64+0x1e8>
    1bf0:	ldr	x0, [sp, #40]
    1bf4:	ldr	w0, [x0, #52]
    1bf8:	and	w0, w0, #0x1
    1bfc:	str	w0, [sp, #60]
    1c00:	ldr	w0, [sp, #60]
    1c04:	cmp	w0, #0x0
    1c08:	b.eq	1c28 <unix_write_blk64+0x104>  // b.none
    1c0c:	ldr	x4, [sp, #16]
    1c10:	ldr	w3, [sp, #28]
    1c14:	ldr	x2, [sp, #32]
    1c18:	ldr	x1, [sp, #64]
    1c1c:	ldr	x0, [sp, #40]
    1c20:	bl	568 <raw_write_blk>
    1c24:	str	x0, [sp, #80]
    1c28:	ldr	x0, [sp, #16]
    1c2c:	str	x0, [sp, #72]
    1c30:	b	1cfc <unix_write_blk64+0x1d8>
    1c34:	add	x0, sp, #0x30
    1c38:	mov	x2, x0
    1c3c:	ldr	x1, [sp, #32]
    1c40:	ldr	x0, [sp, #64]
    1c44:	bl	c54 <find_cached_block>
    1c48:	str	x0, [sp, #88]
    1c4c:	ldr	x0, [sp, #88]
    1c50:	cmp	x0, #0x0
    1c54:	b.ne	1c74 <unix_write_blk64+0x150>  // b.any
    1c58:	ldr	x0, [sp, #48]
    1c5c:	str	x0, [sp, #88]
    1c60:	ldr	x3, [sp, #32]
    1c64:	ldr	x2, [sp, #88]
    1c68:	ldr	x1, [sp, #64]
    1c6c:	ldr	x0, [sp, #40]
    1c70:	bl	d84 <reuse_cache>
    1c74:	ldr	x0, [sp, #88]
    1c78:	ldr	x0, [x0]
    1c7c:	ldr	x1, [sp, #72]
    1c80:	cmp	x1, x0
    1c84:	b.eq	1cac <unix_write_blk64+0x188>  // b.none
    1c88:	ldr	x0, [sp, #88]
    1c8c:	ldr	x3, [x0]
    1c90:	ldr	x0, [sp, #40]
    1c94:	ldr	w0, [x0, #24]
    1c98:	sxtw	x0, w0
    1c9c:	mov	x2, x0
    1ca0:	ldr	x1, [sp, #72]
    1ca4:	mov	x0, x3
    1ca8:	bl	0 <memcpy>
    1cac:	ldr	w0, [sp, #60]
    1cb0:	cmp	w0, #0x0
    1cb4:	cset	w0, eq  // eq = none
    1cb8:	and	w2, w0, #0xff
    1cbc:	ldr	x1, [sp, #88]
    1cc0:	ldrb	w0, [x1, #20]
    1cc4:	bfxil	w0, w2, #0, #1
    1cc8:	strb	w0, [x1, #20]
    1ccc:	ldr	w0, [sp, #28]
    1cd0:	sub	w0, w0, #0x1
    1cd4:	str	w0, [sp, #28]
    1cd8:	ldr	x0, [sp, #32]
    1cdc:	add	x0, x0, #0x1
    1ce0:	str	x0, [sp, #32]
    1ce4:	ldr	x0, [sp, #40]
    1ce8:	ldr	w0, [x0, #24]
    1cec:	sxtw	x0, w0
    1cf0:	ldr	x1, [sp, #72]
    1cf4:	add	x0, x1, x0
    1cf8:	str	x0, [sp, #72]
    1cfc:	ldr	w0, [sp, #28]
    1d00:	cmp	w0, #0x0
    1d04:	b.gt	1c34 <unix_write_blk64+0x110>
    1d08:	ldr	x0, [sp, #80]
    1d0c:	ldp	x29, x30, [sp], #96
    1d10:	ret

0000000000001d14 <unix_cache_readahead>:
    1d14:	stp	x29, x30, [sp, #-64]!
    1d18:	mov	x29, sp
    1d1c:	str	x0, [sp, #40]
    1d20:	str	x1, [sp, #32]
    1d24:	str	x2, [sp, #24]
    1d28:	ldr	x0, [sp, #40]
    1d2c:	ldr	x0, [x0, #168]
    1d30:	str	x0, [sp, #56]
    1d34:	ldr	x0, [sp, #56]
    1d38:	ldr	w1, [x0]
    1d3c:	mov	w0, #0xb706                	// #46854
    1d40:	movk	w0, #0x7f2b, lsl #16
    1d44:	cmp	w1, w0
    1d48:	b.eq	1d58 <unix_cache_readahead+0x44>  // b.none
    1d4c:	mov	x0, #0xb706                	// #46854
    1d50:	movk	x0, #0x7f2b, lsl #16
    1d54:	b	1dac <unix_cache_readahead+0x98>
    1d58:	ldr	x0, [sp, #56]
    1d5c:	ldr	w4, [x0, #4]
    1d60:	ldr	x0, [sp, #40]
    1d64:	ldr	w0, [x0, #24]
    1d68:	sxtw	x1, w0
    1d6c:	ldr	x0, [sp, #32]
    1d70:	mul	x1, x1, x0
    1d74:	ldr	x0, [sp, #56]
    1d78:	ldr	x0, [x0, #24]
    1d7c:	add	x5, x1, x0
    1d80:	ldr	x0, [sp, #40]
    1d84:	ldr	w0, [x0, #24]
    1d88:	sxtw	x1, w0
    1d8c:	ldr	x0, [sp, #24]
    1d90:	mul	x0, x1, x0
    1d94:	mov	w3, #0x3                   	// #3
    1d98:	mov	x2, x0
    1d9c:	mov	x1, x5
    1da0:	mov	w0, w4
    1da4:	bl	0 <posix_fadvise64>
    1da8:	sxtw	x0, w0
    1dac:	ldp	x29, x30, [sp], #64
    1db0:	ret

0000000000001db4 <unix_write_blk>:
    1db4:	stp	x29, x30, [sp, #-48]!
    1db8:	mov	x29, sp
    1dbc:	str	x0, [sp, #40]
    1dc0:	str	x1, [sp, #32]
    1dc4:	str	w2, [sp, #28]
    1dc8:	str	x3, [sp, #16]
    1dcc:	ldr	x3, [sp, #16]
    1dd0:	ldr	w2, [sp, #28]
    1dd4:	ldr	x1, [sp, #32]
    1dd8:	ldr	x0, [sp, #40]
    1ddc:	bl	1b24 <unix_write_blk64>
    1de0:	ldp	x29, x30, [sp], #48
    1de4:	ret

0000000000001de8 <unix_write_byte>:
    1de8:	stp	x29, x30, [sp, #-80]!
    1dec:	mov	x29, sp
    1df0:	str	x0, [sp, #40]
    1df4:	str	x1, [sp, #32]
    1df8:	str	w2, [sp, #28]
    1dfc:	str	x3, [sp, #16]
    1e00:	str	xzr, [sp, #72]
    1e04:	ldr	x0, [sp, #40]
    1e08:	ldr	x1, [x0]
    1e0c:	mov	x0, #0xb705                	// #46853
    1e10:	movk	x0, #0x7f2b, lsl #16
    1e14:	cmp	x1, x0
    1e18:	b.eq	1e28 <unix_write_byte+0x40>  // b.none
    1e1c:	mov	x0, #0xb705                	// #46853
    1e20:	movk	x0, #0x7f2b, lsl #16
    1e24:	b	1f38 <unix_write_byte+0x150>
    1e28:	ldr	x0, [sp, #40]
    1e2c:	ldr	x0, [x0, #168]
    1e30:	str	x0, [sp, #64]
    1e34:	ldr	x0, [sp, #64]
    1e38:	ldr	w1, [x0]
    1e3c:	mov	w0, #0xb706                	// #46854
    1e40:	movk	w0, #0x7f2b, lsl #16
    1e44:	cmp	w1, w0
    1e48:	b.eq	1e58 <unix_write_byte+0x70>  // b.none
    1e4c:	mov	x0, #0xb706                	// #46854
    1e50:	movk	x0, #0x7f2b, lsl #16
    1e54:	b	1f38 <unix_write_byte+0x150>
    1e58:	ldr	x0, [sp, #40]
    1e5c:	ldr	w0, [x0, #184]
    1e60:	cmp	w0, #0x0
    1e64:	b.eq	1e74 <unix_write_byte+0x8c>  // b.none
    1e68:	mov	x0, #0xb750                	// #46928
    1e6c:	movk	x0, #0x7f2b, lsl #16
    1e70:	b	1f38 <unix_write_byte+0x150>
    1e74:	mov	w2, #0x1                   	// #1
    1e78:	ldr	x1, [sp, #64]
    1e7c:	ldr	x0, [sp, #40]
    1e80:	bl	e50 <flush_cached_blocks>
    1e84:	str	x0, [sp, #72]
    1e88:	ldr	x0, [sp, #72]
    1e8c:	cmp	x0, #0x0
    1e90:	b.eq	1e9c <unix_write_byte+0xb4>  // b.none
    1e94:	ldr	x0, [sp, #72]
    1e98:	b	1f38 <unix_write_byte+0x150>
    1e9c:	ldr	x0, [sp, #64]
    1ea0:	ldr	w3, [x0, #4]
    1ea4:	ldr	x0, [sp, #64]
    1ea8:	ldr	x0, [x0, #24]
    1eac:	mov	x1, x0
    1eb0:	ldr	x0, [sp, #32]
    1eb4:	add	x0, x1, x0
    1eb8:	mov	w2, #0x0                   	// #0
    1ebc:	mov	x1, x0
    1ec0:	mov	w0, w3
    1ec4:	bl	0 <lseek64>
    1ec8:	cmp	x0, #0x0
    1ecc:	b.ge	1ee0 <unix_write_byte+0xf8>  // b.tcont
    1ed0:	bl	0 <__errno_location>
    1ed4:	ldr	w0, [x0]
    1ed8:	sxtw	x0, w0
    1edc:	b	1f38 <unix_write_byte+0x150>
    1ee0:	ldr	x0, [sp, #64]
    1ee4:	ldr	w0, [x0, #4]
    1ee8:	ldrsw	x1, [sp, #28]
    1eec:	mov	x2, x1
    1ef0:	ldr	x1, [sp, #16]
    1ef4:	bl	0 <write>
    1ef8:	str	x0, [sp, #56]
    1efc:	ldr	x0, [sp, #56]
    1f00:	cmp	x0, #0x0
    1f04:	b.ge	1f18 <unix_write_byte+0x130>  // b.tcont
    1f08:	bl	0 <__errno_location>
    1f0c:	ldr	w0, [x0]
    1f10:	sxtw	x0, w0
    1f14:	b	1f38 <unix_write_byte+0x150>
    1f18:	ldrsw	x0, [sp, #28]
    1f1c:	ldr	x1, [sp, #56]
    1f20:	cmp	x1, x0
    1f24:	b.eq	1f34 <unix_write_byte+0x14c>  // b.none
    1f28:	mov	x0, #0xb725                	// #46885
    1f2c:	movk	x0, #0x7f2b, lsl #16
    1f30:	b	1f38 <unix_write_byte+0x150>
    1f34:	mov	x0, #0x0                   	// #0
    1f38:	ldp	x29, x30, [sp], #80
    1f3c:	ret

0000000000001f40 <unix_flush>:
    1f40:	stp	x29, x30, [sp, #-48]!
    1f44:	mov	x29, sp
    1f48:	str	x0, [sp, #24]
    1f4c:	str	xzr, [sp, #40]
    1f50:	ldr	x0, [sp, #24]
    1f54:	ldr	x1, [x0]
    1f58:	mov	x0, #0xb705                	// #46853
    1f5c:	movk	x0, #0x7f2b, lsl #16
    1f60:	cmp	x1, x0
    1f64:	b.eq	1f74 <unix_flush+0x34>  // b.none
    1f68:	mov	x0, #0xb705                	// #46853
    1f6c:	movk	x0, #0x7f2b, lsl #16
    1f70:	b	1fec <unix_flush+0xac>
    1f74:	ldr	x0, [sp, #24]
    1f78:	ldr	x0, [x0, #168]
    1f7c:	str	x0, [sp, #32]
    1f80:	ldr	x0, [sp, #32]
    1f84:	ldr	w1, [x0]
    1f88:	mov	w0, #0xb706                	// #46854
    1f8c:	movk	w0, #0x7f2b, lsl #16
    1f90:	cmp	w1, w0
    1f94:	b.eq	1fa4 <unix_flush+0x64>  // b.none
    1f98:	mov	x0, #0xb706                	// #46854
    1f9c:	movk	x0, #0x7f2b, lsl #16
    1fa0:	b	1fec <unix_flush+0xac>
    1fa4:	mov	w2, #0x0                   	// #0
    1fa8:	ldr	x1, [sp, #32]
    1fac:	ldr	x0, [sp, #24]
    1fb0:	bl	e50 <flush_cached_blocks>
    1fb4:	str	x0, [sp, #40]
    1fb8:	ldr	x0, [sp, #40]
    1fbc:	cmp	x0, #0x0
    1fc0:	b.ne	1fe8 <unix_flush+0xa8>  // b.any
    1fc4:	ldr	x0, [sp, #32]
    1fc8:	ldr	w0, [x0, #4]
    1fcc:	bl	0 <fsync>
    1fd0:	cmp	w0, #0x0
    1fd4:	b.eq	1fe8 <unix_flush+0xa8>  // b.none
    1fd8:	bl	0 <__errno_location>
    1fdc:	ldr	w0, [x0]
    1fe0:	sxtw	x0, w0
    1fe4:	b	1fec <unix_flush+0xac>
    1fe8:	ldr	x0, [sp, #40]
    1fec:	ldp	x29, x30, [sp], #48
    1ff0:	ret

0000000000001ff4 <unix_set_option>:
    1ff4:	stp	x29, x30, [sp, #-80]!
    1ff8:	mov	x29, sp
    1ffc:	str	x0, [sp, #40]
    2000:	str	x1, [sp, #32]
    2004:	str	x2, [sp, #24]
    2008:	ldr	x0, [sp, #40]
    200c:	ldr	x1, [x0]
    2010:	mov	x0, #0xb705                	// #46853
    2014:	movk	x0, #0x7f2b, lsl #16
    2018:	cmp	x1, x0
    201c:	b.eq	202c <unix_set_option+0x38>  // b.none
    2020:	mov	x0, #0xb705                	// #46853
    2024:	movk	x0, #0x7f2b, lsl #16
    2028:	b	20f8 <unix_set_option+0x104>
    202c:	ldr	x0, [sp, #40]
    2030:	ldr	x0, [x0, #168]
    2034:	str	x0, [sp, #72]
    2038:	ldr	x0, [sp, #72]
    203c:	ldr	w1, [x0]
    2040:	mov	w0, #0xb706                	// #46854
    2044:	movk	w0, #0x7f2b, lsl #16
    2048:	cmp	w1, w0
    204c:	b.eq	205c <unix_set_option+0x68>  // b.none
    2050:	mov	x0, #0xb706                	// #46854
    2054:	movk	x0, #0x7f2b, lsl #16
    2058:	b	20f8 <unix_set_option+0x104>
    205c:	adrp	x0, 0 <ext2fsP_is_disk_device>
    2060:	add	x1, x0, #0x0
    2064:	ldr	x0, [sp, #32]
    2068:	bl	0 <strcmp>
    206c:	cmp	w0, #0x0
    2070:	b.ne	20f0 <unix_set_option+0xfc>  // b.any
    2074:	ldr	x0, [sp, #24]
    2078:	cmp	x0, #0x0
    207c:	b.ne	208c <unix_set_option+0x98>  // b.any
    2080:	mov	x0, #0xb747                	// #46919
    2084:	movk	x0, #0x7f2b, lsl #16
    2088:	b	20f8 <unix_set_option+0x104>
    208c:	add	x0, sp, #0x38
    2090:	mov	w2, #0x0                   	// #0
    2094:	mov	x1, x0
    2098:	ldr	x0, [sp, #24]
    209c:	bl	0 <strtoull>
    20a0:	str	x0, [sp, #64]
    20a4:	ldr	x0, [sp, #56]
    20a8:	ldrb	w0, [x0]
    20ac:	cmp	w0, #0x0
    20b0:	b.eq	20c0 <unix_set_option+0xcc>  // b.none
    20b4:	mov	x0, #0xb747                	// #46919
    20b8:	movk	x0, #0x7f2b, lsl #16
    20bc:	b	20f8 <unix_set_option+0x104>
    20c0:	ldr	x1, [sp, #64]
    20c4:	ldr	x0, [sp, #72]
    20c8:	str	x1, [x0, #24]
    20cc:	ldr	x0, [sp, #72]
    20d0:	ldr	x0, [x0, #24]
    20d4:	cmp	x0, #0x0
    20d8:	b.ge	20e8 <unix_set_option+0xf4>  // b.tcont
    20dc:	mov	x0, #0xb747                	// #46919
    20e0:	movk	x0, #0x7f2b, lsl #16
    20e4:	b	20f8 <unix_set_option+0x104>
    20e8:	mov	x0, #0x0                   	// #0
    20ec:	b	20f8 <unix_set_option+0x104>
    20f0:	mov	x0, #0xb747                	// #46919
    20f4:	movk	x0, #0x7f2b, lsl #16
    20f8:	ldp	x29, x30, [sp], #80
    20fc:	ret

0000000000002100 <unix_discard>:
    2100:	stp	x29, x30, [sp, #-80]!
    2104:	mov	x29, sp
    2108:	str	x0, [sp, #40]
    210c:	str	x1, [sp, #32]
    2110:	str	x2, [sp, #24]
    2114:	ldr	x0, [sp, #40]
    2118:	ldr	x1, [x0]
    211c:	mov	x0, #0xb705                	// #46853
    2120:	movk	x0, #0x7f2b, lsl #16
    2124:	cmp	x1, x0
    2128:	b.eq	2138 <unix_discard+0x38>  // b.none
    212c:	mov	x0, #0xb705                	// #46853
    2130:	movk	x0, #0x7f2b, lsl #16
    2134:	b	2268 <unix_discard+0x168>
    2138:	ldr	x0, [sp, #40]
    213c:	ldr	x0, [x0, #168]
    2140:	str	x0, [sp, #64]
    2144:	ldr	x0, [sp, #64]
    2148:	ldr	w1, [x0]
    214c:	mov	w0, #0xb706                	// #46854
    2150:	movk	w0, #0x7f2b, lsl #16
    2154:	cmp	w1, w0
    2158:	b.eq	2168 <unix_discard+0x68>  // b.none
    215c:	mov	x0, #0xb706                	// #46854
    2160:	movk	x0, #0x7f2b, lsl #16
    2164:	b	2268 <unix_discard+0x168>
    2168:	ldr	x0, [sp, #40]
    216c:	ldr	w0, [x0, #52]
    2170:	and	w0, w0, #0x4
    2174:	cmp	w0, #0x0
    2178:	b.eq	21d8 <unix_discard+0xd8>  // b.none
    217c:	ldr	x0, [sp, #40]
    2180:	ldr	w0, [x0, #24]
    2184:	sxtw	x1, w0
    2188:	ldr	x0, [sp, #32]
    218c:	mul	x0, x1, x0
    2190:	ldr	x1, [sp, #64]
    2194:	ldr	x1, [x1, #24]
    2198:	add	x0, x0, x1
    219c:	str	x0, [sp, #48]
    21a0:	ldr	x0, [sp, #40]
    21a4:	ldr	w0, [x0, #24]
    21a8:	sxtw	x1, w0
    21ac:	ldr	x0, [sp, #24]
    21b0:	mul	x0, x1, x0
    21b4:	str	x0, [sp, #56]
    21b8:	ldr	x0, [sp, #64]
    21bc:	ldr	w0, [x0, #4]
    21c0:	add	x1, sp, #0x30
    21c4:	mov	x2, x1
    21c8:	mov	x1, #0x1277                	// #4727
    21cc:	bl	0 <ioctl>
    21d0:	str	w0, [sp, #76]
    21d4:	b	2228 <unix_discard+0x128>
    21d8:	ldr	x0, [sp, #64]
    21dc:	ldr	w4, [x0, #4]
    21e0:	ldr	x0, [sp, #40]
    21e4:	ldr	w0, [x0, #24]
    21e8:	sxtw	x1, w0
    21ec:	ldr	x0, [sp, #32]
    21f0:	mul	x1, x1, x0
    21f4:	ldr	x0, [sp, #64]
    21f8:	ldr	x0, [x0, #24]
    21fc:	add	x2, x1, x0
    2200:	ldr	x0, [sp, #40]
    2204:	ldr	w0, [x0, #24]
    2208:	sxtw	x1, w0
    220c:	ldr	x0, [sp, #24]
    2210:	mul	x0, x1, x0
    2214:	mov	x3, x0
    2218:	mov	w1, #0x3                   	// #3
    221c:	mov	w0, w4
    2220:	bl	0 <fallocate64>
    2224:	str	w0, [sp, #76]
    2228:	ldr	w0, [sp, #76]
    222c:	cmp	w0, #0x0
    2230:	b.ge	2254 <unix_discard+0x154>  // b.tcont
    2234:	bl	0 <__errno_location>
    2238:	ldr	w0, [x0]
    223c:	cmp	w0, #0x5f
    2240:	b.eq	225c <unix_discard+0x15c>  // b.none
    2244:	bl	0 <__errno_location>
    2248:	ldr	w0, [x0]
    224c:	sxtw	x0, w0
    2250:	b	2268 <unix_discard+0x168>
    2254:	mov	x0, #0x0                   	// #0
    2258:	b	2268 <unix_discard+0x168>
    225c:	nop
    2260:	mov	x0, #0xb750                	// #46928
    2264:	movk	x0, #0x7f2b, lsl #16
    2268:	ldp	x29, x30, [sp], #80
    226c:	ret

0000000000002270 <__unix_zeroout>:
    2270:	stp	x29, x30, [sp, #-64]!
    2274:	mov	x29, sp
    2278:	str	w0, [sp, #44]
    227c:	str	x1, [sp, #32]
    2280:	str	x2, [sp, #24]
    2284:	mov	w0, #0xffffffff            	// #-1
    2288:	str	w0, [sp, #60]
    228c:	ldr	x3, [sp, #24]
    2290:	ldr	x2, [sp, #32]
    2294:	mov	w1, #0x10                  	// #16
    2298:	ldr	w0, [sp, #44]
    229c:	bl	0 <fallocate64>
    22a0:	str	w0, [sp, #60]
    22a4:	ldr	w0, [sp, #60]
    22a8:	cmp	w0, #0x0
    22ac:	b.ne	22b8 <__unix_zeroout+0x48>  // b.any
    22b0:	mov	w0, #0x0                   	// #0
    22b4:	b	22f8 <__unix_zeroout+0x88>
    22b8:	ldr	x3, [sp, #24]
    22bc:	ldr	x2, [sp, #32]
    22c0:	mov	w1, #0x3                   	// #3
    22c4:	ldr	w0, [sp, #44]
    22c8:	bl	0 <fallocate64>
    22cc:	str	w0, [sp, #60]
    22d0:	ldr	w0, [sp, #60]
    22d4:	cmp	w0, #0x0
    22d8:	b.ne	22e4 <__unix_zeroout+0x74>  // b.any
    22dc:	mov	w0, #0x0                   	// #0
    22e0:	b	22f8 <__unix_zeroout+0x88>
    22e4:	bl	0 <__errno_location>
    22e8:	mov	x1, x0
    22ec:	mov	w0, #0x5f                  	// #95
    22f0:	str	w0, [x1]
    22f4:	ldr	w0, [sp, #60]
    22f8:	ldp	x29, x30, [sp], #64
    22fc:	ret

0000000000002300 <unix_zeroout>:
    2300:	stp	x29, x30, [sp, #-192]!
    2304:	mov	x29, sp
    2308:	str	x0, [sp, #40]
    230c:	str	x1, [sp, #32]
    2310:	str	x2, [sp, #24]
    2314:	ldr	x0, [sp, #40]
    2318:	ldr	x1, [x0]
    231c:	mov	x0, #0xb705                	// #46853
    2320:	movk	x0, #0x7f2b, lsl #16
    2324:	cmp	x1, x0
    2328:	b.eq	2338 <unix_zeroout+0x38>  // b.none
    232c:	mov	x0, #0xb705                	// #46853
    2330:	movk	x0, #0x7f2b, lsl #16
    2334:	b	24f0 <unix_zeroout+0x1f0>
    2338:	ldr	x0, [sp, #40]
    233c:	ldr	x0, [x0, #168]
    2340:	str	x0, [sp, #176]
    2344:	ldr	x0, [sp, #176]
    2348:	ldr	w1, [x0]
    234c:	mov	w0, #0xb706                	// #46854
    2350:	movk	w0, #0x7f2b, lsl #16
    2354:	cmp	w1, w0
    2358:	b.eq	2368 <unix_zeroout+0x68>  // b.none
    235c:	mov	x0, #0xb706                	// #46854
    2360:	movk	x0, #0x7f2b, lsl #16
    2364:	b	24f0 <unix_zeroout+0x1f0>
    2368:	adrp	x0, 0 <ext2fsP_is_disk_device>
    236c:	add	x0, x0, #0x0
    2370:	bl	b0 <safe_getenv>
    2374:	cmp	x0, #0x0
    2378:	b.ne	24dc <unix_zeroout+0x1dc>  // b.any
    237c:	ldr	x0, [sp, #40]
    2380:	ldr	w0, [x0, #52]
    2384:	and	w0, w0, #0x4
    2388:	cmp	w0, #0x0
    238c:	b.ne	2448 <unix_zeroout+0x148>  // b.any
    2390:	ldr	x0, [sp, #24]
    2394:	cmp	x0, #0x0
    2398:	b.ne	23a4 <unix_zeroout+0xa4>  // b.any
    239c:	mov	x0, #0x0                   	// #0
    23a0:	b	24f0 <unix_zeroout+0x1f0>
    23a4:	ldr	x0, [sp, #176]
    23a8:	ldr	w0, [x0, #4]
    23ac:	add	x1, sp, #0x30
    23b0:	bl	0 <fstat64>
    23b4:	str	w0, [sp, #188]
    23b8:	ldr	w0, [sp, #188]
    23bc:	cmp	w0, #0x0
    23c0:	b.ne	249c <unix_zeroout+0x19c>  // b.any
    23c4:	ldr	x0, [sp, #96]
    23c8:	mov	x2, x0
    23cc:	ldr	x1, [sp, #32]
    23d0:	ldr	x0, [sp, #24]
    23d4:	add	x1, x1, x0
    23d8:	ldr	x0, [sp, #40]
    23dc:	ldr	w0, [x0, #24]
    23e0:	sxtw	x0, w0
    23e4:	mul	x0, x1, x0
    23e8:	ldr	x1, [sp, #176]
    23ec:	ldr	x1, [x1, #24]
    23f0:	add	x0, x0, x1
    23f4:	cmp	x2, x0
    23f8:	b.cs	2448 <unix_zeroout+0x148>  // b.hs, b.nlast
    23fc:	ldr	x0, [sp, #176]
    2400:	ldr	w2, [x0, #4]
    2404:	ldr	x1, [sp, #32]
    2408:	ldr	x0, [sp, #24]
    240c:	add	x1, x1, x0
    2410:	ldr	x0, [sp, #40]
    2414:	ldr	w0, [x0, #24]
    2418:	sxtw	x0, w0
    241c:	mul	x0, x1, x0
    2420:	ldr	x1, [sp, #176]
    2424:	ldr	x1, [x1, #24]
    2428:	add	x0, x0, x1
    242c:	mov	x1, x0
    2430:	mov	w0, w2
    2434:	bl	0 <ftruncate64>
    2438:	str	w0, [sp, #188]
    243c:	ldr	w0, [sp, #188]
    2440:	cmp	w0, #0x0
    2444:	b.ne	24a4 <unix_zeroout+0x1a4>  // b.any
    2448:	ldr	x0, [sp, #176]
    244c:	ldr	w3, [x0, #4]
    2450:	ldr	x0, [sp, #40]
    2454:	ldr	w0, [x0, #24]
    2458:	sxtw	x1, w0
    245c:	ldr	x0, [sp, #32]
    2460:	mul	x1, x1, x0
    2464:	ldr	x0, [sp, #176]
    2468:	ldr	x0, [x0, #24]
    246c:	add	x4, x1, x0
    2470:	ldr	x0, [sp, #40]
    2474:	ldr	w0, [x0, #24]
    2478:	sxtw	x1, w0
    247c:	ldr	x0, [sp, #24]
    2480:	mul	x0, x1, x0
    2484:	mov	x2, x0
    2488:	mov	x1, x4
    248c:	mov	w0, w3
    2490:	bl	2270 <__unix_zeroout>
    2494:	str	w0, [sp, #188]
    2498:	b	24a8 <unix_zeroout+0x1a8>
    249c:	nop
    24a0:	b	24a8 <unix_zeroout+0x1a8>
    24a4:	nop
    24a8:	ldr	w0, [sp, #188]
    24ac:	cmp	w0, #0x0
    24b0:	b.ge	24d4 <unix_zeroout+0x1d4>  // b.tcont
    24b4:	bl	0 <__errno_location>
    24b8:	ldr	w0, [x0]
    24bc:	cmp	w0, #0x5f
    24c0:	b.eq	24e4 <unix_zeroout+0x1e4>  // b.none
    24c4:	bl	0 <__errno_location>
    24c8:	ldr	w0, [x0]
    24cc:	sxtw	x0, w0
    24d0:	b	24f0 <unix_zeroout+0x1f0>
    24d4:	mov	x0, #0x0                   	// #0
    24d8:	b	24f0 <unix_zeroout+0x1f0>
    24dc:	nop
    24e0:	b	24e8 <unix_zeroout+0x1e8>
    24e4:	nop
    24e8:	mov	x0, #0xb750                	// #46928
    24ec:	movk	x0, #0x7f2b, lsl #16
    24f0:	ldp	x29, x30, [sp], #192
    24f4:	ret

sparse_io.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <sparse_open>:
   0:	sub	sp, sp, #0x20
   4:	str	x0, [sp, #24]
   8:	str	w1, [sp, #20]
   c:	str	x2, [sp, #8]
  10:	mov	x0, #0xb750                	// #46928
  14:	movk	x0, #0x7f2b, lsl #16
  18:	add	sp, sp, #0x20
  1c:	ret

0000000000000020 <sparse_close>:
  20:	sub	sp, sp, #0x10
  24:	str	x0, [sp, #8]
  28:	mov	x0, #0xb750                	// #46928
  2c:	movk	x0, #0x7f2b, lsl #16
  30:	add	sp, sp, #0x10
  34:	ret

unlink.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <unlink_proc>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x0, [sp, #56]
  10:	str	w1, [sp, #52]
  14:	str	w2, [sp, #48]
  18:	str	x3, [sp, #40]
  1c:	str	x4, [sp, #32]
  20:	ldr	x0, [sp, #32]
  24:	str	x0, [sp, #72]
  28:	ldr	x0, [sp, #72]
  2c:	ldr	x0, [x0, #24]
  30:	str	x0, [sp, #64]
  34:	ldr	x0, [sp, #72]
  38:	ldr	x1, [sp, #56]
  3c:	str	x1, [x0, #24]
  40:	ldr	x0, [sp, #72]
  44:	ldr	x0, [x0]
  48:	cmp	x0, #0x0
  4c:	b.eq	b0 <unlink_proc+0xb0>  // b.none
  50:	ldr	x0, [sp, #56]
  54:	bl	0 <ext2fs_dirent_name_len>
  58:	mov	w1, w0
  5c:	ldr	x0, [sp, #72]
  60:	ldr	w0, [x0, #8]
  64:	cmp	w1, w0
  68:	b.eq	74 <unlink_proc+0x74>  // b.none
  6c:	mov	w0, #0x0                   	// #0
  70:	b	148 <unlink_proc+0x148>
  74:	ldr	x0, [sp, #72]
  78:	ldr	x19, [x0]
  7c:	ldr	x0, [sp, #56]
  80:	add	x20, x0, #0x8
  84:	ldr	x0, [sp, #56]
  88:	bl	0 <ext2fs_dirent_name_len>
  8c:	sxtw	x0, w0
  90:	mov	x2, x0
  94:	mov	x1, x20
  98:	mov	x0, x19
  9c:	bl	0 <strncmp>
  a0:	cmp	w0, #0x0
  a4:	b.eq	b0 <unlink_proc+0xb0>  // b.none
  a8:	mov	w0, #0x0                   	// #0
  ac:	b	148 <unlink_proc+0x148>
  b0:	ldr	x0, [sp, #72]
  b4:	ldr	w0, [x0, #12]
  b8:	cmp	w0, #0x0
  bc:	b.eq	e0 <unlink_proc+0xe0>  // b.none
  c0:	ldr	x0, [sp, #56]
  c4:	ldr	w1, [x0]
  c8:	ldr	x0, [sp, #72]
  cc:	ldr	w0, [x0, #12]
  d0:	cmp	w1, w0
  d4:	b.eq	f8 <unlink_proc+0xf8>  // b.none
  d8:	mov	w0, #0x0                   	// #0
  dc:	b	148 <unlink_proc+0x148>
  e0:	ldr	x0, [sp, #56]
  e4:	ldr	w0, [x0]
  e8:	cmp	w0, #0x0
  ec:	b.ne	f8 <unlink_proc+0xf8>  // b.any
  f0:	mov	w0, #0x0                   	// #0
  f4:	b	148 <unlink_proc+0x148>
  f8:	ldr	w0, [sp, #52]
  fc:	cmp	w0, #0x0
 100:	b.eq	128 <unlink_proc+0x128>  // b.none
 104:	ldr	x0, [sp, #64]
 108:	ldrh	w1, [x0, #4]
 10c:	ldr	x0, [sp, #56]
 110:	ldrh	w0, [x0, #4]
 114:	add	w0, w1, w0
 118:	and	w1, w0, #0xffff
 11c:	ldr	x0, [sp, #64]
 120:	strh	w1, [x0, #4]
 124:	b	130 <unlink_proc+0x130>
 128:	ldr	x0, [sp, #56]
 12c:	str	wzr, [x0]
 130:	ldr	x0, [sp, #72]
 134:	ldr	w0, [x0, #32]
 138:	add	w1, w0, #0x1
 13c:	ldr	x0, [sp, #72]
 140:	str	w1, [x0, #32]
 144:	mov	w0, #0x3                   	// #3
 148:	ldp	x19, x20, [sp, #16]
 14c:	ldp	x29, x30, [sp], #80
 150:	ret

0000000000000154 <ext2fs_unlink>:
 154:	stp	x29, x30, [sp, #-96]!
 158:	mov	x29, sp
 15c:	str	x0, [sp, #40]
 160:	str	w1, [sp, #36]
 164:	str	x2, [sp, #24]
 168:	str	w3, [sp, #32]
 16c:	str	w4, [sp, #20]
 170:	ldr	x0, [sp, #40]
 174:	ldr	x1, [x0]
 178:	mov	x0, #0xb701                	// #46849
 17c:	movk	x0, #0x7f2b, lsl #16
 180:	cmp	x1, x0
 184:	b.eq	194 <ext2fs_unlink+0x40>  // b.none
 188:	mov	x0, #0xb701                	// #46849
 18c:	movk	x0, #0x7f2b, lsl #16
 190:	b	26c <ext2fs_unlink+0x118>
 194:	ldr	x0, [sp, #24]
 198:	cmp	x0, #0x0
 19c:	b.ne	1b8 <ext2fs_unlink+0x64>  // b.any
 1a0:	ldr	w0, [sp, #32]
 1a4:	cmp	w0, #0x0
 1a8:	b.ne	1b8 <ext2fs_unlink+0x64>  // b.any
 1ac:	mov	x0, #0xb747                	// #46919
 1b0:	movk	x0, #0x7f2b, lsl #16
 1b4:	b	26c <ext2fs_unlink+0x118>
 1b8:	ldr	x0, [sp, #40]
 1bc:	ldr	w0, [x0, #16]
 1c0:	and	w0, w0, #0x1
 1c4:	cmp	w0, #0x0
 1c8:	b.ne	1d8 <ext2fs_unlink+0x84>  // b.any
 1cc:	mov	x0, #0xb715                	// #46869
 1d0:	movk	x0, #0x7f2b, lsl #16
 1d4:	b	26c <ext2fs_unlink+0x118>
 1d8:	ldr	x0, [sp, #24]
 1dc:	str	x0, [sp, #48]
 1e0:	ldr	x0, [sp, #24]
 1e4:	cmp	x0, #0x0
 1e8:	b.eq	1f8 <ext2fs_unlink+0xa4>  // b.none
 1ec:	ldr	x0, [sp, #24]
 1f0:	bl	0 <strlen>
 1f4:	b	1fc <ext2fs_unlink+0xa8>
 1f8:	mov	w0, #0x0                   	// #0
 1fc:	str	w0, [sp, #56]
 200:	ldr	w0, [sp, #32]
 204:	str	w0, [sp, #60]
 208:	str	wzr, [sp, #64]
 20c:	str	wzr, [sp, #80]
 210:	str	xzr, [sp, #72]
 214:	add	x0, sp, #0x30
 218:	mov	x5, x0
 21c:	adrp	x0, 0 <unlink_proc>
 220:	add	x4, x0, #0x0
 224:	mov	x3, #0x0                   	// #0
 228:	mov	w2, #0x1                   	// #1
 22c:	ldr	w1, [sp, #36]
 230:	ldr	x0, [sp, #40]
 234:	bl	0 <ext2fs_dir_iterate>
 238:	str	x0, [sp, #88]
 23c:	ldr	x0, [sp, #88]
 240:	cmp	x0, #0x0
 244:	b.eq	250 <ext2fs_unlink+0xfc>  // b.none
 248:	ldr	x0, [sp, #88]
 24c:	b	26c <ext2fs_unlink+0x118>
 250:	ldr	w0, [sp, #80]
 254:	cmp	w0, #0x0
 258:	b.eq	264 <ext2fs_unlink+0x110>  // b.none
 25c:	mov	x0, #0x0                   	// #0
 260:	b	26c <ext2fs_unlink+0x118>
 264:	mov	x0, #0xb726                	// #46886
 268:	movk	x0, #0x7f2b, lsl #16
 26c:	ldp	x29, x30, [sp], #96
 270:	ret

valid_blk.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_inode_has_valid_blocks2>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	ldr	x0, [sp, #16]
  14:	ldrh	w0, [x0]
  18:	and	w0, w0, #0xf000
  1c:	cmp	w0, #0x4, lsl #12
  20:	b.eq	54 <ext2fs_inode_has_valid_blocks2+0x54>  // b.none
  24:	ldr	x0, [sp, #16]
  28:	ldrh	w0, [x0]
  2c:	and	w0, w0, #0xf000
  30:	cmp	w0, #0x8, lsl #12
  34:	b.eq	54 <ext2fs_inode_has_valid_blocks2+0x54>  // b.none
  38:	ldr	x0, [sp, #16]
  3c:	ldrh	w0, [x0]
  40:	and	w0, w0, #0xf000
  44:	cmp	w0, #0xa, lsl #12
  48:	b.eq	54 <ext2fs_inode_has_valid_blocks2+0x54>  // b.none
  4c:	mov	w0, #0x0                   	// #0
  50:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  54:	ldr	x0, [sp, #16]
  58:	ldrh	w0, [x0]
  5c:	and	w0, w0, #0xf000
  60:	cmp	w0, #0xa, lsl #12
  64:	b.ne	dc <ext2fs_inode_has_valid_blocks2+0xdc>  // b.any
  68:	ldr	x1, [sp, #16]
  6c:	ldr	x0, [sp, #24]
  70:	bl	0 <ext2fs_file_acl_block>
  74:	cmp	x0, #0x0
  78:	b.ne	94 <ext2fs_inode_has_valid_blocks2+0x94>  // b.any
  7c:	ldr	x0, [sp, #16]
  80:	ldr	w0, [x0, #28]
  84:	cmp	w0, #0x0
  88:	b.ne	dc <ext2fs_inode_has_valid_blocks2+0xdc>  // b.any
  8c:	mov	w0, #0x0                   	// #0
  90:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  94:	ldr	x0, [sp, #16]
  98:	ldr	w0, [x0, #4]
  9c:	cmp	w0, #0x3b
  a0:	b.ls	ac <ext2fs_inode_has_valid_blocks2+0xac>  // b.plast
  a4:	mov	w0, #0x1                   	// #1
  a8:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  ac:	ldr	x0, [sp, #16]
  b0:	ldr	w0, [x0, #4]
  b4:	cmp	w0, #0x4
  b8:	b.ls	d4 <ext2fs_inode_has_valid_blocks2+0xd4>  // b.plast
  bc:	ldr	x0, [sp, #16]
  c0:	ldr	w0, [x0, #44]
  c4:	cmp	w0, #0x0
  c8:	b.ne	d4 <ext2fs_inode_has_valid_blocks2+0xd4>  // b.any
  cc:	mov	w0, #0x1                   	// #1
  d0:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  d4:	mov	w0, #0x0                   	// #0
  d8:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  dc:	ldr	x0, [sp, #16]
  e0:	ldr	w0, [x0, #32]
  e4:	and	w0, w0, #0x10000000
  e8:	cmp	w0, #0x0
  ec:	b.eq	f8 <ext2fs_inode_has_valid_blocks2+0xf8>  // b.none
  f0:	mov	w0, #0x0                   	// #0
  f4:	b	fc <ext2fs_inode_has_valid_blocks2+0xfc>
  f8:	mov	w0, #0x1                   	// #1
  fc:	ldp	x29, x30, [sp], #32
 100:	ret

0000000000000104 <ext2fs_inode_has_valid_blocks>:
 104:	stp	x29, x30, [sp, #-32]!
 108:	mov	x29, sp
 10c:	str	x0, [sp, #24]
 110:	ldr	x1, [sp, #24]
 114:	mov	x0, #0x0                   	// #0
 118:	bl	0 <ext2fs_inode_has_valid_blocks2>
 11c:	ldp	x29, x30, [sp], #32
 120:	ret

version.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_parse_version_string>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	wzr, [sp, #36]
  10:	str	wzr, [sp, #32]
  14:	ldr	x0, [sp, #24]
  18:	str	x0, [sp, #40]
  1c:	b	b4 <ext2fs_parse_version_string+0xb4>
  20:	ldr	x0, [sp, #40]
  24:	ldrb	w0, [x0]
  28:	cmp	w0, #0x2e
  2c:	b.ne	48 <ext2fs_parse_version_string+0x48>  // b.any
  30:	ldr	w0, [sp, #32]
  34:	add	w1, w0, #0x1
  38:	str	w1, [sp, #32]
  3c:	cmp	w0, #0x0
  40:	b.eq	a4 <ext2fs_parse_version_string+0xa4>  // b.none
  44:	b	cc <ext2fs_parse_version_string+0xcc>
  48:	bl	0 <__ctype_b_loc>
  4c:	ldr	x1, [x0]
  50:	ldr	x0, [sp, #40]
  54:	ldrb	w0, [x0]
  58:	and	x0, x0, #0xff
  5c:	lsl	x0, x0, #1
  60:	add	x0, x1, x0
  64:	ldrh	w0, [x0]
  68:	and	w0, w0, #0x800
  6c:	cmp	w0, #0x0
  70:	b.eq	c8 <ext2fs_parse_version_string+0xc8>  // b.none
  74:	ldr	w1, [sp, #36]
  78:	mov	w0, w1
  7c:	lsl	w0, w0, #2
  80:	add	w0, w0, w1
  84:	lsl	w0, w0, #1
  88:	mov	w1, w0
  8c:	ldr	x0, [sp, #40]
  90:	ldrb	w0, [x0]
  94:	sub	w0, w0, #0x30
  98:	add	w0, w1, w0
  9c:	str	w0, [sp, #36]
  a0:	b	a8 <ext2fs_parse_version_string+0xa8>
  a4:	nop
  a8:	ldr	x0, [sp, #40]
  ac:	add	x0, x0, #0x1
  b0:	str	x0, [sp, #40]
  b4:	ldr	x0, [sp, #40]
  b8:	ldrb	w0, [x0]
  bc:	cmp	w0, #0x0
  c0:	b.ne	20 <ext2fs_parse_version_string+0x20>  // b.any
  c4:	b	cc <ext2fs_parse_version_string+0xcc>
  c8:	nop
  cc:	ldr	w0, [sp, #36]
  d0:	ldp	x29, x30, [sp], #48
  d4:	ret

00000000000000d8 <ext2fs_get_library_version>:
  d8:	stp	x29, x30, [sp, #-32]!
  dc:	mov	x29, sp
  e0:	str	x0, [sp, #24]
  e4:	str	x1, [sp, #16]
  e8:	ldr	x0, [sp, #24]
  ec:	cmp	x0, #0x0
  f0:	b.eq	108 <ext2fs_get_library_version+0x30>  // b.none
  f4:	adrp	x0, 0 <ext2fs_parse_version_string>
  f8:	add	x0, x0, #0x0
  fc:	ldr	x1, [x0]
 100:	ldr	x0, [sp, #24]
 104:	str	x1, [x0]
 108:	ldr	x0, [sp, #16]
 10c:	cmp	x0, #0x0
 110:	b.eq	128 <ext2fs_get_library_version+0x50>  // b.none
 114:	adrp	x0, 0 <ext2fs_parse_version_string>
 118:	add	x0, x0, #0x0
 11c:	ldr	x1, [x0]
 120:	ldr	x0, [sp, #16]
 124:	str	x1, [x0]
 128:	adrp	x0, 0 <ext2fs_parse_version_string>
 12c:	add	x0, x0, #0x0
 130:	ldr	x0, [x0]
 134:	bl	0 <ext2fs_parse_version_string>
 138:	ldp	x29, x30, [sp], #32
 13c:	ret

rbtree.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <ext2fs_rb_set_parent>:
   0:	sub	sp, sp, #0x10
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	ldr	x0, [sp, #8]
  10:	ldr	x0, [x0]
  14:	and	x1, x0, #0x3
  18:	ldr	x0, [sp]
  1c:	orr	x1, x1, x0
  20:	ldr	x0, [sp, #8]
  24:	str	x1, [x0]
  28:	nop
  2c:	add	sp, sp, #0x10
  30:	ret

0000000000000034 <ext2fs_rb_set_color>:
  34:	sub	sp, sp, #0x10
  38:	str	x0, [sp, #8]
  3c:	str	w1, [sp, #4]
  40:	ldr	x0, [sp, #8]
  44:	ldr	x0, [x0]
  48:	and	x1, x0, #0xfffffffffffffffe
  4c:	ldrsw	x0, [sp, #4]
  50:	orr	x1, x1, x0
  54:	ldr	x0, [sp, #8]
  58:	str	x1, [x0]
  5c:	nop
  60:	add	sp, sp, #0x10
  64:	ret

0000000000000068 <__rb_rotate_left>:
  68:	stp	x29, x30, [sp, #-48]!
  6c:	mov	x29, sp
  70:	str	x0, [sp, #24]
  74:	str	x1, [sp, #16]
  78:	ldr	x0, [sp, #24]
  7c:	ldr	x0, [x0, #8]
  80:	str	x0, [sp, #40]
  84:	ldr	x0, [sp, #24]
  88:	ldr	x0, [x0]
  8c:	and	x0, x0, #0xfffffffffffffffc
  90:	str	x0, [sp, #32]
  94:	ldr	x0, [sp, #40]
  98:	ldr	x1, [x0, #16]
  9c:	ldr	x0, [sp, #24]
  a0:	str	x1, [x0, #8]
  a4:	ldr	x0, [sp, #24]
  a8:	ldr	x0, [x0, #8]
  ac:	cmp	x0, #0x0
  b0:	b.eq	c4 <__rb_rotate_left+0x5c>  // b.none
  b4:	ldr	x0, [sp, #40]
  b8:	ldr	x0, [x0, #16]
  bc:	ldr	x1, [sp, #24]
  c0:	bl	0 <ext2fs_rb_set_parent>
  c4:	ldr	x0, [sp, #40]
  c8:	ldr	x1, [sp, #24]
  cc:	str	x1, [x0, #16]
  d0:	ldr	x1, [sp, #32]
  d4:	ldr	x0, [sp, #40]
  d8:	bl	0 <ext2fs_rb_set_parent>
  dc:	ldr	x0, [sp, #32]
  e0:	cmp	x0, #0x0
  e4:	b.eq	11c <__rb_rotate_left+0xb4>  // b.none
  e8:	ldr	x0, [sp, #32]
  ec:	ldr	x0, [x0, #16]
  f0:	ldr	x1, [sp, #24]
  f4:	cmp	x1, x0
  f8:	b.ne	10c <__rb_rotate_left+0xa4>  // b.any
  fc:	ldr	x0, [sp, #32]
 100:	ldr	x1, [sp, #40]
 104:	str	x1, [x0, #16]
 108:	b	128 <__rb_rotate_left+0xc0>
 10c:	ldr	x0, [sp, #32]
 110:	ldr	x1, [sp, #40]
 114:	str	x1, [x0, #8]
 118:	b	128 <__rb_rotate_left+0xc0>
 11c:	ldr	x0, [sp, #16]
 120:	ldr	x1, [sp, #40]
 124:	str	x1, [x0]
 128:	ldr	x1, [sp, #40]
 12c:	ldr	x0, [sp, #24]
 130:	bl	0 <ext2fs_rb_set_parent>
 134:	nop
 138:	ldp	x29, x30, [sp], #48
 13c:	ret

0000000000000140 <__rb_rotate_right>:
 140:	stp	x29, x30, [sp, #-48]!
 144:	mov	x29, sp
 148:	str	x0, [sp, #24]
 14c:	str	x1, [sp, #16]
 150:	ldr	x0, [sp, #24]
 154:	ldr	x0, [x0, #16]
 158:	str	x0, [sp, #40]
 15c:	ldr	x0, [sp, #24]
 160:	ldr	x0, [x0]
 164:	and	x0, x0, #0xfffffffffffffffc
 168:	str	x0, [sp, #32]
 16c:	ldr	x0, [sp, #40]
 170:	ldr	x1, [x0, #8]
 174:	ldr	x0, [sp, #24]
 178:	str	x1, [x0, #16]
 17c:	ldr	x0, [sp, #24]
 180:	ldr	x0, [x0, #16]
 184:	cmp	x0, #0x0
 188:	b.eq	19c <__rb_rotate_right+0x5c>  // b.none
 18c:	ldr	x0, [sp, #40]
 190:	ldr	x0, [x0, #8]
 194:	ldr	x1, [sp, #24]
 198:	bl	0 <ext2fs_rb_set_parent>
 19c:	ldr	x0, [sp, #40]
 1a0:	ldr	x1, [sp, #24]
 1a4:	str	x1, [x0, #8]
 1a8:	ldr	x1, [sp, #32]
 1ac:	ldr	x0, [sp, #40]
 1b0:	bl	0 <ext2fs_rb_set_parent>
 1b4:	ldr	x0, [sp, #32]
 1b8:	cmp	x0, #0x0
 1bc:	b.eq	1f4 <__rb_rotate_right+0xb4>  // b.none
 1c0:	ldr	x0, [sp, #32]
 1c4:	ldr	x0, [x0, #8]
 1c8:	ldr	x1, [sp, #24]
 1cc:	cmp	x1, x0
 1d0:	b.ne	1e4 <__rb_rotate_right+0xa4>  // b.any
 1d4:	ldr	x0, [sp, #32]
 1d8:	ldr	x1, [sp, #40]
 1dc:	str	x1, [x0, #8]
 1e0:	b	200 <__rb_rotate_right+0xc0>
 1e4:	ldr	x0, [sp, #32]
 1e8:	ldr	x1, [sp, #40]
 1ec:	str	x1, [x0, #16]
 1f0:	b	200 <__rb_rotate_right+0xc0>
 1f4:	ldr	x0, [sp, #16]
 1f8:	ldr	x1, [sp, #40]
 1fc:	str	x1, [x0]
 200:	ldr	x1, [sp, #40]
 204:	ldr	x0, [sp, #24]
 208:	bl	0 <ext2fs_rb_set_parent>
 20c:	nop
 210:	ldp	x29, x30, [sp], #48
 214:	ret

0000000000000218 <ext2fs_rb_insert_color>:
 218:	stp	x29, x30, [sp, #-64]!
 21c:	mov	x29, sp
 220:	str	x19, [sp, #16]
 224:	str	x0, [sp, #40]
 228:	str	x1, [sp, #32]
 22c:	b	3e0 <ext2fs_rb_insert_color+0x1c8>
 230:	ldr	x0, [sp, #56]
 234:	ldr	x0, [x0]
 238:	and	x0, x0, #0xfffffffffffffffc
 23c:	str	x0, [sp, #48]
 240:	ldr	x0, [sp, #48]
 244:	ldr	x0, [x0, #16]
 248:	ldr	x1, [sp, #56]
 24c:	cmp	x1, x0
 250:	b.ne	31c <ext2fs_rb_insert_color+0x104>  // b.any
 254:	ldr	x0, [sp, #48]
 258:	ldr	x19, [x0, #8]
 25c:	cmp	x19, #0x0
 260:	b.eq	2b4 <ext2fs_rb_insert_color+0x9c>  // b.none
 264:	ldr	x0, [x19]
 268:	and	x0, x0, #0x1
 26c:	cmp	x0, #0x0
 270:	b.ne	2b4 <ext2fs_rb_insert_color+0x9c>  // b.any
 274:	ldr	x0, [x19]
 278:	orr	x0, x0, #0x1
 27c:	str	x0, [x19]
 280:	ldr	x0, [sp, #56]
 284:	ldr	x0, [x0]
 288:	orr	x1, x0, #0x1
 28c:	ldr	x0, [sp, #56]
 290:	str	x1, [x0]
 294:	ldr	x0, [sp, #48]
 298:	ldr	x0, [x0]
 29c:	and	x1, x0, #0xfffffffffffffffe
 2a0:	ldr	x0, [sp, #48]
 2a4:	str	x1, [x0]
 2a8:	ldr	x0, [sp, #48]
 2ac:	str	x0, [sp, #40]
 2b0:	b	3e0 <ext2fs_rb_insert_color+0x1c8>
 2b4:	ldr	x0, [sp, #56]
 2b8:	ldr	x0, [x0, #8]
 2bc:	ldr	x1, [sp, #40]
 2c0:	cmp	x1, x0
 2c4:	b.ne	2e4 <ext2fs_rb_insert_color+0xcc>  // b.any
 2c8:	ldr	x1, [sp, #32]
 2cc:	ldr	x0, [sp, #56]
 2d0:	bl	68 <__rb_rotate_left>
 2d4:	ldr	x19, [sp, #56]
 2d8:	ldr	x0, [sp, #40]
 2dc:	str	x0, [sp, #56]
 2e0:	str	x19, [sp, #40]
 2e4:	ldr	x0, [sp, #56]
 2e8:	ldr	x0, [x0]
 2ec:	orr	x1, x0, #0x1
 2f0:	ldr	x0, [sp, #56]
 2f4:	str	x1, [x0]
 2f8:	ldr	x0, [sp, #48]
 2fc:	ldr	x0, [x0]
 300:	and	x1, x0, #0xfffffffffffffffe
 304:	ldr	x0, [sp, #48]
 308:	str	x1, [x0]
 30c:	ldr	x1, [sp, #32]
 310:	ldr	x0, [sp, #48]
 314:	bl	140 <__rb_rotate_right>
 318:	b	3e0 <ext2fs_rb_insert_color+0x1c8>
 31c:	ldr	x0, [sp, #48]
 320:	ldr	x19, [x0, #16]
 324:	cmp	x19, #0x0
 328:	b.eq	37c <ext2fs_rb_insert_color+0x164>  // b.none
 32c:	ldr	x0, [x19]
 330:	and	x0, x0, #0x1
 334:	cmp	x0, #0x0
 338:	b.ne	37c <ext2fs_rb_insert_color+0x164>  // b.any
 33c:	ldr	x0, [x19]
 340:	orr	x0, x0, #0x1
 344:	str	x0, [x19]
 348:	ldr	x0, [sp, #56]
 34c:	ldr	x0, [x0]
 350:	orr	x1, x0, #0x1
 354:	ldr	x0, [sp, #56]
 358:	str	x1, [x0]
 35c:	ldr	x0, [sp, #48]
 360:	ldr	x0, [x0]
 364:	and	x1, x0, #0xfffffffffffffffe
 368:	ldr	x0, [sp, #48]
 36c:	str	x1, [x0]
 370:	ldr	x0, [sp, #48]
 374:	str	x0, [sp, #40]
 378:	b	3e0 <ext2fs_rb_insert_color+0x1c8>
 37c:	ldr	x0, [sp, #56]
 380:	ldr	x0, [x0, #16]
 384:	ldr	x1, [sp, #40]
 388:	cmp	x1, x0
 38c:	b.ne	3ac <ext2fs_rb_insert_color+0x194>  // b.any
 390:	ldr	x1, [sp, #32]
 394:	ldr	x0, [sp, #56]
 398:	bl	140 <__rb_rotate_right>
 39c:	ldr	x19, [sp, #56]
 3a0:	ldr	x0, [sp, #40]
 3a4:	str	x0, [sp, #56]
 3a8:	str	x19, [sp, #40]
 3ac:	ldr	x0, [sp, #56]
 3b0:	ldr	x0, [x0]
 3b4:	orr	x1, x0, #0x1
 3b8:	ldr	x0, [sp, #56]
 3bc:	str	x1, [x0]
 3c0:	ldr	x0, [sp, #48]
 3c4:	ldr	x0, [x0]
 3c8:	and	x1, x0, #0xfffffffffffffffe
 3cc:	ldr	x0, [sp, #48]
 3d0:	str	x1, [x0]
 3d4:	ldr	x1, [sp, #32]
 3d8:	ldr	x0, [sp, #48]
 3dc:	bl	68 <__rb_rotate_left>
 3e0:	ldr	x0, [sp, #40]
 3e4:	ldr	x0, [x0]
 3e8:	and	x0, x0, #0xfffffffffffffffc
 3ec:	str	x0, [sp, #56]
 3f0:	ldr	x0, [sp, #56]
 3f4:	cmp	x0, #0x0
 3f8:	b.eq	410 <ext2fs_rb_insert_color+0x1f8>  // b.none
 3fc:	ldr	x0, [sp, #56]
 400:	ldr	x0, [x0]
 404:	and	x0, x0, #0x1
 408:	cmp	x0, #0x0
 40c:	b.eq	230 <ext2fs_rb_insert_color+0x18>  // b.none
 410:	ldr	x0, [sp, #32]
 414:	ldr	x0, [x0]
 418:	ldr	x1, [x0]
 41c:	ldr	x0, [sp, #32]
 420:	ldr	x0, [x0]
 424:	orr	x1, x1, #0x1
 428:	str	x1, [x0]
 42c:	nop
 430:	ldr	x19, [sp, #16]
 434:	ldp	x29, x30, [sp], #64
 438:	ret

000000000000043c <__rb_erase_color>:
 43c:	stp	x29, x30, [sp, #-64]!
 440:	mov	x29, sp
 444:	str	x0, [sp, #40]
 448:	str	x1, [sp, #32]
 44c:	str	x2, [sp, #24]
 450:	b	7d0 <__rb_erase_color+0x394>
 454:	ldr	x0, [sp, #32]
 458:	ldr	x0, [x0, #16]
 45c:	ldr	x1, [sp, #40]
 460:	cmp	x1, x0
 464:	b.ne	61c <__rb_erase_color+0x1e0>  // b.any
 468:	ldr	x0, [sp, #32]
 46c:	ldr	x0, [x0, #8]
 470:	str	x0, [sp, #56]
 474:	ldr	x0, [sp, #56]
 478:	ldr	x0, [x0]
 47c:	and	x0, x0, #0x1
 480:	cmp	x0, #0x0
 484:	b.ne	4c8 <__rb_erase_color+0x8c>  // b.any
 488:	ldr	x0, [sp, #56]
 48c:	ldr	x0, [x0]
 490:	orr	x1, x0, #0x1
 494:	ldr	x0, [sp, #56]
 498:	str	x1, [x0]
 49c:	ldr	x0, [sp, #32]
 4a0:	ldr	x0, [x0]
 4a4:	and	x1, x0, #0xfffffffffffffffe
 4a8:	ldr	x0, [sp, #32]
 4ac:	str	x1, [x0]
 4b0:	ldr	x1, [sp, #24]
 4b4:	ldr	x0, [sp, #32]
 4b8:	bl	68 <__rb_rotate_left>
 4bc:	ldr	x0, [sp, #32]
 4c0:	ldr	x0, [x0, #8]
 4c4:	str	x0, [sp, #56]
 4c8:	ldr	x0, [sp, #56]
 4cc:	ldr	x0, [x0, #16]
 4d0:	cmp	x0, #0x0
 4d4:	b.eq	4f0 <__rb_erase_color+0xb4>  // b.none
 4d8:	ldr	x0, [sp, #56]
 4dc:	ldr	x0, [x0, #16]
 4e0:	ldr	x0, [x0]
 4e4:	and	x0, x0, #0x1
 4e8:	cmp	x0, #0x0
 4ec:	b.eq	548 <__rb_erase_color+0x10c>  // b.none
 4f0:	ldr	x0, [sp, #56]
 4f4:	ldr	x0, [x0, #8]
 4f8:	cmp	x0, #0x0
 4fc:	b.eq	518 <__rb_erase_color+0xdc>  // b.none
 500:	ldr	x0, [sp, #56]
 504:	ldr	x0, [x0, #8]
 508:	ldr	x0, [x0]
 50c:	and	x0, x0, #0x1
 510:	cmp	x0, #0x0
 514:	b.eq	548 <__rb_erase_color+0x10c>  // b.none
 518:	ldr	x0, [sp, #56]
 51c:	ldr	x0, [x0]
 520:	and	x1, x0, #0xfffffffffffffffe
 524:	ldr	x0, [sp, #56]
 528:	str	x1, [x0]
 52c:	ldr	x0, [sp, #32]
 530:	str	x0, [sp, #40]
 534:	ldr	x0, [sp, #40]
 538:	ldr	x0, [x0]
 53c:	and	x0, x0, #0xfffffffffffffffc
 540:	str	x0, [sp, #32]
 544:	b	7d0 <__rb_erase_color+0x394>
 548:	ldr	x0, [sp, #56]
 54c:	ldr	x0, [x0, #8]
 550:	cmp	x0, #0x0
 554:	b.eq	570 <__rb_erase_color+0x134>  // b.none
 558:	ldr	x0, [sp, #56]
 55c:	ldr	x0, [x0, #8]
 560:	ldr	x0, [x0]
 564:	and	x0, x0, #0x1
 568:	cmp	x0, #0x0
 56c:	b.eq	5b8 <__rb_erase_color+0x17c>  // b.none
 570:	ldr	x0, [sp, #56]
 574:	ldr	x0, [x0, #16]
 578:	ldr	x1, [x0]
 57c:	ldr	x0, [sp, #56]
 580:	ldr	x0, [x0, #16]
 584:	orr	x1, x1, #0x1
 588:	str	x1, [x0]
 58c:	ldr	x0, [sp, #56]
 590:	ldr	x0, [x0]
 594:	and	x1, x0, #0xfffffffffffffffe
 598:	ldr	x0, [sp, #56]
 59c:	str	x1, [x0]
 5a0:	ldr	x1, [sp, #24]
 5a4:	ldr	x0, [sp, #56]
 5a8:	bl	140 <__rb_rotate_right>
 5ac:	ldr	x0, [sp, #32]
 5b0:	ldr	x0, [x0, #8]
 5b4:	str	x0, [sp, #56]
 5b8:	ldr	x0, [sp, #32]
 5bc:	ldr	x0, [x0]
 5c0:	and	w0, w0, #0x1
 5c4:	mov	w1, w0
 5c8:	ldr	x0, [sp, #56]
 5cc:	bl	34 <ext2fs_rb_set_color>
 5d0:	ldr	x0, [sp, #32]
 5d4:	ldr	x0, [x0]
 5d8:	orr	x1, x0, #0x1
 5dc:	ldr	x0, [sp, #32]
 5e0:	str	x1, [x0]
 5e4:	ldr	x0, [sp, #56]
 5e8:	ldr	x0, [x0, #8]
 5ec:	ldr	x1, [x0]
 5f0:	ldr	x0, [sp, #56]
 5f4:	ldr	x0, [x0, #8]
 5f8:	orr	x1, x1, #0x1
 5fc:	str	x1, [x0]
 600:	ldr	x1, [sp, #24]
 604:	ldr	x0, [sp, #32]
 608:	bl	68 <__rb_rotate_left>
 60c:	ldr	x0, [sp, #24]
 610:	ldr	x0, [x0]
 614:	str	x0, [sp, #40]
 618:	b	804 <__rb_erase_color+0x3c8>
 61c:	ldr	x0, [sp, #32]
 620:	ldr	x0, [x0, #16]
 624:	str	x0, [sp, #56]
 628:	ldr	x0, [sp, #56]
 62c:	ldr	x0, [x0]
 630:	and	x0, x0, #0x1
 634:	cmp	x0, #0x0
 638:	b.ne	67c <__rb_erase_color+0x240>  // b.any
 63c:	ldr	x0, [sp, #56]
 640:	ldr	x0, [x0]
 644:	orr	x1, x0, #0x1
 648:	ldr	x0, [sp, #56]
 64c:	str	x1, [x0]
 650:	ldr	x0, [sp, #32]
 654:	ldr	x0, [x0]
 658:	and	x1, x0, #0xfffffffffffffffe
 65c:	ldr	x0, [sp, #32]
 660:	str	x1, [x0]
 664:	ldr	x1, [sp, #24]
 668:	ldr	x0, [sp, #32]
 66c:	bl	140 <__rb_rotate_right>
 670:	ldr	x0, [sp, #32]
 674:	ldr	x0, [x0, #16]
 678:	str	x0, [sp, #56]
 67c:	ldr	x0, [sp, #56]
 680:	ldr	x0, [x0, #16]
 684:	cmp	x0, #0x0
 688:	b.eq	6a4 <__rb_erase_color+0x268>  // b.none
 68c:	ldr	x0, [sp, #56]
 690:	ldr	x0, [x0, #16]
 694:	ldr	x0, [x0]
 698:	and	x0, x0, #0x1
 69c:	cmp	x0, #0x0
 6a0:	b.eq	6fc <__rb_erase_color+0x2c0>  // b.none
 6a4:	ldr	x0, [sp, #56]
 6a8:	ldr	x0, [x0, #8]
 6ac:	cmp	x0, #0x0
 6b0:	b.eq	6cc <__rb_erase_color+0x290>  // b.none
 6b4:	ldr	x0, [sp, #56]
 6b8:	ldr	x0, [x0, #8]
 6bc:	ldr	x0, [x0]
 6c0:	and	x0, x0, #0x1
 6c4:	cmp	x0, #0x0
 6c8:	b.eq	6fc <__rb_erase_color+0x2c0>  // b.none
 6cc:	ldr	x0, [sp, #56]
 6d0:	ldr	x0, [x0]
 6d4:	and	x1, x0, #0xfffffffffffffffe
 6d8:	ldr	x0, [sp, #56]
 6dc:	str	x1, [x0]
 6e0:	ldr	x0, [sp, #32]
 6e4:	str	x0, [sp, #40]
 6e8:	ldr	x0, [sp, #40]
 6ec:	ldr	x0, [x0]
 6f0:	and	x0, x0, #0xfffffffffffffffc
 6f4:	str	x0, [sp, #32]
 6f8:	b	7d0 <__rb_erase_color+0x394>
 6fc:	ldr	x0, [sp, #56]
 700:	ldr	x0, [x0, #16]
 704:	cmp	x0, #0x0
 708:	b.eq	724 <__rb_erase_color+0x2e8>  // b.none
 70c:	ldr	x0, [sp, #56]
 710:	ldr	x0, [x0, #16]
 714:	ldr	x0, [x0]
 718:	and	x0, x0, #0x1
 71c:	cmp	x0, #0x0
 720:	b.eq	76c <__rb_erase_color+0x330>  // b.none
 724:	ldr	x0, [sp, #56]
 728:	ldr	x0, [x0, #8]
 72c:	ldr	x1, [x0]
 730:	ldr	x0, [sp, #56]
 734:	ldr	x0, [x0, #8]
 738:	orr	x1, x1, #0x1
 73c:	str	x1, [x0]
 740:	ldr	x0, [sp, #56]
 744:	ldr	x0, [x0]
 748:	and	x1, x0, #0xfffffffffffffffe
 74c:	ldr	x0, [sp, #56]
 750:	str	x1, [x0]
 754:	ldr	x1, [sp, #24]
 758:	ldr	x0, [sp, #56]
 75c:	bl	68 <__rb_rotate_left>
 760:	ldr	x0, [sp, #32]
 764:	ldr	x0, [x0, #16]
 768:	str	x0, [sp, #56]
 76c:	ldr	x0, [sp, #32]
 770:	ldr	x0, [x0]
 774:	and	w0, w0, #0x1
 778:	mov	w1, w0
 77c:	ldr	x0, [sp, #56]
 780:	bl	34 <ext2fs_rb_set_color>
 784:	ldr	x0, [sp, #32]
 788:	ldr	x0, [x0]
 78c:	orr	x1, x0, #0x1
 790:	ldr	x0, [sp, #32]
 794:	str	x1, [x0]
 798:	ldr	x0, [sp, #56]
 79c:	ldr	x0, [x0, #16]
 7a0:	ldr	x1, [x0]
 7a4:	ldr	x0, [sp, #56]
 7a8:	ldr	x0, [x0, #16]
 7ac:	orr	x1, x1, #0x1
 7b0:	str	x1, [x0]
 7b4:	ldr	x1, [sp, #24]
 7b8:	ldr	x0, [sp, #32]
 7bc:	bl	140 <__rb_rotate_right>
 7c0:	ldr	x0, [sp, #24]
 7c4:	ldr	x0, [x0]
 7c8:	str	x0, [sp, #40]
 7cc:	b	804 <__rb_erase_color+0x3c8>
 7d0:	ldr	x0, [sp, #40]
 7d4:	cmp	x0, #0x0
 7d8:	b.eq	7f0 <__rb_erase_color+0x3b4>  // b.none
 7dc:	ldr	x0, [sp, #40]
 7e0:	ldr	x0, [x0]
 7e4:	and	x0, x0, #0x1
 7e8:	cmp	x0, #0x0
 7ec:	b.eq	804 <__rb_erase_color+0x3c8>  // b.none
 7f0:	ldr	x0, [sp, #24]
 7f4:	ldr	x0, [x0]
 7f8:	ldr	x1, [sp, #40]
 7fc:	cmp	x1, x0
 800:	b.ne	454 <__rb_erase_color+0x18>  // b.any
 804:	ldr	x0, [sp, #40]
 808:	cmp	x0, #0x0
 80c:	b.eq	824 <__rb_erase_color+0x3e8>  // b.none
 810:	ldr	x0, [sp, #40]
 814:	ldr	x0, [x0]
 818:	orr	x1, x0, #0x1
 81c:	ldr	x0, [sp, #40]
 820:	str	x1, [x0]
 824:	nop
 828:	ldp	x29, x30, [sp], #64
 82c:	ret

0000000000000830 <ext2fs_rb_erase>:
 830:	stp	x29, x30, [sp, #-80]!
 834:	mov	x29, sp
 838:	str	x0, [sp, #24]
 83c:	str	x1, [sp, #16]
 840:	ldr	x0, [sp, #24]
 844:	ldr	x0, [x0, #16]
 848:	cmp	x0, #0x0
 84c:	b.ne	860 <ext2fs_rb_erase+0x30>  // b.any
 850:	ldr	x0, [sp, #24]
 854:	ldr	x0, [x0, #8]
 858:	str	x0, [sp, #72]
 85c:	b	9ec <ext2fs_rb_erase+0x1bc>
 860:	ldr	x0, [sp, #24]
 864:	ldr	x0, [x0, #8]
 868:	cmp	x0, #0x0
 86c:	b.ne	880 <ext2fs_rb_erase+0x50>  // b.any
 870:	ldr	x0, [sp, #24]
 874:	ldr	x0, [x0, #16]
 878:	str	x0, [sp, #72]
 87c:	b	9ec <ext2fs_rb_erase+0x1bc>
 880:	ldr	x0, [sp, #24]
 884:	str	x0, [sp, #48]
 888:	ldr	x0, [sp, #24]
 88c:	ldr	x0, [x0, #8]
 890:	str	x0, [sp, #24]
 894:	b	8a0 <ext2fs_rb_erase+0x70>
 898:	ldr	x0, [sp, #40]
 89c:	str	x0, [sp, #24]
 8a0:	ldr	x0, [sp, #24]
 8a4:	ldr	x0, [x0, #16]
 8a8:	str	x0, [sp, #40]
 8ac:	ldr	x0, [sp, #40]
 8b0:	cmp	x0, #0x0
 8b4:	b.ne	898 <ext2fs_rb_erase+0x68>  // b.any
 8b8:	ldr	x0, [sp, #48]
 8bc:	ldr	x0, [x0]
 8c0:	and	x0, x0, #0xfffffffffffffffc
 8c4:	cmp	x0, #0x0
 8c8:	b.eq	920 <ext2fs_rb_erase+0xf0>  // b.none
 8cc:	ldr	x0, [sp, #48]
 8d0:	ldr	x0, [x0]
 8d4:	and	x0, x0, #0xfffffffffffffffc
 8d8:	ldr	x0, [x0, #16]
 8dc:	ldr	x1, [sp, #48]
 8e0:	cmp	x1, x0
 8e4:	b.ne	904 <ext2fs_rb_erase+0xd4>  // b.any
 8e8:	ldr	x0, [sp, #48]
 8ec:	ldr	x0, [x0]
 8f0:	and	x0, x0, #0xfffffffffffffffc
 8f4:	mov	x1, x0
 8f8:	ldr	x0, [sp, #24]
 8fc:	str	x0, [x1, #16]
 900:	b	92c <ext2fs_rb_erase+0xfc>
 904:	ldr	x0, [sp, #48]
 908:	ldr	x0, [x0]
 90c:	and	x0, x0, #0xfffffffffffffffc
 910:	mov	x1, x0
 914:	ldr	x0, [sp, #24]
 918:	str	x0, [x1, #8]
 91c:	b	92c <ext2fs_rb_erase+0xfc>
 920:	ldr	x0, [sp, #16]
 924:	ldr	x1, [sp, #24]
 928:	str	x1, [x0]
 92c:	ldr	x0, [sp, #24]
 930:	ldr	x0, [x0, #8]
 934:	str	x0, [sp, #72]
 938:	ldr	x0, [sp, #24]
 93c:	ldr	x0, [x0]
 940:	and	x0, x0, #0xfffffffffffffffc
 944:	str	x0, [sp, #64]
 948:	ldr	x0, [sp, #24]
 94c:	ldr	x0, [x0]
 950:	and	w0, w0, #0x1
 954:	str	w0, [sp, #60]
 958:	ldr	x1, [sp, #64]
 95c:	ldr	x0, [sp, #48]
 960:	cmp	x1, x0
 964:	b.ne	974 <ext2fs_rb_erase+0x144>  // b.any
 968:	ldr	x0, [sp, #24]
 96c:	str	x0, [sp, #64]
 970:	b	9b8 <ext2fs_rb_erase+0x188>
 974:	ldr	x0, [sp, #72]
 978:	cmp	x0, #0x0
 97c:	b.eq	98c <ext2fs_rb_erase+0x15c>  // b.none
 980:	ldr	x1, [sp, #64]
 984:	ldr	x0, [sp, #72]
 988:	bl	0 <ext2fs_rb_set_parent>
 98c:	ldr	x0, [sp, #64]
 990:	ldr	x1, [sp, #72]
 994:	str	x1, [x0, #16]
 998:	ldr	x0, [sp, #48]
 99c:	ldr	x1, [x0, #8]
 9a0:	ldr	x0, [sp, #24]
 9a4:	str	x1, [x0, #8]
 9a8:	ldr	x0, [sp, #48]
 9ac:	ldr	x0, [x0, #8]
 9b0:	ldr	x1, [sp, #24]
 9b4:	bl	0 <ext2fs_rb_set_parent>
 9b8:	ldr	x0, [sp, #48]
 9bc:	ldr	x1, [x0]
 9c0:	ldr	x0, [sp, #24]
 9c4:	str	x1, [x0]
 9c8:	ldr	x0, [sp, #48]
 9cc:	ldr	x1, [x0, #16]
 9d0:	ldr	x0, [sp, #24]
 9d4:	str	x1, [x0, #16]
 9d8:	ldr	x0, [sp, #48]
 9dc:	ldr	x0, [x0, #16]
 9e0:	ldr	x1, [sp, #24]
 9e4:	bl	0 <ext2fs_rb_set_parent>
 9e8:	b	a70 <ext2fs_rb_erase+0x240>
 9ec:	ldr	x0, [sp, #24]
 9f0:	ldr	x0, [x0]
 9f4:	and	x0, x0, #0xfffffffffffffffc
 9f8:	str	x0, [sp, #64]
 9fc:	ldr	x0, [sp, #24]
 a00:	ldr	x0, [x0]
 a04:	and	w0, w0, #0x1
 a08:	str	w0, [sp, #60]
 a0c:	ldr	x0, [sp, #72]
 a10:	cmp	x0, #0x0
 a14:	b.eq	a24 <ext2fs_rb_erase+0x1f4>  // b.none
 a18:	ldr	x1, [sp, #64]
 a1c:	ldr	x0, [sp, #72]
 a20:	bl	0 <ext2fs_rb_set_parent>
 a24:	ldr	x0, [sp, #64]
 a28:	cmp	x0, #0x0
 a2c:	b.eq	a64 <ext2fs_rb_erase+0x234>  // b.none
 a30:	ldr	x0, [sp, #64]
 a34:	ldr	x0, [x0, #16]
 a38:	ldr	x1, [sp, #24]
 a3c:	cmp	x1, x0
 a40:	b.ne	a54 <ext2fs_rb_erase+0x224>  // b.any
 a44:	ldr	x0, [sp, #64]
 a48:	ldr	x1, [sp, #72]
 a4c:	str	x1, [x0, #16]
 a50:	b	a70 <ext2fs_rb_erase+0x240>
 a54:	ldr	x0, [sp, #64]
 a58:	ldr	x1, [sp, #72]
 a5c:	str	x1, [x0, #8]
 a60:	b	a70 <ext2fs_rb_erase+0x240>
 a64:	ldr	x0, [sp, #16]
 a68:	ldr	x1, [sp, #72]
 a6c:	str	x1, [x0]
 a70:	ldr	w0, [sp, #60]
 a74:	cmp	w0, #0x1
 a78:	b.ne	a8c <ext2fs_rb_erase+0x25c>  // b.any
 a7c:	ldr	x2, [sp, #16]
 a80:	ldr	x1, [sp, #64]
 a84:	ldr	x0, [sp, #72]
 a88:	bl	43c <__rb_erase_color>
 a8c:	nop
 a90:	ldp	x29, x30, [sp], #80
 a94:	ret

0000000000000a98 <ext2fs_rb_augment_path>:
 a98:	stp	x29, x30, [sp, #-64]!
 a9c:	mov	x29, sp
 aa0:	str	x0, [sp, #40]
 aa4:	str	x1, [sp, #32]
 aa8:	str	x2, [sp, #24]
 aac:	ldr	x2, [sp, #32]
 ab0:	ldr	x1, [sp, #24]
 ab4:	ldr	x0, [sp, #40]
 ab8:	blr	x2
 abc:	ldr	x0, [sp, #40]
 ac0:	ldr	x0, [x0]
 ac4:	and	x0, x0, #0xfffffffffffffffc
 ac8:	str	x0, [sp, #56]
 acc:	ldr	x0, [sp, #56]
 ad0:	cmp	x0, #0x0
 ad4:	b.eq	b44 <ext2fs_rb_augment_path+0xac>  // b.none
 ad8:	ldr	x0, [sp, #56]
 adc:	ldr	x0, [x0, #16]
 ae0:	ldr	x1, [sp, #40]
 ae4:	cmp	x1, x0
 ae8:	b.ne	b14 <ext2fs_rb_augment_path+0x7c>  // b.any
 aec:	ldr	x0, [sp, #56]
 af0:	ldr	x0, [x0, #8]
 af4:	cmp	x0, #0x0
 af8:	b.eq	b14 <ext2fs_rb_augment_path+0x7c>  // b.none
 afc:	ldr	x0, [sp, #56]
 b00:	ldr	x0, [x0, #8]
 b04:	ldr	x2, [sp, #32]
 b08:	ldr	x1, [sp, #24]
 b0c:	blr	x2
 b10:	b	b38 <ext2fs_rb_augment_path+0xa0>
 b14:	ldr	x0, [sp, #56]
 b18:	ldr	x0, [x0, #16]
 b1c:	cmp	x0, #0x0
 b20:	b.eq	b38 <ext2fs_rb_augment_path+0xa0>  // b.none
 b24:	ldr	x0, [sp, #56]
 b28:	ldr	x0, [x0, #16]
 b2c:	ldr	x2, [sp, #32]
 b30:	ldr	x1, [sp, #24]
 b34:	blr	x2
 b38:	ldr	x0, [sp, #56]
 b3c:	str	x0, [sp, #40]
 b40:	b	aac <ext2fs_rb_augment_path+0x14>
 b44:	nop
 b48:	ldp	x29, x30, [sp], #64
 b4c:	ret

0000000000000b50 <ext2fs_rb_augment_insert>:
 b50:	stp	x29, x30, [sp, #-48]!
 b54:	mov	x29, sp
 b58:	str	x0, [sp, #40]
 b5c:	str	x1, [sp, #32]
 b60:	str	x2, [sp, #24]
 b64:	ldr	x0, [sp, #40]
 b68:	ldr	x0, [x0, #16]
 b6c:	cmp	x0, #0x0
 b70:	b.eq	b84 <ext2fs_rb_augment_insert+0x34>  // b.none
 b74:	ldr	x0, [sp, #40]
 b78:	ldr	x0, [x0, #16]
 b7c:	str	x0, [sp, #40]
 b80:	b	ba0 <ext2fs_rb_augment_insert+0x50>
 b84:	ldr	x0, [sp, #40]
 b88:	ldr	x0, [x0, #8]
 b8c:	cmp	x0, #0x0
 b90:	b.eq	ba0 <ext2fs_rb_augment_insert+0x50>  // b.none
 b94:	ldr	x0, [sp, #40]
 b98:	ldr	x0, [x0, #8]
 b9c:	str	x0, [sp, #40]
 ba0:	ldr	x2, [sp, #24]
 ba4:	ldr	x1, [sp, #32]
 ba8:	ldr	x0, [sp, #40]
 bac:	bl	a98 <ext2fs_rb_augment_path>
 bb0:	nop
 bb4:	ldp	x29, x30, [sp], #48
 bb8:	ret

0000000000000bbc <ext2fs_rb_augment_erase_begin>:
 bbc:	stp	x29, x30, [sp, #-48]!
 bc0:	mov	x29, sp
 bc4:	str	x0, [sp, #24]
 bc8:	ldr	x0, [sp, #24]
 bcc:	ldr	x0, [x0, #8]
 bd0:	cmp	x0, #0x0
 bd4:	b.ne	bfc <ext2fs_rb_augment_erase_begin+0x40>  // b.any
 bd8:	ldr	x0, [sp, #24]
 bdc:	ldr	x0, [x0, #16]
 be0:	cmp	x0, #0x0
 be4:	b.ne	bfc <ext2fs_rb_augment_erase_begin+0x40>  // b.any
 be8:	ldr	x0, [sp, #24]
 bec:	ldr	x0, [x0]
 bf0:	and	x0, x0, #0xfffffffffffffffc
 bf4:	str	x0, [sp, #40]
 bf8:	b	c94 <ext2fs_rb_augment_erase_begin+0xd8>
 bfc:	ldr	x0, [sp, #24]
 c00:	ldr	x0, [x0, #8]
 c04:	cmp	x0, #0x0
 c08:	b.ne	c1c <ext2fs_rb_augment_erase_begin+0x60>  // b.any
 c0c:	ldr	x0, [sp, #24]
 c10:	ldr	x0, [x0, #16]
 c14:	str	x0, [sp, #40]
 c18:	b	c94 <ext2fs_rb_augment_erase_begin+0xd8>
 c1c:	ldr	x0, [sp, #24]
 c20:	ldr	x0, [x0, #16]
 c24:	cmp	x0, #0x0
 c28:	b.ne	c3c <ext2fs_rb_augment_erase_begin+0x80>  // b.any
 c2c:	ldr	x0, [sp, #24]
 c30:	ldr	x0, [x0, #8]
 c34:	str	x0, [sp, #40]
 c38:	b	c94 <ext2fs_rb_augment_erase_begin+0xd8>
 c3c:	ldr	x0, [sp, #24]
 c40:	bl	d7c <ext2fs_rb_next>
 c44:	str	x0, [sp, #40]
 c48:	ldr	x0, [sp, #40]
 c4c:	ldr	x0, [x0, #8]
 c50:	cmp	x0, #0x0
 c54:	b.eq	c68 <ext2fs_rb_augment_erase_begin+0xac>  // b.none
 c58:	ldr	x0, [sp, #40]
 c5c:	ldr	x0, [x0, #8]
 c60:	str	x0, [sp, #40]
 c64:	b	c94 <ext2fs_rb_augment_erase_begin+0xd8>
 c68:	ldr	x0, [sp, #40]
 c6c:	ldr	x0, [x0]
 c70:	and	x0, x0, #0xfffffffffffffffc
 c74:	mov	x1, x0
 c78:	ldr	x0, [sp, #24]
 c7c:	cmp	x0, x1
 c80:	b.eq	c94 <ext2fs_rb_augment_erase_begin+0xd8>  // b.none
 c84:	ldr	x0, [sp, #40]
 c88:	ldr	x0, [x0]
 c8c:	and	x0, x0, #0xfffffffffffffffc
 c90:	str	x0, [sp, #40]
 c94:	ldr	x0, [sp, #40]
 c98:	ldp	x29, x30, [sp], #48
 c9c:	ret

0000000000000ca0 <ext2fs_rb_augment_erase_end>:
 ca0:	stp	x29, x30, [sp, #-48]!
 ca4:	mov	x29, sp
 ca8:	str	x0, [sp, #40]
 cac:	str	x1, [sp, #32]
 cb0:	str	x2, [sp, #24]
 cb4:	ldr	x0, [sp, #40]
 cb8:	cmp	x0, #0x0
 cbc:	b.eq	cd0 <ext2fs_rb_augment_erase_end+0x30>  // b.none
 cc0:	ldr	x2, [sp, #24]
 cc4:	ldr	x1, [sp, #32]
 cc8:	ldr	x0, [sp, #40]
 ccc:	bl	a98 <ext2fs_rb_augment_path>
 cd0:	nop
 cd4:	ldp	x29, x30, [sp], #48
 cd8:	ret

0000000000000cdc <ext2fs_rb_first>:
 cdc:	sub	sp, sp, #0x20
 ce0:	str	x0, [sp, #8]
 ce4:	ldr	x0, [sp, #8]
 ce8:	ldr	x0, [x0]
 cec:	str	x0, [sp, #24]
 cf0:	ldr	x0, [sp, #24]
 cf4:	cmp	x0, #0x0
 cf8:	b.ne	d10 <ext2fs_rb_first+0x34>  // b.any
 cfc:	mov	x0, #0x0                   	// #0
 d00:	b	d24 <ext2fs_rb_first+0x48>
 d04:	ldr	x0, [sp, #24]
 d08:	ldr	x0, [x0, #16]
 d0c:	str	x0, [sp, #24]
 d10:	ldr	x0, [sp, #24]
 d14:	ldr	x0, [x0, #16]
 d18:	cmp	x0, #0x0
 d1c:	b.ne	d04 <ext2fs_rb_first+0x28>  // b.any
 d20:	ldr	x0, [sp, #24]
 d24:	add	sp, sp, #0x20
 d28:	ret

0000000000000d2c <ext2fs_rb_last>:
 d2c:	sub	sp, sp, #0x20
 d30:	str	x0, [sp, #8]
 d34:	ldr	x0, [sp, #8]
 d38:	ldr	x0, [x0]
 d3c:	str	x0, [sp, #24]
 d40:	ldr	x0, [sp, #24]
 d44:	cmp	x0, #0x0
 d48:	b.ne	d60 <ext2fs_rb_last+0x34>  // b.any
 d4c:	mov	x0, #0x0                   	// #0
 d50:	b	d74 <ext2fs_rb_last+0x48>
 d54:	ldr	x0, [sp, #24]
 d58:	ldr	x0, [x0, #8]
 d5c:	str	x0, [sp, #24]
 d60:	ldr	x0, [sp, #24]
 d64:	ldr	x0, [x0, #8]
 d68:	cmp	x0, #0x0
 d6c:	b.ne	d54 <ext2fs_rb_last+0x28>  // b.any
 d70:	ldr	x0, [sp, #24]
 d74:	add	sp, sp, #0x20
 d78:	ret

0000000000000d7c <ext2fs_rb_next>:
 d7c:	sub	sp, sp, #0x20
 d80:	str	x0, [sp, #8]
 d84:	ldr	x0, [sp, #8]
 d88:	ldr	x0, [x0]
 d8c:	and	x0, x0, #0xfffffffffffffffc
 d90:	mov	x1, x0
 d94:	ldr	x0, [sp, #8]
 d98:	cmp	x0, x1
 d9c:	b.ne	da8 <ext2fs_rb_next+0x2c>  // b.any
 da0:	mov	x0, #0x0                   	// #0
 da4:	b	e28 <ext2fs_rb_next+0xac>
 da8:	ldr	x0, [sp, #8]
 dac:	ldr	x0, [x0, #8]
 db0:	cmp	x0, #0x0
 db4:	b.eq	df4 <ext2fs_rb_next+0x78>  // b.none
 db8:	ldr	x0, [sp, #8]
 dbc:	ldr	x0, [x0, #8]
 dc0:	str	x0, [sp, #8]
 dc4:	b	dd4 <ext2fs_rb_next+0x58>
 dc8:	ldr	x0, [sp, #8]
 dcc:	ldr	x0, [x0, #16]
 dd0:	str	x0, [sp, #8]
 dd4:	ldr	x0, [sp, #8]
 dd8:	ldr	x0, [x0, #16]
 ddc:	cmp	x0, #0x0
 de0:	b.ne	dc8 <ext2fs_rb_next+0x4c>  // b.any
 de4:	ldr	x0, [sp, #8]
 de8:	b	e28 <ext2fs_rb_next+0xac>
 dec:	ldr	x0, [sp, #24]
 df0:	str	x0, [sp, #8]
 df4:	ldr	x0, [sp, #8]
 df8:	ldr	x0, [x0]
 dfc:	and	x0, x0, #0xfffffffffffffffc
 e00:	str	x0, [sp, #24]
 e04:	ldr	x0, [sp, #24]
 e08:	cmp	x0, #0x0
 e0c:	b.eq	e24 <ext2fs_rb_next+0xa8>  // b.none
 e10:	ldr	x0, [sp, #24]
 e14:	ldr	x0, [x0, #8]
 e18:	ldr	x1, [sp, #8]
 e1c:	cmp	x1, x0
 e20:	b.eq	dec <ext2fs_rb_next+0x70>  // b.none
 e24:	ldr	x0, [sp, #24]
 e28:	add	sp, sp, #0x20
 e2c:	ret

0000000000000e30 <ext2fs_rb_prev>:
 e30:	sub	sp, sp, #0x20
 e34:	str	x0, [sp, #8]
 e38:	ldr	x0, [sp, #8]
 e3c:	ldr	x0, [x0]
 e40:	and	x0, x0, #0xfffffffffffffffc
 e44:	mov	x1, x0
 e48:	ldr	x0, [sp, #8]
 e4c:	cmp	x0, x1
 e50:	b.ne	e5c <ext2fs_rb_prev+0x2c>  // b.any
 e54:	mov	x0, #0x0                   	// #0
 e58:	b	edc <ext2fs_rb_prev+0xac>
 e5c:	ldr	x0, [sp, #8]
 e60:	ldr	x0, [x0, #16]
 e64:	cmp	x0, #0x0
 e68:	b.eq	ea8 <ext2fs_rb_prev+0x78>  // b.none
 e6c:	ldr	x0, [sp, #8]
 e70:	ldr	x0, [x0, #16]
 e74:	str	x0, [sp, #8]
 e78:	b	e88 <ext2fs_rb_prev+0x58>
 e7c:	ldr	x0, [sp, #8]
 e80:	ldr	x0, [x0, #8]
 e84:	str	x0, [sp, #8]
 e88:	ldr	x0, [sp, #8]
 e8c:	ldr	x0, [x0, #8]
 e90:	cmp	x0, #0x0
 e94:	b.ne	e7c <ext2fs_rb_prev+0x4c>  // b.any
 e98:	ldr	x0, [sp, #8]
 e9c:	b	edc <ext2fs_rb_prev+0xac>
 ea0:	ldr	x0, [sp, #24]
 ea4:	str	x0, [sp, #8]
 ea8:	ldr	x0, [sp, #8]
 eac:	ldr	x0, [x0]
 eb0:	and	x0, x0, #0xfffffffffffffffc
 eb4:	str	x0, [sp, #24]
 eb8:	ldr	x0, [sp, #24]
 ebc:	cmp	x0, #0x0
 ec0:	b.eq	ed8 <ext2fs_rb_prev+0xa8>  // b.none
 ec4:	ldr	x0, [sp, #24]
 ec8:	ldr	x0, [x0, #16]
 ecc:	ldr	x1, [sp, #8]
 ed0:	cmp	x1, x0
 ed4:	b.eq	ea0 <ext2fs_rb_prev+0x70>  // b.none
 ed8:	ldr	x0, [sp, #24]
 edc:	add	sp, sp, #0x20
 ee0:	ret

0000000000000ee4 <ext2fs_rb_replace_node>:
 ee4:	stp	x29, x30, [sp, #-64]!
 ee8:	mov	x29, sp
 eec:	str	x0, [sp, #40]
 ef0:	str	x1, [sp, #32]
 ef4:	str	x2, [sp, #24]
 ef8:	ldr	x0, [sp, #40]
 efc:	ldr	x0, [x0]
 f00:	and	x0, x0, #0xfffffffffffffffc
 f04:	str	x0, [sp, #56]
 f08:	ldr	x0, [sp, #56]
 f0c:	cmp	x0, #0x0
 f10:	b.eq	f48 <ext2fs_rb_replace_node+0x64>  // b.none
 f14:	ldr	x0, [sp, #56]
 f18:	ldr	x0, [x0, #16]
 f1c:	ldr	x1, [sp, #40]
 f20:	cmp	x1, x0
 f24:	b.ne	f38 <ext2fs_rb_replace_node+0x54>  // b.any
 f28:	ldr	x0, [sp, #56]
 f2c:	ldr	x1, [sp, #32]
 f30:	str	x1, [x0, #16]
 f34:	b	f54 <ext2fs_rb_replace_node+0x70>
 f38:	ldr	x0, [sp, #56]
 f3c:	ldr	x1, [sp, #32]
 f40:	str	x1, [x0, #8]
 f44:	b	f54 <ext2fs_rb_replace_node+0x70>
 f48:	ldr	x0, [sp, #24]
 f4c:	ldr	x1, [sp, #32]
 f50:	str	x1, [x0]
 f54:	ldr	x0, [sp, #40]
 f58:	ldr	x0, [x0, #16]
 f5c:	cmp	x0, #0x0
 f60:	b.eq	f74 <ext2fs_rb_replace_node+0x90>  // b.none
 f64:	ldr	x0, [sp, #40]
 f68:	ldr	x0, [x0, #16]
 f6c:	ldr	x1, [sp, #32]
 f70:	bl	0 <ext2fs_rb_set_parent>
 f74:	ldr	x0, [sp, #40]
 f78:	ldr	x0, [x0, #8]
 f7c:	cmp	x0, #0x0
 f80:	b.eq	f94 <ext2fs_rb_replace_node+0xb0>  // b.none
 f84:	ldr	x0, [sp, #40]
 f88:	ldr	x0, [x0, #8]
 f8c:	ldr	x1, [sp, #32]
 f90:	bl	0 <ext2fs_rb_set_parent>
 f94:	ldr	x1, [sp, #32]
 f98:	ldr	x0, [sp, #40]
 f9c:	mov	x2, x1
 fa0:	mov	x3, x0
 fa4:	ldp	x0, x1, [x3]
 fa8:	stp	x0, x1, [x2]
 fac:	ldr	x0, [x3, #16]
 fb0:	str	x0, [x2, #16]
 fb4:	nop
 fb8:	ldp	x29, x30, [sp], #64
 fbc:	ret
