
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM939.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 26000 <gconv@@Base+0x25740>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 27000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xd8>:
     760:	adrp	x0, 26000 <gconv@@Base+0x25740>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 27000 <gconv@@Base+0x26740>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 27000 <gconv@@Base+0x26740>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 26000 <gconv@@Base+0x25740>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 27000 <gconv@@Base+0x26740>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 27000 <gconv@@Base+0x26740>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 26000 <gconv@@Base+0x25740>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 27000 <gconv@@Base+0x26740>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 26000 <gconv@@Base+0x25740>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 27000 <gconv@@Base+0x26740>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop

0000000000000838 <gconv_init@@Base>:
     838:	stp	x29, x30, [sp, #-32]!
     83c:	mov	x29, sp
     840:	stp	x19, x20, [sp, #16]
     844:	mov	x19, x0
     848:	adrp	x20, 1000 <gconv@@Base+0x740>
     84c:	ldr	x0, [x0, #24]
     850:	add	x20, x20, #0xff8
     854:	mov	x1, x20
     858:	bl	730 <strcmp@plt>
     85c:	cbnz	w0, 88c <gconv_init@@Base+0x54>
     860:	mov	x1, #0x1                   	// #1
     864:	mov	x0, #0x400000004           	// #17179869188
     868:	movk	x1, #0x2, lsl #32
     86c:	stp	x1, x0, [x19, #72]
     870:	str	xzr, [x19, #96]
     874:	mov	w1, #0x1                   	// #1
     878:	mov	w0, #0x0                   	// #0
     87c:	str	w1, [x19, #88]
     880:	ldp	x19, x20, [sp, #16]
     884:	ldp	x29, x30, [sp], #32
     888:	ret
     88c:	ldr	x0, [x19, #32]
     890:	mov	x1, x20
     894:	bl	730 <strcmp@plt>
     898:	cbnz	w0, 8b8 <gconv_init@@Base+0x80>
     89c:	mov	x1, #0x1                   	// #1
     8a0:	mov	x0, #0xffffffffffffffff    	// #-1
     8a4:	mov	x2, #0x400000004           	// #17179869188
     8a8:	movk	x1, #0x3, lsl #32
     8ac:	stp	x2, x1, [x19, #72]
     8b0:	str	x0, [x19, #96]
     8b4:	b	874 <gconv_init@@Base+0x3c>
     8b8:	mov	w0, #0x1                   	// #1
     8bc:	b	880 <gconv_init@@Base+0x48>

00000000000008c0 <gconv@@Base>:
     8c0:	stp	x29, x30, [sp, #-256]!
     8c4:	mov	x14, x0
     8c8:	mov	x9, x2
     8cc:	mov	x29, sp
     8d0:	stp	x21, x22, [sp, #32]
     8d4:	mov	x21, x1
     8d8:	adrp	x1, 26000 <gconv@@Base+0x25740>
     8dc:	stp	x19, x20, [sp, #16]
     8e0:	mov	x13, x4
     8e4:	ldr	w19, [x21, #16]
     8e8:	ldr	x1, [x1, #4056]
     8ec:	stp	x25, x26, [sp, #64]
     8f0:	mov	x20, x3
     8f4:	ldr	x0, [x1]
     8f8:	str	x0, [sp, #248]
     8fc:	mov	x0, #0x0                   	// #0
     900:	stp	x27, x28, [sp, #80]
     904:	add	x0, x21, #0x30
     908:	str	x0, [sp, #152]
     90c:	mov	w27, w7
     910:	mov	x26, x5
     914:	add	x28, x14, #0x68
     918:	mov	w7, w19
     91c:	and	w1, w19, #0x1
     920:	mov	x25, #0x0                   	// #0
     924:	tbnz	w19, #0, 944 <gconv@@Base+0x84>
     928:	ldr	x0, [x14, #104]
     92c:	ldr	x25, [x28, #40]
     930:	cbz	x0, 944 <gconv@@Base+0x84>
     934:	adrp	x0, 26000 <gconv@@Base+0x25740>
     938:	ldr	x0, [x0, #4040]
     93c:	ldr	x0, [x0]
     940:	eor	x25, x25, x0
     944:	cbnz	w6, 1450 <gconv@@Base+0xb90>
     948:	cmp	x13, #0x0
     94c:	add	x0, sp, #0xd0
     950:	ldr	x10, [x21, #32]
     954:	csel	x1, x21, x13, eq  // eq = none
     958:	cmp	x26, #0x0
     95c:	stp	x23, x24, [sp, #48]
     960:	csel	x0, x0, xzr, ne  // ne = any
     964:	ldr	w11, [x10]
     968:	ldr	x24, [x1]
     96c:	str	x0, [sp, #176]
     970:	str	xzr, [sp, #208]
     974:	ldr	x23, [x9]
     978:	ldr	x22, [x21, #8]
     97c:	cbnz	w27, e2c <gconv@@Base+0x56c>
     980:	stp	x26, x28, [sp, #160]
     984:	mov	x26, x14
     988:	adrp	x15, 2000 <gconv@@Base+0x1740>
     98c:	add	x0, x15, #0x1c8
     990:	str	x0, [sp, #184]
     994:	add	x18, x0, #0x320
     998:	add	x0, sp, #0xe8
     99c:	str	x0, [sp, #192]
     9a0:	mov	x28, x24
     9a4:	ldr	x0, [x26, #96]
     9a8:	str	x13, [sp, #136]
     9ac:	str	w27, [sp, #144]
     9b0:	mov	x24, x10
     9b4:	mov	x27, x9
     9b8:	and	w12, w11, #0xfffffff8
     9bc:	cbz	x0, b54 <gconv@@Base+0x294>
     9c0:	stp	x23, x28, [sp, #224]
     9c4:	mov	x19, x28
     9c8:	cmp	x20, x23
     9cc:	b.eq	1548 <gconv@@Base+0xc88>  // b.none
     9d0:	mov	w5, w12
     9d4:	mov	x0, x23
     9d8:	add	x3, sp, #0xe0
     9dc:	mov	w8, #0x4                   	// #4
     9e0:	add	x1, x0, #0x4
     9e4:	cmp	x20, x1
     9e8:	b.cc	d14 <gconv@@Base+0x454>  // b.lo, b.ul, b.last
     9ec:	cmp	x22, x19
     9f0:	b.ls	ce0 <gconv@@Base+0x420>  // b.plast
     9f4:	ldr	w6, [x0]
     9f8:	mov	w0, #0xfffe                	// #65534
     9fc:	cmp	w6, w0
     a00:	b.hi	d20 <gconv@@Base+0x460>  // b.pmore
     a04:	mov	w1, w6
     a08:	cmp	w6, #0xa5
     a0c:	mov	x2, x18
     a10:	mov	w9, #0xaf                  	// #175
     a14:	b.hi	a24 <gconv@@Base+0x164>  // b.pmore
     a18:	b	a44 <gconv@@Base+0x184>
     a1c:	ldrh	w9, [x0, #10]
     a20:	mov	x2, x0
     a24:	cmp	w6, w9
     a28:	add	x0, x2, #0x8
     a2c:	b.hi	a1c <gconv@@Base+0x15c>  // b.pmore
     a30:	ldrh	w0, [x0]
     a34:	cmp	w6, w0
     a38:	b.cc	d50 <gconv@@Base+0x490>  // b.lo, b.ul, b.last
     a3c:	ldr	w1, [x2, #12]
     a40:	add	w1, w6, w1
     a44:	add	x0, x15, #0x1c8
     a48:	cmp	w6, #0x0
     a4c:	add	x0, x0, #0x5f8
     a50:	ldrb	w1, [x0, w1, uxtw]
     a54:	ccmp	w1, #0x0, #0x0, ne  // ne = any
     a58:	b.eq	13fc <gconv@@Base+0xb3c>  // b.none
     a5c:	cmp	w5, #0x40
     a60:	add	x0, x19, #0x1
     a64:	b.eq	cb4 <gconv@@Base+0x3f4>  // b.none
     a68:	cmp	x22, x0
     a6c:	b.cc	ce0 <gconv@@Base+0x420>  // b.lo, b.ul, b.last
     a70:	str	x0, [sp, #232]
     a74:	cmp	w6, #0x7e
     a78:	b.eq	cec <gconv@@Base+0x42c>  // b.none
     a7c:	cmp	w6, #0x5c
     a80:	b.eq	cf8 <gconv@@Base+0x438>  // b.none
     a84:	strb	w1, [x19]
     a88:	ldp	x0, x19, [sp, #224]
     a8c:	add	x0, x0, #0x4
     a90:	str	x0, [sp, #224]
     a94:	cmp	x20, x0
     a98:	b.ne	9e0 <gconv@@Base+0x120>  // b.any
     a9c:	nop
     aa0:	str	x0, [x27]
     aa4:	ldr	x0, [sp, #136]
     aa8:	str	w5, [x24]
     aac:	cbnz	x0, c78 <gconv@@Base+0x3b8>
     ab0:	ldp	w1, w0, [x21, #16]
     ab4:	add	w0, w0, #0x1
     ab8:	str	w0, [x21, #20]
     abc:	tbnz	w1, #0, 1168 <gconv@@Base+0x8a8>
     ac0:	str	w11, [sp, #120]
     ac4:	cmp	x28, x19
     ac8:	str	w12, [sp, #128]
     acc:	b.cs	119c <gconv@@Base+0x8dc>  // b.hs, b.nlast
     ad0:	ldr	x1, [x21]
     ad4:	mov	x0, x25
     ad8:	str	x18, [sp, #104]
     adc:	str	w8, [sp, #112]
     ae0:	str	x1, [sp, #216]
     ae4:	bl	740 <_dl_mcount_wrapper_check@plt>
     ae8:	ldp	x1, x5, [sp, #152]
     aec:	mov	x3, x19
     af0:	ldr	w7, [sp, #144]
     af4:	add	x2, sp, #0xd8
     af8:	ldr	x0, [sp, #168]
     afc:	mov	w6, #0x0                   	// #0
     b00:	mov	x4, #0x0                   	// #0
     b04:	blr	x25
     b08:	mov	w7, w0
     b0c:	ldr	w8, [sp, #112]
     b10:	cmp	w0, #0x4
     b14:	adrp	x15, 2000 <gconv@@Base+0x1740>
     b18:	ldr	x18, [sp, #104]
     b1c:	b.eq	d04 <gconv@@Base+0x444>  // b.none
     b20:	ldr	x8, [sp, #216]
     b24:	ldr	w11, [sp, #120]
     b28:	ldr	w12, [sp, #128]
     b2c:	cmp	x8, x19
     b30:	b.ne	1030 <gconv@@Base+0x770>  // b.any
     b34:	cbnz	w7, 1538 <gconv@@Base+0xc78>
     b38:	ldr	x0, [x26, #96]
     b3c:	ldr	w11, [x24]
     b40:	ldr	w7, [x21, #16]
     b44:	and	w12, w11, #0xfffffff8
     b48:	ldr	x28, [x21]
     b4c:	ldr	x23, [x27]
     b50:	cbnz	x0, 9c0 <gconv@@Base+0x100>
     b54:	cmp	x20, x23
     b58:	b.eq	187c <gconv@@Base+0xfbc>  // b.none
     b5c:	add	x4, x28, #0x4
     b60:	cmp	x22, x4
     b64:	b.cc	1434 <gconv@@Base+0xb74>  // b.lo, b.ul, b.last
     b68:	ldr	x0, [sp, #184]
     b6c:	and	w30, w7, #0x2
     b70:	mov	w5, w12
     b74:	adrp	x7, 10000 <gconv@@Base+0xf740>
     b78:	mov	x2, x23
     b7c:	add	x7, x7, #0x8c8
     b80:	mov	x19, x28
     b84:	add	x6, x0, #0x3f8
     b88:	mov	w8, #0x4                   	// #4
     b8c:	mov	w16, #0x4040                	// #16448
     b90:	mov	w17, #0xffff                	// #65535
     b94:	b	bcc <gconv@@Base+0x30c>
     b98:	mov	w1, w0
     b9c:	ldrh	w1, [x6, x1, lsl #1]
     ba0:	cmp	w1, #0x0
     ba4:	ccmp	w0, #0x0, #0x4, eq  // eq = none
     ba8:	b.ne	13d8 <gconv@@Base+0xb18>  // b.any
     bac:	add	x2, x2, #0x1
     bb0:	str	w1, [x19]
     bb4:	mov	x19, x4
     bb8:	cmp	x20, x2
     bbc:	b.eq	c64 <gconv@@Base+0x3a4>  // b.none
     bc0:	add	x4, x19, #0x4
     bc4:	cmp	x22, x4
     bc8:	b.cc	e10 <gconv@@Base+0x550>  // b.lo, b.ul, b.last
     bcc:	ldrb	w0, [x2]
     bd0:	cmp	w0, #0xe
     bd4:	b.eq	e04 <gconv@@Base+0x544>  // b.none
     bd8:	cmp	w0, #0xf
     bdc:	b.eq	e20 <gconv@@Base+0x560>  // b.none
     be0:	cbz	w5, b98 <gconv@@Base+0x2d8>
     be4:	cmp	w5, #0x40
     be8:	b.ne	1df0 <gconv@@Base+0x1530>  // b.any
     bec:	add	x1, x2, #0x1
     bf0:	cmp	x20, x1
     bf4:	b.ls	141c <gconv@@Base+0xb5c>  // b.plast
     bf8:	ldrb	w1, [x2, #1]
     bfc:	add	w1, w1, w0, lsl #8
     c00:	add	x0, x15, #0x1c8
     c04:	cmp	w1, w16
     c08:	b.ls	142c <gconv@@Base+0xb6c>  // b.plast
     c0c:	mov	w3, #0x4158                	// #16728
     c10:	b	c18 <gconv@@Base+0x358>
     c14:	ldrh	w3, [x0, #10]
     c18:	add	x0, x0, #0x8
     c1c:	cmp	w1, w3
     c20:	b.hi	c14 <gconv@@Base+0x354>  // b.pmore
     c24:	ldrh	w3, [x0]
     c28:	cmp	w3, w17
     c2c:	b.eq	11a4 <gconv@@Base+0x8e4>  // b.none
     c30:	cmp	w1, w3
     c34:	b.cc	11a4 <gconv@@Base+0x8e4>  // b.lo, b.ul, b.last
     c38:	ldr	w0, [x0, #4]
     c3c:	add	w0, w1, w0
     c40:	ldrh	w0, [x7, x0, lsl #1]
     c44:	cmp	w0, #0x0
     c48:	ccmp	w1, #0x0, #0x4, eq  // eq = none
     c4c:	b.ne	11a4 <gconv@@Base+0x8e4>  // b.any
     c50:	str	w0, [x19]
     c54:	add	x2, x2, #0x2
     c58:	mov	x19, x4
     c5c:	cmp	x20, x2
     c60:	b.ne	bc0 <gconv@@Base+0x300>  // b.any
     c64:	str	x2, [x27]
     c68:	str	w5, [x24]
     c6c:	nop
     c70:	ldr	x0, [sp, #136]
     c74:	cbz	x0, ab0 <gconv@@Base+0x1f0>
     c78:	ldp	x23, x24, [sp, #48]
     c7c:	str	x19, [x0]
     c80:	adrp	x0, 26000 <gconv@@Base+0x25740>
     c84:	ldr	x0, [x0, #4056]
     c88:	ldr	x1, [sp, #248]
     c8c:	ldr	x0, [x0]
     c90:	eor	x0, x1, x0
     c94:	cbnz	x0, 1e30 <gconv@@Base+0x1570>
     c98:	mov	w0, w8
     c9c:	ldp	x19, x20, [sp, #16]
     ca0:	ldp	x21, x22, [sp, #32]
     ca4:	ldp	x25, x26, [sp, #64]
     ca8:	ldp	x27, x28, [sp, #80]
     cac:	ldp	x29, x30, [sp], #256
     cb0:	ret
     cb4:	cmp	x22, x0
     cb8:	b.cc	ce0 <gconv@@Base+0x420>  // b.lo, b.ul, b.last
     cbc:	str	x0, [sp, #232]
     cc0:	mov	w0, #0xf                   	// #15
     cc4:	strb	w0, [x19]
     cc8:	mov	w5, #0x0                   	// #0
     ccc:	ldr	x19, [sp, #232]
     cd0:	add	x0, x19, #0x1
     cd4:	cmp	x22, x0
     cd8:	b.cs	a70 <gconv@@Base+0x1b0>  // b.hs, b.nlast
     cdc:	nop
     ce0:	mov	w8, #0x5                   	// #5
     ce4:	ldr	x0, [sp, #224]
     ce8:	b	aa0 <gconv@@Base+0x1e0>
     cec:	mov	w0, #0xffffffa0            	// #-96
     cf0:	strb	w0, [x19]
     cf4:	b	a88 <gconv@@Base+0x1c8>
     cf8:	mov	w0, #0xffffffb2            	// #-78
     cfc:	strb	w0, [x19]
     d00:	b	a88 <gconv@@Base+0x1c8>
     d04:	mov	w7, w8
     d08:	cmp	w8, #0x5
     d0c:	b.ne	b34 <gconv@@Base+0x274>  // b.any
     d10:	b	b38 <gconv@@Base+0x278>
     d14:	mov	w8, #0x7                   	// #7
     d18:	ldr	x0, [sp, #224]
     d1c:	b	aa0 <gconv@@Base+0x1e0>
     d20:	mov	w0, #0x1c00                	// #7168
     d24:	cmp	w0, w6, lsr #7
     d28:	b.eq	11c0 <gconv@@Base+0x900>  // b.none
     d2c:	ldr	x0, [sp, #176]
     d30:	cbz	x0, 1ad0 <gconv@@Base+0x1210>
     d34:	str	w5, [x24]
     d38:	ldr	w0, [x21, #16]
     d3c:	tbnz	w0, #3, fc4 <gconv@@Base+0x704>
     d40:	ldr	x0, [sp, #224]
     d44:	tbnz	w7, #1, 11e4 <gconv@@Base+0x924>
     d48:	mov	w8, #0x6                   	// #6
     d4c:	b	aa0 <gconv@@Base+0x1e0>
     d50:	adrp	x1, 8000 <gconv@@Base+0x7740>
     d54:	cmp	w6, #0xa8
     d58:	add	x1, x1, #0x450
     d5c:	mov	w2, #0xb1                  	// #177
     d60:	b.hi	d70 <gconv@@Base+0x4b0>  // b.pmore
     d64:	b	14e8 <gconv@@Base+0xc28>
     d68:	ldrh	w2, [x0, #10]
     d6c:	mov	x1, x0
     d70:	cmp	w6, w2
     d74:	add	x0, x1, #0x8
     d78:	b.hi	d68 <gconv@@Base+0x4a8>  // b.pmore
     d7c:	ldrh	w1, [x1, #8]
     d80:	cmp	w6, w1
     d84:	b.cc	d2c <gconv@@Base+0x46c>  // b.lo, b.ul, b.last
     d88:	ldr	w0, [x0, #4]
     d8c:	adrp	x1, 2000 <gconv@@Base+0x1740>
     d90:	add	x1, x1, #0x910
     d94:	add	w0, w6, w0
     d98:	lsl	x0, x0, #1
     d9c:	add	x2, x0, x1
     da0:	ldrb	w0, [x0, x1]
     da4:	cmp	w0, #0x0
     da8:	ccmp	w6, #0x0, #0x4, eq  // eq = none
     dac:	b.ne	d2c <gconv@@Base+0x46c>  // b.any
     db0:	cbnz	w5, dd4 <gconv@@Base+0x514>
     db4:	add	x1, x19, #0x1
     db8:	cmp	x22, x1
     dbc:	b.cc	ce0 <gconv@@Base+0x420>  // b.lo, b.ul, b.last
     dc0:	str	x1, [sp, #232]
     dc4:	mov	w1, #0xe                   	// #14
     dc8:	strb	w1, [x19]
     dcc:	mov	w5, #0x40                  	// #64
     dd0:	ldr	x19, [sp, #232]
     dd4:	add	x1, x19, #0x2
     dd8:	cmp	x22, x1
     ddc:	b.cc	ce0 <gconv@@Base+0x420>  // b.lo, b.ul, b.last
     de0:	add	x1, x19, #0x1
     de4:	str	x1, [sp, #232]
     de8:	strb	w0, [x19]
     dec:	ldr	x0, [sp, #232]
     df0:	ldrb	w1, [x2, #1]
     df4:	add	x2, x0, #0x1
     df8:	str	x2, [sp, #232]
     dfc:	strb	w1, [x0]
     e00:	b	a88 <gconv@@Base+0x1c8>
     e04:	add	x2, x2, #0x1
     e08:	mov	w5, #0x40                  	// #64
     e0c:	b	bb8 <gconv@@Base+0x2f8>
     e10:	str	x2, [x27]
     e14:	mov	w8, #0x5                   	// #5
     e18:	str	w5, [x24]
     e1c:	b	c70 <gconv@@Base+0x3b0>
     e20:	add	x2, x2, #0x1
     e24:	mov	w5, #0x0                   	// #0
     e28:	b	bb8 <gconv@@Base+0x2f8>
     e2c:	ands	w0, w11, #0x7
     e30:	b.eq	980 <gconv@@Base+0xc0>  // b.none
     e34:	cbnz	x13, 1e10 <gconv@@Base+0x1550>
     e38:	ldr	x1, [x14, #96]
     e3c:	and	w4, w11, #0xfffffff8
     e40:	mov	w3, w0
     e44:	cbz	x1, 1204 <gconv@@Base+0x944>
     e48:	stp	x23, x24, [sp, #224]
     e4c:	cmp	w0, #0x4
     e50:	b.hi	1dd0 <gconv@@Base+0x1510>  // b.pmore
     e54:	mov	w12, w0
     e58:	cbz	w0, 179c <gconv@@Base+0xedc>
     e5c:	add	x7, sp, #0xf0
     e60:	add	x6, x10, #0x3
     e64:	mov	x0, #0x1                   	// #1
     e68:	add	x1, x7, x0
     e6c:	ldrb	w5, [x6, x0]
     e70:	cmp	x0, x12
     e74:	add	x0, x0, #0x1
     e78:	sturb	w5, [x1, #-1]
     e7c:	b.ne	e68 <gconv@@Base+0x5a8>  // b.any
     e80:	mov	x0, #0x4                   	// #4
     e84:	sub	x0, x0, x12
     e88:	add	x0, x23, x0
     e8c:	cmp	x20, x0
     e90:	b.cc	1890 <gconv@@Base+0xfd0>  // b.lo, b.ul, b.last
     e94:	add	x0, x23, #0x1
     e98:	add	x7, sp, #0xf0
     e9c:	cmp	x24, x22
     ea0:	b.cs	16f4 <gconv@@Base+0xe34>  // b.hs, b.nlast
     ea4:	add	x12, x12, #0x1
     ea8:	str	x0, [sp, #224]
     eac:	add	x1, x7, x12
     eb0:	cmp	x12, #0x3
     eb4:	ldurb	w2, [x0, #-1]
     eb8:	ccmp	x20, x0, #0x0, ls  // ls = plast
     ebc:	add	x0, x0, #0x1
     ec0:	sturb	w2, [x1, #-1]
     ec4:	b.hi	ea4 <gconv@@Base+0x5e4>  // b.pmore
     ec8:	ldr	w1, [sp, #240]
     ecc:	mov	w0, #0xfffe                	// #65534
     ed0:	str	x7, [sp, #224]
     ed4:	cmp	w1, w0
     ed8:	b.hi	1a8c <gconv@@Base+0x11cc>  // b.pmore
     edc:	mov	w3, w1
     ee0:	cmp	w1, #0xa5
     ee4:	adrp	x2, 2000 <gconv@@Base+0x1740>
     ee8:	b.ls	f28 <gconv@@Base+0x668>  // b.plast
     eec:	adrp	x2, 2000 <gconv@@Base+0x1740>
     ef0:	add	x3, x2, #0x1c8
     ef4:	add	x3, x3, #0x320
     ef8:	mov	w5, #0xaf                  	// #175
     efc:	b	f08 <gconv@@Base+0x648>
     f00:	ldrh	w5, [x0, #10]
     f04:	mov	x3, x0
     f08:	cmp	w1, w5
     f0c:	add	x0, x3, #0x8
     f10:	b.hi	f00 <gconv@@Base+0x640>  // b.pmore
     f14:	ldrh	w0, [x0]
     f18:	cmp	w1, w0
     f1c:	b.cc	19dc <gconv@@Base+0x111c>  // b.lo, b.ul, b.last
     f20:	ldr	w3, [x3, #12]
     f24:	add	w3, w1, w3
     f28:	add	x0, x2, #0x1c8
     f2c:	cmp	w1, #0x0
     f30:	add	x0, x0, #0x5f8
     f34:	ldrb	w3, [x0, w3, uxtw]
     f38:	ccmp	w3, #0x0, #0x0, ne  // ne = any
     f3c:	b.eq	1ca0 <gconv@@Base+0x13e0>  // b.none
     f40:	cmp	w4, #0x40
     f44:	add	x0, x24, #0x1
     f48:	b.eq	16c4 <gconv@@Base+0xe04>  // b.none
     f4c:	cmp	x22, x0
     f50:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
     f54:	mov	x2, x24
     f58:	str	x0, [sp, #232]
     f5c:	cmp	w1, #0x7e
     f60:	b.eq	1610 <gconv@@Base+0xd50>  // b.none
     f64:	cmp	w1, #0x5c
     f68:	b.eq	18e0 <gconv@@Base+0x1020>  // b.none
     f6c:	strb	w3, [x2]
     f70:	ldr	x0, [sp, #224]
     f74:	add	x0, x0, #0x4
     f78:	str	x0, [sp, #224]
     f7c:	cmp	x0, x7
     f80:	b.eq	18d0 <gconv@@Base+0x1010>  // b.none
     f84:	ldr	w11, [x10]
     f88:	sub	x7, x0, x7
     f8c:	and	w3, w11, #0x7
     f90:	mov	w0, w3
     f94:	cmp	x0, x7
     f98:	b.ge	1f6c <gconv@@Base+0x16ac>  // b.tcont
     f9c:	ldr	x23, [x9]
     fa0:	sub	x0, x7, x0
     fa4:	and	w1, w11, #0xfffffff8
     fa8:	ldr	w7, [x21, #16]
     fac:	add	x23, x23, x0
     fb0:	str	x23, [x9]
     fb4:	mov	w11, w1
     fb8:	ldr	x24, [sp, #232]
     fbc:	str	w1, [x10]
     fc0:	b	980 <gconv@@Base+0xc0>
     fc4:	ldr	x2, [x27]
     fc8:	mov	x4, x20
     fcc:	ldr	x6, [sp, #176]
     fd0:	mov	x1, x21
     fd4:	ldr	x5, [sp, #192]
     fd8:	mov	x0, x26
     fdc:	str	x3, [sp, #104]
     fe0:	str	w12, [sp, #112]
     fe4:	str	w7, [sp, #120]
     fe8:	str	w11, [sp, #128]
     fec:	str	x18, [sp, #200]
     ff0:	bl	700 <__gconv_transliterate@plt>
     ff4:	ldr	w5, [x24]
     ff8:	mov	w8, w0
     ffc:	ldr	w12, [sp, #112]
    1000:	cmp	w0, #0x6
    1004:	ldr	w7, [sp, #120]
    1008:	and	w5, w5, #0xfffffff8
    100c:	ldr	w11, [sp, #128]
    1010:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1014:	ldr	x3, [sp, #104]
    1018:	ldr	x18, [sp, #200]
    101c:	b.eq	12c8 <gconv@@Base+0xa08>  // b.none
    1020:	cmp	w0, #0x5
    1024:	ldp	x0, x19, [sp, #224]
    1028:	b.ne	a94 <gconv@@Base+0x1d4>  // b.any
    102c:	b	aa0 <gconv@@Base+0x1e0>
    1030:	str	x23, [x27]
    1034:	ldr	x0, [x26, #96]
    1038:	str	w11, [x24]
    103c:	cbz	x0, 12d0 <gconv@@Base+0xa10>
    1040:	stp	x23, x28, [sp, #224]
    1044:	cmp	x20, x23
    1048:	ldr	w19, [x21, #16]
    104c:	b.eq	1cc0 <gconv@@Base+0x1400>  // b.none
    1050:	mov	x13, x22
    1054:	mov	x30, x28
    1058:	ldr	x22, [sp, #176]
    105c:	mov	x11, x28
    1060:	add	x3, sp, #0xe0
    1064:	mov	x28, x26
    1068:	mov	w26, w19
    106c:	mov	x19, x8
    1070:	mov	x8, x25
    1074:	mov	x25, x21
    1078:	mov	x21, x18
    107c:	mov	w5, #0x4                   	// #4
    1080:	add	x0, x23, #0x4
    1084:	cmp	x20, x0
    1088:	b.cc	1700 <gconv@@Base+0xe40>  // b.lo, b.ul, b.last
    108c:	cmp	x19, x30
    1090:	b.ls	14f0 <gconv@@Base+0xc30>  // b.plast
    1094:	ldr	w9, [x23]
    1098:	mov	w1, #0xfffe                	// #65534
    109c:	cmp	w9, w1
    10a0:	b.hi	1738 <gconv@@Base+0xe78>  // b.pmore
    10a4:	mov	w0, w9
    10a8:	cmp	w9, #0xa5
    10ac:	mov	x2, x21
    10b0:	mov	w10, #0xaf                  	// #175
    10b4:	b.hi	10c4 <gconv@@Base+0x804>  // b.pmore
    10b8:	b	10e4 <gconv@@Base+0x824>
    10bc:	ldrh	w10, [x0, #10]
    10c0:	mov	x2, x0
    10c4:	cmp	w9, w10
    10c8:	add	x0, x2, #0x8
    10cc:	b.hi	10bc <gconv@@Base+0x7fc>  // b.pmore
    10d0:	ldrh	w0, [x0]
    10d4:	cmp	w9, w0
    10d8:	b.cc	17c8 <gconv@@Base+0xf08>  // b.lo, b.ul, b.last
    10dc:	ldr	w0, [x2, #12]
    10e0:	add	w0, w9, w0
    10e4:	add	x1, x15, #0x1c8
    10e8:	add	x1, x1, #0x5f8
    10ec:	ldrb	w1, [x1, w0, uxtw]
    10f0:	cmp	w1, #0x0
    10f4:	ccmp	w9, #0x0, #0x4, eq  // eq = none
    10f8:	b.ne	1c20 <gconv@@Base+0x1360>  // b.any
    10fc:	cmp	w12, #0x40
    1100:	add	x0, x30, #0x1
    1104:	b.eq	14b8 <gconv@@Base+0xbf8>  // b.none
    1108:	cmp	x19, x0
    110c:	b.cc	14f0 <gconv@@Base+0xc30>  // b.lo, b.ul, b.last
    1110:	str	x0, [sp, #232]
    1114:	cmp	w9, #0x7e
    1118:	b.eq	14dc <gconv@@Base+0xc1c>  // b.none
    111c:	cmp	w9, #0x5c
    1120:	b.eq	1558 <gconv@@Base+0xc98>  // b.none
    1124:	strb	w1, [x30]
    1128:	ldp	x23, x30, [sp, #224]
    112c:	add	x23, x23, #0x4
    1130:	str	x23, [sp, #224]
    1134:	cmp	x20, x23
    1138:	b.ne	1080 <gconv@@Base+0x7c0>  // b.any
    113c:	str	x20, [x27]
    1140:	mov	x26, x28
    1144:	mov	x18, x21
    1148:	mov	x22, x13
    114c:	mov	x21, x25
    1150:	mov	x28, x11
    1154:	mov	x25, x8
    1158:	sxtw	x2, w5
    115c:	ldr	x8, [sp, #216]
    1160:	str	w12, [x24]
    1164:	b	1570 <gconv@@Base+0xcb0>
    1168:	ldr	x26, [sp, #160]
    116c:	mov	x9, x27
    1170:	ldr	x1, [sp, #208]
    1174:	ldr	x0, [x26]
    1178:	str	x19, [x21]
    117c:	ldr	w27, [sp, #144]
    1180:	add	x0, x0, x1
    1184:	str	x0, [x26]
    1188:	cmp	w27, #0x0
    118c:	ccmp	w8, #0x7, #0x0, ne  // ne = any
    1190:	b.eq	161c <gconv@@Base+0xd5c>  // b.none
    1194:	ldp	x23, x24, [sp, #48]
    1198:	b	c80 <gconv@@Base+0x3c0>
    119c:	mov	w7, w8
    11a0:	b	b34 <gconv@@Base+0x274>
    11a4:	ldr	x1, [sp, #176]
    11a8:	cbz	x1, 11b0 <gconv@@Base+0x8f0>
    11ac:	cbnz	w30, 11cc <gconv@@Base+0x90c>
    11b0:	str	x2, [x27]
    11b4:	mov	w8, #0x6                   	// #6
    11b8:	str	w5, [x24]
    11bc:	b	c70 <gconv@@Base+0x3b0>
    11c0:	mov	x0, x1
    11c4:	str	x1, [sp, #224]
    11c8:	b	a94 <gconv@@Base+0x1d4>
    11cc:	ldr	x0, [x1]
    11d0:	add	x2, x2, #0x2
    11d4:	mov	w8, #0x6                   	// #6
    11d8:	add	x0, x0, #0x1
    11dc:	str	x0, [x1]
    11e0:	b	bb8 <gconv@@Base+0x2f8>
    11e4:	ldr	x2, [sp, #176]
    11e8:	add	x0, x0, #0x4
    11ec:	mov	w8, #0x6                   	// #6
    11f0:	str	x0, [sp, #224]
    11f4:	ldr	x1, [x2]
    11f8:	add	x1, x1, #0x1
    11fc:	str	x1, [x2]
    1200:	b	a94 <gconv@@Base+0x1d4>
    1204:	cmp	w0, #0x4
    1208:	b.hi	1fc4 <gconv@@Base+0x1704>  // b.pmore
    120c:	add	x5, x24, #0x4
    1210:	cbz	w0, 15c4 <gconv@@Base+0xd04>
    1214:	ldrb	w1, [x10, #4]
    1218:	tst	w11, #0x6
    121c:	strb	w1, [sp, #240]
    1220:	mov	x1, #0x1                   	// #1
    1224:	b.eq	1234 <gconv@@Base+0x974>  // b.none
    1228:	ldrb	w2, [x10, #5]
    122c:	mov	x1, #0x2                   	// #2
    1230:	strb	w2, [sp, #241]
    1234:	cmp	x22, x5
    1238:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    123c:	add	x7, sp, #0xf0
    1240:	ldrb	w2, [x23]
    1244:	add	x8, x1, #0x1
    1248:	strb	w2, [x7, x1]
    124c:	ldrb	w6, [sp, #240]
    1250:	sub	w1, w6, #0xe
    1254:	and	w1, w1, #0xff
    1258:	cmp	w1, #0x1
    125c:	b.ls	1fb4 <gconv@@Base+0x16f4>  // b.plast
    1260:	cbnz	w4, 18ec <gconv@@Base+0x102c>
    1264:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1268:	add	x0, x2, #0x1c8
    126c:	add	x0, x0, #0x3f8
    1270:	mov	w1, w6
    1274:	cmp	w6, #0x0
    1278:	ldrh	w0, [x0, x1, lsl #1]
    127c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1280:	b.eq	1d88 <gconv@@Base+0x14c8>  // b.none
    1284:	str	w0, [x24]
    1288:	mov	x24, x5
    128c:	mov	x1, #0x1                   	// #1
    1290:	ldr	w11, [x10]
    1294:	and	w3, w11, #0x7
    1298:	mov	w2, w3
    129c:	cmp	x2, x1
    12a0:	b.ge	1fb4 <gconv@@Base+0x16f4>  // b.tcont
    12a4:	ldr	w19, [x21, #16]
    12a8:	and	w4, w11, #0xfffffff8
    12ac:	sub	x1, x1, x2
    12b0:	mov	w11, w4
    12b4:	add	x23, x23, x1
    12b8:	str	x23, [x9]
    12bc:	mov	w7, w19
    12c0:	str	w4, [x10]
    12c4:	b	980 <gconv@@Base+0xc0>
    12c8:	ldr	x19, [sp, #232]
    12cc:	b	d40 <gconv@@Base+0x480>
    12d0:	ldr	w5, [x21, #16]
    12d4:	cmp	x20, x23
    12d8:	b.eq	1cc0 <gconv@@Base+0x1400>  // b.none
    12dc:	add	x4, x28, #0x4
    12e0:	mov	x30, x28
    12e4:	cmp	x8, x4
    12e8:	mov	x2, #0x4                   	// #4
    12ec:	b.cc	1c0c <gconv@@Base+0x134c>  // b.lo, b.ul, b.last
    12f0:	ldp	x9, x0, [sp, #176]
    12f4:	adrp	x11, 10000 <gconv@@Base+0xf740>
    12f8:	and	w5, w5, #0x2
    12fc:	add	x11, x11, #0x8c8
    1300:	mov	w16, #0x4040                	// #16448
    1304:	mov	w17, #0xffff                	// #65535
    1308:	add	x6, x0, #0x3f8
    130c:	b	1344 <gconv@@Base+0xa84>
    1310:	mov	w1, w0
    1314:	ldrh	w1, [x6, x1, lsl #1]
    1318:	cmp	w1, #0x0
    131c:	ccmp	w0, #0x0, #0x4, eq  // eq = none
    1320:	b.ne	19bc <gconv@@Base+0x10fc>  // b.any
    1324:	add	x23, x23, #0x1
    1328:	str	w1, [x30]
    132c:	mov	x30, x4
    1330:	cmp	x20, x23
    1334:	b.eq	1568 <gconv@@Base+0xca8>  // b.none
    1338:	add	x4, x30, #0x4
    133c:	cmp	x8, x4
    1340:	b.cc	17a8 <gconv@@Base+0xee8>  // b.lo, b.ul, b.last
    1344:	ldrb	w0, [x23]
    1348:	cmp	w0, #0xe
    134c:	b.eq	17bc <gconv@@Base+0xefc>  // b.none
    1350:	cmp	w0, #0xf
    1354:	b.eq	17b0 <gconv@@Base+0xef0>  // b.none
    1358:	cbz	w12, 1310 <gconv@@Base+0xa50>
    135c:	cmp	w12, #0x40
    1360:	b.ne	1df0 <gconv@@Base+0x1530>  // b.any
    1364:	add	x1, x23, #0x1
    1368:	cmp	x20, x1
    136c:	b.ls	1c98 <gconv@@Base+0x13d8>  // b.plast
    1370:	ldrb	w1, [x23, #1]
    1374:	add	w1, w1, w0, lsl #8
    1378:	add	x0, x15, #0x1c8
    137c:	cmp	w1, w16
    1380:	b.ls	1c90 <gconv@@Base+0x13d0>  // b.plast
    1384:	mov	w3, #0x4158                	// #16728
    1388:	b	1390 <gconv@@Base+0xad0>
    138c:	ldrh	w3, [x0, #10]
    1390:	add	x0, x0, #0x8
    1394:	cmp	w1, w3
    1398:	b.hi	138c <gconv@@Base+0xacc>  // b.pmore
    139c:	ldrh	w3, [x0]
    13a0:	cmp	w3, w17
    13a4:	b.eq	1670 <gconv@@Base+0xdb0>  // b.none
    13a8:	cmp	w1, w3
    13ac:	b.cc	1670 <gconv@@Base+0xdb0>  // b.lo, b.ul, b.last
    13b0:	ldr	w0, [x0, #4]
    13b4:	add	w0, w1, w0
    13b8:	ldrh	w0, [x11, x0, lsl #1]
    13bc:	cmp	w0, #0x0
    13c0:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    13c4:	b.ne	1670 <gconv@@Base+0xdb0>  // b.any
    13c8:	add	x23, x23, #0x2
    13cc:	str	w0, [x30]
    13d0:	mov	x30, x4
    13d4:	b	1330 <gconv@@Base+0xa70>
    13d8:	ldr	x1, [sp, #176]
    13dc:	cbz	x1, 11b0 <gconv@@Base+0x8f0>
    13e0:	cbz	w30, 11b0 <gconv@@Base+0x8f0>
    13e4:	ldr	x0, [x1]
    13e8:	add	x2, x2, #0x1
    13ec:	mov	w8, #0x6                   	// #6
    13f0:	add	x0, x0, #0x1
    13f4:	str	x0, [x1]
    13f8:	b	bb8 <gconv@@Base+0x2f8>
    13fc:	adrp	x1, 8000 <gconv@@Base+0x7740>
    1400:	cmp	w6, #0xa8
    1404:	add	x1, x1, #0x450
    1408:	mov	w2, #0xb1                  	// #177
    140c:	b.hi	d70 <gconv@@Base+0x4b0>  // b.pmore
    1410:	mov	x0, x1
    1414:	mov	w1, #0xa6                  	// #166
    1418:	b	d80 <gconv@@Base+0x4c0>
    141c:	str	x2, [x27]
    1420:	mov	w8, #0x7                   	// #7
    1424:	str	w5, [x24]
    1428:	b	c70 <gconv@@Base+0x3b0>
    142c:	mov	w3, #0x4040                	// #16448
    1430:	b	c30 <gconv@@Base+0x370>
    1434:	mov	x2, x23
    1438:	str	x2, [x27]
    143c:	mov	w5, w12
    1440:	mov	x19, x28
    1444:	mov	w8, #0x5                   	// #5
    1448:	str	w5, [x24]
    144c:	b	c70 <gconv@@Base+0x3b0>
    1450:	cbnz	x13, 1dac <gconv@@Base+0x14ec>
    1454:	cmp	w6, #0x1
    1458:	ldr	x22, [x21, #32]
    145c:	b.ne	1690 <gconv@@Base+0xdd0>  // b.any
    1460:	ldr	w19, [x22]
    1464:	ldr	x2, [x21]
    1468:	tst	w19, #0xfffffff8
    146c:	b.eq	158c <gconv@@Base+0xccc>  // b.none
    1470:	ldr	x0, [x14, #96]
    1474:	cbz	x0, 1584 <gconv@@Base+0xcc4>
    1478:	ldr	x0, [x21, #8]
    147c:	cmp	x2, x0
    1480:	b.cs	1cd4 <gconv@@Base+0x1414>  // b.hs, b.nlast
    1484:	mov	x20, x2
    1488:	mov	w0, #0xf                   	// #15
    148c:	strb	w0, [x20], #1
    1490:	ldr	x1, [x21, #32]
    1494:	ldr	w3, [x21, #16]
    1498:	ldr	w0, [x1]
    149c:	and	w0, w0, #0x7
    14a0:	str	w0, [x1]
    14a4:	tbz	w3, #0, 1bb4 <gconv@@Base+0x12f4>
    14a8:	mov	x2, x20
    14ac:	mov	w8, #0x0                   	// #0
    14b0:	str	x2, [x21]
    14b4:	b	c80 <gconv@@Base+0x3c0>
    14b8:	cmp	x19, x0
    14bc:	b.cc	1988 <gconv@@Base+0x10c8>  // b.lo, b.ul, b.last
    14c0:	str	x0, [sp, #232]
    14c4:	mov	w0, #0xf                   	// #15
    14c8:	strb	w0, [x30]
    14cc:	mov	w12, #0x0                   	// #0
    14d0:	ldr	x30, [sp, #232]
    14d4:	add	x0, x30, #0x1
    14d8:	b	1108 <gconv@@Base+0x848>
    14dc:	mov	w0, #0xffffffa0            	// #-96
    14e0:	strb	w0, [x30]
    14e4:	b	1128 <gconv@@Base+0x868>
    14e8:	mov	x0, x1
    14ec:	b	d88 <gconv@@Base+0x4c8>
    14f0:	ldr	x0, [sp, #224]
    14f4:	str	x0, [x27]
    14f8:	ldr	x0, [sp, #216]
    14fc:	str	w12, [x24]
    1500:	mov	x26, x28
    1504:	mov	x18, x21
    1508:	mov	x22, x13
    150c:	mov	x21, x25
    1510:	mov	x28, x11
    1514:	mov	x25, x8
    1518:	cmp	x0, x30
    151c:	b.ne	1770 <gconv@@Base+0xeb0>  // b.any
    1520:	cmp	x30, x28
    1524:	b.ne	b34 <gconv@@Base+0x274>  // b.any
    1528:	ldr	w0, [x21, #20]
    152c:	sub	w0, w0, #0x1
    1530:	str	w0, [x21, #20]
    1534:	b	b34 <gconv@@Base+0x274>
    1538:	mov	x9, x27
    153c:	mov	w8, w7
    1540:	ldr	w27, [sp, #144]
    1544:	b	1188 <gconv@@Base+0x8c8>
    1548:	mov	x0, x20
    154c:	mov	w5, w12
    1550:	mov	w8, #0x4                   	// #4
    1554:	b	aa0 <gconv@@Base+0x1e0>
    1558:	mov	w0, #0xffffffb2            	// #-78
    155c:	strb	w0, [x30]
    1560:	b	1128 <gconv@@Base+0x868>
    1564:	mov	x2, #0x6                   	// #6
    1568:	str	x23, [x27]
    156c:	str	w12, [x24]
    1570:	cmp	x30, x8
    1574:	b.ne	1770 <gconv@@Base+0xeb0>  // b.any
    1578:	cmp	x2, #0x5
    157c:	b.eq	1520 <gconv@@Base+0xc60>  // b.none
    1580:	b	1718 <gconv@@Base+0xe58>
    1584:	and	w19, w19, #0x7
    1588:	str	w19, [x22]
    158c:	cbnz	w1, 14ac <gconv@@Base+0xbec>
    1590:	mov	x0, x25
    1594:	bl	740 <_dl_mcount_wrapper_check@plt>
    1598:	ldr	x1, [sp, #152]
    159c:	mov	w7, w27
    15a0:	mov	x5, x26
    15a4:	mov	x0, x28
    15a8:	mov	w6, #0x1                   	// #1
    15ac:	mov	x4, #0x0                   	// #0
    15b0:	mov	x3, #0x0                   	// #0
    15b4:	mov	x2, #0x0                   	// #0
    15b8:	blr	x25
    15bc:	mov	w8, w0
    15c0:	b	c80 <gconv@@Base+0x3c0>
    15c4:	cmp	x22, x5
    15c8:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    15cc:	mov	x2, x23
    15d0:	add	x7, sp, #0xf0
    15d4:	mov	x1, #0x0                   	// #0
    15d8:	ldrb	w6, [x2], #1
    15dc:	add	x8, x1, #0x1
    15e0:	strb	w6, [x7, x1]
    15e4:	cmp	x8, #0x1
    15e8:	ccmp	x20, x2, #0x0, ls  // ls = plast
    15ec:	mov	x1, #0x1                   	// #1
    15f0:	b.hi	15d8 <gconv@@Base+0xd18>  // b.pmore
    15f4:	ldrb	w6, [sp, #240]
    15f8:	mov	x2, #0x0                   	// #0
    15fc:	sub	w12, w6, #0xe
    1600:	and	w12, w12, #0xff
    1604:	cmp	w12, #0x1
    1608:	b.ls	12ac <gconv@@Base+0x9ec>  // b.plast
    160c:	b	1260 <gconv@@Base+0x9a0>
    1610:	mov	w0, #0xffffffa0            	// #-96
    1614:	strb	w0, [x2]
    1618:	b	f70 <gconv@@Base+0x6b0>
    161c:	ldr	x0, [x9]
    1620:	sub	x1, x20, x0
    1624:	cmp	x1, #0x3
    1628:	b.gt	1f94 <gconv@@Base+0x16d4>
    162c:	ldr	x2, [x21, #32]
    1630:	cmp	x0, x20
    1634:	add	x0, x0, #0x1
    1638:	add	x3, x2, #0x4
    163c:	b.cs	1f8c <gconv@@Base+0x16cc>  // b.hs, b.nlast
    1640:	str	x0, [x9]
    1644:	cmp	x20, x0
    1648:	add	x0, x0, #0x1
    164c:	ldurb	w4, [x0, #-2]
    1650:	strb	w4, [x3], #1
    1654:	b.ne	1640 <gconv@@Base+0xd80>  // b.any
    1658:	ldr	w0, [x2]
    165c:	ldp	x23, x24, [sp, #48]
    1660:	and	w0, w0, #0xfffffff8
    1664:	orr	w0, w0, w1
    1668:	str	w0, [x2]
    166c:	b	c80 <gconv@@Base+0x3c0>
    1670:	cbz	x9, 1564 <gconv@@Base+0xca4>
    1674:	cbz	w5, 1564 <gconv@@Base+0xca4>
    1678:	ldr	x0, [x9]
    167c:	add	x23, x23, #0x2
    1680:	mov	x2, #0x6                   	// #6
    1684:	add	x0, x0, #0x1
    1688:	str	x0, [x9]
    168c:	b	1330 <gconv@@Base+0xa70>
    1690:	str	xzr, [x22]
    1694:	mov	w8, #0x0                   	// #0
    1698:	ldr	w0, [x21, #16]
    169c:	tbnz	w0, #0, c80 <gconv@@Base+0x3c0>
    16a0:	mov	x0, x25
    16a4:	str	w6, [sp, #104]
    16a8:	bl	740 <_dl_mcount_wrapper_check@plt>
    16ac:	ldr	w6, [sp, #104]
    16b0:	mov	w7, w27
    16b4:	mov	x5, x26
    16b8:	mov	x0, x28
    16bc:	ldr	x1, [sp, #152]
    16c0:	b	15ac <gconv@@Base+0xcec>
    16c4:	cmp	x22, x0
    16c8:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    16cc:	str	x0, [sp, #232]
    16d0:	mov	w0, #0xf                   	// #15
    16d4:	strb	w0, [x24]
    16d8:	ldr	x2, [sp, #232]
    16dc:	add	x0, x2, #0x1
    16e0:	cmp	x22, x0
    16e4:	b.cs	f58 <gconv@@Base+0x698>  // b.hs, b.nlast
    16e8:	ldr	x0, [sp, #224]
    16ec:	cmp	x0, x7
    16f0:	b.ne	f84 <gconv@@Base+0x6c4>  // b.any
    16f4:	mov	w8, #0x5                   	// #5
    16f8:	ldp	x23, x24, [sp, #48]
    16fc:	b	c80 <gconv@@Base+0x3c0>
    1700:	ldr	x0, [sp, #224]
    1704:	str	x0, [x27]
    1708:	ldr	x0, [sp, #216]
    170c:	str	w12, [x24]
    1710:	cmp	x0, x30
    1714:	b.ne	1770 <gconv@@Base+0xeb0>  // b.any
    1718:	adrp	x3, 2000 <gconv@@Base+0x1740>
    171c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1720:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1724:	add	x3, x3, #0x1c0
    1728:	add	x1, x1, #0x8
    172c:	add	x0, x0, #0x148
    1730:	mov	w2, #0x2eb                 	// #747
    1734:	bl	750 <__assert_fail@plt>
    1738:	mov	w1, #0x1c00                	// #7168
    173c:	cmp	w1, w9, lsr #7
    1740:	b.eq	1790 <gconv@@Base+0xed0>  // b.none
    1744:	cbz	x22, 1700 <gconv@@Base+0xe40>
    1748:	str	w12, [x24]
    174c:	ldr	w0, [x25, #16]
    1750:	tbnz	w0, #3, 1adc <gconv@@Base+0x121c>
    1754:	ldr	x23, [sp, #224]
    1758:	tbnz	w26, #1, 1b6c <gconv@@Base+0x12ac>
    175c:	str	x23, [x27]
    1760:	ldr	x0, [sp, #216]
    1764:	str	w12, [x24]
    1768:	cmp	x0, x30
    176c:	b.eq	1718 <gconv@@Base+0xe58>  // b.none
    1770:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1774:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1778:	adrp	x0, 2000 <gconv@@Base+0x1740>
    177c:	add	x3, x3, #0x1c0
    1780:	add	x1, x1, #0x8
    1784:	add	x0, x0, #0x130
    1788:	mov	w2, #0x2ea                 	// #746
    178c:	bl	750 <__assert_fail@plt>
    1790:	mov	x23, x0
    1794:	str	x0, [sp, #224]
    1798:	b	1134 <gconv@@Base+0x874>
    179c:	mov	x0, #0x4                   	// #4
    17a0:	mov	x12, #0x0                   	// #0
    17a4:	b	e88 <gconv@@Base+0x5c8>
    17a8:	mov	x2, #0x5                   	// #5
    17ac:	b	1568 <gconv@@Base+0xca8>
    17b0:	add	x23, x23, #0x1
    17b4:	mov	w12, #0x0                   	// #0
    17b8:	b	1330 <gconv@@Base+0xa70>
    17bc:	add	x23, x23, #0x1
    17c0:	mov	w12, #0x40                  	// #64
    17c4:	b	1330 <gconv@@Base+0xa70>
    17c8:	adrp	x0, 8000 <gconv@@Base+0x7740>
    17cc:	cmp	w9, #0xa8
    17d0:	add	x0, x0, #0x450
    17d4:	mov	w2, #0xb1                  	// #177
    17d8:	b.hi	17e8 <gconv@@Base+0xf28>  // b.pmore
    17dc:	b	1c04 <gconv@@Base+0x1344>
    17e0:	ldrh	w2, [x1, #10]
    17e4:	mov	x0, x1
    17e8:	cmp	w9, w2
    17ec:	add	x1, x0, #0x8
    17f0:	b.hi	17e0 <gconv@@Base+0xf20>  // b.pmore
    17f4:	ldrh	w0, [x0, #8]
    17f8:	cmp	w9, w0
    17fc:	b.cc	1744 <gconv@@Base+0xe84>  // b.lo, b.ul, b.last
    1800:	ldr	w0, [x1, #4]
    1804:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1808:	add	x1, x1, #0x910
    180c:	cmp	w9, #0x0
    1810:	add	w0, w9, w0
    1814:	lsl	x0, x0, #1
    1818:	add	x2, x0, x1
    181c:	ldrb	w0, [x0, x1]
    1820:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    1824:	b.eq	1744 <gconv@@Base+0xe84>  // b.none
    1828:	cbnz	w12, 184c <gconv@@Base+0xf8c>
    182c:	add	x1, x30, #0x1
    1830:	cmp	x19, x1
    1834:	b.cc	1e38 <gconv@@Base+0x1578>  // b.lo, b.ul, b.last
    1838:	str	x1, [sp, #232]
    183c:	mov	w1, #0xe                   	// #14
    1840:	strb	w1, [x30]
    1844:	mov	w12, #0x40                  	// #64
    1848:	ldr	x30, [sp, #232]
    184c:	add	x1, x30, #0x2
    1850:	cmp	x19, x1
    1854:	b.cc	1988 <gconv@@Base+0x10c8>  // b.lo, b.ul, b.last
    1858:	add	x1, x30, #0x1
    185c:	str	x1, [sp, #232]
    1860:	strb	w0, [x30]
    1864:	ldr	x0, [sp, #232]
    1868:	ldrb	w1, [x2, #1]
    186c:	add	x2, x0, #0x1
    1870:	str	x2, [sp, #232]
    1874:	strb	w1, [x0]
    1878:	b	1128 <gconv@@Base+0x868>
    187c:	mov	x2, x20
    1880:	mov	x19, x28
    1884:	mov	w5, w12
    1888:	mov	w8, #0x4                   	// #4
    188c:	b	c64 <gconv@@Base+0x3a4>
    1890:	str	x20, [x9]
    1894:	cmp	x23, x20
    1898:	b.cs	18c0 <gconv@@Base+0x1000>  // b.hs, b.nlast
    189c:	add	x23, x23, #0x1
    18a0:	add	x10, x10, x12
    18a4:	str	x23, [sp, #224]
    18a8:	cmp	x20, x23
    18ac:	add	x10, x10, #0x1
    18b0:	add	x23, x23, #0x1
    18b4:	ldurb	w0, [x23, #-2]
    18b8:	strb	w0, [x10, #3]
    18bc:	b.ne	18a4 <gconv@@Base+0xfe4>  // b.any
    18c0:	mov	w8, #0x7                   	// #7
    18c4:	ldp	x23, x24, [sp, #48]
    18c8:	b	c80 <gconv@@Base+0x3c0>
    18cc:	cbnz	w8, 1194 <gconv@@Base+0x8d4>
    18d0:	ldr	w11, [x10]
    18d4:	ldr	w7, [x21, #16]
    18d8:	ldr	x23, [x9]
    18dc:	b	980 <gconv@@Base+0xc0>
    18e0:	mov	w0, #0xffffffb2            	// #-78
    18e4:	strb	w0, [x2]
    18e8:	b	f70 <gconv@@Base+0x6b0>
    18ec:	cmp	w4, #0x40
    18f0:	b.ne	1d28 <gconv@@Base+0x1468>  // b.any
    18f4:	add	x1, x7, x8
    18f8:	add	x2, x7, #0x1
    18fc:	cmp	x1, x2
    1900:	b.ls	1ce4 <gconv@@Base+0x1424>  // b.plast
    1904:	ldrb	w0, [sp, #241]
    1908:	mov	w1, #0x4040                	// #16448
    190c:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1910:	add	x2, x2, #0x1c8
    1914:	add	w0, w0, w6, lsl #8
    1918:	cmp	w0, w1
    191c:	b.ls	1948 <gconv@@Base+0x1088>  // b.plast
    1920:	mov	w1, #0x4158                	// #16728
    1924:	b	192c <gconv@@Base+0x106c>
    1928:	ldrh	w1, [x2, #10]
    192c:	add	x2, x2, #0x8
    1930:	cmp	w0, w1
    1934:	b.hi	1928 <gconv@@Base+0x1068>  // b.pmore
    1938:	ldrh	w1, [x2]
    193c:	mov	w4, #0xffff                	// #65535
    1940:	cmp	w1, w4
    1944:	b.eq	1c6c <gconv@@Base+0x13ac>  // b.none
    1948:	cmp	w0, w1
    194c:	b.cc	1c6c <gconv@@Base+0x13ac>  // b.lo, b.ul, b.last
    1950:	ldr	w2, [x2, #4]
    1954:	cmp	w0, #0x0
    1958:	adrp	x1, 10000 <gconv@@Base+0xf740>
    195c:	add	x1, x1, #0x8c8
    1960:	add	w0, w0, w2
    1964:	ldrh	w0, [x1, x0, lsl #1]
    1968:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    196c:	b.eq	1c6c <gconv@@Base+0x13ac>  // b.none
    1970:	str	w0, [x24]
    1974:	mov	x1, #0x2                   	// #2
    1978:	mov	x24, x5
    197c:	ldr	w11, [x10]
    1980:	and	w3, w11, #0x7
    1984:	b	1298 <gconv@@Base+0x9d8>
    1988:	ldr	x0, [sp, #224]
    198c:	str	x0, [x27]
    1990:	ldr	x0, [sp, #216]
    1994:	str	w12, [x24]
    1998:	mov	x26, x28
    199c:	mov	x18, x21
    19a0:	mov	x22, x13
    19a4:	mov	x21, x25
    19a8:	mov	x28, x11
    19ac:	mov	x25, x8
    19b0:	cmp	x30, x0
    19b4:	b.eq	1520 <gconv@@Base+0xc60>  // b.none
    19b8:	b	1770 <gconv@@Base+0xeb0>
    19bc:	cbz	x9, 1564 <gconv@@Base+0xca4>
    19c0:	cbz	w5, 1564 <gconv@@Base+0xca4>
    19c4:	ldr	x0, [x9]
    19c8:	add	x23, x23, #0x1
    19cc:	mov	x2, #0x6                   	// #6
    19d0:	add	x0, x0, #0x1
    19d4:	str	x0, [x9]
    19d8:	b	1330 <gconv@@Base+0xa70>
    19dc:	adrp	x0, 8000 <gconv@@Base+0x7740>
    19e0:	cmp	w1, #0xa8
    19e4:	add	x0, x0, #0x450
    19e8:	mov	w3, #0xb1                  	// #177
    19ec:	b.hi	19fc <gconv@@Base+0x113c>  // b.pmore
    19f0:	b	1cdc <gconv@@Base+0x141c>
    19f4:	ldrh	w3, [x2, #10]
    19f8:	mov	x0, x2
    19fc:	cmp	w1, w3
    1a00:	add	x2, x0, #0x8
    1a04:	b.hi	19f4 <gconv@@Base+0x1134>  // b.pmore
    1a08:	ldrh	w0, [x0, #8]
    1a0c:	cmp	w1, w0
    1a10:	b.cc	1a98 <gconv@@Base+0x11d8>  // b.lo, b.ul, b.last
    1a14:	ldr	w0, [x2, #4]
    1a18:	adrp	x2, 2000 <gconv@@Base+0x1740>
    1a1c:	add	x2, x2, #0x910
    1a20:	add	w0, w1, w0
    1a24:	lsl	x0, x0, #1
    1a28:	add	x3, x0, x2
    1a2c:	ldrb	w2, [x0, x2]
    1a30:	cmp	w2, #0x0
    1a34:	ccmp	w1, #0x0, #0x4, eq  // eq = none
    1a38:	b.ne	1a98 <gconv@@Base+0x11d8>  // b.any
    1a3c:	cbnz	w4, 1ba0 <gconv@@Base+0x12e0>
    1a40:	add	x0, x24, #0x1
    1a44:	cmp	x22, x0
    1a48:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    1a4c:	str	x0, [sp, #232]
    1a50:	mov	w0, #0xe                   	// #14
    1a54:	strb	w0, [x24]
    1a58:	ldr	x0, [sp, #232]
    1a5c:	add	x1, x0, #0x2
    1a60:	cmp	x22, x1
    1a64:	b.cc	16e8 <gconv@@Base+0xe28>  // b.lo, b.ul, b.last
    1a68:	add	x1, x0, #0x1
    1a6c:	str	x1, [sp, #232]
    1a70:	strb	w2, [x0]
    1a74:	ldr	x0, [sp, #232]
    1a78:	ldrb	w1, [x3, #1]
    1a7c:	add	x2, x0, #0x1
    1a80:	str	x2, [sp, #232]
    1a84:	strb	w1, [x0]
    1a88:	b	f70 <gconv@@Base+0x6b0>
    1a8c:	mov	w0, #0x1c00                	// #7168
    1a90:	cmp	w0, w1, lsr #7
    1a94:	b.eq	1b90 <gconv@@Base+0x12d0>  // b.none
    1a98:	ldr	x0, [sp, #176]
    1a9c:	cbz	x0, 1c60 <gconv@@Base+0x13a0>
    1aa0:	str	w4, [x10]
    1aa4:	ldr	w0, [x21, #16]
    1aa8:	tbnz	w0, #3, 1e6c <gconv@@Base+0x15ac>
    1aac:	tbz	w19, #1, 1c60 <gconv@@Base+0x13a0>
    1ab0:	ldr	x3, [sp, #176]
    1ab4:	add	x2, x7, #0x4
    1ab8:	mov	x0, x2
    1abc:	str	x2, [sp, #224]
    1ac0:	ldr	x1, [x3]
    1ac4:	add	x1, x1, #0x1
    1ac8:	str	x1, [x3]
    1acc:	b	f84 <gconv@@Base+0x6c4>
    1ad0:	mov	w8, #0x6                   	// #6
    1ad4:	ldr	x0, [sp, #224]
    1ad8:	b	aa0 <gconv@@Base+0x1e0>
    1adc:	ldr	x2, [x27]
    1ae0:	mov	x6, x22
    1ae4:	ldr	x5, [sp, #192]
    1ae8:	mov	x4, x20
    1aec:	mov	x1, x25
    1af0:	mov	x0, x28
    1af4:	stp	x3, x8, [sp, #104]
    1af8:	str	w7, [sp, #120]
    1afc:	str	x11, [sp, #128]
    1b00:	str	x13, [sp, #200]
    1b04:	bl	700 <__gconv_transliterate@plt>
    1b08:	ldr	w12, [x24]
    1b0c:	mov	w5, w0
    1b10:	ldr	w7, [sp, #120]
    1b14:	cmp	w0, #0x6
    1b18:	and	w12, w12, #0xfffffff8
    1b1c:	adrp	x15, 2000 <gconv@@Base+0x1740>
    1b20:	ldp	x3, x8, [sp, #104]
    1b24:	ldr	x11, [sp, #128]
    1b28:	ldr	x13, [sp, #200]
    1b2c:	b.eq	1b88 <gconv@@Base+0x12c8>  // b.none
    1b30:	cmp	w0, #0x5
    1b34:	ldp	x23, x30, [sp, #224]
    1b38:	b.ne	1134 <gconv@@Base+0x874>  // b.any
    1b3c:	str	x23, [x27]
    1b40:	mov	x26, x28
    1b44:	ldr	x0, [sp, #216]
    1b48:	str	w12, [x24]
    1b4c:	mov	x18, x21
    1b50:	mov	x22, x13
    1b54:	mov	x21, x25
    1b58:	mov	x28, x11
    1b5c:	mov	x25, x8
    1b60:	cmp	x0, x30
    1b64:	b.eq	1520 <gconv@@Base+0xc60>  // b.none
    1b68:	b	1770 <gconv@@Base+0xeb0>
    1b6c:	ldr	x0, [x22]
    1b70:	add	x23, x23, #0x4
    1b74:	mov	w5, #0x6                   	// #6
    1b78:	str	x23, [sp, #224]
    1b7c:	add	x0, x0, #0x1
    1b80:	str	x0, [x22]
    1b84:	b	1134 <gconv@@Base+0x874>
    1b88:	ldr	x30, [sp, #232]
    1b8c:	b	1754 <gconv@@Base+0xe94>
    1b90:	add	x0, x7, #0x4
    1b94:	mov	x7, #0x4                   	// #4
    1b98:	str	x0, [sp, #224]
    1b9c:	b	f90 <gconv@@Base+0x6d0>
    1ba0:	add	x0, x24, #0x2
    1ba4:	cmp	x22, x0
    1ba8:	b.cc	16f4 <gconv@@Base+0xe34>  // b.lo, b.ul, b.last
    1bac:	mov	x0, x24
    1bb0:	b	1a68 <gconv@@Base+0x11a8>
    1bb4:	mov	x0, x25
    1bb8:	str	x2, [sp, #232]
    1bbc:	bl	740 <_dl_mcount_wrapper_check@plt>
    1bc0:	ldr	x1, [sp, #152]
    1bc4:	mov	w7, w27
    1bc8:	mov	x5, x26
    1bcc:	mov	x3, x20
    1bd0:	add	x2, sp, #0xe8
    1bd4:	mov	x0, x28
    1bd8:	mov	w6, #0x0                   	// #0
    1bdc:	mov	x4, #0x0                   	// #0
    1be0:	blr	x25
    1be4:	mov	w8, w0
    1be8:	cmp	w0, #0x4
    1bec:	b.eq	1590 <gconv@@Base+0xcd0>  // b.none
    1bf0:	ldr	x0, [sp, #232]
    1bf4:	cmp	x0, x20
    1bf8:	b.ne	1f60 <gconv@@Base+0x16a0>  // b.any
    1bfc:	cbnz	w8, c80 <gconv@@Base+0x3c0>
    1c00:	b	1590 <gconv@@Base+0xcd0>
    1c04:	mov	x1, x0
    1c08:	b	1800 <gconv@@Base+0xf40>
    1c0c:	str	x23, [x27]
    1c10:	cmp	x8, x28
    1c14:	str	w12, [x24]
    1c18:	b.eq	1528 <gconv@@Base+0xc68>  // b.none
    1c1c:	b	1770 <gconv@@Base+0xeb0>
    1c20:	adrp	x0, 8000 <gconv@@Base+0x7740>
    1c24:	cmp	w9, #0xa8
    1c28:	add	x0, x0, #0x450
    1c2c:	mov	w2, #0xb1                  	// #177
    1c30:	b.hi	17e8 <gconv@@Base+0xf28>  // b.pmore
    1c34:	mov	x1, x0
    1c38:	mov	w0, #0xa6                  	// #166
    1c3c:	b	17f8 <gconv@@Base+0xf38>
    1c40:	ldr	x2, [sp, #176]
    1c44:	add	x0, x0, #0x4
    1c48:	str	x0, [sp, #224]
    1c4c:	cmp	x0, x7
    1c50:	ldr	x1, [x2]
    1c54:	add	x1, x1, #0x1
    1c58:	str	x1, [x2]
    1c5c:	b.ne	f84 <gconv@@Base+0x6c4>  // b.any
    1c60:	mov	w8, #0x6                   	// #6
    1c64:	ldp	x23, x24, [sp, #48]
    1c68:	b	c80 <gconv@@Base+0x3c0>
    1c6c:	ldr	x0, [sp, #176]
    1c70:	cbz	x0, 1c60 <gconv@@Base+0x13a0>
    1c74:	tbz	w19, #1, 1c60 <gconv@@Base+0x13a0>
    1c78:	mov	x2, x0
    1c7c:	mov	x1, #0x2                   	// #2
    1c80:	ldr	x0, [x0]
    1c84:	add	x0, x0, #0x1
    1c88:	str	x0, [x2]
    1c8c:	b	1298 <gconv@@Base+0x9d8>
    1c90:	mov	w3, #0x4040                	// #16448
    1c94:	b	13a8 <gconv@@Base+0xae8>
    1c98:	mov	x2, #0x7                   	// #7
    1c9c:	b	1568 <gconv@@Base+0xca8>
    1ca0:	adrp	x0, 8000 <gconv@@Base+0x7740>
    1ca4:	cmp	w1, #0xa8
    1ca8:	add	x0, x0, #0x450
    1cac:	mov	w3, #0xb1                  	// #177
    1cb0:	b.hi	19fc <gconv@@Base+0x113c>  // b.pmore
    1cb4:	mov	x2, x0
    1cb8:	mov	w0, #0xa6                  	// #166
    1cbc:	b	1a0c <gconv@@Base+0x114c>
    1cc0:	str	x20, [x27]
    1cc4:	cmp	x8, x28
    1cc8:	str	w12, [x24]
    1ccc:	b.eq	1718 <gconv@@Base+0xe58>  // b.none
    1cd0:	b	1770 <gconv@@Base+0xeb0>
    1cd4:	mov	w8, #0x5                   	// #5
    1cd8:	b	c80 <gconv@@Base+0x3c0>
    1cdc:	mov	x2, x0
    1ce0:	b	1a14 <gconv@@Base+0x1154>
    1ce4:	add	x7, x7, #0x2
    1ce8:	cmp	x1, x7
    1cec:	b.eq	1d68 <gconv@@Base+0x14a8>  // b.none
    1cf0:	mov	w0, w0
    1cf4:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1cf8:	sub	x0, x8, x0
    1cfc:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d00:	add	x23, x23, x0
    1d04:	str	x23, [x9]
    1d08:	add	x3, x3, #0x1a8
    1d0c:	add	x1, x1, #0x38
    1d10:	cmp	x8, #0x40
    1d14:	b.le	1d58 <gconv@@Base+0x1498>
    1d18:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d1c:	mov	w2, #0x1e6                 	// #486
    1d20:	add	x0, x0, #0x100
    1d24:	bl	750 <__assert_fail@plt>
    1d28:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d2c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d30:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d34:	add	x3, x3, #0x1a8
    1d38:	add	x1, x1, #0x38
    1d3c:	add	x0, x0, #0x78
    1d40:	mov	w2, #0x1be                 	// #446
    1d44:	bl	750 <__assert_fail@plt>
    1d48:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d4c:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d50:	add	x3, x3, #0x190
    1d54:	add	x1, x1, #0x38
    1d58:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d5c:	mov	w2, #0x1e5                 	// #485
    1d60:	add	x0, x0, #0xd8
    1d64:	bl	750 <__assert_fail@plt>
    1d68:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1d6c:	add	x3, x3, #0x1a8
    1d70:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1d74:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1d78:	add	x1, x1, #0x38
    1d7c:	add	x0, x0, #0xb0
    1d80:	mov	w2, #0x1db                 	// #475
    1d84:	bl	750 <__assert_fail@plt>
    1d88:	ldr	x0, [sp, #176]
    1d8c:	cbz	x0, 1c60 <gconv@@Base+0x13a0>
    1d90:	tbz	w19, #1, 1c60 <gconv@@Base+0x13a0>
    1d94:	mov	x2, x0
    1d98:	mov	x1, #0x1                   	// #1
    1d9c:	ldr	x0, [x0]
    1da0:	add	x0, x0, x1
    1da4:	str	x0, [x2]
    1da8:	b	1298 <gconv@@Base+0x9d8>
    1dac:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1db0:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1db4:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1db8:	add	x3, x3, #0x1c0
    1dbc:	add	x1, x1, #0x8
    1dc0:	add	x0, x0, #0x20
    1dc4:	mov	w2, #0x1a4                 	// #420
    1dc8:	stp	x23, x24, [sp, #48]
    1dcc:	bl	750 <__assert_fail@plt>
    1dd0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1dd4:	add	x3, x3, #0x190
    1dd8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1ddc:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1de0:	add	x1, x1, #0x38
    1de4:	add	x0, x0, #0x48
    1de8:	mov	w2, #0x18b                 	// #395
    1dec:	bl	750 <__assert_fail@plt>
    1df0:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1df4:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1df8:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1dfc:	add	x3, x3, #0x180
    1e00:	add	x1, x1, #0x38
    1e04:	add	x0, x0, #0x78
    1e08:	mov	w2, #0x150                 	// #336
    1e0c:	bl	750 <__assert_fail@plt>
    1e10:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1e14:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1e18:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1e1c:	add	x3, x3, #0x1c0
    1e20:	add	x1, x1, #0x8
    1e24:	add	x0, x0, #0x20
    1e28:	mov	w2, #0x234                 	// #564
    1e2c:	bl	750 <__assert_fail@plt>
    1e30:	stp	x23, x24, [sp, #48]
    1e34:	bl	710 <__stack_chk_fail@plt>
    1e38:	ldr	x0, [sp, #224]
    1e3c:	str	x0, [x27]
    1e40:	ldr	x0, [sp, #216]
    1e44:	str	wzr, [x24]
    1e48:	mov	x26, x28
    1e4c:	mov	x18, x21
    1e50:	mov	x22, x13
    1e54:	mov	x21, x25
    1e58:	mov	x28, x11
    1e5c:	mov	x25, x8
    1e60:	cmp	x0, x30
    1e64:	b.eq	1520 <gconv@@Base+0xc60>  // b.none
    1e68:	b	1770 <gconv@@Base+0xeb0>
    1e6c:	ldr	x6, [sp, #176]
    1e70:	add	x4, x7, x12
    1e74:	mov	x0, x14
    1e78:	mov	x2, x23
    1e7c:	add	x5, sp, #0xe8
    1e80:	add	x3, sp, #0xe0
    1e84:	mov	x1, x21
    1e88:	stp	x14, x4, [sp, #104]
    1e8c:	stp	x7, x12, [sp, #120]
    1e90:	stp	x10, x9, [sp, #136]
    1e94:	str	x13, [sp, #160]
    1e98:	bl	700 <__gconv_transliterate@plt>
    1e9c:	mov	w8, w0
    1ea0:	cmp	w0, #0x6
    1ea4:	ldr	x14, [sp, #104]
    1ea8:	ldr	x7, [sp, #120]
    1eac:	ldp	x10, x9, [sp, #136]
    1eb0:	ldr	x13, [sp, #160]
    1eb4:	ldr	x0, [sp, #224]
    1eb8:	b.eq	1f3c <gconv@@Base+0x167c>  // b.none
    1ebc:	cmp	x0, x7
    1ec0:	ldr	x4, [sp, #112]
    1ec4:	ldr	x12, [sp, #128]
    1ec8:	b.ne	f84 <gconv@@Base+0x6c4>  // b.any
    1ecc:	cmp	w8, #0x7
    1ed0:	b.ne	18cc <gconv@@Base+0x100c>  // b.any
    1ed4:	add	x0, x7, #0x4
    1ed8:	cmp	x4, x0
    1edc:	b.eq	1fd4 <gconv@@Base+0x1714>  // b.none
    1ee0:	ldr	w0, [x10]
    1ee4:	ldr	x1, [x9]
    1ee8:	and	x2, x0, #0x7
    1eec:	sub	x2, x12, x2
    1ef0:	and	w0, w0, #0xfffffff8
    1ef4:	add	x1, x1, x2
    1ef8:	str	x1, [x9]
    1efc:	cmp	x12, w0, sxtw
    1f00:	b.le	1d48 <gconv@@Base+0x1488>
    1f04:	cmp	x12, #0x4
    1f08:	b.hi	1f4c <gconv@@Base+0x168c>  // b.pmore
    1f0c:	orr	w0, w0, w12
    1f10:	str	w0, [x10]
    1f14:	cmp	x4, x7
    1f18:	b.ls	18c0 <gconv@@Base+0x1000>  // b.plast
    1f1c:	add	x10, x10, #0x4
    1f20:	add	x7, x7, #0x1
    1f24:	str	x7, [sp, #224]
    1f28:	cmp	x4, x7
    1f2c:	ldurb	w0, [x7, #-1]
    1f30:	strb	w0, [x10], #1
    1f34:	b.ne	1f20 <gconv@@Base+0x1660>  // b.any
    1f38:	b	18c0 <gconv@@Base+0x1000>
    1f3c:	tbnz	w19, #1, 1c40 <gconv@@Base+0x1380>
    1f40:	cmp	x0, x7
    1f44:	b.ne	f84 <gconv@@Base+0x6c4>  // b.any
    1f48:	b	1c60 <gconv@@Base+0x13a0>
    1f4c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f50:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f54:	add	x3, x3, #0x190
    1f58:	add	x1, x1, #0x38
    1f5c:	b	1d18 <gconv@@Base+0x1458>
    1f60:	str	w19, [x22]
    1f64:	cbnz	w8, c80 <gconv@@Base+0x3c0>
    1f68:	b	1590 <gconv@@Base+0xcd0>
    1f6c:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f70:	add	x3, x3, #0x190
    1f74:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f78:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1f7c:	add	x1, x1, #0x38
    1f80:	add	x0, x0, #0x88
    1f84:	mov	w2, #0x1c9                 	// #457
    1f88:	bl	750 <__assert_fail@plt>
    1f8c:	mov	w1, #0x0                   	// #0
    1f90:	b	1658 <gconv@@Base+0xd98>
    1f94:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1f98:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1f9c:	adrp	x0, 2000 <gconv@@Base+0x1740>
    1fa0:	add	x3, x3, #0x1c0
    1fa4:	add	x1, x1, #0x8
    1fa8:	add	x0, x0, #0x168
    1fac:	mov	w2, #0x31e                 	// #798
    1fb0:	bl	750 <__assert_fail@plt>
    1fb4:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1fb8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1fbc:	add	x3, x3, #0x1a8
    1fc0:	b	1f78 <gconv@@Base+0x16b8>
    1fc4:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1fc8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1fcc:	add	x3, x3, #0x1a8
    1fd0:	b	1ddc <gconv@@Base+0x151c>
    1fd4:	adrp	x3, 2000 <gconv@@Base+0x1740>
    1fd8:	adrp	x1, 2000 <gconv@@Base+0x1740>
    1fdc:	add	x3, x3, #0x190
    1fe0:	b	1d74 <gconv@@Base+0x14b4>

Disassembly of section .fini:

0000000000001fe4 <.fini>:
    1fe4:	stp	x29, x30, [sp, #-16]!
    1fe8:	mov	x29, sp
    1fec:	ldp	x29, x30, [sp], #16
    1ff0:	ret
