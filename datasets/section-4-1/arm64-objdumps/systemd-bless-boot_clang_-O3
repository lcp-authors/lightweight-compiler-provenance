
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-bless-boot_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401478 <_init>:
  401478:	stp	x29, x30, [sp, #-16]!
  40147c:	mov	x29, sp
  401480:	bl	401850 <call_weak_fn>
  401484:	ldp	x29, x30, [sp], #16
  401488:	ret

Disassembly of section .plt:

0000000000401490 <__libc_start_main@plt-0x20>:
  401490:	stp	x16, x30, [sp, #-16]!
  401494:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401498:	ldr	x17, [x16, #3664]
  40149c:	add	x16, x16, #0xe50
  4014a0:	br	x17
  4014a4:	nop
  4014a8:	nop
  4014ac:	nop

00000000004014b0 <__libc_start_main@plt>:
  4014b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4014b4:	ldr	x17, [x16, #3672]
  4014b8:	add	x16, x16, #0xe58
  4014bc:	br	x17

00000000004014c0 <abort@plt>:
  4014c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4014c4:	ldr	x17, [x16, #3680]
  4014c8:	add	x16, x16, #0xe60
  4014cc:	br	x17

00000000004014d0 <__gmon_start__@plt>:
  4014d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4014d4:	ldr	x17, [x16, #3688]
  4014d8:	add	x16, x16, #0xe68
  4014dc:	br	x17

00000000004014e0 <strv_free@plt>:
  4014e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4014e4:	ldr	x17, [x16, #3696]
  4014e8:	add	x16, x16, #0xe70
  4014ec:	br	x17

00000000004014f0 <log_parse_environment_realm@plt>:
  4014f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4014f4:	ldr	x17, [x16, #3704]
  4014f8:	add	x16, x16, #0xe78
  4014fc:	br	x17

0000000000401500 <log_open@plt>:
  401500:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401504:	ldr	x17, [x16, #3712]
  401508:	add	x16, x16, #0xe80
  40150c:	br	x17

0000000000401510 <getopt_long@plt>:
  401510:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401514:	ldr	x17, [x16, #3720]
  401518:	add	x16, x16, #0xe88
  40151c:	br	x17

0000000000401520 <strv_extend@plt>:
  401520:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401524:	ldr	x17, [x16, #3728]
  401528:	add	x16, x16, #0xe90
  40152c:	br	x17

0000000000401530 <log_oom_internal@plt>:
  401530:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401534:	ldr	x17, [x16, #3736]
  401538:	add	x16, x16, #0xe98
  40153c:	br	x17

0000000000401540 <terminal_urlify_man@plt>:
  401540:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401544:	ldr	x17, [x16, #3744]
  401548:	add	x16, x16, #0xea0
  40154c:	br	x17

0000000000401550 <colors_enabled@plt>:
  401550:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401554:	ldr	x17, [x16, #3752]
  401558:	add	x16, x16, #0xea8
  40155c:	br	x17

0000000000401560 <printf@plt>:
  401560:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401564:	ldr	x17, [x16, #3760]
  401568:	add	x16, x16, #0xeb0
  40156c:	br	x17

0000000000401570 <version@plt>:
  401570:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401574:	ldr	x17, [x16, #3768]
  401578:	add	x16, x16, #0xeb8
  40157c:	br	x17

0000000000401580 <detect_container@plt>:
  401580:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401584:	ldr	x17, [x16, #3776]
  401588:	add	x16, x16, #0xec0
  40158c:	br	x17

0000000000401590 <log_get_max_level_realm@plt>:
  401590:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401594:	ldr	x17, [x16, #3784]
  401598:	add	x16, x16, #0xec8
  40159c:	br	x17

00000000004015a0 <free@plt>:
  4015a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015a4:	ldr	x17, [x16, #3792]
  4015a8:	add	x16, x16, #0xed0
  4015ac:	br	x17

00000000004015b0 <is_efi_boot@plt>:
  4015b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015b4:	ldr	x17, [x16, #3800]
  4015b8:	add	x16, x16, #0xed8
  4015bc:	br	x17

00000000004015c0 <dispatch_verb@plt>:
  4015c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015c4:	ldr	x17, [x16, #3808]
  4015c8:	add	x16, x16, #0xee0
  4015cc:	br	x17

00000000004015d0 <log_internal_realm@plt>:
  4015d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015d4:	ldr	x17, [x16, #3816]
  4015d8:	add	x16, x16, #0xee8
  4015dc:	br	x17

00000000004015e0 <ask_password_agent_close@plt>:
  4015e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015e4:	ldr	x17, [x16, #3824]
  4015e8:	add	x16, x16, #0xef0
  4015ec:	br	x17

00000000004015f0 <polkit_agent_close@plt>:
  4015f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4015f4:	ldr	x17, [x16, #3832]
  4015f8:	add	x16, x16, #0xef8
  4015fc:	br	x17

0000000000401600 <pager_close@plt>:
  401600:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401604:	ldr	x17, [x16, #3840]
  401608:	add	x16, x16, #0xf00
  40160c:	br	x17

0000000000401610 <mac_selinux_finish@plt>:
  401610:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401614:	ldr	x17, [x16, #3848]
  401618:	add	x16, x16, #0xf08
  40161c:	br	x17

0000000000401620 <log_assert_failed_realm@plt>:
  401620:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401624:	ldr	x17, [x16, #3856]
  401628:	add	x16, x16, #0xf10
  40162c:	br	x17

0000000000401630 <log_assert_failed_unreachable_realm@plt>:
  401630:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401634:	ldr	x17, [x16, #3864]
  401638:	add	x16, x16, #0xf18
  40163c:	br	x17

0000000000401640 <puts@plt>:
  401640:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401644:	ldr	x17, [x16, #3872]
  401648:	add	x16, x16, #0xf20
  40164c:	br	x17

0000000000401650 <strjoin_real@plt>:
  401650:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401654:	ldr	x17, [x16, #3880]
  401658:	add	x16, x16, #0xf28
  40165c:	br	x17

0000000000401660 <__errno_location@plt>:
  401660:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401664:	ldr	x17, [x16, #3888]
  401668:	add	x16, x16, #0xf30
  40166c:	br	x17

0000000000401670 <safe_close@plt>:
  401670:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401674:	ldr	x17, [x16, #3896]
  401678:	add	x16, x16, #0xf38
  40167c:	br	x17

0000000000401680 <open64@plt>:
  401680:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401684:	ldr	x17, [x16, #3904]
  401688:	add	x16, x16, #0xf40
  40168c:	br	x17

0000000000401690 <faccessat@plt>:
  401690:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401694:	ldr	x17, [x16, #3912]
  401698:	add	x16, x16, #0xf48
  40169c:	br	x17

00000000004016a0 <strcmp@plt>:
  4016a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016a4:	ldr	x17, [x16, #3920]
  4016a8:	add	x16, x16, #0xf50
  4016ac:	br	x17

00000000004016b0 <rename_noreplace@plt>:
  4016b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016b4:	ldr	x17, [x16, #3928]
  4016b8:	add	x16, x16, #0xf58
  4016bc:	br	x17

00000000004016c0 <dirname_malloc@plt>:
  4016c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016c4:	ldr	x17, [x16, #3936]
  4016c8:	add	x16, x16, #0xf60
  4016cc:	br	x17

00000000004016d0 <fsync_path_at@plt>:
  4016d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016d4:	ldr	x17, [x16, #3944]
  4016d8:	add	x16, x16, #0xf68
  4016dc:	br	x17

00000000004016e0 <syncfs@plt>:
  4016e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016e4:	ldr	x17, [x16, #3952]
  4016e8:	add	x16, x16, #0xf70
  4016ec:	br	x17

00000000004016f0 <efi_get_variable_string@plt>:
  4016f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4016f4:	ldr	x17, [x16, #3960]
  4016f8:	add	x16, x16, #0xf78
  4016fc:	br	x17

0000000000401700 <efi_tilt_backslashes@plt>:
  401700:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401704:	ldr	x17, [x16, #3968]
  401708:	add	x16, x16, #0xf80
  40170c:	br	x17

0000000000401710 <path_is_normalized@plt>:
  401710:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401714:	ldr	x17, [x16, #3976]
  401718:	add	x16, x16, #0xf88
  40171c:	br	x17

0000000000401720 <path_is_absolute@plt>:
  401720:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401724:	ldr	x17, [x16, #3984]
  401728:	add	x16, x16, #0xf90
  40172c:	br	x17

0000000000401730 <last_path_component@plt>:
  401730:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401734:	ldr	x17, [x16, #3992]
  401738:	add	x16, x16, #0xf98
  40173c:	br	x17

0000000000401740 <strrchr@plt>:
  401740:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401744:	ldr	x17, [x16, #4000]
  401748:	add	x16, x16, #0xfa0
  40174c:	br	x17

0000000000401750 <strndup@plt>:
  401750:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401754:	ldr	x17, [x16, #4008]
  401758:	add	x16, x16, #0xfa8
  40175c:	br	x17

0000000000401760 <strdup@plt>:
  401760:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401764:	ldr	x17, [x16, #4016]
  401768:	add	x16, x16, #0xfb0
  40176c:	br	x17

0000000000401770 <find_esp_and_warn@plt>:
  401770:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401774:	ldr	x17, [x16, #4024]
  401778:	add	x16, x16, #0xfb8
  40177c:	br	x17

0000000000401780 <find_xbootldr_and_warn@plt>:
  401780:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401784:	ldr	x17, [x16, #4032]
  401788:	add	x16, x16, #0xfc0
  40178c:	br	x17

0000000000401790 <strv_new_internal@plt>:
  401790:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  401794:	ldr	x17, [x16, #4040]
  401798:	add	x16, x16, #0xfc8
  40179c:	br	x17

00000000004017a0 <strv_join_prefix@plt>:
  4017a0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017a4:	ldr	x17, [x16, #4048]
  4017a8:	add	x16, x16, #0xfd0
  4017ac:	br	x17

00000000004017b0 <asprintf@plt>:
  4017b0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017b4:	ldr	x17, [x16, #4056]
  4017b8:	add	x16, x16, #0xfd8
  4017bc:	br	x17

00000000004017c0 <strspn@plt>:
  4017c0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017c4:	ldr	x17, [x16, #4064]
  4017c8:	add	x16, x16, #0xfe0
  4017cc:	br	x17

00000000004017d0 <strnlen@plt>:
  4017d0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017d4:	ldr	x17, [x16, #4072]
  4017d8:	add	x16, x16, #0xfe8
  4017dc:	br	x17

00000000004017e0 <memcpy@plt>:
  4017e0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017e4:	ldr	x17, [x16, #4080]
  4017e8:	add	x16, x16, #0xff0
  4017ec:	br	x17

00000000004017f0 <safe_atollu@plt>:
  4017f0:	adrp	x16, 41f000 <__FRAME_END__+0x1b0d8>
  4017f4:	ldr	x17, [x16, #4088]
  4017f8:	add	x16, x16, #0xff8
  4017fc:	br	x17

Disassembly of section .text:

0000000000401800 <_start>:
  401800:	mov	x29, #0x0                   	// #0
  401804:	mov	x30, #0x0                   	// #0
  401808:	mov	x5, x0
  40180c:	ldr	x1, [sp]
  401810:	add	x2, sp, #0x8
  401814:	mov	x6, sp
  401818:	movz	x0, #0x0, lsl #48
  40181c:	movk	x0, #0x0, lsl #32
  401820:	movk	x0, #0x40, lsl #16
  401824:	movk	x0, #0x191c
  401828:	movz	x3, #0x0, lsl #48
  40182c:	movk	x3, #0x0, lsl #32
  401830:	movk	x3, #0x40, lsl #16
  401834:	movk	x3, #0x31f8
  401838:	movz	x4, #0x0, lsl #48
  40183c:	movk	x4, #0x0, lsl #32
  401840:	movk	x4, #0x40, lsl #16
  401844:	movk	x4, #0x3278
  401848:	bl	4014b0 <__libc_start_main@plt>
  40184c:	bl	4014c0 <abort@plt>

0000000000401850 <call_weak_fn>:
  401850:	adrp	x0, 41f000 <__FRAME_END__+0x1b0d8>
  401854:	ldr	x0, [x0, #3624]
  401858:	cbz	x0, 401860 <call_weak_fn+0x10>
  40185c:	b	4014d0 <__gmon_start__@plt>
  401860:	ret
  401864:	udf	#0

0000000000401868 <deregister_tm_clones>:
  401868:	adrp	x0, 420000 <completed.8445>
  40186c:	add	x0, x0, #0x0
  401870:	adrp	x1, 420000 <completed.8445>
  401874:	add	x1, x1, #0x0
  401878:	cmp	x1, x0
  40187c:	b.eq	401894 <deregister_tm_clones+0x2c>  // b.none
  401880:	adrp	x1, 403000 <parse_counter+0x138>
  401884:	ldr	x1, [x1, #656]
  401888:	cbz	x1, 401894 <deregister_tm_clones+0x2c>
  40188c:	mov	x16, x1
  401890:	br	x16
  401894:	ret

0000000000401898 <register_tm_clones>:
  401898:	adrp	x0, 420000 <completed.8445>
  40189c:	add	x0, x0, #0x0
  4018a0:	adrp	x1, 420000 <completed.8445>
  4018a4:	add	x1, x1, #0x0
  4018a8:	sub	x1, x1, x0
  4018ac:	lsr	x2, x1, #63
  4018b0:	add	x1, x2, x1, asr #3
  4018b4:	cmp	xzr, x1, asr #1
  4018b8:	asr	x1, x1, #1
  4018bc:	b.eq	4018d4 <register_tm_clones+0x3c>  // b.none
  4018c0:	adrp	x2, 403000 <parse_counter+0x138>
  4018c4:	ldr	x2, [x2, #664]
  4018c8:	cbz	x2, 4018d4 <register_tm_clones+0x3c>
  4018cc:	mov	x16, x2
  4018d0:	br	x16
  4018d4:	ret

00000000004018d8 <__do_global_dtors_aux>:
  4018d8:	stp	x29, x30, [sp, #-32]!
  4018dc:	mov	x29, sp
  4018e0:	str	x19, [sp, #16]
  4018e4:	adrp	x19, 420000 <completed.8445>
  4018e8:	ldrb	w0, [x19]
  4018ec:	cbnz	w0, 4018fc <__do_global_dtors_aux+0x24>
  4018f0:	bl	401868 <deregister_tm_clones>
  4018f4:	mov	w0, #0x1                   	// #1
  4018f8:	strb	w0, [x19]
  4018fc:	ldr	x19, [sp, #16]
  401900:	ldp	x29, x30, [sp], #32
  401904:	ret

0000000000401908 <frame_dummy>:
  401908:	b	401898 <register_tm_clones>

000000000040190c <__unique_prefix_static_destructor_wrapper0>:
  40190c:	ldr	x0, [x0]
  401910:	cbz	x0, 401918 <__unique_prefix_static_destructor_wrapper0+0xc>
  401914:	b	4014e0 <strv_free@plt>
  401918:	ret

000000000040191c <main>:
  40191c:	sub	sp, sp, #0x50
  401920:	adrp	x8, 420000 <completed.8445>
  401924:	stp	x20, x19, [sp, #64]
  401928:	mov	w20, w0
  40192c:	adrp	x9, 420000 <completed.8445>
  401930:	str	w0, [x8, #16]
  401934:	mov	w0, wzr
  401938:	stp	x29, x30, [sp, #16]
  40193c:	stp	x24, x23, [sp, #32]
  401940:	stp	x22, x21, [sp, #48]
  401944:	add	x29, sp, #0x10
  401948:	mov	x19, x1
  40194c:	str	x1, [x9, #24]
  401950:	bl	4014f0 <log_parse_environment_realm@plt>
  401954:	bl	401500 <log_open@plt>
  401958:	tbnz	w20, #31, 401bc8 <main+0x2ac>
  40195c:	cbz	x19, 401bec <main+0x2d0>
  401960:	adrp	x21, 403000 <parse_counter+0x138>
  401964:	adrp	x22, 403000 <parse_counter+0x138>
  401968:	adrp	x23, 420000 <completed.8445>
  40196c:	add	x21, x21, #0xe1e
  401970:	add	x22, x22, #0x360
  401974:	adrp	x24, 420000 <completed.8445>
  401978:	add	x23, x23, #0x8
  40197c:	mov	w0, w20
  401980:	mov	x1, x19
  401984:	mov	x2, x21
  401988:	mov	x3, x22
  40198c:	mov	x4, xzr
  401990:	bl	401510 <getopt_long@plt>
  401994:	tbnz	w0, #31, 401a7c <main+0x160>
  401998:	cmp	w0, #0xff
  40199c:	b.le	4019d8 <main+0xbc>
  4019a0:	cmp	w0, #0x100
  4019a4:	b.ne	401a64 <main+0x148>  // b.any
  4019a8:	ldr	x1, [x24, #32]
  4019ac:	mov	x0, x23
  4019b0:	bl	401520 <strv_extend@plt>
  4019b4:	tbz	w0, #31, 40197c <main+0x60>
  4019b8:	adrp	x1, 403000 <parse_counter+0x138>
  4019bc:	adrp	x3, 403000 <parse_counter+0x138>
  4019c0:	add	x1, x1, #0x406
  4019c4:	add	x3, x3, #0xe20
  4019c8:	mov	w2, #0x55                  	// #85
  4019cc:	mov	w0, wzr
  4019d0:	bl	401530 <log_oom_internal@plt>
  4019d4:	b	401a70 <main+0x154>
  4019d8:	cmp	w0, #0x3f
  4019dc:	b.ne	4019e8 <main+0xcc>  // b.any
  4019e0:	mov	w21, #0xffffffea            	// #-22
  4019e4:	b	401b5c <main+0x240>
  4019e8:	cmp	w0, #0x68
  4019ec:	b.ne	401c10 <main+0x2f4>  // b.any
  4019f0:	adrp	x0, 403000 <parse_counter+0x138>
  4019f4:	adrp	x1, 403000 <parse_counter+0x138>
  4019f8:	add	x0, x0, #0x480
  4019fc:	add	x1, x1, #0x49b
  401a00:	add	x2, sp, #0x8
  401a04:	str	xzr, [sp, #8]
  401a08:	bl	401540 <terminal_urlify_man@plt>
  401a0c:	tbnz	w0, #31, 401ac4 <main+0x1a8>
  401a10:	adrp	x8, 420000 <completed.8445>
  401a14:	ldr	x19, [x8, #40]
  401a18:	bl	401550 <colors_enabled@plt>
  401a1c:	adrp	x21, 403000 <parse_counter+0x138>
  401a20:	adrp	x8, 403000 <parse_counter+0x138>
  401a24:	add	x21, x21, #0x63a
  401a28:	add	x8, x8, #0x630
  401a2c:	tst	w0, #0x1
  401a30:	csel	x20, x8, x21, ne  // ne = any
  401a34:	bl	401550 <colors_enabled@plt>
  401a38:	ldr	x4, [sp, #8]
  401a3c:	adrp	x8, 403000 <parse_counter+0x138>
  401a40:	add	x8, x8, #0x63b
  401a44:	tst	w0, #0x1
  401a48:	adrp	x0, 403000 <parse_counter+0x138>
  401a4c:	csel	x3, x8, x21, ne  // ne = any
  401a50:	add	x0, x0, #0x49d
  401a54:	mov	x1, x19
  401a58:	mov	x2, x20
  401a5c:	bl	401560 <printf@plt>
  401a60:	b	401ae0 <main+0x1c4>
  401a64:	cmp	w0, #0x101
  401a68:	b.ne	401c10 <main+0x2f4>  // b.any
  401a6c:	bl	401570 <version@plt>
  401a70:	mov	w21, w0
  401a74:	cmp	w0, #0x1
  401a78:	b.lt	401b5c <main+0x240>  // b.tstop
  401a7c:	bl	401580 <detect_container@plt>
  401a80:	cmp	w0, #0x1
  401a84:	b.lt	401af0 <main+0x1d4>  // b.tstop
  401a88:	mov	w0, wzr
  401a8c:	bl	401590 <log_get_max_level_realm@plt>
  401a90:	cmp	w0, #0x3
  401a94:	b.lt	401b58 <main+0x23c>  // b.tstop
  401a98:	adrp	x2, 403000 <parse_counter+0x138>
  401a9c:	adrp	x4, 403000 <parse_counter+0x138>
  401aa0:	adrp	x5, 403000 <parse_counter+0x138>
  401aa4:	mov	w1, #0x5f                  	// #95
  401aa8:	add	x2, x2, #0x406
  401aac:	add	x4, x4, #0x41c
  401ab0:	add	x5, x5, #0x420
  401ab4:	mov	w0, #0x3                   	// #3
  401ab8:	movk	w1, #0x4000, lsl #16
  401abc:	mov	w3, #0x204                 	// #516
  401ac0:	b	401b4c <main+0x230>
  401ac4:	adrp	x1, 403000 <parse_counter+0x138>
  401ac8:	adrp	x3, 403000 <parse_counter+0x138>
  401acc:	add	x1, x1, #0x406
  401ad0:	add	x3, x3, #0x3e0
  401ad4:	mov	w2, #0x20                  	// #32
  401ad8:	mov	w0, wzr
  401adc:	bl	401530 <log_oom_internal@plt>
  401ae0:	ldr	x0, [sp, #8]
  401ae4:	bl	4015a0 <free@plt>
  401ae8:	mov	w21, wzr
  401aec:	b	401b5c <main+0x240>
  401af0:	bl	4015b0 <is_efi_boot@plt>
  401af4:	tbz	w0, #0, 401b14 <main+0x1f8>
  401af8:	adrp	x2, 403000 <parse_counter+0x138>
  401afc:	add	x2, x2, #0x2a0
  401b00:	mov	w0, w20
  401b04:	mov	x1, x19
  401b08:	mov	x3, xzr
  401b0c:	bl	4015c0 <dispatch_verb@plt>
  401b10:	b	401b50 <main+0x234>
  401b14:	mov	w0, wzr
  401b18:	bl	401590 <log_get_max_level_realm@plt>
  401b1c:	cmp	w0, #0x3
  401b20:	b.lt	401b58 <main+0x23c>  // b.tstop
  401b24:	adrp	x2, 403000 <parse_counter+0x138>
  401b28:	adrp	x4, 403000 <parse_counter+0x138>
  401b2c:	adrp	x5, 403000 <parse_counter+0x138>
  401b30:	mov	w1, #0x5f                  	// #95
  401b34:	add	x2, x2, #0x406
  401b38:	add	x4, x4, #0x41c
  401b3c:	add	x5, x5, #0x44f
  401b40:	mov	w0, #0x3                   	// #3
  401b44:	movk	w1, #0x4000, lsl #16
  401b48:	mov	w3, #0x208                 	// #520
  401b4c:	bl	4015d0 <log_internal_realm@plt>
  401b50:	mov	w21, w0
  401b54:	b	401b5c <main+0x240>
  401b58:	mov	w21, #0xffffffa1            	// #-95
  401b5c:	bl	4015e0 <ask_password_agent_close@plt>
  401b60:	bl	4015f0 <polkit_agent_close@plt>
  401b64:	bl	401600 <pager_close@plt>
  401b68:	bl	401610 <mac_selinux_finish@plt>
  401b6c:	adrp	x8, 41f000 <__FRAME_END__+0x1b0d8>
  401b70:	ldr	x8, [x8, #3632]
  401b74:	adrp	x19, 41f000 <__FRAME_END__+0x1b0d8>
  401b78:	ldr	x19, [x19, #3640]
  401b7c:	add	x9, x8, #0x7
  401b80:	and	x20, x9, #0xfffffffffffffff8
  401b84:	cmp	x20, x19
  401b88:	cset	w9, cs  // cs = hs, nlast
  401b8c:	cmp	x8, #0x0
  401b90:	cset	w8, eq  // eq = none
  401b94:	orr	w8, w8, w9
  401b98:	tbnz	w8, #0, 401bac <main+0x290>
  401b9c:	ldp	x0, x8, [x20], #16
  401ba0:	blr	x8
  401ba4:	cmp	x20, x19
  401ba8:	b.cc	401b9c <main+0x280>  // b.lo, b.ul, b.last
  401bac:	lsr	w0, w21, #31
  401bb0:	ldp	x20, x19, [sp, #64]
  401bb4:	ldp	x22, x21, [sp, #48]
  401bb8:	ldp	x24, x23, [sp, #32]
  401bbc:	ldp	x29, x30, [sp, #16]
  401bc0:	add	sp, sp, #0x50
  401bc4:	ret
  401bc8:	adrp	x1, 403000 <parse_counter+0x138>
  401bcc:	adrp	x2, 403000 <parse_counter+0x138>
  401bd0:	adrp	x4, 403000 <parse_counter+0x138>
  401bd4:	add	x1, x1, #0xdf2
  401bd8:	add	x2, x2, #0x406
  401bdc:	add	x4, x4, #0xdfc
  401be0:	mov	w3, #0x45                  	// #69
  401be4:	mov	w0, wzr
  401be8:	bl	401620 <log_assert_failed_realm@plt>
  401bec:	adrp	x1, 403000 <parse_counter+0x138>
  401bf0:	adrp	x2, 403000 <parse_counter+0x138>
  401bf4:	adrp	x4, 403000 <parse_counter+0x138>
  401bf8:	add	x1, x1, #0xe19
  401bfc:	add	x2, x2, #0x406
  401c00:	add	x4, x4, #0xdfc
  401c04:	mov	w3, #0x46                  	// #70
  401c08:	mov	w0, wzr
  401c0c:	bl	401620 <log_assert_failed_realm@plt>
  401c10:	adrp	x1, 403000 <parse_counter+0x138>
  401c14:	adrp	x2, 403000 <parse_counter+0x138>
  401c18:	adrp	x4, 403000 <parse_counter+0x138>
  401c1c:	add	x1, x1, #0xe2b
  401c20:	add	x2, x2, #0x406
  401c24:	add	x4, x4, #0xdfc
  401c28:	mov	w3, #0x5c                  	// #92
  401c2c:	mov	w0, wzr
  401c30:	bl	401630 <log_assert_failed_unreachable_realm@plt>

0000000000401c34 <help>:
  401c34:	stp	x29, x30, [sp, #-48]!
  401c38:	mov	x29, sp
  401c3c:	adrp	x0, 403000 <parse_counter+0x138>
  401c40:	adrp	x1, 403000 <parse_counter+0x138>
  401c44:	add	x0, x0, #0x480
  401c48:	add	x1, x1, #0x49b
  401c4c:	add	x2, x29, #0x18
  401c50:	str	x21, [sp, #16]
  401c54:	stp	x20, x19, [sp, #32]
  401c58:	str	xzr, [x29, #24]
  401c5c:	bl	401540 <terminal_urlify_man@plt>
  401c60:	tbnz	w0, #31, 401cbc <help+0x88>
  401c64:	adrp	x8, 420000 <completed.8445>
  401c68:	ldr	x19, [x8, #40]
  401c6c:	bl	401550 <colors_enabled@plt>
  401c70:	adrp	x21, 403000 <parse_counter+0x138>
  401c74:	adrp	x8, 403000 <parse_counter+0x138>
  401c78:	add	x21, x21, #0x63a
  401c7c:	add	x8, x8, #0x630
  401c80:	tst	w0, #0x1
  401c84:	csel	x20, x8, x21, ne  // ne = any
  401c88:	bl	401550 <colors_enabled@plt>
  401c8c:	ldr	x4, [x29, #24]
  401c90:	adrp	x8, 403000 <parse_counter+0x138>
  401c94:	add	x8, x8, #0x63b
  401c98:	tst	w0, #0x1
  401c9c:	adrp	x0, 403000 <parse_counter+0x138>
  401ca0:	csel	x3, x8, x21, ne  // ne = any
  401ca4:	add	x0, x0, #0x49d
  401ca8:	mov	x1, x19
  401cac:	mov	x2, x20
  401cb0:	bl	401560 <printf@plt>
  401cb4:	mov	w19, wzr
  401cb8:	b	401cdc <help+0xa8>
  401cbc:	adrp	x1, 403000 <parse_counter+0x138>
  401cc0:	adrp	x3, 403000 <parse_counter+0x138>
  401cc4:	add	x1, x1, #0x406
  401cc8:	add	x3, x3, #0x3e0
  401ccc:	mov	w2, #0x20                  	// #32
  401cd0:	mov	w0, wzr
  401cd4:	bl	401530 <log_oom_internal@plt>
  401cd8:	mov	w19, w0
  401cdc:	ldr	x0, [x29, #24]
  401ce0:	bl	4015a0 <free@plt>
  401ce4:	mov	w0, w19
  401ce8:	ldp	x20, x19, [sp, #32]
  401cec:	ldr	x21, [sp, #16]
  401cf0:	ldp	x29, x30, [sp], #48
  401cf4:	ret

0000000000401cf8 <verb_status>:
  401cf8:	sub	sp, sp, #0x80
  401cfc:	stp	x29, x30, [sp, #64]
  401d00:	add	x29, sp, #0x40
  401d04:	sub	x0, x29, #0x8
  401d08:	sub	x1, x29, #0x10
  401d0c:	add	x2, sp, #0x18
  401d10:	add	x3, sp, #0x10
  401d14:	sub	x4, x29, #0x18
  401d18:	stp	x24, x23, [sp, #80]
  401d1c:	stp	x22, x21, [sp, #96]
  401d20:	stp	x20, x19, [sp, #112]
  401d24:	stp	xzr, xzr, [x29, #-16]
  401d28:	stur	xzr, [x29, #-24]
  401d2c:	str	xzr, [sp, #32]
  401d30:	bl	402918 <acquire_boot_count_path>
  401d34:	cmn	w0, #0x31
  401d38:	b.ne	401d54 <verb_status+0x5c>  // b.any
  401d3c:	adrp	x0, 403000 <parse_counter+0x138>
  401d40:	add	x0, x0, #0x640
  401d44:	bl	401640 <puts@plt>
  401d48:	mov	x19, xzr
  401d4c:	mov	w21, wzr
  401d50:	b	402000 <verb_status+0x308>
  401d54:	mov	w21, w0
  401d58:	tbnz	w0, #31, 401dc8 <verb_status+0xd0>
  401d5c:	bl	402be8 <acquire_path>
  401d60:	tbnz	w0, #31, 401dd0 <verb_status+0xd8>
  401d64:	ldur	x0, [x29, #-16]
  401d68:	cbz	x0, 4021a8 <verb_status+0x4b0>
  401d6c:	ldur	x1, [x29, #-24]
  401d70:	cbz	x1, 4021c8 <verb_status+0x4d0>
  401d74:	mov	x2, xzr
  401d78:	bl	401650 <strjoin_real@plt>
  401d7c:	mov	x19, x0
  401d80:	cbz	x0, 401ddc <verb_status+0xe4>
  401d84:	ldp	x2, x0, [x29, #-24]
  401d88:	ldr	x1, [sp, #16]
  401d8c:	add	x3, sp, #0x20
  401d90:	bl	402dbc <make_bad>
  401d94:	tbnz	w0, #31, 401df8 <verb_status+0x100>
  401d98:	mov	w0, wzr
  401d9c:	bl	401590 <log_get_max_level_realm@plt>
  401da0:	cmp	w0, #0x7
  401da4:	b.ge	401e18 <verb_status+0x120>  // b.tcont
  401da8:	mov	w0, wzr
  401dac:	bl	401590 <log_get_max_level_realm@plt>
  401db0:	cmp	w0, #0x7
  401db4:	b.ge	401e60 <verb_status+0x168>  // b.tcont
  401db8:	adrp	x8, 420000 <completed.8445>
  401dbc:	ldr	x8, [x8, #8]
  401dc0:	cbnz	x8, 401e98 <verb_status+0x1a0>
  401dc4:	b	401fc0 <verb_status+0x2c8>
  401dc8:	mov	x19, xzr
  401dcc:	b	402000 <verb_status+0x308>
  401dd0:	mov	w21, w0
  401dd4:	mov	x19, xzr
  401dd8:	b	402000 <verb_status+0x308>
  401ddc:	adrp	x1, 403000 <parse_counter+0x138>
  401de0:	adrp	x3, 403000 <parse_counter+0x138>
  401de4:	add	x1, x1, #0x406
  401de8:	add	x3, x3, #0x646
  401dec:	mov	w2, #0x153                 	// #339
  401df0:	bl	401530 <log_oom_internal@plt>
  401df4:	b	401ffc <verb_status+0x304>
  401df8:	adrp	x1, 403000 <parse_counter+0x138>
  401dfc:	adrp	x3, 403000 <parse_counter+0x138>
  401e00:	add	x1, x1, #0x406
  401e04:	add	x3, x3, #0x646
  401e08:	mov	w2, #0x157                 	// #343
  401e0c:	mov	w0, wzr
  401e10:	bl	401530 <log_oom_internal@plt>
  401e14:	b	401ffc <verb_status+0x304>
  401e18:	ldur	x6, [x29, #-8]
  401e1c:	ldr	x8, [sp, #32]
  401e20:	adrp	x2, 403000 <parse_counter+0x138>
  401e24:	adrp	x4, 403000 <parse_counter+0x138>
  401e28:	adrp	x5, 403000 <parse_counter+0x138>
  401e2c:	add	x2, x2, #0x406
  401e30:	add	x4, x4, #0x646
  401e34:	add	x5, x5, #0x652
  401e38:	mov	w0, #0x7                   	// #7
  401e3c:	mov	w3, #0x15e                 	// #350
  401e40:	mov	w1, wzr
  401e44:	mov	x7, x19
  401e48:	str	x8, [sp]
  401e4c:	bl	4015d0 <log_internal_realm@plt>
  401e50:	mov	w0, wzr
  401e54:	bl	401590 <log_get_max_level_realm@plt>
  401e58:	cmp	w0, #0x7
  401e5c:	b.lt	401db8 <verb_status+0xc0>  // b.tstop
  401e60:	ldp	x7, x6, [sp, #16]
  401e64:	adrp	x2, 403000 <parse_counter+0x138>
  401e68:	adrp	x4, 403000 <parse_counter+0x138>
  401e6c:	adrp	x5, 403000 <parse_counter+0x138>
  401e70:	add	x2, x2, #0x406
  401e74:	add	x4, x4, #0x646
  401e78:	add	x5, x5, #0x6a5
  401e7c:	mov	w0, #0x7                   	// #7
  401e80:	mov	w3, #0x162                 	// #354
  401e84:	mov	w1, wzr
  401e88:	bl	4015d0 <log_internal_realm@plt>
  401e8c:	adrp	x8, 420000 <completed.8445>
  401e90:	ldr	x8, [x8, #8]
  401e94:	cbz	x8, 401fc0 <verb_status+0x2c8>
  401e98:	ldr	x0, [x8]
  401e9c:	cbz	x0, 401fc0 <verb_status+0x2c8>
  401ea0:	add	x21, x19, #0x1
  401ea4:	add	x24, x8, #0x8
  401ea8:	b	401ecc <verb_status+0x1d4>
  401eac:	bl	401660 <__errno_location@plt>
  401eb0:	ldr	w22, [x0]
  401eb4:	cmp	w22, #0x2
  401eb8:	b.ne	402100 <verb_status+0x408>  // b.any
  401ebc:	mov	w0, w20
  401ec0:	bl	401670 <safe_close@plt>
  401ec4:	ldr	x0, [x24], #8
  401ec8:	cbz	x0, 401fc0 <verb_status+0x2c8>
  401ecc:	mov	w1, #0x4000                	// #16384
  401ed0:	movk	w1, #0x8, lsl #16
  401ed4:	bl	401680 <open64@plt>
  401ed8:	mov	w20, w0
  401edc:	tbnz	w0, #31, 401eac <verb_status+0x1b4>
  401ee0:	ldur	x8, [x29, #-8]
  401ee4:	cbz	x8, 402184 <verb_status+0x48c>
  401ee8:	ldrb	w9, [x8]
  401eec:	cmp	w9, #0x2f
  401ef0:	b.ne	402160 <verb_status+0x468>  // b.any
  401ef4:	add	x1, x8, #0x1
  401ef8:	mov	w0, w20
  401efc:	mov	w2, wzr
  401f00:	mov	w3, wzr
  401f04:	bl	401690 <faccessat@plt>
  401f08:	tbz	w0, #31, 40204c <verb_status+0x354>
  401f0c:	bl	401660 <__errno_location@plt>
  401f10:	ldr	w23, [x0]
  401f14:	cmp	w23, #0x2
  401f18:	b.ne	402058 <verb_status+0x360>  // b.any
  401f1c:	ldrb	w8, [x19]
  401f20:	cmp	w8, #0x2f
  401f24:	b.ne	402160 <verb_status+0x468>  // b.any
  401f28:	mov	x22, x0
  401f2c:	mov	w0, w20
  401f30:	mov	x1, x21
  401f34:	mov	w2, wzr
  401f38:	mov	w3, wzr
  401f3c:	bl	401690 <faccessat@plt>
  401f40:	tbz	w0, #31, 402094 <verb_status+0x39c>
  401f44:	ldr	w23, [x22]
  401f48:	cmp	w23, #0x2
  401f4c:	b.ne	4020a0 <verb_status+0x3a8>  // b.any
  401f50:	ldr	x8, [sp, #32]
  401f54:	cbz	x8, 402184 <verb_status+0x48c>
  401f58:	ldrb	w9, [x8]
  401f5c:	cmp	w9, #0x2f
  401f60:	b.ne	402160 <verb_status+0x468>  // b.any
  401f64:	add	x1, x8, #0x1
  401f68:	mov	w0, w20
  401f6c:	mov	w2, wzr
  401f70:	mov	w3, wzr
  401f74:	bl	401690 <faccessat@plt>
  401f78:	tbz	w0, #31, 4020ec <verb_status+0x3f4>
  401f7c:	ldr	w22, [x22]
  401f80:	cmp	w22, #0x2
  401f84:	b.eq	401ebc <verb_status+0x1c4>  // b.none
  401f88:	mov	w0, wzr
  401f8c:	bl	401590 <log_get_max_level_realm@plt>
  401f90:	cmp	w0, #0x3
  401f94:	b.lt	402144 <verb_status+0x44c>  // b.tstop
  401f98:	ldr	x6, [sp, #32]
  401f9c:	adrp	x2, 403000 <parse_counter+0x138>
  401fa0:	adrp	x4, 403000 <parse_counter+0x138>
  401fa4:	adrp	x5, 403000 <parse_counter+0x138>
  401fa8:	add	x2, x2, #0x406
  401fac:	add	x4, x4, #0x646
  401fb0:	add	x5, x5, #0x6ee
  401fb4:	mov	w0, #0x3                   	// #3
  401fb8:	mov	w3, #0x183                 	// #387
  401fbc:	b	402134 <verb_status+0x43c>
  401fc0:	mov	w0, wzr
  401fc4:	bl	401590 <log_get_max_level_realm@plt>
  401fc8:	cmp	w0, #0x3
  401fcc:	b.lt	402044 <verb_status+0x34c>  // b.tstop
  401fd0:	adrp	x2, 403000 <parse_counter+0x138>
  401fd4:	adrp	x4, 403000 <parse_counter+0x138>
  401fd8:	adrp	x5, 403000 <parse_counter+0x138>
  401fdc:	mov	w1, #0x10                  	// #16
  401fe0:	add	x2, x2, #0x406
  401fe4:	add	x4, x4, #0x646
  401fe8:	add	x5, x5, #0x711
  401fec:	mov	w0, #0x3                   	// #3
  401ff0:	movk	w1, #0x4000, lsl #16
  401ff4:	mov	w3, #0x188                 	// #392
  401ff8:	bl	4015d0 <log_internal_realm@plt>
  401ffc:	mov	w21, w0
  402000:	ldr	x0, [sp, #32]
  402004:	bl	4015a0 <free@plt>
  402008:	mov	x0, x19
  40200c:	bl	4015a0 <free@plt>
  402010:	ldur	x0, [x29, #-24]
  402014:	bl	4015a0 <free@plt>
  402018:	ldur	x0, [x29, #-16]
  40201c:	bl	4015a0 <free@plt>
  402020:	ldur	x0, [x29, #-8]
  402024:	bl	4015a0 <free@plt>
  402028:	mov	w0, w21
  40202c:	ldp	x20, x19, [sp, #112]
  402030:	ldp	x22, x21, [sp, #96]
  402034:	ldp	x24, x23, [sp, #80]
  402038:	ldp	x29, x30, [sp, #64]
  40203c:	add	sp, sp, #0x80
  402040:	ret
  402044:	mov	w21, #0xfffffff0            	// #-16
  402048:	b	402000 <verb_status+0x308>
  40204c:	adrp	x0, 403000 <parse_counter+0x138>
  402050:	add	x0, x0, #0x3f5
  402054:	b	4020f4 <verb_status+0x3fc>
  402058:	mov	w0, wzr
  40205c:	bl	401590 <log_get_max_level_realm@plt>
  402060:	cmp	w0, #0x3
  402064:	b.lt	4020dc <verb_status+0x3e4>  // b.tstop
  402068:	ldur	x6, [x29, #-8]
  40206c:	adrp	x2, 403000 <parse_counter+0x138>
  402070:	adrp	x4, 403000 <parse_counter+0x138>
  402074:	adrp	x5, 403000 <parse_counter+0x138>
  402078:	add	x2, x2, #0x406
  40207c:	add	x4, x4, #0x646
  402080:	add	x5, x5, #0x6ee
  402084:	mov	w0, #0x3                   	// #3
  402088:	mov	w3, #0x174                 	// #372
  40208c:	mov	w1, w23
  402090:	b	402138 <verb_status+0x440>
  402094:	adrp	x0, 403000 <parse_counter+0x138>
  402098:	add	x0, x0, #0x3ec
  40209c:	b	4020f4 <verb_status+0x3fc>
  4020a0:	mov	w0, wzr
  4020a4:	bl	401590 <log_get_max_level_realm@plt>
  4020a8:	cmp	w0, #0x3
  4020ac:	b.lt	4020dc <verb_status+0x3e4>  // b.tstop
  4020b0:	adrp	x2, 403000 <parse_counter+0x138>
  4020b4:	adrp	x4, 403000 <parse_counter+0x138>
  4020b8:	adrp	x5, 403000 <parse_counter+0x138>
  4020bc:	add	x2, x2, #0x406
  4020c0:	add	x4, x4, #0x646
  4020c4:	add	x5, x5, #0x6ee
  4020c8:	mov	w0, #0x3                   	// #3
  4020cc:	mov	w3, #0x17c                 	// #380
  4020d0:	mov	w1, w23
  4020d4:	mov	x6, x19
  4020d8:	b	402138 <verb_status+0x440>
  4020dc:	cmp	w23, #0x0
  4020e0:	mov	w8, wzr
  4020e4:	cneg	w9, w23, mi  // mi = first
  4020e8:	b	402150 <verb_status+0x458>
  4020ec:	adrp	x0, 403000 <parse_counter+0x138>
  4020f0:	add	x0, x0, #0x3f1
  4020f4:	bl	401640 <puts@plt>
  4020f8:	mov	w21, wzr
  4020fc:	b	402154 <verb_status+0x45c>
  402100:	mov	w0, wzr
  402104:	bl	401590 <log_get_max_level_realm@plt>
  402108:	cmp	w0, #0x3
  40210c:	b.lt	402144 <verb_status+0x44c>  // b.tstop
  402110:	ldur	x6, [x24, #-8]
  402114:	adrp	x2, 403000 <parse_counter+0x138>
  402118:	adrp	x4, 403000 <parse_counter+0x138>
  40211c:	adrp	x5, 403000 <parse_counter+0x138>
  402120:	add	x2, x2, #0x406
  402124:	add	x4, x4, #0x646
  402128:	add	x5, x5, #0x6c6
  40212c:	mov	w0, #0x3                   	// #3
  402130:	mov	w3, #0x16c                 	// #364
  402134:	mov	w1, w22
  402138:	bl	4015d0 <log_internal_realm@plt>
  40213c:	mov	w21, w0
  402140:	b	402154 <verb_status+0x45c>
  402144:	cmp	w22, #0x0
  402148:	mov	w8, wzr
  40214c:	cneg	w9, w22, mi  // mi = first
  402150:	sub	w21, w8, w9, uxtb
  402154:	mov	w0, w20
  402158:	bl	401670 <safe_close@plt>
  40215c:	b	402000 <verb_status+0x308>
  402160:	adrp	x1, 403000 <parse_counter+0x138>
  402164:	adrp	x2, 403000 <parse_counter+0x138>
  402168:	adrp	x4, 403000 <parse_counter+0x138>
  40216c:	add	x1, x1, #0xbed
  402170:	add	x2, x2, #0x406
  402174:	add	x4, x4, #0xbc8
  402178:	mov	w3, #0x13a                 	// #314
  40217c:	mov	w0, wzr
  402180:	bl	401620 <log_assert_failed_realm@plt>
  402184:	adrp	x1, 403000 <parse_counter+0x138>
  402188:	adrp	x2, 403000 <parse_counter+0x138>
  40218c:	adrp	x4, 403000 <parse_counter+0x138>
  402190:	add	x1, x1, #0x863
  402194:	add	x2, x2, #0x406
  402198:	add	x4, x4, #0xbc8
  40219c:	mov	w3, #0x139                 	// #313
  4021a0:	mov	w0, wzr
  4021a4:	bl	401620 <log_assert_failed_realm@plt>
  4021a8:	adrp	x1, 403000 <parse_counter+0x138>
  4021ac:	adrp	x2, 403000 <parse_counter+0x138>
  4021b0:	adrp	x4, 403000 <parse_counter+0x138>
  4021b4:	add	x1, x1, #0xb39
  4021b8:	add	x2, x2, #0x406
  4021bc:	add	x4, x4, #0xb40
  4021c0:	mov	w3, #0x111                 	// #273
  4021c4:	bl	401620 <log_assert_failed_realm@plt>
  4021c8:	adrp	x1, 403000 <parse_counter+0x138>
  4021cc:	adrp	x2, 403000 <parse_counter+0x138>
  4021d0:	adrp	x4, 403000 <parse_counter+0x138>
  4021d4:	add	x1, x1, #0xb73
  4021d8:	add	x2, x2, #0x406
  4021dc:	add	x4, x4, #0xb40
  4021e0:	mov	w3, #0x112                 	// #274
  4021e4:	mov	w0, wzr
  4021e8:	bl	401620 <log_assert_failed_realm@plt>

00000000004021ec <verb_set>:
  4021ec:	sub	sp, sp, #0xa0
  4021f0:	stp	x29, x30, [sp, #64]
  4021f4:	add	x29, sp, #0x40
  4021f8:	stp	x24, x23, [sp, #112]
  4021fc:	mov	x23, x1
  402200:	sub	x0, x29, #0x8
  402204:	sub	x1, x29, #0x10
  402208:	add	x3, sp, #0x18
  40220c:	sub	x4, x29, #0x18
  402210:	mov	x2, xzr
  402214:	stp	x28, x27, [sp, #80]
  402218:	stp	x26, x25, [sp, #96]
  40221c:	stp	x22, x21, [sp, #128]
  402220:	stp	x20, x19, [sp, #144]
  402224:	stp	xzr, xzr, [x29, #-16]
  402228:	stur	xzr, [x29, #-24]
  40222c:	str	xzr, [sp, #32]
  402230:	bl	402918 <acquire_boot_count_path>
  402234:	cmn	w0, #0x31
  402238:	b.ne	402278 <verb_set+0x8c>  // b.any
  40223c:	mov	w0, wzr
  402240:	bl	401590 <log_get_max_level_realm@plt>
  402244:	cmp	w0, #0x3
  402248:	b.lt	40232c <verb_set+0x140>  // b.tstop
  40224c:	adrp	x2, 403000 <parse_counter+0x138>
  402250:	adrp	x4, 403000 <parse_counter+0x138>
  402254:	adrp	x5, 403000 <parse_counter+0x138>
  402258:	add	x2, x2, #0x406
  40225c:	add	x4, x4, #0xbfc
  402260:	add	x5, x5, #0xc05
  402264:	mov	w0, #0x3                   	// #3
  402268:	mov	w1, #0xffffffcf            	// #-49
  40226c:	mov	w3, #0x194                 	// #404
  402270:	bl	4015d0 <log_internal_realm@plt>
  402274:	b	40231c <verb_set+0x130>
  402278:	mov	w21, w0
  40227c:	tbnz	w0, #31, 402320 <verb_set+0x134>
  402280:	bl	402be8 <acquire_path>
  402284:	tbnz	w0, #31, 40231c <verb_set+0x130>
  402288:	ldur	x0, [x29, #-16]
  40228c:	cbz	x0, 4028b0 <verb_set+0x6c4>
  402290:	ldur	x1, [x29, #-24]
  402294:	cbz	x1, 4028d0 <verb_set+0x6e4>
  402298:	mov	x2, xzr
  40229c:	bl	401650 <strjoin_real@plt>
  4022a0:	mov	x19, x0
  4022a4:	cbz	x0, 40238c <verb_set+0x1a0>
  4022a8:	ldp	x2, x0, [x29, #-24]
  4022ac:	ldr	x1, [sp, #24]
  4022b0:	add	x3, sp, #0x20
  4022b4:	bl	402dbc <make_bad>
  4022b8:	tbnz	w0, #31, 4023a4 <verb_set+0x1b8>
  4022bc:	ldr	x20, [x23]
  4022c0:	adrp	x1, 403000 <parse_counter+0x138>
  4022c4:	add	x1, x1, #0x3ec
  4022c8:	mov	x0, x20
  4022cc:	bl	4016a0 <strcmp@plt>
  4022d0:	ldur	x21, [x29, #-8]
  4022d4:	ldr	x22, [sp, #32]
  4022d8:	cbz	w0, 4023c8 <verb_set+0x1dc>
  4022dc:	adrp	x1, 403000 <parse_counter+0x138>
  4022e0:	add	x1, x1, #0x3f1
  4022e4:	mov	x0, x20
  4022e8:	bl	4016a0 <strcmp@plt>
  4022ec:	cbz	w0, 4023e4 <verb_set+0x1f8>
  4022f0:	adrp	x1, 403000 <parse_counter+0x138>
  4022f4:	add	x1, x1, #0x3f5
  4022f8:	mov	x0, x20
  4022fc:	bl	4016a0 <strcmp@plt>
  402300:	mov	x24, x22
  402304:	mov	x25, x19
  402308:	cbnz	w0, 4028f4 <verb_set+0x708>
  40230c:	adrp	x8, 420000 <completed.8445>
  402310:	ldr	x8, [x8, #8]
  402314:	cbnz	x8, 4023fc <verb_set+0x210>
  402318:	b	4026bc <verb_set+0x4d0>
  40231c:	mov	w21, w0
  402320:	mov	x19, xzr
  402324:	mov	x20, xzr
  402328:	b	402338 <verb_set+0x14c>
  40232c:	mov	x19, xzr
  402330:	mov	x20, xzr
  402334:	mov	w21, #0xffffffcf            	// #-49
  402338:	mov	x0, x20
  40233c:	bl	4015a0 <free@plt>
  402340:	ldr	x0, [sp, #32]
  402344:	bl	4015a0 <free@plt>
  402348:	mov	x0, x19
  40234c:	bl	4015a0 <free@plt>
  402350:	ldur	x0, [x29, #-24]
  402354:	bl	4015a0 <free@plt>
  402358:	ldur	x0, [x29, #-16]
  40235c:	bl	4015a0 <free@plt>
  402360:	ldur	x0, [x29, #-8]
  402364:	bl	4015a0 <free@plt>
  402368:	mov	w0, w21
  40236c:	ldp	x20, x19, [sp, #144]
  402370:	ldp	x22, x21, [sp, #128]
  402374:	ldp	x24, x23, [sp, #112]
  402378:	ldp	x26, x25, [sp, #96]
  40237c:	ldp	x28, x27, [sp, #80]
  402380:	ldp	x29, x30, [sp, #64]
  402384:	add	sp, sp, #0xa0
  402388:	ret
  40238c:	adrp	x1, 403000 <parse_counter+0x138>
  402390:	adrp	x3, 403000 <parse_counter+0x138>
  402394:	add	x1, x1, #0x406
  402398:	add	x3, x3, #0xbfc
  40239c:	mov	w2, #0x19e                 	// #414
  4023a0:	b	4023bc <verb_set+0x1d0>
  4023a4:	adrp	x1, 403000 <parse_counter+0x138>
  4023a8:	adrp	x3, 403000 <parse_counter+0x138>
  4023ac:	add	x1, x1, #0x406
  4023b0:	add	x3, x3, #0xbfc
  4023b4:	mov	w2, #0x1a2                 	// #418
  4023b8:	mov	w0, wzr
  4023bc:	bl	401530 <log_oom_internal@plt>
  4023c0:	mov	w21, w0
  4023c4:	b	402324 <verb_set+0x138>
  4023c8:	mov	x24, x22
  4023cc:	mov	x25, x21
  4023d0:	mov	x21, x19
  4023d4:	adrp	x8, 420000 <completed.8445>
  4023d8:	ldr	x8, [x8, #8]
  4023dc:	cbnz	x8, 4023fc <verb_set+0x210>
  4023e0:	b	4026bc <verb_set+0x4d0>
  4023e4:	mov	x24, x19
  4023e8:	mov	x25, x21
  4023ec:	mov	x21, x22
  4023f0:	adrp	x8, 420000 <completed.8445>
  4023f4:	ldr	x8, [x8, #8]
  4023f8:	cbz	x8, 4026bc <verb_set+0x4d0>
  4023fc:	ldr	x0, [x8]
  402400:	cbz	x0, 4026bc <verb_set+0x4d0>
  402404:	add	x9, x25, #0x1
  402408:	mov	x20, xzr
  40240c:	str	x9, [sp, #16]
  402410:	add	x27, x21, #0x1
  402414:	add	x9, x24, #0x1
  402418:	add	x26, x8, #0x8
  40241c:	str	x9, [sp, #8]
  402420:	b	402434 <verb_set+0x248>
  402424:	mov	w0, w22
  402428:	bl	401670 <safe_close@plt>
  40242c:	ldr	x0, [x26], #8
  402430:	cbz	x0, 4026c0 <verb_set+0x4d4>
  402434:	mov	w1, #0x4000                	// #16384
  402438:	movk	w1, #0x8, lsl #16
  40243c:	bl	401680 <open64@plt>
  402440:	mov	w22, w0
  402444:	tbnz	w0, #31, 402750 <verb_set+0x564>
  402448:	cbz	x25, 40288c <verb_set+0x6a0>
  40244c:	ldrb	w8, [x25]
  402450:	cmp	w8, #0x2f
  402454:	b.ne	402868 <verb_set+0x67c>  // b.any
  402458:	cbz	x21, 40288c <verb_set+0x6a0>
  40245c:	ldrb	w8, [x21]
  402460:	cmp	w8, #0x2f
  402464:	b.ne	402868 <verb_set+0x67c>  // b.any
  402468:	ldr	x1, [sp, #16]
  40246c:	mov	w0, w22
  402470:	mov	w2, w22
  402474:	mov	x3, x27
  402478:	bl	4016b0 <rename_noreplace@plt>
  40247c:	cmn	w0, #0x2
  402480:	b.eq	4024d0 <verb_set+0x2e4>  // b.none
  402484:	mov	w28, w0
  402488:	cmn	w0, #0x11
  40248c:	b.eq	402708 <verb_set+0x51c>  // b.none
  402490:	mov	w0, wzr
  402494:	bl	401590 <log_get_max_level_realm@plt>
  402498:	tbnz	w28, #31, 4027cc <verb_set+0x5e0>
  40249c:	cmp	w0, #0x7
  4024a0:	b.lt	402558 <verb_set+0x36c>  // b.tstop
  4024a4:	adrp	x2, 403000 <parse_counter+0x138>
  4024a8:	adrp	x4, 403000 <parse_counter+0x138>
  4024ac:	adrp	x5, 403000 <parse_counter+0x138>
  4024b0:	mov	w0, #0x7                   	// #7
  4024b4:	mov	w3, #0x1d5                 	// #469
  4024b8:	mov	w1, wzr
  4024bc:	add	x2, x2, #0x406
  4024c0:	add	x4, x4, #0xbfc
  4024c4:	add	x5, x5, #0xcc0
  4024c8:	mov	x6, x25
  4024cc:	b	402550 <verb_set+0x364>
  4024d0:	cbz	x24, 40288c <verb_set+0x6a0>
  4024d4:	ldrb	w8, [x24]
  4024d8:	cmp	w8, #0x2f
  4024dc:	b.ne	402868 <verb_set+0x67c>  // b.any
  4024e0:	ldrb	w8, [x21]
  4024e4:	cmp	w8, #0x2f
  4024e8:	b.ne	402868 <verb_set+0x67c>  // b.any
  4024ec:	ldr	x1, [sp, #8]
  4024f0:	mov	w0, w22
  4024f4:	mov	w2, w22
  4024f8:	mov	x3, x27
  4024fc:	bl	4016b0 <rename_noreplace@plt>
  402500:	cmn	w0, #0x2
  402504:	b.eq	40264c <verb_set+0x460>  // b.none
  402508:	mov	w28, w0
  40250c:	cmn	w0, #0x11
  402510:	b.eq	402708 <verb_set+0x51c>  // b.none
  402514:	mov	w0, wzr
  402518:	bl	401590 <log_get_max_level_realm@plt>
  40251c:	tbnz	w28, #31, 402800 <verb_set+0x614>
  402520:	cmp	w0, #0x7
  402524:	b.lt	402558 <verb_set+0x36c>  // b.tstop
  402528:	adrp	x2, 403000 <parse_counter+0x138>
  40252c:	adrp	x4, 403000 <parse_counter+0x138>
  402530:	adrp	x5, 403000 <parse_counter+0x138>
  402534:	mov	w0, #0x7                   	// #7
  402538:	mov	w3, #0x1d0                 	// #464
  40253c:	mov	w1, wzr
  402540:	add	x2, x2, #0x406
  402544:	add	x4, x4, #0xbfc
  402548:	add	x5, x5, #0xcc0
  40254c:	mov	x6, x24
  402550:	mov	x7, x21
  402554:	bl	4015d0 <log_internal_realm@plt>
  402558:	mov	x0, x21
  40255c:	bl	4016c0 <dirname_malloc@plt>
  402560:	mov	x20, x0
  402564:	cbz	x0, 40279c <verb_set+0x5b0>
  402568:	ldrb	w8, [x20]
  40256c:	cmp	w8, #0x2f
  402570:	b.ne	402868 <verb_set+0x67c>  // b.any
  402574:	add	x1, x20, #0x1
  402578:	mov	w0, w22
  40257c:	bl	4016d0 <fsync_path_at@plt>
  402580:	tbz	w0, #31, 4025c0 <verb_set+0x3d4>
  402584:	mov	w0, wzr
  402588:	bl	401590 <log_get_max_level_realm@plt>
  40258c:	cmp	w0, #0x7
  402590:	b.lt	4025c0 <verb_set+0x3d4>  // b.tstop
  402594:	bl	401660 <__errno_location@plt>
  402598:	ldr	w1, [x0]
  40259c:	adrp	x2, 403000 <parse_counter+0x138>
  4025a0:	adrp	x4, 403000 <parse_counter+0x138>
  4025a4:	adrp	x5, 403000 <parse_counter+0x138>
  4025a8:	mov	w0, #0x7                   	// #7
  4025ac:	mov	w3, #0x1de                 	// #478
  4025b0:	add	x2, x2, #0x406
  4025b4:	add	x4, x4, #0xbfc
  4025b8:	add	x5, x5, #0xce3
  4025bc:	bl	4015d0 <log_internal_realm@plt>
  4025c0:	mov	w0, w22
  4025c4:	bl	4016e0 <syncfs@plt>
  4025c8:	tbz	w0, #31, 402608 <verb_set+0x41c>
  4025cc:	mov	w0, wzr
  4025d0:	bl	401590 <log_get_max_level_realm@plt>
  4025d4:	cmp	w0, #0x6
  4025d8:	b.le	402608 <verb_set+0x41c>
  4025dc:	bl	401660 <__errno_location@plt>
  4025e0:	ldr	w1, [x0]
  4025e4:	adrp	x2, 403000 <parse_counter+0x138>
  4025e8:	adrp	x4, 403000 <parse_counter+0x138>
  4025ec:	adrp	x5, 403000 <parse_counter+0x138>
  4025f0:	mov	w0, #0x7                   	// #7
  4025f4:	mov	w3, #0x1e2                 	// #482
  4025f8:	add	x2, x2, #0x406
  4025fc:	add	x4, x4, #0xbfc
  402600:	add	x5, x5, #0xd17
  402604:	bl	4015d0 <log_internal_realm@plt>
  402608:	mov	w0, wzr
  40260c:	bl	401590 <log_get_max_level_realm@plt>
  402610:	cmp	w0, #0x6
  402614:	b.lt	402424 <verb_set+0x238>  // b.tstop
  402618:	ldr	x6, [x23]
  40261c:	ldr	x7, [sp, #24]
  402620:	adrp	x2, 403000 <parse_counter+0x138>
  402624:	adrp	x4, 403000 <parse_counter+0x138>
  402628:	adrp	x5, 403000 <parse_counter+0x138>
  40262c:	mov	w0, #0x6                   	// #6
  402630:	mov	w3, #0x1e4                 	// #484
  402634:	mov	w1, wzr
  402638:	add	x2, x2, #0x406
  40263c:	add	x4, x4, #0xbfc
  402640:	add	x5, x5, #0xd4b
  402644:	bl	4015d0 <log_internal_realm@plt>
  402648:	b	402424 <verb_set+0x238>
  40264c:	ldrb	w8, [x21]
  402650:	cmp	w8, #0x2f
  402654:	b.ne	402868 <verb_set+0x67c>  // b.any
  402658:	mov	w0, w22
  40265c:	mov	x1, x27
  402660:	mov	w2, wzr
  402664:	mov	w3, wzr
  402668:	bl	401690 <faccessat@plt>
  40266c:	tbz	w0, #31, 402708 <verb_set+0x51c>
  402670:	bl	401660 <__errno_location@plt>
  402674:	ldr	w28, [x0]
  402678:	cmp	w28, #0x2
  40267c:	b.eq	402424 <verb_set+0x238>  // b.none
  402680:	mov	w0, wzr
  402684:	bl	401590 <log_get_max_level_realm@plt>
  402688:	cmp	w0, #0x3
  40268c:	b.lt	40284c <verb_set+0x660>  // b.tstop
  402690:	adrp	x2, 403000 <parse_counter+0x138>
  402694:	adrp	x4, 403000 <parse_counter+0x138>
  402698:	adrp	x5, 403000 <parse_counter+0x138>
  40269c:	add	x2, x2, #0x406
  4026a0:	add	x4, x4, #0xbfc
  4026a4:	add	x5, x5, #0xc71
  4026a8:	mov	w0, #0x3                   	// #3
  4026ac:	mov	w3, #0x1c9                 	// #457
  4026b0:	mov	w1, w28
  4026b4:	mov	x6, x21
  4026b8:	b	402790 <verb_set+0x5a4>
  4026bc:	mov	x20, xzr
  4026c0:	mov	w0, wzr
  4026c4:	bl	401590 <log_get_max_level_realm@plt>
  4026c8:	cmp	w0, #0x3
  4026cc:	b.lt	402700 <verb_set+0x514>  // b.tstop
  4026d0:	adrp	x2, 403000 <parse_counter+0x138>
  4026d4:	adrp	x4, 403000 <parse_counter+0x138>
  4026d8:	adrp	x5, 403000 <parse_counter+0x138>
  4026dc:	mov	w1, #0x10                  	// #16
  4026e0:	add	x2, x2, #0x406
  4026e4:	add	x4, x4, #0xbfc
  4026e8:	add	x5, x5, #0xd82
  4026ec:	mov	w0, #0x3                   	// #3
  4026f0:	movk	w1, #0x4000, lsl #16
  4026f4:	mov	w3, #0x1e7                 	// #487
  4026f8:	mov	x6, x21
  4026fc:	bl	4015d0 <log_internal_realm@plt>
  402700:	mov	w21, #0x1                   	// #1
  402704:	b	402338 <verb_set+0x14c>
  402708:	mov	w0, w22
  40270c:	bl	401670 <safe_close@plt>
  402710:	mov	w0, wzr
  402714:	bl	401590 <log_get_max_level_realm@plt>
  402718:	cmp	w0, #0x7
  40271c:	b.lt	402748 <verb_set+0x55c>  // b.tstop
  402720:	adrp	x2, 403000 <parse_counter+0x138>
  402724:	adrp	x4, 403000 <parse_counter+0x138>
  402728:	adrp	x5, 403000 <parse_counter+0x138>
  40272c:	add	x2, x2, #0x406
  402730:	add	x4, x4, #0xbfc
  402734:	add	x5, x5, #0xdb3
  402738:	mov	w0, #0x7                   	// #7
  40273c:	mov	w3, #0x1eb                 	// #491
  402740:	mov	w1, wzr
  402744:	bl	4015d0 <log_internal_realm@plt>
  402748:	mov	w21, wzr
  40274c:	b	402338 <verb_set+0x14c>
  402750:	bl	401660 <__errno_location@plt>
  402754:	ldr	w21, [x0]
  402758:	mov	w0, wzr
  40275c:	bl	401590 <log_get_max_level_realm@plt>
  402760:	cmp	w0, #0x3
  402764:	b.lt	4027bc <verb_set+0x5d0>  // b.tstop
  402768:	ldur	x6, [x26, #-8]
  40276c:	adrp	x2, 403000 <parse_counter+0x138>
  402770:	adrp	x4, 403000 <parse_counter+0x138>
  402774:	adrp	x5, 403000 <parse_counter+0x138>
  402778:	add	x2, x2, #0x406
  40277c:	add	x4, x4, #0xbfc
  402780:	add	x5, x5, #0x6c6
  402784:	mov	w0, #0x3                   	// #3
  402788:	mov	w3, #0x1b9                 	// #441
  40278c:	mov	w1, w21
  402790:	bl	4015d0 <log_internal_realm@plt>
  402794:	mov	w21, w0
  402798:	b	40285c <verb_set+0x670>
  40279c:	adrp	x1, 403000 <parse_counter+0x138>
  4027a0:	adrp	x3, 403000 <parse_counter+0x138>
  4027a4:	add	x1, x1, #0x406
  4027a8:	add	x3, x3, #0xbfc
  4027ac:	mov	w2, #0x1da                 	// #474
  4027b0:	bl	401530 <log_oom_internal@plt>
  4027b4:	mov	w21, w0
  4027b8:	b	40285c <verb_set+0x670>
  4027bc:	cmp	w21, #0x0
  4027c0:	mov	w8, wzr
  4027c4:	cneg	w9, w21, mi  // mi = first
  4027c8:	b	402858 <verb_set+0x66c>
  4027cc:	cmp	w0, #0x3
  4027d0:	b.lt	402840 <verb_set+0x654>  // b.tstop
  4027d4:	adrp	x2, 403000 <parse_counter+0x138>
  4027d8:	adrp	x4, 403000 <parse_counter+0x138>
  4027dc:	adrp	x5, 403000 <parse_counter+0x138>
  4027e0:	add	x2, x2, #0x406
  4027e4:	add	x4, x4, #0xbfc
  4027e8:	add	x5, x5, #0xc9e
  4027ec:	mov	w0, #0x3                   	// #3
  4027f0:	mov	w3, #0x1d3                 	// #467
  4027f4:	mov	w1, w28
  4027f8:	mov	x6, x25
  4027fc:	b	402830 <verb_set+0x644>
  402800:	cmp	w0, #0x3
  402804:	b.lt	402840 <verb_set+0x654>  // b.tstop
  402808:	adrp	x2, 403000 <parse_counter+0x138>
  40280c:	adrp	x4, 403000 <parse_counter+0x138>
  402810:	adrp	x5, 403000 <parse_counter+0x138>
  402814:	add	x2, x2, #0x406
  402818:	add	x4, x4, #0xbfc
  40281c:	add	x5, x5, #0xc9e
  402820:	mov	w0, #0x3                   	// #3
  402824:	mov	w3, #0x1ce                 	// #462
  402828:	mov	w1, w28
  40282c:	mov	x6, x24
  402830:	mov	x7, x21
  402834:	bl	4015d0 <log_internal_realm@plt>
  402838:	mov	w21, w0
  40283c:	b	40285c <verb_set+0x670>
  402840:	mov	w8, wzr
  402844:	neg	w9, w28
  402848:	b	402858 <verb_set+0x66c>
  40284c:	cmp	w28, #0x0
  402850:	mov	w8, wzr
  402854:	cneg	w9, w28, mi  // mi = first
  402858:	sub	w21, w8, w9, uxtb
  40285c:	mov	w0, w22
  402860:	bl	401670 <safe_close@plt>
  402864:	b	402338 <verb_set+0x14c>
  402868:	adrp	x1, 403000 <parse_counter+0x138>
  40286c:	adrp	x2, 403000 <parse_counter+0x138>
  402870:	adrp	x4, 403000 <parse_counter+0x138>
  402874:	add	x1, x1, #0xbed
  402878:	add	x2, x2, #0x406
  40287c:	add	x4, x4, #0xbc8
  402880:	mov	w3, #0x13a                 	// #314
  402884:	mov	w0, wzr
  402888:	bl	401620 <log_assert_failed_realm@plt>
  40288c:	adrp	x1, 403000 <parse_counter+0x138>
  402890:	adrp	x2, 403000 <parse_counter+0x138>
  402894:	adrp	x4, 403000 <parse_counter+0x138>
  402898:	add	x1, x1, #0x863
  40289c:	add	x2, x2, #0x406
  4028a0:	add	x4, x4, #0xbc8
  4028a4:	mov	w3, #0x139                 	// #313
  4028a8:	mov	w0, wzr
  4028ac:	bl	401620 <log_assert_failed_realm@plt>
  4028b0:	adrp	x1, 403000 <parse_counter+0x138>
  4028b4:	adrp	x2, 403000 <parse_counter+0x138>
  4028b8:	adrp	x4, 403000 <parse_counter+0x138>
  4028bc:	add	x1, x1, #0xb39
  4028c0:	add	x2, x2, #0x406
  4028c4:	add	x4, x4, #0xb40
  4028c8:	mov	w3, #0x111                 	// #273
  4028cc:	bl	401620 <log_assert_failed_realm@plt>
  4028d0:	adrp	x1, 403000 <parse_counter+0x138>
  4028d4:	adrp	x2, 403000 <parse_counter+0x138>
  4028d8:	adrp	x4, 403000 <parse_counter+0x138>
  4028dc:	add	x1, x1, #0xb73
  4028e0:	add	x2, x2, #0x406
  4028e4:	add	x4, x4, #0xb40
  4028e8:	mov	w3, #0x112                 	// #274
  4028ec:	mov	w0, wzr
  4028f0:	bl	401620 <log_assert_failed_realm@plt>
  4028f4:	adrp	x1, 403000 <parse_counter+0x138>
  4028f8:	adrp	x2, 403000 <parse_counter+0x138>
  4028fc:	adrp	x4, 403000 <parse_counter+0x138>
  402900:	add	x1, x1, #0xc2e
  402904:	add	x2, x2, #0x406
  402908:	add	x4, x4, #0xc4e
  40290c:	mov	w3, #0x1ae                 	// #430
  402910:	mov	w0, wzr
  402914:	bl	401620 <log_assert_failed_realm@plt>

0000000000402918 <acquire_boot_count_path>:
  402918:	sub	sp, sp, #0x70
  40291c:	stp	x24, x23, [sp, #64]
  402920:	stp	x22, x21, [sp, #80]
  402924:	mov	x22, x1
  402928:	mov	x23, x0
  40292c:	mov	x0, #0x674a                	// #26442
  402930:	mov	x1, #0xc7b6                	// #51126
  402934:	movk	x0, #0x82b0, lsl #16
  402938:	movk	x1, #0xb44, lsl #16
  40293c:	stp	x29, x30, [sp, #32]
  402940:	add	x29, sp, #0x20
  402944:	mov	x21, x2
  402948:	adrp	x2, 403000 <parse_counter+0x138>
  40294c:	movk	x0, #0x4c0a, lsl #32
  402950:	movk	x1, #0xbb29, lsl #32
  402954:	stp	x20, x19, [sp, #96]
  402958:	mov	x20, x3
  40295c:	add	x2, x2, #0x733
  402960:	add	x3, x29, #0x18
  402964:	movk	x0, #0xcf41, lsl #48
  402968:	movk	x1, #0x4f8c, lsl #48
  40296c:	str	x25, [sp, #48]
  402970:	mov	x24, x4
  402974:	str	xzr, [x29, #24]
  402978:	bl	4016f0 <efi_get_variable_string@plt>
  40297c:	cmn	w0, #0x2
  402980:	b.ne	402990 <acquire_boot_count_path+0x78>  // b.any
  402984:	mov	x19, xzr
  402988:	mov	w25, #0xffffffcf            	// #-49
  40298c:	b	402b24 <acquire_boot_count_path+0x20c>
  402990:	mov	w25, w0
  402994:	tbnz	w0, #31, 402a08 <acquire_boot_count_path+0xf0>
  402998:	ldr	x0, [x29, #24]
  40299c:	bl	401700 <efi_tilt_backslashes@plt>
  4029a0:	ldr	x19, [x29, #24]
  4029a4:	mov	x0, x19
  4029a8:	bl	401710 <path_is_normalized@plt>
  4029ac:	tbz	w0, #0, 402a44 <acquire_boot_count_path+0x12c>
  4029b0:	mov	x0, x19
  4029b4:	bl	401720 <path_is_absolute@plt>
  4029b8:	tbz	w0, #0, 402a94 <acquire_boot_count_path+0x17c>
  4029bc:	mov	x0, x19
  4029c0:	bl	401730 <last_path_component@plt>
  4029c4:	mov	w1, #0x2b                  	// #43
  4029c8:	bl	401740 <strrchr@plt>
  4029cc:	stur	x0, [x29, #-8]
  4029d0:	cbz	x0, 402ae0 <acquire_boot_count_path+0x1c8>
  4029d4:	cbz	x22, 402b54 <acquire_boot_count_path+0x23c>
  4029d8:	ldr	x8, [x29, #24]
  4029dc:	sub	x1, x0, x8
  4029e0:	mov	x0, x8
  4029e4:	bl	401750 <strndup@plt>
  4029e8:	mov	x19, x0
  4029ec:	cbnz	x0, 402b58 <acquire_boot_count_path+0x240>
  4029f0:	adrp	x1, 403000 <parse_counter+0x138>
  4029f4:	adrp	x3, 403000 <parse_counter+0x138>
  4029f8:	add	x1, x1, #0x406
  4029fc:	add	x3, x3, #0x747
  402a00:	mov	w2, #0xf3                  	// #243
  402a04:	b	402bdc <acquire_boot_count_path+0x2c4>
  402a08:	mov	w0, wzr
  402a0c:	bl	401590 <log_get_max_level_realm@plt>
  402a10:	cmp	w0, #0x3
  402a14:	b.lt	402a80 <acquire_boot_count_path+0x168>  // b.tstop
  402a18:	adrp	x2, 403000 <parse_counter+0x138>
  402a1c:	adrp	x4, 403000 <parse_counter+0x138>
  402a20:	adrp	x5, 403000 <parse_counter+0x138>
  402a24:	add	x2, x2, #0x406
  402a28:	add	x4, x4, #0x747
  402a2c:	add	x5, x5, #0x75f
  402a30:	mov	w0, #0x3                   	// #3
  402a34:	mov	w3, #0xdb                  	// #219
  402a38:	mov	w1, w25
  402a3c:	bl	4015d0 <log_internal_realm@plt>
  402a40:	b	402ad4 <acquire_boot_count_path+0x1bc>
  402a44:	mov	w0, wzr
  402a48:	bl	401590 <log_get_max_level_realm@plt>
  402a4c:	cmp	w0, #0x3
  402a50:	b.lt	402b1c <acquire_boot_count_path+0x204>  // b.tstop
  402a54:	adrp	x2, 403000 <parse_counter+0x138>
  402a58:	adrp	x4, 403000 <parse_counter+0x138>
  402a5c:	adrp	x5, 403000 <parse_counter+0x138>
  402a60:	mov	w1, #0x16                  	// #22
  402a64:	add	x2, x2, #0x406
  402a68:	add	x4, x4, #0x747
  402a6c:	add	x5, x5, #0x793
  402a70:	mov	w0, #0x3                   	// #3
  402a74:	movk	w1, #0x4000, lsl #16
  402a78:	mov	w3, #0xe2                  	// #226
  402a7c:	b	402acc <acquire_boot_count_path+0x1b4>
  402a80:	mov	w8, wzr
  402a84:	neg	w9, w25
  402a88:	mov	x19, xzr
  402a8c:	sub	w25, w8, w9, uxtb
  402a90:	b	402b24 <acquire_boot_count_path+0x20c>
  402a94:	mov	w0, wzr
  402a98:	bl	401590 <log_get_max_level_realm@plt>
  402a9c:	cmp	w0, #0x3
  402aa0:	b.lt	402b1c <acquire_boot_count_path+0x204>  // b.tstop
  402aa4:	adrp	x2, 403000 <parse_counter+0x138>
  402aa8:	adrp	x4, 403000 <parse_counter+0x138>
  402aac:	adrp	x5, 403000 <parse_counter+0x138>
  402ab0:	mov	w1, #0x16                  	// #22
  402ab4:	add	x2, x2, #0x406
  402ab8:	add	x4, x4, #0x747
  402abc:	add	x5, x5, #0x7d6
  402ac0:	mov	w0, #0x3                   	// #3
  402ac4:	movk	w1, #0x4000, lsl #16
  402ac8:	mov	w3, #0xe7                  	// #231
  402acc:	mov	x6, x19
  402ad0:	bl	4015d0 <log_internal_realm@plt>
  402ad4:	mov	w25, w0
  402ad8:	mov	x19, xzr
  402adc:	b	402b24 <acquire_boot_count_path+0x20c>
  402ae0:	bl	401590 <log_get_max_level_realm@plt>
  402ae4:	cmp	w0, #0x3
  402ae8:	b.lt	402b1c <acquire_boot_count_path+0x204>  // b.tstop
  402aec:	ldr	x6, [x29, #24]
  402af0:	adrp	x2, 403000 <parse_counter+0x138>
  402af4:	adrp	x4, 403000 <parse_counter+0x138>
  402af8:	adrp	x5, 403000 <parse_counter+0x138>
  402afc:	mov	w1, #0x16                  	// #22
  402b00:	add	x2, x2, #0x406
  402b04:	add	x4, x4, #0x747
  402b08:	add	x5, x5, #0x817
  402b0c:	mov	w0, #0x3                   	// #3
  402b10:	movk	w1, #0x4000, lsl #16
  402b14:	mov	w3, #0xee                  	// #238
  402b18:	b	402ad0 <acquire_boot_count_path+0x1b8>
  402b1c:	mov	x19, xzr
  402b20:	mov	w25, #0xffffffea            	// #-22
  402b24:	mov	x0, x19
  402b28:	bl	4015a0 <free@plt>
  402b2c:	ldr	x0, [x29, #24]
  402b30:	bl	4015a0 <free@plt>
  402b34:	mov	w0, w25
  402b38:	ldp	x20, x19, [sp, #96]
  402b3c:	ldp	x22, x21, [sp, #80]
  402b40:	ldp	x24, x23, [sp, #64]
  402b44:	ldr	x25, [sp, #48]
  402b48:	ldp	x29, x30, [sp, #32]
  402b4c:	add	sp, sp, #0x70
  402b50:	ret
  402b54:	mov	x19, xzr
  402b58:	ldr	x0, [x29, #24]
  402b5c:	sub	x1, x29, #0x8
  402b60:	add	x2, sp, #0x10
  402b64:	add	x3, sp, #0x8
  402b68:	bl	402ec8 <parse_counter>
  402b6c:	tbnz	w0, #31, 402bc0 <acquire_boot_count_path+0x2a8>
  402b70:	cbz	x24, 402b84 <acquire_boot_count_path+0x26c>
  402b74:	ldur	x0, [x29, #-8]
  402b78:	bl	401760 <strdup@plt>
  402b7c:	cbz	x0, 402bc8 <acquire_boot_count_path+0x2b0>
  402b80:	str	x0, [x24]
  402b84:	cbz	x23, 402b94 <acquire_boot_count_path+0x27c>
  402b88:	ldr	x8, [x29, #24]
  402b8c:	str	xzr, [x29, #24]
  402b90:	str	x8, [x23]
  402b94:	cbz	x22, 402ba0 <acquire_boot_count_path+0x288>
  402b98:	str	x19, [x22]
  402b9c:	mov	x19, xzr
  402ba0:	cbz	x21, 402bac <acquire_boot_count_path+0x294>
  402ba4:	ldr	x8, [sp, #16]
  402ba8:	str	x8, [x21]
  402bac:	mov	w25, wzr
  402bb0:	cbz	x20, 402b24 <acquire_boot_count_path+0x20c>
  402bb4:	ldr	x8, [sp, #8]
  402bb8:	str	x8, [x20]
  402bbc:	b	402b24 <acquire_boot_count_path+0x20c>
  402bc0:	mov	w25, w0
  402bc4:	b	402b24 <acquire_boot_count_path+0x20c>
  402bc8:	adrp	x1, 403000 <parse_counter+0x138>
  402bcc:	adrp	x3, 403000 <parse_counter+0x138>
  402bd0:	add	x1, x1, #0x406
  402bd4:	add	x3, x3, #0x747
  402bd8:	mov	w2, #0xfd                  	// #253
  402bdc:	bl	401530 <log_oom_internal@plt>
  402be0:	mov	w25, w0
  402be4:	b	402b24 <acquire_boot_count_path+0x20c>

0000000000402be8 <acquire_path>:
  402be8:	sub	sp, sp, #0x40
  402bec:	str	x21, [sp, #32]
  402bf0:	adrp	x21, 420000 <completed.8445>
  402bf4:	ldr	x8, [x21, #8]
  402bf8:	stp	x29, x30, [sp, #16]
  402bfc:	add	x29, sp, #0x10
  402c00:	stp	x20, x19, [sp, #48]
  402c04:	str	xzr, [x29, #24]
  402c08:	str	xzr, [sp, #8]
  402c0c:	cbz	x8, 402c20 <acquire_path+0x38>
  402c10:	ldr	x8, [x8]
  402c14:	cbz	x8, 402c20 <acquire_path+0x38>
  402c18:	mov	w19, wzr
  402c1c:	b	402d94 <acquire_path+0x1ac>
  402c20:	add	x2, x29, #0x18
  402c24:	mov	x0, xzr
  402c28:	mov	w1, wzr
  402c2c:	mov	x3, xzr
  402c30:	mov	x4, xzr
  402c34:	mov	x5, xzr
  402c38:	mov	x6, xzr
  402c3c:	bl	401770 <find_esp_and_warn@plt>
  402c40:	tbz	w0, #31, 402c50 <acquire_path+0x68>
  402c44:	mov	w19, w0
  402c48:	cmn	w0, #0x7e
  402c4c:	b.ne	402d94 <acquire_path+0x1ac>  // b.any
  402c50:	add	x2, sp, #0x8
  402c54:	mov	x0, xzr
  402c58:	mov	w1, wzr
  402c5c:	mov	x3, xzr
  402c60:	bl	401780 <find_xbootldr_and_warn@plt>
  402c64:	tbz	w0, #31, 402c74 <acquire_path+0x8c>
  402c68:	mov	w19, w0
  402c6c:	cmn	w0, #0x7e
  402c70:	b.ne	402d94 <acquire_path+0x1ac>  // b.any
  402c74:	ldr	x0, [x29, #24]
  402c78:	ldr	x1, [sp, #8]
  402c7c:	orr	x8, x0, x1
  402c80:	cbz	x8, 402d18 <acquire_path+0x130>
  402c84:	cbz	x0, 402d60 <acquire_path+0x178>
  402c88:	mov	x2, xzr
  402c8c:	bl	401790 <strv_new_internal@plt>
  402c90:	mov	x20, x0
  402c94:	cbz	x0, 402d74 <acquire_path+0x18c>
  402c98:	ldr	x0, [x21, #8]
  402c9c:	bl	4014e0 <strv_free@plt>
  402ca0:	mov	w0, wzr
  402ca4:	str	x20, [x21, #8]
  402ca8:	bl	401590 <log_get_max_level_realm@plt>
  402cac:	cmp	w0, #0x7
  402cb0:	mov	w19, wzr
  402cb4:	b.lt	402d94 <acquire_path+0x1ac>  // b.tstop
  402cb8:	adrp	x1, 403000 <parse_counter+0x138>
  402cbc:	add	x1, x1, #0xb0a
  402cc0:	mov	x0, x20
  402cc4:	mov	x2, xzr
  402cc8:	bl	4017a0 <strv_join_prefix@plt>
  402ccc:	mov	x19, x0
  402cd0:	mov	w0, wzr
  402cd4:	bl	401590 <log_get_max_level_realm@plt>
  402cd8:	cmp	w0, #0x7
  402cdc:	b.lt	402d0c <acquire_path+0x124>  // b.tstop
  402ce0:	adrp	x2, 403000 <parse_counter+0x138>
  402ce4:	adrp	x4, 403000 <parse_counter+0x138>
  402ce8:	adrp	x5, 403000 <parse_counter+0x138>
  402cec:	add	x2, x2, #0x406
  402cf0:	add	x4, x4, #0xa7b
  402cf4:	add	x5, x5, #0xb0c
  402cf8:	mov	w0, #0x7                   	// #7
  402cfc:	mov	w3, #0x84                  	// #132
  402d00:	mov	w1, wzr
  402d04:	mov	x6, x19
  402d08:	bl	4015d0 <log_internal_realm@plt>
  402d0c:	mov	x0, x19
  402d10:	bl	4015a0 <free@plt>
  402d14:	b	402c18 <acquire_path+0x30>
  402d18:	mov	w0, wzr
  402d1c:	bl	401590 <log_get_max_level_realm@plt>
  402d20:	cmp	w0, #0x3
  402d24:	b.lt	402d58 <acquire_path+0x170>  // b.tstop
  402d28:	adrp	x2, 403000 <parse_counter+0x138>
  402d2c:	adrp	x4, 403000 <parse_counter+0x138>
  402d30:	adrp	x5, 403000 <parse_counter+0x138>
  402d34:	mov	w1, #0x2                   	// #2
  402d38:	add	x2, x2, #0x406
  402d3c:	add	x4, x4, #0xa7b
  402d40:	add	x5, x5, #0xa88
  402d44:	mov	w0, #0x3                   	// #3
  402d48:	movk	w1, #0x4000, lsl #16
  402d4c:	mov	w3, #0x75                  	// #117
  402d50:	bl	4015d0 <log_internal_realm@plt>
  402d54:	b	402d90 <acquire_path+0x1a8>
  402d58:	mov	w19, #0xfffffffe            	// #-2
  402d5c:	b	402d94 <acquire_path+0x1ac>
  402d60:	mov	x0, x1
  402d64:	mov	x1, xzr
  402d68:	bl	401790 <strv_new_internal@plt>
  402d6c:	mov	x20, x0
  402d70:	cbnz	x0, 402c98 <acquire_path+0xb0>
  402d74:	adrp	x1, 403000 <parse_counter+0x138>
  402d78:	adrp	x3, 403000 <parse_counter+0x138>
  402d7c:	add	x1, x1, #0x406
  402d80:	add	x3, x3, #0xa7b
  402d84:	mov	w2, #0x7c                  	// #124
  402d88:	mov	w0, wzr
  402d8c:	bl	401530 <log_oom_internal@plt>
  402d90:	mov	w19, w0
  402d94:	ldr	x0, [sp, #8]
  402d98:	bl	4015a0 <free@plt>
  402d9c:	ldr	x0, [x29, #24]
  402da0:	bl	4015a0 <free@plt>
  402da4:	mov	w0, w19
  402da8:	ldp	x20, x19, [sp, #48]
  402dac:	ldr	x21, [sp, #32]
  402db0:	ldp	x29, x30, [sp, #16]
  402db4:	add	sp, sp, #0x40
  402db8:	ret

0000000000402dbc <make_bad>:
  402dbc:	sub	sp, sp, #0x30
  402dc0:	stp	x29, x30, [sp, #16]
  402dc4:	stp	x20, x19, [sp, #32]
  402dc8:	add	x29, sp, #0x10
  402dcc:	str	xzr, [sp, #8]
  402dd0:	cbz	x0, 402e60 <make_bad+0xa4>
  402dd4:	mov	x4, x2
  402dd8:	cbz	x2, 402e80 <make_bad+0xc4>
  402ddc:	mov	x19, x3
  402de0:	cbz	x3, 402ea4 <make_bad+0xe8>
  402de4:	mov	x3, x1
  402de8:	mov	x2, x0
  402dec:	cbz	x1, 402e0c <make_bad+0x50>
  402df0:	adrp	x1, 403000 <parse_counter+0x138>
  402df4:	add	x1, x1, #0xbbd
  402df8:	add	x0, sp, #0x8
  402dfc:	bl	4017b0 <asprintf@plt>
  402e00:	tbnz	w0, #31, 402e40 <make_bad+0x84>
  402e04:	ldr	x8, [sp, #8]
  402e08:	b	402e2c <make_bad+0x70>
  402e0c:	adrp	x1, 403000 <parse_counter+0x138>
  402e10:	add	x1, x1, #0xbba
  402e14:	mov	x0, x2
  402e18:	mov	x2, x4
  402e1c:	bl	401650 <strjoin_real@plt>
  402e20:	str	x0, [sp, #8]
  402e24:	cbz	x0, 402e44 <make_bad+0x88>
  402e28:	mov	x8, x0
  402e2c:	mov	x0, xzr
  402e30:	mov	w20, wzr
  402e34:	str	xzr, [sp, #8]
  402e38:	str	x8, [x19]
  402e3c:	b	402e48 <make_bad+0x8c>
  402e40:	ldr	x0, [sp, #8]
  402e44:	mov	w20, #0xfffffff4            	// #-12
  402e48:	bl	4015a0 <free@plt>
  402e4c:	mov	w0, w20
  402e50:	ldp	x20, x19, [sp, #32]
  402e54:	ldp	x29, x30, [sp, #16]
  402e58:	add	sp, sp, #0x30
  402e5c:	ret
  402e60:	adrp	x1, 403000 <parse_counter+0x138>
  402e64:	adrp	x2, 403000 <parse_counter+0x138>
  402e68:	adrp	x4, 403000 <parse_counter+0x138>
  402e6c:	add	x1, x1, #0xb39
  402e70:	add	x2, x2, #0x406
  402e74:	add	x4, x4, #0xb7e
  402e78:	mov	w3, #0x124                 	// #292
  402e7c:	bl	401620 <log_assert_failed_realm@plt>
  402e80:	adrp	x1, 403000 <parse_counter+0x138>
  402e84:	adrp	x2, 403000 <parse_counter+0x138>
  402e88:	adrp	x4, 403000 <parse_counter+0x138>
  402e8c:	add	x1, x1, #0xb73
  402e90:	add	x2, x2, #0x406
  402e94:	add	x4, x4, #0xb7e
  402e98:	mov	w3, #0x125                 	// #293
  402e9c:	mov	w0, wzr
  402ea0:	bl	401620 <log_assert_failed_realm@plt>
  402ea4:	adrp	x1, 403000 <parse_counter+0x138>
  402ea8:	adrp	x2, 403000 <parse_counter+0x138>
  402eac:	adrp	x4, 403000 <parse_counter+0x138>
  402eb0:	add	x1, x1, #0xb7a
  402eb4:	add	x2, x2, #0x406
  402eb8:	add	x4, x4, #0xb7e
  402ebc:	mov	w3, #0x126                 	// #294
  402ec0:	mov	w0, wzr
  402ec4:	bl	401620 <log_assert_failed_realm@plt>

0000000000402ec8 <parse_counter>:
  402ec8:	stp	x29, x30, [sp, #-80]!
  402ecc:	str	x25, [sp, #16]
  402ed0:	stp	x24, x23, [sp, #32]
  402ed4:	stp	x22, x21, [sp, #48]
  402ed8:	stp	x20, x19, [sp, #64]
  402edc:	mov	x29, sp
  402ee0:	sub	sp, sp, #0x10
  402ee4:	cbz	x0, 40316c <parse_counter+0x2a4>
  402ee8:	mov	x22, x1
  402eec:	cbz	x1, 40318c <parse_counter+0x2c4>
  402ef0:	ldr	x8, [x22]
  402ef4:	cbz	x8, 4031b0 <parse_counter+0x2e8>
  402ef8:	ldrb	w9, [x8]
  402efc:	cmp	w9, #0x2b
  402f00:	b.ne	4031d4 <parse_counter+0x30c>  // b.any
  402f04:	add	x23, x8, #0x1
  402f08:	adrp	x1, 403000 <parse_counter+0x138>
  402f0c:	mov	x19, x0
  402f10:	add	x1, x1, #0x8bd
  402f14:	mov	x0, x23
  402f18:	mov	x20, x3
  402f1c:	mov	x21, x2
  402f20:	bl	4017c0 <strspn@plt>
  402f24:	cbz	x0, 402ff0 <parse_counter+0x128>
  402f28:	mov	x24, x0
  402f2c:	mov	x0, x23
  402f30:	mov	x1, x24
  402f34:	bl	4017d0 <strnlen@plt>
  402f38:	add	x8, x0, #0x10
  402f3c:	and	x8, x8, #0xfffffffffffffff0
  402f40:	mov	x9, sp
  402f44:	sub	x25, x9, x8
  402f48:	mov	x2, x0
  402f4c:	mov	sp, x25
  402f50:	strb	wzr, [x25, x0]
  402f54:	mov	x0, x25
  402f58:	mov	x1, x23
  402f5c:	bl	4017e0 <memcpy@plt>
  402f60:	add	x1, x29, #0x18
  402f64:	mov	x0, x25
  402f68:	bl	4017f0 <safe_atollu@plt>
  402f6c:	tbnz	w0, #31, 403028 <parse_counter+0x160>
  402f70:	add	x23, x23, x24
  402f74:	ldrb	w8, [x23]
  402f78:	cmp	w8, #0x2d
  402f7c:	b.ne	403064 <parse_counter+0x19c>  // b.any
  402f80:	add	x23, x23, #0x1
  402f84:	adrp	x1, 403000 <parse_counter+0x138>
  402f88:	add	x1, x1, #0x8bd
  402f8c:	mov	x0, x23
  402f90:	bl	4017c0 <strspn@plt>
  402f94:	cbz	x0, 4030c4 <parse_counter+0x1fc>
  402f98:	mov	x24, x0
  402f9c:	mov	x0, x23
  402fa0:	mov	x1, x24
  402fa4:	bl	4017d0 <strnlen@plt>
  402fa8:	add	x8, x0, #0x10
  402fac:	and	x8, x8, #0xfffffffffffffff0
  402fb0:	mov	x9, sp
  402fb4:	sub	x25, x9, x8
  402fb8:	mov	x2, x0
  402fbc:	mov	sp, x25
  402fc0:	strb	wzr, [x25, x0]
  402fc4:	mov	x0, x25
  402fc8:	mov	x1, x23
  402fcc:	bl	4017e0 <memcpy@plt>
  402fd0:	sub	x1, x29, #0x8
  402fd4:	mov	x0, x25
  402fd8:	bl	4017f0 <safe_atollu@plt>
  402fdc:	tbnz	w0, #31, 40310c <parse_counter+0x244>
  402fe0:	ldur	x8, [x29, #-8]
  402fe4:	add	x23, x23, x24
  402fe8:	cbnz	x8, 4030a0 <parse_counter+0x1d8>
  402fec:	b	403068 <parse_counter+0x1a0>
  402ff0:	bl	401590 <log_get_max_level_realm@plt>
  402ff4:	cmp	w0, #0x3
  402ff8:	b.lt	403104 <parse_counter+0x23c>  // b.tstop
  402ffc:	adrp	x2, 403000 <parse_counter+0x138>
  403000:	adrp	x4, 403000 <parse_counter+0x138>
  403004:	adrp	x5, 403000 <parse_counter+0x138>
  403008:	mov	w1, #0x16                  	// #22
  40300c:	add	x2, x2, #0x406
  403010:	add	x4, x4, #0x8c8
  403014:	add	x5, x5, #0x8d6
  403018:	mov	w0, #0x3                   	// #3
  40301c:	movk	w1, #0x4000, lsl #16
  403020:	mov	w3, #0xa2                  	// #162
  403024:	b	4030f8 <parse_counter+0x230>
  403028:	mov	w25, w0
  40302c:	mov	w0, wzr
  403030:	bl	401590 <log_get_max_level_realm@plt>
  403034:	cmp	w0, #0x3
  403038:	b.lt	403144 <parse_counter+0x27c>  // b.tstop
  40303c:	adrp	x2, 403000 <parse_counter+0x138>
  403040:	adrp	x4, 403000 <parse_counter+0x138>
  403044:	adrp	x5, 403000 <parse_counter+0x138>
  403048:	add	x2, x2, #0x406
  40304c:	add	x4, x4, #0x8c8
  403050:	add	x5, x5, #0x91a
  403054:	mov	w0, #0x3                   	// #3
  403058:	mov	w3, #0xa7                  	// #167
  40305c:	mov	w1, w25
  403060:	b	4030f8 <parse_counter+0x230>
  403064:	stur	xzr, [x29, #-8]
  403068:	mov	w0, wzr
  40306c:	bl	401590 <log_get_max_level_realm@plt>
  403070:	cmp	w0, #0x4
  403074:	b.lt	4030a0 <parse_counter+0x1d8>  // b.tstop
  403078:	adrp	x2, 403000 <parse_counter+0x138>
  40307c:	adrp	x4, 403000 <parse_counter+0x138>
  403080:	adrp	x5, 403000 <parse_counter+0x138>
  403084:	add	x2, x2, #0x406
  403088:	add	x4, x4, #0x8c8
  40308c:	add	x5, x5, #0x9e2
  403090:	mov	w0, #0x4                   	// #4
  403094:	mov	w3, #0xbe                  	// #190
  403098:	mov	w1, wzr
  40309c:	bl	4015d0 <log_internal_realm@plt>
  4030a0:	str	x23, [x22]
  4030a4:	cbz	x21, 4030b0 <parse_counter+0x1e8>
  4030a8:	ldr	x8, [x29, #24]
  4030ac:	str	x8, [x21]
  4030b0:	mov	w0, wzr
  4030b4:	cbz	x20, 403150 <parse_counter+0x288>
  4030b8:	ldur	x8, [x29, #-8]
  4030bc:	str	x8, [x20]
  4030c0:	b	403150 <parse_counter+0x288>
  4030c4:	bl	401590 <log_get_max_level_realm@plt>
  4030c8:	cmp	w0, #0x3
  4030cc:	b.lt	403104 <parse_counter+0x23c>  // b.tstop
  4030d0:	adrp	x2, 403000 <parse_counter+0x138>
  4030d4:	adrp	x4, 403000 <parse_counter+0x138>
  4030d8:	adrp	x5, 403000 <parse_counter+0x138>
  4030dc:	mov	w1, #0x16                  	// #22
  4030e0:	add	x2, x2, #0x406
  4030e4:	add	x4, x4, #0x8c8
  4030e8:	add	x5, x5, #0x95c
  4030ec:	mov	w0, #0x3                   	// #3
  4030f0:	movk	w1, #0x4000, lsl #16
  4030f4:	mov	w3, #0xb2                  	// #178
  4030f8:	mov	x6, x19
  4030fc:	bl	4015d0 <log_internal_realm@plt>
  403100:	b	403150 <parse_counter+0x288>
  403104:	mov	w0, #0xffffffea            	// #-22
  403108:	b	403150 <parse_counter+0x288>
  40310c:	mov	w25, w0
  403110:	mov	w0, wzr
  403114:	bl	401590 <log_get_max_level_realm@plt>
  403118:	cmp	w0, #0x3
  40311c:	b.lt	403144 <parse_counter+0x27c>  // b.tstop
  403120:	adrp	x2, 403000 <parse_counter+0x138>
  403124:	adrp	x4, 403000 <parse_counter+0x138>
  403128:	adrp	x5, 403000 <parse_counter+0x138>
  40312c:	add	x2, x2, #0x406
  403130:	add	x4, x4, #0x8c8
  403134:	add	x5, x5, #0x9a0
  403138:	mov	w0, #0x3                   	// #3
  40313c:	mov	w3, #0xb7                  	// #183
  403140:	b	40305c <parse_counter+0x194>
  403144:	mov	w8, wzr
  403148:	neg	w9, w25
  40314c:	sub	w0, w8, w9, uxtb
  403150:	mov	sp, x29
  403154:	ldp	x20, x19, [sp, #64]
  403158:	ldp	x22, x21, [sp, #48]
  40315c:	ldp	x24, x23, [sp, #32]
  403160:	ldr	x25, [sp, #16]
  403164:	ldp	x29, x30, [sp], #80
  403168:	ret
  40316c:	adrp	x1, 403000 <parse_counter+0x138>
  403170:	adrp	x2, 403000 <parse_counter+0x138>
  403174:	adrp	x4, 403000 <parse_counter+0x138>
  403178:	add	x1, x1, #0x863
  40317c:	add	x2, x2, #0x406
  403180:	add	x4, x4, #0x868
  403184:	mov	w3, #0x95                  	// #149
  403188:	bl	401620 <log_assert_failed_realm@plt>
  40318c:	adrp	x1, 403000 <parse_counter+0x138>
  403190:	adrp	x2, 403000 <parse_counter+0x138>
  403194:	adrp	x4, 403000 <parse_counter+0x138>
  403198:	add	x1, x1, #0x8af
  40319c:	add	x2, x2, #0x406
  4031a0:	add	x4, x4, #0x868
  4031a4:	mov	w3, #0x96                  	// #150
  4031a8:	mov	w0, wzr
  4031ac:	bl	401620 <log_assert_failed_realm@plt>
  4031b0:	adrp	x1, 403000 <parse_counter+0x138>
  4031b4:	adrp	x2, 403000 <parse_counter+0x138>
  4031b8:	adrp	x4, 403000 <parse_counter+0x138>
  4031bc:	add	x1, x1, #0x8b1
  4031c0:	add	x2, x2, #0x406
  4031c4:	add	x4, x4, #0x868
  4031c8:	mov	w3, #0x99                  	// #153
  4031cc:	mov	w0, wzr
  4031d0:	bl	401620 <log_assert_failed_realm@plt>
  4031d4:	adrp	x1, 403000 <parse_counter+0x138>
  4031d8:	adrp	x2, 403000 <parse_counter+0x138>
  4031dc:	adrp	x4, 403000 <parse_counter+0x138>
  4031e0:	add	x1, x1, #0x8b3
  4031e4:	add	x2, x2, #0x406
  4031e8:	add	x4, x4, #0x868
  4031ec:	mov	w3, #0x9a                  	// #154
  4031f0:	mov	w0, wzr
  4031f4:	bl	401620 <log_assert_failed_realm@plt>

00000000004031f8 <__libc_csu_init>:
  4031f8:	stp	x29, x30, [sp, #-64]!
  4031fc:	mov	x29, sp
  403200:	stp	x19, x20, [sp, #16]
  403204:	adrp	x20, 41f000 <__FRAME_END__+0x1b0d8>
  403208:	add	x20, x20, #0xc00
  40320c:	stp	x21, x22, [sp, #32]
  403210:	adrp	x21, 41f000 <__FRAME_END__+0x1b0d8>
  403214:	add	x21, x21, #0xbf8
  403218:	sub	x20, x20, x21
  40321c:	mov	w22, w0
  403220:	stp	x23, x24, [sp, #48]
  403224:	mov	x23, x1
  403228:	mov	x24, x2
  40322c:	bl	401478 <_init>
  403230:	cmp	xzr, x20, asr #3
  403234:	b.eq	403260 <__libc_csu_init+0x68>  // b.none
  403238:	asr	x20, x20, #3
  40323c:	mov	x19, #0x0                   	// #0
  403240:	ldr	x3, [x21, x19, lsl #3]
  403244:	mov	x2, x24
  403248:	add	x19, x19, #0x1
  40324c:	mov	x1, x23
  403250:	mov	w0, w22
  403254:	blr	x3
  403258:	cmp	x20, x19
  40325c:	b.ne	403240 <__libc_csu_init+0x48>  // b.any
  403260:	ldp	x19, x20, [sp, #16]
  403264:	ldp	x21, x22, [sp, #32]
  403268:	ldp	x23, x24, [sp, #48]
  40326c:	ldp	x29, x30, [sp], #64
  403270:	ret
  403274:	nop

0000000000403278 <__libc_csu_fini>:
  403278:	ret

Disassembly of section .fini:

000000000040327c <_fini>:
  40327c:	stp	x29, x30, [sp, #-16]!
  403280:	mov	x29, sp
  403284:	ldp	x29, x30, [sp], #16
  403288:	ret
