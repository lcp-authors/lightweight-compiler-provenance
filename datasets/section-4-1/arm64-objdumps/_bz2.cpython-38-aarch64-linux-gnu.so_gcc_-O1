
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bz2.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001648 <.init>:
    1648:	stp	x29, x30, [sp, #-16]!
    164c:	mov	x29, sp
    1650:	bl	1940 <PyThread_free_lock@plt+0x10>
    1654:	ldp	x29, x30, [sp], #16
    1658:	ret

Disassembly of section .plt:

0000000000001660 <memcpy@plt-0x20>:
    1660:	stp	x16, x30, [sp, #-16]!
    1664:	adrp	x16, 13000 <PyInit__bz2@@Base+0x106c8>
    1668:	ldr	x17, [x16, #4088]
    166c:	add	x16, x16, #0xff8
    1670:	br	x17
    1674:	nop
    1678:	nop
    167c:	nop

0000000000001680 <memcpy@plt>:
    1680:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1684:	ldr	x17, [x16]
    1688:	add	x16, x16, #0x0
    168c:	br	x17

0000000000001690 <memmove@plt>:
    1690:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1694:	ldr	x17, [x16, #8]
    1698:	add	x16, x16, #0x8
    169c:	br	x17

00000000000016a0 <_PyBytes_Resize@plt>:
    16a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16a4:	ldr	x17, [x16, #16]
    16a8:	add	x16, x16, #0x10
    16ac:	br	x17

00000000000016b0 <PyEval_RestoreThread@plt>:
    16b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16b4:	ldr	x17, [x16, #24]
    16b8:	add	x16, x16, #0x18
    16bc:	br	x17

00000000000016c0 <PyMem_Free@plt>:
    16c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16c4:	ldr	x17, [x16, #32]
    16c8:	add	x16, x16, #0x20
    16cc:	br	x17

00000000000016d0 <PyBuffer_Release@plt>:
    16d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16d4:	ldr	x17, [x16, #40]
    16d8:	add	x16, x16, #0x28
    16dc:	br	x17

00000000000016e0 <__cxa_finalize@plt>:
    16e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16e4:	ldr	x17, [x16, #48]
    16e8:	add	x16, x16, #0x30
    16ec:	br	x17

00000000000016f0 <PyMem_RawMalloc@plt>:
    16f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    16f4:	ldr	x17, [x16, #56]
    16f8:	add	x16, x16, #0x38
    16fc:	br	x17

0000000000001700 <PyBuffer_IsContiguous@plt>:
    1700:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1704:	ldr	x17, [x16, #64]
    1708:	add	x16, x16, #0x40
    170c:	br	x17

0000000000001710 <PyBytes_FromStringAndSize@plt>:
    1710:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1714:	ldr	x17, [x16, #72]
    1718:	add	x16, x16, #0x48
    171c:	br	x17

0000000000001720 <_Py_Dealloc@plt>:
    1720:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1724:	ldr	x17, [x16, #80]
    1728:	add	x16, x16, #0x50
    172c:	br	x17

0000000000001730 <PyErr_NoMemory@plt>:
    1730:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1734:	ldr	x17, [x16, #88]
    1738:	add	x16, x16, #0x58
    173c:	br	x17

0000000000001740 <PyThread_acquire_lock@plt>:
    1740:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1744:	ldr	x17, [x16, #96]
    1748:	add	x16, x16, #0x60
    174c:	br	x17

0000000000001750 <_PyArg_UnpackKeywords@plt>:
    1750:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1754:	ldr	x17, [x16, #104]
    1758:	add	x16, x16, #0x68
    175c:	br	x17

0000000000001760 <PyErr_SetString@plt>:
    1760:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1764:	ldr	x17, [x16, #112]
    1768:	add	x16, x16, #0x70
    176c:	br	x17

0000000000001770 <BZ2_bzDecompressInit@plt>:
    1770:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1774:	ldr	x17, [x16, #120]
    1778:	add	x16, x16, #0x78
    177c:	br	x17

0000000000001780 <BZ2_bzDecompressEnd@plt>:
    1780:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1784:	ldr	x17, [x16, #128]
    1788:	add	x16, x16, #0x80
    178c:	br	x17

0000000000001790 <PyMem_Realloc@plt>:
    1790:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1794:	ldr	x17, [x16, #136]
    1798:	add	x16, x16, #0x88
    179c:	br	x17

00000000000017a0 <PyErr_SetNone@plt>:
    17a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17a4:	ldr	x17, [x16, #144]
    17a8:	add	x16, x16, #0x90
    17ac:	br	x17

00000000000017b0 <BZ2_bzCompressInit@plt>:
    17b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17b4:	ldr	x17, [x16, #152]
    17b8:	add	x16, x16, #0x98
    17bc:	br	x17

00000000000017c0 <PyType_Ready@plt>:
    17c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17c4:	ldr	x17, [x16, #160]
    17c8:	add	x16, x16, #0xa0
    17cc:	br	x17

00000000000017d0 <PyLong_AsSsize_t@plt>:
    17d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17d4:	ldr	x17, [x16, #168]
    17d8:	add	x16, x16, #0xa8
    17dc:	br	x17

00000000000017e0 <_PyArg_BadArgument@plt>:
    17e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17e4:	ldr	x17, [x16, #176]
    17e8:	add	x16, x16, #0xb0
    17ec:	br	x17

00000000000017f0 <BZ2_bzCompressEnd@plt>:
    17f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    17f4:	ldr	x17, [x16, #184]
    17f8:	add	x16, x16, #0xb8
    17fc:	br	x17

0000000000001800 <_PyArg_NoPositional@plt>:
    1800:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1804:	ldr	x17, [x16, #192]
    1808:	add	x16, x16, #0xc0
    180c:	br	x17

0000000000001810 <__gmon_start__@plt>:
    1810:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1814:	ldr	x17, [x16, #200]
    1818:	add	x16, x16, #0xc8
    181c:	br	x17

0000000000001820 <_PyArg_CheckPositional@plt>:
    1820:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1824:	ldr	x17, [x16, #208]
    1828:	add	x16, x16, #0xd0
    182c:	br	x17

0000000000001830 <PyErr_Occurred@plt>:
    1830:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1834:	ldr	x17, [x16, #216]
    1838:	add	x16, x16, #0xd8
    183c:	br	x17

0000000000001840 <PyModule_Create2@plt>:
    1840:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1844:	ldr	x17, [x16, #224]
    1848:	add	x16, x16, #0xe0
    184c:	br	x17

0000000000001850 <BZ2_bzCompress@plt>:
    1850:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1854:	ldr	x17, [x16, #232]
    1858:	add	x16, x16, #0xe8
    185c:	br	x17

0000000000001860 <PyMem_RawFree@plt>:
    1860:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1864:	ldr	x17, [x16, #240]
    1868:	add	x16, x16, #0xf0
    186c:	br	x17

0000000000001870 <PyThread_allocate_lock@plt>:
    1870:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1874:	ldr	x17, [x16, #248]
    1878:	add	x16, x16, #0xf8
    187c:	br	x17

0000000000001880 <BZ2_bzDecompress@plt>:
    1880:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1884:	ldr	x17, [x16, #256]
    1888:	add	x16, x16, #0x100
    188c:	br	x17

0000000000001890 <PyThread_release_lock@plt>:
    1890:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1894:	ldr	x17, [x16, #264]
    1898:	add	x16, x16, #0x108
    189c:	br	x17

00000000000018a0 <PyObject_GetBuffer@plt>:
    18a0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18a4:	ldr	x17, [x16, #272]
    18a8:	add	x16, x16, #0x110
    18ac:	br	x17

00000000000018b0 <PyEval_SaveThread@plt>:
    18b0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18b4:	ldr	x17, [x16, #280]
    18b8:	add	x16, x16, #0x118
    18bc:	br	x17

00000000000018c0 <PyModule_AddObject@plt>:
    18c0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18c4:	ldr	x17, [x16, #288]
    18c8:	add	x16, x16, #0x120
    18cc:	br	x17

00000000000018d0 <PyType_IsSubtype@plt>:
    18d0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18d4:	ldr	x17, [x16, #296]
    18d8:	add	x16, x16, #0x128
    18dc:	br	x17

00000000000018e0 <PyErr_Format@plt>:
    18e0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18e4:	ldr	x17, [x16, #304]
    18e8:	add	x16, x16, #0x130
    18ec:	br	x17

00000000000018f0 <PyNumber_Index@plt>:
    18f0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    18f4:	ldr	x17, [x16, #312]
    18f8:	add	x16, x16, #0x138
    18fc:	br	x17

0000000000001900 <_PyArg_NoKeywords@plt>:
    1900:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1904:	ldr	x17, [x16, #320]
    1908:	add	x16, x16, #0x140
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1914:	ldr	x17, [x16, #328]
    1918:	add	x16, x16, #0x148
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1924:	ldr	x17, [x16, #336]
    1928:	add	x16, x16, #0x150
    192c:	br	x17

0000000000001930 <PyThread_free_lock@plt>:
    1930:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1934:	ldr	x17, [x16, #344]
    1938:	add	x16, x16, #0x158
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__bz2@@Base-0xff8>:
    1940:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1944:	ldr	x0, [x0, #4040]
    1948:	cbz	x0, 1950 <PyThread_free_lock@plt+0x20>
    194c:	b	1810 <__gmon_start__@plt>
    1950:	ret
    1954:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1958:	add	x0, x0, #0x690
    195c:	adrp	x1, 14000 <PyInit__bz2@@Base+0x116c8>
    1960:	add	x1, x1, #0x690
    1964:	cmp	x0, x1
    1968:	b.eq	1994 <PyThread_free_lock@plt+0x64>  // b.none
    196c:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106c8>
    1970:	ldr	x1, [x1, #3976]
    1974:	cbz	x1, 1994 <PyThread_free_lock@plt+0x64>
    1978:	stp	x29, x30, [sp, #-16]!
    197c:	mov	x29, sp
    1980:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1984:	add	x0, x0, #0x690
    1988:	blr	x1
    198c:	ldp	x29, x30, [sp], #16
    1990:	ret
    1994:	ret
    1998:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    199c:	add	x0, x0, #0x690
    19a0:	adrp	x1, 14000 <PyInit__bz2@@Base+0x116c8>
    19a4:	add	x1, x1, #0x690
    19a8:	sub	x0, x0, x1
    19ac:	lsr	x1, x0, #63
    19b0:	add	x0, x1, x0, asr #3
    19b4:	cmp	xzr, x0, asr #1
    19b8:	b.eq	19e8 <PyThread_free_lock@plt+0xb8>  // b.none
    19bc:	asr	x1, x0, #1
    19c0:	adrp	x2, 13000 <PyInit__bz2@@Base+0x106c8>
    19c4:	ldr	x2, [x2, #4064]
    19c8:	cbz	x2, 19e8 <PyThread_free_lock@plt+0xb8>
    19cc:	stp	x29, x30, [sp, #-16]!
    19d0:	mov	x29, sp
    19d4:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    19d8:	add	x0, x0, #0x690
    19dc:	blr	x2
    19e0:	ldp	x29, x30, [sp], #16
    19e4:	ret
    19e8:	ret
    19ec:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    19f0:	ldrb	w0, [x0, #1680]
    19f4:	cbnz	w0, 1a30 <PyThread_free_lock@plt+0x100>
    19f8:	stp	x29, x30, [sp, #-16]!
    19fc:	mov	x29, sp
    1a00:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1a04:	ldr	x0, [x0, #3992]
    1a08:	cbz	x0, 1a18 <PyThread_free_lock@plt+0xe8>
    1a0c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1a10:	ldr	x0, [x0, #352]
    1a14:	bl	16e0 <__cxa_finalize@plt>
    1a18:	bl	1954 <PyThread_free_lock@plt+0x24>
    1a1c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1a20:	mov	w1, #0x1                   	// #1
    1a24:	strb	w1, [x0, #1680]
    1a28:	ldp	x29, x30, [sp], #16
    1a2c:	ret
    1a30:	ret
    1a34:	stp	x29, x30, [sp, #-16]!
    1a38:	mov	x29, sp
    1a3c:	bl	1998 <PyThread_free_lock@plt+0x68>
    1a40:	ldp	x29, x30, [sp], #16
    1a44:	ret
    1a48:	stp	x29, x30, [sp, #-16]!
    1a4c:	mov	x29, sp
    1a50:	cmn	w0, #0x3
    1a54:	b.eq	1b28 <PyThread_free_lock@plt+0x1f8>  // b.none
    1a58:	cmn	w0, #0x2
    1a5c:	b.ge	1ac4 <PyThread_free_lock@plt+0x194>  // b.tcont
    1a60:	cmn	w0, #0x6
    1a64:	b.eq	1b34 <PyThread_free_lock@plt+0x204>  // b.none
    1a68:	cmn	w0, #0x5
    1a6c:	b.lt	1a94 <PyThread_free_lock@plt+0x164>  // b.tstop
    1a70:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1a74:	add	x1, x1, #0x9f8
    1a78:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1a7c:	ldr	x0, [x0, #4032]
    1a80:	ldr	x0, [x0]
    1a84:	bl	1760 <PyErr_SetString@plt>
    1a88:	mov	w0, #0x1                   	// #1
    1a8c:	ldp	x29, x30, [sp], #16
    1a90:	ret
    1a94:	cmn	w0, #0x9
    1a98:	b.eq	1b08 <PyThread_free_lock@plt+0x1d8>  // b.none
    1a9c:	cmn	w0, #0x7
    1aa0:	b.ne	1b74 <PyThread_free_lock@plt+0x244>  // b.any
    1aa4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1aa8:	add	x1, x1, #0xa88
    1aac:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1ab0:	ldr	x0, [x0, #4056]
    1ab4:	ldr	x0, [x0]
    1ab8:	bl	1760 <PyErr_SetString@plt>
    1abc:	mov	w0, #0x1                   	// #1
    1ac0:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1ac4:	cmn	w0, #0x1
    1ac8:	b.eq	1b54 <PyThread_free_lock@plt+0x224>  // b.none
    1acc:	tbnz	w0, #31, 1ae0 <PyThread_free_lock@plt+0x1b0>
    1ad0:	cmp	w0, #0x4
    1ad4:	b.hi	1b74 <PyThread_free_lock@plt+0x244>  // b.pmore
    1ad8:	mov	w0, #0x0                   	// #0
    1adc:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1ae0:	cmn	w0, #0x2
    1ae4:	b.ne	1b74 <PyThread_free_lock@plt+0x244>  // b.any
    1ae8:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1aec:	add	x1, x1, #0xa38
    1af0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1af4:	ldr	x0, [x0, #4016]
    1af8:	ldr	x0, [x0]
    1afc:	bl	1760 <PyErr_SetString@plt>
    1b00:	mov	w0, #0x1                   	// #1
    1b04:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b08:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b0c:	add	x1, x1, #0xa10
    1b10:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1b14:	ldr	x0, [x0, #3968]
    1b18:	ldr	x0, [x0]
    1b1c:	bl	1760 <PyErr_SetString@plt>
    1b20:	mov	w0, #0x1                   	// #1
    1b24:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b28:	bl	1730 <PyErr_NoMemory@plt>
    1b2c:	mov	w0, #0x1                   	// #1
    1b30:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b34:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b38:	add	x1, x1, #0xa70
    1b3c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1b40:	ldr	x0, [x0, #4032]
    1b44:	ldr	x0, [x0]
    1b48:	bl	1760 <PyErr_SetString@plt>
    1b4c:	mov	w0, #0x1                   	// #1
    1b50:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b54:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b58:	add	x1, x1, #0xad0
    1b5c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1b60:	ldr	x0, [x0, #4000]
    1b64:	ldr	x0, [x0]
    1b68:	bl	1760 <PyErr_SetString@plt>
    1b6c:	mov	w0, #0x1                   	// #1
    1b70:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b74:	mov	w2, w0
    1b78:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1b7c:	add	x1, x1, #0xb10
    1b80:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1b84:	ldr	x0, [x0, #4032]
    1b88:	ldr	x0, [x0]
    1b8c:	bl	18e0 <PyErr_Format@plt>
    1b90:	mov	w0, #0x1                   	// #1
    1b94:	b	1a8c <PyThread_free_lock@plt+0x15c>
    1b98:	stp	x29, x30, [sp, #-32]!
    1b9c:	mov	x29, sp
    1ba0:	stp	x19, x20, [sp, #16]
    1ba4:	mov	x19, x0
    1ba8:	mov	x20, x2
    1bac:	ldr	x2, [x0, #8]
    1bb0:	cmp	x1, #0x0
    1bb4:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1bb8:	add	x0, x0, #0x168
    1bbc:	ccmp	x2, x0, #0x0, ne  // ne = any
    1bc0:	b.eq	1c60 <PyThread_free_lock@plt+0x330>  // b.none
    1bc4:	ldr	x1, [x19, #8]
    1bc8:	cmp	x20, #0x0
    1bcc:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    1bd0:	add	x0, x0, #0x168
    1bd4:	ccmp	x1, x0, #0x0, ne  // ne = any
    1bd8:	b.eq	1c78 <PyThread_free_lock@plt+0x348>  // b.none
    1bdc:	bl	1870 <PyThread_allocate_lock@plt>
    1be0:	mov	x20, x0
    1be4:	cbz	x0, 1c94 <PyThread_free_lock@plt+0x364>
    1be8:	ldr	x0, [x19, #144]
    1bec:	cbz	x0, 1bf4 <PyThread_free_lock@plt+0x2c4>
    1bf0:	bl	1930 <PyThread_free_lock@plt>
    1bf4:	str	x20, [x19, #144]
    1bf8:	mov	w0, #0x1                   	// #1
    1bfc:	strb	w0, [x19, #112]
    1c00:	str	xzr, [x19, #136]
    1c04:	str	xzr, [x19, #120]
    1c08:	str	xzr, [x19, #128]
    1c0c:	ldr	x20, [x19, #104]
    1c10:	mov	x1, #0x0                   	// #0
    1c14:	mov	x0, #0x0                   	// #0
    1c18:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1c1c:	str	x0, [x19, #104]
    1c20:	cbz	x20, 1c34 <PyThread_free_lock@plt+0x304>
    1c24:	ldr	x0, [x20]
    1c28:	sub	x0, x0, #0x1
    1c2c:	str	x0, [x20]
    1c30:	cbz	x0, 1cb4 <PyThread_free_lock@plt+0x384>
    1c34:	ldr	x0, [x19, #104]
    1c38:	cbz	x0, 1cdc <PyThread_free_lock@plt+0x3ac>
    1c3c:	mov	w2, #0x0                   	// #0
    1c40:	mov	w1, #0x0                   	// #0
    1c44:	add	x0, x19, #0x10
    1c48:	bl	1770 <BZ2_bzDecompressInit@plt>
    1c4c:	bl	1a48 <PyThread_free_lock@plt+0x118>
    1c50:	cbnz	w0, 1cc0 <PyThread_free_lock@plt+0x390>
    1c54:	ldp	x19, x20, [sp, #16]
    1c58:	ldp	x29, x30, [sp], #32
    1c5c:	ret
    1c60:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1c64:	add	x0, x0, #0xb38
    1c68:	bl	1800 <_PyArg_NoPositional@plt>
    1c6c:	cbnz	w0, 1bc4 <PyThread_free_lock@plt+0x294>
    1c70:	mov	w0, #0xffffffff            	// #-1
    1c74:	b	1c54 <PyThread_free_lock@plt+0x324>
    1c78:	mov	x1, x20
    1c7c:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1c80:	add	x0, x0, #0xb38
    1c84:	bl	1900 <_PyArg_NoKeywords@plt>
    1c88:	cbnz	w0, 1bdc <PyThread_free_lock@plt+0x2ac>
    1c8c:	mov	w0, #0xffffffff            	// #-1
    1c90:	b	1c54 <PyThread_free_lock@plt+0x324>
    1c94:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1c98:	add	x1, x1, #0xb48
    1c9c:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1ca0:	ldr	x0, [x0, #4008]
    1ca4:	ldr	x0, [x0]
    1ca8:	bl	1760 <PyErr_SetString@plt>
    1cac:	mov	w0, #0xffffffff            	// #-1
    1cb0:	b	1c54 <PyThread_free_lock@plt+0x324>
    1cb4:	mov	x0, x20
    1cb8:	bl	1720 <_Py_Dealloc@plt>
    1cbc:	b	1c34 <PyThread_free_lock@plt+0x304>
    1cc0:	ldr	x0, [x19, #104]
    1cc4:	cbz	x0, 1cdc <PyThread_free_lock@plt+0x3ac>
    1cc8:	str	xzr, [x19, #104]
    1ccc:	ldr	x1, [x0]
    1cd0:	sub	x1, x1, #0x1
    1cd4:	str	x1, [x0]
    1cd8:	cbz	x1, 1cf0 <PyThread_free_lock@plt+0x3c0>
    1cdc:	ldr	x0, [x19, #144]
    1ce0:	bl	1930 <PyThread_free_lock@plt>
    1ce4:	str	xzr, [x19, #144]
    1ce8:	mov	w0, #0xffffffff            	// #-1
    1cec:	b	1c54 <PyThread_free_lock@plt+0x324>
    1cf0:	bl	1720 <_Py_Dealloc@plt>
    1cf4:	b	1cdc <PyThread_free_lock@plt+0x3ac>
    1cf8:	stp	x29, x30, [sp, #-16]!
    1cfc:	mov	x29, sp
    1d00:	mov	x2, x1
    1d04:	ldr	x1, [x0]
    1d08:	ldr	x4, [x1, #16]
    1d0c:	lsr	x3, x4, #3
    1d10:	add	x5, x4, #0x6
    1d14:	add	x1, x3, x5
    1d18:	cmp	x2, #0x0
    1d1c:	ccmp	x2, x1, #0x2, gt
    1d20:	csel	x1, x1, x2, cs  // cs = hs, nlast
    1d24:	cmp	x1, x4
    1d28:	b.ls	1d38 <PyThread_free_lock@plt+0x408>  // b.plast
    1d2c:	bl	16a0 <_PyBytes_Resize@plt>
    1d30:	ldp	x29, x30, [sp], #16
    1d34:	ret
    1d38:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1d3c:	add	x1, x1, #0xb60
    1d40:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1d44:	ldr	x0, [x0, #4048]
    1d48:	ldr	x0, [x0]
    1d4c:	bl	1760 <PyErr_SetString@plt>
    1d50:	mov	w0, #0xffffffff            	// #-1
    1d54:	b	1d30 <PyThread_free_lock@plt+0x400>
    1d58:	sub	sp, sp, #0xe0
    1d5c:	stp	x29, x30, [sp, #16]
    1d60:	add	x29, sp, #0x10
    1d64:	stp	x19, x20, [sp, #32]
    1d68:	stp	x21, x22, [sp, #48]
    1d6c:	mov	x19, x0
    1d70:	mov	x20, x1
    1d74:	mov	x1, x2
    1d78:	cbz	x3, 1f20 <PyThread_free_lock@plt+0x5f0>
    1d7c:	ldr	x22, [x3, #16]
    1d80:	add	x22, x2, x22
    1d84:	stp	xzr, xzr, [sp, #128]
    1d88:	stp	xzr, xzr, [sp, #144]
    1d8c:	stp	xzr, xzr, [sp, #160]
    1d90:	stp	xzr, xzr, [sp, #176]
    1d94:	stp	xzr, xzr, [sp, #192]
    1d98:	add	x0, sp, #0xd0
    1d9c:	str	x0, [sp]
    1da0:	mov	w7, #0x0                   	// #0
    1da4:	mov	w6, #0x2                   	// #2
    1da8:	mov	w5, #0x1                   	// #1
    1dac:	adrp	x4, 14000 <PyInit__bz2@@Base+0x116c8>
    1db0:	add	x4, x4, #0x4a8
    1db4:	mov	x2, #0x0                   	// #0
    1db8:	mov	x0, x20
    1dbc:	bl	1750 <_PyArg_UnpackKeywords@plt>
    1dc0:	mov	x20, x0
    1dc4:	mov	x21, x0
    1dc8:	cbz	x0, 2018 <PyThread_free_lock@plt+0x6e8>
    1dcc:	mov	w2, #0x0                   	// #0
    1dd0:	add	x1, sp, #0x80
    1dd4:	ldr	x0, [x20]
    1dd8:	bl	18a0 <PyObject_GetBuffer@plt>
    1ddc:	mov	x21, #0x0                   	// #0
    1de0:	cbnz	w0, 2018 <PyThread_free_lock@plt+0x6e8>
    1de4:	mov	w1, #0x43                  	// #67
    1de8:	add	x0, sp, #0x80
    1dec:	bl	1700 <PyBuffer_IsContiguous@plt>
    1df0:	cbz	w0, 1f54 <PyThread_free_lock@plt+0x624>
    1df4:	stp	x23, x24, [sp, #64]
    1df8:	cmp	x22, #0x1
    1dfc:	b.eq	1fc0 <PyThread_free_lock@plt+0x690>  // b.none
    1e00:	ldr	x0, [x20, #8]
    1e04:	ldr	x0, [x0, #8]
    1e08:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106c8>
    1e0c:	ldr	x1, [x1, #3984]
    1e10:	cmp	x0, x1
    1e14:	b.eq	1f78 <PyThread_free_lock@plt+0x648>  // b.none
    1e18:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106c8>
    1e1c:	ldr	x1, [x1, #3984]
    1e20:	bl	18d0 <PyType_IsSubtype@plt>
    1e24:	cbnz	w0, 1f78 <PyThread_free_lock@plt+0x648>
    1e28:	ldr	x0, [x20, #8]
    1e2c:	bl	18f0 <PyNumber_Index@plt>
    1e30:	mov	x20, x0
    1e34:	cbz	x0, 1fa8 <PyThread_free_lock@plt+0x678>
    1e38:	bl	17d0 <PyLong_AsSsize_t@plt>
    1e3c:	mov	x23, x0
    1e40:	ldr	x0, [x20]
    1e44:	sub	x0, x0, #0x1
    1e48:	str	x0, [x20]
    1e4c:	cbz	x0, 1f9c <PyThread_free_lock@plt+0x66c>
    1e50:	cmn	x23, #0x1
    1e54:	b.eq	1fa8 <PyThread_free_lock@plt+0x678>  // b.none
    1e58:	stp	x25, x26, [sp, #80]
    1e5c:	mov	w1, #0x0                   	// #0
    1e60:	ldr	x0, [x19, #144]
    1e64:	bl	1740 <PyThread_acquire_lock@plt>
    1e68:	cbz	w0, 1fcc <PyThread_free_lock@plt+0x69c>
    1e6c:	ldrb	w25, [x19, #96]
    1e70:	cbnz	w25, 1fec <PyThread_free_lock@plt+0x6bc>
    1e74:	ldr	x24, [sp, #128]
    1e78:	ldr	x20, [sp, #144]
    1e7c:	ldr	x1, [x19, #16]
    1e80:	cbz	x1, 2094 <PyThread_free_lock@plt+0x764>
    1e84:	ldr	x0, [x19, #120]
    1e88:	ldr	x3, [x19, #128]
    1e8c:	ldr	x2, [x19, #136]
    1e90:	add	x25, x0, x3
    1e94:	add	x4, x1, x2
    1e98:	sub	x25, x25, x4
    1e9c:	sub	x4, x3, x2
    1ea0:	cmp	x20, x4
    1ea4:	b.hi	2040 <PyThread_free_lock@plt+0x710>  // b.pmore
    1ea8:	cmp	x20, x25
    1eac:	b.hi	2084 <PyThread_free_lock@plt+0x754>  // b.pmore
    1eb0:	ldr	x3, [x19, #16]
    1eb4:	ldr	x0, [x19, #136]
    1eb8:	mov	x2, x20
    1ebc:	mov	x1, x24
    1ec0:	add	x0, x3, x0
    1ec4:	bl	1680 <memcpy@plt>
    1ec8:	ldr	x0, [x19, #136]
    1ecc:	add	x20, x0, x20
    1ed0:	str	x20, [x19, #136]
    1ed4:	mov	w25, #0x1                   	// #1
    1ed8:	add	x24, x19, #0x10
    1edc:	mov	x0, #0x1fff                	// #8191
    1ee0:	cmp	x23, x0
    1ee4:	b.ls	20a0 <PyThread_free_lock@plt+0x770>  // b.plast
    1ee8:	mov	x1, #0x2000                	// #8192
    1eec:	mov	x0, #0x0                   	// #0
    1ef0:	bl	1710 <PyBytes_FromStringAndSize@plt>
    1ef4:	str	x0, [sp, #120]
    1ef8:	ldr	x0, [sp, #120]
    1efc:	cbz	x0, 21bc <PyThread_free_lock@plt+0x88c>
    1f00:	stp	x27, x28, [sp, #96]
    1f04:	add	x0, x0, #0x20
    1f08:	str	x0, [x19, #40]
    1f0c:	mov	x20, #0x0                   	// #0
    1f10:	mov	x22, #0xffffffff            	// #4294967295
    1f14:	add	x21, x19, #0x10
    1f18:	add	x26, sp, #0x78
    1f1c:	b	20e4 <PyThread_free_lock@plt+0x7b4>
    1f20:	stp	xzr, xzr, [sp, #128]
    1f24:	stp	xzr, xzr, [sp, #144]
    1f28:	stp	xzr, xzr, [sp, #160]
    1f2c:	stp	xzr, xzr, [sp, #176]
    1f30:	stp	xzr, xzr, [sp, #192]
    1f34:	sub	x0, x2, #0x1
    1f38:	cmp	x0, #0x1
    1f3c:	b.hi	1f4c <PyThread_free_lock@plt+0x61c>  // b.pmore
    1f40:	mov	x22, x2
    1f44:	cbz	x20, 1d98 <PyThread_free_lock@plt+0x468>
    1f48:	b	1dcc <PyThread_free_lock@plt+0x49c>
    1f4c:	mov	x22, x2
    1f50:	b	1d98 <PyThread_free_lock@plt+0x468>
    1f54:	ldr	x3, [x20]
    1f58:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    1f5c:	add	x2, x2, #0xb90
    1f60:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1f64:	add	x1, x1, #0xba8
    1f68:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    1f6c:	add	x0, x0, #0xbb8
    1f70:	bl	17e0 <_PyArg_BadArgument@plt>
    1f74:	b	2018 <PyThread_free_lock@plt+0x6e8>
    1f78:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1f7c:	add	x1, x1, #0xbc8
    1f80:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1f84:	ldr	x0, [x0, #4024]
    1f88:	ldr	x0, [x0]
    1f8c:	bl	1760 <PyErr_SetString@plt>
    1f90:	mov	x21, #0x0                   	// #0
    1f94:	ldp	x23, x24, [sp, #64]
    1f98:	b	2018 <PyThread_free_lock@plt+0x6e8>
    1f9c:	mov	x0, x20
    1fa0:	bl	1720 <_Py_Dealloc@plt>
    1fa4:	b	1e50 <PyThread_free_lock@plt+0x520>
    1fa8:	bl	1830 <PyErr_Occurred@plt>
    1fac:	mov	x21, #0x0                   	// #0
    1fb0:	cbnz	x0, 2320 <PyThread_free_lock@plt+0x9f0>
    1fb4:	stp	x25, x26, [sp, #80]
    1fb8:	mov	x23, #0xffffffffffffffff    	// #-1
    1fbc:	b	1e5c <PyThread_free_lock@plt+0x52c>
    1fc0:	stp	x25, x26, [sp, #80]
    1fc4:	mov	x23, #0xffffffffffffffff    	// #-1
    1fc8:	b	1e5c <PyThread_free_lock@plt+0x52c>
    1fcc:	bl	18b0 <PyEval_SaveThread@plt>
    1fd0:	mov	x20, x0
    1fd4:	mov	w1, #0x1                   	// #1
    1fd8:	ldr	x0, [x19, #144]
    1fdc:	bl	1740 <PyThread_acquire_lock@plt>
    1fe0:	mov	x0, x20
    1fe4:	bl	16b0 <PyEval_RestoreThread@plt>
    1fe8:	b	1e6c <PyThread_free_lock@plt+0x53c>
    1fec:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    1ff0:	add	x1, x1, #0xbf0
    1ff4:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    1ff8:	ldr	x0, [x0, #4056]
    1ffc:	ldr	x0, [x0]
    2000:	bl	1760 <PyErr_SetString@plt>
    2004:	mov	x21, #0x0                   	// #0
    2008:	ldr	x0, [x19, #144]
    200c:	bl	1890 <PyThread_release_lock@plt>
    2010:	ldp	x23, x24, [sp, #64]
    2014:	ldp	x25, x26, [sp, #80]
    2018:	ldr	x0, [sp, #136]
    201c:	cbz	x0, 2028 <PyThread_free_lock@plt+0x6f8>
    2020:	add	x0, sp, #0x80
    2024:	bl	16d0 <PyBuffer_Release@plt>
    2028:	mov	x0, x21
    202c:	ldp	x19, x20, [sp, #32]
    2030:	ldp	x21, x22, [sp, #48]
    2034:	ldp	x29, x30, [sp, #16]
    2038:	add	sp, sp, #0xe0
    203c:	ret
    2040:	sub	x22, x1, x0
    2044:	add	x3, x20, x3
    2048:	sub	x25, x3, x25
    204c:	mov	x1, x25
    2050:	bl	1790 <PyMem_Realloc@plt>
    2054:	mov	x21, x0
    2058:	cbz	x0, 2070 <PyThread_free_lock@plt+0x740>
    205c:	str	x0, [x19, #120]
    2060:	str	x25, [x19, #128]
    2064:	add	x1, x0, x22
    2068:	str	x1, [x19, #16]
    206c:	b	1eb0 <PyThread_free_lock@plt+0x580>
    2070:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    2074:	ldr	x0, [x0, #4008]
    2078:	ldr	x0, [x0]
    207c:	bl	17a0 <PyErr_SetNone@plt>
    2080:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2084:	bl	1690 <memmove@plt>
    2088:	ldr	x0, [x19, #120]
    208c:	str	x0, [x19, #16]
    2090:	b	1eb0 <PyThread_free_lock@plt+0x580>
    2094:	str	x24, [x19, #16]
    2098:	str	x20, [x19, #136]
    209c:	b	1ed8 <PyThread_free_lock@plt+0x5a8>
    20a0:	mov	x1, x23
    20a4:	mov	x0, #0x0                   	// #0
    20a8:	bl	1710 <PyBytes_FromStringAndSize@plt>
    20ac:	str	x0, [sp, #120]
    20b0:	b	1ef8 <PyThread_free_lock@plt+0x5c8>
    20b4:	mov	w0, #0x1                   	// #1
    20b8:	strb	w0, [x19, #96]
    20bc:	ldr	x0, [sp, #120]
    20c0:	ldr	x0, [x0, #16]
    20c4:	cmp	x20, x0
    20c8:	b.ne	21c8 <PyThread_free_lock@plt+0x898>  // b.any
    20cc:	ldr	x21, [sp, #120]
    20d0:	b	21e4 <PyThread_free_lock@plt+0x8b4>
    20d4:	ldr	x0, [sp, #120]
    20d8:	add	x0, x0, #0x20
    20dc:	add	x0, x0, x20
    20e0:	str	x0, [x21, #24]
    20e4:	ldr	x0, [sp, #120]
    20e8:	ldr	x1, [x0, #16]
    20ec:	sub	x20, x1, x20
    20f0:	cmp	x20, x22
    20f4:	csel	x20, x20, x22, ls  // ls = plast
    20f8:	str	w20, [x21, #32]
    20fc:	ldr	x0, [x19, #136]
    2100:	cmp	x0, x22
    2104:	csel	x1, x0, x22, ls  // ls = plast
    2108:	str	w1, [x21, #8]
    210c:	sub	x0, x0, x1
    2110:	str	x0, [x19, #136]
    2114:	bl	18b0 <PyEval_SaveThread@plt>
    2118:	mov	x28, x0
    211c:	mov	x0, x24
    2120:	bl	1880 <BZ2_bzDecompress@plt>
    2124:	mov	w27, w0
    2128:	ldr	x20, [sp, #120]
    212c:	add	x0, x20, #0x20
    2130:	ldr	x20, [x21, #24]
    2134:	sub	x20, x20, x0
    2138:	ldr	w1, [x21, #8]
    213c:	ldr	x0, [x19, #136]
    2140:	add	x0, x0, x1
    2144:	str	x0, [x19, #136]
    2148:	mov	x0, x28
    214c:	bl	16b0 <PyEval_RestoreThread@plt>
    2150:	mov	w0, w27
    2154:	bl	1a48 <PyThread_free_lock@plt+0x118>
    2158:	cbnz	w0, 21a0 <PyThread_free_lock@plt+0x870>
    215c:	cmp	w27, #0x4
    2160:	b.eq	20b4 <PyThread_free_lock@plt+0x784>  // b.none
    2164:	ldr	x0, [x19, #136]
    2168:	cbz	x0, 20bc <PyThread_free_lock@plt+0x78c>
    216c:	ldr	w0, [x21, #32]
    2170:	cbnz	w0, 20e4 <PyThread_free_lock@plt+0x7b4>
    2174:	cmp	x23, x20
    2178:	b.eq	20bc <PyThread_free_lock@plt+0x78c>  // b.none
    217c:	ldr	x0, [sp, #120]
    2180:	ldr	x0, [x0, #16]
    2184:	cmp	x20, x0
    2188:	b.ne	20d4 <PyThread_free_lock@plt+0x7a4>  // b.any
    218c:	mov	x1, x23
    2190:	mov	x0, x26
    2194:	bl	1cf8 <PyThread_free_lock@plt+0x3c8>
    2198:	cmn	w0, #0x1
    219c:	b.ne	20d4 <PyThread_free_lock@plt+0x7a4>  // b.any
    21a0:	ldr	x0, [sp, #120]
    21a4:	cbz	x0, 2214 <PyThread_free_lock@plt+0x8e4>
    21a8:	ldr	x1, [x0]
    21ac:	sub	x1, x1, #0x1
    21b0:	str	x1, [x0]
    21b4:	cbz	x1, 2208 <PyThread_free_lock@plt+0x8d8>
    21b8:	ldp	x27, x28, [sp, #96]
    21bc:	str	xzr, [x19, #16]
    21c0:	mov	x21, #0x0                   	// #0
    21c4:	b	2008 <PyThread_free_lock@plt+0x6d8>
    21c8:	mov	x1, x20
    21cc:	add	x0, sp, #0x78
    21d0:	bl	16a0 <_PyBytes_Resize@plt>
    21d4:	cmn	w0, #0x1
    21d8:	b.eq	21a0 <PyThread_free_lock@plt+0x870>  // b.none
    21dc:	ldr	x21, [sp, #120]
    21e0:	cbz	x21, 2200 <PyThread_free_lock@plt+0x8d0>
    21e4:	ldrb	w0, [x19, #96]
    21e8:	cbz	w0, 225c <PyThread_free_lock@plt+0x92c>
    21ec:	strb	wzr, [x19, #112]
    21f0:	ldr	x1, [x19, #136]
    21f4:	cbnz	x1, 221c <PyThread_free_lock@plt+0x8ec>
    21f8:	ldp	x27, x28, [sp, #96]
    21fc:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2200:	ldp	x27, x28, [sp, #96]
    2204:	b	21bc <PyThread_free_lock@plt+0x88c>
    2208:	bl	1720 <_Py_Dealloc@plt>
    220c:	ldp	x27, x28, [sp, #96]
    2210:	b	21bc <PyThread_free_lock@plt+0x88c>
    2214:	ldp	x27, x28, [sp, #96]
    2218:	b	21bc <PyThread_free_lock@plt+0x88c>
    221c:	ldr	x20, [x19, #104]
    2220:	ldr	x0, [x19, #16]
    2224:	bl	1710 <PyBytes_FromStringAndSize@plt>
    2228:	str	x0, [x19, #104]
    222c:	cbz	x20, 2240 <PyThread_free_lock@plt+0x910>
    2230:	ldr	x0, [x20]
    2234:	sub	x0, x0, #0x1
    2238:	str	x0, [x20]
    223c:	cbz	x0, 2250 <PyThread_free_lock@plt+0x920>
    2240:	ldr	x0, [x19, #104]
    2244:	cbz	x0, 22e8 <PyThread_free_lock@plt+0x9b8>
    2248:	ldp	x27, x28, [sp, #96]
    224c:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2250:	mov	x0, x20
    2254:	bl	1720 <_Py_Dealloc@plt>
    2258:	b	2240 <PyThread_free_lock@plt+0x910>
    225c:	ldr	x1, [x19, #136]
    2260:	cbnz	x1, 2278 <PyThread_free_lock@plt+0x948>
    2264:	str	xzr, [x19, #16]
    2268:	mov	w0, #0x1                   	// #1
    226c:	strb	w0, [x19, #112]
    2270:	ldp	x27, x28, [sp, #96]
    2274:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2278:	strb	wzr, [x19, #112]
    227c:	cbnz	w25, 2318 <PyThread_free_lock@plt+0x9e8>
    2280:	ldr	x0, [x19, #120]
    2284:	cbz	x0, 22bc <PyThread_free_lock@plt+0x98c>
    2288:	ldr	x2, [x19, #128]
    228c:	cmp	x1, x2
    2290:	b.hi	22b4 <PyThread_free_lock@plt+0x984>  // b.pmore
    2294:	ldr	x2, [x19, #136]
    2298:	ldr	x1, [x19, #16]
    229c:	ldr	x0, [x19, #120]
    22a0:	bl	1680 <memcpy@plt>
    22a4:	ldr	x0, [x19, #120]
    22a8:	str	x0, [x19, #16]
    22ac:	ldp	x27, x28, [sp, #96]
    22b0:	b	2008 <PyThread_free_lock@plt+0x6d8>
    22b4:	bl	16c0 <PyMem_Free@plt>
    22b8:	str	xzr, [x19, #120]
    22bc:	ldr	x0, [x19, #136]
    22c0:	bl	1920 <PyMem_Malloc@plt>
    22c4:	str	x0, [x19, #120]
    22c8:	cbz	x0, 22d8 <PyThread_free_lock@plt+0x9a8>
    22cc:	ldr	x0, [x19, #136]
    22d0:	str	x0, [x19, #128]
    22d4:	b	2294 <PyThread_free_lock@plt+0x964>
    22d8:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    22dc:	ldr	x0, [x0, #4008]
    22e0:	ldr	x0, [x0]
    22e4:	bl	17a0 <PyErr_SetNone@plt>
    22e8:	ldr	x0, [x21]
    22ec:	sub	x0, x0, #0x1
    22f0:	str	x0, [x21]
    22f4:	cbz	x0, 2304 <PyThread_free_lock@plt+0x9d4>
    22f8:	mov	x21, #0x0                   	// #0
    22fc:	ldp	x27, x28, [sp, #96]
    2300:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2304:	mov	x0, x21
    2308:	bl	1720 <_Py_Dealloc@plt>
    230c:	mov	x21, #0x0                   	// #0
    2310:	ldp	x27, x28, [sp, #96]
    2314:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2318:	ldp	x27, x28, [sp, #96]
    231c:	b	2008 <PyThread_free_lock@plt+0x6d8>
    2320:	ldp	x23, x24, [sp, #64]
    2324:	b	2018 <PyThread_free_lock@plt+0x6e8>
    2328:	stp	x29, x30, [sp, #-32]!
    232c:	mov	x29, sp
    2330:	str	x19, [sp, #16]
    2334:	mov	x19, x0
    2338:	ldr	x0, [x0, #120]
    233c:	cbz	x0, 2344 <PyThread_free_lock@plt+0xa14>
    2340:	bl	16c0 <PyMem_Free@plt>
    2344:	add	x0, x19, #0x10
    2348:	bl	1780 <BZ2_bzDecompressEnd@plt>
    234c:	ldr	x0, [x19, #104]
    2350:	cbz	x0, 2368 <PyThread_free_lock@plt+0xa38>
    2354:	str	xzr, [x19, #104]
    2358:	ldr	x1, [x0]
    235c:	sub	x1, x1, #0x1
    2360:	str	x1, [x0]
    2364:	cbz	x1, 2390 <PyThread_free_lock@plt+0xa60>
    2368:	ldr	x0, [x19, #144]
    236c:	cbz	x0, 2374 <PyThread_free_lock@plt+0xa44>
    2370:	bl	1930 <PyThread_free_lock@plt>
    2374:	ldr	x0, [x19, #8]
    2378:	ldr	x1, [x0, #320]
    237c:	mov	x0, x19
    2380:	blr	x1
    2384:	ldr	x19, [sp, #16]
    2388:	ldp	x29, x30, [sp], #32
    238c:	ret
    2390:	bl	1720 <_Py_Dealloc@plt>
    2394:	b	2368 <PyThread_free_lock@plt+0xa38>
    2398:	stp	x29, x30, [sp, #-32]!
    239c:	mov	x29, sp
    23a0:	stp	x19, x20, [sp, #16]
    23a4:	mov	x20, x0
    23a8:	mov	x19, x1
    23ac:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    23b0:	add	x0, x0, #0x168
    23b4:	ldr	x1, [x20, #8]
    23b8:	cmp	x2, #0x0
    23bc:	add	x0, x0, #0x1a0
    23c0:	ccmp	x1, x0, #0x0, ne  // ne = any
    23c4:	b.eq	2480 <PyThread_free_lock@plt+0xb50>  // b.none
    23c8:	ldr	x1, [x19, #16]
    23cc:	cmp	x1, #0x1
    23d0:	b.hi	249c <PyThread_free_lock@plt+0xb6c>  // b.pmore
    23d4:	ldr	x0, [x19, #16]
    23d8:	cmp	x0, #0x0
    23dc:	b.le	2504 <PyThread_free_lock@plt+0xbd4>
    23e0:	ldr	x0, [x19, #24]
    23e4:	ldr	x0, [x0, #8]
    23e8:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106c8>
    23ec:	ldr	x1, [x1, #3984]
    23f0:	cmp	x0, x1
    23f4:	b.eq	24bc <PyThread_free_lock@plt+0xb8c>  // b.none
    23f8:	adrp	x1, 13000 <PyInit__bz2@@Base+0x106c8>
    23fc:	ldr	x1, [x1, #3984]
    2400:	bl	18d0 <PyType_IsSubtype@plt>
    2404:	cbnz	w0, 24bc <PyThread_free_lock@plt+0xb8c>
    2408:	ldr	x0, [x19, #24]
    240c:	bl	1910 <_PyLong_AsInt@plt>
    2410:	mov	w19, w0
    2414:	cmn	w0, #0x1
    2418:	b.eq	24dc <PyThread_free_lock@plt+0xbac>  // b.none
    241c:	sub	w0, w0, #0x1
    2420:	cmp	w0, #0x8
    2424:	b.hi	24e4 <PyThread_free_lock@plt+0xbb4>  // b.pmore
    2428:	bl	1870 <PyThread_allocate_lock@plt>
    242c:	str	x0, [x20, #104]
    2430:	cbz	x0, 250c <PyThread_free_lock@plt+0xbdc>
    2434:	str	xzr, [x20, #88]
    2438:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    243c:	add	x0, x0, #0x558
    2440:	str	x0, [x20, #72]
    2444:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    2448:	add	x0, x0, #0x540
    244c:	str	x0, [x20, #80]
    2450:	mov	w3, #0x0                   	// #0
    2454:	mov	w2, #0x0                   	// #0
    2458:	mov	w1, w19
    245c:	add	x0, x20, #0x10
    2460:	bl	17b0 <BZ2_bzCompressInit@plt>
    2464:	bl	1a48 <PyThread_free_lock@plt+0x118>
    2468:	mov	w19, w0
    246c:	cbnz	w0, 252c <PyThread_free_lock@plt+0xbfc>
    2470:	mov	w0, w19
    2474:	ldp	x19, x20, [sp, #16]
    2478:	ldp	x29, x30, [sp], #32
    247c:	ret
    2480:	mov	x1, x2
    2484:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    2488:	add	x0, x0, #0xc10
    248c:	bl	1900 <_PyArg_NoKeywords@plt>
    2490:	cbnz	w0, 23c8 <PyThread_free_lock@plt+0xa98>
    2494:	mov	w19, #0xffffffff            	// #-1
    2498:	b	2470 <PyThread_free_lock@plt+0xb40>
    249c:	mov	x3, #0x1                   	// #1
    24a0:	mov	x2, #0x0                   	// #0
    24a4:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    24a8:	add	x0, x0, #0xc10
    24ac:	bl	1820 <_PyArg_CheckPositional@plt>
    24b0:	cbnz	w0, 23d4 <PyThread_free_lock@plt+0xaa4>
    24b4:	mov	w19, #0xffffffff            	// #-1
    24b8:	b	2470 <PyThread_free_lock@plt+0xb40>
    24bc:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    24c0:	add	x1, x1, #0xbc8
    24c4:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    24c8:	ldr	x0, [x0, #4024]
    24cc:	ldr	x0, [x0]
    24d0:	bl	1760 <PyErr_SetString@plt>
    24d4:	mov	w19, #0xffffffff            	// #-1
    24d8:	b	2470 <PyThread_free_lock@plt+0xb40>
    24dc:	bl	1830 <PyErr_Occurred@plt>
    24e0:	cbnz	x0, 2470 <PyThread_free_lock@plt+0xb40>
    24e4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    24e8:	add	x1, x1, #0xc20
    24ec:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    24f0:	ldr	x0, [x0, #4016]
    24f4:	ldr	x0, [x0]
    24f8:	bl	1760 <PyErr_SetString@plt>
    24fc:	mov	w19, #0xffffffff            	// #-1
    2500:	b	2470 <PyThread_free_lock@plt+0xb40>
    2504:	mov	w19, #0x9                   	// #9
    2508:	b	2428 <PyThread_free_lock@plt+0xaf8>
    250c:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    2510:	add	x1, x1, #0xb48
    2514:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    2518:	ldr	x0, [x0, #4008]
    251c:	ldr	x0, [x0]
    2520:	bl	1760 <PyErr_SetString@plt>
    2524:	mov	w19, #0xffffffff            	// #-1
    2528:	b	2470 <PyThread_free_lock@plt+0xb40>
    252c:	ldr	x0, [x20, #104]
    2530:	bl	1930 <PyThread_free_lock@plt>
    2534:	str	xzr, [x20, #104]
    2538:	mov	w19, #0xffffffff            	// #-1
    253c:	b	2470 <PyThread_free_lock@plt+0xb40>
    2540:	stp	x29, x30, [sp, #-16]!
    2544:	mov	x29, sp
    2548:	mov	x0, x1
    254c:	bl	1860 <PyMem_RawFree@plt>
    2550:	ldp	x29, x30, [sp], #16
    2554:	ret
    2558:	cmp	w1, #0x0
    255c:	ccmp	w2, #0x0, #0x1, ge  // ge = tcont
    2560:	b.lt	257c <PyThread_free_lock@plt+0xc4c>  // b.tstop
    2564:	stp	x29, x30, [sp, #-16]!
    2568:	mov	x29, sp
    256c:	smull	x0, w2, w1
    2570:	bl	16f0 <PyMem_RawMalloc@plt>
    2574:	ldp	x29, x30, [sp], #16
    2578:	ret
    257c:	mov	x0, #0x0                   	// #0
    2580:	ret
    2584:	stp	x29, x30, [sp, #-112]!
    2588:	mov	x29, sp
    258c:	stp	x19, x20, [sp, #16]
    2590:	stp	x23, x24, [sp, #48]
    2594:	mov	x19, x0
    2598:	mov	x20, x1
    259c:	mov	x24, x2
    25a0:	mov	w23, w3
    25a4:	mov	x1, #0x2000                	// #8192
    25a8:	mov	x0, #0x0                   	// #0
    25ac:	bl	1710 <PyBytes_FromStringAndSize@plt>
    25b0:	str	x0, [sp, #104]
    25b4:	cbz	x0, 26a4 <PyThread_free_lock@plt+0xd74>
    25b8:	stp	x21, x22, [sp, #32]
    25bc:	stp	x25, x26, [sp, #64]
    25c0:	stp	x27, x28, [sp, #80]
    25c4:	str	x20, [x19, #16]
    25c8:	str	wzr, [x19, #24]
    25cc:	add	x0, x0, #0x20
    25d0:	str	x0, [x19, #40]
    25d4:	mov	w0, #0x2000                	// #8192
    25d8:	str	w0, [x19, #48]
    25dc:	mov	x22, #0x0                   	// #0
    25e0:	mov	x26, #0xffffffff            	// #4294967295
    25e4:	add	x28, sp, #0x68
    25e8:	add	x27, x19, #0x10
    25ec:	b	266c <PyThread_free_lock@plt+0xd3c>
    25f0:	cmp	x24, x26
    25f4:	csel	x0, x24, x26, ls  // ls = plast
    25f8:	str	w0, [x19, #24]
    25fc:	sub	x24, x24, x0
    2600:	ldr	w0, [x19, #48]
    2604:	cbnz	w0, 2624 <PyThread_free_lock@plt+0xcf4>
    2608:	ldr	x0, [sp, #104]
    260c:	ldr	x0, [x0, #16]
    2610:	subs	x0, x0, x22
    2614:	b.eq	26b4 <PyThread_free_lock@plt+0xd84>  // b.none
    2618:	cmp	x0, x26
    261c:	csel	x0, x0, x26, ls  // ls = plast
    2620:	str	w0, [x19, #48]
    2624:	bl	18b0 <PyEval_SaveThread@plt>
    2628:	mov	x21, x0
    262c:	ldr	x25, [x19, #40]
    2630:	mov	w1, w23
    2634:	mov	x0, x27
    2638:	bl	1850 <BZ2_bzCompress@plt>
    263c:	mov	w20, w0
    2640:	ldr	x0, [x19, #40]
    2644:	sub	x25, x0, x25
    2648:	add	x22, x22, x25
    264c:	mov	x0, x21
    2650:	bl	16b0 <PyEval_RestoreThread@plt>
    2654:	mov	w0, w20
    2658:	bl	1a48 <PyThread_free_lock@plt+0x118>
    265c:	cbnz	w0, 26f0 <PyThread_free_lock@plt+0xdc0>
    2660:	cmp	w23, #0x2
    2664:	ccmp	w20, #0x4, #0x0, eq  // eq = none
    2668:	b.eq	2684 <PyThread_free_lock@plt+0xd54>  // b.none
    266c:	ldr	w0, [x19, #24]
    2670:	cmp	x24, #0x0
    2674:	ccmp	w0, #0x0, #0x0, ne  // ne = any
    2678:	b.eq	25f0 <PyThread_free_lock@plt+0xcc0>  // b.none
    267c:	cbnz	w23, 2600 <PyThread_free_lock@plt+0xcd0>
    2680:	cbnz	w0, 2600 <PyThread_free_lock@plt+0xcd0>
    2684:	ldr	x0, [sp, #104]
    2688:	ldr	x0, [x0, #16]
    268c:	cmp	x0, x22
    2690:	b.ne	26e0 <PyThread_free_lock@plt+0xdb0>  // b.any
    2694:	ldr	x0, [sp, #104]
    2698:	ldp	x21, x22, [sp, #32]
    269c:	ldp	x25, x26, [sp, #64]
    26a0:	ldp	x27, x28, [sp, #80]
    26a4:	ldp	x19, x20, [sp, #16]
    26a8:	ldp	x23, x24, [sp, #48]
    26ac:	ldp	x29, x30, [sp], #112
    26b0:	ret
    26b4:	mov	x1, #0xffffffffffffffff    	// #-1
    26b8:	mov	x0, x28
    26bc:	bl	1cf8 <PyThread_free_lock@plt+0x3c8>
    26c0:	tbnz	w0, #31, 26f0 <PyThread_free_lock@plt+0xdc0>
    26c4:	ldr	x1, [sp, #104]
    26c8:	add	x0, x1, #0x20
    26cc:	add	x0, x0, x22
    26d0:	str	x0, [x19, #40]
    26d4:	ldr	x0, [x1, #16]
    26d8:	sub	x0, x0, x22
    26dc:	b	2618 <PyThread_free_lock@plt+0xce8>
    26e0:	mov	x1, x22
    26e4:	add	x0, sp, #0x68
    26e8:	bl	16a0 <_PyBytes_Resize@plt>
    26ec:	tbz	w0, #31, 2694 <PyThread_free_lock@plt+0xd64>
    26f0:	ldr	x0, [sp, #104]
    26f4:	cbz	x0, 2734 <PyThread_free_lock@plt+0xe04>
    26f8:	ldr	x1, [x0]
    26fc:	sub	x1, x1, #0x1
    2700:	str	x1, [x0]
    2704:	cbz	x1, 271c <PyThread_free_lock@plt+0xdec>
    2708:	mov	x0, #0x0                   	// #0
    270c:	ldp	x21, x22, [sp, #32]
    2710:	ldp	x25, x26, [sp, #64]
    2714:	ldp	x27, x28, [sp, #80]
    2718:	b	26a4 <PyThread_free_lock@plt+0xd74>
    271c:	bl	1720 <_Py_Dealloc@plt>
    2720:	mov	x0, #0x0                   	// #0
    2724:	ldp	x21, x22, [sp, #32]
    2728:	ldp	x25, x26, [sp, #64]
    272c:	ldp	x27, x28, [sp, #80]
    2730:	b	26a4 <PyThread_free_lock@plt+0xd74>
    2734:	ldp	x21, x22, [sp, #32]
    2738:	ldp	x25, x26, [sp, #64]
    273c:	ldp	x27, x28, [sp, #80]
    2740:	b	26a4 <PyThread_free_lock@plt+0xd74>
    2744:	stp	x29, x30, [sp, #-32]!
    2748:	mov	x29, sp
    274c:	stp	x19, x20, [sp, #16]
    2750:	mov	x19, x0
    2754:	mov	w1, #0x0                   	// #0
    2758:	ldr	x0, [x0, #104]
    275c:	bl	1740 <PyThread_acquire_lock@plt>
    2760:	cbz	w0, 27a4 <PyThread_free_lock@plt+0xe74>
    2764:	ldr	w0, [x19, #96]
    2768:	cbnz	w0, 27c4 <PyThread_free_lock@plt+0xe94>
    276c:	mov	w0, #0x1                   	// #1
    2770:	str	w0, [x19, #96]
    2774:	mov	w3, #0x2                   	// #2
    2778:	mov	x2, #0x0                   	// #0
    277c:	mov	x1, #0x0                   	// #0
    2780:	mov	x0, x19
    2784:	bl	2584 <PyThread_free_lock@plt+0xc54>
    2788:	mov	x20, x0
    278c:	ldr	x0, [x19, #104]
    2790:	bl	1890 <PyThread_release_lock@plt>
    2794:	mov	x0, x20
    2798:	ldp	x19, x20, [sp, #16]
    279c:	ldp	x29, x30, [sp], #32
    27a0:	ret
    27a4:	bl	18b0 <PyEval_SaveThread@plt>
    27a8:	mov	x20, x0
    27ac:	mov	w1, #0x1                   	// #1
    27b0:	ldr	x0, [x19, #104]
    27b4:	bl	1740 <PyThread_acquire_lock@plt>
    27b8:	mov	x0, x20
    27bc:	bl	16b0 <PyEval_RestoreThread@plt>
    27c0:	b	2764 <PyThread_free_lock@plt+0xe34>
    27c4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    27c8:	add	x1, x1, #0xc48
    27cc:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    27d0:	ldr	x0, [x0, #4016]
    27d4:	ldr	x0, [x0]
    27d8:	bl	1760 <PyErr_SetString@plt>
    27dc:	mov	x20, #0x0                   	// #0
    27e0:	b	278c <PyThread_free_lock@plt+0xe5c>
    27e4:	stp	x29, x30, [sp, #-128]!
    27e8:	mov	x29, sp
    27ec:	stp	x19, x20, [sp, #16]
    27f0:	str	x21, [sp, #32]
    27f4:	mov	x19, x0
    27f8:	mov	x20, x1
    27fc:	stp	xzr, xzr, [sp, #48]
    2800:	stp	xzr, xzr, [sp, #64]
    2804:	stp	xzr, xzr, [sp, #80]
    2808:	stp	xzr, xzr, [sp, #96]
    280c:	stp	xzr, xzr, [sp, #112]
    2810:	mov	w2, #0x0                   	// #0
    2814:	add	x1, sp, #0x30
    2818:	mov	x0, x20
    281c:	bl	18a0 <PyObject_GetBuffer@plt>
    2820:	mov	x21, #0x0                   	// #0
    2824:	cbnz	w0, 2870 <PyThread_free_lock@plt+0xf40>
    2828:	mov	w1, #0x43                  	// #67
    282c:	add	x0, sp, #0x30
    2830:	bl	1700 <PyBuffer_IsContiguous@plt>
    2834:	cbz	w0, 2894 <PyThread_free_lock@plt+0xf64>
    2838:	mov	w1, #0x0                   	// #0
    283c:	ldr	x0, [x19, #104]
    2840:	bl	1740 <PyThread_acquire_lock@plt>
    2844:	cbz	w0, 28b8 <PyThread_free_lock@plt+0xf88>
    2848:	ldr	w0, [x19, #96]
    284c:	cbnz	w0, 28d8 <PyThread_free_lock@plt+0xfa8>
    2850:	mov	w3, #0x0                   	// #0
    2854:	ldr	x2, [sp, #64]
    2858:	ldr	x1, [sp, #48]
    285c:	mov	x0, x19
    2860:	bl	2584 <PyThread_free_lock@plt+0xc54>
    2864:	mov	x21, x0
    2868:	ldr	x0, [x19, #104]
    286c:	bl	1890 <PyThread_release_lock@plt>
    2870:	ldr	x0, [sp, #56]
    2874:	cbz	x0, 2880 <PyThread_free_lock@plt+0xf50>
    2878:	add	x0, sp, #0x30
    287c:	bl	16d0 <PyBuffer_Release@plt>
    2880:	mov	x0, x21
    2884:	ldp	x19, x20, [sp, #16]
    2888:	ldr	x21, [sp, #32]
    288c:	ldp	x29, x30, [sp], #128
    2890:	ret
    2894:	mov	x3, x20
    2898:	adrp	x2, 2000 <PyThread_free_lock@plt+0x6d0>
    289c:	add	x2, x2, #0xb90
    28a0:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    28a4:	add	x1, x1, #0xc68
    28a8:	adrp	x0, 2000 <PyThread_free_lock@plt+0x6d0>
    28ac:	add	x0, x0, #0xc78
    28b0:	bl	17e0 <_PyArg_BadArgument@plt>
    28b4:	b	2870 <PyThread_free_lock@plt+0xf40>
    28b8:	bl	18b0 <PyEval_SaveThread@plt>
    28bc:	mov	x20, x0
    28c0:	mov	w1, #0x1                   	// #1
    28c4:	ldr	x0, [x19, #104]
    28c8:	bl	1740 <PyThread_acquire_lock@plt>
    28cc:	mov	x0, x20
    28d0:	bl	16b0 <PyEval_RestoreThread@plt>
    28d4:	b	2848 <PyThread_free_lock@plt+0xf18>
    28d8:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    28dc:	add	x1, x1, #0xc88
    28e0:	adrp	x0, 13000 <PyInit__bz2@@Base+0x106c8>
    28e4:	ldr	x0, [x0, #4016]
    28e8:	ldr	x0, [x0]
    28ec:	bl	1760 <PyErr_SetString@plt>
    28f0:	mov	x21, #0x0                   	// #0
    28f4:	b	2868 <PyThread_free_lock@plt+0xf38>
    28f8:	stp	x29, x30, [sp, #-32]!
    28fc:	mov	x29, sp
    2900:	str	x19, [sp, #16]
    2904:	mov	x19, x0
    2908:	add	x0, x0, #0x10
    290c:	bl	17f0 <BZ2_bzCompressEnd@plt>
    2910:	ldr	x0, [x19, #104]
    2914:	cbz	x0, 291c <PyThread_free_lock@plt+0xfec>
    2918:	bl	1930 <PyThread_free_lock@plt>
    291c:	ldr	x0, [x19, #8]
    2920:	ldr	x1, [x0, #320]
    2924:	mov	x0, x19
    2928:	blr	x1
    292c:	ldr	x19, [sp, #16]
    2930:	ldp	x29, x30, [sp], #32
    2934:	ret

0000000000002938 <PyInit__bz2@@Base>:
    2938:	stp	x29, x30, [sp, #-48]!
    293c:	mov	x29, sp
    2940:	stp	x19, x20, [sp, #16]
    2944:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    2948:	add	x0, x0, #0x168
    294c:	add	x0, x0, #0x1a0
    2950:	bl	17c0 <PyType_Ready@plt>
    2954:	mov	x19, #0x0                   	// #0
    2958:	tbnz	w0, #31, 29d8 <PyInit__bz2@@Base+0xa0>
    295c:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    2960:	add	x0, x0, #0x168
    2964:	bl	17c0 <PyType_Ready@plt>
    2968:	tbnz	w0, #31, 29d8 <PyInit__bz2@@Base+0xa0>
    296c:	mov	w1, #0x3f5                 	// #1013
    2970:	adrp	x0, 14000 <PyInit__bz2@@Base+0x116c8>
    2974:	add	x0, x0, #0x4a8
    2978:	add	x0, x0, #0x40
    297c:	bl	1840 <PyModule_Create2@plt>
    2980:	mov	x19, x0
    2984:	cbz	x0, 29d8 <PyInit__bz2@@Base+0xa0>
    2988:	str	x21, [sp, #32]
    298c:	adrp	x21, 14000 <PyInit__bz2@@Base+0x116c8>
    2990:	add	x20, x21, #0x168
    2994:	ldr	x0, [x20, #416]
    2998:	add	x0, x0, #0x1
    299c:	str	x0, [x20, #416]
    29a0:	add	x2, x20, #0x1a0
    29a4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    29a8:	add	x1, x1, #0xc10
    29ac:	mov	x0, x19
    29b0:	bl	18c0 <PyModule_AddObject@plt>
    29b4:	ldr	x0, [x21, #360]
    29b8:	add	x0, x0, #0x1
    29bc:	str	x0, [x21, #360]
    29c0:	mov	x2, x20
    29c4:	adrp	x1, 2000 <PyThread_free_lock@plt+0x6d0>
    29c8:	add	x1, x1, #0xb38
    29cc:	mov	x0, x19
    29d0:	bl	18c0 <PyModule_AddObject@plt>
    29d4:	ldr	x21, [sp, #32]
    29d8:	mov	x0, x19
    29dc:	ldp	x19, x20, [sp, #16]
    29e0:	ldp	x29, x30, [sp], #48
    29e4:	ret

Disassembly of section .fini:

00000000000029e8 <.fini>:
    29e8:	stp	x29, x30, [sp, #-16]!
    29ec:	mov	x29, sp
    29f0:	ldp	x29, x30, [sp], #16
    29f4:	ret
