In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTarget.a_gcc_-O2:

Target.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
  14:	add	x3, x3, #0x0
  18:	add	x1, x1, #0x0
  1c:	add	x0, x0, #0x0
  20:	mov	w2, #0x7d                  	// #125
  24:	bl	0 <__assert_fail>

0000000000000028 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	mov	x29, sp
  30:	str	x19, [sp, #16]
  34:	mov	x19, x0
  38:	bl	0 <_ZN4llvm42initializeTargetLibraryInfoWrapperPassPassERNS_12PassRegistryE>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZN4llvm44initializeTargetTransformInfoWrapperPassPassERNS_12PassRegistryE>
  4c:	nop

0000000000000050 <LLVMInitializeTarget>:
  50:	b	28 <_ZN4llvm16initializeTargetERNS_12PassRegistryE>
  54:	nop

0000000000000058 <LLVMGetModuleDataLayout>:
  58:	b	0 <_ZNK4llvm6Module13getDataLayoutEv>
  5c:	nop

0000000000000060 <LLVMSetModuleDataLayout>:
  60:	b	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
  64:	nop

0000000000000068 <LLVMCreateTargetData>:
  68:	stp	x29, x30, [sp, #-48]!
  6c:	mov	x29, sp
  70:	stp	x19, x20, [sp, #16]
  74:	mov	x20, x0
  78:	str	x21, [sp, #32]
  7c:	mov	x21, #0x0                   	// #0
  80:	cbz	x0, 8c <LLVMCreateTargetData+0x24>
  84:	bl	0 <strlen>
  88:	mov	x21, x0
  8c:	mov	x0, #0x1b0                 	// #432
  90:	bl	0 <_Znwm>
  94:	add	x9, x0, #0x30
  98:	add	x8, x0, #0x48
  9c:	add	x6, x0, #0xd8
  a0:	add	x5, x0, #0xf8
  a4:	add	x4, x0, #0x190
  a8:	mov	x3, #0x800000000           	// #34359738368
  ac:	mov	x7, #0x1000000000          	// #68719476736
  b0:	strh	wzr, [x0, #8]
  b4:	strh	wzr, [x0, #16]
  b8:	mov	x19, x0
  bc:	stp	x9, x3, [x0, #32]
  c0:	mov	x1, x20
  c4:	mov	x2, x21
  c8:	stp	x8, x7, [x0, #56]
  cc:	stp	x6, xzr, [x0, #200]
  d0:	strb	wzr, [x0, #216]
  d4:	stp	x5, x3, [x0, #232]
  d8:	stp	xzr, x4, [x0, #376]
  dc:	str	x3, [x0, #392]
  e0:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
  e4:	mov	x0, x19
  e8:	ldp	x19, x20, [sp, #16]
  ec:	ldr	x21, [sp, #32]
  f0:	ldp	x29, x30, [sp], #48
  f4:	ret

00000000000000f8 <LLVMDisposeTargetData>:
  f8:	cbz	x0, 124 <LLVMDisposeTargetData+0x2c>
  fc:	stp	x29, x30, [sp, #-32]!
 100:	mov	x29, sp
 104:	str	x19, [sp, #16]
 108:	mov	x19, x0
 10c:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
 110:	mov	x0, x19
 114:	mov	x1, #0x1b0                 	// #432
 118:	ldr	x19, [sp, #16]
 11c:	ldp	x29, x30, [sp], #32
 120:	b	0 <_ZdlPvm>
 124:	ret

0000000000000128 <LLVMAddTargetLibraryInfo>:
 128:	stp	x29, x30, [sp, #-48]!
 12c:	mov	x29, sp
 130:	stp	x19, x20, [sp, #16]
 134:	mov	x19, x1
 138:	mov	x20, x0
 13c:	ldr	x1, [x1]
 140:	str	x21, [sp, #32]
 144:	mov	x0, #0x118                 	// #280
 148:	ldr	x21, [x1, #16]
 14c:	bl	0 <_Znwm>
 150:	mov	x1, x20
 154:	mov	x20, x0
 158:	bl	0 <_ZN4llvm28TargetLibraryInfoWrapperPassC1ERKNS_21TargetLibraryInfoImplE>
 15c:	mov	x1, x20
 160:	mov	x0, x19
 164:	mov	x16, x21
 168:	ldp	x19, x20, [sp, #16]
 16c:	ldr	x21, [sp, #32]
 170:	ldp	x29, x30, [sp], #48
 174:	br	x16

0000000000000178 <LLVMCopyStringRepOfTargetData>:
 178:	stp	x29, x30, [sp, #-96]!
 17c:	mov	x29, sp
 180:	stp	x19, x20, [sp, #16]
 184:	add	x20, sp, #0x40
 188:	add	x1, x20, #0x10
 18c:	ldr	x19, [x0, #208]
 190:	str	x21, [sp, #32]
 194:	ldr	x21, [x0, #200]
 198:	str	x1, [sp, #64]
 19c:	cmn	x21, x19
 1a0:	ccmp	x21, #0x0, #0x0, ne  // ne = any
 1a4:	b.eq	244 <LLVMCopyStringRepOfTargetData+0xcc>  // b.none
 1a8:	str	x19, [sp, #56]
 1ac:	cmp	x19, #0xf
 1b0:	b.hi	214 <LLVMCopyStringRepOfTargetData+0x9c>  // b.pmore
 1b4:	cmp	x19, #0x1
 1b8:	b.ne	208 <LLVMCopyStringRepOfTargetData+0x90>  // b.any
 1bc:	ldrb	w2, [x21]
 1c0:	mov	x0, x1
 1c4:	strb	w2, [sp, #80]
 1c8:	str	x19, [sp, #72]
 1cc:	add	x20, x20, #0x10
 1d0:	strb	wzr, [x0, x19]
 1d4:	ldr	x0, [sp, #64]
 1d8:	bl	0 <strdup>
 1dc:	mov	x19, x0
 1e0:	ldr	x1, [sp, #64]
 1e4:	cmp	x1, x20
 1e8:	b.eq	1f4 <LLVMCopyStringRepOfTargetData+0x7c>  // b.none
 1ec:	mov	x0, x1
 1f0:	bl	0 <_ZdlPv>
 1f4:	mov	x0, x19
 1f8:	ldp	x19, x20, [sp, #16]
 1fc:	ldr	x21, [sp, #32]
 200:	ldp	x29, x30, [sp], #96
 204:	ret
 208:	mov	x0, x1
 20c:	cbz	x19, 1c8 <LLVMCopyStringRepOfTargetData+0x50>
 210:	b	230 <LLVMCopyStringRepOfTargetData+0xb8>
 214:	add	x1, sp, #0x38
 218:	mov	x0, x20
 21c:	mov	x2, #0x0                   	// #0
 220:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 224:	ldr	x1, [sp, #56]
 228:	str	x0, [sp, #64]
 22c:	str	x1, [sp, #80]
 230:	mov	x2, x19
 234:	mov	x1, x21
 238:	bl	0 <memcpy>
 23c:	ldp	x19, x0, [sp, #56]
 240:	b	1c8 <LLVMCopyStringRepOfTargetData+0x50>
 244:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 248:	add	x0, x0, #0x0
 24c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000250 <LLVMByteOrder>:
 250:	ldrb	w0, [x0]
 254:	eor	w0, w0, #0x1
 258:	ret
 25c:	nop

0000000000000260 <LLVMPointerSize>:
 260:	mov	w1, #0x0                   	// #0
 264:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>

0000000000000268 <LLVMPointerSizeForAS>:
 268:	b	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 26c:	nop

0000000000000270 <LLVMIntPtrType>:
 270:	stp	x29, x30, [sp, #-32]!
 274:	mov	x29, sp
 278:	str	x19, [sp, #16]
 27c:	mov	x19, x0
 280:	bl	0 <LLVMGetGlobalContext>
 284:	mov	x1, x0
 288:	mov	x0, x19
 28c:	mov	w2, #0x0                   	// #0
 290:	ldr	x19, [sp, #16]
 294:	ldp	x29, x30, [sp], #32
 298:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 29c:	nop

00000000000002a0 <LLVMIntPtrTypeForAS>:
 2a0:	stp	x29, x30, [sp, #-32]!
 2a4:	mov	x29, sp
 2a8:	stp	x19, x20, [sp, #16]
 2ac:	mov	w20, w1
 2b0:	mov	x19, x0
 2b4:	bl	0 <LLVMGetGlobalContext>
 2b8:	mov	x1, x0
 2bc:	mov	w2, w20
 2c0:	mov	x0, x19
 2c4:	ldp	x19, x20, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #32
 2cc:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002d0 <LLVMIntPtrTypeInContext>:
 2d0:	mov	x2, x0
 2d4:	mov	x0, x1
 2d8:	mov	x1, x2
 2dc:	mov	w2, #0x0                   	// #0
 2e0:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>
 2e4:	nop

00000000000002e8 <LLVMIntPtrTypeForASInContext>:
 2e8:	mov	x3, x0
 2ec:	mov	x0, x1
 2f0:	mov	x1, x3
 2f4:	b	0 <_ZNK4llvm10DataLayout13getIntPtrTypeERNS_11LLVMContextEj>

00000000000002f8 <LLVMSizeOfTypeInBits>:
 2f8:	stp	x29, x30, [sp, #-64]!
 2fc:	mov	x29, sp
 300:	ldrb	w2, [x1, #8]
 304:	stp	x19, x20, [sp, #16]
 308:	mov	x20, x1
 30c:	sub	w1, w2, #0x1
 310:	and	w1, w1, #0xff
 314:	stp	x21, x22, [sp, #32]
 318:	cmp	w1, #0x5
 31c:	mov	x21, x0
 320:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 324:	and	w0, w2, #0xfffffffd
 328:	ccmp	w0, #0x9, #0x4, ne  // ne = any
 32c:	b.ne	4f4 <LLVMSizeOfTypeInBits+0x1fc>  // b.any
 330:	cmp	w2, #0x9
 334:	b.eq	4ec <LLVMSizeOfTypeInBits+0x1f4>  // b.none
 338:	b.hi	3b4 <LLVMSizeOfTypeInBits+0xbc>  // b.pmore
 33c:	cmp	w2, #0x4
 340:	b.eq	458 <LLVMSizeOfTypeInBits+0x160>  // b.none
 344:	b.ls	378 <LLVMSizeOfTypeInBits+0x80>  // b.plast
 348:	cmp	w2, #0x6
 34c:	b.ls	430 <LLVMSizeOfTypeInBits+0x138>  // b.plast
 350:	cmp	w2, #0x7
 354:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 358:	mov	x0, x21
 35c:	mov	w1, #0x0                   	// #0
 360:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 364:	lsl	w0, w0, #3
 368:	ldp	x19, x20, [sp, #16]
 36c:	ldp	x21, x22, [sp, #32]
 370:	ldp	x29, x30, [sp], #64
 374:	ret
 378:	cmp	w2, #0x2
 37c:	b.eq	444 <LLVMSizeOfTypeInBits+0x14c>  // b.none
 380:	cmp	w2, #0x3
 384:	mov	x0, #0x40                  	// #64
 388:	b.eq	368 <LLVMSizeOfTypeInBits+0x70>  // b.none
 38c:	cmp	w2, #0x1
 390:	mov	x0, #0x10                  	// #16
 394:	b.eq	368 <LLVMSizeOfTypeInBits+0x70>  // b.none
 398:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 39c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 3a0:	add	x1, x1, #0x0
 3a4:	add	x0, x0, #0x0
 3a8:	mov	w2, #0x298                 	// #664
 3ac:	str	x23, [sp, #48]
 3b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 3b4:	cmp	w2, #0xe
 3b8:	b.eq	478 <LLVMSizeOfTypeInBits+0x180>  // b.none
 3bc:	b.ls	408 <LLVMSizeOfTypeInBits+0x110>  // b.plast
 3c0:	cmp	w2, #0xf
 3c4:	b.eq	4d4 <LLVMSizeOfTypeInBits+0x1dc>  // b.none
 3c8:	cmp	w2, #0x10
 3cc:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 3d0:	ldr	x19, [x20, #32]
 3d4:	mov	x0, #0xffffffff            	// #4294967295
 3d8:	cmp	x19, x0
 3dc:	b.hi	544 <LLVMSizeOfTypeInBits+0x24c>  // b.pmore
 3e0:	ldr	x1, [x20, #24]
 3e4:	mov	x0, x21
 3e8:	ldrb	w20, [x20, #40]
 3ec:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 3f0:	tst	w1, #0xff
 3f4:	b.ne	400 <LLVMSizeOfTypeInBits+0x108>  // b.any
 3f8:	mul	x0, x19, x0
 3fc:	cbz	w20, 368 <LLVMSizeOfTypeInBits+0x70>
 400:	str	x23, [sp, #48]
 404:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 408:	cmp	w2, #0xb
 40c:	b.eq	46c <LLVMSizeOfTypeInBits+0x174>  // b.none
 410:	cmp	w2, #0xd
 414:	b.ne	398 <LLVMSizeOfTypeInBits+0xa0>  // b.any
 418:	mov	x1, x20
 41c:	mov	x0, x21
 420:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 424:	ldr	x0, [x0]
 428:	lsl	x0, x0, #3
 42c:	b	368 <LLVMSizeOfTypeInBits+0x70>
 430:	mov	x0, #0x80                  	// #128
 434:	ldp	x19, x20, [sp, #16]
 438:	ldp	x21, x22, [sp, #32]
 43c:	ldp	x29, x30, [sp], #64
 440:	ret
 444:	mov	x0, #0x20                  	// #32
 448:	ldp	x19, x20, [sp, #16]
 44c:	ldp	x21, x22, [sp, #32]
 450:	ldp	x29, x30, [sp], #64
 454:	ret
 458:	mov	x0, #0x50                  	// #80
 45c:	ldp	x19, x20, [sp, #16]
 460:	ldp	x21, x22, [sp, #32]
 464:	ldp	x29, x30, [sp], #64
 468:	ret
 46c:	ldr	w0, [x20, #8]
 470:	lsr	w0, w0, #8
 474:	b	368 <LLVMSizeOfTypeInBits+0x70>
 478:	ldr	x22, [x20, #24]
 47c:	mov	x0, x21
 480:	str	x23, [sp, #48]
 484:	mov	x1, x22
 488:	ldr	x23, [x20, #32]
 48c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 490:	add	x19, x0, #0x7
 494:	and	w20, w1, #0xff
 498:	mov	x1, x22
 49c:	mov	x0, x21
 4a0:	lsr	x19, x19, #3
 4a4:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 4a8:	mov	w1, w0
 4ac:	cbz	w0, 568 <LLVMSizeOfTypeInBits+0x270>
 4b0:	sub	x0, x19, #0x1
 4b4:	add	x0, x0, x1
 4b8:	udiv	x0, x0, x1
 4bc:	mul	x0, x0, x1
 4c0:	mul	x0, x0, x23
 4c4:	ldr	x23, [sp, #48]
 4c8:	lsl	x0, x0, #3
 4cc:	cbz	w20, 368 <LLVMSizeOfTypeInBits+0x70>
 4d0:	b	400 <LLVMSizeOfTypeInBits+0x108>
 4d4:	ldr	w1, [x20, #8]
 4d8:	mov	x0, x21
 4dc:	lsr	w1, w1, #8
 4e0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 4e4:	lsl	w0, w0, #3
 4e8:	b	368 <LLVMSizeOfTypeInBits+0x70>
 4ec:	mov	x0, #0x40                  	// #64
 4f0:	b	368 <LLVMSizeOfTypeInBits+0x70>
 4f4:	sub	w0, w2, #0xd
 4f8:	cmp	w0, #0x1
 4fc:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 500:	b.ne	520 <LLVMSizeOfTypeInBits+0x228>  // b.any
 504:	mov	x0, x20
 508:	mov	x1, #0x0                   	// #0
 50c:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 510:	tst	w0, #0xff
 514:	b.eq	520 <LLVMSizeOfTypeInBits+0x228>  // b.none
 518:	ldrb	w2, [x20, #8]
 51c:	b	330 <LLVMSizeOfTypeInBits+0x38>
 520:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 524:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 528:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 52c:	add	x3, x3, #0x0
 530:	add	x1, x1, #0x0
 534:	add	x0, x0, #0x0
 538:	mov	w2, #0x271                 	// #625
 53c:	str	x23, [sp, #48]
 540:	bl	0 <__assert_fail>
 544:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 548:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 54c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 550:	add	x3, x3, #0x0
 554:	add	x1, x1, #0x0
 558:	add	x0, x0, #0x0
 55c:	mov	w2, #0x220                 	// #544
 560:	str	x23, [sp, #48]
 564:	bl	0 <__assert_fail>
 568:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 56c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 570:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 574:	add	x3, x3, #0x0
 578:	add	x1, x1, #0x0
 57c:	add	x0, x0, #0x0
 580:	mov	w2, #0xc7                  	// #199
 584:	bl	0 <__assert_fail>

0000000000000588 <LLVMStoreSizeOfType>:
 588:	stp	x29, x30, [sp, #-64]!
 58c:	mov	x29, sp
 590:	ldrb	w2, [x1, #8]
 594:	stp	x19, x20, [sp, #16]
 598:	mov	x20, x1
 59c:	sub	w1, w2, #0x1
 5a0:	and	w1, w1, #0xff
 5a4:	stp	x21, x22, [sp, #32]
 5a8:	cmp	w1, #0x5
 5ac:	mov	x21, x0
 5b0:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 5b4:	and	w0, w2, #0xfffffffd
 5b8:	ccmp	w0, #0x9, #0x4, ne  // ne = any
 5bc:	b.ne	790 <LLVMStoreSizeOfType+0x208>  // b.any
 5c0:	cmp	w2, #0x9
 5c4:	b.eq	788 <LLVMStoreSizeOfType+0x200>  // b.none
 5c8:	b.hi	644 <LLVMStoreSizeOfType+0xbc>  // b.pmore
 5cc:	cmp	w2, #0x4
 5d0:	b.eq	6f0 <LLVMStoreSizeOfType+0x168>  // b.none
 5d4:	b.ls	608 <LLVMStoreSizeOfType+0x80>  // b.plast
 5d8:	cmp	w2, #0x6
 5dc:	b.ls	6c8 <LLVMStoreSizeOfType+0x140>  // b.plast
 5e0:	cmp	w2, #0x7
 5e4:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 5e8:	mov	x0, x21
 5ec:	mov	w1, #0x0                   	// #0
 5f0:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 5f4:	and	x0, x0, #0x1fffffff
 5f8:	ldp	x19, x20, [sp, #16]
 5fc:	ldp	x21, x22, [sp, #32]
 600:	ldp	x29, x30, [sp], #64
 604:	ret
 608:	cmp	w2, #0x2
 60c:	b.eq	6dc <LLVMStoreSizeOfType+0x154>  // b.none
 610:	cmp	w2, #0x3
 614:	mov	x0, #0x8                   	// #8
 618:	b.eq	5f8 <LLVMStoreSizeOfType+0x70>  // b.none
 61c:	cmp	w2, #0x1
 620:	mov	x0, #0x2                   	// #2
 624:	b.eq	5f8 <LLVMStoreSizeOfType+0x70>  // b.none
 628:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 62c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 630:	add	x1, x1, #0x0
 634:	add	x0, x0, #0x0
 638:	mov	w2, #0x298                 	// #664
 63c:	str	x23, [sp, #48]
 640:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 644:	cmp	w2, #0xe
 648:	b.eq	718 <LLVMStoreSizeOfType+0x190>  // b.none
 64c:	b.ls	6a0 <LLVMStoreSizeOfType+0x118>  // b.plast
 650:	cmp	w2, #0xf
 654:	b.eq	770 <LLVMStoreSizeOfType+0x1e8>  // b.none
 658:	cmp	w2, #0x10
 65c:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 660:	ldr	x19, [x20, #32]
 664:	mov	x0, #0xffffffff            	// #4294967295
 668:	cmp	x19, x0
 66c:	b.hi	7e0 <LLVMStoreSizeOfType+0x258>  // b.pmore
 670:	ldr	x1, [x20, #24]
 674:	mov	x0, x21
 678:	ldrb	w20, [x20, #40]
 67c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 680:	tst	w1, #0xff
 684:	b.ne	698 <LLVMStoreSizeOfType+0x110>  // b.any
 688:	mul	x0, x19, x0
 68c:	add	x0, x0, #0x7
 690:	lsr	x0, x0, #3
 694:	cbz	w20, 5f8 <LLVMStoreSizeOfType+0x70>
 698:	str	x23, [sp, #48]
 69c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 6a0:	cmp	w2, #0xb
 6a4:	b.eq	704 <LLVMStoreSizeOfType+0x17c>  // b.none
 6a8:	cmp	w2, #0xd
 6ac:	b.ne	628 <LLVMStoreSizeOfType+0xa0>  // b.any
 6b0:	mov	x1, x20
 6b4:	mov	x0, x21
 6b8:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 6bc:	ldr	x0, [x0]
 6c0:	and	x0, x0, #0x1fffffffffffffff
 6c4:	b	5f8 <LLVMStoreSizeOfType+0x70>
 6c8:	mov	x0, #0x10                  	// #16
 6cc:	ldp	x19, x20, [sp, #16]
 6d0:	ldp	x21, x22, [sp, #32]
 6d4:	ldp	x29, x30, [sp], #64
 6d8:	ret
 6dc:	mov	x0, #0x4                   	// #4
 6e0:	ldp	x19, x20, [sp, #16]
 6e4:	ldp	x21, x22, [sp, #32]
 6e8:	ldp	x29, x30, [sp], #64
 6ec:	ret
 6f0:	mov	x0, #0xa                   	// #10
 6f4:	ldp	x19, x20, [sp, #16]
 6f8:	ldp	x21, x22, [sp, #32]
 6fc:	ldp	x29, x30, [sp], #64
 700:	ret
 704:	ldr	w0, [x20, #8]
 708:	lsr	w0, w0, #8
 70c:	add	x0, x0, #0x7
 710:	lsr	x0, x0, #3
 714:	b	5f8 <LLVMStoreSizeOfType+0x70>
 718:	ldr	x22, [x20, #24]
 71c:	mov	x0, x21
 720:	str	x23, [sp, #48]
 724:	mov	x1, x22
 728:	ldr	x23, [x20, #32]
 72c:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 730:	add	x19, x0, #0x7
 734:	and	w20, w1, #0xff
 738:	mov	x1, x22
 73c:	mov	x0, x21
 740:	lsr	x19, x19, #3
 744:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 748:	mov	w1, w0
 74c:	cbz	w0, 804 <LLVMStoreSizeOfType+0x27c>
 750:	sub	x0, x19, #0x1
 754:	add	x0, x0, x1
 758:	udiv	x0, x0, x1
 75c:	mul	x0, x0, x1
 760:	mul	x0, x0, x23
 764:	ldr	x23, [sp, #48]
 768:	lsl	x0, x0, #3
 76c:	b	68c <LLVMStoreSizeOfType+0x104>
 770:	ldr	w1, [x20, #8]
 774:	mov	x0, x21
 778:	lsr	w1, w1, #8
 77c:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 780:	and	x0, x0, #0x1fffffff
 784:	b	5f8 <LLVMStoreSizeOfType+0x70>
 788:	mov	x0, #0x8                   	// #8
 78c:	b	5f8 <LLVMStoreSizeOfType+0x70>
 790:	sub	w0, w2, #0xd
 794:	cmp	w0, #0x1
 798:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 79c:	b.ne	7bc <LLVMStoreSizeOfType+0x234>  // b.any
 7a0:	mov	x0, x20
 7a4:	mov	x1, #0x0                   	// #0
 7a8:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 7ac:	tst	w0, #0xff
 7b0:	b.eq	7bc <LLVMStoreSizeOfType+0x234>  // b.none
 7b4:	ldrb	w2, [x20, #8]
 7b8:	b	5c0 <LLVMStoreSizeOfType+0x38>
 7bc:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c0:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c4:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7c8:	add	x3, x3, #0x0
 7cc:	add	x1, x1, #0x0
 7d0:	add	x0, x0, #0x0
 7d4:	mov	w2, #0x271                 	// #625
 7d8:	str	x23, [sp, #48]
 7dc:	bl	0 <__assert_fail>
 7e0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7e4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7e8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 7ec:	add	x3, x3, #0x0
 7f0:	add	x1, x1, #0x0
 7f4:	add	x0, x0, #0x0
 7f8:	mov	w2, #0x220                 	// #544
 7fc:	str	x23, [sp, #48]
 800:	bl	0 <__assert_fail>
 804:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 808:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 80c:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 810:	add	x3, x3, #0x0
 814:	add	x1, x1, #0x0
 818:	add	x0, x0, #0x0
 81c:	mov	w2, #0xc7                  	// #199
 820:	bl	0 <__assert_fail>
 824:	nop

0000000000000828 <LLVMABISizeOfType>:
 828:	stp	x29, x30, [sp, #-64]!
 82c:	mov	x29, sp
 830:	ldrb	w2, [x1, #8]
 834:	stp	x21, x22, [sp, #32]
 838:	mov	x22, x0
 83c:	sub	w0, w2, #0x1
 840:	and	w0, w0, #0xff
 844:	stp	x19, x20, [sp, #16]
 848:	cmp	w0, #0x5
 84c:	mov	x21, x1
 850:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
 854:	and	w1, w2, #0xfffffffd
 858:	ccmp	w1, #0x9, #0x4, ne  // ne = any
 85c:	b.ne	a6c <LLVMABISizeOfType+0x244>  // b.any
 860:	cmp	w2, #0x9
 864:	b.eq	a64 <LLVMABISizeOfType+0x23c>  // b.none
 868:	b.hi	908 <LLVMABISizeOfType+0xe0>  // b.pmore
 86c:	cmp	w2, #0x4
 870:	b.eq	9b8 <LLVMABISizeOfType+0x190>  // b.none
 874:	b.ls	8cc <LLVMABISizeOfType+0xa4>  // b.plast
 878:	cmp	w2, #0x6
 87c:	b.ls	a40 <LLVMABISizeOfType+0x218>  // b.plast
 880:	cmp	w2, #0x7
 884:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 888:	mov	x0, x22
 88c:	mov	w1, #0x0                   	// #0
 890:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 894:	and	x19, x0, #0x1fffffff
 898:	mov	x1, x21
 89c:	mov	x0, x22
 8a0:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 8a4:	mov	w1, w0
 8a8:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 8ac:	sub	x0, x19, #0x1
 8b0:	add	x0, x0, x1
 8b4:	udiv	x0, x0, x1
 8b8:	mul	x0, x0, x1
 8bc:	ldp	x19, x20, [sp, #16]
 8c0:	ldp	x21, x22, [sp, #32]
 8c4:	ldp	x29, x30, [sp], #64
 8c8:	ret
 8cc:	cmp	w2, #0x2
 8d0:	b.eq	9b0 <LLVMABISizeOfType+0x188>  // b.none
 8d4:	cmp	w2, #0x3
 8d8:	mov	x19, #0x8                   	// #8
 8dc:	b.eq	898 <LLVMABISizeOfType+0x70>  // b.none
 8e0:	cmp	w2, #0x1
 8e4:	mov	x19, #0x2                   	// #2
 8e8:	b.eq	898 <LLVMABISizeOfType+0x70>  // b.none
 8ec:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 8f0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 8f4:	add	x1, x1, #0x0
 8f8:	add	x0, x0, #0x0
 8fc:	mov	w2, #0x298                 	// #664
 900:	stp	x23, x24, [sp, #48]
 904:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 908:	cmp	w2, #0xe
 90c:	b.eq	9d8 <LLVMABISizeOfType+0x1b0>  // b.none
 910:	b.ls	988 <LLVMABISizeOfType+0x160>  // b.plast
 914:	cmp	w2, #0xf
 918:	b.eq	9c0 <LLVMABISizeOfType+0x198>  // b.none
 91c:	cmp	w2, #0x10
 920:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 924:	ldr	x19, [x21, #32]
 928:	mov	x0, #0xffffffff            	// #4294967295
 92c:	cmp	x19, x0
 930:	b.hi	ae0 <LLVMABISizeOfType+0x2b8>  // b.pmore
 934:	ldr	x1, [x21, #24]
 938:	mov	x0, x22
 93c:	ldrb	w20, [x21, #40]
 940:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 944:	tst	w1, #0xff
 948:	b.ne	980 <LLVMABISizeOfType+0x158>  // b.any
 94c:	mul	x19, x19, x0
 950:	add	x19, x19, #0x7
 954:	lsr	x19, x19, #3
 958:	mov	x1, x21
 95c:	mov	x0, x22
 960:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 964:	mov	w1, w0
 968:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 96c:	sub	x0, x19, #0x1
 970:	add	x0, x0, x1
 974:	udiv	x0, x0, x1
 978:	mul	x0, x0, x1
 97c:	cbz	w20, 8bc <LLVMABISizeOfType+0x94>
 980:	stp	x23, x24, [sp, #48]
 984:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 988:	cmp	w2, #0xb
 98c:	b.eq	a2c <LLVMABISizeOfType+0x204>  // b.none
 990:	cmp	w2, #0xd
 994:	b.ne	8ec <LLVMABISizeOfType+0xc4>  // b.any
 998:	mov	x1, x21
 99c:	mov	x0, x22
 9a0:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 9a4:	ldr	x19, [x0]
 9a8:	and	x19, x19, #0x1fffffffffffffff
 9ac:	b	898 <LLVMABISizeOfType+0x70>
 9b0:	mov	x19, #0x4                   	// #4
 9b4:	b	898 <LLVMABISizeOfType+0x70>
 9b8:	mov	x19, #0xa                   	// #10
 9bc:	b	898 <LLVMABISizeOfType+0x70>
 9c0:	ldr	w1, [x21, #8]
 9c4:	mov	x0, x22
 9c8:	lsr	w1, w1, #8
 9cc:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 9d0:	and	x19, x0, #0x1fffffff
 9d4:	b	898 <LLVMABISizeOfType+0x70>
 9d8:	stp	x23, x24, [sp, #48]
 9dc:	mov	x0, x22
 9e0:	ldp	x23, x24, [x21, #24]
 9e4:	mov	x1, x23
 9e8:	bl	0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 9ec:	add	x19, x0, #0x7
 9f0:	and	w20, w1, #0xff
 9f4:	mov	x1, x23
 9f8:	mov	x0, x22
 9fc:	lsr	x19, x19, #3
 a00:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 a04:	mov	w1, w0
 a08:	cbz	w0, ac0 <LLVMABISizeOfType+0x298>
 a0c:	sub	x19, x19, #0x1
 a10:	add	x19, x19, x1
 a14:	udiv	x19, x19, x1
 a18:	mul	x19, x19, x1
 a1c:	mul	x19, x19, x24
 a20:	ldp	x23, x24, [sp, #48]
 a24:	and	x19, x19, #0x1fffffffffffffff
 a28:	b	958 <LLVMABISizeOfType+0x130>
 a2c:	ldr	w19, [x21, #8]
 a30:	lsr	w19, w19, #8
 a34:	add	x19, x19, #0x7
 a38:	lsr	x19, x19, #3
 a3c:	b	898 <LLVMABISizeOfType+0x70>
 a40:	mov	x1, x21
 a44:	mov	x0, x22
 a48:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 a4c:	mov	w1, w0
 a50:	cbz	w0, abc <LLVMABISizeOfType+0x294>
 a54:	add	x0, x1, #0xf
 a58:	udiv	x0, x0, x1
 a5c:	mul	x0, x0, x1
 a60:	b	8bc <LLVMABISizeOfType+0x94>
 a64:	mov	x19, #0x8                   	// #8
 a68:	b	898 <LLVMABISizeOfType+0x70>
 a6c:	sub	w0, w2, #0xd
 a70:	cmp	w0, #0x1
 a74:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 a78:	b.ne	a98 <LLVMABISizeOfType+0x270>  // b.any
 a7c:	mov	x0, x21
 a80:	mov	x1, #0x0                   	// #0
 a84:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 a88:	tst	w0, #0xff
 a8c:	b.eq	a98 <LLVMABISizeOfType+0x270>  // b.none
 a90:	ldrb	w2, [x21, #8]
 a94:	b	860 <LLVMABISizeOfType+0x38>
 a98:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 a9c:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aa0:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aa4:	add	x3, x3, #0x0
 aa8:	add	x1, x1, #0x0
 aac:	add	x0, x0, #0x0
 ab0:	mov	w2, #0x271                 	// #625
 ab4:	stp	x23, x24, [sp, #48]
 ab8:	bl	0 <__assert_fail>
 abc:	stp	x23, x24, [sp, #48]
 ac0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ac4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ac8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 acc:	add	x3, x3, #0x0
 ad0:	add	x1, x1, #0x0
 ad4:	add	x0, x0, #0x0
 ad8:	mov	w2, #0xc7                  	// #199
 adc:	bl	0 <__assert_fail>
 ae0:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ae4:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 ae8:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 aec:	add	x3, x3, #0x0
 af0:	add	x1, x1, #0x0
 af4:	add	x0, x0, #0x0
 af8:	mov	w2, #0x220                 	// #544
 afc:	stp	x23, x24, [sp, #48]
 b00:	bl	0 <__assert_fail>
 b04:	nop

0000000000000b08 <LLVMABIAlignmentOfType>:
 b08:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 b0c:	nop

0000000000000b10 <LLVMCallFrameAlignmentOfType>:
 b10:	b	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 b14:	nop

0000000000000b18 <LLVMPreferredAlignmentOfType>:
 b18:	b	0 <_ZNK4llvm10DataLayout20getPrefTypeAlignmentEPNS_4TypeE>
 b1c:	nop

0000000000000b20 <LLVMPreferredAlignmentOfGlobal>:
 b20:	stp	x29, x30, [sp, #-16]!
 b24:	mov	x29, sp
 b28:	cbz	x1, b40 <LLVMPreferredAlignmentOfGlobal+0x20>
 b2c:	ldrb	w2, [x1, #16]
 b30:	cmp	w2, #0x3
 b34:	b.ne	b60 <LLVMPreferredAlignmentOfGlobal+0x40>  // b.any
 b38:	ldp	x29, x30, [sp], #16
 b3c:	b	0 <_ZNK4llvm10DataLayout21getPreferredAlignmentEPKNS_14GlobalVariableE>
 b40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b4c:	add	x3, x3, #0x0
 b50:	add	x1, x1, #0x0
 b54:	add	x0, x0, #0x0
 b58:	mov	w2, #0x69                  	// #105
 b5c:	bl	0 <__assert_fail>
 b60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b6c:	add	x3, x3, #0x0
 b70:	add	x1, x1, #0x0
 b74:	add	x0, x0, #0x0
 b78:	mov	w2, #0x108                 	// #264
 b7c:	bl	0 <__assert_fail>

0000000000000b80 <LLVMElementAtOffset>:
 b80:	stp	x29, x30, [sp, #-32]!
 b84:	mov	x29, sp
 b88:	str	x19, [sp, #16]
 b8c:	cbz	x1, bb4 <LLVMElementAtOffset+0x34>
 b90:	mov	x19, x2
 b94:	ldrb	w2, [x1, #8]
 b98:	cmp	w2, #0xd
 b9c:	b.ne	bd4 <LLVMElementAtOffset+0x54>  // b.any
 ba0:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 ba4:	mov	x1, x19
 ba8:	ldr	x19, [sp, #16]
 bac:	ldp	x29, x30, [sp], #32
 bb0:	b	0 <_ZNK4llvm12StructLayout26getElementContainingOffsetEm>
 bb4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bb8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bbc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bc0:	add	x3, x3, #0x0
 bc4:	add	x1, x1, #0x0
 bc8:	add	x0, x0, #0x0
 bcc:	mov	w2, #0x69                  	// #105
 bd0:	bl	0 <__assert_fail>
 bd4:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bd8:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 bdc:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 be0:	add	x3, x3, #0x0
 be4:	add	x1, x1, #0x0
 be8:	add	x0, x0, #0x0
 bec:	mov	w2, #0x108                 	// #264
 bf0:	bl	0 <__assert_fail>
 bf4:	nop

0000000000000bf8 <LLVMOffsetOfElement>:
 bf8:	stp	x29, x30, [sp, #-32]!
 bfc:	mov	x29, sp
 c00:	str	x19, [sp, #16]
 c04:	cbz	x1, c40 <LLVMOffsetOfElement+0x48>
 c08:	mov	w19, w2
 c0c:	ldrb	w2, [x1, #8]
 c10:	cmp	w2, #0xd
 c14:	b.ne	c80 <LLVMOffsetOfElement+0x88>  // b.any
 c18:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 c1c:	ldr	w1, [x0, #12]
 c20:	ubfx	x1, x1, #0, #31
 c24:	cmp	w1, w19
 c28:	b.ls	c60 <LLVMOffsetOfElement+0x68>  // b.plast
 c2c:	add	x19, x0, w19, uxtw #3
 c30:	ldr	x0, [x19, #16]
 c34:	ldr	x19, [sp, #16]
 c38:	ldp	x29, x30, [sp], #32
 c3c:	ret
 c40:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c44:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c48:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c4c:	add	x3, x3, #0x0
 c50:	add	x1, x1, #0x0
 c54:	add	x0, x0, #0x0
 c58:	mov	w2, #0x69                  	// #105
 c5c:	bl	0 <__assert_fail>
 c60:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c64:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c68:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c6c:	add	x3, x3, #0x0
 c70:	add	x1, x1, #0x0
 c74:	add	x0, x0, #0x0
 c78:	mov	w2, #0x260                 	// #608
 c7c:	bl	0 <__assert_fail>
 c80:	adrp	x3, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c84:	adrp	x1, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c88:	adrp	x0, 0 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 c8c:	add	x3, x3, #0x0
 c90:	add	x1, x1, #0x0
 c94:	add	x0, x0, #0x0
 c98:	mov	w2, #0x108                 	// #264
 c9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

TargetIntrinsicInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	mov	x0, x1
  14:	bl	0 <_ZNK4llvm5Value12getValueNameEv>
  18:	cbz	x0, 40 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE+0x40>
  1c:	ldr	x3, [x19]
  20:	mov	x1, x0
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ldr	w2, [x1], #16
  34:	ldr	x3, [x3, #24]
  38:	mov	x16, x3
  3c:	br	x16
  40:	mov	w0, #0x0                   	// #0
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

0000000000000050 <_ZN4llvm19TargetIntrinsicInfoC1Ev>:
  50:	adrp	x1, 0 <_ZNK4llvm19TargetIntrinsicInfo14getIntrinsicIDEPKNS_8FunctionE>
  54:	ldr	x1, [x1]
  58:	add	x1, x1, #0x10
  5c:	str	x1, [x0]
  60:	ret
  64:	nop

0000000000000068 <_ZN4llvm19TargetIntrinsicInfoD1Ev>:
  68:	ret
  6c:	nop

0000000000000070 <_ZN4llvm19TargetIntrinsicInfoD0Ev>:
  70:	stp	x29, x30, [sp, #-32]!
  74:	mov	x29, sp
  78:	str	x19, [sp, #16]
  7c:	mov	x19, x0
  80:	bl	68 <_ZN4llvm19TargetIntrinsicInfoD1Ev>
  84:	mov	x0, x19
  88:	mov	x1, #0x8                   	// #8
  8c:	ldr	x19, [sp, #16]
  90:	ldp	x29, x30, [sp], #32
  94:	b	0 <_ZdlPvm>

TargetLoweringObjectFile.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>:
   0:	ret
   4:	nop

0000000000000008 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj>:
   8:	sub	w2, w2, #0x3
   c:	mov	x1, x0
  10:	and	w2, w2, #0xff
  14:	cmp	w2, #0x7
  18:	b.ls	24 <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x1c>  // b.plast
  1c:	ldr	x0, [x1, #32]
  20:	ret
  24:	ldr	x0, [x0, #48]
  28:	cbz	x0, 1c <_ZNK4llvm24TargetLoweringObjectFile21getSectionForConstantERKNS_10DataLayoutENS_11SectionKindEPKNS_8ConstantERj+0x14>
  2c:	ret

0000000000000030 <_ZNK4llvm24TargetLoweringObjectFile23getCFIPersonalitySymbolEPKNS_11GlobalValueERKNS_13TargetMachineEPNS_17MachineModuleInfoE>:
  30:	mov	x0, x2
  34:	b	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>

0000000000000038 <_ZL13isNullOrUndefPKN4llvm8ConstantE>:
  38:	stp	x29, x30, [sp, #-48]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x19, x0
  48:	bl	0 <_ZNK4llvm8Constant11isNullValueEv>
  4c:	ands	w20, w0, #0xff
  50:	b.ne	c8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x90>  // b.any
  54:	cbz	x19, 13c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x104>
  58:	ldrb	w0, [x19, #16]
  5c:	cmp	w0, #0x9
  60:	b.eq	c8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x90>  // b.none
  64:	sub	w0, w0, #0x6
  68:	cmp	w0, #0x2
  6c:	b.hi	cc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x94>  // b.pmore
  70:	ldr	w0, [x19, #20]
  74:	mov	w2, #0x18                  	// #24
  78:	ldrb	w1, [x19, #23]
  7c:	str	x21, [sp, #32]
  80:	ubfx	x0, x0, #0, #28
  84:	umull	x0, w0, w2
  88:	sub	x21, x19, x0
  8c:	tbnz	w1, #6, dc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xa4>
  90:	cmp	x21, x19
  94:	b.eq	c4 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x8c>  // b.none
  98:	ldr	x0, [x21]
  9c:	cbz	x0, 11c <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xe4>
  a0:	ldrb	w1, [x0, #16]
  a4:	cmp	w1, #0x10
  a8:	b.hi	fc <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xc4>  // b.pmore
  ac:	bl	38 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
  b0:	tst	w0, #0xff
  b4:	b.eq	e8 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xb0>  // b.none
  b8:	add	x21, x21, #0x18
  bc:	cmp	x19, x21
  c0:	b.ne	98 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x60>  // b.any
  c4:	ldr	x21, [sp, #32]
  c8:	mov	w20, #0x1                   	// #1
  cc:	mov	w0, w20
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x29, x30, [sp], #48
  d8:	ret
  dc:	ldur	x21, [x19, #-8]
  e0:	add	x19, x21, x0
  e4:	b	90 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0x58>
  e8:	mov	w0, w20
  ec:	ldp	x19, x20, [sp, #16]
  f0:	ldr	x21, [sp, #32]
  f4:	ldp	x29, x30, [sp], #48
  f8:	ret
  fc:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 100:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 104:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 108:	add	x3, x3, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x0, x0, #0x0
 114:	mov	w2, #0x108                 	// #264
 118:	bl	0 <__assert_fail>
 11c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 120:	add	x3, x3, #0x0
 124:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 128:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 12c:	add	x1, x1, #0x0
 130:	add	x0, x0, #0x0
 134:	mov	w2, #0x69                  	// #105
 138:	bl	0 <__assert_fail>
 13c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 140:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 144:	add	x3, x3, #0x0
 148:	str	x21, [sp, #32]
 14c:	b	128 <_ZL13isNullOrUndefPKN4llvm8ConstantE+0xf0>

0000000000000150 <_ZNK4llvm24TargetLoweringObjectFile25getDebugThreadLocalSymbolEPKNS_8MCSymbolE>:
 150:	mov	x2, x0
 154:	mov	x3, #0x0                   	// #0
 158:	mov	x0, x1
 15c:	mov	w1, #0x0                   	// #0
 160:	ldr	x2, [x2, #800]
 164:	b	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>

0000000000000168 <_ZNK4llvm24TargetLoweringObjectFile17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERKNS_13TargetMachineE>:
 168:	ldr	x0, [x0, #808]
 16c:	mov	w3, #0x0                   	// #0
 170:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 174:	nop

0000000000000178 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>:
 178:	stp	x29, x30, [sp, #-16]!
 17c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 180:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 184:	mov	x29, sp
 188:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 18c:	add	x3, x3, #0x0
 190:	add	x1, x1, #0x0
 194:	add	x0, x0, #0x0
 198:	mov	w2, #0x7d                  	// #125
 19c:	bl	0 <__assert_fail>

00000000000001a0 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE>:
 1a0:	ands	w0, w1, #0xff
 1a4:	b.ne	1c8 <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x28>  // b.any
 1a8:	ldrb	w1, [x2, #32]
 1ac:	and	w1, w1, #0xf
 1b0:	sub	w0, w1, #0x4
 1b4:	cmp	w0, #0x1
 1b8:	cset	w0, ls  // ls = plast
 1bc:	cmp	w1, #0x2
 1c0:	csinc	w0, w0, wzr, ne  // ne = any
 1c4:	cbz	w0, 1cc <_ZNK4llvm24TargetLoweringObjectFile35shouldPutJumpTableInFunctionSectionEbRKNS_8FunctionE+0x2c>
 1c8:	ret
 1cc:	add	w0, w1, #0x7
 1d0:	and	w0, w0, #0xf
 1d4:	cmp	w0, #0x1
 1d8:	cset	w0, ls  // ls = plast
 1dc:	cmp	w1, #0x3
 1e0:	csinc	w0, w0, wzr, ne  // ne = any
 1e4:	ret

00000000000001e8 <_ZN4llvm3isaINS_8FunctionEPKNS_12GlobalObjectEEEbRKT0_.isra.0.part.0>:
 1e8:	stp	x29, x30, [sp, #-16]!
 1ec:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1f0:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1f4:	mov	x29, sp
 1f8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 1fc:	add	x3, x3, #0x0
 200:	add	x1, x1, #0x0
 204:	add	x0, x0, #0x0
 208:	mov	w2, #0x69                  	// #105
 20c:	bl	0 <__assert_fail>

0000000000000210 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>:
 210:	stp	x29, x30, [sp, #-16]!
 214:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 218:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 21c:	mov	x29, sp
 220:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 224:	add	x3, x3, #0x0
 228:	add	x1, x1, #0x0
 22c:	add	x0, x0, #0x0
 230:	mov	w2, #0x69                  	// #105
 234:	bl	0 <__assert_fail>

0000000000000238 <_ZN4llvm3isaINS_9ArrayTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>:
 238:	stp	x29, x30, [sp, #-16]!
 23c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 240:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 244:	mov	x29, sp
 248:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 24c:	add	x3, x3, #0x0
 250:	add	x1, x1, #0x0
 254:	add	x0, x0, #0x0
 258:	mov	w2, #0x69                  	// #105
 25c:	bl	0 <__assert_fail>

0000000000000260 <_ZN4llvm3isaINS_14GlobalVariableEPKNS_12GlobalObjectEEEbRKT0_.isra.0.part.0>:
 260:	stp	x29, x30, [sp, #-16]!
 264:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 268:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 26c:	mov	x29, sp
 270:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 274:	add	x3, x3, #0x0
 278:	add	x1, x1, #0x0
 27c:	add	x0, x0, #0x0
 280:	mov	w2, #0x69                  	// #105
 284:	bl	0 <__assert_fail>

0000000000000288 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE>:
 288:	stp	x29, x30, [sp, #-48]!
 28c:	mov	x29, sp
 290:	stp	x21, x22, [sp, #32]
 294:	ldr	x21, [x0, #808]
 298:	stp	x19, x20, [sp, #16]
 29c:	mov	x19, x0
 2a0:	str	x1, [x0, #800]
 2a4:	mov	x20, x2
 2a8:	cbz	x21, 2c8 <_ZN4llvm24TargetLoweringObjectFile10InitializeERNS_9MCContextERKNS_13TargetMachineE+0x40>
 2ac:	ldr	x0, [x21, #8]
 2b0:	ldr	w1, [x21, #24]
 2b4:	lsl	x1, x1, #4
 2b8:	bl	0 <_ZdlPvm>
 2bc:	mov	x0, x21
 2c0:	mov	x1, #0x20                  	// #32
 2c4:	bl	0 <_ZdlPvm>
 2c8:	mov	x0, #0x20                  	// #32
 2cc:	bl	0 <_Znwm>
 2d0:	mov	x1, x0
 2d4:	str	x1, [x19, #808]
 2d8:	mov	x0, x20
 2dc:	stp	xzr, xzr, [x1]
 2e0:	str	xzr, [x1, #16]
 2e4:	str	wzr, [x1, #24]
 2e8:	bl	0 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
 2ec:	mov	w21, w0
 2f0:	mov	x0, x20
 2f4:	ldr	x22, [x19, #800]
 2f8:	bl	0 <_ZNK4llvm13TargetMachine12getCodeModelEv>
 2fc:	cmp	w0, #0x4
 300:	add	x0, x19, #0x8
 304:	add	x19, x19, #0x400
 308:	mov	w2, w21
 30c:	mov	x3, x22
 310:	add	x1, x20, #0x1c0
 314:	cset	w4, eq  // eq = none
 318:	bl	0 <_ZN4llvm16MCObjectFileInfo20InitMCObjectFileInfoERKNS_6TripleEbRNS_9MCContextEb>
 31c:	mov	x0, #0x100000000           	// #4294967296
 320:	ldp	x21, x22, [sp, #32]
 324:	stur	xzr, [x19, #-204]
 328:	stur	x0, [x19, #-196]
 32c:	ldp	x19, x20, [sp, #16]
 330:	ldp	x29, x30, [sp], #48
 334:	ret

0000000000000338 <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE>:
 338:	stp	x29, x30, [sp, #-48]!
 33c:	mov	x29, sp
 340:	stp	x19, x20, [sp, #16]
 344:	mov	x19, x0
 348:	ldr	x0, [x1, #40]
 34c:	str	wzr, [sp, #44]
 350:	ldr	x1, [x19]
 354:	ldr	x20, [x1, #48]
 358:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 35c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 360:	mov	w1, #0x3                   	// #3
 364:	add	x3, x3, #0x0
 368:	mov	w2, #0x0                   	// #0
 36c:	cmp	x20, x3
 370:	bfxil	w2, w1, #0, #8
 374:	b.ne	39c <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE+0x64>  // b.any
 378:	ldr	x0, [x19, #48]
 37c:	cbz	x0, 38c <_ZNK4llvm24TargetLoweringObjectFile22getSectionForJumpTableERKNS_8FunctionERKNS_13TargetMachineE+0x54>
 380:	ldp	x19, x20, [sp, #16]
 384:	ldp	x29, x30, [sp], #48
 388:	ret
 38c:	ldr	x0, [x19, #32]
 390:	ldp	x19, x20, [sp, #16]
 394:	ldp	x29, x30, [sp], #48
 398:	ret
 39c:	mov	x1, x0
 3a0:	add	x4, sp, #0x2c
 3a4:	mov	x0, x19
 3a8:	mov	x3, #0x0                   	// #0
 3ac:	blr	x20
 3b0:	ldp	x19, x20, [sp, #16]
 3b4:	ldp	x29, x30, [sp], #48
 3b8:	ret
 3bc:	nop

00000000000003c0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>:
 3c0:	stp	x29, x30, [sp, #-32]!
 3c4:	mov	x29, sp
 3c8:	str	x19, [sp, #16]
 3cc:	mov	x19, x0
 3d0:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 3d4:	tst	w0, #0xff
 3d8:	b.ne	410 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x50>  // b.any
 3dc:	ldur	x0, [x19, #-24]
 3e0:	bl	38 <_ZL13isNullOrUndefPKN4llvm8ConstantE>
 3e4:	ands	w0, w0, #0xff
 3e8:	b.eq	404 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x44>  // b.none
 3ec:	ldrb	w1, [x19, #80]
 3f0:	mov	w0, #0x0                   	// #0
 3f4:	tbnz	w1, #0, 404 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE+0x44>
 3f8:	ldrh	w0, [x19, #34]
 3fc:	eor	x0, x0, #0x40
 400:	ubfx	w0, w0, #6, #1
 404:	ldr	x19, [sp, #16]
 408:	ldp	x29, x30, [sp], #32
 40c:	ret
 410:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 414:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 418:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 41c:	add	x3, x3, #0x0
 420:	add	x1, x1, #0x0
 424:	add	x0, x0, #0x0
 428:	mov	w2, #0x89                  	// #137
 42c:	bl	0 <__assert_fail>

0000000000000430 <_ZN4llvm24TargetLoweringObjectFileD1Ev>:
 430:	stp	x29, x30, [sp, #-32]!
 434:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 438:	mov	x29, sp
 43c:	ldr	x1, [x1]
 440:	stp	x19, x20, [sp, #16]
 444:	mov	x19, x0
 448:	ldr	x20, [x0, #808]
 44c:	add	x1, x1, #0x10
 450:	str	x1, [x0]
 454:	cbz	x20, 474 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x44>
 458:	ldr	x0, [x20, #8]
 45c:	ldr	w1, [x20, #24]
 460:	lsl	x1, x1, #4
 464:	bl	0 <_ZdlPvm>
 468:	mov	x0, x20
 46c:	mov	x1, #0x20                  	// #32
 470:	bl	0 <_ZdlPvm>
 474:	ldr	x0, [x19, #728]
 478:	add	x1, x19, #0x2e8
 47c:	cmp	x0, x1
 480:	b.eq	488 <_ZN4llvm24TargetLoweringObjectFileD1Ev+0x58>  // b.none
 484:	bl	0 <_ZdlPv>
 488:	ldr	w1, [x19, #480]
 48c:	ldr	x0, [x19, #464]
 490:	ldp	x19, x20, [sp, #16]
 494:	lsl	x1, x1, #4
 498:	ldp	x29, x30, [sp], #32
 49c:	b	0 <_ZdlPvm>

00000000000004a0 <_ZN4llvm24TargetLoweringObjectFileD0Ev>:
 4a0:	stp	x29, x30, [sp, #-32]!
 4a4:	mov	x29, sp
 4a8:	str	x19, [sp, #16]
 4ac:	mov	x19, x0
 4b0:	bl	430 <_ZN4llvm24TargetLoweringObjectFileD1Ev>
 4b4:	mov	x0, x19
 4b8:	mov	x1, #0x358                 	// #856
 4bc:	ldr	x19, [sp, #16]
 4c0:	ldp	x29, x30, [sp], #32
 4c4:	b	0 <_ZdlPvm>

00000000000004c8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE>:
 4c8:	stp	x29, x30, [sp, #-192]!
 4cc:	mov	x29, sp
 4d0:	stp	x19, x20, [sp, #16]
 4d4:	stp	x21, x22, [sp, #32]
 4d8:	stp	x23, x24, [sp, #48]
 4dc:	stp	x25, x26, [sp, #64]
 4e0:	cbz	x3, 6f0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x228>
 4e4:	mov	x23, x1
 4e8:	mov	x24, x0
 4ec:	add	x19, sp, #0x70
 4f0:	mov	x25, x2
 4f4:	add	x2, x19, #0x10
 4f8:	mov	x1, #0x3c00000000          	// #257698037760
 4fc:	ldr	x0, [x23, #40]
 500:	mov	x22, x3
 504:	mov	x26, x4
 508:	stp	x2, x1, [sp, #112]
 50c:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 510:	ldr	w0, [x0, #24]
 514:	cmp	w0, #0x3
 518:	b.eq	68c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1c4>  // b.none
 51c:	b.hi	5f0 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x128>  // b.pmore
 520:	cmp	w0, #0x1
 524:	b.eq	68c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1c4>  // b.none
 528:	cmp	w0, #0x2
 52c:	b.eq	63c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x174>  // b.none
 530:	cbnz	w0, 6d8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x210>
 534:	ldr	w1, [sp, #120]
 538:	mov	x20, #0x0                   	// #0
 53c:	ldr	w0, [sp, #124]
 540:	add	x20, x20, x1
 544:	cmp	x20, x0
 548:	b.hi	6b8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1f0>  // b.pmore
 54c:	ldr	x3, [x24, #808]
 550:	mov	x0, x26
 554:	mov	x1, x19
 558:	mov	x2, x23
 55c:	mov	w4, #0x0                   	// #0
 560:	str	w20, [sp, #120]
 564:	bl	0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 568:	ldp	w0, w1, [sp, #120]
 56c:	sub	x1, x1, x0
 570:	cmp	x22, x1
 574:	b.hi	69c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1d4>  // b.pmore
 578:	ldr	x3, [sp, #112]
 57c:	mov	x2, x22
 580:	mov	x1, x25
 584:	add	x0, x3, x0
 588:	bl	0 <memcpy>
 58c:	ldp	w3, w0, [sp, #120]
 590:	add	x22, x3, x22
 594:	cmp	x22, x0
 598:	b.hi	6b8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x1f0>  // b.pmore
 59c:	ldr	x0, [x24, #800]
 5a0:	mov	w2, #0x106                 	// #262
 5a4:	add	x1, sp, #0x58
 5a8:	stp	x19, xzr, [sp, #88]
 5ac:	add	x19, x19, #0x10
 5b0:	strh	w2, [sp, #104]
 5b4:	str	w22, [sp, #120]
 5b8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 5bc:	ldr	x1, [sp, #112]
 5c0:	mov	x20, x0
 5c4:	cmp	x1, x19
 5c8:	b.eq	5d4 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x10c>  // b.none
 5cc:	mov	x0, x1
 5d0:	bl	0 <free>
 5d4:	mov	x0, x20
 5d8:	ldp	x19, x20, [sp, #16]
 5dc:	ldp	x21, x22, [sp, #32]
 5e0:	ldp	x23, x24, [sp, #48]
 5e4:	ldp	x25, x26, [sp, #64]
 5e8:	ldp	x29, x30, [sp], #192
 5ec:	ret
 5f0:	cmp	w0, #0x4
 5f4:	b.eq	63c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x174>  // b.none
 5f8:	cmp	w0, #0x5
 5fc:	b.ne	6d8 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x210>  // b.any
 600:	adrp	x21, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 604:	add	x21, x21, #0x0
 608:	mov	x20, #0x1                   	// #1
 60c:	ldp	w0, w1, [sp, #120]
 610:	sub	x1, x1, x0
 614:	cmp	x1, x20
 618:	b.cc	658 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x190>  // b.lo, b.ul, b.last
 61c:	nop
 620:	ldr	x3, [sp, #112]
 624:	mov	x1, x21
 628:	mov	x2, x20
 62c:	add	x0, x3, x0
 630:	bl	0 <memcpy>
 634:	ldr	w1, [sp, #120]
 638:	b	53c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x74>
 63c:	ldp	w0, w1, [sp, #120]
 640:	adrp	x21, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 644:	mov	x20, #0x1                   	// #1
 648:	add	x21, x21, #0x0
 64c:	sub	x1, x1, x0
 650:	cmp	x1, x20
 654:	b.cs	620 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x158>  // b.hs, b.nlast
 658:	add	x2, x0, x20
 65c:	add	x1, x19, #0x10
 660:	mov	x0, x19
 664:	mov	x3, #0x1                   	// #1
 668:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 66c:	ldr	x3, [sp, #112]
 670:	mov	x1, x21
 674:	ldr	w0, [sp, #120]
 678:	mov	x2, x20
 67c:	add	x0, x3, x0
 680:	bl	0 <memcpy>
 684:	ldr	w1, [sp, #120]
 688:	b	53c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x74>
 68c:	adrp	x21, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 690:	mov	x20, #0x2                   	// #2
 694:	add	x21, x21, #0x0
 698:	b	60c <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0x144>
 69c:	add	x2, x22, x0
 6a0:	add	x1, x19, #0x10
 6a4:	mov	x0, x19
 6a8:	mov	x3, #0x1                   	// #1
 6ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 6b0:	ldr	w0, [sp, #120]
 6b4:	b	578 <_ZNK4llvm24TargetLoweringObjectFile28getSymbolWithGlobalValueBaseEPKNS_11GlobalValueENS_9StringRefERKNS_13TargetMachineE+0xb0>
 6b8:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6bc:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6c0:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6c4:	add	x3, x3, #0x0
 6c8:	add	x1, x1, #0x0
 6cc:	add	x0, x0, #0x0
 6d0:	mov	w2, #0x43                  	// #67
 6d4:	bl	0 <__assert_fail>
 6d8:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6dc:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6e0:	add	x1, x1, #0x0
 6e4:	add	x0, x0, #0x0
 6e8:	mov	w2, #0x14d                 	// #333
 6ec:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 6f0:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6f4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6f8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 6fc:	add	x3, x3, #0x0
 700:	add	x1, x1, #0x0
 704:	add	x0, x0, #0x0
 708:	mov	w2, #0x76                  	// #118
 70c:	bl	0 <__assert_fail>

0000000000000710 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE>:
 710:	stp	x29, x30, [sp, #-64]!
 714:	mov	x29, sp
 718:	stp	x19, x20, [sp, #16]
 71c:	mov	x19, x0
 720:	stp	x21, x22, [sp, #32]
 724:	mov	x21, x1
 728:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 72c:	tst	w0, #0xff
 730:	b.ne	9fc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2ec>  // b.any
 734:	ldrb	w0, [x19, #32]
 738:	and	w0, w0, #0xf
 73c:	cmp	w0, #0x1
 740:	b.eq	9fc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2ec>  // b.none
 744:	ldrb	w2, [x19, #16]
 748:	cbnz	w2, 76c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x5c>
 74c:	mov	w0, #0x1                   	// #1
 750:	mov	w20, #0x0                   	// #0
 754:	bfxil	w20, w0, #0, #8
 758:	mov	w0, w20
 75c:	ldp	x19, x20, [sp, #16]
 760:	ldp	x21, x22, [sp, #32]
 764:	ldp	x29, x30, [sp], #64
 768:	ret
 76c:	cmp	w2, #0x3
 770:	b.ne	ab0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3a0>  // b.any
 774:	ldrb	w1, [x19, #33]
 778:	tst	x1, #0x1c
 77c:	b.ne	808 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xf8>  // b.any
 780:	cmp	w0, #0xa
 784:	b.ne	7a8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x98>  // b.any
 788:	mov	w0, #0x10                  	// #16
 78c:	mov	w20, #0x0                   	// #0
 790:	bfxil	w20, w0, #0, #8
 794:	mov	w0, w20
 798:	ldp	x19, x20, [sp, #16]
 79c:	ldp	x21, x22, [sp, #32]
 7a0:	ldp	x29, x30, [sp], #64
 7a4:	ret
 7a8:	mov	x0, x19
 7ac:	bl	3c0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 7b0:	tst	w0, #0xff
 7b4:	b.eq	7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xe0>  // b.none
 7b8:	ldrsb	w0, [x21, #776]
 7bc:	tbnz	w0, #31, 7f0 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0xe0>
 7c0:	ldrb	w0, [x19, #32]
 7c4:	mov	w1, #0xe                   	// #14
 7c8:	mov	w20, #0x0                   	// #0
 7cc:	and	w0, w0, #0xf
 7d0:	bfxil	w20, w1, #0, #8
 7d4:	sub	w1, w0, #0x7
 7d8:	cmp	w1, #0x1
 7dc:	b.ls	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>  // b.plast
 7e0:	cbnz	w0, 8ac <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x19c>
 7e4:	mov	w0, #0xf                   	// #15
 7e8:	bfxil	w20, w0, #0, #8
 7ec:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 7f0:	ldrb	w0, [x19, #80]
 7f4:	tbnz	w0, #0, 840 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x130>
 7f8:	mov	w0, #0x11                  	// #17
 7fc:	mov	w20, #0x0                   	// #0
 800:	bfxil	w20, w0, #0, #8
 804:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 808:	mov	x0, x19
 80c:	bl	3c0 <_ZL16isSuitableForBSSPKN4llvm14GlobalVariableE>
 810:	tst	w0, #0xff
 814:	b.eq	830 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x120>  // b.none
 818:	ldrsb	w0, [x21, #776]
 81c:	tbnz	w0, #31, 830 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x120>
 820:	mov	w0, #0xb                   	// #11
 824:	mov	w20, #0x0                   	// #0
 828:	bfxil	w20, w0, #0, #8
 82c:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 830:	mov	w0, #0xc                   	// #12
 834:	mov	w20, #0x0                   	// #0
 838:	bfxil	w20, w0, #0, #8
 83c:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 840:	mov	x0, x19
 844:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 848:	tst	w0, #0xff
 84c:	b.ne	b2c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x41c>  // b.any
 850:	ldur	x22, [x19, #-24]
 854:	mov	x0, x22
 858:	bl	0 <_ZNK4llvm8Constant15needsRelocationEv>
 85c:	tst	w0, #0xff
 860:	b.ne	884 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x174>  // b.any
 864:	ldrb	w0, [x19, #32]
 868:	ubfx	x0, x0, #6, #2
 86c:	cmp	w0, #0x2
 870:	b.eq	8b8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1a8>  // b.none
 874:	mov	w0, #0x3                   	// #3
 878:	mov	w20, #0x0                   	// #0
 87c:	bfxil	w20, w0, #0, #8
 880:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 884:	mov	x0, x21
 888:	bl	0 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 88c:	cmp	w0, #0x0
 890:	sub	w0, w0, #0x3
 894:	ccmp	w0, #0x2, #0x0, ne  // ne = any
 898:	b.ls	874 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x164>  // b.plast
 89c:	mov	w0, #0x12                  	// #18
 8a0:	mov	w20, #0x0                   	// #0
 8a4:	bfxil	w20, w0, #0, #8
 8a8:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 8ac:	mov	w0, #0xd                   	// #13
 8b0:	bfxil	w20, w0, #0, #8
 8b4:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 8b8:	ldr	x0, [x22]
 8bc:	cbz	x0, b50 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x440>
 8c0:	ldrb	w1, [x0, #8]
 8c4:	cmp	w1, #0xe
 8c8:	b.eq	968 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x258>  // b.none
 8cc:	ldr	x0, [x19, #40]
 8d0:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
 8d4:	mov	x19, x0
 8d8:	ldr	x22, [x22]
 8dc:	mov	x1, x22
 8e0:	bl	0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 8e4:	mov	x2, x0
 8e8:	and	w21, w1, #0xff
 8ec:	mov	x1, x22
 8f0:	mov	x0, x19
 8f4:	mov	x19, x2
 8f8:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 8fc:	mov	w1, w0
 900:	cbz	w0, b60 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x450>
 904:	add	x0, x19, #0x7
 908:	lsr	x0, x0, #3
 90c:	sub	x0, x0, #0x1
 910:	add	x0, x0, x1
 914:	udiv	x0, x0, x1
 918:	mul	x0, x0, x1
 91c:	cbnz	w21, b58 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x448>
 920:	cmp	x0, #0x10
 924:	b.eq	a30 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x320>  // b.none
 928:	b.hi	950 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x240>  // b.pmore
 92c:	cmp	x0, #0x4
 930:	b.eq	a20 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x310>  // b.none
 934:	mov	w20, #0x0                   	// #0
 938:	cmp	x0, #0x8
 93c:	bfxil	w20, w0, #0, #8
 940:	b.eq	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>  // b.none
 944:	mov	w0, #0x3                   	// #3
 948:	bfxil	w20, w0, #0, #8
 94c:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 950:	cmp	x0, #0x20
 954:	b.ne	944 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x234>  // b.any
 958:	mov	w0, #0xa                   	// #10
 95c:	mov	w20, #0x0                   	// #0
 960:	bfxil	w20, w0, #0, #8
 964:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 968:	stp	x23, x24, [sp, #48]
 96c:	ldr	x24, [x0, #24]
 970:	cbz	x24, b28 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x418>
 974:	ldrb	w1, [x24, #8]
 978:	cmp	w1, #0xb
 97c:	b.eq	988 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x278>  // b.none
 980:	ldp	x23, x24, [sp, #48]
 984:	b	8cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1bc>
 988:	ldr	w1, [x24, #8]
 98c:	lsr	w3, w1, #8
 990:	sub	w2, w3, #0x8
 994:	cmp	w3, #0x20
 998:	and	w2, w2, #0xfffffff7
 99c:	ccmp	w2, #0x0, #0x4, ne  // ne = any
 9a0:	b.ne	980 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>  // b.any
 9a4:	ldrb	w3, [x22, #16]
 9a8:	sub	w2, w3, #0xb
 9ac:	and	w2, w2, #0xff
 9b0:	cmp	w2, #0x1
 9b4:	b.ls	a40 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x330>  // b.plast
 9b8:	cmp	w3, #0xa
 9bc:	b.ne	980 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>  // b.any
 9c0:	ldr	x0, [x0, #32]
 9c4:	cmp	x0, #0x1
 9c8:	b.ne	980 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>  // b.any
 9cc:	lsr	w1, w1, #8
 9d0:	cmp	w1, #0x8
 9d4:	b.eq	a94 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x384>  // b.none
 9d8:	cmp	w1, #0x10
 9dc:	b.eq	ad4 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3c4>  // b.none
 9e0:	cmp	w1, #0x20
 9e4:	b.ne	ae8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3d8>  // b.any
 9e8:	mov	w0, #0x6                   	// #6
 9ec:	mov	w20, #0x0                   	// #0
 9f0:	bfxil	w20, w0, #0, #8
 9f4:	ldp	x23, x24, [sp, #48]
 9f8:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 9fc:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a00:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a04:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 a08:	add	x3, x3, #0x0
 a0c:	add	x1, x1, #0x0
 a10:	add	x0, x0, #0x0
 a14:	mov	w2, #0x91                  	// #145
 a18:	stp	x23, x24, [sp, #48]
 a1c:	bl	0 <__assert_fail>
 a20:	mov	w0, #0x7                   	// #7
 a24:	mov	w20, #0x0                   	// #0
 a28:	bfxil	w20, w0, #0, #8
 a2c:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a30:	mov	w0, #0x9                   	// #9
 a34:	mov	w20, #0x0                   	// #0
 a38:	bfxil	w20, w0, #0, #8
 a3c:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 a40:	mov	x0, x22
 a44:	bl	0 <_ZNK4llvm22ConstantDataSequential14getNumElementsEv>
 a48:	mov	w23, w0
 a4c:	cbz	w0, b08 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x3f8>
 a50:	sub	w23, w23, #0x1
 a54:	mov	x0, x22
 a58:	mov	w1, w23
 a5c:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 a60:	cbnz	x0, 980 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x270>
 a64:	mov	w21, #0x0                   	// #0
 a68:	cbnz	w23, a7c <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x36c>
 a6c:	b	aa8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x398>
 a70:	add	w21, w21, #0x1
 a74:	cmp	w23, w21
 a78:	b.eq	aa8 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x398>  // b.none
 a7c:	mov	w1, w21
 a80:	mov	x0, x22
 a84:	bl	0 <_ZNK4llvm22ConstantDataSequential19getElementAsIntegerEj>
 a88:	cbnz	x0, a70 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x360>
 a8c:	ldp	x23, x24, [sp, #48]
 a90:	b	8cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x1bc>
 a94:	mov	w0, #0x4                   	// #4
 a98:	mov	w20, #0x0                   	// #0
 a9c:	bfxil	w20, w0, #0, #8
 aa0:	ldp	x23, x24, [sp, #48]
 aa4:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 aa8:	ldr	w1, [x24, #8]
 aac:	b	9cc <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x2bc>
 ab0:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ab4:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 ab8:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 abc:	add	x3, x3, #0x0
 ac0:	add	x1, x1, #0x0
 ac4:	add	x0, x0, #0x0
 ac8:	mov	w2, #0x108                 	// #264
 acc:	stp	x23, x24, [sp, #48]
 ad0:	bl	0 <__assert_fail>
 ad4:	mov	w0, #0x5                   	// #5
 ad8:	mov	w20, #0x0                   	// #0
 adc:	bfxil	w20, w0, #0, #8
 ae0:	ldp	x23, x24, [sp, #48]
 ae4:	b	758 <_ZN4llvm24TargetLoweringObjectFile16getKindForGlobalEPKNS_12GlobalObjectERKNS_13TargetMachineE+0x48>
 ae8:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 aec:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 af0:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 af4:	add	x3, x3, #0x0
 af8:	add	x1, x1, #0x0
 afc:	add	x0, x0, #0x0
 b00:	mov	w2, #0xcb                  	// #203
 b04:	bl	0 <__assert_fail>
 b08:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b0c:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b10:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b14:	add	x3, x3, #0x0
 b18:	add	x1, x1, #0x0
 b1c:	add	x0, x0, #0x0
 b20:	mov	w2, #0x61                  	// #97
 b24:	bl	0 <__assert_fail>
 b28:	bl	210 <_ZN4llvm13isa_impl_wrapINS_11IntegerTypeEPKNS_4TypeES4_E4doitERKS4_.isra.0.part.0>
 b2c:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b30:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b34:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b38:	add	x3, x3, #0x0
 b3c:	add	x1, x1, #0x0
 b40:	add	x0, x0, #0x0
 b44:	mov	w2, #0x89                  	// #137
 b48:	stp	x23, x24, [sp, #48]
 b4c:	bl	0 <__assert_fail>
 b50:	stp	x23, x24, [sp, #48]
 b54:	bl	238 <_ZN4llvm3isaINS_9ArrayTypeEPNS_4TypeEEEbRKT0_.isra.0.part.0>
 b58:	stp	x23, x24, [sp, #48]
 b5c:	bl	178 <_ZNK4llvm8TypeSize12getFixedSizeEv.isra.0.part.0>
 b60:	adrp	x3, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b64:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b68:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 b6c:	add	x3, x3, #0x0
 b70:	add	x1, x1, #0x0
 b74:	add	x0, x0, #0x0
 b78:	mov	w2, #0xc7                  	// #199
 b7c:	stp	x23, x24, [sp, #48]
 b80:	bl	0 <__assert_fail>
 b84:	nop

0000000000000b88 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE>:
 b88:	stp	x29, x30, [sp, #-80]!
 b8c:	mov	x29, sp
 b90:	ldrh	w4, [x1, #34]
 b94:	stp	x19, x20, [sp, #16]
 b98:	mov	x20, x0
 b9c:	tbz	w4, #6, bb8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x30>
 ba0:	ldr	x4, [x0]
 ba4:	ldr	x4, [x4, #80]
 ba8:	blr	x4
 bac:	ldp	x19, x20, [sp, #16]
 bb0:	ldp	x29, x30, [sp], #80
 bb4:	ret
 bb8:	stp	x21, x22, [sp, #32]
 bbc:	mov	x19, x1
 bc0:	mov	w22, w2
 bc4:	ldrb	w0, [x1, #16]
 bc8:	mov	x21, x3
 bcc:	cmp	w0, #0x3
 bd0:	b.eq	c04 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x7c>  // b.none
 bd4:	cbz	w0, cec <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x164>
 bd8:	ldr	x4, [x20]
 bdc:	mov	x3, x21
 be0:	mov	w2, w22
 be4:	mov	x1, x19
 be8:	mov	x0, x20
 bec:	ldr	x4, [x4, #168]
 bf0:	blr	x4
 bf4:	ldp	x19, x20, [sp, #16]
 bf8:	ldp	x21, x22, [sp, #32]
 bfc:	ldp	x29, x30, [sp], #80
 c00:	ret
 c04:	ldr	x3, [x19, #72]
 c08:	stp	x23, x24, [sp, #48]
 c0c:	add	x24, sp, #0x48
 c10:	mov	x0, x24
 c14:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c18:	mov	x2, #0xb                   	// #11
 c1c:	add	x1, x1, #0x0
 c20:	and	w23, w22, #0xff
 c24:	str	x3, [sp, #72]
 c28:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c2c:	tst	w0, #0xff
 c30:	b.eq	c44 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0xbc>  // b.none
 c34:	sub	w0, w23, #0xd
 c38:	and	w0, w0, #0xff
 c3c:	cmp	w0, #0x2
 c40:	b.ls	cbc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.plast
 c44:	mov	x0, x24
 c48:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c4c:	mov	x2, #0xc                   	// #12
 c50:	add	x1, x1, #0x0
 c54:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c58:	tst	w0, #0xff
 c5c:	ccmp	w23, #0x11, #0x0, ne  // ne = any
 c60:	b.eq	cbc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.none
 c64:	mov	x0, x24
 c68:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c6c:	mov	x2, #0xd                   	// #13
 c70:	add	x1, x1, #0x0
 c74:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c78:	tst	w0, #0xff
 c7c:	ccmp	w23, #0x12, #0x0, ne  // ne = any
 c80:	b.eq	cbc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.none
 c84:	mov	x0, x24
 c88:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 c8c:	mov	x2, #0xe                   	// #14
 c90:	add	x1, x1, #0x0
 c94:	bl	0 <_ZNK4llvm12AttributeSet12hasAttributeENS_9StringRefE>
 c98:	tst	w0, #0xff
 c9c:	b.eq	cb0 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x128>  // b.none
 ca0:	sub	w23, w23, #0x3
 ca4:	and	w23, w23, #0xff
 ca8:	cmp	w23, #0x7
 cac:	b.ls	cbc <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x134>  // b.plast
 cb0:	ldrb	w0, [x19, #16]
 cb4:	ldp	x23, x24, [sp, #48]
 cb8:	b	bd4 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x4c>
 cbc:	ldr	x4, [x20]
 cc0:	mov	x3, x21
 cc4:	mov	w2, w22
 cc8:	mov	x1, x19
 ccc:	mov	x0, x20
 cd0:	ldr	x4, [x4, #80]
 cd4:	blr	x4
 cd8:	ldp	x19, x20, [sp, #16]
 cdc:	ldp	x21, x22, [sp, #32]
 ce0:	ldp	x23, x24, [sp, #48]
 ce4:	ldp	x29, x30, [sp], #80
 ce8:	ret
 cec:	add	x0, x19, #0x70
 cf0:	adrp	x1, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 cf4:	mov	x2, #0x15                  	// #21
 cf8:	add	x1, x1, #0x0
 cfc:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 d00:	tst	w0, #0xff
 d04:	b.eq	bd8 <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x50>  // b.none
 d08:	ldr	x4, [x20]
 d0c:	mov	x3, x21
 d10:	mov	w2, w22
 d14:	mov	x1, x19
 d18:	mov	x0, x20
 d1c:	ldr	x4, [x4, #80]
 d20:	blr	x4
 d24:	ldp	x21, x22, [sp, #32]
 d28:	b	bac <_ZNK4llvm24TargetLoweringObjectFile16SectionForGlobalEPKNS_12GlobalObjectENS_11SectionKindERKNS_13TargetMachineE+0x24>
 d2c:	nop

0000000000000d30 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>:
 d30:	stp	x29, x30, [sp, #-48]!
 d34:	ands	w2, w2, #0x70
 d38:	mov	x29, sp
 d3c:	stp	x19, x20, [sp, #16]
 d40:	mov	x20, x1
 d44:	b.eq	dbc <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x8c>  // b.none
 d48:	stp	x21, x22, [sp, #32]
 d4c:	cmp	w2, #0x10
 d50:	b.ne	dcc <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE+0x9c>  // b.any
 d54:	mov	x19, x0
 d58:	mov	x21, x3
 d5c:	ldr	x0, [x0, #800]
 d60:	mov	w1, #0x1                   	// #1
 d64:	bl	0 <_ZN4llvm9MCContext16createTempSymbolEb>
 d68:	mov	x22, x0
 d6c:	ldr	x3, [x21]
 d70:	mov	x1, x0
 d74:	mov	x2, #0x0                   	// #0
 d78:	mov	x0, x21
 d7c:	ldr	x3, [x3, #176]
 d80:	blr	x3
 d84:	ldr	x2, [x19, #800]
 d88:	mov	x0, x22
 d8c:	mov	x3, #0x0                   	// #0
 d90:	mov	w1, #0x0                   	// #0
 d94:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 d98:	mov	x2, x0
 d9c:	mov	x1, x20
 da0:	mov	x4, #0x0                   	// #0
 da4:	ldp	x21, x22, [sp, #32]
 da8:	mov	w0, #0x11                  	// #17
 dac:	ldr	x3, [x19, #800]
 db0:	ldp	x19, x20, [sp, #16]
 db4:	ldp	x29, x30, [sp], #48
 db8:	b	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 dbc:	mov	x0, x1
 dc0:	ldp	x19, x20, [sp, #16]
 dc4:	ldp	x29, x30, [sp], #48
 dc8:	ret
 dcc:	adrp	x0, 0 <_ZNK4llvm24TargetLoweringObjectFile20emitPersonalityValueERNS_10MCStreamerERKNS_10DataLayoutEPKNS_8MCSymbolE>
 dd0:	mov	w1, #0x1                   	// #1
 dd4:	add	x0, x0, #0x0
 dd8:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
 ddc:	nop

0000000000000de0 <_ZNK4llvm24TargetLoweringObjectFile23getTTypeGlobalReferenceEPKNS_11GlobalValueEjRKNS_13TargetMachineEPNS_17MachineModuleInfoERNS_10MCStreamerE>:
 de0:	stp	x29, x30, [sp, #-48]!
 de4:	mov	x29, sp
 de8:	stp	x19, x20, [sp, #16]
 dec:	mov	x19, x0
 df0:	mov	w20, w2
 df4:	mov	x0, x3
 df8:	str	x21, [sp, #32]
 dfc:	mov	x21, x5
 e00:	bl	0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>
 e04:	ldr	x2, [x19, #800]
 e08:	mov	x3, #0x0                   	// #0
 e0c:	mov	w1, #0x0                   	// #0
 e10:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 e14:	mov	x1, x0
 e18:	mov	x3, x21
 e1c:	mov	w2, w20
 e20:	mov	x0, x19
 e24:	ldp	x19, x20, [sp, #16]
 e28:	ldr	x21, [sp, #32]
 e2c:	ldp	x29, x30, [sp], #48
 e30:	b	d30 <_ZNK4llvm24TargetLoweringObjectFile17getTTypeReferenceEPKNS_15MCSymbolRefExprEjRNS_10MCStreamerE>

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile18emitModuleMetadataERNS_10MCStreamerERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE:

0000000000000000 <_ZN4llvm24TargetLoweringObjectFile17getModuleMetadataERNS_6ModuleE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticCtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #840]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile20getStaticDtorSectionEjPKNS_8MCSymbolE>:
   0:	ldr	x0, [x0, #848]
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22lowerRelativeReferenceEPKNS_11GlobalValueES3_RKNS_13TargetMachineE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getIndirectSymViaGOTPCRelEPKNS_11GlobalValueEPKNS_8MCSymbolERKNS_7MCValueElPNS_17MachineModuleInfoERNS_10MCStreamerE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile24emitLinkerFlagsForGlobalERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile22emitLinkerFlagsForUsedERNS_11raw_ostreamEPKNS_11GlobalValueE>:
   0:	ret

Disassembly of section .text._ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv:

0000000000000000 <_ZNK4llvm24TargetLoweringObjectFile25getSectionForCommandLinesEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE:

0000000000000000 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	ldrb	w2, [x1, #8]
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x1
  14:	sub	w1, w2, #0x1
  18:	and	w1, w1, #0xff
  1c:	stp	x21, x22, [sp, #32]
  20:	cmp	w1, #0x5
  24:	mov	x21, x0
  28:	ccmp	w2, #0xf, #0x4, hi  // hi = pmore
  2c:	and	w0, w2, #0xfffffffd
  30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
  34:	b.ne	1e4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1e4>  // b.any
  38:	cmp	w2, #0x9
  3c:	b.eq	94 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x94>  // b.none
  40:	b.hi	a0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xa0>  // b.pmore
  44:	cmp	w2, #0x4
  48:	b.eq	14c <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x14c>  // b.none
  4c:	b.ls	84 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x84>  // b.plast
  50:	cmp	w2, #0x6
  54:	b.ls	134 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x134>  // b.plast
  58:	cmp	w2, #0x7
  5c:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  60:	mov	w1, #0x0                   	// #0
  64:	mov	x0, x21
  68:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
  6c:	lsl	w0, w0, #3
  70:	mov	x1, #0x0                   	// #0
  74:	ldp	x19, x20, [sp, #16]
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	cmp	w2, #0x2
  88:	b.eq	140 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x140>  // b.none
  8c:	cmp	w2, #0x3
  90:	b.ne	f4 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0xf4>  // b.any
  94:	mov	x0, #0x40                  	// #64
  98:	mov	x1, #0x0                   	// #0
  9c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  a0:	cmp	w2, #0xe
  a4:	b.eq	168 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x168>  // b.none
  a8:	b.ls	108 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x108>  // b.plast
  ac:	cmp	w2, #0xf
  b0:	b.eq	1c8 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x1c8>  // b.none
  b4:	cmp	w2, #0x10
  b8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  bc:	ldr	x20, [x19, #32]
  c0:	mov	x0, #0xffffffff            	// #4294967295
  c4:	cmp	x20, x0
  c8:	b.hi	250 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x250>  // b.pmore
  cc:	ldr	x1, [x19, #24]
  d0:	mov	x0, x21
  d4:	ldrb	w19, [x19, #40]
  d8:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
  dc:	tst	w1, #0xff
  e0:	b.ne	294 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x294>  // b.any
  e4:	mov	x1, #0x0                   	// #0
  e8:	mul	x0, x20, x0
  ec:	bfxil	x1, x19, #0, #8
  f0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
  f4:	cmp	w2, #0x1
  f8:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
  fc:	mov	x0, #0x10                  	// #16
 100:	mov	x1, #0x0                   	// #0
 104:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 108:	cmp	w2, #0xb
 10c:	b.eq	158 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x158>  // b.none
 110:	cmp	w2, #0xd
 114:	b.ne	234 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x234>  // b.any
 118:	mov	x1, x19
 11c:	mov	x0, x21
 120:	bl	0 <_ZNK4llvm10DataLayout15getStructLayoutEPNS_10StructTypeE>
 124:	ldr	x0, [x0]
 128:	mov	x1, #0x0                   	// #0
 12c:	lsl	x0, x0, #3
 130:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 134:	mov	x0, #0x80                  	// #128
 138:	mov	x1, #0x0                   	// #0
 13c:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 140:	mov	x0, #0x20                  	// #32
 144:	mov	x1, #0x0                   	// #0
 148:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 14c:	mov	x0, #0x50                  	// #80
 150:	mov	x1, #0x0                   	// #0
 154:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 158:	ldr	w0, [x19, #8]
 15c:	mov	x1, #0x0                   	// #0
 160:	lsr	w0, w0, #8
 164:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 168:	ldr	x22, [x19, #24]
 16c:	mov	x0, x21
 170:	str	x23, [sp, #48]
 174:	mov	x1, x22
 178:	ldr	x23, [x19, #32]
 17c:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 180:	add	x19, x0, #0x7
 184:	and	w20, w1, #0xff
 188:	mov	x0, x21
 18c:	mov	x1, x22
 190:	lsr	x19, x19, #3
 194:	bl	0 <_ZNK4llvm10DataLayout19getABITypeAlignmentEPNS_4TypeE>
 198:	mov	w2, w0
 19c:	cbz	w0, 274 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x274>
 1a0:	sub	x0, x19, #0x1
 1a4:	mov	x1, #0x0                   	// #0
 1a8:	add	x0, x0, x2
 1ac:	bfxil	x1, x20, #0, #8
 1b0:	udiv	x0, x0, x2
 1b4:	mul	x0, x0, x2
 1b8:	mul	x0, x0, x23
 1bc:	ldr	x23, [sp, #48]
 1c0:	lsl	x0, x0, #3
 1c4:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1c8:	ldr	w1, [x19, #8]
 1cc:	mov	x0, x21
 1d0:	lsr	w1, w1, #8
 1d4:	bl	0 <_ZNK4llvm10DataLayout14getPointerSizeEj>
 1d8:	mov	x1, #0x0                   	// #0
 1dc:	lsl	w0, w0, #3
 1e0:	b	74 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x74>
 1e4:	sub	w0, w2, #0xd
 1e8:	cmp	w0, #0x1
 1ec:	ccmp	w2, #0x10, #0x4, hi  // hi = pmore
 1f0:	b.ne	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.any
 1f4:	mov	x0, x19
 1f8:	mov	x1, #0x0                   	// #0
 1fc:	bl	0 <_ZNK4llvm4Type18isSizedDerivedTypeEPNS_15SmallPtrSetImplIPS0_EE>
 200:	tst	w0, #0xff
 204:	b.eq	210 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x210>  // b.none
 208:	ldrb	w2, [x19, #8]
 20c:	b	38 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE+0x38>
 210:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 214:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 218:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 21c:	add	x3, x3, #0x0
 220:	add	x1, x1, #0x0
 224:	add	x0, x0, #0x0
 228:	mov	w2, #0x271                 	// #625
 22c:	str	x23, [sp, #48]
 230:	bl	0 <__assert_fail>
 234:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 238:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 23c:	add	x1, x1, #0x0
 240:	add	x0, x0, #0x0
 244:	mov	w2, #0x298                 	// #664
 248:	str	x23, [sp, #48]
 24c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 250:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 254:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 258:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 25c:	add	x3, x3, #0x0
 260:	add	x1, x1, #0x0
 264:	add	x0, x0, #0x0
 268:	mov	w2, #0x220                 	// #544
 26c:	str	x23, [sp, #48]
 270:	bl	0 <__assert_fail>
 274:	adrp	x3, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 278:	adrp	x1, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 27c:	adrp	x0, 0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>
 280:	add	x3, x3, #0x0
 284:	add	x1, x1, #0x0
 288:	add	x0, x0, #0x0
 28c:	mov	w2, #0xc7                  	// #199
 290:	bl	0 <__assert_fail>
 294:	str	x23, [sp, #48]
 298:	bl	0 <_ZNK4llvm10DataLayout17getTypeSizeInBitsEPNS_4TypeE>

TargetMachine.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0]
   c:	ldr	x2, [x0]
  10:	ldr	x2, [x2, #64]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x8
  1c:	blr	x2
  20:	mov	x0, x19
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

0000000000000030 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation>:
  30:	cmp	w2, #0x2
  34:	b.eq	50 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x20>  // b.none
  38:	cmp	w2, #0x3
  3c:	b.eq	48 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x18>  // b.none
  40:	cmp	w2, #0x1
  44:	b.eq	54 <_ZNSt14_Function_base13_Base_managerIZN4llvm13TargetMachine19getTargetIRAnalysisEvEUlRKNS1_8FunctionEE_E10_M_managerERSt9_Any_dataRKS8_St18_Manager_operation+0x24>  // b.none
  48:	mov	w0, #0x0                   	// #0
  4c:	ret
  50:	ldr	x1, [x1]
  54:	str	x1, [x0]
  58:	mov	w0, #0x0                   	// #0
  5c:	ret

0000000000000060 <_ZN4llvm13TargetMachine22getTargetTransformInfoERKNS_8FunctionE>:
  60:	stp	x29, x30, [sp, #-32]!
  64:	mov	x29, sp
  68:	ldr	x0, [x1, #40]
  6c:	str	x19, [sp, #16]
  70:	mov	x19, x8
  74:	bl	0 <_ZNK4llvm6Module13getDataLayoutEv>
  78:	mov	x1, x0
  7c:	mov	x0, x19
  80:	bl	0 <_ZN4llvm19TargetTransformInfoC1ERKNS_10DataLayoutE>
  84:	mov	x0, x19
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret
  94:	nop

0000000000000098 <_ZN4llvm13TargetMachineD1Ev>:
  98:	stp	x29, x30, [sp, #-48]!
  9c:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
  a0:	mov	x29, sp
  a4:	ldr	x1, [x1]
  a8:	stp	x19, x20, [sp, #16]
  ac:	mov	x19, x0
  b0:	ldr	x20, [x0, #904]
  b4:	str	x21, [sp, #32]
  b8:	ldr	x21, [x0, #912]
  bc:	add	x1, x1, #0x10
  c0:	str	x1, [x0]
  c4:	cmp	x20, x21
  c8:	b.eq	f4 <_ZN4llvm13TargetMachineD1Ev+0x5c>  // b.none
  cc:	nop
  d0:	mov	x1, x20
  d4:	add	x20, x20, #0x20
  d8:	ldr	x0, [x1], #16
  dc:	cmp	x0, x1
  e0:	b.eq	e8 <_ZN4llvm13TargetMachineD1Ev+0x50>  // b.none
  e4:	bl	0 <_ZdlPv>
  e8:	cmp	x21, x20
  ec:	b.ne	d0 <_ZN4llvm13TargetMachineD1Ev+0x38>  // b.any
  f0:	ldr	x21, [x19, #904]
  f4:	cbz	x21, 100 <_ZN4llvm13TargetMachineD1Ev+0x68>
  f8:	mov	x0, x21
  fc:	bl	0 <_ZdlPv>
 100:	ldr	x0, [x19, #872]
 104:	add	x1, x19, #0x378
 108:	cmp	x0, x1
 10c:	b.eq	114 <_ZN4llvm13TargetMachineD1Ev+0x7c>  // b.none
 110:	bl	0 <_ZdlPv>
 114:	ldr	x0, [x19, #840]
 118:	add	x1, x19, #0x358
 11c:	cmp	x0, x1
 120:	b.eq	128 <_ZN4llvm13TargetMachineD1Ev+0x90>  // b.none
 124:	bl	0 <_ZdlPv>
 128:	ldr	x20, [x19, #752]
 12c:	ldr	x21, [x19, #760]
 130:	cmp	x20, x21
 134:	b.eq	15c <_ZN4llvm13TargetMachineD1Ev+0xc4>  // b.none
 138:	mov	x1, x20
 13c:	add	x20, x20, #0x20
 140:	ldr	x0, [x1], #16
 144:	cmp	x0, x1
 148:	b.eq	150 <_ZN4llvm13TargetMachineD1Ev+0xb8>  // b.none
 14c:	bl	0 <_ZdlPv>
 150:	cmp	x21, x20
 154:	b.ne	138 <_ZN4llvm13TargetMachineD1Ev+0xa0>  // b.any
 158:	ldr	x21, [x19, #752]
 15c:	cbz	x21, 168 <_ZN4llvm13TargetMachineD1Ev+0xd0>
 160:	mov	x0, x21
 164:	bl	0 <_ZdlPv>
 168:	ldr	x0, [x19, #720]
 16c:	add	x1, x19, #0x2e0
 170:	cmp	x0, x1
 174:	b.eq	17c <_ZN4llvm13TargetMachineD1Ev+0xe4>  // b.none
 178:	bl	0 <_ZdlPv>
 17c:	ldr	x0, [x19, #688]
 180:	add	x1, x19, #0x2c0
 184:	cmp	x0, x1
 188:	b.eq	190 <_ZN4llvm13TargetMachineD1Ev+0xf8>  // b.none
 18c:	bl	0 <_ZdlPv>
 190:	ldr	x20, [x19, #608]
 194:	cbz	x20, 1f4 <_ZN4llvm13TargetMachineD1Ev+0x15c>
 198:	ldr	x1, [x20]
 19c:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 1a0:	add	x0, x0, #0x0
 1a4:	ldr	x1, [x1, #8]
 1a8:	cmp	x1, x0
 1ac:	b.ne	29c <_ZN4llvm13TargetMachineD1Ev+0x204>  // b.any
 1b0:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
 1b4:	add	x2, x20, #0x50
 1b8:	ldr	x0, [x20, #64]
 1bc:	ldr	x1, [x1]
 1c0:	cmp	x0, x2
 1c4:	add	x1, x1, #0x10
 1c8:	str	x1, [x20]
 1cc:	b.eq	1d4 <_ZN4llvm13TargetMachineD1Ev+0x13c>  // b.none
 1d0:	bl	0 <_ZdlPv>
 1d4:	ldr	x0, [x20, #8]
 1d8:	add	x1, x20, #0x18
 1dc:	cmp	x0, x1
 1e0:	b.eq	1e8 <_ZN4llvm13TargetMachineD1Ev+0x150>  // b.none
 1e4:	bl	0 <_ZdlPv>
 1e8:	mov	x0, x20
 1ec:	mov	x1, #0xd0                  	// #208
 1f0:	bl	0 <_ZdlPvm>
 1f4:	ldr	x0, [x19, #600]
 1f8:	cbz	x0, 204 <_ZN4llvm13TargetMachineD1Ev+0x16c>
 1fc:	mov	x1, #0x20                  	// #32
 200:	bl	0 <_ZdlPvm>
 204:	ldr	x20, [x19, #592]
 208:	cbz	x20, 238 <_ZN4llvm13TargetMachineD1Ev+0x1a0>
 20c:	ldr	x0, [x20, #200]
 210:	ldr	w1, [x20, #216]
 214:	lsl	x1, x1, #3
 218:	bl	0 <_ZdlPvm>
 21c:	ldr	x0, [x20, #168]
 220:	ldr	w1, [x20, #184]
 224:	lsl	x1, x1, #3
 228:	bl	0 <_ZdlPvm>
 22c:	mov	x0, x20
 230:	mov	x1, #0xe0                  	// #224
 234:	bl	0 <_ZdlPvm>
 238:	ldr	x0, [x19, #584]
 23c:	cbz	x0, 24c <_ZN4llvm13TargetMachineD1Ev+0x1b4>
 240:	ldr	x1, [x0]
 244:	ldr	x1, [x1, #8]
 248:	blr	x1
 24c:	ldr	x0, [x19, #536]
 250:	add	x1, x19, #0x228
 254:	cmp	x0, x1
 258:	b.eq	260 <_ZN4llvm13TargetMachineD1Ev+0x1c8>  // b.none
 25c:	bl	0 <_ZdlPv>
 260:	ldr	x0, [x19, #504]
 264:	add	x1, x19, #0x208
 268:	cmp	x0, x1
 26c:	b.eq	274 <_ZN4llvm13TargetMachineD1Ev+0x1dc>  // b.none
 270:	bl	0 <_ZdlPv>
 274:	ldr	x0, [x19, #448]
 278:	add	x1, x19, #0x1d0
 27c:	cmp	x0, x1
 280:	b.eq	288 <_ZN4llvm13TargetMachineD1Ev+0x1f0>  // b.none
 284:	bl	0 <_ZdlPv>
 288:	add	x0, x19, #0x10
 28c:	ldp	x19, x20, [sp, #16]
 290:	ldr	x21, [sp, #32]
 294:	ldp	x29, x30, [sp], #48
 298:	b	0 <_ZN4llvm10DataLayoutD1Ev>
 29c:	mov	x0, x20
 2a0:	blr	x1
 2a4:	b	1f4 <_ZN4llvm13TargetMachineD1Ev+0x15c>

00000000000002a8 <_ZN4llvm13TargetMachineD0Ev>:
 2a8:	stp	x29, x30, [sp, #-32]!
 2ac:	mov	x29, sp
 2b0:	str	x19, [sp, #16]
 2b4:	mov	x19, x0
 2b8:	bl	98 <_ZN4llvm13TargetMachineD1Ev>
 2bc:	mov	x0, x19
 2c0:	mov	x1, #0x3a0                 	// #928
 2c4:	ldr	x19, [sp, #16]
 2c8:	ldp	x29, x30, [sp], #32
 2cc:	b	0 <_ZdlPvm>

00000000000002d0 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE>:
 2d0:	stp	x29, x30, [sp, #-64]!
 2d4:	mov	x2, #0xe                   	// #14
 2d8:	mov	x29, sp
 2dc:	stp	x19, x20, [sp, #16]
 2e0:	add	x20, x1, #0x70
 2e4:	mov	x19, x0
 2e8:	str	x21, [sp, #32]
 2ec:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 2f0:	add	x21, x21, #0x0
 2f4:	mov	x0, x20
 2f8:	mov	x1, x21
 2fc:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 300:	tst	w0, #0xff
 304:	b.ne	3c8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xf8>  // b.any
 308:	ldrb	w0, [x19, #624]
 30c:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 310:	ldrb	w1, [x19, #776]
 314:	add	x21, x21, #0x0
 318:	mov	x2, #0xf                   	// #15
 31c:	ubfx	x0, x0, #1, #1
 320:	bfi	w1, w0, #1, #1
 324:	strb	w1, [x19, #776]
 328:	mov	x0, x20
 32c:	mov	x1, x21
 330:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 334:	tst	w0, #0xff
 338:	b.ne	438 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x168>  // b.any
 33c:	ldrb	w0, [x19, #624]
 340:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 344:	ldrb	w1, [x19, #776]
 348:	add	x21, x21, #0x0
 34c:	mov	x2, #0xf                   	// #15
 350:	ubfx	x0, x0, #2, #1
 354:	bfi	w1, w0, #2, #1
 358:	strb	w1, [x19, #776]
 35c:	mov	x0, x20
 360:	mov	x1, x21
 364:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 368:	tst	w0, #0xff
 36c:	b.ne	4a8 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1d8>  // b.any
 370:	ldrb	w0, [x19, #624]
 374:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 378:	ldrb	w1, [x19, #776]
 37c:	add	x21, x21, #0x0
 380:	mov	x2, #0x17                  	// #23
 384:	ubfx	x0, x0, #3, #1
 388:	bfi	w1, w0, #3, #1
 38c:	strb	w1, [x19, #776]
 390:	mov	x0, x20
 394:	mov	x1, x21
 398:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 39c:	tst	w0, #0xff
 3a0:	b.ne	518 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x248>  // b.any
 3a4:	ldrb	w0, [x19, #624]
 3a8:	ldrb	w1, [x19, #776]
 3ac:	ldr	x21, [sp, #32]
 3b0:	ubfx	x0, x0, #5, #1
 3b4:	bfi	w1, w0, #5, #1
 3b8:	strb	w1, [x19, #776]
 3bc:	ldp	x19, x20, [sp, #16]
 3c0:	ldp	x29, x30, [sp], #64
 3c4:	ret
 3c8:	mov	w1, #0xffffffff            	// #-1
 3cc:	mov	x2, x21
 3d0:	mov	x3, #0xe                   	// #14
 3d4:	mov	x0, x20
 3d8:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 3dc:	mov	x1, x0
 3e0:	add	x0, sp, #0x38
 3e4:	str	x1, [sp, #56]
 3e8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 3ec:	cmp	x1, #0x4
 3f0:	mov	w1, #0x0                   	// #0
 3f4:	b.ne	40c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x13c>  // b.any
 3f8:	ldr	w1, [x0]
 3fc:	mov	w0, #0x7274                	// #29300
 400:	movk	w0, #0x6575, lsl #16
 404:	cmp	w1, w0
 408:	cset	w1, eq  // eq = none
 40c:	ldrb	w0, [x19, #776]
 410:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 414:	add	x21, x21, #0x0
 418:	mov	x2, #0xf                   	// #15
 41c:	bfi	w0, w1, #1, #1
 420:	strb	w0, [x19, #776]
 424:	mov	x1, x21
 428:	mov	x0, x20
 42c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 430:	tst	w0, #0xff
 434:	b.eq	33c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x6c>  // b.none
 438:	mov	w1, #0xffffffff            	// #-1
 43c:	mov	x2, x21
 440:	mov	x3, #0xf                   	// #15
 444:	mov	x0, x20
 448:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 44c:	mov	x1, x0
 450:	add	x0, sp, #0x38
 454:	str	x1, [sp, #56]
 458:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 45c:	cmp	x1, #0x4
 460:	mov	w1, #0x0                   	// #0
 464:	b.ne	47c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x1ac>  // b.any
 468:	ldr	w1, [x0]
 46c:	mov	w0, #0x7274                	// #29300
 470:	movk	w0, #0x6575, lsl #16
 474:	cmp	w1, w0
 478:	cset	w1, eq  // eq = none
 47c:	ldrb	w0, [x19, #776]
 480:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 484:	add	x21, x21, #0x0
 488:	mov	x2, #0xf                   	// #15
 48c:	bfi	w0, w1, #2, #1
 490:	strb	w0, [x19, #776]
 494:	mov	x1, x21
 498:	mov	x0, x20
 49c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 4a0:	tst	w0, #0xff
 4a4:	b.eq	370 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xa0>  // b.none
 4a8:	mov	w1, #0xffffffff            	// #-1
 4ac:	mov	x2, x21
 4b0:	mov	x3, #0xf                   	// #15
 4b4:	mov	x0, x20
 4b8:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 4bc:	mov	x1, x0
 4c0:	add	x0, sp, #0x38
 4c4:	str	x1, [sp, #56]
 4c8:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 4cc:	cmp	x1, #0x4
 4d0:	mov	w1, #0x0                   	// #0
 4d4:	b.ne	4ec <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x21c>  // b.any
 4d8:	ldr	w1, [x0]
 4dc:	mov	w0, #0x7274                	// #29300
 4e0:	movk	w0, #0x6575, lsl #16
 4e4:	cmp	w1, w0
 4e8:	cset	w1, eq  // eq = none
 4ec:	ldrb	w0, [x19, #776]
 4f0:	adrp	x21, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 4f4:	add	x21, x21, #0x0
 4f8:	mov	x2, #0x17                  	// #23
 4fc:	bfi	w0, w1, #3, #1
 500:	strb	w0, [x19, #776]
 504:	mov	x1, x21
 508:	mov	x0, x20
 50c:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9StringRefE>
 510:	tst	w0, #0xff
 514:	b.eq	3a4 <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0xd4>  // b.none
 518:	mov	w1, #0xffffffff            	// #-1
 51c:	mov	x2, x21
 520:	mov	x3, #0x17                  	// #23
 524:	mov	x0, x20
 528:	bl	0 <_ZNK4llvm13AttributeList12getAttributeEjNS_9StringRefE>
 52c:	mov	x1, x0
 530:	add	x0, sp, #0x38
 534:	str	x1, [sp, #56]
 538:	bl	0 <_ZNK4llvm9Attribute16getValueAsStringEv>
 53c:	cmp	x1, #0x4
 540:	mov	w1, #0x0                   	// #0
 544:	b.ne	55c <_ZNK4llvm13TargetMachine18resetTargetOptionsERKNS_8FunctionE+0x28c>  // b.any
 548:	ldr	w1, [x0]
 54c:	mov	w0, #0x7274                	// #29300
 550:	movk	w0, #0x6575, lsl #16
 554:	cmp	w1, w0
 558:	cset	w1, eq  // eq = none
 55c:	ldrb	w0, [x19, #776]
 560:	ldr	x21, [sp, #32]
 564:	bfi	w0, w1, #5, #1
 568:	strb	w0, [x19, #776]
 56c:	ldp	x19, x20, [sp, #16]
 570:	ldp	x29, x30, [sp], #64
 574:	ret

0000000000000578 <_ZNK4llvm13TargetMachine18getRelocationModelEv>:
 578:	ldr	w0, [x0, #568]
 57c:	ret

0000000000000580 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>:
 580:	stp	x29, x30, [sp, #-16]!
 584:	mov	x29, sp
 588:	bl	578 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 58c:	cmp	w0, #0x1
 590:	cset	w0, eq  // eq = none
 594:	ldp	x29, x30, [sp], #16
 598:	ret
 59c:	nop

00000000000005a0 <_ZNK4llvm13TargetMachine12getCodeModelEv>:
 5a0:	ldr	w0, [x0, #572]
 5a4:	ret

00000000000005a8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>:
 5a8:	stp	x29, x30, [sp, #-48]!
 5ac:	mov	x29, sp
 5b0:	stp	x19, x20, [sp, #16]
 5b4:	mov	x20, x0
 5b8:	mov	x19, x2
 5bc:	stp	x21, x22, [sp, #32]
 5c0:	mov	x21, x1
 5c4:	cbz	x2, 7a8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x200>
 5c8:	ldrb	w0, [x2, #33]
 5cc:	tbnz	w0, #6, 6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
 5d0:	mov	x0, x1
 5d4:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
 5d8:	mov	x0, x20
 5dc:	bl	578 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 5e0:	ldrb	w1, [x19, #33]
 5e4:	mov	w22, w0
 5e8:	and	w1, w1, #0x3
 5ec:	cmp	w1, #0x1
 5f0:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 5f4:	ldr	w0, [x20, #492]
 5f8:	cmp	w0, #0xf
 5fc:	b.eq	714 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x16c>  // b.none
 600:	ldr	w1, [x20, #500]
 604:	cmp	w1, #0x1
 608:	b.eq	72c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x184>  // b.none
 60c:	cbz	x19, 63c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x94>
 610:	mov	x0, x20
 614:	bl	580 <_ZNK4llvm13TargetMachine21isPositionIndependentEv>
 618:	tst	w0, #0xff
 61c:	ldrb	w0, [x19, #32]
 620:	b.eq	630 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x88>  // b.none
 624:	and	w1, w0, #0xf
 628:	cmp	w1, #0x9
 62c:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 630:	tst	w0, #0x30
 634:	b.ne	6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.any
 638:	ldr	w1, [x20, #500]
 63c:	cmp	w1, #0x3
 640:	b.eq	750 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x1a8>  // b.none
 644:	cmp	w1, #0x5
 648:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 64c:	sub	w1, w1, #0x2
 650:	tst	w1, #0xfffffffd
 654:	b.ne	85c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x2b4>  // b.any
 658:	cmp	w22, #0x2
 65c:	b.eq	83c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x294>  // b.none
 660:	cbnz	w22, 7c8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x220>
 664:	cbz	x19, 6ec <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x144>
 668:	ldrb	w0, [x19, #32]
 66c:	and	w0, w0, #0xf
 670:	cmp	w0, #0x1
 674:	b.eq	688 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xe0>  // b.none
 678:	mov	x0, x19
 67c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 680:	tst	w0, #0xff
 684:	b.eq	6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.none
 688:	ldrb	w0, [x19, #16]
 68c:	cbnz	w0, 6a4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xfc>
 690:	add	x0, x19, #0x70
 694:	mov	w1, #0x22                  	// #34
 698:	bl	0 <_ZNK4llvm13AttributeList14hasFnAttributeENS_9Attribute8AttrKindE>
 69c:	tst	w0, #0xff
 6a0:	b.ne	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
 6a4:	ldr	w0, [x20, #480]
 6a8:	sub	w0, w0, #0x10
 6ac:	cmp	w0, #0x2
 6b0:	b.ls	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.plast
 6b4:	ldrb	w0, [x19, #33]
 6b8:	tst	x0, #0x1c
 6bc:	b.ne	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
 6c0:	cmp	w22, #0x0
 6c4:	cset	w0, eq  // eq = none
 6c8:	b	6dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x134>
 6cc:	cmp	w0, #0x1
 6d0:	b.eq	7dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x234>  // b.none
 6d4:	nop
 6d8:	mov	w0, #0x1                   	// #1
 6dc:	ldp	x19, x20, [sp, #16]
 6e0:	ldp	x21, x22, [sp, #32]
 6e4:	ldp	x29, x30, [sp], #48
 6e8:	ret
 6ec:	ldr	w0, [x20, #480]
 6f0:	sub	w0, w0, #0x10
 6f4:	cmp	w0, #0x2
 6f8:	b.hi	6c0 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x118>  // b.pmore
 6fc:	nop
 700:	mov	w0, #0x0                   	// #0
 704:	ldp	x19, x20, [sp, #16]
 708:	ldp	x21, x22, [sp, #32]
 70c:	ldp	x29, x30, [sp], #48
 710:	ret
 714:	ldr	w0, [x20, #496]
 718:	cmp	w0, #0x1
 71c:	ldr	w0, [x20, #500]
 720:	b.eq	6cc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x124>  // b.none
 724:	cmp	w0, #0x1
 728:	b.ne	6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>  // b.any
 72c:	cbz	x19, 6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
 730:	ldrb	w0, [x19, #32]
 734:	and	w0, w0, #0xf
 738:	cmp	w0, #0x9
 73c:	cset	w0, ne  // ne = any
 740:	ldp	x19, x20, [sp, #16]
 744:	ldp	x21, x22, [sp, #32]
 748:	ldp	x29, x30, [sp], #48
 74c:	ret
 750:	cbz	w22, 6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
 754:	cbz	x19, 700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>
 758:	ldrb	w0, [x19, #32]
 75c:	and	w0, w0, #0xf
 760:	cmp	w0, #0x1
 764:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 768:	mov	x0, x19
 76c:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 770:	tst	w0, #0xff
 774:	b.ne	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
 778:	ldrb	w0, [x19, #32]
 77c:	and	w0, w0, #0xf
 780:	sub	w1, w0, #0x4
 784:	cmp	w1, #0x1
 788:	ccmp	w0, #0x2, #0x4, hi  // hi = pmore
 78c:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 790:	add	w1, w0, #0x7
 794:	and	w1, w1, #0xf
 798:	cmp	w1, #0x1
 79c:	ccmp	w0, #0x3, #0x4, hi  // hi = pmore
 7a0:	cset	w0, ne  // ne = any
 7a4:	b	6dc <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x134>
 7a8:	mov	x0, x1
 7ac:	bl	0 <_ZNK4llvm6Module14getRtLibUseGOTEv>
 7b0:	tst	w0, #0xff
 7b4:	b.ne	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.any
 7b8:	mov	x0, x20
 7bc:	bl	578 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 7c0:	mov	w22, w0
 7c4:	b	5f4 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x4c>
 7c8:	mov	x0, x21
 7cc:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 7d0:	cbnz	w0, 664 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0xbc>
 7d4:	mov	w0, #0x0                   	// #0
 7d8:	b	704 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
 7dc:	cbz	x19, 6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
 7e0:	ldrb	w0, [x19, #32]
 7e4:	and	w0, w0, #0xf
 7e8:	cmp	w0, #0x1
 7ec:	b.eq	828 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x280>  // b.none
 7f0:	mov	x0, x19
 7f4:	bl	0 <_ZNK4llvm11GlobalValue13isDeclarationEv>
 7f8:	tst	w0, #0xff
 7fc:	b.eq	80c <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x264>  // b.none
 800:	ldrb	w0, [x19, #16]
 804:	cmp	w0, #0x3
 808:	b.eq	700 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x158>  // b.none
 80c:	ldr	w0, [x20, #500]
 810:	cmp	w0, #0x1
 814:	b.eq	730 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x188>  // b.none
 818:	ldr	w0, [x20, #492]
 81c:	cmp	w0, #0xf
 820:	b.ne	610 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x68>  // b.any
 824:	b	6d8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x130>
 828:	ldrb	w1, [x19, #16]
 82c:	cmp	w1, #0x3
 830:	b.ne	738 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x190>  // b.any
 834:	mov	w0, #0x0                   	// #0
 838:	b	704 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE+0x15c>
 83c:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 840:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 844:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 848:	add	x3, x3, #0x0
 84c:	add	x1, x1, #0x0
 850:	add	x0, x0, #0x0
 854:	mov	w2, #0xac                  	// #172
 858:	bl	0 <__assert_fail>
 85c:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 860:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 864:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 868:	add	x3, x3, #0x0
 86c:	add	x1, x1, #0x0
 870:	add	x0, x0, #0x0
 874:	mov	w2, #0xab                  	// #171
 878:	bl	0 <__assert_fail>
 87c:	nop

0000000000000880 <_ZNK4llvm13TargetMachine14useEmulatedTLSEv>:
 880:	ldrb	w1, [x0, #801]
 884:	mov	x2, x0
 888:	ubfx	x0, x1, #6, #1
 88c:	tbnz	w1, #7, 8bc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>
 890:	ldr	w1, [x2, #496]
 894:	mov	w0, #0x1                   	// #1
 898:	cmp	w1, #0xa
 89c:	b.eq	8bc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 8a0:	ldr	w2, [x2, #492]
 8a4:	cmp	w2, #0xd
 8a8:	b.eq	8bc <_ZNK4llvm13TargetMachine14useEmulatedTLSEv+0x3c>  // b.none
 8ac:	cmp	w1, #0x10
 8b0:	cset	w0, eq  // eq = none
 8b4:	cmp	w2, #0xf
 8b8:	csel	w0, w0, wzr, eq  // eq = none
 8bc:	ret

00000000000008c0 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE>:
 8c0:	stp	x29, x30, [sp, #-48]!
 8c4:	mov	x29, sp
 8c8:	stp	x19, x20, [sp, #16]
 8cc:	mov	x20, x0
 8d0:	mov	x19, x1
 8d4:	ldr	x0, [x1, #40]
 8d8:	str	x21, [sp, #32]
 8dc:	bl	0 <_ZNK4llvm6Module11getPIELevelEv>
 8e0:	mov	w21, w0
 8e4:	mov	x0, x20
 8e8:	bl	578 <_ZNK4llvm13TargetMachine18getRelocationModelEv>
 8ec:	cmp	w0, #0x1
 8f0:	mov	x0, x20
 8f4:	ldr	x1, [x19, #40]
 8f8:	cset	w20, eq  // eq = none
 8fc:	cmp	w21, #0x0
 900:	mov	x2, x19
 904:	csel	w20, w20, wzr, eq  // eq = none
 908:	bl	5a8 <_ZNK4llvm13TargetMachine20shouldAssumeDSOLocalERKNS_6ModuleEPKNS_11GlobalValueE>
 90c:	and	w0, w0, #0xff
 910:	ldrb	w1, [x19, #33]
 914:	cbz	w20, 974 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xb4>
 918:	ubfx	x1, x1, #2, #3
 91c:	cmp	w1, #0x2
 920:	b.eq	998 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xd8>  // b.none
 924:	b.hi	944 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x84>  // b.pmore
 928:	cbnz	w1, 964 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xa4>
 92c:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 930:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 934:	add	x1, x1, #0x0
 938:	add	x0, x0, #0x0
 93c:	mov	w2, #0x50                  	// #80
 940:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 944:	cmp	w1, #0x3
 948:	b.eq	98c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xcc>  // b.none
 94c:	cmp	w1, #0x4
 950:	b.ne	9a4 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0xe4>  // b.any
 954:	mov	w1, #0x3                   	// #3
 958:	mov	w2, w1
 95c:	cmp	w0, w1
 960:	csel	w0, w0, w2, ge  // ge = tcont
 964:	ldp	x19, x20, [sp, #16]
 968:	ldr	x21, [sp, #32]
 96c:	ldp	x29, x30, [sp], #48
 970:	ret
 974:	cmp	w0, #0x0
 978:	ubfx	x1, x1, #2, #3
 97c:	cset	w0, ne  // ne = any
 980:	cmp	w1, #0x2
 984:	add	w0, w0, #0x2
 988:	b	924 <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x64>
 98c:	mov	w1, #0x2                   	// #2
 990:	mov	w2, w1
 994:	b	95c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x9c>
 998:	mov	w1, #0x1                   	// #1
 99c:	mov	w2, w1
 9a0:	b	95c <_ZNK4llvm13TargetMachine11getTLSModelEPKNS_11GlobalValueE+0x9c>
 9a4:	adrp	x1, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 9a8:	adrp	x0, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 9ac:	add	x1, x1, #0x0
 9b0:	add	x0, x0, #0x0
 9b4:	mov	w2, #0x5b                  	// #91
 9b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 9bc:	nop

00000000000009c0 <_ZNK4llvm13TargetMachine11getOptLevelEv>:
 9c0:	ldr	w0, [x0, #576]
 9c4:	ret

00000000000009c8 <_ZN4llvm13TargetMachine11setOptLevelENS_10CodeGenOpt5LevelE>:
 9c8:	str	w1, [x0, #576]
 9cc:	ret

00000000000009d0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>:
 9d0:	tst	w4, #0xff
 9d4:	b.ne	a38 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x68>  // b.any
 9d8:	ldrb	w4, [x2, #32]
 9dc:	and	w4, w4, #0xf
 9e0:	cmp	w4, #0x8
 9e4:	b.ne	a38 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x68>  // b.any
 9e8:	stp	x29, x30, [sp, #-48]!
 9ec:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 9f0:	add	x3, x3, #0x0
 9f4:	mov	x29, sp
 9f8:	ldr	x4, [x0]
 9fc:	str	x19, [sp, #16]
 a00:	stp	x1, x2, [sp, #32]
 a04:	mov	x19, x0
 a08:	ldr	x4, [x4, #24]
 a0c:	cmp	x4, x3
 a10:	b.eq	a44 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb+0x74>  // b.none
 a14:	blr	x4
 a18:	ldr	x4, [x0]
 a1c:	mov	x3, x19
 a20:	ldr	x19, [sp, #16]
 a24:	ldp	x1, x2, [sp, #32]
 a28:	ldr	x4, [x4, #56]
 a2c:	ldp	x29, x30, [sp], #48
 a30:	mov	x16, x4
 a34:	br	x16
 a38:	mov	x0, x3
 a3c:	mov	w3, #0x0                   	// #0
 a40:	b	0 <_ZNK4llvm7Mangler17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueEb>
 a44:	mov	x0, #0x0                   	// #0
 a48:	ldr	x0, [x0]
 a4c:	brk	#0x3e8

0000000000000a50 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE>:
 a50:	stp	x29, x30, [sp, #-224]!
 a54:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 a58:	add	x3, x3, #0x0
 a5c:	mov	x29, sp
 a60:	stp	x19, x20, [sp, #16]
 a64:	mov	x20, x1
 a68:	ldr	x1, [x0]
 a6c:	ldr	x1, [x1, #24]
 a70:	str	x21, [sp, #32]
 a74:	cmp	x1, x3
 a78:	b.eq	af0 <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0xa0>  // b.none
 a7c:	mov	x19, x0
 a80:	blr	x1
 a84:	mov	x21, x0
 a88:	mov	x5, #0x8000000000          	// #549755813888
 a8c:	add	x1, sp, #0x50
 a90:	mov	x2, x20
 a94:	mov	x0, x19
 a98:	add	x20, x1, #0x10
 a9c:	ldr	x3, [x21, #808]
 aa0:	mov	x19, x1
 aa4:	mov	w4, #0x0                   	// #0
 aa8:	stp	x20, x5, [sp, #80]
 aac:	bl	9d0 <_ZNK4llvm13TargetMachine17getNameWithPrefixERNS_15SmallVectorImplIcEEPKNS_11GlobalValueERNS_7ManglerEb>
 ab0:	stp	x19, xzr, [sp, #56]
 ab4:	mov	w2, #0x106                 	// #262
 ab8:	ldr	x0, [x21, #800]
 abc:	add	x1, sp, #0x38
 ac0:	strh	w2, [sp, #72]
 ac4:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 ac8:	mov	x19, x0
 acc:	ldr	x0, [sp, #80]
 ad0:	cmp	x0, x20
 ad4:	b.eq	adc <_ZNK4llvm13TargetMachine9getSymbolEPKNS_11GlobalValueE+0x8c>  // b.none
 ad8:	bl	0 <free>
 adc:	mov	x0, x19
 ae0:	ldp	x19, x20, [sp, #16]
 ae4:	ldr	x21, [sp, #32]
 ae8:	ldp	x29, x30, [sp], #224
 aec:	ret
 af0:	add	x0, sp, #0x60
 af4:	mov	x1, #0x0                   	// #0
 af8:	str	x0, [sp, #80]
 afc:	mov	x0, #0x8000000000          	// #549755813888
 b00:	str	x0, [sp, #88]
 b04:	ldr	x0, [x1, #808]
 b08:	brk	#0x3e8
 b0c:	nop

0000000000000b10 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>:
 b10:	stp	x29, x30, [sp, #-64]!
 b14:	mov	x4, x0
 b18:	adrp	x2, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 b1c:	adrp	x3, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 b20:	add	x2, x2, #0x0
 b24:	add	x3, x3, #0x0
 b28:	mov	x29, sp
 b2c:	mov	x0, x8
 b30:	stp	x19, x20, [sp, #16]
 b34:	add	x20, sp, #0x20
 b38:	mov	x19, x8
 b3c:	mov	x1, x20
 b40:	str	x4, [sp, #32]
 b44:	stp	x3, x2, [sp, #48]
 b48:	bl	0 <_ZN4llvm16TargetIRAnalysisC1ESt8functionIFNS_19TargetTransformInfoERKNS_8FunctionEEE>
 b4c:	ldr	x3, [sp, #48]
 b50:	cbz	x3, b64 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv+0x54>
 b54:	mov	x1, x20
 b58:	mov	x0, x20
 b5c:	mov	w2, #0x3                   	// #3
 b60:	blr	x3
 b64:	mov	x0, x19
 b68:	ldp	x19, x20, [sp, #16]
 b6c:	ldp	x29, x30, [sp], #64
 b70:	ret
 b74:	nop

0000000000000b78 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE>:
 b78:	stp	x29, x30, [sp, #-96]!
 b7c:	adrp	x7, 0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 b80:	mov	x8, #0x800000000           	// #34359738368
 b84:	mov	x29, sp
 b88:	ldr	x7, [x7]
 b8c:	stp	x19, x20, [sp, #16]
 b90:	mov	x19, x0
 b94:	add	x0, x0, #0x10
 b98:	stp	x21, x22, [sp, #32]
 b9c:	add	x13, x19, #0x40
 ba0:	stp	x23, x24, [sp, #48]
 ba4:	add	x12, x19, #0x58
 ba8:	add	x10, x19, #0xe8
 bac:	stp	x25, x26, [sp, #64]
 bb0:	add	x9, x19, #0x108
 bb4:	mov	x11, #0x1000000000          	// #68719476736
 bb8:	str	x27, [sp, #80]
 bbc:	add	x7, x7, #0x10
 bc0:	stp	x7, x1, [x19]
 bc4:	add	x7, x19, #0x1a0
 bc8:	mov	x21, x4
 bcc:	strh	wzr, [x19, #24]
 bd0:	mov	x1, x2
 bd4:	strh	wzr, [x19, #32]
 bd8:	mov	x2, x3
 bdc:	stp	x13, x8, [x19, #48]
 be0:	mov	x22, x5
 be4:	mov	x23, x6
 be8:	stp	x12, x11, [x19, #72]
 bec:	stp	x10, xzr, [x19, #216]
 bf0:	strb	wzr, [x19, #232]
 bf4:	stp	x9, x8, [x19, #248]
 bf8:	str	xzr, [x0, #376]
 bfc:	stp	x7, x8, [x19, #400]
 c00:	ldp	x24, x25, [sp, #96]
 c04:	ldr	x20, [sp, #112]
 c08:	bl	0 <_ZN4llvm10DataLayout5resetENS_9StringRefE>
 c0c:	add	x0, x19, #0x1d0
 c10:	mov	w3, #0x0                   	// #0
 c14:	ldr	x2, [x21, #8]
 c18:	str	x0, [x19, #448]
 c1c:	add	x0, x19, #0x1c0
 c20:	ldr	x1, [x21]
 c24:	add	x2, x1, x2
 c28:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 c2c:	ldr	x1, [x21, #32]
 c30:	str	x1, [x19, #480]
 c34:	ldr	x1, [x21, #40]
 c38:	str	x1, [x19, #488]
 c3c:	ldr	x1, [x21, #48]
 c40:	str	x1, [x19, #496]
 c44:	add	x1, x19, #0x208
 c48:	cbz	x22, fa0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x428>
 c4c:	str	x1, [x19, #504]
 c50:	add	x0, x19, #0x1f8
 c54:	mov	x1, x22
 c58:	add	x2, x22, x23
 c5c:	mov	w3, #0x0                   	// #0
 c60:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 c64:	add	x1, x19, #0x228
 c68:	str	x1, [x19, #536]
 c6c:	add	x0, x19, #0x218
 c70:	cbz	x24, fb8 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x440>
 c74:	add	x2, x24, x25
 c78:	mov	x1, x24
 c7c:	mov	w3, #0x0                   	// #0
 c80:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 c84:	ldrb	w0, [x19, #616]
 c88:	mov	x1, #0x100000000           	// #4294967296
 c8c:	str	x1, [x19, #568]
 c90:	add	x2, x19, #0x248
 c94:	and	w0, w0, #0xfffffffc
 c98:	strb	w0, [x19, #616]
 c9c:	ldrh	w1, [x19, #624]
 ca0:	mov	w3, #0x2                   	// #2
 ca4:	ldrh	w0, [x20]
 ca8:	mov	x26, x20
 cac:	ldrb	w7, [x20, #16]
 cb0:	add	x4, x19, #0x2c0
 cb4:	ldrb	w6, [x20, #8]
 cb8:	add	x23, x19, #0x2f0
 cbc:	bfxil	w1, w0, #0, #9
 cc0:	ldr	w5, [x20, #12]
 cc4:	strh	w1, [x19, #624]
 cc8:	add	x0, x19, #0x2b0
 ccc:	ldr	w1, [x20, #4]
 cd0:	mov	x21, #0x0                   	// #0
 cd4:	str	w3, [x19, #576]
 cd8:	mov	w3, #0x0                   	// #0
 cdc:	stp	xzr, xzr, [x2]
 ce0:	stp	xzr, xzr, [x2, #16]
 ce4:	str	w1, [x19, #628]
 ce8:	ldrb	w1, [x19, #632]
 cec:	str	w5, [x19, #636]
 cf0:	ldrb	w5, [x19, #640]
 cf4:	bfxil	w1, w6, #0, #3
 cf8:	strb	w1, [x19, #632]
 cfc:	ldr	x1, [x20, #24]
 d00:	bfxil	w5, w7, #0, #2
 d04:	ldr	w6, [x20, #20]
 d08:	and	x2, x1, #0xffffffff007fffff
 d0c:	strb	w5, [x19, #640]
 d10:	ldr	x1, [x20, #32]
 d14:	str	x1, [x19, #656]
 d18:	ldr	x1, [x19, #648]
 d1c:	str	w6, [x19, #644]
 d20:	ldr	x6, [x20, #40]
 d24:	and	x1, x1, #0xff800000
 d28:	orr	x1, x1, x2
 d2c:	str	x1, [x19, #648]
 d30:	ldr	x5, [x20, #48]
 d34:	str	x6, [x19, #664]
 d38:	str	x5, [x19, #672]
 d3c:	ldrh	w1, [x19, #680]
 d40:	ldrh	w5, [x26, #56]!
 d44:	ldr	x2, [x20, #72]
 d48:	bfxil	w1, w5, #0, #12
 d4c:	strh	w1, [x19, #680]
 d50:	ldr	w5, [x26, #4]
 d54:	str	x4, [x19, #688]
 d58:	str	w5, [x19, #684]
 d5c:	ldr	x1, [x20, #64]
 d60:	add	x2, x1, x2
 d64:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 d68:	add	x0, x19, #0x2e0
 d6c:	mov	w3, #0x0                   	// #0
 d70:	ldr	x2, [x20, #104]
 d74:	str	x0, [x19, #720]
 d78:	add	x0, x19, #0x2d0
 d7c:	ldr	x1, [x20, #96]
 d80:	add	x2, x1, x2
 d84:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 d88:	ldp	x0, x22, [x20, #128]
 d8c:	str	xzr, [x19, #752]
 d90:	stp	xzr, xzr, [x23, #8]
 d94:	sub	x22, x22, x0
 d98:	cmp	xzr, x22, asr #5
 d9c:	asr	x0, x22, #5
 da0:	b.eq	dbc <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x244>  // b.none
 da4:	mov	x1, #0x3ffffffffffffff     	// #288230376151711743
 da8:	cmp	x0, x1
 dac:	b.hi	fc4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x44c>  // b.pmore
 db0:	mov	x0, x22
 db4:	bl	0 <_Znwm>
 db8:	mov	x21, x0
 dbc:	str	x21, [x19, #752]
 dc0:	add	x22, x21, x22
 dc4:	stp	x21, x22, [x23, #8]
 dc8:	ldp	x27, x25, [x20, #128]
 dcc:	cmp	x27, x25
 dd0:	b.eq	e18 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x2a0>  // b.none
 dd4:	mov	x24, x27
 dd8:	mov	x22, x21
 ddc:	nop
 de0:	add	x0, x22, #0x10
 de4:	add	x24, x24, #0x20
 de8:	ldur	x2, [x24, #-24]
 dec:	str	x0, [x22]
 df0:	mov	w3, #0x0                   	// #0
 df4:	mov	x0, x22
 df8:	ldur	x1, [x24, #-32]
 dfc:	add	x22, x22, #0x20
 e00:	add	x2, x1, x2
 e04:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 e08:	cmp	x25, x24
 e0c:	b.ne	de0 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x268>  // b.any
 e10:	sub	x25, x25, x27
 e14:	add	x21, x21, x25
 e18:	ldr	w5, [x20, #4]
 e1c:	add	x6, x19, #0x358
 e20:	ldr	w1, [x20, #12]
 e24:	add	x0, x19, #0x348
 e28:	str	x21, [x23, #8]
 e2c:	mov	w3, #0x0                   	// #0
 e30:	str	w5, [x19, #780]
 e34:	add	x23, x19, #0x388
 e38:	ldrb	w7, [x20, #8]
 e3c:	mov	x21, #0x0                   	// #0
 e40:	ldrb	w5, [x19, #784]
 e44:	ldrh	w8, [x20]
 e48:	ldrh	w4, [x19, #776]
 e4c:	bfxil	w5, w7, #0, #3
 e50:	str	w1, [x19, #788]
 e54:	ldp	x1, x7, [x20, #32]
 e58:	bfxil	w4, w8, #0, #9
 e5c:	strh	w4, [x19, #776]
 e60:	str	x1, [x19, #808]
 e64:	ldr	x4, [x20, #24]
 e68:	strb	w5, [x19, #784]
 e6c:	ldr	x1, [x19, #800]
 e70:	and	x4, x4, #0xffffffff007fffff
 e74:	ldrb	w9, [x20, #16]
 e78:	ldrb	w5, [x19, #792]
 e7c:	and	x1, x1, #0xff800000
 e80:	ldr	x2, [x20, #48]
 e84:	orr	x1, x1, x4
 e88:	bfxil	w5, w9, #0, #2
 e8c:	strb	w5, [x19, #792]
 e90:	str	x1, [x19, #800]
 e94:	str	x7, [x19, #816]
 e98:	str	x2, [x19, #824]
 e9c:	ldrh	w2, [x19, #832]
 ea0:	ldrh	w5, [x20, #56]
 ea4:	mov	w1, w2
 ea8:	ldr	w8, [x20, #20]
 eac:	ldr	w4, [x26, #4]
 eb0:	str	x6, [x19, #840]
 eb4:	bfxil	w1, w5, #0, #12
 eb8:	str	w8, [x19, #796]
 ebc:	strh	w1, [x19, #832]
 ec0:	str	w4, [x19, #836]
 ec4:	ldp	x1, x2, [x20, #64]
 ec8:	add	x2, x1, x2
 ecc:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 ed0:	add	x0, x19, #0x378
 ed4:	mov	w3, #0x0                   	// #0
 ed8:	ldr	x2, [x20, #104]
 edc:	str	x0, [x19, #872]
 ee0:	add	x0, x19, #0x368
 ee4:	ldr	x1, [x20, #96]
 ee8:	add	x2, x1, x2
 eec:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 ef0:	ldp	x0, x22, [x20, #128]
 ef4:	str	xzr, [x19, #904]
 ef8:	stp	xzr, xzr, [x23, #8]
 efc:	sub	x22, x22, x0
 f00:	cmp	xzr, x22, asr #5
 f04:	asr	x0, x22, #5
 f08:	b.eq	f24 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x3ac>  // b.none
 f0c:	mov	x1, #0x3ffffffffffffff     	// #288230376151711743
 f10:	cmp	x0, x1
 f14:	b.hi	fc4 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x44c>  // b.pmore
 f18:	mov	x0, x22
 f1c:	bl	0 <_Znwm>
 f20:	mov	x21, x0
 f24:	str	x21, [x19, #904]
 f28:	add	x22, x21, x22
 f2c:	stp	x21, x22, [x23, #8]
 f30:	ldp	x24, x22, [x20, #128]
 f34:	cmp	x24, x22
 f38:	b.eq	f80 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x408>  // b.none
 f3c:	mov	x20, x24
 f40:	mov	x19, x21
 f44:	nop
 f48:	add	x0, x19, #0x10
 f4c:	add	x20, x20, #0x20
 f50:	ldur	x2, [x20, #-24]
 f54:	str	x0, [x19]
 f58:	mov	w3, #0x0                   	// #0
 f5c:	mov	x0, x19
 f60:	ldur	x1, [x20, #-32]
 f64:	add	x19, x19, #0x20
 f68:	add	x2, x1, x2
 f6c:	bl	0 <_ZNSt17_Function_handlerIFN4llvm19TargetTransformInfoERKNS0_8FunctionEEZNS0_13TargetMachine19getTargetIRAnalysisEvEUlS4_E_E9_M_invokeERKSt9_Any_dataS4_>
 f70:	cmp	x22, x20
 f74:	b.ne	f48 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x3d0>  // b.any
 f78:	sub	x22, x22, x24
 f7c:	add	x21, x21, x22
 f80:	ldp	x19, x20, [sp, #16]
 f84:	ldp	x25, x26, [sp, #64]
 f88:	ldr	x27, [sp, #80]
 f8c:	str	x21, [x23, #8]
 f90:	ldp	x21, x22, [sp, #32]
 f94:	ldp	x23, x24, [sp, #48]
 f98:	ldp	x29, x30, [sp], #96
 f9c:	ret
 fa0:	stp	x1, xzr, [x19, #504]
 fa4:	add	x1, x19, #0x228
 fa8:	add	x0, x19, #0x218
 fac:	strb	wzr, [x19, #520]
 fb0:	str	x1, [x19, #536]
 fb4:	cbnz	x24, c74 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0xfc>
 fb8:	str	xzr, [x19, #544]
 fbc:	strb	wzr, [x19, #552]
 fc0:	b	c84 <_ZN4llvm13TargetMachineC1ERKNS_6TargetENS_9StringRefERKNS_6TripleES4_S4_RKNS_13TargetOptionsE+0x10c>
 fc4:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine16getSubtargetImplERKNS_8FunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine18getObjFileLoweringEv:

0000000000000000 <_ZNK4llvm13TargetMachine18getObjFileLoweringEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv:

0000000000000000 <_ZNK4llvm13TargetMachine25createDefaultFuncInfoYAMLEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE:

0000000000000000 <_ZNK4llvm13TargetMachine21convertFuncInfoToYAMLERKNS_15MachineFunctionE>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE:

0000000000000000 <_ZNK4llvm13TargetMachine24parseMachineFunctionInfoERKNS_4yaml19MachineFunctionInfoERNS_25PerFunctionMIParsingStateERNS_12SMDiagnosticERNS_7SMRangeE>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine16getIntrinsicInfoEv:

0000000000000000 <_ZNK4llvm13TargetMachine16getIntrinsicInfoEv>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE:

0000000000000000 <_ZN4llvm13TargetMachine17adjustPassManagerERNS_18PassManagerBuilderE>:
   0:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb:

0000000000000000 <_ZN4llvm13TargetMachine17addPassesToEmitMCERNS_6legacy15PassManagerBaseERPNS_9MCContextERNS_17raw_pwrite_streamEb>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv:

0000000000000000 <_ZNK4llvm13TargetMachine31targetSchedulesPostRASchedulingEv>:
   0:	mov	w0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD0Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD0Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x1, x19, #0x18
  3c:	cmp	x0, x1
  40:	b.eq	48 <_ZN4llvm15MCSubtargetInfoD0Ev+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	mov	x0, x19
  4c:	mov	x1, #0xd0                  	// #208
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	b	0 <_ZdlPvm>

Disassembly of section .text._ZN4llvm15MCSubtargetInfoD2Ev:

0000000000000000 <_ZN4llvm15MCSubtargetInfoD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x1, 0 <_ZTVN4llvm15MCSubtargetInfoE>
   8:	add	x2, x0, #0x50
   c:	mov	x29, sp
  10:	ldr	x1, [x1]
  14:	str	x19, [sp, #16]
  18:	mov	x19, x0
  1c:	ldr	x0, [x0, #64]
  20:	add	x1, x1, #0x10
  24:	str	x1, [x19]
  28:	cmp	x0, x2
  2c:	b.eq	34 <_ZN4llvm15MCSubtargetInfoD1Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	ldr	x0, [x19, #8]
  38:	add	x19, x19, #0x18
  3c:	cmp	x0, x19
  40:	b.eq	50 <_ZN4llvm15MCSubtargetInfoD1Ev+0x50>  // b.none
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZdlPv>
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

TargetMachineC.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>:
       0:	stp	x29, x30, [sp, #-16]!
       4:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
       8:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
       c:	mov	x29, sp
      10:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
      14:	add	x3, x3, #0x0
      18:	add	x1, x1, #0x0
      1c:	add	x0, x0, #0x0
      20:	mov	w2, #0x277                 	// #631
      24:	bl	0 <__assert_fail>

0000000000000028 <LLVMGetFirstTarget>:
      28:	stp	x29, x30, [sp, #-32]!
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      38:	mov	x19, x0
      3c:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      40:	cmp	x19, x1
      44:	b.eq	5c <LLVMGetFirstTarget+0x34>  // b.none
      48:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      4c:	cbz	x0, 6c <LLVMGetFirstTarget+0x44>
      50:	ldr	x19, [sp, #16]
      54:	ldp	x29, x30, [sp], #32
      58:	ret
      5c:	mov	x0, #0x0                   	// #0
      60:	ldr	x19, [sp, #16]
      64:	ldp	x29, x30, [sp], #32
      68:	ret
      6c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>

0000000000000070 <LLVMGetNextTarget>:
      70:	ldr	x0, [x0]
      74:	ret

0000000000000078 <LLVMGetTargetFromName>:
      78:	stp	x29, x30, [sp, #-64]!
      7c:	mov	x29, sp
      80:	stp	x19, x20, [sp, #16]
      84:	mov	x20, #0x0                   	// #0
      88:	stp	x21, x22, [sp, #32]
      8c:	mov	x21, x0
      90:	str	x23, [sp, #48]
      94:	cbz	x0, a0 <LLVMGetTargetFromName+0x28>
      98:	bl	0 <strlen>
      9c:	mov	x20, x0
      a0:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      a4:	mov	x19, x0
      a8:	mov	x22, x1
      ac:	cmp	x0, x1
      b0:	b.eq	e4 <LLVMGetTargetFromName+0x6c>  // b.none
      b4:	nop
      b8:	cbz	x19, 150 <LLVMGetTargetFromName+0xd8>
      bc:	ldr	x23, [x19, #16]
      c0:	mov	x0, #0x0                   	// #0
      c4:	cbz	x23, d0 <LLVMGetTargetFromName+0x58>
      c8:	mov	x0, x23
      cc:	bl	0 <strlen>
      d0:	cmp	x20, x0
      d4:	b.eq	f8 <LLVMGetTargetFromName+0x80>  // b.none
      d8:	ldr	x19, [x19]
      dc:	cmp	x22, x19
      e0:	b.ne	b8 <LLVMGetTargetFromName+0x40>  // b.any
      e4:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
      e8:	cmp	x19, x1
      ec:	b.eq	134 <LLVMGetTargetFromName+0xbc>  // b.none
      f0:	cbnz	x19, 11c <LLVMGetTargetFromName+0xa4>
      f4:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
      f8:	cbz	x20, 110 <LLVMGetTargetFromName+0x98>
      fc:	mov	x0, x23
     100:	mov	x2, x20
     104:	mov	x1, x21
     108:	bl	0 <memcmp>
     10c:	cbnz	w0, d8 <LLVMGetTargetFromName+0x60>
     110:	bl	0 <_ZN4llvm14TargetRegistry7targetsEv>
     114:	cmp	x19, x1
     118:	b.eq	134 <LLVMGetTargetFromName+0xbc>  // b.none
     11c:	mov	x0, x19
     120:	ldp	x19, x20, [sp, #16]
     124:	ldp	x21, x22, [sp, #32]
     128:	ldr	x23, [sp, #48]
     12c:	ldp	x29, x30, [sp], #64
     130:	ret
     134:	mov	x19, #0x0                   	// #0
     138:	mov	x0, x19
     13c:	ldp	x19, x20, [sp, #16]
     140:	ldp	x21, x22, [sp, #32]
     144:	ldr	x23, [sp, #48]
     148:	ldp	x29, x30, [sp], #64
     14c:	ret
     150:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     154:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     158:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     15c:	add	x3, x3, #0x0
     160:	add	x1, x1, #0x0
     164:	add	x0, x0, #0x0
     168:	mov	w2, #0x277                 	// #631
     16c:	bl	0 <__assert_fail>

0000000000000170 <LLVMGetTargetName>:
     170:	ldr	x0, [x0, #16]
     174:	ret

0000000000000178 <LLVMGetTargetDescription>:
     178:	ldr	x0, [x0, #24]
     17c:	ret

0000000000000180 <LLVMTargetHasJIT>:
     180:	ldrb	w0, [x0, #40]
     184:	ret

0000000000000188 <LLVMTargetHasTargetMachine>:
     188:	ldr	x0, [x0, #88]
     18c:	cmp	x0, #0x0
     190:	cset	w0, ne  // ne = any
     194:	ret

0000000000000198 <LLVMTargetHasAsmBackend>:
     198:	ldr	x0, [x0, #96]
     19c:	cmp	x0, #0x0
     1a0:	cset	w0, ne  // ne = any
     1a4:	ret

00000000000001a8 <LLVMCreateTargetMachine>:
     1a8:	sub	sp, sp, #0x1a0
     1ac:	cmp	w5, #0x4
     1b0:	stp	x29, x30, [sp, #32]
     1b4:	add	x29, sp, #0x20
     1b8:	stp	x19, x20, [sp, #48]
     1bc:	mov	w20, w4
     1c0:	stp	x21, x22, [sp, #64]
     1c4:	mov	x22, x1
     1c8:	stp	x23, x24, [sp, #80]
     1cc:	mov	x23, x2
     1d0:	mov	x24, x3
     1d4:	stp	x25, x26, [sp, #96]
     1d8:	mov	x25, x0
     1dc:	stp	x27, x28, [sp, #112]
     1e0:	b.eq	4e8 <LLVMCreateTargetMachine+0x340>  // b.none
     1e4:	b.hi	478 <LLVMCreateTargetMachine+0x2d0>  // b.pmore
     1e8:	cmp	w5, #0x2
     1ec:	b.eq	500 <LLVMCreateTargetMachine+0x358>  // b.none
     1f0:	cmp	w5, #0x3
     1f4:	b.ne	440 <LLVMCreateTargetMachine+0x298>  // b.any
     1f8:	mov	x0, #0x2                   	// #2
     1fc:	mov	x28, #0x0                   	// #0
     200:	bfxil	x28, x0, #0, #32
     204:	mov	w0, #0x1                   	// #1
     208:	str	w0, [sp, #128]
     20c:	nop
     210:	cmp	w6, #0x4
     214:	b.eq	468 <LLVMCreateTargetMachine+0x2c0>  // b.none
     218:	b.hi	420 <LLVMCreateTargetMachine+0x278>  // b.pmore
     21c:	cmp	w6, #0x1
     220:	b.eq	4c0 <LLVMCreateTargetMachine+0x318>  // b.none
     224:	cmp	w6, #0x2
     228:	b.ne	40c <LLVMCreateTargetMachine+0x264>  // b.any
     22c:	mov	w26, #0x0                   	// #0
     230:	mov	w27, #0x1                   	// #1
     234:	mov	w19, #0x0                   	// #0
     238:	ldr	x1, [sp, #288]
     23c:	cmp	w20, #0x4
     240:	ldrh	w3, [sp, #264]
     244:	mov	x5, #0x1                   	// #1
     248:	ldrb	w2, [sp, #272]
     24c:	and	x1, x1, #0xff800000
     250:	ldrb	w4, [sp, #280]
     254:	and	w3, w3, #0xfffffe00
     258:	and	w2, w2, #0xfffffff8
     25c:	orr	w3, w3, #0x10
     260:	orr	w2, w2, #0x1
     264:	and	w4, w4, #0xfffffffc
     268:	orr	x1, x1, #0x8
     26c:	mov	w6, #0x1                   	// #1
     270:	mov	w0, #0x2                   	// #2
     274:	add	x21, sp, #0x108
     278:	csel	w20, w20, w0, cc  // cc = lo, ul, last
     27c:	add	x0, x21, #0x38
     280:	str	xzr, [sp, #136]
     284:	strh	w3, [sp, #264]
     288:	str	wzr, [sp, #268]
     28c:	strb	w2, [sp, #272]
     290:	str	w6, [sp, #276]
     294:	strb	w4, [sp, #280]
     298:	str	wzr, [sp, #284]
     29c:	stp	x1, x5, [sp, #288]
     2a0:	stp	x5, xzr, [sp, #304]
     2a4:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
     2a8:	cbz	x22, 2b8 <LLVMCreateTargetMachine+0x110>
     2ac:	mov	x0, x22
     2b0:	bl	0 <strlen>
     2b4:	str	x0, [sp, #136]
     2b8:	mov	x3, #0x0                   	// #0
     2bc:	cbz	x23, 2cc <LLVMCreateTargetMachine+0x124>
     2c0:	mov	x0, x23
     2c4:	bl	0 <strlen>
     2c8:	mov	x3, x0
     2cc:	mov	x5, #0x0                   	// #0
     2d0:	cbz	x24, 2e8 <LLVMCreateTargetMachine+0x140>
     2d4:	mov	x0, x24
     2d8:	str	x3, [sp, #144]
     2dc:	bl	0 <strlen>
     2e0:	mov	x5, x0
     2e4:	ldr	x3, [sp, #144]
     2e8:	mov	x2, #0x0                   	// #0
     2ec:	ldr	x0, [sp, #136]
     2f0:	bfxil	x2, x26, #0, #32
     2f4:	stp	x22, x0, [sp, #168]
     2f8:	bfi	x2, x27, #32, #8
     2fc:	ldr	x8, [x25, #88]
     300:	stp	x2, x5, [sp, #136]
     304:	ldr	x0, [sp, #128]
     308:	str	x8, [sp, #128]
     30c:	str	x3, [sp, #152]
     310:	bfi	x28, x0, #32, #8
     314:	cbz	x8, 4c8 <LLVMCreateTargetMachine+0x320>
     318:	add	x4, sp, #0xa8
     31c:	mov	w6, #0x105                 	// #261
     320:	add	x22, sp, #0xd0
     324:	add	x1, sp, #0xb8
     328:	mov	x0, x22
     32c:	stp	x4, xzr, [sp, #184]
     330:	strh	w6, [sp, #200]
     334:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
     338:	ldp	x8, x2, [sp, #128]
     33c:	str	x2, [sp]
     340:	ldp	x5, x3, [sp, #144]
     344:	str	w20, [sp, #8]
     348:	strb	w19, [sp, #16]
     34c:	mov	x1, x22
     350:	mov	x2, x23
     354:	mov	x7, x28
     358:	mov	x4, x24
     35c:	mov	x0, x25
     360:	mov	x6, x21
     364:	add	x22, x22, #0x10
     368:	blr	x8
     36c:	mov	x23, x0
     370:	ldr	x1, [sp, #208]
     374:	cmp	x1, x22
     378:	b.eq	384 <LLVMCreateTargetMachine+0x1dc>  // b.none
     37c:	mov	x0, x1
     380:	bl	0 <_ZdlPv>
     384:	ldp	x19, x20, [sp, #392]
     388:	cmp	x19, x20
     38c:	b.eq	3b4 <LLVMCreateTargetMachine+0x20c>  // b.none
     390:	mov	x1, x19
     394:	add	x19, x19, #0x20
     398:	ldr	x0, [x1], #16
     39c:	cmp	x0, x1
     3a0:	b.eq	3a8 <LLVMCreateTargetMachine+0x200>  // b.none
     3a4:	bl	0 <_ZdlPv>
     3a8:	cmp	x20, x19
     3ac:	b.ne	390 <LLVMCreateTargetMachine+0x1e8>  // b.any
     3b0:	ldr	x20, [sp, #392]
     3b4:	cbz	x20, 3c0 <LLVMCreateTargetMachine+0x218>
     3b8:	mov	x0, x20
     3bc:	bl	0 <_ZdlPv>
     3c0:	ldr	x0, [sp, #360]
     3c4:	add	x1, x21, #0x70
     3c8:	cmp	x0, x1
     3cc:	b.eq	3d4 <LLVMCreateTargetMachine+0x22c>  // b.none
     3d0:	bl	0 <_ZdlPv>
     3d4:	ldr	x0, [sp, #328]
     3d8:	add	x21, x21, #0x50
     3dc:	cmp	x0, x21
     3e0:	b.eq	3e8 <LLVMCreateTargetMachine+0x240>  // b.none
     3e4:	bl	0 <_ZdlPv>
     3e8:	mov	x0, x23
     3ec:	ldp	x29, x30, [sp, #32]
     3f0:	ldp	x19, x20, [sp, #48]
     3f4:	ldp	x21, x22, [sp, #64]
     3f8:	ldp	x23, x24, [sp, #80]
     3fc:	ldp	x25, x26, [sp, #96]
     400:	ldp	x27, x28, [sp, #112]
     404:	add	sp, sp, #0x1a0
     408:	ret
     40c:	cbz	w6, 4a0 <LLVMCreateTargetMachine+0x2f8>
     410:	mov	w26, #0x1                   	// #1
     414:	mov	w19, #0x0                   	// #0
     418:	mov	w27, w26
     41c:	b	238 <LLVMCreateTargetMachine+0x90>
     420:	cmp	w6, #0x5
     424:	b.eq	4b0 <LLVMCreateTargetMachine+0x308>  // b.none
     428:	cmp	w6, #0x6
     42c:	b.ne	514 <LLVMCreateTargetMachine+0x36c>  // b.any
     430:	mov	w26, #0x4                   	// #4
     434:	mov	w27, #0x1                   	// #1
     438:	mov	w19, #0x0                   	// #0
     43c:	b	238 <LLVMCreateTargetMachine+0x90>
     440:	mov	w0, #0x1                   	// #1
     444:	str	w0, [sp, #128]
     448:	cmp	w5, #0x1
     44c:	mov	x28, #0x0                   	// #0
     450:	b.eq	210 <LLVMCreateTargetMachine+0x68>  // b.none
     454:	str	wzr, [sp, #128]
     458:	and	x28, x28, #0xffffffffffffff00
     45c:	cmp	w6, #0x4
     460:	b.ne	218 <LLVMCreateTargetMachine+0x70>  // b.any
     464:	nop
     468:	mov	w26, #0x2                   	// #2
     46c:	mov	w27, #0x1                   	// #1
     470:	mov	w19, #0x0                   	// #0
     474:	b	238 <LLVMCreateTargetMachine+0x90>
     478:	cmp	w5, #0x5
     47c:	b.eq	4d0 <LLVMCreateTargetMachine+0x328>  // b.none
     480:	cmp	w5, #0x6
     484:	b.ne	454 <LLVMCreateTargetMachine+0x2ac>  // b.any
     488:	mov	x0, #0x5                   	// #5
     48c:	mov	x28, #0x0                   	// #0
     490:	bfxil	x28, x0, #0, #32
     494:	mov	w0, #0x1                   	// #1
     498:	str	w0, [sp, #128]
     49c:	b	210 <LLVMCreateTargetMachine+0x68>
     4a0:	mov	w19, #0x0                   	// #0
     4a4:	mov	w26, #0x0                   	// #0
     4a8:	mov	w27, #0x0                   	// #0
     4ac:	b	238 <LLVMCreateTargetMachine+0x90>
     4b0:	mov	w26, #0x3                   	// #3
     4b4:	mov	w27, #0x1                   	// #1
     4b8:	mov	w19, #0x0                   	// #0
     4bc:	b	238 <LLVMCreateTargetMachine+0x90>
     4c0:	mov	w19, w6
     4c4:	b	4a4 <LLVMCreateTargetMachine+0x2fc>
     4c8:	mov	x23, #0x0                   	// #0
     4cc:	b	384 <LLVMCreateTargetMachine+0x1dc>
     4d0:	mov	x0, #0x4                   	// #4
     4d4:	mov	x28, #0x0                   	// #0
     4d8:	bfxil	x28, x0, #0, #32
     4dc:	mov	w0, #0x1                   	// #1
     4e0:	str	w0, [sp, #128]
     4e4:	b	210 <LLVMCreateTargetMachine+0x68>
     4e8:	mov	x0, #0x3                   	// #3
     4ec:	mov	x28, #0x0                   	// #0
     4f0:	bfxil	x28, x0, #0, #32
     4f4:	mov	w0, #0x1                   	// #1
     4f8:	str	w0, [sp, #128]
     4fc:	b	210 <LLVMCreateTargetMachine+0x68>
     500:	mov	x0, #0x1                   	// #1
     504:	mov	x28, #0x0                   	// #0
     508:	bfxil	x28, x0, #0, #32
     50c:	str	w0, [sp, #128]
     510:	b	210 <LLVMCreateTargetMachine+0x68>
     514:	mov	w26, #0x1                   	// #1
     518:	mov	w19, #0x0                   	// #0
     51c:	mov	w27, w26
     520:	b	238 <LLVMCreateTargetMachine+0x90>
     524:	nop

0000000000000528 <LLVMDisposeTargetMachine>:
     528:	cbz	x0, 53c <LLVMDisposeTargetMachine+0x14>
     52c:	ldr	x1, [x0]
     530:	ldr	x1, [x1, #8]
     534:	mov	x16, x1
     538:	br	x16
     53c:	ret

0000000000000540 <LLVMGetTargetMachineTarget>:
     540:	ldr	x0, [x0, #8]
     544:	ret

0000000000000548 <LLVMGetTargetMachineTriple>:
     548:	stp	x29, x30, [sp, #-96]!
     54c:	mov	x29, sp
     550:	stp	x19, x20, [sp, #16]
     554:	add	x20, sp, #0x40
     558:	add	x1, x20, #0x10
     55c:	ldr	x19, [x0, #456]
     560:	str	x21, [sp, #32]
     564:	ldr	x21, [x0, #448]
     568:	str	x1, [sp, #64]
     56c:	cmn	x21, x19
     570:	ccmp	x21, #0x0, #0x0, ne  // ne = any
     574:	b.eq	614 <LLVMGetTargetMachineTriple+0xcc>  // b.none
     578:	str	x19, [sp, #56]
     57c:	cmp	x19, #0xf
     580:	b.hi	5e4 <LLVMGetTargetMachineTriple+0x9c>  // b.pmore
     584:	cmp	x19, #0x1
     588:	b.ne	5d8 <LLVMGetTargetMachineTriple+0x90>  // b.any
     58c:	ldrb	w2, [x21]
     590:	mov	x0, x1
     594:	strb	w2, [sp, #80]
     598:	str	x19, [sp, #72]
     59c:	add	x20, x20, #0x10
     5a0:	strb	wzr, [x0, x19]
     5a4:	ldr	x0, [sp, #64]
     5a8:	bl	0 <strdup>
     5ac:	mov	x19, x0
     5b0:	ldr	x1, [sp, #64]
     5b4:	cmp	x1, x20
     5b8:	b.eq	5c4 <LLVMGetTargetMachineTriple+0x7c>  // b.none
     5bc:	mov	x0, x1
     5c0:	bl	0 <_ZdlPv>
     5c4:	mov	x0, x19
     5c8:	ldp	x19, x20, [sp, #16]
     5cc:	ldr	x21, [sp, #32]
     5d0:	ldp	x29, x30, [sp], #96
     5d4:	ret
     5d8:	mov	x0, x1
     5dc:	cbz	x19, 598 <LLVMGetTargetMachineTriple+0x50>
     5e0:	b	600 <LLVMGetTargetMachineTriple+0xb8>
     5e4:	add	x1, sp, #0x38
     5e8:	mov	x0, x20
     5ec:	mov	x2, #0x0                   	// #0
     5f0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     5f4:	ldr	x1, [sp, #56]
     5f8:	str	x0, [sp, #64]
     5fc:	str	x1, [sp, #80]
     600:	mov	x2, x19
     604:	mov	x1, x21
     608:	bl	0 <memcpy>
     60c:	ldp	x19, x0, [sp, #56]
     610:	b	598 <LLVMGetTargetMachineTriple+0x50>
     614:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     618:	add	x0, x0, #0x0
     61c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000620 <LLVMSetTargetMachineAsmVerbosity>:
     620:	cmp	w1, #0x0
     624:	ldrb	w1, [x0, #833]
     628:	cset	w2, ne  // ne = any
     62c:	bfi	w1, w2, #2, #1
     630:	strb	w1, [x0, #833]
     634:	ret

0000000000000638 <LLVMGetDefaultTargetTriple>:
     638:	stp	x29, x30, [sp, #-64]!
     63c:	mov	x29, sp
     640:	stp	x19, x20, [sp, #16]
     644:	add	x19, sp, #0x20
     648:	mov	x8, x19
     64c:	bl	0 <_ZN4llvm3sys22getDefaultTargetTripleB5cxx11Ev>
     650:	add	x19, x19, #0x10
     654:	ldr	x0, [sp, #32]
     658:	bl	0 <strdup>
     65c:	mov	x20, x0
     660:	ldr	x1, [sp, #32]
     664:	cmp	x1, x19
     668:	b.eq	674 <LLVMGetDefaultTargetTriple+0x3c>  // b.none
     66c:	mov	x0, x1
     670:	bl	0 <_ZdlPv>
     674:	mov	x0, x20
     678:	ldp	x19, x20, [sp, #16]
     67c:	ldp	x29, x30, [sp], #64
     680:	ret
     684:	nop

0000000000000688 <LLVMNormalizeTargetTriple>:
     688:	stp	x29, x30, [sp, #-64]!
     68c:	mov	x1, #0x0                   	// #0
     690:	mov	x29, sp
     694:	stp	x19, x20, [sp, #16]
     698:	mov	x20, x0
     69c:	cbz	x0, 6a8 <LLVMNormalizeTargetTriple+0x20>
     6a0:	bl	0 <strlen>
     6a4:	mov	x1, x0
     6a8:	add	x19, sp, #0x20
     6ac:	mov	x0, x20
     6b0:	mov	x8, x19
     6b4:	bl	0 <_ZN4llvm6Triple9normalizeB5cxx11ENS_9StringRefE>
     6b8:	ldr	x0, [sp, #32]
     6bc:	add	x19, x19, #0x10
     6c0:	bl	0 <strdup>
     6c4:	mov	x20, x0
     6c8:	ldr	x1, [sp, #32]
     6cc:	cmp	x1, x19
     6d0:	b.eq	6dc <LLVMNormalizeTargetTriple+0x54>  // b.none
     6d4:	mov	x0, x1
     6d8:	bl	0 <_ZdlPv>
     6dc:	mov	x0, x20
     6e0:	ldp	x19, x20, [sp, #16]
     6e4:	ldp	x29, x30, [sp], #64
     6e8:	ret
     6ec:	nop

00000000000006f0 <LLVMGetHostCPUName>:
     6f0:	stp	x29, x30, [sp, #-16]!
     6f4:	mov	x29, sp
     6f8:	bl	0 <_ZN4llvm3sys14getHostCPUNameEv>
     6fc:	ldp	x29, x30, [sp], #16
     700:	b	0 <strdup>
     704:	nop

0000000000000708 <LLVMAddAnalysisPasses>:
     708:	stp	x29, x30, [sp, #-80]!
     70c:	mov	x29, sp
     710:	stp	x19, x20, [sp, #16]
     714:	mov	x19, x1
     718:	add	x20, sp, #0x30
     71c:	ldr	x1, [x1]
     720:	mov	x8, x20
     724:	str	x21, [sp, #32]
     728:	ldr	x21, [x1, #16]
     72c:	bl	0 <_ZN4llvm13TargetMachine19getTargetIRAnalysisEv>
     730:	mov	x0, x20
     734:	bl	0 <_ZN4llvm36createTargetTransformInfoWrapperPassENS_16TargetIRAnalysisE>
     738:	mov	x1, x0
     73c:	mov	x0, x19
     740:	blr	x21
     744:	ldr	x3, [sp, #64]
     748:	cbz	x3, 75c <LLVMAddAnalysisPasses+0x54>
     74c:	mov	x1, x20
     750:	mov	x0, x20
     754:	mov	w2, #0x3                   	// #3
     758:	blr	x3
     75c:	ldp	x19, x20, [sp, #16]
     760:	ldr	x21, [sp, #32]
     764:	ldp	x29, x30, [sp], #80
     768:	ret
     76c:	nop

0000000000000770 <LLVMCreateTargetDataLayout>:
     770:	stp	x29, x30, [sp, #-48]!
     774:	mov	x29, sp
     778:	stp	x19, x20, [sp, #16]
     77c:	mov	x20, x0
     780:	mov	x0, #0x1b0                 	// #432
     784:	stp	x21, x22, [sp, #32]
     788:	bl	0 <_Znwm>
     78c:	add	x7, x0, #0x30
     790:	add	x6, x0, #0x48
     794:	add	x4, x0, #0xd8
     798:	add	x3, x0, #0xf8
     79c:	add	x2, x0, #0x190
     7a0:	mov	x1, #0x800000000           	// #34359738368
     7a4:	mov	x5, #0x1000000000          	// #68719476736
     7a8:	strh	wzr, [x0, #8]
     7ac:	mov	x19, x0
     7b0:	strh	wzr, [x0, #16]
     7b4:	add	x22, x0, #0xc8
     7b8:	stp	x7, x1, [x0, #32]
     7bc:	stp	x6, x5, [x0, #56]
     7c0:	stp	x4, xzr, [x0, #200]
     7c4:	strb	wzr, [x0, #216]
     7c8:	stp	x3, x1, [x0, #232]
     7cc:	stp	xzr, x2, [x0, #376]
     7d0:	str	x1, [x0, #392]
     7d4:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     7d8:	mov	x0, x22
     7dc:	add	x1, x20, #0xd8
     7e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     7e4:	ldrh	w5, [x20, #24]
     7e8:	add	x1, x20, #0x30
     7ec:	ldrb	w7, [x20, #16]
     7f0:	add	x0, x19, #0x20
     7f4:	ldrh	w3, [x20, #32]
     7f8:	ldr	w6, [x20, #20]
     7fc:	ldr	w4, [x20, #28]
     800:	ldur	x2, [x20, #36]
     804:	strb	w7, [x19]
     808:	str	w6, [x19, #4]
     80c:	strh	w5, [x19, #8]
     810:	str	w4, [x19, #12]
     814:	strh	w3, [x19, #16]
     818:	stur	x2, [x19, #20]
     81c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     820:	add	x1, x20, #0x48
     824:	add	x0, x19, #0x38
     828:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     82c:	add	x1, x20, #0xf8
     830:	add	x0, x19, #0xe8
     834:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     838:	add	x1, x20, #0x190
     83c:	add	x0, x19, #0x180
     840:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     844:	mov	x0, x19
     848:	ldp	x19, x20, [sp, #16]
     84c:	ldp	x21, x22, [sp, #32]
     850:	ldp	x29, x30, [sp], #48
     854:	ret

0000000000000858 <LLVMGetHostCPUFeatures>:
     858:	stp	x29, x30, [sp, #-160]!
     85c:	mov	x2, #0x0                   	// #0
     860:	adrp	x1, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     864:	mov	x29, sp
     868:	stp	x21, x22, [sp, #32]
     86c:	add	x21, sp, #0x48
     870:	add	x1, x1, #0x0
     874:	mov	x0, x21
     878:	stp	x19, x20, [sp, #16]
     87c:	bl	0 <_ZN4llvm17SubtargetFeaturesC1ENS_9StringRefE>
     880:	mov	x1, #0x1000000000          	// #68719476736
     884:	add	x0, sp, #0x60
     888:	add	x22, sp, #0x80
     88c:	stp	xzr, xzr, [sp, #96]
     890:	str	x1, [sp, #112]
     894:	bl	0 <_ZN4llvm3sys18getHostCPUFeaturesERNS_9StringMapIbNS_15MallocAllocatorEEE>
     898:	tst	w0, #0xff
     89c:	b.ne	974 <LLVMGetHostCPUFeatures+0x11c>  // b.any
     8a0:	mov	x0, x21
     8a4:	mov	x8, x22
     8a8:	bl	0 <_ZNK4llvm17SubtargetFeatures9getStringB5cxx11Ev>
     8ac:	add	x22, x22, #0x10
     8b0:	ldr	x0, [sp, #128]
     8b4:	bl	0 <strdup>
     8b8:	mov	x21, x0
     8bc:	ldr	x1, [sp, #128]
     8c0:	cmp	x1, x22
     8c4:	b.eq	8d0 <LLVMGetHostCPUFeatures+0x78>  // b.none
     8c8:	mov	x0, x1
     8cc:	bl	0 <_ZdlPv>
     8d0:	ldr	w0, [sp, #108]
     8d4:	ldr	x2, [sp, #96]
     8d8:	cbz	w0, 91c <LLVMGetHostCPUFeatures+0xc4>
     8dc:	ldr	w1, [sp, #104]
     8e0:	cbz	w1, 91c <LLVMGetHostCPUFeatures+0xc4>
     8e4:	sub	w20, w1, #0x1
     8e8:	mov	x19, #0x0                   	// #0
     8ec:	add	x20, x20, #0x1
     8f0:	lsl	x20, x20, #3
     8f4:	nop
     8f8:	ldr	x0, [x2, x19]
     8fc:	add	x19, x19, #0x8
     900:	cmp	x0, #0x0
     904:	ccmn	x0, #0x8, #0x4, ne  // ne = any
     908:	b.eq	914 <LLVMGetHostCPUFeatures+0xbc>  // b.none
     90c:	bl	0 <free>
     910:	ldr	x2, [sp, #96]
     914:	cmp	x20, x19
     918:	b.ne	8f8 <LLVMGetHostCPUFeatures+0xa0>  // b.any
     91c:	mov	x0, x2
     920:	bl	0 <free>
     924:	ldp	x19, x20, [sp, #72]
     928:	cmp	x19, x20
     92c:	b.eq	954 <LLVMGetHostCPUFeatures+0xfc>  // b.none
     930:	mov	x1, x19
     934:	add	x19, x19, #0x20
     938:	ldr	x0, [x1], #16
     93c:	cmp	x0, x1
     940:	b.eq	948 <LLVMGetHostCPUFeatures+0xf0>  // b.none
     944:	bl	0 <_ZdlPv>
     948:	cmp	x20, x19
     94c:	b.ne	930 <LLVMGetHostCPUFeatures+0xd8>  // b.any
     950:	ldr	x20, [sp, #72]
     954:	cbz	x20, 960 <LLVMGetHostCPUFeatures+0x108>
     958:	mov	x0, x20
     95c:	bl	0 <_ZdlPv>
     960:	mov	x0, x21
     964:	ldp	x19, x20, [sp, #16]
     968:	ldp	x21, x22, [sp, #32]
     96c:	ldp	x29, x30, [sp], #160
     970:	ret
     974:	ldr	w2, [sp, #104]
     978:	mov	x0, x22
     97c:	ldr	x1, [sp, #96]
     980:	cmp	w2, #0x0
     984:	cset	w2, eq  // eq = none
     988:	str	x23, [sp, #48]
     98c:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     990:	ldr	w3, [sp, #104]
     994:	mov	x0, x22
     998:	ldr	x1, [sp, #96]
     99c:	mov	w2, #0x1                   	// #1
     9a0:	ldr	x19, [sp, #128]
     9a4:	add	x1, x1, x3, lsl #3
     9a8:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     9ac:	ldr	x23, [sp, #128]
     9b0:	cmp	x19, x23
     9b4:	b.eq	a04 <LLVMGetHostCPUFeatures+0x1ac>  // b.none
     9b8:	mov	x20, x19
     9bc:	mov	x0, x21
     9c0:	ldr	x1, [x20], #8
     9c4:	ldrb	w3, [x1, #8]
     9c8:	ldr	x2, [x1], #16
     9cc:	bl	0 <_ZN4llvm17SubtargetFeatures10AddFeatureENS_9StringRefEb>
     9d0:	ldr	x1, [x19, #8]
     9d4:	add	x0, x19, #0x10
     9d8:	cmp	x1, #0x0
     9dc:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     9e0:	b.ne	a0c <LLVMGetHostCPUFeatures+0x1b4>  // b.any
     9e4:	nop
     9e8:	mov	x19, x0
     9ec:	ldr	x1, [x0], #8
     9f0:	cmp	x1, #0x0
     9f4:	ccmn	x1, #0x8, #0x4, ne  // ne = any
     9f8:	b.eq	9e8 <LLVMGetHostCPUFeatures+0x190>  // b.none
     9fc:	cmp	x23, x19
     a00:	b.ne	9b8 <LLVMGetHostCPUFeatures+0x160>  // b.any
     a04:	ldr	x23, [sp, #48]
     a08:	b	8a0 <LLVMGetHostCPUFeatures+0x48>
     a0c:	mov	x19, x20
     a10:	cmp	x23, x19
     a14:	b.ne	9b8 <LLVMGetHostCPUFeatures+0x160>  // b.any
     a18:	b	a04 <LLVMGetHostCPUFeatures+0x1ac>
     a1c:	nop

0000000000000a20 <LLVMGetTargetFromTriple>:
     a20:	stp	x29, x30, [sp, #-128]!
     a24:	mov	x29, sp
     a28:	stp	x19, x20, [sp, #16]
     a2c:	add	x20, sp, #0x40
     a30:	add	x19, sp, #0x60
     a34:	add	x4, x20, #0x10
     a38:	add	x3, x19, #0x10
     a3c:	stp	x21, x22, [sp, #32]
     a40:	mov	x22, x1
     a44:	mov	x21, x0
     a48:	str	x23, [sp, #48]
     a4c:	mov	x23, x2
     a50:	stp	x4, xzr, [sp, #64]
     a54:	mov	x2, #0xffffffffffffffff    	// #-1
     a58:	strb	wzr, [sp, #80]
     a5c:	str	x3, [sp, #96]
     a60:	cbz	x0, a6c <LLVMGetTargetFromTriple+0x4c>
     a64:	bl	0 <strlen>
     a68:	add	x2, x21, x0
     a6c:	mov	w3, #0x0                   	// #0
     a70:	mov	x0, x19
     a74:	mov	x1, x21
     a78:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     a7c:	mov	x1, x20
     a80:	mov	x0, x19
     a84:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
     a88:	str	x0, [x22]
     a8c:	ldr	x1, [sp, #96]
     a90:	add	x19, x19, #0x10
     a94:	mov	x3, x0
     a98:	cmp	x1, x19
     a9c:	b.eq	aac <LLVMGetTargetFromTriple+0x8c>  // b.none
     aa0:	mov	x0, x1
     aa4:	bl	0 <_ZdlPv>
     aa8:	ldr	x3, [x22]
     aac:	mov	w19, #0x0                   	// #0
     ab0:	ldr	x0, [sp, #64]
     ab4:	cbz	x3, ae0 <LLVMGetTargetFromTriple+0xc0>
     ab8:	add	x20, x20, #0x10
     abc:	cmp	x0, x20
     ac0:	b.eq	ac8 <LLVMGetTargetFromTriple+0xa8>  // b.none
     ac4:	bl	0 <_ZdlPv>
     ac8:	mov	w0, w19
     acc:	ldp	x19, x20, [sp, #16]
     ad0:	ldp	x21, x22, [sp, #32]
     ad4:	ldr	x23, [sp, #48]
     ad8:	ldp	x29, x30, [sp], #128
     adc:	ret
     ae0:	mov	w19, #0x1                   	// #1
     ae4:	cbz	x23, ab8 <LLVMGetTargetFromTriple+0x98>
     ae8:	bl	0 <strdup>
     aec:	str	x0, [x23]
     af0:	ldr	x0, [sp, #64]
     af4:	b	ab8 <LLVMGetTargetFromTriple+0x98>

0000000000000af8 <LLVMGetTargetMachineCPU>:
     af8:	stp	x29, x30, [sp, #-64]!
     afc:	mov	x29, sp
     b00:	ldr	x1, [x0, #504]
     b04:	stp	x19, x20, [sp, #16]
     b08:	cbz	x1, b60 <LLVMGetTargetMachineCPU+0x68>
     b0c:	add	x4, sp, #0x30
     b10:	add	x19, sp, #0x20
     b14:	ldr	x2, [x0, #512]
     b18:	mov	w3, #0x0                   	// #0
     b1c:	mov	x0, x19
     b20:	str	x4, [sp, #32]
     b24:	add	x2, x1, x2
     b28:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     b2c:	ldr	x0, [sp, #32]
     b30:	bl	0 <strdup>
     b34:	ldr	x1, [sp, #32]
     b38:	add	x19, x19, #0x10
     b3c:	mov	x20, x0
     b40:	cmp	x1, x19
     b44:	b.eq	b50 <LLVMGetTargetMachineCPU+0x58>  // b.none
     b48:	mov	x0, x1
     b4c:	bl	0 <_ZdlPv>
     b50:	mov	x0, x20
     b54:	ldp	x19, x20, [sp, #16]
     b58:	ldp	x29, x30, [sp], #64
     b5c:	ret
     b60:	add	x19, sp, #0x20
     b64:	strb	wzr, [sp, #48]
     b68:	add	x0, x19, #0x10
     b6c:	stp	x0, xzr, [sp, #32]
     b70:	b	b30 <LLVMGetTargetMachineCPU+0x38>
     b74:	nop

0000000000000b78 <LLVMGetTargetMachineFeatureString>:
     b78:	stp	x29, x30, [sp, #-64]!
     b7c:	mov	x29, sp
     b80:	ldr	x1, [x0, #536]
     b84:	stp	x19, x20, [sp, #16]
     b88:	cbz	x1, be0 <LLVMGetTargetMachineFeatureString+0x68>
     b8c:	add	x4, sp, #0x30
     b90:	add	x19, sp, #0x20
     b94:	ldr	x2, [x0, #544]
     b98:	mov	w3, #0x0                   	// #0
     b9c:	mov	x0, x19
     ba0:	str	x4, [sp, #32]
     ba4:	add	x2, x1, x2
     ba8:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     bac:	ldr	x0, [sp, #32]
     bb0:	bl	0 <strdup>
     bb4:	ldr	x1, [sp, #32]
     bb8:	add	x19, x19, #0x10
     bbc:	mov	x20, x0
     bc0:	cmp	x1, x19
     bc4:	b.eq	bd0 <LLVMGetTargetMachineFeatureString+0x58>  // b.none
     bc8:	mov	x0, x1
     bcc:	bl	0 <_ZdlPv>
     bd0:	mov	x0, x20
     bd4:	ldp	x19, x20, [sp, #16]
     bd8:	ldp	x29, x30, [sp], #64
     bdc:	ret
     be0:	add	x19, sp, #0x20
     be4:	strb	wzr, [sp, #48]
     be8:	add	x0, x19, #0x10
     bec:	stp	x0, xzr, [sp, #32]
     bf0:	b	bb0 <LLVMGetTargetMachineFeatureString+0x38>
     bf4:	nop

0000000000000bf8 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>:
     bf8:	sub	sp, sp, #0x240
     bfc:	stp	x29, x30, [sp]
     c00:	mov	x29, sp
     c04:	stp	x25, x26, [sp, #64]
     c08:	add	x25, sp, #0x60
     c0c:	mov	x26, x4
     c10:	stp	x19, x20, [sp, #16]
     c14:	mov	x20, x0
     c18:	mov	x0, x25
     c1c:	stp	x21, x22, [sp, #32]
     c20:	add	x21, sp, #0x70
     c24:	add	x19, sp, #0x90
     c28:	stp	x23, x24, [sp, #48]
     c2c:	mov	x24, x1
     c30:	mov	x23, x2
     c34:	str	x27, [sp, #80]
     c38:	mov	w27, w3
     c3c:	bl	0 <_ZN4llvm6legacy11PassManagerC1Ev>
     c40:	strb	wzr, [sp, #128]
     c44:	add	x8, x21, #0x10
     c48:	add	x7, sp, #0xc0
     c4c:	add	x6, sp, #0xd8
     c50:	add	x4, sp, #0x168
     c54:	add	x3, sp, #0x188
     c58:	add	x2, sp, #0x220
     c5c:	mov	x1, #0x800000000           	// #34359738368
     c60:	mov	x5, #0x1000000000          	// #68719476736
     c64:	mov	x0, x19
     c68:	stp	x8, xzr, [sp, #112]
     c6c:	strh	wzr, [sp, #152]
     c70:	strh	wzr, [sp, #160]
     c74:	stp	x7, x1, [sp, #176]
     c78:	stp	x6, x5, [sp, #200]
     c7c:	stp	x4, xzr, [sp, #344]
     c80:	strb	wzr, [sp, #360]
     c84:	stp	x3, x1, [sp, #376]
     c88:	str	xzr, [sp, #520]
     c8c:	str	x2, [sp, #528]
     c90:	str	x1, [sp, #536]
     c94:	bl	0 <_ZN4llvm10DataLayout5clearEv>
     c98:	add	x1, x20, #0xd8
     c9c:	add	x0, x19, #0xc8
     ca0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     ca4:	ldrb	w7, [x20, #16]
     ca8:	add	x1, x20, #0x30
     cac:	ldrh	w5, [x20, #24]
     cb0:	add	x0, x19, #0x20
     cb4:	ldrh	w3, [x20, #32]
     cb8:	ldr	w6, [x20, #20]
     cbc:	ldr	w4, [x20, #28]
     cc0:	ldur	x2, [x20, #36]
     cc4:	strb	w7, [sp, #144]
     cc8:	str	w6, [sp, #148]
     ccc:	strh	w5, [sp, #152]
     cd0:	str	w4, [sp, #156]
     cd4:	strh	w3, [sp, #160]
     cd8:	stur	x2, [sp, #164]
     cdc:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     ce0:	add	x1, x20, #0x48
     ce4:	add	x0, x19, #0x38
     ce8:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     cec:	add	x1, x20, #0xf8
     cf0:	add	x0, x19, #0xe8
     cf4:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     cf8:	add	x1, x20, #0x190
     cfc:	add	x0, x19, #0x180
     d00:	bl	0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     d04:	mov	x1, x19
     d08:	mov	x0, x24
     d0c:	bl	0 <_ZN4llvm6Module13setDataLayoutERKNS_10DataLayoutE>
     d10:	mov	x0, x19
     d14:	bl	0 <_ZN4llvm10DataLayoutD1Ev>
     d18:	ldr	x1, [x20]
     d1c:	adrp	x0, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     d20:	add	x0, x0, #0x0
     d24:	ldr	x7, [x1, #80]
     d28:	cmp	x7, x0
     d2c:	b.ne	d9c <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x1a4>  // b.any
     d30:	ldr	x2, [sp, #120]
     d34:	mov	x4, #0x2c                  	// #44
     d38:	mov	x1, #0x0                   	// #0
     d3c:	mov	x0, x21
     d40:	adrp	x3, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     d44:	add	x3, x3, #0x0
     d48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     d4c:	mov	w19, #0x1                   	// #1
     d50:	ldr	x0, [sp, #112]
     d54:	bl	0 <strdup>
     d58:	str	x0, [x26]
     d5c:	ldr	x0, [sp, #112]
     d60:	add	x21, x21, #0x10
     d64:	cmp	x0, x21
     d68:	b.eq	d70 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x178>  // b.none
     d6c:	bl	0 <_ZdlPv>
     d70:	mov	x0, x25
     d74:	bl	0 <_ZN4llvm6legacy11PassManagerD1Ev>
     d78:	mov	w0, w19
     d7c:	ldp	x29, x30, [sp]
     d80:	ldp	x19, x20, [sp, #16]
     d84:	ldp	x21, x22, [sp, #32]
     d88:	ldp	x23, x24, [sp, #48]
     d8c:	ldp	x25, x26, [sp, #64]
     d90:	ldr	x27, [sp, #80]
     d94:	add	sp, sp, #0x240
     d98:	ret
     d9c:	cmp	w27, #0x0
     da0:	mov	x0, x20
     da4:	cset	w4, ne  // ne = any
     da8:	mov	x2, x23
     dac:	mov	x1, x25
     db0:	mov	x6, #0x0                   	// #0
     db4:	mov	w5, #0x1                   	// #1
     db8:	mov	x3, #0x0                   	// #0
     dbc:	blr	x7
     dc0:	tst	w0, #0xff
     dc4:	b.ne	d30 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x138>  // b.any
     dc8:	mov	x1, x24
     dcc:	mov	x0, x25
     dd0:	bl	0 <_ZN4llvm6legacy11PassManager3runERNS_6ModuleE>
     dd4:	mov	w19, #0x0                   	// #0
     dd8:	ldr	x0, [x23, #8]
     ddc:	ldr	x1, [x23, #24]
     de0:	cmp	x1, x0
     de4:	b.eq	d5c <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x164>  // b.none
     de8:	mov	x0, x23
     dec:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     df0:	b	d5c <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc+0x164>
     df4:	nop

0000000000000df8 <LLVMTargetMachineEmitToFile>:
     df8:	stp	x29, x30, [sp, #-192]!
     dfc:	mov	x29, sp
     e00:	stp	x19, x20, [sp, #16]
     e04:	mov	x19, x2
     e08:	mov	x20, x4
     e0c:	stp	x21, x22, [sp, #32]
     e10:	mov	x22, x0
     e14:	stp	x23, x24, [sp, #48]
     e18:	mov	x23, x1
     e1c:	mov	w24, w3
     e20:	str	wzr, [sp, #72]
     e24:	bl	0 <_ZNSt3_V215system_categoryEv>
     e28:	str	x0, [sp, #80]
     e2c:	mov	x2, #0x0                   	// #0
     e30:	cbz	x19, e40 <LLVMTargetMachineEmitToFile+0x48>
     e34:	mov	x0, x19
     e38:	bl	0 <strlen>
     e3c:	mov	x2, x0
     e40:	add	x21, sp, #0x78
     e44:	mov	x1, x19
     e48:	mov	x0, x21
     e4c:	add	x3, sp, #0x48
     e50:	mov	w4, #0x0                   	// #0
     e54:	bl	0 <_ZN4llvm14raw_fd_ostreamC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
     e58:	ldr	w1, [sp, #72]
     e5c:	cbz	w1, ec0 <LLVMTargetMachineEmitToFile+0xc8>
     e60:	ldr	x0, [sp, #80]
     e64:	add	x19, sp, #0x58
     e68:	mov	x8, x19
     e6c:	add	x19, x19, #0x10
     e70:	ldr	x2, [x0]
     e74:	ldr	x2, [x2, #32]
     e78:	blr	x2
     e7c:	ldr	x0, [sp, #88]
     e80:	bl	0 <strdup>
     e84:	str	x0, [x20]
     e88:	ldr	x1, [sp, #88]
     e8c:	cmp	x1, x19
     e90:	b.eq	e9c <LLVMTargetMachineEmitToFile+0xa4>  // b.none
     e94:	mov	x0, x1
     e98:	bl	0 <_ZdlPv>
     e9c:	mov	w19, #0x1                   	// #1
     ea0:	mov	x0, x21
     ea4:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     ea8:	mov	w0, w19
     eac:	ldp	x19, x20, [sp, #16]
     eb0:	ldp	x21, x22, [sp, #32]
     eb4:	ldp	x23, x24, [sp, #48]
     eb8:	ldp	x29, x30, [sp], #192
     ebc:	ret
     ec0:	mov	x1, x23
     ec4:	mov	x4, x20
     ec8:	mov	w3, w24
     ecc:	mov	x0, x22
     ed0:	mov	x2, x21
     ed4:	bl	bf8 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     ed8:	cmp	w0, #0x0
     edc:	ldr	x1, [sp, #128]
     ee0:	cset	w19, ne  // ne = any
     ee4:	ldr	x0, [sp, #144]
     ee8:	cmp	x0, x1
     eec:	b.eq	ea0 <LLVMTargetMachineEmitToFile+0xa8>  // b.none
     ef0:	mov	x0, x21
     ef4:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     ef8:	mov	x0, x21
     efc:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
     f00:	mov	w0, w19
     f04:	ldp	x19, x20, [sp, #16]
     f08:	ldp	x21, x22, [sp, #32]
     f0c:	ldp	x23, x24, [sp, #48]
     f10:	ldp	x29, x30, [sp], #192
     f14:	ret

0000000000000f18 <LLVMTargetMachineEmitToMemoryBuffer>:
     f18:	stp	x29, x30, [sp, #-144]!
     f1c:	adrp	x5, 0 <_ZTVN4llvm19raw_svector_ostreamE>
     f20:	mov	x29, sp
     f24:	ldr	x5, [x5]
     f28:	add	x6, sp, #0x50
     f2c:	stp	x19, x20, [sp, #16]
     f30:	mov	x20, x4
     f34:	add	x5, x5, #0x10
     f38:	mov	w4, #0x1                   	// #1
     f3c:	add	x19, sp, #0x60
     f40:	stp	x21, x22, [sp, #32]
     f44:	mov	x21, x0
     f48:	mov	x22, x1
     f4c:	mov	x0, x19
     f50:	mov	x1, #0x0                   	// #0
     f54:	stp	x23, x24, [sp, #48]
     f58:	mov	w23, w2
     f5c:	mov	x24, x3
     f60:	mov	x2, #0x0                   	// #0
     f64:	mov	w3, #0x0                   	// #0
     f68:	str	x25, [sp, #64]
     f6c:	mov	x25, x19
     f70:	stp	x19, xzr, [sp, #80]
     f74:	stp	x5, xzr, [sp, #96]
     f78:	stp	xzr, xzr, [sp, #112]
     f7c:	str	w4, [sp, #128]
     f80:	str	x6, [sp, #136]
     f84:	bl	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>
     f88:	mov	x4, x24
     f8c:	mov	x2, x19
     f90:	mov	w3, w23
     f94:	mov	x1, x22
     f98:	mov	x0, x21
     f9c:	bl	bf8 <_ZL21LLVMTargetMachineEmitP23LLVMOpaqueTargetMachineP16LLVMOpaqueModuleRN4llvm17raw_pwrite_streamE19LLVMCodeGenFileTypePPc>
     fa0:	ldr	x3, [sp, #136]
     fa4:	mov	w21, w0
     fa8:	adrp	x2, 0 <_ZNK4llvm14TargetRegistry8iteratordeEv.isra.0.part.0>
     fac:	add	x2, x2, #0x0
     fb0:	ldr	w1, [x3, #8]
     fb4:	ldr	x0, [x3]
     fb8:	bl	0 <LLVMCreateMemoryBufferWithMemoryRangeCopy>
     fbc:	str	x0, [x20]
     fc0:	adrp	x1, 0 <_ZTVN4llvm17raw_pwrite_streamE>
     fc4:	cmp	w21, #0x0
     fc8:	mov	x0, x19
     fcc:	cset	w19, ne  // ne = any
     fd0:	ldr	x1, [x1]
     fd4:	add	x1, x1, #0x10
     fd8:	str	x1, [sp, #96]
     fdc:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
     fe0:	ldr	x0, [sp, #80]
     fe4:	cmp	x0, x25
     fe8:	b.eq	ff0 <LLVMTargetMachineEmitToMemoryBuffer+0xd8>  // b.none
     fec:	bl	0 <free>
     ff0:	mov	w0, w19
     ff4:	ldp	x19, x20, [sp, #16]
     ff8:	ldp	x21, x22, [sp, #32]
     ffc:	ldp	x23, x24, [sp, #48]
    1000:	ldr	x25, [sp, #64]
    1004:	ldp	x29, x30, [sp], #144
    1008:	ret

Disassembly of section .text._ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE:

0000000000000000 <_ZN4llvm13TargetMachine19addPassesToEmitFileERNS_6legacy15PassManagerBaseERNS_17raw_pwrite_streamEPS4_NS_15CodeGenFileTypeEbPNS_28MachineModuleInfoWrapperPassE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIjEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #2
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #2
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xd4>
  8c:	lsl	x2, x22, #2
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #2
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x4                   	// #4
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplIjEaSERKS1_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIjEaSERKS1_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIhEaSERKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	64 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x64>  // b.none
  18:	stp	x21, x22, [sp, #32]
  1c:	mov	x20, x1
  20:	ldr	w21, [x1, #8]
  24:	ldr	w22, [x0, #8]
  28:	str	x23, [sp, #48]
  2c:	mov	w23, w21
  30:	cmp	x22, w21, uxtw
  34:	b.cc	74 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x74>  // b.lo, b.ul, b.last
  38:	cbz	x23, 58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>
  3c:	ldr	x0, [x0]
  40:	mov	x2, x23
  44:	ldr	x1, [x1]
  48:	bl	0 <memmove>
  4c:	ldr	w0, [x19, #12]
  50:	cmp	x23, x0
  54:	b.hi	f0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xf0>  // b.pmore
  58:	ldr	x23, [sp, #48]
  5c:	str	w21, [x19, #8]
  60:	ldp	x21, x22, [sp, #32]
  64:	mov	x0, x19
  68:	ldp	x19, x20, [sp, #16]
  6c:	ldp	x29, x30, [sp], #64
  70:	ret
  74:	ldr	w1, [x0, #12]
  78:	cmp	x23, x1
  7c:	b.hi	d4 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xd4>  // b.pmore
  80:	ldr	x0, [x0]
  84:	ldr	x1, [x20]
  88:	cbz	x22, bc <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xbc>
  8c:	mov	x2, x22
  90:	bl	0 <memmove>
  94:	ldr	x0, [x20]
  98:	ldr	w2, [x20, #8]
  9c:	add	x1, x0, x22
  a0:	add	x0, x0, x2
  a4:	cmp	x1, x0
  a8:	b.eq	4c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x4c>  // b.none
  ac:	ldr	x0, [x19]
  b0:	mov	x3, x22
  b4:	add	x0, x0, x22
  b8:	b	c8 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0xc8>
  bc:	cbz	w21, 58 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x58>
  c0:	mov	x2, x23
  c4:	mov	x3, #0x0                   	// #0
  c8:	sub	x2, x2, x3
  cc:	bl	0 <memcpy>
  d0:	b	4c <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x4c>
  d4:	str	wzr, [x0, #8]
  d8:	mov	x2, x23
  dc:	add	x1, x0, #0x10
  e0:	mov	x3, #0x1                   	// #1
  e4:	mov	x22, #0x0                   	// #0
  e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  ec:	b	94 <_ZN4llvm15SmallVectorImplIhEaSERKS1_+0x94>
  f0:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  f8:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIhEaSERKS1_>
  fc:	add	x3, x3, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x0, x0, #0x0
 108:	mov	w2, #0x43                  	// #67
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #3
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #3
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #3
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #3
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	add	x1, x0, #0x10
 10c:	mov	x2, x22
 110:	mov	x3, #0x8                   	// #8
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_15LayoutAlignElemEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x0, x1
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	mov	x19, x0
  14:	b.eq	5c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x5c>  // b.none
  18:	ldr	w2, [x0, #8]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	ldr	w21, [x1, #8]
  28:	mov	w22, w21
  2c:	cmp	x2, w21, uxtw
  30:	b.cc	6c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x6c>  // b.lo, b.ul, b.last
  34:	cbz	x22, 54 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x54>
  38:	ldr	x0, [x0]
  3c:	lsl	x2, x22, #4
  40:	ldr	x1, [x1]
  44:	bl	0 <memmove>
  48:	ldr	w0, [x19, #12]
  4c:	cmp	x22, x0
  50:	b.hi	12c <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x12c>  // b.pmore
  54:	str	w21, [x19, #8]
  58:	ldp	x21, x22, [sp, #32]
  5c:	mov	x0, x19
  60:	ldp	x19, x20, [sp, #16]
  64:	ldp	x29, x30, [sp], #64
  68:	ret
  6c:	ldr	w1, [x0, #12]
  70:	str	x23, [sp, #48]
  74:	cmp	x22, x1
  78:	b.hi	104 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x104>  // b.pmore
  7c:	lsl	x23, x2, #4
  80:	ldr	x0, [x0]
  84:	ldr	x3, [x20]
  88:	cbnz	x2, d4 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xd4>
  8c:	lsl	x2, x22, #4
  90:	add	x1, x3, x23
  94:	add	x3, x3, x2
  98:	cmp	x1, x3
  9c:	b.eq	b8 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xb8>  // b.none
  a0:	sub	x2, x2, x23
  a4:	add	x0, x0, x23
  a8:	bl	0 <memcpy>
  ac:	ldr	w0, [x19, #12]
  b0:	cmp	x22, x0
  b4:	b.hi	130 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0x130>  // b.pmore
  b8:	ldr	x23, [sp, #48]
  bc:	str	w21, [x19, #8]
  c0:	mov	x0, x19
  c4:	ldp	x19, x20, [sp, #16]
  c8:	ldp	x21, x22, [sp, #32]
  cc:	ldp	x29, x30, [sp], #64
  d0:	ret
  d4:	mov	x1, x3
  d8:	mov	x2, x23
  dc:	bl	0 <memmove>
  e0:	ldr	w2, [x20, #8]
  e4:	ldr	x0, [x19]
  e8:	ldr	x1, [x20]
  ec:	lsl	x2, x2, #4
  f0:	add	x3, x1, x2
  f4:	add	x1, x1, x23
  f8:	cmp	x1, x3
  fc:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xa0>  // b.any
 100:	b	ac <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xac>
 104:	str	wzr, [x0, #8]
 108:	mov	x2, x22
 10c:	mov	x3, #0x10                  	// #16
 110:	add	x1, x0, x3
 114:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 118:	mov	x23, #0x0                   	// #0
 11c:	ldr	w2, [x20, #8]
 120:	ldr	x0, [x19]
 124:	ldr	x1, [x20]
 128:	b	ec <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_+0xec>
 12c:	str	x23, [sp, #48]
 130:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 134:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 138:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_16PointerAlignElemEEaSERKS2_>
 13c:	add	x3, x3, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x0, x0, #0x0
 148:	mov	w2, #0x43                  	// #67
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC2EPPNS_18StringMapEntryBaseEb:

0000000000000000 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb>:
   0:	str	x1, [x0]
   4:	tst	w2, #0xff
   8:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
   c:	ldr	x2, [x1]
  10:	cmp	x2, #0x0
  14:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  18:	b.ne	38 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x38>  // b.any
  1c:	add	x1, x1, #0x8
  20:	mov	x3, x1
  24:	ldr	x2, [x1], #8
  28:	cmp	x2, #0x0
  2c:	ccmn	x2, #0x8, #0x4, ne  // ne = any
  30:	b.eq	20 <_ZN4llvm17StringMapIterBaseINS_17StringMapIteratorIbEENS_14StringMapEntryIbEEEC1EPPNS_18StringMapEntryBaseEb+0x20>  // b.none
  34:	str	x3, [x0]
  38:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	cmp	x2, #0x0
   8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	str	x21, [sp, #32]
  18:	b.eq	c8 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xc8>  // b.none
  1c:	sub	x19, x2, x1
  20:	str	x19, [sp, #56]
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	cmp	x19, #0xf
  30:	b.hi	84 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x84>  // b.pmore
  34:	cmp	x19, #0x1
  38:	ldr	x0, [x0]
  3c:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [x20]
  4c:	ldr	x19, [sp, #56]
  50:	str	x19, [x20, #8]
  54:	strb	wzr, [x0, x19]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	cbnz	x19, 9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>
  6c:	str	x19, [x20, #8]
  70:	strb	wzr, [x0, x19]
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	add	x1, sp, #0x38
  88:	mov	x2, #0x0                   	// #0
  8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  90:	str	x0, [x20]
  94:	ldr	x1, [sp, #56]
  98:	str	x1, [x20, #16]
  9c:	mov	x2, x19
  a0:	mov	x1, x21
  a4:	bl	0 <memcpy>
  a8:	ldr	x0, [x20]
  ac:	ldr	x19, [sp, #56]
  b0:	str	x19, [x20, #8]
  b4:	strb	wzr, [x0, x19]
  b8:	ldp	x19, x20, [sp, #16]
  bc:	ldr	x21, [sp, #32]
  c0:	ldp	x29, x30, [sp], #64
  c4:	ret
  c8:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  cc:	add	x0, x0, #0x0
  d0:	bl	0 <_ZSt19__throw_logic_errorPKc>
