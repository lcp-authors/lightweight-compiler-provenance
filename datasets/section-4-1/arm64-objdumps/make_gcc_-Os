
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406680 <.init>:
  406680:	stp	x29, x30, [sp, #-16]!
  406684:	mov	x29, sp
  406688:	bl	408890 <_start@@Base+0x50>
  40668c:	ldp	x29, x30, [sp], #16
  406690:	ret

Disassembly of section .plt:

00000000004066a0 <memcpy@plt-0x20>:
  4066a0:	stp	x16, x30, [sp, #-16]!
  4066a4:	adrp	x16, 43c000 <_IO_stdin_used@@Base+0x19720>
  4066a8:	ldr	x17, [x16, #4088]
  4066ac:	add	x16, x16, #0xff8
  4066b0:	br	x17
  4066b4:	nop
  4066b8:	nop
  4066bc:	nop

00000000004066c0 <memcpy@plt>:
  4066c0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4066c4:	ldr	x17, [x16]
  4066c8:	add	x16, x16, #0x0
  4066cc:	br	x17

00000000004066d0 <memmove@plt>:
  4066d0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4066d4:	ldr	x17, [x16, #8]
  4066d8:	add	x16, x16, #0x8
  4066dc:	br	x17

00000000004066e0 <_exit@plt>:
  4066e0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4066e4:	ldr	x17, [x16, #16]
  4066e8:	add	x16, x16, #0x10
  4066ec:	br	x17

00000000004066f0 <getcwd@plt>:
  4066f0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4066f4:	ldr	x17, [x16, #24]
  4066f8:	add	x16, x16, #0x18
  4066fc:	br	x17

0000000000406700 <strlen@plt>:
  406700:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406704:	ldr	x17, [x16, #32]
  406708:	add	x16, x16, #0x20
  40670c:	br	x17

0000000000406710 <fputs@plt>:
  406710:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406714:	ldr	x17, [x16, #40]
  406718:	add	x16, x16, #0x28
  40671c:	br	x17

0000000000406720 <exit@plt>:
  406720:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406724:	ldr	x17, [x16, #48]
  406728:	add	x16, x16, #0x30
  40672c:	br	x17

0000000000406730 <dup@plt>:
  406730:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406734:	ldr	x17, [x16, #56]
  406738:	add	x16, x16, #0x38
  40673c:	br	x17

0000000000406740 <perror@plt>:
  406740:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406744:	ldr	x17, [x16, #64]
  406748:	add	x16, x16, #0x40
  40674c:	br	x17

0000000000406750 <tmpfile@plt>:
  406750:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16, #72]
  406758:	add	x16, x16, #0x48
  40675c:	br	x17

0000000000406760 <sigprocmask@plt>:
  406760:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #80]
  406768:	add	x16, x16, #0x50
  40676c:	br	x17

0000000000406770 <remove@plt>:
  406770:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #88]
  406778:	add	x16, x16, #0x58
  40677c:	br	x17

0000000000406780 <ttyname@plt>:
  406780:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #96]
  406788:	add	x16, x16, #0x60
  40678c:	br	x17

0000000000406790 <readlink@plt>:
  406790:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #104]
  406798:	add	x16, x16, #0x68
  40679c:	br	x17

00000000004067a0 <sprintf@plt>:
  4067a0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #112]
  4067a8:	add	x16, x16, #0x70
  4067ac:	br	x17

00000000004067b0 <putc@plt>:
  4067b0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #120]
  4067b8:	add	x16, x16, #0x78
  4067bc:	br	x17

00000000004067c0 <pipe@plt>:
  4067c0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #128]
  4067c8:	add	x16, x16, #0x80
  4067cc:	br	x17

00000000004067d0 <opendir@plt>:
  4067d0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #136]
  4067d8:	add	x16, x16, #0x88
  4067dc:	br	x17

00000000004067e0 <getloadavg@plt>:
  4067e0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #144]
  4067e8:	add	x16, x16, #0x90
  4067ec:	br	x17

00000000004067f0 <__cxa_atexit@plt>:
  4067f0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #152]
  4067f8:	add	x16, x16, #0x98
  4067fc:	br	x17

0000000000406800 <fputc@plt>:
  406800:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #160]
  406808:	add	x16, x16, #0xa0
  40680c:	br	x17

0000000000406810 <clock_gettime@plt>:
  406810:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #168]
  406818:	add	x16, x16, #0xa8
  40681c:	br	x17

0000000000406820 <qsort@plt>:
  406820:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #176]
  406828:	add	x16, x16, #0xb0
  40682c:	br	x17

0000000000406830 <dlclose@plt>:
  406830:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #184]
  406838:	add	x16, x16, #0xb8
  40683c:	br	x17

0000000000406840 <ctime@plt>:
  406840:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #192]
  406848:	add	x16, x16, #0xc0
  40684c:	br	x17

0000000000406850 <kill@plt>:
  406850:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #200]
  406858:	add	x16, x16, #0xc8
  40685c:	br	x17

0000000000406860 <setvbuf@plt>:
  406860:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #208]
  406868:	add	x16, x16, #0xd0
  40686c:	br	x17

0000000000406870 <lseek@plt>:
  406870:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #216]
  406878:	add	x16, x16, #0xd8
  40687c:	br	x17

0000000000406880 <eaccess@plt>:
  406880:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #224]
  406888:	add	x16, x16, #0xe0
  40688c:	br	x17

0000000000406890 <dlopen@plt>:
  406890:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #232]
  406898:	add	x16, x16, #0xe8
  40689c:	br	x17

00000000004068a0 <__ctype_tolower_loc@plt>:
  4068a0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #240]
  4068a8:	add	x16, x16, #0xf0
  4068ac:	br	x17

00000000004068b0 <stpcpy@plt>:
  4068b0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #248]
  4068b8:	add	x16, x16, #0xf8
  4068bc:	br	x17

00000000004068c0 <fileno@plt>:
  4068c0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #256]
  4068c8:	add	x16, x16, #0x100
  4068cc:	br	x17

00000000004068d0 <localtime@plt>:
  4068d0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #264]
  4068d8:	add	x16, x16, #0x108
  4068dc:	br	x17

00000000004068e0 <posix_spawn_file_actions_adddup2@plt>:
  4068e0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #272]
  4068e8:	add	x16, x16, #0x110
  4068ec:	br	x17

00000000004068f0 <signal@plt>:
  4068f0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #280]
  4068f8:	add	x16, x16, #0x118
  4068fc:	br	x17

0000000000406900 <fclose@plt>:
  406900:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #288]
  406908:	add	x16, x16, #0x120
  40690c:	br	x17

0000000000406910 <atoi@plt>:
  406910:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #296]
  406918:	add	x16, x16, #0x128
  40691c:	br	x17

0000000000406920 <getpid@plt>:
  406920:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #304]
  406928:	add	x16, x16, #0x130
  40692c:	br	x17

0000000000406930 <fopen@plt>:
  406930:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #312]
  406938:	add	x16, x16, #0x138
  40693c:	br	x17

0000000000406940 <time@plt>:
  406940:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #320]
  406948:	add	x16, x16, #0x140
  40694c:	br	x17

0000000000406950 <malloc@plt>:
  406950:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #328]
  406958:	add	x16, x16, #0x148
  40695c:	br	x17

0000000000406960 <dlerror@plt>:
  406960:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #336]
  406968:	add	x16, x16, #0x150
  40696c:	br	x17

0000000000406970 <dlsym@plt>:
  406970:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #344]
  406978:	add	x16, x16, #0x158
  40697c:	br	x17

0000000000406980 <open@plt>:
  406980:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #352]
  406988:	add	x16, x16, #0x160
  40698c:	br	x17

0000000000406990 <sigemptyset@plt>:
  406990:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #360]
  406998:	add	x16, x16, #0x168
  40699c:	br	x17

00000000004069a0 <posix_spawnattr_destroy@plt>:
  4069a0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #368]
  4069a8:	add	x16, x16, #0x170
  4069ac:	br	x17

00000000004069b0 <strncmp@plt>:
  4069b0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #376]
  4069b8:	add	x16, x16, #0x178
  4069bc:	br	x17

00000000004069c0 <bindtextdomain@plt>:
  4069c0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #384]
  4069c8:	add	x16, x16, #0x180
  4069cc:	br	x17

00000000004069d0 <__libc_start_main@plt>:
  4069d0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #392]
  4069d8:	add	x16, x16, #0x188
  4069dc:	br	x17

00000000004069e0 <strcat@plt>:
  4069e0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #400]
  4069e8:	add	x16, x16, #0x190
  4069ec:	br	x17

00000000004069f0 <memset@plt>:
  4069f0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #408]
  4069f8:	add	x16, x16, #0x198
  4069fc:	br	x17

0000000000406a00 <fdopen@plt>:
  406a00:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #416]
  406a08:	add	x16, x16, #0x1a0
  406a0c:	br	x17

0000000000406a10 <strpbrk@plt>:
  406a10:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #424]
  406a18:	add	x16, x16, #0x1a8
  406a1c:	br	x17

0000000000406a20 <gettimeofday@plt>:
  406a20:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #432]
  406a28:	add	x16, x16, #0x1b0
  406a2c:	br	x17

0000000000406a30 <getpwnam@plt>:
  406a30:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #440]
  406a38:	add	x16, x16, #0x1b8
  406a3c:	br	x17

0000000000406a40 <atof@plt>:
  406a40:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #448]
  406a48:	add	x16, x16, #0x1c0
  406a4c:	br	x17

0000000000406a50 <pselect@plt>:
  406a50:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #456]
  406a58:	add	x16, x16, #0x1c8
  406a5c:	br	x17

0000000000406a60 <calloc@plt>:
  406a60:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #464]
  406a68:	add	x16, x16, #0x1d0
  406a6c:	br	x17

0000000000406a70 <posix_spawn_file_actions_destroy@plt>:
  406a70:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #472]
  406a78:	add	x16, x16, #0x1d8
  406a7c:	br	x17

0000000000406a80 <readdir@plt>:
  406a80:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #480]
  406a88:	add	x16, x16, #0x1e0
  406a8c:	br	x17

0000000000406a90 <realloc@plt>:
  406a90:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #488]
  406a98:	add	x16, x16, #0x1e8
  406a9c:	br	x17

0000000000406aa0 <putenv@plt>:
  406aa0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #496]
  406aa8:	add	x16, x16, #0x1f0
  406aac:	br	x17

0000000000406ab0 <strdup@plt>:
  406ab0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #504]
  406ab8:	add	x16, x16, #0x1f8
  406abc:	br	x17

0000000000406ac0 <closedir@plt>:
  406ac0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #512]
  406ac8:	add	x16, x16, #0x200
  406acc:	br	x17

0000000000406ad0 <strerror@plt>:
  406ad0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #520]
  406ad8:	add	x16, x16, #0x208
  406adc:	br	x17

0000000000406ae0 <close@plt>:
  406ae0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #528]
  406ae8:	add	x16, x16, #0x210
  406aec:	br	x17

0000000000406af0 <sigaction@plt>:
  406af0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #536]
  406af8:	add	x16, x16, #0x218
  406afc:	br	x17

0000000000406b00 <strrchr@plt>:
  406b00:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #544]
  406b08:	add	x16, x16, #0x220
  406b0c:	br	x17

0000000000406b10 <atol@plt>:
  406b10:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #552]
  406b18:	add	x16, x16, #0x228
  406b1c:	br	x17

0000000000406b20 <__gmon_start__@plt>:
  406b20:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #560]
  406b28:	add	x16, x16, #0x230
  406b2c:	br	x17

0000000000406b30 <write@plt>:
  406b30:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #568]
  406b38:	add	x16, x16, #0x238
  406b3c:	br	x17

0000000000406b40 <posix_spawnattr_setflags@plt>:
  406b40:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #576]
  406b48:	add	x16, x16, #0x240
  406b4c:	br	x17

0000000000406b50 <abort@plt>:
  406b50:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #584]
  406b58:	add	x16, x16, #0x248
  406b5c:	br	x17

0000000000406b60 <posix_spawnattr_setsigmask@plt>:
  406b60:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #592]
  406b68:	add	x16, x16, #0x250
  406b6c:	br	x17

0000000000406b70 <feof@plt>:
  406b70:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #600]
  406b78:	add	x16, x16, #0x258
  406b7c:	br	x17

0000000000406b80 <puts@plt>:
  406b80:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #608]
  406b88:	add	x16, x16, #0x260
  406b8c:	br	x17

0000000000406b90 <posix_spawn_file_actions_init@plt>:
  406b90:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #616]
  406b98:	add	x16, x16, #0x268
  406b9c:	br	x17

0000000000406ba0 <memcmp@plt>:
  406ba0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #624]
  406ba8:	add	x16, x16, #0x270
  406bac:	br	x17

0000000000406bb0 <textdomain@plt>:
  406bb0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #632]
  406bb8:	add	x16, x16, #0x278
  406bbc:	br	x17

0000000000406bc0 <getopt_long@plt>:
  406bc0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #640]
  406bc8:	add	x16, x16, #0x280
  406bcc:	br	x17

0000000000406bd0 <execvp@plt>:
  406bd0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #648]
  406bd8:	add	x16, x16, #0x288
  406bdc:	br	x17

0000000000406be0 <strcmp@plt>:
  406be0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #656]
  406be8:	add	x16, x16, #0x290
  406bec:	br	x17

0000000000406bf0 <__ctype_b_loc@plt>:
  406bf0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #664]
  406bf8:	add	x16, x16, #0x298
  406bfc:	br	x17

0000000000406c00 <fread@plt>:
  406c00:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #672]
  406c08:	add	x16, x16, #0x2a0
  406c0c:	br	x17

0000000000406c10 <chdir@plt>:
  406c10:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #680]
  406c18:	add	x16, x16, #0x2a8
  406c1c:	br	x17

0000000000406c20 <free@plt>:
  406c20:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #688]
  406c28:	add	x16, x16, #0x2b0
  406c2c:	br	x17

0000000000406c30 <strndup@plt>:
  406c30:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #696]
  406c38:	add	x16, x16, #0x2b8
  406c3c:	br	x17

0000000000406c40 <strchr@plt>:
  406c40:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #704]
  406c48:	add	x16, x16, #0x2c0
  406c4c:	br	x17

0000000000406c50 <globfree@plt>:
  406c50:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #712]
  406c58:	add	x16, x16, #0x2c8
  406c5c:	br	x17

0000000000406c60 <memrchr@plt>:
  406c60:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #720]
  406c68:	add	x16, x16, #0x2d0
  406c6c:	br	x17

0000000000406c70 <fwrite@plt>:
  406c70:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #728]
  406c78:	add	x16, x16, #0x2d8
  406c7c:	br	x17

0000000000406c80 <fnmatch@plt>:
  406c80:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #736]
  406c88:	add	x16, x16, #0x2e0
  406c8c:	br	x17

0000000000406c90 <fcntl@plt>:
  406c90:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #744]
  406c98:	add	x16, x16, #0x2e8
  406c9c:	br	x17

0000000000406ca0 <wait@plt>:
  406ca0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #752]
  406ca8:	add	x16, x16, #0x2f0
  406cac:	br	x17

0000000000406cb0 <fflush@plt>:
  406cb0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #760]
  406cb8:	add	x16, x16, #0x2f8
  406cbc:	br	x17

0000000000406cc0 <strcpy@plt>:
  406cc0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #768]
  406cc8:	add	x16, x16, #0x300
  406ccc:	br	x17

0000000000406cd0 <posix_spawn@plt>:
  406cd0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #776]
  406cd8:	add	x16, x16, #0x308
  406cdc:	br	x17

0000000000406ce0 <vsprintf@plt>:
  406ce0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #784]
  406ce8:	add	x16, x16, #0x310
  406cec:	br	x17

0000000000406cf0 <__lxstat@plt>:
  406cf0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #792]
  406cf8:	add	x16, x16, #0x318
  406cfc:	br	x17

0000000000406d00 <posix_spawnattr_init@plt>:
  406d00:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #800]
  406d08:	add	x16, x16, #0x320
  406d0c:	br	x17

0000000000406d10 <read@plt>:
  406d10:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #808]
  406d18:	add	x16, x16, #0x328
  406d1c:	br	x17

0000000000406d20 <mkstemp@plt>:
  406d20:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #816]
  406d28:	add	x16, x16, #0x330
  406d2c:	br	x17

0000000000406d30 <isatty@plt>:
  406d30:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #824]
  406d38:	add	x16, x16, #0x338
  406d3c:	br	x17

0000000000406d40 <__fxstat@plt>:
  406d40:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #832]
  406d48:	add	x16, x16, #0x340
  406d4c:	br	x17

0000000000406d50 <strstr@plt>:
  406d50:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #840]
  406d58:	add	x16, x16, #0x348
  406d5c:	br	x17

0000000000406d60 <dcgettext@plt>:
  406d60:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #848]
  406d68:	add	x16, x16, #0x350
  406d6c:	br	x17

0000000000406d70 <realpath@plt>:
  406d70:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #856]
  406d78:	add	x16, x16, #0x358
  406d7c:	br	x17

0000000000406d80 <__isoc99_sscanf@plt>:
  406d80:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #864]
  406d88:	add	x16, x16, #0x360
  406d8c:	br	x17

0000000000406d90 <glob@plt>:
  406d90:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #872]
  406d98:	add	x16, x16, #0x368
  406d9c:	br	x17

0000000000406da0 <ftruncate@plt>:
  406da0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #880]
  406da8:	add	x16, x16, #0x370
  406dac:	br	x17

0000000000406db0 <strncpy@plt>:
  406db0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #888]
  406db8:	add	x16, x16, #0x378
  406dbc:	br	x17

0000000000406dc0 <strsignal@plt>:
  406dc0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #896]
  406dc8:	add	x16, x16, #0x380
  406dcc:	br	x17

0000000000406dd0 <sigaddset@plt>:
  406dd0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #904]
  406dd8:	add	x16, x16, #0x388
  406ddc:	br	x17

0000000000406de0 <umask@plt>:
  406de0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #912]
  406de8:	add	x16, x16, #0x390
  406dec:	br	x17

0000000000406df0 <printf@plt>:
  406df0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #920]
  406df8:	add	x16, x16, #0x398
  406dfc:	br	x17

0000000000406e00 <__errno_location@plt>:
  406e00:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #928]
  406e08:	add	x16, x16, #0x3a0
  406e0c:	br	x17

0000000000406e10 <getenv@plt>:
  406e10:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e14:	ldr	x17, [x16, #936]
  406e18:	add	x16, x16, #0x3a8
  406e1c:	br	x17

0000000000406e20 <putchar@plt>:
  406e20:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e24:	ldr	x17, [x16, #944]
  406e28:	add	x16, x16, #0x3b0
  406e2c:	br	x17

0000000000406e30 <__xstat@plt>:
  406e30:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e34:	ldr	x17, [x16, #952]
  406e38:	add	x16, x16, #0x3b8
  406e3c:	br	x17

0000000000406e40 <waitpid@plt>:
  406e40:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e44:	ldr	x17, [x16, #960]
  406e48:	add	x16, x16, #0x3c0
  406e4c:	br	x17

0000000000406e50 <unlink@plt>:
  406e50:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e54:	ldr	x17, [x16, #968]
  406e58:	add	x16, x16, #0x3c8
  406e5c:	br	x17

0000000000406e60 <getlogin@plt>:
  406e60:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e64:	ldr	x17, [x16, #976]
  406e68:	add	x16, x16, #0x3d0
  406e6c:	br	x17

0000000000406e70 <fprintf@plt>:
  406e70:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e74:	ldr	x17, [x16, #984]
  406e78:	add	x16, x16, #0x3d8
  406e7c:	br	x17

0000000000406e80 <fgets@plt>:
  406e80:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e84:	ldr	x17, [x16, #992]
  406e88:	add	x16, x16, #0x3e0
  406e8c:	br	x17

0000000000406e90 <setlocale@plt>:
  406e90:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406e94:	ldr	x17, [x16, #1000]
  406e98:	add	x16, x16, #0x3e8
  406e9c:	br	x17

0000000000406ea0 <ferror@plt>:
  406ea0:	adrp	x16, 43d000 <memcpy@GLIBC_2.17>
  406ea4:	ldr	x17, [x16, #1008]
  406ea8:	add	x16, x16, #0x3f0
  406eac:	br	x17

Disassembly of section .text:

0000000000406eb0 <main@@Base>:
  406eb0:	mov	x12, #0x18b0                	// #6320
  406eb4:	sub	sp, sp, x12
  406eb8:	stp	x29, x30, [sp]
  406ebc:	mov	x29, sp
  406ec0:	stp	x19, x20, [sp, #16]
  406ec4:	stp	x21, x22, [sp, #32]
  406ec8:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  406ecc:	add	x21, x21, #0x7f8
  406ed0:	stp	x23, x24, [sp, #48]
  406ed4:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  406ed8:	add	x19, x23, #0x450
  406edc:	add	x20, x19, #0x4
  406ee0:	mov	x22, x1
  406ee4:	stp	x25, x26, [sp, #64]
  406ee8:	stp	x27, x28, [sp, #80]
  406eec:	str	w0, [x29, #140]
  406ef0:	mov	x0, x21
  406ef4:	str	x2, [x29, #144]
  406ef8:	bl	417478 <output_init@@Base>
  406efc:	mov	w0, #0x1                   	// #1
  406f00:	strh	w0, [x19, #4]
  406f04:	mov	w0, #0x20                  	// #32
  406f08:	strh	w0, [x20, #122]
  406f0c:	mov	w0, #0x40                  	// #64
  406f10:	movk	w0, #0x10, lsl #16
  406f14:	str	w0, [x20, #116]
  406f18:	mov	w0, #0x80                  	// #128
  406f1c:	movk	w0, #0x100, lsl #16
  406f20:	stur	w0, [x20, #246]
  406f24:	mov	w0, #0x80                  	// #128
  406f28:	strh	w0, [x20, #250]
  406f2c:	mov	w0, #0x800080              	// #8388736
  406f30:	str	w0, [x20, #80]
  406f34:	mov	w0, #0x8                   	// #8
  406f38:	movk	w0, #0x4000, lsl #16
  406f3c:	stur	w0, [x20, #70]
  406f40:	mov	w0, #0x2000                	// #8192
  406f44:	strh	w0, [x20, #190]
  406f48:	mov	w0, #0x2                   	// #2
  406f4c:	strh	w0, [x20, #18]
  406f50:	strh	w0, [x20, #64]
  406f54:	mov	x0, #0x400                 	// #1024
  406f58:	movk	x0, #0x2000, lsl #16
  406f5c:	movk	x0, #0x2200, lsl #32
  406f60:	movk	x0, #0x8000, lsl #48
  406f64:	str	x0, [x20, #88]
  406f68:	bl	406bf0 <__ctype_b_loc@plt>
  406f6c:	str	x23, [x29, #128]
  406f70:	ldr	x3, [x0]
  406f74:	mov	x0, #0x2                   	// #2
  406f78:	ldrh	w2, [x3, x0]
  406f7c:	tbz	w2, #13, 40747c <main@@Base+0x5cc>
  406f80:	ldrh	w1, [x20, #2]
  406f84:	tbnz	w1, #1, 40747c <main@@Base+0x5cc>
  406f88:	orr	w1, w1, #0x4
  406f8c:	strh	w1, [x20, #2]
  406f90:	add	x0, x0, #0x2
  406f94:	add	x20, x20, #0x2
  406f98:	cmp	x0, #0x200
  406f9c:	b.ne	406f78 <main@@Base+0xc8>  // b.any
  406fa0:	adrp	x24, 424000 <_IO_stdin_used@@Base+0x1720>
  406fa4:	add	x24, x24, #0x819
  406fa8:	mov	x1, x24
  406fac:	mov	w0, #0x6                   	// #6
  406fb0:	bl	406e90 <setlocale@plt>
  406fb4:	adrp	x25, 425000 <_IO_stdin_used@@Base+0x2720>
  406fb8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  406fbc:	add	x1, x1, #0x302
  406fc0:	add	x25, x25, #0x837
  406fc4:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  406fc8:	mov	x0, x25
  406fcc:	bl	4069c0 <bindtextdomain@plt>
  406fd0:	mov	x0, x25
  406fd4:	add	x20, x20, #0x810
  406fd8:	bl	406bb0 <textdomain@plt>
  406fdc:	adrp	x23, 40a000 <delete_child_targets@@Base+0x2c>
  406fe0:	mov	x0, x20
  406fe4:	add	x23, x23, #0x3c
  406fe8:	bl	406990 <sigemptyset@plt>
  406fec:	mov	x1, x23
  406ff0:	mov	w0, #0x1                   	// #1
  406ff4:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  406ff8:	mov	x1, x0
  406ffc:	cmp	x0, #0x1
  407000:	b.ne	40748c <main@@Base+0x5dc>  // b.any
  407004:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407008:	mov	x1, x23
  40700c:	mov	w0, #0x3                   	// #3
  407010:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407014:	mov	x1, x0
  407018:	cmp	x0, #0x1
  40701c:	b.ne	40749c <main@@Base+0x5ec>  // b.any
  407020:	mov	w0, #0x3                   	// #3
  407024:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407028:	mov	x1, x23
  40702c:	mov	w0, #0x2                   	// #2
  407030:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407034:	mov	x1, x0
  407038:	cmp	x0, #0x1
  40703c:	b.ne	4074ac <main@@Base+0x5fc>  // b.any
  407040:	mov	w0, #0x2                   	// #2
  407044:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407048:	mov	x1, x23
  40704c:	mov	w0, #0xf                   	// #15
  407050:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407054:	mov	x1, x0
  407058:	cmp	x0, #0x1
  40705c:	b.ne	4074bc <main@@Base+0x60c>  // b.any
  407060:	mov	w0, #0xf                   	// #15
  407064:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407068:	mov	x1, x23
  40706c:	mov	w0, #0x18                  	// #24
  407070:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407074:	mov	x1, x0
  407078:	cmp	x0, #0x1
  40707c:	b.ne	4074cc <main@@Base+0x61c>  // b.any
  407080:	mov	w0, #0x18                  	// #24
  407084:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407088:	mov	x1, x23
  40708c:	mov	w0, #0x19                  	// #25
  407090:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407094:	mov	x1, x0
  407098:	cmp	x0, #0x1
  40709c:	b.ne	4074dc <main@@Base+0x62c>  // b.any
  4070a0:	mov	w0, #0x19                  	// #25
  4070a4:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  4070a8:	mov	x1, #0x0                   	// #0
  4070ac:	mov	w0, #0x11                  	// #17
  4070b0:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  4070b4:	mov	x0, #0x0                   	// #0
  4070b8:	bl	417478 <output_init@@Base>
  4070bc:	ldr	x0, [x22]
  4070c0:	cbnz	x0, 4070c8 <main@@Base+0x218>
  4070c4:	str	x24, [x22]
  4070c8:	ldr	x0, [x22]
  4070cc:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  4070d0:	ldrb	w1, [x0]
  4070d4:	cbnz	w1, 4074ec <main@@Base+0x63c>
  4070d8:	str	x25, [x20, #2008]
  4070dc:	bl	416f74 <user_access@@Base>
  4070e0:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  4070e4:	bl	41f94c <init_hash_global_variable_set@@Base>
  4070e8:	bl	41f21c <strcache_init@@Base>
  4070ec:	bl	40d750 <init_hash_files@@Base>
  4070f0:	bl	40b094 <hash_init_directories@@Base>
  4070f4:	bl	410698 <hash_init_function_table@@Base>
  4070f8:	add	x0, x29, #0x8a8
  4070fc:	mov	x1, #0x1000                	// #4096
  407100:	bl	4066f0 <getcwd@plt>
  407104:	cbnz	x0, 407510 <main@@Base+0x660>
  407108:	mov	x1, x24
  40710c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407110:	add	x0, x0, #0x314
  407114:	bl	417c10 <perror_with_name@@Base>
  407118:	str	xzr, [x20, #1920]
  40711c:	strb	wzr, [x29, #2216]
  407120:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  407124:	mov	x1, #0xa                   	// #10
  407128:	mov	x2, x24
  40712c:	mov	x6, #0x0                   	// #0
  407130:	ldr	x0, [x20, #304]
  407134:	mov	w4, #0x0                   	// #0
  407138:	mov	w3, #0x0                   	// #0
  40713c:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  407140:	add	x25, x25, #0x790
  407144:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x4720>
  407148:	ldr	x5, [x0, #8]
  40714c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407150:	add	x0, x0, #0x31b
  407154:	mov	w27, #0x0                   	// #0
  407158:	mov	w23, #0x0                   	// #0
  40715c:	bl	41f978 <define_variable_in_set@@Base>
  407160:	ldrb	w1, [x0, #44]
  407164:	mov	x2, x24
  407168:	mov	x6, #0x0                   	// #0
  40716c:	orr	w1, w1, #0x10
  407170:	strb	w1, [x0, #44]
  407174:	ldr	x0, [x20, #304]
  407178:	mov	x1, #0xd                   	// #13
  40717c:	mov	w4, #0x0                   	// #0
  407180:	mov	w3, #0x0                   	// #0
  407184:	ldr	x5, [x0, #8]
  407188:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40718c:	add	x0, x0, #0x326
  407190:	bl	41f978 <define_variable_in_set@@Base>
  407194:	ldrb	w1, [x0, #44]
  407198:	mov	x6, #0x0                   	// #0
  40719c:	mov	w4, #0x0                   	// #0
  4071a0:	orr	w1, w1, #0x10
  4071a4:	strb	w1, [x0, #44]
  4071a8:	ldr	x0, [x20, #304]
  4071ac:	mov	w3, #0x0                   	// #0
  4071b0:	mov	x1, #0xb                   	// #11
  4071b4:	adrp	x2, 423000 <_IO_stdin_used@@Base+0x720>
  4071b8:	add	x2, x2, #0x125
  4071bc:	ldr	x5, [x0, #8]
  4071c0:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4071c4:	add	x0, x0, #0x334
  4071c8:	bl	41f978 <define_variable_in_set@@Base>
  4071cc:	ldr	x0, [x20, #304]
  4071d0:	mov	x2, x24
  4071d4:	mov	x6, #0x0                   	// #0
  4071d8:	mov	w4, #0x0                   	// #0
  4071dc:	mov	w3, #0x0                   	// #0
  4071e0:	mov	x1, #0x7                   	// #7
  4071e4:	ldr	x5, [x0, #8]
  4071e8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4071ec:	add	x0, x0, #0xf2b
  4071f0:	bl	41f978 <define_variable_in_set@@Base>
  4071f4:	ldr	x0, [x20, #304]
  4071f8:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  4071fc:	add	x2, x2, #0x340
  407200:	mov	x6, #0x0                   	// #0
  407204:	mov	w4, #0x0                   	// #0
  407208:	mov	w3, #0x0                   	// #0
  40720c:	ldr	x5, [x0, #8]
  407210:	mov	x1, #0x9                   	// #9
  407214:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407218:	add	x0, x0, #0x3ed
  40721c:	bl	41f978 <define_variable_in_set@@Base>
  407220:	mov	x0, #0x0                   	// #0
  407224:	bl	4106f0 <guile_gmake_setup@@Base>
  407228:	add	x0, x28, #0xb9
  40722c:	str	x0, [x29, #152]
  407230:	ldr	x0, [x29, #144]
  407234:	ldr	x7, [x0, w27, uxtw #3]
  407238:	cbnz	x7, 407640 <main@@Base+0x790>
  40723c:	adrp	x28, 423000 <_IO_stdin_used@@Base+0x720>
  407240:	add	x28, x28, #0x21f
  407244:	mov	x0, x28
  407248:	mov	x1, #0xc                   	// #12
  40724c:	bl	416730 <die@@Base+0x998>
  407250:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  407254:	ldr	x0, [x20, #304]
  407258:	mov	x2, x24
  40725c:	mov	x6, #0x0                   	// #0
  407260:	mov	w4, #0x0                   	// #0
  407264:	mov	w3, #0x1                   	// #1
  407268:	mov	x1, #0xc                   	// #12
  40726c:	ldr	x5, [x0, #8]
  407270:	mov	x0, x28
  407274:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  407278:	bl	41f978 <define_variable_in_set@@Base>
  40727c:	mov	x1, #0x9                   	// #9
  407280:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  407284:	add	x0, x0, #0x222
  407288:	str	x0, [x29, #120]
  40728c:	bl	416730 <die@@Base+0x998>
  407290:	ldr	w26, [x24, #160]
  407294:	ldr	w0, [x19, #2200]
  407298:	mov	w2, #0x0                   	// #0
  40729c:	sub	w0, w0, #0x1
  4072a0:	cmp	w0, #0x1
  4072a4:	ldrb	w0, [x21, #8]
  4072a8:	cset	w1, ls  // ls = plast
  4072ac:	bfxil	w0, w1, #0, #1
  4072b0:	strb	w0, [x21, #8]
  4072b4:	mov	x1, x22
  4072b8:	tst	x0, #0x1
  4072bc:	csel	x0, x21, xzr, ne  // ne = any
  4072c0:	str	x0, [x25, #3512]
  4072c4:	mov	w0, #0xffffffff            	// #-1
  4072c8:	str	w0, [x24, #160]
  4072cc:	ldr	w0, [x29, #140]
  4072d0:	bl	415e74 <die@@Base+0xdc>
  4072d4:	str	x25, [x29, #112]
  4072d8:	ldr	w0, [x24, #160]
  4072dc:	str	w0, [x29, #144]
  4072e0:	mov	w0, w0
  4072e4:	cmn	w0, #0x1
  4072e8:	b.ne	4072f0 <main@@Base+0x440>  // b.any
  4072ec:	str	w26, [x24, #160]
  4072f0:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  4072f4:	ldr	x0, [x25, #400]
  4072f8:	bl	4068c0 <fileno@plt>
  4072fc:	bl	406d30 <isatty@plt>
  407300:	cbz	w0, 407364 <main@@Base+0x4b4>
  407304:	adrp	x26, 425000 <_IO_stdin_used@@Base+0x2720>
  407308:	add	x26, x26, #0x405
  40730c:	mov	x0, x26
  407310:	mov	x1, #0xc                   	// #12
  407314:	bl	41fcdc <lookup_variable@@Base>
  407318:	cbnz	x0, 407364 <main@@Base+0x4b4>
  40731c:	ldr	x0, [x25, #400]
  407320:	bl	4068c0 <fileno@plt>
  407324:	bl	406780 <ttyname@plt>
  407328:	mov	x2, x0
  40732c:	cbnz	x0, 407338 <main@@Base+0x488>
  407330:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  407334:	add	x2, x2, #0x2f8
  407338:	ldr	x0, [x20, #304]
  40733c:	mov	x1, #0xc                   	// #12
  407340:	mov	x6, #0x0                   	// #0
  407344:	mov	w4, #0x0                   	// #0
  407348:	mov	w3, #0x0                   	// #0
  40734c:	ldr	x5, [x0, #8]
  407350:	mov	x0, x26
  407354:	bl	41f978 <define_variable_in_set@@Base>
  407358:	ldrb	w1, [x0, #47]
  40735c:	and	w1, w1, #0xffffff9f
  407360:	strb	w1, [x0, #47]
  407364:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  407368:	ldr	x0, [x25, #376]
  40736c:	bl	4068c0 <fileno@plt>
  407370:	bl	406d30 <isatty@plt>
  407374:	cbz	w0, 4073d8 <main@@Base+0x528>
  407378:	adrp	x26, 425000 <_IO_stdin_used@@Base+0x2720>
  40737c:	add	x26, x26, #0x412
  407380:	mov	x0, x26
  407384:	mov	x1, #0xc                   	// #12
  407388:	bl	41fcdc <lookup_variable@@Base>
  40738c:	cbnz	x0, 4073d8 <main@@Base+0x528>
  407390:	ldr	x0, [x25, #376]
  407394:	bl	4068c0 <fileno@plt>
  407398:	bl	406780 <ttyname@plt>
  40739c:	mov	x2, x0
  4073a0:	cbnz	x0, 4073ac <main@@Base+0x4fc>
  4073a4:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  4073a8:	add	x2, x2, #0x2f8
  4073ac:	ldr	x0, [x20, #304]
  4073b0:	mov	x1, #0xc                   	// #12
  4073b4:	mov	x6, #0x0                   	// #0
  4073b8:	mov	w4, #0x0                   	// #0
  4073bc:	mov	w3, #0x0                   	// #0
  4073c0:	ldr	x5, [x0, #8]
  4073c4:	mov	x0, x26
  4073c8:	bl	41f978 <define_variable_in_set@@Base>
  4073cc:	ldrb	w1, [x0, #47]
  4073d0:	and	w1, w1, #0xffffff9f
  4073d4:	strb	w1, [x0, #47]
  4073d8:	ldr	w0, [x19, #2200]
  4073dc:	ldrb	w1, [x21, #8]
  4073e0:	sub	w0, w0, #0x1
  4073e4:	cmp	w0, #0x1
  4073e8:	cset	w25, ls  // ls = plast
  4073ec:	tbz	w1, #0, 407400 <main@@Base+0x550>
  4073f0:	cmp	w0, #0x1
  4073f4:	b.ls	407400 <main@@Base+0x550>  // b.plast
  4073f8:	mov	x0, x21
  4073fc:	bl	41752c <output_close@@Base>
  407400:	ldrb	w0, [x21, #8]
  407404:	mov	x1, #0x9                   	// #9
  407408:	bfxil	w0, w25, #0, #1
  40740c:	strb	w0, [x21, #8]
  407410:	tst	x0, #0x1
  407414:	ldr	x0, [x29, #112]
  407418:	csel	x21, x21, xzr, ne  // ne = any
  40741c:	str	x21, [x0, #3512]
  407420:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407424:	add	x0, x0, #0x41f
  407428:	bl	41fcdc <lookup_variable@@Base>
  40742c:	cbz	x0, 407654 <main@@Base+0x7a4>
  407430:	ldr	x0, [x0, #8]
  407434:	ldrb	w1, [x0]
  407438:	cbz	w1, 407654 <main@@Base+0x7a4>
  40743c:	cmp	w1, #0x2d
  407440:	b.eq	407654 <main@@Base+0x7a4>  // b.none
  407444:	bl	406910 <atoi@plt>
  407448:	adrp	x26, 441000 <commands_started@@Base+0x1c0>
  40744c:	str	x26, [x29, #152]
  407450:	str	w0, [x26, #2024]
  407454:	ldr	w0, [x19, #2212]
  407458:	cbz	w0, 407464 <main@@Base+0x5b4>
  40745c:	cmp	w23, #0x0
  407460:	cset	w0, eq  // eq = none
  407464:	ldr	w25, [x19, #584]
  407468:	str	w0, [x19, #2216]
  40746c:	cbz	w25, 40765c <main@@Base+0x7ac>
  407470:	bl	415294 <gmk_add_function@@Base+0x88>
  407474:	mov	w0, #0x0                   	// #0
  407478:	bl	415d98 <die@@Base>
  40747c:	tbz	w2, #3, 406f90 <main@@Base+0xe0>
  407480:	ldrh	w1, [x20, #2]
  407484:	orr	w1, w1, #0x2000
  407488:	b	406f8c <main@@Base+0xdc>
  40748c:	mov	x0, x20
  407490:	mov	w1, #0x1                   	// #1
  407494:	bl	406dd0 <sigaddset@plt>
  407498:	b	407008 <main@@Base+0x158>
  40749c:	mov	x0, x20
  4074a0:	mov	w1, #0x3                   	// #3
  4074a4:	bl	406dd0 <sigaddset@plt>
  4074a8:	b	407028 <main@@Base+0x178>
  4074ac:	mov	x0, x20
  4074b0:	mov	w1, #0x2                   	// #2
  4074b4:	bl	406dd0 <sigaddset@plt>
  4074b8:	b	407048 <main@@Base+0x198>
  4074bc:	mov	x0, x20
  4074c0:	mov	w1, #0xf                   	// #15
  4074c4:	bl	406dd0 <sigaddset@plt>
  4074c8:	b	407068 <main@@Base+0x1b8>
  4074cc:	mov	x0, x20
  4074d0:	mov	w1, #0x18                  	// #24
  4074d4:	bl	406dd0 <sigaddset@plt>
  4074d8:	b	407088 <main@@Base+0x1d8>
  4074dc:	mov	x0, x20
  4074e0:	mov	w1, #0x19                  	// #25
  4074e4:	bl	406dd0 <sigaddset@plt>
  4074e8:	b	4070a8 <main@@Base+0x1f8>
  4074ec:	mov	w1, #0x2f                  	// #47
  4074f0:	bl	406b00 <strrchr@plt>
  4074f4:	str	x0, [x20, #2008]
  4074f8:	cbnz	x0, 407508 <main@@Base+0x658>
  4074fc:	ldr	x0, [x22]
  407500:	str	x0, [x20, #2008]
  407504:	b	4070dc <main@@Base+0x22c>
  407508:	add	x0, x0, #0x1
  40750c:	b	407500 <main@@Base+0x650>
  407510:	add	x0, x29, #0x8a8
  407514:	bl	416c24 <xstrdup@@Base>
  407518:	str	x0, [x20, #1920]
  40751c:	b	407120 <main@@Base+0x270>
  407520:	add	x3, x3, #0x1
  407524:	ldrb	w1, [x3]
  407528:	ldrb	w0, [x3]
  40752c:	ldrh	w1, [x2, x1, lsl #1]
  407530:	tbz	w1, #5, 407520 <main@@Base+0x670>
  407534:	cbz	w0, 407638 <main@@Base+0x788>
  407538:	sub	x28, x3, x7
  40753c:	add	x26, x3, #0x1
  407540:	cmp	x28, #0xd
  407544:	b.ne	40764c <main@@Base+0x79c>  // b.any
  407548:	mov	x0, x7
  40754c:	mov	x2, x28
  407550:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407554:	add	x1, x1, #0x3f7
  407558:	stp	x3, x7, [x29, #112]
  40755c:	bl	4069b0 <strncmp@plt>
  407560:	ldr	x7, [x29, #120]
  407564:	cbnz	w0, 40764c <main@@Base+0x79c>
  407568:	ldr	x3, [x29, #112]
  40756c:	ldrb	w0, [x3, #1]
  407570:	cmp	w0, #0x2d
  407574:	b.ne	407588 <main@@Base+0x6d8>  // b.any
  407578:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40757c:	add	x26, x3, #0x2
  407580:	mov	w1, #0x1                   	// #1
  407584:	str	w1, [x0, #3504]
  407588:	mov	x0, x26
  40758c:	str	x7, [x29, #120]
  407590:	bl	406910 <atoi@plt>
  407594:	mov	w23, w0
  407598:	ldr	x7, [x29, #120]
  40759c:	mov	w8, #0x1                   	// #1
  4075a0:	ldr	x0, [x20, #304]
  4075a4:	mov	x1, x28
  4075a8:	mov	w4, #0x1                   	// #1
  4075ac:	mov	x2, x26
  4075b0:	mov	w3, w4
  4075b4:	mov	x6, #0x0                   	// #0
  4075b8:	ldr	x5, [x0, #8]
  4075bc:	mov	x0, x7
  4075c0:	str	w8, [x29, #120]
  4075c4:	bl	41f978 <define_variable_in_set@@Base>
  4075c8:	mov	x28, x0
  4075cc:	ldr	x0, [x0]
  4075d0:	ldr	x1, [x29, #152]
  4075d4:	cmp	x0, x1
  4075d8:	b.eq	407608 <main@@Base+0x758>  // b.none
  4075dc:	ldrb	w1, [x0]
  4075e0:	ldr	w8, [x29, #120]
  4075e4:	cmp	w1, #0x53
  4075e8:	b.ne	40762c <main@@Base+0x77c>  // b.any
  4075ec:	add	x0, x0, #0x1
  4075f0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4075f4:	add	x1, x1, #0xba
  4075f8:	str	w8, [x29, #120]
  4075fc:	bl	406be0 <strcmp@plt>
  407600:	ldr	w8, [x29, #120]
  407604:	cbnz	w0, 40762c <main@@Base+0x77c>
  407608:	ldr	x0, [x29, #152]
  40760c:	bl	416c24 <xstrdup@@Base>
  407610:	str	x0, [x25]
  407614:	mov	w0, #0x5                   	// #5
  407618:	str	w0, [x25, #40]
  40761c:	mov	x0, x26
  407620:	bl	416c24 <xstrdup@@Base>
  407624:	mov	w8, #0x1                   	// #1
  407628:	str	x0, [x25, #8]
  40762c:	ldrb	w0, [x28, #47]
  407630:	bfi	w0, w8, #5, #2
  407634:	strb	w0, [x28, #47]
  407638:	add	w27, w27, #0x1
  40763c:	b	407230 <main@@Base+0x380>
  407640:	mov	x3, x7
  407644:	add	x2, x19, #0x4
  407648:	b	407524 <main@@Base+0x674>
  40764c:	mov	w8, #0x0                   	// #0
  407650:	b	4075a0 <main@@Base+0x6f0>
  407654:	mov	w0, #0x0                   	// #0
  407658:	b	407448 <main@@Base+0x598>
  40765c:	ldr	x0, [x29, #128]
  407660:	ldr	w0, [x0, #1104]
  407664:	tbz	w0, #0, 40766c <main@@Base+0x7bc>
  407668:	bl	415294 <gmk_add_function@@Base+0x88>
  40766c:	ldrb	w0, [x29, #2216]
  407670:	cbz	w0, 4076b8 <main@@Base+0x808>
  407674:	ldr	x21, [x22]
  407678:	cbz	x21, 4076b8 <main@@Base+0x808>
  40767c:	ldrb	w0, [x21]
  407680:	cmp	w0, #0x2f
  407684:	b.eq	4076b8 <main@@Base+0x808>  // b.none
  407688:	mov	x0, x21
  40768c:	mov	w1, #0x2f                  	// #47
  407690:	bl	406c40 <strchr@plt>
  407694:	cbz	x0, 4076b8 <main@@Base+0x808>
  407698:	mov	x3, x21
  40769c:	add	x1, x29, #0x8a8
  4076a0:	adrp	x2, 423000 <_IO_stdin_used@@Base+0x720>
  4076a4:	add	x2, x2, #0xb38
  4076a8:	mov	w0, #0x3                   	// #3
  4076ac:	bl	416ad4 <concat@@Base>
  4076b0:	bl	416c24 <xstrdup@@Base>
  4076b4:	str	x0, [x22]
  4076b8:	adrp	x27, 441000 <commands_started@@Base+0x1c0>
  4076bc:	add	x0, x29, #0x8a8
  4076c0:	str	x0, [x27, #1984]
  4076c4:	ldr	x0, [x19, #528]
  4076c8:	cbz	x0, 407710 <main@@Base+0x860>
  4076cc:	ldr	w1, [x29, #144]
  4076d0:	cmn	w1, #0x1
  4076d4:	b.ne	407954 <main@@Base+0xaa4>  // b.any
  4076d8:	bl	421b48 <jobserver_parse_auth@@Base>
  4076dc:	cbnz	w0, 407710 <main@@Base+0x860>
  4076e0:	mov	w2, #0x5                   	// #5
  4076e4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4076e8:	mov	x0, #0x0                   	// #0
  4076ec:	add	x1, x1, #0x429
  4076f0:	bl	406d60 <dcgettext@plt>
  4076f4:	mov	x2, x0
  4076f8:	mov	x1, #0x0                   	// #0
  4076fc:	mov	x0, #0x0                   	// #0
  407700:	bl	417aa8 <error@@Base>
  407704:	mov	w0, #0x1                   	// #1
  407708:	str	w0, [x24, #160]
  40770c:	bl	415404 <gmk_add_function@@Base+0x1f8>
  407710:	ldr	x0, [x20, #304]
  407714:	mov	x6, #0x0                   	// #0
  407718:	ldr	x2, [x22]
  40771c:	mov	w4, #0x0                   	// #0
  407720:	ldr	x5, [x0, #8]
  407724:	mov	w3, #0x0                   	// #0
  407728:	mov	x1, #0xc                   	// #12
  40772c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407730:	add	x0, x0, #0x4ad
  407734:	bl	41f978 <define_variable_in_set@@Base>
  407738:	ldr	x0, [x20, #304]
  40773c:	mov	x6, #0x0                   	// #0
  407740:	mov	w4, #0x1                   	// #1
  407744:	mov	w3, #0x0                   	// #0
  407748:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  40774c:	mov	x1, #0x4                   	// #4
  407750:	ldr	x5, [x0, #8]
  407754:	add	x2, x2, #0x4ba
  407758:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40775c:	add	x0, x0, #0x4ca
  407760:	bl	41f978 <define_variable_in_set@@Base>
  407764:	ldr	x21, [x19, #552]
  407768:	cbz	x21, 40786c <main@@Base+0x9bc>
  40776c:	mov	x26, x21
  407770:	mov	x1, #0x0                   	// #0
  407774:	ldr	x3, [x26, #8]
  407778:	str	x1, [x29, #104]
  40777c:	str	x3, [x29, #128]
  407780:	ldr	x0, [x3]
  407784:	bl	406700 <strlen@plt>
  407788:	ldr	x1, [x29, #104]
  40778c:	ldr	x3, [x29, #128]
  407790:	add	x1, x1, x0, lsl #1
  407794:	ldrb	w0, [x3, #44]
  407798:	tbnz	w0, #0, 4077a0 <main@@Base+0x8f0>
  40779c:	add	x1, x1, #0x1
  4077a0:	ldr	x0, [x3, #8]
  4077a4:	str	x1, [x29, #128]
  4077a8:	bl	406700 <strlen@plt>
  4077ac:	ldr	x26, [x26]
  4077b0:	ldr	x1, [x29, #128]
  4077b4:	add	x1, x1, #0x2
  4077b8:	add	x1, x1, x0, lsl #1
  4077bc:	cbnz	x26, 407774 <main@@Base+0x8c4>
  4077c0:	add	x1, x1, #0xf
  4077c4:	mov	w9, #0x3a                  	// #58
  4077c8:	and	x1, x1, #0xfffffffffffffff0
  4077cc:	mov	w8, #0x3d                  	// #61
  4077d0:	sub	sp, sp, x1
  4077d4:	mov	w7, #0x20                  	// #32
  4077d8:	mov	x10, sp
  4077dc:	mov	x0, x10
  4077e0:	ldr	x11, [x21, #8]
  4077e4:	ldr	x1, [x11]
  4077e8:	bl	415238 <gmk_add_function@@Base+0x2c>
  4077ec:	ldrb	w1, [x11, #44]
  4077f0:	tbnz	w1, #0, 4077f8 <main@@Base+0x948>
  4077f4:	strb	w9, [x0], #1
  4077f8:	strb	w8, [x0], #1
  4077fc:	ldr	x1, [x11, #8]
  407800:	bl	415238 <gmk_add_function@@Base+0x2c>
  407804:	mov	x1, x0
  407808:	strb	w7, [x0], #1
  40780c:	ldr	x21, [x21]
  407810:	cbnz	x21, 4077e0 <main@@Base+0x930>
  407814:	strb	wzr, [x1]
  407818:	mov	x2, x10
  40781c:	mov	x6, #0x0                   	// #0
  407820:	mov	w4, #0x0                   	// #0
  407824:	ldr	x0, [x20, #304]
  407828:	mov	w3, #0x6                   	// #6
  40782c:	mov	x1, #0x17                  	// #23
  407830:	ldr	x5, [x0, #8]
  407834:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407838:	add	x0, x0, #0xdb
  40783c:	bl	41f978 <define_variable_in_set@@Base>
  407840:	ldr	x0, [x20, #304]
  407844:	mov	w4, #0x1                   	// #1
  407848:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  40784c:	mov	w3, w4
  407850:	add	x2, x2, #0x4cf
  407854:	mov	x6, #0x0                   	// #0
  407858:	ldr	x5, [x0, #8]
  40785c:	mov	x1, #0xd                   	// #13
  407860:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407864:	add	x0, x0, #0xcd
  407868:	bl	41f978 <define_variable_in_set@@Base>
  40786c:	ldr	x0, [x19, #2224]
  407870:	cbnz	x0, 4079b4 <main@@Base+0xb04>
  407874:	ldr	w0, [x19, #2208]
  407878:	cbz	w0, 4079bc <main@@Base+0xb0c>
  40787c:	ldr	w0, [x19, #2236]
  407880:	cbz	w0, 407888 <main@@Base+0x9d8>
  407884:	str	wzr, [x19, #2232]
  407888:	ldr	w0, [x19, #2240]
  40788c:	cbz	w0, 407898 <main@@Base+0x9e8>
  407890:	mov	w0, #0x1                   	// #1
  407894:	str	w0, [x19, #2244]
  407898:	adrp	x26, 43e000 <expanding_var@@Base+0x328>
  40789c:	add	x19, x26, #0x450
  4078a0:	ldr	x0, [x19, #2248]
  4078a4:	cbz	x0, 4078ac <main@@Base+0x9fc>
  4078a8:	ldr	x0, [x0]
  4078ac:	bl	4199ec <construct_include_path@@Base>
  4078b0:	ldr	x0, [x19, #2224]
  4078b4:	cbz	x0, 4078e0 <main@@Base+0xa30>
  4078b8:	add	x0, x29, #0x8a8
  4078bc:	mov	x1, #0x1000                	// #4096
  4078c0:	bl	4066f0 <getcwd@plt>
  4078c4:	cbnz	x0, 4079dc <main@@Base+0xb2c>
  4078c8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4078cc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4078d0:	add	x1, x1, #0x819
  4078d4:	add	x0, x0, #0x314
  4078d8:	bl	417c10 <perror_with_name@@Base>
  4078dc:	str	xzr, [x27, #1984]
  4078e0:	ldr	x0, [x20, #304]
  4078e4:	add	x2, x29, #0x8a8
  4078e8:	mov	x6, #0x0                   	// #0
  4078ec:	mov	w4, #0x0                   	// #0
  4078f0:	mov	w3, #0x2                   	// #2
  4078f4:	mov	x1, #0x6                   	// #6
  4078f8:	ldr	x5, [x0, #8]
  4078fc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407900:	add	x0, x0, #0x4ea
  407904:	bl	41f978 <define_variable_in_set@@Base>
  407908:	ldr	x0, [x19, #2256]
  40790c:	cbnz	x0, 407bbc <main@@Base+0xd0c>
  407910:	adrp	x1, 413000 <is_bourne_compatible_shell@@Base+0x810>
  407914:	add	x1, x1, #0x74
  407918:	mov	w0, #0x11                  	// #17
  40791c:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407920:	add	x0, x29, #0xa8
  407924:	bl	406990 <sigemptyset@plt>
  407928:	mov	w1, #0x11                  	// #17
  40792c:	add	x0, x29, #0xa8
  407930:	bl	406dd0 <sigaddset@plt>
  407934:	add	x1, x29, #0xa8
  407938:	mov	x2, #0x0                   	// #0
  40793c:	mov	w0, #0x2                   	// #2
  407940:	bl	406760 <sigprocmask@plt>
  407944:	tbz	w0, #31, 407bd0 <main@@Base+0xd20>
  407948:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40794c:	add	x0, x0, #0x55e
  407950:	b	4079b0 <main@@Base+0xb00>
  407954:	cbnz	w23, 40770c <main@@Base+0x85c>
  407958:	mov	w2, #0x5                   	// #5
  40795c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407960:	mov	x0, #0x0                   	// #0
  407964:	add	x1, x1, #0x472
  407968:	bl	406d60 <dcgettext@plt>
  40796c:	mov	x2, x0
  407970:	ldr	w3, [x29, #144]
  407974:	mov	x1, #0x14                  	// #20
  407978:	mov	x0, #0x0                   	// #0
  40797c:	bl	417aa8 <error@@Base>
  407980:	b	40770c <main@@Base+0x85c>
  407984:	add	w1, w1, #0x1
  407988:	ldr	x0, [x19, #2224]
  40798c:	ldr	x0, [x0]
  407990:	ldr	x21, [x0, w1, uxtw #3]
  407994:	cbz	x21, 407874 <main@@Base+0x9c4>
  407998:	mov	x0, x21
  40799c:	str	w1, [x29, #128]
  4079a0:	bl	406c10 <chdir@plt>
  4079a4:	ldr	w1, [x29, #128]
  4079a8:	tbz	w0, #31, 407984 <main@@Base+0xad4>
  4079ac:	mov	x0, x21
  4079b0:	bl	417590 <pfatal_with_name@@Base>
  4079b4:	mov	w1, #0x0                   	// #0
  4079b8:	b	407988 <main@@Base+0xad8>
  4079bc:	ldr	x0, [x19, #2224]
  4079c0:	cbnz	x0, 4079d0 <main@@Base+0xb20>
  4079c4:	ldr	x0, [x29, #152]
  4079c8:	ldr	w0, [x0, #2024]
  4079cc:	cbz	w0, 40787c <main@@Base+0x9cc>
  4079d0:	mov	w0, #0x1                   	// #1
  4079d4:	str	w0, [x19, #2232]
  4079d8:	b	40787c <main@@Base+0x9cc>
  4079dc:	add	x0, x29, #0x8a8
  4079e0:	str	x0, [x27, #1984]
  4079e4:	b	4078e0 <main@@Base+0xa30>
  4079e8:	ldr	x0, [x29, #104]
  4079ec:	bl	406e10 <getenv@plt>
  4079f0:	mov	x21, x0
  4079f4:	cbz	x0, 407a00 <main@@Base+0xb50>
  4079f8:	ldrb	w0, [x0]
  4079fc:	cbnz	w0, 407a08 <main@@Base+0xb58>
  407a00:	adrp	x21, 425000 <_IO_stdin_used@@Base+0x2720>
  407a04:	add	x21, x21, #0x2fd
  407a08:	mov	x0, x21
  407a0c:	bl	406700 <strlen@plt>
  407a10:	add	x0, x0, #0x19
  407a14:	mov	x1, x21
  407a18:	and	x0, x0, #0xfffffffffffffff0
  407a1c:	sub	sp, sp, x0
  407a20:	mov	x27, sp
  407a24:	mov	x0, x27
  407a28:	bl	406cc0 <strcpy@plt>
  407a2c:	mov	x0, x27
  407a30:	bl	406700 <strlen@plt>
  407a34:	add	x0, x27, x0
  407a38:	ldurb	w0, [x0, #-1]
  407a3c:	cmp	w0, #0x2f
  407a40:	b.eq	407a54 <main@@Base+0xba4>  // b.none
  407a44:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  407a48:	mov	x0, x27
  407a4c:	add	x1, x1, #0xb38
  407a50:	bl	4069e0 <strcat@plt>
  407a54:	mov	x0, x27
  407a58:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407a5c:	add	x1, x1, #0x526
  407a60:	bl	4069e0 <strcat@plt>
  407a64:	mov	x1, x27
  407a68:	add	x0, x19, #0x8d8
  407a6c:	bl	416ee0 <get_tmpfile@@Base>
  407a70:	mov	x21, x0
  407a74:	cbnz	x0, 407a8c <main@@Base+0xbdc>
  407a78:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407a7c:	add	x1, x1, #0x52f
  407a80:	mov	w2, #0x5                   	// #5
  407a84:	bl	406d60 <dcgettext@plt>
  407a88:	b	4079b0 <main@@Base+0xb00>
  407a8c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  407a90:	ldr	x0, [x0, #408]
  407a94:	bl	406b70 <feof@plt>
  407a98:	cbz	w0, 407b58 <main@@Base+0xca8>
  407a9c:	mov	x0, x21
  407aa0:	bl	406900 <fclose@plt>
  407aa4:	ldr	x0, [x19, #2256]
  407aa8:	ldr	x21, [x0]
  407aac:	ldr	x0, [x19, #2264]
  407ab0:	bl	41f174 <strcache_add@@Base>
  407ab4:	ldr	x1, [x29, #128]
  407ab8:	str	x0, [x21, x1]
  407abc:	ldr	x0, [x19, #2264]
  407ac0:	bl	41f174 <strcache_add@@Base>
  407ac4:	bl	40bec0 <enter_file@@Base>
  407ac8:	ldr	w1, [x0, #136]
  407acc:	mov	w2, #0xbbf0                	// #48112
  407ad0:	movk	w2, #0xfffe, lsl #16
  407ad4:	and	w1, w1, w2
  407ad8:	mov	w2, #0x40c                 	// #1036
  407adc:	orr	w1, w1, w2
  407ae0:	str	w1, [x0, #136]
  407ae4:	ldr	w0, [x29, #152]
  407ae8:	add	w0, w0, #0x1
  407aec:	str	w0, [x29, #152]
  407af0:	ldr	x0, [x19, #2256]
  407af4:	ldr	w2, [x29, #152]
  407af8:	ldr	w1, [x0, #8]
  407afc:	cmp	w1, w2
  407b00:	b.ls	407910 <main@@Base+0xa60>  // b.plast
  407b04:	ldr	x1, [x29, #152]
  407b08:	ldr	x0, [x0]
  407b0c:	ubfiz	x1, x1, #3, #32
  407b10:	str	x1, [x29, #128]
  407b14:	ldr	x0, [x0, x1]
  407b18:	ldrb	w1, [x0]
  407b1c:	cmp	w1, #0x2d
  407b20:	b.ne	407ae4 <main@@Base+0xc34>  // b.any
  407b24:	ldrb	w0, [x0, #1]
  407b28:	cbnz	w0, 407ae4 <main@@Base+0xc34>
  407b2c:	ldr	x0, [x19, #2264]
  407b30:	cbz	x0, 4079e8 <main@@Base+0xb38>
  407b34:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407b38:	add	x1, x1, #0x4f1
  407b3c:	mov	w2, #0x5                   	// #5
  407b40:	mov	x0, #0x0                   	// #0
  407b44:	bl	406d60 <dcgettext@plt>
  407b48:	mov	x1, #0x0                   	// #0
  407b4c:	mov	x2, x0
  407b50:	mov	x0, #0x0                   	// #0
  407b54:	bl	417d24 <fatal@@Base>
  407b58:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  407b5c:	ldr	x0, [x0, #408]
  407b60:	bl	406ea0 <ferror@plt>
  407b64:	cbnz	w0, 407a9c <main@@Base+0xbec>
  407b68:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  407b6c:	mov	x2, #0x800                 	// #2048
  407b70:	mov	x1, #0x1                   	// #1
  407b74:	ldr	x3, [x0, #408]
  407b78:	add	x0, x29, #0xa8
  407b7c:	bl	406c00 <fread@plt>
  407b80:	mov	x2, x0
  407b84:	cbz	x0, 407a8c <main@@Base+0xbdc>
  407b88:	mov	x3, x21
  407b8c:	add	x0, x29, #0xa8
  407b90:	mov	x1, #0x1                   	// #1
  407b94:	str	x2, [x29, #96]
  407b98:	bl	406c70 <fwrite@plt>
  407b9c:	ldr	x2, [x29, #96]
  407ba0:	cmp	x0, x2
  407ba4:	b.eq	407a8c <main@@Base+0xbdc>  // b.none
  407ba8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407bac:	mov	w2, #0x5                   	// #5
  407bb0:	add	x1, x1, #0x546
  407bb4:	mov	x0, #0x0                   	// #0
  407bb8:	b	407a84 <main@@Base+0xbd4>
  407bbc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407bc0:	add	x0, x0, #0x51f
  407bc4:	str	x0, [x29, #104]
  407bc8:	str	wzr, [x29, #152]
  407bcc:	b	407af0 <main@@Base+0xc40>
  407bd0:	adrp	x1, 415000 <load_file@@Base+0x388>
  407bd4:	add	x1, x1, #0x220
  407bd8:	mov	w0, #0xa                   	// #10
  407bdc:	bl	4153a8 <gmk_add_function@@Base+0x19c>
  407be0:	adrp	x27, 424000 <_IO_stdin_used@@Base+0x1720>
  407be4:	add	x27, x27, #0x819
  407be8:	bl	40a264 <set_default_suffixes@@Base>
  407bec:	bl	40a35c <install_default_suffix_rules@@Base>
  407bf0:	bl	42014c <define_automatic_variables@@Base>
  407bf4:	mov	w1, #0x0                   	// #0
  407bf8:	mov	w0, #0x0                   	// #0
  407bfc:	bl	4154e0 <gmk_add_function@@Base+0x2d4>
  407c00:	ldrb	w1, [x0, #47]
  407c04:	and	w1, w1, #0xffffff9f
  407c08:	strb	w1, [x0, #47]
  407c0c:	bl	40a460 <define_default_variables@@Base>
  407c10:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407c14:	add	x0, x0, #0x580
  407c18:	bl	41f174 <strcache_add@@Base>
  407c1c:	bl	40bec0 <enter_file@@Base>
  407c20:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407c24:	mov	x2, x27
  407c28:	mov	x6, #0x0                   	// #0
  407c2c:	mov	w4, #0x0                   	// #0
  407c30:	str	x0, [x1, #2032]
  407c34:	mov	w3, #0x2                   	// #2
  407c38:	ldr	x0, [x20, #304]
  407c3c:	mov	x1, #0xd                   	// #13
  407c40:	ldr	x5, [x0, #8]
  407c44:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407c48:	add	x0, x0, #0x589
  407c4c:	bl	41f978 <define_variable_in_set@@Base>
  407c50:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407c54:	str	x1, [x29, #104]
  407c58:	str	x0, [x1, #2016]
  407c5c:	ldr	x0, [x19, #536]
  407c60:	cbz	x0, 407cdc <main@@Base+0xe2c>
  407c64:	ldr	w21, [x0, #8]
  407c68:	mov	w2, #0x0                   	// #0
  407c6c:	lsl	x21, x21, #3
  407c70:	ldr	x0, [x19, #536]
  407c74:	ldr	w1, [x0, #8]
  407c78:	cmp	w1, w2
  407c7c:	b.hi	407f58 <main@@Base+0x10a8>  // b.pmore
  407c80:	add	x21, x21, #0xf
  407c84:	adrp	x4, 425000 <_IO_stdin_used@@Base+0x2720>
  407c88:	and	x21, x21, #0xfffffffffffffff0
  407c8c:	add	x4, x4, #0x597
  407c90:	sub	sp, sp, x21
  407c94:	mov	w5, #0x20                  	// #32
  407c98:	mov	x2, sp
  407c9c:	mov	w21, #0x0                   	// #0
  407ca0:	mov	x3, x2
  407ca4:	ldr	x0, [x19, #536]
  407ca8:	ldr	w0, [x0, #8]
  407cac:	cmp	w0, w21
  407cb0:	b.hi	407f9c <main@@Base+0x10ec>  // b.pmore
  407cb4:	sturb	wzr, [x3, #-1]
  407cb8:	mov	x6, #0x0                   	// #0
  407cbc:	mov	w4, #0x0                   	// #0
  407cc0:	mov	w3, #0x6                   	// #6
  407cc4:	ldr	x0, [x20, #304]
  407cc8:	mov	x1, #0x10                  	// #16
  407ccc:	ldr	x5, [x0, #8]
  407cd0:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407cd4:	add	x0, x0, #0x59f
  407cd8:	bl	41f978 <define_variable_in_set@@Base>
  407cdc:	ldr	x0, [x19, #2256]
  407ce0:	cbz	x0, 407ce8 <main@@Base+0xe38>
  407ce4:	ldr	x0, [x0]
  407ce8:	bl	41baa0 <read_all_makefiles@@Base>
  407cec:	ldr	w7, [x24, #160]
  407cf0:	mov	x21, x0
  407cf4:	ldr	w0, [x19, #2244]
  407cf8:	mov	x1, #0xc                   	// #12
  407cfc:	str	w0, [x29, #152]
  407d00:	ldr	w0, [x19, #2240]
  407d04:	str	w0, [x29, #128]
  407d08:	mov	w0, #0xffffffff            	// #-1
  407d0c:	str	w0, [x24, #160]
  407d10:	mov	x0, x28
  407d14:	str	w7, [x29, #96]
  407d18:	bl	416730 <die@@Base+0x998>
  407d1c:	ldr	x0, [x20, #304]
  407d20:	mov	x2, x27
  407d24:	mov	x6, #0x0                   	// #0
  407d28:	mov	w4, #0x0                   	// #0
  407d2c:	mov	w3, #0x5                   	// #5
  407d30:	mov	x1, #0xc                   	// #12
  407d34:	ldr	x5, [x0, #8]
  407d38:	mov	x0, x28
  407d3c:	bl	41f978 <define_variable_in_set@@Base>
  407d40:	ldr	x0, [x29, #120]
  407d44:	mov	x1, #0x9                   	// #9
  407d48:	bl	416730 <die@@Base+0x998>
  407d4c:	ldr	w0, [x24, #160]
  407d50:	ldr	w7, [x29, #96]
  407d54:	cmn	w0, #0x1
  407d58:	b.eq	407d68 <main@@Base+0xeb8>  // b.none
  407d5c:	ldr	w0, [x29, #144]
  407d60:	cmn	w0, #0x1
  407d64:	b.eq	407fe8 <main@@Base+0x1138>  // b.none
  407d68:	str	w7, [x24, #160]
  407d6c:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  407d70:	add	x20, x20, #0x7f8
  407d74:	ldr	w28, [x19, #2200]
  407d78:	ldrb	w0, [x20, #8]
  407d7c:	sub	w28, w28, #0x1
  407d80:	cmp	w28, #0x1
  407d84:	cset	w1, ls  // ls = plast
  407d88:	tbz	w0, #0, 407da4 <main@@Base+0xef4>
  407d8c:	cmp	w28, #0x1
  407d90:	b.ls	407da4 <main@@Base+0xef4>  // b.plast
  407d94:	mov	x0, x20
  407d98:	str	w1, [x29, #144]
  407d9c:	bl	41752c <output_close@@Base>
  407da0:	ldr	w1, [x29, #144]
  407da4:	ldrb	w0, [x20, #8]
  407da8:	bfxil	w0, w1, #0, #1
  407dac:	strb	w0, [x20, #8]
  407db0:	tst	x0, #0x1
  407db4:	ldr	x0, [x29, #112]
  407db8:	csel	x7, xzr, x20, eq  // eq = none
  407dbc:	str	x7, [x0, #3512]
  407dc0:	ldr	w0, [x19, #2244]
  407dc4:	cbz	w0, 407e20 <main@@Base+0xf70>
  407dc8:	ldr	w0, [x29, #152]
  407dcc:	cbnz	w0, 407e20 <main@@Base+0xf70>
  407dd0:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407dd4:	ldr	x0, [x1, #2208]
  407dd8:	ldrb	w2, [x0, #136]
  407ddc:	tbz	w2, #4, 407df4 <main@@Base+0xf44>
  407de0:	ldr	x0, [x0, #24]
  407de4:	bl	416eb0 <free_ns_chain@@Base>
  407de8:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407dec:	ldr	x0, [x1, #2208]
  407df0:	str	xzr, [x0, #24]
  407df4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  407df8:	mov	x2, x27
  407dfc:	mov	x6, #0x0                   	// #0
  407e00:	mov	w4, #0x0                   	// #0
  407e04:	ldr	x0, [x0, #304]
  407e08:	mov	w3, #0x0                   	// #0
  407e0c:	mov	x1, #0x8                   	// #8
  407e10:	ldr	x5, [x0, #8]
  407e14:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  407e18:	add	x0, x0, #0xa9b
  407e1c:	bl	41f978 <define_variable_in_set@@Base>
  407e20:	ldr	w0, [x19, #2240]
  407e24:	cbz	w0, 407e34 <main@@Base+0xf84>
  407e28:	ldr	w0, [x29, #128]
  407e2c:	cbnz	w0, 407e34 <main@@Base+0xf84>
  407e30:	bl	40a4dc <undefine_default_variables@@Base>
  407e34:	ldr	x0, [x19, #528]
  407e38:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407e3c:	cbz	x0, 408024 <main@@Base+0x1174>
  407e40:	str	wzr, [x1, #2200]
  407e44:	ldr	w0, [x1, #2200]
  407e48:	cmp	w0, #0x1
  407e4c:	b.ls	408038 <main@@Base+0x1188>  // b.plast
  407e50:	sub	w0, w0, #0x1
  407e54:	bl	42210c <jobserver_setup@@Base>
  407e58:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407e5c:	cbz	w0, 408038 <main@@Base+0x1188>
  407e60:	bl	421c6c <jobserver_get_auth@@Base>
  407e64:	str	x0, [x19, #528]
  407e68:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  407e6c:	cbz	x0, 408038 <main@@Base+0x1188>
  407e70:	ldr	w0, [x1, #2200]
  407e74:	str	wzr, [x1, #2200]
  407e78:	str	w0, [x19, #576]
  407e7c:	mov	w1, #0x0                   	// #0
  407e80:	mov	w0, #0x1                   	// #1
  407e84:	bl	4154e0 <gmk_add_function@@Base+0x2d4>
  407e88:	bl	40cb30 <snap_deps@@Base>
  407e8c:	bl	41ea38 <convert_to_pattern@@Base>
  407e90:	bl	40a3f0 <install_default_implicit_rules@@Base>
  407e94:	bl	41e4e4 <snap_implicit_rules@@Base>
  407e98:	bl	421700 <build_vpath_lists@@Base>
  407e9c:	ldr	x0, [x19, #2272]
  407ea0:	cbnz	x0, 408064 <main@@Base+0x11b4>
  407ea4:	cbz	w23, 40809c <main@@Base+0x11ec>
  407ea8:	bl	42227c <remote_setup@@Base>
  407eac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  407eb0:	str	xzr, [x0, #3512]
  407eb4:	mov	x0, x20
  407eb8:	bl	41752c <output_close@@Base>
  407ebc:	cbnz	x21, 4080c4 <main@@Base+0x1214>
  407ec0:	mov	w1, #0x0                   	// #0
  407ec4:	mov	w0, #0x1                   	// #1
  407ec8:	bl	4154e0 <gmk_add_function@@Base+0x2d4>
  407ecc:	ldr	w0, [x19, #2212]
  407ed0:	str	w0, [x19, #2216]
  407ed4:	cbnz	w23, 4085d8 <main@@Base+0x1728>
  407ed8:	ldr	x0, [x19, #2264]
  407edc:	cbnz	x0, 408600 <main@@Base+0x1750>
  407ee0:	ldr	x0, [x19, #560]
  407ee4:	cbnz	x0, 408718 <main@@Base+0x1868>
  407ee8:	ldr	x0, [x29, #104]
  407eec:	ldr	x0, [x0, #2016]
  407ef0:	ldr	x20, [x0, #8]
  407ef4:	ldrb	w0, [x0, #44]
  407ef8:	tbz	w0, #0, 408638 <main@@Base+0x1788>
  407efc:	mov	x0, x20
  407f00:	bl	40ba98 <variable_expand@@Base>
  407f04:	str	x0, [x29, #168]
  407f08:	ldr	x0, [x29, #168]
  407f0c:	ldrb	w1, [x0]
  407f10:	cbz	w1, 408690 <main@@Base+0x17e0>
  407f14:	bl	40be54 <lookup_file@@Base>
  407f18:	mov	x20, x0
  407f1c:	cbnz	x0, 408680 <main@@Base+0x17d0>
  407f20:	add	x0, x29, #0xa8
  407f24:	mov	w4, #0x0                   	// #0
  407f28:	mov	x3, #0x0                   	// #0
  407f2c:	mov	w2, #0x1                   	// #1
  407f30:	mov	x1, #0x10                  	// #16
  407f34:	bl	419c0c <parse_file_seq@@Base>
  407f38:	mov	x21, x0
  407f3c:	cbz	x0, 408690 <main@@Base+0x17e0>
  407f40:	ldr	x0, [x0]
  407f44:	cbz	x0, 408660 <main@@Base+0x17b0>
  407f48:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407f4c:	mov	w2, #0x5                   	// #5
  407f50:	add	x1, x1, #0x726
  407f54:	b	407b40 <main@@Base+0xc90>
  407f58:	ldr	x0, [x0]
  407f5c:	str	w2, [x29, #128]
  407f60:	ldr	x0, [x0, w2, uxtw #3]
  407f64:	bl	416c24 <xstrdup@@Base>
  407f68:	str	x0, [x29, #152]
  407f6c:	bl	406700 <strlen@plt>
  407f70:	add	x21, x21, x0, lsl #1
  407f74:	ldr	x3, [x29, #152]
  407f78:	mov	x1, #0x0                   	// #0
  407f7c:	mov	x0, x3
  407f80:	bl	41bcbc <eval_buffer@@Base>
  407f84:	ldr	x3, [x29, #152]
  407f88:	mov	x0, x3
  407f8c:	bl	406c20 <free@plt>
  407f90:	ldr	w2, [x29, #128]
  407f94:	add	w2, w2, #0x1
  407f98:	b	407c70 <main@@Base+0xdc0>
  407f9c:	mov	x1, x4
  407fa0:	mov	x0, x3
  407fa4:	str	w5, [x29, #128]
  407fa8:	str	x2, [x29, #152]
  407fac:	bl	406cc0 <strcpy@plt>
  407fb0:	mov	x3, x0
  407fb4:	ldr	x0, [x19, #536]
  407fb8:	ldr	x0, [x0]
  407fbc:	ldr	x1, [x0, w21, uxtw #3]
  407fc0:	add	x0, x3, #0x7
  407fc4:	add	w21, w21, #0x1
  407fc8:	bl	415238 <gmk_add_function@@Base+0x2c>
  407fcc:	mov	x3, x0
  407fd0:	ldr	w5, [x29, #128]
  407fd4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  407fd8:	add	x4, x0, #0x597
  407fdc:	strb	w5, [x3], #1
  407fe0:	ldr	x2, [x29, #152]
  407fe4:	b	407ca4 <main@@Base+0xdf4>
  407fe8:	ldr	x0, [x19, #528]
  407fec:	cbz	x0, 407d6c <main@@Base+0xebc>
  407ff0:	cbnz	w23, 40801c <main@@Base+0x116c>
  407ff4:	mov	w2, #0x5                   	// #5
  407ff8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  407ffc:	mov	x0, #0x0                   	// #0
  408000:	add	x1, x1, #0x5b0
  408004:	bl	406d60 <dcgettext@plt>
  408008:	mov	x2, x0
  40800c:	ldr	w3, [x24, #160]
  408010:	mov	x1, #0x14                  	// #20
  408014:	mov	x0, #0x0                   	// #0
  408018:	bl	417aa8 <error@@Base>
  40801c:	bl	415404 <gmk_add_function@@Base+0x1f8>
  408020:	b	407d6c <main@@Base+0xebc>
  408024:	ldr	w0, [x24, #160]
  408028:	cmn	w0, #0x1
  40802c:	csinc	w0, w0, wzr, ne  // ne = any
  408030:	str	w0, [x1, #2200]
  408034:	b	407e44 <main@@Base+0xf94>
  408038:	cmp	w28, #0x1
  40803c:	b.hi	407e7c <main@@Base+0xfcc>  // b.pmore
  408040:	ldr	w0, [x1, #2200]
  408044:	cmp	w0, #0x1
  408048:	b.ne	407e7c <main@@Base+0xfcc>  // b.any
  40804c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  408050:	str	xzr, [x0, #3512]
  408054:	mov	x0, x20
  408058:	bl	41752c <output_close@@Base>
  40805c:	str	wzr, [x19, #2200]
  408060:	b	407e7c <main@@Base+0xfcc>
  408064:	ldr	x24, [x0]
  408068:	mov	x28, #0x2                   	// #2
  40806c:	ldr	x0, [x24]
  408070:	cbz	x0, 407ea4 <main@@Base+0xff4>
  408074:	bl	40bec0 <enter_file@@Base>
  408078:	ldrh	w1, [x0, #136]
  40807c:	mov	w2, #0xfffffbf0            	// #-1040
  408080:	mov	w3, #0x40c                 	// #1036
  408084:	and	w1, w1, w2
  408088:	add	x24, x24, #0x8
  40808c:	orr	w1, w1, w3
  408090:	stp	x28, x28, [x0, #112]
  408094:	strh	w1, [x0, #136]
  408098:	b	40806c <main@@Base+0x11bc>
  40809c:	ldr	x0, [x19, #2280]
  4080a0:	cbz	x0, 407ea8 <main@@Base+0xff8>
  4080a4:	ldr	x24, [x0]
  4080a8:	mov	x28, #0xffffffffffffffff    	// #-1
  4080ac:	ldr	x0, [x24]
  4080b0:	cbz	x0, 407ea8 <main@@Base+0xff8>
  4080b4:	bl	40bec0 <enter_file@@Base>
  4080b8:	add	x24, x24, #0x8
  4080bc:	stp	x28, x28, [x0, #112]
  4080c0:	b	4080ac <main@@Base+0x11fc>
  4080c4:	ldr	w0, [x26, #1104]
  4080c8:	tbz	w0, #0, 4080f0 <main@@Base+0x1240>
  4080cc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4080d0:	add	x1, x1, #0x5ec
  4080d4:	mov	w2, #0x5                   	// #5
  4080d8:	mov	x0, #0x0                   	// #0
  4080dc:	bl	406d60 <dcgettext@plt>
  4080e0:	bl	406df0 <printf@plt>
  4080e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4080e8:	ldr	x0, [x0, #400]
  4080ec:	bl	406cb0 <fflush@plt>
  4080f0:	mov	x4, x21
  4080f4:	mov	w0, #0x0                   	// #0
  4080f8:	ldr	x4, [x4]
  4080fc:	add	w0, w0, #0x1
  408100:	cbnz	x4, 4080f8 <main@@Base+0x1248>
  408104:	ubfiz	x0, x0, #3, #32
  408108:	adrp	x24, 425000 <_IO_stdin_used@@Base+0x2720>
  40810c:	add	x0, x0, #0xf
  408110:	mov	x3, x21
  408114:	and	x0, x0, #0xffffffff0
  408118:	add	x24, x24, #0x604
  40811c:	sub	sp, sp, x0
  408120:	mov	w20, #0x0                   	// #0
  408124:	mov	x28, sp
  408128:	ldr	x0, [x3, #16]
  40812c:	ldr	x5, [x0, #104]
  408130:	cbnz	x5, 408164 <main@@Base+0x12b4>
  408134:	ldr	x1, [x0, #112]
  408138:	cbnz	x1, 408150 <main@@Base+0x12a0>
  40813c:	mov	w1, #0x0                   	// #0
  408140:	str	x3, [x29, #152]
  408144:	bl	41c170 <f_mtime@@Base>
  408148:	mov	x1, x0
  40814c:	ldr	x3, [x29, #152]
  408150:	mov	x4, x3
  408154:	str	x1, [x28, w20, uxtw #3]
  408158:	add	w20, w20, #0x1
  40815c:	ldr	x3, [x3]
  408160:	b	4087d4 <main@@Base+0x1924>
  408164:	ldr	x1, [x5, #24]
  408168:	cbnz	x1, 408174 <main@@Base+0x12c4>
  40816c:	ldr	x1, [x5, #32]
  408170:	cbnz	x1, 408770 <main@@Base+0x18c0>
  408174:	ldr	x5, [x5, #56]
  408178:	b	408130 <main@@Base+0x1280>
  40817c:	mov	x21, x0
  408180:	b	4087bc <main@@Base+0x190c>
  408184:	mov	x3, x21
  408188:	b	4087d4 <main@@Base+0x1924>
  40818c:	ldr	x0, [x21, #16]
  408190:	ldrb	w1, [x0, #137]
  408194:	tbz	w1, #2, 40826c <main@@Base+0x13bc>
  408198:	ldrb	w1, [x0, #136]
  40819c:	tst	x1, #0x3
  4081a0:	b.ne	4081e4 <main@@Base+0x1334>  // b.any
  4081a4:	ldr	x1, [x0, #112]
  4081a8:	cbnz	x1, 4081b4 <main@@Base+0x1304>
  4081ac:	bl	41c170 <f_mtime@@Base>
  4081b0:	mov	x1, x0
  4081b4:	ldr	x0, [x28, w24, uxtw #3]
  4081b8:	cmp	x0, x1
  4081bc:	cset	w0, ne  // ne = any
  4081c0:	orr	w20, w20, w0
  4081c4:	ldr	x21, [x21]
  4081c8:	add	w24, w24, #0x1
  4081cc:	cbnz	x21, 40818c <main@@Base+0x12dc>
  4081d0:	cbnz	w20, 40830c <main@@Base+0x145c>
  4081d4:	ldr	w0, [x29, #144]
  4081d8:	cbz	w0, 4085d0 <main@@Base+0x1720>
  4081dc:	mov	w0, #0x2                   	// #2
  4081e0:	b	407478 <main@@Base+0x5c8>
  4081e4:	ldrb	w1, [x21, #32]
  4081e8:	tbnz	w1, #2, 4081c4 <main@@Base+0x1314>
  4081ec:	ldr	x0, [x0]
  4081f0:	bl	406700 <strlen@plt>
  4081f4:	mov	x4, x0
  4081f8:	mov	w2, #0x5                   	// #5
  4081fc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408200:	mov	x0, #0x0                   	// #0
  408204:	add	x1, x1, #0x630
  408208:	str	x4, [x29, #152]
  40820c:	bl	406d60 <dcgettext@plt>
  408210:	ldr	x1, [x21, #16]
  408214:	mov	x2, x0
  408218:	ldr	x4, [x29, #152]
  40821c:	mov	x0, #0x0                   	// #0
  408220:	ldr	x3, [x1]
  408224:	mov	x1, x4
  408228:	bl	417aa8 <error@@Base>
  40822c:	ldr	x0, [x21, #16]
  408230:	ldr	x1, [x0, #112]
  408234:	cbnz	x1, 408240 <main@@Base+0x1390>
  408238:	bl	41c170 <f_mtime@@Base>
  40823c:	mov	x1, x0
  408240:	cmp	x1, #0x1
  408244:	b.eq	408264 <main@@Base+0x13b4>  // b.none
  408248:	ldr	x0, [x28, w24, uxtw #3]
  40824c:	cmp	x0, x1
  408250:	cset	w0, ne  // ne = any
  408254:	orr	w20, w20, w0
  408258:	mov	w0, #0x2                   	// #2
  40825c:	str	w0, [x29, #152]
  408260:	b	4081c4 <main@@Base+0x1314>
  408264:	mov	w0, #0x0                   	// #0
  408268:	b	408254 <main@@Base+0x13a4>
  40826c:	ldrb	w1, [x21, #32]
  408270:	tbnz	w1, #2, 4081c4 <main@@Base+0x1314>
  408274:	ldr	x3, [x21, #8]
  408278:	cbnz	x3, 408280 <main@@Base+0x13d0>
  40827c:	ldr	x3, [x0]
  408280:	mov	x0, x3
  408284:	str	w1, [x29, #96]
  408288:	str	x3, [x29, #112]
  40828c:	bl	406700 <strlen@plt>
  408290:	ldr	w1, [x29, #96]
  408294:	mov	x4, x0
  408298:	ldr	x3, [x29, #112]
  40829c:	tbz	w1, #1, 4082d0 <main@@Base+0x1420>
  4082a0:	ldr	x1, [x29, #120]
  4082a4:	mov	w2, #0x5                   	// #5
  4082a8:	mov	x0, #0x0                   	// #0
  4082ac:	str	x4, [x29, #96]
  4082b0:	bl	406d60 <dcgettext@plt>
  4082b4:	mov	x2, x0
  4082b8:	ldr	x4, [x29, #96]
  4082bc:	mov	x0, #0x0                   	// #0
  4082c0:	ldr	x3, [x29, #112]
  4082c4:	mov	x1, x4
  4082c8:	bl	417aa8 <error@@Base>
  4082cc:	b	4081c4 <main@@Base+0x1314>
  4082d0:	ldr	x1, [x29, #128]
  4082d4:	mov	w2, #0x5                   	// #5
  4082d8:	mov	x0, #0x0                   	// #0
  4082dc:	str	x4, [x29, #112]
  4082e0:	str	x3, [x29, #144]
  4082e4:	bl	406d60 <dcgettext@plt>
  4082e8:	mov	x2, x0
  4082ec:	ldr	x4, [x29, #112]
  4082f0:	mov	x0, #0x0                   	// #0
  4082f4:	ldr	x3, [x29, #144]
  4082f8:	mov	x1, x4
  4082fc:	bl	417aa8 <error@@Base>
  408300:	mov	w0, #0x1                   	// #1
  408304:	str	w0, [x29, #144]
  408308:	b	4081c4 <main@@Base+0x1314>
  40830c:	mov	w0, #0x0                   	// #0
  408310:	bl	40c390 <remove_intermediates@@Base>
  408314:	ldr	w0, [x19, #516]
  408318:	cbz	w0, 408320 <main@@Base+0x1470>
  40831c:	bl	415434 <gmk_add_function@@Base+0x228>
  408320:	mov	w0, #0x0                   	// #0
  408324:	bl	415ce8 <gmk_add_function@@Base+0xadc>
  408328:	ldr	x0, [x19, #2256]
  40832c:	cbnz	x0, 4083e4 <main@@Base+0x1534>
  408330:	ldr	x0, [x19, #2264]
  408334:	cbnz	x0, 4083f4 <main@@Base+0x1544>
  408338:	ldr	x0, [x19, #2224]
  40833c:	cbz	x0, 408448 <main@@Base+0x1598>
  408340:	ldr	w0, [x0, #8]
  408344:	cbz	w0, 408448 <main@@Base+0x1598>
  408348:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40834c:	ldr	x0, [x0, #1920]
  408350:	cbz	x0, 40836c <main@@Base+0x14bc>
  408354:	bl	406c10 <chdir@plt>
  408358:	tbz	w0, #31, 408448 <main@@Base+0x1598>
  40835c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  408360:	mov	x1, x27
  408364:	add	x0, x0, #0x695
  408368:	bl	417c10 <perror_with_name@@Base>
  40836c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408370:	mov	w2, #0x5                   	// #5
  408374:	add	x1, x1, #0x69b
  408378:	b	407b40 <main@@Base+0xc90>
  40837c:	ldr	x28, [x22, w20, sxtw #3]
  408380:	add	x24, x22, w20, sxtw #3
  408384:	mov	x1, x21
  408388:	mov	x2, #0x2                   	// #2
  40838c:	mov	x0, x28
  408390:	bl	4069b0 <strncmp@plt>
  408394:	cbnz	w0, 4083b8 <main@@Base+0x1508>
  408398:	ldr	x0, [x19, #2256]
  40839c:	ldr	x0, [x0]
  4083a0:	ldr	x2, [x0, w25, sxtw #3]
  4083a4:	ldrb	w0, [x28, #2]
  4083a8:	cbnz	w0, 4083cc <main@@Base+0x151c>
  4083ac:	add	w20, w20, #0x1
  4083b0:	str	x2, [x24, #8]
  4083b4:	add	w25, w25, #0x1
  4083b8:	add	w20, w20, #0x1
  4083bc:	ldr	w0, [x29, #140]
  4083c0:	cmp	w20, w0
  4083c4:	b.lt	40837c <main@@Base+0x14cc>  // b.tstop
  4083c8:	b	408330 <main@@Base+0x1480>
  4083cc:	mov	x1, x21
  4083d0:	mov	w0, #0x2                   	// #2
  4083d4:	bl	416ad4 <concat@@Base>
  4083d8:	bl	416c24 <xstrdup@@Base>
  4083dc:	str	x0, [x24]
  4083e0:	b	4083b4 <main@@Base+0x1504>
  4083e4:	adrp	x21, 422000 <fd_inherit@@Base+0x20>
  4083e8:	mov	w20, #0x1                   	// #1
  4083ec:	add	x21, x21, #0xc11
  4083f0:	b	4083bc <main@@Base+0x150c>
  4083f4:	ldr	w0, [x29, #140]
  4083f8:	add	w20, w0, #0x2
  4083fc:	sbfiz	x20, x20, #3, #32
  408400:	sub	x24, x20, #0x10
  408404:	mov	x0, x20
  408408:	bl	416a54 <xmalloc@@Base>
  40840c:	mov	x21, x0
  408410:	mov	x1, x22
  408414:	mov	x2, x24
  408418:	bl	4066c0 <memcpy@plt>
  40841c:	add	x20, x21, x20
  408420:	ldr	x2, [x19, #2264]
  408424:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408428:	add	x1, x1, #0x692
  40842c:	mov	w0, #0x2                   	// #2
  408430:	mov	x22, x21
  408434:	bl	416ad4 <concat@@Base>
  408438:	bl	416c24 <xstrdup@@Base>
  40843c:	str	x0, [x21, x24]
  408440:	stur	xzr, [x20, #-8]
  408444:	b	408338 <main@@Base+0x1488>
  408448:	ldr	w0, [x26, #1104]
  40844c:	add	w23, w23, #0x1
  408450:	tbz	w0, #0, 408498 <main@@Base+0x15e8>
  408454:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x1720>
  408458:	mov	x19, x22
  40845c:	add	x20, x20, #0xe5b
  408460:	mov	w2, #0x5                   	// #5
  408464:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408468:	mov	x0, #0x0                   	// #0
  40846c:	add	x1, x1, #0x6c7
  408470:	bl	406d60 <dcgettext@plt>
  408474:	mov	w1, w23
  408478:	bl	406df0 <printf@plt>
  40847c:	ldr	x1, [x19]
  408480:	cbnz	x1, 408524 <main@@Base+0x1674>
  408484:	mov	w0, #0xa                   	// #10
  408488:	bl	406e20 <putchar@plt>
  40848c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  408490:	ldr	x0, [x0, #400]
  408494:	bl	406cb0 <fflush@plt>
  408498:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40849c:	adrp	x24, 425000 <_IO_stdin_used@@Base+0x2720>
  4084a0:	adrp	x25, 425000 <_IO_stdin_used@@Base+0x2720>
  4084a4:	add	x24, x24, #0x6d9
  4084a8:	ldr	x19, [x20, #416]
  4084ac:	add	x25, x25, #0x6ea
  4084b0:	ldr	x21, [x19]
  4084b4:	cbnz	x21, 408534 <main@@Base+0x1684>
  4084b8:	cbz	w23, 4084f8 <main@@Base+0x1648>
  4084bc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4084c0:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  4084c4:	add	x2, x2, #0xf1
  4084c8:	sub	sp, sp, #0x30
  4084cc:	ldr	w0, [x0, #3504]
  4084d0:	mov	w3, w23
  4084d4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4084d8:	add	x1, x1, #0x6f9
  4084dc:	cmp	w0, #0x0
  4084e0:	mov	x19, sp
  4084e4:	csel	x2, x2, x27, ne  // ne = any
  4084e8:	mov	x0, x19
  4084ec:	bl	4067a0 <sprintf@plt>
  4084f0:	mov	x0, x19
  4084f4:	bl	406aa0 <putenv@plt>
  4084f8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4084fc:	ldr	x0, [x0, #400]
  408500:	bl	406cb0 <fflush@plt>
  408504:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  408508:	ldr	x0, [x0, #376]
  40850c:	bl	406cb0 <fflush@plt>
  408510:	mov	w0, #0x1                   	// #1
  408514:	bl	422054 <jobserver_pre_child@@Base>
  408518:	ldr	x1, [x20, #416]
  40851c:	mov	x0, x22
  408520:	bl	4133d8 <exec_command@@Base>
  408524:	mov	x0, x20
  408528:	add	x19, x19, #0x8
  40852c:	bl	406df0 <printf@plt>
  408530:	b	40847c <main@@Base+0x15cc>
  408534:	mov	x1, x24
  408538:	mov	x0, x21
  40853c:	mov	x2, #0xa                   	// #10
  408540:	bl	4069b0 <strncmp@plt>
  408544:	cbnz	w0, 408578 <main@@Base+0x16c8>
  408548:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  40854c:	sub	sp, sp, #0x30
  408550:	mov	x0, sp
  408554:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  408558:	ldr	w3, [x1, #2024]
  40855c:	add	x2, x2, #0x41f
  408560:	str	x0, [x19]
  408564:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408568:	add	x1, x1, #0x6e4
  40856c:	bl	4067a0 <sprintf@plt>
  408570:	add	x19, x19, #0x8
  408574:	b	4084b0 <main@@Base+0x1600>
  408578:	mov	x1, x25
  40857c:	mov	x0, x21
  408580:	mov	x2, #0xe                   	// #14
  408584:	bl	4069b0 <strncmp@plt>
  408588:	cbnz	w0, 408570 <main@@Base+0x16c0>
  40858c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  408590:	sub	sp, sp, #0x30
  408594:	mov	x0, sp
  408598:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  40859c:	ldr	w3, [x1, #3504]
  4085a0:	add	x2, x2, #0xf1
  4085a4:	str	x0, [x19]
  4085a8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4085ac:	cmp	w3, #0x0
  4085b0:	add	x1, x1, #0x819
  4085b4:	mov	w3, w23
  4085b8:	csel	x2, x2, x1, ne  // ne = any
  4085bc:	mov	w23, #0x0                   	// #0
  4085c0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4085c4:	add	x1, x1, #0x6f9
  4085c8:	bl	4067a0 <sprintf@plt>
  4085cc:	b	408570 <main@@Base+0x16c0>
  4085d0:	ldr	w25, [x29, #152]
  4085d4:	b	407ec0 <main@@Base+0x1010>
  4085d8:	ldr	x0, [x19, #2280]
  4085dc:	cbz	x0, 407ed8 <main@@Base+0x1028>
  4085e0:	ldr	x20, [x0]
  4085e4:	mov	x21, #0xffffffffffffffff    	// #-1
  4085e8:	ldr	x0, [x20]
  4085ec:	cbz	x0, 407ed8 <main@@Base+0x1028>
  4085f0:	bl	40bec0 <enter_file@@Base>
  4085f4:	add	x20, x20, #0x8
  4085f8:	stp	x21, x21, [x0, #112]
  4085fc:	b	4085e8 <main@@Base+0x1738>
  408600:	bl	406e50 <unlink@plt>
  408604:	tbz	w0, #31, 407ee0 <main@@Base+0x1030>
  408608:	bl	406e00 <__errno_location@plt>
  40860c:	ldr	w0, [x0]
  408610:	cmp	w0, #0x2
  408614:	b.eq	407ee0 <main@@Base+0x1030>  // b.none
  408618:	mov	w2, #0x5                   	// #5
  40861c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  408620:	mov	x0, #0x0                   	// #0
  408624:	add	x1, x1, #0x70c
  408628:	bl	406d60 <dcgettext@plt>
  40862c:	ldr	x1, [x19, #2264]
  408630:	bl	417c10 <perror_with_name@@Base>
  408634:	b	407ee0 <main@@Base+0x1030>
  408638:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  40863c:	mov	x0, x20
  408640:	bl	406700 <strlen@plt>
  408644:	mov	x2, x0
  408648:	ldr	x0, [x21, #1912]
  40864c:	mov	x1, x20
  408650:	bl	40b138 <variable_buffer_output@@Base>
  408654:	strb	wzr, [x0]
  408658:	ldr	x0, [x21, #1912]
  40865c:	b	407f04 <main@@Base+0x1054>
  408660:	ldr	x0, [x21, #8]
  408664:	bl	41f174 <strcache_add@@Base>
  408668:	bl	40bec0 <enter_file@@Base>
  40866c:	str	xzr, [x21, #8]
  408670:	mov	x20, x0
  408674:	mov	x0, x21
  408678:	bl	416eb0 <free_ns_chain@@Base>
  40867c:	cbz	x20, 408690 <main@@Base+0x17e0>
  408680:	mov	x0, #0x40                  	// #64
  408684:	bl	416a78 <xcalloc@@Base>
  408688:	str	x20, [x0, #16]
  40868c:	str	x0, [x19, #560]
  408690:	ldr	x0, [x19, #560]
  408694:	cbz	x0, 408724 <main@@Base+0x1874>
  408698:	ldr	w0, [x26, #1104]
  40869c:	tbz	w0, #0, 4086c4 <main@@Base+0x1814>
  4086a0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4086a4:	add	x1, x1, #0x796
  4086a8:	mov	w2, #0x5                   	// #5
  4086ac:	mov	x0, #0x0                   	// #0
  4086b0:	bl	406d60 <dcgettext@plt>
  4086b4:	bl	406df0 <printf@plt>
  4086b8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4086bc:	ldr	x0, [x0, #400]
  4086c0:	bl	406cb0 <fflush@plt>
  4086c4:	ldr	x0, [x19, #560]
  4086c8:	bl	41decc <update_goal_chain@@Base>
  4086cc:	cmp	w0, #0x2
  4086d0:	b.eq	408768 <main@@Base+0x18b8>  // b.none
  4086d4:	cmp	w0, #0x3
  4086d8:	mov	w0, #0x2                   	// #2
  4086dc:	csel	w25, w25, w0, ne  // ne = any
  4086e0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  4086e4:	ldr	w0, [x0, #2192]
  4086e8:	cbz	w0, 408710 <main@@Base+0x1860>
  4086ec:	mov	w2, #0x5                   	// #5
  4086f0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4086f4:	mov	x0, #0x0                   	// #0
  4086f8:	add	x1, x1, #0x7b1
  4086fc:	bl	406d60 <dcgettext@plt>
  408700:	mov	x2, x0
  408704:	mov	x1, #0x0                   	// #0
  408708:	mov	x0, #0x0                   	// #0
  40870c:	bl	417aa8 <error@@Base>
  408710:	mov	w0, w25
  408714:	b	407478 <main@@Base+0x5c8>
  408718:	ldr	x0, [x19, #568]
  40871c:	str	xzr, [x0]
  408720:	b	408698 <main@@Base+0x17e8>
  408724:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  408728:	mov	x1, #0xd                   	// #13
  40872c:	add	x0, x0, #0x752
  408730:	bl	41fcdc <lookup_variable@@Base>
  408734:	cbz	x0, 408758 <main@@Base+0x18a8>
  408738:	ldr	x0, [x0, #8]
  40873c:	cbz	x0, 408758 <main@@Base+0x18a8>
  408740:	ldrb	w0, [x0]
  408744:	cbz	w0, 408758 <main@@Base+0x18a8>
  408748:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  40874c:	mov	w2, #0x5                   	// #5
  408750:	add	x1, x1, #0x760
  408754:	b	407b40 <main@@Base+0xc90>
  408758:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  40875c:	mov	w2, #0x5                   	// #5
  408760:	add	x1, x1, #0x76b
  408764:	b	407b40 <main@@Base+0xc90>
  408768:	mov	w25, #0x1                   	// #1
  40876c:	b	4086e0 <main@@Base+0x1830>
  408770:	ldr	w0, [x19]
  408774:	tbz	w0, #1, 4087b0 <main@@Base+0x1900>
  408778:	mov	w2, #0x5                   	// #5
  40877c:	mov	x1, x24
  408780:	mov	x0, #0x0                   	// #0
  408784:	str	x4, [x29, #128]
  408788:	stp	x5, x3, [x29, #144]
  40878c:	bl	406d60 <dcgettext@plt>
  408790:	ldr	x5, [x29, #144]
  408794:	ldr	x1, [x5]
  408798:	bl	406df0 <printf@plt>
  40879c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4087a0:	ldr	x0, [x0, #400]
  4087a4:	bl	406cb0 <fflush@plt>
  4087a8:	ldr	x4, [x29, #128]
  4087ac:	ldr	x3, [x29, #152]
  4087b0:	ldr	x0, [x3]
  4087b4:	cbz	x4, 40817c <main@@Base+0x12cc>
  4087b8:	str	x0, [x4]
  4087bc:	mov	x0, x3
  4087c0:	str	x4, [x29, #152]
  4087c4:	bl	406c20 <free@plt>
  4087c8:	ldr	x4, [x29, #152]
  4087cc:	cbz	x4, 408184 <main@@Base+0x12d4>
  4087d0:	ldr	x3, [x4]
  4087d4:	cbnz	x3, 408128 <main@@Base+0x1278>
  4087d8:	mov	w1, #0x1                   	// #1
  4087dc:	mov	w0, w1
  4087e0:	bl	4154e0 <gmk_add_function@@Base+0x2d4>
  4087e4:	ldr	w20, [x26, #1104]
  4087e8:	tbnz	w20, #8, 4087f0 <main@@Base+0x1940>
  4087ec:	str	wzr, [x26, #1104]
  4087f0:	mov	w0, #0x1                   	// #1
  4087f4:	str	w0, [x19, #2288]
  4087f8:	mov	x0, x21
  4087fc:	bl	41decc <update_goal_chain@@Base>
  408800:	str	w20, [x26, #1104]
  408804:	str	wzr, [x19, #2288]
  408808:	cbz	w0, 40830c <main@@Base+0x145c>
  40880c:	cmp	w0, #0x3
  408810:	b.ne	407ec0 <main@@Base+0x1010>  // b.any
  408814:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  408818:	add	x0, x0, #0x676
  40881c:	mov	w20, #0x0                   	// #0
  408820:	mov	w24, #0x0                   	// #0
  408824:	str	x0, [x29, #128]
  408828:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40882c:	add	x0, x0, #0x650
  408830:	str	x0, [x29, #120]
  408834:	str	wzr, [x29, #144]
  408838:	str	wzr, [x29, #152]
  40883c:	b	4081cc <main@@Base+0x131c>

0000000000408840 <_start@@Base>:
  408840:	mov	x29, #0x0                   	// #0
  408844:	mov	x30, #0x0                   	// #0
  408848:	mov	x5, x0
  40884c:	ldr	x1, [sp]
  408850:	add	x2, sp, #0x8
  408854:	mov	x6, sp
  408858:	movz	x0, #0x0, lsl #48
  40885c:	movk	x0, #0x0, lsl #32
  408860:	movk	x0, #0x40, lsl #16
  408864:	movk	x0, #0x6eb0
  408868:	movz	x3, #0x0, lsl #48
  40886c:	movk	x3, #0x0, lsl #32
  408870:	movk	x3, #0x42, lsl #16
  408874:	movk	x3, #0x2808
  408878:	movz	x4, #0x0, lsl #48
  40887c:	movk	x4, #0x0, lsl #32
  408880:	movk	x4, #0x42, lsl #16
  408884:	movk	x4, #0x2888
  408888:	bl	4069d0 <__libc_start_main@plt>
  40888c:	bl	406b50 <abort@plt>
  408890:	adrp	x0, 43c000 <_IO_stdin_used@@Base+0x19720>
  408894:	ldr	x0, [x0, #4064]
  408898:	cbz	x0, 4088a0 <_start@@Base+0x60>
  40889c:	b	406b20 <__gmon_start__@plt>
  4088a0:	ret
  4088a4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4088a8:	add	x1, x0, #0x178
  4088ac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4088b0:	add	x0, x0, #0x178
  4088b4:	cmp	x1, x0
  4088b8:	b.eq	4088e4 <_start@@Base+0xa4>  // b.none
  4088bc:	sub	sp, sp, #0x10
  4088c0:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  4088c4:	ldr	x1, [x1, #2280]
  4088c8:	str	x1, [sp, #8]
  4088cc:	cbz	x1, 4088dc <_start@@Base+0x9c>
  4088d0:	mov	x16, x1
  4088d4:	add	sp, sp, #0x10
  4088d8:	br	x16
  4088dc:	add	sp, sp, #0x10
  4088e0:	ret
  4088e4:	ret
  4088e8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4088ec:	add	x1, x0, #0x178
  4088f0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4088f4:	add	x0, x0, #0x178
  4088f8:	sub	x1, x1, x0
  4088fc:	mov	x2, #0x2                   	// #2
  408900:	asr	x1, x1, #3
  408904:	sdiv	x1, x1, x2
  408908:	cbz	x1, 408934 <_start@@Base+0xf4>
  40890c:	sub	sp, sp, #0x10
  408910:	adrp	x2, 422000 <fd_inherit@@Base+0x20>
  408914:	ldr	x2, [x2, #2288]
  408918:	str	x2, [sp, #8]
  40891c:	cbz	x2, 40892c <_start@@Base+0xec>
  408920:	mov	x16, x2
  408924:	add	sp, sp, #0x10
  408928:	br	x16
  40892c:	add	sp, sp, #0x10
  408930:	ret
  408934:	ret
  408938:	stp	x29, x30, [sp, #-32]!
  40893c:	mov	x29, sp
  408940:	str	x19, [sp, #16]
  408944:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  408948:	ldrb	w0, [x19, #428]
  40894c:	cbnz	w0, 40895c <_start@@Base+0x11c>
  408950:	bl	4088a4 <_start@@Base+0x64>
  408954:	mov	w0, #0x1                   	// #1
  408958:	strb	w0, [x19, #428]
  40895c:	ldr	x19, [sp, #16]
  408960:	ldp	x29, x30, [sp], #32
  408964:	ret
  408968:	b	4088e8 <_start@@Base+0xa8>
  40896c:	stp	x29, x30, [sp, #-32]!
  408970:	mov	x29, sp
  408974:	ldr	x0, [sp, #48]
  408978:	str	x19, [sp, #16]
  40897c:	mov	x19, x6
  408980:	bl	409178 <ar_name_equal@@Base>
  408984:	cmp	w0, #0x0
  408988:	csel	x0, x19, xzr, ne  // ne = any
  40898c:	ldr	x19, [sp, #16]
  408990:	ldp	x29, x30, [sp], #32
  408994:	ret
  408998:	stp	x29, x30, [sp, #-48]!
  40899c:	mov	w2, #0x5                   	// #5
  4089a0:	mov	x29, sp
  4089a4:	stp	x19, x20, [sp, #16]
  4089a8:	ldr	x19, [sp, #64]
  4089ac:	ldr	x0, [x19, #8]
  4089b0:	str	x21, [sp, #32]
  4089b4:	mov	x21, x1
  4089b8:	bl	406c80 <fnmatch@plt>
  4089bc:	cbnz	w0, 408a0c <_start@@Base+0x1cc>
  4089c0:	ldr	x0, [x19, #16]
  4089c4:	bl	416a78 <xcalloc@@Base>
  4089c8:	mov	x20, x0
  4089cc:	ldr	x1, [x19]
  4089d0:	mov	x3, x21
  4089d4:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x4720>
  4089d8:	adrp	x2, 422000 <fd_inherit@@Base+0x20>
  4089dc:	add	x4, x4, #0xf67
  4089e0:	add	x2, x2, #0x8f8
  4089e4:	mov	w0, #0x4                   	// #4
  4089e8:	bl	416ad4 <concat@@Base>
  4089ec:	bl	41f174 <strcache_add@@Base>
  4089f0:	str	x0, [x20, #8]
  4089f4:	ldr	x0, [x19, #24]
  4089f8:	str	x0, [x20]
  4089fc:	ldr	w0, [x19, #32]
  408a00:	str	x20, [x19, #24]
  408a04:	add	w0, w0, #0x1
  408a08:	str	w0, [x19, #32]
  408a0c:	mov	x0, #0x0                   	// #0
  408a10:	ldp	x19, x20, [sp, #16]
  408a14:	ldr	x21, [sp, #32]
  408a18:	ldp	x29, x30, [sp], #48
  408a1c:	ret

0000000000408a20 <ar_name@@Base>:
  408a20:	stp	x29, x30, [sp, #-32]!
  408a24:	mov	w1, #0x28                  	// #40
  408a28:	mov	x29, sp
  408a2c:	stp	x19, x20, [sp, #16]
  408a30:	mov	x20, x0
  408a34:	bl	406c40 <strchr@plt>
  408a38:	cmp	x0, #0x0
  408a3c:	ccmp	x20, x0, #0x4, ne  // ne = any
  408a40:	b.eq	408abc <ar_name@@Base+0x9c>  // b.none
  408a44:	mov	x19, x0
  408a48:	bl	406700 <strlen@plt>
  408a4c:	sub	x0, x0, #0x1
  408a50:	add	x1, x19, x0
  408a54:	ldrb	w0, [x19, x0]
  408a58:	cmp	w0, #0x29
  408a5c:	b.ne	408abc <ar_name@@Base+0x9c>  // b.any
  408a60:	add	x0, x19, #0x1
  408a64:	cmp	x1, x0
  408a68:	b.eq	408abc <ar_name@@Base+0x9c>  // b.none
  408a6c:	ldrb	w0, [x19, #1]
  408a70:	cmp	w0, #0x28
  408a74:	b.ne	408acc <ar_name@@Base+0xac>  // b.any
  408a78:	ldurb	w1, [x1, #-1]
  408a7c:	mov	w0, #0x1                   	// #1
  408a80:	cmp	w1, #0x29
  408a84:	b.ne	408ac0 <ar_name@@Base+0xa0>  // b.any
  408a88:	mov	x0, x20
  408a8c:	bl	406700 <strlen@plt>
  408a90:	mov	w2, #0x5                   	// #5
  408a94:	mov	x19, x0
  408a98:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408a9c:	mov	x0, #0x0                   	// #0
  408aa0:	add	x1, x1, #0x8fa
  408aa4:	bl	406d60 <dcgettext@plt>
  408aa8:	mov	x3, x20
  408aac:	mov	x2, x0
  408ab0:	mov	x1, x19
  408ab4:	mov	x0, #0x0                   	// #0
  408ab8:	bl	417d24 <fatal@@Base>
  408abc:	mov	w0, #0x0                   	// #0
  408ac0:	ldp	x19, x20, [sp, #16]
  408ac4:	ldp	x29, x30, [sp], #32
  408ac8:	ret
  408acc:	mov	w0, #0x1                   	// #1
  408ad0:	b	408ac0 <ar_name@@Base+0xa0>

0000000000408ad4 <ar_parse_name@@Base>:
  408ad4:	stp	x29, x30, [sp, #-48]!
  408ad8:	mov	x29, sp
  408adc:	stp	x19, x20, [sp, #16]
  408ae0:	mov	x19, x1
  408ae4:	str	x21, [sp, #32]
  408ae8:	mov	x21, x2
  408aec:	bl	416c24 <xstrdup@@Base>
  408af0:	str	x0, [x19]
  408af4:	mov	w1, #0x28                  	// #40
  408af8:	bl	406c40 <strchr@plt>
  408afc:	mov	x19, x0
  408b00:	mov	x20, x0
  408b04:	strb	wzr, [x19], #1
  408b08:	mov	x0, x19
  408b0c:	bl	406700 <strlen@plt>
  408b10:	strb	wzr, [x20, x0]
  408b14:	str	x19, [x21]
  408b18:	ldp	x19, x20, [sp, #16]
  408b1c:	ldr	x21, [sp, #32]
  408b20:	ldp	x29, x30, [sp], #48
  408b24:	ret

0000000000408b28 <ar_member_date@@Base>:
  408b28:	stp	x29, x30, [sp, #-48]!
  408b2c:	mov	x29, sp
  408b30:	add	x2, sp, #0x28
  408b34:	add	x1, sp, #0x20
  408b38:	str	x19, [sp, #16]
  408b3c:	bl	408ad4 <ar_parse_name@@Base>
  408b40:	ldr	x0, [sp, #32]
  408b44:	bl	40be54 <lookup_file@@Base>
  408b48:	cbnz	x0, 408b68 <ar_member_date@@Base+0x40>
  408b4c:	ldr	x0, [sp, #32]
  408b50:	bl	40aaa4 <file_exists_p@@Base>
  408b54:	cbz	w0, 408b70 <ar_member_date@@Base+0x48>
  408b58:	ldr	x0, [sp, #32]
  408b5c:	bl	41f174 <strcache_add@@Base>
  408b60:	bl	40bec0 <enter_file@@Base>
  408b64:	cbz	x0, 408b70 <ar_member_date@@Base+0x48>
  408b68:	mov	w1, #0x0                   	// #0
  408b6c:	bl	41c170 <f_mtime@@Base>
  408b70:	ldp	x0, x2, [sp, #32]
  408b74:	adrp	x1, 408000 <main@@Base+0x1150>
  408b78:	add	x1, x1, #0x96c
  408b7c:	bl	408e04 <ar_scan@@Base>
  408b80:	mov	x19, x0
  408b84:	ldr	x0, [sp, #32]
  408b88:	bl	406c20 <free@plt>
  408b8c:	cmp	x19, #0x0
  408b90:	csinv	x0, x19, xzr, gt
  408b94:	ldr	x19, [sp, #16]
  408b98:	ldp	x29, x30, [sp], #48
  408b9c:	ret

0000000000408ba0 <ar_touch@@Base>:
  408ba0:	stp	x29, x30, [sp, #-64]!
  408ba4:	mov	x29, sp
  408ba8:	add	x2, sp, #0x38
  408bac:	add	x1, sp, #0x30
  408bb0:	stp	x19, x20, [sp, #16]
  408bb4:	mov	x20, x0
  408bb8:	str	x21, [sp, #32]
  408bbc:	bl	408ad4 <ar_parse_name@@Base>
  408bc0:	ldr	x0, [sp, #48]
  408bc4:	bl	41f174 <strcache_add@@Base>
  408bc8:	bl	40bec0 <enter_file@@Base>
  408bcc:	mov	w1, #0x0                   	// #0
  408bd0:	bl	41c170 <f_mtime@@Base>
  408bd4:	ldp	x0, x1, [sp, #48]
  408bd8:	bl	40920c <ar_member_touch@@Base>
  408bdc:	add	w1, w0, #0x3
  408be0:	cmp	w1, #0x4
  408be4:	b.hi	408ccc <ar_touch@@Base+0x12c>  // b.pmore
  408be8:	mov	w19, w0
  408bec:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  408bf0:	add	x0, x0, #0x9d0
  408bf4:	ldrb	w0, [x0, w1, uxtw]
  408bf8:	adr	x1, 408c04 <ar_touch@@Base+0x64>
  408bfc:	add	x0, x1, w0, sxtb #2
  408c00:	br	x0
  408c04:	ldr	x0, [sp, #48]
  408c08:	bl	406700 <strlen@plt>
  408c0c:	mov	x19, x0
  408c10:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408c14:	add	x1, x1, #0x923
  408c18:	mov	w2, #0x5                   	// #5
  408c1c:	mov	x0, #0x0                   	// #0
  408c20:	bl	406d60 <dcgettext@plt>
  408c24:	ldr	x3, [sp, #48]
  408c28:	mov	x2, x0
  408c2c:	mov	x1, x19
  408c30:	mov	x0, #0x0                   	// #0
  408c34:	bl	417aa8 <error@@Base>
  408c38:	b	408c68 <ar_touch@@Base+0xc8>
  408c3c:	ldr	x0, [sp, #48]
  408c40:	bl	406700 <strlen@plt>
  408c44:	mov	x19, x0
  408c48:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408c4c:	mov	w2, #0x5                   	// #5
  408c50:	add	x1, x1, #0x946
  408c54:	b	408c1c <ar_touch@@Base+0x7c>
  408c58:	ldr	x1, [sp, #48]
  408c5c:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  408c60:	add	x0, x0, #0x969
  408c64:	bl	417c10 <perror_with_name@@Base>
  408c68:	mov	w19, #0x1                   	// #1
  408c6c:	b	408cb0 <ar_touch@@Base+0x110>
  408c70:	ldr	x0, [sp, #56]
  408c74:	bl	406700 <strlen@plt>
  408c78:	mov	x21, x0
  408c7c:	ldr	x0, [sp, #48]
  408c80:	bl	406700 <strlen@plt>
  408c84:	mov	x20, x0
  408c88:	mov	w2, #0x5                   	// #5
  408c8c:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408c90:	mov	x0, #0x0                   	// #0
  408c94:	add	x1, x1, #0x971
  408c98:	bl	406d60 <dcgettext@plt>
  408c9c:	mov	x2, x0
  408ca0:	ldp	x4, x3, [sp, #48]
  408ca4:	add	x1, x21, x20
  408ca8:	mov	x0, #0x0                   	// #0
  408cac:	bl	417aa8 <error@@Base>
  408cb0:	ldr	x0, [sp, #48]
  408cb4:	bl	406c20 <free@plt>
  408cb8:	mov	w0, w19
  408cbc:	ldp	x19, x20, [sp, #16]
  408cc0:	ldr	x21, [sp, #32]
  408cc4:	ldp	x29, x30, [sp], #64
  408cc8:	ret
  408ccc:	mov	x0, x20
  408cd0:	bl	406700 <strlen@plt>
  408cd4:	mov	w2, #0x5                   	// #5
  408cd8:	mov	x19, x0
  408cdc:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408ce0:	mov	x0, #0x0                   	// #0
  408ce4:	add	x1, x1, #0x99b
  408ce8:	bl	406d60 <dcgettext@plt>
  408cec:	mov	x3, x20
  408cf0:	b	408c28 <ar_touch@@Base+0x88>

0000000000408cf4 <ar_glob@@Base>:
  408cf4:	mov	x4, x1
  408cf8:	mov	w5, #0x0                   	// #0
  408cfc:	ldrb	w3, [x4]
  408d00:	cbnz	w3, 408d0c <ar_glob@@Base+0x18>
  408d04:	mov	x0, #0x0                   	// #0
  408d08:	ret
  408d0c:	cmp	w3, #0x5c
  408d10:	b.eq	408de0 <ar_glob@@Base+0xec>  // b.none
  408d14:	b.hi	408d38 <ar_glob@@Base+0x44>  // b.pmore
  408d18:	cmp	w3, #0x5b
  408d1c:	b.eq	408de8 <ar_glob@@Base+0xf4>  // b.none
  408d20:	cmp	w3, #0x2a
  408d24:	b.eq	408d44 <ar_glob@@Base+0x50>  // b.none
  408d28:	cmp	w3, #0x3f
  408d2c:	b.eq	408d44 <ar_glob@@Base+0x50>  // b.none
  408d30:	add	x4, x4, #0x1
  408d34:	b	408cfc <ar_glob@@Base+0x8>
  408d38:	cmp	w3, #0x5d
  408d3c:	b.ne	408d30 <ar_glob@@Base+0x3c>  // b.any
  408d40:	cbz	w5, 408d30 <ar_glob@@Base+0x3c>
  408d44:	stp	x29, x30, [sp, #-80]!
  408d48:	mov	x29, sp
  408d4c:	str	x19, [sp, #16]
  408d50:	stp	x0, x1, [x29, #40]
  408d54:	adrp	x1, 408000 <main@@Base+0x1150>
  408d58:	add	x1, x1, #0x998
  408d5c:	stp	x2, xzr, [x29, #56]
  408d60:	add	x2, x29, #0x28
  408d64:	str	wzr, [x29, #72]
  408d68:	bl	408e04 <ar_scan@@Base>
  408d6c:	ldr	x2, [x29, #64]
  408d70:	cbz	x2, 408df0 <ar_glob@@Base+0xfc>
  408d74:	ldr	w0, [x29, #72]
  408d78:	mov	w1, #0x0                   	// #0
  408d7c:	lsl	x0, x0, #3
  408d80:	add	x0, x0, #0xf
  408d84:	and	x0, x0, #0xffffffff0
  408d88:	sub	sp, sp, x0
  408d8c:	mov	x19, sp
  408d90:	mov	w0, w1
  408d94:	add	w1, w1, #0x1
  408d98:	ldr	x3, [x2, #8]
  408d9c:	ldr	x2, [x2]
  408da0:	str	x3, [x19, w0, uxtw #3]
  408da4:	cbnz	x2, 408d90 <ar_glob@@Base+0x9c>
  408da8:	mov	x0, x19
  408dac:	mov	x2, #0x8                   	// #8
  408db0:	adrp	x3, 416000 <die@@Base+0x268>
  408db4:	add	x3, x3, #0x89c
  408db8:	bl	406820 <qsort@plt>
  408dbc:	ldr	x0, [x29, #64]
  408dc0:	mov	w2, #0x0                   	// #0
  408dc4:	mov	x1, x0
  408dc8:	cbz	x1, 408df4 <ar_glob@@Base+0x100>
  408dcc:	ldr	x3, [x19, w2, uxtw #3]
  408dd0:	add	w2, w2, #0x1
  408dd4:	str	x3, [x1, #8]
  408dd8:	ldr	x1, [x1]
  408ddc:	b	408dc8 <ar_glob@@Base+0xd4>
  408de0:	add	x4, x4, #0x1
  408de4:	b	408d30 <ar_glob@@Base+0x3c>
  408de8:	mov	w5, #0x1                   	// #1
  408dec:	b	408d30 <ar_glob@@Base+0x3c>
  408df0:	mov	x0, #0x0                   	// #0
  408df4:	mov	sp, x29
  408df8:	ldr	x19, [sp, #16]
  408dfc:	ldp	x29, x30, [sp], #80
  408e00:	ret

0000000000408e04 <ar_scan@@Base>:
  408e04:	stp	x29, x30, [sp, #-240]!
  408e08:	mov	x29, sp
  408e0c:	stp	x19, x20, [sp, #16]
  408e10:	stp	x21, x22, [sp, #32]
  408e14:	stp	x23, x24, [sp, #48]
  408e18:	stp	x25, x26, [sp, #64]
  408e1c:	stp	x27, x28, [sp, #80]
  408e20:	sub	sp, sp, #0x20
  408e24:	stp	x2, x1, [x29, #128]
  408e28:	mov	w2, #0x0                   	// #0
  408e2c:	mov	w1, #0x0                   	// #0
  408e30:	bl	406980 <open@plt>
  408e34:	tbnz	w0, #31, 409170 <ar_scan@@Base+0x36c>
  408e38:	mov	w19, w0
  408e3c:	add	x1, x29, #0xb0
  408e40:	mov	x2, #0x8                   	// #8
  408e44:	bl	416d9c <readbuf@@Base>
  408e48:	cmp	w0, #0x8
  408e4c:	b.ne	408eb0 <ar_scan@@Base+0xac>  // b.any
  408e50:	add	x0, x29, #0xb0
  408e54:	mov	x2, #0x8                   	// #8
  408e58:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408e5c:	add	x1, x1, #0x9d5
  408e60:	bl	406ba0 <memcmp@plt>
  408e64:	mov	w24, w0
  408e68:	cbnz	w0, 408eb0 <ar_scan@@Base+0xac>
  408e6c:	add	x20, x29, #0x98
  408e70:	adrp	x26, 422000 <fd_inherit@@Base+0x20>
  408e74:	add	x26, x26, #0x9de
  408e78:	add	x0, x20, #0x3
  408e7c:	mov	x21, #0x8                   	// #8
  408e80:	mov	x22, #0x0                   	// #0
  408e84:	str	x0, [x29, #120]
  408e88:	mov	x1, x21
  408e8c:	mov	w0, w19
  408e90:	mov	w2, #0x0                   	// #0
  408e94:	bl	406870 <lseek@plt>
  408e98:	cmn	x0, #0x1
  408e9c:	b.ne	408ec0 <ar_scan@@Base+0xbc>  // b.any
  408ea0:	bl	406e00 <__errno_location@plt>
  408ea4:	ldr	w0, [x0]
  408ea8:	cmp	w0, #0x4
  408eac:	b.eq	408e88 <ar_scan@@Base+0x84>  // b.none
  408eb0:	mov	w0, w19
  408eb4:	mov	x23, #0xfffffffffffffffe    	// #-2
  408eb8:	bl	406ae0 <close@plt>
  408ebc:	b	409030 <ar_scan@@Base+0x22c>
  408ec0:	tbnz	x0, #63, 408eb0 <ar_scan@@Base+0xac>
  408ec4:	add	x1, x29, #0xb0
  408ec8:	mov	w0, w19
  408ecc:	mov	x2, #0x3c                  	// #60
  408ed0:	bl	416d9c <readbuf@@Base>
  408ed4:	cbz	w0, 409160 <ar_scan@@Base+0x35c>
  408ed8:	cmp	w0, #0x3c
  408edc:	b.ne	408eb0 <ar_scan@@Base+0xac>  // b.any
  408ee0:	mov	x1, x26
  408ee4:	add	x0, x29, #0xea
  408ee8:	mov	x2, #0x2                   	// #2
  408eec:	bl	406ba0 <memcmp@plt>
  408ef0:	mov	w23, w0
  408ef4:	cbnz	w0, 408eb0 <ar_scan@@Base+0xac>
  408ef8:	add	x25, x20, #0x10
  408efc:	ldp	x0, x1, [x29, #176]
  408f00:	stp	x0, x1, [x29, #152]
  408f04:	cmp	x25, x20
  408f08:	strb	wzr, [x25]
  408f0c:	b.eq	408f1c <ar_scan@@Base+0x118>  // b.none
  408f10:	ldrb	w0, [x25, #-1]!
  408f14:	cmp	w0, #0x20
  408f18:	b.eq	408f04 <ar_scan@@Base+0x100>  // b.none
  408f1c:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408f20:	mov	x0, x20
  408f24:	add	x1, x1, #0x9e1
  408f28:	bl	406be0 <strcmp@plt>
  408f2c:	cbz	w0, 409054 <ar_scan@@Base+0x250>
  408f30:	mov	x0, x20
  408f34:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408f38:	add	x1, x1, #0x9e4
  408f3c:	bl	406be0 <strcmp@plt>
  408f40:	cmp	w0, #0x0
  408f44:	cset	w27, eq  // eq = none
  408f48:	ldrb	w0, [x25]
  408f4c:	cmp	w0, #0x2f
  408f50:	b.ne	408f58 <ar_scan@@Base+0x154>  // b.any
  408f54:	strb	wzr, [x25]
  408f58:	ldrb	w0, [x29, #152]
  408f5c:	cbnz	w27, 40905c <ar_scan@@Base+0x258>
  408f60:	cmp	w0, #0x20
  408f64:	mov	w1, #0x2f                  	// #47
  408f68:	ccmp	w0, w1, #0x4, ne  // ne = any
  408f6c:	b.ne	40905c <ar_scan@@Base+0x258>  // b.any
  408f70:	cbz	x22, 40905c <ar_scan@@Base+0x258>
  408f74:	add	x0, x20, #0x1
  408f78:	bl	406910 <atoi@plt>
  408f7c:	cmp	w0, #0x0
  408f80:	ccmp	w24, w0, #0x4, ge  // ge = tcont
  408f84:	b.le	408eb0 <ar_scan@@Base+0xac>
  408f88:	add	x28, x22, w0, sxtw
  408f8c:	mov	x0, x28
  408f90:	bl	406700 <strlen@plt>
  408f94:	cmp	w0, #0x0
  408f98:	b.le	408eb0 <ar_scan@@Base+0xac>
  408f9c:	mov	w23, #0x1                   	// #1
  408fa0:	add	x2, x29, #0x94
  408fa4:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  408fa8:	add	x1, x1, #0x9f1
  408fac:	add	x0, x29, #0xd8
  408fb0:	bl	406d80 <__isoc99_sscanf@plt>
  408fb4:	add	x0, x29, #0xe0
  408fb8:	bl	406b10 <atol@plt>
  408fbc:	mov	x25, x0
  408fc0:	add	x0, x29, #0xc0
  408fc4:	bl	406b10 <atol@plt>
  408fc8:	mov	x6, x0
  408fcc:	add	x0, x29, #0xcc
  408fd0:	str	x6, [x29, #104]
  408fd4:	bl	406910 <atoi@plt>
  408fd8:	mov	w7, w0
  408fdc:	add	x0, x29, #0xd2
  408fe0:	str	w7, [x29, #116]
  408fe4:	bl	406910 <atoi@plt>
  408fe8:	str	w0, [sp]
  408fec:	ldp	x1, x8, [x29, #128]
  408ff0:	str	x1, [sp, #16]
  408ff4:	ldr	w7, [x29, #116]
  408ff8:	eor	w2, w23, #0x1
  408ffc:	ldr	x6, [x29, #104]
  409000:	mov	x5, x25
  409004:	ldr	w1, [x29, #148]
  409008:	add	x4, x21, #0x3c
  40900c:	str	w1, [sp, #8]
  409010:	mov	x3, x21
  409014:	mov	w0, w19
  409018:	mov	x1, x28
  40901c:	blr	x8
  409020:	mov	x23, x0
  409024:	cbz	x0, 4090d4 <ar_scan@@Base+0x2d0>
  409028:	mov	w0, w19
  40902c:	bl	406ae0 <close@plt>
  409030:	mov	sp, x29
  409034:	mov	x0, x23
  409038:	ldp	x19, x20, [sp, #16]
  40903c:	ldp	x21, x22, [sp, #32]
  409040:	ldp	x23, x24, [sp, #48]
  409044:	ldp	x25, x26, [sp, #64]
  409048:	ldp	x27, x28, [sp, #80]
  40904c:	ldp	x29, x30, [sp], #240
  409050:	ret
  409054:	mov	w27, #0x1                   	// #1
  409058:	b	408f48 <ar_scan@@Base+0x144>
  40905c:	cmp	w0, #0x23
  409060:	b.ne	4090cc <ar_scan@@Base+0x2c8>  // b.any
  409064:	ldrb	w0, [x29, #153]
  409068:	cmp	w0, #0x31
  40906c:	b.ne	4090cc <ar_scan@@Base+0x2c8>  // b.any
  409070:	ldrb	w0, [x29, #154]
  409074:	cmp	w0, #0x2f
  409078:	b.ne	4090cc <ar_scan@@Base+0x2c8>  // b.any
  40907c:	ldr	x0, [x29, #120]
  409080:	bl	406910 <atoi@plt>
  409084:	mov	w23, w0
  409088:	cmp	w0, #0x0
  40908c:	b.le	408eb0 <ar_scan@@Base+0xac>
  409090:	add	w1, w0, #0x1
  409094:	sxtw	x25, w0
  409098:	mov	x2, x25
  40909c:	mov	w0, w19
  4090a0:	sxtw	x1, w1
  4090a4:	add	x1, x1, #0xf
  4090a8:	and	x1, x1, #0xfffffffffffffff0
  4090ac:	sub	sp, sp, x1
  4090b0:	add	x28, sp, #0x20
  4090b4:	mov	x1, x28
  4090b8:	bl	416d9c <readbuf@@Base>
  4090bc:	cmp	w23, w0
  4090c0:	b.ne	408eb0 <ar_scan@@Base+0xac>  // b.any
  4090c4:	strb	wzr, [x28, x25]
  4090c8:	b	408f9c <ar_scan@@Base+0x198>
  4090cc:	mov	x28, x20
  4090d0:	b	408fa0 <ar_scan@@Base+0x19c>
  4090d4:	cbz	w27, 409124 <ar_scan@@Base+0x320>
  4090d8:	mov	x0, #0x7fffffff            	// #2147483647
  4090dc:	cmp	x25, x0
  4090e0:	b.gt	408eb0 <ar_scan@@Base+0xac>
  4090e4:	add	x0, x25, #0x10
  4090e8:	mov	x2, x25
  4090ec:	and	x0, x0, #0xfffffffffffffff0
  4090f0:	sub	sp, sp, x0
  4090f4:	mov	w0, w19
  4090f8:	add	x22, sp, #0x20
  4090fc:	mov	x1, x22
  409100:	bl	416d9c <readbuf@@Base>
  409104:	cmp	x25, w0, sxtw
  409108:	b.ne	408eb0 <ar_scan@@Base+0xac>  // b.any
  40910c:	mov	w24, w25
  409110:	add	x1, x22, x25
  409114:	mov	x0, x22
  409118:	cmp	x0, x1
  40911c:	b.cc	409138 <ar_scan@@Base+0x334>  // b.lo, b.ul, b.last
  409120:	strb	wzr, [x1]
  409124:	add	x5, x25, x21
  409128:	add	x21, x5, #0x3c
  40912c:	tbz	w5, #0, 408e88 <ar_scan@@Base+0x84>
  409130:	add	x21, x5, #0x3d
  409134:	b	408e88 <ar_scan@@Base+0x84>
  409138:	ldrb	w2, [x0]
  40913c:	cmp	w2, #0xa
  409140:	b.ne	409158 <ar_scan@@Base+0x354>  // b.any
  409144:	ldurb	w2, [x0, #-1]
  409148:	strb	wzr, [x0]
  40914c:	cmp	w2, #0x2f
  409150:	b.ne	409158 <ar_scan@@Base+0x354>  // b.any
  409154:	sturb	wzr, [x0, #-1]
  409158:	add	x0, x0, #0x1
  40915c:	b	409118 <ar_scan@@Base+0x314>
  409160:	mov	w0, w19
  409164:	mov	x23, #0x0                   	// #0
  409168:	bl	406ae0 <close@plt>
  40916c:	b	409030 <ar_scan@@Base+0x22c>
  409170:	mov	x23, #0xffffffffffffffff    	// #-1
  409174:	b	409030 <ar_scan@@Base+0x22c>

0000000000409178 <ar_name_equal@@Base>:
  409178:	stp	x29, x30, [sp, #-48]!
  40917c:	mov	x29, sp
  409180:	stp	x19, x20, [sp, #16]
  409184:	mov	x20, x1
  409188:	mov	x19, x0
  40918c:	mov	w1, #0x2f                  	// #47
  409190:	str	x21, [sp, #32]
  409194:	mov	w21, w2
  409198:	bl	406b00 <strrchr@plt>
  40919c:	cbz	x0, 4091a4 <ar_name_equal@@Base+0x2c>
  4091a0:	add	x19, x0, #0x1
  4091a4:	cbz	w21, 4091d0 <ar_name_equal@@Base+0x58>
  4091a8:	mov	x1, x20
  4091ac:	mov	x0, x19
  4091b0:	mov	x2, #0xf                   	// #15
  4091b4:	bl	4069b0 <strncmp@plt>
  4091b8:	cmp	w0, #0x0
  4091bc:	cset	w0, eq  // eq = none
  4091c0:	ldp	x19, x20, [sp, #16]
  4091c4:	ldr	x21, [sp, #32]
  4091c8:	ldp	x29, x30, [sp], #48
  4091cc:	ret
  4091d0:	mov	x1, x20
  4091d4:	mov	x0, x19
  4091d8:	bl	406be0 <strcmp@plt>
  4091dc:	b	4091b8 <ar_name_equal@@Base+0x40>
  4091e0:	stp	x29, x30, [sp, #-32]!
  4091e4:	mov	x29, sp
  4091e8:	ldr	x0, [sp, #48]
  4091ec:	str	x19, [sp, #16]
  4091f0:	mov	x19, x3
  4091f4:	bl	409178 <ar_name_equal@@Base>
  4091f8:	cmp	w0, #0x0
  4091fc:	csel	x0, x19, xzr, ne  // ne = any
  409200:	ldr	x19, [sp, #16]
  409204:	ldp	x29, x30, [sp], #32
  409208:	ret

000000000040920c <ar_member_touch@@Base>:
  40920c:	stp	x29, x30, [sp, #-240]!
  409210:	mov	x2, x1
  409214:	adrp	x1, 409000 <ar_scan@@Base+0x1fc>
  409218:	mov	x29, sp
  40921c:	add	x1, x1, #0x1e0
  409220:	stp	x19, x20, [sp, #16]
  409224:	stp	x21, x22, [sp, #32]
  409228:	mov	x21, x0
  40922c:	bl	408e04 <ar_scan@@Base>
  409230:	mov	x19, x0
  409234:	cmp	x0, #0x0
  409238:	b.ge	40924c <ar_member_touch@@Base+0x40>  // b.tcont
  40923c:	ldp	x19, x20, [sp, #16]
  409240:	ldp	x21, x22, [sp, #32]
  409244:	ldp	x29, x30, [sp], #240
  409248:	ret
  40924c:	b.eq	4093b0 <ar_member_touch@@Base+0x1a4>  // b.none
  409250:	mov	x0, x21
  409254:	mov	w2, #0x1b6                 	// #438
  409258:	mov	w1, #0x2                   	// #2
  40925c:	bl	406980 <open@plt>
  409260:	mov	w20, w0
  409264:	cmn	w0, #0x1
  409268:	b.ne	409284 <ar_member_touch@@Base+0x78>  // b.any
  40926c:	bl	406e00 <__errno_location@plt>
  409270:	ldr	w0, [x0]
  409274:	cmp	w0, #0x4
  409278:	b.eq	409250 <ar_member_touch@@Base+0x44>  // b.none
  40927c:	mov	w0, #0xfffffffd            	// #-3
  409280:	b	40923c <ar_member_touch@@Base+0x30>
  409284:	tbnz	w0, #31, 40927c <ar_member_touch@@Base+0x70>
  409288:	mov	x1, x19
  40928c:	mov	w0, w20
  409290:	mov	w2, #0x0                   	// #0
  409294:	bl	406870 <lseek@plt>
  409298:	cmn	x0, #0x1
  40929c:	b.ne	4092cc <ar_member_touch@@Base+0xc0>  // b.any
  4092a0:	bl	406e00 <__errno_location@plt>
  4092a4:	ldr	w0, [x0]
  4092a8:	cmp	w0, #0x4
  4092ac:	b.eq	409288 <ar_member_touch@@Base+0x7c>  // b.none
  4092b0:	bl	406e00 <__errno_location@plt>
  4092b4:	mov	x19, x0
  4092b8:	mov	w0, w20
  4092bc:	ldr	w21, [x19]
  4092c0:	bl	406ae0 <close@plt>
  4092c4:	str	w21, [x19]
  4092c8:	b	40927c <ar_member_touch@@Base+0x70>
  4092cc:	tbnz	x0, #63, 4092b0 <ar_member_touch@@Base+0xa4>
  4092d0:	add	x1, sp, #0x30
  4092d4:	mov	w0, w20
  4092d8:	mov	x2, #0x3c                  	// #60
  4092dc:	bl	416d9c <readbuf@@Base>
  4092e0:	cmp	w0, #0x3c
  4092e4:	b.ne	4092b0 <ar_member_touch@@Base+0xa4>  // b.any
  4092e8:	add	x1, sp, #0x70
  4092ec:	mov	w0, w20
  4092f0:	bl	4228b0 <__libc_csu_fini@@Base+0x28>
  4092f4:	cmn	w0, #0x1
  4092f8:	b.ne	40930c <ar_member_touch@@Base+0x100>  // b.any
  4092fc:	bl	406e00 <__errno_location@plt>
  409300:	ldr	w0, [x0]
  409304:	cmp	w0, #0x4
  409308:	b	4092e4 <ar_member_touch@@Base+0xd8>
  40930c:	tbnz	w0, #31, 4092b0 <ar_member_touch@@Base+0xa4>
  409310:	mov	x0, #0x0                   	// #0
  409314:	mov	w22, #0x20                  	// #32
  409318:	add	x1, sp, #0x30
  40931c:	add	x1, x1, x0
  409320:	add	x0, x0, #0x1
  409324:	cmp	x0, #0xc
  409328:	strb	w22, [x1, #16]
  40932c:	b.ne	409318 <ar_member_touch@@Base+0x10c>  // b.any
  409330:	ldr	x2, [sp, #200]
  409334:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  409338:	add	x1, x1, #0x7b9
  40933c:	add	x21, sp, #0x40
  409340:	mov	x0, x21
  409344:	bl	4067a0 <sprintf@plt>
  409348:	mov	x0, x21
  40934c:	bl	406700 <strlen@plt>
  409350:	add	x1, sp, #0x40
  409354:	strb	w22, [x1, x0]
  409358:	mov	x1, x19
  40935c:	mov	w0, w20
  409360:	mov	w2, #0x0                   	// #0
  409364:	bl	406870 <lseek@plt>
  409368:	cmn	x0, #0x1
  40936c:	b.ne	409384 <ar_member_touch@@Base+0x178>  // b.any
  409370:	bl	406e00 <__errno_location@plt>
  409374:	ldr	w0, [x0]
  409378:	cmp	w0, #0x4
  40937c:	b.eq	409358 <ar_member_touch@@Base+0x14c>  // b.none
  409380:	b	4092b0 <ar_member_touch@@Base+0xa4>
  409384:	tbnz	x0, #63, 4092b0 <ar_member_touch@@Base+0xa4>
  409388:	add	x1, sp, #0x30
  40938c:	mov	w0, w20
  409390:	mov	x2, #0x3c                  	// #60
  409394:	bl	416d18 <writebuf@@Base>
  409398:	cmp	w0, #0x3c
  40939c:	b.ne	4092b0 <ar_member_touch@@Base+0xa4>  // b.any
  4093a0:	mov	w0, w20
  4093a4:	bl	406ae0 <close@plt>
  4093a8:	mov	w0, #0x0                   	// #0
  4093ac:	b	40923c <ar_member_touch@@Base+0x30>
  4093b0:	mov	w0, #0x1                   	// #1
  4093b4:	b	40923c <ar_member_touch@@Base+0x30>
  4093b8:	mov	x0, #0x0                   	// #0
  4093bc:	ret
  4093c0:	mov	x3, x0
  4093c4:	mov	x2, x1
  4093c8:	ldr	x0, [x0, #8]
  4093cc:	cbnz	x0, 4093d8 <ar_member_touch@@Base+0x1cc>
  4093d0:	ldr	x0, [x3, #16]
  4093d4:	ldr	x0, [x0]
  4093d8:	ldr	x1, [x2, #8]
  4093dc:	cbnz	x1, 4093e8 <ar_member_touch@@Base+0x1dc>
  4093e0:	ldr	x1, [x2, #16]
  4093e4:	ldr	x1, [x1]
  4093e8:	b	406be0 <strcmp@plt>
  4093ec:	stp	x29, x30, [sp, #-16]!
  4093f0:	mov	x1, x0
  4093f4:	mov	x29, sp
  4093f8:	ldr	x0, [x0, #8]
  4093fc:	cbnz	x0, 409408 <ar_member_touch@@Base+0x1fc>
  409400:	ldr	x0, [x1, #16]
  409404:	ldr	x0, [x0]
  409408:	bl	410f48 <jhash_string@@Base>
  40940c:	ldp	x29, x30, [sp], #16
  409410:	mov	w0, w0
  409414:	ret
  409418:	stp	x29, x30, [sp, #-176]!
  40941c:	mov	x29, sp
  409420:	stp	x19, x20, [sp, #16]
  409424:	mov	x19, x0
  409428:	ldrh	w0, [x0, #136]
  40942c:	stp	x21, x22, [sp, #32]
  409430:	mov	x20, x1
  409434:	mov	w1, #0x2020                	// #8224
  409438:	tst	w1, w0
  40943c:	b.ne	4094b8 <ar_member_touch@@Base+0x2ac>  // b.any
  409440:	ldr	x0, [x19]
  409444:	bl	408a20 <ar_name@@Base>
  409448:	cbz	w0, 409500 <ar_member_touch@@Base+0x2f4>
  40944c:	ldr	x0, [x19, #112]
  409450:	cmp	x0, #0x1
  409454:	sub	x21, x0, #0x3
  409458:	ldr	x0, [x19]
  40945c:	lsr	x21, x21, #30
  409460:	csinv	x21, x21, xzr, ne  // ne = any
  409464:	bl	408b28 <ar_member_date@@Base>
  409468:	cmp	x0, x21
  40946c:	b.eq	4094b8 <ar_member_touch@@Base+0x2ac>  // b.none
  409470:	cbz	x20, 4094c8 <ar_member_touch@@Base+0x2bc>
  409474:	mov	x0, x20
  409478:	bl	406700 <strlen@plt>
  40947c:	mov	x22, x0
  409480:	ldr	x0, [x19]
  409484:	bl	406700 <strlen@plt>
  409488:	mov	x21, x0
  40948c:	mov	w2, #0x5                   	// #5
  409490:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  409494:	mov	x0, #0x0                   	// #0
  409498:	add	x1, x1, #0x9f5
  40949c:	bl	406d60 <dcgettext@plt>
  4094a0:	mov	x2, x0
  4094a4:	ldr	x4, [x19]
  4094a8:	mov	x3, x20
  4094ac:	add	x1, x22, x21
  4094b0:	mov	x0, #0x0                   	// #0
  4094b4:	bl	417aa8 <error@@Base>
  4094b8:	ldp	x19, x20, [sp, #16]
  4094bc:	ldp	x21, x22, [sp, #32]
  4094c0:	ldp	x29, x30, [sp], #176
  4094c4:	ret
  4094c8:	ldr	x0, [x19]
  4094cc:	bl	406700 <strlen@plt>
  4094d0:	mov	x20, x0
  4094d4:	mov	w2, #0x5                   	// #5
  4094d8:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  4094dc:	mov	x0, #0x0                   	// #0
  4094e0:	add	x1, x1, #0xa2c
  4094e4:	bl	406d60 <dcgettext@plt>
  4094e8:	mov	x2, x0
  4094ec:	ldr	x3, [x19]
  4094f0:	mov	x1, x20
  4094f4:	mov	x0, #0x0                   	// #0
  4094f8:	bl	417aa8 <error@@Base>
  4094fc:	b	4094b8 <ar_member_touch@@Base+0x2ac>
  409500:	ldr	x0, [x19]
  409504:	add	x1, sp, #0x30
  409508:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  40950c:	cmn	w0, #0x1
  409510:	b.ne	409528 <ar_member_touch@@Base+0x31c>  // b.any
  409514:	bl	406e00 <__errno_location@plt>
  409518:	ldr	w0, [x0]
  40951c:	cmp	w0, #0x4
  409520:	b.eq	409500 <ar_member_touch@@Base+0x2f4>  // b.none
  409524:	b	4094b8 <ar_member_touch@@Base+0x2ac>
  409528:	cbnz	w0, 4094b8 <ar_member_touch@@Base+0x2ac>
  40952c:	ldr	w0, [sp, #64]
  409530:	and	w0, w0, #0xf000
  409534:	cmp	w0, #0x8, lsl #12
  409538:	b.ne	4094b8 <ar_member_touch@@Base+0x2ac>  // b.any
  40953c:	ldp	x1, x2, [sp, #136]
  409540:	ldr	x0, [x19]
  409544:	bl	40cfb8 <file_timestamp_cons@@Base>
  409548:	ldr	x1, [x19, #112]
  40954c:	cmp	x0, x1
  409550:	b.eq	4094b8 <ar_member_touch@@Base+0x2ac>  // b.none
  409554:	cbz	x20, 4095cc <ar_member_touch@@Base+0x3c0>
  409558:	mov	x0, x20
  40955c:	bl	406700 <strlen@plt>
  409560:	mov	x22, x0
  409564:	ldr	x0, [x19]
  409568:	bl	406700 <strlen@plt>
  40956c:	mov	x21, x0
  409570:	mov	w2, #0x5                   	// #5
  409574:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  409578:	mov	x0, #0x0                   	// #0
  40957c:	add	x1, x1, #0xa5e
  409580:	bl	406d60 <dcgettext@plt>
  409584:	mov	x2, x0
  409588:	ldr	x4, [x19]
  40958c:	mov	x3, x20
  409590:	add	x1, x22, x21
  409594:	mov	x0, #0x0                   	// #0
  409598:	bl	417aa8 <error@@Base>
  40959c:	ldr	x0, [x19]
  4095a0:	bl	406e50 <unlink@plt>
  4095a4:	tbz	w0, #31, 4094b8 <ar_member_touch@@Base+0x2ac>
  4095a8:	bl	406e00 <__errno_location@plt>
  4095ac:	ldr	w0, [x0]
  4095b0:	cmp	w0, #0x2
  4095b4:	b.eq	4094b8 <ar_member_touch@@Base+0x2ac>  // b.none
  4095b8:	ldr	x1, [x19]
  4095bc:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  4095c0:	add	x0, x0, #0xa91
  4095c4:	bl	417c10 <perror_with_name@@Base>
  4095c8:	b	4094b8 <ar_member_touch@@Base+0x2ac>
  4095cc:	ldr	x0, [x19]
  4095d0:	bl	406700 <strlen@plt>
  4095d4:	mov	x20, x0
  4095d8:	mov	w2, #0x5                   	// #5
  4095dc:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  4095e0:	mov	x0, #0x0                   	// #0
  4095e4:	add	x1, x1, #0xa7a
  4095e8:	bl	406d60 <dcgettext@plt>
  4095ec:	mov	x2, x0
  4095f0:	ldr	x3, [x19]
  4095f4:	mov	x1, x20
  4095f8:	mov	x0, #0x0                   	// #0
  4095fc:	bl	417aa8 <error@@Base>
  409600:	b	40959c <ar_member_touch@@Base+0x390>

0000000000409604 <set_file_variables@@Base>:
  409604:	stp	x29, x30, [sp, #-208]!
  409608:	mov	x29, sp
  40960c:	stp	x19, x20, [sp, #16]
  409610:	mov	x19, x0
  409614:	ldr	x0, [x0]
  409618:	stp	x21, x22, [sp, #32]
  40961c:	stp	x23, x24, [sp, #48]
  409620:	stp	x25, x26, [sp, #64]
  409624:	stp	x27, x28, [sp, #80]
  409628:	bl	408a20 <ar_name@@Base>
  40962c:	ldr	x21, [x19]
  409630:	cbz	w0, 4096f4 <set_file_variables@@Base+0xf0>
  409634:	mov	x0, x21
  409638:	mov	w1, #0x28                  	// #40
  40963c:	bl	406c40 <strchr@plt>
  409640:	sub	x23, x0, x21
  409644:	mov	x20, x0
  409648:	add	x0, x23, #0x10
  40964c:	and	x0, x0, #0xfffffffffffffff0
  409650:	mov	x2, x23
  409654:	sub	sp, sp, x0
  409658:	mov	x1, x21
  40965c:	mov	x22, sp
  409660:	add	x21, x20, #0x1
  409664:	mov	x0, x22
  409668:	bl	4066c0 <memcpy@plt>
  40966c:	mov	x0, x21
  409670:	strb	wzr, [x22, x23]
  409674:	bl	406700 <strlen@plt>
  409678:	add	x1, x0, #0xf
  40967c:	and	x1, x1, #0xfffffffffffffff0
  409680:	sub	x20, x0, #0x1
  409684:	sub	sp, sp, x1
  409688:	mov	x2, x20
  40968c:	mov	x23, sp
  409690:	mov	x1, x21
  409694:	mov	x0, x23
  409698:	bl	4066c0 <memcpy@plt>
  40969c:	strb	wzr, [x23, x20]
  4096a0:	ldr	x0, [x19, #40]
  4096a4:	cbnz	x0, 409760 <set_file_variables@@Base+0x15c>
  4096a8:	ldr	x0, [x19]
  4096ac:	bl	408a20 <ar_name@@Base>
  4096b0:	cbz	w0, 409704 <set_file_variables@@Base+0x100>
  4096b4:	ldr	x0, [x19]
  4096b8:	mov	w1, #0x28                  	// #40
  4096bc:	bl	406c40 <strchr@plt>
  4096c0:	add	x20, x0, #0x1
  4096c4:	mov	x0, x20
  4096c8:	bl	406700 <strlen@plt>
  4096cc:	sub	x21, x0, #0x1
  4096d0:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  4096d4:	add	x0, x0, #0xa9a
  4096d8:	bl	41f174 <strcache_add@@Base>
  4096dc:	bl	40bec0 <enter_file@@Base>
  4096e0:	ldr	x24, [x0, #24]
  4096e4:	cbnz	x24, 409718 <set_file_variables@@Base+0x114>
  4096e8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4096ec:	add	x0, x0, #0x819
  4096f0:	b	40975c <set_file_variables@@Base+0x158>
  4096f4:	adrp	x23, 424000 <_IO_stdin_used@@Base+0x1720>
  4096f8:	mov	x22, x21
  4096fc:	add	x23, x23, #0x819
  409700:	b	4096a0 <set_file_variables@@Base+0x9c>
  409704:	ldr	x20, [x19]
  409708:	mov	x0, x20
  40970c:	bl	406700 <strlen@plt>
  409710:	mov	x21, x0
  409714:	b	4096d0 <set_file_variables@@Base+0xcc>
  409718:	ldr	x25, [x24, #8]
  40971c:	cbnz	x25, 409728 <set_file_variables@@Base+0x124>
  409720:	ldr	x0, [x24, #16]
  409724:	ldr	x25, [x0]
  409728:	mov	x0, x25
  40972c:	bl	406700 <strlen@plt>
  409730:	mov	x2, x0
  409734:	cmp	x21, x0
  409738:	b.ls	40977c <set_file_variables@@Base+0x178>  // b.plast
  40973c:	sub	x26, x21, x0
  409740:	mov	x0, x25
  409744:	add	x1, x20, x26
  409748:	bl	4069b0 <strncmp@plt>
  40974c:	cbnz	w0, 40977c <set_file_variables@@Base+0x178>
  409750:	mov	x1, x26
  409754:	mov	x0, x20
  409758:	bl	41f1b4 <strcache_add_len@@Base>
  40975c:	str	x0, [x19, #40]
  409760:	ldr	x0, [x19, #24]
  409764:	mov	w2, #0x12                  	// #18
  409768:	ldr	x20, [x19, #40]
  40976c:	cbnz	x0, 409784 <set_file_variables@@Base+0x180>
  409770:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  409774:	add	x2, x2, #0x819
  409778:	b	4097a4 <set_file_variables@@Base+0x1a0>
  40977c:	ldr	x24, [x24]
  409780:	b	4096e4 <set_file_variables@@Base+0xe0>
  409784:	ldrb	w1, [x0, #33]
  409788:	tst	w1, w2
  40978c:	b.ne	409a54 <set_file_variables@@Base+0x450>  // b.any
  409790:	tbnz	w1, #3, 409770 <set_file_variables@@Base+0x16c>
  409794:	ldr	x2, [x0, #8]
  409798:	cbnz	x2, 4097a4 <set_file_variables@@Base+0x1a0>
  40979c:	ldr	x0, [x0, #16]
  4097a0:	ldr	x2, [x0]
  4097a4:	ldr	x0, [x19, #32]
  4097a8:	cbz	x0, 4097c0 <set_file_variables@@Base+0x1bc>
  4097ac:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  4097b0:	ldr	x1, [x1, #2032]
  4097b4:	ldr	x1, [x1, #32]
  4097b8:	cmp	x0, x1
  4097bc:	csel	x2, x2, x22, ne  // ne = any
  4097c0:	ldr	x0, [x19, #80]
  4097c4:	mov	x6, #0x0                   	// #0
  4097c8:	mov	w4, #0x0                   	// #0
  4097cc:	mov	w3, #0x6                   	// #6
  4097d0:	mov	x1, #0x1                   	// #1
  4097d4:	ldr	x5, [x0, #8]
  4097d8:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  4097dc:	add	x0, x0, #0x8ca
  4097e0:	bl	41f978 <define_variable_in_set@@Base>
  4097e4:	ldr	x0, [x19, #80]
  4097e8:	mov	x2, x20
  4097ec:	mov	x6, #0x0                   	// #0
  4097f0:	mov	w4, #0x0                   	// #0
  4097f4:	mov	w3, #0x6                   	// #6
  4097f8:	mov	x1, #0x1                   	// #1
  4097fc:	ldr	x5, [x0, #8]
  409800:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  409804:	add	x0, x0, #0xcc1
  409808:	mov	x20, #0x0                   	// #0
  40980c:	bl	41f978 <define_variable_in_set@@Base>
  409810:	ldr	x0, [x19, #80]
  409814:	mov	x2, x22
  409818:	mov	x6, #0x0                   	// #0
  40981c:	mov	w4, #0x0                   	// #0
  409820:	mov	w3, #0x6                   	// #6
  409824:	mov	x1, #0x1                   	// #1
  409828:	ldr	x5, [x0, #8]
  40982c:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  409830:	add	x0, x0, #0x8b6
  409834:	mov	x22, #0x0                   	// #0
  409838:	bl	41f978 <define_variable_in_set@@Base>
  40983c:	ldr	x0, [x19, #80]
  409840:	mov	x2, x23
  409844:	mov	x6, #0x0                   	// #0
  409848:	mov	w4, #0x0                   	// #0
  40984c:	mov	w3, #0x6                   	// #6
  409850:	mov	x1, #0x1                   	// #1
  409854:	ldr	x5, [x0, #8]
  409858:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  40985c:	add	x0, x0, #0x5bf
  409860:	bl	41f978 <define_variable_in_set@@Base>
  409864:	ldr	x21, [x19, #24]
  409868:	cbnz	x21, 409a5c <set_file_variables@@Base+0x458>
  40986c:	cmp	x22, #0x0
  409870:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  409874:	mov	x1, #0x1                   	// #1
  409878:	csel	x22, x22, x1, ne  // ne = any
  40987c:	cmp	x20, #0x0
  409880:	add	x21, x0, #0x1b0
  409884:	csel	x20, x20, x1, ne  // ne = any
  409888:	ldr	x1, [x0, #432]
  40988c:	cmp	x20, x1
  409890:	b.ls	4098a8 <set_file_variables@@Base+0x2a4>  // b.plast
  409894:	str	x20, [x0, #432]
  409898:	mov	x1, x20
  40989c:	ldr	x0, [x21, #8]
  4098a0:	bl	416aa0 <xrealloc@@Base>
  4098a4:	str	x0, [x21, #8]
  4098a8:	ldr	x24, [x21, #8]
  4098ac:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  4098b0:	ldr	x26, [x19, #24]
  4098b4:	add	x20, x20, #0x1
  4098b8:	add	x25, x25, #0xcf8
  4098bc:	mov	w27, #0x20                  	// #32
  4098c0:	cbnz	x26, 409aac <set_file_variables@@Base+0x4a8>
  4098c4:	ldr	x2, [x21, #8]
  4098c8:	mov	x6, #0x0                   	// #0
  4098cc:	mov	w4, #0x0                   	// #0
  4098d0:	mov	w3, #0x6                   	// #6
  4098d4:	cmp	x2, x24
  4098d8:	mov	x1, #0x1                   	// #1
  4098dc:	sbc	x24, x24, xzr
  4098e0:	strb	wzr, [x24]
  4098e4:	ldr	x0, [x19, #80]
  4098e8:	ldr	x5, [x0, #8]
  4098ec:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  4098f0:	add	x0, x0, #0xb15
  4098f4:	bl	41f978 <define_variable_in_set@@Base>
  4098f8:	ldp	x26, x0, [x21, #8]
  4098fc:	cmp	x0, x20
  409900:	b.cs	409918 <set_file_variables@@Base+0x314>  // b.hs, b.nlast
  409904:	ldr	x0, [x21, #24]
  409908:	mov	x1, x20
  40990c:	str	x20, [x21, #16]
  409910:	bl	416aa0 <xrealloc@@Base>
  409914:	str	x0, [x21, #24]
  409918:	ldp	x24, x0, [x21, #24]
  40991c:	cmp	x0, x22
  409920:	b.cs	409938 <set_file_variables@@Base+0x334>  // b.hs, b.nlast
  409924:	ldr	x0, [x21, #40]
  409928:	mov	x1, x22
  40992c:	str	x22, [x21, #32]
  409930:	bl	416aa0 <xrealloc@@Base>
  409934:	str	x0, [x21, #40]
  409938:	add	x0, x29, #0x78
  40993c:	adrp	x4, 409000 <ar_scan@@Base+0x1fc>
  409940:	adrp	x3, 409000 <ar_scan@@Base+0x1fc>
  409944:	add	x4, x4, #0x3c0
  409948:	add	x3, x3, #0x3b8
  40994c:	adrp	x2, 409000 <ar_scan@@Base+0x1fc>
  409950:	mov	x1, #0x1f4                 	// #500
  409954:	add	x2, x2, #0x3ec
  409958:	ldr	x23, [x21, #40]
  40995c:	bl	4106f8 <hash_init@@Base>
  409960:	ldr	x20, [x19, #24]
  409964:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  409968:	cbnz	x20, 409b3c <set_file_variables@@Base+0x538>
  40996c:	ldr	x22, [x19, #24]
  409970:	mov	x25, x26
  409974:	adrp	x28, 43e000 <expanding_var@@Base+0x328>
  409978:	mov	w27, #0x20                  	// #32
  40997c:	add	x0, x28, #0xcf8
  409980:	str	x0, [x29, #104]
  409984:	cbnz	x22, 409ba8 <set_file_variables@@Base+0x5a4>
  409988:	add	x0, x29, #0x78
  40998c:	mov	w1, #0x0                   	// #0
  409990:	bl	410b80 <hash_free@@Base>
  409994:	cmp	x25, x26
  409998:	mov	x2, x26
  40999c:	cset	x0, hi  // hi = pmore
  4099a0:	mov	x6, #0x0                   	// #0
  4099a4:	sub	x25, x25, x0
  4099a8:	mov	w4, #0x0                   	// #0
  4099ac:	mov	w3, #0x6                   	// #6
  4099b0:	mov	x1, #0x1                   	// #1
  4099b4:	strb	wzr, [x25]
  4099b8:	ldr	x0, [x19, #80]
  4099bc:	ldr	x5, [x0, #8]
  4099c0:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  4099c4:	add	x0, x0, #0x443
  4099c8:	bl	41f978 <define_variable_in_set@@Base>
  4099cc:	ldr	x2, [x21, #24]
  4099d0:	mov	x6, #0x0                   	// #0
  4099d4:	mov	w4, #0x0                   	// #0
  4099d8:	mov	w3, #0x6                   	// #6
  4099dc:	cmp	x2, x24
  4099e0:	mov	x1, #0x1                   	// #1
  4099e4:	sbc	x24, x24, xzr
  4099e8:	strb	wzr, [x24]
  4099ec:	ldr	x0, [x19, #80]
  4099f0:	ldr	x5, [x0, #8]
  4099f4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4099f8:	add	x0, x0, #0xc0f
  4099fc:	bl	41f978 <define_variable_in_set@@Base>
  409a00:	ldr	x2, [x21, #40]
  409a04:	mov	x6, #0x0                   	// #0
  409a08:	mov	w4, #0x0                   	// #0
  409a0c:	mov	w3, #0x6                   	// #6
  409a10:	cmp	x2, x23
  409a14:	mov	x1, #0x1                   	// #1
  409a18:	sbc	x23, x23, xzr
  409a1c:	strb	wzr, [x23]
  409a20:	ldr	x0, [x19, #80]
  409a24:	ldr	x5, [x0, #8]
  409a28:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  409a2c:	add	x0, x0, #0xaa4
  409a30:	bl	41f978 <define_variable_in_set@@Base>
  409a34:	mov	sp, x29
  409a38:	ldp	x19, x20, [sp, #16]
  409a3c:	ldp	x21, x22, [sp, #32]
  409a40:	ldp	x23, x24, [sp, #48]
  409a44:	ldp	x25, x26, [sp, #64]
  409a48:	ldp	x27, x28, [sp, #80]
  409a4c:	ldp	x29, x30, [sp], #208
  409a50:	ret
  409a54:	ldr	x0, [x0]
  409a58:	b	40976c <set_file_variables@@Base+0x168>
  409a5c:	ldrb	w1, [x21, #33]
  409a60:	tst	w1, #0x18
  409a64:	b.ne	409a88 <set_file_variables@@Base+0x484>  // b.any
  409a68:	ldr	x0, [x21, #8]
  409a6c:	tbz	w1, #1, 409a90 <set_file_variables@@Base+0x48c>
  409a70:	cbnz	x0, 409a7c <set_file_variables@@Base+0x478>
  409a74:	ldr	x0, [x21, #16]
  409a78:	ldr	x0, [x0]
  409a7c:	add	x22, x22, #0x1
  409a80:	bl	406700 <strlen@plt>
  409a84:	add	x22, x0, x22
  409a88:	ldr	x21, [x21]
  409a8c:	b	409868 <set_file_variables@@Base+0x264>
  409a90:	cbnz	x0, 409a9c <set_file_variables@@Base+0x498>
  409a94:	ldr	x0, [x21, #16]
  409a98:	ldr	x0, [x0]
  409a9c:	add	x20, x20, #0x1
  409aa0:	bl	406700 <strlen@plt>
  409aa4:	add	x20, x0, x20
  409aa8:	b	409a88 <set_file_variables@@Base+0x484>
  409aac:	ldrb	w0, [x26, #33]
  409ab0:	mov	w1, #0x1a                  	// #26
  409ab4:	tst	w1, w0
  409ab8:	b.ne	409b24 <set_file_variables@@Base+0x520>  // b.any
  409abc:	ldr	x23, [x26, #8]
  409ac0:	cbnz	x23, 409acc <set_file_variables@@Base+0x4c8>
  409ac4:	ldr	x0, [x26, #16]
  409ac8:	ldr	x23, [x0]
  409acc:	mov	x0, x23
  409ad0:	bl	408a20 <ar_name@@Base>
  409ad4:	cbz	w0, 409b2c <set_file_variables@@Base+0x528>
  409ad8:	mov	w1, #0x28                  	// #40
  409adc:	mov	x0, x23
  409ae0:	bl	406c40 <strchr@plt>
  409ae4:	add	x23, x0, #0x1
  409ae8:	mov	x0, x23
  409aec:	bl	406700 <strlen@plt>
  409af0:	sub	x28, x0, #0x1
  409af4:	mov	x0, x24
  409af8:	add	x24, x24, x28
  409afc:	mov	x2, x28
  409b00:	mov	x1, x23
  409b04:	bl	4066c0 <memcpy@plt>
  409b08:	strb	w27, [x24], #1
  409b0c:	ldrb	w0, [x26, #33]
  409b10:	tbnz	w0, #0, 409b24 <set_file_variables@@Base+0x520>
  409b14:	ldr	w0, [x25]
  409b18:	cbnz	w0, 409b24 <set_file_variables@@Base+0x520>
  409b1c:	sub	x20, x20, #0x1
  409b20:	sub	x20, x20, x28
  409b24:	ldr	x26, [x26]
  409b28:	b	4098c0 <set_file_variables@@Base+0x2bc>
  409b2c:	mov	x0, x23
  409b30:	bl	406700 <strlen@plt>
  409b34:	mov	x28, x0
  409b38:	b	409af4 <set_file_variables@@Base+0x4f0>
  409b3c:	ldrb	w0, [x20, #33]
  409b40:	tst	w0, #0x18
  409b44:	b.ne	409b78 <set_file_variables@@Base+0x574>  // b.any
  409b48:	mov	x1, x20
  409b4c:	add	x0, x29, #0x78
  409b50:	bl	4107ac <hash_find_slot@@Base>
  409b54:	mov	x2, x0
  409b58:	ldr	x1, [x0]
  409b5c:	cbz	x1, 409b6c <set_file_variables@@Base+0x568>
  409b60:	ldr	x0, [x22, #64]
  409b64:	cmp	x1, x0
  409b68:	b.ne	409b80 <set_file_variables@@Base+0x57c>  // b.any
  409b6c:	mov	x1, x20
  409b70:	add	x0, x29, #0x78
  409b74:	bl	4108b8 <hash_insert_at@@Base>
  409b78:	ldr	x20, [x20]
  409b7c:	b	409968 <set_file_variables@@Base+0x364>
  409b80:	ldrb	w2, [x20, #33]
  409b84:	ldrb	w0, [x1, #33]
  409b88:	eor	w2, w2, w0
  409b8c:	tbz	w2, #1, 409b78 <set_file_variables@@Base+0x574>
  409b90:	and	w0, w0, #0xfffffffd
  409b94:	strb	w0, [x1, #33]
  409b98:	ldrb	w0, [x20, #33]
  409b9c:	and	w0, w0, #0xfffffffd
  409ba0:	strb	w0, [x20, #33]
  409ba4:	b	409b78 <set_file_variables@@Base+0x574>
  409ba8:	ldrb	w0, [x22, #33]
  409bac:	tst	w0, #0x18
  409bb0:	b.ne	409c20 <set_file_variables@@Base+0x61c>  // b.any
  409bb4:	mov	x1, x22
  409bb8:	add	x0, x29, #0x78
  409bbc:	bl	41088c <hash_find_item@@Base>
  409bc0:	cmp	x22, x0
  409bc4:	b.ne	409c20 <set_file_variables@@Base+0x61c>  // b.any
  409bc8:	ldr	x20, [x22, #8]
  409bcc:	cbnz	x20, 409bd8 <set_file_variables@@Base+0x5d4>
  409bd0:	ldr	x0, [x22, #16]
  409bd4:	ldr	x20, [x0]
  409bd8:	mov	x0, x20
  409bdc:	bl	408a20 <ar_name@@Base>
  409be0:	cbz	w0, 409c28 <set_file_variables@@Base+0x624>
  409be4:	mov	w1, #0x28                  	// #40
  409be8:	mov	x0, x20
  409bec:	bl	406c40 <strchr@plt>
  409bf0:	add	x20, x0, #0x1
  409bf4:	mov	x0, x20
  409bf8:	bl	406700 <strlen@plt>
  409bfc:	sub	x28, x0, #0x1
  409c00:	ldrb	w0, [x22, #33]
  409c04:	mov	x2, x28
  409c08:	mov	x1, x20
  409c0c:	tbz	w0, #1, 409c38 <set_file_variables@@Base+0x634>
  409c10:	mov	x0, x23
  409c14:	add	x23, x23, x28
  409c18:	bl	4066c0 <memcpy@plt>
  409c1c:	strb	w27, [x23], #1
  409c20:	ldr	x22, [x22]
  409c24:	b	409984 <set_file_variables@@Base+0x380>
  409c28:	mov	x0, x20
  409c2c:	bl	406700 <strlen@plt>
  409c30:	mov	x28, x0
  409c34:	b	409c00 <set_file_variables@@Base+0x5fc>
  409c38:	mov	x0, x25
  409c3c:	add	x25, x25, x28
  409c40:	bl	4066c0 <memcpy@plt>
  409c44:	strb	w27, [x25], #1
  409c48:	ldrb	w0, [x22, #33]
  409c4c:	tbnz	w0, #0, 409c5c <set_file_variables@@Base+0x658>
  409c50:	ldr	x0, [x29, #104]
  409c54:	ldr	w0, [x0]
  409c58:	cbz	w0, 409c20 <set_file_variables@@Base+0x61c>
  409c5c:	mov	x0, x24
  409c60:	add	x24, x24, x28
  409c64:	mov	x2, x28
  409c68:	mov	x1, x20
  409c6c:	bl	4066c0 <memcpy@plt>
  409c70:	strb	w27, [x24], #1
  409c74:	b	409c20 <set_file_variables@@Base+0x61c>

0000000000409c78 <chop_commands@@Base>:
  409c78:	cbz	x0, 409f18 <chop_commands@@Base+0x2a0>
  409c7c:	stp	x29, x30, [sp, #-112]!
  409c80:	mov	x29, sp
  409c84:	stp	x21, x22, [sp, #32]
  409c88:	mov	x21, x0
  409c8c:	ldr	x0, [x0, #32]
  409c90:	stp	x19, x20, [sp, #16]
  409c94:	stp	x23, x24, [sp, #48]
  409c98:	stp	x25, x26, [sp, #64]
  409c9c:	stp	x27, x28, [sp, #80]
  409ca0:	cbnz	x0, 409d7c <chop_commands@@Base+0x104>
  409ca4:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  409ca8:	ldr	w0, [x0, #2052]
  409cac:	cbz	w0, 409cf4 <chop_commands@@Base+0x7c>
  409cb0:	ldr	x0, [x21, #24]
  409cb4:	bl	406700 <strlen@plt>
  409cb8:	mov	x19, x0
  409cbc:	mov	x0, #0x8                   	// #8
  409cc0:	bl	416a54 <xmalloc@@Base>
  409cc4:	mov	x20, x0
  409cc8:	ldr	x0, [x21, #24]
  409ccc:	bl	416c24 <xstrdup@@Base>
  409cd0:	str	x0, [x20]
  409cd4:	cbz	x19, 409cec <chop_commands@@Base+0x74>
  409cd8:	sub	x19, x19, #0x1
  409cdc:	ldrb	w1, [x0, x19]
  409ce0:	cmp	w1, #0xa
  409ce4:	b.ne	409cec <chop_commands@@Base+0x74>  // b.any
  409ce8:	strb	wzr, [x0, x19]
  409cec:	mov	w19, #0x1                   	// #1
  409cf0:	b	409d30 <chop_commands@@Base+0xb8>
  409cf4:	mov	x0, #0x28                  	// #40
  409cf8:	bl	416a54 <xmalloc@@Base>
  409cfc:	ldr	x22, [x21, #24]
  409d00:	mov	x20, x0
  409d04:	mov	w23, #0x0                   	// #0
  409d08:	mov	w24, #0x5                   	// #5
  409d0c:	ldrb	w0, [x22]
  409d10:	cbnz	w0, 409d98 <chop_commands@@Base+0x120>
  409d14:	mov	w19, w23
  409d18:	cmp	w23, w24
  409d1c:	b.eq	409d30 <chop_commands@@Base+0xb8>  // b.none
  409d20:	mov	x0, x20
  409d24:	ubfiz	x1, x19, #3, #16
  409d28:	bl	416aa0 <xrealloc@@Base>
  409d2c:	mov	x20, x0
  409d30:	ldrb	w0, [x21, #51]
  409d34:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  409d38:	str	x20, [x21, #32]
  409d3c:	mov	x26, #0x5                   	// #5
  409d40:	and	w0, w0, #0xfffffffe
  409d44:	strh	w19, [x21, #48]
  409d48:	strb	w0, [x21, #51]
  409d4c:	adrp	x24, 422000 <fd_inherit@@Base+0x20>
  409d50:	adrp	x25, 422000 <fd_inherit@@Base+0x20>
  409d54:	add	x23, x23, #0x454
  409d58:	add	x24, x24, #0xaa6
  409d5c:	add	x25, x25, #0xaae
  409d60:	mov	w0, w19
  409d64:	mov	w27, #0x0                   	// #0
  409d68:	bl	416a54 <xmalloc@@Base>
  409d6c:	movk	x26, #0x20, lsl #16
  409d70:	str	x0, [x21, #40]
  409d74:	cmp	w27, w19
  409d78:	b.cc	409e50 <chop_commands@@Base+0x1d8>  // b.lo, b.ul, b.last
  409d7c:	ldp	x19, x20, [sp, #16]
  409d80:	ldp	x21, x22, [sp, #32]
  409d84:	ldp	x23, x24, [sp, #48]
  409d88:	ldp	x25, x26, [sp, #64]
  409d8c:	ldp	x27, x28, [sp, #80]
  409d90:	ldp	x29, x30, [sp], #112
  409d94:	ret
  409d98:	mov	x0, x22
  409d9c:	mov	w1, #0xa                   	// #10
  409da0:	bl	406c40 <strchr@plt>
  409da4:	mov	x19, x0
  409da8:	cbnz	x0, 409e08 <chop_commands@@Base+0x190>
  409dac:	mov	x0, x22
  409db0:	bl	406700 <strlen@plt>
  409db4:	add	x19, x22, x0
  409db8:	cmp	w23, w24
  409dbc:	b.ne	409dd4 <chop_commands@@Base+0x15c>  // b.any
  409dc0:	add	w24, w23, #0x2
  409dc4:	mov	x0, x20
  409dc8:	ubfiz	x1, x24, #3, #17
  409dcc:	bl	416aa0 <xrealloc@@Base>
  409dd0:	mov	x20, x0
  409dd4:	add	w25, w23, #0x1
  409dd8:	ubfiz	x23, x23, #3, #16
  409ddc:	sub	x1, x19, x22
  409de0:	mov	x0, x22
  409de4:	bl	416c40 <xstrndup@@Base>
  409de8:	and	w25, w25, #0xffff
  409dec:	str	x0, [x20, x23]
  409df0:	ldrb	w0, [x19]
  409df4:	cbz	w0, 409dfc <chop_commands@@Base+0x184>
  409df8:	add	x19, x19, #0x1
  409dfc:	mov	x22, x19
  409e00:	mov	w23, w25
  409e04:	b	409d0c <chop_commands@@Base+0x94>
  409e08:	cmp	x22, x0
  409e0c:	b.cs	409db8 <chop_commands@@Base+0x140>  // b.hs, b.nlast
  409e10:	ldurb	w0, [x0, #-1]
  409e14:	cmp	w0, #0x5c
  409e18:	b.ne	409db8 <chop_commands@@Base+0x140>  // b.any
  409e1c:	sub	x0, x19, #0x2
  409e20:	mov	w1, #0x1                   	// #1
  409e24:	cmp	x22, x0
  409e28:	b.hi	409e38 <chop_commands@@Base+0x1c0>  // b.pmore
  409e2c:	ldrb	w2, [x0]
  409e30:	cmp	w2, #0x5c
  409e34:	b.eq	409e44 <chop_commands@@Base+0x1cc>  // b.none
  409e38:	cbz	w1, 409db8 <chop_commands@@Base+0x140>
  409e3c:	add	x0, x19, #0x1
  409e40:	b	409d9c <chop_commands@@Base+0x124>
  409e44:	eor	w1, w1, #0x1
  409e48:	sub	x0, x0, #0x1
  409e4c:	b	409e24 <chop_commands@@Base+0x1ac>
  409e50:	ubfiz	x0, x27, #3, #16
  409e54:	and	x28, x27, #0xffff
  409e58:	mov	w22, #0x0                   	// #0
  409e5c:	ldr	x2, [x20, x0]
  409e60:	ldrb	w0, [x2]
  409e64:	ldrb	w1, [x2]
  409e68:	ldrh	w0, [x23, x0, lsl #1]
  409e6c:	tbnz	w0, #1, 409ee4 <chop_commands@@Base+0x26c>
  409e70:	sub	w0, w1, #0x2b
  409e74:	and	w0, w0, #0xff
  409e78:	cmp	w0, #0x15
  409e7c:	b.hi	409e88 <chop_commands@@Base+0x210>  // b.pmore
  409e80:	lsr	x0, x26, x0
  409e84:	tbnz	w0, #0, 409ee4 <chop_commands@@Base+0x26c>
  409e88:	tbnz	w22, #0, 409eb8 <chop_commands@@Base+0x240>
  409e8c:	mov	x0, x2
  409e90:	mov	x1, x24
  409e94:	str	x2, [sp, #104]
  409e98:	bl	406d50 <strstr@plt>
  409e9c:	ldr	x2, [sp, #104]
  409ea0:	cbnz	x0, 409eb4 <chop_commands@@Base+0x23c>
  409ea4:	mov	x1, x25
  409ea8:	mov	x0, x2
  409eac:	bl	406d50 <strstr@plt>
  409eb0:	cbz	x0, 409eb8 <chop_commands@@Base+0x240>
  409eb4:	orr	w22, w22, #0x1
  409eb8:	ldr	x0, [x21, #40]
  409ebc:	add	w27, w27, #0x1
  409ec0:	and	w27, w27, #0xffff
  409ec4:	strb	w22, [x0, x28]
  409ec8:	and	w22, w22, #0x1
  409ecc:	ldrb	w0, [x21, #51]
  409ed0:	ubfx	x1, x0, #0, #1
  409ed4:	orr	w22, w22, w1
  409ed8:	bfxil	w0, w22, #0, #1
  409edc:	strb	w0, [x21, #51]
  409ee0:	b	409d74 <chop_commands@@Base+0xfc>
  409ee4:	add	x2, x2, #0x1
  409ee8:	cmp	w1, #0x2d
  409eec:	b.eq	409f10 <chop_commands@@Base+0x298>  // b.none
  409ef0:	cmp	w1, #0x40
  409ef4:	b.eq	409f08 <chop_commands@@Base+0x290>  // b.none
  409ef8:	cmp	w1, #0x2b
  409efc:	b.ne	409e60 <chop_commands@@Base+0x1e8>  // b.any
  409f00:	orr	w22, w22, #0x1
  409f04:	b	409e60 <chop_commands@@Base+0x1e8>
  409f08:	orr	w22, w22, #0x2
  409f0c:	b	409e60 <chop_commands@@Base+0x1e8>
  409f10:	orr	w22, w22, #0x4
  409f14:	b	409e60 <chop_commands@@Base+0x1e8>
  409f18:	ret

0000000000409f1c <execute_file_commands@@Base>:
  409f1c:	stp	x29, x30, [sp, #-32]!
  409f20:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  409f24:	mov	x3, #0x5                   	// #5
  409f28:	mov	x29, sp
  409f2c:	str	x19, [sp, #16]
  409f30:	mov	x19, x0
  409f34:	ldr	x0, [x0, #32]
  409f38:	add	x2, x2, #0x454
  409f3c:	movk	x3, #0x20, lsl #16
  409f40:	ldr	x1, [x0, #24]
  409f44:	ldrb	w0, [x1]
  409f48:	cbnz	w0, 409f74 <execute_file_commands@@Base+0x58>
  409f4c:	mov	x0, x19
  409f50:	mov	w1, #0x2                   	// #2
  409f54:	bl	40cea0 <set_command_state@@Base>
  409f58:	ldrb	w0, [x19, #136]
  409f5c:	and	w0, w0, #0xfffffffc
  409f60:	strb	w0, [x19, #136]
  409f64:	mov	x0, x19
  409f68:	ldr	x19, [sp, #16]
  409f6c:	ldp	x29, x30, [sp], #32
  409f70:	b	41c81c <notice_finished_file@@Base>
  409f74:	ldrh	w4, [x2, w0, sxtw #1]
  409f78:	tst	w4, #0x6
  409f7c:	b.ne	409f98 <execute_file_commands@@Base+0x7c>  // b.any
  409f80:	sub	w0, w0, #0x2b
  409f84:	and	w0, w0, #0xff
  409f88:	cmp	w0, #0x15
  409f8c:	b.hi	409fa0 <execute_file_commands@@Base+0x84>  // b.pmore
  409f90:	lsr	x0, x3, x0
  409f94:	tbz	w0, #0, 409fa0 <execute_file_commands@@Base+0x84>
  409f98:	add	x1, x1, #0x1
  409f9c:	b	409f44 <execute_file_commands@@Base+0x28>
  409fa0:	mov	w1, #0x0                   	// #0
  409fa4:	mov	x0, x19
  409fa8:	bl	420b80 <initialize_file_variables@@Base>
  409fac:	mov	x0, x19
  409fb0:	bl	409604 <set_file_variables@@Base>
  409fb4:	ldrb	w0, [x19, #136]
  409fb8:	tbz	w0, #6, 409fc4 <execute_file_commands@@Base+0xa8>
  409fbc:	ldr	x0, [x19]
  409fc0:	bl	4150fc <unload_file@@Base>
  409fc4:	mov	x0, x19
  409fc8:	ldr	x19, [sp, #16]
  409fcc:	ldp	x29, x30, [sp], #32
  409fd0:	b	414784 <new_job@@Base>

0000000000409fd4 <delete_child_targets@@Base>:
  409fd4:	stp	x29, x30, [sp, #-32]!
  409fd8:	mov	x29, sp
  409fdc:	stp	x19, x20, [sp, #16]
  409fe0:	mov	x19, x0
  409fe4:	ldrb	w0, [x0, #80]
  409fe8:	tbnz	w0, #3, 40a018 <delete_child_targets@@Base+0x44>
  409fec:	ldr	w0, [x19, #76]
  409ff0:	tbnz	w0, #31, 40a018 <delete_child_targets@@Base+0x44>
  409ff4:	ldr	x0, [x19, #40]
  409ff8:	mov	x1, #0x0                   	// #0
  409ffc:	bl	409418 <ar_member_touch@@Base+0x20c>
  40a000:	ldr	x0, [x19, #40]
  40a004:	ldr	x20, [x0, #48]
  40a008:	cbnz	x20, 40a024 <delete_child_targets@@Base+0x50>
  40a00c:	ldrb	w0, [x19, #80]
  40a010:	orr	w0, w0, #0x8
  40a014:	strb	w0, [x19, #80]
  40a018:	ldp	x19, x20, [sp, #16]
  40a01c:	ldp	x29, x30, [sp], #32
  40a020:	ret
  40a024:	ldr	x0, [x19, #40]
  40a028:	ldr	x1, [x0]
  40a02c:	ldr	x0, [x20, #16]
  40a030:	bl	409418 <ar_member_touch@@Base+0x20c>
  40a034:	ldr	x20, [x20]
  40a038:	b	40a008 <delete_child_targets@@Base+0x34>

000000000040a03c <fatal_error_signal@@Base>:
  40a03c:	stp	x29, x30, [sp, #-48]!
  40a040:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40a044:	mov	w2, #0x1                   	// #1
  40a048:	mov	x29, sp
  40a04c:	str	w2, [x1, #480]
  40a050:	mov	x1, #0x0                   	// #0
  40a054:	stp	x19, x20, [sp, #16]
  40a058:	mov	w19, w0
  40a05c:	str	x21, [sp, #32]
  40a060:	bl	4068f0 <signal@plt>
  40a064:	cmp	w19, #0xf
  40a068:	b.ne	40a0dc <fatal_error_signal@@Base+0xa0>  // b.any
  40a06c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a070:	ldr	x20, [x0, #952]
  40a074:	cbnz	x20, 40a0b8 <fatal_error_signal@@Base+0x7c>
  40a078:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a07c:	mov	x21, x0
  40a080:	ldr	x20, [x0, #952]
  40a084:	cbnz	x20, 40a108 <fatal_error_signal@@Base+0xcc>
  40a088:	ldr	x20, [x21, #952]
  40a08c:	cbnz	x20, 40a12c <fatal_error_signal@@Base+0xf0>
  40a090:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40a094:	add	x20, x20, #0x424
  40a098:	ldr	w0, [x20]
  40a09c:	cbnz	w0, 40a13c <fatal_error_signal@@Base+0x100>
  40a0a0:	mov	w0, #0x1                   	// #1
  40a0a4:	bl	40c390 <remove_intermediates@@Base>
  40a0a8:	cmp	w19, #0x3
  40a0ac:	b.ne	40a14c <fatal_error_signal@@Base+0x110>  // b.any
  40a0b0:	mov	w0, #0x1                   	// #1
  40a0b4:	bl	406720 <exit@plt>
  40a0b8:	ldrb	w0, [x20, #80]
  40a0bc:	tbnz	w0, #0, 40a0d4 <fatal_error_signal@@Base+0x98>
  40a0c0:	ldr	w0, [x20, #76]
  40a0c4:	cmp	w0, #0x0
  40a0c8:	b.le	40a0d4 <fatal_error_signal@@Base+0x98>
  40a0cc:	mov	w1, #0xf                   	// #15
  40a0d0:	bl	406850 <kill@plt>
  40a0d4:	ldr	x20, [x20, #32]
  40a0d8:	b	40a074 <fatal_error_signal@@Base+0x38>
  40a0dc:	sub	w0, w19, #0x1
  40a0e0:	cmp	w0, #0x2
  40a0e4:	b.ls	40a078 <fatal_error_signal@@Base+0x3c>  // b.plast
  40a0e8:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40a0ec:	add	x20, x20, #0x424
  40a0f0:	ldr	w0, [x20]
  40a0f4:	cbz	w0, 40a0a0 <fatal_error_signal@@Base+0x64>
  40a0f8:	mov	w1, #0x1                   	// #1
  40a0fc:	mov	w0, w1
  40a100:	bl	413a9c <reap_children@@Base>
  40a104:	b	40a0f0 <fatal_error_signal@@Base+0xb4>
  40a108:	ldrb	w0, [x20, #80]
  40a10c:	tbz	w0, #0, 40a124 <fatal_error_signal@@Base+0xe8>
  40a110:	ldr	w0, [x20, #76]
  40a114:	cmp	w0, #0x0
  40a118:	b.le	40a124 <fatal_error_signal@@Base+0xe8>
  40a11c:	mov	w1, w19
  40a120:	bl	4222bc <remote_kill@@Base>
  40a124:	ldr	x20, [x20, #32]
  40a128:	b	40a084 <fatal_error_signal@@Base+0x48>
  40a12c:	mov	x0, x20
  40a130:	bl	409fd4 <delete_child_targets@@Base>
  40a134:	ldr	x20, [x20, #32]
  40a138:	b	40a08c <fatal_error_signal@@Base+0x50>
  40a13c:	mov	w1, #0x0                   	// #0
  40a140:	mov	w0, #0x1                   	// #1
  40a144:	bl	413a9c <reap_children@@Base>
  40a148:	b	40a098 <fatal_error_signal@@Base+0x5c>
  40a14c:	bl	406920 <getpid@plt>
  40a150:	mov	w1, w19
  40a154:	bl	406850 <kill@plt>
  40a158:	tbz	w0, #31, 40a168 <fatal_error_signal@@Base+0x12c>
  40a15c:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  40a160:	add	x0, x0, #0xab6
  40a164:	bl	417590 <pfatal_with_name@@Base>
  40a168:	ldp	x19, x20, [sp, #16]
  40a16c:	ldr	x21, [sp, #32]
  40a170:	ldp	x29, x30, [sp], #48
  40a174:	ret

000000000040a178 <print_commands@@Base>:
  40a178:	stp	x29, x30, [sp, #-48]!
  40a17c:	mov	w2, #0x5                   	// #5
  40a180:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  40a184:	mov	x29, sp
  40a188:	add	x1, x1, #0xabb
  40a18c:	stp	x19, x20, [sp, #16]
  40a190:	mov	x19, x0
  40a194:	mov	x0, #0x0                   	// #0
  40a198:	str	x21, [sp, #32]
  40a19c:	bl	406d60 <dcgettext@plt>
  40a1a0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40a1a4:	ldr	x1, [x1, #400]
  40a1a8:	bl	406710 <fputs@plt>
  40a1ac:	ldr	x0, [x19]
  40a1b0:	mov	w2, #0x5                   	// #5
  40a1b4:	cbnz	x0, 40a1ec <print_commands@@Base+0x74>
  40a1b8:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  40a1bc:	add	x1, x1, #0xad0
  40a1c0:	bl	406d60 <dcgettext@plt>
  40a1c4:	bl	406b80 <puts@plt>
  40a1c8:	ldr	x3, [x19, #24]
  40a1cc:	mov	w20, #0x1                   	// #1
  40a1d0:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  40a1d4:	ldrb	w0, [x3]
  40a1d8:	cbnz	w0, 40a258 <print_commands@@Base+0xe0>
  40a1dc:	ldp	x19, x20, [sp, #16]
  40a1e0:	ldr	x21, [sp, #32]
  40a1e4:	ldp	x29, x30, [sp], #48
  40a1e8:	ret
  40a1ec:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  40a1f0:	mov	x0, #0x0                   	// #0
  40a1f4:	add	x1, x1, #0xadd
  40a1f8:	bl	406d60 <dcgettext@plt>
  40a1fc:	ldp	x1, x2, [x19]
  40a200:	bl	406df0 <printf@plt>
  40a204:	b	40a1c8 <print_commands@@Base+0x50>
  40a208:	sub	w0, w20, w0
  40a20c:	cmp	w1, #0x5c
  40a210:	csel	w0, w0, wzr, eq  // eq = none
  40a214:	add	x19, x19, #0x1
  40a218:	ldrb	w1, [x19]
  40a21c:	cbz	w1, 40a22c <print_commands@@Base+0xb4>
  40a220:	cmp	w1, #0xa
  40a224:	b.ne	40a208 <print_commands@@Base+0x90>  // b.any
  40a228:	cbnz	w0, 40a250 <print_commands@@Base+0xd8>
  40a22c:	ldrb	w1, [x21, #164]
  40a230:	sub	w2, w19, w3
  40a234:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  40a238:	add	x0, x0, #0xaf6
  40a23c:	bl	406df0 <printf@plt>
  40a240:	ldrb	w0, [x19]
  40a244:	cmp	w0, #0xa
  40a248:	cinc	x3, x19, eq  // eq = none
  40a24c:	b	40a1d4 <print_commands@@Base+0x5c>
  40a250:	mov	w0, #0x0                   	// #0
  40a254:	b	40a214 <print_commands@@Base+0x9c>
  40a258:	mov	x19, x3
  40a25c:	mov	w0, #0x0                   	// #0
  40a260:	b	40a218 <print_commands@@Base+0xa0>

000000000040a264 <set_default_suffixes@@Base>:
  40a264:	stp	x29, x30, [sp, #-64]!
  40a268:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  40a26c:	add	x0, x0, #0xa9a
  40a270:	mov	x29, sp
  40a274:	stp	x19, x20, [sp, #16]
  40a278:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  40a27c:	str	x21, [sp, #32]
  40a280:	bl	41f174 <strcache_add@@Base>
  40a284:	bl	40bec0 <enter_file@@Base>
  40a288:	ldrb	w1, [x0, #136]
  40a28c:	str	x0, [x20, #2208]
  40a290:	orr	w1, w1, #0x10
  40a294:	strb	w1, [x0, #136]
  40a298:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a29c:	ldr	w0, [x0, #3348]
  40a2a0:	cbz	w0, 40a2e4 <set_default_suffixes@@Base+0x80>
  40a2a4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a2a8:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40a2ac:	add	x2, x2, #0x819
  40a2b0:	mov	x6, #0x0                   	// #0
  40a2b4:	ldr	x0, [x0, #304]
  40a2b8:	mov	w4, #0x0                   	// #0
  40a2bc:	mov	w3, #0x0                   	// #0
  40a2c0:	ldr	x5, [x0, #8]
  40a2c4:	mov	x1, #0x8                   	// #8
  40a2c8:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  40a2cc:	add	x0, x0, #0xa9b
  40a2d0:	bl	41f978 <define_variable_in_set@@Base>
  40a2d4:	ldp	x19, x20, [sp, #16]
  40a2d8:	ldr	x21, [sp, #32]
  40a2dc:	ldp	x29, x30, [sp], #64
  40a2e0:	ret
  40a2e4:	mov	w4, #0x0                   	// #0
  40a2e8:	mov	x3, #0x0                   	// #0
  40a2ec:	mov	w2, #0x1                   	// #1
  40a2f0:	mov	x1, #0x28                  	// #40
  40a2f4:	add	x0, sp, #0x38
  40a2f8:	adrp	x19, 43d000 <memcpy@GLIBC_2.17>
  40a2fc:	add	x19, x19, #0x408
  40a300:	str	x19, [sp, #56]
  40a304:	bl	419c0c <parse_file_seq@@Base>
  40a308:	ldr	x21, [x20, #2208]
  40a30c:	mov	x1, #0x0                   	// #0
  40a310:	bl	40c660 <enter_prereqs@@Base>
  40a314:	str	x0, [x21, #24]
  40a318:	ldr	x0, [x20, #2208]
  40a31c:	ldr	x0, [x0, #24]
  40a320:	cbnz	x0, 40a344 <set_default_suffixes@@Base+0xe0>
  40a324:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a328:	mov	x2, x19
  40a32c:	mov	x6, #0x0                   	// #0
  40a330:	mov	w4, #0x0                   	// #0
  40a334:	ldr	x0, [x0, #304]
  40a338:	mov	w3, #0x0                   	// #0
  40a33c:	ldr	x5, [x0, #8]
  40a340:	b	40a2c4 <set_default_suffixes@@Base+0x60>
  40a344:	ldr	x2, [x0, #16]
  40a348:	ldrb	w1, [x2, #136]
  40a34c:	orr	w1, w1, #0x10
  40a350:	strb	w1, [x2, #136]
  40a354:	ldr	x0, [x0]
  40a358:	b	40a320 <set_default_suffixes@@Base+0xbc>

000000000040a35c <install_default_suffix_rules@@Base>:
  40a35c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a360:	ldr	w0, [x0, #3348]
  40a364:	cbz	w0, 40a3cc <install_default_suffix_rules@@Base+0x70>
  40a368:	ret
  40a36c:	bl	41f174 <strcache_add@@Base>
  40a370:	add	x19, x19, #0x10
  40a374:	bl	40bec0 <enter_file@@Base>
  40a378:	mov	x20, x0
  40a37c:	mov	x0, #0x38                  	// #56
  40a380:	bl	416a54 <xmalloc@@Base>
  40a384:	mov	x21, x0
  40a388:	str	x0, [x20, #32]
  40a38c:	str	xzr, [x0]
  40a390:	ldur	x0, [x19, #-8]
  40a394:	bl	416c24 <xstrdup@@Base>
  40a398:	str	x0, [x21, #24]
  40a39c:	ldr	x0, [x20, #32]
  40a3a0:	strb	w22, [x0, #50]
  40a3a4:	str	xzr, [x0, #32]
  40a3a8:	ldrb	w0, [x20, #136]
  40a3ac:	orr	w0, w0, #0x10
  40a3b0:	strb	w0, [x20, #136]
  40a3b4:	ldr	x0, [x19]
  40a3b8:	cbnz	x0, 40a36c <install_default_suffix_rules@@Base+0x10>
  40a3bc:	ldp	x19, x20, [sp, #16]
  40a3c0:	ldp	x21, x22, [sp, #32]
  40a3c4:	ldp	x29, x30, [sp], #48
  40a3c8:	ret
  40a3cc:	stp	x29, x30, [sp, #-48]!
  40a3d0:	mov	x29, sp
  40a3d4:	stp	x19, x20, [sp, #16]
  40a3d8:	adrp	x19, 43d000 <memcpy@GLIBC_2.17>
  40a3dc:	add	x19, x19, #0x408
  40a3e0:	add	x19, x19, #0x98
  40a3e4:	stp	x21, x22, [sp, #32]
  40a3e8:	mov	w22, #0x9                   	// #9
  40a3ec:	b	40a3b4 <install_default_suffix_rules@@Base+0x58>

000000000040a3f0 <install_default_implicit_rules@@Base>:
  40a3f0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a3f4:	ldr	w0, [x0, #3348]
  40a3f8:	cbz	w0, 40a430 <install_default_implicit_rules@@Base+0x40>
  40a3fc:	ret
  40a400:	mov	x0, x20
  40a404:	add	x20, x20, #0x18
  40a408:	mov	w1, #0x0                   	// #0
  40a40c:	bl	41e720 <install_pattern_rule@@Base>
  40a410:	ldr	x0, [x20]
  40a414:	cbnz	x0, 40a400 <install_default_implicit_rules@@Base+0x10>
  40a418:	add	x19, x19, #0x430
  40a41c:	ldr	x0, [x19]
  40a420:	cbnz	x0, 40a44c <install_default_implicit_rules@@Base+0x5c>
  40a424:	ldp	x19, x20, [sp, #16]
  40a428:	ldp	x29, x30, [sp], #32
  40a42c:	ret
  40a430:	stp	x29, x30, [sp, #-32]!
  40a434:	mov	x29, sp
  40a438:	stp	x19, x20, [sp, #16]
  40a43c:	adrp	x19, 43d000 <memcpy@GLIBC_2.17>
  40a440:	add	x19, x19, #0x408
  40a444:	add	x20, x19, #0x3b8
  40a448:	b	40a410 <install_default_implicit_rules@@Base+0x20>
  40a44c:	mov	x0, x19
  40a450:	mov	w1, #0x1                   	// #1
  40a454:	add	x19, x19, #0x18
  40a458:	bl	41e720 <install_pattern_rule@@Base>
  40a45c:	b	40a41c <install_default_implicit_rules@@Base+0x2c>

000000000040a460 <define_default_variables@@Base>:
  40a460:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a464:	ldr	w0, [x0, #3344]
  40a468:	cbz	w0, 40a4b8 <define_default_variables@@Base+0x58>
  40a46c:	ret
  40a470:	mov	x0, x20
  40a474:	bl	406700 <strlen@plt>
  40a478:	ldr	x1, [x21, #304]
  40a47c:	add	x19, x19, #0x10
  40a480:	ldur	x2, [x19, #-8]
  40a484:	mov	x6, #0x0                   	// #0
  40a488:	ldr	x5, [x1, #8]
  40a48c:	mov	w4, #0x1                   	// #1
  40a490:	mov	x1, x0
  40a494:	mov	w3, #0x0                   	// #0
  40a498:	mov	x0, x20
  40a49c:	bl	41f978 <define_variable_in_set@@Base>
  40a4a0:	ldr	x20, [x19]
  40a4a4:	cbnz	x20, 40a470 <define_default_variables@@Base+0x10>
  40a4a8:	ldp	x19, x20, [sp, #16]
  40a4ac:	ldr	x21, [sp, #32]
  40a4b0:	ldp	x29, x30, [sp], #48
  40a4b4:	ret
  40a4b8:	stp	x29, x30, [sp, #-48]!
  40a4bc:	mov	x29, sp
  40a4c0:	stp	x19, x20, [sp, #16]
  40a4c4:	adrp	x19, 43d000 <memcpy@GLIBC_2.17>
  40a4c8:	add	x19, x19, #0x408
  40a4cc:	add	x19, x19, #0x4c0
  40a4d0:	str	x21, [sp, #32]
  40a4d4:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  40a4d8:	b	40a4a0 <define_default_variables@@Base+0x40>

000000000040a4dc <undefine_default_variables@@Base>:
  40a4dc:	stp	x29, x30, [sp, #-32]!
  40a4e0:	mov	x29, sp
  40a4e4:	stp	x19, x20, [sp, #16]
  40a4e8:	adrp	x19, 43d000 <memcpy@GLIBC_2.17>
  40a4ec:	add	x19, x19, #0x408
  40a4f0:	add	x19, x19, #0x4c0
  40a4f4:	ldr	x20, [x19]
  40a4f8:	cbnz	x20, 40a508 <undefine_default_variables@@Base+0x2c>
  40a4fc:	ldp	x19, x20, [sp, #16]
  40a500:	ldp	x29, x30, [sp], #32
  40a504:	ret
  40a508:	mov	x0, x20
  40a50c:	bl	406700 <strlen@plt>
  40a510:	mov	x3, #0x0                   	// #0
  40a514:	mov	x1, x0
  40a518:	mov	w2, #0x0                   	// #0
  40a51c:	mov	x0, x20
  40a520:	add	x19, x19, #0x10
  40a524:	bl	41fbf0 <undefine_variable_in_set@@Base>
  40a528:	b	40a4f4 <undefine_default_variables@@Base+0x18>
  40a52c:	ldp	x1, x0, [x0]
  40a530:	eor	w0, w0, w1, lsl #4
  40a534:	ret
  40a538:	ldp	x1, x0, [x0]
  40a53c:	eon	w0, w0, w1, lsl #4
  40a540:	ret
  40a544:	mov	x0, #0x0                   	// #0
  40a548:	ret
  40a54c:	ldr	x0, [x0]
  40a550:	ldr	x1, [x1]
  40a554:	cmp	x0, x1
  40a558:	b.eq	40a560 <undefine_default_variables@@Base+0x84>  // b.none
  40a55c:	b	406be0 <strcmp@plt>
  40a560:	mov	w0, #0x0                   	// #0
  40a564:	ret
  40a568:	stp	x29, x30, [sp, #-16]!
  40a56c:	mov	x29, sp
  40a570:	ldr	x0, [x0]
  40a574:	bl	410f48 <jhash_string@@Base>
  40a578:	mov	w0, w0
  40a57c:	ldp	x29, x30, [sp], #16
  40a580:	ret
  40a584:	stp	x29, x30, [sp, #-16]!
  40a588:	mov	x29, sp
  40a58c:	ldr	x0, [x0]
  40a590:	bl	410f48 <jhash_string@@Base>
  40a594:	mov	w0, w0
  40a598:	ldp	x29, x30, [sp], #16
  40a59c:	ret
  40a5a0:	stp	x29, x30, [sp, #-48]!
  40a5a4:	mov	x29, sp
  40a5a8:	ldr	x2, [x0]
  40a5ac:	stp	x19, x20, [sp, #16]
  40a5b0:	ldr	x1, [x2, #48]
  40a5b4:	ldr	x2, [x2, #16]
  40a5b8:	str	x21, [sp, #32]
  40a5bc:	add	x1, x2, x1, lsl #3
  40a5c0:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  40a5c4:	ldr	x3, [x2, #64]
  40a5c8:	ldr	x2, [x0, #8]
  40a5cc:	cmp	x2, x1
  40a5d0:	b.cc	40a5dc <undefine_default_variables@@Base+0x100>  // b.lo, b.ul, b.last
  40a5d4:	mov	x20, #0x0                   	// #0
  40a5d8:	b	40a65c <undefine_default_variables@@Base+0x180>
  40a5dc:	ldr	x19, [x2]
  40a5e0:	add	x4, x2, #0x8
  40a5e4:	str	x4, [x0, #8]
  40a5e8:	cbz	x19, 40a5c8 <undefine_default_variables@@Base+0xec>
  40a5ec:	cmp	x3, x19
  40a5f0:	b.eq	40a5c8 <undefine_default_variables@@Base+0xec>  // b.none
  40a5f4:	ldrsh	w2, [x19, #16]
  40a5f8:	cbnz	w2, 40a5c8 <undefine_default_variables@@Base+0xec>
  40a5fc:	adrp	x3, 43e000 <expanding_var@@Base+0x328>
  40a600:	add	x20, x3, #0x1e8
  40a604:	ldr	x1, [x19, #8]
  40a608:	ldr	x0, [x3, #488]
  40a60c:	add	x21, x1, #0x1
  40a610:	add	x1, x1, #0x19
  40a614:	cmp	x0, x1
  40a618:	b.cs	40a638 <undefine_default_variables@@Base+0x15c>  // b.hs, b.nlast
  40a61c:	lsl	x0, x0, #1
  40a620:	cmp	x0, x1
  40a624:	csel	x1, x1, x0, cc  // cc = lo, ul, last
  40a628:	str	x1, [x3, #488]
  40a62c:	ldr	x0, [x20, #8]
  40a630:	bl	416aa0 <xrealloc@@Base>
  40a634:	str	x0, [x20, #8]
  40a638:	ldr	x20, [x20, #8]
  40a63c:	mov	x0, #0x1                   	// #1
  40a640:	mov	x2, x21
  40a644:	str	x0, [x20]
  40a648:	ldrb	w0, [x19, #18]
  40a64c:	strb	w0, [x20, #18]
  40a650:	add	x0, x20, #0x13
  40a654:	ldr	x1, [x19]
  40a658:	bl	4066c0 <memcpy@plt>
  40a65c:	mov	x0, x20
  40a660:	ldp	x19, x20, [sp, #16]
  40a664:	ldr	x21, [sp, #32]
  40a668:	ldp	x29, x30, [sp], #48
  40a66c:	ret
  40a670:	ldr	x3, [x0, #8]
  40a674:	ldr	x2, [x1, #8]
  40a678:	cmp	x3, x2
  40a67c:	b.cc	40a69c <undefine_default_variables@@Base+0x1c0>  // b.lo, b.ul, b.last
  40a680:	b.ne	40a6a4 <undefine_default_variables@@Base+0x1c8>  // b.any
  40a684:	ldr	x2, [x0]
  40a688:	ldr	x1, [x1]
  40a68c:	cmp	x2, x1
  40a690:	cset	w0, ne  // ne = any
  40a694:	csinv	w0, w0, wzr, cs  // cs = hs, nlast
  40a698:	ret
  40a69c:	mov	w0, #0xffffffff            	// #-1
  40a6a0:	b	40a698 <undefine_default_variables@@Base+0x1bc>
  40a6a4:	mov	w0, #0x1                   	// #1
  40a6a8:	b	40a698 <undefine_default_variables@@Base+0x1bc>
  40a6ac:	ldr	x2, [x0, #8]
  40a6b0:	ldr	x3, [x1, #8]
  40a6b4:	subs	w2, w2, w3
  40a6b8:	b.ne	40a6d0 <undefine_default_variables@@Base+0x1f4>  // b.any
  40a6bc:	ldr	x0, [x0]
  40a6c0:	ldr	x1, [x1]
  40a6c4:	cmp	x0, x1
  40a6c8:	b.eq	40a6d0 <undefine_default_variables@@Base+0x1f4>  // b.none
  40a6cc:	b	406be0 <strcmp@plt>
  40a6d0:	mov	w0, w2
  40a6d4:	ret
  40a6d8:	stp	x29, x30, [sp, #-128]!
  40a6dc:	mov	x29, sp
  40a6e0:	stp	x19, x20, [sp, #16]
  40a6e4:	stp	x21, x22, [sp, #32]
  40a6e8:	stp	x23, x24, [sp, #48]
  40a6ec:	stp	x25, x26, [sp, #64]
  40a6f0:	stp	x27, x28, [sp, #80]
  40a6f4:	cbnz	x0, 40a71c <undefine_default_variables@@Base+0x240>
  40a6f8:	mov	w21, #0x0                   	// #0
  40a6fc:	mov	w0, w21
  40a700:	ldp	x19, x20, [sp, #16]
  40a704:	ldp	x21, x22, [sp, #32]
  40a708:	ldp	x23, x24, [sp, #48]
  40a70c:	ldp	x25, x26, [sp, #64]
  40a710:	ldp	x27, x28, [sp, #80]
  40a714:	ldp	x29, x30, [sp], #128
  40a718:	ret
  40a71c:	mov	x19, x0
  40a720:	ldr	x0, [x0, #16]
  40a724:	cbz	x0, 40a6f8 <undefine_default_variables@@Base+0x21c>
  40a728:	mov	x20, x1
  40a72c:	cbz	x1, 40a768 <undefine_default_variables@@Base+0x28c>
  40a730:	ldrb	w0, [x1]
  40a734:	cbz	w0, 40a848 <undefine_default_variables@@Base+0x36c>
  40a738:	mov	x0, x1
  40a73c:	str	x1, [sp, #104]
  40a740:	bl	406700 <strlen@plt>
  40a744:	str	x0, [sp, #112]
  40a748:	add	x1, sp, #0x68
  40a74c:	add	x0, x19, #0x10
  40a750:	bl	41088c <hash_find_item@@Base>
  40a754:	cbz	x0, 40a768 <undefine_default_variables@@Base+0x28c>
  40a758:	ldrsh	w0, [x0, #16]
  40a75c:	cmp	w0, #0x0
  40a760:	cset	w21, eq  // eq = none
  40a764:	b	40a6fc <undefine_default_variables@@Base+0x220>
  40a768:	ldr	x0, [x19, #104]
  40a76c:	cbz	x0, 40a6f8 <undefine_default_variables@@Base+0x21c>
  40a770:	bl	406e00 <__errno_location@plt>
  40a774:	add	x24, x19, #0x10
  40a778:	mov	x23, x0
  40a77c:	add	x25, x20, #0x1
  40a780:	ldr	x0, [x19, #104]
  40a784:	str	wzr, [x23]
  40a788:	bl	406a80 <readdir@plt>
  40a78c:	mov	x21, x0
  40a790:	cbnz	x0, 40a7b0 <undefine_default_variables@@Base+0x2d4>
  40a794:	ldr	w21, [x23]
  40a798:	cmp	w21, #0x4
  40a79c:	b.eq	40a780 <undefine_default_variables@@Base+0x2a4>  // b.none
  40a7a0:	cbz	w21, 40a850 <undefine_default_variables@@Base+0x374>
  40a7a4:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40a7a8:	add	x0, x0, #0x9b3
  40a7ac:	bl	417590 <pfatal_with_name@@Base>
  40a7b0:	ldr	x0, [x0]
  40a7b4:	cbz	x0, 40a780 <undefine_default_variables@@Base+0x2a4>
  40a7b8:	add	x27, x21, #0x13
  40a7bc:	mov	x0, x27
  40a7c0:	bl	406700 <strlen@plt>
  40a7c4:	add	x1, sp, #0x68
  40a7c8:	mov	x26, x0
  40a7cc:	mov	x0, x24
  40a7d0:	stp	x27, x26, [sp, #104]
  40a7d4:	bl	4107ac <hash_find_slot@@Base>
  40a7d8:	mov	x28, x0
  40a7dc:	mov	x0, #0x18                  	// #24
  40a7e0:	bl	416a54 <xmalloc@@Base>
  40a7e4:	mov	x22, x0
  40a7e8:	mov	x1, x26
  40a7ec:	mov	x0, x27
  40a7f0:	bl	41f1b4 <strcache_add_len@@Base>
  40a7f4:	str	x0, [x22]
  40a7f8:	mov	x2, x28
  40a7fc:	mov	x1, x22
  40a800:	ldrb	w0, [x21, #18]
  40a804:	str	x26, [x22, #8]
  40a808:	strh	wzr, [x22, #16]
  40a80c:	strb	w0, [x22, #18]
  40a810:	mov	x0, x24
  40a814:	bl	4108b8 <hash_insert_at@@Base>
  40a818:	cbz	x20, 40a780 <undefine_default_variables@@Base+0x2a4>
  40a81c:	cmp	x20, x27
  40a820:	b.eq	40a848 <undefine_default_variables@@Base+0x36c>  // b.none
  40a824:	ldrb	w1, [x21, #19]
  40a828:	ldrb	w0, [x20]
  40a82c:	cmp	w0, w1
  40a830:	b.ne	40a780 <undefine_default_variables@@Base+0x2a4>  // b.any
  40a834:	cbz	w0, 40a848 <undefine_default_variables@@Base+0x36c>
  40a838:	mov	x1, x25
  40a83c:	add	x0, x21, #0x14
  40a840:	bl	406be0 <strcmp@plt>
  40a844:	cbnz	w0, 40a780 <undefine_default_variables@@Base+0x2a4>
  40a848:	mov	w21, #0x1                   	// #1
  40a84c:	b	40a6fc <undefine_default_variables@@Base+0x220>
  40a850:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a854:	add	x0, x0, #0x1e8
  40a858:	ldr	w1, [x0, #16]
  40a85c:	sub	w1, w1, #0x1
  40a860:	str	w1, [x0, #16]
  40a864:	ldr	x0, [x19, #104]
  40a868:	bl	406ac0 <closedir@plt>
  40a86c:	str	xzr, [x19, #104]
  40a870:	b	40a6fc <undefine_default_variables@@Base+0x220>
  40a874:	stp	x29, x30, [sp, #-320]!
  40a878:	mov	x29, sp
  40a87c:	stp	x21, x22, [sp, #32]
  40a880:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  40a884:	add	x21, x21, #0x1e8
  40a888:	mov	x22, x0
  40a88c:	add	x1, sp, #0x40
  40a890:	stp	x19, x20, [sp, #16]
  40a894:	str	x23, [sp, #48]
  40a898:	str	x0, [sp, #64]
  40a89c:	add	x0, x21, #0x18
  40a8a0:	bl	4107ac <hash_find_slot@@Base>
  40a8a4:	mov	x19, x0
  40a8a8:	ldr	x20, [x0]
  40a8ac:	cbz	x20, 40a8c0 <undefine_default_variables@@Base+0x3e4>
  40a8b0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a8b4:	ldr	x0, [x0, #64]
  40a8b8:	cmp	x0, x20
  40a8bc:	b.ne	40a920 <undefine_default_variables@@Base+0x444>  // b.any
  40a8c0:	mov	x0, x22
  40a8c4:	bl	406700 <strlen@plt>
  40a8c8:	mov	x23, x0
  40a8cc:	mov	x0, #0x10                  	// #16
  40a8d0:	bl	416a54 <xmalloc@@Base>
  40a8d4:	mov	x20, x0
  40a8d8:	mov	x1, x23
  40a8dc:	mov	x0, x22
  40a8e0:	bl	41f1b4 <strcache_add_len@@Base>
  40a8e4:	str	x0, [x20]
  40a8e8:	mov	x2, x19
  40a8ec:	mov	x1, x20
  40a8f0:	add	x0, x21, #0x18
  40a8f4:	bl	4108b8 <hash_insert_at@@Base>
  40a8f8:	add	x1, sp, #0xc0
  40a8fc:	mov	x0, x22
  40a900:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  40a904:	cmn	w0, #0x1
  40a908:	b.ne	40a938 <undefine_default_variables@@Base+0x45c>  // b.any
  40a90c:	bl	406e00 <__errno_location@plt>
  40a910:	ldr	w0, [x0]
  40a914:	cmp	w0, #0x4
  40a918:	b.eq	40a8f8 <undefine_default_variables@@Base+0x41c>  // b.none
  40a91c:	str	xzr, [x20, #8]
  40a920:	mov	x0, x20
  40a924:	ldp	x19, x20, [sp, #16]
  40a928:	ldp	x21, x22, [sp, #32]
  40a92c:	ldr	x23, [sp, #48]
  40a930:	ldp	x29, x30, [sp], #320
  40a934:	ret
  40a938:	tbnz	w0, #31, 40a91c <undefine_default_variables@@Base+0x440>
  40a93c:	ldr	x0, [sp, #192]
  40a940:	str	x0, [sp, #80]
  40a944:	ldr	x0, [sp, #200]
  40a948:	add	x1, sp, #0x50
  40a94c:	str	x0, [sp, #88]
  40a950:	add	x0, x21, #0x70
  40a954:	bl	4107ac <hash_find_slot@@Base>
  40a958:	mov	x23, x0
  40a95c:	ldr	x19, [x0]
  40a960:	cbz	x19, 40a974 <undefine_default_variables@@Base+0x498>
  40a964:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40a968:	ldr	x0, [x0, #64]
  40a96c:	cmp	x0, x19
  40a970:	b.ne	40aa14 <undefine_default_variables@@Base+0x538>  // b.any
  40a974:	mov	x0, #0x70                  	// #112
  40a978:	bl	416a54 <xmalloc@@Base>
  40a97c:	mov	x19, x0
  40a980:	mov	x1, x0
  40a984:	ldr	x0, [sp, #192]
  40a988:	mov	x2, x23
  40a98c:	str	x0, [x19]
  40a990:	ldr	x0, [sp, #200]
  40a994:	str	x0, [x19, #8]
  40a998:	add	x0, x21, #0x70
  40a99c:	bl	4108b8 <hash_insert_at@@Base>
  40a9a0:	bl	406e00 <__errno_location@plt>
  40a9a4:	mov	x23, x0
  40a9a8:	str	wzr, [x23]
  40a9ac:	mov	x0, x22
  40a9b0:	bl	4067d0 <opendir@plt>
  40a9b4:	str	x0, [x19, #104]
  40a9b8:	cbnz	x0, 40a9d0 <undefine_default_variables@@Base+0x4f4>
  40a9bc:	ldr	w0, [x23]
  40a9c0:	cmp	w0, #0x4
  40a9c4:	b.eq	40a9a8 <undefine_default_variables@@Base+0x4cc>  // b.none
  40a9c8:	str	xzr, [x19, #16]
  40a9cc:	b	40aa14 <undefine_default_variables@@Base+0x538>
  40a9d0:	add	x0, x19, #0x10
  40a9d4:	adrp	x4, 40a000 <delete_child_targets@@Base+0x2c>
  40a9d8:	adrp	x3, 40a000 <delete_child_targets@@Base+0x2c>
  40a9dc:	add	x4, x4, #0x6ac
  40a9e0:	add	x3, x3, #0xa74
  40a9e4:	adrp	x2, 40a000 <delete_child_targets@@Base+0x2c>
  40a9e8:	mov	x1, #0x6b                  	// #107
  40a9ec:	add	x2, x2, #0x568
  40a9f0:	bl	4106f8 <hash_init@@Base>
  40a9f4:	ldr	w0, [x21, #16]
  40a9f8:	add	w0, w0, #0x1
  40a9fc:	str	w0, [x21, #16]
  40aa00:	cmp	w0, #0xa
  40aa04:	b.ne	40aa14 <undefine_default_variables@@Base+0x538>  // b.any
  40aa08:	mov	x0, x19
  40aa0c:	mov	x1, #0x0                   	// #0
  40aa10:	bl	40a6d8 <undefine_default_variables@@Base+0x1fc>
  40aa14:	str	x19, [x20, #8]
  40aa18:	b	40a920 <undefine_default_variables@@Base+0x444>
  40aa1c:	stp	x29, x30, [sp, #-32]!
  40aa20:	mov	x29, sp
  40aa24:	str	x19, [sp, #16]
  40aa28:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40aa2c:	mov	x19, x0
  40aa30:	ldr	x0, [x0, #8]
  40aa34:	cbz	x0, 40aa60 <undefine_default_variables@@Base+0x584>
  40aa38:	ldr	x1, [x0, #16]
  40aa3c:	cbz	x1, 40aa6c <undefine_default_variables@@Base+0x590>
  40aa40:	mov	x1, #0x0                   	// #0
  40aa44:	bl	40a6d8 <undefine_default_variables@@Base+0x1fc>
  40aa48:	mov	x0, #0x10                  	// #16
  40aa4c:	bl	416a54 <xmalloc@@Base>
  40aa50:	ldr	x1, [x19, #8]
  40aa54:	str	x1, [x0]
  40aa58:	ldr	x1, [x1, #16]
  40aa5c:	str	x1, [x0, #8]
  40aa60:	ldr	x19, [sp, #16]
  40aa64:	ldp	x29, x30, [sp], #32
  40aa68:	ret
  40aa6c:	mov	x0, #0x0                   	// #0
  40aa70:	b	40aa60 <undefine_default_variables@@Base+0x584>
  40aa74:	mov	x0, #0x0                   	// #0
  40aa78:	ret

000000000040aa7c <dir_file_exists_p@@Base>:
  40aa7c:	stp	x29, x30, [sp, #-32]!
  40aa80:	mov	x29, sp
  40aa84:	str	x19, [sp, #16]
  40aa88:	mov	x19, x1
  40aa8c:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40aa90:	mov	x1, x19
  40aa94:	ldr	x19, [sp, #16]
  40aa98:	ldp	x29, x30, [sp], #32
  40aa9c:	ldr	x0, [x0, #8]
  40aaa0:	b	40a6d8 <undefine_default_variables@@Base+0x1fc>

000000000040aaa4 <file_exists_p@@Base>:
  40aaa4:	stp	x29, x30, [sp, #-48]!
  40aaa8:	mov	x29, sp
  40aaac:	stp	x19, x20, [sp, #16]
  40aab0:	mov	x19, x0
  40aab4:	str	x21, [sp, #32]
  40aab8:	bl	408a20 <ar_name@@Base>
  40aabc:	cbz	w0, 40aae4 <file_exists_p@@Base+0x40>
  40aac0:	mov	x0, x19
  40aac4:	bl	408b28 <ar_member_date@@Base>
  40aac8:	cmn	x0, #0x1
  40aacc:	cset	w0, ne  // ne = any
  40aad0:	mov	sp, x29
  40aad4:	ldp	x19, x20, [sp, #16]
  40aad8:	ldr	x21, [sp, #32]
  40aadc:	ldp	x29, x30, [sp], #48
  40aae0:	ret
  40aae4:	mov	x0, x19
  40aae8:	mov	w1, #0x2f                  	// #47
  40aaec:	bl	406b00 <strrchr@plt>
  40aaf0:	mov	x20, x0
  40aaf4:	cbnz	x0, 40ab0c <file_exists_p@@Base+0x68>
  40aaf8:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40aafc:	mov	x1, x19
  40ab00:	add	x0, x0, #0x64e
  40ab04:	bl	40aa7c <dir_file_exists_p@@Base>
  40ab08:	b	40aad0 <file_exists_p@@Base+0x2c>
  40ab0c:	cmp	x19, x0
  40ab10:	b.eq	40ab4c <file_exists_p@@Base+0xa8>  // b.none
  40ab14:	sub	x21, x0, x19
  40ab18:	mov	x1, x19
  40ab1c:	add	x0, x21, #0x10
  40ab20:	mov	x2, x21
  40ab24:	and	x0, x0, #0xfffffffffffffff0
  40ab28:	sub	sp, sp, x0
  40ab2c:	mov	x3, sp
  40ab30:	mov	x0, x3
  40ab34:	bl	4066c0 <memcpy@plt>
  40ab38:	mov	x3, x0
  40ab3c:	strb	wzr, [x0, x21]
  40ab40:	add	x1, x20, #0x1
  40ab44:	mov	x0, x3
  40ab48:	b	40ab04 <file_exists_p@@Base+0x60>
  40ab4c:	adrp	x3, 423000 <_IO_stdin_used@@Base+0x720>
  40ab50:	add	x3, x3, #0xb38
  40ab54:	b	40ab40 <file_exists_p@@Base+0x9c>

000000000040ab58 <file_impossible@@Base>:
  40ab58:	stp	x29, x30, [sp, #-48]!
  40ab5c:	mov	w1, #0x2f                  	// #47
  40ab60:	mov	x29, sp
  40ab64:	stp	x19, x20, [sp, #16]
  40ab68:	mov	x20, x0
  40ab6c:	str	x21, [sp, #32]
  40ab70:	bl	406b00 <strrchr@plt>
  40ab74:	cbnz	x0, 40ac20 <file_impossible@@Base+0xc8>
  40ab78:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40ab7c:	add	x0, x0, #0x64e
  40ab80:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40ab84:	mov	x19, x0
  40ab88:	ldr	x0, [x19, #8]
  40ab8c:	cbnz	x0, 40ab9c <file_impossible@@Base+0x44>
  40ab90:	mov	x0, #0x70                  	// #112
  40ab94:	bl	416a78 <xcalloc@@Base>
  40ab98:	str	x0, [x19, #8]
  40ab9c:	ldr	x0, [x19, #8]
  40aba0:	ldr	x1, [x0, #16]
  40aba4:	cbnz	x1, 40abcc <file_impossible@@Base+0x74>
  40aba8:	adrp	x4, 40a000 <delete_child_targets@@Base+0x2c>
  40abac:	adrp	x3, 40a000 <delete_child_targets@@Base+0x2c>
  40abb0:	adrp	x2, 40a000 <delete_child_targets@@Base+0x2c>
  40abb4:	add	x4, x4, #0x6ac
  40abb8:	add	x3, x3, #0xa74
  40abbc:	add	x2, x2, #0x568
  40abc0:	add	x0, x0, #0x10
  40abc4:	mov	x1, #0x6b                  	// #107
  40abc8:	bl	4106f8 <hash_init@@Base>
  40abcc:	mov	x0, #0x18                  	// #24
  40abd0:	bl	416a54 <xmalloc@@Base>
  40abd4:	mov	x21, x0
  40abd8:	mov	x0, x20
  40abdc:	bl	406700 <strlen@plt>
  40abe0:	mov	x1, x0
  40abe4:	mov	x0, x20
  40abe8:	str	x1, [x21, #8]
  40abec:	bl	41f1b4 <strcache_add_len@@Base>
  40abf0:	str	x0, [x21]
  40abf4:	mov	w0, #0x1                   	// #1
  40abf8:	strh	w0, [x21, #16]
  40abfc:	ldr	x0, [x19, #8]
  40ac00:	mov	x1, x21
  40ac04:	add	x0, x0, #0x10
  40ac08:	bl	4109e8 <hash_insert@@Base>
  40ac0c:	mov	sp, x29
  40ac10:	ldp	x19, x20, [sp, #16]
  40ac14:	ldr	x21, [sp, #32]
  40ac18:	ldp	x29, x30, [sp], #48
  40ac1c:	ret
  40ac20:	mov	x21, x0
  40ac24:	cmp	x20, x0
  40ac28:	b.eq	40ac6c <file_impossible@@Base+0x114>  // b.none
  40ac2c:	sub	x19, x0, x20
  40ac30:	mov	x1, x20
  40ac34:	add	x0, x19, #0x10
  40ac38:	mov	x2, x19
  40ac3c:	and	x0, x0, #0xfffffffffffffff0
  40ac40:	sub	sp, sp, x0
  40ac44:	mov	x3, sp
  40ac48:	mov	x0, x3
  40ac4c:	bl	4066c0 <memcpy@plt>
  40ac50:	mov	x3, x0
  40ac54:	strb	wzr, [x0, x19]
  40ac58:	mov	x0, x3
  40ac5c:	add	x20, x21, #0x1
  40ac60:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40ac64:	mov	x19, x0
  40ac68:	b	40ab88 <file_impossible@@Base+0x30>
  40ac6c:	adrp	x3, 423000 <_IO_stdin_used@@Base+0x720>
  40ac70:	add	x3, x3, #0xb38
  40ac74:	b	40ac58 <file_impossible@@Base+0x100>

000000000040ac78 <file_impossible_p@@Base>:
  40ac78:	stp	x29, x30, [sp, #-80]!
  40ac7c:	mov	w1, #0x2f                  	// #47
  40ac80:	mov	x29, sp
  40ac84:	stp	x19, x20, [sp, #16]
  40ac88:	mov	x19, x0
  40ac8c:	str	x21, [sp, #32]
  40ac90:	bl	406b00 <strrchr@plt>
  40ac94:	cbnz	x0, 40acc4 <file_impossible_p@@Base+0x4c>
  40ac98:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40ac9c:	add	x0, x0, #0x64e
  40aca0:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40aca4:	ldr	x21, [x0, #8]
  40aca8:	cbnz	x21, 40ad1c <file_impossible_p@@Base+0xa4>
  40acac:	mov	w0, #0x0                   	// #0
  40acb0:	mov	sp, x29
  40acb4:	ldp	x19, x20, [sp, #16]
  40acb8:	ldr	x21, [sp, #32]
  40acbc:	ldp	x29, x30, [sp], #80
  40acc0:	ret
  40acc4:	mov	x20, x0
  40acc8:	cmp	x19, x0
  40accc:	b.eq	40ad10 <file_impossible_p@@Base+0x98>  // b.none
  40acd0:	sub	x21, x0, x19
  40acd4:	mov	x1, x19
  40acd8:	add	x0, x21, #0x10
  40acdc:	mov	x2, x21
  40ace0:	and	x0, x0, #0xfffffffffffffff0
  40ace4:	sub	sp, sp, x0
  40ace8:	mov	x3, sp
  40acec:	mov	x0, x3
  40acf0:	bl	4066c0 <memcpy@plt>
  40acf4:	mov	x3, x0
  40acf8:	strb	wzr, [x0, x21]
  40acfc:	mov	x0, x3
  40ad00:	add	x19, x20, #0x1
  40ad04:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40ad08:	ldr	x21, [x0, #8]
  40ad0c:	b	40aca8 <file_impossible_p@@Base+0x30>
  40ad10:	adrp	x3, 423000 <_IO_stdin_used@@Base+0x720>
  40ad14:	add	x3, x3, #0xb38
  40ad18:	b	40acfc <file_impossible_p@@Base+0x84>
  40ad1c:	ldr	x0, [x21, #16]
  40ad20:	cbz	x0, 40acac <file_impossible_p@@Base+0x34>
  40ad24:	mov	x0, x19
  40ad28:	str	x19, [x29, #56]
  40ad2c:	bl	406700 <strlen@plt>
  40ad30:	str	x0, [x29, #64]
  40ad34:	add	x1, x29, #0x38
  40ad38:	add	x0, x21, #0x10
  40ad3c:	bl	41088c <hash_find_item@@Base>
  40ad40:	cbz	x0, 40acac <file_impossible_p@@Base+0x34>
  40ad44:	ldrsh	w0, [x0, #16]
  40ad48:	b	40acb0 <file_impossible_p@@Base+0x38>

000000000040ad4c <dir_name@@Base>:
  40ad4c:	stp	x29, x30, [sp, #-16]!
  40ad50:	mov	x29, sp
  40ad54:	bl	40a874 <undefine_default_variables@@Base+0x398>
  40ad58:	ldp	x29, x30, [sp], #16
  40ad5c:	ldr	x0, [x0]
  40ad60:	ret

000000000040ad64 <print_dir_data_base@@Base>:
  40ad64:	stp	x29, x30, [sp, #-112]!
  40ad68:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40ad6c:	add	x1, x1, #0x9c5
  40ad70:	mov	x29, sp
  40ad74:	mov	w2, #0x5                   	// #5
  40ad78:	stp	x19, x20, [sp, #16]
  40ad7c:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40ad80:	add	x20, x20, #0x1e8
  40ad84:	mov	x0, #0x0                   	// #0
  40ad88:	stp	x21, x22, [sp, #32]
  40ad8c:	stp	x23, x24, [sp, #48]
  40ad90:	mov	w24, #0x0                   	// #0
  40ad94:	stp	x25, x26, [sp, #64]
  40ad98:	mov	w25, #0x0                   	// #0
  40ad9c:	stp	x27, x28, [sp, #80]
  40ada0:	bl	406d60 <dcgettext@plt>
  40ada4:	bl	406b80 <puts@plt>
  40ada8:	ldr	x21, [x20, #24]
  40adac:	adrp	x27, 423000 <_IO_stdin_used@@Base+0x720>
  40adb0:	ldr	x0, [x20, #56]
  40adb4:	adrp	x28, 423000 <_IO_stdin_used@@Base+0x720>
  40adb8:	add	x27, x27, #0xa25
  40adbc:	add	x28, x28, #0xa47
  40adc0:	add	x0, x21, x0, lsl #3
  40adc4:	str	x0, [sp, #104]
  40adc8:	ldr	x0, [sp, #104]
  40adcc:	cmp	x21, x0
  40add0:	b.cc	40ae78 <print_dir_data_base@@Base+0x114>  // b.lo, b.ul, b.last
  40add4:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  40add8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  40addc:	add	x0, x0, #0x152
  40ade0:	ldr	x1, [x19, #400]
  40ade4:	bl	406710 <fputs@plt>
  40ade8:	cbnz	w25, 40b028 <print_dir_data_base@@Base+0x2c4>
  40adec:	mov	w2, #0x5                   	// #5
  40adf0:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40adf4:	mov	x0, #0x0                   	// #0
  40adf8:	add	x1, x1, #0xa44
  40adfc:	bl	406d60 <dcgettext@plt>
  40ae00:	ldr	x1, [x19, #400]
  40ae04:	bl	406710 <fputs@plt>
  40ae08:	mov	w2, #0x5                   	// #5
  40ae0c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40ae10:	mov	x0, #0x0                   	// #0
  40ae14:	add	x1, x1, #0xa47
  40ae18:	bl	406d60 <dcgettext@plt>
  40ae1c:	ldr	x1, [x19, #400]
  40ae20:	bl	406710 <fputs@plt>
  40ae24:	cbnz	w24, 40b03c <print_dir_data_base@@Base+0x2d8>
  40ae28:	mov	w2, #0x5                   	// #5
  40ae2c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40ae30:	mov	x0, #0x0                   	// #0
  40ae34:	add	x1, x1, #0xa50
  40ae38:	bl	406d60 <dcgettext@plt>
  40ae3c:	ldr	x1, [x19, #400]
  40ae40:	bl	406710 <fputs@plt>
  40ae44:	mov	w2, #0x5                   	// #5
  40ae48:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40ae4c:	mov	x0, #0x0                   	// #0
  40ae50:	add	x1, x1, #0xa6d
  40ae54:	bl	406d60 <dcgettext@plt>
  40ae58:	ldp	x21, x22, [sp, #32]
  40ae5c:	ldp	x23, x24, [sp, #48]
  40ae60:	ldp	x25, x26, [sp, #64]
  40ae64:	ldr	x1, [x20, #72]
  40ae68:	ldp	x19, x20, [sp, #16]
  40ae6c:	ldp	x27, x28, [sp, #80]
  40ae70:	ldp	x29, x30, [sp], #112
  40ae74:	b	406df0 <printf@plt>
  40ae78:	ldr	x19, [x21]
  40ae7c:	cbz	x19, 40aeb4 <print_dir_data_base@@Base+0x150>
  40ae80:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ae84:	ldr	x3, [x0, #64]
  40ae88:	cmp	x3, x19
  40ae8c:	b.eq	40aeb4 <print_dir_data_base@@Base+0x150>  // b.none
  40ae90:	ldr	x1, [x19, #8]
  40ae94:	cbnz	x1, 40aebc <print_dir_data_base@@Base+0x158>
  40ae98:	mov	w2, #0x5                   	// #5
  40ae9c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40aea0:	mov	x0, #0x0                   	// #0
  40aea4:	add	x1, x1, #0x9d5
  40aea8:	bl	406d60 <dcgettext@plt>
  40aeac:	ldr	x1, [x19]
  40aeb0:	bl	406df0 <printf@plt>
  40aeb4:	add	x21, x21, #0x8
  40aeb8:	b	40adc8 <print_dir_data_base@@Base+0x64>
  40aebc:	ldr	x0, [x1, #16]
  40aec0:	cbnz	x0, 40aee8 <print_dir_data_base@@Base+0x184>
  40aec4:	mov	w2, #0x5                   	// #5
  40aec8:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40aecc:	add	x1, x1, #0x9f1
  40aed0:	bl	406d60 <dcgettext@plt>
  40aed4:	ldr	x1, [x19, #8]
  40aed8:	ldp	x2, x3, [x1]
  40aedc:	ldr	x1, [x19]
  40aee0:	bl	406df0 <printf@plt>
  40aee4:	b	40aeb4 <print_dir_data_base@@Base+0x150>
  40aee8:	ldr	x1, [x1, #48]
  40aeec:	mov	w22, #0x0                   	// #0
  40aef0:	mov	w23, #0x0                   	// #0
  40aef4:	add	x1, x0, x1, lsl #3
  40aef8:	cmp	x0, x1
  40aefc:	b.cc	40afbc <print_dir_data_base@@Base+0x258>  // b.lo, b.ul, b.last
  40af00:	mov	x1, x27
  40af04:	mov	w2, #0x5                   	// #5
  40af08:	mov	x0, #0x0                   	// #0
  40af0c:	bl	406d60 <dcgettext@plt>
  40af10:	ldr	x1, [x19, #8]
  40af14:	adrp	x26, 43e000 <expanding_var@@Base+0x328>
  40af18:	ldp	x2, x3, [x1]
  40af1c:	ldr	x1, [x19]
  40af20:	bl	406df0 <printf@plt>
  40af24:	cbnz	w23, 40afe8 <print_dir_data_base@@Base+0x284>
  40af28:	mov	w2, #0x5                   	// #5
  40af2c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40af30:	mov	x0, #0x0                   	// #0
  40af34:	add	x1, x1, #0xa44
  40af38:	bl	406d60 <dcgettext@plt>
  40af3c:	ldr	x1, [x26, #400]
  40af40:	bl	406710 <fputs@plt>
  40af44:	mov	x1, x28
  40af48:	mov	w2, #0x5                   	// #5
  40af4c:	mov	x0, #0x0                   	// #0
  40af50:	bl	406d60 <dcgettext@plt>
  40af54:	ldr	x1, [x26, #400]
  40af58:	bl	406710 <fputs@plt>
  40af5c:	cbnz	w22, 40affc <print_dir_data_base@@Base+0x298>
  40af60:	mov	w2, #0x5                   	// #5
  40af64:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40af68:	mov	x0, #0x0                   	// #0
  40af6c:	add	x1, x1, #0xa50
  40af70:	bl	406d60 <dcgettext@plt>
  40af74:	ldr	x1, [x26, #400]
  40af78:	bl	406710 <fputs@plt>
  40af7c:	mov	w2, #0x5                   	// #5
  40af80:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40af84:	mov	x0, #0x0                   	// #0
  40af88:	add	x1, x1, #0xa53
  40af8c:	bl	406d60 <dcgettext@plt>
  40af90:	ldr	x1, [x26, #400]
  40af94:	bl	406710 <fputs@plt>
  40af98:	ldr	x0, [x19, #8]
  40af9c:	ldr	x0, [x0, #104]
  40afa0:	cbnz	x0, 40b010 <print_dir_data_base@@Base+0x2ac>
  40afa4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  40afa8:	add	x0, x0, #0x64e
  40afac:	add	w25, w25, w23
  40afb0:	add	w24, w24, w22
  40afb4:	bl	406b80 <puts@plt>
  40afb8:	b	40aeb4 <print_dir_data_base@@Base+0x150>
  40afbc:	ldr	x2, [x0]
  40afc0:	cbz	x2, 40afd8 <print_dir_data_base@@Base+0x274>
  40afc4:	cmp	x3, x2
  40afc8:	b.eq	40afd8 <print_dir_data_base@@Base+0x274>  // b.none
  40afcc:	ldrsh	w2, [x2, #16]
  40afd0:	cbz	w2, 40afe0 <print_dir_data_base@@Base+0x27c>
  40afd4:	add	w22, w22, #0x1
  40afd8:	add	x0, x0, #0x8
  40afdc:	b	40aef8 <print_dir_data_base@@Base+0x194>
  40afe0:	add	w23, w23, #0x1
  40afe4:	b	40afd8 <print_dir_data_base@@Base+0x274>
  40afe8:	mov	w1, w23
  40afec:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  40aff0:	add	x0, x0, #0xc39
  40aff4:	bl	406df0 <printf@plt>
  40aff8:	b	40af44 <print_dir_data_base@@Base+0x1e0>
  40affc:	mov	w1, w22
  40b000:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  40b004:	add	x0, x0, #0xc39
  40b008:	bl	406df0 <printf@plt>
  40b00c:	b	40af7c <print_dir_data_base@@Base+0x218>
  40b010:	mov	w2, #0x5                   	// #5
  40b014:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40b018:	mov	x0, #0x0                   	// #0
  40b01c:	add	x1, x1, #0xa64
  40b020:	bl	406d60 <dcgettext@plt>
  40b024:	b	40afac <print_dir_data_base@@Base+0x248>
  40b028:	mov	w1, w25
  40b02c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  40b030:	add	x0, x0, #0xc39
  40b034:	bl	406df0 <printf@plt>
  40b038:	b	40ae08 <print_dir_data_base@@Base+0xa4>
  40b03c:	mov	w1, w24
  40b040:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  40b044:	add	x0, x0, #0xc39
  40b048:	bl	406df0 <printf@plt>
  40b04c:	b	40ae44 <print_dir_data_base@@Base+0xe0>

000000000040b050 <dir_setup_glob@@Base>:
  40b050:	adrp	x1, 40a000 <delete_child_targets@@Base+0x2c>
  40b054:	add	x1, x1, #0xa1c
  40b058:	str	x1, [x0, #48]
  40b05c:	adrp	x1, 40a000 <delete_child_targets@@Base+0x2c>
  40b060:	add	x1, x1, #0x5a0
  40b064:	str	x1, [x0, #40]
  40b068:	adrp	x1, 406000 <memcpy@plt-0x6c0>
  40b06c:	add	x1, x1, #0xc20
  40b070:	str	x1, [x0, #32]
  40b074:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  40b078:	add	x1, x1, #0x8c0
  40b07c:	str	xzr, [x0, #16]
  40b080:	str	x1, [x0, #56]
  40b084:	adrp	x1, 422000 <fd_inherit@@Base+0x20>
  40b088:	add	x1, x1, #0x8a0
  40b08c:	str	x1, [x0, #64]
  40b090:	ret

000000000040b094 <hash_init_directories@@Base>:
  40b094:	stp	x29, x30, [sp, #-32]!
  40b098:	mov	x1, #0xc7                  	// #199
  40b09c:	adrp	x4, 40a000 <delete_child_targets@@Base+0x2c>
  40b0a0:	mov	x29, sp
  40b0a4:	str	x19, [sp, #16]
  40b0a8:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  40b0ac:	add	x19, x19, #0x1e8
  40b0b0:	add	x4, x4, #0x54c
  40b0b4:	add	x0, x19, #0x18
  40b0b8:	adrp	x3, 40a000 <delete_child_targets@@Base+0x2c>
  40b0bc:	adrp	x2, 40a000 <delete_child_targets@@Base+0x2c>
  40b0c0:	add	x3, x3, #0x544
  40b0c4:	add	x2, x2, #0x584
  40b0c8:	bl	4106f8 <hash_init@@Base>
  40b0cc:	add	x0, x19, #0x70
  40b0d0:	adrp	x4, 40a000 <delete_child_targets@@Base+0x2c>
  40b0d4:	ldr	x19, [sp, #16]
  40b0d8:	add	x4, x4, #0x670
  40b0dc:	ldp	x29, x30, [sp], #32
  40b0e0:	adrp	x3, 40a000 <delete_child_targets@@Base+0x2c>
  40b0e4:	adrp	x2, 40a000 <delete_child_targets@@Base+0x2c>
  40b0e8:	add	x3, x3, #0x538
  40b0ec:	add	x2, x2, #0x52c
  40b0f0:	mov	x1, #0xc7                  	// #199
  40b0f4:	b	4106f8 <hash_init@@Base>
  40b0f8:	stp	x29, x30, [sp, #-32]!
  40b0fc:	mov	x29, sp
  40b100:	str	x19, [sp, #16]
  40b104:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  40b108:	ldr	x0, [x19, #1912]
  40b10c:	cbnz	x0, 40b128 <hash_init_directories@@Base+0x94>
  40b110:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40b114:	mov	x0, #0xc8                  	// #200
  40b118:	str	x0, [x1, #688]
  40b11c:	bl	416a54 <xmalloc@@Base>
  40b120:	str	x0, [x19, #1912]
  40b124:	strb	wzr, [x0]
  40b128:	ldr	x0, [x19, #1912]
  40b12c:	ldr	x19, [sp, #16]
  40b130:	ldp	x29, x30, [sp], #32
  40b134:	ret

000000000040b138 <variable_buffer_output@@Base>:
  40b138:	stp	x29, x30, [sp, #-48]!
  40b13c:	mov	x3, x0
  40b140:	adrp	x5, 43e000 <expanding_var@@Base+0x328>
  40b144:	mov	x29, sp
  40b148:	stp	x21, x22, [sp, #32]
  40b14c:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  40b150:	ldr	x0, [x22, #1912]
  40b154:	stp	x19, x20, [sp, #16]
  40b158:	mov	x19, x2
  40b15c:	ldr	x4, [x5, #688]
  40b160:	sub	x21, x3, x0
  40b164:	add	x2, x21, x2
  40b168:	mov	x20, x1
  40b16c:	add	x1, x2, #0x5
  40b170:	cmp	x1, x4
  40b174:	b.ls	40b198 <variable_buffer_output@@Base+0x60>  // b.plast
  40b178:	lsl	x3, x4, #1
  40b17c:	add	x2, x2, #0x64
  40b180:	cmp	x3, x2
  40b184:	csel	x1, x3, x2, cs  // cs = hs, nlast
  40b188:	str	x1, [x5, #688]
  40b18c:	bl	416aa0 <xrealloc@@Base>
  40b190:	add	x3, x0, x21
  40b194:	str	x0, [x22, #1912]
  40b198:	mov	x2, x19
  40b19c:	mov	x1, x20
  40b1a0:	mov	x0, x3
  40b1a4:	bl	4066c0 <memcpy@plt>
  40b1a8:	add	x0, x0, x19
  40b1ac:	ldp	x19, x20, [sp, #16]
  40b1b0:	ldp	x21, x22, [sp, #32]
  40b1b4:	ldp	x29, x30, [sp], #48
  40b1b8:	ret

000000000040b1bc <allocated_variable_expand_for_file@@Base>:
  40b1bc:	stp	x29, x30, [sp, #-48]!
  40b1c0:	mov	x29, sp
  40b1c4:	stp	x19, x20, [sp, #16]
  40b1c8:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  40b1cc:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40b1d0:	stp	x21, x22, [sp, #32]
  40b1d4:	ldr	x22, [x19, #1912]
  40b1d8:	str	xzr, [x19, #1912]
  40b1dc:	ldr	x21, [x20, #688]
  40b1e0:	bl	40baa8 <variable_expand_for_file@@Base>
  40b1e4:	str	x22, [x19, #1912]
  40b1e8:	str	x21, [x20, #688]
  40b1ec:	ldp	x19, x20, [sp, #16]
  40b1f0:	ldp	x21, x22, [sp, #32]
  40b1f4:	ldp	x29, x30, [sp], #48
  40b1f8:	ret

000000000040b1fc <expand_argument@@Base>:
  40b1fc:	stp	x29, x30, [sp, #-48]!
  40b200:	cmp	x0, x1
  40b204:	mov	x29, sp
  40b208:	stp	x19, x20, [sp, #16]
  40b20c:	str	x21, [sp, #32]
  40b210:	b.ne	40b23c <expand_argument@@Base+0x40>  // b.any
  40b214:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  40b218:	add	x0, x0, #0x819
  40b21c:	bl	416c24 <xstrdup@@Base>
  40b220:	mov	x19, x0
  40b224:	mov	sp, x29
  40b228:	mov	x0, x19
  40b22c:	ldp	x19, x20, [sp, #16]
  40b230:	ldr	x21, [sp, #32]
  40b234:	ldp	x29, x30, [sp], #48
  40b238:	ret
  40b23c:	mov	x20, x0
  40b240:	cbz	x1, 40b24c <expand_argument@@Base+0x50>
  40b244:	ldrb	w0, [x1]
  40b248:	cbnz	w0, 40b25c <expand_argument@@Base+0x60>
  40b24c:	mov	x0, x20
  40b250:	mov	x1, #0x0                   	// #0
  40b254:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  40b258:	b	40b220 <expand_argument@@Base+0x24>
  40b25c:	sub	x19, x1, x20
  40b260:	add	x0, x19, #0x1
  40b264:	cmp	x19, #0x3e7
  40b268:	b.le	40b2a4 <expand_argument@@Base+0xa8>
  40b26c:	bl	416a54 <xmalloc@@Base>
  40b270:	mov	x3, x0
  40b274:	mov	x21, x0
  40b278:	mov	x2, x19
  40b27c:	mov	x1, x20
  40b280:	mov	x0, x3
  40b284:	bl	4066c0 <memcpy@plt>
  40b288:	strb	wzr, [x0, x19]
  40b28c:	mov	x1, #0x0                   	// #0
  40b290:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  40b294:	mov	x19, x0
  40b298:	mov	x0, x21
  40b29c:	bl	406c20 <free@plt>
  40b2a0:	b	40b224 <expand_argument@@Base+0x28>
  40b2a4:	add	x0, x19, #0x10
  40b2a8:	mov	x21, #0x0                   	// #0
  40b2ac:	and	x0, x0, #0xfffffffffffffff0
  40b2b0:	sub	sp, sp, x0
  40b2b4:	mov	x3, sp
  40b2b8:	b	40b278 <expand_argument@@Base+0x7c>

000000000040b2bc <recursively_expand_for_file@@Base>:
  40b2bc:	stp	x29, x30, [sp, #-128]!
  40b2c0:	mov	x29, sp
  40b2c4:	stp	x19, x20, [sp, #16]
  40b2c8:	mov	x19, x0
  40b2cc:	adrp	x20, 43d000 <memcpy@GLIBC_2.17>
  40b2d0:	ldr	x0, [x0, #16]
  40b2d4:	stp	x21, x22, [sp, #32]
  40b2d8:	stp	x23, x24, [sp, #48]
  40b2dc:	stp	x25, x26, [sp, #64]
  40b2e0:	stp	x27, x28, [sp, #80]
  40b2e4:	mov	x28, x1
  40b2e8:	ldr	x24, [x20, #3288]
  40b2ec:	cbz	x0, 40b300 <recursively_expand_for_file@@Base+0x44>
  40b2f0:	add	x0, x19, #0x10
  40b2f4:	str	x0, [sp, #120]
  40b2f8:	add	x0, sp, #0x78
  40b2fc:	str	x0, [x20, #3288]
  40b300:	adrp	x21, 440000 <output_context@@Base+0x1248>
  40b304:	ldr	x0, [x21, #3560]
  40b308:	cbnz	x0, 40b368 <recursively_expand_for_file@@Base+0xac>
  40b30c:	add	x0, x19, #0x10
  40b310:	mov	w23, #0x1                   	// #1
  40b314:	str	x0, [x21, #3560]
  40b318:	ldrb	w0, [x19, #44]
  40b31c:	tbz	w0, #6, 40b384 <recursively_expand_for_file@@Base+0xc8>
  40b320:	ldr	w0, [x19, #44]
  40b324:	tst	w0, #0x7fff00
  40b328:	b.ne	40b370 <recursively_expand_for_file@@Base+0xb4>  // b.any
  40b32c:	ldr	x0, [x20, #3288]
  40b330:	ldr	x21, [x0]
  40b334:	ldr	x0, [x19]
  40b338:	bl	406700 <strlen@plt>
  40b33c:	mov	x20, x0
  40b340:	mov	w2, #0x5                   	// #5
  40b344:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40b348:	mov	x0, #0x0                   	// #0
  40b34c:	add	x1, x1, #0xa93
  40b350:	bl	406d60 <dcgettext@plt>
  40b354:	mov	x2, x0
  40b358:	ldr	x3, [x19]
  40b35c:	mov	x1, x20
  40b360:	mov	x0, x21
  40b364:	bl	417d24 <fatal@@Base>
  40b368:	mov	w23, #0x0                   	// #0
  40b36c:	b	40b318 <recursively_expand_for_file@@Base+0x5c>
  40b370:	ubfx	x2, x0, #8, #15
  40b374:	mov	w1, #0x7fff                	// #32767
  40b378:	add	w2, w2, w1
  40b37c:	bfi	w0, w2, #8, #15
  40b380:	str	w0, [x19, #44]
  40b384:	cbz	x28, 40b444 <recursively_expand_for_file@@Base+0x188>
  40b388:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40b38c:	ldr	x1, [x28, #80]
  40b390:	ldr	x25, [x0, #304]
  40b394:	str	x1, [x0, #304]
  40b398:	ldrb	w0, [x19, #44]
  40b39c:	orr	w0, w0, #0x40
  40b3a0:	strb	w0, [x19, #44]
  40b3a4:	tbz	w0, #1, 40b44c <recursively_expand_for_file@@Base+0x190>
  40b3a8:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  40b3ac:	adrp	x26, 43e000 <expanding_var@@Base+0x328>
  40b3b0:	ldr	x27, [x19]
  40b3b4:	ldr	x5, [x22, #1912]
  40b3b8:	mov	x0, x27
  40b3bc:	ldr	x4, [x26, #688]
  40b3c0:	str	xzr, [x22, #1912]
  40b3c4:	stp	x4, x5, [sp, #96]
  40b3c8:	bl	406700 <strlen@plt>
  40b3cc:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40b3d0:	mov	w3, #0x1                   	// #1
  40b3d4:	ldr	x2, [x1, #304]
  40b3d8:	mov	x1, x0
  40b3dc:	mov	x0, x27
  40b3e0:	bl	40b96c <variable_expand_string@@Base+0x438>
  40b3e4:	mov	x2, #0x1                   	// #1
  40b3e8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40b3ec:	add	x1, x1, #0x819
  40b3f0:	bl	40b138 <variable_buffer_output@@Base>
  40b3f4:	ldp	x4, x5, [sp, #96]
  40b3f8:	str	x4, [x26, #688]
  40b3fc:	ldr	x0, [x22, #1912]
  40b400:	str	x5, [x22, #1912]
  40b404:	ldrb	w2, [x19, #44]
  40b408:	and	w2, w2, #0xffffffbf
  40b40c:	strb	w2, [x19, #44]
  40b410:	cbz	w23, 40b418 <recursively_expand_for_file@@Base+0x15c>
  40b414:	str	xzr, [x21, #3560]
  40b418:	cbz	x28, 40b424 <recursively_expand_for_file@@Base+0x168>
  40b41c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40b420:	str	x25, [x1, #304]
  40b424:	str	x24, [x20, #3288]
  40b428:	ldp	x19, x20, [sp, #16]
  40b42c:	ldp	x21, x22, [sp, #32]
  40b430:	ldp	x23, x24, [sp, #48]
  40b434:	ldp	x25, x26, [sp, #64]
  40b438:	ldp	x27, x28, [sp, #80]
  40b43c:	ldp	x29, x30, [sp], #128
  40b440:	ret
  40b444:	mov	x25, #0x0                   	// #0
  40b448:	b	40b398 <recursively_expand_for_file@@Base+0xdc>
  40b44c:	ldr	x0, [x19, #8]
  40b450:	mov	x1, #0x0                   	// #0
  40b454:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  40b458:	b	40b404 <recursively_expand_for_file@@Base+0x148>
  40b45c:	stp	x29, x30, [sp, #-48]!
  40b460:	mov	x29, sp
  40b464:	stp	x21, x22, [sp, #32]
  40b468:	mov	x22, x1
  40b46c:	mov	x1, x2
  40b470:	stp	x19, x20, [sp, #16]
  40b474:	mov	x19, x0
  40b478:	mov	x20, x2
  40b47c:	mov	x0, x22
  40b480:	bl	41fcdc <lookup_variable@@Base>
  40b484:	cbnz	x0, 40b4d8 <recursively_expand_for_file@@Base+0x21c>
  40b488:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  40b48c:	ldr	w1, [x1, #2056]
  40b490:	cbz	w1, 40b4c4 <recursively_expand_for_file@@Base+0x208>
  40b494:	adrp	x1, 440000 <output_context@@Base+0x1248>
  40b498:	mov	w2, #0x5                   	// #5
  40b49c:	ldr	x21, [x1, #3560]
  40b4a0:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40b4a4:	add	x1, x1, #0xaca
  40b4a8:	bl	406d60 <dcgettext@plt>
  40b4ac:	mov	x4, x22
  40b4b0:	mov	x2, x0
  40b4b4:	mov	w3, w20
  40b4b8:	mov	x1, x20
  40b4bc:	mov	x0, x21
  40b4c0:	bl	417aa8 <error@@Base>
  40b4c4:	mov	x0, x19
  40b4c8:	ldp	x19, x20, [sp, #16]
  40b4cc:	ldp	x21, x22, [sp, #32]
  40b4d0:	ldp	x29, x30, [sp], #48
  40b4d4:	ret
  40b4d8:	ldr	x20, [x0, #8]
  40b4dc:	mov	x21, x0
  40b4e0:	ldrb	w2, [x0, #44]
  40b4e4:	ldrb	w1, [x20]
  40b4e8:	and	w3, w2, #0x2
  40b4ec:	orr	w1, w1, w3
  40b4f0:	cbz	w1, 40b4c4 <recursively_expand_for_file@@Base+0x208>
  40b4f4:	tbz	w2, #0, 40b504 <recursively_expand_for_file@@Base+0x248>
  40b4f8:	mov	x1, #0x0                   	// #0
  40b4fc:	bl	40b2bc <recursively_expand_for_file@@Base>
  40b500:	mov	x20, x0
  40b504:	mov	x0, x20
  40b508:	bl	406700 <strlen@plt>
  40b50c:	mov	x1, x20
  40b510:	mov	x2, x0
  40b514:	mov	x0, x19
  40b518:	bl	40b138 <variable_buffer_output@@Base>
  40b51c:	mov	x19, x0
  40b520:	ldrb	w0, [x21, #44]
  40b524:	tbz	w0, #0, 40b4c4 <recursively_expand_for_file@@Base+0x208>
  40b528:	mov	x0, x20
  40b52c:	bl	406c20 <free@plt>
  40b530:	b	40b4c4 <recursively_expand_for_file@@Base+0x208>

000000000040b534 <variable_expand_string@@Base>:
  40b534:	stp	x29, x30, [sp, #-160]!
  40b538:	mov	x29, sp
  40b53c:	stp	x19, x20, [sp, #16]
  40b540:	mov	x20, x2
  40b544:	stp	x21, x22, [sp, #32]
  40b548:	mov	x21, x1
  40b54c:	stp	x23, x24, [sp, #48]
  40b550:	stp	x25, x26, [sp, #64]
  40b554:	stp	x27, x28, [sp, #80]
  40b558:	cbnz	x0, 40b560 <variable_expand_string@@Base+0x2c>
  40b55c:	bl	40b0f8 <hash_init_directories@@Base+0x64>
  40b560:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  40b564:	mov	x19, x0
  40b568:	ldr	x25, [x22, #1912]
  40b56c:	sub	x0, x0, x25
  40b570:	str	x0, [x29, #136]
  40b574:	cbnz	x20, 40b5b0 <variable_expand_string@@Base+0x7c>
  40b578:	mov	x0, x19
  40b57c:	mov	x2, #0x1                   	// #1
  40b580:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40b584:	add	x1, x1, #0x819
  40b588:	bl	40b138 <variable_buffer_output@@Base>
  40b58c:	ldr	x0, [x22, #1912]
  40b590:	mov	sp, x29
  40b594:	ldp	x19, x20, [sp, #16]
  40b598:	ldp	x21, x22, [sp, #32]
  40b59c:	ldp	x23, x24, [sp, #48]
  40b5a0:	ldp	x25, x26, [sp, #64]
  40b5a4:	ldp	x27, x28, [sp, #80]
  40b5a8:	ldp	x29, x30, [sp], #160
  40b5ac:	ret
  40b5b0:	cmn	x20, #0x1
  40b5b4:	b.ne	40b64c <variable_expand_string@@Base+0x118>  // b.any
  40b5b8:	mov	x0, x21
  40b5bc:	bl	416c24 <xstrdup@@Base>
  40b5c0:	mov	x22, x0
  40b5c4:	mov	x20, x0
  40b5c8:	adrp	x26, 441000 <commands_started@@Base+0x1c0>
  40b5cc:	add	x0, x26, #0x808
  40b5d0:	str	x0, [x29, #128]
  40b5d4:	mov	x0, x20
  40b5d8:	mov	w1, #0x24                  	// #36
  40b5dc:	bl	406c40 <strchr@plt>
  40b5e0:	mov	x28, x0
  40b5e4:	cbz	x0, 40b65c <variable_expand_string@@Base+0x128>
  40b5e8:	sub	x2, x0, x20
  40b5ec:	mov	x0, x19
  40b5f0:	mov	x1, x20
  40b5f4:	bl	40b138 <variable_buffer_output@@Base>
  40b5f8:	mov	x19, x0
  40b5fc:	cbz	x28, 40b840 <variable_expand_string@@Base+0x30c>
  40b600:	ldrb	w25, [x28, #1]
  40b604:	add	x20, x28, #0x1
  40b608:	cmp	w25, #0x28
  40b60c:	b.eq	40b694 <variable_expand_string@@Base+0x160>  // b.none
  40b610:	b.hi	40b66c <variable_expand_string@@Base+0x138>  // b.pmore
  40b614:	cbz	w25, 40b67c <variable_expand_string@@Base+0x148>
  40b618:	cmp	w25, #0x24
  40b61c:	b.eq	40b67c <variable_expand_string@@Base+0x148>  // b.none
  40b620:	ldrb	w1, [x28]
  40b624:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40b628:	add	x0, x0, #0x454
  40b62c:	ldrh	w0, [x0, x1, lsl #1]
  40b630:	tst	w0, #0x6
  40b634:	b.ne	40b6b4 <variable_expand_string@@Base+0x180>  // b.any
  40b638:	mov	x1, x20
  40b63c:	mov	x0, x19
  40b640:	mov	x2, #0x1                   	// #1
  40b644:	bl	40b45c <recursively_expand_for_file@@Base+0x1a0>
  40b648:	b	40b68c <variable_expand_string@@Base+0x158>
  40b64c:	mov	x1, x20
  40b650:	mov	x0, x21
  40b654:	bl	416c40 <xstrndup@@Base>
  40b658:	b	40b5c0 <variable_expand_string@@Base+0x8c>
  40b65c:	mov	x0, x20
  40b660:	bl	406700 <strlen@plt>
  40b664:	add	x2, x0, #0x1
  40b668:	b	40b5ec <variable_expand_string@@Base+0xb8>
  40b66c:	cmp	w25, #0x7b
  40b670:	b.ne	40b620 <variable_expand_string@@Base+0xec>  // b.any
  40b674:	mov	w24, #0x7d                  	// #125
  40b678:	b	40b698 <variable_expand_string@@Base+0x164>
  40b67c:	mov	x1, x28
  40b680:	mov	x0, x19
  40b684:	mov	x2, #0x1                   	// #1
  40b688:	bl	40b138 <variable_buffer_output@@Base>
  40b68c:	mov	x19, x0
  40b690:	b	40b6b4 <variable_expand_string@@Base+0x180>
  40b694:	mov	w24, #0x29                  	// #41
  40b698:	add	x1, x29, #0x90
  40b69c:	add	x0, x29, #0x98
  40b6a0:	stp	x20, x19, [x29, #144]
  40b6a4:	bl	410260 <handle_function@@Base>
  40b6a8:	mov	w27, w0
  40b6ac:	cbz	w0, 40b6c4 <variable_expand_string@@Base+0x190>
  40b6b0:	ldp	x20, x19, [x29, #144]
  40b6b4:	ldrb	w0, [x20]
  40b6b8:	cbz	w0, 40b840 <variable_expand_string@@Base+0x30c>
  40b6bc:	add	x20, x20, #0x1
  40b6c0:	b	40b5d4 <variable_expand_string@@Base+0xa0>
  40b6c4:	add	x28, x28, #0x2
  40b6c8:	mov	w1, w24
  40b6cc:	mov	x0, x28
  40b6d0:	bl	406c40 <strchr@plt>
  40b6d4:	mov	x21, x0
  40b6d8:	cbnz	x0, 40b708 <variable_expand_string@@Base+0x1d4>
  40b6dc:	adrp	x1, 43d000 <memcpy@GLIBC_2.17>
  40b6e0:	mov	w2, #0x5                   	// #5
  40b6e4:	ldr	x1, [x1, #3288]
  40b6e8:	ldr	x19, [x1]
  40b6ec:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40b6f0:	add	x1, x1, #0xaed
  40b6f4:	bl	406d60 <dcgettext@plt>
  40b6f8:	mov	x1, #0x0                   	// #0
  40b6fc:	mov	x2, x0
  40b700:	mov	x0, x19
  40b704:	bl	417d24 <fatal@@Base>
  40b708:	mov	x1, x0
  40b70c:	mov	w2, #0x24                  	// #36
  40b710:	mov	x0, x28
  40b714:	bl	416c5c <lindex@@Base>
  40b718:	mov	x23, x0
  40b71c:	cbnz	x0, 40b80c <variable_expand_string@@Base+0x2d8>
  40b720:	mov	x20, x21
  40b724:	mov	x1, x21
  40b728:	mov	x0, x28
  40b72c:	mov	w2, #0x3a                  	// #58
  40b730:	bl	416c5c <lindex@@Base>
  40b734:	mov	x26, x0
  40b738:	cbz	x0, 40b828 <variable_expand_string@@Base+0x2f4>
  40b73c:	add	x27, x0, #0x1
  40b740:	mov	x1, x21
  40b744:	mov	x0, x27
  40b748:	mov	w2, #0x3d                  	// #61
  40b74c:	bl	416c5c <lindex@@Base>
  40b750:	mov	x25, x0
  40b754:	cbz	x0, 40b828 <variable_expand_string@@Base+0x2f4>
  40b758:	sub	x26, x26, x28
  40b75c:	mov	x0, x28
  40b760:	mov	x1, x26
  40b764:	bl	41fcdc <lookup_variable@@Base>
  40b768:	mov	x24, x0
  40b76c:	cbnz	x0, 40b870 <variable_expand_string@@Base+0x33c>
  40b770:	ldr	x1, [x29, #128]
  40b774:	ldr	w1, [x1]
  40b778:	cbz	w1, 40b7ac <variable_expand_string@@Base+0x278>
  40b77c:	adrp	x1, 440000 <output_context@@Base+0x1248>
  40b780:	mov	w2, #0x5                   	// #5
  40b784:	ldr	x21, [x1, #3560]
  40b788:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40b78c:	add	x1, x1, #0xaca
  40b790:	bl	406d60 <dcgettext@plt>
  40b794:	mov	x4, x28
  40b798:	mov	x2, x0
  40b79c:	mov	w3, w26
  40b7a0:	mov	x1, x26
  40b7a4:	mov	x0, x21
  40b7a8:	bl	417aa8 <error@@Base>
  40b7ac:	mov	x0, x23
  40b7b0:	bl	406c20 <free@plt>
  40b7b4:	b	40b6b4 <variable_expand_string@@Base+0x180>
  40b7b8:	cmp	w25, w0
  40b7bc:	b.ne	40b7d8 <variable_expand_string@@Base+0x2a4>  // b.any
  40b7c0:	add	w27, w27, #0x1
  40b7c4:	add	x20, x20, #0x1
  40b7c8:	ldrb	w0, [x20]
  40b7cc:	cbnz	w0, 40b7b8 <variable_expand_string@@Base+0x284>
  40b7d0:	mov	x23, #0x0                   	// #0
  40b7d4:	b	40b724 <variable_expand_string@@Base+0x1f0>
  40b7d8:	cmp	w0, w24
  40b7dc:	b.ne	40b7c4 <variable_expand_string@@Base+0x290>  // b.any
  40b7e0:	sub	w27, w27, #0x1
  40b7e4:	cmn	w27, #0x1
  40b7e8:	b.ne	40b7c4 <variable_expand_string@@Base+0x290>  // b.any
  40b7ec:	mov	x1, x20
  40b7f0:	mov	x0, x28
  40b7f4:	bl	40b1fc <expand_argument@@Base>
  40b7f8:	mov	x28, x0
  40b7fc:	mov	x23, x28
  40b800:	bl	406700 <strlen@plt>
  40b804:	add	x21, x28, x0
  40b808:	b	40b724 <variable_expand_string@@Base+0x1f0>
  40b80c:	mov	x20, x28
  40b810:	b	40b7c8 <variable_expand_string@@Base+0x294>
  40b814:	mov	x5, x27
  40b818:	mov	x21, x25
  40b81c:	mov	x27, x4
  40b820:	mov	x25, x3
  40b824:	b	40b93c <variable_expand_string@@Base+0x408>
  40b828:	mov	x0, x19
  40b82c:	sub	x2, x21, x28
  40b830:	mov	x1, x28
  40b834:	bl	40b45c <recursively_expand_for_file@@Base+0x1a0>
  40b838:	mov	x19, x0
  40b83c:	b	40b7ac <variable_expand_string@@Base+0x278>
  40b840:	mov	x0, x22
  40b844:	bl	406c20 <free@plt>
  40b848:	mov	x0, x19
  40b84c:	mov	x2, #0x1                   	// #1
  40b850:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40b854:	add	x1, x1, #0x819
  40b858:	bl	40b138 <variable_buffer_output@@Base>
  40b85c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40b860:	ldr	x1, [x29, #136]
  40b864:	ldr	x0, [x0, #1912]
  40b868:	add	x0, x0, x1
  40b86c:	b	40b590 <variable_expand_string@@Base+0x5c>
  40b870:	ldr	x28, [x0, #8]
  40b874:	ldrb	w1, [x28]
  40b878:	cbz	w1, 40b7ac <variable_expand_string@@Base+0x278>
  40b87c:	ldrb	w1, [x24, #44]
  40b880:	tbz	w1, #0, 40b890 <variable_expand_string@@Base+0x35c>
  40b884:	mov	x1, #0x0                   	// #0
  40b888:	bl	40b2bc <recursively_expand_for_file@@Base>
  40b88c:	mov	x28, x0
  40b890:	sub	x2, x25, x27
  40b894:	add	x5, x25, #0x1
  40b898:	add	x0, x2, #0x11
  40b89c:	mov	w8, #0x25                  	// #37
  40b8a0:	and	x0, x0, #0xfffffffffffffff0
  40b8a4:	mov	x1, x27
  40b8a8:	sub	sp, sp, x0
  40b8ac:	str	w8, [x29, #116]
  40b8b0:	mov	x3, sp
  40b8b4:	stp	x5, x3, [x29, #96]
  40b8b8:	mov	x25, x3
  40b8bc:	str	x2, [x29, #120]
  40b8c0:	strb	w8, [x25], #1
  40b8c4:	mov	x0, x25
  40b8c8:	bl	4066c0 <memcpy@plt>
  40b8cc:	ldr	x5, [x29, #96]
  40b8d0:	ldr	x2, [x29, #120]
  40b8d4:	sub	x21, x21, x5
  40b8d8:	add	x0, x21, #0x11
  40b8dc:	ldr	w8, [x29, #116]
  40b8e0:	and	x0, x0, #0xfffffffffffffff0
  40b8e4:	mov	x1, x5
  40b8e8:	sub	sp, sp, x0
  40b8ec:	strb	wzr, [x25, x2]
  40b8f0:	mov	x4, sp
  40b8f4:	mov	x2, x21
  40b8f8:	mov	x27, x4
  40b8fc:	str	x4, [x29, #120]
  40b900:	strb	w8, [x27], #1
  40b904:	mov	x0, x27
  40b908:	bl	4066c0 <memcpy@plt>
  40b90c:	strb	wzr, [x27, x21]
  40b910:	mov	x0, x25
  40b914:	bl	418e90 <find_percent@@Base>
  40b918:	ldr	x3, [x29, #104]
  40b91c:	ldr	x4, [x29, #120]
  40b920:	cbz	x0, 40b814 <variable_expand_string@@Base+0x2e0>
  40b924:	add	x21, x0, #0x1
  40b928:	mov	x0, x27
  40b92c:	bl	418e90 <find_percent@@Base>
  40b930:	mov	x5, x0
  40b934:	cbz	x0, 40b93c <variable_expand_string@@Base+0x408>
  40b938:	add	x5, x0, #0x1
  40b93c:	mov	x0, x19
  40b940:	mov	x4, x21
  40b944:	mov	x3, x27
  40b948:	mov	x2, x25
  40b94c:	mov	x1, x28
  40b950:	bl	40f304 <patsubst_expand_pat@@Base>
  40b954:	mov	x19, x0
  40b958:	ldrb	w0, [x24, #44]
  40b95c:	tbz	w0, #0, 40b7ac <variable_expand_string@@Base+0x278>
  40b960:	mov	x0, x28
  40b964:	bl	406c20 <free@plt>
  40b968:	b	40b7ac <variable_expand_string@@Base+0x278>
  40b96c:	stp	x29, x30, [sp, #-64]!
  40b970:	mov	x29, sp
  40b974:	stp	x19, x20, [sp, #16]
  40b978:	mov	x19, x2
  40b97c:	stp	x21, x22, [sp, #32]
  40b980:	mov	x22, x0
  40b984:	mov	w21, w3
  40b988:	stp	x23, x24, [sp, #48]
  40b98c:	mov	x23, x1
  40b990:	cbnz	x19, 40b9a8 <variable_expand_string@@Base+0x474>
  40b994:	ldp	x19, x20, [sp, #16]
  40b998:	ldp	x21, x22, [sp, #32]
  40b99c:	ldp	x23, x24, [sp, #48]
  40b9a0:	ldp	x29, x30, [sp], #64
  40b9a4:	b	40b0f8 <hash_init_directories@@Base+0x64>
  40b9a8:	cbz	w21, 40b9e8 <variable_expand_string@@Base+0x4b4>
  40b9ac:	ldr	w0, [x19, #16]
  40b9b0:	cmp	w0, #0x0
  40b9b4:	cset	w24, eq  // eq = none
  40b9b8:	ldr	x2, [x19, #8]
  40b9bc:	mov	x1, x23
  40b9c0:	mov	x0, x22
  40b9c4:	bl	41fe8c <lookup_variable_in_set@@Base>
  40b9c8:	mov	x20, x0
  40b9cc:	cbz	x0, 40b9dc <variable_expand_string@@Base+0x4a8>
  40b9d0:	ldrb	w0, [x0, #44]
  40b9d4:	cbnz	w21, 40b9f0 <variable_expand_string@@Base+0x4bc>
  40b9d8:	tbz	w0, #7, 40b9f0 <variable_expand_string@@Base+0x4bc>
  40b9dc:	mov	w21, w24
  40b9e0:	ldr	x19, [x19]
  40b9e4:	b	40b990 <variable_expand_string@@Base+0x45c>
  40b9e8:	mov	w24, #0x0                   	// #0
  40b9ec:	b	40b9b8 <variable_expand_string@@Base+0x484>
  40b9f0:	tbz	w0, #1, 40ba68 <variable_expand_string@@Base+0x534>
  40b9f4:	ldr	x2, [x19]
  40b9f8:	mov	w3, w24
  40b9fc:	mov	x1, x23
  40ba00:	mov	x0, x22
  40ba04:	bl	40b96c <variable_expand_string@@Base+0x438>
  40ba08:	mov	x19, x0
  40ba0c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40ba10:	ldr	x0, [x0, #1912]
  40ba14:	cmp	x0, x19
  40ba18:	b.cs	40ba34 <variable_expand_string@@Base+0x500>  // b.hs, b.nlast
  40ba1c:	mov	x0, x19
  40ba20:	mov	x2, #0x1                   	// #1
  40ba24:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40ba28:	add	x1, x1, #0x39d
  40ba2c:	bl	40b138 <variable_buffer_output@@Base>
  40ba30:	mov	x19, x0
  40ba34:	ldr	x21, [x20, #8]
  40ba38:	mov	x0, x21
  40ba3c:	bl	406700 <strlen@plt>
  40ba40:	mov	x2, x0
  40ba44:	ldrb	w0, [x20, #44]
  40ba48:	mov	x1, x21
  40ba4c:	tbnz	w0, #0, 40ba70 <variable_expand_string@@Base+0x53c>
  40ba50:	mov	x0, x19
  40ba54:	ldp	x19, x20, [sp, #16]
  40ba58:	ldp	x21, x22, [sp, #32]
  40ba5c:	ldp	x23, x24, [sp, #48]
  40ba60:	ldp	x29, x30, [sp], #64
  40ba64:	b	40b138 <variable_buffer_output@@Base>
  40ba68:	bl	40b0f8 <hash_init_directories@@Base+0x64>
  40ba6c:	b	40ba08 <variable_expand_string@@Base+0x4d4>
  40ba70:	mov	x0, x19
  40ba74:	bl	40b534 <variable_expand_string@@Base>
  40ba78:	mov	x19, x0
  40ba7c:	bl	406700 <strlen@plt>
  40ba80:	add	x0, x19, x0
  40ba84:	ldp	x19, x20, [sp, #16]
  40ba88:	ldp	x21, x22, [sp, #32]
  40ba8c:	ldp	x23, x24, [sp, #48]
  40ba90:	ldp	x29, x30, [sp], #64
  40ba94:	ret

000000000040ba98 <variable_expand@@Base>:
  40ba98:	mov	x1, x0
  40ba9c:	mov	x2, #0xffffffffffffffff    	// #-1
  40baa0:	mov	x0, #0x0                   	// #0
  40baa4:	b	40b534 <variable_expand_string@@Base>

000000000040baa8 <variable_expand_for_file@@Base>:
  40baa8:	cbnz	x1, 40bab0 <variable_expand_for_file@@Base+0x8>
  40baac:	b	40ba98 <variable_expand@@Base>
  40bab0:	stp	x29, x30, [sp, #-48]!
  40bab4:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  40bab8:	mov	x3, x0
  40babc:	mov	x29, sp
  40bac0:	ldr	x0, [x1, #80]
  40bac4:	stp	x19, x20, [sp, #16]
  40bac8:	adrp	x19, 440000 <output_context@@Base+0x1248>
  40bacc:	ldr	x1, [x1, #32]
  40bad0:	stp	x21, x22, [sp, #32]
  40bad4:	mov	x20, x2
  40bad8:	ldr	x22, [x2, #304]
  40badc:	str	x0, [x2, #304]
  40bae0:	ldr	x21, [x19, #3560]
  40bae4:	cbz	x1, 40baf4 <variable_expand_for_file@@Base+0x4c>
  40bae8:	ldr	x0, [x1]
  40baec:	cmp	x0, #0x0
  40baf0:	csel	x1, x1, xzr, ne  // ne = any
  40baf4:	str	x1, [x19, #3560]
  40baf8:	mov	x0, x3
  40bafc:	bl	40ba98 <variable_expand@@Base>
  40bb00:	str	x22, [x20, #304]
  40bb04:	str	x21, [x19, #3560]
  40bb08:	ldp	x19, x20, [sp, #16]
  40bb0c:	ldp	x21, x22, [sp, #32]
  40bb10:	ldp	x29, x30, [sp], #48
  40bb14:	ret

000000000040bb18 <install_variable_buffer@@Base>:
  40bb18:	adrp	x2, 441000 <commands_started@@Base+0x1c0>
  40bb1c:	ldr	x3, [x2, #1912]
  40bb20:	str	x3, [x0]
  40bb24:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40bb28:	ldr	x0, [x0, #688]
  40bb2c:	str	x0, [x1]
  40bb30:	str	xzr, [x2, #1912]
  40bb34:	b	40b0f8 <hash_init_directories@@Base+0x64>

000000000040bb38 <restore_variable_buffer@@Base>:
  40bb38:	stp	x29, x30, [sp, #-48]!
  40bb3c:	mov	x29, sp
  40bb40:	str	x21, [sp, #32]
  40bb44:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  40bb48:	stp	x19, x20, [sp, #16]
  40bb4c:	mov	x20, x0
  40bb50:	mov	x19, x1
  40bb54:	ldr	x0, [x21, #1912]
  40bb58:	bl	406c20 <free@plt>
  40bb5c:	str	x20, [x21, #1912]
  40bb60:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40bb64:	ldr	x21, [sp, #32]
  40bb68:	str	x19, [x0, #688]
  40bb6c:	ldp	x19, x20, [sp, #16]
  40bb70:	ldp	x29, x30, [sp], #48
  40bb74:	ret
  40bb78:	mov	x0, #0x0                   	// #0
  40bb7c:	ret
  40bb80:	ldr	x0, [x0, #8]
  40bb84:	ldr	x1, [x1, #8]
  40bb88:	cmp	x0, x1
  40bb8c:	b.eq	40bb94 <restore_variable_buffer@@Base+0x5c>  // b.none
  40bb90:	b	406be0 <strcmp@plt>
  40bb94:	mov	w0, #0x0                   	// #0
  40bb98:	ret
  40bb9c:	stp	x29, x30, [sp, #-64]!
  40bba0:	mov	x29, sp
  40bba4:	stp	x19, x20, [sp, #16]
  40bba8:	mov	x19, x0
  40bbac:	ldr	x0, [x0]
  40bbb0:	stp	x21, x22, [sp, #32]
  40bbb4:	str	x23, [sp, #48]
  40bbb8:	cbz	x0, 40bc10 <restore_variable_buffer@@Base+0xd8>
  40bbbc:	ldrb	w1, [x0]
  40bbc0:	cbz	w1, 40bc10 <restore_variable_buffer@@Base+0xd8>
  40bbc4:	bl	41f0e8 <strcache_iscached@@Base>
  40bbc8:	cbnz	w0, 40bc10 <restore_variable_buffer@@Base+0xd8>
  40bbcc:	ldr	x0, [x19]
  40bbd0:	bl	406700 <strlen@plt>
  40bbd4:	mov	x20, x0
  40bbd8:	mov	w2, #0x5                   	// #5
  40bbdc:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40bbe0:	mov	x0, #0x0                   	// #0
  40bbe4:	add	x1, x1, #0xb0d
  40bbe8:	bl	406d60 <dcgettext@plt>
  40bbec:	mov	x2, x0
  40bbf0:	ldr	x5, [x19]
  40bbf4:	lsl	x1, x20, #1
  40bbf8:	adrp	x4, 427000 <_IO_stdin_used@@Base+0x4720>
  40bbfc:	add	x1, x1, #0x4
  40bc00:	add	x4, x4, #0x287
  40bc04:	mov	x3, x5
  40bc08:	mov	x0, #0x0                   	// #0
  40bc0c:	bl	417aa8 <error@@Base>
  40bc10:	ldr	x0, [x19, #8]
  40bc14:	cbz	x0, 40bc74 <restore_variable_buffer@@Base+0x13c>
  40bc18:	ldrb	w1, [x0]
  40bc1c:	cbz	w1, 40bc74 <restore_variable_buffer@@Base+0x13c>
  40bc20:	bl	41f0e8 <strcache_iscached@@Base>
  40bc24:	cbnz	w0, 40bc74 <restore_variable_buffer@@Base+0x13c>
  40bc28:	ldr	x0, [x19]
  40bc2c:	bl	406700 <strlen@plt>
  40bc30:	mov	x20, x0
  40bc34:	ldr	x0, [x19, #8]
  40bc38:	bl	406700 <strlen@plt>
  40bc3c:	mov	x21, x0
  40bc40:	mov	w2, #0x5                   	// #5
  40bc44:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40bc48:	mov	x0, #0x0                   	// #0
  40bc4c:	add	x1, x1, #0xb0d
  40bc50:	bl	406d60 <dcgettext@plt>
  40bc54:	mov	x2, x0
  40bc58:	ldp	x3, x5, [x19]
  40bc5c:	add	x1, x20, x21
  40bc60:	adrp	x4, 423000 <_IO_stdin_used@@Base+0x720>
  40bc64:	add	x1, x1, #0x5
  40bc68:	add	x4, x4, #0xb2b
  40bc6c:	mov	x0, #0x0                   	// #0
  40bc70:	bl	417aa8 <error@@Base>
  40bc74:	ldr	x0, [x19, #16]
  40bc78:	cbz	x0, 40bcdc <restore_variable_buffer@@Base+0x1a4>
  40bc7c:	ldrb	w1, [x0]
  40bc80:	cbz	w1, 40bcdc <restore_variable_buffer@@Base+0x1a4>
  40bc84:	bl	41f0e8 <strcache_iscached@@Base>
  40bc88:	cbnz	w0, 40bcdc <restore_variable_buffer@@Base+0x1a4>
  40bc8c:	ldr	x0, [x19]
  40bc90:	bl	406700 <strlen@plt>
  40bc94:	mov	x20, x0
  40bc98:	ldr	x0, [x19, #16]
  40bc9c:	bl	406700 <strlen@plt>
  40bca0:	mov	x21, x0
  40bca4:	mov	w2, #0x5                   	// #5
  40bca8:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40bcac:	mov	x0, #0x0                   	// #0
  40bcb0:	add	x1, x1, #0xb0d
  40bcb4:	bl	406d60 <dcgettext@plt>
  40bcb8:	mov	x2, x0
  40bcbc:	ldr	x3, [x19]
  40bcc0:	add	x1, x20, x21
  40bcc4:	ldr	x5, [x19, #16]
  40bcc8:	adrp	x4, 423000 <_IO_stdin_used@@Base+0x720>
  40bccc:	add	x1, x1, #0x5
  40bcd0:	add	x4, x4, #0xb31
  40bcd4:	mov	x0, #0x0                   	// #0
  40bcd8:	bl	417aa8 <error@@Base>
  40bcdc:	ldr	x0, [x19, #40]
  40bce0:	cbz	x0, 40bd44 <restore_variable_buffer@@Base+0x20c>
  40bce4:	ldrb	w1, [x0]
  40bce8:	cbz	w1, 40bd44 <restore_variable_buffer@@Base+0x20c>
  40bcec:	bl	41f0e8 <strcache_iscached@@Base>
  40bcf0:	cbnz	w0, 40bd44 <restore_variable_buffer@@Base+0x20c>
  40bcf4:	ldr	x0, [x19]
  40bcf8:	bl	406700 <strlen@plt>
  40bcfc:	mov	x20, x0
  40bd00:	ldr	x0, [x19, #40]
  40bd04:	bl	406700 <strlen@plt>
  40bd08:	mov	x21, x0
  40bd0c:	mov	w2, #0x5                   	// #5
  40bd10:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40bd14:	mov	x0, #0x0                   	// #0
  40bd18:	add	x1, x1, #0xb0d
  40bd1c:	bl	406d60 <dcgettext@plt>
  40bd20:	mov	x2, x0
  40bd24:	ldr	x3, [x19]
  40bd28:	add	x1, x20, x21
  40bd2c:	ldr	x5, [x19, #40]
  40bd30:	adrp	x4, 424000 <_IO_stdin_used@@Base+0x1720>
  40bd34:	add	x1, x1, #0x4
  40bd38:	add	x4, x4, #0xaf4
  40bd3c:	mov	x0, #0x0                   	// #0
  40bd40:	bl	417aa8 <error@@Base>
  40bd44:	ldr	x19, [x19, #24]
  40bd48:	adrp	x21, 423000 <_IO_stdin_used@@Base+0x720>
  40bd4c:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x4720>
  40bd50:	add	x21, x21, #0xb0d
  40bd54:	add	x22, x22, #0x287
  40bd58:	cbnz	x19, 40bd70 <restore_variable_buffer@@Base+0x238>
  40bd5c:	ldp	x19, x20, [sp, #16]
  40bd60:	ldp	x21, x22, [sp, #32]
  40bd64:	ldr	x23, [sp, #48]
  40bd68:	ldp	x29, x30, [sp], #64
  40bd6c:	ret
  40bd70:	ldrb	w0, [x19, #33]
  40bd74:	tbnz	w0, #3, 40bdcc <restore_variable_buffer@@Base+0x294>
  40bd78:	ldr	x0, [x19, #8]
  40bd7c:	cbz	x0, 40bdcc <restore_variable_buffer@@Base+0x294>
  40bd80:	ldrb	w1, [x0]
  40bd84:	cbz	w1, 40bdcc <restore_variable_buffer@@Base+0x294>
  40bd88:	bl	41f0e8 <strcache_iscached@@Base>
  40bd8c:	cbnz	w0, 40bdcc <restore_variable_buffer@@Base+0x294>
  40bd90:	ldr	x0, [x19, #8]
  40bd94:	bl	406700 <strlen@plt>
  40bd98:	mov	x20, x0
  40bd9c:	mov	x1, x21
  40bda0:	mov	w2, #0x5                   	// #5
  40bda4:	mov	x0, #0x0                   	// #0
  40bda8:	bl	406d60 <dcgettext@plt>
  40bdac:	ldr	x5, [x19, #8]
  40bdb0:	lsl	x1, x20, #1
  40bdb4:	mov	x2, x0
  40bdb8:	mov	x4, x22
  40bdbc:	add	x1, x1, #0x4
  40bdc0:	mov	x3, x5
  40bdc4:	mov	x0, #0x0                   	// #0
  40bdc8:	bl	417aa8 <error@@Base>
  40bdcc:	ldr	x0, [x19, #24]
  40bdd0:	cbz	x0, 40be30 <restore_variable_buffer@@Base+0x2f8>
  40bdd4:	ldrb	w1, [x0]
  40bdd8:	cbz	w1, 40be30 <restore_variable_buffer@@Base+0x2f8>
  40bddc:	bl	41f0e8 <strcache_iscached@@Base>
  40bde0:	cbnz	w0, 40be30 <restore_variable_buffer@@Base+0x2f8>
  40bde4:	ldr	x0, [x19, #8]
  40bde8:	bl	406700 <strlen@plt>
  40bdec:	mov	x20, x0
  40bdf0:	ldr	x0, [x19, #24]
  40bdf4:	bl	406700 <strlen@plt>
  40bdf8:	mov	x23, x0
  40bdfc:	mov	x1, x21
  40be00:	mov	w2, #0x5                   	// #5
  40be04:	mov	x0, #0x0                   	// #0
  40be08:	bl	406d60 <dcgettext@plt>
  40be0c:	ldr	x3, [x19, #8]
  40be10:	add	x1, x20, x23
  40be14:	ldr	x5, [x19, #24]
  40be18:	mov	x2, x0
  40be1c:	adrp	x4, 424000 <_IO_stdin_used@@Base+0x1720>
  40be20:	add	x1, x1, #0x4
  40be24:	add	x4, x4, #0xaf4
  40be28:	mov	x0, #0x0                   	// #0
  40be2c:	bl	417aa8 <error@@Base>
  40be30:	ldr	x19, [x19]
  40be34:	b	40bd58 <restore_variable_buffer@@Base+0x220>
  40be38:	stp	x29, x30, [sp, #-16]!
  40be3c:	mov	x29, sp
  40be40:	ldr	x0, [x0, #8]
  40be44:	bl	410f48 <jhash_string@@Base>
  40be48:	mov	w0, w0
  40be4c:	ldp	x29, x30, [sp], #16
  40be50:	ret

000000000040be54 <lookup_file@@Base>:
  40be54:	stp	x29, x30, [sp, #-160]!
  40be58:	mov	x29, sp
  40be5c:	ldrb	w1, [x0]
  40be60:	cmp	w1, #0x2e
  40be64:	b.ne	40beb0 <lookup_file@@Base+0x5c>  // b.any
  40be68:	ldrb	w1, [x0, #1]
  40be6c:	cmp	w1, #0x2f
  40be70:	b.ne	40be7c <lookup_file@@Base+0x28>  // b.any
  40be74:	ldrb	w1, [x0, #2]
  40be78:	cbnz	w1, 40be98 <lookup_file@@Base+0x44>
  40be7c:	add	x1, sp, #0x10
  40be80:	str	x0, [sp, #24]
  40be84:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40be88:	add	x0, x0, #0x2b8
  40be8c:	bl	41088c <hash_find_item@@Base>
  40be90:	ldp	x29, x30, [sp], #160
  40be94:	ret
  40be98:	add	x0, x0, #0x2
  40be9c:	ldrb	w1, [x0]
  40bea0:	cmp	w1, #0x2f
  40bea4:	b.ne	40be5c <lookup_file@@Base+0x8>  // b.any
  40bea8:	add	x0, x0, #0x1
  40beac:	b	40be9c <lookup_file@@Base+0x48>
  40beb0:	cbnz	w1, 40be7c <lookup_file@@Base+0x28>
  40beb4:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40beb8:	add	x0, x0, #0xb37
  40bebc:	b	40be7c <lookup_file@@Base+0x28>

000000000040bec0 <enter_file@@Base>:
  40bec0:	stp	x29, x30, [sp, #-208]!
  40bec4:	mov	x29, sp
  40bec8:	stp	x21, x22, [sp, #32]
  40becc:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  40bed0:	add	x22, x22, #0x2b8
  40bed4:	mov	x21, x0
  40bed8:	add	x1, sp, #0x40
  40bedc:	stp	x19, x20, [sp, #16]
  40bee0:	str	x23, [sp, #48]
  40bee4:	str	x0, [sp, #72]
  40bee8:	mov	x0, x22
  40beec:	bl	4107ac <hash_find_slot@@Base>
  40bef0:	mov	x23, x0
  40bef4:	ldr	x20, [x0]
  40bef8:	cbz	x20, 40bf3c <enter_file@@Base+0x7c>
  40befc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40bf00:	ldr	x0, [x0, #64]
  40bf04:	cmp	x0, x20
  40bf08:	b.eq	40bf3c <enter_file@@Base+0x7c>  // b.none
  40bf0c:	ldr	x0, [x20, #104]
  40bf10:	cbnz	x0, 40bf3c <enter_file@@Base+0x7c>
  40bf14:	ldrb	w0, [x20, #136]
  40bf18:	mov	x19, x20
  40bf1c:	and	w0, w0, #0xffffffef
  40bf20:	strb	w0, [x20, #136]
  40bf24:	mov	x0, x19
  40bf28:	ldp	x19, x20, [sp, #16]
  40bf2c:	ldp	x21, x22, [sp, #32]
  40bf30:	ldr	x23, [sp, #48]
  40bf34:	ldp	x29, x30, [sp], #208
  40bf38:	ret
  40bf3c:	mov	x0, #0x90                  	// #144
  40bf40:	bl	416a78 <xcalloc@@Base>
  40bf44:	mov	x19, x0
  40bf48:	ldrb	w0, [x0, #136]
  40bf4c:	mov	w1, #0x1                   	// #1
  40bf50:	bfxil	w0, w1, #0, #2
  40bf54:	stp	x21, x21, [x19]
  40bf58:	strb	w0, [x19, #136]
  40bf5c:	cbz	x20, 40bf70 <enter_file@@Base+0xb0>
  40bf60:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40bf64:	ldr	x0, [x0, #64]
  40bf68:	cmp	x0, x20
  40bf6c:	b.ne	40bf88 <enter_file@@Base+0xc8>  // b.any
  40bf70:	str	x19, [x19, #64]
  40bf74:	mov	x2, x23
  40bf78:	mov	x1, x19
  40bf7c:	mov	x0, x22
  40bf80:	bl	4108b8 <hash_insert_at@@Base>
  40bf84:	b	40bf24 <enter_file@@Base+0x64>
  40bf88:	ldr	x0, [x20, #64]
  40bf8c:	str	x20, [x19, #104]
  40bf90:	str	x19, [x0, #56]
  40bf94:	str	x19, [x20, #64]
  40bf98:	b	40bf24 <enter_file@@Base+0x64>

000000000040bf9c <rehash_file@@Base>:
  40bf9c:	stp	x29, x30, [sp, #-208]!
  40bfa0:	mov	x29, sp
  40bfa4:	stp	x21, x22, [sp, #32]
  40bfa8:	mov	x21, x1
  40bfac:	ldrb	w1, [x0, #136]
  40bfb0:	stp	x19, x20, [sp, #16]
  40bfb4:	mov	x20, x0
  40bfb8:	and	w1, w1, #0xffffffef
  40bfbc:	stp	x23, x24, [sp, #48]
  40bfc0:	strb	w1, [x0, #136]
  40bfc4:	add	x1, sp, #0x40
  40bfc8:	str	x21, [sp, #72]
  40bfcc:	bl	40bb80 <restore_variable_buffer@@Base+0x48>
  40bfd0:	cbz	w0, 40c05c <rehash_file@@Base+0xc0>
  40bfd4:	ldr	x0, [x20, #8]
  40bfd8:	str	x0, [sp, #72]
  40bfdc:	mov	x19, x20
  40bfe0:	ldr	x20, [x20, #72]
  40bfe4:	cbnz	x20, 40bfdc <rehash_file@@Base+0x40>
  40bfe8:	add	x1, sp, #0x40
  40bfec:	mov	x0, x19
  40bff0:	bl	40bb80 <restore_variable_buffer@@Base+0x48>
  40bff4:	cbz	w0, 40bffc <rehash_file@@Base+0x60>
  40bff8:	bl	406b50 <abort@plt>
  40bffc:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  40c000:	add	x22, x22, #0x2b8
  40c004:	mov	x1, x19
  40c008:	mov	x0, x22
  40c00c:	bl	410ac8 <hash_delete@@Base>
  40c010:	cmp	x19, x0
  40c014:	b.ne	40bff8 <rehash_file@@Base+0x5c>  // b.any
  40c018:	add	x1, sp, #0x40
  40c01c:	mov	x0, x22
  40c020:	str	x21, [sp, #72]
  40c024:	bl	4107ac <hash_find_slot@@Base>
  40c028:	mov	x2, x0
  40c02c:	ldr	x20, [x0]
  40c030:	str	x21, [x19, #8]
  40c034:	ldr	x0, [x19, #104]
  40c038:	cbnz	x0, 40c070 <rehash_file@@Base+0xd4>
  40c03c:	cbz	x20, 40c050 <rehash_file@@Base+0xb4>
  40c040:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c044:	ldr	x0, [x0, #64]
  40c048:	cmp	x0, x20
  40c04c:	b.ne	40c07c <rehash_file@@Base+0xe0>  // b.any
  40c050:	mov	x1, x19
  40c054:	mov	x0, x22
  40c058:	bl	4108b8 <hash_insert_at@@Base>
  40c05c:	ldp	x19, x20, [sp, #16]
  40c060:	ldp	x21, x22, [sp, #32]
  40c064:	ldp	x23, x24, [sp, #48]
  40c068:	ldp	x29, x30, [sp], #208
  40c06c:	ret
  40c070:	str	x21, [x0, #8]
  40c074:	ldr	x0, [x0, #56]
  40c078:	b	40c038 <rehash_file@@Base+0x9c>
  40c07c:	ldr	x23, [x19, #32]
  40c080:	cbz	x23, 40c090 <rehash_file@@Base+0xf4>
  40c084:	ldr	x24, [x20, #32]
  40c088:	cbnz	x24, 40c108 <rehash_file@@Base+0x16c>
  40c08c:	str	x23, [x20, #32]
  40c090:	ldr	x0, [x20, #24]
  40c094:	ldr	x1, [x19, #24]
  40c098:	cbnz	x0, 40c1fc <rehash_file@@Base+0x260>
  40c09c:	str	x1, [x20, #24]
  40c0a0:	ldr	x1, [x19, #80]
  40c0a4:	add	x0, x20, #0x50
  40c0a8:	bl	41ffe0 <merge_variable_set_lists@@Base>
  40c0ac:	ldr	x0, [x20, #104]
  40c0b0:	cbz	x0, 40c210 <rehash_file@@Base+0x274>
  40c0b4:	ldrb	w0, [x19, #137]
  40c0b8:	tbz	w0, #3, 40c24c <rehash_file@@Base+0x2b0>
  40c0bc:	ldr	x0, [x19, #104]
  40c0c0:	cbnz	x0, 40c24c <rehash_file@@Base+0x2b0>
  40c0c4:	ldr	x0, [x19]
  40c0c8:	bl	406700 <strlen@plt>
  40c0cc:	mov	x22, x0
  40c0d0:	mov	x0, x21
  40c0d4:	bl	406700 <strlen@plt>
  40c0d8:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c0dc:	mov	x20, x0
  40c0e0:	add	x1, x1, #0xc10
  40c0e4:	mov	w2, #0x5                   	// #5
  40c0e8:	mov	x0, #0x0                   	// #0
  40c0ec:	bl	406d60 <dcgettext@plt>
  40c0f0:	ldr	x3, [x19]
  40c0f4:	mov	x2, x0
  40c0f8:	mov	x4, x21
  40c0fc:	add	x1, x22, x20
  40c100:	mov	x0, #0x0                   	// #0
  40c104:	bl	417d24 <fatal@@Base>
  40c108:	cmp	x23, x24
  40c10c:	b.eq	40c090 <rehash_file@@Base+0xf4>  // b.none
  40c110:	ldr	x0, [x19]
  40c114:	bl	406700 <strlen@plt>
  40c118:	mov	x22, x0
  40c11c:	ldr	x0, [x24]
  40c120:	cbz	x0, 40c1d0 <rehash_file@@Base+0x234>
  40c124:	bl	406700 <strlen@plt>
  40c128:	mov	x24, x0
  40c12c:	mov	w2, #0x5                   	// #5
  40c130:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c134:	mov	x0, #0x0                   	// #0
  40c138:	add	x1, x1, #0xb3a
  40c13c:	bl	406d60 <dcgettext@plt>
  40c140:	mov	x2, x0
  40c144:	ldr	x3, [x20, #32]
  40c148:	add	x1, x22, #0x14
  40c14c:	add	x1, x1, x24
  40c150:	mov	x0, x23
  40c154:	ldp	x4, x5, [x3]
  40c158:	ldr	x3, [x19]
  40c15c:	bl	417aa8 <error@@Base>
  40c160:	mov	x0, x21
  40c164:	bl	406700 <strlen@plt>
  40c168:	mov	w2, #0x5                   	// #5
  40c16c:	add	x22, x0, x22
  40c170:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c174:	mov	x0, #0x0                   	// #0
  40c178:	add	x1, x1, #0xba0
  40c17c:	ldr	x23, [x19, #32]
  40c180:	bl	406d60 <dcgettext@plt>
  40c184:	ldr	x3, [x19]
  40c188:	mov	x4, x21
  40c18c:	mov	x2, x0
  40c190:	mov	x1, x22
  40c194:	mov	x0, x23
  40c198:	bl	417aa8 <error@@Base>
  40c19c:	mov	w2, #0x5                   	// #5
  40c1a0:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c1a4:	mov	x0, #0x0                   	// #0
  40c1a8:	add	x1, x1, #0xbd2
  40c1ac:	ldr	x23, [x19, #32]
  40c1b0:	bl	406d60 <dcgettext@plt>
  40c1b4:	ldr	x4, [x19]
  40c1b8:	mov	x2, x0
  40c1bc:	mov	x3, x21
  40c1c0:	mov	x1, x22
  40c1c4:	mov	x0, x23
  40c1c8:	bl	417aa8 <error@@Base>
  40c1cc:	b	40c090 <rehash_file@@Base+0xf4>
  40c1d0:	mov	w2, #0x5                   	// #5
  40c1d4:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c1d8:	mov	x0, #0x0                   	// #0
  40c1dc:	add	x1, x1, #0xb68
  40c1e0:	bl	406d60 <dcgettext@plt>
  40c1e4:	mov	x2, x0
  40c1e8:	ldr	x3, [x19]
  40c1ec:	mov	x1, x22
  40c1f0:	mov	x0, x23
  40c1f4:	bl	417aa8 <error@@Base>
  40c1f8:	b	40c160 <rehash_file@@Base+0x1c4>
  40c1fc:	mov	x2, x0
  40c200:	ldr	x0, [x0]
  40c204:	cbnz	x0, 40c1fc <rehash_file@@Base+0x260>
  40c208:	str	x1, [x2]
  40c20c:	b	40c0a0 <rehash_file@@Base+0x104>
  40c210:	ldr	x0, [x19, #104]
  40c214:	cbz	x0, 40c24c <rehash_file@@Base+0x2b0>
  40c218:	ldrb	w1, [x20, #137]
  40c21c:	tbz	w1, #3, 40c248 <rehash_file@@Base+0x2ac>
  40c220:	ldr	x0, [x19]
  40c224:	bl	406700 <strlen@plt>
  40c228:	mov	x22, x0
  40c22c:	mov	x0, x21
  40c230:	bl	406700 <strlen@plt>
  40c234:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c238:	mov	x20, x0
  40c23c:	add	x1, x1, #0xc44
  40c240:	mov	w2, #0x5                   	// #5
  40c244:	b	40c0e8 <rehash_file@@Base+0x14c>
  40c248:	str	x0, [x20, #104]
  40c24c:	ldr	x0, [x19, #112]
  40c250:	ldr	x1, [x20, #112]
  40c254:	cmp	x0, x1
  40c258:	b.ls	40c260 <rehash_file@@Base+0x2c4>  // b.plast
  40c25c:	str	x0, [x20, #112]
  40c260:	ldrb	w2, [x19, #136]
  40c264:	ldrb	w1, [x20, #136]
  40c268:	ldr	x0, [x19, #120]
  40c26c:	ubfx	x2, x2, #5, #1
  40c270:	str	x0, [x20, #120]
  40c274:	ubfx	x0, x1, #5, #1
  40c278:	orr	w0, w0, w2
  40c27c:	bfi	w1, w0, #5, #1
  40c280:	strb	w1, [x20, #136]
  40c284:	ldrb	w0, [x20, #137]
  40c288:	ldrb	w3, [x19, #137]
  40c28c:	ubfx	x2, x0, #0, #1
  40c290:	ubfx	x3, x3, #0, #1
  40c294:	orr	w2, w2, w3
  40c298:	bfxil	w0, w2, #0, #1
  40c29c:	strb	w0, [x20, #137]
  40c2a0:	ldrb	w3, [x19, #137]
  40c2a4:	ubfx	x2, x0, #1, #1
  40c2a8:	ubfx	x3, x3, #1, #1
  40c2ac:	orr	w2, w2, w3
  40c2b0:	bfi	w0, w2, #1, #1
  40c2b4:	strb	w0, [x20, #137]
  40c2b8:	ldrb	w3, [x19, #137]
  40c2bc:	ubfx	x2, x0, #2, #1
  40c2c0:	ubfx	x3, x3, #2, #1
  40c2c4:	orr	w2, w2, w3
  40c2c8:	bfi	w0, w2, #2, #1
  40c2cc:	strb	w0, [x20, #137]
  40c2d0:	ldrb	w3, [x19, #137]
  40c2d4:	ubfx	x2, x0, #3, #1
  40c2d8:	ubfx	x3, x3, #3, #1
  40c2dc:	orr	w2, w2, w3
  40c2e0:	bfi	w0, w2, #3, #1
  40c2e4:	strb	w0, [x20, #137]
  40c2e8:	ldrb	w3, [x19, #137]
  40c2ec:	ubfx	x2, x0, #4, #1
  40c2f0:	ubfx	x3, x3, #4, #1
  40c2f4:	orr	w2, w2, w3
  40c2f8:	bfi	w0, w2, #4, #1
  40c2fc:	strb	w0, [x20, #137]
  40c300:	ldrb	w3, [x19, #137]
  40c304:	ubfx	x2, x0, #5, #1
  40c308:	ubfx	x3, x3, #5, #1
  40c30c:	orr	w2, w2, w3
  40c310:	bfi	w0, w2, #5, #1
  40c314:	strb	w0, [x20, #137]
  40c318:	ubfx	x0, x1, #6, #1
  40c31c:	ldrb	w2, [x19, #136]
  40c320:	ubfx	x2, x2, #6, #1
  40c324:	orr	w0, w0, w2
  40c328:	bfi	w1, w0, #6, #1
  40c32c:	strb	w1, [x20, #136]
  40c330:	ldrb	w0, [x20, #138]
  40c334:	and	w1, w1, #0xffffffef
  40c338:	ldrb	w3, [x19, #138]
  40c33c:	strb	w1, [x20, #136]
  40c340:	ubfx	x2, x0, #1, #1
  40c344:	ubfx	x3, x3, #1, #1
  40c348:	orr	w2, w2, w3
  40c34c:	bfi	w0, w2, #1, #1
  40c350:	strb	w0, [x20, #138]
  40c354:	str	x20, [x19, #72]
  40c358:	b	40c05c <rehash_file@@Base+0xc0>

000000000040c35c <rename_file@@Base>:
  40c35c:	stp	x29, x30, [sp, #-32]!
  40c360:	mov	x29, sp
  40c364:	str	x19, [sp, #16]
  40c368:	mov	x19, x0
  40c36c:	bl	40bf9c <rehash_file@@Base>
  40c370:	cbnz	x19, 40c380 <rename_file@@Base+0x24>
  40c374:	ldr	x19, [sp, #16]
  40c378:	ldp	x29, x30, [sp], #32
  40c37c:	ret
  40c380:	ldr	x0, [x19, #8]
  40c384:	str	x0, [x19]
  40c388:	ldr	x19, [x19, #56]
  40c38c:	b	40c370 <rename_file@@Base+0x14>

000000000040c390 <remove_intermediates@@Base>:
  40c390:	stp	x29, x30, [sp, #-96]!
  40c394:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  40c398:	mov	x29, sp
  40c39c:	stp	x21, x22, [sp, #32]
  40c3a0:	mov	w21, w0
  40c3a4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c3a8:	ldr	w1, [x1, #2196]
  40c3ac:	ldr	w0, [x0, #3412]
  40c3b0:	stp	x19, x20, [sp, #16]
  40c3b4:	orr	w0, w0, w1
  40c3b8:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40c3bc:	add	x2, x1, #0x2b8
  40c3c0:	stp	x23, x24, [sp, #48]
  40c3c4:	ldr	w3, [x2, #88]
  40c3c8:	stp	x25, x26, [sp, #64]
  40c3cc:	orr	w0, w0, w3
  40c3d0:	stp	x27, x28, [sp, #80]
  40c3d4:	cbnz	w0, 40c5a4 <remove_intermediates@@Base+0x214>
  40c3d8:	cbz	w21, 40c3e8 <remove_intermediates@@Base+0x58>
  40c3dc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40c3e0:	ldr	w0, [x0, #1992]
  40c3e4:	cbnz	w0, 40c5a4 <remove_intermediates@@Base+0x214>
  40c3e8:	ldr	x22, [x1, #696]
  40c3ec:	mov	w28, #0x20                  	// #32
  40c3f0:	ldr	x24, [x2, #32]
  40c3f4:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  40c3f8:	adrp	x26, 422000 <fd_inherit@@Base+0x20>
  40c3fc:	add	x25, x25, #0x7c8
  40c400:	add	x26, x26, #0xa91
  40c404:	mov	w20, #0x0                   	// #0
  40c408:	add	x24, x22, x24, lsl #3
  40c40c:	movk	w28, #0x1, lsl #16
  40c410:	cmp	x22, x24
  40c414:	b.cc	40c450 <remove_intermediates@@Base+0xc0>  // b.lo, b.ul, b.last
  40c418:	cmp	w21, #0x0
  40c41c:	csel	w20, w20, wzr, eq  // eq = none
  40c420:	cbz	w20, 40c5a4 <remove_intermediates@@Base+0x214>
  40c424:	mov	w0, #0xa                   	// #10
  40c428:	bl	406e20 <putchar@plt>
  40c42c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c430:	ldp	x19, x20, [sp, #16]
  40c434:	ldp	x21, x22, [sp, #32]
  40c438:	ldp	x23, x24, [sp, #48]
  40c43c:	ldp	x25, x26, [sp, #64]
  40c440:	ldp	x27, x28, [sp, #80]
  40c444:	ldp	x29, x30, [sp], #96
  40c448:	ldr	x0, [x0, #400]
  40c44c:	b	406cb0 <fflush@plt>
  40c450:	ldr	x19, [x22]
  40c454:	cbz	x19, 40c4c4 <remove_intermediates@@Base+0x134>
  40c458:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c45c:	ldr	x0, [x0, #64]
  40c460:	cmp	x19, x0
  40c464:	b.eq	40c4c4 <remove_intermediates@@Base+0x134>  // b.none
  40c468:	ldrb	w1, [x19, #137]
  40c46c:	tbz	w1, #6, 40c4c4 <remove_intermediates@@Base+0x134>
  40c470:	ldr	w0, [x19, #136]
  40c474:	and	w0, w0, w28
  40c478:	cmp	w0, #0x20
  40c47c:	b.eq	40c4c4 <remove_intermediates@@Base+0x134>  // b.none
  40c480:	mov	w0, #0xffffff90            	// #-112
  40c484:	tst	w1, w0
  40c488:	b.ne	40c4c4 <remove_intermediates@@Base+0x134>  // b.any
  40c48c:	ldrb	w0, [x19, #136]
  40c490:	and	w0, w0, #0x3
  40c494:	cmp	w0, #0x1
  40c498:	b.eq	40c4c4 <remove_intermediates@@Base+0x134>  // b.none
  40c49c:	ldr	w0, [x25]
  40c4a0:	cbnz	w0, 40c4cc <remove_intermediates@@Base+0x13c>
  40c4a4:	ldr	x0, [x19]
  40c4a8:	bl	406e50 <unlink@plt>
  40c4ac:	mov	w23, w0
  40c4b0:	tbz	w0, #31, 40c4d0 <remove_intermediates@@Base+0x140>
  40c4b4:	bl	406e00 <__errno_location@plt>
  40c4b8:	ldr	w0, [x0]
  40c4bc:	cmp	w0, #0x2
  40c4c0:	b.ne	40c4d0 <remove_intermediates@@Base+0x140>  // b.any
  40c4c4:	add	x22, x22, #0x8
  40c4c8:	b	40c410 <remove_intermediates@@Base+0x80>
  40c4cc:	mov	w23, #0x0                   	// #0
  40c4d0:	ldrb	w0, [x19, #138]
  40c4d4:	tbnz	w0, #0, 40c4c4 <remove_intermediates@@Base+0x134>
  40c4d8:	cbz	w21, 40c524 <remove_intermediates@@Base+0x194>
  40c4dc:	ldr	x0, [x19]
  40c4e0:	bl	406700 <strlen@plt>
  40c4e4:	mov	x27, x0
  40c4e8:	mov	w2, #0x5                   	// #5
  40c4ec:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c4f0:	mov	x0, #0x0                   	// #0
  40c4f4:	add	x1, x1, #0xc78
  40c4f8:	bl	406d60 <dcgettext@plt>
  40c4fc:	mov	x2, x0
  40c500:	ldr	x3, [x19]
  40c504:	mov	x1, x27
  40c508:	mov	x0, #0x0                   	// #0
  40c50c:	bl	417aa8 <error@@Base>
  40c510:	tbz	w23, #31, 40c4c4 <remove_intermediates@@Base+0x134>
  40c514:	ldr	x1, [x19]
  40c518:	mov	x0, x26
  40c51c:	bl	417c10 <perror_with_name@@Base>
  40c520:	b	40c4c4 <remove_intermediates@@Base+0x134>
  40c524:	cbnz	w20, 40c558 <remove_intermediates@@Base+0x1c8>
  40c528:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c52c:	ldr	w0, [x0, #1104]
  40c530:	tbz	w0, #0, 40c558 <remove_intermediates@@Base+0x1c8>
  40c534:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40c538:	add	x1, x1, #0xc9c
  40c53c:	mov	w2, #0x5                   	// #5
  40c540:	mov	x0, #0x0                   	// #0
  40c544:	bl	406d60 <dcgettext@plt>
  40c548:	bl	406df0 <printf@plt>
  40c54c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c550:	ldr	x0, [x0, #400]
  40c554:	bl	406cb0 <fflush@plt>
  40c558:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40c55c:	ldr	w0, [x0, #3308]
  40c560:	cbnz	w0, 40c510 <remove_intermediates@@Base+0x180>
  40c564:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  40c568:	cbnz	w20, 40c598 <remove_intermediates@@Base+0x208>
  40c56c:	ldr	x1, [x27, #400]
  40c570:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40c574:	add	x0, x0, #0xcbc
  40c578:	bl	406710 <fputs@plt>
  40c57c:	ldr	x1, [x27, #400]
  40c580:	mov	w20, #0x1                   	// #1
  40c584:	ldr	x0, [x19]
  40c588:	bl	406710 <fputs@plt>
  40c58c:	ldr	x0, [x27, #400]
  40c590:	bl	406cb0 <fflush@plt>
  40c594:	b	40c510 <remove_intermediates@@Base+0x180>
  40c598:	mov	w0, #0x20                  	// #32
  40c59c:	bl	406e20 <putchar@plt>
  40c5a0:	b	40c57c <remove_intermediates@@Base+0x1ec>
  40c5a4:	ldp	x19, x20, [sp, #16]
  40c5a8:	ldp	x21, x22, [sp, #32]
  40c5ac:	ldp	x23, x24, [sp, #48]
  40c5b0:	ldp	x25, x26, [sp, #64]
  40c5b4:	ldp	x27, x28, [sp, #80]
  40c5b8:	ldp	x29, x30, [sp], #96
  40c5bc:	ret

000000000040c5c0 <split_prereqs@@Base>:
  40c5c0:	stp	x29, x30, [sp, #-48]!
  40c5c4:	mov	x1, #0x28                  	// #40
  40c5c8:	mov	w4, #0x0                   	// #0
  40c5cc:	mov	x29, sp
  40c5d0:	mov	x3, #0x0                   	// #0
  40c5d4:	mov	w2, #0x100                 	// #256
  40c5d8:	str	x19, [sp, #16]
  40c5dc:	str	x0, [sp, #40]
  40c5e0:	add	x0, sp, x1
  40c5e4:	bl	419c0c <parse_file_seq@@Base>
  40c5e8:	mov	x19, x0
  40c5ec:	ldr	x0, [sp, #40]
  40c5f0:	ldrb	w1, [x0]
  40c5f4:	cbz	w1, 40c634 <split_prereqs@@Base+0x74>
  40c5f8:	add	x0, x0, #0x1
  40c5fc:	mov	x1, #0x28                  	// #40
  40c600:	mov	w4, #0x0                   	// #0
  40c604:	mov	x3, #0x0                   	// #0
  40c608:	mov	w2, #0x1                   	// #1
  40c60c:	str	x0, [sp, #40]
  40c610:	add	x0, sp, x1
  40c614:	bl	419c0c <parse_file_seq@@Base>
  40c618:	cbz	x19, 40c658 <split_prereqs@@Base+0x98>
  40c61c:	mov	x1, x19
  40c620:	mov	x2, x1
  40c624:	ldr	x1, [x1]
  40c628:	cbnz	x1, 40c620 <split_prereqs@@Base+0x60>
  40c62c:	str	x0, [x2]
  40c630:	cbnz	x0, 40c644 <split_prereqs@@Base+0x84>
  40c634:	mov	x0, x19
  40c638:	ldr	x19, [sp, #16]
  40c63c:	ldp	x29, x30, [sp], #48
  40c640:	ret
  40c644:	ldrb	w1, [x0, #33]
  40c648:	orr	w1, w1, #0x2
  40c64c:	strb	w1, [x0, #33]
  40c650:	ldr	x0, [x0]
  40c654:	b	40c630 <split_prereqs@@Base+0x70>
  40c658:	mov	x19, x0
  40c65c:	b	40c630 <split_prereqs@@Base+0x70>

000000000040c660 <enter_prereqs@@Base>:
  40c660:	stp	x29, x30, [sp, #-96]!
  40c664:	mov	x29, sp
  40c668:	stp	x19, x20, [sp, #16]
  40c66c:	mov	x20, x0
  40c670:	stp	x21, x22, [sp, #32]
  40c674:	stp	x23, x24, [sp, #48]
  40c678:	stp	x25, x26, [sp, #64]
  40c67c:	stp	x27, x28, [sp, #80]
  40c680:	cbz	x0, 40c758 <enter_prereqs@@Base+0xf8>
  40c684:	mov	x22, x1
  40c688:	cbz	x1, 40c750 <enter_prereqs@@Base+0xf0>
  40c68c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  40c690:	adrp	x23, 424000 <_IO_stdin_used@@Base+0x1720>
  40c694:	add	x0, x0, #0x819
  40c698:	adrp	x24, 424000 <_IO_stdin_used@@Base+0x1720>
  40c69c:	bl	40ba98 <variable_expand@@Base>
  40c6a0:	mov	x19, x20
  40c6a4:	mov	x21, x0
  40c6a8:	add	x23, x23, #0x5bf
  40c6ac:	add	x24, x24, #0x5c0
  40c6b0:	mov	x25, #0x0                   	// #0
  40c6b4:	ldr	x27, [x19, #8]
  40c6b8:	mov	x0, x27
  40c6bc:	bl	406700 <strlen@plt>
  40c6c0:	add	x2, x0, #0x10
  40c6c4:	mov	x1, x27
  40c6c8:	and	x2, x2, #0xfffffffffffffff0
  40c6cc:	sub	sp, sp, x2
  40c6d0:	add	x2, x0, #0x1
  40c6d4:	mov	x26, sp
  40c6d8:	mov	x0, x26
  40c6dc:	bl	4066c0 <memcpy@plt>
  40c6e0:	mov	x0, x26
  40c6e4:	bl	418e90 <find_percent@@Base>
  40c6e8:	mov	x27, x0
  40c6ec:	cbz	x0, 40c7b8 <enter_prereqs@@Base+0x158>
  40c6f0:	ldrb	w1, [x22]
  40c6f4:	add	x28, x0, #0x1
  40c6f8:	cbnz	w1, 40c77c <enter_prereqs@@Base+0x11c>
  40c6fc:	bl	406700 <strlen@plt>
  40c700:	mov	x2, x0
  40c704:	mov	x1, x28
  40c708:	mov	x0, x27
  40c70c:	bl	4066d0 <memmove@plt>
  40c710:	mov	x0, x26
  40c714:	bl	406700 <strlen@plt>
  40c718:	add	x2, x0, #0x1
  40c71c:	mov	x1, x26
  40c720:	mov	x0, x21
  40c724:	bl	40b138 <variable_buffer_output@@Base>
  40c728:	ldrb	w1, [x21]
  40c72c:	cbnz	w1, 40c7a8 <enter_prereqs@@Base+0x148>
  40c730:	cmp	x20, x19
  40c734:	b.ne	40c79c <enter_prereqs@@Base+0x13c>  // b.any
  40c738:	ldr	x20, [x20]
  40c73c:	mov	x26, x20
  40c740:	mov	x0, x19
  40c744:	mov	x19, x26
  40c748:	bl	406c20 <free@plt>
  40c74c:	cbnz	x19, 40c6b4 <enter_prereqs@@Base+0x54>
  40c750:	mov	x19, x20
  40c754:	cbnz	x19, 40c7d4 <enter_prereqs@@Base+0x174>
  40c758:	mov	sp, x29
  40c75c:	mov	x0, x20
  40c760:	ldp	x19, x20, [sp, #16]
  40c764:	ldp	x21, x22, [sp, #32]
  40c768:	ldp	x23, x24, [sp, #48]
  40c76c:	ldp	x25, x26, [sp, #64]
  40c770:	ldp	x27, x28, [sp, #80]
  40c774:	ldp	x29, x30, [sp], #96
  40c778:	ret
  40c77c:	mov	x5, x28
  40c780:	mov	x4, x24
  40c784:	mov	x3, x26
  40c788:	mov	x2, x23
  40c78c:	mov	x1, x22
  40c790:	mov	x0, x21
  40c794:	bl	40f304 <patsubst_expand_pat@@Base>
  40c798:	b	40c728 <enter_prereqs@@Base+0xc8>
  40c79c:	ldr	x26, [x19]
  40c7a0:	str	x26, [x25]
  40c7a4:	b	40c740 <enter_prereqs@@Base+0xe0>
  40c7a8:	sub	x1, x0, x21
  40c7ac:	mov	x0, x21
  40c7b0:	bl	41f1b4 <strcache_add_len@@Base>
  40c7b4:	str	x0, [x19, #8]
  40c7b8:	ldrb	w0, [x19, #33]
  40c7bc:	mov	x25, x19
  40c7c0:	str	x22, [x19, #24]
  40c7c4:	orr	w0, w0, #0x4
  40c7c8:	strb	w0, [x19, #33]
  40c7cc:	ldr	x19, [x19]
  40c7d0:	b	40c74c <enter_prereqs@@Base+0xec>
  40c7d4:	ldrb	w0, [x19, #33]
  40c7d8:	tbnz	w0, #3, 40c808 <enter_prereqs@@Base+0x1a8>
  40c7dc:	ldr	x0, [x19, #8]
  40c7e0:	bl	40be54 <lookup_file@@Base>
  40c7e4:	str	x0, [x19, #16]
  40c7e8:	cbnz	x0, 40c7f8 <enter_prereqs@@Base+0x198>
  40c7ec:	ldr	x0, [x19, #8]
  40c7f0:	bl	40bec0 <enter_file@@Base>
  40c7f4:	str	x0, [x19, #16]
  40c7f8:	ldrb	w0, [x19, #33]
  40c7fc:	str	xzr, [x19, #8]
  40c800:	and	w0, w0, #0xfffffffb
  40c804:	strb	w0, [x19, #33]
  40c808:	ldr	x19, [x19]
  40c80c:	b	40c754 <enter_prereqs@@Base+0xf4>
  40c810:	stp	x29, x30, [sp, #-80]!
  40c814:	mov	x29, sp
  40c818:	stp	x19, x20, [sp, #16]
  40c81c:	mov	x20, x0
  40c820:	stp	x21, x22, [sp, #32]
  40c824:	add	x21, x0, #0x18
  40c828:	stp	x23, x24, [sp, #48]
  40c82c:	adrp	x23, 424000 <_IO_stdin_used@@Base+0x1720>
  40c830:	adrp	x24, 423000 <_IO_stdin_used@@Base+0x720>
  40c834:	stp	x25, x26, [sp, #64]
  40c838:	add	x23, x23, #0x819
  40c83c:	add	x24, x24, #0xcc0
  40c840:	ldr	x19, [x20, #24]
  40c844:	mov	w26, #0x0                   	// #0
  40c848:	ldr	x25, [x0, #40]
  40c84c:	ldrb	w0, [x0, #137]
  40c850:	and	w0, w0, #0xfffffffd
  40c854:	strb	w0, [x20, #137]
  40c858:	cbnz	x19, 40c874 <enter_prereqs@@Base+0x214>
  40c85c:	ldp	x19, x20, [sp, #16]
  40c860:	ldp	x21, x22, [sp, #32]
  40c864:	ldp	x23, x24, [sp, #48]
  40c868:	ldp	x25, x26, [sp, #64]
  40c86c:	ldp	x29, x30, [sp], #80
  40c870:	ret
  40c874:	ldr	x22, [x19, #8]
  40c878:	cbz	x22, 40c884 <enter_prereqs@@Base+0x224>
  40c87c:	ldrb	w0, [x19, #33]
  40c880:	tbnz	w0, #3, 40c890 <enter_prereqs@@Base+0x230>
  40c884:	mov	x21, x19
  40c888:	ldr	x19, [x19]
  40c88c:	b	40c858 <enter_prereqs@@Base+0x1f8>
  40c890:	tbz	w0, #2, 40c8e8 <enter_prereqs@@Base+0x288>
  40c894:	mov	x0, x23
  40c898:	bl	40ba98 <variable_expand@@Base>
  40c89c:	mov	x1, x22
  40c8a0:	mov	x3, x24
  40c8a4:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40c8a8:	add	x2, x2, #0x5bf
  40c8ac:	mov	w6, #0x0                   	// #0
  40c8b0:	mov	x5, #0x2                   	// #2
  40c8b4:	mov	x4, #0x1                   	// #1
  40c8b8:	bl	40f10c <subst_expand@@Base>
  40c8bc:	strb	wzr, [x0]
  40c8c0:	mov	x0, x22
  40c8c4:	bl	406c20 <free@plt>
  40c8c8:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40c8cc:	ldr	x0, [x0, #1912]
  40c8d0:	bl	416c24 <xstrdup@@Base>
  40c8d4:	mov	x22, x0
  40c8d8:	ldrb	w0, [x19, #33]
  40c8dc:	str	x22, [x19, #8]
  40c8e0:	and	w0, w0, #0xfffffffb
  40c8e4:	strb	w0, [x19, #33]
  40c8e8:	cbnz	w26, 40c8f8 <enter_prereqs@@Base+0x298>
  40c8ec:	mov	x0, x20
  40c8f0:	mov	w1, #0x0                   	// #0
  40c8f4:	bl	420b80 <initialize_file_variables@@Base>
  40c8f8:	ldr	x0, [x19, #24]
  40c8fc:	cbz	x0, 40c904 <enter_prereqs@@Base+0x2a4>
  40c900:	str	x0, [x20, #40]
  40c904:	mov	x0, x20
  40c908:	bl	409604 <set_file_variables@@Base>
  40c90c:	ldr	x0, [x19, #8]
  40c910:	mov	x1, x20
  40c914:	bl	40baa8 <variable_expand_for_file@@Base>
  40c918:	mov	x26, x0
  40c91c:	ldr	x0, [x19, #24]
  40c920:	cbz	x0, 40c928 <enter_prereqs@@Base+0x2c8>
  40c924:	str	x25, [x20, #40]
  40c928:	mov	x0, x22
  40c92c:	bl	406c20 <free@plt>
  40c930:	mov	x0, x26
  40c934:	bl	40c5c0 <split_prereqs@@Base>
  40c938:	ldr	x1, [x19, #24]
  40c93c:	bl	40c660 <enter_prereqs@@Base>
  40c940:	ldr	x1, [x19]
  40c944:	cbnz	x0, 40c960 <enter_prereqs@@Base+0x300>
  40c948:	str	x1, [x21]
  40c94c:	mov	x0, x19
  40c950:	bl	406c20 <free@plt>
  40c954:	ldr	x19, [x21]
  40c958:	mov	w26, #0x1                   	// #1
  40c95c:	b	40c858 <enter_prereqs@@Base+0x1f8>
  40c960:	str	x0, [x21]
  40c964:	mov	x21, x0
  40c968:	mov	x19, x1
  40c96c:	ldr	x0, [x0]
  40c970:	cbnz	x0, 40c97c <enter_prereqs@@Base+0x31c>
  40c974:	str	x1, [x21]
  40c978:	b	40c958 <enter_prereqs@@Base+0x2f8>
  40c97c:	mov	x21, x0
  40c980:	ldr	x0, [x0]
  40c984:	b	40c970 <enter_prereqs@@Base+0x310>

000000000040c988 <expand_extra_prereqs@@Base>:
  40c988:	stp	x29, x30, [sp, #-32]!
  40c98c:	mov	x29, sp
  40c990:	stp	x19, x20, [sp, #16]
  40c994:	mov	x20, x0
  40c998:	cbz	x0, 40c9b4 <expand_extra_prereqs@@Base+0x2c>
  40c99c:	ldr	x0, [x0, #8]
  40c9a0:	bl	40ba98 <variable_expand@@Base>
  40c9a4:	bl	40c5c0 <split_prereqs@@Base>
  40c9a8:	mov	x20, x0
  40c9ac:	mov	x19, x0
  40c9b0:	cbnz	x19, 40c9c4 <expand_extra_prereqs@@Base+0x3c>
  40c9b4:	mov	x0, x20
  40c9b8:	ldp	x19, x20, [sp, #16]
  40c9bc:	ldp	x29, x30, [sp], #32
  40c9c0:	ret
  40c9c4:	ldr	x0, [x19, #8]
  40c9c8:	bl	40be54 <lookup_file@@Base>
  40c9cc:	str	x0, [x19, #16]
  40c9d0:	cbnz	x0, 40c9e0 <expand_extra_prereqs@@Base+0x58>
  40c9d4:	ldr	x0, [x19, #8]
  40c9d8:	bl	40bec0 <enter_file@@Base>
  40c9dc:	str	x0, [x19, #16]
  40c9e0:	ldrb	w0, [x19, #33]
  40c9e4:	str	xzr, [x19, #8]
  40c9e8:	orr	w0, w0, #0x10
  40c9ec:	strb	w0, [x19, #33]
  40c9f0:	ldr	x19, [x19]
  40c9f4:	b	40c9b0 <expand_extra_prereqs@@Base+0x28>
  40c9f8:	stp	x29, x30, [sp, #-64]!
  40c9fc:	mov	x29, sp
  40ca00:	stp	x19, x20, [sp, #16]
  40ca04:	mov	x19, x0
  40ca08:	mov	x0, x1
  40ca0c:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  40ca10:	stp	x21, x22, [sp, #32]
  40ca14:	ldr	w1, [x1, #2004]
  40ca18:	str	x23, [sp, #48]
  40ca1c:	cbnz	w1, 40ca2c <expand_extra_prereqs@@Base+0xa4>
  40ca20:	ldrb	w1, [x19, #137]
  40ca24:	and	w1, w1, #0xfffffffd
  40ca28:	strb	w1, [x19, #137]
  40ca2c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40ca30:	ldr	w1, [x1, #784]
  40ca34:	cbz	w1, 40ca44 <expand_extra_prereqs@@Base+0xbc>
  40ca38:	ldrb	w1, [x19, #137]
  40ca3c:	orr	w1, w1, #0x40
  40ca40:	strb	w1, [x19, #137]
  40ca44:	ldr	x1, [x19, #80]
  40ca48:	cbz	x1, 40cae0 <expand_extra_prereqs@@Base+0x158>
  40ca4c:	ldr	x2, [x1, #8]
  40ca50:	mov	x1, #0xe                   	// #14
  40ca54:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40ca58:	add	x0, x0, #0xcc3
  40ca5c:	bl	41fe8c <lookup_variable_in_set@@Base>
  40ca60:	bl	40c988 <expand_extra_prereqs@@Base>
  40ca64:	mov	x20, x0
  40ca68:	cbz	x0, 40cacc <expand_extra_prereqs@@Base+0x144>
  40ca6c:	ldr	x22, [x19]
  40ca70:	mov	x21, x0
  40ca74:	add	x23, x22, #0x1
  40ca78:	ldr	x1, [x21, #8]
  40ca7c:	cbnz	x1, 40caf0 <expand_extra_prereqs@@Base+0x168>
  40ca80:	ldr	x0, [x21, #16]
  40ca84:	ldr	x0, [x0]
  40ca88:	cmp	x22, x0
  40ca8c:	b.eq	40cb18 <expand_extra_prereqs@@Base+0x190>  // b.none
  40ca90:	ldrb	w2, [x22]
  40ca94:	ldrb	w0, [x0]
  40ca98:	cmp	w0, w2
  40ca9c:	b.ne	40cab8 <expand_extra_prereqs@@Base+0x130>  // b.any
  40caa0:	cbz	w0, 40cb18 <expand_extra_prereqs@@Base+0x190>
  40caa4:	cbz	x1, 40caf8 <expand_extra_prereqs@@Base+0x170>
  40caa8:	add	x1, x1, #0x1
  40caac:	mov	x0, x23
  40cab0:	bl	406be0 <strcmp@plt>
  40cab4:	cbz	w0, 40cb18 <expand_extra_prereqs@@Base+0x190>
  40cab8:	ldr	x21, [x21]
  40cabc:	cbnz	x21, 40ca78 <expand_extra_prereqs@@Base+0xf0>
  40cac0:	ldr	x0, [x19, #24]
  40cac4:	cbnz	x0, 40cb04 <expand_extra_prereqs@@Base+0x17c>
  40cac8:	str	x20, [x19, #24]
  40cacc:	ldp	x19, x20, [sp, #16]
  40cad0:	ldp	x21, x22, [sp, #32]
  40cad4:	ldr	x23, [sp, #48]
  40cad8:	ldp	x29, x30, [sp], #64
  40cadc:	ret
  40cae0:	ldrb	w1, [x19, #137]
  40cae4:	tbz	w1, #3, 40cacc <expand_extra_prereqs@@Base+0x144>
  40cae8:	bl	416e28 <copy_dep_chain@@Base>
  40caec:	b	40ca64 <expand_extra_prereqs@@Base+0xdc>
  40caf0:	mov	x0, x1
  40caf4:	b	40ca88 <expand_extra_prereqs@@Base+0x100>
  40caf8:	ldr	x0, [x21, #16]
  40cafc:	ldr	x1, [x0]
  40cb00:	b	40caa8 <expand_extra_prereqs@@Base+0x120>
  40cb04:	mov	x1, x0
  40cb08:	ldr	x0, [x0]
  40cb0c:	cbnz	x0, 40cb04 <expand_extra_prereqs@@Base+0x17c>
  40cb10:	str	x20, [x1]
  40cb14:	b	40cacc <expand_extra_prereqs@@Base+0x144>
  40cb18:	mov	x0, x20
  40cb1c:	ldp	x19, x20, [sp, #16]
  40cb20:	ldp	x21, x22, [sp, #32]
  40cb24:	ldr	x23, [sp, #48]
  40cb28:	ldp	x29, x30, [sp], #64
  40cb2c:	b	416eb0 <free_ns_chain@@Base>

000000000040cb30 <snap_deps@@Base>:
  40cb30:	stp	x29, x30, [sp, #-64]!
  40cb34:	mov	w0, #0x1                   	// #1
  40cb38:	mov	x29, sp
  40cb3c:	stp	x19, x20, [sp, #16]
  40cb40:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40cb44:	add	x20, x20, #0x2b8
  40cb48:	stp	x21, x22, [sp, #32]
  40cb4c:	str	w0, [x20, #92]
  40cb50:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40cb54:	stp	x23, x24, [sp, #48]
  40cb58:	ldr	w0, [x0, #2004]
  40cb5c:	cbz	w0, 40cbcc <snap_deps@@Base+0x9c>
  40cb60:	mov	x2, #0x0                   	// #0
  40cb64:	mov	x1, #0x0                   	// #0
  40cb68:	mov	x0, x20
  40cb6c:	bl	410d50 <hash_dump@@Base>
  40cb70:	ldr	x24, [x20, #48]
  40cb74:	mov	x21, x0
  40cb78:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  40cb7c:	add	x0, x0, #0xa9a
  40cb80:	bl	40be54 <lookup_file@@Base>
  40cb84:	mov	x19, x0
  40cb88:	add	x24, x21, x24, lsl #3
  40cb8c:	cbz	x0, 40cba8 <snap_deps@@Base+0x78>
  40cb90:	ldr	x22, [x0]
  40cb94:	mov	x0, x19
  40cb98:	bl	40c810 <enter_prereqs@@Base+0x1b0>
  40cb9c:	ldr	x19, [x19, #56]
  40cba0:	cbnz	x19, 40cb94 <snap_deps@@Base+0x64>
  40cba4:	mov	x19, x22
  40cba8:	mov	x23, x21
  40cbac:	b	40cbbc <snap_deps@@Base+0x8c>
  40cbb0:	ldr	x22, [x23]
  40cbb4:	cbnz	x22, 40cd1c <snap_deps@@Base+0x1ec>
  40cbb8:	add	x23, x23, #0x8
  40cbbc:	cmp	x23, x24
  40cbc0:	b.cc	40cbb0 <snap_deps@@Base+0x80>  // b.lo, b.ul, b.last
  40cbc4:	mov	x0, x21
  40cbc8:	bl	406c20 <free@plt>
  40cbcc:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cbd0:	add	x0, x0, #0xcd2
  40cbd4:	bl	40be54 <lookup_file@@Base>
  40cbd8:	cbnz	x0, 40cd38 <snap_deps@@Base+0x208>
  40cbdc:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cbe0:	add	x0, x0, #0xcdc
  40cbe4:	bl	40be54 <lookup_file@@Base>
  40cbe8:	cbnz	x0, 40cd6c <snap_deps@@Base+0x23c>
  40cbec:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cbf0:	add	x0, x0, #0xcf1
  40cbf4:	bl	40be54 <lookup_file@@Base>
  40cbf8:	mov	w5, #0xffffffd7            	// #-41
  40cbfc:	mov	w6, #0x28                  	// #40
  40cc00:	mov	x4, #0x1                   	// #1
  40cc04:	cbnz	x0, 40cda0 <snap_deps@@Base+0x270>
  40cc08:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cc0c:	add	x0, x0, #0xcf8
  40cc10:	bl	40be54 <lookup_file@@Base>
  40cc14:	cbnz	x0, 40cddc <snap_deps@@Base+0x2ac>
  40cc18:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cc1c:	add	x0, x0, #0xd06
  40cc20:	bl	40be54 <lookup_file@@Base>
  40cc24:	ldr	w5, [x20, #88]
  40cc28:	mov	w3, #0x0                   	// #0
  40cc2c:	cbnz	x0, 40ce10 <snap_deps@@Base+0x2e0>
  40cc30:	cbz	w3, 40cc38 <snap_deps@@Base+0x108>
  40cc34:	str	w5, [x20, #88]
  40cc38:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cc3c:	add	x0, x0, #0xd11
  40cc40:	bl	40be54 <lookup_file@@Base>
  40cc44:	cbz	x0, 40cc5c <snap_deps@@Base+0x12c>
  40cc48:	ldrb	w0, [x0, #137]
  40cc4c:	tbz	w0, #3, 40cc5c <snap_deps@@Base+0x12c>
  40cc50:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40cc54:	mov	w1, #0x1                   	// #1
  40cc58:	str	w1, [x0, #2252]
  40cc5c:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cc60:	add	x0, x0, #0xd27
  40cc64:	bl	40be54 <lookup_file@@Base>
  40cc68:	cbz	x0, 40cc88 <snap_deps@@Base+0x158>
  40cc6c:	ldrb	w1, [x0, #137]
  40cc70:	tbz	w1, #3, 40cc88 <snap_deps@@Base+0x158>
  40cc74:	ldr	x0, [x0, #24]
  40cc78:	cbnz	x0, 40ce50 <snap_deps@@Base+0x320>
  40cc7c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40cc80:	mov	w1, #0x1                   	// #1
  40cc84:	str	w1, [x0, #3416]
  40cc88:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cc8c:	add	x0, x0, #0xd2f
  40cc90:	bl	40be54 <lookup_file@@Base>
  40cc94:	cbz	x0, 40ccb4 <snap_deps@@Base+0x184>
  40cc98:	ldrb	w1, [x0, #137]
  40cc9c:	tbz	w1, #3, 40ccb4 <snap_deps@@Base+0x184>
  40cca0:	ldr	x0, [x0, #24]
  40cca4:	cbnz	x0, 40ce78 <snap_deps@@Base+0x348>
  40cca8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ccac:	mov	w1, #0x1                   	// #1
  40ccb0:	str	w1, [x0, #3308]
  40ccb4:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40ccb8:	add	x0, x0, #0xd37
  40ccbc:	bl	40be54 <lookup_file@@Base>
  40ccc0:	cbz	x0, 40ccd8 <snap_deps@@Base+0x1a8>
  40ccc4:	ldrb	w0, [x0, #137]
  40ccc8:	tbz	w0, #3, 40ccd8 <snap_deps@@Base+0x1a8>
  40cccc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40ccd0:	mov	w1, #0x1                   	// #1
  40ccd4:	str	w1, [x0, #2028]
  40ccd8:	mov	x1, #0xe                   	// #14
  40ccdc:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40cce0:	add	x0, x0, #0xcc3
  40cce4:	bl	41fcdc <lookup_variable@@Base>
  40cce8:	bl	40c988 <expand_extra_prereqs@@Base>
  40ccec:	mov	x19, x0
  40ccf0:	mov	x2, x0
  40ccf4:	adrp	x1, 40c000 <rehash_file@@Base+0x64>
  40ccf8:	mov	x0, x20
  40ccfc:	add	x1, x1, #0x9f8
  40cd00:	bl	410c1c <hash_map_arg@@Base>
  40cd04:	mov	x0, x19
  40cd08:	ldp	x19, x20, [sp, #16]
  40cd0c:	ldp	x21, x22, [sp, #32]
  40cd10:	ldp	x23, x24, [sp, #48]
  40cd14:	ldp	x29, x30, [sp], #64
  40cd18:	b	416eb0 <free_ns_chain@@Base>
  40cd1c:	ldr	x0, [x22]
  40cd20:	cmp	x0, x19
  40cd24:	b.eq	40cd30 <snap_deps@@Base+0x200>  // b.none
  40cd28:	mov	x0, x22
  40cd2c:	bl	40c810 <enter_prereqs@@Base+0x1b0>
  40cd30:	ldr	x22, [x22, #56]
  40cd34:	b	40cbb4 <snap_deps@@Base+0x84>
  40cd38:	ldr	x2, [x0, #24]
  40cd3c:	cbnz	x2, 40cd48 <snap_deps@@Base+0x218>
  40cd40:	ldr	x0, [x0, #56]
  40cd44:	b	40cbd8 <snap_deps@@Base+0xa8>
  40cd48:	ldr	x1, [x2, #16]
  40cd4c:	cbnz	x1, 40cd58 <snap_deps@@Base+0x228>
  40cd50:	ldr	x2, [x2]
  40cd54:	b	40cd3c <snap_deps@@Base+0x20c>
  40cd58:	ldrb	w3, [x1, #136]
  40cd5c:	orr	w3, w3, #0x20
  40cd60:	strb	w3, [x1, #136]
  40cd64:	ldr	x1, [x1, #56]
  40cd68:	b	40cd4c <snap_deps@@Base+0x21c>
  40cd6c:	ldr	x2, [x0, #24]
  40cd70:	cbnz	x2, 40cd7c <snap_deps@@Base+0x24c>
  40cd74:	ldr	x0, [x0, #56]
  40cd78:	b	40cbe8 <snap_deps@@Base+0xb8>
  40cd7c:	ldr	x1, [x2, #16]
  40cd80:	cbnz	x1, 40cd8c <snap_deps@@Base+0x25c>
  40cd84:	ldr	x2, [x2]
  40cd88:	b	40cd70 <snap_deps@@Base+0x240>
  40cd8c:	ldrb	w3, [x1, #136]
  40cd90:	orr	w3, w3, #0xffffff80
  40cd94:	strb	w3, [x1, #136]
  40cd98:	ldr	x1, [x1, #56]
  40cd9c:	b	40cd80 <snap_deps@@Base+0x250>
  40cda0:	ldr	x3, [x0, #24]
  40cda4:	cbnz	x3, 40cdb0 <snap_deps@@Base+0x280>
  40cda8:	ldr	x0, [x0, #56]
  40cdac:	b	40cc04 <snap_deps@@Base+0xd4>
  40cdb0:	ldr	x1, [x3, #16]
  40cdb4:	cbnz	x1, 40cdc0 <snap_deps@@Base+0x290>
  40cdb8:	ldr	x3, [x3]
  40cdbc:	b	40cda4 <snap_deps@@Base+0x274>
  40cdc0:	ldrb	w2, [x1, #137]
  40cdc4:	stp	x4, x4, [x1, #112]
  40cdc8:	and	w2, w2, w5
  40cdcc:	orr	w2, w2, w6
  40cdd0:	strb	w2, [x1, #137]
  40cdd4:	ldr	x1, [x1, #56]
  40cdd8:	b	40cdb4 <snap_deps@@Base+0x284>
  40cddc:	ldr	x2, [x0, #24]
  40cde0:	cbnz	x2, 40cdec <snap_deps@@Base+0x2bc>
  40cde4:	ldr	x0, [x0, #56]
  40cde8:	b	40cc14 <snap_deps@@Base+0xe4>
  40cdec:	ldr	x1, [x2, #16]
  40cdf0:	cbnz	x1, 40cdfc <snap_deps@@Base+0x2cc>
  40cdf4:	ldr	x2, [x2]
  40cdf8:	b	40cde0 <snap_deps@@Base+0x2b0>
  40cdfc:	ldrb	w3, [x1, #137]
  40ce00:	orr	w3, w3, #0x40
  40ce04:	strb	w3, [x1, #137]
  40ce08:	ldr	x1, [x1, #56]
  40ce0c:	b	40cdf0 <snap_deps@@Base+0x2c0>
  40ce10:	ldr	x1, [x0, #24]
  40ce14:	cbz	x1, 40ce44 <snap_deps@@Base+0x314>
  40ce18:	ldr	x2, [x1, #16]
  40ce1c:	cbnz	x2, 40ce30 <snap_deps@@Base+0x300>
  40ce20:	ldr	x1, [x1]
  40ce24:	cbnz	x1, 40ce18 <snap_deps@@Base+0x2e8>
  40ce28:	ldr	x0, [x0, #56]
  40ce2c:	b	40cc2c <snap_deps@@Base+0xfc>
  40ce30:	ldrb	w4, [x2, #137]
  40ce34:	orr	w4, w4, #0xffffffc0
  40ce38:	strb	w4, [x2, #137]
  40ce3c:	ldr	x2, [x2, #56]
  40ce40:	b	40ce1c <snap_deps@@Base+0x2ec>
  40ce44:	mov	w3, #0x1                   	// #1
  40ce48:	mov	w5, w3
  40ce4c:	b	40ce28 <snap_deps@@Base+0x2f8>
  40ce50:	ldr	x1, [x0, #16]
  40ce54:	cbnz	x1, 40ce64 <snap_deps@@Base+0x334>
  40ce58:	ldr	x0, [x0]
  40ce5c:	cbnz	x0, 40ce50 <snap_deps@@Base+0x320>
  40ce60:	b	40cc88 <snap_deps@@Base+0x158>
  40ce64:	ldr	w2, [x1, #132]
  40ce68:	orr	w2, w2, #0x4
  40ce6c:	str	w2, [x1, #132]
  40ce70:	ldr	x1, [x1, #56]
  40ce74:	b	40ce54 <snap_deps@@Base+0x324>
  40ce78:	ldr	x1, [x0, #16]
  40ce7c:	cbnz	x1, 40ce8c <snap_deps@@Base+0x35c>
  40ce80:	ldr	x0, [x0]
  40ce84:	cbnz	x0, 40ce78 <snap_deps@@Base+0x348>
  40ce88:	b	40ccb4 <snap_deps@@Base+0x184>
  40ce8c:	ldr	w2, [x1, #132]
  40ce90:	orr	w2, w2, #0x2
  40ce94:	str	w2, [x1, #132]
  40ce98:	ldr	x1, [x1, #56]
  40ce9c:	b	40ce7c <snap_deps@@Base+0x34c>

000000000040cea0 <set_command_state@@Base>:
  40cea0:	ldrb	w2, [x0, #136]
  40cea4:	and	w3, w1, #0x3
  40cea8:	bfi	w2, w3, #2, #2
  40ceac:	strb	w2, [x0, #136]
  40ceb0:	ldr	x2, [x0, #48]
  40ceb4:	cbnz	x2, 40cebc <set_command_state@@Base+0x1c>
  40ceb8:	ret
  40cebc:	ldr	x4, [x2, #16]
  40cec0:	ldrb	w0, [x4, #136]
  40cec4:	ubfx	x5, x0, #2, #2
  40cec8:	cmp	w5, w1
  40cecc:	b.cs	40ced8 <set_command_state@@Base+0x38>  // b.hs, b.nlast
  40ced0:	bfi	w0, w3, #2, #2
  40ced4:	strb	w0, [x4, #136]
  40ced8:	ldr	x2, [x2]
  40cedc:	b	40ceb4 <set_command_state@@Base+0x14>

000000000040cee0 <file_timestamp_sprintf@@Base>:
  40cee0:	stp	x29, x30, [sp, #-48]!
  40cee4:	mov	x29, sp
  40cee8:	stp	x19, x20, [sp, #16]
  40ceec:	mov	x19, x0
  40cef0:	sub	x0, x1, #0x3
  40cef4:	mov	x20, x1
  40cef8:	lsr	x0, x0, #30
  40cefc:	str	x0, [sp, #40]
  40cf00:	add	x0, sp, #0x28
  40cf04:	bl	4068d0 <localtime@plt>
  40cf08:	cbz	x0, 40cf88 <file_timestamp_sprintf@@Base+0xa8>
  40cf0c:	ldp	w7, w6, [x0]
  40cf10:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40cf14:	ldp	w5, w4, [x0, #8]
  40cf18:	add	x1, x1, #0xd44
  40cf1c:	ldp	w3, w2, [x0, #16]
  40cf20:	mov	x0, x19
  40cf24:	add	w3, w3, #0x1
  40cf28:	add	w2, w2, #0x76c
  40cf2c:	bl	4067a0 <sprintf@plt>
  40cf30:	mov	x0, x19
  40cf34:	bl	406700 <strlen@plt>
  40cf38:	sub	w2, w20, #0x3
  40cf3c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40cf40:	and	w2, w2, #0x3fffffff
  40cf44:	add	x1, x1, #0xd66
  40cf48:	add	x19, x19, x0
  40cf4c:	mov	x0, x19
  40cf50:	bl	4067a0 <sprintf@plt>
  40cf54:	mov	x0, x19
  40cf58:	bl	406700 <strlen@plt>
  40cf5c:	sub	x0, x0, #0x1
  40cf60:	add	x0, x19, x0
  40cf64:	ldrb	w1, [x0]
  40cf68:	cmp	w1, #0x30
  40cf6c:	b.eq	40cfb0 <file_timestamp_sprintf@@Base+0xd0>  // b.none
  40cf70:	cmp	w1, #0x2e
  40cf74:	cset	x1, ne  // ne = any
  40cf78:	strb	wzr, [x0, x1]
  40cf7c:	ldp	x19, x20, [sp, #16]
  40cf80:	ldp	x29, x30, [sp], #48
  40cf84:	ret
  40cf88:	ldr	x2, [sp, #40]
  40cf8c:	tbz	x2, #63, 40cfa4 <file_timestamp_sprintf@@Base+0xc4>
  40cf90:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40cf94:	add	x1, x1, #0xd62
  40cf98:	mov	x0, x19
  40cf9c:	bl	4067a0 <sprintf@plt>
  40cfa0:	b	40cf30 <file_timestamp_sprintf@@Base+0x50>
  40cfa4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40cfa8:	add	x1, x1, #0x7b9
  40cfac:	b	40cf98 <file_timestamp_sprintf@@Base+0xb8>
  40cfb0:	sub	x0, x0, #0x1
  40cfb4:	b	40cf64 <file_timestamp_sprintf@@Base+0x84>

000000000040cfb8 <file_timestamp_cons@@Base>:
  40cfb8:	stp	x29, x30, [sp, #-96]!
  40cfbc:	mov	x29, sp
  40cfc0:	stp	x19, x20, [sp, #16]
  40cfc4:	add	w19, w2, #0x3
  40cfc8:	lsl	x2, x1, #30
  40cfcc:	sxtw	x19, w19
  40cfd0:	stp	x21, x22, [sp, #32]
  40cfd4:	adds	x19, x19, x2
  40cfd8:	mov	x20, x0
  40cfdc:	mov	x21, x1
  40cfe0:	mov	x0, #0x3ffffffff           	// #17179869183
  40cfe4:	ccmp	x1, x0, #0x2, cc  // cc = lo, ul, last
  40cfe8:	b.hi	40cffc <file_timestamp_cons@@Base+0x44>  // b.pmore
  40cfec:	mov	x0, #0xffffffffffffca02    	// #-13822
  40cff0:	movk	x0, #0xfb9a, lsl #16
  40cff4:	cmp	x19, x0
  40cff8:	b.ls	40d07c <file_timestamp_cons@@Base+0xc4>  // b.plast
  40cffc:	cbnz	x20, 40d018 <file_timestamp_cons@@Base+0x60>
  40d000:	mov	w2, #0x5                   	// #5
  40d004:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d008:	mov	x0, #0x0                   	// #0
  40d00c:	add	x1, x1, #0xd6c
  40d010:	bl	406d60 <dcgettext@plt>
  40d014:	mov	x20, x0
  40d018:	cmp	x21, #0x3
  40d01c:	mov	x0, #0xffffffffffffca02    	// #-13822
  40d020:	movk	x0, #0xfb9a, lsl #16
  40d024:	mov	x19, #0x3                   	// #3
  40d028:	csel	x19, x19, x0, cc  // cc = lo, ul, last
  40d02c:	add	x0, sp, #0x30
  40d030:	mov	x1, x19
  40d034:	bl	40cee0 <file_timestamp_sprintf@@Base>
  40d038:	mov	x0, x20
  40d03c:	bl	406700 <strlen@plt>
  40d040:	mov	x22, x0
  40d044:	add	x0, sp, #0x30
  40d048:	bl	406700 <strlen@plt>
  40d04c:	mov	w2, #0x5                   	// #5
  40d050:	mov	x21, x0
  40d054:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d058:	mov	x0, #0x0                   	// #0
  40d05c:	add	x1, x1, #0xd79
  40d060:	bl	406d60 <dcgettext@plt>
  40d064:	add	x4, sp, #0x30
  40d068:	mov	x2, x0
  40d06c:	mov	x3, x20
  40d070:	add	x1, x22, x21
  40d074:	mov	x0, #0x0                   	// #0
  40d078:	bl	417aa8 <error@@Base>
  40d07c:	mov	x0, x19
  40d080:	ldp	x19, x20, [sp, #16]
  40d084:	ldp	x21, x22, [sp, #32]
  40d088:	ldp	x29, x30, [sp], #96
  40d08c:	ret

000000000040d090 <file_timestamp_now@@Base>:
  40d090:	stp	x29, x30, [sp, #-48]!
  40d094:	mov	x29, sp
  40d098:	add	x1, sp, #0x20
  40d09c:	str	x19, [sp, #16]
  40d0a0:	mov	x19, x0
  40d0a4:	mov	w0, #0x0                   	// #0
  40d0a8:	bl	406810 <clock_gettime@plt>
  40d0ac:	cbnz	w0, 40d0d8 <file_timestamp_now@@Base+0x48>
  40d0b0:	ldr	w2, [sp, #40]
  40d0b4:	mov	w3, #0x1                   	// #1
  40d0b8:	ldr	x1, [sp, #32]
  40d0bc:	str	w3, [x19]
  40d0c0:	sxtw	x2, w2
  40d0c4:	mov	x0, #0x0                   	// #0
  40d0c8:	bl	40cfb8 <file_timestamp_cons@@Base>
  40d0cc:	ldr	x19, [sp, #16]
  40d0d0:	ldp	x29, x30, [sp], #48
  40d0d4:	ret
  40d0d8:	add	x0, sp, #0x20
  40d0dc:	mov	x1, #0x0                   	// #0
  40d0e0:	bl	406a20 <gettimeofday@plt>
  40d0e4:	cbnz	w0, 40d0f8 <file_timestamp_now@@Base+0x68>
  40d0e8:	ldp	x1, x2, [sp, #32]
  40d0ec:	mov	w3, #0x3e8                 	// #1000
  40d0f0:	mul	w2, w2, w3
  40d0f4:	b	40d0bc <file_timestamp_now@@Base+0x2c>
  40d0f8:	mov	x0, #0x0                   	// #0
  40d0fc:	bl	406940 <time@plt>
  40d100:	mov	w3, #0xca00                	// #51712
  40d104:	mov	x1, x0
  40d108:	mov	w2, #0x0                   	// #0
  40d10c:	movk	w3, #0x3b9a, lsl #16
  40d110:	b	40d0bc <file_timestamp_now@@Base+0x2c>

000000000040d114 <print_prereqs@@Base>:
  40d114:	stp	x29, x30, [sp, #-48]!
  40d118:	mov	x29, sp
  40d11c:	stp	x19, x20, [sp, #16]
  40d120:	mov	x19, x0
  40d124:	mov	x20, #0x0                   	// #0
  40d128:	str	x21, [sp, #32]
  40d12c:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x1720>
  40d130:	add	x21, x21, #0xe5b
  40d134:	cbnz	x19, 40d150 <print_prereqs@@Base+0x3c>
  40d138:	cbnz	x20, 40d184 <print_prereqs@@Base+0x70>
  40d13c:	ldp	x19, x20, [sp, #16]
  40d140:	mov	w0, #0xa                   	// #10
  40d144:	ldr	x21, [sp, #32]
  40d148:	ldp	x29, x30, [sp], #48
  40d14c:	b	406e20 <putchar@plt>
  40d150:	ldrb	w0, [x19, #33]
  40d154:	tbnz	w0, #1, 40d178 <print_prereqs@@Base+0x64>
  40d158:	ldr	x1, [x19, #8]
  40d15c:	cbnz	x1, 40d168 <print_prereqs@@Base+0x54>
  40d160:	ldr	x0, [x19, #16]
  40d164:	ldr	x1, [x0]
  40d168:	mov	x0, x21
  40d16c:	bl	406df0 <printf@plt>
  40d170:	ldr	x19, [x19]
  40d174:	b	40d134 <print_prereqs@@Base+0x20>
  40d178:	cmp	x20, #0x0
  40d17c:	csel	x20, x20, x19, ne  // ne = any
  40d180:	b	40d170 <print_prereqs@@Base+0x5c>
  40d184:	ldr	x1, [x20, #8]
  40d188:	cbnz	x1, 40d194 <print_prereqs@@Base+0x80>
  40d18c:	ldr	x0, [x20, #16]
  40d190:	ldr	x1, [x0]
  40d194:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40d198:	add	x0, x0, #0xda5
  40d19c:	bl	406df0 <printf@plt>
  40d1a0:	ldr	x19, [x20]
  40d1a4:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x1720>
  40d1a8:	add	x20, x20, #0xe5b
  40d1ac:	cbz	x19, 40d13c <print_prereqs@@Base+0x28>
  40d1b0:	ldrb	w0, [x19, #33]
  40d1b4:	tbz	w0, #1, 40d1d0 <print_prereqs@@Base+0xbc>
  40d1b8:	ldr	x1, [x19, #8]
  40d1bc:	cbnz	x1, 40d1c8 <print_prereqs@@Base+0xb4>
  40d1c0:	ldr	x0, [x19, #16]
  40d1c4:	ldr	x1, [x0]
  40d1c8:	mov	x0, x20
  40d1cc:	bl	406df0 <printf@plt>
  40d1d0:	ldr	x19, [x19]
  40d1d4:	b	40d1ac <print_prereqs@@Base+0x98>
  40d1d8:	stp	x29, x30, [sp, #-96]!
  40d1dc:	mov	x29, sp
  40d1e0:	stp	x19, x20, [sp, #16]
  40d1e4:	mov	x19, x0
  40d1e8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40d1ec:	str	x21, [sp, #32]
  40d1f0:	ldr	w0, [x0, #3348]
  40d1f4:	cbz	w0, 40d200 <print_prereqs@@Base+0xec>
  40d1f8:	ldrb	w0, [x19, #136]
  40d1fc:	tbnz	w0, #4, 40d530 <print_prereqs@@Base+0x41c>
  40d200:	mov	w0, #0xa                   	// #10
  40d204:	bl	406e20 <putchar@plt>
  40d208:	ldr	x0, [x19, #32]
  40d20c:	cbz	x0, 40d258 <print_prereqs@@Base+0x144>
  40d210:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40d214:	ldrb	w1, [x0, #50]
  40d218:	ldrb	w0, [x20, #164]
  40d21c:	cmp	w1, w0
  40d220:	b.eq	40d258 <print_prereqs@@Base+0x144>  // b.none
  40d224:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40d228:	ldr	x1, [x0, #400]
  40d22c:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40d230:	add	x0, x0, #0xdab
  40d234:	bl	406710 <fputs@plt>
  40d238:	ldr	x0, [x19, #32]
  40d23c:	ldrb	w0, [x0, #50]
  40d240:	strb	w0, [x20, #164]
  40d244:	cmp	w0, #0x9
  40d248:	b.eq	40d250 <print_prereqs@@Base+0x13c>  // b.none
  40d24c:	bl	406e20 <putchar@plt>
  40d250:	mov	w0, #0xa                   	// #10
  40d254:	bl	406e20 <putchar@plt>
  40d258:	ldr	x0, [x19, #80]
  40d25c:	cbz	x0, 40d268 <print_prereqs@@Base+0x154>
  40d260:	mov	x0, x19
  40d264:	bl	4211a0 <print_target_variables@@Base>
  40d268:	ldrb	w0, [x19, #137]
  40d26c:	tbnz	w0, #3, 40d288 <print_prereqs@@Base+0x174>
  40d270:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d274:	add	x1, x1, #0xdbc
  40d278:	mov	w2, #0x5                   	// #5
  40d27c:	mov	x0, #0x0                   	// #0
  40d280:	bl	406d60 <dcgettext@plt>
  40d284:	bl	406b80 <puts@plt>
  40d288:	ldr	x1, [x19, #104]
  40d28c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  40d290:	adrp	x2, 422000 <fd_inherit@@Base+0x20>
  40d294:	add	x0, x0, #0x819
  40d298:	cmp	x1, #0x0
  40d29c:	add	x2, x2, #0xadb
  40d2a0:	ldr	x1, [x19]
  40d2a4:	csel	x2, x2, x0, ne  // ne = any
  40d2a8:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  40d2ac:	add	x0, x0, #0xdcc
  40d2b0:	bl	406df0 <printf@plt>
  40d2b4:	ldr	x0, [x19, #24]
  40d2b8:	bl	40d114 <print_prereqs@@Base>
  40d2bc:	ldrb	w0, [x19, #136]
  40d2c0:	tbz	w0, #5, 40d2dc <print_prereqs@@Base+0x1c8>
  40d2c4:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d2c8:	add	x1, x1, #0xdd2
  40d2cc:	mov	w2, #0x5                   	// #5
  40d2d0:	mov	x0, #0x0                   	// #0
  40d2d4:	bl	406d60 <dcgettext@plt>
  40d2d8:	bl	406b80 <puts@plt>
  40d2dc:	ldrb	w0, [x19, #137]
  40d2e0:	tbz	w0, #5, 40d2fc <print_prereqs@@Base+0x1e8>
  40d2e4:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d2e8:	add	x1, x1, #0xe00
  40d2ec:	mov	w2, #0x5                   	// #5
  40d2f0:	mov	x0, #0x0                   	// #0
  40d2f4:	bl	406d60 <dcgettext@plt>
  40d2f8:	bl	406b80 <puts@plt>
  40d2fc:	ldrb	w0, [x19, #137]
  40d300:	tbz	w0, #4, 40d31c <print_prereqs@@Base+0x208>
  40d304:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d308:	add	x1, x1, #0xe2a
  40d30c:	mov	w2, #0x5                   	// #5
  40d310:	mov	x0, #0x0                   	// #0
  40d314:	bl	406d60 <dcgettext@plt>
  40d318:	bl	406b80 <puts@plt>
  40d31c:	ldrb	w0, [x19, #138]
  40d320:	tbz	w0, #0, 40d33c <print_prereqs@@Base+0x228>
  40d324:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d328:	add	x1, x1, #0xe42
  40d32c:	mov	w2, #0x5                   	// #5
  40d330:	mov	x0, #0x0                   	// #0
  40d334:	bl	406d60 <dcgettext@plt>
  40d338:	bl	406b80 <puts@plt>
  40d33c:	ldrb	w0, [x19, #136]
  40d340:	tbz	w0, #4, 40d35c <print_prereqs@@Base+0x248>
  40d344:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d348:	add	x1, x1, #0xe7a
  40d34c:	mov	w2, #0x5                   	// #5
  40d350:	mov	x0, #0x0                   	// #0
  40d354:	bl	406d60 <dcgettext@plt>
  40d358:	bl	406b80 <puts@plt>
  40d35c:	ldrb	w0, [x19, #137]
  40d360:	mov	w2, #0x5                   	// #5
  40d364:	tbz	w0, #0, 40d460 <print_prereqs@@Base+0x34c>
  40d368:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d36c:	add	x1, x1, #0xe8a
  40d370:	mov	x0, #0x0                   	// #0
  40d374:	bl	406d60 <dcgettext@plt>
  40d378:	bl	406b80 <puts@plt>
  40d37c:	ldr	x0, [x19, #40]
  40d380:	cbz	x0, 40d3a0 <print_prereqs@@Base+0x28c>
  40d384:	mov	w2, #0x5                   	// #5
  40d388:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d38c:	mov	x0, #0x0                   	// #0
  40d390:	add	x1, x1, #0xedc
  40d394:	bl	406d60 <dcgettext@plt>
  40d398:	ldr	x1, [x19, #40]
  40d39c:	bl	406df0 <printf@plt>
  40d3a0:	ldrb	w0, [x19, #137]
  40d3a4:	tbz	w0, #6, 40d3c0 <print_prereqs@@Base+0x2ac>
  40d3a8:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d3ac:	add	x1, x1, #0xf03
  40d3b0:	mov	w2, #0x5                   	// #5
  40d3b4:	mov	x0, #0x0                   	// #0
  40d3b8:	bl	406d60 <dcgettext@plt>
  40d3bc:	bl	406b80 <puts@plt>
  40d3c0:	ldr	x0, [x19, #48]
  40d3c4:	cbz	x0, 40d400 <print_prereqs@@Base+0x2ec>
  40d3c8:	mov	w2, #0x5                   	// #5
  40d3cc:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d3d0:	mov	x0, #0x0                   	// #0
  40d3d4:	add	x1, x1, #0xf2c
  40d3d8:	bl	406d60 <dcgettext@plt>
  40d3dc:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x1720>
  40d3e0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40d3e4:	add	x21, x21, #0xe5b
  40d3e8:	ldr	x1, [x1, #400]
  40d3ec:	bl	406710 <fputs@plt>
  40d3f0:	ldr	x20, [x19, #48]
  40d3f4:	cbnz	x20, 40d46c <print_prereqs@@Base+0x358>
  40d3f8:	mov	w0, #0xa                   	// #10
  40d3fc:	bl	406e20 <putchar@plt>
  40d400:	ldr	x1, [x19, #112]
  40d404:	cbnz	x1, 40d48c <print_prereqs@@Base+0x378>
  40d408:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d40c:	add	x1, x1, #0xf3b
  40d410:	mov	w2, #0x5                   	// #5
  40d414:	mov	x0, #0x0                   	// #0
  40d418:	bl	406d60 <dcgettext@plt>
  40d41c:	bl	406b80 <puts@plt>
  40d420:	ldrb	w0, [x19, #137]
  40d424:	mov	w2, #0x5                   	// #5
  40d428:	tbz	w0, #2, 40d4e4 <print_prereqs@@Base+0x3d0>
  40d42c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d430:	add	x1, x1, #0xfa1
  40d434:	mov	x0, #0x0                   	// #0
  40d438:	bl	406d60 <dcgettext@plt>
  40d43c:	bl	406b80 <puts@plt>
  40d440:	ldrb	w0, [x19, #136]
  40d444:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d448:	add	x1, x1, #0xe0
  40d44c:	ubfx	x2, x0, #2, #2
  40d450:	ldrb	w1, [x1, w2, uxtw]
  40d454:	adr	x2, 40d460 <print_prereqs@@Base+0x34c>
  40d458:	add	x1, x2, w1, sxtb #2
  40d45c:	br	x1
  40d460:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d464:	add	x1, x1, #0xeb1
  40d468:	b	40d370 <print_prereqs@@Base+0x25c>
  40d46c:	ldr	x1, [x20, #8]
  40d470:	cbnz	x1, 40d47c <print_prereqs@@Base+0x368>
  40d474:	ldr	x0, [x20, #16]
  40d478:	ldr	x1, [x0]
  40d47c:	mov	x0, x21
  40d480:	bl	406df0 <printf@plt>
  40d484:	ldr	x20, [x20]
  40d488:	b	40d3f4 <print_prereqs@@Base+0x2e0>
  40d48c:	cmp	x1, #0x1
  40d490:	b.ne	40d4a4 <print_prereqs@@Base+0x390>  // b.any
  40d494:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d498:	mov	w2, #0x5                   	// #5
  40d49c:	add	x1, x1, #0xf5f
  40d4a0:	b	40d414 <print_prereqs@@Base+0x300>
  40d4a4:	cmp	x1, #0x2
  40d4a8:	b.ne	40d4bc <print_prereqs@@Base+0x3a8>  // b.any
  40d4ac:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d4b0:	mov	w2, #0x5                   	// #5
  40d4b4:	add	x1, x1, #0xf77
  40d4b8:	b	40d414 <print_prereqs@@Base+0x300>
  40d4bc:	add	x0, sp, #0x30
  40d4c0:	bl	40cee0 <file_timestamp_sprintf@@Base>
  40d4c4:	mov	w2, #0x5                   	// #5
  40d4c8:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d4cc:	mov	x0, #0x0                   	// #0
  40d4d0:	add	x1, x1, #0xf8c
  40d4d4:	bl	406d60 <dcgettext@plt>
  40d4d8:	add	x1, sp, #0x30
  40d4dc:	bl	406df0 <printf@plt>
  40d4e0:	b	40d420 <print_prereqs@@Base+0x30c>
  40d4e4:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d4e8:	add	x1, x1, #0xfbb
  40d4ec:	b	40d434 <print_prereqs@@Base+0x320>
  40d4f0:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40d4f4:	add	x1, x1, #0xfd9
  40d4f8:	mov	w2, #0x5                   	// #5
  40d4fc:	mov	x0, #0x0                   	// #0
  40d500:	bl	406d60 <dcgettext@plt>
  40d504:	bl	406b80 <puts@plt>
  40d508:	ldr	x0, [x19, #80]
  40d50c:	cbz	x0, 40d518 <print_prereqs@@Base+0x404>
  40d510:	mov	x0, x19
  40d514:	bl	421180 <print_file_variables@@Base>
  40d518:	ldr	x0, [x19, #32]
  40d51c:	cbz	x0, 40d524 <print_prereqs@@Base+0x410>
  40d520:	bl	40a178 <print_commands@@Base>
  40d524:	ldr	x0, [x19, #56]
  40d528:	cbz	x0, 40d530 <print_prereqs@@Base+0x41c>
  40d52c:	bl	40d1d8 <print_prereqs@@Base+0xc4>
  40d530:	ldp	x19, x20, [sp, #16]
  40d534:	ldr	x21, [sp, #32]
  40d538:	ldp	x29, x30, [sp], #96
  40d53c:	ret
  40d540:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d544:	mov	w2, #0x5                   	// #5
  40d548:	add	x1, x1, #0x6
  40d54c:	b	40d4fc <print_prereqs@@Base+0x3e8>
  40d550:	and	w0, w0, #0x3
  40d554:	cmp	w0, #0x2
  40d558:	b.eq	40d57c <print_prereqs@@Base+0x468>  // b.none
  40d55c:	cmp	w0, #0x3
  40d560:	b.eq	40d58c <print_prereqs@@Base+0x478>  // b.none
  40d564:	cmp	w0, #0x1
  40d568:	b.eq	40d508 <print_prereqs@@Base+0x3f4>  // b.none
  40d56c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d570:	mov	w2, #0x5                   	// #5
  40d574:	add	x1, x1, #0x36
  40d578:	b	40d4fc <print_prereqs@@Base+0x3e8>
  40d57c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d580:	mov	w2, #0x5                   	// #5
  40d584:	add	x1, x1, #0x4f
  40d588:	b	40d4fc <print_prereqs@@Base+0x3e8>
  40d58c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d590:	mov	w2, #0x5                   	// #5
  40d594:	add	x1, x1, #0x73
  40d598:	b	40d4fc <print_prereqs@@Base+0x3e8>

000000000040d59c <print_file_data_base@@Base>:
  40d59c:	stp	x29, x30, [sp, #-32]!
  40d5a0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d5a4:	add	x1, x1, #0xb8
  40d5a8:	mov	w2, #0x5                   	// #5
  40d5ac:	mov	x29, sp
  40d5b0:	mov	x0, #0x0                   	// #0
  40d5b4:	stp	x19, x20, [sp, #16]
  40d5b8:	bl	406d60 <dcgettext@plt>
  40d5bc:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  40d5c0:	bl	406b80 <puts@plt>
  40d5c4:	add	x19, x19, #0x2b8
  40d5c8:	mov	x0, x19
  40d5cc:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40d5d0:	adrp	x1, 40d000 <file_timestamp_cons@@Base+0x48>
  40d5d4:	add	x1, x1, #0x1d8
  40d5d8:	bl	410bc0 <hash_map@@Base>
  40d5dc:	mov	w2, #0x5                   	// #5
  40d5e0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40d5e4:	mov	x0, #0x0                   	// #0
  40d5e8:	add	x1, x1, #0xc1
  40d5ec:	bl	406d60 <dcgettext@plt>
  40d5f0:	ldr	x1, [x20, #400]
  40d5f4:	bl	406710 <fputs@plt>
  40d5f8:	ldr	x1, [x20, #400]
  40d5fc:	mov	x0, x19
  40d600:	ldp	x19, x20, [sp, #16]
  40d604:	ldp	x29, x30, [sp], #32
  40d608:	b	410c88 <hash_print_stats@@Base>

000000000040d60c <verify_file_data_base@@Base>:
  40d60c:	adrp	x1, 40b000 <print_dir_data_base@@Base+0x29c>
  40d610:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40d614:	add	x1, x1, #0xb9c
  40d618:	add	x0, x0, #0x2b8
  40d61c:	b	410bc0 <hash_map@@Base>

000000000040d620 <build_target_list@@Base>:
  40d620:	stp	x29, x30, [sp, #-112]!
  40d624:	mov	x29, sp
  40d628:	stp	x19, x20, [sp, #16]
  40d62c:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  40d630:	mov	x19, x0
  40d634:	stp	x27, x28, [sp, #80]
  40d638:	add	x27, x20, #0x2b8
  40d63c:	stp	x21, x22, [sp, #32]
  40d640:	ldr	x2, [x27, #48]
  40d644:	stp	x23, x24, [sp, #48]
  40d648:	ldr	x1, [x27, #96]
  40d64c:	stp	x25, x26, [sp, #64]
  40d650:	cmp	x2, x1
  40d654:	b.eq	40d6ac <build_target_list@@Base+0x8c>  // b.none
  40d658:	mov	x22, #0x1f4                 	// #500
  40d65c:	bl	406700 <strlen@plt>
  40d660:	ldr	x23, [x20, #696]
  40d664:	mov	x24, #0x0                   	// #0
  40d668:	udiv	x21, x0, x22
  40d66c:	adrp	x26, 43e000 <expanding_var@@Base+0x328>
  40d670:	ldr	x25, [x27, #32]
  40d674:	madd	x21, x21, x22, x22
  40d678:	add	x0, x23, x25, lsl #3
  40d67c:	str	x0, [sp, #104]
  40d680:	mov	x1, x21
  40d684:	mov	x0, x19
  40d688:	bl	416aa0 <xrealloc@@Base>
  40d68c:	mov	x19, x0
  40d690:	mov	x20, x0
  40d694:	ldr	x0, [sp, #104]
  40d698:	cmp	x23, x0
  40d69c:	b.cc	40d6cc <build_target_list@@Base+0xac>  // b.lo, b.ul, b.last
  40d6a0:	sturb	wzr, [x20, #-1]
  40d6a4:	ldr	x0, [x27, #48]
  40d6a8:	str	x0, [x27, #96]
  40d6ac:	mov	x0, x19
  40d6b0:	ldp	x19, x20, [sp, #16]
  40d6b4:	ldp	x21, x22, [sp, #32]
  40d6b8:	ldp	x23, x24, [sp, #48]
  40d6bc:	ldp	x25, x26, [sp, #64]
  40d6c0:	ldp	x27, x28, [sp, #80]
  40d6c4:	ldp	x29, x30, [sp], #112
  40d6c8:	ret
  40d6cc:	ldr	x25, [x23]
  40d6d0:	cbz	x25, 40d748 <build_target_list@@Base+0x128>
  40d6d4:	ldr	x0, [x26, #64]
  40d6d8:	cmp	x25, x0
  40d6dc:	b.eq	40d748 <build_target_list@@Base+0x128>  // b.none
  40d6e0:	ldrb	w0, [x25, #137]
  40d6e4:	tbz	w0, #3, 40d748 <build_target_list@@Base+0x128>
  40d6e8:	ldr	x0, [x25]
  40d6ec:	add	x24, x24, #0x1
  40d6f0:	bl	406700 <strlen@plt>
  40d6f4:	add	x24, x24, x0
  40d6f8:	mov	x28, x0
  40d6fc:	cmp	x21, x24
  40d700:	b.cs	40d72c <build_target_list@@Base+0x10c>  // b.hs, b.nlast
  40d704:	add	x0, x0, #0x1
  40d708:	sub	x20, x20, x19
  40d70c:	udiv	x0, x0, x22
  40d710:	madd	x0, x0, x22, x22
  40d714:	add	x21, x21, x0
  40d718:	mov	x0, x19
  40d71c:	mov	x1, x21
  40d720:	bl	416aa0 <xrealloc@@Base>
  40d724:	mov	x19, x0
  40d728:	add	x20, x0, x20
  40d72c:	ldr	x1, [x25]
  40d730:	mov	x0, x20
  40d734:	add	x20, x20, x28
  40d738:	mov	x2, x28
  40d73c:	bl	4066c0 <memcpy@plt>
  40d740:	mov	w0, #0x20                  	// #32
  40d744:	strb	w0, [x20], #1
  40d748:	add	x23, x23, #0x8
  40d74c:	b	40d694 <build_target_list@@Base+0x74>

000000000040d750 <init_hash_files@@Base>:
  40d750:	adrp	x4, 40b000 <print_dir_data_base@@Base+0x29c>
  40d754:	adrp	x3, 40b000 <print_dir_data_base@@Base+0x29c>
  40d758:	add	x4, x4, #0xb80
  40d75c:	add	x3, x3, #0xb78
  40d760:	adrp	x2, 40b000 <print_dir_data_base@@Base+0x29c>
  40d764:	mov	x1, #0x3e8                 	// #1000
  40d768:	add	x2, x2, #0xe38
  40d76c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40d770:	add	x0, x0, #0x2b8
  40d774:	b	4106f8 <hash_init@@Base>
  40d778:	mov	x0, #0x0                   	// #0
  40d77c:	ret
  40d780:	adrp	x4, 43e000 <expanding_var@@Base+0x328>
  40d784:	and	w1, w1, #0xff
  40d788:	add	x4, x4, #0x454
  40d78c:	and	w6, w0, #0xff
  40d790:	mov	w7, #0x480                 	// #1152
  40d794:	mov	x0, x2
  40d798:	mov	w2, #0x0                   	// #0
  40d79c:	cmp	x0, x3
  40d7a0:	b.cs	40d7e0 <init_hash_files@@Base+0x90>  // b.hs, b.nlast
  40d7a4:	ldrb	w8, [x0]
  40d7a8:	ldrb	w5, [x0]
  40d7ac:	ldrh	w8, [x4, x8, lsl #1]
  40d7b0:	tst	w7, w8
  40d7b4:	b.eq	40d7c4 <init_hash_files@@Base+0x74>  // b.none
  40d7b8:	cmp	w5, w6
  40d7bc:	b.ne	40d7cc <init_hash_files@@Base+0x7c>  // b.any
  40d7c0:	add	w2, w2, #0x1
  40d7c4:	add	x0, x0, #0x1
  40d7c8:	b	40d79c <init_hash_files@@Base+0x4c>
  40d7cc:	cmp	w5, w1
  40d7d0:	b.ne	40d7e8 <init_hash_files@@Base+0x98>  // b.any
  40d7d4:	sub	w2, w2, #0x1
  40d7d8:	cmn	w2, #0x1
  40d7dc:	b.ne	40d7c4 <init_hash_files@@Base+0x74>  // b.any
  40d7e0:	mov	x0, #0x0                   	// #0
  40d7e4:	b	40d7f4 <init_hash_files@@Base+0xa4>
  40d7e8:	cmp	w5, #0x2c
  40d7ec:	b.ne	40d7c4 <init_hash_files@@Base+0x74>  // b.any
  40d7f0:	cbnz	w2, 40d7c4 <init_hash_files@@Base+0x74>
  40d7f4:	ret
  40d7f8:	stp	x29, x30, [sp, #-48]!
  40d7fc:	mov	w4, #0x0                   	// #0
  40d800:	mov	x29, sp
  40d804:	stp	x19, x20, [sp, #16]
  40d808:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  40d80c:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x4720>
  40d810:	add	x19, x19, #0x454
  40d814:	add	x20, x20, #0x39d
  40d818:	ldr	x1, [x1]
  40d81c:	str	x21, [sp, #32]
  40d820:	ldrb	w2, [x1]
  40d824:	cbnz	w2, 40d830 <init_hash_files@@Base+0xe0>
  40d828:	b	40d858 <init_hash_files@@Base+0x108>
  40d82c:	add	x1, x1, #0x1
  40d830:	ldrb	w2, [x1]
  40d834:	ldrh	w2, [x19, x2, lsl #1]
  40d838:	tst	w2, #0x6
  40d83c:	b.ne	40d82c <init_hash_files@@Base+0xdc>  // b.any
  40d840:	mov	x3, #0x0                   	// #0
  40d844:	ldrb	w5, [x1, x3]
  40d848:	sxtw	x2, w3
  40d84c:	add	x21, x1, x3
  40d850:	cbnz	w5, 40d870 <init_hash_files@@Base+0x120>
  40d854:	cbnz	w2, 40d884 <init_hash_files@@Base+0x134>
  40d858:	and	x4, x4, #0x1
  40d85c:	sub	x0, x0, x4
  40d860:	ldp	x19, x20, [sp, #16]
  40d864:	ldr	x21, [sp, #32]
  40d868:	ldp	x29, x30, [sp], #48
  40d86c:	ret
  40d870:	ldrh	w5, [x19, w5, sxtw #1]
  40d874:	add	x3, x3, #0x1
  40d878:	tst	w5, #0x6
  40d87c:	b.eq	40d844 <init_hash_files@@Base+0xf4>  // b.none
  40d880:	b	40d854 <init_hash_files@@Base+0x104>
  40d884:	bl	40b138 <variable_buffer_output@@Base>
  40d888:	mov	x1, x20
  40d88c:	mov	x2, #0x1                   	// #1
  40d890:	bl	40b138 <variable_buffer_output@@Base>
  40d894:	mov	x1, x21
  40d898:	mov	w4, #0x1                   	// #1
  40d89c:	b	40d820 <init_hash_files@@Base+0xd0>
  40d8a0:	stp	x29, x30, [sp, #-32]!
  40d8a4:	mov	x29, sp
  40d8a8:	stp	x19, x20, [sp, #16]
  40d8ac:	mov	x19, x0
  40d8b0:	ldr	x0, [x1, #8]
  40d8b4:	ldr	x20, [x1]
  40d8b8:	mov	x1, x20
  40d8bc:	bl	406d50 <strstr@plt>
  40d8c0:	cbz	x0, 40d8e4 <init_hash_files@@Base+0x194>
  40d8c4:	mov	x0, x20
  40d8c8:	bl	406700 <strlen@plt>
  40d8cc:	mov	x1, x20
  40d8d0:	mov	x2, x0
  40d8d4:	mov	x0, x19
  40d8d8:	ldp	x19, x20, [sp, #16]
  40d8dc:	ldp	x29, x30, [sp], #32
  40d8e0:	b	40b138 <variable_buffer_output@@Base>
  40d8e4:	mov	x0, x19
  40d8e8:	ldp	x19, x20, [sp, #16]
  40d8ec:	ldp	x29, x30, [sp], #32
  40d8f0:	ret
  40d8f4:	stp	x29, x30, [sp, #-48]!
  40d8f8:	mov	x29, sp
  40d8fc:	stp	x19, x20, [sp, #16]
  40d900:	mov	x19, x0
  40d904:	ldr	x0, [x1]
  40d908:	str	x0, [sp, #40]
  40d90c:	mov	x0, #0x0                   	// #0
  40d910:	mov	x20, x0
  40d914:	add	x1, sp, #0x20
  40d918:	add	x0, sp, #0x28
  40d91c:	bl	416ccc <find_next_token@@Base>
  40d920:	cbnz	x0, 40d910 <init_hash_files@@Base+0x1c0>
  40d924:	cbz	x20, 40d93c <init_hash_files@@Base+0x1ec>
  40d928:	ldr	x2, [sp, #32]
  40d92c:	mov	x0, x19
  40d930:	mov	x1, x20
  40d934:	bl	40b138 <variable_buffer_output@@Base>
  40d938:	mov	x19, x0
  40d93c:	mov	x0, x19
  40d940:	ldp	x19, x20, [sp, #16]
  40d944:	ldp	x29, x30, [sp], #48
  40d948:	ret
  40d94c:	stp	x29, x30, [sp, #-80]!
  40d950:	mov	x29, sp
  40d954:	stp	x19, x20, [sp, #16]
  40d958:	mov	x19, x0
  40d95c:	ldp	x2, x1, [x1]
  40d960:	stp	x21, x22, [sp, #32]
  40d964:	mov	w21, #0x0                   	// #0
  40d968:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x4720>
  40d96c:	stp	x2, x1, [sp, #48]
  40d970:	add	x1, sp, #0x40
  40d974:	add	x0, sp, #0x30
  40d978:	bl	416ccc <find_next_token@@Base>
  40d97c:	mov	x20, x0
  40d980:	cbz	x0, 40d998 <init_hash_files@@Base+0x248>
  40d984:	ldr	x2, [sp, #64]
  40d988:	mov	x1, x0
  40d98c:	mov	x0, x19
  40d990:	bl	40b138 <variable_buffer_output@@Base>
  40d994:	mov	x19, x0
  40d998:	add	x1, sp, #0x48
  40d99c:	add	x0, sp, #0x38
  40d9a0:	bl	416ccc <find_next_token@@Base>
  40d9a4:	mov	x1, x0
  40d9a8:	cbz	x0, 40d9d8 <init_hash_files@@Base+0x288>
  40d9ac:	ldr	x2, [sp, #72]
  40d9b0:	mov	x0, x19
  40d9b4:	bl	40b138 <variable_buffer_output@@Base>
  40d9b8:	mov	x19, x0
  40d9bc:	mov	x0, x19
  40d9c0:	add	x1, x22, #0x39d
  40d9c4:	mov	x2, #0x1                   	// #1
  40d9c8:	mov	w21, #0x1                   	// #1
  40d9cc:	bl	40b138 <variable_buffer_output@@Base>
  40d9d0:	mov	x19, x0
  40d9d4:	b	40d970 <init_hash_files@@Base+0x220>
  40d9d8:	cbnz	x20, 40d9bc <init_hash_files@@Base+0x26c>
  40d9dc:	and	x0, x21, #0x1
  40d9e0:	sub	x0, x19, x0
  40d9e4:	ldp	x19, x20, [sp, #16]
  40d9e8:	ldp	x21, x22, [sp, #32]
  40d9ec:	ldp	x29, x30, [sp], #80
  40d9f0:	ret
  40d9f4:	stp	x29, x30, [sp, #-48]!
  40d9f8:	mov	x29, sp
  40d9fc:	str	x19, [sp, #16]
  40da00:	mov	x19, x0
  40da04:	ldr	x0, [x1]
  40da08:	add	x1, sp, #0x20
  40da0c:	str	x0, [sp, #40]
  40da10:	add	x0, sp, #0x28
  40da14:	bl	416ccc <find_next_token@@Base>
  40da18:	cbz	x0, 40da30 <init_hash_files@@Base+0x2e0>
  40da1c:	ldr	x2, [sp, #32]
  40da20:	mov	x1, x0
  40da24:	mov	x0, x19
  40da28:	bl	40b138 <variable_buffer_output@@Base>
  40da2c:	mov	x19, x0
  40da30:	mov	x0, x19
  40da34:	ldr	x19, [sp, #16]
  40da38:	ldp	x29, x30, [sp], #48
  40da3c:	ret
  40da40:	stp	x29, x30, [sp, #-96]!
  40da44:	mov	x29, sp
  40da48:	stp	x19, x20, [sp, #16]
  40da4c:	mov	x19, x0
  40da50:	stp	x21, x22, [sp, #32]
  40da54:	mov	w22, #0x8000                	// #32768
  40da58:	stp	x23, x24, [sp, #48]
  40da5c:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  40da60:	add	x24, x24, #0x454
  40da64:	stp	x25, x26, [sp, #64]
  40da68:	mov	w25, #0x0                   	// #0
  40da6c:	ldrb	w21, [x2]
  40da70:	ldr	x1, [x1]
  40da74:	cmp	w21, #0x73
  40da78:	cset	w23, ne  // ne = any
  40da7c:	stp	x1, xzr, [sp, #80]
  40da80:	mov	w1, #0x8200                	// #33280
  40da84:	csel	w22, w22, w1, ne  // ne = any
  40da88:	add	x1, sp, #0x58
  40da8c:	add	x0, sp, #0x50
  40da90:	bl	416ccc <find_next_token@@Base>
  40da94:	mov	x26, x0
  40da98:	cbnz	x0, 40dabc <init_hash_files@@Base+0x36c>
  40da9c:	and	x0, x25, #0x1
  40daa0:	sub	x0, x19, x0
  40daa4:	ldp	x19, x20, [sp, #16]
  40daa8:	ldp	x21, x22, [sp, #32]
  40daac:	ldp	x23, x24, [sp, #48]
  40dab0:	ldp	x25, x26, [sp, #64]
  40dab4:	ldp	x29, x30, [sp], #96
  40dab8:	ret
  40dabc:	ldr	x2, [sp, #88]
  40dac0:	sub	x20, x2, #0x1
  40dac4:	add	x20, x26, x20
  40dac8:	cmp	x20, x26
  40dacc:	b.cc	40db48 <init_hash_files@@Base+0x3f8>  // b.lo, b.ul, b.last
  40dad0:	ldrb	w1, [x20]
  40dad4:	ldrb	w0, [x20]
  40dad8:	ldrh	w1, [x24, x1, lsl #1]
  40dadc:	tst	w1, w22
  40dae0:	b.eq	40db34 <init_hash_files@@Base+0x3e4>  // b.none
  40dae4:	cmp	w21, #0x73
  40dae8:	b.eq	40db3c <init_hash_files@@Base+0x3ec>  // b.none
  40daec:	add	x20, x20, #0x1
  40daf0:	sub	x0, x20, x26
  40daf4:	mov	x1, x20
  40daf8:	sub	x2, x2, x0
  40dafc:	mov	x0, x19
  40db00:	bl	40b138 <variable_buffer_output@@Base>
  40db04:	mov	x19, x0
  40db08:	cmp	w23, #0x0
  40db0c:	ccmp	x20, x26, #0x2, eq  // eq = none
  40db10:	b.cc	40da88 <init_hash_files@@Base+0x338>  // b.lo, b.ul, b.last
  40db14:	mov	x0, x19
  40db18:	mov	x2, #0x1                   	// #1
  40db1c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40db20:	mov	w25, #0x1                   	// #1
  40db24:	add	x1, x1, #0x39d
  40db28:	bl	40b138 <variable_buffer_output@@Base>
  40db2c:	mov	x19, x0
  40db30:	b	40da88 <init_hash_files@@Base+0x338>
  40db34:	sub	x20, x20, #0x1
  40db38:	b	40dac8 <init_hash_files@@Base+0x378>
  40db3c:	cmp	w0, #0x2e
  40db40:	b.eq	40daf0 <init_hash_files@@Base+0x3a0>  // b.none
  40db44:	b	40da88 <init_hash_files@@Base+0x338>
  40db48:	cmp	w21, #0x73
  40db4c:	b.eq	40db08 <init_hash_files@@Base+0x3b8>  // b.none
  40db50:	mov	x1, x26
  40db54:	b	40dafc <init_hash_files@@Base+0x3ac>
  40db58:	stp	x29, x30, [sp, #-80]!
  40db5c:	mov	x29, sp
  40db60:	stp	x19, x20, [sp, #16]
  40db64:	mov	w20, #0x8001                	// #32769
  40db68:	stp	x21, x22, [sp, #32]
  40db6c:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  40db70:	add	x21, x21, #0x454
  40db74:	stp	x23, x24, [sp, #48]
  40db78:	mov	x23, x0
  40db7c:	mov	w24, #0x0                   	// #0
  40db80:	ldrb	w19, [x2]
  40db84:	ldr	x1, [x1]
  40db88:	cmp	w19, #0x62
  40db8c:	cset	w22, ne  // ne = any
  40db90:	stp	x1, xzr, [sp, #64]
  40db94:	mov	w1, #0x8201                	// #33281
  40db98:	csel	w20, w20, w1, ne  // ne = any
  40db9c:	add	x1, sp, #0x48
  40dba0:	add	x0, sp, #0x40
  40dba4:	bl	416ccc <find_next_token@@Base>
  40dba8:	mov	x1, x0
  40dbac:	cbnz	x0, 40dbcc <init_hash_files@@Base+0x47c>
  40dbb0:	and	x0, x24, #0x1
  40dbb4:	sub	x0, x23, x0
  40dbb8:	ldp	x19, x20, [sp, #16]
  40dbbc:	ldp	x21, x22, [sp, #32]
  40dbc0:	ldp	x23, x24, [sp, #48]
  40dbc4:	ldp	x29, x30, [sp], #80
  40dbc8:	ret
  40dbcc:	ldr	x2, [sp, #72]
  40dbd0:	sub	x3, x2, #0x1
  40dbd4:	add	x3, x1, x3
  40dbd8:	cmp	x3, x1
  40dbdc:	b.cs	40dc18 <init_hash_files@@Base+0x4c8>  // b.hs, b.nlast
  40dbe0:	cmp	w22, #0x0
  40dbe4:	ccmp	x3, x1, #0x0, ne  // ne = any
  40dbe8:	b.cc	40dc30 <init_hash_files@@Base+0x4e0>  // b.lo, b.ul, b.last
  40dbec:	add	x2, x3, #0x1
  40dbf0:	sub	x2, x2, x1
  40dbf4:	mov	x0, x23
  40dbf8:	bl	40b138 <variable_buffer_output@@Base>
  40dbfc:	mov	x2, #0x1                   	// #1
  40dc00:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40dc04:	mov	w24, #0x1                   	// #1
  40dc08:	add	x1, x1, #0x39d
  40dc0c:	bl	40b138 <variable_buffer_output@@Base>
  40dc10:	mov	x23, x0
  40dc14:	b	40db9c <init_hash_files@@Base+0x44c>
  40dc18:	ldrb	w0, [x3]
  40dc1c:	ldrh	w0, [x21, x0, lsl #1]
  40dc20:	tst	w0, w20
  40dc24:	b.ne	40dbe0 <init_hash_files@@Base+0x490>  // b.any
  40dc28:	sub	x3, x3, #0x1
  40dc2c:	b	40dbd8 <init_hash_files@@Base+0x488>
  40dc30:	cmp	x3, x1
  40dc34:	b.cc	40dc4c <init_hash_files@@Base+0x4fc>  // b.lo, b.ul, b.last
  40dc38:	ldrb	w0, [x3]
  40dc3c:	cmp	w0, #0x2e
  40dc40:	b.ne	40dbf4 <init_hash_files@@Base+0x4a4>  // b.any
  40dc44:	sub	x2, x3, x1
  40dc48:	b	40dbf4 <init_hash_files@@Base+0x4a4>
  40dc4c:	cmp	w19, #0x62
  40dc50:	b.eq	40dbf4 <init_hash_files@@Base+0x4a4>  // b.none
  40dc54:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40dc58:	mov	x2, #0x2                   	// #2
  40dc5c:	add	x1, x1, #0xb37
  40dc60:	b	40dbf4 <init_hash_files@@Base+0x4a4>
  40dc64:	stp	x29, x30, [sp, #-96]!
  40dc68:	mov	x29, sp
  40dc6c:	stp	x19, x20, [sp, #16]
  40dc70:	mov	x19, x0
  40dc74:	mov	x20, x1
  40dc78:	ldr	x0, [x1]
  40dc7c:	stp	x21, x22, [sp, #32]
  40dc80:	mov	x22, x2
  40dc84:	stp	x23, x24, [sp, #48]
  40dc88:	adrp	x23, 427000 <_IO_stdin_used@@Base+0x4720>
  40dc8c:	add	x23, x23, #0x39d
  40dc90:	str	x25, [sp, #64]
  40dc94:	bl	406700 <strlen@plt>
  40dc98:	ldrb	w22, [x22, #3]
  40dc9c:	mov	x21, x0
  40dca0:	ldr	x0, [x20, #8]
  40dca4:	mov	w24, #0x0                   	// #0
  40dca8:	str	x0, [sp, #80]
  40dcac:	add	x1, sp, #0x58
  40dcb0:	add	x0, sp, #0x50
  40dcb4:	bl	416ccc <find_next_token@@Base>
  40dcb8:	mov	x25, x0
  40dcbc:	cbnz	x0, 40dce0 <init_hash_files@@Base+0x590>
  40dcc0:	and	x0, x24, #0x1
  40dcc4:	sub	x0, x19, x0
  40dcc8:	ldp	x19, x20, [sp, #16]
  40dccc:	ldp	x21, x22, [sp, #32]
  40dcd0:	ldp	x23, x24, [sp, #48]
  40dcd4:	ldr	x25, [sp, #64]
  40dcd8:	ldp	x29, x30, [sp], #96
  40dcdc:	ret
  40dce0:	cmp	w22, #0x70
  40dce4:	b.ne	40dcfc <init_hash_files@@Base+0x5ac>  // b.any
  40dce8:	ldr	x1, [x20]
  40dcec:	mov	x0, x19
  40dcf0:	mov	x2, x21
  40dcf4:	bl	40b138 <variable_buffer_output@@Base>
  40dcf8:	mov	x19, x0
  40dcfc:	ldr	x2, [sp, #88]
  40dd00:	mov	x1, x25
  40dd04:	mov	x0, x19
  40dd08:	bl	40b138 <variable_buffer_output@@Base>
  40dd0c:	mov	x3, x0
  40dd10:	cmp	w22, #0x70
  40dd14:	b.eq	40dd28 <init_hash_files@@Base+0x5d8>  // b.none
  40dd18:	ldr	x1, [x20]
  40dd1c:	mov	x2, x21
  40dd20:	bl	40b138 <variable_buffer_output@@Base>
  40dd24:	mov	x3, x0
  40dd28:	mov	x1, x23
  40dd2c:	mov	x0, x3
  40dd30:	mov	x2, #0x1                   	// #1
  40dd34:	mov	w24, #0x1                   	// #1
  40dd38:	bl	40b138 <variable_buffer_output@@Base>
  40dd3c:	mov	x19, x0
  40dd40:	b	40dcac <init_hash_files@@Base+0x55c>
  40dd44:	stp	x29, x30, [sp, #-64]!
  40dd48:	mov	x29, sp
  40dd4c:	stp	x19, x20, [sp, #16]
  40dd50:	mov	x19, x0
  40dd54:	mov	w20, #0x0                   	// #0
  40dd58:	ldr	x0, [x1]
  40dd5c:	str	x0, [sp, #32]
  40dd60:	add	x0, sp, #0x20
  40dd64:	mov	x1, #0x0                   	// #0
  40dd68:	bl	416ccc <find_next_token@@Base>
  40dd6c:	cbnz	x0, 40dda8 <init_hash_files@@Base+0x658>
  40dd70:	mov	w2, w20
  40dd74:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  40dd78:	add	x1, x1, #0x16b
  40dd7c:	add	x0, sp, #0x28
  40dd80:	bl	4067a0 <sprintf@plt>
  40dd84:	add	x0, sp, #0x28
  40dd88:	bl	406700 <strlen@plt>
  40dd8c:	mov	x2, x0
  40dd90:	add	x1, sp, #0x28
  40dd94:	mov	x0, x19
  40dd98:	bl	40b138 <variable_buffer_output@@Base>
  40dd9c:	ldp	x19, x20, [sp, #16]
  40dda0:	ldp	x29, x30, [sp], #64
  40dda4:	ret
  40dda8:	add	w20, w20, #0x1
  40ddac:	b	40dd60 <init_hash_files@@Base+0x610>
  40ddb0:	stp	x29, x30, [sp, #-48]!
  40ddb4:	mov	x29, sp
  40ddb8:	stp	x19, x20, [sp, #16]
  40ddbc:	mov	x20, x0
  40ddc0:	mov	x19, x3
  40ddc4:	stp	x21, x22, [sp, #32]
  40ddc8:	mov	w21, w1
  40ddcc:	ldrb	w0, [x3, #17]
  40ddd0:	cmp	w0, w1
  40ddd4:	b.le	40de1c <init_hash_files@@Base+0x6cc>
  40ddd8:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40dddc:	ldr	x0, [x0, #3288]
  40dde0:	ldr	x22, [x0]
  40dde4:	ldr	x0, [x3, #8]
  40dde8:	bl	406700 <strlen@plt>
  40ddec:	mov	x20, x0
  40ddf0:	mov	w2, #0x5                   	// #5
  40ddf4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40ddf8:	mov	x0, #0x0                   	// #0
  40ddfc:	add	x1, x1, #0xe4
  40de00:	bl	406d60 <dcgettext@plt>
  40de04:	mov	x2, x0
  40de08:	ldr	x4, [x19, #8]
  40de0c:	mov	w3, w21
  40de10:	mov	x1, x20
  40de14:	mov	x0, x22
  40de18:	bl	417d24 <fatal@@Base>
  40de1c:	mov	x1, x2
  40de20:	cbnz	w21, 40de2c <init_hash_files@@Base+0x6dc>
  40de24:	ldrb	w0, [x3, #19]
  40de28:	tbz	w0, #1, 40dec8 <init_hash_files@@Base+0x778>
  40de2c:	ldp	x3, x0, [x19]
  40de30:	cbnz	x3, 40de70 <init_hash_files@@Base+0x720>
  40de34:	adrp	x1, 43d000 <memcpy@GLIBC_2.17>
  40de38:	ldr	x1, [x1, #3288]
  40de3c:	ldr	x21, [x1]
  40de40:	bl	406700 <strlen@plt>
  40de44:	mov	w2, #0x5                   	// #5
  40de48:	mov	x20, x0
  40de4c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40de50:	mov	x0, #0x0                   	// #0
  40de54:	add	x1, x1, #0x11b
  40de58:	bl	406d60 <dcgettext@plt>
  40de5c:	ldr	x3, [x19, #8]
  40de60:	mov	x2, x0
  40de64:	mov	x1, x20
  40de68:	mov	x0, x21
  40de6c:	bl	417d24 <fatal@@Base>
  40de70:	ldrb	w2, [x19, #19]
  40de74:	tbnz	w2, #1, 40de94 <init_hash_files@@Base+0x744>
  40de78:	mov	x2, x0
  40de7c:	mov	x0, x20
  40de80:	ldp	x19, x20, [sp, #16]
  40de84:	mov	x16, x3
  40de88:	ldp	x21, x22, [sp, #32]
  40de8c:	ldp	x29, x30, [sp], #48
  40de90:	br	x16
  40de94:	mov	x2, x1
  40de98:	mov	w1, w21
  40de9c:	blr	x3
  40dea0:	mov	x19, x0
  40dea4:	cbz	x0, 40dec8 <init_hash_files@@Base+0x778>
  40dea8:	bl	406700 <strlen@plt>
  40deac:	mov	x2, x0
  40deb0:	mov	x1, x19
  40deb4:	mov	x0, x20
  40deb8:	bl	40b138 <variable_buffer_output@@Base>
  40debc:	mov	x20, x0
  40dec0:	mov	x0, x19
  40dec4:	bl	406c20 <free@plt>
  40dec8:	mov	x0, x20
  40decc:	ldp	x19, x20, [sp, #16]
  40ded0:	ldp	x21, x22, [sp, #32]
  40ded4:	ldp	x29, x30, [sp], #48
  40ded8:	ret
  40dedc:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  40dee0:	mov	x1, x0
  40dee4:	add	x2, x2, #0x454
  40dee8:	ldrb	w3, [x1]
  40deec:	ldrh	w3, [x2, x3, lsl #1]
  40def0:	tbnz	w3, #13, 40df30 <init_hash_files@@Base+0x7e0>
  40def4:	cmp	x1, x0
  40def8:	b.eq	40df38 <init_hash_files@@Base+0x7e8>  // b.none
  40defc:	tst	x3, #0x7
  40df00:	b.eq	40df38 <init_hash_files@@Base+0x7e8>  // b.none
  40df04:	stp	x29, x30, [sp, #-48]!
  40df08:	sub	x1, x1, x0
  40df0c:	mov	x29, sp
  40df10:	str	x0, [sp, #32]
  40df14:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40df18:	add	x0, x0, #0x320
  40df1c:	strb	w1, [sp, #40]
  40df20:	add	x1, sp, #0x18
  40df24:	bl	41088c <hash_find_item@@Base>
  40df28:	ldp	x29, x30, [sp], #48
  40df2c:	ret
  40df30:	add	x1, x1, #0x1
  40df34:	b	40dee8 <init_hash_files@@Base+0x798>
  40df38:	mov	x0, #0x0                   	// #0
  40df3c:	ret
  40df40:	sub	sp, sp, #0x450
  40df44:	stp	x29, x30, [sp]
  40df48:	mov	x29, sp
  40df4c:	stp	x19, x20, [sp, #16]
  40df50:	ldr	x19, [x1]
  40df54:	stp	x21, x22, [sp, #32]
  40df58:	stp	x23, x24, [sp, #48]
  40df5c:	mov	x24, x1
  40df60:	mov	x23, x0
  40df64:	str	x25, [sp, #64]
  40df68:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40df6c:	add	x0, x0, #0x454
  40df70:	ldrb	w1, [x19]
  40df74:	cmp	w1, #0x3e
  40df78:	b.ne	40e0b4 <init_hash_files@@Base+0x964>  // b.any
  40df7c:	ldrb	w1, [x19, #1]
  40df80:	cmp	w1, #0x3e
  40df84:	b.ne	40dfe4 <init_hash_files@@Base+0x894>  // b.any
  40df88:	adrp	x22, 423000 <_IO_stdin_used@@Base+0x720>
  40df8c:	add	x19, x19, #0x2
  40df90:	add	x22, x22, #0x21d
  40df94:	ldrb	w2, [x19]
  40df98:	ldrb	w1, [x19]
  40df9c:	ldrh	w2, [x0, x2, lsl #1]
  40dfa0:	tst	w2, #0x6
  40dfa4:	b.ne	40dfdc <init_hash_files@@Base+0x88c>  // b.any
  40dfa8:	cbnz	w1, 40dff4 <init_hash_files@@Base+0x8a4>
  40dfac:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40dfb0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40dfb4:	add	x1, x1, #0x149
  40dfb8:	mov	w2, #0x5                   	// #5
  40dfbc:	ldr	x0, [x0, #3288]
  40dfc0:	ldr	x19, [x0]
  40dfc4:	mov	x0, #0x0                   	// #0
  40dfc8:	bl	406d60 <dcgettext@plt>
  40dfcc:	mov	x2, x0
  40dfd0:	mov	x1, #0x0                   	// #0
  40dfd4:	mov	x0, x19
  40dfd8:	bl	417d24 <fatal@@Base>
  40dfdc:	add	x19, x19, #0x1
  40dfe0:	b	40df94 <init_hash_files@@Base+0x844>
  40dfe4:	adrp	x22, 425000 <_IO_stdin_used@@Base+0x2720>
  40dfe8:	add	x19, x19, #0x1
  40dfec:	add	x22, x22, #0x80c
  40dff0:	b	40df94 <init_hash_files@@Base+0x844>
  40dff4:	bl	406e00 <__errno_location@plt>
  40dff8:	mov	x20, x0
  40dffc:	str	wzr, [x20]
  40e000:	mov	x1, x22
  40e004:	mov	x0, x19
  40e008:	bl	406930 <fopen@plt>
  40e00c:	mov	x21, x0
  40e010:	cbnz	x0, 40e2f8 <init_hash_files@@Base+0xba8>
  40e014:	ldr	w25, [x20]
  40e018:	cmp	w25, #0x4
  40e01c:	b.eq	40dffc <init_hash_files@@Base+0x8ac>  // b.none
  40e020:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e024:	ldr	x23, [x0, #3560]
  40e028:	mov	x0, x19
  40e02c:	bl	406700 <strlen@plt>
  40e030:	mov	x21, x0
  40e034:	mov	w0, w25
  40e038:	bl	406ad0 <strerror@plt>
  40e03c:	bl	406700 <strlen@plt>
  40e040:	add	x21, x21, x0
  40e044:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e048:	mov	w2, #0x5                   	// #5
  40e04c:	add	x1, x1, #0x195
  40e050:	b	40e360 <init_hash_files@@Base+0xc10>
  40e054:	mov	w24, #0x1                   	// #1
  40e058:	b	40e31c <init_hash_files@@Base+0xbcc>
  40e05c:	cbz	w24, 40e074 <init_hash_files@@Base+0x924>
  40e060:	mov	x1, x21
  40e064:	mov	w0, #0xa                   	// #10
  40e068:	bl	406800 <fputc@plt>
  40e06c:	cmn	w0, #0x1
  40e070:	b.eq	40e330 <init_hash_files@@Base+0xbe0>  // b.none
  40e074:	mov	x0, x21
  40e078:	bl	406900 <fclose@plt>
  40e07c:	cbz	w0, 40e2e8 <init_hash_files@@Base+0xb98>
  40e080:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e084:	ldr	x23, [x0, #3560]
  40e088:	mov	x0, x19
  40e08c:	bl	406700 <strlen@plt>
  40e090:	mov	x21, x0
  40e094:	ldr	w0, [x20]
  40e098:	bl	406ad0 <strerror@plt>
  40e09c:	bl	406700 <strlen@plt>
  40e0a0:	add	x21, x21, x0
  40e0a4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e0a8:	mov	w2, #0x5                   	// #5
  40e0ac:	add	x1, x1, #0x16e
  40e0b0:	b	40e360 <init_hash_files@@Base+0xc10>
  40e0b4:	cmp	w1, #0x3c
  40e0b8:	b.ne	40e2a8 <init_hash_files@@Base+0xb58>  // b.any
  40e0bc:	ldrb	w2, [x19, #1]
  40e0c0:	add	x19, x19, #0x1
  40e0c4:	ldrb	w1, [x19]
  40e0c8:	ldrh	w2, [x0, x2, lsl #1]
  40e0cc:	tst	w2, #0x6
  40e0d0:	b.ne	40e0bc <init_hash_files@@Base+0x96c>  // b.any
  40e0d4:	cbz	w1, 40dfac <init_hash_files@@Base+0x85c>
  40e0d8:	ldr	x0, [x24, #8]
  40e0dc:	cbz	x0, 40e0fc <init_hash_files@@Base+0x9ac>
  40e0e0:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40e0e4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e0e8:	mov	w2, #0x5                   	// #5
  40e0ec:	add	x1, x1, #0x17c
  40e0f0:	ldr	x0, [x0, #3288]
  40e0f4:	ldr	x19, [x0]
  40e0f8:	b	40dfc4 <init_hash_files@@Base+0x874>
  40e0fc:	adrp	x20, 422000 <fd_inherit@@Base+0x20>
  40e100:	bl	406e00 <__errno_location@plt>
  40e104:	add	x20, x20, #0xf05
  40e108:	mov	x21, x0
  40e10c:	str	wzr, [x21]
  40e110:	mov	x1, x20
  40e114:	mov	x0, x19
  40e118:	bl	406930 <fopen@plt>
  40e11c:	mov	x22, x0
  40e120:	cbnz	x0, 40e194 <init_hash_files@@Base+0xa44>
  40e124:	ldr	w22, [x21]
  40e128:	cmp	w22, #0x4
  40e12c:	b.eq	40e10c <init_hash_files@@Base+0x9bc>  // b.none
  40e130:	cmp	w22, #0x2
  40e134:	b.eq	40e2e8 <init_hash_files@@Base+0xb98>  // b.none
  40e138:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e13c:	ldr	x23, [x0, #3560]
  40e140:	mov	x0, x19
  40e144:	bl	406700 <strlen@plt>
  40e148:	mov	x20, x0
  40e14c:	mov	w0, w22
  40e150:	bl	406ad0 <strerror@plt>
  40e154:	bl	406700 <strlen@plt>
  40e158:	add	x20, x20, x0
  40e15c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e160:	add	x1, x1, #0x195
  40e164:	mov	w2, #0x5                   	// #5
  40e168:	mov	x0, #0x0                   	// #0
  40e16c:	bl	406d60 <dcgettext@plt>
  40e170:	mov	x22, x0
  40e174:	ldr	w0, [x21]
  40e178:	bl	406ad0 <strerror@plt>
  40e17c:	mov	x4, x0
  40e180:	mov	x3, x19
  40e184:	mov	x2, x22
  40e188:	mov	x1, x20
  40e18c:	mov	x0, x23
  40e190:	bl	417d24 <fatal@@Base>
  40e194:	mov	x20, x23
  40e198:	mov	x2, #0x400                 	// #1024
  40e19c:	mov	x3, x22
  40e1a0:	add	x0, sp, #0x50
  40e1a4:	mov	x1, #0x1                   	// #1
  40e1a8:	bl	406c00 <fread@plt>
  40e1ac:	mov	x2, x0
  40e1b0:	cbz	x0, 40e1c4 <init_hash_files@@Base+0xa74>
  40e1b4:	mov	x0, x20
  40e1b8:	add	x1, sp, #0x50
  40e1bc:	bl	40b138 <variable_buffer_output@@Base>
  40e1c0:	mov	x20, x0
  40e1c4:	mov	x0, x22
  40e1c8:	bl	406ea0 <ferror@plt>
  40e1cc:	cbz	w0, 40e210 <init_hash_files@@Base+0xac0>
  40e1d0:	ldr	w24, [x21]
  40e1d4:	cmp	w24, #0x4
  40e1d8:	b.eq	40e210 <init_hash_files@@Base+0xac0>  // b.none
  40e1dc:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e1e0:	ldr	x23, [x0, #3560]
  40e1e4:	mov	x0, x19
  40e1e8:	bl	406700 <strlen@plt>
  40e1ec:	mov	x20, x0
  40e1f0:	mov	w0, w24
  40e1f4:	bl	406ad0 <strerror@plt>
  40e1f8:	bl	406700 <strlen@plt>
  40e1fc:	add	x20, x20, x0
  40e200:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e204:	mov	w2, #0x5                   	// #5
  40e208:	add	x1, x1, #0x1a2
  40e20c:	b	40e168 <init_hash_files@@Base+0xa18>
  40e210:	mov	x0, x22
  40e214:	bl	406b70 <feof@plt>
  40e218:	cbz	w0, 40e198 <init_hash_files@@Base+0xa48>
  40e21c:	mov	x0, x22
  40e220:	bl	406900 <fclose@plt>
  40e224:	cbz	w0, 40e25c <init_hash_files@@Base+0xb0c>
  40e228:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e22c:	ldr	x23, [x0, #3560]
  40e230:	mov	x0, x19
  40e234:	bl	406700 <strlen@plt>
  40e238:	mov	x20, x0
  40e23c:	ldr	w0, [x21]
  40e240:	bl	406ad0 <strerror@plt>
  40e244:	bl	406700 <strlen@plt>
  40e248:	add	x20, x20, x0
  40e24c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e250:	mov	w2, #0x5                   	// #5
  40e254:	add	x1, x1, #0x16e
  40e258:	b	40e168 <init_hash_files@@Base+0xa18>
  40e25c:	cmp	x20, x23
  40e260:	b.ls	40e2f0 <init_hash_files@@Base+0xba0>  // b.plast
  40e264:	ldurb	w0, [x20, #-1]
  40e268:	cmp	w0, #0xa
  40e26c:	b.ne	40e2f0 <init_hash_files@@Base+0xba0>  // b.any
  40e270:	sub	x0, x20, #0x1
  40e274:	cmp	x23, x0
  40e278:	b.cs	40e28c <init_hash_files@@Base+0xb3c>  // b.hs, b.nlast
  40e27c:	ldurb	w1, [x20, #-2]
  40e280:	cmp	w1, #0xd
  40e284:	b.ne	40e28c <init_hash_files@@Base+0xb3c>  // b.any
  40e288:	sub	x0, x20, #0x2
  40e28c:	ldp	x29, x30, [sp]
  40e290:	ldp	x19, x20, [sp, #16]
  40e294:	ldp	x21, x22, [sp, #32]
  40e298:	ldp	x23, x24, [sp, #48]
  40e29c:	ldr	x25, [sp, #64]
  40e2a0:	add	sp, sp, #0x450
  40e2a4:	ret
  40e2a8:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40e2ac:	ldr	x0, [x0, #3288]
  40e2b0:	ldr	x21, [x0]
  40e2b4:	mov	x0, x19
  40e2b8:	bl	406700 <strlen@plt>
  40e2bc:	mov	x20, x0
  40e2c0:	mov	w2, #0x5                   	// #5
  40e2c4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e2c8:	mov	x0, #0x0                   	// #0
  40e2cc:	add	x1, x1, #0x1af
  40e2d0:	bl	406d60 <dcgettext@plt>
  40e2d4:	mov	x2, x0
  40e2d8:	mov	x3, x19
  40e2dc:	mov	x1, x20
  40e2e0:	mov	x0, x21
  40e2e4:	bl	417d24 <fatal@@Base>
  40e2e8:	mov	x0, x23
  40e2ec:	b	40e28c <init_hash_files@@Base+0xb3c>
  40e2f0:	mov	x0, x20
  40e2f4:	b	40e28c <init_hash_files@@Base+0xb3c>
  40e2f8:	ldr	x22, [x24, #8]
  40e2fc:	cbz	x22, 40e074 <init_hash_files@@Base+0x924>
  40e300:	mov	x0, x22
  40e304:	bl	406700 <strlen@plt>
  40e308:	cbz	x0, 40e054 <init_hash_files@@Base+0x904>
  40e30c:	add	x0, x22, x0
  40e310:	ldurb	w0, [x0, #-1]
  40e314:	cmp	w0, #0xa
  40e318:	cset	w24, ne  // ne = any
  40e31c:	mov	x1, x21
  40e320:	mov	x0, x22
  40e324:	bl	406710 <fputs@plt>
  40e328:	cmn	w0, #0x1
  40e32c:	b.ne	40e05c <init_hash_files@@Base+0x90c>  // b.any
  40e330:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40e334:	ldr	x23, [x0, #3560]
  40e338:	mov	x0, x19
  40e33c:	bl	406700 <strlen@plt>
  40e340:	mov	x21, x0
  40e344:	ldr	w0, [x20]
  40e348:	bl	406ad0 <strerror@plt>
  40e34c:	bl	406700 <strlen@plt>
  40e350:	add	x21, x21, x0
  40e354:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e358:	add	x1, x1, #0x160
  40e35c:	mov	w2, #0x5                   	// #5
  40e360:	mov	x0, #0x0                   	// #0
  40e364:	bl	406d60 <dcgettext@plt>
  40e368:	mov	x22, x0
  40e36c:	ldr	w0, [x20]
  40e370:	bl	406ad0 <strerror@plt>
  40e374:	mov	x4, x0
  40e378:	mov	x3, x19
  40e37c:	mov	x2, x22
  40e380:	mov	x1, x21
  40e384:	b	40e18c <init_hash_files@@Base+0xa3c>
  40e388:	stp	x29, x30, [sp, #-48]!
  40e38c:	mov	x29, sp
  40e390:	stp	x19, x20, [sp, #16]
  40e394:	mov	x20, x1
  40e398:	mov	x19, x0
  40e39c:	add	x1, sp, #0x28
  40e3a0:	add	x0, sp, #0x20
  40e3a4:	bl	40bb18 <install_variable_buffer@@Base>
  40e3a8:	ldr	x0, [x20]
  40e3ac:	mov	x1, #0x0                   	// #0
  40e3b0:	bl	41bcbc <eval_buffer@@Base>
  40e3b4:	ldp	x0, x1, [sp, #32]
  40e3b8:	bl	40bb38 <restore_variable_buffer@@Base>
  40e3bc:	mov	x0, x19
  40e3c0:	ldp	x19, x20, [sp, #16]
  40e3c4:	ldp	x29, x30, [sp], #48
  40e3c8:	ret
  40e3cc:	stp	x29, x30, [sp, #-32]!
  40e3d0:	mov	x29, sp
  40e3d4:	stp	x19, x20, [sp, #16]
  40e3d8:	mov	x19, x0
  40e3dc:	ldr	x20, [x1]
  40e3e0:	mov	x0, x20
  40e3e4:	bl	406700 <strlen@plt>
  40e3e8:	mov	x1, x0
  40e3ec:	mov	x0, x20
  40e3f0:	bl	41fcdc <lookup_variable@@Base>
  40e3f4:	cbz	x0, 40e41c <init_hash_files@@Base+0xccc>
  40e3f8:	ldr	x20, [x0, #8]
  40e3fc:	mov	x0, x20
  40e400:	bl	406700 <strlen@plt>
  40e404:	mov	x1, x20
  40e408:	mov	x2, x0
  40e40c:	mov	x0, x19
  40e410:	ldp	x19, x20, [sp, #16]
  40e414:	ldp	x29, x30, [sp], #32
  40e418:	b	40b138 <variable_buffer_output@@Base>
  40e41c:	mov	x0, x19
  40e420:	ldp	x19, x20, [sp, #16]
  40e424:	ldp	x29, x30, [sp], #32
  40e428:	ret
  40e42c:	stp	x29, x30, [sp, #-80]!
  40e430:	mov	x29, sp
  40e434:	stp	x19, x20, [sp, #16]
  40e438:	mov	x20, x1
  40e43c:	mov	x19, #0x0                   	// #0
  40e440:	stp	x21, x22, [sp, #32]
  40e444:	mov	x22, x2
  40e448:	mov	x21, x1
  40e44c:	stp	x23, x24, [sp, #48]
  40e450:	mov	x23, x0
  40e454:	str	x25, [sp, #64]
  40e458:	ldr	x0, [x21]
  40e45c:	cbnz	x0, 40e4d4 <init_hash_files@@Base+0xd84>
  40e460:	add	x19, x19, #0x10
  40e464:	mov	w25, #0x202c                	// #8236
  40e468:	and	x19, x19, #0xfffffffffffffff0
  40e46c:	sub	sp, sp, x19
  40e470:	mov	x19, sp
  40e474:	mov	x21, x19
  40e478:	strb	wzr, [x19]
  40e47c:	ldp	x24, x0, [x20]
  40e480:	mov	x1, x24
  40e484:	cbnz	x0, 40e4e8 <init_hash_files@@Base+0xd98>
  40e488:	mov	x0, x21
  40e48c:	bl	406cc0 <strcpy@plt>
  40e490:	ldrb	w0, [x22]
  40e494:	cmp	w0, #0x69
  40e498:	b.eq	40e544 <init_hash_files@@Base+0xdf4>  // b.none
  40e49c:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x1720>
  40e4a0:	cmp	w0, #0x77
  40e4a4:	add	x20, x20, #0xe5c
  40e4a8:	adrp	x21, 440000 <output_context@@Base+0x1248>
  40e4ac:	b.eq	40e508 <init_hash_files@@Base+0xdb8>  // b.none
  40e4b0:	cmp	w0, #0x65
  40e4b4:	b.ne	40e564 <init_hash_files@@Base+0xe14>  // b.any
  40e4b8:	mov	x0, x19
  40e4bc:	bl	406700 <strlen@plt>
  40e4c0:	mov	x1, x0
  40e4c4:	mov	x3, x19
  40e4c8:	ldr	x0, [x21, #3560]
  40e4cc:	mov	x2, x20
  40e4d0:	bl	417d24 <fatal@@Base>
  40e4d4:	bl	406700 <strlen@plt>
  40e4d8:	add	x0, x0, #0x2
  40e4dc:	add	x19, x19, x0
  40e4e0:	add	x21, x21, #0x8
  40e4e4:	b	40e458 <init_hash_files@@Base+0xd08>
  40e4e8:	mov	x0, x21
  40e4ec:	bl	406cc0 <strcpy@plt>
  40e4f0:	mov	x0, x24
  40e4f4:	bl	406700 <strlen@plt>
  40e4f8:	add	x21, x21, x0
  40e4fc:	add	x20, x20, #0x8
  40e500:	strh	w25, [x21], #2
  40e504:	b	40e47c <init_hash_files@@Base+0xd2c>
  40e508:	mov	x0, x19
  40e50c:	bl	406700 <strlen@plt>
  40e510:	mov	x1, x0
  40e514:	mov	x3, x19
  40e518:	ldr	x0, [x21, #3560]
  40e51c:	mov	x2, x20
  40e520:	bl	417aa8 <error@@Base>
  40e524:	mov	sp, x29
  40e528:	mov	x0, x23
  40e52c:	ldp	x19, x20, [sp, #16]
  40e530:	ldp	x21, x22, [sp, #32]
  40e534:	ldp	x23, x24, [sp, #48]
  40e538:	ldr	x25, [sp, #64]
  40e53c:	ldp	x29, x30, [sp], #80
  40e540:	ret
  40e544:	mov	x1, x19
  40e548:	mov	w0, #0x0                   	// #0
  40e54c:	bl	4178a0 <outputs@@Base>
  40e550:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e554:	mov	w0, #0x0                   	// #0
  40e558:	add	x1, x1, #0x818
  40e55c:	bl	4178a0 <outputs@@Base>
  40e560:	b	40e524 <init_hash_files@@Base+0xdd4>
  40e564:	mov	x0, x22
  40e568:	bl	406700 <strlen@plt>
  40e56c:	adrp	x1, 43d000 <memcpy@GLIBC_2.17>
  40e570:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40e574:	mov	x3, x22
  40e578:	add	x2, x2, #0x1d0
  40e57c:	ldr	x4, [x1, #3288]
  40e580:	mov	x1, x0
  40e584:	ldr	x0, [x4]
  40e588:	b	40e4d0 <init_hash_files@@Base+0xd80>
  40e58c:	stp	x29, x30, [sp, #-112]!
  40e590:	mov	x29, sp
  40e594:	stp	x19, x20, [sp, #16]
  40e598:	mov	x19, x0
  40e59c:	ldr	x0, [x1]
  40e5a0:	stp	x21, x22, [sp, #32]
  40e5a4:	stp	x23, x24, [sp, #48]
  40e5a8:	mov	x23, x1
  40e5ac:	stp	x25, x26, [sp, #64]
  40e5b0:	str	x27, [sp, #80]
  40e5b4:	bl	416ca8 <next_token@@Base>
  40e5b8:	mov	x22, x0
  40e5bc:	bl	416c84 <end_of_token@@Base>
  40e5c0:	strb	wzr, [x0]
  40e5c4:	ldrb	w0, [x22]
  40e5c8:	cbz	w0, 40e600 <init_hash_files@@Base+0xeb0>
  40e5cc:	mov	x0, x22
  40e5d0:	bl	40dedc <init_hash_files@@Base+0x78c>
  40e5d4:	mov	x3, x0
  40e5d8:	cbz	x0, 40e624 <init_hash_files@@Base+0xed4>
  40e5dc:	mov	x0, #0x0                   	// #0
  40e5e0:	mov	w1, w0
  40e5e4:	add	x0, x0, #0x1
  40e5e8:	ldr	x2, [x23, x0, lsl #3]
  40e5ec:	cbnz	x2, 40e5e0 <init_hash_files@@Base+0xe90>
  40e5f0:	mov	x0, x19
  40e5f4:	add	x2, x23, #0x8
  40e5f8:	bl	40ddb0 <init_hash_files@@Base+0x660>
  40e5fc:	mov	x19, x0
  40e600:	mov	sp, x29
  40e604:	mov	x0, x19
  40e608:	ldp	x19, x20, [sp, #16]
  40e60c:	ldp	x21, x22, [sp, #32]
  40e610:	ldp	x23, x24, [sp, #48]
  40e614:	ldp	x25, x26, [sp, #64]
  40e618:	ldr	x27, [sp, #80]
  40e61c:	ldp	x29, x30, [sp], #112
  40e620:	ret
  40e624:	mov	x0, x22
  40e628:	bl	406700 <strlen@plt>
  40e62c:	mov	x1, x0
  40e630:	mov	x20, x0
  40e634:	mov	x0, x22
  40e638:	bl	41fcdc <lookup_variable@@Base>
  40e63c:	mov	x21, x0
  40e640:	cbnz	x0, 40e710 <init_hash_files@@Base+0xfc0>
  40e644:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  40e648:	ldr	w1, [x1, #2056]
  40e64c:	cbz	w1, 40e600 <init_hash_files@@Base+0xeb0>
  40e650:	adrp	x1, 440000 <output_context@@Base+0x1248>
  40e654:	mov	w2, #0x5                   	// #5
  40e658:	ldr	x21, [x1, #3560]
  40e65c:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  40e660:	add	x1, x1, #0xaca
  40e664:	bl	406d60 <dcgettext@plt>
  40e668:	mov	x4, x22
  40e66c:	mov	x2, x0
  40e670:	mov	w3, w20
  40e674:	mov	x1, x20
  40e678:	mov	x0, x21
  40e67c:	bl	417aa8 <error@@Base>
  40e680:	b	40e600 <init_hash_files@@Base+0xeb0>
  40e684:	mov	w2, w22
  40e688:	mov	x1, x26
  40e68c:	add	x0, x29, #0x60
  40e690:	bl	4067a0 <sprintf@plt>
  40e694:	add	x0, x29, #0x60
  40e698:	bl	406700 <strlen@plt>
  40e69c:	ldr	x1, [x27, #304]
  40e6a0:	mov	x6, #0x0                   	// #0
  40e6a4:	ldr	x2, [x23, x22, lsl #3]
  40e6a8:	mov	w4, #0x0                   	// #0
  40e6ac:	ldr	x5, [x1, #8]
  40e6b0:	add	x22, x22, #0x1
  40e6b4:	mov	x1, x0
  40e6b8:	mov	w3, #0x6                   	// #6
  40e6bc:	add	x0, x29, #0x60
  40e6c0:	bl	41f978 <define_variable_in_set@@Base>
  40e6c4:	b	40e76c <init_hash_files@@Base+0x101c>
  40e6c8:	mov	w2, w25
  40e6cc:	mov	x1, x23
  40e6d0:	add	x0, x29, #0x60
  40e6d4:	bl	4067a0 <sprintf@plt>
  40e6d8:	add	x0, x29, #0x60
  40e6dc:	add	w25, w25, #0x1
  40e6e0:	bl	406700 <strlen@plt>
  40e6e4:	ldr	x1, [x27, #304]
  40e6e8:	mov	x6, #0x0                   	// #0
  40e6ec:	mov	w4, #0x0                   	// #0
  40e6f0:	mov	w3, #0x6                   	// #6
  40e6f4:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40e6f8:	add	x2, x2, #0x819
  40e6fc:	ldr	x5, [x1, #8]
  40e700:	mov	x1, x0
  40e704:	add	x0, x29, #0x60
  40e708:	bl	41f978 <define_variable_in_set@@Base>
  40e70c:	b	40e78c <init_hash_files@@Base+0x103c>
  40e710:	ldr	x0, [x0, #8]
  40e714:	ldrb	w0, [x0]
  40e718:	cbz	w0, 40e600 <init_hash_files@@Base+0xeb0>
  40e71c:	add	x0, x20, #0x13
  40e720:	mov	w1, #0x2824                	// #10276
  40e724:	and	x0, x0, #0xfffffffffffffff0
  40e728:	mov	x2, x20
  40e72c:	sub	sp, sp, x0
  40e730:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x5720>
  40e734:	mov	x24, sp
  40e738:	add	x26, x26, #0x16b
  40e73c:	mov	x0, x24
  40e740:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  40e744:	strh	w1, [x0], #2
  40e748:	mov	x1, x22
  40e74c:	mov	x22, #0x0                   	// #0
  40e750:	bl	4066c0 <memcpy@plt>
  40e754:	add	x0, x24, x20
  40e758:	add	x20, x20, #0x3
  40e75c:	mov	w1, #0x29                  	// #41
  40e760:	strb	w1, [x0, #2]
  40e764:	strb	wzr, [x24, x20]
  40e768:	bl	41ff0c <push_new_variable_scope@@Base>
  40e76c:	ldr	x0, [x23, x22, lsl #3]
  40e770:	mov	w25, w22
  40e774:	cbnz	x0, 40e684 <init_hash_files@@Base+0xf34>
  40e778:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  40e77c:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x5720>
  40e780:	add	x22, x22, #0x320
  40e784:	add	x23, x23, #0x16b
  40e788:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  40e78c:	ldr	w26, [x22, #88]
  40e790:	cmp	w26, w25
  40e794:	b.gt	40e6c8 <init_hash_files@@Base+0xf78>
  40e798:	ldr	w0, [x21, #44]
  40e79c:	mov	x2, x20
  40e7a0:	mov	x1, x24
  40e7a4:	orr	w0, w0, #0x7fff00
  40e7a8:	str	w0, [x21, #44]
  40e7ac:	mov	x0, x19
  40e7b0:	str	w25, [x22, #88]
  40e7b4:	bl	40b534 <variable_expand_string@@Base>
  40e7b8:	str	w26, [x22, #88]
  40e7bc:	mov	x19, x0
  40e7c0:	ldr	w0, [x21, #44]
  40e7c4:	and	w0, w0, #0xff8000ff
  40e7c8:	str	w0, [x21, #44]
  40e7cc:	bl	41ff60 <pop_variable_scope@@Base>
  40e7d0:	mov	x0, x19
  40e7d4:	bl	406700 <strlen@plt>
  40e7d8:	add	x19, x19, x0
  40e7dc:	b	40e600 <init_hash_files@@Base+0xeb0>
  40e7e0:	stp	x29, x30, [sp, #-96]!
  40e7e4:	mov	x29, sp
  40e7e8:	stp	x19, x20, [sp, #16]
  40e7ec:	mov	x20, x1
  40e7f0:	mov	x19, x0
  40e7f4:	mov	x1, #0x0                   	// #0
  40e7f8:	stp	x21, x22, [sp, #32]
  40e7fc:	ldr	x0, [x20]
  40e800:	stp	x23, x24, [sp, #48]
  40e804:	stp	x25, x26, [sp, #64]
  40e808:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x4720>
  40e80c:	bl	40b1fc <expand_argument@@Base>
  40e810:	mov	x22, x0
  40e814:	mov	x1, #0x0                   	// #0
  40e818:	ldr	x0, [x20, #8]
  40e81c:	add	x25, x25, #0x39d
  40e820:	bl	40b1fc <expand_argument@@Base>
  40e824:	mov	x21, x0
  40e828:	str	x0, [sp, #80]
  40e82c:	mov	x0, x22
  40e830:	ldr	x26, [x20, #16]
  40e834:	bl	416ca8 <next_token@@Base>
  40e838:	mov	x20, x0
  40e83c:	bl	416c84 <end_of_token@@Base>
  40e840:	strb	wzr, [x0]
  40e844:	bl	41ff0c <push_new_variable_scope@@Base>
  40e848:	mov	x0, x20
  40e84c:	bl	406700 <strlen@plt>
  40e850:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40e854:	mov	x6, #0x0                   	// #0
  40e858:	mov	w4, #0x0                   	// #0
  40e85c:	mov	w3, #0x6                   	// #6
  40e860:	ldr	x1, [x1, #304]
  40e864:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40e868:	add	x2, x2, #0x819
  40e86c:	ldr	x5, [x1, #8]
  40e870:	mov	x1, x0
  40e874:	mov	x0, x20
  40e878:	mov	w20, #0x0                   	// #0
  40e87c:	bl	41f978 <define_variable_in_set@@Base>
  40e880:	mov	x24, x0
  40e884:	add	x1, sp, #0x58
  40e888:	add	x0, sp, #0x50
  40e88c:	bl	416ccc <find_next_token@@Base>
  40e890:	mov	x23, x0
  40e894:	cbnz	x0, 40e8d0 <init_hash_files@@Base+0x1180>
  40e898:	bl	41ff60 <pop_variable_scope@@Base>
  40e89c:	and	x20, x20, #0x1
  40e8a0:	mov	x0, x22
  40e8a4:	bl	406c20 <free@plt>
  40e8a8:	mov	x0, x21
  40e8ac:	sub	x19, x19, x20
  40e8b0:	bl	406c20 <free@plt>
  40e8b4:	mov	x0, x19
  40e8b8:	ldp	x19, x20, [sp, #16]
  40e8bc:	ldp	x21, x22, [sp, #32]
  40e8c0:	ldp	x23, x24, [sp, #48]
  40e8c4:	ldp	x25, x26, [sp, #64]
  40e8c8:	ldp	x29, x30, [sp], #96
  40e8cc:	ret
  40e8d0:	ldr	x0, [x24, #8]
  40e8d4:	bl	406c20 <free@plt>
  40e8d8:	ldr	x1, [sp, #88]
  40e8dc:	mov	x0, x23
  40e8e0:	bl	416c40 <xstrndup@@Base>
  40e8e4:	str	x0, [x24, #8]
  40e8e8:	mov	x1, #0x0                   	// #0
  40e8ec:	mov	x0, x26
  40e8f0:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  40e8f4:	mov	x20, x0
  40e8f8:	bl	406700 <strlen@plt>
  40e8fc:	mov	x2, x0
  40e900:	mov	x1, x20
  40e904:	mov	x0, x19
  40e908:	bl	40b138 <variable_buffer_output@@Base>
  40e90c:	mov	x1, x25
  40e910:	mov	x2, #0x1                   	// #1
  40e914:	bl	40b138 <variable_buffer_output@@Base>
  40e918:	mov	x19, x0
  40e91c:	mov	x0, x20
  40e920:	mov	w20, #0x1                   	// #1
  40e924:	bl	406c20 <free@plt>
  40e928:	b	40e884 <init_hash_files@@Base+0x1134>
  40e92c:	stp	x29, x30, [sp, #-32]!
  40e930:	mov	x29, sp
  40e934:	stp	x19, x20, [sp, #16]
  40e938:	mov	x19, x0
  40e93c:	ldr	x20, [x1]
  40e940:	mov	x0, x20
  40e944:	bl	406700 <strlen@plt>
  40e948:	mov	x1, x0
  40e94c:	mov	x0, x20
  40e950:	bl	41fcdc <lookup_variable@@Base>
  40e954:	cbnz	x0, 40e974 <init_hash_files@@Base+0x1224>
  40e958:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e95c:	add	x1, x1, #0x1f1
  40e960:	mov	x2, #0x9                   	// #9
  40e964:	mov	x0, x19
  40e968:	ldp	x19, x20, [sp, #16]
  40e96c:	ldp	x29, x30, [sp], #32
  40e970:	b	40b138 <variable_buffer_output@@Base>
  40e974:	ldrb	w0, [x0, #47]
  40e978:	ubfx	x0, x0, #2, #3
  40e97c:	cmp	w0, #0x6
  40e980:	b.hi	40e99c <init_hash_files@@Base+0x124c>  // b.pmore
  40e984:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e988:	add	x1, x1, #0x544
  40e98c:	ldrb	w0, [x1, w0, uxtw]
  40e990:	adr	x1, 40e99c <init_hash_files@@Base+0x124c>
  40e994:	add	x0, x1, w0, sxtb #2
  40e998:	br	x0
  40e99c:	bl	406b50 <abort@plt>
  40e9a0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e9a4:	mov	x2, #0x7                   	// #7
  40e9a8:	add	x1, x1, #0x1fb
  40e9ac:	b	40e964 <init_hash_files@@Base+0x1214>
  40e9b0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e9b4:	mov	x2, #0xb                   	// #11
  40e9b8:	add	x1, x1, #0x203
  40e9bc:	b	40e964 <init_hash_files@@Base+0x1214>
  40e9c0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  40e9c4:	mov	x2, #0x4                   	// #4
  40e9c8:	add	x1, x1, #0x8fc
  40e9cc:	b	40e964 <init_hash_files@@Base+0x1214>
  40e9d0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e9d4:	mov	x2, #0x14                  	// #20
  40e9d8:	add	x1, x1, #0x20f
  40e9dc:	b	40e964 <init_hash_files@@Base+0x1214>
  40e9e0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e9e4:	mov	x2, #0xc                   	// #12
  40e9e8:	add	x1, x1, #0x224
  40e9ec:	b	40e964 <init_hash_files@@Base+0x1214>
  40e9f0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40e9f4:	mov	x2, #0x8                   	// #8
  40e9f8:	add	x1, x1, #0x21b
  40e9fc:	b	40e964 <init_hash_files@@Base+0x1214>
  40ea00:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40ea04:	mov	x2, #0x9                   	// #9
  40ea08:	add	x1, x1, #0x231
  40ea0c:	b	40e964 <init_hash_files@@Base+0x1214>
  40ea10:	stp	x29, x30, [sp, #-112]!
  40ea14:	mov	w4, #0x19                  	// #25
  40ea18:	mov	x3, #0x0                   	// #0
  40ea1c:	mov	x29, sp
  40ea20:	stp	x19, x20, [sp, #16]
  40ea24:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  40ea28:	add	x19, x19, #0x320
  40ea2c:	stp	x23, x24, [sp, #48]
  40ea30:	mov	x24, x0
  40ea34:	mov	w2, #0x1                   	// #1
  40ea38:	ldr	x0, [x1]
  40ea3c:	mov	x1, #0x10                  	// #16
  40ea40:	stp	x21, x22, [sp, #32]
  40ea44:	stp	x25, x26, [sp, #64]
  40ea48:	stp	x27, x28, [sp, #80]
  40ea4c:	str	x0, [sp, #104]
  40ea50:	add	x0, sp, #0x68
  40ea54:	bl	419c0c <parse_file_seq@@Base>
  40ea58:	mov	x20, x0
  40ea5c:	ldr	x0, [x19, #96]
  40ea60:	cbnz	x0, 40ea74 <init_hash_files@@Base+0x1324>
  40ea64:	mov	x0, #0x64                  	// #100
  40ea68:	str	x0, [x19, #104]
  40ea6c:	bl	416a54 <xmalloc@@Base>
  40ea70:	str	x0, [x19, #96]
  40ea74:	mov	x21, #0x0                   	// #0
  40ea78:	mov	w26, #0x20                  	// #32
  40ea7c:	ldr	x22, [x19, #96]
  40ea80:	cbnz	x20, 40eac0 <init_hash_files@@Base+0x1370>
  40ea84:	cbnz	x21, 40eb2c <init_hash_files@@Base+0x13dc>
  40ea88:	strb	wzr, [x22]
  40ea8c:	mov	x0, x22
  40ea90:	bl	406700 <strlen@plt>
  40ea94:	mov	x1, x22
  40ea98:	mov	x2, x0
  40ea9c:	mov	x0, x24
  40eaa0:	bl	40b138 <variable_buffer_output@@Base>
  40eaa4:	ldp	x19, x20, [sp, #16]
  40eaa8:	ldp	x21, x22, [sp, #32]
  40eaac:	ldp	x23, x24, [sp, #48]
  40eab0:	ldp	x25, x26, [sp, #64]
  40eab4:	ldp	x27, x28, [sp, #80]
  40eab8:	ldp	x29, x30, [sp], #112
  40eabc:	ret
  40eac0:	ldp	x27, x0, [x20]
  40eac4:	bl	406700 <strlen@plt>
  40eac8:	add	x28, x0, x21
  40eacc:	mov	x23, x0
  40ead0:	add	x25, x28, #0x1
  40ead4:	ldr	x0, [x19, #104]
  40ead8:	cmp	x25, x0
  40eadc:	b.ls	40eaf8 <init_hash_files@@Base+0x13a8>  // b.plast
  40eae0:	add	x1, x23, #0x1
  40eae4:	add	x1, x0, x1, lsl #1
  40eae8:	mov	x0, x22
  40eaec:	str	x1, [x19, #104]
  40eaf0:	bl	416aa0 <xrealloc@@Base>
  40eaf4:	str	x0, [x19, #96]
  40eaf8:	ldr	x1, [x20, #8]
  40eafc:	mov	x2, x23
  40eb00:	ldr	x22, [x19, #96]
  40eb04:	add	x0, x22, x21
  40eb08:	bl	4066c0 <memcpy@plt>
  40eb0c:	strb	w26, [x22, x28]
  40eb10:	mov	x21, x25
  40eb14:	ldr	x0, [x20, #8]
  40eb18:	bl	406c20 <free@plt>
  40eb1c:	mov	x0, x20
  40eb20:	mov	x20, x27
  40eb24:	bl	406c20 <free@plt>
  40eb28:	b	40ea7c <init_hash_files@@Base+0x132c>
  40eb2c:	add	x21, x22, x21
  40eb30:	sturb	wzr, [x21, #-1]
  40eb34:	b	40ea8c <init_hash_files@@Base+0x133c>
  40eb38:	stp	x29, x30, [sp, #-112]!
  40eb3c:	mov	x29, sp
  40eb40:	stp	x19, x20, [sp, #16]
  40eb44:	mov	x19, x0
  40eb48:	mov	w20, #0x0                   	// #0
  40eb4c:	stp	x21, x22, [sp, #32]
  40eb50:	mov	x21, x1
  40eb54:	ldr	x0, [x1]
  40eb58:	stp	x23, x24, [sp, #48]
  40eb5c:	stp	x25, x26, [sp, #64]
  40eb60:	stp	x27, x28, [sp, #80]
  40eb64:	str	x0, [sp, #96]
  40eb68:	add	x0, sp, #0x60
  40eb6c:	mov	x1, #0x0                   	// #0
  40eb70:	bl	416ccc <find_next_token@@Base>
  40eb74:	cbnz	x0, 40ec78 <init_hash_files@@Base+0x1528>
  40eb78:	sbfiz	x1, x20, #3, #32
  40eb7c:	cmp	w20, #0x0
  40eb80:	mov	x0, #0x8                   	// #8
  40eb84:	csel	x0, x1, x0, ne  // ne = any
  40eb88:	bl	416a54 <xmalloc@@Base>
  40eb8c:	mov	x20, x0
  40eb90:	ldr	x0, [x21]
  40eb94:	mov	x21, #0x0                   	// #0
  40eb98:	str	x0, [sp, #96]
  40eb9c:	mov	w23, w21
  40eba0:	add	x1, sp, #0x68
  40eba4:	add	x0, sp, #0x60
  40eba8:	bl	416ccc <find_next_token@@Base>
  40ebac:	cbnz	x0, 40ec8c <init_hash_files@@Base+0x153c>
  40ebb0:	cbz	w21, 40ec50 <init_hash_files@@Base+0x1500>
  40ebb4:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x4720>
  40ebb8:	sub	w26, w23, #0x1
  40ebbc:	add	x24, x24, #0x39d
  40ebc0:	add	x27, x20, #0x8
  40ebc4:	sxtw	x1, w21
  40ebc8:	mov	x21, #0x0                   	// #0
  40ebcc:	mov	x0, x20
  40ebd0:	adrp	x3, 416000 <die@@Base+0x268>
  40ebd4:	mov	x2, #0x8                   	// #8
  40ebd8:	add	x3, x3, #0x89c
  40ebdc:	bl	406820 <qsort@plt>
  40ebe0:	ldr	x25, [x20, x21, lsl #3]
  40ebe4:	mov	x0, x25
  40ebe8:	bl	406700 <strlen@plt>
  40ebec:	str	x0, [sp, #104]
  40ebf0:	mov	x22, x0
  40ebf4:	cmp	w26, w21
  40ebf8:	b.eq	40ec20 <init_hash_files@@Base+0x14d0>  // b.none
  40ebfc:	ldr	x28, [x27, x21, lsl #3]
  40ec00:	mov	x0, x28
  40ec04:	bl	406700 <strlen@plt>
  40ec08:	cmp	x22, x0
  40ec0c:	b.ne	40ec20 <init_hash_files@@Base+0x14d0>  // b.any
  40ec10:	mov	x1, x28
  40ec14:	mov	x0, x25
  40ec18:	bl	406be0 <strcmp@plt>
  40ec1c:	cbz	w0, 40ec40 <init_hash_files@@Base+0x14f0>
  40ec20:	mov	x2, x22
  40ec24:	mov	x1, x25
  40ec28:	mov	x0, x19
  40ec2c:	bl	40b138 <variable_buffer_output@@Base>
  40ec30:	mov	x1, x24
  40ec34:	mov	x2, #0x1                   	// #1
  40ec38:	bl	40b138 <variable_buffer_output@@Base>
  40ec3c:	mov	x19, x0
  40ec40:	add	x21, x21, #0x1
  40ec44:	cmp	w23, w21
  40ec48:	b.gt	40ebe0 <init_hash_files@@Base+0x1490>
  40ec4c:	sub	x19, x19, #0x1
  40ec50:	mov	x0, x20
  40ec54:	bl	406c20 <free@plt>
  40ec58:	mov	x0, x19
  40ec5c:	ldp	x19, x20, [sp, #16]
  40ec60:	ldp	x21, x22, [sp, #32]
  40ec64:	ldp	x23, x24, [sp, #48]
  40ec68:	ldp	x25, x26, [sp, #64]
  40ec6c:	ldp	x27, x28, [sp, #80]
  40ec70:	ldp	x29, x30, [sp], #112
  40ec74:	ret
  40ec78:	ldr	x0, [sp, #96]
  40ec7c:	add	w20, w20, #0x1
  40ec80:	add	x0, x0, #0x1
  40ec84:	str	x0, [sp, #96]
  40ec88:	b	40eb68 <init_hash_files@@Base+0x1418>
  40ec8c:	ldr	x1, [sp, #96]
  40ec90:	add	x1, x1, #0x1
  40ec94:	str	x1, [sp, #96]
  40ec98:	ldr	x1, [sp, #104]
  40ec9c:	strb	wzr, [x0, x1]
  40eca0:	str	x0, [x20, x21, lsl #3]
  40eca4:	add	x21, x21, #0x1
  40eca8:	b	40eb9c <init_hash_files@@Base+0x144c>
  40ecac:	mov	x12, #0x20d0                	// #8400
  40ecb0:	sub	sp, sp, x12
  40ecb4:	stp	x29, x30, [sp]
  40ecb8:	mov	x29, sp
  40ecbc:	ldr	x1, [x1]
  40ecc0:	stp	x19, x20, [sp, #16]
  40ecc4:	mov	x19, x0
  40ecc8:	stp	x21, x22, [sp, #32]
  40eccc:	add	x22, sp, #0xc0
  40ecd0:	mov	w21, #0x0                   	// #0
  40ecd4:	stp	x1, xzr, [sp, #48]
  40ecd8:	add	x1, sp, #0x38
  40ecdc:	add	x0, sp, #0x30
  40ece0:	bl	416ccc <find_next_token@@Base>
  40ece4:	mov	x1, x0
  40ece8:	cbnz	x0, 40ed0c <init_hash_files@@Base+0x15bc>
  40ecec:	and	x0, x21, #0x1
  40ecf0:	mov	x12, #0x20d0                	// #8400
  40ecf4:	sub	x0, x19, x0
  40ecf8:	ldp	x29, x30, [sp]
  40ecfc:	ldp	x19, x20, [sp, #16]
  40ed00:	ldp	x21, x22, [sp, #32]
  40ed04:	add	sp, sp, x12
  40ed08:	ret
  40ed0c:	ldr	x20, [sp, #56]
  40ed10:	cmp	x20, #0xfff
  40ed14:	b.hi	40ecd8 <init_hash_files@@Base+0x1588>  // b.pmore
  40ed18:	mov	x2, x20
  40ed1c:	mov	x0, x22
  40ed20:	bl	406db0 <strncpy@plt>
  40ed24:	strb	wzr, [x22, x20]
  40ed28:	bl	406e00 <__errno_location@plt>
  40ed2c:	mov	x20, x0
  40ed30:	mov	x3, #0x10c8                	// #4296
  40ed34:	str	wzr, [x20]
  40ed38:	add	x1, sp, x3
  40ed3c:	mov	x0, x22
  40ed40:	bl	406d70 <realpath@plt>
  40ed44:	cbnz	x0, 40ed58 <init_hash_files@@Base+0x1608>
  40ed48:	ldr	w0, [x20]
  40ed4c:	cmp	w0, #0x4
  40ed50:	b.eq	40ed30 <init_hash_files@@Base+0x15e0>  // b.none
  40ed54:	b	40ecd8 <init_hash_files@@Base+0x1588>
  40ed58:	mov	x2, #0x10c8                	// #4296
  40ed5c:	add	x1, sp, #0x40
  40ed60:	add	x0, sp, x2
  40ed64:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  40ed68:	cmn	w0, #0x1
  40ed6c:	b.ne	40ed80 <init_hash_files@@Base+0x1630>  // b.any
  40ed70:	ldr	w0, [x20]
  40ed74:	cmp	w0, #0x4
  40ed78:	b.eq	40ed58 <init_hash_files@@Base+0x1608>  // b.none
  40ed7c:	b	40ecd8 <init_hash_files@@Base+0x1588>
  40ed80:	cbnz	w0, 40ecd8 <init_hash_files@@Base+0x1588>
  40ed84:	mov	x0, #0x10c8                	// #4296
  40ed88:	add	x0, sp, x0
  40ed8c:	bl	406700 <strlen@plt>
  40ed90:	mov	x2, x0
  40ed94:	mov	x1, #0x10c8                	// #4296
  40ed98:	mov	x0, x19
  40ed9c:	add	x1, sp, x1
  40eda0:	bl	40b138 <variable_buffer_output@@Base>
  40eda4:	mov	x2, #0x1                   	// #1
  40eda8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40edac:	mov	w21, #0x1                   	// #1
  40edb0:	add	x1, x1, #0x39d
  40edb4:	bl	40b138 <variable_buffer_output@@Base>
  40edb8:	mov	x19, x0
  40edbc:	b	40ecd8 <init_hash_files@@Base+0x1588>
  40edc0:	stp	x29, x30, [sp, #-16]!
  40edc4:	mov	x29, sp
  40edc8:	ldr	x0, [x0, #16]
  40edcc:	bl	410f48 <jhash_string@@Base>
  40edd0:	mov	w0, w0
  40edd4:	ldp	x29, x30, [sp], #16
  40edd8:	ret
  40eddc:	mov	x12, #0x2070                	// #8304
  40ede0:	sub	sp, sp, x12
  40ede4:	mov	x8, #0x1068                	// #4200
  40ede8:	stp	x29, x30, [sp]
  40edec:	mov	x29, sp
  40edf0:	ldr	x1, [x1]
  40edf4:	stp	x19, x20, [sp, #16]
  40edf8:	mov	x20, x0
  40edfc:	add	x0, sp, x8
  40ee00:	stp	x23, x24, [sp, #48]
  40ee04:	add	x23, x0, #0x1, lsl #12
  40ee08:	stp	x21, x22, [sp, #32]
  40ee0c:	mov	w22, #0x0                   	// #0
  40ee10:	str	x25, [sp, #64]
  40ee14:	stp	x1, xzr, [sp, #80]
  40ee18:	add	x1, sp, #0x58
  40ee1c:	add	x0, sp, #0x50
  40ee20:	bl	416ccc <find_next_token@@Base>
  40ee24:	mov	x1, x0
  40ee28:	cbnz	x0, 40ee54 <init_hash_files@@Base+0x1704>
  40ee2c:	and	x0, x22, #0x1
  40ee30:	mov	x12, #0x2070                	// #8304
  40ee34:	sub	x0, x20, x0
  40ee38:	ldp	x29, x30, [sp]
  40ee3c:	ldp	x19, x20, [sp, #16]
  40ee40:	ldp	x21, x22, [sp, #32]
  40ee44:	ldp	x23, x24, [sp, #48]
  40ee48:	ldr	x25, [sp, #64]
  40ee4c:	add	sp, sp, x12
  40ee50:	ret
  40ee54:	ldr	x21, [sp, #88]
  40ee58:	cmp	x21, #0xfff
  40ee5c:	b.hi	40ee18 <init_hash_files@@Base+0x16c8>  // b.pmore
  40ee60:	add	x19, sp, #0x60
  40ee64:	mov	x2, x21
  40ee68:	mov	x0, x19
  40ee6c:	bl	406db0 <strncpy@plt>
  40ee70:	strb	wzr, [x19, x21]
  40ee74:	ldrb	w0, [sp, #96]
  40ee78:	cbz	w0, 40ee18 <init_hash_files@@Base+0x16c8>
  40ee7c:	cmp	w0, #0x2f
  40ee80:	b.eq	40ef34 <init_hash_files@@Base+0x17e4>  // b.none
  40ee84:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  40ee88:	ldr	x1, [x0, #1984]
  40ee8c:	cbz	x1, 40ee18 <init_hash_files@@Base+0x16c8>
  40ee90:	mov	x5, #0x1068                	// #4200
  40ee94:	add	x0, sp, x5
  40ee98:	bl	406cc0 <strcpy@plt>
  40ee9c:	mov	x6, #0x1068                	// #4200
  40eea0:	add	x0, sp, x6
  40eea4:	bl	406700 <strlen@plt>
  40eea8:	mov	x7, #0x1068                	// #4200
  40eeac:	add	x1, sp, x7
  40eeb0:	add	x0, x1, x0
  40eeb4:	mov	x1, x19
  40eeb8:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  40eebc:	add	x24, x24, #0x454
  40eec0:	mov	w25, #0x2f                  	// #47
  40eec4:	ldrb	w2, [x1]
  40eec8:	cbnz	w2, 40ef50 <init_hash_files@@Base+0x1800>
  40eecc:	mov	x2, #0x1068                	// #4200
  40eed0:	add	x1, sp, x2
  40eed4:	add	x1, x1, #0x1
  40eed8:	cmp	x0, x1
  40eedc:	b.ls	40eef4 <init_hash_files@@Base+0x17a4>  // b.plast
  40eee0:	ldurb	w2, [x0, #-1]
  40eee4:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  40eee8:	add	x1, x1, #0x454
  40eeec:	ldrsh	x1, [x1, x2, lsl #1]
  40eef0:	sub	x0, x0, x1, lsr #63
  40eef4:	strb	wzr, [x0]
  40eef8:	mov	x0, #0x1068                	// #4200
  40eefc:	add	x0, sp, x0
  40ef00:	mov	w22, #0x1                   	// #1
  40ef04:	bl	406700 <strlen@plt>
  40ef08:	mov	x2, x0
  40ef0c:	mov	x1, #0x1068                	// #4200
  40ef10:	mov	x0, x20
  40ef14:	add	x1, sp, x1
  40ef18:	bl	40b138 <variable_buffer_output@@Base>
  40ef1c:	mov	x2, #0x1                   	// #1
  40ef20:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40ef24:	add	x1, x1, #0x39d
  40ef28:	bl	40b138 <variable_buffer_output@@Base>
  40ef2c:	mov	x20, x0
  40ef30:	b	40ee18 <init_hash_files@@Base+0x16c8>
  40ef34:	mov	x4, #0x1068                	// #4200
  40ef38:	strh	w0, [sp, #4200]
  40ef3c:	add	x0, sp, x4
  40ef40:	add	x1, x19, #0x1
  40ef44:	add	x0, x0, #0x1
  40ef48:	b	40eeb8 <init_hash_files@@Base+0x1768>
  40ef4c:	add	x1, x1, #0x1
  40ef50:	ldrb	w3, [x1]
  40ef54:	ldrb	w2, [x1]
  40ef58:	ldrsh	w3, [x24, x3, lsl #1]
  40ef5c:	tbnz	w3, #31, 40ef4c <init_hash_files@@Base+0x17fc>
  40ef60:	mov	x19, x1
  40ef64:	ldrb	w3, [x19]
  40ef68:	ldrh	w4, [x24, x3, lsl #1]
  40ef6c:	mov	w3, #0x8001                	// #32769
  40ef70:	tst	w4, w3
  40ef74:	b.eq	40ef98 <init_hash_files@@Base+0x1848>  // b.none
  40ef78:	subs	x21, x19, x1
  40ef7c:	b.eq	40eecc <init_hash_files@@Base+0x177c>  // b.none
  40ef80:	cmp	x21, #0x1
  40ef84:	b.ne	40efa0 <init_hash_files@@Base+0x1850>  // b.any
  40ef88:	cmp	w2, #0x2e
  40ef8c:	b.ne	40efe4 <init_hash_files@@Base+0x1894>  // b.any
  40ef90:	mov	x1, x19
  40ef94:	b	40eec4 <init_hash_files@@Base+0x1774>
  40ef98:	add	x19, x19, #0x1
  40ef9c:	b	40ef64 <init_hash_files@@Base+0x1814>
  40efa0:	cmp	x21, #0x2
  40efa4:	b.ne	40efe4 <init_hash_files@@Base+0x1894>  // b.any
  40efa8:	cmp	w2, #0x2e
  40efac:	b.ne	40efe4 <init_hash_files@@Base+0x1894>  // b.any
  40efb0:	ldrb	w2, [x1, #1]
  40efb4:	cmp	w2, #0x2e
  40efb8:	b.ne	40efe4 <init_hash_files@@Base+0x1894>  // b.any
  40efbc:	mov	x3, #0x1068                	// #4200
  40efc0:	add	x1, sp, x3
  40efc4:	add	x1, x1, #0x1
  40efc8:	cmp	x0, x1
  40efcc:	b.ls	40ef90 <init_hash_files@@Base+0x1840>  // b.plast
  40efd0:	ldurb	w1, [x0, #-2]
  40efd4:	sub	x0, x0, #0x1
  40efd8:	ldrsh	w1, [x24, x1, lsl #1]
  40efdc:	tbz	w1, #31, 40efd0 <init_hash_files@@Base+0x1880>
  40efe0:	b	40ef90 <init_hash_files@@Base+0x1840>
  40efe4:	ldurb	w2, [x0, #-1]
  40efe8:	ldrsh	w2, [x24, x2, lsl #1]
  40efec:	tbnz	w2, #31, 40eff4 <init_hash_files@@Base+0x18a4>
  40eff0:	strb	w25, [x0], #1
  40eff4:	add	x2, x0, x21
  40eff8:	cmp	x23, x2
  40effc:	b.ls	40ee18 <init_hash_files@@Base+0x16c8>  // b.plast
  40f000:	mov	x2, x21
  40f004:	bl	4066c0 <memcpy@plt>
  40f008:	mov	x1, x0
  40f00c:	add	x0, x0, x21
  40f010:	strb	wzr, [x1, x21]
  40f014:	b	40ef90 <init_hash_files@@Base+0x1840>
  40f018:	ldrb	w2, [x0, #16]
  40f01c:	ldrb	w3, [x1, #16]
  40f020:	subs	w3, w2, w3
  40f024:	b.ne	40f040 <init_hash_files@@Base+0x18f0>  // b.any
  40f028:	ldr	x0, [x0, #8]
  40f02c:	ldr	x1, [x1, #8]
  40f030:	cmp	x0, x1
  40f034:	b.eq	40f040 <init_hash_files@@Base+0x18f0>  // b.none
  40f038:	and	x2, x2, #0xff
  40f03c:	b	406ba0 <memcmp@plt>
  40f040:	mov	w0, w3
  40f044:	ret
  40f048:	stp	x29, x30, [sp, #-16]!
  40f04c:	mov	x29, sp
  40f050:	ldrb	w1, [x0, #16]
  40f054:	ldr	x0, [x0, #8]
  40f058:	bl	410df8 <jhash@@Base>
  40f05c:	mov	w0, w0
  40f060:	ldp	x29, x30, [sp], #16
  40f064:	ret
  40f068:	ldr	x2, [x0, #24]
  40f06c:	ldr	x3, [x1, #24]
  40f070:	subs	w2, w2, w3
  40f074:	b.ne	40f08c <init_hash_files@@Base+0x193c>  // b.any
  40f078:	ldr	x0, [x0, #16]
  40f07c:	ldr	x1, [x1, #16]
  40f080:	cmp	x0, x1
  40f084:	b.eq	40f08c <init_hash_files@@Base+0x193c>  // b.none
  40f088:	b	406be0 <strcmp@plt>
  40f08c:	mov	w0, w2
  40f090:	ret
  40f094:	stp	x29, x30, [sp, #-32]!
  40f098:	mov	x29, sp
  40f09c:	stp	x19, x20, [sp, #16]
  40f0a0:	mov	x19, x0
  40f0a4:	ldr	x20, [x1]
  40f0a8:	mov	x0, x20
  40f0ac:	bl	406700 <strlen@plt>
  40f0b0:	mov	x1, x0
  40f0b4:	mov	x0, x20
  40f0b8:	bl	41fcdc <lookup_variable@@Base>
  40f0bc:	cbnz	x0, 40f0dc <init_hash_files@@Base+0x198c>
  40f0c0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40f0c4:	add	x1, x1, #0x1f1
  40f0c8:	mov	x2, #0x9                   	// #9
  40f0cc:	mov	x0, x19
  40f0d0:	ldp	x19, x20, [sp, #16]
  40f0d4:	ldp	x29, x30, [sp], #32
  40f0d8:	b	40b138 <variable_buffer_output@@Base>
  40f0dc:	ldrb	w0, [x0, #44]
  40f0e0:	tbz	w0, #0, 40f0f4 <init_hash_files@@Base+0x19a4>
  40f0e4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40f0e8:	mov	x2, #0x9                   	// #9
  40f0ec:	add	x1, x1, #0x23b
  40f0f0:	b	40f0cc <init_hash_files@@Base+0x197c>
  40f0f4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40f0f8:	mov	x2, #0x6                   	// #6
  40f0fc:	add	x1, x1, #0x245
  40f100:	b	40f0cc <init_hash_files@@Base+0x197c>
  40f104:	mov	x0, #0x0                   	// #0
  40f108:	ret

000000000040f10c <subst_expand@@Base>:
  40f10c:	stp	x29, x30, [sp, #-112]!
  40f110:	cmp	x4, #0x0
  40f114:	mov	x29, sp
  40f118:	stp	x19, x20, [sp, #16]
  40f11c:	mov	x19, x0
  40f120:	cset	w0, eq  // eq = none
  40f124:	stp	x21, x22, [sp, #32]
  40f128:	cmp	w6, #0x0
  40f12c:	mov	x22, x1
  40f130:	stp	x23, x24, [sp, #48]
  40f134:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  40f138:	mov	x23, x5
  40f13c:	stp	x25, x26, [sp, #64]
  40f140:	mov	x26, x3
  40f144:	stp	x27, x28, [sp, #80]
  40f148:	str	w0, [sp, #108]
  40f14c:	b.eq	40f194 <subst_expand@@Base+0x88>  // b.none
  40f150:	mov	x0, x1
  40f154:	bl	406700 <strlen@plt>
  40f158:	mov	x1, x22
  40f15c:	mov	x2, x0
  40f160:	mov	x0, x19
  40f164:	bl	40b138 <variable_buffer_output@@Base>
  40f168:	mov	x19, x0
  40f16c:	cbz	x23, 40f26c <subst_expand@@Base+0x160>
  40f170:	mov	x2, x23
  40f174:	mov	x1, x26
  40f178:	ldp	x19, x20, [sp, #16]
  40f17c:	ldp	x21, x22, [sp, #32]
  40f180:	ldp	x23, x24, [sp, #48]
  40f184:	ldp	x25, x26, [sp, #64]
  40f188:	ldp	x27, x28, [sp, #80]
  40f18c:	ldp	x29, x30, [sp], #112
  40f190:	b	40b138 <variable_buffer_output@@Base>
  40f194:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  40f198:	mov	x25, x2
  40f19c:	mov	x21, x4
  40f1a0:	mov	w24, w6
  40f1a4:	mov	x28, x1
  40f1a8:	add	x27, x27, #0x454
  40f1ac:	ldr	w0, [sp, #108]
  40f1b0:	cmp	w24, #0x0
  40f1b4:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  40f1b8:	b.eq	40f1ec <subst_expand@@Base+0xe0>  // b.none
  40f1bc:	mov	x0, x28
  40f1c0:	bl	416ca8 <next_token@@Base>
  40f1c4:	bl	416c84 <end_of_token@@Base>
  40f1c8:	mov	x20, x0
  40f1cc:	cmp	x28, x0
  40f1d0:	b.cs	40f224 <subst_expand@@Base+0x118>  // b.hs, b.nlast
  40f1d4:	mov	x0, x19
  40f1d8:	sub	x2, x20, x28
  40f1dc:	mov	x1, x28
  40f1e0:	bl	40b138 <variable_buffer_output@@Base>
  40f1e4:	mov	x19, x0
  40f1e8:	b	40f220 <subst_expand@@Base+0x114>
  40f1ec:	mov	x1, x25
  40f1f0:	mov	x0, x28
  40f1f4:	bl	406d50 <strstr@plt>
  40f1f8:	mov	x20, x0
  40f1fc:	cbnz	x0, 40f218 <subst_expand@@Base+0x10c>
  40f200:	mov	x0, x28
  40f204:	bl	406700 <strlen@plt>
  40f208:	mov	x1, x28
  40f20c:	mov	x2, x0
  40f210:	mov	x0, x19
  40f214:	b	40f178 <subst_expand@@Base+0x6c>
  40f218:	cmp	x28, x0
  40f21c:	b.cc	40f1d4 <subst_expand@@Base+0xc8>  // b.lo, b.ul, b.last
  40f220:	cbz	w24, 40f28c <subst_expand@@Base+0x180>
  40f224:	cmp	x20, x22
  40f228:	b.ls	40f23c <subst_expand@@Base+0x130>  // b.plast
  40f22c:	ldurb	w0, [x20, #-1]
  40f230:	ldrh	w0, [x27, x0, lsl #1]
  40f234:	tst	w0, #0x6
  40f238:	b.eq	40f24c <subst_expand@@Base+0x140>  // b.none
  40f23c:	ldrb	w0, [x20, x21]
  40f240:	ldrh	w0, [x27, x0, lsl #1]
  40f244:	tst	x0, #0x7
  40f248:	b.ne	40f28c <subst_expand@@Base+0x180>  // b.any
  40f24c:	mov	x2, x21
  40f250:	mov	x1, x25
  40f254:	mov	x0, x19
  40f258:	bl	40b138 <variable_buffer_output@@Base>
  40f25c:	mov	x19, x0
  40f260:	ldrb	w0, [x20, x21]
  40f264:	add	x28, x20, x21
  40f268:	cbnz	w0, 40f1ac <subst_expand@@Base+0xa0>
  40f26c:	mov	x0, x19
  40f270:	ldp	x19, x20, [sp, #16]
  40f274:	ldp	x21, x22, [sp, #32]
  40f278:	ldp	x23, x24, [sp, #48]
  40f27c:	ldp	x25, x26, [sp, #64]
  40f280:	ldp	x27, x28, [sp, #80]
  40f284:	ldp	x29, x30, [sp], #112
  40f288:	ret
  40f28c:	cbz	x23, 40f260 <subst_expand@@Base+0x154>
  40f290:	mov	x2, x23
  40f294:	mov	x1, x26
  40f298:	b	40f254 <subst_expand@@Base+0x148>
  40f29c:	stp	x29, x30, [sp, #-64]!
  40f2a0:	mov	x29, sp
  40f2a4:	stp	x19, x20, [sp, #16]
  40f2a8:	mov	x19, x1
  40f2ac:	mov	x20, x0
  40f2b0:	stp	x21, x22, [sp, #32]
  40f2b4:	ldr	x22, [x1]
  40f2b8:	str	x23, [sp, #48]
  40f2bc:	mov	x0, x22
  40f2c0:	bl	406700 <strlen@plt>
  40f2c4:	ldr	x23, [x19, #8]
  40f2c8:	mov	x21, x0
  40f2cc:	mov	x0, x23
  40f2d0:	bl	406700 <strlen@plt>
  40f2d4:	mov	x4, x21
  40f2d8:	mov	x5, x0
  40f2dc:	mov	x3, x23
  40f2e0:	mov	x2, x22
  40f2e4:	mov	x0, x20
  40f2e8:	mov	w6, #0x0                   	// #0
  40f2ec:	ldr	x1, [x19, #16]
  40f2f0:	ldp	x19, x20, [sp, #16]
  40f2f4:	ldp	x21, x22, [sp, #32]
  40f2f8:	ldr	x23, [sp, #48]
  40f2fc:	ldp	x29, x30, [sp], #64
  40f300:	b	40f10c <subst_expand@@Base>

000000000040f304 <patsubst_expand_pat@@Base>:
  40f304:	stp	x29, x30, [sp, #-176]!
  40f308:	mov	x29, sp
  40f30c:	stp	x19, x20, [sp, #16]
  40f310:	mov	x19, x4
  40f314:	mov	x20, x5
  40f318:	stp	x21, x22, [sp, #32]
  40f31c:	mov	x22, x2
  40f320:	stp	x23, x24, [sp, #48]
  40f324:	mov	x23, x3
  40f328:	stp	x25, x26, [sp, #64]
  40f32c:	stp	x27, x28, [sp, #80]
  40f330:	mov	x28, x0
  40f334:	str	x1, [sp, #152]
  40f338:	cbz	x5, 40f3ac <patsubst_expand_pat@@Base+0xa8>
  40f33c:	sub	x21, x5, x3
  40f340:	mov	x0, x5
  40f344:	sub	x21, x21, #0x1
  40f348:	bl	406700 <strlen@plt>
  40f34c:	mov	x25, x0
  40f350:	cbnz	x19, 40f3c0 <patsubst_expand_pat@@Base+0xbc>
  40f354:	mov	x0, x22
  40f358:	bl	406700 <strlen@plt>
  40f35c:	mov	x19, x0
  40f360:	mov	x0, x23
  40f364:	bl	406700 <strlen@plt>
  40f368:	mov	x5, x0
  40f36c:	ldr	x1, [sp, #152]
  40f370:	mov	x0, x28
  40f374:	mov	x4, x19
  40f378:	mov	x3, x23
  40f37c:	mov	x2, x22
  40f380:	mov	w6, #0x1                   	// #1
  40f384:	bl	40f10c <subst_expand@@Base>
  40f388:	mov	x28, x0
  40f38c:	mov	x0, x28
  40f390:	ldp	x19, x20, [sp, #16]
  40f394:	ldp	x21, x22, [sp, #32]
  40f398:	ldp	x23, x24, [sp, #48]
  40f39c:	ldp	x25, x26, [sp, #64]
  40f3a0:	ldp	x27, x28, [sp, #80]
  40f3a4:	ldp	x29, x30, [sp], #176
  40f3a8:	ret
  40f3ac:	mov	x0, x3
  40f3b0:	mov	x25, #0x0                   	// #0
  40f3b4:	bl	406700 <strlen@plt>
  40f3b8:	mov	x21, x0
  40f3bc:	b	40f350 <patsubst_expand_pat@@Base+0x4c>
  40f3c0:	sub	x26, x19, x22
  40f3c4:	sub	x0, x26, #0x1
  40f3c8:	str	x0, [sp, #112]
  40f3cc:	mov	x0, x19
  40f3d0:	bl	406700 <strlen@plt>
  40f3d4:	mov	x24, x0
  40f3d8:	sub	x0, x26, #0x1
  40f3dc:	add	x0, x0, x24
  40f3e0:	str	x0, [sp, #120]
  40f3e4:	sub	x0, x26, #0x2
  40f3e8:	str	wzr, [sp, #104]
  40f3ec:	str	x0, [sp, #128]
  40f3f0:	sub	x0, x24, #0x1
  40f3f4:	str	x0, [sp, #136]
  40f3f8:	add	x1, sp, #0xa8
  40f3fc:	add	x0, sp, #0x98
  40f400:	bl	416ccc <find_next_token@@Base>
  40f404:	mov	x26, x0
  40f408:	cbnz	x0, 40f41c <patsubst_expand_pat@@Base+0x118>
  40f40c:	ldr	x0, [sp, #104]
  40f410:	and	x0, x0, #0x1
  40f414:	sub	x28, x28, x0
  40f418:	b	40f38c <patsubst_expand_pat@@Base+0x88>
  40f41c:	ldr	x0, [sp, #120]
  40f420:	ldr	x4, [sp, #168]
  40f424:	cmp	x0, x4
  40f428:	b.hi	40f534 <patsubst_expand_pat@@Base+0x230>  // b.pmore
  40f42c:	ldr	x0, [sp, #112]
  40f430:	cbz	x0, 40f52c <patsubst_expand_pat@@Base+0x228>
  40f434:	ldrb	w1, [x26]
  40f438:	ldrb	w0, [x22]
  40f43c:	cmp	w1, w0
  40f440:	b.ne	40f534 <patsubst_expand_pat@@Base+0x230>  // b.any
  40f444:	ldr	x0, [sp, #128]
  40f448:	ldrb	w1, [x26, x0]
  40f44c:	ldurb	w0, [x19, #-2]
  40f450:	cmp	w1, w0
  40f454:	b.ne	40f534 <patsubst_expand_pat@@Base+0x230>  // b.any
  40f458:	ldr	x2, [sp, #128]
  40f45c:	add	x1, x22, #0x1
  40f460:	add	x0, x26, #0x1
  40f464:	str	x4, [sp, #144]
  40f468:	bl	4069b0 <strncmp@plt>
  40f46c:	cmp	w0, #0x0
  40f470:	ldr	x4, [sp, #144]
  40f474:	cset	w27, ne  // ne = any
  40f478:	eor	w0, w27, #0x1
  40f47c:	cmp	x24, #0x0
  40f480:	csel	w0, w0, wzr, ne  // ne = any
  40f484:	cbz	w0, 40f4d0 <patsubst_expand_pat@@Base+0x1cc>
  40f488:	add	x0, x26, x4
  40f48c:	ldurb	w1, [x0, #-1]
  40f490:	ldr	x0, [sp, #136]
  40f494:	ldrb	w0, [x19, x0]
  40f498:	cmp	w1, w0
  40f49c:	b.ne	40f4d4 <patsubst_expand_pat@@Base+0x1d0>  // b.any
  40f4a0:	sub	x1, x4, x24
  40f4a4:	add	x0, x26, x1
  40f4a8:	ldrb	w2, [x26, x1]
  40f4ac:	ldrb	w1, [x19]
  40f4b0:	cmp	w2, w1
  40f4b4:	b.ne	40f4d4 <patsubst_expand_pat@@Base+0x1d0>  // b.any
  40f4b8:	ldr	x2, [sp, #136]
  40f4bc:	mov	x1, x19
  40f4c0:	str	x4, [sp, #144]
  40f4c4:	bl	4069b0 <strncmp@plt>
  40f4c8:	ldr	x4, [sp, #144]
  40f4cc:	cbnz	w0, 40f4d4 <patsubst_expand_pat@@Base+0x1d0>
  40f4d0:	cbz	w27, 40f53c <patsubst_expand_pat@@Base+0x238>
  40f4d4:	mov	x0, x28
  40f4d8:	mov	x2, x4
  40f4dc:	mov	x1, x26
  40f4e0:	bl	40b138 <variable_buffer_output@@Base>
  40f4e4:	mov	x28, x0
  40f4e8:	mov	w27, #0x1                   	// #1
  40f4ec:	cmp	x21, #0x0
  40f4f0:	csinc	w0, w27, wzr, eq  // eq = none
  40f4f4:	cbnz	w0, 40f508 <patsubst_expand_pat@@Base+0x204>
  40f4f8:	cbz	x20, 40f3f8 <patsubst_expand_pat@@Base+0xf4>
  40f4fc:	ldr	x0, [sp, #168]
  40f500:	cmn	x25, x0
  40f504:	b.eq	40f3f8 <patsubst_expand_pat@@Base+0xf4>  // b.none
  40f508:	mov	x0, x28
  40f50c:	mov	x2, #0x1                   	// #1
  40f510:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  40f514:	add	x1, x1, #0x39d
  40f518:	bl	40b138 <variable_buffer_output@@Base>
  40f51c:	mov	x28, x0
  40f520:	mov	w0, #0x1                   	// #1
  40f524:	str	w0, [sp, #104]
  40f528:	b	40f3f8 <patsubst_expand_pat@@Base+0xf4>
  40f52c:	mov	w27, #0x0                   	// #0
  40f530:	b	40f478 <patsubst_expand_pat@@Base+0x174>
  40f534:	mov	w27, #0x1                   	// #1
  40f538:	b	40f478 <patsubst_expand_pat@@Base+0x174>
  40f53c:	mov	x0, x28
  40f540:	mov	x2, x21
  40f544:	mov	x1, x23
  40f548:	bl	40b138 <variable_buffer_output@@Base>
  40f54c:	mov	x28, x0
  40f550:	cbz	x20, 40f4ec <patsubst_expand_pat@@Base+0x1e8>
  40f554:	ldr	x1, [sp, #120]
  40f558:	ldr	x2, [sp, #168]
  40f55c:	sub	x2, x2, x1
  40f560:	ldr	x1, [sp, #112]
  40f564:	add	x1, x26, x1
  40f568:	bl	40b138 <variable_buffer_output@@Base>
  40f56c:	mov	x2, x25
  40f570:	mov	x1, x20
  40f574:	bl	40b138 <variable_buffer_output@@Base>
  40f578:	mov	x28, x0
  40f57c:	b	40f4ec <patsubst_expand_pat@@Base+0x1e8>

000000000040f580 <patsubst_expand@@Base>:
  40f580:	stp	x29, x30, [sp, #-64]!
  40f584:	mov	x29, sp
  40f588:	stp	x19, x20, [sp, #16]
  40f58c:	mov	x20, x2
  40f590:	stp	x21, x22, [sp, #32]
  40f594:	mov	x21, x3
  40f598:	mov	x22, x0
  40f59c:	mov	x0, x2
  40f5a0:	str	x23, [sp, #48]
  40f5a4:	mov	x23, x1
  40f5a8:	bl	418e90 <find_percent@@Base>
  40f5ac:	mov	x19, x0
  40f5b0:	mov	x0, x21
  40f5b4:	bl	418e90 <find_percent@@Base>
  40f5b8:	mov	x5, x0
  40f5bc:	cbz	x0, 40f5c4 <patsubst_expand@@Base+0x44>
  40f5c0:	add	x5, x0, #0x1
  40f5c4:	cbz	x19, 40f5cc <patsubst_expand@@Base+0x4c>
  40f5c8:	add	x19, x19, #0x1
  40f5cc:	mov	x4, x19
  40f5d0:	mov	x3, x21
  40f5d4:	mov	x2, x20
  40f5d8:	mov	x1, x23
  40f5dc:	mov	x0, x22
  40f5e0:	ldp	x19, x20, [sp, #16]
  40f5e4:	ldp	x21, x22, [sp, #32]
  40f5e8:	ldr	x23, [sp, #48]
  40f5ec:	ldp	x29, x30, [sp], #64
  40f5f0:	b	40f304 <patsubst_expand_pat@@Base>
  40f5f4:	ldp	x2, x3, [x1]
  40f5f8:	ldr	x1, [x1, #16]
  40f5fc:	b	40f580 <patsubst_expand@@Base>

000000000040f600 <pattern_matches@@Base>:
  40f600:	stp	x29, x30, [sp, #-64]!
  40f604:	mov	x29, sp
  40f608:	stp	x19, x20, [sp, #16]
  40f60c:	mov	x20, x2
  40f610:	stp	x21, x22, [sp, #32]
  40f614:	mov	x22, x0
  40f618:	stp	x23, x24, [sp, #48]
  40f61c:	cbnz	x1, 40f6f8 <pattern_matches@@Base+0xf8>
  40f620:	bl	406700 <strlen@plt>
  40f624:	add	x1, x0, #0x10
  40f628:	and	x1, x1, #0xfffffffffffffff0
  40f62c:	add	x2, x0, #0x1
  40f630:	sub	sp, sp, x1
  40f634:	mov	x1, x22
  40f638:	mov	x21, sp
  40f63c:	mov	x0, x21
  40f640:	bl	4066c0 <memcpy@plt>
  40f644:	mov	x0, x21
  40f648:	bl	418e90 <find_percent@@Base>
  40f64c:	mov	x19, x0
  40f650:	cbnz	x0, 40f69c <pattern_matches@@Base+0x9c>
  40f654:	cmp	x21, x20
  40f658:	b.eq	40f700 <pattern_matches@@Base+0x100>  // b.none
  40f65c:	ldrb	w1, [x21]
  40f660:	ldrb	w0, [x20]
  40f664:	cmp	w0, w1
  40f668:	b.ne	40f680 <pattern_matches@@Base+0x80>  // b.any
  40f66c:	cbz	w0, 40f700 <pattern_matches@@Base+0x100>
  40f670:	add	x1, x20, #0x1
  40f674:	add	x0, x21, #0x1
  40f678:	bl	406be0 <strcmp@plt>
  40f67c:	cbz	w0, 40f700 <pattern_matches@@Base+0x100>
  40f680:	mov	w0, #0x0                   	// #0
  40f684:	mov	sp, x29
  40f688:	ldp	x19, x20, [sp, #16]
  40f68c:	ldp	x21, x22, [sp, #32]
  40f690:	ldp	x23, x24, [sp, #48]
  40f694:	ldp	x29, x30, [sp], #64
  40f698:	ret
  40f69c:	mov	x22, x21
  40f6a0:	add	x24, x19, #0x1
  40f6a4:	mov	x0, x24
  40f6a8:	bl	406700 <strlen@plt>
  40f6ac:	mov	x23, x0
  40f6b0:	mov	x0, x20
  40f6b4:	bl	406700 <strlen@plt>
  40f6b8:	mov	x21, x0
  40f6bc:	sub	x2, x19, x22
  40f6c0:	add	x0, x2, x23
  40f6c4:	cmp	x0, x21
  40f6c8:	b.hi	40f680 <pattern_matches@@Base+0x80>  // b.pmore
  40f6cc:	mov	x1, x20
  40f6d0:	mov	x0, x22
  40f6d4:	bl	4069b0 <strncmp@plt>
  40f6d8:	cbnz	w0, 40f680 <pattern_matches@@Base+0x80>
  40f6dc:	sub	x1, x21, x23
  40f6e0:	mov	x0, x24
  40f6e4:	add	x1, x20, x1
  40f6e8:	bl	406be0 <strcmp@plt>
  40f6ec:	cmp	w0, #0x0
  40f6f0:	cset	w0, eq  // eq = none
  40f6f4:	b	40f684 <pattern_matches@@Base+0x84>
  40f6f8:	mov	x19, x1
  40f6fc:	b	40f6a0 <pattern_matches@@Base+0xa0>
  40f700:	mov	w0, #0x1                   	// #1
  40f704:	b	40f684 <pattern_matches@@Base+0x84>
  40f708:	stp	x29, x30, [sp, #-240]!
  40f70c:	mov	x29, sp
  40f710:	stp	x19, x20, [sp, #16]
  40f714:	mov	w20, #0x0                   	// #0
  40f718:	stp	x21, x22, [sp, #32]
  40f71c:	mov	x21, x0
  40f720:	stp	x23, x24, [sp, #48]
  40f724:	add	x23, x29, #0x50
  40f728:	ldrb	w22, [x2, #6]
  40f72c:	ldr	x0, [x1]
  40f730:	str	x0, [x29, #88]
  40f734:	ldr	x0, [x1, #8]
  40f738:	str	x0, [x29, #96]
  40f73c:	add	x1, x29, #0x68
  40f740:	add	x0, x29, #0x58
  40f744:	bl	416ccc <find_next_token@@Base>
  40f748:	cbnz	x0, 40f804 <pattern_matches@@Base+0x204>
  40f74c:	str	xzr, [x23]
  40f750:	add	x23, x29, #0x48
  40f754:	mov	w19, #0x0                   	// #0
  40f758:	add	x1, x29, #0x68
  40f75c:	add	x0, x29, #0x60
  40f760:	bl	416ccc <find_next_token@@Base>
  40f764:	cbnz	x0, 40f854 <pattern_matches@@Base+0x254>
  40f768:	str	xzr, [x23]
  40f76c:	cmp	w20, #0x1
  40f770:	b.le	40f9b8 <pattern_matches@@Base+0x3b8>
  40f774:	mul	w20, w20, w19
  40f778:	cmp	w20, #0x9
  40f77c:	b.le	40f9b8 <pattern_matches@@Base+0x3b8>
  40f780:	sxtw	x1, w19
  40f784:	add	x0, x29, #0x98
  40f788:	adrp	x4, 40f000 <init_hash_files@@Base+0x18b0>
  40f78c:	adrp	x3, 40f000 <init_hash_files@@Base+0x18b0>
  40f790:	add	x4, x4, #0x68
  40f794:	add	x3, x3, #0x104
  40f798:	adrp	x2, 40e000 <init_hash_files@@Base+0x8b0>
  40f79c:	add	x2, x2, #0xdc0
  40f7a0:	bl	4106f8 <hash_init@@Base>
  40f7a4:	ldr	x20, [x29, #72]
  40f7a8:	cbnz	x20, 40f898 <pattern_matches@@Base+0x298>
  40f7ac:	cbz	w19, 40f7dc <pattern_matches@@Base+0x1dc>
  40f7b0:	mov	w23, #0x1                   	// #1
  40f7b4:	ldr	x20, [x29, #80]
  40f7b8:	ldr	x19, [x29, #72]
  40f7bc:	cbnz	x20, 40f8b4 <pattern_matches@@Base+0x2b4>
  40f7c0:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x4720>
  40f7c4:	add	x20, x20, #0x39d
  40f7c8:	mov	w0, #0x0                   	// #0
  40f7cc:	cbnz	x19, 40f964 <pattern_matches@@Base+0x364>
  40f7d0:	and	x0, x0, #0x1
  40f7d4:	sub	x21, x21, x0
  40f7d8:	cbz	w23, 40f7e8 <pattern_matches@@Base+0x1e8>
  40f7dc:	add	x0, x29, #0x98
  40f7e0:	mov	w1, #0x0                   	// #0
  40f7e4:	bl	410b80 <hash_free@@Base>
  40f7e8:	mov	sp, x29
  40f7ec:	mov	x0, x21
  40f7f0:	ldp	x19, x20, [sp, #16]
  40f7f4:	ldp	x21, x22, [sp, #32]
  40f7f8:	ldp	x23, x24, [sp, #48]
  40f7fc:	ldp	x29, x30, [sp], #240
  40f800:	ret
  40f804:	ldr	x1, [x29, #88]
  40f808:	sub	sp, sp, #0x20
  40f80c:	mov	x19, sp
  40f810:	str	x19, [x23]
  40f814:	mov	x23, x19
  40f818:	ldrb	w2, [x1]
  40f81c:	cbz	w2, 40f828 <pattern_matches@@Base+0x228>
  40f820:	add	x1, x1, #0x1
  40f824:	str	x1, [x29, #88]
  40f828:	ldr	x1, [x29, #104]
  40f82c:	str	x0, [x19, #8]
  40f830:	strb	wzr, [x0, x1]
  40f834:	bl	418e90 <find_percent@@Base>
  40f838:	cmp	x0, #0x0
  40f83c:	str	x0, [x19, #16]
  40f840:	cinc	w20, w20, eq  // eq = none
  40f844:	ldr	x0, [x19, #8]
  40f848:	bl	406700 <strlen@plt>
  40f84c:	str	x0, [x19, #24]
  40f850:	b	40f73c <pattern_matches@@Base+0x13c>
  40f854:	ldr	x2, [x29, #96]
  40f858:	sub	sp, sp, #0x30
  40f85c:	mov	x1, sp
  40f860:	str	x1, [x23]
  40f864:	mov	x23, x1
  40f868:	ldrb	w3, [x2]
  40f86c:	cbz	w3, 40f878 <pattern_matches@@Base+0x278>
  40f870:	add	x2, x2, #0x1
  40f874:	str	x2, [x29, #96]
  40f878:	ldr	x2, [x29, #104]
  40f87c:	add	w19, w19, #0x1
  40f880:	strb	wzr, [x0, x2]
  40f884:	stp	xzr, x0, [x1, #8]
  40f888:	ldr	x0, [x29, #104]
  40f88c:	str	x0, [x1, #24]
  40f890:	str	wzr, [x1, #32]
  40f894:	b	40f758 <pattern_matches@@Base+0x158>
  40f898:	mov	x1, x20
  40f89c:	add	x0, x29, #0x98
  40f8a0:	bl	4109e8 <hash_insert@@Base>
  40f8a4:	cbz	x0, 40f8ac <pattern_matches@@Base+0x2ac>
  40f8a8:	str	x0, [x20, #8]
  40f8ac:	ldr	x20, [x20]
  40f8b0:	b	40f7a8 <pattern_matches@@Base+0x1a8>
  40f8b4:	ldr	x0, [x20, #16]
  40f8b8:	cbz	x0, 40f8e8 <pattern_matches@@Base+0x2e8>
  40f8bc:	cbnz	x19, 40f8c8 <pattern_matches@@Base+0x2c8>
  40f8c0:	ldr	x20, [x20]
  40f8c4:	b	40f7b8 <pattern_matches@@Base+0x1b8>
  40f8c8:	ldp	x0, x1, [x20, #8]
  40f8cc:	ldr	x2, [x19, #16]
  40f8d0:	bl	40f600 <pattern_matches@@Base>
  40f8d4:	ldr	w1, [x19, #32]
  40f8d8:	orr	w1, w1, w0
  40f8dc:	str	w1, [x19, #32]
  40f8e0:	ldr	x19, [x19]
  40f8e4:	b	40f8bc <pattern_matches@@Base+0x2bc>
  40f8e8:	cbz	w23, 40f954 <pattern_matches@@Base+0x354>
  40f8ec:	ldr	x0, [x20, #8]
  40f8f0:	str	x0, [x29, #128]
  40f8f4:	ldr	x0, [x20, #24]
  40f8f8:	add	x1, x29, #0x70
  40f8fc:	str	x0, [x29, #136]
  40f900:	add	x0, x29, #0x98
  40f904:	bl	41088c <hash_find_item@@Base>
  40f908:	cbz	x0, 40f8c0 <pattern_matches@@Base+0x2c0>
  40f90c:	ldr	w1, [x0, #32]
  40f910:	orr	w1, w1, #0x1
  40f914:	str	w1, [x0, #32]
  40f918:	ldr	x0, [x0, #8]
  40f91c:	b	40f908 <pattern_matches@@Base+0x308>
  40f920:	ldr	x2, [x19, #24]
  40f924:	ldr	x0, [x20, #24]
  40f928:	ldr	w24, [x19, #32]
  40f92c:	cmp	x2, x0
  40f930:	b.ne	40f95c <pattern_matches@@Base+0x35c>  // b.any
  40f934:	ldr	x0, [x20, #8]
  40f938:	ldr	x1, [x19, #16]
  40f93c:	bl	4069b0 <strncmp@plt>
  40f940:	cmp	w0, #0x0
  40f944:	cset	w0, eq  // eq = none
  40f948:	orr	w24, w24, w0
  40f94c:	str	w24, [x19, #32]
  40f950:	ldr	x19, [x19]
  40f954:	cbnz	x19, 40f920 <pattern_matches@@Base+0x320>
  40f958:	b	40f8c0 <pattern_matches@@Base+0x2c0>
  40f95c:	mov	w0, #0x0                   	// #0
  40f960:	b	40f948 <pattern_matches@@Base+0x348>
  40f964:	ldr	w1, [x19, #32]
  40f968:	cmp	w1, #0x0
  40f96c:	cbnz	w22, 40f9b0 <pattern_matches@@Base+0x3b0>
  40f970:	cset	w1, ne  // ne = any
  40f974:	cbz	w1, 40f9a8 <pattern_matches@@Base+0x3a8>
  40f978:	ldr	x24, [x19, #16]
  40f97c:	mov	x0, x24
  40f980:	bl	406700 <strlen@plt>
  40f984:	mov	x1, x24
  40f988:	mov	x2, x0
  40f98c:	mov	x0, x21
  40f990:	bl	40b138 <variable_buffer_output@@Base>
  40f994:	mov	x1, x20
  40f998:	mov	x2, #0x1                   	// #1
  40f99c:	bl	40b138 <variable_buffer_output@@Base>
  40f9a0:	mov	x21, x0
  40f9a4:	mov	w0, #0x1                   	// #1
  40f9a8:	ldr	x19, [x19]
  40f9ac:	b	40f7cc <pattern_matches@@Base+0x1cc>
  40f9b0:	cset	w1, eq  // eq = none
  40f9b4:	b	40f974 <pattern_matches@@Base+0x374>
  40f9b8:	cbz	w19, 40f7e8 <pattern_matches@@Base+0x1e8>
  40f9bc:	mov	w23, #0x0                   	// #0
  40f9c0:	b	40f7b4 <pattern_matches@@Base+0x1b4>

000000000040f9c4 <strip_whitespace@@Base>:
  40f9c4:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  40f9c8:	mov	x3, x0
  40f9cc:	add	x2, x2, #0x454
  40f9d0:	ldr	x4, [x1]
  40f9d4:	ldr	x0, [x3]
  40f9d8:	cmp	x0, x4
  40f9dc:	b.hi	40f9f0 <strip_whitespace@@Base+0x2c>  // b.pmore
  40f9e0:	ldrb	w4, [x0]
  40f9e4:	ldrh	w4, [x2, x4, lsl #1]
  40f9e8:	tst	w4, #0x6
  40f9ec:	b.ne	40f9fc <strip_whitespace@@Base+0x38>  // b.any
  40f9f0:	adrp	x4, 43e000 <expanding_var@@Base+0x328>
  40f9f4:	add	x4, x4, #0x454
  40f9f8:	b	40fa10 <strip_whitespace@@Base+0x4c>
  40f9fc:	add	x0, x0, #0x1
  40fa00:	str	x0, [x3]
  40fa04:	b	40f9d0 <strip_whitespace@@Base+0xc>
  40fa08:	sub	x2, x2, #0x1
  40fa0c:	str	x2, [x1]
  40fa10:	ldr	x2, [x1]
  40fa14:	ldr	x0, [x3]
  40fa18:	cmp	x2, x0
  40fa1c:	b.cc	40fa30 <strip_whitespace@@Base+0x6c>  // b.lo, b.ul, b.last
  40fa20:	ldrb	w5, [x2]
  40fa24:	ldrh	w5, [x4, x5, lsl #1]
  40fa28:	tst	w5, #0x6
  40fa2c:	b.ne	40fa08 <strip_whitespace@@Base+0x44>  // b.any
  40fa30:	ret
  40fa34:	stp	x29, x30, [sp, #-64]!
  40fa38:	mov	x29, sp
  40fa3c:	stp	x19, x20, [sp, #16]
  40fa40:	mov	x19, x0
  40fa44:	str	x21, [sp, #32]
  40fa48:	mov	x21, x1
  40fa4c:	ldr	x20, [x21]
  40fa50:	str	x20, [sp, #48]
  40fa54:	mov	x0, x20
  40fa58:	bl	406700 <strlen@plt>
  40fa5c:	sub	x0, x0, #0x1
  40fa60:	add	x1, sp, #0x38
  40fa64:	add	x20, x20, x0
  40fa68:	add	x0, sp, #0x30
  40fa6c:	str	x20, [sp, #56]
  40fa70:	bl	40f9c4 <strip_whitespace@@Base>
  40fa74:	ldp	x0, x1, [sp, #48]
  40fa78:	cmp	x0, x1
  40fa7c:	b.hi	40fac4 <strip_whitespace@@Base+0x100>  // b.pmore
  40fa80:	add	x1, x1, #0x1
  40fa84:	bl	40b1fc <expand_argument@@Base>
  40fa88:	mov	x20, x0
  40fa8c:	bl	406700 <strlen@plt>
  40fa90:	mov	x2, x0
  40fa94:	cbz	x0, 40fabc <strip_whitespace@@Base+0xf8>
  40fa98:	ldr	x0, [x21, #8]!
  40fa9c:	cbz	x0, 40faac <strip_whitespace@@Base+0xe8>
  40faa0:	mov	x0, x20
  40faa4:	bl	406c20 <free@plt>
  40faa8:	b	40fa4c <strip_whitespace@@Base+0x88>
  40faac:	mov	x0, x19
  40fab0:	mov	x1, x20
  40fab4:	bl	40b138 <variable_buffer_output@@Base>
  40fab8:	mov	x19, x0
  40fabc:	mov	x0, x20
  40fac0:	bl	406c20 <free@plt>
  40fac4:	mov	x0, x19
  40fac8:	ldp	x19, x20, [sp, #16]
  40facc:	ldr	x21, [sp, #32]
  40fad0:	ldp	x29, x30, [sp], #64
  40fad4:	ret
  40fad8:	stp	x29, x30, [sp, #-64]!
  40fadc:	mov	x29, sp
  40fae0:	stp	x19, x20, [sp, #16]
  40fae4:	mov	x19, x0
  40fae8:	str	x21, [sp, #32]
  40faec:	mov	x21, x1
  40faf0:	ldr	x20, [x21]
  40faf4:	cbz	x20, 40fb68 <strip_whitespace@@Base+0x1a4>
  40faf8:	mov	x0, x20
  40fafc:	str	x20, [sp, #48]
  40fb00:	bl	406700 <strlen@plt>
  40fb04:	sub	x0, x0, #0x1
  40fb08:	add	x20, x20, x0
  40fb0c:	add	x1, sp, #0x38
  40fb10:	add	x0, sp, #0x30
  40fb14:	str	x20, [sp, #56]
  40fb18:	bl	40f9c4 <strip_whitespace@@Base>
  40fb1c:	ldp	x0, x1, [sp, #48]
  40fb20:	cmp	x0, x1
  40fb24:	b.hi	40fb48 <strip_whitespace@@Base+0x184>  // b.pmore
  40fb28:	add	x1, x1, #0x1
  40fb2c:	bl	40b1fc <expand_argument@@Base>
  40fb30:	mov	x20, x0
  40fb34:	bl	406700 <strlen@plt>
  40fb38:	mov	x2, x0
  40fb3c:	cbnz	x0, 40fb50 <strip_whitespace@@Base+0x18c>
  40fb40:	mov	x0, x20
  40fb44:	bl	406c20 <free@plt>
  40fb48:	add	x21, x21, #0x8
  40fb4c:	b	40faf0 <strip_whitespace@@Base+0x12c>
  40fb50:	mov	x1, x20
  40fb54:	mov	x0, x19
  40fb58:	bl	40b138 <variable_buffer_output@@Base>
  40fb5c:	mov	x19, x0
  40fb60:	mov	x0, x20
  40fb64:	bl	406c20 <free@plt>
  40fb68:	mov	x0, x19
  40fb6c:	ldp	x19, x20, [sp, #16]
  40fb70:	ldr	x21, [sp, #32]
  40fb74:	ldp	x29, x30, [sp], #64
  40fb78:	ret
  40fb7c:	stp	x29, x30, [sp, #-64]!
  40fb80:	mov	x29, sp
  40fb84:	stp	x19, x20, [sp, #16]
  40fb88:	mov	x19, x0
  40fb8c:	ldr	x20, [x1]
  40fb90:	str	x21, [sp, #32]
  40fb94:	mov	x21, x1
  40fb98:	str	x20, [sp, #48]
  40fb9c:	mov	x0, x20
  40fba0:	bl	406700 <strlen@plt>
  40fba4:	sub	x0, x0, #0x1
  40fba8:	add	x1, sp, #0x38
  40fbac:	add	x20, x20, x0
  40fbb0:	add	x0, sp, #0x30
  40fbb4:	str	x20, [sp, #56]
  40fbb8:	bl	40f9c4 <strip_whitespace@@Base>
  40fbbc:	ldp	x0, x1, [sp, #48]
  40fbc0:	cmp	x0, x1
  40fbc4:	b.ls	40fc14 <strip_whitespace@@Base+0x250>  // b.plast
  40fbc8:	mov	x0, #0x10                  	// #16
  40fbcc:	ldr	x0, [x21, x0]
  40fbd0:	cbz	x0, 40fc00 <strip_whitespace@@Base+0x23c>
  40fbd4:	mov	x1, #0x0                   	// #0
  40fbd8:	bl	40b1fc <expand_argument@@Base>
  40fbdc:	mov	x20, x0
  40fbe0:	bl	406700 <strlen@plt>
  40fbe4:	mov	x2, x0
  40fbe8:	mov	x1, x20
  40fbec:	mov	x0, x19
  40fbf0:	bl	40b138 <variable_buffer_output@@Base>
  40fbf4:	mov	x19, x0
  40fbf8:	mov	x0, x20
  40fbfc:	bl	406c20 <free@plt>
  40fc00:	mov	x0, x19
  40fc04:	ldp	x19, x20, [sp, #16]
  40fc08:	ldr	x21, [sp, #32]
  40fc0c:	ldp	x29, x30, [sp], #64
  40fc10:	ret
  40fc14:	add	x1, x1, #0x1
  40fc18:	bl	40b1fc <expand_argument@@Base>
  40fc1c:	ldrb	w20, [x0]
  40fc20:	bl	406c20 <free@plt>
  40fc24:	cbz	w20, 40fbc8 <strip_whitespace@@Base+0x204>
  40fc28:	mov	x0, #0x8                   	// #8
  40fc2c:	b	40fbcc <strip_whitespace@@Base+0x208>
  40fc30:	stp	x29, x30, [sp, #-80]!
  40fc34:	mov	x29, sp
  40fc38:	stp	x19, x20, [sp, #16]
  40fc3c:	mov	x20, x1
  40fc40:	mov	x19, x0
  40fc44:	str	x21, [sp, #32]
  40fc48:	str	x0, [sp, #56]
  40fc4c:	bl	406700 <strlen@plt>
  40fc50:	sub	x0, x0, #0x1
  40fc54:	add	x1, sp, #0x48
  40fc58:	add	x0, x19, x0
  40fc5c:	str	x0, [sp, #72]
  40fc60:	add	x0, sp, #0x38
  40fc64:	bl	40f9c4 <strip_whitespace@@Base>
  40fc68:	ldr	x2, [sp, #72]
  40fc6c:	ldr	x0, [sp, #56]
  40fc70:	cmp	x0, x2
  40fc74:	b.ls	40fcb8 <strip_whitespace@@Base+0x2f4>  // b.plast
  40fc78:	cmp	x2, x19
  40fc7c:	b.pl	40fcd4 <strip_whitespace@@Base+0x310>  // b.nfrst
  40fc80:	mov	x0, x20
  40fc84:	bl	406700 <strlen@plt>
  40fc88:	mov	x21, x0
  40fc8c:	mov	x0, x19
  40fc90:	bl	406700 <strlen@plt>
  40fc94:	adrp	x1, 43d000 <memcpy@GLIBC_2.17>
  40fc98:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40fc9c:	mov	x4, x19
  40fca0:	mov	x3, x20
  40fca4:	ldr	x5, [x1, #3288]
  40fca8:	add	x1, x21, x0
  40fcac:	add	x2, x2, #0x24c
  40fcb0:	ldr	x0, [x5]
  40fcb4:	bl	417d24 <fatal@@Base>
  40fcb8:	ldrb	w1, [x0]
  40fcbc:	sub	w1, w1, #0x30
  40fcc0:	cmp	w1, #0x9
  40fcc4:	b.hi	40fc80 <strip_whitespace@@Base+0x2bc>  // b.pmore
  40fcc8:	add	x0, x0, #0x1
  40fccc:	str	x0, [sp, #56]
  40fcd0:	b	40fc6c <strip_whitespace@@Base+0x2a8>
  40fcd4:	ldp	x19, x20, [sp, #16]
  40fcd8:	ldr	x21, [sp, #32]
  40fcdc:	ldp	x29, x30, [sp], #80
  40fce0:	ret
  40fce4:	stp	x29, x30, [sp, #-64]!
  40fce8:	mov	w2, #0x5                   	// #5
  40fcec:	mov	x29, sp
  40fcf0:	stp	x19, x20, [sp, #16]
  40fcf4:	stp	x21, x22, [sp, #32]
  40fcf8:	mov	x22, x1
  40fcfc:	mov	x21, x0
  40fd00:	ldr	x19, [x1]
  40fd04:	mov	x0, #0x0                   	// #0
  40fd08:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40fd0c:	add	x1, x1, #0x255
  40fd10:	bl	406d60 <dcgettext@plt>
  40fd14:	mov	x1, x0
  40fd18:	mov	x0, x19
  40fd1c:	bl	40fc30 <strip_whitespace@@Base+0x26c>
  40fd20:	ldr	x19, [x22, #8]
  40fd24:	mov	w2, #0x5                   	// #5
  40fd28:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40fd2c:	mov	x0, #0x0                   	// #0
  40fd30:	add	x1, x1, #0x287
  40fd34:	bl	406d60 <dcgettext@plt>
  40fd38:	mov	x1, x0
  40fd3c:	mov	x0, x19
  40fd40:	bl	40fc30 <strip_whitespace@@Base+0x26c>
  40fd44:	ldr	x0, [x22]
  40fd48:	bl	406910 <atoi@plt>
  40fd4c:	mov	w20, w0
  40fd50:	cmp	w0, #0x0
  40fd54:	b.gt	40fd78 <strip_whitespace@@Base+0x3b4>
  40fd58:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40fd5c:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  40fd60:	mov	w3, w20
  40fd64:	add	x2, x2, #0x2ba
  40fd68:	ldr	x0, [x0, #3288]
  40fd6c:	mov	x1, #0x14                  	// #20
  40fd70:	ldr	x0, [x0]
  40fd74:	bl	417d24 <fatal@@Base>
  40fd78:	ldr	x0, [x22, #8]
  40fd7c:	bl	406910 <atoi@plt>
  40fd80:	sub	w19, w0, w20
  40fd84:	add	w19, w19, #0x1
  40fd88:	cmp	w19, #0x0
  40fd8c:	b.le	40fde4 <strip_whitespace@@Base+0x420>
  40fd90:	ldr	x0, [x22, #16]
  40fd94:	str	x0, [sp, #56]
  40fd98:	add	x0, sp, #0x38
  40fd9c:	mov	x1, #0x0                   	// #0
  40fda0:	bl	416ccc <find_next_token@@Base>
  40fda4:	mov	x22, x0
  40fda8:	cbz	x0, 40fde4 <strip_whitespace@@Base+0x420>
  40fdac:	subs	w20, w20, #0x1
  40fdb0:	b.ne	40fd98 <strip_whitespace@@Base+0x3d4>  // b.any
  40fdb4:	subs	w19, w19, #0x1
  40fdb8:	b.eq	40fdcc <strip_whitespace@@Base+0x408>  // b.none
  40fdbc:	add	x0, sp, #0x38
  40fdc0:	mov	x1, #0x0                   	// #0
  40fdc4:	bl	416ccc <find_next_token@@Base>
  40fdc8:	cbnz	x0, 40fdb4 <strip_whitespace@@Base+0x3f0>
  40fdcc:	ldr	x2, [sp, #56]
  40fdd0:	mov	x0, x21
  40fdd4:	mov	x1, x22
  40fdd8:	sub	x2, x2, x22
  40fddc:	bl	40b138 <variable_buffer_output@@Base>
  40fde0:	mov	x21, x0
  40fde4:	mov	x0, x21
  40fde8:	ldp	x19, x20, [sp, #16]
  40fdec:	ldp	x21, x22, [sp, #32]
  40fdf0:	ldp	x29, x30, [sp], #64
  40fdf4:	ret
  40fdf8:	stp	x29, x30, [sp, #-64]!
  40fdfc:	mov	w2, #0x5                   	// #5
  40fe00:	mov	x29, sp
  40fe04:	stp	x19, x20, [sp, #16]
  40fe08:	mov	x19, x0
  40fe0c:	mov	x0, #0x0                   	// #0
  40fe10:	ldr	x20, [x1]
  40fe14:	str	x21, [sp, #32]
  40fe18:	mov	x21, x1
  40fe1c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40fe20:	add	x1, x1, #0x2ee
  40fe24:	bl	406d60 <dcgettext@plt>
  40fe28:	mov	x1, x0
  40fe2c:	mov	x0, x20
  40fe30:	bl	40fc30 <strip_whitespace@@Base+0x26c>
  40fe34:	ldr	x0, [x21]
  40fe38:	bl	406910 <atoi@plt>
  40fe3c:	cbnz	w0, 40fe70 <strip_whitespace@@Base+0x4ac>
  40fe40:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  40fe44:	mov	w2, #0x5                   	// #5
  40fe48:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  40fe4c:	add	x1, x1, #0x31c
  40fe50:	ldr	x0, [x0, #3288]
  40fe54:	ldr	x19, [x0]
  40fe58:	mov	x0, #0x0                   	// #0
  40fe5c:	bl	406d60 <dcgettext@plt>
  40fe60:	mov	x2, x0
  40fe64:	mov	x1, #0x0                   	// #0
  40fe68:	mov	x0, x19
  40fe6c:	bl	417d24 <fatal@@Base>
  40fe70:	mov	w20, w0
  40fe74:	ldr	x0, [x21, #8]
  40fe78:	str	x0, [sp, #56]
  40fe7c:	mov	x1, #0x0                   	// #0
  40fe80:	add	x0, sp, #0x38
  40fe84:	bl	416ccc <find_next_token@@Base>
  40fe88:	mov	x1, x0
  40fe8c:	cbnz	x0, 40fea4 <strip_whitespace@@Base+0x4e0>
  40fe90:	mov	x0, x19
  40fe94:	ldp	x19, x20, [sp, #16]
  40fe98:	ldr	x21, [sp, #32]
  40fe9c:	ldp	x29, x30, [sp], #64
  40fea0:	ret
  40fea4:	subs	w20, w20, #0x1
  40fea8:	b.ne	40fe7c <strip_whitespace@@Base+0x4b8>  // b.any
  40feac:	ldr	x2, [sp, #56]
  40feb0:	mov	x0, x19
  40feb4:	sub	x2, x2, x1
  40feb8:	bl	40b138 <variable_buffer_output@@Base>
  40febc:	mov	x19, x0
  40fec0:	b	40fe90 <strip_whitespace@@Base+0x4cc>

000000000040fec4 <shell_completed@@Base>:
  40fec4:	stp	x29, x30, [sp, #-272]!
  40fec8:	mov	w2, w0
  40fecc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40fed0:	add	x0, x0, #0x320
  40fed4:	mov	x29, sp
  40fed8:	cmp	w2, #0x7f
  40fedc:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  40fee0:	str	wzr, [x0, #112]
  40fee4:	b.ne	40ff38 <shell_completed@@Base+0x74>  // b.any
  40fee8:	mov	w1, #0xffffffff            	// #-1
  40feec:	mov	w2, #0x7f                  	// #127
  40fef0:	str	w1, [x0, #116]
  40fef4:	add	x0, sp, #0x10
  40fef8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  40fefc:	add	x1, x1, #0x16b
  40ff00:	bl	4067a0 <sprintf@plt>
  40ff04:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ff08:	add	x2, sp, #0x10
  40ff0c:	mov	x6, #0x0                   	// #0
  40ff10:	mov	w4, #0x0                   	// #0
  40ff14:	ldr	x0, [x0, #304]
  40ff18:	mov	w3, #0x5                   	// #5
  40ff1c:	mov	x1, #0xc                   	// #12
  40ff20:	ldr	x5, [x0, #8]
  40ff24:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  40ff28:	add	x0, x0, #0x355
  40ff2c:	bl	41f978 <define_variable_in_set@@Base>
  40ff30:	ldp	x29, x30, [sp], #272
  40ff34:	ret
  40ff38:	cmp	w2, #0x0
  40ff3c:	mov	w3, #0x1                   	// #1
  40ff40:	ccmp	w1, #0x0, #0x4, eq  // eq = none
  40ff44:	add	w1, w1, #0x80
  40ff48:	csel	w2, w1, w2, gt
  40ff4c:	str	w3, [x0, #116]
  40ff50:	b	40fef4 <shell_completed@@Base+0x30>

000000000040ff54 <func_shell_base@@Base>:
  40ff54:	stp	x29, x30, [sp, #-144]!
  40ff58:	mov	w3, #0x0                   	// #0
  40ff5c:	mov	x29, sp
  40ff60:	stp	x19, x20, [sp, #16]
  40ff64:	mov	x20, x0
  40ff68:	mov	x0, x1
  40ff6c:	add	x4, sp, #0x60
  40ff70:	mov	x1, #0x0                   	// #0
  40ff74:	stp	x21, x22, [sp, #32]
  40ff78:	ldr	x0, [x0]
  40ff7c:	stp	x23, x24, [sp, #48]
  40ff80:	stp	x25, x26, [sp, #64]
  40ff84:	mov	w25, w2
  40ff88:	mov	x2, #0x0                   	// #0
  40ff8c:	str	x27, [sp, #80]
  40ff90:	str	xzr, [sp, #96]
  40ff94:	bl	41351c <construct_command_argv@@Base>
  40ff98:	cbz	x0, 41002c <func_shell_base@@Base+0xd8>
  40ff9c:	mov	x23, x0
  40ffa0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ffa4:	ldr	x21, [x0, #416]
  40ffa8:	bl	417674 <output_start@@Base>
  40ffac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ffb0:	ldr	x0, [x0, #3512]
  40ffb4:	cbz	x0, 40ffc0 <func_shell_base@@Base+0x6c>
  40ffb8:	ldr	w19, [x0, #4]
  40ffbc:	tbz	w19, #31, 40ffd0 <func_shell_base@@Base+0x7c>
  40ffc0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  40ffc4:	ldr	x0, [x0, #376]
  40ffc8:	bl	4068c0 <fileno@plt>
  40ffcc:	mov	w19, w0
  40ffd0:	add	x0, sp, #0x68
  40ffd4:	bl	4067c0 <pipe@plt>
  40ffd8:	tbz	w0, #31, 41004c <func_shell_base@@Base+0xf8>
  40ffdc:	adrp	x0, 440000 <output_context@@Base+0x1248>
  40ffe0:	ldr	x22, [x0, #3560]
  40ffe4:	bl	406e00 <__errno_location@plt>
  40ffe8:	mov	x19, x0
  40ffec:	ldr	w0, [x0]
  40fff0:	bl	406ad0 <strerror@plt>
  40fff4:	bl	406700 <strlen@plt>
  40fff8:	mov	x21, x0
  40fffc:	ldr	w0, [x19]
  410000:	bl	406ad0 <strerror@plt>
  410004:	mov	x3, x0
  410008:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  41000c:	mov	x1, x21
  410010:	add	x2, x2, #0x362
  410014:	mov	x0, x22
  410018:	bl	417aa8 <error@@Base>
  41001c:	ldr	x0, [x23]
  410020:	bl	406c20 <free@plt>
  410024:	mov	x0, x23
  410028:	bl	406c20 <free@plt>
  41002c:	mov	x0, x20
  410030:	ldp	x19, x20, [sp, #16]
  410034:	ldp	x21, x22, [sp, #32]
  410038:	ldp	x23, x24, [sp, #48]
  41003c:	ldp	x25, x26, [sp, #64]
  410040:	ldr	x27, [sp, #80]
  410044:	ldp	x29, x30, [sp], #144
  410048:	ret
  41004c:	ldr	w0, [sp, #108]
  410050:	bl	422098 <fd_noinherit@@Base>
  410054:	ldr	w0, [sp, #104]
  410058:	bl	422098 <fd_noinherit@@Base>
  41005c:	stp	xzr, x21, [sp, #112]
  410060:	ldrb	w0, [sp, #136]
  410064:	mov	x2, x23
  410068:	mov	w1, #0x1                   	// #1
  41006c:	orr	w0, w0, #0x1
  410070:	strb	w0, [sp, #136]
  410074:	ldr	w0, [sp, #108]
  410078:	stp	w0, w19, [sp, #128]
  41007c:	add	x0, sp, #0x70
  410080:	bl	41308c <child_execute_job@@Base>
  410084:	mov	w19, w0
  410088:	ldr	x0, [sp, #112]
  41008c:	bl	406c20 <free@plt>
  410090:	tbz	w19, #31, 4100a4 <func_shell_base@@Base+0x150>
  410094:	mov	w1, #0x0                   	// #0
  410098:	mov	w0, #0x7f                  	// #127
  41009c:	bl	40fec4 <shell_completed@@Base>
  4100a0:	b	41001c <func_shell_base@@Base+0xc8>
  4100a4:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  4100a8:	add	x21, x21, #0x320
  4100ac:	ldr	w0, [sp, #108]
  4100b0:	stp	w19, wzr, [x21, #112]
  4100b4:	tbnz	w0, #31, 4100bc <func_shell_base@@Base+0x168>
  4100b8:	bl	406ae0 <close@plt>
  4100bc:	mov	x0, #0xc9                  	// #201
  4100c0:	bl	416a54 <xmalloc@@Base>
  4100c4:	mov	x19, x0
  4100c8:	mov	x22, #0x0                   	// #0
  4100cc:	mov	x24, #0xc8                  	// #200
  4100d0:	add	x26, x19, x22
  4100d4:	sub	x27, x24, x22
  4100d8:	ldr	w0, [sp, #104]
  4100dc:	mov	x2, x27
  4100e0:	mov	x1, x26
  4100e4:	bl	406d10 <read@plt>
  4100e8:	cmn	w0, #0x1
  4100ec:	b.ne	410194 <func_shell_base@@Base+0x240>  // b.any
  4100f0:	bl	406e00 <__errno_location@plt>
  4100f4:	ldr	w0, [x0]
  4100f8:	cmp	w0, #0x4
  4100fc:	b.eq	4100d8 <func_shell_base@@Base+0x184>  // b.none
  410100:	strb	wzr, [x26]
  410104:	ldr	w0, [sp, #104]
  410108:	bl	406ae0 <close@plt>
  41010c:	ldr	w0, [x21, #116]
  410110:	cbz	w0, 4101c0 <func_shell_base@@Base+0x26c>
  410114:	ldr	x0, [sp, #96]
  410118:	cbz	x0, 410160 <func_shell_base@@Base+0x20c>
  41011c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  410120:	ldr	w0, [x0, #1104]
  410124:	tbz	w0, #1, 410150 <func_shell_base@@Base+0x1fc>
  410128:	mov	w2, #0x5                   	// #5
  41012c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410130:	mov	x0, #0x0                   	// #0
  410134:	add	x1, x1, #0x36b
  410138:	bl	406d60 <dcgettext@plt>
  41013c:	ldr	x1, [sp, #96]
  410140:	bl	406df0 <printf@plt>
  410144:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  410148:	ldr	x0, [x0, #400]
  41014c:	bl	406cb0 <fflush@plt>
  410150:	ldr	x0, [sp, #96]
  410154:	bl	406770 <remove@plt>
  410158:	ldr	x0, [sp, #96]
  41015c:	bl	406c20 <free@plt>
  410160:	ldr	w0, [x21, #116]
  410164:	str	wzr, [x21, #112]
  410168:	cmn	w0, #0x1
  41016c:	b.ne	4101d0 <func_shell_base@@Base+0x27c>  // b.any
  410170:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  410174:	mov	x0, x19
  410178:	ldr	x1, [x21, #376]
  41017c:	bl	406710 <fputs@plt>
  410180:	ldr	x0, [x21, #376]
  410184:	bl	406cb0 <fflush@plt>
  410188:	mov	x0, x19
  41018c:	bl	406c20 <free@plt>
  410190:	b	41001c <func_shell_base@@Base+0xc8>
  410194:	cmp	w0, #0x0
  410198:	b.le	410100 <func_shell_base@@Base+0x1ac>
  41019c:	add	x22, x22, w0, sxtw
  4101a0:	cmp	x22, x24
  4101a4:	b.ne	4100d0 <func_shell_base@@Base+0x17c>  // b.any
  4101a8:	mov	x0, x19
  4101ac:	add	x1, x22, #0x201
  4101b0:	add	x24, x22, #0x200
  4101b4:	bl	416aa0 <xrealloc@@Base>
  4101b8:	mov	x19, x0
  4101bc:	b	4100d0 <func_shell_base@@Base+0x17c>
  4101c0:	mov	w1, #0x0                   	// #0
  4101c4:	mov	w0, #0x1                   	// #1
  4101c8:	bl	413a9c <reap_children@@Base>
  4101cc:	b	41010c <func_shell_base@@Base+0x1b8>
  4101d0:	sub	x2, x19, #0x1
  4101d4:	mov	x3, x19
  4101d8:	mov	x1, x19
  4101dc:	mov	w5, #0x20                  	// #32
  4101e0:	strb	wzr, [x26]
  4101e4:	ldrb	w0, [x3]
  4101e8:	cbnz	w0, 410218 <func_shell_base@@Base+0x2c4>
  4101ec:	cbnz	w25, 4101fc <func_shell_base@@Base+0x2a8>
  4101f0:	sub	x1, x1, #0x2
  4101f4:	cmp	x2, x1
  4101f8:	csel	x2, x2, x1, cs  // cs = hs, nlast
  4101fc:	strb	wzr, [x2, #1]!
  410200:	mov	x0, x20
  410204:	mov	x1, x19
  410208:	sub	x2, x2, x19
  41020c:	bl	40b138 <variable_buffer_output@@Base>
  410210:	mov	x20, x0
  410214:	b	410188 <func_shell_base@@Base+0x234>
  410218:	cmp	w0, #0xd
  41021c:	b.ne	410234 <func_shell_base@@Base+0x2e0>  // b.any
  410220:	ldrb	w4, [x3, #1]
  410224:	cmp	w4, #0xa
  410228:	b.ne	410244 <func_shell_base@@Base+0x2f0>  // b.any
  41022c:	add	x3, x3, #0x1
  410230:	b	4101e4 <func_shell_base@@Base+0x290>
  410234:	cmp	w0, #0xa
  410238:	b.ne	410244 <func_shell_base@@Base+0x2f0>  // b.any
  41023c:	strb	w5, [x1], #1
  410240:	b	41022c <func_shell_base@@Base+0x2d8>
  410244:	mov	x4, x1
  410248:	mov	x2, x1
  41024c:	strb	w0, [x4], #1
  410250:	mov	x1, x4
  410254:	b	41022c <func_shell_base@@Base+0x2d8>
  410258:	mov	w2, #0x1                   	// #1
  41025c:	b	40ff54 <func_shell_base@@Base>

0000000000410260 <handle_function@@Base>:
  410260:	stp	x29, x30, [sp, #-96]!
  410264:	mov	x29, sp
  410268:	stp	x19, x20, [sp, #16]
  41026c:	ldr	x19, [x1]
  410270:	stp	x21, x22, [sp, #32]
  410274:	mov	w22, #0x29                  	// #41
  410278:	stp	x23, x24, [sp, #48]
  41027c:	mov	x24, x0
  410280:	mov	w0, #0x7d                  	// #125
  410284:	stp	x25, x26, [sp, #64]
  410288:	mov	x25, x1
  41028c:	stp	x27, x28, [sp, #80]
  410290:	ldrb	w23, [x19], #1
  410294:	cmp	w23, #0x28
  410298:	csel	w22, w22, w0, eq  // eq = none
  41029c:	mov	x0, x19
  4102a0:	bl	40dedc <init_hash_files@@Base+0x78c>
  4102a4:	cbz	x0, 4104d4 <handle_function@@Base+0x274>
  4102a8:	mov	x21, x0
  4102ac:	ldrb	w0, [x0, #16]
  4102b0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  4102b4:	add	x1, x1, #0x454
  4102b8:	add	x19, x19, x0
  4102bc:	ldrb	w0, [x19]
  4102c0:	ldrh	w0, [x1, x0, lsl #1]
  4102c4:	tst	w0, #0x6
  4102c8:	b.ne	410328 <handle_function@@Base+0xc8>  // b.any
  4102cc:	mov	x20, x19
  4102d0:	mov	w2, #0x1                   	// #1
  4102d4:	mov	w3, #0x0                   	// #0
  4102d8:	mov	w4, #0x480                 	// #1152
  4102dc:	ldrb	w0, [x20]
  4102e0:	cbnz	w0, 410330 <handle_function@@Base+0xd0>
  4102e4:	adrp	x0, 43d000 <memcpy@GLIBC_2.17>
  4102e8:	ldr	x0, [x0, #3288]
  4102ec:	ldr	x20, [x0]
  4102f0:	ldr	x0, [x21, #8]
  4102f4:	bl	406700 <strlen@plt>
  4102f8:	mov	x19, x0
  4102fc:	mov	w2, #0x5                   	// #5
  410300:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410304:	mov	x0, #0x0                   	// #0
  410308:	add	x1, x1, #0x390
  41030c:	bl	406d60 <dcgettext@plt>
  410310:	mov	x2, x0
  410314:	ldr	x3, [x21, #8]
  410318:	mov	w4, w22
  41031c:	mov	x1, x19
  410320:	mov	x0, x20
  410324:	bl	417d24 <fatal@@Base>
  410328:	add	x19, x19, #0x1
  41032c:	b	4102bc <handle_function@@Base+0x5c>
  410330:	ldrh	w5, [x1, w0, sxtw #1]
  410334:	tst	w4, w5
  410338:	b.eq	410348 <handle_function@@Base+0xe8>  // b.none
  41033c:	cmp	w0, #0x2c
  410340:	b.ne	410350 <handle_function@@Base+0xf0>  // b.any
  410344:	add	w2, w2, #0x1
  410348:	add	x20, x20, #0x1
  41034c:	b	4102dc <handle_function@@Base+0x7c>
  410350:	cmp	w0, w23
  410354:	b.ne	410360 <handle_function@@Base+0x100>  // b.any
  410358:	add	w3, w3, #0x1
  41035c:	b	410348 <handle_function@@Base+0xe8>
  410360:	cmp	w0, w22
  410364:	b.ne	410348 <handle_function@@Base+0xe8>  // b.any
  410368:	sub	w3, w3, #0x1
  41036c:	cmn	w3, #0x1
  410370:	b.ne	410348 <handle_function@@Base+0xe8>  // b.any
  410374:	add	w2, w2, #0x2
  410378:	str	x20, [x25]
  41037c:	sbfiz	x2, x2, #3, #32
  410380:	ldrb	w0, [x21, #19]
  410384:	add	x2, x2, #0xf
  410388:	and	x2, x2, #0xfffffffffffffff0
  41038c:	sub	sp, sp, x2
  410390:	mov	x27, sp
  410394:	tbnz	w0, #0, 41048c <handle_function@@Base+0x22c>
  410398:	sub	x20, x20, x19
  41039c:	mov	x28, x27
  4103a0:	add	x0, x20, #0x1
  4103a4:	bl	416a54 <xmalloc@@Base>
  4103a8:	mov	x26, x0
  4103ac:	mov	x2, x20
  4103b0:	mov	x1, x19
  4103b4:	bl	4066c0 <memcpy@plt>
  4103b8:	add	x3, x26, x20
  4103bc:	mov	x9, x26
  4103c0:	mov	w25, #0x0                   	// #0
  4103c4:	strb	wzr, [x26, x20]
  4103c8:	cmp	x3, x9
  4103cc:	b.cc	410454 <handle_function@@Base+0x1f4>  // b.lo, b.ul, b.last
  4103d0:	ldrb	w0, [x21, #18]
  4103d4:	add	w25, w25, #0x1
  4103d8:	cmp	w0, w25
  4103dc:	b.eq	410498 <handle_function@@Base+0x238>  // b.none
  4103e0:	mov	x2, x9
  4103e4:	mov	w1, w22
  4103e8:	mov	w0, w23
  4103ec:	bl	40d780 <init_hash_files@@Base+0x30>
  4103f0:	cmp	x0, #0x0
  4103f4:	csel	x0, x0, x3, ne  // ne = any
  4103f8:	str	x9, [x28], #8
  4103fc:	mov	x9, x0
  410400:	strb	wzr, [x9], #1
  410404:	b	4103c8 <handle_function@@Base+0x168>
  410408:	ldrb	w0, [x21, #18]
  41040c:	add	w25, w25, #0x1
  410410:	cmp	w0, w25
  410414:	b.eq	410484 <handle_function@@Base+0x224>  // b.none
  410418:	mov	x3, x20
  41041c:	mov	x2, x19
  410420:	mov	w1, w22
  410424:	mov	w0, w23
  410428:	bl	40d780 <init_hash_files@@Base+0x30>
  41042c:	cmp	x0, #0x0
  410430:	csel	x26, x0, x20, ne  // ne = any
  410434:	mov	x0, x19
  410438:	add	x19, x26, #0x1
  41043c:	mov	x1, x26
  410440:	bl	40b1fc <expand_argument@@Base>
  410444:	str	x0, [x28], #8
  410448:	cmp	x20, x19
  41044c:	b.cs	410408 <handle_function@@Base+0x1a8>  // b.hs, b.nlast
  410450:	mov	x26, #0x0                   	// #0
  410454:	ldr	x0, [x24]
  410458:	str	xzr, [x28]
  41045c:	mov	x3, x21
  410460:	mov	x2, x27
  410464:	mov	w1, w25
  410468:	bl	40ddb0 <init_hash_files@@Base+0x660>
  41046c:	str	x0, [x24]
  410470:	ldrb	w0, [x21, #19]
  410474:	tbnz	w0, #0, 4104a8 <handle_function@@Base+0x248>
  410478:	mov	x0, x26
  41047c:	bl	406c20 <free@plt>
  410480:	b	4104b0 <handle_function@@Base+0x250>
  410484:	mov	x26, x20
  410488:	b	410434 <handle_function@@Base+0x1d4>
  41048c:	mov	x28, x27
  410490:	mov	w25, #0x0                   	// #0
  410494:	b	410448 <handle_function@@Base+0x1e8>
  410498:	mov	x0, x3
  41049c:	b	4103f8 <handle_function@@Base+0x198>
  4104a0:	add	x27, x27, #0x8
  4104a4:	bl	406c20 <free@plt>
  4104a8:	ldr	x0, [x27]
  4104ac:	cbnz	x0, 4104a0 <handle_function@@Base+0x240>
  4104b0:	mov	w0, #0x1                   	// #1
  4104b4:	mov	sp, x29
  4104b8:	ldp	x19, x20, [sp, #16]
  4104bc:	ldp	x21, x22, [sp, #32]
  4104c0:	ldp	x23, x24, [sp, #48]
  4104c4:	ldp	x25, x26, [sp, #64]
  4104c8:	ldp	x27, x28, [sp, #80]
  4104cc:	ldp	x29, x30, [sp], #96
  4104d0:	ret
  4104d4:	mov	w0, #0x0                   	// #0
  4104d8:	b	4104b4 <handle_function@@Base+0x254>

00000000004104dc <define_new_function@@Base>:
  4104dc:	stp	x29, x30, [sp, #-80]!
  4104e0:	mov	x29, sp
  4104e4:	stp	x19, x20, [sp, #16]
  4104e8:	mov	x19, x1
  4104ec:	mov	w20, w4
  4104f0:	stp	x21, x22, [sp, #32]
  4104f4:	mov	w22, w3
  4104f8:	stp	x23, x24, [sp, #48]
  4104fc:	mov	x23, x0
  410500:	mov	w24, w2
  410504:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  410508:	add	x0, x0, #0x454
  41050c:	str	x25, [sp, #64]
  410510:	mov	x25, x5
  410514:	ldrb	w3, [x1]
  410518:	ldrb	w2, [x1]
  41051c:	ldrh	w3, [x0, x3, lsl #1]
  410520:	tbnz	w3, #13, 410550 <define_new_function@@Base+0x74>
  410524:	subs	x21, x1, x19
  410528:	b.ne	410558 <define_new_function@@Base+0x7c>  // b.any
  41052c:	mov	w2, #0x5                   	// #5
  410530:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410534:	mov	x0, #0x0                   	// #0
  410538:	add	x1, x1, #0x3c1
  41053c:	bl	406d60 <dcgettext@plt>
  410540:	mov	x2, x0
  410544:	mov	x1, #0x0                   	// #0
  410548:	mov	x0, x23
  41054c:	bl	417d24 <fatal@@Base>
  410550:	add	x1, x1, #0x1
  410554:	b	410514 <define_new_function@@Base+0x38>
  410558:	ldrb	w0, [x19]
  41055c:	cmp	w0, #0x2e
  410560:	b.eq	410568 <define_new_function@@Base+0x8c>  // b.none
  410564:	cbz	w2, 41059c <define_new_function@@Base+0xc0>
  410568:	mov	x0, x19
  41056c:	bl	406700 <strlen@plt>
  410570:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410574:	mov	x20, x0
  410578:	add	x1, x1, #0x3d5
  41057c:	mov	w2, #0x5                   	// #5
  410580:	mov	x0, #0x0                   	// #0
  410584:	bl	406d60 <dcgettext@plt>
  410588:	mov	x3, x19
  41058c:	mov	x2, x0
  410590:	mov	x1, x20
  410594:	mov	x0, x23
  410598:	bl	417d24 <fatal@@Base>
  41059c:	cmp	x21, #0xff
  4105a0:	b.ls	4105c0 <define_new_function@@Base+0xe4>  // b.plast
  4105a4:	mov	x0, x19
  4105a8:	bl	406700 <strlen@plt>
  4105ac:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4105b0:	mov	x20, x0
  4105b4:	add	x1, x1, #0x3ef
  4105b8:	mov	w2, #0x5                   	// #5
  4105bc:	b	410580 <define_new_function@@Base+0xa4>
  4105c0:	cmp	w24, #0xff
  4105c4:	b.ls	410600 <define_new_function@@Base+0x124>  // b.plast
  4105c8:	mov	x0, x19
  4105cc:	bl	406700 <strlen@plt>
  4105d0:	mov	w2, #0x5                   	// #5
  4105d4:	mov	x20, x0
  4105d8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4105dc:	mov	x0, #0x0                   	// #0
  4105e0:	add	x1, x1, #0x40a
  4105e4:	bl	406d60 <dcgettext@plt>
  4105e8:	mov	x4, x19
  4105ec:	mov	w3, w24
  4105f0:	mov	x2, x0
  4105f4:	add	x1, x20, #0x14
  4105f8:	mov	x0, x23
  4105fc:	bl	417d24 <fatal@@Base>
  410600:	cmp	w22, #0xff
  410604:	b.hi	410614 <define_new_function@@Base+0x138>  // b.pmore
  410608:	cmp	w22, #0x0
  41060c:	ccmp	w24, w22, #0x0, ne  // ne = any
  410610:	b.ls	410640 <define_new_function@@Base+0x164>  // b.plast
  410614:	mov	x0, x19
  410618:	bl	406700 <strlen@plt>
  41061c:	mov	w2, #0x5                   	// #5
  410620:	mov	x20, x0
  410624:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410628:	mov	x0, #0x0                   	// #0
  41062c:	add	x1, x1, #0x43e
  410630:	bl	406d60 <dcgettext@plt>
  410634:	mov	x4, x19
  410638:	mov	w3, w22
  41063c:	b	4105f0 <define_new_function@@Base+0x114>
  410640:	mvn	w20, w20
  410644:	mov	x0, #0x18                  	// #24
  410648:	bl	416a54 <xmalloc@@Base>
  41064c:	mov	x1, x0
  410650:	strb	w21, [x0, #16]
  410654:	and	w20, w20, #0x1
  410658:	strb	w24, [x0, #17]
  41065c:	orr	w20, w20, #0x2
  410660:	strb	w22, [x0, #18]
  410664:	ldrb	w0, [x0, #19]
  410668:	ldp	x21, x22, [sp, #32]
  41066c:	and	w0, w0, #0xfffffffc
  410670:	orr	w20, w20, w0
  410674:	strb	w20, [x1, #19]
  410678:	ldp	x23, x24, [sp, #48]
  41067c:	stp	x25, x19, [x1]
  410680:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  410684:	ldp	x19, x20, [sp, #16]
  410688:	add	x0, x0, #0x320
  41068c:	ldr	x25, [sp, #64]
  410690:	ldp	x29, x30, [sp], #80
  410694:	b	4109e8 <hash_insert@@Base>

0000000000410698 <hash_init_function_table@@Base>:
  410698:	stp	x29, x30, [sp, #-32]!
  41069c:	mov	x1, #0x48                  	// #72
  4106a0:	adrp	x4, 40f000 <init_hash_files@@Base+0x18b0>
  4106a4:	mov	x29, sp
  4106a8:	str	x19, [sp, #16]
  4106ac:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  4106b0:	add	x19, x19, #0x320
  4106b4:	add	x4, x4, #0x18
  4106b8:	mov	x0, x19
  4106bc:	adrp	x3, 40d000 <file_timestamp_cons@@Base+0x48>
  4106c0:	adrp	x2, 40f000 <init_hash_files@@Base+0x18b0>
  4106c4:	add	x3, x3, #0x778
  4106c8:	add	x2, x2, #0x48
  4106cc:	bl	4106f8 <hash_init@@Base>
  4106d0:	mov	x0, x19
  4106d4:	mov	x3, #0x18                  	// #24
  4106d8:	ldr	x19, [sp, #16]
  4106dc:	mov	x2, #0x24                  	// #36
  4106e0:	ldp	x29, x30, [sp], #32
  4106e4:	adrp	x1, 43d000 <memcpy@GLIBC_2.17>
  4106e8:	add	x1, x1, #0xce0
  4106ec:	b	410a40 <hash_load@@Base>

00000000004106f0 <guile_gmake_setup@@Base>:
  4106f0:	mov	w0, #0x1                   	// #1
  4106f4:	ret

00000000004106f8 <hash_init@@Base>:
  4106f8:	orr	x1, x1, x1, lsr #1
  4106fc:	stp	x29, x30, [sp, #-48]!
  410700:	orr	x1, x1, x1, lsr #2
  410704:	mov	x29, sp
  410708:	orr	x1, x1, x1, lsr #4
  41070c:	stp	x19, x20, [sp, #16]
  410710:	mov	x19, x0
  410714:	orr	x1, x1, x1, lsr #8
  410718:	stp	x21, x22, [sp, #32]
  41071c:	mov	x20, x4
  410720:	orr	x1, x1, x1, lsr #16
  410724:	mov	x22, x2
  410728:	mov	x21, x3
  41072c:	orr	x1, x1, x1, lsr #32
  410730:	add	x1, x1, #0x1
  410734:	str	x1, [x0, #32]
  410738:	str	x1, [x0, #56]
  41073c:	lsl	x0, x1, #3
  410740:	bl	416a78 <xcalloc@@Base>
  410744:	str	x0, [x19]
  410748:	cbnz	x0, 410780 <hash_init@@Base+0x88>
  41074c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  410750:	mov	w2, #0x5                   	// #5
  410754:	ldr	x20, [x1, #376]
  410758:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41075c:	add	x1, x1, #0x54b
  410760:	bl	406d60 <dcgettext@plt>
  410764:	ldr	x2, [x19, #32]
  410768:	mov	x1, x0
  41076c:	mov	x0, x20
  410770:	lsl	x2, x2, #3
  410774:	bl	406e70 <fprintf@plt>
  410778:	mov	w0, #0x1                   	// #1
  41077c:	bl	406720 <exit@plt>
  410780:	ldr	x0, [x19, #32]
  410784:	stp	x22, x21, [x19, #8]
  410788:	str	x20, [x19, #24]
  41078c:	sub	x0, x0, x0, lsr #4
  410790:	stp	x0, xzr, [x19, #40]
  410794:	stp	xzr, xzr, [x19, #64]
  410798:	str	wzr, [x19, #80]
  41079c:	ldp	x19, x20, [sp, #16]
  4107a0:	ldp	x21, x22, [sp, #32]
  4107a4:	ldp	x29, x30, [sp], #48
  4107a8:	ret

00000000004107ac <hash_find_slot@@Base>:
  4107ac:	stp	x29, x30, [sp, #-80]!
  4107b0:	mov	x29, sp
  4107b4:	stp	x19, x20, [sp, #16]
  4107b8:	mov	x19, x0
  4107bc:	mov	x20, x1
  4107c0:	mov	x0, x1
  4107c4:	stp	x21, x22, [sp, #32]
  4107c8:	mov	w21, #0x0                   	// #0
  4107cc:	ldr	x1, [x19, #8]
  4107d0:	stp	x23, x24, [sp, #48]
  4107d4:	mov	x22, #0x0                   	// #0
  4107d8:	str	x25, [sp, #64]
  4107dc:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  4107e0:	blr	x1
  4107e4:	ldr	x1, [x19, #72]
  4107e8:	add	x1, x1, #0x1
  4107ec:	str	x1, [x19, #72]
  4107f0:	ldr	x2, [x19, #32]
  4107f4:	sub	w2, w2, #0x1
  4107f8:	and	w24, w2, w0
  4107fc:	and	w2, w2, w0
  410800:	ldr	x0, [x19]
  410804:	ldr	x1, [x0, x2, lsl #3]
  410808:	add	x25, x0, x2, lsl #3
  41080c:	cbnz	x1, 410834 <hash_find_slot@@Base+0x88>
  410810:	cmp	x22, #0x0
  410814:	csel	x25, x25, x22, eq  // eq = none
  410818:	mov	x0, x25
  41081c:	ldp	x19, x20, [sp, #16]
  410820:	ldp	x21, x22, [sp, #32]
  410824:	ldp	x23, x24, [sp, #48]
  410828:	ldr	x25, [sp, #64]
  41082c:	ldp	x29, x30, [sp], #80
  410830:	ret
  410834:	ldr	x0, [x23, #64]
  410838:	cmp	x1, x0
  41083c:	b.ne	410864 <hash_find_slot@@Base+0xb8>  // b.any
  410840:	cmp	x22, #0x0
  410844:	csel	x22, x22, x25, ne  // ne = any
  410848:	cbnz	w21, 41085c <hash_find_slot@@Base+0xb0>
  41084c:	ldr	x1, [x19, #16]
  410850:	mov	x0, x20
  410854:	blr	x1
  410858:	orr	w21, w0, #0x1
  41085c:	add	w0, w21, w24
  410860:	b	4107f0 <hash_find_slot@@Base+0x44>
  410864:	cmp	x1, x20
  410868:	b.eq	410818 <hash_find_slot@@Base+0x6c>  // b.none
  41086c:	ldr	x2, [x19, #24]
  410870:	mov	x0, x20
  410874:	blr	x2
  410878:	cbz	w0, 410818 <hash_find_slot@@Base+0x6c>
  41087c:	ldr	x0, [x19, #64]
  410880:	add	x0, x0, #0x1
  410884:	str	x0, [x19, #64]
  410888:	b	410848 <hash_find_slot@@Base+0x9c>

000000000041088c <hash_find_item@@Base>:
  41088c:	stp	x29, x30, [sp, #-16]!
  410890:	mov	x29, sp
  410894:	bl	4107ac <hash_find_slot@@Base>
  410898:	ldr	x0, [x0]
  41089c:	cbz	x0, 4108b0 <hash_find_item@@Base+0x24>
  4108a0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  4108a4:	ldr	x1, [x1, #64]
  4108a8:	cmp	x0, x1
  4108ac:	csel	x0, x0, xzr, ne  // ne = any
  4108b0:	ldp	x29, x30, [sp], #16
  4108b4:	ret

00000000004108b8 <hash_insert_at@@Base>:
  4108b8:	stp	x29, x30, [sp, #-64]!
  4108bc:	mov	x29, sp
  4108c0:	stp	x21, x22, [sp, #32]
  4108c4:	mov	x22, x1
  4108c8:	ldr	x1, [x2]
  4108cc:	stp	x19, x20, [sp, #16]
  4108d0:	mov	x19, x0
  4108d4:	stp	x23, x24, [sp, #48]
  4108d8:	mov	x0, x2
  4108dc:	cbz	x1, 4108f0 <hash_insert_at@@Base+0x38>
  4108e0:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  4108e4:	ldr	x2, [x2, #64]
  4108e8:	cmp	x2, x1
  4108ec:	b.ne	41090c <hash_insert_at@@Base+0x54>  // b.any
  4108f0:	ldr	x2, [x19, #48]
  4108f4:	add	x2, x2, #0x1
  4108f8:	str	x2, [x19, #48]
  4108fc:	cbnz	x1, 41090c <hash_insert_at@@Base+0x54>
  410900:	ldr	x1, [x19, #56]
  410904:	sub	x1, x1, #0x1
  410908:	str	x1, [x19, #56]
  41090c:	ldp	x20, x1, [x19, #32]
  410910:	ldr	x3, [x19, #56]
  410914:	str	x22, [x0]
  410918:	sub	x2, x20, x1
  41091c:	cmp	x3, x2
  410920:	b.cs	4109d4 <hash_insert_at@@Base+0x11c>  // b.hs, b.nlast
  410924:	ldr	x0, [x19, #48]
  410928:	ldr	x23, [x19]
  41092c:	cmp	x1, x0
  410930:	b.hi	410944 <hash_insert_at@@Base+0x8c>  // b.pmore
  410934:	lsl	x0, x20, #1
  410938:	str	x0, [x19, #32]
  41093c:	sub	x0, x0, x0, lsr #4
  410940:	str	x0, [x19, #40]
  410944:	ldr	w0, [x19, #80]
  410948:	add	x20, x23, x20, lsl #3
  41094c:	mov	x21, x23
  410950:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  410954:	add	w0, w0, #0x1
  410958:	str	w0, [x19, #80]
  41095c:	ldr	x0, [x19, #32]
  410960:	lsl	x0, x0, #3
  410964:	bl	416a78 <xcalloc@@Base>
  410968:	str	x0, [x19]
  41096c:	cmp	x21, x20
  410970:	b.cc	4109a8 <hash_insert_at@@Base+0xf0>  // b.lo, b.ul, b.last
  410974:	ldr	x0, [x19, #32]
  410978:	ldr	x1, [x19, #48]
  41097c:	sub	x0, x0, x1
  410980:	str	x0, [x19, #56]
  410984:	mov	x0, x23
  410988:	bl	406c20 <free@plt>
  41098c:	mov	x1, x22
  410990:	mov	x0, x19
  410994:	ldp	x19, x20, [sp, #16]
  410998:	ldp	x21, x22, [sp, #32]
  41099c:	ldp	x23, x24, [sp, #48]
  4109a0:	ldp	x29, x30, [sp], #64
  4109a4:	b	4107ac <hash_find_slot@@Base>
  4109a8:	ldr	x1, [x21]
  4109ac:	cbz	x1, 4109cc <hash_insert_at@@Base+0x114>
  4109b0:	ldr	x0, [x24, #64]
  4109b4:	cmp	x1, x0
  4109b8:	b.eq	4109cc <hash_insert_at@@Base+0x114>  // b.none
  4109bc:	mov	x0, x19
  4109c0:	bl	4107ac <hash_find_slot@@Base>
  4109c4:	ldr	x1, [x21]
  4109c8:	str	x1, [x0]
  4109cc:	add	x21, x21, #0x8
  4109d0:	b	41096c <hash_insert_at@@Base+0xb4>
  4109d4:	ldp	x19, x20, [sp, #16]
  4109d8:	ldp	x21, x22, [sp, #32]
  4109dc:	ldp	x23, x24, [sp, #48]
  4109e0:	ldp	x29, x30, [sp], #64
  4109e4:	ret

00000000004109e8 <hash_insert@@Base>:
  4109e8:	stp	x29, x30, [sp, #-48]!
  4109ec:	mov	x29, sp
  4109f0:	stp	x19, x20, [sp, #16]
  4109f4:	mov	x20, x0
  4109f8:	str	x21, [sp, #32]
  4109fc:	mov	x21, x1
  410a00:	bl	4107ac <hash_find_slot@@Base>
  410a04:	mov	x2, x0
  410a08:	ldr	x19, [x0]
  410a0c:	mov	x1, x21
  410a10:	mov	x0, x20
  410a14:	bl	4108b8 <hash_insert_at@@Base>
  410a18:	cbz	x19, 410a2c <hash_insert@@Base+0x44>
  410a1c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  410a20:	ldr	x0, [x0, #64]
  410a24:	cmp	x0, x19
  410a28:	csel	x19, x19, xzr, ne  // ne = any
  410a2c:	mov	x0, x19
  410a30:	ldp	x19, x20, [sp, #16]
  410a34:	ldr	x21, [sp, #32]
  410a38:	ldp	x29, x30, [sp], #48
  410a3c:	ret

0000000000410a40 <hash_load@@Base>:
  410a40:	stp	x29, x30, [sp, #-48]!
  410a44:	mov	x29, sp
  410a48:	stp	x19, x20, [sp, #16]
  410a4c:	mov	x20, x1
  410a50:	mov	x19, x2
  410a54:	stp	x21, x22, [sp, #32]
  410a58:	mov	x21, x0
  410a5c:	mov	x22, x3
  410a60:	sub	x19, x19, #0x1
  410a64:	cmn	x19, #0x1
  410a68:	b.ne	410a7c <hash_load@@Base+0x3c>  // b.any
  410a6c:	ldp	x19, x20, [sp, #16]
  410a70:	ldp	x21, x22, [sp, #32]
  410a74:	ldp	x29, x30, [sp], #48
  410a78:	ret
  410a7c:	mov	x1, x20
  410a80:	mov	x0, x21
  410a84:	add	x20, x20, x22
  410a88:	bl	4109e8 <hash_insert@@Base>
  410a8c:	b	410a60 <hash_load@@Base+0x20>

0000000000410a90 <hash_delete_at@@Base>:
  410a90:	mov	x2, x0
  410a94:	ldr	x0, [x1]
  410a98:	cbz	x0, 410abc <hash_delete_at@@Base+0x2c>
  410a9c:	adrp	x3, 43e000 <expanding_var@@Base+0x328>
  410aa0:	ldr	x3, [x3, #64]
  410aa4:	cmp	x3, x0
  410aa8:	b.eq	410ac0 <hash_delete_at@@Base+0x30>  // b.none
  410aac:	str	x3, [x1]
  410ab0:	ldr	x1, [x2, #48]
  410ab4:	sub	x1, x1, #0x1
  410ab8:	str	x1, [x2, #48]
  410abc:	ret
  410ac0:	mov	x0, #0x0                   	// #0
  410ac4:	b	410abc <hash_delete_at@@Base+0x2c>

0000000000410ac8 <hash_delete@@Base>:
  410ac8:	stp	x29, x30, [sp, #-32]!
  410acc:	mov	x29, sp
  410ad0:	str	x19, [sp, #16]
  410ad4:	mov	x19, x0
  410ad8:	bl	4107ac <hash_find_slot@@Base>
  410adc:	mov	x1, x0
  410ae0:	mov	x0, x19
  410ae4:	ldr	x19, [sp, #16]
  410ae8:	ldp	x29, x30, [sp], #32
  410aec:	b	410a90 <hash_delete_at@@Base>

0000000000410af0 <hash_free_items@@Base>:
  410af0:	stp	x29, x30, [sp, #-48]!
  410af4:	mov	x29, sp
  410af8:	stp	x19, x20, [sp, #16]
  410afc:	mov	x19, x0
  410b00:	stp	x21, x22, [sp, #32]
  410b04:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  410b08:	ldr	x20, [x0]
  410b0c:	ldr	x21, [x0, #32]
  410b10:	add	x21, x20, x21, lsl #3
  410b14:	cmp	x20, x21
  410b18:	b.cc	410b34 <hash_free_items@@Base+0x44>  // b.lo, b.ul, b.last
  410b1c:	ldr	x0, [x19, #32]
  410b20:	ldp	x21, x22, [sp, #32]
  410b24:	stp	xzr, x0, [x19, #48]
  410b28:	ldp	x19, x20, [sp, #16]
  410b2c:	ldp	x29, x30, [sp], #48
  410b30:	ret
  410b34:	ldr	x0, [x20]
  410b38:	cbz	x0, 410b4c <hash_free_items@@Base+0x5c>
  410b3c:	ldr	x1, [x22, #64]
  410b40:	cmp	x1, x0
  410b44:	b.eq	410b4c <hash_free_items@@Base+0x5c>  // b.none
  410b48:	bl	406c20 <free@plt>
  410b4c:	str	xzr, [x20], #8
  410b50:	b	410b14 <hash_free_items@@Base+0x24>

0000000000410b54 <hash_delete_items@@Base>:
  410b54:	ldr	x1, [x0]
  410b58:	ldr	x2, [x0, #32]
  410b5c:	add	x3, x1, x2, lsl #3
  410b60:	cmp	x1, x3
  410b64:	b.cc	410b78 <hash_delete_items@@Base+0x24>  // b.lo, b.ul, b.last
  410b68:	stp	xzr, x2, [x0, #48]
  410b6c:	stp	xzr, xzr, [x0, #64]
  410b70:	str	wzr, [x0, #80]
  410b74:	ret
  410b78:	str	xzr, [x1], #8
  410b7c:	b	410b60 <hash_delete_items@@Base+0xc>

0000000000410b80 <hash_free@@Base>:
  410b80:	stp	x29, x30, [sp, #-32]!
  410b84:	mov	x29, sp
  410b88:	str	x19, [sp, #16]
  410b8c:	mov	x19, x0
  410b90:	cbz	w1, 410bb4 <hash_free@@Base+0x34>
  410b94:	bl	410af0 <hash_free_items@@Base>
  410b98:	ldr	x0, [x19]
  410b9c:	bl	406c20 <free@plt>
  410ba0:	str	xzr, [x19]
  410ba4:	str	xzr, [x19, #40]
  410ba8:	ldr	x19, [sp, #16]
  410bac:	ldp	x29, x30, [sp], #32
  410bb0:	ret
  410bb4:	ldr	x0, [x0, #32]
  410bb8:	stp	xzr, x0, [x19, #48]
  410bbc:	b	410b98 <hash_free@@Base+0x18>

0000000000410bc0 <hash_map@@Base>:
  410bc0:	stp	x29, x30, [sp, #-48]!
  410bc4:	mov	x29, sp
  410bc8:	stp	x19, x20, [sp, #16]
  410bcc:	ldr	x19, [x0]
  410bd0:	stp	x21, x22, [sp, #32]
  410bd4:	mov	x21, x1
  410bd8:	ldr	x20, [x0, #32]
  410bdc:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  410be0:	add	x20, x19, x20, lsl #3
  410be4:	cmp	x19, x20
  410be8:	b.cc	410bfc <hash_map@@Base+0x3c>  // b.lo, b.ul, b.last
  410bec:	ldp	x19, x20, [sp, #16]
  410bf0:	ldp	x21, x22, [sp, #32]
  410bf4:	ldp	x29, x30, [sp], #48
  410bf8:	ret
  410bfc:	ldr	x0, [x19]
  410c00:	cbz	x0, 410c14 <hash_map@@Base+0x54>
  410c04:	ldr	x1, [x22, #64]
  410c08:	cmp	x0, x1
  410c0c:	b.eq	410c14 <hash_map@@Base+0x54>  // b.none
  410c10:	blr	x21
  410c14:	add	x19, x19, #0x8
  410c18:	b	410be4 <hash_map@@Base+0x24>

0000000000410c1c <hash_map_arg@@Base>:
  410c1c:	stp	x29, x30, [sp, #-64]!
  410c20:	mov	x29, sp
  410c24:	stp	x19, x20, [sp, #16]
  410c28:	ldr	x19, [x0]
  410c2c:	stp	x21, x22, [sp, #32]
  410c30:	mov	x21, x1
  410c34:	ldr	x20, [x0, #32]
  410c38:	mov	x22, x2
  410c3c:	str	x23, [sp, #48]
  410c40:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  410c44:	add	x20, x19, x20, lsl #3
  410c48:	cmp	x19, x20
  410c4c:	b.cc	410c64 <hash_map_arg@@Base+0x48>  // b.lo, b.ul, b.last
  410c50:	ldp	x19, x20, [sp, #16]
  410c54:	ldp	x21, x22, [sp, #32]
  410c58:	ldr	x23, [sp, #48]
  410c5c:	ldp	x29, x30, [sp], #64
  410c60:	ret
  410c64:	ldr	x0, [x19]
  410c68:	cbz	x0, 410c80 <hash_map_arg@@Base+0x64>
  410c6c:	ldr	x1, [x23, #64]
  410c70:	cmp	x0, x1
  410c74:	b.eq	410c80 <hash_map_arg@@Base+0x64>  // b.none
  410c78:	mov	x1, x22
  410c7c:	blr	x21
  410c80:	add	x19, x19, #0x8
  410c84:	b	410c48 <hash_map_arg@@Base+0x2c>

0000000000410c88 <hash_print_stats@@Base>:
  410c88:	stp	x29, x30, [sp, #-48]!
  410c8c:	mov	w2, #0x5                   	// #5
  410c90:	mov	x29, sp
  410c94:	stp	x19, x20, [sp, #16]
  410c98:	mov	x19, x0
  410c9c:	mov	x20, x1
  410ca0:	mov	x0, #0x0                   	// #0
  410ca4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410ca8:	add	x1, x1, #0x585
  410cac:	str	d8, [sp, #32]
  410cb0:	bl	406d60 <dcgettext@plt>
  410cb4:	ldr	x2, [x19, #48]
  410cb8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410cbc:	ldr	x3, [x19, #32]
  410cc0:	ucvtf	d0, x2
  410cc4:	ldr	d8, [x1, #1480]
  410cc8:	mov	x1, x0
  410ccc:	ucvtf	d1, x3
  410cd0:	mov	x0, x20
  410cd4:	fmul	d0, d0, d8
  410cd8:	fdiv	d0, d0, d1
  410cdc:	bl	406e70 <fprintf@plt>
  410ce0:	mov	w2, #0x5                   	// #5
  410ce4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410ce8:	mov	x0, #0x0                   	// #0
  410cec:	add	x1, x1, #0x59b
  410cf0:	bl	406d60 <dcgettext@plt>
  410cf4:	mov	x1, x0
  410cf8:	ldr	w2, [x19, #80]
  410cfc:	mov	x0, x20
  410d00:	bl	406e70 <fprintf@plt>
  410d04:	mov	w2, #0x5                   	// #5
  410d08:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  410d0c:	mov	x0, #0x0                   	// #0
  410d10:	add	x1, x1, #0x5a7
  410d14:	bl	406d60 <dcgettext@plt>
  410d18:	mov	x1, x0
  410d1c:	ldp	x2, x3, [x19, #64]
  410d20:	cbz	x3, 410d48 <hash_print_stats@@Base+0xc0>
  410d24:	ucvtf	d0, x2
  410d28:	ucvtf	d1, x3
  410d2c:	fmul	d0, d0, d8
  410d30:	fdiv	d0, d0, d1
  410d34:	mov	x0, x20
  410d38:	ldr	d8, [sp, #32]
  410d3c:	ldp	x19, x20, [sp, #16]
  410d40:	ldp	x29, x30, [sp], #48
  410d44:	b	406e70 <fprintf@plt>
  410d48:	movi	d0, #0x0
  410d4c:	b	410d34 <hash_print_stats@@Base+0xac>

0000000000410d50 <hash_dump@@Base>:
  410d50:	stp	x29, x30, [sp, #-48]!
  410d54:	mov	x29, sp
  410d58:	stp	x19, x20, [sp, #16]
  410d5c:	mov	x20, x0
  410d60:	stp	x21, x22, [sp, #32]
  410d64:	mov	x21, x2
  410d68:	ldr	x22, [x0, #32]
  410d6c:	ldr	x0, [x0]
  410d70:	add	x22, x0, x22, lsl #3
  410d74:	cbnz	x1, 410dd0 <hash_dump@@Base+0x80>
  410d78:	ldr	x0, [x20, #48]
  410d7c:	add	x0, x0, #0x1
  410d80:	lsl	x0, x0, #3
  410d84:	bl	416a54 <xmalloc@@Base>
  410d88:	mov	x19, x0
  410d8c:	ldr	x1, [x20]
  410d90:	mov	x0, x19
  410d94:	adrp	x3, 43e000 <expanding_var@@Base+0x328>
  410d98:	cmp	x1, x22
  410d9c:	b.cc	410dd8 <hash_dump@@Base+0x88>  // b.lo, b.ul, b.last
  410da0:	str	xzr, [x0]
  410da4:	cbz	x21, 410dbc <hash_dump@@Base+0x6c>
  410da8:	ldr	x1, [x20, #48]
  410dac:	mov	x3, x21
  410db0:	mov	x0, x19
  410db4:	mov	x2, #0x8                   	// #8
  410db8:	bl	406820 <qsort@plt>
  410dbc:	mov	x0, x19
  410dc0:	ldp	x19, x20, [sp, #16]
  410dc4:	ldp	x21, x22, [sp, #32]
  410dc8:	ldp	x29, x30, [sp], #48
  410dcc:	ret
  410dd0:	mov	x19, x1
  410dd4:	b	410d8c <hash_dump@@Base+0x3c>
  410dd8:	ldr	x2, [x1]
  410ddc:	cbz	x2, 410df0 <hash_dump@@Base+0xa0>
  410de0:	ldr	x4, [x3, #64]
  410de4:	cmp	x2, x4
  410de8:	b.eq	410df0 <hash_dump@@Base+0xa0>  // b.none
  410dec:	str	x2, [x0], #8
  410df0:	add	x1, x1, #0x8
  410df4:	b	410d98 <hash_dump@@Base+0x48>

0000000000410df8 <jhash@@Base>:
  410df8:	mov	w2, #0xbeef                	// #48879
  410dfc:	mov	x5, x0
  410e00:	movk	w2, #0xdead, lsl #16
  410e04:	add	w2, w1, w2
  410e08:	mov	w0, w2
  410e0c:	mov	w3, w2
  410e10:	cmp	w1, #0xc
  410e14:	b.gt	410e40 <jhash@@Base+0x48>
  410e18:	cbz	w1, 410f44 <jhash@@Base+0x14c>
  410e1c:	cmp	w1, #0x8
  410e20:	b.le	410eac <jhash@@Base+0xb4>
  410e24:	ldr	w4, [x5], #4
  410e28:	sub	w1, w1, #0x4
  410e2c:	add	w2, w2, w4
  410e30:	ldr	w4, [x5], #4
  410e34:	sub	w1, w1, #0x4
  410e38:	add	w3, w3, w4
  410e3c:	b	410eb4 <jhash@@Base+0xbc>
  410e40:	ldr	w4, [x5]
  410e44:	sub	w1, w1, #0xc
  410e48:	add	x5, x5, #0xc
  410e4c:	add	w2, w2, w4
  410e50:	ldur	w4, [x5, #-8]
  410e54:	add	w3, w3, w4
  410e58:	ldur	w4, [x5, #-4]
  410e5c:	add	w4, w0, w4
  410e60:	sub	w2, w2, w4
  410e64:	eor	w2, w2, w4, ror #28
  410e68:	add	w4, w3, w4
  410e6c:	sub	w3, w3, w2
  410e70:	eor	w3, w3, w2, ror #26
  410e74:	add	w2, w2, w4
  410e78:	sub	w4, w4, w3
  410e7c:	eor	w4, w4, w3, ror #24
  410e80:	add	w3, w3, w2
  410e84:	sub	w2, w2, w4
  410e88:	eor	w2, w2, w4, ror #16
  410e8c:	add	w4, w4, w3
  410e90:	sub	w3, w3, w2
  410e94:	eor	w3, w3, w2, ror #13
  410e98:	add	w2, w2, w4
  410e9c:	sub	w4, w4, w3
  410ea0:	eor	w0, w4, w3, ror #28
  410ea4:	add	w3, w3, w2
  410ea8:	b	410e10 <jhash@@Base+0x18>
  410eac:	cmp	w1, #0x4
  410eb0:	b.gt	410e30 <jhash@@Base+0x38>
  410eb4:	cmp	w1, #0x4
  410eb8:	b.ne	410ed8 <jhash@@Base+0xe0>  // b.any
  410ebc:	ldrb	w1, [x5, #3]
  410ec0:	add	w0, w0, w1, lsl #24
  410ec4:	ldrb	w1, [x5, #2]
  410ec8:	add	w0, w0, w1, lsl #16
  410ecc:	ldrb	w1, [x5, #1]
  410ed0:	add	w0, w0, w1, lsl #8
  410ed4:	b	410ee8 <jhash@@Base+0xf0>
  410ed8:	cmp	w1, #0x3
  410edc:	b.eq	410ec4 <jhash@@Base+0xcc>  // b.none
  410ee0:	cmp	w1, #0x2
  410ee4:	b.eq	410ecc <jhash@@Base+0xd4>  // b.none
  410ee8:	ldrb	w1, [x5]
  410eec:	add	w0, w1, w0
  410ef0:	ror	w1, w3, #18
  410ef4:	eor	w0, w3, w0
  410ef8:	sub	w0, w0, w1
  410efc:	eor	w2, w0, w2
  410f00:	ror	w1, w0, #21
  410f04:	sub	w2, w2, w1
  410f08:	eor	w3, w3, w2
  410f0c:	ror	w1, w2, #7
  410f10:	sub	w3, w3, w1
  410f14:	eor	w0, w0, w3
  410f18:	ror	w1, w3, #16
  410f1c:	sub	w0, w0, w1
  410f20:	eor	w2, w2, w0
  410f24:	ror	w1, w0, #28
  410f28:	sub	w2, w2, w1
  410f2c:	eor	w3, w3, w2
  410f30:	ror	w2, w2, #18
  410f34:	sub	w2, w3, w2
  410f38:	eor	w0, w0, w2
  410f3c:	ror	w2, w2, #8
  410f40:	sub	w0, w0, w2
  410f44:	ret

0000000000410f48 <jhash_string@@Base>:
  410f48:	stp	x29, x30, [sp, #-112]!
  410f4c:	mov	x29, sp
  410f50:	stp	x21, x22, [sp, #32]
  410f54:	mov	w21, #0xbeef                	// #48879
  410f58:	movk	w21, #0xdead, lsl #16
  410f5c:	mov	x22, x0
  410f60:	stp	x19, x20, [sp, #16]
  410f64:	mov	w19, w21
  410f68:	mov	w20, w21
  410f6c:	stp	x23, x24, [sp, #48]
  410f70:	mov	w24, #0xfeff                	// #65279
  410f74:	stp	x25, x26, [sp, #64]
  410f78:	mov	x25, x0
  410f7c:	mov	x23, #0x4                   	// #4
  410f80:	str	x27, [sp, #80]
  410f84:	bl	406700 <strlen@plt>
  410f88:	mov	x27, x0
  410f8c:	movk	w24, #0xfefe, lsl #16
  410f90:	cmp	x27, #0x4
  410f94:	mov	x1, x25
  410f98:	csel	x2, x27, x23, ls  // ls = plast
  410f9c:	add	x0, sp, #0x6c
  410fa0:	str	wzr, [sp, #108]
  410fa4:	mov	x26, x25
  410fa8:	bl	4066c0 <memcpy@plt>
  410fac:	ldr	w0, [sp, #108]
  410fb0:	add	w1, w0, w24
  410fb4:	bic	w1, w1, w0
  410fb8:	tst	w1, #0x80808080
  410fbc:	b.ne	411010 <jhash_string@@Base+0xc8>  // b.any
  410fc0:	sub	x2, x27, #0x4
  410fc4:	add	x25, x25, #0x4
  410fc8:	cmp	x2, #0x4
  410fcc:	mov	x1, x25
  410fd0:	csel	x2, x2, x23, ls  // ls = plast
  410fd4:	add	w20, w20, w0
  410fd8:	add	x0, sp, #0x6c
  410fdc:	str	wzr, [sp, #108]
  410fe0:	bl	4066c0 <memcpy@plt>
  410fe4:	ldr	w0, [sp, #108]
  410fe8:	add	w1, w0, w24
  410fec:	bic	w1, w1, w0
  410ff0:	tst	w1, #0x80808080
  410ff4:	b.eq	4110b0 <jhash_string@@Base+0x168>  // b.none
  410ff8:	ands	w1, w0, #0xff
  410ffc:	b.eq	411024 <jhash_string@@Base+0xdc>  // b.none
  411000:	tst	w0, #0xff00
  411004:	b.ne	411100 <jhash_string@@Base+0x1b8>  // b.any
  411008:	add	w19, w19, w1
  41100c:	b	411024 <jhash_string@@Base+0xdc>
  411010:	ands	w1, w0, #0xff
  411014:	b.eq	411024 <jhash_string@@Base+0xdc>  // b.none
  411018:	tst	w0, #0xff00
  41101c:	b.ne	41109c <jhash_string@@Base+0x154>  // b.any
  411020:	add	w20, w20, w1
  411024:	eor	w21, w19, w21
  411028:	ror	w0, w19, #18
  41102c:	sub	w21, w21, w0
  411030:	eor	w20, w20, w21
  411034:	ror	w0, w21, #21
  411038:	sub	w20, w20, w0
  41103c:	eor	w19, w19, w20
  411040:	ror	w0, w20, #7
  411044:	sub	w19, w19, w0
  411048:	eor	w21, w21, w19
  41104c:	ror	w0, w19, #16
  411050:	sub	w21, w21, w0
  411054:	eor	w20, w20, w21
  411058:	ror	w0, w21, #28
  41105c:	sub	w20, w20, w0
  411060:	sub	x0, x25, x22
  411064:	eor	w19, w19, w20
  411068:	ror	w20, w20, #18
  41106c:	sub	w19, w19, w20
  411070:	eor	w21, w21, w19
  411074:	add	w0, w21, w0
  411078:	ror	w19, w19, #8
  41107c:	sub	w0, w0, w19
  411080:	ldp	x19, x20, [sp, #16]
  411084:	ldp	x21, x22, [sp, #32]
  411088:	ldp	x23, x24, [sp, #48]
  41108c:	ldp	x25, x26, [sp, #64]
  411090:	ldr	x27, [sp, #80]
  411094:	ldp	x29, x30, [sp], #112
  411098:	ret
  41109c:	add	w1, w20, w0, uxth
  4110a0:	tst	w0, #0xff0000
  4110a4:	add	w20, w20, w0
  4110a8:	csel	w20, w20, w1, ne  // ne = any
  4110ac:	b	411024 <jhash_string@@Base+0xdc>
  4110b0:	sub	x2, x27, #0x8
  4110b4:	add	x25, x26, #0x8
  4110b8:	cmp	x2, #0x4
  4110bc:	add	w19, w19, w0
  4110c0:	csel	x2, x2, x23, ls  // ls = plast
  4110c4:	mov	x1, x25
  4110c8:	add	x0, sp, #0x6c
  4110cc:	str	wzr, [sp, #108]
  4110d0:	bl	4066c0 <memcpy@plt>
  4110d4:	ldr	w2, [sp, #108]
  4110d8:	add	w0, w2, w24
  4110dc:	bic	w0, w0, w2
  4110e0:	tst	w0, #0x80808080
  4110e4:	b.eq	411114 <jhash_string@@Base+0x1cc>  // b.none
  4110e8:	ands	w0, w2, #0xff
  4110ec:	b.eq	411024 <jhash_string@@Base+0xdc>  // b.none
  4110f0:	tst	w2, #0xff00
  4110f4:	b.ne	41116c <jhash_string@@Base+0x224>  // b.any
  4110f8:	add	w21, w21, w0
  4110fc:	b	411024 <jhash_string@@Base+0xdc>
  411100:	add	w1, w19, w0, uxth
  411104:	tst	w0, #0xff0000
  411108:	add	w19, w19, w0
  41110c:	csel	w19, w19, w1, ne  // ne = any
  411110:	b	411024 <jhash_string@@Base+0xdc>
  411114:	add	w21, w2, w21
  411118:	add	x25, x26, #0xc
  41111c:	sub	w20, w20, w21
  411120:	sub	x27, x27, #0xc
  411124:	eor	w20, w20, w21, ror #28
  411128:	add	w21, w19, w21
  41112c:	sub	w19, w19, w20
  411130:	eor	w19, w19, w20, ror #26
  411134:	add	w20, w20, w21
  411138:	sub	w21, w21, w19
  41113c:	eor	w21, w21, w19, ror #24
  411140:	add	w19, w19, w20
  411144:	sub	w20, w20, w21
  411148:	eor	w20, w20, w21, ror #16
  41114c:	add	w21, w21, w19
  411150:	sub	w19, w19, w20
  411154:	eor	w19, w19, w20, ror #13
  411158:	add	w20, w20, w21
  41115c:	sub	w21, w21, w19
  411160:	eor	w21, w21, w19, ror #28
  411164:	add	w19, w19, w20
  411168:	b	410f90 <jhash_string@@Base+0x48>
  41116c:	add	w0, w21, w2, uxth
  411170:	tst	w2, #0xff0000
  411174:	add	w21, w21, w2
  411178:	csel	w21, w21, w0, ne  // ne = any
  41117c:	b	411024 <jhash_string@@Base+0xdc>

0000000000411180 <stemlen_compare@@Base>:
  411180:	mov	x3, x0
  411184:	ldr	x0, [x1, #8]
  411188:	ldr	x2, [x3, #8]
  41118c:	subs	w0, w2, w0
  411190:	b.ne	4111a0 <stemlen_compare@@Base+0x20>  // b.any
  411194:	ldr	w1, [x1, #20]
  411198:	ldr	w0, [x3, #20]
  41119c:	sub	w0, w0, w1
  4111a0:	ret
  4111a4:	mov	x12, #0x1140                	// #4416
  4111a8:	sub	sp, sp, x12
  4111ac:	stp	x29, x30, [sp]
  4111b0:	mov	x29, sp
  4111b4:	stp	x19, x20, [sp, #16]
  4111b8:	mov	w19, w1
  4111bc:	stp	x21, x22, [sp, #32]
  4111c0:	stp	x23, x24, [sp, #48]
  4111c4:	stp	x25, x26, [sp, #64]
  4111c8:	stp	x27, x28, [sp, #80]
  4111cc:	mov	x27, x0
  4111d0:	str	w3, [x29, #164]
  4111d4:	str	w2, [x29, #220]
  4111d8:	ldr	x26, [x0]
  4111dc:	cbz	w1, 4111f0 <stemlen_compare@@Base+0x70>
  4111e0:	mov	x0, x26
  4111e4:	mov	w1, #0x28                  	// #40
  4111e8:	bl	406c40 <strchr@plt>
  4111ec:	mov	x26, x0
  4111f0:	mov	x0, x26
  4111f4:	bl	406700 <strlen@plt>
  4111f8:	str	x0, [x29, #176]
  4111fc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  411200:	ldr	w0, [x0, #2236]
  411204:	str	w0, [x29, #184]
  411208:	ldr	x0, [x29, #184]
  41120c:	ubfiz	x0, x0, #5, #32
  411210:	bl	416a54 <xmalloc@@Base>
  411214:	str	x0, [x29, #232]
  411218:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41121c:	ldr	x1, [x29, #176]
  411220:	ldr	x0, [x0, #2224]
  411224:	add	x0, x1, x0
  411228:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  41122c:	add	x0, x0, #0x13
  411230:	and	x0, x0, #0xfffffffffffffff0
  411234:	ldr	w1, [x1, #2232]
  411238:	sub	sp, sp, x0
  41123c:	mov	x0, sp
  411240:	str	x0, [x29, #264]
  411244:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  411248:	ldr	w0, [x0, #2248]
  41124c:	mul	w0, w0, w1
  411250:	lsl	x0, x0, #5
  411254:	bl	416a54 <xmalloc@@Base>
  411258:	str	x0, [x29, #224]
  41125c:	cbz	w19, 411300 <stemlen_compare@@Base+0x180>
  411260:	mov	x20, #0x0                   	// #0
  411264:	str	xzr, [x29, #280]
  411268:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41126c:	adrp	x23, 424000 <_IO_stdin_used@@Base+0x1720>
  411270:	mov	w19, #0x0                   	// #0
  411274:	str	wzr, [x29, #272]
  411278:	ldr	x28, [x0, #2216]
  41127c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411280:	add	x0, x0, #0x450
  411284:	str	x0, [x29, #200]
  411288:	add	x0, x23, #0x5d0
  41128c:	str	x0, [x29, #192]
  411290:	cbnz	x28, 411338 <stemlen_compare@@Base+0x1b8>
  411294:	cbz	w19, 4116dc <stemlen_compare@@Base+0x55c>
  411298:	cmp	w19, #0x1
  41129c:	b.ls	4112b8 <stemlen_compare@@Base+0x138>  // b.plast
  4112a0:	ldr	x0, [x29, #224]
  4112a4:	adrp	x3, 411000 <jhash_string@@Base+0xb8>
  4112a8:	mov	w1, w19
  4112ac:	add	x3, x3, #0x180
  4112b0:	mov	x2, #0x20                  	// #32
  4112b4:	bl	406820 <qsort@plt>
  4112b8:	ldr	w0, [x29, #272]
  4112bc:	cbnz	w0, 411598 <stemlen_compare@@Base+0x418>
  4112c0:	ldr	x1, [x29, #224]
  4112c4:	mov	w0, #0x20                  	// #32
  4112c8:	str	wzr, [x29, #160]
  4112cc:	str	wzr, [x29, #168]
  4112d0:	umaddl	x0, w19, w0, x1
  4112d4:	str	xzr, [x29, #208]
  4112d8:	str	x0, [x29, #128]
  4112dc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4112e0:	add	x0, x0, #0x6ba
  4112e4:	str	x0, [x29, #104]
  4112e8:	str	xzr, [x29, #248]
  4112ec:	ldr	x0, [x29, #224]
  4112f0:	str	x0, [x29, #256]
  4112f4:	ldr	x0, [x29, #232]
  4112f8:	str	x0, [x29, #272]
  4112fc:	b	4116c4 <stemlen_compare@@Base+0x544>
  411300:	mov	x0, x26
  411304:	bl	408a20 <ar_name@@Base>
  411308:	cbnz	w0, 411260 <stemlen_compare@@Base+0xe0>
  41130c:	ldr	x0, [x29, #176]
  411310:	mov	w1, #0x2f                  	// #47
  411314:	sub	x2, x0, #0x1
  411318:	mov	x0, x26
  41131c:	bl	406c60 <memrchr@plt>
  411320:	mov	x20, x0
  411324:	cmp	x20, #0x0
  411328:	sub	x0, x0, x26
  41132c:	csinc	x0, xzr, x0, eq  // eq = none
  411330:	str	x0, [x29, #280]
  411334:	b	411268 <stemlen_compare@@Base+0xe8>
  411338:	ldr	x0, [x28, #32]
  41133c:	str	x0, [x29, #256]
  411340:	cbz	x0, 41134c <stemlen_compare@@Base+0x1cc>
  411344:	ldr	x0, [x28, #40]
  411348:	cbz	x0, 411520 <stemlen_compare@@Base+0x3a0>
  41134c:	ldrb	w0, [x28, #51]
  411350:	cbnz	w0, 4114ec <stemlen_compare@@Base+0x36c>
  411354:	ldrh	w0, [x28, #48]
  411358:	mov	x21, #0x0                   	// #0
  41135c:	str	w0, [x29, #240]
  411360:	ldr	x0, [x29, #176]
  411364:	add	x0, x0, #0x1
  411368:	str	x0, [x29, #208]
  41136c:	add	x0, x20, #0x1
  411370:	str	x0, [x29, #248]
  411374:	ldr	w0, [x29, #240]
  411378:	str	w21, [x29, #216]
  41137c:	cmp	w0, w21
  411380:	b.ls	411520 <stemlen_compare@@Base+0x3a0>  // b.plast
  411384:	ldr	x1, [x28, #8]
  411388:	lsl	x0, x21, #3
  41138c:	ldr	x24, [x1, x0]
  411390:	ldr	w1, [x29, #164]
  411394:	cbz	w1, 4113a8 <stemlen_compare@@Base+0x228>
  411398:	ldrb	w1, [x24, #1]
  41139c:	cbnz	w1, 4113a8 <stemlen_compare@@Base+0x228>
  4113a0:	ldrb	w1, [x28, #50]
  4113a4:	cbz	w1, 4114e4 <stemlen_compare@@Base+0x364>
  4113a8:	ldr	x1, [x28, #16]
  4113ac:	ldr	w4, [x1, x21, lsl #2]
  4113b0:	ldr	x1, [x29, #176]
  4113b4:	cmp	x4, x1
  4113b8:	b.hi	4114e4 <stemlen_compare@@Base+0x364>  // b.pmore
  4113bc:	ldr	x1, [x28, #24]
  4113c0:	ldr	x25, [x1, x0]
  4113c4:	ldr	x0, [x29, #208]
  4113c8:	sub	x2, x25, x24
  4113cc:	sub	x2, x2, #0x1
  4113d0:	add	x22, x26, x2
  4113d4:	sub	x23, x0, x4
  4113d8:	cbz	x20, 411528 <stemlen_compare@@Base+0x3a8>
  4113dc:	mov	x0, x24
  4113e0:	mov	w1, #0x2f                  	// #47
  4113e4:	str	x2, [x29, #168]
  4113e8:	bl	406c40 <strchr@plt>
  4113ec:	ldr	x2, [x29, #168]
  4113f0:	cbnz	x0, 411528 <stemlen_compare@@Base+0x3a8>
  4113f4:	ldr	x0, [x29, #280]
  4113f8:	cmp	x0, x23
  4113fc:	b.hi	4114e4 <stemlen_compare@@Base+0x364>  // b.pmore
  411400:	add	x22, x22, x0
  411404:	sub	x23, x23, x0
  411408:	ldr	x0, [x29, #248]
  41140c:	cmp	x0, x22
  411410:	b.cs	41142c <stemlen_compare@@Base+0x2ac>  // b.hs, b.nlast
  411414:	sub	x2, x22, x20
  411418:	mov	x1, x0
  41141c:	sub	x2, x2, #0x1
  411420:	mov	x0, x24
  411424:	bl	4069b0 <strncmp@plt>
  411428:	cbnz	w0, 4114e4 <stemlen_compare@@Base+0x364>
  41142c:	mov	w2, #0x1                   	// #1
  411430:	ldrb	w1, [x25]
  411434:	ldrb	w0, [x22, x23]
  411438:	cmp	w0, w1
  41143c:	b.ne	4114e4 <stemlen_compare@@Base+0x364>  // b.any
  411440:	cbz	w0, 411488 <stemlen_compare@@Base+0x308>
  411444:	add	x0, x23, #0x1
  411448:	add	x1, x25, #0x1
  41144c:	add	x8, x22, x0
  411450:	cmp	x8, x1
  411454:	b.eq	411488 <stemlen_compare@@Base+0x308>  // b.none
  411458:	ldrb	w1, [x25, #1]
  41145c:	ldrb	w0, [x22, x0]
  411460:	cmp	w0, w1
  411464:	b.ne	4114e4 <stemlen_compare@@Base+0x364>  // b.any
  411468:	cbz	w0, 411488 <stemlen_compare@@Base+0x308>
  41146c:	add	x1, x23, #0x2
  411470:	add	x0, x25, #0x2
  411474:	add	x1, x22, x1
  411478:	str	w2, [x29, #168]
  41147c:	bl	406be0 <strcmp@plt>
  411480:	ldr	w2, [x29, #168]
  411484:	cbnz	w0, 4114e4 <stemlen_compare@@Base+0x364>
  411488:	ldrb	w0, [x24, #1]
  41148c:	cmp	w0, #0x0
  411490:	ldr	w0, [x29, #272]
  411494:	csinc	w0, w0, wzr, eq  // eq = none
  411498:	str	w0, [x29, #272]
  41149c:	ldr	x0, [x29, #256]
  4114a0:	cbnz	x0, 4114ac <stemlen_compare@@Base+0x32c>
  4114a4:	ldr	x0, [x28, #40]
  4114a8:	cbz	x0, 4114e4 <stemlen_compare@@Base+0x364>
  4114ac:	ldr	x0, [x29, #224]
  4114b0:	ubfiz	x1, x19, #5, #32
  4114b4:	ldr	x3, [x29, #224]
  4114b8:	add	x0, x0, x1
  4114bc:	cmp	w2, #0x0
  4114c0:	str	x28, [x3, x1]
  4114c4:	ldr	w1, [x29, #216]
  4114c8:	stp	w1, w19, [x0, #16]
  4114cc:	add	w19, w19, #0x1
  4114d0:	ldr	x1, [x29, #280]
  4114d4:	strb	w2, [x0, #24]
  4114d8:	csel	x1, x1, xzr, ne  // ne = any
  4114dc:	add	x4, x1, x23
  4114e0:	str	x4, [x0, #8]
  4114e4:	add	x21, x21, #0x1
  4114e8:	b	411374 <stemlen_compare@@Base+0x1f4>
  4114ec:	ldr	x0, [x29, #200]
  4114f0:	ldr	w0, [x0]
  4114f4:	tbz	w0, #3, 411520 <stemlen_compare@@Base+0x3a0>
  4114f8:	ldr	w0, [x29, #220]
  4114fc:	bl	416a20 <print_spaces@@Base>
  411500:	ldr	x1, [x29, #192]
  411504:	mov	w2, #0x5                   	// #5
  411508:	mov	x0, #0x0                   	// #0
  41150c:	bl	406d60 <dcgettext@plt>
  411510:	bl	406df0 <printf@plt>
  411514:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411518:	ldr	x0, [x0, #400]
  41151c:	bl	406cb0 <fflush@plt>
  411520:	ldr	x28, [x28]
  411524:	b	411290 <stemlen_compare@@Base+0x110>
  411528:	cmp	x26, x22
  41152c:	b.cs	411540 <stemlen_compare@@Base+0x3c0>  // b.hs, b.nlast
  411530:	mov	x1, x26
  411534:	mov	x0, x24
  411538:	bl	4069b0 <strncmp@plt>
  41153c:	cbnz	w0, 4114e4 <stemlen_compare@@Base+0x364>
  411540:	mov	w2, #0x0                   	// #0
  411544:	b	411430 <stemlen_compare@@Base+0x2b0>
  411548:	ldr	x1, [x29, #224]
  41154c:	lsl	x3, x0, #5
  411550:	ldr	x2, [x1, x3]
  411554:	ldrb	w1, [x2, #50]
  411558:	cbnz	w1, 411588 <stemlen_compare@@Base+0x408>
  41155c:	ldrh	w4, [x2, #48]
  411560:	mov	x1, #0x0                   	// #0
  411564:	cmp	w4, w1
  411568:	b.ls	411588 <stemlen_compare@@Base+0x408>  // b.plast
  41156c:	ldr	x5, [x2, #8]
  411570:	ldr	x5, [x5, x1, lsl #3]
  411574:	add	x1, x1, #0x1
  411578:	ldrb	w5, [x5, #1]
  41157c:	cbnz	w5, 411564 <stemlen_compare@@Base+0x3e4>
  411580:	ldr	x1, [x29, #224]
  411584:	str	xzr, [x1, x3]
  411588:	add	x0, x0, #0x1
  41158c:	cmp	w19, w0
  411590:	b.hi	411548 <stemlen_compare@@Base+0x3c8>  // b.pmore
  411594:	b	4112c0 <stemlen_compare@@Base+0x140>
  411598:	mov	x0, #0x0                   	// #0
  41159c:	b	41158c <stemlen_compare@@Base+0x40c>
  4115a0:	ldr	x0, [x29, #256]
  4115a4:	ldr	x20, [x0]
  4115a8:	cbz	x20, 4116b8 <stemlen_compare@@Base+0x538>
  4115ac:	ldr	w0, [x29, #168]
  4115b0:	cbz	w0, 4115bc <stemlen_compare@@Base+0x43c>
  4115b4:	ldrb	w0, [x20, #50]
  4115b8:	cbnz	w0, 4116b8 <stemlen_compare@@Base+0x538>
  4115bc:	ldr	x0, [x29, #256]
  4115c0:	ldr	x2, [x20, #8]
  4115c4:	ldr	w0, [x0, #16]
  4115c8:	ldr	x3, [x20, #24]
  4115cc:	lsl	x1, x0, #3
  4115d0:	ldr	x28, [x3, x1]
  4115d4:	ldr	x1, [x2, x1]
  4115d8:	sub	x28, x28, x1
  4115dc:	sub	x28, x28, #0x1
  4115e0:	add	x1, x26, x28
  4115e4:	str	x1, [x29, #240]
  4115e8:	ldr	x1, [x29, #176]
  4115ec:	add	x19, x1, #0x1
  4115f0:	ldr	x1, [x20, #16]
  4115f4:	ldr	w0, [x1, x0, lsl #2]
  4115f8:	sub	x19, x19, x0
  4115fc:	ldr	x0, [x29, #256]
  411600:	ldrb	w0, [x0, #24]
  411604:	str	w0, [x29, #192]
  411608:	cbz	w0, 4116e4 <stemlen_compare@@Base+0x564>
  41160c:	ldr	x0, [x29, #240]
  411610:	ldr	x1, [x29, #280]
  411614:	add	x0, x0, x1
  411618:	str	x0, [x29, #240]
  41161c:	ldr	x0, [x29, #208]
  411620:	sub	x22, x19, x1
  411624:	cbnz	x0, 411654 <stemlen_compare@@Base+0x4d4>
  411628:	add	x0, x1, #0x10
  41162c:	mov	x2, x1
  411630:	and	x0, x0, #0xfffffffffffffff0
  411634:	mov	x1, x26
  411638:	sub	sp, sp, x0
  41163c:	mov	x0, sp
  411640:	str	x0, [x29, #208]
  411644:	bl	4066c0 <memcpy@plt>
  411648:	ldr	x0, [x29, #208]
  41164c:	ldr	x1, [x29, #280]
  411650:	strb	wzr, [x0, x1]
  411654:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411658:	cmp	x19, #0x1, lsl #12
  41165c:	ldr	w0, [x0, #1104]
  411660:	and	w0, w0, #0x8
  411664:	b.ls	4116ec <stemlen_compare@@Base+0x56c>  // b.plast
  411668:	cbz	w0, 4116b8 <stemlen_compare@@Base+0x538>
  41166c:	ldr	w0, [x29, #220]
  411670:	bl	416a20 <print_spaces@@Base>
  411674:	mov	w2, #0x5                   	// #5
  411678:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41167c:	mov	x0, #0x0                   	// #0
  411680:	add	x1, x1, #0x5f3
  411684:	bl	406d60 <dcgettext@plt>
  411688:	ldr	w2, [x29, #192]
  41168c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411690:	ldr	x4, [x29, #208]
  411694:	cmp	w2, #0x0
  411698:	ldr	x3, [x29, #240]
  41169c:	add	x1, x1, #0x819
  4116a0:	mov	w2, w22
  4116a4:	csel	x1, x1, x4, eq  // eq = none
  4116a8:	bl	406df0 <printf@plt>
  4116ac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4116b0:	ldr	x0, [x0, #400]
  4116b4:	bl	406cb0 <fflush@plt>
  4116b8:	ldr	x0, [x29, #256]
  4116bc:	add	x0, x0, #0x20
  4116c0:	str	x0, [x29, #256]
  4116c4:	ldr	x0, [x29, #128]
  4116c8:	ldr	x1, [x29, #256]
  4116cc:	cmp	x0, x1
  4116d0:	b.ne	4115a0 <stemlen_compare@@Base+0x420>  // b.any
  4116d4:	ldr	w0, [x29, #168]
  4116d8:	cbz	w0, 411ff4 <stemlen_compare@@Base+0xe74>
  4116dc:	mov	x20, #0x0                   	// #0
  4116e0:	b	411fb4 <stemlen_compare@@Base+0xe34>
  4116e4:	mov	x22, x19
  4116e8:	b	411654 <stemlen_compare@@Base+0x4d4>
  4116ec:	cbz	w0, 411724 <stemlen_compare@@Base+0x5a4>
  4116f0:	ldr	w0, [x29, #220]
  4116f4:	bl	416a20 <print_spaces@@Base>
  4116f8:	mov	w2, #0x5                   	// #5
  4116fc:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411700:	mov	x0, #0x0                   	// #0
  411704:	add	x1, x1, #0x60d
  411708:	bl	406d60 <dcgettext@plt>
  41170c:	ldr	x2, [x29, #240]
  411710:	mov	w1, w22
  411714:	bl	406df0 <printf@plt>
  411718:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41171c:	ldr	x0, [x0, #400]
  411720:	bl	406cb0 <fflush@plt>
  411724:	ldr	w0, [x29, #192]
  411728:	cbnz	w0, 4118ac <stemlen_compare@@Base+0x72c>
  41172c:	ldr	x1, [x29, #240]
  411730:	mov	x2, x22
  411734:	add	x0, x29, #0x138
  411738:	bl	4066c0 <memcpy@plt>
  41173c:	add	x0, x29, #0x138
  411740:	strb	wzr, [x0, x22]
  411744:	ldr	x28, [x20, #32]
  411748:	cbz	x28, 411f14 <stemlen_compare@@Base+0xd94>
  41174c:	add	x0, x29, #0x138
  411750:	str	x0, [x27, #40]
  411754:	mov	w0, #0x1                   	// #1
  411758:	strb	w0, [x20, #51]
  41175c:	ldr	x21, [x28, #8]
  411760:	cbnz	x21, 41176c <stemlen_compare@@Base+0x5ec>
  411764:	ldr	x0, [x28, #16]
  411768:	ldr	x21, [x0]
  41176c:	str	wzr, [x29, #156]
  411770:	ldr	x0, [x29, #264]
  411774:	str	wzr, [x29, #200]
  411778:	ldr	x1, [x29, #280]
  41177c:	str	wzr, [x29, #216]
  411780:	add	x0, x0, x1
  411784:	ldr	w1, [x29, #192]
  411788:	cmp	w1, #0x0
  41178c:	ldr	x1, [x29, #264]
  411790:	csel	x0, x1, x0, eq  // eq = none
  411794:	str	x0, [x29, #144]
  411798:	ldr	x0, [x29, #232]
  41179c:	str	x0, [x29, #272]
  4117a0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4117a4:	add	x0, x0, #0x454
  4117a8:	str	x0, [x29, #112]
  4117ac:	cbnz	x21, 4117c8 <stemlen_compare@@Base+0x648>
  4117b0:	ldr	x28, [x28]
  4117b4:	cbz	x28, 411f04 <stemlen_compare@@Base+0xd84>
  4117b8:	ldr	x21, [x28, #8]
  4117bc:	cbnz	x21, 4117c8 <stemlen_compare@@Base+0x648>
  4117c0:	ldr	x0, [x28, #16]
  4117c4:	ldr	x21, [x0]
  4117c8:	ldrb	w0, [x28, #33]
  4117cc:	tbnz	w0, #3, 41197c <stemlen_compare@@Base+0x7fc>
  4117d0:	mov	x0, x21
  4117d4:	mov	w1, #0x25                  	// #37
  4117d8:	bl	406c40 <strchr@plt>
  4117dc:	str	x0, [x29, #304]
  4117e0:	mov	x19, x0
  4117e4:	cbnz	x0, 4118f4 <stemlen_compare@@Base+0x774>
  4117e8:	ldr	x0, [x29, #264]
  4117ec:	mov	x1, x21
  4117f0:	bl	406cc0 <strcpy@plt>
  4117f4:	ldr	x0, [x29, #264]
  4117f8:	mov	w4, #0x20                  	// #32
  4117fc:	mov	x3, #0x0                   	// #0
  411800:	mov	w2, #0x1                   	// #1
  411804:	mov	x1, #0x28                  	// #40
  411808:	str	x0, [x29, #304]
  41180c:	add	x0, x29, #0x130
  411810:	bl	419c0c <parse_file_seq@@Base>
  411814:	mov	x19, x0
  411818:	str	x0, [x29, #296]
  41181c:	cbnz	x19, 411944 <stemlen_compare@@Base+0x7c4>
  411820:	ldr	w0, [x29, #184]
  411824:	ldr	w1, [x29, #216]
  411828:	cmp	w0, w1
  41182c:	b.cs	411874 <stemlen_compare@@Base+0x6f4>  // b.hs, b.nlast
  411830:	ldr	x1, [x29, #232]
  411834:	ldr	x0, [x29, #272]
  411838:	ldr	w2, [x29, #216]
  41183c:	sub	x21, x0, x1
  411840:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  411844:	ldr	w1, [x0, #2236]
  411848:	cmp	w1, w2
  41184c:	csel	w1, w1, w2, cs  // cs = hs, nlast
  411850:	str	w1, [x29, #184]
  411854:	str	w1, [x0, #2236]
  411858:	ldr	x0, [x29, #184]
  41185c:	ubfiz	x1, x0, #5, #32
  411860:	ldr	x0, [x29, #232]
  411864:	bl	416aa0 <xrealloc@@Base>
  411868:	str	x0, [x29, #232]
  41186c:	add	x0, x0, x21
  411870:	str	x0, [x29, #272]
  411874:	ldr	x0, [x29, #296]
  411878:	str	x0, [x29, #136]
  41187c:	ldr	x23, [x29, #272]
  411880:	mov	x21, x0
  411884:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  411888:	add	x0, x0, #0x69a
  41188c:	str	x0, [x29, #120]
  411890:	str	x23, [x29, #272]
  411894:	cbnz	x21, 411c28 <stemlen_compare@@Base+0xaa8>
  411898:	ldr	x0, [x29, #136]
  41189c:	bl	416eb0 <free_ns_chain@@Base>
  4118a0:	cbnz	w21, 411f08 <stemlen_compare@@Base+0xd88>
  4118a4:	mov	x21, x19
  4118a8:	b	4117ac <stemlen_compare@@Base+0x62c>
  4118ac:	ldr	x2, [x29, #280]
  4118b0:	mov	x1, x26
  4118b4:	add	x0, x29, #0x138
  4118b8:	bl	4066c0 <memcpy@plt>
  4118bc:	ldr	x1, [x29, #240]
  4118c0:	add	x0, x29, #0x138
  4118c4:	ldr	x3, [x29, #280]
  4118c8:	mov	x2, x22
  4118cc:	add	x0, x0, x3
  4118d0:	bl	4066c0 <memcpy@plt>
  4118d4:	ldr	x1, [x29, #280]
  4118d8:	mov	x0, #0x1140                	// #4416
  4118dc:	add	x0, x29, x0
  4118e0:	add	x0, x0, x1
  4118e4:	add	x0, x0, x22
  4118e8:	sub	x0, x0, #0x2, lsl #12
  4118ec:	strb	wzr, [x0, #4088]
  4118f0:	b	411744 <stemlen_compare@@Base+0x5c4>
  4118f4:	ldr	w0, [x29, #192]
  4118f8:	cbz	w0, 41190c <stemlen_compare@@Base+0x78c>
  4118fc:	ldr	x0, [x29, #264]
  411900:	mov	x1, x26
  411904:	ldr	x2, [x29, #280]
  411908:	bl	4066c0 <memcpy@plt>
  41190c:	ldr	x0, [x29, #144]
  411910:	sub	x23, x19, x21
  411914:	mov	x2, x23
  411918:	mov	x1, x21
  41191c:	bl	4066c0 <memcpy@plt>
  411920:	ldr	x0, [x29, #144]
  411924:	mov	x2, x22
  411928:	ldr	x1, [x29, #240]
  41192c:	add	x23, x0, x23
  411930:	mov	x0, x23
  411934:	bl	4066c0 <memcpy@plt>
  411938:	add	x1, x19, #0x1
  41193c:	add	x0, x23, x22
  411940:	b	4117f0 <stemlen_compare@@Base+0x670>
  411944:	ldr	w0, [x29, #216]
  411948:	ldrb	w1, [x28, #33]
  41194c:	add	w0, w0, #0x1
  411950:	str	w0, [x29, #216]
  411954:	ldrb	w0, [x19, #33]
  411958:	ubfx	x1, x1, #1, #1
  41195c:	bfi	w0, w1, #1, #1
  411960:	strb	w0, [x19, #33]
  411964:	ldrb	w1, [x28, #33]
  411968:	ubfx	x1, x1, #4, #1
  41196c:	bfi	w0, w1, #4, #1
  411970:	strb	w0, [x19, #33]
  411974:	ldr	x19, [x19]
  411978:	b	41181c <stemlen_compare@@Base+0x69c>
  41197c:	ldrb	w2, [x21]
  411980:	mov	x3, x21
  411984:	ldr	x0, [x29, #112]
  411988:	add	x21, x21, #0x1
  41198c:	ldrh	w0, [x0, w2, sxtw #1]
  411990:	tst	w0, #0x6
  411994:	b.ne	41197c <stemlen_compare@@Base+0x7fc>  // b.any
  411998:	cbz	w2, 4117b0 <stemlen_compare@@Base+0x630>
  41199c:	mov	w1, w2
  4119a0:	mov	x19, x21
  4119a4:	cmp	w1, #0x24
  4119a8:	b.eq	411ad4 <stemlen_compare@@Base+0x954>  // b.none
  4119ac:	b.hi	4119c8 <stemlen_compare@@Base+0x848>  // b.pmore
  4119b0:	cmp	w1, #0x9
  4119b4:	b.eq	411acc <stemlen_compare@@Base+0x94c>  // b.none
  4119b8:	and	w1, w1, #0xffffffdf
  4119bc:	cbz	w1, 411acc <stemlen_compare@@Base+0x94c>
  4119c0:	ldrb	w1, [x19], #1
  4119c4:	b	4119a4 <stemlen_compare@@Base+0x824>
  4119c8:	cmp	w1, #0x7c
  4119cc:	b.ne	4119c0 <stemlen_compare@@Base+0x840>  // b.any
  4119d0:	ldr	w0, [x29, #200]
  4119d4:	sub	x23, x19, x3
  4119d8:	cbnz	w0, 4119ec <stemlen_compare@@Base+0x86c>
  4119dc:	cmp	x23, #0x1
  4119e0:	b.ne	4119ec <stemlen_compare@@Base+0x86c>  // b.any
  4119e4:	cmp	w2, #0x7c
  4119e8:	b.eq	411c20 <stemlen_compare@@Base+0xaa0>  // b.none
  4119ec:	mov	x0, x3
  4119f0:	mov	x1, x19
  4119f4:	mov	w2, #0x25                  	// #37
  4119f8:	str	x3, [x29, #136]
  4119fc:	bl	416c5c <lindex@@Base>
  411a00:	str	x0, [x29, #304]
  411a04:	mov	x24, x0
  411a08:	ldr	x3, [x29, #136]
  411a0c:	cbnz	x0, 411b38 <stemlen_compare@@Base+0x9b8>
  411a10:	ldr	x0, [x29, #264]
  411a14:	mov	x2, x23
  411a18:	mov	x1, x3
  411a1c:	mov	w21, #0x0                   	// #0
  411a20:	bl	4066c0 <memcpy@plt>
  411a24:	ldr	x0, [x29, #264]
  411a28:	strb	wzr, [x0, x23]
  411a2c:	ldr	w0, [x29, #160]
  411a30:	cbnz	w0, 411bb8 <stemlen_compare@@Base+0xa38>
  411a34:	mov	w1, #0x0                   	// #0
  411a38:	mov	x0, x27
  411a3c:	bl	420b80 <initialize_file_variables@@Base>
  411a40:	mov	x0, x27
  411a44:	bl	409604 <set_file_variables@@Base>
  411a48:	ldr	x0, [x29, #264]
  411a4c:	mov	x1, x27
  411a50:	mov	w24, #0x100                 	// #256
  411a54:	bl	40baa8 <variable_expand_for_file@@Base>
  411a58:	str	x0, [x29, #304]
  411a5c:	ldr	x0, [x29, #208]
  411a60:	cmp	w21, #0x0
  411a64:	add	x21, x29, #0x128
  411a68:	csel	x23, x0, xzr, ne  // ne = any
  411a6c:	ldr	w0, [x29, #200]
  411a70:	mov	x3, x23
  411a74:	mov	w4, #0x0                   	// #0
  411a78:	mov	x1, #0x28                  	// #40
  411a7c:	cmp	w0, #0x0
  411a80:	csel	w2, w0, w24, ne  // ne = any
  411a84:	add	x0, x29, #0x130
  411a88:	bl	419c0c <parse_file_seq@@Base>
  411a8c:	str	x0, [x21]
  411a90:	cbnz	x0, 411bf4 <stemlen_compare@@Base+0xa74>
  411a94:	ldr	x0, [x29, #304]
  411a98:	ldrb	w1, [x0]
  411a9c:	cmp	w1, #0x7c
  411aa0:	b.ne	411ab4 <stemlen_compare@@Base+0x934>  // b.any
  411aa4:	add	x0, x0, #0x1
  411aa8:	str	x0, [x29, #304]
  411aac:	mov	w0, #0x1                   	// #1
  411ab0:	str	w0, [x29, #200]
  411ab4:	ldr	x0, [x29, #304]
  411ab8:	ldrb	w0, [x0]
  411abc:	cbnz	w0, 411a6c <stemlen_compare@@Base+0x8ec>
  411ac0:	mov	w0, #0x1                   	// #1
  411ac4:	str	w0, [x29, #160]
  411ac8:	b	411820 <stemlen_compare@@Base+0x6a0>
  411acc:	sub	x19, x19, #0x1
  411ad0:	b	4119d0 <stemlen_compare@@Base+0x850>
  411ad4:	ldrb	w1, [x19], #1
  411ad8:	cmp	w1, #0x24
  411adc:	b.eq	4119c0 <stemlen_compare@@Base+0x840>  // b.none
  411ae0:	cmp	w1, #0x28
  411ae4:	b.eq	411b14 <stemlen_compare@@Base+0x994>  // b.none
  411ae8:	cmp	w1, #0x7b
  411aec:	b.ne	4119c0 <stemlen_compare@@Base+0x840>  // b.any
  411af0:	mov	w5, #0x7d                  	// #125
  411af4:	mov	w0, #0x0                   	// #0
  411af8:	ldrb	w4, [x19]
  411afc:	cbz	w4, 4119c0 <stemlen_compare@@Base+0x840>
  411b00:	cmp	w1, w4
  411b04:	b.ne	411b1c <stemlen_compare@@Base+0x99c>  // b.any
  411b08:	add	w0, w0, #0x1
  411b0c:	add	x19, x19, #0x1
  411b10:	b	411af8 <stemlen_compare@@Base+0x978>
  411b14:	mov	w5, #0x29                  	// #41
  411b18:	b	411af4 <stemlen_compare@@Base+0x974>
  411b1c:	cmp	w4, w5
  411b20:	b.ne	411b0c <stemlen_compare@@Base+0x98c>  // b.any
  411b24:	sub	w0, w0, #0x1
  411b28:	cmn	w0, #0x1
  411b2c:	b.ne	411b0c <stemlen_compare@@Base+0x98c>  // b.any
  411b30:	add	x19, x19, #0x1
  411b34:	b	4119c0 <stemlen_compare@@Base+0x840>
  411b38:	sub	x25, x0, x3
  411b3c:	mov	x1, x3
  411b40:	ldr	x0, [x29, #264]
  411b44:	mov	x2, x25
  411b48:	bl	4066c0 <memcpy@plt>
  411b4c:	ldr	x0, [x29, #264]
  411b50:	add	x3, x0, x25
  411b54:	ldr	w0, [x29, #192]
  411b58:	cbz	w0, 411ba0 <stemlen_compare@@Base+0xa20>
  411b5c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  411b60:	add	x0, x0, #0x634
  411b64:	ldr	x2, [x29, #264]
  411b68:	add	x3, x3, #0x5
  411b6c:	ldr	w1, [x0]
  411b70:	mov	w21, #0x1                   	// #1
  411b74:	ldrb	w0, [x0, #4]
  411b78:	str	w1, [x2, x25]
  411b7c:	sturb	w0, [x3, #-1]
  411b80:	sub	x23, x23, #0x1
  411b84:	add	x1, x24, #0x1
  411b88:	sub	x23, x23, x25
  411b8c:	mov	x0, x3
  411b90:	mov	x2, x23
  411b94:	bl	4066c0 <memcpy@plt>
  411b98:	strb	wzr, [x0, x23]
  411b9c:	b	411a2c <stemlen_compare@@Base+0x8ac>
  411ba0:	ldr	x1, [x29, #264]
  411ba4:	mov	w0, #0x2a24                	// #10788
  411ba8:	add	x3, x3, #0x2
  411bac:	mov	w21, #0x0                   	// #0
  411bb0:	strh	w0, [x1, x25]
  411bb4:	b	411b80 <stemlen_compare@@Base+0xa00>
  411bb8:	ldr	w0, [x29, #156]
  411bbc:	cbnz	w0, 411a48 <stemlen_compare@@Base+0x8c8>
  411bc0:	ldr	x0, [x27, #80]
  411bc4:	mov	x6, #0x0                   	// #0
  411bc8:	ldr	x2, [x27, #40]
  411bcc:	mov	w4, #0x0                   	// #0
  411bd0:	ldr	x5, [x0, #8]
  411bd4:	mov	w3, #0x6                   	// #6
  411bd8:	mov	x1, #0x1                   	// #1
  411bdc:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  411be0:	add	x0, x0, #0xcc1
  411be4:	bl	41f978 <define_variable_in_set@@Base>
  411be8:	ldr	w0, [x29, #160]
  411bec:	str	w0, [x29, #156]
  411bf0:	b	411a48 <stemlen_compare@@Base+0x8c8>
  411bf4:	ldr	w1, [x29, #216]
  411bf8:	add	w1, w1, #0x1
  411bfc:	str	w1, [x29, #216]
  411c00:	ldr	w1, [x29, #200]
  411c04:	cbz	w1, 411c14 <stemlen_compare@@Base+0xa94>
  411c08:	ldrb	w1, [x0, #33]
  411c0c:	orr	w1, w1, #0x2
  411c10:	strb	w1, [x0, #33]
  411c14:	mov	x21, x0
  411c18:	ldr	x0, [x0]
  411c1c:	b	411a90 <stemlen_compare@@Base+0x910>
  411c20:	str	w23, [x29, #200]
  411c24:	b	4117ac <stemlen_compare@@Base+0x62c>
  411c28:	ldr	x24, [x28, #8]
  411c2c:	ldr	x25, [x21, #8]
  411c30:	cbnz	x24, 411c3c <stemlen_compare@@Base+0xabc>
  411c34:	ldr	x0, [x28, #16]
  411c38:	ldr	x24, [x0]
  411c3c:	mov	x0, x25
  411c40:	bl	40ac78 <file_impossible_p@@Base>
  411c44:	cbz	w0, 411cac <stemlen_compare@@Base+0xb2c>
  411c48:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411c4c:	add	x0, x0, #0x450
  411c50:	ldr	w0, [x0]
  411c54:	tbz	w0, #3, 411c90 <stemlen_compare@@Base+0xb10>
  411c58:	ldr	w0, [x29, #220]
  411c5c:	bl	416a20 <print_spaces@@Base>
  411c60:	cmp	x25, x24
  411c64:	mov	w2, #0x5                   	// #5
  411c68:	b.ne	411ca0 <stemlen_compare@@Base+0xb20>  // b.any
  411c6c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411c70:	add	x1, x1, #0x63a
  411c74:	mov	x0, #0x0                   	// #0
  411c78:	bl	406d60 <dcgettext@plt>
  411c7c:	ldr	x1, [x21, #8]
  411c80:	bl	406df0 <printf@plt>
  411c84:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411c88:	ldr	x0, [x0, #400]
  411c8c:	bl	406cb0 <fflush@plt>
  411c90:	ldr	x0, [x29, #256]
  411c94:	str	xzr, [x0]
  411c98:	mov	w21, #0x1                   	// #1
  411c9c:	b	411898 <stemlen_compare@@Base+0x718>
  411ca0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411ca4:	add	x1, x1, #0x668
  411ca8:	b	411c74 <stemlen_compare@@Base+0xaf4>
  411cac:	stp	xzr, xzr, [x23]
  411cb0:	stp	xzr, xzr, [x23, #16]
  411cb4:	ldrb	w1, [x21, #33]
  411cb8:	ubfx	x0, x1, #4, #1
  411cbc:	ubfx	x1, x1, #1, #1
  411cc0:	ubfiz	w0, w0, #1, #7
  411cc4:	orr	w0, w0, w1
  411cc8:	ldrb	w1, [x23, #24]
  411ccc:	bfxil	w1, w0, #0, #2
  411cd0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411cd4:	add	x0, x0, #0x450
  411cd8:	strb	w1, [x23, #24]
  411cdc:	ldr	w0, [x0]
  411ce0:	tbz	w0, #3, 411d18 <stemlen_compare@@Base+0xb98>
  411ce4:	ldr	w0, [x29, #220]
  411ce8:	bl	416a20 <print_spaces@@Base>
  411cec:	cmp	x25, x24
  411cf0:	mov	w2, #0x5                   	// #5
  411cf4:	b.ne	411d4c <stemlen_compare@@Base+0xbcc>  // b.any
  411cf8:	ldr	x1, [x29, #120]
  411cfc:	mov	x0, #0x0                   	// #0
  411d00:	bl	406d60 <dcgettext@plt>
  411d04:	ldr	x1, [x21, #8]
  411d08:	bl	406df0 <printf@plt>
  411d0c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411d10:	ldr	x0, [x0, #400]
  411d14:	bl	406cb0 <fflush@plt>
  411d18:	ldr	x24, [x27, #24]
  411d1c:	cbnz	x24, 411d54 <stemlen_compare@@Base+0xbd4>
  411d20:	ldr	x0, [x21, #8]
  411d24:	bl	40be54 <lookup_file@@Base>
  411d28:	cbnz	x0, 411d38 <stemlen_compare@@Base+0xbb8>
  411d2c:	ldr	x0, [x21, #8]
  411d30:	bl	40aaa4 <file_exists_p@@Base>
  411d34:	cbz	w0, 411db4 <stemlen_compare@@Base+0xc34>
  411d38:	ldr	x0, [x21, #8]
  411d3c:	str	x0, [x23]
  411d40:	add	x23, x23, #0x20
  411d44:	ldr	x21, [x21]
  411d48:	b	411890 <stemlen_compare@@Base+0x710>
  411d4c:	ldr	x1, [x29, #104]
  411d50:	b	411cfc <stemlen_compare@@Base+0xb7c>
  411d54:	ldr	x0, [x24, #8]
  411d58:	cbnz	x0, 411da0 <stemlen_compare@@Base+0xc20>
  411d5c:	ldr	x1, [x24, #16]
  411d60:	ldr	x1, [x1]
  411d64:	ldr	x25, [x21, #8]
  411d68:	cmp	x25, x1
  411d6c:	b.eq	412334 <stemlen_compare@@Base+0x11b4>  // b.none
  411d70:	ldrb	w2, [x1]
  411d74:	ldrb	w1, [x25]
  411d78:	cmp	w1, w2
  411d7c:	b.ne	411d98 <stemlen_compare@@Base+0xc18>  // b.any
  411d80:	cbz	w1, 412338 <stemlen_compare@@Base+0x11b8>
  411d84:	cbz	x0, 411da8 <stemlen_compare@@Base+0xc28>
  411d88:	add	x0, x0, #0x1
  411d8c:	add	x1, x25, #0x1
  411d90:	bl	406be0 <strcmp@plt>
  411d94:	cbz	w0, 412338 <stemlen_compare@@Base+0x11b8>
  411d98:	ldr	x24, [x24]
  411d9c:	b	411d1c <stemlen_compare@@Base+0xb9c>
  411da0:	mov	x1, x0
  411da4:	b	411d64 <stemlen_compare@@Base+0xbe4>
  411da8:	ldr	x0, [x24, #16]
  411dac:	ldr	x0, [x0]
  411db0:	b	411d88 <stemlen_compare@@Base+0xc08>
  411db4:	ldr	x0, [x21, #8]
  411db8:	mov	x3, #0x0                   	// #0
  411dbc:	mov	x2, #0x0                   	// #0
  411dc0:	mov	x1, #0x0                   	// #0
  411dc4:	bl	42185c <vpath_search@@Base>
  411dc8:	mov	x24, x0
  411dcc:	cbz	x0, 411e18 <stemlen_compare@@Base+0xc98>
  411dd0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411dd4:	add	x0, x0, #0x450
  411dd8:	ldr	w0, [x0]
  411ddc:	tbz	w0, #3, 411d38 <stemlen_compare@@Base+0xbb8>
  411de0:	ldr	w0, [x29, #220]
  411de4:	bl	416a20 <print_spaces@@Base>
  411de8:	mov	w2, #0x5                   	// #5
  411dec:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411df0:	mov	x0, #0x0                   	// #0
  411df4:	add	x1, x1, #0x6de
  411df8:	bl	406d60 <dcgettext@plt>
  411dfc:	ldr	x1, [x21, #8]
  411e00:	mov	x2, x24
  411e04:	bl	406df0 <printf@plt>
  411e08:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411e0c:	ldr	x0, [x0, #400]
  411e10:	bl	406cb0 <fflush@plt>
  411e14:	b	411d38 <stemlen_compare@@Base+0xbb8>
  411e18:	ldr	w0, [x29, #168]
  411e1c:	cbz	w0, 411c98 <stemlen_compare@@Base+0xb18>
  411e20:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411e24:	add	x0, x0, #0x450
  411e28:	ldr	w0, [x0]
  411e2c:	tbz	w0, #3, 411e60 <stemlen_compare@@Base+0xce0>
  411e30:	ldr	w0, [x29, #220]
  411e34:	bl	416a20 <print_spaces@@Base>
  411e38:	mov	w2, #0x5                   	// #5
  411e3c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  411e40:	mov	x0, #0x0                   	// #0
  411e44:	add	x1, x1, #0x705
  411e48:	bl	406d60 <dcgettext@plt>
  411e4c:	ldr	x1, [x21, #8]
  411e50:	bl	406df0 <printf@plt>
  411e54:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  411e58:	ldr	x0, [x0, #400]
  411e5c:	bl	406cb0 <fflush@plt>
  411e60:	ldr	x0, [x29, #248]
  411e64:	cbnz	x0, 411e74 <stemlen_compare@@Base+0xcf4>
  411e68:	sub	sp, sp, #0x90
  411e6c:	mov	x0, sp
  411e70:	str	x0, [x29, #248]
  411e74:	ldr	x0, [x29, #248]
  411e78:	mov	x2, #0x90                  	// #144
  411e7c:	mov	w1, #0x0                   	// #0
  411e80:	bl	4069f0 <memset@plt>
  411e84:	ldr	x1, [x29, #248]
  411e88:	ldr	x0, [x21, #8]
  411e8c:	str	x0, [x1]
  411e90:	mov	w1, #0x0                   	// #0
  411e94:	ldr	w0, [x29, #164]
  411e98:	add	w3, w0, #0x1
  411e9c:	ldr	w0, [x29, #220]
  411ea0:	add	w2, w0, #0x1
  411ea4:	ldr	x0, [x29, #248]
  411ea8:	bl	4111a4 <stemlen_compare@@Base+0x24>
  411eac:	cbz	w0, 411ed8 <stemlen_compare@@Base+0xd58>
  411eb0:	ldr	x0, [x29, #248]
  411eb4:	ldr	x1, [x29, #248]
  411eb8:	str	xzr, [x29, #248]
  411ebc:	ldr	x0, [x0]
  411ec0:	str	x0, [x23, #8]
  411ec4:	ldr	x0, [x21, #8]
  411ec8:	str	x0, [x1]
  411ecc:	str	x0, [x23]
  411ed0:	str	x1, [x23, #16]
  411ed4:	b	411d40 <stemlen_compare@@Base+0xbc0>
  411ed8:	ldr	x0, [x29, #248]
  411edc:	ldr	x0, [x0, #80]
  411ee0:	cbz	x0, 411ee8 <stemlen_compare@@Base+0xd68>
  411ee4:	bl	41fbac <free_variable_set@@Base>
  411ee8:	ldr	x0, [x29, #248]
  411eec:	ldr	x0, [x0, #88]
  411ef0:	cbz	x0, 411ef8 <stemlen_compare@@Base+0xd78>
  411ef4:	bl	41fbac <free_variable_set@@Base>
  411ef8:	ldr	x0, [x21, #8]
  411efc:	bl	40ab58 <file_impossible@@Base>
  411f00:	b	411c98 <stemlen_compare@@Base+0xb18>
  411f04:	mov	w21, #0x0                   	// #0
  411f08:	str	xzr, [x27, #40]
  411f0c:	strb	wzr, [x20, #51]
  411f10:	cbnz	w21, 4116b8 <stemlen_compare@@Base+0x538>
  411f14:	ldr	w0, [x29, #164]
  411f18:	cbnz	w0, 412000 <stemlen_compare@@Base+0xe80>
  411f1c:	mov	w21, #0xb6ff                	// #46847
  411f20:	mov	w19, #0x4900                	// #18688
  411f24:	movk	w21, #0xfffb, lsl #16
  411f28:	mov	w23, #0x12                  	// #18
  411f2c:	ldr	x0, [x29, #272]
  411f30:	ldr	x1, [x29, #232]
  411f34:	sub	x0, x0, #0x20
  411f38:	str	x0, [x29, #272]
  411f3c:	add	x0, x0, #0x20
  411f40:	cmp	x1, x0
  411f44:	b.cc	412018 <stemlen_compare@@Base+0xe98>  // b.lo, b.ul, b.last
  411f48:	ldr	x0, [x29, #256]
  411f4c:	ldrb	w0, [x0, #24]
  411f50:	cbnz	w0, 4121c0 <stemlen_compare@@Base+0x1040>
  411f54:	ldr	x0, [x29, #240]
  411f58:	mov	x19, x22
  411f5c:	mov	x1, x22
  411f60:	bl	41f1b4 <strcache_add_len@@Base>
  411f64:	str	x0, [x27, #40]
  411f68:	ldr	x0, [x20, #40]
  411f6c:	str	x0, [x27, #32]
  411f70:	ldrb	w0, [x27, #137]
  411f74:	orr	w0, w0, #0x8
  411f78:	strb	w0, [x27, #137]
  411f7c:	ldr	x0, [x29, #256]
  411f80:	ldr	w1, [x0, #16]
  411f84:	ldr	x0, [x20, #8]
  411f88:	ldr	x0, [x0, x1, lsl #3]
  411f8c:	bl	40be54 <lookup_file@@Base>
  411f90:	cbz	x0, 411fa8 <stemlen_compare@@Base+0xe28>
  411f94:	ldrb	w0, [x0, #136]
  411f98:	tbz	w0, #5, 411fa8 <stemlen_compare@@Base+0xe28>
  411f9c:	ldrb	w0, [x27, #136]
  411fa0:	orr	w0, w0, #0x20
  411fa4:	strb	w0, [x27, #136]
  411fa8:	ldrh	w0, [x20, #48]
  411fac:	cmp	w0, #0x1
  411fb0:	b.hi	412328 <stemlen_compare@@Base+0x11a8>  // b.pmore
  411fb4:	ldr	x0, [x29, #224]
  411fb8:	bl	406c20 <free@plt>
  411fbc:	ldr	x0, [x29, #232]
  411fc0:	bl	406c20 <free@plt>
  411fc4:	mov	sp, x29
  411fc8:	cmp	x20, #0x0
  411fcc:	cset	w0, ne  // ne = any
  411fd0:	mov	x12, #0x1140                	// #4416
  411fd4:	ldp	x29, x30, [sp]
  411fd8:	ldp	x19, x20, [sp, #16]
  411fdc:	ldp	x21, x22, [sp, #32]
  411fe0:	ldp	x23, x24, [sp, #48]
  411fe4:	ldp	x25, x26, [sp, #64]
  411fe8:	ldp	x27, x28, [sp, #80]
  411fec:	add	sp, sp, x12
  411ff0:	ret
  411ff4:	mov	w0, #0x1                   	// #1
  411ff8:	str	w0, [x29, #168]
  411ffc:	b	4112ec <stemlen_compare@@Base+0x16c>
  412000:	ldr	x0, [x29, #256]
  412004:	ldr	w1, [x0, #16]
  412008:	ldr	x0, [x20, #8]
  41200c:	ldr	x0, [x0, x1, lsl #3]
  412010:	str	x0, [x27]
  412014:	b	411f1c <stemlen_compare@@Base+0xd9c>
  412018:	ldr	x0, [x29, #272]
  41201c:	ldr	x25, [x0, #16]
  412020:	cbnz	x25, 412098 <stemlen_compare@@Base+0xf18>
  412024:	mov	x0, #0x28                  	// #40
  412028:	bl	416a78 <xcalloc@@Base>
  41202c:	mov	x24, x0
  412030:	mov	w2, #0xffffffed            	// #-19
  412034:	ldr	x0, [x29, #272]
  412038:	ldrb	w1, [x0, #24]
  41203c:	ubfx	x0, x1, #1, #1
  412040:	ubfx	x1, x1, #0, #1
  412044:	ubfiz	w0, w0, #4, #4
  412048:	ubfiz	w1, w1, #1, #7
  41204c:	orr	w0, w0, w1
  412050:	ldrb	w1, [x24, #33]
  412054:	and	w0, w0, w23
  412058:	and	w1, w1, w2
  41205c:	orr	w0, w0, w1
  412060:	strb	w0, [x24, #33]
  412064:	ldr	x0, [x29, #272]
  412068:	ldr	x0, [x0]
  41206c:	bl	41f174 <strcache_add@@Base>
  412070:	mov	x25, x0
  412074:	ldr	w1, [x29, #164]
  412078:	cbnz	w1, 41216c <stemlen_compare@@Base+0xfec>
  41207c:	bl	40be54 <lookup_file@@Base>
  412080:	str	x0, [x24, #16]
  412084:	cbnz	x0, 412170 <stemlen_compare@@Base+0xff0>
  412088:	mov	x0, x25
  41208c:	bl	40bec0 <enter_file@@Base>
  412090:	str	x0, [x24, #16]
  412094:	b	412170 <stemlen_compare@@Base+0xff0>
  412098:	ldr	x0, [x25]
  41209c:	bl	40be54 <lookup_file@@Base>
  4120a0:	mov	x24, x0
  4120a4:	cbz	x0, 41215c <stemlen_compare@@Base+0xfdc>
  4120a8:	ldrb	w0, [x0, #137]
  4120ac:	orr	w0, w0, #0xffffff80
  4120b0:	strb	w0, [x24, #137]
  4120b4:	ldr	x0, [x25, #24]
  4120b8:	ldr	x1, [x25, #48]
  4120bc:	str	x0, [x24, #24]
  4120c0:	ldr	x0, [x25, #32]
  4120c4:	str	x0, [x24, #32]
  4120c8:	ldr	x0, [x25, #40]
  4120cc:	str	x0, [x24, #40]
  4120d0:	ldr	x0, [x25, #80]
  4120d4:	str	x0, [x24, #80]
  4120d8:	ldr	x0, [x25, #88]
  4120dc:	str	x0, [x24, #88]
  4120e0:	ldrb	w0, [x25, #138]
  4120e4:	str	x1, [x24, #48]
  4120e8:	ldr	w1, [x24, #136]
  4120ec:	ubfx	x0, x0, #2, #1
  4120f0:	and	w1, w1, w21
  4120f4:	orr	w0, w19, w0, lsl #18
  4120f8:	orr	w0, w0, w1
  4120fc:	str	w0, [x24, #136]
  412100:	ldr	x0, [x29, #272]
  412104:	ldr	x0, [x0, #8]
  412108:	bl	40be54 <lookup_file@@Base>
  41210c:	cbz	x0, 412124 <stemlen_compare@@Base+0xfa4>
  412110:	ldrb	w0, [x0, #136]
  412114:	tbz	w0, #5, 412124 <stemlen_compare@@Base+0xfa4>
  412118:	ldrb	w0, [x24, #136]
  41211c:	orr	w0, w0, #0x20
  412120:	strb	w0, [x24, #136]
  412124:	ldr	x24, [x24, #24]
  412128:	cbz	x24, 412024 <stemlen_compare@@Base+0xea4>
  41212c:	ldr	x0, [x24, #8]
  412130:	bl	40bec0 <enter_file@@Base>
  412134:	ldrb	w1, [x0, #137]
  412138:	ldrb	w3, [x24, #33]
  41213c:	stp	xzr, x0, [x24, #8]
  412140:	ubfx	x2, x1, #0, #1
  412144:	ubfx	x3, x3, #0, #1
  412148:	orr	w2, w2, w3
  41214c:	bfxil	w1, w2, #0, #1
  412150:	strb	w1, [x0, #137]
  412154:	ldr	x24, [x24]
  412158:	b	412128 <stemlen_compare@@Base+0xfa8>
  41215c:	ldr	x0, [x25]
  412160:	bl	40bec0 <enter_file@@Base>
  412164:	mov	x24, x0
  412168:	b	4120b4 <stemlen_compare@@Base+0xf34>
  41216c:	str	x0, [x24, #8]
  412170:	ldr	x0, [x29, #272]
  412174:	ldr	x0, [x0, #16]
  412178:	cbnz	x0, 4121a0 <stemlen_compare@@Base+0x1020>
  41217c:	ldr	x0, [x29, #256]
  412180:	ldr	x0, [x0]
  412184:	ldrb	w0, [x0, #50]
  412188:	cbz	w0, 4121a0 <stemlen_compare@@Base+0x1020>
  41218c:	ldr	x0, [x24, #16]
  412190:	cbnz	x0, 4121b0 <stemlen_compare@@Base+0x1030>
  412194:	ldrb	w0, [x24, #33]
  412198:	orr	w0, w0, #0x1
  41219c:	strb	w0, [x24, #33]
  4121a0:	ldr	x0, [x27, #24]
  4121a4:	str	x0, [x24]
  4121a8:	str	x24, [x27, #24]
  4121ac:	b	411f2c <stemlen_compare@@Base+0xdac>
  4121b0:	ldrb	w1, [x0, #137]
  4121b4:	orr	w1, w1, #0x1
  4121b8:	strb	w1, [x0, #137]
  4121bc:	b	4121a0 <stemlen_compare@@Base+0x1020>
  4121c0:	ldr	x0, [x29, #280]
  4121c4:	add	x21, x29, #0x138
  4121c8:	mov	x1, x26
  4121cc:	mov	x2, x0
  4121d0:	add	x19, x0, x22
  4121d4:	mov	x0, x21
  4121d8:	bl	4066c0 <memcpy@plt>
  4121dc:	ldr	x1, [x29, #240]
  4121e0:	mov	x2, x22
  4121e4:	ldr	x0, [x29, #280]
  4121e8:	add	x0, x21, x0
  4121ec:	bl	4066c0 <memcpy@plt>
  4121f0:	mov	x0, x21
  4121f4:	strb	wzr, [x21, x19]
  4121f8:	bl	41f174 <strcache_add@@Base>
  4121fc:	str	x0, [x27, #40]
  412200:	b	411f68 <stemlen_compare@@Base+0xde8>
  412204:	ldr	x0, [x29, #256]
  412208:	ldr	w0, [x0, #16]
  41220c:	cmp	w0, w22
  412210:	b.eq	412314 <stemlen_compare@@Base+0x1194>  // b.none
  412214:	ldr	x0, [x20, #16]
  412218:	lsl	x24, x22, #3
  41221c:	lsl	x26, x22, #2
  412220:	ldr	w0, [x0, x22, lsl #2]
  412224:	add	x0, x0, x23
  412228:	add	x0, x0, #0xf
  41222c:	and	x0, x0, #0xfffffffffffffff0
  412230:	sub	sp, sp, x0
  412234:	mov	x0, #0x28                  	// #40
  412238:	bl	416a78 <xcalloc@@Base>
  41223c:	mov	x21, x0
  412240:	ldr	x0, [x20, #8]
  412244:	mov	x25, sp
  412248:	ldr	x1, [x0, x24]
  41224c:	ldr	x0, [x20, #24]
  412250:	ldr	x2, [x0, x24]
  412254:	mov	x0, x25
  412258:	sub	x2, x2, x1
  41225c:	sub	x2, x2, #0x1
  412260:	bl	4066c0 <memcpy@plt>
  412264:	ldr	x0, [x20, #8]
  412268:	mov	x2, x19
  41226c:	ldr	x1, [x20, #24]
  412270:	ldr	x0, [x0, x24]
  412274:	ldr	x3, [x1, x24]
  412278:	ldr	x1, [x27, #40]
  41227c:	sub	x3, x3, x0
  412280:	sub	x3, x3, #0x1
  412284:	add	x3, x25, x3
  412288:	mov	x0, x3
  41228c:	bl	4066c0 <memcpy@plt>
  412290:	mov	x3, x0
  412294:	ldp	x2, x0, [x20, #16]
  412298:	ldr	x1, [x0, x24]
  41229c:	ldr	x0, [x20, #8]
  4122a0:	ldr	w2, [x2, x26]
  4122a4:	ldr	x0, [x0, x24]
  4122a8:	sub	x0, x1, x0
  4122ac:	sub	x2, x2, x0
  4122b0:	add	x0, x3, x19
  4122b4:	add	x2, x2, #0x1
  4122b8:	bl	4066c0 <memcpy@plt>
  4122bc:	mov	x0, x25
  4122c0:	bl	41f174 <strcache_add@@Base>
  4122c4:	str	x0, [x21, #8]
  4122c8:	bl	40bec0 <enter_file@@Base>
  4122cc:	str	x0, [x21, #16]
  4122d0:	ldr	x0, [x27, #48]
  4122d4:	str	x0, [x21]
  4122d8:	ldr	x0, [x20, #8]
  4122dc:	ldr	x0, [x0, x24]
  4122e0:	bl	40be54 <lookup_file@@Base>
  4122e4:	cbz	x0, 412300 <stemlen_compare@@Base+0x1180>
  4122e8:	ldrb	w0, [x0, #136]
  4122ec:	tbz	w0, #5, 412300 <stemlen_compare@@Base+0x1180>
  4122f0:	ldr	x1, [x21, #16]
  4122f4:	ldrb	w0, [x1, #136]
  4122f8:	orr	w0, w0, #0x20
  4122fc:	strb	w0, [x1, #136]
  412300:	ldr	x1, [x21, #16]
  412304:	ldrb	w0, [x1, #137]
  412308:	orr	w0, w0, #0x8
  41230c:	strb	w0, [x1, #137]
  412310:	str	x21, [x27, #48]
  412314:	add	x22, x22, #0x1
  412318:	ldrh	w0, [x20, #48]
  41231c:	cmp	w0, w22
  412320:	b.hi	412204 <stemlen_compare@@Base+0x1084>  // b.pmore
  412324:	b	411fb4 <stemlen_compare@@Base+0xe34>
  412328:	add	x23, x19, #0x1
  41232c:	mov	x22, #0x0                   	// #0
  412330:	b	412318 <stemlen_compare@@Base+0x1198>
  412334:	mov	x25, x1
  412338:	str	x25, [x23]
  41233c:	b	411d40 <stemlen_compare@@Base+0xbc0>

0000000000412340 <try_implicit_rule@@Base>:
  412340:	stp	x29, x30, [sp, #-48]!
  412344:	mov	x29, sp
  412348:	stp	x19, x20, [sp, #16]
  41234c:	mov	x19, x0
  412350:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  412354:	mov	w20, w1
  412358:	str	x21, [sp, #32]
  41235c:	ldr	w1, [x0, #1104]
  412360:	mov	x21, x0
  412364:	tbz	w1, #3, 412398 <try_implicit_rule@@Base+0x58>
  412368:	mov	w0, w20
  41236c:	bl	416a20 <print_spaces@@Base>
  412370:	mov	w2, #0x5                   	// #5
  412374:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  412378:	mov	x0, #0x0                   	// #0
  41237c:	add	x1, x1, #0x736
  412380:	bl	406d60 <dcgettext@plt>
  412384:	ldr	x1, [x19]
  412388:	bl	406df0 <printf@plt>
  41238c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  412390:	ldr	x0, [x0, #400]
  412394:	bl	406cb0 <fflush@plt>
  412398:	mov	w2, w20
  41239c:	mov	x0, x19
  4123a0:	mov	w3, #0x0                   	// #0
  4123a4:	mov	w1, #0x0                   	// #0
  4123a8:	bl	4111a4 <stemlen_compare@@Base+0x24>
  4123ac:	cbnz	w0, 412420 <try_implicit_rule@@Base+0xe0>
  4123b0:	ldr	x0, [x19]
  4123b4:	bl	408a20 <ar_name@@Base>
  4123b8:	cbz	w0, 412410 <try_implicit_rule@@Base+0xd0>
  4123bc:	ldr	w0, [x21, #1104]
  4123c0:	tbz	w0, #3, 4123f4 <try_implicit_rule@@Base+0xb4>
  4123c4:	mov	w0, w20
  4123c8:	bl	416a20 <print_spaces@@Base>
  4123cc:	mov	w2, #0x5                   	// #5
  4123d0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4123d4:	mov	x0, #0x0                   	// #0
  4123d8:	add	x1, x1, #0x75e
  4123dc:	bl	406d60 <dcgettext@plt>
  4123e0:	ldr	x1, [x19]
  4123e4:	bl	406df0 <printf@plt>
  4123e8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4123ec:	ldr	x0, [x0, #400]
  4123f0:	bl	406cb0 <fflush@plt>
  4123f4:	mov	w2, w20
  4123f8:	mov	x0, x19
  4123fc:	mov	w3, #0x0                   	// #0
  412400:	mov	w1, #0x1                   	// #1
  412404:	bl	4111a4 <stemlen_compare@@Base+0x24>
  412408:	cmp	w0, #0x0
  41240c:	cset	w0, ne  // ne = any
  412410:	ldp	x19, x20, [sp, #16]
  412414:	ldr	x21, [sp, #32]
  412418:	ldp	x29, x30, [sp], #48
  41241c:	ret
  412420:	mov	w0, #0x1                   	// #1
  412424:	b	412410 <try_implicit_rule@@Base+0xd0>
  412428:	mov	x2, #0x0                   	// #0
  41242c:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  412430:	mov	w0, #0x1                   	// #1
  412434:	add	x1, x1, #0x810
  412438:	b	406760 <sigprocmask@plt>
  41243c:	stp	x29, x30, [sp, #-112]!
  412440:	mov	x29, sp
  412444:	stp	x25, x26, [sp, #64]
  412448:	mov	w26, w1
  41244c:	ldr	x25, [x0, #40]
  412450:	stp	x19, x20, [sp, #16]
  412454:	mov	x20, x0
  412458:	stp	x21, x22, [sp, #32]
  41245c:	mov	w22, w4
  412460:	stp	x23, x24, [sp, #48]
  412464:	mov	w24, w2
  412468:	stp	x27, x28, [sp, #80]
  41246c:	sub	sp, sp, #0x10
  412470:	ldr	x21, [x25, #32]
  412474:	cbz	w4, 412484 <try_implicit_rule@@Base+0x144>
  412478:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41247c:	ldr	w0, [x0, #3308]
  412480:	cbnz	w0, 412588 <try_implicit_rule@@Base+0x248>
  412484:	cmp	w24, #0x0
  412488:	adrp	x19, 424000 <_IO_stdin_used@@Base+0x1720>
  41248c:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  412490:	add	x19, x19, #0x819
  412494:	b.eq	4125a8 <try_implicit_rule@@Base+0x268>  // b.none
  412498:	mov	w2, #0x5                   	// #5
  41249c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4124a0:	mov	x0, #0x0                   	// #0
  4124a4:	add	x1, x1, #0x792
  4124a8:	bl	406d60 <dcgettext@plt>
  4124ac:	mov	x23, x0
  4124b0:	cbz	w22, 4125b0 <try_implicit_rule@@Base+0x270>
  4124b4:	mov	w2, #0x5                   	// #5
  4124b8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4124bc:	mov	x0, #0x0                   	// #0
  4124c0:	add	x1, x1, #0x7a1
  4124c4:	bl	406d60 <dcgettext@plt>
  4124c8:	mov	x22, x0
  4124cc:	ldr	x28, [x21]
  4124d0:	cbnz	x28, 4125c0 <try_implicit_rule@@Base+0x280>
  4124d4:	mov	w2, #0x5                   	// #5
  4124d8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4124dc:	mov	x0, #0x0                   	// #0
  4124e0:	add	x1, x1, #0x7ac
  4124e4:	bl	406d60 <dcgettext@plt>
  4124e8:	mov	x27, x0
  4124ec:	mov	x0, x19
  4124f0:	bl	406700 <strlen@plt>
  4124f4:	mov	x28, x0
  4124f8:	mov	x0, x27
  4124fc:	bl	406700 <strlen@plt>
  412500:	mov	x1, x0
  412504:	ldr	x0, [x25]
  412508:	str	x1, [x29, #104]
  41250c:	add	x20, x20, #0x10
  412510:	bl	406700 <strlen@plt>
  412514:	mov	x21, x0
  412518:	mov	x0, x22
  41251c:	bl	406700 <strlen@plt>
  412520:	add	x21, x21, x0
  412524:	ldrb	w0, [x20, #8]
  412528:	ldr	x1, [x29, #104]
  41252c:	tst	x0, #0x1
  412530:	add	x28, x28, x1
  412534:	csel	x20, x20, xzr, ne  // ne = any
  412538:	add	x21, x21, x28
  41253c:	adrp	x28, 43e000 <expanding_var@@Base+0x328>
  412540:	str	x20, [x28, #3512]
  412544:	bl	41bf48 <show_goal_error@@Base>
  412548:	cbnz	w24, 4125f8 <try_implicit_rule@@Base+0x2b8>
  41254c:	mov	w2, #0x5                   	// #5
  412550:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  412554:	mov	x0, #0x0                   	// #0
  412558:	add	x1, x1, #0x7bd
  41255c:	bl	406d60 <dcgettext@plt>
  412560:	mov	x2, x0
  412564:	ldr	x5, [x25]
  412568:	mov	x7, x22
  41256c:	mov	w6, w26
  412570:	mov	x4, x27
  412574:	mov	x3, x19
  412578:	add	x1, x21, #0x14
  41257c:	mov	x0, #0x0                   	// #0
  412580:	bl	417aa8 <error@@Base>
  412584:	str	xzr, [x28, #3512]
  412588:	mov	sp, x29
  41258c:	ldp	x19, x20, [sp, #16]
  412590:	ldp	x21, x22, [sp, #32]
  412594:	ldp	x23, x24, [sp, #48]
  412598:	ldp	x25, x26, [sp, #64]
  41259c:	ldp	x27, x28, [sp, #80]
  4125a0:	ldp	x29, x30, [sp], #112
  4125a4:	ret
  4125a8:	mov	x23, x19
  4125ac:	b	4124b0 <try_implicit_rule@@Base+0x170>
  4125b0:	mov	x22, x19
  4125b4:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  4125b8:	add	x19, x19, #0xee4
  4125bc:	b	4124cc <try_implicit_rule@@Base+0x18c>
  4125c0:	mov	x0, x28
  4125c4:	bl	406700 <strlen@plt>
  4125c8:	add	x0, x0, #0x2a
  4125cc:	mov	x2, x28
  4125d0:	and	x0, x0, #0xfffffffffffffff0
  4125d4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4125d8:	sub	sp, sp, x0
  4125dc:	add	x1, x1, #0x7b6
  4125e0:	ldp	x3, x0, [x21, #8]
  4125e4:	add	x27, sp, #0x10
  4125e8:	add	x3, x3, x0
  4125ec:	mov	x0, x27
  4125f0:	bl	4067a0 <sprintf@plt>
  4125f4:	b	4124ec <try_implicit_rule@@Base+0x1ac>
  4125f8:	mov	w0, w24
  4125fc:	bl	406dc0 <strsignal@plt>
  412600:	mov	x26, x0
  412604:	bl	406700 <strlen@plt>
  412608:	mov	x24, x0
  41260c:	mov	x0, x23
  412610:	bl	406700 <strlen@plt>
  412614:	str	x22, [sp]
  412618:	add	x1, x24, x0
  41261c:	mov	x7, x23
  412620:	ldr	x5, [x25]
  412624:	mov	x6, x26
  412628:	mov	x4, x27
  41262c:	mov	x3, x19
  412630:	add	x1, x1, x21
  412634:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  412638:	mov	x0, #0x0                   	// #0
  41263c:	add	x2, x2, #0x7d3
  412640:	bl	417aa8 <error@@Base>
  412644:	b	412584 <try_implicit_rule@@Base+0x244>
  412648:	stp	x29, x30, [sp, #-32]!
  41264c:	mov	x29, sp
  412650:	stp	x19, x20, [sp, #16]
  412654:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  412658:	mov	x19, x0
  41265c:	add	x0, x0, #0x10
  412660:	bl	41752c <output_close@@Base>
  412664:	ldr	w0, [x20, #920]
  412668:	cbnz	w0, 412698 <try_implicit_rule@@Base+0x358>
  41266c:	ldr	x0, [x19, #40]
  412670:	ldr	x20, [x0]
  412674:	mov	x0, x20
  412678:	bl	406700 <strlen@plt>
  41267c:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  412680:	add	x1, x0, #0x14
  412684:	mov	x4, x20
  412688:	mov	x3, x19
  41268c:	add	x2, x2, #0x7e5
  412690:	mov	x0, #0x0                   	// #0
  412694:	bl	417d24 <fatal@@Base>
  412698:	bl	421cb0 <jobserver_enabled@@Base>
  41269c:	cbz	w0, 4126f0 <try_implicit_rule@@Base+0x3b0>
  4126a0:	ldr	w0, [x20, #920]
  4126a4:	cmp	w0, #0x1
  4126a8:	b.ls	4126f0 <try_implicit_rule@@Base+0x3b0>  // b.plast
  4126ac:	mov	w0, #0x1                   	// #1
  4126b0:	bl	421d18 <jobserver_release@@Base>
  4126b4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4126b8:	ldr	w0, [x0, #1104]
  4126bc:	tbz	w0, #2, 4126f0 <try_implicit_rule@@Base+0x3b0>
  4126c0:	mov	w2, #0x5                   	// #5
  4126c4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4126c8:	mov	x0, #0x0                   	// #0
  4126cc:	add	x1, x1, #0x81a
  4126d0:	bl	406d60 <dcgettext@plt>
  4126d4:	ldr	x1, [x19, #40]
  4126d8:	ldr	x2, [x1]
  4126dc:	mov	x1, x19
  4126e0:	bl	406df0 <printf@plt>
  4126e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4126e8:	ldr	x0, [x0, #400]
  4126ec:	bl	406cb0 <fflush@plt>
  4126f0:	ldr	w0, [x20, #920]
  4126f4:	sub	w0, w0, #0x1
  4126f8:	str	w0, [x20, #920]
  4126fc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  412700:	ldr	w0, [x0, #480]
  412704:	cbnz	w0, 412780 <try_implicit_rule@@Base+0x440>
  412708:	ldr	x0, [x19, #56]
  41270c:	cbnz	x0, 41275c <try_implicit_rule@@Base+0x41c>
  412710:	ldr	x20, [x19, #8]
  412714:	cbnz	x20, 41276c <try_implicit_rule@@Base+0x42c>
  412718:	ldr	x0, [x19]
  41271c:	bl	406c20 <free@plt>
  412720:	mov	x0, x19
  412724:	ldp	x19, x20, [sp, #16]
  412728:	ldp	x29, x30, [sp], #32
  41272c:	b	406c20 <free@plt>
  412730:	ldr	x0, [x0, x20, lsl #3]
  412734:	add	x20, x20, #0x1
  412738:	bl	406c20 <free@plt>
  41273c:	ldr	x1, [x19, #40]
  412740:	ldr	x0, [x19, #56]
  412744:	ldr	x1, [x1, #32]
  412748:	ldrh	w1, [x1, #48]
  41274c:	cmp	w1, w20
  412750:	b.hi	412730 <try_implicit_rule@@Base+0x3f0>  // b.pmore
  412754:	bl	406c20 <free@plt>
  412758:	b	412710 <try_implicit_rule@@Base+0x3d0>
  41275c:	mov	x20, #0x0                   	// #0
  412760:	b	41273c <try_implicit_rule@@Base+0x3fc>
  412764:	add	x20, x20, #0x8
  412768:	bl	406c20 <free@plt>
  41276c:	ldr	x0, [x20]
  412770:	cbnz	x0, 412764 <try_implicit_rule@@Base+0x424>
  412774:	ldr	x0, [x19, #8]
  412778:	bl	406c20 <free@plt>
  41277c:	b	412718 <try_implicit_rule@@Base+0x3d8>
  412780:	ldp	x19, x20, [sp, #16]
  412784:	ldp	x29, x30, [sp], #32
  412788:	ret
  41278c:	ldr	x3, [x0, #64]
  412790:	ldr	w1, [x0, #72]
  412794:	ldr	x2, [x0, #40]
  412798:	cbz	x3, 4127b8 <try_implicit_rule@@Base+0x478>
  41279c:	ldrb	w3, [x3]
  4127a0:	cbz	w3, 4127b8 <try_implicit_rule@@Base+0x478>
  4127a4:	ldr	x0, [x2, #32]
  4127a8:	sub	w1, w1, #0x1
  4127ac:	str	x1, [x0, #16]
  4127b0:	mov	w0, #0x1                   	// #1
  4127b4:	b	4127d4 <try_implicit_rule@@Base+0x494>
  4127b8:	ldr	x2, [x2, #32]
  4127bc:	ldrh	w3, [x2, #48]
  4127c0:	cmp	w1, w3
  4127c4:	b.ne	4127d8 <try_implicit_rule@@Base+0x498>  // b.any
  4127c8:	str	xzr, [x0, #64]
  4127cc:	mov	w0, #0x0                   	// #0
  4127d0:	str	xzr, [x2, #16]
  4127d4:	ret
  4127d8:	ldr	x2, [x0, #56]
  4127dc:	add	w3, w1, #0x1
  4127e0:	ldr	x1, [x2, w1, uxtw #3]
  4127e4:	str	x1, [x0, #64]
  4127e8:	str	w3, [x0, #72]
  4127ec:	b	41278c <try_implicit_rule@@Base+0x44c>

00000000004127f0 <is_bourne_compatible_shell@@Base>:
  4127f0:	stp	x29, x30, [sp, #-32]!
  4127f4:	mov	w1, #0x2f                  	// #47
  4127f8:	mov	x29, sp
  4127fc:	stp	x19, x20, [sp, #16]
  412800:	mov	x20, x0
  412804:	bl	406b00 <strrchr@plt>
  412808:	mov	w1, #0x5c                  	// #92
  41280c:	mov	x19, x0
  412810:	mov	x0, x20
  412814:	bl	406b00 <strrchr@plt>
  412818:	cmp	x19, #0x0
  41281c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  412820:	b.eq	412864 <is_bourne_compatible_shell@@Base+0x74>  // b.none
  412824:	cmp	x19, x0
  412828:	csel	x19, x19, x0, cs  // cs = hs, nlast
  41282c:	ldrb	w0, [x19]
  412830:	mov	w1, #0x5c                  	// #92
  412834:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  412838:	add	x20, x20, #0x48
  41283c:	cmp	w0, #0x2f
  412840:	ccmp	w0, w1, #0x4, ne  // ne = any
  412844:	cset	x0, eq  // eq = none
  412848:	add	x19, x19, x0
  41284c:	ldr	x1, [x20]
  412850:	cbnz	x1, 41287c <is_bourne_compatible_shell@@Base+0x8c>
  412854:	mov	w0, #0x0                   	// #0
  412858:	ldp	x19, x20, [sp, #16]
  41285c:	ldp	x29, x30, [sp], #32
  412860:	ret
  412864:	cbnz	x0, 412874 <is_bourne_compatible_shell@@Base+0x84>
  412868:	cmp	x19, #0x0
  41286c:	csel	x19, x19, x20, ne  // ne = any
  412870:	b	41282c <is_bourne_compatible_shell@@Base+0x3c>
  412874:	mov	x19, x0
  412878:	b	41282c <is_bourne_compatible_shell@@Base+0x3c>
  41287c:	mov	x0, x19
  412880:	bl	406be0 <strcmp@plt>
  412884:	cbz	w0, 412890 <is_bourne_compatible_shell@@Base+0xa0>
  412888:	add	x20, x20, #0x8
  41288c:	b	41284c <is_bourne_compatible_shell@@Base+0x5c>
  412890:	mov	w0, #0x1                   	// #1
  412894:	b	412858 <is_bourne_compatible_shell@@Base+0x68>
  412898:	stp	x29, x30, [sp, #-176]!
  41289c:	mov	x29, sp
  4128a0:	stp	x19, x20, [sp, #16]
  4128a4:	mov	x19, x0
  4128a8:	mov	x20, x3
  4128ac:	stp	x21, x22, [sp, #32]
  4128b0:	mov	x21, x1
  4128b4:	stp	x23, x24, [sp, #48]
  4128b8:	stp	x25, x26, [sp, #64]
  4128bc:	mov	x25, x2
  4128c0:	mov	x26, x4
  4128c4:	stp	x27, x28, [sp, #80]
  4128c8:	str	w5, [sp, #108]
  4128cc:	cbz	x1, 4128d4 <is_bourne_compatible_shell@@Base+0xe4>
  4128d0:	str	xzr, [x1]
  4128d4:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  4128d8:	add	x0, x23, #0x454
  4128dc:	str	x0, [sp, #96]
  4128e0:	ldrb	w1, [x19]
  4128e4:	ldr	x2, [sp, #96]
  4128e8:	ldrb	w0, [x19]
  4128ec:	ldrh	w1, [x2, x1, lsl #1]
  4128f0:	tbnz	w1, #1, 4129dc <is_bourne_compatible_shell@@Base+0x1ec>
  4128f4:	cbz	w0, 412d1c <is_bourne_compatible_shell@@Base+0x52c>
  4128f8:	cbnz	x20, 41291c <is_bourne_compatible_shell@@Base+0x12c>
  4128fc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  412900:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x1720>
  412904:	add	x20, x20, #0x83d
  412908:	ldr	w1, [x0, #2000]
  41290c:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  412910:	add	x0, x0, #0x125
  412914:	cmp	w1, #0x0
  412918:	csel	x20, x20, x0, ne  // ne = any
  41291c:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  412920:	add	x24, x24, #0x48
  412924:	ldr	x22, [x24, #64]
  412928:	cbz	x25, 412940 <is_bourne_compatible_shell@@Base+0x150>
  41292c:	mov	x1, x22
  412930:	mov	x0, x25
  412934:	mov	x22, x25
  412938:	bl	406be0 <strcmp@plt>
  41293c:	cbnz	w0, 412aac <is_bourne_compatible_shell@@Base+0x2bc>
  412940:	cbnz	x26, 4129fc <is_bourne_compatible_shell@@Base+0x20c>
  412944:	ldrb	w0, [x20]
  412948:	cmp	w0, #0x2d
  41294c:	b.ne	412aac <is_bourne_compatible_shell@@Base+0x2bc>  // b.any
  412950:	ldrb	w0, [x20, #1]
  412954:	cmp	w0, #0x63
  412958:	b.ne	412a08 <is_bourne_compatible_shell@@Base+0x218>  // b.any
  41295c:	ldrb	w0, [x20, #2]
  412960:	cbnz	w0, 412aac <is_bourne_compatible_shell@@Base+0x2bc>
  412964:	mov	x0, x19
  412968:	bl	406700 <strlen@plt>
  41296c:	add	x25, x0, #0x1
  412970:	adrp	x27, 441000 <commands_started@@Base+0x1c0>
  412974:	mov	w26, #0x0                   	// #0
  412978:	mov	x28, #0x0                   	// #0
  41297c:	lsl	x0, x25, #3
  412980:	bl	416a54 <xmalloc@@Base>
  412984:	mov	x23, x0
  412988:	mov	x0, x25
  41298c:	bl	416a54 <xmalloc@@Base>
  412990:	mov	x25, x0
  412994:	mov	x2, x0
  412998:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41299c:	add	x0, x0, #0x845
  4129a0:	mov	x6, x19
  4129a4:	str	x0, [sp, #112]
  4129a8:	add	x0, x27, #0x804
  4129ac:	mov	w3, #0x0                   	// #0
  4129b0:	mov	w5, #0x0                   	// #0
  4129b4:	str	x25, [x23]
  4129b8:	str	wzr, [sp, #104]
  4129bc:	str	x0, [sp, #120]
  4129c0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4129c4:	add	x0, x0, #0x841
  4129c8:	str	x0, [sp, #128]
  4129cc:	ldrb	w27, [x6]
  4129d0:	cbnz	w27, 412a24 <is_bourne_compatible_shell@@Base+0x234>
  4129d4:	cbz	w26, 412ccc <is_bourne_compatible_shell@@Base+0x4dc>
  4129d8:	b	412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  4129dc:	add	x19, x19, #0x1
  4129e0:	b	4128e0 <is_bourne_compatible_shell@@Base+0xf0>
  4129e4:	sub	w1, w0, #0x9
  4129e8:	cmp	w0, #0x20
  4129ec:	and	w1, w1, #0xff
  4129f0:	ccmp	w1, #0x1, #0x0, ne  // ne = any
  4129f4:	b.hi	412aac <is_bourne_compatible_shell@@Base+0x2bc>  // b.pmore
  4129f8:	add	x26, x26, #0x1
  4129fc:	ldrb	w0, [x26]
  412a00:	cbnz	w0, 4129e4 <is_bourne_compatible_shell@@Base+0x1f4>
  412a04:	b	412944 <is_bourne_compatible_shell@@Base+0x154>
  412a08:	cmp	w0, #0x65
  412a0c:	b.ne	412aac <is_bourne_compatible_shell@@Base+0x2bc>  // b.any
  412a10:	ldrb	w0, [x20, #2]
  412a14:	cmp	w0, #0x63
  412a18:	b.ne	412aac <is_bourne_compatible_shell@@Base+0x2bc>  // b.any
  412a1c:	ldrb	w0, [x20, #3]
  412a20:	b	412960 <is_bourne_compatible_shell@@Base+0x170>
  412a24:	cbz	w26, 412b70 <is_bourne_compatible_shell@@Base+0x380>
  412a28:	cmp	w26, w27
  412a2c:	b.ne	412a50 <is_bourne_compatible_shell@@Base+0x260>  // b.any
  412a30:	ldr	x0, [x23]
  412a34:	cmp	x0, x2
  412a38:	b.eq	412d64 <is_bourne_compatible_shell@@Base+0x574>  // b.none
  412a3c:	ldurb	w0, [x2, #-1]
  412a40:	cmp	w0, #0x0
  412a44:	csinc	w3, w3, wzr, ne  // ne = any
  412a48:	mov	w26, #0x0                   	// #0
  412a4c:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412a50:	cmp	w27, #0x5c
  412a54:	b.ne	412a8c <is_bourne_compatible_shell@@Base+0x29c>  // b.any
  412a58:	ldrb	w0, [x6, #1]
  412a5c:	cmp	w0, #0xa
  412a60:	b.ne	412b38 <is_bourne_compatible_shell@@Base+0x348>  // b.any
  412a64:	add	x9, x6, #0x1
  412a68:	cmp	w26, #0x22
  412a6c:	b.eq	412a84 <is_bourne_compatible_shell@@Base+0x294>  // b.none
  412a70:	mov	x0, x2
  412a74:	strb	w27, [x0], #2
  412a78:	ldrb	w1, [x6, #1]
  412a7c:	strb	w1, [x2, #1]
  412a80:	mov	x2, x0
  412a84:	mov	x6, x9
  412a88:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412a8c:	cmp	w27, #0xa
  412a90:	b.ne	412b38 <is_bourne_compatible_shell@@Base+0x348>  // b.any
  412a94:	cbz	x21, 412b68 <is_bourne_compatible_shell@@Base+0x378>
  412a98:	str	x6, [x21]
  412a9c:	mov	x0, x25
  412aa0:	bl	406c20 <free@plt>
  412aa4:	mov	x0, x23
  412aa8:	bl	406c20 <free@plt>
  412aac:	mov	x0, x20
  412ab0:	bl	406700 <strlen@plt>
  412ab4:	mov	x25, x0
  412ab8:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  412abc:	ldr	w0, [x0, #2052]
  412ac0:	cbz	w0, 412e38 <is_bourne_compatible_shell@@Base+0x648>
  412ac4:	mov	x0, x22
  412ac8:	bl	4127f0 <is_bourne_compatible_shell@@Base>
  412acc:	cbnz	w0, 412e14 <is_bourne_compatible_shell@@Base+0x624>
  412ad0:	lsr	x0, x25, #1
  412ad4:	add	x0, x0, #0x4
  412ad8:	lsl	x0, x0, #3
  412adc:	bl	416a54 <xmalloc@@Base>
  412ae0:	mov	x23, x0
  412ae4:	mov	x0, x22
  412ae8:	mov	x21, x23
  412aec:	bl	416c24 <xstrdup@@Base>
  412af0:	str	x0, [x21], #8
  412af4:	str	x20, [sp, #160]
  412af8:	mov	w20, #0x1                   	// #1
  412afc:	add	x1, sp, #0xa8
  412b00:	add	x0, sp, #0xa0
  412b04:	add	w20, w20, #0x1
  412b08:	bl	416ccc <find_next_token@@Base>
  412b0c:	cbnz	x0, 412e28 <is_bourne_compatible_shell@@Base+0x638>
  412b10:	str	x19, [x21]
  412b14:	str	xzr, [x23, w20, sxtw #3]
  412b18:	mov	x0, x23
  412b1c:	ldp	x19, x20, [sp, #16]
  412b20:	ldp	x21, x22, [sp, #32]
  412b24:	ldp	x23, x24, [sp, #48]
  412b28:	ldp	x25, x26, [sp, #64]
  412b2c:	ldp	x27, x28, [sp, #80]
  412b30:	ldp	x29, x30, [sp], #176
  412b34:	ret
  412b38:	cmp	w26, #0x22
  412b3c:	b.ne	412b68 <is_bourne_compatible_shell@@Base+0x378>  // b.any
  412b40:	ldr	x0, [sp, #128]
  412b44:	mov	w1, w27
  412b48:	stp	x2, x6, [sp, #136]
  412b4c:	stp	w5, w3, [sp, #152]
  412b50:	bl	406c40 <strchr@plt>
  412b54:	ldp	w5, w3, [sp, #152]
  412b58:	ldp	x2, x6, [sp, #136]
  412b5c:	cbz	x0, 412b68 <is_bourne_compatible_shell@@Base+0x378>
  412b60:	ldr	w0, [x24, #72]
  412b64:	cbnz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412b68:	strb	w27, [x2], #1
  412b6c:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412b70:	ldr	x0, [sp, #112]
  412b74:	mov	w1, w27
  412b78:	stp	x2, x6, [sp, #136]
  412b7c:	stp	w5, w3, [sp, #152]
  412b80:	bl	406c40 <strchr@plt>
  412b84:	cbnz	x0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412b88:	ldr	x0, [sp, #120]
  412b8c:	ldp	w5, w3, [sp, #152]
  412b90:	ldr	w0, [x0]
  412b94:	ldp	x2, x6, [sp, #136]
  412b98:	cbz	w0, 412ba4 <is_bourne_compatible_shell@@Base+0x3b4>
  412b9c:	cmp	w27, #0xa
  412ba0:	b.eq	412a9c <is_bourne_compatible_shell@@Base+0x2ac>  // b.none
  412ba4:	cmp	w27, #0x22
  412ba8:	b.eq	412c50 <is_bourne_compatible_shell@@Base+0x460>  // b.none
  412bac:	b.hi	412c38 <is_bourne_compatible_shell@@Base+0x448>  // b.pmore
  412bb0:	cmp	w27, #0xa
  412bb4:	b.eq	412cc4 <is_bourne_compatible_shell@@Base+0x4d4>  // b.none
  412bb8:	cmp	w27, #0x20
  412bbc:	b.eq	412bc8 <is_bourne_compatible_shell@@Base+0x3d8>  // b.none
  412bc0:	cmp	w27, #0x9
  412bc4:	b.ne	412b68 <is_bourne_compatible_shell@@Base+0x378>  // b.any
  412bc8:	mov	x27, x2
  412bcc:	add	x28, x28, #0x1
  412bd0:	ldr	w1, [sp, #104]
  412bd4:	eor	w0, w5, #0x1
  412bd8:	strb	wzr, [x27], #1
  412bdc:	orr	w0, w1, w0
  412be0:	str	w0, [sp, #104]
  412be4:	eor	w7, w0, #0x1
  412be8:	str	x27, [x23, x28, lsl #3]
  412bec:	ands	w26, w7, w5
  412bf0:	b.ne	412a9c <is_bourne_compatible_shell@@Base+0x2ac>  // b.any
  412bf4:	cmp	x28, #0x1
  412bf8:	b.ne	412c0c <is_bourne_compatible_shell@@Base+0x41c>  // b.any
  412bfc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  412c00:	add	x5, x0, #0xd10
  412c04:	ldr	x3, [x5]
  412c08:	cbnz	x3, 412d24 <is_bourne_compatible_shell@@Base+0x534>
  412c0c:	mov	x0, x6
  412c10:	ldrb	w1, [x0, #1]
  412c14:	mov	x6, x0
  412c18:	ldr	x2, [sp, #96]
  412c1c:	add	x0, x0, #0x1
  412c20:	ldrh	w1, [x2, x1, lsl #1]
  412c24:	tbnz	w1, #1, 412c10 <is_bourne_compatible_shell@@Base+0x420>
  412c28:	mov	x2, x27
  412c2c:	mov	w3, #0x0                   	// #0
  412c30:	mov	w5, #0x0                   	// #0
  412c34:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412c38:	cmp	w27, #0x3d
  412c3c:	b.eq	412c58 <is_bourne_compatible_shell@@Base+0x468>  // b.none
  412c40:	cmp	w27, #0x5c
  412c44:	b.eq	412c7c <is_bourne_compatible_shell@@Base+0x48c>  // b.none
  412c48:	cmp	w27, #0x27
  412c4c:	b.ne	412b68 <is_bourne_compatible_shell@@Base+0x378>  // b.any
  412c50:	mov	w26, w27
  412c54:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412c58:	ldr	w0, [sp, #104]
  412c5c:	cbnz	w0, 412c68 <is_bourne_compatible_shell@@Base+0x478>
  412c60:	ldr	w0, [x24, #72]
  412c64:	cbnz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412c68:	mov	w0, #0x3d                  	// #61
  412c6c:	mov	w5, #0x1                   	// #1
  412c70:	strb	w0, [x2], #1
  412c74:	add	x6, x6, #0x1
  412c78:	b	4129cc <is_bourne_compatible_shell@@Base+0x1dc>
  412c7c:	mov	x1, x6
  412c80:	ldrb	w0, [x1, #1]!
  412c84:	cmp	w0, #0xa
  412c88:	b.ne	412cb4 <is_bourne_compatible_shell@@Base+0x4c4>  // b.any
  412c8c:	ldr	x0, [x23, x28, lsl #3]
  412c90:	cmp	x2, x0
  412c94:	b.ne	412cbc <is_bourne_compatible_shell@@Base+0x4cc>  // b.any
  412c98:	ldrb	w0, [x1, #1]
  412c9c:	mov	x6, x1
  412ca0:	ldr	x4, [sp, #96]
  412ca4:	add	x1, x1, #0x1
  412ca8:	ldrh	w0, [x4, x0, lsl #1]
  412cac:	tbnz	w0, #1, 412c98 <is_bourne_compatible_shell@@Base+0x4a8>
  412cb0:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412cb4:	cbz	w0, 412c74 <is_bourne_compatible_shell@@Base+0x484>
  412cb8:	strb	w0, [x2], #1
  412cbc:	mov	x6, x1
  412cc0:	b	412c74 <is_bourne_compatible_shell@@Base+0x484>
  412cc4:	cbz	x21, 412b68 <is_bourne_compatible_shell@@Base+0x378>
  412cc8:	str	x6, [x21]
  412ccc:	strb	wzr, [x2]
  412cd0:	ldr	x0, [x23, x28, lsl #3]
  412cd4:	ldrb	w0, [x0]
  412cd8:	cbnz	w0, 412ce0 <is_bourne_compatible_shell@@Base+0x4f0>
  412cdc:	cbz	w3, 412ce4 <is_bourne_compatible_shell@@Base+0x4f4>
  412ce0:	add	x28, x28, #0x1
  412ce4:	str	xzr, [x23, x28, lsl #3]
  412ce8:	cmp	x28, #0x1
  412cec:	ldr	x27, [x23]
  412cf0:	b.ne	412d08 <is_bourne_compatible_shell@@Base+0x518>  // b.any
  412cf4:	adrp	x26, 424000 <_IO_stdin_used@@Base+0x1720>
  412cf8:	add	x28, x27, #0x1
  412cfc:	add	x26, x26, #0xd10
  412d00:	ldr	x2, [x26]
  412d04:	cbnz	x2, 412d6c <is_bourne_compatible_shell@@Base+0x57c>
  412d08:	cbnz	x27, 412b18 <is_bourne_compatible_shell@@Base+0x328>
  412d0c:	mov	x0, x25
  412d10:	bl	406c20 <free@plt>
  412d14:	mov	x0, x23
  412d18:	bl	406c20 <free@plt>
  412d1c:	mov	x23, #0x0                   	// #0
  412d20:	b	412b18 <is_bourne_compatible_shell@@Base+0x328>
  412d24:	ldr	x1, [x23]
  412d28:	cmp	x1, x3
  412d2c:	b.eq	412a9c <is_bourne_compatible_shell@@Base+0x2ac>  // b.none
  412d30:	ldrb	w9, [x3]
  412d34:	ldrb	w0, [x1]
  412d38:	cmp	w0, w9
  412d3c:	b.ne	412d5c <is_bourne_compatible_shell@@Base+0x56c>  // b.any
  412d40:	stp	x6, x5, [sp, #136]
  412d44:	cbz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412d48:	add	x1, x1, #0x1
  412d4c:	add	x0, x3, #0x1
  412d50:	bl	406be0 <strcmp@plt>
  412d54:	ldp	x6, x5, [sp, #136]
  412d58:	cbz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412d5c:	add	x5, x5, #0x8
  412d60:	b	412c04 <is_bourne_compatible_shell@@Base+0x414>
  412d64:	mov	w3, #0x1                   	// #1
  412d68:	b	412a48 <is_bourne_compatible_shell@@Base+0x258>
  412d6c:	cmp	x2, x27
  412d70:	b.eq	412a9c <is_bourne_compatible_shell@@Base+0x2ac>  // b.none
  412d74:	ldrb	w1, [x2]
  412d78:	ldrb	w0, [x27]
  412d7c:	cmp	w0, w1
  412d80:	b.ne	412d98 <is_bourne_compatible_shell@@Base+0x5a8>  // b.any
  412d84:	cbz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412d88:	mov	x1, x28
  412d8c:	add	x0, x2, #0x1
  412d90:	bl	406be0 <strcmp@plt>
  412d94:	cbz	w0, 412a9c <is_bourne_compatible_shell@@Base+0x2ac>
  412d98:	add	x26, x26, #0x8
  412d9c:	b	412d00 <is_bourne_compatible_shell@@Base+0x510>
  412da0:	add	x0, x0, #0x1
  412da4:	ldrb	w3, [x0]
  412da8:	ldr	x5, [sp, #96]
  412dac:	ldrb	w1, [x0]
  412db0:	ldrh	w3, [x5, x3, lsl #1]
  412db4:	tbnz	w3, #1, 412da0 <is_bourne_compatible_shell@@Base+0x5b0>
  412db8:	sub	w1, w1, #0x2b
  412dbc:	and	w1, w1, #0xff
  412dc0:	cmp	w1, #0x15
  412dc4:	b.hi	412dd0 <is_bourne_compatible_shell@@Base+0x5e0>  // b.pmore
  412dc8:	lsr	x1, x4, x1
  412dcc:	tbnz	w1, #0, 412da0 <is_bourne_compatible_shell@@Base+0x5b0>
  412dd0:	mov	w1, #0x0                   	// #0
  412dd4:	b	412dec <is_bourne_compatible_shell@@Base+0x5fc>
  412dd8:	strb	w3, [x2], #1
  412ddc:	ldrb	w3, [x0], #1
  412de0:	cmp	w3, #0x5c
  412de4:	b.ne	412df8 <is_bourne_compatible_shell@@Base+0x608>  // b.any
  412de8:	eor	w1, w1, #0x1
  412dec:	ldrb	w3, [x0]
  412df0:	cbnz	w3, 412dd8 <is_bourne_compatible_shell@@Base+0x5e8>
  412df4:	b	412e04 <is_bourne_compatible_shell@@Base+0x614>
  412df8:	cmp	w3, #0xa
  412dfc:	b.ne	412dd0 <is_bourne_compatible_shell@@Base+0x5e0>  // b.any
  412e00:	cbnz	w1, 412dd0 <is_bourne_compatible_shell@@Base+0x5e0>
  412e04:	ldrb	w1, [x0]
  412e08:	cbnz	w1, 412da4 <is_bourne_compatible_shell@@Base+0x5b4>
  412e0c:	strb	wzr, [x2]
  412e10:	b	412ad0 <is_bourne_compatible_shell@@Base+0x2e0>
  412e14:	mov	x4, #0x5                   	// #5
  412e18:	mov	x2, x19
  412e1c:	mov	x0, x19
  412e20:	movk	x4, #0x20, lsl #16
  412e24:	b	412e04 <is_bourne_compatible_shell@@Base+0x614>
  412e28:	ldr	x1, [sp, #168]
  412e2c:	bl	416c40 <xstrndup@@Base>
  412e30:	str	x0, [x21], #8
  412e34:	b	412afc <is_bourne_compatible_shell@@Base+0x30c>
  412e38:	mov	x0, x22
  412e3c:	bl	406700 <strlen@plt>
  412e40:	mov	x23, x0
  412e44:	mov	x0, x19
  412e48:	bl	406700 <strlen@plt>
  412e4c:	add	x0, x23, x0
  412e50:	add	x1, x25, #0x3
  412e54:	add	x0, x1, x0, lsl #1
  412e58:	bl	416a54 <xmalloc@@Base>
  412e5c:	mov	x26, x0
  412e60:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  412e64:	mov	x27, x0
  412e68:	add	x2, x2, #0x845
  412e6c:	mov	w3, #0x5c                  	// #92
  412e70:	ldrb	w1, [x22]
  412e74:	add	x28, x27, #0x1
  412e78:	cbnz	w1, 412efc <is_bourne_compatible_shell@@Base+0x70c>
  412e7c:	mov	w3, #0x20                  	// #32
  412e80:	strb	w3, [x27]
  412e84:	mov	x1, x20
  412e88:	mov	x0, x28
  412e8c:	mov	x2, x25
  412e90:	str	w3, [sp, #104]
  412e94:	bl	4066c0 <memcpy@plt>
  412e98:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  412e9c:	ldr	w3, [sp, #104]
  412ea0:	add	x1, x28, x25
  412ea4:	mov	x4, #0x21                  	// #33
  412ea8:	add	x27, x27, #0x398
  412eac:	add	x22, x1, #0x1
  412eb0:	strb	w3, [x28, x25]
  412eb4:	adrp	x28, 424000 <_IO_stdin_used@@Base+0x1720>
  412eb8:	add	x28, x28, #0x845
  412ebc:	movk	x4, #0x400, lsl #48
  412ec0:	mov	w5, #0xa                   	// #10
  412ec4:	mov	w3, #0x5c                  	// #92
  412ec8:	ldrb	w1, [x19]
  412ecc:	cbz	w1, 412ee0 <is_bourne_compatible_shell@@Base+0x6f0>
  412ed0:	cbz	x21, 412f2c <is_bourne_compatible_shell@@Base+0x73c>
  412ed4:	cmp	w1, #0xa
  412ed8:	b.ne	412f2c <is_bourne_compatible_shell@@Base+0x73c>  // b.any
  412edc:	str	x19, [x21]
  412ee0:	add	x25, x25, #0x2
  412ee4:	add	x25, x25, x23
  412ee8:	add	x25, x26, x25
  412eec:	cmp	x22, x25
  412ef0:	b.ne	412fe4 <is_bourne_compatible_shell@@Base+0x7f4>  // b.any
  412ef4:	mov	x0, x26
  412ef8:	b	412d18 <is_bourne_compatible_shell@@Base+0x528>
  412efc:	mov	x0, x2
  412f00:	str	w3, [sp, #104]
  412f04:	bl	406c40 <strchr@plt>
  412f08:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  412f0c:	ldr	w3, [sp, #104]
  412f10:	add	x2, x1, #0x845
  412f14:	cbz	x0, 412f20 <is_bourne_compatible_shell@@Base+0x730>
  412f18:	strb	w3, [x27]
  412f1c:	mov	x27, x28
  412f20:	ldrb	w0, [x22], #1
  412f24:	strb	w0, [x27], #1
  412f28:	b	412e70 <is_bourne_compatible_shell@@Base+0x680>
  412f2c:	add	x20, x22, #0x1
  412f30:	cmp	w1, #0x5c
  412f34:	b.ne	412f6c <is_bourne_compatible_shell@@Base+0x77c>  // b.any
  412f38:	ldrb	w0, [x19, #1]
  412f3c:	cmp	w0, #0xa
  412f40:	b.ne	412f6c <is_bourne_compatible_shell@@Base+0x77c>  // b.any
  412f44:	strb	w1, [x22]
  412f48:	ldr	w0, [x27, #4]
  412f4c:	cbnz	w0, 412f58 <is_bourne_compatible_shell@@Base+0x768>
  412f50:	add	x20, x22, #0x2
  412f54:	strb	w1, [x22, #1]
  412f58:	mov	x22, x20
  412f5c:	add	x19, x19, #0x1
  412f60:	strb	w5, [x22], #1
  412f64:	add	x19, x19, #0x1
  412f68:	b	412ec8 <is_bourne_compatible_shell@@Base+0x6d8>
  412f6c:	ldr	w0, [x24, #72]
  412f70:	cbz	w0, 412fd0 <is_bourne_compatible_shell@@Base+0x7e0>
  412f74:	ldr	w0, [x27, #4]
  412f78:	cbnz	w0, 412fd0 <is_bourne_compatible_shell@@Base+0x7e0>
  412f7c:	sub	w2, w1, #0x22
  412f80:	and	w2, w2, #0xff
  412f84:	cmp	w2, #0x3a
  412f88:	b.hi	412f94 <is_bourne_compatible_shell@@Base+0x7a4>  // b.pmore
  412f8c:	lsr	x2, x4, x2
  412f90:	tbnz	w2, #0, 412fc8 <is_bourne_compatible_shell@@Base+0x7d8>
  412f94:	ldr	x0, [sp, #96]
  412f98:	ldrh	w0, [x0, w1, sxtw #1]
  412f9c:	tst	w0, #0x6
  412fa0:	b.ne	412fc8 <is_bourne_compatible_shell@@Base+0x7d8>  // b.any
  412fa4:	mov	x0, x28
  412fa8:	str	w3, [sp, #104]
  412fac:	str	w5, [sp, #112]
  412fb0:	bl	406c40 <strchr@plt>
  412fb4:	mov	x4, #0x21                  	// #33
  412fb8:	ldr	w3, [sp, #104]
  412fbc:	ldr	w5, [sp, #112]
  412fc0:	movk	x4, #0x400, lsl #48
  412fc4:	cbz	x0, 412fd0 <is_bourne_compatible_shell@@Base+0x7e0>
  412fc8:	strb	w3, [x22]
  412fcc:	mov	x22, x20
  412fd0:	mov	x1, x22
  412fd4:	ldrb	w0, [x19]
  412fd8:	strb	w0, [x1], #1
  412fdc:	mov	x22, x1
  412fe0:	b	412f64 <is_bourne_compatible_shell@@Base+0x774>
  412fe4:	strb	wzr, [x22]
  412fe8:	ldr	w0, [x24, #72]
  412fec:	cbz	w0, 41301c <is_bourne_compatible_shell@@Base+0x82c>
  412ff0:	ldr	w5, [sp, #108]
  412ff4:	mov	x4, #0x0                   	// #0
  412ff8:	mov	x3, #0x0                   	// #0
  412ffc:	mov	x2, #0x0                   	// #0
  413000:	mov	x1, #0x0                   	// #0
  413004:	mov	x0, x26
  413008:	bl	412898 <is_bourne_compatible_shell@@Base+0xa8>
  41300c:	mov	x23, x0
  413010:	mov	x0, x26
  413014:	bl	406c20 <free@plt>
  413018:	b	412b18 <is_bourne_compatible_shell@@Base+0x328>
  41301c:	mov	w2, #0x5                   	// #5
  413020:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413024:	mov	x0, #0x0                   	// #0
  413028:	add	x1, x1, #0x85a
  41302c:	bl	406d60 <dcgettext@plt>
  413030:	mov	x2, x0
  413034:	adrp	x3, 424000 <_IO_stdin_used@@Base+0x1720>
  413038:	mov	w4, #0xe16                 	// #3606
  41303c:	add	x3, x3, #0x898
  413040:	mov	x1, #0x1d                  	// #29
  413044:	mov	x0, #0x0                   	// #0
  413048:	bl	417d24 <fatal@@Base>

000000000041304c <unblock_all_sigs@@Base>:
  41304c:	stp	x29, x30, [sp, #-144]!
  413050:	mov	x29, sp
  413054:	add	x0, sp, #0x10
  413058:	bl	406990 <sigemptyset@plt>
  41305c:	add	x1, sp, #0x10
  413060:	mov	x2, #0x0                   	// #0
  413064:	mov	w0, #0x2                   	// #2
  413068:	bl	406760 <sigprocmask@plt>
  41306c:	ldp	x29, x30, [sp], #144
  413070:	ret

0000000000413074 <child_handler@@Base>:
  413074:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413078:	add	x0, x0, #0x398
  41307c:	ldr	w1, [x0, #8]
  413080:	add	w1, w1, #0x1
  413084:	str	w1, [x0, #8]
  413088:	b	421e30 <jobserver_signal@@Base>

000000000041308c <child_execute_job@@Base>:
  41308c:	sub	sp, sp, #0x270
  413090:	stp	x29, x30, [sp]
  413094:	mov	x29, sp
  413098:	stp	x19, x20, [sp, #16]
  41309c:	mov	x20, x0
  4130a0:	stp	x21, x22, [sp, #32]
  4130a4:	mov	x21, x2
  4130a8:	stp	x23, x24, [sp, #48]
  4130ac:	stp	x25, x26, [sp, #64]
  4130b0:	cbz	w1, 41317c <child_execute_job@@Base+0xf0>
  4130b4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4130b8:	ldr	x0, [x0, #408]
  4130bc:	bl	4068c0 <fileno@plt>
  4130c0:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  4130c4:	mov	w26, w0
  4130c8:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  4130cc:	ldr	x0, [x25, #400]
  4130d0:	bl	4068c0 <fileno@plt>
  4130d4:	mov	w23, w0
  4130d8:	ldr	x0, [x24, #376]
  4130dc:	bl	4068c0 <fileno@plt>
  4130e0:	mov	w22, w0
  4130e4:	ldrb	w0, [x20, #24]
  4130e8:	tbz	w0, #0, 413104 <child_execute_job@@Base+0x78>
  4130ec:	ldr	w0, [x20, #16]
  4130f0:	cmp	w0, #0x0
  4130f4:	csel	w23, w23, w0, lt  // lt = tstop
  4130f8:	ldr	w0, [x20, #20]
  4130fc:	cmp	w0, #0x0
  413100:	csel	w22, w22, w0, lt  // lt = tstop
  413104:	add	x0, sp, #0x120
  413108:	bl	406d00 <posix_spawnattr_init@plt>
  41310c:	mov	w19, w0
  413110:	cbnz	w0, 41312c <child_execute_job@@Base+0xa0>
  413114:	add	x0, sp, #0x50
  413118:	bl	406b90 <posix_spawn_file_actions_init@plt>
  41311c:	mov	w19, w0
  413120:	cbz	w0, 413184 <child_execute_job@@Base+0xf8>
  413124:	add	x0, sp, #0x120
  413128:	bl	4069a0 <posix_spawnattr_destroy@plt>
  41312c:	mov	w0, #0xffffffff            	// #-1
  413130:	str	w0, [sp, #160]
  413134:	ldr	x0, [x21]
  413138:	bl	406700 <strlen@plt>
  41313c:	mov	x20, x0
  413140:	mov	w0, w19
  413144:	bl	406ad0 <strerror@plt>
  413148:	bl	406700 <strlen@plt>
  41314c:	add	x20, x20, x0
  413150:	ldr	x21, [x21]
  413154:	mov	w0, w19
  413158:	bl	406ad0 <strerror@plt>
  41315c:	mov	x4, x0
  413160:	mov	x3, x21
  413164:	mov	x1, x20
  413168:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  41316c:	mov	x0, #0x0                   	// #0
  413170:	add	x2, x2, #0x1a8
  413174:	bl	417aa8 <error@@Base>
  413178:	b	413294 <child_execute_job@@Base+0x208>
  41317c:	bl	42222c <get_bad_stdin@@Base>
  413180:	b	4130c0 <child_execute_job@@Base+0x34>
  413184:	add	x0, sp, #0xa0
  413188:	bl	406990 <sigemptyset@plt>
  41318c:	add	x1, sp, #0xa0
  413190:	add	x0, sp, #0x120
  413194:	bl	406b60 <posix_spawnattr_setsigmask@plt>
  413198:	mov	w19, w0
  41319c:	cbnz	w0, 413278 <child_execute_job@@Base+0x1ec>
  4131a0:	tbz	w26, #31, 413244 <child_execute_job@@Base+0x1b8>
  4131a4:	ldr	x0, [x25, #400]
  4131a8:	bl	4068c0 <fileno@plt>
  4131ac:	cmp	w0, w23
  4131b0:	b.ne	4132b4 <child_execute_job@@Base+0x228>  // b.any
  4131b4:	ldr	x0, [x24, #376]
  4131b8:	bl	4068c0 <fileno@plt>
  4131bc:	cmp	w0, w22
  4131c0:	b.ne	4132d8 <child_execute_job@@Base+0x24c>  // b.any
  4131c4:	add	x0, sp, #0x120
  4131c8:	mov	w1, #0x49                  	// #73
  4131cc:	bl	406b40 <posix_spawnattr_setflags@plt>
  4131d0:	mov	w19, w0
  4131d4:	cbnz	w0, 413278 <child_execute_job@@Base+0x1ec>
  4131d8:	ldr	x0, [x20, #8]
  4131dc:	ldr	x1, [x0]
  4131e0:	cbz	x1, 413224 <child_execute_job@@Base+0x198>
  4131e4:	ldrb	w2, [x1]
  4131e8:	cmp	w2, #0x50
  4131ec:	b.ne	4132fc <child_execute_job@@Base+0x270>  // b.any
  4131f0:	ldrb	w2, [x1, #1]
  4131f4:	cmp	w2, #0x41
  4131f8:	b.ne	4132fc <child_execute_job@@Base+0x270>  // b.any
  4131fc:	ldrb	w2, [x1, #2]
  413200:	cmp	w2, #0x54
  413204:	b.ne	4132fc <child_execute_job@@Base+0x270>  // b.any
  413208:	ldrb	w2, [x1, #3]
  41320c:	cmp	w2, #0x48
  413210:	b.ne	4132fc <child_execute_job@@Base+0x270>  // b.any
  413214:	ldrb	w2, [x1, #4]
  413218:	cmp	w2, #0x3d
  41321c:	b.ne	4132fc <child_execute_job@@Base+0x270>  // b.any
  413220:	add	x1, x1, #0x5
  413224:	ldr	x0, [x21]
  413228:	mov	w2, #0x0                   	// #0
  41322c:	bl	4222c4 <find_in_given_path@@Base>
  413230:	mov	x22, x0
  413234:	cbnz	x0, 413304 <child_execute_job@@Base+0x278>
  413238:	bl	406e00 <__errno_location@plt>
  41323c:	ldr	w19, [x0]
  413240:	b	413278 <child_execute_job@@Base+0x1ec>
  413244:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  413248:	ldr	x0, [x19, #408]
  41324c:	bl	4068c0 <fileno@plt>
  413250:	cmp	w0, w26
  413254:	b.eq	4131a4 <child_execute_job@@Base+0x118>  // b.none
  413258:	ldr	x0, [x19, #408]
  41325c:	bl	4068c0 <fileno@plt>
  413260:	mov	w2, w0
  413264:	mov	w1, w26
  413268:	add	x0, sp, #0x50
  41326c:	bl	4068e0 <posix_spawn_file_actions_adddup2@plt>
  413270:	mov	w19, w0
  413274:	cbz	w0, 4131a4 <child_execute_job@@Base+0x118>
  413278:	add	x0, sp, #0x50
  41327c:	bl	406a70 <posix_spawn_file_actions_destroy@plt>
  413280:	add	x0, sp, #0x120
  413284:	bl	4069a0 <posix_spawnattr_destroy@plt>
  413288:	cbnz	w19, 41312c <child_execute_job@@Base+0xa0>
  41328c:	ldr	w0, [sp, #160]
  413290:	tbnz	w0, #31, 413134 <child_execute_job@@Base+0xa8>
  413294:	ldr	w0, [sp, #160]
  413298:	ldp	x29, x30, [sp]
  41329c:	ldp	x19, x20, [sp, #16]
  4132a0:	ldp	x21, x22, [sp, #32]
  4132a4:	ldp	x23, x24, [sp, #48]
  4132a8:	ldp	x25, x26, [sp, #64]
  4132ac:	add	sp, sp, #0x270
  4132b0:	ret
  4132b4:	ldr	x0, [x25, #400]
  4132b8:	bl	4068c0 <fileno@plt>
  4132bc:	mov	w2, w0
  4132c0:	mov	w1, w23
  4132c4:	add	x0, sp, #0x50
  4132c8:	bl	4068e0 <posix_spawn_file_actions_adddup2@plt>
  4132cc:	mov	w19, w0
  4132d0:	cbz	w0, 4131b4 <child_execute_job@@Base+0x128>
  4132d4:	b	413278 <child_execute_job@@Base+0x1ec>
  4132d8:	ldr	x0, [x24, #376]
  4132dc:	bl	4068c0 <fileno@plt>
  4132e0:	mov	w2, w0
  4132e4:	mov	w1, w22
  4132e8:	add	x0, sp, #0x50
  4132ec:	bl	4068e0 <posix_spawn_file_actions_adddup2@plt>
  4132f0:	mov	w19, w0
  4132f4:	cbz	w0, 4131c4 <child_execute_job@@Base+0x138>
  4132f8:	b	413278 <child_execute_job@@Base+0x1ec>
  4132fc:	add	x0, x0, #0x8
  413300:	b	4131dc <child_execute_job@@Base+0x150>
  413304:	ldr	x5, [x20, #8]
  413308:	mov	x4, x21
  41330c:	add	x3, sp, #0x120
  413310:	add	x2, sp, #0x50
  413314:	mov	x1, x22
  413318:	add	x0, sp, #0xa0
  41331c:	bl	406cd0 <posix_spawn@plt>
  413320:	mov	w19, w0
  413324:	cmp	w0, #0x4
  413328:	b.eq	413304 <child_execute_job@@Base+0x278>  // b.none
  41332c:	cmp	w0, #0x8
  413330:	b.ne	4133a8 <child_execute_job@@Base+0x31c>  // b.any
  413334:	mov	x2, #0x0                   	// #0
  413338:	b	413340 <child_execute_job@@Base+0x2b4>
  41333c:	add	x2, x2, #0x1
  413340:	ldr	x0, [x21, x2, lsl #3]
  413344:	cbnz	x0, 41333c <child_execute_job@@Base+0x2b0>
  413348:	add	x2, x2, #0x3
  41334c:	lsl	x19, x2, #3
  413350:	mov	x0, x19
  413354:	bl	416a54 <xmalloc@@Base>
  413358:	mov	x23, x0
  41335c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413360:	sub	x2, x19, #0x18
  413364:	add	x1, x21, #0x8
  413368:	ldr	x0, [x0, #136]
  41336c:	stp	x0, x22, [x23]
  413370:	add	x0, x23, #0x10
  413374:	bl	4066c0 <memcpy@plt>
  413378:	ldr	x1, [x23]
  41337c:	mov	x4, x23
  413380:	ldr	x5, [x20, #8]
  413384:	add	x3, sp, #0x120
  413388:	add	x2, sp, #0x50
  41338c:	add	x0, sp, #0xa0
  413390:	bl	406cd0 <posix_spawn@plt>
  413394:	mov	w19, w0
  413398:	cmp	w0, #0x4
  41339c:	b.eq	413378 <child_execute_job@@Base+0x2ec>  // b.none
  4133a0:	mov	x0, x23
  4133a4:	bl	406c20 <free@plt>
  4133a8:	cbnz	w19, 413278 <child_execute_job@@Base+0x1ec>
  4133ac:	ldr	x0, [x20]
  4133b0:	bl	406c20 <free@plt>
  4133b4:	ldr	x0, [x21]
  4133b8:	cmp	x0, x22
  4133bc:	b.eq	4133c8 <child_execute_job@@Base+0x33c>  // b.none
  4133c0:	str	x22, [x20]
  4133c4:	b	413278 <child_execute_job@@Base+0x1ec>
  4133c8:	mov	x0, x22
  4133cc:	bl	416c24 <xstrdup@@Base>
  4133d0:	str	x0, [x20]
  4133d4:	b	413278 <child_execute_job@@Base+0x1ec>

00000000004133d8 <exec_command@@Base>:
  4133d8:	stp	x29, x30, [sp, #-48]!
  4133dc:	mov	x29, sp
  4133e0:	stp	x19, x20, [sp, #16]
  4133e4:	mov	x19, x0
  4133e8:	mov	x20, x1
  4133ec:	stp	x21, x22, [sp, #32]
  4133f0:	bl	416f7c <child_access@@Base>
  4133f4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4133f8:	mov	x1, x19
  4133fc:	str	x20, [x0, #416]
  413400:	ldr	x0, [x19]
  413404:	bl	406bd0 <execvp@plt>
  413408:	bl	406e00 <__errno_location@plt>
  41340c:	ldr	w22, [x0]
  413410:	mov	x20, x0
  413414:	cmp	w22, #0x2
  413418:	b.eq	413424 <exec_command@@Base+0x4c>  // b.none
  41341c:	cmp	w22, #0x8
  413420:	b.eq	413464 <exec_command@@Base+0x8c>  // b.none
  413424:	ldr	x0, [x19]
  413428:	bl	406700 <strlen@plt>
  41342c:	mov	x21, x0
  413430:	mov	w0, w22
  413434:	bl	406ad0 <strerror@plt>
  413438:	bl	406700 <strlen@plt>
  41343c:	add	x21, x21, x0
  413440:	ldr	w0, [x20]
  413444:	ldr	x19, [x19]
  413448:	bl	406ad0 <strerror@plt>
  41344c:	mov	x4, x0
  413450:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  413454:	mov	x3, x19
  413458:	add	x2, x2, #0x1a8
  41345c:	mov	x1, x21
  413460:	b	41350c <exec_command@@Base+0x134>
  413464:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  413468:	add	x0, x0, #0xb9
  41346c:	bl	406e10 <getenv@plt>
  413470:	cbnz	x0, 41347c <exec_command@@Base+0xa4>
  413474:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413478:	ldr	x0, [x0, #136]
  41347c:	mov	x1, #0x1                   	// #1
  413480:	ldr	x3, [x19, x1, lsl #3]
  413484:	sxtw	x2, w1
  413488:	add	x1, x1, #0x1
  41348c:	cbnz	x3, 413480 <exec_command@@Base+0xa8>
  413490:	add	w1, w2, #0x2
  413494:	ldr	x3, [x19]
  413498:	sbfiz	x1, x1, #3, #32
  41349c:	add	x1, x1, #0xf
  4134a0:	and	x1, x1, #0xfffffffffffffff0
  4134a4:	sub	sp, sp, x1
  4134a8:	mov	x21, sp
  4134ac:	mov	x1, x21
  4134b0:	str	x0, [x21]
  4134b4:	str	x3, [x1, #8]!
  4134b8:	ldr	x3, [x19, x2, lsl #3]
  4134bc:	str	x3, [x1, x2, lsl #3]
  4134c0:	sub	x2, x2, #0x1
  4134c4:	cbnz	w2, 4134b8 <exec_command@@Base+0xe0>
  4134c8:	mov	x1, x21
  4134cc:	bl	406bd0 <execvp@plt>
  4134d0:	ldr	x0, [x21]
  4134d4:	bl	406700 <strlen@plt>
  4134d8:	mov	x19, x0
  4134dc:	ldr	w0, [x20]
  4134e0:	bl	406ad0 <strerror@plt>
  4134e4:	bl	406700 <strlen@plt>
  4134e8:	add	x19, x19, x0
  4134ec:	ldr	w0, [x20]
  4134f0:	ldr	x21, [x21]
  4134f4:	bl	406ad0 <strerror@plt>
  4134f8:	mov	x4, x0
  4134fc:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  413500:	mov	x3, x21
  413504:	add	x2, x2, #0x1a8
  413508:	mov	x1, x19
  41350c:	mov	x0, #0x0                   	// #0
  413510:	bl	417aa8 <error@@Base>
  413514:	mov	w0, #0x7f                  	// #127
  413518:	bl	4066e0 <_exit@plt>

000000000041351c <construct_command_argv@@Base>:
  41351c:	stp	x29, x30, [sp, #-80]!
  413520:	mov	x29, sp
  413524:	stp	x25, x26, [sp, #64]
  413528:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  41352c:	ldr	w26, [x25, #2056]
  413530:	str	wzr, [x25, #2056]
  413534:	stp	x19, x20, [sp, #16]
  413538:	mov	x19, x2
  41353c:	stp	x21, x22, [sp, #32]
  413540:	mov	x22, x0
  413544:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413548:	add	x0, x0, #0x8a2
  41354c:	stp	x23, x24, [sp, #48]
  413550:	mov	w24, w3
  413554:	mov	x23, x1
  413558:	mov	x1, x2
  41355c:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  413560:	mov	x21, x0
  413564:	mov	x1, x19
  413568:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41356c:	add	x0, x0, #0x8ab
  413570:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  413574:	mov	x1, x19
  413578:	mov	x20, x0
  41357c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413580:	add	x0, x0, #0x8ba
  413584:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  413588:	mov	x4, x0
  41358c:	mov	w5, w24
  413590:	mov	x3, x20
  413594:	mov	x2, x21
  413598:	mov	x1, x23
  41359c:	mov	x19, x0
  4135a0:	str	w26, [x25, #2056]
  4135a4:	mov	x0, x22
  4135a8:	bl	412898 <is_bourne_compatible_shell@@Base+0xa8>
  4135ac:	mov	x22, x0
  4135b0:	mov	x0, x21
  4135b4:	bl	406c20 <free@plt>
  4135b8:	mov	x0, x20
  4135bc:	bl	406c20 <free@plt>
  4135c0:	mov	x0, x19
  4135c4:	bl	406c20 <free@plt>
  4135c8:	mov	x0, x22
  4135cc:	ldp	x19, x20, [sp, #16]
  4135d0:	ldp	x21, x22, [sp, #32]
  4135d4:	ldp	x23, x24, [sp, #48]
  4135d8:	ldp	x25, x26, [sp, #64]
  4135dc:	ldp	x29, x30, [sp], #80
  4135e0:	ret
  4135e4:	stp	x29, x30, [sp, #-96]!
  4135e8:	mov	x29, sp
  4135ec:	stp	x21, x22, [sp, #32]
  4135f0:	ldr	x22, [x0, #64]
  4135f4:	stp	x19, x20, [sp, #16]
  4135f8:	mov	x19, x0
  4135fc:	stp	x23, x24, [sp, #48]
  413600:	str	x25, [sp, #64]
  413604:	cbz	x22, 4137c0 <construct_command_argv@@Base+0x2a4>
  413608:	ldr	x1, [x19, #40]
  41360c:	ldr	w0, [x0, #72]
  413610:	ldr	x2, [x1, #32]
  413614:	sub	w0, w0, #0x1
  413618:	ldr	w1, [x1, #132]
  41361c:	ldr	x2, [x2, #40]
  413620:	ldrb	w21, [x2, x0]
  413624:	orr	w21, w21, w1
  413628:	ldrb	w1, [x19, #80]
  41362c:	ubfx	x3, x21, #2, #1
  413630:	bfi	w1, w3, #1, #1
  413634:	adrp	x3, 43e000 <expanding_var@@Base+0x328>
  413638:	add	x3, x3, #0x454
  41363c:	strb	w1, [x19, #80]
  413640:	ldrb	w1, [x22]
  413644:	cbz	w1, 41368c <construct_command_argv@@Base+0x170>
  413648:	cmp	w1, #0x40
  41364c:	b.ne	41365c <construct_command_argv@@Base+0x140>  // b.any
  413650:	orr	w21, w21, #0x2
  413654:	add	x22, x22, #0x1
  413658:	b	413640 <construct_command_argv@@Base+0x124>
  41365c:	cmp	w1, #0x2b
  413660:	b.ne	41366c <construct_command_argv@@Base+0x150>  // b.any
  413664:	orr	w21, w21, #0x1
  413668:	b	413654 <construct_command_argv@@Base+0x138>
  41366c:	cmp	w1, #0x2d
  413670:	b.ne	413684 <construct_command_argv@@Base+0x168>  // b.any
  413674:	ldrb	w1, [x19, #80]
  413678:	orr	w1, w1, #0x2
  41367c:	strb	w1, [x19, #80]
  413680:	b	413654 <construct_command_argv@@Base+0x138>
  413684:	ldrh	w1, [x3, w1, sxtw #1]
  413688:	tbnz	w1, #1, 413654 <construct_command_argv@@Base+0x138>
  41368c:	ldrb	w1, [x19, #80]
  413690:	and	w23, w21, #0x1
  413694:	bfi	w1, w21, #4, #1
  413698:	strb	w1, [x19, #80]
  41369c:	ldrb	w1, [x2, x0]
  4136a0:	orr	w1, w23, w1
  4136a4:	strb	w1, [x2, x0]
  4136a8:	mov	x1, x22
  4136ac:	ldr	x0, [x19, #40]
  4136b0:	ldr	x0, [x0, #32]
  4136b4:	ldrb	w3, [x0, #50]
  4136b8:	mov	x0, x22
  4136bc:	ldrb	w2, [x0]
  4136c0:	cbnz	w2, 413758 <construct_command_argv@@Base+0x23c>
  4136c4:	strb	wzr, [x1]
  4136c8:	add	x4, x19, #0x30
  4136cc:	ldr	x2, [x19, #40]
  4136d0:	ldr	w0, [x19, #72]
  4136d4:	ldr	x1, [x2, #32]
  4136d8:	sub	w0, w0, #0x1
  4136dc:	ldr	x1, [x1, #40]
  4136e0:	str	xzr, [sp, #88]
  4136e4:	ldrb	w3, [x1, x0]
  4136e8:	add	x1, sp, #0x58
  4136ec:	mov	x0, x22
  4136f0:	bl	41351c <construct_command_argv@@Base>
  4136f4:	mov	x20, x0
  4136f8:	ldr	x0, [sp, #88]
  4136fc:	cbnz	x0, 41377c <construct_command_argv@@Base+0x260>
  413700:	str	xzr, [x19, #64]
  413704:	cbz	x20, 413794 <construct_command_argv@@Base+0x278>
  413708:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41370c:	ldr	w0, [x0, #3412]
  413710:	cbz	w0, 413794 <construct_command_argv@@Base+0x278>
  413714:	cbnz	w23, 413794 <construct_command_argv@@Base+0x278>
  413718:	ldr	x0, [x20]
  41371c:	bl	406c20 <free@plt>
  413720:	mov	x0, x20
  413724:	bl	406c20 <free@plt>
  413728:	ldr	x0, [x19, #40]
  41372c:	mov	w2, #0x2                   	// #2
  413730:	ldrb	w1, [x0, #136]
  413734:	bfxil	w1, w2, #0, #2
  413738:	strb	w1, [x0, #136]
  41373c:	bl	41c81c <notice_finished_file@@Base>
  413740:	ldp	x19, x20, [sp, #16]
  413744:	ldp	x21, x22, [sp, #32]
  413748:	ldp	x23, x24, [sp, #48]
  41374c:	ldr	x25, [sp, #64]
  413750:	ldp	x29, x30, [sp], #96
  413754:	ret
  413758:	strb	w2, [x1], #1
  41375c:	cmp	w2, #0xa
  413760:	b.ne	413774 <construct_command_argv@@Base+0x258>  // b.any
  413764:	ldrb	w2, [x0, #1]
  413768:	cmp	w2, w3
  41376c:	b.ne	413774 <construct_command_argv@@Base+0x258>  // b.any
  413770:	add	x0, x0, #0x1
  413774:	add	x0, x0, #0x1
  413778:	b	4136bc <construct_command_argv@@Base+0x1a0>
  41377c:	add	x1, x0, #0x1
  413780:	str	x1, [sp, #88]
  413784:	strb	wzr, [x0]
  413788:	ldr	x0, [sp, #88]
  41378c:	str	x0, [x19, #64]
  413790:	b	413704 <construct_command_argv@@Base+0x1e8>
  413794:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  413798:	ldr	w0, [x0, #2196]
  41379c:	cbz	w0, 4137bc <construct_command_argv@@Base+0x2a0>
  4137a0:	cbnz	w23, 4137bc <construct_command_argv@@Base+0x2a0>
  4137a4:	cbz	x20, 4137c0 <construct_command_argv@@Base+0x2a4>
  4137a8:	ldr	x0, [x20]
  4137ac:	bl	406c20 <free@plt>
  4137b0:	mov	x0, x20
  4137b4:	bl	406c20 <free@plt>
  4137b8:	b	4137c0 <construct_command_argv@@Base+0x2a4>
  4137bc:	cbnz	x20, 413804 <construct_command_argv@@Base+0x2e8>
  4137c0:	mov	x0, x19
  4137c4:	bl	41278c <try_implicit_rule@@Base+0x44c>
  4137c8:	cbz	w0, 4137e0 <construct_command_argv@@Base+0x2c4>
  4137cc:	mov	x0, x19
  4137d0:	bl	4135e4 <construct_command_argv@@Base+0xc8>
  4137d4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4137d8:	str	xzr, [x0, #3512]
  4137dc:	b	413740 <construct_command_argv@@Base+0x224>
  4137e0:	ldr	x0, [x19, #40]
  4137e4:	mov	w1, #0x2                   	// #2
  4137e8:	bl	40cea0 <set_command_state@@Base>
  4137ec:	ldr	x0, [x19, #40]
  4137f0:	ldrb	w1, [x0, #136]
  4137f4:	and	w1, w1, #0xfffffffc
  4137f8:	strb	w1, [x0, #136]
  4137fc:	bl	41c81c <notice_finished_file@@Base>
  413800:	b	4137d4 <construct_command_argv@@Base+0x2b8>
  413804:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413808:	ldr	w0, [x0, #3304]
  41380c:	cbz	w0, 413820 <construct_command_argv@@Base+0x304>
  413810:	mov	w1, #0x1                   	// #1
  413814:	cmp	w0, #0x3
  413818:	sub	w2, w1, w23
  41381c:	csel	w0, w2, w1, ne  // ne = any
  413820:	ldrb	w1, [x19, #24]
  413824:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  413828:	bfxil	w1, w0, #0, #1
  41382c:	add	x0, x19, #0x10
  413830:	strb	w1, [x19, #24]
  413834:	ands	w1, w1, #0x1
  413838:	csel	x2, x0, xzr, ne  // ne = any
  41383c:	str	x2, [x24, #3512]
  413840:	cbnz	w1, 413848 <construct_command_argv@@Base+0x32c>
  413844:	bl	417280 <output_dump@@Base>
  413848:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  41384c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  413850:	ldr	w0, [x25, #1992]
  413854:	ldr	w1, [x1, #3396]
  413858:	orr	w0, w0, w1
  41385c:	cbnz	w0, 413874 <construct_command_argv@@Base+0x358>
  413860:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413864:	and	w21, w21, #0x2
  413868:	ldr	w0, [x0, #3308]
  41386c:	orr	w21, w21, w0
  413870:	cbnz	w21, 413894 <construct_command_argv@@Base+0x378>
  413874:	mov	x0, x22
  413878:	bl	406700 <strlen@plt>
  41387c:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  413880:	mov	x1, x0
  413884:	mov	x3, x22
  413888:	add	x2, x2, #0xe5c
  41388c:	mov	w0, #0x0                   	// #0
  413890:	bl	417984 <message@@Base>
  413894:	adrp	x1, 440000 <output_context@@Base+0x1248>
  413898:	ldr	x21, [x20]
  41389c:	ldr	w0, [x1, #3648]
  4138a0:	add	w0, w0, #0x1
  4138a4:	str	w0, [x1, #3648]
  4138a8:	cbz	x21, 413928 <construct_command_argv@@Base+0x40c>
  4138ac:	mov	x0, x21
  4138b0:	bl	4127f0 <is_bourne_compatible_shell@@Base>
  4138b4:	cbz	w0, 413928 <construct_command_argv@@Base+0x40c>
  4138b8:	ldr	x0, [x20, #8]
  4138bc:	cbz	x0, 413928 <construct_command_argv@@Base+0x40c>
  4138c0:	ldrb	w1, [x0]
  4138c4:	cmp	w1, #0x2d
  4138c8:	b.ne	413928 <construct_command_argv@@Base+0x40c>  // b.any
  4138cc:	ldrb	w1, [x0, #1]
  4138d0:	cmp	w1, #0x63
  4138d4:	b.ne	41390c <construct_command_argv@@Base+0x3f0>  // b.any
  4138d8:	ldrb	w0, [x0, #2]
  4138dc:	cbnz	w0, 413928 <construct_command_argv@@Base+0x40c>
  4138e0:	ldr	x0, [x20, #16]
  4138e4:	cbz	x0, 413928 <construct_command_argv@@Base+0x40c>
  4138e8:	ldrb	w1, [x0]
  4138ec:	cmp	w1, #0x3a
  4138f0:	b.ne	413928 <construct_command_argv@@Base+0x40c>  // b.any
  4138f4:	ldrb	w0, [x0, #1]
  4138f8:	cbnz	w0, 413928 <construct_command_argv@@Base+0x40c>
  4138fc:	ldr	x0, [x20, #24]
  413900:	cbnz	x0, 413928 <construct_command_argv@@Base+0x40c>
  413904:	mov	x0, x21
  413908:	b	4137ac <construct_command_argv@@Base+0x290>
  41390c:	cmp	w1, #0x65
  413910:	b.ne	413928 <construct_command_argv@@Base+0x40c>  // b.any
  413914:	ldrb	w1, [x0, #2]
  413918:	cmp	w1, #0x63
  41391c:	b.ne	413928 <construct_command_argv@@Base+0x40c>  // b.any
  413920:	ldrb	w0, [x0, #3]
  413924:	b	4138dc <construct_command_argv@@Base+0x3c0>
  413928:	ldr	w0, [x25, #1992]
  41392c:	cbz	w0, 413934 <construct_command_argv@@Base+0x418>
  413930:	cbz	w23, 413904 <construct_command_argv@@Base+0x3e8>
  413934:	bl	417674 <output_start@@Base>
  413938:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  41393c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413940:	add	x21, x21, #0x398
  413944:	ldr	x0, [x0, #400]
  413948:	bl	406cb0 <fflush@plt>
  41394c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413950:	ldr	x0, [x0, #376]
  413954:	bl	406cb0 <fflush@plt>
  413958:	ldr	w0, [x21, #12]
  41395c:	cmp	w0, #0x0
  413960:	ldrb	w0, [x19, #80]
  413964:	cset	w1, eq  // eq = none
  413968:	bfi	w0, w1, #2, #1
  41396c:	strb	w0, [x19, #80]
  413970:	tbz	w0, #2, 41397c <construct_command_argv@@Base+0x460>
  413974:	mov	w0, #0x1                   	// #1
  413978:	str	w0, [x21, #12]
  41397c:	ldrb	w0, [x19, #80]
  413980:	and	w0, w0, #0xfffffff7
  413984:	strb	w0, [x19, #80]
  413988:	ldr	x0, [x19, #8]
  41398c:	cbnz	x0, 41399c <construct_command_argv@@Base+0x480>
  413990:	ldr	x0, [x19, #40]
  413994:	bl	42055c <target_environment@@Base>
  413998:	str	x0, [x19, #8]
  41399c:	ldrb	w0, [x19, #80]
  4139a0:	tbz	w0, #0, 413a44 <construct_command_argv@@Base+0x528>
  4139a4:	ldr	x22, [x19, #8]
  4139a8:	tbnz	w0, #2, 413a3c <construct_command_argv@@Base+0x520>
  4139ac:	bl	42222c <get_bad_stdin@@Base>
  4139b0:	mov	w2, w0
  4139b4:	add	x5, sp, #0x54
  4139b8:	add	x4, sp, #0x58
  4139bc:	add	x3, sp, #0x50
  4139c0:	mov	x1, x22
  4139c4:	mov	x0, x20
  4139c8:	bl	42228c <start_remote_job@@Base>
  4139cc:	cbnz	w0, 413a44 <construct_command_argv@@Base+0x528>
  4139d0:	ldrb	w0, [x19, #80]
  4139d4:	tbz	w0, #2, 4139ec <construct_command_argv@@Base+0x4d0>
  4139d8:	ldr	w1, [sp, #84]
  4139dc:	cbnz	w1, 4139ec <construct_command_argv@@Base+0x4d0>
  4139e0:	and	w0, w0, #0xfffffffb
  4139e4:	str	wzr, [x21, #12]
  4139e8:	strb	w0, [x19, #80]
  4139ec:	ldrb	w0, [x19, #80]
  4139f0:	ldr	w1, [sp, #80]
  4139f4:	bfxil	w0, w1, #0, #1
  4139f8:	strb	w0, [x19, #80]
  4139fc:	ldr	w0, [sp, #88]
  413a00:	str	w0, [x19, #76]
  413a04:	ldr	w0, [x19, #76]
  413a08:	tbnz	w0, #31, 413a18 <construct_command_argv@@Base+0x4fc>
  413a0c:	ldr	x0, [x21, #16]
  413a10:	add	x0, x0, #0x1
  413a14:	str	x0, [x21, #16]
  413a18:	ldr	x0, [x19, #40]
  413a1c:	mov	w1, #0x2                   	// #2
  413a20:	bl	40cea0 <set_command_state@@Base>
  413a24:	ldr	x0, [x20]
  413a28:	bl	406c20 <free@plt>
  413a2c:	mov	x0, x20
  413a30:	bl	406c20 <free@plt>
  413a34:	str	xzr, [x24, #3512]
  413a38:	b	413740 <construct_command_argv@@Base+0x224>
  413a3c:	mov	w2, #0x0                   	// #0
  413a40:	b	4139b4 <construct_command_argv@@Base+0x498>
  413a44:	mov	x2, #0x0                   	// #0
  413a48:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  413a4c:	mov	w0, #0x0                   	// #0
  413a50:	add	x1, x1, #0x810
  413a54:	bl	406760 <sigprocmask@plt>
  413a58:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  413a5c:	ldrb	w0, [x19, #80]
  413a60:	ldr	x25, [x22, #416]
  413a64:	and	w0, w0, #0xfffffffe
  413a68:	strb	w0, [x19, #80]
  413a6c:	mov	w0, w23
  413a70:	bl	422054 <jobserver_pre_child@@Base>
  413a74:	ldrb	w1, [x19, #80]
  413a78:	mov	x2, x20
  413a7c:	mov	x0, x19
  413a80:	ubfx	x1, x1, #2, #1
  413a84:	bl	41308c <child_execute_job@@Base>
  413a88:	str	w0, [x19, #76]
  413a8c:	mov	w0, w23
  413a90:	str	x25, [x22, #416]
  413a94:	bl	4221e8 <jobserver_post_child@@Base>
  413a98:	b	413a04 <construct_command_argv@@Base+0x4e8>

0000000000413a9c <reap_children@@Base>:
  413a9c:	stp	x29, x30, [sp, #-256]!
  413aa0:	mov	x29, sp
  413aa4:	stp	x19, x20, [sp, #16]
  413aa8:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  413aac:	add	x20, x20, #0x398
  413ab0:	stp	x23, x24, [sp, #48]
  413ab4:	add	x24, x20, #0x28
  413ab8:	mov	w23, w0
  413abc:	stp	x25, x26, [sp, #64]
  413ac0:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  413ac4:	add	x25, x25, #0x390
  413ac8:	mov	w0, #0x1                   	// #1
  413acc:	stp	x21, x22, [sp, #32]
  413ad0:	stp	x27, x28, [sp, #80]
  413ad4:	stp	w0, w1, [sp, #96]
  413ad8:	ldr	x0, [x20, #32]
  413adc:	cbnz	x0, 413ae8 <reap_children@@Base+0x4c>
  413ae0:	ldr	w0, [x25]
  413ae4:	cbz	w0, 413ffc <reap_children@@Base+0x560>
  413ae8:	ldr	w0, [sp, #96]
  413aec:	orr	w0, w23, w0
  413af0:	cbz	w0, 413ffc <reap_children@@Base+0x560>
  413af4:	ldr	w0, [sp, #100]
  413af8:	cmp	w0, #0x0
  413afc:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  413b00:	b.eq	413b44 <reap_children@@Base+0xa8>  // b.none
  413b04:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413b08:	ldr	x0, [x0, #400]
  413b0c:	bl	406cb0 <fflush@plt>
  413b10:	ldr	w0, [x20, #24]
  413b14:	cbnz	w0, 413b3c <reap_children@@Base+0xa0>
  413b18:	mov	w2, #0x5                   	// #5
  413b1c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413b20:	mov	x0, #0x0                   	// #0
  413b24:	add	x1, x1, #0x8c1
  413b28:	bl	406d60 <dcgettext@plt>
  413b2c:	mov	x2, x0
  413b30:	mov	x1, #0x0                   	// #0
  413b34:	mov	x0, #0x0                   	// #0
  413b38:	bl	417aa8 <error@@Base>
  413b3c:	mov	w0, #0x1                   	// #1
  413b40:	str	w0, [x20, #24]
  413b44:	ldr	w0, [x20, #8]
  413b48:	cbz	w0, 413b54 <reap_children@@Base+0xb8>
  413b4c:	sub	w0, w0, #0x1
  413b50:	str	w0, [x20, #8]
  413b54:	ldr	w0, [x25]
  413b58:	mov	w19, #0x0                   	// #0
  413b5c:	ldr	x21, [x20, #32]
  413b60:	cmp	w0, #0x0
  413b64:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413b68:	add	x0, x0, #0x450
  413b6c:	cset	w22, ne  // ne = any
  413b70:	str	x0, [sp, #104]
  413b74:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413b78:	add	x26, x0, #0x8e5
  413b7c:	mov	x1, #0x0                   	// #0
  413b80:	cbnz	x21, 413bb4 <reap_children@@Base+0x118>
  413b84:	cbz	w19, 414268 <reap_children@@Base+0x7cc>
  413b88:	add	x2, sp, #0x7c
  413b8c:	add	x1, sp, #0x78
  413b90:	add	x0, sp, #0x74
  413b94:	mov	w3, #0x0                   	// #0
  413b98:	bl	422294 <remote_status@@Base>
  413b9c:	cmp	w0, #0x0
  413ba0:	b.gt	414018 <reap_children@@Base+0x57c>
  413ba4:	b.eq	413efc <reap_children@@Base+0x460>  // b.none
  413ba8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413bac:	add	x0, x0, #0x90d
  413bb0:	bl	417590 <pfatal_with_name@@Base>
  413bb4:	ldrb	w0, [x21, #80]
  413bb8:	and	w2, w0, #0x1
  413bbc:	mvn	w0, w0
  413bc0:	and	w0, w0, #0x1
  413bc4:	orr	w19, w19, w2
  413bc8:	orr	w22, w22, w0
  413bcc:	ldr	w0, [x21, #76]
  413bd0:	tbz	w0, #31, 413e68 <reap_children@@Base+0x3cc>
  413bd4:	mov	x19, x21
  413bd8:	mov	x21, x1
  413bdc:	mov	w0, #0x7f                  	// #127
  413be0:	stp	w0, wzr, [sp, #116]
  413be4:	str	wzr, [sp, #124]
  413be8:	ldr	w0, [sp, #120]
  413bec:	cbnz	w0, 4140b4 <reap_children@@Base+0x618>
  413bf0:	ldr	w0, [sp, #116]
  413bf4:	cmp	w0, #0x7f
  413bf8:	b.eq	414038 <reap_children@@Base+0x59c>  // b.none
  413bfc:	ldr	w22, [sp, #116]
  413c00:	cbz	w22, 413c20 <reap_children@@Base+0x184>
  413c04:	cmp	w22, #0x1
  413c08:	b.ne	4140b4 <reap_children@@Base+0x618>  // b.any
  413c0c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413c10:	ldr	w0, [x0, #3412]
  413c14:	cbz	w0, 4140b4 <reap_children@@Base+0x618>
  413c18:	ldrb	w0, [x19, #80]
  413c1c:	tbz	w0, #4, 4140b4 <reap_children@@Base+0x618>
  413c20:	ldr	x0, [x19, #48]
  413c24:	cbz	x0, 413cb4 <reap_children@@Base+0x218>
  413c28:	adrp	x28, 43e000 <expanding_var@@Base+0x328>
  413c2c:	ldr	w0, [x28, #1104]
  413c30:	tbz	w0, #2, 413c5c <reap_children@@Base+0x1c0>
  413c34:	mov	w2, #0x5                   	// #5
  413c38:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413c3c:	mov	x0, #0x0                   	// #0
  413c40:	add	x1, x1, #0x967
  413c44:	bl	406d60 <dcgettext@plt>
  413c48:	ldr	x1, [x19, #48]
  413c4c:	bl	406df0 <printf@plt>
  413c50:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413c54:	ldr	x0, [x0, #400]
  413c58:	bl	406cb0 <fflush@plt>
  413c5c:	bl	406e00 <__errno_location@plt>
  413c60:	mov	x27, x0
  413c64:	ldr	x0, [x19, #48]
  413c68:	str	wzr, [x27]
  413c6c:	bl	406770 <remove@plt>
  413c70:	cbz	w0, 413ca8 <reap_children@@Base+0x20c>
  413c74:	ldr	w0, [x28, #1104]
  413c78:	tbz	w0, #2, 413ca8 <reap_children@@Base+0x20c>
  413c7c:	mov	w2, #0x5                   	// #5
  413c80:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413c84:	mov	x0, #0x0                   	// #0
  413c88:	add	x1, x1, #0x987
  413c8c:	bl	406d60 <dcgettext@plt>
  413c90:	ldr	w2, [x27]
  413c94:	ldr	x1, [x19, #48]
  413c98:	bl	406df0 <printf@plt>
  413c9c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413ca0:	ldr	x0, [x0, #400]
  413ca4:	bl	406cb0 <fflush@plt>
  413ca8:	ldr	x0, [x19, #48]
  413cac:	bl	406c20 <free@plt>
  413cb0:	str	xzr, [x19, #48]
  413cb4:	ldrb	w0, [x19, #80]
  413cb8:	tbz	w0, #2, 413cc0 <reap_children@@Base+0x224>
  413cbc:	str	wzr, [x20, #12]
  413cc0:	ldrb	w27, [x19, #80]
  413cc4:	adrp	x28, 43e000 <expanding_var@@Base+0x328>
  413cc8:	ubfx	x27, x27, #6, #1
  413ccc:	cbz	w22, 41410c <reap_children@@Base+0x670>
  413cd0:	tbnz	w0, #1, 4140f8 <reap_children@@Base+0x65c>
  413cd4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413cd8:	ldr	w26, [x0, #3416]
  413cdc:	cbnz	w26, 4140f8 <reap_children@@Base+0x65c>
  413ce0:	eor	w0, w27, #0x1
  413ce4:	cmp	w22, #0x2
  413ce8:	csel	w0, w0, wzr, eq  // eq = none
  413cec:	cbz	w0, 4140ec <reap_children@@Base+0x650>
  413cf0:	ldp	w1, w2, [sp, #116]
  413cf4:	mov	x0, x19
  413cf8:	ldr	w3, [sp, #124]
  413cfc:	mov	w4, #0x0                   	// #0
  413d00:	bl	41243c <try_implicit_rule@@Base+0xfc>
  413d04:	mov	w0, #0x3                   	// #3
  413d08:	ldr	x1, [x19, #40]
  413d0c:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  413d10:	add	x23, x23, #0x48
  413d14:	ldrb	w2, [x1, #136]
  413d18:	bfxil	w2, w0, #0, #2
  413d1c:	ldr	w0, [x23, #76]
  413d20:	strb	w2, [x1, #136]
  413d24:	cmn	w0, #0x1
  413d28:	b.ne	413d48 <reap_children@@Base+0x2ac>  // b.any
  413d2c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413d30:	add	x0, x0, #0x9b3
  413d34:	bl	40be54 <lookup_file@@Base>
  413d38:	cbz	x0, 413d44 <reap_children@@Base+0x2a8>
  413d3c:	ldrb	w5, [x0, #137]
  413d40:	ubfx	x26, x5, #3, #1
  413d44:	str	w26, [x23, #76]
  413d48:	ldr	w1, [x23, #76]
  413d4c:	ldr	w0, [sp, #120]
  413d50:	orr	w0, w0, w1
  413d54:	cbz	w0, 413d60 <reap_children@@Base+0x2c4>
  413d58:	mov	x0, x19
  413d5c:	bl	409fd4 <delete_child_targets@@Base>
  413d60:	add	x0, x19, #0x10
  413d64:	bl	417280 <output_dump@@Base>
  413d68:	ldr	w0, [x28, #480]
  413d6c:	cbnz	w0, 413d78 <reap_children@@Base+0x2dc>
  413d70:	ldr	x0, [x19, #40]
  413d74:	bl	41c81c <notice_finished_file@@Base>
  413d78:	mov	x2, #0x0                   	// #0
  413d7c:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  413d80:	mov	w0, #0x0                   	// #0
  413d84:	add	x1, x1, #0x810
  413d88:	bl	406760 <sigprocmask@plt>
  413d8c:	ldr	w0, [x19, #76]
  413d90:	cmp	w0, #0x0
  413d94:	b.le	413e0c <reap_children@@Base+0x370>
  413d98:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413d9c:	ldr	w0, [x0, #1104]
  413da0:	tbz	w0, #2, 413e0c <reap_children@@Base+0x370>
  413da4:	mov	w2, #0x5                   	// #5
  413da8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413dac:	mov	x0, #0x0                   	// #0
  413db0:	add	x1, x1, #0x9c4
  413db4:	bl	406d60 <dcgettext@plt>
  413db8:	mov	x23, x0
  413dbc:	ldrsw	x2, [x19, #76]
  413dc0:	mov	x0, x24
  413dc4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413dc8:	add	x1, x1, #0x7b9
  413dcc:	bl	4067a0 <sprintf@plt>
  413dd0:	ldrb	w0, [x19, #80]
  413dd4:	tbz	w0, #0, 4141b8 <reap_children@@Base+0x71c>
  413dd8:	mov	w2, #0x5                   	// #5
  413ddc:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413de0:	mov	x0, #0x0                   	// #0
  413de4:	add	x1, x1, #0x903
  413de8:	bl	406d60 <dcgettext@plt>
  413dec:	mov	x3, x0
  413df0:	mov	x2, x24
  413df4:	mov	x1, x19
  413df8:	mov	x0, x23
  413dfc:	bl	406df0 <printf@plt>
  413e00:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413e04:	ldr	x0, [x0, #400]
  413e08:	bl	406cb0 <fflush@plt>
  413e0c:	ldr	w0, [x20, #140]
  413e10:	cbz	w0, 413e24 <reap_children@@Base+0x388>
  413e14:	ldrb	w1, [x19, #80]
  413e18:	ubfx	x1, x1, #5, #1
  413e1c:	sub	w0, w0, w1
  413e20:	str	w0, [x20, #140]
  413e24:	ldr	x0, [x19, #32]
  413e28:	cbnz	x21, 4141c4 <reap_children@@Base+0x728>
  413e2c:	str	x0, [x20, #32]
  413e30:	mov	x0, x19
  413e34:	bl	412648 <try_implicit_rule@@Base+0x308>
  413e38:	bl	412428 <try_implicit_rule@@Base+0xe8>
  413e3c:	cbz	w22, 4141cc <reap_children@@Base+0x730>
  413e40:	cbnz	w27, 4141cc <reap_children@@Base+0x730>
  413e44:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  413e48:	ldr	w1, [x28, #480]
  413e4c:	ldr	w0, [x0, #1996]
  413e50:	orr	w0, w0, w1
  413e54:	ldr	w1, [sp, #100]
  413e58:	orr	w0, w0, w1
  413e5c:	cbnz	w0, 4141cc <reap_children@@Base+0x730>
  413e60:	mov	w0, w22
  413e64:	bl	415d98 <die@@Base>
  413e68:	ldr	x0, [sp, #104]
  413e6c:	ldr	w0, [x0]
  413e70:	tbz	w0, #2, 413ee4 <reap_children@@Base+0x448>
  413e74:	mov	x1, x26
  413e78:	mov	w2, #0x5                   	// #5
  413e7c:	mov	x0, #0x0                   	// #0
  413e80:	bl	406d60 <dcgettext@plt>
  413e84:	ldrsw	x2, [x21, #76]
  413e88:	mov	x27, x0
  413e8c:	ldr	x0, [x21, #40]
  413e90:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413e94:	add	x1, x1, #0x7b9
  413e98:	ldr	x28, [x0]
  413e9c:	mov	x0, x24
  413ea0:	bl	4067a0 <sprintf@plt>
  413ea4:	ldrb	w0, [x21, #80]
  413ea8:	tbz	w0, #0, 413ef0 <reap_children@@Base+0x454>
  413eac:	mov	w2, #0x5                   	// #5
  413eb0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  413eb4:	mov	x0, #0x0                   	// #0
  413eb8:	add	x1, x1, #0x903
  413ebc:	bl	406d60 <dcgettext@plt>
  413ec0:	mov	x4, x0
  413ec4:	mov	x3, x24
  413ec8:	mov	x2, x28
  413ecc:	mov	x1, x21
  413ed0:	mov	x0, x27
  413ed4:	bl	406df0 <printf@plt>
  413ed8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  413edc:	ldr	x0, [x0, #400]
  413ee0:	bl	406cb0 <fflush@plt>
  413ee4:	mov	x1, x21
  413ee8:	ldr	x21, [x21, #32]
  413eec:	b	413b80 <reap_children@@Base+0xe4>
  413ef0:	adrp	x4, 424000 <_IO_stdin_used@@Base+0x1720>
  413ef4:	add	x4, x4, #0x819
  413ef8:	b	413ec4 <reap_children@@Base+0x428>
  413efc:	cbz	w22, 413fb4 <reap_children@@Base+0x518>
  413f00:	cbnz	w23, 413f88 <reap_children@@Base+0x4ec>
  413f04:	add	x1, sp, #0x70
  413f08:	mov	w2, #0x1                   	// #1
  413f0c:	mov	w0, #0xffffffff            	// #-1
  413f10:	bl	406e40 <waitpid@plt>
  413f14:	cmp	w0, #0x0
  413f18:	b.lt	413fa8 <reap_children@@Base+0x50c>  // b.tstop
  413f1c:	b.eq	413fb4 <reap_children@@Base+0x518>  // b.none
  413f20:	ldr	w2, [sp, #112]
  413f24:	and	w1, w2, #0x7f
  413f28:	add	w3, w1, #0x1
  413f2c:	ubfx	x4, x2, #8, #8
  413f30:	and	w2, w2, #0x80
  413f34:	str	w2, [sp, #124]
  413f38:	sbfx	x3, x3, #1, #7
  413f3c:	ldr	w2, [x25]
  413f40:	cmp	w3, #0x0
  413f44:	csel	w1, w1, wzr, gt
  413f48:	stp	w4, w1, [sp, #116]
  413f4c:	cmp	w2, w0
  413f50:	b.eq	413ff4 <reap_children@@Base+0x558>  // b.none
  413f54:	mov	w1, #0x0                   	// #0
  413f58:	ldr	x19, [x20, #32]
  413f5c:	cbz	x19, 413ad8 <reap_children@@Base+0x3c>
  413f60:	ldr	w2, [x19, #76]
  413f64:	cmp	w2, w0
  413f68:	b.ne	413f7c <reap_children@@Base+0x4e0>  // b.any
  413f6c:	ldrb	w2, [x19, #80]
  413f70:	and	w2, w2, #0x1
  413f74:	cmp	w2, w1
  413f78:	b.eq	4141d4 <reap_children@@Base+0x738>  // b.none
  413f7c:	mov	x21, x19
  413f80:	ldr	x19, [x19, #32]
  413f84:	b	413f5c <reap_children@@Base+0x4c0>
  413f88:	add	x0, sp, #0x70
  413f8c:	bl	406ca0 <wait@plt>
  413f90:	cmn	w0, #0x1
  413f94:	b.ne	413f14 <reap_children@@Base+0x478>  // b.any
  413f98:	bl	406e00 <__errno_location@plt>
  413f9c:	ldr	w0, [x0]
  413fa0:	cmp	w0, #0x4
  413fa4:	b.eq	413f88 <reap_children@@Base+0x4ec>  // b.none
  413fa8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  413fac:	add	x0, x0, #0x91b
  413fb0:	b	413bb0 <reap_children@@Base+0x114>
  413fb4:	eor	w19, w19, #0x1
  413fb8:	cmp	w23, #0x0
  413fbc:	and	w19, w19, #0x1
  413fc0:	csinc	w19, w19, wzr, ne  // ne = any
  413fc4:	cbnz	w19, 413ffc <reap_children@@Base+0x560>
  413fc8:	add	x2, sp, #0x7c
  413fcc:	add	x1, sp, #0x78
  413fd0:	add	x0, sp, #0x74
  413fd4:	mov	w3, #0x1                   	// #1
  413fd8:	bl	422294 <remote_status@@Base>
  413fdc:	cmp	w0, #0x0
  413fe0:	b.lt	413ba8 <reap_children@@Base+0x10c>  // b.tstop
  413fe4:	b.eq	413ffc <reap_children@@Base+0x560>  // b.none
  413fe8:	mov	w1, #0x1                   	// #1
  413fec:	str	wzr, [sp, #96]
  413ff0:	b	413f58 <reap_children@@Base+0x4bc>
  413ff4:	mov	w0, w4
  413ff8:	bl	40fec4 <shell_completed@@Base>
  413ffc:	ldp	x19, x20, [sp, #16]
  414000:	ldp	x21, x22, [sp, #32]
  414004:	ldp	x23, x24, [sp, #48]
  414008:	ldp	x25, x26, [sp, #64]
  41400c:	ldp	x27, x28, [sp, #80]
  414010:	ldp	x29, x30, [sp], #256
  414014:	ret
  414018:	mov	w1, #0x1                   	// #1
  41401c:	b	413f58 <reap_children@@Base+0x4bc>
  414020:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414024:	add	x1, x1, #0x944
  414028:	b	4141f8 <reap_children@@Base+0x75c>
  41402c:	adrp	x3, 424000 <_IO_stdin_used@@Base+0x1720>
  414030:	add	x3, x3, #0x819
  414034:	b	414238 <reap_children@@Base+0x79c>
  414038:	ldr	x0, [x19]
  41403c:	cbz	x0, 413bfc <reap_children@@Base+0x160>
  414040:	ldr	x0, [x19]
  414044:	add	x1, sp, #0x80
  414048:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  41404c:	cmn	w0, #0x1
  414050:	b.ne	4140bc <reap_children@@Base+0x620>  // b.any
  414054:	bl	406e00 <__errno_location@plt>
  414058:	ldr	w0, [x0]
  41405c:	cmp	w0, #0x4
  414060:	b.eq	414040 <reap_children@@Base+0x5a4>  // b.none
  414064:	bl	406e00 <__errno_location@plt>
  414068:	ldr	w0, [x0]
  41406c:	bl	406ad0 <strerror@plt>
  414070:	mov	x22, x0
  414074:	cbz	x0, 4140ac <reap_children@@Base+0x610>
  414078:	ldr	x28, [x19]
  41407c:	mov	x0, x28
  414080:	bl	406700 <strlen@plt>
  414084:	mov	x27, x0
  414088:	mov	x0, x22
  41408c:	bl	406700 <strlen@plt>
  414090:	add	x1, x27, x0
  414094:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  414098:	mov	x4, x22
  41409c:	mov	x3, x28
  4140a0:	add	x2, x2, #0x1a8
  4140a4:	mov	x0, #0x0                   	// #0
  4140a8:	bl	417aa8 <error@@Base>
  4140ac:	ldr	w0, [sp, #120]
  4140b0:	cbz	w0, 413bfc <reap_children@@Base+0x160>
  4140b4:	mov	w22, #0x2                   	// #2
  4140b8:	b	413c20 <reap_children@@Base+0x184>
  4140bc:	tbnz	w0, #31, 414064 <reap_children@@Base+0x5c8>
  4140c0:	ldr	w0, [sp, #144]
  4140c4:	and	w1, w0, #0xf000
  4140c8:	cmp	w1, #0x4, lsl #12
  4140cc:	b.eq	4140d4 <reap_children@@Base+0x638>  // b.none
  4140d0:	tbnz	w0, #6, 4140dc <reap_children@@Base+0x640>
  4140d4:	mov	w0, #0xd                   	// #13
  4140d8:	b	41406c <reap_children@@Base+0x5d0>
  4140dc:	ldr	x0, [sp, #176]
  4140e0:	cbnz	x0, 4140ac <reap_children@@Base+0x610>
  4140e4:	mov	w0, #0x8                   	// #8
  4140e8:	b	41406c <reap_children@@Base+0x5d0>
  4140ec:	cset	w0, eq  // eq = none
  4140f0:	add	w0, w0, #0x2
  4140f4:	b	413d08 <reap_children@@Base+0x26c>
  4140f8:	ldp	w1, w2, [sp, #116]
  4140fc:	mov	x0, x19
  414100:	ldr	w3, [sp, #124]
  414104:	mov	w4, #0x1                   	// #1
  414108:	bl	41243c <try_implicit_rule@@Base+0xfc>
  41410c:	mov	x0, x19
  414110:	bl	41278c <try_implicit_rule@@Base+0x44c>
  414114:	mov	w22, w0
  414118:	cbz	w0, 4141a4 <reap_children@@Base+0x708>
  41411c:	ldr	w0, [x28, #480]
  414120:	cbz	w0, 414154 <reap_children@@Base+0x6b8>
  414124:	ldr	x1, [x19, #40]
  414128:	ldrb	w0, [x1, #136]
  41412c:	orr	w0, w0, #0x3
  414130:	strb	w0, [x1, #136]
  414134:	ldr	x0, [x19, #40]
  414138:	ldrb	w0, [x0, #136]
  41413c:	tst	x0, #0x3
  414140:	b.eq	41414c <reap_children@@Base+0x6b0>  // b.none
  414144:	mov	x0, x19
  414148:	bl	409fd4 <delete_child_targets@@Base>
  41414c:	mov	w22, #0x0                   	// #0
  414150:	b	413d60 <reap_children@@Base+0x2c4>
  414154:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414158:	ldr	w0, [x0, #3304]
  41415c:	cmp	w0, #0x1
  414160:	b.ne	41416c <reap_children@@Base+0x6d0>  // b.any
  414164:	add	x0, x19, #0x10
  414168:	bl	417280 <output_dump@@Base>
  41416c:	mov	w0, #0x0                   	// #0
  414170:	bl	422284 <start_remote_job_p@@Base>
  414174:	ldrb	w1, [x19, #80]
  414178:	bfxil	w1, w0, #0, #1
  41417c:	mov	x0, x19
  414180:	strb	w1, [x19, #80]
  414184:	bl	4135e4 <construct_command_argv@@Base+0xc8>
  414188:	bl	412428 <try_implicit_rule@@Base+0xe8>
  41418c:	ldr	x0, [x19, #40]
  414190:	ldrb	w0, [x0, #136]
  414194:	and	w0, w0, #0xc
  414198:	cmp	w0, #0x8
  41419c:	b.ne	414134 <reap_children@@Base+0x698>  // b.any
  4141a0:	b	413ad8 <reap_children@@Base+0x3c>
  4141a4:	ldr	x1, [x19, #40]
  4141a8:	ldrb	w0, [x1, #136]
  4141ac:	and	w0, w0, #0xfffffffc
  4141b0:	strb	w0, [x1, #136]
  4141b4:	b	413d60 <reap_children@@Base+0x2c4>
  4141b8:	adrp	x3, 424000 <_IO_stdin_used@@Base+0x1720>
  4141bc:	add	x3, x3, #0x819
  4141c0:	b	413df0 <reap_children@@Base+0x354>
  4141c4:	str	x0, [x21, #32]
  4141c8:	b	413e30 <reap_children@@Base+0x394>
  4141cc:	mov	w23, #0x0                   	// #0
  4141d0:	b	413ad8 <reap_children@@Base+0x3c>
  4141d4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4141d8:	ldr	w0, [x0, #1104]
  4141dc:	tbz	w0, #2, 414254 <reap_children@@Base+0x7b8>
  4141e0:	ldp	w0, w1, [sp, #116]
  4141e4:	mov	w2, #0x5                   	// #5
  4141e8:	orr	w0, w0, w1
  4141ec:	cbnz	w0, 414020 <reap_children@@Base+0x584>
  4141f0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4141f4:	add	x1, x1, #0x920
  4141f8:	mov	x0, #0x0                   	// #0
  4141fc:	bl	406d60 <dcgettext@plt>
  414200:	ldrsw	x2, [x19, #76]
  414204:	mov	x22, x0
  414208:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41420c:	mov	x0, x24
  414210:	add	x1, x1, #0x7b9
  414214:	bl	4067a0 <sprintf@plt>
  414218:	ldrb	w0, [x19, #80]
  41421c:	tbz	w0, #0, 41402c <reap_children@@Base+0x590>
  414220:	mov	w2, #0x5                   	// #5
  414224:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414228:	mov	x0, #0x0                   	// #0
  41422c:	add	x1, x1, #0x903
  414230:	bl	406d60 <dcgettext@plt>
  414234:	mov	x3, x0
  414238:	mov	x2, x24
  41423c:	mov	x1, x19
  414240:	mov	x0, x22
  414244:	bl	406df0 <printf@plt>
  414248:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41424c:	ldr	x0, [x0, #400]
  414250:	bl	406cb0 <fflush@plt>
  414254:	ldr	x0, [x20, #16]
  414258:	cbz	x0, 413be8 <reap_children@@Base+0x14c>
  41425c:	sub	x0, x0, #0x1
  414260:	str	x0, [x20, #16]
  414264:	b	413be8 <reap_children@@Base+0x14c>
  414268:	cbnz	w22, 413f00 <reap_children@@Base+0x464>
  41426c:	b	413ffc <reap_children@@Base+0x560>
  414270:	stp	x29, x30, [sp, #-160]!
  414274:	mov	x29, sp
  414278:	stp	x19, x20, [sp, #16]
  41427c:	mov	x19, x0
  414280:	stp	x21, x22, [sp, #32]
  414284:	stp	x23, x24, [sp, #48]
  414288:	ldr	x23, [x0, #40]
  41428c:	mov	w0, #0x1                   	// #1
  414290:	str	x25, [sp, #64]
  414294:	str	d8, [sp, #72]
  414298:	bl	422284 <start_remote_job_p@@Base>
  41429c:	ldrb	w1, [x19, #80]
  4142a0:	bfxil	w1, w0, #0, #1
  4142a4:	strb	w1, [x19, #80]
  4142a8:	tbnz	w1, #0, 414628 <reap_children@@Base+0xb8c>
  4142ac:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  4142b0:	add	x20, x20, #0x398
  4142b4:	ldr	w0, [x20, #140]
  4142b8:	cbz	w0, 414628 <reap_children@@Base+0xb8c>
  4142bc:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  4142c0:	ldr	d0, [x22, #176]
  4142c4:	fcmpe	d0, #0.0
  4142c8:	b.mi	414628 <reap_children@@Base+0xb8c>  // b.first
  4142cc:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  4142d0:	add	x21, x21, #0x48
  4142d4:	ldr	w0, [x21, #80]
  4142d8:	cmn	w0, #0x2
  4142dc:	b.ne	414334 <reap_children@@Base+0x898>  // b.any
  4142e0:	adrp	x24, 424000 <_IO_stdin_used@@Base+0x1720>
  4142e4:	add	x24, x24, #0x9ec
  4142e8:	mov	x0, x24
  4142ec:	mov	w1, #0x0                   	// #0
  4142f0:	bl	406980 <open@plt>
  4142f4:	str	w0, [x21, #80]
  4142f8:	cmn	w0, #0x1
  4142fc:	b.ne	41438c <reap_children@@Base+0x8f0>  // b.any
  414300:	bl	406e00 <__errno_location@plt>
  414304:	ldr	w0, [x0]
  414308:	cmp	w0, #0x4
  41430c:	b.eq	4142e8 <reap_children@@Base+0x84c>  // b.none
  414310:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414314:	ldr	w0, [x0, #1104]
  414318:	tbz	w0, #2, 414334 <reap_children@@Base+0x898>
  41431c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414320:	add	x0, x0, #0x9fa
  414324:	bl	406b80 <puts@plt>
  414328:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41432c:	ldr	x0, [x0, #400]
  414330:	bl	406cb0 <fflush@plt>
  414334:	ldr	w24, [x21, #80]
  414338:	tbnz	w24, #31, 414500 <reap_children@@Base+0xa64>
  41433c:	mov	w0, w24
  414340:	mov	w2, #0x0                   	// #0
  414344:	mov	x1, #0x0                   	// #0
  414348:	bl	406870 <lseek@plt>
  41434c:	cmn	w0, #0x1
  414350:	b.ne	4143c4 <reap_children@@Base+0x928>  // b.any
  414354:	bl	406e00 <__errno_location@plt>
  414358:	ldr	w0, [x0]
  41435c:	cmp	w0, #0x4
  414360:	b.eq	41433c <reap_children@@Base+0x8a0>  // b.none
  414364:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414368:	ldr	w0, [x0, #1104]
  41436c:	tbz	w0, #2, 4144f0 <reap_children@@Base+0xa54>
  414370:	bl	406e00 <__errno_location@plt>
  414374:	ldr	w0, [x0]
  414378:	bl	406ad0 <strerror@plt>
  41437c:	mov	x1, x0
  414380:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414384:	add	x0, x0, #0xaa3
  414388:	b	4144e0 <reap_children@@Base+0xa44>
  41438c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  414390:	ldr	w1, [x1, #1104]
  414394:	and	w1, w1, #0x4
  414398:	tbnz	w0, #31, 414310 <reap_children@@Base+0x874>
  41439c:	cbz	w1, 4143b8 <reap_children@@Base+0x91c>
  4143a0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4143a4:	add	x0, x0, #0xa1e
  4143a8:	bl	406b80 <puts@plt>
  4143ac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4143b0:	ldr	x0, [x0, #400]
  4143b4:	bl	406cb0 <fflush@plt>
  4143b8:	ldr	w0, [x21, #80]
  4143bc:	bl	422098 <fd_noinherit@@Base>
  4143c0:	b	414334 <reap_children@@Base+0x898>
  4143c4:	tbnz	w0, #31, 414364 <reap_children@@Base+0x8c8>
  4143c8:	add	x25, sp, #0x58
  4143cc:	ldr	w0, [x21, #80]
  4143d0:	mov	x1, x25
  4143d4:	mov	x2, #0x40                  	// #64
  4143d8:	bl	406d10 <read@plt>
  4143dc:	mov	w1, w0
  4143e0:	cmn	w0, #0x1
  4143e4:	b.ne	4143fc <reap_children@@Base+0x960>  // b.any
  4143e8:	bl	406e00 <__errno_location@plt>
  4143ec:	ldr	w0, [x0]
  4143f0:	cmp	w0, #0x4
  4143f4:	b.eq	4143cc <reap_children@@Base+0x930>  // b.none
  4143f8:	b	414364 <reap_children@@Base+0x8c8>
  4143fc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414400:	ldr	w24, [x0, #1104]
  414404:	and	w24, w24, #0x4
  414408:	tbnz	w1, #31, 414364 <reap_children@@Base+0x8c8>
  41440c:	mov	x0, x25
  414410:	strb	wzr, [x25, w1, sxtw]
  414414:	mov	w1, #0x20                  	// #32
  414418:	bl	406c40 <strchr@plt>
  41441c:	cbz	x0, 4144d0 <reap_children@@Base+0xa34>
  414420:	add	x0, x0, #0x1
  414424:	mov	w1, #0x20                  	// #32
  414428:	bl	406c40 <strchr@plt>
  41442c:	cbz	x0, 4144d0 <reap_children@@Base+0xa34>
  414430:	add	x0, x0, #0x1
  414434:	mov	w1, #0x20                  	// #32
  414438:	bl	406c40 <strchr@plt>
  41443c:	cbz	x0, 4144d0 <reap_children@@Base+0xa34>
  414440:	ldrb	w1, [x0, #1]
  414444:	sub	w1, w1, #0x30
  414448:	cmp	w1, #0x9
  41444c:	b.hi	4144d0 <reap_children@@Base+0xa34>  // b.pmore
  414450:	add	x0, x0, #0x1
  414454:	bl	406910 <atoi@plt>
  414458:	mov	w21, w0
  41445c:	cbz	w24, 414484 <reap_children@@Base+0x9e8>
  414460:	ldr	w2, [x20, #140]
  414464:	mov	w1, w0
  414468:	ldr	d0, [x22, #176]
  41446c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414470:	add	x0, x0, #0xa49
  414474:	bl	406df0 <printf@plt>
  414478:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41447c:	ldr	x0, [x0, #400]
  414480:	bl	406cb0 <fflush@plt>
  414484:	scvtf	d0, w21
  414488:	ldr	d1, [x22, #176]
  41448c:	fcmpe	d0, d1
  414490:	cset	w0, gt
  414494:	cbz	w0, 414628 <reap_children@@Base+0xb8c>
  414498:	mov	x0, x23
  41449c:	mov	w1, #0x2                   	// #2
  4144a0:	bl	40cea0 <set_command_state@@Base>
  4144a4:	ldr	x0, [x20, #160]
  4144a8:	str	x0, [x19, #32]
  4144ac:	mov	w0, #0x0                   	// #0
  4144b0:	str	x19, [x20, #160]
  4144b4:	ldp	x19, x20, [sp, #16]
  4144b8:	ldp	x21, x22, [sp, #32]
  4144bc:	ldp	x23, x24, [sp, #48]
  4144c0:	ldr	x25, [sp, #64]
  4144c4:	ldr	d8, [sp, #72]
  4144c8:	ldp	x29, x30, [sp], #160
  4144cc:	ret
  4144d0:	cbz	w24, 4144f0 <reap_children@@Base+0xa54>
  4144d4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4144d8:	mov	x1, x25
  4144dc:	add	x0, x0, #0xa80
  4144e0:	bl	406df0 <printf@plt>
  4144e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4144e8:	ldr	x0, [x0, #400]
  4144ec:	bl	406cb0 <fflush@plt>
  4144f0:	ldr	w0, [x21, #80]
  4144f4:	bl	406ae0 <close@plt>
  4144f8:	mov	w0, #0xffffffff            	// #-1
  4144fc:	str	w0, [x21, #80]
  414500:	bl	416f78 <make_access@@Base>
  414504:	add	x0, sp, #0x58
  414508:	mov	w1, #0x1                   	// #1
  41450c:	bl	4067e0 <getloadavg@plt>
  414510:	cmp	w0, #0x1
  414514:	b.eq	41456c <reap_children@@Base+0xad0>  // b.none
  414518:	bl	406e00 <__errno_location@plt>
  41451c:	ldr	w25, [x21, #84]
  414520:	mov	x24, x0
  414524:	ldr	w0, [x0]
  414528:	cmn	w25, #0x1
  41452c:	b.eq	414538 <reap_children@@Base+0xa9c>  // b.none
  414530:	cmp	w25, w0
  414534:	b.eq	414560 <reap_children@@Base+0xac4>  // b.none
  414538:	mov	w2, #0x5                   	// #5
  41453c:	cbnz	w0, 414600 <reap_children@@Base+0xb64>
  414540:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414544:	mov	x0, #0x0                   	// #0
  414548:	add	x1, x1, #0xac5
  41454c:	bl	406d60 <dcgettext@plt>
  414550:	mov	x1, #0x0                   	// #0
  414554:	mov	x2, x0
  414558:	mov	x0, #0x0                   	// #0
  41455c:	bl	417aa8 <error@@Base>
  414560:	ldr	w0, [x24]
  414564:	str	w0, [x21, #84]
  414568:	str	xzr, [sp, #88]
  41456c:	bl	416f74 <user_access@@Base>
  414570:	mov	x0, #0x0                   	// #0
  414574:	bl	406940 <time@plt>
  414578:	ldr	x1, [x20, #144]
  41457c:	fmov	d0, #2.500000000000000000e-01
  414580:	cmp	x0, x1
  414584:	b.le	4145ac <reap_children@@Base+0xb10>
  414588:	sub	x2, x0, #0x1
  41458c:	cmp	x1, x2
  414590:	b.ne	414620 <reap_children@@Base+0xb84>  // b.any
  414594:	ldr	d1, [x20, #16]
  414598:	ucvtf	d1, d1
  41459c:	fmul	d1, d1, d0
  4145a0:	str	xzr, [x20, #16]
  4145a4:	str	x0, [x20, #144]
  4145a8:	str	d1, [x20, #152]
  4145ac:	ldr	d8, [x20, #16]
  4145b0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4145b4:	ldr	d2, [x20, #152]
  4145b8:	ldr	w0, [x0, #1104]
  4145bc:	ucvtf	d8, d8
  4145c0:	ldr	d1, [sp, #88]
  4145c4:	fadd	d8, d8, d2
  4145c8:	fmadd	d8, d8, d0, d1
  4145cc:	tbz	w0, #2, 4145f0 <reap_children@@Base+0xb54>
  4145d0:	fmov	d0, d8
  4145d4:	ldr	d2, [x22, #176]
  4145d8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4145dc:	add	x0, x0, #0xb20
  4145e0:	bl	406df0 <printf@plt>
  4145e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4145e8:	ldr	x0, [x0, #400]
  4145ec:	bl	406cb0 <fflush@plt>
  4145f0:	ldr	d0, [x22, #176]
  4145f4:	fcmpe	d8, d0
  4145f8:	cset	w0, ge  // ge = tcont
  4145fc:	b	414494 <reap_children@@Base+0x9f8>
  414600:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414604:	mov	x0, #0x0                   	// #0
  414608:	add	x1, x1, #0xaf9
  41460c:	bl	406d60 <dcgettext@plt>
  414610:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414614:	add	x1, x1, #0xb15
  414618:	bl	417c10 <perror_with_name@@Base>
  41461c:	b	414560 <reap_children@@Base+0xac4>
  414620:	movi	d1, #0x0
  414624:	b	4145a0 <reap_children@@Base+0xb04>
  414628:	mov	x0, x19
  41462c:	bl	4135e4 <construct_command_argv@@Base+0xc8>
  414630:	ldrb	w0, [x23, #136]
  414634:	ubfx	x1, x0, #2, #2
  414638:	cmp	w1, #0x2
  41463c:	b.eq	414654 <reap_children@@Base+0xbb8>  // b.none
  414640:	cmp	w1, #0x3
  414644:	b.eq	414728 <reap_children@@Base+0xc8c>  // b.none
  414648:	cbz	w1, 414720 <reap_children@@Base+0xc84>
  41464c:	mov	w0, #0x1                   	// #1
  414650:	b	4144b4 <reap_children@@Base+0xa18>
  414654:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  414658:	add	x20, x20, #0x398
  41465c:	ldr	x0, [x20, #32]
  414660:	str	x0, [x19, #32]
  414664:	ldr	w0, [x19, #76]
  414668:	cmp	w0, #0x0
  41466c:	b.le	414708 <reap_children@@Base+0xc6c>
  414670:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414674:	ldr	w0, [x0, #1104]
  414678:	tbz	w0, #2, 4146f0 <reap_children@@Base+0xc54>
  41467c:	mov	w2, #0x5                   	// #5
  414680:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414684:	mov	x0, #0x0                   	// #0
  414688:	add	x1, x1, #0xb5f
  41468c:	bl	406d60 <dcgettext@plt>
  414690:	mov	x21, x0
  414694:	ldrsw	x2, [x19, #76]
  414698:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41469c:	ldr	x0, [x19, #40]
  4146a0:	add	x1, x1, #0x7b9
  4146a4:	ldr	x22, [x0]
  4146a8:	add	x0, x20, #0x28
  4146ac:	bl	4067a0 <sprintf@plt>
  4146b0:	ldrb	w0, [x19, #80]
  4146b4:	tbz	w0, #0, 414714 <reap_children@@Base+0xc78>
  4146b8:	mov	w2, #0x5                   	// #5
  4146bc:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4146c0:	mov	x0, #0x0                   	// #0
  4146c4:	add	x1, x1, #0x903
  4146c8:	bl	406d60 <dcgettext@plt>
  4146cc:	mov	x4, x0
  4146d0:	add	x3, x20, #0x28
  4146d4:	mov	x2, x22
  4146d8:	mov	x1, x19
  4146dc:	mov	x0, x21
  4146e0:	bl	406df0 <printf@plt>
  4146e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4146e8:	ldr	x0, [x0, #400]
  4146ec:	bl	406cb0 <fflush@plt>
  4146f0:	ldr	w0, [x20, #140]
  4146f4:	add	w0, w0, #0x1
  4146f8:	str	w0, [x20, #140]
  4146fc:	ldrb	w0, [x19, #80]
  414700:	orr	w0, w0, #0x20
  414704:	strb	w0, [x19, #80]
  414708:	str	x19, [x20, #32]
  41470c:	bl	412428 <try_implicit_rule@@Base+0xe8>
  414710:	b	41464c <reap_children@@Base+0xbb0>
  414714:	adrp	x4, 424000 <_IO_stdin_used@@Base+0x1720>
  414718:	add	x4, x4, #0x819
  41471c:	b	4146d0 <reap_children@@Base+0xc34>
  414720:	and	w0, w0, #0xfffffffc
  414724:	strb	w0, [x23, #136]
  414728:	mov	x0, x23
  41472c:	bl	41c81c <notice_finished_file@@Base>
  414730:	mov	x0, x19
  414734:	bl	412648 <try_implicit_rule@@Base+0x308>
  414738:	b	41464c <reap_children@@Base+0xbb0>

000000000041473c <start_waiting_jobs@@Base>:
  41473c:	stp	x29, x30, [sp, #-32]!
  414740:	mov	x29, sp
  414744:	str	x19, [sp, #16]
  414748:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  41474c:	add	x19, x19, #0x398
  414750:	ldr	x0, [x19, #160]
  414754:	cbz	x0, 414778 <start_waiting_jobs@@Base+0x3c>
  414758:	mov	w1, #0x0                   	// #0
  41475c:	mov	w0, #0x0                   	// #0
  414760:	bl	413a9c <reap_children@@Base>
  414764:	ldr	x0, [x19, #160]
  414768:	ldr	x1, [x0, #32]
  41476c:	str	x1, [x19, #160]
  414770:	bl	414270 <reap_children@@Base+0x7d4>
  414774:	cbnz	w0, 414750 <start_waiting_jobs@@Base+0x14>
  414778:	ldr	x19, [sp, #16]
  41477c:	ldp	x29, x30, [sp], #32
  414780:	ret

0000000000414784 <new_job@@Base>:
  414784:	stp	x29, x30, [sp, #-128]!
  414788:	mov	x29, sp
  41478c:	stp	x19, x20, [sp, #16]
  414790:	stp	x21, x22, [sp, #32]
  414794:	mov	x22, x0
  414798:	stp	x23, x24, [sp, #48]
  41479c:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  4147a0:	mov	x23, #0x0                   	// #0
  4147a4:	stp	x25, x26, [sp, #64]
  4147a8:	adrp	x26, 43e000 <expanding_var@@Base+0x328>
  4147ac:	add	x26, x26, #0x454
  4147b0:	stp	x27, x28, [sp, #80]
  4147b4:	ldr	x21, [x0, #32]
  4147b8:	bl	41473c <start_waiting_jobs@@Base>
  4147bc:	mov	w1, #0x0                   	// #0
  4147c0:	mov	w0, #0x0                   	// #0
  4147c4:	bl	413a9c <reap_children@@Base>
  4147c8:	mov	x0, x21
  4147cc:	bl	409c78 <chop_commands@@Base>
  4147d0:	mov	x0, #0x58                  	// #88
  4147d4:	bl	416a78 <xcalloc@@Base>
  4147d8:	mov	x20, x0
  4147dc:	add	x19, x0, #0x10
  4147e0:	mov	x0, x19
  4147e4:	bl	417478 <output_init@@Base>
  4147e8:	ldrb	w1, [x22, #138]
  4147ec:	ldrb	w0, [x20, #80]
  4147f0:	bfi	w0, w1, #6, #1
  4147f4:	strb	w0, [x20, #80]
  4147f8:	ldrb	w0, [x20, #24]
  4147fc:	tst	x0, #0x1
  414800:	ldrh	w0, [x21, #48]
  414804:	stp	x22, xzr, [x20, #40]
  414808:	csel	x19, x19, xzr, ne  // ne = any
  41480c:	lsl	x0, x0, #3
  414810:	str	x19, [x24, #3512]
  414814:	bl	416a54 <xmalloc@@Base>
  414818:	mov	x25, x0
  41481c:	ldrh	w0, [x21, #48]
  414820:	cmp	w0, w23
  414824:	b.hi	41494c <new_job@@Base+0x1c8>  // b.pmore
  414828:	str	xzr, [x21, #16]
  41482c:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  414830:	str	x25, [x20, #56]
  414834:	mov	x0, x20
  414838:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  41483c:	bl	41278c <try_implicit_rule@@Base+0x44c>
  414840:	ldr	w0, [x23, #2200]
  414844:	cbz	w0, 414af4 <new_job@@Base+0x370>
  414848:	add	x26, x25, #0x398
  41484c:	add	x19, x23, #0x898
  414850:	ldr	w0, [x19]
  414854:	ldr	w1, [x26, #140]
  414858:	cmp	w1, w0
  41485c:	b.eq	414ae4 <new_job@@Base+0x360>  // b.none
  414860:	ldr	w0, [x25, #920]
  414864:	add	w0, w0, #0x1
  414868:	str	w0, [x25, #920]
  41486c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414870:	ldr	w0, [x0, #3396]
  414874:	cbz	w0, 414908 <new_job@@Base+0x184>
  414878:	ldr	x1, [x20, #40]
  41487c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414880:	add	x0, x0, #0xc0e
  414884:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  414888:	mov	x19, x0
  41488c:	ldr	x25, [x21]
  414890:	cbnz	x25, 414bd4 <new_job@@Base+0x450>
  414894:	mov	w2, #0x5                   	// #5
  414898:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41489c:	mov	x0, #0x0                   	// #0
  4148a0:	add	x1, x1, #0x7ac
  4148a4:	bl	406d60 <dcgettext@plt>
  4148a8:	mov	x27, x0
  4148ac:	mov	x0, x27
  4148b0:	bl	406700 <strlen@plt>
  4148b4:	ldrb	w1, [x19]
  4148b8:	mov	x25, x0
  4148bc:	ldr	x0, [x20, #40]
  4148c0:	ldr	x0, [x0]
  4148c4:	cbnz	w1, 414c08 <new_job@@Base+0x484>
  4148c8:	bl	406700 <strlen@plt>
  4148cc:	mov	x21, x0
  4148d0:	mov	w2, #0x5                   	// #5
  4148d4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4148d8:	mov	x0, #0x0                   	// #0
  4148dc:	add	x1, x1, #0xc11
  4148e0:	bl	406d60 <dcgettext@plt>
  4148e4:	mov	x2, x0
  4148e8:	ldr	x1, [x20, #40]
  4148ec:	mov	x3, x27
  4148f0:	mov	w0, #0x0                   	// #0
  4148f4:	ldr	x4, [x1]
  4148f8:	add	x1, x21, x25
  4148fc:	bl	417984 <message@@Base>
  414900:	mov	x0, x19
  414904:	bl	406c20 <free@plt>
  414908:	mov	x0, x20
  41490c:	bl	414270 <reap_children@@Base+0x7d4>
  414910:	ldr	w0, [x23, #2200]
  414914:	cmp	w0, #0x1
  414918:	b.eq	414c64 <new_job@@Base+0x4e0>  // b.none
  41491c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  414920:	ldr	w0, [x0, #2028]
  414924:	cbnz	w0, 414c64 <new_job@@Base+0x4e0>
  414928:	str	xzr, [x24, #3512]
  41492c:	mov	sp, x29
  414930:	ldp	x19, x20, [sp, #16]
  414934:	ldp	x21, x22, [sp, #32]
  414938:	ldp	x23, x24, [sp, #48]
  41493c:	ldp	x25, x26, [sp, #64]
  414940:	ldp	x27, x28, [sp, #80]
  414944:	ldp	x29, x30, [sp], #128
  414948:	ret
  41494c:	ldr	x0, [x21, #32]
  414950:	lsl	x27, x23, #3
  414954:	ldr	x28, [x0, x27]
  414958:	mov	x19, x28
  41495c:	mov	x0, x28
  414960:	mov	w1, #0x24                  	// #36
  414964:	bl	406c40 <strchr@plt>
  414968:	mov	x3, x0
  41496c:	cbnz	x0, 4149b0 <new_job@@Base+0x22c>
  414970:	cmp	x28, x19
  414974:	b.eq	414990 <new_job@@Base+0x20c>  // b.none
  414978:	mov	x0, x28
  41497c:	bl	406700 <strlen@plt>
  414980:	mov	x1, x28
  414984:	add	x2, x0, #0x1
  414988:	mov	x0, x19
  41498c:	bl	4066d0 <memmove@plt>
  414990:	ldr	x0, [x21, #32]
  414994:	mov	x1, x22
  414998:	ldr	x0, [x0, x27]
  41499c:	str	x23, [x21, #16]
  4149a0:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  4149a4:	str	x0, [x25, x23, lsl #3]
  4149a8:	add	x23, x23, #0x1
  4149ac:	b	41481c <new_job@@Base+0x98>
  4149b0:	add	x6, x3, #0x1
  4149b4:	cmp	x28, x19
  4149b8:	sub	x2, x6, x28
  4149bc:	b.eq	4149dc <new_job@@Base+0x258>  // b.none
  4149c0:	mov	x1, x28
  4149c4:	mov	x0, x19
  4149c8:	stp	x6, x3, [x29, #104]
  4149cc:	str	x2, [x29, #120]
  4149d0:	bl	4066d0 <memmove@plt>
  4149d4:	ldp	x6, x3, [x29, #104]
  4149d8:	ldr	x2, [x29, #120]
  4149dc:	add	x19, x19, x2
  4149e0:	ldrb	w2, [x3, #1]
  4149e4:	mov	w0, #0x7b                  	// #123
  4149e8:	cmp	w2, #0x28
  4149ec:	ccmp	w2, w0, #0x4, ne  // ne = any
  4149f0:	b.ne	414adc <new_job@@Base+0x358>  // b.any
  4149f4:	add	x28, x3, #0x2
  4149f8:	mov	x3, x19
  4149fc:	cmp	w2, #0x28
  414a00:	mov	w4, #0x7d                  	// #125
  414a04:	mov	w0, #0x29                  	// #41
  414a08:	csel	w4, w4, w0, ne  // ne = any
  414a0c:	strb	w2, [x3], #1
  414a10:	mov	w1, #0x0                   	// #0
  414a14:	mov	w8, #0x20                  	// #32
  414a18:	mov	w9, #0x5c                  	// #92
  414a1c:	mov	x19, x3
  414a20:	ldrb	w0, [x28]
  414a24:	cbz	w0, 41495c <new_job@@Base+0x1d8>
  414a28:	cmp	w0, w4
  414a2c:	b.ne	414a3c <new_job@@Base+0x2b8>  // b.any
  414a30:	sub	w1, w1, #0x1
  414a34:	cmn	w1, #0x1
  414a38:	b.eq	41495c <new_job@@Base+0x1d8>  // b.none
  414a3c:	cmp	w0, #0x5c
  414a40:	b.ne	414ac8 <new_job@@Base+0x344>  // b.any
  414a44:	ldrb	w7, [x28, #1]
  414a48:	cmp	w7, #0xa
  414a4c:	b.ne	414ac8 <new_job@@Base+0x344>  // b.any
  414a50:	sub	x0, x28, #0x1
  414a54:	mov	w7, #0x0                   	// #0
  414a58:	cmp	x0, x6
  414a5c:	b.ls	414a6c <new_job@@Base+0x2e8>  // b.plast
  414a60:	ldrb	w10, [x0]
  414a64:	cmp	w10, #0x5c
  414a68:	b.eq	414a7c <new_job@@Base+0x2f8>  // b.none
  414a6c:	cbz	w7, 414a88 <new_job@@Base+0x304>
  414a70:	add	x28, x28, #0x1
  414a74:	strb	w9, [x19], #1
  414a78:	b	414a20 <new_job@@Base+0x29c>
  414a7c:	eor	w7, w7, #0x1
  414a80:	sub	x0, x0, #0x1
  414a84:	b	414a58 <new_job@@Base+0x2d4>
  414a88:	add	x28, x28, #0x2
  414a8c:	ldrb	w0, [x28]
  414a90:	ldrh	w0, [x26, x0, lsl #1]
  414a94:	tst	w0, #0x6
  414a98:	b.ne	414ab8 <new_job@@Base+0x334>  // b.any
  414a9c:	cmp	x19, x3
  414aa0:	b.ls	414ab0 <new_job@@Base+0x32c>  // b.plast
  414aa4:	ldurb	w0, [x19, #-1]
  414aa8:	ldrh	w0, [x26, x0, lsl #1]
  414aac:	tbnz	w0, #1, 414ac0 <new_job@@Base+0x33c>
  414ab0:	strb	w8, [x19], #1
  414ab4:	b	414a20 <new_job@@Base+0x29c>
  414ab8:	add	x28, x28, #0x1
  414abc:	b	414a8c <new_job@@Base+0x308>
  414ac0:	sub	x19, x19, #0x1
  414ac4:	b	414a9c <new_job@@Base+0x318>
  414ac8:	cmp	w0, w2
  414acc:	add	x28, x28, #0x1
  414ad0:	cinc	w1, w1, eq  // eq = none
  414ad4:	strb	w0, [x19], #1
  414ad8:	b	414a20 <new_job@@Base+0x29c>
  414adc:	mov	x28, x6
  414ae0:	b	41495c <new_job@@Base+0x1d8>
  414ae4:	mov	w1, #0x0                   	// #0
  414ae8:	mov	w0, #0x1                   	// #1
  414aec:	bl	413a9c <reap_children@@Base>
  414af0:	b	414850 <new_job@@Base+0xcc>
  414af4:	bl	421cb0 <jobserver_enabled@@Base>
  414af8:	cbz	w0, 414860 <new_job@@Base+0xdc>
  414afc:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  414b00:	adrp	x26, 424000 <_IO_stdin_used@@Base+0x1720>
  414b04:	add	x28, x27, #0x450
  414b08:	add	x19, x25, #0x398
  414b0c:	add	x26, x26, #0xb8d
  414b10:	ldr	w0, [x28]
  414b14:	tbz	w0, #2, 414b44 <new_job@@Base+0x3c0>
  414b18:	ldr	x0, [x19, #32]
  414b1c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414b20:	add	x1, x1, #0x819
  414b24:	cmp	x0, #0x0
  414b28:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414b2c:	csel	x1, x1, x26, ne  // ne = any
  414b30:	add	x0, x0, #0xb94
  414b34:	bl	406df0 <printf@plt>
  414b38:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414b3c:	ldr	x0, [x0, #400]
  414b40:	bl	406cb0 <fflush@plt>
  414b44:	ldr	w0, [x19]
  414b48:	cbz	w0, 414860 <new_job@@Base+0xdc>
  414b4c:	bl	421e64 <jobserver_pre_acquire@@Base>
  414b50:	mov	w0, #0x0                   	// #0
  414b54:	mov	w1, #0x0                   	// #0
  414b58:	bl	413a9c <reap_children@@Base>
  414b5c:	bl	41473c <start_waiting_jobs@@Base>
  414b60:	ldr	w0, [x19]
  414b64:	cbz	w0, 414860 <new_job@@Base+0xdc>
  414b68:	ldr	x0, [x19, #32]
  414b6c:	cbnz	x0, 414b80 <new_job@@Base+0x3fc>
  414b70:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  414b74:	mov	x1, #0x0                   	// #0
  414b78:	add	x2, x2, #0xbba
  414b7c:	bl	417d24 <fatal@@Base>
  414b80:	ldr	x0, [x19, #160]
  414b84:	cmp	x0, #0x0
  414b88:	cset	w0, ne  // ne = any
  414b8c:	bl	421e68 <jobserver_acquire@@Base>
  414b90:	cmp	w0, #0x1
  414b94:	b.ne	414b10 <new_job@@Base+0x38c>  // b.any
  414b98:	ldr	w0, [x27, #1104]
  414b9c:	tbz	w0, #2, 414860 <new_job@@Base+0xdc>
  414ba0:	mov	w2, #0x5                   	// #5
  414ba4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414ba8:	mov	x0, #0x0                   	// #0
  414bac:	add	x1, x1, #0xbeb
  414bb0:	bl	406d60 <dcgettext@plt>
  414bb4:	ldr	x1, [x20, #40]
  414bb8:	ldr	x2, [x1]
  414bbc:	mov	x1, x20
  414bc0:	bl	406df0 <printf@plt>
  414bc4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414bc8:	ldr	x0, [x0, #400]
  414bcc:	bl	406cb0 <fflush@plt>
  414bd0:	b	414860 <new_job@@Base+0xdc>
  414bd4:	mov	x0, x25
  414bd8:	bl	406700 <strlen@plt>
  414bdc:	add	x0, x0, #0x1c
  414be0:	mov	x2, x25
  414be4:	ldr	x3, [x21, #8]
  414be8:	and	x0, x0, #0xfffffffffffffff0
  414bec:	sub	sp, sp, x0
  414bf0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414bf4:	mov	x27, sp
  414bf8:	add	x1, x1, #0x7b6
  414bfc:	mov	x0, x27
  414c00:	bl	4067a0 <sprintf@plt>
  414c04:	b	4148ac <new_job@@Base+0x128>
  414c08:	bl	406700 <strlen@plt>
  414c0c:	mov	x21, x0
  414c10:	mov	x0, x19
  414c14:	bl	406700 <strlen@plt>
  414c18:	mov	w2, #0x5                   	// #5
  414c1c:	mov	x26, x0
  414c20:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414c24:	mov	x0, #0x0                   	// #0
  414c28:	add	x1, x1, #0xc30
  414c2c:	bl	406d60 <dcgettext@plt>
  414c30:	ldr	x2, [x20, #40]
  414c34:	add	x1, x21, x26
  414c38:	mov	x5, x19
  414c3c:	mov	x3, x27
  414c40:	add	x1, x1, x25
  414c44:	ldr	x4, [x2]
  414c48:	mov	x2, x0
  414c4c:	mov	w0, #0x0                   	// #0
  414c50:	bl	417984 <message@@Base>
  414c54:	b	414900 <new_job@@Base+0x17c>
  414c58:	mov	w1, #0x0                   	// #0
  414c5c:	mov	w0, #0x1                   	// #1
  414c60:	bl	413a9c <reap_children@@Base>
  414c64:	ldrb	w0, [x22, #136]
  414c68:	and	w0, w0, #0xc
  414c6c:	cmp	w0, #0x8
  414c70:	b.eq	414c58 <new_job@@Base+0x4d4>  // b.none
  414c74:	b	414928 <new_job@@Base+0x1a4>

0000000000414c78 <load_file@@Base>:
  414c78:	stp	x29, x30, [sp, #-96]!
  414c7c:	mov	x29, sp
  414c80:	stp	x25, x26, [sp, #64]
  414c84:	ldr	x25, [x1]
  414c88:	stp	x19, x20, [sp, #16]
  414c8c:	mov	w20, w2
  414c90:	stp	x21, x22, [sp, #32]
  414c94:	mov	x21, x1
  414c98:	stp	x23, x24, [sp, #48]
  414c9c:	mov	x23, x0
  414ca0:	mov	x0, x25
  414ca4:	stp	x27, x28, [sp, #80]
  414ca8:	bl	406700 <strlen@plt>
  414cac:	mov	x24, x0
  414cb0:	add	x0, x0, #0x1a
  414cb4:	mov	w1, #0x28                  	// #40
  414cb8:	and	x0, x0, #0xfffffffffffffff0
  414cbc:	sub	sp, sp, x0
  414cc0:	mov	x0, x25
  414cc4:	mov	x26, sp
  414cc8:	bl	406c40 <strchr@plt>
  414ccc:	mov	x19, x0
  414cd0:	cbz	x0, 414d6c <load_file@@Base+0xf4>
  414cd4:	add	x27, x0, #0x1
  414cd8:	mov	w1, #0x29                  	// #41
  414cdc:	mov	x0, x27
  414ce0:	bl	406c40 <strchr@plt>
  414ce4:	mov	x22, x0
  414ce8:	cbz	x0, 414e98 <load_file@@Base+0x220>
  414cec:	ldrb	w0, [x0, #1]
  414cf0:	cbnz	w0, 414e98 <load_file@@Base+0x220>
  414cf4:	sub	x24, x19, x25
  414cf8:	cmp	x27, x22
  414cfc:	b.ne	414d34 <load_file@@Base+0xbc>  // b.any
  414d00:	mov	x0, x25
  414d04:	bl	406700 <strlen@plt>
  414d08:	mov	w2, #0x5                   	// #5
  414d0c:	mov	x19, x0
  414d10:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414d14:	mov	x0, #0x0                   	// #0
  414d18:	add	x1, x1, #0xe40
  414d1c:	bl	406d60 <dcgettext@plt>
  414d20:	ldr	x3, [x21]
  414d24:	mov	x2, x0
  414d28:	mov	x1, x19
  414d2c:	mov	x0, x23
  414d30:	bl	417d24 <fatal@@Base>
  414d34:	add	x19, x24, #0x1
  414d38:	sub	x22, x22, x27
  414d3c:	add	x19, x26, x19
  414d40:	mov	x2, x24
  414d44:	mov	x1, x25
  414d48:	mov	x0, x26
  414d4c:	bl	4066c0 <memcpy@plt>
  414d50:	strb	wzr, [x26, x24]
  414d54:	str	x26, [x21]
  414d58:	mov	x2, x22
  414d5c:	mov	x1, x27
  414d60:	mov	x0, x19
  414d64:	bl	4066c0 <memcpy@plt>
  414d68:	strb	wzr, [x19, x22]
  414d6c:	ldr	x0, [x21]
  414d70:	bl	41f174 <strcache_add@@Base>
  414d74:	str	x0, [x21]
  414d78:	mov	x1, #0x0                   	// #0
  414d7c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414d80:	add	x0, x0, #0xe5f
  414d84:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  414d88:	ldr	x22, [x21]
  414d8c:	mov	x25, x0
  414d90:	mov	x1, x22
  414d94:	bl	406d50 <strstr@plt>
  414d98:	cbz	x0, 414dc0 <load_file@@Base+0x148>
  414d9c:	cmp	x25, x0
  414da0:	b.eq	414db0 <load_file@@Base+0x138>  // b.none
  414da4:	ldurb	w1, [x0, #-1]
  414da8:	cmp	w1, #0x20
  414dac:	b.ne	414dc0 <load_file@@Base+0x148>  // b.any
  414db0:	ldrb	w1, [x0, x24]
  414db4:	mov	w0, #0xdf                  	// #223
  414db8:	tst	w1, w0
  414dbc:	b.eq	4150f4 <load_file@@Base+0x47c>  // b.none
  414dc0:	cbnz	x19, 414e10 <load_file@@Base+0x198>
  414dc4:	mov	x0, x22
  414dc8:	mov	w1, #0x2f                  	// #47
  414dcc:	bl	406b00 <strrchr@plt>
  414dd0:	cbz	x0, 414dd8 <load_file@@Base+0x160>
  414dd4:	add	x22, x0, #0x1
  414dd8:	bl	406bf0 <__ctype_b_loc@plt>
  414ddc:	ldr	x3, [x0]
  414de0:	mov	x1, #0x0                   	// #0
  414de4:	ldrb	w4, [x22, x1]
  414de8:	add	x0, x26, x1
  414dec:	ldrb	w2, [x22, x1]
  414df0:	ldrh	w4, [x3, x4, lsl #1]
  414df4:	tbnz	w4, #3, 414ea0 <load_file@@Base+0x228>
  414df8:	cmp	w2, #0x5f
  414dfc:	b.eq	414ea0 <load_file@@Base+0x228>  // b.none
  414e00:	mov	x19, x26
  414e04:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414e08:	add	x1, x1, #0xe6a
  414e0c:	bl	406cc0 <strcpy@plt>
  414e10:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  414e14:	ldr	w0, [x27, #1104]
  414e18:	tbz	w0, #1, 414e48 <load_file@@Base+0x1d0>
  414e1c:	mov	w2, #0x5                   	// #5
  414e20:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414e24:	mov	x0, #0x0                   	// #0
  414e28:	add	x1, x1, #0xe75
  414e2c:	bl	406d60 <dcgettext@plt>
  414e30:	ldr	x2, [x21]
  414e34:	mov	x1, x19
  414e38:	bl	406df0 <printf@plt>
  414e3c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414e40:	ldr	x0, [x0, #400]
  414e44:	bl	406cb0 <fflush@plt>
  414e48:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  414e4c:	mov	x26, x22
  414e50:	ldr	x24, [x21]
  414e54:	ldr	x0, [x22, #1088]
  414e58:	cbnz	x0, 414eac <load_file@@Base+0x234>
  414e5c:	mov	w1, #0x102                 	// #258
  414e60:	bl	406890 <dlopen@plt>
  414e64:	str	x0, [x22, #1088]
  414e68:	cbnz	x0, 414eac <load_file@@Base+0x234>
  414e6c:	bl	406960 <dlerror@plt>
  414e70:	mov	x20, x0
  414e74:	bl	406700 <strlen@plt>
  414e78:	mov	x19, x0
  414e7c:	mov	w2, #0x5                   	// #5
  414e80:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414e84:	mov	x0, #0x0                   	// #0
  414e88:	add	x1, x1, #0xe90
  414e8c:	bl	406d60 <dcgettext@plt>
  414e90:	mov	x3, x20
  414e94:	b	414d24 <load_file@@Base+0xac>
  414e98:	mov	x19, #0x0                   	// #0
  414e9c:	b	414d6c <load_file@@Base+0xf4>
  414ea0:	strb	w2, [x26, x1]
  414ea4:	add	x1, x1, #0x1
  414ea8:	b	414de4 <load_file@@Base+0x16c>
  414eac:	ldr	x0, [x26, #1088]
  414eb0:	mov	x1, x19
  414eb4:	bl	406970 <dlsym@plt>
  414eb8:	mov	x28, x0
  414ebc:	cbnz	x0, 41505c <load_file@@Base+0x3e4>
  414ec0:	mov	x0, x24
  414ec4:	mov	w1, #0x2f                  	// #47
  414ec8:	bl	406c40 <strchr@plt>
  414ecc:	cbz	x0, 414f40 <load_file@@Base+0x2c8>
  414ed0:	mov	x0, x24
  414ed4:	mov	w1, #0x101                 	// #257
  414ed8:	bl	406890 <dlopen@plt>
  414edc:	mov	x22, x0
  414ee0:	cbnz	x0, 414f64 <load_file@@Base+0x2ec>
  414ee4:	bl	406960 <dlerror@plt>
  414ee8:	mov	x19, x0
  414eec:	cbz	w20, 414fa0 <load_file@@Base+0x328>
  414ef0:	ldr	w0, [x27, #1104]
  414ef4:	and	w20, w0, #0x1
  414ef8:	tbz	w0, #0, 414f1c <load_file@@Base+0x2a4>
  414efc:	mov	x1, x19
  414f00:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  414f04:	add	x0, x0, #0xe5c
  414f08:	bl	406df0 <printf@plt>
  414f0c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  414f10:	mov	w20, #0x0                   	// #0
  414f14:	ldr	x0, [x0, #400]
  414f18:	bl	406cb0 <fflush@plt>
  414f1c:	mov	sp, x29
  414f20:	mov	w0, w20
  414f24:	ldp	x19, x20, [sp, #16]
  414f28:	ldp	x21, x22, [sp, #32]
  414f2c:	ldp	x23, x24, [sp, #48]
  414f30:	ldp	x25, x26, [sp, #64]
  414f34:	ldp	x27, x28, [sp, #80]
  414f38:	ldp	x29, x30, [sp], #96
  414f3c:	ret
  414f40:	mov	x2, x24
  414f44:	adrp	x1, 423000 <_IO_stdin_used@@Base+0x720>
  414f48:	mov	w0, #0x2                   	// #2
  414f4c:	add	x1, x1, #0xb37
  414f50:	bl	416ad4 <concat@@Base>
  414f54:	mov	w1, #0x101                 	// #257
  414f58:	bl	406890 <dlopen@plt>
  414f5c:	mov	x22, x0
  414f60:	cbz	x0, 414ed0 <load_file@@Base+0x258>
  414f64:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414f68:	mov	x0, x22
  414f6c:	add	x1, x1, #0xeb7
  414f70:	bl	406970 <dlsym@plt>
  414f74:	cbnz	x0, 414fc0 <load_file@@Base+0x348>
  414f78:	mov	x0, x24
  414f7c:	bl	406700 <strlen@plt>
  414f80:	mov	w2, #0x5                   	// #5
  414f84:	mov	x19, x0
  414f88:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  414f8c:	mov	x0, #0x0                   	// #0
  414f90:	add	x1, x1, #0xed0
  414f94:	bl	406d60 <dcgettext@plt>
  414f98:	mov	x3, x24
  414f9c:	b	414d24 <load_file@@Base+0xac>
  414fa0:	bl	406700 <strlen@plt>
  414fa4:	mov	x1, x0
  414fa8:	mov	x3, x19
  414fac:	mov	x0, x23
  414fb0:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  414fb4:	add	x2, x2, #0xe5c
  414fb8:	bl	417aa8 <error@@Base>
  414fbc:	b	414f1c <load_file@@Base+0x2a4>
  414fc0:	mov	x1, x19
  414fc4:	mov	x0, x22
  414fc8:	bl	406970 <dlsym@plt>
  414fcc:	mov	x28, x0
  414fd0:	cbnz	x0, 415034 <load_file@@Base+0x3bc>
  414fd4:	bl	406960 <dlerror@plt>
  414fd8:	mov	x21, x0
  414fdc:	mov	x0, x19
  414fe0:	bl	406700 <strlen@plt>
  414fe4:	mov	x20, x0
  414fe8:	mov	x0, x24
  414fec:	bl	406700 <strlen@plt>
  414ff0:	mov	x25, x0
  414ff4:	mov	x0, x21
  414ff8:	bl	406700 <strlen@plt>
  414ffc:	mov	w2, #0x5                   	// #5
  415000:	mov	x22, x0
  415004:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  415008:	mov	x0, #0x0                   	// #0
  41500c:	add	x1, x1, #0xf06
  415010:	bl	406d60 <dcgettext@plt>
  415014:	add	x1, x20, x25
  415018:	mov	x2, x0
  41501c:	mov	x5, x21
  415020:	mov	x4, x24
  415024:	mov	x3, x19
  415028:	add	x1, x1, x22
  41502c:	mov	x0, x23
  415030:	bl	417d24 <fatal@@Base>
  415034:	add	x26, x26, #0x440
  415038:	mov	x0, #0x18                  	// #24
  41503c:	bl	416a54 <xmalloc@@Base>
  415040:	mov	x19, x0
  415044:	mov	x0, x24
  415048:	bl	416c24 <xstrdup@@Base>
  41504c:	stp	x0, x22, [x19, #8]
  415050:	ldr	x0, [x26, #8]
  415054:	str	x0, [x19]
  415058:	str	x19, [x26, #8]
  41505c:	mov	x0, x23
  415060:	blr	x28
  415064:	mov	w20, w0
  415068:	cmp	w0, #0x0
  41506c:	b.le	4150e8 <load_file@@Base+0x470>
  415070:	mov	x0, x25
  415074:	bl	406700 <strlen@plt>
  415078:	ldr	x22, [x21]
  41507c:	mov	x19, x0
  415080:	mov	x0, x22
  415084:	bl	406700 <strlen@plt>
  415088:	add	x0, x0, x19
  41508c:	add	x0, x0, #0x11
  415090:	and	x0, x0, #0xfffffffffffffff0
  415094:	sub	sp, sp, x0
  415098:	mov	x21, sp
  41509c:	cbz	x19, 4150bc <load_file@@Base+0x444>
  4150a0:	mov	x2, x19
  4150a4:	mov	x1, x25
  4150a8:	mov	x0, x21
  4150ac:	bl	4066c0 <memcpy@plt>
  4150b0:	mov	w0, #0x20                  	// #32
  4150b4:	strb	w0, [x21, x19]
  4150b8:	add	x19, x19, #0x1
  4150bc:	mov	x1, x22
  4150c0:	add	x0, x21, x19
  4150c4:	bl	406cc0 <strcpy@plt>
  4150c8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4150cc:	mov	x2, x21
  4150d0:	add	x1, x1, #0xf2b
  4150d4:	mov	x0, x23
  4150d8:	mov	w5, #0x0                   	// #0
  4150dc:	mov	w4, #0x1                   	// #1
  4150e0:	mov	w3, #0x0                   	// #0
  4150e4:	bl	420878 <do_variable_definition@@Base>
  4150e8:	mov	x0, x25
  4150ec:	bl	406c20 <free@plt>
  4150f0:	b	414f1c <load_file@@Base+0x2a4>
  4150f4:	mov	w20, #0x1                   	// #1
  4150f8:	b	4150e8 <load_file@@Base+0x470>

00000000004150fc <unload_file@@Base>:
  4150fc:	stp	x29, x30, [sp, #-48]!
  415100:	mov	x29, sp
  415104:	stp	x19, x20, [sp, #16]
  415108:	mov	x20, x0
  41510c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415110:	str	x21, [sp, #32]
  415114:	add	x21, x20, #0x1
  415118:	ldr	x19, [x0, #1096]
  41511c:	cbz	x19, 415174 <unload_file@@Base+0x78>
  415120:	ldr	x0, [x19, #8]
  415124:	cmp	x0, x20
  415128:	b.eq	415150 <unload_file@@Base+0x54>  // b.none
  41512c:	ldrb	w1, [x0]
  415130:	ldrb	w2, [x20]
  415134:	cmp	w2, w1
  415138:	b.ne	415184 <unload_file@@Base+0x88>  // b.any
  41513c:	cbz	w2, 415150 <unload_file@@Base+0x54>
  415140:	mov	x1, x21
  415144:	add	x0, x0, #0x1
  415148:	bl	406be0 <strcmp@plt>
  41514c:	cbnz	w0, 415184 <unload_file@@Base+0x88>
  415150:	ldr	x0, [x19, #16]
  415154:	cbz	x0, 415184 <unload_file@@Base+0x88>
  415158:	bl	406830 <dlclose@plt>
  41515c:	cbz	w0, 415170 <unload_file@@Base+0x74>
  415160:	ldr	x1, [x19, #8]
  415164:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  415168:	add	x0, x0, #0xf33
  41516c:	bl	417c10 <perror_with_name@@Base>
  415170:	str	xzr, [x19, #16]
  415174:	ldp	x19, x20, [sp, #16]
  415178:	ldr	x21, [sp, #32]
  41517c:	ldp	x29, x30, [sp], #48
  415180:	ret
  415184:	ldr	x19, [x19]
  415188:	b	41511c <unload_file@@Base+0x20>

000000000041518c <gmk_alloc@@Base>:
  41518c:	mov	w0, w0
  415190:	b	416a54 <xmalloc@@Base>

0000000000415194 <gmk_free@@Base>:
  415194:	b	406c20 <free@plt>

0000000000415198 <gmk_eval@@Base>:
  415198:	stp	x29, x30, [sp, #-80]!
  41519c:	mov	x29, sp
  4151a0:	stp	x19, x20, [sp, #16]
  4151a4:	mov	x20, x0
  4151a8:	mov	x19, x1
  4151ac:	cbz	x1, 4151c8 <gmk_eval@@Base+0x30>
  4151b0:	ldr	x0, [x1]
  4151b4:	add	x19, sp, #0x38
  4151b8:	str	x0, [sp, #56]
  4151bc:	ldr	x0, [x1, #8]
  4151c0:	str	x0, [sp, #64]
  4151c4:	str	xzr, [sp, #72]
  4151c8:	add	x1, sp, #0x30
  4151cc:	add	x0, sp, #0x28
  4151d0:	bl	40bb18 <install_variable_buffer@@Base>
  4151d4:	mov	x0, x20
  4151d8:	bl	416c24 <xstrdup@@Base>
  4151dc:	mov	x20, x0
  4151e0:	mov	x1, x19
  4151e4:	bl	41bcbc <eval_buffer@@Base>
  4151e8:	mov	x0, x20
  4151ec:	bl	406c20 <free@plt>
  4151f0:	ldp	x0, x1, [sp, #40]
  4151f4:	bl	40bb38 <restore_variable_buffer@@Base>
  4151f8:	ldp	x19, x20, [sp, #16]
  4151fc:	ldp	x29, x30, [sp], #80
  415200:	ret

0000000000415204 <gmk_expand@@Base>:
  415204:	mov	x1, #0x0                   	// #0
  415208:	b	40b1bc <allocated_variable_expand_for_file@@Base>

000000000041520c <gmk_add_function@@Base>:
  41520c:	mov	x5, x1
  415210:	mov	x1, x0
  415214:	adrp	x0, 440000 <output_context@@Base+0x1248>
  415218:	ldr	x0, [x0, #3560]
  41521c:	b	4104dc <define_new_function@@Base>
  415220:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415224:	ldr	w1, [x0, #1104]
  415228:	cmp	w1, #0x0
  41522c:	cset	w1, eq  // eq = none
  415230:	str	w1, [x0, #1104]
  415234:	ret
  415238:	adrp	x3, 43e000 <expanding_var@@Base+0x328>
  41523c:	add	x3, x3, #0x450
  415240:	add	x3, x3, #0x4
  415244:	mov	w5, #0x5c                  	// #92
  415248:	ldrb	w2, [x1]
  41524c:	cbnz	w2, 415254 <gmk_add_function@@Base+0x48>
  415250:	ret
  415254:	add	x4, x0, #0x1
  415258:	cmp	w2, #0x24
  41525c:	b.ne	415274 <gmk_add_function@@Base+0x68>  // b.any
  415260:	strb	w2, [x0]
  415264:	mov	x0, x4
  415268:	ldrb	w2, [x1], #1
  41526c:	strb	w2, [x0], #1
  415270:	b	415248 <gmk_add_function@@Base+0x3c>
  415274:	ldrh	w6, [x3, w2, sxtw #1]
  415278:	tbnz	w6, #1, 415284 <gmk_add_function@@Base+0x78>
  41527c:	cmp	w2, #0x5c
  415280:	b.ne	41528c <gmk_add_function@@Base+0x80>  // b.any
  415284:	strb	w5, [x0]
  415288:	b	415264 <gmk_add_function@@Base+0x58>
  41528c:	mov	x4, x0
  415290:	b	415264 <gmk_add_function@@Base+0x58>
  415294:	stp	x29, x30, [sp, #-48]!
  415298:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41529c:	add	x0, x0, #0x819
  4152a0:	mov	x29, sp
  4152a4:	stp	x19, x20, [sp, #16]
  4152a8:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  4152ac:	add	x20, x20, #0x450
  4152b0:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x5720>
  4152b4:	add	x19, x19, #0x153
  4152b8:	stp	x21, x22, [sp, #32]
  4152bc:	ldr	w1, [x20, #516]
  4152c0:	cmp	w1, #0x0
  4152c4:	csel	x19, x19, x0, ne  // ne = any
  4152c8:	ldr	w0, [x20, #520]
  4152cc:	cbnz	w0, 415398 <gmk_add_function@@Base+0x18c>
  4152d0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4152d4:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  4152d8:	mov	x1, x19
  4152dc:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  4152e0:	ldr	x2, [x0, #344]
  4152e4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4152e8:	add	x0, x0, #0xf3d
  4152ec:	bl	406df0 <printf@plt>
  4152f0:	ldr	x0, [x22, #1896]
  4152f4:	mov	w2, #0x5                   	// #5
  4152f8:	cbz	x0, 415304 <gmk_add_function@@Base+0xf8>
  4152fc:	ldrb	w0, [x0]
  415300:	cbnz	w0, 415374 <gmk_add_function@@Base+0x168>
  415304:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  415308:	mov	x0, #0x0                   	// #0
  41530c:	add	x1, x1, #0xf4c
  415310:	bl	406d60 <dcgettext@plt>
  415314:	ldr	x2, [x21, #336]
  415318:	mov	x1, x19
  41531c:	bl	406df0 <printf@plt>
  415320:	mov	x1, x19
  415324:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  415328:	add	x0, x0, #0xf71
  41532c:	bl	406df0 <printf@plt>
  415330:	mov	w2, #0x5                   	// #5
  415334:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  415338:	mov	x0, #0x0                   	// #0
  41533c:	add	x1, x1, #0xfab
  415340:	bl	406d60 <dcgettext@plt>
  415344:	mov	x3, x19
  415348:	mov	x2, x19
  41534c:	mov	x1, x19
  415350:	bl	406df0 <printf@plt>
  415354:	mov	w0, #0x1                   	// #1
  415358:	str	w0, [x20, #520]
  41535c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415360:	ldp	x19, x20, [sp, #16]
  415364:	ldp	x21, x22, [sp, #32]
  415368:	ldp	x29, x30, [sp], #48
  41536c:	ldr	x0, [x0, #400]
  415370:	b	406cb0 <fflush@plt>
  415374:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  415378:	mov	x0, #0x0                   	// #0
  41537c:	add	x1, x1, #0xf5c
  415380:	bl	406d60 <dcgettext@plt>
  415384:	ldr	x3, [x22, #1896]
  415388:	mov	x1, x19
  41538c:	ldr	x2, [x21, #336]
  415390:	bl	406df0 <printf@plt>
  415394:	b	415320 <gmk_add_function@@Base+0x114>
  415398:	ldp	x19, x20, [sp, #16]
  41539c:	ldp	x21, x22, [sp, #32]
  4153a0:	ldp	x29, x30, [sp], #48
  4153a4:	ret
  4153a8:	stp	x29, x30, [sp, #-336]!
  4153ac:	mov	x29, sp
  4153b0:	stp	x19, x20, [sp, #16]
  4153b4:	mov	w19, w0
  4153b8:	add	x20, sp, #0x28
  4153bc:	mov	w0, #0x10000000            	// #268435456
  4153c0:	str	x1, [sp, #32]
  4153c4:	str	w0, [sp, #168]
  4153c8:	mov	x0, x20
  4153cc:	bl	406990 <sigemptyset@plt>
  4153d0:	mov	w1, w19
  4153d4:	mov	x0, x20
  4153d8:	bl	406dd0 <sigaddset@plt>
  4153dc:	add	x2, sp, #0xb8
  4153e0:	add	x1, sp, #0x20
  4153e4:	mov	w0, w19
  4153e8:	bl	406af0 <sigaction@plt>
  4153ec:	cmp	w0, #0x0
  4153f0:	ldr	x0, [sp, #184]
  4153f4:	ldp	x19, x20, [sp, #16]
  4153f8:	csinv	x0, x0, xzr, eq  // eq = none
  4153fc:	ldp	x29, x30, [sp], #336
  415400:	ret
  415404:	stp	x29, x30, [sp, #-32]!
  415408:	mov	x29, sp
  41540c:	str	x19, [sp, #16]
  415410:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415414:	add	x19, x19, #0x450
  415418:	bl	421cc4 <jobserver_clear@@Base>
  41541c:	ldr	x0, [x19, #528]
  415420:	bl	406c20 <free@plt>
  415424:	str	xzr, [x19, #528]
  415428:	ldr	x19, [sp, #16]
  41542c:	ldp	x29, x30, [sp], #32
  415430:	ret
  415434:	stp	x29, x30, [sp, #-48]!
  415438:	mov	x0, #0x0                   	// #0
  41543c:	mov	x29, sp
  415440:	str	x19, [sp, #16]
  415444:	bl	406940 <time@plt>
  415448:	str	x0, [sp, #40]
  41544c:	bl	415294 <gmk_add_function@@Base+0x88>
  415450:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  415454:	add	x1, x1, #0x79
  415458:	mov	w2, #0x5                   	// #5
  41545c:	mov	x0, #0x0                   	// #0
  415460:	bl	406d60 <dcgettext@plt>
  415464:	mov	x19, x0
  415468:	add	x0, sp, #0x28
  41546c:	bl	406840 <ctime@plt>
  415470:	mov	x1, x0
  415474:	mov	x0, x19
  415478:	bl	406df0 <printf@plt>
  41547c:	bl	421098 <print_variable_data_base@@Base>
  415480:	bl	40ad64 <print_dir_data_base@@Base>
  415484:	bl	41ecdc <print_rule_data_base@@Base>
  415488:	bl	40d59c <print_file_data_base@@Base>
  41548c:	bl	421930 <print_vpath_data_base@@Base>
  415490:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  415494:	add	x0, x0, #0x9a
  415498:	bl	41f248 <strcache_print_stats@@Base>
  41549c:	mov	x0, #0x0                   	// #0
  4154a0:	bl	406940 <time@plt>
  4154a4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4154a8:	add	x1, x1, #0x9c
  4154ac:	mov	w2, #0x5                   	// #5
  4154b0:	str	x0, [sp, #40]
  4154b4:	mov	x0, #0x0                   	// #0
  4154b8:	bl	406d60 <dcgettext@plt>
  4154bc:	mov	x19, x0
  4154c0:	add	x0, sp, #0x28
  4154c4:	bl	406840 <ctime@plt>
  4154c8:	mov	x1, x0
  4154cc:	mov	x0, x19
  4154d0:	bl	406df0 <printf@plt>
  4154d4:	ldr	x19, [sp, #16]
  4154d8:	ldp	x29, x30, [sp], #48
  4154dc:	ret
  4154e0:	stp	x29, x30, [sp, #-192]!
  4154e4:	mov	x29, sp
  4154e8:	stp	x21, x22, [sp, #32]
  4154ec:	mov	w22, w0
  4154f0:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4154f4:	add	x0, x0, #0xcd
  4154f8:	str	w1, [x29, #124]
  4154fc:	stp	x19, x20, [sp, #16]
  415500:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x3720>
  415504:	add	x20, x20, #0x400
  415508:	ldr	x1, [x0]
  41550c:	str	x1, [x29, #128]
  415510:	ldur	x0, [x0, #6]
  415514:	stur	x0, [x29, #134]
  415518:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41551c:	add	x0, x0, #0xdb
  415520:	stp	x25, x26, [sp, #64]
  415524:	adrp	x25, 426000 <_IO_stdin_used@@Base+0x3720>
  415528:	adrp	x26, 425000 <_IO_stdin_used@@Base+0x2720>
  41552c:	ldp	x2, x3, [x0]
  415530:	stp	x2, x3, [x29, #168]
  415534:	mov	x19, #0x0                   	// #0
  415538:	ldr	x0, [x0, #16]
  41553c:	str	x0, [x29, #184]
  415540:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  415544:	add	x0, x0, #0xf3
  415548:	mov	x21, #0x0                   	// #0
  41554c:	stp	x23, x24, [sp, #48]
  415550:	ldp	x2, x3, [x0]
  415554:	stp	x27, x28, [sp, #80]
  415558:	ldr	w0, [x0, #16]
  41555c:	str	w0, [x29, #160]
  415560:	add	x0, x25, #0x3d0
  415564:	mov	x27, #0x0                   	// #0
  415568:	adrp	x25, 424000 <_IO_stdin_used@@Base+0x1720>
  41556c:	str	x0, [x29, #112]
  415570:	add	x0, x26, #0xbe
  415574:	str	x0, [x29, #104]
  415578:	stp	x2, x3, [x29, #144]
  41557c:	ldr	w24, [x20]
  415580:	cbnz	w24, 415650 <gmk_add_function@@Base+0x444>
  415584:	add	x0, x19, #0x47
  415588:	add	x2, x19, #0x38
  41558c:	and	x0, x0, #0xfffffffffffffff0
  415590:	mov	w1, #0x0                   	// #0
  415594:	sub	sp, sp, x0
  415598:	mov	x25, sp
  41559c:	mov	x23, x25
  4155a0:	mov	x0, x25
  4155a4:	bl	4069f0 <memset@plt>
  4155a8:	mov	w0, #0x2d                  	// #45
  4155ac:	strb	w0, [x23], #1
  4155b0:	mov	x19, x23
  4155b4:	cbz	x21, 415638 <gmk_add_function@@Base+0x42c>
  4155b8:	ldr	x0, [x21, #16]
  4155bc:	cbnz	x0, 4155d0 <gmk_add_function@@Base+0x3c4>
  4155c0:	ldr	x0, [x21, #8]
  4155c4:	ldr	w0, [x0]
  4155c8:	cmp	w0, #0xff
  4155cc:	b.le	4158ec <gmk_add_function@@Base+0x6e0>
  4155d0:	mov	w24, #0x2d20                	// #11552
  4155d4:	mov	w26, #0x2d                  	// #45
  4155d8:	mov	w27, #0x3d                  	// #61
  4155dc:	mov	x20, x19
  4155e0:	strh	w24, [x20], #3
  4155e4:	ldr	x0, [x21, #8]
  4155e8:	ldr	w0, [x0]
  4155ec:	cmp	w0, #0xff
  4155f0:	b.gt	4158f8 <gmk_add_function@@Base+0x6ec>
  4155f4:	strb	w0, [x19, #2]
  4155f8:	mov	x19, x20
  4155fc:	ldr	x0, [x21, #16]
  415600:	cbz	x0, 415630 <gmk_add_function@@Base+0x424>
  415604:	ldrb	w0, [x0]
  415608:	cbz	w0, 415630 <gmk_add_function@@Base+0x424>
  41560c:	ldr	x0, [x21, #8]
  415610:	ldr	w0, [x0]
  415614:	cmp	w0, #0xff
  415618:	b.le	415620 <gmk_add_function@@Base+0x414>
  41561c:	strb	w27, [x19], #1
  415620:	ldr	x1, [x21, #16]
  415624:	mov	x0, x19
  415628:	bl	415238 <gmk_add_function@@Base+0x2c>
  41562c:	mov	x19, x0
  415630:	ldr	x21, [x21]
  415634:	cbnz	x21, 4155dc <gmk_add_function@@Base+0x3d0>
  415638:	cmp	x19, x23
  41563c:	b.ne	41591c <gmk_add_function@@Base+0x710>  // b.any
  415640:	mov	x19, x25
  415644:	strb	wzr, [x25]
  415648:	mov	x2, #0x0                   	// #0
  41564c:	b	415938 <gmk_add_function@@Base+0x72c>
  415650:	ldrb	w0, [x20, #16]
  415654:	tbz	w0, #1, 4158c0 <gmk_add_function@@Base+0x6b4>
  415658:	ldr	w1, [x29, #124]
  41565c:	cbz	w1, 415664 <gmk_add_function@@Base+0x458>
  415660:	tbnz	w0, #2, 4158c0 <gmk_add_function@@Base+0x6b4>
  415664:	ldr	w0, [x20, #4]
  415668:	cmp	w0, #0x7
  41566c:	b.hi	4158e8 <gmk_add_function@@Base+0x6dc>  // b.pmore
  415670:	ldr	x1, [x29, #112]
  415674:	ldrh	w1, [x1, w0, uxtw #1]
  415678:	adr	x2, 415684 <gmk_add_function@@Base+0x478>
  41567c:	add	x1, x2, w1, sxth #2
  415680:	br	x1
  415684:	ldr	x2, [x20, #8]
  415688:	and	w0, w0, #0x1
  41568c:	ldr	w2, [x2]
  415690:	cmp	w2, #0x0
  415694:	cset	w4, ne  // ne = any
  415698:	cmp	w4, w0
  41569c:	b.eq	4158c0 <gmk_add_function@@Base+0x6b4>  // b.none
  4156a0:	ldr	x0, [x20, #32]
  4156a4:	cbz	x0, 4156b4 <gmk_add_function@@Base+0x4a8>
  4156a8:	ldr	w0, [x0]
  4156ac:	cmp	w2, w0
  4156b0:	b.eq	4158c0 <gmk_add_function@@Base+0x6b4>  // b.none
  4156b4:	sub	sp, sp, #0x20
  4156b8:	mov	x23, sp
  4156bc:	stp	x20, xzr, [x23, #8]
  4156c0:	str	xzr, [x23]
  4156c4:	cbz	x21, 4157e4 <gmk_add_function@@Base+0x5d8>
  4156c8:	str	x23, [x27]
  4156cc:	cmp	w24, #0xff
  4156d0:	b.gt	4157ec <gmk_add_function@@Base+0x5e0>
  4156d4:	add	x19, x19, #0x3
  4156d8:	mov	x27, x23
  4156dc:	b	4158c0 <gmk_add_function@@Base+0x6b4>
  4156e0:	cbz	w22, 4158c0 <gmk_add_function@@Base+0x6b4>
  4156e4:	ldr	x2, [x20, #32]
  4156e8:	ldr	x0, [x20, #8]
  4156ec:	cbz	x2, 415700 <gmk_add_function@@Base+0x4f4>
  4156f0:	ldr	w4, [x0]
  4156f4:	ldr	w2, [x2]
  4156f8:	cmp	w4, w2
  4156fc:	b.eq	4158c0 <gmk_add_function@@Base+0x6b4>  // b.none
  415700:	ldr	x2, [x20, #24]
  415704:	cbz	x2, 41572c <gmk_add_function@@Base+0x520>
  415708:	ldr	w4, [x0]
  41570c:	ldr	w2, [x2]
  415710:	cmp	w4, w2
  415714:	b.ne	41572c <gmk_add_function@@Base+0x520>  // b.any
  415718:	sub	sp, sp, #0x20
  41571c:	add	x0, x25, #0x819
  415720:	mov	x23, sp
  415724:	stp	x20, x0, [x23, #8]
  415728:	b	4156c0 <gmk_add_function@@Base+0x4b4>
  41572c:	ldr	w2, [x0]
  415730:	sub	sp, sp, #0x20
  415734:	mov	x28, sp
  415738:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41573c:	mov	x0, x28
  415740:	add	x1, x1, #0xc39
  415744:	bl	4067a0 <sprintf@plt>
  415748:	sub	sp, sp, #0x20
  41574c:	mov	x23, sp
  415750:	stp	xzr, x20, [x23]
  415754:	str	x28, [x23, #16]
  415758:	cbz	x21, 415800 <gmk_add_function@@Base+0x5f4>
  41575c:	str	x23, [x27]
  415760:	mov	x0, x28
  415764:	bl	406700 <strlen@plt>
  415768:	add	x0, x0, #0x1
  41576c:	add	x0, x0, x0, lsl #1
  415770:	add	x19, x19, x0
  415774:	ldr	w0, [x20]
  415778:	cmp	w0, #0xff
  41577c:	b.le	4156d8 <gmk_add_function@@Base+0x4cc>
  415780:	ldr	x0, [x20, #40]
  415784:	add	x19, x19, #0x2
  415788:	bl	406700 <strlen@plt>
  41578c:	b	4157f8 <gmk_add_function@@Base+0x5ec>
  415790:	cbz	w22, 4158c0 <gmk_add_function@@Base+0x6b4>
  415794:	ldr	x2, [x20, #32]
  415798:	ldr	x0, [x20, #8]
  41579c:	cbz	x2, 4157b0 <gmk_add_function@@Base+0x5a4>
  4157a0:	ldr	d1, [x0]
  4157a4:	ldr	d0, [x2]
  4157a8:	fcmp	d1, d0
  4157ac:	b.eq	4158c0 <gmk_add_function@@Base+0x6b4>  // b.none
  4157b0:	ldr	x2, [x20, #24]
  4157b4:	cbz	x2, 4157c8 <gmk_add_function@@Base+0x5bc>
  4157b8:	ldr	d1, [x0]
  4157bc:	ldr	d0, [x2]
  4157c0:	fcmp	d1, d0
  4157c4:	b.eq	415718 <gmk_add_function@@Base+0x50c>  // b.none
  4157c8:	ldr	x1, [x29, #104]
  4157cc:	sub	sp, sp, #0x70
  4157d0:	ldr	d0, [x0]
  4157d4:	mov	x28, sp
  4157d8:	mov	x0, x28
  4157dc:	bl	4067a0 <sprintf@plt>
  4157e0:	b	415748 <gmk_add_function@@Base+0x53c>
  4157e4:	mov	x21, x23
  4157e8:	b	4156cc <gmk_add_function@@Base+0x4c0>
  4157ec:	ldr	x0, [x20, #40]
  4157f0:	add	x19, x19, #0x5
  4157f4:	bl	406700 <strlen@plt>
  4157f8:	add	x19, x0, x19
  4157fc:	b	4156d8 <gmk_add_function@@Base+0x4cc>
  415800:	mov	x21, x23
  415804:	b	415760 <gmk_add_function@@Base+0x554>
  415808:	cbz	w22, 4158c0 <gmk_add_function@@Base+0x6b4>
  41580c:	ldr	x0, [x20, #8]
  415810:	ldr	x0, [x0]
  415814:	cbz	x0, 4158c0 <gmk_add_function@@Base+0x6b4>
  415818:	sub	sp, sp, #0x20
  41581c:	mov	x23, sp
  415820:	stp	xzr, x20, [x23]
  415824:	str	x0, [x23, #16]
  415828:	cbz	x21, 415848 <gmk_add_function@@Base+0x63c>
  41582c:	str	x23, [x27]
  415830:	bl	406700 <strlen@plt>
  415834:	add	x0, x0, #0x1
  415838:	cmp	w24, #0xff
  41583c:	add	x0, x0, x0, lsl #1
  415840:	add	x19, x19, x0
  415844:	b	41577c <gmk_add_function@@Base+0x570>
  415848:	mov	x21, x23
  41584c:	b	415830 <gmk_add_function@@Base+0x624>
  415850:	cbz	w22, 4158c0 <gmk_add_function@@Base+0x6b4>
  415854:	ldr	x0, [x20, #8]
  415858:	ldr	x26, [x0]
  41585c:	cbz	x26, 4158c0 <gmk_add_function@@Base+0x6b4>
  415860:	mov	w28, #0x0                   	// #0
  415864:	b	4158b4 <gmk_add_function@@Base+0x6a8>
  415868:	ldr	x4, [x26]
  41586c:	sub	sp, sp, #0x20
  415870:	ubfiz	x0, x28, #3, #32
  415874:	mov	x23, sp
  415878:	ldr	x5, [x4, x0]
  41587c:	stp	xzr, x20, [x23]
  415880:	str	x5, [x23, #16]
  415884:	cbz	x21, 4158c8 <gmk_add_function@@Base+0x6bc>
  415888:	str	x23, [x27]
  41588c:	cbnz	x5, 4158d0 <gmk_add_function@@Base+0x6c4>
  415890:	add	x19, x19, #0x3
  415894:	cmp	w24, #0xff
  415898:	b.le	4158ac <gmk_add_function@@Base+0x6a0>
  41589c:	ldr	x0, [x20, #40]
  4158a0:	add	x19, x19, #0x2
  4158a4:	bl	406700 <strlen@plt>
  4158a8:	add	x19, x0, x19
  4158ac:	add	w28, w28, #0x1
  4158b0:	mov	x27, x23
  4158b4:	ldr	w0, [x26, #8]
  4158b8:	cmp	w0, w28
  4158bc:	b.hi	415868 <gmk_add_function@@Base+0x65c>  // b.pmore
  4158c0:	add	x20, x20, #0x30
  4158c4:	b	41557c <gmk_add_function@@Base+0x370>
  4158c8:	mov	x21, x23
  4158cc:	b	41588c <gmk_add_function@@Base+0x680>
  4158d0:	ldr	x0, [x4, x0]
  4158d4:	bl	406700 <strlen@plt>
  4158d8:	add	x0, x0, #0x1
  4158dc:	add	x0, x0, x0, lsl #1
  4158e0:	add	x19, x19, x0
  4158e4:	b	415894 <gmk_add_function@@Base+0x688>
  4158e8:	bl	406b50 <abort@plt>
  4158ec:	strb	w0, [x19], #1
  4158f0:	ldr	x21, [x21]
  4158f4:	b	4155b4 <gmk_add_function@@Base+0x3a8>
  4158f8:	strb	w26, [x19, #2]
  4158fc:	ldr	x0, [x21, #8]
  415900:	ldr	x1, [x0, #40]
  415904:	mov	x0, x20
  415908:	bl	406cc0 <strcpy@plt>
  41590c:	mov	x0, x20
  415910:	bl	406700 <strlen@plt>
  415914:	add	x19, x20, x0
  415918:	b	4155fc <gmk_add_function@@Base+0x3f0>
  41591c:	ldrb	w0, [x25]
  415920:	cmp	w0, #0x2d
  415924:	b.ne	415648 <gmk_add_function@@Base+0x43c>  // b.any
  415928:	ldrb	w0, [x25, #1]
  41592c:	cmp	w0, #0x20
  415930:	cset	x2, eq  // eq = none
  415934:	lsl	x2, x2, #1
  415938:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  41593c:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  415940:	add	x21, x21, #0x450
  415944:	mov	w4, #0x1                   	// #1
  415948:	ldr	x0, [x24, #304]
  41594c:	mov	w3, w4
  415950:	add	x2, x25, x2
  415954:	mov	x6, #0x0                   	// #0
  415958:	mov	x1, #0x6                   	// #6
  41595c:	ldr	x5, [x0, #8]
  415960:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  415964:	add	x0, x0, #0xc1
  415968:	bl	41f978 <define_variable_in_set@@Base>
  41596c:	ldr	x0, [x21, #536]
  415970:	cbz	x0, 415994 <gmk_add_function@@Base+0x788>
  415974:	mov	x0, x19
  415978:	mov	w1, #0x20                  	// #32
  41597c:	ldp	x2, x3, [x29, #144]
  415980:	add	x19, x19, #0x14
  415984:	strb	w1, [x0], #1
  415988:	stp	x2, x3, [x0]
  41598c:	ldur	w0, [x29, #159]
  415990:	stur	w0, [x19, #-4]
  415994:	cbz	w22, 415a14 <gmk_add_function@@Base+0x808>
  415998:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41599c:	add	x20, x29, #0xa8
  4159a0:	ldr	w0, [x0, #2000]
  4159a4:	cmp	w0, #0x0
  4159a8:	add	x0, x29, #0x80
  4159ac:	csel	x20, x20, x0, ne  // ne = any
  4159b0:	mov	x0, x20
  4159b4:	bl	406700 <strlen@plt>
  4159b8:	mov	x22, x0
  4159bc:	mov	x1, x0
  4159c0:	mov	x0, x20
  4159c4:	bl	41fcdc <lookup_variable@@Base>
  4159c8:	cbz	x0, 415a14 <gmk_add_function@@Base+0x808>
  4159cc:	ldr	x0, [x0, #8]
  4159d0:	cbz	x0, 415a14 <gmk_add_function@@Base+0x808>
  4159d4:	ldrb	w0, [x0]
  4159d8:	cbz	w0, 415a14 <gmk_add_function@@Base+0x808>
  4159dc:	mov	x0, x19
  4159e0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4159e4:	add	x1, x1, #0xc8
  4159e8:	bl	406cc0 <strcpy@plt>
  4159ec:	add	x3, x19, #0x6
  4159f0:	mov	w0, #0x2824                	// #10276
  4159f4:	strh	w0, [x19, #4]
  4159f8:	mov	x2, x22
  4159fc:	mov	x0, x3
  415a00:	mov	x1, x20
  415a04:	bl	4066c0 <memcpy@plt>
  415a08:	mov	x3, x0
  415a0c:	mov	w0, #0x29                  	// #41
  415a10:	strb	w0, [x3, x22]
  415a14:	ldrb	w0, [x25]
  415a18:	mov	x6, #0x0                   	// #0
  415a1c:	mov	w4, #0x1                   	// #1
  415a20:	mov	x1, #0x9                   	// #9
  415a24:	cmp	w0, #0x2d
  415a28:	ldr	w0, [x21, #544]
  415a2c:	csel	x25, x25, x23, ne  // ne = any
  415a30:	cmp	w0, #0x0
  415a34:	mov	x2, x25
  415a38:	ldr	x0, [x24, #304]
  415a3c:	cset	w3, ne  // ne = any
  415a40:	add	w3, w3, #0x2
  415a44:	ldr	x5, [x0, #8]
  415a48:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  415a4c:	add	x0, x0, #0x222
  415a50:	bl	41f978 <define_variable_in_set@@Base>
  415a54:	mov	sp, x29
  415a58:	ldp	x19, x20, [sp, #16]
  415a5c:	ldp	x21, x22, [sp, #32]
  415a60:	ldp	x23, x24, [sp, #48]
  415a64:	ldp	x25, x26, [sp, #64]
  415a68:	ldp	x27, x28, [sp, #80]
  415a6c:	ldp	x29, x30, [sp], #192
  415a70:	ret
  415a74:	stp	x29, x30, [sp, #-32]!
  415a78:	mov	x29, sp
  415a7c:	stp	x19, x20, [sp, #16]
  415a80:	ldrb	w1, [x0]
  415a84:	cbnz	w1, 415aac <gmk_add_function@@Base+0x8a0>
  415a88:	mov	w2, #0x5                   	// #5
  415a8c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  415a90:	mov	x0, #0x0                   	// #0
  415a94:	add	x1, x1, #0x107
  415a98:	bl	406d60 <dcgettext@plt>
  415a9c:	mov	x2, x0
  415aa0:	mov	x1, #0x0                   	// #0
  415aa4:	mov	x0, #0x0                   	// #0
  415aa8:	bl	417d24 <fatal@@Base>
  415aac:	mov	x19, x0
  415ab0:	cmp	w1, #0x7e
  415ab4:	b.ne	415b24 <gmk_add_function@@Base+0x918>  // b.any
  415ab8:	bl	4198b4 <tilde_expand@@Base>
  415abc:	mov	x20, x0
  415ac0:	cbz	x0, 415b24 <gmk_add_function@@Base+0x918>
  415ac4:	ldrb	w0, [x0]
  415ac8:	cmp	w0, #0x0
  415acc:	csel	x19, x19, x20, eq  // eq = none
  415ad0:	ldrb	w0, [x19]
  415ad4:	cmp	w0, #0x2e
  415ad8:	b.ne	415b2c <gmk_add_function@@Base+0x920>  // b.any
  415adc:	ldrb	w0, [x19, #1]
  415ae0:	cmp	w0, #0x2f
  415ae4:	b.eq	415b0c <gmk_add_function@@Base+0x900>  // b.none
  415ae8:	mov	x0, x19
  415aec:	bl	41f174 <strcache_add@@Base>
  415af0:	mov	x19, x0
  415af4:	mov	x0, x20
  415af8:	bl	406c20 <free@plt>
  415afc:	mov	x0, x19
  415b00:	ldp	x19, x20, [sp, #16]
  415b04:	ldp	x29, x30, [sp], #32
  415b08:	ret
  415b0c:	add	x19, x19, #0x2
  415b10:	ldrb	w0, [x19]
  415b14:	cmp	w0, #0x2f
  415b18:	b.ne	415ad0 <gmk_add_function@@Base+0x8c4>  // b.any
  415b1c:	add	x19, x19, #0x1
  415b20:	b	415b10 <gmk_add_function@@Base+0x904>
  415b24:	mov	x20, #0x0                   	// #0
  415b28:	b	415ad0 <gmk_add_function@@Base+0x8c4>
  415b2c:	cbnz	w0, 415ae8 <gmk_add_function@@Base+0x8dc>
  415b30:	adrp	x19, 423000 <_IO_stdin_used@@Base+0x720>
  415b34:	add	x19, x19, #0xb37
  415b38:	b	415ae8 <gmk_add_function@@Base+0x8dc>
  415b3c:	stp	x29, x30, [sp, #-64]!
  415b40:	mov	x29, sp
  415b44:	stp	x19, x20, [sp, #16]
  415b48:	mov	x19, x0
  415b4c:	stp	x21, x22, [sp, #32]
  415b50:	mov	w21, w1
  415b54:	stp	x23, x24, [sp, #48]
  415b58:	ldrb	w0, [x0]
  415b5c:	cmp	w0, #0x2d
  415b60:	b.ne	415b6c <gmk_add_function@@Base+0x960>  // b.any
  415b64:	ldrb	w0, [x19, #1]
  415b68:	cbz	w0, 415c54 <gmk_add_function@@Base+0xa48>
  415b6c:	mov	x1, x19
  415b70:	mov	w3, #0x0                   	// #0
  415b74:	mov	w2, #0x4                   	// #4
  415b78:	mov	x0, #0x0                   	// #0
  415b7c:	bl	421014 <try_variable_definition@@Base>
  415b80:	mov	x20, x0
  415b84:	cbz	x0, 415bc4 <gmk_add_function@@Base+0x9b8>
  415b88:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415b8c:	add	x19, x19, #0x450
  415b90:	ldr	x0, [x19, #552]
  415b94:	cbnz	x0, 415bb0 <gmk_add_function@@Base+0x9a4>
  415b98:	mov	x0, #0x10                  	// #16
  415b9c:	bl	416a54 <xmalloc@@Base>
  415ba0:	ldr	x1, [x19, #552]
  415ba4:	stp	x1, x20, [x0]
  415ba8:	str	x0, [x19, #552]
  415bac:	b	415c54 <gmk_add_function@@Base+0xa48>
  415bb0:	ldr	x1, [x0, #8]
  415bb4:	cmp	x1, x20
  415bb8:	b.eq	415c54 <gmk_add_function@@Base+0xa48>  // b.none
  415bbc:	ldr	x0, [x0]
  415bc0:	b	415b94 <gmk_add_function@@Base+0x988>
  415bc4:	cbnz	w21, 415c54 <gmk_add_function@@Base+0xa48>
  415bc8:	mov	x0, x19
  415bcc:	bl	415a74 <gmk_add_function@@Base+0x868>
  415bd0:	bl	41f174 <strcache_add@@Base>
  415bd4:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415bd8:	bl	40bec0 <enter_file@@Base>
  415bdc:	mov	x20, x0
  415be0:	ldrb	w0, [x0, #137]
  415be4:	add	x19, x19, #0x450
  415be8:	orr	w0, w0, #0x10
  415bec:	strb	w0, [x20, #137]
  415bf0:	ldr	x0, [x19, #560]
  415bf4:	cbnz	x0, 415c6c <gmk_add_function@@Base+0xa60>
  415bf8:	mov	x0, #0x40                  	// #64
  415bfc:	bl	416a78 <xcalloc@@Base>
  415c00:	str	x0, [x19, #560]
  415c04:	str	x0, [x19, #568]
  415c08:	adrp	x22, 425000 <_IO_stdin_used@@Base+0x2720>
  415c0c:	add	x22, x22, #0x129
  415c10:	mov	x1, #0xc                   	// #12
  415c14:	ldr	x0, [x19, #568]
  415c18:	str	x20, [x0, #16]
  415c1c:	mov	x0, x22
  415c20:	bl	41fcdc <lookup_variable@@Base>
  415c24:	cbnz	x0, 415c88 <gmk_add_function@@Base+0xa7c>
  415c28:	ldr	x21, [x20]
  415c2c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415c30:	mov	x2, x21
  415c34:	mov	x6, #0x0                   	// #0
  415c38:	ldr	x0, [x0, #304]
  415c3c:	mov	w4, #0x0                   	// #0
  415c40:	mov	w3, #0x0                   	// #0
  415c44:	mov	x1, #0xc                   	// #12
  415c48:	ldr	x5, [x0, #8]
  415c4c:	mov	x0, x22
  415c50:	bl	41f978 <define_variable_in_set@@Base>
  415c54:	mov	sp, x29
  415c58:	ldp	x19, x20, [sp, #16]
  415c5c:	ldp	x21, x22, [sp, #32]
  415c60:	ldp	x23, x24, [sp, #48]
  415c64:	ldp	x29, x30, [sp], #64
  415c68:	ret
  415c6c:	ldr	x21, [x19, #568]
  415c70:	mov	x0, #0x40                  	// #64
  415c74:	bl	416a78 <xcalloc@@Base>
  415c78:	str	x0, [x21]
  415c7c:	ldr	x0, [x19, #568]
  415c80:	ldr	x0, [x0]
  415c84:	b	415c04 <gmk_add_function@@Base+0x9f8>
  415c88:	ldr	x24, [x0, #8]
  415c8c:	mov	x0, x24
  415c90:	bl	406700 <strlen@plt>
  415c94:	mov	x19, x0
  415c98:	ldr	x0, [x20]
  415c9c:	bl	406700 <strlen@plt>
  415ca0:	add	x2, x19, x0
  415ca4:	add	x2, x2, #0x11
  415ca8:	mov	x23, x0
  415cac:	and	x2, x2, #0xfffffffffffffff0
  415cb0:	mov	x1, x24
  415cb4:	sub	sp, sp, x2
  415cb8:	mov	x2, x19
  415cbc:	mov	x21, sp
  415cc0:	mov	x0, x21
  415cc4:	bl	4066c0 <memcpy@plt>
  415cc8:	mov	w0, #0x20                  	// #32
  415ccc:	add	x2, x23, #0x1
  415cd0:	strb	w0, [x21, x19]
  415cd4:	add	x19, x19, #0x1
  415cd8:	add	x0, x21, x19
  415cdc:	ldr	x1, [x20]
  415ce0:	bl	4066c0 <memcpy@plt>
  415ce4:	b	415c2c <gmk_add_function@@Base+0xa20>
  415ce8:	stp	x29, x30, [sp, #-32]!
  415cec:	mov	x29, sp
  415cf0:	stp	x19, x20, [sp, #16]
  415cf4:	mov	w20, w0
  415cf8:	bl	421cb0 <jobserver_enabled@@Base>
  415cfc:	cbz	w0, 415d48 <gmk_add_function@@Base+0xb3c>
  415d00:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415d04:	ldr	w3, [x19, #920]
  415d08:	cbz	w3, 415d48 <gmk_add_function@@Base+0xb3c>
  415d0c:	cmp	w20, #0x2
  415d10:	b.ne	415d34 <gmk_add_function@@Base+0xb28>  // b.any
  415d14:	add	x19, x19, #0x398
  415d18:	ldr	w0, [x19]
  415d1c:	sub	w0, w0, #0x1
  415d20:	str	w0, [x19]
  415d24:	cbz	w0, 415d48 <gmk_add_function@@Base+0xb3c>
  415d28:	mov	w0, #0x0                   	// #0
  415d2c:	bl	421d18 <jobserver_release@@Base>
  415d30:	b	415d18 <gmk_add_function@@Base+0xb0c>
  415d34:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  415d38:	mov	x1, #0x14                  	// #20
  415d3c:	add	x2, x2, #0x136
  415d40:	mov	x0, #0x0                   	// #0
  415d44:	bl	417aa8 <error@@Base>
  415d48:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415d4c:	add	x19, x19, #0x450
  415d50:	ldr	w0, [x19, #576]
  415d54:	cbz	w0, 415d8c <gmk_add_function@@Base+0xb80>
  415d58:	bl	421db4 <jobserver_acquire_all@@Base>
  415d5c:	add	w3, w0, #0x1
  415d60:	ldr	w4, [x19, #576]
  415d64:	cmp	w3, w4
  415d68:	b.eq	415d80 <gmk_add_function@@Base+0xb74>  // b.none
  415d6c:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x2720>
  415d70:	mov	x1, #0x28                  	// #40
  415d74:	add	x2, x2, #0x170
  415d78:	mov	x0, #0x0                   	// #0
  415d7c:	bl	417aa8 <error@@Base>
  415d80:	ldp	x19, x20, [sp, #16]
  415d84:	ldp	x29, x30, [sp], #32
  415d88:	b	415404 <gmk_add_function@@Base+0x1f8>
  415d8c:	ldp	x19, x20, [sp, #16]
  415d90:	ldp	x29, x30, [sp], #32
  415d94:	ret

0000000000415d98 <die@@Base>:
  415d98:	stp	x29, x30, [sp, #-48]!
  415d9c:	mov	x29, sp
  415da0:	stp	x19, x20, [sp, #16]
  415da4:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415da8:	add	x19, x19, #0x450
  415dac:	stp	x21, x22, [sp, #32]
  415db0:	mov	w20, w0
  415db4:	ldrb	w0, [x19, #580]
  415db8:	cbnz	w0, 415e5c <die@@Base+0xc4>
  415dbc:	mov	w0, #0x1                   	// #1
  415dc0:	strb	w0, [x19, #580]
  415dc4:	ldr	w0, [x19, #584]
  415dc8:	cbz	w0, 415dd0 <die@@Base+0x38>
  415dcc:	bl	415294 <gmk_add_function@@Base+0x88>
  415dd0:	cmp	w20, #0x0
  415dd4:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  415dd8:	cset	w22, ne  // ne = any
  415ddc:	add	x21, x21, #0x424
  415de0:	ldr	w0, [x21]
  415de4:	cbnz	w0, 415e64 <die@@Base+0xcc>
  415de8:	bl	422280 <remote_cleanup@@Base>
  415dec:	mov	w0, #0x0                   	// #0
  415df0:	bl	40c390 <remove_intermediates@@Base>
  415df4:	ldr	w0, [x19, #516]
  415df8:	cbz	w0, 415e00 <die@@Base+0x68>
  415dfc:	bl	415434 <gmk_add_function@@Base+0x228>
  415e00:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  415e04:	ldr	w0, [x0, #1928]
  415e08:	cbz	w0, 415e10 <die@@Base+0x78>
  415e0c:	bl	40d60c <verify_file_data_base@@Base>
  415e10:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415e14:	mov	w0, w20
  415e18:	bl	415ce8 <gmk_add_function@@Base+0xadc>
  415e1c:	ldr	x0, [x19, #3512]
  415e20:	cbz	x0, 415e44 <die@@Base+0xac>
  415e24:	bl	41752c <output_close@@Base>
  415e28:	ldr	x1, [x19, #3512]
  415e2c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  415e30:	add	x0, x0, #0x7f8
  415e34:	cmp	x1, x0
  415e38:	b.eq	415e40 <die@@Base+0xa8>  // b.none
  415e3c:	bl	41752c <output_close@@Base>
  415e40:	str	xzr, [x19, #3512]
  415e44:	mov	x0, #0x0                   	// #0
  415e48:	bl	41752c <output_close@@Base>
  415e4c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  415e50:	ldr	x0, [x0, #1920]
  415e54:	cbz	x0, 415e5c <die@@Base+0xc4>
  415e58:	bl	406c10 <chdir@plt>
  415e5c:	mov	w0, w20
  415e60:	bl	406720 <exit@plt>
  415e64:	mov	w1, w22
  415e68:	mov	w0, #0x1                   	// #1
  415e6c:	bl	413a9c <reap_children@@Base>
  415e70:	b	415de0 <die@@Base+0x48>
  415e74:	stp	x29, x30, [sp, #-144]!
  415e78:	mov	x29, sp
  415e7c:	stp	x23, x24, [sp, #48]
  415e80:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  415e84:	mov	x23, x1
  415e88:	stp	x25, x26, [sp, #64]
  415e8c:	add	x26, x24, #0x450
  415e90:	stp	x21, x22, [sp, #32]
  415e94:	mov	w21, w0
  415e98:	ldrb	w0, [x26, #588]
  415e9c:	stp	x19, x20, [sp, #16]
  415ea0:	mov	w22, w2
  415ea4:	stp	x27, x28, [sp, #80]
  415ea8:	str	x24, [sp, #104]
  415eac:	cbnz	w0, 415f30 <die@@Base+0x198>
  415eb0:	mov	w0, #0x2d                  	// #45
  415eb4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  415eb8:	add	x1, x1, #0x400
  415ebc:	adrp	x8, 424000 <_IO_stdin_used@@Base+0x1720>
  415ec0:	add	x3, x26, #0x2c0
  415ec4:	mov	x7, x1
  415ec8:	add	x8, x8, #0x819
  415ecc:	strb	w0, [x26, #588]
  415ed0:	add	x0, x26, #0x24d
  415ed4:	mov	w2, #0x0                   	// #0
  415ed8:	mov	w10, #0x1                   	// #1
  415edc:	mov	w11, #0x2                   	// #2
  415ee0:	mov	w9, #0x3a                  	// #58
  415ee4:	ldr	w4, [x1]
  415ee8:	cbnz	w4, 416058 <die@@Base+0x2c0>
  415eec:	add	x4, x26, #0x2c0
  415ef0:	add	x3, x7, #0x800
  415ef4:	strb	wzr, [x0]
  415ef8:	mov	x0, #0x0                   	// #0
  415efc:	add	w1, w2, w0
  415f00:	add	x8, x3, x0, lsl #5
  415f04:	add	x0, x0, #0x1
  415f08:	add	x1, x4, x1, lsl #5
  415f0c:	cmp	x0, #0x9
  415f10:	ldp	x6, x7, [x8]
  415f14:	stp	x6, x7, [x1]
  415f18:	ldp	x6, x7, [x8, #16]
  415f1c:	stp	x6, x7, [x1, #16]
  415f20:	b.ne	415efc <die@@Base+0x164>  // b.any
  415f24:	add	w2, w2, #0x9
  415f28:	lsl	x2, x2, #5
  415f2c:	str	xzr, [x4, x2]
  415f30:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  415f34:	eor	w0, w22, #0x1
  415f38:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  415f3c:	adrp	x27, 425000 <_IO_stdin_used@@Base+0x2720>
  415f40:	str	w0, [x1, #424]
  415f44:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  415f48:	add	x0, x0, #0x3e0
  415f4c:	str	wzr, [x19, #392]
  415f50:	mov	w20, #0x0                   	// #0
  415f54:	str	x0, [sp, #112]
  415f58:	add	x0, x27, #0x1ee
  415f5c:	str	x0, [sp, #120]
  415f60:	ldr	w0, [x19, #392]
  415f64:	add	x25, x19, #0x188
  415f68:	cmp	w0, w21
  415f6c:	b.lt	4160dc <die@@Base+0x344>  // b.tstop
  415f70:	ldr	w0, [x25]
  415f74:	cmp	w0, w21
  415f78:	b.lt	4163e8 <die@@Base+0x650>  // b.tstop
  415f7c:	cbnz	w22, 416444 <die@@Base+0x6ac>
  415f80:	ldr	w0, [x26, #2176]
  415f84:	orr	w0, w20, w0
  415f88:	cbz	w0, 416444 <die@@Base+0x6ac>
  415f8c:	ldr	w0, [x26, #584]
  415f90:	cbz	w0, 415f98 <die@@Base+0x200>
  415f94:	bl	415294 <gmk_add_function@@Base+0x88>
  415f98:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415f9c:	cmp	w20, #0x0
  415fa0:	mov	w2, #0x5                   	// #5
  415fa4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  415fa8:	ldr	x19, [x0, #376]
  415fac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  415fb0:	add	x1, x1, #0x224
  415fb4:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x3720>
  415fb8:	ldr	x0, [x0, #400]
  415fbc:	add	x21, x21, #0x400
  415fc0:	add	x21, x21, #0x6f0
  415fc4:	csel	x19, x19, x0, ne  // ne = any
  415fc8:	mov	x0, #0x0                   	// #0
  415fcc:	bl	406d60 <dcgettext@plt>
  415fd0:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  415fd4:	ldr	x2, [x1, #2008]
  415fd8:	mov	x1, x0
  415fdc:	mov	x0, x19
  415fe0:	bl	406e70 <fprintf@plt>
  415fe4:	ldr	x1, [x21]
  415fe8:	cbnz	x1, 416400 <die@@Base+0x668>
  415fec:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  415ff0:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  415ff4:	mov	w2, #0x5                   	// #5
  415ff8:	ldr	x0, [x22, #1896]
  415ffc:	cbz	x0, 416008 <die@@Base+0x270>
  416000:	ldrb	w0, [x0]
  416004:	cbnz	w0, 41641c <die@@Base+0x684>
  416008:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  41600c:	mov	x0, #0x0                   	// #0
  416010:	add	x1, x1, #0x246
  416014:	bl	406d60 <dcgettext@plt>
  416018:	ldr	x2, [x21, #336]
  41601c:	mov	x1, x0
  416020:	mov	x0, x19
  416024:	bl	406e70 <fprintf@plt>
  416028:	mov	w2, #0x5                   	// #5
  41602c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416030:	mov	x0, #0x0                   	// #0
  416034:	add	x1, x1, #0x283
  416038:	bl	406d60 <dcgettext@plt>
  41603c:	mov	x1, x0
  416040:	mov	x0, x19
  416044:	bl	406e70 <fprintf@plt>
  416048:	cmp	w20, #0x0
  41604c:	mov	w0, #0x2                   	// #2
  416050:	csel	w0, w20, w0, eq  // eq = none
  416054:	bl	415d98 <die@@Base>
  416058:	ldr	x6, [x1, #40]
  41605c:	str	xzr, [x3, #16]
  416060:	str	w4, [x3, #24]
  416064:	cmp	x6, #0x0
  416068:	csel	x6, x6, x8, ne  // ne = any
  41606c:	str	x6, [x3]
  416070:	cmp	w4, #0xff
  416074:	b.gt	41607c <die@@Base+0x2e4>
  416078:	strb	w4, [x0], #1
  41607c:	ldr	w6, [x1, #4]
  416080:	cmp	w6, #0x6
  416084:	b.hi	4160b8 <die@@Base+0x320>  // b.pmore
  416088:	cmp	w6, #0x1
  41608c:	b.ls	4160c0 <die@@Base+0x328>  // b.plast
  416090:	cmp	w4, #0xff
  416094:	b.gt	41609c <die@@Base+0x304>
  416098:	strb	w9, [x0], #1
  41609c:	ldr	x6, [x1, #24]
  4160a0:	cbz	x6, 4160d4 <die@@Base+0x33c>
  4160a4:	cmp	w4, #0xff
  4160a8:	b.gt	4160b0 <die@@Base+0x318>
  4160ac:	strb	w9, [x0], #1
  4160b0:	str	w11, [x3, #8]
  4160b4:	b	4160c4 <die@@Base+0x32c>
  4160b8:	cmp	w6, #0x7
  4160bc:	b.ne	4160c4 <die@@Base+0x32c>  // b.any
  4160c0:	str	wzr, [x3, #8]
  4160c4:	add	w2, w2, #0x1
  4160c8:	add	x1, x1, #0x30
  4160cc:	add	x3, x3, #0x20
  4160d0:	b	415ee4 <die@@Base+0x14c>
  4160d4:	str	w10, [x3, #8]
  4160d8:	b	4160c4 <die@@Base+0x32c>
  4160dc:	mov	x1, x23
  4160e0:	add	x3, x26, #0x2c0
  4160e4:	add	x2, x26, #0x24c
  4160e8:	mov	w0, w21
  4160ec:	mov	x4, #0x0                   	// #0
  4160f0:	bl	406bc0 <getopt_long@plt>
  4160f4:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  4160f8:	cmn	w0, #0x1
  4160fc:	ldr	x28, [x1, #384]
  416100:	b.eq	415f70 <die@@Base+0x1d8>  // b.none
  416104:	cmp	w0, #0x1
  416108:	b.ne	41611c <die@@Base+0x384>  // b.any
  41610c:	mov	w1, w22
  416110:	mov	x0, x28
  416114:	bl	415b3c <gmk_add_function@@Base+0x930>
  416118:	b	415f60 <die@@Base+0x1c8>
  41611c:	cmp	w0, #0x3f
  416120:	b.eq	416370 <die@@Base+0x5d8>  // b.none
  416124:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x3720>
  416128:	add	x27, x3, #0x400
  41612c:	ldr	w1, [x27]
  416130:	cbz	w1, 415f60 <die@@Base+0x1c8>
  416134:	cmp	w1, w0
  416138:	b.ne	4163e0 <die@@Base+0x648>  // b.any
  41613c:	cbz	w22, 416168 <die@@Base+0x3d0>
  416140:	ldrb	w25, [x27, #16]
  416144:	and	w25, w25, #0x1
  416148:	ldr	w1, [x27, #4]
  41614c:	cmp	w1, #0x7
  416150:	b.hi	416170 <die@@Base+0x3d8>  // b.pmore
  416154:	ldr	x2, [sp, #112]
  416158:	ldrh	w2, [x2, w1, uxtw #1]
  41615c:	adr	x3, 416168 <die@@Base+0x3d0>
  416160:	add	x2, x3, w2, sxth #2
  416164:	br	x2
  416168:	mov	w25, #0x1                   	// #1
  41616c:	b	416148 <die@@Base+0x3b0>
  416170:	bl	406b50 <abort@plt>
  416174:	cbz	w25, 415f60 <die@@Base+0x1c8>
  416178:	ldr	x0, [x27, #8]
  41617c:	eor	w1, w1, #0x1
  416180:	str	w1, [x0]
  416184:	b	415f60 <die@@Base+0x1c8>
  416188:	cbz	w25, 415f60 <die@@Base+0x1c8>
  41618c:	cbnz	x28, 4161c8 <die@@Base+0x430>
  416190:	ldr	x0, [x27, #24]
  416194:	bl	416c24 <xstrdup@@Base>
  416198:	mov	x28, x0
  41619c:	ldr	x25, [x27, #8]
  4161a0:	ldr	w0, [x27, #4]
  4161a4:	cmp	w0, #0x2
  4161a8:	ldr	x24, [x25]
  4161ac:	b.ne	416248 <die@@Base+0x4b0>  // b.any
  4161b0:	mov	x0, x24
  4161b4:	bl	406c20 <free@plt>
  4161b8:	mov	x0, x28
  4161bc:	bl	416c24 <xstrdup@@Base>
  4161c0:	str	x0, [x25]
  4161c4:	b	415f60 <die@@Base+0x1c8>
  4161c8:	ldrb	w1, [x28]
  4161cc:	cbnz	w1, 41619c <die@@Base+0x404>
  4161d0:	mov	w1, #0x63                  	// #99
  4161d4:	strh	w1, [sp, #136]
  4161d8:	cmp	w0, #0xff
  4161dc:	b.gt	416240 <die@@Base+0x4a8>
  4161e0:	add	x28, sp, #0x88
  4161e4:	strb	w0, [sp, #136]
  4161e8:	mov	x0, x28
  4161ec:	bl	406700 <strlen@plt>
  4161f0:	mov	w2, #0x5                   	// #5
  4161f4:	mov	x20, x0
  4161f8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4161fc:	mov	x0, #0x0                   	// #0
  416200:	add	x1, x1, #0x1b7
  416204:	bl	406d60 <dcgettext@plt>
  416208:	ldr	w2, [x27]
  41620c:	adrp	x3, 425000 <_IO_stdin_used@@Base+0x2720>
  416210:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416214:	add	x3, x3, #0x1b4
  416218:	cmp	w2, #0x100
  41621c:	add	x1, x1, #0xf1
  416220:	csel	x3, x1, x3, lt  // lt = tstop
  416224:	mov	x2, x0
  416228:	mov	x1, x20
  41622c:	mov	x4, x28
  416230:	mov	x0, #0x0                   	// #0
  416234:	mov	w20, w25
  416238:	bl	417aa8 <error@@Base>
  41623c:	b	415f60 <die@@Base+0x1c8>
  416240:	ldr	x28, [x27, #40]
  416244:	b	4161e8 <die@@Base+0x450>
  416248:	cbnz	x24, 4162b8 <die@@Base+0x520>
  41624c:	mov	x0, #0x10                  	// #16
  416250:	bl	416a54 <xmalloc@@Base>
  416254:	mov	x24, x0
  416258:	mov	x0, #0x500000000           	// #21474836480
  41625c:	str	x0, [x24, #8]
  416260:	mov	x0, #0x28                  	// #40
  416264:	bl	416a54 <xmalloc@@Base>
  416268:	str	x0, [x24]
  41626c:	ldr	x0, [x27, #8]
  416270:	str	x24, [x0]
  416274:	ldr	w25, [x24, #8]
  416278:	ldr	x1, [x24]
  41627c:	add	w0, w25, #0x1
  416280:	str	x1, [sp, #96]
  416284:	ubfiz	x25, x25, #3, #32
  416288:	ldr	w1, [x27, #4]
  41628c:	str	w0, [x24, #8]
  416290:	mov	x0, x28
  416294:	cmp	w1, #0x4
  416298:	b.ne	4162e4 <die@@Base+0x54c>  // b.any
  41629c:	bl	415a74 <gmk_add_function@@Base+0x868>
  4162a0:	ldr	x1, [sp, #96]
  4162a4:	str	x0, [x1, x25]
  4162a8:	ldr	w1, [x24, #8]
  4162ac:	ldr	x0, [x24]
  4162b0:	str	xzr, [x0, x1, lsl #3]
  4162b4:	b	415f60 <die@@Base+0x1c8>
  4162b8:	ldp	w6, w1, [x24, #8]
  4162bc:	sub	w0, w1, #0x1
  4162c0:	cmp	w6, w0
  4162c4:	b.ne	416274 <die@@Base+0x4dc>  // b.any
  4162c8:	ldr	x0, [x24]
  4162cc:	add	w1, w1, #0x5
  4162d0:	str	w1, [x24, #12]
  4162d4:	ubfiz	x1, x1, #3, #32
  4162d8:	bl	416aa0 <xrealloc@@Base>
  4162dc:	str	x0, [x24]
  4162e0:	b	416274 <die@@Base+0x4dc>
  4162e4:	bl	416c24 <xstrdup@@Base>
  4162e8:	b	4162a0 <die@@Base+0x508>
  4162ec:	cbnz	x28, 416674 <die@@Base+0x8dc>
  4162f0:	ldr	w0, [x19, #392]
  4162f4:	cmp	w0, w21
  4162f8:	b.ge	416660 <die@@Base+0x8c8>  // b.tcont
  4162fc:	ldr	x28, [x23, w0, sxtw #3]
  416300:	mov	x1, x28
  416304:	ldrb	w4, [x1]
  416308:	sub	w6, w4, #0x30
  41630c:	cmp	w6, #0x9
  416310:	b.ls	416378 <die@@Base+0x5e0>  // b.plast
  416314:	cbnz	w4, 416660 <die@@Base+0x8c8>
  416318:	add	w0, w0, #0x1
  41631c:	str	w0, [x19, #392]
  416320:	cbz	w25, 415f60 <die@@Base+0x1c8>
  416324:	cbz	x28, 416664 <die@@Base+0x8cc>
  416328:	mov	x0, x28
  41632c:	bl	406910 <atoi@plt>
  416330:	ldrb	w1, [x28]
  416334:	sub	w4, w1, #0x30
  416338:	cmp	w4, #0x9
  41633c:	b.ls	416380 <die@@Base+0x5e8>  // b.plast
  416340:	cmp	w0, #0x0
  416344:	b.le	41634c <die@@Base+0x5b4>
  416348:	cbz	w1, 416388 <die@@Base+0x5f0>
  41634c:	ldr	x1, [sp, #120]
  416350:	mov	w2, #0x5                   	// #5
  416354:	mov	x0, #0x0                   	// #0
  416358:	bl	406d60 <dcgettext@plt>
  41635c:	mov	x2, x0
  416360:	ldr	w3, [x27]
  416364:	mov	x1, #0x0                   	// #0
  416368:	mov	x0, #0x0                   	// #0
  41636c:	bl	417aa8 <error@@Base>
  416370:	mov	w20, #0x1                   	// #1
  416374:	b	415f60 <die@@Base+0x1c8>
  416378:	add	x1, x1, #0x1
  41637c:	b	416304 <die@@Base+0x56c>
  416380:	add	x28, x28, #0x1
  416384:	b	416330 <die@@Base+0x598>
  416388:	ldr	x1, [x27, #8]
  41638c:	str	w0, [x1]
  416390:	b	415f60 <die@@Base+0x1c8>
  416394:	cbnz	x28, 4163c8 <die@@Base+0x630>
  416398:	ldr	w0, [x19, #392]
  41639c:	cmp	w21, w0
  4163a0:	b.le	41667c <die@@Base+0x8e4>
  4163a4:	ldr	x28, [x23, w0, sxtw #3]
  4163a8:	ldrb	w4, [x28]
  4163ac:	sub	w1, w4, #0x30
  4163b0:	cmp	w4, #0x2e
  4163b4:	and	w1, w1, #0xff
  4163b8:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  4163bc:	b.hi	41667c <die@@Base+0x8e4>  // b.pmore
  4163c0:	add	w0, w0, #0x1
  4163c4:	str	w0, [x19, #392]
  4163c8:	cbz	w25, 415f60 <die@@Base+0x1c8>
  4163cc:	mov	x0, x28
  4163d0:	bl	406a40 <atof@plt>
  4163d4:	ldr	x0, [x27, #8]
  4163d8:	str	d0, [x0]
  4163dc:	b	415f60 <die@@Base+0x1c8>
  4163e0:	add	x27, x27, #0x30
  4163e4:	b	41612c <die@@Base+0x394>
  4163e8:	add	w1, w0, #0x1
  4163ec:	ldr	x0, [x23, w0, sxtw #3]
  4163f0:	str	w1, [x25]
  4163f4:	mov	w1, w22
  4163f8:	bl	415b3c <gmk_add_function@@Base+0x930>
  4163fc:	b	415f70 <die@@Base+0x1d8>
  416400:	mov	w2, #0x5                   	// #5
  416404:	mov	x0, #0x0                   	// #0
  416408:	bl	406d60 <dcgettext@plt>
  41640c:	add	x21, x21, #0x8
  416410:	mov	x1, x19
  416414:	bl	406710 <fputs@plt>
  416418:	b	415fe4 <die@@Base+0x24c>
  41641c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416420:	mov	x0, #0x0                   	// #0
  416424:	add	x1, x1, #0x262
  416428:	bl	406d60 <dcgettext@plt>
  41642c:	ldr	x3, [x22, #1896]
  416430:	mov	x1, x0
  416434:	ldr	x2, [x21, #336]
  416438:	mov	x0, x19
  41643c:	bl	406e70 <fprintf@plt>
  416440:	b	416028 <die@@Base+0x290>
  416444:	ldr	w0, [x26, #2180]
  416448:	cbz	w0, 416458 <die@@Base+0x6c0>
  41644c:	ldr	x1, [sp, #104]
  416450:	mov	w0, #0xfff                 	// #4095
  416454:	str	w0, [x1, #1104]
  416458:	ldr	x0, [x26, #2184]
  41645c:	cbnz	x0, 416474 <die@@Base+0x6dc>
  416460:	ldr	x0, [sp, #104]
  416464:	ldr	w0, [x0, #1104]
  416468:	cbnz	w0, 416588 <die@@Base+0x7f0>
  41646c:	str	wzr, [x26, #2180]
  416470:	b	416594 <die@@Base+0x7fc>
  416474:	ldr	x20, [x0]
  416478:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x3720>
  41647c:	add	x21, x21, #0x3f0
  416480:	mov	w22, #0x101                 	// #257
  416484:	mov	w23, #0x9                   	// #9
  416488:	mov	w25, #0x20                  	// #32
  41648c:	ldr	x19, [x20]
  416490:	cbz	x19, 416460 <die@@Base+0x6c8>
  416494:	bl	4068a0 <__ctype_tolower_loc@plt>
  416498:	ldr	x2, [x0]
  41649c:	ldrb	w0, [x19]
  4164a0:	ldr	w0, [x2, x0, lsl #2]
  4164a4:	cmp	w0, #0x6e
  4164a8:	b.gt	4164d0 <die@@Base+0x738>
  4164ac:	cmp	w0, #0x60
  4164b0:	b.le	4164d8 <die@@Base+0x740>
  4164b4:	sub	w0, w0, #0x61
  4164b8:	cmp	w0, #0xd
  4164bc:	b.hi	4164d8 <die@@Base+0x740>  // b.pmore
  4164c0:	ldrb	w0, [x21, w0, uxtw]
  4164c4:	adr	x1, 4164d0 <die@@Base+0x738>
  4164c8:	add	x0, x1, w0, sxtb #2
  4164cc:	br	x0
  4164d0:	cmp	w0, #0x76
  4164d4:	b.eq	41657c <die@@Base+0x7e4>  // b.none
  4164d8:	mov	x0, x19
  4164dc:	bl	406700 <strlen@plt>
  4164e0:	mov	w2, #0x5                   	// #5
  4164e4:	mov	x20, x0
  4164e8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4164ec:	mov	x0, #0x0                   	// #0
  4164f0:	add	x1, x1, #0x2a6
  4164f4:	bl	406d60 <dcgettext@plt>
  4164f8:	mov	x3, x19
  4164fc:	mov	x2, x0
  416500:	mov	x1, x20
  416504:	mov	x0, #0x0                   	// #0
  416508:	bl	417d24 <fatal@@Base>
  41650c:	ldr	w0, [x26]
  416510:	orr	w0, w0, #0xfff
  416514:	str	w0, [x26]
  416518:	b	416550 <die@@Base+0x7b8>
  41651c:	ldr	w0, [x26]
  416520:	orr	w0, w0, #0x1
  416524:	b	416514 <die@@Base+0x77c>
  416528:	ldr	w0, [x26]
  41652c:	orr	w0, w0, w23
  416530:	b	416514 <die@@Base+0x77c>
  416534:	ldr	w0, [x26]
  416538:	orr	w0, w0, #0x4
  41653c:	b	416514 <die@@Base+0x77c>
  416540:	ldr	w0, [x26]
  416544:	orr	w0, w0, w22
  416548:	b	416514 <die@@Base+0x77c>
  41654c:	str	wzr, [x26]
  416550:	mov	x1, x19
  416554:	ldrb	w0, [x19, #1]!
  416558:	cbz	w0, 416574 <die@@Base+0x7dc>
  41655c:	cmp	w0, #0x2c
  416560:	ccmp	w0, w25, #0x4, ne  // ne = any
  416564:	b.ne	416550 <die@@Base+0x7b8>  // b.any
  416568:	ldrb	w0, [x1, #2]
  41656c:	add	x19, x1, #0x2
  416570:	cbnz	w0, 41649c <die@@Base+0x704>
  416574:	add	x20, x20, #0x8
  416578:	b	41648c <die@@Base+0x6f4>
  41657c:	ldr	w0, [x26]
  416580:	orr	w0, w0, #0x3
  416584:	b	416514 <die@@Base+0x77c>
  416588:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41658c:	mov	w1, #0x1                   	// #1
  416590:	str	w1, [x0, #1928]
  416594:	ldr	x19, [x26, #2192]
  416598:	cbz	x19, 4165d0 <die@@Base+0x838>
  41659c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4165a0:	add	x0, x0, #0x2cd
  4165a4:	cmp	x19, x0
  4165a8:	b.eq	4165cc <die@@Base+0x834>  // b.none
  4165ac:	ldrb	w20, [x19]
  4165b0:	cmp	w20, #0x6e
  4165b4:	b.ne	4165f4 <die@@Base+0x85c>  // b.any
  4165b8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4165bc:	add	x0, x19, #0x1
  4165c0:	add	x1, x1, #0x2ce
  4165c4:	bl	406be0 <strcmp@plt>
  4165c8:	cbnz	w0, 4166dc <die@@Base+0x944>
  4165cc:	str	wzr, [x26, #2200]
  4165d0:	ldr	w0, [x26, #2208]
  4165d4:	str	w0, [x26, #2204]
  4165d8:	ldp	x19, x20, [sp, #16]
  4165dc:	ldp	x21, x22, [sp, #32]
  4165e0:	ldp	x23, x24, [sp, #48]
  4165e4:	ldp	x25, x26, [sp, #64]
  4165e8:	ldp	x27, x28, [sp, #80]
  4165ec:	ldp	x29, x30, [sp], #144
  4165f0:	ret
  4165f4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4165f8:	add	x0, x0, #0x22c
  4165fc:	cmp	x19, x0
  416600:	b.eq	416620 <die@@Base+0x888>  // b.none
  416604:	cmp	w20, #0x6c
  416608:	b.ne	41662c <die@@Base+0x894>  // b.any
  41660c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  416610:	add	x0, x19, #0x1
  416614:	add	x1, x1, #0x22d
  416618:	bl	406be0 <strcmp@plt>
  41661c:	cbnz	w0, 41668c <die@@Base+0x8f4>
  416620:	mov	w0, #0x1                   	// #1
  416624:	str	w0, [x26, #2200]
  416628:	b	4165d0 <die@@Base+0x838>
  41662c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  416630:	add	x0, x0, #0x74b
  416634:	cmp	x19, x0
  416638:	b.eq	416658 <die@@Base+0x8c0>  // b.none
  41663c:	cmp	w20, #0x74
  416640:	b.ne	4166fc <die@@Base+0x964>  // b.any
  416644:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416648:	add	x0, x19, #0x1
  41664c:	add	x1, x1, #0x74c
  416650:	bl	406be0 <strcmp@plt>
  416654:	cbnz	w0, 41669c <die@@Base+0x904>
  416658:	mov	w0, #0x2                   	// #2
  41665c:	b	416624 <die@@Base+0x88c>
  416660:	cbz	w25, 415f60 <die@@Base+0x1c8>
  416664:	ldr	x0, [x27, #24]
  416668:	ldr	w1, [x0]
  41666c:	ldr	x0, [x27, #8]
  416670:	b	416180 <die@@Base+0x3e8>
  416674:	cbz	w25, 415f60 <die@@Base+0x1c8>
  416678:	b	416328 <die@@Base+0x590>
  41667c:	cbz	w25, 415f60 <die@@Base+0x1c8>
  416680:	ldr	x0, [x27, #24]
  416684:	ldr	d0, [x0]
  416688:	b	4163d4 <die@@Base+0x63c>
  41668c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  416690:	add	x0, x0, #0x74b
  416694:	cmp	x19, x0
  416698:	b.eq	416658 <die@@Base+0x8c0>  // b.none
  41669c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4166a0:	add	x0, x0, #0x2d2
  4166a4:	cmp	x19, x0
  4166a8:	b.eq	416728 <die@@Base+0x990>  // b.none
  4166ac:	mov	x0, x19
  4166b0:	bl	406700 <strlen@plt>
  4166b4:	mov	w2, #0x5                   	// #5
  4166b8:	mov	x19, x0
  4166bc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4166c0:	mov	x0, #0x0                   	// #0
  4166c4:	add	x1, x1, #0x2da
  4166c8:	bl	406d60 <dcgettext@plt>
  4166cc:	mov	x1, x19
  4166d0:	mov	x2, x0
  4166d4:	ldr	x3, [x26, #2192]
  4166d8:	b	416504 <die@@Base+0x76c>
  4166dc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  4166e0:	add	x0, x0, #0x22c
  4166e4:	cmp	x19, x0
  4166e8:	b.eq	416620 <die@@Base+0x888>  // b.none
  4166ec:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  4166f0:	add	x0, x0, #0x74b
  4166f4:	cmp	x19, x0
  4166f8:	b.eq	416658 <die@@Base+0x8c0>  // b.none
  4166fc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  416700:	add	x0, x0, #0x2d2
  416704:	cmp	x19, x0
  416708:	b.eq	416728 <die@@Base+0x990>  // b.none
  41670c:	cmp	w20, #0x72
  416710:	b.ne	4166ac <die@@Base+0x914>  // b.any
  416714:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416718:	add	x0, x19, #0x1
  41671c:	add	x1, x1, #0x2d3
  416720:	bl	406be0 <strcmp@plt>
  416724:	cbnz	w0, 4166ac <die@@Base+0x914>
  416728:	mov	w0, #0x3                   	// #3
  41672c:	b	416624 <die@@Base+0x88c>
  416730:	stp	x29, x30, [sp, #-48]!
  416734:	mov	x3, x0
  416738:	mov	x29, sp
  41673c:	stp	x19, x20, [sp, #16]
  416740:	mov	x19, x1
  416744:	add	x1, x1, #0x13
  416748:	and	x1, x1, #0xfffffffffffffff0
  41674c:	stp	x21, x22, [sp, #32]
  416750:	sub	sp, sp, x1
  416754:	mov	x20, sp
  416758:	mov	x2, x19
  41675c:	mov	x0, x20
  416760:	add	x19, x20, x19
  416764:	mov	w1, #0x2824                	// #10276
  416768:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  41676c:	add	x21, x21, #0x450
  416770:	strh	w1, [x0], #2
  416774:	mov	x1, x3
  416778:	bl	4066c0 <memcpy@plt>
  41677c:	strb	wzr, [x19, #3]
  416780:	mov	w0, #0x29                  	// #41
  416784:	strb	w0, [x19, #2]
  416788:	mov	x0, x20
  41678c:	bl	40ba98 <variable_expand@@Base>
  416790:	mov	x19, x0
  416794:	add	x1, x21, #0x4
  416798:	ldrb	w0, [x19]
  41679c:	ldrh	w0, [x1, x0, lsl #1]
  4167a0:	tst	w0, #0x6
  4167a4:	b.ne	416848 <die@@Base+0xab0>  // b.any
  4167a8:	mov	x0, x19
  4167ac:	bl	406700 <strlen@plt>
  4167b0:	cbz	x0, 416834 <die@@Base+0xa9c>
  4167b4:	lsl	x1, x0, #3
  4167b8:	add	x0, x0, #0x11
  4167bc:	add	x1, x1, #0x1f
  4167c0:	and	x0, x0, #0xfffffffffffffff0
  4167c4:	and	x1, x1, #0xfffffffffffffff0
  4167c8:	add	x21, x21, #0x4
  4167cc:	sub	sp, sp, x1
  4167d0:	mov	x20, sp
  4167d4:	sub	sp, sp, x0
  4167d8:	mov	x22, sp
  4167dc:	mov	w0, #0x2d                  	// #45
  4167e0:	mov	x1, x22
  4167e4:	strb	w0, [x1], #1
  4167e8:	mov	w0, #0x1                   	// #1
  4167ec:	stp	xzr, x1, [x20]
  4167f0:	ldrb	w2, [x19]
  4167f4:	cbnz	w2, 416850 <die@@Base+0xab8>
  4167f8:	add	w19, w0, #0x1
  4167fc:	strb	wzr, [x1]
  416800:	str	xzr, [x20, w19, sxtw #3]
  416804:	ldr	x0, [x20, #8]
  416808:	ldrb	w1, [x0]
  41680c:	cmp	w1, #0x2d
  416810:	b.eq	416824 <die@@Base+0xa8c>  // b.none
  416814:	mov	w1, #0x3d                  	// #61
  416818:	bl	406c40 <strchr@plt>
  41681c:	cbnz	x0, 416824 <die@@Base+0xa8c>
  416820:	str	x22, [x20, #8]
  416824:	mov	x1, x20
  416828:	mov	w0, w19
  41682c:	mov	w2, #0x1                   	// #1
  416830:	bl	415e74 <die@@Base+0xdc>
  416834:	mov	sp, x29
  416838:	ldp	x19, x20, [sp, #16]
  41683c:	ldp	x21, x22, [sp, #32]
  416840:	ldp	x29, x30, [sp], #48
  416844:	ret
  416848:	add	x19, x19, #0x1
  41684c:	b	416798 <die@@Base+0xa00>
  416850:	cmp	w2, #0x5c
  416854:	add	x3, x1, #0x1
  416858:	b.ne	416864 <die@@Base+0xacc>  // b.any
  41685c:	ldrb	w4, [x19, #1]
  416860:	cbnz	w4, 41688c <die@@Base+0xaf4>
  416864:	ldrh	w2, [x21, w2, sxtw #1]
  416868:	tbz	w2, #1, 416890 <die@@Base+0xaf8>
  41686c:	add	w0, w0, #0x1
  416870:	strb	wzr, [x1]
  416874:	str	x3, [x20, w0, sxtw #3]
  416878:	ldrb	w1, [x19, #1]!
  41687c:	ldrh	w1, [x21, x1, lsl #1]
  416880:	tbnz	w1, #1, 416878 <die@@Base+0xae0>
  416884:	mov	x1, x3
  416888:	b	4167f0 <die@@Base+0xa58>
  41688c:	add	x19, x19, #0x1
  416890:	ldrb	w2, [x19], #1
  416894:	strb	w2, [x1]
  416898:	b	416884 <die@@Base+0xaec>

000000000041689c <alpha_compare@@Base>:
  41689c:	ldr	x0, [x0]
  4168a0:	ldr	x1, [x1]
  4168a4:	ldrb	w2, [x0]
  4168a8:	ldrb	w3, [x1]
  4168ac:	cmp	w2, w3
  4168b0:	b.eq	4168bc <alpha_compare@@Base+0x20>  // b.none
  4168b4:	sub	w0, w2, w3
  4168b8:	ret
  4168bc:	b	406be0 <strcmp@plt>

00000000004168c0 <collapse_continuations@@Base>:
  4168c0:	stp	x29, x30, [sp, #-80]!
  4168c4:	mov	w1, #0xa                   	// #10
  4168c8:	mov	x29, sp
  4168cc:	stp	x19, x20, [sp, #16]
  4168d0:	stp	x21, x22, [sp, #32]
  4168d4:	stp	x23, x24, [sp, #48]
  4168d8:	mov	x24, x0
  4168dc:	stp	x25, x26, [sp, #64]
  4168e0:	bl	406c40 <strchr@plt>
  4168e4:	cbz	x0, 416a08 <collapse_continuations@@Base+0x148>
  4168e8:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  4168ec:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  4168f0:	mov	x21, x24
  4168f4:	mov	x20, x24
  4168f8:	add	x22, x22, #0x454
  4168fc:	add	x23, x23, #0x7d0
  416900:	cmp	x0, x24
  416904:	add	x26, x0, #0x1
  416908:	b.ls	4169e8 <collapse_continuations@@Base+0x128>  // b.plast
  41690c:	ldurb	w1, [x0, #-1]
  416910:	cmp	w1, #0x5c
  416914:	b.ne	4169e8 <collapse_continuations@@Base+0x128>  // b.any
  416918:	mov	x1, #0xfffffffffffffffe    	// #-2
  41691c:	add	x2, x0, x1
  416920:	mov	w25, w1
  416924:	cmp	x24, x2
  416928:	b.ls	4169d4 <collapse_continuations@@Base+0x114>  // b.plast
  41692c:	add	w25, w25, #0x1
  416930:	mov	w19, #0x2                   	// #2
  416934:	sub	x2, x0, x21
  416938:	add	x2, x2, w25, sxtw
  41693c:	cmp	x20, x21
  416940:	sdiv	w19, w25, w19
  416944:	sub	x19, x2, w19, sxtw
  416948:	b.eq	41695c <collapse_continuations@@Base+0x9c>  // b.none
  41694c:	mov	x2, x19
  416950:	mov	x1, x21
  416954:	mov	x0, x20
  416958:	bl	4066d0 <memmove@plt>
  41695c:	add	x20, x20, x19
  416960:	mov	x21, x26
  416964:	tbz	w25, #0, 416a00 <collapse_continuations@@Base+0x140>
  416968:	ldrb	w0, [x21]
  41696c:	ldrh	w0, [x22, x0, lsl #1]
  416970:	tbnz	w0, #1, 4169f0 <collapse_continuations@@Base+0x130>
  416974:	ldr	w0, [x23]
  416978:	cbnz	w0, 416990 <collapse_continuations@@Base+0xd0>
  41697c:	cmp	x20, x24
  416980:	b.ls	416990 <collapse_continuations@@Base+0xd0>  // b.plast
  416984:	ldurb	w0, [x20, #-1]
  416988:	ldrh	w0, [x22, x0, lsl #1]
  41698c:	tbnz	w0, #1, 4169f8 <collapse_continuations@@Base+0x138>
  416990:	mov	w0, #0x20                  	// #32
  416994:	strb	w0, [x20], #1
  416998:	mov	w1, #0xa                   	// #10
  41699c:	mov	x0, x21
  4169a0:	bl	406c40 <strchr@plt>
  4169a4:	cbnz	x0, 416900 <collapse_continuations@@Base+0x40>
  4169a8:	mov	x0, x21
  4169ac:	bl	406700 <strlen@plt>
  4169b0:	mov	x1, x21
  4169b4:	add	x2, x0, #0x1
  4169b8:	mov	x0, x20
  4169bc:	ldp	x19, x20, [sp, #16]
  4169c0:	ldp	x21, x22, [sp, #32]
  4169c4:	ldp	x23, x24, [sp, #48]
  4169c8:	ldp	x25, x26, [sp, #64]
  4169cc:	ldp	x29, x30, [sp], #80
  4169d0:	b	4066d0 <memmove@plt>
  4169d4:	sub	x1, x1, #0x1
  4169d8:	ldrb	w2, [x26, x1]
  4169dc:	cmp	w2, #0x5c
  4169e0:	b.eq	41691c <collapse_continuations@@Base+0x5c>  // b.none
  4169e4:	b	41692c <collapse_continuations@@Base+0x6c>
  4169e8:	mov	w25, #0x0                   	// #0
  4169ec:	b	416930 <collapse_continuations@@Base+0x70>
  4169f0:	add	x21, x21, #0x1
  4169f4:	b	416968 <collapse_continuations@@Base+0xa8>
  4169f8:	sub	x20, x20, #0x1
  4169fc:	b	41697c <collapse_continuations@@Base+0xbc>
  416a00:	mov	w0, #0xa                   	// #10
  416a04:	b	416994 <collapse_continuations@@Base+0xd4>
  416a08:	ldp	x19, x20, [sp, #16]
  416a0c:	ldp	x21, x22, [sp, #32]
  416a10:	ldp	x23, x24, [sp, #48]
  416a14:	ldp	x25, x26, [sp, #64]
  416a18:	ldp	x29, x30, [sp], #80
  416a1c:	ret

0000000000416a20 <print_spaces@@Base>:
  416a20:	stp	x29, x30, [sp, #-32]!
  416a24:	mov	x29, sp
  416a28:	str	x19, [sp, #16]
  416a2c:	mov	w19, w0
  416a30:	sub	w19, w19, #0x1
  416a34:	cmn	w19, #0x1
  416a38:	b.ne	416a48 <print_spaces@@Base+0x28>  // b.any
  416a3c:	ldr	x19, [sp, #16]
  416a40:	ldp	x29, x30, [sp], #32
  416a44:	ret
  416a48:	mov	w0, #0x20                  	// #32
  416a4c:	bl	406e20 <putchar@plt>
  416a50:	b	416a30 <print_spaces@@Base+0x10>

0000000000416a54 <xmalloc@@Base>:
  416a54:	cmp	x0, #0x0
  416a58:	stp	x29, x30, [sp, #-16]!
  416a5c:	csinc	x0, x0, xzr, ne  // ne = any
  416a60:	mov	x29, sp
  416a64:	bl	406950 <malloc@plt>
  416a68:	cbnz	x0, 416a70 <xmalloc@@Base+0x1c>
  416a6c:	bl	417ea8 <out_of_memory@@Base>
  416a70:	ldp	x29, x30, [sp], #16
  416a74:	ret

0000000000416a78 <xcalloc@@Base>:
  416a78:	cmp	x0, #0x0
  416a7c:	stp	x29, x30, [sp, #-16]!
  416a80:	mov	x1, #0x1                   	// #1
  416a84:	mov	x29, sp
  416a88:	csel	x0, x0, x1, ne  // ne = any
  416a8c:	bl	406a60 <calloc@plt>
  416a90:	cbnz	x0, 416a98 <xcalloc@@Base+0x20>
  416a94:	bl	417ea8 <out_of_memory@@Base>
  416a98:	ldp	x29, x30, [sp], #16
  416a9c:	ret

0000000000416aa0 <xrealloc@@Base>:
  416aa0:	stp	x29, x30, [sp, #-16]!
  416aa4:	cmp	x1, #0x0
  416aa8:	csinc	x1, x1, xzr, ne  // ne = any
  416aac:	mov	x29, sp
  416ab0:	cbz	x0, 416ac0 <xrealloc@@Base+0x20>
  416ab4:	bl	406a90 <realloc@plt>
  416ab8:	cbnz	x0, 416acc <xrealloc@@Base+0x2c>
  416abc:	bl	417ea8 <out_of_memory@@Base>
  416ac0:	mov	x0, x1
  416ac4:	bl	406950 <malloc@plt>
  416ac8:	b	416ab8 <xrealloc@@Base+0x18>
  416acc:	ldp	x29, x30, [sp], #16
  416ad0:	ret

0000000000416ad4 <concat@@Base>:
  416ad4:	stp	x29, x30, [sp, #-176]!
  416ad8:	mov	x29, sp
  416adc:	stp	x21, x22, [sp, #32]
  416ae0:	mov	w22, w0
  416ae4:	add	x0, sp, #0xb0
  416ae8:	stp	x19, x20, [sp, #16]
  416aec:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  416af0:	add	x20, x20, #0xd60
  416af4:	stp	x0, x0, [sp, #80]
  416af8:	add	x0, sp, #0x70
  416afc:	mov	x19, #0x0                   	// #0
  416b00:	stp	x23, x24, [sp, #48]
  416b04:	mov	x23, #0x3c                  	// #60
  416b08:	str	x25, [sp, #64]
  416b0c:	str	x0, [sp, #96]
  416b10:	mov	w0, #0xffffffc8            	// #-56
  416b14:	str	w0, [sp, #104]
  416b18:	str	wzr, [sp, #108]
  416b1c:	stp	x1, x2, [sp, #120]
  416b20:	stp	x3, x4, [sp, #136]
  416b24:	stp	x5, x6, [sp, #152]
  416b28:	str	x7, [sp, #168]
  416b2c:	sub	w22, w22, #0x1
  416b30:	cmn	w22, #0x1
  416b34:	b.ne	416b8c <concat@@Base+0xb8>  // b.any
  416b38:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  416b3c:	add	x20, x0, #0xd60
  416b40:	ldr	x1, [x0, #3424]
  416b44:	cmp	x1, x19
  416b48:	b.ne	416b6c <concat@@Base+0x98>  // b.any
  416b4c:	cmp	x19, #0x0
  416b50:	lsl	x1, x19, #1
  416b54:	mov	x2, #0x78                  	// #120
  416b58:	csel	x1, x1, x2, ne  // ne = any
  416b5c:	str	x1, [x0, #3424]
  416b60:	ldr	x0, [x20, #8]
  416b64:	bl	416aa0 <xrealloc@@Base>
  416b68:	str	x0, [x20, #8]
  416b6c:	ldr	x0, [x20, #8]
  416b70:	strb	wzr, [x0, x19]
  416b74:	ldp	x19, x20, [sp, #16]
  416b78:	ldp	x21, x22, [sp, #32]
  416b7c:	ldp	x23, x24, [sp, #48]
  416b80:	ldr	x25, [sp, #64]
  416b84:	ldp	x29, x30, [sp], #176
  416b88:	ret
  416b8c:	ldr	w0, [sp, #104]
  416b90:	ldr	x1, [sp, #80]
  416b94:	tbnz	w0, #31, 416c08 <concat@@Base+0x134>
  416b98:	add	x0, x1, #0xf
  416b9c:	and	x0, x0, #0xfffffffffffffff8
  416ba0:	str	x0, [sp, #80]
  416ba4:	ldr	x24, [x1]
  416ba8:	cbz	x24, 416b2c <concat@@Base+0x58>
  416bac:	mov	x0, x24
  416bb0:	bl	406700 <strlen@plt>
  416bb4:	mov	x21, x0
  416bb8:	cbz	x0, 416b2c <concat@@Base+0x58>
  416bbc:	ldr	x1, [x20]
  416bc0:	add	x25, x19, x0
  416bc4:	cmp	x25, x1
  416bc8:	b.ls	416bec <concat@@Base+0x118>  // b.plast
  416bcc:	cmp	x1, #0x0
  416bd0:	csel	x1, x1, x23, ne  // ne = any
  416bd4:	add	x1, x1, x0
  416bd8:	ldr	x0, [x20, #8]
  416bdc:	lsl	x1, x1, #1
  416be0:	str	x1, [x20]
  416be4:	bl	416aa0 <xrealloc@@Base>
  416be8:	str	x0, [x20, #8]
  416bec:	ldr	x0, [x20, #8]
  416bf0:	mov	x2, x21
  416bf4:	mov	x1, x24
  416bf8:	add	x0, x0, x19
  416bfc:	mov	x19, x25
  416c00:	bl	4066c0 <memcpy@plt>
  416c04:	b	416b2c <concat@@Base+0x58>
  416c08:	add	w2, w0, #0x8
  416c0c:	str	w2, [sp, #104]
  416c10:	cmp	w2, #0x0
  416c14:	b.gt	416b98 <concat@@Base+0xc4>
  416c18:	ldr	x1, [sp, #88]
  416c1c:	add	x1, x1, w0, sxtw
  416c20:	b	416ba4 <concat@@Base+0xd0>

0000000000416c24 <xstrdup@@Base>:
  416c24:	stp	x29, x30, [sp, #-16]!
  416c28:	mov	x29, sp
  416c2c:	bl	406ab0 <strdup@plt>
  416c30:	cbnz	x0, 416c38 <xstrdup@@Base+0x14>
  416c34:	bl	417ea8 <out_of_memory@@Base>
  416c38:	ldp	x29, x30, [sp], #16
  416c3c:	ret

0000000000416c40 <xstrndup@@Base>:
  416c40:	stp	x29, x30, [sp, #-16]!
  416c44:	mov	x29, sp
  416c48:	bl	406c30 <strndup@plt>
  416c4c:	cbnz	x0, 416c54 <xstrndup@@Base+0x14>
  416c50:	bl	417ea8 <out_of_memory@@Base>
  416c54:	ldp	x29, x30, [sp], #16
  416c58:	ret

0000000000416c5c <lindex@@Base>:
  416c5c:	cmp	x0, x1
  416c60:	b.cc	416c6c <lindex@@Base+0x10>  // b.lo, b.ul, b.last
  416c64:	mov	x0, #0x0                   	// #0
  416c68:	ret
  416c6c:	mov	x3, x0
  416c70:	ldrb	w4, [x3], #1
  416c74:	cmp	w4, w2
  416c78:	b.eq	416c68 <lindex@@Base+0xc>  // b.none
  416c7c:	mov	x0, x3
  416c80:	b	416c5c <lindex@@Base>

0000000000416c84 <end_of_token@@Base>:
  416c84:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  416c88:	add	x1, x1, #0x454
  416c8c:	ldrb	w2, [x0]
  416c90:	ldrh	w2, [x1, x2, lsl #1]
  416c94:	tst	x2, #0x7
  416c98:	b.eq	416ca0 <end_of_token@@Base+0x1c>  // b.none
  416c9c:	ret
  416ca0:	add	x0, x0, #0x1
  416ca4:	b	416c8c <end_of_token@@Base+0x8>

0000000000416ca8 <next_token@@Base>:
  416ca8:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  416cac:	add	x1, x1, #0x454
  416cb0:	ldrb	w2, [x0]
  416cb4:	ldrh	w2, [x1, x2, lsl #1]
  416cb8:	tst	w2, #0x6
  416cbc:	b.ne	416cc4 <next_token@@Base+0x1c>  // b.any
  416cc0:	ret
  416cc4:	add	x0, x0, #0x1
  416cc8:	b	416cb0 <next_token@@Base+0x8>

0000000000416ccc <find_next_token@@Base>:
  416ccc:	stp	x29, x30, [sp, #-16]!
  416cd0:	mov	x5, x0
  416cd4:	mov	x4, x1
  416cd8:	mov	x29, sp
  416cdc:	ldr	x0, [x0]
  416ce0:	bl	416ca8 <next_token@@Base>
  416ce4:	ldrb	w1, [x0]
  416ce8:	cbz	w1, 416d10 <find_next_token@@Base+0x44>
  416cec:	mov	x3, x0
  416cf0:	bl	416c84 <end_of_token@@Base>
  416cf4:	str	x0, [x5]
  416cf8:	cbz	x4, 416d04 <find_next_token@@Base+0x38>
  416cfc:	sub	x0, x0, x3
  416d00:	str	x0, [x4]
  416d04:	mov	x0, x3
  416d08:	ldp	x29, x30, [sp], #16
  416d0c:	ret
  416d10:	mov	x3, #0x0                   	// #0
  416d14:	b	416d04 <find_next_token@@Base+0x38>

0000000000416d18 <writebuf@@Base>:
  416d18:	stp	x29, x30, [sp, #-64]!
  416d1c:	mov	x29, sp
  416d20:	stp	x19, x20, [sp, #16]
  416d24:	mov	x20, x1
  416d28:	stp	x21, x22, [sp, #32]
  416d2c:	mov	x21, x2
  416d30:	mov	x22, x2
  416d34:	str	x23, [sp, #48]
  416d38:	mov	w23, w0
  416d3c:	cbnz	x22, 416d48 <writebuf@@Base+0x30>
  416d40:	mov	x19, x21
  416d44:	b	416d74 <writebuf@@Base+0x5c>
  416d48:	mov	x2, x22
  416d4c:	mov	x1, x20
  416d50:	mov	w0, w23
  416d54:	bl	406b30 <write@plt>
  416d58:	mov	x19, x0
  416d5c:	cmn	x0, #0x1
  416d60:	b.ne	416d8c <writebuf@@Base+0x74>  // b.any
  416d64:	bl	406e00 <__errno_location@plt>
  416d68:	ldr	w0, [x0]
  416d6c:	cmp	w0, #0x4
  416d70:	b.eq	416d48 <writebuf@@Base+0x30>  // b.none
  416d74:	mov	x0, x19
  416d78:	ldp	x19, x20, [sp, #16]
  416d7c:	ldp	x21, x22, [sp, #32]
  416d80:	ldr	x23, [sp, #48]
  416d84:	ldp	x29, x30, [sp], #64
  416d88:	ret
  416d8c:	tbnz	x0, #63, 416d74 <writebuf@@Base+0x5c>
  416d90:	sub	x22, x22, x0
  416d94:	add	x20, x20, x0
  416d98:	b	416d3c <writebuf@@Base+0x24>

0000000000416d9c <readbuf@@Base>:
  416d9c:	stp	x29, x30, [sp, #-64]!
  416da0:	mov	x29, sp
  416da4:	stp	x19, x20, [sp, #16]
  416da8:	mov	x20, x2
  416dac:	stp	x21, x22, [sp, #32]
  416db0:	mov	x22, x1
  416db4:	mov	x21, x1
  416db8:	str	x23, [sp, #48]
  416dbc:	mov	w23, w0
  416dc0:	cbz	x20, 416e14 <readbuf@@Base+0x78>
  416dc4:	mov	x2, x20
  416dc8:	mov	x1, x21
  416dcc:	mov	w0, w23
  416dd0:	bl	406d10 <read@plt>
  416dd4:	mov	x19, x0
  416dd8:	cmn	x0, #0x1
  416ddc:	b.ne	416e08 <readbuf@@Base+0x6c>  // b.any
  416de0:	bl	406e00 <__errno_location@plt>
  416de4:	ldr	w0, [x0]
  416de8:	cmp	w0, #0x4
  416dec:	b.eq	416dc4 <readbuf@@Base+0x28>  // b.none
  416df0:	mov	x0, x19
  416df4:	ldp	x19, x20, [sp, #16]
  416df8:	ldp	x21, x22, [sp, #32]
  416dfc:	ldr	x23, [sp, #48]
  416e00:	ldp	x29, x30, [sp], #64
  416e04:	ret
  416e08:	cmp	x0, #0x0
  416e0c:	b.lt	416df0 <readbuf@@Base+0x54>  // b.tstop
  416e10:	b.ne	416e1c <readbuf@@Base+0x80>  // b.any
  416e14:	sub	x19, x21, x22
  416e18:	b	416df0 <readbuf@@Base+0x54>
  416e1c:	sub	x20, x20, x0
  416e20:	add	x21, x21, x0
  416e24:	b	416dc0 <readbuf@@Base+0x24>

0000000000416e28 <copy_dep_chain@@Base>:
  416e28:	stp	x29, x30, [sp, #-48]!
  416e2c:	mov	x29, sp
  416e30:	stp	x19, x20, [sp, #16]
  416e34:	mov	x20, x0
  416e38:	stp	x21, x22, [sp, #32]
  416e3c:	mov	x22, #0x0                   	// #0
  416e40:	mov	x21, #0x0                   	// #0
  416e44:	cbnz	x20, 416e5c <copy_dep_chain@@Base+0x34>
  416e48:	mov	x0, x21
  416e4c:	ldp	x19, x20, [sp, #16]
  416e50:	ldp	x21, x22, [sp, #32]
  416e54:	ldp	x29, x30, [sp], #48
  416e58:	ret
  416e5c:	mov	x0, #0x28                  	// #40
  416e60:	bl	416a54 <xmalloc@@Base>
  416e64:	mov	x19, x0
  416e68:	ldp	x0, x1, [x20]
  416e6c:	stp	x0, x1, [x19]
  416e70:	ldp	x0, x1, [x20, #16]
  416e74:	stp	x0, x1, [x19, #16]
  416e78:	ldr	x0, [x20, #32]
  416e7c:	str	x0, [x19, #32]
  416e80:	tbz	w0, #11, 416e90 <copy_dep_chain@@Base+0x68>
  416e84:	ldr	x0, [x19, #8]
  416e88:	bl	416c24 <xstrdup@@Base>
  416e8c:	str	x0, [x19, #8]
  416e90:	str	xzr, [x19]
  416e94:	cbz	x21, 416ea8 <copy_dep_chain@@Base+0x80>
  416e98:	str	x19, [x22]
  416e9c:	mov	x22, x19
  416ea0:	ldr	x20, [x20]
  416ea4:	b	416e44 <copy_dep_chain@@Base+0x1c>
  416ea8:	mov	x21, x19
  416eac:	b	416e9c <copy_dep_chain@@Base+0x74>

0000000000416eb0 <free_ns_chain@@Base>:
  416eb0:	cbnz	x0, 416eb8 <free_ns_chain@@Base+0x8>
  416eb4:	ret
  416eb8:	stp	x29, x30, [sp, #-32]!
  416ebc:	mov	x29, sp
  416ec0:	str	x19, [sp, #16]
  416ec4:	ldr	x19, [x0]
  416ec8:	bl	406c20 <free@plt>
  416ecc:	mov	x0, x19
  416ed0:	cbnz	x19, 416ec4 <free_ns_chain@@Base+0x14>
  416ed4:	ldr	x19, [sp, #16]
  416ed8:	ldp	x29, x30, [sp], #32
  416edc:	ret

0000000000416ee0 <get_tmpfile@@Base>:
  416ee0:	stp	x29, x30, [sp, #-48]!
  416ee4:	mov	x29, sp
  416ee8:	stp	x19, x20, [sp, #16]
  416eec:	mov	x19, x0
  416ef0:	mov	x20, x1
  416ef4:	mov	w0, #0x3f                  	// #63
  416ef8:	str	x21, [sp, #32]
  416efc:	bl	406de0 <umask@plt>
  416f00:	mov	w21, w0
  416f04:	mov	x0, x20
  416f08:	bl	406700 <strlen@plt>
  416f0c:	add	x0, x0, #0x1
  416f10:	bl	416a54 <xmalloc@@Base>
  416f14:	str	x0, [x19]
  416f18:	mov	x1, x20
  416f1c:	bl	406cc0 <strcpy@plt>
  416f20:	ldr	x0, [x19]
  416f24:	bl	406d20 <mkstemp@plt>
  416f28:	cmn	w0, #0x1
  416f2c:	b.ne	416f60 <get_tmpfile@@Base+0x80>  // b.any
  416f30:	bl	406e00 <__errno_location@plt>
  416f34:	ldr	w0, [x0]
  416f38:	cmp	w0, #0x4
  416f3c:	b.eq	416f20 <get_tmpfile@@Base+0x40>  // b.none
  416f40:	mov	x19, #0x0                   	// #0
  416f44:	mov	w0, w21
  416f48:	bl	406de0 <umask@plt>
  416f4c:	mov	x0, x19
  416f50:	ldp	x19, x20, [sp, #16]
  416f54:	ldr	x21, [sp, #32]
  416f58:	ldp	x29, x30, [sp], #48
  416f5c:	ret
  416f60:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  416f64:	add	x1, x1, #0x80c
  416f68:	bl	406a00 <fdopen@plt>
  416f6c:	mov	x19, x0
  416f70:	b	416f44 <get_tmpfile@@Base+0x64>

0000000000416f74 <user_access@@Base>:
  416f74:	ret

0000000000416f78 <make_access@@Base>:
  416f78:	ret

0000000000416f7c <child_access@@Base>:
  416f7c:	ret
  416f80:	stp	x29, x30, [sp, #-32]!
  416f84:	mov	w2, #0x0                   	// #0
  416f88:	mov	w1, #0x3                   	// #3
  416f8c:	mov	x29, sp
  416f90:	stp	x19, x20, [sp, #16]
  416f94:	mov	w20, w0
  416f98:	bl	4224a8 <rpl_fcntl@@Base>
  416f9c:	tbnz	w0, #31, 416fcc <child_access@@Base+0x50>
  416fa0:	orr	w19, w0, #0x400
  416fa4:	mov	w2, w19
  416fa8:	mov	w0, w20
  416fac:	mov	w1, #0x4                   	// #4
  416fb0:	bl	4224a8 <rpl_fcntl@@Base>
  416fb4:	cmn	w0, #0x1
  416fb8:	b.ne	416fcc <child_access@@Base+0x50>  // b.any
  416fbc:	bl	406e00 <__errno_location@plt>
  416fc0:	ldr	w0, [x0]
  416fc4:	cmp	w0, #0x4
  416fc8:	b.eq	416fa4 <child_access@@Base+0x28>  // b.none
  416fcc:	ldp	x19, x20, [sp, #16]
  416fd0:	ldp	x29, x30, [sp], #32
  416fd4:	ret
  416fd8:	stp	x29, x30, [sp, #-48]!
  416fdc:	mov	w2, #0x0                   	// #0
  416fe0:	mov	x29, sp
  416fe4:	stp	x19, x20, [sp, #16]
  416fe8:	mov	x19, x1
  416fec:	mov	x1, #0x0                   	// #0
  416ff0:	str	x21, [sp, #32]
  416ff4:	mov	w21, w0
  416ff8:	bl	406870 <lseek@plt>
  416ffc:	cmn	x0, #0x1
  417000:	b.ne	417010 <child_access@@Base+0x94>  // b.any
  417004:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417008:	add	x0, x0, #0xd30
  41700c:	bl	406740 <perror@plt>
  417010:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  417014:	add	x20, x20, #0xdc0
  417018:	mov	x1, x20
  41701c:	mov	w0, w21
  417020:	mov	x2, #0x2000                	// #8192
  417024:	bl	406d10 <read@plt>
  417028:	cmn	w0, #0x1
  41702c:	b.ne	417058 <child_access@@Base+0xdc>  // b.any
  417030:	bl	406e00 <__errno_location@plt>
  417034:	ldr	w0, [x0]
  417038:	cmp	w0, #0x4
  41703c:	b.eq	417018 <child_access@@Base+0x9c>  // b.none
  417040:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417044:	add	x0, x0, #0xd38
  417048:	ldp	x19, x20, [sp, #16]
  41704c:	ldr	x21, [sp, #32]
  417050:	ldp	x29, x30, [sp], #48
  417054:	b	406740 <perror@plt>
  417058:	cmp	w0, #0x0
  41705c:	b.lt	417040 <child_access@@Base+0xc4>  // b.tstop
  417060:	b.eq	417094 <child_access@@Base+0x118>  // b.none
  417064:	sxtw	x1, w0
  417068:	mov	x3, x19
  41706c:	mov	x0, x20
  417070:	mov	x2, #0x1                   	// #1
  417074:	bl	406c70 <fwrite@plt>
  417078:	cbnz	x0, 417088 <child_access@@Base+0x10c>
  41707c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417080:	add	x0, x0, #0xd3f
  417084:	b	417048 <child_access@@Base+0xcc>
  417088:	mov	x0, x19
  41708c:	bl	406cb0 <fflush@plt>
  417090:	b	417018 <child_access@@Base+0x9c>
  417094:	ldp	x19, x20, [sp, #16]
  417098:	ldr	x21, [sp, #32]
  41709c:	ldp	x29, x30, [sp], #48
  4170a0:	ret
  4170a4:	stp	x29, x30, [sp, #-32]!
  4170a8:	mov	x29, sp
  4170ac:	stp	x19, x20, [sp, #16]
  4170b0:	mov	x19, x0
  4170b4:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  4170b8:	add	x0, x20, #0xd70
  4170bc:	ldr	x1, [x0, #8]
  4170c0:	cmp	x1, x19
  4170c4:	b.cs	4170dc <child_access@@Base+0x160>  // b.hs, b.nlast
  4170c8:	add	x1, x1, x19, lsl #1
  4170cc:	str	x1, [x0, #8]
  4170d0:	ldr	x0, [x20, #3440]
  4170d4:	bl	416aa0 <xrealloc@@Base>
  4170d8:	str	x0, [x20, #3440]
  4170dc:	ldr	x0, [x20, #3440]
  4170e0:	add	x19, x0, x19
  4170e4:	sturb	wzr, [x19, #-1]
  4170e8:	ldp	x19, x20, [sp, #16]
  4170ec:	ldp	x29, x30, [sp], #32
  4170f0:	ret
  4170f4:	stp	x29, x30, [sp, #-64]!
  4170f8:	mov	x29, sp
  4170fc:	stp	x21, x22, [sp, #32]
  417100:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  417104:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  417108:	stp	x19, x20, [sp, #16]
  41710c:	mov	w19, w0
  417110:	ldr	x0, [x21, #2008]
  417114:	stp	x23, x24, [sp, #48]
  417118:	bl	406700 <strlen@plt>
  41711c:	add	x20, x0, #0x17
  417120:	ldr	x24, [x22, #1984]
  417124:	cbz	x24, 417134 <child_access@@Base+0x1b8>
  417128:	mov	x0, x24
  41712c:	bl	406700 <strlen@plt>
  417130:	add	x20, x20, x0
  417134:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  417138:	mov	w2, #0x5                   	// #5
  41713c:	ldr	w0, [x23, #2024]
  417140:	cbnz	w0, 41721c <child_access@@Base+0x2a0>
  417144:	cbnz	x24, 417200 <child_access@@Base+0x284>
  417148:	cbz	w19, 4171f4 <child_access@@Base+0x278>
  41714c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417150:	add	x1, x1, #0xd48
  417154:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  417158:	add	x24, x24, #0xd70
  41715c:	mov	x0, #0x0                   	// #0
  417160:	bl	406d60 <dcgettext@plt>
  417164:	mov	x19, x0
  417168:	bl	406700 <strlen@plt>
  41716c:	add	x20, x0, x20
  417170:	ldr	x0, [x24, #16]
  417174:	cmp	x0, x20
  417178:	b.cs	41718c <child_access@@Base+0x210>  // b.hs, b.nlast
  41717c:	ldr	x0, [x24, #24]
  417180:	mov	x1, x20
  417184:	bl	416aa0 <xrealloc@@Base>
  417188:	stp	x20, x0, [x24, #16]
  41718c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  417190:	ldr	x0, [x24, #24]
  417194:	ldr	w1, [x1, #1620]
  417198:	cbz	w1, 4171a4 <child_access@@Base+0x228>
  41719c:	mov	w1, #0x2023                	// #8227
  4171a0:	strh	w1, [x0], #2
  4171a4:	ldr	w3, [x23, #2024]
  4171a8:	ldr	x4, [x22, #1984]
  4171ac:	ldr	x2, [x21, #2008]
  4171b0:	cbnz	w3, 417268 <child_access@@Base+0x2ec>
  4171b4:	cbnz	x4, 417258 <child_access@@Base+0x2dc>
  4171b8:	mov	x1, x19
  4171bc:	bl	4067a0 <sprintf@plt>
  4171c0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4171c4:	ldr	x19, [x0, #400]
  4171c8:	ldr	x0, [x24, #24]
  4171cc:	mov	x1, x19
  4171d0:	bl	406710 <fputs@plt>
  4171d4:	mov	x0, x19
  4171d8:	bl	406cb0 <fflush@plt>
  4171dc:	mov	w0, #0x1                   	// #1
  4171e0:	ldp	x19, x20, [sp, #16]
  4171e4:	ldp	x21, x22, [sp, #32]
  4171e8:	ldp	x23, x24, [sp, #48]
  4171ec:	ldp	x29, x30, [sp], #64
  4171f0:	ret
  4171f4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  4171f8:	add	x1, x1, #0xd6b
  4171fc:	b	417154 <child_access@@Base+0x1d8>
  417200:	cbz	w19, 417210 <child_access@@Base+0x294>
  417204:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417208:	add	x1, x1, #0xd8d
  41720c:	b	417154 <child_access@@Base+0x1d8>
  417210:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417214:	add	x1, x1, #0xdaa
  417218:	b	417154 <child_access@@Base+0x1d8>
  41721c:	cbnz	x24, 41723c <child_access@@Base+0x2c0>
  417220:	cbz	w19, 417230 <child_access@@Base+0x2b4>
  417224:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417228:	add	x1, x1, #0xdc6
  41722c:	b	417154 <child_access@@Base+0x1d8>
  417230:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417234:	add	x1, x1, #0xded
  417238:	b	417154 <child_access@@Base+0x1d8>
  41723c:	cbz	w19, 41724c <child_access@@Base+0x2d0>
  417240:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417244:	add	x1, x1, #0xe13
  417248:	b	417154 <child_access@@Base+0x1d8>
  41724c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417250:	add	x1, x1, #0xe34
  417254:	b	417154 <child_access@@Base+0x1d8>
  417258:	mov	x3, x4
  41725c:	mov	x1, x19
  417260:	bl	4067a0 <sprintf@plt>
  417264:	b	4171c0 <child_access@@Base+0x244>
  417268:	mov	x1, x19
  41726c:	cbnz	x4, 417278 <child_access@@Base+0x2fc>
  417270:	bl	4067a0 <sprintf@plt>
  417274:	b	4171c0 <child_access@@Base+0x244>
  417278:	bl	4067a0 <sprintf@plt>
  41727c:	b	4171c0 <child_access@@Base+0x244>

0000000000417280 <output_dump@@Base>:
  417280:	stp	x29, x30, [sp, #-64]!
  417284:	mov	x29, sp
  417288:	stp	x19, x20, [sp, #16]
  41728c:	mov	x19, x0
  417290:	ldr	w0, [x0]
  417294:	stp	x21, x22, [sp, #32]
  417298:	cmn	w0, #0x1
  41729c:	stp	x23, x24, [sp, #48]
  4172a0:	b.eq	417370 <output_dump@@Base+0xf0>  // b.none
  4172a4:	mov	w2, #0x2                   	// #2
  4172a8:	mov	x1, #0x0                   	// #0
  4172ac:	bl	406870 <lseek@plt>
  4172b0:	cmp	x0, #0x0
  4172b4:	cset	w23, gt
  4172b8:	ldr	w0, [x19, #4]
  4172bc:	cmn	w0, #0x1
  4172c0:	b.eq	417378 <output_dump@@Base+0xf8>  // b.none
  4172c4:	mov	w2, #0x2                   	// #2
  4172c8:	mov	x1, #0x0                   	// #0
  4172cc:	bl	406870 <lseek@plt>
  4172d0:	cmp	x0, #0x0
  4172d4:	cset	w22, gt
  4172d8:	orr	w0, w23, w22
  4172dc:	cbz	w0, 4173f0 <output_dump@@Base+0x170>
  4172e0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4172e4:	add	x0, x0, #0xd70
  4172e8:	add	x20, x0, #0x20
  4172ec:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  4172f0:	mov	w1, #0x1                   	// #1
  4172f4:	mov	x2, x20
  4172f8:	str	w1, [x0, #32]
  4172fc:	mov	x0, #0x1                   	// #1
  417300:	stp	xzr, x0, [x20, #8]
  417304:	mov	w1, #0x7                   	// #7
  417308:	ldr	w0, [x24, #184]
  41730c:	bl	4224a8 <rpl_fcntl@@Base>
  417310:	cmn	w0, #0x1
  417314:	b.ne	417328 <output_dump@@Base+0xa8>  // b.any
  417318:	mov	x20, #0x0                   	// #0
  41731c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417320:	add	x0, x0, #0xe54
  417324:	bl	406740 <perror@plt>
  417328:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41732c:	ldr	w21, [x0, #3336]
  417330:	cbz	w21, 417350 <output_dump@@Base+0xd0>
  417334:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417338:	ldr	w0, [x0, #3304]
  41733c:	cmp	w0, #0x3
  417340:	b.eq	417380 <output_dump@@Base+0x100>  // b.none
  417344:	mov	w0, #0x1                   	// #1
  417348:	bl	4170f4 <child_access@@Base+0x178>
  41734c:	mov	w21, w0
  417350:	cbnz	w23, 417388 <output_dump@@Base+0x108>
  417354:	ldp	w1, w0, [x19]
  417358:	cmp	w0, w1
  41735c:	b.eq	41739c <output_dump@@Base+0x11c>  // b.none
  417360:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  417364:	ldr	x1, [x1, #376]
  417368:	bl	416fd8 <child_access@@Base+0x5c>
  41736c:	b	41739c <output_dump@@Base+0x11c>
  417370:	mov	w23, #0x0                   	// #0
  417374:	b	4172b8 <output_dump@@Base+0x38>
  417378:	mov	w22, #0x0                   	// #0
  41737c:	b	4172d8 <output_dump@@Base+0x58>
  417380:	mov	w21, #0x0                   	// #0
  417384:	b	417350 <output_dump@@Base+0xd0>
  417388:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41738c:	ldr	x1, [x0, #400]
  417390:	ldr	w0, [x19]
  417394:	bl	416fd8 <child_access@@Base+0x5c>
  417398:	cbnz	w22, 417354 <output_dump@@Base+0xd4>
  41739c:	cbz	w21, 4173a8 <output_dump@@Base+0x128>
  4173a0:	mov	w0, #0x0                   	// #0
  4173a4:	bl	4170f4 <child_access@@Base+0x178>
  4173a8:	cbz	x20, 4173d8 <output_dump@@Base+0x158>
  4173ac:	mov	w0, #0x2                   	// #2
  4173b0:	strh	w0, [x20]
  4173b4:	ldr	w0, [x24, #184]
  4173b8:	mov	x2, x20
  4173bc:	mov	w1, #0x7                   	// #7
  4173c0:	bl	4224a8 <rpl_fcntl@@Base>
  4173c4:	cmn	w0, #0x1
  4173c8:	b.ne	4173d8 <output_dump@@Base+0x158>  // b.any
  4173cc:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  4173d0:	add	x0, x0, #0xe54
  4173d4:	bl	406740 <perror@plt>
  4173d8:	ldr	w0, [x19]
  4173dc:	cmn	w0, #0x1
  4173e0:	b.ne	417404 <output_dump@@Base+0x184>  // b.any
  4173e4:	ldr	w0, [x19, #4]
  4173e8:	cmn	w0, #0x1
  4173ec:	b.ne	417438 <output_dump@@Base+0x1b8>  // b.any
  4173f0:	ldp	x19, x20, [sp, #16]
  4173f4:	ldp	x21, x22, [sp, #32]
  4173f8:	ldp	x23, x24, [sp, #48]
  4173fc:	ldp	x29, x30, [sp], #64
  417400:	ret
  417404:	mov	w2, #0x0                   	// #0
  417408:	mov	x1, #0x0                   	// #0
  41740c:	bl	406870 <lseek@plt>
  417410:	ldr	w0, [x19]
  417414:	mov	x1, #0x0                   	// #0
  417418:	bl	406da0 <ftruncate@plt>
  41741c:	cmn	w0, #0x1
  417420:	b.ne	4173e4 <output_dump@@Base+0x164>  // b.any
  417424:	bl	406e00 <__errno_location@plt>
  417428:	ldr	w0, [x0]
  41742c:	cmp	w0, #0x4
  417430:	b.eq	417410 <output_dump@@Base+0x190>  // b.none
  417434:	b	4173e4 <output_dump@@Base+0x164>
  417438:	ldr	w1, [x19]
  41743c:	cmp	w0, w1
  417440:	b.eq	4173f0 <output_dump@@Base+0x170>  // b.none
  417444:	mov	w2, #0x0                   	// #0
  417448:	mov	x1, #0x0                   	// #0
  41744c:	bl	406870 <lseek@plt>
  417450:	ldr	w0, [x19, #4]
  417454:	mov	x1, #0x0                   	// #0
  417458:	bl	406da0 <ftruncate@plt>
  41745c:	cmn	w0, #0x1
  417460:	b.ne	4173f0 <output_dump@@Base+0x170>  // b.any
  417464:	bl	406e00 <__errno_location@plt>
  417468:	ldr	w0, [x0]
  41746c:	cmp	w0, #0x4
  417470:	b.eq	417450 <output_dump@@Base+0x1d0>  // b.none
  417474:	b	4173f0 <output_dump@@Base+0x170>

0000000000417478 <output_init@@Base>:
  417478:	cbz	x0, 4174a4 <output_init@@Base+0x2c>
  41747c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  417480:	ldr	w1, [x1, #3304]
  417484:	cmp	w1, #0x0
  417488:	mov	x1, #0xffffffffffffffff    	// #-1
  41748c:	str	x1, [x0]
  417490:	cset	w2, ne  // ne = any
  417494:	ldrb	w1, [x0, #8]
  417498:	bfxil	w1, w2, #0, #1
  41749c:	strb	w1, [x0, #8]
  4174a0:	ret
  4174a4:	stp	x29, x30, [sp, #-32]!
  4174a8:	mov	x3, #0x2000                	// #8192
  4174ac:	mov	w2, #0x1                   	// #1
  4174b0:	mov	x29, sp
  4174b4:	str	x19, [sp, #16]
  4174b8:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  4174bc:	mov	x1, #0x0                   	// #0
  4174c0:	ldr	x0, [x19, #400]
  4174c4:	bl	406860 <setvbuf@plt>
  4174c8:	ldr	x0, [x19, #400]
  4174cc:	bl	4068c0 <fileno@plt>
  4174d0:	bl	416f80 <child_access@@Base+0x4>
  4174d4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4174d8:	ldr	x0, [x0, #376]
  4174dc:	bl	4068c0 <fileno@plt>
  4174e0:	bl	416f80 <child_access@@Base+0x4>
  4174e4:	ldr	x0, [x19, #400]
  4174e8:	bl	4068c0 <fileno@plt>
  4174ec:	mov	w1, #0x1                   	// #1
  4174f0:	bl	4224a8 <rpl_fcntl@@Base>
  4174f4:	cmn	w0, #0x1
  4174f8:	b.ne	41750c <output_init@@Base+0x94>  // b.any
  4174fc:	bl	406e00 <__errno_location@plt>
  417500:	ldr	w0, [x0]
  417504:	cmp	w0, #0x9
  417508:	b.eq	417520 <output_init@@Base+0xa8>  // b.none
  41750c:	ldr	x19, [sp, #16]
  417510:	adrp	x0, 417000 <child_access@@Base+0x84>
  417514:	ldp	x29, x30, [sp], #32
  417518:	add	x0, x0, #0xca4
  41751c:	b	422890 <__libc_csu_fini@@Base+0x8>
  417520:	ldr	x19, [sp, #16]
  417524:	ldp	x29, x30, [sp], #32
  417528:	ret

000000000041752c <output_close@@Base>:
  41752c:	cbnz	x0, 417544 <output_close@@Base+0x18>
  417530:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417534:	ldr	w0, [x0, #3504]
  417538:	cbz	w0, 41758c <output_close@@Base+0x60>
  41753c:	mov	w0, #0x0                   	// #0
  417540:	b	4170f4 <child_access@@Base+0x178>
  417544:	stp	x29, x30, [sp, #-32]!
  417548:	mov	x29, sp
  41754c:	str	x19, [sp, #16]
  417550:	mov	x19, x0
  417554:	bl	417280 <output_dump@@Base>
  417558:	ldr	w0, [x19]
  41755c:	tbnz	w0, #31, 417564 <output_close@@Base+0x38>
  417560:	bl	406ae0 <close@plt>
  417564:	ldr	w0, [x19, #4]
  417568:	tbnz	w0, #31, 41757c <output_close@@Base+0x50>
  41756c:	ldr	w1, [x19]
  417570:	cmp	w0, w1
  417574:	b.eq	41757c <output_close@@Base+0x50>  // b.none
  417578:	bl	406ae0 <close@plt>
  41757c:	mov	x0, x19
  417580:	ldr	x19, [sp, #16]
  417584:	ldp	x29, x30, [sp], #32
  417588:	b	417478 <output_init@@Base>
  41758c:	ret

0000000000417590 <pfatal_with_name@@Base>:
  417590:	stp	x29, x30, [sp, #-48]!
  417594:	mov	x29, sp
  417598:	stp	x19, x20, [sp, #16]
  41759c:	mov	x19, x0
  4175a0:	stp	x21, x22, [sp, #32]
  4175a4:	bl	406e00 <__errno_location@plt>
  4175a8:	ldr	w0, [x0]
  4175ac:	bl	406ad0 <strerror@plt>
  4175b0:	mov	x20, x0
  4175b4:	mov	x0, x19
  4175b8:	bl	406700 <strlen@plt>
  4175bc:	mov	x22, x0
  4175c0:	mov	x0, x20
  4175c4:	bl	406700 <strlen@plt>
  4175c8:	mov	x21, x0
  4175cc:	mov	w2, #0x5                   	// #5
  4175d0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4175d4:	mov	x0, #0x0                   	// #0
  4175d8:	add	x1, x1, #0x1a8
  4175dc:	bl	406d60 <dcgettext@plt>
  4175e0:	mov	x2, x0
  4175e4:	mov	x4, x20
  4175e8:	mov	x3, x19
  4175ec:	add	x1, x22, x21
  4175f0:	mov	x0, #0x0                   	// #0
  4175f4:	bl	417d24 <fatal@@Base>

00000000004175f8 <output_tmpfd@@Base>:
  4175f8:	stp	x29, x30, [sp, #-48]!
  4175fc:	mov	w0, #0x3f                  	// #63
  417600:	mov	x29, sp
  417604:	stp	x19, x20, [sp, #16]
  417608:	str	x21, [sp, #32]
  41760c:	bl	406de0 <umask@plt>
  417610:	mov	w21, w0
  417614:	bl	406750 <tmpfile@plt>
  417618:	cbnz	x0, 417628 <output_tmpfd@@Base+0x30>
  41761c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417620:	add	x0, x0, #0xe5c
  417624:	bl	417590 <pfatal_with_name@@Base>
  417628:	mov	x20, x0
  41762c:	bl	4068c0 <fileno@plt>
  417630:	bl	406730 <dup@plt>
  417634:	mov	w19, w0
  417638:	tbz	w0, #31, 417648 <output_tmpfd@@Base+0x50>
  41763c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417640:	add	x0, x0, #0xe64
  417644:	b	417624 <output_tmpfd@@Base+0x2c>
  417648:	mov	x0, x20
  41764c:	bl	406900 <fclose@plt>
  417650:	mov	w0, w19
  417654:	bl	416f80 <child_access@@Base+0x4>
  417658:	mov	w0, w21
  41765c:	bl	406de0 <umask@plt>
  417660:	mov	w0, w19
  417664:	ldp	x19, x20, [sp, #16]
  417668:	ldr	x21, [sp, #32]
  41766c:	ldp	x29, x30, [sp], #48
  417670:	ret

0000000000417674 <output_start@@Base>:
  417674:	stp	x29, x30, [sp, #-336]!
  417678:	mov	x29, sp
  41767c:	stp	x19, x20, [sp, #16]
  417680:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  417684:	add	x20, x20, #0xd70
  417688:	stp	x21, x22, [sp, #32]
  41768c:	ldr	x19, [x20, #72]
  417690:	stp	x23, x24, [sp, #48]
  417694:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  417698:	stp	x25, x26, [sp, #64]
  41769c:	cbz	x19, 4177dc <output_start@@Base+0x168>
  4176a0:	ldrb	w0, [x19, #8]
  4176a4:	tbz	w0, #0, 4177dc <output_start@@Base+0x168>
  4176a8:	ldr	w0, [x19]
  4176ac:	tbz	w0, #31, 4177dc <output_start@@Base+0x168>
  4176b0:	ldr	w0, [x19, #4]
  4176b4:	tbz	w0, #31, 4177dc <output_start@@Base+0x168>
  4176b8:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  4176bc:	add	x25, x21, #0xb8
  4176c0:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  4176c4:	ldr	w0, [x25, #4]
  4176c8:	tbz	w0, #31, 41775c <output_start@@Base+0xe8>
  4176cc:	ldr	x0, [x22, #400]
  4176d0:	bl	4068c0 <fileno@plt>
  4176d4:	mov	w1, #0x1                   	// #1
  4176d8:	bl	4224a8 <rpl_fcntl@@Base>
  4176dc:	cmn	w0, #0x1
  4176e0:	b.ne	4176f8 <output_start@@Base+0x84>  // b.any
  4176e4:	bl	406e00 <__errno_location@plt>
  4176e8:	mov	x26, x0
  4176ec:	ldr	w0, [x0]
  4176f0:	cmp	w0, #0x9
  4176f4:	b.eq	417804 <output_start@@Base+0x190>  // b.none
  4176f8:	ldr	x0, [x22, #400]
  4176fc:	bl	4068c0 <fileno@plt>
  417700:	str	w0, [x21, #184]
  417704:	ldr	x0, [x22, #400]
  417708:	bl	4068c0 <fileno@plt>
  41770c:	add	x1, sp, #0x50
  417710:	bl	4228b0 <__libc_csu_fini@@Base+0x28>
  417714:	cbz	w0, 417720 <output_start@@Base+0xac>
  417718:	mov	w0, #0x0                   	// #0
  41771c:	b	417758 <output_start@@Base+0xe4>
  417720:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417724:	ldr	x0, [x0, #376]
  417728:	bl	4068c0 <fileno@plt>
  41772c:	add	x1, sp, #0xd0
  417730:	bl	4228b0 <__libc_csu_fini@@Base+0x28>
  417734:	cbnz	w0, 417718 <output_start@@Base+0xa4>
  417738:	ldr	x1, [sp, #80]
  41773c:	ldr	x0, [sp, #208]
  417740:	cmp	x1, x0
  417744:	b.ne	417718 <output_start@@Base+0xa4>  // b.any
  417748:	ldr	x1, [sp, #88]
  41774c:	ldr	x0, [sp, #216]
  417750:	cmp	x1, x0
  417754:	cset	w0, eq  // eq = none
  417758:	str	w0, [x25, #4]
  41775c:	ldr	x0, [x22, #400]
  417760:	bl	4068c0 <fileno@plt>
  417764:	mov	w1, #0x1                   	// #1
  417768:	bl	4224a8 <rpl_fcntl@@Base>
  41776c:	cmn	w0, #0x1
  417770:	b.ne	417784 <output_start@@Base+0x110>  // b.any
  417774:	bl	406e00 <__errno_location@plt>
  417778:	ldr	w0, [x0]
  41777c:	cmp	w0, #0x9
  417780:	b.eq	417798 <output_start@@Base+0x124>  // b.none
  417784:	bl	4175f8 <output_tmpfd@@Base>
  417788:	mov	w21, w0
  41778c:	tbnz	w0, #31, 417870 <output_start@@Base+0x1fc>
  417790:	bl	422098 <fd_noinherit@@Base>
  417794:	str	w21, [x19]
  417798:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41779c:	ldr	x0, [x0, #376]
  4177a0:	bl	4068c0 <fileno@plt>
  4177a4:	mov	w1, #0x1                   	// #1
  4177a8:	bl	4224a8 <rpl_fcntl@@Base>
  4177ac:	cmn	w0, #0x1
  4177b0:	b.ne	4177c4 <output_start@@Base+0x150>  // b.any
  4177b4:	bl	406e00 <__errno_location@plt>
  4177b8:	ldr	w0, [x0]
  4177bc:	cmp	w0, #0x9
  4177c0:	b.eq	4177dc <output_start@@Base+0x168>  // b.none
  4177c4:	ldr	w0, [x19]
  4177c8:	cmn	w0, #0x1
  4177cc:	b.eq	417858 <output_start@@Base+0x1e4>  // b.none
  4177d0:	ldr	w1, [x25, #4]
  4177d4:	cbz	w1, 417858 <output_start@@Base+0x1e4>
  4177d8:	str	w0, [x19, #4]
  4177dc:	ldr	w0, [x23, #3304]
  4177e0:	cmp	w0, #0x0
  4177e4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  4177e8:	b.eq	41787c <output_start@@Base+0x208>  // b.none
  4177ec:	ldp	x19, x20, [sp, #16]
  4177f0:	ldp	x21, x22, [sp, #32]
  4177f4:	ldp	x23, x24, [sp, #48]
  4177f8:	ldp	x25, x26, [sp, #64]
  4177fc:	ldp	x29, x30, [sp], #336
  417800:	ret
  417804:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  417808:	ldr	x0, [x24, #376]
  41780c:	bl	4068c0 <fileno@plt>
  417810:	mov	w1, #0x1                   	// #1
  417814:	bl	4224a8 <rpl_fcntl@@Base>
  417818:	cmn	w0, #0x1
  41781c:	b.ne	41782c <output_start@@Base+0x1b8>  // b.any
  417820:	ldr	w0, [x26]
  417824:	cmp	w0, #0x9
  417828:	b.eq	41783c <output_start@@Base+0x1c8>  // b.none
  41782c:	ldr	x0, [x24, #376]
  417830:	bl	4068c0 <fileno@plt>
  417834:	str	w0, [x21, #184]
  417838:	b	417718 <output_start@@Base+0xa4>
  41783c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417840:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417844:	add	x1, x1, #0xe68
  417848:	add	x0, x0, #0xe6f
  41784c:	bl	417c10 <perror_with_name@@Base>
  417850:	str	wzr, [x23, #3304]
  417854:	b	417718 <output_start@@Base+0xa4>
  417858:	bl	4175f8 <output_tmpfd@@Base>
  41785c:	mov	w21, w0
  417860:	tbnz	w0, #31, 417870 <output_start@@Base+0x1fc>
  417864:	bl	422098 <fd_noinherit@@Base>
  417868:	str	w21, [x19, #4]
  41786c:	b	4177dc <output_start@@Base+0x168>
  417870:	mov	x0, x19
  417874:	bl	41752c <output_close@@Base>
  417878:	str	wzr, [x23, #3304]
  41787c:	ldr	w0, [x20, #64]
  417880:	cbnz	w0, 4177ec <output_start@@Base+0x178>
  417884:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417888:	ldr	w0, [x0, #3336]
  41788c:	cbz	w0, 4177ec <output_start@@Base+0x178>
  417890:	mov	w0, #0x1                   	// #1
  417894:	bl	4170f4 <child_access@@Base+0x178>
  417898:	str	w0, [x20, #64]
  41789c:	b	4177ec <output_start@@Base+0x178>

00000000004178a0 <outputs@@Base>:
  4178a0:	cbz	x1, 417980 <outputs@@Base+0xe0>
  4178a4:	stp	x29, x30, [sp, #-48]!
  4178a8:	mov	x29, sp
  4178ac:	stp	x19, x20, [sp, #16]
  4178b0:	mov	x19, x1
  4178b4:	str	x21, [sp, #32]
  4178b8:	mov	w21, w0
  4178bc:	ldrb	w0, [x1]
  4178c0:	cbz	w0, 417970 <outputs@@Base+0xd0>
  4178c4:	bl	417674 <output_start@@Base>
  4178c8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4178cc:	ldr	x0, [x0, #3512]
  4178d0:	cbz	x0, 4178dc <outputs@@Base+0x3c>
  4178d4:	ldrb	w1, [x0, #8]
  4178d8:	tbnz	w1, #0, 417914 <outputs@@Base+0x74>
  4178dc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4178e0:	cmp	w21, #0x0
  4178e4:	ldr	x20, [x0, #376]
  4178e8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4178ec:	ldr	x1, [x0, #400]
  4178f0:	mov	x0, x19
  4178f4:	csel	x20, x20, x1, ne  // ne = any
  4178f8:	mov	x1, x20
  4178fc:	bl	406710 <fputs@plt>
  417900:	mov	x0, x20
  417904:	ldp	x19, x20, [sp, #16]
  417908:	ldr	x21, [sp, #32]
  41790c:	ldp	x29, x30, [sp], #48
  417910:	b	406cb0 <fflush@plt>
  417914:	ldp	w1, w20, [x0]
  417918:	cmp	w21, #0x0
  41791c:	mov	x0, x19
  417920:	csel	w20, w20, w1, ne  // ne = any
  417924:	bl	406700 <strlen@plt>
  417928:	mov	x21, x0
  41792c:	mov	w0, w20
  417930:	mov	w2, #0x2                   	// #2
  417934:	mov	x1, #0x0                   	// #0
  417938:	bl	406870 <lseek@plt>
  41793c:	cmn	w0, #0x1
  417940:	b.ne	417954 <outputs@@Base+0xb4>  // b.any
  417944:	bl	406e00 <__errno_location@plt>
  417948:	ldr	w0, [x0]
  41794c:	cmp	w0, #0x4
  417950:	b.eq	41792c <outputs@@Base+0x8c>  // b.none
  417954:	mov	x2, x21
  417958:	mov	x1, x19
  41795c:	mov	w0, w20
  417960:	ldp	x19, x20, [sp, #16]
  417964:	ldr	x21, [sp, #32]
  417968:	ldp	x29, x30, [sp], #48
  41796c:	b	416d18 <writebuf@@Base>
  417970:	ldp	x19, x20, [sp, #16]
  417974:	ldr	x21, [sp, #32]
  417978:	ldp	x29, x30, [sp], #48
  41797c:	ret
  417980:	ret

0000000000417984 <message@@Base>:
  417984:	stp	x29, x30, [sp, #-304]!
  417988:	mov	x29, sp
  41798c:	str	x23, [sp, #48]
  417990:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  417994:	stp	x19, x20, [sp, #16]
  417998:	mov	x20, x2
  41799c:	stp	x21, x22, [sp, #32]
  4179a0:	add	x22, x1, #0x1a
  4179a4:	mov	w21, w0
  4179a8:	mov	x0, x2
  4179ac:	str	q0, [sp, #128]
  4179b0:	str	q1, [sp, #144]
  4179b4:	str	q2, [sp, #160]
  4179b8:	str	q3, [sp, #176]
  4179bc:	str	q4, [sp, #192]
  4179c0:	str	q5, [sp, #208]
  4179c4:	str	q6, [sp, #224]
  4179c8:	str	q7, [sp, #240]
  4179cc:	stp	x3, x4, [sp, #264]
  4179d0:	stp	x5, x6, [sp, #280]
  4179d4:	str	x7, [sp, #296]
  4179d8:	bl	406700 <strlen@plt>
  4179dc:	mov	x19, x0
  4179e0:	ldr	x0, [x23, #2008]
  4179e4:	bl	406700 <strlen@plt>
  4179e8:	add	x0, x19, x0
  4179ec:	add	x0, x0, x22
  4179f0:	bl	4170a4 <child_access@@Base+0x128>
  4179f4:	mov	x19, x0
  4179f8:	cbz	w21, 417a24 <message@@Base+0xa0>
  4179fc:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  417a00:	ldr	x2, [x23, #2008]
  417a04:	ldr	w3, [x1, #2024]
  417a08:	cbnz	w3, 417a98 <message@@Base+0x114>
  417a0c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417a10:	add	x1, x1, #0xe88
  417a14:	bl	4067a0 <sprintf@plt>
  417a18:	mov	x0, x19
  417a1c:	bl	406700 <strlen@plt>
  417a20:	add	x19, x19, x0
  417a24:	add	x0, sp, #0x130
  417a28:	stp	x0, x0, [sp, #96]
  417a2c:	add	x0, sp, #0x100
  417a30:	str	x0, [sp, #112]
  417a34:	mov	w0, #0xffffffd8            	// #-40
  417a38:	str	w0, [sp, #120]
  417a3c:	mov	w0, #0xffffff80            	// #-128
  417a40:	str	w0, [sp, #124]
  417a44:	add	x2, sp, #0x40
  417a48:	ldp	x0, x1, [sp, #96]
  417a4c:	stp	x0, x1, [sp, #64]
  417a50:	ldp	x0, x1, [sp, #112]
  417a54:	stp	x0, x1, [sp, #80]
  417a58:	mov	x1, x20
  417a5c:	mov	x0, x19
  417a60:	bl	406ce0 <vsprintf@plt>
  417a64:	mov	x0, x19
  417a68:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  417a6c:	add	x1, x1, #0x818
  417a70:	bl	4069e0 <strcat@plt>
  417a74:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417a78:	ldr	x1, [x0, #3440]
  417a7c:	mov	w0, #0x0                   	// #0
  417a80:	bl	4178a0 <outputs@@Base>
  417a84:	ldp	x19, x20, [sp, #16]
  417a88:	ldp	x21, x22, [sp, #32]
  417a8c:	ldr	x23, [sp, #48]
  417a90:	ldp	x29, x30, [sp], #304
  417a94:	ret
  417a98:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417a9c:	add	x1, x1, #0xe8d
  417aa0:	bl	4067a0 <sprintf@plt>
  417aa4:	b	417a18 <message@@Base+0x94>

0000000000417aa8 <error@@Base>:
  417aa8:	stp	x29, x30, [sp, #-304]!
  417aac:	mov	x29, sp
  417ab0:	str	x23, [sp, #48]
  417ab4:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  417ab8:	stp	x19, x20, [sp, #16]
  417abc:	mov	x20, x0
  417ac0:	mov	x0, x2
  417ac4:	stp	x21, x22, [sp, #32]
  417ac8:	add	x22, x1, #0x1a
  417acc:	mov	x21, x2
  417ad0:	str	q0, [sp, #128]
  417ad4:	str	q1, [sp, #144]
  417ad8:	str	q2, [sp, #160]
  417adc:	str	q3, [sp, #176]
  417ae0:	str	q4, [sp, #192]
  417ae4:	str	q5, [sp, #208]
  417ae8:	str	q6, [sp, #224]
  417aec:	str	q7, [sp, #240]
  417af0:	stp	x3, x4, [sp, #264]
  417af4:	stp	x5, x6, [sp, #280]
  417af8:	str	x7, [sp, #296]
  417afc:	bl	406700 <strlen@plt>
  417b00:	mov	x19, x0
  417b04:	ldr	x0, [x23, #2008]
  417b08:	bl	406700 <strlen@plt>
  417b0c:	add	x19, x19, x0
  417b10:	add	x19, x19, x22
  417b14:	cbz	x20, 417bd0 <error@@Base+0x128>
  417b18:	ldr	x0, [x20]
  417b1c:	cbz	x0, 417bd0 <error@@Base+0x128>
  417b20:	bl	406700 <strlen@plt>
  417b24:	add	x0, x19, x0
  417b28:	bl	4170a4 <child_access@@Base+0x128>
  417b2c:	mov	x19, x0
  417b30:	cbz	x20, 417bd8 <error@@Base+0x130>
  417b34:	ldr	x2, [x20]
  417b38:	cbz	x2, 417bd8 <error@@Base+0x130>
  417b3c:	ldp	x3, x1, [x20, #8]
  417b40:	add	x3, x3, x1
  417b44:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417b48:	add	x1, x1, #0xe96
  417b4c:	bl	4067a0 <sprintf@plt>
  417b50:	mov	x0, x19
  417b54:	bl	406700 <strlen@plt>
  417b58:	add	x19, x19, x0
  417b5c:	add	x0, sp, #0x130
  417b60:	stp	x0, x0, [sp, #96]
  417b64:	add	x0, sp, #0x100
  417b68:	add	x2, sp, #0x40
  417b6c:	str	x0, [sp, #112]
  417b70:	mov	w0, #0xffffffd8            	// #-40
  417b74:	str	w0, [sp, #120]
  417b78:	mov	w0, #0xffffff80            	// #-128
  417b7c:	str	w0, [sp, #124]
  417b80:	ldp	x0, x1, [sp, #96]
  417b84:	stp	x0, x1, [sp, #64]
  417b88:	ldp	x0, x1, [sp, #112]
  417b8c:	stp	x0, x1, [sp, #80]
  417b90:	mov	x1, x21
  417b94:	mov	x0, x19
  417b98:	bl	406ce0 <vsprintf@plt>
  417b9c:	mov	x0, x19
  417ba0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  417ba4:	add	x1, x1, #0x818
  417ba8:	bl	4069e0 <strcat@plt>
  417bac:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417bb0:	ldr	x1, [x0, #3440]
  417bb4:	mov	w0, #0x1                   	// #1
  417bb8:	bl	4178a0 <outputs@@Base>
  417bbc:	ldp	x19, x20, [sp, #16]
  417bc0:	ldp	x21, x22, [sp, #32]
  417bc4:	ldr	x23, [sp, #48]
  417bc8:	ldp	x29, x30, [sp], #304
  417bcc:	ret
  417bd0:	mov	x0, #0x0                   	// #0
  417bd4:	b	417b24 <error@@Base+0x7c>
  417bd8:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  417bdc:	ldr	x2, [x23, #2008]
  417be0:	ldr	w3, [x0, #2024]
  417be4:	cbnz	w3, 417bfc <error@@Base+0x154>
  417be8:	mov	x0, x19
  417bec:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417bf0:	add	x1, x1, #0xe88
  417bf4:	bl	4067a0 <sprintf@plt>
  417bf8:	b	417b50 <error@@Base+0xa8>
  417bfc:	mov	x0, x19
  417c00:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417c04:	add	x1, x1, #0xe8d
  417c08:	bl	4067a0 <sprintf@plt>
  417c0c:	b	417b50 <error@@Base+0xa8>

0000000000417c10 <perror_with_name@@Base>:
  417c10:	stp	x29, x30, [sp, #-64]!
  417c14:	mov	x29, sp
  417c18:	stp	x19, x20, [sp, #16]
  417c1c:	mov	x20, x0
  417c20:	stp	x21, x22, [sp, #32]
  417c24:	mov	x21, x1
  417c28:	stp	x23, x24, [sp, #48]
  417c2c:	bl	406e00 <__errno_location@plt>
  417c30:	ldr	w0, [x0]
  417c34:	bl	406ad0 <strerror@plt>
  417c38:	mov	x22, x0
  417c3c:	mov	x0, x20
  417c40:	bl	406700 <strlen@plt>
  417c44:	mov	x19, x0
  417c48:	mov	x0, x21
  417c4c:	bl	406700 <strlen@plt>
  417c50:	mov	x24, x0
  417c54:	mov	x0, x22
  417c58:	bl	406700 <strlen@plt>
  417c5c:	add	x19, x19, x24
  417c60:	mov	x23, x0
  417c64:	mov	w2, #0x5                   	// #5
  417c68:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417c6c:	mov	x0, #0x0                   	// #0
  417c70:	add	x1, x1, #0xe9f
  417c74:	bl	406d60 <dcgettext@plt>
  417c78:	mov	x2, x0
  417c7c:	add	x1, x19, x23
  417c80:	mov	x5, x22
  417c84:	mov	x4, x21
  417c88:	mov	x3, x20
  417c8c:	ldp	x19, x20, [sp, #16]
  417c90:	mov	x0, #0x0                   	// #0
  417c94:	ldp	x21, x22, [sp, #32]
  417c98:	ldp	x23, x24, [sp, #48]
  417c9c:	ldp	x29, x30, [sp], #64
  417ca0:	b	417aa8 <error@@Base>
  417ca4:	stp	x29, x30, [sp, #-32]!
  417ca8:	mov	x29, sp
  417cac:	stp	x19, x20, [sp, #16]
  417cb0:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  417cb4:	ldr	x0, [x20, #400]
  417cb8:	bl	406ea0 <ferror@plt>
  417cbc:	mov	w19, w0
  417cc0:	ldr	x0, [x20, #400]
  417cc4:	bl	406900 <fclose@plt>
  417cc8:	orr	w19, w19, w0
  417ccc:	cbz	w19, 417d18 <perror_with_name@@Base+0x108>
  417cd0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417cd4:	mov	w2, #0x5                   	// #5
  417cd8:	add	x1, x1, #0xea8
  417cdc:	cbz	w0, 417cfc <perror_with_name@@Base+0xec>
  417ce0:	mov	x0, #0x0                   	// #0
  417ce4:	bl	406d60 <dcgettext@plt>
  417ce8:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  417cec:	add	x1, x1, #0x819
  417cf0:	bl	417c10 <perror_with_name@@Base>
  417cf4:	mov	w0, #0x1                   	// #1
  417cf8:	bl	406720 <exit@plt>
  417cfc:	mov	x0, #0x0                   	// #0
  417d00:	bl	406d60 <dcgettext@plt>
  417d04:	mov	x1, #0x0                   	// #0
  417d08:	mov	x2, x0
  417d0c:	mov	x0, #0x0                   	// #0
  417d10:	bl	417aa8 <error@@Base>
  417d14:	b	417cf4 <perror_with_name@@Base+0xe4>
  417d18:	ldp	x19, x20, [sp, #16]
  417d1c:	ldp	x29, x30, [sp], #32
  417d20:	ret

0000000000417d24 <fatal@@Base>:
  417d24:	stp	x29, x30, [sp, #-304]!
  417d28:	mov	x29, sp
  417d2c:	stp	x21, x22, [sp, #32]
  417d30:	mov	x21, x1
  417d34:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417d38:	add	x1, x1, #0xebc
  417d3c:	stp	x23, x24, [sp, #48]
  417d40:	mov	x23, x2
  417d44:	mov	w2, #0x5                   	// #5
  417d48:	adrp	x24, 441000 <commands_started@@Base+0x1c0>
  417d4c:	stp	x19, x20, [sp, #16]
  417d50:	mov	x20, x0
  417d54:	mov	x0, #0x0                   	// #0
  417d58:	str	q0, [sp, #128]
  417d5c:	add	x21, x21, #0x1d
  417d60:	str	q1, [sp, #144]
  417d64:	str	q2, [sp, #160]
  417d68:	str	q3, [sp, #176]
  417d6c:	str	q4, [sp, #192]
  417d70:	str	q5, [sp, #208]
  417d74:	str	q6, [sp, #224]
  417d78:	str	q7, [sp, #240]
  417d7c:	stp	x3, x4, [sp, #264]
  417d80:	stp	x5, x6, [sp, #280]
  417d84:	str	x7, [sp, #296]
  417d88:	bl	406d60 <dcgettext@plt>
  417d8c:	mov	x22, x0
  417d90:	mov	x0, x23
  417d94:	bl	406700 <strlen@plt>
  417d98:	mov	x19, x0
  417d9c:	ldr	x0, [x24, #2008]
  417da0:	bl	406700 <strlen@plt>
  417da4:	add	x19, x19, x0
  417da8:	add	x19, x19, x21
  417dac:	cbz	x20, 417e68 <fatal@@Base+0x144>
  417db0:	ldr	x0, [x20]
  417db4:	cbz	x0, 417e68 <fatal@@Base+0x144>
  417db8:	bl	406700 <strlen@plt>
  417dbc:	mov	x21, x0
  417dc0:	mov	x0, x22
  417dc4:	bl	406700 <strlen@plt>
  417dc8:	add	x0, x0, x21
  417dcc:	add	x0, x0, x19
  417dd0:	bl	4170a4 <child_access@@Base+0x128>
  417dd4:	mov	x19, x0
  417dd8:	cbz	x20, 417e70 <fatal@@Base+0x14c>
  417ddc:	ldr	x2, [x20]
  417de0:	cbz	x2, 417e70 <fatal@@Base+0x14c>
  417de4:	ldp	x3, x1, [x20, #8]
  417de8:	add	x3, x3, x1
  417dec:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417df0:	add	x1, x1, #0xec6
  417df4:	bl	4067a0 <sprintf@plt>
  417df8:	mov	x0, x19
  417dfc:	bl	406700 <strlen@plt>
  417e00:	add	x19, x19, x0
  417e04:	add	x0, sp, #0x130
  417e08:	stp	x0, x0, [sp, #96]
  417e0c:	add	x0, sp, #0x100
  417e10:	add	x2, sp, #0x40
  417e14:	str	x0, [sp, #112]
  417e18:	mov	w0, #0xffffffd8            	// #-40
  417e1c:	str	w0, [sp, #120]
  417e20:	mov	w0, #0xffffff80            	// #-128
  417e24:	str	w0, [sp, #124]
  417e28:	ldp	x0, x1, [sp, #96]
  417e2c:	stp	x0, x1, [sp, #64]
  417e30:	ldp	x0, x1, [sp, #112]
  417e34:	stp	x0, x1, [sp, #80]
  417e38:	mov	x1, x23
  417e3c:	mov	x0, x19
  417e40:	bl	406ce0 <vsprintf@plt>
  417e44:	mov	x1, x22
  417e48:	mov	x0, x19
  417e4c:	bl	4069e0 <strcat@plt>
  417e50:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417e54:	ldr	x1, [x0, #3440]
  417e58:	mov	w0, #0x1                   	// #1
  417e5c:	bl	4178a0 <outputs@@Base>
  417e60:	mov	w0, #0x2                   	// #2
  417e64:	bl	415d98 <die@@Base>
  417e68:	mov	x21, #0x0                   	// #0
  417e6c:	b	417dc0 <fatal@@Base+0x9c>
  417e70:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  417e74:	ldr	x2, [x24, #2008]
  417e78:	ldr	w3, [x0, #2024]
  417e7c:	cbnz	w3, 417e94 <fatal@@Base+0x170>
  417e80:	mov	x0, x19
  417e84:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417e88:	add	x1, x1, #0xed3
  417e8c:	bl	4067a0 <sprintf@plt>
  417e90:	b	417df8 <fatal@@Base+0xd4>
  417e94:	mov	x0, x19
  417e98:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417e9c:	add	x1, x1, #0xedc
  417ea0:	bl	4067a0 <sprintf@plt>
  417ea4:	b	417df8 <fatal@@Base+0xd4>

0000000000417ea8 <out_of_memory@@Base>:
  417ea8:	stp	x29, x30, [sp, #-48]!
  417eac:	mov	x29, sp
  417eb0:	stp	x19, x20, [sp, #16]
  417eb4:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  417eb8:	ldr	x0, [x20, #400]
  417ebc:	str	x21, [sp, #32]
  417ec0:	bl	4068c0 <fileno@plt>
  417ec4:	mov	w19, w0
  417ec8:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  417ecc:	ldr	x21, [x0, #2008]
  417ed0:	mov	x0, x21
  417ed4:	bl	406700 <strlen@plt>
  417ed8:	mov	x1, x21
  417edc:	mov	x2, x0
  417ee0:	mov	w0, w19
  417ee4:	bl	416d18 <writebuf@@Base>
  417ee8:	ldr	x0, [x20, #400]
  417eec:	bl	4068c0 <fileno@plt>
  417ef0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  417ef4:	add	x1, x1, #0xee9
  417ef8:	mov	x2, #0x1f                  	// #31
  417efc:	bl	416d18 <writebuf@@Base>
  417f00:	mov	w0, #0x2                   	// #2
  417f04:	bl	406720 <exit@plt>
  417f08:	mov	x3, x0
  417f0c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  417f10:	add	x0, x0, #0x454
  417f14:	ldrb	w4, [x3]
  417f18:	mov	x5, x3
  417f1c:	add	x3, x3, #0x1
  417f20:	ldrh	w6, [x0, w4, sxtw #1]
  417f24:	tbnz	w6, #1, 417f14 <out_of_memory@@Base+0x6c>
  417f28:	cmp	w4, #0x3f
  417f2c:	b.hi	417f50 <out_of_memory@@Base+0xa8>  // b.pmore
  417f30:	cmp	w4, #0x39
  417f34:	b.hi	417f8c <out_of_memory@@Base+0xe4>  // b.pmore
  417f38:	cmp	w4, #0x26
  417f3c:	b.eq	418004 <out_of_memory@@Base+0x15c>  // b.none
  417f40:	b.hi	417fb0 <out_of_memory@@Base+0x108>  // b.pmore
  417f44:	cbz	w4, 418130 <out_of_memory@@Base+0x288>
  417f48:	cmp	w4, #0x21
  417f4c:	b.eq	418034 <out_of_memory@@Base+0x18c>  // b.none
  417f50:	mov	x11, #0xb                   	// #11
  417f54:	adrp	x7, 426000 <_IO_stdin_used@@Base+0x3720>
  417f58:	add	x7, x7, #0xf14
  417f5c:	mov	w0, #0x2                   	// #2
  417f60:	mov	x10, #0x1                   	// #1
  417f64:	movk	x11, #0x4, lsl #32
  417f68:	cmp	w4, #0x2b
  417f6c:	b.hi	418060 <out_of_memory@@Base+0x1b8>  // b.pmore
  417f70:	cmp	w4, #0x1f
  417f74:	b.hi	418044 <out_of_memory@@Base+0x19c>  // b.pmore
  417f78:	cbz	w4, 417f84 <out_of_memory@@Base+0xdc>
  417f7c:	cmp	w4, #0x9
  417f80:	b.ne	418084 <out_of_memory@@Base+0x1dc>  // b.any
  417f84:	sub	x3, x3, #0x1
  417f88:	b	417fcc <out_of_memory@@Base+0x124>
  417f8c:	sub	w6, w4, #0x3a
  417f90:	cmp	w6, #0x5
  417f94:	b.hi	417f50 <out_of_memory@@Base+0xa8>  // b.pmore
  417f98:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  417f9c:	add	x0, x0, #0xf0c
  417fa0:	ldrb	w0, [x0, w6, uxtw]
  417fa4:	adr	x6, 417fb0 <out_of_memory@@Base+0x108>
  417fa8:	add	x0, x6, w0, sxtb #2
  417fac:	br	x0
  417fb0:	cmp	w4, #0x2b
  417fb4:	b	417f4c <out_of_memory@@Base+0xa4>
  417fb8:	ldrb	w0, [x5, #1]
  417fbc:	cmp	w0, #0x3d
  417fc0:	b.ne	417fdc <out_of_memory@@Base+0x134>  // b.any
  417fc4:	add	x3, x5, #0x2
  417fc8:	mov	w0, #0x7                   	// #7
  417fcc:	str	x5, [x1]
  417fd0:	sub	x3, x3, x5
  417fd4:	str	x3, [x2]
  417fd8:	ret
  417fdc:	cmp	w0, #0x3a
  417fe0:	b.ne	418140 <out_of_memory@@Base+0x298>  // b.any
  417fe4:	ldrb	w0, [x5, #3]
  417fe8:	cmp	w0, #0x3d
  417fec:	b.eq	417ffc <out_of_memory@@Base+0x154>  // b.none
  417ff0:	add	x3, x5, #0x2
  417ff4:	mov	w0, #0x5                   	// #5
  417ff8:	b	417fcc <out_of_memory@@Base+0x124>
  417ffc:	add	x3, x5, #0x3
  418000:	b	417fc8 <out_of_memory@@Base+0x120>
  418004:	ldrb	w0, [x5, #1]
  418008:	cmp	w0, #0x3a
  41800c:	b.ne	417f50 <out_of_memory@@Base+0xa8>  // b.any
  418010:	ldrb	w0, [x5, #2]
  418014:	cmp	w0, #0x3a
  418018:	b.eq	418028 <out_of_memory@@Base+0x180>  // b.none
  41801c:	add	x3, x5, #0x2
  418020:	mov	w0, #0x8                   	// #8
  418024:	b	417fcc <out_of_memory@@Base+0x124>
  418028:	add	x3, x5, #0x3
  41802c:	mov	w0, #0x9                   	// #9
  418030:	b	417fcc <out_of_memory@@Base+0x124>
  418034:	ldrb	w0, [x5, #1]
  418038:	cmp	w0, #0x3d
  41803c:	b.ne	417f50 <out_of_memory@@Base+0xa8>  // b.any
  418040:	b	417fc4 <out_of_memory@@Base+0x11c>
  418044:	sub	w4, w4, #0x20
  418048:	cmp	w4, #0xb
  41804c:	b.hi	418084 <out_of_memory@@Base+0x1dc>  // b.pmore
  418050:	ldrb	w4, [x7, w4, uxtw]
  418054:	adr	x6, 418060 <out_of_memory@@Base+0x1b8>
  418058:	add	x4, x6, w4, sxtb #2
  41805c:	br	x4
  418060:	cmp	w4, #0x3f
  418064:	b.eq	4180f4 <out_of_memory@@Base+0x24c>  // b.none
  418068:	b.hi	41807c <out_of_memory@@Base+0x1d4>  // b.pmore
  41806c:	cmp	w4, #0x3a
  418070:	b.eq	417f84 <out_of_memory@@Base+0xdc>  // b.none
  418074:	cmp	w4, #0x3d
  418078:	b	417f80 <out_of_memory@@Base+0xd8>
  41807c:	cmp	w4, #0x5c
  418080:	b.eq	4180fc <out_of_memory@@Base+0x254>  // b.none
  418084:	ldrb	w4, [x3], #1
  418088:	b	417f68 <out_of_memory@@Base+0xc0>
  41808c:	ldrb	w6, [x3], #1
  418090:	cmp	w6, #0x24
  418094:	b.eq	418084 <out_of_memory@@Base+0x1dc>  // b.none
  418098:	cbz	w6, 417f84 <out_of_memory@@Base+0xdc>
  41809c:	cmp	w6, #0x28
  4180a0:	b.eq	4180d0 <out_of_memory@@Base+0x228>  // b.none
  4180a4:	cmp	w6, #0x7b
  4180a8:	b.ne	4180ec <out_of_memory@@Base+0x244>  // b.any
  4180ac:	mov	w9, #0x7d                  	// #125
  4180b0:	mov	w4, #0x0                   	// #0
  4180b4:	ldrb	w8, [x3]
  4180b8:	cbz	w8, 4180ec <out_of_memory@@Base+0x244>
  4180bc:	cmp	w8, w6
  4180c0:	add	x3, x3, #0x1
  4180c4:	b.ne	4180d8 <out_of_memory@@Base+0x230>  // b.any
  4180c8:	add	w4, w4, #0x1
  4180cc:	b	4180b4 <out_of_memory@@Base+0x20c>
  4180d0:	mov	w9, #0x29                  	// #41
  4180d4:	b	4180b0 <out_of_memory@@Base+0x208>
  4180d8:	cmp	w8, w9
  4180dc:	b.ne	4180b4 <out_of_memory@@Base+0x20c>  // b.any
  4180e0:	sub	w4, w4, #0x1
  4180e4:	cmn	w4, #0x1
  4180e8:	b.ne	4180b4 <out_of_memory@@Base+0x20c>  // b.any
  4180ec:	mov	w0, #0x3                   	// #3
  4180f0:	b	418084 <out_of_memory@@Base+0x1dc>
  4180f4:	ldrb	w4, [x3]
  4180f8:	b	418074 <out_of_memory@@Base+0x1cc>
  4180fc:	ldrb	w4, [x3]
  418100:	sub	w4, w4, #0x3a
  418104:	and	w4, w4, #0xff
  418108:	cmp	w4, #0x22
  41810c:	b.hi	418084 <out_of_memory@@Base+0x1dc>  // b.pmore
  418110:	lsl	x4, x10, x4
  418114:	tst	x4, x11
  418118:	cset	x4, ne  // ne = any
  41811c:	add	x3, x3, x4
  418120:	b	418084 <out_of_memory@@Base+0x1dc>
  418124:	ldrb	w4, [x3]
  418128:	cmp	w4, #0x3a
  41812c:	b	417f80 <out_of_memory@@Base+0xd8>
  418130:	mov	w0, #0x1                   	// #1
  418134:	b	417fcc <out_of_memory@@Base+0x124>
  418138:	mov	w0, #0x6                   	// #6
  41813c:	b	417fcc <out_of_memory@@Base+0x124>
  418140:	mov	w0, #0x4                   	// #4
  418144:	b	417fcc <out_of_memory@@Base+0x124>
  418148:	stp	x29, x30, [sp, #-48]!
  41814c:	mov	x29, sp
  418150:	stp	x19, x20, [sp, #16]
  418154:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  418158:	mov	x19, x0
  41815c:	str	x21, [sp, #32]
  418160:	ldr	x21, [x20, #192]
  418164:	ldr	x0, [x21, #8]
  418168:	bl	406c20 <free@plt>
  41816c:	ldr	x0, [x21, #16]
  418170:	bl	406c20 <free@plt>
  418174:	str	x19, [x20, #192]
  418178:	ldp	x19, x20, [sp, #16]
  41817c:	ldr	x21, [sp, #32]
  418180:	ldp	x29, x30, [sp], #48
  418184:	ret
  418188:	stp	x29, x30, [sp, #-96]!
  41818c:	cmp	x1, #0x5
  418190:	mov	x29, sp
  418194:	stp	x19, x20, [sp, #16]
  418198:	mov	x20, x1
  41819c:	stp	x21, x22, [sp, #32]
  4181a0:	mov	x22, x0
  4181a4:	stp	x23, x24, [sp, #48]
  4181a8:	mov	x23, x2
  4181ac:	stp	x25, x26, [sp, #64]
  4181b0:	stp	x27, x28, [sp, #80]
  4181b4:	b.ne	4181fc <out_of_memory@@Base+0x354>  // b.any
  4181b8:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  4181bc:	add	x19, x19, #0xf37
  4181c0:	mov	x2, x1
  4181c4:	mov	x1, x0
  4181c8:	mov	x0, x19
  4181cc:	bl	4069b0 <strncmp@plt>
  4181d0:	cbz	w0, 418270 <out_of_memory@@Base+0x3c8>
  4181d4:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  4181d8:	add	x19, x19, #0xf2c
  4181dc:	mov	x2, x20
  4181e0:	mov	x1, x22
  4181e4:	mov	x0, x19
  4181e8:	bl	4069b0 <strncmp@plt>
  4181ec:	cbz	w0, 418328 <out_of_memory@@Base+0x480>
  4181f0:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  4181f4:	add	x19, x19, #0xf3d
  4181f8:	b	418254 <out_of_memory@@Base+0x3ac>
  4181fc:	cmp	x1, #0x6
  418200:	b.ne	418228 <out_of_memory@@Base+0x380>  // b.any
  418204:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  418208:	add	x19, x19, #0xf20
  41820c:	mov	x2, x1
  418210:	mov	x1, x0
  418214:	mov	x0, x19
  418218:	bl	4069b0 <strncmp@plt>
  41821c:	cbz	w0, 418318 <out_of_memory@@Base+0x470>
  418220:	mov	w0, #0xfffffffe            	// #-2
  418224:	b	418580 <out_of_memory@@Base+0x6d8>
  418228:	cmp	x1, #0x4
  41822c:	b.ne	418220 <out_of_memory@@Base+0x378>  // b.any
  418230:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  418234:	add	x19, x19, #0xf27
  418238:	mov	x2, x1
  41823c:	mov	x1, x0
  418240:	mov	x0, x19
  418244:	bl	4069b0 <strncmp@plt>
  418248:	cbz	w0, 418320 <out_of_memory@@Base+0x478>
  41824c:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x3720>
  418250:	add	x19, x19, #0xf32
  418254:	mov	x2, x20
  418258:	mov	x1, x22
  41825c:	mov	x0, x19
  418260:	bl	4069b0 <strncmp@plt>
  418264:	cbnz	w0, 418220 <out_of_memory@@Base+0x378>
  418268:	mov	w21, w20
  41826c:	b	418274 <out_of_memory@@Base+0x3cc>
  418270:	mov	w21, #0x0                   	// #0
  418274:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  418278:	add	x20, x22, x20
  41827c:	add	x24, x24, #0x454
  418280:	ldrb	w1, [x20]
  418284:	ldrb	w0, [x20]
  418288:	ldrh	w1, [x24, x1, lsl #1]
  41828c:	tst	w1, #0x6
  418290:	b.ne	418330 <out_of_memory@@Base+0x488>  // b.any
  418294:	cmp	w21, #0x5
  418298:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  41829c:	b.ne	41835c <out_of_memory@@Base+0x4b4>  // b.any
  4182a0:	cbz	w0, 4182d8 <out_of_memory@@Base+0x430>
  4182a4:	mov	x0, x19
  4182a8:	bl	406700 <strlen@plt>
  4182ac:	mov	w2, w21
  4182b0:	mov	x20, x0
  4182b4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  4182b8:	mov	x0, #0x0                   	// #0
  4182bc:	add	x1, x1, #0xf43
  4182c0:	bl	406d60 <dcgettext@plt>
  4182c4:	mov	x3, x19
  4182c8:	mov	x2, x0
  4182cc:	mov	x1, x20
  4182d0:	mov	x0, x23
  4182d4:	bl	417aa8 <error@@Base>
  4182d8:	ldr	x1, [x22, #192]
  4182dc:	ldr	w0, [x1]
  4182e0:	cbnz	w0, 418338 <out_of_memory@@Base+0x490>
  4182e4:	mov	x0, x19
  4182e8:	bl	406700 <strlen@plt>
  4182ec:	mov	w2, #0x5                   	// #5
  4182f0:	mov	x20, x0
  4182f4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  4182f8:	mov	x0, #0x0                   	// #0
  4182fc:	add	x1, x1, #0xf68
  418300:	bl	406d60 <dcgettext@plt>
  418304:	mov	x3, x19
  418308:	mov	x2, x0
  41830c:	mov	x1, x20
  418310:	mov	x0, x23
  418314:	bl	417d24 <fatal@@Base>
  418318:	mov	w21, #0x1                   	// #1
  41831c:	b	418274 <out_of_memory@@Base+0x3cc>
  418320:	mov	w21, #0x2                   	// #2
  418324:	b	418274 <out_of_memory@@Base+0x3cc>
  418328:	mov	w21, #0x3                   	// #3
  41832c:	b	418274 <out_of_memory@@Base+0x3cc>
  418330:	add	x20, x20, #0x1
  418334:	b	418280 <out_of_memory@@Base+0x3d8>
  418338:	sub	w0, w0, #0x1
  41833c:	str	w0, [x1]
  418340:	ldr	x1, [x22, #192]
  418344:	mov	x0, #0x0                   	// #0
  418348:	ldr	w2, [x1]
  41834c:	cmp	w2, w0
  418350:	b.hi	41887c <out_of_memory@@Base+0x9d4>  // b.pmore
  418354:	mov	w0, #0x0                   	// #0
  418358:	b	418580 <out_of_memory@@Base+0x6d8>
  41835c:	ldr	x25, [x22, #192]
  418360:	cmp	w21, #0x4
  418364:	b.ne	4184b8 <out_of_memory@@Base+0x610>  // b.any
  418368:	ldr	w27, [x25]
  41836c:	cbz	w27, 4182e4 <out_of_memory@@Base+0x43c>
  418370:	ldr	x0, [x25, #16]
  418374:	sub	w26, w27, #0x1
  418378:	ldrb	w0, [x0, x26]
  41837c:	cbz	w0, 4183a4 <out_of_memory@@Base+0x4fc>
  418380:	mov	w2, #0x5                   	// #5
  418384:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  418388:	mov	x0, #0x0                   	// #0
  41838c:	add	x1, x1, #0xf78
  418390:	bl	406d60 <dcgettext@plt>
  418394:	mov	x2, x0
  418398:	mov	x1, #0x0                   	// #0
  41839c:	mov	x0, x23
  4183a0:	bl	417d24 <fatal@@Base>
  4183a4:	ldr	x0, [x25, #8]
  4183a8:	ldrb	w1, [x0, x26]
  4183ac:	cbz	w1, 4183d0 <out_of_memory@@Base+0x528>
  4183b0:	cmp	w1, #0x1
  4183b4:	b.eq	4183dc <out_of_memory@@Base+0x534>  // b.none
  4183b8:	ldrb	w0, [x20]
  4183bc:	cbnz	w0, 4183e4 <out_of_memory@@Base+0x53c>
  4183c0:	ldr	x0, [x25, #16]
  4183c4:	mov	w1, #0x1                   	// #1
  4183c8:	strb	w1, [x0, x26]
  4183cc:	b	418340 <out_of_memory@@Base+0x498>
  4183d0:	mov	w1, #0x2                   	// #2
  4183d4:	strb	w1, [x0, x26]
  4183d8:	b	4183b8 <out_of_memory@@Base+0x510>
  4183dc:	strb	wzr, [x0, x26]
  4183e0:	b	4183b8 <out_of_memory@@Base+0x510>
  4183e4:	add	x21, x20, #0x1
  4183e8:	ldrb	w0, [x21]
  4183ec:	ldrh	w0, [x24, x0, lsl #1]
  4183f0:	tst	x0, #0x7
  4183f4:	b.eq	418454 <out_of_memory@@Base+0x5ac>  // b.none
  4183f8:	sub	x21, x21, x20
  4183fc:	cmp	x21, #0x4
  418400:	b.ne	41845c <out_of_memory@@Base+0x5b4>  // b.any
  418404:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  418408:	mov	x2, x21
  41840c:	mov	x1, x20
  418410:	add	x0, x0, #0xf32
  418414:	bl	4069b0 <strncmp@plt>
  418418:	cbnz	w0, 418478 <out_of_memory@@Base+0x5d0>
  41841c:	mov	x0, x19
  418420:	bl	406700 <strlen@plt>
  418424:	mov	w2, #0x5                   	// #5
  418428:	mov	x20, x0
  41842c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  418430:	mov	x0, #0x0                   	// #0
  418434:	add	x1, x1, #0xf43
  418438:	bl	406d60 <dcgettext@plt>
  41843c:	mov	x3, x19
  418440:	mov	x2, x0
  418444:	mov	x1, x20
  418448:	mov	x0, x23
  41844c:	bl	417aa8 <error@@Base>
  418450:	b	418340 <out_of_memory@@Base+0x498>
  418454:	add	x21, x21, #0x1
  418458:	b	4183e8 <out_of_memory@@Base+0x540>
  41845c:	cmp	x21, #0x5
  418460:	b.ne	418478 <out_of_memory@@Base+0x5d0>  // b.any
  418464:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  418468:	mov	x2, x21
  41846c:	mov	x1, x20
  418470:	add	x0, x0, #0xf3d
  418474:	b	418414 <out_of_memory@@Base+0x56c>
  418478:	mov	x2, x23
  41847c:	mov	x1, x21
  418480:	mov	x0, x20
  418484:	bl	418188 <out_of_memory@@Base+0x2e0>
  418488:	tbnz	w0, #31, 41841c <out_of_memory@@Base+0x574>
  41848c:	ldr	x0, [x22, #192]
  418490:	ldr	x1, [x0, #8]
  418494:	ldrb	w2, [x1, x26]
  418498:	cmp	w2, #0x1
  41849c:	b.hi	4184a8 <out_of_memory@@Base+0x600>  // b.pmore
  4184a0:	ldrb	w2, [x1, w27, uxtw]
  4184a4:	strb	w2, [x1, x26]
  4184a8:	ldr	w1, [x0]
  4184ac:	sub	w1, w1, #0x1
  4184b0:	str	w1, [x0]
  4184b4:	b	418340 <out_of_memory@@Base+0x498>
  4184b8:	ldr	w0, [x25, #4]
  4184bc:	cbnz	w0, 4184e4 <out_of_memory@@Base+0x63c>
  4184c0:	mov	w0, #0x5                   	// #5
  4184c4:	str	w0, [x25, #4]
  4184c8:	mov	x0, #0x5                   	// #5
  4184cc:	bl	416a54 <xmalloc@@Base>
  4184d0:	str	x0, [x25, #8]
  4184d4:	ldr	x25, [x22, #192]
  4184d8:	ldr	w0, [x25, #4]
  4184dc:	bl	416a54 <xmalloc@@Base>
  4184e0:	str	x0, [x25, #16]
  4184e4:	ldr	x25, [x22, #192]
  4184e8:	ldp	w26, w1, [x25]
  4184ec:	add	w0, w26, #0x1
  4184f0:	str	w0, [x25]
  4184f4:	cmp	w0, w1
  4184f8:	b.ls	418524 <out_of_memory@@Base+0x67c>  // b.plast
  4184fc:	ldr	x0, [x25, #8]
  418500:	add	w1, w1, #0x5
  418504:	str	w1, [x25, #4]
  418508:	bl	416aa0 <xrealloc@@Base>
  41850c:	str	x0, [x25, #8]
  418510:	ldr	x25, [x22, #192]
  418514:	ldr	w1, [x25, #4]
  418518:	ldr	x0, [x25, #16]
  41851c:	bl	416aa0 <xrealloc@@Base>
  418520:	str	x0, [x25, #16]
  418524:	ldr	x1, [x22, #192]
  418528:	mov	w25, w26
  41852c:	ldr	x0, [x1, #16]
  418530:	strb	wzr, [x0, x25]
  418534:	mov	x0, #0x0                   	// #0
  418538:	cmp	w26, w0
  41853c:	b.hi	4185a0 <out_of_memory@@Base+0x6f8>  // b.pmore
  418540:	cmp	w21, #0x1
  418544:	b.hi	418614 <out_of_memory@@Base+0x76c>  // b.pmore
  418548:	mov	x1, #0x0                   	// #0
  41854c:	mov	x0, x20
  418550:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  418554:	mov	x19, x0
  418558:	bl	416c84 <end_of_token@@Base>
  41855c:	sub	x1, x0, x19
  418560:	mov	x2, x0
  418564:	ldrb	w4, [x2]
  418568:	ldrb	w3, [x2]
  41856c:	ldrh	w4, [x24, x4, lsl #1]
  418570:	tst	w4, #0x6
  418574:	b.ne	4185c0 <out_of_memory@@Base+0x718>  // b.any
  418578:	cbz	w3, 4185c8 <out_of_memory@@Base+0x720>
  41857c:	mov	w0, #0xffffffff            	// #-1
  418580:	mov	sp, x29
  418584:	ldp	x19, x20, [sp, #16]
  418588:	ldp	x21, x22, [sp, #32]
  41858c:	ldp	x23, x24, [sp, #48]
  418590:	ldp	x25, x26, [sp, #64]
  418594:	ldp	x27, x28, [sp, #80]
  418598:	ldp	x29, x30, [sp], #96
  41859c:	ret
  4185a0:	ldr	x2, [x1, #8]
  4185a4:	ldrb	w3, [x2, x0]
  4185a8:	add	x0, x0, #0x1
  4185ac:	cbz	w3, 418538 <out_of_memory@@Base+0x690>
  4185b0:	mov	w0, #0x1                   	// #1
  4185b4:	strb	w0, [x2, x25]
  4185b8:	mov	w0, #0x1                   	// #1
  4185bc:	b	418580 <out_of_memory@@Base+0x6d8>
  4185c0:	add	x2, x2, #0x1
  4185c4:	b	418564 <out_of_memory@@Base+0x6bc>
  4185c8:	strb	wzr, [x0]
  4185cc:	mov	x0, x19
  4185d0:	bl	41fcdc <lookup_variable@@Base>
  4185d4:	cbz	x0, 41860c <out_of_memory@@Base+0x764>
  4185d8:	ldr	x0, [x0, #8]
  4185dc:	ldrb	w0, [x0]
  4185e0:	cmp	w0, #0x0
  4185e4:	cset	w1, ne  // ne = any
  4185e8:	ldr	x0, [x22, #192]
  4185ec:	and	w21, w21, #0x1
  4185f0:	eor	w1, w1, w21
  4185f4:	eor	w1, w1, #0x1
  4185f8:	ldr	x0, [x0, #8]
  4185fc:	strb	w1, [x0, x25]
  418600:	mov	x0, x19
  418604:	bl	406c20 <free@plt>
  418608:	b	418340 <out_of_memory@@Base+0x498>
  41860c:	mov	w1, #0x0                   	// #0
  418610:	b	4185e8 <out_of_memory@@Base+0x740>
  418614:	ldrb	w26, [x20]
  418618:	cmp	w26, #0x28
  41861c:	b.ne	41863c <out_of_memory@@Base+0x794>  // b.any
  418620:	add	x0, x20, #0x1
  418624:	mov	x1, x0
  418628:	mov	w2, #0x0                   	// #0
  41862c:	ldrb	w26, [x1]
  418630:	cbnz	w26, 418684 <out_of_memory@@Base+0x7dc>
  418634:	mov	w26, #0x2c                  	// #44
  418638:	b	4186b8 <out_of_memory@@Base+0x810>
  41863c:	cmp	w26, #0x2c
  418640:	mov	w0, #0x22                  	// #34
  418644:	ccmp	w26, w0, #0x4, ne  // ne = any
  418648:	b.eq	418674 <out_of_memory@@Base+0x7cc>  // b.none
  41864c:	cmp	w26, #0x27
  418650:	b.ne	41857c <out_of_memory@@Base+0x6d4>  // b.any
  418654:	add	x0, x20, #0x1
  418658:	mov	x1, x0
  41865c:	ldrb	w2, [x1]
  418660:	cbz	w2, 4186b8 <out_of_memory@@Base+0x810>
  418664:	cmp	w2, w26
  418668:	b.eq	4186b8 <out_of_memory@@Base+0x810>  // b.none
  41866c:	add	x1, x1, #0x1
  418670:	b	41865c <out_of_memory@@Base+0x7b4>
  418674:	add	x0, x20, #0x1
  418678:	cmp	w26, #0x2c
  41867c:	b.ne	418658 <out_of_memory@@Base+0x7b0>  // b.any
  418680:	b	418624 <out_of_memory@@Base+0x77c>
  418684:	cmp	w26, #0x28
  418688:	b.ne	418698 <out_of_memory@@Base+0x7f0>  // b.any
  41868c:	add	w2, w2, #0x1
  418690:	add	x1, x1, #0x1
  418694:	b	41862c <out_of_memory@@Base+0x784>
  418698:	cmp	w26, #0x29
  41869c:	b.ne	4186a8 <out_of_memory@@Base+0x800>  // b.any
  4186a0:	sub	w2, w2, #0x1
  4186a4:	b	418690 <out_of_memory@@Base+0x7e8>
  4186a8:	cmp	w26, #0x2c
  4186ac:	b.ne	418690 <out_of_memory@@Base+0x7e8>  // b.any
  4186b0:	cmp	w2, #0x0
  4186b4:	b.gt	418690 <out_of_memory@@Base+0x7e8>
  4186b8:	ldrb	w2, [x1]
  4186bc:	cbz	w2, 41857c <out_of_memory@@Base+0x6d4>
  4186c0:	add	x27, x1, #0x1
  4186c4:	cmp	w26, #0x2c
  4186c8:	b.ne	4186d8 <out_of_memory@@Base+0x830>  // b.any
  4186cc:	ldurb	w2, [x1, #-1]
  4186d0:	ldrh	w2, [x24, x2, lsl #1]
  4186d4:	tbnz	w2, #1, 4187d8 <out_of_memory@@Base+0x930>
  4186d8:	strb	wzr, [x1]
  4186dc:	bl	40ba98 <variable_expand@@Base>
  4186e0:	mov	x28, x0
  4186e4:	bl	406700 <strlen@plt>
  4186e8:	add	x1, x0, #0x10
  4186ec:	and	x1, x1, #0xfffffffffffffff0
  4186f0:	add	x2, x0, #0x1
  4186f4:	sub	sp, sp, x1
  4186f8:	mov	x1, x28
  4186fc:	mov	x20, sp
  418700:	mov	x0, x20
  418704:	bl	4066c0 <memcpy@plt>
  418708:	cmp	w26, #0x2c
  41870c:	b.ne	4187e4 <out_of_memory@@Base+0x93c>  // b.any
  418710:	mov	x0, x27
  418714:	bl	416ca8 <next_token@@Base>
  418718:	mov	x27, x0
  41871c:	mov	x1, x0
  418720:	mov	w0, #0x0                   	// #0
  418724:	ldrb	w2, [x1]
  418728:	cbnz	w2, 41883c <out_of_memory@@Base+0x994>
  41872c:	ldrb	w0, [x1]
  418730:	cbz	w0, 41857c <out_of_memory@@Base+0x6d4>
  418734:	strb	wzr, [x1], #1
  418738:	ldrb	w2, [x1]
  41873c:	ldrb	w0, [x1]
  418740:	ldrh	w2, [x24, x2, lsl #1]
  418744:	tst	w2, #0x6
  418748:	b.ne	418864 <out_of_memory@@Base+0x9bc>  // b.any
  41874c:	cbz	w0, 418784 <out_of_memory@@Base+0x8dc>
  418750:	mov	x0, x19
  418754:	bl	406700 <strlen@plt>
  418758:	mov	w2, #0x5                   	// #5
  41875c:	mov	x24, x0
  418760:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  418764:	mov	x0, #0x0                   	// #0
  418768:	add	x1, x1, #0xf43
  41876c:	bl	406d60 <dcgettext@plt>
  418770:	mov	x3, x19
  418774:	mov	x2, x0
  418778:	mov	x1, x24
  41877c:	mov	x0, x23
  418780:	bl	417aa8 <error@@Base>
  418784:	mov	x0, x27
  418788:	bl	40ba98 <variable_expand@@Base>
  41878c:	cmp	x20, x0
  418790:	b.eq	418874 <out_of_memory@@Base+0x9cc>  // b.none
  418794:	ldrb	w2, [x20]
  418798:	ldrb	w1, [x0]
  41879c:	cmp	w1, w2
  4187a0:	b.ne	41886c <out_of_memory@@Base+0x9c4>  // b.any
  4187a4:	cbz	w1, 418874 <out_of_memory@@Base+0x9cc>
  4187a8:	add	x1, x0, #0x1
  4187ac:	add	x0, x20, #0x1
  4187b0:	bl	406be0 <strcmp@plt>
  4187b4:	cmp	w0, #0x0
  4187b8:	cset	w0, eq  // eq = none
  4187bc:	ldr	x1, [x22, #192]
  4187c0:	cmp	w21, #0x3
  4187c4:	ldr	x2, [x1, #8]
  4187c8:	cset	w1, ne  // ne = any
  4187cc:	eor	w0, w1, w0
  4187d0:	strb	w0, [x2, x25]
  4187d4:	b	418340 <out_of_memory@@Base+0x498>
  4187d8:	sub	x1, x1, #0x1
  4187dc:	b	4186cc <out_of_memory@@Base+0x824>
  4187e0:	add	x27, x27, #0x1
  4187e4:	ldrb	w1, [x27]
  4187e8:	ldrb	w0, [x27]
  4187ec:	ldrh	w1, [x24, x1, lsl #1]
  4187f0:	tst	w1, #0x6
  4187f4:	b.ne	4187e0 <out_of_memory@@Base+0x938>  // b.any
  4187f8:	cmp	w0, #0x29
  4187fc:	mov	w1, #0x22                  	// #34
  418800:	ccmp	w0, w1, #0x4, ne  // ne = any
  418804:	b.ne	418814 <out_of_memory@@Base+0x96c>  // b.any
  418808:	cmp	w0, #0x29
  41880c:	b.ne	41881c <out_of_memory@@Base+0x974>  // b.any
  418810:	b	418710 <out_of_memory@@Base+0x868>
  418814:	cmp	w0, #0x27
  418818:	b.ne	41857c <out_of_memory@@Base+0x6d4>  // b.any
  41881c:	add	x27, x27, #0x1
  418820:	mov	x1, x27
  418824:	ldrb	w2, [x1]
  418828:	cbz	w2, 41872c <out_of_memory@@Base+0x884>
  41882c:	cmp	w0, w2
  418830:	b.eq	41872c <out_of_memory@@Base+0x884>  // b.none
  418834:	add	x1, x1, #0x1
  418838:	b	418824 <out_of_memory@@Base+0x97c>
  41883c:	cmp	w2, #0x28
  418840:	b.ne	418850 <out_of_memory@@Base+0x9a8>  // b.any
  418844:	add	w0, w0, #0x1
  418848:	add	x1, x1, #0x1
  41884c:	b	418724 <out_of_memory@@Base+0x87c>
  418850:	cmp	w2, #0x29
  418854:	b.ne	418848 <out_of_memory@@Base+0x9a0>  // b.any
  418858:	cbz	w0, 41872c <out_of_memory@@Base+0x884>
  41885c:	sub	w0, w0, #0x1
  418860:	b	418848 <out_of_memory@@Base+0x9a0>
  418864:	add	x1, x1, #0x1
  418868:	b	418738 <out_of_memory@@Base+0x890>
  41886c:	mov	w0, #0x0                   	// #0
  418870:	b	4187bc <out_of_memory@@Base+0x914>
  418874:	mov	w0, #0x1                   	// #1
  418878:	b	4187bc <out_of_memory@@Base+0x914>
  41887c:	ldr	x3, [x1, #8]
  418880:	ldrb	w3, [x3, x0]
  418884:	add	x0, x0, #0x1
  418888:	cbz	w3, 41834c <out_of_memory@@Base+0x4a4>
  41888c:	b	4185b8 <out_of_memory@@Base+0x710>
  418890:	stp	x29, x30, [sp, #-112]!
  418894:	mov	x3, #0x0                   	// #0
  418898:	mov	x29, sp
  41889c:	stp	x19, x20, [sp, #16]
  4188a0:	mov	x19, x0
  4188a4:	stp	x21, x22, [sp, #32]
  4188a8:	mov	x21, x0
  4188ac:	orr	w22, w1, #0x1
  4188b0:	stp	x23, x24, [sp, #48]
  4188b4:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  4188b8:	add	x23, x23, #0x454
  4188bc:	mov	x24, #0x1                   	// #1
  4188c0:	stp	x25, x26, [sp, #64]
  4188c4:	mov	w25, #0x2                   	// #2
  4188c8:	mov	w26, #0x7b                  	// #123
  4188cc:	stp	x27, x28, [sp, #80]
  4188d0:	mov	w27, #0x7d                  	// #125
  4188d4:	ldrb	w1, [x19]
  4188d8:	ldrb	w0, [x19]
  4188dc:	ldrh	w1, [x23, x1, lsl #1]
  4188e0:	tst	w1, w22
  4188e4:	b.eq	418938 <out_of_memory@@Base+0xa90>  // b.none
  4188e8:	cbz	w0, 418a04 <out_of_memory@@Base+0xb5c>
  4188ec:	cmp	w0, #0x24
  4188f0:	b.ne	418958 <out_of_memory@@Base+0xab0>  // b.any
  4188f4:	ldrb	w1, [x19, #1]
  4188f8:	cbz	w1, 418a04 <out_of_memory@@Base+0xb5c>
  4188fc:	cmp	w1, #0x28
  418900:	add	x20, x19, #0x2
  418904:	ccmp	w1, w26, #0x4, ne  // ne = any
  418908:	b.ne	41893c <out_of_memory@@Base+0xa94>  // b.any
  41890c:	cmp	w1, #0x28
  418910:	mov	w4, #0x29                  	// #41
  418914:	csel	w4, w27, w4, ne  // ne = any
  418918:	mov	w0, #0x1                   	// #1
  41891c:	ldrb	w2, [x20]
  418920:	cbz	w2, 41893c <out_of_memory@@Base+0xa94>
  418924:	cmp	w2, w1
  418928:	add	x20, x20, #0x1
  41892c:	b.ne	418944 <out_of_memory@@Base+0xa9c>  // b.any
  418930:	add	w0, w0, #0x1
  418934:	b	41891c <out_of_memory@@Base+0xa74>
  418938:	add	x20, x19, #0x1
  41893c:	mov	x19, x20
  418940:	b	4188d4 <out_of_memory@@Base+0xa2c>
  418944:	cmp	w2, w4
  418948:	b.ne	41891c <out_of_memory@@Base+0xa74>  // b.any
  41894c:	subs	w0, w0, #0x1
  418950:	b.ne	41891c <out_of_memory@@Base+0xa74>  // b.any
  418954:	b	41893c <out_of_memory@@Base+0xa94>
  418958:	cmp	x19, x21
  41895c:	b.ls	4189c0 <out_of_memory@@Base+0xb18>  // b.plast
  418960:	ldurb	w0, [x19, #-1]
  418964:	cmp	w0, #0x5c
  418968:	b.ne	4189c0 <out_of_memory@@Base+0xb18>  // b.any
  41896c:	add	x2, x19, #0x1
  418970:	mov	x0, #0xfffffffffffffffe    	// #-2
  418974:	add	x1, x19, x0
  418978:	mov	w28, w0
  41897c:	cmp	x21, x1
  418980:	b.ls	4189e0 <out_of_memory@@Base+0xb38>  // b.plast
  418984:	add	w28, w28, #0x1
  418988:	cbz	x3, 4189f4 <out_of_memory@@Base+0xb4c>
  41898c:	sdiv	w0, w28, w25
  418990:	sub	x2, x19, x21
  418994:	sub	x2, x24, x2
  418998:	str	x3, [sp, #104]
  41899c:	add	x20, x19, w0, sxtw
  4189a0:	sub	x0, x3, w0, sxtw
  4189a4:	add	x2, x2, x0
  4189a8:	mov	x1, x20
  4189ac:	add	x0, x19, w28, sxtw
  4189b0:	bl	4066d0 <memmove@plt>
  4189b4:	ldr	x3, [sp, #104]
  4189b8:	tbnz	w28, #0, 41893c <out_of_memory@@Base+0xa94>
  4189bc:	mov	x19, x20
  4189c0:	mov	x0, x19
  4189c4:	ldp	x19, x20, [sp, #16]
  4189c8:	ldp	x21, x22, [sp, #32]
  4189cc:	ldp	x23, x24, [sp, #48]
  4189d0:	ldp	x25, x26, [sp, #64]
  4189d4:	ldp	x27, x28, [sp, #80]
  4189d8:	ldp	x29, x30, [sp], #112
  4189dc:	ret
  4189e0:	sub	x0, x0, #0x1
  4189e4:	ldrb	w1, [x2, x0]
  4189e8:	cmp	w1, #0x5c
  4189ec:	b.eq	418974 <out_of_memory@@Base+0xacc>  // b.none
  4189f0:	b	418984 <out_of_memory@@Base+0xadc>
  4189f4:	mov	x0, x21
  4189f8:	bl	406700 <strlen@plt>
  4189fc:	mov	x3, x0
  418a00:	b	41898c <out_of_memory@@Base+0xae4>
  418a04:	mov	x19, #0x0                   	// #0
  418a08:	b	4189c0 <out_of_memory@@Base+0xb18>
  418a0c:	stp	x29, x30, [sp, #-80]!
  418a10:	mov	x29, sp
  418a14:	stp	x19, x20, [sp, #16]
  418a18:	mov	x20, x0
  418a1c:	stp	x23, x24, [sp, #48]
  418a20:	mov	w23, w1
  418a24:	mov	x24, #0x1                   	// #1
  418a28:	stp	x25, x26, [sp, #64]
  418a2c:	mov	x26, x0
  418a30:	mov	w25, #0x2                   	// #2
  418a34:	stp	x21, x22, [sp, #32]
  418a38:	mov	x22, #0x0                   	// #0
  418a3c:	mov	w1, w23
  418a40:	mov	x0, x26
  418a44:	bl	406c40 <strchr@plt>
  418a48:	mov	x19, x0
  418a4c:	cbz	x0, 418ab0 <out_of_memory@@Base+0xc08>
  418a50:	cmp	x20, x0
  418a54:	b.cs	418ab0 <out_of_memory@@Base+0xc08>  // b.hs, b.nlast
  418a58:	ldurb	w0, [x0, #-1]
  418a5c:	cmp	w0, #0x5c
  418a60:	b.ne	418ab0 <out_of_memory@@Base+0xc08>  // b.any
  418a64:	add	x2, x19, #0x1
  418a68:	mov	x0, #0xfffffffffffffffe    	// #-2
  418a6c:	add	x1, x19, x0
  418a70:	mov	w21, w0
  418a74:	cmp	x20, x1
  418a78:	b.ls	418acc <out_of_memory@@Base+0xc24>  // b.plast
  418a7c:	add	w21, w21, #0x1
  418a80:	cbz	x22, 418ae0 <out_of_memory@@Base+0xc38>
  418a84:	sdiv	w0, w21, w25
  418a88:	sub	x2, x19, x20
  418a8c:	sub	x2, x24, x2
  418a90:	add	x26, x19, w0, sxtw
  418a94:	sub	x0, x22, w0, sxtw
  418a98:	add	x2, x2, x0
  418a9c:	mov	x1, x26
  418aa0:	add	x0, x19, w21, sxtw
  418aa4:	bl	4066d0 <memmove@plt>
  418aa8:	tbnz	w21, #0, 418a3c <out_of_memory@@Base+0xb94>
  418aac:	mov	x19, x26
  418ab0:	mov	x0, x19
  418ab4:	ldp	x19, x20, [sp, #16]
  418ab8:	ldp	x21, x22, [sp, #32]
  418abc:	ldp	x23, x24, [sp, #48]
  418ac0:	ldp	x25, x26, [sp, #64]
  418ac4:	ldp	x29, x30, [sp], #80
  418ac8:	ret
  418acc:	sub	x0, x0, #0x1
  418ad0:	ldrb	w1, [x2, x0]
  418ad4:	cmp	w1, #0x5c
  418ad8:	b.eq	418a6c <out_of_memory@@Base+0xbc4>  // b.none
  418adc:	b	418a7c <out_of_memory@@Base+0xbd4>
  418ae0:	mov	x0, x20
  418ae4:	bl	406700 <strlen@plt>
  418ae8:	mov	x22, x0
  418aec:	b	418a84 <out_of_memory@@Base+0xbdc>
  418af0:	stp	x29, x30, [sp, #-96]!
  418af4:	mov	x29, sp
  418af8:	stp	x19, x20, [sp, #16]
  418afc:	mov	x20, x0
  418b00:	stp	x21, x22, [sp, #32]
  418b04:	ldp	x19, x22, [x0, #16]
  418b08:	stp	x23, x24, [sp, #48]
  418b0c:	ldr	x0, [x0, #32]
  418b10:	stp	x25, x26, [sp, #64]
  418b14:	str	x27, [sp, #80]
  418b18:	add	x23, x19, x22
  418b1c:	cbnz	x0, 418ba8 <out_of_memory@@Base+0xd00>
  418b20:	ldr	x21, [x20, #8]
  418b24:	cmp	x21, x23
  418b28:	b.cs	418cf4 <out_of_memory@@Base+0xe4c>  // b.hs, b.nlast
  418b2c:	str	x21, [x20]
  418b30:	mov	x0, x21
  418b34:	mov	w1, #0xa                   	// #10
  418b38:	bl	406c40 <strchr@plt>
  418b3c:	cbnz	x0, 418b9c <out_of_memory@@Base+0xcf4>
  418b40:	add	x22, x22, #0x1
  418b44:	add	x19, x19, x22
  418b48:	str	x19, [x20, #8]
  418b4c:	mov	x22, #0x0                   	// #0
  418b50:	mov	x0, x22
  418b54:	ldp	x19, x20, [sp, #16]
  418b58:	ldp	x21, x22, [sp, #32]
  418b5c:	ldp	x23, x24, [sp, #48]
  418b60:	ldp	x25, x26, [sp, #64]
  418b64:	ldr	x27, [sp, #80]
  418b68:	ldp	x29, x30, [sp], #96
  418b6c:	ret
  418b70:	eor	w1, w1, #0x1
  418b74:	cmp	x21, x2
  418b78:	b.cs	418b88 <out_of_memory@@Base+0xce0>  // b.hs, b.nlast
  418b7c:	ldrb	w3, [x2, #-1]!
  418b80:	cmp	w3, #0x5c
  418b84:	b.eq	418b70 <out_of_memory@@Base+0xcc8>  // b.none
  418b88:	add	x21, x0, #0x1
  418b8c:	cbnz	w1, 418b30 <out_of_memory@@Base+0xc88>
  418b90:	strb	wzr, [x0]
  418b94:	str	x21, [x20, #8]
  418b98:	b	418b4c <out_of_memory@@Base+0xca4>
  418b9c:	mov	x2, x0
  418ba0:	mov	w1, #0x0                   	// #0
  418ba4:	b	418b74 <out_of_memory@@Base+0xccc>
  418ba8:	adrp	x24, 426000 <_IO_stdin_used@@Base+0x3720>
  418bac:	mov	x21, x19
  418bb0:	add	x24, x24, #0xf98
  418bb4:	add	x25, x20, #0x28
  418bb8:	mov	x22, #0x0                   	// #0
  418bbc:	mov	w26, #0xa                   	// #10
  418bc0:	strb	wzr, [x19]
  418bc4:	ldr	x2, [x20, #32]
  418bc8:	sub	w1, w23, w19
  418bcc:	mov	x0, x19
  418bd0:	bl	406e80 <fgets@plt>
  418bd4:	cbz	x0, 418c70 <out_of_memory@@Base+0xdc8>
  418bd8:	mov	x0, x19
  418bdc:	bl	406700 <strlen@plt>
  418be0:	mov	x1, x0
  418be4:	cbnz	x0, 418c0c <out_of_memory@@Base+0xd64>
  418be8:	mov	x1, x24
  418bec:	mov	w2, #0x5                   	// #5
  418bf0:	bl	406d60 <dcgettext@plt>
  418bf4:	mov	x2, x0
  418bf8:	mov	x1, #0x0                   	// #0
  418bfc:	mov	x0, x25
  418c00:	bl	417aa8 <error@@Base>
  418c04:	strb	w26, [x19]
  418c08:	mov	x1, #0x1                   	// #1
  418c0c:	add	x19, x19, x1
  418c10:	ldurb	w0, [x19, #-1]
  418c14:	cmp	w0, #0xa
  418c18:	b.ne	418ca8 <out_of_memory@@Base+0xe00>  // b.any
  418c1c:	sub	x0, x19, x21
  418c20:	add	x22, x22, #0x1
  418c24:	cmp	x0, #0x1
  418c28:	b.le	418c58 <out_of_memory@@Base+0xdb0>
  418c2c:	ldurb	w0, [x19, #-2]
  418c30:	cmp	w0, #0xd
  418c34:	b.ne	418c58 <out_of_memory@@Base+0xdb0>  // b.any
  418c38:	sub	x27, x19, #0x1
  418c3c:	mov	x0, x27
  418c40:	bl	406700 <strlen@plt>
  418c44:	add	x2, x0, #0x1
  418c48:	sub	x0, x19, #0x2
  418c4c:	mov	x19, x27
  418c50:	mov	x1, x27
  418c54:	bl	4066d0 <memmove@plt>
  418c58:	sub	x0, x19, #0x2
  418c5c:	mov	w1, #0x0                   	// #0
  418c60:	cmp	x21, x0
  418c64:	b.ls	418c84 <out_of_memory@@Base+0xddc>  // b.plast
  418c68:	cbnz	w1, 418c9c <out_of_memory@@Base+0xdf4>
  418c6c:	sturb	wzr, [x19, #-1]
  418c70:	ldr	x0, [x20, #32]
  418c74:	bl	406ea0 <ferror@plt>
  418c78:	cbz	w0, 418ce0 <out_of_memory@@Base+0xe38>
  418c7c:	ldr	x0, [x20, #40]
  418c80:	bl	417590 <pfatal_with_name@@Base>
  418c84:	ldrb	w2, [x0]
  418c88:	cmp	w2, #0x5c
  418c8c:	b.ne	418c68 <out_of_memory@@Base+0xdc0>  // b.any
  418c90:	eor	w1, w1, #0x1
  418c94:	sub	x0, x0, #0x1
  418c98:	b	418c60 <out_of_memory@@Base+0xdb8>
  418c9c:	sub	x0, x23, x19
  418ca0:	cmp	x0, #0x4f
  418ca4:	b.gt	418bc4 <out_of_memory@@Base+0xd1c>
  418ca8:	ldr	x1, [x20, #24]
  418cac:	sub	x27, x19, x21
  418cb0:	mov	x0, x21
  418cb4:	lsl	x1, x1, #1
  418cb8:	str	x1, [x20, #24]
  418cbc:	bl	416aa0 <xrealloc@@Base>
  418cc0:	str	x0, [x20]
  418cc4:	ldr	x23, [x20, #24]
  418cc8:	str	x0, [x20, #16]
  418ccc:	mov	x21, x0
  418cd0:	add	x19, x0, x27
  418cd4:	add	x23, x0, x23
  418cd8:	strb	wzr, [x0, x27]
  418cdc:	b	418bc4 <out_of_memory@@Base+0xd1c>
  418ce0:	cbnz	x22, 418b50 <out_of_memory@@Base+0xca8>
  418ce4:	ldr	x0, [x20, #16]
  418ce8:	mov	x22, #0x1                   	// #1
  418cec:	cmp	x0, x19
  418cf0:	b.ne	418b50 <out_of_memory@@Base+0xca8>  // b.any
  418cf4:	mov	x22, #0xffffffffffffffff    	// #-1
  418cf8:	b	418b50 <out_of_memory@@Base+0xca8>
  418cfc:	stp	x29, x30, [sp, #-128]!
  418d00:	mov	x29, sp
  418d04:	stp	x19, x20, [sp, #16]
  418d08:	mov	x20, x1
  418d0c:	stp	x21, x22, [sp, #32]
  418d10:	mov	x21, x0
  418d14:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  418d18:	add	x0, x0, #0x454
  418d1c:	stp	x23, x24, [sp, #48]
  418d20:	str	x25, [sp, #64]
  418d24:	str	wzr, [x1]
  418d28:	ldrb	w2, [x21]
  418d2c:	ldrb	w1, [x21]
  418d30:	ldrh	w2, [x0, x2, lsl #1]
  418d34:	tst	w2, #0x6
  418d38:	b.ne	418dd0 <out_of_memory@@Base+0xf28>  // b.any
  418d3c:	cbz	w1, 418db4 <out_of_memory@@Base+0xf0c>
  418d40:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x4720>
  418d44:	adrp	x25, 424000 <_IO_stdin_used@@Base+0x1720>
  418d48:	mov	x19, x21
  418d4c:	add	x24, x24, #0xe10
  418d50:	add	x25, x25, #0x21b
  418d54:	add	x1, sp, #0x50
  418d58:	mov	x0, x19
  418d5c:	bl	420d80 <parse_variable_definition@@Base>
  418d60:	cbnz	x0, 418e7c <out_of_memory@@Base+0xfd4>
  418d64:	mov	x0, x19
  418d68:	bl	416c84 <end_of_token@@Base>
  418d6c:	sub	x22, x0, x19
  418d70:	mov	x23, x0
  418d74:	cmp	x22, #0x6
  418d78:	b.ne	418dd8 <out_of_memory@@Base+0xf30>  // b.any
  418d7c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  418d80:	mov	x2, x22
  418d84:	mov	x1, x19
  418d88:	add	x0, x0, #0x32a
  418d8c:	bl	4069b0 <strncmp@plt>
  418d90:	cbnz	w0, 418e4c <out_of_memory@@Base+0xfa4>
  418d94:	ldrb	w0, [x20]
  418d98:	orr	w0, w0, #0x8
  418d9c:	strb	w0, [x20]
  418da0:	mov	x0, x23
  418da4:	bl	416ca8 <next_token@@Base>
  418da8:	mov	x19, x0
  418dac:	ldrb	w0, [x0]
  418db0:	cbnz	w0, 418d54 <out_of_memory@@Base+0xeac>
  418db4:	mov	x0, x21
  418db8:	ldp	x19, x20, [sp, #16]
  418dbc:	ldp	x21, x22, [sp, #32]
  418dc0:	ldp	x23, x24, [sp, #48]
  418dc4:	ldr	x25, [sp, #64]
  418dc8:	ldp	x29, x30, [sp], #128
  418dcc:	ret
  418dd0:	add	x21, x21, #0x1
  418dd4:	b	418d28 <out_of_memory@@Base+0xe80>
  418dd8:	cmp	x22, #0x8
  418ddc:	b.ne	418e00 <out_of_memory@@Base+0xf58>  // b.any
  418de0:	mov	x2, x22
  418de4:	mov	x1, x19
  418de8:	mov	x0, x25
  418dec:	bl	4069b0 <strncmp@plt>
  418df0:	cbnz	w0, 418e28 <out_of_memory@@Base+0xf80>
  418df4:	ldrb	w0, [x20]
  418df8:	orr	w0, w0, #0x10
  418dfc:	b	418d9c <out_of_memory@@Base+0xef4>
  418e00:	cmp	x22, #0x7
  418e04:	b.ne	418db4 <out_of_memory@@Base+0xf0c>  // b.any
  418e08:	mov	x2, x22
  418e0c:	mov	x1, x19
  418e10:	mov	x0, x24
  418e14:	bl	4069b0 <strncmp@plt>
  418e18:	cbnz	w0, 418db4 <out_of_memory@@Base+0xf0c>
  418e1c:	ldrb	w0, [x20]
  418e20:	orr	w0, w0, #0x20
  418e24:	b	418d9c <out_of_memory@@Base+0xef4>
  418e28:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  418e2c:	mov	x2, x22
  418e30:	mov	x1, x19
  418e34:	add	x0, x0, #0xfca
  418e38:	bl	4069b0 <strncmp@plt>
  418e3c:	cbnz	w0, 418db4 <out_of_memory@@Base+0xf0c>
  418e40:	ldrb	w0, [x20]
  418e44:	orr	w0, w0, #0x4
  418e48:	b	418e6c <out_of_memory@@Base+0xfc4>
  418e4c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x3720>
  418e50:	mov	x2, x22
  418e54:	mov	x1, x19
  418e58:	add	x0, x0, #0xfcc
  418e5c:	bl	4069b0 <strncmp@plt>
  418e60:	cbnz	w0, 418db4 <out_of_memory@@Base+0xf0c>
  418e64:	ldrb	w0, [x20]
  418e68:	orr	w0, w0, #0x2
  418e6c:	strb	w0, [x20]
  418e70:	mov	x0, x23
  418e74:	bl	416ca8 <next_token@@Base>
  418e78:	mov	x19, x0
  418e7c:	ldrb	w0, [x20]
  418e80:	mov	x21, x19
  418e84:	orr	w0, w0, #0x1
  418e88:	strb	w0, [x20]
  418e8c:	b	418db4 <out_of_memory@@Base+0xf0c>

0000000000418e90 <find_percent@@Base>:
  418e90:	mov	w1, #0x25                  	// #37
  418e94:	b	418a0c <out_of_memory@@Base+0xb64>

0000000000418e98 <find_percent_cached@@Base>:
  418e98:	stp	x29, x30, [sp, #-96]!
  418e9c:	mov	x29, sp
  418ea0:	stp	x19, x20, [sp, #16]
  418ea4:	ldr	x19, [x0]
  418ea8:	stp	x21, x22, [sp, #32]
  418eac:	mov	x21, x0
  418eb0:	stp	x23, x24, [sp, #48]
  418eb4:	stp	x25, x26, [sp, #64]
  418eb8:	str	x27, [sp, #80]
  418ebc:	ldrb	w0, [x19]
  418ec0:	cmp	w0, #0x25
  418ec4:	b.eq	418fb0 <find_percent_cached@@Base+0x118>  // b.none
  418ec8:	mov	x22, #0x0                   	// #0
  418ecc:	mov	x20, #0x0                   	// #0
  418ed0:	mov	w26, #0x2                   	// #2
  418ed4:	mov	x25, #0x1                   	// #1
  418ed8:	mov	x0, x19
  418edc:	mov	w1, #0x25                  	// #37
  418ee0:	bl	406c40 <strchr@plt>
  418ee4:	mov	x19, x0
  418ee8:	cbz	x0, 418fac <find_percent_cached@@Base+0x114>
  418eec:	ldurb	w0, [x0, #-1]
  418ef0:	cmp	w0, #0x5c
  418ef4:	b.ne	418fac <find_percent_cached@@Base+0x114>  // b.any
  418ef8:	ldr	x27, [x21]
  418efc:	add	x2, x19, #0x1
  418f00:	mov	x0, #0xfffffffffffffffe    	// #-2
  418f04:	add	x1, x19, x0
  418f08:	mov	w23, w0
  418f0c:	cmp	x27, x1
  418f10:	b.hi	418f24 <find_percent_cached@@Base+0x8c>  // b.pmore
  418f14:	sub	x0, x0, #0x1
  418f18:	ldrb	w1, [x2, x0]
  418f1c:	cmp	w1, #0x5c
  418f20:	b.eq	418f04 <find_percent_cached@@Base+0x6c>  // b.none
  418f24:	add	w23, w23, #0x1
  418f28:	sub	x24, x19, x27
  418f2c:	cbnz	x20, 418f64 <find_percent_cached@@Base+0xcc>
  418f30:	mov	x0, x27
  418f34:	bl	406700 <strlen@plt>
  418f38:	mov	x22, x0
  418f3c:	add	x0, x0, #0x10
  418f40:	and	x0, x0, #0xfffffffffffffff0
  418f44:	add	x2, x22, #0x1
  418f48:	sub	sp, sp, x0
  418f4c:	mov	x1, x27
  418f50:	mov	x20, sp
  418f54:	add	x19, x20, x24
  418f58:	mov	x0, x20
  418f5c:	bl	4066c0 <memcpy@plt>
  418f60:	str	x20, [x21]
  418f64:	sdiv	w1, w23, w26
  418f68:	add	x0, x20, x24
  418f6c:	sub	x24, x25, x24
  418f70:	sxtw	x27, w1
  418f74:	sub	x2, x22, w1, sxtw
  418f78:	add	x2, x24, x2
  418f7c:	add	x1, x0, w1, sxtw
  418f80:	add	x19, x19, x27
  418f84:	add	x0, x0, w23, sxtw
  418f88:	bl	4066d0 <memmove@plt>
  418f8c:	tbnz	w23, #0, 418ed8 <find_percent_cached@@Base+0x40>
  418f90:	ldr	x0, [x21]
  418f94:	bl	41f174 <strcache_add@@Base>
  418f98:	str	x0, [x21]
  418f9c:	cbz	x19, 418fb0 <find_percent_cached@@Base+0x118>
  418fa0:	sub	x19, x19, x20
  418fa4:	add	x19, x0, x19
  418fa8:	b	418fb0 <find_percent_cached@@Base+0x118>
  418fac:	cbnz	x20, 418f90 <find_percent_cached@@Base+0xf8>
  418fb0:	mov	sp, x29
  418fb4:	mov	x0, x19
  418fb8:	ldp	x19, x20, [sp, #16]
  418fbc:	ldp	x21, x22, [sp, #32]
  418fc0:	ldp	x23, x24, [sp, #48]
  418fc4:	ldp	x25, x26, [sp, #64]
  418fc8:	ldr	x27, [sp, #80]
  418fcc:	ldp	x29, x30, [sp], #96
  418fd0:	ret
  418fd4:	stp	x29, x30, [sp, #-160]!
  418fd8:	mov	x29, sp
  418fdc:	stp	x23, x24, [sp, #48]
  418fe0:	mov	x23, x0
  418fe4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  418fe8:	stp	x19, x20, [sp, #16]
  418fec:	ldr	w0, [x0, #788]
  418ff0:	stp	x21, x22, [sp, #32]
  418ff4:	stp	x25, x26, [sp, #64]
  418ff8:	stp	x27, x28, [sp, #80]
  418ffc:	str	w1, [sp, #108]
  419000:	str	x3, [sp, #112]
  419004:	ldr	x21, [sp, #176]
  419008:	cbz	w0, 419030 <find_percent_cached@@Base+0x198>
  41900c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  419010:	add	x1, x1, #0xfd3
  419014:	mov	w2, #0x5                   	// #5
  419018:	mov	x0, #0x0                   	// #0
  41901c:	bl	406d60 <dcgettext@plt>
  419020:	mov	x2, x0
  419024:	mov	x1, #0x0                   	// #0
  419028:	mov	x0, x21
  41902c:	bl	417d24 <fatal@@Base>
  419030:	ldr	x0, [x23, #8]
  419034:	mov	x22, x2
  419038:	mov	x24, x4
  41903c:	mov	w26, w5
  419040:	mov	x20, x6
  419044:	mov	x27, x7
  419048:	str	x0, [sp, #152]
  41904c:	add	x0, sp, #0x98
  419050:	bl	418e98 <find_percent_cached@@Base>
  419054:	mov	x25, x0
  419058:	cbz	x27, 4190bc <find_percent_cached@@Base+0x224>
  41905c:	mov	x0, #0x38                  	// #56
  419060:	bl	416a54 <xmalloc@@Base>
  419064:	mov	x19, x0
  419068:	mov	x1, x27
  41906c:	ldr	x0, [x21]
  419070:	stp	x0, x26, [x19]
  419074:	mov	x0, x20
  419078:	str	xzr, [x19, #16]
  41907c:	bl	416c40 <xstrndup@@Base>
  419080:	stp	x0, xzr, [x19, #24]
  419084:	ldrb	w0, [sp, #168]
  419088:	strb	w0, [x19, #50]
  41908c:	cbz	x24, 4193c8 <find_percent_cached@@Base+0x530>
  419090:	mov	x1, x24
  419094:	mov	x3, x24
  419098:	ldrb	w0, [x1]
  41909c:	cbz	w0, 419110 <find_percent_cached@@Base+0x278>
  4190a0:	mov	x26, x1
  4190a4:	cmp	w0, #0x5c
  4190a8:	b.eq	4190dc <find_percent_cached@@Base+0x244>  // b.none
  4190ac:	mov	x1, x26
  4190b0:	ldrb	w0, [x1], #1
  4190b4:	strb	w0, [x3], #1
  4190b8:	b	419098 <find_percent_cached@@Base+0x200>
  4190bc:	ldr	w0, [sp, #108]
  4190c0:	mov	x19, #0x0                   	// #0
  4190c4:	cbz	w0, 41908c <find_percent_cached@@Base+0x1f4>
  4190c8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  4190cc:	mov	w2, #0x5                   	// #5
  4190d0:	add	x1, x1, #0xffe
  4190d4:	b	419018 <find_percent_cached@@Base+0x180>
  4190d8:	add	x26, x26, #0x1
  4190dc:	ldrb	w0, [x26]
  4190e0:	cmp	w0, #0x5c
  4190e4:	b.eq	4190d8 <find_percent_cached@@Base+0x240>  // b.none
  4190e8:	sub	x20, x26, x1
  4190ec:	cmp	w0, #0x3a
  4190f0:	b.ne	4190f8 <find_percent_cached@@Base+0x260>  // b.any
  4190f4:	tbnz	w20, #0, 419178 <find_percent_cached@@Base+0x2e0>
  4190f8:	mov	x0, x3
  4190fc:	mov	x2, x20
  419100:	bl	4066d0 <memmove@plt>
  419104:	add	x3, x0, x20
  419108:	ldrb	w0, [x26]
  41910c:	cbnz	w0, 4190ac <find_percent_cached@@Base+0x214>
  419110:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  419114:	strb	wzr, [x3]
  419118:	ldr	w0, [x0, #2004]
  41911c:	cbz	w0, 419198 <find_percent_cached@@Base+0x300>
  419120:	mov	x0, x24
  419124:	mov	w1, #0x24                  	// #36
  419128:	bl	406c40 <strchr@plt>
  41912c:	cbz	x0, 419198 <find_percent_cached@@Base+0x300>
  419130:	mov	x0, #0x28                  	// #40
  419134:	bl	416a78 <xcalloc@@Base>
  419138:	mov	x20, x0
  41913c:	cmp	x22, #0x0
  419140:	cset	w0, ne  // ne = any
  419144:	ldrb	w1, [x20, #33]
  419148:	ubfiz	w0, w0, #2, #6
  41914c:	orr	w0, w0, #0x8
  419150:	str	x24, [x20, #8]
  419154:	and	w1, w1, #0xfffffff3
  419158:	orr	w0, w0, w1
  41915c:	strb	w0, [x20, #33]
  419160:	cbz	x25, 4191c4 <find_percent_cached@@Base+0x32c>
  419164:	cbz	x22, 4193d0 <find_percent_cached@@Base+0x538>
  419168:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41916c:	mov	w2, #0x5                   	// #5
  419170:	add	x1, x1, #0x24
  419174:	b	419018 <find_percent_cached@@Base+0x180>
  419178:	cmp	x20, #0x1
  41917c:	b.eq	4190ac <find_percent_cached@@Base+0x214>  // b.none
  419180:	lsr	x20, x20, #1
  419184:	mov	x0, x3
  419188:	mov	x2, x20
  41918c:	bl	4066d0 <memmove@plt>
  419190:	add	x3, x0, x20
  419194:	b	4190ac <find_percent_cached@@Base+0x214>
  419198:	mov	x0, x24
  41919c:	bl	40c5c0 <split_prereqs@@Base>
  4191a0:	mov	x20, x0
  4191a4:	mov	x0, x24
  4191a8:	bl	406c20 <free@plt>
  4191ac:	orr	x0, x25, x22
  4191b0:	cbnz	x0, 419160 <find_percent_cached@@Base+0x2c8>
  4191b4:	mov	x0, x20
  4191b8:	mov	x1, #0x0                   	// #0
  4191bc:	bl	40c660 <enter_prereqs@@Base>
  4191c0:	mov	x20, x0
  4191c4:	adrp	x27, 441000 <commands_started@@Base+0x1c0>
  4191c8:	adrp	x28, 441000 <commands_started@@Base+0x1c0>
  4191cc:	add	x27, x27, #0x7d4
  4191d0:	add	x28, x28, #0x804
  4191d4:	adrp	x26, 441000 <commands_started@@Base+0x1c0>
  4191d8:	mov	x24, #0x0                   	// #0
  4191dc:	add	x0, x26, #0x7d0
  4191e0:	str	x0, [sp, #120]
  4191e4:	mov	x0, x23
  4191e8:	ldr	x25, [x23]
  4191ec:	bl	406c20 <free@plt>
  4191f0:	ldr	x0, [sp, #120]
  4191f4:	ldr	w0, [x0]
  4191f8:	cbnz	w0, 4194b8 <find_percent_cached@@Base+0x620>
  4191fc:	ldr	x0, [sp, #152]
  419200:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419204:	add	x1, x1, #0x6c
  419208:	cmp	x0, x1
  41920c:	b.eq	419230 <find_percent_cached@@Base+0x398>  // b.none
  419210:	ldrb	w1, [x0]
  419214:	cmp	w1, #0x2e
  419218:	b.ne	4194b8 <find_percent_cached@@Base+0x620>  // b.any
  41921c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419220:	add	x0, x0, #0x1
  419224:	add	x1, x1, #0x6d
  419228:	bl	406be0 <strcmp@plt>
  41922c:	cbnz	w0, 4194b8 <find_percent_cached@@Base+0x620>
  419230:	ldr	x1, [sp, #120]
  419234:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  419238:	mov	w0, #0x1                   	// #1
  41923c:	mov	x6, #0x0                   	// #0
  419240:	mov	w4, #0x0                   	// #0
  419244:	mov	w3, #0x0                   	// #0
  419248:	str	w0, [x1]
  41924c:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  419250:	ldr	x0, [x23, #304]
  419254:	add	x2, x2, #0x83d
  419258:	mov	x1, #0xb                   	// #11
  41925c:	ldr	x5, [x0, #8]
  419260:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  419264:	add	x0, x0, #0x334
  419268:	bl	41f978 <define_variable_in_set@@Base>
  41926c:	ldr	x0, [x23, #304]
  419270:	mov	x6, #0x0                   	// #0
  419274:	mov	w4, #0x0                   	// #0
  419278:	mov	w3, #0x0                   	// #0
  41927c:	mov	x1, #0x7                   	// #7
  419280:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  419284:	ldr	x5, [x0, #8]
  419288:	add	x2, x2, #0x73
  41928c:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  419290:	add	x0, x0, #0xb04
  419294:	bl	41f978 <define_variable_in_set@@Base>
  419298:	ldr	x0, [x23, #304]
  41929c:	mov	x6, #0x0                   	// #0
  4192a0:	mov	w4, #0x0                   	// #0
  4192a4:	mov	w3, #0x0                   	// #0
  4192a8:	mov	x1, #0x2                   	// #2
  4192ac:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4192b0:	ldr	x5, [x0, #8]
  4192b4:	add	x2, x2, #0x77
  4192b8:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  4192bc:	add	x0, x0, #0xbbd
  4192c0:	bl	41f978 <define_variable_in_set@@Base>
  4192c4:	ldr	x0, [x23, #304]
  4192c8:	adrp	x7, 427000 <_IO_stdin_used@@Base+0x4720>
  4192cc:	add	x26, x7, #0x7b
  4192d0:	mov	x6, #0x0                   	// #0
  4192d4:	mov	x2, x26
  4192d8:	mov	w4, #0x0                   	// #0
  4192dc:	ldr	x5, [x0, #8]
  4192e0:	mov	w3, #0x0                   	// #0
  4192e4:	mov	x1, #0x6                   	// #6
  4192e8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4192ec:	add	x0, x0, #0x7f
  4192f0:	bl	41f978 <define_variable_in_set@@Base>
  4192f4:	ldr	x0, [x23, #304]
  4192f8:	mov	x6, #0x0                   	// #0
  4192fc:	mov	w4, #0x0                   	// #0
  419300:	mov	w3, #0x0                   	// #0
  419304:	mov	x1, #0x2                   	// #2
  419308:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  41930c:	ldr	x5, [x0, #8]
  419310:	add	x2, x2, #0x86
  419314:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  419318:	add	x0, x0, #0xb70
  41931c:	bl	41f978 <define_variable_in_set@@Base>
  419320:	ldr	x0, [x23, #304]
  419324:	mov	x2, x26
  419328:	mov	x6, #0x0                   	// #0
  41932c:	mov	w4, #0x0                   	// #0
  419330:	mov	w3, #0x0                   	// #0
  419334:	mov	x1, #0x6                   	// #6
  419338:	ldr	x5, [x0, #8]
  41933c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  419340:	add	x0, x0, #0x8d
  419344:	bl	41f978 <define_variable_in_set@@Base>
  419348:	ldr	x0, [x23, #304]
  41934c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  419350:	mov	x6, #0x0                   	// #0
  419354:	add	x2, x2, #0x94
  419358:	mov	w4, #0x0                   	// #0
  41935c:	mov	w3, #0x0                   	// #0
  419360:	ldr	x5, [x0, #8]
  419364:	mov	x1, #0xc                   	// #12
  419368:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41936c:	add	x0, x0, #0x97
  419370:	bl	41f978 <define_variable_in_set@@Base>
  419374:	cbz	x22, 419548 <find_percent_cached@@Base+0x6b0>
  419378:	ldr	x1, [sp, #112]
  41937c:	mov	x0, x22
  419380:	ldr	x2, [sp, #152]
  419384:	bl	40f600 <pattern_matches@@Base>
  419388:	cbnz	w0, 419548 <find_percent_cached@@Base+0x6b0>
  41938c:	ldr	x0, [sp, #152]
  419390:	bl	406700 <strlen@plt>
  419394:	mov	x23, x0
  419398:	mov	w2, #0x5                   	// #5
  41939c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4193a0:	mov	x0, #0x0                   	// #0
  4193a4:	add	x1, x1, #0xbf
  4193a8:	bl	406d60 <dcgettext@plt>
  4193ac:	mov	x2, x0
  4193b0:	ldr	x3, [sp, #152]
  4193b4:	mov	x1, x23
  4193b8:	mov	x0, x21
  4193bc:	bl	417aa8 <error@@Base>
  4193c0:	mov	x26, #0x0                   	// #0
  4193c4:	b	41955c <find_percent_cached@@Base+0x6c4>
  4193c8:	mov	x20, #0x0                   	// #0
  4193cc:	b	419160 <find_percent_cached@@Base+0x2c8>
  4193d0:	ldr	x24, [x23]
  4193d4:	mov	x0, x23
  4193d8:	bl	406c20 <free@plt>
  4193dc:	mov	x1, x24
  4193e0:	mov	w0, #0x1                   	// #1
  4193e4:	cbnz	x1, 419454 <find_percent_cached@@Base+0x5bc>
  4193e8:	ubfiz	x22, x0, #3, #16
  4193ec:	mov	x0, x22
  4193f0:	bl	416a54 <xmalloc@@Base>
  4193f4:	mov	x23, x0
  4193f8:	mov	x0, x22
  4193fc:	bl	416a54 <xmalloc@@Base>
  419400:	mov	x26, x0
  419404:	ldr	x0, [sp, #152]
  419408:	str	x0, [x23]
  41940c:	mov	w22, #0x1                   	// #1
  419410:	str	x25, [x26]
  419414:	cbnz	x24, 419464 <find_percent_cached@@Base+0x5cc>
  419418:	ldr	w3, [sp, #160]
  41941c:	mov	x5, x19
  419420:	mov	x4, x20
  419424:	mov	w2, w22
  419428:	mov	x1, x26
  41942c:	mov	x0, x23
  419430:	mov	w6, #0x1                   	// #1
  419434:	bl	41e834 <create_pattern_rule@@Base>
  419438:	ldp	x19, x20, [sp, #16]
  41943c:	ldp	x21, x22, [sp, #32]
  419440:	ldp	x23, x24, [sp, #48]
  419444:	ldp	x25, x26, [sp, #64]
  419448:	ldp	x27, x28, [sp, #80]
  41944c:	ldp	x29, x30, [sp], #160
  419450:	ret
  419454:	add	w0, w0, #0x1
  419458:	and	w0, w0, #0xffff
  41945c:	ldr	x1, [x1]
  419460:	b	4193e4 <find_percent_cached@@Base+0x54c>
  419464:	ldr	x0, [x24, #8]
  419468:	str	x0, [sp, #152]
  41946c:	add	x0, sp, #0x98
  419470:	bl	418e98 <find_percent_cached@@Base>
  419474:	mov	x1, x0
  419478:	cbnz	x0, 41948c <find_percent_cached@@Base+0x5f4>
  41947c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419480:	mov	w2, #0x5                   	// #5
  419484:	add	x1, x1, #0x4c
  419488:	b	41901c <find_percent_cached@@Base+0x184>
  41948c:	ubfiz	x0, x22, #3, #16
  419490:	add	w22, w22, #0x1
  419494:	ldr	x2, [sp, #152]
  419498:	and	w22, w22, #0xffff
  41949c:	ldr	x25, [x24]
  4194a0:	str	x2, [x23, x0]
  4194a4:	str	x1, [x26, x0]
  4194a8:	mov	x0, x24
  4194ac:	mov	x24, x25
  4194b0:	bl	406c20 <free@plt>
  4194b4:	b	419414 <find_percent_cached@@Base+0x57c>
  4194b8:	ldr	w0, [x27]
  4194bc:	cbnz	w0, 419500 <find_percent_cached@@Base+0x668>
  4194c0:	ldr	x0, [sp, #152]
  4194c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4194c8:	add	x1, x1, #0xa4
  4194cc:	cmp	x0, x1
  4194d0:	b.eq	4194f4 <find_percent_cached@@Base+0x65c>  // b.none
  4194d4:	ldrb	w1, [x0]
  4194d8:	cmp	w1, #0x2e
  4194dc:	b.ne	419500 <find_percent_cached@@Base+0x668>  // b.any
  4194e0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4194e4:	add	x0, x0, #0x1
  4194e8:	add	x1, x1, #0xa5
  4194ec:	bl	406be0 <strcmp@plt>
  4194f0:	cbnz	w0, 419500 <find_percent_cached@@Base+0x668>
  4194f4:	mov	w0, #0x1                   	// #1
  4194f8:	str	w0, [x27]
  4194fc:	b	419374 <find_percent_cached@@Base+0x4dc>
  419500:	ldr	w0, [x28]
  419504:	cbnz	w0, 419374 <find_percent_cached@@Base+0x4dc>
  419508:	ldr	x0, [sp, #152]
  41950c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419510:	add	x1, x1, #0xb5
  419514:	cmp	x0, x1
  419518:	b.eq	41953c <find_percent_cached@@Base+0x6a4>  // b.none
  41951c:	ldrb	w1, [x0]
  419520:	cmp	w1, #0x2e
  419524:	b.ne	419374 <find_percent_cached@@Base+0x4dc>  // b.any
  419528:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41952c:	add	x0, x0, #0x1
  419530:	add	x1, x1, #0xb6
  419534:	bl	406be0 <strcmp@plt>
  419538:	cbnz	w0, 419374 <find_percent_cached@@Base+0x4dc>
  41953c:	mov	w0, #0x1                   	// #1
  419540:	str	w0, [x28]
  419544:	b	419374 <find_percent_cached@@Base+0x4dc>
  419548:	cbz	x20, 4193c0 <find_percent_cached@@Base+0x528>
  41954c:	cbz	x25, 4195b0 <find_percent_cached@@Base+0x718>
  419550:	mov	x0, x20
  419554:	bl	416e28 <copy_dep_chain@@Base>
  419558:	mov	x26, x0
  41955c:	ldr	w1, [sp, #160]
  419560:	ldr	x0, [sp, #152]
  419564:	cbnz	w1, 4197b0 <find_percent_cached@@Base+0x918>
  419568:	bl	41f174 <strcache_add@@Base>
  41956c:	bl	40bec0 <enter_file@@Base>
  419570:	mov	x23, x0
  419574:	ldr	x0, [x0, #104]
  419578:	cbz	x0, 4195b8 <find_percent_cached@@Base+0x720>
  41957c:	ldr	x0, [x23]
  419580:	bl	406700 <strlen@plt>
  419584:	mov	x19, x0
  419588:	mov	w2, #0x5                   	// #5
  41958c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419590:	mov	x0, #0x0                   	// #0
  419594:	add	x1, x1, #0xec
  419598:	bl	406d60 <dcgettext@plt>
  41959c:	mov	x2, x0
  4195a0:	ldr	x3, [x23]
  4195a4:	mov	x1, x19
  4195a8:	mov	x0, x21
  4195ac:	bl	417d24 <fatal@@Base>
  4195b0:	mov	x26, x20
  4195b4:	b	41955c <find_percent_cached@@Base+0x6c4>
  4195b8:	cbz	x19, 419604 <find_percent_cached@@Base+0x76c>
  4195bc:	ldr	x0, [x23, #32]
  4195c0:	cmp	x19, x0
  4195c4:	b.ne	419724 <find_percent_cached@@Base+0x88c>  // b.any
  4195c8:	ldr	x0, [x23]
  4195cc:	bl	406700 <strlen@plt>
  4195d0:	mov	x4, x0
  4195d4:	mov	w2, #0x5                   	// #5
  4195d8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4195dc:	mov	x0, #0x0                   	// #0
  4195e0:	add	x1, x1, #0x117
  4195e4:	str	x4, [sp, #128]
  4195e8:	bl	406d60 <dcgettext@plt>
  4195ec:	ldr	x4, [sp, #128]
  4195f0:	mov	x2, x0
  4195f4:	ldr	x3, [x23]
  4195f8:	mov	x0, x21
  4195fc:	mov	x1, x4
  419600:	bl	417aa8 <error@@Base>
  419604:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  419608:	ldr	x0, [x0, #2032]
  41960c:	cmp	x23, x0
  419610:	b.ne	4197a4 <find_percent_cached@@Base+0x90c>  // b.any
  419614:	orr	x0, x19, x26
  419618:	cbnz	x0, 4197a4 <find_percent_cached@@Base+0x90c>
  41961c:	str	xzr, [x23, #32]
  419620:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  419624:	ldr	x0, [x0, #2208]
  419628:	cmp	x23, x0
  41962c:	b.ne	419640 <find_percent_cached@@Base+0x7a8>  // b.any
  419630:	cbnz	x26, 419640 <find_percent_cached@@Base+0x7a8>
  419634:	ldr	x0, [x23, #24]
  419638:	bl	416eb0 <free_ns_chain@@Base>
  41963c:	str	xzr, [x23, #24]
  419640:	ldr	w0, [sp, #108]
  419644:	cbz	w0, 419660 <find_percent_cached@@Base+0x7c8>
  419648:	mov	x0, #0x28                  	// #40
  41964c:	bl	416a78 <xcalloc@@Base>
  419650:	ldr	x1, [x23]
  419654:	stp	x24, x1, [x0]
  419658:	mov	x24, x0
  41965c:	str	x23, [x0, #16]
  419660:	ldrb	w0, [x23, #137]
  419664:	orr	w0, w0, #0x8
  419668:	strb	w0, [x23, #137]
  41966c:	cbz	x22, 4196d4 <find_percent_cached@@Base+0x83c>
  419670:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  419674:	add	x0, x0, #0x819
  419678:	bl	40ba98 <variable_expand@@Base>
  41967c:	str	x0, [sp, #128]
  419680:	ldr	x1, [sp, #112]
  419684:	mov	x2, x22
  419688:	adrp	x5, 424000 <_IO_stdin_used@@Base+0x1720>
  41968c:	adrp	x3, 424000 <_IO_stdin_used@@Base+0x1720>
  419690:	add	x4, x1, #0x1
  419694:	add	x5, x5, #0x5c0
  419698:	ldr	x1, [sp, #152]
  41969c:	add	x3, x3, #0x5bf
  4196a0:	bl	40f304 <patsubst_expand_pat@@Base>
  4196a4:	ldr	x7, [sp, #128]
  4196a8:	sub	x1, x0, x7
  4196ac:	mov	x0, x7
  4196b0:	bl	41f1b4 <strcache_add_len@@Base>
  4196b4:	str	x0, [x23, #40]
  4196b8:	mov	x1, x0
  4196bc:	cbz	x26, 4196d8 <find_percent_cached@@Base+0x840>
  4196c0:	ldrb	w0, [x26, #33]
  4196c4:	tbnz	w0, #3, 4197f0 <find_percent_cached@@Base+0x958>
  4196c8:	mov	x0, x26
  4196cc:	bl	40c660 <enter_prereqs@@Base>
  4196d0:	mov	x26, x0
  4196d4:	cbnz	x26, 4197f4 <find_percent_cached@@Base+0x95c>
  4196d8:	ldr	x0, [x23]
  4196dc:	str	x0, [sp, #152]
  4196e0:	cbz	x25, 4198a4 <find_percent_cached@@Base+0xa0c>
  4196e4:	ldr	x0, [x25, #8]
  4196e8:	str	x0, [sp, #152]
  4196ec:	add	x0, sp, #0x98
  4196f0:	bl	418e98 <find_percent_cached@@Base>
  4196f4:	cbz	x0, 41971c <find_percent_cached@@Base+0x884>
  4196f8:	mov	w2, #0x5                   	// #5
  4196fc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419700:	mov	x0, #0x0                   	// #0
  419704:	add	x1, x1, #0x1a1
  419708:	bl	406d60 <dcgettext@plt>
  41970c:	mov	x2, x0
  419710:	mov	x1, #0x0                   	// #0
  419714:	mov	x0, x21
  419718:	bl	417aa8 <error@@Base>
  41971c:	mov	x23, x25
  419720:	b	4191e4 <find_percent_cached@@Base+0x34c>
  419724:	cbz	x0, 419604 <find_percent_cached@@Base+0x76c>
  419728:	ldrb	w0, [x23, #137]
  41972c:	tbz	w0, #3, 419604 <find_percent_cached@@Base+0x76c>
  419730:	ldr	x0, [x23]
  419734:	bl	406700 <strlen@plt>
  419738:	mov	x4, x0
  41973c:	mov	w2, #0x5                   	// #5
  419740:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419744:	mov	x0, #0x0                   	// #0
  419748:	add	x1, x1, #0x149
  41974c:	str	x4, [sp, #128]
  419750:	bl	406d60 <dcgettext@plt>
  419754:	ldr	x3, [x23]
  419758:	mov	x2, x0
  41975c:	ldr	x4, [sp, #128]
  419760:	mov	x0, x19
  419764:	str	x4, [sp, #136]
  419768:	mov	x1, x4
  41976c:	bl	417aa8 <error@@Base>
  419770:	ldr	x5, [x23, #32]
  419774:	mov	w2, #0x5                   	// #5
  419778:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41977c:	mov	x0, #0x0                   	// #0
  419780:	add	x1, x1, #0x174
  419784:	str	x5, [sp, #128]
  419788:	bl	406d60 <dcgettext@plt>
  41978c:	mov	x2, x0
  419790:	ldp	x5, x4, [sp, #128]
  419794:	ldr	x3, [x23]
  419798:	mov	x1, x4
  41979c:	mov	x0, x5
  4197a0:	b	419600 <find_percent_cached@@Base+0x768>
  4197a4:	cbz	x19, 419620 <find_percent_cached@@Base+0x788>
  4197a8:	str	x19, [x23, #32]
  4197ac:	b	419620 <find_percent_cached@@Base+0x788>
  4197b0:	bl	40be54 <lookup_file@@Base>
  4197b4:	mov	x23, x0
  4197b8:	cbz	x0, 4197cc <find_percent_cached@@Base+0x934>
  4197bc:	ldrb	w0, [x0, #137]
  4197c0:	tbz	w0, #3, 4197cc <find_percent_cached@@Base+0x934>
  4197c4:	ldr	x0, [x23, #104]
  4197c8:	cbz	x0, 41957c <find_percent_cached@@Base+0x6e4>
  4197cc:	ldr	x0, [sp, #152]
  4197d0:	bl	41f174 <strcache_add@@Base>
  4197d4:	bl	40bec0 <enter_file@@Base>
  4197d8:	mov	x23, x0
  4197dc:	ldr	x0, [x0, #104]
  4197e0:	cbnz	x0, 4197e8 <find_percent_cached@@Base+0x950>
  4197e4:	str	x23, [x23, #104]
  4197e8:	str	x19, [x23, #32]
  4197ec:	b	419640 <find_percent_cached@@Base+0x7a8>
  4197f0:	str	x1, [x26, #24]
  4197f4:	ldr	x0, [x23, #24]
  4197f8:	cbnz	x0, 419804 <find_percent_cached@@Base+0x96c>
  4197fc:	str	x26, [x23, #24]
  419800:	b	4196d8 <find_percent_cached@@Base+0x840>
  419804:	cbz	x19, 419820 <find_percent_cached@@Base+0x988>
  419808:	mov	x1, x26
  41980c:	mov	x2, x1
  419810:	ldr	x1, [x1]
  419814:	cbnz	x1, 41980c <find_percent_cached@@Base+0x974>
  419818:	str	x0, [x2]
  41981c:	b	4197fc <find_percent_cached@@Base+0x964>
  419820:	mov	x1, x0
  419824:	ldr	x0, [x0]
  419828:	cbnz	x0, 419820 <find_percent_cached@@Base+0x988>
  41982c:	str	x26, [x1]
  419830:	b	4196d8 <find_percent_cached@@Base+0x840>
  419834:	ldr	x0, [x20]
  419838:	ldr	x21, [x20, #16]
  41983c:	cbz	x0, 41989c <find_percent_cached@@Base+0xa04>
  419840:	mov	x0, x24
  419844:	bl	416e28 <copy_dep_chain@@Base>
  419848:	mov	x22, x0
  41984c:	ldr	x0, [x21, #48]
  419850:	cbz	x0, 41988c <find_percent_cached@@Base+0x9f4>
  419854:	ldr	x0, [x21]
  419858:	bl	406700 <strlen@plt>
  41985c:	mov	x25, x0
  419860:	mov	x1, x23
  419864:	mov	w2, #0x5                   	// #5
  419868:	mov	x0, #0x0                   	// #0
  41986c:	bl	406d60 <dcgettext@plt>
  419870:	ldr	x3, [x21]
  419874:	mov	x2, x0
  419878:	mov	x1, x25
  41987c:	mov	x0, x19
  419880:	bl	417aa8 <error@@Base>
  419884:	ldr	x0, [x21, #48]
  419888:	bl	416eb0 <free_ns_chain@@Base>
  41988c:	ldr	x20, [x20]
  419890:	str	x22, [x21, #48]
  419894:	cbnz	x20, 419834 <find_percent_cached@@Base+0x99c>
  419898:	b	419438 <find_percent_cached@@Base+0x5a0>
  41989c:	mov	x22, x24
  4198a0:	b	41984c <find_percent_cached@@Base+0x9b4>
  4198a4:	adrp	x23, 427000 <_IO_stdin_used@@Base+0x4720>
  4198a8:	mov	x20, x24
  4198ac:	add	x23, x23, #0x1d8
  4198b0:	b	419894 <find_percent_cached@@Base+0x9fc>

00000000004198b4 <tilde_expand@@Base>:
  4198b4:	stp	x29, x30, [sp, #-48]!
  4198b8:	mov	x29, sp
  4198bc:	stp	x19, x20, [sp, #16]
  4198c0:	mov	x20, x0
  4198c4:	stp	x21, x22, [sp, #32]
  4198c8:	ldrb	w0, [x0, #1]
  4198cc:	cmp	w0, #0x2f
  4198d0:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  4198d4:	b.ne	41997c <tilde_expand@@Base+0xc8>  // b.any
  4198d8:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  4198dc:	mov	x1, #0x0                   	// #0
  4198e0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4198e4:	add	x0, x0, #0x20d
  4198e8:	ldr	w22, [x21, #2056]
  4198ec:	str	wzr, [x21, #2056]
  4198f0:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  4198f4:	str	w22, [x21, #2056]
  4198f8:	mov	x19, x0
  4198fc:	ldrb	w21, [x0]
  419900:	cbnz	w21, 419954 <tilde_expand@@Base+0xa0>
  419904:	bl	406c20 <free@plt>
  419908:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41990c:	add	x0, x0, #0x215
  419910:	bl	406e10 <getenv@plt>
  419914:	mov	x19, x0
  419918:	cbz	x0, 419924 <tilde_expand@@Base+0x70>
  41991c:	ldrb	w0, [x0]
  419920:	cbnz	w0, 419954 <tilde_expand@@Base+0xa0>
  419924:	bl	406e60 <getlogin@plt>
  419928:	cbnz	x0, 419944 <tilde_expand@@Base+0x90>
  41992c:	mov	x20, #0x0                   	// #0
  419930:	mov	x0, x20
  419934:	ldp	x19, x20, [sp, #16]
  419938:	ldp	x21, x22, [sp, #32]
  41993c:	ldp	x29, x30, [sp], #48
  419940:	ret
  419944:	bl	406a30 <getpwnam@plt>
  419948:	cbz	x0, 41992c <tilde_expand@@Base+0x78>
  41994c:	ldr	x19, [x0, #32]
  419950:	cbz	x19, 41992c <tilde_expand@@Base+0x78>
  419954:	add	x2, x20, #0x1
  419958:	mov	x1, x19
  41995c:	mov	w0, #0x2                   	// #2
  419960:	bl	416ad4 <concat@@Base>
  419964:	bl	416c24 <xstrdup@@Base>
  419968:	mov	x20, x0
  41996c:	cbz	w21, 419930 <tilde_expand@@Base+0x7c>
  419970:	mov	x0, x19
  419974:	bl	406c20 <free@plt>
  419978:	b	419930 <tilde_expand@@Base+0x7c>
  41997c:	add	x20, x20, #0x1
  419980:	mov	w1, #0x2f                  	// #47
  419984:	mov	x0, x20
  419988:	bl	406c40 <strchr@plt>
  41998c:	mov	x19, x0
  419990:	cbz	x0, 419998 <tilde_expand@@Base+0xe4>
  419994:	strb	wzr, [x0]
  419998:	mov	x0, x20
  41999c:	bl	406a30 <getpwnam@plt>
  4199a0:	mov	x20, x0
  4199a4:	cbz	x0, 4199dc <tilde_expand@@Base+0x128>
  4199a8:	ldr	x0, [x0, #32]
  4199ac:	cbnz	x19, 4199c0 <tilde_expand@@Base+0x10c>
  4199b0:	ldp	x19, x20, [sp, #16]
  4199b4:	ldp	x21, x22, [sp, #32]
  4199b8:	ldp	x29, x30, [sp], #48
  4199bc:	b	416c24 <xstrdup@@Base>
  4199c0:	mov	x1, x0
  4199c4:	add	x3, x19, #0x1
  4199c8:	adrp	x2, 423000 <_IO_stdin_used@@Base+0x720>
  4199cc:	mov	w0, #0x3                   	// #3
  4199d0:	add	x2, x2, #0xb38
  4199d4:	bl	416ad4 <concat@@Base>
  4199d8:	b	4199b0 <tilde_expand@@Base+0xfc>
  4199dc:	cbz	x19, 41992c <tilde_expand@@Base+0x78>
  4199e0:	mov	w0, #0x2f                  	// #47
  4199e4:	strb	w0, [x19]
  4199e8:	b	419930 <tilde_expand@@Base+0x7c>

00000000004199ec <construct_include_path@@Base>:
  4199ec:	stp	x29, x30, [sp, #-208]!
  4199f0:	mov	x29, sp
  4199f4:	stp	x19, x20, [sp, #16]
  4199f8:	stp	x21, x22, [sp, #32]
  4199fc:	mov	x22, x0
  419a00:	stp	x23, x24, [sp, #48]
  419a04:	str	x25, [sp, #64]
  419a08:	cbnz	x0, 419a88 <construct_include_path@@Base+0x9c>
  419a0c:	mov	x0, #0x5                   	// #5
  419a10:	adrp	x20, 440000 <output_context@@Base+0x1248>
  419a14:	lsl	x0, x0, #3
  419a18:	bl	416a54 <xmalloc@@Base>
  419a1c:	mov	x19, #0x0                   	// #0
  419a20:	str	xzr, [x20, #3520]
  419a24:	mov	x23, x0
  419a28:	cbnz	x22, 419ae4 <construct_include_path@@Base+0xf8>
  419a2c:	adrp	x21, 43e000 <expanding_var@@Base+0x328>
  419a30:	add	x21, x21, #0xc0
  419a34:	ldr	x0, [x21, #8]
  419a38:	add	x21, x21, #0x8
  419a3c:	cbnz	x0, 419b5c <construct_include_path@@Base+0x170>
  419a40:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x4720>
  419a44:	add	x21, x21, #0x21a
  419a48:	str	xzr, [x23, x19, lsl #3]
  419a4c:	mov	x19, x23
  419a50:	ldr	x2, [x19]
  419a54:	cbnz	x2, 419bec <construct_include_path@@Base+0x200>
  419a58:	add	x20, x20, #0xdc0
  419a5c:	ldp	x21, x22, [sp, #32]
  419a60:	str	x23, [x20, #8]
  419a64:	ldp	x19, x20, [sp, #16]
  419a68:	ldp	x23, x24, [sp, #48]
  419a6c:	ldr	x25, [sp, #64]
  419a70:	ldp	x29, x30, [sp], #208
  419a74:	ret
  419a78:	add	x0, x0, #0x1
  419a7c:	ldr	x1, [x2, x0, lsl #3]
  419a80:	cbnz	x1, 419a78 <construct_include_path@@Base+0x8c>
  419a84:	b	419a10 <construct_include_path@@Base+0x24>
  419a88:	sub	x2, x22, #0x28
  419a8c:	mov	x0, #0x5                   	// #5
  419a90:	b	419a7c <construct_include_path@@Base+0x90>
  419a94:	ldrb	w0, [x21]
  419a98:	add	x22, x22, #0x8
  419a9c:	cmp	w0, #0x7e
  419aa0:	b.ne	419af0 <construct_include_path@@Base+0x104>  // b.any
  419aa4:	mov	x0, x21
  419aa8:	bl	4198b4 <tilde_expand@@Base>
  419aac:	cmp	x0, #0x0
  419ab0:	mov	x24, x0
  419ab4:	csel	x21, x21, x0, eq  // eq = none
  419ab8:	add	x1, sp, #0x50
  419abc:	mov	x0, x21
  419ac0:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  419ac4:	cmn	w0, #0x1
  419ac8:	b.ne	419af8 <construct_include_path@@Base+0x10c>  // b.any
  419acc:	bl	406e00 <__errno_location@plt>
  419ad0:	ldr	w0, [x0]
  419ad4:	cmp	w0, #0x4
  419ad8:	b.eq	419ab8 <construct_include_path@@Base+0xcc>  // b.none
  419adc:	mov	x0, x24
  419ae0:	bl	406c20 <free@plt>
  419ae4:	ldr	x21, [x22]
  419ae8:	cbnz	x21, 419a94 <construct_include_path@@Base+0xa8>
  419aec:	b	419a2c <construct_include_path@@Base+0x40>
  419af0:	mov	x24, #0x0                   	// #0
  419af4:	b	419ab8 <construct_include_path@@Base+0xcc>
  419af8:	cbnz	w0, 419adc <construct_include_path@@Base+0xf0>
  419afc:	ldr	w0, [sp, #96]
  419b00:	and	w0, w0, #0xf000
  419b04:	cmp	w0, #0x4, lsl #12
  419b08:	b.ne	419adc <construct_include_path@@Base+0xf0>  // b.any
  419b0c:	mov	x0, x21
  419b10:	bl	406700 <strlen@plt>
  419b14:	mov	x1, x0
  419b18:	cmp	x0, #0x1
  419b1c:	b.ls	419b30 <construct_include_path@@Base+0x144>  // b.plast
  419b20:	sub	x0, x0, #0x1
  419b24:	ldrb	w2, [x21, x0]
  419b28:	cmp	w2, #0x2f
  419b2c:	b.eq	419b14 <construct_include_path@@Base+0x128>  // b.none
  419b30:	ldr	x0, [x20, #3520]
  419b34:	cmp	x0, x1
  419b38:	b.cs	419b40 <construct_include_path@@Base+0x154>  // b.hs, b.nlast
  419b3c:	str	x1, [x20, #3520]
  419b40:	add	x25, x19, #0x1
  419b44:	lsl	x19, x19, #3
  419b48:	mov	x0, x21
  419b4c:	bl	41f1b4 <strcache_add_len@@Base>
  419b50:	str	x0, [x23, x19]
  419b54:	mov	x19, x25
  419b58:	b	419adc <construct_include_path@@Base+0xf0>
  419b5c:	ldr	x0, [x21]
  419b60:	add	x1, sp, #0x50
  419b64:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  419b68:	cmn	w0, #0x1
  419b6c:	b.ne	419b84 <construct_include_path@@Base+0x198>  // b.any
  419b70:	bl	406e00 <__errno_location@plt>
  419b74:	ldr	w0, [x0]
  419b78:	cmp	w0, #0x4
  419b7c:	b.eq	419b5c <construct_include_path@@Base+0x170>  // b.none
  419b80:	b	419a34 <construct_include_path@@Base+0x48>
  419b84:	cbnz	w0, 419a34 <construct_include_path@@Base+0x48>
  419b88:	ldr	w0, [sp, #96]
  419b8c:	and	w0, w0, #0xf000
  419b90:	cmp	w0, #0x4, lsl #12
  419b94:	b.ne	419a34 <construct_include_path@@Base+0x48>  // b.any
  419b98:	ldr	x22, [x21]
  419b9c:	mov	x0, x22
  419ba0:	bl	406700 <strlen@plt>
  419ba4:	mov	x1, x0
  419ba8:	cmp	x0, #0x1
  419bac:	b.ls	419bc0 <construct_include_path@@Base+0x1d4>  // b.plast
  419bb0:	sub	x0, x0, #0x1
  419bb4:	ldrb	w2, [x22, x0]
  419bb8:	cmp	w2, #0x2f
  419bbc:	b.eq	419ba4 <construct_include_path@@Base+0x1b8>  // b.none
  419bc0:	ldr	x0, [x20, #3520]
  419bc4:	cmp	x0, x1
  419bc8:	b.cs	419bd0 <construct_include_path@@Base+0x1e4>  // b.hs, b.nlast
  419bcc:	str	x1, [x20, #3520]
  419bd0:	add	x24, x19, #0x1
  419bd4:	lsl	x19, x19, #3
  419bd8:	mov	x0, x22
  419bdc:	bl	41f1b4 <strcache_add_len@@Base>
  419be0:	str	x0, [x23, x19]
  419be4:	mov	x19, x24
  419be8:	b	419a34 <construct_include_path@@Base+0x48>
  419bec:	mov	x1, x21
  419bf0:	mov	w5, #0x0                   	// #0
  419bf4:	mov	w4, #0x3                   	// #3
  419bf8:	mov	w3, #0x0                   	// #0
  419bfc:	mov	x0, #0x0                   	// #0
  419c00:	add	x19, x19, #0x8
  419c04:	bl	420878 <do_variable_definition@@Base>
  419c08:	b	419a50 <construct_include_path@@Base+0x64>

0000000000419c0c <parse_file_seq@@Base>:
  419c0c:	stp	x29, x30, [sp, #-288]!
  419c10:	mov	x29, sp
  419c14:	stp	x21, x22, [sp, #32]
  419c18:	mov	w22, w4
  419c1c:	str	x0, [sp, #120]
  419c20:	and	w0, w4, #0x10
  419c24:	tst	x22, #0x20
  419c28:	str	w0, [sp, #108]
  419c2c:	orr	w0, w2, #0x1
  419c30:	orr	w2, w2, #0x3
  419c34:	str	w0, [sp, #144]
  419c38:	csel	w0, w2, w0, eq  // eq = none
  419c3c:	cmp	x1, #0x10
  419c40:	stp	x19, x20, [sp, #16]
  419c44:	stp	x23, x24, [sp, #48]
  419c48:	mov	x23, #0x10                  	// #16
  419c4c:	mov	x24, x3
  419c50:	stp	x25, x26, [sp, #64]
  419c54:	csel	x23, x1, x23, cs  // cs = hs, nlast
  419c58:	stp	x27, x28, [sp, #80]
  419c5c:	str	w0, [sp, #140]
  419c60:	and	w0, w4, #0x4
  419c64:	str	w0, [sp, #148]
  419c68:	str	xzr, [sp, #184]
  419c6c:	tbnz	w22, #2, 419c78 <parse_file_seq@@Base+0x6c>
  419c70:	add	x0, sp, #0xd8
  419c74:	bl	40b050 <dir_setup_glob@@Base>
  419c78:	ldr	x0, [sp, #120]
  419c7c:	adrp	x25, 440000 <output_context@@Base+0x1248>
  419c80:	add	x25, x25, #0xdc0
  419c84:	ldr	x0, [x0]
  419c88:	bl	406700 <strlen@plt>
  419c8c:	add	x19, x0, #0x1
  419c90:	ldr	x0, [x25, #16]
  419c94:	cmp	x0, x19
  419c98:	b.cs	419cac <parse_file_seq@@Base+0xa0>  // b.hs, b.nlast
  419c9c:	ldr	x0, [x25, #24]
  419ca0:	mov	x1, x19
  419ca4:	bl	416aa0 <xrealloc@@Base>
  419ca8:	stp	x19, x0, [x25, #16]
  419cac:	add	x20, sp, #0xb8
  419cb0:	ldr	x0, [sp, #120]
  419cb4:	ldr	x19, [x25, #24]
  419cb8:	ldr	x21, [x0]
  419cbc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  419cc0:	add	x0, x0, #0x454
  419cc4:	str	x0, [sp, #128]
  419cc8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  419ccc:	add	x0, x0, #0xf67
  419cd0:	str	x0, [sp, #160]
  419cd4:	mov	x26, x21
  419cd8:	stp	xzr, xzr, [sp, #200]
  419cdc:	ldrb	w0, [x26]
  419ce0:	ldr	x1, [sp, #128]
  419ce4:	ldrh	w0, [x1, x0, lsl #1]
  419ce8:	tst	w0, #0x6
  419cec:	b.ne	419e24 <parse_file_seq@@Base+0x218>  // b.any
  419cf0:	ldr	w1, [sp, #144]
  419cf4:	tst	w0, w1
  419cf8:	b.ne	41a10c <parse_file_seq@@Base+0x500>  // b.any
  419cfc:	ldr	w1, [sp, #140]
  419d00:	mov	x0, x26
  419d04:	bl	418890 <out_of_memory@@Base+0x9e8>
  419d08:	mov	x21, x0
  419d0c:	cbnz	x0, 419d1c <parse_file_seq@@Base+0x110>
  419d10:	mov	x0, x26
  419d14:	bl	406700 <strlen@plt>
  419d18:	add	x21, x26, x0
  419d1c:	tbnz	w22, #0, 419d44 <parse_file_seq@@Base+0x138>
  419d20:	sub	x0, x21, x26
  419d24:	cmp	x0, #0x2
  419d28:	b.le	419d44 <parse_file_seq@@Base+0x138>
  419d2c:	ldrb	w0, [x26]
  419d30:	cmp	w0, #0x2e
  419d34:	b.ne	419d44 <parse_file_seq@@Base+0x138>  // b.any
  419d38:	ldrb	w0, [x26, #1]
  419d3c:	cmp	w0, #0x2f
  419d40:	b.eq	419e2c <parse_file_seq@@Base+0x220>  // b.none
  419d44:	cmp	x21, x26
  419d48:	b.ne	419e44 <parse_file_seq@@Base+0x238>  // b.any
  419d4c:	mov	w0, #0x2f2e                	// #12078
  419d50:	mov	x28, #0x2                   	// #2
  419d54:	strh	w0, [x19]
  419d58:	strb	wzr, [x19, #2]
  419d5c:	and	w26, w22, #0x2
  419d60:	ldr	x27, [x25, #24]
  419d64:	tbnz	w22, #1, 419dfc <parse_file_seq@@Base+0x1f0>
  419d68:	cmp	x19, x27
  419d6c:	b.ne	419dfc <parse_file_seq@@Base+0x1f0>  // b.any
  419d70:	ldrb	w0, [x19]
  419d74:	cmp	w0, #0x28
  419d78:	b.eq	419e90 <parse_file_seq@@Base+0x284>  // b.none
  419d7c:	add	x0, x19, x28
  419d80:	ldurb	w0, [x0, #-1]
  419d84:	cmp	w0, #0x29
  419d88:	b.eq	419e90 <parse_file_seq@@Base+0x284>  // b.none
  419d8c:	mov	x0, x19
  419d90:	mov	w1, #0x28                  	// #40
  419d94:	bl	406c40 <strchr@plt>
  419d98:	cbz	x0, 419e90 <parse_file_seq@@Base+0x284>
  419d9c:	mov	x2, x21
  419da0:	mov	x1, x2
  419da4:	ldrb	w3, [x1]
  419da8:	ldr	x4, [sp, #128]
  419dac:	ldrh	w3, [x4, x3, lsl #1]
  419db0:	tst	w3, #0x6
  419db4:	b.ne	419e68 <parse_file_seq@@Base+0x25c>  // b.any
  419db8:	ldrb	w4, [x1]
  419dbc:	ldr	x5, [sp, #128]
  419dc0:	ldrb	w3, [x1]
  419dc4:	ldrh	w4, [x5, x4, lsl #1]
  419dc8:	ldr	w5, [sp, #140]
  419dcc:	tst	w4, w5
  419dd0:	b.eq	419e70 <parse_file_seq@@Base+0x264>  // b.none
  419dd4:	cmp	x2, x1
  419dd8:	b.eq	419e7c <parse_file_seq@@Base+0x270>  // b.none
  419ddc:	ldurb	w2, [x1, #-1]
  419de0:	cmp	w2, #0x29
  419de4:	b.ne	419e78 <parse_file_seq@@Base+0x26c>  // b.any
  419de8:	add	x0, x0, #0x1
  419dec:	sub	x19, x0, x19
  419df0:	subs	x28, x28, x19
  419df4:	b.eq	419ed4 <parse_file_seq@@Base+0x2c8>  // b.none
  419df8:	mov	x19, x0
  419dfc:	cmp	x19, x27
  419e00:	b.ls	419e90 <parse_file_seq@@Base+0x284>  // b.plast
  419e04:	add	x0, x19, x28
  419e08:	ldurb	w1, [x0, #-1]
  419e0c:	cmp	w1, #0x29
  419e10:	b.ne	419e84 <parse_file_seq@@Base+0x278>  // b.any
  419e14:	cmp	x28, #0x1
  419e18:	b.ne	419e7c <parse_file_seq@@Base+0x270>  // b.any
  419e1c:	mov	x0, x27
  419e20:	b	419ed4 <parse_file_seq@@Base+0x2c8>
  419e24:	add	x26, x26, #0x1
  419e28:	b	419cdc <parse_file_seq@@Base+0xd0>
  419e2c:	add	x26, x26, #0x2
  419e30:	ldrb	w0, [x26]
  419e34:	cmp	w0, #0x2f
  419e38:	b.ne	419d20 <parse_file_seq@@Base+0x114>  // b.any
  419e3c:	add	x26, x26, #0x1
  419e40:	b	419e30 <parse_file_seq@@Base+0x224>
  419e44:	sub	x28, x21, x26
  419e48:	mov	x1, x26
  419e4c:	mov	x2, x28
  419e50:	mov	x0, x19
  419e54:	bl	4066c0 <memcpy@plt>
  419e58:	strb	wzr, [x19, x28]
  419e5c:	b	419d5c <parse_file_seq@@Base+0x150>
  419e60:	mov	x2, x1
  419e64:	b	419da0 <parse_file_seq@@Base+0x194>
  419e68:	add	x1, x1, #0x1
  419e6c:	b	419da4 <parse_file_seq@@Base+0x198>
  419e70:	add	x1, x1, #0x1
  419e74:	b	419db8 <parse_file_seq@@Base+0x1ac>
  419e78:	cbnz	w3, 419e60 <parse_file_seq@@Base+0x254>
  419e7c:	mov	x19, x27
  419e80:	b	419e90 <parse_file_seq@@Base+0x284>
  419e84:	mov	w1, #0x29                  	// #41
  419e88:	strb	w1, [x19, x28]
  419e8c:	strb	wzr, [x0, #1]
  419e90:	ldr	w0, [sp, #148]
  419e94:	cbz	w0, 419ee8 <parse_file_seq@@Base+0x2dc>
  419e98:	mov	x2, x27
  419e9c:	mov	x1, x24
  419ea0:	mov	w0, #0x2                   	// #2
  419ea4:	bl	416ad4 <concat@@Base>
  419ea8:	mov	x26, x0
  419eac:	mov	x0, x23
  419eb0:	bl	416a78 <xcalloc@@Base>
  419eb4:	str	x0, [x20]
  419eb8:	ldr	w0, [sp, #108]
  419ebc:	cbnz	w0, 419edc <parse_file_seq@@Base+0x2d0>
  419ec0:	mov	x0, x26
  419ec4:	bl	41f174 <strcache_add@@Base>
  419ec8:	ldr	x20, [x20]
  419ecc:	str	x0, [x20, #8]
  419ed0:	mov	x0, x19
  419ed4:	mov	x19, x0
  419ed8:	b	419cd4 <parse_file_seq@@Base+0xc8>
  419edc:	mov	x0, x26
  419ee0:	bl	416c24 <xstrdup@@Base>
  419ee4:	b	419ec8 <parse_file_seq@@Base+0x2bc>
  419ee8:	ldrb	w0, [x27]
  419eec:	str	x27, [sp, #192]
  419ef0:	cmp	w0, #0x7e
  419ef4:	b.ne	419f94 <parse_file_seq@@Base+0x388>  // b.any
  419ef8:	mov	x0, x27
  419efc:	bl	4198b4 <tilde_expand@@Base>
  419f00:	str	x0, [sp, #112]
  419f04:	cbz	x0, 419f0c <parse_file_seq@@Base+0x300>
  419f08:	str	x0, [sp, #192]
  419f0c:	cbnz	w26, 419f38 <parse_file_seq@@Base+0x32c>
  419f10:	ldr	x26, [sp, #192]
  419f14:	mov	x0, x26
  419f18:	bl	408a20 <ar_name@@Base>
  419f1c:	cbz	w0, 419f38 <parse_file_seq@@Base+0x32c>
  419f20:	mov	x0, x26
  419f24:	add	x2, sp, #0xd0
  419f28:	add	x1, sp, #0xc8
  419f2c:	bl	408ad4 <ar_parse_name@@Base>
  419f30:	ldr	x0, [sp, #200]
  419f34:	str	x0, [sp, #192]
  419f38:	and	w26, w22, #0x8
  419f3c:	ldr	x28, [sp, #192]
  419f40:	tbnz	w22, #3, 419f58 <parse_file_seq@@Base+0x34c>
  419f44:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  419f48:	mov	x0, x28
  419f4c:	add	x1, x1, #0x228
  419f50:	bl	406a10 <strpbrk@plt>
  419f54:	cbz	x0, 419ff8 <parse_file_seq@@Base+0x3ec>
  419f58:	add	x3, sp, #0xd8
  419f5c:	mov	x0, x28
  419f60:	mov	x2, #0x0                   	// #0
  419f64:	mov	w1, #0x200                 	// #512
  419f68:	bl	406d90 <glob@plt>
  419f6c:	cmp	w0, #0x1
  419f70:	b.eq	419f9c <parse_file_seq@@Base+0x390>  // b.none
  419f74:	cmp	w0, #0x3
  419f78:	b.eq	419fe8 <parse_file_seq@@Base+0x3dc>  // b.none
  419f7c:	cbz	w0, 419fa0 <parse_file_seq@@Base+0x394>
  419f80:	mov	w26, #0x1                   	// #1
  419f84:	str	w26, [sp, #136]
  419f88:	add	x0, sp, #0xc0
  419f8c:	str	x0, [sp, #96]
  419f90:	b	419fb4 <parse_file_seq@@Base+0x3a8>
  419f94:	str	xzr, [sp, #112]
  419f98:	b	419f0c <parse_file_seq@@Base+0x300>
  419f9c:	bl	417ea8 <out_of_memory@@Base>
  419fa0:	ldr	w0, [sp, #216]
  419fa4:	mov	w26, #0x1                   	// #1
  419fa8:	str	w0, [sp, #136]
  419fac:	ldr	x0, [sp, #224]
  419fb0:	str	x0, [sp, #96]
  419fb4:	adrp	x0, 422000 <fd_inherit@@Base+0x20>
  419fb8:	mov	x27, #0x0                   	// #0
  419fbc:	add	x0, x0, #0x8f8
  419fc0:	str	x0, [sp, #152]
  419fc4:	ldr	w0, [sp, #136]
  419fc8:	cmp	w0, w27
  419fcc:	b.gt	41a004 <parse_file_seq@@Base+0x3f8>
  419fd0:	cbnz	w26, 419fec <parse_file_seq@@Base+0x3e0>
  419fd4:	ldr	x0, [sp, #200]
  419fd8:	bl	406c20 <free@plt>
  419fdc:	ldr	x0, [sp, #112]
  419fe0:	bl	406c20 <free@plt>
  419fe4:	b	419cd4 <parse_file_seq@@Base+0xc8>
  419fe8:	cbz	w26, 419f80 <parse_file_seq@@Base+0x374>
  419fec:	add	x0, sp, #0xd8
  419ff0:	bl	406c50 <globfree@plt>
  419ff4:	b	419fd4 <parse_file_seq@@Base+0x3c8>
  419ff8:	mov	w0, #0x1                   	// #1
  419ffc:	str	w0, [sp, #136]
  41a000:	b	419f88 <parse_file_seq@@Base+0x37c>
  41a004:	ldr	x0, [sp, #96]
  41a008:	ldr	x1, [sp, #208]
  41a00c:	ldr	x0, [x0, x27, lsl #3]
  41a010:	cbz	x1, 41a0ec <parse_file_seq@@Base+0x4e0>
  41a014:	mov	x2, x23
  41a018:	bl	408cf4 <ar_glob@@Base>
  41a01c:	mov	x3, x0
  41a020:	cbnz	x0, 41a074 <parse_file_seq@@Base+0x468>
  41a024:	ldr	x0, [sp, #96]
  41a028:	mov	x1, x24
  41a02c:	ldp	x3, x5, [sp, #152]
  41a030:	ldr	x2, [x0, x27, lsl #3]
  41a034:	mov	w0, #0x5                   	// #5
  41a038:	ldr	x4, [sp, #208]
  41a03c:	bl	416ad4 <concat@@Base>
  41a040:	mov	x1, x0
  41a044:	mov	x0, x23
  41a048:	str	x1, [sp, #168]
  41a04c:	bl	416a78 <xcalloc@@Base>
  41a050:	str	x0, [x20]
  41a054:	ldr	w0, [sp, #108]
  41a058:	ldr	x1, [sp, #168]
  41a05c:	cbnz	w0, 41a100 <parse_file_seq@@Base+0x4f4>
  41a060:	mov	x0, x1
  41a064:	bl	41f174 <strcache_add@@Base>
  41a068:	ldr	x20, [x20]
  41a06c:	str	x0, [x20, #8]
  41a070:	b	41a0b4 <parse_file_seq@@Base+0x4a8>
  41a074:	ldr	x0, [x20]
  41a078:	cbz	x0, 41a0bc <parse_file_seq@@Base+0x4b0>
  41a07c:	str	x3, [x0]
  41a080:	ldr	w0, [sp, #108]
  41a084:	cbz	w0, 41a0cc <parse_file_seq@@Base+0x4c0>
  41a088:	mov	x2, x28
  41a08c:	mov	x1, x24
  41a090:	mov	w0, #0x2                   	// #2
  41a094:	str	x3, [sp, #168]
  41a098:	bl	416ad4 <concat@@Base>
  41a09c:	bl	416c24 <xstrdup@@Base>
  41a0a0:	ldr	x3, [sp, #168]
  41a0a4:	str	x0, [x3, #8]
  41a0a8:	ldr	x0, [x3]
  41a0ac:	cbnz	x0, 41a0c4 <parse_file_seq@@Base+0x4b8>
  41a0b0:	mov	x20, x3
  41a0b4:	add	x27, x27, #0x1
  41a0b8:	b	419fc4 <parse_file_seq@@Base+0x3b8>
  41a0bc:	str	x3, [x20]
  41a0c0:	b	41a080 <parse_file_seq@@Base+0x474>
  41a0c4:	mov	x3, x0
  41a0c8:	b	41a080 <parse_file_seq@@Base+0x474>
  41a0cc:	cbz	x24, 41a0a8 <parse_file_seq@@Base+0x49c>
  41a0d0:	mov	x2, x28
  41a0d4:	mov	x1, x24
  41a0d8:	mov	w0, #0x2                   	// #2
  41a0dc:	str	x3, [sp, #168]
  41a0e0:	bl	416ad4 <concat@@Base>
  41a0e4:	bl	41f174 <strcache_add@@Base>
  41a0e8:	b	41a0a0 <parse_file_seq@@Base+0x494>
  41a0ec:	mov	x2, x0
  41a0f0:	mov	x1, x24
  41a0f4:	mov	w0, #0x2                   	// #2
  41a0f8:	bl	416ad4 <concat@@Base>
  41a0fc:	b	41a040 <parse_file_seq@@Base+0x434>
  41a100:	mov	x0, x1
  41a104:	bl	416c24 <xstrdup@@Base>
  41a108:	b	41a068 <parse_file_seq@@Base+0x45c>
  41a10c:	ldr	x0, [sp, #120]
  41a110:	ldp	x19, x20, [sp, #16]
  41a114:	ldp	x21, x22, [sp, #32]
  41a118:	ldp	x23, x24, [sp, #48]
  41a11c:	ldp	x27, x28, [sp, #80]
  41a120:	str	x26, [x0]
  41a124:	ldp	x25, x26, [sp, #64]
  41a128:	ldr	x0, [sp, #184]
  41a12c:	ldp	x29, x30, [sp], #288
  41a130:	ret
  41a134:	sub	sp, sp, #0x1a0
  41a138:	stp	x29, x30, [sp, #32]
  41a13c:	add	x29, sp, #0x20
  41a140:	stp	x23, x24, [sp, #80]
  41a144:	mov	x23, x0
  41a148:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41a14c:	stp	x19, x20, [sp, #48]
  41a150:	add	x24, x23, #0x28
  41a154:	ldrb	w0, [x0, #164]
  41a158:	str	w0, [sp, #156]
  41a15c:	mov	x20, #0x0                   	// #0
  41a160:	ldr	x0, [x23, #40]
  41a164:	stp	x21, x22, [sp, #64]
  41a168:	mov	x19, #0x0                   	// #0
  41a16c:	stp	x25, x26, [sp, #96]
  41a170:	mov	w22, #0x0                   	// #0
  41a174:	mov	w25, #0x0                   	// #0
  41a178:	stp	x27, x28, [sp, #112]
  41a17c:	mov	x21, #0x0                   	// #0
  41a180:	mov	w28, #0x0                   	// #0
  41a184:	str	w1, [sp, #236]
  41a188:	str	x0, [sp, #320]
  41a18c:	mov	x0, #0xc8                  	// #200
  41a190:	bl	416a54 <xmalloc@@Base>
  41a194:	stp	x0, xzr, [sp, #128]
  41a198:	mov	w0, #0x1                   	// #1
  41a19c:	str	xzr, [sp, #144]
  41a1a0:	str	w0, [sp, #152]
  41a1a4:	str	w0, [sp, #160]
  41a1a8:	mov	x0, #0xc8                  	// #200
  41a1ac:	str	wzr, [sp, #164]
  41a1b0:	str	xzr, [sp, #168]
  41a1b4:	str	x0, [sp, #184]
  41a1b8:	stp	xzr, xzr, [sp, #216]
  41a1bc:	str	wzr, [sp, #232]
  41a1c0:	ldr	x0, [x23, #48]
  41a1c4:	ldr	x1, [sp, #216]
  41a1c8:	add	x0, x0, x1
  41a1cc:	str	x0, [x23, #48]
  41a1d0:	mov	x0, x23
  41a1d4:	bl	418af0 <out_of_memory@@Base+0xc48>
  41a1d8:	str	x0, [sp, #216]
  41a1dc:	tbnz	x0, #63, 41b71c <parse_file_seq@@Base+0x1b10>
  41a1e0:	ldr	x0, [x23, #48]
  41a1e4:	ldr	x26, [x23]
  41a1e8:	cmp	x0, #0x1
  41a1ec:	b.ne	41a248 <parse_file_seq@@Base+0x63c>  // b.any
  41a1f0:	ldrb	w0, [x26]
  41a1f4:	cmp	w0, #0xef
  41a1f8:	b.ne	41a248 <parse_file_seq@@Base+0x63c>  // b.any
  41a1fc:	ldrb	w0, [x26, #1]
  41a200:	cmp	w0, #0xbb
  41a204:	b.ne	41a248 <parse_file_seq@@Base+0x63c>  // b.any
  41a208:	ldrb	w0, [x26, #2]
  41a20c:	cmp	w0, #0xbf
  41a210:	b.ne	41a248 <parse_file_seq@@Base+0x63c>  // b.any
  41a214:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41a218:	add	x26, x26, #0x3
  41a21c:	ldr	w0, [x0, #1104]
  41a220:	tbz	w0, #0, 41a248 <parse_file_seq@@Base+0x63c>
  41a224:	ldr	x0, [x23, #40]
  41a228:	mov	w2, #0x5                   	// #5
  41a22c:	cbz	x0, 41a2e4 <parse_file_seq@@Base+0x6d8>
  41a230:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a234:	mov	x0, #0x0                   	// #0
  41a238:	add	x1, x1, #0x22c
  41a23c:	bl	406d60 <dcgettext@plt>
  41a240:	ldr	x1, [x23, #40]
  41a244:	bl	406df0 <printf@plt>
  41a248:	ldrb	w27, [x26]
  41a24c:	cbz	w27, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a250:	mov	x0, x26
  41a254:	bl	406700 <strlen@plt>
  41a258:	mov	x2, x0
  41a25c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41a260:	ldrb	w0, [x0, #164]
  41a264:	cmp	w0, w27
  41a268:	b.ne	41a2fc <parse_file_seq@@Base+0x6f0>  // b.any
  41a26c:	cbnz	w25, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a270:	cbz	x19, 41a2fc <parse_file_seq@@Base+0x6f0>
  41a274:	ldr	w0, [sp, #232]
  41a278:	cbnz	w0, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a27c:	cbnz	x21, 41a288 <parse_file_seq@@Base+0x67c>
  41a280:	ldr	w0, [x23, #48]
  41a284:	str	w0, [sp, #152]
  41a288:	ldr	x0, [sp, #184]
  41a28c:	add	x27, x21, x2
  41a290:	cmp	x27, x0
  41a294:	b.ls	41a2b4 <parse_file_seq@@Base+0x6a8>  // b.plast
  41a298:	lsl	x0, x27, #1
  41a29c:	stp	x2, x0, [sp, #176]
  41a2a0:	mov	x1, x0
  41a2a4:	ldr	x0, [sp, #128]
  41a2a8:	bl	416aa0 <xrealloc@@Base>
  41a2ac:	str	x0, [sp, #128]
  41a2b0:	ldr	x2, [sp, #176]
  41a2b4:	add	x1, x26, #0x1
  41a2b8:	ldr	x0, [sp, #128]
  41a2bc:	sub	x2, x2, #0x1
  41a2c0:	mov	w25, #0x0                   	// #0
  41a2c4:	add	x0, x0, x21
  41a2c8:	bl	4066c0 <memcpy@plt>
  41a2cc:	ldr	x0, [sp, #128]
  41a2d0:	mov	w1, #0xa                   	// #10
  41a2d4:	mov	x21, x27
  41a2d8:	add	x0, x0, x27
  41a2dc:	sturb	w1, [x0, #-1]
  41a2e0:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41a2e4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a2e8:	add	x1, x1, #0x251
  41a2ec:	mov	x0, #0x0                   	// #0
  41a2f0:	bl	406d60 <dcgettext@plt>
  41a2f4:	bl	406df0 <printf@plt>
  41a2f8:	b	41a248 <parse_file_seq@@Base+0x63c>
  41a2fc:	ldr	x0, [sp, #224]
  41a300:	add	x27, x2, #0x1
  41a304:	cmp	x27, x0
  41a308:	b.ls	41a324 <parse_file_seq@@Base+0x718>  // b.plast
  41a30c:	ldr	x0, [sp, #168]
  41a310:	bl	406c20 <free@plt>
  41a314:	mov	x0, x27
  41a318:	bl	416a54 <xmalloc@@Base>
  41a31c:	str	x0, [sp, #168]
  41a320:	str	x27, [sp, #224]
  41a324:	ldr	x0, [sp, #168]
  41a328:	mov	x1, x26
  41a32c:	bl	406cc0 <strcpy@plt>
  41a330:	ldr	x0, [sp, #168]
  41a334:	bl	4168c0 <collapse_continuations@@Base>
  41a338:	ldr	x0, [sp, #168]
  41a33c:	mov	w1, #0x4008                	// #16392
  41a340:	bl	418890 <out_of_memory@@Base+0x9e8>
  41a344:	cbz	x0, 41a34c <parse_file_seq@@Base+0x740>
  41a348:	strb	wzr, [x0]
  41a34c:	ldr	x0, [sp, #168]
  41a350:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41a354:	add	x1, x1, #0x454
  41a358:	str	x1, [sp, #176]
  41a35c:	ldrb	w1, [x0]
  41a360:	ldr	x2, [sp, #176]
  41a364:	ldrh	w1, [x2, x1, lsl #1]
  41a368:	tst	w1, #0x6
  41a36c:	b.ne	41a3a8 <parse_file_seq@@Base+0x79c>  // b.any
  41a370:	add	x1, sp, #0x120
  41a374:	bl	418cfc <out_of_memory@@Base+0xe54>
  41a378:	ldrb	w1, [sp, #288]
  41a37c:	mov	x27, x0
  41a380:	tbz	w1, #0, 41a7b8 <parse_file_seq@@Base+0xbac>
  41a384:	mov	w0, #0x5                   	// #5
  41a388:	tst	x1, #0x10
  41a38c:	mov	w26, #0x2                   	// #2
  41a390:	csel	w26, w0, w26, ne  // ne = any
  41a394:	ldr	w0, [sp, #232]
  41a398:	cbz	w0, 41a3b0 <parse_file_seq@@Base+0x7a4>
  41a39c:	tst	x1, #0x2
  41a3a0:	csinc	w28, w28, wzr, eq  // eq = none
  41a3a4:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41a3a8:	add	x0, x0, #0x1
  41a3ac:	b	41a35c <parse_file_seq@@Base+0x750>
  41a3b0:	cbz	x19, 41a3f4 <parse_file_seq@@Base+0x7e8>
  41a3b4:	ldr	w0, [sp, #160]
  41a3b8:	mov	x7, x21
  41a3bc:	ldp	x6, x4, [sp, #128]
  41a3c0:	stp	x0, xzr, [sp, #328]
  41a3c4:	add	x0, sp, #0x140
  41a3c8:	ldr	w5, [sp, #152]
  41a3cc:	mov	x2, x20
  41a3d0:	str	x0, [sp, #16]
  41a3d4:	mov	w1, w22
  41a3d8:	ldrb	w0, [sp, #156]
  41a3dc:	ldr	x3, [sp, #144]
  41a3e0:	strb	w0, [sp, #8]
  41a3e4:	ldr	w0, [sp, #164]
  41a3e8:	str	w0, [sp]
  41a3ec:	mov	x0, x19
  41a3f0:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41a3f4:	ldrb	w0, [sp, #288]
  41a3f8:	tbz	w0, #2, 41a48c <parse_file_seq@@Base+0x880>
  41a3fc:	mov	x1, #0x0                   	// #0
  41a400:	mov	x0, x27
  41a404:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41a408:	mov	x19, x0
  41a40c:	bl	416ca8 <next_token@@Base>
  41a410:	ldrb	w1, [x0]
  41a414:	mov	x20, x0
  41a418:	cbnz	w1, 41a430 <parse_file_seq@@Base+0x824>
  41a41c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a420:	add	x1, x1, #0x278
  41a424:	mov	w2, #0x5                   	// #5
  41a428:	mov	x0, #0x0                   	// #0
  41a42c:	b	41b31c <parse_file_seq@@Base+0x1710>
  41a430:	bl	406700 <strlen@plt>
  41a434:	sub	x1, x0, #0x1
  41a438:	add	x1, x20, x1
  41a43c:	cmp	x20, x1
  41a440:	b.cs	41a454 <parse_file_seq@@Base+0x848>  // b.hs, b.nlast
  41a444:	ldrb	w0, [x1]
  41a448:	ldr	x2, [sp, #176]
  41a44c:	ldrh	w0, [x2, x0, lsl #1]
  41a450:	tbnz	w0, #1, 41a484 <parse_file_seq@@Base+0x878>
  41a454:	strb	wzr, [x1, #1]
  41a458:	sub	x1, x1, x20
  41a45c:	mov	w2, w26
  41a460:	add	x1, x1, #0x1
  41a464:	mov	x3, #0x0                   	// #0
  41a468:	mov	x0, x20
  41a46c:	bl	41fbf0 <undefine_variable_in_set@@Base>
  41a470:	mov	x0, x19
  41a474:	bl	406c20 <free@plt>
  41a478:	mov	w22, #0x0                   	// #0
  41a47c:	mov	w25, #0x0                   	// #0
  41a480:	b	41aaa0 <parse_file_seq@@Base+0xe94>
  41a484:	sub	x1, x1, #0x1
  41a488:	b	41a43c <parse_file_seq@@Base+0x830>
  41a48c:	tbz	w0, #1, 41a79c <parse_file_seq@@Base+0xb90>
  41a490:	mov	x0, #0x64                  	// #100
  41a494:	bl	416a54 <xmalloc@@Base>
  41a498:	add	x2, sp, #0x200
  41a49c:	mov	x19, x0
  41a4a0:	ldp	x0, x1, [x23, #40]
  41a4a4:	stp	x0, x1, [x2, #-168]
  41a4a8:	add	x1, sp, #0x170
  41a4ac:	ldr	x0, [x23, #56]
  41a4b0:	str	x0, [sp, #360]
  41a4b4:	mov	x0, x27
  41a4b8:	bl	420d80 <parse_variable_definition@@Base>
  41a4bc:	cbnz	x0, 41a514 <parse_file_seq@@Base+0x908>
  41a4c0:	ldrh	w0, [sp, #414]
  41a4c4:	mov	w1, #0x2                   	// #2
  41a4c8:	bfi	w0, w1, #7, #3
  41a4cc:	strh	w0, [sp, #414]
  41a4d0:	mov	x1, #0x0                   	// #0
  41a4d4:	mov	x0, x27
  41a4d8:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41a4dc:	str	x0, [sp, #200]
  41a4e0:	bl	416ca8 <next_token@@Base>
  41a4e4:	ldrb	w1, [x0]
  41a4e8:	mov	x22, x0
  41a4ec:	cbnz	w1, 41a554 <parse_file_seq@@Base+0x948>
  41a4f0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a4f4:	add	x1, x1, #0x278
  41a4f8:	mov	w2, #0x5                   	// #5
  41a4fc:	mov	x0, #0x0                   	// #0
  41a500:	bl	406d60 <dcgettext@plt>
  41a504:	mov	x2, x0
  41a508:	add	x0, sp, #0x158
  41a50c:	mov	x1, #0x0                   	// #0
  41a510:	bl	417d24 <fatal@@Base>
  41a514:	ldr	x0, [sp, #376]
  41a518:	ldrb	w0, [x0]
  41a51c:	cbz	w0, 41a544 <parse_file_seq@@Base+0x938>
  41a520:	mov	w2, #0x5                   	// #5
  41a524:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a528:	mov	x0, #0x0                   	// #0
  41a52c:	add	x1, x1, #0x28c
  41a530:	bl	406d60 <dcgettext@plt>
  41a534:	mov	x2, x0
  41a538:	mov	x1, #0x0                   	// #0
  41a53c:	add	x0, sp, #0x158
  41a540:	bl	417aa8 <error@@Base>
  41a544:	ldr	w0, [sp, #408]
  41a548:	ldr	x1, [sp, #368]
  41a54c:	strb	wzr, [x1, x0]
  41a550:	b	41a4d0 <parse_file_seq@@Base+0x8c4>
  41a554:	bl	406700 <strlen@plt>
  41a558:	sub	x0, x0, #0x1
  41a55c:	add	x0, x22, x0
  41a560:	cmp	x22, x0
  41a564:	b.cs	41a578 <parse_file_seq@@Base+0x96c>  // b.hs, b.nlast
  41a568:	ldrb	w1, [x0]
  41a56c:	ldr	x2, [sp, #176]
  41a570:	ldrh	w1, [x2, x1, lsl #1]
  41a574:	tbnz	w1, #1, 41a5c0 <parse_file_seq@@Base+0x9b4>
  41a578:	strb	wzr, [x0, #1]
  41a57c:	mov	x0, #0x64                  	// #100
  41a580:	str	x0, [sp, #192]
  41a584:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a588:	add	x0, x0, #0x2dc
  41a58c:	mov	x25, #0x0                   	// #0
  41a590:	mov	w27, #0x1                   	// #1
  41a594:	str	x0, [sp, #240]
  41a598:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a59c:	add	x0, x0, #0x2e2
  41a5a0:	str	x0, [sp, #248]
  41a5a4:	mov	x0, x23
  41a5a8:	bl	418af0 <out_of_memory@@Base+0xc48>
  41a5ac:	tbz	x0, #63, 41a5c8 <parse_file_seq@@Base+0x9bc>
  41a5b0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a5b4:	mov	w2, #0x5                   	// #5
  41a5b8:	add	x1, x1, #0x2b5
  41a5bc:	b	41a4fc <parse_file_seq@@Base+0x8f0>
  41a5c0:	sub	x0, x0, #0x1
  41a5c4:	b	41a560 <parse_file_seq@@Base+0x954>
  41a5c8:	ldr	x1, [x23, #48]
  41a5cc:	ldr	x20, [x23]
  41a5d0:	add	x0, x1, x0
  41a5d4:	str	x0, [x23, #48]
  41a5d8:	mov	x0, x20
  41a5dc:	bl	4168c0 <collapse_continuations@@Base>
  41a5e0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41a5e4:	add	x0, x0, #0xa4
  41a5e8:	ldrb	w1, [x20]
  41a5ec:	ldrb	w0, [x0]
  41a5f0:	cmp	w1, w0
  41a5f4:	b.eq	41a64c <parse_file_seq@@Base+0xa40>  // b.none
  41a5f8:	mov	x0, x20
  41a5fc:	bl	416ca8 <next_token@@Base>
  41a600:	mov	x21, x0
  41a604:	bl	406700 <strlen@plt>
  41a608:	mov	x3, x0
  41a60c:	cmp	x0, #0x6
  41a610:	b.eq	41a628 <parse_file_seq@@Base+0xa1c>  // b.none
  41a614:	b.ls	41a6ac <parse_file_seq@@Base+0xaa0>  // b.plast
  41a618:	ldrb	w0, [x21, #6]
  41a61c:	ldr	x1, [sp, #176]
  41a620:	ldrh	w0, [x1, x0, lsl #1]
  41a624:	tbz	w0, #1, 41a6b8 <parse_file_seq@@Base+0xaac>
  41a628:	mov	x0, x21
  41a62c:	mov	x2, #0x6                   	// #6
  41a630:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x3720>
  41a634:	add	x1, x1, #0xfcc
  41a638:	str	x3, [sp, #208]
  41a63c:	bl	4069b0 <strncmp@plt>
  41a640:	ldr	x3, [sp, #208]
  41a644:	cbnz	w0, 41a6ac <parse_file_seq@@Base+0xaa0>
  41a648:	add	w27, w27, #0x1
  41a64c:	mov	x0, x20
  41a650:	bl	406700 <strlen@plt>
  41a654:	add	x21, x0, x25
  41a658:	mov	x2, x0
  41a65c:	ldr	x1, [sp, #192]
  41a660:	add	x0, x21, #0x1
  41a664:	str	x0, [sp, #208]
  41a668:	cmp	x0, x1
  41a66c:	b.ls	41a690 <parse_file_seq@@Base+0xa84>  // b.plast
  41a670:	lsl	x0, x21, #1
  41a674:	str	x0, [sp, #192]
  41a678:	add	x1, x0, #0x1
  41a67c:	mov	x0, x19
  41a680:	str	x2, [sp, #256]
  41a684:	bl	416aa0 <xrealloc@@Base>
  41a688:	ldr	x2, [sp, #256]
  41a68c:	mov	x19, x0
  41a690:	add	x0, x19, x25
  41a694:	mov	x1, x20
  41a698:	bl	4066c0 <memcpy@plt>
  41a69c:	mov	w0, #0xa                   	// #10
  41a6a0:	strb	w0, [x19, x21]
  41a6a4:	ldr	x25, [sp, #208]
  41a6a8:	b	41a5a4 <parse_file_seq@@Base+0x998>
  41a6ac:	cmp	x3, #0x5
  41a6b0:	b.eq	41a6c8 <parse_file_seq@@Base+0xabc>  // b.none
  41a6b4:	b.ls	41a64c <parse_file_seq@@Base+0xa40>  // b.plast
  41a6b8:	ldrb	w0, [x21, #5]
  41a6bc:	ldr	x1, [sp, #176]
  41a6c0:	ldrh	w0, [x1, x0, lsl #1]
  41a6c4:	tbz	w0, #1, 41a64c <parse_file_seq@@Base+0xa40>
  41a6c8:	ldr	x1, [sp, #240]
  41a6cc:	mov	x0, x21
  41a6d0:	mov	x2, #0x5                   	// #5
  41a6d4:	bl	4069b0 <strncmp@plt>
  41a6d8:	cbnz	w0, 41a64c <parse_file_seq@@Base+0xa40>
  41a6dc:	add	x21, x21, #0x5
  41a6e0:	mov	w1, #0x4008                	// #16392
  41a6e4:	mov	x0, x21
  41a6e8:	bl	418890 <out_of_memory@@Base+0x9e8>
  41a6ec:	cbz	x0, 41a6f4 <parse_file_seq@@Base+0xae8>
  41a6f0:	strb	wzr, [x0]
  41a6f4:	mov	x0, x21
  41a6f8:	bl	416ca8 <next_token@@Base>
  41a6fc:	ldrb	w0, [x0]
  41a700:	cbz	w0, 41a724 <parse_file_seq@@Base+0xb18>
  41a704:	ldr	x1, [sp, #248]
  41a708:	mov	w2, #0x5                   	// #5
  41a70c:	mov	x0, #0x0                   	// #0
  41a710:	bl	406d60 <dcgettext@plt>
  41a714:	mov	x2, x0
  41a718:	mov	x1, #0x0                   	// #0
  41a71c:	mov	x0, x24
  41a720:	bl	417aa8 <error@@Base>
  41a724:	subs	w27, w27, #0x1
  41a728:	b.ne	41a64c <parse_file_seq@@Base+0xa40>  // b.any
  41a72c:	cbnz	x25, 41a790 <parse_file_seq@@Base+0xb84>
  41a730:	strb	wzr, [x19]
  41a734:	ldrh	w4, [sp, #414]
  41a738:	mov	w3, w26
  41a73c:	mov	x2, x19
  41a740:	mov	x1, x22
  41a744:	mov	w5, #0x0                   	// #0
  41a748:	add	x0, sp, #0x158
  41a74c:	ubfx	x4, x4, #7, #3
  41a750:	bl	420878 <do_variable_definition@@Base>
  41a754:	mov	x20, x0
  41a758:	mov	x0, x19
  41a75c:	bl	406c20 <free@plt>
  41a760:	ldr	x0, [sp, #200]
  41a764:	bl	406c20 <free@plt>
  41a768:	ldrb	w1, [sp, #288]
  41a76c:	tbz	w1, #3, 41a77c <parse_file_seq@@Base+0xb70>
  41a770:	ldrb	w0, [x20, #47]
  41a774:	and	w0, w0, #0xffffff9f
  41a778:	strb	w0, [x20, #47]
  41a77c:	tbz	w1, #5, 41a478 <parse_file_seq@@Base+0x86c>
  41a780:	ldrb	w0, [x20, #44]
  41a784:	orr	w0, w0, #0xffffff80
  41a788:	strb	w0, [x20, #44]
  41a78c:	b	41a478 <parse_file_seq@@Base+0x86c>
  41a790:	add	x25, x19, x25
  41a794:	sturb	wzr, [x25, #-1]
  41a798:	b	41a734 <parse_file_seq@@Base+0xb28>
  41a79c:	mov	w2, w26
  41a7a0:	mov	x1, x27
  41a7a4:	mov	x0, x24
  41a7a8:	mov	w3, #0x0                   	// #0
  41a7ac:	bl	421014 <try_variable_definition@@Base>
  41a7b0:	mov	x20, x0
  41a7b4:	b	41a768 <parse_file_seq@@Base+0xb5c>
  41a7b8:	ldrb	w1, [x0]
  41a7bc:	cbz	w1, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a7c0:	bl	416c84 <end_of_token@@Base>
  41a7c4:	sub	x1, x0, x27
  41a7c8:	stp	x1, x0, [sp, #296]
  41a7cc:	ldr	x0, [sp, #304]
  41a7d0:	ldr	x3, [sp, #176]
  41a7d4:	ldrb	w2, [x0]
  41a7d8:	ldrh	w3, [x3, x2, lsl #1]
  41a7dc:	tst	w3, #0x6
  41a7e0:	b.ne	41a820 <parse_file_seq@@Base+0xc14>  // b.any
  41a7e4:	cbz	w28, 41a82c <parse_file_seq@@Base+0xc20>
  41a7e8:	cmp	x1, #0x5
  41a7ec:	b.ne	41a1c0 <parse_file_seq@@Base+0x5b4>  // b.any
  41a7f0:	mov	x2, x1
  41a7f4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a7f8:	mov	x1, x27
  41a7fc:	add	x0, x0, #0x2dc
  41a800:	str	w3, [sp, #176]
  41a804:	bl	4069b0 <strncmp@plt>
  41a808:	cbnz	w0, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a80c:	ldr	w3, [sp, #176]
  41a810:	mov	w0, #0x9                   	// #9
  41a814:	tst	w3, w0
  41a818:	cset	w28, eq  // eq = none
  41a81c:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41a820:	add	x0, x0, #0x1
  41a824:	str	x0, [sp, #304]
  41a828:	b	41a7cc <parse_file_seq@@Base+0xbc0>
  41a82c:	mov	x2, x24
  41a830:	mov	x0, x27
  41a834:	bl	418188 <out_of_memory@@Base+0x2e0>
  41a838:	cmn	w0, #0x2
  41a83c:	b.eq	41a858 <parse_file_seq@@Base+0xc4c>  // b.none
  41a840:	cmn	w0, #0x1
  41a844:	b.ne	41b73c <parse_file_seq@@Base+0x1b30>  // b.any
  41a848:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41a84c:	mov	w2, #0x5                   	// #5
  41a850:	add	x1, x1, #0x30a
  41a854:	b	41a428 <parse_file_seq@@Base+0x81c>
  41a858:	ldr	w0, [sp, #232]
  41a85c:	cbnz	w0, 41a1c0 <parse_file_seq@@Base+0x5b4>
  41a860:	ldr	x25, [sp, #296]
  41a864:	cmp	x25, #0x6
  41a868:	b.ne	41a8f0 <parse_file_seq@@Base+0xce4>  // b.any
  41a86c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a870:	mov	x2, x25
  41a874:	mov	x1, x27
  41a878:	add	x0, x0, #0x32a
  41a87c:	bl	4069b0 <strncmp@plt>
  41a880:	cbnz	w0, 41ad6c <parse_file_seq@@Base+0x1160>
  41a884:	ldrb	w25, [x27]
  41a888:	cmp	w25, #0x75
  41a88c:	cset	w26, ne  // ne = any
  41a890:	cbz	x19, 41a8d4 <parse_file_seq@@Base+0xcc8>
  41a894:	ldr	w0, [sp, #160]
  41a898:	mov	x7, x21
  41a89c:	ldp	x6, x4, [sp, #128]
  41a8a0:	stp	x0, xzr, [sp, #328]
  41a8a4:	add	x0, sp, #0x140
  41a8a8:	ldr	w5, [sp, #152]
  41a8ac:	mov	x2, x20
  41a8b0:	str	x0, [sp, #16]
  41a8b4:	mov	w1, w22
  41a8b8:	ldrb	w0, [sp, #156]
  41a8bc:	ldr	x3, [sp, #144]
  41a8c0:	strb	w0, [sp, #8]
  41a8c4:	ldr	w0, [sp, #164]
  41a8c8:	str	w0, [sp]
  41a8cc:	mov	x0, x19
  41a8d0:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41a8d4:	ldr	x0, [sp, #304]
  41a8d8:	ldrb	w1, [x0]
  41a8dc:	cbnz	w1, 41a93c <parse_file_seq@@Base+0xd30>
  41a8e0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41a8e4:	str	w26, [x0, #2252]
  41a8e8:	mov	w22, #0x0                   	// #0
  41a8ec:	b	41b2a8 <parse_file_seq@@Base+0x169c>
  41a8f0:	cmp	x25, #0x8
  41a8f4:	b.ne	41a9e0 <parse_file_seq@@Base+0xdd4>  // b.any
  41a8f8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a8fc:	mov	x2, x25
  41a900:	mov	x1, x27
  41a904:	add	x0, x0, #0x328
  41a908:	bl	4069b0 <strncmp@plt>
  41a90c:	cbz	w0, 41a884 <parse_file_seq@@Base+0xc78>
  41a910:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a914:	mov	x2, x25
  41a918:	mov	x1, x27
  41a91c:	add	x0, x0, #0x331
  41a920:	bl	4069b0 <strncmp@plt>
  41a924:	cbz	w0, 41aad4 <parse_file_seq@@Base+0xec8>
  41a928:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41a92c:	mov	x2, x25
  41a930:	mov	x1, x27
  41a934:	add	x0, x0, #0x33a
  41a938:	b	41aacc <parse_file_seq@@Base+0xec0>
  41a93c:	mov	x1, #0x0                   	// #0
  41a940:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41a944:	add	x1, sp, #0x158
  41a948:	mov	x20, x0
  41a94c:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x1720>
  41a950:	add	x0, sp, #0x170
  41a954:	add	x21, x21, #0x819
  41a958:	str	x20, [sp, #368]
  41a95c:	bl	416ccc <find_next_token@@Base>
  41a960:	mov	x19, x0
  41a964:	cbnz	x19, 41a988 <parse_file_seq@@Base+0xd7c>
  41a968:	mov	x0, x20
  41a96c:	bl	406c20 <free@plt>
  41a970:	mov	x20, #0x0                   	// #0
  41a974:	mov	w22, #0x0                   	// #0
  41a978:	mov	w25, #0x0                   	// #0
  41a97c:	mov	w28, #0x0                   	// #0
  41a980:	mov	x21, #0x0                   	// #0
  41a984:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41a988:	ldr	x1, [sp, #344]
  41a98c:	mov	x0, x19
  41a990:	bl	41fcdc <lookup_variable@@Base>
  41a994:	cbnz	x0, 41a9b8 <parse_file_seq@@Base+0xdac>
  41a998:	ldr	x1, [sp, #344]
  41a99c:	mov	x6, x24
  41a9a0:	mov	x2, x21
  41a9a4:	mov	x0, x19
  41a9a8:	mov	x5, #0x0                   	// #0
  41a9ac:	mov	w4, #0x0                   	// #0
  41a9b0:	mov	w3, #0x2                   	// #2
  41a9b4:	bl	41f978 <define_variable_in_set@@Base>
  41a9b8:	ldrb	w1, [x0, #47]
  41a9bc:	cmp	w25, #0x75
  41a9c0:	cset	w2, eq  // eq = none
  41a9c4:	bfi	w1, w2, #5, #2
  41a9c8:	strb	w1, [x0, #47]
  41a9cc:	add	x1, sp, #0x158
  41a9d0:	add	x0, sp, #0x170
  41a9d4:	bl	416ccc <find_next_token@@Base>
  41a9d8:	mov	x19, x0
  41a9dc:	b	41a964 <parse_file_seq@@Base+0xd58>
  41a9e0:	cmp	x25, #0x5
  41a9e4:	b.ne	41aab4 <parse_file_seq@@Base+0xea8>  // b.any
  41a9e8:	mov	x2, x25
  41a9ec:	mov	x1, x27
  41a9f0:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  41a9f4:	add	x0, x0, #0xb31
  41a9f8:	bl	4069b0 <strncmp@plt>
  41a9fc:	mov	w28, w0
  41aa00:	cbnz	w0, 41acfc <parse_file_seq@@Base+0x10f0>
  41aa04:	cbz	x19, 41aa48 <parse_file_seq@@Base+0xe3c>
  41aa08:	ldr	w0, [sp, #160]
  41aa0c:	mov	x7, x21
  41aa10:	ldp	x6, x4, [sp, #128]
  41aa14:	stp	x0, xzr, [sp, #328]
  41aa18:	add	x0, sp, #0x140
  41aa1c:	ldr	w5, [sp, #152]
  41aa20:	mov	x2, x20
  41aa24:	str	x0, [sp, #16]
  41aa28:	mov	w1, w22
  41aa2c:	ldrb	w0, [sp, #156]
  41aa30:	ldr	x3, [sp, #144]
  41aa34:	strb	w0, [sp, #8]
  41aa38:	ldr	w0, [sp, #164]
  41aa3c:	str	w0, [sp]
  41aa40:	mov	x0, x19
  41aa44:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41aa48:	ldr	x0, [sp, #304]
  41aa4c:	bl	40ba98 <variable_expand@@Base>
  41aa50:	str	x0, [sp, #344]
  41aa54:	add	x1, sp, #0x170
  41aa58:	add	x0, sp, #0x158
  41aa5c:	bl	416ccc <find_next_token@@Base>
  41aa60:	mov	x1, x0
  41aa64:	cbz	x0, 41aaac <parse_file_seq@@Base+0xea0>
  41aa68:	ldr	x1, [sp, #368]
  41aa6c:	bl	416c40 <xstrndup@@Base>
  41aa70:	mov	x19, x0
  41aa74:	add	x1, sp, #0x170
  41aa78:	add	x0, sp, #0x158
  41aa7c:	bl	416ccc <find_next_token@@Base>
  41aa80:	mov	x1, x0
  41aa84:	mov	x0, x19
  41aa88:	bl	421478 <construct_vpath_list@@Base>
  41aa8c:	mov	x0, x19
  41aa90:	mov	w22, #0x0                   	// #0
  41aa94:	bl	406c20 <free@plt>
  41aa98:	mov	w25, #0x0                   	// #0
  41aa9c:	str	wzr, [sp, #232]
  41aaa0:	mov	x20, #0x0                   	// #0
  41aaa4:	mov	x19, #0x0                   	// #0
  41aaa8:	b	41a980 <parse_file_seq@@Base+0xd74>
  41aaac:	mov	x19, #0x0                   	// #0
  41aab0:	b	41aa84 <parse_file_seq@@Base+0xe78>
  41aab4:	cmp	x25, #0x7
  41aab8:	b.ne	41abe8 <parse_file_seq@@Base+0xfdc>  // b.any
  41aabc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41aac0:	mov	x2, x25
  41aac4:	mov	x1, x27
  41aac8:	add	x0, x0, #0x332
  41aacc:	bl	4069b0 <strncmp@plt>
  41aad0:	cbnz	w0, 41ad6c <parse_file_seq@@Base+0x1160>
  41aad4:	ldrb	w25, [x27]
  41aad8:	cbz	x19, 41ab1c <parse_file_seq@@Base+0xf10>
  41aadc:	ldr	w0, [sp, #160]
  41aae0:	mov	x7, x21
  41aae4:	ldp	x6, x4, [sp, #128]
  41aae8:	stp	x0, xzr, [sp, #328]
  41aaec:	add	x0, sp, #0x140
  41aaf0:	ldr	w5, [sp, #152]
  41aaf4:	mov	x2, x20
  41aaf8:	str	x0, [sp, #16]
  41aafc:	mov	w1, w22
  41ab00:	ldrb	w0, [sp, #156]
  41ab04:	ldr	x3, [sp, #144]
  41ab08:	strb	w0, [sp, #8]
  41ab0c:	ldr	w0, [sp, #164]
  41ab10:	str	w0, [sp]
  41ab14:	mov	x0, x19
  41ab18:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41ab1c:	ldr	x0, [sp, #304]
  41ab20:	mov	x1, #0x0                   	// #0
  41ab24:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41ab28:	ldrb	w1, [x0]
  41ab2c:	mov	x19, x0
  41ab30:	cbnz	w1, 41ab3c <parse_file_seq@@Base+0xf30>
  41ab34:	bl	406c20 <free@plt>
  41ab38:	b	41a8e8 <parse_file_seq@@Base+0xcdc>
  41ab3c:	mov	x1, #0x10                  	// #16
  41ab40:	mov	w4, #0x2                   	// #2
  41ab44:	mov	x3, #0x0                   	// #0
  41ab48:	mov	w2, #0x1                   	// #1
  41ab4c:	add	x0, sp, #0x130
  41ab50:	str	x19, [sp, #304]
  41ab54:	bl	419c0c <parse_file_seq@@Base>
  41ab58:	mov	x22, x0
  41ab5c:	mov	x0, x19
  41ab60:	bl	406c20 <free@plt>
  41ab64:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41ab68:	add	x1, sp, #0x170
  41ab6c:	cmp	w25, #0x69
  41ab70:	stp	xzr, xzr, [sp, #368]
  41ab74:	ldr	x20, [x0, #192]
  41ab78:	str	x1, [x0, #192]
  41ab7c:	ldr	w0, [sp, #236]
  41ab80:	mov	w1, #0xa                   	// #10
  41ab84:	str	xzr, [sp, #384]
  41ab88:	eor	w19, w0, #0x1
  41ab8c:	mov	w0, #0xe                   	// #14
  41ab90:	csel	w0, w0, w1, ne  // ne = any
  41ab94:	orr	w19, w19, w0
  41ab98:	and	w19, w19, #0xffff
  41ab9c:	cbnz	x22, 41abac <parse_file_seq@@Base+0xfa0>
  41aba0:	mov	x0, x20
  41aba4:	bl	418148 <out_of_memory@@Base+0x2a0>
  41aba8:	b	41a8e8 <parse_file_seq@@Base+0xcdc>
  41abac:	ldp	x21, x0, [x22]
  41abb0:	mov	w1, w19
  41abb4:	bl	41b7b8 <parse_file_seq@@Base+0x1bac>
  41abb8:	mov	x25, x0
  41abbc:	bl	406e00 <__errno_location@plt>
  41abc0:	ldr	w0, [x0]
  41abc4:	cbz	w0, 41abd8 <parse_file_seq@@Base+0xfcc>
  41abc8:	ldp	x0, x1, [x23, #40]
  41abcc:	stp	x0, x1, [x25, #40]
  41abd0:	ldr	x0, [x23, #56]
  41abd4:	str	x0, [x25, #56]
  41abd8:	mov	x0, x22
  41abdc:	mov	x22, x21
  41abe0:	bl	406c20 <free@plt>
  41abe4:	b	41ab9c <parse_file_seq@@Base+0xf90>
  41abe8:	cmp	x25, #0x4
  41abec:	b.ne	41ad6c <parse_file_seq@@Base+0x1160>  // b.any
  41abf0:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41abf4:	mov	x2, x25
  41abf8:	mov	x1, x27
  41abfc:	add	x0, x0, #0x3e8
  41ac00:	bl	4069b0 <strncmp@plt>
  41ac04:	cbnz	w0, 41ad6c <parse_file_seq@@Base+0x1160>
  41ac08:	ldrb	w25, [x27]
  41ac0c:	cbz	x19, 41ac50 <parse_file_seq@@Base+0x1044>
  41ac10:	ldr	w0, [sp, #160]
  41ac14:	mov	x7, x21
  41ac18:	ldp	x6, x4, [sp, #128]
  41ac1c:	stp	x0, xzr, [sp, #328]
  41ac20:	add	x0, sp, #0x140
  41ac24:	ldr	w5, [sp, #152]
  41ac28:	mov	x2, x20
  41ac2c:	str	x0, [sp, #16]
  41ac30:	mov	w1, w22
  41ac34:	ldrb	w0, [sp, #156]
  41ac38:	ldr	x3, [sp, #144]
  41ac3c:	strb	w0, [sp, #8]
  41ac40:	ldr	w0, [sp, #164]
  41ac44:	str	w0, [sp]
  41ac48:	mov	x0, x19
  41ac4c:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41ac50:	ldr	x0, [sp, #304]
  41ac54:	mov	x1, #0x0                   	// #0
  41ac58:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41ac5c:	ldrb	w1, [x0]
  41ac60:	mov	x20, x0
  41ac64:	cbz	w1, 41ab34 <parse_file_seq@@Base+0xf28>
  41ac68:	cmp	w25, #0x2d
  41ac6c:	mov	w4, #0x2                   	// #2
  41ac70:	cset	w21, eq  // eq = none
  41ac74:	mov	x3, #0x0                   	// #0
  41ac78:	mov	w2, #0x1                   	// #1
  41ac7c:	mov	x1, #0x10                  	// #16
  41ac80:	add	x0, sp, #0x130
  41ac84:	str	x20, [sp, #304]
  41ac88:	bl	419c0c <parse_file_seq@@Base>
  41ac8c:	mov	x19, x0
  41ac90:	mov	x0, x20
  41ac94:	adrp	x20, 440000 <output_context@@Base+0x1248>
  41ac98:	add	x20, x20, #0xdc0
  41ac9c:	bl	406c20 <free@plt>
  41aca0:	cbz	x19, 41a970 <parse_file_seq@@Base+0xd64>
  41aca4:	ldp	x22, x0, [x19]
  41aca8:	mov	w2, w21
  41acac:	add	x1, sp, #0x170
  41acb0:	str	x0, [sp, #368]
  41acb4:	mov	x0, x24
  41acb8:	bl	414c78 <load_file@@Base>
  41acbc:	mov	w25, w0
  41acc0:	orr	w0, w21, w0
  41acc4:	cbnz	w0, 41ad10 <parse_file_seq@@Base+0x1104>
  41acc8:	ldr	x0, [sp, #368]
  41accc:	bl	406700 <strlen@plt>
  41acd0:	mov	x19, x0
  41acd4:	mov	w2, #0x5                   	// #5
  41acd8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41acdc:	mov	x0, #0x0                   	// #0
  41ace0:	add	x1, x1, #0x343
  41ace4:	bl	406d60 <dcgettext@plt>
  41ace8:	mov	x2, x0
  41acec:	ldr	x3, [sp, #368]
  41acf0:	mov	x1, x19
  41acf4:	mov	x0, x24
  41acf8:	bl	417d24 <fatal@@Base>
  41acfc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41ad00:	mov	x2, x25
  41ad04:	mov	x1, x27
  41ad08:	add	x0, x0, #0x81c
  41ad0c:	b	41ac00 <parse_file_seq@@Base+0xff4>
  41ad10:	mov	x0, x19
  41ad14:	bl	406c20 <free@plt>
  41ad18:	cmn	w25, #0x1
  41ad1c:	b.eq	41ad64 <parse_file_seq@@Base+0x1158>  // b.none
  41ad20:	mov	x0, #0x40                  	// #64
  41ad24:	bl	416a78 <xcalloc@@Base>
  41ad28:	mov	x19, x0
  41ad2c:	ldr	x0, [x20, #32]
  41ad30:	str	x19, [x20, #32]
  41ad34:	str	x0, [x19]
  41ad38:	ldr	x0, [sp, #368]
  41ad3c:	bl	40be54 <lookup_file@@Base>
  41ad40:	str	x0, [x19, #16]
  41ad44:	cbnz	x0, 41ad54 <parse_file_seq@@Base+0x1148>
  41ad48:	ldr	x0, [sp, #368]
  41ad4c:	bl	40bec0 <enter_file@@Base>
  41ad50:	str	x0, [x19, #16]
  41ad54:	ldr	x1, [x19, #16]
  41ad58:	ldrb	w0, [x1, #136]
  41ad5c:	orr	w0, w0, #0x40
  41ad60:	strb	w0, [x1, #136]
  41ad64:	mov	x19, x22
  41ad68:	b	41aca0 <parse_file_seq@@Base+0x1094>
  41ad6c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41ad70:	ldrb	w1, [x26]
  41ad74:	ldrb	w0, [x0, #164]
  41ad78:	cmp	w1, w0
  41ad7c:	b.ne	41ad90 <parse_file_seq@@Base+0x1184>  // b.any
  41ad80:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ad84:	mov	w2, #0x5                   	// #5
  41ad88:	add	x1, x1, #0x356
  41ad8c:	b	41a428 <parse_file_seq@@Base+0x81c>
  41ad90:	cbz	x19, 41add4 <parse_file_seq@@Base+0x11c8>
  41ad94:	ldr	w0, [sp, #160]
  41ad98:	mov	x7, x21
  41ad9c:	ldp	x6, x4, [sp, #128]
  41ada0:	stp	x0, xzr, [sp, #328]
  41ada4:	add	x0, sp, #0x140
  41ada8:	ldr	w5, [sp, #152]
  41adac:	mov	x2, x20
  41adb0:	str	x0, [sp, #16]
  41adb4:	mov	w1, w22
  41adb8:	ldrb	w0, [sp, #156]
  41adbc:	ldr	x3, [sp, #144]
  41adc0:	strb	w0, [sp, #8]
  41adc4:	ldr	w0, [sp, #164]
  41adc8:	str	w0, [sp]
  41adcc:	mov	x0, x19
  41add0:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41add4:	ldr	w0, [x23, #48]
  41add8:	add	x25, x23, #0x28
  41addc:	mov	w1, #0x4018                	// #16408
  41ade0:	str	w0, [sp, #160]
  41ade4:	mov	x0, x26
  41ade8:	bl	418890 <out_of_memory@@Base+0x9e8>
  41adec:	mov	x20, x0
  41adf0:	cbz	x0, 41ae08 <parse_file_seq@@Base+0x11fc>
  41adf4:	ldrb	w0, [x0]
  41adf8:	cmp	w0, #0x23
  41adfc:	b.ne	41af74 <parse_file_seq@@Base+0x1368>  // b.any
  41ae00:	strb	wzr, [x20]
  41ae04:	mov	x20, #0x0                   	// #0
  41ae08:	mov	x0, x26
  41ae0c:	bl	4168c0 <collapse_continuations@@Base>
  41ae10:	add	x2, sp, #0x128
  41ae14:	add	x1, sp, #0x138
  41ae18:	mov	x0, x26
  41ae1c:	bl	417f08 <out_of_memory@@Base+0x60>
  41ae20:	mov	w19, w0
  41ae24:	cmp	w0, #0x5
  41ae28:	b.hi	41af7c <parse_file_seq@@Base+0x1370>  // b.pmore
  41ae2c:	cmp	w0, #0x3
  41ae30:	b.hi	41af88 <parse_file_seq@@Base+0x137c>  // b.pmore
  41ae34:	cmp	w0, #0x1
  41ae38:	b.eq	41af94 <parse_file_seq@@Base+0x1388>  // b.none
  41ae3c:	ldr	x2, [sp, #296]
  41ae40:	mov	x21, x20
  41ae44:	ldr	x1, [sp, #312]
  41ae48:	mov	x0, #0x0                   	// #0
  41ae4c:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  41ae50:	mov	w27, #0x20                  	// #32
  41ae54:	bl	40b534 <variable_expand_string@@Base>
  41ae58:	str	x0, [sp, #304]
  41ae5c:	ldr	x1, [sp, #296]
  41ae60:	ldr	x0, [sp, #312]
  41ae64:	add	x0, x0, x1
  41ae68:	str	x0, [sp, #312]
  41ae6c:	cbnz	x21, 41aee4 <parse_file_seq@@Base+0x12d8>
  41ae70:	ldr	x0, [sp, #304]
  41ae74:	mov	w1, #0x3b                  	// #59
  41ae78:	bl	418a0c <out_of_memory@@Base+0xb64>
  41ae7c:	mov	x21, x0
  41ae80:	cbz	x0, 41aee4 <parse_file_seq@@Base+0x12d8>
  41ae84:	ldr	x4, [x22, #1912]
  41ae88:	str	x4, [sp, #192]
  41ae8c:	ldr	x28, [sp, #304]
  41ae90:	mov	x0, x28
  41ae94:	bl	406700 <strlen@plt>
  41ae98:	strb	wzr, [x21]
  41ae9c:	mov	x2, #0xffffffffffffffff    	// #-1
  41aea0:	add	x0, x28, x0
  41aea4:	ldr	x1, [sp, #312]
  41aea8:	bl	40b534 <variable_expand_string@@Base>
  41aeac:	ldr	x1, [sp, #312]
  41aeb0:	str	x1, [sp, #176]
  41aeb4:	mov	x0, x1
  41aeb8:	bl	406700 <strlen@plt>
  41aebc:	ldr	x1, [sp, #176]
  41aec0:	ldr	x4, [sp, #192]
  41aec4:	add	x1, x1, x0
  41aec8:	ldr	x0, [x22, #1912]
  41aecc:	sub	x21, x21, x4
  41aed0:	add	x21, x21, #0x1
  41aed4:	sub	x3, x28, x4
  41aed8:	add	x21, x0, x21
  41aedc:	add	x3, x0, x3
  41aee0:	stp	x3, x1, [sp, #304]
  41aee4:	mov	w1, #0x3a                  	// #58
  41aee8:	ldr	x0, [sp, #304]
  41aeec:	bl	418a0c <out_of_memory@@Base+0xb64>
  41aef0:	mov	x5, x0
  41aef4:	cbz	x0, 41afa8 <parse_file_seq@@Base+0x139c>
  41aef8:	ldr	x0, [sp, #304]
  41aefc:	cmp	x0, x5
  41af00:	b.cs	41af14 <parse_file_seq@@Base+0x1308>  // b.hs, b.nlast
  41af04:	ldurb	w0, [x5, #-1]
  41af08:	cmp	w0, #0x26
  41af0c:	cset	x0, eq  // eq = none
  41af10:	sub	x5, x5, x0
  41af14:	adrp	x28, 441000 <commands_started@@Base+0x1c0>
  41af18:	str	x5, [sp, #176]
  41af1c:	ldr	x0, [x28, #1912]
  41af20:	bl	416ca8 <next_token@@Base>
  41af24:	str	x0, [sp, #304]
  41af28:	cmp	w19, #0x1
  41af2c:	ldr	x5, [sp, #176]
  41af30:	b.ne	41b014 <parse_file_seq@@Base+0x1408>  // b.any
  41af34:	ldrb	w0, [x0]
  41af38:	cbz	w0, 41a8e8 <parse_file_seq@@Base+0xcdc>
  41af3c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41af40:	ldrb	w0, [x0, #164]
  41af44:	cmp	w0, #0x9
  41af48:	b.ne	41b004 <parse_file_seq@@Base+0x13f8>  // b.any
  41af4c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41af50:	mov	x0, x26
  41af54:	add	x1, x1, #0x396
  41af58:	mov	x2, #0x8                   	// #8
  41af5c:	bl	4069b0 <strncmp@plt>
  41af60:	cbnz	w0, 41b004 <parse_file_seq@@Base+0x13f8>
  41af64:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41af68:	mov	w2, #0x5                   	// #5
  41af6c:	add	x1, x1, #0x39f
  41af70:	b	41a428 <parse_file_seq@@Base+0x81c>
  41af74:	strb	wzr, [x20], #1
  41af78:	b	41ae08 <parse_file_seq@@Base+0x11fc>
  41af7c:	sub	w0, w0, #0x8
  41af80:	cmp	w0, #0x1
  41af84:	b.hi	41ae3c <parse_file_seq@@Base+0x1230>  // b.pmore
  41af88:	mov	w22, #0x0                   	// #0
  41af8c:	mov	w25, #0x1                   	// #1
  41af90:	b	41b2ac <parse_file_seq@@Base+0x16a0>
  41af94:	cbz	x20, 41a8e8 <parse_file_seq@@Base+0xcdc>
  41af98:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41af9c:	mov	w2, #0x5                   	// #5
  41afa0:	add	x1, x1, #0x37b
  41afa4:	b	41a428 <parse_file_seq@@Base+0x81c>
  41afa8:	ldr	x0, [sp, #312]
  41afac:	add	x2, sp, #0x128
  41afb0:	add	x1, sp, #0x138
  41afb4:	str	x5, [sp, #176]
  41afb8:	bl	417f08 <out_of_memory@@Base+0x60>
  41afbc:	mov	w19, w0
  41afc0:	cmp	w0, #0x1
  41afc4:	ldr	x5, [sp, #176]
  41afc8:	b.eq	41af14 <parse_file_seq@@Base+0x1308>  // b.none
  41afcc:	ldr	x1, [sp, #304]
  41afd0:	str	x1, [sp, #176]
  41afd4:	mov	x0, x1
  41afd8:	bl	406700 <strlen@plt>
  41afdc:	ldr	x1, [sp, #176]
  41afe0:	add	x2, x1, x0
  41afe4:	add	x2, x2, #0x1
  41afe8:	str	x2, [sp, #304]
  41afec:	strb	w27, [x1, x0]
  41aff0:	ldp	x2, x0, [sp, #296]
  41aff4:	ldr	x1, [sp, #312]
  41aff8:	bl	40b534 <variable_expand_string@@Base>
  41affc:	str	x0, [sp, #304]
  41b000:	b	41ae5c <parse_file_seq@@Base+0x1250>
  41b004:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b008:	mov	w2, #0x5                   	// #5
  41b00c:	add	x1, x1, #0x3d9
  41b010:	b	41a428 <parse_file_seq@@Base+0x81c>
  41b014:	ldrb	w26, [x5]
  41b018:	add	x0, sp, #0x130
  41b01c:	strb	wzr, [x5]
  41b020:	mov	w4, #0x0                   	// #0
  41b024:	cmp	w26, #0x26
  41b028:	mov	x3, #0x0                   	// #0
  41b02c:	cset	w22, eq  // eq = none
  41b030:	mov	w2, #0x1                   	// #1
  41b034:	mov	x1, #0x10                  	// #16
  41b038:	str	x5, [sp, #176]
  41b03c:	bl	419c0c <parse_file_seq@@Base>
  41b040:	mov	x19, x0
  41b044:	ldr	x5, [sp, #176]
  41b048:	and	x0, x22, #0xff
  41b04c:	strb	w26, [x5]
  41b050:	add	x5, x5, x0
  41b054:	cbz	x19, 41af8c <parse_file_seq@@Base+0x1380>
  41b058:	add	x0, x5, #0x1
  41b05c:	str	x0, [sp, #304]
  41b060:	add	x5, x5, #0x2
  41b064:	ldurb	w1, [x5, #-1]
  41b068:	cmp	w1, #0x3a
  41b06c:	ldr	x1, [sp, #312]
  41b070:	csel	x5, x5, x0, eq  // eq = none
  41b074:	str	x5, [sp, #304]
  41b078:	cset	w2, eq  // eq = none
  41b07c:	str	w2, [sp, #164]
  41b080:	ldrb	w0, [x1]
  41b084:	cbz	w0, 41b2b4 <parse_file_seq@@Base+0x16a8>
  41b088:	ldr	x0, [x28, #1912]
  41b08c:	str	x1, [sp, #176]
  41b090:	sub	x3, x5, x0
  41b094:	mov	x0, x5
  41b098:	stp	x5, x3, [sp, #192]
  41b09c:	bl	406700 <strlen@plt>
  41b0a0:	mov	x26, x0
  41b0a4:	ldr	x1, [sp, #176]
  41b0a8:	mov	x0, x1
  41b0ac:	bl	406700 <strlen@plt>
  41b0b0:	add	x2, x0, #0x1
  41b0b4:	ldr	x1, [sp, #176]
  41b0b8:	ldr	x5, [sp, #192]
  41b0bc:	add	x0, x5, x26
  41b0c0:	bl	40b138 <variable_buffer_output@@Base>
  41b0c4:	ldr	x0, [x28, #1912]
  41b0c8:	ldr	x3, [sp, #200]
  41b0cc:	add	x0, x0, x3
  41b0d0:	str	x0, [sp, #304]
  41b0d4:	ldr	x0, [sp, #304]
  41b0d8:	add	x1, sp, #0x120
  41b0dc:	bl	418cfc <out_of_memory@@Base+0xe54>
  41b0e0:	str	x0, [sp, #304]
  41b0e4:	ldrb	w1, [sp, #288]
  41b0e8:	tbz	w1, #0, 41b34c <parse_file_seq@@Base+0x1740>
  41b0ec:	cbz	x20, 41b140 <parse_file_seq@@Base+0x1534>
  41b0f0:	ldr	x21, [x28, #1912]
  41b0f4:	sub	x26, x20, #0x1
  41b0f8:	sub	x21, x0, x21
  41b0fc:	mov	w0, #0x3b                  	// #59
  41b100:	sturb	w0, [x20, #-1]
  41b104:	mov	x0, x26
  41b108:	bl	4168c0 <collapse_continuations@@Base>
  41b10c:	ldr	x27, [sp, #304]
  41b110:	mov	x0, x27
  41b114:	bl	406700 <strlen@plt>
  41b118:	mov	x20, x0
  41b11c:	mov	x0, x26
  41b120:	bl	406700 <strlen@plt>
  41b124:	add	x2, x0, #0x1
  41b128:	mov	x1, x26
  41b12c:	add	x0, x27, x20
  41b130:	bl	40b138 <variable_buffer_output@@Base>
  41b134:	ldr	x0, [x28, #1912]
  41b138:	add	x0, x0, x21
  41b13c:	str	x0, [sp, #304]
  41b140:	ldrb	w0, [sp, #288]
  41b144:	mov	w20, #0x5                   	// #5
  41b148:	ldr	x21, [sp, #304]
  41b14c:	tst	x0, #0x10
  41b150:	mov	w0, #0x2                   	// #2
  41b154:	csel	w20, w20, w0, ne  // ne = any
  41b158:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41b15c:	add	x26, x0, #0x130
  41b160:	ldr	x0, [x0, #304]
  41b164:	str	x0, [sp, #176]
  41b168:	ldr	x0, [x19, #8]
  41b16c:	str	x0, [sp, #368]
  41b170:	mov	x0, x19
  41b174:	ldr	x19, [x19]
  41b178:	bl	406c20 <free@plt>
  41b17c:	add	x0, sp, #0x170
  41b180:	bl	418e98 <find_percent_cached@@Base>
  41b184:	mov	x1, x0
  41b188:	ldr	x0, [sp, #368]
  41b18c:	cbz	x1, 41b2c8 <parse_file_seq@@Base+0x16bc>
  41b190:	bl	41f89c <create_pattern_var@@Base>
  41b194:	add	x0, x0, #0x20
  41b198:	ldp	x2, x3, [x25]
  41b19c:	stp	x2, x3, [x0, #16]
  41b1a0:	ldr	x1, [x25, #16]
  41b1a4:	str	x1, [x0, #32]
  41b1a8:	mov	x1, x21
  41b1ac:	bl	420f78 <assign_variable_definition@@Base>
  41b1b0:	mov	x27, x0
  41b1b4:	ldrb	w0, [x0, #47]
  41b1b8:	bfi	w0, w20, #2, #3
  41b1bc:	strb	w0, [x27, #47]
  41b1c0:	ldrh	w0, [x27, #46]
  41b1c4:	and	w0, w0, #0x380
  41b1c8:	cmp	w0, #0x80
  41b1cc:	b.ne	41b2bc <parse_file_seq@@Base+0x16b0>  // b.any
  41b1d0:	ldr	x0, [x27, #8]
  41b1d4:	mov	x1, #0x0                   	// #0
  41b1d8:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41b1dc:	str	x0, [x27, #8]
  41b1e0:	ldrb	w1, [sp, #288]
  41b1e4:	mov	w2, #0xff77                	// #65399
  41b1e8:	movk	w2, #0x9fff, lsl #16
  41b1ec:	eor	x0, x1, #0x8
  41b1f0:	ubfx	x1, x1, #5, #1
  41b1f4:	sbfx	w0, w0, #3, #1
  41b1f8:	lsl	w1, w1, #7
  41b1fc:	orr	w1, w1, #0x8
  41b200:	ubfiz	w0, w0, #29, #2
  41b204:	orr	w0, w0, w1
  41b208:	ldr	w1, [x27, #44]
  41b20c:	and	w1, w1, w2
  41b210:	orr	w0, w0, w1
  41b214:	str	w0, [x27, #44]
  41b218:	lsr	w0, w0, #24
  41b21c:	and	w0, w0, #0x1c
  41b220:	cmp	w0, #0x14
  41b224:	b.eq	41b2a4 <parse_file_seq@@Base+0x1698>  // b.none
  41b228:	ldr	x28, [x27]
  41b22c:	mov	x0, x28
  41b230:	bl	406700 <strlen@plt>
  41b234:	mov	x1, x0
  41b238:	mov	x0, x28
  41b23c:	bl	41fcdc <lookup_variable@@Base>
  41b240:	cmp	x0, #0x0
  41b244:	mov	x28, x0
  41b248:	ccmp	x27, x0, #0x4, ne  // ne = any
  41b24c:	b.eq	41b2a4 <parse_file_seq@@Base+0x1698>  // b.none
  41b250:	ldrb	w0, [x0, #47]
  41b254:	and	w0, w0, #0x1c
  41b258:	cmp	w0, #0xc
  41b25c:	ccmp	w0, #0x10, #0x4, ne  // ne = any
  41b260:	b.ne	41b2a4 <parse_file_seq@@Base+0x1698>  // b.any
  41b264:	ldr	x0, [x27, #8]
  41b268:	bl	406c20 <free@plt>
  41b26c:	ldr	x0, [x28, #8]
  41b270:	bl	416c24 <xstrdup@@Base>
  41b274:	ldrb	w1, [x28, #44]
  41b278:	mov	w2, #0xfffc                	// #65532
  41b27c:	str	x0, [x27, #8]
  41b280:	movk	w2, #0xe3ff, lsl #16
  41b284:	ldrb	w0, [x28, #47]
  41b288:	and	w1, w1, #0x1
  41b28c:	ubfx	x0, x0, #2, #3
  41b290:	orr	w0, w1, w0, lsl #26
  41b294:	ldr	w1, [x27, #44]
  41b298:	and	w1, w1, w2
  41b29c:	orr	w0, w0, w1
  41b2a0:	str	w0, [x27, #44]
  41b2a4:	cbnz	x19, 41b168 <parse_file_seq@@Base+0x155c>
  41b2a8:	mov	w25, #0x0                   	// #0
  41b2ac:	mov	w28, #0x0                   	// #0
  41b2b0:	b	41aaa0 <parse_file_seq@@Base+0xe94>
  41b2b4:	mov	x26, #0x0                   	// #0
  41b2b8:	b	41b0d4 <parse_file_seq@@Base+0x14c8>
  41b2bc:	ldr	x0, [x27, #8]
  41b2c0:	bl	416c24 <xstrdup@@Base>
  41b2c4:	b	41b1dc <parse_file_seq@@Base+0x15d0>
  41b2c8:	bl	40be54 <lookup_file@@Base>
  41b2cc:	cbnz	x0, 41b330 <parse_file_seq@@Base+0x1724>
  41b2d0:	ldr	x0, [sp, #368]
  41b2d4:	bl	41f174 <strcache_add@@Base>
  41b2d8:	bl	40bec0 <enter_file@@Base>
  41b2dc:	mov	x27, x0
  41b2e0:	mov	x0, x27
  41b2e4:	mov	w1, #0x1                   	// #1
  41b2e8:	bl	420b80 <initialize_file_variables@@Base>
  41b2ec:	ldr	x0, [x27, #80]
  41b2f0:	mov	w2, w20
  41b2f4:	mov	x1, x21
  41b2f8:	mov	w3, #0x1                   	// #1
  41b2fc:	str	x0, [x26]
  41b300:	mov	x0, x24
  41b304:	bl	421014 <try_variable_definition@@Base>
  41b308:	mov	x27, x0
  41b30c:	cbnz	x0, 41b340 <parse_file_seq@@Base+0x1734>
  41b310:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b314:	add	x1, x1, #0x3eb
  41b318:	mov	w2, #0x5                   	// #5
  41b31c:	bl	406d60 <dcgettext@plt>
  41b320:	mov	x2, x0
  41b324:	mov	x1, #0x0                   	// #0
  41b328:	mov	x0, x24
  41b32c:	b	41a510 <parse_file_seq@@Base+0x904>
  41b330:	ldr	x1, [x0, #104]
  41b334:	cmp	x1, #0x0
  41b338:	csel	x27, x0, x1, eq  // eq = none
  41b33c:	b	41b2e0 <parse_file_seq@@Base+0x16d4>
  41b340:	ldr	x0, [sp, #176]
  41b344:	str	x0, [x26]
  41b348:	b	41b1e0 <parse_file_seq@@Base+0x15d4>
  41b34c:	ldr	x0, [sp, #312]
  41b350:	mov	w1, #0x3d                  	// #61
  41b354:	bl	418a0c <out_of_memory@@Base+0xb64>
  41b358:	ldr	x1, [sp, #312]
  41b35c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41b360:	ldrb	w0, [x0, #164]
  41b364:	str	w0, [sp, #156]
  41b368:	ldrb	w0, [x1]
  41b36c:	cbz	w0, 41b3ac <parse_file_seq@@Base+0x17a0>
  41b370:	ldr	x20, [x28, #1912]
  41b374:	mov	x2, #0xffffffffffffffff    	// #-1
  41b378:	ldr	x0, [sp, #304]
  41b37c:	sub	x20, x0, x20
  41b380:	add	x0, x0, x26
  41b384:	bl	40b534 <variable_expand_string@@Base>
  41b388:	ldr	x0, [x28, #1912]
  41b38c:	add	x0, x0, x20
  41b390:	str	x0, [sp, #304]
  41b394:	cbnz	x21, 41b3ac <parse_file_seq@@Base+0x17a0>
  41b398:	mov	w1, #0x3b                  	// #59
  41b39c:	bl	418a0c <out_of_memory@@Base+0xb64>
  41b3a0:	mov	x21, x0
  41b3a4:	cbz	x0, 41b3ac <parse_file_seq@@Base+0x17a0>
  41b3a8:	strb	wzr, [x21], #1
  41b3ac:	ldr	x0, [sp, #304]
  41b3b0:	mov	w1, #0x3a                  	// #58
  41b3b4:	bl	406c40 <strchr@plt>
  41b3b8:	mov	x20, x0
  41b3bc:	cbz	x0, 41b478 <parse_file_seq@@Base+0x186c>
  41b3c0:	ldurb	w0, [x0, #-1]
  41b3c4:	cmp	w0, #0x5c
  41b3c8:	b.eq	41b408 <parse_file_seq@@Base+0x17fc>  // b.none
  41b3cc:	mov	x1, #0x10                  	// #16
  41b3d0:	add	x0, sp, #0x130
  41b3d4:	mov	w4, #0x4                   	// #4
  41b3d8:	mov	x3, #0x0                   	// #0
  41b3dc:	mov	w2, #0x40                  	// #64
  41b3e0:	bl	419c0c <parse_file_seq@@Base>
  41b3e4:	ldr	x1, [sp, #304]
  41b3e8:	mov	x26, x0
  41b3ec:	add	x1, x1, #0x1
  41b3f0:	str	x1, [sp, #304]
  41b3f4:	cbnz	x0, 41b434 <parse_file_seq@@Base+0x1828>
  41b3f8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b3fc:	mov	w2, #0x5                   	// #5
  41b400:	add	x1, x1, #0x419
  41b404:	b	41b31c <parse_file_seq@@Base+0x1710>
  41b408:	sub	x1, x20, #0x1
  41b40c:	mov	w0, #0x0                   	// #0
  41b410:	ldrb	w2, [x1], #-1
  41b414:	cmp	w2, #0x5c
  41b418:	b.eq	41b42c <parse_file_seq@@Base+0x1820>  // b.none
  41b41c:	cbz	w0, 41b3cc <parse_file_seq@@Base+0x17c0>
  41b420:	add	x0, x20, #0x1
  41b424:	mov	w1, #0x3a                  	// #58
  41b428:	b	41b3b4 <parse_file_seq@@Base+0x17a8>
  41b42c:	eor	w0, w0, #0x1
  41b430:	b	41b410 <parse_file_seq@@Base+0x1804>
  41b434:	ldr	x0, [x26]
  41b438:	cbz	x0, 41b44c <parse_file_seq@@Base+0x1840>
  41b43c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b440:	mov	w2, #0x5                   	// #5
  41b444:	add	x1, x1, #0x430
  41b448:	b	41a428 <parse_file_seq@@Base+0x81c>
  41b44c:	add	x0, x26, #0x8
  41b450:	bl	418e98 <find_percent_cached@@Base>
  41b454:	str	x0, [sp, #144]
  41b458:	ldr	x20, [x26, #8]
  41b45c:	cbnz	x0, 41b470 <parse_file_seq@@Base+0x1864>
  41b460:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b464:	mov	w2, #0x5                   	// #5
  41b468:	add	x1, x1, #0x449
  41b46c:	b	41b31c <parse_file_seq@@Base+0x1710>
  41b470:	mov	x0, x26
  41b474:	bl	406c20 <free@plt>
  41b478:	ldr	x26, [sp, #304]
  41b47c:	str	x26, [sp, #368]
  41b480:	mov	x0, x26
  41b484:	bl	406700 <strlen@plt>
  41b488:	sub	x0, x0, #0x1
  41b48c:	add	x1, sp, #0x158
  41b490:	add	x26, x26, x0
  41b494:	add	x0, sp, #0x170
  41b498:	str	x26, [sp, #344]
  41b49c:	bl	40f9c4 <strip_whitespace@@Base>
  41b4a0:	ldr	x1, [sp, #344]
  41b4a4:	ldr	x0, [sp, #368]
  41b4a8:	cmp	x0, x1
  41b4ac:	b.hi	41b5cc <parse_file_seq@@Base+0x19c0>  // b.pmore
  41b4b0:	ldrb	w2, [x0]
  41b4b4:	cbz	w2, 41b5cc <parse_file_seq@@Base+0x19c0>
  41b4b8:	sub	x1, x1, x0
  41b4bc:	add	x1, x1, #0x1
  41b4c0:	bl	416c40 <xstrndup@@Base>
  41b4c4:	str	x0, [sp, #136]
  41b4c8:	cbz	x21, 41b5d4 <parse_file_seq@@Base+0x19c8>
  41b4cc:	mov	x0, x21
  41b4d0:	bl	406700 <strlen@plt>
  41b4d4:	mov	x26, x0
  41b4d8:	ldr	w0, [x25, #8]
  41b4dc:	ldr	x1, [sp, #184]
  41b4e0:	str	w0, [sp, #152]
  41b4e4:	add	x0, x26, #0x2
  41b4e8:	cmp	x0, x1
  41b4ec:	b.ls	41b508 <parse_file_seq@@Base+0x18fc>  // b.plast
  41b4f0:	lsl	x0, x0, #1
  41b4f4:	str	x0, [sp, #184]
  41b4f8:	mov	x1, x0
  41b4fc:	ldr	x0, [sp, #128]
  41b500:	bl	416aa0 <xrealloc@@Base>
  41b504:	str	x0, [sp, #128]
  41b508:	ldr	x0, [sp, #128]
  41b50c:	mov	x1, x21
  41b510:	mov	x2, x26
  41b514:	add	x21, x26, #0x1
  41b518:	bl	4066c0 <memcpy@plt>
  41b51c:	ldr	x1, [sp, #128]
  41b520:	mov	w0, #0xa                   	// #10
  41b524:	strb	w0, [x1, x26]
  41b528:	ldr	w0, [sp, #236]
  41b52c:	cbz	w0, 41b710 <parse_file_seq@@Base+0x1b04>
  41b530:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41b534:	ldr	x0, [x0, #2016]
  41b538:	ldr	x0, [x0, #8]
  41b53c:	ldrb	w0, [x0]
  41b540:	cbnz	w0, 41b710 <parse_file_seq@@Base+0x1b04>
  41b544:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41b548:	str	x19, [sp, #200]
  41b54c:	ldr	x0, [x0, #2208]
  41b550:	str	x0, [sp, #240]
  41b554:	ldr	x0, [sp, #200]
  41b558:	mov	w1, #0x25                  	// #37
  41b55c:	ldr	x26, [x0, #8]
  41b560:	mov	x0, x26
  41b564:	bl	406c40 <strchr@plt>
  41b568:	cbnz	x0, 41b710 <parse_file_seq@@Base+0x1b04>
  41b56c:	ldrb	w0, [x26]
  41b570:	str	w0, [sp, #208]
  41b574:	cmp	w0, #0x2e
  41b578:	b.ne	41b58c <parse_file_seq@@Base+0x1980>  // b.any
  41b57c:	mov	x0, x26
  41b580:	mov	w1, #0x2f                  	// #47
  41b584:	bl	406c40 <strchr@plt>
  41b588:	cbz	x0, 41b700 <parse_file_seq@@Base+0x1af4>
  41b58c:	ldr	x0, [sp, #240]
  41b590:	ldr	x28, [x0, #24]
  41b594:	add	x0, x26, #0x1
  41b598:	str	x0, [sp, #256]
  41b59c:	mov	x25, x28
  41b5a0:	cbnz	x25, 41b5dc <parse_file_seq@@Base+0x19d0>
  41b5a4:	mov	x2, x26
  41b5a8:	mov	x6, #0x0                   	// #0
  41b5ac:	mov	x5, #0x0                   	// #0
  41b5b0:	mov	w4, #0x0                   	// #0
  41b5b4:	mov	w3, #0x2                   	// #2
  41b5b8:	mov	x1, #0xd                   	// #13
  41b5bc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41b5c0:	add	x0, x0, #0x589
  41b5c4:	bl	41f978 <define_variable_in_set@@Base>
  41b5c8:	b	41b710 <parse_file_seq@@Base+0x1b04>
  41b5cc:	str	xzr, [sp, #136]
  41b5d0:	b	41b4c8 <parse_file_seq@@Base+0x18bc>
  41b5d4:	mov	x21, #0x0                   	// #0
  41b5d8:	b	41b528 <parse_file_seq@@Base+0x191c>
  41b5dc:	ldr	x27, [x25, #8]
  41b5e0:	cbnz	x27, 41b648 <parse_file_seq@@Base+0x1a3c>
  41b5e4:	ldr	x0, [x25, #16]
  41b5e8:	ldr	x0, [x0]
  41b5ec:	str	x0, [sp, #192]
  41b5f0:	ldr	x0, [sp, #192]
  41b5f4:	ldrb	w0, [x0]
  41b5f8:	str	w0, [sp, #176]
  41b5fc:	cmp	w0, #0x2e
  41b600:	b.eq	41b638 <parse_file_seq@@Base+0x1a2c>  // b.none
  41b604:	ldr	x0, [sp, #192]
  41b608:	cmp	x0, x26
  41b60c:	b.eq	41b700 <parse_file_seq@@Base+0x1af4>  // b.none
  41b610:	ldr	w1, [sp, #176]
  41b614:	ldr	w0, [sp, #208]
  41b618:	cmp	w0, w1
  41b61c:	b.ne	41b638 <parse_file_seq@@Base+0x1a2c>  // b.any
  41b620:	cbz	w0, 41b700 <parse_file_seq@@Base+0x1af4>
  41b624:	cbz	x27, 41b650 <parse_file_seq@@Base+0x1a44>
  41b628:	add	x1, x27, #0x1
  41b62c:	ldr	x0, [sp, #256]
  41b630:	bl	406be0 <strcmp@plt>
  41b634:	cbz	w0, 41b700 <parse_file_seq@@Base+0x1af4>
  41b638:	add	x0, x27, #0x1
  41b63c:	mov	x4, x28
  41b640:	str	x0, [sp, #248]
  41b644:	b	41b6e4 <parse_file_seq@@Base+0x1ad8>
  41b648:	str	x27, [sp, #192]
  41b64c:	b	41b5f0 <parse_file_seq@@Base+0x19e4>
  41b650:	ldr	x0, [x25, #16]
  41b654:	ldr	x1, [x0]
  41b658:	add	x1, x1, #0x1
  41b65c:	b	41b62c <parse_file_seq@@Base+0x1a20>
  41b660:	ldr	x1, [x4, #8]
  41b664:	cbnz	x1, 41b670 <parse_file_seq@@Base+0x1a64>
  41b668:	ldr	x0, [x4, #16]
  41b66c:	ldr	x1, [x0]
  41b670:	mov	x0, x1
  41b674:	stp	x1, x4, [sp, #272]
  41b678:	bl	406700 <strlen@plt>
  41b67c:	mov	x2, x0
  41b680:	ldr	x1, [sp, #272]
  41b684:	mov	x0, x26
  41b688:	str	x2, [sp, #264]
  41b68c:	bl	4069b0 <strncmp@plt>
  41b690:	ldr	x4, [sp, #280]
  41b694:	cbnz	w0, 41b6e0 <parse_file_seq@@Base+0x1ad4>
  41b698:	ldr	x2, [sp, #264]
  41b69c:	ldr	x1, [sp, #192]
  41b6a0:	add	x0, x26, x2
  41b6a4:	cmp	x0, x1
  41b6a8:	b.eq	41b700 <parse_file_seq@@Base+0x1af4>  // b.none
  41b6ac:	ldrb	w0, [x26, x2]
  41b6b0:	ldr	w1, [sp, #176]
  41b6b4:	cmp	w1, w0
  41b6b8:	b.ne	41b6e0 <parse_file_seq@@Base+0x1ad4>  // b.any
  41b6bc:	cbz	w1, 41b700 <parse_file_seq@@Base+0x1af4>
  41b6c0:	add	x0, x2, #0x1
  41b6c4:	add	x0, x26, x0
  41b6c8:	cbz	x27, 41b6f0 <parse_file_seq@@Base+0x1ae4>
  41b6cc:	ldr	x1, [sp, #248]
  41b6d0:	str	x4, [sp, #264]
  41b6d4:	bl	406be0 <strcmp@plt>
  41b6d8:	ldr	x4, [sp, #264]
  41b6dc:	cbz	w0, 41b700 <parse_file_seq@@Base+0x1af4>
  41b6e0:	ldr	x4, [x4]
  41b6e4:	cbnz	x4, 41b660 <parse_file_seq@@Base+0x1a54>
  41b6e8:	ldr	x25, [x25]
  41b6ec:	b	41b5a0 <parse_file_seq@@Base+0x1994>
  41b6f0:	ldr	x1, [x25, #16]
  41b6f4:	ldr	x1, [x1]
  41b6f8:	add	x1, x1, #0x1
  41b6fc:	b	41b6d0 <parse_file_seq@@Base+0x1ac4>
  41b700:	ldr	x0, [sp, #200]
  41b704:	ldr	x0, [x0]
  41b708:	str	x0, [sp, #200]
  41b70c:	cbnz	x0, 41b554 <parse_file_seq@@Base+0x1948>
  41b710:	mov	w25, #0x0                   	// #0
  41b714:	mov	w28, #0x0                   	// #0
  41b718:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41b71c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41b720:	ldr	x0, [x0, #192]
  41b724:	ldr	w0, [x0]
  41b728:	cbz	w0, 41b744 <parse_file_seq@@Base+0x1b38>
  41b72c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b730:	mov	w2, #0x5                   	// #5
  41b734:	add	x1, x1, #0x469
  41b738:	b	41a428 <parse_file_seq@@Base+0x81c>
  41b73c:	str	w0, [sp, #232]
  41b740:	b	41a1c0 <parse_file_seq@@Base+0x5b4>
  41b744:	cbz	x19, 41b788 <parse_file_seq@@Base+0x1b7c>
  41b748:	ldr	w0, [sp, #160]
  41b74c:	mov	x7, x21
  41b750:	ldp	x6, x4, [sp, #128]
  41b754:	stp	x0, xzr, [sp, #328]
  41b758:	add	x0, sp, #0x140
  41b75c:	ldr	w5, [sp, #152]
  41b760:	mov	x2, x20
  41b764:	str	x0, [sp, #16]
  41b768:	mov	w1, w22
  41b76c:	ldrb	w0, [sp, #156]
  41b770:	ldr	x3, [sp, #144]
  41b774:	strb	w0, [sp, #8]
  41b778:	ldr	w0, [sp, #164]
  41b77c:	str	w0, [sp]
  41b780:	mov	x0, x19
  41b784:	bl	418fd4 <find_percent_cached@@Base+0x13c>
  41b788:	ldr	x0, [sp, #168]
  41b78c:	bl	406c20 <free@plt>
  41b790:	ldr	x0, [sp, #128]
  41b794:	bl	406c20 <free@plt>
  41b798:	ldp	x29, x30, [sp, #32]
  41b79c:	ldp	x19, x20, [sp, #48]
  41b7a0:	ldp	x21, x22, [sp, #64]
  41b7a4:	ldp	x23, x24, [sp, #80]
  41b7a8:	ldp	x25, x26, [sp, #96]
  41b7ac:	ldp	x27, x28, [sp, #112]
  41b7b0:	add	sp, sp, #0x1a0
  41b7b4:	ret
  41b7b8:	stp	x29, x30, [sp, #-160]!
  41b7bc:	mov	x29, sp
  41b7c0:	stp	x21, x22, [sp, #32]
  41b7c4:	adrp	x21, 440000 <output_context@@Base+0x1248>
  41b7c8:	add	x21, x21, #0xdc0
  41b7cc:	and	w22, w1, #0xffff
  41b7d0:	stp	x19, x20, [sp, #16]
  41b7d4:	mov	x20, x0
  41b7d8:	mov	x0, #0x40                  	// #64
  41b7dc:	stp	x23, x24, [sp, #48]
  41b7e0:	and	w23, w22, #0x8
  41b7e4:	stp	x25, x26, [sp, #64]
  41b7e8:	stp	x27, x28, [sp, #80]
  41b7ec:	bl	416a78 <xcalloc@@Base>
  41b7f0:	mov	x19, x0
  41b7f4:	ldr	x0, [x21, #32]
  41b7f8:	str	x19, [x21, #32]
  41b7fc:	str	x0, [x19]
  41b800:	mov	x0, #0x1                   	// #1
  41b804:	stp	x20, x0, [sp, #136]
  41b808:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41b80c:	ldr	w0, [x0, #1104]
  41b810:	str	xzr, [sp, #152]
  41b814:	tbz	w0, #1, 41b8b0 <parse_file_seq@@Base+0x1ca4>
  41b818:	mov	w2, #0x5                   	// #5
  41b81c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b820:	mov	x0, #0x0                   	// #0
  41b824:	add	x1, x1, #0x479
  41b828:	bl	406d60 <dcgettext@plt>
  41b82c:	mov	x1, x20
  41b830:	bl	406df0 <printf@plt>
  41b834:	tbz	w22, #0, 41b850 <parse_file_seq@@Base+0x1c44>
  41b838:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b83c:	add	x1, x1, #0x48f
  41b840:	mov	w2, #0x5                   	// #5
  41b844:	mov	x0, #0x0                   	// #0
  41b848:	bl	406d60 <dcgettext@plt>
  41b84c:	bl	406df0 <printf@plt>
  41b850:	tbz	w22, #1, 41b86c <parse_file_seq@@Base+0x1c60>
  41b854:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b858:	add	x1, x1, #0x4a2
  41b85c:	mov	w2, #0x5                   	// #5
  41b860:	mov	x0, #0x0                   	// #0
  41b864:	bl	406d60 <dcgettext@plt>
  41b868:	bl	406df0 <printf@plt>
  41b86c:	tbz	w22, #2, 41b888 <parse_file_seq@@Base+0x1c7c>
  41b870:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b874:	add	x1, x1, #0x4b1
  41b878:	mov	w2, #0x5                   	// #5
  41b87c:	mov	x0, #0x0                   	// #0
  41b880:	bl	406d60 <dcgettext@plt>
  41b884:	bl	406df0 <printf@plt>
  41b888:	cbz	w23, 41b8a4 <parse_file_seq@@Base+0x1c98>
  41b88c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41b890:	add	x1, x1, #0x4bf
  41b894:	mov	w2, #0x5                   	// #5
  41b898:	mov	x0, #0x0                   	// #0
  41b89c:	bl	406d60 <dcgettext@plt>
  41b8a0:	bl	406df0 <printf@plt>
  41b8a4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41b8a8:	add	x0, x0, #0x8e1
  41b8ac:	bl	406b80 <puts@plt>
  41b8b0:	cbnz	w23, 41b948 <parse_file_seq@@Base+0x1d3c>
  41b8b4:	ldrb	w0, [x20]
  41b8b8:	cmp	w0, #0x7e
  41b8bc:	b.ne	41b948 <parse_file_seq@@Base+0x1d3c>  // b.any
  41b8c0:	mov	x0, x20
  41b8c4:	bl	4198b4 <tilde_expand@@Base>
  41b8c8:	cmp	x0, #0x0
  41b8cc:	mov	x23, x0
  41b8d0:	csel	x20, x20, x0, eq  // eq = none
  41b8d4:	adrp	x25, 422000 <fd_inherit@@Base+0x20>
  41b8d8:	bl	406e00 <__errno_location@plt>
  41b8dc:	add	x25, x25, #0xf05
  41b8e0:	mov	x24, x0
  41b8e4:	str	wzr, [x24]
  41b8e8:	mov	x1, x25
  41b8ec:	mov	x0, x20
  41b8f0:	bl	406930 <fopen@plt>
  41b8f4:	mov	x1, x0
  41b8f8:	str	x1, [sp, #128]
  41b8fc:	ldr	w0, [x24]
  41b900:	cbnz	x1, 41b90c <parse_file_seq@@Base+0x1d00>
  41b904:	cmp	w0, #0x4
  41b908:	b.eq	41b8e4 <parse_file_seq@@Base+0x1cd8>  // b.none
  41b90c:	str	w0, [x19, #36]
  41b910:	cmp	w0, #0xc
  41b914:	b.eq	41b924 <parse_file_seq@@Base+0x1d18>  // b.none
  41b918:	sub	w2, w0, #0x17
  41b91c:	cmp	w2, #0x1
  41b920:	b.hi	41b950 <parse_file_seq@@Base+0x1d44>  // b.pmore
  41b924:	bl	406ad0 <strerror@plt>
  41b928:	mov	x19, x0
  41b92c:	bl	406700 <strlen@plt>
  41b930:	mov	x1, x0
  41b934:	ldr	x0, [x21, #40]
  41b938:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  41b93c:	mov	x3, x19
  41b940:	add	x2, x2, #0xe5c
  41b944:	bl	417d24 <fatal@@Base>
  41b948:	mov	x23, #0x0                   	// #0
  41b94c:	b	41b8d4 <parse_file_seq@@Base+0x1cc8>
  41b950:	cbnz	x1, 41b964 <parse_file_seq@@Base+0x1d58>
  41b954:	tbz	w22, #1, 41b964 <parse_file_seq@@Base+0x1d58>
  41b958:	ldrb	w0, [x20]
  41b95c:	cmp	w0, #0x2f
  41b960:	b.ne	41ba10 <parse_file_seq@@Base+0x1e04>  // b.any
  41b964:	mov	x0, x20
  41b968:	bl	41f174 <strcache_add@@Base>
  41b96c:	mov	x20, x0
  41b970:	bl	40be54 <lookup_file@@Base>
  41b974:	str	x0, [x19, #16]
  41b978:	cbnz	x0, 41b988 <parse_file_seq@@Base+0x1d7c>
  41b97c:	mov	x0, x20
  41b980:	bl	40bec0 <enter_file@@Base>
  41b984:	str	x0, [x19, #16]
  41b988:	ldr	x0, [x19, #16]
  41b98c:	ldr	x25, [x0]
  41b990:	strb	w22, [x19, #32]
  41b994:	mov	x0, x23
  41b998:	bl	406c20 <free@plt>
  41b99c:	ldr	x0, [sp, #128]
  41b9a0:	cbnz	x0, 41ba28 <parse_file_seq@@Base+0x1e1c>
  41b9a4:	ldr	w0, [x19, #36]
  41b9a8:	mov	x1, #0x1                   	// #1
  41b9ac:	str	w0, [x24]
  41b9b0:	ldr	x0, [x19, #16]
  41b9b4:	str	x1, [x0, #112]
  41b9b8:	mov	x0, x19
  41b9bc:	ldp	x19, x20, [sp, #16]
  41b9c0:	ldp	x21, x22, [sp, #32]
  41b9c4:	ldp	x23, x24, [sp, #48]
  41b9c8:	ldp	x25, x26, [sp, #64]
  41b9cc:	ldp	x27, x28, [sp, #80]
  41b9d0:	ldp	x29, x30, [sp], #160
  41b9d4:	ret
  41b9d8:	mov	x3, x20
  41b9dc:	mov	x2, x28
  41b9e0:	mov	w0, #0x3                   	// #3
  41b9e4:	bl	416ad4 <concat@@Base>
  41b9e8:	mov	x1, x25
  41b9ec:	mov	x26, x0
  41b9f0:	bl	406930 <fopen@plt>
  41b9f4:	str	x0, [sp, #128]
  41b9f8:	cbnz	x0, 41ba20 <parse_file_seq@@Base+0x1e14>
  41b9fc:	add	w27, w27, #0x1
  41ba00:	ldr	x0, [x21, #8]
  41ba04:	ldr	x1, [x0, w27, uxtw #3]
  41ba08:	cbnz	x1, 41b9d8 <parse_file_seq@@Base+0x1dcc>
  41ba0c:	b	41b964 <parse_file_seq@@Base+0x1d58>
  41ba10:	adrp	x28, 423000 <_IO_stdin_used@@Base+0x720>
  41ba14:	mov	w27, #0x0                   	// #0
  41ba18:	add	x28, x28, #0xb38
  41ba1c:	b	41ba00 <parse_file_seq@@Base+0x1df4>
  41ba20:	mov	x20, x26
  41ba24:	b	41b964 <parse_file_seq@@Base+0x1d58>
  41ba28:	str	wzr, [x19, #36]
  41ba2c:	add	x20, sp, #0x88
  41ba30:	bl	4068c0 <fileno@plt>
  41ba34:	bl	422098 <fd_noinherit@@Base>
  41ba38:	mov	x2, x25
  41ba3c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  41ba40:	add	x1, x1, #0x752
  41ba44:	mov	w5, #0x0                   	// #0
  41ba48:	mov	w4, #0x6                   	// #6
  41ba4c:	mov	w3, #0x2                   	// #2
  41ba50:	mov	x0, x20
  41ba54:	bl	420878 <do_variable_definition@@Base>
  41ba58:	mov	x0, #0xc8                  	// #200
  41ba5c:	str	x0, [sp, #120]
  41ba60:	bl	416a54 <xmalloc@@Base>
  41ba64:	stp	x0, x0, [sp, #96]
  41ba68:	mvn	w1, w22
  41ba6c:	and	w1, w1, #0x1
  41ba70:	str	x0, [sp, #112]
  41ba74:	add	x0, sp, #0x60
  41ba78:	ldr	x23, [x21, #40]
  41ba7c:	str	x20, [x21, #40]
  41ba80:	bl	41a134 <parse_file_seq@@Base+0x528>
  41ba84:	str	x23, [x21, #40]
  41ba88:	ldr	x0, [sp, #128]
  41ba8c:	bl	406900 <fclose@plt>
  41ba90:	ldr	x0, [sp, #112]
  41ba94:	bl	406c20 <free@plt>
  41ba98:	str	wzr, [x24]
  41ba9c:	b	41b9b8 <parse_file_seq@@Base+0x1dac>

000000000041baa0 <read_all_makefiles@@Base>:
  41baa0:	stp	x29, x30, [sp, #-80]!
  41baa4:	mov	x6, #0x0                   	// #0
  41baa8:	mov	w4, #0x0                   	// #0
  41baac:	mov	x29, sp
  41bab0:	stp	x19, x20, [sp, #16]
  41bab4:	mov	x19, x0
  41bab8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41babc:	stp	x21, x22, [sp, #32]
  41bac0:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x1720>
  41bac4:	add	x21, x21, #0x819
  41bac8:	ldr	x0, [x0, #304]
  41bacc:	mov	x2, x21
  41bad0:	mov	w3, #0x2                   	// #2
  41bad4:	mov	x1, #0xd                   	// #13
  41bad8:	ldr	x5, [x0, #8]
  41badc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41bae0:	add	x0, x0, #0x752
  41bae4:	str	x23, [sp, #48]
  41bae8:	bl	41f978 <define_variable_in_set@@Base>
  41baec:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41baf0:	ldr	w0, [x0, #1104]
  41baf4:	tbz	w0, #0, 41bb1c <read_all_makefiles@@Base+0x7c>
  41baf8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41bafc:	add	x1, x1, #0x4d1
  41bb00:	mov	w2, #0x5                   	// #5
  41bb04:	mov	x0, #0x0                   	// #0
  41bb08:	bl	406d60 <dcgettext@plt>
  41bb0c:	bl	406df0 <printf@plt>
  41bb10:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41bb14:	ldr	x0, [x0, #400]
  41bb18:	bl	406cb0 <fflush@plt>
  41bb1c:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  41bb20:	mov	x1, #0x0                   	// #0
  41bb24:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41bb28:	add	x0, x0, #0x4e7
  41bb2c:	ldr	w23, [x22, #2056]
  41bb30:	str	wzr, [x22, #2056]
  41bb34:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  41bb38:	mov	x20, x0
  41bb3c:	str	w23, [x22, #2056]
  41bb40:	str	x0, [sp, #64]
  41bb44:	add	x1, sp, #0x48
  41bb48:	add	x0, sp, #0x40
  41bb4c:	bl	416ccc <find_next_token@@Base>
  41bb50:	cbnz	x0, 41bba8 <read_all_makefiles@@Base+0x108>
  41bb54:	mov	x0, x20
  41bb58:	bl	406c20 <free@plt>
  41bb5c:	cbnz	x19, 41bc34 <read_all_makefiles@@Base+0x194>
  41bb60:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  41bb64:	add	x19, x19, #0xc0
  41bb68:	add	x20, x19, #0x30
  41bb6c:	ldr	x0, [x20]
  41bb70:	cbnz	x0, 41bc3c <read_all_makefiles@@Base+0x19c>
  41bb74:	ldr	x0, [x20]
  41bb78:	cbnz	x0, 41bc4c <read_all_makefiles@@Base+0x1ac>
  41bb7c:	adrp	x22, 440000 <output_context@@Base+0x1248>
  41bb80:	add	x22, x22, #0xdc0
  41bb84:	ldr	x20, [x22, #32]
  41bb88:	cbnz	x20, 41bc70 <read_all_makefiles@@Base+0x1d0>
  41bb8c:	add	x19, x19, #0x30
  41bb90:	mov	w23, #0x4                   	// #4
  41bb94:	ldr	x0, [x19]
  41bb98:	cbnz	x0, 41bc80 <read_all_makefiles@@Base+0x1e0>
  41bb9c:	cbz	x20, 41bc18 <read_all_makefiles@@Base+0x178>
  41bba0:	str	xzr, [x20]
  41bba4:	b	41bc18 <read_all_makefiles@@Base+0x178>
  41bba8:	ldr	x1, [sp, #64]
  41bbac:	ldrb	w2, [x1]
  41bbb0:	cbz	w2, 41bbc0 <read_all_makefiles@@Base+0x120>
  41bbb4:	add	x2, x1, #0x1
  41bbb8:	str	x2, [sp, #64]
  41bbbc:	strb	wzr, [x1]
  41bbc0:	bl	41f174 <strcache_add@@Base>
  41bbc4:	mov	w1, #0x7                   	// #7
  41bbc8:	bl	41b7b8 <parse_file_seq@@Base+0x1bac>
  41bbcc:	b	41bb44 <read_all_makefiles@@Base+0xa4>
  41bbd0:	mov	w1, #0x0                   	// #0
  41bbd4:	bl	41b7b8 <parse_file_seq@@Base+0x1bac>
  41bbd8:	mov	x22, x0
  41bbdc:	bl	406e00 <__errno_location@plt>
  41bbe0:	ldr	w0, [x0]
  41bbe4:	cbz	w0, 41bbf4 <read_all_makefiles@@Base+0x154>
  41bbe8:	ldr	x1, [x19, x20, lsl #3]
  41bbec:	mov	x0, x21
  41bbf0:	bl	417c10 <perror_with_name@@Base>
  41bbf4:	ldr	x0, [x22, #8]
  41bbf8:	cbnz	x0, 41bc04 <read_all_makefiles@@Base+0x164>
  41bbfc:	ldr	x0, [x22, #16]
  41bc00:	ldr	x0, [x0]
  41bc04:	str	x0, [x19, x20, lsl #3]
  41bc08:	add	x20, x20, #0x1
  41bc0c:	ldr	x0, [x19, x20, lsl #3]
  41bc10:	cbnz	x0, 41bbd0 <read_all_makefiles@@Base+0x130>
  41bc14:	cbz	w20, 41bb60 <read_all_makefiles@@Base+0xc0>
  41bc18:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41bc1c:	ldp	x19, x20, [sp, #16]
  41bc20:	ldr	x0, [x0, #3552]
  41bc24:	ldp	x21, x22, [sp, #32]
  41bc28:	ldr	x23, [sp, #48]
  41bc2c:	ldp	x29, x30, [sp], #80
  41bc30:	ret
  41bc34:	mov	x20, #0x0                   	// #0
  41bc38:	b	41bc0c <read_all_makefiles@@Base+0x16c>
  41bc3c:	bl	40aaa4 <file_exists_p@@Base>
  41bc40:	cbnz	w0, 41bb74 <read_all_makefiles@@Base+0xd4>
  41bc44:	add	x20, x20, #0x8
  41bc48:	b	41bb6c <read_all_makefiles@@Base+0xcc>
  41bc4c:	mov	w1, #0x0                   	// #0
  41bc50:	bl	41b7b8 <parse_file_seq@@Base+0x1bac>
  41bc54:	bl	406e00 <__errno_location@plt>
  41bc58:	ldr	w0, [x0]
  41bc5c:	cbz	w0, 41bc18 <read_all_makefiles@@Base+0x178>
  41bc60:	ldr	x1, [x20]
  41bc64:	mov	x0, x21
  41bc68:	bl	417c10 <perror_with_name@@Base>
  41bc6c:	b	41bc18 <read_all_makefiles@@Base+0x178>
  41bc70:	ldr	x0, [x20]
  41bc74:	cbz	x0, 41bb8c <read_all_makefiles@@Base+0xec>
  41bc78:	mov	x20, x0
  41bc7c:	b	41bb88 <read_all_makefiles@@Base+0xe8>
  41bc80:	mov	x0, #0x40                  	// #64
  41bc84:	bl	416a78 <xcalloc@@Base>
  41bc88:	mov	x21, x0
  41bc8c:	ldr	x0, [x19]
  41bc90:	bl	41f174 <strcache_add@@Base>
  41bc94:	bl	40bec0 <enter_file@@Base>
  41bc98:	str	x0, [x21, #16]
  41bc9c:	strb	w23, [x21, #32]
  41bca0:	cbnz	x20, 41bcb4 <read_all_makefiles@@Base+0x214>
  41bca4:	str	x21, [x22, #32]
  41bca8:	add	x19, x19, #0x8
  41bcac:	mov	x20, x21
  41bcb0:	b	41bb94 <read_all_makefiles@@Base+0xf4>
  41bcb4:	str	x21, [x20]
  41bcb8:	b	41bca8 <read_all_makefiles@@Base+0x208>

000000000041bcbc <eval_buffer@@Base>:
  41bcbc:	stp	x29, x30, [sp, #-144]!
  41bcc0:	mov	x29, sp
  41bcc4:	stp	x19, x20, [sp, #16]
  41bcc8:	mov	x19, x0
  41bccc:	mov	x20, x1
  41bcd0:	str	x21, [sp, #32]
  41bcd4:	bl	406700 <strlen@plt>
  41bcd8:	stp	x19, x19, [sp, #80]
  41bcdc:	stp	x19, x0, [sp, #96]
  41bce0:	adrp	x19, 440000 <output_context@@Base+0x1248>
  41bce4:	add	x19, x19, #0xdc0
  41bce8:	str	xzr, [sp, #112]
  41bcec:	ldr	x21, [x19, #40]
  41bcf0:	cbz	x20, 41bd4c <eval_buffer@@Base+0x90>
  41bcf4:	ldp	x0, x1, [x20]
  41bcf8:	stp	x0, x1, [sp, #120]
  41bcfc:	ldr	x0, [x20, #16]
  41bd00:	str	x0, [sp, #136]
  41bd04:	add	x0, sp, #0x78
  41bd08:	str	x0, [x19, #40]
  41bd0c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41bd10:	add	x1, sp, #0x38
  41bd14:	stp	xzr, xzr, [sp, #56]
  41bd18:	ldr	x20, [x0, #192]
  41bd1c:	str	x1, [x0, #192]
  41bd20:	mov	w1, #0x1                   	// #1
  41bd24:	add	x0, sp, #0x50
  41bd28:	str	xzr, [sp, #72]
  41bd2c:	bl	41a134 <parse_file_seq@@Base+0x528>
  41bd30:	mov	x0, x20
  41bd34:	bl	418148 <out_of_memory@@Base+0x2a0>
  41bd38:	str	x21, [x19, #40]
  41bd3c:	ldp	x19, x20, [sp, #16]
  41bd40:	ldr	x21, [sp, #32]
  41bd44:	ldp	x29, x30, [sp], #144
  41bd48:	ret
  41bd4c:	cbz	x21, 41bd60 <eval_buffer@@Base+0xa4>
  41bd50:	ldp	x0, x1, [x21]
  41bd54:	stp	x0, x1, [sp, #120]
  41bd58:	ldr	x0, [x21, #16]
  41bd5c:	b	41bd00 <eval_buffer@@Base+0x44>
  41bd60:	mov	x0, #0x1                   	// #1
  41bd64:	stp	xzr, x0, [sp, #120]
  41bd68:	str	xzr, [sp, #136]
  41bd6c:	b	41bd04 <eval_buffer@@Base+0x48>
  41bd70:	mov	x12, #0x20c0                	// #8384
  41bd74:	sub	sp, sp, x12
  41bd78:	stp	x29, x30, [sp]
  41bd7c:	mov	x29, sp
  41bd80:	stp	x21, x22, [sp, #32]
  41bd84:	mov	x21, x0
  41bd88:	stp	x19, x20, [sp, #16]
  41bd8c:	add	x1, sp, #0x30
  41bd90:	mov	x0, x21
  41bd94:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  41bd98:	cmn	w0, #0x1
  41bd9c:	b.ne	41bdf4 <eval_buffer@@Base+0x138>  // b.any
  41bda0:	bl	406e00 <__errno_location@plt>
  41bda4:	ldr	w0, [x0]
  41bda8:	cmp	w0, #0x4
  41bdac:	b.eq	41bd8c <eval_buffer@@Base+0xd0>  // b.none
  41bdb0:	bl	406e00 <__errno_location@plt>
  41bdb4:	ldr	w0, [x0]
  41bdb8:	cmp	w0, #0x2
  41bdbc:	ccmp	w0, #0x14, #0x4, ne  // ne = any
  41bdc0:	b.eq	41be88 <eval_buffer@@Base+0x1cc>  // b.none
  41bdc4:	mov	x20, #0x1                   	// #1
  41bdc8:	mov	x1, x21
  41bdcc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41bdd0:	add	x0, x0, #0x63e
  41bdd4:	bl	417c10 <perror_with_name@@Base>
  41bdd8:	mov	x0, x20
  41bddc:	mov	x12, #0x20c0                	// #8384
  41bde0:	ldp	x29, x30, [sp]
  41bde4:	ldp	x19, x20, [sp, #16]
  41bde8:	ldp	x21, x22, [sp, #32]
  41bdec:	add	sp, sp, x12
  41bdf0:	ret
  41bdf4:	cbnz	w0, 41bdb0 <eval_buffer@@Base+0xf4>
  41bdf8:	ldp	x1, x2, [sp, #136]
  41bdfc:	mov	x0, x21
  41be00:	bl	40cfb8 <file_timestamp_cons@@Base>
  41be04:	mov	x20, x0
  41be08:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41be0c:	ldr	w0, [x0, #3408]
  41be10:	cbz	w0, 41bdd8 <eval_buffer@@Base+0x11c>
  41be14:	mov	x0, x21
  41be18:	bl	406700 <strlen@plt>
  41be1c:	cmp	x0, #0x1, lsl #12
  41be20:	b.hi	41bdd8 <eval_buffer@@Base+0x11c>  // b.pmore
  41be24:	add	x19, sp, #0xb0
  41be28:	mov	x1, x21
  41be2c:	mov	x0, x19
  41be30:	bl	406cc0 <strcpy@plt>
  41be34:	mov	x0, #0x10b8                	// #4280
  41be38:	add	x22, sp, x0
  41be3c:	add	x1, sp, #0x30
  41be40:	mov	x0, x19
  41be44:	bl	4228c0 <__libc_csu_fini@@Base+0x38>
  41be48:	cmn	w0, #0x1
  41be4c:	b.ne	41be90 <eval_buffer@@Base+0x1d4>  // b.any
  41be50:	bl	406e00 <__errno_location@plt>
  41be54:	ldr	w0, [x0]
  41be58:	cmp	w0, #0x4
  41be5c:	b.eq	41be3c <eval_buffer@@Base+0x180>  // b.none
  41be60:	bl	406e00 <__errno_location@plt>
  41be64:	ldr	w0, [x0]
  41be68:	cmp	w0, #0x2
  41be6c:	ccmp	w0, #0x14, #0x4, ne  // ne = any
  41be70:	b.eq	41bdd8 <eval_buffer@@Base+0x11c>  // b.none
  41be74:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41be78:	mov	x1, x19
  41be7c:	add	x0, x0, #0x53a
  41be80:	bl	417c10 <perror_with_name@@Base>
  41be84:	b	41bdd8 <eval_buffer@@Base+0x11c>
  41be88:	mov	x20, #0x1                   	// #1
  41be8c:	b	41be08 <eval_buffer@@Base+0x14c>
  41be90:	cbnz	w0, 41be60 <eval_buffer@@Base+0x1a4>
  41be94:	ldr	w0, [sp, #64]
  41be98:	and	w0, w0, #0xf000
  41be9c:	cmp	w0, #0xa, lsl #12
  41bea0:	b.ne	41bdd8 <eval_buffer@@Base+0x11c>  // b.any
  41bea4:	ldp	x1, x2, [sp, #136]
  41bea8:	mov	x0, x19
  41beac:	bl	40cfb8 <file_timestamp_cons@@Base>
  41beb0:	cmp	x20, x0
  41beb4:	csel	x20, x20, x0, cs  // cs = hs, nlast
  41beb8:	mov	x1, x22
  41bebc:	mov	x0, x19
  41bec0:	mov	x2, #0x1000                	// #4096
  41bec4:	bl	406790 <readlink@plt>
  41bec8:	mov	x21, x0
  41becc:	cmn	x0, #0x1
  41bed0:	b.ne	41bef4 <eval_buffer@@Base+0x238>  // b.any
  41bed4:	bl	406e00 <__errno_location@plt>
  41bed8:	ldr	w0, [x0]
  41bedc:	cmp	w0, #0x4
  41bee0:	b.eq	41beb8 <eval_buffer@@Base+0x1fc>  // b.none
  41bee4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41bee8:	mov	x1, x19
  41beec:	add	x0, x0, #0x542
  41bef0:	b	41be80 <eval_buffer@@Base+0x1c4>
  41bef4:	tbnz	x0, #63, 41bee4 <eval_buffer@@Base+0x228>
  41bef8:	strb	wzr, [x22, x0]
  41befc:	add	x0, sp, #0x1, lsl #12
  41bf00:	ldrb	w0, [x0, #184]
  41bf04:	cmp	w0, #0x2f
  41bf08:	b.eq	41bf1c <eval_buffer@@Base+0x260>  // b.none
  41bf0c:	mov	x0, x19
  41bf10:	mov	w1, #0x2f                  	// #47
  41bf14:	bl	406b00 <strrchr@plt>
  41bf18:	cbnz	x0, 41bf2c <eval_buffer@@Base+0x270>
  41bf1c:	mov	x1, x22
  41bf20:	mov	x0, x19
  41bf24:	bl	406cc0 <strcpy@plt>
  41bf28:	b	41be3c <eval_buffer@@Base+0x180>
  41bf2c:	sub	x1, x0, x19
  41bf30:	add	x21, x1, x21
  41bf34:	cmp	x21, #0xffe
  41bf38:	b.gt	41bdd8 <eval_buffer@@Base+0x11c>
  41bf3c:	mov	x1, x22
  41bf40:	add	x0, x0, #0x1
  41bf44:	b	41bf24 <eval_buffer@@Base+0x268>

000000000041bf48 <show_goal_error@@Base>:
  41bf48:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41bf4c:	add	x2, x0, #0xe08
  41bf50:	ldr	x1, [x0, #3592]
  41bf54:	ldrb	w0, [x1, #32]
  41bf58:	and	w0, w0, #0x6
  41bf5c:	cmp	w0, #0x2
  41bf60:	b.ne	41bff8 <show_goal_error@@Base+0xb0>  // b.any
  41bf64:	stp	x29, x30, [sp, #-48]!
  41bf68:	mov	x29, sp
  41bf6c:	stp	x19, x20, [sp, #16]
  41bf70:	ldr	x19, [x2, #8]
  41bf74:	str	x21, [sp, #32]
  41bf78:	cbz	x19, 41bfe0 <show_goal_error@@Base+0x98>
  41bf7c:	ldr	x0, [x1, #16]
  41bf80:	ldr	x2, [x19, #16]
  41bf84:	cmp	x0, x2
  41bf88:	b.ne	41bff0 <show_goal_error@@Base+0xa8>  // b.any
  41bf8c:	ldr	w21, [x19, #36]
  41bf90:	cbz	w21, 41bfe0 <show_goal_error@@Base+0x98>
  41bf94:	ldr	x0, [x0]
  41bf98:	bl	406700 <strlen@plt>
  41bf9c:	mov	x20, x0
  41bfa0:	mov	w0, w21
  41bfa4:	bl	406ad0 <strerror@plt>
  41bfa8:	bl	406700 <strlen@plt>
  41bfac:	add	x20, x20, x0
  41bfb0:	ldr	x0, [x19, #16]
  41bfb4:	ldr	x21, [x0]
  41bfb8:	ldr	w0, [x19, #36]
  41bfbc:	bl	406ad0 <strerror@plt>
  41bfc0:	mov	x4, x0
  41bfc4:	mov	x3, x21
  41bfc8:	mov	x1, x20
  41bfcc:	add	x0, x19, #0x28
  41bfd0:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  41bfd4:	add	x2, x2, #0x1a8
  41bfd8:	bl	417aa8 <error@@Base>
  41bfdc:	str	wzr, [x19, #36]
  41bfe0:	ldp	x19, x20, [sp, #16]
  41bfe4:	ldr	x21, [sp, #32]
  41bfe8:	ldp	x29, x30, [sp], #48
  41bfec:	ret
  41bff0:	ldr	x19, [x19]
  41bff4:	b	41bf78 <show_goal_error@@Base+0x30>
  41bff8:	ret
  41bffc:	stp	x29, x30, [sp, #-64]!
  41c000:	mov	x29, sp
  41c004:	stp	x19, x20, [sp, #16]
  41c008:	mov	x19, x0
  41c00c:	stp	x21, x22, [sp, #32]
  41c010:	stp	x23, x24, [sp, #48]
  41c014:	ldr	x0, [x19, #24]
  41c018:	cbnz	x0, 41c08c <show_goal_error@@Base+0x144>
  41c01c:	bl	41bf48 <show_goal_error@@Base>
  41c020:	adrp	x21, 425000 <_IO_stdin_used@@Base+0x2720>
  41c024:	ldr	x24, [x19, #96]
  41c028:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x3720>
  41c02c:	add	x21, x21, #0x64e
  41c030:	add	x22, x22, #0xee4
  41c034:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  41c038:	cbnz	x24, 41c0b8 <show_goal_error@@Base+0x170>
  41c03c:	ldr	x0, [x19]
  41c040:	bl	406700 <strlen@plt>
  41c044:	add	x20, x0, #0x4
  41c048:	mov	w2, #0x5                   	// #5
  41c04c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41c050:	mov	x0, #0x0                   	// #0
  41c054:	add	x1, x1, #0x57d
  41c058:	bl	406d60 <dcgettext@plt>
  41c05c:	mov	x2, x0
  41c060:	ldr	w0, [x23, #1996]
  41c064:	cbnz	w0, 41c154 <show_goal_error@@Base+0x20c>
  41c068:	ldr	x4, [x19]
  41c06c:	adrp	x5, 424000 <_IO_stdin_used@@Base+0x1720>
  41c070:	add	x5, x5, #0x819
  41c074:	mov	x1, x20
  41c078:	mov	x3, x5
  41c07c:	mov	x0, #0x0                   	// #0
  41c080:	bl	417d24 <fatal@@Base>
  41c084:	mov	x19, x1
  41c088:	b	41c014 <show_goal_error@@Base+0xcc>
  41c08c:	ldr	x1, [x0, #16]
  41c090:	ldrb	w2, [x1, #137]
  41c094:	tbz	w2, #2, 41c0b0 <show_goal_error@@Base+0x168>
  41c098:	ldrb	w2, [x1, #136]
  41c09c:	and	w2, w2, #0x3
  41c0a0:	cmp	w2, #0x1
  41c0a4:	b.ls	41c0b0 <show_goal_error@@Base+0x168>  // b.plast
  41c0a8:	ldrb	w2, [x19, #138]
  41c0ac:	tbnz	w2, #3, 41c084 <show_goal_error@@Base+0x13c>
  41c0b0:	ldr	x0, [x0]
  41c0b4:	b	41c018 <show_goal_error@@Base+0xd0>
  41c0b8:	ldr	x0, [x19]
  41c0bc:	bl	406700 <strlen@plt>
  41c0c0:	mov	x20, x0
  41c0c4:	ldr	x0, [x24]
  41c0c8:	bl	406700 <strlen@plt>
  41c0cc:	add	x20, x20, x0
  41c0d0:	mov	w2, #0x5                   	// #5
  41c0d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41c0d8:	mov	x0, #0x0                   	// #0
  41c0dc:	add	x1, x1, #0x54d
  41c0e0:	bl	406d60 <dcgettext@plt>
  41c0e4:	add	x20, x20, #0x4
  41c0e8:	ldr	w1, [x23, #1996]
  41c0ec:	mov	x2, x0
  41c0f0:	ldr	x0, [x19, #96]
  41c0f4:	cbnz	w1, 41c118 <show_goal_error@@Base+0x1d0>
  41c0f8:	ldr	x5, [x0]
  41c0fc:	adrp	x6, 424000 <_IO_stdin_used@@Base+0x1720>
  41c100:	ldr	x4, [x19]
  41c104:	add	x6, x6, #0x819
  41c108:	mov	x3, x6
  41c10c:	mov	x1, x20
  41c110:	mov	x0, #0x0                   	// #0
  41c114:	bl	417d24 <fatal@@Base>
  41c118:	ldr	x5, [x0]
  41c11c:	mov	x6, x21
  41c120:	ldr	x4, [x19]
  41c124:	mov	x3, x22
  41c128:	mov	x1, x20
  41c12c:	mov	x0, #0x0                   	// #0
  41c130:	bl	417aa8 <error@@Base>
  41c134:	ldrb	w0, [x19, #138]
  41c138:	and	w0, w0, #0xfffffff7
  41c13c:	strb	w0, [x19, #138]
  41c140:	ldp	x19, x20, [sp, #16]
  41c144:	ldp	x21, x22, [sp, #32]
  41c148:	ldp	x23, x24, [sp, #48]
  41c14c:	ldp	x29, x30, [sp], #64
  41c150:	ret
  41c154:	ldr	x4, [x19]
  41c158:	mov	x5, x21
  41c15c:	mov	x3, x22
  41c160:	mov	x1, x20
  41c164:	mov	x0, #0x0                   	// #0
  41c168:	bl	417aa8 <error@@Base>
  41c16c:	b	41c134 <show_goal_error@@Base+0x1ec>

000000000041c170 <f_mtime@@Base>:
  41c170:	stp	x29, x30, [sp, #-272]!
  41c174:	mov	x29, sp
  41c178:	stp	x19, x20, [sp, #16]
  41c17c:	mov	x19, x0
  41c180:	ldr	x0, [x0]
  41c184:	stp	x21, x22, [sp, #32]
  41c188:	mov	w21, w1
  41c18c:	stp	x23, x24, [sp, #48]
  41c190:	stp	x25, x26, [sp, #64]
  41c194:	stp	x27, x28, [sp, #80]
  41c198:	bl	408a20 <ar_name@@Base>
  41c19c:	cbz	w0, 41c488 <f_mtime@@Base+0x318>
  41c1a0:	ldr	x0, [x19]
  41c1a4:	add	x2, x29, #0xa8
  41c1a8:	add	x1, x29, #0xa0
  41c1ac:	bl	408ad4 <ar_parse_name@@Base>
  41c1b0:	ldr	x0, [x29, #160]
  41c1b4:	bl	40be54 <lookup_file@@Base>
  41c1b8:	mov	x20, x0
  41c1bc:	cbnz	x0, 41c1d0 <f_mtime@@Base+0x60>
  41c1c0:	ldr	x0, [x29, #160]
  41c1c4:	bl	41f174 <strcache_add@@Base>
  41c1c8:	bl	40bec0 <enter_file@@Base>
  41c1cc:	mov	x20, x0
  41c1d0:	mov	w1, w21
  41c1d4:	mov	x0, x20
  41c1d8:	bl	41c170 <f_mtime@@Base>
  41c1dc:	str	x0, [x29, #144]
  41c1e0:	mov	x24, x20
  41c1e4:	ldr	x20, [x20, #72]
  41c1e8:	cbnz	x20, 41c1e0 <f_mtime@@Base+0x70>
  41c1ec:	cbz	w21, 41c2a0 <f_mtime@@Base+0x130>
  41c1f0:	ldr	x1, [x29, #160]
  41c1f4:	ldr	x25, [x24, #8]
  41c1f8:	mov	x0, x25
  41c1fc:	bl	406be0 <strcmp@plt>
  41c200:	cbz	w0, 41c2a0 <f_mtime@@Base+0x130>
  41c204:	mov	x0, x25
  41c208:	bl	406700 <strlen@plt>
  41c20c:	ldr	x26, [x29, #168]
  41c210:	mov	x20, x0
  41c214:	mov	x0, x26
  41c218:	bl	406700 <strlen@plt>
  41c21c:	add	x22, x20, x0
  41c220:	mov	x23, x0
  41c224:	add	x0, x22, #0x12
  41c228:	mov	x2, x20
  41c22c:	and	x0, x0, #0xfffffffffffffff0
  41c230:	mov	x1, x25
  41c234:	sub	sp, sp, x0
  41c238:	mov	x21, sp
  41c23c:	mov	x0, x21
  41c240:	bl	4066c0 <memcpy@plt>
  41c244:	add	x22, x21, x22
  41c248:	mov	w0, #0x28                  	// #40
  41c24c:	strb	w0, [x21, x20]
  41c250:	add	x20, x20, #0x1
  41c254:	mov	x1, x26
  41c258:	mov	x2, x23
  41c25c:	add	x0, x21, x20
  41c260:	bl	4066c0 <memcpy@plt>
  41c264:	mov	w0, #0x29                  	// #41
  41c268:	strb	w0, [x22, #1]
  41c26c:	strb	wzr, [x22, #2]
  41c270:	ldp	x1, x0, [x24]
  41c274:	cmp	x1, x0
  41c278:	mov	x0, x21
  41c27c:	b.ne	41c46c <f_mtime@@Base+0x2fc>  // b.any
  41c280:	bl	41f174 <strcache_add@@Base>
  41c284:	mov	x1, x0
  41c288:	mov	x0, x19
  41c28c:	bl	40c35c <rename_file@@Base>
  41c290:	mov	x0, x19
  41c294:	mov	x19, x0
  41c298:	ldr	x0, [x0, #72]
  41c29c:	cbnz	x0, 41c294 <f_mtime@@Base+0x124>
  41c2a0:	ldr	x0, [x29, #160]
  41c2a4:	bl	406c20 <free@plt>
  41c2a8:	ldrb	w0, [x19, #136]
  41c2ac:	orr	w0, w0, #0xffffff80
  41c2b0:	strb	w0, [x19, #136]
  41c2b4:	ldr	x0, [x29, #144]
  41c2b8:	cmp	x0, #0x1
  41c2bc:	b.eq	41c668 <f_mtime@@Base+0x4f8>  // b.none
  41c2c0:	ldr	x0, [x19, #8]
  41c2c4:	bl	408b28 <ar_member_date@@Base>
  41c2c8:	mov	x1, x0
  41c2cc:	cmn	x0, #0x1
  41c2d0:	b.eq	41c480 <f_mtime@@Base+0x310>  // b.none
  41c2d4:	ldr	x0, [x19, #8]
  41c2d8:	mov	x2, #0x0                   	// #0
  41c2dc:	bl	40cfb8 <file_timestamp_cons@@Base>
  41c2e0:	str	x0, [x29, #144]
  41c2e4:	mov	x21, x19
  41c2e8:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  41c2ec:	ldr	w0, [x19, #2192]
  41c2f0:	cbnz	w0, 41c40c <f_mtime@@Base+0x29c>
  41c2f4:	ldr	x20, [x29, #144]
  41c2f8:	cmp	x20, #0x1
  41c2fc:	b.eq	41c40c <f_mtime@@Base+0x29c>  // b.none
  41c300:	cmn	x20, #0x1
  41c304:	b.eq	41c40c <f_mtime@@Base+0x29c>  // b.none
  41c308:	ldrb	w0, [x21, #137]
  41c30c:	tbnz	w0, #2, 41c40c <f_mtime@@Base+0x29c>
  41c310:	adrp	x22, 440000 <output_context@@Base+0x1248>
  41c314:	add	x22, x22, #0xe08
  41c318:	ldr	x0, [x22, #48]
  41c31c:	cmp	x0, x20
  41c320:	b.cs	41c40c <f_mtime@@Base+0x29c>  // b.hs, b.nlast
  41c324:	add	x0, x29, #0xa0
  41c328:	bl	40d090 <file_timestamp_now@@Base>
  41c32c:	ldr	w1, [x29, #160]
  41c330:	sub	w1, w1, #0x1
  41c334:	add	x1, x0, w1, sxtw
  41c338:	str	x1, [x22, #48]
  41c33c:	cmp	x1, x20
  41c340:	b.cs	41c40c <f_mtime@@Base+0x29c>  // b.hs, b.nlast
  41c344:	ldr	x2, [x29, #144]
  41c348:	sub	w3, w0, #0x3
  41c34c:	and	w3, w3, #0x3fffffff
  41c350:	sub	x0, x0, #0x3
  41c354:	sub	w1, w2, #0x3
  41c358:	sub	x2, x2, #0x3
  41c35c:	and	w1, w1, #0x3fffffff
  41c360:	sub	w1, w1, w3
  41c364:	lsr	x2, x2, #30
  41c368:	sub	x0, x2, x0, lsr #30
  41c36c:	scvtf	d0, w1
  41c370:	mov	x1, #0xcd6500000000        	// #225833675390976
  41c374:	movk	x1, #0x41cd, lsl #48
  41c378:	fmov	d1, x1
  41c37c:	fdiv	d0, d0, d1
  41c380:	ucvtf	d1, x0
  41c384:	mov	x0, #0xc00000000000        	// #211106232532992
  41c388:	movk	x0, #0x4058, lsl #48
  41c38c:	fadd	d0, d0, d1
  41c390:	fmov	d1, x0
  41c394:	fcmpe	d0, d1
  41c398:	b.lt	41c808 <f_mtime@@Base+0x698>  // b.tstop
  41c39c:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  41c3a0:	fmov	d1, x0
  41c3a4:	fcmpe	d0, d1
  41c3a8:	b.hi	41c808 <f_mtime@@Base+0x698>  // b.pmore
  41c3ac:	fcvtzu	x2, d0
  41c3b0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41c3b4:	add	x0, x29, #0xa8
  41c3b8:	add	x1, x1, #0x7b9
  41c3bc:	bl	4067a0 <sprintf@plt>
  41c3c0:	ldr	x0, [x21]
  41c3c4:	bl	406700 <strlen@plt>
  41c3c8:	mov	x22, x0
  41c3cc:	add	x0, x29, #0xa8
  41c3d0:	bl	406700 <strlen@plt>
  41c3d4:	mov	w2, #0x5                   	// #5
  41c3d8:	mov	x20, x0
  41c3dc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41c3e0:	mov	x0, #0x0                   	// #0
  41c3e4:	add	x1, x1, #0x5e3
  41c3e8:	bl	406d60 <dcgettext@plt>
  41c3ec:	ldr	x3, [x21]
  41c3f0:	mov	x2, x0
  41c3f4:	add	x4, x29, #0xa8
  41c3f8:	mov	x0, #0x0                   	// #0
  41c3fc:	add	x1, x22, x20
  41c400:	bl	417aa8 <error@@Base>
  41c404:	mov	w0, #0x1                   	// #1
  41c408:	str	w0, [x19, #2192]
  41c40c:	ldr	x0, [x21, #104]
  41c410:	mov	w3, #0x410c                	// #16652
  41c414:	cmp	x0, #0x0
  41c418:	csel	x21, x21, x0, eq  // eq = none
  41c41c:	ldr	x0, [x29, #144]
  41c420:	ldrb	w1, [x21, #137]
  41c424:	ubfx	x1, x1, #2, #1
  41c428:	cmp	x0, #0x1
  41c42c:	b.eq	41c44c <f_mtime@@Base+0x2dc>  // b.none
  41c430:	ldrh	w2, [x21, #136]
  41c434:	and	w2, w3, w2
  41c438:	cmp	w2, #0x4, lsl #12
  41c43c:	b.ne	41c44c <f_mtime@@Base+0x2dc>  // b.any
  41c440:	ldrb	w2, [x21, #137]
  41c444:	and	w2, w2, #0xffffffbf
  41c448:	strb	w2, [x21, #137]
  41c44c:	ldrb	w2, [x21, #137]
  41c450:	ubfx	x2, x2, #2, #1
  41c454:	cmp	w2, w1
  41c458:	b.ne	41c460 <f_mtime@@Base+0x2f0>  // b.any
  41c45c:	str	x0, [x21, #112]
  41c460:	ldr	x21, [x21, #56]
  41c464:	cbnz	x21, 41c428 <f_mtime@@Base+0x2b8>
  41c468:	b	41c668 <f_mtime@@Base+0x4f8>
  41c46c:	bl	41f174 <strcache_add@@Base>
  41c470:	mov	x1, x0
  41c474:	mov	x0, x19
  41c478:	bl	40bf9c <rehash_file@@Base>
  41c47c:	b	41c290 <f_mtime@@Base+0x120>
  41c480:	mov	x0, #0x1                   	// #1
  41c484:	b	41c2e0 <f_mtime@@Base+0x170>
  41c488:	ldr	x0, [x19]
  41c48c:	bl	41bd70 <eval_buffer@@Base+0xb4>
  41c490:	str	x0, [x29, #144]
  41c494:	cmp	w21, #0x0
  41c498:	ccmp	x0, #0x1, #0x0, ne  // ne = any
  41c49c:	b.ne	41c2e4 <f_mtime@@Base+0x174>  // b.any
  41c4a0:	ldrb	w0, [x19, #138]
  41c4a4:	tbnz	w0, #1, 41c2e4 <f_mtime@@Base+0x174>
  41c4a8:	ldr	x0, [x19]
  41c4ac:	add	x1, x29, #0x90
  41c4b0:	mov	x3, #0x0                   	// #0
  41c4b4:	mov	x2, #0x0                   	// #0
  41c4b8:	bl	42185c <vpath_search@@Base>
  41c4bc:	mov	x20, x0
  41c4c0:	cbnz	x0, 41c60c <f_mtime@@Base+0x49c>
  41c4c4:	ldr	x23, [x19]
  41c4c8:	ldrb	w0, [x23]
  41c4cc:	cmp	w0, #0x2d
  41c4d0:	b.ne	41c2e4 <f_mtime@@Base+0x174>  // b.any
  41c4d4:	ldrb	w0, [x23, #1]
  41c4d8:	cmp	w0, #0x6c
  41c4dc:	b.ne	41c2e4 <f_mtime@@Base+0x174>  // b.any
  41c4e0:	add	x23, x23, #0x2
  41c4e4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41c4e8:	add	x0, x0, #0x59d
  41c4ec:	bl	40ba98 <variable_expand@@Base>
  41c4f0:	bl	416c24 <xstrdup@@Base>
  41c4f4:	mov	x24, x0
  41c4f8:	mov	x0, x23
  41c4fc:	bl	406700 <strlen@plt>
  41c500:	adrp	x26, 427000 <_IO_stdin_used@@Base+0x4720>
  41c504:	mov	w27, #0x0                   	// #0
  41c508:	mov	w25, #0x0                   	// #0
  41c50c:	str	x0, [x29, #120]
  41c510:	add	x0, x26, #0x5d8
  41c514:	str	x0, [x29, #112]
  41c518:	str	x24, [x29, #160]
  41c51c:	add	x1, x29, #0xa8
  41c520:	add	x0, x29, #0xa0
  41c524:	bl	416ccc <find_next_token@@Base>
  41c528:	mov	x28, x0
  41c52c:	cbz	x0, 41c600 <f_mtime@@Base+0x490>
  41c530:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41c534:	add	x0, x0, #0x819
  41c538:	bl	40ba98 <variable_expand@@Base>
  41c53c:	mov	x21, x0
  41c540:	ldr	x0, [x29, #168]
  41c544:	ldrb	w22, [x28, x0]
  41c548:	strb	wzr, [x28, x0]
  41c54c:	mov	x0, x28
  41c550:	bl	418e90 <find_percent@@Base>
  41c554:	mov	x26, x0
  41c558:	cbnz	x0, 41c59c <f_mtime@@Base+0x42c>
  41c55c:	mov	x0, x28
  41c560:	bl	406700 <strlen@plt>
  41c564:	mov	w2, #0x5                   	// #5
  41c568:	mov	x21, x0
  41c56c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41c570:	mov	x0, #0x0                   	// #0
  41c574:	add	x1, x1, #0x5ad
  41c578:	bl	406d60 <dcgettext@plt>
  41c57c:	mov	x3, x28
  41c580:	mov	x2, x0
  41c584:	mov	x1, x21
  41c588:	mov	x0, #0x0                   	// #0
  41c58c:	bl	417aa8 <error@@Base>
  41c590:	ldr	x0, [x29, #168]
  41c594:	strb	w22, [x28, x0]
  41c598:	b	41c51c <f_mtime@@Base+0x3ac>
  41c59c:	sub	x4, x0, x28
  41c5a0:	mov	x1, x28
  41c5a4:	mov	x2, x4
  41c5a8:	mov	x0, x21
  41c5ac:	str	x4, [x29, #104]
  41c5b0:	bl	40b138 <variable_buffer_output@@Base>
  41c5b4:	ldr	x2, [x29, #120]
  41c5b8:	mov	x1, x23
  41c5bc:	bl	40b138 <variable_buffer_output@@Base>
  41c5c0:	ldr	x4, [x29, #104]
  41c5c4:	add	x1, x26, #0x1
  41c5c8:	ldr	x2, [x29, #168]
  41c5cc:	sub	x2, x2, x4
  41c5d0:	bl	40b138 <variable_buffer_output@@Base>
  41c5d4:	ldr	x0, [x29, #168]
  41c5d8:	strb	w22, [x28, x0]
  41c5dc:	mov	x0, x21
  41c5e0:	bl	41bd70 <eval_buffer@@Base+0xb4>
  41c5e4:	str	x0, [x29, #152]
  41c5e8:	cmp	x0, #0x1
  41c5ec:	b.eq	41c688 <f_mtime@@Base+0x518>  // b.none
  41c5f0:	str	x0, [x29, #144]
  41c5f4:	mov	x0, x21
  41c5f8:	bl	41f174 <strcache_add@@Base>
  41c5fc:	mov	x20, x0
  41c600:	mov	x0, x24
  41c604:	bl	406c20 <free@plt>
  41c608:	cbz	x20, 41c2e4 <f_mtime@@Base+0x174>
  41c60c:	ldr	x0, [x29, #144]
  41c610:	cbz	x0, 41c618 <f_mtime@@Base+0x4a8>
  41c614:	str	x0, [x19, #112]
  41c618:	mov	x0, x20
  41c61c:	bl	406700 <strlen@plt>
  41c620:	sub	x21, x0, #0x1
  41c624:	ldr	x0, [x19]
  41c628:	bl	406700 <strlen@plt>
  41c62c:	sub	x1, x21, x0
  41c630:	mov	x0, x20
  41c634:	bl	4217e0 <gpath_search@@Base>
  41c638:	mov	x1, x20
  41c63c:	cbz	w0, 41c7d4 <f_mtime@@Base+0x664>
  41c640:	mov	x0, x19
  41c644:	bl	40c35c <rename_file@@Base>
  41c648:	mov	x2, x19
  41c64c:	ldr	x19, [x19, #72]
  41c650:	cbnz	x19, 41c648 <f_mtime@@Base+0x4d8>
  41c654:	ldr	x0, [x2, #112]
  41c658:	cbnz	x0, 41c668 <f_mtime@@Base+0x4f8>
  41c65c:	mov	x0, x2
  41c660:	mov	w1, #0x1                   	// #1
  41c664:	bl	41c170 <f_mtime@@Base>
  41c668:	mov	sp, x29
  41c66c:	ldp	x19, x20, [sp, #16]
  41c670:	ldp	x21, x22, [sp, #32]
  41c674:	ldp	x23, x24, [sp, #48]
  41c678:	ldp	x25, x26, [sp, #64]
  41c67c:	ldp	x27, x28, [sp, #80]
  41c680:	ldp	x29, x30, [sp], #272
  41c684:	ret
  41c688:	add	x3, x29, #0x8c
  41c68c:	add	x2, x29, #0x88
  41c690:	add	x1, x29, #0x98
  41c694:	mov	x0, x21
  41c698:	bl	42185c <vpath_search@@Base>
  41c69c:	cbz	x0, 41c6d4 <f_mtime@@Base+0x564>
  41c6a0:	ldr	w1, [x29, #136]
  41c6a4:	cbz	x20, 41c6c0 <f_mtime@@Base+0x550>
  41c6a8:	cmp	w25, w1
  41c6ac:	b.hi	41c6c0 <f_mtime@@Base+0x550>  // b.pmore
  41c6b0:	b.ne	41c6d4 <f_mtime@@Base+0x564>  // b.any
  41c6b4:	ldr	w2, [x29, #140]
  41c6b8:	cmp	w2, w27
  41c6bc:	b.cs	41c6d4 <f_mtime@@Base+0x564>  // b.hs, b.nlast
  41c6c0:	ldr	w27, [x29, #140]
  41c6c4:	mov	w25, w1
  41c6c8:	mov	x20, x0
  41c6cc:	ldr	x1, [x29, #152]
  41c6d0:	str	x1, [x29, #144]
  41c6d4:	adrp	x4, 440000 <output_context@@Base+0x1248>
  41c6d8:	add	x26, x4, #0xe08
  41c6dc:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  41c6e0:	add	x22, x22, #0x110
  41c6e4:	ldr	x28, [x26, #16]
  41c6e8:	cbnz	x28, 41c7a8 <f_mtime@@Base+0x638>
  41c6ec:	mov	x1, x22
  41c6f0:	b	41c71c <f_mtime@@Base+0x5ac>
  41c6f4:	str	x1, [x29, #104]
  41c6f8:	bl	406700 <strlen@plt>
  41c6fc:	cmp	x0, x28
  41c700:	ldr	x1, [x29, #104]
  41c704:	b.ls	41c70c <f_mtime@@Base+0x59c>  // b.plast
  41c708:	str	x0, [x26, #24]
  41c70c:	ldr	w0, [x26, #32]
  41c710:	add	x1, x1, #0x8
  41c714:	add	w0, w0, #0x1
  41c718:	str	w0, [x26, #32]
  41c71c:	ldr	x0, [x1]
  41c720:	ldr	x28, [x26, #24]
  41c724:	cbnz	x0, 41c6f4 <f_mtime@@Base+0x584>
  41c728:	mov	x0, x21
  41c72c:	bl	406700 <strlen@plt>
  41c730:	str	x0, [x26, #16]
  41c734:	add	x0, x0, x28
  41c738:	add	x0, x0, #0x2
  41c73c:	bl	416a54 <xmalloc@@Base>
  41c740:	str	x0, [x26, #40]
  41c744:	ldr	w28, [x26, #32]
  41c748:	mvn	w28, w28
  41c74c:	ldr	x2, [x22]
  41c750:	cbz	x2, 41c51c <f_mtime@@Base+0x3ac>
  41c754:	ldr	x0, [x26, #40]
  41c758:	mov	x3, x21
  41c75c:	ldr	x1, [x29, #112]
  41c760:	bl	4067a0 <sprintf@plt>
  41c764:	ldr	x0, [x26, #40]
  41c768:	bl	41bd70 <eval_buffer@@Base+0xb4>
  41c76c:	str	x0, [x29, #152]
  41c770:	cmp	x0, #0x1
  41c774:	b.eq	41c79c <f_mtime@@Base+0x62c>  // b.none
  41c778:	cmp	x20, #0x0
  41c77c:	ccmp	w25, w28, #0x2, ne  // ne = any
  41c780:	b.ls	41c79c <f_mtime@@Base+0x62c>  // b.plast
  41c784:	ldr	x0, [x26, #40]
  41c788:	mov	w25, w28
  41c78c:	bl	41f174 <strcache_add@@Base>
  41c790:	mov	x20, x0
  41c794:	ldr	x0, [x29, #152]
  41c798:	str	x0, [x29, #144]
  41c79c:	add	w28, w28, #0x1
  41c7a0:	add	x22, x22, #0x8
  41c7a4:	b	41c74c <f_mtime@@Base+0x5dc>
  41c7a8:	mov	x0, x21
  41c7ac:	bl	406700 <strlen@plt>
  41c7b0:	cmp	x28, x0
  41c7b4:	b.cs	41c744 <f_mtime@@Base+0x5d4>  // b.hs, b.nlast
  41c7b8:	ldr	x1, [x26, #24]
  41c7bc:	str	x0, [x26, #16]
  41c7c0:	add	x1, x1, #0x2
  41c7c4:	add	x1, x1, x0
  41c7c8:	ldr	x0, [x26, #40]
  41c7cc:	bl	416aa0 <xrealloc@@Base>
  41c7d0:	b	41c740 <f_mtime@@Base+0x5d0>
  41c7d4:	mov	x0, x19
  41c7d8:	bl	40bf9c <rehash_file@@Base>
  41c7dc:	mov	x21, x19
  41c7e0:	ldr	x19, [x19, #72]
  41c7e4:	cbnz	x19, 41c7dc <f_mtime@@Base+0x66c>
  41c7e8:	ldr	x0, [x29, #144]
  41c7ec:	cmp	x0, #0x2
  41c7f0:	ccmn	x0, #0x1, #0x4, ne  // ne = any
  41c7f4:	b.eq	41c2e8 <f_mtime@@Base+0x178>  // b.none
  41c7f8:	mov	x0, x20
  41c7fc:	bl	41bd70 <eval_buffer@@Base+0xb4>
  41c800:	str	x0, [x29, #144]
  41c804:	b	41c2e8 <f_mtime@@Base+0x178>
  41c808:	add	x0, x29, #0xa8
  41c80c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41c810:	add	x1, x1, #0x5de
  41c814:	bl	4067a0 <sprintf@plt>
  41c818:	b	41c3c0 <f_mtime@@Base+0x250>

000000000041c81c <notice_finished_file@@Base>:
  41c81c:	stp	x29, x30, [sp, #-192]!
  41c820:	mov	w1, #0x40c                 	// #1036
  41c824:	mov	x29, sp
  41c828:	stp	x19, x20, [sp, #16]
  41c82c:	mov	x19, x0
  41c830:	stp	x21, x22, [sp, #32]
  41c834:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  41c838:	ldrb	w21, [x0, #136]
  41c83c:	ldrh	w0, [x0, #136]
  41c840:	and	w21, w21, #0xc
  41c844:	orr	w0, w0, w1
  41c848:	strh	w0, [x19, #136]
  41c84c:	ldr	w0, [x22, #2196]
  41c850:	cbz	w0, 41c918 <notice_finished_file@@Base+0xfc>
  41c854:	ldrb	w0, [x19, #136]
  41c858:	tst	x0, #0x3
  41c85c:	b.ne	41c880 <notice_finished_file@@Base+0x64>  // b.any
  41c860:	ldr	x0, [x19, #32]
  41c864:	cbz	x0, 41c898 <notice_finished_file@@Base+0x7c>
  41c868:	ldrb	w1, [x0, #51]
  41c86c:	tbz	w1, #0, 41c898 <notice_finished_file@@Base+0x7c>
  41c870:	ldrh	w2, [x0, #48]
  41c874:	mov	x1, #0x0                   	// #0
  41c878:	cmp	w2, w1
  41c87c:	b.hi	41c888 <notice_finished_file@@Base+0x6c>  // b.pmore
  41c880:	mov	w0, #0x0                   	// #0
  41c884:	b	41c918 <notice_finished_file@@Base+0xfc>
  41c888:	ldr	x3, [x0, #40]
  41c88c:	ldrb	w3, [x3, x1]
  41c890:	add	x1, x1, #0x1
  41c894:	tbnz	w3, #0, 41c878 <notice_finished_file@@Base+0x5c>
  41c898:	ldrb	w1, [x19, #137]
  41c89c:	tbz	w1, #5, 41c8b0 <notice_finished_file@@Base+0x94>
  41c8a0:	ldrb	w0, [x19, #136]
  41c8a4:	and	w0, w0, #0xfffffffc
  41c8a8:	strb	w0, [x19, #136]
  41c8ac:	b	41c880 <notice_finished_file@@Base+0x64>
  41c8b0:	cbz	x0, 41c880 <notice_finished_file@@Base+0x64>
  41c8b4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41c8b8:	ldr	w0, [x0, #3308]
  41c8bc:	cbnz	w0, 41c8e4 <notice_finished_file@@Base+0xc8>
  41c8c0:	ldr	x20, [x19]
  41c8c4:	mov	x0, x20
  41c8c8:	bl	406700 <strlen@plt>
  41c8cc:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  41c8d0:	mov	x1, x0
  41c8d4:	mov	x3, x20
  41c8d8:	add	x2, x2, #0x61f
  41c8dc:	mov	w0, #0x0                   	// #0
  41c8e0:	bl	417984 <message@@Base>
  41c8e4:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41c8e8:	ldr	w0, [x0, #1992]
  41c8ec:	cbz	w0, 41c9b0 <notice_finished_file@@Base+0x194>
  41c8f0:	mov	w0, #0x0                   	// #0
  41c8f4:	ldrb	w1, [x19, #136]
  41c8f8:	bfxil	w1, w0, #0, #2
  41c8fc:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41c900:	add	x0, x0, #0xe08
  41c904:	strb	w1, [x19, #136]
  41c908:	ldr	w1, [x0, #56]
  41c90c:	add	w1, w1, #0x1
  41c910:	str	w1, [x0, #56]
  41c914:	mov	w0, #0x1                   	// #1
  41c918:	ldr	x1, [x19, #120]
  41c91c:	cbnz	x1, 41c928 <notice_finished_file@@Base+0x10c>
  41c920:	ldr	x1, [x19, #112]
  41c924:	str	x1, [x19, #120]
  41c928:	cmp	w21, #0x8
  41c92c:	b.ne	41c938 <notice_finished_file@@Base+0x11c>  // b.any
  41c930:	ldrb	w1, [x19, #137]
  41c934:	tbz	w1, #5, 41c93c <notice_finished_file@@Base+0x120>
  41c938:	cbz	w0, 41c970 <notice_finished_file@@Base+0x154>
  41c93c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41c940:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  41c944:	ldr	w0, [x0, #3412]
  41c948:	ldr	w1, [x1, #1992]
  41c94c:	orr	w0, w0, w1
  41c950:	ldr	w1, [x22, #2196]
  41c954:	orr	w0, w0, w1
  41c958:	cbz	w0, 41cb74 <notice_finished_file@@Base+0x358>
  41c95c:	ldr	x1, [x19, #32]
  41c960:	cbz	x1, 41cb74 <notice_finished_file@@Base+0x358>
  41c964:	ldrh	w0, [x1, #48]
  41c968:	cbnz	x0, 41cb58 <notice_finished_file@@Base+0x33c>
  41c96c:	str	x0, [x19, #112]
  41c970:	ldr	x0, [x19, #104]
  41c974:	cbnz	x0, 41cb94 <notice_finished_file@@Base+0x378>
  41c978:	ldrb	w0, [x19, #136]
  41c97c:	cmp	w21, #0x8
  41c980:	and	w0, w0, #0x3
  41c984:	b.ne	41cc0c <notice_finished_file@@Base+0x3f0>  // b.any
  41c988:	cmp	w0, #0x1
  41c98c:	b.eq	41cc14 <notice_finished_file@@Base+0x3f8>  // b.none
  41c990:	ldr	x20, [x19, #48]
  41c994:	mov	w21, #0x40c                 	// #1036
  41c998:	mov	w22, #0xfffffbf0            	// #-1040
  41c99c:	cbnz	x20, 41cbd8 <notice_finished_file@@Base+0x3bc>
  41c9a0:	ldp	x19, x20, [sp, #16]
  41c9a4:	ldp	x21, x22, [sp, #32]
  41c9a8:	ldp	x29, x30, [sp], #192
  41c9ac:	ret
  41c9b0:	ldr	x0, [x19]
  41c9b4:	bl	408a20 <ar_name@@Base>
  41c9b8:	cbz	w0, 41c9d0 <notice_finished_file@@Base+0x1b4>
  41c9bc:	ldr	x0, [x19]
  41c9c0:	bl	408ba0 <ar_touch@@Base>
  41c9c4:	cbz	w0, 41c8f0 <notice_finished_file@@Base+0xd4>
  41c9c8:	mov	w0, #0x3                   	// #3
  41c9cc:	b	41c8f4 <notice_finished_file@@Base+0xd8>
  41c9d0:	ldr	x0, [x19]
  41c9d4:	mov	w2, #0x1b6                 	// #438
  41c9d8:	mov	w1, #0x42                  	// #66
  41c9dc:	bl	406980 <open@plt>
  41c9e0:	mov	w20, w0
  41c9e4:	cmn	w0, #0x1
  41c9e8:	b.ne	41ca0c <notice_finished_file@@Base+0x1f0>  // b.any
  41c9ec:	bl	406e00 <__errno_location@plt>
  41c9f0:	ldr	w0, [x0]
  41c9f4:	cmp	w0, #0x4
  41c9f8:	b.eq	41c9d0 <notice_finished_file@@Base+0x1b4>  // b.none
  41c9fc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41ca00:	add	x0, x0, #0x628
  41ca04:	ldr	x1, [x19]
  41ca08:	b	41ca48 <notice_finished_file@@Base+0x22c>
  41ca0c:	tbnz	w0, #31, 41c9fc <notice_finished_file@@Base+0x1e0>
  41ca10:	mov	w0, #0x78                  	// #120
  41ca14:	strb	w0, [sp, #63]
  41ca18:	add	x1, sp, #0x40
  41ca1c:	mov	w0, w20
  41ca20:	bl	4228b0 <__libc_csu_fini@@Base+0x28>
  41ca24:	cmn	w0, #0x1
  41ca28:	b.ne	41ca50 <notice_finished_file@@Base+0x234>  // b.any
  41ca2c:	bl	406e00 <__errno_location@plt>
  41ca30:	ldr	w0, [x0]
  41ca34:	cmp	w0, #0x4
  41ca38:	b.eq	41ca18 <notice_finished_file@@Base+0x1fc>  // b.none
  41ca3c:	ldr	x1, [x19]
  41ca40:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41ca44:	add	x0, x0, #0x636
  41ca48:	bl	417c10 <perror_with_name@@Base>
  41ca4c:	b	41c9c8 <notice_finished_file@@Base+0x1ac>
  41ca50:	tbnz	w0, #31, 41ca3c <notice_finished_file@@Base+0x220>
  41ca54:	add	x1, sp, #0x3f
  41ca58:	mov	w0, w20
  41ca5c:	mov	x2, #0x1                   	// #1
  41ca60:	bl	406d10 <read@plt>
  41ca64:	cmn	w0, #0x1
  41ca68:	b.ne	41ca8c <notice_finished_file@@Base+0x270>  // b.any
  41ca6c:	bl	406e00 <__errno_location@plt>
  41ca70:	ldr	w0, [x0]
  41ca74:	cmp	w0, #0x4
  41ca78:	b.eq	41ca54 <notice_finished_file@@Base+0x238>  // b.none
  41ca7c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41ca80:	add	x0, x0, #0x645
  41ca84:	ldr	x1, [x19]
  41ca88:	b	41ca48 <notice_finished_file@@Base+0x22c>
  41ca8c:	tbnz	w0, #31, 41ca7c <notice_finished_file@@Base+0x260>
  41ca90:	mov	w0, w20
  41ca94:	mov	w2, #0x0                   	// #0
  41ca98:	mov	x1, #0x0                   	// #0
  41ca9c:	bl	406870 <lseek@plt>
  41caa0:	cmn	x0, #0x1
  41caa4:	b.ne	41cac8 <notice_finished_file@@Base+0x2ac>  // b.any
  41caa8:	bl	406e00 <__errno_location@plt>
  41caac:	ldr	w0, [x0]
  41cab0:	cmp	w0, #0x4
  41cab4:	b.eq	41ca90 <notice_finished_file@@Base+0x274>  // b.none
  41cab8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41cabc:	add	x0, x0, #0x653
  41cac0:	ldr	x1, [x19]
  41cac4:	b	41ca48 <notice_finished_file@@Base+0x22c>
  41cac8:	tbnz	x0, #63, 41cab8 <notice_finished_file@@Base+0x29c>
  41cacc:	add	x1, sp, #0x3f
  41cad0:	mov	w0, w20
  41cad4:	mov	x2, #0x1                   	// #1
  41cad8:	bl	406b30 <write@plt>
  41cadc:	cmn	w0, #0x1
  41cae0:	b.ne	41cb04 <notice_finished_file@@Base+0x2e8>  // b.any
  41cae4:	bl	406e00 <__errno_location@plt>
  41cae8:	ldr	w0, [x0]
  41caec:	cmp	w0, #0x4
  41caf0:	b.eq	41cacc <notice_finished_file@@Base+0x2b0>  // b.none
  41caf4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41caf8:	add	x0, x0, #0x662
  41cafc:	ldr	x1, [x19]
  41cb00:	b	41ca48 <notice_finished_file@@Base+0x22c>
  41cb04:	tbnz	w0, #31, 41caf4 <notice_finished_file@@Base+0x2d8>
  41cb08:	ldr	x0, [sp, #112]
  41cb0c:	cbnz	x0, 41cb4c <notice_finished_file@@Base+0x330>
  41cb10:	mov	w0, w20
  41cb14:	bl	406ae0 <close@plt>
  41cb18:	ldr	x0, [x19]
  41cb1c:	mov	w2, #0x1b6                 	// #438
  41cb20:	mov	w1, #0x202                 	// #514
  41cb24:	bl	406980 <open@plt>
  41cb28:	mov	w20, w0
  41cb2c:	cmn	w0, #0x1
  41cb30:	b.ne	41cb48 <notice_finished_file@@Base+0x32c>  // b.any
  41cb34:	bl	406e00 <__errno_location@plt>
  41cb38:	ldr	w0, [x0]
  41cb3c:	cmp	w0, #0x4
  41cb40:	b.eq	41cb18 <notice_finished_file@@Base+0x2fc>  // b.none
  41cb44:	b	41c9fc <notice_finished_file@@Base+0x1e0>
  41cb48:	tbnz	w0, #31, 41c9fc <notice_finished_file@@Base+0x1e0>
  41cb4c:	mov	w0, w20
  41cb50:	bl	406ae0 <close@plt>
  41cb54:	b	41c8f0 <notice_finished_file@@Base+0xd4>
  41cb58:	ldr	x2, [x1, #40]
  41cb5c:	add	x2, x2, x0
  41cb60:	sub	x0, x0, #0x1
  41cb64:	ldurb	w2, [x2, #-1]
  41cb68:	tbnz	w2, #0, 41c968 <notice_finished_file@@Base+0x14c>
  41cb6c:	mov	x0, #0xffffffffffffffff    	// #-1
  41cb70:	b	41c96c <notice_finished_file@@Base+0x150>
  41cb74:	ldrb	w0, [x19, #137]
  41cb78:	tbz	w0, #3, 41cb8c <notice_finished_file@@Base+0x370>
  41cb7c:	ldr	d0, [x19, #32]
  41cb80:	cmeq	d0, d0, #0
  41cb84:	fmov	x0, d0
  41cb88:	b	41c96c <notice_finished_file@@Base+0x150>
  41cb8c:	mov	x0, #0x0                   	// #0
  41cb90:	b	41c96c <notice_finished_file@@Base+0x150>
  41cb94:	ldr	x1, [x19, #112]
  41cb98:	mov	x2, x0
  41cb9c:	ldrb	w3, [x2, #137]
  41cba0:	tbz	w3, #2, 41c978 <notice_finished_file@@Base+0x15c>
  41cba4:	cbz	x1, 41cbb8 <notice_finished_file@@Base+0x39c>
  41cba8:	ldr	x3, [x2, #112]
  41cbac:	cbz	x3, 41cbd0 <notice_finished_file@@Base+0x3b4>
  41cbb0:	cmp	x1, x3
  41cbb4:	csel	x1, x1, x3, cs  // cs = hs, nlast
  41cbb8:	ldr	x2, [x2, #56]
  41cbbc:	cbnz	x2, 41cb9c <notice_finished_file@@Base+0x380>
  41cbc0:	str	x1, [x0, #112]
  41cbc4:	ldr	x0, [x0, #56]
  41cbc8:	cbnz	x0, 41cbc0 <notice_finished_file@@Base+0x3a4>
  41cbcc:	b	41c978 <notice_finished_file@@Base+0x15c>
  41cbd0:	mov	x1, #0x0                   	// #0
  41cbd4:	b	41cbb8 <notice_finished_file@@Base+0x39c>
  41cbd8:	ldr	x0, [x20, #16]
  41cbdc:	ldrb	w1, [x19, #136]
  41cbe0:	ldrh	w2, [x0, #136]
  41cbe4:	and	w1, w1, #0x3
  41cbe8:	orr	w1, w1, w21
  41cbec:	and	w2, w2, w22
  41cbf0:	orr	w1, w1, w2
  41cbf4:	strh	w1, [x0, #136]
  41cbf8:	tbnz	w1, #13, 41cc04 <notice_finished_file@@Base+0x3e8>
  41cbfc:	mov	w1, #0x0                   	// #0
  41cc00:	bl	41c170 <f_mtime@@Base>
  41cc04:	ldr	x20, [x20]
  41cc08:	b	41c99c <notice_finished_file@@Base+0x180>
  41cc0c:	cmp	w0, #0x1
  41cc10:	b.ne	41c9a0 <notice_finished_file@@Base+0x184>  // b.any
  41cc14:	ldrb	w0, [x19, #136]
  41cc18:	and	w0, w0, #0xfffffffc
  41cc1c:	strb	w0, [x19, #136]
  41cc20:	b	41c9a0 <notice_finished_file@@Base+0x184>
  41cc24:	stp	x29, x30, [sp, #-224]!
  41cc28:	mov	x29, sp
  41cc2c:	stp	x21, x22, [sp, #32]
  41cc30:	mov	w22, w1
  41cc34:	ldr	x21, [x0, #104]
  41cc38:	stp	x19, x20, [sp, #16]
  41cc3c:	mov	x19, x0
  41cc40:	cmp	x21, #0x0
  41cc44:	stp	x23, x24, [sp, #48]
  41cc48:	csel	x21, x21, x0, ne  // ne = any
  41cc4c:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41cc50:	add	x0, x0, #0xe08
  41cc54:	stp	x25, x26, [sp, #64]
  41cc58:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  41cc5c:	ldr	w1, [x21, #128]
  41cc60:	stp	x27, x28, [sp, #80]
  41cc64:	str	x0, [sp, #136]
  41cc68:	ldr	w0, [x0, #60]
  41cc6c:	cmp	w1, w0
  41cc70:	b.ne	41cd14 <notice_finished_file@@Base+0x4f8>  // b.any
  41cc74:	ldrb	w0, [x21, #137]
  41cc78:	tbz	w0, #2, 41cca0 <notice_finished_file@@Base+0x484>
  41cc7c:	ldrb	w0, [x21, #136]
  41cc80:	and	w0, w0, #0x3
  41cc84:	cmp	w0, #0x1
  41cc88:	b.ls	41cca0 <notice_finished_file@@Base+0x484>  // b.plast
  41cc8c:	ldrb	w1, [x21, #138]
  41cc90:	mov	w0, #0x9                   	// #9
  41cc94:	and	w0, w0, w1
  41cc98:	cmp	w0, #0x8
  41cc9c:	b.eq	41cd14 <notice_finished_file@@Base+0x4f8>  // b.none
  41cca0:	ldr	w0, [x23, #1104]
  41cca4:	tbz	w0, #1, 41ccd8 <notice_finished_file@@Base+0x4bc>
  41cca8:	mov	w0, w22
  41ccac:	bl	416a20 <print_spaces@@Base>
  41ccb0:	mov	w2, #0x5                   	// #5
  41ccb4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ccb8:	mov	x0, #0x0                   	// #0
  41ccbc:	add	x1, x1, #0x671
  41ccc0:	bl	406d60 <dcgettext@plt>
  41ccc4:	ldr	x1, [x19]
  41ccc8:	bl	406df0 <printf@plt>
  41cccc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41ccd0:	ldr	x0, [x0, #400]
  41ccd4:	bl	406cb0 <fflush@plt>
  41ccd8:	ldrb	w20, [x21, #136]
  41ccdc:	and	w0, w20, #0xc
  41cce0:	cmp	w0, #0xc
  41cce4:	b.eq	41cd0c <notice_finished_file@@Base+0x4f0>  // b.none
  41cce8:	mov	w20, #0x0                   	// #0
  41ccec:	mov	w0, w20
  41ccf0:	ldp	x19, x20, [sp, #16]
  41ccf4:	ldp	x21, x22, [sp, #32]
  41ccf8:	ldp	x23, x24, [sp, #48]
  41ccfc:	ldp	x25, x26, [sp, #64]
  41cd00:	ldp	x27, x28, [sp, #80]
  41cd04:	ldp	x29, x30, [sp], #224
  41cd08:	ret
  41cd0c:	and	w20, w20, #0x3
  41cd10:	b	41ccec <notice_finished_file@@Base+0x4d0>
  41cd14:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41cd18:	add	x0, x0, #0xd40
  41cd1c:	str	x0, [sp, #112]
  41cd20:	str	wzr, [sp, #128]
  41cd24:	ldr	x0, [sp, #136]
  41cd28:	ldr	w0, [x0, #60]
  41cd2c:	str	w0, [x21, #128]
  41cd30:	ldr	w0, [x23, #1104]
  41cd34:	tbz	w0, #1, 41cd68 <notice_finished_file@@Base+0x54c>
  41cd38:	mov	w0, w22
  41cd3c:	bl	416a20 <print_spaces@@Base>
  41cd40:	mov	w2, #0x5                   	// #5
  41cd44:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cd48:	mov	x0, #0x0                   	// #0
  41cd4c:	add	x1, x1, #0x685
  41cd50:	bl	406d60 <dcgettext@plt>
  41cd54:	ldr	x1, [x21]
  41cd58:	bl	406df0 <printf@plt>
  41cd5c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41cd60:	ldr	x0, [x0, #400]
  41cd64:	bl	406cb0 <fflush@plt>
  41cd68:	ldrb	w1, [x21, #137]
  41cd6c:	ldrb	w0, [x21, #136]
  41cd70:	tbz	w1, #2, 41ce6c <notice_finished_file@@Base+0x650>
  41cd74:	ldr	w1, [x23, #1104]
  41cd78:	and	w0, w0, #0x3
  41cd7c:	cmp	w0, #0x1
  41cd80:	and	w1, w1, #0x2
  41cd84:	b.ls	41cde4 <notice_finished_file@@Base+0x5c8>  // b.plast
  41cd88:	cbz	w1, 41cdbc <notice_finished_file@@Base+0x5a0>
  41cd8c:	mov	w0, w22
  41cd90:	bl	416a20 <print_spaces@@Base>
  41cd94:	mov	w2, #0x5                   	// #5
  41cd98:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cd9c:	mov	x0, #0x0                   	// #0
  41cda0:	add	x1, x1, #0x6a4
  41cda4:	bl	406d60 <dcgettext@plt>
  41cda8:	ldr	x1, [x21]
  41cdac:	bl	406df0 <printf@plt>
  41cdb0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41cdb4:	ldr	x0, [x0, #400]
  41cdb8:	bl	406cb0 <fflush@plt>
  41cdbc:	ldrb	w1, [x21, #138]
  41cdc0:	mov	w0, #0x9                   	// #9
  41cdc4:	and	w0, w0, w1
  41cdc8:	cmp	w0, #0x8
  41cdcc:	b.ne	41cdd8 <notice_finished_file@@Base+0x5bc>  // b.any
  41cdd0:	mov	x0, x21
  41cdd4:	bl	41bffc <show_goal_error@@Base+0xb4>
  41cdd8:	ldrb	w20, [x21, #136]
  41cddc:	and	w20, w20, #0x3
  41cde0:	b	41cdec <notice_finished_file@@Base+0x5d0>
  41cde4:	cbnz	w1, 41ce38 <notice_finished_file@@Base+0x61c>
  41cde8:	mov	w20, #0x0                   	// #0
  41cdec:	mov	x1, x21
  41cdf0:	ldr	x21, [x21, #72]
  41cdf4:	cbnz	x21, 41cdec <notice_finished_file@@Base+0x5d0>
  41cdf8:	cbz	w20, 41ce08 <notice_finished_file@@Base+0x5ec>
  41cdfc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41ce00:	ldr	w0, [x0, #1996]
  41ce04:	cbz	w0, 41ccec <notice_finished_file@@Base+0x4d0>
  41ce08:	ldrb	w0, [x1, #136]
  41ce0c:	and	w0, w0, #0xc
  41ce10:	cmp	w0, #0x8
  41ce14:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  41ce18:	b.eq	41cce8 <notice_finished_file@@Base+0x4cc>  // b.none
  41ce1c:	ldr	x21, [x1, #56]
  41ce20:	ldr	w0, [sp, #128]
  41ce24:	cmp	w20, w0
  41ce28:	csel	w20, w20, w0, cs  // cs = hs, nlast
  41ce2c:	cbz	x21, 41ccec <notice_finished_file@@Base+0x4d0>
  41ce30:	str	w20, [sp, #128]
  41ce34:	b	41cd24 <notice_finished_file@@Base+0x508>
  41ce38:	mov	w0, w22
  41ce3c:	bl	416a20 <print_spaces@@Base>
  41ce40:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ce44:	add	x1, x1, #0x6d4
  41ce48:	mov	w2, #0x5                   	// #5
  41ce4c:	mov	x0, #0x0                   	// #0
  41ce50:	bl	406d60 <dcgettext@plt>
  41ce54:	ldr	x1, [x21]
  41ce58:	bl	406df0 <printf@plt>
  41ce5c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41ce60:	ldr	x0, [x0, #400]
  41ce64:	bl	406cb0 <fflush@plt>
  41ce68:	b	41cde8 <notice_finished_file@@Base+0x5cc>
  41ce6c:	ubfx	x0, x0, #2, #2
  41ce70:	cmp	w0, #0x2
  41ce74:	b.eq	41cf24 <notice_finished_file@@Base+0x708>  // b.none
  41ce78:	cmp	w0, #0x3
  41ce7c:	b.eq	41cf44 <notice_finished_file@@Base+0x728>  // b.none
  41ce80:	ldrb	w1, [x21, #138]
  41ce84:	add	w27, w22, #0x1
  41ce88:	mov	w0, w1
  41ce8c:	bfi	w0, w1, #3, #1
  41ce90:	strb	w0, [x21, #138]
  41ce94:	ldr	x0, [x21, #104]
  41ce98:	cmp	x0, #0x0
  41ce9c:	csel	x0, x0, x21, ne  // ne = any
  41cea0:	ldrb	w1, [x0, #137]
  41cea4:	orr	w1, w1, #0x2
  41cea8:	strb	w1, [x0, #137]
  41ceac:	ldr	x24, [x21, #112]
  41ceb0:	cbnz	x24, 41cec4 <notice_finished_file@@Base+0x6a8>
  41ceb4:	mov	x0, x21
  41ceb8:	mov	w1, #0x1                   	// #1
  41cebc:	bl	41c170 <f_mtime@@Base>
  41cec0:	mov	x24, x0
  41cec4:	mov	x0, x21
  41cec8:	mov	x19, x0
  41cecc:	ldr	x0, [x0, #72]
  41ced0:	cbnz	x0, 41cec8 <notice_finished_file@@Base+0x6ac>
  41ced4:	cmp	x24, #0x1
  41ced8:	cset	w28, eq  // eq = none
  41cedc:	str	w28, [sp, #132]
  41cee0:	b.ne	41cf80 <notice_finished_file@@Base+0x764>  // b.any
  41cee4:	ldr	w0, [x23, #1104]
  41cee8:	tbz	w0, #0, 41cf1c <notice_finished_file@@Base+0x700>
  41ceec:	mov	w0, w27
  41cef0:	bl	416a20 <print_spaces@@Base>
  41cef4:	mov	w2, #0x5                   	// #5
  41cef8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cefc:	mov	x0, #0x0                   	// #0
  41cf00:	add	x1, x1, #0x730
  41cf04:	bl	406d60 <dcgettext@plt>
  41cf08:	ldr	x1, [x19]
  41cf0c:	bl	406df0 <printf@plt>
  41cf10:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41cf14:	ldr	x0, [x0, #400]
  41cf18:	bl	406cb0 <fflush@plt>
  41cf1c:	str	x24, [sp, #104]
  41cf20:	b	41cff0 <notice_finished_file@@Base+0x7d4>
  41cf24:	ldr	w0, [x23, #1104]
  41cf28:	tbz	w0, #1, 41cde8 <notice_finished_file@@Base+0x5cc>
  41cf2c:	mov	w0, w22
  41cf30:	bl	416a20 <print_spaces@@Base>
  41cf34:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cf38:	mov	w2, #0x5                   	// #5
  41cf3c:	add	x1, x1, #0x6f7
  41cf40:	b	41ce4c <notice_finished_file@@Base+0x630>
  41cf44:	ldr	w0, [x23, #1104]
  41cf48:	tbz	w0, #1, 41cdd8 <notice_finished_file@@Base+0x5bc>
  41cf4c:	mov	w0, w22
  41cf50:	bl	416a20 <print_spaces@@Base>
  41cf54:	mov	w2, #0x5                   	// #5
  41cf58:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cf5c:	mov	x0, #0x0                   	// #0
  41cf60:	add	x1, x1, #0x712
  41cf64:	bl	406d60 <dcgettext@plt>
  41cf68:	ldr	x1, [x21]
  41cf6c:	bl	406df0 <printf@plt>
  41cf70:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41cf74:	ldr	x0, [x0, #400]
  41cf78:	bl	406cb0 <fflush@plt>
  41cf7c:	b	41cdd8 <notice_finished_file@@Base+0x5bc>
  41cf80:	sub	x1, x24, #0x3
  41cf84:	mov	x0, #0xffffffffffffc9ff    	// #-13825
  41cf88:	movk	x0, #0xfb9a, lsl #16
  41cf8c:	cmp	x1, x0
  41cf90:	b.hi	41cf1c <notice_finished_file@@Base+0x700>  // b.pmore
  41cf94:	ldrsb	w0, [x19, #136]
  41cf98:	tbz	w0, #31, 41cf1c <notice_finished_file@@Base+0x700>
  41cf9c:	sub	w0, w24, #0x3
  41cfa0:	ands	w20, w0, #0x3fffffff
  41cfa4:	b.eq	41cfdc <notice_finished_file@@Base+0x7c0>  // b.none
  41cfa8:	ldr	x0, [x19]
  41cfac:	bl	406700 <strlen@plt>
  41cfb0:	mov	x25, x0
  41cfb4:	mov	w2, #0x5                   	// #5
  41cfb8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41cfbc:	mov	x0, #0x0                   	// #0
  41cfc0:	add	x1, x1, #0x74b
  41cfc4:	bl	406d60 <dcgettext@plt>
  41cfc8:	mov	x2, x0
  41cfcc:	ldr	x3, [x19]
  41cfd0:	mov	x1, x25
  41cfd4:	mov	x0, #0x0                   	// #0
  41cfd8:	bl	417aa8 <error@@Base>
  41cfdc:	mov	w0, #0xc9ff                	// #51711
  41cfe0:	movk	w0, #0x3b9a, lsl #16
  41cfe4:	sub	w0, w0, w20
  41cfe8:	add	x0, x24, w0, sxtw
  41cfec:	str	x0, [sp, #104]
  41cff0:	ldrb	w0, [x19, #137]
  41cff4:	tbnz	w0, #5, 41d178 <notice_finished_file@@Base+0x95c>
  41cff8:	ldr	x1, [x19, #32]
  41cffc:	cbnz	x1, 41d00c <notice_finished_file@@Base+0x7f0>
  41d000:	tbz	w0, #0, 41d124 <notice_finished_file@@Base+0x908>
  41d004:	ldrb	w0, [x19, #137]
  41d008:	tbz	w0, #3, 41d1a4 <notice_finished_file@@Base+0x988>
  41d00c:	ldr	x0, [x19, #48]
  41d010:	mov	w26, #0x0                   	// #0
  41d014:	mov	w20, #0x0                   	// #0
  41d018:	str	x0, [sp, #184]
  41d01c:	add	x0, sp, #0xb8
  41d020:	str	x0, [sp, #120]
  41d024:	str	x19, [sp, #200]
  41d028:	ldr	x0, [sp, #120]
  41d02c:	mov	x7, #0x0                   	// #0
  41d030:	ldr	x0, [x0, #16]
  41d034:	ldr	x25, [x0, #24]
  41d038:	ldr	x0, [sp, #120]
  41d03c:	ldr	x0, [x0]
  41d040:	str	x0, [sp, #120]
  41d044:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41d048:	add	x0, x0, #0x7cc
  41d04c:	str	x0, [sp, #144]
  41d050:	cbnz	x25, 41d204 <notice_finished_file@@Base+0x9e8>
  41d054:	ldr	x0, [sp, #120]
  41d058:	cbnz	x0, 41d028 <notice_finished_file@@Base+0x80c>
  41d05c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d060:	ldr	w0, [x0, #3320]
  41d064:	orr	w0, w28, w0
  41d068:	cbz	w0, 41d080 <notice_finished_file@@Base+0x864>
  41d06c:	ldr	x25, [x19, #24]
  41d070:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41d074:	add	x0, x0, #0x7cc
  41d078:	str	x0, [sp, #120]
  41d07c:	cbnz	x25, 41d3f8 <notice_finished_file@@Base+0xbdc>
  41d080:	ldr	x0, [x19, #104]
  41d084:	cmp	x0, #0x0
  41d088:	csel	x0, x0, x19, ne  // ne = any
  41d08c:	ldrb	w1, [x0, #137]
  41d090:	and	w1, w1, #0xfffffffd
  41d094:	strb	w1, [x0, #137]
  41d098:	ldr	x0, [x21, #104]
  41d09c:	cmp	x0, #0x0
  41d0a0:	csel	x0, x0, x21, ne  // ne = any
  41d0a4:	ldrb	w1, [x0, #137]
  41d0a8:	and	w1, w1, #0xfffffffd
  41d0ac:	strb	w1, [x0, #137]
  41d0b0:	ldr	w0, [x23, #1104]
  41d0b4:	tbz	w0, #1, 41d0e8 <notice_finished_file@@Base+0x8cc>
  41d0b8:	mov	w0, w27
  41d0bc:	bl	416a20 <print_spaces@@Base>
  41d0c0:	mov	w2, #0x5                   	// #5
  41d0c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d0c8:	mov	x0, #0x0                   	// #0
  41d0cc:	add	x1, x1, #0x822
  41d0d0:	bl	406d60 <dcgettext@plt>
  41d0d4:	ldr	x1, [x19]
  41d0d8:	bl	406df0 <printf@plt>
  41d0dc:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d0e0:	ldr	x0, [x0, #400]
  41d0e4:	bl	406cb0 <fflush@plt>
  41d0e8:	cbz	w26, 41d534 <notice_finished_file@@Base+0xd18>
  41d0ec:	mov	x0, x19
  41d0f0:	mov	w1, #0x1                   	// #1
  41d0f4:	bl	40cea0 <set_command_state@@Base>
  41d0f8:	ldr	w0, [x23, #1104]
  41d0fc:	tbz	w0, #1, 41cde8 <notice_finished_file@@Base+0x5cc>
  41d100:	mov	w0, w22
  41d104:	bl	416a20 <print_spaces@@Base>
  41d108:	mov	w2, #0x5                   	// #5
  41d10c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d110:	mov	x0, #0x0                   	// #0
  41d114:	add	x1, x1, #0x84f
  41d118:	bl	406d60 <dcgettext@plt>
  41d11c:	ldr	x1, [x19]
  41d120:	b	41ce58 <notice_finished_file@@Base+0x63c>
  41d124:	mov	w1, w27
  41d128:	mov	x0, x19
  41d12c:	bl	412340 <try_implicit_rule@@Base>
  41d130:	cbz	w0, 41d184 <notice_finished_file@@Base+0x968>
  41d134:	ldr	w0, [x23, #1104]
  41d138:	tbz	w0, #3, 41d16c <notice_finished_file@@Base+0x950>
  41d13c:	mov	w0, w27
  41d140:	bl	416a20 <print_spaces@@Base>
  41d144:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d148:	add	x1, x1, #0x798
  41d14c:	mov	w2, #0x5                   	// #5
  41d150:	mov	x0, #0x0                   	// #0
  41d154:	bl	406d60 <dcgettext@plt>
  41d158:	ldr	x1, [x19]
  41d15c:	bl	406df0 <printf@plt>
  41d160:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d164:	ldr	x0, [x0, #400]
  41d168:	bl	406cb0 <fflush@plt>
  41d16c:	ldrb	w0, [x19, #137]
  41d170:	orr	w0, w0, #0x1
  41d174:	strb	w0, [x19, #137]
  41d178:	ldr	x0, [x19, #32]
  41d17c:	cbnz	x0, 41d00c <notice_finished_file@@Base+0x7f0>
  41d180:	b	41d004 <notice_finished_file@@Base+0x7e8>
  41d184:	ldr	w0, [x23, #1104]
  41d188:	tbz	w0, #3, 41d16c <notice_finished_file@@Base+0x950>
  41d18c:	mov	w0, w27
  41d190:	bl	416a20 <print_spaces@@Base>
  41d194:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d198:	mov	w2, #0x5                   	// #5
  41d19c:	add	x1, x1, #0x7ba
  41d1a0:	b	41d150 <notice_finished_file@@Base+0x934>
  41d1a4:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  41d1a8:	ldr	x0, [x20, #2032]
  41d1ac:	cbz	x0, 41d00c <notice_finished_file@@Base+0x7f0>
  41d1b0:	ldr	x0, [x0, #32]
  41d1b4:	cbz	x0, 41d00c <notice_finished_file@@Base+0x7f0>
  41d1b8:	ldr	w0, [x23, #1104]
  41d1bc:	tbz	w0, #3, 41d1f0 <notice_finished_file@@Base+0x9d4>
  41d1c0:	mov	w0, w27
  41d1c4:	bl	416a20 <print_spaces@@Base>
  41d1c8:	mov	w2, #0x5                   	// #5
  41d1cc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d1d0:	mov	x0, #0x0                   	// #0
  41d1d4:	add	x1, x1, #0x7dc
  41d1d8:	bl	406d60 <dcgettext@plt>
  41d1dc:	ldr	x1, [x19]
  41d1e0:	bl	406df0 <printf@plt>
  41d1e4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d1e8:	ldr	x0, [x0, #400]
  41d1ec:	bl	406cb0 <fflush@plt>
  41d1f0:	ldr	x0, [x20, #2032]
  41d1f4:	ldr	x0, [x0, #32]
  41d1f8:	str	x0, [x19, #32]
  41d1fc:	b	41d00c <notice_finished_file@@Base+0x7f0>
  41d200:	str	x1, [x25, #16]
  41d204:	ldr	x0, [x25, #16]
  41d208:	ldr	x1, [x0, #72]
  41d20c:	cbnz	x1, 41d200 <notice_finished_file@@Base+0x9e4>
  41d210:	ldr	x6, [x0, #112]
  41d214:	cbnz	x6, 41d22c <notice_finished_file@@Base+0xa10>
  41d218:	mov	w1, #0x1                   	// #1
  41d21c:	str	x7, [sp, #152]
  41d220:	bl	41c170 <f_mtime@@Base>
  41d224:	mov	x6, x0
  41d228:	ldr	x7, [sp, #152]
  41d22c:	ldr	x4, [x25, #16]
  41d230:	ldr	x0, [x4, #72]
  41d234:	cbnz	x0, 41d2d0 <notice_finished_file@@Base+0xab4>
  41d238:	ldr	x0, [x4, #104]
  41d23c:	cmp	x0, #0x0
  41d240:	csel	x0, x0, x4, ne  // ne = any
  41d244:	ldrb	w0, [x0, #137]
  41d248:	tbz	w0, #1, 41d2e0 <notice_finished_file@@Base+0xac4>
  41d24c:	ldr	x0, [x19]
  41d250:	str	x4, [sp, #152]
  41d254:	str	x7, [sp, #168]
  41d258:	bl	406700 <strlen@plt>
  41d25c:	mov	x8, x0
  41d260:	ldr	x4, [sp, #152]
  41d264:	str	x8, [sp, #160]
  41d268:	ldr	x0, [x4]
  41d26c:	bl	406700 <strlen@plt>
  41d270:	mov	x6, x0
  41d274:	mov	w2, #0x5                   	// #5
  41d278:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d27c:	mov	x0, #0x0                   	// #0
  41d280:	add	x1, x1, #0x7fc
  41d284:	str	x6, [sp, #152]
  41d288:	bl	406d60 <dcgettext@plt>
  41d28c:	ldr	x1, [x25, #16]
  41d290:	mov	x2, x0
  41d294:	ldp	x6, x8, [sp, #152]
  41d298:	mov	x0, #0x0                   	// #0
  41d29c:	ldr	x4, [x1]
  41d2a0:	ldr	x3, [x19]
  41d2a4:	add	x1, x8, x6
  41d2a8:	bl	417aa8 <error@@Base>
  41d2ac:	ldr	x7, [sp, #168]
  41d2b0:	ldr	x0, [x25]
  41d2b4:	cbnz	x7, 41d2d8 <notice_finished_file@@Base+0xabc>
  41d2b8:	str	x0, [x19, #24]
  41d2bc:	ldr	x0, [x25]
  41d2c0:	mov	x25, x7
  41d2c4:	mov	x7, x25
  41d2c8:	mov	x25, x0
  41d2cc:	b	41d050 <notice_finished_file@@Base+0x834>
  41d2d0:	str	x0, [x25, #16]
  41d2d4:	b	41d22c <notice_finished_file@@Base+0xa10>
  41d2d8:	str	x0, [x7]
  41d2dc:	b	41d2bc <notice_finished_file@@Base+0xaa0>
  41d2e0:	ldr	x0, [sp, #112]
  41d2e4:	str	x19, [x4, #96]
  41d2e8:	str	w28, [sp, #180]
  41d2ec:	ldr	w7, [x0]
  41d2f0:	cbz	w7, 41d308 <notice_finished_file@@Base+0xaec>
  41d2f4:	ldrb	w0, [x4, #138]
  41d2f8:	ldrb	w1, [x19, #138]
  41d2fc:	and	w7, w0, #0x1
  41d300:	bfxil	w0, w1, #0, #1
  41d304:	strb	w0, [x4, #138]
  41d308:	ldr	x2, [sp, #104]
  41d30c:	add	x3, sp, #0xb4
  41d310:	mov	w1, w27
  41d314:	mov	x0, x4
  41d318:	str	x6, [sp, #152]
  41d31c:	str	w7, [sp, #160]
  41d320:	bl	41db08 <notice_finished_file@@Base+0x12ec>
  41d324:	cmp	w20, w0
  41d328:	csel	w20, w20, w0, cs  // cs = hs, nlast
  41d32c:	ldr	x0, [sp, #112]
  41d330:	ldr	x6, [sp, #152]
  41d334:	ldr	w0, [x0]
  41d338:	cbz	w0, 41d350 <notice_finished_file@@Base+0xb34>
  41d33c:	ldr	x0, [x25, #16]
  41d340:	ldr	w7, [sp, #160]
  41d344:	ldrb	w1, [x0, #138]
  41d348:	bfxil	w1, w7, #0, #1
  41d34c:	strb	w1, [x0, #138]
  41d350:	ldrb	w0, [x25, #33]
  41d354:	tbnz	w0, #1, 41d35c <notice_finished_file@@Base+0xb40>
  41d358:	ldr	w28, [sp, #180]
  41d35c:	ldr	x0, [x25, #16]
  41d360:	ldr	x1, [x0, #72]
  41d364:	cbnz	x1, 41d3e8 <notice_finished_file@@Base+0xbcc>
  41d368:	ldr	x1, [x0, #104]
  41d36c:	cmp	x1, #0x0
  41d370:	csel	x1, x1, x0, ne  // ne = any
  41d374:	ldrb	w2, [x1, #136]
  41d378:	ldr	x1, [x1, #56]
  41d37c:	and	w2, w2, #0xc
  41d380:	cmp	w2, #0x8
  41d384:	ccmp	w2, #0x4, #0x4, ne  // ne = any
  41d388:	cset	w2, eq  // eq = none
  41d38c:	orr	w26, w26, w2
  41d390:	cbnz	x1, 41d374 <notice_finished_file@@Base+0xb58>
  41d394:	cbz	w20, 41d3a4 <notice_finished_file@@Base+0xb88>
  41d398:	ldr	x1, [sp, #144]
  41d39c:	ldr	w1, [x1]
  41d3a0:	cbz	w1, 41d054 <notice_finished_file@@Base+0x838>
  41d3a4:	cbnz	w26, 41d3e0 <notice_finished_file@@Base+0xbc4>
  41d3a8:	ldr	x1, [x0, #112]
  41d3ac:	cbnz	x1, 41d3c4 <notice_finished_file@@Base+0xba8>
  41d3b0:	mov	w1, #0x1                   	// #1
  41d3b4:	str	x6, [sp, #152]
  41d3b8:	bl	41c170 <f_mtime@@Base>
  41d3bc:	mov	x1, x0
  41d3c0:	ldr	x6, [sp, #152]
  41d3c4:	cmp	x6, x1
  41d3c8:	b.ne	41d3f0 <notice_finished_file@@Base+0xbd4>  // b.any
  41d3cc:	cmp	x6, #0x1
  41d3d0:	cset	w1, eq  // eq = none
  41d3d4:	ldrb	w0, [x25, #33]
  41d3d8:	bfxil	w0, w1, #0, #1
  41d3dc:	strb	w0, [x25, #33]
  41d3e0:	ldr	x0, [x25]
  41d3e4:	b	41d2c4 <notice_finished_file@@Base+0xaa8>
  41d3e8:	str	x1, [x25, #16]
  41d3ec:	b	41d35c <notice_finished_file@@Base+0xb40>
  41d3f0:	mov	w1, #0x1                   	// #1
  41d3f4:	b	41d3d4 <notice_finished_file@@Base+0xbb8>
  41d3f8:	ldr	x0, [x25, #16]
  41d3fc:	ldrb	w1, [x0, #137]
  41d400:	tbz	w1, #6, 41d514 <notice_finished_file@@Base+0xcf8>
  41d404:	ldr	x3, [x0, #112]
  41d408:	cbnz	x3, 41d418 <notice_finished_file@@Base+0xbfc>
  41d40c:	mov	w1, #0x1                   	// #1
  41d410:	bl	41c170 <f_mtime@@Base>
  41d414:	mov	x3, x0
  41d418:	ldr	x0, [x25, #16]
  41d41c:	ldr	x1, [x0, #72]
  41d420:	cbnz	x1, 41d51c <notice_finished_file@@Base+0xd00>
  41d424:	ldr	x1, [sp, #112]
  41d428:	str	x19, [x0, #96]
  41d42c:	ldr	w4, [x1]
  41d430:	cbz	w4, 41d448 <notice_finished_file@@Base+0xc2c>
  41d434:	ldrb	w1, [x0, #138]
  41d438:	ldrb	w5, [x19, #138]
  41d43c:	and	w4, w1, #0x1
  41d440:	bfxil	w1, w5, #0, #1
  41d444:	strb	w1, [x0, #138]
  41d448:	str	wzr, [x0, #128]
  41d44c:	mov	w1, w27
  41d450:	str	x3, [sp, #144]
  41d454:	str	w4, [sp, #152]
  41d458:	bl	41cc24 <notice_finished_file@@Base+0x408>
  41d45c:	cmp	w20, w0
  41d460:	csel	w20, w20, w0, cs  // cs = hs, nlast
  41d464:	ldr	x0, [sp, #112]
  41d468:	ldr	x3, [sp, #144]
  41d46c:	ldr	w0, [x0]
  41d470:	cbz	w0, 41d488 <notice_finished_file@@Base+0xc6c>
  41d474:	ldr	x0, [x25, #16]
  41d478:	ldr	w4, [sp, #152]
  41d47c:	ldrb	w1, [x0, #138]
  41d480:	bfxil	w1, w4, #0, #1
  41d484:	strb	w1, [x0, #138]
  41d488:	ldr	x0, [x25, #16]
  41d48c:	ldr	x1, [x0, #72]
  41d490:	cbnz	x1, 41d524 <notice_finished_file@@Base+0xd08>
  41d494:	ldr	x1, [x0, #104]
  41d498:	cmp	x1, #0x0
  41d49c:	csel	x1, x1, x0, ne  // ne = any
  41d4a0:	ldrb	w4, [x1, #136]
  41d4a4:	ldr	x1, [x1, #56]
  41d4a8:	and	w4, w4, #0xc
  41d4ac:	cmp	w4, #0x8
  41d4b0:	ccmp	w4, #0x4, #0x4, ne  // ne = any
  41d4b4:	cset	w4, eq  // eq = none
  41d4b8:	orr	w26, w26, w4
  41d4bc:	cbnz	x1, 41d4a0 <notice_finished_file@@Base+0xc84>
  41d4c0:	cbz	w20, 41d4d0 <notice_finished_file@@Base+0xcb4>
  41d4c4:	ldr	x1, [sp, #120]
  41d4c8:	ldr	w1, [x1]
  41d4cc:	cbz	w1, 41d080 <notice_finished_file@@Base+0x864>
  41d4d0:	cbnz	w26, 41d514 <notice_finished_file@@Base+0xcf8>
  41d4d4:	ldrb	w1, [x19, #137]
  41d4d8:	tbz	w1, #5, 41d4e4 <notice_finished_file@@Base+0xcc8>
  41d4dc:	ldr	x1, [x19, #32]
  41d4e0:	cbnz	x1, 41d52c <notice_finished_file@@Base+0xd10>
  41d4e4:	ldr	x1, [x0, #112]
  41d4e8:	cbnz	x1, 41d500 <notice_finished_file@@Base+0xce4>
  41d4ec:	mov	w1, #0x1                   	// #1
  41d4f0:	str	x3, [sp, #144]
  41d4f4:	bl	41c170 <f_mtime@@Base>
  41d4f8:	mov	x1, x0
  41d4fc:	ldr	x3, [sp, #144]
  41d500:	cmp	x3, x1
  41d504:	cset	w1, ne  // ne = any
  41d508:	ldrb	w0, [x25, #33]
  41d50c:	bfxil	w0, w1, #0, #1
  41d510:	strb	w0, [x25, #33]
  41d514:	ldr	x25, [x25]
  41d518:	b	41d07c <notice_finished_file@@Base+0x860>
  41d51c:	str	x1, [x25, #16]
  41d520:	b	41d418 <notice_finished_file@@Base+0xbfc>
  41d524:	str	x1, [x25, #16]
  41d528:	b	41d488 <notice_finished_file@@Base+0xc6c>
  41d52c:	mov	w1, #0x1                   	// #1
  41d530:	b	41d508 <notice_finished_file@@Base+0xcec>
  41d534:	cbz	w20, 41d5f0 <notice_finished_file@@Base+0xdd4>
  41d538:	ldrb	w1, [x19, #136]
  41d53c:	cmp	w20, #0x1
  41d540:	mov	w0, #0x3                   	// #3
  41d544:	csel	w0, w20, w0, ne  // ne = any
  41d548:	bfxil	w1, w0, #0, #2
  41d54c:	strb	w1, [x19, #136]
  41d550:	mov	x0, x19
  41d554:	bl	41c81c <notice_finished_file@@Base>
  41d558:	ldr	w0, [x23, #1104]
  41d55c:	tbz	w0, #1, 41d590 <notice_finished_file@@Base+0xd74>
  41d560:	mov	w0, w22
  41d564:	bl	416a20 <print_spaces@@Base>
  41d568:	mov	w2, #0x5                   	// #5
  41d56c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d570:	mov	x0, #0x0                   	// #0
  41d574:	add	x1, x1, #0x87a
  41d578:	bl	406d60 <dcgettext@plt>
  41d57c:	ldr	x1, [x19]
  41d580:	bl	406df0 <printf@plt>
  41d584:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d588:	ldr	x0, [x0, #400]
  41d58c:	bl	406cb0 <fflush@plt>
  41d590:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41d594:	ldr	w0, [x0, #1996]
  41d598:	cbz	w0, 41cdec <notice_finished_file@@Base+0x5d0>
  41d59c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41d5a0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41d5a4:	ldr	w0, [x0, #1992]
  41d5a8:	ldr	w1, [x1, #3412]
  41d5ac:	orr	w0, w0, w1
  41d5b0:	orr	w0, w0, w22
  41d5b4:	cbnz	w0, 41cdec <notice_finished_file@@Base+0x5d0>
  41d5b8:	ldr	x0, [x19]
  41d5bc:	bl	406700 <strlen@plt>
  41d5c0:	mov	x24, x0
  41d5c4:	mov	w2, #0x5                   	// #5
  41d5c8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d5cc:	mov	x0, #0x0                   	// #0
  41d5d0:	add	x1, x1, #0x89a
  41d5d4:	bl	406d60 <dcgettext@plt>
  41d5d8:	mov	x2, x0
  41d5dc:	ldr	x3, [x19]
  41d5e0:	mov	x1, x24
  41d5e4:	mov	x0, #0x0                   	// #0
  41d5e8:	bl	417aa8 <error@@Base>
  41d5ec:	b	41cdec <notice_finished_file@@Base+0x5d0>
  41d5f0:	ldrb	w0, [x19, #136]
  41d5f4:	and	w0, w0, #0xc
  41d5f8:	cmp	w0, #0x4
  41d5fc:	b.ne	41d60c <notice_finished_file@@Base+0xdf0>  // b.any
  41d600:	mov	x0, x19
  41d604:	mov	w1, #0x0                   	// #0
  41d608:	bl	40cea0 <set_command_state@@Base>
  41d60c:	ldr	x25, [x19, #24]
  41d610:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41d614:	add	x0, x0, #0x956
  41d618:	str	x0, [sp, #120]
  41d61c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41d620:	add	x0, x0, #0x928
  41d624:	str	x0, [sp, #144]
  41d628:	cbnz	x25, 41d734 <notice_finished_file@@Base+0xf18>
  41d62c:	ldr	x1, [x19, #104]
  41d630:	ldr	w0, [x23, #1104]
  41d634:	cbz	x1, 41d868 <notice_finished_file@@Base+0x104c>
  41d638:	ldr	x1, [x19, #24]
  41d63c:	cbnz	x1, 41d868 <notice_finished_file@@Base+0x104c>
  41d640:	tbz	w0, #0, 41d6ac <notice_finished_file@@Base+0xe90>
  41d644:	mov	w0, w22
  41d648:	bl	416a20 <print_spaces@@Base>
  41d64c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d650:	add	x1, x1, #0x984
  41d654:	mov	w2, #0x5                   	// #5
  41d658:	mov	x0, #0x0                   	// #0
  41d65c:	bl	406d60 <dcgettext@plt>
  41d660:	ldr	x1, [x19]
  41d664:	bl	406df0 <printf@plt>
  41d668:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d66c:	ldr	x0, [x0, #400]
  41d670:	bl	406cb0 <fflush@plt>
  41d674:	ldr	w0, [x23, #1104]
  41d678:	tbz	w0, #0, 41d6ac <notice_finished_file@@Base+0xe90>
  41d67c:	mov	w0, w22
  41d680:	bl	416a20 <print_spaces@@Base>
  41d684:	mov	w2, #0x5                   	// #5
  41d688:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d68c:	mov	x0, #0x0                   	// #0
  41d690:	add	x1, x1, #0xa52
  41d694:	bl	406d60 <dcgettext@plt>
  41d698:	ldr	x1, [x19]
  41d69c:	bl	406df0 <printf@plt>
  41d6a0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d6a4:	ldr	x0, [x0, #400]
  41d6a8:	bl	406cb0 <fflush@plt>
  41d6ac:	ldp	x0, x1, [x19]
  41d6b0:	cmp	x0, x1
  41d6b4:	b.eq	41d718 <notice_finished_file@@Base+0xefc>  // b.none
  41d6b8:	ldrb	w3, [x0]
  41d6bc:	ldrb	w2, [x1]
  41d6c0:	cmp	w2, w3
  41d6c4:	b.ne	41d6dc <notice_finished_file@@Base+0xec0>  // b.any
  41d6c8:	cbz	w2, 41d718 <notice_finished_file@@Base+0xefc>
  41d6cc:	add	x1, x1, #0x1
  41d6d0:	add	x0, x0, #0x1
  41d6d4:	bl	406be0 <strcmp@plt>
  41d6d8:	cbz	w0, 41d718 <notice_finished_file@@Base+0xefc>
  41d6dc:	ldr	w0, [x23, #1104]
  41d6e0:	tbz	w0, #0, 41d70c <notice_finished_file@@Base+0xef0>
  41d6e4:	mov	w2, #0x5                   	// #5
  41d6e8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d6ec:	mov	x0, #0x0                   	// #0
  41d6f0:	add	x1, x1, #0xa6c
  41d6f4:	bl	406d60 <dcgettext@plt>
  41d6f8:	ldr	x1, [x19, #8]
  41d6fc:	bl	406df0 <printf@plt>
  41d700:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d704:	ldr	x0, [x0, #400]
  41d708:	bl	406cb0 <fflush@plt>
  41d70c:	ldrb	w0, [x19, #138]
  41d710:	orr	w0, w0, #0x2
  41d714:	strb	w0, [x19, #138]
  41d718:	ldr	x0, [x19, #32]
  41d71c:	cbnz	x0, 41d9dc <notice_finished_file@@Base+0x11c0>
  41d720:	ldrb	w0, [x19, #137]
  41d724:	tbz	w0, #5, 41d9a4 <notice_finished_file@@Base+0x1188>
  41d728:	ldrb	w0, [x19, #136]
  41d72c:	and	w0, w0, #0xfffffffc
  41d730:	b	41d9cc <notice_finished_file@@Base+0x11b0>
  41d734:	ldr	x0, [x25, #16]
  41d738:	ldr	x1, [x0, #112]
  41d73c:	cbnz	x1, 41d74c <notice_finished_file@@Base+0xf30>
  41d740:	mov	w1, #0x1                   	// #1
  41d744:	bl	41c170 <f_mtime@@Base>
  41d748:	mov	x1, x0
  41d74c:	ldr	x2, [x25, #16]
  41d750:	ldr	x0, [x2, #72]
  41d754:	cbnz	x0, 41d820 <notice_finished_file@@Base+0x1004>
  41d758:	ldrb	w0, [x25, #33]
  41d75c:	tbnz	w0, #1, 41d77c <notice_finished_file@@Base+0xf60>
  41d760:	cmp	x1, #0x1
  41d764:	b.ne	41d774 <notice_finished_file@@Base+0xf58>  // b.any
  41d768:	ldrb	w2, [x2, #137]
  41d76c:	tst	x2, #0x40
  41d770:	csinc	w28, w28, wzr, ne  // ne = any
  41d774:	and	w2, w0, #0x1
  41d778:	orr	w26, w26, w2
  41d77c:	ldr	w3, [sp, #132]
  41d780:	ubfx	x2, x0, #0, #1
  41d784:	orr	w3, w3, w2
  41d788:	ldr	x2, [sp, #104]
  41d78c:	cmp	x2, x1
  41d790:	cset	w2, cc  // cc = lo, ul, last
  41d794:	cmp	x24, #0x1
  41d798:	orr	w2, w2, w3
  41d79c:	bfxil	w0, w2, #0, #1
  41d7a0:	strb	w0, [x25, #33]
  41d7a4:	b.eq	41d818 <notice_finished_file@@Base+0xffc>  // b.none
  41d7a8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d7ac:	add	x0, x0, #0x450
  41d7b0:	ldr	w0, [x0]
  41d7b4:	tst	x0, #0x3
  41d7b8:	b.eq	41d818 <notice_finished_file@@Base+0xffc>  // b.none
  41d7bc:	ldrb	w2, [x25, #33]
  41d7c0:	tbz	w2, #1, 41d828 <notice_finished_file@@Base+0x100c>
  41d7c4:	tbz	w0, #1, 41d818 <notice_finished_file@@Base+0xffc>
  41d7c8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d7cc:	add	x1, x1, #0x8c4
  41d7d0:	mov	w2, #0x5                   	// #5
  41d7d4:	mov	x0, #0x0                   	// #0
  41d7d8:	bl	406d60 <dcgettext@plt>
  41d7dc:	str	x0, [sp, #152]
  41d7e0:	cbz	x0, 41d818 <notice_finished_file@@Base+0xffc>
  41d7e4:	mov	w0, w27
  41d7e8:	bl	416a20 <print_spaces@@Base>
  41d7ec:	ldr	x1, [x25, #8]
  41d7f0:	ldr	x3, [sp, #152]
  41d7f4:	cbnz	x1, 41d800 <notice_finished_file@@Base+0xfe4>
  41d7f8:	ldr	x0, [x25, #16]
  41d7fc:	ldr	x1, [x0]
  41d800:	mov	x0, x3
  41d804:	ldr	x2, [x19]
  41d808:	bl	406df0 <printf@plt>
  41d80c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d810:	ldr	x0, [x0, #400]
  41d814:	bl	406cb0 <fflush@plt>
  41d818:	ldr	x25, [x25]
  41d81c:	b	41d628 <notice_finished_file@@Base+0xe0c>
  41d820:	str	x0, [x25, #16]
  41d824:	b	41d74c <notice_finished_file@@Base+0xf30>
  41d828:	cmp	x1, #0x1
  41d82c:	b.ne	41d844 <notice_finished_file@@Base+0x1028>  // b.any
  41d830:	tbz	w0, #0, 41d818 <notice_finished_file@@Base+0xffc>
  41d834:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d838:	mov	w2, #0x5                   	// #5
  41d83c:	add	x1, x1, #0x8f6
  41d840:	b	41d7d4 <notice_finished_file@@Base+0xfb8>
  41d844:	tbz	w2, #0, 41d858 <notice_finished_file@@Base+0x103c>
  41d848:	tbz	w0, #0, 41d818 <notice_finished_file@@Base+0xffc>
  41d84c:	mov	w2, #0x5                   	// #5
  41d850:	ldr	x1, [sp, #144]
  41d854:	b	41d7d4 <notice_finished_file@@Base+0xfb8>
  41d858:	tbz	w0, #1, 41d818 <notice_finished_file@@Base+0xffc>
  41d85c:	mov	w2, #0x5                   	// #5
  41d860:	ldr	x1, [sp, #120]
  41d864:	b	41d7d4 <notice_finished_file@@Base+0xfb8>
  41d868:	cmp	x24, #0x1
  41d86c:	b.eq	41d970 <notice_finished_file@@Base+0x1154>  // b.none
  41d870:	ldrb	w1, [x19, #137]
  41d874:	tbz	w1, #3, 41d970 <notice_finished_file@@Base+0x1154>
  41d878:	cbnz	w26, 41d970 <notice_finished_file@@Base+0x1154>
  41d87c:	ldr	x1, [x19, #32]
  41d880:	cbnz	x1, 41daf8 <notice_finished_file@@Base+0x12dc>
  41d884:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41d888:	ldr	w1, [x1, #3320]
  41d88c:	cbnz	w1, 41db00 <notice_finished_file@@Base+0x12e4>
  41d890:	tbz	w0, #1, 41d954 <notice_finished_file@@Base+0x1138>
  41d894:	mov	w0, w22
  41d898:	bl	416a20 <print_spaces@@Base>
  41d89c:	mov	w2, #0x5                   	// #5
  41d8a0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d8a4:	mov	x0, #0x0                   	// #0
  41d8a8:	add	x1, x1, #0x9bb
  41d8ac:	bl	406d60 <dcgettext@plt>
  41d8b0:	ldr	x1, [x19]
  41d8b4:	bl	406df0 <printf@plt>
  41d8b8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d8bc:	ldr	x0, [x0, #400]
  41d8c0:	bl	406cb0 <fflush@plt>
  41d8c4:	ldr	w0, [x23, #1104]
  41d8c8:	tbz	w0, #1, 41d954 <notice_finished_file@@Base+0x1138>
  41d8cc:	mov	w0, w22
  41d8d0:	bl	416a20 <print_spaces@@Base>
  41d8d4:	mov	w2, #0x5                   	// #5
  41d8d8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d8dc:	mov	x0, #0x0                   	// #0
  41d8e0:	add	x1, x1, #0xa1c
  41d8e4:	bl	406d60 <dcgettext@plt>
  41d8e8:	ldr	x1, [x19]
  41d8ec:	bl	406df0 <printf@plt>
  41d8f0:	ldp	x0, x1, [x19]
  41d8f4:	cmp	x0, x1
  41d8f8:	b.eq	41d93c <notice_finished_file@@Base+0x1120>  // b.none
  41d8fc:	ldrb	w3, [x0]
  41d900:	ldrb	w2, [x1]
  41d904:	cmp	w2, w3
  41d908:	b.ne	41d920 <notice_finished_file@@Base+0x1104>  // b.any
  41d90c:	cbz	w2, 41d93c <notice_finished_file@@Base+0x1120>
  41d910:	add	x1, x1, #0x1
  41d914:	add	x0, x0, #0x1
  41d918:	bl	406be0 <strcmp@plt>
  41d91c:	cbz	w0, 41d93c <notice_finished_file@@Base+0x1120>
  41d920:	mov	w2, #0x5                   	// #5
  41d924:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d928:	mov	x0, #0x0                   	// #0
  41d92c:	add	x1, x1, #0xa3a
  41d930:	bl	406d60 <dcgettext@plt>
  41d934:	ldr	x1, [x19, #8]
  41d938:	bl	406df0 <printf@plt>
  41d93c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  41d940:	add	x0, x0, #0x64e
  41d944:	bl	406b80 <puts@plt>
  41d948:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41d94c:	ldr	x0, [x0, #400]
  41d950:	bl	406cb0 <fflush@plt>
  41d954:	mov	x0, x19
  41d958:	bl	41c81c <notice_finished_file@@Base>
  41d95c:	ldr	x0, [x19, #8]
  41d960:	str	x0, [x19]
  41d964:	ldr	x19, [x19, #56]
  41d968:	cbnz	x19, 41d95c <notice_finished_file@@Base+0x1140>
  41d96c:	b	41cde8 <notice_finished_file@@Base+0x5cc>
  41d970:	cbnz	w28, 41d674 <notice_finished_file@@Base+0xe58>
  41d974:	ldr	x1, [x19, #32]
  41d978:	cbz	x1, 41d8c4 <notice_finished_file@@Base+0x10a8>
  41d97c:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41d980:	ldr	w1, [x1, #3320]
  41d984:	cbz	w1, 41d8c4 <notice_finished_file@@Base+0x10a8>
  41d988:	tbz	w0, #1, 41d674 <notice_finished_file@@Base+0xe58>
  41d98c:	mov	w0, w22
  41d990:	bl	416a20 <print_spaces@@Base>
  41d994:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41d998:	mov	w2, #0x5                   	// #5
  41d99c:	add	x1, x1, #0x9f6
  41d9a0:	b	41d658 <notice_finished_file@@Base+0xe3c>
  41d9a4:	tbnz	w0, #3, 41d728 <notice_finished_file@@Base+0xf0c>
  41d9a8:	ldr	x0, [sp, #112]
  41d9ac:	ldr	w0, [x0]
  41d9b0:	cbz	w0, 41d9bc <notice_finished_file@@Base+0x11a0>
  41d9b4:	ldrb	w0, [x19, #138]
  41d9b8:	tbnz	w0, #0, 41d9c4 <notice_finished_file@@Base+0x11a8>
  41d9bc:	mov	x0, x19
  41d9c0:	bl	41bffc <show_goal_error@@Base+0xb4>
  41d9c4:	ldrb	w0, [x19, #136]
  41d9c8:	orr	w0, w0, #0x3
  41d9cc:	strb	w0, [x19, #136]
  41d9d0:	mov	x0, x19
  41d9d4:	bl	41c81c <notice_finished_file@@Base>
  41d9d8:	b	41da00 <notice_finished_file@@Base+0x11e4>
  41d9dc:	bl	409c78 <chop_commands@@Base>
  41d9e0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41d9e4:	ldr	w0, [x0, #2196]
  41d9e8:	cbz	w0, 41d9f8 <notice_finished_file@@Base+0x11dc>
  41d9ec:	ldr	x0, [x19, #32]
  41d9f0:	ldrb	w0, [x0, #51]
  41d9f4:	tbz	w0, #0, 41d728 <notice_finished_file@@Base+0xf0c>
  41d9f8:	mov	x0, x19
  41d9fc:	bl	409f1c <execute_file_commands@@Base>
  41da00:	ldrb	w0, [x19, #136]
  41da04:	and	w1, w0, #0xc
  41da08:	cmp	w1, #0xc
  41da0c:	b.eq	41da4c <notice_finished_file@@Base+0x1230>  // b.none
  41da10:	ldr	w0, [x23, #1104]
  41da14:	tbz	w0, #1, 41cde8 <notice_finished_file@@Base+0x5cc>
  41da18:	mov	w0, w22
  41da1c:	bl	416a20 <print_spaces@@Base>
  41da20:	mov	w2, #0x5                   	// #5
  41da24:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41da28:	mov	x0, #0x0                   	// #0
  41da2c:	add	x1, x1, #0xa89
  41da30:	bl	406d60 <dcgettext@plt>
  41da34:	ldr	x1, [x19]
  41da38:	bl	406df0 <printf@plt>
  41da3c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41da40:	ldr	x0, [x0, #400]
  41da44:	bl	406cb0 <fflush@plt>
  41da48:	b	41cdec <notice_finished_file@@Base+0x5d0>
  41da4c:	and	w0, w0, #0x3
  41da50:	cmp	w0, #0x2
  41da54:	b.eq	41dad8 <notice_finished_file@@Base+0x12bc>  // b.none
  41da58:	cmp	w0, #0x3
  41da5c:	b.eq	41da7c <notice_finished_file@@Base+0x1260>  // b.none
  41da60:	cmp	w0, #0x1
  41da64:	b.ne	41dab8 <notice_finished_file@@Base+0x129c>  // b.any
  41da68:	ldrb	w0, [x19, #137]
  41da6c:	ldrb	w20, [x19, #136]
  41da70:	orr	w0, w0, #0x4
  41da74:	strb	w0, [x19, #137]
  41da78:	b	41cddc <notice_finished_file@@Base+0x5c0>
  41da7c:	ldr	w0, [x23, #1104]
  41da80:	tbz	w0, #0, 41da68 <notice_finished_file@@Base+0x124c>
  41da84:	mov	w0, w22
  41da88:	bl	416a20 <print_spaces@@Base>
  41da8c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41da90:	add	x1, x1, #0xaa7
  41da94:	mov	w2, #0x5                   	// #5
  41da98:	mov	x0, #0x0                   	// #0
  41da9c:	bl	406d60 <dcgettext@plt>
  41daa0:	ldr	x1, [x19]
  41daa4:	bl	406df0 <printf@plt>
  41daa8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41daac:	ldr	x0, [x0, #400]
  41dab0:	bl	406cb0 <fflush@plt>
  41dab4:	b	41da68 <notice_finished_file@@Base+0x124c>
  41dab8:	ldr	w0, [x23, #1104]
  41dabc:	tbz	w0, #0, 41da68 <notice_finished_file@@Base+0x124c>
  41dac0:	mov	w0, w22
  41dac4:	bl	416a20 <print_spaces@@Base>
  41dac8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41dacc:	mov	w2, #0x5                   	// #5
  41dad0:	add	x1, x1, #0xacb
  41dad4:	b	41da98 <notice_finished_file@@Base+0x127c>
  41dad8:	ldr	w0, [x23, #1104]
  41dadc:	tbz	w0, #0, 41da68 <notice_finished_file@@Base+0x124c>
  41dae0:	mov	w0, w22
  41dae4:	bl	416a20 <print_spaces@@Base>
  41dae8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41daec:	mov	w2, #0x5                   	// #5
  41daf0:	add	x1, x1, #0xaf2
  41daf4:	b	41da98 <notice_finished_file@@Base+0x127c>
  41daf8:	cbz	w28, 41d97c <notice_finished_file@@Base+0x1160>
  41dafc:	b	41d674 <notice_finished_file@@Base+0xe58>
  41db00:	cbz	w28, 41d8c4 <notice_finished_file@@Base+0x10a8>
  41db04:	b	41d674 <notice_finished_file@@Base+0xe58>
  41db08:	stp	x29, x30, [sp, #-144]!
  41db0c:	mov	x29, sp
  41db10:	stp	x23, x24, [sp, #48]
  41db14:	add	w23, w1, #0x1
  41db18:	mov	x24, x3
  41db1c:	ldr	x1, [x0, #104]
  41db20:	stp	x19, x20, [sp, #16]
  41db24:	mov	x19, x0
  41db28:	cmp	x1, #0x0
  41db2c:	stp	x21, x22, [sp, #32]
  41db30:	csel	x1, x1, x0, ne  // ne = any
  41db34:	stp	x25, x26, [sp, #64]
  41db38:	mov	x25, x2
  41db3c:	stp	x27, x28, [sp, #80]
  41db40:	ldrb	w2, [x1, #137]
  41db44:	orr	w2, w2, #0x2
  41db48:	strb	w2, [x1, #137]
  41db4c:	ldrb	w1, [x0, #137]
  41db50:	and	w2, w1, #0x60
  41db54:	cmp	w2, #0x40
  41db58:	b.eq	41dbfc <notice_finished_file@@Base+0x13e0>  // b.none
  41db5c:	mov	w1, w23
  41db60:	bl	41cc24 <notice_finished_file@@Base+0x408>
  41db64:	mov	w22, w0
  41db68:	mov	x0, x19
  41db6c:	mov	x21, x0
  41db70:	ldr	x0, [x0, #72]
  41db74:	cbnz	x0, 41db6c <notice_finished_file@@Base+0x1350>
  41db78:	ldr	x0, [x21, #112]
  41db7c:	cbnz	x0, 41db8c <notice_finished_file@@Base+0x1370>
  41db80:	mov	x0, x21
  41db84:	mov	w1, #0x1                   	// #1
  41db88:	bl	41c170 <f_mtime@@Base>
  41db8c:	mov	x20, x21
  41db90:	ldr	x21, [x21, #72]
  41db94:	cbnz	x21, 41db8c <notice_finished_file@@Base+0x1370>
  41db98:	cmp	x0, #0x1
  41db9c:	ccmp	x0, x25, #0x2, ne  // ne = any
  41dba0:	b.ls	41dbac <notice_finished_file@@Base+0x1390>  // b.plast
  41dba4:	mov	w0, #0x1                   	// #1
  41dba8:	str	w0, [x24]
  41dbac:	ldr	x0, [x20, #104]
  41dbb0:	cmp	x0, #0x0
  41dbb4:	csel	x0, x0, x20, ne  // ne = any
  41dbb8:	ldrb	w1, [x0, #137]
  41dbbc:	and	w1, w1, #0xfffffffd
  41dbc0:	strb	w1, [x0, #137]
  41dbc4:	ldr	x0, [x19, #104]
  41dbc8:	cmp	x0, #0x0
  41dbcc:	csel	x19, x19, x0, eq  // eq = none
  41dbd0:	ldrb	w0, [x19, #137]
  41dbd4:	and	w0, w0, #0xfffffffd
  41dbd8:	strb	w0, [x19, #137]
  41dbdc:	mov	w0, w22
  41dbe0:	ldp	x19, x20, [sp, #16]
  41dbe4:	ldp	x21, x22, [sp, #32]
  41dbe8:	ldp	x23, x24, [sp, #48]
  41dbec:	ldp	x25, x26, [sp, #64]
  41dbf0:	ldp	x27, x28, [sp, #80]
  41dbf4:	ldp	x29, x30, [sp], #144
  41dbf8:	ret
  41dbfc:	tbnz	w1, #5, 41dcb4 <notice_finished_file@@Base+0x1498>
  41dc00:	ldr	x2, [x0, #32]
  41dc04:	cbnz	x2, 41dc14 <notice_finished_file@@Base+0x13f8>
  41dc08:	tbz	w1, #0, 41dc60 <notice_finished_file@@Base+0x1444>
  41dc0c:	ldrb	w0, [x19, #137]
  41dc10:	tbz	w0, #3, 41dce0 <notice_finished_file@@Base+0x14c4>
  41dc14:	mov	x0, x19
  41dc18:	mov	x26, x0
  41dc1c:	ldr	x0, [x0, #72]
  41dc20:	cbnz	x0, 41dc18 <notice_finished_file@@Base+0x13fc>
  41dc24:	ldr	x0, [x26, #112]
  41dc28:	cbnz	x0, 41dc38 <notice_finished_file@@Base+0x141c>
  41dc2c:	mov	x0, x26
  41dc30:	mov	w1, #0x1                   	// #1
  41dc34:	bl	41c170 <f_mtime@@Base>
  41dc38:	mov	x20, x26
  41dc3c:	ldr	x26, [x26, #72]
  41dc40:	cbnz	x26, 41dc38 <notice_finished_file@@Base+0x141c>
  41dc44:	cmp	x0, #0x1
  41dc48:	ccmp	x0, x25, #0x0, ne  // ne = any
  41dc4c:	b.ls	41dd44 <notice_finished_file@@Base+0x1528>  // b.plast
  41dc50:	mov	w0, #0x1                   	// #1
  41dc54:	mov	w22, #0x0                   	// #0
  41dc58:	str	w0, [x24]
  41dc5c:	b	41dbac <notice_finished_file@@Base+0x1390>
  41dc60:	mov	w1, w23
  41dc64:	bl	412340 <try_implicit_rule@@Base>
  41dc68:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41dc6c:	cbz	w0, 41dcc0 <notice_finished_file@@Base+0x14a4>
  41dc70:	ldr	w0, [x1, #1104]
  41dc74:	tbz	w0, #3, 41dca8 <notice_finished_file@@Base+0x148c>
  41dc78:	mov	w0, w23
  41dc7c:	bl	416a20 <print_spaces@@Base>
  41dc80:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41dc84:	add	x1, x1, #0x798
  41dc88:	mov	w2, #0x5                   	// #5
  41dc8c:	mov	x0, #0x0                   	// #0
  41dc90:	bl	406d60 <dcgettext@plt>
  41dc94:	ldr	x1, [x19]
  41dc98:	bl	406df0 <printf@plt>
  41dc9c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41dca0:	ldr	x0, [x0, #400]
  41dca4:	bl	406cb0 <fflush@plt>
  41dca8:	ldrb	w0, [x19, #137]
  41dcac:	orr	w0, w0, #0x1
  41dcb0:	strb	w0, [x19, #137]
  41dcb4:	ldr	x0, [x19, #32]
  41dcb8:	cbnz	x0, 41dc14 <notice_finished_file@@Base+0x13f8>
  41dcbc:	b	41dc0c <notice_finished_file@@Base+0x13f0>
  41dcc0:	ldr	w0, [x1, #1104]
  41dcc4:	tbz	w0, #3, 41dca8 <notice_finished_file@@Base+0x148c>
  41dcc8:	mov	w0, w23
  41dccc:	bl	416a20 <print_spaces@@Base>
  41dcd0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41dcd4:	mov	w2, #0x5                   	// #5
  41dcd8:	add	x1, x1, #0x7ba
  41dcdc:	b	41dc8c <notice_finished_file@@Base+0x1470>
  41dce0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41dce4:	mov	x20, x0
  41dce8:	ldr	x1, [x0, #2032]
  41dcec:	cbz	x1, 41dc14 <notice_finished_file@@Base+0x13f8>
  41dcf0:	ldr	x0, [x1, #32]
  41dcf4:	cbz	x0, 41dc14 <notice_finished_file@@Base+0x13f8>
  41dcf8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41dcfc:	ldr	w0, [x0, #1104]
  41dd00:	tbz	w0, #3, 41dd34 <notice_finished_file@@Base+0x1518>
  41dd04:	mov	w0, w23
  41dd08:	bl	416a20 <print_spaces@@Base>
  41dd0c:	mov	w2, #0x5                   	// #5
  41dd10:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41dd14:	mov	x0, #0x0                   	// #0
  41dd18:	add	x1, x1, #0xb21
  41dd1c:	bl	406d60 <dcgettext@plt>
  41dd20:	ldr	x1, [x19]
  41dd24:	bl	406df0 <printf@plt>
  41dd28:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41dd2c:	ldr	x0, [x0, #400]
  41dd30:	bl	406cb0 <fflush@plt>
  41dd34:	ldr	x0, [x20, #2032]
  41dd38:	ldr	x0, [x0, #32]
  41dd3c:	str	x0, [x19, #32]
  41dd40:	b	41dc14 <notice_finished_file@@Base+0x13f8>
  41dd44:	ldrb	w0, [x20, #136]
  41dd48:	and	w0, w0, #0xc
  41dd4c:	cmp	w0, #0x8
  41dd50:	b.eq	41dd6c <notice_finished_file@@Base+0x1550>  // b.none
  41dd54:	cmp	w0, #0x4
  41dd58:	b.ne	41dd60 <notice_finished_file@@Base+0x1544>  // b.any
  41dd5c:	str	wzr, [x20, #128]
  41dd60:	mov	x0, x20
  41dd64:	mov	w1, #0x0                   	// #0
  41dd68:	bl	40cea0 <set_command_state@@Base>
  41dd6c:	ldr	x21, [x20, #24]
  41dd70:	adrp	x27, 441000 <commands_started@@Base+0x1c0>
  41dd74:	adrp	x28, 427000 <_IO_stdin_used@@Base+0x4720>
  41dd78:	add	x27, x27, #0x7cc
  41dd7c:	add	x28, x28, #0x7fc
  41dd80:	mov	w22, #0x0                   	// #0
  41dd84:	str	wzr, [sp, #108]
  41dd88:	cbnz	x21, 41dda4 <notice_finished_file@@Base+0x1588>
  41dd8c:	ldr	w0, [sp, #108]
  41dd90:	cbz	w0, 41dbac <notice_finished_file@@Base+0x1390>
  41dd94:	mov	x0, x20
  41dd98:	mov	w1, #0x1                   	// #1
  41dd9c:	bl	40cea0 <set_command_state@@Base>
  41dda0:	b	41dbac <notice_finished_file@@Base+0x1390>
  41dda4:	ldr	x4, [x21, #16]
  41dda8:	ldr	x0, [x4, #104]
  41ddac:	cmp	x0, #0x0
  41ddb0:	csel	x0, x0, x4, ne  // ne = any
  41ddb4:	ldrb	w0, [x0, #137]
  41ddb8:	tbz	w0, #1, 41de50 <notice_finished_file@@Base+0x1634>
  41ddbc:	ldr	x0, [x20]
  41ddc0:	str	x4, [sp, #112]
  41ddc4:	bl	406700 <strlen@plt>
  41ddc8:	mov	x7, x0
  41ddcc:	ldr	x4, [sp, #112]
  41ddd0:	str	x7, [sp, #120]
  41ddd4:	ldr	x0, [x4]
  41ddd8:	bl	406700 <strlen@plt>
  41dddc:	mov	x6, x0
  41dde0:	mov	x1, x28
  41dde4:	mov	w2, #0x5                   	// #5
  41dde8:	mov	x0, #0x0                   	// #0
  41ddec:	str	x6, [sp, #112]
  41ddf0:	bl	406d60 <dcgettext@plt>
  41ddf4:	mov	x2, x0
  41ddf8:	ldr	x1, [x21, #16]
  41ddfc:	mov	x0, #0x0                   	// #0
  41de00:	ldp	x6, x7, [sp, #112]
  41de04:	ldr	x4, [x1]
  41de08:	ldr	x3, [x20]
  41de0c:	add	x1, x7, x6
  41de10:	bl	417aa8 <error@@Base>
  41de14:	ldr	x0, [x21]
  41de18:	cbnz	x26, 41de3c <notice_finished_file@@Base+0x1620>
  41de1c:	str	x0, [x20, #24]
  41de20:	mov	x0, x21
  41de24:	bl	406c20 <free@plt>
  41de28:	ldr	x0, [x20, #24]
  41de2c:	mov	x21, x26
  41de30:	mov	x26, x21
  41de34:	mov	x21, x0
  41de38:	b	41dd88 <notice_finished_file@@Base+0x156c>
  41de3c:	str	x0, [x26]
  41de40:	mov	x0, x21
  41de44:	bl	406c20 <free@plt>
  41de48:	ldr	x0, [x26]
  41de4c:	b	41de2c <notice_finished_file@@Base+0x1610>
  41de50:	ldr	w0, [x24]
  41de54:	add	x3, sp, #0x8c
  41de58:	str	x20, [x4, #96]
  41de5c:	mov	x2, x25
  41de60:	mov	w1, w23
  41de64:	str	w0, [sp, #140]
  41de68:	mov	x0, x4
  41de6c:	bl	41db08 <notice_finished_file@@Base+0x12ec>
  41de70:	cmp	w22, w0
  41de74:	csel	w22, w22, w0, cs  // cs = hs, nlast
  41de78:	ldrb	w0, [x21, #33]
  41de7c:	tbnz	w0, #1, 41de88 <notice_finished_file@@Base+0x166c>
  41de80:	ldr	w0, [sp, #140]
  41de84:	str	w0, [x24]
  41de88:	ldr	x0, [x21, #16]
  41de8c:	ldr	x1, [x0, #72]
  41de90:	cbnz	x1, 41dec4 <notice_finished_file@@Base+0x16a8>
  41de94:	cbz	w22, 41dea0 <notice_finished_file@@Base+0x1684>
  41de98:	ldr	w1, [x27]
  41de9c:	cbz	w1, 41dd8c <notice_finished_file@@Base+0x1570>
  41dea0:	ldrb	w0, [x0, #136]
  41dea4:	and	w0, w0, #0xc
  41dea8:	cmp	w0, #0x8
  41deac:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  41deb0:	ldr	w0, [sp, #108]
  41deb4:	csinc	w0, w0, wzr, ne  // ne = any
  41deb8:	str	w0, [sp, #108]
  41debc:	ldr	x0, [x21]
  41dec0:	b	41de30 <notice_finished_file@@Base+0x1614>
  41dec4:	str	x1, [x21, #16]
  41dec8:	b	41de88 <notice_finished_file@@Base+0x166c>

000000000041decc <update_goal_chain@@Base>:
  41decc:	stp	x29, x30, [sp, #-144]!
  41ded0:	mov	x29, sp
  41ded4:	stp	x19, x20, [sp, #16]
  41ded8:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  41dedc:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  41dee0:	ldr	w1, [x19, #2196]
  41dee4:	stp	x23, x24, [sp, #48]
  41dee8:	adrp	x24, 441000 <commands_started@@Base+0x1c0>
  41deec:	str	w1, [sp, #96]
  41def0:	ldr	w1, [x20, #3412]
  41def4:	str	w1, [sp, #100]
  41def8:	ldr	w1, [x24, #1992]
  41defc:	stp	x21, x22, [sp, #32]
  41df00:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  41df04:	mov	x21, x0
  41df08:	stp	x25, x26, [sp, #64]
  41df0c:	stp	x27, x28, [sp, #80]
  41df10:	str	w1, [sp, #136]
  41df14:	bl	416e28 <copy_dep_chain@@Base>
  41df18:	str	x19, [sp, #120]
  41df1c:	adrp	x19, 440000 <output_context@@Base+0x1248>
  41df20:	add	x19, x19, #0xe08
  41df24:	mov	x23, x0
  41df28:	ldr	w0, [x22, #3392]
  41df2c:	str	x24, [sp, #104]
  41df30:	cmp	w0, #0x0
  41df34:	ldr	w0, [x19, #60]
  41df38:	csel	x21, x21, xzr, ne  // ne = any
  41df3c:	str	x21, [x19, #8]
  41df40:	add	w0, w0, #0x1
  41df44:	mov	w21, #0x1                   	// #1
  41df48:	str	w0, [x19, #60]
  41df4c:	cbnz	x23, 41df98 <update_goal_chain@@Base+0xcc>
  41df50:	ldr	w0, [x22, #3392]
  41df54:	cbz	w0, 41df78 <update_goal_chain@@Base+0xac>
  41df58:	ldr	x0, [sp, #120]
  41df5c:	ldr	w1, [sp, #96]
  41df60:	str	w1, [x0, #2196]
  41df64:	ldr	w0, [sp, #100]
  41df68:	str	w0, [x20, #3412]
  41df6c:	ldr	x0, [sp, #104]
  41df70:	ldr	w1, [sp, #136]
  41df74:	str	w1, [x0, #1992]
  41df78:	mov	w0, w21
  41df7c:	ldp	x19, x20, [sp, #16]
  41df80:	ldp	x21, x22, [sp, #32]
  41df84:	ldp	x23, x24, [sp, #48]
  41df88:	ldp	x25, x26, [sp, #64]
  41df8c:	ldp	x27, x28, [sp, #80]
  41df90:	ldp	x29, x30, [sp], #144
  41df94:	ret
  41df98:	bl	41473c <start_waiting_jobs@@Base>
  41df9c:	mov	x24, x23
  41dfa0:	mov	w0, #0x1                   	// #1
  41dfa4:	mov	w1, #0x0                   	// #0
  41dfa8:	bl	413a9c <reap_children@@Base>
  41dfac:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  41dfb0:	mov	x25, #0x0                   	// #0
  41dfb4:	add	x0, x27, #0xd54
  41dfb8:	str	x0, [sp, #112]
  41dfbc:	ldr	x1, [x24, #16]
  41dfc0:	add	x27, x22, #0xd40
  41dfc4:	mov	w26, #0x0                   	// #0
  41dfc8:	str	x24, [x19]
  41dfcc:	ldr	x0, [x1, #104]
  41dfd0:	cmp	x0, #0x0
  41dfd4:	csel	x0, x0, x1, ne  // ne = any
  41dfd8:	ldrb	w1, [x24, #32]
  41dfdc:	ldrb	w2, [x0, #138]
  41dfe0:	ubfx	x1, x1, #2, #1
  41dfe4:	bfxil	w2, w1, #0, #1
  41dfe8:	strb	w2, [x0, #138]
  41dfec:	mov	x2, x0
  41dff0:	ldr	x0, [x0, #72]
  41dff4:	cbnz	x0, 41dfec <update_goal_chain@@Base+0x120>
  41dff8:	ldr	w0, [x27]
  41dffc:	cbz	w0, 41e030 <update_goal_chain@@Base+0x164>
  41e000:	ldrb	w5, [x2, #137]
  41e004:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  41e008:	tbz	w5, #4, 41e18c <update_goal_chain@@Base+0x2c0>
  41e00c:	adrp	x3, 441000 <commands_started@@Base+0x1c0>
  41e010:	add	x3, x3, #0x894
  41e014:	ldr	w4, [sp, #96]
  41e018:	str	w4, [x3]
  41e01c:	ldr	x3, [sp, #112]
  41e020:	ldr	w4, [sp, #100]
  41e024:	str	w4, [x3]
  41e028:	ldr	w3, [sp, #136]
  41e02c:	str	w3, [x1, #1992]
  41e030:	ldr	w5, [x19, #56]
  41e034:	cmp	w0, #0x0
  41e038:	cset	w1, ne  // ne = any
  41e03c:	mov	x0, x2
  41e040:	str	x2, [sp, #128]
  41e044:	str	w5, [sp, #140]
  41e048:	bl	41cc24 <notice_finished_file@@Base+0x408>
  41e04c:	ldr	w5, [sp, #140]
  41e050:	ldr	x2, [sp, #128]
  41e054:	mov	x28, x2
  41e058:	ldr	x2, [x2, #72]
  41e05c:	cbnz	x2, 41e054 <update_goal_chain@@Base+0x188>
  41e060:	ldr	w1, [x19, #56]
  41e064:	cmp	w1, w5
  41e068:	b.ls	41e078 <update_goal_chain@@Base+0x1ac>  // b.plast
  41e06c:	ldrb	w1, [x24, #33]
  41e070:	orr	w1, w1, #0x1
  41e074:	strb	w1, [x24, #33]
  41e078:	cbnz	w0, 41e084 <update_goal_chain@@Base+0x1b8>
  41e07c:	ldrb	w0, [x28, #137]
  41e080:	tbz	w0, #2, 41e228 <update_goal_chain@@Base+0x35c>
  41e084:	cmp	w21, #0x1
  41e088:	b.hi	41e228 <update_goal_chain@@Base+0x35c>  // b.pmore
  41e08c:	ldrb	w0, [x28, #136]
  41e090:	tst	x0, #0x3
  41e094:	b.eq	41e1a8 <update_goal_chain@@Base+0x2dc>  // b.none
  41e098:	and	w21, w0, #0x3
  41e09c:	ldr	w0, [x20, #3412]
  41e0a0:	cbz	w0, 41e0bc <update_goal_chain@@Base+0x1f0>
  41e0a4:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e0a8:	ldr	w1, [x27]
  41e0ac:	ldr	w0, [x0, #1996]
  41e0b0:	orr	w0, w0, w1
  41e0b4:	cmp	w0, #0x0
  41e0b8:	cset	w0, eq  // eq = none
  41e0bc:	ldrb	w1, [x28, #137]
  41e0c0:	eor	x1, x1, #0x4
  41e0c4:	ubfx	x1, x1, #2, #1
  41e0c8:	orr	w26, w26, w1
  41e0cc:	ldrb	w1, [x28, #138]
  41e0d0:	and	w1, w1, #0xfffffffe
  41e0d4:	strb	w1, [x28, #138]
  41e0d8:	cbnz	w0, 41e238 <update_goal_chain@@Base+0x36c>
  41e0dc:	ldr	x0, [x28, #56]
  41e0e0:	cbnz	x0, 41dfd8 <update_goal_chain@@Base+0x10c>
  41e0e4:	cmp	w26, #0x1
  41e0e8:	b.eq	41e25c <update_goal_chain@@Base+0x390>  // b.none
  41e0ec:	ldr	w0, [x22, #3392]
  41e0f0:	cbnz	w0, 41e164 <update_goal_chain@@Base+0x298>
  41e0f4:	ldr	x28, [x24, #16]
  41e0f8:	ldrb	w0, [x28, #136]
  41e0fc:	tst	x0, #0x3
  41e100:	b.ne	41e164 <update_goal_chain@@Base+0x298>  // b.any
  41e104:	ldrb	w0, [x24, #33]
  41e108:	tbnz	w0, #0, 41e164 <update_goal_chain@@Base+0x298>
  41e10c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41e110:	ldr	w1, [x20, #3412]
  41e114:	ldr	w0, [x0, #3308]
  41e118:	orr	w0, w0, w1
  41e11c:	cbnz	w0, 41e164 <update_goal_chain@@Base+0x298>
  41e120:	ldr	x0, [x28]
  41e124:	bl	406700 <strlen@plt>
  41e128:	mov	x27, x0
  41e12c:	ldrb	w0, [x28, #137]
  41e130:	mov	w2, #0x5                   	// #5
  41e134:	tbnz	w0, #5, 41e140 <update_goal_chain@@Base+0x274>
  41e138:	ldr	x0, [x28, #32]
  41e13c:	cbnz	x0, 41e240 <update_goal_chain@@Base+0x374>
  41e140:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41e144:	add	x1, x1, #0xb43
  41e148:	mov	x0, #0x0                   	// #0
  41e14c:	bl	406d60 <dcgettext@plt>
  41e150:	ldr	x3, [x28]
  41e154:	mov	x2, x0
  41e158:	mov	x1, x27
  41e15c:	mov	w0, #0x1                   	// #1
  41e160:	bl	417984 <message@@Base>
  41e164:	ldr	x0, [x24]
  41e168:	cbnz	x25, 41e24c <update_goal_chain@@Base+0x380>
  41e16c:	mov	x23, x0
  41e170:	mov	x0, x24
  41e174:	bl	406c20 <free@plt>
  41e178:	cbz	x25, 41e254 <update_goal_chain@@Base+0x388>
  41e17c:	ldr	x24, [x25]
  41e180:	cbz	w26, 41e264 <update_goal_chain@@Base+0x398>
  41e184:	cbnz	x24, 41df4c <update_goal_chain@@Base+0x80>
  41e188:	b	41e268 <update_goal_chain@@Base+0x39c>
  41e18c:	str	wzr, [x1, #1992]
  41e190:	ldr	x1, [sp, #112]
  41e194:	str	wzr, [x1]
  41e198:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  41e19c:	add	x1, x1, #0x894
  41e1a0:	str	wzr, [x1]
  41e1a4:	b	41e030 <update_goal_chain@@Base+0x164>
  41e1a8:	ldr	w1, [x27]
  41e1ac:	ldr	x0, [x28, #112]
  41e1b0:	cbz	w1, 41e21c <update_goal_chain@@Base+0x350>
  41e1b4:	cbnz	x0, 41e1c4 <update_goal_chain@@Base+0x2f8>
  41e1b8:	mov	w1, #0x0                   	// #0
  41e1bc:	mov	x0, x28
  41e1c0:	bl	41c170 <f_mtime@@Base>
  41e1c4:	mov	x1, x28
  41e1c8:	mov	x28, x1
  41e1cc:	ldr	x1, [x1, #72]
  41e1d0:	cbnz	x1, 41e1c8 <update_goal_chain@@Base+0x2fc>
  41e1d4:	ldrb	w1, [x28, #137]
  41e1d8:	tbz	w1, #2, 41e228 <update_goal_chain@@Base+0x35c>
  41e1dc:	ldrb	w1, [x24, #33]
  41e1e0:	tbz	w1, #0, 41e228 <update_goal_chain@@Base+0x35c>
  41e1e4:	ldr	x1, [x28, #120]
  41e1e8:	cmp	x1, x0
  41e1ec:	b.eq	41e228 <update_goal_chain@@Base+0x35c>  // b.none
  41e1f0:	ldr	w0, [x27]
  41e1f4:	cbz	w0, 41e230 <update_goal_chain@@Base+0x364>
  41e1f8:	ldr	x0, [sp, #104]
  41e1fc:	ldr	w1, [x20, #3412]
  41e200:	ldr	w0, [x0, #1992]
  41e204:	orr	w0, w0, w1
  41e208:	cmp	w0, #0x0
  41e20c:	ldrb	w0, [x28, #138]
  41e210:	csel	w21, w21, wzr, ne  // ne = any
  41e214:	and	w0, w0, #0x1
  41e218:	b	41e0bc <update_goal_chain@@Base+0x1f0>
  41e21c:	cbnz	x0, 41e1c4 <update_goal_chain@@Base+0x2f8>
  41e220:	mov	w1, #0x1                   	// #1
  41e224:	b	41e1bc <update_goal_chain@@Base+0x2f0>
  41e228:	mov	w0, #0x0                   	// #0
  41e22c:	b	41e0bc <update_goal_chain@@Base+0x1f0>
  41e230:	mov	w21, #0x0                   	// #0
  41e234:	b	41e0bc <update_goal_chain@@Base+0x1f0>
  41e238:	mov	w26, w0
  41e23c:	b	41e0ec <update_goal_chain@@Base+0x220>
  41e240:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41e244:	add	x1, x1, #0xb60
  41e248:	b	41e148 <update_goal_chain@@Base+0x27c>
  41e24c:	str	x0, [x25]
  41e250:	b	41e170 <update_goal_chain@@Base+0x2a4>
  41e254:	mov	x24, x23
  41e258:	b	41e180 <update_goal_chain@@Base+0x2b4>
  41e25c:	mov	x25, x24
  41e260:	ldr	x24, [x24]
  41e264:	cbnz	x24, 41dfbc <update_goal_chain@@Base+0xf0>
  41e268:	ldr	w0, [x19, #60]
  41e26c:	add	w0, w0, #0x1
  41e270:	str	w0, [x19, #60]
  41e274:	b	41df4c <update_goal_chain@@Base+0x80>
  41e278:	stp	x29, x30, [sp, #-48]!
  41e27c:	mov	x29, sp
  41e280:	stp	x19, x20, [sp, #16]
  41e284:	mov	x19, x0
  41e288:	mov	x20, x1
  41e28c:	str	x21, [sp, #32]
  41e290:	ldr	x21, [x0]
  41e294:	ldr	x0, [x0, #32]
  41e298:	bl	416eb0 <free_ns_chain@@Base>
  41e29c:	ldr	x0, [x19, #8]
  41e2a0:	bl	406c20 <free@plt>
  41e2a4:	ldr	x0, [x19, #24]
  41e2a8:	bl	406c20 <free@plt>
  41e2ac:	ldr	x0, [x19, #16]
  41e2b0:	bl	406c20 <free@plt>
  41e2b4:	mov	x0, x19
  41e2b8:	bl	406c20 <free@plt>
  41e2bc:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e2c0:	ldr	x1, [x0, #2216]
  41e2c4:	cmp	x1, x19
  41e2c8:	b.ne	41e2fc <update_goal_chain@@Base+0x430>  // b.any
  41e2cc:	cbz	x20, 41e2d4 <update_goal_chain@@Base+0x408>
  41e2d0:	bl	406b50 <abort@plt>
  41e2d4:	str	x21, [x0, #2216]
  41e2d8:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e2dc:	ldr	x1, [x0, #2240]
  41e2e0:	cmp	x1, x19
  41e2e4:	b.ne	41e2ec <update_goal_chain@@Base+0x420>  // b.any
  41e2e8:	str	x20, [x0, #2240]
  41e2ec:	ldp	x19, x20, [sp, #16]
  41e2f0:	ldr	x21, [sp, #32]
  41e2f4:	ldp	x29, x30, [sp], #48
  41e2f8:	ret
  41e2fc:	cbz	x20, 41e2d8 <update_goal_chain@@Base+0x40c>
  41e300:	str	x21, [x20]
  41e304:	b	41e2d8 <update_goal_chain@@Base+0x40c>
  41e308:	stp	x29, x30, [sp, #-112]!
  41e30c:	mov	x29, sp
  41e310:	stp	x21, x22, [sp, #32]
  41e314:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  41e318:	mov	w21, w1
  41e31c:	stp	x23, x24, [sp, #48]
  41e320:	mov	x24, #0x0                   	// #0
  41e324:	ldr	x23, [x22, #2216]
  41e328:	stp	x19, x20, [sp, #16]
  41e32c:	mov	x19, x0
  41e330:	stp	x25, x26, [sp, #64]
  41e334:	mov	x26, x23
  41e338:	stp	x27, x28, [sp, #80]
  41e33c:	str	xzr, [x0]
  41e340:	strh	wzr, [x0, #50]
  41e344:	cbz	x26, 41e4d0 <update_goal_chain@@Base+0x604>
  41e348:	ldrh	w25, [x19, #48]
  41e34c:	mov	x28, #0x0                   	// #0
  41e350:	b	41e4ac <update_goal_chain@@Base+0x5e0>
  41e354:	ldr	x0, [x19, #8]
  41e358:	ldr	x1, [x26, #8]
  41e35c:	ldr	x0, [x0, x3]
  41e360:	ldr	x1, [x1, x20, lsl #3]
  41e364:	cmp	x0, x1
  41e368:	b.eq	41e398 <update_goal_chain@@Base+0x4cc>  // b.none
  41e36c:	ldrb	w4, [x0]
  41e370:	ldrb	w2, [x1]
  41e374:	cmp	w2, w4
  41e378:	b.ne	41e4a8 <update_goal_chain@@Base+0x5dc>  // b.any
  41e37c:	cbz	w2, 41e398 <update_goal_chain@@Base+0x4cc>
  41e380:	add	x1, x1, #0x1
  41e384:	add	x0, x0, #0x1
  41e388:	str	x3, [sp, #104]
  41e38c:	bl	406be0 <strcmp@plt>
  41e390:	ldr	x3, [sp, #104]
  41e394:	cbnz	w0, 41e4a8 <update_goal_chain@@Base+0x5dc>
  41e398:	add	x20, x20, #0x1
  41e39c:	cmp	w20, w27
  41e3a0:	b.cc	41e354 <update_goal_chain@@Base+0x488>  // b.lo, b.ul, b.last
  41e3a4:	cmp	w20, w27
  41e3a8:	b.ne	41e4a8 <update_goal_chain@@Base+0x5dc>  // b.any
  41e3ac:	ldr	x20, [x19, #32]
  41e3b0:	ldr	x27, [x26, #32]
  41e3b4:	cmp	x20, #0x0
  41e3b8:	ccmp	x27, #0x0, #0x4, ne  // ne = any
  41e3bc:	b.ne	41e410 <update_goal_chain@@Base+0x544>  // b.any
  41e3c0:	orr	x20, x20, x27
  41e3c4:	cbnz	x20, 41e4a8 <update_goal_chain@@Base+0x5dc>
  41e3c8:	cbz	w21, 41e498 <update_goal_chain@@Base+0x5cc>
  41e3cc:	mov	x0, x26
  41e3d0:	mov	x1, x24
  41e3d4:	bl	41e278 <update_goal_chain@@Base+0x3ac>
  41e3d8:	ldr	x0, [x22, #2216]
  41e3dc:	cbnz	x0, 41e4d4 <update_goal_chain@@Base+0x608>
  41e3e0:	str	x19, [x22, #2216]
  41e3e4:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e3e8:	mov	w21, #0x1                   	// #1
  41e3ec:	str	x19, [x0, #2240]
  41e3f0:	mov	w0, w21
  41e3f4:	ldp	x19, x20, [sp, #16]
  41e3f8:	ldp	x21, x22, [sp, #32]
  41e3fc:	ldp	x23, x24, [sp, #48]
  41e400:	ldp	x25, x26, [sp, #64]
  41e404:	ldp	x27, x28, [sp, #80]
  41e408:	ldp	x29, x30, [sp], #112
  41e40c:	ret
  41e410:	ldr	x0, [x20, #8]
  41e414:	cbnz	x0, 41e470 <update_goal_chain@@Base+0x5a4>
  41e418:	ldr	x1, [x20, #16]
  41e41c:	ldr	x3, [x1]
  41e420:	ldr	x1, [x27, #8]
  41e424:	cbnz	x1, 41e478 <update_goal_chain@@Base+0x5ac>
  41e428:	ldr	x2, [x27, #16]
  41e42c:	ldr	x2, [x2]
  41e430:	cmp	x3, x2
  41e434:	b.eq	41e464 <update_goal_chain@@Base+0x598>  // b.none
  41e438:	ldrb	w3, [x3]
  41e43c:	ldrb	w2, [x2]
  41e440:	cmp	w2, w3
  41e444:	b.ne	41e4a8 <update_goal_chain@@Base+0x5dc>  // b.any
  41e448:	cbz	w2, 41e464 <update_goal_chain@@Base+0x598>
  41e44c:	cbz	x0, 41e480 <update_goal_chain@@Base+0x5b4>
  41e450:	add	x0, x0, #0x1
  41e454:	cbz	x1, 41e48c <update_goal_chain@@Base+0x5c0>
  41e458:	add	x1, x1, #0x1
  41e45c:	bl	406be0 <strcmp@plt>
  41e460:	cbnz	w0, 41e4a8 <update_goal_chain@@Base+0x5dc>
  41e464:	ldr	x20, [x20]
  41e468:	ldr	x27, [x27]
  41e46c:	b	41e3b4 <update_goal_chain@@Base+0x4e8>
  41e470:	mov	x3, x0
  41e474:	b	41e420 <update_goal_chain@@Base+0x554>
  41e478:	mov	x2, x1
  41e47c:	b	41e430 <update_goal_chain@@Base+0x564>
  41e480:	ldr	x0, [x20, #16]
  41e484:	ldr	x0, [x0]
  41e488:	b	41e450 <update_goal_chain@@Base+0x584>
  41e48c:	ldr	x1, [x27, #16]
  41e490:	ldr	x1, [x1]
  41e494:	b	41e458 <update_goal_chain@@Base+0x58c>
  41e498:	mov	x0, x19
  41e49c:	mov	x1, #0x0                   	// #0
  41e4a0:	bl	41e278 <update_goal_chain@@Base+0x3ac>
  41e4a4:	b	41e3f0 <update_goal_chain@@Base+0x524>
  41e4a8:	add	x28, x28, #0x1
  41e4ac:	cmp	w25, w28
  41e4b0:	b.ls	41e4c4 <update_goal_chain@@Base+0x5f8>  // b.plast
  41e4b4:	ldrh	w27, [x26, #48]
  41e4b8:	lsl	x3, x28, #3
  41e4bc:	mov	x20, #0x0                   	// #0
  41e4c0:	b	41e39c <update_goal_chain@@Base+0x4d0>
  41e4c4:	mov	x24, x26
  41e4c8:	ldr	x26, [x26]
  41e4cc:	b	41e344 <update_goal_chain@@Base+0x478>
  41e4d0:	cbz	x23, 41e3e0 <update_goal_chain@@Base+0x514>
  41e4d4:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e4d8:	ldr	x0, [x0, #2240]
  41e4dc:	str	x19, [x0]
  41e4e0:	b	41e3e4 <update_goal_chain@@Base+0x518>

000000000041e4e4 <snap_implicit_rules@@Base>:
  41e4e4:	stp	x29, x30, [sp, #-144]!
  41e4e8:	mov	x1, #0xe                   	// #14
  41e4ec:	adrp	x0, 423000 <_IO_stdin_used@@Base+0x720>
  41e4f0:	mov	x29, sp
  41e4f4:	stp	x21, x22, [sp, #32]
  41e4f8:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  41e4fc:	add	x0, x0, #0xcc3
  41e500:	stp	x19, x20, [sp, #16]
  41e504:	stp	x23, x24, [sp, #48]
  41e508:	stp	x25, x26, [sp, #64]
  41e50c:	stp	x27, x28, [sp, #80]
  41e510:	bl	41fcdc <lookup_variable@@Base>
  41e514:	bl	40c988 <expand_extra_prereqs@@Base>
  41e518:	mov	x20, x0
  41e51c:	mov	x19, x0
  41e520:	str	xzr, [x21, #2224]
  41e524:	str	wzr, [sp, #100]
  41e528:	cbnz	x19, 41e588 <snap_implicit_rules@@Base+0xa4>
  41e52c:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  41e530:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41e534:	adrp	x24, 441000 <commands_started@@Base+0x1c0>
  41e538:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  41e53c:	ldr	x22, [x0, #2216]
  41e540:	str	wzr, [x23, #2236]
  41e544:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41e548:	str	wzr, [x24, #2232]
  41e54c:	add	x0, x0, #0x819
  41e550:	str	wzr, [x25, #2248]
  41e554:	str	xzr, [sp, #104]
  41e558:	stp	x23, x0, [sp, #120]
  41e55c:	cbnz	x22, 41e5c0 <snap_implicit_rules@@Base+0xdc>
  41e560:	mov	x0, x19
  41e564:	bl	406c20 <free@plt>
  41e568:	mov	x0, x20
  41e56c:	ldp	x19, x20, [sp, #16]
  41e570:	ldp	x21, x22, [sp, #32]
  41e574:	ldp	x23, x24, [sp, #48]
  41e578:	ldp	x25, x26, [sp, #64]
  41e57c:	ldp	x27, x28, [sp, #80]
  41e580:	ldp	x29, x30, [sp], #144
  41e584:	b	416eb0 <free_ns_chain@@Base>
  41e588:	ldr	x0, [x19, #8]
  41e58c:	cbnz	x0, 41e598 <snap_implicit_rules@@Base+0xb4>
  41e590:	ldr	x0, [x19, #16]
  41e594:	ldr	x0, [x0]
  41e598:	bl	406700 <strlen@plt>
  41e59c:	ldr	x1, [x21, #2224]
  41e5a0:	cmp	x1, x0
  41e5a4:	b.cs	41e5ac <snap_implicit_rules@@Base+0xc8>  // b.hs, b.nlast
  41e5a8:	str	x0, [x21, #2224]
  41e5ac:	ldr	w0, [sp, #100]
  41e5b0:	ldr	x19, [x19]
  41e5b4:	add	w0, w0, #0x1
  41e5b8:	str	w0, [sp, #100]
  41e5bc:	b	41e528 <snap_implicit_rules@@Base+0x44>
  41e5c0:	ldr	w0, [x25, #2248]
  41e5c4:	ldr	w1, [x24, #2232]
  41e5c8:	add	w0, w0, #0x1
  41e5cc:	str	w0, [x25, #2248]
  41e5d0:	ldrh	w0, [x22, #48]
  41e5d4:	cmp	w0, w1
  41e5d8:	b.ls	41e5e0 <snap_implicit_rules@@Base+0xfc>  // b.plast
  41e5dc:	str	w0, [x24, #2232]
  41e5e0:	ldr	w26, [sp, #100]
  41e5e4:	mov	x27, #0x0                   	// #0
  41e5e8:	ldr	x28, [x22, #32]
  41e5ec:	cbnz	x28, 41e624 <snap_implicit_rules@@Base+0x140>
  41e5f0:	cbz	x20, 41e604 <snap_implicit_rules@@Base+0x120>
  41e5f4:	mov	x0, x20
  41e5f8:	cbz	x27, 41e714 <snap_implicit_rules@@Base+0x230>
  41e5fc:	bl	416e28 <copy_dep_chain@@Base>
  41e600:	str	x0, [x27]
  41e604:	ldr	x0, [sp, #120]
  41e608:	ldr	w0, [x0, #2236]
  41e60c:	cmp	w0, w26
  41e610:	b.cs	41e61c <snap_implicit_rules@@Base+0x138>  // b.hs, b.nlast
  41e614:	ldr	x0, [sp, #120]
  41e618:	str	w26, [x0, #2236]
  41e61c:	ldr	x22, [x22]
  41e620:	b	41e55c <snap_implicit_rules@@Base+0x78>
  41e624:	ldr	x23, [x28, #8]
  41e628:	cbnz	x23, 41e634 <snap_implicit_rules@@Base+0x150>
  41e62c:	ldr	x0, [x28, #16]
  41e630:	ldr	x23, [x0]
  41e634:	mov	x0, x23
  41e638:	bl	406700 <strlen@plt>
  41e63c:	str	x0, [sp, #112]
  41e640:	mov	w1, #0x2f                  	// #47
  41e644:	mov	x0, x23
  41e648:	bl	406b00 <strrchr@plt>
  41e64c:	mov	x2, x0
  41e650:	cbz	x0, 41e700 <snap_implicit_rules@@Base+0x21c>
  41e654:	mov	w1, #0x25                  	// #37
  41e658:	str	x0, [sp, #136]
  41e65c:	bl	406c40 <strchr@plt>
  41e660:	ldr	x2, [sp, #136]
  41e664:	add	w26, w26, #0x1
  41e668:	ldr	x1, [x21, #2224]
  41e66c:	ldr	x3, [sp, #112]
  41e670:	cmp	x1, x3
  41e674:	b.cs	41e67c <snap_implicit_rules@@Base+0x198>  // b.hs, b.nlast
  41e678:	str	x3, [x21, #2224]
  41e67c:	ldr	x1, [x28]
  41e680:	cmp	x1, #0x0
  41e684:	csel	x27, x27, x28, ne  // ne = any
  41e688:	cbz	x0, 41e708 <snap_implicit_rules@@Base+0x224>
  41e68c:	cmp	x23, x2
  41e690:	b.ne	41e698 <snap_implicit_rules@@Base+0x1b4>  // b.any
  41e694:	add	x2, x23, #0x1
  41e698:	ldr	x0, [sp, #104]
  41e69c:	sub	x2, x2, x23
  41e6a0:	cmp	x2, x0
  41e6a4:	b.ls	41e6c0 <snap_implicit_rules@@Base+0x1dc>  // b.plast
  41e6a8:	add	x1, x2, #0x1
  41e6ac:	mov	x0, x19
  41e6b0:	str	x2, [sp, #104]
  41e6b4:	bl	416aa0 <xrealloc@@Base>
  41e6b8:	ldr	x2, [sp, #104]
  41e6bc:	mov	x19, x0
  41e6c0:	mov	x1, x23
  41e6c4:	mov	x0, x19
  41e6c8:	str	x2, [sp, #112]
  41e6cc:	bl	4066c0 <memcpy@plt>
  41e6d0:	ldr	x2, [sp, #112]
  41e6d4:	mov	x0, x19
  41e6d8:	ldr	x1, [sp, #128]
  41e6dc:	strb	wzr, [x19, x2]
  41e6e0:	bl	40aa7c <dir_file_exists_p@@Base>
  41e6e4:	cmp	w0, #0x0
  41e6e8:	ldrb	w0, [x28, #33]
  41e6ec:	cset	w1, eq  // eq = none
  41e6f0:	bfxil	w0, w1, #0, #1
  41e6f4:	strb	w0, [x28, #33]
  41e6f8:	ldr	x28, [x28]
  41e6fc:	b	41e5ec <snap_implicit_rules@@Base+0x108>
  41e700:	mov	x0, #0x0                   	// #0
  41e704:	b	41e664 <snap_implicit_rules@@Base+0x180>
  41e708:	ldrb	w0, [x28, #33]
  41e70c:	and	w0, w0, #0xfffffffe
  41e710:	b	41e6f4 <snap_implicit_rules@@Base+0x210>
  41e714:	bl	416e28 <copy_dep_chain@@Base>
  41e718:	str	x0, [x22, #32]
  41e71c:	b	41e604 <snap_implicit_rules@@Base+0x120>

000000000041e720 <install_pattern_rule@@Base>:
  41e720:	stp	x29, x30, [sp, #-80]!
  41e724:	mov	x29, sp
  41e728:	stp	x19, x20, [sp, #16]
  41e72c:	stp	x21, x22, [sp, #32]
  41e730:	mov	w22, w1
  41e734:	mov	x21, x0
  41e738:	mov	x0, #0x38                  	// #56
  41e73c:	str	x23, [sp, #48]
  41e740:	bl	416a54 <xmalloc@@Base>
  41e744:	mov	x19, x0
  41e748:	mov	w0, #0x1                   	// #1
  41e74c:	strh	w0, [x19, #48]
  41e750:	mov	x0, #0x8                   	// #8
  41e754:	bl	416a54 <xmalloc@@Base>
  41e758:	str	x0, [x19, #8]
  41e75c:	mov	x0, #0x8                   	// #8
  41e760:	bl	416a54 <xmalloc@@Base>
  41e764:	str	x0, [x19, #24]
  41e768:	mov	x0, #0x4                   	// #4
  41e76c:	bl	416a54 <xmalloc@@Base>
  41e770:	mov	x20, x0
  41e774:	ldr	x23, [x21]
  41e778:	str	x0, [x19, #16]
  41e77c:	mov	x0, x23
  41e780:	bl	406700 <strlen@plt>
  41e784:	str	w0, [x20]
  41e788:	ldr	x0, [x19, #8]
  41e78c:	ldr	x20, [x19, #24]
  41e790:	str	x23, [x0]
  41e794:	bl	418e98 <find_percent_cached@@Base>
  41e798:	ldr	x1, [x19, #24]
  41e79c:	str	x0, [x20]
  41e7a0:	mov	w4, #0x0                   	// #0
  41e7a4:	mov	x3, #0x0                   	// #0
  41e7a8:	mov	w2, #0x1                   	// #1
  41e7ac:	ldr	x0, [x1]
  41e7b0:	add	x0, x0, #0x1
  41e7b4:	str	x0, [x1]
  41e7b8:	mov	x1, #0x28                  	// #40
  41e7bc:	ldr	x0, [x21, #8]
  41e7c0:	str	x0, [sp, #72]
  41e7c4:	add	x0, sp, #0x48
  41e7c8:	bl	419c0c <parse_file_seq@@Base>
  41e7cc:	str	x0, [x19, #32]
  41e7d0:	mov	w1, #0x0                   	// #0
  41e7d4:	mov	x0, x19
  41e7d8:	bl	41e308 <update_goal_chain@@Base+0x43c>
  41e7dc:	cbz	w0, 41e820 <install_pattern_rule@@Base+0x100>
  41e7e0:	cmp	w22, #0x0
  41e7e4:	cset	w0, ne  // ne = any
  41e7e8:	strb	w0, [x19, #50]
  41e7ec:	mov	x0, #0x38                  	// #56
  41e7f0:	bl	416a54 <xmalloc@@Base>
  41e7f4:	mov	x20, x0
  41e7f8:	ldr	x0, [x21, #16]
  41e7fc:	str	x20, [x19, #40]
  41e800:	stp	xzr, xzr, [x20]
  41e804:	str	xzr, [x20, #16]
  41e808:	bl	416c24 <xstrdup@@Base>
  41e80c:	str	x0, [x20, #24]
  41e810:	ldr	x0, [x19, #40]
  41e814:	mov	w1, #0x9                   	// #9
  41e818:	str	xzr, [x0, #32]
  41e81c:	strb	w1, [x0, #50]
  41e820:	ldp	x19, x20, [sp, #16]
  41e824:	ldp	x21, x22, [sp, #32]
  41e828:	ldr	x23, [sp, #48]
  41e82c:	ldp	x29, x30, [sp], #80
  41e830:	ret

000000000041e834 <create_pattern_rule@@Base>:
  41e834:	stp	x29, x30, [sp, #-80]!
  41e838:	mov	x29, sp
  41e83c:	stp	x19, x20, [sp, #16]
  41e840:	mov	x20, x1
  41e844:	stp	x21, x22, [sp, #32]
  41e848:	mov	x21, x4
  41e84c:	mov	x22, x0
  41e850:	mov	x0, #0x38                  	// #56
  41e854:	stp	x23, x24, [sp, #48]
  41e858:	mov	w23, w3
  41e85c:	mov	w24, w6
  41e860:	stp	x25, x26, [sp, #64]
  41e864:	and	w25, w2, #0xffff
  41e868:	mov	x26, x5
  41e86c:	bl	416a54 <xmalloc@@Base>
  41e870:	mov	x19, x0
  41e874:	str	x22, [x0, #8]
  41e878:	stp	x20, x21, [x0, #24]
  41e87c:	mov	x20, #0x0                   	// #0
  41e880:	str	x26, [x0, #40]
  41e884:	strh	w25, [x0, #48]
  41e888:	ubfiz	x0, x25, #2, #16
  41e88c:	bl	416a54 <xmalloc@@Base>
  41e890:	mov	x21, x0
  41e894:	str	x0, [x19, #16]
  41e898:	cmp	w25, w20
  41e89c:	b.hi	41e8d4 <create_pattern_rule@@Base+0xa0>  // b.pmore
  41e8a0:	mov	w1, w24
  41e8a4:	mov	x0, x19
  41e8a8:	bl	41e308 <update_goal_chain@@Base+0x43c>
  41e8ac:	cbz	w0, 41e8bc <create_pattern_rule@@Base+0x88>
  41e8b0:	cmp	w23, #0x0
  41e8b4:	cset	w0, ne  // ne = any
  41e8b8:	strb	w0, [x19, #50]
  41e8bc:	ldp	x19, x20, [sp, #16]
  41e8c0:	ldp	x21, x22, [sp, #32]
  41e8c4:	ldp	x23, x24, [sp, #48]
  41e8c8:	ldp	x25, x26, [sp, #64]
  41e8cc:	ldp	x29, x30, [sp], #80
  41e8d0:	ret
  41e8d4:	ldr	x0, [x22, x20, lsl #3]
  41e8d8:	bl	406700 <strlen@plt>
  41e8dc:	str	w0, [x21, x20, lsl #2]
  41e8e0:	ldr	x2, [x19, #24]
  41e8e4:	lsl	x1, x20, #3
  41e8e8:	add	x20, x20, #0x1
  41e8ec:	ldr	x0, [x2, x1]
  41e8f0:	add	x0, x0, #0x1
  41e8f4:	str	x0, [x2, x1]
  41e8f8:	b	41e898 <create_pattern_rule@@Base+0x64>
  41e8fc:	stp	x29, x30, [sp, #-80]!
  41e900:	mov	x29, sp
  41e904:	stp	x19, x20, [sp, #16]
  41e908:	mov	x19, x1
  41e90c:	stp	x21, x22, [sp, #32]
  41e910:	stp	x23, x24, [sp, #48]
  41e914:	mov	x23, x2
  41e918:	mov	x24, x0
  41e91c:	mov	x0, #0x8                   	// #8
  41e920:	str	x25, [sp, #64]
  41e924:	bl	416a54 <xmalloc@@Base>
  41e928:	mov	x21, x0
  41e92c:	mov	x0, #0x8                   	// #8
  41e930:	bl	416a54 <xmalloc@@Base>
  41e934:	mov	x22, x0
  41e938:	cbnz	x24, 41e9ec <create_pattern_rule@@Base+0x1b8>
  41e93c:	mov	x1, #0x5                   	// #5
  41e940:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41e944:	add	x0, x0, #0xb7d
  41e948:	bl	41f1b4 <strcache_add_len@@Base>
  41e94c:	str	x0, [x21]
  41e950:	add	x0, x0, #0x1
  41e954:	str	x0, [x22]
  41e958:	cbz	x19, 41e9b0 <create_pattern_rule@@Base+0x17c>
  41e95c:	mov	x0, x19
  41e960:	bl	406700 <strlen@plt>
  41e964:	mov	x20, x0
  41e968:	add	x0, x0, #0x11
  41e96c:	and	x0, x0, #0xfffffffffffffff0
  41e970:	add	x20, x20, #0x1
  41e974:	sub	sp, sp, x0
  41e978:	mov	w1, #0x25                  	// #37
  41e97c:	mov	x24, sp
  41e980:	mov	x2, x20
  41e984:	mov	x0, x24
  41e988:	strb	w1, [x0], #1
  41e98c:	mov	x1, x19
  41e990:	bl	4066c0 <memcpy@plt>
  41e994:	mov	x0, #0x28                  	// #40
  41e998:	bl	416a78 <xcalloc@@Base>
  41e99c:	mov	x19, x0
  41e9a0:	mov	x1, x20
  41e9a4:	mov	x0, x24
  41e9a8:	bl	41f1b4 <strcache_add_len@@Base>
  41e9ac:	str	x0, [x19, #8]
  41e9b0:	mov	x5, x23
  41e9b4:	mov	x4, x19
  41e9b8:	mov	x1, x22
  41e9bc:	mov	x0, x21
  41e9c0:	mov	w6, #0x0                   	// #0
  41e9c4:	mov	w3, #0x0                   	// #0
  41e9c8:	mov	w2, #0x1                   	// #1
  41e9cc:	bl	41e834 <create_pattern_rule@@Base>
  41e9d0:	mov	sp, x29
  41e9d4:	ldp	x19, x20, [sp, #16]
  41e9d8:	ldp	x21, x22, [sp, #32]
  41e9dc:	ldp	x23, x24, [sp, #48]
  41e9e0:	ldr	x25, [sp, #64]
  41e9e4:	ldp	x29, x30, [sp], #80
  41e9e8:	ret
  41e9ec:	mov	x0, x24
  41e9f0:	bl	406700 <strlen@plt>
  41e9f4:	mov	x20, x0
  41e9f8:	add	x0, x0, #0x11
  41e9fc:	and	x0, x0, #0xfffffffffffffff0
  41ea00:	add	x20, x20, #0x1
  41ea04:	sub	sp, sp, x0
  41ea08:	mov	x2, x20
  41ea0c:	mov	x25, sp
  41ea10:	mov	w1, #0x25                  	// #37
  41ea14:	mov	x0, x25
  41ea18:	strb	w1, [x0], #1
  41ea1c:	mov	x1, x24
  41ea20:	bl	4066c0 <memcpy@plt>
  41ea24:	mov	x1, x20
  41ea28:	mov	x0, x25
  41ea2c:	bl	41f1b4 <strcache_add_len@@Base>
  41ea30:	str	x0, [x21]
  41ea34:	b	41e954 <create_pattern_rule@@Base+0x120>

000000000041ea38 <convert_to_pattern@@Base>:
  41ea38:	stp	x29, x30, [sp, #-128]!
  41ea3c:	mov	x29, sp
  41ea40:	stp	x21, x22, [sp, #32]
  41ea44:	adrp	x22, 441000 <commands_started@@Base+0x1c0>
  41ea48:	ldr	x0, [x22, #2208]
  41ea4c:	stp	x19, x20, [sp, #16]
  41ea50:	adrp	x20, 440000 <output_context@@Base+0x1248>
  41ea54:	stp	x23, x24, [sp, #48]
  41ea58:	ldr	x19, [x0, #24]
  41ea5c:	str	xzr, [x20, #3656]
  41ea60:	stp	x25, x26, [sp, #64]
  41ea64:	mov	x21, x19
  41ea68:	stp	x27, x28, [sp, #80]
  41ea6c:	cbnz	x21, 41eac0 <convert_to_pattern@@Base+0x88>
  41ea70:	ldr	x0, [x20, #3656]
  41ea74:	adrp	x25, 441000 <commands_started@@Base+0x1c0>
  41ea78:	add	x25, x25, #0x7d0
  41ea7c:	adrp	x24, 424000 <_IO_stdin_used@@Base+0x1720>
  41ea80:	lsl	x0, x0, #1
  41ea84:	add	x0, x0, #0x10
  41ea88:	and	x0, x0, #0xfffffffffffffff0
  41ea8c:	sub	sp, sp, x0
  41ea90:	add	x0, x24, #0x819
  41ea94:	mov	x23, sp
  41ea98:	str	x0, [x29, #112]
  41ea9c:	cbnz	x19, 41eaec <convert_to_pattern@@Base+0xb4>
  41eaa0:	mov	sp, x29
  41eaa4:	ldp	x19, x20, [sp, #16]
  41eaa8:	ldp	x21, x22, [sp, #32]
  41eaac:	ldp	x23, x24, [sp, #48]
  41eab0:	ldp	x25, x26, [sp, #64]
  41eab4:	ldp	x27, x28, [sp, #80]
  41eab8:	ldp	x29, x30, [sp], #128
  41eabc:	ret
  41eac0:	ldr	x0, [x21, #8]
  41eac4:	cbnz	x0, 41ead0 <convert_to_pattern@@Base+0x98>
  41eac8:	ldr	x0, [x21, #16]
  41eacc:	ldr	x0, [x0]
  41ead0:	bl	406700 <strlen@plt>
  41ead4:	ldr	x1, [x20, #3656]
  41ead8:	cmp	x1, x0
  41eadc:	b.cs	41eae4 <convert_to_pattern@@Base+0xac>  // b.hs, b.nlast
  41eae0:	str	x0, [x20, #3656]
  41eae4:	ldr	x21, [x21]
  41eae8:	b	41ea6c <convert_to_pattern@@Base+0x34>
  41eaec:	ldr	x0, [x19, #8]
  41eaf0:	cbnz	x0, 41eafc <convert_to_pattern@@Base+0xc4>
  41eaf4:	ldr	x0, [x19, #16]
  41eaf8:	ldr	x0, [x0]
  41eafc:	mov	x2, #0x0                   	// #0
  41eb00:	mov	x1, #0x0                   	// #0
  41eb04:	bl	41e8fc <create_pattern_rule@@Base+0xc8>
  41eb08:	ldr	x0, [x19, #16]
  41eb0c:	ldr	x2, [x0, #32]
  41eb10:	cbz	x2, 41eb28 <convert_to_pattern@@Base+0xf0>
  41eb14:	ldr	x1, [x19, #8]
  41eb18:	cbnz	x1, 41eb20 <convert_to_pattern@@Base+0xe8>
  41eb1c:	ldr	x1, [x0]
  41eb20:	ldr	x0, [x29, #112]
  41eb24:	bl	41e8fc <create_pattern_rule@@Base+0xc8>
  41eb28:	ldr	x21, [x19, #8]
  41eb2c:	cbnz	x21, 41eb38 <convert_to_pattern@@Base+0x100>
  41eb30:	ldr	x0, [x19, #16]
  41eb34:	ldr	x21, [x0]
  41eb38:	mov	x0, x21
  41eb3c:	bl	406700 <strlen@plt>
  41eb40:	mov	x20, x0
  41eb44:	mov	x2, x0
  41eb48:	mov	x1, x21
  41eb4c:	mov	x0, x23
  41eb50:	bl	4066c0 <memcpy@plt>
  41eb54:	ldr	x0, [x22, #2208]
  41eb58:	add	x26, x23, x20
  41eb5c:	adrp	x27, 427000 <_IO_stdin_used@@Base+0x4720>
  41eb60:	ldr	x24, [x0, #24]
  41eb64:	add	x0, x27, #0xb83
  41eb68:	str	x0, [x29, #120]
  41eb6c:	cbnz	x24, 41eb78 <convert_to_pattern@@Base+0x140>
  41eb70:	ldr	x19, [x19]
  41eb74:	b	41ea9c <convert_to_pattern@@Base+0x64>
  41eb78:	ldr	x28, [x24, #8]
  41eb7c:	cbnz	x28, 41ecac <convert_to_pattern@@Base+0x274>
  41eb80:	ldr	x0, [x24, #16]
  41eb84:	ldr	x27, [x0]
  41eb88:	mov	x0, x27
  41eb8c:	bl	406700 <strlen@plt>
  41eb90:	mov	x21, x0
  41eb94:	cmp	x20, x0
  41eb98:	b.ne	41ebe0 <convert_to_pattern@@Base+0x1a8>  // b.any
  41eb9c:	ldr	x2, [x19, #8]
  41eba0:	cbnz	x2, 41ecb4 <convert_to_pattern@@Base+0x27c>
  41eba4:	ldr	x0, [x19, #16]
  41eba8:	ldr	x0, [x0]
  41ebac:	cmp	x27, x0
  41ebb0:	b.eq	41eca4 <convert_to_pattern@@Base+0x26c>  // b.none
  41ebb4:	ldrb	w1, [x0]
  41ebb8:	ldrb	w0, [x27]
  41ebbc:	cmp	w0, w1
  41ebc0:	b.ne	41ebe0 <convert_to_pattern@@Base+0x1a8>  // b.any
  41ebc4:	cbz	w0, 41eca4 <convert_to_pattern@@Base+0x26c>
  41ebc8:	cbz	x2, 41ecbc <convert_to_pattern@@Base+0x284>
  41ebcc:	add	x0, x2, #0x1
  41ebd0:	cbz	x28, 41eccc <convert_to_pattern@@Base+0x294>
  41ebd4:	add	x1, x28, #0x1
  41ebd8:	bl	406be0 <strcmp@plt>
  41ebdc:	cbz	w0, 41eca4 <convert_to_pattern@@Base+0x26c>
  41ebe0:	add	x2, x21, #0x1
  41ebe4:	mov	x1, x27
  41ebe8:	mov	x0, x26
  41ebec:	bl	4066c0 <memcpy@plt>
  41ebf0:	mov	x0, x23
  41ebf4:	bl	40be54 <lookup_file@@Base>
  41ebf8:	mov	x28, x0
  41ebfc:	cbz	x0, 41eca4 <convert_to_pattern@@Base+0x26c>
  41ec00:	ldr	x4, [x0, #32]
  41ec04:	str	x4, [x29, #104]
  41ec08:	cbz	x4, 41eca4 <convert_to_pattern@@Base+0x26c>
  41ec0c:	ldr	x0, [x0, #24]
  41ec10:	cbz	x0, 41ec40 <convert_to_pattern@@Base+0x208>
  41ec14:	ldr	w0, [x25]
  41ec18:	cbnz	w0, 41eca4 <convert_to_pattern@@Base+0x26c>
  41ec1c:	ldr	x1, [x29, #120]
  41ec20:	mov	w2, #0x5                   	// #5
  41ec24:	mov	x0, #0x0                   	// #0
  41ec28:	bl	406d60 <dcgettext@plt>
  41ec2c:	mov	x2, x0
  41ec30:	ldr	x4, [x29, #104]
  41ec34:	mov	x1, #0x0                   	// #0
  41ec38:	mov	x0, x4
  41ec3c:	bl	417aa8 <error@@Base>
  41ec40:	cmp	x21, #0x2
  41ec44:	b.ne	41ec7c <convert_to_pattern@@Base+0x244>  // b.any
  41ec48:	ldrb	w0, [x26]
  41ec4c:	cmp	w0, #0x2e
  41ec50:	b.ne	41ec7c <convert_to_pattern@@Base+0x244>  // b.any
  41ec54:	ldrb	w0, [x26, #1]
  41ec58:	cmp	w0, #0x61
  41ec5c:	b.ne	41ec7c <convert_to_pattern@@Base+0x244>  // b.any
  41ec60:	ldr	x1, [x19, #8]
  41ec64:	cbnz	x1, 41ec70 <convert_to_pattern@@Base+0x238>
  41ec68:	ldr	x0, [x19, #16]
  41ec6c:	ldr	x1, [x0]
  41ec70:	mov	x0, #0x0                   	// #0
  41ec74:	ldr	x2, [x28, #32]
  41ec78:	bl	41e8fc <create_pattern_rule@@Base+0xc8>
  41ec7c:	ldr	x0, [x24, #8]
  41ec80:	cbnz	x0, 41ec8c <convert_to_pattern@@Base+0x254>
  41ec84:	ldr	x0, [x24, #16]
  41ec88:	ldr	x0, [x0]
  41ec8c:	ldr	x1, [x19, #8]
  41ec90:	cbnz	x1, 41ec9c <convert_to_pattern@@Base+0x264>
  41ec94:	ldr	x1, [x19, #16]
  41ec98:	ldr	x1, [x1]
  41ec9c:	ldr	x2, [x28, #32]
  41eca0:	bl	41e8fc <create_pattern_rule@@Base+0xc8>
  41eca4:	ldr	x24, [x24]
  41eca8:	b	41eb6c <convert_to_pattern@@Base+0x134>
  41ecac:	mov	x27, x28
  41ecb0:	b	41eb88 <convert_to_pattern@@Base+0x150>
  41ecb4:	mov	x0, x2
  41ecb8:	b	41ebac <convert_to_pattern@@Base+0x174>
  41ecbc:	ldr	x0, [x19, #16]
  41ecc0:	ldr	x0, [x0]
  41ecc4:	add	x0, x0, #0x1
  41ecc8:	b	41ebd0 <convert_to_pattern@@Base+0x198>
  41eccc:	ldr	x1, [x24, #16]
  41ecd0:	ldr	x1, [x1]
  41ecd4:	add	x1, x1, #0x1
  41ecd8:	b	41ebd8 <convert_to_pattern@@Base+0x1a0>

000000000041ecdc <print_rule_data_base@@Base>:
  41ecdc:	stp	x29, x30, [sp, #-80]!
  41ece0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ece4:	add	x1, x1, #0xbbd
  41ece8:	mov	w2, #0x5                   	// #5
  41ecec:	mov	x29, sp
  41ecf0:	mov	x0, #0x0                   	// #0
  41ecf4:	stp	x19, x20, [sp, #16]
  41ecf8:	mov	w20, #0x0                   	// #0
  41ecfc:	stp	x21, x22, [sp, #32]
  41ed00:	mov	w22, #0x0                   	// #0
  41ed04:	stp	x23, x24, [sp, #48]
  41ed08:	adrp	x23, 43e000 <expanding_var@@Base+0x328>
  41ed0c:	mov	w24, #0x20                  	// #32
  41ed10:	str	x25, [sp, #64]
  41ed14:	bl	406d60 <dcgettext@plt>
  41ed18:	bl	406b80 <puts@plt>
  41ed1c:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  41ed20:	ldr	x19, [x0, #2216]
  41ed24:	cbnz	x19, 41ed84 <print_rule_data_base@@Base+0xa8>
  41ed28:	mov	w2, #0x5                   	// #5
  41ed2c:	cbnz	w20, 41ee08 <print_rule_data_base@@Base+0x12c>
  41ed30:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ed34:	add	x1, x1, #0xbcf
  41ed38:	mov	x0, #0x0                   	// #0
  41ed3c:	bl	406d60 <dcgettext@plt>
  41ed40:	bl	406b80 <puts@plt>
  41ed44:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  41ed48:	ldr	w0, [x19, #2248]
  41ed4c:	cmp	w0, w20
  41ed50:	b.eq	41ee40 <print_rule_data_base@@Base+0x164>  // b.none
  41ed54:	cbz	w0, 41ee40 <print_rule_data_base@@Base+0x164>
  41ed58:	mov	w2, #0x5                   	// #5
  41ed5c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ed60:	mov	x0, #0x0                   	// #0
  41ed64:	add	x1, x1, #0xc11
  41ed68:	bl	406d60 <dcgettext@plt>
  41ed6c:	mov	x2, x0
  41ed70:	ldr	w3, [x19, #2248]
  41ed74:	mov	w4, w20
  41ed78:	mov	x1, #0x28                  	// #40
  41ed7c:	mov	x0, #0x0                   	// #0
  41ed80:	bl	417d24 <fatal@@Base>
  41ed84:	add	w20, w20, #0x1
  41ed88:	mov	x21, #0x0                   	// #0
  41ed8c:	mov	w25, #0x3a                  	// #58
  41ed90:	mov	w0, #0xa                   	// #10
  41ed94:	bl	406e20 <putchar@plt>
  41ed98:	ldrh	w0, [x19, #48]
  41ed9c:	cmp	w0, w21
  41eda0:	b.hi	41eddc <print_rule_data_base@@Base+0x100>  // b.pmore
  41eda4:	ldrb	w0, [x19, #50]
  41eda8:	cbz	w0, 41edb4 <print_rule_data_base@@Base+0xd8>
  41edac:	mov	w0, #0x3a                  	// #58
  41edb0:	bl	406e20 <putchar@plt>
  41edb4:	ldr	x0, [x19, #32]
  41edb8:	bl	40d114 <print_prereqs@@Base>
  41edbc:	ldr	x0, [x19, #40]
  41edc0:	cbz	x0, 41edc8 <print_rule_data_base@@Base+0xec>
  41edc4:	bl	40a178 <print_commands@@Base>
  41edc8:	ldrb	w0, [x19, #50]
  41edcc:	ldr	x19, [x19]
  41edd0:	cmp	w0, #0x0
  41edd4:	cinc	w22, w22, ne  // ne = any
  41edd8:	b	41ed24 <print_rule_data_base@@Base+0x48>
  41eddc:	ldr	x0, [x19, #8]
  41ede0:	ldr	x1, [x23, #400]
  41ede4:	ldr	x0, [x0, x21, lsl #3]
  41ede8:	bl	406710 <fputs@plt>
  41edec:	ldrh	w1, [x19, #48]
  41edf0:	add	w0, w21, #0x1
  41edf4:	add	x21, x21, #0x1
  41edf8:	cmp	w1, w0
  41edfc:	csel	w0, w24, w25, ne  // ne = any
  41ee00:	bl	406e20 <putchar@plt>
  41ee04:	b	41ed98 <print_rule_data_base@@Base+0xbc>
  41ee08:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41ee0c:	mov	x0, #0x0                   	// #0
  41ee10:	add	x1, x1, #0xbe5
  41ee14:	bl	406d60 <dcgettext@plt>
  41ee18:	ucvtf	d1, w20
  41ee1c:	ucvtf	d0, w22
  41ee20:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41ee24:	mov	w2, w22
  41ee28:	fdiv	d0, d0, d1
  41ee2c:	fmov	d1, x1
  41ee30:	mov	w1, w20
  41ee34:	fmul	d0, d0, d1
  41ee38:	bl	406df0 <printf@plt>
  41ee3c:	b	41ed44 <print_rule_data_base@@Base+0x68>
  41ee40:	ldp	x19, x20, [sp, #16]
  41ee44:	ldp	x21, x22, [sp, #32]
  41ee48:	ldp	x23, x24, [sp, #48]
  41ee4c:	ldr	x25, [sp, #64]
  41ee50:	ldp	x29, x30, [sp], #80
  41ee54:	ret
  41ee58:	mov	x0, #0x0                   	// #0
  41ee5c:	ret
  41ee60:	stp	x29, x30, [sp, #-48]!
  41ee64:	mov	x29, sp
  41ee68:	stp	x19, x20, [sp, #16]
  41ee6c:	mov	x19, x1
  41ee70:	str	x21, [sp, #32]
  41ee74:	mov	x21, x0
  41ee78:	add	x0, x1, #0x10
  41ee7c:	bl	416a54 <xmalloc@@Base>
  41ee80:	add	x3, x0, #0x8
  41ee84:	mov	x20, x0
  41ee88:	mov	x2, x19
  41ee8c:	add	x19, x20, x19
  41ee90:	mov	x1, x21
  41ee94:	mov	x0, x3
  41ee98:	bl	4066c0 <memcpy@plt>
  41ee9c:	mov	x3, x0
  41eea0:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41eea4:	strb	wzr, [x19, #8]
  41eea8:	ldr	x1, [x0, #3664]
  41eeac:	str	x20, [x0, #3664]
  41eeb0:	ldr	x21, [sp, #32]
  41eeb4:	str	x1, [x20]
  41eeb8:	mov	x0, x3
  41eebc:	ldp	x19, x20, [sp, #16]
  41eec0:	ldp	x29, x30, [sp], #48
  41eec4:	ret
  41eec8:	cmp	x1, x0
  41eecc:	b.eq	41eed4 <print_rule_data_base@@Base+0x1f8>  // b.none
  41eed0:	b	406be0 <strcmp@plt>
  41eed4:	mov	w0, #0x0                   	// #0
  41eed8:	ret
  41eedc:	stp	x29, x30, [sp, #-16]!
  41eee0:	mov	x29, sp
  41eee4:	bl	410f48 <jhash_string@@Base>
  41eee8:	mov	w0, w0
  41eeec:	ldp	x29, x30, [sp], #16
  41eef0:	ret
  41eef4:	stp	x29, x30, [sp, #-80]!
  41eef8:	mov	x29, sp
  41eefc:	stp	x19, x20, [sp, #16]
  41ef00:	adrp	x19, 440000 <output_context@@Base+0x1248>
  41ef04:	add	x19, x19, #0xe50
  41ef08:	stp	x21, x22, [sp, #32]
  41ef0c:	mov	x22, x1
  41ef10:	mov	x1, x0
  41ef14:	stp	x23, x24, [sp, #48]
  41ef18:	stp	x25, x26, [sp, #64]
  41ef1c:	mov	x26, x0
  41ef20:	add	x0, x19, #0x10
  41ef24:	bl	4107ac <hash_find_slot@@Base>
  41ef28:	mov	x24, x0
  41ef2c:	ldr	x21, [x0]
  41ef30:	ldr	x0, [x19, #104]
  41ef34:	add	x0, x0, #0x1
  41ef38:	str	x0, [x19, #104]
  41ef3c:	cbz	x21, 41ef50 <print_rule_data_base@@Base+0x274>
  41ef40:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41ef44:	ldr	x0, [x0, #64]
  41ef48:	cmp	x21, x0
  41ef4c:	b.ne	41f0b4 <print_rule_data_base@@Base+0x3d8>  // b.any
  41ef50:	ldp	x0, x1, [x19, #112]
  41ef54:	add	w2, w22, #0x1
  41ef58:	and	w23, w2, #0xffff
  41ef5c:	and	x22, x22, #0xffff
  41ef60:	add	x0, x0, #0x1
  41ef64:	add	x1, x1, w2, uxth
  41ef68:	stp	x0, x1, [x19, #112]
  41ef6c:	mov	w1, #0x1fe2                	// #8162
  41ef70:	and	x0, x2, #0xffff
  41ef74:	cmp	w1, w2, uxth
  41ef78:	b.cc	41f03c <print_rule_data_base@@Base+0x360>  // b.lo, b.ul, b.last
  41ef7c:	mov	x25, x19
  41ef80:	ldr	x20, [x25, #8]!
  41ef84:	cbnz	x20, 41f0d0 <print_rule_data_base@@Base+0x3f4>
  41ef88:	mov	x0, #0x1ff0                	// #8176
  41ef8c:	bl	416a54 <xmalloc@@Base>
  41ef90:	mov	x20, x0
  41ef94:	mov	w0, #0x1fe20000            	// #534904832
  41ef98:	add	x25, x19, #0x8
  41ef9c:	str	w0, [x20, #8]
  41efa0:	ldr	x0, [x19, #8]
  41efa4:	str	x0, [x20]
  41efa8:	ldr	x0, [x19, #136]
  41efac:	str	x20, [x19, #8]
  41efb0:	strh	wzr, [x20, #12]
  41efb4:	add	x0, x0, #0x1
  41efb8:	str	x0, [x19, #136]
  41efbc:	ldrh	w21, [x20, #8]
  41efc0:	mov	x1, x26
  41efc4:	mov	x2, x22
  41efc8:	add	x21, x21, #0xe
  41efcc:	add	x21, x20, x21
  41efd0:	mov	x0, x21
  41efd4:	bl	4066d0 <memmove@plt>
  41efd8:	ldr	x1, [x19, #112]
  41efdc:	strb	wzr, [x21, x22]
  41efe0:	ldrh	w0, [x20, #8]
  41efe4:	cmp	x1, #0x14
  41efe8:	add	w0, w23, w0
  41efec:	strh	w0, [x20, #8]
  41eff0:	ldrh	w0, [x20, #10]
  41eff4:	sub	w23, w0, w23
  41eff8:	ldrh	w0, [x20, #12]
  41effc:	and	w23, w23, #0xffff
  41f000:	strh	w23, [x20, #10]
  41f004:	add	w0, w0, #0x1
  41f008:	strh	w0, [x20, #12]
  41f00c:	b.ls	41f0a4 <print_rule_data_base@@Base+0x3c8>  // b.plast
  41f010:	ldr	x0, [x19, #120]
  41f014:	udiv	x0, x0, x1
  41f018:	add	x0, x0, #0x1
  41f01c:	cmp	x0, w23, uxth
  41f020:	b.ls	41f0a4 <print_rule_data_base@@Base+0x3c8>  // b.plast
  41f024:	ldr	x0, [x20]
  41f028:	str	x0, [x25]
  41f02c:	ldr	x0, [x19, #128]
  41f030:	str	x0, [x20]
  41f034:	str	x20, [x19, #128]
  41f038:	b	41f0a4 <print_rule_data_base@@Base+0x3c8>
  41f03c:	add	x0, x0, #0xe
  41f040:	bl	416a54 <xmalloc@@Base>
  41f044:	mov	x20, x0
  41f048:	add	x21, x0, #0xe
  41f04c:	strh	wzr, [x0, #8]
  41f050:	mov	x2, x22
  41f054:	strh	w23, [x0, #10]
  41f058:	mov	x1, x26
  41f05c:	strh	wzr, [x0, #12]
  41f060:	ldr	x0, [x19, #128]
  41f064:	str	x0, [x20]
  41f068:	ldr	x0, [x19, #136]
  41f06c:	add	x0, x0, #0x1
  41f070:	stp	x20, x0, [x19, #128]
  41f074:	mov	x0, x21
  41f078:	bl	4066d0 <memmove@plt>
  41f07c:	strb	wzr, [x21, x22]
  41f080:	ldrh	w0, [x20, #8]
  41f084:	add	w0, w23, w0
  41f088:	strh	w0, [x20, #8]
  41f08c:	ldrh	w0, [x20, #10]
  41f090:	sub	w23, w0, w23
  41f094:	ldrh	w0, [x20, #12]
  41f098:	strh	w23, [x20, #10]
  41f09c:	add	w0, w0, #0x1
  41f0a0:	strh	w0, [x20, #12]
  41f0a4:	mov	x2, x24
  41f0a8:	mov	x1, x21
  41f0ac:	add	x0, x19, #0x10
  41f0b0:	bl	4108b8 <hash_insert_at@@Base>
  41f0b4:	mov	x0, x21
  41f0b8:	ldp	x19, x20, [sp, #16]
  41f0bc:	ldp	x21, x22, [sp, #32]
  41f0c0:	ldp	x23, x24, [sp, #48]
  41f0c4:	ldp	x25, x26, [sp, #64]
  41f0c8:	ldp	x29, x30, [sp], #80
  41f0cc:	ret
  41f0d0:	ldrh	w0, [x20, #10]
  41f0d4:	cmp	w0, w23
  41f0d8:	b.hi	41efbc <print_rule_data_base@@Base+0x2e0>  // b.pmore
  41f0dc:	mov	x25, x20
  41f0e0:	ldr	x20, [x20]
  41f0e4:	b	41ef84 <print_rule_data_base@@Base+0x2a8>

000000000041f0e8 <strcache_iscached@@Base>:
  41f0e8:	adrp	x2, 440000 <output_context@@Base+0x1248>
  41f0ec:	add	x4, x2, #0xe50
  41f0f0:	ldr	x1, [x4, #8]
  41f0f4:	cbnz	x1, 41f110 <strcache_iscached@@Base+0x28>
  41f0f8:	ldr	x1, [x4, #128]
  41f0fc:	cbnz	x1, 41f134 <strcache_iscached@@Base+0x4c>
  41f100:	ldr	x1, [x2, #3664]
  41f104:	cbnz	x1, 41f158 <strcache_iscached@@Base+0x70>
  41f108:	mov	w0, #0x0                   	// #0
  41f10c:	ret
  41f110:	add	x3, x1, #0xe
  41f114:	cmp	x3, x0
  41f118:	b.hi	41f12c <strcache_iscached@@Base+0x44>  // b.pmore
  41f11c:	ldrh	w5, [x1, #8]
  41f120:	add	x3, x3, x5
  41f124:	cmp	x0, x3
  41f128:	b.cc	41f16c <strcache_iscached@@Base+0x84>  // b.lo, b.ul, b.last
  41f12c:	ldr	x1, [x1]
  41f130:	b	41f0f4 <strcache_iscached@@Base+0xc>
  41f134:	add	x3, x1, #0xe
  41f138:	cmp	x3, x0
  41f13c:	b.hi	41f150 <strcache_iscached@@Base+0x68>  // b.pmore
  41f140:	ldrh	w4, [x1, #8]
  41f144:	add	x3, x3, x4
  41f148:	cmp	x0, x3
  41f14c:	b.cc	41f16c <strcache_iscached@@Base+0x84>  // b.lo, b.ul, b.last
  41f150:	ldr	x1, [x1]
  41f154:	b	41f0fc <strcache_iscached@@Base+0x14>
  41f158:	add	x2, x1, #0x8
  41f15c:	cmp	x0, x2
  41f160:	b.eq	41f16c <strcache_iscached@@Base+0x84>  // b.none
  41f164:	ldr	x1, [x1]
  41f168:	b	41f104 <strcache_iscached@@Base+0x1c>
  41f16c:	mov	w0, #0x1                   	// #1
  41f170:	b	41f10c <strcache_iscached@@Base+0x24>

000000000041f174 <strcache_add@@Base>:
  41f174:	stp	x29, x30, [sp, #-32]!
  41f178:	mov	x29, sp
  41f17c:	str	x19, [sp, #16]
  41f180:	mov	x19, x0
  41f184:	bl	406700 <strlen@plt>
  41f188:	mov	x1, x0
  41f18c:	mov	x0, #0xfffe                	// #65534
  41f190:	cmp	x1, x0
  41f194:	mov	x0, x19
  41f198:	b.ls	41f1a8 <strcache_add@@Base+0x34>  // b.plast
  41f19c:	ldr	x19, [sp, #16]
  41f1a0:	ldp	x29, x30, [sp], #32
  41f1a4:	b	41ee60 <print_rule_data_base@@Base+0x184>
  41f1a8:	ldr	x19, [sp, #16]
  41f1ac:	ldp	x29, x30, [sp], #32
  41f1b0:	b	41eef4 <print_rule_data_base@@Base+0x218>

000000000041f1b4 <strcache_add_len@@Base>:
  41f1b4:	stp	x29, x30, [sp, #-32]!
  41f1b8:	mov	x29, sp
  41f1bc:	str	x19, [sp, #16]
  41f1c0:	mov	x19, x1
  41f1c4:	ldrb	w1, [x0, x1]
  41f1c8:	cbz	w1, 41f1f0 <strcache_add_len@@Base+0x3c>
  41f1cc:	add	x1, x19, #0x10
  41f1d0:	mov	x2, x19
  41f1d4:	and	x1, x1, #0xfffffffffffffff0
  41f1d8:	sub	sp, sp, x1
  41f1dc:	mov	x1, x0
  41f1e0:	mov	x3, sp
  41f1e4:	mov	x0, x3
  41f1e8:	bl	4066c0 <memcpy@plt>
  41f1ec:	strb	wzr, [x0, x19]
  41f1f0:	mov	x1, #0xfffe                	// #65534
  41f1f4:	cmp	x19, x1
  41f1f8:	mov	x1, x19
  41f1fc:	b.ls	41f214 <strcache_add_len@@Base+0x60>  // b.plast
  41f200:	bl	41ee60 <print_rule_data_base@@Base+0x184>
  41f204:	mov	sp, x29
  41f208:	ldr	x19, [sp, #16]
  41f20c:	ldp	x29, x30, [sp], #32
  41f210:	ret
  41f214:	bl	41eef4 <print_rule_data_base@@Base+0x218>
  41f218:	b	41f204 <strcache_add_len@@Base+0x50>

000000000041f21c <strcache_init@@Base>:
  41f21c:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41f220:	add	x0, x0, #0xe50
  41f224:	add	x0, x0, #0x10
  41f228:	adrp	x4, 41e000 <update_goal_chain@@Base+0x134>
  41f22c:	adrp	x3, 41e000 <update_goal_chain@@Base+0x134>
  41f230:	add	x4, x4, #0xec8
  41f234:	add	x3, x3, #0xe58
  41f238:	adrp	x2, 41e000 <update_goal_chain@@Base+0x134>
  41f23c:	mov	x1, #0x1f40                	// #8000
  41f240:	add	x2, x2, #0xedc
  41f244:	b	4106f8 <hash_init@@Base>

000000000041f248 <strcache_print_stats@@Base>:
  41f248:	stp	x29, x30, [sp, #-80]!
  41f24c:	mov	x29, sp
  41f250:	stp	x19, x20, [sp, #16]
  41f254:	adrp	x19, 440000 <output_context@@Base+0x1248>
  41f258:	add	x19, x19, #0xe50
  41f25c:	mov	x20, x0
  41f260:	stp	x21, x22, [sp, #32]
  41f264:	ldr	x0, [x19, #8]
  41f268:	stp	x23, x24, [sp, #48]
  41f26c:	stp	x25, x26, [sp, #64]
  41f270:	cbnz	x0, 41f2a0 <strcache_print_stats@@Base+0x58>
  41f274:	mov	w2, #0x5                   	// #5
  41f278:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f27c:	add	x1, x1, #0xc3c
  41f280:	bl	406d60 <dcgettext@plt>
  41f284:	mov	x1, x20
  41f288:	ldp	x19, x20, [sp, #16]
  41f28c:	ldp	x21, x22, [sp, #32]
  41f290:	ldp	x23, x24, [sp, #48]
  41f294:	ldp	x25, x26, [sp, #64]
  41f298:	ldp	x29, x30, [sp], #80
  41f29c:	b	406df0 <printf@plt>
  41f2a0:	ldr	x1, [x0]
  41f2a4:	mov	x22, #0x1fe2                	// #8162
  41f2a8:	mov	x21, #0x0                   	// #0
  41f2ac:	mov	x24, #0x0                   	// #0
  41f2b0:	mov	x2, #0x0                   	// #0
  41f2b4:	add	x3, x2, #0x1
  41f2b8:	cbnz	x1, 41f420 <strcache_print_stats@@Base+0x1d8>
  41f2bc:	ldr	x1, [x19, #128]
  41f2c0:	mov	x23, x2
  41f2c4:	sub	x26, x23, x2
  41f2c8:	add	x25, x23, #0x1
  41f2cc:	cbnz	x1, 41f444 <strcache_print_stats@@Base+0x1fc>
  41f2d0:	mov	w2, #0x5                   	// #5
  41f2d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f2d8:	mov	x0, #0x0                   	// #0
  41f2dc:	add	x1, x1, #0xc55
  41f2e0:	bl	406d60 <dcgettext@plt>
  41f2e4:	ldp	x4, x5, [x19, #112]
  41f2e8:	mov	x3, x26
  41f2ec:	mov	x2, x25
  41f2f0:	mov	x1, x20
  41f2f4:	udiv	x6, x5, x4
  41f2f8:	bl	406df0 <printf@plt>
  41f2fc:	mov	w2, #0x5                   	// #5
  41f300:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f304:	mov	x0, #0x0                   	// #0
  41f308:	add	x1, x1, #0xca6
  41f30c:	bl	406d60 <dcgettext@plt>
  41f310:	ldr	x1, [x19, #8]
  41f314:	mov	w2, #0x1fe2                	// #8162
  41f318:	ldrh	w3, [x1, #8]
  41f31c:	ldrh	w4, [x1, #12]
  41f320:	mov	x1, x20
  41f324:	udiv	w5, w3, w4
  41f328:	bl	406df0 <printf@plt>
  41f32c:	cbz	x23, 41f3a0 <strcache_print_stats@@Base+0x158>
  41f330:	ldr	x0, [x19, #8]
  41f334:	mov	w2, #0x5                   	// #5
  41f338:	ldp	x26, x25, [x19, #112]
  41f33c:	ldrh	w1, [x0, #8]
  41f340:	ldrh	w3, [x0, #12]
  41f344:	mov	x0, #0x0                   	// #0
  41f348:	sub	x25, x25, x1
  41f34c:	sub	x26, x26, x3
  41f350:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f354:	add	x1, x1, #0xcee
  41f358:	bl	406d60 <dcgettext@plt>
  41f35c:	udiv	x4, x25, x26
  41f360:	mov	x3, x26
  41f364:	mov	x2, x25
  41f368:	mov	x1, x20
  41f36c:	bl	406df0 <printf@plt>
  41f370:	mov	w2, #0x5                   	// #5
  41f374:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f378:	mov	x0, #0x0                   	// #0
  41f37c:	add	x1, x1, #0xd28
  41f380:	bl	406d60 <dcgettext@plt>
  41f384:	udiv	x5, x24, x23
  41f388:	mov	x4, x22
  41f38c:	mov	x3, x21
  41f390:	mov	x2, x24
  41f394:	mov	x1, x20
  41f398:	and	w5, w5, #0xffff
  41f39c:	bl	406df0 <printf@plt>
  41f3a0:	mov	w2, #0x5                   	// #5
  41f3a4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f3a8:	mov	x0, #0x0                   	// #0
  41f3ac:	add	x1, x1, #0xd70
  41f3b0:	bl	406d60 <dcgettext@plt>
  41f3b4:	ldp	x2, x1, [x19, #104]
  41f3b8:	sub	x1, x2, x1
  41f3bc:	ucvtf	d0, x1
  41f3c0:	mov	x1, #0x4059000000000000    	// #4636737291354636288
  41f3c4:	fmov	d1, x1
  41f3c8:	mov	x1, x20
  41f3cc:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  41f3d0:	fmul	d0, d0, d1
  41f3d4:	ucvtf	d1, x2
  41f3d8:	fdiv	d0, d0, d1
  41f3dc:	fcvtzu	x3, d0
  41f3e0:	bl	406df0 <printf@plt>
  41f3e4:	mov	w2, #0x5                   	// #5
  41f3e8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f3ec:	mov	x0, #0x0                   	// #0
  41f3f0:	add	x1, x1, #0xdac
  41f3f4:	bl	406d60 <dcgettext@plt>
  41f3f8:	ldr	x1, [x20, #400]
  41f3fc:	bl	406710 <fputs@plt>
  41f400:	ldr	x1, [x20, #400]
  41f404:	add	x0, x19, #0x10
  41f408:	ldp	x19, x20, [sp, #16]
  41f40c:	ldp	x21, x22, [sp, #32]
  41f410:	ldp	x23, x24, [sp, #48]
  41f414:	ldp	x25, x26, [sp, #64]
  41f418:	ldp	x29, x30, [sp], #80
  41f41c:	b	410c88 <hash_print_stats@@Base>
  41f420:	ldrh	w0, [x1, #10]
  41f424:	mov	x2, x3
  41f428:	ldr	x1, [x1]
  41f42c:	cmp	x21, x0
  41f430:	csel	x21, x21, x0, cs  // cs = hs, nlast
  41f434:	cmp	x22, x0
  41f438:	add	x24, x24, x0
  41f43c:	csel	x22, x22, x0, ls  // ls = plast
  41f440:	b	41f2b4 <strcache_print_stats@@Base+0x6c>
  41f444:	ldrh	w0, [x1, #10]
  41f448:	mov	x23, x25
  41f44c:	ldr	x1, [x1]
  41f450:	cmp	x21, x0
  41f454:	csel	x21, x21, x0, cs  // cs = hs, nlast
  41f458:	cmp	x22, x0
  41f45c:	add	x24, x24, x0
  41f460:	csel	x22, x22, x0, ls  // ls = plast
  41f464:	b	41f2c4 <strcache_print_stats@@Base+0x7c>
  41f468:	mov	x0, #0x0                   	// #0
  41f46c:	ret
  41f470:	ldr	w2, [x0, #40]
  41f474:	ldr	w3, [x1, #40]
  41f478:	subs	w3, w2, w3
  41f47c:	b.ne	41f498 <strcache_print_stats@@Base+0x250>  // b.any
  41f480:	ldr	x0, [x0]
  41f484:	ldr	x1, [x1]
  41f488:	cmp	x0, x1
  41f48c:	b.eq	41f498 <strcache_print_stats@@Base+0x250>  // b.none
  41f490:	mov	w2, w2
  41f494:	b	406ba0 <memcmp@plt>
  41f498:	mov	w0, w3
  41f49c:	ret
  41f4a0:	stp	x29, x30, [sp, #-16]!
  41f4a4:	mov	x29, sp
  41f4a8:	ldr	w1, [x0, #40]
  41f4ac:	ldr	x0, [x0]
  41f4b0:	bl	410df8 <jhash@@Base>
  41f4b4:	mov	w0, w0
  41f4b8:	ldp	x29, x30, [sp], #16
  41f4bc:	ret
  41f4c0:	stp	x29, x30, [sp, #-32]!
  41f4c4:	mov	x29, sp
  41f4c8:	str	x19, [sp, #16]
  41f4cc:	mov	x19, x0
  41f4d0:	ldr	x0, [x0]
  41f4d4:	bl	406c20 <free@plt>
  41f4d8:	ldr	x0, [x19, #8]
  41f4dc:	ldr	x19, [sp, #16]
  41f4e0:	ldp	x29, x30, [sp], #32
  41f4e4:	b	406c20 <free@plt>
  41f4e8:	stp	x29, x30, [sp, #-80]!
  41f4ec:	mov	x29, sp
  41f4f0:	stp	x19, x20, [sp, #16]
  41f4f4:	mov	x19, x0
  41f4f8:	mov	x0, x1
  41f4fc:	stp	x21, x22, [sp, #32]
  41f500:	mov	x21, x1
  41f504:	stp	x23, x24, [sp, #48]
  41f508:	str	x25, [sp, #64]
  41f50c:	bl	406700 <strlen@plt>
  41f510:	mov	x24, x0
  41f514:	cbz	x19, 41f520 <strcache_print_stats@@Base+0x2d8>
  41f518:	ldr	x19, [x19]
  41f51c:	b	41f528 <strcache_print_stats@@Base+0x2e0>
  41f520:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41f524:	ldr	x19, [x0, #3808]
  41f528:	cbz	x19, 41f5b4 <strcache_print_stats@@Base+0x36c>
  41f52c:	ldr	x20, [x19, #24]
  41f530:	cmp	x20, x24
  41f534:	b.hi	41f518 <strcache_print_stats@@Base+0x2d0>  // b.pmore
  41f538:	ldp	x22, x0, [x19, #8]
  41f53c:	sub	x20, x24, x20
  41f540:	add	x25, x20, #0x1
  41f544:	sub	x2, x22, x0
  41f548:	sub	x2, x2, #0x1
  41f54c:	add	x23, x21, x2
  41f550:	cmp	x21, x23
  41f554:	b.cs	41f564 <strcache_print_stats@@Base+0x31c>  // b.hs, b.nlast
  41f558:	mov	x1, x21
  41f55c:	bl	4069b0 <strncmp@plt>
  41f560:	cbnz	w0, 41f518 <strcache_print_stats@@Base+0x2d0>
  41f564:	ldrb	w1, [x22]
  41f568:	ldrb	w0, [x23, x25]
  41f56c:	cmp	w0, w1
  41f570:	b.ne	41f518 <strcache_print_stats@@Base+0x2d0>  // b.any
  41f574:	cbz	w0, 41f5b4 <strcache_print_stats@@Base+0x36c>
  41f578:	add	x0, x20, #0x2
  41f57c:	add	x1, x22, #0x1
  41f580:	add	x2, x23, x0
  41f584:	cmp	x2, x1
  41f588:	b.eq	41f5b4 <strcache_print_stats@@Base+0x36c>  // b.none
  41f58c:	ldrb	w1, [x22, #1]
  41f590:	ldrb	w0, [x23, x0]
  41f594:	cmp	w0, w1
  41f598:	b.ne	41f518 <strcache_print_stats@@Base+0x2d0>  // b.any
  41f59c:	cbz	w0, 41f5b4 <strcache_print_stats@@Base+0x36c>
  41f5a0:	add	x20, x20, #0x3
  41f5a4:	add	x0, x22, #0x2
  41f5a8:	add	x1, x23, x20
  41f5ac:	bl	406be0 <strcmp@plt>
  41f5b0:	cbnz	w0, 41f518 <strcache_print_stats@@Base+0x2d0>
  41f5b4:	mov	x0, x19
  41f5b8:	ldp	x19, x20, [sp, #16]
  41f5bc:	ldp	x21, x22, [sp, #32]
  41f5c0:	ldp	x23, x24, [sp, #48]
  41f5c4:	ldr	x25, [sp, #64]
  41f5c8:	ldp	x29, x30, [sp], #80
  41f5cc:	ret
  41f5d0:	stp	x29, x30, [sp, #-32]!
  41f5d4:	cmp	w2, #0x0
  41f5d8:	adrp	x3, 41f000 <print_rule_data_base@@Base+0x324>
  41f5dc:	add	x3, x3, #0x650
  41f5e0:	adrp	x4, 41f000 <print_rule_data_base@@Base+0x324>
  41f5e4:	mov	x29, sp
  41f5e8:	mov	x2, x1
  41f5ec:	add	x1, x4, #0x86c
  41f5f0:	csel	x1, x1, x3, ne  // ne = any
  41f5f4:	stp	x19, x20, [sp, #16]
  41f5f8:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  41f5fc:	mov	x20, x0
  41f600:	bl	410c1c <hash_map_arg@@Base>
  41f604:	mov	w2, #0x5                   	// #5
  41f608:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f60c:	mov	x0, #0x0                   	// #0
  41f610:	add	x1, x1, #0xdc3
  41f614:	bl	406d60 <dcgettext@plt>
  41f618:	ldr	x1, [x19, #400]
  41f61c:	bl	406710 <fputs@plt>
  41f620:	ldr	x1, [x19, #400]
  41f624:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  41f628:	add	x0, x0, #0x153
  41f62c:	bl	406710 <fputs@plt>
  41f630:	ldr	x1, [x19, #400]
  41f634:	mov	x0, x20
  41f638:	bl	410c88 <hash_print_stats@@Base>
  41f63c:	ldr	x1, [x19, #400]
  41f640:	mov	w0, #0xa                   	// #10
  41f644:	ldp	x19, x20, [sp, #16]
  41f648:	ldp	x29, x30, [sp], #32
  41f64c:	b	4067b0 <putc@plt>
  41f650:	stp	x29, x30, [sp, #-64]!
  41f654:	mov	x29, sp
  41f658:	stp	x19, x20, [sp, #16]
  41f65c:	mov	x20, x0
  41f660:	ldrb	w0, [x0, #47]
  41f664:	stp	x21, x22, [sp, #32]
  41f668:	str	x23, [sp, #48]
  41f66c:	ubfx	x0, x0, #2, #3
  41f670:	cmp	w0, #0x6
  41f674:	b.hi	41f7b4 <strcache_print_stats@@Base+0x56c>  // b.pmore
  41f678:	mov	x21, x1
  41f67c:	mov	w2, #0x5                   	// #5
  41f680:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  41f684:	add	x1, x1, #0x44
  41f688:	ldrb	w0, [x1, w0, uxtw]
  41f68c:	adr	x1, 41f698 <strcache_print_stats@@Base+0x450>
  41f690:	add	x0, x1, w0, sxtb #2
  41f694:	br	x0
  41f698:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41f69c:	add	x1, x1, #0x231
  41f6a0:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  41f6a4:	mov	x0, #0x0                   	// #0
  41f6a8:	bl	406d60 <dcgettext@plt>
  41f6ac:	mov	x19, x0
  41f6b0:	ldr	x1, [x22, #400]
  41f6b4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  41f6b8:	add	x0, x0, #0x153
  41f6bc:	bl	406710 <fputs@plt>
  41f6c0:	ldr	x1, [x22, #400]
  41f6c4:	mov	x0, x19
  41f6c8:	mov	x19, x22
  41f6cc:	bl	406710 <fputs@plt>
  41f6d0:	ldrsb	w0, [x20, #44]
  41f6d4:	tbz	w0, #31, 41f6e8 <strcache_print_stats@@Base+0x4a0>
  41f6d8:	ldr	x1, [x22, #400]
  41f6dc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41f6e0:	add	x0, x0, #0xe0f
  41f6e4:	bl	406710 <fputs@plt>
  41f6e8:	ldr	x0, [x20, #16]
  41f6ec:	cbz	x0, 41f714 <strcache_print_stats@@Base+0x4cc>
  41f6f0:	mov	w2, #0x5                   	// #5
  41f6f4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f6f8:	mov	x0, #0x0                   	// #0
  41f6fc:	add	x1, x1, #0xe18
  41f700:	bl	406d60 <dcgettext@plt>
  41f704:	ldp	x2, x1, [x20, #24]
  41f708:	add	x2, x2, x1
  41f70c:	ldr	x1, [x20, #16]
  41f710:	bl	406df0 <printf@plt>
  41f714:	mov	w0, #0xa                   	// #10
  41f718:	bl	406e20 <putchar@plt>
  41f71c:	ldr	x1, [x19, #400]
  41f720:	mov	x0, x21
  41f724:	bl	406710 <fputs@plt>
  41f728:	ldrb	w21, [x20, #44]
  41f72c:	and	w23, w21, #0x1
  41f730:	tbz	w21, #0, 41f7b8 <strcache_print_stats@@Base+0x570>
  41f734:	ldr	x22, [x20, #8]
  41f738:	mov	w1, #0xa                   	// #10
  41f73c:	mov	x0, x22
  41f740:	bl	406c40 <strchr@plt>
  41f744:	cbz	x0, 41f7b8 <strcache_print_stats@@Base+0x570>
  41f748:	mov	x2, x22
  41f74c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41f750:	ldr	x1, [x20]
  41f754:	add	x0, x0, #0xe2f
  41f758:	ldp	x19, x20, [sp, #16]
  41f75c:	ldp	x21, x22, [sp, #32]
  41f760:	ldr	x23, [sp, #48]
  41f764:	ldp	x29, x30, [sp], #64
  41f768:	b	406df0 <printf@plt>
  41f76c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41f770:	add	x1, x1, #0x1fb
  41f774:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f778:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41f77c:	add	x1, x1, #0x203
  41f780:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f784:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f788:	add	x1, x1, #0x4f7
  41f78c:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f790:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f794:	add	x1, x1, #0xde5
  41f798:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f79c:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  41f7a0:	add	x1, x1, #0x224
  41f7a4:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f7a8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  41f7ac:	add	x1, x1, #0xdfa
  41f7b0:	b	41f6a0 <strcache_print_stats@@Base+0x458>
  41f7b4:	bl	406b50 <abort@plt>
  41f7b8:	ldr	x1, [x20]
  41f7bc:	cbz	w23, 41f828 <strcache_print_stats@@Base+0x5e0>
  41f7c0:	tst	x21, #0x2
  41f7c4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  41f7c8:	adrp	x2, 422000 <fd_inherit@@Base+0x20>
  41f7cc:	add	x0, x0, #0x819
  41f7d0:	add	x2, x2, #0xb15
  41f7d4:	csel	x2, x2, x0, ne  // ne = any
  41f7d8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41f7dc:	add	x0, x0, #0xe43
  41f7e0:	bl	406df0 <printf@plt>
  41f7e4:	ldr	x0, [x20, #8]
  41f7e8:	bl	416ca8 <next_token@@Base>
  41f7ec:	ldr	x21, [x20, #8]
  41f7f0:	cmp	x21, x0
  41f7f4:	b.eq	41f834 <strcache_print_stats@@Base+0x5ec>  // b.none
  41f7f8:	ldrb	w0, [x0]
  41f7fc:	cbnz	w0, 41f834 <strcache_print_stats@@Base+0x5ec>
  41f800:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  41f804:	mov	x1, x21
  41f808:	add	x0, x0, #0xe4b
  41f80c:	bl	406df0 <printf@plt>
  41f810:	ldp	x19, x20, [sp, #16]
  41f814:	mov	w0, #0xa                   	// #10
  41f818:	ldp	x21, x22, [sp, #32]
  41f81c:	ldr	x23, [sp, #48]
  41f820:	ldp	x29, x30, [sp], #64
  41f824:	b	406e20 <putchar@plt>
  41f828:	adrp	x2, 422000 <fd_inherit@@Base+0x20>
  41f82c:	add	x2, x2, #0xadb
  41f830:	b	41f7d8 <strcache_print_stats@@Base+0x590>
  41f834:	ldrb	w0, [x20, #44]
  41f838:	tbz	w0, #0, 41f860 <strcache_print_stats@@Base+0x618>
  41f83c:	ldr	x1, [x19, #400]
  41f840:	mov	x0, x21
  41f844:	bl	406710 <fputs@plt>
  41f848:	b	41f810 <strcache_print_stats@@Base+0x5c8>
  41f84c:	cmp	w0, #0x24
  41f850:	b.ne	41f858 <strcache_print_stats@@Base+0x610>  // b.any
  41f854:	bl	406e20 <putchar@plt>
  41f858:	ldrb	w0, [x21], #1
  41f85c:	bl	406e20 <putchar@plt>
  41f860:	ldrb	w0, [x21]
  41f864:	cbnz	w0, 41f84c <strcache_print_stats@@Base+0x604>
  41f868:	b	41f810 <strcache_print_stats@@Base+0x5c8>
  41f86c:	ldrb	w2, [x0, #47]
  41f870:	and	w2, w2, #0x1c
  41f874:	cmp	w2, #0x18
  41f878:	b.ne	41f880 <strcache_print_stats@@Base+0x638>  // b.any
  41f87c:	b	41f650 <strcache_print_stats@@Base+0x408>
  41f880:	ret
  41f884:	ldrb	w2, [x0, #47]
  41f888:	and	w2, w2, #0x1c
  41f88c:	cmp	w2, #0x18
  41f890:	b.eq	41f898 <strcache_print_stats@@Base+0x650>  // b.none
  41f894:	b	41f650 <strcache_print_stats@@Base+0x408>
  41f898:	ret

000000000041f89c <create_pattern_var@@Base>:
  41f89c:	stp	x29, x30, [sp, #-48]!
  41f8a0:	mov	x29, sp
  41f8a4:	stp	x19, x20, [sp, #16]
  41f8a8:	mov	x20, x1
  41f8ac:	str	x21, [sp, #32]
  41f8b0:	mov	x21, x0
  41f8b4:	bl	406700 <strlen@plt>
  41f8b8:	mov	x19, x0
  41f8bc:	mov	x0, #0x50                  	// #80
  41f8c0:	bl	416a78 <xcalloc@@Base>
  41f8c4:	adrp	x1, 440000 <output_context@@Base+0x1248>
  41f8c8:	add	x2, x1, #0xee0
  41f8cc:	ldr	x3, [x1, #3808]
  41f8d0:	cbz	x3, 41f940 <create_pattern_var@@Base+0xa4>
  41f8d4:	cmp	x19, #0xff
  41f8d8:	b.hi	41f920 <create_pattern_var@@Base+0x84>  // b.pmore
  41f8dc:	add	x1, x2, #0x8
  41f8e0:	ldr	x1, [x1, x19, lsl #3]
  41f8e4:	cbz	x1, 41f920 <create_pattern_var@@Base+0x84>
  41f8e8:	ldr	x3, [x1]
  41f8ec:	str	x3, [x0]
  41f8f0:	str	x0, [x1]
  41f8f4:	add	x20, x20, #0x1
  41f8f8:	stp	x20, x21, [x0, #8]
  41f8fc:	cmp	x19, #0xff
  41f900:	str	x19, [x0, #24]
  41f904:	b.hi	41f910 <create_pattern_var@@Base+0x74>  // b.pmore
  41f908:	add	x2, x2, #0x8
  41f90c:	str	x0, [x2, x19, lsl #3]
  41f910:	ldp	x19, x20, [sp, #16]
  41f914:	ldr	x21, [sp, #32]
  41f918:	ldp	x29, x30, [sp], #48
  41f91c:	ret
  41f920:	mov	x1, x2
  41f924:	ldr	x3, [x1]
  41f928:	cbz	x3, 41f8ec <create_pattern_var@@Base+0x50>
  41f92c:	ldr	x4, [x3, #24]
  41f930:	cmp	x4, x19
  41f934:	b.hi	41f8ec <create_pattern_var@@Base+0x50>  // b.pmore
  41f938:	mov	x1, x3
  41f93c:	b	41f924 <create_pattern_var@@Base+0x88>
  41f940:	str	x0, [x1, #3808]
  41f944:	str	xzr, [x0]
  41f948:	b	41f8f4 <create_pattern_var@@Base+0x58>

000000000041f94c <init_hash_global_variable_set@@Base>:
  41f94c:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41f950:	add	x0, x0, #0xee0
  41f954:	add	x0, x0, #0x808
  41f958:	adrp	x4, 41f000 <print_rule_data_base@@Base+0x324>
  41f95c:	adrp	x3, 41f000 <print_rule_data_base@@Base+0x324>
  41f960:	add	x4, x4, #0x470
  41f964:	add	x3, x3, #0x468
  41f968:	adrp	x2, 41f000 <print_rule_data_base@@Base+0x324>
  41f96c:	mov	x1, #0x20b                 	// #523
  41f970:	add	x2, x2, #0x4a0
  41f974:	b	4106f8 <hash_init@@Base>

000000000041f978 <define_variable_in_set@@Base>:
  41f978:	stp	x29, x30, [sp, #-144]!
  41f97c:	mov	x29, sp
  41f980:	stp	x19, x20, [sp, #16]
  41f984:	mov	w20, w3
  41f988:	stp	x21, x22, [sp, #32]
  41f98c:	mov	x22, x0
  41f990:	stp	x23, x24, [sp, #48]
  41f994:	mov	x24, x1
  41f998:	mov	w23, w4
  41f99c:	stp	x25, x26, [sp, #64]
  41f9a0:	mov	x25, x2
  41f9a4:	mov	x26, x6
  41f9a8:	str	x27, [sp, #80]
  41f9ac:	cbnz	x5, 41fa9c <define_variable_in_set@@Base+0x124>
  41f9b0:	adrp	x21, 440000 <output_context@@Base+0x1248>
  41f9b4:	add	x21, x21, #0xee0
  41f9b8:	add	x21, x21, #0x808
  41f9bc:	add	x1, sp, #0x60
  41f9c0:	mov	x0, x21
  41f9c4:	str	x22, [sp, #96]
  41f9c8:	str	w24, [sp, #136]
  41f9cc:	bl	4107ac <hash_find_slot@@Base>
  41f9d0:	mov	x27, x0
  41f9d4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41f9d8:	ldr	w0, [x0, #1648]
  41f9dc:	ldr	x19, [x27]
  41f9e0:	cbz	w0, 41f9f0 <define_variable_in_set@@Base+0x78>
  41f9e4:	cmp	w20, #0x1
  41f9e8:	mov	w1, #0x3                   	// #3
  41f9ec:	csel	w20, w20, w1, ne  // ne = any
  41f9f0:	cbz	x19, 41faac <define_variable_in_set@@Base+0x134>
  41f9f4:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41f9f8:	ldr	x1, [x1, #64]
  41f9fc:	cmp	x1, x19
  41fa00:	b.eq	41faac <define_variable_in_set@@Base+0x134>  // b.none
  41fa04:	cbz	w0, 41fa24 <define_variable_in_set@@Base+0xac>
  41fa08:	ldrb	w0, [x19, #47]
  41fa0c:	and	w1, w0, #0x1c
  41fa10:	cmp	w1, #0x4
  41fa14:	b.ne	41fa24 <define_variable_in_set@@Base+0xac>  // b.any
  41fa18:	mov	w1, #0x3                   	// #3
  41fa1c:	bfi	w0, w1, #2, #3
  41fa20:	strb	w0, [x19, #47]
  41fa24:	ldrb	w0, [x19, #47]
  41fa28:	ubfx	x0, x0, #2, #3
  41fa2c:	cmp	w0, w20
  41fa30:	b.gt	41fa7c <define_variable_in_set@@Base+0x104>
  41fa34:	ldr	x0, [x19, #8]
  41fa38:	bl	406c20 <free@plt>
  41fa3c:	mov	x0, x25
  41fa40:	bl	416c24 <xstrdup@@Base>
  41fa44:	str	x0, [x19, #8]
  41fa48:	cbz	x26, 41faa4 <define_variable_in_set@@Base+0x12c>
  41fa4c:	ldp	x0, x1, [x26]
  41fa50:	stp	x0, x1, [x19, #16]
  41fa54:	ldr	x0, [x26, #16]
  41fa58:	str	x0, [x19, #32]
  41fa5c:	and	w23, w23, #0x1
  41fa60:	ubfiz	w20, w20, #26, #3
  41fa64:	orr	w20, w20, w23
  41fa68:	ldr	w23, [x19, #44]
  41fa6c:	and	w23, w23, #0xfffffffe
  41fa70:	and	w23, w23, #0xe3ffffff
  41fa74:	orr	w20, w20, w23
  41fa78:	str	w20, [x19, #44]
  41fa7c:	mov	x0, x19
  41fa80:	ldp	x19, x20, [sp, #16]
  41fa84:	ldp	x21, x22, [sp, #32]
  41fa88:	ldp	x23, x24, [sp, #48]
  41fa8c:	ldp	x25, x26, [sp, #64]
  41fa90:	ldr	x27, [sp, #80]
  41fa94:	ldp	x29, x30, [sp], #144
  41fa98:	ret
  41fa9c:	mov	x21, x5
  41faa0:	b	41f9bc <define_variable_in_set@@Base+0x44>
  41faa4:	str	xzr, [x19, #16]
  41faa8:	b	41fa5c <define_variable_in_set@@Base+0xe4>
  41faac:	mov	x0, #0x30                  	// #48
  41fab0:	bl	416a78 <xcalloc@@Base>
  41fab4:	mov	x19, x0
  41fab8:	mov	x1, x24
  41fabc:	mov	x0, x22
  41fac0:	bl	416c40 <xstrndup@@Base>
  41fac4:	mov	x1, x19
  41fac8:	mov	x2, x27
  41facc:	str	x0, [x19]
  41fad0:	mov	x0, x21
  41fad4:	str	w24, [x19, #40]
  41fad8:	bl	4108b8 <hash_insert_at@@Base>
  41fadc:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41fae0:	add	x0, x0, #0xee0
  41fae4:	add	x1, x0, #0x808
  41fae8:	cmp	x21, x1
  41faec:	b.ne	41fafc <define_variable_in_set@@Base+0x184>  // b.any
  41faf0:	ldr	x1, [x0, #2144]
  41faf4:	add	x1, x1, #0x1
  41faf8:	str	x1, [x0, #2144]
  41fafc:	mov	x0, x25
  41fb00:	bl	416c24 <xstrdup@@Base>
  41fb04:	str	x0, [x19, #8]
  41fb08:	cbz	x26, 41fb1c <define_variable_in_set@@Base+0x1a4>
  41fb0c:	ldp	x0, x1, [x26]
  41fb10:	stp	x0, x1, [x19, #16]
  41fb14:	ldr	x0, [x26, #16]
  41fb18:	str	x0, [x19, #32]
  41fb1c:	ldr	w0, [x19, #44]
  41fb20:	and	w23, w23, #0x1
  41fb24:	mov	w4, #0x20                  	// #32
  41fb28:	ubfiz	w20, w20, #26, #3
  41fb2c:	movk	w4, #0x6000, lsl #16
  41fb30:	mov	w1, #0xffde                	// #65502
  41fb34:	orr	w23, w23, w4
  41fb38:	movk	w1, #0x83ff, lsl #16
  41fb3c:	orr	w20, w20, w23
  41fb40:	and	w0, w0, w1
  41fb44:	orr	w20, w20, w0
  41fb48:	str	w20, [x19, #44]
  41fb4c:	ldrb	w1, [x22]
  41fb50:	and	w0, w1, #0xffffffdf
  41fb54:	cmp	w1, #0x5f
  41fb58:	sub	w0, w0, #0x41
  41fb5c:	and	w0, w0, #0xff
  41fb60:	ccmp	w0, #0x19, #0x0, ne  // ne = any
  41fb64:	b.hi	41fb9c <define_variable_in_set@@Base+0x224>  // b.pmore
  41fb68:	ldrb	w0, [x22, #1]
  41fb6c:	add	x22, x22, #0x1
  41fb70:	cbz	w0, 41fa7c <define_variable_in_set@@Base+0x104>
  41fb74:	cmp	w0, #0x5f
  41fb78:	b.eq	41fb68 <define_variable_in_set@@Base+0x1f0>  // b.none
  41fb7c:	and	w1, w0, #0xffffffdf
  41fb80:	sub	w1, w1, #0x41
  41fb84:	and	w1, w1, #0xff
  41fb88:	cmp	w1, #0x19
  41fb8c:	b.ls	41fb68 <define_variable_in_set@@Base+0x1f0>  // b.plast
  41fb90:	sub	w0, w0, #0x30
  41fb94:	cmp	w0, #0x9
  41fb98:	b	41fb64 <define_variable_in_set@@Base+0x1ec>
  41fb9c:	ldrb	w0, [x19, #44]
  41fba0:	and	w0, w0, #0xffffffdf
  41fba4:	strb	w0, [x19, #44]
  41fba8:	b	41fa7c <define_variable_in_set@@Base+0x104>

000000000041fbac <free_variable_set@@Base>:
  41fbac:	stp	x29, x30, [sp, #-32]!
  41fbb0:	adrp	x1, 41f000 <print_rule_data_base@@Base+0x324>
  41fbb4:	add	x1, x1, #0x4c0
  41fbb8:	mov	x29, sp
  41fbbc:	str	x19, [sp, #16]
  41fbc0:	mov	x19, x0
  41fbc4:	ldr	x0, [x0, #8]
  41fbc8:	bl	410bc0 <hash_map@@Base>
  41fbcc:	ldr	x0, [x19, #8]
  41fbd0:	mov	w1, #0x1                   	// #1
  41fbd4:	bl	410b80 <hash_free@@Base>
  41fbd8:	ldr	x0, [x19, #8]
  41fbdc:	bl	406c20 <free@plt>
  41fbe0:	mov	x0, x19
  41fbe4:	ldr	x19, [sp, #16]
  41fbe8:	ldp	x29, x30, [sp], #32
  41fbec:	b	406c20 <free@plt>

000000000041fbf0 <undefine_variable_in_set@@Base>:
  41fbf0:	stp	x29, x30, [sp, #-96]!
  41fbf4:	mov	x29, sp
  41fbf8:	stp	x19, x20, [sp, #16]
  41fbfc:	str	x21, [sp, #32]
  41fc00:	mov	w21, w2
  41fc04:	cbnz	x3, 41fcd4 <undefine_variable_in_set@@Base+0xe4>
  41fc08:	adrp	x19, 440000 <output_context@@Base+0x1248>
  41fc0c:	add	x19, x19, #0xee0
  41fc10:	add	x19, x19, #0x808
  41fc14:	str	x0, [sp, #48]
  41fc18:	mov	x0, x19
  41fc1c:	str	w1, [sp, #88]
  41fc20:	add	x1, sp, #0x30
  41fc24:	bl	4107ac <hash_find_slot@@Base>
  41fc28:	mov	x1, x0
  41fc2c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41fc30:	ldr	w0, [x0, #1648]
  41fc34:	cbz	w0, 41fc44 <undefine_variable_in_set@@Base+0x54>
  41fc38:	cmp	w21, #0x1
  41fc3c:	mov	w2, #0x3                   	// #3
  41fc40:	csel	w21, w21, w2, ne  // ne = any
  41fc44:	ldr	x20, [x1]
  41fc48:	cbz	x20, 41fcc4 <undefine_variable_in_set@@Base+0xd4>
  41fc4c:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  41fc50:	ldr	x2, [x2, #64]
  41fc54:	cmp	x2, x20
  41fc58:	b.eq	41fcc4 <undefine_variable_in_set@@Base+0xd4>  // b.none
  41fc5c:	cbz	w0, 41fc7c <undefine_variable_in_set@@Base+0x8c>
  41fc60:	ldrb	w2, [x20, #47]
  41fc64:	and	w0, w2, #0x1c
  41fc68:	cmp	w0, #0x4
  41fc6c:	b.ne	41fc7c <undefine_variable_in_set@@Base+0x8c>  // b.any
  41fc70:	mov	w0, #0x3                   	// #3
  41fc74:	bfi	w2, w0, #2, #3
  41fc78:	strb	w2, [x20, #47]
  41fc7c:	ldrb	w0, [x20, #47]
  41fc80:	ubfx	x0, x0, #2, #3
  41fc84:	cmp	w0, w21
  41fc88:	b.gt	41fcc4 <undefine_variable_in_set@@Base+0xd4>
  41fc8c:	mov	x0, x19
  41fc90:	bl	410a90 <hash_delete_at@@Base>
  41fc94:	mov	x0, x20
  41fc98:	bl	41f4c0 <strcache_print_stats@@Base+0x278>
  41fc9c:	mov	x0, x20
  41fca0:	bl	406c20 <free@plt>
  41fca4:	adrp	x0, 440000 <output_context@@Base+0x1248>
  41fca8:	add	x0, x0, #0xee0
  41fcac:	add	x1, x0, #0x808
  41fcb0:	cmp	x19, x1
  41fcb4:	b.ne	41fcc4 <undefine_variable_in_set@@Base+0xd4>  // b.any
  41fcb8:	ldr	x1, [x0, #2144]
  41fcbc:	add	x1, x1, #0x1
  41fcc0:	str	x1, [x0, #2144]
  41fcc4:	ldp	x19, x20, [sp, #16]
  41fcc8:	ldr	x21, [sp, #32]
  41fccc:	ldp	x29, x30, [sp], #96
  41fcd0:	ret
  41fcd4:	mov	x19, x3
  41fcd8:	b	41fc14 <undefine_variable_in_set@@Base+0x24>

000000000041fcdc <lookup_variable@@Base>:
  41fcdc:	stp	x29, x30, [sp, #-160]!
  41fce0:	mov	x29, sp
  41fce4:	str	x0, [sp, #112]
  41fce8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  41fcec:	stp	x19, x20, [sp, #16]
  41fcf0:	ldr	x19, [x0, #304]
  41fcf4:	stp	x21, x22, [sp, #32]
  41fcf8:	mov	w21, #0x0                   	// #0
  41fcfc:	stp	x23, x24, [sp, #48]
  41fd00:	stp	x25, x26, [sp, #64]
  41fd04:	stp	x27, x28, [sp, #80]
  41fd08:	str	w1, [sp, #152]
  41fd0c:	cbnz	x19, 41fd18 <lookup_variable@@Base+0x3c>
  41fd10:	mov	x20, #0x0                   	// #0
  41fd14:	b	41fde8 <lookup_variable@@Base+0x10c>
  41fd18:	ldr	x0, [x19, #8]
  41fd1c:	add	x1, sp, #0x70
  41fd20:	bl	41088c <hash_find_item@@Base>
  41fd24:	mov	x20, x0
  41fd28:	cbz	x0, 41fe7c <lookup_variable@@Base+0x1a0>
  41fd2c:	ldrb	w0, [x0, #44]
  41fd30:	cbz	w21, 41fd38 <lookup_variable@@Base+0x5c>
  41fd34:	tbnz	w0, #7, 41fe7c <lookup_variable@@Base+0x1a0>
  41fd38:	tbz	w0, #4, 41fde8 <lookup_variable@@Base+0x10c>
  41fd3c:	adrp	x5, 440000 <output_context@@Base+0x1248>
  41fd40:	add	x25, x5, #0xee0
  41fd44:	ldr	x1, [x25, #2144]
  41fd48:	ldr	x0, [x25, #2152]
  41fd4c:	cmp	x1, x0
  41fd50:	b.eq	41fde8 <lookup_variable@@Base+0x10c>  // b.none
  41fd54:	ldr	x0, [x20]
  41fd58:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  41fd5c:	add	x1, x1, #0x31b
  41fd60:	cmp	x0, x1
  41fd64:	b.eq	41fd88 <lookup_variable@@Base+0xac>  // b.none
  41fd68:	ldrb	w1, [x0]
  41fd6c:	cmp	w1, #0x2e
  41fd70:	b.ne	41fde8 <lookup_variable@@Base+0x10c>  // b.any
  41fd74:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  41fd78:	add	x0, x0, #0x1
  41fd7c:	add	x1, x1, #0x31c
  41fd80:	bl	406be0 <strcmp@plt>
  41fd84:	cbnz	w0, 41fde8 <lookup_variable@@Base+0x10c>
  41fd88:	ldr	x22, [x20, #8]
  41fd8c:	mov	x19, #0x1f4                 	// #500
  41fd90:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  41fd94:	mov	x0, x22
  41fd98:	bl	406700 <strlen@plt>
  41fd9c:	udiv	x21, x0, x19
  41fda0:	ldr	x26, [x25, #2056]
  41fda4:	ldr	x23, [x25, #2088]
  41fda8:	madd	x21, x21, x19, x19
  41fdac:	mov	x1, x21
  41fdb0:	add	x0, x26, x23, lsl #3
  41fdb4:	str	x0, [sp, #104]
  41fdb8:	mov	x0, x22
  41fdbc:	mov	w22, w19
  41fdc0:	bl	416aa0 <xrealloc@@Base>
  41fdc4:	mov	x3, x0
  41fdc8:	mov	x23, #0x0                   	// #0
  41fdcc:	str	x0, [x20, #8]
  41fdd0:	ldr	x0, [sp, #104]
  41fdd4:	cmp	x0, x26
  41fdd8:	b.hi	41fe08 <lookup_variable@@Base+0x12c>  // b.pmore
  41fddc:	ldr	x0, [x25, #2144]
  41fde0:	sturb	wzr, [x3, #-1]
  41fde4:	str	x0, [x25, #2152]
  41fde8:	mov	x0, x20
  41fdec:	ldp	x19, x20, [sp, #16]
  41fdf0:	ldp	x21, x22, [sp, #32]
  41fdf4:	ldp	x23, x24, [sp, #48]
  41fdf8:	ldp	x25, x26, [sp, #64]
  41fdfc:	ldp	x27, x28, [sp, #80]
  41fe00:	ldp	x29, x30, [sp], #160
  41fe04:	ret
  41fe08:	ldr	x28, [x26]
  41fe0c:	cbz	x28, 41fe74 <lookup_variable@@Base+0x198>
  41fe10:	ldr	x0, [x24, #64]
  41fe14:	cmp	x28, x0
  41fe18:	b.eq	41fe74 <lookup_variable@@Base+0x198>  // b.none
  41fe1c:	ldr	w27, [x28, #40]
  41fe20:	add	w1, w27, #0x1
  41fe24:	add	x23, x23, w1, sxtw
  41fe28:	cmp	x23, x21
  41fe2c:	b.ls	41fe54 <lookup_variable@@Base+0x178>  // b.plast
  41fe30:	sdiv	w1, w1, w22
  41fe34:	ldr	x0, [x20, #8]
  41fe38:	madd	w1, w1, w22, w22
  41fe3c:	sub	x19, x3, x0
  41fe40:	add	x21, x21, w1, sxtw
  41fe44:	mov	x1, x21
  41fe48:	bl	416aa0 <xrealloc@@Base>
  41fe4c:	add	x3, x0, x19
  41fe50:	str	x0, [x20, #8]
  41fe54:	ldr	x1, [x28]
  41fe58:	sxtw	x27, w27
  41fe5c:	mov	x0, x3
  41fe60:	mov	x2, x27
  41fe64:	bl	4066c0 <memcpy@plt>
  41fe68:	add	x3, x0, x27
  41fe6c:	mov	w0, #0x20                  	// #32
  41fe70:	strb	w0, [x3], #1
  41fe74:	add	x26, x26, #0x8
  41fe78:	b	41fdd0 <lookup_variable@@Base+0xf4>
  41fe7c:	ldr	w0, [x19, #16]
  41fe80:	ldr	x19, [x19]
  41fe84:	orr	w21, w21, w0
  41fe88:	b	41fd0c <lookup_variable@@Base+0x30>

000000000041fe8c <lookup_variable_in_set@@Base>:
  41fe8c:	stp	x29, x30, [sp, #-64]!
  41fe90:	mov	x29, sp
  41fe94:	str	x0, [sp, #16]
  41fe98:	mov	x0, x2
  41fe9c:	str	w1, [sp, #56]
  41fea0:	add	x1, sp, #0x10
  41fea4:	bl	41088c <hash_find_item@@Base>
  41fea8:	ldp	x29, x30, [sp], #64
  41feac:	ret

000000000041feb0 <create_new_variable_set@@Base>:
  41feb0:	stp	x29, x30, [sp, #-32]!
  41feb4:	mov	x0, #0x58                  	// #88
  41feb8:	mov	x29, sp
  41febc:	str	x19, [sp, #16]
  41fec0:	bl	416a54 <xmalloc@@Base>
  41fec4:	adrp	x4, 41f000 <print_rule_data_base@@Base+0x324>
  41fec8:	adrp	x3, 41f000 <print_rule_data_base@@Base+0x324>
  41fecc:	add	x4, x4, #0x470
  41fed0:	add	x3, x3, #0x468
  41fed4:	adrp	x2, 41f000 <print_rule_data_base@@Base+0x324>
  41fed8:	add	x2, x2, #0x4a0
  41fedc:	mov	x1, #0xd                   	// #13
  41fee0:	mov	x19, x0
  41fee4:	bl	4106f8 <hash_init@@Base>
  41fee8:	mov	x0, #0x18                  	// #24
  41feec:	bl	416a54 <xmalloc@@Base>
  41fef0:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  41fef4:	str	wzr, [x0, #16]
  41fef8:	ldr	x2, [x2, #304]
  41fefc:	stp	x2, x19, [x0]
  41ff00:	ldr	x19, [sp, #16]
  41ff04:	ldp	x29, x30, [sp], #32
  41ff08:	ret

000000000041ff0c <push_new_variable_scope@@Base>:
  41ff0c:	stp	x29, x30, [sp, #-16]!
  41ff10:	mov	x29, sp
  41ff14:	bl	41feb0 <create_new_variable_set@@Base>
  41ff18:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  41ff1c:	add	x3, x1, #0x130
  41ff20:	ldr	x2, [x0]
  41ff24:	str	x0, [x1, #304]
  41ff28:	add	x3, x3, #0x8
  41ff2c:	cmp	x2, x3
  41ff30:	b.ne	41ff54 <push_new_variable_scope@@Base+0x48>  // b.any
  41ff34:	ldr	x4, [x2, #8]
  41ff38:	ldr	x3, [x0, #8]
  41ff3c:	str	x4, [x0, #8]
  41ff40:	str	x3, [x2, #8]
  41ff44:	ldr	x3, [x2]
  41ff48:	str	x3, [x0]
  41ff4c:	str	x2, [x1, #304]
  41ff50:	str	x0, [x2]
  41ff54:	ldr	x0, [x1, #304]
  41ff58:	ldp	x29, x30, [sp], #16
  41ff5c:	ret

000000000041ff60 <pop_variable_scope@@Base>:
  41ff60:	stp	x29, x30, [sp, #-32]!
  41ff64:	adrp	x2, 43e000 <expanding_var@@Base+0x328>
  41ff68:	add	x3, x2, #0x130
  41ff6c:	mov	x29, sp
  41ff70:	ldr	x0, [x2, #304]
  41ff74:	str	x19, [sp, #16]
  41ff78:	add	x1, x3, #0x8
  41ff7c:	cmp	x0, x1
  41ff80:	b.eq	41ffbc <pop_variable_scope@@Base+0x5c>  // b.none
  41ff84:	ldp	x1, x19, [x0]
  41ff88:	str	x1, [x2, #304]
  41ff8c:	bl	406c20 <free@plt>
  41ff90:	mov	x0, x19
  41ff94:	adrp	x1, 41f000 <print_rule_data_base@@Base+0x324>
  41ff98:	add	x1, x1, #0x4c0
  41ff9c:	bl	410bc0 <hash_map@@Base>
  41ffa0:	mov	x0, x19
  41ffa4:	mov	w1, #0x1                   	// #1
  41ffa8:	bl	410b80 <hash_free@@Base>
  41ffac:	mov	x0, x19
  41ffb0:	ldr	x19, [sp, #16]
  41ffb4:	ldp	x29, x30, [sp], #32
  41ffb8:	b	406c20 <free@plt>
  41ffbc:	ldr	x0, [x0]
  41ffc0:	ldr	x19, [x1, #8]
  41ffc4:	ldr	x2, [x0, #8]
  41ffc8:	str	x2, [x1, #8]
  41ffcc:	ldr	x2, [x0]
  41ffd0:	str	x2, [x3, #8]
  41ffd4:	ldr	w2, [x0, #16]
  41ffd8:	str	w2, [x1, #16]
  41ffdc:	b	41ff8c <pop_variable_scope@@Base+0x2c>

000000000041ffe0 <merge_variable_set_lists@@Base>:
  41ffe0:	cbz	x1, 420148 <merge_variable_set_lists@@Base+0x168>
  41ffe4:	stp	x29, x30, [sp, #-112]!
  41ffe8:	mov	x29, sp
  41ffec:	stp	x19, x20, [sp, #16]
  41fff0:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  41fff4:	add	x20, x20, #0x130
  41fff8:	stp	x21, x22, [sp, #32]
  41fffc:	mov	x22, x0
  420000:	add	x0, x20, #0x8
  420004:	stp	x23, x24, [sp, #48]
  420008:	cmp	x1, x0
  42000c:	stp	x25, x26, [sp, #64]
  420010:	stp	x27, x28, [sp, #80]
  420014:	b.eq	420024 <merge_variable_set_lists@@Base+0x44>  // b.none
  420018:	ldr	x19, [x22]
  42001c:	cbnz	x19, 420084 <merge_variable_set_lists@@Base+0xa4>
  420020:	str	x1, [x22]
  420024:	ldp	x19, x20, [sp, #16]
  420028:	ldp	x21, x22, [sp, #32]
  42002c:	ldp	x23, x24, [sp, #48]
  420030:	ldp	x25, x26, [sp, #64]
  420034:	ldp	x27, x28, [sp, #80]
  420038:	ldp	x29, x30, [sp], #112
  42003c:	ret
  420040:	cmp	x2, x1
  420044:	b.eq	420024 <merge_variable_set_lists@@Base+0x44>  // b.none
  420048:	ldr	x2, [x2]
  42004c:	cmp	x2, x0
  420050:	b.ne	420040 <merge_variable_set_lists@@Base+0x60>  // b.any
  420054:	adrp	x21, 440000 <output_context@@Base+0x1248>
  420058:	add	x21, x21, #0xee0
  42005c:	add	x2, x21, #0x808
  420060:	mov	x0, #0x0                   	// #0
  420064:	adrp	x25, 43e000 <expanding_var@@Base+0x328>
  420068:	str	x2, [sp, #104]
  42006c:	add	x2, x20, #0x8
  420070:	cmp	x19, x2
  420074:	b.ne	42008c <merge_variable_set_lists@@Base+0xac>  // b.any
  420078:	cbz	x0, 420020 <merge_variable_set_lists@@Base+0x40>
  42007c:	str	x1, [x0]
  420080:	b	420024 <merge_variable_set_lists@@Base+0x44>
  420084:	mov	x2, x19
  420088:	b	42004c <merge_variable_set_lists@@Base+0x6c>
  42008c:	ldp	x26, x0, [x1]
  420090:	ldr	x24, [x19, #8]
  420094:	ldr	x27, [x0]
  420098:	ldr	x23, [x0, #32]
  42009c:	ldr	x0, [sp, #104]
  4200a0:	add	x23, x27, x23, lsl #3
  4200a4:	cmp	x24, x0
  4200a8:	cset	x0, eq  // eq = none
  4200ac:	str	x0, [sp, #96]
  4200b0:	cmp	x23, x27
  4200b4:	b.hi	4200d8 <merge_variable_set_lists@@Base+0xf8>  // b.pmore
  4200b8:	add	x2, x20, #0x8
  4200bc:	mov	x0, x19
  4200c0:	cmp	x26, x2
  4200c4:	ldr	x1, [x19]
  4200c8:	b.eq	420024 <merge_variable_set_lists@@Base+0x44>  // b.none
  4200cc:	mov	x19, x1
  4200d0:	mov	x1, x26
  4200d4:	b	42006c <merge_variable_set_lists@@Base+0x8c>
  4200d8:	ldr	x28, [x27]
  4200dc:	cbz	x28, 42012c <merge_variable_set_lists@@Base+0x14c>
  4200e0:	ldr	x0, [x25, #64]
  4200e4:	cmp	x28, x0
  4200e8:	b.eq	42012c <merge_variable_set_lists@@Base+0x14c>  // b.none
  4200ec:	mov	x1, x28
  4200f0:	mov	x0, x24
  4200f4:	bl	4107ac <hash_find_slot@@Base>
  4200f8:	mov	x2, x0
  4200fc:	ldr	x0, [x0]
  420100:	cbz	x0, 420110 <merge_variable_set_lists@@Base+0x130>
  420104:	ldr	x4, [x25, #64]
  420108:	cmp	x0, x4
  42010c:	b.ne	420134 <merge_variable_set_lists@@Base+0x154>  // b.any
  420110:	mov	x1, x28
  420114:	mov	x0, x24
  420118:	bl	4108b8 <hash_insert_at@@Base>
  42011c:	ldr	x1, [sp, #96]
  420120:	ldr	x0, [x21, #2144]
  420124:	add	x0, x0, x1
  420128:	str	x0, [x21, #2144]
  42012c:	add	x27, x27, #0x8
  420130:	b	4200b0 <merge_variable_set_lists@@Base+0xd0>
  420134:	ldr	x0, [x28, #8]
  420138:	bl	406c20 <free@plt>
  42013c:	mov	x0, x28
  420140:	bl	406c20 <free@plt>
  420144:	b	42012c <merge_variable_set_lists@@Base+0x14c>
  420148:	ret

000000000042014c <define_automatic_variables@@Base>:
  42014c:	stp	x29, x30, [sp, #-256]!
  420150:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  420154:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  420158:	mov	x29, sp
  42015c:	ldr	w2, [x0, #2024]
  420160:	add	x1, x1, #0xc39
  420164:	stp	x19, x20, [sp, #16]
  420168:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  42016c:	add	x0, sp, #0x38
  420170:	stp	x21, x22, [sp, #32]
  420174:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x1720>
  420178:	bl	4067a0 <sprintf@plt>
  42017c:	ldr	x0, [x19, #304]
  420180:	add	x2, sp, #0x38
  420184:	mov	w4, #0x0                   	// #0
  420188:	mov	x6, #0x0                   	// #0
  42018c:	mov	w3, #0x1                   	// #1
  420190:	mov	x1, #0x9                   	// #9
  420194:	ldr	x5, [x0, #8]
  420198:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x2720>
  42019c:	add	x0, x0, #0x41f
  4201a0:	add	x20, x20, #0x819
  4201a4:	bl	41f978 <define_variable_in_set@@Base>
  4201a8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4201ac:	ldr	x2, [x0, #344]
  4201b0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  4201b4:	ldr	x4, [x0, #1896]
  4201b8:	cbz	x4, 4201c4 <define_automatic_variables@@Base+0x78>
  4201bc:	ldrb	w0, [x4]
  4201c0:	cbnz	w0, 420550 <define_automatic_variables@@Base+0x404>
  4201c4:	mov	x3, x20
  4201c8:	mov	x4, x20
  4201cc:	add	x0, sp, #0x38
  4201d0:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4201d4:	add	x1, x1, #0x7de
  4201d8:	bl	4067a0 <sprintf@plt>
  4201dc:	ldr	x0, [x19, #304]
  4201e0:	add	x2, sp, #0x38
  4201e4:	mov	x6, #0x0                   	// #0
  4201e8:	mov	w4, #0x0                   	// #0
  4201ec:	mov	w3, #0x0                   	// #0
  4201f0:	mov	x1, #0xc                   	// #12
  4201f4:	ldr	x5, [x0, #8]
  4201f8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4201fc:	add	x0, x0, #0xe59
  420200:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  420204:	bl	41f978 <define_variable_in_set@@Base>
  420208:	ldr	x0, [x19, #304]
  42020c:	mov	x6, #0x0                   	// #0
  420210:	mov	w4, #0x0                   	// #0
  420214:	mov	w3, #0x0                   	// #0
  420218:	mov	x1, #0x9                   	// #9
  42021c:	ldr	x5, [x0, #8]
  420220:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  420224:	ldr	x2, [x0, #336]
  420228:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  42022c:	add	x0, x0, #0xe66
  420230:	bl	41f978 <define_variable_in_set@@Base>
  420234:	ldr	x0, [x19, #304]
  420238:	mov	x1, #0x5                   	// #5
  42023c:	ldr	x2, [x22, #136]
  420240:	mov	x6, #0x0                   	// #0
  420244:	ldr	x5, [x0, #8]
  420248:	mov	w4, #0x0                   	// #0
  42024c:	mov	w3, #0x0                   	// #0
  420250:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420254:	add	x0, x0, #0xb9
  420258:	bl	41f978 <define_variable_in_set@@Base>
  42025c:	mov	x21, x0
  420260:	ldr	x0, [x0, #8]
  420264:	ldrb	w1, [x0]
  420268:	cbz	w1, 420280 <define_automatic_variables@@Base+0x134>
  42026c:	ldrb	w2, [x21, #47]
  420270:	mov	w1, #0x14                  	// #20
  420274:	and	w1, w1, w2
  420278:	cmp	w1, #0x4
  42027c:	b.ne	4202a0 <define_automatic_variables@@Base+0x154>  // b.any
  420280:	bl	406c20 <free@plt>
  420284:	ldrb	w0, [x21, #47]
  420288:	mov	w1, #0x2                   	// #2
  42028c:	bfi	w0, w1, #2, #3
  420290:	strb	w0, [x21, #47]
  420294:	ldr	x0, [x22, #136]
  420298:	bl	416c24 <xstrdup@@Base>
  42029c:	str	x0, [x21, #8]
  4202a0:	ldr	x0, [x19, #304]
  4202a4:	mov	x1, #0x9                   	// #9
  4202a8:	mov	x2, x20
  4202ac:	mov	x6, #0x0                   	// #0
  4202b0:	mov	w4, #0x0                   	// #0
  4202b4:	mov	w3, #0x0                   	// #0
  4202b8:	ldr	x5, [x0, #8]
  4202bc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4202c0:	add	x0, x0, #0xe70
  4202c4:	bl	41f978 <define_variable_in_set@@Base>
  4202c8:	ldrb	w1, [x0, #47]
  4202cc:	mov	w2, #0x2                   	// #2
  4202d0:	mov	x6, #0x0                   	// #0
  4202d4:	mov	w4, #0x1                   	// #1
  4202d8:	mov	w3, #0x6                   	// #6
  4202dc:	bfi	w1, w2, #5, #2
  4202e0:	strb	w1, [x0, #47]
  4202e4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4202e8:	mov	x1, #0x2                   	// #2
  4202ec:	ldr	x0, [x19, #304]
  4202f0:	add	x2, x2, #0xe7a
  4202f4:	ldr	x5, [x0, #8]
  4202f8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4202fc:	add	x0, x0, #0xe95
  420300:	bl	41f978 <define_variable_in_set@@Base>
  420304:	ldr	x0, [x19, #304]
  420308:	mov	x6, #0x0                   	// #0
  42030c:	mov	w4, #0x1                   	// #1
  420310:	mov	w3, #0x6                   	// #6
  420314:	mov	x1, #0x2                   	// #2
  420318:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  42031c:	ldr	x5, [x0, #8]
  420320:	add	x2, x2, #0xe98
  420324:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420328:	add	x0, x0, #0xeb3
  42032c:	bl	41f978 <define_variable_in_set@@Base>
  420330:	ldr	x0, [x19, #304]
  420334:	mov	x6, #0x0                   	// #0
  420338:	mov	w4, #0x1                   	// #1
  42033c:	mov	w3, #0x6                   	// #6
  420340:	mov	x1, #0x2                   	// #2
  420344:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  420348:	ldr	x5, [x0, #8]
  42034c:	add	x2, x2, #0xeb6
  420350:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420354:	add	x0, x0, #0xed1
  420358:	bl	41f978 <define_variable_in_set@@Base>
  42035c:	ldr	x0, [x19, #304]
  420360:	mov	x6, #0x0                   	// #0
  420364:	mov	w4, #0x1                   	// #1
  420368:	mov	w3, #0x6                   	// #6
  42036c:	mov	x1, #0x2                   	// #2
  420370:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  420374:	ldr	x5, [x0, #8]
  420378:	add	x2, x2, #0xed4
  42037c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420380:	add	x0, x0, #0xeef
  420384:	bl	41f978 <define_variable_in_set@@Base>
  420388:	ldr	x0, [x19, #304]
  42038c:	mov	x6, #0x0                   	// #0
  420390:	mov	w4, #0x1                   	// #1
  420394:	mov	w3, #0x6                   	// #6
  420398:	mov	x1, #0x2                   	// #2
  42039c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4203a0:	ldr	x5, [x0, #8]
  4203a4:	add	x2, x2, #0xef2
  4203a8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4203ac:	add	x0, x0, #0xf0d
  4203b0:	bl	41f978 <define_variable_in_set@@Base>
  4203b4:	ldr	x0, [x19, #304]
  4203b8:	mov	x6, #0x0                   	// #0
  4203bc:	mov	w4, #0x1                   	// #1
  4203c0:	mov	w3, #0x6                   	// #6
  4203c4:	mov	x1, #0x2                   	// #2
  4203c8:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4203cc:	ldr	x5, [x0, #8]
  4203d0:	add	x2, x2, #0xf10
  4203d4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4203d8:	add	x0, x0, #0xf2b
  4203dc:	bl	41f978 <define_variable_in_set@@Base>
  4203e0:	ldr	x0, [x19, #304]
  4203e4:	mov	x6, #0x0                   	// #0
  4203e8:	mov	w4, #0x1                   	// #1
  4203ec:	mov	w3, #0x6                   	// #6
  4203f0:	mov	x1, #0x2                   	// #2
  4203f4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4203f8:	ldr	x5, [x0, #8]
  4203fc:	add	x2, x2, #0xf2e
  420400:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420404:	add	x0, x0, #0xf49
  420408:	bl	41f978 <define_variable_in_set@@Base>
  42040c:	ldr	x0, [x19, #304]
  420410:	mov	x6, #0x0                   	// #0
  420414:	mov	w4, #0x1                   	// #1
  420418:	mov	w3, #0x6                   	// #6
  42041c:	mov	x1, #0x2                   	// #2
  420420:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  420424:	ldr	x5, [x0, #8]
  420428:	add	x2, x2, #0xf4c
  42042c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420430:	add	x0, x0, #0xf59
  420434:	bl	41f978 <define_variable_in_set@@Base>
  420438:	ldr	x0, [x19, #304]
  42043c:	mov	x6, #0x0                   	// #0
  420440:	mov	w4, #0x1                   	// #1
  420444:	mov	w3, #0x6                   	// #6
  420448:	mov	x1, #0x2                   	// #2
  42044c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  420450:	ldr	x5, [x0, #8]
  420454:	add	x2, x2, #0xf5c
  420458:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  42045c:	add	x0, x0, #0xf69
  420460:	bl	41f978 <define_variable_in_set@@Base>
  420464:	ldr	x0, [x19, #304]
  420468:	mov	x6, #0x0                   	// #0
  42046c:	mov	w4, #0x1                   	// #1
  420470:	mov	w3, #0x6                   	// #6
  420474:	mov	x1, #0x2                   	// #2
  420478:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  42047c:	ldr	x5, [x0, #8]
  420480:	add	x2, x2, #0xf6c
  420484:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420488:	add	x0, x0, #0xf79
  42048c:	bl	41f978 <define_variable_in_set@@Base>
  420490:	ldr	x0, [x19, #304]
  420494:	mov	x6, #0x0                   	// #0
  420498:	mov	w4, #0x1                   	// #1
  42049c:	mov	w3, #0x6                   	// #6
  4204a0:	mov	x1, #0x2                   	// #2
  4204a4:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4204a8:	ldr	x5, [x0, #8]
  4204ac:	add	x2, x2, #0xf7c
  4204b0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4204b4:	add	x0, x0, #0xf89
  4204b8:	bl	41f978 <define_variable_in_set@@Base>
  4204bc:	ldr	x0, [x19, #304]
  4204c0:	mov	x6, #0x0                   	// #0
  4204c4:	mov	w4, #0x1                   	// #1
  4204c8:	mov	w3, #0x6                   	// #6
  4204cc:	mov	x1, #0x2                   	// #2
  4204d0:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  4204d4:	ldr	x5, [x0, #8]
  4204d8:	add	x2, x2, #0xf8c
  4204dc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  4204e0:	add	x0, x0, #0xf99
  4204e4:	bl	41f978 <define_variable_in_set@@Base>
  4204e8:	ldr	x0, [x19, #304]
  4204ec:	mov	x6, #0x0                   	// #0
  4204f0:	mov	w4, #0x1                   	// #1
  4204f4:	mov	w3, #0x6                   	// #6
  4204f8:	mov	x1, #0x2                   	// #2
  4204fc:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  420500:	ldr	x5, [x0, #8]
  420504:	add	x2, x2, #0xf9c
  420508:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  42050c:	add	x0, x0, #0xfa9
  420510:	bl	41f978 <define_variable_in_set@@Base>
  420514:	ldr	x0, [x19, #304]
  420518:	mov	x6, #0x0                   	// #0
  42051c:	mov	w4, #0x1                   	// #1
  420520:	mov	w3, #0x6                   	// #6
  420524:	mov	x1, #0x2                   	// #2
  420528:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x4720>
  42052c:	ldr	x5, [x0, #8]
  420530:	add	x2, x2, #0xfac
  420534:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x4720>
  420538:	add	x0, x0, #0xfb9
  42053c:	bl	41f978 <define_variable_in_set@@Base>
  420540:	ldp	x19, x20, [sp, #16]
  420544:	ldp	x21, x22, [sp, #32]
  420548:	ldp	x29, x30, [sp], #256
  42054c:	ret
  420550:	adrp	x3, 425000 <_IO_stdin_used@@Base+0x2720>
  420554:	add	x3, x3, #0xf1
  420558:	b	4201cc <define_automatic_variables@@Base+0x80>

000000000042055c <target_environment@@Base>:
  42055c:	stp	x29, x30, [sp, #-256]!
  420560:	mov	x29, sp
  420564:	stp	x19, x20, [sp, #16]
  420568:	stp	x21, x22, [sp, #32]
  42056c:	mov	x21, x0
  420570:	stp	x23, x24, [sp, #48]
  420574:	stp	x25, x26, [sp, #64]
  420578:	stp	x27, x28, [sp, #80]
  42057c:	cbnz	x0, 420670 <target_environment@@Base+0x114>
  420580:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  420584:	ldr	x20, [x0, #304]
  420588:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  42058c:	mov	w26, #0x8                   	// #8
  420590:	add	x23, x23, #0x790
  420594:	movk	w26, #0x6000, lsl #16
  420598:	add	x0, sp, #0xa8
  42059c:	adrp	x4, 41f000 <print_rule_data_base@@Base+0x324>
  4205a0:	adrp	x3, 41f000 <print_rule_data_base@@Base+0x324>
  4205a4:	add	x4, x4, #0x470
  4205a8:	add	x3, x3, #0x468
  4205ac:	adrp	x2, 41f000 <print_rule_data_base@@Base+0x324>
  4205b0:	mov	x1, #0x20b                 	// #523
  4205b4:	add	x2, x2, #0x4a0
  4205b8:	bl	4106f8 <hash_init@@Base>
  4205bc:	cbnz	x20, 420678 <target_environment@@Base+0x11c>
  4205c0:	mov	w0, #0x9                   	// #9
  4205c4:	add	x1, sp, #0x78
  4205c8:	adrp	x23, 425000 <_IO_stdin_used@@Base+0x2720>
  4205cc:	add	x23, x23, #0x41f
  4205d0:	str	x23, [sp, #120]
  4205d4:	adrp	x24, 425000 <_IO_stdin_used@@Base+0x2720>
  4205d8:	str	w0, [sp, #160]
  4205dc:	add	x0, sp, #0xa8
  4205e0:	bl	410ac8 <hash_delete@@Base>
  4205e4:	add	x24, x24, #0x6e2
  4205e8:	ldr	x0, [sp, #216]
  4205ec:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  4205f0:	add	x0, x0, #0x2
  4205f4:	lsl	x0, x0, #3
  4205f8:	bl	416a54 <xmalloc@@Base>
  4205fc:	ldr	x28, [sp, #168]
  420600:	mov	x22, x0
  420604:	ldr	x25, [sp, #200]
  420608:	mov	x20, x0
  42060c:	add	x25, x28, x25, lsl #3
  420610:	cmp	x28, x25
  420614:	b.cc	4207e4 <target_environment@@Base+0x288>  // b.lo, b.ul, b.last
  420618:	mov	x0, #0x64                  	// #100
  42061c:	bl	416a54 <xmalloc@@Base>
  420620:	adrp	x1, 441000 <commands_started@@Base+0x1c0>
  420624:	mov	x2, x23
  420628:	ldr	w3, [x1, #2024]
  42062c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  420630:	str	x0, [x20]
  420634:	add	x1, x1, #0x6e4
  420638:	add	w3, w3, #0x1
  42063c:	bl	4067a0 <sprintf@plt>
  420640:	str	xzr, [x20, #8]
  420644:	add	x0, sp, #0xa8
  420648:	mov	w1, #0x0                   	// #0
  42064c:	bl	410b80 <hash_free@@Base>
  420650:	mov	x0, x22
  420654:	ldp	x19, x20, [sp, #16]
  420658:	ldp	x21, x22, [sp, #32]
  42065c:	ldp	x23, x24, [sp, #48]
  420660:	ldp	x25, x26, [sp, #64]
  420664:	ldp	x27, x28, [sp, #80]
  420668:	ldp	x29, x30, [sp], #256
  42066c:	ret
  420670:	ldr	x20, [x0, #80]
  420674:	b	420588 <target_environment@@Base+0x2c>
  420678:	ldr	x0, [x20, #8]
  42067c:	adrp	x24, 43e000 <expanding_var@@Base+0x328>
  420680:	add	x24, x24, #0x40
  420684:	ldr	x22, [x0]
  420688:	ldr	x25, [x0, #32]
  42068c:	add	x25, x22, x25, lsl #3
  420690:	cmp	x22, x25
  420694:	b.cc	4206a0 <target_environment@@Base+0x144>  // b.lo, b.ul, b.last
  420698:	ldr	x20, [x20]
  42069c:	b	4205bc <target_environment@@Base+0x60>
  4206a0:	ldr	x19, [x22]
  4206a4:	cbz	x19, 420758 <target_environment@@Base+0x1fc>
  4206a8:	ldr	x0, [x24]
  4206ac:	cmp	x19, x0
  4206b0:	b.eq	420758 <target_environment@@Base+0x1fc>  // b.none
  4206b4:	ldr	w0, [x19, #44]
  4206b8:	bics	wzr, w26, w0
  4206bc:	b.ne	4206fc <target_environment@@Base+0x1a0>  // b.any
  4206c0:	ldr	x27, [x19]
  4206c4:	mov	x0, x27
  4206c8:	bl	406700 <strlen@plt>
  4206cc:	adrp	x2, 440000 <output_context@@Base+0x1248>
  4206d0:	add	x2, x2, #0xee0
  4206d4:	mov	x1, x0
  4206d8:	add	x2, x2, #0x808
  4206dc:	mov	x0, x27
  4206e0:	bl	41fe8c <lookup_variable_in_set@@Base>
  4206e4:	cbz	x0, 4206fc <target_environment@@Base+0x1a0>
  4206e8:	ldrb	w0, [x0, #47]
  4206ec:	ldrb	w1, [x19, #47]
  4206f0:	ubfx	x0, x0, #5, #2
  4206f4:	bfi	w1, w0, #5, #2
  4206f8:	strb	w1, [x19, #47]
  4206fc:	ldrb	w1, [x19, #47]
  420700:	ubfx	x0, x1, #5, #2
  420704:	cmp	w0, #0x2
  420708:	b.eq	4207d0 <target_environment@@Base+0x274>  // b.none
  42070c:	cmp	w0, #0x3
  420710:	b.eq	420760 <target_environment@@Base+0x204>  // b.none
  420714:	cmp	w0, #0x1
  420718:	b.ne	42079c <target_environment@@Base+0x240>  // b.any
  42071c:	ldr	x0, [x19]
  420720:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  420724:	add	x1, x1, #0xb9
  420728:	cmp	x0, x1
  42072c:	b.eq	420750 <target_environment@@Base+0x1f4>  // b.none
  420730:	ldrb	w1, [x0]
  420734:	cmp	w1, #0x53
  420738:	b.ne	420758 <target_environment@@Base+0x1fc>  // b.any
  42073c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  420740:	add	x0, x0, #0x1
  420744:	add	x1, x1, #0xba
  420748:	bl	406be0 <strcmp@plt>
  42074c:	cbnz	w0, 420758 <target_environment@@Base+0x1fc>
  420750:	ldr	x0, [x23, #8]
  420754:	cbnz	x0, 4207dc <target_environment@@Base+0x280>
  420758:	add	x22, x22, #0x8
  42075c:	b	420690 <target_environment@@Base+0x134>
  420760:	ldrb	w0, [x19, #47]
  420764:	ands	w1, w0, #0x1c
  420768:	ccmp	w1, #0x18, #0x4, ne  // ne = any
  42076c:	b.eq	420758 <target_environment@@Base+0x1fc>  // b.none
  420770:	ldrb	w2, [x19, #44]
  420774:	tbz	w2, #5, 420758 <target_environment@@Base+0x1fc>
  420778:	adrp	x2, 441000 <commands_started@@Base+0x1c0>
  42077c:	ldr	w2, [x2, #2252]
  420780:	cbnz	w2, 42079c <target_environment@@Base+0x240>
  420784:	cmp	w1, #0x10
  420788:	b.eq	42079c <target_environment@@Base+0x240>  // b.none
  42078c:	mov	w1, #0x14                  	// #20
  420790:	and	w0, w0, w1
  420794:	cmp	w0, #0x4
  420798:	b.ne	420758 <target_environment@@Base+0x1fc>  // b.any
  42079c:	mov	x1, x19
  4207a0:	add	x0, sp, #0xa8
  4207a4:	bl	4107ac <hash_find_slot@@Base>
  4207a8:	mov	x2, x0
  4207ac:	ldr	x0, [x0]
  4207b0:	cbz	x0, 4207c0 <target_environment@@Base+0x264>
  4207b4:	ldr	x1, [x24]
  4207b8:	cmp	x0, x1
  4207bc:	b.ne	420758 <target_environment@@Base+0x1fc>  // b.any
  4207c0:	mov	x1, x19
  4207c4:	add	x0, sp, #0xa8
  4207c8:	bl	4108b8 <hash_insert_at@@Base>
  4207cc:	b	420758 <target_environment@@Base+0x1fc>
  4207d0:	tst	w1, #0x1c
  4207d4:	b.ne	42079c <target_environment@@Base+0x240>  // b.any
  4207d8:	b	420758 <target_environment@@Base+0x1fc>
  4207dc:	mov	x19, x23
  4207e0:	b	42079c <target_environment@@Base+0x240>
  4207e4:	ldr	x19, [x28]
  4207e8:	cbz	x19, 420854 <target_environment@@Base+0x2f8>
  4207ec:	ldr	x0, [x27, #64]
  4207f0:	cmp	x19, x0
  4207f4:	b.eq	420854 <target_environment@@Base+0x2f8>  // b.none
  4207f8:	ldrb	w0, [x19, #44]
  4207fc:	add	x26, x20, #0x8
  420800:	tbz	w0, #0, 42085c <target_environment@@Base+0x300>
  420804:	ldrb	w0, [x19, #47]
  420808:	mov	w1, #0x14                  	// #20
  42080c:	and	w0, w1, w0
  420810:	cmp	w0, #0x4
  420814:	b.eq	42085c <target_environment@@Base+0x300>  // b.none
  420818:	mov	x1, x21
  42081c:	mov	x0, x19
  420820:	bl	40b2bc <recursively_expand_for_file@@Base>
  420824:	mov	x3, x0
  420828:	ldr	x1, [x19]
  42082c:	mov	x2, x24
  420830:	mov	w0, #0x3                   	// #3
  420834:	str	x3, [sp, #104]
  420838:	bl	416ad4 <concat@@Base>
  42083c:	bl	416c24 <xstrdup@@Base>
  420840:	str	x0, [x20]
  420844:	ldr	x3, [sp, #104]
  420848:	mov	x0, x3
  42084c:	bl	406c20 <free@plt>
  420850:	mov	x20, x26
  420854:	add	x28, x28, #0x8
  420858:	b	420610 <target_environment@@Base+0xb4>
  42085c:	ldp	x1, x3, [x19]
  420860:	mov	x2, x24
  420864:	mov	w0, #0x3                   	// #3
  420868:	bl	416ad4 <concat@@Base>
  42086c:	bl	416c24 <xstrdup@@Base>
  420870:	str	x0, [x20]
  420874:	b	420850 <target_environment@@Base+0x2f4>

0000000000420878 <do_variable_definition@@Base>:
  420878:	stp	x29, x30, [sp, #-144]!
  42087c:	mov	x29, sp
  420880:	stp	x19, x20, [sp, #16]
  420884:	stp	x21, x22, [sp, #32]
  420888:	stp	x23, x24, [sp, #48]
  42088c:	mov	x24, x1
  420890:	sub	w1, w4, #0x1
  420894:	stp	x25, x26, [sp, #64]
  420898:	cmp	w1, #0x5
  42089c:	stp	x27, x28, [sp, #80]
  4208a0:	str	x0, [sp, #96]
  4208a4:	str	w3, [sp, #108]
  4208a8:	b.hi	4208d0 <do_variable_definition@@Base+0x58>  // b.pmore
  4208ac:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  4208b0:	mov	x20, x2
  4208b4:	mov	w23, w4
  4208b8:	mov	w25, w5
  4208bc:	add	x0, x0, #0x4c
  4208c0:	ldrh	w0, [x0, w1, uxtw #1]
  4208c4:	adr	x1, 4208d0 <do_variable_definition@@Base+0x58>
  4208c8:	add	x0, x1, w0, sxth #2
  4208cc:	br	x0
  4208d0:	bl	406b50 <abort@plt>
  4208d4:	mov	x0, x2
  4208d8:	mov	x1, #0x0                   	// #0
  4208dc:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  4208e0:	mov	x20, x0
  4208e4:	mov	x19, x0
  4208e8:	mov	w22, #0x0                   	// #0
  4208ec:	mov	w21, #0x0                   	// #0
  4208f0:	mov	x0, x24
  4208f4:	bl	406700 <strlen@plt>
  4208f8:	cmp	w23, #0x2
  4208fc:	mov	x1, x0
  420900:	cset	w4, eq  // eq = none
  420904:	cbz	w25, 420b70 <do_variable_definition@@Base+0x2f8>
  420908:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  42090c:	ldr	x0, [x0, #304]
  420910:	ldr	x5, [x0, #8]
  420914:	lsl	w21, w21, #1
  420918:	ldr	w3, [sp, #108]
  42091c:	orr	w22, w21, w22, lsl #2
  420920:	ldr	x6, [sp, #96]
  420924:	mov	x2, x20
  420928:	mov	x0, x24
  42092c:	mov	x26, x19
  420930:	bl	41f978 <define_variable_in_set@@Base>
  420934:	ldrb	w21, [x0, #44]
  420938:	mov	x19, x0
  42093c:	and	w21, w21, #0xfffffff9
  420940:	orr	w22, w22, w21
  420944:	strb	w22, [x0, #44]
  420948:	mov	x0, x26
  42094c:	bl	406c20 <free@plt>
  420950:	ldrb	w0, [x19, #44]
  420954:	tbz	w0, #4, 4209a8 <do_variable_definition@@Base+0x130>
  420958:	ldr	x0, [x19]
  42095c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  420960:	add	x1, x1, #0x326
  420964:	cmp	x0, x1
  420968:	b.eq	42098c <do_variable_definition@@Base+0x114>  // b.none
  42096c:	ldrb	w1, [x0]
  420970:	cmp	w1, #0x2e
  420974:	b.ne	4209a8 <do_variable_definition@@Base+0x130>  // b.any
  420978:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  42097c:	add	x0, x0, #0x1
  420980:	add	x1, x1, #0x327
  420984:	bl	406be0 <strcmp@plt>
  420988:	cbnz	w0, 4209a8 <do_variable_definition@@Base+0x130>
  42098c:	ldr	x0, [x19, #8]
  420990:	mov	w1, #0x9                   	// #9
  420994:	ldrb	w0, [x0]
  420998:	cmp	w0, #0x0
  42099c:	csel	w0, w0, w1, ne  // ne = any
  4209a0:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  4209a4:	strb	w0, [x1, #164]
  4209a8:	mov	x0, x19
  4209ac:	ldp	x19, x20, [sp, #16]
  4209b0:	ldp	x21, x22, [sp, #32]
  4209b4:	ldp	x23, x24, [sp, #48]
  4209b8:	ldp	x25, x26, [sp, #64]
  4209bc:	ldp	x27, x28, [sp, #80]
  4209c0:	ldp	x29, x30, [sp], #144
  4209c4:	ret
  4209c8:	mov	x0, x2
  4209cc:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  4209d0:	mov	x1, #0x0                   	// #0
  4209d4:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  4209d8:	add	x1, sp, #0x78
  4209dc:	mov	x19, x0
  4209e0:	add	x0, sp, #0x70
  4209e4:	bl	40bb18 <install_variable_buffer@@Base>
  4209e8:	ldr	x0, [x20, #1912]
  4209ec:	add	x1, sp, #0x80
  4209f0:	mov	w2, #0x0                   	// #0
  4209f4:	stp	x19, xzr, [sp, #128]
  4209f8:	bl	40ff54 <func_shell_base@@Base>
  4209fc:	mov	x2, #0x1                   	// #1
  420a00:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  420a04:	add	x1, x1, #0x58
  420a08:	bl	40b138 <variable_buffer_output@@Base>
  420a0c:	ldr	x0, [x20, #1912]
  420a10:	bl	406ab0 <strdup@plt>
  420a14:	mov	x20, x0
  420a18:	ldp	x0, x1, [sp, #112]
  420a1c:	bl	40bb38 <restore_variable_buffer@@Base>
  420a20:	mov	x0, x19
  420a24:	mov	x19, x20
  420a28:	bl	406c20 <free@plt>
  420a2c:	mov	w22, #0x0                   	// #0
  420a30:	b	420a54 <do_variable_definition@@Base+0x1dc>
  420a34:	mov	x0, x24
  420a38:	bl	406700 <strlen@plt>
  420a3c:	mov	x1, x0
  420a40:	mov	x0, x24
  420a44:	bl	41fcdc <lookup_variable@@Base>
  420a48:	mov	x19, x0
  420a4c:	cbnz	x0, 420b78 <do_variable_definition@@Base+0x300>
  420a50:	mov	w22, #0x1                   	// #1
  420a54:	mov	w21, #0x0                   	// #0
  420a58:	b	420b68 <do_variable_definition@@Base+0x2f0>
  420a5c:	mov	x0, x24
  420a60:	bl	406700 <strlen@plt>
  420a64:	mov	x1, x0
  420a68:	cbz	w25, 420b24 <do_variable_definition@@Base+0x2ac>
  420a6c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  420a70:	ldr	x0, [x0, #304]
  420a74:	ldr	x2, [x0, #8]
  420a78:	mov	x0, x24
  420a7c:	bl	41fe8c <lookup_variable_in_set@@Base>
  420a80:	mov	x19, x0
  420a84:	cbz	x0, 420b60 <do_variable_definition@@Base+0x2e8>
  420a88:	ldrb	w21, [x0, #44]
  420a8c:	ubfx	x21, x21, #1, #1
  420a90:	ldrb	w0, [x19, #44]
  420a94:	tbnz	w0, #0, 420b3c <do_variable_definition@@Base+0x2c4>
  420a98:	cmp	w23, #0x6
  420a9c:	b.eq	420b48 <do_variable_definition@@Base+0x2d0>  // b.none
  420aa0:	mov	x0, x20
  420aa4:	mov	x1, #0x0                   	// #0
  420aa8:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  420aac:	mov	x20, x0
  420ab0:	mov	x26, x0
  420ab4:	mov	x0, x20
  420ab8:	bl	406700 <strlen@plt>
  420abc:	mov	x28, x0
  420ac0:	cbz	x0, 420948 <do_variable_definition@@Base+0xd0>
  420ac4:	ldr	x0, [x19, #8]
  420ac8:	bl	406700 <strlen@plt>
  420acc:	mov	x22, x0
  420ad0:	add	x0, x28, #0x2
  420ad4:	add	x0, x0, x22
  420ad8:	bl	416a54 <xmalloc@@Base>
  420adc:	mov	x27, x0
  420ae0:	cbz	x22, 420afc <do_variable_definition@@Base+0x284>
  420ae4:	ldr	x1, [x19, #8]
  420ae8:	mov	x2, x22
  420aec:	bl	4066c0 <memcpy@plt>
  420af0:	mov	w0, #0x20                  	// #32
  420af4:	strb	w0, [x27, x22]
  420af8:	add	x22, x22, #0x1
  420afc:	mov	x1, x20
  420b00:	add	x2, x28, #0x1
  420b04:	add	x0, x27, x22
  420b08:	bl	4066c0 <memcpy@plt>
  420b0c:	mov	x0, x26
  420b10:	mov	x20, x27
  420b14:	mov	x19, x27
  420b18:	mov	w22, #0x0                   	// #0
  420b1c:	bl	406c20 <free@plt>
  420b20:	b	4208f0 <do_variable_definition@@Base+0x78>
  420b24:	mov	x0, x24
  420b28:	bl	41fcdc <lookup_variable@@Base>
  420b2c:	mov	x19, x0
  420b30:	cbz	x0, 420a2c <do_variable_definition@@Base+0x1b4>
  420b34:	mov	w21, #0x0                   	// #0
  420b38:	b	420a90 <do_variable_definition@@Base+0x218>
  420b3c:	mov	x26, #0x0                   	// #0
  420b40:	mov	w23, #0x2                   	// #2
  420b44:	b	420ab4 <do_variable_definition@@Base+0x23c>
  420b48:	mov	x26, #0x0                   	// #0
  420b4c:	b	420ab4 <do_variable_definition@@Base+0x23c>
  420b50:	mov	w22, #0x0                   	// #0
  420b54:	mov	w21, #0x0                   	// #0
  420b58:	mov	x19, #0x0                   	// #0
  420b5c:	b	4208f0 <do_variable_definition@@Base+0x78>
  420b60:	mov	w22, #0x0                   	// #0
  420b64:	mov	w21, #0x1                   	// #1
  420b68:	mov	w23, #0x2                   	// #2
  420b6c:	b	4208f0 <do_variable_definition@@Base+0x78>
  420b70:	mov	x5, #0x0                   	// #0
  420b74:	b	420914 <do_variable_definition@@Base+0x9c>
  420b78:	mov	x26, #0x0                   	// #0
  420b7c:	b	420948 <do_variable_definition@@Base+0xd0>

0000000000420b80 <initialize_file_variables@@Base>:
  420b80:	stp	x29, x30, [sp, #-96]!
  420b84:	mov	x29, sp
  420b88:	stp	x21, x22, [sp, #32]
  420b8c:	ldr	x21, [x0, #80]
  420b90:	stp	x19, x20, [sp, #16]
  420b94:	mov	x20, x0
  420b98:	stp	x23, x24, [sp, #48]
  420b9c:	mov	w19, w1
  420ba0:	stp	x25, x26, [sp, #64]
  420ba4:	str	x27, [sp, #80]
  420ba8:	cbnz	x21, 420be8 <initialize_file_variables@@Base+0x68>
  420bac:	mov	x0, #0x18                  	// #24
  420bb0:	bl	416a54 <xmalloc@@Base>
  420bb4:	mov	x21, x0
  420bb8:	mov	x0, #0x58                  	// #88
  420bbc:	bl	416a54 <xmalloc@@Base>
  420bc0:	adrp	x4, 41f000 <print_rule_data_base@@Base+0x324>
  420bc4:	adrp	x3, 41f000 <print_rule_data_base@@Base+0x324>
  420bc8:	str	x0, [x21, #8]
  420bcc:	add	x4, x4, #0x470
  420bd0:	add	x3, x3, #0x468
  420bd4:	adrp	x2, 41f000 <print_rule_data_base@@Base+0x324>
  420bd8:	mov	x1, #0x17                  	// #23
  420bdc:	add	x2, x2, #0x4a0
  420be0:	bl	4106f8 <hash_init@@Base>
  420be4:	str	x21, [x20, #80]
  420be8:	ldr	x0, [x20, #104]
  420bec:	cbz	x0, 420c2c <initialize_file_variables@@Base+0xac>
  420bf0:	cmp	x0, x20
  420bf4:	b.eq	420c2c <initialize_file_variables@@Base+0xac>  // b.none
  420bf8:	mov	w1, w19
  420bfc:	bl	420b80 <initialize_file_variables@@Base>
  420c00:	ldr	x0, [x20, #104]
  420c04:	ldr	x0, [x0, #80]
  420c08:	str	x0, [x21]
  420c0c:	str	wzr, [x21, #16]
  420c10:	ldp	x19, x20, [sp, #16]
  420c14:	ldp	x21, x22, [sp, #32]
  420c18:	ldp	x23, x24, [sp, #48]
  420c1c:	ldp	x25, x26, [sp, #64]
  420c20:	ldr	x27, [sp, #80]
  420c24:	ldp	x29, x30, [sp], #96
  420c28:	ret
  420c2c:	ldr	x0, [x20, #96]
  420c30:	cbnz	x0, 420d4c <initialize_file_variables@@Base+0x1cc>
  420c34:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  420c38:	add	x0, x0, #0x130
  420c3c:	add	x0, x0, #0x8
  420c40:	mov	w23, #0x1                   	// #1
  420c44:	str	x0, [x21]
  420c48:	str	w23, [x21, #16]
  420c4c:	cbnz	w19, 420d30 <initialize_file_variables@@Base+0x1b0>
  420c50:	ldrb	w0, [x20, #138]
  420c54:	tbnz	w0, #2, 420d30 <initialize_file_variables@@Base+0x1b0>
  420c58:	ldr	x1, [x20]
  420c5c:	mov	x0, #0x0                   	// #0
  420c60:	bl	41f4e8 <strcache_print_stats@@Base+0x2a0>
  420c64:	mov	x19, x0
  420c68:	cbz	x0, 420d24 <initialize_file_variables@@Base+0x1a4>
  420c6c:	adrp	x22, 43e000 <expanding_var@@Base+0x328>
  420c70:	ldr	x24, [x22, #304]
  420c74:	bl	41feb0 <create_new_variable_set@@Base>
  420c78:	str	x0, [x22, #304]
  420c7c:	str	x0, [x20, #88]
  420c80:	ldrh	w4, [x19, #78]
  420c84:	add	x26, x19, #0x30
  420c88:	ldrb	w27, [x19, #79]
  420c8c:	and	w0, w4, #0x380
  420c90:	cmp	w0, #0x80
  420c94:	ldr	x25, [x19, #32]
  420c98:	b.ne	420d60 <initialize_file_variables@@Base+0x1e0>  // b.any
  420c9c:	mov	x0, x25
  420ca0:	bl	406700 <strlen@plt>
  420ca4:	ldr	x1, [x22, #304]
  420ca8:	mov	x6, x26
  420cac:	ldr	x2, [x19, #40]
  420cb0:	ubfx	x3, x27, #2, #3
  420cb4:	ldr	x5, [x1, #8]
  420cb8:	mov	x1, x0
  420cbc:	mov	w4, #0x0                   	// #0
  420cc0:	mov	x0, x25
  420cc4:	bl	41f978 <define_variable_in_set@@Base>
  420cc8:	ldrh	w1, [x0, #46]
  420ccc:	bfi	w1, w23, #7, #3
  420cd0:	strh	w1, [x0, #46]
  420cd4:	ldrb	w2, [x19, #76]
  420cd8:	ldrb	w1, [x0, #44]
  420cdc:	ldrb	w3, [x0, #47]
  420ce0:	ubfx	x2, x2, #3, #1
  420ce4:	bfi	w1, w2, #3, #1
  420ce8:	strb	w1, [x0, #44]
  420cec:	ldrb	w2, [x19, #79]
  420cf0:	ubfx	x2, x2, #5, #2
  420cf4:	bfi	w3, w2, #5, #2
  420cf8:	strb	w3, [x0, #47]
  420cfc:	ldrb	w2, [x19, #76]
  420d00:	ubfx	x2, x2, #7, #1
  420d04:	bfi	w1, w2, #7, #1
  420d08:	strb	w1, [x0, #44]
  420d0c:	mov	x0, x19
  420d10:	ldr	x1, [x20]
  420d14:	bl	41f4e8 <strcache_print_stats@@Base+0x2a0>
  420d18:	mov	x19, x0
  420d1c:	cbnz	x0, 420c80 <initialize_file_variables@@Base+0x100>
  420d20:	str	x24, [x22, #304]
  420d24:	ldrb	w0, [x20, #138]
  420d28:	orr	w0, w0, #0x4
  420d2c:	strb	w0, [x20, #138]
  420d30:	ldr	x0, [x20, #88]
  420d34:	cbz	x0, 420c10 <initialize_file_variables@@Base+0x90>
  420d38:	ldr	x1, [x21]
  420d3c:	str	x1, [x0]
  420d40:	ldr	w1, [x21, #16]
  420d44:	str	w1, [x0, #16]
  420d48:	b	420c08 <initialize_file_variables@@Base+0x88>
  420d4c:	mov	w1, w19
  420d50:	bl	420b80 <initialize_file_variables@@Base>
  420d54:	ldr	x0, [x20, #96]
  420d58:	ldr	x0, [x0, #80]
  420d5c:	b	420c40 <initialize_file_variables@@Base+0xc0>
  420d60:	ldr	x2, [x19, #40]
  420d64:	ubfx	x4, x4, #7, #3
  420d68:	ubfx	x3, x27, #2, #3
  420d6c:	mov	x1, x25
  420d70:	mov	x0, x26
  420d74:	mov	w5, #0x1                   	// #1
  420d78:	bl	420878 <do_variable_definition@@Base>
  420d7c:	b	420cd4 <initialize_file_variables@@Base+0x154>

0000000000420d80 <parse_variable_definition@@Base>:
  420d80:	stp	x29, x30, [sp, #-32]!
  420d84:	adrp	x4, 43e000 <expanding_var@@Base+0x328>
  420d88:	add	x4, x4, #0x454
  420d8c:	mov	x29, sp
  420d90:	stp	x19, x20, [sp, #16]
  420d94:	mov	x20, x1
  420d98:	ldrb	w1, [x0]
  420d9c:	mov	x5, x0
  420da0:	add	x0, x0, #0x1
  420da4:	ldrh	w1, [x4, x1, lsl #1]
  420da8:	tst	w1, #0x6
  420dac:	b.ne	420d98 <parse_variable_definition@@Base+0x18>  // b.any
  420db0:	mov	x3, x5
  420db4:	mov	x0, #0x0                   	// #0
  420db8:	mov	w1, #0x9                   	// #9
  420dbc:	str	x5, [x20]
  420dc0:	str	wzr, [x20, #40]
  420dc4:	ldrb	w6, [x3]
  420dc8:	ldrb	w2, [x3]
  420dcc:	ldrh	w6, [x4, x6, lsl #1]
  420dd0:	tst	w6, w1
  420dd4:	b.ne	420dfc <parse_variable_definition@@Base+0x7c>  // b.any
  420dd8:	cmp	w2, #0x24
  420ddc:	b.ne	420e44 <parse_variable_definition@@Base+0xc4>  // b.any
  420de0:	add	x19, x3, #0x2
  420de4:	ldrb	w3, [x3, #1]
  420de8:	cmp	w3, #0x28
  420dec:	b.eq	420e04 <parse_variable_definition@@Base+0x84>  // b.none
  420df0:	cmp	w3, #0x7b
  420df4:	b.eq	420e1c <parse_variable_definition@@Base+0x9c>  // b.none
  420df8:	cbnz	w3, 420e14 <parse_variable_definition@@Base+0x94>
  420dfc:	mov	x19, #0x0                   	// #0
  420e00:	b	420e84 <parse_variable_definition@@Base+0x104>
  420e04:	mov	w7, #0x29                  	// #41
  420e08:	mov	w2, #0x1                   	// #1
  420e0c:	ldrb	w6, [x19]
  420e10:	cbnz	w6, 420e24 <parse_variable_definition@@Base+0xa4>
  420e14:	mov	x3, x19
  420e18:	b	420dc4 <parse_variable_definition@@Base+0x44>
  420e1c:	mov	w7, #0x7d                  	// #125
  420e20:	b	420e08 <parse_variable_definition@@Base+0x88>
  420e24:	cmp	w6, w7
  420e28:	add	x19, x19, #0x1
  420e2c:	b.ne	420e38 <parse_variable_definition@@Base+0xb8>  // b.any
  420e30:	subs	w2, w2, #0x1
  420e34:	b.eq	420e14 <parse_variable_definition@@Base+0x94>  // b.none
  420e38:	cmp	w3, w6
  420e3c:	cinc	w2, w2, eq  // eq = none
  420e40:	b	420e0c <parse_variable_definition@@Base+0x8c>
  420e44:	add	x19, x3, #0x1
  420e48:	tbnz	w6, #1, 420e98 <parse_variable_definition@@Base+0x118>
  420e4c:	mov	w3, #0x0                   	// #0
  420e50:	cmp	w2, #0x3d
  420e54:	b.ne	420ec0 <parse_variable_definition@@Base+0x140>  // b.any
  420e58:	ldrh	w2, [x20, #46]
  420e5c:	mov	w1, #0x2                   	// #2
  420e60:	bfi	w2, w1, #7, #3
  420e64:	strh	w2, [x20, #46]
  420e68:	cbnz	x0, 420e70 <parse_variable_definition@@Base+0xf0>
  420e6c:	sub	x0, x19, #0x1
  420e70:	sub	x0, x0, x5
  420e74:	str	w0, [x20, #40]
  420e78:	mov	x0, x19
  420e7c:	bl	416ca8 <next_token@@Base>
  420e80:	str	x0, [x20, #8]
  420e84:	mov	x0, x19
  420e88:	ldp	x19, x20, [sp, #16]
  420e8c:	ldp	x29, x30, [sp], #32
  420e90:	ret
  420e94:	add	x19, x19, #0x1
  420e98:	ldrb	w0, [x19]
  420e9c:	ldrb	w2, [x19]
  420ea0:	ldrh	w0, [x4, x0, lsl #1]
  420ea4:	tst	w0, #0x6
  420ea8:	b.ne	420e94 <parse_variable_definition@@Base+0x114>  // b.any
  420eac:	cbz	w2, 420dfc <parse_variable_definition@@Base+0x7c>
  420eb0:	mov	x0, x3
  420eb4:	add	x19, x19, #0x1
  420eb8:	mov	w3, #0x1                   	// #1
  420ebc:	b	420e50 <parse_variable_definition@@Base+0xd0>
  420ec0:	ldrb	w6, [x19]
  420ec4:	cmp	w6, #0x3d
  420ec8:	b.ne	420f3c <parse_variable_definition@@Base+0x1bc>  // b.any
  420ecc:	cmp	w2, #0x3a
  420ed0:	b.eq	420f04 <parse_variable_definition@@Base+0x184>  // b.none
  420ed4:	b.gt	420ef0 <parse_variable_definition@@Base+0x170>
  420ed8:	cmp	w2, #0x21
  420edc:	b.eq	420f30 <parse_variable_definition@@Base+0x1b0>  // b.none
  420ee0:	cmp	w2, #0x2b
  420ee4:	b.eq	420f24 <parse_variable_definition@@Base+0x1a4>  // b.none
  420ee8:	cbz	w3, 420e14 <parse_variable_definition@@Base+0x94>
  420eec:	b	420dfc <parse_variable_definition@@Base+0x7c>
  420ef0:	cmp	w2, #0x3f
  420ef4:	b.ne	420ee8 <parse_variable_definition@@Base+0x168>  // b.any
  420ef8:	ldrh	w2, [x20, #46]
  420efc:	mov	w1, #0x4                   	// #4
  420f00:	b	420f0c <parse_variable_definition@@Base+0x18c>
  420f04:	ldrh	w2, [x20, #46]
  420f08:	mov	w1, #0x1                   	// #1
  420f0c:	bfi	w2, w1, #7, #3
  420f10:	strh	w2, [x20, #46]
  420f14:	cbnz	x0, 420f1c <parse_variable_definition@@Base+0x19c>
  420f18:	sub	x0, x19, #0x1
  420f1c:	add	x19, x19, #0x1
  420f20:	b	420e70 <parse_variable_definition@@Base+0xf0>
  420f24:	ldrh	w2, [x20, #46]
  420f28:	mov	w1, #0x3                   	// #3
  420f2c:	b	420f0c <parse_variable_definition@@Base+0x18c>
  420f30:	ldrh	w2, [x20, #46]
  420f34:	mov	w1, #0x5                   	// #5
  420f38:	b	420f0c <parse_variable_definition@@Base+0x18c>
  420f3c:	cmp	w2, #0x3a
  420f40:	b.ne	420ee8 <parse_variable_definition@@Base+0x168>  // b.any
  420f44:	cmp	w6, #0x3a
  420f48:	b.ne	420dfc <parse_variable_definition@@Base+0x7c>  // b.any
  420f4c:	ldrb	w1, [x19, #1]
  420f50:	cmp	w1, #0x3d
  420f54:	b.ne	420dfc <parse_variable_definition@@Base+0x7c>  // b.any
  420f58:	ldrh	w2, [x20, #46]
  420f5c:	mov	w1, #0x1                   	// #1
  420f60:	bfi	w2, w1, #7, #3
  420f64:	strh	w2, [x20, #46]
  420f68:	cbnz	x0, 420f70 <parse_variable_definition@@Base+0x1f0>
  420f6c:	sub	x0, x19, #0x1
  420f70:	add	x19, x19, #0x2
  420f74:	b	420e70 <parse_variable_definition@@Base+0xf0>

0000000000420f78 <assign_variable_definition@@Base>:
  420f78:	stp	x29, x30, [sp, #-32]!
  420f7c:	mov	x29, sp
  420f80:	stp	x19, x20, [sp, #16]
  420f84:	mov	x19, x0
  420f88:	mov	x0, x1
  420f8c:	mov	x1, x19
  420f90:	bl	420d80 <parse_variable_definition@@Base>
  420f94:	cbz	x0, 421004 <assign_variable_definition@@Base+0x8c>
  420f98:	ldr	w20, [x19, #40]
  420f9c:	ldr	x1, [x19]
  420fa0:	add	w0, w20, #0x1
  420fa4:	add	x0, x0, #0xf
  420fa8:	mov	w20, w20
  420fac:	and	x0, x0, #0x1fffffff0
  420fb0:	mov	x2, x20
  420fb4:	sub	sp, sp, x0
  420fb8:	mov	x3, sp
  420fbc:	mov	x0, x3
  420fc0:	bl	4066c0 <memcpy@plt>
  420fc4:	strb	wzr, [x0, x20]
  420fc8:	mov	x1, #0x0                   	// #0
  420fcc:	bl	40b1bc <allocated_variable_expand_for_file@@Base>
  420fd0:	str	x0, [x19]
  420fd4:	ldrb	w1, [x0]
  420fd8:	mov	x0, x19
  420fdc:	cbnz	w1, 421004 <assign_variable_definition@@Base+0x8c>
  420fe0:	mov	w2, #0x5                   	// #5
  420fe4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  420fe8:	mov	x0, #0x0                   	// #0
  420fec:	add	x1, x1, #0x278
  420ff0:	bl	406d60 <dcgettext@plt>
  420ff4:	mov	x2, x0
  420ff8:	mov	x1, #0x0                   	// #0
  420ffc:	add	x0, x19, #0x10
  421000:	bl	417d24 <fatal@@Base>
  421004:	mov	sp, x29
  421008:	ldp	x19, x20, [sp, #16]
  42100c:	ldp	x29, x30, [sp], #32
  421010:	ret

0000000000421014 <try_variable_definition@@Base>:
  421014:	stp	x29, x30, [sp, #-96]!
  421018:	mov	x29, sp
  42101c:	stp	x19, x20, [sp, #16]
  421020:	mov	x20, x0
  421024:	stp	x21, x22, [sp, #32]
  421028:	mov	w21, w2
  42102c:	mov	w22, w3
  421030:	cbz	x0, 421090 <try_variable_definition@@Base+0x7c>
  421034:	ldp	x2, x3, [x0]
  421038:	stp	x2, x3, [sp, #64]
  42103c:	ldr	x0, [x0, #16]
  421040:	str	x0, [sp, #80]
  421044:	add	x0, sp, #0x30
  421048:	bl	420f78 <assign_variable_definition@@Base>
  42104c:	mov	x19, x0
  421050:	cbz	x0, 42107c <try_variable_definition@@Base+0x68>
  421054:	ldp	x1, x2, [sp, #48]
  421058:	mov	w5, w22
  42105c:	ldrh	w4, [sp, #94]
  421060:	mov	w3, w21
  421064:	mov	x0, x20
  421068:	ubfx	x4, x4, #7, #3
  42106c:	bl	420878 <do_variable_definition@@Base>
  421070:	mov	x19, x0
  421074:	ldr	x0, [sp, #48]
  421078:	bl	406c20 <free@plt>
  42107c:	mov	x0, x19
  421080:	ldp	x19, x20, [sp, #16]
  421084:	ldp	x21, x22, [sp, #32]
  421088:	ldp	x29, x30, [sp], #96
  42108c:	ret
  421090:	str	xzr, [sp, #64]
  421094:	b	421044 <try_variable_definition@@Base+0x30>

0000000000421098 <print_variable_data_base@@Base>:
  421098:	stp	x29, x30, [sp, #-48]!
  42109c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4210a0:	add	x1, x1, #0xfbc
  4210a4:	mov	w2, #0x5                   	// #5
  4210a8:	mov	x29, sp
  4210ac:	mov	x0, #0x0                   	// #0
  4210b0:	stp	x19, x20, [sp, #16]
  4210b4:	adrp	x19, 440000 <output_context@@Base+0x1248>
  4210b8:	mov	w20, #0x0                   	// #0
  4210bc:	stp	x21, x22, [sp, #32]
  4210c0:	bl	406d60 <dcgettext@plt>
  4210c4:	bl	406b80 <puts@plt>
  4210c8:	add	x0, x19, #0xee0
  4210cc:	mov	w2, #0x0                   	// #0
  4210d0:	add	x0, x0, #0x808
  4210d4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4210d8:	add	x1, x1, #0x819
  4210dc:	bl	41f5d0 <strcache_print_stats@@Base+0x388>
  4210e0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  4210e4:	add	x1, x1, #0xfca
  4210e8:	mov	w2, #0x5                   	// #5
  4210ec:	mov	x0, #0x0                   	// #0
  4210f0:	bl	406d60 <dcgettext@plt>
  4210f4:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x4720>
  4210f8:	bl	406b80 <puts@plt>
  4210fc:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x5720>
  421100:	ldr	x19, [x19, #3808]
  421104:	add	x21, x21, #0xfee
  421108:	add	x22, x22, #0x153
  42110c:	cbnz	x19, 421138 <print_variable_data_base@@Base+0xa0>
  421110:	mov	w2, #0x5                   	// #5
  421114:	cbnz	w20, 42115c <print_variable_data_base@@Base+0xc4>
  421118:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x4720>
  42111c:	mov	x0, #0x0                   	// #0
  421120:	add	x1, x1, #0xff5
  421124:	bl	406d60 <dcgettext@plt>
  421128:	ldp	x19, x20, [sp, #16]
  42112c:	ldp	x21, x22, [sp, #32]
  421130:	ldp	x29, x30, [sp], #48
  421134:	b	406b80 <puts@plt>
  421138:	ldr	x1, [x19, #16]
  42113c:	mov	x0, x21
  421140:	add	w20, w20, #0x1
  421144:	bl	406df0 <printf@plt>
  421148:	add	x0, x19, #0x20
  42114c:	mov	x1, x22
  421150:	bl	41f650 <strcache_print_stats@@Base+0x408>
  421154:	ldr	x19, [x19]
  421158:	b	42110c <print_variable_data_base@@Base+0x74>
  42115c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421160:	mov	x0, #0x0                   	// #0
  421164:	add	x1, x1, #0x1d
  421168:	bl	406d60 <dcgettext@plt>
  42116c:	mov	w1, w20
  421170:	ldp	x19, x20, [sp, #16]
  421174:	ldp	x21, x22, [sp, #32]
  421178:	ldp	x29, x30, [sp], #48
  42117c:	b	406df0 <printf@plt>

0000000000421180 <print_file_variables@@Base>:
  421180:	ldr	x0, [x0, #80]
  421184:	cbz	x0, 42119c <print_file_variables@@Base+0x1c>
  421188:	ldr	x0, [x0, #8]
  42118c:	mov	w2, #0x1                   	// #1
  421190:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421194:	add	x1, x1, #0x153
  421198:	b	41f5d0 <strcache_print_stats@@Base+0x388>
  42119c:	ret

00000000004211a0 <print_target_variables@@Base>:
  4211a0:	stp	x29, x30, [sp, #-48]!
  4211a4:	mov	x29, sp
  4211a8:	stp	x19, x20, [sp, #16]
  4211ac:	ldr	x20, [x0, #80]
  4211b0:	str	x21, [sp, #32]
  4211b4:	cbz	x20, 421210 <print_target_variables@@Base+0x70>
  4211b8:	ldr	x21, [x0]
  4211bc:	mov	x0, x21
  4211c0:	bl	406700 <strlen@plt>
  4211c4:	mov	x19, x0
  4211c8:	add	x0, x0, #0x12
  4211cc:	and	x0, x0, #0xfffffffffffffff0
  4211d0:	mov	x1, x21
  4211d4:	sub	sp, sp, x0
  4211d8:	mov	x2, sp
  4211dc:	mov	x0, x2
  4211e0:	bl	406cc0 <strcpy@plt>
  4211e4:	mov	x2, x0
  4211e8:	mov	w0, #0x3a                  	// #58
  4211ec:	adrp	x1, 41f000 <print_rule_data_base@@Base+0x324>
  4211f0:	add	x1, x1, #0x884
  4211f4:	strb	w0, [x2, x19]
  4211f8:	add	x19, x2, x19
  4211fc:	mov	w0, #0x20                  	// #32
  421200:	strb	w0, [x19, #1]
  421204:	strb	wzr, [x19, #2]
  421208:	ldr	x0, [x20, #8]
  42120c:	bl	410c1c <hash_map_arg@@Base>
  421210:	mov	sp, x29
  421214:	ldp	x19, x20, [sp, #16]
  421218:	ldr	x21, [sp, #32]
  42121c:	ldp	x29, x30, [sp], #48
  421220:	ret
  421224:	stp	x29, x30, [sp, #-256]!
  421228:	mov	x29, sp
  42122c:	stp	x21, x22, [sp, #32]
  421230:	mov	x22, x1
  421234:	ldp	x1, x0, [x0, #32]
  421238:	stp	x19, x20, [sp, #16]
  42123c:	stp	x23, x24, [sp, #48]
  421240:	mov	x24, x2
  421244:	stp	x25, x26, [sp, #64]
  421248:	add	x19, x0, #0x3
  42124c:	mov	x0, x22
  421250:	stp	x27, x28, [sp, #80]
  421254:	stp	x1, x3, [x29, #104]
  421258:	bl	40be54 <lookup_file@@Base>
  42125c:	cbz	x0, 4213cc <print_target_variables@@Base+0x22c>
  421260:	ldrb	w0, [x0, #137]
  421264:	eor	x0, x0, #0x8
  421268:	ubfx	x0, x0, #3, #1
  42126c:	str	x0, [x29, #120]
  421270:	mov	x0, x22
  421274:	bl	406700 <strlen@plt>
  421278:	mov	w1, #0x2f                  	// #47
  42127c:	mov	x23, x0
  421280:	mov	x0, x22
  421284:	bl	406b00 <strrchr@plt>
  421288:	cbz	x0, 4213d8 <print_target_variables@@Base+0x238>
  42128c:	subs	x25, x0, x22
  421290:	b.eq	4213e4 <print_target_variables@@Base+0x244>  // b.none
  421294:	sub	x23, x23, #0x1
  421298:	add	x20, x0, #0x1
  42129c:	sub	x23, x23, x25
  4212a0:	add	x0, x23, x25
  4212a4:	add	x28, x23, #0x1
  4212a8:	add	x0, x0, x19
  4212ac:	mov	w26, #0x0                   	// #0
  4212b0:	add	x0, x0, #0xf
  4212b4:	mov	w27, #0x2f                  	// #47
  4212b8:	and	x0, x0, #0xfffffffffffffff0
  4212bc:	sub	sp, sp, x0
  4212c0:	mov	x21, sp
  4212c4:	ldr	x0, [x29, #104]
  4212c8:	ldr	x19, [x0, w26, uxtw #3]
  4212cc:	cbz	x19, 421448 <print_target_variables@@Base+0x2a8>
  4212d0:	mov	x0, x19
  4212d4:	bl	406700 <strlen@plt>
  4212d8:	mov	x1, x19
  4212dc:	mov	x2, x0
  4212e0:	mov	x0, x21
  4212e4:	str	x2, [x29, #96]
  4212e8:	bl	4066c0 <memcpy@plt>
  4212ec:	ldr	x2, [x29, #96]
  4212f0:	add	x19, x21, x2
  4212f4:	cbz	x25, 421314 <print_target_variables@@Base+0x174>
  4212f8:	add	x19, x19, #0x1
  4212fc:	mov	x1, x22
  421300:	mov	x0, x19
  421304:	add	x19, x19, x25
  421308:	strb	w27, [x21, x2]
  42130c:	mov	x2, x25
  421310:	bl	4066c0 <memcpy@plt>
  421314:	cmp	x19, x21
  421318:	b.eq	4213ec <print_target_variables@@Base+0x24c>  // b.none
  42131c:	ldurb	w0, [x19, #-1]
  421320:	cmp	w0, #0x2f
  421324:	b.eq	4213ec <print_target_variables@@Base+0x24c>  // b.none
  421328:	mov	x0, x19
  42132c:	mov	x2, x28
  421330:	mov	x1, x20
  421334:	strb	w27, [x0], #1
  421338:	bl	4066c0 <memcpy@plt>
  42133c:	mov	x0, x21
  421340:	bl	40be54 <lookup_file@@Base>
  421344:	cbz	x0, 421384 <print_target_variables@@Base+0x1e4>
  421348:	ldr	w1, [x29, #120]
  42134c:	cbnz	w1, 4213fc <print_target_variables@@Base+0x25c>
  421350:	ldrb	w1, [x0, #137]
  421354:	ubfx	x1, x1, #3, #1
  421358:	cmp	x24, #0x0
  42135c:	and	w2, w1, #0x1
  421360:	csel	w2, w2, wzr, ne  // ne = any
  421364:	cbz	w2, 421380 <print_target_variables@@Base+0x1e0>
  421368:	ldr	x0, [x0, #112]
  42136c:	cmp	x0, #0x2
  421370:	ccmn	x0, #0x1, #0x4, ne  // ne = any
  421374:	b.ne	421380 <print_target_variables@@Base+0x1e0>  // b.any
  421378:	str	x0, [x24]
  42137c:	mov	x24, #0x0                   	// #0
  421380:	cbnz	w1, 421404 <print_target_variables@@Base+0x264>
  421384:	strb	wzr, [x19]
  421388:	mov	x1, x20
  42138c:	mov	x0, x21
  421390:	bl	40aa7c <dir_file_exists_p@@Base>
  421394:	cbz	w0, 4213c4 <print_target_variables@@Base+0x224>
  421398:	strb	w27, [x19]
  42139c:	cbz	w0, 42146c <print_target_variables@@Base+0x2cc>
  4213a0:	add	x1, x29, #0x80
  4213a4:	mov	x0, x21
  4213a8:	bl	4228a0 <__libc_csu_fini@@Base+0x18>
  4213ac:	cmn	w0, #0x1
  4213b0:	b.ne	42140c <print_target_variables@@Base+0x26c>  // b.any
  4213b4:	bl	406e00 <__errno_location@plt>
  4213b8:	ldr	w0, [x0]
  4213bc:	cmp	w0, #0x4
  4213c0:	b.eq	4213a0 <print_target_variables@@Base+0x200>  // b.none
  4213c4:	add	w26, w26, #0x1
  4213c8:	b	4212c4 <print_target_variables@@Base+0x124>
  4213cc:	mov	w0, #0x1                   	// #1
  4213d0:	str	w0, [x29, #120]
  4213d4:	b	421270 <print_target_variables@@Base+0xd0>
  4213d8:	mov	x20, x22
  4213dc:	mov	x25, #0x0                   	// #0
  4213e0:	b	4212a0 <print_target_variables@@Base+0x100>
  4213e4:	mov	x20, x22
  4213e8:	b	4212a0 <print_target_variables@@Base+0x100>
  4213ec:	mov	x2, x28
  4213f0:	mov	x1, x20
  4213f4:	mov	x0, x19
  4213f8:	b	421338 <print_target_variables@@Base+0x198>
  4213fc:	ldr	w1, [x29, #120]
  421400:	b	421358 <print_target_variables@@Base+0x1b8>
  421404:	mov	w0, #0x0                   	// #0
  421408:	b	421398 <print_target_variables@@Base+0x1f8>
  42140c:	cbnz	w0, 4213c4 <print_target_variables@@Base+0x224>
  421410:	cbz	x24, 421424 <print_target_variables@@Base+0x284>
  421414:	ldp	x1, x2, [x29, #216]
  421418:	mov	x0, x21
  42141c:	bl	40cfb8 <file_timestamp_cons@@Base>
  421420:	str	x0, [x24]
  421424:	ldr	x0, [x29, #112]
  421428:	cbz	x0, 421430 <print_target_variables@@Base+0x290>
  42142c:	str	w26, [x0]
  421430:	add	x1, x19, #0x1
  421434:	mov	x0, x21
  421438:	sub	x1, x1, x21
  42143c:	add	x1, x1, x23
  421440:	bl	41f1b4 <strcache_add_len@@Base>
  421444:	mov	x19, x0
  421448:	mov	sp, x29
  42144c:	mov	x0, x19
  421450:	ldp	x19, x20, [sp, #16]
  421454:	ldp	x21, x22, [sp, #32]
  421458:	ldp	x23, x24, [sp, #48]
  42145c:	ldp	x25, x26, [sp, #64]
  421460:	ldp	x27, x28, [sp, #80]
  421464:	ldp	x29, x30, [sp], #256
  421468:	ret
  42146c:	cbz	x24, 421424 <print_target_variables@@Base+0x284>
  421470:	str	xzr, [x24]
  421474:	b	421424 <print_target_variables@@Base+0x284>

0000000000421478 <construct_vpath_list@@Base>:
  421478:	stp	x29, x30, [sp, #-96]!
  42147c:	mov	x29, sp
  421480:	stp	x19, x20, [sp, #16]
  421484:	mov	x20, x0
  421488:	mov	x19, x1
  42148c:	stp	x21, x22, [sp, #32]
  421490:	stp	x23, x24, [sp, #48]
  421494:	stp	x25, x26, [sp, #64]
  421498:	stp	x27, x28, [sp, #80]
  42149c:	cbz	x0, 421574 <construct_vpath_list@@Base+0xfc>
  4214a0:	bl	418e90 <find_percent@@Base>
  4214a4:	mov	x22, x0
  4214a8:	cbz	x19, 42157c <construct_vpath_list@@Base+0x104>
  4214ac:	adrp	x27, 43e000 <expanding_var@@Base+0x328>
  4214b0:	add	x27, x27, #0x454
  4214b4:	mov	w1, #0x42                  	// #66
  4214b8:	ldrb	w0, [x19]
  4214bc:	ldrh	w0, [x27, x0, lsl #1]
  4214c0:	tst	w1, w0
  4214c4:	b.ne	421628 <construct_vpath_list@@Base+0x1b0>  // b.any
  4214c8:	mov	x0, x19
  4214cc:	mov	w26, #0x2                   	// #2
  4214d0:	mov	w2, #0x42                  	// #66
  4214d4:	ldrb	w1, [x0]
  4214d8:	cbnz	w1, 421630 <construct_vpath_list@@Base+0x1b8>
  4214dc:	ubfiz	x0, x26, #3, #32
  4214e0:	bl	416a54 <xmalloc@@Base>
  4214e4:	mov	x21, x0
  4214e8:	mov	x24, #0x0                   	// #0
  4214ec:	mov	w23, #0x0                   	// #0
  4214f0:	mov	w2, #0x42                  	// #66
  4214f4:	ldrb	w1, [x19]
  4214f8:	cbnz	w1, 4216c0 <construct_vpath_list@@Base+0x248>
  4214fc:	cbz	w23, 4216e0 <construct_vpath_list@@Base+0x268>
  421500:	sub	w26, w26, #0x1
  421504:	cmp	w26, w23
  421508:	b.ls	421520 <construct_vpath_list@@Base+0xa8>  // b.plast
  42150c:	add	w1, w23, #0x1
  421510:	mov	x0, x21
  421514:	lsl	x1, x1, #3
  421518:	bl	416aa0 <xrealloc@@Base>
  42151c:	mov	x21, x0
  421520:	str	xzr, [x21, w23, uxtw #3]
  421524:	mov	x0, #0x30                  	// #48
  421528:	bl	416a54 <xmalloc@@Base>
  42152c:	mov	x19, x0
  421530:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  421534:	ldr	x1, [x0, #1872]
  421538:	str	x1, [x19]
  42153c:	stp	x21, x24, [x19, #32]
  421540:	str	x19, [x0, #1872]
  421544:	mov	x0, x20
  421548:	bl	41f174 <strcache_add@@Base>
  42154c:	mov	x21, x0
  421550:	str	x21, [x19, #8]
  421554:	mov	x0, x20
  421558:	bl	406700 <strlen@plt>
  42155c:	str	x0, [x19, #24]
  421560:	cbz	x22, 42156c <construct_vpath_list@@Base+0xf4>
  421564:	sub	x20, x22, x20
  421568:	add	x22, x21, x20
  42156c:	str	x22, [x19, #16]
  421570:	b	421590 <construct_vpath_list@@Base+0x118>
  421574:	mov	x22, #0x0                   	// #0
  421578:	b	4214a8 <construct_vpath_list@@Base+0x30>
  42157c:	adrp	x23, 441000 <commands_started@@Base+0x1c0>
  421580:	add	x24, x20, #0x1
  421584:	sub	x25, x22, x20
  421588:	ldr	x21, [x23, #1872]
  42158c:	cbnz	x21, 4215ac <construct_vpath_list@@Base+0x134>
  421590:	ldp	x19, x20, [sp, #16]
  421594:	ldp	x21, x22, [sp, #32]
  421598:	ldp	x23, x24, [sp, #48]
  42159c:	ldp	x25, x26, [sp, #64]
  4215a0:	ldp	x27, x28, [sp, #80]
  4215a4:	ldp	x29, x30, [sp], #96
  4215a8:	ret
  4215ac:	ldr	x26, [x21]
  4215b0:	cbz	x20, 4215f8 <construct_vpath_list@@Base+0x180>
  4215b4:	ldp	x1, x0, [x21, #8]
  4215b8:	cbnz	x22, 4215c0 <construct_vpath_list@@Base+0x148>
  4215bc:	cbz	x0, 4215cc <construct_vpath_list@@Base+0x154>
  4215c0:	sub	x0, x0, x1
  4215c4:	cmp	x25, x0
  4215c8:	b.ne	421614 <construct_vpath_list@@Base+0x19c>  // b.any
  4215cc:	cmp	x1, x20
  4215d0:	b.eq	4215f8 <construct_vpath_list@@Base+0x180>  // b.none
  4215d4:	ldrb	w2, [x20]
  4215d8:	ldrb	w0, [x1]
  4215dc:	cmp	w0, w2
  4215e0:	b.ne	421614 <construct_vpath_list@@Base+0x19c>  // b.any
  4215e4:	cbz	w0, 4215f8 <construct_vpath_list@@Base+0x180>
  4215e8:	add	x1, x1, #0x1
  4215ec:	mov	x0, x24
  4215f0:	bl	406be0 <strcmp@plt>
  4215f4:	cbnz	w0, 421614 <construct_vpath_list@@Base+0x19c>
  4215f8:	cbnz	x19, 421620 <construct_vpath_list@@Base+0x1a8>
  4215fc:	str	x26, [x23, #1872]
  421600:	ldr	x0, [x21, #32]
  421604:	bl	406c20 <free@plt>
  421608:	mov	x0, x21
  42160c:	mov	x21, x19
  421610:	bl	406c20 <free@plt>
  421614:	mov	x19, x21
  421618:	mov	x21, x26
  42161c:	b	42158c <construct_vpath_list@@Base+0x114>
  421620:	str	x26, [x19]
  421624:	b	421600 <construct_vpath_list@@Base+0x188>
  421628:	add	x19, x19, #0x1
  42162c:	b	4214b8 <construct_vpath_list@@Base+0x40>
  421630:	ldrh	w1, [x27, w1, sxtw #1]
  421634:	add	x0, x0, #0x1
  421638:	tst	w2, w1
  42163c:	cinc	w26, w26, ne  // ne = any
  421640:	b	4214d4 <construct_vpath_list@@Base+0x5c>
  421644:	add	x28, x28, #0x1
  421648:	ldrb	w0, [x28]
  42164c:	cmp	w0, #0x3a
  421650:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  421654:	b.eq	421660 <construct_vpath_list@@Base+0x1e8>  // b.none
  421658:	ldrh	w0, [x27, w0, sxtw #1]
  42165c:	tbz	w0, #1, 421644 <construct_vpath_list@@Base+0x1cc>
  421660:	sub	x25, x28, x19
  421664:	cmp	x25, #0x1
  421668:	b.ls	421684 <construct_vpath_list@@Base+0x20c>  // b.plast
  42166c:	ldurb	w0, [x28, #-1]
  421670:	cmp	w0, #0x2f
  421674:	b.ne	42168c <construct_vpath_list@@Base+0x214>  // b.any
  421678:	sub	x25, x25, #0x1
  42167c:	cmp	x25, #0x1
  421680:	b.ne	42168c <construct_vpath_list@@Base+0x214>  // b.any
  421684:	cmp	w1, #0x2e
  421688:	b.eq	4216b8 <construct_vpath_list@@Base+0x240>  // b.none
  42168c:	mov	x1, x25
  421690:	mov	x0, x19
  421694:	add	w19, w23, #0x1
  421698:	ubfiz	x23, x23, #3, #32
  42169c:	bl	41f1b4 <strcache_add_len@@Base>
  4216a0:	bl	40ad4c <dir_name@@Base>
  4216a4:	cmp	x24, x25
  4216a8:	str	x0, [x21, x23]
  4216ac:	csel	x24, x24, x25, cs  // cs = hs, nlast
  4216b0:	mov	w23, w19
  4216b4:	mov	w2, #0x42                  	// #66
  4216b8:	mov	x19, x28
  4216bc:	b	4216cc <construct_vpath_list@@Base+0x254>
  4216c0:	mov	x28, x19
  4216c4:	b	421648 <construct_vpath_list@@Base+0x1d0>
  4216c8:	add	x19, x19, #0x1
  4216cc:	ldrb	w0, [x19]
  4216d0:	ldrh	w0, [x27, x0, lsl #1]
  4216d4:	tst	w2, w0
  4216d8:	b.ne	4216c8 <construct_vpath_list@@Base+0x250>  // b.any
  4216dc:	b	4214f4 <construct_vpath_list@@Base+0x7c>
  4216e0:	mov	x0, x21
  4216e4:	ldp	x19, x20, [sp, #16]
  4216e8:	ldp	x21, x22, [sp, #32]
  4216ec:	ldp	x23, x24, [sp, #48]
  4216f0:	ldp	x25, x26, [sp, #64]
  4216f4:	ldp	x27, x28, [sp, #80]
  4216f8:	ldp	x29, x30, [sp], #96
  4216fc:	b	406c20 <free@plt>

0000000000421700 <build_vpath_lists@@Base>:
  421700:	stp	x29, x30, [sp, #-64]!
  421704:	mov	x1, #0x0                   	// #0
  421708:	mov	x29, sp
  42170c:	stp	x19, x20, [sp, #16]
  421710:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  421714:	ldr	x0, [x19, #1872]
  421718:	stp	x21, x22, [sp, #32]
  42171c:	cbnz	x0, 4217cc <build_vpath_lists@@Base+0xcc>
  421720:	adrp	x20, 441000 <commands_started@@Base+0x1c0>
  421724:	str	x1, [x19, #1872]
  421728:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  42172c:	add	x0, x0, #0x78
  421730:	ldr	w22, [x20, #2056]
  421734:	add	x21, x19, #0x750
  421738:	str	wzr, [x20, #2056]
  42173c:	bl	40ba98 <variable_expand@@Base>
  421740:	str	w22, [x20, #2056]
  421744:	mov	x1, x0
  421748:	ldrb	w0, [x0]
  42174c:	cbz	w0, 421774 <build_vpath_lists@@Base+0x74>
  421750:	mov	w0, #0x25                  	// #37
  421754:	strh	w0, [sp, #56]
  421758:	ldr	x22, [x19, #1872]
  42175c:	add	x0, sp, #0x38
  421760:	str	xzr, [x19, #1872]
  421764:	bl	421478 <construct_vpath_list@@Base>
  421768:	ldr	x0, [x19, #1872]
  42176c:	str	x22, [x19, #1872]
  421770:	str	x0, [x21, #8]
  421774:	ldr	w22, [x20, #2056]
  421778:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  42177c:	str	wzr, [x20, #2056]
  421780:	add	x0, x0, #0x8a
  421784:	bl	40ba98 <variable_expand@@Base>
  421788:	str	w22, [x20, #2056]
  42178c:	mov	x1, x0
  421790:	ldrb	w0, [x0]
  421794:	cbz	w0, 4217bc <build_vpath_lists@@Base+0xbc>
  421798:	mov	w0, #0x25                  	// #37
  42179c:	strh	w0, [sp, #56]
  4217a0:	ldr	x20, [x19, #1872]
  4217a4:	add	x0, sp, #0x38
  4217a8:	str	xzr, [x19, #1872]
  4217ac:	bl	421478 <construct_vpath_list@@Base>
  4217b0:	ldr	x0, [x19, #1872]
  4217b4:	str	x20, [x19, #1872]
  4217b8:	str	x0, [x21, #16]
  4217bc:	ldp	x19, x20, [sp, #16]
  4217c0:	ldp	x21, x22, [sp, #32]
  4217c4:	ldp	x29, x30, [sp], #64
  4217c8:	ret
  4217cc:	ldr	x2, [x0]
  4217d0:	str	x1, [x0]
  4217d4:	mov	x1, x0
  4217d8:	mov	x0, x2
  4217dc:	b	42171c <build_vpath_lists@@Base+0x1c>

00000000004217e0 <gpath_search@@Base>:
  4217e0:	stp	x29, x30, [sp, #-48]!
  4217e4:	mov	x29, sp
  4217e8:	stp	x21, x22, [sp, #32]
  4217ec:	mov	x22, x0
  4217f0:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  4217f4:	stp	x19, x20, [sp, #16]
  4217f8:	ldr	x0, [x0, #1888]
  4217fc:	cbz	x0, 42181c <gpath_search@@Base+0x3c>
  421800:	mov	x19, x1
  421804:	ldr	x1, [x0, #40]
  421808:	cmp	x1, x19
  42180c:	b.cc	42181c <gpath_search@@Base+0x3c>  // b.lo, b.ul, b.last
  421810:	ldr	x21, [x0, #32]
  421814:	ldr	x20, [x21]
  421818:	cbnz	x20, 421830 <gpath_search@@Base+0x50>
  42181c:	mov	w0, #0x0                   	// #0
  421820:	ldp	x19, x20, [sp, #16]
  421824:	ldp	x21, x22, [sp, #32]
  421828:	ldp	x29, x30, [sp], #48
  42182c:	ret
  421830:	mov	x2, x19
  421834:	mov	x1, x22
  421838:	mov	x0, x20
  42183c:	bl	4069b0 <strncmp@plt>
  421840:	cbnz	w0, 42184c <gpath_search@@Base+0x6c>
  421844:	ldrb	w0, [x20, x19]
  421848:	cbz	w0, 421854 <gpath_search@@Base+0x74>
  42184c:	add	x21, x21, #0x8
  421850:	b	421814 <gpath_search@@Base+0x34>
  421854:	mov	w0, #0x1                   	// #1
  421858:	b	421820 <gpath_search@@Base+0x40>

000000000042185c <vpath_search@@Base>:
  42185c:	stp	x29, x30, [sp, #-64]!
  421860:	mov	x29, sp
  421864:	stp	x19, x20, [sp, #16]
  421868:	stp	x21, x22, [sp, #32]
  42186c:	mov	x21, x0
  421870:	stp	x23, x24, [sp, #48]
  421874:	ldrb	w0, [x0]
  421878:	cmp	w0, #0x2f
  42187c:	b.ne	421898 <vpath_search@@Base+0x3c>  // b.any
  421880:	mov	x0, #0x0                   	// #0
  421884:	ldp	x19, x20, [sp, #16]
  421888:	ldp	x21, x22, [sp, #32]
  42188c:	ldp	x23, x24, [sp, #48]
  421890:	ldp	x29, x30, [sp], #64
  421894:	ret
  421898:	adrp	x0, 441000 <commands_started@@Base+0x1c0>
  42189c:	mov	x23, x1
  4218a0:	mov	x20, x2
  4218a4:	mov	x22, x3
  4218a8:	ldr	x19, [x0, #1872]
  4218ac:	add	x24, x0, #0x750
  4218b0:	cbnz	x19, 4218bc <vpath_search@@Base+0x60>
  4218b4:	ldr	x0, [x24, #8]
  4218b8:	cbz	x0, 421880 <vpath_search@@Base+0x24>
  4218bc:	cbz	x20, 4218c8 <vpath_search@@Base+0x6c>
  4218c0:	str	wzr, [x20]
  4218c4:	str	wzr, [x22]
  4218c8:	cbnz	x19, 4218e8 <vpath_search@@Base+0x8c>
  4218cc:	ldr	x0, [x24, #8]
  4218d0:	cbz	x0, 421880 <vpath_search@@Base+0x24>
  4218d4:	mov	x3, x22
  4218d8:	mov	x2, x23
  4218dc:	mov	x1, x21
  4218e0:	bl	421224 <print_target_variables@@Base+0x84>
  4218e4:	b	421884 <vpath_search@@Base+0x28>
  4218e8:	ldp	x0, x1, [x19, #8]
  4218ec:	mov	x2, x21
  4218f0:	bl	40f600 <pattern_matches@@Base>
  4218f4:	cbnz	w0, 421904 <vpath_search@@Base+0xa8>
  4218f8:	cbnz	x20, 421920 <vpath_search@@Base+0xc4>
  4218fc:	ldr	x19, [x19]
  421900:	b	4218c8 <vpath_search@@Base+0x6c>
  421904:	mov	x3, x22
  421908:	mov	x2, x23
  42190c:	mov	x1, x21
  421910:	mov	x0, x19
  421914:	bl	421224 <print_target_variables@@Base+0x84>
  421918:	cbz	x0, 4218f8 <vpath_search@@Base+0x9c>
  42191c:	b	421884 <vpath_search@@Base+0x28>
  421920:	ldr	w0, [x20]
  421924:	add	w0, w0, #0x1
  421928:	str	w0, [x20]
  42192c:	b	4218fc <vpath_search@@Base+0xa0>

0000000000421930 <print_vpath_data_base@@Base>:
  421930:	stp	x29, x30, [sp, #-80]!
  421934:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421938:	add	x1, x1, #0x9c
  42193c:	mov	x29, sp
  421940:	mov	w2, #0x5                   	// #5
  421944:	stp	x19, x20, [sp, #16]
  421948:	adrp	x19, 441000 <commands_started@@Base+0x1c0>
  42194c:	mov	x0, #0x0                   	// #0
  421950:	stp	x21, x22, [sp, #32]
  421954:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x5720>
  421958:	stp	x23, x24, [sp, #48]
  42195c:	add	x22, x22, #0xb3
  421960:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x5720>
  421964:	stp	x25, x26, [sp, #64]
  421968:	bl	406d60 <dcgettext@plt>
  42196c:	bl	406b80 <puts@plt>
  421970:	ldr	x20, [x19, #1872]
  421974:	add	x23, x23, #0xbd
  421978:	mov	w24, #0x0                   	// #0
  42197c:	cbnz	x20, 4219d0 <print_vpath_data_base@@Base+0xa0>
  421980:	ldr	x0, [x19, #1872]
  421984:	mov	w2, #0x5                   	// #5
  421988:	cbnz	x0, 421a1c <print_vpath_data_base@@Base+0xec>
  42198c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421990:	add	x1, x1, #0xc2
  421994:	bl	406d60 <dcgettext@plt>
  421998:	bl	406b80 <puts@plt>
  42199c:	add	x19, x19, #0x750
  4219a0:	ldr	x0, [x19, #8]
  4219a4:	cbnz	x0, 421a38 <print_vpath_data_base@@Base+0x108>
  4219a8:	mov	w2, #0x5                   	// #5
  4219ac:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  4219b0:	add	x1, x1, #0xfa
  4219b4:	bl	406d60 <dcgettext@plt>
  4219b8:	ldp	x19, x20, [sp, #16]
  4219bc:	ldp	x21, x22, [sp, #32]
  4219c0:	ldp	x23, x24, [sp, #48]
  4219c4:	ldp	x25, x26, [sp, #64]
  4219c8:	ldp	x29, x30, [sp], #80
  4219cc:	b	406b80 <puts@plt>
  4219d0:	ldr	x1, [x20, #8]
  4219d4:	add	w24, w24, #0x1
  4219d8:	mov	x0, x22
  4219dc:	mov	w21, #0x0                   	// #0
  4219e0:	mov	w25, #0xa                   	// #10
  4219e4:	mov	w26, #0x3a                  	// #58
  4219e8:	bl	406df0 <printf@plt>
  4219ec:	ldr	x0, [x20, #32]
  4219f0:	ldr	x1, [x0, w21, uxtw #3]
  4219f4:	cbnz	x1, 421a00 <print_vpath_data_base@@Base+0xd0>
  4219f8:	ldr	x20, [x20]
  4219fc:	b	42197c <print_vpath_data_base@@Base+0x4c>
  421a00:	add	w21, w21, #0x1
  421a04:	ldr	x0, [x0, w21, uxtw #3]
  421a08:	cmp	x0, #0x0
  421a0c:	mov	x0, x23
  421a10:	csel	w2, w25, w26, eq  // eq = none
  421a14:	bl	406df0 <printf@plt>
  421a18:	b	4219ec <print_vpath_data_base@@Base+0xbc>
  421a1c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421a20:	mov	x0, #0x0                   	// #0
  421a24:	add	x1, x1, #0xdd
  421a28:	bl	406d60 <dcgettext@plt>
  421a2c:	mov	w1, w24
  421a30:	bl	406df0 <printf@plt>
  421a34:	b	42199c <print_vpath_data_base@@Base+0x6c>
  421a38:	mov	w2, #0x5                   	// #5
  421a3c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421a40:	add	x1, x1, #0x128
  421a44:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x5720>
  421a48:	ldr	x21, [x0, #32]
  421a4c:	mov	x0, #0x0                   	// #0
  421a50:	bl	406d60 <dcgettext@plt>
  421a54:	add	x20, x20, #0xbd
  421a58:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  421a5c:	mov	w19, #0x0                   	// #0
  421a60:	mov	w22, #0xa                   	// #10
  421a64:	mov	w23, #0x3a                  	// #58
  421a68:	ldr	x1, [x1, #400]
  421a6c:	bl	406710 <fputs@plt>
  421a70:	ldr	x1, [x21, w19, uxtw #3]
  421a74:	cbnz	x1, 421a90 <print_vpath_data_base@@Base+0x160>
  421a78:	ldp	x19, x20, [sp, #16]
  421a7c:	ldp	x21, x22, [sp, #32]
  421a80:	ldp	x23, x24, [sp, #48]
  421a84:	ldp	x25, x26, [sp, #64]
  421a88:	ldp	x29, x30, [sp], #80
  421a8c:	ret
  421a90:	add	w19, w19, #0x1
  421a94:	ldr	x0, [x21, w19, uxtw #3]
  421a98:	cmp	x0, #0x0
  421a9c:	mov	x0, x20
  421aa0:	csel	w2, w22, w23, eq  // eq = none
  421aa4:	bl	406df0 <printf@plt>
  421aa8:	b	421a70 <print_vpath_data_base@@Base+0x140>
  421aac:	stp	x29, x30, [sp, #-48]!
  421ab0:	mov	x29, sp
  421ab4:	stp	x19, x20, [sp, #16]
  421ab8:	mov	w20, w0
  421abc:	str	x21, [sp, #32]
  421ac0:	mov	w21, w1
  421ac4:	mov	w0, w20
  421ac8:	mov	w1, #0x3                   	// #3
  421acc:	bl	4224a8 <rpl_fcntl@@Base>
  421ad0:	cmn	w0, #0x1
  421ad4:	b.ne	421af8 <print_vpath_data_base@@Base+0x1c8>  // b.any
  421ad8:	bl	406e00 <__errno_location@plt>
  421adc:	ldr	w0, [x0]
  421ae0:	cmp	w0, #0x4
  421ae4:	b.eq	421ac4 <print_vpath_data_base@@Base+0x194>  // b.none
  421ae8:	ldp	x19, x20, [sp, #16]
  421aec:	ldr	x21, [sp, #32]
  421af0:	ldp	x29, x30, [sp], #48
  421af4:	ret
  421af8:	tbnz	w0, #31, 421ae8 <print_vpath_data_base@@Base+0x1b8>
  421afc:	and	w1, w0, #0xfffff7ff
  421b00:	orr	w19, w0, #0x800
  421b04:	cmp	w21, #0x0
  421b08:	csel	w19, w19, w1, eq  // eq = none
  421b0c:	mov	w2, w19
  421b10:	mov	w0, w20
  421b14:	mov	w1, #0x4                   	// #4
  421b18:	bl	4224a8 <rpl_fcntl@@Base>
  421b1c:	cmn	w0, #0x1
  421b20:	b.ne	421b40 <print_vpath_data_base@@Base+0x210>  // b.any
  421b24:	bl	406e00 <__errno_location@plt>
  421b28:	ldr	w0, [x0]
  421b2c:	cmp	w0, #0x4
  421b30:	b.eq	421b0c <print_vpath_data_base@@Base+0x1dc>  // b.none
  421b34:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  421b38:	add	x0, x0, #0x156
  421b3c:	bl	417590 <pfatal_with_name@@Base>
  421b40:	tbz	w0, #31, 421ae8 <print_vpath_data_base@@Base+0x1b8>
  421b44:	b	421b34 <print_vpath_data_base@@Base+0x204>

0000000000421b48 <jobserver_parse_auth@@Base>:
  421b48:	stp	x29, x30, [sp, #-48]!
  421b4c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421b50:	add	x1, x1, #0x168
  421b54:	mov	x29, sp
  421b58:	stp	x19, x20, [sp, #16]
  421b5c:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  421b60:	add	x20, x19, #0x160
  421b64:	add	x3, x20, #0x4
  421b68:	mov	x2, x20
  421b6c:	str	x21, [sp, #32]
  421b70:	mov	x21, x0
  421b74:	bl	406d80 <__isoc99_sscanf@plt>
  421b78:	cmp	w0, #0x2
  421b7c:	b.eq	421bb4 <jobserver_parse_auth@@Base+0x6c>  // b.none
  421b80:	mov	x0, x21
  421b84:	bl	406700 <strlen@plt>
  421b88:	mov	w2, #0x5                   	// #5
  421b8c:	mov	x19, x0
  421b90:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421b94:	mov	x0, #0x0                   	// #0
  421b98:	add	x1, x1, #0x16e
  421b9c:	bl	406d60 <dcgettext@plt>
  421ba0:	mov	x3, x21
  421ba4:	mov	x2, x0
  421ba8:	mov	x1, x19
  421bac:	mov	x0, #0x0                   	// #0
  421bb0:	bl	417d24 <fatal@@Base>
  421bb4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  421bb8:	ldr	w0, [x0, #1104]
  421bbc:	tbz	w0, #2, 421bec <jobserver_parse_auth@@Base+0xa4>
  421bc0:	mov	w2, #0x5                   	// #5
  421bc4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421bc8:	mov	x0, #0x0                   	// #0
  421bcc:	add	x1, x1, #0x1a3
  421bd0:	bl	406d60 <dcgettext@plt>
  421bd4:	ldr	w1, [x19, #352]
  421bd8:	ldr	w2, [x20, #4]
  421bdc:	bl	406df0 <printf@plt>
  421be0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  421be4:	ldr	x0, [x0, #400]
  421be8:	bl	406cb0 <fflush@plt>
  421bec:	ldr	w0, [x19, #352]
  421bf0:	mov	w1, #0x1                   	// #1
  421bf4:	bl	4224a8 <rpl_fcntl@@Base>
  421bf8:	cmn	w0, #0x1
  421bfc:	b.ne	421c28 <jobserver_parse_auth@@Base+0xe0>  // b.any
  421c00:	bl	406e00 <__errno_location@plt>
  421c04:	ldr	w0, [x0]
  421c08:	cmp	w0, #0x9
  421c0c:	b.eq	421c50 <jobserver_parse_auth@@Base+0x108>  // b.none
  421c10:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421c14:	add	x1, x1, #0x1c1
  421c18:	mov	w2, #0x5                   	// #5
  421c1c:	mov	x0, #0x0                   	// #0
  421c20:	bl	406d60 <dcgettext@plt>
  421c24:	bl	417590 <pfatal_with_name@@Base>
  421c28:	ldr	w0, [x20, #4]
  421c2c:	mov	w1, #0x1                   	// #1
  421c30:	bl	4224a8 <rpl_fcntl@@Base>
  421c34:	cmn	w0, #0x1
  421c38:	b.eq	421c00 <jobserver_parse_auth@@Base+0xb8>  // b.none
  421c3c:	ldr	w0, [x19, #352]
  421c40:	mov	w1, #0x0                   	// #0
  421c44:	bl	421aac <print_vpath_data_base@@Base+0x17c>
  421c48:	mov	w0, #0x1                   	// #1
  421c4c:	b	421c5c <jobserver_parse_auth@@Base+0x114>
  421c50:	mov	x0, #0xffffffffffffffff    	// #-1
  421c54:	str	x0, [x20]
  421c58:	mov	w0, #0x0                   	// #0
  421c5c:	ldp	x19, x20, [sp, #16]
  421c60:	ldr	x21, [sp, #32]
  421c64:	ldp	x29, x30, [sp], #48
  421c68:	ret

0000000000421c6c <jobserver_get_auth@@Base>:
  421c6c:	stp	x29, x30, [sp, #-32]!
  421c70:	mov	x0, #0x2a                  	// #42
  421c74:	mov	x29, sp
  421c78:	str	x19, [sp, #16]
  421c7c:	bl	416a54 <xmalloc@@Base>
  421c80:	adrp	x1, 43e000 <expanding_var@@Base+0x328>
  421c84:	add	x2, x1, #0x160
  421c88:	mov	x19, x0
  421c8c:	ldr	w3, [x2, #4]
  421c90:	ldr	w2, [x1, #352]
  421c94:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421c98:	add	x1, x1, #0x168
  421c9c:	bl	4067a0 <sprintf@plt>
  421ca0:	mov	x0, x19
  421ca4:	ldr	x19, [sp, #16]
  421ca8:	ldp	x29, x30, [sp], #32
  421cac:	ret

0000000000421cb0 <jobserver_enabled@@Base>:
  421cb0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  421cb4:	ldr	w0, [x0, #352]
  421cb8:	mvn	w0, w0
  421cbc:	lsr	w0, w0, #31
  421cc0:	ret

0000000000421cc4 <jobserver_clear@@Base>:
  421cc4:	stp	x29, x30, [sp, #-32]!
  421cc8:	mov	x29, sp
  421ccc:	str	x19, [sp, #16]
  421cd0:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  421cd4:	ldr	w0, [x19, #352]
  421cd8:	tbnz	w0, #31, 421ce0 <jobserver_clear@@Base+0x1c>
  421cdc:	bl	406ae0 <close@plt>
  421ce0:	add	x19, x19, #0x160
  421ce4:	ldr	w0, [x19, #4]
  421ce8:	tbnz	w0, #31, 421cf0 <jobserver_clear@@Base+0x2c>
  421cec:	bl	406ae0 <close@plt>
  421cf0:	ldr	w0, [x19, #8]
  421cf4:	tbnz	w0, #31, 421cfc <jobserver_clear@@Base+0x38>
  421cf8:	bl	406ae0 <close@plt>
  421cfc:	mov	w0, #0xffffffff            	// #-1
  421d00:	str	w0, [x19, #8]
  421d04:	mov	x0, #0xffffffffffffffff    	// #-1
  421d08:	str	x0, [x19]
  421d0c:	ldr	x19, [sp, #16]
  421d10:	ldp	x29, x30, [sp], #32
  421d14:	ret

0000000000421d18 <jobserver_release@@Base>:
  421d18:	stp	x29, x30, [sp, #-48]!
  421d1c:	mov	x29, sp
  421d20:	stp	x19, x20, [sp, #16]
  421d24:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  421d28:	add	x19, x19, #0x160
  421d2c:	mov	w20, w0
  421d30:	str	x21, [sp, #32]
  421d34:	add	x21, x19, #0xc
  421d38:	ldr	w0, [x19, #4]
  421d3c:	mov	x1, x21
  421d40:	mov	x2, #0x1                   	// #1
  421d44:	bl	406b30 <write@plt>
  421d48:	cmn	w0, #0x1
  421d4c:	b.ne	421d7c <jobserver_release@@Base+0x64>  // b.any
  421d50:	bl	406e00 <__errno_location@plt>
  421d54:	ldr	w0, [x0]
  421d58:	cmp	w0, #0x4
  421d5c:	b.eq	421d38 <jobserver_release@@Base+0x20>  // b.none
  421d60:	cbz	w20, 421d94 <jobserver_release@@Base+0x7c>
  421d64:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421d68:	add	x1, x1, #0x1d4
  421d6c:	mov	w2, #0x5                   	// #5
  421d70:	mov	x0, #0x0                   	// #0
  421d74:	bl	406d60 <dcgettext@plt>
  421d78:	bl	417590 <pfatal_with_name@@Base>
  421d7c:	cmp	w0, #0x1
  421d80:	b.ne	421d60 <jobserver_release@@Base+0x48>  // b.any
  421d84:	ldp	x19, x20, [sp, #16]
  421d88:	ldr	x21, [sp, #32]
  421d8c:	ldp	x29, x30, [sp], #48
  421d90:	ret
  421d94:	ldp	x19, x20, [sp, #16]
  421d98:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  421d9c:	ldr	x21, [sp, #32]
  421da0:	add	x1, x1, #0x819
  421da4:	ldp	x29, x30, [sp], #48
  421da8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  421dac:	add	x0, x0, #0x1e4
  421db0:	b	417c10 <perror_with_name@@Base>

0000000000421db4 <jobserver_acquire_all@@Base>:
  421db4:	stp	x29, x30, [sp, #-48]!
  421db8:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  421dbc:	mov	w1, #0x1                   	// #1
  421dc0:	mov	x29, sp
  421dc4:	stp	x19, x20, [sp, #16]
  421dc8:	add	x20, x0, #0x160
  421dcc:	ldr	w0, [x0, #352]
  421dd0:	mov	w19, #0x0                   	// #0
  421dd4:	bl	421aac <print_vpath_data_base@@Base+0x17c>
  421dd8:	ldr	w0, [x20, #4]
  421ddc:	bl	406ae0 <close@plt>
  421de0:	mov	w0, #0xffffffff            	// #-1
  421de4:	str	w0, [x20, #4]
  421de8:	ldr	w0, [x20]
  421dec:	add	x1, sp, #0x2f
  421df0:	mov	x2, #0x1                   	// #1
  421df4:	bl	406d10 <read@plt>
  421df8:	cmn	w0, #0x1
  421dfc:	b.ne	421e20 <jobserver_acquire_all@@Base+0x6c>  // b.any
  421e00:	bl	406e00 <__errno_location@plt>
  421e04:	ldr	w0, [x0]
  421e08:	cmp	w0, #0x4
  421e0c:	b.eq	421de8 <jobserver_acquire_all@@Base+0x34>  // b.none
  421e10:	mov	w0, w19
  421e14:	ldp	x19, x20, [sp, #16]
  421e18:	ldp	x29, x30, [sp], #48
  421e1c:	ret
  421e20:	cmp	w0, #0x1
  421e24:	b.ne	421e10 <jobserver_acquire_all@@Base+0x5c>  // b.any
  421e28:	add	w19, w19, #0x1
  421e2c:	b	421de8 <jobserver_acquire_all@@Base+0x34>

0000000000421e30 <jobserver_signal@@Base>:
  421e30:	stp	x29, x30, [sp, #-32]!
  421e34:	mov	x29, sp
  421e38:	str	x19, [sp, #16]
  421e3c:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  421e40:	add	x19, x19, #0x160
  421e44:	ldr	w0, [x19, #8]
  421e48:	tbnz	w0, #31, 421e58 <jobserver_signal@@Base+0x28>
  421e4c:	bl	406ae0 <close@plt>
  421e50:	mov	w0, #0xffffffff            	// #-1
  421e54:	str	w0, [x19, #8]
  421e58:	ldr	x19, [sp, #16]
  421e5c:	ldp	x29, x30, [sp], #32
  421e60:	ret

0000000000421e64 <jobserver_pre_acquire@@Base>:
  421e64:	ret

0000000000421e68 <jobserver_acquire@@Base>:
  421e68:	stp	x29, x30, [sp, #-352]!
  421e6c:	mov	x29, sp
  421e70:	stp	x19, x20, [sp, #16]
  421e74:	mov	w19, w0
  421e78:	add	x0, sp, #0x60
  421e7c:	stp	x21, x22, [sp, #32]
  421e80:	str	x23, [sp, #48]
  421e84:	bl	406990 <sigemptyset@plt>
  421e88:	cbz	w19, 421f50 <jobserver_acquire@@Base+0xe8>
  421e8c:	add	x21, sp, #0x50
  421e90:	mov	x0, #0x1                   	// #1
  421e94:	stp	x0, xzr, [sp, #80]
  421e98:	adrp	x20, 43e000 <expanding_var@@Base+0x328>
  421e9c:	add	x19, sp, #0xe0
  421ea0:	add	x20, x20, #0x160
  421ea4:	mov	w22, #0x40                  	// #64
  421ea8:	mov	x23, #0x1                   	// #1
  421eac:	mov	x0, #0x0                   	// #0
  421eb0:	str	xzr, [x19, x0, lsl #3]
  421eb4:	add	x0, x0, #0x1
  421eb8:	cmp	x0, #0x10
  421ebc:	b.ne	421eb0 <jobserver_acquire@@Base+0x48>  // b.any
  421ec0:	ldr	w0, [x20]
  421ec4:	add	x5, sp, #0x60
  421ec8:	mov	x4, x21
  421ecc:	negs	w1, w0
  421ed0:	and	w3, w0, #0x3f
  421ed4:	and	w1, w1, #0x3f
  421ed8:	sdiv	w2, w0, w22
  421edc:	csneg	w1, w3, w1, mi  // mi = first
  421ee0:	add	w0, w0, #0x1
  421ee4:	lsl	x1, x23, x1
  421ee8:	sbfiz	x2, x2, #3, #32
  421eec:	ldr	x3, [x19, x2]
  421ef0:	orr	x1, x1, x3
  421ef4:	mov	x3, #0x0                   	// #0
  421ef8:	str	x1, [x19, x2]
  421efc:	mov	x1, x19
  421f00:	mov	x2, #0x0                   	// #0
  421f04:	bl	406a50 <pselect@plt>
  421f08:	cmp	w0, #0x0
  421f0c:	b.ge	421f6c <jobserver_acquire@@Base+0x104>  // b.tcont
  421f10:	bl	406e00 <__errno_location@plt>
  421f14:	ldr	w1, [x0]
  421f18:	mov	w0, #0x0                   	// #0
  421f1c:	cmp	w1, #0x4
  421f20:	b.eq	421fc4 <jobserver_acquire@@Base+0x15c>  // b.none
  421f24:	cmp	w1, #0x9
  421f28:	mov	w2, #0x5                   	// #5
  421f2c:	b.ne	421f58 <jobserver_acquire@@Base+0xf0>  // b.any
  421f30:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421f34:	mov	x0, #0x0                   	// #0
  421f38:	add	x1, x1, #0x1ea
  421f3c:	bl	406d60 <dcgettext@plt>
  421f40:	mov	x1, #0x0                   	// #0
  421f44:	mov	x2, x0
  421f48:	mov	x0, #0x0                   	// #0
  421f4c:	bl	417d24 <fatal@@Base>
  421f50:	mov	x21, #0x0                   	// #0
  421f54:	b	421e98 <jobserver_acquire@@Base+0x30>
  421f58:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421f5c:	add	x1, x1, #0x1ff
  421f60:	mov	x0, #0x0                   	// #0
  421f64:	bl	406d60 <dcgettext@plt>
  421f68:	bl	417590 <pfatal_with_name@@Base>
  421f6c:	b.eq	421fd8 <jobserver_acquire@@Base+0x170>  // b.none
  421f70:	ldr	w0, [x20]
  421f74:	add	x1, sp, #0x4f
  421f78:	mov	x2, #0x1                   	// #1
  421f7c:	bl	406d10 <read@plt>
  421f80:	cmn	w0, #0x1
  421f84:	b.ne	421fb8 <jobserver_acquire@@Base+0x150>  // b.any
  421f88:	bl	406e00 <__errno_location@plt>
  421f8c:	ldr	w0, [x0]
  421f90:	cmp	w0, #0x4
  421f94:	b.eq	421f70 <jobserver_acquire@@Base+0x108>  // b.none
  421f98:	bl	406e00 <__errno_location@plt>
  421f9c:	ldr	w0, [x0]
  421fa0:	cmp	w0, #0xb
  421fa4:	b.eq	421eac <jobserver_acquire@@Base+0x44>  // b.none
  421fa8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  421fac:	mov	w2, #0x5                   	// #5
  421fb0:	add	x1, x1, #0x211
  421fb4:	b	421f60 <jobserver_acquire@@Base+0xf8>
  421fb8:	cmp	w0, #0x0
  421fbc:	b.lt	421f98 <jobserver_acquire@@Base+0x130>  // b.tstop
  421fc0:	cset	w0, gt
  421fc4:	ldp	x19, x20, [sp, #16]
  421fc8:	ldp	x21, x22, [sp, #32]
  421fcc:	ldr	x23, [sp, #48]
  421fd0:	ldp	x29, x30, [sp], #352
  421fd4:	ret
  421fd8:	mov	w0, #0x0                   	// #0
  421fdc:	b	421fc4 <jobserver_acquire@@Base+0x15c>

0000000000421fe0 <fd_inherit@@Base>:
  421fe0:	stp	x29, x30, [sp, #-32]!
  421fe4:	mov	x29, sp
  421fe8:	stp	x19, x20, [sp, #16]
  421fec:	mov	w20, w0
  421ff0:	mov	w0, w20
  421ff4:	mov	w1, #0x1                   	// #1
  421ff8:	bl	4224a8 <rpl_fcntl@@Base>
  421ffc:	cmn	w0, #0x1
  422000:	b.ne	422020 <fd_inherit@@Base+0x40>  // b.any
  422004:	bl	406e00 <__errno_location@plt>
  422008:	ldr	w0, [x0]
  42200c:	cmp	w0, #0x4
  422010:	b.eq	421ff0 <fd_inherit@@Base+0x10>  // b.none
  422014:	ldp	x19, x20, [sp, #16]
  422018:	ldp	x29, x30, [sp], #32
  42201c:	ret
  422020:	tbnz	w0, #31, 422014 <fd_inherit@@Base+0x34>
  422024:	and	w19, w0, #0xfffffffe
  422028:	mov	w2, w19
  42202c:	mov	w0, w20
  422030:	mov	w1, #0x2                   	// #2
  422034:	bl	4224a8 <rpl_fcntl@@Base>
  422038:	cmn	w0, #0x1
  42203c:	b.ne	422014 <fd_inherit@@Base+0x34>  // b.any
  422040:	bl	406e00 <__errno_location@plt>
  422044:	ldr	w0, [x0]
  422048:	cmp	w0, #0x4
  42204c:	b.eq	422028 <fd_inherit@@Base+0x48>  // b.none
  422050:	b	422014 <fd_inherit@@Base+0x34>

0000000000422054 <jobserver_pre_child@@Base>:
  422054:	cbz	w0, 422094 <jobserver_pre_child@@Base+0x40>
  422058:	stp	x29, x30, [sp, #-32]!
  42205c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  422060:	mov	x29, sp
  422064:	str	x19, [sp, #16]
  422068:	add	x19, x0, #0x160
  42206c:	ldr	w0, [x0, #352]
  422070:	tbnz	w0, #31, 422088 <jobserver_pre_child@@Base+0x34>
  422074:	bl	421fe0 <fd_inherit@@Base>
  422078:	ldr	w0, [x19, #4]
  42207c:	ldr	x19, [sp, #16]
  422080:	ldp	x29, x30, [sp], #32
  422084:	b	421fe0 <fd_inherit@@Base>
  422088:	ldr	x19, [sp, #16]
  42208c:	ldp	x29, x30, [sp], #32
  422090:	ret
  422094:	ret

0000000000422098 <fd_noinherit@@Base>:
  422098:	stp	x29, x30, [sp, #-32]!
  42209c:	mov	x29, sp
  4220a0:	stp	x19, x20, [sp, #16]
  4220a4:	mov	w20, w0
  4220a8:	mov	w0, w20
  4220ac:	mov	w1, #0x1                   	// #1
  4220b0:	bl	4224a8 <rpl_fcntl@@Base>
  4220b4:	cmn	w0, #0x1
  4220b8:	b.ne	4220d8 <fd_noinherit@@Base+0x40>  // b.any
  4220bc:	bl	406e00 <__errno_location@plt>
  4220c0:	ldr	w0, [x0]
  4220c4:	cmp	w0, #0x4
  4220c8:	b.eq	4220a8 <fd_noinherit@@Base+0x10>  // b.none
  4220cc:	ldp	x19, x20, [sp, #16]
  4220d0:	ldp	x29, x30, [sp], #32
  4220d4:	ret
  4220d8:	tbnz	w0, #31, 4220cc <fd_noinherit@@Base+0x34>
  4220dc:	orr	w19, w0, #0x1
  4220e0:	mov	w2, w19
  4220e4:	mov	w0, w20
  4220e8:	mov	w1, #0x2                   	// #2
  4220ec:	bl	4224a8 <rpl_fcntl@@Base>
  4220f0:	cmn	w0, #0x1
  4220f4:	b.ne	4220cc <fd_noinherit@@Base+0x34>  // b.any
  4220f8:	bl	406e00 <__errno_location@plt>
  4220fc:	ldr	w0, [x0]
  422100:	cmp	w0, #0x4
  422104:	b.eq	4220e0 <fd_noinherit@@Base+0x48>  // b.none
  422108:	b	4220cc <fd_noinherit@@Base+0x34>

000000000042210c <jobserver_setup@@Base>:
  42210c:	stp	x29, x30, [sp, #-48]!
  422110:	mov	x29, sp
  422114:	stp	x19, x20, [sp, #16]
  422118:	mov	w19, w0
  42211c:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  422120:	add	x20, x0, #0x160
  422124:	stp	x21, x22, [sp, #32]
  422128:	mov	x21, x0
  42212c:	mov	x0, x20
  422130:	bl	4067c0 <pipe@plt>
  422134:	cmn	w0, #0x1
  422138:	b.ne	422164 <jobserver_setup@@Base+0x58>  // b.any
  42213c:	bl	406e00 <__errno_location@plt>
  422140:	ldr	w0, [x0]
  422144:	cmp	w0, #0x4
  422148:	b.eq	42212c <jobserver_setup@@Base+0x20>  // b.none
  42214c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  422150:	add	x1, x1, #0x220
  422154:	mov	w2, #0x5                   	// #5
  422158:	mov	x0, #0x0                   	// #0
  42215c:	bl	406d60 <dcgettext@plt>
  422160:	bl	417590 <pfatal_with_name@@Base>
  422164:	tbnz	w0, #31, 42214c <jobserver_setup@@Base+0x40>
  422168:	ldr	w0, [x20]
  42216c:	add	x22, x20, #0xc
  422170:	bl	422098 <fd_noinherit@@Base>
  422174:	ldr	w0, [x20, #4]
  422178:	bl	422098 <fd_noinherit@@Base>
  42217c:	cbnz	w19, 4221a0 <jobserver_setup@@Base+0x94>
  422180:	ldr	w0, [x21, #352]
  422184:	mov	w1, #0x0                   	// #0
  422188:	bl	421aac <print_vpath_data_base@@Base+0x17c>
  42218c:	mov	w0, #0x1                   	// #1
  422190:	ldp	x19, x20, [sp, #16]
  422194:	ldp	x21, x22, [sp, #32]
  422198:	ldp	x29, x30, [sp], #48
  42219c:	ret
  4221a0:	ldr	w0, [x20, #4]
  4221a4:	mov	x1, x22
  4221a8:	mov	x2, #0x1                   	// #1
  4221ac:	bl	406b30 <write@plt>
  4221b0:	cmn	w0, #0x1
  4221b4:	b.ne	4221d8 <jobserver_setup@@Base+0xcc>  // b.any
  4221b8:	bl	406e00 <__errno_location@plt>
  4221bc:	ldr	w0, [x0]
  4221c0:	cmp	w0, #0x4
  4221c4:	b.eq	4221a0 <jobserver_setup@@Base+0x94>  // b.none
  4221c8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x5720>
  4221cc:	mov	w2, #0x5                   	// #5
  4221d0:	add	x1, x1, #0x233
  4221d4:	b	422158 <jobserver_setup@@Base+0x4c>
  4221d8:	sub	w19, w19, #0x1
  4221dc:	cmp	w0, #0x1
  4221e0:	b.eq	42217c <jobserver_setup@@Base+0x70>  // b.none
  4221e4:	b	4221c8 <jobserver_setup@@Base+0xbc>

00000000004221e8 <jobserver_post_child@@Base>:
  4221e8:	cbz	w0, 422228 <jobserver_post_child@@Base+0x40>
  4221ec:	stp	x29, x30, [sp, #-32]!
  4221f0:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4221f4:	mov	x29, sp
  4221f8:	str	x19, [sp, #16]
  4221fc:	add	x19, x0, #0x160
  422200:	ldr	w0, [x0, #352]
  422204:	tbnz	w0, #31, 42221c <jobserver_post_child@@Base+0x34>
  422208:	bl	422098 <fd_noinherit@@Base>
  42220c:	ldr	w0, [x19, #4]
  422210:	ldr	x19, [sp, #16]
  422214:	ldp	x29, x30, [sp], #32
  422218:	b	422098 <fd_noinherit@@Base>
  42221c:	ldr	x19, [sp, #16]
  422220:	ldp	x29, x30, [sp], #32
  422224:	ret
  422228:	ret

000000000042222c <get_bad_stdin@@Base>:
  42222c:	stp	x29, x30, [sp, #-48]!
  422230:	mov	x29, sp
  422234:	str	x19, [sp, #16]
  422238:	adrp	x19, 43e000 <expanding_var@@Base+0x328>
  42223c:	add	x19, x19, #0x160
  422240:	ldr	w0, [x19, #16]
  422244:	cmn	w0, #0x1
  422248:	b.ne	42226c <get_bad_stdin@@Base+0x40>  // b.any
  42224c:	add	x0, sp, #0x28
  422250:	bl	4067c0 <pipe@plt>
  422254:	cbnz	w0, 42226c <get_bad_stdin@@Base+0x40>
  422258:	ldr	w0, [sp, #44]
  42225c:	bl	406ae0 <close@plt>
  422260:	ldr	w0, [sp, #40]
  422264:	str	w0, [x19, #16]
  422268:	bl	422098 <fd_noinherit@@Base>
  42226c:	ldr	w0, [x19, #16]
  422270:	ldr	x19, [sp, #16]
  422274:	ldp	x29, x30, [sp], #48
  422278:	ret

000000000042227c <remote_setup@@Base>:
  42227c:	ret

0000000000422280 <remote_cleanup@@Base>:
  422280:	ret

0000000000422284 <start_remote_job_p@@Base>:
  422284:	mov	w0, #0x0                   	// #0
  422288:	ret

000000000042228c <start_remote_job@@Base>:
  42228c:	mov	w0, #0xffffffff            	// #-1
  422290:	ret

0000000000422294 <remote_status@@Base>:
  422294:	stp	x29, x30, [sp, #-16]!
  422298:	mov	x29, sp
  42229c:	bl	406e00 <__errno_location@plt>
  4222a0:	mov	w1, #0xa                   	// #10
  4222a4:	str	w1, [x0]
  4222a8:	mov	w0, #0xffffffff            	// #-1
  4222ac:	ldp	x29, x30, [sp], #16
  4222b0:	ret

00000000004222b4 <block_remote_children@@Base>:
  4222b4:	ret

00000000004222b8 <unblock_remote_children@@Base>:
  4222b8:	ret

00000000004222bc <remote_kill@@Base>:
  4222bc:	mov	w0, #0xffffffff            	// #-1
  4222c0:	ret

00000000004222c4 <find_in_given_path@@Base>:
  4222c4:	stp	x29, x30, [sp, #-96]!
  4222c8:	and	w2, w2, #0xff
  4222cc:	mov	x29, sp
  4222d0:	stp	x19, x20, [sp, #16]
  4222d4:	mov	x19, x0
  4222d8:	mov	x0, x1
  4222dc:	mov	x1, x19
  4222e0:	stp	x21, x22, [sp, #32]
  4222e4:	stp	x23, x24, [sp, #48]
  4222e8:	stp	x25, x26, [sp, #64]
  4222ec:	str	x27, [sp, #80]
  4222f0:	ldrb	w3, [x1]
  4222f4:	cbnz	w3, 4223bc <find_in_given_path@@Base+0xf8>
  4222f8:	cbnz	x0, 422304 <find_in_given_path@@Base+0x40>
  4222fc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x1720>
  422300:	add	x0, x0, #0x819
  422304:	adrp	x26, 425000 <_IO_stdin_used@@Base+0x2720>
  422308:	adrp	x25, 424000 <_IO_stdin_used@@Base+0x1720>
  42230c:	bl	416c24 <xstrdup@@Base>
  422310:	add	x26, x26, #0x64e
  422314:	mov	x22, x0
  422318:	add	x25, x25, #0x819
  42231c:	mov	w24, #0x2                   	// #2
  422320:	mov	x21, x0
  422324:	ldrb	w27, [x21]
  422328:	cmp	w27, #0x3a
  42232c:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  422330:	b.ne	4223ec <find_in_given_path@@Base+0x128>  // b.any
  422334:	cmp	x0, x21
  422338:	mov	x2, x25
  42233c:	strb	wzr, [x21]
  422340:	mov	x1, x19
  422344:	csel	x0, x0, x26, ne  // ne = any
  422348:	bl	42248c <xconcatenated_filename@@Base>
  42234c:	mov	x20, x0
  422350:	mov	w1, #0x1                   	// #1
  422354:	bl	406880 <eaccess@plt>
  422358:	cbnz	w0, 4223f4 <find_in_given_path@@Base+0x130>
  42235c:	mov	x1, x19
  422360:	mov	x0, x20
  422364:	bl	406be0 <strcmp@plt>
  422368:	cbnz	w0, 4223ac <find_in_given_path@@Base+0xe8>
  42236c:	mov	x0, x20
  422370:	bl	406c20 <free@plt>
  422374:	mov	x0, x19
  422378:	bl	406700 <strlen@plt>
  42237c:	add	x0, x0, #0x3
  422380:	bl	416a54 <xmalloc@@Base>
  422384:	mov	x21, x0
  422388:	mov	x20, x0
  42238c:	mov	w0, #0x2f2e                	// #12078
  422390:	strh	w0, [x21], #2
  422394:	mov	x0, x19
  422398:	bl	406700 <strlen@plt>
  42239c:	add	x2, x0, #0x1
  4223a0:	mov	x1, x19
  4223a4:	mov	x0, x21
  4223a8:	bl	4066c0 <memcpy@plt>
  4223ac:	mov	x0, x22
  4223b0:	bl	406c20 <free@plt>
  4223b4:	mov	x19, x20
  4223b8:	b	42246c <find_in_given_path@@Base+0x1a8>
  4223bc:	cmp	w3, #0x2f
  4223c0:	b.eq	42242c <find_in_given_path@@Base+0x168>  // b.none
  4223c4:	add	x1, x1, #0x1
  4223c8:	b	4222f0 <find_in_given_path@@Base+0x2c>
  4223cc:	bl	406e00 <__errno_location@plt>
  4223d0:	mov	x19, x0
  4223d4:	mov	x0, x20
  4223d8:	ldr	w21, [x19]
  4223dc:	bl	406c20 <free@plt>
  4223e0:	str	w21, [x19]
  4223e4:	mov	x19, #0x0                   	// #0
  4223e8:	b	42246c <find_in_given_path@@Base+0x1a8>
  4223ec:	add	x21, x21, #0x1
  4223f0:	b	422324 <find_in_given_path@@Base+0x60>
  4223f4:	bl	406e00 <__errno_location@plt>
  4223f8:	mov	x23, x0
  4223fc:	ldr	w0, [x0]
  422400:	cmp	w0, #0x2
  422404:	csel	w24, w24, w0, eq  // eq = none
  422408:	mov	x0, x20
  42240c:	bl	406c20 <free@plt>
  422410:	cbz	w27, 42241c <find_in_given_path@@Base+0x158>
  422414:	add	x0, x21, #0x1
  422418:	b	422320 <find_in_given_path@@Base+0x5c>
  42241c:	mov	x0, x22
  422420:	bl	406c20 <free@plt>
  422424:	str	w24, [x23]
  422428:	b	4223e4 <find_in_given_path@@Base+0x120>
  42242c:	cbnz	w2, 42246c <find_in_given_path@@Base+0x1a8>
  422430:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  422434:	add	x2, x2, #0x819
  422438:	mov	x1, x19
  42243c:	mov	x0, x2
  422440:	bl	42248c <xconcatenated_filename@@Base>
  422444:	mov	x20, x0
  422448:	mov	w1, #0x1                   	// #1
  42244c:	bl	406880 <eaccess@plt>
  422450:	cbnz	w0, 4223cc <find_in_given_path@@Base+0x108>
  422454:	mov	x1, x19
  422458:	mov	x0, x20
  42245c:	bl	406be0 <strcmp@plt>
  422460:	cbnz	w0, 4223b4 <find_in_given_path@@Base+0xf0>
  422464:	mov	x0, x20
  422468:	bl	406c20 <free@plt>
  42246c:	mov	x0, x19
  422470:	ldp	x19, x20, [sp, #16]
  422474:	ldp	x21, x22, [sp, #32]
  422478:	ldp	x23, x24, [sp, #48]
  42247c:	ldp	x25, x26, [sp, #64]
  422480:	ldr	x27, [sp, #80]
  422484:	ldp	x29, x30, [sp], #96
  422488:	ret

000000000042248c <xconcatenated_filename@@Base>:
  42248c:	stp	x29, x30, [sp, #-16]!
  422490:	mov	x29, sp
  422494:	bl	4226b4 <concatenated_filename@@Base>
  422498:	cbnz	x0, 4224a0 <xconcatenated_filename@@Base+0x14>
  42249c:	bl	4227c0 <xalloc_die@@Base>
  4224a0:	ldp	x29, x30, [sp], #16
  4224a4:	ret

00000000004224a8 <rpl_fcntl@@Base>:
  4224a8:	stp	x29, x30, [sp, #-128]!
  4224ac:	mov	x29, sp
  4224b0:	stp	x2, x3, [sp, #96]
  4224b4:	add	x2, sp, #0x80
  4224b8:	stp	x2, x2, [sp, #64]
  4224bc:	add	x2, sp, #0x60
  4224c0:	stp	x19, x20, [sp, #16]
  4224c4:	stp	x21, x22, [sp, #32]
  4224c8:	str	x23, [sp, #48]
  4224cc:	str	x2, [sp, #80]
  4224d0:	mov	w2, #0xffffffe0            	// #-32
  4224d4:	str	w2, [sp, #88]
  4224d8:	str	wzr, [sp, #92]
  4224dc:	stp	x4, x5, [sp, #112]
  4224e0:	cbz	w1, 422528 <rpl_fcntl@@Base+0x80>
  4224e4:	mov	w20, w0
  4224e8:	mov	w6, w1
  4224ec:	cmp	w1, #0x406
  4224f0:	b.eq	422534 <rpl_fcntl@@Base+0x8c>  // b.none
  4224f4:	cmp	w1, #0xb
  4224f8:	b.gt	422638 <rpl_fcntl@@Base+0x190>
  4224fc:	cmp	w1, #0x0
  422500:	b.le	422644 <rpl_fcntl@@Base+0x19c>
  422504:	sub	w1, w1, #0x1
  422508:	cmp	w1, #0xa
  42250c:	b.hi	422644 <rpl_fcntl@@Base+0x19c>  // b.pmore
  422510:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  422514:	add	x0, x0, #0x248
  422518:	ldrb	w0, [x0, w1, uxtw]
  42251c:	adr	x1, 422528 <rpl_fcntl@@Base+0x80>
  422520:	add	x0, x1, w0, sxtb #2
  422524:	br	x0
  422528:	ldr	w2, [sp, #96]
  42252c:	bl	406c90 <fcntl@plt>
  422530:	b	422680 <rpl_fcntl@@Base+0x1d8>
  422534:	adrp	x21, 441000 <commands_started@@Base+0x1c0>
  422538:	mov	w2, #0xffffffe8            	// #-24
  42253c:	str	w2, [sp, #88]
  422540:	mov	x23, x21
  422544:	ldr	w2, [x21, #1904]
  422548:	ldr	w22, [sp, #96]
  42254c:	tbnz	w2, #31, 4225e0 <rpl_fcntl@@Base+0x138>
  422550:	mov	w2, w22
  422554:	bl	406c90 <fcntl@plt>
  422558:	mov	w19, w0
  42255c:	tbz	w0, #31, 422570 <rpl_fcntl@@Base+0xc8>
  422560:	bl	406e00 <__errno_location@plt>
  422564:	ldr	w0, [x0]
  422568:	cmp	w0, #0x16
  42256c:	b.eq	422590 <rpl_fcntl@@Base+0xe8>  // b.none
  422570:	mov	w0, #0x1                   	// #1
  422574:	str	w0, [x23, #1904]
  422578:	mov	w0, w19
  42257c:	ldp	x19, x20, [sp, #16]
  422580:	ldp	x21, x22, [sp, #32]
  422584:	ldr	x23, [sp, #48]
  422588:	ldp	x29, x30, [sp], #128
  42258c:	ret
  422590:	mov	w2, w22
  422594:	mov	w0, w20
  422598:	mov	w1, #0x0                   	// #0
  42259c:	bl	406c90 <fcntl@plt>
  4225a0:	mov	w19, w0
  4225a4:	tbnz	w0, #31, 422578 <rpl_fcntl@@Base+0xd0>
  4225a8:	mov	w0, #0xffffffff            	// #-1
  4225ac:	str	w0, [x21, #1904]
  4225b0:	mov	w0, w19
  4225b4:	mov	w1, #0x1                   	// #1
  4225b8:	bl	406c90 <fcntl@plt>
  4225bc:	tbz	w0, #31, 422604 <rpl_fcntl@@Base+0x15c>
  4225c0:	bl	406e00 <__errno_location@plt>
  4225c4:	mov	x20, x0
  4225c8:	mov	w0, w19
  4225cc:	mov	w19, #0xffffffff            	// #-1
  4225d0:	ldr	w21, [x20]
  4225d4:	bl	406ae0 <close@plt>
  4225d8:	str	w21, [x20]
  4225dc:	b	422578 <rpl_fcntl@@Base+0xd0>
  4225e0:	mov	w2, w22
  4225e4:	mov	w1, #0x0                   	// #0
  4225e8:	bl	406c90 <fcntl@plt>
  4225ec:	mov	w19, w0
  4225f0:	tbnz	w0, #31, 422578 <rpl_fcntl@@Base+0xd0>
  4225f4:	ldr	w0, [x21, #1904]
  4225f8:	cmn	w0, #0x1
  4225fc:	b.ne	422578 <rpl_fcntl@@Base+0xd0>  // b.any
  422600:	b	4225b0 <rpl_fcntl@@Base+0x108>
  422604:	orr	w2, w0, #0x1
  422608:	mov	w1, #0x2                   	// #2
  42260c:	mov	w0, w19
  422610:	bl	406c90 <fcntl@plt>
  422614:	cmn	w0, #0x1
  422618:	b.ne	422578 <rpl_fcntl@@Base+0xd0>  // b.any
  42261c:	b	4225c0 <rpl_fcntl@@Base+0x118>
  422620:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x5720>
  422624:	add	x0, x0, #0x254
  422628:	ldrb	w0, [x0, w1, uxtw]
  42262c:	adr	x1, 422638 <rpl_fcntl@@Base+0x190>
  422630:	add	x0, x1, w0, sxtb #2
  422634:	br	x0
  422638:	sub	w1, w1, #0x400
  42263c:	cmp	w1, #0xa
  422640:	b.ls	422620 <rpl_fcntl@@Base+0x178>  // b.plast
  422644:	ldr	w1, [sp, #88]
  422648:	ldr	x0, [sp, #64]
  42264c:	tbz	w1, #31, 422660 <rpl_fcntl@@Base+0x1b8>
  422650:	cmn	w1, #0x7
  422654:	b.ge	422660 <rpl_fcntl@@Base+0x1b8>  // b.tcont
  422658:	ldr	x0, [sp, #72]
  42265c:	add	x0, x0, w1, sxtw
  422660:	ldr	x2, [x0]
  422664:	mov	w1, w6
  422668:	mov	w0, w20
  42266c:	bl	406c90 <fcntl@plt>
  422670:	b	422680 <rpl_fcntl@@Base+0x1d8>
  422674:	mov	w1, w6
  422678:	mov	w0, w20
  42267c:	bl	406c90 <fcntl@plt>
  422680:	mov	w19, w0
  422684:	b	422578 <rpl_fcntl@@Base+0xd0>
  422688:	ldr	w1, [sp, #88]
  42268c:	ldr	x0, [sp, #64]
  422690:	tbz	w1, #31, 4226a4 <rpl_fcntl@@Base+0x1fc>
  422694:	cmn	w1, #0x7
  422698:	b.ge	4226a4 <rpl_fcntl@@Base+0x1fc>  // b.tcont
  42269c:	ldr	x0, [sp, #72]
  4226a0:	add	x0, x0, w1, sxtw
  4226a4:	ldr	w2, [x0]
  4226a8:	mov	w1, w6
  4226ac:	mov	w0, w20
  4226b0:	b	42252c <rpl_fcntl@@Base+0x84>

00000000004226b4 <concatenated_filename@@Base>:
  4226b4:	stp	x29, x30, [sp, #-64]!
  4226b8:	mov	x29, sp
  4226bc:	stp	x23, x24, [sp, #48]
  4226c0:	mov	x23, x1
  4226c4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x2720>
  4226c8:	add	x1, x1, #0x64e
  4226cc:	stp	x19, x20, [sp, #16]
  4226d0:	mov	x20, x2
  4226d4:	stp	x21, x22, [sp, #32]
  4226d8:	mov	x22, x0
  4226dc:	bl	406be0 <strcmp@plt>
  4226e0:	mov	w21, w0
  4226e4:	mov	x0, x23
  4226e8:	bl	406700 <strlen@plt>
  4226ec:	add	x19, x0, #0x1
  4226f0:	cbnz	w21, 422734 <concatenated_filename@@Base+0x80>
  4226f4:	cbz	x20, 42272c <concatenated_filename@@Base+0x78>
  4226f8:	mov	x0, x20
  4226fc:	bl	406700 <strlen@plt>
  422700:	add	x0, x19, x0
  422704:	bl	406950 <malloc@plt>
  422708:	mov	x19, x0
  42270c:	cbnz	x0, 422798 <concatenated_filename@@Base+0xe4>
  422710:	mov	x19, #0x0                   	// #0
  422714:	mov	x0, x19
  422718:	ldp	x19, x20, [sp, #16]
  42271c:	ldp	x21, x22, [sp, #32]
  422720:	ldp	x23, x24, [sp, #48]
  422724:	ldp	x29, x30, [sp], #64
  422728:	ret
  42272c:	mov	x0, #0x0                   	// #0
  422730:	b	422700 <concatenated_filename@@Base+0x4c>
  422734:	mov	x0, x22
  422738:	bl	406700 <strlen@plt>
  42273c:	mov	x21, x0
  422740:	cbz	x0, 4227b0 <concatenated_filename@@Base+0xfc>
  422744:	add	x0, x22, x0
  422748:	ldurb	w0, [x0, #-1]
  42274c:	cmp	w0, #0x2f
  422750:	cset	w24, ne  // ne = any
  422754:	add	x0, x21, w24, sxtw
  422758:	add	x19, x0, x19
  42275c:	cbz	x20, 4227b8 <concatenated_filename@@Base+0x104>
  422760:	mov	x0, x20
  422764:	bl	406700 <strlen@plt>
  422768:	add	x0, x19, x0
  42276c:	bl	406950 <malloc@plt>
  422770:	mov	x19, x0
  422774:	cbz	x0, 422710 <concatenated_filename@@Base+0x5c>
  422778:	mov	x2, x21
  42277c:	mov	x1, x22
  422780:	bl	4066c0 <memcpy@plt>
  422784:	add	x0, x19, x21
  422788:	cbz	w24, 422798 <concatenated_filename@@Base+0xe4>
  42278c:	add	x0, x0, #0x1
  422790:	mov	w1, #0x2f                  	// #47
  422794:	strb	w1, [x19, x21]
  422798:	mov	x1, x23
  42279c:	bl	4068b0 <stpcpy@plt>
  4227a0:	cbz	x20, 422714 <concatenated_filename@@Base+0x60>
  4227a4:	mov	x1, x20
  4227a8:	bl	406cc0 <strcpy@plt>
  4227ac:	b	422714 <concatenated_filename@@Base+0x60>
  4227b0:	mov	w24, #0x0                   	// #0
  4227b4:	b	422754 <concatenated_filename@@Base+0xa0>
  4227b8:	mov	x0, #0x0                   	// #0
  4227bc:	b	422768 <concatenated_filename@@Base+0xb4>

00000000004227c0 <xalloc_die@@Base>:
  4227c0:	stp	x29, x30, [sp, #-32]!
  4227c4:	adrp	x0, 43e000 <expanding_var@@Base+0x328>
  4227c8:	mov	w2, #0x5                   	// #5
  4227cc:	mov	x29, sp
  4227d0:	str	x19, [sp, #16]
  4227d4:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x1720>
  4227d8:	ldr	w19, [x0, #372]
  4227dc:	add	x1, x1, #0x574
  4227e0:	mov	x0, #0x0                   	// #0
  4227e4:	bl	406d60 <dcgettext@plt>
  4227e8:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x1720>
  4227ec:	mov	x3, x0
  4227f0:	add	x2, x2, #0xe5c
  4227f4:	mov	w0, w19
  4227f8:	mov	w1, #0x0                   	// #0
  4227fc:	bl	417aa8 <error@@Base>
  422800:	bl	406b50 <abort@plt>
  422804:	nop

0000000000422808 <__libc_csu_init@@Base>:
  422808:	stp	x29, x30, [sp, #-64]!
  42280c:	mov	x29, sp
  422810:	stp	x19, x20, [sp, #16]
  422814:	adrp	x20, 43c000 <_IO_stdin_used@@Base+0x19720>
  422818:	add	x20, x20, #0xde0
  42281c:	stp	x21, x22, [sp, #32]
  422820:	adrp	x21, 43c000 <_IO_stdin_used@@Base+0x19720>
  422824:	add	x21, x21, #0xdd8
  422828:	sub	x20, x20, x21
  42282c:	mov	w22, w0
  422830:	stp	x23, x24, [sp, #48]
  422834:	mov	x23, x1
  422838:	mov	x24, x2
  42283c:	bl	406680 <memcpy@plt-0x40>
  422840:	cmp	xzr, x20, asr #3
  422844:	b.eq	422870 <__libc_csu_init@@Base+0x68>  // b.none
  422848:	asr	x20, x20, #3
  42284c:	mov	x19, #0x0                   	// #0
  422850:	ldr	x3, [x21, x19, lsl #3]
  422854:	mov	x2, x24
  422858:	add	x19, x19, #0x1
  42285c:	mov	x1, x23
  422860:	mov	w0, w22
  422864:	blr	x3
  422868:	cmp	x20, x19
  42286c:	b.ne	422850 <__libc_csu_init@@Base+0x48>  // b.any
  422870:	ldp	x19, x20, [sp, #16]
  422874:	ldp	x21, x22, [sp, #32]
  422878:	ldp	x23, x24, [sp, #48]
  42287c:	ldp	x29, x30, [sp], #64
  422880:	ret
  422884:	nop

0000000000422888 <__libc_csu_fini@@Base>:
  422888:	ret
  42288c:	nop
  422890:	adrp	x2, 43d000 <memcpy@GLIBC_2.17>
  422894:	mov	x1, #0x0                   	// #0
  422898:	ldr	x2, [x2, #1024]
  42289c:	b	4067f0 <__cxa_atexit@plt>
  4228a0:	mov	x2, x1
  4228a4:	mov	x1, x0
  4228a8:	mov	w0, #0x0                   	// #0
  4228ac:	b	406e30 <__xstat@plt>
  4228b0:	mov	x2, x1
  4228b4:	mov	w1, w0
  4228b8:	mov	w0, #0x0                   	// #0
  4228bc:	b	406d40 <__fxstat@plt>
  4228c0:	mov	x2, x1
  4228c4:	mov	x1, x0
  4228c8:	mov	w0, #0x0                   	// #0
  4228cc:	b	406cf0 <__lxstat@plt>

Disassembly of section .fini:

00000000004228d0 <.fini>:
  4228d0:	stp	x29, x30, [sp, #-16]!
  4228d4:	mov	x29, sp
  4228d8:	ldp	x29, x30, [sp], #16
  4228dc:	ret
