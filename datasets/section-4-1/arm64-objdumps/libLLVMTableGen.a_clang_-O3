In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMTableGen.a_clang_-O3:

Error.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9PrintNoteERKNS_5TwineE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	bl	0 <_ZN4llvm9WithColor4noteEv>
  14:	mov	x19, x0
  18:	mov	x0, x20
  1c:	mov	x1, x19
  20:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
  24:	ldp	x9, x8, [x19, #16]
  28:	cmp	x9, x8
  2c:	b.ne	4c <_ZN4llvm9PrintNoteERKNS_5TwineE+0x4c>  // b.any
  30:	mov	x0, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  3c:	add	x1, x1, #0x0
  40:	mov	w2, #0x1                   	// #1
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  4c:	mov	w9, #0xa                   	// #10
  50:	strb	w9, [x8]
  54:	ldr	x8, [x19, #24]
  58:	add	x8, x8, #0x1
  5c:	str	x8, [x19, #24]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

000000000000006c <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
  6c:	sub	sp, sp, #0x70
  70:	stp	x29, x30, [sp, #32]
  74:	str	x25, [sp, #48]
  78:	stp	x24, x23, [sp, #64]
  7c:	stp	x22, x21, [sp, #80]
  80:	stp	x20, x19, [sp, #96]
  84:	add	x29, sp, #0x20
  88:	cmp	x1, #0x0
  8c:	add	x8, x29, #0x18
  90:	str	xzr, [x29, #24]
  94:	csel	x20, x8, x0, eq  // eq = none
  98:	ldr	x8, [x20]
  9c:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  a0:	ldr	x0, [x0]
  a4:	mov	x3, x2
  a8:	csinc	x21, x1, xzr, ne  // ne = any
  ac:	mov	w22, #0x1                   	// #1
  b0:	mov	w2, #0x3                   	// #3
  b4:	mov	x1, x8
  b8:	mov	x4, xzr
  bc:	mov	x5, xzr
  c0:	mov	x6, xzr
  c4:	mov	x7, xzr
  c8:	strb	w22, [sp]
  cc:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
  d0:	cmp	x21, #0x2
  d4:	b.cc	134 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xc8>  // b.lo, b.ul, b.last
  d8:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  dc:	ldr	x19, [x19]
  e0:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
  e4:	mov	w23, #0x2                   	// #2
  e8:	add	x24, x24, #0x0
  ec:	mov	w25, #0x103                 	// #259
  f0:	mov	w8, #0x1                   	// #1
  f4:	ldr	x1, [x20, x8, lsl #3]
  f8:	add	x3, sp, #0x8
  fc:	mov	w2, #0x3                   	// #3
 100:	mov	x0, x19
 104:	mov	x4, xzr
 108:	mov	x5, xzr
 10c:	mov	x6, xzr
 110:	mov	x7, xzr
 114:	stp	x24, xzr, [sp, #8]
 118:	strh	w25, [sp, #24]
 11c:	strb	w22, [sp]
 120:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 124:	mov	w8, w23
 128:	cmp	x21, x8
 12c:	add	w23, w23, #0x1
 130:	b.hi	f4 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x88>  // b.pmore
 134:	ldp	x20, x19, [sp, #96]
 138:	ldp	x22, x21, [sp, #80]
 13c:	ldp	x24, x23, [sp, #64]
 140:	ldr	x25, [sp, #48]
 144:	ldp	x29, x30, [sp, #32]
 148:	add	sp, sp, #0x70
 14c:	ret

0000000000000150 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 150:	sub	sp, sp, #0x70
 154:	stp	x29, x30, [sp, #32]
 158:	str	x25, [sp, #48]
 15c:	stp	x24, x23, [sp, #64]
 160:	stp	x22, x21, [sp, #80]
 164:	stp	x20, x19, [sp, #96]
 168:	add	x29, sp, #0x20
 16c:	cmp	x1, #0x0
 170:	add	x8, x29, #0x18
 174:	str	xzr, [x29, #24]
 178:	csel	x20, x8, x0, eq  // eq = none
 17c:	ldr	x8, [x20]
 180:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 184:	ldr	x0, [x0]
 188:	mov	x3, x2
 18c:	csinc	x21, x1, xzr, ne  // ne = any
 190:	mov	w22, #0x1                   	// #1
 194:	mov	w2, #0x1                   	// #1
 198:	mov	x1, x8
 19c:	mov	x4, xzr
 1a0:	mov	x5, xzr
 1a4:	mov	x6, xzr
 1a8:	mov	x7, xzr
 1ac:	strb	w22, [sp]
 1b0:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 1b4:	cmp	x21, #0x2
 1b8:	b.cc	218 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xc8>  // b.lo, b.ul, b.last
 1bc:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 1c0:	ldr	x19, [x19]
 1c4:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 1c8:	mov	w23, #0x2                   	// #2
 1cc:	add	x24, x24, #0x0
 1d0:	mov	w25, #0x103                 	// #259
 1d4:	mov	w8, #0x1                   	// #1
 1d8:	ldr	x1, [x20, x8, lsl #3]
 1dc:	add	x3, sp, #0x8
 1e0:	mov	w2, #0x3                   	// #3
 1e4:	mov	x0, x19
 1e8:	mov	x4, xzr
 1ec:	mov	x5, xzr
 1f0:	mov	x6, xzr
 1f4:	mov	x7, xzr
 1f8:	stp	x24, xzr, [sp, #8]
 1fc:	strh	w25, [sp, #24]
 200:	strb	w22, [sp]
 204:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 208:	mov	w8, w23
 20c:	cmp	x21, x8
 210:	add	w23, w23, #0x1
 214:	b.hi	1d8 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x88>  // b.pmore
 218:	ldp	x20, x19, [sp, #96]
 21c:	ldp	x22, x21, [sp, #80]
 220:	ldp	x24, x23, [sp, #64]
 224:	ldr	x25, [sp, #48]
 228:	ldp	x29, x30, [sp, #32]
 22c:	add	sp, sp, #0x70
 230:	ret

0000000000000234 <_ZN4llvm12PrintWarningEPKcRKNS_5TwineE>:
 234:	sub	sp, sp, #0x20
 238:	stp	x29, x30, [sp, #16]
 23c:	add	x29, sp, #0x10
 240:	mov	x3, x1
 244:	mov	x1, x0
 248:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 24c:	ldr	x0, [x0]
 250:	mov	w8, #0x1                   	// #1
 254:	mov	w2, #0x1                   	// #1
 258:	mov	x4, xzr
 25c:	mov	x5, xzr
 260:	mov	x6, xzr
 264:	mov	x7, xzr
 268:	strb	w8, [sp]
 26c:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 270:	ldp	x29, x30, [sp, #16]
 274:	add	sp, sp, #0x20
 278:	ret

000000000000027c <_ZN4llvm12PrintWarningERKNS_5TwineE>:
 27c:	stp	x29, x30, [sp, #-32]!
 280:	stp	x20, x19, [sp, #16]
 284:	mov	x29, sp
 288:	mov	x20, x0
 28c:	bl	0 <_ZN4llvm9WithColor7warningEv>
 290:	mov	x19, x0
 294:	mov	x0, x20
 298:	mov	x1, x19
 29c:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 2a0:	ldp	x9, x8, [x19, #16]
 2a4:	cmp	x9, x8
 2a8:	b.ne	2c8 <_ZN4llvm12PrintWarningERKNS_5TwineE+0x4c>  // b.any
 2ac:	mov	x0, x19
 2b0:	ldp	x20, x19, [sp, #16]
 2b4:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 2b8:	add	x1, x1, #0x0
 2bc:	mov	w2, #0x1                   	// #1
 2c0:	ldp	x29, x30, [sp], #32
 2c4:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 2c8:	mov	w9, #0xa                   	// #10
 2cc:	strb	w9, [x8]
 2d0:	ldr	x8, [x19, #24]
 2d4:	add	x8, x8, #0x1
 2d8:	str	x8, [x19, #24]
 2dc:	ldp	x20, x19, [sp, #16]
 2e0:	ldp	x29, x30, [sp], #32
 2e4:	ret

00000000000002e8 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 2e8:	sub	sp, sp, #0x70
 2ec:	stp	x29, x30, [sp, #32]
 2f0:	str	x25, [sp, #48]
 2f4:	stp	x24, x23, [sp, #64]
 2f8:	stp	x22, x21, [sp, #80]
 2fc:	stp	x20, x19, [sp, #96]
 300:	add	x29, sp, #0x20
 304:	adrp	x8, 40 <_ZN4llvm9PrintNoteERKNS_5TwineE+0x40>
 308:	ldr	x8, [x8]
 30c:	cmp	x1, #0x0
 310:	add	x10, x29, #0x18
 314:	str	xzr, [x29, #24]
 318:	ldr	w9, [x8]
 31c:	csel	x20, x10, x0, eq  // eq = none
 320:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 324:	mov	x3, x2
 328:	add	w9, w9, #0x1
 32c:	str	w9, [x8]
 330:	ldr	x8, [x20]
 334:	ldr	x0, [x0]
 338:	csinc	x21, x1, xzr, ne  // ne = any
 33c:	mov	w22, #0x1                   	// #1
 340:	mov	x1, x8
 344:	mov	w2, wzr
 348:	mov	x4, xzr
 34c:	mov	x5, xzr
 350:	mov	x6, xzr
 354:	mov	x7, xzr
 358:	strb	w22, [sp]
 35c:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 360:	cmp	x21, #0x2
 364:	b.cc	3c4 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0xdc>  // b.lo, b.ul, b.last
 368:	adrp	x19, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 36c:	ldr	x19, [x19]
 370:	adrp	x24, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 374:	mov	w23, #0x2                   	// #2
 378:	add	x24, x24, #0x0
 37c:	mov	w25, #0x103                 	// #259
 380:	mov	w8, #0x1                   	// #1
 384:	ldr	x1, [x20, x8, lsl #3]
 388:	add	x3, sp, #0x8
 38c:	mov	w2, #0x3                   	// #3
 390:	mov	x0, x19
 394:	mov	x4, xzr
 398:	mov	x5, xzr
 39c:	mov	x6, xzr
 3a0:	mov	x7, xzr
 3a4:	stp	x24, xzr, [sp, #8]
 3a8:	strh	w25, [sp, #24]
 3ac:	strb	w22, [sp]
 3b0:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 3b4:	mov	w8, w23
 3b8:	cmp	x21, x8
 3bc:	add	w23, w23, #0x1
 3c0:	b.hi	384 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE+0x9c>  // b.pmore
 3c4:	ldp	x20, x19, [sp, #96]
 3c8:	ldp	x22, x21, [sp, #80]
 3cc:	ldp	x24, x23, [sp, #64]
 3d0:	ldr	x25, [sp, #48]
 3d4:	ldp	x29, x30, [sp, #32]
 3d8:	add	sp, sp, #0x70
 3dc:	ret

00000000000003e0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>:
 3e0:	sub	sp, sp, #0x20
 3e4:	stp	x29, x30, [sp, #16]
 3e8:	add	x29, sp, #0x10
 3ec:	mov	x3, x1
 3f0:	mov	x1, x0
 3f4:	adrp	x0, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 3f8:	ldr	x0, [x0]
 3fc:	mov	w8, #0x1                   	// #1
 400:	mov	w2, wzr
 404:	mov	x4, xzr
 408:	mov	x5, xzr
 40c:	mov	x6, xzr
 410:	mov	x7, xzr
 414:	strb	w8, [sp]
 418:	bl	0 <_ZNK4llvm9SourceMgr12PrintMessageENS_5SMLocENS0_8DiagKindERKNS_5TwineENS_8ArrayRefINS_7SMRangeEEENS6_INS_7SMFixItEEEb>
 41c:	ldp	x29, x30, [sp, #16]
 420:	add	sp, sp, #0x20
 424:	ret

0000000000000428 <_ZN4llvm10PrintErrorERKNS_5TwineE>:
 428:	stp	x29, x30, [sp, #-32]!
 42c:	stp	x20, x19, [sp, #16]
 430:	mov	x29, sp
 434:	mov	x20, x0
 438:	bl	0 <_ZN4llvm9WithColor5errorEv>
 43c:	mov	x19, x0
 440:	mov	x0, x20
 444:	mov	x1, x19
 448:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 44c:	ldp	x9, x8, [x19, #16]
 450:	cmp	x9, x8
 454:	b.ne	474 <_ZN4llvm10PrintErrorERKNS_5TwineE+0x4c>  // b.any
 458:	mov	x0, x19
 45c:	ldp	x20, x19, [sp, #16]
 460:	adrp	x1, 0 <_ZN4llvm9PrintNoteERKNS_5TwineE>
 464:	add	x1, x1, #0x0
 468:	mov	w2, #0x1                   	// #1
 46c:	ldp	x29, x30, [sp], #32
 470:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 474:	mov	w9, #0xa                   	// #10
 478:	strb	w9, [x8]
 47c:	ldr	x8, [x19, #24]
 480:	add	x8, x8, #0x1
 484:	str	x8, [x19, #24]
 488:	ldp	x20, x19, [sp, #16]
 48c:	ldp	x29, x30, [sp], #32
 490:	ret

0000000000000494 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>:
 494:	stp	x29, x30, [sp, #-16]!
 498:	mov	x29, sp
 49c:	bl	428 <_ZN4llvm10PrintErrorERKNS_5TwineE>
 4a0:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 4a4:	mov	w0, #0x1                   	// #1
 4a8:	bl	0 <exit>

00000000000004ac <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>:
 4ac:	stp	x29, x30, [sp, #-16]!
 4b0:	mov	x29, sp
 4b4:	bl	2e8 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
 4b8:	bl	0 <_ZN4llvm3sys20RunInterruptHandlersEv>
 4bc:	mov	w0, #0x1                   	// #1
 4c0:	bl	0 <exit>

Disassembly of section .text._ZN4llvm9SourceMgrD2Ev:

0000000000000000 <_ZN4llvm9SourceMgrD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x21, [x0, #24]
  14:	mov	x19, x0
  18:	cmp	x20, x21
  1c:	b.ne	74 <_ZN4llvm9SourceMgrD2Ev+0x74>  // b.any
  20:	cbz	x20, 2c <_ZN4llvm9SourceMgrD2Ev+0x2c>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	ldp	x20, x21, [x19]
  30:	cmp	x20, x21
  34:	b.eq	50 <_ZN4llvm9SourceMgrD2Ev+0x50>  // b.none
  38:	mov	x0, x20
  3c:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
  40:	add	x20, x20, #0x18
  44:	cmp	x21, x20
  48:	b.ne	38 <_ZN4llvm9SourceMgrD2Ev+0x38>  // b.any
  4c:	ldr	x20, [x19]
  50:	cbz	x20, 94 <_ZN4llvm9SourceMgrD2Ev+0x94>
  54:	mov	x0, x20
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZdlPv>
  68:	add	x20, x20, #0x10
  6c:	cmp	x20, x21
  70:	b.eq	88 <_ZN4llvm9SourceMgrD2Ev+0x88>  // b.none
  74:	ldr	x0, [x20], #16
  78:	cmp	x0, x20
  7c:	b.eq	68 <_ZN4llvm9SourceMgrD2Ev+0x68>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	b	68 <_ZN4llvm9SourceMgrD2Ev+0x68>
  88:	ldr	x20, [x19, #24]
  8c:	cbnz	x20, 24 <_ZN4llvm9SourceMgrD2Ev+0x24>
  90:	b	2c <_ZN4llvm9SourceMgrD2Ev+0x2c>
  94:	ldp	x20, x19, [sp, #32]
  98:	ldr	x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Error.cpp>:
   0:	adrp	x1, 0 <_GLOBAL__sub_I_Error.cpp>
   4:	ldr	x1, [x1]
   8:	adrp	x0, 0 <_GLOBAL__sub_I_Error.cpp>
   c:	adrp	x2, 0 <__dso_handle>
  10:	movi	v0.2d, #0x0
  14:	add	x0, x0, #0x0
  18:	add	x2, x2, #0x0
  1c:	stp	q0, q0, [x1, #32]
  20:	stp	q0, q0, [x1]
  24:	b	0 <__cxa_atexit>

JSONBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>:
       0:	stp	x29, x30, [sp, #-96]!
       4:	stp	x28, x27, [sp, #16]
       8:	stp	x26, x25, [sp, #32]
       c:	stp	x24, x23, [sp, #48]
      10:	stp	x22, x21, [sp, #64]
      14:	stp	x20, x19, [sp, #80]
      18:	mov	x29, sp
      1c:	sub	sp, sp, #0x2b0
      20:	mov	x21, x0
      24:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
      28:	str	x1, [sp, #16]
      2c:	mov	w8, #0x3                   	// #3
      30:	mov	w9, #0x1                   	// #1
      34:	add	x0, x0, #0x0
      38:	mov	w10, #0x16                  	// #22
      3c:	mov	w1, #0x16                  	// #22
      40:	mov	x2, xzr
      44:	stp	xzr, xzr, [x29, #-208]
      48:	stur	wzr, [x29, #-184]
      4c:	stur	xzr, [x29, #-192]
      50:	sturb	w8, [x29, #-176]
      54:	stur	x9, [x29, #-168]
      58:	stp	xzr, x0, [x29, #-256]
      5c:	stur	x10, [x29, #-240]
      60:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
      64:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
      68:	sub	x0, x29, #0xd0
      6c:	sub	x1, x29, #0x100
      70:	sub	x19, x29, #0x100
      74:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
      78:	mov	x20, x0
      7c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
      80:	sub	x1, x29, #0xb0
      84:	mov	x0, x20
      88:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
      8c:	ldur	x20, [x29, #-256]
      90:	cbz	x20, b0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb0>
      94:	mov	x8, x20
      98:	ldr	x0, [x8], #16
      9c:	cmp	x0, x8
      a0:	b.eq	a8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa8>  // b.none
      a4:	bl	0 <_ZdlPv>
      a8:	mov	x0, x20
      ac:	bl	0 <_ZdlPv>
      b0:	sub	x0, x29, #0xb0
      b4:	sub	x22, x29, #0xb0
      b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
      bc:	add	x23, x19, #0x8
      c0:	stur	wzr, [x29, #-248]
      c4:	stp	xzr, x23, [x29, #-240]
      c8:	stp	x23, xzr, [x29, #-224]
      cc:	ldr	x20, [x21, #24]
      d0:	add	x19, x21, #0x8
      d4:	cmp	x20, x19
      d8:	b.eq	130 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x130>  // b.none
      dc:	add	x22, x22, #0x10
      e0:	b	f8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf8>
      e4:	mov	x0, x20
      e8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
      ec:	mov	x20, x0
      f0:	cmp	x0, x19
      f4:	b.eq	130 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x130>  // b.none
      f8:	ldr	x8, [x20, #64]
      fc:	ldr	x0, [x8]
     100:	ldr	x8, [x0]
     104:	ldr	x9, [x8, #48]
     108:	sub	x8, x29, #0xb0
     10c:	blr	x9
     110:	sub	x0, x29, #0x100
     114:	sub	x1, x29, #0xb0
     118:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     11c:	ldur	x0, [x29, #-176]
     120:	cmp	x0, x22
     124:	b.eq	e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe4>  // b.none
     128:	bl	0 <_ZdlPv>
     12c:	b	e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe4>
     130:	ldr	x19, [x21, #72]
     134:	add	x8, x21, #0x38
     138:	str	x23, [sp, #8]
     13c:	str	x8, [sp, #48]
     140:	cmp	x19, x8
     144:	b.eq	c54 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc54>  // b.none
     148:	add	x8, sp, #0x138
     14c:	add	x11, sp, #0x120
     150:	add	x12, sp, #0x158
     154:	add	x23, x8, #0x10
     158:	add	x8, x11, #0x8
     15c:	add	x14, sp, #0xc0
     160:	str	x8, [sp, #72]
     164:	add	x8, x12, #0x10
     168:	add	x15, sp, #0xa0
     16c:	str	x8, [sp, #80]
     170:	add	x8, x14, #0x10
     174:	str	x8, [sp, #56]
     178:	add	x8, x15, #0x10
     17c:	sub	x9, x29, #0xb0
     180:	add	x10, sp, #0x100
     184:	add	x13, sp, #0xe0
     188:	add	x16, sp, #0x80
     18c:	add	x17, sp, #0x58
     190:	str	x8, [sp, #40]
     194:	add	x8, x12, #0x8
     198:	add	x24, x9, #0x18
     19c:	add	x28, x10, #0x10
     1a0:	add	x20, x13, #0x10
     1a4:	str	x8, [sp, #32]
     1a8:	add	x22, x16, #0x10
     1ac:	add	x8, x17, #0x10
     1b0:	str	x8, [sp, #24]
     1b4:	b	1d0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1d0>
     1b8:	mov	x0, x21
     1bc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     1c0:	ldr	x8, [sp, #48]
     1c4:	mov	x19, x0
     1c8:	cmp	x0, x8
     1cc:	b.eq	c54 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc54>  // b.none
     1d0:	ldr	x8, [x19, #64]
     1d4:	ldr	x0, [x8]
     1d8:	ldr	x8, [x0]
     1dc:	ldr	x9, [x8, #48]
     1e0:	add	x8, sp, #0x58
     1e4:	blr	x9
     1e8:	ldr	x27, [x19, #64]
     1ec:	stp	xzr, xzr, [sp, #400]
     1f0:	str	wzr, [sp, #424]
     1f4:	str	xzr, [sp, #416]
     1f8:	stp	xzr, xzr, [sp, #376]
     1fc:	str	xzr, [sp, #392]
     200:	ldr	w8, [x27, #80]
     204:	str	x19, [sp, #64]
     208:	cbz	w8, 4ec <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4ec>
     20c:	ldr	x21, [x27, #72]
     210:	mov	w9, #0x18                  	// #24
     214:	madd	x19, x8, x9, x21
     218:	b	228 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x228>
     21c:	add	x21, x21, #0x18
     220:	cmp	x21, x19
     224:	b.eq	4e0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4e0>  // b.none
     228:	ldr	w9, [x27, #64]
     22c:	ldr	x0, [x21]
     230:	cbz	w9, 250 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x250>
     234:	ldr	x8, [x27, #56]
     238:	lsl	x9, x9, #3
     23c:	ldr	x10, [x8], #8
     240:	cmp	x10, x0
     244:	b.eq	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>  // b.none
     248:	subs	x9, x9, #0x8
     24c:	b.ne	23c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x23c>  // b.any
     250:	ldr	x8, [x0]
     254:	ldr	x9, [x8, #48]
     258:	add	x8, sp, #0x158
     25c:	blr	x9
     260:	ldrb	w8, [x21, #8]
     264:	tbz	w8, #2, 378 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x378>
     268:	ldp	x25, x26, [sp, #344]
     26c:	str	x23, [sp, #312]
     270:	cbnz	x25, 278 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x278>
     274:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     278:	cmp	x26, #0x10
     27c:	mov	x0, x23
     280:	str	x26, [sp, #288]
     284:	b.cc	2a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2a4>  // b.lo, b.ul, b.last
     288:	add	x0, sp, #0x138
     28c:	add	x1, sp, #0x120
     290:	mov	x2, xzr
     294:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     298:	ldr	x8, [sp, #288]
     29c:	str	x0, [sp, #312]
     2a0:	str	x8, [sp, #328]
     2a4:	cbz	x26, 2c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2c8>
     2a8:	cmp	x26, #0x1
     2ac:	b.ne	2bc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2bc>  // b.any
     2b0:	ldrb	w8, [x25]
     2b4:	strb	w8, [x0]
     2b8:	b	2c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x2c8>
     2bc:	mov	x1, x25
     2c0:	mov	x2, x26
     2c4:	bl	0 <memcpy>
     2c8:	ldr	x8, [sp, #288]
     2cc:	ldr	x9, [sp, #312]
     2d0:	mov	x2, xzr
     2d4:	str	x8, [sp, #320]
     2d8:	strb	wzr, [x9, x8]
     2dc:	ldp	x0, x1, [sp, #312]
     2e0:	mov	w8, #0x5                   	// #5
     2e4:	sturb	w8, [x29, #-176]
     2e8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     2ec:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     2f0:	ldr	x8, [sp, #312]
     2f4:	stur	x24, [x29, #-168]
     2f8:	cmp	x8, x23
     2fc:	b.eq	310 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x310>  // b.none
     300:	ldr	x9, [sp, #328]
     304:	stur	x8, [x29, #-168]
     308:	stur	x9, [x29, #-152]
     30c:	b	318 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x318>
     310:	ldr	q0, [x23]
     314:	str	q0, [x24]
     318:	ldp	x8, x10, [sp, #384]
     31c:	ldr	x9, [sp, #320]
     320:	stp	x23, xzr, [sp, #312]
     324:	strb	wzr, [sp, #328]
     328:	cmp	x8, x10
     32c:	stur	x9, [x29, #-160]
     330:	b.eq	350 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x350>  // b.none
     334:	sub	x1, x29, #0xb0
     338:	mov	x0, x8
     33c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     340:	ldr	x8, [sp, #384]
     344:	add	x8, x8, #0x28
     348:	str	x8, [sp, #384]
     34c:	b	360 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x360>
     350:	add	x0, sp, #0x178
     354:	sub	x2, x29, #0xb0
     358:	mov	x1, x8
     35c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     360:	sub	x0, x29, #0xb0
     364:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     368:	ldr	x0, [sp, #312]
     36c:	cmp	x0, x23
     370:	b.eq	378 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x378>  // b.none
     374:	bl	0 <_ZdlPv>
     378:	ldr	x1, [x21, #16]
     37c:	sub	x0, x29, #0xb0
     380:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
     384:	ldp	x25, x26, [sp, #344]
     388:	str	x28, [sp, #256]
     38c:	cbnz	x25, 394 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x394>
     390:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     394:	cmp	x26, #0x10
     398:	mov	x0, x28
     39c:	stur	x26, [x29, #-16]
     3a0:	b.cc	3c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3c0>  // b.lo, b.ul, b.last
     3a4:	add	x0, sp, #0x100
     3a8:	sub	x1, x29, #0x10
     3ac:	mov	x2, xzr
     3b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     3b4:	ldur	x8, [x29, #-16]
     3b8:	str	x0, [sp, #256]
     3bc:	str	x8, [sp, #272]
     3c0:	cbz	x26, 3e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3e4>
     3c4:	cmp	x26, #0x1
     3c8:	b.ne	3d8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3d8>  // b.any
     3cc:	ldrb	w8, [x25]
     3d0:	strb	w8, [x0]
     3d4:	b	3e4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x3e4>
     3d8:	mov	x1, x25
     3dc:	mov	x2, x26
     3e0:	bl	0 <memcpy>
     3e4:	ldur	x8, [x29, #-16]
     3e8:	ldr	x9, [sp, #256]
     3ec:	mov	w0, #0x20                  	// #32
     3f0:	str	x8, [sp, #264]
     3f4:	strb	wzr, [x9, x8]
     3f8:	bl	0 <_Znwm>
     3fc:	ldr	x9, [sp, #256]
     400:	add	x8, x0, #0x10
     404:	str	x8, [x0]
     408:	cmp	x9, x28
     40c:	b.eq	424 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x424>  // b.none
     410:	ldr	x8, [sp, #272]
     414:	str	x9, [x0]
     418:	str	x8, [x0, #16]
     41c:	mov	x8, x9
     420:	b	42c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x42c>
     424:	ldr	q0, [x28]
     428:	str	q0, [x8]
     42c:	ldr	x1, [sp, #264]
     430:	ldr	x9, [sp, #72]
     434:	str	x0, [sp, #288]
     438:	mov	x2, xzr
     43c:	str	x1, [x0, #8]
     440:	mov	x0, x8
     444:	stp	x28, xzr, [sp, #256]
     448:	strb	wzr, [sp, #272]
     44c:	stp	xzr, xzr, [x9]
     450:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     454:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     458:	ldr	x8, [sp, #288]
     45c:	add	x0, sp, #0x190
     460:	add	x1, sp, #0x120
     464:	ldr	q0, [x8]
     468:	add	x8, sp, #0x120
     46c:	stur	q0, [x8, #8]
     470:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     474:	mov	x25, x0
     478:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     47c:	sub	x1, x29, #0xb0
     480:	mov	x0, x25
     484:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     488:	ldr	x25, [sp, #288]
     48c:	cbz	x25, 4ac <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4ac>
     490:	mov	x8, x25
     494:	ldr	x0, [x8], #16
     498:	cmp	x0, x8
     49c:	b.eq	4a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4a4>  // b.none
     4a0:	bl	0 <_ZdlPv>
     4a4:	mov	x0, x25
     4a8:	bl	0 <_ZdlPv>
     4ac:	ldr	x0, [sp, #256]
     4b0:	str	xzr, [sp, #288]
     4b4:	cmp	x0, x28
     4b8:	b.eq	4c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4c0>  // b.none
     4bc:	bl	0 <_ZdlPv>
     4c0:	sub	x0, x29, #0xb0
     4c4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     4c8:	ldr	x0, [sp, #344]
     4cc:	ldr	x8, [sp, #80]
     4d0:	cmp	x0, x8
     4d4:	b.eq	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>  // b.none
     4d8:	bl	0 <_ZdlPv>
     4dc:	b	21c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x21c>
     4e0:	ldp	x10, x9, [sp, #376]
     4e4:	ldr	x8, [sp, #392]
     4e8:	b	4f8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x4f8>
     4ec:	mov	x8, xzr
     4f0:	mov	x9, xzr
     4f4:	mov	x10, xzr
     4f8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     4fc:	mov	w11, #0x7                   	// #7
     500:	add	x0, x0, #0x0
     504:	mov	w1, #0x7                   	// #7
     508:	mov	x2, xzr
     50c:	sturb	w11, [x29, #-176]
     510:	stp	x10, x9, [x29, #-168]
     514:	stur	x8, [x29, #-152]
     518:	stp	xzr, xzr, [sp, #384]
     51c:	str	xzr, [sp, #376]
     520:	stp	xzr, x0, [sp, #344]
     524:	mov	w26, #0x7                   	// #7
     528:	str	x11, [sp, #360]
     52c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     530:	ldr	x19, [sp, #56]
     534:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     538:	add	x0, sp, #0x190
     53c:	add	x1, sp, #0x158
     540:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     544:	mov	x25, x0
     548:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     54c:	sub	x1, x29, #0xb0
     550:	mov	x0, x25
     554:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     558:	ldr	x25, [sp, #344]
     55c:	cbz	x25, 57c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x57c>
     560:	mov	x8, x25
     564:	ldr	x0, [x8], #16
     568:	cmp	x0, x8
     56c:	b.eq	574 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x574>  // b.none
     570:	bl	0 <_ZdlPv>
     574:	mov	x0, x25
     578:	bl	0 <_ZdlPv>
     57c:	sub	x0, x29, #0xb0
     580:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     584:	stp	xzr, xzr, [sp, #288]
     588:	str	xzr, [sp, #304]
     58c:	ldr	w8, [x27, #96]
     590:	cbz	w8, 67c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x67c>
     594:	ldr	x19, [x27, #88]
     598:	add	x8, x8, x8, lsl #1
     59c:	lsl	x21, x8, #3
     5a0:	b	5b0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5b0>
     5a4:	subs	x21, x21, #0x18
     5a8:	add	x19, x19, #0x18
     5ac:	b.eq	66c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x66c>  // b.none
     5b0:	ldr	x8, [x19]
     5b4:	ldr	x0, [x8]
     5b8:	ldr	x8, [x0]
     5bc:	ldr	x9, [x8, #48]
     5c0:	add	x8, sp, #0xe0
     5c4:	blr	x9
     5c8:	ldp	x0, x1, [sp, #224]
     5cc:	mov	w8, #0x5                   	// #5
     5d0:	mov	x2, xzr
     5d4:	sturb	w8, [x29, #-176]
     5d8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     5dc:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     5e0:	ldr	x8, [sp, #224]
     5e4:	stur	x24, [x29, #-168]
     5e8:	cmp	x8, x20
     5ec:	b.eq	600 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x600>  // b.none
     5f0:	ldr	x9, [sp, #240]
     5f4:	stur	x8, [x29, #-168]
     5f8:	stur	x9, [x29, #-152]
     5fc:	b	608 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x608>
     600:	ldr	q0, [x20]
     604:	str	q0, [x24]
     608:	ldp	x8, x10, [sp, #296]
     60c:	ldr	x9, [sp, #232]
     610:	stp	x20, xzr, [sp, #224]
     614:	strb	wzr, [sp, #240]
     618:	cmp	x8, x10
     61c:	stur	x9, [x29, #-160]
     620:	b.eq	640 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x640>  // b.none
     624:	sub	x1, x29, #0xb0
     628:	mov	x0, x8
     62c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     630:	ldr	x8, [sp, #296]
     634:	add	x8, x8, #0x28
     638:	str	x8, [sp, #296]
     63c:	b	650 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x650>
     640:	add	x0, sp, #0x120
     644:	sub	x2, x29, #0xb0
     648:	mov	x1, x8
     64c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     650:	sub	x0, x29, #0xb0
     654:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     658:	ldr	x0, [sp, #224]
     65c:	cmp	x0, x20
     660:	b.eq	5a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5a4>  // b.none
     664:	bl	0 <_ZdlPv>
     668:	b	5a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x5a4>
     66c:	ldp	x10, x9, [sp, #288]
     670:	ldr	x8, [sp, #304]
     674:	ldr	x19, [sp, #56]
     678:	b	688 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x688>
     67c:	mov	x8, xzr
     680:	mov	x9, xzr
     684:	mov	x10, xzr
     688:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     68c:	stur	x8, [x29, #-152]
     690:	add	x0, x0, #0x0
     694:	mov	w8, #0xd                   	// #13
     698:	mov	w1, #0xd                   	// #13
     69c:	mov	x2, xzr
     6a0:	sturb	w26, [x29, #-176]
     6a4:	stp	x10, x9, [x29, #-168]
     6a8:	stp	xzr, xzr, [sp, #296]
     6ac:	str	xzr, [sp, #288]
     6b0:	stp	xzr, x0, [sp, #344]
     6b4:	str	x8, [sp, #360]
     6b8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     6bc:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     6c0:	add	x0, sp, #0x190
     6c4:	add	x1, sp, #0x158
     6c8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     6cc:	mov	x25, x0
     6d0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     6d4:	sub	x1, x29, #0xb0
     6d8:	mov	x0, x25
     6dc:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     6e0:	ldr	x25, [sp, #344]
     6e4:	cbz	x25, 704 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x704>
     6e8:	mov	x8, x25
     6ec:	ldr	x0, [x8], #16
     6f0:	cmp	x0, x8
     6f4:	b.eq	6fc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x6fc>  // b.none
     6f8:	bl	0 <_ZdlPv>
     6fc:	mov	x0, x25
     700:	bl	0 <_ZdlPv>
     704:	sub	x0, x29, #0xb0
     708:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     70c:	ldp	x25, x26, [sp, #88]
     710:	str	x19, [sp, #192]
     714:	cbnz	x25, 71c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x71c>
     718:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     71c:	cmp	x26, #0x10
     720:	mov	x0, x19
     724:	str	x26, [sp, #344]
     728:	b.cc	748 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x748>  // b.lo, b.ul, b.last
     72c:	add	x0, sp, #0xc0
     730:	add	x1, sp, #0x158
     734:	mov	x2, xzr
     738:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     73c:	ldr	x8, [sp, #344]
     740:	str	x0, [sp, #192]
     744:	str	x8, [sp, #208]
     748:	cbz	x26, 76c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x76c>
     74c:	cmp	x26, #0x1
     750:	b.ne	760 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x760>  // b.any
     754:	ldrb	w8, [x25]
     758:	strb	w8, [x0]
     75c:	b	76c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x76c>
     760:	mov	x1, x25
     764:	mov	x2, x26
     768:	bl	0 <memcpy>
     76c:	ldr	x8, [sp, #344]
     770:	ldr	x9, [sp, #192]
     774:	mov	x2, xzr
     778:	str	x8, [sp, #200]
     77c:	strb	wzr, [x9, x8]
     780:	ldp	x0, x1, [sp, #192]
     784:	mov	w8, #0x5                   	// #5
     788:	sturb	w8, [x29, #-176]
     78c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     790:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     794:	ldr	x8, [sp, #192]
     798:	stur	x24, [x29, #-168]
     79c:	cmp	x8, x19
     7a0:	b.eq	7b4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x7b4>  // b.none
     7a4:	ldr	x9, [sp, #208]
     7a8:	stur	x8, [x29, #-168]
     7ac:	stur	x9, [x29, #-152]
     7b0:	b	7bc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x7bc>
     7b4:	ldr	q0, [x19]
     7b8:	str	q0, [x24]
     7bc:	ldr	x8, [sp, #200]
     7c0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     7c4:	add	x0, x0, #0x0
     7c8:	mov	w1, #0x5                   	// #5
     7cc:	stur	x8, [x29, #-160]
     7d0:	mov	w8, #0x5                   	// #5
     7d4:	mov	x2, xzr
     7d8:	stp	x19, xzr, [sp, #192]
     7dc:	strb	wzr, [sp, #208]
     7e0:	stp	xzr, x0, [sp, #344]
     7e4:	str	x8, [sp, #360]
     7e8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     7ec:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     7f0:	add	x0, sp, #0x190
     7f4:	add	x1, sp, #0x158
     7f8:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     7fc:	mov	x25, x0
     800:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     804:	sub	x1, x29, #0xb0
     808:	mov	x0, x25
     80c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     810:	ldr	x25, [sp, #344]
     814:	cbz	x25, 834 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x834>
     818:	mov	x8, x25
     81c:	ldr	x0, [x8], #16
     820:	cmp	x0, x8
     824:	b.eq	82c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x82c>  // b.none
     828:	bl	0 <_ZdlPv>
     82c:	mov	x0, x25
     830:	bl	0 <_ZdlPv>
     834:	sub	x0, x29, #0xb0
     838:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     83c:	ldr	x0, [sp, #192]
     840:	cmp	x0, x19
     844:	b.eq	84c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x84c>  // b.none
     848:	bl	0 <_ZdlPv>
     84c:	ldrb	w8, [x27, #124]
     850:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     854:	mov	w9, #0x1                   	// #1
     858:	add	x0, x0, #0x0
     85c:	sturb	w8, [x29, #-168]
     860:	mov	w8, #0xa                   	// #10
     864:	mov	w1, #0xa                   	// #10
     868:	mov	x2, xzr
     86c:	sturb	w9, [x29, #-176]
     870:	stp	xzr, x0, [sp, #344]
     874:	str	x8, [sp, #360]
     878:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     87c:	ldr	x19, [sp, #40]
     880:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     884:	add	x0, sp, #0x190
     888:	add	x1, sp, #0x158
     88c:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     890:	mov	x25, x0
     894:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     898:	sub	x1, x29, #0xb0
     89c:	mov	x0, x25
     8a0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     8a4:	ldr	x25, [sp, #344]
     8a8:	cbz	x25, 8c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x8c8>
     8ac:	mov	x8, x25
     8b0:	ldr	x0, [x8], #16
     8b4:	cmp	x0, x8
     8b8:	b.eq	8c0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x8c0>  // b.none
     8bc:	bl	0 <_ZdlPv>
     8c0:	mov	x0, x25
     8c4:	bl	0 <_ZdlPv>
     8c8:	sub	x0, x29, #0xb0
     8cc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     8d0:	ldp	x8, x9, [sp, #408]
     8d4:	ldr	x10, [sp, #400]
     8d8:	mov	w11, #0x1                   	// #1
     8dc:	ldp	x25, x26, [sp, #88]
     8e0:	stp	x11, x8, [x29, #-168]
     8e4:	ldr	w8, [sp, #424]
     8e8:	stur	x9, [x29, #-152]
     8ec:	mov	w9, #0x6                   	// #6
     8f0:	sturb	w9, [x29, #-176]
     8f4:	add	x9, x10, #0x1
     8f8:	stur	w8, [x29, #-144]
     8fc:	stp	x9, xzr, [sp, #400]
     900:	str	xzr, [sp, #416]
     904:	str	wzr, [sp, #424]
     908:	str	x19, [sp, #160]
     90c:	cbnz	x25, 914 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x914>
     910:	cbnz	x26, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     914:	cmp	x26, #0x10
     918:	mov	x0, x19
     91c:	stur	x26, [x29, #-16]
     920:	b.cc	940 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x940>  // b.lo, b.ul, b.last
     924:	add	x0, sp, #0xa0
     928:	sub	x1, x29, #0x10
     92c:	mov	x2, xzr
     930:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     934:	ldur	x8, [x29, #-16]
     938:	str	x0, [sp, #160]
     93c:	str	x8, [sp, #176]
     940:	cbz	x26, 964 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x964>
     944:	cmp	x26, #0x1
     948:	b.ne	958 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x958>  // b.any
     94c:	ldrb	w8, [x25]
     950:	strb	w8, [x0]
     954:	b	964 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x964>
     958:	mov	x1, x25
     95c:	mov	x2, x26
     960:	bl	0 <memcpy>
     964:	ldur	x8, [x29, #-16]
     968:	ldr	x9, [sp, #160]
     96c:	mov	w0, #0x20                  	// #32
     970:	str	x8, [sp, #168]
     974:	strb	wzr, [x9, x8]
     978:	bl	0 <_Znwm>
     97c:	ldr	x9, [sp, #160]
     980:	add	x8, x0, #0x10
     984:	str	x8, [x0]
     988:	cmp	x9, x19
     98c:	b.eq	9a4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x9a4>  // b.none
     990:	ldr	x8, [sp, #176]
     994:	str	x9, [x0]
     998:	str	x8, [x0, #16]
     99c:	mov	x8, x9
     9a0:	b	9ac <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x9ac>
     9a4:	ldr	q0, [x19]
     9a8:	str	q0, [x8]
     9ac:	ldr	x1, [sp, #168]
     9b0:	ldr	x9, [sp, #32]
     9b4:	str	x0, [sp, #344]
     9b8:	mov	x2, xzr
     9bc:	str	x1, [x0, #8]
     9c0:	mov	x0, x8
     9c4:	stp	x19, xzr, [sp, #160]
     9c8:	strb	wzr, [sp, #176]
     9cc:	stp	xzr, xzr, [x9]
     9d0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     9d4:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     9d8:	ldr	x8, [sp, #344]
     9dc:	sub	x0, x29, #0xd0
     9e0:	add	x1, sp, #0x158
     9e4:	ldr	q0, [x8]
     9e8:	add	x8, sp, #0x120
     9ec:	stur	q0, [x8, #64]
     9f0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     9f4:	mov	x25, x0
     9f8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     9fc:	sub	x1, x29, #0xb0
     a00:	mov	x0, x25
     a04:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     a08:	ldr	x25, [sp, #344]
     a0c:	cbz	x25, a2c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa2c>
     a10:	mov	x8, x25
     a14:	ldr	x0, [x8], #16
     a18:	cmp	x0, x8
     a1c:	b.eq	a24 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa24>  // b.none
     a20:	bl	0 <_ZdlPv>
     a24:	mov	x0, x25
     a28:	bl	0 <_ZdlPv>
     a2c:	ldr	x0, [sp, #160]
     a30:	str	xzr, [sp, #344]
     a34:	cmp	x0, x19
     a38:	b.eq	a40 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa40>  // b.none
     a3c:	bl	0 <_ZdlPv>
     a40:	sub	x0, x29, #0xb0
     a44:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     a48:	ldr	w8, [x27, #96]
     a4c:	cbz	w8, bbc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbbc>
     a50:	ldr	x19, [x27, #88]
     a54:	add	x8, x8, x8, lsl #1
     a58:	lsl	x21, x8, #3
     a5c:	b	a6c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa6c>
     a60:	subs	x21, x21, #0x18
     a64:	add	x19, x19, #0x18
     a68:	b.eq	bbc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbbc>  // b.none
     a6c:	ldr	x8, [x19]
     a70:	ldr	x0, [x8]
     a74:	ldr	x8, [x0]
     a78:	ldr	x9, [x8, #48]
     a7c:	add	x8, sp, #0x158
     a80:	blr	x9
     a84:	sub	x0, x29, #0x100
     a88:	add	x1, sp, #0x158
     a8c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     a90:	ldp	x26, x27, [sp, #88]
     a94:	mov	x25, x0
     a98:	str	x22, [sp, #128]
     a9c:	cbnz	x26, aa4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaa4>
     aa0:	cbnz	x27, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     aa4:	cmp	x27, #0x10
     aa8:	mov	x0, x22
     aac:	stur	x27, [x29, #-16]
     ab0:	b.cc	ad0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xad0>  // b.lo, b.ul, b.last
     ab4:	add	x0, sp, #0x80
     ab8:	sub	x1, x29, #0x10
     abc:	mov	x2, xzr
     ac0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     ac4:	ldur	x8, [x29, #-16]
     ac8:	str	x0, [sp, #128]
     acc:	str	x8, [sp, #144]
     ad0:	cbz	x27, af4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaf4>
     ad4:	cmp	x27, #0x1
     ad8:	b.ne	ae8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xae8>  // b.any
     adc:	ldrb	w8, [x26]
     ae0:	strb	w8, [x0]
     ae4:	b	af4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xaf4>
     ae8:	mov	x1, x26
     aec:	mov	x2, x27
     af0:	bl	0 <memcpy>
     af4:	ldur	x8, [x29, #-16]
     af8:	ldr	x9, [sp, #128]
     afc:	mov	x2, xzr
     b00:	str	x8, [sp, #136]
     b04:	strb	wzr, [x9, x8]
     b08:	ldp	x0, x1, [sp, #128]
     b0c:	mov	w8, #0x5                   	// #5
     b10:	sturb	w8, [x29, #-176]
     b14:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     b18:	tbz	w0, #0, 103c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x103c>
     b1c:	ldr	x8, [sp, #128]
     b20:	stur	x24, [x29, #-168]
     b24:	cmp	x8, x22
     b28:	b.eq	b3c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb3c>  // b.none
     b2c:	ldr	x9, [sp, #144]
     b30:	stur	x8, [x29, #-168]
     b34:	stur	x9, [x29, #-152]
     b38:	b	b44 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb44>
     b3c:	ldr	q0, [x22]
     b40:	str	q0, [x24]
     b44:	ldr	x8, [sp, #136]
     b48:	stp	x22, xzr, [sp, #128]
     b4c:	strb	wzr, [sp, #144]
     b50:	stur	x8, [x29, #-160]
     b54:	ldp	x8, x9, [x25, #8]
     b58:	cmp	x8, x9
     b5c:	b.eq	b7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb7c>  // b.none
     b60:	sub	x1, x29, #0xb0
     b64:	mov	x0, x8
     b68:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     b6c:	ldr	x8, [x25, #8]
     b70:	add	x8, x8, #0x28
     b74:	str	x8, [x25, #8]
     b78:	b	b8c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xb8c>
     b7c:	sub	x2, x29, #0xb0
     b80:	mov	x0, x25
     b84:	mov	x1, x8
     b88:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     b8c:	sub	x0, x29, #0xb0
     b90:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     b94:	ldr	x0, [sp, #128]
     b98:	cmp	x0, x22
     b9c:	b.eq	ba4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xba4>  // b.none
     ba0:	bl	0 <_ZdlPv>
     ba4:	ldr	x0, [sp, #344]
     ba8:	ldr	x8, [sp, #80]
     bac:	cmp	x0, x8
     bb0:	b.eq	a60 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa60>  // b.none
     bb4:	bl	0 <_ZdlPv>
     bb8:	b	a60 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xa60>
     bbc:	ldp	x25, x19, [sp, #288]
     bc0:	cmp	x25, x19
     bc4:	b.eq	c48 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc48>  // b.none
     bc8:	ldr	x21, [sp, #64]
     bcc:	mov	x0, x25
     bd0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     bd4:	add	x25, x25, #0x28
     bd8:	cmp	x19, x25
     bdc:	b.ne	bcc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbcc>  // b.any
     be0:	ldr	x25, [sp, #288]
     be4:	cbz	x25, bf0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbf0>
     be8:	mov	x0, x25
     bec:	bl	0 <_ZdlPv>
     bf0:	ldp	x25, x19, [sp, #376]
     bf4:	cmp	x25, x19
     bf8:	b.eq	c14 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc14>  // b.none
     bfc:	mov	x0, x25
     c00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     c04:	add	x25, x25, #0x28
     c08:	cmp	x19, x25
     c0c:	b.ne	bfc <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbfc>  // b.any
     c10:	ldr	x25, [sp, #376]
     c14:	cbz	x25, c20 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc20>
     c18:	mov	x0, x25
     c1c:	bl	0 <_ZdlPv>
     c20:	add	x0, sp, #0x190
     c24:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     c28:	ldr	x0, [sp, #408]
     c2c:	bl	0 <_ZdlPv>
     c30:	ldr	x0, [sp, #88]
     c34:	ldr	x8, [sp, #24]
     c38:	cmp	x0, x8
     c3c:	b.eq	1b8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1b8>  // b.none
     c40:	bl	0 <_ZdlPv>
     c44:	b	1b8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1b8>
     c48:	ldr	x21, [sp, #64]
     c4c:	cbnz	x25, be8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbe8>
     c50:	b	bf0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xbf0>
     c54:	ldur	x20, [x29, #-232]
     c58:	ldr	x27, [sp, #8]
     c5c:	stp	xzr, xzr, [sp, #400]
     c60:	str	wzr, [sp, #424]
     c64:	str	xzr, [sp, #416]
     c68:	cmp	x20, x27
     c6c:	b.eq	e6c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe6c>  // b.none
     c70:	sub	x8, x29, #0xb0
     c74:	add	x9, sp, #0x158
     c78:	add	x10, sp, #0x178
     c7c:	add	x19, x8, #0x20
     c80:	add	x23, x9, #0x10
     c84:	add	x24, x10, #0x8
     c88:	add	x25, x8, #0x10
     c8c:	mov	w26, #0x7                   	// #7
     c90:	b	ca8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xca8>
     c94:	mov	x0, x20
     c98:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     c9c:	mov	x20, x0
     ca0:	cmp	x0, x27
     ca4:	b.eq	e58 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe58>  // b.none
     ca8:	add	x1, x20, #0x20
     cac:	sub	x0, x29, #0xb0
     cb0:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     cb4:	add	x8, sp, #0x120
     cb8:	ldr	q0, [x8, #256]
     cbc:	ldur	x8, [x29, #-128]
     cc0:	stp	xzr, xzr, [x19]
     cc4:	str	xzr, [x19, #16]
     cc8:	ldp	x21, x22, [x29, #-176]
     ccc:	strb	w26, [sp, #88]
     cd0:	stur	q0, [sp, #96]
     cd4:	str	x8, [sp, #112]
     cd8:	str	x23, [sp, #344]
     cdc:	cbnz	x21, ce4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xce4>
     ce0:	cbnz	x22, 105c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x105c>
     ce4:	cmp	x22, #0x10
     ce8:	mov	x0, x23
     cec:	str	x22, [sp, #288]
     cf0:	b.cc	d10 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd10>  // b.lo, b.ul, b.last
     cf4:	add	x0, sp, #0x158
     cf8:	add	x1, sp, #0x120
     cfc:	mov	x2, xzr
     d00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     d04:	ldr	x8, [sp, #288]
     d08:	str	x0, [sp, #344]
     d0c:	str	x8, [sp, #360]
     d10:	cbz	x22, d34 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd34>
     d14:	cmp	x22, #0x1
     d18:	b.ne	d28 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd28>  // b.any
     d1c:	ldrb	w8, [x21]
     d20:	strb	w8, [x0]
     d24:	b	d34 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd34>
     d28:	mov	x1, x21
     d2c:	mov	x2, x22
     d30:	bl	0 <memcpy>
     d34:	ldr	x8, [sp, #288]
     d38:	ldr	x9, [sp, #344]
     d3c:	mov	w0, #0x20                  	// #32
     d40:	str	x8, [sp, #352]
     d44:	strb	wzr, [x9, x8]
     d48:	bl	0 <_Znwm>
     d4c:	ldr	x9, [sp, #344]
     d50:	add	x8, x0, #0x10
     d54:	str	x8, [x0]
     d58:	cmp	x9, x23
     d5c:	b.eq	d74 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd74>  // b.none
     d60:	ldr	x8, [sp, #360]
     d64:	str	x9, [x0]
     d68:	str	x8, [x0, #16]
     d6c:	mov	x8, x9
     d70:	b	d7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xd7c>
     d74:	ldr	q0, [x23]
     d78:	str	q0, [x8]
     d7c:	ldr	x1, [sp, #352]
     d80:	str	x0, [sp, #376]
     d84:	mov	x2, xzr
     d88:	stp	x23, xzr, [sp, #344]
     d8c:	str	x1, [x0, #8]
     d90:	mov	x0, x8
     d94:	strb	wzr, [sp, #360]
     d98:	stp	xzr, xzr, [x24]
     d9c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     da0:	tbz	w0, #0, 1068 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1068>
     da4:	ldr	x8, [sp, #376]
     da8:	add	x0, sp, #0x190
     dac:	add	x1, sp, #0x178
     db0:	ldr	q0, [x8]
     db4:	add	x8, sp, #0x120
     db8:	stur	q0, [x8, #96]
     dbc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     dc0:	mov	x21, x0
     dc4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     dc8:	add	x1, sp, #0x58
     dcc:	mov	x0, x21
     dd0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     dd4:	ldr	x21, [sp, #376]
     dd8:	cbz	x21, df8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xdf8>
     ddc:	mov	x8, x21
     de0:	ldr	x0, [x8], #16
     de4:	cmp	x0, x8
     de8:	b.eq	df0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xdf0>  // b.none
     dec:	bl	0 <_ZdlPv>
     df0:	mov	x0, x21
     df4:	bl	0 <_ZdlPv>
     df8:	ldr	x0, [sp, #344]
     dfc:	str	xzr, [sp, #376]
     e00:	cmp	x0, x23
     e04:	b.eq	e0c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe0c>  // b.none
     e08:	bl	0 <_ZdlPv>
     e0c:	add	x0, sp, #0x58
     e10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     e14:	ldp	x21, x22, [x29, #-144]
     e18:	cmp	x21, x22
     e1c:	b.eq	e38 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe38>  // b.none
     e20:	mov	x0, x21
     e24:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     e28:	add	x21, x21, #0x28
     e2c:	cmp	x22, x21
     e30:	b.ne	e20 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe20>  // b.any
     e34:	ldur	x21, [x29, #-144]
     e38:	cbz	x21, e44 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe44>
     e3c:	mov	x0, x21
     e40:	bl	0 <_ZdlPv>
     e44:	ldur	x0, [x29, #-176]
     e48:	cmp	x0, x25
     e4c:	b.eq	c94 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc94>  // b.none
     e50:	bl	0 <_ZdlPv>
     e54:	b	c94 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xc94>
     e58:	ldp	x10, x8, [sp, #400]
     e5c:	ldr	d0, [sp, #416]
     e60:	ldr	w9, [sp, #424]
     e64:	add	x10, x10, #0x1
     e68:	b	e7c <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xe7c>
     e6c:	mov	w9, wzr
     e70:	mov	x8, xzr
     e74:	movi	v0.2d, #0x0
     e78:	mov	w10, #0x1                   	// #1
     e7c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     e80:	mov	w11, #0x6                   	// #6
     e84:	mov	w12, #0x1                   	// #1
     e88:	stur	w9, [x29, #-144]
     e8c:	add	x0, x0, #0x0
     e90:	mov	w9, #0xb                   	// #11
     e94:	mov	w1, #0xb                   	// #11
     e98:	mov	x2, xzr
     e9c:	stp	x10, xzr, [sp, #400]
     ea0:	stur	d0, [x29, #-152]
     ea4:	str	xzr, [sp, #416]
     ea8:	str	wzr, [sp, #424]
     eac:	sturb	w11, [x29, #-176]
     eb0:	stp	x12, x8, [x29, #-168]
     eb4:	stp	xzr, x0, [sp, #88]
     eb8:	str	x9, [sp, #104]
     ebc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
     ec0:	tbz	w0, #0, 1088 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x1088>
     ec4:	sub	x0, x29, #0xd0
     ec8:	add	x1, sp, #0x58
     ecc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
     ed0:	mov	x20, x0
     ed4:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     ed8:	sub	x1, x29, #0xb0
     edc:	mov	x0, x20
     ee0:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
     ee4:	ldr	x20, [sp, #88]
     ee8:	cbz	x20, f08 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf08>
     eec:	mov	x8, x20
     ef0:	ldr	x0, [x8], #16
     ef4:	cmp	x0, x8
     ef8:	b.eq	f00 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xf00>  // b.none
     efc:	bl	0 <_ZdlPv>
     f00:	mov	x0, x20
     f04:	bl	0 <_ZdlPv>
     f08:	sub	x0, x29, #0xb0
     f0c:	sub	x19, x29, #0xb0
     f10:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     f14:	mov	w8, #0x6                   	// #6
     f18:	strb	w8, [sp, #88]
     f1c:	ldur	x8, [x29, #-192]
     f20:	add	x11, x19, #0x10
     f24:	ldp	x9, x10, [x29, #-208]
     f28:	movi	v0.2d, #0x0
     f2c:	stur	x11, [x29, #-176]
     f30:	adrp	x11, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     f34:	stur	d0, [x29, #-192]
     f38:	stur	d0, [x29, #-24]
     f3c:	ldr	d0, [x11]
     f40:	str	x8, [sp, #112]
     f44:	ldur	w8, [x29, #-184]
     f48:	ldr	x19, [sp, #16]
     f4c:	mov	w11, #0x1                   	// #1
     f50:	add	x9, x9, #0x1
     f54:	sub	x0, x29, #0xb0
     f58:	add	x1, sp, #0x58
     f5c:	stp	x11, x10, [sp, #96]
     f60:	stur	wzr, [x29, #-184]
     f64:	stur	x19, [x29, #-32]
     f68:	stur	xzr, [x29, #-160]
     f6c:	str	w8, [sp, #120]
     f70:	stp	x9, xzr, [x29, #-208]
     f74:	stur	d0, [x29, #-168]
     f78:	bl	0 <_ZN4llvm4json7OStream5valueERKNS0_5ValueE>
     f7c:	ldur	w8, [x29, #-168]
     f80:	cmp	w8, #0x1
     f84:	b.ne	10a8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10a8>  // b.any
     f88:	ldur	x0, [x29, #-176]
     f8c:	ldr	w8, [x0]
     f90:	cbnz	w8, 10c8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10c8>
     f94:	ldrb	w8, [x0, #4]
     f98:	cbz	w8, 10e8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0x10e8>
     f9c:	sub	x8, x29, #0xb0
     fa0:	add	x8, x8, #0x10
     fa4:	cmp	x0, x8
     fa8:	b.eq	fb0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfb0>  // b.none
     fac:	bl	0 <free>
     fb0:	ldp	x9, x8, [x19, #16]
     fb4:	cmp	x9, x8
     fb8:	b.ne	fd4 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfd4>  // b.any
     fbc:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     fc0:	add	x1, x1, #0x0
     fc4:	mov	w2, #0x1                   	// #1
     fc8:	mov	x0, x19
     fcc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     fd0:	b	fe8 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE+0xfe8>
     fd4:	mov	w9, #0xa                   	// #10
     fd8:	strb	w9, [x8]
     fdc:	ldr	x8, [x19, #24]
     fe0:	add	x8, x8, #0x1
     fe4:	str	x8, [x19, #24]
     fe8:	add	x0, sp, #0x58
     fec:	bl	0 <_ZN4llvm4json5Value7destroyEv>
     ff0:	add	x0, sp, #0x190
     ff4:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
     ff8:	ldr	x0, [sp, #408]
     ffc:	bl	0 <_ZdlPv>
    1000:	ldur	x1, [x29, #-240]
    1004:	sub	x0, x29, #0x100
    1008:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    100c:	sub	x0, x29, #0xd0
    1010:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1014:	ldur	x0, [x29, #-200]
    1018:	bl	0 <_ZdlPv>
    101c:	add	sp, sp, #0x2b0
    1020:	ldp	x20, x19, [sp, #80]
    1024:	ldp	x22, x21, [sp, #64]
    1028:	ldp	x24, x23, [sp, #48]
    102c:	ldp	x26, x25, [sp, #32]
    1030:	ldp	x28, x27, [sp, #16]
    1034:	ldp	x29, x30, [sp], #96
    1038:	ret
    103c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1040:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1044:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1048:	add	x0, x0, #0x0
    104c:	add	x1, x1, #0x0
    1050:	add	x3, x3, #0x0
    1054:	mov	w2, #0x138                 	// #312
    1058:	bl	0 <__assert_fail>
    105c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1060:	add	x0, x0, #0x0
    1064:	bl	0 <_ZSt19__throw_logic_errorPKc>
    1068:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    106c:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1070:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1074:	add	x0, x0, #0x0
    1078:	add	x1, x1, #0x0
    107c:	add	x3, x3, #0x0
    1080:	mov	w2, #0x1f1                 	// #497
    1084:	bl	0 <__assert_fail>
    1088:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    108c:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1090:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1094:	add	x0, x0, #0x0
    1098:	add	x1, x1, #0x0
    109c:	add	x3, x3, #0x0
    10a0:	mov	w2, #0x1f8                 	// #504
    10a4:	bl	0 <__assert_fail>
    10a8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10ac:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10b0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10b4:	add	x0, x0, #0x0
    10b8:	add	x1, x1, #0x0
    10bc:	add	x3, x3, #0x0
    10c0:	mov	w2, #0x2fd                 	// #765
    10c4:	bl	0 <__assert_fail>
    10c8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10cc:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10d0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10d4:	add	x0, x0, #0x0
    10d8:	add	x1, x1, #0x0
    10dc:	add	x3, x3, #0x0
    10e0:	mov	w2, #0x2fe                 	// #766
    10e4:	bl	0 <__assert_fail>
    10e8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10ec:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10f0:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    10f4:	add	x0, x0, #0x0
    10f8:	add	x1, x1, #0x0
    10fc:	add	x3, x3, #0x0
    1100:	mov	w2, #0x2ff                 	// #767
    1104:	bl	0 <__assert_fail>

0000000000001108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>:
    1108:	sub	sp, sp, #0x140
    110c:	stp	x29, x30, [sp, #224]
    1110:	stp	x28, x27, [sp, #240]
    1114:	stp	x26, x25, [sp, #256]
    1118:	stp	x24, x23, [sp, #272]
    111c:	stp	x22, x21, [sp, #288]
    1120:	stp	x20, x19, [sp, #304]
    1124:	add	x29, sp, #0xe0
    1128:	ldrb	w8, [x1, #8]
    112c:	mov	x20, x1
    1130:	mov	x19, x0
    1134:	sub	w8, w8, #0x2
    1138:	cmp	w8, #0x16
    113c:	b.hi	1178 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x70>  // b.pmore
    1140:	adrp	x9, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1144:	add	x9, x9, #0x0
    1148:	adr	x10, 1158 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x50>
    114c:	ldrb	w11, [x9, x8]
    1150:	add	x10, x10, x11, lsl #2
    1154:	br	x10
    1158:	ldp	x0, x1, [x20, #24]
    115c:	mov	w8, #0x4                   	// #4
    1160:	mov	x2, xzr
    1164:	strb	w8, [x19]
    1168:	stp	x0, x1, [x19, #8]
    116c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1170:	tbnz	w0, #0, 1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    1174:	b	1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    1178:	stp	xzr, xzr, [x29, #-80]
    117c:	stur	wzr, [x29, #-56]
    1180:	stur	xzr, [x29, #-64]
    1184:	ldr	x8, [x20]
    1188:	mov	x0, x20
    118c:	add	x21, sp, #0x70
    1190:	ldr	x9, [x8, #40]
    1194:	add	x8, sp, #0x70
    1198:	blr	x9
    119c:	ldp	x0, x1, [sp, #112]
    11a0:	mov	w8, #0x5                   	// #5
    11a4:	mov	x2, xzr
    11a8:	sturb	w8, [x29, #-48]
    11ac:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    11b0:	tbz	w0, #0, 1dcc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcc4>
    11b4:	ldr	x8, [sp, #112]
    11b8:	sub	x9, x29, #0x30
    11bc:	add	x22, x21, #0x10
    11c0:	add	x9, x9, #0x18
    11c4:	cmp	x8, x22
    11c8:	stur	x9, [x29, #-40]
    11cc:	b.eq	1334 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x22c>  // b.none
    11d0:	ldr	x9, [sp, #128]
    11d4:	stur	x8, [x29, #-40]
    11d8:	stur	x9, [x29, #-24]
    11dc:	b	133c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x234>
    11e0:	movi	v0.2d, #0x0
    11e4:	stur	xzr, [x29, #-64]
    11e8:	stur	q0, [x29, #-80]
    11ec:	ldr	w8, [x20, #32]
    11f0:	cbz	w8, 131c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x214>
    11f4:	mov	x21, xzr
    11f8:	sub	x22, x8, #0x1
    11fc:	add	x23, x20, #0x28
    1200:	b	1234 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x12c>
    1204:	sub	x0, x29, #0x50
    1208:	sub	x2, x29, #0x30
    120c:	mov	x1, x8
    1210:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1214:	sub	x0, x29, #0x30
    1218:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    121c:	cmp	x22, x21
    1220:	b.eq	1274 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x16c>  // b.none
    1224:	ldr	w8, [x20, #32]
    1228:	add	x21, x21, #0x1
    122c:	cmp	x21, x8
    1230:	b.cs	1d6c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc64>  // b.hs, b.nlast
    1234:	ldr	x1, [x23, x21, lsl #3]
    1238:	sub	x0, x29, #0x30
    123c:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1240:	ldp	x8, x9, [x29, #-72]
    1244:	cmp	x8, x9
    1248:	b.eq	1204 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xfc>  // b.none
    124c:	sub	x1, x29, #0x30
    1250:	mov	x0, x8
    1254:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1258:	ldur	x8, [x29, #-72]
    125c:	add	x8, x8, #0x28
    1260:	stur	x8, [x29, #-72]
    1264:	sub	x0, x29, #0x30
    1268:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    126c:	cmp	x22, x21
    1270:	b.ne	1224 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x11c>  // b.any
    1274:	ldur	q0, [x29, #-80]
    1278:	ldur	x8, [x29, #-64]
    127c:	b	1320 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x218>
    1280:	ldrb	w8, [x20, #24]
    1284:	b	1294 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x18c>
    1288:	strb	wzr, [x19]
    128c:	b	1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    1290:	ldr	x8, [x20, #24]
    1294:	mov	w9, #0x3                   	// #3
    1298:	strb	w9, [x19]
    129c:	str	x8, [x19, #8]
    12a0:	b	1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    12a4:	movi	v0.2d, #0x0
    12a8:	stur	xzr, [x29, #-64]
    12ac:	stur	q0, [x29, #-80]
    12b0:	ldr	w8, [x20, #32]
    12b4:	lsl	x21, x8, #3
    12b8:	cbz	x21, 131c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x214>
    12bc:	add	x20, x20, #0x28
    12c0:	b	12e8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1e0>
    12c4:	sub	x0, x29, #0x50
    12c8:	sub	x2, x29, #0x30
    12cc:	mov	x1, x8
    12d0:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    12d4:	sub	x0, x29, #0x30
    12d8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    12dc:	subs	x21, x21, #0x8
    12e0:	add	x20, x20, #0x8
    12e4:	b.eq	1274 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x16c>  // b.none
    12e8:	ldr	x1, [x20]
    12ec:	sub	x0, x29, #0x30
    12f0:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    12f4:	ldp	x8, x9, [x29, #-72]
    12f8:	cmp	x8, x9
    12fc:	b.eq	12c4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1bc>  // b.none
    1300:	sub	x1, x29, #0x30
    1304:	mov	x0, x8
    1308:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    130c:	ldur	x8, [x29, #-72]
    1310:	add	x8, x8, #0x28
    1314:	stur	x8, [x29, #-72]
    1318:	b	12d4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x1cc>
    131c:	mov	x8, xzr
    1320:	mov	w9, #0x7                   	// #7
    1324:	stur	q0, [x19, #8]
    1328:	strb	w9, [x19]
    132c:	str	x8, [x19, #24]
    1330:	b	1610 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x508>
    1334:	ldr	q0, [x8]
    1338:	str	q0, [x9]
    133c:	ldr	x8, [sp, #120]
    1340:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1344:	add	x0, x0, #0x0
    1348:	mov	w9, #0x9                   	// #9
    134c:	mov	w1, #0x9                   	// #9
    1350:	mov	x2, xzr
    1354:	stp	x22, xzr, [sp, #112]
    1358:	strb	wzr, [sp, #128]
    135c:	stp	xzr, x0, [sp, #88]
    1360:	stur	x8, [x29, #-32]
    1364:	str	x9, [sp, #104]
    1368:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    136c:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1370:	sub	x0, x29, #0x50
    1374:	add	x1, sp, #0x58
    1378:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    137c:	mov	x21, x0
    1380:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1384:	sub	x1, x29, #0x30
    1388:	mov	x0, x21
    138c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1390:	ldr	x21, [sp, #88]
    1394:	cbz	x21, 13b4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2ac>
    1398:	mov	x8, x21
    139c:	ldr	x0, [x8], #16
    13a0:	cmp	x0, x8
    13a4:	b.eq	13ac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2a4>  // b.none
    13a8:	bl	0 <_ZdlPv>
    13ac:	mov	x0, x21
    13b0:	bl	0 <_ZdlPv>
    13b4:	sub	x0, x29, #0x30
    13b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    13bc:	ldr	x0, [sp, #112]
    13c0:	cmp	x0, x22
    13c4:	b.eq	13cc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x2c4>  // b.none
    13c8:	bl	0 <_ZdlPv>
    13cc:	ldrb	w8, [x20, #8]
    13d0:	cmp	w8, #0x6
    13d4:	b.ne	1494 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x38c>  // b.any
    13d8:	adrp	x21, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    13dc:	add	x21, x21, #0x0
    13e0:	mov	w8, #0x4                   	// #4
    13e4:	mov	w9, #0x3                   	// #3
    13e8:	mov	w1, #0x3                   	// #3
    13ec:	mov	x0, x21
    13f0:	mov	x2, xzr
    13f4:	sturb	w8, [x29, #-48]
    13f8:	stp	x21, x9, [x29, #-40]
    13fc:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1400:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    1404:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1408:	add	x0, x0, #0x0
    140c:	mov	w8, #0x4                   	// #4
    1410:	mov	w1, #0x4                   	// #4
    1414:	mov	x2, xzr
    1418:	stp	xzr, x0, [sp, #88]
    141c:	str	x8, [sp, #104]
    1420:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1424:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1428:	sub	x0, x29, #0x50
    142c:	add	x1, sp, #0x58
    1430:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1434:	mov	x22, x0
    1438:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    143c:	sub	x1, x29, #0x30
    1440:	mov	x0, x22
    1444:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1448:	ldr	x22, [sp, #88]
    144c:	cbz	x22, 146c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x364>
    1450:	mov	x8, x22
    1454:	ldr	x0, [x8], #16
    1458:	cmp	x0, x8
    145c:	b.eq	1464 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x35c>  // b.none
    1460:	bl	0 <_ZdlPv>
    1464:	mov	x0, x22
    1468:	bl	0 <_ZdlPv>
    146c:	sub	x0, x29, #0x30
    1470:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1474:	ldr	x8, [x20, #24]
    1478:	ldr	x8, [x8]
    147c:	cbz	x8, 1e0c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd04>
    1480:	ldrb	w9, [x8, #8]
    1484:	cmp	w9, #0x12
    1488:	b.ne	1e2c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd24>  // b.any
    148c:	ldp	x0, x1, [x8, #24]
    1490:	b	1548 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x440>
    1494:	cmp	w8, #0x15
    1498:	b.eq	1630 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x528>  // b.none
    149c:	cmp	w8, #0x13
    14a0:	b.ne	1798 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x690>  // b.any
    14a4:	adrp	x21, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    14a8:	add	x21, x21, #0x0
    14ac:	mov	w8, #0x4                   	// #4
    14b0:	mov	w9, #0x3                   	// #3
    14b4:	mov	w1, #0x3                   	// #3
    14b8:	mov	x0, x21
    14bc:	mov	x2, xzr
    14c0:	sturb	w8, [x29, #-48]
    14c4:	stp	x21, x9, [x29, #-40]
    14c8:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    14cc:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    14d0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    14d4:	add	x0, x0, #0x0
    14d8:	mov	w8, #0x4                   	// #4
    14dc:	mov	w1, #0x4                   	// #4
    14e0:	mov	x2, xzr
    14e4:	stp	xzr, x0, [sp, #88]
    14e8:	str	x8, [sp, #104]
    14ec:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    14f0:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    14f4:	sub	x0, x29, #0x50
    14f8:	add	x1, sp, #0x58
    14fc:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1500:	mov	x22, x0
    1504:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1508:	sub	x1, x29, #0x30
    150c:	mov	x0, x22
    1510:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1514:	ldr	x22, [sp, #88]
    1518:	cbz	x22, 1538 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x430>
    151c:	mov	x8, x22
    1520:	ldr	x0, [x8], #16
    1524:	cmp	x0, x8
    1528:	b.eq	1530 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x428>  // b.none
    152c:	bl	0 <_ZdlPv>
    1530:	mov	x0, x22
    1534:	bl	0 <_ZdlPv>
    1538:	sub	x0, x29, #0x30
    153c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1540:	mov	x0, x20
    1544:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    1548:	mov	w8, #0x4                   	// #4
    154c:	mov	x2, xzr
    1550:	sturb	w8, [x29, #-48]
    1554:	stp	x0, x1, [x29, #-40]
    1558:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    155c:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    1560:	mov	w8, #0x3                   	// #3
    1564:	mov	w1, #0x3                   	// #3
    1568:	mov	x0, x21
    156c:	stp	xzr, x21, [sp, #88]
    1570:	str	x8, [sp, #104]
    1574:	mov	x2, xzr
    1578:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    157c:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1580:	sub	x0, x29, #0x50
    1584:	add	x1, sp, #0x58
    1588:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    158c:	mov	x20, x0
    1590:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1594:	sub	x1, x29, #0x30
    1598:	mov	x0, x20
    159c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    15a0:	ldr	x20, [sp, #88]
    15a4:	cbz	x20, 15c4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4bc>
    15a8:	mov	x8, x20
    15ac:	ldr	x0, [x8], #16
    15b0:	cmp	x0, x8
    15b4:	b.eq	15bc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4b4>  // b.none
    15b8:	bl	0 <_ZdlPv>
    15bc:	mov	x0, x20
    15c0:	bl	0 <_ZdlPv>
    15c4:	sub	x0, x29, #0x30
    15c8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    15cc:	mov	w8, #0x6                   	// #6
    15d0:	ldp	x10, x11, [x29, #-80]
    15d4:	strb	w8, [x19]
    15d8:	ldur	w8, [x29, #-56]
    15dc:	ldur	x12, [x29, #-64]
    15e0:	mov	w9, #0x1                   	// #1
    15e4:	stp	x9, x11, [x19, #8]
    15e8:	str	w8, [x19, #32]
    15ec:	add	x8, x10, #0x1
    15f0:	str	x12, [x19, #24]
    15f4:	stp	xzr, xzr, [x29, #-72]
    15f8:	stur	x8, [x29, #-80]
    15fc:	stur	wzr, [x29, #-56]
    1600:	sub	x0, x29, #0x50
    1604:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1608:	ldur	x0, [x29, #-72]
    160c:	bl	0 <_ZdlPv>
    1610:	ldp	x20, x19, [sp, #304]
    1614:	ldp	x22, x21, [sp, #288]
    1618:	ldp	x24, x23, [sp, #272]
    161c:	ldp	x26, x25, [sp, #256]
    1620:	ldp	x28, x27, [sp, #240]
    1624:	ldp	x29, x30, [sp, #224]
    1628:	add	sp, sp, #0x140
    162c:	ret
    1630:	ldr	x21, [x20, #24]
    1634:	cbz	x21, 1e4c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd44>
    1638:	ldrb	w8, [x21, #8]
    163c:	cmp	w8, #0x13
    1640:	b.ne	1914 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x80c>  // b.any
    1644:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1648:	mov	w8, #0x4                   	// #4
    164c:	add	x0, x0, #0x0
    1650:	mov	w9, #0x6                   	// #6
    1654:	mov	w1, #0x6                   	// #6
    1658:	mov	x2, xzr
    165c:	sturb	w8, [x29, #-48]
    1660:	stp	x0, x9, [x29, #-40]
    1664:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1668:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    166c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1670:	add	x0, x0, #0x0
    1674:	mov	w8, #0x4                   	// #4
    1678:	mov	w1, #0x4                   	// #4
    167c:	mov	x2, xzr
    1680:	stp	xzr, x0, [sp, #88]
    1684:	str	x8, [sp, #104]
    1688:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    168c:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1690:	sub	x0, x29, #0x50
    1694:	add	x1, sp, #0x58
    1698:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    169c:	mov	x22, x0
    16a0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    16a4:	sub	x1, x29, #0x30
    16a8:	mov	x0, x22
    16ac:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    16b0:	ldr	x22, [sp, #88]
    16b4:	cbz	x22, 16d4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x5cc>
    16b8:	mov	x8, x22
    16bc:	ldr	x0, [x8], #16
    16c0:	cmp	x0, x8
    16c4:	b.eq	16cc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x5c4>  // b.none
    16c8:	bl	0 <_ZdlPv>
    16cc:	mov	x0, x22
    16d0:	bl	0 <_ZdlPv>
    16d4:	sub	x0, x29, #0x30
    16d8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    16dc:	mov	x0, x21
    16e0:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    16e4:	mov	w8, #0x4                   	// #4
    16e8:	mov	x2, xzr
    16ec:	sturb	w8, [x29, #-48]
    16f0:	stp	x0, x1, [x29, #-40]
    16f4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    16f8:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    16fc:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1700:	add	x0, x0, #0x0
    1704:	mov	w8, #0x3                   	// #3
    1708:	mov	w1, #0x3                   	// #3
    170c:	mov	x2, xzr
    1710:	stp	xzr, x0, [sp, #88]
    1714:	str	x8, [sp, #104]
    1718:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    171c:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1720:	sub	x0, x29, #0x50
    1724:	add	x1, sp, #0x58
    1728:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    172c:	mov	x21, x0
    1730:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1734:	sub	x1, x29, #0x30
    1738:	mov	x0, x21
    173c:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1740:	ldr	x21, [sp, #88]
    1744:	cbz	x21, 1764 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x65c>
    1748:	mov	x8, x21
    174c:	ldr	x0, [x8], #16
    1750:	cmp	x0, x8
    1754:	b.eq	175c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x654>  // b.none
    1758:	bl	0 <_ZdlPv>
    175c:	mov	x0, x21
    1760:	bl	0 <_ZdlPv>
    1764:	sub	x0, x29, #0x30
    1768:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    176c:	ldr	w8, [x20, #32]
    1770:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1774:	mov	w9, #0x3                   	// #3
    1778:	add	x0, x0, #0x0
    177c:	mov	w10, #0x5                   	// #5
    1780:	sturb	w9, [x29, #-48]
    1784:	stp	xzr, x0, [sp, #88]
    1788:	stur	x8, [x29, #-40]
    178c:	str	x10, [sp, #104]
    1790:	mov	w1, #0x5                   	// #5
    1794:	b	1574 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x46c>
    1798:	cmp	w8, #0x5
    179c:	b.ne	1914 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x80c>  // b.any
    17a0:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    17a4:	mov	w8, #0x4                   	// #4
    17a8:	add	x0, x0, #0x0
    17ac:	mov	w9, #0x3                   	// #3
    17b0:	mov	w1, #0x3                   	// #3
    17b4:	mov	x2, xzr
    17b8:	sturb	w8, [x29, #-48]
    17bc:	stp	x0, x9, [x29, #-40]
    17c0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    17c4:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    17c8:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    17cc:	add	x0, x0, #0x0
    17d0:	mov	w8, #0x4                   	// #4
    17d4:	mov	w1, #0x4                   	// #4
    17d8:	mov	x2, xzr
    17dc:	stp	xzr, x0, [sp, #88]
    17e0:	str	x8, [sp, #104]
    17e4:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    17e8:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    17ec:	sub	x0, x29, #0x50
    17f0:	add	x1, sp, #0x58
    17f4:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    17f8:	mov	x21, x0
    17fc:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1800:	sub	x1, x29, #0x30
    1804:	mov	x0, x21
    1808:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    180c:	ldr	x21, [sp, #88]
    1810:	cbz	x21, 1830 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x728>
    1814:	mov	x8, x21
    1818:	ldr	x0, [x8], #16
    181c:	cmp	x0, x8
    1820:	b.eq	1828 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x720>  // b.none
    1824:	bl	0 <_ZdlPv>
    1828:	mov	x0, x21
    182c:	bl	0 <_ZdlPv>
    1830:	sub	x0, x29, #0x30
    1834:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1838:	ldr	x1, [x20, #32]
    183c:	sub	x0, x29, #0x30
    1840:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1844:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1848:	add	x0, x0, #0x0
    184c:	mov	w8, #0x8                   	// #8
    1850:	mov	w1, #0x8                   	// #8
    1854:	mov	x2, xzr
    1858:	stp	xzr, x0, [sp, #88]
    185c:	str	x8, [sp, #104]
    1860:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1864:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1868:	sub	x0, x29, #0x50
    186c:	add	x1, sp, #0x58
    1870:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1874:	mov	x21, x0
    1878:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    187c:	sub	x1, x29, #0x30
    1880:	mov	x0, x21
    1884:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1888:	ldr	x21, [sp, #88]
    188c:	cbz	x21, 18ac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x7a4>
    1890:	mov	x8, x21
    1894:	ldr	x0, [x8], #16
    1898:	cmp	x0, x8
    189c:	b.eq	18a4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x79c>  // b.none
    18a0:	bl	0 <_ZdlPv>
    18a4:	mov	x0, x21
    18a8:	bl	0 <_ZdlPv>
    18ac:	sub	x0, x29, #0x30
    18b0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    18b4:	ldr	x0, [x20, #40]
    18b8:	cbz	x0, 1a04 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8fc>
    18bc:	ldr	x8, [x0]
    18c0:	add	x21, sp, #0x38
    18c4:	ldr	x9, [x8, #48]
    18c8:	add	x8, sp, #0x38
    18cc:	blr	x9
    18d0:	ldp	x0, x1, [sp, #56]
    18d4:	mov	w8, #0x5                   	// #5
    18d8:	mov	x2, xzr
    18dc:	sturb	w8, [x29, #-48]
    18e0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    18e4:	tbz	w0, #0, 1dcc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcc4>
    18e8:	ldr	x8, [sp, #56]
    18ec:	sub	x9, x29, #0x30
    18f0:	add	x22, x21, #0x10
    18f4:	add	x9, x9, #0x18
    18f8:	cmp	x8, x22
    18fc:	stur	x9, [x29, #-40]
    1900:	b.eq	196c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x864>  // b.none
    1904:	ldr	x9, [sp, #72]
    1908:	stur	x8, [x29, #-40]
    190c:	stur	x9, [x29, #-24]
    1910:	b	1974 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x86c>
    1914:	ldr	x8, [x20]
    1918:	mov	x0, x20
    191c:	ldr	x8, [x8, #32]
    1920:	blr	x8
    1924:	tbnz	w0, #0, 1e6c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xd64>
    1928:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    192c:	mov	w8, #0x4                   	// #4
    1930:	add	x0, x0, #0x0
    1934:	mov	w9, #0x7                   	// #7
    1938:	mov	w1, #0x7                   	// #7
    193c:	mov	x2, xzr
    1940:	sturb	w8, [x29, #-48]
    1944:	stp	x0, x9, [x29, #-40]
    1948:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    194c:	tbz	w0, #0, 1d8c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc84>
    1950:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1954:	add	x0, x0, #0x0
    1958:	mov	w8, #0x4                   	// #4
    195c:	stp	xzr, x0, [sp, #88]
    1960:	str	x8, [sp, #104]
    1964:	mov	w1, #0x4                   	// #4
    1968:	b	1574 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x46c>
    196c:	ldr	q0, [x8]
    1970:	str	q0, [x9]
    1974:	ldr	x8, [sp, #64]
    1978:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    197c:	add	x0, x0, #0x0
    1980:	mov	w9, #0x4                   	// #4
    1984:	mov	w1, #0x4                   	// #4
    1988:	mov	x2, xzr
    198c:	stp	x22, xzr, [sp, #56]
    1990:	strb	wzr, [sp, #72]
    1994:	stp	xzr, x0, [sp, #88]
    1998:	stur	x8, [x29, #-32]
    199c:	str	x9, [sp, #104]
    19a0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    19a4:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    19a8:	sub	x0, x29, #0x50
    19ac:	add	x1, sp, #0x58
    19b0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    19b4:	mov	x21, x0
    19b8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    19bc:	sub	x1, x29, #0x30
    19c0:	mov	x0, x21
    19c4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    19c8:	ldr	x21, [sp, #88]
    19cc:	cbz	x21, 19ec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8e4>
    19d0:	mov	x8, x21
    19d4:	ldr	x0, [x8], #16
    19d8:	cmp	x0, x8
    19dc:	b.eq	19e4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8dc>  // b.none
    19e0:	bl	0 <_ZdlPv>
    19e4:	mov	x0, x21
    19e8:	bl	0 <_ZdlPv>
    19ec:	sub	x0, x29, #0x30
    19f0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    19f4:	ldr	x0, [sp, #56]
    19f8:	cmp	x0, x22
    19fc:	b.eq	1a04 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x8fc>  // b.none
    1a00:	bl	0 <_ZdlPv>
    1a04:	stp	xzr, xzr, [sp, #88]
    1a08:	str	xzr, [sp, #104]
    1a0c:	ldr	w22, [x20, #48]
    1a10:	cbz	w22, 1c70 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb68>
    1a14:	sub	x8, x29, #0x30
    1a18:	mov	x9, sp
    1a1c:	mov	x23, xzr
    1a20:	add	x24, x20, #0x38
    1a24:	mov	w25, #0x7                   	// #7
    1a28:	add	x26, x8, #0x18
    1a2c:	add	x27, x9, #0x10
    1a30:	stp	xzr, xzr, [sp, #32]
    1a34:	str	xzr, [sp, #48]
    1a38:	ldr	x1, [x24, x23, lsl #3]
    1a3c:	sub	x0, x29, #0x30
    1a40:	bl	1108 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE>
    1a44:	ldp	x8, x9, [sp, #40]
    1a48:	cmp	x8, x9
    1a4c:	b.eq	1a6c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x964>  // b.none
    1a50:	sub	x1, x29, #0x30
    1a54:	mov	x0, x8
    1a58:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1a5c:	ldr	x8, [sp, #40]
    1a60:	add	x8, x8, #0x28
    1a64:	str	x8, [sp, #40]
    1a68:	b	1a7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x974>
    1a6c:	add	x0, sp, #0x20
    1a70:	sub	x2, x29, #0x30
    1a74:	mov	x1, x8
    1a78:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1a7c:	sub	x0, x29, #0x30
    1a80:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1a84:	ldr	w8, [x20, #52]
    1a88:	cmp	x23, x8
    1a8c:	b.cs	1dec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xce4>  // b.hs, b.nlast
    1a90:	ldr	w8, [x20, #48]
    1a94:	add	x8, x24, x8, lsl #3
    1a98:	ldr	x0, [x8, x23, lsl #3]
    1a9c:	cbz	x0, 1ae8 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x9e0>
    1aa0:	ldr	x8, [x0]
    1aa4:	ldr	x9, [x8, #48]
    1aa8:	mov	x8, sp
    1aac:	blr	x9
    1ab0:	ldp	x0, x1, [sp]
    1ab4:	mov	w8, #0x5                   	// #5
    1ab8:	mov	x2, xzr
    1abc:	sturb	w8, [x29, #-48]
    1ac0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1ac4:	tbz	w0, #0, 1dcc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xcc4>
    1ac8:	ldr	x8, [sp]
    1acc:	stur	x26, [x29, #-40]
    1ad0:	cmp	x8, x27
    1ad4:	b.eq	1b14 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa0c>  // b.none
    1ad8:	ldr	x9, [sp, #16]
    1adc:	stur	x8, [x29, #-40]
    1ae0:	stur	x9, [x29, #-24]
    1ae4:	b	1b1c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa14>
    1ae8:	ldp	x8, x9, [sp, #40]
    1aec:	sturb	wzr, [x29, #-48]
    1af0:	cmp	x8, x9
    1af4:	b.eq	1b80 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa78>  // b.none
    1af8:	sub	x1, x29, #0x30
    1afc:	mov	x0, x8
    1b00:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1b04:	ldr	x8, [sp, #40]
    1b08:	add	x8, x8, #0x28
    1b0c:	str	x8, [sp, #40]
    1b10:	b	1b90 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa88>
    1b14:	ldr	q0, [x27]
    1b18:	str	q0, [x26]
    1b1c:	ldp	x8, x10, [sp, #40]
    1b20:	ldr	x9, [sp, #8]
    1b24:	stp	x27, xzr, [sp]
    1b28:	strb	wzr, [sp, #16]
    1b2c:	cmp	x8, x10
    1b30:	stur	x9, [x29, #-32]
    1b34:	b.eq	1b54 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa4c>  // b.none
    1b38:	sub	x1, x29, #0x30
    1b3c:	mov	x0, x8
    1b40:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1b44:	ldr	x8, [sp, #40]
    1b48:	add	x8, x8, #0x28
    1b4c:	str	x8, [sp, #40]
    1b50:	b	1b64 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa5c>
    1b54:	add	x0, sp, #0x20
    1b58:	sub	x2, x29, #0x30
    1b5c:	mov	x1, x8
    1b60:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1b64:	sub	x0, x29, #0x30
    1b68:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b6c:	ldr	x0, [sp]
    1b70:	cmp	x0, x27
    1b74:	b.eq	1b98 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa90>  // b.none
    1b78:	bl	0 <_ZdlPv>
    1b7c:	b	1b98 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xa90>
    1b80:	add	x0, sp, #0x20
    1b84:	sub	x2, x29, #0x30
    1b88:	mov	x1, x8
    1b8c:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1b90:	sub	x0, x29, #0x30
    1b94:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1b98:	ldp	x8, x10, [sp, #96]
    1b9c:	ldr	q0, [sp, #32]
    1ba0:	ldr	x9, [sp, #48]
    1ba4:	sturb	w25, [x29, #-48]
    1ba8:	cmp	x8, x10
    1bac:	stp	xzr, xzr, [sp, #32]
    1bb0:	stur	q0, [x29, #-40]
    1bb4:	stur	x9, [x29, #-24]
    1bb8:	str	xzr, [sp, #48]
    1bbc:	b.eq	1bdc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xad4>  // b.none
    1bc0:	sub	x1, x29, #0x30
    1bc4:	mov	x0, x8
    1bc8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1bcc:	ldr	x8, [sp, #96]
    1bd0:	add	x8, x8, #0x28
    1bd4:	str	x8, [sp, #96]
    1bd8:	b	1bec <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xae4>
    1bdc:	add	x0, sp, #0x58
    1be0:	sub	x2, x29, #0x30
    1be4:	mov	x1, x8
    1be8:	bl	0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1bec:	sub	x0, x29, #0x30
    1bf0:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1bf4:	ldp	x21, x28, [sp, #32]
    1bf8:	cmp	x21, x28
    1bfc:	b.eq	1c18 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb10>  // b.none
    1c00:	mov	x0, x21
    1c04:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1c08:	add	x21, x21, #0x28
    1c0c:	cmp	x28, x21
    1c10:	b.ne	1c00 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xaf8>  // b.any
    1c14:	ldr	x21, [sp, #32]
    1c18:	cbz	x21, 1c24 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb1c>
    1c1c:	mov	x0, x21
    1c20:	bl	0 <_ZdlPv>
    1c24:	add	x23, x23, #0x1
    1c28:	cmp	x23, x22
    1c2c:	b.eq	1c64 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb5c>  // b.none
    1c30:	ldr	w8, [x20, #48]
    1c34:	stp	xzr, xzr, [sp, #32]
    1c38:	str	xzr, [sp, #48]
    1c3c:	cmp	x23, x8
    1c40:	b.cc	1a38 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x930>  // b.lo, b.ul, b.last
    1c44:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c48:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c4c:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c50:	add	x0, x0, #0x0
    1c54:	add	x1, x1, #0x0
    1c58:	add	x3, x3, #0x0
    1c5c:	mov	w2, #0x540                 	// #1344
    1c60:	bl	0 <__assert_fail>
    1c64:	ldp	x10, x9, [sp, #88]
    1c68:	ldr	x8, [sp, #104]
    1c6c:	b	1c7c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xb74>
    1c70:	mov	x8, xzr
    1c74:	mov	x9, xzr
    1c78:	mov	x10, xzr
    1c7c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1c80:	mov	w11, #0x7                   	// #7
    1c84:	stur	x8, [x29, #-24]
    1c88:	add	x0, x0, #0x0
    1c8c:	mov	w8, #0x4                   	// #4
    1c90:	mov	w1, #0x4                   	// #4
    1c94:	mov	x2, xzr
    1c98:	stp	x10, x9, [x29, #-40]
    1c9c:	stp	xzr, xzr, [sp, #96]
    1ca0:	str	xzr, [sp, #88]
    1ca4:	sturb	w11, [x29, #-48]
    1ca8:	stp	xzr, x0, [sp, #32]
    1cac:	str	x8, [sp, #48]
    1cb0:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
    1cb4:	tbz	w0, #0, 1dac <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xca4>
    1cb8:	sub	x0, x29, #0x50
    1cbc:	add	x1, sp, #0x20
    1cc0:	bl	0 <_ZN4llvm4json6ObjectixEONS0_9ObjectKeyE>
    1cc4:	mov	x20, x0
    1cc8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1ccc:	sub	x1, x29, #0x30
    1cd0:	mov	x0, x20
    1cd4:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
    1cd8:	ldr	x20, [sp, #32]
    1cdc:	cbz	x20, 1cfc <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xbf4>
    1ce0:	mov	x8, x20
    1ce4:	ldr	x0, [x8], #16
    1ce8:	cmp	x0, x8
    1cec:	b.eq	1cf4 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xbec>  // b.none
    1cf0:	bl	0 <_ZdlPv>
    1cf4:	mov	x0, x20
    1cf8:	bl	0 <_ZdlPv>
    1cfc:	sub	x0, x29, #0x30
    1d00:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1d04:	mov	w8, #0x6                   	// #6
    1d08:	ldp	x10, x11, [x29, #-80]
    1d0c:	ldur	x12, [x29, #-64]
    1d10:	strb	w8, [x19]
    1d14:	ldur	w8, [x29, #-56]
    1d18:	mov	w9, #0x1                   	// #1
    1d1c:	stp	x9, x11, [x19, #8]
    1d20:	str	x12, [x19, #24]
    1d24:	str	w8, [x19, #32]
    1d28:	ldp	x19, x20, [sp, #88]
    1d2c:	add	x8, x10, #0x1
    1d30:	stp	x8, xzr, [x29, #-80]
    1d34:	stur	xzr, [x29, #-64]
    1d38:	cmp	x19, x20
    1d3c:	stur	wzr, [x29, #-56]
    1d40:	b.eq	1d5c <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc54>  // b.none
    1d44:	mov	x0, x19
    1d48:	bl	0 <_ZN4llvm4json5Value7destroyEv>
    1d4c:	add	x19, x19, #0x28
    1d50:	cmp	x20, x19
    1d54:	b.ne	1d44 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0xc3c>  // b.any
    1d58:	ldr	x19, [sp, #88]
    1d5c:	cbz	x19, 1600 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4f8>
    1d60:	mov	x0, x19
    1d64:	bl	0 <_ZdlPv>
    1d68:	b	1600 <_ZN12_GLOBAL__N_111JSONEmitter13translateInitERKN4llvm4InitE+0x4f8>
    1d6c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d70:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d74:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d78:	add	x0, x0, #0x0
    1d7c:	add	x1, x1, #0x0
    1d80:	add	x3, x3, #0x0
    1d84:	mov	w2, #0x22e                 	// #558
    1d88:	bl	0 <__assert_fail>
    1d8c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d90:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d94:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1d98:	add	x0, x0, #0x0
    1d9c:	add	x1, x1, #0x0
    1da0:	add	x3, x3, #0x0
    1da4:	mov	w2, #0x144                 	// #324
    1da8:	bl	0 <__assert_fail>
    1dac:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1db0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1db4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1db8:	add	x0, x0, #0x0
    1dbc:	add	x1, x1, #0x0
    1dc0:	add	x3, x3, #0x0
    1dc4:	mov	w2, #0x1f8                 	// #504
    1dc8:	bl	0 <__assert_fail>
    1dcc:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dd0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dd4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1dd8:	add	x0, x0, #0x0
    1ddc:	add	x1, x1, #0x0
    1de0:	add	x3, x3, #0x0
    1de4:	mov	w2, #0x138                 	// #312
    1de8:	bl	0 <__assert_fail>
    1dec:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1df0:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1df4:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1df8:	add	x0, x0, #0x0
    1dfc:	add	x1, x1, #0x0
    1e00:	add	x3, x3, #0x0
    1e04:	mov	w2, #0x545                 	// #1349
    1e08:	bl	0 <__assert_fail>
    1e0c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e10:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e14:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e18:	add	x0, x0, #0x0
    1e1c:	add	x1, x1, #0x0
    1e20:	add	x3, x3, #0x0
    1e24:	mov	w2, #0x69                  	// #105
    1e28:	bl	0 <__assert_fail>
    1e2c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e30:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e34:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e38:	add	x0, x0, #0x0
    1e3c:	add	x1, x1, #0x0
    1e40:	add	x3, x3, #0x0
    1e44:	mov	w2, #0x108                 	// #264
    1e48:	bl	0 <__assert_fail>
    1e4c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e50:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e54:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e58:	add	x0, x0, #0x0
    1e5c:	add	x1, x1, #0x0
    1e60:	add	x3, x3, #0x0
    1e64:	mov	w2, #0x69                  	// #105
    1e68:	bl	0 <__assert_fail>
    1e6c:	adrp	x0, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e70:	adrp	x1, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e74:	adrp	x3, 0 <_ZN4llvm8EmitJSONERNS_12RecordKeeperERNS_11raw_ostreamE>
    1e78:	add	x0, x0, #0x0
    1e7c:	add	x1, x1, #0x0
    1e80:	add	x3, x3, #0x0
    1e84:	mov	w2, #0x75                  	// #117
    1e88:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0xec>

Disassembly of section .text._ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_:

0000000000000000 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x19, x0
  18:	add	x0, x0, #0x10
  1c:	str	x0, [x19]
  20:	ldp	x21, x22, [x1]
  24:	mov	x20, x1
  28:	cbnz	x21, 30 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x30>
  2c:	cbnz	x22, 124 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x124>
  30:	cmp	x22, #0x10
  34:	str	x22, [sp, #8]
  38:	b.cc	58 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x58>  // b.lo, b.ul, b.last
  3c:	add	x1, sp, #0x8
  40:	mov	x0, x19
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	str	x0, [x19]
  50:	ldr	x8, [sp, #8]
  54:	str	x8, [x19, #16]
  58:	cbz	x22, 7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x7c>
  5c:	cmp	x22, #0x1
  60:	b.ne	70 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x70>  // b.any
  64:	ldrb	w8, [x21]
  68:	strb	w8, [x0]
  6c:	b	7c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x7c>
  70:	mov	x1, x21
  74:	mov	x2, x22
  78:	bl	0 <memcpy>
  7c:	ldr	x8, [sp, #8]
  80:	ldr	x9, [x19]
  84:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  88:	movk	x10, #0xcccd
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x9, x8, [x20, #32]
  98:	stp	xzr, xzr, [x19, #32]
  9c:	str	xzr, [x19, #48]
  a0:	subs	x0, x8, x9
  a4:	asr	x8, x0, #3
  a8:	mul	x22, x8, x10
  ac:	b.eq	d0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xd0>  // b.none
  b0:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  b4:	movk	x8, #0x3334
  b8:	movk	x8, #0x333, lsl #48
  bc:	cmp	x22, x8
  c0:	b.cs	130 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x130>  // b.hs, b.nlast
  c4:	bl	0 <_Znwm>
  c8:	mov	x21, x0
  cc:	b	d4 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xd4>
  d0:	mov	x21, xzr
  d4:	mov	w8, #0x28                  	// #40
  d8:	madd	x8, x22, x8, x21
  dc:	stp	x21, x21, [x19, #32]
  e0:	str	x8, [x19, #48]
  e4:	ldp	x22, x20, [x20, #32]
  e8:	cmp	x22, x20
  ec:	b.eq	10c <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0x10c>  // b.none
  f0:	mov	x0, x21
  f4:	mov	x1, x22
  f8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  fc:	add	x22, x22, #0x28
 100:	cmp	x20, x22
 104:	add	x21, x21, #0x28
 108:	b.ne	f0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_+0xf0>  // b.any
 10c:	str	x21, [x19, #40]
 110:	ldp	x20, x19, [sp, #48]
 114:	ldp	x22, x21, [sp, #32]
 118:	ldp	x29, x30, [sp, #16]
 11c:	add	sp, sp, #0x40
 120:	ret
 124:	adrp	x0, 0 <_ZNSt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN4llvm4json5ArrayEEC2ERKSA_>
 128:	add	x0, x0, #0x0
 12c:	bl	0 <_ZSt19__throw_logic_errorPKc>
 130:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x58                  	// #88
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x4c>
  48:	cbnz	x24, 1c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1c0>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x24, x19
  b0:	mov	x0, x20
  b4:	str	x8, [x19, #40]
  b8:	strb	wzr, [x9, x8]
  bc:	str	xzr, [x24, #64]!
  c0:	mov	x1, x22
  c4:	mov	x2, x21
  c8:	stp	xzr, xzr, [x24, #8]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x134>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	184 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x184>
  e8:	ldp	x20, x22, [x19, #64]
  ec:	cmp	x20, x22
  f0:	b.eq	10c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x10c>  // b.none
  f4:	mov	x0, x20
  f8:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  fc:	add	x20, x20, #0x28
 100:	cmp	x22, x20
 104:	b.ne	f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xf4>  // b.any
 108:	ldr	x20, [x24]
 10c:	cbz	x20, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x118>
 110:	mov	x0, x20
 114:	bl	0 <_ZdlPv>
 118:	ldr	x0, [x21]
 11c:	cmp	x0, x25
 120:	b.eq	128 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x128>  // b.none
 124:	bl	0 <_ZdlPv>
 128:	mov	x0, x19
 12c:	bl	0 <_ZdlPv>
 130:	b	1a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x1a4>
 134:	add	x8, x20, #0x8
 138:	cmp	x8, x22
 13c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0xe0>  // b.none
 140:	ldr	x8, [x19, #40]
 144:	ldr	x9, [x22, #40]
 148:	subs	x23, x8, x9
 14c:	csel	x2, x9, x8, hi  // hi = pmore
 150:	cbz	x2, 164 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x164>
 154:	ldr	x1, [x22, #32]
 158:	ldr	x0, [x21]
 15c:	bl	0 <memcmp>
 160:	cbnz	w0, 180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x180>
 164:	mov	w0, #0x7fffffff            	// #2147483647
 168:	cmp	x23, x0
 16c:	b.gt	180 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x180>
 170:	mov	x8, #0xffffffff80000000    	// #-2147483648
 174:	cmp	x23, x8
 178:	mov	w8, #0x80000000            	// #-2147483648
 17c:	csel	w0, w23, w8, gt
 180:	lsr	w0, w0, #31
 184:	add	x3, x20, #0x8
 188:	mov	x1, x19
 18c:	mov	x2, x22
 190:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 194:	ldr	x8, [x20, #40]
 198:	mov	x23, x19
 19c:	add	x8, x8, #0x1
 1a0:	str	x8, [x20, #40]
 1a4:	mov	x0, x23
 1a8:	ldp	x20, x19, [sp, #64]
 1ac:	ldp	x22, x21, [sp, #48]
 1b0:	ldp	x24, x23, [sp, #32]
 1b4:	ldr	x25, [sp, #16]
 1b8:	ldp	x29, x30, [sp], #80
 1bc:	ret
 1c0:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
 1c4:	add	x0, x0, #0x0
 1c8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xcccd
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x3333333333333333    	// #3689348814741910323
  44:	csinc	x11, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x333, lsl #48
  4c:	adds	x9, x11, x9
  50:	cset	w11, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w12, hi  // hi = pmore
  5c:	orr	w11, w11, w12
  60:	sub	x12, x1, x20
  64:	cmp	w11, #0x0
  68:	csel	x26, x8, x9, ne  // ne = any
  6c:	asr	x8, x12, #3
  70:	mov	x23, x2
  74:	mov	x19, x0
  78:	mov	x22, x1
  7c:	mul	x24, x8, x10
  80:	cbz	x26, 98 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  84:	add	x8, x26, x26, lsl #2
  88:	lsl	x0, x8, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x21, x0
  94:	b	9c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>
  98:	mov	x21, xzr
  9c:	mov	w8, #0x28                  	// #40
  a0:	madd	x0, x24, x8, x21
  a4:	mov	x1, x23
  a8:	bl	0 <_ZN4llvm4json5Value8moveFromEOKS1_>
  ac:	cmp	x20, x22
  b0:	mov	x23, x21
  b4:	b.eq	f0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.none
  b8:	mov	x23, x21
  bc:	mov	x24, x20
  c0:	mov	x0, x23
  c4:	mov	x1, x24
  c8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  cc:	add	x24, x24, #0x28
  d0:	cmp	x22, x24
  d4:	add	x23, x23, #0x28
  d8:	b.ne	c0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  dc:	b	f0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>
  e0:	mov	x0, x23
  e4:	mov	x1, x22
  e8:	bl	0 <_ZN4llvm4json5Value8copyFromERKS1_>
  ec:	add	x22, x22, #0x28
  f0:	cmp	x25, x22
  f4:	add	x23, x23, #0x28
  f8:	b.ne	e0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
  fc:	cmp	x20, x25
 100:	b.eq	11c <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 104:	mov	x22, x20
 108:	mov	x0, x22
 10c:	bl	0 <_ZN4llvm4json5Value7destroyEv>
 110:	add	x22, x22, #0x28
 114:	cmp	x25, x22
 118:	b.ne	108 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x28                  	// #40
 12c:	madd	x8, x26, x8, x21
 130:	stp	x21, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm4json5ValueESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	cbz	w8, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>
  18:	mov	x19, x0
  1c:	mov	x0, #0xffffffffffffffff    	// #-1
  20:	mov	x1, xzr
  24:	mov	x2, xzr
  28:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  2c:	tbz	w0, #0, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xb8>
  30:	mov	x0, #0xfffffffffffffffe    	// #-2
  34:	mov	x1, xzr
  38:	mov	x2, xzr
  3c:	bl	0 <_ZN4llvm4json6isUTF8ENS_9StringRefEPm>
  40:	tbz	w0, #0, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xb8>
  44:	ldr	w8, [x19, #24]
  48:	cbz	w8, a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>
  4c:	ldr	x9, [x19, #8]
  50:	lsl	x21, x8, #6
  54:	add	x19, x9, #0x18
  58:	b	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x74>
  5c:	mov	x0, x20
  60:	bl	0 <_ZdlPv>
  64:	stur	xzr, [x19, #-24]
  68:	subs	x21, x21, #0x40
  6c:	add	x19, x19, #0x40
  70:	b.eq	a8 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0xa8>  // b.none
  74:	ldur	x8, [x19, #-16]
  78:	cmn	x8, #0x3
  7c:	b.hi	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x88>  // b.pmore
  80:	mov	x0, x19
  84:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  88:	ldur	x20, [x19, #-24]
  8c:	cbz	x20, 64 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x64>
  90:	mov	x8, x20
  94:	ldr	x0, [x8], #16
  98:	cmp	x0, x8
  9c:	b.eq	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x5c>  // b.none
  a0:	bl	0 <_ZdlPv>
  a4:	b	5c <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv+0x5c>
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldr	x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  bc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  c0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapINS_4json9ObjectKeyENS2_5ValueENS_12DenseMapInfoINS_9StringRefEEENS_6detail12DenseMapPairIS3_S4_EEEES3_S4_S7_SA_E10destroyAllEv>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x1f8                 	// #504
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x8c>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	b	34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x34>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	mov	x20, x22
  30:	cbz	x22, 8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x8c>
  34:	ldr	x1, [x20, #24]
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  40:	ldp	x21, x23, [x20, #64]
  44:	ldr	x22, [x20, #16]
  48:	cmp	x21, x23
  4c:	b.eq	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x68>  // b.none
  50:	mov	x0, x21
  54:	bl	0 <_ZN4llvm4json5Value7destroyEv>
  58:	add	x21, x21, #0x28
  5c:	cmp	x23, x21
  60:	b.ne	50 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x50>  // b.any
  64:	ldr	x21, [x20, #64]
  68:	cbz	x21, 74 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x74>
  6c:	mov	x0, x21
  70:	bl	0 <_ZdlPv>
  74:	ldr	x0, [x20, #32]
  78:	add	x8, x20, #0x30
  7c:	cmp	x0, x8
  80:	b.eq	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x24>  // b.none
  84:	bl	0 <_ZdlPv>
  88:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N4llvm4json5ArrayEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x24>
  8c:	ldp	x20, x19, [sp, #48]
  90:	ldp	x22, x21, [sp, #32]
  94:	ldr	x23, [sp, #16]
  98:	ldp	x29, x30, [sp], #64
  9c:	ret

Main.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x28, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	sp, sp, #0x410
  1c:	add	x20, sp, #0x210
  20:	mov	x21, x1
  24:	mov	x19, x0
  28:	add	x8, x20, #0x8
  2c:	add	x9, x20, #0x38
  30:	add	x0, x20, #0x60
  34:	mov	w1, #0x6                   	// #6
  38:	str	wzr, [sp, #536]
  3c:	str	wzr, [sp, #584]
  40:	str	xzr, [sp, #544]
  44:	str	x8, [sp, #552]
  48:	str	x8, [sp, #560]
  4c:	str	xzr, [sp, #568]
  50:	str	xzr, [sp, #592]
  54:	str	x9, [sp, #600]
  58:	str	x9, [sp, #608]
  5c:	str	xzr, [sp, #616]
  60:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
  64:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
  68:	ldr	x8, [x8]
  6c:	adrp	x23, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
  70:	add	x9, x20, #0x80
  74:	mov	w10, #0x104                 	// #260
  78:	add	x8, x8, #0x10
  7c:	add	x23, x23, #0x0
  80:	str	x8, [sp, #624]
  84:	add	x8, sp, #0x1f8
  88:	add	x0, sp, #0x80
  8c:	mov	x1, #0xffffffffffffffff    	// #-1
  90:	mov	w2, #0x1                   	// #1
  94:	str	wzr, [sp, #656]
  98:	str	wzr, [sp, #696]
  9c:	str	xzr, [sp, #664]
  a0:	str	x9, [sp, #672]
  a4:	str	x9, [sp, #680]
  a8:	str	xzr, [sp, #688]
  ac:	strh	w10, [sp, #144]
  b0:	stp	x23, xzr, [sp, #128]
  b4:	bl	0 <_ZN4llvm12MemoryBuffer14getFileOrSTDINERKNS_5TwineElb>
  b8:	ldrb	w8, [sp, #520]
  bc:	tbnz	w8, #0, 100 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x100>
  c0:	adrp	x20, 0 <_ZN4llvm6SrcMgrE>
  c4:	ldr	x20, [x20]
  c8:	ldr	x10, [sp, #504]
  cc:	str	xzr, [sp, #504]
  d0:	stp	xzr, xzr, [sp, #136]
  d4:	ldp	x8, x9, [x20, #8]
  d8:	str	x10, [sp, #128]
  dc:	cmp	x8, x9
  e0:	b.eq	1b4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1b4>  // b.none
  e4:	add	x1, sp, #0x80
  e8:	mov	x0, x8
  ec:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  f0:	ldr	x8, [x20, #8]
  f4:	add	x8, x8, #0x18
  f8:	str	x8, [x20, #8]
  fc:	b	1c8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x1c8>
 100:	ldr	w20, [sp, #504]
 104:	cbz	w20, ccc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xccc>
 108:	sub	x8, x29, #0xd0
 10c:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 110:	add	x22, x8, #0x10
 114:	ldr	x8, [x9]
 118:	ldr	x21, [sp, #512]
 11c:	sub	x0, x29, #0xd0
 120:	stp	x22, xzr, [x29, #-208]
 124:	add	x1, x8, #0x1b
 128:	sturb	wzr, [x29, #-192]
 12c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 130:	ldur	x8, [x29, #-200]
 134:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
 138:	sub	x8, x24, x8
 13c:	cmp	x8, #0x1a
 140:	b.ls	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.plast
 144:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 148:	add	x1, x1, #0x0
 14c:	sub	x0, x29, #0xd0
 150:	mov	w2, #0x1b                  	// #27
 154:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 158:	ldp	x1, x2, [x23]
 15c:	sub	x0, x29, #0xd0
 160:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 164:	ldur	x8, [x29, #-200]
 168:	sub	x8, x24, x8
 16c:	cmp	x8, #0x2
 170:	b.ls	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.plast
 174:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 178:	add	x1, x1, #0x0
 17c:	sub	x0, x29, #0xd0
 180:	mov	w2, #0x3                   	// #3
 184:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 188:	add	x8, sp, #0x30
 18c:	add	x23, x8, #0x10
 190:	str	x23, [sp, #48]
 194:	mov	x8, x0
 198:	ldr	x9, [x8], #16
 19c:	cmp	x9, x8
 1a0:	b.eq	388 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x388>  // b.none
 1a4:	str	x9, [sp, #48]
 1a8:	ldr	x9, [x0, #16]
 1ac:	str	x9, [sp, #64]
 1b0:	b	390 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x390>
 1b4:	adrp	x0, 0 <_ZN4llvm6SrcMgrE>
 1b8:	ldr	x0, [x0]
 1bc:	add	x2, sp, #0x80
 1c0:	mov	x1, x8
 1c4:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1c8:	add	x0, sp, #0x80
 1cc:	add	x23, sp, #0x80
 1d0:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 1d4:	adrp	x22, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1d8:	add	x22, x22, #0x0
 1dc:	add	x0, x20, #0x18
 1e0:	mov	x1, x22
 1e4:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 1e8:	ldp	x2, x8, [x22, #224]
 1ec:	add	x0, sp, #0x80
 1f0:	mov	x1, x20
 1f4:	sub	x8, x8, x2
 1f8:	asr	x3, x8, #5
 1fc:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
 200:	adrp	x10, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 204:	ldr	d0, [x10]
 208:	add	x8, x23, #0xe8
 20c:	add	x9, x23, #0x138
 210:	add	x10, sp, #0x210
 214:	add	x0, sp, #0x80
 218:	stp	xzr, xzr, [sp, #328]
 21c:	str	xzr, [sp, #344]
 220:	str	wzr, [sp, #360]
 224:	stp	xzr, xzr, [sp, #400]
 228:	stp	xzr, xzr, [sp, #456]
 22c:	stp	xzr, x8, [sp, #368]
 230:	stp	x8, xzr, [sp, #384]
 234:	stp	xzr, x9, [sp, #416]
 238:	str	d0, [sp, #432]
 23c:	str	x10, [sp, #472]
 240:	bl	0 <_ZN4llvm8TGParser9ParseFileEv>
 244:	mov	w20, #0x1                   	// #1
 248:	tbnz	w0, #0, c28 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc28>
 24c:	strb	wzr, [sp, #112]
 250:	str	w20, [sp, #80]
 254:	stp	xzr, xzr, [sp, #64]
 258:	adrp	x9, 0 <_ZTVN4llvm18raw_string_ostreamE>
 25c:	ldr	x9, [x9]
 260:	add	x8, sp, #0x60
 264:	add	x22, x8, #0x10
 268:	add	x0, sp, #0x30
 26c:	add	x9, x9, #0x10
 270:	add	x1, sp, #0x210
 274:	stp	x22, xzr, [sp, #96]
 278:	stp	x9, xzr, [sp, #48]
 27c:	str	x8, [sp, #88]
 280:	blr	x21
 284:	tbnz	w0, #0, c10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc10>
 288:	adrp	x23, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 28c:	ldr	x8, [x23]
 290:	cbz	x8, 6f0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6f0>
 294:	adrp	x20, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 298:	add	x20, x20, #0x0
 29c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 2a0:	add	x1, x1, #0x0
 2a4:	mov	x0, x20
 2a8:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
 2ac:	cbz	w0, 548 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x548>
 2b0:	stur	wzr, [x29, #-40]
 2b4:	bl	0 <_ZNSt3_V215system_categoryEv>
 2b8:	adrp	x21, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 2bc:	add	x21, x21, #0x0
 2c0:	ldp	x1, x2, [x21]
 2c4:	stur	x0, [x29, #-32]
 2c8:	sub	x0, x29, #0x98
 2cc:	sub	x3, x29, #0x28
 2d0:	mov	w4, wzr
 2d4:	sub	x24, x29, #0x98
 2d8:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 2dc:	ldur	w8, [x29, #-40]
 2e0:	cbz	w8, 570 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x570>
 2e4:	ldr	x9, [x23]
 2e8:	add	x8, sp, #0x2e0
 2ec:	add	x20, x8, #0x10
 2f0:	add	x0, sp, #0x2e0
 2f4:	add	x1, x9, #0xe
 2f8:	str	x20, [sp, #736]
 2fc:	str	xzr, [sp, #744]
 300:	strb	wzr, [sp, #752]
 304:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 308:	ldr	x8, [sp, #744]
 30c:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
 310:	sub	x8, x23, x8
 314:	cmp	x8, #0xd
 318:	b.ls	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.plast
 31c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 320:	add	x1, x1, #0x0
 324:	add	x0, sp, #0x2e0
 328:	mov	w2, #0xe                   	// #14
 32c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 330:	ldp	x1, x2, [x21]
 334:	add	x0, sp, #0x2e0
 338:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 33c:	ldr	x8, [sp, #744]
 340:	cmp	x8, x23
 344:	b.eq	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.none
 348:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 34c:	add	x1, x1, #0x0
 350:	add	x0, sp, #0x2e0
 354:	mov	w2, #0x1                   	// #1
 358:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 35c:	add	x8, sp, #0x300
 360:	add	x21, x8, #0x10
 364:	str	x21, [sp, #768]
 368:	mov	x8, x0
 36c:	ldr	x9, [x8], #16
 370:	cmp	x9, x8
 374:	b.eq	5a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5a0>  // b.none
 378:	str	x9, [sp, #768]
 37c:	ldr	x9, [x0, #16]
 380:	str	x9, [sp, #784]
 384:	b	5a8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x5a8>
 388:	ldr	q0, [x9]
 38c:	str	q0, [x23]
 390:	ldr	x9, [x0, #8]
 394:	mov	w1, w20
 398:	sub	x24, x29, #0xf0
 39c:	str	x9, [sp, #56]
 3a0:	stp	x8, xzr, [x0]
 3a4:	strb	wzr, [x0, #16]
 3a8:	ldr	x8, [x21]
 3ac:	mov	x0, x21
 3b0:	ldr	x9, [x8, #32]
 3b4:	sub	x8, x29, #0xf0
 3b8:	blr	x9
 3bc:	ldp	x3, x4, [sp, #48]
 3c0:	ldp	x1, x2, [x29, #-240]
 3c4:	ldr	x9, [sp, #64]
 3c8:	mov	w10, #0xf                   	// #15
 3cc:	cmp	x3, x23
 3d0:	add	x8, x2, x4
 3d4:	csel	x9, x10, x9, eq  // eq = none
 3d8:	cmp	x8, x9
 3dc:	b.ls	3fc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x3fc>  // b.plast
 3e0:	ldur	x9, [x29, #-224]
 3e4:	add	x10, x24, #0x10
 3e8:	cmp	x1, x10
 3ec:	mov	w10, #0xf                   	// #15
 3f0:	csel	x9, x10, x9, eq  // eq = none
 3f4:	cmp	x8, x9
 3f8:	b.ls	408 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x408>  // b.plast
 3fc:	add	x0, sp, #0x30
 400:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 404:	b	418 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x418>
 408:	sub	x0, x29, #0xf0
 40c:	mov	x1, xzr
 410:	mov	x2, xzr
 414:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 418:	sub	x8, x29, #0x98
 41c:	add	x20, x8, #0x10
 420:	stur	x20, [x29, #-152]
 424:	mov	x8, x0
 428:	ldr	x9, [x8], #16
 42c:	cmp	x9, x8
 430:	b.eq	444 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x444>  // b.none
 434:	stur	x9, [x29, #-152]
 438:	ldr	x9, [x0, #16]
 43c:	stur	x9, [x29, #-136]
 440:	b	44c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x44c>
 444:	ldr	q0, [x9]
 448:	str	q0, [x20]
 44c:	ldr	x9, [x0, #8]
 450:	stur	x9, [x29, #-144]
 454:	stp	x8, xzr, [x0]
 458:	strb	wzr, [x0, #16]
 45c:	ldur	x8, [x29, #-144]
 460:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 464:	cmp	x8, x9
 468:	b.eq	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.none
 46c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 470:	add	x1, x1, #0x0
 474:	sub	x0, x29, #0x98
 478:	mov	w2, #0x1                   	// #1
 47c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 480:	add	x8, sp, #0x80
 484:	add	x21, x8, #0x10
 488:	str	x21, [sp, #128]
 48c:	mov	x8, x0
 490:	ldr	x9, [x8], #16
 494:	cmp	x9, x8
 498:	b.eq	4ac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4ac>  // b.none
 49c:	str	x9, [sp, #128]
 4a0:	ldr	x9, [x0, #16]
 4a4:	str	x9, [sp, #144]
 4a8:	b	4b4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4b4>
 4ac:	ldr	q0, [x9]
 4b0:	str	q0, [x21]
 4b4:	ldr	x9, [x0, #8]
 4b8:	mov	w10, #0x104                 	// #260
 4bc:	add	x11, sp, #0x80
 4c0:	add	x1, sp, #0x1e0
 4c4:	str	x9, [sp, #136]
 4c8:	stp	x8, xzr, [x0]
 4cc:	strb	wzr, [x0, #16]
 4d0:	mov	x0, x19
 4d4:	strh	w10, [sp, #496]
 4d8:	stp	x11, xzr, [sp, #480]
 4dc:	bl	cec <_ZL11reportErrorPKcN4llvm5TwineE>
 4e0:	ldr	x0, [sp, #128]
 4e4:	cmp	x0, x21
 4e8:	b.eq	4f0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x4f0>  // b.none
 4ec:	bl	0 <_ZdlPv>
 4f0:	ldur	x0, [x29, #-152]
 4f4:	cmp	x0, x20
 4f8:	b.eq	500 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x500>  // b.none
 4fc:	bl	0 <_ZdlPv>
 500:	ldur	x0, [x29, #-240]
 504:	sub	x8, x29, #0xf0
 508:	add	x8, x8, #0x10
 50c:	cmp	x0, x8
 510:	b.eq	518 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x518>  // b.none
 514:	bl	0 <_ZdlPv>
 518:	ldr	x0, [sp, #48]
 51c:	cmp	x0, x23
 520:	b.eq	528 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x528>  // b.none
 524:	bl	0 <_ZdlPv>
 528:	ldur	x0, [x29, #-208]
 52c:	cmp	x0, x22
 530:	b.eq	538 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x538>  // b.none
 534:	bl	0 <_ZdlPv>
 538:	mov	w20, #0x1                   	// #1
 53c:	ldrb	w8, [sp, #520]
 540:	tbz	w8, #0, c38 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc38>
 544:	b	c50 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc50>
 548:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 54c:	add	x8, x8, #0x0
 550:	mov	w9, #0x103                 	// #259
 554:	sub	x1, x29, #0x18
 558:	mov	x0, x19
 55c:	stp	x8, xzr, [x29, #-24]
 560:	sturh	w9, [x29, #-8]
 564:	bl	cec <_ZL11reportErrorPKcN4llvm5TwineE>
 568:	mov	w20, #0x1                   	// #1
 56c:	b	c10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc10>
 570:	ldp	x1, x2, [x20]
 574:	add	x20, x24, #0x28
 578:	mov	x0, x20
 57c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 580:	ldp	x9, x8, [x0, #16]
 584:	cmp	x9, x8
 588:	b.ne	628 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x628>  // b.any
 58c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 590:	add	x1, x1, #0x0
 594:	mov	w2, #0x1                   	// #1
 598:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 59c:	b	63c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x63c>
 5a0:	ldr	q0, [x9]
 5a4:	str	q0, [x21]
 5a8:	ldr	x9, [x0, #8]
 5ac:	add	x23, sp, #0x2c0
 5b0:	str	x9, [sp, #776]
 5b4:	stp	x8, xzr, [x0]
 5b8:	strb	wzr, [x0, #16]
 5bc:	ldur	x0, [x29, #-32]
 5c0:	ldur	w1, [x29, #-40]
 5c4:	ldr	x8, [x0]
 5c8:	ldr	x9, [x8, #32]
 5cc:	add	x8, sp, #0x2c0
 5d0:	blr	x9
 5d4:	ldr	x3, [sp, #768]
 5d8:	ldr	x2, [sp, #712]
 5dc:	ldr	x4, [sp, #776]
 5e0:	ldr	x9, [sp, #784]
 5e4:	ldr	x1, [sp, #704]
 5e8:	cmp	x3, x21
 5ec:	mov	w10, #0xf                   	// #15
 5f0:	add	x8, x2, x4
 5f4:	csel	x9, x10, x9, eq  // eq = none
 5f8:	cmp	x8, x9
 5fc:	b.ls	61c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x61c>  // b.plast
 600:	ldr	x9, [sp, #720]
 604:	add	x10, x23, #0x10
 608:	cmp	x1, x10
 60c:	mov	w10, #0xf                   	// #15
 610:	csel	x9, x10, x9, eq  // eq = none
 614:	cmp	x8, x9
 618:	b.ls	97c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x97c>  // b.plast
 61c:	add	x0, sp, #0x300
 620:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 624:	b	98c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x98c>
 628:	mov	w9, #0x3a                  	// #58
 62c:	strb	w9, [x8]
 630:	ldr	x8, [x0, #24]
 634:	add	x8, x8, #0x1
 638:	str	x8, [x0, #24]
 63c:	ldr	x21, [sp, #248]
 640:	add	x8, sp, #0x80
 644:	add	x23, x8, #0x68
 648:	cmp	x21, x23
 64c:	b.eq	6a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6a0>  // b.none
 650:	mov	w24, #0x20                  	// #32
 654:	b	684 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x684>
 658:	add	x9, x8, #0x1
 65c:	mov	x0, x20
 660:	stur	x9, [x29, #-88]
 664:	strb	w24, [x8]
 668:	ldp	x1, x2, [x21, #32]
 66c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 670:	mov	x0, x21
 674:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
 678:	mov	x21, x0
 67c:	cmp	x0, x23
 680:	b.eq	6a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6a0>  // b.none
 684:	ldp	x9, x8, [x29, #-96]
 688:	cmp	x8, x9
 68c:	b.cc	658 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x658>  // b.lo, b.ul, b.last
 690:	mov	w1, #0x20                  	// #32
 694:	mov	x0, x20
 698:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 69c:	b	668 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x668>
 6a0:	ldp	x9, x8, [x29, #-96]
 6a4:	cmp	x9, x8
 6a8:	b.ne	6c4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6c4>  // b.any
 6ac:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 6b0:	add	x1, x1, #0x0
 6b4:	mov	w2, #0x1                   	// #1
 6b8:	mov	x0, x20
 6bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 6c0:	b	6d8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x6d8>
 6c4:	mov	w9, #0xa                   	// #10
 6c8:	strb	w9, [x8]
 6cc:	ldur	x8, [x29, #-88]
 6d0:	add	x8, x8, #0x1
 6d4:	stur	x8, [x29, #-88]
 6d8:	mov	w8, #0x1                   	// #1
 6dc:	mov	x0, x20
 6e0:	sturb	w8, [x29, #-120]
 6e4:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 6e8:	sub	x0, x29, #0x98
 6ec:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 6f0:	adrp	x8, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 6f4:	ldrb	w8, [x8]
 6f8:	cbz	w8, 7a4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a4>
 6fc:	mov	w8, #0x104                 	// #260
 700:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 704:	add	x9, x9, #0x0
 708:	sturh	w8, [x29, #-192]
 70c:	sub	x8, x29, #0x98
 710:	sub	x0, x29, #0xd0
 714:	mov	x1, #0xffffffffffffffff    	// #-1
 718:	mov	w2, #0x1                   	// #1
 71c:	mov	w3, wzr
 720:	stp	x9, xzr, [x29, #-208]
 724:	bl	0 <_ZN4llvm12MemoryBuffer7getFileERKNS_5TwineElbb>
 728:	ldurb	w8, [x29, #-136]
 72c:	tbnz	w8, #0, 77c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x77c>
 730:	ldur	x8, [x29, #-152]
 734:	ldr	x9, [sp, #72]
 738:	ldr	x10, [sp, #56]
 73c:	ldp	x21, x8, [x8, #8]
 740:	cmp	x9, x10
 744:	sub	x20, x8, x21
 748:	b.eq	754 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x754>  // b.none
 74c:	add	x0, sp, #0x30
 750:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 754:	ldr	x8, [sp, #88]
 758:	ldr	x9, [x8, #8]
 75c:	cmp	x20, x9
 760:	b.ne	77c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x77c>  // b.any
 764:	cbz	x20, 780 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x780>
 768:	ldr	x1, [x8]
 76c:	mov	x0, x21
 770:	mov	x2, x20
 774:	bl	0 <bcmp>
 778:	cbz	w0, cb0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcb0>
 77c:	mov	w20, #0x1                   	// #1
 780:	ldurb	w8, [x29, #-136]
 784:	tbnz	w8, #0, 7a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a0>
 788:	ldur	x0, [x29, #-152]
 78c:	cbz	x0, 79c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x79c>
 790:	ldr	x8, [x0]
 794:	ldr	x8, [x8, #8]
 798:	blr	x8
 79c:	stur	xzr, [x29, #-152]
 7a0:	cbz	w20, c10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc10>
 7a4:	stur	wzr, [x29, #-24]
 7a8:	bl	0 <_ZNSt3_V215system_categoryEv>
 7ac:	adrp	x21, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 7b0:	add	x21, x21, #0x0
 7b4:	ldp	x1, x2, [x21]
 7b8:	stur	x0, [x29, #-16]
 7bc:	sub	x0, x29, #0x98
 7c0:	sub	x3, x29, #0x18
 7c4:	mov	w4, wzr
 7c8:	sub	x20, x29, #0x98
 7cc:	bl	0 <_ZN4llvm14ToolOutputFileC1ENS_9StringRefERSt10error_codeNS_3sys2fs9OpenFlagsE>
 7d0:	ldur	w8, [x29, #-24]
 7d4:	cbz	w8, 880 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x880>
 7d8:	add	x8, sp, #0x2e0
 7dc:	adrp	x9, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 7e0:	add	x20, x8, #0x10
 7e4:	ldr	x8, [x9]
 7e8:	add	x0, sp, #0x2e0
 7ec:	str	x20, [sp, #736]
 7f0:	str	xzr, [sp, #744]
 7f4:	add	x1, x8, #0xe
 7f8:	strb	wzr, [sp, #752]
 7fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
 800:	ldr	x8, [sp, #744]
 804:	mov	x23, #0x3fffffffffffffff    	// #4611686018427387903
 808:	sub	x8, x23, x8
 80c:	cmp	x8, #0xd
 810:	b.ls	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.plast
 814:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 818:	add	x1, x1, #0x0
 81c:	add	x0, sp, #0x2e0
 820:	mov	w2, #0xe                   	// #14
 824:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 828:	ldp	x1, x2, [x21]
 82c:	add	x0, sp, #0x2e0
 830:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 834:	ldr	x8, [sp, #744]
 838:	cmp	x8, x23
 83c:	b.eq	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.none
 840:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 844:	add	x1, x1, #0x0
 848:	add	x0, sp, #0x2e0
 84c:	mov	w2, #0x1                   	// #1
 850:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 854:	add	x8, sp, #0x300
 858:	add	x21, x8, #0x10
 85c:	str	x21, [sp, #768]
 860:	mov	x8, x0
 864:	ldr	x9, [x8], #16
 868:	cmp	x9, x8
 86c:	b.eq	8f4 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8f4>  // b.none
 870:	str	x9, [sp, #768]
 874:	ldr	x9, [x0, #16]
 878:	str	x9, [sp, #784]
 87c:	b	8fc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x8fc>
 880:	ldr	x8, [sp, #72]
 884:	ldr	x9, [sp, #56]
 888:	add	x20, x20, #0x28
 88c:	cmp	x8, x9
 890:	b.eq	89c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x89c>  // b.none
 894:	add	x0, sp, #0x30
 898:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 89c:	ldr	x8, [sp, #88]
 8a0:	mov	x0, x20
 8a4:	ldp	x1, x2, [x8]
 8a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 8ac:	adrp	x8, 0 <_ZN4llvm13ErrorsPrintedE>
 8b0:	ldr	x8, [x8]
 8b4:	ldr	w8, [x8]
 8b8:	cbz	w8, ca0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xca0>
 8bc:	stp	xzr, xzr, [x29, #-208]
 8c0:	stur	w8, [x29, #-208]
 8c4:	ldur	x8, [x29, #-208]
 8c8:	adrp	x10, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 8cc:	mov	w9, #0x109                 	// #265
 8d0:	add	x10, x10, #0x0
 8d4:	mov	w11, #0x309                 	// #777
 8d8:	mov	x1, sp
 8dc:	mov	x0, x19
 8e0:	sturh	w9, [x29, #-192]
 8e4:	stp	x8, x10, [sp]
 8e8:	strh	w11, [sp, #16]
 8ec:	bl	cec <_ZL11reportErrorPKcN4llvm5TwineE>
 8f0:	b	bf8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbf8>
 8f4:	ldr	q0, [x9]
 8f8:	str	q0, [x21]
 8fc:	ldr	x9, [x0, #8]
 900:	add	x23, sp, #0x2c0
 904:	str	x9, [sp, #776]
 908:	stp	x8, xzr, [x0]
 90c:	strb	wzr, [x0, #16]
 910:	ldur	x0, [x29, #-16]
 914:	ldur	w1, [x29, #-24]
 918:	ldr	x8, [x0]
 91c:	ldr	x9, [x8, #32]
 920:	add	x8, sp, #0x2c0
 924:	blr	x9
 928:	ldr	x3, [sp, #768]
 92c:	ldr	x2, [sp, #712]
 930:	ldr	x4, [sp, #776]
 934:	ldr	x9, [sp, #784]
 938:	ldr	x1, [sp, #704]
 93c:	cmp	x3, x21
 940:	mov	w10, #0xf                   	// #15
 944:	add	x8, x2, x4
 948:	csel	x9, x10, x9, eq  // eq = none
 94c:	cmp	x8, x9
 950:	b.ls	970 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x970>  // b.plast
 954:	ldr	x9, [sp, #720]
 958:	add	x10, x23, #0x10
 95c:	cmp	x1, x10
 960:	mov	w10, #0xf                   	// #15
 964:	csel	x9, x10, x9, eq  // eq = none
 968:	cmp	x8, x9
 96c:	b.ls	ac8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xac8>  // b.plast
 970:	add	x0, sp, #0x300
 974:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 978:	b	ad8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xad8>
 97c:	add	x0, sp, #0x2c0
 980:	mov	x1, xzr
 984:	mov	x2, xzr
 988:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 98c:	sub	x8, x29, #0xf0
 990:	add	x23, x8, #0x10
 994:	stur	x23, [x29, #-240]
 998:	mov	x8, x0
 99c:	ldr	x9, [x8], #16
 9a0:	cmp	x9, x8
 9a4:	b.eq	9b8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9b8>  // b.none
 9a8:	stur	x9, [x29, #-240]
 9ac:	ldr	x9, [x0, #16]
 9b0:	stur	x9, [x29, #-224]
 9b4:	b	9c0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x9c0>
 9b8:	ldr	q0, [x9]
 9bc:	str	q0, [x23]
 9c0:	ldr	x9, [x0, #8]
 9c4:	stur	x9, [x29, #-232]
 9c8:	stp	x8, xzr, [x0]
 9cc:	strb	wzr, [x0, #16]
 9d0:	ldur	x8, [x29, #-232]
 9d4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 9d8:	cmp	x8, x9
 9dc:	b.eq	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.none
 9e0:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 9e4:	add	x1, x1, #0x0
 9e8:	sub	x0, x29, #0xf0
 9ec:	mov	w2, #0x1                   	// #1
 9f0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 9f4:	sub	x8, x29, #0xd0
 9f8:	add	x24, x8, #0x10
 9fc:	stur	x24, [x29, #-208]
 a00:	mov	x8, x0
 a04:	ldr	x9, [x8], #16
 a08:	cmp	x9, x8
 a0c:	b.eq	a20 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa20>  // b.none
 a10:	stur	x9, [x29, #-208]
 a14:	ldr	x9, [x0, #16]
 a18:	stur	x9, [x29, #-192]
 a1c:	b	a28 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa28>
 a20:	ldr	q0, [x9]
 a24:	str	q0, [x24]
 a28:	ldr	x9, [x0, #8]
 a2c:	mov	w10, #0x104                 	// #260
 a30:	sub	x11, x29, #0xd0
 a34:	sub	x1, x29, #0xb0
 a38:	stur	x9, [x29, #-200]
 a3c:	stp	x8, xzr, [x0]
 a40:	strb	wzr, [x0, #16]
 a44:	mov	x0, x19
 a48:	sturh	w10, [x29, #-160]
 a4c:	stp	x11, xzr, [x29, #-176]
 a50:	bl	cec <_ZL11reportErrorPKcN4llvm5TwineE>
 a54:	ldur	x0, [x29, #-208]
 a58:	cmp	x0, x24
 a5c:	b.eq	a64 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa64>  // b.none
 a60:	bl	0 <_ZdlPv>
 a64:	ldur	x0, [x29, #-240]
 a68:	cmp	x0, x23
 a6c:	b.eq	a74 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa74>  // b.none
 a70:	bl	0 <_ZdlPv>
 a74:	ldr	x0, [sp, #704]
 a78:	add	x8, sp, #0x2c0
 a7c:	add	x8, x8, #0x10
 a80:	cmp	x0, x8
 a84:	b.eq	a8c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa8c>  // b.none
 a88:	bl	0 <_ZdlPv>
 a8c:	ldr	x0, [sp, #768]
 a90:	cmp	x0, x21
 a94:	b.eq	a9c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xa9c>  // b.none
 a98:	bl	0 <_ZdlPv>
 a9c:	ldr	x0, [sp, #736]
 aa0:	cmp	x0, x20
 aa4:	b.eq	aac <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xaac>  // b.none
 aa8:	bl	0 <_ZdlPv>
 aac:	sub	x8, x29, #0x98
 ab0:	add	x0, x8, #0x28
 ab4:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 ab8:	sub	x0, x29, #0x98
 abc:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 ac0:	mov	w20, #0x1                   	// #1
 ac4:	b	c10 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc10>
 ac8:	add	x0, sp, #0x2c0
 acc:	mov	x1, xzr
 ad0:	mov	x2, xzr
 ad4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 ad8:	sub	x8, x29, #0xf0
 adc:	add	x23, x8, #0x10
 ae0:	stur	x23, [x29, #-240]
 ae4:	mov	x8, x0
 ae8:	ldr	x9, [x8], #16
 aec:	cmp	x9, x8
 af0:	b.eq	b04 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb04>  // b.none
 af4:	stur	x9, [x29, #-240]
 af8:	ldr	x9, [x0, #16]
 afc:	stur	x9, [x29, #-224]
 b00:	b	b0c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb0c>
 b04:	ldr	q0, [x9]
 b08:	str	q0, [x23]
 b0c:	ldr	x9, [x0, #8]
 b10:	stur	x9, [x29, #-232]
 b14:	stp	x8, xzr, [x0]
 b18:	strb	wzr, [x0, #16]
 b1c:	ldur	x8, [x29, #-232]
 b20:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 b24:	cmp	x8, x9
 b28:	b.eq	cc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xcc0>  // b.none
 b2c:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 b30:	add	x1, x1, #0x0
 b34:	sub	x0, x29, #0xf0
 b38:	mov	w2, #0x1                   	// #1
 b3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 b40:	sub	x8, x29, #0xd0
 b44:	add	x24, x8, #0x10
 b48:	stur	x24, [x29, #-208]
 b4c:	mov	x8, x0
 b50:	ldr	x9, [x8], #16
 b54:	cmp	x9, x8
 b58:	b.eq	b6c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb6c>  // b.none
 b5c:	stur	x9, [x29, #-208]
 b60:	ldr	x9, [x0, #16]
 b64:	stur	x9, [x29, #-192]
 b68:	b	b74 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xb74>
 b6c:	ldr	q0, [x9]
 b70:	str	q0, [x24]
 b74:	ldr	x9, [x0, #8]
 b78:	mov	w10, #0x104                 	// #260
 b7c:	sub	x11, x29, #0xd0
 b80:	add	x1, sp, #0x18
 b84:	stur	x9, [x29, #-200]
 b88:	stp	x8, xzr, [x0]
 b8c:	strb	wzr, [x0, #16]
 b90:	mov	x0, x19
 b94:	strh	w10, [sp, #40]
 b98:	stp	x11, xzr, [sp, #24]
 b9c:	bl	cec <_ZL11reportErrorPKcN4llvm5TwineE>
 ba0:	ldur	x0, [x29, #-208]
 ba4:	cmp	x0, x24
 ba8:	b.eq	bb0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbb0>  // b.none
 bac:	bl	0 <_ZdlPv>
 bb0:	ldur	x0, [x29, #-240]
 bb4:	cmp	x0, x23
 bb8:	b.eq	bc0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbc0>  // b.none
 bbc:	bl	0 <_ZdlPv>
 bc0:	ldr	x0, [sp, #704]
 bc4:	add	x8, sp, #0x2c0
 bc8:	add	x8, x8, #0x10
 bcc:	cmp	x0, x8
 bd0:	b.eq	bd8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbd8>  // b.none
 bd4:	bl	0 <_ZdlPv>
 bd8:	ldr	x0, [sp, #768]
 bdc:	cmp	x0, x21
 be0:	b.eq	be8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbe8>  // b.none
 be4:	bl	0 <_ZdlPv>
 be8:	ldr	x0, [sp, #736]
 bec:	cmp	x0, x20
 bf0:	b.eq	bf8 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbf8>  // b.none
 bf4:	bl	0 <_ZdlPv>
 bf8:	mov	w20, #0x1                   	// #1
 bfc:	sub	x8, x29, #0x98
 c00:	add	x0, x8, #0x28
 c04:	bl	0 <_ZN4llvm14raw_fd_ostreamD1Ev>
 c08:	sub	x0, x29, #0x98
 c0c:	bl	0 <_ZN4llvm14ToolOutputFile16CleanupInstallerD1Ev>
 c10:	add	x0, sp, #0x30
 c14:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 c18:	ldr	x0, [sp, #96]
 c1c:	cmp	x0, x22
 c20:	b.eq	c28 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc28>  // b.none
 c24:	bl	0 <_ZdlPv>
 c28:	add	x0, sp, #0x80
 c2c:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c30:	ldrb	w8, [sp, #520]
 c34:	tbnz	w8, #0, c50 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc50>
 c38:	ldr	x0, [sp, #504]
 c3c:	cbz	x0, c4c <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xc4c>
 c40:	ldr	x8, [x0]
 c44:	ldr	x8, [x8, #8]
 c48:	blr	x8
 c4c:	str	xzr, [sp, #504]
 c50:	ldr	x1, [sp, #664]
 c54:	add	x19, sp, #0x210
 c58:	add	x0, x19, #0x78
 c5c:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c60:	add	x0, x19, #0x60
 c64:	bl	0 <_ZN4llvm14FoldingSetBaseD2Ev>
 c68:	ldr	x1, [sp, #592]
 c6c:	add	x0, x19, #0x30
 c70:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c74:	ldr	x1, [sp, #544]
 c78:	add	x0, sp, #0x210
 c7c:	bl	0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 c80:	mov	w0, w20
 c84:	add	sp, sp, #0x410
 c88:	ldp	x20, x19, [sp, #64]
 c8c:	ldp	x22, x21, [sp, #48]
 c90:	ldp	x24, x23, [sp, #32]
 c94:	ldr	x28, [sp, #16]
 c98:	ldp	x29, x30, [sp], #80
 c9c:	ret
 ca0:	mov	w20, wzr
 ca4:	mov	w8, #0x1                   	// #1
 ca8:	sturb	w8, [x29, #-120]
 cac:	b	bfc <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0xbfc>
 cb0:	mov	w20, wzr
 cb4:	ldurb	w8, [x29, #-136]
 cb8:	tbz	w8, #0, 788 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x788>
 cbc:	b	7a0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE+0x7a0>
 cc0:	adrp	x0, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cc4:	add	x0, x0, #0x0
 cc8:	bl	0 <_ZSt20__throw_length_errorPKc>
 ccc:	adrp	x0, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cd0:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cd4:	adrp	x3, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 cd8:	add	x0, x0, #0x0
 cdc:	add	x1, x1, #0x0
 ce0:	add	x3, x3, #0x0
 ce4:	mov	w2, #0xf3                  	// #243
 ce8:	bl	0 <__assert_fail>

0000000000000cec <_ZL11reportErrorPKcN4llvm5TwineE>:
 cec:	stp	x29, x30, [sp, #-48]!
 cf0:	stp	x22, x21, [sp, #16]
 cf4:	stp	x20, x19, [sp, #32]
 cf8:	mov	x29, sp
 cfc:	mov	x19, x1
 d00:	mov	x21, x0
 d04:	bl	0 <_ZN4llvm4errsEv>
 d08:	mov	x20, x0
 d0c:	cbz	x21, d48 <_ZL11reportErrorPKcN4llvm5TwineE+0x5c>
 d10:	mov	x0, x21
 d14:	bl	0 <strlen>
 d18:	mov	x22, x0
 d1c:	ldp	x8, x0, [x20, #16]
 d20:	sub	x8, x8, x0
 d24:	cmp	x22, x8
 d28:	b.ls	d5c <_ZL11reportErrorPKcN4llvm5TwineE+0x70>  // b.plast
 d2c:	mov	x0, x20
 d30:	mov	x1, x21
 d34:	mov	x2, x22
 d38:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 d3c:	mov	x20, x0
 d40:	ldr	x0, [x0, #24]
 d44:	b	d78 <_ZL11reportErrorPKcN4llvm5TwineE+0x8c>
 d48:	mov	x22, xzr
 d4c:	ldp	x8, x0, [x20, #16]
 d50:	sub	x8, x8, x0
 d54:	cmp	x22, x8
 d58:	b.hi	d2c <_ZL11reportErrorPKcN4llvm5TwineE+0x40>  // b.pmore
 d5c:	cbz	x22, d78 <_ZL11reportErrorPKcN4llvm5TwineE+0x8c>
 d60:	mov	x1, x21
 d64:	mov	x2, x22
 d68:	bl	0 <memcpy>
 d6c:	ldr	x8, [x20, #24]
 d70:	add	x0, x8, x22
 d74:	str	x0, [x20, #24]
 d78:	ldr	x8, [x20, #16]
 d7c:	sub	x8, x8, x0
 d80:	cmp	x8, #0x1
 d84:	b.hi	da4 <_ZL11reportErrorPKcN4llvm5TwineE+0xb8>  // b.pmore
 d88:	adrp	x1, 0 <_ZN4llvm12TableGenMainEPcPFbRNS_11raw_ostreamERNS_12RecordKeeperEE>
 d8c:	add	x1, x1, #0x0
 d90:	mov	w2, #0x2                   	// #2
 d94:	mov	x0, x20
 d98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 d9c:	mov	x20, x0
 da0:	b	db8 <_ZL11reportErrorPKcN4llvm5TwineE+0xcc>
 da4:	mov	w8, #0x203a                	// #8250
 da8:	strh	w8, [x0]
 dac:	ldr	x8, [x20, #24]
 db0:	add	x8, x8, #0x2
 db4:	str	x8, [x20, #24]
 db8:	mov	x0, x19
 dbc:	mov	x1, x20
 dc0:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 dc4:	bl	0 <_ZN4llvm4errsEv>
 dc8:	ldr	x8, [x0, #24]
 dcc:	ldr	x9, [x0, #8]
 dd0:	cmp	x8, x9
 dd4:	b.eq	de8 <_ZL11reportErrorPKcN4llvm5TwineE+0xfc>  // b.none
 dd8:	ldp	x20, x19, [sp, #32]
 ddc:	ldp	x22, x21, [sp, #16]
 de0:	ldp	x29, x30, [sp], #48
 de4:	b	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 de8:	ldp	x20, x19, [sp, #32]
 dec:	ldp	x22, x21, [sp, #16]
 df0:	ldp	x29, x30, [sp], #48
 df4:	ret

Disassembly of section .text._ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  10:	ldr	x8, [x0, #240]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x38>
  28:	add	x0, x19, #0xe0
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x8, 0 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev>
  3c:	ldr	x0, [x19, #176]
  40:	ldr	x8, [x8]
  44:	add	x9, x19, #0xc0
  48:	cmp	x0, x9
  4c:	add	x8, x8, #0x10
  50:	str	x8, [x19, #168]
  54:	b.eq	5c <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #136]
  60:	add	x8, x19, #0x98
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  74:	ldp	x8, x0, [x19, #96]
  78:	ldr	x9, [x9]
  7c:	cmp	x0, x8
  80:	add	x9, x9, #0x10
  84:	str	x9, [x19]
  88:	b.eq	90 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x8, [x19, #88]
  94:	ldr	x0, [x19, #64]
  98:	add	x9, x19, #0x50
  9c:	add	x8, x8, #0x1
  a0:	cmp	x0, x9
  a4:	str	x8, [x19, #88]
  a8:	b.eq	b8 <_ZN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEED2Ev+0xb8>  // b.none
  ac:	ldr	x19, [sp, #16]
  b0:	ldp	x29, x30, [sp], #32
  b4:	b	0 <free>
  b8:	ldr	x19, [sp, #16]
  bc:	ldp	x29, x30, [sp], #32
  c0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev>
  14:	ldr	x8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	x8, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x3c>
  2c:	add	x0, x19, #0xc0
  30:	mov	w2, #0x3                   	// #3
  34:	mov	x1, x0
  38:	blr	x8
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.ne	b8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xb8>  // b.any
  54:	cbz	x20, 60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x60>
  58:	mov	x0, x20
  5c:	bl	0 <_ZdlPv>
  60:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  64:	ldp	x8, x0, [x19, #96]
  68:	ldr	x9, [x9]
  6c:	cmp	x0, x8
  70:	add	x9, x9, #0x10
  74:	str	x9, [x19]
  78:	b.eq	80 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x19, #88]
  84:	ldr	x0, [x19, #64]
  88:	add	x9, x19, #0x50
  8c:	add	x8, x8, #0x1
  90:	cmp	x0, x9
  94:	str	x8, [x19, #88]
  98:	b.eq	d8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xd8>  // b.none
  9c:	ldp	x20, x19, [sp, #32]
  a0:	ldr	x21, [sp, #16]
  a4:	ldp	x29, x30, [sp], #48
  a8:	b	0 <free>
  ac:	add	x20, x20, #0x10
  b0:	cmp	x20, x21
  b4:	b.eq	cc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xcc>  // b.none
  b8:	ldr	x0, [x20], #16
  bc:	cmp	x0, x20
  c0:	b.eq	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xac>  // b.none
  c4:	bl	0 <_ZdlPv>
  c8:	b	ac <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0xac>
  cc:	ldr	x20, [x19, #136]
  d0:	cbnz	x20, 58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x58>
  d4:	b	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED2Ev+0x60>
  d8:	ldp	x20, x19, [sp, #32]
  dc:	ldr	x21, [sp, #16]
  e0:	ldp	x29, x30, [sp], #48
  e4:	ret

Disassembly of section .text._ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev:

0000000000000000 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
  10:	ldr	x8, [x0, #184]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	x8, 38 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x38>
  28:	add	x0, x19, #0xa8
  2c:	mov	w2, #0x3                   	// #3
  30:	mov	x1, x0
  34:	blr	x8
  38:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  3c:	ldp	x8, x0, [x19, #96]
  40:	ldr	x9, [x9]
  44:	cmp	x0, x8
  48:	add	x9, x9, #0x10
  4c:	str	x9, [x19]
  50:	b.eq	58 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x58>  // b.none
  54:	bl	0 <free>
  58:	ldr	x8, [x19, #88]
  5c:	ldr	x0, [x19, #64]
  60:	add	x9, x19, #0x50
  64:	add	x8, x8, #0x1
  68:	cmp	x0, x9
  6c:	str	x8, [x19, #88]
  70:	b.eq	80 <_ZN4llvm2cl3optIbLb0ENS0_6parserIbEEED2Ev+0x80>  // b.none
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <free>
  80:	ldr	x19, [sp, #16]
  84:	ldp	x29, x30, [sp], #32
  88:	ret

Disassembly of section .text._ZN4llvm8TGParserD2Ev:

0000000000000000 <_ZN4llvm8TGParserD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	add	x0, x0, #0x150
  1c:	bl	0 <_ZN4llvm8TGParserD2Ev>
  20:	ldr	x0, [x19, #296]
  24:	add	x8, x19, #0x138
  28:	cmp	x0, x8
  2c:	b.eq	34 <_ZN4llvm8TGParserD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldp	x20, x21, [x19, #272]
  38:	cmp	x20, x21
  3c:	b.eq	58 <_ZN4llvm8TGParserD2Ev+0x58>  // b.none
  40:	mov	x0, x20
  44:	bl	0 <_ZN4llvm8TGParserD2Ev>
  48:	add	x20, x20, #0x8
  4c:	cmp	x21, x20
  50:	b.ne	40 <_ZN4llvm8TGParserD2Ev+0x40>  // b.any
  54:	ldr	x20, [x19, #272]
  58:	cbz	x20, 64 <_ZN4llvm8TGParserD2Ev+0x64>
  5c:	mov	x0, x20
  60:	bl	0 <_ZdlPv>
  64:	ldr	x1, [x19, #240]
  68:	add	x0, x19, #0xe0
  6c:	bl	0 <_ZN4llvm8TGParserD2Ev>
  70:	ldp	x20, x21, [x19, #200]
  74:	cmp	x20, x21
  78:	b.ne	ac <_ZN4llvm8TGParserD2Ev+0xac>  // b.any
  7c:	cbz	x20, 88 <_ZN4llvm8TGParserD2Ev+0x88>
  80:	mov	x0, x20
  84:	bl	0 <_ZdlPv>
  88:	mov	x0, x19
  8c:	ldp	x20, x19, [sp, #48]
  90:	ldp	x22, x21, [sp, #32]
  94:	ldr	x23, [sp, #16]
  98:	ldp	x29, x30, [sp], #64
  9c:	b	0 <_ZN4llvm8TGParserD2Ev>
  a0:	add	x20, x20, #0xd0
  a4:	cmp	x20, x21
  a8:	b.eq	f8 <_ZN4llvm8TGParserD2Ev+0xf8>  // b.none
  ac:	ldr	w8, [x20, #8]
  b0:	ldr	x0, [x20]
  b4:	cbz	w8, e4 <_ZN4llvm8TGParserD2Ev+0xe4>
  b8:	add	x8, x8, x8, lsl #1
  bc:	sub	x22, x0, #0x28
  c0:	lsl	x23, x8, #4
  c4:	b	d0 <_ZN4llvm8TGParserD2Ev+0xd0>
  c8:	subs	x23, x23, #0x30
  cc:	b.eq	e0 <_ZN4llvm8TGParserD2Ev+0xe0>  // b.none
  d0:	ldr	x0, [x22, x23]
  d4:	cbz	x0, c8 <_ZN4llvm8TGParserD2Ev+0xc8>
  d8:	bl	0 <_ZdlPv>
  dc:	b	c8 <_ZN4llvm8TGParserD2Ev+0xc8>
  e0:	ldr	x0, [x20]
  e4:	add	x8, x20, #0x10
  e8:	cmp	x0, x8
  ec:	b.eq	a0 <_ZN4llvm8TGParserD2Ev+0xa0>  // b.none
  f0:	bl	0 <free>
  f4:	b	a0 <_ZN4llvm8TGParserD2Ev+0xa0>
  f8:	ldr	x20, [x19, #200]
  fc:	cbnz	x20, 80 <_ZN4llvm8TGParserD2Ev+0x80>
 100:	b	88 <_ZN4llvm8TGParserD2Ev+0x88>

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x1, #40]
   c:	cbz	w8, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  10:	ldrb	w8, [x0, #40]
  14:	cbz	w8, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  18:	ldr	x2, [x0, #16]
  1c:	ldr	x8, [x1, #16]
  20:	cmp	x2, x8
  24:	b.ne	54 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x54>  // b.any
  28:	cbz	x2, 48 <_ZNK4llvm2cl15OptionValueCopyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE7compareERKNS0_18GenericOptionValueE+0x48>
  2c:	ldr	x1, [x1, #8]
  30:	ldr	x0, [x0, #8]
  34:	bl	0 <bcmp>
  38:	cmp	w0, #0x0
  3c:	cset	w0, ne  // ne = any
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	mov	w0, wzr
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	w0, #0x1                   	// #1
  58:	ldp	x29, x30, [sp], #16
  5c:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	str	x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	mov	x19, x0
  24:	mov	x8, sp
  28:	mov	w20, w1
  2c:	add	x24, x8, #0x10
  30:	add	x0, x0, #0xb8
  34:	mov	x6, sp
  38:	mov	x1, x19
  3c:	strb	wzr, [sp, #16]
  40:	stp	x24, xzr, [sp]
  44:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  48:	tbz	w0, #0, 84 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x84>
  4c:	mov	w19, #0x1                   	// #1
  50:	ldr	x0, [sp]
  54:	cmp	x0, x24
  58:	b.eq	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x60>  // b.none
  5c:	bl	0 <_ZdlPv>
  60:	mov	w0, w19
  64:	ldp	x20, x19, [sp, #112]
  68:	ldp	x22, x21, [sp, #96]
  6c:	ldp	x24, x23, [sp, #80]
  70:	ldp	x26, x25, [sp, #64]
  74:	ldr	x27, [sp, #48]
  78:	ldp	x29, x30, [sp, #32]
  7c:	add	sp, sp, #0x80
  80:	ret
  84:	ldp	x21, x8, [x19, #144]
  88:	cmp	x21, x8
  8c:	b.eq	e4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xe4>  // b.none
  90:	add	x0, x21, #0x10
  94:	str	x0, [x21]
  98:	ldp	x22, x23, [sp]
  9c:	cbnz	x22, a4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xa4>
  a0:	cbnz	x23, 228 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x228>
  a4:	cmp	x23, #0x10
  a8:	str	x23, [x29, #24]
  ac:	b.cc	cc <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xcc>  // b.lo, b.ul, b.last
  b0:	add	x1, x29, #0x18
  b4:	mov	x0, x21
  b8:	mov	x2, xzr
  bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c0:	str	x0, [x21]
  c4:	ldr	x8, [x29, #24]
  c8:	str	x8, [x21, #16]
  cc:	cbz	x23, 104 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x104>
  d0:	cmp	x23, #0x1
  d4:	b.ne	f8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0xf8>  // b.any
  d8:	ldrb	w8, [x22]
  dc:	strb	w8, [x0]
  e0:	b	104 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x104>
  e4:	add	x0, x19, #0x88
  e8:	mov	x2, sp
  ec:	mov	x1, x21
  f0:	bl	0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
  f4:	b	120 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x120>
  f8:	mov	x1, x22
  fc:	mov	x2, x23
 100:	bl	0 <memcpy>
 104:	ldr	x8, [x29, #24]
 108:	ldr	x9, [x21]
 10c:	str	x8, [x21, #8]
 110:	strb	wzr, [x9, x8]
 114:	ldr	x8, [x19, #144]
 118:	add	x8, x8, #0x20
 11c:	str	x8, [x19, #144]
 120:	mov	x25, x19
 124:	ldr	x10, [x25, #176]!
 128:	sturh	w20, [x25, #-164]
 12c:	mov	x9, x25
 130:	ldr	x8, [x9, #-8]!
 134:	cmp	x8, x10
 138:	b.eq	174 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x174>  // b.none
 13c:	str	w20, [x8], #4
 140:	mov	x25, x9
 144:	str	x8, [x25]
 148:	ldr	x8, [x19, #208]
 14c:	cbz	x8, 20c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x20c>
 150:	ldr	x8, [x19, #216]
 154:	add	x0, x19, #0xc0
 158:	mov	x1, sp
 15c:	blr	x8
 160:	mov	w19, wzr
 164:	ldr	x0, [sp]
 168:	cmp	x0, x24
 16c:	b.ne	5c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x5c>  // b.any
 170:	b	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x60>
 174:	ldr	x21, [x19, #160]
 178:	sub	x22, x8, x21
 17c:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
 180:	cmp	x22, x8
 184:	b.eq	234 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x234>  // b.none
 188:	asr	x27, x22, #2
 18c:	cmp	x22, #0x0
 190:	csinc	x8, x27, xzr, ne  // ne = any
 194:	adds	x8, x8, x27
 198:	lsr	x10, x8, #61
 19c:	cset	w9, cs  // cs = hs, nlast
 1a0:	cmp	x10, #0x0
 1a4:	cset	w10, ne  // ne = any
 1a8:	orr	w9, w9, w10
 1ac:	cmp	w9, #0x0
 1b0:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
 1b4:	csel	x26, x9, x8, ne  // ne = any
 1b8:	cbz	x26, 210 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x210>
 1bc:	lsl	x0, x26, #2
 1c0:	bl	0 <_Znwm>
 1c4:	mov	x23, x0
 1c8:	add	x27, x23, x27, lsl #2
 1cc:	cmp	x22, #0x1
 1d0:	str	w20, [x27]
 1d4:	b.lt	1e8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1e8>  // b.tstop
 1d8:	mov	x0, x23
 1dc:	mov	x1, x21
 1e0:	mov	x2, x22
 1e4:	bl	0 <memmove>
 1e8:	add	x20, x27, #0x4
 1ec:	cbz	x21, 1f8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1f8>
 1f0:	mov	x0, x21
 1f4:	bl	0 <_ZdlPv>
 1f8:	add	x8, x23, x26, lsl #2
 1fc:	stp	x23, x20, [x19, #160]
 200:	str	x8, [x25]
 204:	ldr	x8, [x19, #208]
 208:	cbnz	x8, 150 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x150>
 20c:	bl	0 <_ZSt25__throw_bad_function_callv>
 210:	mov	x23, xzr
 214:	add	x27, x23, x27, lsl #2
 218:	cmp	x22, #0x1
 21c:	str	w20, [x27]
 220:	b.ge	1d8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1d8>  // b.tcont
 224:	b	1e8 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_+0x1e8>
 228:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <_ZSt19__throw_logic_errorPKc>
 234:	adrp	x0, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16handleOccurrenceEjNS_9StringRefESB_>
 238:	add	x0, x0, #0x0
 23c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE27getValueExpectedFlagDefaultEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x9, 0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev>
  14:	ldr	x8, [x0, #208]
  18:	ldr	x9, [x9]
  1c:	mov	x19, x0
  20:	add	x9, x9, #0x10
  24:	str	x9, [x0]
  28:	cbz	x8, 3c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x3c>
  2c:	add	x0, x19, #0xc0
  30:	mov	w2, #0x3                   	// #3
  34:	mov	x1, x0
  38:	blr	x8
  3c:	ldr	x0, [x19, #160]
  40:	cbz	x0, 48 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x48>
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x21, [x19, #136]
  4c:	cmp	x20, x21
  50:	b.ne	c0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xc0>  // b.any
  54:	cbz	x20, 60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x60>
  58:	mov	x0, x20
  5c:	bl	0 <_ZdlPv>
  60:	adrp	x9, 0 <_ZTVN4llvm2cl6OptionE>
  64:	ldp	x8, x0, [x19, #96]
  68:	ldr	x9, [x9]
  6c:	cmp	x0, x8
  70:	add	x9, x9, #0x10
  74:	str	x9, [x19]
  78:	b.eq	80 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x19, #88]
  84:	ldr	x0, [x19, #64]
  88:	add	x9, x19, #0x50
  8c:	add	x8, x8, #0x1
  90:	cmp	x0, x9
  94:	str	x8, [x19, #88]
  98:	b.eq	a0 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #32]
  a8:	ldr	x21, [sp, #16]
  ac:	ldp	x29, x30, [sp], #48
  b0:	b	0 <_ZdlPv>
  b4:	add	x20, x20, #0x10
  b8:	cmp	x20, x21
  bc:	b.eq	d4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xd4>  // b.none
  c0:	ldr	x0, [x20], #16
  c4:	cmp	x0, x20
  c8:	b.eq	b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xb4>  // b.none
  cc:	bl	0 <_ZdlPv>
  d0:	b	b4 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0xb4>
  d4:	ldr	x20, [x19, #136]
  d8:	cbnz	x20, 58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x58>
  dc:	b	60 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEED0Ev+0x60>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE14getOptionWidthEv>:
   0:	mov	x1, x0
   4:	add	x0, x0, #0xb8
   8:	b	0 <_ZNK4llvm2cl17basic_parser_impl14getOptionWidthERKNS0_6OptionE>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE15printOptionInfoEm>:
   0:	mov	x8, x0
   4:	add	x0, x0, #0xb8
   8:	mov	x2, x1
   c:	mov	x1, x8
  10:	b	0 <_ZNK4llvm2cl17basic_parser_impl15printOptionInfoERKNS0_6OptionEm>

Disassembly of section .text._ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb:

0000000000000000 <_ZNK4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE16printOptionValueEmb>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x8, x9, [x0, #160]
  14:	mov	x19, x0
  18:	cmp	x9, x8
  1c:	b.eq	24 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x24>  // b.none
  20:	str	x8, [x19, #168]
  24:	ldp	x20, x21, [x19, #136]
  28:	cmp	x21, x20
  2c:	b.eq	5c <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x5c>  // b.none
  30:	mov	x22, x20
  34:	b	44 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x44>
  38:	add	x22, x22, #0x10
  3c:	cmp	x22, x21
  40:	b.eq	58 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x58>  // b.none
  44:	ldr	x0, [x22], #16
  48:	cmp	x0, x22
  4c:	b.eq	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	38 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE10setDefaultEv+0x38>
  58:	str	x20, [x19, #144]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE:

0000000000000000 <_ZN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS0_6parserIS7_EEE19getExtraOptionNamesERNS_15SmallVectorImplINS_9StringRefEEE>:
   0:	ret

Disassembly of section .text._ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_:

0000000000000000 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	add	x8, sp, #0x8
  18:	mov	x20, x6
  1c:	add	x19, x8, #0x10
  20:	str	x19, [sp, #8]
  24:	cbz	x4, 74 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x74>
  28:	mov	x21, x5
  2c:	mov	x22, x4
  30:	cmp	x5, #0x10
  34:	mov	x0, x19
  38:	stur	x5, [x29, #-8]
  3c:	b.cc	5c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x5c>  // b.lo, b.ul, b.last
  40:	add	x0, sp, #0x8
  44:	sub	x1, x29, #0x8
  48:	mov	x2, xzr
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	ldur	x8, [x29, #-8]
  54:	str	x0, [sp, #8]
  58:	str	x8, [sp, #24]
  5c:	cbz	x21, 8c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x8c>
  60:	cmp	x21, #0x1
  64:	b.ne	80 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x80>  // b.any
  68:	ldrb	w8, [x22]
  6c:	strb	w8, [x0]
  70:	b	8c <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x8c>
  74:	str	xzr, [sp, #16]
  78:	strb	wzr, [sp, #24]
  7c:	b	d8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xd8>
  80:	mov	x1, x22
  84:	mov	x2, x21
  88:	bl	0 <memcpy>
  8c:	ldur	x8, [x29, #-8]
  90:	ldr	x9, [sp, #8]
  94:	str	x8, [sp, #16]
  98:	strb	wzr, [x9, x8]
  9c:	ldr	x8, [sp, #8]
  a0:	cmp	x8, x19
  a4:	b.eq	d8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xd8>  // b.none
  a8:	mov	x11, x20
  ac:	ldr	x10, [x20]
  b0:	ldr	x9, [x11, #16]!
  b4:	str	x8, [x20]
  b8:	ldur	q0, [sp, #16]
  bc:	cmp	x10, x11
  c0:	csel	x8, xzr, x10, eq  // eq = none
  c4:	stur	q0, [x20, #8]
  c8:	cbz	x8, 118 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x118>
  cc:	str	x8, [sp, #8]
  d0:	str	x9, [sp, #24]
  d4:	b	120 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x120>
  d8:	ldr	x2, [sp, #16]
  dc:	cbz	x2, 100 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x100>
  e0:	ldr	x0, [x20]
  e4:	cmp	x2, #0x1
  e8:	b.ne	f8 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0xf8>  // b.any
  ec:	ldrb	w8, [sp, #24]
  f0:	strb	w8, [x0]
  f4:	b	100 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x100>
  f8:	mov	x1, x19
  fc:	bl	0 <memcpy>
 100:	ldr	x8, [sp, #16]
 104:	ldr	x9, [x20]
 108:	str	x8, [x20, #8]
 10c:	strb	wzr, [x9, x8]
 110:	ldr	x8, [sp, #8]
 114:	b	120 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x120>
 118:	mov	x8, x19
 11c:	str	x19, [sp, #8]
 120:	str	xzr, [sp, #16]
 124:	strb	wzr, [x8]
 128:	ldr	x0, [sp, #8]
 12c:	cmp	x0, x19
 130:	b.eq	138 <_ZN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE5parseERNS0_6OptionENS_9StringRefESB_RS7_+0x138>  // b.none
 134:	bl	0 <_ZdlPv>
 138:	ldp	x20, x19, [sp, #80]
 13c:	ldp	x22, x21, [sp, #64]
 140:	ldp	x29, x30, [sp, #48]
 144:	mov	w0, wzr
 148:	add	sp, sp, #0x60
 14c:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x20, x26, [x0]
  24:	mov	x9, #0x7fffffffffffffe0    	// #9223372036854775776
  28:	sub	x8, x26, x20
  2c:	cmp	x8, x9
  30:	b.eq	21c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x21c>  // b.none
  34:	asr	x9, x8, #5
  38:	cmp	x8, #0x0
  3c:	csinc	x10, x9, xzr, ne  // ne = any
  40:	adds	x9, x10, x9
  44:	lsr	x11, x9, #58
  48:	cset	w10, cs  // cs = hs, nlast
  4c:	cmp	x11, #0x0
  50:	cset	w11, ne  // ne = any
  54:	orr	w10, w10, w11
  58:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  5c:	cmp	w10, #0x0
  60:	csel	x27, x8, x9, ne  // ne = any
  64:	sub	x8, x1, x20
  68:	mov	x25, x2
  6c:	mov	x19, x0
  70:	mov	x21, x1
  74:	asr	x28, x8, #5
  78:	cbz	x27, 8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x8c>
  7c:	lsl	x0, x27, #5
  80:	bl	0 <_Znwm>
  84:	mov	x22, x0
  88:	b	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x90>
  8c:	mov	x22, xzr
  90:	add	x23, x22, x28, lsl #5
  94:	add	x0, x23, #0x10
  98:	str	x0, [x23]
  9c:	ldp	x24, x25, [x25]
  a0:	cbnz	x24, a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xa8>
  a4:	cbnz	x25, 228 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x228>
  a8:	cmp	x25, #0x10
  ac:	str	x25, [sp, #8]
  b0:	b.cc	d4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd4>  // b.lo, b.ul, b.last
  b4:	add	x1, sp, #0x8
  b8:	mov	x0, x23
  bc:	mov	x2, xzr
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	str	x0, [x23]
  c8:	ldr	x8, [sp, #8]
  cc:	add	x9, x22, x28, lsl #5
  d0:	str	x8, [x9, #16]
  d4:	cbz	x25, f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>
  d8:	cmp	x25, #0x1
  dc:	b.ne	ec <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xec>  // b.any
  e0:	ldrb	w8, [x24]
  e4:	strb	w8, [x0]
  e8:	b	f8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>
  ec:	mov	x1, x24
  f0:	mov	x2, x25
  f4:	bl	0 <memcpy>
  f8:	ldr	x8, [sp, #8]
  fc:	add	x9, x22, x28, lsl #5
 100:	cmp	x20, x21
 104:	str	x8, [x9, #8]
 108:	ldr	x9, [x23]
 10c:	strb	wzr, [x9, x8]
 110:	mov	x8, x22
 114:	b.eq	170 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x170>  // b.none
 118:	add	x8, x22, #0x10
 11c:	add	x9, x20, #0x10
 120:	b	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x150>
 124:	stur	x10, [x8, #-16]
 128:	ldr	x10, [x9]
 12c:	str	x10, [x8]
 130:	ldur	x10, [x9, #-8]
 134:	add	x11, x9, #0x10
 138:	cmp	x11, x21
 13c:	stur	x10, [x8, #-8]
 140:	stp	x9, xzr, [x9, #-16]
 144:	strb	wzr, [x9], #32
 148:	add	x8, x8, #0x20
 14c:	b.eq	16c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x16c>  // b.none
 150:	stur	x8, [x8, #-16]
 154:	ldur	x10, [x9, #-16]
 158:	cmp	x10, x9
 15c:	b.ne	124 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x124>  // b.any
 160:	ldr	q0, [x10]
 164:	str	q0, [x8]
 168:	b	130 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x130>
 16c:	sub	x8, x8, #0x10
 170:	cmp	x26, x21
 174:	b.eq	1e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1e0>  // b.none
 178:	mov	x9, xzr
 17c:	b	1b0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1b0>
 180:	str	x13, [x11, #32]
 184:	ldr	x12, [x12, #16]
 188:	str	x12, [x11, #48]
 18c:	ldur	x11, [x10, #-8]
 190:	add	x13, x10, #0x10
 194:	add	x12, x8, x9
 198:	cmp	x13, x26
 19c:	add	x9, x9, #0x20
 1a0:	str	x11, [x12, #40]
 1a4:	stp	x10, xzr, [x10, #-16]
 1a8:	strb	wzr, [x10]
 1ac:	b.eq	1dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1dc>  // b.none
 1b0:	add	x11, x8, x9
 1b4:	add	x10, x11, #0x30
 1b8:	add	x12, x21, x9
 1bc:	str	x10, [x11, #32]
 1c0:	mov	x10, x12
 1c4:	ldr	x13, [x10], #16
 1c8:	cmp	x13, x10
 1cc:	b.ne	180 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x180>  // b.any
 1d0:	ldr	q0, [x13]
 1d4:	str	q0, [x11, #48]
 1d8:	b	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x18c>
 1dc:	add	x8, x8, x9
 1e0:	add	x21, x8, #0x20
 1e4:	cbz	x20, 1f0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x1f0>
 1e8:	mov	x0, x20
 1ec:	bl	0 <_ZdlPv>
 1f0:	add	x8, x22, x27, lsl #5
 1f4:	stp	x22, x21, [x19]
 1f8:	str	x8, [x19, #16]
 1fc:	ldp	x20, x19, [sp, #96]
 200:	ldp	x22, x21, [sp, #80]
 204:	ldp	x24, x23, [sp, #64]
 208:	ldp	x26, x25, [sp, #48]
 20c:	ldp	x28, x27, [sp, #32]
 210:	ldp	x29, x30, [sp, #16]
 214:	add	sp, sp, #0x70
 218:	ret
 21c:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 220:	add	x0, x0, #0x0
 224:	bl	0 <_ZSt20__throw_length_errorPKc>
 228:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 22c:	add	x0, x0, #0x0
 230:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	sub	x8, x1, #0x18
   4:	cmp	x1, #0x0
   8:	csel	x0, xzr, x8, eq  // eq = none
   c:	mov	x1, x2
  10:	b	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x4
  1c:	mov	x19, x4
  20:	mov	x20, x2
  24:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  28:	mov	x0, x19
  2c:	mov	x1, x20
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_11RecordRecTyEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x0, xzr, x8, eq  // eq = none
  18:	mov	x1, x2
  1c:	mov	x19, x2
  20:	bl	0 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>
  24:	mov	x0, x19
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x25, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x25, x20
  24:	cmp	x8, x9
  28:	b.eq	150 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x150>  // b.none
  2c:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  30:	asr	x9, x8, #3
  34:	movk	x10, #0xaaab
  38:	cmp	x8, #0x0
  3c:	mul	x9, x9, x10
  40:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  44:	csinc	x11, x9, xzr, ne  // ne = any
  48:	movk	x8, #0x555, lsl #48
  4c:	adds	x9, x11, x9
  50:	cset	w11, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w12, hi  // hi = pmore
  5c:	orr	w11, w11, w12
  60:	sub	x12, x1, x20
  64:	cmp	w11, #0x0
  68:	csel	x26, x8, x9, ne  // ne = any
  6c:	asr	x8, x12, #3
  70:	mov	x23, x2
  74:	mov	x19, x0
  78:	mov	x22, x1
  7c:	mul	x24, x8, x10
  80:	cbz	x26, 98 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x98>
  84:	add	x8, x26, x26, lsl #1
  88:	lsl	x0, x8, #3
  8c:	bl	0 <_Znwm>
  90:	mov	x21, x0
  94:	b	9c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x9c>
  98:	mov	x21, xzr
  9c:	mov	w8, #0x18                  	// #24
  a0:	madd	x0, x24, x8, x21
  a4:	mov	x1, x23
  a8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  ac:	cmp	x20, x22
  b0:	mov	x23, x21
  b4:	b.eq	f0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>  // b.none
  b8:	mov	x23, x21
  bc:	mov	x24, x20
  c0:	mov	x0, x23
  c4:	mov	x1, x24
  c8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  cc:	add	x24, x24, #0x18
  d0:	cmp	x22, x24
  d4:	add	x23, x23, #0x18
  d8:	b.ne	c0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc0>  // b.any
  dc:	b	f0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xf0>
  e0:	mov	x0, x23
  e4:	mov	x1, x22
  e8:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferC1EOS1_>
  ec:	add	x22, x22, #0x18
  f0:	cmp	x25, x22
  f4:	add	x23, x23, #0x18
  f8:	b.ne	e0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xe0>  // b.any
  fc:	cmp	x20, x25
 100:	b.eq	11c <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 104:	mov	x22, x20
 108:	mov	x0, x22
 10c:	bl	0 <_ZN4llvm9SourceMgr9SrcBufferD1Ev>
 110:	add	x22, x22, #0x18
 114:	cmp	x25, x22
 118:	b.ne	108 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x108>  // b.any
 11c:	cbz	x20, 128 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x128>
 120:	mov	x0, x20
 124:	bl	0 <_ZdlPv>
 128:	mov	w8, #0x18                  	// #24
 12c:	madd	x8, x26, x8, x21
 130:	stp	x21, x23, [x19]
 134:	str	x8, [x19, #16]
 138:	ldp	x20, x19, [sp, #64]
 13c:	ldp	x22, x21, [sp, #48]
 140:	ldp	x24, x23, [sp, #32]
 144:	ldp	x26, x25, [sp, #16]
 148:	ldp	x29, x30, [sp], #80
 14c:	ret
 150:	adrp	x0, 0 <_ZNSt6vectorIN4llvm9SourceMgr9SrcBufferESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 154:	add	x0, x0, #0x0
 158:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x0
  20:	cmp	x1, x0
  24:	b.eq	26c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x26c>  // b.none
  28:	ldp	x20, x26, [x1]
  2c:	ldr	x8, [x19, #16]
  30:	ldr	x22, [x19]
  34:	mov	x23, x1
  38:	sub	x0, x26, x20
  3c:	asr	x25, x0, #5
  40:	sub	x8, x8, x22
  44:	cmp	x25, x8, asr #5
  48:	b.ls	6c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x6c>  // b.plast
  4c:	cbz	x0, 1a8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1a8>
  50:	lsr	x8, x25, #58
  54:	cbnz	x8, 2c4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2c4>
  58:	bl	0 <_Znwm>
  5c:	mov	x21, x0
  60:	cmp	x20, x26
  64:	b.ne	1b4 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1b4>  // b.any
  68:	b	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>
  6c:	ldr	x21, [x19, #8]
  70:	sub	x9, x21, x22
  74:	asr	x8, x9, #5
  78:	cmp	x8, x25
  7c:	b.cs	150 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x150>  // b.hs, b.nlast
  80:	cmp	x9, #0x1
  84:	b.lt	c0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xc0>  // b.tstop
  88:	lsr	x8, x9, #5
  8c:	add	x21, x8, #0x1
  90:	mov	x0, x22
  94:	mov	x1, x20
  98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  9c:	sub	x21, x21, #0x1
  a0:	add	x20, x20, #0x20
  a4:	cmp	x21, #0x1
  a8:	add	x22, x22, #0x20
  ac:	b.gt	90 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x90>
  b0:	ldp	x8, x21, [x19]
  b4:	ldp	x20, x26, [x23]
  b8:	sub	x8, x21, x8
  bc:	asr	x8, x8, #5
  c0:	add	x23, x20, x8, lsl #5
  c4:	cmp	x23, x26
  c8:	b.ne	fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xfc>  // b.any
  cc:	b	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>
  d0:	mov	x1, x20
  d4:	mov	x2, x22
  d8:	bl	0 <memcpy>
  dc:	ldr	x8, [sp, #8]
  e0:	ldr	x9, [x21]
  e4:	add	x23, x23, #0x20
  e8:	cmp	x23, x26
  ec:	str	x8, [x21, #8]
  f0:	add	x21, x21, #0x20
  f4:	strb	wzr, [x9, x8]
  f8:	b.eq	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>  // b.none
  fc:	add	x0, x21, #0x10
 100:	str	x0, [x21]
 104:	ldp	x20, x22, [x23]
 108:	cbnz	x20, 110 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x110>
 10c:	cbnz	x22, 2b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2b8>
 110:	cmp	x22, #0x10
 114:	str	x22, [sp, #8]
 118:	b.cc	138 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x138>  // b.lo, b.ul, b.last
 11c:	add	x1, sp, #0x8
 120:	mov	x0, x21
 124:	mov	x2, xzr
 128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 12c:	str	x0, [x21]
 130:	ldr	x8, [sp, #8]
 134:	str	x8, [x21, #16]
 138:	cbz	x22, dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xdc>
 13c:	cmp	x22, #0x1
 140:	b.ne	d0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xd0>  // b.any
 144:	ldrb	w8, [x20]
 148:	strb	w8, [x0]
 14c:	b	dc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0xdc>
 150:	cmp	x0, #0x1
 154:	b.lt	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x18c>  // b.tstop
 158:	lsr	x8, x0, #5
 15c:	add	x21, x8, #0x1
 160:	mov	x0, x22
 164:	mov	x1, x20
 168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 16c:	sub	x21, x21, #0x1
 170:	add	x20, x20, #0x20
 174:	cmp	x21, #0x1
 178:	add	x22, x22, #0x20
 17c:	b.gt	160 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x160>
 180:	ldr	x21, [x19, #8]
 184:	b	18c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x18c>
 188:	add	x22, x22, #0x10
 18c:	cmp	x22, x21
 190:	b.eq	260 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x260>  // b.none
 194:	ldr	x0, [x22], #16
 198:	cmp	x0, x22
 19c:	b.eq	188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x188>  // b.none
 1a0:	bl	0 <_ZdlPv>
 1a4:	b	188 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x188>
 1a8:	mov	x21, xzr
 1ac:	cmp	x20, x26
 1b0:	b.eq	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>  // b.none
 1b4:	mov	x22, x21
 1b8:	b	1e8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1e8>
 1bc:	mov	x1, x23
 1c0:	mov	x2, x24
 1c4:	bl	0 <memcpy>
 1c8:	ldr	x8, [sp, #8]
 1cc:	ldr	x9, [x22]
 1d0:	add	x20, x20, #0x20
 1d4:	cmp	x20, x26
 1d8:	str	x8, [x22, #8]
 1dc:	add	x22, x22, #0x20
 1e0:	strb	wzr, [x9, x8]
 1e4:	b.eq	23c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x23c>  // b.none
 1e8:	add	x0, x22, #0x10
 1ec:	str	x0, [x22]
 1f0:	ldp	x23, x24, [x20]
 1f4:	cbnz	x23, 1fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1fc>
 1f8:	cbnz	x24, 2b8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2b8>
 1fc:	cmp	x24, #0x10
 200:	str	x24, [sp, #8]
 204:	b.cc	224 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x224>  // b.lo, b.ul, b.last
 208:	add	x1, sp, #0x8
 20c:	mov	x0, x22
 210:	mov	x2, xzr
 214:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
 218:	str	x0, [x22]
 21c:	ldr	x8, [sp, #8]
 220:	str	x8, [x22, #16]
 224:	cbz	x24, 1c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c8>
 228:	cmp	x24, #0x1
 22c:	b.ne	1bc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1bc>  // b.any
 230:	ldrb	w8, [x23]
 234:	strb	w8, [x0]
 238:	b	1c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x1c8>
 23c:	ldp	x20, x22, [x19]
 240:	cmp	x20, x22
 244:	b.ne	298 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x298>  // b.any
 248:	cbz	x20, 254 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x254>
 24c:	mov	x0, x20
 250:	bl	0 <_ZdlPv>
 254:	add	x8, x21, x25, lsl #5
 258:	str	x21, [x19]
 25c:	str	x8, [x19, #16]
 260:	ldr	x8, [x19]
 264:	add	x8, x8, x25, lsl #5
 268:	str	x8, [x19, #8]
 26c:	mov	x0, x19
 270:	ldp	x20, x19, [sp, #80]
 274:	ldp	x22, x21, [sp, #64]
 278:	ldp	x24, x23, [sp, #48]
 27c:	ldp	x26, x25, [sp, #32]
 280:	ldp	x29, x30, [sp, #16]
 284:	add	sp, sp, #0x60
 288:	ret
 28c:	add	x20, x20, #0x10
 290:	cmp	x20, x22
 294:	b.eq	2ac <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x2ac>  // b.none
 298:	ldr	x0, [x20], #16
 29c:	cmp	x0, x20
 2a0:	b.eq	28c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x28c>  // b.none
 2a4:	bl	0 <_ZdlPv>
 2a8:	b	28c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x28c>
 2ac:	ldr	x20, [x19]
 2b0:	cbnz	x20, 24c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x24c>
 2b4:	b	254 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_+0x254>
 2b8:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEaSERKS7_>
 2bc:	add	x0, x0, #0x0
 2c0:	bl	0 <_ZSt19__throw_logic_errorPKc>
 2c4:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 34 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev+0x34>
  18:	add	x0, x20, #0x30
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  20:	ldr	x1, [x20, #16]
  24:	mov	x0, x20
  28:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	str	xzr, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZN4llvm7TGLexerD2Ev:

0000000000000000 <_ZN4llvm7TGLexerD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x22, [x0, #176]
  14:	mov	x19, x0
  18:	cmp	x20, x22
  1c:	b.ne	5c <_ZN4llvm7TGLexerD2Ev+0x5c>  // b.any
  20:	cbz	x20, 2c <_ZN4llvm7TGLexerD2Ev+0x2c>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	ldr	w8, [x19, #156]
  30:	cbz	w8, 9c <_ZN4llvm7TGLexerD2Ev+0x9c>
  34:	ldr	w8, [x19, #152]
  38:	cbz	w8, 9c <_ZN4llvm7TGLexerD2Ev+0x9c>
  3c:	mov	x20, xzr
  40:	lsl	x21, x8, #3
  44:	b	80 <_ZN4llvm7TGLexerD2Ev+0x80>
  48:	mov	x0, x21
  4c:	bl	0 <_ZdlPv>
  50:	str	xzr, [x20], #8
  54:	cmp	x22, x20
  58:	b.eq	d0 <_ZN4llvm7TGLexerD2Ev+0xd0>  // b.none
  5c:	ldr	x21, [x20]
  60:	cbz	x21, 50 <_ZN4llvm7TGLexerD2Ev+0x50>
  64:	ldr	x0, [x21]
  68:	cbz	x0, 48 <_ZN4llvm7TGLexerD2Ev+0x48>
  6c:	bl	0 <_ZdlPv>
  70:	b	48 <_ZN4llvm7TGLexerD2Ev+0x48>
  74:	add	x20, x20, #0x8
  78:	cmp	x21, x20
  7c:	b.eq	9c <_ZN4llvm7TGLexerD2Ev+0x9c>  // b.none
  80:	ldr	x8, [x19, #144]
  84:	ldr	x0, [x8, x20]
  88:	cmn	x0, #0x8
  8c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  90:	b.eq	74 <_ZN4llvm7TGLexerD2Ev+0x74>  // b.none
  94:	bl	0 <free>
  98:	b	74 <_ZN4llvm7TGLexerD2Ev+0x74>
  9c:	ldr	x0, [x19, #144]
  a0:	bl	0 <free>
  a4:	ldr	x1, [x19, #112]
  a8:	add	x0, x19, #0x60
  ac:	bl	0 <_ZN4llvm7TGLexerD2Ev>
  b0:	ldr	x0, [x19, #48]
  b4:	add	x8, x19, #0x40
  b8:	cmp	x0, x8
  bc:	b.eq	dc <_ZN4llvm7TGLexerD2Ev+0xdc>  // b.none
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldp	x22, x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	b	0 <_ZdlPv>
  d0:	ldr	x20, [x19, #176]
  d4:	cbnz	x20, 24 <_ZN4llvm7TGLexerD2Ev+0x24>
  d8:	b	2c <_ZN4llvm7TGLexerD2Ev+0x2c>
  dc:	ldp	x20, x19, [sp, #32]
  e0:	ldp	x22, x21, [sp, #16]
  e4:	ldp	x29, x30, [sp], #48
  e8:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	6c <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x6c>  // b.any
  2c:	cbz	x21, 38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #48]
  48:	ldp	x22, x21, [sp, #32]
  4c:	ldr	x23, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret
  58:	mov	x0, x22
  5c:	bl	0 <_ZdlPv>
  60:	str	xzr, [x21], #16
  64:	cmp	x23, x21
  68:	b.eq	d0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xd0>  // b.none
  6c:	add	x0, x21, #0x8
  70:	bl	0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>
  74:	ldr	x22, [x21]
  78:	cbz	x22, 60 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x60>
  7c:	ldr	x0, [x22, #88]
  80:	add	x8, x22, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x22, #72]
  94:	add	x8, x22, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x22, #56]
  a8:	add	x8, x22, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x22, #8]
  bc:	add	x8, x22, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>  // b.none
  c8:	bl	0 <free>
  cc:	b	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>
  d0:	ldr	x21, [x20, #24]
  d4:	cbnz	x21, 30 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x30>
  d8:	b	38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>

Disassembly of section .text._ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_:

0000000000000000 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x30>
 13c:	b	38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  18:	mov	x20, x1
  1c:	mov	x19, x0
  20:	b	34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x34>
  24:	mov	x0, x20
  28:	bl	0 <_ZdlPv>
  2c:	mov	x20, x23
  30:	cbz	x23, f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xf0>
  34:	ldr	x1, [x20, #24]
  38:	mov	x0, x19
  3c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  40:	ldr	x21, [x20, #64]
  44:	ldr	x23, [x20, #16]
  48:	cbz	x21, d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xd4>
  4c:	ldp	x22, x24, [x21, #128]
  50:	cmp	x22, x24
  54:	b.eq	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x70>  // b.none
  58:	mov	x0, x22
  5c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  60:	add	x22, x22, #0x10
  64:	cmp	x24, x22
  68:	b.ne	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x58>  // b.any
  6c:	ldr	x22, [x21, #128]
  70:	cbz	x22, 7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x7c>
  74:	mov	x0, x22
  78:	bl	0 <_ZdlPv>
  7c:	ldr	x0, [x21, #88]
  80:	add	x8, x21, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x21, #72]
  94:	add	x8, x21, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x21, #56]
  a8:	add	x8, x21, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x21, #8]
  bc:	add	x8, x21, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0xcc>  // b.none
  c8:	bl	0 <free>
  cc:	mov	x0, x21
  d0:	bl	0 <_ZdlPv>
  d4:	ldr	x0, [x20, #32]
  d8:	add	x8, x20, #0x30
  dc:	str	xzr, [x20, #64]
  e0:	cmp	x0, x8
  e4:	b.eq	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>  // b.none
  e8:	bl	0 <_ZdlPv>
  ec:	b	24 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x24>
  f0:	ldp	x20, x19, [sp, #48]
  f4:	ldp	x22, x21, [sp, #32]
  f8:	ldp	x24, x23, [sp, #16]
  fc:	ldp	x29, x30, [sp], #64
 100:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 48 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x48>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  28:	ldr	x21, [x20, #16]
  2c:	add	x1, x20, #0x20
  30:	mov	x0, x19
  34:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	mov	x20, x21
  44:	cbnz	x21, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x1c>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl3optIS5_Lb0ENSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	x20, [x1]
  18:	add	x8, sp, #0x8
  1c:	add	x22, x8, #0x10
  20:	str	x22, [sp, #8]
  24:	cbz	x20, e4 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0xe4>
  28:	mov	x19, x0
  2c:	mov	x0, x20
  30:	bl	0 <strlen>
  34:	mov	x21, x0
  38:	cmp	x0, #0x10
  3c:	stur	x0, [x29, #-8]
  40:	b.cc	68 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x68>  // b.lo, b.ul, b.last
  44:	add	x0, sp, #0x8
  48:	sub	x1, x29, #0x8
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	ldur	x8, [x29, #-8]
  58:	str	x0, [sp, #8]
  5c:	str	x8, [sp, #24]
  60:	cbnz	x21, 70 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x70>
  64:	b	90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  68:	mov	x0, x22
  6c:	cbz	x21, 90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  70:	cmp	x21, #0x1
  74:	b.ne	84 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x84>  // b.any
  78:	ldrb	w8, [x20]
  7c:	strb	w8, [x0]
  80:	b	90 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0x90>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldur	x8, [x29, #-8]
  94:	ldr	x9, [sp, #8]
  98:	add	x0, x19, #0x88
  9c:	add	x1, sp, #0x8
  a0:	str	x8, [sp, #16]
  a4:	strb	wzr, [x9, x8]
  a8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  ac:	mov	w8, #0x1                   	// #1
  b0:	add	x0, x19, #0xb0
  b4:	add	x1, sp, #0x8
  b8:	strb	w8, [x19, #208]
  bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  c0:	ldr	x0, [sp, #8]
  c4:	cmp	x0, x22
  c8:	b.eq	d0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_+0xd0>  // b.none
  cc:	bl	0 <_ZdlPv>
  d0:	ldp	x20, x19, [sp, #80]
  d4:	ldp	x22, x21, [sp, #64]
  d8:	ldp	x29, x30, [sp, #48]
  dc:	add	sp, sp, #0x60
  e0:	ret
  e4:	adrp	x0, 0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_11initializerIA2_cEEEEvPT_RKT0_>
  e8:	add	x0, x0, #0x0
  ec:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_:

0000000000000000 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	ldr	q0, [x1]
  18:	add	x8, sp, #0x8
  1c:	add	x22, x8, #0x10
  20:	str	q0, [x0, #32]
  24:	ldr	q0, [x2]
  28:	str	q0, [x0, #48]
  2c:	ldr	x20, [x3]
  30:	str	x22, [sp, #8]
  34:	cbz	x20, f4 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xf4>
  38:	mov	x19, x0
  3c:	mov	x0, x20
  40:	bl	0 <strlen>
  44:	mov	x21, x0
  48:	cmp	x0, #0x10
  4c:	stur	x0, [x29, #-8]
  50:	b.cc	78 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x78>  // b.lo, b.ul, b.last
  54:	add	x0, sp, #0x8
  58:	sub	x1, x29, #0x8
  5c:	mov	x2, xzr
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  64:	ldur	x8, [x29, #-8]
  68:	str	x0, [sp, #8]
  6c:	str	x8, [sp, #24]
  70:	cbnz	x21, 80 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x80>
  74:	b	a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  78:	mov	x0, x22
  7c:	cbz	x21, a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  80:	cmp	x21, #0x1
  84:	b.ne	94 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0x94>  // b.any
  88:	ldrb	w8, [x20]
  8c:	strb	w8, [x0]
  90:	b	a0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xa0>
  94:	mov	x1, x20
  98:	mov	x2, x21
  9c:	bl	0 <memcpy>
  a0:	ldur	x8, [x29, #-8]
  a4:	ldr	x9, [sp, #8]
  a8:	add	x0, x19, #0x88
  ac:	add	x1, sp, #0x8
  b0:	str	x8, [sp, #16]
  b4:	strb	wzr, [x9, x8]
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  bc:	mov	w8, #0x1                   	// #1
  c0:	add	x0, x19, #0xb0
  c4:	add	x1, sp, #0x8
  c8:	strb	w8, [x19, #208]
  cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  d0:	ldr	x0, [sp, #8]
  d4:	cmp	x0, x22
  d8:	b.eq	e0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_+0xe0>  // b.none
  dc:	bl	0 <_ZdlPv>
  e0:	ldp	x20, x19, [sp, #80]
  e4:	ldp	x22, x21, [sp, #64]
  e8:	ldp	x29, x30, [sp, #48]
  ec:	add	sp, sp, #0x60
  f0:	ret
  f4:	adrp	x0, 0 <_ZN4llvm2cl5applyINS0_3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS8_EEEENS0_4descEJNS0_10value_descENS0_11initializerIA1_cEEEEEvPT_RKT0_DpRKT1_>
  f8:	add	x0, x0, #0x0
  fc:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEN4llvm2cl4listIS5_bNSA_6parserIS5_EEEUlS7_E_EE9_M_invokeERKSt9_Any_dataS7_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl4listINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEbNS2_6parserIS9_EEEUlRKS9_E_EE10_M_managerERSt9_Any_dataRKSH_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text._ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE:

0000000000000000 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE>:
   0:	ldrb	w8, [x1, #9]
   4:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
   8:	ldrb	w8, [x0, #9]
   c:	cbz	w8, 24 <_ZNK4llvm2cl15OptionValueCopyIbE7compareERKNS0_18GenericOptionValueE+0x24>
  10:	ldrb	w8, [x0, #8]
  14:	ldrb	w9, [x1, #8]
  18:	cmp	w8, w9
  1c:	cset	w0, ne  // ne = any
  20:	ret
  24:	mov	w0, wzr
  28:	ret

Disassembly of section .text._ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_:

0000000000000000 <_ZNSt17_Function_handlerIFvRKbEN4llvm2cl3optIbLb0ENS4_6parserIbEEEUlS1_E_EE9_M_invokeERKSt9_Any_dataS1_>:
   0:	ret

Disassembly of section .text._ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation:

0000000000000000 <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation>:
   0:	cmp	w2, #0x1
   4:	b.ne	c <_ZNSt14_Function_base13_Base_managerIN4llvm2cl3optIbLb0ENS2_6parserIbEEEUlRKbE_EE10_M_managerERSt9_Any_dataRKSB_St18_Manager_operation+0xc>  // b.any
   8:	str	x1, [x0]
   c:	mov	w0, wzr
  10:	ret

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Main.cpp>:
   0:	sub	sp, sp, #0xa0
   4:	stp	d9, d8, [sp, #48]
   8:	stp	x29, x30, [sp, #64]
   c:	stp	x28, x27, [sp, #80]
  10:	stp	x26, x25, [sp, #96]
  14:	stp	x24, x23, [sp, #112]
  18:	stp	x22, x21, [sp, #128]
  1c:	stp	x20, x19, [sp, #144]
  20:	add	x29, sp, #0x30
  24:	adrp	x19, 0 <_GLOBAL__sub_I_Main.cpp>
  28:	add	x19, x19, #0x0
  2c:	adrp	x27, 0 <_ZN4llvm2cl15GeneralCategoryE>
  30:	adrp	x9, 0 <_ZTVN4llvm2cl11OptionValueINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  34:	adrp	x10, 0 <_ZTVN4llvm2cl3optINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELb0ENS0_6parserIS7_EEEE>
  38:	ldr	x27, [x27]
  3c:	ldr	x9, [x9]
  40:	ldr	x10, [x10]
  44:	strh	wzr, [x19, #656]
  48:	add	x22, x19, #0x288
  4c:	ldrh	w11, [x22, #10]
  50:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
  54:	adrp	x12, 0 <_ZTVN4llvm2cl6parserINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
  58:	ldr	x12, [x12]
  5c:	ldr	d9, [x8]
  60:	and	w8, w11, #0x8000
  64:	movi	v0.2d, #0x0
  68:	strh	w8, [x22, #10]
  6c:	add	x8, x19, #0x2d8
  70:	stur	q0, [x22, #12]
  74:	stur	q0, [x22, #28]
  78:	stur	q0, [x22, #44]
  7c:	str	wzr, [x22, #60]
  80:	str	x8, [x19, #712]
  84:	add	x8, x19, #0x308
  88:	adrp	x14, 0 <_GLOBAL__sub_I_Main.cpp>
  8c:	adrp	x15, 0 <_GLOBAL__sub_I_Main.cpp>
  90:	str	x8, [x19, #744]
  94:	str	x8, [x19, #752]
  98:	add	x8, x19, #0x320
  9c:	adrp	x28, 0 <_GLOBAL__sub_I_Main.cpp>
  a0:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
  a4:	add	x14, x14, #0x0
  a8:	movi	v8.2s, #0x1
  ac:	add	x15, x15, #0x0
  b0:	str	x8, [x19, #784]
  b4:	add	x8, x19, #0x348
  b8:	add	x28, x28, #0x0
  bc:	add	x26, x9, #0x10
  c0:	add	x24, x10, #0x10
  c4:	add	x25, x12, #0x10
  c8:	add	x1, x1, #0x0
  cc:	mov	w2, #0x1                   	// #1
  d0:	mov	x0, x22
  d4:	str	x8, [x19, #824]
  d8:	stur	x14, [x29, #-16]
  dc:	str	xzr, [x19, #736]
  e0:	str	d9, [x19, #760]
  e4:	str	wzr, [x19, #768]
  e8:	str	x27, [x19, #728]
  ec:	str	d8, [x19, #720]
  f0:	str	xzr, [x19, #792]
  f4:	strb	wzr, [x19, #800]
  f8:	str	xzr, [x19, #832]
  fc:	strb	wzr, [x19, #840]
 100:	strb	wzr, [x19, #856]
 104:	str	x26, [x19, #816]
 108:	str	x24, [x19, #648]
 10c:	str	x25, [x19, #864]
 110:	str	x15, [x19, #896]
 114:	str	x28, [x19, #888]
 118:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 11c:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 120:	adrp	x23, 0 <_GLOBAL__sub_I_Main.cpp>
 124:	add	x8, x8, #0x0
 128:	mov	w9, #0xf                   	// #15
 12c:	add	x23, x23, #0x0
 130:	mov	w20, #0x8                   	// #8
 134:	sub	x1, x29, #0x10
 138:	mov	x0, x22
 13c:	str	x8, [x19, #680]
 140:	str	x9, [x19, #688]
 144:	str	x23, [x19, #696]
 148:	str	x20, [x19, #704]
 14c:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 150:	mov	x0, x22
 154:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 158:	adrp	x21, 0 <_GLOBAL__sub_I_Main.cpp>
 15c:	add	x21, x21, #0x0
 160:	adrp	x2, 0 <__dso_handle>
 164:	add	x2, x2, #0x0
 168:	mov	x0, x21
 16c:	mov	x1, x22
 170:	bl	0 <__cxa_atexit>
 174:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 178:	add	x8, x8, #0x0
 17c:	mov	w9, #0x13                  	// #19
 180:	strh	wzr, [x19, #912]
 184:	add	x22, x19, #0x388
 188:	stp	x8, x9, [x29, #-16]
 18c:	ldrh	w8, [x22, #10]
 190:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 194:	add	x9, x9, #0x0
 198:	stp	x23, x20, [sp, #16]
 19c:	and	w8, w8, #0x8000
 1a0:	str	x9, [sp, #8]
 1a4:	add	x9, x19, #0x3d8
 1a8:	strh	w8, [x22, #10]
 1ac:	add	x8, x19, #0x408
 1b0:	movi	v0.2d, #0x0
 1b4:	adrp	x23, 0 <_GLOBAL__sub_I_Main.cpp>
 1b8:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 1bc:	stur	q0, [x22, #12]
 1c0:	stur	q0, [x22, #28]
 1c4:	stur	q0, [x22, #44]
 1c8:	str	wzr, [x22, #60]
 1cc:	str	x9, [x19, #968]
 1d0:	add	x9, x19, #0x420
 1d4:	str	x8, [x19, #1000]
 1d8:	str	x8, [x19, #1008]
 1dc:	add	x8, x19, #0x448
 1e0:	add	x23, x23, #0x0
 1e4:	add	x1, x1, #0x0
 1e8:	mov	w2, #0x1                   	// #1
 1ec:	mov	x0, x22
 1f0:	str	xzr, [x19, #992]
 1f4:	str	d9, [x19, #1016]
 1f8:	str	wzr, [x19, #1024]
 1fc:	str	x27, [x19, #984]
 200:	str	d8, [x19, #976]
 204:	str	x9, [x19, #1040]
 208:	str	xzr, [x19, #1048]
 20c:	strb	wzr, [x19, #1056]
 210:	str	x8, [x19, #1080]
 214:	str	xzr, [x19, #1088]
 218:	strb	wzr, [x19, #1096]
 21c:	strb	wzr, [x19, #1112]
 220:	str	x26, [x19, #1072]
 224:	str	x24, [x19, #904]
 228:	str	x25, [x19, #1120]
 22c:	str	x23, [x19, #1152]
 230:	str	x28, [x19, #1144]
 234:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 238:	sub	x1, x29, #0x10
 23c:	add	x2, sp, #0x10
 240:	add	x3, sp, #0x8
 244:	mov	x0, x22
 248:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 24c:	mov	x0, x22
 250:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 254:	adrp	x20, 0 <__dso_handle>
 258:	add	x20, x20, #0x0
 25c:	mov	x0, x21
 260:	mov	x1, x22
 264:	mov	x2, x20
 268:	bl	0 <__cxa_atexit>
 26c:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 270:	add	x8, x8, #0x0
 274:	strh	wzr, [x19, #1168]
 278:	add	x22, x19, #0x488
 27c:	stur	x8, [x29, #-16]
 280:	add	x8, x19, #0x4d8
 284:	ldrh	w9, [x22, #10]
 288:	movi	v0.2d, #0x0
 28c:	stur	q0, [x22, #12]
 290:	stur	q0, [x22, #28]
 294:	stur	q0, [x22, #44]
 298:	str	wzr, [x22, #60]
 29c:	str	x8, [x19, #1224]
 2a0:	add	x8, x19, #0x508
 2a4:	str	x8, [x19, #1256]
 2a8:	str	x8, [x19, #1264]
 2ac:	add	x8, x19, #0x520
 2b0:	str	x8, [x19, #1296]
 2b4:	add	x8, x19, #0x548
 2b8:	str	x8, [x19, #1336]
 2bc:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 2c0:	and	w9, w9, #0x8000
 2c4:	add	x8, x8, #0x0
 2c8:	mov	w10, #0xc                   	// #12
 2cc:	orr	w9, w9, #0x80
 2d0:	sub	x1, x29, #0x10
 2d4:	mov	x0, x22
 2d8:	str	x26, [x19, #1328]
 2dc:	str	xzr, [x19, #1248]
 2e0:	str	d9, [x19, #1272]
 2e4:	str	wzr, [x19, #1280]
 2e8:	str	x27, [x19, #1240]
 2ec:	str	d8, [x19, #1232]
 2f0:	str	xzr, [x19, #1304]
 2f4:	strb	wzr, [x19, #1312]
 2f8:	str	xzr, [x19, #1344]
 2fc:	strb	wzr, [x19, #1352]
 300:	strb	wzr, [x19, #1368]
 304:	str	x24, [x19, #1160]
 308:	str	x25, [x19, #1376]
 30c:	str	x23, [x19, #1408]
 310:	str	x28, [x19, #1400]
 314:	strh	w9, [x22, #10]
 318:	str	x8, [x19, #1192]
 31c:	str	x10, [x19, #1200]
 320:	bl	0 <_GLOBAL__sub_I_Main.cpp>
 324:	mov	x0, x22
 328:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 32c:	mov	x0, x21
 330:	mov	x1, x22
 334:	mov	x2, x20
 338:	mov	x26, x20
 33c:	bl	0 <__cxa_atexit>
 340:	ldrh	w8, [x19, #210]
 344:	movi	v0.2d, #0x0
 348:	strh	wzr, [x19, #208]
 34c:	stur	q0, [x19, #212]
 350:	and	w8, w8, #0x8000
 354:	orr	w8, w8, #0x1
 358:	stur	q0, [x19, #228]
 35c:	stur	q0, [x19, #244]
 360:	strh	w8, [x19, #210]
 364:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 368:	ldr	x8, [x8]
 36c:	add	x21, x19, #0xc8
 370:	adrp	x20, 0 <_GLOBAL__sub_I_Main.cpp>
 374:	adrp	x23, 0 <_GLOBAL__sub_I_Main.cpp>
 378:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 37c:	add	x9, x19, #0x118
 380:	add	x10, x19, #0x148
 384:	add	x20, x20, #0x0
 388:	add	x23, x23, #0x0
 38c:	add	x24, x8, #0x10
 390:	add	x1, x1, #0x0
 394:	mov	w2, #0x1                   	// #1
 398:	mov	x0, x21
 39c:	str	wzr, [x21, #60]
 3a0:	str	x9, [x19, #264]
 3a4:	stp	x10, x10, [x19, #296]
 3a8:	str	d9, [x19, #312]
 3ac:	str	wzr, [x19, #320]
 3b0:	stp	x27, xzr, [x19, #280]
 3b4:	str	d8, [x19, #272]
 3b8:	stp	xzr, xzr, [x19, #336]
 3bc:	str	x24, [x19, #200]
 3c0:	stp	xzr, xzr, [x19, #352]
 3c4:	stp	xzr, xzr, [x19, #368]
 3c8:	str	x25, [x19, #384]
 3cc:	stp	x23, x20, [x19, #408]
 3d0:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 3d4:	ldrh	w11, [x19, #210]
 3d8:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 3dc:	add	x8, x8, #0x0
 3e0:	mov	w9, #0x1a                  	// #26
 3e4:	adrp	x10, 0 <_GLOBAL__sub_I_Main.cpp>
 3e8:	add	x10, x10, #0x0
 3ec:	stp	x8, x9, [x19, #232]
 3f0:	mov	w8, #0x9                   	// #9
 3f4:	stp	x10, x8, [x19, #248]
 3f8:	and	w8, w11, #0xfffffe7f
 3fc:	orr	w8, w8, #0x100
 400:	mov	x0, x21
 404:	strh	w8, [x19, #210]
 408:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 40c:	adrp	x22, 0 <_GLOBAL__sub_I_Main.cpp>
 410:	add	x22, x22, #0x0
 414:	mov	x0, x22
 418:	mov	x1, x21
 41c:	mov	x2, x26
 420:	bl	0 <__cxa_atexit>
 424:	strh	wzr, [x19, #432]
 428:	add	x21, x19, #0x1a8
 42c:	ldrh	w8, [x21, #10]
 430:	movi	v0.2d, #0x0
 434:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 438:	stur	q0, [x21, #12]
 43c:	and	w8, w8, #0x8000
 440:	orr	w8, w8, #0x1
 444:	strh	w8, [x21, #10]
 448:	add	x8, x19, #0x1f8
 44c:	stur	q0, [x21, #28]
 450:	stur	q0, [x21, #44]
 454:	str	wzr, [x21, #60]
 458:	str	x8, [x19, #488]
 45c:	add	x8, x19, #0x228
 460:	add	x1, x1, #0x0
 464:	mov	w2, #0x1                   	// #1
 468:	mov	x0, x21
 46c:	str	x8, [x19, #520]
 470:	str	x8, [x19, #528]
 474:	str	d9, [x19, #536]
 478:	str	wzr, [x19, #544]
 47c:	stp	x27, xzr, [x19, #504]
 480:	str	d8, [x19, #496]
 484:	str	xzr, [x19, #560]
 488:	str	xzr, [x19, #576]
 48c:	str	xzr, [x19, #568]
 490:	str	x24, [x19, #424]
 494:	str	xzr, [x19, #600]
 498:	str	xzr, [x19, #584]
 49c:	str	xzr, [x19, #592]
 4a0:	str	x25, [x19, #608]
 4a4:	str	x20, [x19, #640]
 4a8:	str	x23, [x19, #632]
 4ac:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 4b0:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 4b4:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 4b8:	add	x8, x8, #0x0
 4bc:	mov	w24, #0x1f                  	// #31
 4c0:	add	x9, x9, #0x0
 4c4:	mov	w10, #0xa                   	// #10
 4c8:	stp	x8, x24, [x19, #456]
 4cc:	stp	x9, x10, [x19, #472]
 4d0:	ldrh	w8, [x21, #10]
 4d4:	mov	x0, x21
 4d8:	and	w8, w8, #0xfffffe7f
 4dc:	orr	w8, w8, #0x100
 4e0:	strh	w8, [x21, #10]
 4e4:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 4e8:	mov	x0, x22
 4ec:	mov	x1, x21
 4f0:	mov	x2, x26
 4f4:	bl	0 <__cxa_atexit>
 4f8:	ldrh	w8, [x19, #10]
 4fc:	movi	v0.2d, #0x0
 500:	add	x9, x19, #0x80
 504:	strh	wzr, [x19, #8]
 508:	and	w8, w8, #0x8000
 50c:	strh	w8, [x19, #10]
 510:	mov	x8, x19
 514:	stur	q0, [x19, #12]
 518:	stur	q0, [x19, #28]
 51c:	stur	q0, [x19, #44]
 520:	str	wzr, [x19, #60]
 524:	str	x27, [x8, #80]!
 528:	stp	xzr, x9, [x19, #88]
 52c:	str	x9, [x19, #104]
 530:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 534:	ldr	x9, [x9]
 538:	mov	w10, #0x1                   	// #1
 53c:	adrp	x1, 0 <_GLOBAL__sub_I_Main.cpp>
 540:	add	x1, x1, #0x0
 544:	add	x9, x9, #0x10
 548:	str	x9, [x19, #144]
 54c:	adrp	x9, 0 <_ZTVN4llvm2cl3optIbLb0ENS0_6parserIbEEEE>
 550:	ldr	x9, [x9]
 554:	strb	w10, [x19, #153]
 558:	adrp	x10, 0 <_ZTVN4llvm2cl6parserIbEE>
 55c:	ldr	x10, [x10]
 560:	add	x9, x9, #0x10
 564:	str	x9, [x19]
 568:	adrp	x9, 0 <_GLOBAL__sub_I_Main.cpp>
 56c:	add	x10, x10, #0x10
 570:	str	x10, [x19, #160]
 574:	adrp	x10, 0 <_GLOBAL__sub_I_Main.cpp>
 578:	add	x9, x9, #0x0
 57c:	add	x10, x10, #0x0
 580:	mov	w2, #0x10                  	// #16
 584:	mov	x0, x19
 588:	str	d9, [x19, #112]
 58c:	str	wzr, [x19, #120]
 590:	str	d8, [x19, #72]
 594:	strb	wzr, [x19, #136]
 598:	strb	wzr, [x19, #152]
 59c:	str	x8, [x19, #64]
 5a0:	stp	x10, x9, [x19, #184]
 5a4:	bl	0 <_ZN4llvm2cl6Option9setArgStrENS_9StringRefE>
 5a8:	adrp	x8, 0 <_GLOBAL__sub_I_Main.cpp>
 5ac:	add	x8, x8, #0x0
 5b0:	mov	x0, x19
 5b4:	stp	x8, x24, [x19, #32]
 5b8:	bl	0 <_ZN4llvm2cl6Option11addArgumentEv>
 5bc:	adrp	x0, 0 <_GLOBAL__sub_I_Main.cpp>
 5c0:	add	x0, x0, #0x0
 5c4:	mov	x1, x19
 5c8:	mov	x2, x26
 5cc:	bl	0 <__cxa_atexit>
 5d0:	ldp	x20, x19, [sp, #144]
 5d4:	ldp	x22, x21, [sp, #128]
 5d8:	ldp	x24, x23, [sp, #112]
 5dc:	ldp	x26, x25, [sp, #96]
 5e0:	ldp	x28, x27, [sp, #80]
 5e4:	ldp	x29, x30, [sp, #64]
 5e8:	ldp	d9, d8, [sp, #48]
 5ec:	add	sp, sp, #0xa0
 5f0:	ret

Record.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm5RecTy4dumpEv>:
       0:	sub	sp, sp, #0x50
       4:	stp	x29, x30, [sp, #32]
       8:	str	x21, [sp, #48]
       c:	stp	x20, x19, [sp, #64]
      10:	add	x29, sp, #0x20
      14:	mov	x19, x0
      18:	bl	0 <_ZN4llvm4errsEv>
      1c:	ldr	x8, [x19]
      20:	mov	x20, x0
      24:	mov	x0, x19
      28:	mov	x21, sp
      2c:	ldr	x9, [x8, #16]
      30:	mov	x8, sp
      34:	blr	x9
      38:	ldp	x1, x2, [sp]
      3c:	mov	x0, x20
      40:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      44:	ldr	x0, [sp]
      48:	add	x8, x21, #0x10
      4c:	cmp	x0, x8
      50:	b.eq	58 <_ZNK4llvm5RecTy4dumpEv+0x58>  // b.none
      54:	bl	0 <_ZdlPv>
      58:	ldp	x20, x19, [sp, #64]
      5c:	ldr	x21, [sp, #48]
      60:	ldp	x29, x30, [sp, #32]
      64:	add	sp, sp, #0x50
      68:	ret

000000000000006c <_ZN4llvm5RecTy9getListTyEv>:
      6c:	stp	x29, x30, [sp, #-32]!
      70:	str	x19, [sp, #16]
      74:	mov	x29, sp
      78:	mov	x19, x0
      7c:	ldr	x0, [x0, #16]
      80:	cbz	x0, 90 <_ZN4llvm5RecTy9getListTyEv+0x24>
      84:	ldr	x19, [sp, #16]
      88:	ldp	x29, x30, [sp], #32
      8c:	ret
      90:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
      94:	add	x0, x0, #0x0
      98:	mov	w1, #0x20                  	// #32
      9c:	mov	w2, #0x4                   	// #4
      a0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
      a4:	adrp	x9, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x40>
      a8:	ldr	x9, [x9]
      ac:	mov	w8, #0x5                   	// #5
      b0:	str	w8, [x0, #8]
      b4:	stp	xzr, x19, [x0, #16]
      b8:	add	x8, x9, #0x10
      bc:	str	x8, [x0]
      c0:	str	x0, [x19, #16]
      c4:	ldr	x19, [sp, #16]
      c8:	ldp	x29, x30, [sp], #32
      cc:	ret

00000000000000d0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_>:
      d0:	stp	x29, x30, [sp, #-16]!
      d4:	mov	x29, sp
      d8:	cbz	x1, f4 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x24>
      dc:	ldr	w8, [x0, #8]
      e0:	ldr	w9, [x1, #8]
      e4:	cmp	w8, w9
      e8:	cset	w0, eq  // eq = none
      ec:	ldp	x29, x30, [sp], #16
      f0:	ret
      f4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
      f8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
      fc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     100:	add	x0, x0, #0x0
     104:	add	x1, x1, #0x0
     108:	add	x3, x3, #0x0
     10c:	mov	w2, #0x46                  	// #70
     110:	bl	0 <__assert_fail>

0000000000000114 <_ZNK4llvm5RecTy7typeIsAEPKS0_>:
     114:	cmp	x0, x1
     118:	cset	w0, eq  // eq = none
     11c:	ret

0000000000000120 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     120:	stp	x29, x30, [sp, #-16]!
     124:	mov	x29, sp
     128:	cbz	x1, 170 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>
     12c:	ldr	w9, [x0, #8]
     130:	ldr	w8, [x1, #8]
     134:	mov	w0, #0x1                   	// #1
     138:	cmp	w9, w8
     13c:	b.eq	15c <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     140:	cmp	w8, #0x3
     144:	b.eq	15c <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.none
     148:	cmp	w8, #0x1
     14c:	b.ne	164 <_ZNK4llvm8BitRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x44>  // b.any
     150:	ldr	w8, [x1, #24]
     154:	cmp	w8, #0x1
     158:	cset	w0, eq  // eq = none
     15c:	ldp	x29, x30, [sp], #16
     160:	ret
     164:	mov	w0, wzr
     168:	ldp	x29, x30, [sp], #16
     16c:	ret
     170:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     174:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     178:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     17c:	add	x0, x0, #0x0
     180:	add	x1, x1, #0x0
     184:	add	x3, x3, #0x0
     188:	mov	w2, #0x46                  	// #70
     18c:	bl	0 <__assert_fail>

0000000000000190 <_ZN4llvm9BitsRecTy3getEj>:
     190:	stp	x29, x30, [sp, #-48]!
     194:	stp	x22, x21, [sp, #16]
     198:	stp	x20, x19, [sp, #32]
     19c:	mov	x29, sp
     1a0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
     1a4:	add	x8, x8, #0x0
     1a8:	ldarb	w8, [x8]
     1ac:	mov	w19, w0
     1b0:	tbz	w8, #0, 26c <_ZN4llvm9BitsRecTy3getEj+0xdc>
     1b4:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     1b8:	add	x20, x20, #0x0
     1bc:	ldp	x22, x8, [x20]
     1c0:	mov	w21, w19
     1c4:	sub	x9, x8, x22
     1c8:	asr	x10, x9, #3
     1cc:	cmp	x10, x21
     1d0:	b.hi	20c <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.pmore
     1d4:	add	w9, w19, #0x1
     1d8:	cmp	x10, x9
     1dc:	b.cs	1f4 <_ZN4llvm9BitsRecTy3getEj+0x64>  // b.hs, b.nlast
     1e0:	sub	x1, x9, x10
     1e4:	mov	x0, x20
     1e8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     1ec:	ldr	x22, [x20]
     1f0:	b	20c <_ZN4llvm9BitsRecTy3getEj+0x7c>
     1f4:	b.ls	20c <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.plast
     1f8:	add	x9, x22, x9, lsl #3
     1fc:	cmp	x9, x8
     200:	b.eq	20c <_ZN4llvm9BitsRecTy3getEj+0x7c>  // b.none
     204:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
     208:	str	x9, [x8]
     20c:	ldr	x0, [x22, x21, lsl #3]
     210:	cbz	x0, 224 <_ZN4llvm9BitsRecTy3getEj+0x94>
     214:	ldp	x20, x19, [sp, #32]
     218:	ldp	x22, x21, [sp, #16]
     21c:	ldp	x29, x30, [sp], #48
     220:	ret
     224:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     228:	add	x0, x0, #0x0
     22c:	mov	w1, #0x20                  	// #32
     230:	mov	w2, #0x4                   	// #4
     234:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     238:	str	xzr, [x0, #16]
     23c:	adrp	x9, f0 <_ZNK4llvm5RecTy19typeIsConvertibleToEPKS0_+0x20>
     240:	ldr	x9, [x9]
     244:	mov	w8, #0x1                   	// #1
     248:	str	w8, [x0, #8]
     24c:	str	w19, [x0, #24]
     250:	add	x8, x9, #0x10
     254:	str	x8, [x0]
     258:	str	x0, [x22, x21, lsl #3]
     25c:	ldp	x20, x19, [sp, #32]
     260:	ldp	x22, x21, [sp, #16]
     264:	ldp	x29, x30, [sp], #48
     268:	ret
     26c:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
     270:	add	x20, x20, #0x0
     274:	mov	x0, x20
     278:	bl	0 <__cxa_guard_acquire>
     27c:	cbz	w0, 1b4 <_ZN4llvm9BitsRecTy3getEj+0x24>
     280:	mov	x1, x20
     284:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     288:	adrp	x2, 0 <__dso_handle>
     28c:	stp	xzr, xzr, [x20, #200]
     290:	str	xzr, [x1, #192]!
     294:	add	x0, x0, #0x0
     298:	add	x2, x2, #0x0
     29c:	bl	0 <__cxa_atexit>
     2a0:	mov	x0, x20
     2a4:	bl	0 <__cxa_guard_release>
     2a8:	b	1b4 <_ZN4llvm9BitsRecTy3getEj+0x24>

00000000000002ac <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev>:
     2ac:	sub	sp, sp, #0x80
     2b0:	stp	x29, x30, [sp, #80]
     2b4:	stp	x22, x21, [sp, #96]
     2b8:	stp	x20, x19, [sp, #112]
     2bc:	add	x29, sp, #0x50
     2c0:	ldr	w9, [x0, #24]
     2c4:	add	x10, sp, #0x28
     2c8:	mov	x19, x8
     2cc:	add	x8, x10, #0x15
     2d0:	cbz	w9, 308 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x5c>
     2d4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
     2d8:	movk	x10, #0xcccd
     2dc:	mov	w11, #0xa                   	// #10
     2e0:	mov	x20, x8
     2e4:	umulh	x12, x9, x10
     2e8:	lsr	x12, x12, #3
     2ec:	msub	w13, w12, w11, w9
     2f0:	orr	w13, w13, #0x30
     2f4:	cmp	x9, #0x9
     2f8:	strb	w13, [x20, #-1]!
     2fc:	mov	x9, x12
     300:	b.hi	2e4 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x38>  // b.pmore
     304:	b	314 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x68>
     308:	mov	w9, #0x30                  	// #48
     30c:	add	x20, x10, #0x14
     310:	strb	w9, [sp, #60]
     314:	add	x9, sp, #0x8
     318:	sub	x21, x8, x20
     31c:	add	x22, x9, #0x10
     320:	cmp	x21, #0x10
     324:	mov	x0, x22
     328:	str	x22, [sp, #8]
     32c:	stur	x21, [x29, #-8]
     330:	b.cc	350 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xa4>  // b.lo, b.ul, b.last
     334:	add	x0, sp, #0x8
     338:	sub	x1, x29, #0x8
     33c:	mov	x2, xzr
     340:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     344:	ldur	x8, [x29, #-8]
     348:	str	x0, [sp, #8]
     34c:	str	x8, [sp, #24]
     350:	cbz	x21, 374 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xc8>
     354:	cmp	x21, #0x1
     358:	b.ne	368 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xbc>  // b.any
     35c:	ldrb	w8, [x20]
     360:	strb	w8, [x0]
     364:	b	374 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xc8>
     368:	mov	x1, x20
     36c:	mov	x2, x21
     370:	bl	0 <memcpy>
     374:	ldur	x8, [x29, #-8]
     378:	ldr	x9, [sp, #8]
     37c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     380:	add	x3, x3, #0x0
     384:	add	x0, sp, #0x8
     388:	mov	w4, #0x5                   	// #5
     38c:	mov	x1, xzr
     390:	mov	x2, xzr
     394:	str	x8, [sp, #16]
     398:	strb	wzr, [x9, x8]
     39c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     3a0:	add	x8, sp, #0x28
     3a4:	add	x20, x8, #0x10
     3a8:	str	x20, [sp, #40]
     3ac:	mov	x8, x0
     3b0:	ldr	x9, [x8], #16
     3b4:	cmp	x9, x8
     3b8:	b.eq	3cc <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x120>  // b.none
     3bc:	str	x9, [sp, #40]
     3c0:	ldr	x9, [x0, #16]
     3c4:	str	x9, [sp, #56]
     3c8:	b	3d4 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x128>
     3cc:	ldr	q0, [x9]
     3d0:	str	q0, [x20]
     3d4:	ldr	x9, [x0, #8]
     3d8:	str	x9, [sp, #48]
     3dc:	stp	x8, xzr, [x0]
     3e0:	strb	wzr, [x0, #16]
     3e4:	ldr	x8, [sp, #48]
     3e8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     3ec:	cmp	x8, x9
     3f0:	b.eq	47c <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1d0>  // b.none
     3f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     3f8:	add	x1, x1, #0x0
     3fc:	add	x0, sp, #0x28
     400:	mov	w2, #0x1                   	// #1
     404:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     408:	add	x9, x19, #0x10
     40c:	str	x9, [x19]
     410:	mov	x8, x0
     414:	ldr	x10, [x8], #16
     418:	cmp	x10, x8
     41c:	b.eq	430 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x184>  // b.none
     420:	str	x10, [x19]
     424:	ldr	x9, [x0, #16]
     428:	str	x9, [x19, #16]
     42c:	b	438 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x18c>
     430:	ldr	q0, [x10]
     434:	str	q0, [x9]
     438:	ldr	x9, [x0, #8]
     43c:	str	x9, [x19, #8]
     440:	stp	x8, xzr, [x0]
     444:	strb	wzr, [x0, #16]
     448:	ldr	x0, [sp, #40]
     44c:	cmp	x0, x20
     450:	b.eq	458 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1ac>  // b.none
     454:	bl	0 <_ZdlPv>
     458:	ldr	x0, [sp, #8]
     45c:	cmp	x0, x22
     460:	b.eq	468 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1bc>  // b.none
     464:	bl	0 <_ZdlPv>
     468:	ldp	x20, x19, [sp, #112]
     46c:	ldp	x22, x21, [sp, #96]
     470:	ldp	x29, x30, [sp, #80]
     474:	add	sp, sp, #0x80
     478:	ret
     47c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     480:	add	x0, x0, #0x0
     484:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000488 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     488:	stp	x29, x30, [sp, #-16]!
     48c:	mov	x29, sp
     490:	cbz	x1, 4f0 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x68>
     494:	ldr	w9, [x0, #8]
     498:	ldr	w8, [x1, #8]
     49c:	cmp	w9, w8
     4a0:	b.ne	4c4 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>  // b.any
     4a4:	cmp	w9, #0x1
     4a8:	b.ne	510 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x88>  // b.any
     4ac:	ldr	w8, [x1, #24]
     4b0:	ldr	w9, [x0, #24]
     4b4:	cmp	w8, w9
     4b8:	cset	w0, eq  // eq = none
     4bc:	ldp	x29, x30, [sp], #16
     4c0:	ret
     4c4:	cbnz	w8, 4e0 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x58>
     4c8:	ldr	w9, [x0, #24]
     4cc:	cmp	w9, #0x1
     4d0:	b.ne	4e0 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x58>  // b.any
     4d4:	mov	w0, #0x1                   	// #1
     4d8:	ldp	x29, x30, [sp], #16
     4dc:	ret
     4e0:	cmp	w8, #0x3
     4e4:	cset	w0, eq  // eq = none
     4e8:	ldp	x29, x30, [sp], #16
     4ec:	ret
     4f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     4f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     4f8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     4fc:	add	x0, x0, #0x0
     500:	add	x1, x1, #0x0
     504:	add	x3, x3, #0x0
     508:	mov	w2, #0x46                  	// #70
     50c:	bl	0 <__assert_fail>
     510:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     514:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     518:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     51c:	add	x0, x0, #0x0
     520:	add	x1, x1, #0x0
     524:	add	x3, x3, #0x0
     528:	mov	w2, #0x108                 	// #264
     52c:	bl	0 <__assert_fail>

0000000000000530 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE>:
     530:	stp	x29, x30, [sp, #-16]!
     534:	mov	x29, sp
     538:	cbz	x1, 56c <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x3c>
     53c:	ldr	w8, [x1, #8]
     540:	cmp	w8, #0x1
     544:	b.ne	560 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x30>  // b.any
     548:	ldr	w8, [x1, #24]
     54c:	ldr	w9, [x0, #24]
     550:	cmp	w8, w9
     554:	cset	w0, eq  // eq = none
     558:	ldp	x29, x30, [sp], #16
     55c:	ret
     560:	mov	w0, wzr
     564:	ldp	x29, x30, [sp], #16
     568:	ret
     56c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     570:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     574:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     578:	add	x0, x0, #0x0
     57c:	add	x1, x1, #0x0
     580:	add	x3, x3, #0x0
     584:	mov	w2, #0x69                  	// #105
     588:	bl	0 <__assert_fail>

000000000000058c <_ZNK4llvm8IntRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     58c:	ldr	w8, [x1, #8]
     590:	cmp	w8, #0x2
     594:	cset	w9, cc  // cc = lo, ul, last
     598:	cmp	w8, #0x3
     59c:	cset	w8, eq  // eq = none
     5a0:	orr	w0, w9, w8
     5a4:	ret

00000000000005a8 <_ZNK4llvm9CodeRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     5a8:	ldr	w8, [x1, #8]
     5ac:	cmp	w8, #0x2
     5b0:	cset	w9, eq  // eq = none
     5b4:	cmp	w8, #0x4
     5b8:	cset	w8, eq  // eq = none
     5bc:	orr	w0, w9, w8
     5c0:	ret

00000000000005c4 <_ZNK4llvm11StringRecTy11getAsStringB5cxx11Ev>:
     5c4:	mov	w9, #0x7473                	// #29811
     5c8:	movk	w9, #0x6972, lsl #16
     5cc:	mov	x10, x8
     5d0:	mov	w11, #0x676e                	// #26478
     5d4:	mov	w12, #0x6                   	// #6
     5d8:	str	w9, [x10, #16]!
     5dc:	strh	w11, [x8, #20]
     5e0:	stp	x10, x12, [x8]
     5e4:	strb	wzr, [x8, #22]
     5e8:	ret

00000000000005ec <_ZNK4llvm11StringRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     5ec:	ldr	w8, [x1, #8]
     5f0:	cmp	w8, #0x4
     5f4:	cset	w9, eq  // eq = none
     5f8:	cmp	w8, #0x2
     5fc:	cset	w8, eq  // eq = none
     600:	orr	w0, w9, w8
     604:	ret

0000000000000608 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev>:
     608:	sub	sp, sp, #0x60
     60c:	stp	x29, x30, [sp, #64]
     610:	stp	x20, x19, [sp, #80]
     614:	add	x29, sp, #0x40
     618:	ldr	x0, [x0, #24]
     61c:	mov	x19, x8
     620:	mov	x8, sp
     624:	ldr	x9, [x0]
     628:	ldr	x9, [x9, #16]
     62c:	blr	x9
     630:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     634:	add	x3, x3, #0x0
     638:	mov	x0, sp
     63c:	mov	w4, #0x5                   	// #5
     640:	mov	x1, xzr
     644:	mov	x2, xzr
     648:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     64c:	add	x8, sp, #0x20
     650:	add	x20, x8, #0x10
     654:	str	x20, [sp, #32]
     658:	mov	x8, x0
     65c:	ldr	x9, [x8], #16
     660:	cmp	x9, x8
     664:	b.eq	678 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x70>  // b.none
     668:	str	x9, [sp, #32]
     66c:	ldr	x9, [x0, #16]
     670:	str	x9, [sp, #48]
     674:	b	680 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x78>
     678:	ldr	q0, [x9]
     67c:	str	q0, [x20]
     680:	ldr	x9, [x0, #8]
     684:	str	x9, [sp, #40]
     688:	stp	x8, xzr, [x0]
     68c:	strb	wzr, [x0, #16]
     690:	ldr	x8, [sp, #40]
     694:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     698:	cmp	x8, x9
     69c:	b.eq	72c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x124>  // b.none
     6a0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     6a4:	add	x1, x1, #0x0
     6a8:	add	x0, sp, #0x20
     6ac:	mov	w2, #0x1                   	// #1
     6b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     6b4:	add	x9, x19, #0x10
     6b8:	str	x9, [x19]
     6bc:	mov	x8, x0
     6c0:	ldr	x10, [x8], #16
     6c4:	cmp	x10, x8
     6c8:	b.eq	6dc <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xd4>  // b.none
     6cc:	str	x10, [x19]
     6d0:	ldr	x9, [x0, #16]
     6d4:	str	x9, [x19, #16]
     6d8:	b	6e4 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xdc>
     6dc:	ldr	q0, [x10]
     6e0:	str	q0, [x9]
     6e4:	ldr	x9, [x0, #8]
     6e8:	str	x9, [x19, #8]
     6ec:	stp	x8, xzr, [x0]
     6f0:	strb	wzr, [x0, #16]
     6f4:	ldr	x0, [sp, #32]
     6f8:	cmp	x0, x20
     6fc:	b.eq	704 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0xfc>  // b.none
     700:	bl	0 <_ZdlPv>
     704:	ldr	x0, [sp]
     708:	mov	x8, sp
     70c:	add	x8, x8, #0x10
     710:	cmp	x0, x8
     714:	b.eq	71c <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x114>  // b.none
     718:	bl	0 <_ZdlPv>
     71c:	ldp	x20, x19, [sp, #80]
     720:	ldp	x29, x30, [sp, #64]
     724:	add	sp, sp, #0x60
     728:	ret
     72c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     730:	add	x0, x0, #0x0
     734:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000000738 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
     738:	stp	x29, x30, [sp, #-16]!
     73c:	mov	x29, sp
     740:	cbz	x1, 774 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x3c>
     744:	ldr	w8, [x1, #8]
     748:	cmp	w8, #0x5
     74c:	b.ne	768 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x30>  // b.any
     750:	ldr	x0, [x0, #24]
     754:	ldr	x1, [x1, #24]
     758:	ldr	x8, [x0]
     75c:	ldr	x2, [x8, #24]
     760:	ldp	x29, x30, [sp], #16
     764:	br	x2
     768:	mov	w0, wzr
     76c:	ldp	x29, x30, [sp], #16
     770:	ret
     774:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     778:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     77c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     780:	add	x0, x0, #0x0
     784:	add	x1, x1, #0x0
     788:	add	x3, x3, #0x0
     78c:	mov	w2, #0x69                  	// #105
     790:	bl	0 <__assert_fail>

0000000000000794 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE>:
     794:	stp	x29, x30, [sp, #-16]!
     798:	mov	x29, sp
     79c:	cbz	x1, 7d0 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x3c>
     7a0:	ldr	w8, [x1, #8]
     7a4:	cmp	w8, #0x5
     7a8:	b.ne	7c4 <_ZNK4llvm9ListRecTy7typeIsAEPKNS_5RecTyE+0x30>  // b.any
     7ac:	ldr	x0, [x0, #24]
     7b0:	ldr	x1, [x1, #24]
     7b4:	ldr	x8, [x0]
     7b8:	ldr	x2, [x8, #32]
     7bc:	ldp	x29, x30, [sp], #16
     7c0:	br	x2
     7c4:	mov	w0, wzr
     7c8:	ldp	x29, x30, [sp], #16
     7cc:	ret
     7d0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     7d4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     7d8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     7dc:	add	x0, x0, #0x0
     7e0:	add	x1, x1, #0x0
     7e4:	add	x3, x3, #0x0
     7e8:	mov	w2, #0x69                  	// #105
     7ec:	bl	0 <__assert_fail>

00000000000007f0 <_ZNK4llvm8DagRecTy11getAsStringB5cxx11Ev>:
     7f0:	mov	w9, #0x6164                	// #24932
     7f4:	movk	w9, #0x67, lsl #16
     7f8:	mov	x10, x8
     7fc:	mov	w11, #0x3                   	// #3
     800:	str	w9, [x10, #16]!
     804:	stp	x10, x11, [x8]
     808:	ret

000000000000080c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>:
     80c:	sub	sp, sp, #0x110
     810:	stp	x29, x30, [sp, #192]
     814:	str	x28, [sp, #208]
     818:	stp	x24, x23, [sp, #224]
     81c:	stp	x22, x21, [sp, #240]
     820:	stp	x20, x19, [sp, #256]
     824:	add	x29, sp, #0xc0
     828:	cbz	x1, 880 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x74>
     82c:	ldr	x9, [x0]
     830:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
     834:	ldr	d0, [x11]
     838:	mov	x8, x1
     83c:	ldr	x23, [x9, #104]
     840:	sub	x10, x29, #0x30
     844:	sbfx	x21, x8, #0, #61
     848:	mov	x19, x0
     84c:	lsl	x20, x1, #3
     850:	add	x1, x10, #0x10
     854:	cmp	x21, #0x4
     858:	stur	x1, [x29, #-48]
     85c:	stur	d0, [x29, #-40]
     860:	b.ls	8d4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xc8>  // b.plast
     864:	sub	x0, x29, #0x30
     868:	mov	w3, #0x8                   	// #8
     86c:	mov	x2, x21
     870:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     874:	ldur	x1, [x29, #-48]
     878:	ldur	w8, [x29, #-40]
     87c:	b	8d8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xcc>
     880:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
     884:	add	x19, x19, #0x0
     888:	ldarb	w8, [x19]
     88c:	add	x20, x19, #0x2e0
     890:	tbnz	w8, #0, e24 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x618>
     894:	mov	x0, x19
     898:	bl	0 <__cxa_guard_acquire>
     89c:	cbz	w0, e24 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x618>
     8a0:	str	xzr, [x19, #760]
     8a4:	str	xzr, [x19, #752]
     8a8:	adrp	x9, 240 <_ZN4llvm9BitsRecTy3getEj+0xb0>
     8ac:	ldr	x9, [x9]
     8b0:	mov	w8, #0x7                   	// #7
     8b4:	str	w8, [x19, #744]
     8b8:	mov	x0, x19
     8bc:	add	x8, x9, #0x10
     8c0:	add	x20, x19, #0x2e0
     8c4:	str	x8, [x19, #736]
     8c8:	str	wzr, [x19, #768]
     8cc:	bl	0 <__cxa_guard_release>
     8d0:	b	e24 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x618>
     8d4:	mov	w8, wzr
     8d8:	add	x0, x1, w8, uxtw #3
     8dc:	mov	x1, x19
     8e0:	mov	x2, x20
     8e4:	bl	0 <memcpy>
     8e8:	ldp	w8, w9, [x29, #-40]
     8ec:	add	x20, x21, x8
     8f0:	cmp	x20, x9
     8f4:	b.hi	fb8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x7ac>  // b.pmore
     8f8:	stur	w20, [x29, #-40]
     8fc:	cbz	w20, d8c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x580>
     900:	ldur	x19, [x29, #-48]
     904:	and	x24, x20, #0xffffffff
     908:	mov	w8, #0x7e                  	// #126
     90c:	clz	x9, x24
     910:	add	x1, x19, w20, uxtw #3
     914:	sub	x2, x8, x9, lsl #1
     918:	mov	x0, x19
     91c:	mov	x3, xzr
     920:	bl	f92c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>
     924:	cmp	w20, #0x11
     928:	b.cc	958 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x14c>  // b.lo, b.ul, b.last
     92c:	mov	x20, x19
     930:	ldr	x8, [x20, #8]!
     934:	ldr	x1, [x19]
     938:	ldr	x0, [x8]
     93c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     940:	tbz	w0, #0, 9d8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1cc>
     944:	ldr	q0, [x19]
     948:	ext	v1.16b, v0.16b, v0.16b, #8
     94c:	str	q1, [x19]
     950:	mov	x1, v0.d[1]
     954:	b	9e8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1dc>
     958:	cmp	w20, #0x1
     95c:	b.eq	d8c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x580>  // b.none
     960:	lsl	x8, x24, #3
     964:	mov	x21, xzr
     968:	sub	x22, x8, #0x8
     96c:	b	988 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x17c>
     970:	mov	x0, x20
     974:	mov	x1, xzr
     978:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     97c:	add	x21, x21, #0x8
     980:	cmp	x22, x21
     984:	b.eq	d8c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x580>  // b.none
     988:	add	x24, x19, x21
     98c:	mov	x20, x24
     990:	ldr	x8, [x20, #8]!
     994:	ldr	x1, [x19]
     998:	ldr	x0, [x8]
     99c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     9a0:	tbz	w0, #0, 970 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x164>
     9a4:	ldr	x24, [x24, #8]
     9a8:	subs	x2, x20, x19
     9ac:	b.eq	9c4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1b8>  // b.none
     9b0:	sub	x8, x19, x2
     9b4:	add	x8, x8, x21
     9b8:	add	x0, x8, #0x10
     9bc:	mov	x1, x19
     9c0:	bl	0 <memmove>
     9c4:	str	x24, [x19]
     9c8:	add	x21, x21, #0x8
     9cc:	cmp	x22, x21
     9d0:	b.ne	988 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x17c>  // b.any
     9d4:	b	d8c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x580>
     9d8:	mov	x0, x20
     9dc:	mov	x1, xzr
     9e0:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     9e4:	ldr	x1, [x19]
     9e8:	mov	x21, x19
     9ec:	ldr	x8, [x21, #16]!
     9f0:	ldr	x0, [x8]
     9f4:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     9f8:	tbz	w0, #0, a10 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x204>
     9fc:	ldr	q0, [x19]
     a00:	ldr	x1, [x19, #16]
     a04:	str	q0, [x20]
     a08:	str	x1, [x19]
     a0c:	b	a20 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x214>
     a10:	mov	x0, x21
     a14:	mov	x1, xzr
     a18:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     a1c:	ldr	x1, [x19]
     a20:	mov	x21, x19
     a24:	ldr	x8, [x21, #24]!
     a28:	ldr	x0, [x8]
     a2c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     a30:	tbz	w0, #0, a4c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x240>
     a34:	ldp	x8, x1, [x19, #16]
     a38:	ldr	q0, [x19]
     a3c:	str	x8, [x20, #16]
     a40:	str	q0, [x20]
     a44:	str	x1, [x19]
     a48:	b	a5c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x250>
     a4c:	mov	x0, x21
     a50:	mov	x1, xzr
     a54:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     a58:	ldr	x1, [x19]
     a5c:	mov	x21, x19
     a60:	ldr	x8, [x21, #32]!
     a64:	ldr	x0, [x8]
     a68:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     a6c:	tbz	w0, #0, a84 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x278>
     a70:	ldp	q1, q0, [x19]
     a74:	ldr	x1, [x19, #32]
     a78:	stp	q1, q0, [x20]
     a7c:	str	x1, [x19]
     a80:	b	a94 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x288>
     a84:	mov	x0, x21
     a88:	mov	x1, xzr
     a8c:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     a90:	ldr	x1, [x19]
     a94:	mov	x21, x19
     a98:	ldr	x8, [x21, #40]!
     a9c:	ldr	x0, [x8]
     aa0:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     aa4:	tbz	w0, #0, ac0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2b4>
     aa8:	ldp	x8, x1, [x19, #32]
     aac:	ldp	q1, q0, [x19]
     ab0:	str	x8, [x20, #32]
     ab4:	stp	q1, q0, [x20]
     ab8:	str	x1, [x19]
     abc:	b	ad0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2c4>
     ac0:	mov	x0, x21
     ac4:	mov	x1, xzr
     ac8:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     acc:	ldr	x1, [x19]
     ad0:	mov	x21, x19
     ad4:	ldr	x8, [x21, #48]!
     ad8:	ldr	x0, [x8]
     adc:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     ae0:	tbz	w0, #0, b00 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2f4>
     ae4:	ldp	q1, q0, [x19, #16]
     ae8:	ldr	q2, [x19]
     aec:	ldr	x1, [x19, #48]
     af0:	stp	q1, q0, [x20, #16]
     af4:	str	q2, [x20]
     af8:	str	x1, [x19]
     afc:	b	b10 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x304>
     b00:	mov	x0, x21
     b04:	mov	x1, xzr
     b08:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     b0c:	ldr	x1, [x19]
     b10:	mov	x21, x19
     b14:	ldr	x8, [x21, #56]!
     b18:	ldr	x0, [x8]
     b1c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     b20:	tbz	w0, #0, b44 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x338>
     b24:	ldp	x8, x1, [x19, #48]
     b28:	ldp	q1, q0, [x19, #16]
     b2c:	ldr	q2, [x19]
     b30:	str	x8, [x20, #48]
     b34:	stp	q1, q0, [x20, #16]
     b38:	str	q2, [x20]
     b3c:	str	x1, [x19]
     b40:	b	b54 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x348>
     b44:	mov	x0, x21
     b48:	mov	x1, xzr
     b4c:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     b50:	ldr	x1, [x19]
     b54:	mov	x21, x19
     b58:	ldr	x8, [x21, #64]!
     b5c:	ldr	x0, [x8]
     b60:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     b64:	tbz	w0, #0, b84 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x378>
     b68:	ldp	q0, q1, [x19, #32]
     b6c:	ldp	q2, q3, [x19]
     b70:	ldr	x1, [x19, #64]
     b74:	stp	q0, q1, [x20, #32]
     b78:	stp	q2, q3, [x20]
     b7c:	str	x1, [x19]
     b80:	b	b94 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x388>
     b84:	mov	x0, x21
     b88:	mov	x1, xzr
     b8c:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     b90:	ldr	x1, [x19]
     b94:	mov	x21, x19
     b98:	ldr	x8, [x21, #72]!
     b9c:	ldr	x0, [x8]
     ba0:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     ba4:	tbz	w0, #0, bc4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3b8>
     ba8:	ldr	x21, [x19, #72]
     bac:	mov	w2, #0x48                  	// #72
     bb0:	mov	x0, x20
     bb4:	mov	x1, x19
     bb8:	bl	0 <memmove>
     bbc:	str	x21, [x19]
     bc0:	b	bd4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3c8>
     bc4:	mov	x0, x21
     bc8:	mov	x1, xzr
     bcc:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     bd0:	ldr	x21, [x19]
     bd4:	mov	x22, x19
     bd8:	ldr	x8, [x22, #80]!
     bdc:	mov	x1, x21
     be0:	ldr	x0, [x8]
     be4:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     be8:	tbz	w0, #0, c08 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3fc>
     bec:	ldr	x21, [x19, #80]
     bf0:	mov	w2, #0x50                  	// #80
     bf4:	mov	x0, x20
     bf8:	mov	x1, x19
     bfc:	bl	0 <memmove>
     c00:	str	x21, [x19]
     c04:	b	c18 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x40c>
     c08:	mov	x0, x22
     c0c:	mov	x1, xzr
     c10:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     c14:	ldr	x21, [x19]
     c18:	mov	x22, x19
     c1c:	ldr	x8, [x22, #88]!
     c20:	mov	x1, x21
     c24:	ldr	x0, [x8]
     c28:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     c2c:	tbz	w0, #0, c4c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x440>
     c30:	ldr	x21, [x19, #88]
     c34:	mov	w2, #0x58                  	// #88
     c38:	mov	x0, x20
     c3c:	mov	x1, x19
     c40:	bl	0 <memmove>
     c44:	str	x21, [x19]
     c48:	b	c5c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x450>
     c4c:	mov	x0, x22
     c50:	mov	x1, xzr
     c54:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     c58:	ldr	x21, [x19]
     c5c:	mov	x22, x19
     c60:	ldr	x8, [x22, #96]!
     c64:	mov	x1, x21
     c68:	ldr	x0, [x8]
     c6c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     c70:	tbz	w0, #0, c90 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x484>
     c74:	ldr	x21, [x19, #96]
     c78:	mov	w2, #0x60                  	// #96
     c7c:	mov	x0, x20
     c80:	mov	x1, x19
     c84:	bl	0 <memmove>
     c88:	str	x21, [x19]
     c8c:	b	ca0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x494>
     c90:	mov	x0, x22
     c94:	mov	x1, xzr
     c98:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     c9c:	ldr	x21, [x19]
     ca0:	mov	x22, x19
     ca4:	ldr	x8, [x22, #104]!
     ca8:	mov	x1, x21
     cac:	ldr	x0, [x8]
     cb0:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     cb4:	tbz	w0, #0, cd4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4c8>
     cb8:	ldr	x21, [x19, #104]
     cbc:	mov	w2, #0x68                  	// #104
     cc0:	mov	x0, x20
     cc4:	mov	x1, x19
     cc8:	bl	0 <memmove>
     ccc:	str	x21, [x19]
     cd0:	b	ce4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x4d8>
     cd4:	mov	x0, x22
     cd8:	mov	x1, xzr
     cdc:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     ce0:	ldr	x21, [x19]
     ce4:	mov	x22, x19
     ce8:	ldr	x8, [x22, #112]!
     cec:	mov	x1, x21
     cf0:	ldr	x0, [x8]
     cf4:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     cf8:	tbz	w0, #0, d18 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x50c>
     cfc:	ldr	x21, [x19, #112]
     d00:	mov	w2, #0x70                  	// #112
     d04:	mov	x0, x20
     d08:	mov	x1, x19
     d0c:	bl	0 <memmove>
     d10:	str	x21, [x19]
     d14:	b	d28 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x51c>
     d18:	mov	x0, x22
     d1c:	mov	x1, xzr
     d20:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     d24:	ldr	x21, [x19]
     d28:	mov	x22, x19
     d2c:	ldr	x8, [x22, #120]!
     d30:	mov	x1, x21
     d34:	ldr	x0, [x8]
     d38:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
     d3c:	tbz	w0, #0, d5c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x550>
     d40:	ldr	x21, [x19, #120]
     d44:	mov	w2, #0x78                  	// #120
     d48:	mov	x0, x20
     d4c:	mov	x1, x19
     d50:	bl	0 <memmove>
     d54:	str	x21, [x19]
     d58:	b	d68 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x55c>
     d5c:	mov	x0, x22
     d60:	mov	x1, xzr
     d64:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     d68:	lsl	x8, x24, #3
     d6c:	add	x19, x19, #0x80
     d70:	sub	x20, x8, #0x80
     d74:	mov	x0, x19
     d78:	mov	x1, xzr
     d7c:	bl	fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>
     d80:	subs	x20, x20, #0x8
     d84:	add	x19, x19, #0x8
     d88:	b.ne	d74 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x568>  // b.any
     d8c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
     d90:	ldur	w19, [x29, #-40]
     d94:	ldr	d0, [x9]
     d98:	ldur	x20, [x29, #-48]
     d9c:	mov	x8, sp
     da0:	add	x8, x8, #0x10
     da4:	mov	x0, sp
     da8:	mov	x1, x19
     dac:	str	x8, [sp]
     db0:	str	d0, [sp, #8]
     db4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
     db8:	cbz	w19, dd4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5c8>
     dbc:	lsl	x19, x19, #3
     dc0:	ldr	x1, [x20], #8
     dc4:	mov	x0, sp
     dc8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
     dcc:	subs	x19, x19, #0x8
     dd0:	b.ne	dc0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5b4>  // b.any
     dd4:	add	x19, x23, #0x60
     dd8:	mov	x1, sp
     ddc:	add	x2, x29, #0x18
     de0:	mov	x0, x19
     de4:	str	xzr, [x29, #24]
     de8:	mov	x21, sp
     dec:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
     df0:	cbz	x0, e44 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x638>
     df4:	sub	x20, x0, #0x18
     df8:	ldr	x0, [sp]
     dfc:	add	x8, x21, #0x10
     e00:	cmp	x0, x8
     e04:	b.eq	e0c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x600>  // b.none
     e08:	bl	0 <free>
     e0c:	ldur	x0, [x29, #-48]
     e10:	sub	x8, x29, #0x30
     e14:	add	x8, x8, #0x10
     e18:	cmp	x0, x8
     e1c:	b.eq	e24 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x618>  // b.none
     e20:	bl	0 <free>
     e24:	mov	x0, x20
     e28:	ldp	x20, x19, [sp, #256]
     e2c:	ldp	x22, x21, [sp, #240]
     e30:	ldp	x24, x23, [sp, #224]
     e34:	ldr	x28, [sp, #208]
     e38:	ldp	x29, x30, [sp, #192]
     e3c:	add	sp, sp, #0x110
     e40:	ret
     e44:	ldur	w8, [x29, #-40]
     e48:	cbz	w8, ee4 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x6d8>
     e4c:	ldur	x9, [x29, #-48]
     e50:	mov	x10, xzr
     e54:	mov	x12, xzr
     e58:	and	x11, x10, #0xffffffff
     e5c:	b	e6c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x660>
     e60:	add	x12, x12, #0x1
     e64:	cmp	x12, x8
     e68:	b.cs	eb0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x6a4>  // b.hs, b.nlast
     e6c:	cmp	x12, x11
     e70:	b.eq	e60 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x654>  // b.none
     e74:	cmp	x12, x8
     e78:	b.cs	f78 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x76c>  // b.hs, b.nlast
     e7c:	ldr	x14, [x9, x10, lsl #3]
     e80:	ldr	w15, [x14, #96]
     e84:	cbz	w15, e60 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x654>
     e88:	ldr	x13, [x9, x12, lsl #3]
     e8c:	ldr	x14, [x14, #88]
     e90:	add	x15, x15, x15, lsl #1
     e94:	lsl	x15, x15, #3
     e98:	ldr	x16, [x14], #24
     e9c:	cmp	x16, x13
     ea0:	b.eq	f58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x74c>  // b.none
     ea4:	subs	x15, x15, #0x18
     ea8:	b.ne	e98 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x68c>  // b.any
     eac:	b	e60 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x654>
     eb0:	ldr	x12, [x9]
     eb4:	ldr	x10, [x9, x10, lsl #3]
     eb8:	ldr	x12, [x12, #104]
     ebc:	ldr	x10, [x10, #104]
     ec0:	cmp	x12, x10
     ec4:	b.ne	f98 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x78c>  // b.any
     ec8:	add	w10, w11, #0x1
     ecc:	cmp	w10, w8
     ed0:	mov	w10, w10
     ed4:	b.ne	e54 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x648>  // b.any
     ed8:	lsl	x8, x8, #3
     edc:	add	x1, x8, #0x28
     ee0:	b	ee8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x6dc>
     ee4:	mov	w1, #0x28                  	// #40
     ee8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     eec:	add	x0, x0, #0x0
     ef0:	mov	w2, #0x3                   	// #3
     ef4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
     ef8:	mov	w9, #0x7                   	// #7
     efc:	stp	xzr, xzr, [x0, #16]
     f00:	str	w9, [x0, #8]
     f04:	adrp	x9, 240 <_ZN4llvm9BitsRecTy3getEj+0xb0>
     f08:	ldur	w8, [x29, #-40]
     f0c:	ldr	x9, [x9]
     f10:	mov	x20, x0
     f14:	str	w8, [x0, #32]
     f18:	add	x9, x9, #0x10
     f1c:	str	x9, [x0]
     f20:	cbz	w8, f34 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x728>
     f24:	ldur	x1, [x29, #-48]
     f28:	lsl	x2, x8, #3
     f2c:	add	x0, x20, #0x28
     f30:	bl	0 <memmove>
     f34:	ldr	x2, [x29, #24]
     f38:	add	x1, x20, #0x18
     f3c:	mov	x0, x19
     f40:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
     f44:	ldr	x0, [sp]
     f48:	add	x8, x21, #0x10
     f4c:	cmp	x0, x8
     f50:	b.ne	e08 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5fc>  // b.any
     f54:	b	e0c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x600>
     f58:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     f5c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     f60:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     f64:	add	x0, x0, #0x0
     f68:	add	x1, x1, #0x0
     f6c:	add	x3, x3, #0x0
     f70:	mov	w2, #0xb7                  	// #183
     f74:	bl	0 <__assert_fail>
     f78:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     f7c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     f80:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     f84:	add	x0, x0, #0x0
     f88:	add	x1, x1, #0x0
     f8c:	add	x3, x3, #0x0
     f90:	mov	w2, #0x95                  	// #149
     f94:	bl	0 <__assert_fail>
     f98:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     f9c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     fa0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     fa4:	add	x0, x0, #0x0
     fa8:	add	x1, x1, #0x0
     fac:	add	x3, x3, #0x0
     fb0:	mov	w2, #0xb9                  	// #185
     fb4:	bl	0 <__assert_fail>
     fb8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
     fbc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
     fc0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
     fc4:	add	x0, x0, #0x0
     fc8:	add	x1, x1, #0x0
     fcc:	add	x3, x3, #0x0
     fd0:	mov	w2, #0x43                  	// #67
     fd4:	bl	0 <__assert_fail>

0000000000000fd8 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE>:
     fd8:	stp	x29, x30, [sp, #-48]!
     fdc:	str	x21, [sp, #16]
     fe0:	stp	x20, x19, [sp, #32]
     fe4:	mov	x29, sp
     fe8:	ldr	w20, [x0, #32]
     fec:	mov	x21, x0
     ff0:	mov	x19, x1
     ff4:	mov	x0, x1
     ff8:	mov	x1, x20
     ffc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    1000:	cbz	w20, 1020 <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x48>
    1004:	add	x21, x21, #0x28
    1008:	lsl	x20, x20, #3
    100c:	ldr	x1, [x21], #8
    1010:	mov	x0, x19
    1014:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    1018:	subs	x20, x20, #0x8
    101c:	b.ne	100c <_ZNK4llvm11RecordRecTy7ProfileERNS_16FoldingSetNodeIDE+0x34>  // b.any
    1020:	ldp	x20, x19, [sp, #32]
    1024:	ldr	x21, [sp, #16]
    1028:	ldp	x29, x30, [sp], #48
    102c:	ret

0000000000001030 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev>:
    1030:	sub	sp, sp, #0x90
    1034:	stp	x29, x30, [sp, #64]
    1038:	stp	x26, x25, [sp, #80]
    103c:	stp	x24, x23, [sp, #96]
    1040:	stp	x22, x21, [sp, #112]
    1044:	stp	x20, x19, [sp, #128]
    1048:	add	x29, sp, #0x40
    104c:	ldr	w9, [x0, #32]
    1050:	mov	x19, x8
    1054:	cmp	w9, #0x1
    1058:	b.ne	108c <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x5c>  // b.any
    105c:	ldr	x8, [x0, #40]
    1060:	ldp	x22, x21, [sp, #112]
    1064:	ldp	x24, x23, [sp, #96]
    1068:	ldp	x26, x25, [sp, #80]
    106c:	ldr	x0, [x8]
    1070:	ldp	x29, x30, [sp, #64]
    1074:	ldr	x8, [x0]
    1078:	ldr	x1, [x8, #48]
    107c:	mov	x8, x19
    1080:	ldp	x20, x19, [sp, #128]
    1084:	add	sp, sp, #0x90
    1088:	br	x1
    108c:	add	x8, sp, #0x20
    1090:	mov	w10, #0x7b                  	// #123
    1094:	mov	w11, #0x1                   	// #1
    1098:	lsl	x22, x9, #3
    109c:	add	x21, x8, #0x10
    10a0:	strh	w10, [sp, #48]
    10a4:	stp	x21, x11, [sp, #32]
    10a8:	cbz	x22, 1148 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x118>
    10ac:	mov	x9, sp
    10b0:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    10b4:	add	x23, x0, #0x28
    10b8:	mov	w8, #0x1                   	// #1
    10bc:	mov	x24, #0x3fffffffffffffff    	// #4611686018427387903
    10c0:	add	x25, x9, #0x10
    10c4:	add	x20, x20, #0x0
    10c8:	b	10dc <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xac>
    10cc:	mov	w8, wzr
    10d0:	subs	x22, x22, #0x8
    10d4:	add	x23, x23, #0x8
    10d8:	b.eq	1138 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x108>  // b.none
    10dc:	ldr	x26, [x23]
    10e0:	tbnz	w8, #0, 1104 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0xd4>
    10e4:	ldr	x8, [sp, #40]
    10e8:	orr	x8, x8, #0x1
    10ec:	cmp	x8, x24
    10f0:	b.eq	11ac <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
    10f4:	add	x0, sp, #0x20
    10f8:	mov	w2, #0x2                   	// #2
    10fc:	mov	x1, x20
    1100:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1104:	ldr	x0, [x26]
    1108:	ldr	x8, [x0]
    110c:	ldr	x9, [x8, #48]
    1110:	mov	x8, sp
    1114:	blr	x9
    1118:	ldp	x1, x2, [sp]
    111c:	add	x0, sp, #0x20
    1120:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1124:	ldr	x0, [sp]
    1128:	cmp	x0, x25
    112c:	b.eq	10cc <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x9c>  // b.none
    1130:	bl	0 <_ZdlPv>
    1134:	b	10cc <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x9c>
    1138:	ldr	x8, [sp, #40]
    113c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1140:	cmp	x8, x9
    1144:	b.eq	11ac <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x17c>  // b.none
    1148:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    114c:	add	x1, x1, #0x0
    1150:	add	x0, sp, #0x20
    1154:	mov	w2, #0x1                   	// #1
    1158:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    115c:	ldr	x9, [sp, #32]
    1160:	add	x8, x19, #0x10
    1164:	str	x8, [x19]
    1168:	cmp	x9, x21
    116c:	b.eq	1180 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x150>  // b.none
    1170:	ldr	x8, [sp, #48]
    1174:	str	x9, [x19]
    1178:	str	x8, [x19, #16]
    117c:	b	1188 <_ZNK4llvm11RecordRecTy11getAsStringB5cxx11Ev+0x158>
    1180:	ldr	q0, [x21]
    1184:	str	q0, [x8]
    1188:	ldr	x8, [sp, #40]
    118c:	str	x8, [x19, #8]
    1190:	ldp	x20, x19, [sp, #128]
    1194:	ldp	x22, x21, [sp, #112]
    1198:	ldp	x24, x23, [sp, #96]
    119c:	ldp	x26, x25, [sp, #80]
    11a0:	ldp	x29, x30, [sp, #64]
    11a4:	add	sp, sp, #0x90
    11a8:	ret
    11ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    11b0:	add	x0, x0, #0x0
    11b4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000011b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>:
    11b8:	ldr	w11, [x0, #32]
    11bc:	add	x8, x0, #0x28
    11c0:	lsl	x10, x11, #3
    11c4:	cmp	w11, #0x4
    11c8:	add	x9, x8, x10
    11cc:	b.cc	12b4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xfc>  // b.lo, b.ul, b.last
    11d0:	lsr	x10, x11, #2
    11d4:	ldr	x11, [x8]
    11d8:	cmp	x11, x1
    11dc:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    11e0:	ldr	w12, [x11, #96]
    11e4:	cbz	w12, 1208 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x50>
    11e8:	ldr	x11, [x11, #88]
    11ec:	add	x12, x12, x12, lsl #1
    11f0:	lsl	x12, x12, #3
    11f4:	ldr	x13, [x11], #24
    11f8:	cmp	x13, x1
    11fc:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    1200:	subs	x12, x12, #0x18
    1204:	b.ne	11f4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x3c>  // b.any
    1208:	ldr	x11, [x8, #8]
    120c:	cmp	x11, x1
    1210:	b.eq	1394 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1dc>  // b.none
    1214:	ldr	w12, [x11, #96]
    1218:	cbz	w12, 123c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x84>
    121c:	ldr	x11, [x11, #88]
    1220:	add	x12, x12, x12, lsl #1
    1224:	lsl	x12, x12, #3
    1228:	ldr	x13, [x11], #24
    122c:	cmp	x13, x1
    1230:	b.eq	1394 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1dc>  // b.none
    1234:	subs	x12, x12, #0x18
    1238:	b.ne	1228 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x70>  // b.any
    123c:	ldr	x11, [x8, #16]
    1240:	cmp	x11, x1
    1244:	b.eq	13a4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1ec>  // b.none
    1248:	ldr	w12, [x11, #96]
    124c:	cbz	w12, 1270 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xb8>
    1250:	ldr	x11, [x11, #88]
    1254:	add	x12, x12, x12, lsl #1
    1258:	lsl	x12, x12, #3
    125c:	ldr	x13, [x11], #24
    1260:	cmp	x13, x1
    1264:	b.eq	13a4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1ec>  // b.none
    1268:	subs	x12, x12, #0x18
    126c:	b.ne	125c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xa4>  // b.any
    1270:	ldr	x11, [x8, #24]
    1274:	cmp	x11, x1
    1278:	b.eq	13b4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1fc>  // b.none
    127c:	ldr	w12, [x11, #96]
    1280:	cbz	w12, 12a4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xec>
    1284:	ldr	x11, [x11, #88]
    1288:	add	x12, x12, x12, lsl #1
    128c:	lsl	x12, x12, #3
    1290:	ldr	x13, [x11], #24
    1294:	cmp	x13, x1
    1298:	b.eq	13b4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1fc>  // b.none
    129c:	subs	x12, x12, #0x18
    12a0:	b.ne	1290 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0xd8>  // b.any
    12a4:	subs	x10, x10, #0x1
    12a8:	add	x8, x8, #0x20
    12ac:	b.gt	11d4 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c>
    12b0:	sub	x10, x9, x8
    12b4:	asr	x10, x10, #3
    12b8:	cmp	x10, #0x1
    12bc:	b.eq	1340 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x188>  // b.none
    12c0:	cmp	x10, #0x2
    12c4:	b.eq	1308 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x150>  // b.none
    12c8:	cmp	x10, #0x3
    12cc:	b.ne	1384 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>  // b.any
    12d0:	ldr	x10, [x8]
    12d4:	cmp	x10, x1
    12d8:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    12dc:	ldr	w11, [x10, #96]
    12e0:	cbz	w11, 1304 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x14c>
    12e4:	ldr	x10, [x10, #88]
    12e8:	add	x11, x11, x11, lsl #1
    12ec:	lsl	x11, x11, #3
    12f0:	ldr	x12, [x10], #24
    12f4:	cmp	x12, x1
    12f8:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    12fc:	subs	x11, x11, #0x18
    1300:	b.ne	12f0 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x138>  // b.any
    1304:	add	x8, x8, #0x8
    1308:	ldr	x10, [x8]
    130c:	cmp	x10, x1
    1310:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    1314:	ldr	w11, [x10, #96]
    1318:	cbz	w11, 133c <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x184>
    131c:	ldr	x10, [x10, #88]
    1320:	add	x11, x11, x11, lsl #1
    1324:	lsl	x11, x11, #3
    1328:	ldr	x12, [x10], #24
    132c:	cmp	x12, x1
    1330:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    1334:	subs	x11, x11, #0x18
    1338:	b.ne	1328 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x170>  // b.any
    133c:	add	x8, x8, #0x8
    1340:	ldr	x10, [x8]
    1344:	cmp	x10, x1
    1348:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    134c:	ldr	w11, [x10, #96]
    1350:	cbz	w11, 1384 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1cc>
    1354:	ldr	x10, [x10, #88]
    1358:	add	x11, x11, x11, lsl #1
    135c:	lsl	x11, x11, #3
    1360:	ldr	x12, [x10], #24
    1364:	cmp	x12, x1
    1368:	b.eq	1378 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1c0>  // b.none
    136c:	subs	x11, x11, #0x18
    1370:	b.ne	1360 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE+0x1a8>  // b.any
    1374:	mov	x8, x9
    1378:	cmp	x8, x9
    137c:	cset	w0, ne  // ne = any
    1380:	ret
    1384:	mov	x8, x9
    1388:	cmp	x8, x9
    138c:	cset	w0, ne  // ne = any
    1390:	ret
    1394:	add	x8, x8, #0x8
    1398:	cmp	x8, x9
    139c:	cset	w0, ne  // ne = any
    13a0:	ret
    13a4:	add	x8, x8, #0x10
    13a8:	cmp	x8, x9
    13ac:	cset	w0, ne  // ne = any
    13b0:	ret
    13b4:	add	x8, x8, #0x18
    13b8:	cmp	x8, x9
    13bc:	cset	w0, ne  // ne = any
    13c0:	ret

00000000000013c4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>:
    13c4:	stp	x29, x30, [sp, #-48]!
    13c8:	stp	x22, x21, [sp, #16]
    13cc:	stp	x20, x19, [sp, #32]
    13d0:	mov	x29, sp
    13d4:	cmp	x0, x1
    13d8:	b.eq	14c8 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x104>  // b.none
    13dc:	cbz	x1, 151c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x158>
    13e0:	ldr	w8, [x1, #8]
    13e4:	cmp	w8, #0x7
    13e8:	b.ne	14dc <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x118>  // b.any
    13ec:	ldr	w9, [x1, #32]
    13f0:	add	x21, x1, #0x28
    13f4:	mov	x19, x0
    13f8:	lsl	x8, x9, #3
    13fc:	cmp	w9, #0x4
    1400:	add	x20, x21, x8
    1404:	b.cc	146c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xa8>  // b.lo, b.ul, b.last
    1408:	lsr	x8, x9, #2
    140c:	add	x22, x8, #0x1
    1410:	add	x21, x1, #0x40
    1414:	ldur	x1, [x21, #-24]
    1418:	mov	x0, x19
    141c:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1420:	tbz	w0, #0, 14f0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x12c>
    1424:	ldur	x1, [x21, #-16]
    1428:	mov	x0, x19
    142c:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1430:	tbz	w0, #0, 14f8 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x134>
    1434:	ldur	x1, [x21, #-8]
    1438:	mov	x0, x19
    143c:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1440:	tbz	w0, #0, 1500 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x13c>
    1444:	ldr	x1, [x21]
    1448:	mov	x0, x19
    144c:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1450:	tbz	w0, #0, 1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    1454:	sub	x22, x22, #0x1
    1458:	cmp	x22, #0x1
    145c:	add	x21, x21, #0x20
    1460:	b.gt	1414 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x50>
    1464:	sub	x21, x21, #0x18
    1468:	sub	x8, x20, x21
    146c:	asr	x8, x8, #3
    1470:	cmp	x8, #0x1
    1474:	b.eq	14b0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xec>  // b.none
    1478:	cmp	x8, #0x2
    147c:	b.eq	149c <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xd8>  // b.none
    1480:	cmp	x8, #0x3
    1484:	b.ne	14c0 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xfc>  // b.any
    1488:	ldr	x1, [x21]
    148c:	mov	x0, x19
    1490:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1494:	tbz	w0, #0, 1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    1498:	add	x21, x21, #0x8
    149c:	ldr	x1, [x21]
    14a0:	mov	x0, x19
    14a4:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    14a8:	tbz	w0, #0, 1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    14ac:	add	x21, x21, #0x8
    14b0:	ldr	x1, [x21]
    14b4:	mov	x0, x19
    14b8:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    14bc:	tbz	w0, #0, 1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    14c0:	mov	x21, x20
    14c4:	b	1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    14c8:	mov	w0, #0x1                   	// #1
    14cc:	ldp	x20, x19, [sp, #32]
    14d0:	ldp	x22, x21, [sp, #16]
    14d4:	ldp	x29, x30, [sp], #48
    14d8:	ret
    14dc:	mov	w0, wzr
    14e0:	ldp	x20, x19, [sp, #32]
    14e4:	ldp	x22, x21, [sp, #16]
    14e8:	ldp	x29, x30, [sp], #48
    14ec:	ret
    14f0:	sub	x21, x21, #0x18
    14f4:	b	1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    14f8:	sub	x21, x21, #0x10
    14fc:	b	1504 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x140>
    1500:	sub	x21, x21, #0x8
    1504:	cmp	x21, x20
    1508:	cset	w0, eq  // eq = none
    150c:	ldp	x20, x19, [sp, #32]
    1510:	ldp	x22, x21, [sp, #16]
    1514:	ldp	x29, x30, [sp], #48
    1518:	ret
    151c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1520:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1524:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1528:	add	x0, x0, #0x0
    152c:	add	x1, x1, #0x0
    1530:	add	x3, x3, #0x0
    1534:	mov	w2, #0x69                  	// #105
    1538:	bl	0 <__assert_fail>

000000000000153c <_ZNK4llvm11RecordRecTy7typeIsAEPKNS_5RecTyE>:
    153c:	b	13c4 <_ZNK4llvm11RecordRecTy19typeIsConvertibleToEPKNS_5RecTyE>

0000000000001540 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>:
    1540:	sub	sp, sp, #0xc0
    1544:	stp	x29, x30, [sp, #96]
    1548:	stp	x28, x27, [sp, #112]
    154c:	stp	x26, x25, [sp, #128]
    1550:	stp	x24, x23, [sp, #144]
    1554:	stp	x22, x21, [sp, #160]
    1558:	stp	x20, x19, [sp, #176]
    155c:	add	x29, sp, #0x60
    1560:	mov	x22, x0
    1564:	cmp	x0, x1
    1568:	b.eq	17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>  // b.none
    156c:	cbz	x22, 1828 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2e8>
    1570:	ldr	w8, [x22, #8]
    1574:	mov	x19, x1
    1578:	cmp	w8, #0x7
    157c:	b.ne	16d8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x198>  // b.any
    1580:	cbz	x19, 1828 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2e8>
    1584:	ldr	w8, [x19, #8]
    1588:	cmp	w8, #0x7
    158c:	b.ne	16d8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x198>  // b.any
    1590:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1594:	ldr	d0, [x9]
    1598:	add	x8, sp, #0x30
    159c:	mov	x10, sp
    15a0:	add	x21, x8, #0x10
    15a4:	add	x20, x10, #0x10
    15a8:	str	x21, [sp, #48]
    15ac:	str	x20, [sp]
    15b0:	str	d0, [sp, #56]
    15b4:	str	d0, [sp, #8]
    15b8:	ldr	w8, [x22, #32]
    15bc:	add	x2, x22, #0x28
    15c0:	mov	x0, sp
    15c4:	mov	x1, x20
    15c8:	add	x3, x2, x8, lsl #3
    15cc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    15d0:	ldr	w24, [sp, #8]
    15d4:	cbz	w24, 1780 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x240>
    15d8:	mov	w23, #0x18                  	// #24
    15dc:	b	15e4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xa4>
    15e0:	cbz	w24, 1780 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x240>
    15e4:	ldr	w26, [sp, #12]
    15e8:	mov	w8, w24
    15ec:	sub	x8, x8, #0x1
    15f0:	cmp	x8, x26
    15f4:	b.hi	17e8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2a8>  // b.pmore
    15f8:	ldr	x9, [sp]
    15fc:	mov	x0, x19
    1600:	add	x9, x9, w24, uxtw #3
    1604:	ldur	x22, [x9, #-8]
    1608:	mov	w24, w8
    160c:	str	w8, [sp, #8]
    1610:	mov	x1, x22
    1614:	bl	11b8 <_ZNK4llvm11RecordRecTy12isSubClassOfEPNS_6RecordE>
    1618:	tbz	w0, #0, 164c <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x10c>
    161c:	ldp	w8, w9, [sp, #56]
    1620:	cmp	w8, w9
    1624:	b.cs	16bc <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x17c>  // b.hs, b.nlast
    1628:	ldr	x9, [sp, #48]
    162c:	str	x22, [x9, w8, uxtw #3]
    1630:	ldp	w8, w9, [sp, #56]
    1634:	cmp	w8, w9
    1638:	b.cs	17e8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2a8>  // b.hs, b.nlast
    163c:	ldr	w24, [sp, #8]
    1640:	add	w8, w8, #0x1
    1644:	str	w8, [sp, #56]
    1648:	b	15e0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xa0>
    164c:	ldr	w25, [x22, #96]
    1650:	cbz	w25, 15e0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xa0>
    1654:	ldr	x22, [x22, #88]
    1658:	madd	x8, x25, x23, x22
    165c:	ldur	x28, [x8, #-24]
    1660:	ldr	w27, [x28, #96]
    1664:	cmp	x25, x27
    1668:	b.ls	1808 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2c8>  // b.plast
    166c:	cmp	w24, w26
    1670:	b.cs	16a0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x160>  // b.hs, b.nlast
    1674:	ldr	x8, [sp]
    1678:	str	x28, [x8, w24, uxtw #3]
    167c:	ldp	w8, w26, [sp, #8]
    1680:	cmp	w8, w26
    1684:	b.cs	17e8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x2a8>  // b.hs, b.nlast
    1688:	mvn	x9, x27
    168c:	add	x25, x25, x9
    1690:	add	w24, w8, #0x1
    1694:	str	w24, [sp, #8]
    1698:	cbnz	x25, 1658 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x118>
    169c:	b	15e0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xa0>
    16a0:	mov	x0, sp
    16a4:	mov	w3, #0x8                   	// #8
    16a8:	mov	x1, x20
    16ac:	mov	x2, xzr
    16b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    16b4:	ldr	w24, [sp, #8]
    16b8:	b	1674 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x134>
    16bc:	add	x0, sp, #0x30
    16c0:	mov	w3, #0x8                   	// #8
    16c4:	mov	x1, x21
    16c8:	mov	x2, xzr
    16cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    16d0:	ldr	w8, [sp, #56]
    16d4:	b	1628 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0xe8>
    16d8:	ldr	x8, [x22]
    16dc:	mov	x0, x22
    16e0:	mov	x1, x19
    16e4:	ldr	x8, [x8, #24]
    16e8:	blr	x8
    16ec:	tbz	w0, #0, 16f8 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x1b8>
    16f0:	mov	x22, x19
    16f4:	b	17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>
    16f8:	ldr	x8, [x19]
    16fc:	mov	x0, x19
    1700:	mov	x1, x22
    1704:	ldr	x8, [x8, #24]
    1708:	blr	x8
    170c:	tbnz	w0, #0, 17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>
    1710:	ldr	w8, [x22, #8]
    1714:	cmp	w8, #0x5
    1718:	b.ne	17c0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x280>  // b.any
    171c:	ldr	w8, [x19, #8]
    1720:	cmp	w8, #0x5
    1724:	b.ne	17c0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x280>  // b.any
    1728:	ldr	x0, [x22, #24]
    172c:	ldr	x1, [x19, #24]
    1730:	bl	1540 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    1734:	cbz	x0, 17c0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x280>
    1738:	ldr	x22, [x0, #16]
    173c:	mov	x19, x0
    1740:	cbnz	x22, 17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>
    1744:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1748:	add	x0, x0, #0x0
    174c:	mov	w1, #0x20                  	// #32
    1750:	mov	w2, #0x4                   	// #4
    1754:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    1758:	adrp	x9, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x40>
    175c:	ldr	x9, [x9]
    1760:	mov	w8, #0x5                   	// #5
    1764:	mov	x22, x0
    1768:	str	w8, [x0, #8]
    176c:	add	x8, x9, #0x10
    1770:	stp	xzr, x19, [x0, #16]
    1774:	str	x8, [x0]
    1778:	str	x0, [x19, #16]
    177c:	b	17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>
    1780:	ldr	x0, [sp, #48]
    1784:	ldr	w1, [sp, #56]
    1788:	bl	80c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    178c:	ldr	x8, [sp]
    1790:	mov	x22, x0
    1794:	cmp	x8, x20
    1798:	b.eq	17a4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x264>  // b.none
    179c:	mov	x0, x8
    17a0:	bl	0 <free>
    17a4:	ldr	x0, [sp, #48]
    17a8:	add	x8, sp, #0x30
    17ac:	add	x8, x8, #0x10
    17b0:	cmp	x0, x8
    17b4:	b.eq	17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>  // b.none
    17b8:	bl	0 <free>
    17bc:	b	17c4 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_+0x284>
    17c0:	mov	x22, xzr
    17c4:	mov	x0, x22
    17c8:	ldp	x20, x19, [sp, #176]
    17cc:	ldp	x22, x21, [sp, #160]
    17d0:	ldp	x24, x23, [sp, #144]
    17d4:	ldp	x26, x25, [sp, #128]
    17d8:	ldp	x28, x27, [sp, #112]
    17dc:	ldp	x29, x30, [sp, #96]
    17e0:	add	sp, sp, #0xc0
    17e4:	ret
    17e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    17ec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    17f0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    17f4:	add	x0, x0, #0x0
    17f8:	add	x1, x1, #0x0
    17fc:	add	x3, x3, #0x0
    1800:	mov	w2, #0x43                  	// #67
    1804:	bl	0 <__assert_fail>
    1808:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    180c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1810:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1814:	add	x0, x0, #0x0
    1818:	add	x1, x1, #0x0
    181c:	add	x3, x3, #0x0
    1820:	mov	w2, #0xcc                  	// #204
    1824:	bl	0 <__assert_fail>
    1828:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    182c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1830:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1834:	add	x0, x0, #0x0
    1838:	add	x1, x1, #0x0
    183c:	add	x3, x3, #0x0
    1840:	mov	w2, #0x69                  	// #105
    1844:	bl	0 <__assert_fail>

0000000000001848 <_ZN4llvm4Init6anchorEv>:
    1848:	ret

000000000000184c <_ZNK4llvm4Init4dumpEv>:
    184c:	sub	sp, sp, #0x50
    1850:	stp	x29, x30, [sp, #32]
    1854:	str	x21, [sp, #48]
    1858:	stp	x20, x19, [sp, #64]
    185c:	add	x29, sp, #0x20
    1860:	mov	x19, x0
    1864:	bl	0 <_ZN4llvm4errsEv>
    1868:	ldr	x8, [x19]
    186c:	mov	x20, x0
    1870:	mov	x0, x19
    1874:	mov	x21, sp
    1878:	ldr	x9, [x8, #40]
    187c:	mov	x8, sp
    1880:	blr	x9
    1884:	ldp	x1, x2, [sp]
    1888:	mov	x0, x20
    188c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1890:	ldr	x0, [sp]
    1894:	add	x8, x21, #0x10
    1898:	cmp	x0, x8
    189c:	b.eq	18a4 <_ZNK4llvm4Init4dumpEv+0x58>  // b.none
    18a0:	bl	0 <_ZdlPv>
    18a4:	ldp	x20, x19, [sp, #64]
    18a8:	ldr	x21, [sp, #48]
    18ac:	ldp	x29, x30, [sp, #32]
    18b0:	add	sp, sp, #0x50
    18b4:	ret

00000000000018b8 <_ZN4llvm9UnsetInit3getEv>:
    18b8:	stp	x29, x30, [sp, #-32]!
    18bc:	str	x19, [sp, #16]
    18c0:	mov	x29, sp
    18c4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    18c8:	add	x8, x8, #0x0
    18cc:	ldarb	w8, [x8]
    18d0:	tbz	w8, #0, 18e8 <_ZN4llvm9UnsetInit3getEv+0x30>
    18d4:	ldr	x19, [sp, #16]
    18d8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    18dc:	add	x0, x0, #0x0
    18e0:	ldp	x29, x30, [sp], #32
    18e4:	ret
    18e8:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    18ec:	add	x19, x19, #0x0
    18f0:	mov	x0, x19
    18f4:	bl	0 <__cxa_guard_acquire>
    18f8:	cbz	w0, 18d4 <_ZN4llvm9UnsetInit3getEv+0x1c>
    18fc:	adrp	x9, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    1900:	ldr	x9, [x9]
    1904:	mov	w8, #0x18                  	// #24
    1908:	strh	w8, [x19, #168]
    190c:	mov	x0, x19
    1910:	add	x8, x9, #0x10
    1914:	str	x8, [x19, #160]
    1918:	bl	0 <__cxa_guard_release>
    191c:	b	18d4 <_ZN4llvm9UnsetInit3getEv+0x1c>

0000000000001920 <_ZNK4llvm9UnsetInit9getCastToEPNS_5RecTyE>:
    1920:	ret

0000000000001924 <_ZNK4llvm9UnsetInit20convertInitializerToEPNS_5RecTyE>:
    1924:	ret

0000000000001928 <_ZN4llvm7BitInit3getEb>:
    1928:	stp	x29, x30, [sp, #-32]!
    192c:	str	x19, [sp, #16]
    1930:	mov	x29, sp
    1934:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1938:	add	x8, x8, #0x0
    193c:	ldarb	w8, [x8]
    1940:	tbz	w8, #0, 1974 <_ZN4llvm7BitInit3getEb+0x4c>
    1944:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1948:	add	x8, x8, #0x0
    194c:	ldarb	w8, [x8]
    1950:	tbz	w8, #0, 19d0 <_ZN4llvm7BitInit3getEb+0xa8>
    1954:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1958:	ldr	x19, [sp, #16]
    195c:	add	x8, x8, #0x0
    1960:	add	x9, x8, #0x20
    1964:	tst	w0, #0x1
    1968:	csel	x0, x8, x9, ne  // ne = any
    196c:	ldp	x29, x30, [sp], #32
    1970:	ret
    1974:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    1978:	add	x19, x19, #0x0
    197c:	str	w0, [x29, #28]
    1980:	mov	x0, x19
    1984:	bl	0 <__cxa_guard_acquire>
    1988:	mov	w8, w0
    198c:	ldr	w0, [x29, #28]
    1990:	cbz	w8, 1944 <_ZN4llvm7BitInit3getEb+0x1c>
    1994:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1998:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    199c:	ldr	x9, [x9]
    19a0:	ldr	x10, [x10]
    19a4:	mov	w8, #0x2                   	// #2
    19a8:	mov	w11, #0x1                   	// #1
    19ac:	strh	w8, [x19, #472]
    19b0:	add	x8, x10, #0x10
    19b4:	mov	x0, x19
    19b8:	str	x9, [x19, #480]
    19bc:	str	x8, [x19, #464]
    19c0:	strb	w11, [x19, #488]
    19c4:	bl	0 <__cxa_guard_release>
    19c8:	ldr	w0, [x29, #28]
    19cc:	b	1944 <_ZN4llvm7BitInit3getEb+0x1c>
    19d0:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    19d4:	add	x19, x19, #0x0
    19d8:	str	w0, [x29, #28]
    19dc:	mov	x0, x19
    19e0:	bl	0 <__cxa_guard_acquire>
    19e4:	mov	w8, w0
    19e8:	ldr	w0, [x29, #28]
    19ec:	cbz	w8, 1954 <_ZN4llvm7BitInit3getEb+0x2c>
    19f0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    19f4:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    19f8:	ldr	x9, [x9]
    19fc:	ldr	x10, [x10]
    1a00:	mov	w8, #0x2                   	// #2
    1a04:	strh	w8, [x19, #496]
    1a08:	mov	x0, x19
    1a0c:	add	x8, x10, #0x10
    1a10:	str	x9, [x19, #504]
    1a14:	str	x8, [x19, #488]
    1a18:	strb	wzr, [x19, #512]
    1a1c:	bl	0 <__cxa_guard_release>
    1a20:	ldr	w0, [x29, #28]
    1a24:	b	1954 <_ZN4llvm7BitInit3getEb+0x2c>

0000000000001a28 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE>:
    1a28:	sub	sp, sp, #0x20
    1a2c:	stp	x29, x30, [sp, #16]
    1a30:	add	x29, sp, #0x10
    1a34:	cbz	x1, 1aa8 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x80>
    1a38:	ldr	w8, [x1, #8]
    1a3c:	cmp	w8, #0x3
    1a40:	b.eq	1a88 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x60>  // b.none
    1a44:	cmp	w8, #0x1
    1a48:	b.eq	1a60 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x38>  // b.none
    1a4c:	cbz	w8, 1a54 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x2c>
    1a50:	mov	x0, xzr
    1a54:	ldp	x29, x30, [sp, #16]
    1a58:	add	sp, sp, #0x20
    1a5c:	ret
    1a60:	ldr	w8, [x1, #24]
    1a64:	cmp	w8, #0x1
    1a68:	b.ne	1a98 <_ZNK4llvm7BitInit20convertInitializerToEPNS_5RecTyE+0x70>  // b.any
    1a6c:	str	x0, [sp, #8]
    1a70:	add	x0, sp, #0x8
    1a74:	mov	w1, #0x1                   	// #1
    1a78:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    1a7c:	ldp	x29, x30, [sp, #16]
    1a80:	add	sp, sp, #0x20
    1a84:	ret
    1a88:	ldrb	w0, [x0, #24]
    1a8c:	ldp	x29, x30, [sp, #16]
    1a90:	add	sp, sp, #0x20
    1a94:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    1a98:	mov	x0, xzr
    1a9c:	ldp	x29, x30, [sp, #16]
    1aa0:	add	sp, sp, #0x20
    1aa4:	ret
    1aa8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1aac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ab0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ab4:	add	x0, x0, #0x0
    1ab8:	add	x1, x1, #0x0
    1abc:	add	x3, x3, #0x0
    1ac0:	mov	w2, #0x69                  	// #105
    1ac4:	bl	0 <__assert_fail>

0000000000001ac8 <_ZN4llvm7IntInit3getEl>:
    1ac8:	stp	x29, x30, [sp, #-32]!
    1acc:	str	x19, [sp, #16]
    1ad0:	mov	x29, sp
    1ad4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ad8:	str	x0, [x29, #24]
    1adc:	add	x8, x8, #0x0
    1ae0:	ldarb	w8, [x8]
    1ae4:	tbz	w8, #0, 1b5c <_ZN4llvm7IntInit3getEl+0x94>
    1ae8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1aec:	add	x0, x0, #0x0
    1af0:	add	x1, x29, #0x18
    1af4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    1af8:	mov	x19, x0
    1afc:	ldr	x0, [x0]
    1b00:	cbz	x0, 1b10 <_ZN4llvm7IntInit3getEl+0x48>
    1b04:	ldr	x19, [sp, #16]
    1b08:	ldp	x29, x30, [sp], #32
    1b0c:	ret
    1b10:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b14:	add	x0, x0, #0x0
    1b18:	mov	w1, #0x20                  	// #32
    1b1c:	mov	w2, #0x4                   	// #4
    1b20:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    1b24:	adrp	x10, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    1b28:	adrp	x11, 4f8 <_ZNK4llvm9BitsRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x70>
    1b2c:	ldr	x8, [x29, #24]
    1b30:	ldr	x10, [x10]
    1b34:	ldr	x11, [x11]
    1b38:	mov	w9, #0x8                   	// #8
    1b3c:	strh	w9, [x0, #8]
    1b40:	stp	x10, x8, [x0, #16]
    1b44:	add	x9, x11, #0x10
    1b48:	str	x9, [x0]
    1b4c:	str	x0, [x19]
    1b50:	ldr	x19, [sp, #16]
    1b54:	ldp	x29, x30, [sp], #32
    1b58:	ret
    1b5c:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b60:	add	x19, x19, #0x0
    1b64:	mov	x0, x19
    1b68:	bl	0 <__cxa_guard_acquire>
    1b6c:	cbz	w0, 1ae8 <_ZN4llvm7IntInit3getEl+0x20>
    1b70:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1b74:	adrp	x2, 0 <__dso_handle>
    1b78:	add	x1, x19, #0x2e0
    1b7c:	add	x8, x19, #0x2e8
    1b80:	add	x0, x0, #0x0
    1b84:	add	x2, x2, #0x0
    1b88:	str	wzr, [x19, #744]
    1b8c:	str	xzr, [x19, #752]
    1b90:	str	x8, [x19, #760]
    1b94:	str	x8, [x19, #768]
    1b98:	str	xzr, [x19, #776]
    1b9c:	bl	0 <__cxa_atexit>
    1ba0:	mov	x0, x19
    1ba4:	bl	0 <__cxa_guard_release>
    1ba8:	b	1ae8 <_ZN4llvm7IntInit3getEl+0x20>

0000000000001bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>:
    1bac:	sub	sp, sp, #0xe0
    1bb0:	stp	x29, x30, [sp, #160]
    1bb4:	stp	x24, x23, [sp, #176]
    1bb8:	stp	x22, x21, [sp, #192]
    1bbc:	stp	x20, x19, [sp, #208]
    1bc0:	add	x29, sp, #0xa0
    1bc4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1bc8:	add	x8, x8, #0x0
    1bcc:	ldarb	w8, [x8]
    1bd0:	mov	x20, x1
    1bd4:	mov	x19, x0
    1bd8:	tbz	w8, #0, 1d00 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x154>
    1bdc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1be0:	ldr	d0, [x8]
    1be4:	add	x8, sp, #0x10
    1be8:	add	x8, x8, #0x10
    1bec:	add	x0, sp, #0x10
    1bf0:	mov	x1, x20
    1bf4:	str	x8, [sp, #16]
    1bf8:	str	d0, [sp, #24]
    1bfc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    1c00:	lsl	x21, x20, #3
    1c04:	cbz	x20, 1c24 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x78>
    1c08:	mov	x22, x21
    1c0c:	mov	x23, x19
    1c10:	ldr	x1, [x23], #8
    1c14:	add	x0, sp, #0x10
    1c18:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    1c1c:	subs	x22, x22, #0x8
    1c20:	b.ne	1c10 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x64>  // b.any
    1c24:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1c28:	add	x0, x0, #0x0
    1c2c:	add	x1, sp, #0x10
    1c30:	add	x2, sp, #0x8
    1c34:	str	xzr, [sp, #8]
    1c38:	add	x23, sp, #0x10
    1c3c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    1c40:	cbz	x0, 1c78 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xcc>
    1c44:	sub	x21, x0, #0x18
    1c48:	ldr	x0, [sp, #16]
    1c4c:	add	x8, x23, #0x10
    1c50:	cmp	x0, x8
    1c54:	b.eq	1c5c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xb0>  // b.none
    1c58:	bl	0 <free>
    1c5c:	mov	x0, x21
    1c60:	ldp	x20, x19, [sp, #208]
    1c64:	ldp	x22, x21, [sp, #192]
    1c68:	ldp	x24, x23, [sp, #176]
    1c6c:	ldp	x29, x30, [sp, #160]
    1c70:	add	sp, sp, #0xe0
    1c74:	ret
    1c78:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1c7c:	add	x1, x21, #0x28
    1c80:	add	x0, x0, #0x0
    1c84:	mov	w2, #0x3                   	// #3
    1c88:	add	x24, x19, x20, lsl #3
    1c8c:	mov	w22, #0x3                   	// #3
    1c90:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    1c94:	mov	x21, x0
    1c98:	mov	w0, w20
    1c9c:	bl	190 <_ZN4llvm9BitsRecTy3getEj>
    1ca0:	strh	w22, [x21, #8]
    1ca4:	str	x0, [x21, #16]
    1ca8:	adrp	x8, 478 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x1cc>
    1cac:	ldr	x8, [x8]
    1cb0:	mov	x22, x21
    1cb4:	subs	x2, x24, x19
    1cb8:	str	xzr, [x22, #24]!
    1cbc:	add	x8, x8, #0x10
    1cc0:	str	x8, [x21]
    1cc4:	str	w20, [x21, #32]
    1cc8:	b.eq	1cd8 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x12c>  // b.none
    1ccc:	add	x0, x21, #0x28
    1cd0:	mov	x1, x19
    1cd4:	bl	0 <memmove>
    1cd8:	ldr	x2, [sp, #8]
    1cdc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ce0:	add	x0, x0, #0x0
    1ce4:	mov	x1, x22
    1ce8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    1cec:	ldr	x0, [sp, #16]
    1cf0:	add	x8, x23, #0x10
    1cf4:	cmp	x0, x8
    1cf8:	b.ne	1c58 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xac>  // b.any
    1cfc:	b	1c5c <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0xb0>
    1d00:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    1d04:	add	x21, x21, #0x0
    1d08:	mov	x0, x21
    1d0c:	bl	0 <__cxa_guard_acquire>
    1d10:	cbz	w0, 1bdc <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>
    1d14:	add	x22, x21, #0xb0
    1d18:	mov	w1, #0x6                   	// #6
    1d1c:	mov	x0, x22
    1d20:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    1d24:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    1d28:	ldr	x8, [x8]
    1d2c:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    1d30:	adrp	x2, 0 <__dso_handle>
    1d34:	add	x2, x2, #0x0
    1d38:	add	x8, x8, #0x10
    1d3c:	str	x8, [x21, #176]
    1d40:	ldr	x0, [x0]
    1d44:	mov	x1, x22
    1d48:	bl	0 <__cxa_atexit>
    1d4c:	mov	x0, x21
    1d50:	bl	0 <__cxa_guard_release>
    1d54:	b	1bdc <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE+0x30>

0000000000001d58 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE>:
    1d58:	stp	x29, x30, [sp, #-48]!
    1d5c:	str	x21, [sp, #16]
    1d60:	stp	x20, x19, [sp, #32]
    1d64:	mov	x29, sp
    1d68:	ldr	w20, [x0, #32]
    1d6c:	mov	x21, x0
    1d70:	mov	x19, x1
    1d74:	mov	x0, x1
    1d78:	mov	x1, x20
    1d7c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    1d80:	cbz	w20, 1da0 <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x48>
    1d84:	add	x21, x21, #0x28
    1d88:	lsl	x20, x20, #3
    1d8c:	ldr	x1, [x21], #8
    1d90:	mov	x0, x19
    1d94:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    1d98:	subs	x20, x20, #0x8
    1d9c:	b.ne	1d8c <_ZNK4llvm8BitsInit7ProfileERNS_16FoldingSetNodeIDE+0x34>  // b.any
    1da0:	ldp	x20, x19, [sp, #32]
    1da4:	ldr	x21, [sp, #16]
    1da8:	ldp	x29, x30, [sp], #48
    1dac:	ret

0000000000001db0 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE>:
    1db0:	stp	x29, x30, [sp, #-16]!
    1db4:	mov	x29, sp
    1db8:	cbz	x1, 1e8c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xdc>
    1dbc:	ldr	w9, [x1, #8]
    1dc0:	mov	x8, x0
    1dc4:	cmp	w9, #0x3
    1dc8:	b.eq	1e08 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x58>  // b.none
    1dcc:	cmp	w9, #0x1
    1dd0:	b.eq	1df0 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x40>  // b.none
    1dd4:	cbnz	w9, 1e54 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>
    1dd8:	ldr	w9, [x8, #32]
    1ddc:	cmp	w9, #0x1
    1de0:	b.ne	1e54 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>  // b.any
    1de4:	ldr	x0, [x8, #40]
    1de8:	ldp	x29, x30, [sp], #16
    1dec:	ret
    1df0:	ldr	w9, [x8, #32]
    1df4:	ldr	w10, [x1, #24]
    1df8:	cmp	w9, w10
    1dfc:	csel	x0, x8, xzr, eq  // eq = none
    1e00:	ldp	x29, x30, [sp], #16
    1e04:	ret
    1e08:	ldr	w9, [x8, #32]
    1e0c:	cbz	w9, 1e60 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xb0>
    1e10:	mov	w10, wzr
    1e14:	mov	x0, xzr
    1e18:	add	x8, x8, #0x28
    1e1c:	ldr	x11, [x8, w10, uxtw #3]
    1e20:	cbz	x11, 1e6c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xbc>
    1e24:	ldrb	w12, [x11, #8]
    1e28:	cmp	w12, #0x2
    1e2c:	b.ne	1e54 <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0xa4>  // b.any
    1e30:	ldrb	w11, [x11, #24]
    1e34:	mov	w12, w10
    1e38:	add	w10, w12, #0x1
    1e3c:	cmp	w9, w10
    1e40:	lsl	x11, x11, x12
    1e44:	orr	x0, x11, x0
    1e48:	b.ne	1e1c <_ZNK4llvm8BitsInit20convertInitializerToEPNS_5RecTyE+0x6c>  // b.any
    1e4c:	ldp	x29, x30, [sp], #16
    1e50:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    1e54:	mov	x0, xzr
    1e58:	ldp	x29, x30, [sp], #16
    1e5c:	ret
    1e60:	mov	x0, xzr
    1e64:	ldp	x29, x30, [sp], #16
    1e68:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    1e6c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e70:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e74:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e78:	add	x0, x0, #0x0
    1e7c:	add	x1, x1, #0x0
    1e80:	add	x3, x3, #0x0
    1e84:	mov	w2, #0x69                  	// #105
    1e88:	bl	0 <__assert_fail>
    1e8c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1e98:	add	x0, x0, #0x0
    1e9c:	add	x1, x1, #0x0
    1ea0:	add	x3, x3, #0x0
    1ea4:	mov	w2, #0x69                  	// #105
    1ea8:	bl	0 <__assert_fail>

0000000000001eac <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    1eac:	sub	sp, sp, #0xc0
    1eb0:	stp	x29, x30, [sp, #144]
    1eb4:	str	x21, [sp, #160]
    1eb8:	stp	x20, x19, [sp, #176]
    1ebc:	add	x29, sp, #0x90
    1ec0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ec4:	ldr	d0, [x9]
    1ec8:	mov	x8, sp
    1ecc:	mov	x19, x2
    1ed0:	mov	x20, x1
    1ed4:	mov	x21, x0
    1ed8:	add	x1, x8, #0x10
    1edc:	cmp	x2, #0x11
    1ee0:	str	x1, [sp]
    1ee4:	str	d0, [sp, #8]
    1ee8:	b.cc	1f04 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>  // b.lo, b.ul, b.last
    1eec:	mov	x0, sp
    1ef0:	mov	w3, #0x8                   	// #8
    1ef4:	mov	x2, x19
    1ef8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1efc:	ldr	w8, [sp, #12]
    1f00:	b	1f08 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>
    1f04:	mov	w8, #0x10                  	// #16
    1f08:	cmp	x8, x19
    1f0c:	b.cc	2008 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x15c>  // b.lo, b.ul, b.last
    1f10:	ands	x8, x19, #0xffffffff
    1f14:	str	w19, [sp, #8]
    1f18:	b.eq	1f2c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>  // b.none
    1f1c:	ldr	x0, [sp]
    1f20:	lsl	x2, x8, #3
    1f24:	mov	w1, wzr
    1f28:	bl	0 <memset>
    1f2c:	cbz	w19, 1f7c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd0>
    1f30:	ldr	w8, [sp, #8]
    1f34:	mov	w11, wzr
    1f38:	add	x9, x21, #0x28
    1f3c:	mov	w10, w11
    1f40:	cmp	x19, x10
    1f44:	b.ls	1fc8 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x11c>  // b.plast
    1f48:	ldr	w11, [x20, x10, lsl #2]
    1f4c:	ldr	w12, [x21, #32]
    1f50:	cmp	w11, w12
    1f54:	b.cs	1f94 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xe8>  // b.hs, b.nlast
    1f58:	cmp	w8, w10
    1f5c:	b.eq	1fe8 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x13c>  // b.none
    1f60:	ldr	x12, [x9, x11, lsl #3]
    1f64:	ldr	x13, [sp]
    1f68:	add	w11, w10, #0x1
    1f6c:	cmp	w19, w11
    1f70:	str	x12, [x13, x10, lsl #3]
    1f74:	b.ne	1f3c <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x90>  // b.any
    1f78:	b	1f80 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd4>
    1f7c:	ldr	w8, [sp, #8]
    1f80:	ldr	x0, [sp]
    1f84:	mov	w1, w8
    1f88:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    1f8c:	mov	x19, x0
    1f90:	b	1f98 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xec>
    1f94:	mov	x19, xzr
    1f98:	ldr	x0, [sp]
    1f9c:	mov	x8, sp
    1fa0:	add	x8, x8, #0x10
    1fa4:	cmp	x0, x8
    1fa8:	b.eq	1fb0 <_ZNK4llvm8BitsInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x104>  // b.none
    1fac:	bl	0 <free>
    1fb0:	mov	x0, x19
    1fb4:	ldp	x20, x19, [sp, #176]
    1fb8:	ldr	x21, [sp, #160]
    1fbc:	ldp	x29, x30, [sp, #144]
    1fc0:	add	sp, sp, #0xc0
    1fc4:	ret
    1fc8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1fcc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1fd0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1fd4:	add	x0, x0, #0x0
    1fd8:	add	x1, x1, #0x0
    1fdc:	add	x3, x3, #0x0
    1fe0:	mov	w2, #0xfa                  	// #250
    1fe4:	bl	0 <__assert_fail>
    1fe8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    1fec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ff0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    1ff4:	add	x0, x0, #0x0
    1ff8:	add	x1, x1, #0x0
    1ffc:	add	x3, x3, #0x0
    2000:	mov	w2, #0x95                  	// #149
    2004:	bl	0 <__assert_fail>
    2008:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    200c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2010:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2014:	add	x0, x0, #0x0
    2018:	add	x1, x1, #0x0
    201c:	add	x3, x3, #0x0
    2020:	mov	w2, #0x43                  	// #67
    2024:	bl	0 <__assert_fail>

0000000000002028 <_ZNK4llvm8BitsInit10isConcreteEv>:
    2028:	stp	x29, x30, [sp, #-48]!
    202c:	stp	x22, x21, [sp, #16]
    2030:	stp	x20, x19, [sp, #32]
    2034:	mov	x29, sp
    2038:	ldr	w8, [x0, #32]
    203c:	cbz	w8, 209c <_ZNK4llvm8BitsInit10isConcreteEv+0x74>
    2040:	mov	x19, x0
    2044:	mov	x20, xzr
    2048:	add	x21, x0, #0x28
    204c:	sub	x22, x8, #0x1
    2050:	ldr	x0, [x21, x20, lsl #3]
    2054:	ldr	x8, [x0]
    2058:	ldr	x8, [x8, #32]
    205c:	blr	x8
    2060:	tbz	w0, #0, 20b0 <_ZNK4llvm8BitsInit10isConcreteEv+0x88>
    2064:	cmp	x22, x20
    2068:	b.eq	209c <_ZNK4llvm8BitsInit10isConcreteEv+0x74>  // b.none
    206c:	ldr	w8, [x19, #32]
    2070:	add	x20, x20, #0x1
    2074:	cmp	x20, x8
    2078:	b.cc	2050 <_ZNK4llvm8BitsInit10isConcreteEv+0x28>  // b.lo, b.ul, b.last
    207c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2080:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2084:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2088:	add	x0, x0, #0x0
    208c:	add	x1, x1, #0x0
    2090:	add	x3, x3, #0x0
    2094:	mov	w2, #0x22e                 	// #558
    2098:	bl	0 <__assert_fail>
    209c:	mov	w0, #0x1                   	// #1
    20a0:	ldp	x20, x19, [sp, #32]
    20a4:	ldp	x22, x21, [sp, #16]
    20a8:	ldp	x29, x30, [sp], #48
    20ac:	ret
    20b0:	mov	w0, wzr
    20b4:	ldp	x20, x19, [sp, #32]
    20b8:	ldp	x22, x21, [sp, #16]
    20bc:	ldp	x29, x30, [sp], #48
    20c0:	ret

00000000000020c4 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev>:
    20c4:	sub	sp, sp, #0xb0
    20c8:	stp	x29, x30, [sp, #80]
    20cc:	stp	x28, x27, [sp, #96]
    20d0:	stp	x26, x25, [sp, #112]
    20d4:	stp	x24, x23, [sp, #128]
    20d8:	stp	x22, x21, [sp, #144]
    20dc:	stp	x20, x19, [sp, #160]
    20e0:	add	x29, sp, #0x50
    20e4:	sub	x9, x29, #0x20
    20e8:	mov	w10, #0x207b                	// #8315
    20ec:	mov	w11, #0x2                   	// #2
    20f0:	add	x22, x9, #0x10
    20f4:	sturh	w10, [x29, #-16]
    20f8:	stp	x22, x11, [x29, #-32]
    20fc:	sturb	wzr, [x29, #-14]
    2100:	ldr	w9, [x0, #32]
    2104:	mov	x19, x8
    2108:	cbz	w9, 2234 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x170>
    210c:	str	x22, [sp, #8]
    2110:	add	x8, sp, #0x10
    2114:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    2118:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    211c:	mov	x20, x0
    2120:	mov	x24, xzr
    2124:	add	x25, x0, #0x28
    2128:	neg	x26, x9
    212c:	sub	w27, w9, #0x1
    2130:	mov	x28, #0x3fffffffffffffff    	// #4611686018427387903
    2134:	add	x21, x21, #0x0
    2138:	add	x23, x8, #0x10
    213c:	add	x22, x22, #0x0
    2140:	b	2150 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x8c>
    2144:	sub	x24, x24, #0x1
    2148:	cmp	x26, x24
    214c:	b.eq	21dc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x118>  // b.none
    2150:	cbz	x24, 2174 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xb0>
    2154:	ldur	x8, [x29, #-24]
    2158:	orr	x8, x8, #0x1
    215c:	cmp	x8, x28
    2160:	b.eq	22bc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    2164:	sub	x0, x29, #0x20
    2168:	mov	w2, #0x2                   	// #2
    216c:	mov	x1, x22
    2170:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2174:	ldr	w9, [x20, #32]
    2178:	add	x8, x27, x24
    217c:	cmp	w9, w8
    2180:	b.ls	22c8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x204>  // b.plast
    2184:	ldr	x0, [x25, w8, uxtw #3]
    2188:	cbz	x0, 21bc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0xf8>
    218c:	ldr	x8, [x0]
    2190:	ldr	x9, [x8, #40]
    2194:	add	x8, sp, #0x10
    2198:	blr	x9
    219c:	ldp	x1, x2, [sp, #16]
    21a0:	sub	x0, x29, #0x20
    21a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    21a8:	ldr	x0, [sp, #16]
    21ac:	cmp	x0, x23
    21b0:	b.eq	2144 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>  // b.none
    21b4:	bl	0 <_ZdlPv>
    21b8:	b	2144 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>
    21bc:	ldur	x8, [x29, #-24]
    21c0:	cmp	x8, x28
    21c4:	b.eq	22bc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    21c8:	sub	x0, x29, #0x20
    21cc:	mov	w2, #0x1                   	// #1
    21d0:	mov	x1, x21
    21d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    21d8:	b	2144 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x80>
    21dc:	ldp	x21, x20, [x29, #-32]
    21e0:	add	x0, x19, #0x10
    21e4:	str	x0, [x19]
    21e8:	cbnz	x21, 21f0 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x12c>
    21ec:	cbnz	x20, 22e8 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x224>
    21f0:	ldr	x22, [sp, #8]
    21f4:	cmp	x20, #0x10
    21f8:	str	x20, [sp, #16]
    21fc:	b.cc	221c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x158>  // b.lo, b.ul, b.last
    2200:	add	x1, sp, #0x10
    2204:	mov	x0, x19
    2208:	mov	x2, xzr
    220c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    2210:	ldr	x8, [sp, #16]
    2214:	str	x0, [x19]
    2218:	str	x8, [x19, #16]
    221c:	cbz	x20, 2254 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x190>
    2220:	cmp	x20, #0x1
    2224:	b.ne	2248 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x184>  // b.any
    2228:	ldrb	w8, [x21]
    222c:	strb	w8, [x0]
    2230:	b	2254 <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x190>
    2234:	add	x0, x19, #0x10
    2238:	mov	w20, #0x2                   	// #2
    223c:	mov	x21, x22
    2240:	str	x0, [x19]
    2244:	str	x20, [sp, #16]
    2248:	mov	x1, x21
    224c:	mov	x2, x20
    2250:	bl	0 <memcpy>
    2254:	ldr	x8, [sp, #16]
    2258:	ldr	x9, [x19]
    225c:	str	x8, [x19, #8]
    2260:	strb	wzr, [x9, x8]
    2264:	ldr	x8, [x19, #8]
    2268:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    226c:	orr	x8, x8, #0x1
    2270:	cmp	x8, x9
    2274:	b.eq	22bc <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
    2278:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    227c:	add	x1, x1, #0x0
    2280:	mov	w2, #0x2                   	// #2
    2284:	mov	x0, x19
    2288:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    228c:	ldur	x0, [x29, #-32]
    2290:	cmp	x0, x22
    2294:	b.eq	229c <_ZNK4llvm8BitsInit11getAsStringB5cxx11Ev+0x1d8>  // b.none
    2298:	bl	0 <_ZdlPv>
    229c:	ldp	x20, x19, [sp, #160]
    22a0:	ldp	x22, x21, [sp, #144]
    22a4:	ldp	x24, x23, [sp, #128]
    22a8:	ldp	x26, x25, [sp, #112]
    22ac:	ldp	x28, x27, [sp, #96]
    22b0:	ldp	x29, x30, [sp, #80]
    22b4:	add	sp, sp, #0xb0
    22b8:	ret
    22bc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    22c0:	add	x0, x0, #0x0
    22c4:	bl	0 <_ZSt20__throw_length_errorPKc>
    22c8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    22cc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    22d0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    22d4:	add	x0, x0, #0x0
    22d8:	add	x1, x1, #0x0
    22dc:	add	x3, x3, #0x0
    22e0:	mov	w2, #0x22e                 	// #558
    22e4:	bl	0 <__assert_fail>
    22e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    22ec:	add	x0, x0, #0x0
    22f0:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000022f4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE>:
    22f4:	sub	sp, sp, #0xf0
    22f8:	stp	x29, x30, [sp, #144]
    22fc:	str	x27, [sp, #160]
    2300:	stp	x26, x25, [sp, #176]
    2304:	stp	x24, x23, [sp, #192]
    2308:	stp	x22, x21, [sp, #208]
    230c:	stp	x20, x19, [sp, #224]
    2310:	add	x29, sp, #0x90
    2314:	ldr	w21, [x0, #32]
    2318:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    231c:	ldr	d0, [x9]
    2320:	mov	x8, sp
    2324:	mov	x20, x1
    2328:	mov	x19, x0
    232c:	add	x1, x8, #0x10
    2330:	cmp	w21, #0x11
    2334:	str	x1, [sp]
    2338:	str	d0, [sp, #8]
    233c:	b.cc	2358 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x64>  // b.lo, b.ul, b.last
    2340:	mov	x0, sp
    2344:	mov	w3, #0x8                   	// #8
    2348:	mov	x2, x21
    234c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2350:	ldr	w8, [sp, #12]
    2354:	b	235c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x68>
    2358:	mov	w8, #0x10                  	// #16
    235c:	cmp	x8, x21
    2360:	b.cc	2560 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x26c>  // b.lo, b.ul, b.last
    2364:	str	w21, [sp, #8]
    2368:	cbz	w21, 237c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x88>
    236c:	ldr	x0, [sp]
    2370:	lsl	x2, x21, #3
    2374:	mov	w1, wzr
    2378:	bl	0 <memset>
    237c:	ldr	w8, [x19, #32]
    2380:	cbz	w8, 24a4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1b0>
    2384:	mov	x21, xzr
    2388:	mov	x27, xzr
    238c:	mov	w24, wzr
    2390:	mov	x25, xzr
    2394:	sub	x26, x8, #0x1
    2398:	add	x8, x19, x25, lsl #3
    239c:	ldr	x22, [x8, #40]
    23a0:	cbz	x22, 24e0 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1ec>
    23a4:	ldrb	w8, [x22, #8]
    23a8:	cmp	w8, #0x15
    23ac:	b.ne	23ec <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xf8>  // b.any
    23b0:	ldr	x23, [x22, #24]
    23b4:	cmp	x23, x27
    23b8:	b.eq	23d8 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xe4>  // b.none
    23bc:	ldr	x8, [x23]
    23c0:	mov	x0, x23
    23c4:	mov	x1, x20
    23c8:	ldr	x8, [x8, #96]
    23cc:	blr	x8
    23d0:	mov	x21, x0
    23d4:	mov	x27, x23
    23d8:	cbz	x21, 2540 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x24c>
    23dc:	ldr	x8, [x21]
    23e0:	ldr	w1, [x22, #32]
    23e4:	mov	x0, x21
    23e8:	b	2408 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x114>
    23ec:	ldr	x8, [x22]
    23f0:	mov	x0, x22
    23f4:	mov	x1, x20
    23f8:	ldr	x8, [x8, #96]
    23fc:	blr	x8
    2400:	ldr	x8, [x0]
    2404:	mov	w1, wzr
    2408:	ldr	x8, [x8, #104]
    240c:	blr	x8
    2410:	mov	x23, x0
    2414:	cbz	x0, 2500 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x20c>
    2418:	ldrb	w8, [x23, #8]
    241c:	cmp	w8, #0x18
    2420:	b.ne	243c <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x148>  // b.any
    2424:	ldr	x8, [x20]
    2428:	mov	x0, x20
    242c:	ldr	x8, [x8, #24]
    2430:	blr	x8
    2434:	tst	w0, #0x1
    2438:	csel	x23, x22, x23, ne  // ne = any
    243c:	ldr	w1, [sp, #8]
    2440:	cmp	x25, x1
    2444:	b.cs	2520 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x22c>  // b.hs, b.nlast
    2448:	ldr	x8, [sp]
    244c:	cmp	x22, x23
    2450:	cset	w9, ne  // ne = any
    2454:	cmp	x26, x25
    2458:	orr	w24, w24, w9
    245c:	str	x23, [x8, x25, lsl #3]
    2460:	b.eq	2494 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1a0>  // b.none
    2464:	ldr	w8, [x19, #32]
    2468:	add	x25, x25, #0x1
    246c:	cmp	x25, x8
    2470:	b.cc	2398 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0xa4>  // b.lo, b.ul, b.last
    2474:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2478:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    247c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2480:	add	x0, x0, #0x0
    2484:	add	x1, x1, #0x0
    2488:	add	x3, x3, #0x0
    248c:	mov	w2, #0x22e                 	// #558
    2490:	bl	0 <__assert_fail>
    2494:	tbz	w24, #0, 24a4 <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1b0>
    2498:	ldr	x0, [sp]
    249c:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    24a0:	mov	x19, x0
    24a4:	ldr	x0, [sp]
    24a8:	mov	x8, sp
    24ac:	add	x8, x8, #0x10
    24b0:	cmp	x0, x8
    24b4:	b.eq	24bc <_ZNK4llvm8BitsInit17resolveReferencesERNS_8ResolverE+0x1c8>  // b.none
    24b8:	bl	0 <free>
    24bc:	mov	x0, x19
    24c0:	ldp	x20, x19, [sp, #224]
    24c4:	ldp	x22, x21, [sp, #208]
    24c8:	ldp	x24, x23, [sp, #192]
    24cc:	ldp	x26, x25, [sp, #176]
    24d0:	ldr	x27, [sp, #160]
    24d4:	ldp	x29, x30, [sp, #144]
    24d8:	add	sp, sp, #0xf0
    24dc:	ret
    24e0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    24e4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    24e8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    24ec:	add	x0, x0, #0x0
    24f0:	add	x1, x1, #0x0
    24f4:	add	x3, x3, #0x0
    24f8:	mov	w2, #0x69                  	// #105
    24fc:	bl	0 <__assert_fail>
    2500:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2504:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2508:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    250c:	add	x0, x0, #0x0
    2510:	add	x1, x1, #0x0
    2514:	add	x3, x3, #0x0
    2518:	mov	w2, #0x69                  	// #105
    251c:	bl	0 <__assert_fail>
    2520:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2524:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2528:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    252c:	add	x0, x0, #0x0
    2530:	add	x1, x1, #0x0
    2534:	add	x3, x3, #0x0
    2538:	mov	w2, #0x95                  	// #149
    253c:	bl	0 <__assert_fail>
    2540:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2544:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2548:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    254c:	add	x0, x0, #0x0
    2550:	add	x1, x1, #0x0
    2554:	add	x3, x3, #0x0
    2558:	mov	w2, #0x1b9                 	// #441
    255c:	bl	0 <__assert_fail>
    2560:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2564:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2568:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    256c:	add	x0, x0, #0x0
    2570:	add	x1, x1, #0x0
    2574:	add	x3, x3, #0x0
    2578:	mov	w2, #0x43                  	// #67
    257c:	bl	0 <__assert_fail>

0000000000002580 <_ZNK4llvm7IntInit11getAsStringB5cxx11Ev>:
    2580:	ldr	x0, [x0, #24]
    2584:	b	0 <_ZNK4llvm5RecTy4dumpEv>

0000000000002588 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE>:
    2588:	sub	sp, sp, #0xd0
    258c:	stp	x29, x30, [sp, #160]
    2590:	str	x21, [sp, #176]
    2594:	stp	x20, x19, [sp, #192]
    2598:	add	x29, sp, #0xa0
    259c:	cbz	x1, 2924 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x39c>
    25a0:	ldr	w8, [x1, #8]
    25a4:	mov	x19, x1
    25a8:	mov	x21, x0
    25ac:	cbz	w8, 2624 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x9c>
    25b0:	cmp	w8, #0x1
    25b4:	b.eq	25c4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3c>  // b.none
    25b8:	cmp	w8, #0x3
    25bc:	b.eq	2858 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2d0>  // b.none
    25c0:	b	2630 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xa8>
    25c4:	ldr	w20, [x19, #24]
    25c8:	ldr	x21, [x21, #24]
    25cc:	cmp	w20, #0x3f
    25d0:	b.hi	25ec <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x64>  // b.pmore
    25d4:	asr	x8, x21, x20
    25d8:	cbz	x8, 25ec <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x64>
    25dc:	sub	w8, w20, #0x1
    25e0:	asr	x8, x21, x8
    25e4:	cmn	x8, #0x1
    25e8:	b.ne	2630 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xa8>  // b.any
    25ec:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    25f0:	ldr	d0, [x9]
    25f4:	add	x8, sp, #0x10
    25f8:	add	x1, x8, #0x10
    25fc:	cmp	w20, #0x11
    2600:	str	x1, [sp, #16]
    2604:	str	d0, [sp, #24]
    2608:	b.cc	2670 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xe8>  // b.lo, b.ul, b.last
    260c:	add	x0, sp, #0x10
    2610:	mov	w3, #0x8                   	// #8
    2614:	mov	x2, x20
    2618:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    261c:	ldr	w8, [sp, #28]
    2620:	b	2674 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xec>
    2624:	ldr	x20, [x21, #24]
    2628:	cmp	x20, #0x1
    262c:	b.ls	2638 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xb0>  // b.plast
    2630:	mov	x21, xzr
    2634:	b	2858 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2d0>
    2638:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    263c:	add	x8, x8, #0x0
    2640:	ldarb	w8, [x8]
    2644:	tbz	w8, #0, 2870 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2e8>
    2648:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    264c:	add	x8, x8, #0x0
    2650:	ldarb	w8, [x8]
    2654:	tbz	w8, #0, 28bc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x334>
    2658:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    265c:	add	x8, x8, #0x0
    2660:	add	x9, x8, #0x20
    2664:	cmp	x20, #0x0
    2668:	csel	x21, x9, x8, eq  // eq = none
    266c:	b	2858 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2d0>
    2670:	mov	w8, #0x10                  	// #16
    2674:	cmp	x8, x20
    2678:	b.cc	2944 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x3bc>  // b.lo, b.ul, b.last
    267c:	str	w20, [sp, #24]
    2680:	cbz	w20, 2694 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x10c>
    2684:	ldr	x0, [sp, #16]
    2688:	lsl	x2, x20, #3
    268c:	mov	w1, wzr
    2690:	bl	0 <memset>
    2694:	ldr	w8, [x19, #24]
    2698:	cbz	w8, 2828 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2a0>
    269c:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    26a0:	ldr	x10, [x10]
    26a4:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    26a8:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    26ac:	adrp	x14, 0 <_ZNK4llvm5RecTy4dumpEv>
    26b0:	mov	x8, xzr
    26b4:	mov	w9, #0x1                   	// #1
    26b8:	add	x13, x13, #0x0
    26bc:	add	x12, x12, #0x0
    26c0:	add	x11, x10, #0x10
    26c4:	add	x14, x14, #0x0
    26c8:	ldarb	w10, [x13]
    26cc:	lsl	x15, x9, x8
    26d0:	cmp	w8, #0x40
    26d4:	csel	x16, x15, xzr, cc  // cc = lo, ul, last
    26d8:	tbz	w10, #0, 271c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x194>
    26dc:	ldarb	w10, [x12]
    26e0:	tbz	w10, #0, 279c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x214>
    26e4:	ldr	w17, [sp, #24]
    26e8:	cmp	w17, w8
    26ec:	b.ls	2904 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x37c>  // b.plast
    26f0:	ldr	x15, [sp, #16]
    26f4:	and	x10, x16, x21
    26f8:	add	x16, x14, #0x20
    26fc:	cmp	x10, #0x0
    2700:	csel	x10, x16, x14, eq  // eq = none
    2704:	str	x10, [x15, x8, lsl #3]
    2708:	ldr	w10, [x19, #24]
    270c:	add	x8, x8, #0x1
    2710:	cmp	w8, w10
    2714:	b.ne	26c8 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x140>  // b.any
    2718:	b	282c <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2a4>
    271c:	mov	x0, x13
    2720:	mov	x20, x13
    2724:	stp	x8, x11, [sp]
    2728:	str	x16, [x29, #24]
    272c:	bl	0 <__cxa_guard_acquire>
    2730:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    2734:	ldr	x16, [x29, #24]
    2738:	ldp	x8, x11, [sp]
    273c:	ldr	x10, [x10]
    2740:	adrp	x14, 0 <_ZNK4llvm5RecTy4dumpEv>
    2744:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2748:	add	x14, x14, #0x0
    274c:	mov	w15, #0x2                   	// #2
    2750:	mov	w9, #0x1                   	// #1
    2754:	add	x12, x12, #0x0
    2758:	mov	x13, x20
    275c:	cbz	w0, 26dc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x154>
    2760:	mov	x0, x20
    2764:	strh	w15, [x13, #472]
    2768:	str	x10, [x13, #480]
    276c:	str	x11, [x13, #464]
    2770:	strb	w9, [x13, #488]
    2774:	bl	0 <__cxa_guard_release>
    2778:	ldr	x16, [x29, #24]
    277c:	ldp	x8, x11, [sp]
    2780:	adrp	x14, 0 <_ZNK4llvm5RecTy4dumpEv>
    2784:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    2788:	add	x14, x14, #0x0
    278c:	mov	w9, #0x1                   	// #1
    2790:	add	x12, x12, #0x0
    2794:	mov	x13, x20
    2798:	b	26dc <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x154>
    279c:	mov	x0, x12
    27a0:	mov	x20, x12
    27a4:	stp	x8, x11, [sp]
    27a8:	str	x16, [x29, #24]
    27ac:	bl	0 <__cxa_guard_acquire>
    27b0:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    27b4:	adrp	x15, 0 <_ZNK4llvm5RecTy4dumpEv>
    27b8:	ldr	x16, [x29, #24]
    27bc:	ldp	x8, x11, [sp]
    27c0:	ldr	x10, [x10]
    27c4:	ldr	x15, [x15]
    27c8:	adrp	x14, 0 <_ZNK4llvm5RecTy4dumpEv>
    27cc:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    27d0:	add	x14, x14, #0x0
    27d4:	mov	w17, #0x2                   	// #2
    27d8:	mov	w9, #0x1                   	// #1
    27dc:	mov	x12, x20
    27e0:	add	x13, x13, #0x0
    27e4:	cbz	w0, 26e4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x15c>
    27e8:	add	x8, x10, #0x10
    27ec:	mov	x0, x20
    27f0:	strh	w17, [x12, #496]
    27f4:	str	x15, [x12, #504]
    27f8:	str	x8, [x12, #488]
    27fc:	strb	wzr, [x12, #512]
    2800:	bl	0 <__cxa_guard_release>
    2804:	ldr	x16, [x29, #24]
    2808:	ldp	x8, x11, [sp]
    280c:	adrp	x14, 0 <_ZNK4llvm5RecTy4dumpEv>
    2810:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2814:	add	x14, x14, #0x0
    2818:	mov	w9, #0x1                   	// #1
    281c:	mov	x12, x20
    2820:	add	x13, x13, #0x0
    2824:	b	26e4 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x15c>
    2828:	ldr	w17, [sp, #24]
    282c:	ldr	x0, [sp, #16]
    2830:	mov	w1, w17
    2834:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    2838:	ldr	x8, [sp, #16]
    283c:	add	x9, sp, #0x10
    2840:	add	x9, x9, #0x10
    2844:	mov	x21, x0
    2848:	cmp	x8, x9
    284c:	b.eq	2858 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0x2d0>  // b.none
    2850:	mov	x0, x8
    2854:	bl	0 <free>
    2858:	mov	x0, x21
    285c:	ldp	x20, x19, [sp, #192]
    2860:	ldr	x21, [sp, #176]
    2864:	ldp	x29, x30, [sp, #160]
    2868:	add	sp, sp, #0xd0
    286c:	ret
    2870:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    2874:	add	x19, x19, #0x0
    2878:	mov	x0, x19
    287c:	bl	0 <__cxa_guard_acquire>
    2880:	cbz	w0, 2648 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xc0>
    2884:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2888:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    288c:	ldr	x9, [x9]
    2890:	ldr	x10, [x10]
    2894:	mov	w8, #0x2                   	// #2
    2898:	mov	w11, #0x1                   	// #1
    289c:	strh	w8, [x19, #472]
    28a0:	add	x8, x10, #0x10
    28a4:	mov	x0, x19
    28a8:	str	x9, [x19, #480]
    28ac:	str	x8, [x19, #464]
    28b0:	strb	w11, [x19, #488]
    28b4:	bl	0 <__cxa_guard_release>
    28b8:	b	2648 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xc0>
    28bc:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    28c0:	add	x19, x19, #0x0
    28c4:	mov	x0, x19
    28c8:	bl	0 <__cxa_guard_acquire>
    28cc:	cbz	w0, 2658 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd0>
    28d0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    28d4:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    28d8:	ldr	x9, [x9]
    28dc:	ldr	x10, [x10]
    28e0:	mov	w8, #0x2                   	// #2
    28e4:	strh	w8, [x19, #496]
    28e8:	mov	x0, x19
    28ec:	add	x8, x10, #0x10
    28f0:	str	x9, [x19, #504]
    28f4:	str	x8, [x19, #488]
    28f8:	strb	wzr, [x19, #512]
    28fc:	bl	0 <__cxa_guard_release>
    2900:	b	2658 <_ZNK4llvm7IntInit20convertInitializerToEPNS_5RecTyE+0xd0>
    2904:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2908:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    290c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2910:	add	x0, x0, #0x0
    2914:	add	x1, x1, #0x0
    2918:	add	x3, x3, #0x0
    291c:	mov	w2, #0x95                  	// #149
    2920:	bl	0 <__assert_fail>
    2924:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2928:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    292c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2930:	add	x0, x0, #0x0
    2934:	add	x1, x1, #0x0
    2938:	add	x3, x3, #0x0
    293c:	mov	w2, #0x69                  	// #105
    2940:	bl	0 <__assert_fail>
    2944:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2948:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    294c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2950:	add	x0, x0, #0x0
    2954:	add	x1, x1, #0x0
    2958:	add	x3, x3, #0x0
    295c:	mov	w2, #0x43                  	// #67
    2960:	bl	0 <__assert_fail>

0000000000002964 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    2964:	sub	sp, sp, #0xe0
    2968:	stp	x29, x30, [sp, #176]
    296c:	str	x21, [sp, #192]
    2970:	stp	x20, x19, [sp, #208]
    2974:	add	x29, sp, #0xb0
    2978:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    297c:	ldr	d0, [x9]
    2980:	add	x8, sp, #0x20
    2984:	mov	x19, x2
    2988:	mov	x20, x1
    298c:	mov	x21, x0
    2990:	add	x1, x8, #0x10
    2994:	cmp	x2, #0x11
    2998:	str	x1, [sp, #32]
    299c:	str	d0, [sp, #40]
    29a0:	b.cc	29bc <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x58>  // b.lo, b.ul, b.last
    29a4:	add	x0, sp, #0x20
    29a8:	mov	w3, #0x8                   	// #8
    29ac:	mov	x2, x19
    29b0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    29b4:	ldr	w8, [sp, #44]
    29b8:	b	29c0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x5c>
    29bc:	mov	w8, #0x10                  	// #16
    29c0:	cmp	x8, x19
    29c4:	b.cc	2c3c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2d8>  // b.lo, b.ul, b.last
    29c8:	ands	x8, x19, #0xffffffff
    29cc:	str	w19, [sp, #40]
    29d0:	b.eq	29e4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>  // b.none
    29d4:	ldr	x0, [sp, #32]
    29d8:	lsl	x2, x8, #3
    29dc:	mov	w1, wzr
    29e0:	bl	0 <memset>
    29e4:	cbz	w19, 2bb0 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x24c>
    29e8:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    29ec:	ldr	x10, [x10]
    29f0:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    29f4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    29f8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    29fc:	mov	x8, xzr
    2a00:	mov	w14, #0x1                   	// #1
    2a04:	add	x13, x13, #0x0
    2a08:	add	x9, x9, #0x0
    2a0c:	add	x12, x10, #0x10
    2a10:	add	x11, x11, #0x0
    2a14:	cmp	x19, x8
    2a18:	b.ls	2bfc <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x298>  // b.plast
    2a1c:	ldr	w16, [x20, x8, lsl #2]
    2a20:	cmp	w16, #0x3f
    2a24:	b.hi	2bc8 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x264>  // b.pmore
    2a28:	ldr	x17, [x21, #24]
    2a2c:	ldarb	w10, [x13]
    2a30:	tbz	w10, #0, 2a74 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x110>
    2a34:	ldarb	w10, [x9]
    2a38:	tbz	w10, #0, 2b0c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x1a8>
    2a3c:	ldr	w18, [sp, #40]
    2a40:	cmp	w18, w8
    2a44:	b.ls	2c1c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x2b8>  // b.plast
    2a48:	lsl	x10, x14, x16
    2a4c:	ldr	x16, [sp, #32]
    2a50:	and	x10, x17, x10
    2a54:	add	x15, x11, #0x20
    2a58:	cmp	x10, #0x0
    2a5c:	csel	x10, x15, x11, eq  // eq = none
    2a60:	str	x10, [x16, x8, lsl #3]
    2a64:	add	x8, x8, #0x1
    2a68:	cmp	w19, w8
    2a6c:	b.ne	2a14 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xb0>  // b.any
    2a70:	b	2bb4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x250>
    2a74:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a78:	add	x0, x0, #0x0
    2a7c:	stp	x8, x12, [sp, #8]
    2a80:	str	x16, [x29, #24]
    2a84:	str	x17, [sp, #24]
    2a88:	bl	0 <__cxa_guard_acquire>
    2a8c:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    2a90:	ldp	x12, x17, [sp, #16]
    2a94:	ldr	x16, [x29, #24]
    2a98:	ldr	x10, [x10]
    2a9c:	ldr	x8, [sp, #8]
    2aa0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    2aa4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2aa8:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2aac:	add	x11, x11, #0x0
    2ab0:	mov	w15, #0x2                   	// #2
    2ab4:	mov	w14, #0x1                   	// #1
    2ab8:	add	x9, x9, #0x0
    2abc:	add	x13, x13, #0x0
    2ac0:	cbz	w0, 2a34 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd0>
    2ac4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ac8:	add	x0, x0, #0x0
    2acc:	strh	w15, [x13, #472]
    2ad0:	str	x10, [x13, #480]
    2ad4:	str	x12, [x13, #464]
    2ad8:	strb	w14, [x13, #488]
    2adc:	bl	0 <__cxa_guard_release>
    2ae0:	ldp	x12, x17, [sp, #16]
    2ae4:	ldr	x16, [x29, #24]
    2ae8:	ldr	x8, [sp, #8]
    2aec:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    2af0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2af4:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2af8:	add	x11, x11, #0x0
    2afc:	mov	w14, #0x1                   	// #1
    2b00:	add	x9, x9, #0x0
    2b04:	add	x13, x13, #0x0
    2b08:	b	2a34 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd0>
    2b0c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b10:	add	x0, x0, #0x0
    2b14:	stp	x8, x12, [sp, #8]
    2b18:	str	x16, [x29, #24]
    2b1c:	str	x17, [sp, #24]
    2b20:	bl	0 <__cxa_guard_acquire>
    2b24:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    2b28:	adrp	x15, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b2c:	ldp	x12, x17, [sp, #16]
    2b30:	ldr	x16, [x29, #24]
    2b34:	ldr	x10, [x10]
    2b38:	ldr	x15, [x15]
    2b3c:	ldr	x8, [sp, #8]
    2b40:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b44:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b48:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b4c:	add	x11, x11, #0x0
    2b50:	mov	w18, #0x2                   	// #2
    2b54:	mov	w14, #0x1                   	// #1
    2b58:	add	x9, x9, #0x0
    2b5c:	add	x13, x13, #0x0
    2b60:	cbz	w0, 2a3c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>
    2b64:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b68:	add	x8, x10, #0x10
    2b6c:	add	x0, x0, #0x0
    2b70:	strh	w18, [x9, #496]
    2b74:	str	x15, [x9, #504]
    2b78:	str	x8, [x9, #488]
    2b7c:	strb	wzr, [x9, #512]
    2b80:	bl	0 <__cxa_guard_release>
    2b84:	ldp	x12, x17, [sp, #16]
    2b88:	ldr	x16, [x29, #24]
    2b8c:	ldr	x8, [sp, #8]
    2b90:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b94:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b98:	adrp	x13, 0 <_ZNK4llvm5RecTy4dumpEv>
    2b9c:	add	x11, x11, #0x0
    2ba0:	mov	w14, #0x1                   	// #1
    2ba4:	add	x9, x9, #0x0
    2ba8:	add	x13, x13, #0x0
    2bac:	b	2a3c <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd8>
    2bb0:	ldr	w18, [sp, #40]
    2bb4:	ldr	x0, [sp, #32]
    2bb8:	mov	w1, w18
    2bbc:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    2bc0:	mov	x19, x0
    2bc4:	b	2bcc <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x268>
    2bc8:	mov	x19, xzr
    2bcc:	ldr	x0, [sp, #32]
    2bd0:	add	x8, sp, #0x20
    2bd4:	add	x8, x8, #0x10
    2bd8:	cmp	x0, x8
    2bdc:	b.eq	2be4 <_ZNK4llvm7IntInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x280>  // b.none
    2be0:	bl	0 <free>
    2be4:	mov	x0, x19
    2be8:	ldp	x20, x19, [sp, #208]
    2bec:	ldr	x21, [sp, #192]
    2bf0:	ldp	x29, x30, [sp, #176]
    2bf4:	add	sp, sp, #0xe0
    2bf8:	ret
    2bfc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c00:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c04:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c08:	add	x0, x0, #0x0
    2c0c:	add	x1, x1, #0x0
    2c10:	add	x3, x3, #0x0
    2c14:	mov	w2, #0xfa                  	// #250
    2c18:	bl	0 <__assert_fail>
    2c1c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c20:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c24:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c28:	add	x0, x0, #0x0
    2c2c:	add	x1, x1, #0x0
    2c30:	add	x3, x3, #0x0
    2c34:	mov	w2, #0x95                  	// #149
    2c38:	bl	0 <__assert_fail>
    2c3c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c40:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c44:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c48:	add	x0, x0, #0x0
    2c4c:	add	x1, x1, #0x0
    2c50:	add	x3, x3, #0x0
    2c54:	mov	w2, #0x43                  	// #67
    2c58:	bl	0 <__assert_fail>

0000000000002c5c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>:
    2c5c:	sub	sp, sp, #0x50
    2c60:	stp	x29, x30, [sp, #32]
    2c64:	stp	x22, x21, [sp, #48]
    2c68:	stp	x20, x19, [sp, #64]
    2c6c:	add	x29, sp, #0x20
    2c70:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c74:	add	x8, x8, #0x0
    2c78:	ldarb	w8, [x8]
    2c7c:	mov	x19, x2
    2c80:	mov	x20, x1
    2c84:	mov	x21, x0
    2c88:	tbz	w8, #0, 2d70 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x114>
    2c8c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2c90:	add	x8, x8, #0x0
    2c94:	ldarb	w8, [x8]
    2c98:	tbnz	w8, #0, 2ca8 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x4c>
    2c9c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2ca0:	add	x0, x0, #0x0
    2ca4:	bl	0 <_ZN4llvm17TrackingStatistic17RegisterStatisticEv>
    2ca8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2cac:	add	x8, x8, #0x0
    2cb0:	ldxr	w9, [x8]
    2cb4:	add	w9, w9, #0x1
    2cb8:	stxr	w10, w9, [x8]
    2cbc:	cbnz	w10, 2cb0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x54>
    2cc0:	cbz	x20, 2d0c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xb0>
    2cc4:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    2cc8:	add	x8, sp, #0x8
    2ccc:	add	x22, x22, #0x0
    2cd0:	mov	w9, #0x1                   	// #1
    2cd4:	add	x3, x8, #0x10
    2cd8:	mov	x0, x22
    2cdc:	mov	x1, x21
    2ce0:	mov	x2, x20
    2ce4:	stp	x21, x20, [sp, #8]
    2ce8:	str	w9, [sp, #24]
    2cec:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2cf0:	ldr	x20, [x0]
    2cf4:	add	x0, x22, #0x118
    2cf8:	mov	w1, #0x30                  	// #48
    2cfc:	mov	w2, #0x4                   	// #4
    2d00:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2d04:	ldr	x8, [x20], #8
    2d08:	b	2d2c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0xd0>
    2d0c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d10:	add	x0, x0, #0x0
    2d14:	mov	w1, #0x30                  	// #48
    2d18:	mov	w2, #0x4                   	// #4
    2d1c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2d20:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d24:	mov	x8, xzr
    2d28:	add	x20, x20, #0x0
    2d2c:	adrp	x10, 18 <_ZNK4llvm5RecTy4dumpEv+0x18>
    2d30:	adrp	x11, 5f8 <_ZNK4llvm11StringRecTy19typeIsConvertibleToEPKNS_5RecTyE+0xc>
    2d34:	ldr	x10, [x10]
    2d38:	ldr	x11, [x11]
    2d3c:	mov	w9, #0x4                   	// #4
    2d40:	strh	w9, [x0, #8]
    2d44:	stp	x10, x20, [x0, #16]
    2d48:	add	x9, x11, #0x10
    2d4c:	str	x9, [x0]
    2d50:	str	x8, [x0, #32]
    2d54:	ldr	x8, [x19]
    2d58:	ldp	x20, x19, [sp, #64]
    2d5c:	ldp	x22, x21, [sp, #48]
    2d60:	ldp	x29, x30, [sp, #32]
    2d64:	str	x8, [x0, #40]
    2d68:	add	sp, sp, #0x50
    2d6c:	ret
    2d70:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d74:	add	x22, x22, #0x0
    2d78:	mov	x0, x22
    2d7c:	bl	0 <__cxa_guard_acquire>
    2d80:	cbz	w0, 2c8c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x30>
    2d84:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2d88:	adrp	x2, 0 <__dso_handle>
    2d8c:	mov	x8, #0x800000000           	// #34359738368
    2d90:	add	x1, x22, #0x1f0
    2d94:	add	x9, x22, #0x308
    2d98:	add	x0, x0, #0x0
    2d9c:	add	x2, x2, #0x0
    2da0:	stp	xzr, xzr, [x22, #496]
    2da4:	str	x8, [x22, #512]
    2da8:	str	x9, [x22, #520]
    2dac:	bl	0 <__cxa_atexit>
    2db0:	mov	x0, x22
    2db4:	bl	0 <__cxa_guard_release>
    2db8:	b	2c8c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE+0x30>

0000000000002dbc <_ZN4llvm10StringInit3getENS_9StringRefE>:
    2dbc:	sub	sp, sp, #0x50
    2dc0:	stp	x29, x30, [sp, #32]
    2dc4:	str	x21, [sp, #48]
    2dc8:	stp	x20, x19, [sp, #64]
    2dcc:	add	x29, sp, #0x20
    2dd0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2dd4:	add	x8, x8, #0x0
    2dd8:	ldarb	w8, [x8]
    2ddc:	mov	x2, x1
    2de0:	mov	x1, x0
    2de4:	tbz	w8, #0, 2e6c <_ZN4llvm10StringInit3getENS_9StringRefE+0xb0>
    2de8:	add	x8, sp, #0x8
    2dec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2df0:	add	x3, x8, #0x10
    2df4:	add	x0, x0, #0x0
    2df8:	stp	x1, x2, [sp, #8]
    2dfc:	str	xzr, [sp, #24]
    2e00:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2e04:	ldr	x19, [x0]
    2e08:	ldr	x0, [x19, #8]
    2e0c:	cbnz	x0, 2e58 <_ZN4llvm10StringInit3getENS_9StringRefE+0x9c>
    2e10:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e14:	add	x0, x0, #0x0
    2e18:	mov	w1, #0x28                  	// #40
    2e1c:	mov	w2, #0x4                   	// #4
    2e20:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    2e24:	adrp	x11, 48 <_ZNK4llvm5RecTy4dumpEv+0x48>
    2e28:	adrp	x12, 578 <_ZNK4llvm9BitsRecTy7typeIsAEPKNS_5RecTyE+0x48>
    2e2c:	ldr	x9, [x19]
    2e30:	ldr	x11, [x11]
    2e34:	ldr	x12, [x12]
    2e38:	mov	w10, #0x12                  	// #18
    2e3c:	add	x8, x19, #0x10
    2e40:	strh	w10, [x0, #8]
    2e44:	add	x10, x12, #0x10
    2e48:	stp	x11, x8, [x0, #16]
    2e4c:	str	x10, [x0]
    2e50:	str	x9, [x0, #32]
    2e54:	str	x0, [x19, #8]
    2e58:	ldp	x20, x19, [sp, #64]
    2e5c:	ldr	x21, [sp, #48]
    2e60:	ldp	x29, x30, [sp, #32]
    2e64:	add	sp, sp, #0x50
    2e68:	ret
    2e6c:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e70:	add	x21, x21, #0x0
    2e74:	mov	x0, x21
    2e78:	mov	x19, x2
    2e7c:	mov	x20, x1
    2e80:	bl	0 <__cxa_guard_acquire>
    2e84:	mov	x1, x20
    2e88:	mov	x2, x19
    2e8c:	cbz	w0, 2de8 <_ZN4llvm10StringInit3getENS_9StringRefE+0x2c>
    2e90:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2e94:	adrp	x2, 0 <__dso_handle>
    2e98:	add	x1, x21, #0x208
    2e9c:	movi	v0.2d, #0x0
    2ea0:	mov	x8, #0x1000000000          	// #68719476736
    2ea4:	add	x9, x21, #0x300
    2ea8:	add	x0, x0, #0x0
    2eac:	add	x2, x2, #0x0
    2eb0:	str	q0, [x1]
    2eb4:	str	x8, [x1, #16]
    2eb8:	str	x9, [x21, #544]
    2ebc:	bl	0 <__cxa_atexit>
    2ec0:	mov	x0, x21
    2ec4:	bl	0 <__cxa_guard_release>
    2ec8:	mov	x1, x20
    2ecc:	mov	x2, x19
    2ed0:	b	2de8 <_ZN4llvm10StringInit3getENS_9StringRefE+0x2c>

0000000000002ed4 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE>:
    2ed4:	sub	sp, sp, #0x20
    2ed8:	stp	x29, x30, [sp, #16]
    2edc:	add	x29, sp, #0x10
    2ee0:	cbz	x1, 2f28 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x54>
    2ee4:	ldr	w8, [x1, #8]
    2ee8:	cmp	w8, #0x2
    2eec:	b.eq	2f08 <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x34>  // b.none
    2ef0:	cmp	w8, #0x4
    2ef4:	b.eq	2efc <_ZNK4llvm10StringInit20convertInitializerToEPNS_5RecTyE+0x28>  // b.none
    2ef8:	mov	x0, xzr
    2efc:	ldp	x29, x30, [sp, #16]
    2f00:	add	sp, sp, #0x20
    2f04:	ret
    2f08:	ldp	x8, x1, [x0, #24]
    2f0c:	add	x2, sp, #0x8
    2f10:	str	xzr, [sp, #8]
    2f14:	mov	x0, x8
    2f18:	bl	2c5c <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    2f1c:	ldp	x29, x30, [sp, #16]
    2f20:	add	sp, sp, #0x20
    2f24:	ret
    2f28:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f2c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f30:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f34:	add	x0, x0, #0x0
    2f38:	add	x1, x1, #0x0
    2f3c:	add	x3, x3, #0x0
    2f40:	mov	w2, #0x69                  	// #105
    2f44:	bl	0 <__assert_fail>

0000000000002f48 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE>:
    2f48:	stp	x29, x30, [sp, #-16]!
    2f4c:	mov	x29, sp
    2f50:	cbz	x1, 2f84 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x3c>
    2f54:	ldr	w8, [x1, #8]
    2f58:	cmp	w8, #0x4
    2f5c:	b.eq	2f74 <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x2c>  // b.none
    2f60:	cmp	w8, #0x2
    2f64:	b.eq	2f6c <_ZNK4llvm8CodeInit20convertInitializerToEPNS_5RecTyE+0x24>  // b.none
    2f68:	mov	x0, xzr
    2f6c:	ldp	x29, x30, [sp], #16
    2f70:	ret
    2f74:	ldp	x8, x1, [x0, #24]
    2f78:	mov	x0, x8
    2f7c:	ldp	x29, x30, [sp], #16
    2f80:	b	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    2f84:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f88:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f8c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    2f90:	add	x0, x0, #0x0
    2f94:	add	x1, x1, #0x0
    2f98:	add	x3, x3, #0x0
    2f9c:	mov	w2, #0x69                  	// #105
    2fa0:	bl	0 <__assert_fail>

0000000000002fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>:
    2fa4:	sub	sp, sp, #0xe0
    2fa8:	stp	x29, x30, [sp, #160]
    2fac:	stp	x24, x23, [sp, #176]
    2fb0:	stp	x22, x21, [sp, #192]
    2fb4:	stp	x20, x19, [sp, #208]
    2fb8:	add	x29, sp, #0xa0
    2fbc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2fc0:	add	x8, x8, #0x0
    2fc4:	ldarb	w8, [x8]
    2fc8:	mov	x21, x2
    2fcc:	mov	x20, x1
    2fd0:	mov	x19, x0
    2fd4:	tbz	w8, #0, 3174 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1d0>
    2fd8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    2fdc:	ldr	d0, [x8]
    2fe0:	add	x8, sp, #0x10
    2fe4:	add	x8, x8, #0x10
    2fe8:	add	x0, sp, #0x10
    2fec:	mov	x1, x20
    2ff0:	str	x8, [sp, #16]
    2ff4:	str	d0, [sp, #24]
    2ff8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    2ffc:	add	x0, sp, #0x10
    3000:	mov	x1, x21
    3004:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3008:	cbz	x20, 3028 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x84>
    300c:	lsl	x22, x20, #3
    3010:	mov	x23, x19
    3014:	ldr	x1, [x23], #8
    3018:	add	x0, sp, #0x10
    301c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3020:	subs	x22, x22, #0x8
    3024:	b.ne	3014 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x70>  // b.any
    3028:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    302c:	add	x0, x0, #0x0
    3030:	add	x1, sp, #0x10
    3034:	add	x2, sp, #0x8
    3038:	str	xzr, [sp, #8]
    303c:	add	x23, sp, #0x10
    3040:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    3044:	cbz	x0, 307c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xd8>
    3048:	sub	x22, x0, #0x18
    304c:	ldr	x0, [sp, #16]
    3050:	add	x8, x23, #0x10
    3054:	cmp	x0, x8
    3058:	b.eq	3060 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xbc>  // b.none
    305c:	bl	0 <free>
    3060:	mov	x0, x22
    3064:	ldp	x20, x19, [sp, #208]
    3068:	ldp	x22, x21, [sp, #192]
    306c:	ldp	x24, x23, [sp, #176]
    3070:	ldp	x29, x30, [sp, #160]
    3074:	add	sp, sp, #0xe0
    3078:	ret
    307c:	cbz	x20, 30b0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x10c>
    3080:	ldr	x8, [x19]
    3084:	cbz	x8, 31cc <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x228>
    3088:	ldrb	w9, [x8, #8]
    308c:	sub	w9, w9, #0x1
    3090:	cmp	w9, #0x16
    3094:	b.hi	30b0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x10c>  // b.pmore
    3098:	ldr	x0, [x8, #16]
    309c:	mov	x1, x21
    30a0:	ldr	x8, [x0]
    30a4:	ldr	x8, [x8, #24]
    30a8:	blr	x8
    30ac:	tbz	w0, #0, 31ec <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x248>
    30b0:	lsl	x8, x20, #3
    30b4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    30b8:	add	x1, x8, #0x28
    30bc:	add	x0, x0, #0x0
    30c0:	mov	w2, #0x3                   	// #3
    30c4:	add	x24, x19, x20, lsl #3
    30c8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    30cc:	ldr	x8, [x21, #16]
    30d0:	mov	x22, x0
    30d4:	cbnz	x8, 3110 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x16c>
    30d8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    30dc:	add	x0, x0, #0x0
    30e0:	mov	w1, #0x20                  	// #32
    30e4:	mov	w2, #0x4                   	// #4
    30e8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    30ec:	adrp	x10, 1d0 <_ZN4llvm9BitsRecTy3getEj+0x40>
    30f0:	ldr	x10, [x10]
    30f4:	mov	w9, #0x5                   	// #5
    30f8:	mov	x8, x0
    30fc:	str	w9, [x0, #8]
    3100:	add	x9, x10, #0x10
    3104:	stp	xzr, x21, [x0, #16]
    3108:	str	x9, [x0]
    310c:	str	x0, [x21, #16]
    3110:	str	x8, [x22, #16]
    3114:	adrp	x8, 678 <_ZNK4llvm9ListRecTy11getAsStringB5cxx11Ev+0x70>
    3118:	ldr	x8, [x8]
    311c:	mov	w9, #0x9                   	// #9
    3120:	mov	x21, x22
    3124:	subs	x2, x24, x19
    3128:	strh	w9, [x22, #8]
    312c:	str	xzr, [x21, #24]!
    3130:	add	x8, x8, #0x10
    3134:	str	x8, [x22]
    3138:	str	w20, [x22, #32]
    313c:	b.eq	314c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x1a8>  // b.none
    3140:	add	x0, x22, #0x28
    3144:	mov	x1, x19
    3148:	bl	0 <memmove>
    314c:	ldr	x2, [sp, #8]
    3150:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3154:	add	x0, x0, #0x0
    3158:	mov	x1, x21
    315c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    3160:	ldr	x0, [sp, #16]
    3164:	add	x8, x23, #0x10
    3168:	cmp	x0, x8
    316c:	b.ne	305c <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xb8>  // b.any
    3170:	b	3060 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0xbc>
    3174:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    3178:	add	x22, x22, #0x0
    317c:	mov	x0, x22
    3180:	bl	0 <__cxa_guard_acquire>
    3184:	cbz	w0, 2fd8 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    3188:	add	x23, x22, #0xa8
    318c:	mov	w1, #0x6                   	// #6
    3190:	mov	x0, x23
    3194:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    3198:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    319c:	ldr	x8, [x8]
    31a0:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    31a4:	adrp	x2, 0 <__dso_handle>
    31a8:	add	x2, x2, #0x0
    31ac:	add	x8, x8, #0x10
    31b0:	str	x8, [x22, #168]
    31b4:	ldr	x0, [x0]
    31b8:	mov	x1, x23
    31bc:	bl	0 <__cxa_atexit>
    31c0:	mov	x0, x22
    31c4:	bl	0 <__cxa_guard_release>
    31c8:	b	2fd8 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE+0x34>
    31cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    31d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    31d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    31d8:	add	x0, x0, #0x0
    31dc:	add	x1, x1, #0x0
    31e0:	add	x3, x3, #0x0
    31e4:	mov	w2, #0x69                  	// #105
    31e8:	bl	0 <__assert_fail>
    31ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    31f0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    31f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    31f8:	add	x0, x0, #0x0
    31fc:	add	x1, x1, #0x0
    3200:	add	x3, x3, #0x0
    3204:	mov	w2, #0x245                 	// #581
    3208:	bl	0 <__assert_fail>

000000000000320c <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE>:
    320c:	stp	x29, x30, [sp, #-48]!
    3210:	stp	x22, x21, [sp, #16]
    3214:	stp	x20, x19, [sp, #32]
    3218:	mov	x29, sp
    321c:	ldr	x8, [x0, #16]
    3220:	cbz	x8, 3288 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x7c>
    3224:	ldr	w9, [x8, #8]
    3228:	cmp	w9, #0x5
    322c:	b.ne	32a8 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x9c>  // b.any
    3230:	ldr	w21, [x0, #32]
    3234:	ldr	x22, [x8, #24]
    3238:	mov	x20, x0
    323c:	mov	x19, x1
    3240:	mov	x0, x1
    3244:	mov	x1, x21
    3248:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    324c:	mov	x0, x19
    3250:	mov	x1, x22
    3254:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3258:	cbz	w21, 3278 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x6c>
    325c:	add	x20, x20, #0x28
    3260:	lsl	x21, x21, #3
    3264:	ldr	x1, [x20], #8
    3268:	mov	x0, x19
    326c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3270:	subs	x21, x21, #0x8
    3274:	b.ne	3264 <_ZNK4llvm8ListInit7ProfileERNS_16FoldingSetNodeIDE+0x58>  // b.any
    3278:	ldp	x20, x19, [sp, #32]
    327c:	ldp	x22, x21, [sp, #16]
    3280:	ldp	x29, x30, [sp], #48
    3284:	ret
    3288:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    328c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3290:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3294:	add	x0, x0, #0x0
    3298:	add	x1, x1, #0x0
    329c:	add	x3, x3, #0x0
    32a0:	mov	w2, #0x69                  	// #105
    32a4:	bl	0 <__assert_fail>
    32a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    32ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    32b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    32b4:	add	x0, x0, #0x0
    32b8:	add	x1, x1, #0x0
    32bc:	add	x3, x3, #0x0
    32c0:	mov	w2, #0x108                 	// #264
    32c4:	bl	0 <__assert_fail>

00000000000032c8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE>:
    32c8:	sub	sp, sp, #0xa0
    32cc:	stp	x29, x30, [sp, #80]
    32d0:	stp	x26, x25, [sp, #96]
    32d4:	stp	x24, x23, [sp, #112]
    32d8:	stp	x22, x21, [sp, #128]
    32dc:	stp	x20, x19, [sp, #144]
    32e0:	add	x29, sp, #0x50
    32e4:	ldr	x8, [x0, #16]
    32e8:	mov	x19, x0
    32ec:	cmp	x8, x1
    32f0:	b.eq	3414 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.none
    32f4:	mov	x21, x1
    32f8:	cbz	x1, 3454 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x18c>
    32fc:	ldr	w8, [x21, #8]
    3300:	cmp	w8, #0x5
    3304:	b.ne	33d8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x110>  // b.any
    3308:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    330c:	ldr	d0, [x8]
    3310:	mov	x8, sp
    3314:	add	x20, x8, #0x10
    3318:	str	x20, [sp]
    331c:	str	d0, [sp, #8]
    3320:	ldr	w2, [x19, #32]
    3324:	cmp	w2, #0x9
    3328:	b.cc	3340 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.lo, b.ul, b.last
    332c:	mov	x0, sp
    3330:	mov	w3, #0x8                   	// #8
    3334:	mov	x1, x20
    3338:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    333c:	ldr	w2, [x19, #32]
    3340:	mov	w8, w2
    3344:	lsl	x24, x8, #3
    3348:	cbz	x24, 33fc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    334c:	ldr	x21, [x21, #24]
    3350:	mov	w25, wzr
    3354:	add	x26, x19, #0x28
    3358:	ldr	x22, [x26]
    335c:	mov	x1, x21
    3360:	ldr	x8, [x22]
    3364:	mov	x0, x22
    3368:	ldr	x8, [x8, #64]
    336c:	blr	x8
    3370:	cbz	x0, 33e0 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x118>
    3374:	ldp	w8, w9, [sp, #8]
    3378:	mov	x23, x0
    337c:	cmp	w8, w9
    3380:	b.cs	33bc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xf4>  // b.hs, b.nlast
    3384:	ldr	x9, [sp]
    3388:	str	x23, [x9, w8, uxtw #3]
    338c:	ldp	w8, w9, [sp, #8]
    3390:	cmp	w8, w9
    3394:	b.cs	3434 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x16c>  // b.hs, b.nlast
    3398:	cmp	x23, x22
    339c:	add	x1, x8, #0x1
    33a0:	cset	w8, ne  // ne = any
    33a4:	subs	x24, x24, #0x8
    33a8:	orr	w25, w25, w8
    33ac:	add	x26, x26, #0x8
    33b0:	str	w1, [sp, #8]
    33b4:	b.ne	3358 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x90>  // b.any
    33b8:	b	33e8 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x120>
    33bc:	mov	x0, sp
    33c0:	mov	w3, #0x8                   	// #8
    33c4:	mov	x1, x20
    33c8:	mov	x2, xzr
    33cc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    33d0:	ldr	w8, [sp, #8]
    33d4:	b	3384 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0xbc>
    33d8:	mov	x19, xzr
    33dc:	b	3414 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>
    33e0:	mov	x19, xzr
    33e4:	b	33fc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    33e8:	tbz	w25, #0, 33fc <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x134>
    33ec:	ldr	x0, [sp]
    33f0:	mov	x2, x21
    33f4:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    33f8:	mov	x19, x0
    33fc:	ldr	x0, [sp]
    3400:	mov	x8, sp
    3404:	add	x8, x8, #0x10
    3408:	cmp	x0, x8
    340c:	b.eq	3414 <_ZNK4llvm8ListInit20convertInitializerToEPNS_5RecTyE+0x14c>  // b.none
    3410:	bl	0 <free>
    3414:	mov	x0, x19
    3418:	ldp	x20, x19, [sp, #144]
    341c:	ldp	x22, x21, [sp, #128]
    3420:	ldp	x24, x23, [sp, #112]
    3424:	ldp	x26, x25, [sp, #96]
    3428:	ldp	x29, x30, [sp, #80]
    342c:	add	sp, sp, #0xa0
    3430:	ret
    3434:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3438:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    343c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3440:	add	x0, x0, #0x0
    3444:	add	x1, x1, #0x0
    3448:	add	x3, x3, #0x0
    344c:	mov	w2, #0x43                  	// #67
    3450:	bl	0 <__assert_fail>
    3454:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3458:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    345c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3460:	add	x0, x0, #0x0
    3464:	add	x1, x1, #0x0
    3468:	add	x3, x3, #0x0
    346c:	mov	w2, #0x69                  	// #105
    3470:	bl	0 <__assert_fail>

0000000000003474 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE>:
    3474:	sub	sp, sp, #0x90
    3478:	stp	x29, x30, [sp, #80]
    347c:	stp	x24, x23, [sp, #96]
    3480:	stp	x22, x21, [sp, #112]
    3484:	stp	x20, x19, [sp, #128]
    3488:	add	x29, sp, #0x50
    348c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3490:	ldr	d0, [x9]
    3494:	mov	x8, sp
    3498:	mov	x22, x2
    349c:	mov	x20, x1
    34a0:	mov	x19, x0
    34a4:	add	x21, x8, #0x10
    34a8:	cmp	x2, #0x9
    34ac:	str	x21, [sp]
    34b0:	str	d0, [sp, #8]
    34b4:	b.cc	34d0 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x5c>  // b.lo, b.ul, b.last
    34b8:	mov	x0, sp
    34bc:	mov	w3, #0x8                   	// #8
    34c0:	mov	x1, x21
    34c4:	mov	x2, x22
    34c8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    34cc:	b	34d4 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x60>
    34d0:	cbz	x22, 354c <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xd8>
    34d4:	add	x23, x19, #0x28
    34d8:	lsl	x22, x22, #2
    34dc:	ldr	w9, [x20]
    34e0:	ldr	w8, [x19, #32]
    34e4:	cmp	w8, w9
    34e8:	b.ls	3544 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xd0>  // b.plast
    34ec:	ldp	w8, w10, [sp, #8]
    34f0:	ldr	x24, [x23, x9, lsl #3]
    34f4:	cmp	w8, w10
    34f8:	b.cs	3528 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xb4>  // b.hs, b.nlast
    34fc:	ldr	x9, [sp]
    3500:	str	x24, [x9, w8, uxtw #3]
    3504:	ldp	w8, w9, [sp, #8]
    3508:	cmp	w8, w9
    350c:	b.cs	35ac <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x138>  // b.hs, b.nlast
    3510:	add	w8, w8, #0x1
    3514:	subs	x22, x22, #0x4
    3518:	add	x20, x20, #0x4
    351c:	str	w8, [sp, #8]
    3520:	b.ne	34dc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x68>  // b.any
    3524:	b	3550 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0xdc>
    3528:	mov	x0, sp
    352c:	mov	w3, #0x8                   	// #8
    3530:	mov	x1, x21
    3534:	mov	x2, xzr
    3538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    353c:	ldr	w8, [sp, #8]
    3540:	b	34fc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x88>
    3544:	mov	x19, xzr
    3548:	b	3578 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x104>
    354c:	ldr	w8, [sp, #8]
    3550:	ldr	x9, [x19, #16]
    3554:	cbz	x9, 35cc <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x158>
    3558:	ldr	w10, [x9, #8]
    355c:	cmp	w10, #0x5
    3560:	b.ne	35ec <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x178>  // b.any
    3564:	ldr	x0, [sp]
    3568:	ldr	x2, [x9, #24]
    356c:	mov	w1, w8
    3570:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    3574:	mov	x19, x0
    3578:	ldr	x0, [sp]
    357c:	mov	x8, sp
    3580:	add	x8, x8, #0x10
    3584:	cmp	x0, x8
    3588:	b.eq	3590 <_ZNK4llvm8ListInit20convertInitListSliceENS_8ArrayRefIjEE+0x11c>  // b.none
    358c:	bl	0 <free>
    3590:	mov	x0, x19
    3594:	ldp	x20, x19, [sp, #128]
    3598:	ldp	x22, x21, [sp, #112]
    359c:	ldp	x24, x23, [sp, #96]
    35a0:	ldp	x29, x30, [sp, #80]
    35a4:	add	sp, sp, #0x90
    35a8:	ret
    35ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    35b0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    35b4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    35b8:	add	x0, x0, #0x0
    35bc:	add	x1, x1, #0x0
    35c0:	add	x3, x3, #0x0
    35c4:	mov	w2, #0x43                  	// #67
    35c8:	bl	0 <__assert_fail>
    35cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    35d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    35d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    35d8:	add	x0, x0, #0x0
    35dc:	add	x1, x1, #0x0
    35e0:	add	x3, x3, #0x0
    35e4:	mov	w2, #0x69                  	// #105
    35e8:	bl	0 <__assert_fail>
    35ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    35f0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    35f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    35f8:	add	x0, x0, #0x0
    35fc:	add	x1, x1, #0x0
    3600:	add	x3, x3, #0x0
    3604:	mov	w2, #0x108                 	// #264
    3608:	bl	0 <__assert_fail>

000000000000360c <_ZNK4llvm8ListInit18getElementAsRecordEj>:
    360c:	sub	sp, sp, #0x30
    3610:	stp	x29, x30, [sp, #32]
    3614:	add	x29, sp, #0x20
    3618:	ldr	w8, [x0, #32]
    361c:	cmp	w8, w1
    3620:	b.ls	364c <_ZNK4llvm8ListInit18getElementAsRecordEj+0x40>  // b.plast
    3624:	add	x8, x0, w1, uxtw #3
    3628:	ldr	x8, [x8, #40]
    362c:	cbz	x8, 366c <_ZNK4llvm8ListInit18getElementAsRecordEj+0x60>
    3630:	ldrb	w9, [x8, #8]
    3634:	cmp	w9, #0x6
    3638:	b.ne	368c <_ZNK4llvm8ListInit18getElementAsRecordEj+0x80>  // b.any
    363c:	ldr	x0, [x8, #24]
    3640:	ldp	x29, x30, [sp, #32]
    3644:	add	sp, sp, #0x30
    3648:	ret
    364c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3650:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3654:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3658:	add	x0, x0, #0x0
    365c:	add	x1, x1, #0x0
    3660:	add	x3, x3, #0x0
    3664:	mov	w2, #0x27e                 	// #638
    3668:	bl	0 <__assert_fail>
    366c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3670:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3674:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3678:	add	x0, x0, #0x0
    367c:	add	x1, x1, #0x0
    3680:	add	x3, x3, #0x0
    3684:	mov	w2, #0x69                  	// #105
    3688:	bl	0 <__assert_fail>
    368c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3690:	add	x8, x8, #0x0
    3694:	mov	w9, #0x103                 	// #259
    3698:	add	x0, sp, #0x8
    369c:	stp	x8, xzr, [sp, #8]
    36a0:	strh	w9, [sp, #24]
    36a4:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

00000000000036a8 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE>:
    36a8:	sub	sp, sp, #0xa0
    36ac:	stp	x29, x30, [sp, #80]
    36b0:	stp	x26, x25, [sp, #96]
    36b4:	stp	x24, x23, [sp, #112]
    36b8:	stp	x22, x21, [sp, #128]
    36bc:	stp	x20, x19, [sp, #144]
    36c0:	add	x29, sp, #0x50
    36c4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    36c8:	ldr	d0, [x8]
    36cc:	mov	x8, sp
    36d0:	add	x20, x8, #0x10
    36d4:	str	x20, [sp]
    36d8:	str	d0, [sp, #8]
    36dc:	ldr	w2, [x0, #32]
    36e0:	mov	x19, x0
    36e4:	mov	x21, x1
    36e8:	cmp	w2, #0x9
    36ec:	b.cc	3704 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.lo, b.ul, b.last
    36f0:	mov	x0, sp
    36f4:	mov	w3, #0x8                   	// #8
    36f8:	mov	x1, x20
    36fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3700:	ldr	w2, [x19, #32]
    3704:	mov	w8, w2
    3708:	lsl	x24, x8, #3
    370c:	cbz	x24, 37c0 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x118>
    3710:	mov	x26, xzr
    3714:	mov	w25, wzr
    3718:	add	x8, x19, x26
    371c:	ldr	x23, [x8, #40]
    3720:	mov	x1, x21
    3724:	ldr	x8, [x23]
    3728:	mov	x0, x23
    372c:	ldr	x8, [x8, #96]
    3730:	blr	x8
    3734:	ldp	w8, w9, [sp, #8]
    3738:	cmp	x0, x23
    373c:	mov	x22, x0
    3740:	cset	w23, ne  // ne = any
    3744:	cmp	w8, w9
    3748:	b.cs	377c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xd4>  // b.hs, b.nlast
    374c:	ldr	x9, [sp]
    3750:	str	x22, [x9, w8, uxtw #3]
    3754:	ldp	w8, w9, [sp, #8]
    3758:	cmp	w8, w9
    375c:	b.cs	37f8 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x150>  // b.hs, b.nlast
    3760:	add	x26, x26, #0x8
    3764:	orr	w25, w25, w23
    3768:	add	x1, x8, #0x1
    376c:	cmp	x24, x26
    3770:	str	w1, [sp, #8]
    3774:	b.ne	3718 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x70>  // b.any
    3778:	b	3798 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xf0>
    377c:	mov	x0, sp
    3780:	mov	w3, #0x8                   	// #8
    3784:	mov	x1, x20
    3788:	mov	x2, xzr
    378c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3790:	ldr	w8, [sp, #8]
    3794:	b	374c <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0xa4>
    3798:	tbz	w25, #0, 37c0 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x118>
    379c:	ldr	x8, [x19, #16]
    37a0:	cbz	x8, 3818 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x170>
    37a4:	ldr	w9, [x8, #8]
    37a8:	cmp	w9, #0x5
    37ac:	b.ne	3838 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x190>  // b.any
    37b0:	ldr	x0, [sp]
    37b4:	ldr	x2, [x8, #24]
    37b8:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    37bc:	mov	x19, x0
    37c0:	ldr	x0, [sp]
    37c4:	mov	x8, sp
    37c8:	add	x8, x8, #0x10
    37cc:	cmp	x0, x8
    37d0:	b.eq	37d8 <_ZNK4llvm8ListInit17resolveReferencesERNS_8ResolverE+0x130>  // b.none
    37d4:	bl	0 <free>
    37d8:	mov	x0, x19
    37dc:	ldp	x20, x19, [sp, #144]
    37e0:	ldp	x22, x21, [sp, #128]
    37e4:	ldp	x24, x23, [sp, #112]
    37e8:	ldp	x26, x25, [sp, #96]
    37ec:	ldp	x29, x30, [sp, #80]
    37f0:	add	sp, sp, #0xa0
    37f4:	ret
    37f8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    37fc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3800:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3804:	add	x0, x0, #0x0
    3808:	add	x1, x1, #0x0
    380c:	add	x3, x3, #0x0
    3810:	mov	w2, #0x43                  	// #67
    3814:	bl	0 <__assert_fail>
    3818:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    381c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3820:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3824:	add	x0, x0, #0x0
    3828:	add	x1, x1, #0x0
    382c:	add	x3, x3, #0x0
    3830:	mov	w2, #0x69                  	// #105
    3834:	bl	0 <__assert_fail>
    3838:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    383c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3840:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3844:	add	x0, x0, #0x0
    3848:	add	x1, x1, #0x0
    384c:	add	x3, x3, #0x0
    3850:	mov	w2, #0x108                 	// #264
    3854:	bl	0 <__assert_fail>

0000000000003858 <_ZNK4llvm8ListInit10isConcreteEv>:
    3858:	stp	x29, x30, [sp, #-32]!
    385c:	stp	x20, x19, [sp, #16]
    3860:	mov	x29, sp
    3864:	ldr	w8, [x0, #32]
    3868:	lsl	x19, x8, #3
    386c:	cbz	x19, 3890 <_ZNK4llvm8ListInit10isConcreteEv+0x38>
    3870:	add	x20, x0, #0x28
    3874:	ldr	x0, [x20], #8
    3878:	ldr	x8, [x0]
    387c:	ldr	x8, [x8, #32]
    3880:	blr	x8
    3884:	tbz	w0, #0, 38a0 <_ZNK4llvm8ListInit10isConcreteEv+0x48>
    3888:	subs	x19, x19, #0x8
    388c:	b.ne	3874 <_ZNK4llvm8ListInit10isConcreteEv+0x1c>  // b.any
    3890:	mov	w0, #0x1                   	// #1
    3894:	ldp	x20, x19, [sp, #16]
    3898:	ldp	x29, x30, [sp], #32
    389c:	ret
    38a0:	mov	w0, wzr
    38a4:	ldp	x20, x19, [sp, #16]
    38a8:	ldp	x29, x30, [sp], #32
    38ac:	ret

00000000000038b0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev>:
    38b0:	sub	sp, sp, #0x90
    38b4:	stp	x29, x30, [sp, #64]
    38b8:	stp	x26, x25, [sp, #80]
    38bc:	stp	x24, x23, [sp, #96]
    38c0:	stp	x22, x21, [sp, #112]
    38c4:	stp	x20, x19, [sp, #128]
    38c8:	add	x29, sp, #0x40
    38cc:	add	x9, sp, #0x20
    38d0:	mov	w10, #0x5b                  	// #91
    38d4:	mov	w11, #0x1                   	// #1
    38d8:	add	x22, x9, #0x10
    38dc:	strh	w10, [sp, #48]
    38e0:	stp	x22, x11, [sp, #32]
    38e4:	ldr	w9, [x0, #32]
    38e8:	mov	x19, x8
    38ec:	lsl	x21, x9, #3
    38f0:	cbz	x21, 39dc <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x12c>
    38f4:	mov	x8, sp
    38f8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    38fc:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    3900:	mov	x2, xzr
    3904:	add	x23, x0, #0x28
    3908:	add	x1, x1, #0x0
    390c:	add	x24, x24, #0x0
    3910:	add	x25, x8, #0x10
    3914:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    3918:	ldr	x20, [x23]
    391c:	add	x0, sp, #0x20
    3920:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3924:	ldr	x8, [x20]
    3928:	mov	x0, x20
    392c:	ldr	x9, [x8, #40]
    3930:	mov	x8, sp
    3934:	blr	x9
    3938:	ldp	x1, x2, [sp]
    393c:	add	x0, sp, #0x20
    3940:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3944:	ldr	x0, [sp]
    3948:	cmp	x0, x25
    394c:	b.eq	3954 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xa4>  // b.none
    3950:	bl	0 <_ZdlPv>
    3954:	subs	x21, x21, #0x8
    3958:	b.eq	3984 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xd4>  // b.none
    395c:	ldr	x8, [sp, #40]
    3960:	add	x23, x23, #0x8
    3964:	mov	w2, #0x2                   	// #2
    3968:	mov	x1, x24
    396c:	orr	x8, x8, #0x1
    3970:	cmp	x8, x26
    3974:	b.ne	3918 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x68>  // b.any
    3978:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    397c:	add	x0, x0, #0x0
    3980:	bl	0 <_ZSt20__throw_length_errorPKc>
    3984:	ldp	x20, x21, [sp, #32]
    3988:	add	x0, x19, #0x10
    398c:	str	x0, [x19]
    3990:	cbnz	x20, 3998 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xe8>
    3994:	cbnz	x21, 3a58 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x1a8>
    3998:	cmp	x21, #0x10
    399c:	str	x21, [sp]
    39a0:	b.cc	39c0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x110>  // b.lo, b.ul, b.last
    39a4:	mov	x1, sp
    39a8:	mov	x0, x19
    39ac:	mov	x2, xzr
    39b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    39b4:	ldr	x8, [sp]
    39b8:	str	x0, [x19]
    39bc:	str	x8, [x19, #16]
    39c0:	cbz	x21, 39f8 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x148>
    39c4:	cmp	x21, #0x1
    39c8:	b.eq	39f0 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x140>  // b.none
    39cc:	mov	x1, x20
    39d0:	mov	x2, x21
    39d4:	bl	0 <memcpy>
    39d8:	b	39f8 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x148>
    39dc:	add	x0, x19, #0x10
    39e0:	mov	w8, #0x1                   	// #1
    39e4:	str	x0, [x19]
    39e8:	str	x8, [sp]
    39ec:	mov	x20, x22
    39f0:	ldrb	w8, [x20]
    39f4:	strb	w8, [x0]
    39f8:	ldr	x8, [sp]
    39fc:	ldr	x9, [x19]
    3a00:	str	x8, [x19, #8]
    3a04:	strb	wzr, [x9, x8]
    3a08:	ldr	x8, [x19, #8]
    3a0c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    3a10:	cmp	x8, x9
    3a14:	b.eq	3978 <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0xc8>  // b.none
    3a18:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3a1c:	add	x1, x1, #0x0
    3a20:	mov	w2, #0x1                   	// #1
    3a24:	mov	x0, x19
    3a28:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3a2c:	ldr	x0, [sp, #32]
    3a30:	cmp	x0, x22
    3a34:	b.eq	3a3c <_ZNK4llvm8ListInit11getAsStringB5cxx11Ev+0x18c>  // b.none
    3a38:	bl	0 <_ZdlPv>
    3a3c:	ldp	x20, x19, [sp, #128]
    3a40:	ldp	x22, x21, [sp, #112]
    3a44:	ldp	x24, x23, [sp, #96]
    3a48:	ldp	x26, x25, [sp, #80]
    3a4c:	ldp	x29, x30, [sp, #64]
    3a50:	add	sp, sp, #0x90
    3a54:	ret
    3a58:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3a5c:	add	x0, x0, #0x0
    3a60:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000003a64 <_ZNK4llvm6OpInit6getBitEj>:
    3a64:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3a68:	ldr	x8, [x0, #16]
    3a6c:	ldr	x9, [x9]
    3a70:	cmp	x8, x9
    3a74:	b.eq	3a7c <_ZNK4llvm6OpInit6getBitEj+0x18>  // b.none
    3a78:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    3a7c:	ret

0000000000003a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>:
    3a80:	sub	sp, sp, #0x40
    3a84:	stp	x29, x30, [sp, #16]
    3a88:	str	x21, [sp, #32]
    3a8c:	stp	x20, x19, [sp, #48]
    3a90:	add	x29, sp, #0x10
    3a94:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3a98:	add	x8, x8, #0x0
    3a9c:	ldarb	w8, [x8]
    3aa0:	mov	w19, w1
    3aa4:	mov	x20, x0
    3aa8:	tbz	w8, #0, 3b88 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x108>
    3aac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ab0:	mov	w8, w19
    3ab4:	add	x0, x0, #0x0
    3ab8:	mov	x1, sp
    3abc:	add	x2, x29, #0x18
    3ac0:	stp	x20, x8, [sp]
    3ac4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3ac8:	ldr	x21, [x29, #24]
    3acc:	tbz	w0, #0, 3adc <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x5c>
    3ad0:	ldr	x0, [x21, #16]
    3ad4:	cbnz	x0, 3b74 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf4>
    3ad8:	b	3b0c <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x8c>
    3adc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ae0:	add	x0, x0, #0x0
    3ae4:	mov	x1, sp
    3ae8:	mov	x2, sp
    3aec:	mov	x3, x21
    3af0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3af4:	ldr	x8, [sp]
    3af8:	mov	x21, x0
    3afc:	str	x8, [x0]
    3b00:	ldr	w8, [sp, #8]
    3b04:	str	xzr, [x0, #16]
    3b08:	str	w8, [x0, #8]
    3b0c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3b10:	add	x0, x0, #0x0
    3b14:	mov	w1, #0x28                  	// #40
    3b18:	mov	w2, #0x4                   	// #4
    3b1c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3b20:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3b24:	adrp	x10, b58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x34c>
    3b28:	ldr	x9, [x9]
    3b2c:	ldr	x10, [x10]
    3b30:	mov	w8, #0x15                  	// #21
    3b34:	strh	w8, [x0, #8]
    3b38:	stp	x9, x20, [x0, #16]
    3b3c:	add	x8, x10, #0x10
    3b40:	str	x8, [x0]
    3b44:	str	w19, [x0, #32]
    3b48:	ldr	x8, [x20, #16]
    3b4c:	cbz	x8, 3bd0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>
    3b50:	ldr	w9, [x8, #8]
    3b54:	cmp	w9, #0x3
    3b58:	b.eq	3b70 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0xf0>  // b.none
    3b5c:	cmp	w9, #0x1
    3b60:	b.ne	3bd0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>  // b.any
    3b64:	ldr	w8, [x8, #24]
    3b68:	cmp	w8, w19
    3b6c:	b.ls	3bd0 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x150>  // b.plast
    3b70:	str	x0, [x21, #16]
    3b74:	ldp	x20, x19, [sp, #48]
    3b78:	ldr	x21, [sp, #32]
    3b7c:	ldp	x29, x30, [sp, #16]
    3b80:	add	sp, sp, #0x40
    3b84:	ret
    3b88:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    3b8c:	add	x21, x21, #0x0
    3b90:	mov	x0, x21
    3b94:	bl	0 <__cxa_guard_acquire>
    3b98:	cbz	w0, 3aac <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2c>
    3b9c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3ba0:	adrp	x2, 0 <__dso_handle>
    3ba4:	add	x1, x21, #0x208
    3ba8:	movi	v0.2d, #0x0
    3bac:	add	x0, x0, #0x0
    3bb0:	add	x2, x2, #0x0
    3bb4:	str	wzr, [x21, #544]
    3bb8:	str	xzr, [x1, #16]
    3bbc:	str	q0, [x1]
    3bc0:	bl	0 <__cxa_atexit>
    3bc4:	mov	x0, x21
    3bc8:	bl	0 <__cxa_guard_release>
    3bcc:	b	3aac <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj+0x2c>
    3bd0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3bd4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    3bd8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    3bdc:	add	x0, x0, #0x0
    3be0:	add	x1, x1, #0x0
    3be4:	add	x3, x3, #0x0
    3be8:	mov	w2, #0x45b                 	// #1115
    3bec:	bl	0 <__assert_fail>

0000000000003bf0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>:
    3bf0:	sub	sp, sp, #0xe0
    3bf4:	stp	x29, x30, [sp, #160]
    3bf8:	stp	x24, x23, [sp, #176]
    3bfc:	stp	x22, x21, [sp, #192]
    3c00:	stp	x20, x19, [sp, #208]
    3c04:	add	x29, sp, #0xa0
    3c08:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3c0c:	add	x8, x8, #0x0
    3c10:	ldarb	w8, [x8]
    3c14:	mov	x20, x2
    3c18:	mov	x19, x1
    3c1c:	mov	w21, w0
    3c20:	tbz	w8, #0, 3d0c <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x11c>
    3c24:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3c28:	ldr	d0, [x8]
    3c2c:	add	x8, sp, #0x10
    3c30:	add	x24, x8, #0x10
    3c34:	and	w1, w21, #0xff
    3c38:	add	x0, sp, #0x10
    3c3c:	str	x24, [sp, #16]
    3c40:	str	d0, [sp, #24]
    3c44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    3c48:	add	x0, sp, #0x10
    3c4c:	mov	x1, x19
    3c50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3c54:	add	x0, sp, #0x10
    3c58:	mov	x1, x20
    3c5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3c60:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    3c64:	add	x22, x22, #0x0
    3c68:	add	x1, sp, #0x10
    3c6c:	add	x2, sp, #0x8
    3c70:	mov	x0, x22
    3c74:	str	xzr, [sp, #8]
    3c78:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    3c7c:	cbz	x0, 3cb0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xc0>
    3c80:	sub	x23, x0, #0x18
    3c84:	ldr	x0, [sp, #16]
    3c88:	cmp	x0, x24
    3c8c:	b.eq	3c94 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xa4>  // b.none
    3c90:	bl	0 <free>
    3c94:	mov	x0, x23
    3c98:	ldp	x20, x19, [sp, #208]
    3c9c:	ldp	x22, x21, [sp, #192]
    3ca0:	ldp	x24, x23, [sp, #176]
    3ca4:	ldp	x29, x30, [sp, #160]
    3ca8:	add	sp, sp, #0xe0
    3cac:	ret
    3cb0:	add	x0, x22, #0x238
    3cb4:	mov	w1, #0x28                  	// #40
    3cb8:	mov	w2, #0x4                   	// #4
    3cbc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3cc0:	strb	w21, [x0, #9]
    3cc4:	str	x20, [x0, #16]
    3cc8:	adrp	x9, 790 <_ZNK4llvm9ListRecTy19typeIsConvertibleToEPKNS_5RecTyE+0x58>
    3ccc:	ldr	x9, [x9]
    3cd0:	ldr	x2, [sp, #8]
    3cd4:	mov	w8, #0xd                   	// #13
    3cd8:	mov	x1, x0
    3cdc:	strb	w8, [x0, #8]
    3ce0:	add	x8, x9, #0x10
    3ce4:	mov	x23, x0
    3ce8:	str	xzr, [x1, #24]!
    3cec:	str	x8, [x0]
    3cf0:	str	x19, [x0, #32]
    3cf4:	mov	x0, x22
    3cf8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    3cfc:	ldr	x0, [sp, #16]
    3d00:	cmp	x0, x24
    3d04:	b.ne	3c90 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xa0>  // b.any
    3d08:	b	3c94 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0xa4>
    3d0c:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    3d10:	add	x22, x22, #0x0
    3d14:	mov	x0, x22
    3d18:	bl	0 <__cxa_guard_acquire>
    3d1c:	cbz	w0, 3c24 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>
    3d20:	add	x23, x22, #0xb8
    3d24:	mov	w1, #0x6                   	// #6
    3d28:	mov	x0, x23
    3d2c:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    3d30:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3d34:	ldr	x8, [x8]
    3d38:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    3d3c:	adrp	x2, 0 <__dso_handle>
    3d40:	add	x2, x2, #0x0
    3d44:	add	x8, x8, #0x10
    3d48:	str	x8, [x22, #184]
    3d4c:	ldr	x0, [x0]
    3d50:	mov	x1, x23
    3d54:	bl	0 <__cxa_atexit>
    3d58:	mov	x0, x22
    3d5c:	bl	0 <__cxa_guard_release>
    3d60:	b	3c24 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE+0x34>

0000000000003d64 <_ZNK4llvm8UnOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    3d64:	stp	x29, x30, [sp, #-48]!
    3d68:	str	x21, [sp, #16]
    3d6c:	stp	x20, x19, [sp, #32]
    3d70:	mov	x29, sp
    3d74:	ldrb	w8, [x0, #9]
    3d78:	ldr	x19, [x0, #32]
    3d7c:	ldr	x20, [x0, #16]
    3d80:	mov	x21, x1
    3d84:	mov	x0, x1
    3d88:	mov	w1, w8
    3d8c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    3d90:	mov	x0, x21
    3d94:	mov	x1, x19
    3d98:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    3d9c:	mov	x0, x21
    3da0:	mov	x1, x20
    3da4:	ldp	x20, x19, [sp, #32]
    3da8:	ldr	x21, [sp, #16]
    3dac:	ldp	x29, x30, [sp], #48
    3db0:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000003db4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>:
    3db4:	stp	x29, x30, [sp, #-96]!
    3db8:	stp	x28, x27, [sp, #16]
    3dbc:	stp	x26, x25, [sp, #32]
    3dc0:	stp	x24, x23, [sp, #48]
    3dc4:	stp	x22, x21, [sp, #64]
    3dc8:	stp	x20, x19, [sp, #80]
    3dcc:	mov	x29, sp
    3dd0:	sub	sp, sp, #0x1b0
    3dd4:	ldrb	w8, [x0, #9]
    3dd8:	mov	x19, x0
    3ddc:	cmp	w8, #0x5
    3de0:	b.hi	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.pmore
    3de4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3de8:	add	x9, x9, #0x0
    3dec:	adr	x10, 3e00 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4c>
    3df0:	ldrb	w11, [x9, x8]
    3df4:	add	x10, x10, x11, lsl #2
    3df8:	mov	x20, x1
    3dfc:	br	x10
    3e00:	ldr	x21, [x19, #16]
    3e04:	cbz	x21, 4368 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5b4>
    3e08:	ldr	w8, [x21, #8]
    3e0c:	cmp	w8, #0x4
    3e10:	b.eq	4190 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3dc>  // b.none
    3e14:	cmp	w8, #0x7
    3e18:	b.ne	41f8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x444>  // b.any
    3e1c:	ldr	x23, [x19, #32]
    3e20:	cbz	x23, 43a8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5f4>
    3e24:	ldrb	w8, [x23, #8]
    3e28:	cmp	w8, #0x12
    3e2c:	b.ne	41fc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x448>  // b.any
    3e30:	mov	w22, w2
    3e34:	cbnz	x20, 3e3c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x88>
    3e38:	tbz	w22, #0, 4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>
    3e3c:	cbz	x20, 448c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x6d8>
    3e40:	ldr	x8, [x20]
    3e44:	cmp	x8, x23
    3e48:	b.eq	4240 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x48c>  // b.none
    3e4c:	ldr	x8, [x20, #104]
    3e50:	ldr	x25, [x23, #32]
    3e54:	ldr	x28, [x8, #64]
    3e58:	add	x8, x8, #0x38
    3e5c:	cbz	x28, 4254 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a0>
    3e60:	ldr	x24, [x23, #24]
    3e64:	mov	x27, x8
    3e68:	str	x8, [sp, #8]
    3e6c:	b	40f0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x33c>
    3e70:	ldr	x8, [x19, #32]
    3e74:	cbz	x8, 4348 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x594>
    3e78:	ldrb	w9, [x8, #8]
    3e7c:	cmp	w9, #0x12
    3e80:	b.eq	4164 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3b0>  // b.none
    3e84:	cmp	w9, #0x9
    3e88:	b.ne	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.any
    3e8c:	ldr	w8, [x8, #32]
    3e90:	cmp	w8, #0x0
    3e94:	b	416c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3b8>
    3e98:	ldr	x8, [x19, #32]
    3e9c:	cbz	x8, 4348 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x594>
    3ea0:	ldrb	w9, [x8, #8]
    3ea4:	cmp	w9, #0x9
    3ea8:	b.ne	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.any
    3eac:	ldr	w9, [x8, #32]
    3eb0:	cbz	w9, 43c8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x614>
    3eb4:	ldr	x10, [x8, #16]
    3eb8:	cbz	x10, 43e8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x634>
    3ebc:	ldr	w11, [x10, #8]
    3ec0:	cmp	w11, #0x5
    3ec4:	b.ne	4408 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x654>  // b.any
    3ec8:	ldr	x2, [x10, #24]
    3ecc:	sub	x1, x9, #0x1
    3ed0:	add	x0, x8, #0x30
    3ed4:	add	sp, sp, #0x1b0
    3ed8:	ldp	x20, x19, [sp, #80]
    3edc:	ldp	x22, x21, [sp, #64]
    3ee0:	ldp	x24, x23, [sp, #48]
    3ee4:	ldp	x26, x25, [sp, #32]
    3ee8:	ldp	x28, x27, [sp, #16]
    3eec:	ldp	x29, x30, [sp], #96
    3ef0:	b	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    3ef4:	ldr	x8, [x19, #32]
    3ef8:	cbz	x8, 4348 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x594>
    3efc:	ldrb	w9, [x8, #8]
    3f00:	cmp	w9, #0x9
    3f04:	b.ne	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.any
    3f08:	ldr	w0, [x8, #32]
    3f0c:	b	4170 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x3bc>
    3f10:	ldr	x8, [x19, #32]
    3f14:	cbz	x8, 4348 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x594>
    3f18:	ldrb	w9, [x8, #8]
    3f1c:	cmp	w9, #0x9
    3f20:	b.ne	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.any
    3f24:	ldr	w9, [x8, #32]
    3f28:	cbz	w9, 4428 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x674>
    3f2c:	ldr	x22, [x8, #40]
    3f30:	b	421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    3f34:	ldr	x8, [x19, #32]
    3f38:	cbz	x8, 4388 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5d4>
    3f3c:	ldrb	w9, [x8, #8]
    3f40:	cmp	w9, #0x5
    3f44:	b.ne	4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>  // b.any
    3f48:	ldr	x8, [x8, #32]
    3f4c:	cbz	x8, 4448 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x694>
    3f50:	ldrb	w9, [x8, #8]
    3f54:	cmp	w9, #0x6
    3f58:	b.ne	4468 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x6b4>  // b.any
    3f5c:	ldr	x21, [x8, #24]
    3f60:	ldr	x22, [x21, #112]
    3f64:	cbnz	x22, 3fa8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x1f4>
    3f68:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    3f6c:	add	x0, x0, #0x0
    3f70:	mov	w1, #0x20                  	// #32
    3f74:	mov	w2, #0x4                   	// #4
    3f78:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    3f7c:	mov	x22, x0
    3f80:	mov	x0, x21
    3f84:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    3f88:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    3f8c:	ldr	x9, [x9]
    3f90:	mov	w8, #0x6                   	// #6
    3f94:	strh	w8, [x22, #8]
    3f98:	stp	x0, x21, [x22, #16]
    3f9c:	add	x8, x9, #0x10
    3fa0:	str	x8, [x22]
    3fa4:	str	x22, [x21, #112]
    3fa8:	ldr	x0, [x22, #16]
    3fac:	ldr	x1, [x19, #16]
    3fb0:	ldr	x8, [x0]
    3fb4:	ldr	x8, [x8, #32]
    3fb8:	blr	x8
    3fbc:	tbnz	w0, #0, 421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    3fc0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    3fc4:	add	x8, x8, #0x0
    3fc8:	mov	w23, #0x103                 	// #259
    3fcc:	ldr	x21, [x20, #8]
    3fd0:	ldr	w20, [x20, #16]
    3fd4:	stp	x8, xzr, [x29, #-208]
    3fd8:	sturh	w23, [x29, #-192]
    3fdc:	ldr	x0, [x19, #16]
    3fe0:	sub	x25, x29, #0x28
    3fe4:	ldr	x8, [x0]
    3fe8:	ldr	x9, [x8, #16]
    3fec:	sub	x8, x29, #0x28
    3ff0:	blr	x9
    3ff4:	mov	w24, #0x104                 	// #260
    3ff8:	sub	x8, x29, #0xb8
    3ffc:	sub	x0, x29, #0xd0
    4000:	add	x1, sp, #0xc8
    4004:	strh	w24, [sp, #216]
    4008:	stp	x25, xzr, [sp, #200]
    400c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4010:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4014:	add	x8, x8, #0x0
    4018:	stp	x8, xzr, [sp, #176]
    401c:	sub	x8, x29, #0xa0
    4020:	sub	x0, x29, #0xb8
    4024:	add	x1, sp, #0xb0
    4028:	strh	w23, [sp, #192]
    402c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4030:	ldr	x0, [x22, #16]
    4034:	add	x22, sp, #0x78
    4038:	ldr	x8, [x0]
    403c:	ldr	x9, [x8, #16]
    4040:	add	x8, sp, #0x78
    4044:	blr	x9
    4048:	sub	x8, x29, #0x88
    404c:	sub	x0, x29, #0xa0
    4050:	add	x1, sp, #0x98
    4054:	strh	w24, [sp, #168]
    4058:	stp	x22, xzr, [sp, #152]
    405c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4060:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4064:	add	x8, x8, #0x0
    4068:	stp	x8, xzr, [sp, #96]
    406c:	sub	x8, x29, #0x70
    4070:	sub	x0, x29, #0x88
    4074:	add	x1, sp, #0x60
    4078:	strh	w23, [sp, #112]
    407c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4080:	ldr	x8, [x19]
    4084:	mov	x0, x19
    4088:	add	x22, sp, #0x28
    408c:	ldr	x9, [x8, #40]
    4090:	add	x8, sp, #0x28
    4094:	blr	x9
    4098:	sub	x8, x29, #0x58
    409c:	sub	x0, x29, #0x70
    40a0:	add	x1, sp, #0x48
    40a4:	strh	w24, [sp, #88]
    40a8:	stp	x22, xzr, [sp, #72]
    40ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    40b0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    40b4:	add	x8, x8, #0x0
    40b8:	stp	x8, xzr, [sp, #16]
    40bc:	sub	x8, x29, #0x40
    40c0:	sub	x0, x29, #0x58
    40c4:	add	x1, sp, #0x10
    40c8:	strh	w23, [sp, #32]
    40cc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    40d0:	sub	x2, x29, #0x40
    40d4:	mov	x0, x21
    40d8:	mov	x1, x20
    40dc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    40e0:	add	x8, x28, #0x10
    40e4:	mov	x27, x28
    40e8:	ldr	x28, [x8]
    40ec:	cbz	x28, 412c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x378>
    40f0:	ldr	x26, [x28, #40]
    40f4:	cmp	x25, x26
    40f8:	csel	x2, x25, x26, cc  // cc = lo, ul, last
    40fc:	cbz	x2, 4118 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x364>
    4100:	ldr	x0, [x28, #32]
    4104:	mov	x1, x24
    4108:	bl	0 <memcmp>
    410c:	cbz	w0, 4118 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x364>
    4110:	tbz	w0, #31, 40e0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x32c>
    4114:	b	4120 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x36c>
    4118:	cmp	x26, x25
    411c:	b.cs	40e0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x32c>  // b.hs, b.nlast
    4120:	add	x8, x28, #0x18
    4124:	ldr	x28, [x8]
    4128:	cbnz	x28, 40f0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x33c>
    412c:	ldr	x8, [sp, #8]
    4130:	cmp	x27, x8
    4134:	b.eq	4258 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.none
    4138:	ldr	x28, [x27, #40]
    413c:	cmp	x28, x25
    4140:	csel	x2, x28, x25, cc  // cc = lo, ul, last
    4144:	cbz	x2, 424c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x498>
    4148:	ldr	x1, [x27, #32]
    414c:	mov	x0, x24
    4150:	bl	0 <memcmp>
    4154:	ldr	x8, [sp, #8]
    4158:	cbz	w0, 424c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x498>
    415c:	tbnz	w0, #31, 4254 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a0>
    4160:	b	4258 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>
    4164:	ldr	x8, [x8, #32]
    4168:	cmp	x8, #0x0
    416c:	cset	w0, eq  // eq = none
    4170:	add	sp, sp, #0x1b0
    4174:	ldp	x20, x19, [sp, #80]
    4178:	ldp	x22, x21, [sp, #64]
    417c:	ldp	x24, x23, [sp, #48]
    4180:	ldp	x26, x25, [sp, #32]
    4184:	ldp	x28, x27, [sp, #16]
    4188:	ldp	x29, x30, [sp], #96
    418c:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    4190:	ldr	x23, [x19, #32]
    4194:	cbz	x23, 43a8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x5f4>
    4198:	ldrb	w8, [x23, #8]
    419c:	cmp	w8, #0x12
    41a0:	csel	x22, x23, xzr, eq  // eq = none
    41a4:	cbnz	x22, 421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    41a8:	cmp	w8, #0x8
    41ac:	b.eq	41b8 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x404>  // b.none
    41b0:	cmp	w8, #0x6
    41b4:	b.ne	41fc <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x448>  // b.any
    41b8:	ldr	x8, [x23]
    41bc:	mov	x0, x23
    41c0:	sub	x19, x29, #0x28
    41c4:	ldr	x9, [x8, #40]
    41c8:	sub	x8, x29, #0x28
    41cc:	blr	x9
    41d0:	ldp	x0, x1, [x29, #-40]
    41d4:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    41d8:	ldur	x8, [x29, #-40]
    41dc:	add	x9, x19, #0x10
    41e0:	mov	x22, x0
    41e4:	cmp	x8, x9
    41e8:	b.eq	421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>  // b.none
    41ec:	mov	x0, x8
    41f0:	bl	0 <_ZdlPv>
    41f4:	b	421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    41f8:	ldr	x23, [x19, #32]
    41fc:	ldr	x8, [x23]
    4200:	mov	x0, x23
    4204:	mov	x1, x21
    4208:	ldr	x8, [x8, #64]
    420c:	blr	x8
    4210:	mov	x22, x0
    4214:	cbnz	x0, 421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    4218:	mov	x22, x19
    421c:	mov	x0, x22
    4220:	add	sp, sp, #0x1b0
    4224:	ldp	x20, x19, [sp, #80]
    4228:	ldp	x22, x21, [sp, #64]
    422c:	ldp	x24, x23, [sp, #48]
    4230:	ldp	x26, x25, [sp, #32]
    4234:	ldp	x28, x27, [sp, #16]
    4238:	ldp	x29, x30, [sp], #96
    423c:	ret
    4240:	mov	x24, x20
    4244:	tbz	w22, #0, 4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>
    4248:	b	4268 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4b4>
    424c:	cmp	x25, x28
    4250:	b.cs	4258 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x4a4>  // b.hs, b.nlast
    4254:	mov	x27, x8
    4258:	cmp	x27, x8
    425c:	b.eq	42d0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x51c>  // b.none
    4260:	ldr	x24, [x27, #64]
    4264:	cbz	x24, 42d0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x51c>
    4268:	ldr	x22, [x24, #112]
    426c:	cbnz	x22, 42b4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x500>
    4270:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4274:	add	x0, x0, #0x0
    4278:	mov	w1, #0x20                  	// #32
    427c:	mov	w2, #0x4                   	// #4
    4280:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4284:	mov	x22, x0
    4288:	mov	x0, x24
    428c:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    4290:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4294:	ldr	x9, [x9]
    4298:	mov	w8, #0x6                   	// #6
    429c:	strh	w8, [x22, #8]
    42a0:	stp	x0, x24, [x22, #16]
    42a4:	add	x8, x9, #0x10
    42a8:	str	x8, [x22]
    42ac:	str	x22, [x24, #112]
    42b0:	ldr	x21, [x19, #16]
    42b4:	ldr	x0, [x22, #16]
    42b8:	mov	x1, x21
    42bc:	ldr	x8, [x0]
    42c0:	ldr	x8, [x8, #32]
    42c4:	blr	x8
    42c8:	tbnz	w0, #0, 421c <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x468>
    42cc:	b	3fc0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x20c>
    42d0:	tbz	w22, #0, 4218 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb+0x464>
    42d4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    42d8:	add	x8, x8, #0x0
    42dc:	mov	w21, #0x103                 	// #259
    42e0:	ldr	x19, [x20, #8]
    42e4:	ldr	w20, [x20, #16]
    42e8:	stp	x8, xzr, [sp, #40]
    42ec:	strh	w21, [sp, #56]
    42f0:	ldr	x8, [x23, #24]
    42f4:	mov	w9, #0x105                 	// #261
    42f8:	sub	x10, x29, #0x70
    42fc:	add	x0, sp, #0x28
    4300:	stp	x8, x25, [x29, #-112]
    4304:	add	x8, sp, #0x78
    4308:	sub	x1, x29, #0x40
    430c:	sturh	w9, [x29, #-48]
    4310:	stp	x10, xzr, [x29, #-64]
    4314:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4318:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    431c:	add	x8, x8, #0x0
    4320:	stp	x8, xzr, [x29, #-88]
    4324:	sub	x8, x29, #0x28
    4328:	add	x0, sp, #0x78
    432c:	sub	x1, x29, #0x58
    4330:	sturh	w21, [x29, #-72]
    4334:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4338:	sub	x2, x29, #0x28
    433c:	mov	x0, x19
    4340:	mov	x1, x20
    4344:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4348:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    434c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4350:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4354:	add	x0, x0, #0x0
    4358:	add	x1, x1, #0x0
    435c:	add	x3, x3, #0x0
    4360:	mov	w2, #0x69                  	// #105
    4364:	bl	0 <__assert_fail>
    4368:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    436c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4370:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4374:	add	x0, x0, #0x0
    4378:	add	x1, x1, #0x0
    437c:	add	x3, x3, #0x0
    4380:	mov	w2, #0x69                  	// #105
    4384:	bl	0 <__assert_fail>
    4388:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    438c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4390:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4394:	add	x0, x0, #0x0
    4398:	add	x1, x1, #0x0
    439c:	add	x3, x3, #0x0
    43a0:	mov	w2, #0x69                  	// #105
    43a4:	bl	0 <__assert_fail>
    43a8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    43ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    43b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    43b4:	add	x0, x0, #0x0
    43b8:	add	x1, x1, #0x0
    43bc:	add	x3, x3, #0x0
    43c0:	mov	w2, #0x69                  	// #105
    43c4:	bl	0 <__assert_fail>
    43c8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    43cc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    43d0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    43d4:	add	x0, x0, #0x0
    43d8:	add	x1, x1, #0x0
    43dc:	add	x3, x3, #0x0
    43e0:	mov	w2, #0x305                 	// #773
    43e4:	bl	0 <__assert_fail>
    43e8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    43ec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    43f0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    43f4:	add	x0, x0, #0x0
    43f8:	add	x1, x1, #0x0
    43fc:	add	x3, x3, #0x0
    4400:	mov	w2, #0x69                  	// #105
    4404:	bl	0 <__assert_fail>
    4408:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    440c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4410:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4414:	add	x0, x0, #0x0
    4418:	add	x1, x1, #0x0
    441c:	add	x3, x3, #0x0
    4420:	mov	w2, #0x108                 	// #264
    4424:	bl	0 <__assert_fail>
    4428:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    442c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4430:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4434:	add	x0, x0, #0x0
    4438:	add	x1, x1, #0x0
    443c:	add	x3, x3, #0x0
    4440:	mov	w2, #0x2fe                 	// #766
    4444:	bl	0 <__assert_fail>
    4448:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    444c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4450:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4454:	add	x0, x0, #0x0
    4458:	add	x1, x1, #0x0
    445c:	add	x3, x3, #0x0
    4460:	mov	w2, #0x69                  	// #105
    4464:	bl	0 <__assert_fail>
    4468:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    446c:	add	x8, x8, #0x0
    4470:	mov	w9, #0x103                 	// #259
    4474:	sub	x2, x29, #0x28
    4478:	mov	x0, xzr
    447c:	mov	x1, xzr
    4480:	stp	x8, xzr, [x29, #-40]
    4484:	sturh	w9, [x29, #-24]
    4488:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    448c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4490:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4494:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4498:	add	x0, x0, #0x0
    449c:	add	x1, x1, #0x0
    44a0:	add	x3, x3, #0x0
    44a4:	mov	w2, #0x2d8                 	// #728
    44a8:	bl	0 <__assert_fail>

00000000000044ac <_ZN4llvm7DefInit3getEPNS_6RecordE>:
    44ac:	stp	x29, x30, [sp, #-32]!
    44b0:	stp	x20, x19, [sp, #16]
    44b4:	mov	x29, sp
    44b8:	ldr	x20, [x0, #112]
    44bc:	cbz	x20, 44d0 <_ZN4llvm7DefInit3getEPNS_6RecordE+0x24>
    44c0:	mov	x0, x20
    44c4:	ldp	x20, x19, [sp, #16]
    44c8:	ldp	x29, x30, [sp], #32
    44cc:	ret
    44d0:	mov	x19, x0
    44d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    44d8:	add	x0, x0, #0x0
    44dc:	mov	w1, #0x20                  	// #32
    44e0:	mov	w2, #0x4                   	// #4
    44e4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    44e8:	mov	x20, x0
    44ec:	mov	x0, x19
    44f0:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    44f4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    44f8:	ldr	x9, [x9]
    44fc:	mov	w8, #0x6                   	// #6
    4500:	strh	w8, [x20, #8]
    4504:	stp	x0, x19, [x20, #16]
    4508:	add	x8, x9, #0x10
    450c:	str	x8, [x20]
    4510:	str	x20, [x19, #112]
    4514:	mov	x0, x20
    4518:	ldp	x20, x19, [sp, #16]
    451c:	ldp	x29, x30, [sp], #32
    4520:	ret

0000000000004524 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE>:
    4524:	sub	sp, sp, #0x30
    4528:	stp	x29, x30, [sp, #32]
    452c:	add	x29, sp, #0x20
    4530:	ldr	x9, [x0, #32]
    4534:	cbz	x9, 4554 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x30>
    4538:	ldrb	w10, [x9, #8]
    453c:	cmp	w10, #0x6
    4540:	b.ne	4574 <_ZNK4llvm7DagInit16getOperatorAsDefENS_8ArrayRefINS_5SMLocEEE+0x50>  // b.any
    4544:	ldr	x0, [x9, #24]
    4548:	ldp	x29, x30, [sp, #32]
    454c:	add	sp, sp, #0x30
    4550:	ret
    4554:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4558:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    455c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4560:	add	x0, x0, #0x0
    4564:	add	x1, x1, #0x0
    4568:	add	x3, x3, #0x0
    456c:	mov	w2, #0x69                  	// #105
    4570:	bl	0 <__assert_fail>
    4574:	mov	x8, x2
    4578:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    457c:	add	x9, x9, #0x0
    4580:	mov	w10, #0x103                 	// #259
    4584:	add	x2, sp, #0x8
    4588:	mov	x0, x1
    458c:	mov	x1, x8
    4590:	stp	x9, xzr, [sp, #8]
    4594:	strh	w10, [sp, #24]
    4598:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000459c <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE>:
    459c:	stp	x29, x30, [sp, #-32]!
    45a0:	stp	x20, x19, [sp, #16]
    45a4:	mov	x29, sp
    45a8:	mov	x20, x0
    45ac:	ldr	x0, [x0, #32]
    45b0:	mov	x19, x1
    45b4:	ldr	x8, [x0]
    45b8:	ldr	x8, [x8, #96]
    45bc:	blr	x8
    45c0:	ldr	x8, [x20, #32]
    45c4:	mov	x1, x0
    45c8:	cmp	x8, x0
    45cc:	b.eq	45f0 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x54>  // b.none
    45d0:	ldrb	w0, [x20, #9]
    45d4:	ldr	x2, [x20, #16]
    45d8:	bl	3bf0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    45dc:	ldr	x1, [x19, #8]
    45e0:	ldrb	w2, [x19, #16]
    45e4:	ldp	x20, x19, [sp, #16]
    45e8:	ldp	x29, x30, [sp], #32
    45ec:	b	3db4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    45f0:	ldrb	w8, [x19, #16]
    45f4:	cbz	w8, 4600 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x64>
    45f8:	ldrb	w8, [x20, #9]
    45fc:	cbz	w8, 4610 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x74>
    4600:	mov	x0, x20
    4604:	ldp	x20, x19, [sp, #16]
    4608:	ldp	x29, x30, [sp], #32
    460c:	ret
    4610:	mov	w0, wzr
    4614:	b	45d4 <_ZNK4llvm8UnOpInit17resolveReferencesERNS_8ResolverE+0x38>

0000000000004618 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev>:
    4618:	sub	sp, sp, #0xc0
    461c:	stp	x29, x30, [sp, #128]
    4620:	stp	x24, x23, [sp, #144]
    4624:	stp	x22, x21, [sp, #160]
    4628:	stp	x20, x19, [sp, #176]
    462c:	add	x29, sp, #0x80
    4630:	sub	x9, x29, #0x20
    4634:	add	x23, x9, #0x10
    4638:	stp	x23, xzr, [x29, #-32]
    463c:	sturb	wzr, [x29, #-16]
    4640:	ldrb	w9, [x0, #9]
    4644:	mov	x20, x0
    4648:	mov	x19, x8
    464c:	cmp	w9, #0x5
    4650:	b.hi	471c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>  // b.pmore
    4654:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4658:	add	x8, x8, #0x0
    465c:	adr	x10, 466c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x54>
    4660:	ldrb	w11, [x8, x9]
    4664:	add	x10, x10, x11, lsl #2
    4668:	br	x10
    466c:	ldr	x0, [x20, #16]
    4670:	ldr	x8, [x0]
    4674:	ldr	x9, [x8, #16]
    4678:	mov	x8, sp
    467c:	blr	x9
    4680:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4684:	add	x3, x3, #0x0
    4688:	mov	x0, sp
    468c:	mov	w4, #0x6                   	// #6
    4690:	mov	x1, xzr
    4694:	mov	x2, xzr
    4698:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    469c:	add	x8, sp, #0x20
    46a0:	add	x22, x8, #0x10
    46a4:	str	x22, [sp, #32]
    46a8:	mov	x8, x0
    46ac:	ldr	x9, [x8], #16
    46b0:	cmp	x9, x8
    46b4:	b.eq	493c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x324>  // b.none
    46b8:	str	x9, [sp, #32]
    46bc:	ldr	x9, [x0, #16]
    46c0:	str	x9, [sp, #48]
    46c4:	b	4944 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x32c>
    46c8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    46cc:	add	x3, x3, #0x0
    46d0:	b	4708 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xf0>
    46d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    46d8:	add	x3, x3, #0x0
    46dc:	b	46f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xdc>
    46e0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    46e4:	add	x3, x3, #0x0
    46e8:	b	46f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xdc>
    46ec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    46f0:	add	x3, x3, #0x0
    46f4:	sub	x0, x29, #0x20
    46f8:	mov	w4, #0x5                   	// #5
    46fc:	b	4710 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0xf8>
    4700:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4704:	add	x3, x3, #0x0
    4708:	sub	x0, x29, #0x20
    470c:	mov	w4, #0x6                   	// #6
    4710:	mov	x1, xzr
    4714:	mov	x2, xzr
    4718:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    471c:	ldp	x21, x22, [x29, #-32]
    4720:	add	x8, sp, #0x20
    4724:	add	x24, x8, #0x10
    4728:	str	x24, [sp, #32]
    472c:	cbnz	x21, 4734 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x11c>
    4730:	cbnz	x22, 4a8c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x474>
    4734:	cmp	x22, #0x10
    4738:	str	x22, [sp, #64]
    473c:	b.cc	4764 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x14c>  // b.lo, b.ul, b.last
    4740:	add	x0, sp, #0x20
    4744:	add	x1, sp, #0x40
    4748:	mov	x2, xzr
    474c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    4750:	ldr	x8, [sp, #64]
    4754:	str	x0, [sp, #32]
    4758:	str	x8, [sp, #48]
    475c:	cbnz	x22, 476c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x154>
    4760:	b	478c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    4764:	mov	x0, x24
    4768:	cbz	x22, 478c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    476c:	cmp	x22, #0x1
    4770:	b.ne	4780 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x168>  // b.any
    4774:	ldrb	w8, [x21]
    4778:	strb	w8, [x0]
    477c:	b	478c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x174>
    4780:	mov	x1, x21
    4784:	mov	x2, x22
    4788:	bl	0 <memcpy>
    478c:	ldr	x8, [sp, #64]
    4790:	ldr	x9, [sp, #32]
    4794:	str	x8, [sp, #40]
    4798:	strb	wzr, [x9, x8]
    479c:	ldr	x8, [sp, #40]
    47a0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    47a4:	cmp	x8, x9
    47a8:	b.eq	4a80 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    47ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    47b0:	add	x1, x1, #0x0
    47b4:	add	x0, sp, #0x20
    47b8:	mov	w2, #0x1                   	// #1
    47bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    47c0:	ldr	x0, [x20, #32]
    47c4:	mov	x20, sp
    47c8:	ldr	x8, [x0]
    47cc:	ldr	x9, [x8, #40]
    47d0:	mov	x8, sp
    47d4:	blr	x9
    47d8:	ldp	x3, x4, [sp, #32]
    47dc:	ldp	x1, x2, [sp]
    47e0:	ldr	x9, [sp, #48]
    47e4:	mov	w10, #0xf                   	// #15
    47e8:	cmp	x3, x24
    47ec:	add	x8, x2, x4
    47f0:	csel	x9, x10, x9, eq  // eq = none
    47f4:	cmp	x8, x9
    47f8:	b.ls	4818 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x200>  // b.plast
    47fc:	ldr	x9, [sp, #16]
    4800:	add	x10, x20, #0x10
    4804:	cmp	x1, x10
    4808:	mov	w10, #0xf                   	// #15
    480c:	csel	x9, x10, x9, eq  // eq = none
    4810:	cmp	x8, x9
    4814:	b.ls	4824 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x20c>  // b.plast
    4818:	add	x0, sp, #0x20
    481c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4820:	b	4834 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x21c>
    4824:	mov	x0, sp
    4828:	mov	x1, xzr
    482c:	mov	x2, xzr
    4830:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    4834:	add	x8, sp, #0x40
    4838:	add	x20, x8, #0x10
    483c:	str	x20, [sp, #64]
    4840:	mov	x8, x0
    4844:	ldr	x9, [x8], #16
    4848:	cmp	x9, x8
    484c:	b.eq	4860 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x248>  // b.none
    4850:	str	x9, [sp, #64]
    4854:	ldr	x9, [x0, #16]
    4858:	str	x9, [sp, #80]
    485c:	b	4868 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x250>
    4860:	ldr	q0, [x9]
    4864:	str	q0, [x20]
    4868:	ldr	x9, [x0, #8]
    486c:	str	x9, [sp, #72]
    4870:	stp	x8, xzr, [x0]
    4874:	strb	wzr, [x0, #16]
    4878:	ldr	x8, [sp, #72]
    487c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    4880:	cmp	x8, x9
    4884:	b.eq	4a80 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    4888:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    488c:	add	x1, x1, #0x0
    4890:	add	x0, sp, #0x40
    4894:	mov	w2, #0x1                   	// #1
    4898:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    489c:	add	x9, x19, #0x10
    48a0:	str	x9, [x19]
    48a4:	mov	x8, x0
    48a8:	ldr	x10, [x8], #16
    48ac:	cmp	x10, x8
    48b0:	b.eq	48c4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2ac>  // b.none
    48b4:	str	x10, [x19]
    48b8:	ldr	x9, [x0, #16]
    48bc:	str	x9, [x19, #16]
    48c0:	b	48cc <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2b4>
    48c4:	ldr	q0, [x10]
    48c8:	str	q0, [x9]
    48cc:	ldr	x9, [x0, #8]
    48d0:	str	x9, [x19, #8]
    48d4:	stp	x8, xzr, [x0]
    48d8:	strb	wzr, [x0, #16]
    48dc:	ldr	x0, [sp, #64]
    48e0:	cmp	x0, x20
    48e4:	b.eq	48ec <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2d4>  // b.none
    48e8:	bl	0 <_ZdlPv>
    48ec:	ldr	x0, [sp]
    48f0:	mov	x8, sp
    48f4:	add	x8, x8, #0x10
    48f8:	cmp	x0, x8
    48fc:	b.eq	4904 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2ec>  // b.none
    4900:	bl	0 <_ZdlPv>
    4904:	ldr	x0, [sp, #32]
    4908:	cmp	x0, x24
    490c:	b.eq	4914 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x2fc>  // b.none
    4910:	bl	0 <_ZdlPv>
    4914:	ldur	x0, [x29, #-32]
    4918:	cmp	x0, x23
    491c:	b.eq	4924 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x30c>  // b.none
    4920:	bl	0 <_ZdlPv>
    4924:	ldp	x20, x19, [sp, #176]
    4928:	ldp	x22, x21, [sp, #160]
    492c:	ldp	x24, x23, [sp, #144]
    4930:	ldp	x29, x30, [sp, #128]
    4934:	add	sp, sp, #0xc0
    4938:	ret
    493c:	ldr	q0, [x9]
    4940:	str	q0, [x22]
    4944:	ldr	x9, [x0, #8]
    4948:	str	x9, [sp, #40]
    494c:	stp	x8, xzr, [x0]
    4950:	strb	wzr, [x0, #16]
    4954:	ldr	x8, [sp, #40]
    4958:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    495c:	cmp	x8, x9
    4960:	b.eq	4a80 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    4964:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4968:	add	x1, x1, #0x0
    496c:	add	x0, sp, #0x20
    4970:	mov	w2, #0x1                   	// #1
    4974:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4978:	add	x8, sp, #0x40
    497c:	add	x21, x8, #0x10
    4980:	str	x21, [sp, #64]
    4984:	mov	x8, x0
    4988:	ldr	x9, [x8], #16
    498c:	cmp	x9, x8
    4990:	b.eq	49a4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x38c>  // b.none
    4994:	str	x9, [sp, #64]
    4998:	ldr	x9, [x0, #16]
    499c:	str	x9, [sp, #80]
    49a0:	b	49ac <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x394>
    49a4:	ldr	q0, [x9]
    49a8:	str	q0, [x21]
    49ac:	ldr	x9, [x0, #8]
    49b0:	str	x9, [sp, #72]
    49b4:	stp	x8, xzr, [x0]
    49b8:	strb	wzr, [x0, #16]
    49bc:	ldr	x9, [sp, #64]
    49c0:	cmp	x9, x21
    49c4:	b.eq	49f4 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.none
    49c8:	ldur	x8, [x29, #-32]
    49cc:	ldur	x10, [x29, #-16]
    49d0:	ldur	q0, [sp, #72]
    49d4:	stur	x9, [x29, #-32]
    49d8:	cmp	x8, x23
    49dc:	csel	x8, xzr, x8, eq  // eq = none
    49e0:	stur	q0, [x29, #-24]
    49e4:	cbz	x8, 4a14 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x3fc>
    49e8:	str	x8, [sp, #64]
    49ec:	str	x10, [sp, #80]
    49f0:	b	4a3c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x424>
    49f4:	ldr	x2, [sp, #72]
    49f8:	cbz	x2, 4a28 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x410>
    49fc:	ldur	x0, [x29, #-32]
    4a00:	cmp	x2, #0x1
    4a04:	b.ne	4a20 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x408>  // b.any
    4a08:	ldrb	w8, [sp, #80]
    4a0c:	strb	w8, [x0]
    4a10:	b	4a28 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x410>
    4a14:	mov	x8, x21
    4a18:	str	x21, [sp, #64]
    4a1c:	b	4a3c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x424>
    4a20:	mov	x1, x21
    4a24:	bl	0 <memcpy>
    4a28:	ldr	x8, [sp, #72]
    4a2c:	ldur	x9, [x29, #-32]
    4a30:	stur	x8, [x29, #-24]
    4a34:	strb	wzr, [x9, x8]
    4a38:	ldr	x8, [sp, #64]
    4a3c:	str	xzr, [sp, #72]
    4a40:	strb	wzr, [x8]
    4a44:	ldr	x0, [sp, #64]
    4a48:	cmp	x0, x21
    4a4c:	b.eq	4a54 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x43c>  // b.none
    4a50:	bl	0 <_ZdlPv>
    4a54:	ldr	x0, [sp, #32]
    4a58:	cmp	x0, x22
    4a5c:	b.eq	4a64 <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x44c>  // b.none
    4a60:	bl	0 <_ZdlPv>
    4a64:	ldr	x0, [sp]
    4a68:	mov	x8, sp
    4a6c:	add	x8, x8, #0x10
    4a70:	cmp	x0, x8
    4a74:	b.eq	471c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>  // b.none
    4a78:	bl	0 <_ZdlPv>
    4a7c:	b	471c <_ZNK4llvm8UnOpInit11getAsStringB5cxx11Ev+0x104>
    4a80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a84:	add	x0, x0, #0x0
    4a88:	bl	0 <_ZSt20__throw_length_errorPKc>
    4a8c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4a90:	add	x0, x0, #0x0
    4a94:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000004a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>:
    4a98:	sub	sp, sp, #0xe0
    4a9c:	stp	x29, x30, [sp, #144]
    4aa0:	str	x25, [sp, #160]
    4aa4:	stp	x24, x23, [sp, #176]
    4aa8:	stp	x22, x21, [sp, #192]
    4aac:	stp	x20, x19, [sp, #208]
    4ab0:	add	x29, sp, #0x90
    4ab4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4ab8:	add	x8, x8, #0x0
    4abc:	ldarb	w8, [x8]
    4ac0:	mov	x21, x3
    4ac4:	mov	x19, x2
    4ac8:	mov	x20, x1
    4acc:	mov	w22, w0
    4ad0:	tbz	w8, #0, 4bcc <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x134>
    4ad4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4ad8:	ldr	d0, [x8]
    4adc:	mov	x8, sp
    4ae0:	add	x25, x8, #0x10
    4ae4:	and	w1, w22, #0xff
    4ae8:	mov	x0, sp
    4aec:	str	x25, [sp]
    4af0:	str	d0, [sp, #8]
    4af4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    4af8:	mov	x0, sp
    4afc:	mov	x1, x20
    4b00:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4b04:	mov	x0, sp
    4b08:	mov	x1, x19
    4b0c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4b10:	mov	x0, sp
    4b14:	mov	x1, x21
    4b18:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4b1c:	adrp	x23, 0 <_ZNK4llvm5RecTy4dumpEv>
    4b20:	add	x23, x23, #0x0
    4b24:	mov	x1, sp
    4b28:	add	x2, x29, #0x18
    4b2c:	mov	x0, x23
    4b30:	str	xzr, [x29, #24]
    4b34:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    4b38:	cbz	x0, 4b70 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xd8>
    4b3c:	sub	x24, x0, #0x18
    4b40:	ldr	x0, [sp]
    4b44:	cmp	x0, x25
    4b48:	b.eq	4b50 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xb8>  // b.none
    4b4c:	bl	0 <free>
    4b50:	mov	x0, x24
    4b54:	ldp	x20, x19, [sp, #208]
    4b58:	ldp	x22, x21, [sp, #192]
    4b5c:	ldp	x24, x23, [sp, #176]
    4b60:	ldr	x25, [sp, #160]
    4b64:	ldp	x29, x30, [sp, #144]
    4b68:	add	sp, sp, #0xe0
    4b6c:	ret
    4b70:	add	x0, x23, #0x220
    4b74:	mov	w1, #0x30                  	// #48
    4b78:	mov	w2, #0x4                   	// #4
    4b7c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4b80:	strb	w22, [x0, #9]
    4b84:	str	x21, [x0, #16]
    4b88:	adrp	x9, 828 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1c>
    4b8c:	ldr	x9, [x9]
    4b90:	ldr	x2, [x29, #24]
    4b94:	mov	w8, #0xb                   	// #11
    4b98:	mov	x1, x0
    4b9c:	strb	w8, [x0, #8]
    4ba0:	add	x8, x9, #0x10
    4ba4:	mov	x24, x0
    4ba8:	str	xzr, [x1, #24]!
    4bac:	str	x8, [x0]
    4bb0:	stp	x20, x19, [x0, #32]
    4bb4:	mov	x0, x23
    4bb8:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    4bbc:	ldr	x0, [sp]
    4bc0:	cmp	x0, x25
    4bc4:	b.ne	4b4c <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xb4>  // b.any
    4bc8:	b	4b50 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0xb8>
    4bcc:	adrp	x23, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bd0:	add	x23, x23, #0x0
    4bd4:	mov	x0, x23
    4bd8:	bl	0 <__cxa_guard_acquire>
    4bdc:	cbz	w0, 4ad4 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>
    4be0:	add	x24, x23, #0xc8
    4be4:	mov	w1, #0x6                   	// #6
    4be8:	mov	x0, x24
    4bec:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    4bf0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4bf4:	ldr	x8, [x8]
    4bf8:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    4bfc:	adrp	x2, 0 <__dso_handle>
    4c00:	add	x2, x2, #0x0
    4c04:	add	x8, x8, #0x10
    4c08:	str	x8, [x23, #200]
    4c0c:	ldr	x0, [x0]
    4c10:	mov	x1, x24
    4c14:	bl	0 <__cxa_atexit>
    4c18:	mov	x0, x23
    4c1c:	bl	0 <__cxa_guard_release>
    4c20:	b	4ad4 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE+0x3c>

0000000000004c24 <_ZNK4llvm9BinOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    4c24:	stp	x29, x30, [sp, #-48]!
    4c28:	stp	x22, x21, [sp, #16]
    4c2c:	stp	x20, x19, [sp, #32]
    4c30:	mov	x29, sp
    4c34:	ldrb	w8, [x0, #9]
    4c38:	ldp	x19, x20, [x0, #32]
    4c3c:	ldr	x21, [x0, #16]
    4c40:	mov	x22, x1
    4c44:	mov	x0, x1
    4c48:	mov	w1, w8
    4c4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    4c50:	mov	x0, x22
    4c54:	mov	x1, x19
    4c58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4c5c:	mov	x0, x22
    4c60:	mov	x1, x20
    4c64:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    4c68:	mov	x0, x22
    4c6c:	mov	x1, x21
    4c70:	ldp	x20, x19, [sp, #32]
    4c74:	ldp	x22, x21, [sp, #16]
    4c78:	ldp	x29, x30, [sp], #48
    4c7c:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000004c80 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>:
    4c80:	sub	sp, sp, #0x90
    4c84:	stp	x29, x30, [sp, #96]
    4c88:	stp	x22, x21, [sp, #112]
    4c8c:	stp	x20, x19, [sp, #128]
    4c90:	add	x29, sp, #0x60
    4c94:	cbz	x0, 4de4 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x164>
    4c98:	ldrb	w8, [x0, #8]
    4c9c:	mov	x19, x1
    4ca0:	mov	x1, x0
    4ca4:	cmp	w8, #0x12
    4ca8:	b.ne	4dc0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x140>  // b.any
    4cac:	cbz	x19, 4de4 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x164>
    4cb0:	ldrb	w8, [x19, #8]
    4cb4:	cmp	w8, #0x12
    4cb8:	b.ne	4dc0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x140>  // b.any
    4cbc:	ldp	x22, x21, [x1, #24]
    4cc0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4cc4:	ldr	d0, [x9]
    4cc8:	mov	x8, sp
    4ccc:	add	x20, x8, #0x10
    4cd0:	cmp	x21, #0x51
    4cd4:	str	x20, [sp]
    4cd8:	str	d0, [sp, #8]
    4cdc:	b.cc	4cf4 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x74>  // b.lo, b.ul, b.last
    4ce0:	mov	x0, sp
    4ce4:	mov	w3, #0x1                   	// #1
    4ce8:	mov	x1, x20
    4cec:	mov	x2, x21
    4cf0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4cf4:	cbz	x21, 4d10 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x90>
    4cf8:	ldr	x8, [sp]
    4cfc:	ldr	w9, [sp, #8]
    4d00:	mov	x1, x22
    4d04:	mov	x2, x21
    4d08:	add	x0, x8, x9
    4d0c:	bl	0 <memcpy>
    4d10:	ldp	w9, w8, [sp, #8]
    4d14:	add	x9, x21, x9
    4d18:	cmp	x9, x8
    4d1c:	b.hi	4e04 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x184>  // b.pmore
    4d20:	str	w9, [sp, #8]
    4d24:	ldp	x19, x21, [x19, #24]
    4d28:	and	x9, x9, #0xffffffff
    4d2c:	sub	x8, x8, x9
    4d30:	cmp	x21, x8
    4d34:	b.ls	4d4c <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0xcc>  // b.plast
    4d38:	add	x2, x21, x9
    4d3c:	mov	x0, sp
    4d40:	mov	w3, #0x1                   	// #1
    4d44:	mov	x1, x20
    4d48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4d4c:	cbz	x21, 4d68 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0xe8>
    4d50:	ldr	x8, [sp]
    4d54:	ldr	w9, [sp, #8]
    4d58:	mov	x1, x19
    4d5c:	mov	x2, x21
    4d60:	add	x0, x8, x9
    4d64:	bl	0 <memcpy>
    4d68:	ldp	w8, w9, [sp, #8]
    4d6c:	add	x8, x21, x8
    4d70:	cmp	x8, x9
    4d74:	b.hi	4e04 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x184>  // b.pmore
    4d78:	ldr	x0, [sp]
    4d7c:	and	x1, x8, #0xffffffff
    4d80:	str	w8, [sp, #8]
    4d84:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    4d88:	ldr	x8, [sp]
    4d8c:	mov	x9, sp
    4d90:	add	x9, x9, #0x10
    4d94:	mov	x19, x0
    4d98:	cmp	x8, x9
    4d9c:	b.eq	4da8 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_+0x128>  // b.none
    4da0:	mov	x0, x8
    4da4:	bl	0 <free>
    4da8:	mov	x0, x19
    4dac:	ldp	x20, x19, [sp, #128]
    4db0:	ldp	x22, x21, [sp, #112]
    4db4:	ldp	x29, x30, [sp, #96]
    4db8:	add	sp, sp, #0x90
    4dbc:	ret
    4dc0:	adrp	x3, 48 <_ZNK4llvm5RecTy4dumpEv+0x48>
    4dc4:	ldr	x3, [x3]
    4dc8:	mov	x2, x19
    4dcc:	ldp	x20, x19, [sp, #128]
    4dd0:	ldp	x22, x21, [sp, #112]
    4dd4:	ldp	x29, x30, [sp, #96]
    4dd8:	mov	w0, #0x9                   	// #9
    4ddc:	add	sp, sp, #0x90
    4de0:	b	4a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    4de4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4de8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4dec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4df0:	add	x0, x0, #0x0
    4df4:	add	x1, x1, #0x0
    4df8:	add	x3, x3, #0x0
    4dfc:	mov	w2, #0x69                  	// #105
    4e00:	bl	0 <__assert_fail>
    4e04:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4e08:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4e0c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4e10:	add	x0, x0, #0x0
    4e14:	add	x1, x1, #0x0
    4e18:	add	x3, x3, #0x0
    4e1c:	mov	w2, #0x43                  	// #67
    4e20:	bl	0 <__assert_fail>

0000000000004e24 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>:
    4e24:	sub	sp, sp, #0x70
    4e28:	stp	x29, x30, [sp, #80]
    4e2c:	stp	x20, x19, [sp, #96]
    4e30:	add	x29, sp, #0x50
    4e34:	ldr	x3, [x0, #16]
    4e38:	cbz	x3, 4f2c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x108>
    4e3c:	ldr	w8, [x3, #8]
    4e40:	cmp	w8, #0x5
    4e44:	b.ne	4f4c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x128>  // b.any
    4e48:	ldrb	w8, [x0, #8]
    4e4c:	mov	x19, x0
    4e50:	mov	x20, x1
    4e54:	cmp	w8, #0x9
    4e58:	b.ne	4f10 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xec>  // b.any
    4e5c:	cbz	x20, 4f6c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x148>
    4e60:	ldrb	w8, [x20, #8]
    4e64:	cmp	w8, #0x9
    4e68:	b.ne	4f10 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xec>  // b.any
    4e6c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    4e70:	ldr	d0, [x8]
    4e74:	mov	x8, sp
    4e78:	add	x1, x8, #0x10
    4e7c:	str	x1, [sp]
    4e80:	str	d0, [sp, #8]
    4e84:	ldr	w8, [x19, #32]
    4e88:	add	x2, x19, #0x28
    4e8c:	mov	x0, sp
    4e90:	add	x3, x2, x8, lsl #3
    4e94:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4e98:	ldr	x8, [sp]
    4e9c:	ldr	w9, [sp, #8]
    4ea0:	ldr	w10, [x20, #32]
    4ea4:	add	x2, x20, #0x28
    4ea8:	mov	x0, sp
    4eac:	add	x1, x8, x9, lsl #3
    4eb0:	add	x3, x2, x10, lsl #3
    4eb4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    4eb8:	ldr	x8, [x19, #16]
    4ebc:	cbz	x8, 4f2c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x108>
    4ec0:	ldr	w9, [x8, #8]
    4ec4:	cmp	w9, #0x5
    4ec8:	b.ne	4f8c <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0x168>  // b.any
    4ecc:	ldr	x0, [sp]
    4ed0:	ldr	w1, [sp, #8]
    4ed4:	ldr	x2, [x8, #24]
    4ed8:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    4edc:	ldr	x8, [sp]
    4ee0:	mov	x9, sp
    4ee4:	add	x9, x9, #0x10
    4ee8:	mov	x19, x0
    4eec:	cmp	x8, x9
    4ef0:	b.eq	4efc <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE+0xd8>  // b.none
    4ef4:	mov	x0, x8
    4ef8:	bl	0 <free>
    4efc:	mov	x0, x19
    4f00:	ldp	x20, x19, [sp, #96]
    4f04:	ldp	x29, x30, [sp, #80]
    4f08:	add	sp, sp, #0x70
    4f0c:	ret
    4f10:	mov	x1, x19
    4f14:	mov	x2, x20
    4f18:	ldp	x20, x19, [sp, #96]
    4f1c:	ldp	x29, x30, [sp, #80]
    4f20:	mov	w0, #0x7                   	// #7
    4f24:	add	sp, sp, #0x70
    4f28:	b	4a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    4f2c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f30:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f34:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f38:	add	x0, x0, #0x0
    4f3c:	add	x1, x1, #0x0
    4f40:	add	x3, x3, #0x0
    4f44:	mov	w2, #0x69                  	// #105
    4f48:	bl	0 <__assert_fail>
    4f4c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f50:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f54:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f58:	add	x0, x0, #0x0
    4f5c:	add	x1, x1, #0x0
    4f60:	add	x3, x3, #0x0
    4f64:	mov	w2, #0x375                 	// #885
    4f68:	bl	0 <__assert_fail>
    4f6c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f70:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f74:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f78:	add	x0, x0, #0x0
    4f7c:	add	x1, x1, #0x0
    4f80:	add	x3, x3, #0x0
    4f84:	mov	w2, #0x69                  	// #105
    4f88:	bl	0 <__assert_fail>
    4f8c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    4f98:	add	x0, x0, #0x0
    4f9c:	add	x1, x1, #0x0
    4fa0:	add	x3, x3, #0x0
    4fa4:	mov	w2, #0x108                 	// #264
    4fa8:	bl	0 <__assert_fail>

0000000000004fac <_ZN4llvm9BinOpInit12getListSplatEPNS_9TypedInitEPNS_4InitE>:
    4fac:	ldr	x3, [x0, #16]
    4fb0:	mov	x8, x0
    4fb4:	mov	w0, #0x8                   	// #8
    4fb8:	mov	x2, x1
    4fbc:	mov	x1, x8
    4fc0:	b	4a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>

0000000000004fc4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>:
    4fc4:	sub	sp, sp, #0x1f0
    4fc8:	stp	x29, x30, [sp, #400]
    4fcc:	str	x28, [sp, #416]
    4fd0:	stp	x26, x25, [sp, #432]
    4fd4:	stp	x24, x23, [sp, #448]
    4fd8:	stp	x22, x21, [sp, #464]
    4fdc:	stp	x20, x19, [sp, #480]
    4fe0:	add	x29, sp, #0x190
    4fe4:	ldrb	w8, [x0, #9]
    4fe8:	mov	x19, x0
    4fec:	cmp	w8, #0x11
    4ff0:	b.hi	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.pmore
    4ff4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    4ff8:	add	x9, x9, #0x0
    4ffc:	adr	x10, 500c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x48>
    5000:	ldrh	w11, [x9, x8, lsl #1]
    5004:	add	x10, x10, x11, lsl #2
    5008:	br	x10
    500c:	ldr	x0, [x19, #32]
    5010:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    5014:	ldr	x8, [x0]
    5018:	ldr	x8, [x8, #64]
    501c:	ldr	x1, [x1]
    5020:	blr	x8
    5024:	cbz	x0, 5064 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa0>
    5028:	ldrb	w8, [x0, #8]
    502c:	cmp	w8, #0x8
    5030:	csel	x20, x0, xzr, eq  // eq = none
    5034:	b	5068 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa4>
    5038:	ldr	x0, [x19, #32]
    503c:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    5040:	ldr	x8, [x0]
    5044:	ldr	x8, [x8, #64]
    5048:	ldr	x1, [x1]
    504c:	blr	x8
    5050:	cbz	x0, 50c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x104>
    5054:	ldrb	w8, [x0, #8]
    5058:	cmp	w8, #0x8
    505c:	csel	x21, x0, xzr, eq  // eq = none
    5060:	b	50cc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x108>
    5064:	mov	x20, xzr
    5068:	ldr	x0, [x19, #40]
    506c:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    5070:	ldr	x8, [x0]
    5074:	ldr	x8, [x8, #64]
    5078:	ldr	x1, [x1]
    507c:	blr	x8
    5080:	cbz	x0, 5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    5084:	cbz	x20, 5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    5088:	ldrb	w8, [x0, #8]
    508c:	cmp	w8, #0x8
    5090:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5094:	ldrb	w10, [x19, #9]
    5098:	cmp	w10, #0x6
    509c:	b.hi	5c68 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xca4>  // b.pmore
    50a0:	ldr	x8, [x20, #24]
    50a4:	ldr	x9, [x0, #24]
    50a8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    50ac:	add	x11, x11, #0x0
    50b0:	adr	x12, 50c0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xfc>
    50b4:	ldrh	w13, [x11, x10, lsl #1]
    50b8:	add	x12, x12, x13, lsl #2
    50bc:	br	x12
    50c0:	add	x0, x9, x8
    50c4:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    50c8:	mov	x21, xzr
    50cc:	ldr	x0, [x19, #40]
    50d0:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    50d4:	ldr	x8, [x0]
    50d8:	ldr	x8, [x8, #64]
    50dc:	ldr	x1, [x1]
    50e0:	blr	x8
    50e4:	cbz	x0, 513c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x178>
    50e8:	ldrb	w9, [x0, #8]
    50ec:	ldrb	w20, [x19, #9]
    50f0:	cmp	w9, #0x8
    50f4:	csel	x8, x0, xzr, eq  // eq = none
    50f8:	cbz	x21, 5140 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x17c>
    50fc:	cmp	w9, #0x8
    5100:	b.ne	5140 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x17c>  // b.any
    5104:	sub	w9, w20, #0xb
    5108:	cmp	w9, #0x5
    510c:	b.hi	5cc0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcfc>  // b.pmore
    5110:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    5114:	add	x10, x10, #0x0
    5118:	adr	x11, 5128 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x164>
    511c:	ldrh	w12, [x10, x9, lsl #1]
    5120:	add	x11, x11, x12, lsl #2
    5124:	br	x11
    5128:	ldr	x9, [x21, #24]
    512c:	ldr	x8, [x8, #24]
    5130:	cmp	x9, x8
    5134:	cset	w20, eq  // eq = none
    5138:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    513c:	ldrb	w20, [x19, #9]
    5140:	sub	w8, w20, #0xb
    5144:	cmp	w8, #0x1
    5148:	b.hi	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.pmore
    514c:	ldr	x8, [x19, #32]
    5150:	cbz	x8, 5c28 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc64>
    5154:	ldrb	w10, [x8, #8]
    5158:	ldr	x9, [x19, #40]
    515c:	cmp	w10, #0x12
    5160:	csel	x8, x8, xzr, eq  // eq = none
    5164:	cbz	x9, 5c28 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc64>
    5168:	ldrb	w11, [x9, #8]
    516c:	cmp	w11, #0x12
    5170:	csel	x9, x9, xzr, eq  // eq = none
    5174:	cmp	w10, #0x12
    5178:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    517c:	cmp	w11, #0x12
    5180:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5184:	ldr	x2, [x8, #32]
    5188:	ldr	x10, [x9, #32]
    518c:	cmp	x2, x10
    5190:	b.ne	5640 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x67c>  // b.any
    5194:	cbz	x2, 57d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x80c>
    5198:	ldr	x0, [x8, #24]
    519c:	ldr	x1, [x9, #24]
    51a0:	bl	0 <bcmp>
    51a4:	cmp	w0, #0x0
    51a8:	cset	w21, eq  // eq = none
    51ac:	b	57d4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x810>
    51b0:	ldr	x8, [x19, #32]
    51b4:	cbz	x8, 5c28 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc64>
    51b8:	ldrb	w9, [x8, #8]
    51bc:	ldr	x10, [x19, #40]
    51c0:	cmp	w9, #0x12
    51c4:	csel	x8, x8, xzr, eq  // eq = none
    51c8:	cbz	x10, 5c28 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc64>
    51cc:	ldrb	w11, [x10, #8]
    51d0:	cmp	w11, #0x12
    51d4:	csel	x22, x10, xzr, eq  // eq = none
    51d8:	cmp	w9, #0x12
    51dc:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    51e0:	cmp	w11, #0x12
    51e4:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    51e8:	ldp	x21, x20, [x8, #24]
    51ec:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    51f0:	ldr	d0, [x9]
    51f4:	sub	x8, x29, #0x60
    51f8:	add	x19, x8, #0x10
    51fc:	cmp	x20, #0x51
    5200:	stur	x19, [x29, #-96]
    5204:	stur	d0, [x29, #-88]
    5208:	b.cc	5220 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x25c>  // b.lo, b.ul, b.last
    520c:	sub	x0, x29, #0x60
    5210:	mov	w3, #0x1                   	// #1
    5214:	mov	x1, x19
    5218:	mov	x2, x20
    521c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5220:	cbz	x20, 523c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x278>
    5224:	ldur	x8, [x29, #-96]
    5228:	ldur	w9, [x29, #-88]
    522c:	mov	x1, x21
    5230:	mov	x2, x20
    5234:	add	x0, x8, x9
    5238:	bl	0 <memcpy>
    523c:	ldp	w9, w8, [x29, #-88]
    5240:	add	x9, x20, x9
    5244:	cmp	x9, x8
    5248:	b.hi	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.pmore
    524c:	stur	w9, [x29, #-88]
    5250:	ldp	x21, x20, [x22, #24]
    5254:	and	x9, x9, #0xffffffff
    5258:	sub	x8, x8, x9
    525c:	cmp	x20, x8
    5260:	b.ls	5278 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2b4>  // b.plast
    5264:	add	x2, x20, x9
    5268:	sub	x0, x29, #0x60
    526c:	mov	w3, #0x1                   	// #1
    5270:	mov	x1, x19
    5274:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5278:	cbz	x20, 5294 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x2d0>
    527c:	ldur	x8, [x29, #-96]
    5280:	ldur	w9, [x29, #-88]
    5284:	mov	x1, x21
    5288:	mov	x2, x20
    528c:	add	x0, x8, x9
    5290:	bl	0 <memcpy>
    5294:	ldp	w8, w9, [x29, #-88]
    5298:	add	x8, x20, x8
    529c:	cmp	x8, x9
    52a0:	b.hi	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.pmore
    52a4:	ldur	x0, [x29, #-96]
    52a8:	and	x1, x8, #0xffffffff
    52ac:	stur	w8, [x29, #-88]
    52b0:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    52b4:	b	57ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7e8>
    52b8:	ldr	x9, [x19, #32]
    52bc:	cbz	x9, 5c80 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcbc>
    52c0:	ldrb	w8, [x9, #8]
    52c4:	ldr	x10, [x19, #40]
    52c8:	cmp	w8, #0x9
    52cc:	csel	x20, x9, xzr, eq  // eq = none
    52d0:	cbz	x10, 5c80 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcbc>
    52d4:	ldrb	w9, [x10, #8]
    52d8:	cmp	w9, #0x9
    52dc:	csel	x21, x10, xzr, eq  // eq = none
    52e0:	cmp	w8, #0x9
    52e4:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    52e8:	cmp	w9, #0x9
    52ec:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    52f0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    52f4:	ldr	d0, [x8]
    52f8:	sub	x8, x29, #0x60
    52fc:	add	x1, x8, #0x10
    5300:	stur	x1, [x29, #-96]
    5304:	stur	d0, [x29, #-88]
    5308:	ldr	w8, [x20, #32]
    530c:	add	x2, x20, #0x28
    5310:	sub	x0, x29, #0x60
    5314:	add	x3, x2, x8, lsl #3
    5318:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    531c:	ldur	x8, [x29, #-96]
    5320:	ldur	w9, [x29, #-88]
    5324:	ldr	w10, [x21, #32]
    5328:	add	x2, x21, #0x28
    532c:	sub	x0, x29, #0x60
    5330:	add	x1, x8, x9, lsl #3
    5334:	add	x3, x2, x10, lsl #3
    5338:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    533c:	ldr	x8, [x20, #16]
    5340:	cbz	x8, 5d18 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd54>
    5344:	ldr	w9, [x8, #8]
    5348:	cmp	w9, #0x5
    534c:	b.ne	5d38 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd74>  // b.any
    5350:	ldur	x0, [x29, #-96]
    5354:	ldur	w1, [x29, #-88]
    5358:	ldr	x2, [x8, #24]
    535c:	b	57a8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7e4>
    5360:	ldr	x9, [x19, #32]
    5364:	cbz	x9, 5c48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>
    5368:	ldrb	w8, [x9, #8]
    536c:	ldr	x10, [x19, #40]
    5370:	cmp	w8, #0x5
    5374:	csel	x21, x9, xzr, eq  // eq = none
    5378:	cbz	x10, 5c48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>
    537c:	ldrb	w9, [x10, #8]
    5380:	cmp	w9, #0x5
    5384:	csel	x20, x10, xzr, eq  // eq = none
    5388:	cmp	w8, #0x5
    538c:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5390:	cmp	w9, #0x5
    5394:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5398:	ldr	x8, [x21, #32]
    539c:	cbz	x8, 5ca0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcdc>
    53a0:	ldrb	w9, [x8, #8]
    53a4:	ldr	x10, [x20, #32]
    53a8:	cmp	w9, #0x6
    53ac:	csel	x11, x8, xzr, eq  // eq = none
    53b0:	cbz	x10, 5ca0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcdc>
    53b4:	ldrb	w12, [x10, #8]
    53b8:	cmp	w12, #0x6
    53bc:	csel	x10, x10, xzr, eq  // eq = none
    53c0:	cmp	w9, #0x18
    53c4:	b.eq	53d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x40c>  // b.none
    53c8:	cmp	w9, #0x6
    53cc:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    53d0:	cmp	w12, #0x6
    53d4:	b.ne	5854 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x890>  // b.any
    53d8:	cmp	w9, #0x6
    53dc:	b.ne	585c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x898>  // b.any
    53e0:	ldr	x11, [x11, #24]
    53e4:	ldr	x12, [x10, #24]
    53e8:	cmp	x11, x12
    53ec:	b.eq	585c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x898>  // b.none
    53f0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    53f4:	add	x8, x8, #0x0
    53f8:	mov	w19, #0x103                 	// #259
    53fc:	stp	x8, xzr, [sp, #184]
    5400:	sub	x8, x29, #0x60
    5404:	mov	x0, x21
    5408:	strh	w19, [sp, #200]
    540c:	sub	x22, x29, #0x60
    5410:	bl	5d58 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5414:	mov	w21, #0x104                 	// #260
    5418:	sub	x8, x29, #0xc0
    541c:	add	x0, sp, #0xb8
    5420:	add	x1, sp, #0xa0
    5424:	strh	w21, [sp, #176]
    5428:	stp	x22, xzr, [sp, #160]
    542c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    5430:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5434:	add	x8, x8, #0x0
    5438:	stp	x8, xzr, [sp, #136]
    543c:	sub	x8, x29, #0xa8
    5440:	sub	x0, x29, #0xc0
    5444:	add	x1, sp, #0x88
    5448:	strh	w19, [sp, #152]
    544c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    5450:	add	x8, sp, #0x8
    5454:	mov	x0, x20
    5458:	add	x22, sp, #0x8
    545c:	bl	5d58 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    5460:	sub	x8, x29, #0x90
    5464:	sub	x0, x29, #0xa8
    5468:	add	x1, sp, #0x70
    546c:	strh	w21, [sp, #128]
    5470:	stp	x22, xzr, [sp, #112]
    5474:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    5478:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    547c:	add	x8, x8, #0x0
    5480:	stp	x8, xzr, [sp, #88]
    5484:	sub	x8, x29, #0x78
    5488:	sub	x0, x29, #0x90
    548c:	add	x1, sp, #0x58
    5490:	strh	w19, [sp, #104]
    5494:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    5498:	sub	x0, x29, #0x78
    549c:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    54a0:	ldr	x9, [x19, #32]
    54a4:	cbz	x9, 5cd8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd14>
    54a8:	ldrb	w10, [x9, #8]
    54ac:	ldr	x8, [x19, #40]
    54b0:	sub	w10, w10, #0x1
    54b4:	cmp	w10, #0x17
    54b8:	csel	x20, x9, xzr, cc  // cc = lo, ul, last
    54bc:	cbz	x8, 5cf8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xd34>
    54c0:	and	w9, w10, #0xff
    54c4:	cmp	w9, #0x16
    54c8:	b.hi	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.pmore
    54cc:	ldrb	w9, [x8, #8]
    54d0:	cmp	w9, #0x8
    54d4:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    54d8:	ldr	x19, [x8, #24]
    54dc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    54e0:	ldr	d0, [x9]
    54e4:	sub	x8, x29, #0x60
    54e8:	add	x1, x8, #0x10
    54ec:	cmp	x19, #0x9
    54f0:	stur	x1, [x29, #-96]
    54f4:	stur	d0, [x29, #-88]
    54f8:	b.cc	5728 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x764>  // b.lo, b.ul, b.last
    54fc:	sub	x0, x29, #0x60
    5500:	mov	w3, #0x8                   	// #8
    5504:	mov	x2, x19
    5508:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    550c:	ldur	w8, [x29, #-84]
    5510:	b	572c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x768>
    5514:	ldr	x8, [x19, #32]
    5518:	cbz	x8, 5c48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc84>
    551c:	ldrb	w9, [x8, #8]
    5520:	ldr	x20, [x19, #40]
    5524:	cmp	w9, #0x5
    5528:	csel	x22, x8, xzr, eq  // eq = none
    552c:	cbz	x20, 5ca0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xcdc>
    5530:	cmp	w9, #0x5
    5534:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5538:	ldrb	w8, [x20, #8]
    553c:	cmp	w8, #0x6
    5540:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    5544:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5548:	ldr	d0, [x9]
    554c:	sub	x8, x29, #0x60
    5550:	add	x10, sp, #0x8
    5554:	add	x19, x8, #0x10
    5558:	add	x21, x10, #0x10
    555c:	stur	x19, [x29, #-96]
    5560:	str	x21, [sp, #8]
    5564:	stur	d0, [x29, #-88]
    5568:	str	d0, [sp, #16]
    556c:	ldr	w8, [x22, #48]
    5570:	cbz	w8, 5838 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x874>
    5574:	mov	x23, xzr
    5578:	add	x24, x22, #0x38
    557c:	sub	x25, x8, #0x1
    5580:	ldp	w8, w9, [x29, #-88]
    5584:	ldr	x26, [x24, x23, lsl #3]
    5588:	cmp	w8, w9
    558c:	b.cs	5608 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x644>  // b.hs, b.nlast
    5590:	ldur	x9, [x29, #-96]
    5594:	str	x26, [x9, w8, uxtw #3]
    5598:	ldp	w8, w9, [x29, #-88]
    559c:	cmp	w8, w9
    55a0:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    55a4:	add	w8, w8, #0x1
    55a8:	stur	w8, [x29, #-88]
    55ac:	ldr	w8, [x22, #52]
    55b0:	cmp	x23, x8
    55b4:	b.cs	5be8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc24>  // b.hs, b.nlast
    55b8:	ldr	w9, [x22, #48]
    55bc:	ldp	w8, w10, [sp, #16]
    55c0:	add	x9, x24, x9, lsl #3
    55c4:	ldr	x26, [x9, x23, lsl #3]
    55c8:	cmp	w8, w10
    55cc:	b.cs	5624 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x660>  // b.hs, b.nlast
    55d0:	ldr	x9, [sp, #8]
    55d4:	str	x26, [x9, w8, uxtw #3]
    55d8:	ldp	w8, w9, [sp, #16]
    55dc:	cmp	w8, w9
    55e0:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    55e4:	add	x5, x8, #0x1
    55e8:	cmp	x25, x23
    55ec:	str	w5, [sp, #16]
    55f0:	b.eq	5718 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x754>  // b.none
    55f4:	ldr	w8, [x22, #48]
    55f8:	add	x23, x23, #0x1
    55fc:	cmp	x23, x8
    5600:	b.cc	5580 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5bc>  // b.lo, b.ul, b.last
    5604:	b	5c08 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc44>
    5608:	sub	x0, x29, #0x60
    560c:	mov	w3, #0x8                   	// #8
    5610:	mov	x1, x19
    5614:	mov	x2, xzr
    5618:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    561c:	ldur	w8, [x29, #-88]
    5620:	b	5590 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x5cc>
    5624:	add	x0, sp, #0x8
    5628:	mov	w3, #0x8                   	// #8
    562c:	mov	x1, x21
    5630:	mov	x2, xzr
    5634:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5638:	ldr	w8, [sp, #16]
    563c:	b	55d0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x60c>
    5640:	mov	w21, wzr
    5644:	b	57d4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x810>
    5648:	lsl	x0, x8, x9
    564c:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    5650:	ldr	x9, [x21, #24]
    5654:	ldr	x8, [x8, #24]
    5658:	cmp	x9, x8
    565c:	cset	w20, ge  // ge = tcont
    5660:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    5664:	and	x0, x9, x8
    5668:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    566c:	orr	x0, x9, x8
    5670:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    5674:	ldr	x9, [x21, #24]
    5678:	ldr	x8, [x8, #24]
    567c:	cmp	x9, x8
    5680:	cset	w20, le
    5684:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    5688:	mul	x0, x9, x8
    568c:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    5690:	ldr	x9, [x21, #24]
    5694:	ldr	x8, [x8, #24]
    5698:	cmp	x9, x8
    569c:	cset	w20, lt  // lt = tstop
    56a0:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    56a4:	ldr	x9, [x21, #24]
    56a8:	ldr	x8, [x8, #24]
    56ac:	cmp	x9, x8
    56b0:	cset	w20, ne  // ne = any
    56b4:	b	56f4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x730>
    56b8:	asr	x0, x8, x9
    56bc:	b	56c4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x700>
    56c0:	lsr	x0, x8, x9
    56c4:	ldp	x20, x19, [sp, #480]
    56c8:	ldp	x22, x21, [sp, #464]
    56cc:	ldp	x24, x23, [sp, #448]
    56d0:	ldp	x26, x25, [sp, #432]
    56d4:	ldr	x28, [sp, #416]
    56d8:	ldp	x29, x30, [sp, #400]
    56dc:	add	sp, sp, #0x1f0
    56e0:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    56e4:	ldr	x9, [x21, #24]
    56e8:	ldr	x8, [x8, #24]
    56ec:	cmp	x9, x8
    56f0:	cset	w20, gt
    56f4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    56f8:	add	x8, x8, #0x0
    56fc:	ldarb	w8, [x8]
    5700:	tbz	w8, #0, 5afc <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb38>
    5704:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5708:	add	x8, x8, #0x0
    570c:	ldarb	w8, [x8]
    5710:	tbnz	w8, #0, 5800 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    5714:	b	5ab4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xaf0>
    5718:	ldur	x19, [x29, #-96]
    571c:	ldur	w3, [x29, #-88]
    5720:	ldr	x21, [sp, #8]
    5724:	b	5840 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x87c>
    5728:	mov	w8, #0x8                   	// #8
    572c:	cmp	x8, x19
    5730:	b.cc	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.lo, b.ul, b.last
    5734:	ldur	x0, [x29, #-96]
    5738:	ands	x8, x19, #0xffffffff
    573c:	stur	w19, [x29, #-88]
    5740:	b.eq	57a0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7dc>  // b.none
    5744:	lsl	x8, x8, #3
    5748:	sub	x9, x8, #0x8
    574c:	cmp	x9, #0x17
    5750:	mov	x8, x0
    5754:	b.ls	578c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7c8>  // b.plast
    5758:	lsr	x8, x9, #3
    575c:	add	x9, x8, #0x1
    5760:	and	x10, x9, #0x3ffffffffffffffc
    5764:	dup	v0.2d, x20
    5768:	add	x8, x0, x10, lsl #3
    576c:	add	x11, x0, #0x10
    5770:	mov	x12, x10
    5774:	stp	q0, q0, [x11, #-16]
    5778:	subs	x12, x12, #0x4
    577c:	add	x11, x11, #0x20
    5780:	b.ne	5774 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7b0>  // b.any
    5784:	cmp	x9, x10
    5788:	b.eq	579c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7d8>  // b.none
    578c:	add	x9, x0, w19, uxtw #3
    5790:	str	x20, [x8], #8
    5794:	cmp	x9, x8
    5798:	b.ne	5790 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x7cc>  // b.any
    579c:	ldur	x0, [x29, #-96]
    57a0:	ldr	x2, [x20, #16]
    57a4:	and	x1, x19, #0xffffffff
    57a8:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    57ac:	ldur	x8, [x29, #-96]
    57b0:	sub	x9, x29, #0x60
    57b4:	add	x9, x9, #0x10
    57b8:	mov	x19, x0
    57bc:	cmp	x8, x9
    57c0:	b.eq	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.none
    57c4:	mov	x0, x8
    57c8:	bl	0 <free>
    57cc:	b	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    57d0:	mov	w21, #0x1                   	// #1
    57d4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    57d8:	add	x8, x8, #0x0
    57dc:	ldarb	w8, [x8]
    57e0:	cmp	w20, #0xb
    57e4:	cset	w20, ne  // ne = any
    57e8:	tbz	w8, #0, 5b48 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xb84>
    57ec:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    57f0:	add	x8, x8, #0x0
    57f4:	ldarb	w8, [x8]
    57f8:	eor	w20, w20, w21
    57fc:	tbz	w8, #0, 5ab4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xaf0>
    5800:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    5804:	add	x8, x8, #0x0
    5808:	add	x9, x8, #0x20
    580c:	cmp	w20, #0x0
    5810:	csel	x19, x8, x9, ne  // ne = any
    5814:	mov	x0, x19
    5818:	ldp	x20, x19, [sp, #480]
    581c:	ldp	x22, x21, [sp, #464]
    5820:	ldp	x24, x23, [sp, #448]
    5824:	ldp	x26, x25, [sp, #432]
    5828:	ldr	x28, [sp, #416]
    582c:	ldp	x29, x30, [sp, #400]
    5830:	add	sp, sp, #0x1f0
    5834:	ret
    5838:	mov	x5, xzr
    583c:	mov	x3, xzr
    5840:	mov	x0, x20
    5844:	mov	x1, xzr
    5848:	mov	x2, x19
    584c:	mov	x4, x21
    5850:	b	5a74 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xab0>
    5854:	cmp	w12, #0x18
    5858:	b.ne	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.any
    585c:	cmp	w9, #0x6
    5860:	csel	x19, x8, x10, eq  // eq = none
    5864:	cbnz	x19, 587c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b8>
    5868:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    586c:	add	x22, x22, #0x0
    5870:	ldarb	w8, [x22]
    5874:	add	x19, x22, #0xa0
    5878:	tbz	w8, #0, 5b94 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xbd0>
    587c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5880:	ldr	d0, [x9]
    5884:	sub	x8, x29, #0x60
    5888:	add	x10, sp, #0x8
    588c:	add	x22, x8, #0x10
    5890:	add	x23, x10, #0x10
    5894:	stur	x22, [x29, #-96]
    5898:	str	x23, [sp, #8]
    589c:	stur	d0, [x29, #-88]
    58a0:	str	d0, [sp, #16]
    58a4:	ldr	w8, [x21, #48]
    58a8:	cbz	w8, 5988 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9c4>
    58ac:	mov	x24, xzr
    58b0:	add	x25, x21, #0x38
    58b4:	sub	x26, x8, #0x1
    58b8:	ldp	w9, w10, [x29, #-88]
    58bc:	ldr	x8, [x25, x24, lsl #3]
    58c0:	cmp	w9, w10
    58c4:	b.cs	5940 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x97c>  // b.hs, b.nlast
    58c8:	ldur	x10, [x29, #-96]
    58cc:	str	x8, [x10, w9, uxtw #3]
    58d0:	ldp	w8, w9, [x29, #-88]
    58d4:	cmp	w8, w9
    58d8:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    58dc:	add	w8, w8, #0x1
    58e0:	stur	w8, [x29, #-88]
    58e4:	ldr	w8, [x21, #52]
    58e8:	cmp	x24, x8
    58ec:	b.cs	5be8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc24>  // b.hs, b.nlast
    58f0:	ldr	w8, [x21, #48]
    58f4:	ldp	w9, w10, [sp, #16]
    58f8:	add	x8, x25, x8, lsl #3
    58fc:	ldr	x8, [x8, x24, lsl #3]
    5900:	cmp	w9, w10
    5904:	b.cs	5964 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9a0>  // b.hs, b.nlast
    5908:	ldr	x10, [sp, #8]
    590c:	str	x8, [x10, w9, uxtw #3]
    5910:	ldp	w8, w9, [sp, #16]
    5914:	cmp	w8, w9
    5918:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    591c:	add	w8, w8, #0x1
    5920:	cmp	x26, x24
    5924:	str	w8, [sp, #16]
    5928:	b.eq	5988 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9c4>  // b.none
    592c:	ldr	w8, [x21, #48]
    5930:	add	x24, x24, #0x1
    5934:	cmp	x24, x8
    5938:	b.cc	58b8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8f4>  // b.lo, b.ul, b.last
    593c:	b	5c08 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc44>
    5940:	sub	x0, x29, #0x60
    5944:	mov	w3, #0x8                   	// #8
    5948:	mov	x1, x22
    594c:	mov	x2, xzr
    5950:	str	x8, [x29, #24]
    5954:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5958:	ldr	x8, [x29, #24]
    595c:	ldur	w9, [x29, #-88]
    5960:	b	58c8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x904>
    5964:	add	x0, sp, #0x8
    5968:	mov	w3, #0x8                   	// #8
    596c:	mov	x1, x23
    5970:	mov	x2, xzr
    5974:	str	x8, [x29, #24]
    5978:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    597c:	ldr	x8, [x29, #24]
    5980:	ldr	w9, [sp, #16]
    5984:	b	5908 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x944>
    5988:	ldr	w9, [x20, #48]
    598c:	cbz	w9, 5a5c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa98>
    5990:	mov	x21, xzr
    5994:	add	x24, x20, #0x38
    5998:	sub	x25, x9, #0x1
    599c:	ldp	w8, w9, [x29, #-88]
    59a0:	ldr	x26, [x24, x21, lsl #3]
    59a4:	cmp	w8, w9
    59a8:	b.cs	5a24 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa60>  // b.hs, b.nlast
    59ac:	ldur	x9, [x29, #-96]
    59b0:	str	x26, [x9, w8, uxtw #3]
    59b4:	ldp	w8, w9, [x29, #-88]
    59b8:	cmp	w8, w9
    59bc:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    59c0:	add	w8, w8, #0x1
    59c4:	stur	w8, [x29, #-88]
    59c8:	ldr	w8, [x20, #52]
    59cc:	cmp	x21, x8
    59d0:	b.cs	5be8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc24>  // b.hs, b.nlast
    59d4:	ldr	w9, [x20, #48]
    59d8:	ldp	w8, w10, [sp, #16]
    59dc:	add	x9, x24, x9, lsl #3
    59e0:	ldr	x26, [x9, x21, lsl #3]
    59e4:	cmp	w8, w10
    59e8:	b.cs	5a40 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa7c>  // b.hs, b.nlast
    59ec:	ldr	x9, [sp, #8]
    59f0:	str	x26, [x9, w8, uxtw #3]
    59f4:	ldp	w8, w9, [sp, #16]
    59f8:	cmp	w8, w9
    59fc:	b.cs	5bc8 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc04>  // b.hs, b.nlast
    5a00:	add	w8, w8, #0x1
    5a04:	cmp	x25, x21
    5a08:	str	w8, [sp, #16]
    5a0c:	b.eq	5a5c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa98>  // b.none
    5a10:	ldr	w8, [x20, #48]
    5a14:	add	x21, x21, #0x1
    5a18:	cmp	x21, x8
    5a1c:	b.cc	599c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9d8>  // b.lo, b.ul, b.last
    5a20:	b	5c08 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xc44>
    5a24:	sub	x0, x29, #0x60
    5a28:	mov	w3, #0x8                   	// #8
    5a2c:	mov	x1, x22
    5a30:	mov	x2, xzr
    5a34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5a38:	ldur	w8, [x29, #-88]
    5a3c:	b	59ac <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x9e8>
    5a40:	add	x0, sp, #0x8
    5a44:	mov	w3, #0x8                   	// #8
    5a48:	mov	x1, x23
    5a4c:	mov	x2, xzr
    5a50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5a54:	ldr	w8, [sp, #16]
    5a58:	b	59ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xa28>
    5a5c:	ldur	x2, [x29, #-96]
    5a60:	ldur	w3, [x29, #-88]
    5a64:	ldr	x4, [sp, #8]
    5a68:	mov	w5, w8
    5a6c:	mov	x0, x19
    5a70:	mov	x1, xzr
    5a74:	bl	62e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    5a78:	ldr	x8, [sp, #8]
    5a7c:	add	x9, sp, #0x8
    5a80:	add	x9, x9, #0x10
    5a84:	mov	x19, x0
    5a88:	cmp	x8, x9
    5a8c:	b.eq	5a98 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0xad4>  // b.none
    5a90:	mov	x0, x8
    5a94:	bl	0 <free>
    5a98:	ldur	x0, [x29, #-96]
    5a9c:	sub	x8, x29, #0x60
    5aa0:	add	x8, x8, #0x10
    5aa4:	cmp	x0, x8
    5aa8:	b.eq	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>  // b.none
    5aac:	bl	0 <free>
    5ab0:	b	5814 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x850>
    5ab4:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ab8:	add	x19, x19, #0x0
    5abc:	mov	x0, x19
    5ac0:	bl	0 <__cxa_guard_acquire>
    5ac4:	cbz	w0, 5800 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    5ac8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5acc:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    5ad0:	ldr	x9, [x9]
    5ad4:	ldr	x10, [x10]
    5ad8:	mov	w8, #0x2                   	// #2
    5adc:	strh	w8, [x19, #496]
    5ae0:	mov	x0, x19
    5ae4:	add	x8, x10, #0x10
    5ae8:	str	x9, [x19, #504]
    5aec:	str	x8, [x19, #488]
    5af0:	strb	wzr, [x19, #512]
    5af4:	bl	0 <__cxa_guard_release>
    5af8:	b	5800 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x83c>
    5afc:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    5b00:	add	x19, x19, #0x0
    5b04:	mov	x0, x19
    5b08:	bl	0 <__cxa_guard_acquire>
    5b0c:	cbz	w0, 5704 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x740>
    5b10:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5b14:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    5b18:	ldr	x9, [x9]
    5b1c:	ldr	x10, [x10]
    5b20:	mov	w8, #0x2                   	// #2
    5b24:	mov	w11, #0x1                   	// #1
    5b28:	strh	w8, [x19, #472]
    5b2c:	add	x8, x10, #0x10
    5b30:	mov	x0, x19
    5b34:	str	x9, [x19, #480]
    5b38:	str	x8, [x19, #464]
    5b3c:	strb	w11, [x19, #488]
    5b40:	bl	0 <__cxa_guard_release>
    5b44:	b	5704 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x740>
    5b48:	adrp	x19, 0 <_ZNK4llvm5RecTy4dumpEv>
    5b4c:	add	x19, x19, #0x0
    5b50:	mov	x0, x19
    5b54:	bl	0 <__cxa_guard_acquire>
    5b58:	cbz	w0, 57ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x828>
    5b5c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    5b60:	adrp	x10, 3f8 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0x14c>
    5b64:	ldr	x9, [x9]
    5b68:	ldr	x10, [x10]
    5b6c:	mov	w8, #0x2                   	// #2
    5b70:	mov	w11, #0x1                   	// #1
    5b74:	strh	w8, [x19, #472]
    5b78:	add	x8, x10, #0x10
    5b7c:	mov	x0, x19
    5b80:	str	x9, [x19, #480]
    5b84:	str	x8, [x19, #464]
    5b88:	strb	w11, [x19, #488]
    5b8c:	bl	0 <__cxa_guard_release>
    5b90:	b	57ec <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x828>
    5b94:	mov	x0, x22
    5b98:	bl	0 <__cxa_guard_acquire>
    5b9c:	cbz	w0, 587c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b8>
    5ba0:	adrp	x9, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    5ba4:	ldr	x9, [x9]
    5ba8:	mov	w8, #0x18                  	// #24
    5bac:	strh	w8, [x22, #168]
    5bb0:	mov	x19, x22
    5bb4:	add	x8, x9, #0x10
    5bb8:	mov	x0, x22
    5bbc:	str	x8, [x19, #160]!
    5bc0:	bl	0 <__cxa_guard_release>
    5bc4:	b	587c <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE+0x8b8>
    5bc8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bcc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bd0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bd4:	add	x0, x0, #0x0
    5bd8:	add	x1, x1, #0x0
    5bdc:	add	x3, x3, #0x0
    5be0:	mov	w2, #0x43                  	// #67
    5be4:	bl	0 <__assert_fail>
    5be8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bec:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bf0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5bf4:	add	x0, x0, #0x0
    5bf8:	add	x1, x1, #0x0
    5bfc:	add	x3, x3, #0x0
    5c00:	mov	w2, #0x545                 	// #1349
    5c04:	bl	0 <__assert_fail>
    5c08:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c0c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c10:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c14:	add	x0, x0, #0x0
    5c18:	add	x1, x1, #0x0
    5c1c:	add	x3, x3, #0x0
    5c20:	mov	w2, #0x540                 	// #1344
    5c24:	bl	0 <__assert_fail>
    5c28:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c2c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c30:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c34:	add	x0, x0, #0x0
    5c38:	add	x1, x1, #0x0
    5c3c:	add	x3, x3, #0x0
    5c40:	mov	w2, #0x69                  	// #105
    5c44:	bl	0 <__assert_fail>
    5c48:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c4c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c50:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c54:	add	x0, x0, #0x0
    5c58:	add	x1, x1, #0x0
    5c5c:	add	x3, x3, #0x0
    5c60:	mov	w2, #0x69                  	// #105
    5c64:	bl	0 <__assert_fail>
    5c68:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c6c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c70:	add	x0, x0, #0x0
    5c74:	add	x1, x1, #0x0
    5c78:	mov	w2, #0x404                 	// #1028
    5c7c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5c80:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c84:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c88:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5c8c:	add	x0, x0, #0x0
    5c90:	add	x1, x1, #0x0
    5c94:	add	x3, x3, #0x0
    5c98:	mov	w2, #0x69                  	// #105
    5c9c:	bl	0 <__assert_fail>
    5ca0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ca4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ca8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5cac:	add	x0, x0, #0x0
    5cb0:	add	x1, x1, #0x0
    5cb4:	add	x3, x3, #0x0
    5cb8:	mov	w2, #0x69                  	// #105
    5cbc:	bl	0 <__assert_fail>
    5cc0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5cc4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5cc8:	add	x0, x0, #0x0
    5ccc:	add	x1, x1, #0x0
    5cd0:	mov	w2, #0x3d5                 	// #981
    5cd4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    5cd8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5cdc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ce0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ce4:	add	x0, x0, #0x0
    5ce8:	add	x1, x1, #0x0
    5cec:	add	x3, x3, #0x0
    5cf0:	mov	w2, #0x69                  	// #105
    5cf4:	bl	0 <__assert_fail>
    5cf8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5cfc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d00:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d04:	add	x0, x0, #0x0
    5d08:	add	x1, x1, #0x0
    5d0c:	add	x3, x3, #0x0
    5d10:	mov	w2, #0x69                  	// #105
    5d14:	bl	0 <__assert_fail>
    5d18:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d1c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d20:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d24:	add	x0, x0, #0x0
    5d28:	add	x1, x1, #0x0
    5d2c:	add	x3, x3, #0x0
    5d30:	mov	w2, #0x69                  	// #105
    5d34:	bl	0 <__assert_fail>
    5d38:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d3c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d40:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d44:	add	x0, x0, #0x0
    5d48:	add	x1, x1, #0x0
    5d4c:	add	x3, x3, #0x0
    5d50:	mov	w2, #0x108                 	// #264
    5d54:	bl	0 <__assert_fail>

0000000000005d58 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>:
    5d58:	sub	sp, sp, #0xd0
    5d5c:	stp	x29, x30, [sp, #112]
    5d60:	stp	x28, x27, [sp, #128]
    5d64:	stp	x26, x25, [sp, #144]
    5d68:	stp	x24, x23, [sp, #160]
    5d6c:	stp	x22, x21, [sp, #176]
    5d70:	stp	x20, x19, [sp, #192]
    5d74:	add	x29, sp, #0x70
    5d78:	mov	x20, x0
    5d7c:	ldr	x0, [x0, #32]
    5d80:	mov	x19, x8
    5d84:	add	x8, sp, #0x30
    5d88:	ldr	x9, [x0]
    5d8c:	ldr	x9, [x9, #40]
    5d90:	blr	x9
    5d94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5d98:	add	x3, x3, #0x0
    5d9c:	add	x0, sp, #0x30
    5da0:	mov	w4, #0x1                   	// #1
    5da4:	mov	x1, xzr
    5da8:	mov	x2, xzr
    5dac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5db0:	sub	x8, x29, #0x20
    5db4:	add	x10, x8, #0x10
    5db8:	stur	x10, [x29, #-32]
    5dbc:	mov	x8, x0
    5dc0:	ldr	x9, [x8], #16
    5dc4:	str	x10, [sp, #8]
    5dc8:	cmp	x9, x8
    5dcc:	b.eq	5de0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x88>  // b.none
    5dd0:	stur	x9, [x29, #-32]
    5dd4:	ldr	x9, [x0, #16]
    5dd8:	stur	x9, [x29, #-16]
    5ddc:	b	5de8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x90>
    5de0:	ldr	q0, [x9]
    5de4:	str	q0, [x10]
    5de8:	ldr	x9, [x0, #8]
    5dec:	stur	x9, [x29, #-24]
    5df0:	stp	x8, xzr, [x0]
    5df4:	strb	wzr, [x0, #16]
    5df8:	ldr	x0, [sp, #48]
    5dfc:	add	x8, sp, #0x30
    5e00:	add	x8, x8, #0x10
    5e04:	cmp	x0, x8
    5e08:	b.eq	5e10 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0xb8>  // b.none
    5e0c:	bl	0 <_ZdlPv>
    5e10:	ldr	x0, [x20, #40]
    5e14:	cbz	x0, 5ebc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x164>
    5e18:	ldr	x8, [x0]
    5e1c:	ldr	x9, [x8, #48]
    5e20:	add	x8, sp, #0x10
    5e24:	blr	x9
    5e28:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5e2c:	add	x3, x3, #0x0
    5e30:	add	x0, sp, #0x10
    5e34:	mov	w4, #0x1                   	// #1
    5e38:	mov	x1, xzr
    5e3c:	mov	x2, xzr
    5e40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5e44:	add	x8, sp, #0x30
    5e48:	add	x21, x8, #0x10
    5e4c:	str	x21, [sp, #48]
    5e50:	mov	x8, x0
    5e54:	ldr	x9, [x8], #16
    5e58:	cmp	x9, x8
    5e5c:	b.eq	5e70 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x118>  // b.none
    5e60:	str	x9, [sp, #48]
    5e64:	ldr	x9, [x0, #16]
    5e68:	str	x9, [sp, #64]
    5e6c:	b	5e78 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x120>
    5e70:	ldr	q0, [x9]
    5e74:	str	q0, [x21]
    5e78:	ldr	x9, [x0, #8]
    5e7c:	str	x9, [sp, #56]
    5e80:	stp	x8, xzr, [x0]
    5e84:	strb	wzr, [x0, #16]
    5e88:	ldp	x1, x2, [sp, #48]
    5e8c:	sub	x0, x29, #0x20
    5e90:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5e94:	ldr	x0, [sp, #48]
    5e98:	cmp	x0, x21
    5e9c:	b.eq	5ea4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x14c>  // b.none
    5ea0:	bl	0 <_ZdlPv>
    5ea4:	ldr	x0, [sp, #16]
    5ea8:	add	x8, sp, #0x10
    5eac:	add	x8, x8, #0x10
    5eb0:	cmp	x0, x8
    5eb4:	b.eq	5ebc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x164>  // b.none
    5eb8:	bl	0 <_ZdlPv>
    5ebc:	ldr	w8, [x20, #48]
    5ec0:	cbz	w8, 6034 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2dc>
    5ec4:	mov	x21, x20
    5ec8:	ldr	x0, [x21, #56]!
    5ecc:	ldr	x8, [x0]
    5ed0:	ldr	x9, [x8, #40]
    5ed4:	add	x8, sp, #0x10
    5ed8:	blr	x9
    5edc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5ee0:	add	x3, x3, #0x0
    5ee4:	add	x0, sp, #0x10
    5ee8:	mov	w4, #0x1                   	// #1
    5eec:	mov	x1, xzr
    5ef0:	mov	x2, xzr
    5ef4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5ef8:	add	x8, sp, #0x30
    5efc:	add	x22, x8, #0x10
    5f00:	str	x22, [sp, #48]
    5f04:	mov	x8, x0
    5f08:	ldr	x9, [x8], #16
    5f0c:	cmp	x9, x8
    5f10:	b.eq	5f24 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1cc>  // b.none
    5f14:	str	x9, [sp, #48]
    5f18:	ldr	x9, [x0, #16]
    5f1c:	str	x9, [sp, #64]
    5f20:	b	5f2c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x1d4>
    5f24:	ldr	q0, [x9]
    5f28:	str	q0, [x22]
    5f2c:	ldr	x9, [x0, #8]
    5f30:	str	x9, [sp, #56]
    5f34:	stp	x8, xzr, [x0]
    5f38:	strb	wzr, [x0, #16]
    5f3c:	ldp	x1, x2, [sp, #48]
    5f40:	sub	x0, x29, #0x20
    5f44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5f48:	ldr	x0, [sp, #48]
    5f4c:	cmp	x0, x22
    5f50:	b.eq	5f58 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x200>  // b.none
    5f54:	bl	0 <_ZdlPv>
    5f58:	ldr	x0, [sp, #16]
    5f5c:	add	x8, sp, #0x10
    5f60:	add	x8, x8, #0x10
    5f64:	cmp	x0, x8
    5f68:	b.eq	5f70 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x218>  // b.none
    5f6c:	bl	0 <_ZdlPv>
    5f70:	ldr	w8, [x20, #52]
    5f74:	cbz	w8, 62b0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x558>
    5f78:	ldr	w8, [x20, #48]
    5f7c:	ldr	x0, [x21, x8, lsl #3]
    5f80:	cbz	x0, 602c <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d4>
    5f84:	ldr	x8, [x0]
    5f88:	ldr	x9, [x8, #48]
    5f8c:	add	x8, sp, #0x10
    5f90:	blr	x9
    5f94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    5f98:	add	x3, x3, #0x0
    5f9c:	add	x0, sp, #0x10
    5fa0:	mov	w4, #0x2                   	// #2
    5fa4:	mov	x1, xzr
    5fa8:	mov	x2, xzr
    5fac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    5fb0:	add	x8, sp, #0x30
    5fb4:	add	x21, x8, #0x10
    5fb8:	str	x21, [sp, #48]
    5fbc:	mov	x8, x0
    5fc0:	ldr	x9, [x8], #16
    5fc4:	cmp	x9, x8
    5fc8:	b.eq	5fdc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x284>  // b.none
    5fcc:	str	x9, [sp, #48]
    5fd0:	ldr	x9, [x0, #16]
    5fd4:	str	x9, [sp, #64]
    5fd8:	b	5fe4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x28c>
    5fdc:	ldr	q0, [x9]
    5fe0:	str	q0, [x21]
    5fe4:	ldr	x9, [x0, #8]
    5fe8:	str	x9, [sp, #56]
    5fec:	stp	x8, xzr, [x0]
    5ff0:	strb	wzr, [x0, #16]
    5ff4:	ldp	x1, x2, [sp, #48]
    5ff8:	sub	x0, x29, #0x20
    5ffc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6000:	ldr	x0, [sp, #48]
    6004:	cmp	x0, x21
    6008:	b.eq	6010 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2b8>  // b.none
    600c:	bl	0 <_ZdlPv>
    6010:	ldr	x0, [sp, #16]
    6014:	add	x8, sp, #0x10
    6018:	add	x8, x8, #0x10
    601c:	cmp	x0, x8
    6020:	b.eq	6028 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2d0>  // b.none
    6024:	bl	0 <_ZdlPv>
    6028:	ldr	w8, [x20, #48]
    602c:	cmp	w8, #0x1
    6030:	b.ne	60fc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3a4>  // b.any
    6034:	ldp	x20, x21, [x29, #-32]
    6038:	add	x0, x19, #0x10
    603c:	str	x0, [x19]
    6040:	cbnz	x20, 6048 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2f0>
    6044:	cbnz	x21, 62d0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x578>
    6048:	cmp	x21, #0x10
    604c:	str	x21, [sp, #48]
    6050:	b.cc	6070 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x318>  // b.lo, b.ul, b.last
    6054:	add	x1, sp, #0x30
    6058:	mov	x0, x19
    605c:	mov	x2, xzr
    6060:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    6064:	ldr	x8, [sp, #48]
    6068:	str	x0, [x19]
    606c:	str	x8, [x19, #16]
    6070:	cbz	x21, 6094 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x33c>
    6074:	cmp	x21, #0x1
    6078:	b.ne	6088 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x330>  // b.any
    607c:	ldrb	w8, [x20]
    6080:	strb	w8, [x0]
    6084:	b	6094 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x33c>
    6088:	mov	x1, x20
    608c:	mov	x2, x21
    6090:	bl	0 <memcpy>
    6094:	ldr	x8, [sp, #48]
    6098:	ldr	x9, [x19]
    609c:	str	x8, [x19, #8]
    60a0:	strb	wzr, [x9, x8]
    60a4:	ldr	x8, [x19, #8]
    60a8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    60ac:	cmp	x8, x9
    60b0:	b.eq	62dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x584>  // b.none
    60b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    60b8:	add	x1, x1, #0x0
    60bc:	mov	w2, #0x1                   	// #1
    60c0:	mov	x0, x19
    60c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    60c8:	ldur	x0, [x29, #-32]
    60cc:	ldr	x8, [sp, #8]
    60d0:	cmp	x0, x8
    60d4:	b.eq	60dc <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x384>  // b.none
    60d8:	bl	0 <_ZdlPv>
    60dc:	ldp	x20, x19, [sp, #192]
    60e0:	ldp	x22, x21, [sp, #176]
    60e4:	ldp	x24, x23, [sp, #160]
    60e8:	ldp	x26, x25, [sp, #144]
    60ec:	ldp	x28, x27, [sp, #128]
    60f0:	ldp	x29, x30, [sp, #112]
    60f4:	add	sp, sp, #0xd0
    60f8:	ret
    60fc:	cbz	w8, 6290 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x538>
    6100:	add	x9, sp, #0x30
    6104:	add	x10, sp, #0x10
    6108:	mov	w8, w8
    610c:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    6110:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    6114:	mov	x24, xzr
    6118:	add	x25, x20, #0x40
    611c:	add	x21, x21, #0x0
    6120:	add	x26, x9, #0x10
    6124:	add	x27, x10, #0x10
    6128:	sub	x28, x8, #0x2
    612c:	add	x22, x22, #0x0
    6130:	ldr	x0, [x25, x24, lsl #3]
    6134:	ldr	x8, [x0]
    6138:	ldr	x9, [x8, #40]
    613c:	add	x8, sp, #0x10
    6140:	blr	x9
    6144:	add	x0, sp, #0x10
    6148:	mov	w4, #0x2                   	// #2
    614c:	mov	x1, xzr
    6150:	mov	x2, xzr
    6154:	mov	x3, x21
    6158:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    615c:	str	x26, [sp, #48]
    6160:	mov	x8, x0
    6164:	ldr	x9, [x8], #16
    6168:	cmp	x9, x8
    616c:	b.eq	6180 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x428>  // b.none
    6170:	str	x9, [sp, #48]
    6174:	ldr	x9, [x0, #16]
    6178:	str	x9, [sp, #64]
    617c:	b	6188 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x430>
    6180:	ldr	q0, [x9]
    6184:	str	q0, [x26]
    6188:	ldr	x9, [x0, #8]
    618c:	str	x9, [sp, #56]
    6190:	stp	x8, xzr, [x0]
    6194:	strb	wzr, [x0, #16]
    6198:	ldp	x1, x2, [sp, #48]
    619c:	sub	x0, x29, #0x20
    61a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    61a4:	ldr	x0, [sp, #48]
    61a8:	cmp	x0, x26
    61ac:	b.eq	61b4 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x45c>  // b.none
    61b0:	bl	0 <_ZdlPv>
    61b4:	ldr	x0, [sp, #16]
    61b8:	add	x23, x24, #0x1
    61bc:	cmp	x0, x27
    61c0:	b.eq	61c8 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x470>  // b.none
    61c4:	bl	0 <_ZdlPv>
    61c8:	ldr	w8, [x20, #52]
    61cc:	cmp	x23, x8
    61d0:	b.cs	62b0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x558>  // b.hs, b.nlast
    61d4:	ldr	w8, [x20, #48]
    61d8:	add	x8, x25, x8, lsl #3
    61dc:	ldr	x0, [x8, x24, lsl #3]
    61e0:	cbz	x0, 6274 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x51c>
    61e4:	ldr	x8, [x0]
    61e8:	ldr	x9, [x8, #48]
    61ec:	add	x8, sp, #0x10
    61f0:	blr	x9
    61f4:	add	x0, sp, #0x10
    61f8:	mov	w4, #0x2                   	// #2
    61fc:	mov	x1, xzr
    6200:	mov	x2, xzr
    6204:	mov	x3, x22
    6208:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    620c:	str	x26, [sp, #48]
    6210:	mov	x8, x0
    6214:	ldr	x9, [x8], #16
    6218:	cmp	x9, x8
    621c:	b.eq	6230 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4d8>  // b.none
    6220:	str	x9, [sp, #48]
    6224:	ldr	x9, [x0, #16]
    6228:	str	x9, [sp, #64]
    622c:	b	6238 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x4e0>
    6230:	ldr	q0, [x9]
    6234:	str	q0, [x26]
    6238:	ldr	x9, [x0, #8]
    623c:	str	x9, [sp, #56]
    6240:	stp	x8, xzr, [x0]
    6244:	strb	wzr, [x0, #16]
    6248:	ldp	x1, x2, [sp, #48]
    624c:	sub	x0, x29, #0x20
    6250:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    6254:	ldr	x0, [sp, #48]
    6258:	cmp	x0, x26
    625c:	b.eq	6264 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x50c>  // b.none
    6260:	bl	0 <_ZdlPv>
    6264:	ldr	x0, [sp, #16]
    6268:	cmp	x0, x27
    626c:	b.eq	6274 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x51c>  // b.none
    6270:	bl	0 <_ZdlPv>
    6274:	cmp	x28, x24
    6278:	b.eq	6034 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x2dc>  // b.none
    627c:	ldr	w8, [x20, #48]
    6280:	add	x9, x24, #0x2
    6284:	add	x24, x24, #0x1
    6288:	cmp	x9, x8
    628c:	b.cc	6130 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev+0x3d8>  // b.lo, b.ul, b.last
    6290:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6294:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    6298:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    629c:	add	x0, x0, #0x0
    62a0:	add	x1, x1, #0x0
    62a4:	add	x3, x3, #0x0
    62a8:	mov	w2, #0x540                 	// #1344
    62ac:	bl	0 <__assert_fail>
    62b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    62b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    62b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    62bc:	add	x0, x0, #0x0
    62c0:	add	x1, x1, #0x0
    62c4:	add	x3, x3, #0x0
    62c8:	mov	w2, #0x545                 	// #1349
    62cc:	bl	0 <__assert_fail>
    62d0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    62d4:	add	x0, x0, #0x0
    62d8:	bl	0 <_ZSt19__throw_logic_errorPKc>
    62dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    62e0:	add	x0, x0, #0x0
    62e4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000062e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>:
    62e8:	sub	sp, sp, #0xf0
    62ec:	stp	x29, x30, [sp, #144]
    62f0:	str	x27, [sp, #160]
    62f4:	stp	x26, x25, [sp, #176]
    62f8:	stp	x24, x23, [sp, #192]
    62fc:	stp	x22, x21, [sp, #208]
    6300:	stp	x20, x19, [sp, #224]
    6304:	add	x29, sp, #0x90
    6308:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    630c:	add	x8, x8, #0x0
    6310:	ldarb	w8, [x8]
    6314:	mov	x21, x5
    6318:	mov	x19, x4
    631c:	mov	x20, x3
    6320:	mov	x22, x2
    6324:	mov	x23, x1
    6328:	mov	x24, x0
    632c:	tbz	w8, #0, 6460 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x178>
    6330:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6334:	ldr	d0, [x8]
    6338:	mov	x8, sp
    633c:	add	x27, x8, #0x10
    6340:	mov	x0, sp
    6344:	mov	x1, x24
    6348:	mov	x2, x23
    634c:	mov	x3, x22
    6350:	mov	x4, x20
    6354:	mov	x5, x19
    6358:	mov	x6, x21
    635c:	str	x27, [sp]
    6360:	str	d0, [sp, #8]
    6364:	bl	c474 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>
    6368:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    636c:	add	x0, x0, #0x0
    6370:	mov	x1, sp
    6374:	add	x2, x29, #0x18
    6378:	str	xzr, [x29, #24]
    637c:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6380:	cbz	x0, 63bc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xd4>
    6384:	sub	x25, x0, #0x18
    6388:	ldr	x0, [sp]
    638c:	cmp	x0, x27
    6390:	b.eq	6398 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xb0>  // b.none
    6394:	bl	0 <free>
    6398:	mov	x0, x25
    639c:	ldp	x20, x19, [sp, #224]
    63a0:	ldp	x22, x21, [sp, #208]
    63a4:	ldp	x24, x23, [sp, #192]
    63a8:	ldp	x26, x25, [sp, #176]
    63ac:	ldr	x27, [sp, #160]
    63b0:	ldp	x29, x30, [sp, #144]
    63b4:	add	sp, sp, #0xf0
    63b8:	ret
    63bc:	add	x8, x21, x20
    63c0:	lsl	x8, x8, #3
    63c4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    63c8:	add	x1, x8, #0x38
    63cc:	add	x0, x0, #0x0
    63d0:	mov	w2, #0x3                   	// #3
    63d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    63d8:	mov	w8, #0x5                   	// #5
    63dc:	adrp	x9, 60 <_ZNK4llvm5RecTy4dumpEv+0x60>
    63e0:	ldr	x9, [x9]
    63e4:	strh	w8, [x0, #8]
    63e8:	adrp	x8, d58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x54c>
    63ec:	ldr	x8, [x8]
    63f0:	mov	x26, x0
    63f4:	mov	x25, x0
    63f8:	str	x9, [x0, #16]
    63fc:	lsl	x2, x20, #3
    6400:	str	xzr, [x26, #24]!
    6404:	add	x8, x8, #0x10
    6408:	stp	x24, x23, [x0, #32]
    640c:	add	x23, x0, #0x38
    6410:	stp	w20, w21, [x0, #48]
    6414:	str	x8, [x0]
    6418:	cbz	x2, 6428 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x140>
    641c:	mov	x0, x23
    6420:	mov	x1, x22
    6424:	bl	0 <memmove>
    6428:	lsl	x2, x21, #3
    642c:	cbz	x2, 643c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x154>
    6430:	add	x0, x23, w20, uxtw #3
    6434:	mov	x1, x19
    6438:	bl	0 <memmove>
    643c:	ldr	x2, [x29, #24]
    6440:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6444:	add	x0, x0, #0x0
    6448:	mov	x1, x26
    644c:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6450:	ldr	x0, [sp]
    6454:	cmp	x0, x27
    6458:	b.ne	6394 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xac>  // b.any
    645c:	b	6398 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0xb0>
    6460:	adrp	x25, 0 <_ZNK4llvm5RecTy4dumpEv>
    6464:	add	x25, x25, #0x0
    6468:	mov	x0, x25
    646c:	bl	0 <__cxa_guard_acquire>
    6470:	cbz	w0, 6330 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>
    6474:	add	x26, x25, #0x108
    6478:	mov	w1, #0x6                   	// #6
    647c:	mov	x0, x26
    6480:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6484:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6488:	ldr	x8, [x8]
    648c:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    6490:	adrp	x2, 0 <__dso_handle>
    6494:	add	x2, x2, #0x0
    6498:	add	x8, x8, #0x10
    649c:	str	x8, [x25, #264]
    64a0:	ldr	x0, [x0]
    64a4:	mov	x1, x26
    64a8:	bl	0 <__cxa_atexit>
    64ac:	mov	x0, x25
    64b0:	bl	0 <__cxa_guard_release>
    64b4:	b	6330 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE+0x48>

00000000000064b8 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE>:
    64b8:	stp	x29, x30, [sp, #-48]!
    64bc:	str	x21, [sp, #16]
    64c0:	stp	x20, x19, [sp, #32]
    64c4:	mov	x29, sp
    64c8:	mov	x19, x0
    64cc:	ldr	x0, [x0, #32]
    64d0:	mov	x21, x1
    64d4:	ldr	x8, [x0]
    64d8:	ldr	x8, [x8, #96]
    64dc:	blr	x8
    64e0:	ldr	x8, [x19, #40]
    64e4:	mov	x20, x0
    64e8:	mov	x1, x21
    64ec:	ldr	x9, [x8]
    64f0:	mov	x0, x8
    64f4:	ldr	x9, [x9, #96]
    64f8:	blr	x9
    64fc:	ldr	x8, [x19, #32]
    6500:	mov	x2, x0
    6504:	cmp	x8, x20
    6508:	b.ne	6518 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x60>  // b.any
    650c:	ldr	x8, [x19, #40]
    6510:	cmp	x8, x2
    6514:	b.eq	6538 <_ZNK4llvm9BinOpInit17resolveReferencesERNS_8ResolverE+0x80>  // b.none
    6518:	ldr	x3, [x19, #16]
    651c:	ldrb	w0, [x19, #9]
    6520:	mov	x1, x20
    6524:	bl	4a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    6528:	ldp	x20, x19, [sp, #32]
    652c:	ldr	x21, [sp, #16]
    6530:	ldp	x29, x30, [sp], #48
    6534:	b	4fc4 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    6538:	mov	x0, x19
    653c:	ldp	x20, x19, [sp, #32]
    6540:	ldr	x21, [sp, #16]
    6544:	ldp	x29, x30, [sp], #48
    6548:	ret

000000000000654c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev>:
    654c:	sub	sp, sp, #0x130
    6550:	stp	x29, x30, [sp, #224]
    6554:	str	x28, [sp, #240]
    6558:	stp	x24, x23, [sp, #256]
    655c:	stp	x22, x21, [sp, #272]
    6560:	stp	x20, x19, [sp, #288]
    6564:	add	x29, sp, #0xe0
    6568:	sub	x9, x29, #0x20
    656c:	add	x23, x9, #0x10
    6570:	stp	x23, xzr, [x29, #-32]
    6574:	sturb	wzr, [x29, #-16]
    6578:	ldrb	w9, [x0, #9]
    657c:	mov	x20, x0
    6580:	mov	x19, x8
    6584:	cmp	w9, #0x11
    6588:	b.hi	6698 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x14c>  // b.pmore
    658c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6590:	add	x8, x8, #0x0
    6594:	adr	x10, 65a4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x58>
    6598:	ldrh	w11, [x8, x9, lsl #1]
    659c:	add	x10, x10, x11, lsl #2
    65a0:	br	x10
    65a4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65a8:	add	x3, x3, #0x0
    65ac:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    65b0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65b4:	add	x3, x3, #0x0
    65b8:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    65bc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65c0:	add	x3, x3, #0x0
    65c4:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    65c8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65cc:	add	x3, x3, #0x0
    65d0:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    65d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65d8:	add	x3, x3, #0x0
    65dc:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    65e0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65e4:	add	x3, x3, #0x0
    65e8:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    65ec:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65f0:	add	x3, x3, #0x0
    65f4:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    65f8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    65fc:	add	x3, x3, #0x0
    6600:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    6604:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6608:	add	x3, x3, #0x0
    660c:	sub	x0, x29, #0x20
    6610:	mov	w4, #0xb                   	// #11
    6614:	b	668c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6618:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    661c:	add	x3, x3, #0x0
    6620:	b	665c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x110>
    6624:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6628:	add	x3, x3, #0x0
    662c:	b	6684 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x138>
    6630:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6634:	add	x3, x3, #0x0
    6638:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    663c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6640:	add	x3, x3, #0x0
    6644:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    6648:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    664c:	add	x3, x3, #0x0
    6650:	b	6670 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x124>
    6654:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6658:	add	x3, x3, #0x0
    665c:	sub	x0, x29, #0x20
    6660:	mov	w4, #0xa                   	// #10
    6664:	b	668c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6668:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    666c:	add	x3, x3, #0x0
    6670:	sub	x0, x29, #0x20
    6674:	mov	w4, #0x4                   	// #4
    6678:	b	668c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    667c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6680:	add	x3, x3, #0x0
    6684:	sub	x0, x29, #0x20
    6688:	mov	w4, #0x3                   	// #3
    668c:	mov	x1, xzr
    6690:	mov	x2, xzr
    6694:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    6698:	ldp	x21, x22, [x29, #-32]
    669c:	add	x8, sp, #0x40
    66a0:	add	x24, x8, #0x10
    66a4:	str	x24, [sp, #64]
    66a8:	cbnz	x21, 66b0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x164>
    66ac:	cbnz	x22, 6a38 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4ec>
    66b0:	cmp	x22, #0x10
    66b4:	stur	x22, [x29, #-64]
    66b8:	b.cc	66e0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x194>  // b.lo, b.ul, b.last
    66bc:	add	x0, sp, #0x40
    66c0:	sub	x1, x29, #0x40
    66c4:	mov	x2, xzr
    66c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    66cc:	ldur	x8, [x29, #-64]
    66d0:	str	x0, [sp, #64]
    66d4:	str	x8, [sp, #80]
    66d8:	cbnz	x22, 66e8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x19c>
    66dc:	b	6708 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    66e0:	mov	x0, x24
    66e4:	cbz	x22, 6708 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    66e8:	cmp	x22, #0x1
    66ec:	b.ne	66fc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1b0>  // b.any
    66f0:	ldrb	w8, [x21]
    66f4:	strb	w8, [x0]
    66f8:	b	6708 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x1bc>
    66fc:	mov	x1, x21
    6700:	mov	x2, x22
    6704:	bl	0 <memcpy>
    6708:	ldur	x8, [x29, #-64]
    670c:	ldr	x9, [sp, #64]
    6710:	str	x8, [sp, #72]
    6714:	strb	wzr, [x9, x8]
    6718:	ldr	x8, [sp, #72]
    671c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    6720:	cmp	x8, x9
    6724:	b.eq	6a2c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6728:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    672c:	add	x1, x1, #0x0
    6730:	add	x0, sp, #0x40
    6734:	mov	w2, #0x1                   	// #1
    6738:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    673c:	ldr	x0, [x20, #32]
    6740:	add	x21, sp, #0x20
    6744:	ldr	x8, [x0]
    6748:	ldr	x9, [x8, #40]
    674c:	add	x8, sp, #0x20
    6750:	blr	x9
    6754:	ldp	x3, x4, [sp, #64]
    6758:	ldp	x1, x2, [sp, #32]
    675c:	ldr	x9, [sp, #80]
    6760:	mov	w10, #0xf                   	// #15
    6764:	cmp	x3, x24
    6768:	add	x8, x2, x4
    676c:	csel	x9, x10, x9, eq  // eq = none
    6770:	cmp	x8, x9
    6774:	b.ls	6794 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x248>  // b.plast
    6778:	ldr	x9, [sp, #48]
    677c:	add	x10, x21, #0x10
    6780:	cmp	x1, x10
    6784:	mov	w10, #0xf                   	// #15
    6788:	csel	x9, x10, x9, eq  // eq = none
    678c:	cmp	x8, x9
    6790:	b.ls	67a0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x254>  // b.plast
    6794:	add	x0, sp, #0x40
    6798:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    679c:	b	67b0 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x264>
    67a0:	add	x0, sp, #0x20
    67a4:	mov	x1, xzr
    67a8:	mov	x2, xzr
    67ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    67b0:	add	x8, sp, #0x60
    67b4:	add	x21, x8, #0x10
    67b8:	str	x21, [sp, #96]
    67bc:	mov	x8, x0
    67c0:	ldr	x9, [x8], #16
    67c4:	cmp	x9, x8
    67c8:	b.eq	67dc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x290>  // b.none
    67cc:	str	x9, [sp, #96]
    67d0:	ldr	x9, [x0, #16]
    67d4:	str	x9, [sp, #112]
    67d8:	b	67e4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x298>
    67dc:	ldr	q0, [x9]
    67e0:	str	q0, [x21]
    67e4:	ldr	x9, [x0, #8]
    67e8:	str	x9, [sp, #104]
    67ec:	stp	x8, xzr, [x0]
    67f0:	strb	wzr, [x0, #16]
    67f4:	ldr	x8, [sp, #104]
    67f8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    67fc:	orr	x8, x8, #0x1
    6800:	cmp	x8, x9
    6804:	b.eq	6a2c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6808:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    680c:	add	x1, x1, #0x0
    6810:	add	x0, sp, #0x60
    6814:	mov	w2, #0x2                   	// #2
    6818:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    681c:	sub	x8, x29, #0x60
    6820:	add	x22, x8, #0x10
    6824:	stur	x22, [x29, #-96]
    6828:	mov	x8, x0
    682c:	ldr	x9, [x8], #16
    6830:	cmp	x9, x8
    6834:	b.eq	6848 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x2fc>  // b.none
    6838:	stur	x9, [x29, #-96]
    683c:	ldr	x9, [x0, #16]
    6840:	stur	x9, [x29, #-80]
    6844:	b	6850 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x304>
    6848:	ldr	q0, [x9]
    684c:	str	q0, [x22]
    6850:	ldr	x9, [x0, #8]
    6854:	stur	x9, [x29, #-88]
    6858:	stp	x8, xzr, [x0]
    685c:	strb	wzr, [x0, #16]
    6860:	ldr	x0, [x20, #40]
    6864:	mov	x20, sp
    6868:	ldr	x8, [x0]
    686c:	ldr	x9, [x8, #40]
    6870:	mov	x8, sp
    6874:	blr	x9
    6878:	ldp	x3, x4, [x29, #-96]
    687c:	ldp	x1, x2, [sp]
    6880:	ldur	x9, [x29, #-80]
    6884:	mov	w10, #0xf                   	// #15
    6888:	cmp	x3, x22
    688c:	add	x8, x2, x4
    6890:	csel	x9, x10, x9, eq  // eq = none
    6894:	cmp	x8, x9
    6898:	b.ls	68b8 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x36c>  // b.plast
    689c:	ldr	x9, [sp, #16]
    68a0:	add	x10, x20, #0x10
    68a4:	cmp	x1, x10
    68a8:	mov	w10, #0xf                   	// #15
    68ac:	csel	x9, x10, x9, eq  // eq = none
    68b0:	cmp	x8, x9
    68b4:	b.ls	68c4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x378>  // b.plast
    68b8:	sub	x0, x29, #0x60
    68bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    68c0:	b	68d4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x388>
    68c4:	mov	x0, sp
    68c8:	mov	x1, xzr
    68cc:	mov	x2, xzr
    68d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    68d4:	sub	x8, x29, #0x40
    68d8:	add	x20, x8, #0x10
    68dc:	stur	x20, [x29, #-64]
    68e0:	mov	x8, x0
    68e4:	ldr	x9, [x8], #16
    68e8:	cmp	x9, x8
    68ec:	b.eq	6900 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3b4>  // b.none
    68f0:	stur	x9, [x29, #-64]
    68f4:	ldr	x9, [x0, #16]
    68f8:	stur	x9, [x29, #-48]
    68fc:	b	6908 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x3bc>
    6900:	ldr	q0, [x9]
    6904:	str	q0, [x20]
    6908:	ldr	x9, [x0, #8]
    690c:	stur	x9, [x29, #-56]
    6910:	stp	x8, xzr, [x0]
    6914:	strb	wzr, [x0, #16]
    6918:	ldur	x8, [x29, #-56]
    691c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    6920:	cmp	x8, x9
    6924:	b.eq	6a2c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4e0>  // b.none
    6928:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    692c:	add	x1, x1, #0x0
    6930:	sub	x0, x29, #0x40
    6934:	mov	w2, #0x1                   	// #1
    6938:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    693c:	add	x9, x19, #0x10
    6940:	str	x9, [x19]
    6944:	mov	x8, x0
    6948:	ldr	x10, [x8], #16
    694c:	cmp	x10, x8
    6950:	b.eq	6964 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x418>  // b.none
    6954:	str	x10, [x19]
    6958:	ldr	x9, [x0, #16]
    695c:	str	x9, [x19, #16]
    6960:	b	696c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x420>
    6964:	ldr	q0, [x10]
    6968:	str	q0, [x9]
    696c:	ldr	x9, [x0, #8]
    6970:	str	x9, [x19, #8]
    6974:	stp	x8, xzr, [x0]
    6978:	strb	wzr, [x0, #16]
    697c:	ldur	x0, [x29, #-64]
    6980:	cmp	x0, x20
    6984:	b.eq	698c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x440>  // b.none
    6988:	bl	0 <_ZdlPv>
    698c:	ldr	x0, [sp]
    6990:	mov	x8, sp
    6994:	add	x8, x8, #0x10
    6998:	cmp	x0, x8
    699c:	b.eq	69a4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x458>  // b.none
    69a0:	bl	0 <_ZdlPv>
    69a4:	ldur	x0, [x29, #-96]
    69a8:	cmp	x0, x22
    69ac:	b.eq	69b4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x468>  // b.none
    69b0:	bl	0 <_ZdlPv>
    69b4:	ldr	x0, [sp, #96]
    69b8:	cmp	x0, x21
    69bc:	b.eq	69c4 <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x478>  // b.none
    69c0:	bl	0 <_ZdlPv>
    69c4:	ldr	x0, [sp, #32]
    69c8:	add	x8, sp, #0x20
    69cc:	add	x8, x8, #0x10
    69d0:	cmp	x0, x8
    69d4:	b.eq	69dc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x490>  // b.none
    69d8:	bl	0 <_ZdlPv>
    69dc:	ldr	x0, [sp, #64]
    69e0:	cmp	x0, x24
    69e4:	b.eq	69ec <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4a0>  // b.none
    69e8:	bl	0 <_ZdlPv>
    69ec:	ldur	x0, [x29, #-32]
    69f0:	cmp	x0, x23
    69f4:	b.eq	69fc <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x4b0>  // b.none
    69f8:	bl	0 <_ZdlPv>
    69fc:	ldp	x20, x19, [sp, #288]
    6a00:	ldp	x22, x21, [sp, #272]
    6a04:	ldp	x24, x23, [sp, #256]
    6a08:	ldr	x28, [sp, #240]
    6a0c:	ldp	x29, x30, [sp, #224]
    6a10:	add	sp, sp, #0x130
    6a14:	ret
    6a18:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    6a1c:	add	x3, x3, #0x0
    6a20:	sub	x0, x29, #0x20
    6a24:	mov	w4, #0x6                   	// #6
    6a28:	b	668c <_ZNK4llvm9BinOpInit11getAsStringB5cxx11Ev+0x140>
    6a2c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6a30:	add	x0, x0, #0x0
    6a34:	bl	0 <_ZSt20__throw_length_errorPKc>
    6a38:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    6a3c:	add	x0, x0, #0x0
    6a40:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000006a44 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>:
    6a44:	sub	sp, sp, #0xf0
    6a48:	stp	x29, x30, [sp, #160]
    6a4c:	stp	x26, x25, [sp, #176]
    6a50:	stp	x24, x23, [sp, #192]
    6a54:	stp	x22, x21, [sp, #208]
    6a58:	stp	x20, x19, [sp, #224]
    6a5c:	add	x29, sp, #0xa0
    6a60:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6a64:	add	x8, x8, #0x0
    6a68:	ldarb	w8, [x8]
    6a6c:	mov	x22, x4
    6a70:	mov	x19, x3
    6a74:	mov	x20, x2
    6a78:	mov	x21, x1
    6a7c:	mov	w23, w0
    6a80:	tbz	w8, #0, 6b8c <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x148>
    6a84:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6a88:	ldr	d0, [x8]
    6a8c:	add	x8, sp, #0x10
    6a90:	add	x26, x8, #0x10
    6a94:	and	w1, w23, #0xff
    6a98:	add	x0, sp, #0x10
    6a9c:	str	x26, [sp, #16]
    6aa0:	str	d0, [sp, #24]
    6aa4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    6aa8:	add	x0, sp, #0x10
    6aac:	mov	x1, x21
    6ab0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6ab4:	add	x0, sp, #0x10
    6ab8:	mov	x1, x20
    6abc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6ac0:	add	x0, sp, #0x10
    6ac4:	mov	x1, x19
    6ac8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6acc:	add	x0, sp, #0x10
    6ad0:	mov	x1, x22
    6ad4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6ad8:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    6adc:	add	x24, x24, #0x0
    6ae0:	add	x1, sp, #0x10
    6ae4:	add	x2, sp, #0x8
    6ae8:	mov	x0, x24
    6aec:	str	xzr, [sp, #8]
    6af0:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    6af4:	cbz	x0, 6b2c <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xe8>
    6af8:	sub	x25, x0, #0x18
    6afc:	ldr	x0, [sp, #16]
    6b00:	cmp	x0, x26
    6b04:	b.eq	6b0c <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xc8>  // b.none
    6b08:	bl	0 <free>
    6b0c:	mov	x0, x25
    6b10:	ldp	x20, x19, [sp, #224]
    6b14:	ldp	x22, x21, [sp, #208]
    6b18:	ldp	x24, x23, [sp, #192]
    6b1c:	ldp	x26, x25, [sp, #176]
    6b20:	ldp	x29, x30, [sp, #160]
    6b24:	add	sp, sp, #0xf0
    6b28:	ret
    6b2c:	add	x0, x24, #0x208
    6b30:	mov	w1, #0x38                  	// #56
    6b34:	mov	w2, #0x4                   	// #4
    6b38:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    6b3c:	strb	w23, [x0, #9]
    6b40:	str	x22, [x0, #16]
    6b44:	adrp	x9, 8c0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0xb4>
    6b48:	ldr	x9, [x9]
    6b4c:	ldr	x2, [sp, #8]
    6b50:	mov	w8, #0xc                   	// #12
    6b54:	mov	x1, x0
    6b58:	strb	w8, [x0, #8]
    6b5c:	add	x8, x9, #0x10
    6b60:	mov	x25, x0
    6b64:	str	xzr, [x1, #24]!
    6b68:	str	x8, [x0]
    6b6c:	stp	x21, x20, [x0, #32]
    6b70:	str	x19, [x0, #48]
    6b74:	mov	x0, x24
    6b78:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    6b7c:	ldr	x0, [sp, #16]
    6b80:	cmp	x0, x26
    6b84:	b.ne	6b08 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xc4>  // b.any
    6b88:	b	6b0c <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0xc8>
    6b8c:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    6b90:	add	x24, x24, #0x0
    6b94:	mov	x0, x24
    6b98:	bl	0 <__cxa_guard_acquire>
    6b9c:	cbz	w0, 6a84 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>
    6ba0:	add	x25, x24, #0xd8
    6ba4:	mov	w1, #0x6                   	// #6
    6ba8:	mov	x0, x25
    6bac:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    6bb0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    6bb4:	ldr	x8, [x8]
    6bb8:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    6bbc:	adrp	x2, 0 <__dso_handle>
    6bc0:	add	x2, x2, #0x0
    6bc4:	add	x8, x8, #0x10
    6bc8:	str	x8, [x24, #216]
    6bcc:	ldr	x0, [x0]
    6bd0:	mov	x1, x25
    6bd4:	bl	0 <__cxa_atexit>
    6bd8:	mov	x0, x24
    6bdc:	bl	0 <__cxa_guard_release>
    6be0:	b	6a84 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE+0x40>

0000000000006be4 <_ZNK4llvm10TernOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    6be4:	stp	x29, x30, [sp, #-64]!
    6be8:	str	x23, [sp, #16]
    6bec:	stp	x22, x21, [sp, #32]
    6bf0:	stp	x20, x19, [sp, #48]
    6bf4:	mov	x29, sp
    6bf8:	ldrb	w8, [x0, #9]
    6bfc:	ldp	x19, x20, [x0, #32]
    6c00:	ldr	x21, [x0, #48]
    6c04:	ldr	x22, [x0, #16]
    6c08:	mov	x23, x1
    6c0c:	mov	x0, x1
    6c10:	mov	w1, w8
    6c14:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
    6c18:	mov	x0, x23
    6c1c:	mov	x1, x19
    6c20:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6c24:	mov	x0, x23
    6c28:	mov	x1, x20
    6c2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6c30:	mov	x0, x23
    6c34:	mov	x1, x21
    6c38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    6c3c:	mov	x0, x23
    6c40:	mov	x1, x22
    6c44:	ldp	x20, x19, [sp, #48]
    6c48:	ldp	x22, x21, [sp, #32]
    6c4c:	ldr	x23, [sp, #16]
    6c50:	ldp	x29, x30, [sp], #64
    6c54:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

0000000000006c58 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>:
    6c58:	sub	sp, sp, #0x160
    6c5c:	stp	x29, x30, [sp, #256]
    6c60:	stp	x28, x27, [sp, #272]
    6c64:	stp	x26, x25, [sp, #288]
    6c68:	stp	x24, x23, [sp, #304]
    6c6c:	stp	x22, x21, [sp, #320]
    6c70:	stp	x20, x19, [sp, #336]
    6c74:	add	x29, sp, #0x100
    6c78:	ldrb	w8, [x0, #9]
    6c7c:	mov	x19, x0
    6c80:	cmp	w8, #0x3
    6c84:	b.hi	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.pmore
    6c88:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    6c8c:	add	x9, x9, #0x0
    6c90:	adr	x10, 6ca0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x48>
    6c94:	ldrb	w11, [x9, x8]
    6c98:	add	x10, x10, x11, lsl #2
    6c9c:	br	x10
    6ca0:	ldr	x9, [x19, #32]
    6ca4:	cbz	x9, 7890 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    6ca8:	ldrb	w8, [x9, #8]
    6cac:	ldr	x10, [x19, #40]
    6cb0:	cmp	w8, #0x6
    6cb4:	csel	x0, x9, xzr, eq  // eq = none
    6cb8:	cmp	w8, #0x13
    6cbc:	csel	x20, x9, xzr, eq  // eq = none
    6cc0:	cmp	w8, #0x12
    6cc4:	csel	x23, x9, xzr, eq  // eq = none
    6cc8:	cbz	x10, 7890 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    6ccc:	ldrb	w9, [x10, #8]
    6cd0:	ldr	x11, [x19, #48]
    6cd4:	cmp	w9, #0x6
    6cd8:	csel	x26, x10, xzr, eq  // eq = none
    6cdc:	cmp	w9, #0x13
    6ce0:	csel	x25, x10, xzr, eq  // eq = none
    6ce4:	cmp	w9, #0x12
    6ce8:	csel	x24, x10, xzr, eq  // eq = none
    6cec:	cbz	x11, 7890 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc38>
    6cf0:	ldrb	w10, [x11, #8]
    6cf4:	cmp	w10, #0x6
    6cf8:	csel	x22, x11, xzr, eq  // eq = none
    6cfc:	cmp	w10, #0x13
    6d00:	csel	x21, x11, xzr, eq  // eq = none
    6d04:	cmp	w10, #0x12
    6d08:	csel	x11, x11, xzr, eq  // eq = none
    6d0c:	cmp	w8, #0x6
    6d10:	b.ne	70d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x478>  // b.any
    6d14:	cmp	w9, #0x6
    6d18:	b.ne	70d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x478>  // b.any
    6d1c:	cmp	w10, #0x6
    6d20:	b.ne	70d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x478>  // b.any
    6d24:	ldr	x8, [x0]
    6d28:	ldr	x19, [x22, #24]
    6d2c:	ldr	x9, [x8, #40]
    6d30:	add	x8, sp, #0x10
    6d34:	blr	x9
    6d38:	ldr	x8, [x22]
    6d3c:	mov	x0, x22
    6d40:	sub	x21, x29, #0x40
    6d44:	ldr	x9, [x8, #40]
    6d48:	sub	x8, x29, #0x40
    6d4c:	blr	x9
    6d50:	ldr	x2, [sp, #24]
    6d54:	ldur	x8, [x29, #-56]
    6d58:	cmp	x2, x8
    6d5c:	b.ne	71b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x558>  // b.any
    6d60:	cbz	x2, 72b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x658>
    6d64:	ldur	x1, [x29, #-64]
    6d68:	ldr	x0, [sp, #16]
    6d6c:	bl	0 <bcmp>
    6d70:	cmp	w0, #0x0
    6d74:	cset	w20, eq  // eq = none
    6d78:	ldur	x0, [x29, #-64]
    6d7c:	add	x8, x21, #0x10
    6d80:	cmp	x0, x8
    6d84:	b.ne	71c4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x56c>  // b.any
    6d88:	b	71c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x570>
    6d8c:	ldr	x0, [x19, #32]
    6d90:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    6d94:	ldr	x8, [x0]
    6d98:	ldr	x8, [x8, #64]
    6d9c:	ldr	x1, [x1]
    6da0:	blr	x8
    6da4:	cbz	x0, 7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>
    6da8:	ldrb	w8, [x0, #8]
    6dac:	cmp	w8, #0x8
    6db0:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    6db4:	ldr	x8, [x0, #24]
    6db8:	cbz	x8, 72a8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x650>
    6dbc:	ldr	x20, [x19, #40]
    6dc0:	b	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    6dc4:	ldr	x9, [x19, #40]
    6dc8:	cbz	x9, 78d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc78>
    6dcc:	ldrb	w8, [x9, #8]
    6dd0:	ldr	x10, [x19, #48]
    6dd4:	cmp	w8, #0x9
    6dd8:	csel	x25, x9, xzr, eq  // eq = none
    6ddc:	cbz	x10, 78d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc78>
    6de0:	ldrb	w21, [x10, #8]
    6de4:	cmp	w21, #0x9
    6de8:	csel	x22, x10, xzr, eq  // eq = none
    6dec:	cmp	w8, #0x18
    6df0:	b.ne	6dfc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1a4>  // b.any
    6df4:	cmp	w21, #0x18
    6df8:	b.eq	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.none
    6dfc:	cmp	w21, #0x18
    6e00:	cset	w10, eq  // eq = none
    6e04:	cmp	w8, #0x18
    6e08:	cset	w12, ne  // ne = any
    6e0c:	cmp	w21, #0x9
    6e10:	cset	w11, eq  // eq = none
    6e14:	cmp	w8, #0x9
    6e18:	cset	w13, ne  // ne = any
    6e1c:	and	w12, w13, w12
    6e20:	tbnz	w12, #0, 7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>
    6e24:	orr	w10, w11, w10
    6e28:	cbz	w10, 7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>
    6e2c:	cmp	w8, #0x9
    6e30:	b.ne	6e4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1f4>  // b.any
    6e34:	cmp	w21, #0x9
    6e38:	b.ne	6e4c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x1f4>  // b.any
    6e3c:	ldr	w10, [x25, #32]
    6e40:	ldr	w11, [x22, #32]
    6e44:	cmp	w10, w11
    6e48:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    6e4c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    6e50:	ldr	d0, [x11]
    6e54:	add	x10, sp, #0x10
    6e58:	cmp	w8, #0x9
    6e5c:	add	x2, x10, #0x10
    6e60:	str	x2, [sp, #16]
    6e64:	str	d0, [sp, #24]
    6e68:	csel	x9, x9, x22, eq  // eq = none
    6e6c:	ldr	w23, [x9, #32]
    6e70:	cbz	w23, 72f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x698>
    6e74:	cmp	w8, #0x9
    6e78:	add	x24, x22, #0x28
    6e7c:	b.ne	730c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6b4>  // b.any
    6e80:	adrp	x9, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    6e84:	ldr	x9, [x9]
    6e88:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    6e8c:	mov	x26, xzr
    6e90:	add	x8, x25, #0x28
    6e94:	add	x20, x20, #0x0
    6e98:	add	x9, x9, #0x10
    6e9c:	ldr	w10, [x25, #32]
    6ea0:	cmp	x26, x10
    6ea4:	b.cs	78f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc98>  // b.hs, b.nlast
    6ea8:	ldr	x10, [x8, x26, lsl #3]
    6eac:	cmp	w21, #0x9
    6eb0:	b.ne	6ecc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x274>  // b.any
    6eb4:	ldr	w11, [x22, #32]
    6eb8:	cmp	x26, x11
    6ebc:	b.cs	78f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc98>  // b.hs, b.nlast
    6ec0:	ldr	x27, [x24, x26, lsl #3]
    6ec4:	cbnz	x27, 6ed8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x280>
    6ec8:	b	7910 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>
    6ecc:	ldarb	w11, [x20]
    6ed0:	add	x27, x20, #0xa0
    6ed4:	tbz	w11, #0, 6f50 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2f8>
    6ed8:	ldrb	w13, [x27, #8]
    6edc:	cmp	w13, #0x18
    6ee0:	b.eq	6eec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x294>  // b.none
    6ee4:	cmp	w13, #0x12
    6ee8:	b.ne	7478 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x820>  // b.any
    6eec:	ldp	w11, w12, [sp, #24]
    6ef0:	cmp	w13, #0x12
    6ef4:	csel	x27, x27, xzr, eq  // eq = none
    6ef8:	cmp	w11, w12
    6efc:	b.cs	6f2c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2d4>  // b.hs, b.nlast
    6f00:	ldr	x2, [sp, #16]
    6f04:	cmp	w11, w12
    6f08:	add	x12, x2, w11, uxtw #4
    6f0c:	stp	x10, x27, [x12]
    6f10:	b.cs	78b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc58>  // b.hs, b.nlast
    6f14:	add	x26, x26, #0x1
    6f18:	add	w11, w11, #0x1
    6f1c:	cmp	x23, x26
    6f20:	str	w11, [sp, #24]
    6f24:	b.ne	6e9c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x244>  // b.any
    6f28:	b	72f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x69c>
    6f2c:	add	x0, sp, #0x10
    6f30:	mov	x1, xzr
    6f34:	mov	x28, x8
    6f38:	stp	x9, x10, [sp]
    6f3c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    6f40:	ldp	x9, x10, [sp]
    6f44:	ldp	w11, w12, [sp, #24]
    6f48:	mov	x8, x28
    6f4c:	b	6f00 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x2a8>
    6f50:	mov	x0, x20
    6f54:	stp	x8, x10, [sp]
    6f58:	mov	x28, x9
    6f5c:	bl	0 <__cxa_guard_acquire>
    6f60:	cbz	w0, 6f7c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x324>
    6f64:	mov	w8, #0x18                  	// #24
    6f68:	mov	x27, x20
    6f6c:	mov	x0, x20
    6f70:	strh	w8, [x20, #168]
    6f74:	str	x28, [x27, #160]!
    6f78:	bl	0 <__cxa_guard_release>
    6f7c:	ldp	x8, x10, [sp]
    6f80:	mov	x9, x28
    6f84:	ldrb	w13, [x27, #8]
    6f88:	cmp	w13, #0x18
    6f8c:	b.ne	6ee4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x28c>  // b.any
    6f90:	b	6eec <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x294>
    6f94:	mov	x20, x1
    6f98:	ldr	x1, [x19, #40]
    6f9c:	cbz	x1, 7930 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcd8>
    6fa0:	ldrb	w8, [x1, #8]
    6fa4:	ldr	x22, [x19, #32]
    6fa8:	ldr	x21, [x19, #48]
    6fac:	cmp	w8, #0x5
    6fb0:	b.eq	713c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x4e4>  // b.none
    6fb4:	cmp	w8, #0x9
    6fb8:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    6fbc:	ldr	w23, [x1, #32]
    6fc0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    6fc4:	ldr	x26, [x19, #16]
    6fc8:	ldr	d0, [x9]
    6fcc:	add	x24, x1, #0x28
    6fd0:	add	x8, sp, #0x10
    6fd4:	lsl	x25, x23, #3
    6fd8:	add	x1, x8, #0x10
    6fdc:	cmp	w23, #0x9
    6fe0:	add	x27, x24, x25
    6fe4:	str	x1, [sp, #16]
    6fe8:	str	d0, [sp, #24]
    6fec:	b.cc	7000 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3a8>  // b.lo, b.ul, b.last
    6ff0:	add	x0, sp, #0x10
    6ff4:	mov	w3, #0x8                   	// #8
    6ff8:	mov	x2, x23
    6ffc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7000:	cmp	x27, x24
    7004:	b.eq	7020 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x3c8>  // b.none
    7008:	ldr	x8, [sp, #16]
    700c:	ldr	w9, [sp, #24]
    7010:	mov	x1, x24
    7014:	mov	x2, x25
    7018:	add	x0, x8, x9, lsl #3
    701c:	bl	0 <memcpy>
    7020:	ldp	w8, w9, [sp, #24]
    7024:	add	x8, x23, x8
    7028:	cmp	x8, x9
    702c:	b.hi	78b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc58>  // b.pmore
    7030:	ldr	x23, [sp, #16]
    7034:	ands	x9, x8, #0xffffffff
    7038:	str	w8, [sp, #24]
    703c:	b.eq	723c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5e4>  // b.none
    7040:	lsl	x27, x9, #3
    7044:	adrp	x9, dd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5cc>
    7048:	ldr	x9, [x9]
    704c:	sub	x8, x29, #0x40
    7050:	add	x24, x8, #0x18
    7054:	add	x28, x9, #0x10
    7058:	b	7068 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x410>
    705c:	subs	x27, x27, #0x8
    7060:	add	x23, x23, #0x8
    7064:	b.eq	7234 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x5dc>  // b.none
    7068:	ldr	x25, [x23]
    706c:	sub	x1, x29, #0x60
    7070:	mov	x0, x24
    7074:	sturb	wzr, [x29, #-48]
    7078:	stp	x28, x20, [x29, #-64]
    707c:	stp	xzr, xzr, [x24]
    7080:	str	wzr, [x24, #24]
    7084:	str	xzr, [x24, #16]
    7088:	stur	x22, [x29, #-96]
    708c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    7090:	str	x25, [x0, #8]
    7094:	strb	wzr, [x0, #16]
    7098:	ldr	x8, [x21]
    709c:	sub	x1, x29, #0x40
    70a0:	mov	x0, x21
    70a4:	ldr	x8, [x8, #96]
    70a8:	blr	x8
    70ac:	mov	x25, x0
    70b0:	ldur	x0, [x29, #-32]
    70b4:	stur	x28, [x29, #-64]
    70b8:	bl	0 <_ZdlPv>
    70bc:	ldr	x8, [x23]
    70c0:	cmp	x25, x8
    70c4:	b.eq	705c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x404>  // b.none
    70c8:	str	x25, [x23]
    70cc:	b	705c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x404>
    70d0:	cmp	w8, #0x13
    70d4:	b.ne	7158 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x500>  // b.any
    70d8:	cmp	w9, #0x13
    70dc:	b.ne	7158 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x500>  // b.any
    70e0:	cmp	w10, #0x13
    70e4:	b.ne	7158 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x500>  // b.any
    70e8:	ldr	x8, [x21, #24]
    70ec:	cbz	x8, 7910 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>
    70f0:	ldrb	w9, [x8, #8]
    70f4:	cmp	w9, #0x12
    70f8:	b.ne	7990 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xd38>  // b.any
    70fc:	ldp	x22, x23, [x8, #24]
    7100:	add	x8, sp, #0x10
    7104:	add	x24, x8, #0x10
    7108:	str	x24, [sp, #16]
    710c:	cbz	x22, 72c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x670>
    7110:	cmp	x23, #0x10
    7114:	stur	x23, [x29, #-64]
    7118:	b.cc	72d4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x67c>  // b.lo, b.ul, b.last
    711c:	add	x0, sp, #0x10
    7120:	sub	x1, x29, #0x40
    7124:	mov	x2, xzr
    7128:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    712c:	ldur	x8, [x29, #-64]
    7130:	str	x0, [sp, #16]
    7134:	str	x8, [sp, #32]
    7138:	b	72d8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x680>
    713c:	mov	x0, x22
    7140:	mov	x2, x21
    7144:	mov	x3, x20
    7148:	bl	f694 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    714c:	mov	x20, x0
    7150:	cbnz	x0, 7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    7154:	b	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>
    7158:	cmp	w8, #0x12
    715c:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    7160:	cmp	w9, #0x12
    7164:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    7168:	cmp	w10, #0x12
    716c:	b.ne	7280 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x628>  // b.any
    7170:	ldp	x19, x20, [x11, #24]
    7174:	add	x8, sp, #0x10
    7178:	add	x22, x8, #0x10
    717c:	str	x22, [sp, #16]
    7180:	cbz	x19, 7514 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8bc>
    7184:	cmp	x20, #0x10
    7188:	stur	x20, [x29, #-64]
    718c:	b.cc	75cc <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x974>  // b.lo, b.ul, b.last
    7190:	add	x0, sp, #0x10
    7194:	sub	x1, x29, #0x40
    7198:	mov	x2, xzr
    719c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    71a0:	ldur	x8, [x29, #-64]
    71a4:	str	x0, [sp, #16]
    71a8:	str	x8, [sp, #32]
    71ac:	b	75d0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x978>
    71b0:	mov	w20, wzr
    71b4:	ldur	x0, [x29, #-64]
    71b8:	add	x8, x21, #0x10
    71bc:	cmp	x0, x8
    71c0:	b.eq	71c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x570>  // b.none
    71c4:	bl	0 <_ZdlPv>
    71c8:	ldr	x0, [sp, #16]
    71cc:	add	x8, sp, #0x10
    71d0:	add	x8, x8, #0x10
    71d4:	cmp	x0, x8
    71d8:	b.eq	71e0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x588>  // b.none
    71dc:	bl	0 <_ZdlPv>
    71e0:	cbz	w20, 71e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x590>
    71e4:	ldr	x19, [x26, #24]
    71e8:	ldr	x20, [x19, #112]
    71ec:	cbnz	x20, 7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    71f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    71f4:	add	x0, x0, #0x0
    71f8:	mov	w1, #0x20                  	// #32
    71fc:	mov	w2, #0x4                   	// #4
    7200:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    7204:	mov	x20, x0
    7208:	mov	x0, x19
    720c:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    7210:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    7214:	ldr	x9, [x9]
    7218:	mov	w8, #0x6                   	// #6
    721c:	strh	w8, [x20, #8]
    7220:	stp	x0, x19, [x20, #16]
    7224:	add	x8, x9, #0x10
    7228:	str	x8, [x20]
    722c:	str	x20, [x19, #112]
    7230:	b	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    7234:	ldr	x23, [sp, #16]
    7238:	ldr	w8, [sp, #24]
    723c:	cbz	x26, 7950 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcf8>
    7240:	ldr	w9, [x26, #8]
    7244:	cmp	w9, #0x5
    7248:	b.ne	7970 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xd18>  // b.any
    724c:	ldr	x2, [x26, #24]
    7250:	mov	w1, w8
    7254:	mov	x0, x23
    7258:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    725c:	ldr	x8, [sp, #16]
    7260:	add	x9, sp, #0x10
    7264:	add	x9, x9, #0x10
    7268:	mov	x20, x0
    726c:	cmp	x8, x9
    7270:	b.eq	727c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x624>  // b.none
    7274:	mov	x0, x8
    7278:	bl	0 <free>
    727c:	cbnz	x20, 7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    7280:	mov	x20, x19
    7284:	mov	x0, x20
    7288:	ldp	x20, x19, [sp, #336]
    728c:	ldp	x22, x21, [sp, #320]
    7290:	ldp	x24, x23, [sp, #304]
    7294:	ldp	x26, x25, [sp, #288]
    7298:	ldp	x28, x27, [sp, #272]
    729c:	ldp	x29, x30, [sp, #256]
    72a0:	add	sp, sp, #0x160
    72a4:	ret
    72a8:	ldr	x20, [x19, #48]
    72ac:	b	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    72b0:	mov	w20, #0x1                   	// #1
    72b4:	ldur	x0, [x29, #-64]
    72b8:	add	x8, x21, #0x10
    72bc:	cmp	x0, x8
    72c0:	b.ne	71c4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x56c>  // b.any
    72c4:	b	71c8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x570>
    72c8:	str	xzr, [sp, #24]
    72cc:	strb	wzr, [sp, #32]
    72d0:	b	74b4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x85c>
    72d4:	mov	x0, x24
    72d8:	cbz	x23, 74a4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x84c>
    72dc:	cmp	x23, #0x1
    72e0:	b.ne	7498 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x840>  // b.any
    72e4:	ldrb	w8, [x22]
    72e8:	strb	w8, [x0]
    72ec:	b	74a4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x84c>
    72f0:	mov	w11, wzr
    72f4:	ldr	x0, [x19, #32]
    72f8:	mov	w3, w11
    72fc:	mov	x1, xzr
    7300:	bl	7a3c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    7304:	mov	x20, x0
    7308:	b	747c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x824>
    730c:	adrp	x8, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    7310:	ldr	x8, [x8]
    7314:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    7318:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    731c:	mov	x25, xzr
    7320:	add	x20, x20, #0x0
    7324:	mov	w26, #0x18                  	// #24
    7328:	add	x9, x8, #0x10
    732c:	add	x10, x10, #0x0
    7330:	ldarb	w11, [x20]
    7334:	tbz	w11, #0, 73e4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x78c>
    7338:	cmp	w21, #0x9
    733c:	b.ne	7358 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x700>  // b.any
    7340:	ldr	w11, [x22, #32]
    7344:	cmp	x25, x11
    7348:	b.cs	78f0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc98>  // b.hs, b.nlast
    734c:	ldr	x27, [x24, x25, lsl #3]
    7350:	cbnz	x27, 7364 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x70c>
    7354:	b	7910 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>
    7358:	ldarb	w11, [x20]
    735c:	add	x27, x20, #0xa0
    7360:	tbz	w11, #0, 742c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x7d4>
    7364:	ldrb	w13, [x27, #8]
    7368:	cmp	w13, #0x18
    736c:	b.eq	7378 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x720>  // b.none
    7370:	cmp	w13, #0x12
    7374:	b.ne	7478 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x820>  // b.any
    7378:	ldp	w11, w12, [sp, #24]
    737c:	cmp	w13, #0x12
    7380:	csel	x27, x27, xzr, eq  // eq = none
    7384:	cmp	w11, w12
    7388:	b.cs	73b8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x760>  // b.hs, b.nlast
    738c:	ldr	x2, [sp, #16]
    7390:	cmp	w11, w12
    7394:	add	x12, x2, w11, uxtw #4
    7398:	stp	x10, x27, [x12]
    739c:	b.cs	78b0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc58>  // b.hs, b.nlast
    73a0:	add	x25, x25, #0x1
    73a4:	add	w11, w11, #0x1
    73a8:	cmp	x23, x25
    73ac:	str	w11, [sp, #24]
    73b0:	b.ne	7330 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6d8>  // b.any
    73b4:	b	72f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x69c>
    73b8:	add	x0, sp, #0x10
    73bc:	mov	x1, xzr
    73c0:	mov	x28, x9
    73c4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    73c8:	adrp	x8, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    73cc:	ldr	x8, [x8]
    73d0:	ldp	w11, w12, [sp, #24]
    73d4:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    73d8:	add	x10, x10, #0x0
    73dc:	mov	x9, x28
    73e0:	b	738c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x734>
    73e4:	mov	x0, x20
    73e8:	mov	x28, x8
    73ec:	mov	x27, x9
    73f0:	bl	0 <__cxa_guard_acquire>
    73f4:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    73f8:	add	x10, x10, #0x0
    73fc:	mov	x9, x27
    7400:	mov	x8, x28
    7404:	cbz	w0, 7338 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6e0>
    7408:	mov	x0, x20
    740c:	strh	w26, [x20, #168]
    7410:	str	x9, [x20, #160]
    7414:	bl	0 <__cxa_guard_release>
    7418:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    741c:	add	x10, x10, #0x0
    7420:	mov	x9, x27
    7424:	mov	x8, x28
    7428:	b	7338 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x6e0>
    742c:	mov	x0, x20
    7430:	str	x9, [sp, #8]
    7434:	mov	x28, x8
    7438:	bl	0 <__cxa_guard_acquire>
    743c:	cbz	w0, 7458 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x800>
    7440:	add	x8, x28, #0x10
    7444:	mov	x27, x20
    7448:	mov	x0, x20
    744c:	strh	w26, [x20, #168]
    7450:	str	x8, [x27, #160]!
    7454:	bl	0 <__cxa_guard_release>
    7458:	ldr	x9, [sp, #8]
    745c:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    7460:	mov	x8, x28
    7464:	add	x10, x10, #0x0
    7468:	ldrb	w13, [x27, #8]
    746c:	cmp	w13, #0x18
    7470:	b.ne	7370 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x718>  // b.any
    7474:	b	7378 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x720>
    7478:	mov	x20, x19
    747c:	ldr	x0, [sp, #16]
    7480:	add	x8, sp, #0x10
    7484:	add	x8, x8, #0x10
    7488:	cmp	x0, x8
    748c:	b.eq	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>  // b.none
    7490:	bl	0 <free>
    7494:	b	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    7498:	mov	x1, x22
    749c:	mov	x2, x23
    74a0:	bl	0 <memcpy>
    74a4:	ldur	x8, [x29, #-64]
    74a8:	ldr	x9, [sp, #16]
    74ac:	str	x8, [sp, #24]
    74b0:	strb	wzr, [x9, x8]
    74b4:	ldr	x8, [x20]
    74b8:	mov	x0, x20
    74bc:	ldr	x9, [x8, #40]
    74c0:	sub	x8, x29, #0x40
    74c4:	blr	x9
    74c8:	ldr	x8, [x21]
    74cc:	mov	x0, x21
    74d0:	sub	x20, x29, #0x60
    74d4:	ldr	x9, [x8, #40]
    74d8:	sub	x8, x29, #0x60
    74dc:	blr	x9
    74e0:	ldur	x2, [x29, #-56]
    74e4:	ldur	x8, [x29, #-88]
    74e8:	cmp	x2, x8
    74ec:	b.ne	750c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8b4>  // b.any
    74f0:	cbz	x2, 7520 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8c8>
    74f4:	ldur	x1, [x29, #-96]
    74f8:	ldur	x0, [x29, #-64]
    74fc:	bl	0 <bcmp>
    7500:	cmp	w0, #0x0
    7504:	cset	w21, eq  // eq = none
    7508:	b	7524 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8cc>
    750c:	mov	w21, wzr
    7510:	b	7524 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8cc>
    7514:	str	xzr, [sp, #24]
    7518:	strb	wzr, [sp, #32]
    751c:	b	7604 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9ac>
    7520:	mov	w21, #0x1                   	// #1
    7524:	ldur	x0, [x29, #-96]
    7528:	add	x8, x20, #0x10
    752c:	cmp	x0, x8
    7530:	b.eq	7538 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8e0>  // b.none
    7534:	bl	0 <_ZdlPv>
    7538:	ldur	x0, [x29, #-64]
    753c:	sub	x8, x29, #0x40
    7540:	add	x8, x8, #0x10
    7544:	cmp	x0, x8
    7548:	b.eq	7550 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x8f8>  // b.none
    754c:	bl	0 <_ZdlPv>
    7550:	cbz	w21, 783c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbe4>
    7554:	ldr	x8, [x25, #24]
    7558:	cbz	x8, 7910 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xcb8>
    755c:	ldrb	w9, [x8, #8]
    7560:	cmp	w9, #0x12
    7564:	b.ne	7990 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xd38>  // b.any
    7568:	ldp	x21, x22, [x8, #24]
    756c:	sub	x8, x29, #0x40
    7570:	add	x20, x8, #0x10
    7574:	stur	x20, [x29, #-64]
    7578:	cbz	x21, 75c0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x968>
    757c:	cmp	x22, #0x10
    7580:	mov	x0, x20
    7584:	stur	x22, [x29, #-96]
    7588:	b.cc	75a8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x950>  // b.lo, b.ul, b.last
    758c:	sub	x0, x29, #0x40
    7590:	sub	x1, x29, #0x60
    7594:	mov	x2, xzr
    7598:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    759c:	ldur	x8, [x29, #-96]
    75a0:	stur	x0, [x29, #-64]
    75a4:	stur	x8, [x29, #-48]
    75a8:	cbz	x22, 77a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb48>
    75ac:	cmp	x22, #0x1
    75b0:	b.ne	7794 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb3c>  // b.any
    75b4:	ldrb	w8, [x21]
    75b8:	strb	w8, [x0]
    75bc:	b	77a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb48>
    75c0:	stur	xzr, [x29, #-56]
    75c4:	sturb	wzr, [x29, #-48]
    75c8:	b	77e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb90>
    75cc:	mov	x0, x22
    75d0:	cbz	x20, 75f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x99c>
    75d4:	cmp	x20, #0x1
    75d8:	b.ne	75e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x990>  // b.any
    75dc:	ldrb	w8, [x19]
    75e0:	strb	w8, [x0]
    75e4:	b	75f4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x99c>
    75e8:	mov	x1, x19
    75ec:	mov	x2, x20
    75f0:	bl	0 <memcpy>
    75f4:	ldur	x8, [x29, #-64]
    75f8:	ldr	x9, [sp, #16]
    75fc:	str	x8, [sp, #24]
    7600:	strb	wzr, [x9, x8]
    7604:	sub	x8, x29, #0x40
    7608:	mov	x19, xzr
    760c:	add	x25, x8, #0x10
    7610:	b	761c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9c4>
    7614:	ldr	x8, [x24, #32]
    7618:	add	x19, x8, x19
    761c:	ldp	x20, x21, [x23, #24]
    7620:	stur	x25, [x29, #-64]
    7624:	cbz	x20, 766c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa14>
    7628:	cmp	x21, #0x10
    762c:	mov	x0, x25
    7630:	stur	x21, [x29, #-96]
    7634:	b.cc	7654 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9fc>  // b.lo, b.ul, b.last
    7638:	sub	x0, x29, #0x40
    763c:	sub	x1, x29, #0x60
    7640:	mov	x2, xzr
    7644:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    7648:	ldur	x8, [x29, #-96]
    764c:	stur	x0, [x29, #-64]
    7650:	stur	x8, [x29, #-48]
    7654:	cbz	x21, 768c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa34>
    7658:	cmp	x21, #0x1
    765c:	b.ne	7680 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa28>  // b.any
    7660:	ldrb	w8, [x20]
    7664:	strb	w8, [x0]
    7668:	b	768c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa34>
    766c:	mov	x3, xzr
    7670:	stur	xzr, [x29, #-56]
    7674:	sturb	wzr, [x29, #-48]
    7678:	mov	x1, x25
    767c:	b	76a0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa48>
    7680:	mov	x1, x20
    7684:	mov	x2, x21
    7688:	bl	0 <memcpy>
    768c:	ldur	x8, [x29, #-96]
    7690:	ldur	x9, [x29, #-64]
    7694:	stur	x8, [x29, #-56]
    7698:	strb	wzr, [x9, x8]
    769c:	ldp	x1, x3, [x29, #-64]
    76a0:	add	x0, sp, #0x10
    76a4:	mov	x2, x19
    76a8:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    76ac:	ldur	x8, [x29, #-64]
    76b0:	mov	x19, x0
    76b4:	cmp	x8, x25
    76b8:	b.eq	76c4 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xa6c>  // b.none
    76bc:	mov	x0, x8
    76c0:	bl	0 <_ZdlPv>
    76c4:	cmn	x19, #0x1
    76c8:	b.eq	7780 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb28>  // b.none
    76cc:	ldr	x26, [x23, #32]
    76d0:	ldp	x20, x21, [x24, #24]
    76d4:	stur	x25, [x29, #-64]
    76d8:	cbz	x20, 7720 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xac8>
    76dc:	cmp	x21, #0x10
    76e0:	mov	x0, x25
    76e4:	stur	x21, [x29, #-96]
    76e8:	b.cc	7708 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xab0>  // b.lo, b.ul, b.last
    76ec:	sub	x0, x29, #0x40
    76f0:	sub	x1, x29, #0x60
    76f4:	mov	x2, xzr
    76f8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    76fc:	ldur	x8, [x29, #-96]
    7700:	stur	x0, [x29, #-64]
    7704:	stur	x8, [x29, #-48]
    7708:	cbz	x21, 7738 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xae0>
    770c:	cmp	x21, #0x1
    7710:	b.ne	772c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xad4>  // b.any
    7714:	ldrb	w8, [x20]
    7718:	strb	w8, [x0]
    771c:	b	7738 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xae0>
    7720:	stur	xzr, [x29, #-56]
    7724:	sturb	wzr, [x29, #-48]
    7728:	b	7748 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xaf0>
    772c:	mov	x1, x20
    7730:	mov	x2, x21
    7734:	bl	0 <memcpy>
    7738:	ldur	x8, [x29, #-96]
    773c:	ldur	x9, [x29, #-64]
    7740:	stur	x8, [x29, #-56]
    7744:	strb	wzr, [x9, x8]
    7748:	ldr	x3, [sp, #24]
    774c:	subs	x8, x3, x19
    7750:	b.cc	7878 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc20>  // b.lo, b.ul, b.last
    7754:	ldp	x3, x4, [x29, #-64]
    7758:	cmp	x8, x26
    775c:	csel	x2, x26, x8, hi  // hi = pmore
    7760:	add	x0, sp, #0x10
    7764:	mov	x1, x19
    7768:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    776c:	ldur	x0, [x29, #-64]
    7770:	cmp	x0, x25
    7774:	b.eq	7614 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9bc>  // b.none
    7778:	bl	0 <_ZdlPv>
    777c:	b	7614 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x9bc>
    7780:	ldp	x0, x1, [sp, #16]
    7784:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    7788:	ldr	x8, [sp, #16]
    778c:	cmp	x8, x22
    7790:	b	7858 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc00>
    7794:	mov	x1, x21
    7798:	mov	x2, x22
    779c:	bl	0 <memcpy>
    77a0:	ldur	x8, [x29, #-96]
    77a4:	ldur	x9, [x29, #-64]
    77a8:	stur	x8, [x29, #-56]
    77ac:	strb	wzr, [x9, x8]
    77b0:	ldur	x9, [x29, #-64]
    77b4:	cmp	x9, x20
    77b8:	b.eq	77e8 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xb90>  // b.none
    77bc:	ldr	x8, [sp, #16]
    77c0:	ldr	x10, [sp, #32]
    77c4:	ldur	q0, [x29, #-56]
    77c8:	str	x9, [sp, #16]
    77cc:	cmp	x8, x24
    77d0:	csel	x8, xzr, x8, eq  // eq = none
    77d4:	stur	q0, [sp, #24]
    77d8:	cbz	x8, 786c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xc14>
    77dc:	stur	x8, [x29, #-64]
    77e0:	stur	x10, [x29, #-48]
    77e4:	b	7824 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbcc>
    77e8:	ldur	x2, [x29, #-56]
    77ec:	cbz	x2, 7810 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb8>
    77f0:	ldr	x0, [sp, #16]
    77f4:	cmp	x2, #0x1
    77f8:	b.ne	7808 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb0>  // b.any
    77fc:	ldurb	w8, [x29, #-48]
    7800:	strb	w8, [x0]
    7804:	b	7810 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbb8>
    7808:	mov	x1, x20
    780c:	bl	0 <memcpy>
    7810:	ldur	x8, [x29, #-56]
    7814:	ldr	x9, [sp, #16]
    7818:	str	x8, [sp, #24]
    781c:	strb	wzr, [x9, x8]
    7820:	ldur	x8, [x29, #-64]
    7824:	stur	xzr, [x29, #-56]
    7828:	strb	wzr, [x8]
    782c:	ldur	x0, [x29, #-64]
    7830:	cmp	x0, x20
    7834:	b.eq	783c <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbe4>  // b.none
    7838:	bl	0 <_ZdlPv>
    783c:	ldp	x0, x1, [sp, #16]
    7840:	ldr	x19, [x19, #16]
    7844:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    7848:	mov	x1, x19
    784c:	bl	9acc <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    7850:	ldr	x8, [sp, #16]
    7854:	cmp	x8, x24
    7858:	mov	x20, x0
    785c:	b.eq	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>  // b.none
    7860:	mov	x0, x8
    7864:	bl	0 <_ZdlPv>
    7868:	b	7284 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0x62c>
    786c:	mov	x8, x20
    7870:	stur	x20, [x29, #-64]
    7874:	b	7824 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE+0xbcc>
    7878:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    787c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7880:	add	x0, x0, #0x0
    7884:	add	x1, x1, #0x0
    7888:	mov	x2, x19
    788c:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
    7890:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7894:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7898:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    789c:	add	x0, x0, #0x0
    78a0:	add	x1, x1, #0x0
    78a4:	add	x3, x3, #0x0
    78a8:	mov	w2, #0x69                  	// #105
    78ac:	bl	0 <__assert_fail>
    78b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    78b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    78b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    78bc:	add	x0, x0, #0x0
    78c0:	add	x1, x1, #0x0
    78c4:	add	x3, x3, #0x0
    78c8:	mov	w2, #0x43                  	// #67
    78cc:	bl	0 <__assert_fail>
    78d0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    78d4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    78d8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    78dc:	add	x0, x0, #0x0
    78e0:	add	x1, x1, #0x0
    78e4:	add	x3, x3, #0x0
    78e8:	mov	w2, #0x69                  	// #105
    78ec:	bl	0 <__assert_fail>
    78f0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    78f4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    78f8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    78fc:	add	x0, x0, #0x0
    7900:	add	x1, x1, #0x0
    7904:	add	x3, x3, #0x0
    7908:	mov	w2, #0x2af                 	// #687
    790c:	bl	0 <__assert_fail>
    7910:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7914:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7918:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    791c:	add	x0, x0, #0x0
    7920:	add	x1, x1, #0x0
    7924:	add	x3, x3, #0x0
    7928:	mov	w2, #0x69                  	// #105
    792c:	bl	0 <__assert_fail>
    7930:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7934:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7938:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    793c:	add	x0, x0, #0x0
    7940:	add	x1, x1, #0x0
    7944:	add	x3, x3, #0x0
    7948:	mov	w2, #0x69                  	// #105
    794c:	bl	0 <__assert_fail>
    7950:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7954:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7958:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    795c:	add	x0, x0, #0x0
    7960:	add	x1, x1, #0x0
    7964:	add	x3, x3, #0x0
    7968:	mov	w2, #0x69                  	// #105
    796c:	bl	0 <__assert_fail>
    7970:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7974:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7978:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    797c:	add	x0, x0, #0x0
    7980:	add	x1, x1, #0x0
    7984:	add	x3, x3, #0x0
    7988:	mov	w2, #0x108                 	// #264
    798c:	bl	0 <__assert_fail>
    7990:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7994:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7998:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    799c:	add	x0, x0, #0x0
    79a0:	add	x1, x1, #0x0
    79a4:	add	x3, x3, #0x0
    79a8:	mov	w2, #0x108                 	// #264
    79ac:	bl	0 <__assert_fail>

00000000000079b0 <_ZNK4llvm7VarInit7getNameEv>:
    79b0:	stp	x29, x30, [sp, #-16]!
    79b4:	mov	x29, sp
    79b8:	ldr	x8, [x0, #24]
    79bc:	cbz	x8, 79d8 <_ZNK4llvm7VarInit7getNameEv+0x28>
    79c0:	ldrb	w9, [x8, #8]
    79c4:	cmp	w9, #0x12
    79c8:	b.ne	79f8 <_ZNK4llvm7VarInit7getNameEv+0x48>  // b.any
    79cc:	ldp	x0, x1, [x8, #24]
    79d0:	ldp	x29, x30, [sp], #16
    79d4:	ret
    79d8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    79dc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    79e0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    79e4:	add	x0, x0, #0x0
    79e8:	add	x1, x1, #0x0
    79ec:	add	x3, x3, #0x0
    79f0:	mov	w2, #0x69                  	// #105
    79f4:	bl	0 <__assert_fail>
    79f8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    79fc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a00:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a04:	add	x0, x0, #0x0
    7a08:	add	x1, x1, #0x0
    7a0c:	add	x3, x3, #0x0
    7a10:	mov	w2, #0x108                 	// #264
    7a14:	bl	0 <__assert_fail>

0000000000007a18 <_ZN4llvm7VarInit3getENS_9StringRefEPNS_5RecTyE>:
    7a18:	stp	x29, x30, [sp, #-32]!
    7a1c:	str	x19, [sp, #16]
    7a20:	mov	x29, sp
    7a24:	mov	x19, x2
    7a28:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    7a2c:	mov	x1, x19
    7a30:	ldr	x19, [sp, #16]
    7a34:	ldp	x29, x30, [sp], #32
    7a38:	b	9acc <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>

0000000000007a3c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>:
    7a3c:	sub	sp, sp, #0xe0
    7a40:	stp	x29, x30, [sp, #160]
    7a44:	stp	x24, x23, [sp, #176]
    7a48:	stp	x22, x21, [sp, #192]
    7a4c:	stp	x20, x19, [sp, #208]
    7a50:	add	x29, sp, #0xa0
    7a54:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    7a58:	ldr	d0, [x9]
    7a5c:	add	x8, sp, #0x50
    7a60:	mov	x10, sp
    7a64:	mov	x19, x1
    7a68:	mov	x20, x0
    7a6c:	add	x21, x8, #0x10
    7a70:	add	x22, x10, #0x10
    7a74:	str	x21, [sp, #80]
    7a78:	str	x22, [sp]
    7a7c:	str	d0, [sp, #88]
    7a80:	str	d0, [sp, #8]
    7a84:	cbz	x3, 7b4c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x110>
    7a88:	mov	x23, x2
    7a8c:	mov	w8, wzr
    7a90:	add	x24, x2, x3, lsl #4
    7a94:	mov	w9, #0x8                   	// #8
    7a98:	cmp	w8, w9
    7a9c:	b.cs	7b04 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xc8>  // b.hs, b.nlast
    7aa0:	ldr	x9, [sp, #80]
    7aa4:	ldr	x10, [x23]
    7aa8:	str	x10, [x9, w8, uxtw #3]
    7aac:	ldp	w9, w8, [sp, #88]
    7ab0:	cmp	w9, w8
    7ab4:	b.cs	7bb8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x17c>  // b.hs, b.nlast
    7ab8:	ldp	w8, w10, [sp, #8]
    7abc:	add	w9, w9, #0x1
    7ac0:	str	w9, [sp, #88]
    7ac4:	cmp	w8, w10
    7ac8:	b.cs	7b20 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0xe4>  // b.hs, b.nlast
    7acc:	ldr	x9, [sp]
    7ad0:	ldr	x10, [x23, #8]
    7ad4:	str	x10, [x9, w8, uxtw #3]
    7ad8:	ldp	w8, w9, [sp, #8]
    7adc:	cmp	w8, w9
    7ae0:	b.cs	7bb8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x17c>  // b.hs, b.nlast
    7ae4:	add	x23, x23, #0x10
    7ae8:	add	x5, x8, #0x1
    7aec:	cmp	x23, x24
    7af0:	str	w5, [sp, #8]
    7af4:	b.eq	7b3c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x100>  // b.none
    7af8:	ldp	w8, w9, [sp, #88]
    7afc:	cmp	w8, w9
    7b00:	b.cc	7aa0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x64>  // b.lo, b.ul, b.last
    7b04:	add	x0, sp, #0x50
    7b08:	mov	w3, #0x8                   	// #8
    7b0c:	mov	x1, x21
    7b10:	mov	x2, xzr
    7b14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7b18:	ldr	w8, [sp, #88]
    7b1c:	b	7aa0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x64>
    7b20:	mov	x0, sp
    7b24:	mov	w3, #0x8                   	// #8
    7b28:	mov	x1, x22
    7b2c:	mov	x2, xzr
    7b30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    7b34:	ldr	w8, [sp, #8]
    7b38:	b	7acc <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x90>
    7b3c:	ldr	x21, [sp, #80]
    7b40:	ldr	w3, [sp, #88]
    7b44:	ldr	x22, [sp]
    7b48:	b	7b50 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x114>
    7b4c:	mov	x5, xzr
    7b50:	mov	x0, x20
    7b54:	mov	x1, x19
    7b58:	mov	x2, x21
    7b5c:	mov	x4, x22
    7b60:	bl	62e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    7b64:	ldr	x8, [sp]
    7b68:	mov	x9, sp
    7b6c:	add	x9, x9, #0x10
    7b70:	mov	x19, x0
    7b74:	cmp	x8, x9
    7b78:	b.eq	7b84 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x148>  // b.none
    7b7c:	mov	x0, x8
    7b80:	bl	0 <free>
    7b84:	ldr	x0, [sp, #80]
    7b88:	add	x8, sp, #0x50
    7b8c:	add	x8, x8, #0x10
    7b90:	cmp	x0, x8
    7b94:	b.eq	7b9c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE+0x160>  // b.none
    7b98:	bl	0 <free>
    7b9c:	mov	x0, x19
    7ba0:	ldp	x20, x19, [sp, #208]
    7ba4:	ldp	x22, x21, [sp, #192]
    7ba8:	ldp	x24, x23, [sp, #176]
    7bac:	ldp	x29, x30, [sp, #160]
    7bb0:	add	sp, sp, #0xe0
    7bb4:	ret
    7bb8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    7bbc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7bc0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7bc4:	add	x0, x0, #0x0
    7bc8:	add	x1, x1, #0x0
    7bcc:	add	x3, x3, #0x0
    7bd0:	mov	w2, #0x43                  	// #67
    7bd4:	bl	0 <__assert_fail>

0000000000007bd8 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE>:
    7bd8:	sub	sp, sp, #0x90
    7bdc:	stp	x29, x30, [sp, #80]
    7be0:	stp	x24, x23, [sp, #96]
    7be4:	stp	x22, x21, [sp, #112]
    7be8:	stp	x20, x19, [sp, #128]
    7bec:	add	x29, sp, #0x50
    7bf0:	mov	x20, x0
    7bf4:	ldr	x0, [x0, #32]
    7bf8:	mov	x19, x1
    7bfc:	ldr	x8, [x0]
    7c00:	ldr	x8, [x8, #96]
    7c04:	blr	x8
    7c08:	ldrb	w8, [x20, #9]
    7c0c:	mov	x21, x0
    7c10:	cmp	w8, #0x2
    7c14:	b.ne	7c5c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.any
    7c18:	ldr	x8, [x20, #32]
    7c1c:	cmp	x21, x8
    7c20:	b.eq	7c5c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.none
    7c24:	ldr	x8, [x21]
    7c28:	adrp	x1, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    7c2c:	mov	x0, x21
    7c30:	ldr	x8, [x8, #64]
    7c34:	ldr	x1, [x1]
    7c38:	blr	x8
    7c3c:	cbz	x0, 7c5c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>
    7c40:	ldrb	w8, [x0, #8]
    7c44:	cmp	w8, #0x8
    7c48:	b.ne	7c5c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x84>  // b.any
    7c4c:	ldr	x8, [x0, #24]
    7c50:	cbz	x8, 7d7c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x1a4>
    7c54:	ldr	x0, [x20, #40]
    7c58:	b	7d80 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x1a8>
    7c5c:	ldr	x0, [x20, #40]
    7c60:	mov	x1, x19
    7c64:	ldr	x8, [x0]
    7c68:	ldr	x8, [x8, #96]
    7c6c:	blr	x8
    7c70:	ldrb	w8, [x20, #9]
    7c74:	mov	x22, x0
    7c78:	cmp	w8, #0x1
    7c7c:	b.ne	7d00 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x128>  // b.any
    7c80:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    7c84:	ldr	x8, [x19, #8]
    7c88:	ldr	x9, [x9]
    7c8c:	stp	x19, xzr, [sp, #32]
    7c90:	stp	xzr, xzr, [sp, #48]
    7c94:	str	wzr, [sp, #64]
    7c98:	add	x24, x9, #0x10
    7c9c:	stp	x24, x8, [sp, #8]
    7ca0:	ldrb	w8, [x19, #16]
    7ca4:	add	x9, sp, #0x8
    7ca8:	add	x0, x9, #0x20
    7cac:	sub	x1, x29, #0x8
    7cb0:	sub	x2, x29, #0x8
    7cb4:	mov	x3, xzr
    7cb8:	strb	w8, [sp, #24]
    7cbc:	stur	x21, [x29, #-8]
    7cc0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    7cc4:	ldur	x8, [x29, #-8]
    7cc8:	add	x1, sp, #0x8
    7ccc:	str	x8, [x0]
    7cd0:	ldr	x0, [x20, #48]
    7cd4:	ldr	x8, [x0]
    7cd8:	ldr	x8, [x8, #96]
    7cdc:	blr	x8
    7ce0:	mov	x23, x0
    7ce4:	ldr	x0, [sp, #48]
    7ce8:	str	x24, [sp, #8]
    7cec:	bl	0 <_ZdlPv>
    7cf0:	ldr	x8, [x20, #32]
    7cf4:	cmp	x8, x21
    7cf8:	b.ne	7d3c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x164>  // b.any
    7cfc:	b	7d24 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x14c>
    7d00:	ldr	x0, [x20, #48]
    7d04:	mov	x1, x19
    7d08:	ldr	x8, [x0]
    7d0c:	ldr	x8, [x8, #96]
    7d10:	blr	x8
    7d14:	mov	x23, x0
    7d18:	ldr	x8, [x20, #32]
    7d1c:	cmp	x8, x21
    7d20:	b.ne	7d3c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x164>  // b.any
    7d24:	ldr	x8, [x20, #40]
    7d28:	cmp	x8, x22
    7d2c:	b.ne	7d3c <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x164>  // b.any
    7d30:	ldr	x8, [x20, #48]
    7d34:	cmp	x8, x23
    7d38:	b.eq	7d60 <_ZNK4llvm10TernOpInit17resolveReferencesERNS_8ResolverE+0x188>  // b.none
    7d3c:	ldr	x4, [x20, #16]
    7d40:	ldrb	w0, [x20, #9]
    7d44:	mov	x1, x21
    7d48:	mov	x2, x22
    7d4c:	mov	x3, x23
    7d50:	bl	6a44 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    7d54:	ldr	x1, [x19, #8]
    7d58:	bl	6c58 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    7d5c:	mov	x20, x0
    7d60:	mov	x0, x20
    7d64:	ldp	x20, x19, [sp, #128]
    7d68:	ldp	x22, x21, [sp, #112]
    7d6c:	ldp	x24, x23, [sp, #96]
    7d70:	ldp	x29, x30, [sp, #80]
    7d74:	add	sp, sp, #0x90
    7d78:	ret
    7d7c:	ldr	x0, [x20, #48]
    7d80:	ldr	x8, [x0]
    7d84:	mov	x1, x19
    7d88:	ldp	x20, x19, [sp, #128]
    7d8c:	ldp	x22, x21, [sp, #112]
    7d90:	ldr	x2, [x8, #96]
    7d94:	ldp	x24, x23, [sp, #96]
    7d98:	ldp	x29, x30, [sp, #80]
    7d9c:	add	sp, sp, #0x90
    7da0:	br	x2

0000000000007da4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev>:
    7da4:	sub	sp, sp, #0x1a0
    7da8:	stp	x29, x30, [sp, #320]
    7dac:	str	x28, [sp, #336]
    7db0:	stp	x26, x25, [sp, #352]
    7db4:	stp	x24, x23, [sp, #368]
    7db8:	stp	x22, x21, [sp, #384]
    7dbc:	stp	x20, x19, [sp, #400]
    7dc0:	add	x29, sp, #0x140
    7dc4:	sub	x9, x29, #0x20
    7dc8:	add	x23, x9, #0x10
    7dcc:	stp	x23, xzr, [x29, #-32]
    7dd0:	sturb	wzr, [x29, #-16]
    7dd4:	ldrb	w9, [x0, #9]
    7dd8:	mov	x20, x0
    7ddc:	mov	x19, x8
    7de0:	cmp	w9, #0x3
    7de4:	b.hi	7e68 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xc4>  // b.pmore
    7de8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    7dec:	add	x8, x8, #0x0
    7df0:	adr	x10, 7e00 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5c>
    7df4:	ldrb	w11, [x8, x9]
    7df8:	add	x10, x10, x11, lsl #2
    7dfc:	br	x10
    7e00:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7e04:	add	x3, x3, #0x0
    7e08:	sub	x0, x29, #0x20
    7e0c:	mov	w4, #0x6                   	// #6
    7e10:	b	7e5c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xb8>
    7e14:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7e18:	add	x3, x3, #0x0
    7e1c:	sub	x0, x29, #0x20
    7e20:	mov	w4, #0x3                   	// #3
    7e24:	b	7e5c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xb8>
    7e28:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7e2c:	add	x3, x3, #0x0
    7e30:	sub	x0, x29, #0x20
    7e34:	mov	w4, #0x8                   	// #8
    7e38:	mov	x1, xzr
    7e3c:	mov	x2, xzr
    7e40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7e44:	mov	w25, #0x1                   	// #1
    7e48:	b	7e6c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xc8>
    7e4c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    7e50:	add	x3, x3, #0x0
    7e54:	sub	x0, x29, #0x20
    7e58:	mov	w4, #0x4                   	// #4
    7e5c:	mov	x1, xzr
    7e60:	mov	x2, xzr
    7e64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7e68:	mov	w25, wzr
    7e6c:	ldp	x21, x22, [x29, #-32]
    7e70:	add	x8, sp, #0x60
    7e74:	add	x24, x8, #0x10
    7e78:	str	x24, [sp, #96]
    7e7c:	cbnz	x21, 7e84 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0xe0>
    7e80:	cbnz	x22, 8364 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5c0>
    7e84:	cmp	x22, #0x10
    7e88:	stur	x22, [x29, #-64]
    7e8c:	b.cc	7eb4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x110>  // b.lo, b.ul, b.last
    7e90:	add	x0, sp, #0x60
    7e94:	sub	x1, x29, #0x40
    7e98:	mov	x2, xzr
    7e9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    7ea0:	ldur	x8, [x29, #-64]
    7ea4:	str	x0, [sp, #96]
    7ea8:	str	x8, [sp, #112]
    7eac:	cbnz	x22, 7ebc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x118>
    7eb0:	b	7edc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7eb4:	mov	x0, x24
    7eb8:	cbz	x22, 7edc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7ebc:	cmp	x22, #0x1
    7ec0:	b.ne	7ed0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x12c>  // b.any
    7ec4:	ldrb	w8, [x21]
    7ec8:	strb	w8, [x0]
    7ecc:	b	7edc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x138>
    7ed0:	mov	x1, x21
    7ed4:	mov	x2, x22
    7ed8:	bl	0 <memcpy>
    7edc:	ldur	x8, [x29, #-64]
    7ee0:	ldr	x9, [sp, #96]
    7ee4:	str	x8, [sp, #104]
    7ee8:	strb	wzr, [x9, x8]
    7eec:	ldr	x8, [sp, #104]
    7ef0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7ef4:	cmp	x8, x9
    7ef8:	b.eq	8358 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7efc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7f00:	add	x1, x1, #0x0
    7f04:	add	x0, sp, #0x60
    7f08:	mov	w2, #0x1                   	// #1
    7f0c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7f10:	ldr	x0, [x20, #32]
    7f14:	ldr	x8, [x0]
    7f18:	cbz	w25, 7f24 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x180>
    7f1c:	ldr	x9, [x8, #48]
    7f20:	b	7f28 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x184>
    7f24:	ldr	x9, [x8, #40]
    7f28:	add	x8, sp, #0x40
    7f2c:	blr	x9
    7f30:	ldp	x3, x4, [sp, #96]
    7f34:	ldp	x1, x2, [sp, #64]
    7f38:	ldr	x9, [sp, #112]
    7f3c:	mov	w10, #0xf                   	// #15
    7f40:	cmp	x3, x24
    7f44:	add	x8, x2, x4
    7f48:	csel	x9, x10, x9, eq  // eq = none
    7f4c:	cmp	x8, x9
    7f50:	b.ls	7f74 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1d0>  // b.plast
    7f54:	ldr	x10, [sp, #80]
    7f58:	add	x9, sp, #0x40
    7f5c:	add	x9, x9, #0x10
    7f60:	cmp	x1, x9
    7f64:	mov	w9, #0xf                   	// #15
    7f68:	csel	x9, x9, x10, eq  // eq = none
    7f6c:	cmp	x8, x9
    7f70:	b.ls	7f80 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1dc>  // b.plast
    7f74:	add	x0, sp, #0x60
    7f78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7f7c:	b	7f90 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x1ec>
    7f80:	add	x0, sp, #0x40
    7f84:	mov	x1, xzr
    7f88:	mov	x2, xzr
    7f8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    7f90:	add	x8, sp, #0x80
    7f94:	add	x21, x8, #0x10
    7f98:	str	x21, [sp, #128]
    7f9c:	mov	x8, x0
    7fa0:	ldr	x9, [x8], #16
    7fa4:	cmp	x9, x8
    7fa8:	b.eq	7fbc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    7fac:	str	x9, [sp, #128]
    7fb0:	ldr	x9, [x0, #16]
    7fb4:	str	x9, [sp, #144]
    7fb8:	b	7fc4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x220>
    7fbc:	ldr	q0, [x9]
    7fc0:	str	q0, [x21]
    7fc4:	ldr	x9, [x0, #8]
    7fc8:	str	x9, [sp, #136]
    7fcc:	stp	x8, xzr, [x0]
    7fd0:	strb	wzr, [x0, #16]
    7fd4:	ldr	x8, [sp, #136]
    7fd8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    7fdc:	orr	x8, x8, #0x1
    7fe0:	cmp	x8, x9
    7fe4:	b.eq	8358 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    7fe8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    7fec:	add	x1, x1, #0x0
    7ff0:	add	x0, sp, #0x80
    7ff4:	mov	w2, #0x2                   	// #2
    7ff8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    7ffc:	add	x8, sp, #0xa0
    8000:	add	x22, x8, #0x10
    8004:	str	x22, [sp, #160]
    8008:	mov	x8, x0
    800c:	ldr	x9, [x8], #16
    8010:	cmp	x9, x8
    8014:	b.eq	8028 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x284>  // b.none
    8018:	str	x9, [sp, #160]
    801c:	ldr	x9, [x0, #16]
    8020:	str	x9, [sp, #176]
    8024:	b	8030 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x28c>
    8028:	ldr	q0, [x9]
    802c:	str	q0, [x22]
    8030:	ldr	x9, [x0, #8]
    8034:	add	x25, sp, #0x20
    8038:	str	x9, [sp, #168]
    803c:	stp	x8, xzr, [x0]
    8040:	strb	wzr, [x0, #16]
    8044:	ldr	x0, [x20, #40]
    8048:	ldr	x8, [x0]
    804c:	ldr	x9, [x8, #40]
    8050:	add	x8, sp, #0x20
    8054:	blr	x9
    8058:	ldp	x3, x4, [sp, #160]
    805c:	ldp	x1, x2, [sp, #32]
    8060:	ldr	x9, [sp, #176]
    8064:	mov	w10, #0xf                   	// #15
    8068:	cmp	x3, x22
    806c:	add	x8, x2, x4
    8070:	csel	x9, x10, x9, eq  // eq = none
    8074:	cmp	x8, x9
    8078:	b.ls	8098 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x2f4>  // b.plast
    807c:	ldr	x9, [sp, #48]
    8080:	add	x10, x25, #0x10
    8084:	cmp	x1, x10
    8088:	mov	w10, #0xf                   	// #15
    808c:	csel	x9, x10, x9, eq  // eq = none
    8090:	cmp	x8, x9
    8094:	b.ls	80a4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x300>  // b.plast
    8098:	add	x0, sp, #0xa0
    809c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    80a0:	b	80b4 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x310>
    80a4:	add	x0, sp, #0x20
    80a8:	mov	x1, xzr
    80ac:	mov	x2, xzr
    80b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    80b4:	sub	x8, x29, #0x80
    80b8:	add	x25, x8, #0x10
    80bc:	stur	x25, [x29, #-128]
    80c0:	mov	x8, x0
    80c4:	ldr	x9, [x8], #16
    80c8:	cmp	x9, x8
    80cc:	b.eq	80e0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x33c>  // b.none
    80d0:	stur	x9, [x29, #-128]
    80d4:	ldr	x9, [x0, #16]
    80d8:	stur	x9, [x29, #-112]
    80dc:	b	80e8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x344>
    80e0:	ldr	q0, [x9]
    80e4:	str	q0, [x25]
    80e8:	ldr	x9, [x0, #8]
    80ec:	stur	x9, [x29, #-120]
    80f0:	stp	x8, xzr, [x0]
    80f4:	strb	wzr, [x0, #16]
    80f8:	ldur	x8, [x29, #-120]
    80fc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    8100:	orr	x8, x8, #0x1
    8104:	cmp	x8, x9
    8108:	b.eq	8358 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    810c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8110:	add	x1, x1, #0x0
    8114:	sub	x0, x29, #0x80
    8118:	mov	w2, #0x2                   	// #2
    811c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8120:	sub	x8, x29, #0x60
    8124:	add	x26, x8, #0x10
    8128:	stur	x26, [x29, #-96]
    812c:	mov	x8, x0
    8130:	ldr	x9, [x8], #16
    8134:	cmp	x9, x8
    8138:	b.eq	814c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3a8>  // b.none
    813c:	stur	x9, [x29, #-96]
    8140:	ldr	x9, [x0, #16]
    8144:	stur	x9, [x29, #-80]
    8148:	b	8154 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x3b0>
    814c:	ldr	q0, [x9]
    8150:	str	q0, [x26]
    8154:	ldr	x9, [x0, #8]
    8158:	stur	x9, [x29, #-88]
    815c:	stp	x8, xzr, [x0]
    8160:	strb	wzr, [x0, #16]
    8164:	ldr	x0, [x20, #48]
    8168:	mov	x20, sp
    816c:	ldr	x8, [x0]
    8170:	ldr	x9, [x8, #40]
    8174:	mov	x8, sp
    8178:	blr	x9
    817c:	ldp	x3, x4, [x29, #-96]
    8180:	ldp	x1, x2, [sp]
    8184:	ldur	x9, [x29, #-80]
    8188:	mov	w10, #0xf                   	// #15
    818c:	cmp	x3, x26
    8190:	add	x8, x2, x4
    8194:	csel	x9, x10, x9, eq  // eq = none
    8198:	cmp	x8, x9
    819c:	b.ls	81bc <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x418>  // b.plast
    81a0:	ldr	x9, [sp, #16]
    81a4:	add	x10, x20, #0x10
    81a8:	cmp	x1, x10
    81ac:	mov	w10, #0xf                   	// #15
    81b0:	csel	x9, x10, x9, eq  // eq = none
    81b4:	cmp	x8, x9
    81b8:	b.ls	81c8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x424>  // b.plast
    81bc:	sub	x0, x29, #0x60
    81c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    81c4:	b	81d8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x434>
    81c8:	mov	x0, sp
    81cc:	mov	x1, xzr
    81d0:	mov	x2, xzr
    81d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    81d8:	sub	x8, x29, #0x40
    81dc:	add	x20, x8, #0x10
    81e0:	stur	x20, [x29, #-64]
    81e4:	mov	x8, x0
    81e8:	ldr	x9, [x8], #16
    81ec:	cmp	x9, x8
    81f0:	b.eq	8204 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x460>  // b.none
    81f4:	stur	x9, [x29, #-64]
    81f8:	ldr	x9, [x0, #16]
    81fc:	stur	x9, [x29, #-48]
    8200:	b	820c <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x468>
    8204:	ldr	q0, [x9]
    8208:	str	q0, [x20]
    820c:	ldr	x9, [x0, #8]
    8210:	stur	x9, [x29, #-56]
    8214:	stp	x8, xzr, [x0]
    8218:	strb	wzr, [x0, #16]
    821c:	ldur	x8, [x29, #-56]
    8220:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    8224:	cmp	x8, x9
    8228:	b.eq	8358 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x5b4>  // b.none
    822c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8230:	add	x1, x1, #0x0
    8234:	sub	x0, x29, #0x40
    8238:	mov	w2, #0x1                   	// #1
    823c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    8240:	add	x9, x19, #0x10
    8244:	str	x9, [x19]
    8248:	mov	x8, x0
    824c:	ldr	x10, [x8], #16
    8250:	cmp	x10, x8
    8254:	b.eq	8268 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4c4>  // b.none
    8258:	str	x10, [x19]
    825c:	ldr	x9, [x0, #16]
    8260:	str	x9, [x19, #16]
    8264:	b	8270 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4cc>
    8268:	ldr	q0, [x10]
    826c:	str	q0, [x9]
    8270:	ldr	x9, [x0, #8]
    8274:	str	x9, [x19, #8]
    8278:	stp	x8, xzr, [x0]
    827c:	strb	wzr, [x0, #16]
    8280:	ldur	x0, [x29, #-64]
    8284:	cmp	x0, x20
    8288:	b.eq	8290 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x4ec>  // b.none
    828c:	bl	0 <_ZdlPv>
    8290:	ldr	x0, [sp]
    8294:	mov	x8, sp
    8298:	add	x8, x8, #0x10
    829c:	cmp	x0, x8
    82a0:	b.eq	82a8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x504>  // b.none
    82a4:	bl	0 <_ZdlPv>
    82a8:	ldur	x0, [x29, #-96]
    82ac:	cmp	x0, x26
    82b0:	b.eq	82b8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x514>  // b.none
    82b4:	bl	0 <_ZdlPv>
    82b8:	ldur	x0, [x29, #-128]
    82bc:	cmp	x0, x25
    82c0:	b.eq	82c8 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x524>  // b.none
    82c4:	bl	0 <_ZdlPv>
    82c8:	ldr	x0, [sp, #32]
    82cc:	add	x8, sp, #0x20
    82d0:	add	x8, x8, #0x10
    82d4:	cmp	x0, x8
    82d8:	b.eq	82e0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x53c>  // b.none
    82dc:	bl	0 <_ZdlPv>
    82e0:	ldr	x0, [sp, #160]
    82e4:	cmp	x0, x22
    82e8:	b.eq	82f0 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x54c>  // b.none
    82ec:	bl	0 <_ZdlPv>
    82f0:	ldr	x0, [sp, #128]
    82f4:	cmp	x0, x21
    82f8:	b.eq	8300 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x55c>  // b.none
    82fc:	bl	0 <_ZdlPv>
    8300:	ldr	x0, [sp, #64]
    8304:	add	x8, sp, #0x40
    8308:	add	x8, x8, #0x10
    830c:	cmp	x0, x8
    8310:	b.eq	8318 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x574>  // b.none
    8314:	bl	0 <_ZdlPv>
    8318:	ldr	x0, [sp, #96]
    831c:	cmp	x0, x24
    8320:	b.eq	8328 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x584>  // b.none
    8324:	bl	0 <_ZdlPv>
    8328:	ldur	x0, [x29, #-32]
    832c:	cmp	x0, x23
    8330:	b.eq	8338 <_ZNK4llvm10TernOpInit11getAsStringB5cxx11Ev+0x594>  // b.none
    8334:	bl	0 <_ZdlPv>
    8338:	ldp	x20, x19, [sp, #400]
    833c:	ldp	x22, x21, [sp, #384]
    8340:	ldp	x24, x23, [sp, #368]
    8344:	ldp	x26, x25, [sp, #352]
    8348:	ldr	x28, [sp, #336]
    834c:	ldp	x29, x30, [sp, #320]
    8350:	add	sp, sp, #0x1a0
    8354:	ret
    8358:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    835c:	add	x0, x0, #0x0
    8360:	bl	0 <_ZSt20__throw_length_errorPKc>
    8364:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8368:	add	x0, x0, #0x0
    836c:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000008370 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>:
    8370:	sub	sp, sp, #0xf0
    8374:	stp	x29, x30, [sp, #144]
    8378:	str	x27, [sp, #160]
    837c:	stp	x26, x25, [sp, #176]
    8380:	stp	x24, x23, [sp, #192]
    8384:	stp	x22, x21, [sp, #208]
    8388:	stp	x20, x19, [sp, #224]
    838c:	add	x29, sp, #0x90
    8390:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8394:	add	x8, x8, #0x0
    8398:	ldarb	w8, [x8]
    839c:	mov	x24, x5
    83a0:	mov	x19, x4
    83a4:	mov	x20, x3
    83a8:	mov	x21, x2
    83ac:	mov	x22, x1
    83b0:	mov	x23, x0
    83b4:	tbz	w8, #0, 84d0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x160>
    83b8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    83bc:	ldr	d0, [x8]
    83c0:	mov	x8, sp
    83c4:	add	x27, x8, #0x10
    83c8:	mov	x0, sp
    83cc:	mov	x1, x21
    83d0:	str	x27, [sp]
    83d4:	str	d0, [sp, #8]
    83d8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    83dc:	mov	x0, sp
    83e0:	mov	x1, x20
    83e4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    83e8:	mov	x0, sp
    83ec:	mov	x1, x23
    83f0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    83f4:	mov	x0, sp
    83f8:	mov	x1, x22
    83fc:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8400:	mov	x0, sp
    8404:	mov	x1, x19
    8408:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    840c:	mov	x0, sp
    8410:	mov	x1, x24
    8414:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8418:	adrp	x25, 0 <_ZNK4llvm5RecTy4dumpEv>
    841c:	add	x25, x25, #0x0
    8420:	mov	x1, sp
    8424:	add	x2, x29, #0x18
    8428:	mov	x0, x25
    842c:	str	xzr, [x29, #24]
    8430:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8434:	cbz	x0, 8470 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x100>
    8438:	sub	x26, x0, #0x18
    843c:	ldr	x0, [sp]
    8440:	cmp	x0, x27
    8444:	b.eq	844c <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xdc>  // b.none
    8448:	bl	0 <free>
    844c:	mov	x0, x26
    8450:	ldp	x20, x19, [sp, #224]
    8454:	ldp	x22, x21, [sp, #208]
    8458:	ldp	x24, x23, [sp, #192]
    845c:	ldp	x26, x25, [sp, #176]
    8460:	ldr	x27, [sp, #160]
    8464:	ldp	x29, x30, [sp, #144]
    8468:	add	sp, sp, #0xf0
    846c:	ret
    8470:	add	x0, x25, #0x1f0
    8474:	mov	w1, #0x48                  	// #72
    8478:	mov	w2, #0x4                   	// #4
    847c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8480:	str	x24, [x0, #16]
    8484:	adrp	x9, 9d8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x1cc>
    8488:	ldr	x9, [x9]
    848c:	ldr	x2, [x29, #24]
    8490:	mov	w8, #0x10                  	// #16
    8494:	mov	x1, x0
    8498:	strh	w8, [x0, #8]
    849c:	add	x8, x9, #0x10
    84a0:	mov	x26, x0
    84a4:	str	xzr, [x1, #24]!
    84a8:	stp	x23, x22, [x0, #32]
    84ac:	str	x8, [x0]
    84b0:	stp	x21, x20, [x0, #48]
    84b4:	str	x19, [x0, #64]
    84b8:	mov	x0, x25
    84bc:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    84c0:	ldr	x0, [sp]
    84c4:	cmp	x0, x27
    84c8:	b.ne	8448 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xd8>  // b.any
    84cc:	b	844c <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0xdc>
    84d0:	adrp	x25, 0 <_ZNK4llvm5RecTy4dumpEv>
    84d4:	add	x25, x25, #0x0
    84d8:	mov	x0, x25
    84dc:	bl	0 <__cxa_guard_acquire>
    84e0:	cbz	w0, 83b8 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>
    84e4:	add	x26, x25, #0xe8
    84e8:	mov	w1, #0x6                   	// #6
    84ec:	mov	x0, x26
    84f0:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    84f4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    84f8:	ldr	x8, [x8]
    84fc:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    8500:	adrp	x2, 0 <__dso_handle>
    8504:	add	x2, x2, #0x0
    8508:	add	x8, x8, #0x10
    850c:	str	x8, [x25, #232]
    8510:	ldr	x0, [x0]
    8514:	mov	x1, x26
    8518:	bl	0 <__cxa_atexit>
    851c:	mov	x0, x25
    8520:	bl	0 <__cxa_guard_release>
    8524:	b	83b8 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE+0x48>

0000000000008528 <_ZNK4llvm10FoldOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    8528:	stp	x29, x30, [sp, #-64]!
    852c:	stp	x24, x23, [sp, #16]
    8530:	stp	x22, x21, [sp, #32]
    8534:	stp	x20, x19, [sp, #48]
    8538:	mov	x29, sp
    853c:	ldp	x8, x21, [x0, #48]
    8540:	ldp	x19, x20, [x0, #32]
    8544:	ldr	x22, [x0, #64]
    8548:	ldr	x23, [x0, #16]
    854c:	mov	x24, x1
    8550:	mov	x0, x1
    8554:	mov	x1, x8
    8558:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    855c:	mov	x0, x24
    8560:	mov	x1, x21
    8564:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8568:	mov	x0, x24
    856c:	mov	x1, x19
    8570:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8574:	mov	x0, x24
    8578:	mov	x1, x20
    857c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8580:	mov	x0, x24
    8584:	mov	x1, x22
    8588:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    858c:	mov	x0, x24
    8590:	mov	x1, x23
    8594:	ldp	x20, x19, [sp, #48]
    8598:	ldp	x22, x21, [sp, #32]
    859c:	ldp	x24, x23, [sp, #16]
    85a0:	ldp	x29, x30, [sp], #64
    85a4:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

00000000000085a8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>:
    85a8:	sub	sp, sp, #0x90
    85ac:	stp	x29, x30, [sp, #64]
    85b0:	stp	x26, x25, [sp, #80]
    85b4:	stp	x24, x23, [sp, #96]
    85b8:	stp	x22, x21, [sp, #112]
    85bc:	stp	x20, x19, [sp, #128]
    85c0:	add	x29, sp, #0x40
    85c4:	ldr	x8, [x0, #40]
    85c8:	cbz	x8, 86ac <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x104>
    85cc:	ldrb	w9, [x8, #8]
    85d0:	mov	x19, x0
    85d4:	cmp	w9, #0x9
    85d8:	b.ne	8688 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe0>  // b.any
    85dc:	ldr	w9, [x8, #32]
    85e0:	ldr	x22, [x19, #32]
    85e4:	lsl	x23, x9, #3
    85e8:	cbz	x23, 868c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe4>
    85ec:	adrp	x9, dd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5cc>
    85f0:	ldr	x9, [x9]
    85f4:	add	x24, x8, #0x28
    85f8:	mov	x8, sp
    85fc:	mov	x20, x1
    8600:	add	x21, x8, #0x18
    8604:	add	x25, x9, #0x10
    8608:	ldr	x26, [x24], #8
    860c:	strb	wzr, [sp, #16]
    8610:	stp	x25, x20, [sp]
    8614:	stp	xzr, xzr, [x21]
    8618:	str	wzr, [x21, #24]
    861c:	str	xzr, [x21, #16]
    8620:	ldr	x8, [x19, #48]
    8624:	sub	x1, x29, #0x8
    8628:	mov	x0, x21
    862c:	stur	x8, [x29, #-8]
    8630:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8634:	str	x22, [x0, #8]
    8638:	strb	wzr, [x0, #16]
    863c:	ldr	x8, [x19, #56]
    8640:	sub	x1, x29, #0x8
    8644:	mov	x0, x21
    8648:	stur	x8, [x29, #-8]
    864c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8650:	str	x26, [x0, #8]
    8654:	strb	wzr, [x0, #16]
    8658:	ldr	x0, [x19, #64]
    865c:	mov	x1, sp
    8660:	ldr	x8, [x0]
    8664:	ldr	x8, [x8, #96]
    8668:	blr	x8
    866c:	mov	x22, x0
    8670:	ldr	x0, [sp, #32]
    8674:	str	x25, [sp]
    8678:	bl	0 <_ZdlPv>
    867c:	subs	x23, x23, #0x8
    8680:	b.ne	8608 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0x60>  // b.any
    8684:	b	868c <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE+0xe4>
    8688:	mov	x22, x19
    868c:	mov	x0, x22
    8690:	ldp	x20, x19, [sp, #128]
    8694:	ldp	x22, x21, [sp, #112]
    8698:	ldp	x24, x23, [sp, #96]
    869c:	ldp	x26, x25, [sp, #80]
    86a0:	ldp	x29, x30, [sp, #64]
    86a4:	add	sp, sp, #0x90
    86a8:	ret
    86ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    86b0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    86b4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    86b8:	add	x0, x0, #0x0
    86bc:	add	x1, x1, #0x0
    86c0:	add	x3, x3, #0x0
    86c4:	mov	w2, #0x69                  	// #105
    86c8:	bl	0 <__assert_fail>

00000000000086cc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE>:
    86cc:	sub	sp, sp, #0x90
    86d0:	stp	x29, x30, [sp, #80]
    86d4:	stp	x24, x23, [sp, #96]
    86d8:	stp	x22, x21, [sp, #112]
    86dc:	stp	x20, x19, [sp, #128]
    86e0:	add	x29, sp, #0x50
    86e4:	mov	x19, x0
    86e8:	ldr	x0, [x0, #32]
    86ec:	mov	x20, x1
    86f0:	ldr	x8, [x0]
    86f4:	ldr	x8, [x8, #96]
    86f8:	blr	x8
    86fc:	ldr	x8, [x19, #40]
    8700:	mov	x21, x0
    8704:	mov	x1, x20
    8708:	ldr	x9, [x8]
    870c:	mov	x0, x8
    8710:	ldr	x9, [x9, #96]
    8714:	blr	x9
    8718:	adrp	x24, 0 <_ZNK4llvm5RecTy4dumpEv>
    871c:	ldr	x8, [x20, #8]
    8720:	ldr	x24, [x24]
    8724:	stp	x20, xzr, [sp, #32]
    8728:	stp	xzr, xzr, [sp, #48]
    872c:	str	wzr, [sp, #64]
    8730:	add	x9, x24, #0x10
    8734:	stp	x9, x8, [sp, #8]
    8738:	ldrb	w8, [x20, #16]
    873c:	add	x9, sp, #0x8
    8740:	add	x23, x9, #0x20
    8744:	mov	x22, x0
    8748:	strb	w8, [sp, #24]
    874c:	ldr	x8, [x19, #48]
    8750:	sub	x1, x29, #0x8
    8754:	sub	x2, x29, #0x8
    8758:	mov	x0, x23
    875c:	mov	x3, xzr
    8760:	stur	x8, [x29, #-8]
    8764:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8768:	ldur	x8, [x29, #-8]
    876c:	str	x8, [x0]
    8770:	ldr	w10, [sp, #64]
    8774:	ldr	x8, [x19, #56]
    8778:	ldr	x9, [sp, #48]
    877c:	stur	x8, [x29, #-8]
    8780:	cbz	w10, 87f0 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x124>
    8784:	orr	x11, x8, #0x8
    8788:	cmn	x11, #0x8
    878c:	b.eq	88a0 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1d4>  // b.none
    8790:	ubfx	x11, x8, #4, #28
    8794:	eor	w11, w11, w8, lsr #9
    8798:	sub	w10, w10, #0x1
    879c:	and	w12, w10, w11
    87a0:	add	x11, x9, w12, uxtw #3
    87a4:	ldr	x14, [x11]
    87a8:	cmp	x14, x8
    87ac:	b.eq	880c <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x140>  // b.none
    87b0:	mov	x13, xzr
    87b4:	mov	w16, #0x1                   	// #1
    87b8:	mov	x15, #0xfffffffffffffff0    	// #-16
    87bc:	cmn	x14, #0x8
    87c0:	b.eq	8894 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x1c8>  // b.none
    87c4:	cmp	x13, #0x0
    87c8:	add	w12, w12, w16
    87cc:	ccmp	x14, x15, #0x0, eq  // eq = none
    87d0:	and	w12, w12, w10
    87d4:	csel	x13, x13, x11, ne  // ne = any
    87d8:	add	x11, x9, w12, uxtw #3
    87dc:	ldr	x14, [x11]
    87e0:	add	w16, w16, #0x1
    87e4:	cmp	x14, x8
    87e8:	b.eq	880c <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x140>  // b.none
    87ec:	b	87bc <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0xf0>
    87f0:	mov	x3, xzr
    87f4:	sub	x1, x29, #0x8
    87f8:	sub	x2, x29, #0x8
    87fc:	mov	x0, x23
    8800:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    8804:	ldur	x8, [x29, #-8]
    8808:	str	x8, [x0]
    880c:	ldr	x0, [x19, #64]
    8810:	add	x1, sp, #0x8
    8814:	ldr	x8, [x0]
    8818:	ldr	x8, [x8, #96]
    881c:	blr	x8
    8820:	ldr	x8, [x19, #32]
    8824:	mov	x4, x0
    8828:	cmp	x8, x21
    882c:	b.ne	8848 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x17c>  // b.any
    8830:	ldr	x8, [x19, #40]
    8834:	cmp	x8, x22
    8838:	b.ne	8848 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x17c>  // b.any
    883c:	ldr	x8, [x19, #64]
    8840:	cmp	x8, x4
    8844:	b.eq	8868 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x19c>  // b.none
    8848:	ldp	x2, x3, [x19, #48]
    884c:	ldr	x5, [x19, #16]
    8850:	mov	x0, x21
    8854:	mov	x1, x22
    8858:	bl	8370 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    885c:	ldr	x1, [x20, #8]
    8860:	bl	85a8 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    8864:	mov	x19, x0
    8868:	ldr	x0, [sp, #48]
    886c:	add	x8, x24, #0x10
    8870:	str	x8, [sp, #8]
    8874:	bl	0 <_ZdlPv>
    8878:	mov	x0, x19
    887c:	ldp	x20, x19, [sp, #128]
    8880:	ldp	x22, x21, [sp, #112]
    8884:	ldp	x24, x23, [sp, #96]
    8888:	ldp	x29, x30, [sp, #80]
    888c:	add	sp, sp, #0x90
    8890:	ret
    8894:	cmp	x13, #0x0
    8898:	csel	x3, x11, x13, eq  // eq = none
    889c:	b	87f4 <_ZNK4llvm10FoldOpInit17resolveReferencesERNS_8ResolverE+0x128>
    88a0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    88a4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    88a8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    88ac:	add	x0, x0, #0x0
    88b0:	add	x1, x1, #0x0
    88b4:	add	x3, x3, #0x0
    88b8:	mov	w2, #0x252                 	// #594
    88bc:	bl	0 <__assert_fail>

00000000000088c0 <_ZNK4llvm10FoldOpInit6getBitEj>:
    88c0:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

00000000000088c4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev>:
    88c4:	stp	x29, x30, [sp, #-80]!
    88c8:	str	x28, [sp, #16]
    88cc:	stp	x24, x23, [sp, #32]
    88d0:	stp	x22, x21, [sp, #48]
    88d4:	stp	x20, x19, [sp, #64]
    88d8:	mov	x29, sp
    88dc:	sub	sp, sp, #0x290
    88e0:	mov	x20, x0
    88e4:	ldr	x0, [x0, #32]
    88e8:	mov	x19, x8
    88ec:	add	x8, sp, #0x140
    88f0:	add	x22, sp, #0x140
    88f4:	ldr	x9, [x0]
    88f8:	ldr	x9, [x9, #40]
    88fc:	blr	x9
    8900:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8904:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    8908:	add	x8, x8, #0x0
    890c:	mov	w9, #0x403                 	// #1027
    8910:	add	x10, sp, #0x160
    8914:	add	x21, x21, #0x0
    8918:	mov	w11, #0x302                 	// #770
    891c:	stp	x8, x22, [sp, #352]
    8920:	strh	w9, [sp, #368]
    8924:	stp	x10, x21, [sp, #376]
    8928:	strh	w11, [sp, #392]
    892c:	cbnz	wzr, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8930:	ldrb	w8, [sp, #369]
    8934:	cmp	w8, #0x1
    8938:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    893c:	ldr	x0, [x20, #40]
    8940:	add	x22, sp, #0x88
    8944:	add	x23, sp, #0x108
    8948:	ldr	x8, [x0]
    894c:	ldr	x9, [x8, #40]
    8950:	add	x8, sp, #0x108
    8954:	blr	x9
    8958:	ldrb	w8, [sp, #392]
    895c:	mov	w9, #0x104                 	// #260
    8960:	strh	w9, [sp, #312]
    8964:	stp	x23, xzr, [sp, #296]
    8968:	cmp	w8, #0x1
    896c:	b.eq	8990 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0xcc>  // b.none
    8970:	cbnz	w8, 89a8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0xe4>
    8974:	mov	w8, #0x100                 	// #256
    8978:	mov	w9, #0x103                 	// #259
    897c:	stp	xzr, xzr, [x29, #-256]
    8980:	stp	x21, xzr, [sp, #240]
    8984:	sturh	w8, [x29, #-240]
    8988:	strh	w9, [sp, #256]
    898c:	b	8a20 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x15c>
    8990:	ldr	x8, [sp, #312]
    8994:	ldr	q0, [x22, #160]
    8998:	stur	x8, [x29, #-240]
    899c:	and	w8, w8, #0xff
    89a0:	stur	q0, [x29, #-256]
    89a4:	b	8a08 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x144>
    89a8:	ldrb	w9, [sp, #393]
    89ac:	ldr	x10, [sp, #376]
    89b0:	mov	w11, #0x2                   	// #2
    89b4:	add	x12, sp, #0x178
    89b8:	cmp	w9, #0x1
    89bc:	csel	w11, w8, w11, eq  // eq = none
    89c0:	add	x13, sp, #0x108
    89c4:	mov	w14, #0x4                   	// #4
    89c8:	csel	x9, x10, x12, eq  // eq = none
    89cc:	cmp	w11, #0x2
    89d0:	stp	x9, x13, [x29, #-256]
    89d4:	sturb	w11, [x29, #-240]
    89d8:	sturb	w14, [x29, #-239]
    89dc:	b.ne	8a08 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x144>  // b.any
    89e0:	ldrb	w8, [x9, #16]
    89e4:	cbz	w8, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    89e8:	ldrb	w8, [x9, #17]
    89ec:	cmp	w8, #0x1
    89f0:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    89f4:	mov	w8, #0x103                 	// #259
    89f8:	strh	w8, [sp, #256]
    89fc:	mov	w8, #0x2                   	// #2
    8a00:	stp	x21, xzr, [sp, #240]
    8a04:	b	8a30 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x16c>
    8a08:	mov	w9, #0x103                 	// #259
    8a0c:	cmp	w8, #0x1
    8a10:	stp	x21, xzr, [sp, #240]
    8a14:	strh	w9, [sp, #256]
    8a18:	b.eq	8a7c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1b8>  // b.none
    8a1c:	cbnz	w8, 8a30 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x16c>
    8a20:	mov	w8, #0x100                 	// #256
    8a24:	stp	xzr, xzr, [x29, #-224]
    8a28:	sturh	w8, [x29, #-208]
    8a2c:	b	8a8c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>
    8a30:	ldurb	w9, [x29, #-239]
    8a34:	ldur	x10, [x29, #-256]
    8a38:	mov	w11, #0x2                   	// #2
    8a3c:	sub	x12, x29, #0x100
    8a40:	cmp	w9, #0x1
    8a44:	csel	w9, w8, w11, eq  // eq = none
    8a48:	mov	w13, #0x3                   	// #3
    8a4c:	csel	x8, x10, x12, eq  // eq = none
    8a50:	cmp	w9, #0x2
    8a54:	stp	x8, x21, [x29, #-224]
    8a58:	sturb	w9, [x29, #-208]
    8a5c:	sturb	w13, [x29, #-207]
    8a60:	b.ne	8a8c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>  // b.any
    8a64:	ldrb	w9, [x8, #16]
    8a68:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8a6c:	ldrb	w8, [x8, #17]
    8a70:	cmp	w8, #0x1
    8a74:	b.ne	8a8c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x1c8>  // b.any
    8a78:	b	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8a7c:	ldr	q0, [sp, #240]
    8a80:	ldr	x8, [sp, #256]
    8a84:	stur	q0, [x29, #-224]
    8a88:	stur	x8, [x29, #-208]
    8a8c:	ldr	x0, [x20, #48]
    8a90:	add	x23, sp, #0xb8
    8a94:	ldr	x8, [x0]
    8a98:	ldr	x9, [x8, #48]
    8a9c:	add	x8, sp, #0xb8
    8aa0:	blr	x9
    8aa4:	ldurb	w8, [x29, #-208]
    8aa8:	mov	w9, #0x104                 	// #260
    8aac:	strh	w9, [sp, #232]
    8ab0:	stp	x23, xzr, [sp, #216]
    8ab4:	cmp	w8, #0x1
    8ab8:	b.eq	8adc <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x218>  // b.none
    8abc:	cbnz	w8, 8af4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x230>
    8ac0:	mov	w8, #0x100                 	// #256
    8ac4:	mov	w9, #0x103                 	// #259
    8ac8:	stp	xzr, xzr, [x29, #-192]
    8acc:	stp	x21, xzr, [sp, #160]
    8ad0:	sturh	w8, [x29, #-176]
    8ad4:	strh	w9, [sp, #176]
    8ad8:	b	8b6c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2a8>
    8adc:	ldr	x8, [sp, #232]
    8ae0:	ldr	q0, [x22, #80]
    8ae4:	stur	x8, [x29, #-176]
    8ae8:	and	w8, w8, #0xff
    8aec:	stur	q0, [x29, #-192]
    8af0:	b	8b54 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x290>
    8af4:	ldurb	w9, [x29, #-207]
    8af8:	ldur	x10, [x29, #-224]
    8afc:	mov	w11, #0x2                   	// #2
    8b00:	sub	x12, x29, #0xe0
    8b04:	cmp	w9, #0x1
    8b08:	csel	w11, w8, w11, eq  // eq = none
    8b0c:	add	x13, sp, #0xb8
    8b10:	mov	w14, #0x4                   	// #4
    8b14:	csel	x9, x10, x12, eq  // eq = none
    8b18:	cmp	w11, #0x2
    8b1c:	stp	x9, x13, [x29, #-192]
    8b20:	sturb	w11, [x29, #-176]
    8b24:	sturb	w14, [x29, #-175]
    8b28:	b.ne	8b54 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x290>  // b.any
    8b2c:	ldrb	w8, [x9, #16]
    8b30:	cbz	w8, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8b34:	ldrb	w8, [x9, #17]
    8b38:	cmp	w8, #0x1
    8b3c:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8b40:	mov	w8, #0x103                 	// #259
    8b44:	strh	w8, [sp, #176]
    8b48:	mov	w8, #0x2                   	// #2
    8b4c:	stp	x21, xzr, [sp, #160]
    8b50:	b	8b7c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2b8>
    8b54:	mov	w9, #0x103                 	// #259
    8b58:	cmp	w8, #0x1
    8b5c:	stp	x21, xzr, [sp, #160]
    8b60:	strh	w9, [sp, #176]
    8b64:	b.eq	8bc8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x304>  // b.none
    8b68:	cbnz	w8, 8b7c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x2b8>
    8b6c:	mov	w8, #0x100                 	// #256
    8b70:	stp	xzr, xzr, [x29, #-160]
    8b74:	sturh	w8, [x29, #-144]
    8b78:	b	8bd8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>
    8b7c:	ldurb	w9, [x29, #-175]
    8b80:	ldur	x10, [x29, #-192]
    8b84:	mov	w11, #0x2                   	// #2
    8b88:	sub	x12, x29, #0xc0
    8b8c:	cmp	w9, #0x1
    8b90:	csel	w9, w8, w11, eq  // eq = none
    8b94:	mov	w13, #0x3                   	// #3
    8b98:	csel	x8, x10, x12, eq  // eq = none
    8b9c:	cmp	w9, #0x2
    8ba0:	stp	x8, x21, [x29, #-160]
    8ba4:	sturb	w9, [x29, #-144]
    8ba8:	sturb	w13, [x29, #-143]
    8bac:	b.ne	8bd8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>  // b.any
    8bb0:	ldrb	w9, [x8, #16]
    8bb4:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8bb8:	ldrb	w8, [x8, #17]
    8bbc:	cmp	w8, #0x1
    8bc0:	b.ne	8bd8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x314>  // b.any
    8bc4:	b	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8bc8:	ldr	q0, [sp, #160]
    8bcc:	ldr	x8, [sp, #176]
    8bd0:	stur	q0, [x29, #-160]
    8bd4:	stur	x8, [x29, #-144]
    8bd8:	ldr	x0, [x20, #56]
    8bdc:	add	x24, sp, #0x68
    8be0:	ldr	x8, [x0]
    8be4:	ldr	x9, [x8, #48]
    8be8:	add	x8, sp, #0x68
    8bec:	blr	x9
    8bf0:	ldurb	w23, [x29, #-144]
    8bf4:	mov	w8, #0x104                 	// #260
    8bf8:	strh	w8, [sp, #152]
    8bfc:	stp	x24, xzr, [sp, #136]
    8c00:	cmp	w23, #0x1
    8c04:	b.eq	8c28 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x364>  // b.none
    8c08:	cbnz	w23, 8c40 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x37c>
    8c0c:	mov	w8, #0x100                 	// #256
    8c10:	mov	w9, #0x103                 	// #259
    8c14:	stp	xzr, xzr, [x29, #-128]
    8c18:	stp	x21, xzr, [sp, #80]
    8c1c:	sturh	w8, [x29, #-112]
    8c20:	strh	w9, [sp, #96]
    8c24:	b	8cb8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3f4>
    8c28:	ldr	x8, [sp, #152]
    8c2c:	ldr	q0, [x22]
    8c30:	and	w23, w8, #0xff
    8c34:	stur	q0, [x29, #-128]
    8c38:	stur	x8, [x29, #-112]
    8c3c:	b	8ca0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3dc>
    8c40:	ldurb	w8, [x29, #-143]
    8c44:	ldur	x9, [x29, #-160]
    8c48:	mov	w10, #0x2                   	// #2
    8c4c:	sub	x11, x29, #0xa0
    8c50:	cmp	w8, #0x1
    8c54:	csel	w10, w23, w10, eq  // eq = none
    8c58:	add	x12, sp, #0x68
    8c5c:	mov	w13, #0x4                   	// #4
    8c60:	csel	x8, x9, x11, eq  // eq = none
    8c64:	cmp	w10, #0x2
    8c68:	stp	x8, x12, [x29, #-128]
    8c6c:	sturb	w10, [x29, #-112]
    8c70:	sturb	w13, [x29, #-111]
    8c74:	b.ne	8ca0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x3dc>  // b.any
    8c78:	ldrb	w9, [x8, #16]
    8c7c:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8c80:	ldrb	w8, [x8, #17]
    8c84:	cmp	w8, #0x1
    8c88:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8c8c:	mov	w8, #0x103                 	// #259
    8c90:	mov	w23, #0x2                   	// #2
    8c94:	stp	x21, xzr, [sp, #80]
    8c98:	strh	w8, [sp, #96]
    8c9c:	b	8ccc <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x408>
    8ca0:	mov	w8, #0x103                 	// #259
    8ca4:	cmp	w23, #0x1
    8ca8:	stp	x21, xzr, [sp, #80]
    8cac:	strh	w8, [sp, #96]
    8cb0:	b.eq	8d1c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x458>  // b.none
    8cb4:	cbnz	w23, 8ccc <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x408>
    8cb8:	mov	w8, #0x100                 	// #256
    8cbc:	mov	w23, wzr
    8cc0:	stp	xzr, xzr, [x29, #-96]
    8cc4:	sturh	w8, [x29, #-80]
    8cc8:	b	8d30 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>
    8ccc:	ldurb	w8, [x29, #-111]
    8cd0:	ldur	x9, [x29, #-128]
    8cd4:	mov	w10, #0x2                   	// #2
    8cd8:	sub	x11, x29, #0x80
    8cdc:	cmp	w8, #0x1
    8ce0:	csel	w10, w23, w10, eq  // eq = none
    8ce4:	mov	w12, #0x3                   	// #3
    8ce8:	csel	x8, x9, x11, eq  // eq = none
    8cec:	cmp	w10, #0x2
    8cf0:	stp	x8, x21, [x29, #-96]
    8cf4:	sturb	w10, [x29, #-80]
    8cf8:	sturb	w12, [x29, #-79]
    8cfc:	b.ne	8d30 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>  // b.any
    8d00:	ldrb	w9, [x8, #16]
    8d04:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8d08:	ldrb	w8, [x8, #17]
    8d0c:	cmp	w8, #0x1
    8d10:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8d14:	mov	w23, #0x2                   	// #2
    8d18:	b	8d30 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x46c>
    8d1c:	ldr	x8, [sp, #96]
    8d20:	ldr	q0, [sp, #80]
    8d24:	and	w23, w8, #0xff
    8d28:	stur	q0, [x29, #-96]
    8d2c:	stur	x8, [x29, #-80]
    8d30:	ldr	x0, [x20, #64]
    8d34:	add	x20, sp, #0x18
    8d38:	ldr	x8, [x0]
    8d3c:	ldr	x9, [x8, #40]
    8d40:	add	x8, sp, #0x18
    8d44:	blr	x9
    8d48:	mov	w8, #0x104                 	// #260
    8d4c:	cmp	w23, #0x1
    8d50:	strh	w8, [sp, #72]
    8d54:	stp	x20, xzr, [sp, #56]
    8d58:	b.eq	8d84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x4c0>  // b.none
    8d5c:	cbnz	w23, 8d9c <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x4d8>
    8d60:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    8d64:	mov	w8, #0x100                 	// #256
    8d68:	add	x9, x9, #0x0
    8d6c:	mov	w10, #0x103                 	// #259
    8d70:	stp	xzr, xzr, [x29, #-64]
    8d74:	sturh	w8, [x29, #-48]
    8d78:	stp	x9, xzr, [sp]
    8d7c:	strh	w10, [sp, #16]
    8d80:	b	8e24 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x560>
    8d84:	ldr	x8, [sp, #72]
    8d88:	ldur	q0, [sp, #56]
    8d8c:	and	w23, w8, #0xff
    8d90:	stur	q0, [x29, #-64]
    8d94:	stur	x8, [x29, #-48]
    8d98:	b	8e04 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x540>
    8d9c:	ldurb	w8, [x29, #-79]
    8da0:	ldur	x9, [x29, #-96]
    8da4:	mov	w10, #0x2                   	// #2
    8da8:	sub	x11, x29, #0x60
    8dac:	cmp	w8, #0x1
    8db0:	csel	w10, w23, w10, eq  // eq = none
    8db4:	add	x12, sp, #0x18
    8db8:	mov	w13, #0x4                   	// #4
    8dbc:	csel	x8, x9, x11, eq  // eq = none
    8dc0:	cmp	w10, #0x2
    8dc4:	stp	x8, x12, [x29, #-64]
    8dc8:	sturb	w10, [x29, #-48]
    8dcc:	sturb	w13, [x29, #-47]
    8dd0:	b.ne	8e04 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x540>  // b.any
    8dd4:	ldrb	w9, [x8, #16]
    8dd8:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8ddc:	ldrb	w8, [x8, #17]
    8de0:	cmp	w8, #0x1
    8de4:	b.eq	8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>  // b.none
    8de8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8dec:	add	x8, x8, #0x0
    8df0:	mov	w9, #0x103                 	// #259
    8df4:	mov	w23, #0x2                   	// #2
    8df8:	stp	x8, xzr, [sp]
    8dfc:	strh	w9, [sp, #16]
    8e00:	b	8e34 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x570>
    8e04:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e08:	add	x8, x8, #0x0
    8e0c:	mov	w9, #0x103                 	// #259
    8e10:	cmp	w23, #0x1
    8e14:	stp	x8, xzr, [sp]
    8e18:	strh	w9, [sp, #16]
    8e1c:	b.eq	8ea4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5e0>  // b.none
    8e20:	cbnz	w23, 8e34 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x570>
    8e24:	mov	w8, #0x100                 	// #256
    8e28:	stp	xzr, xzr, [x29, #-32]
    8e2c:	sturh	w8, [x29, #-16]
    8e30:	b	8eb4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>
    8e34:	ldurb	w8, [x29, #-47]
    8e38:	ldur	x9, [x29, #-64]
    8e3c:	mov	w10, #0x2                   	// #2
    8e40:	sub	x11, x29, #0x40
    8e44:	cmp	w8, #0x1
    8e48:	adrp	x12, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e4c:	csel	w10, w23, w10, eq  // eq = none
    8e50:	add	x12, x12, #0x0
    8e54:	mov	w13, #0x3                   	// #3
    8e58:	csel	x8, x9, x11, eq  // eq = none
    8e5c:	cmp	w10, #0x2
    8e60:	stp	x8, x12, [x29, #-32]
    8e64:	sturb	w10, [x29, #-16]
    8e68:	sturb	w13, [x29, #-15]
    8e6c:	b.ne	8eb4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>  // b.any
    8e70:	ldrb	w9, [x8, #16]
    8e74:	cbz	w9, 8e84 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5c0>
    8e78:	ldrb	w8, [x8, #17]
    8e7c:	cmp	w8, #0x1
    8e80:	b.ne	8eb4 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x5f0>  // b.any
    8e84:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e88:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e8c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    8e90:	add	x0, x0, #0x0
    8e94:	add	x1, x1, #0x0
    8e98:	add	x3, x3, #0x0
    8e9c:	mov	w2, #0xb8                  	// #184
    8ea0:	bl	0 <__assert_fail>
    8ea4:	ldr	q0, [sp]
    8ea8:	ldr	x8, [sp, #16]
    8eac:	stur	q0, [x29, #-32]
    8eb0:	stur	x8, [x29, #-16]
    8eb4:	sub	x0, x29, #0x20
    8eb8:	mov	x8, x19
    8ebc:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    8ec0:	ldr	x0, [sp, #24]
    8ec4:	add	x8, sp, #0x18
    8ec8:	add	x8, x8, #0x10
    8ecc:	cmp	x0, x8
    8ed0:	b.eq	8ed8 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x614>  // b.none
    8ed4:	bl	0 <_ZdlPv>
    8ed8:	ldr	x0, [sp, #104]
    8edc:	add	x8, sp, #0x68
    8ee0:	add	x8, x8, #0x10
    8ee4:	cmp	x0, x8
    8ee8:	b.eq	8ef0 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x62c>  // b.none
    8eec:	bl	0 <_ZdlPv>
    8ef0:	ldr	x0, [sp, #184]
    8ef4:	add	x8, sp, #0xb8
    8ef8:	add	x8, x8, #0x10
    8efc:	cmp	x0, x8
    8f00:	b.eq	8f08 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x644>  // b.none
    8f04:	bl	0 <_ZdlPv>
    8f08:	ldr	x0, [sp, #264]
    8f0c:	add	x8, sp, #0x108
    8f10:	add	x8, x8, #0x10
    8f14:	cmp	x0, x8
    8f18:	b.eq	8f20 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x65c>  // b.none
    8f1c:	bl	0 <_ZdlPv>
    8f20:	ldr	x0, [sp, #320]
    8f24:	add	x8, sp, #0x140
    8f28:	add	x8, x8, #0x10
    8f2c:	cmp	x0, x8
    8f30:	b.eq	8f38 <_ZNK4llvm10FoldOpInit11getAsStringB5cxx11Ev+0x674>  // b.none
    8f34:	bl	0 <_ZdlPv>
    8f38:	add	sp, sp, #0x290
    8f3c:	ldp	x20, x19, [sp, #64]
    8f40:	ldp	x22, x21, [sp, #48]
    8f44:	ldp	x24, x23, [sp, #32]
    8f48:	ldr	x28, [sp, #16]
    8f4c:	ldp	x29, x30, [sp], #80
    8f50:	ret

0000000000008f54 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>:
    8f54:	sub	sp, sp, #0xd0
    8f58:	stp	x29, x30, [sp, #144]
    8f5c:	str	x23, [sp, #160]
    8f60:	stp	x22, x21, [sp, #176]
    8f64:	stp	x20, x19, [sp, #192]
    8f68:	add	x29, sp, #0x90
    8f6c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8f70:	add	x8, x8, #0x0
    8f74:	ldarb	w8, [x8]
    8f78:	mov	x19, x1
    8f7c:	mov	x20, x0
    8f80:	tbz	w8, #0, 9064 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x110>
    8f84:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    8f88:	ldr	d0, [x8]
    8f8c:	mov	x8, sp
    8f90:	add	x23, x8, #0x10
    8f94:	mov	x0, sp
    8f98:	mov	x1, x20
    8f9c:	str	x23, [sp]
    8fa0:	str	d0, [sp, #8]
    8fa4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8fa8:	mov	x0, sp
    8fac:	mov	x1, x19
    8fb0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    8fb4:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    8fb8:	add	x21, x21, #0x0
    8fbc:	mov	x1, sp
    8fc0:	add	x2, x29, #0x18
    8fc4:	mov	x0, x21
    8fc8:	str	xzr, [x29, #24]
    8fcc:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    8fd0:	cbz	x0, 9004 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0xb0>
    8fd4:	sub	x22, x0, #0x18
    8fd8:	ldr	x0, [sp]
    8fdc:	cmp	x0, x23
    8fe0:	b.eq	8fe8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x94>  // b.none
    8fe4:	bl	0 <free>
    8fe8:	mov	x0, x22
    8fec:	ldp	x20, x19, [sp, #192]
    8ff0:	ldp	x22, x21, [sp, #176]
    8ff4:	ldr	x23, [sp, #160]
    8ff8:	ldp	x29, x30, [sp, #144]
    8ffc:	add	sp, sp, #0xd0
    9000:	ret
    9004:	add	x0, x21, #0x1d8
    9008:	mov	w1, #0x30                  	// #48
    900c:	mov	w2, #0x4                   	// #4
    9010:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9014:	adrp	x9, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    9018:	adrp	x10, a58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x24c>
    901c:	ldr	x9, [x9]
    9020:	ldr	x10, [x10]
    9024:	ldr	x2, [x29, #24]
    9028:	mov	w8, #0x11                  	// #17
    902c:	mov	x1, x0
    9030:	strh	w8, [x0, #8]
    9034:	add	x8, x10, #0x10
    9038:	mov	x22, x0
    903c:	str	x9, [x0, #16]
    9040:	str	xzr, [x1, #24]!
    9044:	str	x8, [x0]
    9048:	stp	x20, x19, [x0, #32]
    904c:	mov	x0, x21
    9050:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    9054:	ldr	x0, [sp]
    9058:	cmp	x0, x23
    905c:	b.ne	8fe4 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x90>  // b.any
    9060:	b	8fe8 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x94>
    9064:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    9068:	add	x21, x21, #0x0
    906c:	mov	x0, x21
    9070:	bl	0 <__cxa_guard_acquire>
    9074:	cbz	w0, 8f84 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>
    9078:	add	x22, x21, #0xf8
    907c:	mov	w1, #0x6                   	// #6
    9080:	mov	x0, x22
    9084:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    9088:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    908c:	ldr	x8, [x8]
    9090:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    9094:	adrp	x2, 0 <__dso_handle>
    9098:	add	x2, x2, #0x0
    909c:	add	x8, x8, #0x10
    90a0:	str	x8, [x21, #248]
    90a4:	ldr	x0, [x0]
    90a8:	mov	x1, x22
    90ac:	bl	0 <__cxa_atexit>
    90b0:	mov	x0, x21
    90b4:	bl	0 <__cxa_guard_release>
    90b8:	b	8f84 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE+0x30>

00000000000090bc <_ZNK4llvm9IsAOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    90bc:	stp	x29, x30, [sp, #-32]!
    90c0:	stp	x20, x19, [sp, #16]
    90c4:	mov	x29, sp
    90c8:	ldp	x8, x19, [x0, #32]
    90cc:	mov	x20, x1
    90d0:	mov	x0, x1
    90d4:	mov	x1, x8
    90d8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    90dc:	mov	x0, x20
    90e0:	mov	x1, x19
    90e4:	ldp	x20, x19, [sp, #16]
    90e8:	ldp	x29, x30, [sp], #32
    90ec:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

00000000000090f0 <_ZNK4llvm9IsAOpInit4FoldEv>:
    90f0:	stp	x29, x30, [sp, #-32]!
    90f4:	stp	x20, x19, [sp, #16]
    90f8:	mov	x29, sp
    90fc:	ldr	x20, [x0, #40]
    9100:	cbz	x20, 919c <_ZNK4llvm9IsAOpInit4FoldEv+0xac>
    9104:	ldrb	w8, [x20, #8]
    9108:	mov	x19, x0
    910c:	sub	w8, w8, #0x1
    9110:	cmp	w8, #0x16
    9114:	b.ls	9128 <_ZNK4llvm9IsAOpInit4FoldEv+0x38>  // b.plast
    9118:	mov	x0, x19
    911c:	ldp	x20, x19, [sp, #16]
    9120:	ldp	x29, x30, [sp], #32
    9124:	ret
    9128:	ldr	x0, [x20, #16]
    912c:	ldr	x1, [x19, #32]
    9130:	ldr	x8, [x0]
    9134:	ldr	x8, [x8, #24]
    9138:	blr	x8
    913c:	tbz	w0, #0, 9150 <_ZNK4llvm9IsAOpInit4FoldEv+0x60>
    9140:	mov	w0, #0x1                   	// #1
    9144:	ldp	x20, x19, [sp, #16]
    9148:	ldp	x29, x30, [sp], #32
    914c:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    9150:	ldr	x0, [x19, #32]
    9154:	cbz	x0, 91bc <_ZNK4llvm9IsAOpInit4FoldEv+0xcc>
    9158:	ldr	w8, [x0, #8]
    915c:	cmp	w8, #0x7
    9160:	b.ne	918c <_ZNK4llvm9IsAOpInit4FoldEv+0x9c>  // b.any
    9164:	ldr	x8, [x0]
    9168:	ldr	x1, [x20, #16]
    916c:	ldr	x8, [x8, #24]
    9170:	blr	x8
    9174:	tbz	w0, #0, 918c <_ZNK4llvm9IsAOpInit4FoldEv+0x9c>
    9178:	ldr	x8, [x19, #40]
    917c:	cbz	x8, 91dc <_ZNK4llvm9IsAOpInit4FoldEv+0xec>
    9180:	ldrb	w8, [x8, #8]
    9184:	cmp	w8, #0x6
    9188:	b.ne	9118 <_ZNK4llvm9IsAOpInit4FoldEv+0x28>  // b.any
    918c:	mov	x0, xzr
    9190:	ldp	x20, x19, [sp, #16]
    9194:	ldp	x29, x30, [sp], #32
    9198:	b	1ac8 <_ZN4llvm7IntInit3getEl>
    919c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    91a0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    91a4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    91a8:	add	x0, x0, #0x0
    91ac:	add	x1, x1, #0x0
    91b0:	add	x3, x3, #0x0
    91b4:	mov	w2, #0x69                  	// #105
    91b8:	bl	0 <__assert_fail>
    91bc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    91c0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    91c4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    91c8:	add	x0, x0, #0x0
    91cc:	add	x1, x1, #0x0
    91d0:	add	x3, x3, #0x0
    91d4:	mov	w2, #0x69                  	// #105
    91d8:	bl	0 <__assert_fail>
    91dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    91e0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    91e4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    91e8:	add	x0, x0, #0x0
    91ec:	add	x1, x1, #0x0
    91f0:	add	x3, x3, #0x0
    91f4:	mov	w2, #0x69                  	// #105
    91f8:	bl	0 <__assert_fail>

00000000000091fc <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE>:
    91fc:	stp	x29, x30, [sp, #-32]!
    9200:	str	x19, [sp, #16]
    9204:	mov	x29, sp
    9208:	mov	x19, x0
    920c:	ldr	x0, [x0, #40]
    9210:	ldr	x8, [x0]
    9214:	ldr	x8, [x8, #96]
    9218:	blr	x8
    921c:	ldr	x8, [x19, #40]
    9220:	cmp	x8, x0
    9224:	b.eq	9240 <_ZNK4llvm9IsAOpInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    9228:	mov	x1, x0
    922c:	ldr	x0, [x19, #32]
    9230:	bl	8f54 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    9234:	ldr	x19, [sp, #16]
    9238:	ldp	x29, x30, [sp], #32
    923c:	b	90f0 <_ZNK4llvm9IsAOpInit4FoldEv>
    9240:	mov	x0, x19
    9244:	ldr	x19, [sp, #16]
    9248:	ldp	x29, x30, [sp], #32
    924c:	ret

0000000000009250 <_ZNK4llvm9IsAOpInit6getBitEj>:
    9250:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

0000000000009254 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev>:
    9254:	sub	sp, sp, #0xd0
    9258:	stp	x29, x30, [sp, #160]
    925c:	str	x21, [sp, #176]
    9260:	stp	x20, x19, [sp, #192]
    9264:	add	x29, sp, #0xa0
    9268:	mov	x20, x0
    926c:	ldr	x0, [x0, #32]
    9270:	mov	x19, x8
    9274:	add	x8, sp, #0x20
    9278:	add	x21, sp, #0x20
    927c:	ldr	x9, [x0]
    9280:	ldr	x9, [x9, #16]
    9284:	blr	x9
    9288:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    928c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    9290:	add	x8, x8, #0x0
    9294:	mov	w9, #0x403                 	// #1027
    9298:	add	x10, sp, #0x40
    929c:	add	x11, x11, #0x0
    92a0:	mov	w12, #0x302                 	// #770
    92a4:	stp	x8, x21, [sp, #64]
    92a8:	strh	w9, [sp, #80]
    92ac:	stp	x10, x11, [x29, #-72]
    92b0:	sturh	w12, [x29, #-56]
    92b4:	cbnz	wzr, 939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    92b8:	ldrb	w8, [sp, #81]
    92bc:	cmp	w8, #0x1
    92c0:	b.eq	939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    92c4:	ldr	x0, [x20, #40]
    92c8:	mov	x20, sp
    92cc:	ldr	x8, [x0]
    92d0:	ldr	x9, [x8, #40]
    92d4:	mov	x8, sp
    92d8:	blr	x9
    92dc:	ldurb	w8, [x29, #-55]
    92e0:	ldur	x9, [x29, #-72]
    92e4:	sub	x10, x29, #0x48
    92e8:	mov	w11, #0x402                 	// #1026
    92ec:	cmp	w8, #0x1
    92f0:	csel	x8, x9, x10, eq  // eq = none
    92f4:	stp	x8, x20, [x29, #-48]
    92f8:	sturh	w11, [x29, #-32]
    92fc:	ldrb	w9, [x8, #16]
    9300:	cbz	w9, 939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    9304:	ldrb	w8, [x8, #17]
    9308:	cmp	w8, #0x1
    930c:	b.eq	939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    9310:	ldurb	w8, [x29, #-31]
    9314:	ldur	x9, [x29, #-48]
    9318:	sub	x10, x29, #0x30
    931c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    9320:	cmp	w8, #0x1
    9324:	add	x11, x11, #0x0
    9328:	mov	w12, #0x302                 	// #770
    932c:	csel	x8, x9, x10, eq  // eq = none
    9330:	stp	x8, x11, [x29, #-24]
    9334:	sturh	w12, [x29, #-8]
    9338:	ldrb	w9, [x8, #16]
    933c:	cbz	w9, 939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>
    9340:	ldrb	w8, [x8, #17]
    9344:	cmp	w8, #0x1
    9348:	b.eq	939c <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x148>  // b.none
    934c:	sub	x0, x29, #0x18
    9350:	mov	x8, x19
    9354:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    9358:	ldr	x0, [sp]
    935c:	mov	x8, sp
    9360:	add	x8, x8, #0x10
    9364:	cmp	x0, x8
    9368:	b.eq	9370 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x11c>  // b.none
    936c:	bl	0 <_ZdlPv>
    9370:	ldr	x0, [sp, #32]
    9374:	add	x8, sp, #0x20
    9378:	add	x8, x8, #0x10
    937c:	cmp	x0, x8
    9380:	b.eq	9388 <_ZNK4llvm9IsAOpInit11getAsStringB5cxx11Ev+0x134>  // b.none
    9384:	bl	0 <_ZdlPv>
    9388:	ldp	x20, x19, [sp, #192]
    938c:	ldr	x21, [sp, #176]
    9390:	ldp	x29, x30, [sp, #160]
    9394:	add	sp, sp, #0xd0
    9398:	ret
    939c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    93a0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    93a4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    93a8:	add	x0, x0, #0x0
    93ac:	add	x1, x1, #0x0
    93b0:	add	x3, x3, #0x0
    93b4:	mov	w2, #0xb8                  	// #184
    93b8:	bl	0 <__assert_fail>

00000000000093bc <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE>:
    93bc:	stp	x29, x30, [sp, #-16]!
    93c0:	mov	x29, sp
    93c4:	ldr	x8, [x0, #16]
    93c8:	cbz	x8, 9450 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x94>
    93cc:	ldr	w9, [x8, #8]
    93d0:	cmp	w9, #0x7
    93d4:	b.ne	9434 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.any
    93d8:	ldr	w9, [x8, #32]
    93dc:	cbz	w9, 9434 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>
    93e0:	add	x8, x8, #0x28
    93e4:	add	x9, x8, x9, lsl #3
    93e8:	b	93fc <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x40>
    93ec:	cbnz	x10, 9440 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x84>
    93f0:	add	x8, x8, #0x8
    93f4:	cmp	x8, x9
    93f8:	b.eq	9434 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x78>  // b.none
    93fc:	ldr	x10, [x8]
    9400:	ldr	w11, [x10, #80]
    9404:	cbz	w11, 93f0 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x34>
    9408:	ldr	x10, [x10, #72]
    940c:	add	x11, x11, x11, lsl #1
    9410:	lsl	x11, x11, #3
    9414:	mov	x12, x10
    9418:	ldr	x13, [x12], #24
    941c:	cmp	x13, x1
    9420:	b.eq	93ec <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x30>  // b.none
    9424:	subs	x11, x11, #0x18
    9428:	mov	x10, x12
    942c:	b.ne	9418 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x5c>  // b.any
    9430:	b	93f0 <_ZNK4llvm9TypedInit12getFieldTypeEPNS_10StringInitE+0x34>
    9434:	mov	x0, xzr
    9438:	ldp	x29, x30, [sp], #16
    943c:	ret
    9440:	ldr	x8, [x10, #8]
    9444:	and	x0, x8, #0xfffffffffffffff8
    9448:	ldp	x29, x30, [sp], #16
    944c:	ret
    9450:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9454:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9458:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    945c:	add	x0, x0, #0x0
    9460:	add	x1, x1, #0x0
    9464:	add	x3, x3, #0x0
    9468:	mov	w2, #0x69                  	// #105
    946c:	bl	0 <__assert_fail>

0000000000009470 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE>:
    9470:	sub	sp, sp, #0x30
    9474:	stp	x29, x30, [sp, #16]
    9478:	stp	x20, x19, [sp, #32]
    947c:	add	x29, sp, #0x10
    9480:	mov	x19, x0
    9484:	ldr	x0, [x0, #16]
    9488:	cmp	x0, x1
    948c:	b.eq	94ec <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>  // b.none
    9490:	ldr	x8, [x0]
    9494:	mov	x20, x1
    9498:	ldr	x8, [x8, #32]
    949c:	blr	x8
    94a0:	tbnz	w0, #0, 94ec <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>
    94a4:	ldr	x8, [x19, #16]
    94a8:	cbz	x8, 9500 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x90>
    94ac:	ldr	w8, [x8, #8]
    94b0:	cbnz	w8, 94e8 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>
    94b4:	cbz	x20, 9520 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0xb0>
    94b8:	ldr	w8, [x20, #8]
    94bc:	cmp	w8, #0x1
    94c0:	b.ne	94e8 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.any
    94c4:	ldr	w8, [x20, #24]
    94c8:	cmp	w8, #0x1
    94cc:	b.ne	94e8 <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x78>  // b.any
    94d0:	add	x0, sp, #0x8
    94d4:	mov	w1, #0x1                   	// #1
    94d8:	str	x19, [sp, #8]
    94dc:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    94e0:	mov	x19, x0
    94e4:	b	94ec <_ZNK4llvm9TypedInit20convertInitializerToEPNS_5RecTyE+0x7c>
    94e8:	mov	x19, xzr
    94ec:	mov	x0, x19
    94f0:	ldp	x20, x19, [sp, #32]
    94f4:	ldp	x29, x30, [sp, #16]
    94f8:	add	sp, sp, #0x30
    94fc:	ret
    9500:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9504:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9508:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    950c:	add	x0, x0, #0x0
    9510:	add	x1, x1, #0x0
    9514:	add	x3, x3, #0x0
    9518:	mov	w2, #0x69                  	// #105
    951c:	bl	0 <__assert_fail>
    9520:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9524:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9528:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    952c:	add	x0, x0, #0x0
    9530:	add	x1, x1, #0x0
    9534:	add	x3, x3, #0x0
    9538:	mov	w2, #0x69                  	// #105
    953c:	bl	0 <__assert_fail>

0000000000009540 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE>:
    9540:	sub	sp, sp, #0xd0
    9544:	stp	x29, x30, [sp, #144]
    9548:	stp	x24, x23, [sp, #160]
    954c:	stp	x22, x21, [sp, #176]
    9550:	stp	x20, x19, [sp, #192]
    9554:	add	x29, sp, #0x90
    9558:	ldr	x8, [x0, #16]
    955c:	cbz	x8, 96a0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x160>
    9560:	ldr	w9, [x8, #8]
    9564:	cmp	w9, #0x1
    9568:	b.ne	95b4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x74>  // b.any
    956c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9570:	ldr	w23, [x8, #24]
    9574:	ldr	d0, [x9]
    9578:	mov	x8, sp
    957c:	mov	x22, x2
    9580:	mov	x19, x0
    9584:	mov	x20, x1
    9588:	add	x21, x8, #0x10
    958c:	cmp	x2, #0x11
    9590:	str	x21, [sp]
    9594:	str	d0, [sp, #8]
    9598:	b.cc	95bc <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x7c>  // b.lo, b.ul, b.last
    959c:	mov	x0, sp
    95a0:	mov	w3, #0x8                   	// #8
    95a4:	mov	x1, x21
    95a8:	mov	x2, x22
    95ac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    95b0:	b	95c0 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x80>
    95b4:	mov	x19, xzr
    95b8:	b	9664 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x124>
    95bc:	cbz	x22, 9638 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf8>
    95c0:	lsl	x24, x22, #2
    95c4:	ldr	w1, [x20]
    95c8:	cmp	w1, w23
    95cc:	b.cs	9630 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xf0>  // b.hs, b.nlast
    95d0:	mov	x0, x19
    95d4:	bl	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    95d8:	ldp	w8, w9, [sp, #8]
    95dc:	mov	x22, x0
    95e0:	cmp	w8, w9
    95e4:	b.cs	9614 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xd4>  // b.hs, b.nlast
    95e8:	ldr	x9, [sp]
    95ec:	str	x22, [x9, w8, uxtw #3]
    95f0:	ldp	w8, w9, [sp, #8]
    95f4:	cmp	w8, w9
    95f8:	b.cs	9680 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x140>  // b.hs, b.nlast
    95fc:	add	w8, w8, #0x1
    9600:	subs	x24, x24, #0x4
    9604:	add	x20, x20, #0x4
    9608:	str	w8, [sp, #8]
    960c:	b.ne	95c4 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x84>  // b.any
    9610:	b	963c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xfc>
    9614:	mov	x0, sp
    9618:	mov	w3, #0x8                   	// #8
    961c:	mov	x1, x21
    9620:	mov	x2, xzr
    9624:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9628:	ldr	w8, [sp, #8]
    962c:	b	95e8 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0xa8>
    9630:	mov	x19, xzr
    9634:	b	964c <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x10c>
    9638:	ldr	w8, [sp, #8]
    963c:	ldr	x0, [sp]
    9640:	mov	w1, w8
    9644:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    9648:	mov	x19, x0
    964c:	ldr	x0, [sp]
    9650:	mov	x8, sp
    9654:	add	x8, x8, #0x10
    9658:	cmp	x0, x8
    965c:	b.eq	9664 <_ZNK4llvm9TypedInit26convertInitializerBitRangeENS_8ArrayRefIjEE+0x124>  // b.none
    9660:	bl	0 <free>
    9664:	mov	x0, x19
    9668:	ldp	x20, x19, [sp, #192]
    966c:	ldp	x22, x21, [sp, #176]
    9670:	ldp	x24, x23, [sp, #160]
    9674:	ldp	x29, x30, [sp, #144]
    9678:	add	sp, sp, #0xd0
    967c:	ret
    9680:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9684:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9688:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    968c:	add	x0, x0, #0x0
    9690:	add	x1, x1, #0x0
    9694:	add	x3, x3, #0x0
    9698:	mov	w2, #0x43                  	// #67
    969c:	bl	0 <__assert_fail>
    96a0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    96a4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    96a8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    96ac:	add	x0, x0, #0x0
    96b0:	add	x1, x1, #0x0
    96b4:	add	x3, x3, #0x0
    96b8:	mov	w2, #0x69                  	// #105
    96bc:	bl	0 <__assert_fail>

00000000000096c0 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE>:
    96c0:	stp	x29, x30, [sp, #-48]!
    96c4:	str	x21, [sp, #16]
    96c8:	stp	x20, x19, [sp, #32]
    96cc:	mov	x29, sp
    96d0:	mov	x20, x0
    96d4:	ldr	x0, [x0, #16]
    96d8:	cmp	x0, x1
    96dc:	b.eq	96f4 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x34>  // b.none
    96e0:	ldr	x8, [x0]
    96e4:	mov	x19, x1
    96e8:	ldr	x8, [x8, #32]
    96ec:	blr	x8
    96f0:	tbz	w0, #0, 970c <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x4c>
    96f4:	mov	x21, x20
    96f8:	mov	x0, x21
    96fc:	ldp	x20, x19, [sp, #32]
    9700:	ldr	x21, [sp, #16]
    9704:	ldp	x29, x30, [sp], #48
    9708:	ret
    970c:	ldr	x8, [x20]
    9710:	mov	x0, x20
    9714:	mov	x1, x19
    9718:	ldr	x8, [x8, #64]
    971c:	blr	x8
    9720:	cbz	x0, 9770 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xb0>
    9724:	ldrb	w8, [x0, #8]
    9728:	mov	x21, x0
    972c:	sub	w8, w8, #0x1
    9730:	cmp	w8, #0x16
    9734:	b.hi	96f8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>  // b.pmore
    9738:	ldr	x0, [x21, #16]
    973c:	mov	x1, x19
    9740:	ldr	x8, [x0]
    9744:	ldr	x8, [x8, #32]
    9748:	blr	x8
    974c:	tbnz	w0, #0, 96f8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>
    9750:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9754:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9758:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    975c:	add	x0, x0, #0x0
    9760:	add	x1, x1, #0x0
    9764:	add	x3, x3, #0x0
    9768:	mov	w2, #0x5c3                 	// #1475
    976c:	bl	0 <__assert_fail>
    9770:	ldr	x0, [x20, #16]
    9774:	mov	x1, x19
    9778:	ldr	x8, [x0]
    977c:	ldr	x8, [x8, #24]
    9780:	blr	x8
    9784:	tbz	w0, #0, 97b0 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0xf0>
    9788:	mov	w0, wzr
    978c:	mov	x1, x20
    9790:	mov	x2, x19
    9794:	bl	3bf0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    9798:	ldp	x20, x19, [sp, #32]
    979c:	ldr	x21, [sp, #16]
    97a0:	mov	x1, xzr
    97a4:	mov	w2, wzr
    97a8:	ldp	x29, x30, [sp], #48
    97ac:	b	3db4 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    97b0:	mov	x21, xzr
    97b4:	b	96f8 <_ZNK4llvm9TypedInit9getCastToEPNS_5RecTyE+0x38>

00000000000097b8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE>:
    97b8:	sub	sp, sp, #0x90
    97bc:	stp	x29, x30, [sp, #80]
    97c0:	stp	x24, x23, [sp, #96]
    97c4:	stp	x22, x21, [sp, #112]
    97c8:	stp	x20, x19, [sp, #128]
    97cc:	add	x29, sp, #0x50
    97d0:	ldr	x23, [x0, #16]
    97d4:	cbz	x23, 9934 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x17c>
    97d8:	ldr	w8, [x23, #8]
    97dc:	cmp	w8, #0x5
    97e0:	b.ne	9818 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x60>  // b.any
    97e4:	mov	x22, x2
    97e8:	mov	x19, x0
    97ec:	mov	x20, x1
    97f0:	cmp	x2, #0x1
    97f4:	b.ne	9820 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x68>  // b.any
    97f8:	ldr	w1, [x20]
    97fc:	mov	x0, x19
    9800:	ldp	x20, x19, [sp, #128]
    9804:	ldp	x22, x21, [sp, #112]
    9808:	ldp	x24, x23, [sp, #96]
    980c:	ldp	x29, x30, [sp, #80]
    9810:	add	sp, sp, #0x90
    9814:	b	9954 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    9818:	mov	x19, xzr
    981c:	b	98f8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x140>
    9820:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9824:	ldr	d0, [x9]
    9828:	mov	x8, sp
    982c:	add	x21, x8, #0x10
    9830:	cmp	x22, #0x9
    9834:	str	x21, [sp]
    9838:	str	d0, [sp, #8]
    983c:	b.cc	9858 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa0>  // b.lo, b.ul, b.last
    9840:	mov	x0, sp
    9844:	mov	w3, #0x8                   	// #8
    9848:	mov	x1, x21
    984c:	mov	x2, x22
    9850:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9854:	b	985c <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa4>
    9858:	cbz	x22, 98c4 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x10c>
    985c:	lsl	x24, x22, #2
    9860:	ldr	w1, [x20]
    9864:	mov	x0, x19
    9868:	bl	9954 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    986c:	ldp	w8, w9, [sp, #8]
    9870:	mov	x22, x0
    9874:	cmp	w8, w9
    9878:	b.cs	98a8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xf0>  // b.hs, b.nlast
    987c:	ldr	x9, [sp]
    9880:	str	x22, [x9, w8, uxtw #3]
    9884:	ldp	w8, w9, [sp, #8]
    9888:	cmp	w8, w9
    988c:	b.cs	9914 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x15c>  // b.hs, b.nlast
    9890:	add	w8, w8, #0x1
    9894:	subs	x24, x24, #0x4
    9898:	add	x20, x20, #0x4
    989c:	str	w8, [sp, #8]
    98a0:	b.ne	9860 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xa8>  // b.any
    98a4:	b	98c8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x110>
    98a8:	mov	x0, sp
    98ac:	mov	w3, #0x8                   	// #8
    98b0:	mov	x1, x21
    98b4:	mov	x2, xzr
    98b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    98bc:	ldr	w8, [sp, #8]
    98c0:	b	987c <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0xc4>
    98c4:	ldr	w8, [sp, #8]
    98c8:	ldr	x0, [sp]
    98cc:	ldr	x2, [x23, #24]
    98d0:	mov	w1, w8
    98d4:	bl	2fa4 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    98d8:	ldr	x8, [sp]
    98dc:	mov	x9, sp
    98e0:	add	x9, x9, #0x10
    98e4:	mov	x19, x0
    98e8:	cmp	x8, x9
    98ec:	b.eq	98f8 <_ZNK4llvm9TypedInit20convertInitListSliceENS_8ArrayRefIjEE+0x140>  // b.none
    98f0:	mov	x0, x8
    98f4:	bl	0 <free>
    98f8:	mov	x0, x19
    98fc:	ldp	x20, x19, [sp, #128]
    9900:	ldp	x22, x21, [sp, #112]
    9904:	ldp	x24, x23, [sp, #96]
    9908:	ldp	x29, x30, [sp, #80]
    990c:	add	sp, sp, #0x90
    9910:	ret
    9914:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9918:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    991c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9920:	add	x0, x0, #0x0
    9924:	add	x1, x1, #0x0
    9928:	add	x3, x3, #0x0
    992c:	mov	w2, #0x43                  	// #67
    9930:	bl	0 <__assert_fail>
    9934:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9938:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    993c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9940:	add	x0, x0, #0x0
    9944:	add	x1, x1, #0x0
    9948:	add	x3, x3, #0x0
    994c:	mov	w2, #0x69                  	// #105
    9950:	bl	0 <__assert_fail>

0000000000009954 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>:
    9954:	sub	sp, sp, #0x40
    9958:	stp	x29, x30, [sp, #16]
    995c:	str	x21, [sp, #32]
    9960:	stp	x20, x19, [sp, #48]
    9964:	add	x29, sp, #0x10
    9968:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    996c:	add	x8, x8, #0x0
    9970:	ldarb	w8, [x8]
    9974:	mov	w19, w1
    9978:	mov	x20, x0
    997c:	tbz	w8, #0, 9a44 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xf0>
    9980:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9984:	mov	w8, w19
    9988:	add	x0, x0, #0x0
    998c:	mov	x1, sp
    9990:	add	x2, x29, #0x18
    9994:	stp	x20, x8, [sp]
    9998:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    999c:	ldr	x21, [x29, #24]
    99a0:	tbz	w0, #0, 99b0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x5c>
    99a4:	ldr	x0, [x21, #16]
    99a8:	cbnz	x0, 9a30 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0xdc>
    99ac:	b	99e0 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x8c>
    99b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    99b4:	add	x0, x0, #0x0
    99b8:	mov	x1, sp
    99bc:	mov	x2, sp
    99c0:	mov	x3, x21
    99c4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    99c8:	ldr	x8, [sp]
    99cc:	mov	x21, x0
    99d0:	str	x8, [x0]
    99d4:	ldr	w8, [sp, #8]
    99d8:	str	xzr, [x0, #16]
    99dc:	str	w8, [x0, #8]
    99e0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    99e4:	add	x0, x0, #0x0
    99e8:	mov	w1, #0x28                  	// #40
    99ec:	mov	w2, #0x4                   	// #4
    99f0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    99f4:	ldr	x8, [x20, #16]
    99f8:	cbz	x8, 9a8c <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x138>
    99fc:	ldr	w9, [x8, #8]
    9a00:	cmp	w9, #0x5
    9a04:	b.ne	9aac <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x158>  // b.any
    9a08:	adrp	x10, bd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x3cc>
    9a0c:	ldr	x8, [x8, #24]
    9a10:	ldr	x10, [x10]
    9a14:	mov	w9, #0x14                  	// #20
    9a18:	strh	w9, [x0, #8]
    9a1c:	str	w19, [x0, #32]
    9a20:	add	x9, x10, #0x10
    9a24:	str	x9, [x0]
    9a28:	stp	x8, x20, [x0, #16]
    9a2c:	str	x0, [x21, #16]
    9a30:	ldp	x20, x19, [sp, #48]
    9a34:	ldr	x21, [sp, #32]
    9a38:	ldp	x29, x30, [sp, #16]
    9a3c:	add	sp, sp, #0x40
    9a40:	ret
    9a44:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a48:	add	x21, x21, #0x0
    9a4c:	mov	x0, x21
    9a50:	bl	0 <__cxa_guard_acquire>
    9a54:	cbz	w0, 9980 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2c>
    9a58:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a5c:	adrp	x2, 0 <__dso_handle>
    9a60:	movi	v0.2d, #0x0
    9a64:	add	x1, x21, #0x220
    9a68:	add	x0, x0, #0x0
    9a6c:	add	x2, x2, #0x0
    9a70:	str	wzr, [x21, #568]
    9a74:	str	xzr, [x21, #560]
    9a78:	str	q0, [x21, #544]
    9a7c:	bl	0 <__cxa_atexit>
    9a80:	mov	x0, x21
    9a84:	bl	0 <__cxa_guard_release>
    9a88:	b	9980 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj+0x2c>
    9a8c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a94:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9a98:	add	x0, x0, #0x0
    9a9c:	add	x1, x1, #0x0
    9aa0:	add	x3, x3, #0x0
    9aa4:	mov	w2, #0x69                  	// #105
    9aa8:	bl	0 <__assert_fail>
    9aac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ab0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ab4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ab8:	add	x0, x0, #0x0
    9abc:	add	x1, x1, #0x0
    9ac0:	add	x3, x3, #0x0
    9ac4:	mov	w2, #0x108                 	// #264
    9ac8:	bl	0 <__assert_fail>

0000000000009acc <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>:
    9acc:	sub	sp, sp, #0x40
    9ad0:	stp	x29, x30, [sp, #16]
    9ad4:	str	x21, [sp, #32]
    9ad8:	stp	x20, x19, [sp, #48]
    9adc:	add	x29, sp, #0x10
    9ae0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ae4:	add	x8, x8, #0x0
    9ae8:	ldarb	w8, [x8]
    9aec:	mov	x19, x1
    9af0:	mov	x20, x0
    9af4:	tbz	w8, #0, 9b94 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xc8>
    9af8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9afc:	add	x0, x0, #0x0
    9b00:	mov	x1, sp
    9b04:	add	x2, x29, #0x18
    9b08:	stp	x19, x20, [sp]
    9b0c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9b10:	ldr	x21, [x29, #24]
    9b14:	tbz	w0, #0, 9b24 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x58>
    9b18:	ldr	x0, [x21, #16]
    9b1c:	cbnz	x0, 9b80 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0xb4>
    9b20:	b	9b4c <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x80>
    9b24:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9b28:	add	x0, x0, #0x0
    9b2c:	mov	x1, sp
    9b30:	mov	x2, sp
    9b34:	mov	x3, x21
    9b38:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9b3c:	ldr	q0, [sp]
    9b40:	mov	x21, x0
    9b44:	str	xzr, [x0, #16]
    9b48:	str	q0, [x0]
    9b4c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9b50:	add	x0, x0, #0x0
    9b54:	mov	w1, #0x20                  	// #32
    9b58:	mov	w2, #0x4                   	// #4
    9b5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    9b60:	adrp	x9, ad8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x2cc>
    9b64:	ldr	x9, [x9]
    9b68:	mov	w8, #0x13                  	// #19
    9b6c:	strh	w8, [x0, #8]
    9b70:	stp	x19, x20, [x0, #16]
    9b74:	add	x8, x9, #0x10
    9b78:	str	x8, [x0]
    9b7c:	str	x0, [x21, #16]
    9b80:	ldp	x20, x19, [sp, #48]
    9b84:	ldr	x21, [sp, #32]
    9b88:	ldp	x29, x30, [sp, #16]
    9b8c:	add	sp, sp, #0x40
    9b90:	ret
    9b94:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    9b98:	add	x21, x21, #0x0
    9b9c:	mov	x0, x21
    9ba0:	bl	0 <__cxa_guard_acquire>
    9ba4:	cbz	w0, 9af8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c>
    9ba8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9bac:	adrp	x2, 0 <__dso_handle>
    9bb0:	add	x1, x21, #0x1f0
    9bb4:	add	x0, x0, #0x0
    9bb8:	add	x2, x2, #0x0
    9bbc:	stp	xzr, xzr, [x21, #496]
    9bc0:	str	wzr, [x21, #520]
    9bc4:	str	xzr, [x21, #512]
    9bc8:	bl	0 <__cxa_atexit>
    9bcc:	mov	x0, x21
    9bd0:	bl	0 <__cxa_guard_release>
    9bd4:	b	9af8 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE+0x2c>

0000000000009bd8 <_ZNK4llvm7VarInit6getBitEj>:
    9bd8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    9bdc:	ldr	x8, [x0, #16]
    9be0:	ldr	x9, [x9]
    9be4:	cmp	x8, x9
    9be8:	b.eq	9bf0 <_ZNK4llvm7VarInit6getBitEj+0x18>  // b.none
    9bec:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    9bf0:	ret

0000000000009bf4 <_ZNK4llvm7VarInit17resolveReferencesERNS_8ResolverE>:
    9bf4:	stp	x29, x30, [sp, #-32]!
    9bf8:	str	x19, [sp, #16]
    9bfc:	mov	x29, sp
    9c00:	ldr	x9, [x1]
    9c04:	mov	x8, x1
    9c08:	ldr	x1, [x0, #24]
    9c0c:	mov	x19, x0
    9c10:	ldr	x9, [x9, #16]
    9c14:	mov	x0, x8
    9c18:	blr	x9
    9c1c:	cmp	x0, #0x0
    9c20:	csel	x0, x19, x0, eq  // eq = none
    9c24:	ldr	x19, [sp, #16]
    9c28:	ldp	x29, x30, [sp], #32
    9c2c:	ret

0000000000009c30 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev>:
    9c30:	sub	sp, sp, #0xc0
    9c34:	stp	x29, x30, [sp, #128]
    9c38:	str	x23, [sp, #144]
    9c3c:	stp	x22, x21, [sp, #160]
    9c40:	stp	x20, x19, [sp, #176]
    9c44:	add	x29, sp, #0x80
    9c48:	mov	x20, x0
    9c4c:	ldr	x0, [x0, #24]
    9c50:	mov	x19, x8
    9c54:	add	x8, sp, #0x20
    9c58:	ldr	x9, [x0]
    9c5c:	ldr	x9, [x9, #40]
    9c60:	blr	x9
    9c64:	ldr	x8, [sp, #40]
    9c68:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9c6c:	cmp	x8, x9
    9c70:	b.eq	9eec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9c74:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9c78:	add	x1, x1, #0x0
    9c7c:	add	x0, sp, #0x20
    9c80:	mov	w2, #0x1                   	// #1
    9c84:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9c88:	add	x8, sp, #0x40
    9c8c:	add	x22, x8, #0x10
    9c90:	str	x22, [sp, #64]
    9c94:	mov	x8, x0
    9c98:	ldr	x9, [x8], #16
    9c9c:	cmp	x9, x8
    9ca0:	b.eq	9cb4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x84>  // b.none
    9ca4:	str	x9, [sp, #64]
    9ca8:	ldr	x9, [x0, #16]
    9cac:	str	x9, [sp, #80]
    9cb0:	b	9cbc <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x8c>
    9cb4:	ldr	q0, [x9]
    9cb8:	str	q0, [x22]
    9cbc:	ldr	x9, [x0, #8]
    9cc0:	sub	x10, x29, #0x20
    9cc4:	str	x9, [sp, #72]
    9cc8:	stp	x8, xzr, [x0]
    9ccc:	strb	wzr, [x0, #16]
    9cd0:	ldr	w9, [x20, #32]
    9cd4:	add	x8, x10, #0x15
    9cd8:	cbz	w9, 9d10 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xe0>
    9cdc:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    9ce0:	movk	x10, #0xcccd
    9ce4:	mov	w11, #0xa                   	// #10
    9ce8:	mov	x20, x8
    9cec:	umulh	x12, x9, x10
    9cf0:	lsr	x12, x12, #3
    9cf4:	msub	w13, w12, w11, w9
    9cf8:	orr	w13, w13, #0x30
    9cfc:	cmp	x9, #0x9
    9d00:	strb	w13, [x20, #-1]!
    9d04:	mov	x9, x12
    9d08:	b.hi	9cec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xbc>  // b.pmore
    9d0c:	b	9d1c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0xec>
    9d10:	mov	w9, #0x30                  	// #48
    9d14:	add	x20, x10, #0x14
    9d18:	sturb	w9, [x29, #-12]
    9d1c:	mov	x9, sp
    9d20:	sub	x21, x8, x20
    9d24:	add	x23, x9, #0x10
    9d28:	cmp	x21, #0x10
    9d2c:	mov	x0, x23
    9d30:	str	x23, [sp]
    9d34:	str	x21, [x29, #24]
    9d38:	b.cc	9d58 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x128>  // b.lo, b.ul, b.last
    9d3c:	mov	x0, sp
    9d40:	add	x1, x29, #0x18
    9d44:	mov	x2, xzr
    9d48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    9d4c:	ldr	x8, [x29, #24]
    9d50:	str	x0, [sp]
    9d54:	str	x8, [sp, #16]
    9d58:	cbz	x21, 9d7c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    9d5c:	cmp	x21, #0x1
    9d60:	b.ne	9d70 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x140>  // b.any
    9d64:	ldrb	w8, [x20]
    9d68:	strb	w8, [x0]
    9d6c:	b	9d7c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x14c>
    9d70:	mov	x1, x20
    9d74:	mov	x2, x21
    9d78:	bl	0 <memcpy>
    9d7c:	ldr	x8, [x29, #24]
    9d80:	ldr	x9, [sp]
    9d84:	mov	w10, #0xf                   	// #15
    9d88:	str	x8, [sp, #8]
    9d8c:	strb	wzr, [x9, x8]
    9d90:	ldp	x3, x4, [sp, #64]
    9d94:	ldp	x1, x2, [sp]
    9d98:	ldr	x9, [sp, #80]
    9d9c:	cmp	x3, x22
    9da0:	add	x8, x2, x4
    9da4:	csel	x9, x10, x9, eq  // eq = none
    9da8:	cmp	x8, x9
    9dac:	b.ls	9dc8 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x198>  // b.plast
    9db0:	ldr	x9, [sp, #16]
    9db4:	cmp	x1, x23
    9db8:	mov	w10, #0xf                   	// #15
    9dbc:	csel	x9, x10, x9, eq  // eq = none
    9dc0:	cmp	x8, x9
    9dc4:	b.ls	9dd4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1a4>  // b.plast
    9dc8:	add	x0, sp, #0x40
    9dcc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9dd0:	b	9de4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1b4>
    9dd4:	mov	x0, sp
    9dd8:	mov	x1, xzr
    9ddc:	mov	x2, xzr
    9de0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    9de4:	sub	x8, x29, #0x20
    9de8:	add	x20, x8, #0x10
    9dec:	stur	x20, [x29, #-32]
    9df0:	mov	x8, x0
    9df4:	ldr	x9, [x8], #16
    9df8:	cmp	x9, x8
    9dfc:	b.eq	9e10 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    9e00:	stur	x9, [x29, #-32]
    9e04:	ldr	x9, [x0, #16]
    9e08:	stur	x9, [x29, #-16]
    9e0c:	b	9e18 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x1e8>
    9e10:	ldr	q0, [x9]
    9e14:	str	q0, [x20]
    9e18:	ldr	x9, [x0, #8]
    9e1c:	stur	x9, [x29, #-24]
    9e20:	stp	x8, xzr, [x0]
    9e24:	strb	wzr, [x0, #16]
    9e28:	ldur	x8, [x29, #-24]
    9e2c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9e30:	cmp	x8, x9
    9e34:	b.eq	9eec <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9e38:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9e3c:	add	x1, x1, #0x0
    9e40:	sub	x0, x29, #0x20
    9e44:	mov	w2, #0x1                   	// #1
    9e48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9e4c:	add	x9, x19, #0x10
    9e50:	str	x9, [x19]
    9e54:	mov	x8, x0
    9e58:	ldr	x10, [x8], #16
    9e5c:	cmp	x10, x8
    9e60:	b.eq	9e74 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x244>  // b.none
    9e64:	str	x10, [x19]
    9e68:	ldr	x9, [x0, #16]
    9e6c:	str	x9, [x19, #16]
    9e70:	b	9e7c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x24c>
    9e74:	ldr	q0, [x10]
    9e78:	str	q0, [x9]
    9e7c:	ldr	x9, [x0, #8]
    9e80:	str	x9, [x19, #8]
    9e84:	stp	x8, xzr, [x0]
    9e88:	strb	wzr, [x0, #16]
    9e8c:	ldur	x0, [x29, #-32]
    9e90:	cmp	x0, x20
    9e94:	b.eq	9e9c <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x26c>  // b.none
    9e98:	bl	0 <_ZdlPv>
    9e9c:	ldr	x0, [sp]
    9ea0:	cmp	x0, x23
    9ea4:	b.eq	9eac <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    9ea8:	bl	0 <_ZdlPv>
    9eac:	ldr	x0, [sp, #64]
    9eb0:	cmp	x0, x22
    9eb4:	b.eq	9ebc <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x28c>  // b.none
    9eb8:	bl	0 <_ZdlPv>
    9ebc:	ldr	x0, [sp, #32]
    9ec0:	add	x8, sp, #0x20
    9ec4:	add	x8, x8, #0x10
    9ec8:	cmp	x0, x8
    9ecc:	b.eq	9ed4 <_ZNK4llvm10VarBitInit11getAsStringB5cxx11Ev+0x2a4>  // b.none
    9ed0:	bl	0 <_ZdlPv>
    9ed4:	ldp	x20, x19, [sp, #176]
    9ed8:	ldp	x22, x21, [sp, #160]
    9edc:	ldr	x23, [sp, #144]
    9ee0:	ldp	x29, x30, [sp, #128]
    9ee4:	add	sp, sp, #0xc0
    9ee8:	ret
    9eec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    9ef0:	add	x0, x0, #0x0
    9ef4:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000009ef8 <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE>:
    9ef8:	stp	x29, x30, [sp, #-32]!
    9efc:	str	x19, [sp, #16]
    9f00:	mov	x29, sp
    9f04:	mov	x19, x0
    9f08:	ldr	x0, [x0, #24]
    9f0c:	ldr	x8, [x0]
    9f10:	ldr	x8, [x8, #96]
    9f14:	blr	x8
    9f18:	ldr	x8, [x19, #24]
    9f1c:	cmp	x8, x0
    9f20:	b.eq	9f3c <_ZNK4llvm10VarBitInit17resolveReferencesERNS_8ResolverE+0x44>  // b.none
    9f24:	ldr	x8, [x0]
    9f28:	ldr	w1, [x19, #32]
    9f2c:	ldr	x19, [sp, #16]
    9f30:	ldr	x2, [x8, #104]
    9f34:	ldp	x29, x30, [sp], #32
    9f38:	br	x2
    9f3c:	mov	x0, x19
    9f40:	ldr	x19, [sp, #16]
    9f44:	ldp	x29, x30, [sp], #32
    9f48:	ret

0000000000009f4c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev>:
    9f4c:	sub	sp, sp, #0xc0
    9f50:	stp	x29, x30, [sp, #128]
    9f54:	str	x23, [sp, #144]
    9f58:	stp	x22, x21, [sp, #160]
    9f5c:	stp	x20, x19, [sp, #176]
    9f60:	add	x29, sp, #0x80
    9f64:	mov	x20, x0
    9f68:	ldr	x0, [x0, #24]
    9f6c:	mov	x19, x8
    9f70:	add	x8, sp, #0x20
    9f74:	ldr	x9, [x0]
    9f78:	ldr	x9, [x9, #40]
    9f7c:	blr	x9
    9f80:	ldr	x8, [sp, #40]
    9f84:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    9f88:	cmp	x8, x9
    9f8c:	b.eq	a208 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    9f90:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    9f94:	add	x1, x1, #0x0
    9f98:	add	x0, sp, #0x20
    9f9c:	mov	w2, #0x1                   	// #1
    9fa0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    9fa4:	add	x8, sp, #0x40
    9fa8:	add	x22, x8, #0x10
    9fac:	str	x22, [sp, #64]
    9fb0:	mov	x8, x0
    9fb4:	ldr	x9, [x8], #16
    9fb8:	cmp	x9, x8
    9fbc:	b.eq	9fd0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x84>  // b.none
    9fc0:	str	x9, [sp, #64]
    9fc4:	ldr	x9, [x0, #16]
    9fc8:	str	x9, [sp, #80]
    9fcc:	b	9fd8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x8c>
    9fd0:	ldr	q0, [x9]
    9fd4:	str	q0, [x22]
    9fd8:	ldr	x9, [x0, #8]
    9fdc:	sub	x10, x29, #0x20
    9fe0:	str	x9, [sp, #72]
    9fe4:	stp	x8, xzr, [x0]
    9fe8:	strb	wzr, [x0, #16]
    9fec:	ldr	w9, [x20, #32]
    9ff0:	add	x8, x10, #0x15
    9ff4:	cbz	w9, a02c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xe0>
    9ff8:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    9ffc:	movk	x10, #0xcccd
    a000:	mov	w11, #0xa                   	// #10
    a004:	mov	x20, x8
    a008:	umulh	x12, x9, x10
    a00c:	lsr	x12, x12, #3
    a010:	msub	w13, w12, w11, w9
    a014:	orr	w13, w13, #0x30
    a018:	cmp	x9, #0x9
    a01c:	strb	w13, [x20, #-1]!
    a020:	mov	x9, x12
    a024:	b.hi	a008 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xbc>  // b.pmore
    a028:	b	a038 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0xec>
    a02c:	mov	w9, #0x30                  	// #48
    a030:	add	x20, x10, #0x14
    a034:	sturb	w9, [x29, #-12]
    a038:	mov	x9, sp
    a03c:	sub	x21, x8, x20
    a040:	add	x23, x9, #0x10
    a044:	cmp	x21, #0x10
    a048:	mov	x0, x23
    a04c:	str	x23, [sp]
    a050:	str	x21, [x29, #24]
    a054:	b.cc	a074 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x128>  // b.lo, b.ul, b.last
    a058:	mov	x0, sp
    a05c:	add	x1, x29, #0x18
    a060:	mov	x2, xzr
    a064:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a068:	ldr	x8, [x29, #24]
    a06c:	str	x0, [sp]
    a070:	str	x8, [sp, #16]
    a074:	cbz	x21, a098 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    a078:	cmp	x21, #0x1
    a07c:	b.ne	a08c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x140>  // b.any
    a080:	ldrb	w8, [x20]
    a084:	strb	w8, [x0]
    a088:	b	a098 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x14c>
    a08c:	mov	x1, x20
    a090:	mov	x2, x21
    a094:	bl	0 <memcpy>
    a098:	ldr	x8, [x29, #24]
    a09c:	ldr	x9, [sp]
    a0a0:	mov	w10, #0xf                   	// #15
    a0a4:	str	x8, [sp, #8]
    a0a8:	strb	wzr, [x9, x8]
    a0ac:	ldp	x3, x4, [sp, #64]
    a0b0:	ldp	x1, x2, [sp]
    a0b4:	ldr	x9, [sp, #80]
    a0b8:	cmp	x3, x22
    a0bc:	add	x8, x2, x4
    a0c0:	csel	x9, x10, x9, eq  // eq = none
    a0c4:	cmp	x8, x9
    a0c8:	b.ls	a0e4 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x198>  // b.plast
    a0cc:	ldr	x9, [sp, #16]
    a0d0:	cmp	x1, x23
    a0d4:	mov	w10, #0xf                   	// #15
    a0d8:	csel	x9, x10, x9, eq  // eq = none
    a0dc:	cmp	x8, x9
    a0e0:	b.ls	a0f0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1a4>  // b.plast
    a0e4:	add	x0, sp, #0x40
    a0e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a0ec:	b	a100 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1b4>
    a0f0:	mov	x0, sp
    a0f4:	mov	x1, xzr
    a0f8:	mov	x2, xzr
    a0fc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    a100:	sub	x8, x29, #0x20
    a104:	add	x20, x8, #0x10
    a108:	stur	x20, [x29, #-32]
    a10c:	mov	x8, x0
    a110:	ldr	x9, [x8], #16
    a114:	cmp	x9, x8
    a118:	b.eq	a12c <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
    a11c:	stur	x9, [x29, #-32]
    a120:	ldr	x9, [x0, #16]
    a124:	stur	x9, [x29, #-16]
    a128:	b	a134 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x1e8>
    a12c:	ldr	q0, [x9]
    a130:	str	q0, [x20]
    a134:	ldr	x9, [x0, #8]
    a138:	stur	x9, [x29, #-24]
    a13c:	stp	x8, xzr, [x0]
    a140:	strb	wzr, [x0, #16]
    a144:	ldur	x8, [x29, #-24]
    a148:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    a14c:	cmp	x8, x9
    a150:	b.eq	a208 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2bc>  // b.none
    a154:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a158:	add	x1, x1, #0x0
    a15c:	sub	x0, x29, #0x20
    a160:	mov	w2, #0x1                   	// #1
    a164:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a168:	add	x9, x19, #0x10
    a16c:	str	x9, [x19]
    a170:	mov	x8, x0
    a174:	ldr	x10, [x8], #16
    a178:	cmp	x10, x8
    a17c:	b.eq	a190 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x244>  // b.none
    a180:	str	x10, [x19]
    a184:	ldr	x9, [x0, #16]
    a188:	str	x9, [x19, #16]
    a18c:	b	a198 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x24c>
    a190:	ldr	q0, [x10]
    a194:	str	q0, [x9]
    a198:	ldr	x9, [x0, #8]
    a19c:	str	x9, [x19, #8]
    a1a0:	stp	x8, xzr, [x0]
    a1a4:	strb	wzr, [x0, #16]
    a1a8:	ldur	x0, [x29, #-32]
    a1ac:	cmp	x0, x20
    a1b0:	b.eq	a1b8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x26c>  // b.none
    a1b4:	bl	0 <_ZdlPv>
    a1b8:	ldr	x0, [sp]
    a1bc:	cmp	x0, x23
    a1c0:	b.eq	a1c8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x27c>  // b.none
    a1c4:	bl	0 <_ZdlPv>
    a1c8:	ldr	x0, [sp, #64]
    a1cc:	cmp	x0, x22
    a1d0:	b.eq	a1d8 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x28c>  // b.none
    a1d4:	bl	0 <_ZdlPv>
    a1d8:	ldr	x0, [sp, #32]
    a1dc:	add	x8, sp, #0x20
    a1e0:	add	x8, x8, #0x10
    a1e4:	cmp	x0, x8
    a1e8:	b.eq	a1f0 <_ZNK4llvm18VarListElementInit11getAsStringB5cxx11Ev+0x2a4>  // b.none
    a1ec:	bl	0 <_ZdlPv>
    a1f0:	ldp	x20, x19, [sp, #176]
    a1f4:	ldp	x22, x21, [sp, #160]
    a1f8:	ldr	x23, [sp, #144]
    a1fc:	ldp	x29, x30, [sp, #128]
    a200:	add	sp, sp, #0xc0
    a204:	ret
    a208:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a20c:	add	x0, x0, #0x0
    a210:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000a214 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE>:
    a214:	stp	x29, x30, [sp, #-32]!
    a218:	str	x19, [sp, #16]
    a21c:	mov	x29, sp
    a220:	mov	x19, x0
    a224:	ldr	x0, [x0, #24]
    a228:	ldr	x8, [x0]
    a22c:	ldr	x8, [x8, #96]
    a230:	blr	x8
    a234:	cbz	x0, a298 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x84>
    a238:	ldrb	w8, [x0, #8]
    a23c:	cmp	w8, #0x9
    a240:	b.ne	a260 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x4c>  // b.any
    a244:	ldr	w9, [x19, #32]
    a248:	ldr	w10, [x0, #32]
    a24c:	cmp	w10, w9
    a250:	b.ls	a260 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x4c>  // b.plast
    a254:	add	x8, x0, x9, lsl #3
    a258:	ldr	x19, [x8, #40]
    a25c:	b	a288 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>
    a260:	sub	w8, w8, #0x1
    a264:	cmp	w8, #0x16
    a268:	b.hi	a288 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>  // b.pmore
    a26c:	ldr	x8, [x19, #24]
    a270:	cmp	x0, x8
    a274:	b.eq	a288 <_ZNK4llvm18VarListElementInit17resolveReferencesERNS_8ResolverE+0x74>  // b.none
    a278:	ldr	w1, [x19, #32]
    a27c:	ldr	x19, [sp, #16]
    a280:	ldp	x29, x30, [sp], #32
    a284:	b	9954 <_ZN4llvm18VarListElementInit3getEPNS_9TypedInitEj>
    a288:	mov	x0, x19
    a28c:	ldr	x19, [sp, #16]
    a290:	ldp	x29, x30, [sp], #32
    a294:	ret
    a298:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a29c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a2a0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a2a4:	add	x0, x0, #0x0
    a2a8:	add	x1, x1, #0x0
    a2ac:	add	x3, x3, #0x0
    a2b0:	mov	w2, #0x69                  	// #105
    a2b4:	bl	0 <__assert_fail>

000000000000a2b8 <_ZNK4llvm18VarListElementInit6getBitEj>:
    a2b8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    a2bc:	ldr	x8, [x0, #16]
    a2c0:	ldr	x9, [x9]
    a2c4:	cmp	x8, x9
    a2c8:	b.eq	a2d0 <_ZNK4llvm18VarListElementInit6getBitEj+0x18>  // b.none
    a2cc:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    a2d0:	ret

000000000000a2d4 <_ZN4llvm7DefInitC1EPNS_6RecordE>:
    a2d4:	stp	x29, x30, [sp, #-32]!
    a2d8:	stp	x20, x19, [sp, #16]
    a2dc:	mov	x29, sp
    a2e0:	mov	x20, x0
    a2e4:	mov	x0, x1
    a2e8:	mov	x19, x1
    a2ec:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    a2f0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    a2f4:	ldr	x9, [x9]
    a2f8:	mov	w8, #0x6                   	// #6
    a2fc:	strh	w8, [x20, #8]
    a300:	stp	x0, x19, [x20, #16]
    a304:	add	x8, x9, #0x10
    a308:	str	x8, [x20]
    a30c:	ldp	x20, x19, [sp, #16]
    a310:	ldp	x29, x30, [sp], #32
    a314:	ret

000000000000a318 <_ZN4llvm6Record7getTypeEv>:
    a318:	sub	sp, sp, #0x70
    a31c:	stp	x29, x30, [sp, #48]
    a320:	stp	x24, x23, [sp, #64]
    a324:	stp	x22, x21, [sp, #80]
    a328:	stp	x20, x19, [sp, #96]
    a32c:	add	x29, sp, #0x30
    a330:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a334:	ldr	d0, [x8]
    a338:	mov	x8, sp
    a33c:	add	x19, x8, #0x10
    a340:	str	x19, [sp]
    a344:	str	d0, [sp, #8]
    a348:	ldr	w20, [x0, #96]
    a34c:	cbz	w20, a3cc <_ZN4llvm6Record7getTypeEv+0xb4>
    a350:	ldr	x21, [x0, #88]
    a354:	mov	w1, wzr
    a358:	mov	w8, #0x4                   	// #4
    a35c:	mov	w22, #0x18                  	// #24
    a360:	madd	x9, x20, x22, x21
    a364:	ldur	x24, [x9, #-24]
    a368:	ldr	w23, [x24, #96]
    a36c:	cmp	x20, x23
    a370:	b.ls	a414 <_ZN4llvm6Record7getTypeEv+0xfc>  // b.plast
    a374:	cmp	w1, w8
    a378:	b.cs	a3a8 <_ZN4llvm6Record7getTypeEv+0x90>  // b.hs, b.nlast
    a37c:	ldr	x8, [sp]
    a380:	str	x24, [x8, w1, uxtw #3]
    a384:	ldp	w9, w8, [sp, #8]
    a388:	cmp	w9, w8
    a38c:	b.cs	a434 <_ZN4llvm6Record7getTypeEv+0x11c>  // b.hs, b.nlast
    a390:	mvn	x10, x23
    a394:	add	x20, x20, x10
    a398:	add	x1, x9, #0x1
    a39c:	str	w1, [sp, #8]
    a3a0:	cbnz	x20, a360 <_ZN4llvm6Record7getTypeEv+0x48>
    a3a4:	b	a3c4 <_ZN4llvm6Record7getTypeEv+0xac>
    a3a8:	mov	x0, sp
    a3ac:	mov	w3, #0x8                   	// #8
    a3b0:	mov	x1, x19
    a3b4:	mov	x2, xzr
    a3b8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a3bc:	ldr	w1, [sp, #8]
    a3c0:	b	a37c <_ZN4llvm6Record7getTypeEv+0x64>
    a3c4:	ldr	x19, [sp]
    a3c8:	b	a3d0 <_ZN4llvm6Record7getTypeEv+0xb8>
    a3cc:	mov	x1, xzr
    a3d0:	mov	x0, x19
    a3d4:	bl	80c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    a3d8:	ldr	x8, [sp]
    a3dc:	mov	x9, sp
    a3e0:	add	x9, x9, #0x10
    a3e4:	mov	x19, x0
    a3e8:	cmp	x8, x9
    a3ec:	b.eq	a3f8 <_ZN4llvm6Record7getTypeEv+0xe0>  // b.none
    a3f0:	mov	x0, x8
    a3f4:	bl	0 <free>
    a3f8:	mov	x0, x19
    a3fc:	ldp	x20, x19, [sp, #96]
    a400:	ldp	x22, x21, [sp, #80]
    a404:	ldp	x24, x23, [sp, #64]
    a408:	ldp	x29, x30, [sp, #48]
    a40c:	add	sp, sp, #0x70
    a410:	ret
    a414:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a418:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a41c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a420:	add	x0, x0, #0x0
    a424:	add	x1, x1, #0x0
    a428:	add	x3, x3, #0x0
    a42c:	mov	w2, #0xcc                  	// #204
    a430:	bl	0 <__assert_fail>
    a434:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a438:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a43c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a440:	add	x0, x0, #0x0
    a444:	add	x1, x1, #0x0
    a448:	add	x3, x3, #0x0
    a44c:	mov	w2, #0x43                  	// #67
    a450:	bl	0 <__assert_fail>

000000000000a454 <_ZN4llvm6Record10getDefInitEv>:
    a454:	stp	x29, x30, [sp, #-32]!
    a458:	stp	x20, x19, [sp, #16]
    a45c:	mov	x29, sp
    a460:	ldr	x20, [x0, #112]
    a464:	cbz	x20, a478 <_ZN4llvm6Record10getDefInitEv+0x24>
    a468:	mov	x0, x20
    a46c:	ldp	x20, x19, [sp, #16]
    a470:	ldp	x29, x30, [sp], #32
    a474:	ret
    a478:	mov	x19, x0
    a47c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a480:	add	x0, x0, #0x0
    a484:	mov	w1, #0x20                  	// #32
    a488:	mov	w2, #0x4                   	// #4
    a48c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a490:	mov	x20, x0
    a494:	mov	x0, x19
    a498:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    a49c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    a4a0:	ldr	x9, [x9]
    a4a4:	mov	w8, #0x6                   	// #6
    a4a8:	strh	w8, [x20, #8]
    a4ac:	stp	x0, x19, [x20, #16]
    a4b0:	add	x8, x9, #0x10
    a4b4:	str	x8, [x20]
    a4b8:	str	x20, [x19, #112]
    a4bc:	mov	x0, x20
    a4c0:	ldp	x20, x19, [sp, #16]
    a4c4:	ldp	x29, x30, [sp], #32
    a4c8:	ret

000000000000a4cc <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE>:
    a4cc:	stp	x29, x30, [sp, #-32]!
    a4d0:	str	x19, [sp, #16]
    a4d4:	mov	x29, sp
    a4d8:	cbz	x1, a514 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x48>
    a4dc:	ldr	w8, [x1, #8]
    a4e0:	cmp	w8, #0x7
    a4e4:	b.ne	a500 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x34>  // b.any
    a4e8:	mov	x19, x0
    a4ec:	ldr	x0, [x0, #16]
    a4f0:	ldr	x8, [x0]
    a4f4:	ldr	x8, [x8, #24]
    a4f8:	blr	x8
    a4fc:	tbnz	w0, #0, a504 <_ZNK4llvm7DefInit20convertInitializerToEPNS_5RecTyE+0x38>
    a500:	mov	x19, xzr
    a504:	mov	x0, x19
    a508:	ldr	x19, [sp, #16]
    a50c:	ldp	x29, x30, [sp], #32
    a510:	ret
    a514:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a518:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a51c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a520:	add	x0, x0, #0x0
    a524:	add	x1, x1, #0x0
    a528:	add	x3, x3, #0x0
    a52c:	mov	w2, #0x69                  	// #105
    a530:	bl	0 <__assert_fail>

000000000000a534 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE>:
    a534:	ldr	x8, [x0, #24]
    a538:	ldr	w9, [x8, #80]
    a53c:	cbz	w9, a57c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a540:	ldr	x8, [x8, #72]
    a544:	add	x9, x9, x9, lsl #1
    a548:	lsl	x9, x9, #3
    a54c:	mov	x10, x8
    a550:	ldr	x11, [x10], #24
    a554:	cmp	x11, x1
    a558:	b.eq	a56c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x38>  // b.none
    a55c:	subs	x9, x9, #0x18
    a560:	mov	x8, x10
    a564:	b.ne	a550 <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x1c>  // b.any
    a568:	b	a57c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a56c:	cbz	x8, a57c <_ZNK4llvm7DefInit12getFieldTypeEPNS_10StringInitE+0x48>
    a570:	ldr	x8, [x8, #8]
    a574:	and	x0, x8, #0xfffffffffffffff8
    a578:	ret
    a57c:	mov	x0, xzr
    a580:	ret

000000000000a584 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev>:
    a584:	stp	x29, x30, [sp, #-48]!
    a588:	str	x21, [sp, #16]
    a58c:	stp	x20, x19, [sp, #32]
    a590:	mov	x29, sp
    a594:	ldr	x9, [x0, #24]
    a598:	ldr	x9, [x9]
    a59c:	cbz	x9, a644 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xc0>
    a5a0:	mov	x19, x8
    a5a4:	ldrb	w8, [x9, #8]
    a5a8:	cmp	w8, #0x12
    a5ac:	b.ne	a664 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xe0>  // b.any
    a5b0:	ldp	x20, x21, [x9, #24]
    a5b4:	add	x0, x19, #0x10
    a5b8:	str	x0, [x19]
    a5bc:	cbz	x20, a600 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x7c>
    a5c0:	cmp	x21, #0x10
    a5c4:	str	x21, [x29, #24]
    a5c8:	b.cc	a5e8 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x64>  // b.lo, b.ul, b.last
    a5cc:	add	x1, x29, #0x18
    a5d0:	mov	x0, x19
    a5d4:	mov	x2, xzr
    a5d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a5dc:	ldr	x8, [x29, #24]
    a5e0:	str	x0, [x19]
    a5e4:	str	x8, [x19, #16]
    a5e8:	cbz	x21, a624 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xa0>
    a5ec:	cmp	x21, #0x1
    a5f0:	b.ne	a618 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0x94>  // b.any
    a5f4:	ldrb	w8, [x20]
    a5f8:	strb	w8, [x0]
    a5fc:	b	a624 <_ZNK4llvm7DefInit11getAsStringB5cxx11Ev+0xa0>
    a600:	str	xzr, [x19, #8]
    a604:	strb	wzr, [x19, #16]
    a608:	ldp	x20, x19, [sp, #32]
    a60c:	ldr	x21, [sp, #16]
    a610:	ldp	x29, x30, [sp], #48
    a614:	ret
    a618:	mov	x1, x20
    a61c:	mov	x2, x21
    a620:	bl	0 <memcpy>
    a624:	ldr	x8, [x29, #24]
    a628:	ldr	x9, [x19]
    a62c:	str	x8, [x19, #8]
    a630:	strb	wzr, [x9, x8]
    a634:	ldp	x20, x19, [sp, #32]
    a638:	ldr	x21, [sp, #16]
    a63c:	ldp	x29, x30, [sp], #48
    a640:	ret
    a644:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a648:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a64c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a650:	add	x0, x0, #0x0
    a654:	add	x1, x1, #0x0
    a658:	add	x3, x3, #0x0
    a65c:	mov	w2, #0x69                  	// #105
    a660:	bl	0 <__assert_fail>
    a664:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a668:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    a66c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    a670:	add	x0, x0, #0x0
    a674:	add	x1, x1, #0x0
    a678:	add	x3, x3, #0x0
    a67c:	mov	w2, #0x108                 	// #264
    a680:	bl	0 <__assert_fail>

000000000000a684 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>:
    a684:	sub	sp, sp, #0xe0
    a688:	stp	x29, x30, [sp, #160]
    a68c:	stp	x24, x23, [sp, #176]
    a690:	stp	x22, x21, [sp, #192]
    a694:	stp	x20, x19, [sp, #208]
    a698:	add	x29, sp, #0xa0
    a69c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a6a0:	add	x8, x8, #0x0
    a6a4:	ldarb	w8, [x8]
    a6a8:	mov	x20, x2
    a6ac:	mov	x19, x1
    a6b0:	mov	x21, x0
    a6b4:	tbz	w8, #0, a7f8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x174>
    a6b8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a6bc:	ldr	d0, [x8]
    a6c0:	add	x8, sp, #0x8
    a6c4:	add	x8, x8, #0x10
    a6c8:	add	x0, sp, #0x8
    a6cc:	mov	x1, x20
    a6d0:	str	x8, [sp, #8]
    a6d4:	str	d0, [sp, #16]
    a6d8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    a6dc:	add	x0, sp, #0x8
    a6e0:	mov	x1, x21
    a6e4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a6e8:	lsl	x22, x20, #3
    a6ec:	cbz	x20, a70c <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x88>
    a6f0:	mov	x23, x22
    a6f4:	mov	x24, x19
    a6f8:	ldr	x1, [x24], #8
    a6fc:	add	x0, sp, #0x8
    a700:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a704:	subs	x23, x23, #0x8
    a708:	b.ne	a6f8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x74>  // b.any
    a70c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a710:	add	x0, x0, #0x0
    a714:	add	x1, sp, #0x8
    a718:	mov	x2, sp
    a71c:	str	xzr, [sp]
    a720:	add	x23, sp, #0x8
    a724:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    a728:	cbz	x0, a760 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xdc>
    a72c:	sub	x22, x0, #0x18
    a730:	ldr	x0, [sp, #8]
    a734:	add	x8, x23, #0x10
    a738:	cmp	x0, x8
    a73c:	b.eq	a744 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xc0>  // b.none
    a740:	bl	0 <free>
    a744:	mov	x0, x22
    a748:	ldp	x20, x19, [sp, #208]
    a74c:	ldp	x22, x21, [sp, #192]
    a750:	ldp	x24, x23, [sp, #176]
    a754:	ldp	x29, x30, [sp, #160]
    a758:	add	sp, sp, #0xe0
    a75c:	ret
    a760:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a764:	add	x1, x22, #0x38
    a768:	add	x0, x0, #0x0
    a76c:	mov	w2, #0x3                   	// #3
    a770:	add	x24, x19, x20, lsl #3
    a774:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a778:	mov	x22, x0
    a77c:	sub	x0, x29, #0x8
    a780:	mov	w1, #0x1                   	// #1
    a784:	stur	x21, [x29, #-8]
    a788:	bl	80c <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    a78c:	str	x0, [x22, #16]
    a790:	adrp	x9, c58 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x44c>
    a794:	ldr	x9, [x9]
    a798:	ldur	x10, [x29, #-8]
    a79c:	mov	w8, #0x16                  	// #22
    a7a0:	mov	x21, x22
    a7a4:	subs	x2, x24, x19
    a7a8:	strh	w8, [x22, #8]
    a7ac:	str	xzr, [x21, #24]!
    a7b0:	add	x8, x9, #0x10
    a7b4:	str	x8, [x22]
    a7b8:	stp	x10, xzr, [x22, #32]
    a7bc:	str	w20, [x22, #48]
    a7c0:	b.eq	a7d0 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x14c>  // b.none
    a7c4:	add	x0, x22, #0x38
    a7c8:	mov	x1, x19
    a7cc:	bl	0 <memmove>
    a7d0:	ldr	x2, [sp]
    a7d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    a7d8:	add	x0, x0, #0x0
    a7dc:	mov	x1, x21
    a7e0:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    a7e4:	ldr	x0, [sp, #8]
    a7e8:	add	x8, x23, #0x10
    a7ec:	cmp	x0, x8
    a7f0:	b.ne	a740 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xbc>  // b.any
    a7f4:	b	a744 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0xc0>
    a7f8:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    a7fc:	add	x22, x22, #0x0
    a800:	mov	x0, x22
    a804:	bl	0 <__cxa_guard_acquire>
    a808:	cbz	w0, a6b8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>
    a80c:	add	x23, x22, #0xf0
    a810:	mov	w1, #0x6                   	// #6
    a814:	mov	x0, x23
    a818:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    a81c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    a820:	ldr	x8, [x8]
    a824:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    a828:	adrp	x2, 0 <__dso_handle>
    a82c:	add	x2, x2, #0x0
    a830:	add	x8, x8, #0x10
    a834:	str	x8, [x22, #240]
    a838:	ldr	x0, [x0]
    a83c:	mov	x1, x23
    a840:	bl	0 <__cxa_atexit>
    a844:	mov	x0, x22
    a848:	bl	0 <__cxa_guard_release>
    a84c:	b	a6b8 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE+0x34>

000000000000a850 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE>:
    a850:	stp	x29, x30, [sp, #-48]!
    a854:	stp	x22, x21, [sp, #16]
    a858:	stp	x20, x19, [sp, #32]
    a85c:	mov	x29, sp
    a860:	ldr	w20, [x0, #48]
    a864:	ldr	x22, [x0, #32]
    a868:	mov	x21, x0
    a86c:	mov	x19, x1
    a870:	mov	x0, x1
    a874:	mov	x1, x20
    a878:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
    a87c:	mov	x0, x19
    a880:	mov	x1, x22
    a884:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a888:	cbz	w20, a8a8 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x58>
    a88c:	add	x21, x21, #0x38
    a890:	lsl	x20, x20, #3
    a894:	ldr	x1, [x21], #8
    a898:	mov	x0, x19
    a89c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    a8a0:	subs	x20, x20, #0x8
    a8a4:	b.ne	a894 <_ZNK4llvm10VarDefInit7ProfileERNS_16FoldingSetNodeIDE+0x44>  // b.any
    a8a8:	ldp	x20, x19, [sp, #32]
    a8ac:	ldp	x22, x21, [sp, #16]
    a8b0:	ldp	x29, x30, [sp], #48
    a8b4:	ret

000000000000a8b8 <_ZN4llvm10VarDefInit11instantiateEv>:
    a8b8:	sub	sp, sp, #0x110
    a8bc:	stp	x29, x30, [sp, #176]
    a8c0:	stp	x28, x27, [sp, #192]
    a8c4:	stp	x26, x25, [sp, #208]
    a8c8:	stp	x24, x23, [sp, #224]
    a8cc:	stp	x22, x21, [sp, #240]
    a8d0:	stp	x20, x19, [sp, #256]
    a8d4:	add	x29, sp, #0xb0
    a8d8:	mov	x19, x0
    a8dc:	ldr	x0, [x0, #40]
    a8e0:	cbnz	x0, aca4 <_ZN4llvm10VarDefInit11instantiateEv+0x3ec>
    a8e4:	ldr	x8, [x19, #32]
    a8e8:	ldr	x21, [x8, #104]
    a8ec:	mov	x0, x21
    a8f0:	bl	ad5c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    a8f4:	ldr	x8, [x19, #32]
    a8f8:	mov	x24, x0
    a8fc:	mov	w0, #0x80                  	// #128
    a900:	ldr	x22, [x8, #8]
    a904:	ldr	w23, [x8, #16]
    a908:	bl	0 <_Znwm>
    a90c:	mov	w5, #0x1                   	// #1
    a910:	mov	x1, x24
    a914:	mov	x2, x22
    a918:	mov	x3, x23
    a91c:	mov	x4, x21
    a920:	mov	w6, wzr
    a924:	mov	x20, x0
    a928:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    a92c:	ldr	x8, [x19, #32]
    a930:	ldr	w9, [x8, #80]
    a934:	cbz	w9, a9fc <_ZN4llvm10VarDefInit11instantiateEv+0x144>
    a938:	ldr	x24, [x8, #72]
    a93c:	ldr	w10, [x20, #80]
    a940:	mov	w8, #0x18                  	// #24
    a944:	add	x22, x20, #0x48
    a948:	add	x23, x20, #0x58
    a94c:	madd	x25, x9, x8, x24
    a950:	mov	w26, #0x18                  	// #24
    a954:	ldr	x9, [x22]
    a958:	mov	w8, w10
    a95c:	cbz	w10, a994 <_ZN4llvm10VarDefInit11instantiateEv+0xdc>
    a960:	ldr	x10, [x24]
    a964:	add	x11, x8, x8, lsl #1
    a968:	lsl	x11, x11, #3
    a96c:	mov	x13, x9
    a970:	mov	x12, x9
    a974:	ldr	x14, [x12], #24
    a978:	cmp	x14, x10
    a97c:	b.eq	a990 <_ZN4llvm10VarDefInit11instantiateEv+0xd8>  // b.none
    a980:	subs	x11, x11, #0x18
    a984:	mov	x13, x12
    a988:	b.ne	a974 <_ZN4llvm10VarDefInit11instantiateEv+0xbc>  // b.any
    a98c:	b	a994 <_ZN4llvm10VarDefInit11instantiateEv+0xdc>
    a990:	cbnz	x13, ad1c <_ZN4llvm10VarDefInit11instantiateEv+0x464>
    a994:	ldr	w10, [x20, #84]
    a998:	cmp	w8, w10
    a99c:	b.cs	a9d8 <_ZN4llvm10VarDefInit11instantiateEv+0x120>  // b.hs, b.nlast
    a9a0:	ldr	x10, [x24, #16]
    a9a4:	ldr	q0, [x24]
    a9a8:	madd	x8, x8, x26, x9
    a9ac:	str	x10, [x8, #16]
    a9b0:	str	q0, [x8]
    a9b4:	ldp	w8, w9, [x20, #80]
    a9b8:	cmp	w8, w9
    a9bc:	b.cs	acdc <_ZN4llvm10VarDefInit11instantiateEv+0x424>  // b.hs, b.nlast
    a9c0:	add	x24, x24, #0x18
    a9c4:	add	w10, w8, #0x1
    a9c8:	cmp	x24, x25
    a9cc:	str	w10, [x20, #80]
    a9d0:	b.ne	a954 <_ZN4llvm10VarDefInit11instantiateEv+0x9c>  // b.any
    a9d4:	b	a9f8 <_ZN4llvm10VarDefInit11instantiateEv+0x140>
    a9d8:	mov	w3, #0x18                  	// #24
    a9dc:	mov	x0, x22
    a9e0:	mov	x1, x23
    a9e4:	mov	x2, xzr
    a9e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    a9ec:	ldr	w8, [x20, #80]
    a9f0:	ldr	x9, [x20, #72]
    a9f4:	b	a9a0 <_ZN4llvm10VarDefInit11instantiateEv+0xe8>
    a9f8:	ldr	x8, [x19, #32]
    a9fc:	ldr	x24, [x8, #56]
    aa00:	ldr	w25, [x8, #64]
    aa04:	strb	wzr, [sp, #24]
    aa08:	adrp	x8, dd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5cc>
    aa0c:	ldr	x8, [x8]
    aa10:	stp	xzr, xzr, [sp, #40]
    aa14:	str	xzr, [sp, #32]
    aa18:	str	wzr, [sp, #56]
    aa1c:	add	x8, x8, #0x10
    aa20:	stp	x8, x20, [sp, #8]
    aa24:	cbz	w25, aaf8 <_ZN4llvm10VarDefInit11instantiateEv+0x240>
    aa28:	add	x9, sp, #0x8
    aa2c:	mov	w8, wzr
    aa30:	add	x26, x19, #0x38
    aa34:	add	x22, x9, #0x18
    aa38:	mov	w27, #0x18                  	// #24
    aa3c:	ldr	w10, [x19, #48]
    aa40:	ldr	x9, [x24, w8, uxtw #3]
    aa44:	mov	w28, w8
    aa48:	cmp	w10, w8
    aa4c:	b.ls	aa58 <_ZN4llvm10VarDefInit11instantiateEv+0x1a0>  // b.plast
    aa50:	ldr	x23, [x26, x28, lsl #3]
    aa54:	b	aa6c <_ZN4llvm10VarDefInit11instantiateEv+0x1b4>
    aa58:	ldr	x8, [x20, #72]
    aa5c:	ldr	x10, [x8], #24
    aa60:	cmp	x10, x9
    aa64:	b.ne	aa5c <_ZN4llvm10VarDefInit11instantiateEv+0x1a4>  // b.any
    aa68:	ldur	x23, [x8, #-8]
    aa6c:	add	x1, sp, #0x40
    aa70:	mov	x0, x22
    aa74:	str	x9, [sp, #64]
    aa78:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    aa7c:	str	x23, [x0, #8]
    aa80:	strb	wzr, [x0, #16]
    aa84:	ldr	w8, [x20, #80]
    aa88:	cbz	w8, acc4 <_ZN4llvm10VarDefInit11instantiateEv+0x40c>
    aa8c:	ldr	x10, [x24, x28, lsl #3]
    aa90:	ldr	x9, [x20, #72]
    aa94:	mov	w11, wzr
    aa98:	umaddl	x0, w11, w27, x9
    aa9c:	ldr	x12, [x0]
    aaa0:	cmp	x12, x10
    aaa4:	b.eq	aab8 <_ZN4llvm10VarDefInit11instantiateEv+0x200>  // b.none
    aaa8:	add	w11, w11, #0x1
    aaac:	cmp	w8, w11
    aab0:	b.ne	aa98 <_ZN4llvm10VarDefInit11instantiateEv+0x1e0>  // b.any
    aab4:	b	acc4 <_ZN4llvm10VarDefInit11instantiateEv+0x40c>
    aab8:	cmp	w8, w11
    aabc:	b.ls	acfc <_ZN4llvm10VarDefInit11instantiateEv+0x444>  // b.plast
    aac0:	madd	x9, x8, x27, x9
    aac4:	add	x1, x0, #0x18
    aac8:	subs	x2, x9, x1
    aacc:	b.eq	aad8 <_ZN4llvm10VarDefInit11instantiateEv+0x220>  // b.none
    aad0:	bl	0 <memmove>
    aad4:	ldr	w8, [x20, #80]
    aad8:	ldr	w10, [x20, #84]
    aadc:	sub	x9, x8, #0x1
    aae0:	cmp	x9, x10
    aae4:	b.hi	acdc <_ZN4llvm10VarDefInit11instantiateEv+0x424>  // b.pmore
    aae8:	add	w8, w28, #0x1
    aaec:	cmp	w8, w25
    aaf0:	str	w9, [x20, #80]
    aaf4:	b.ne	aa3c <_ZN4llvm10VarDefInit11instantiateEv+0x184>  // b.any
    aaf8:	add	x1, sp, #0x8
    aafc:	mov	x0, x20
    ab00:	mov	x2, xzr
    ab04:	bl	aee0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    ab08:	ldr	x1, [x19, #32]
    ab0c:	ldr	w8, [x1, #96]
    ab10:	cbz	w8, ab40 <_ZN4llvm10VarDefInit11instantiateEv+0x288>
    ab14:	ldr	x22, [x1, #88]
    ab18:	mov	w9, #0x18                  	// #24
    ab1c:	madd	x24, x8, x9, x22
    ab20:	ldp	x1, x2, [x22]
    ab24:	ldr	x3, [x22, #16]
    ab28:	mov	x0, x20
    ab2c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ab30:	add	x22, x22, #0x18
    ab34:	cmp	x22, x24
    ab38:	b.ne	ab20 <_ZN4llvm10VarDefInit11instantiateEv+0x268>  // b.any
    ab3c:	ldr	x1, [x19, #32]
    ab40:	ldr	w8, [x1, #16]
    ab44:	cbz	w8, ad3c <_ZN4llvm10VarDefInit11instantiateEv+0x484>
    ab48:	ldr	x9, [x1, #8]
    ab4c:	mov	x0, x20
    ab50:	add	x8, x9, x8, lsl #3
    ab54:	ldur	x2, [x8, #-8]
    ab58:	mov	x3, x2
    ab5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ab60:	adrp	x8, e08 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5fc>
    ab64:	ldr	x8, [x8]
    ab68:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    ab6c:	ldr	d0, [x10]
    ab70:	add	x9, sp, #0x40
    ab74:	mov	w10, #0x1                   	// #1
    ab78:	add	x22, x8, #0x10
    ab7c:	add	x23, x9, #0x48
    ab80:	add	x1, sp, #0x40
    ab84:	mov	x0, x20
    ab88:	mov	x2, xzr
    ab8c:	stp	xzr, xzr, [sp, #96]
    ab90:	str	xzr, [sp, #88]
    ab94:	str	wzr, [sp, #112]
    ab98:	stp	x22, x20, [sp, #64]
    ab9c:	str	x23, [sp, #120]
    aba0:	str	d0, [sp, #128]
    aba4:	strb	w10, [sp, #80]
    aba8:	bl	aee0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    abac:	ldr	x0, [sp, #120]
    abb0:	str	x22, [sp, #64]
    abb4:	cmp	x0, x23
    abb8:	b.eq	abc0 <_ZN4llvm10VarDefInit11instantiateEv+0x308>  // b.none
    abbc:	bl	0 <free>
    abc0:	ldr	x0, [sp, #96]
    abc4:	bl	0 <_ZdlPv>
    abc8:	mov	x1, sp
    abcc:	mov	x0, x21
    abd0:	str	x20, [sp]
    abd4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    abd8:	ldr	x21, [sp]
    abdc:	cbz	x21, ac38 <_ZN4llvm10VarDefInit11instantiateEv+0x380>
    abe0:	ldr	x0, [x21, #88]
    abe4:	add	x8, x21, #0x68
    abe8:	cmp	x0, x8
    abec:	b.eq	abf4 <_ZN4llvm10VarDefInit11instantiateEv+0x33c>  // b.none
    abf0:	bl	0 <free>
    abf4:	ldr	x0, [x21, #72]
    abf8:	add	x8, x21, #0x58
    abfc:	cmp	x0, x8
    ac00:	b.eq	ac08 <_ZN4llvm10VarDefInit11instantiateEv+0x350>  // b.none
    ac04:	bl	0 <free>
    ac08:	ldr	x0, [x21, #56]
    ac0c:	add	x8, x21, #0x48
    ac10:	cmp	x0, x8
    ac14:	b.eq	ac1c <_ZN4llvm10VarDefInit11instantiateEv+0x364>  // b.none
    ac18:	bl	0 <free>
    ac1c:	ldr	x0, [x21, #8]
    ac20:	add	x8, x21, #0x18
    ac24:	cmp	x0, x8
    ac28:	b.eq	ac30 <_ZN4llvm10VarDefInit11instantiateEv+0x378>  // b.none
    ac2c:	bl	0 <free>
    ac30:	mov	x0, x21
    ac34:	bl	0 <_ZdlPv>
    ac38:	ldr	x21, [x20, #112]
    ac3c:	str	xzr, [sp]
    ac40:	cbnz	x21, ac84 <_ZN4llvm10VarDefInit11instantiateEv+0x3cc>
    ac44:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ac48:	add	x0, x0, #0x0
    ac4c:	mov	w1, #0x20                  	// #32
    ac50:	mov	w2, #0x4                   	// #4
    ac54:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ac58:	mov	x21, x0
    ac5c:	mov	x0, x20
    ac60:	bl	a318 <_ZN4llvm6Record7getTypeEv>
    ac64:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ac68:	ldr	x9, [x9]
    ac6c:	mov	w8, #0x6                   	// #6
    ac70:	strh	w8, [x21, #8]
    ac74:	stp	x0, x20, [x21, #16]
    ac78:	add	x8, x9, #0x10
    ac7c:	str	x8, [x21]
    ac80:	str	x21, [x20, #112]
    ac84:	str	x21, [x19, #40]
    ac88:	adrp	x8, dd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5cc>
    ac8c:	ldr	x0, [sp, #40]
    ac90:	ldr	x8, [x8]
    ac94:	add	x8, x8, #0x10
    ac98:	str	x8, [sp, #8]
    ac9c:	bl	0 <_ZdlPv>
    aca0:	ldr	x0, [x19, #40]
    aca4:	ldp	x20, x19, [sp, #256]
    aca8:	ldp	x22, x21, [sp, #240]
    acac:	ldp	x24, x23, [sp, #224]
    acb0:	ldp	x26, x25, [sp, #208]
    acb4:	ldp	x28, x27, [sp, #192]
    acb8:	ldp	x29, x30, [sp, #176]
    acbc:	add	sp, sp, #0x110
    acc0:	ret
    acc4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    acc8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    accc:	add	x0, x0, #0x0
    acd0:	add	x1, x1, #0x0
    acd4:	mov	w2, #0x614                 	// #1556
    acd8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    acdc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ace0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ace4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ace8:	add	x0, x0, #0x0
    acec:	add	x1, x1, #0x0
    acf0:	add	x3, x3, #0x0
    acf4:	mov	w2, #0x43                  	// #67
    acf8:	bl	0 <__assert_fail>
    acfc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad00:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad04:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad08:	add	x0, x0, #0x0
    ad0c:	add	x1, x1, #0x0
    ad10:	add	x3, x3, #0x0
    ad14:	mov	w2, #0x1b7                 	// #439
    ad18:	bl	0 <__assert_fail>
    ad1c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad20:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad24:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad28:	add	x0, x0, #0x0
    ad2c:	add	x1, x1, #0x0
    ad30:	add	x3, x3, #0x0
    ad34:	mov	w2, #0x60a                 	// #1546
    ad38:	bl	0 <__assert_fail>
    ad3c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad40:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad44:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ad48:	add	x0, x0, #0x0
    ad4c:	add	x1, x1, #0x0
    ad50:	add	x3, x3, #0x0
    ad54:	mov	w2, #0xa8                  	// #168
    ad58:	bl	0 <__assert_fail>

000000000000ad5c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>:
    ad5c:	sub	sp, sp, #0x70
    ad60:	stp	x29, x30, [sp, #64]
    ad64:	str	x21, [sp, #80]
    ad68:	stp	x20, x19, [sp, #96]
    ad6c:	add	x29, sp, #0x40
    ad70:	ldr	w9, [x0, #168]
    ad74:	add	x10, sp, #0x20
    ad78:	add	w8, w9, #0x1
    ad7c:	str	w8, [x0, #168]
    ad80:	add	x8, x10, #0x15
    ad84:	cbz	w9, adbc <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x60>
    ad88:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
    ad8c:	movk	x10, #0xcccd
    ad90:	mov	w11, #0xa                   	// #10
    ad94:	mov	x19, x8
    ad98:	umulh	x12, x9, x10
    ad9c:	lsr	x12, x12, #3
    ada0:	msub	w13, w12, w11, w9
    ada4:	orr	w13, w13, #0x30
    ada8:	cmp	x9, #0x9
    adac:	strb	w13, [x19, #-1]!
    adb0:	mov	x9, x12
    adb4:	b.hi	ad98 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x3c>  // b.pmore
    adb8:	b	adc8 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x6c>
    adbc:	mov	w9, #0x30                  	// #48
    adc0:	add	x19, x10, #0x14
    adc4:	strb	w9, [sp, #52]
    adc8:	mov	x9, sp
    adcc:	sub	x20, x8, x19
    add0:	add	x21, x9, #0x10
    add4:	cmp	x20, #0x10
    add8:	mov	x0, x21
    addc:	str	x21, [sp]
    ade0:	str	x20, [x29, #24]
    ade4:	b.cc	ae04 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xa8>  // b.lo, b.ul, b.last
    ade8:	mov	x0, sp
    adec:	add	x1, x29, #0x18
    adf0:	mov	x2, xzr
    adf4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    adf8:	ldr	x8, [x29, #24]
    adfc:	str	x0, [sp]
    ae00:	str	x8, [sp, #16]
    ae04:	cbz	x20, ae28 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xcc>
    ae08:	cmp	x20, #0x1
    ae0c:	b.ne	ae1c <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xc0>  // b.any
    ae10:	ldrb	w8, [x19]
    ae14:	strb	w8, [x0]
    ae18:	b	ae28 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0xcc>
    ae1c:	mov	x1, x19
    ae20:	mov	x2, x20
    ae24:	bl	0 <memcpy>
    ae28:	ldr	x8, [x29, #24]
    ae2c:	ldr	x9, [sp]
    ae30:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ae34:	add	x3, x3, #0x0
    ae38:	mov	x0, sp
    ae3c:	mov	w4, #0xa                   	// #10
    ae40:	mov	x1, xzr
    ae44:	mov	x2, xzr
    ae48:	str	x8, [sp, #8]
    ae4c:	strb	wzr, [x9, x8]
    ae50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    ae54:	add	x8, sp, #0x20
    ae58:	add	x19, x8, #0x10
    ae5c:	str	x19, [sp, #32]
    ae60:	mov	x8, x0
    ae64:	ldr	x9, [x8], #16
    ae68:	cmp	x9, x8
    ae6c:	b.eq	ae80 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x124>  // b.none
    ae70:	str	x9, [sp, #32]
    ae74:	ldr	x9, [x0, #16]
    ae78:	str	x9, [sp, #48]
    ae7c:	b	ae88 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x12c>
    ae80:	ldr	q0, [x9]
    ae84:	str	q0, [x19]
    ae88:	ldr	x9, [x0, #8]
    ae8c:	str	x9, [sp, #40]
    ae90:	stp	x8, xzr, [x0]
    ae94:	strb	wzr, [x0, #16]
    ae98:	ldp	x0, x1, [sp, #32]
    ae9c:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    aea0:	ldr	x8, [sp, #32]
    aea4:	cmp	x8, x19
    aea8:	mov	x19, x0
    aeac:	b.eq	aeb8 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x15c>  // b.none
    aeb0:	mov	x0, x8
    aeb4:	bl	0 <_ZdlPv>
    aeb8:	ldr	x0, [sp]
    aebc:	cmp	x0, x21
    aec0:	b.eq	aec8 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv+0x16c>  // b.none
    aec4:	bl	0 <_ZdlPv>
    aec8:	mov	x0, x19
    aecc:	ldp	x20, x19, [sp, #96]
    aed0:	ldr	x21, [sp, #80]
    aed4:	ldp	x29, x30, [sp, #64]
    aed8:	add	sp, sp, #0x70
    aedc:	ret

000000000000aee0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>:
    aee0:	stp	x29, x30, [sp, #-80]!
    aee4:	stp	x28, x25, [sp, #16]
    aee8:	stp	x24, x23, [sp, #32]
    aeec:	stp	x22, x21, [sp, #48]
    aef0:	stp	x20, x19, [sp, #64]
    aef4:	mov	x29, sp
    aef8:	sub	sp, sp, #0x220
    aefc:	ldr	w8, [x0, #80]
    af00:	mov	x21, x0
    af04:	mov	x22, x1
    af08:	cbz	w8, af98 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb8>
    af0c:	ldr	x20, [x21, #72]
    af10:	add	x8, x8, x8, lsl #1
    af14:	mov	x23, x2
    af18:	sub	x24, x29, #0x40
    af1c:	lsl	x25, x8, #3
    af20:	b	af30 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x50>
    af24:	subs	x25, x25, #0x18
    af28:	add	x20, x20, #0x18
    af2c:	b.eq	af98 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xb8>  // b.none
    af30:	cmp	x23, x20
    af34:	b.eq	af24 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>  // b.none
    af38:	ldr	x0, [x20, #16]
    af3c:	cbz	x0, af24 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>
    af40:	ldr	x8, [x0]
    af44:	mov	x1, x22
    af48:	ldr	x8, [x8, #96]
    af4c:	blr	x8
    af50:	mov	x19, x0
    af54:	mov	x0, x20
    af58:	mov	x1, x19
    af5c:	bl	c84c <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    af60:	tbz	w0, #0, af24 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x44>
    af64:	sub	x8, x29, #0x20
    af68:	add	x23, x8, #0x10
    af6c:	stp	x23, xzr, [x29, #-32]
    af70:	sturb	wzr, [x29, #-16]
    af74:	cbnz	x19, aff8 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x118>
    af78:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    af7c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    af80:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    af84:	add	x0, x0, #0x0
    af88:	add	x1, x1, #0x0
    af8c:	add	x3, x3, #0x0
    af90:	mov	w2, #0x69                  	// #105
    af94:	bl	0 <__assert_fail>
    af98:	ldr	x19, [x21]
    af9c:	mov	x1, x22
    afa0:	ldr	x8, [x19]
    afa4:	mov	x0, x19
    afa8:	ldr	x8, [x8, #96]
    afac:	blr	x8
    afb0:	cmp	x0, x19
    afb4:	b.eq	afdc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0xfc>  // b.none
    afb8:	str	x0, [x21]
    afbc:	mov	x0, x21
    afc0:	add	sp, sp, #0x220
    afc4:	ldp	x20, x19, [sp, #64]
    afc8:	ldp	x22, x21, [sp, #48]
    afcc:	ldp	x24, x23, [sp, #32]
    afd0:	ldp	x28, x25, [sp, #16]
    afd4:	ldp	x29, x30, [sp], #80
    afd8:	b	cd58 <_ZN4llvm6Record9checkNameEv>
    afdc:	add	sp, sp, #0x220
    afe0:	ldp	x20, x19, [sp, #64]
    afe4:	ldp	x22, x21, [sp, #48]
    afe8:	ldp	x24, x23, [sp, #32]
    afec:	ldp	x28, x25, [sp, #16]
    aff0:	ldp	x29, x30, [sp], #80
    aff4:	ret
    aff8:	ldrb	w8, [x19, #8]
    affc:	sub	w8, w8, #0x1
    b000:	cmp	w8, #0x16
    b004:	b.ls	b168 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x288>  // b.plast
    b008:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b00c:	ldr	x22, [x21, #8]
    b010:	ldr	w21, [x21, #16]
    b014:	add	x8, x8, #0x0
    b018:	stp	x8, xzr, [sp, #232]
    b01c:	sub	x8, x29, #0x20
    b020:	mov	w23, #0x103                 	// #259
    b024:	mov	w24, #0x104                 	// #260
    b028:	stp	x8, xzr, [sp, #208]
    b02c:	add	x8, sp, #0x100
    b030:	add	x0, sp, #0xe8
    b034:	add	x1, sp, #0xd0
    b038:	strh	w23, [sp, #248]
    b03c:	strh	w24, [sp, #224]
    b040:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b044:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b048:	add	x8, x8, #0x0
    b04c:	stp	x8, xzr, [sp, #184]
    b050:	add	x8, sp, #0x118
    b054:	add	x0, sp, #0x100
    b058:	add	x1, sp, #0xb8
    b05c:	strh	w23, [sp, #200]
    b060:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b064:	ldr	x0, [x20]
    b068:	sub	x25, x29, #0x40
    b06c:	ldr	x8, [x0]
    b070:	ldr	x9, [x8, #48]
    b074:	sub	x8, x29, #0x40
    b078:	blr	x9
    b07c:	sub	x8, x29, #0xf0
    b080:	add	x0, sp, #0x118
    b084:	add	x1, sp, #0xa0
    b088:	strh	w24, [sp, #176]
    b08c:	stp	x25, xzr, [sp, #160]
    b090:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b094:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b098:	add	x8, x8, #0x0
    b09c:	stp	x8, xzr, [sp, #136]
    b0a0:	sub	x8, x29, #0xd8
    b0a4:	sub	x0, x29, #0xf0
    b0a8:	add	x1, sp, #0x88
    b0ac:	strh	w23, [sp, #152]
    b0b0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b0b4:	ldr	x8, [x20, #8]
    b0b8:	sub	x20, x29, #0x78
    b0bc:	and	x0, x8, #0xfffffffffffffff8
    b0c0:	ldr	x8, [x0]
    b0c4:	ldr	x9, [x8, #16]
    b0c8:	sub	x8, x29, #0x78
    b0cc:	blr	x9
    b0d0:	sub	x8, x29, #0xc0
    b0d4:	sub	x0, x29, #0xd8
    b0d8:	add	x1, sp, #0x70
    b0dc:	strh	w24, [sp, #128]
    b0e0:	stp	x20, xzr, [sp, #112]
    b0e4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b0e8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b0ec:	add	x8, x8, #0x0
    b0f0:	stp	x8, xzr, [sp, #88]
    b0f4:	sub	x8, x29, #0xa8
    b0f8:	sub	x0, x29, #0xc0
    b0fc:	add	x1, sp, #0x58
    b100:	strh	w23, [sp, #104]
    b104:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b108:	ldr	x8, [x19]
    b10c:	mov	x0, x19
    b110:	add	x20, sp, #0x20
    b114:	ldr	x9, [x8, #48]
    b118:	add	x8, sp, #0x20
    b11c:	blr	x9
    b120:	sub	x8, x29, #0x90
    b124:	sub	x0, x29, #0xa8
    b128:	add	x1, sp, #0x40
    b12c:	strh	w24, [sp, #80]
    b130:	stp	x20, xzr, [sp, #64]
    b134:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b138:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b13c:	add	x8, x8, #0x0
    b140:	stp	x8, xzr, [sp, #8]
    b144:	sub	x8, x29, #0x58
    b148:	sub	x0, x29, #0x90
    b14c:	add	x1, sp, #0x8
    b150:	strh	w23, [sp, #24]
    b154:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b158:	sub	x2, x29, #0x58
    b15c:	mov	x0, x22
    b160:	mov	x1, x21
    b164:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b168:	ldr	x0, [x19, #16]
    b16c:	sub	x22, x29, #0x78
    b170:	ldr	x8, [x0]
    b174:	ldr	x9, [x8, #16]
    b178:	sub	x8, x29, #0x78
    b17c:	blr	x9
    b180:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b184:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    b188:	add	x8, x8, #0x0
    b18c:	mov	w9, #0x403                 	// #1027
    b190:	sub	x10, x29, #0x58
    b194:	add	x11, x11, #0x0
    b198:	mov	w12, #0x302                 	// #770
    b19c:	stp	x8, x22, [x29, #-88]
    b1a0:	sturh	w9, [x29, #-72]
    b1a4:	stp	x10, x11, [sp, #32]
    b1a8:	strh	w12, [sp, #48]
    b1ac:	cbnz	wzr, b1bc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x2dc>
    b1b0:	ldurb	w8, [x29, #-71]
    b1b4:	cmp	w8, #0x1
    b1b8:	b.ne	b1dc <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x2fc>  // b.any
    b1bc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b1c0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b1c4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b1c8:	add	x0, x0, #0x0
    b1cc:	add	x1, x1, #0x0
    b1d0:	add	x3, x3, #0x0
    b1d4:	mov	w2, #0xb8                  	// #184
    b1d8:	bl	0 <__assert_fail>
    b1dc:	sub	x8, x29, #0x40
    b1e0:	add	x0, sp, #0x20
    b1e4:	sub	x22, x29, #0x40
    b1e8:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    b1ec:	ldur	x1, [x29, #-64]
    b1f0:	add	x22, x22, #0x10
    b1f4:	cmp	x1, x22
    b1f8:	b.ne	b21c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x33c>  // b.any
    b1fc:	ldur	x2, [x29, #-56]
    b200:	cbz	x2, b258 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x378>
    b204:	ldur	x0, [x29, #-32]
    b208:	cmp	x2, #0x1
    b20c:	b.ne	b254 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x374>  // b.any
    b210:	ldrb	w8, [x1]
    b214:	strb	w8, [x0]
    b218:	b	b258 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x378>
    b21c:	ldur	x8, [x29, #-32]
    b220:	ldur	x9, [x29, #-16]
    b224:	ldur	q0, [x24, #8]
    b228:	stur	x1, [x29, #-32]
    b22c:	cmp	x8, x23
    b230:	csel	x8, xzr, x8, eq  // eq = none
    b234:	stur	q0, [x24, #40]
    b238:	cbnz	x8, b248 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x368>
    b23c:	mov	x8, x22
    b240:	stur	x22, [x29, #-64]
    b244:	b	b26c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x38c>
    b248:	stur	x8, [x29, #-64]
    b24c:	stur	x9, [x29, #-48]
    b250:	b	b26c <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x38c>
    b254:	bl	0 <memcpy>
    b258:	ldur	x8, [x29, #-56]
    b25c:	ldur	x9, [x29, #-32]
    b260:	stur	x8, [x29, #-24]
    b264:	strb	wzr, [x9, x8]
    b268:	ldur	x8, [x29, #-64]
    b26c:	stur	xzr, [x29, #-56]
    b270:	strb	wzr, [x8]
    b274:	ldur	x0, [x29, #-64]
    b278:	cmp	x0, x22
    b27c:	b.eq	b284 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x3a4>  // b.none
    b280:	bl	0 <_ZdlPv>
    b284:	ldur	x0, [x29, #-120]
    b288:	sub	x8, x29, #0x78
    b28c:	add	x8, x8, #0x10
    b290:	cmp	x0, x8
    b294:	b.eq	b008 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x128>  // b.none
    b298:	bl	0 <_ZdlPv>
    b29c:	b	b008 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE+0x128>

000000000000b2a0 <_ZN4llvm6Record17resolveReferencesEv>:
    b2a0:	sub	sp, sp, #0x90
    b2a4:	stp	x29, x30, [sp, #112]
    b2a8:	stp	x20, x19, [sp, #128]
    b2ac:	add	x29, sp, #0x70
    b2b0:	adrp	x8, e08 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5fc>
    b2b4:	ldr	x8, [x8]
    b2b8:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    b2bc:	ldr	d0, [x10]
    b2c0:	add	x9, sp, #0x8
    b2c4:	mov	w10, #0x1                   	// #1
    b2c8:	add	x19, x8, #0x10
    b2cc:	add	x20, x9, #0x48
    b2d0:	add	x1, sp, #0x8
    b2d4:	mov	x2, xzr
    b2d8:	stp	xzr, xzr, [sp, #40]
    b2dc:	str	xzr, [sp, #32]
    b2e0:	str	wzr, [sp, #56]
    b2e4:	stp	x19, x0, [sp, #8]
    b2e8:	str	x20, [sp, #64]
    b2ec:	str	d0, [sp, #72]
    b2f0:	strb	w10, [sp, #24]
    b2f4:	bl	aee0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    b2f8:	ldr	x0, [sp, #64]
    b2fc:	str	x19, [sp, #8]
    b300:	cmp	x0, x20
    b304:	b.eq	b30c <_ZN4llvm6Record17resolveReferencesEv+0x6c>  // b.none
    b308:	bl	0 <free>
    b30c:	ldr	x0, [sp, #40]
    b310:	bl	0 <_ZdlPv>
    b314:	ldp	x20, x19, [sp, #128]
    b318:	ldp	x29, x30, [sp, #112]
    b31c:	add	sp, sp, #0x90
    b320:	ret

000000000000b324 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE>:
    b324:	sub	sp, sp, #0xd0
    b328:	stp	x29, x30, [sp, #128]
    b32c:	str	x25, [sp, #144]
    b330:	stp	x24, x23, [sp, #160]
    b334:	stp	x22, x21, [sp, #176]
    b338:	stp	x20, x19, [sp, #192]
    b33c:	add	x29, sp, #0x80
    b340:	ldr	x8, [x1, #8]
    b344:	sturb	wzr, [x29, #-24]
    b348:	adrp	x9, e38 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x62c>
    b34c:	ldr	x9, [x9]
    b350:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    b354:	ldr	d0, [x10]
    b358:	add	x10, sp, #0x8
    b35c:	add	x9, x9, #0x10
    b360:	add	x20, x10, #0x10
    b364:	stur	x1, [x29, #-16]
    b368:	sturb	wzr, [x29, #-8]
    b36c:	stp	x9, x8, [x29, #-40]
    b370:	str	x20, [sp, #8]
    b374:	str	d0, [sp, #16]
    b378:	ldr	w2, [x0, #48]
    b37c:	mov	x19, x0
    b380:	cmp	w2, #0x9
    b384:	b.cc	b39c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x78>  // b.lo, b.ul, b.last
    b388:	add	x0, sp, #0x8
    b38c:	mov	w3, #0x8                   	// #8
    b390:	mov	x1, x20
    b394:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b398:	ldr	w2, [x19, #48]
    b39c:	mov	w8, w2
    b3a0:	lsl	x23, x8, #3
    b3a4:	cbz	x23, b454 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    b3a8:	mov	w24, wzr
    b3ac:	add	x25, x19, #0x38
    b3b0:	ldr	x21, [x25]
    b3b4:	sub	x1, x29, #0x28
    b3b8:	ldr	x8, [x21]
    b3bc:	mov	x0, x21
    b3c0:	ldr	x8, [x8, #96]
    b3c4:	blr	x8
    b3c8:	ldp	w8, w9, [sp, #16]
    b3cc:	mov	x22, x0
    b3d0:	cmp	w8, w9
    b3d4:	b.cs	b410 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xec>  // b.hs, b.nlast
    b3d8:	ldr	x9, [sp, #8]
    b3dc:	str	x22, [x9, w8, uxtw #3]
    b3e0:	ldp	w8, w9, [sp, #16]
    b3e4:	cmp	w8, w9
    b3e8:	b.cs	b48c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x168>  // b.hs, b.nlast
    b3ec:	cmp	x22, x21
    b3f0:	add	x2, x8, #0x1
    b3f4:	cset	w8, ne  // ne = any
    b3f8:	subs	x23, x23, #0x8
    b3fc:	orr	w24, w24, w8
    b400:	add	x25, x25, #0x8
    b404:	str	w2, [sp, #16]
    b408:	b.ne	b3b0 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x8c>  // b.any
    b40c:	b	b42c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x108>
    b410:	add	x0, sp, #0x8
    b414:	mov	w3, #0x8                   	// #8
    b418:	mov	x1, x20
    b41c:	mov	x2, xzr
    b420:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b424:	ldr	w8, [sp, #16]
    b428:	b	b3d8 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0xb4>
    b42c:	tbz	w24, #0, b454 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    b430:	ldr	x0, [x19, #32]
    b434:	ldr	x1, [sp, #8]
    b438:	bl	a684 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    b43c:	ldurb	w8, [x29, #-8]
    b440:	mov	x19, x0
    b444:	cbnz	w8, b454 <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x130>
    b448:	mov	x0, x19
    b44c:	bl	a8b8 <_ZN4llvm10VarDefInit11instantiateEv>
    b450:	mov	x19, x0
    b454:	ldr	x0, [sp, #8]
    b458:	add	x8, sp, #0x8
    b45c:	add	x8, x8, #0x10
    b460:	cmp	x0, x8
    b464:	b.eq	b46c <_ZNK4llvm10VarDefInit17resolveReferencesERNS_8ResolverE+0x148>  // b.none
    b468:	bl	0 <free>
    b46c:	mov	x0, x19
    b470:	ldp	x20, x19, [sp, #192]
    b474:	ldp	x22, x21, [sp, #176]
    b478:	ldp	x24, x23, [sp, #160]
    b47c:	ldr	x25, [sp, #144]
    b480:	ldp	x29, x30, [sp, #128]
    b484:	add	sp, sp, #0xd0
    b488:	ret
    b48c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b490:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b494:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b498:	add	x0, x0, #0x0
    b49c:	add	x1, x1, #0x0
    b4a0:	add	x3, x3, #0x0
    b4a4:	mov	w2, #0x43                  	// #67
    b4a8:	bl	0 <__assert_fail>

000000000000b4ac <_ZNK4llvm10VarDefInit4FoldEv>:
    b4ac:	sub	sp, sp, #0x60
    b4b0:	stp	x29, x30, [sp, #48]
    b4b4:	str	x21, [sp, #64]
    b4b8:	stp	x20, x19, [sp, #80]
    b4bc:	add	x29, sp, #0x30
    b4c0:	mov	x19, x0
    b4c4:	ldr	x0, [x0, #40]
    b4c8:	cbnz	x0, b52c <_ZNK4llvm10VarDefInit4FoldEv+0x80>
    b4cc:	strb	wzr, [sp, #24]
    b4d0:	adrp	x8, e38 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x62c>
    b4d4:	ldr	x8, [x8]
    b4d8:	str	xzr, [sp, #32]
    b4dc:	strb	wzr, [sp, #40]
    b4e0:	add	x8, x8, #0x10
    b4e4:	stp	x8, xzr, [sp, #8]
    b4e8:	ldr	w8, [x19, #48]
    b4ec:	lsl	x20, x8, #3
    b4f0:	cbz	x20, b524 <_ZNK4llvm10VarDefInit4FoldEv+0x78>
    b4f4:	add	x21, x19, #0x38
    b4f8:	ldr	x0, [x21], #8
    b4fc:	add	x1, sp, #0x8
    b500:	ldr	x8, [x0]
    b504:	ldr	x8, [x8, #96]
    b508:	blr	x8
    b50c:	subs	x20, x20, #0x8
    b510:	b.ne	b4f8 <_ZNK4llvm10VarDefInit4FoldEv+0x4c>  // b.any
    b514:	ldrb	w8, [sp, #40]
    b518:	cbz	w8, b524 <_ZNK4llvm10VarDefInit4FoldEv+0x78>
    b51c:	mov	x0, x19
    b520:	b	b52c <_ZNK4llvm10VarDefInit4FoldEv+0x80>
    b524:	mov	x0, x19
    b528:	bl	a8b8 <_ZN4llvm10VarDefInit11instantiateEv>
    b52c:	ldp	x20, x19, [sp, #80]
    b530:	ldr	x21, [sp, #64]
    b534:	ldp	x29, x30, [sp, #48]
    b538:	add	sp, sp, #0x60
    b53c:	ret

000000000000b540 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev>:
    b540:	sub	sp, sp, #0xa0
    b544:	stp	x29, x30, [sp, #64]
    b548:	str	x27, [sp, #80]
    b54c:	stp	x26, x25, [sp, #96]
    b550:	stp	x24, x23, [sp, #112]
    b554:	stp	x22, x21, [sp, #128]
    b558:	stp	x20, x19, [sp, #144]
    b55c:	add	x29, sp, #0x40
    b560:	ldr	x9, [x0, #32]
    b564:	mov	x20, x0
    b568:	mov	x19, x8
    b56c:	mov	x8, sp
    b570:	ldr	x0, [x9]
    b574:	ldr	x9, [x0]
    b578:	ldr	x9, [x9, #48]
    b57c:	blr	x9
    b580:	ldp	x21, x22, [sp]
    b584:	add	x8, sp, #0x20
    b588:	add	x23, x8, #0x10
    b58c:	str	x23, [sp, #32]
    b590:	cbnz	x21, b598 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x58>
    b594:	cbnz	x22, b7ac <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x26c>
    b598:	cmp	x22, #0x10
    b59c:	str	x22, [x29, #24]
    b5a0:	b.cc	b5c8 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x88>  // b.lo, b.ul, b.last
    b5a4:	add	x0, sp, #0x20
    b5a8:	add	x1, x29, #0x18
    b5ac:	mov	x2, xzr
    b5b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b5b4:	ldr	x8, [x29, #24]
    b5b8:	str	x0, [sp, #32]
    b5bc:	str	x8, [sp, #48]
    b5c0:	cbnz	x22, b5d0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x90>
    b5c4:	b	b5f0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b5c8:	mov	x0, x23
    b5cc:	cbz	x22, b5f0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b5d0:	cmp	x22, #0x1
    b5d4:	b.ne	b5e4 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xa4>  // b.any
    b5d8:	ldrb	w8, [x21]
    b5dc:	strb	w8, [x0]
    b5e0:	b	b5f0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xb0>
    b5e4:	mov	x1, x21
    b5e8:	mov	x2, x22
    b5ec:	bl	0 <memcpy>
    b5f0:	ldr	x8, [x29, #24]
    b5f4:	ldr	x9, [sp, #32]
    b5f8:	str	x8, [sp, #40]
    b5fc:	strb	wzr, [x9, x8]
    b600:	ldr	x8, [sp, #40]
    b604:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b608:	cmp	x8, x9
    b60c:	b.eq	b7a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.none
    b610:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b614:	add	x1, x1, #0x0
    b618:	add	x0, sp, #0x20
    b61c:	mov	w2, #0x1                   	// #1
    b620:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b624:	ldr	x0, [sp]
    b628:	mov	x8, sp
    b62c:	add	x8, x8, #0x10
    b630:	cmp	x0, x8
    b634:	b.eq	b63c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0xfc>  // b.none
    b638:	bl	0 <_ZdlPv>
    b63c:	ldr	w8, [x20, #48]
    b640:	lsl	x22, x8, #3
    b644:	cbz	x22, b6dc <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x19c>
    b648:	add	x24, x20, #0x38
    b64c:	mov	x8, sp
    b650:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    b654:	adrp	x27, 0 <_ZNK4llvm5RecTy4dumpEv>
    b658:	add	x20, x20, #0x0
    b65c:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    b660:	add	x26, x8, #0x10
    b664:	add	x27, x27, #0x0
    b668:	b	b67c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x13c>
    b66c:	subs	x22, x22, #0x8
    b670:	add	x24, x24, #0x8
    b674:	mov	x20, x27
    b678:	b.eq	b6dc <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x19c>  // b.none
    b67c:	ldr	x21, [x24]
    b680:	mov	x0, x20
    b684:	bl	0 <strlen>
    b688:	ldr	x8, [sp, #40]
    b68c:	sub	x8, x25, x8
    b690:	cmp	x8, x0
    b694:	b.cc	b7a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.lo, b.ul, b.last
    b698:	mov	x2, x0
    b69c:	add	x0, sp, #0x20
    b6a0:	mov	x1, x20
    b6a4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b6a8:	ldr	x8, [x21]
    b6ac:	mov	x0, x21
    b6b0:	ldr	x9, [x8, #40]
    b6b4:	mov	x8, sp
    b6b8:	blr	x9
    b6bc:	ldp	x1, x2, [sp]
    b6c0:	add	x0, sp, #0x20
    b6c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b6c8:	ldr	x0, [sp]
    b6cc:	cmp	x0, x26
    b6d0:	b.eq	b66c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x12c>  // b.none
    b6d4:	bl	0 <_ZdlPv>
    b6d8:	b	b66c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x12c>
    b6dc:	ldp	x20, x21, [sp, #32]
    b6e0:	add	x0, x19, #0x10
    b6e4:	str	x0, [x19]
    b6e8:	cbnz	x20, b6f0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1b0>
    b6ec:	cbnz	x21, b7ac <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x26c>
    b6f0:	cmp	x21, #0x10
    b6f4:	str	x21, [sp]
    b6f8:	b.cc	b718 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1d8>  // b.lo, b.ul, b.last
    b6fc:	mov	x1, sp
    b700:	mov	x0, x19
    b704:	mov	x2, xzr
    b708:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    b70c:	ldr	x8, [sp]
    b710:	str	x0, [x19]
    b714:	str	x8, [x19, #16]
    b718:	cbz	x21, b73c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1fc>
    b71c:	cmp	x21, #0x1
    b720:	b.ne	b730 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1f0>  // b.any
    b724:	ldrb	w8, [x20]
    b728:	strb	w8, [x0]
    b72c:	b	b73c <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x1fc>
    b730:	mov	x1, x20
    b734:	mov	x2, x21
    b738:	bl	0 <memcpy>
    b73c:	ldr	x8, [sp]
    b740:	ldr	x9, [x19]
    b744:	str	x8, [x19, #8]
    b748:	strb	wzr, [x9, x8]
    b74c:	ldr	x8, [x19, #8]
    b750:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b754:	cmp	x8, x9
    b758:	b.eq	b7a0 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x260>  // b.none
    b75c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b760:	add	x1, x1, #0x0
    b764:	mov	w2, #0x1                   	// #1
    b768:	mov	x0, x19
    b76c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b770:	ldr	x0, [sp, #32]
    b774:	cmp	x0, x23
    b778:	b.eq	b780 <_ZNK4llvm10VarDefInit11getAsStringB5cxx11Ev+0x240>  // b.none
    b77c:	bl	0 <_ZdlPv>
    b780:	ldp	x20, x19, [sp, #144]
    b784:	ldp	x22, x21, [sp, #128]
    b788:	ldp	x24, x23, [sp, #112]
    b78c:	ldp	x26, x25, [sp, #96]
    b790:	ldr	x27, [sp, #80]
    b794:	ldp	x29, x30, [sp, #64]
    b798:	add	sp, sp, #0xa0
    b79c:	ret
    b7a0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b7a4:	add	x0, x0, #0x0
    b7a8:	bl	0 <_ZSt20__throw_length_errorPKc>
    b7ac:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b7b0:	add	x0, x0, #0x0
    b7b4:	bl	0 <_ZSt19__throw_logic_errorPKc>

000000000000b7b8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>:
    b7b8:	sub	sp, sp, #0x50
    b7bc:	stp	x29, x30, [sp, #32]
    b7c0:	stp	x22, x21, [sp, #48]
    b7c4:	stp	x20, x19, [sp, #64]
    b7c8:	add	x29, sp, #0x20
    b7cc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b7d0:	add	x8, x8, #0x0
    b7d4:	ldarb	w8, [x8]
    b7d8:	mov	x19, x1
    b7dc:	mov	x20, x0
    b7e0:	tbz	w8, #0, b878 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xc0>
    b7e4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b7e8:	add	x0, x0, #0x0
    b7ec:	mov	x1, sp
    b7f0:	sub	x2, x29, #0x8
    b7f4:	stp	x20, x19, [sp]
    b7f8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b7fc:	ldur	x21, [x29, #-8]
    b800:	tbz	w0, #0, b810 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x58>
    b804:	ldr	x22, [x21, #16]
    b808:	cbnz	x22, b860 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0xa8>
    b80c:	b	b838 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x80>
    b810:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b814:	add	x0, x0, #0x0
    b818:	mov	x1, sp
    b81c:	mov	x2, sp
    b820:	mov	x3, x21
    b824:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b828:	ldr	q0, [sp]
    b82c:	mov	x21, x0
    b830:	str	xzr, [x0, #16]
    b834:	str	q0, [x0]
    b838:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b83c:	add	x0, x0, #0x0
    b840:	mov	w1, #0x28                  	// #40
    b844:	mov	w2, #0x4                   	// #4
    b848:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b84c:	mov	x1, x20
    b850:	mov	x2, x19
    b854:	mov	x22, x0
    b858:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    b85c:	str	x22, [x21, #16]
    b860:	mov	x0, x22
    b864:	ldp	x20, x19, [sp, #64]
    b868:	ldp	x22, x21, [sp, #48]
    b86c:	ldp	x29, x30, [sp, #32]
    b870:	add	sp, sp, #0x50
    b874:	ret
    b878:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    b87c:	add	x21, x21, #0x0
    b880:	mov	x0, x21
    b884:	bl	0 <__cxa_guard_acquire>
    b888:	cbz	w0, b7e4 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2c>
    b88c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b890:	adrp	x2, 0 <__dso_handle>
    b894:	movi	v0.2d, #0x0
    b898:	add	x1, x21, #0x230
    b89c:	add	x0, x0, #0x0
    b8a0:	add	x2, x2, #0x0
    b8a4:	str	wzr, [x21, #584]
    b8a8:	str	xzr, [x21, #576]
    b8ac:	str	q0, [x21, #560]
    b8b0:	bl	0 <__cxa_atexit>
    b8b4:	mov	x0, x21
    b8b8:	bl	0 <__cxa_guard_release>
    b8bc:	b	b7e4 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE+0x2c>

000000000000b8c0 <_ZNK4llvm9FieldInit6getBitEj>:
    b8c0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    b8c4:	ldr	x8, [x0, #16]
    b8c8:	ldr	x9, [x9]
    b8cc:	cmp	x8, x9
    b8d0:	b.eq	b8d8 <_ZNK4llvm9FieldInit6getBitEj+0x18>  // b.none
    b8d4:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>
    b8d8:	ret

000000000000b8dc <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE>:
    b8dc:	stp	x29, x30, [sp, #-32]!
    b8e0:	stp	x20, x19, [sp, #16]
    b8e4:	mov	x29, sp
    b8e8:	mov	x20, x0
    b8ec:	ldr	x0, [x0, #24]
    b8f0:	mov	x19, x1
    b8f4:	ldr	x8, [x0]
    b8f8:	ldr	x8, [x8, #96]
    b8fc:	blr	x8
    b900:	ldr	x8, [x20, #24]
    b904:	cmp	x0, x8
    b908:	b.eq	b924 <_ZNK4llvm9FieldInit17resolveReferencesERNS_8ResolverE+0x48>  // b.none
    b90c:	ldr	x1, [x20, #32]
    b910:	bl	b7b8 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    b914:	ldr	x1, [x19, #8]
    b918:	ldp	x20, x19, [sp, #16]
    b91c:	ldp	x29, x30, [sp], #32
    b920:	b	b934 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    b924:	mov	x0, x20
    b928:	ldp	x20, x19, [sp, #16]
    b92c:	ldp	x29, x30, [sp], #32
    b930:	ret

000000000000b934 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>:
    b934:	sub	sp, sp, #0x170
    b938:	stp	x29, x30, [sp, #288]
    b93c:	str	x28, [sp, #304]
    b940:	stp	x24, x23, [sp, #320]
    b944:	stp	x22, x21, [sp, #336]
    b948:	stp	x20, x19, [sp, #352]
    b94c:	add	x29, sp, #0x120
    b950:	ldr	x8, [x0, #24]
    b954:	cbz	x8, b9c4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x90>
    b958:	ldrb	w9, [x8, #8]
    b95c:	mov	x19, x0
    b960:	cmp	w9, #0x6
    b964:	b.ne	b9a0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x6c>  // b.any
    b968:	ldr	x8, [x8, #24]
    b96c:	cmp	x8, x1
    b970:	b.eq	b9e4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0xb0>  // b.none
    b974:	ldr	x9, [x19, #32]
    b978:	ldr	x8, [x8, #72]
    b97c:	ldr	x10, [x8], #24
    b980:	cmp	x10, x9
    b984:	b.ne	b97c <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x48>  // b.any
    b988:	ldur	x20, [x8, #-8]
    b98c:	ldr	x8, [x20]
    b990:	mov	x0, x20
    b994:	ldr	x8, [x8, #24]
    b998:	blr	x8
    b99c:	tbnz	w0, #0, b9a4 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE+0x70>
    b9a0:	mov	x20, x19
    b9a4:	mov	x0, x20
    b9a8:	ldp	x20, x19, [sp, #352]
    b9ac:	ldp	x22, x21, [sp, #336]
    b9b0:	ldp	x24, x23, [sp, #320]
    b9b4:	ldr	x28, [sp, #304]
    b9b8:	ldp	x29, x30, [sp, #288]
    b9bc:	add	sp, sp, #0x170
    b9c0:	ret
    b9c4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    b9c8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    b9cc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    b9d0:	add	x0, x0, #0x0
    b9d4:	add	x1, x1, #0x0
    b9d8:	add	x3, x3, #0x0
    b9dc:	mov	w2, #0x69                  	// #105
    b9e0:	bl	0 <__assert_fail>
    b9e4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    b9e8:	add	x8, x8, #0x0
    b9ec:	mov	w22, #0x103                 	// #259
    b9f0:	ldr	x20, [x1, #8]
    b9f4:	ldr	w21, [x1, #16]
    b9f8:	stp	x8, xzr, [x29, #-120]
    b9fc:	sturh	w22, [x29, #-104]
    ba00:	ldr	x0, [x19, #32]
    ba04:	add	x23, sp, #0x70
    ba08:	ldr	x8, [x0]
    ba0c:	ldr	x9, [x8, #48]
    ba10:	add	x8, sp, #0x70
    ba14:	blr	x9
    ba18:	mov	w24, #0x104                 	// #260
    ba1c:	sub	x8, x29, #0x60
    ba20:	sub	x0, x29, #0x78
    ba24:	add	x1, sp, #0x90
    ba28:	strh	w24, [sp, #160]
    ba2c:	stp	x23, xzr, [sp, #144]
    ba30:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ba34:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ba38:	add	x8, x8, #0x0
    ba3c:	stp	x8, xzr, [sp, #88]
    ba40:	sub	x8, x29, #0x48
    ba44:	sub	x0, x29, #0x60
    ba48:	add	x1, sp, #0x58
    ba4c:	strh	w22, [sp, #104]
    ba50:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ba54:	ldr	x0, [x19, #24]
    ba58:	add	x19, sp, #0x20
    ba5c:	ldr	x8, [x0]
    ba60:	ldr	x9, [x8, #40]
    ba64:	add	x8, sp, #0x20
    ba68:	blr	x9
    ba6c:	sub	x8, x29, #0x30
    ba70:	sub	x0, x29, #0x48
    ba74:	add	x1, sp, #0x40
    ba78:	strh	w24, [sp, #80]
    ba7c:	stp	x19, xzr, [sp, #64]
    ba80:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ba84:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ba88:	add	x8, x8, #0x0
    ba8c:	stp	x8, xzr, [sp, #8]
    ba90:	sub	x8, x29, #0x18
    ba94:	sub	x0, x29, #0x30
    ba98:	add	x1, sp, #0x8
    ba9c:	strh	w22, [sp, #24]
    baa0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    baa4:	sub	x2, x29, #0x18
    baa8:	mov	x0, x20
    baac:	mov	x1, x21
    bab0:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000bab4 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE>:
    bab4:	stp	x29, x30, [sp, #-64]!
    bab8:	str	x23, [sp, #16]
    babc:	stp	x22, x21, [sp, #32]
    bac0:	stp	x20, x19, [sp, #48]
    bac4:	mov	x29, sp
    bac8:	ldr	x8, [x0, #40]
    bacc:	ldr	w22, [x0, #32]
    bad0:	mov	x20, x0
    bad4:	mov	x19, x1
    bad8:	mov	x0, x1
    badc:	mov	x1, x8
    bae0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bae4:	cbz	w22, bb1c <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x68>
    bae8:	add	x20, x20, #0x30
    baec:	lsl	x22, x22, #3
    baf0:	mov	x21, xzr
    baf4:	add	x23, x20, x22
    baf8:	ldr	x1, [x20, x21]
    bafc:	mov	x0, x19
    bb00:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bb04:	ldr	x1, [x23, x21]
    bb08:	mov	x0, x19
    bb0c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bb10:	add	x21, x21, #0x8
    bb14:	cmp	x22, x21
    bb18:	b.ne	baf8 <_ZNK4llvm10CondOpInit7ProfileERNS_16FoldingSetNodeIDE+0x44>  // b.any
    bb1c:	ldp	x20, x19, [sp, #48]
    bb20:	ldp	x22, x21, [sp, #32]
    bb24:	ldr	x23, [sp, #16]
    bb28:	ldp	x29, x30, [sp], #64
    bb2c:	ret

000000000000bb30 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>:
    bb30:	sub	sp, sp, #0xf0
    bb34:	stp	x29, x30, [sp, #144]
    bb38:	str	x27, [sp, #160]
    bb3c:	stp	x26, x25, [sp, #176]
    bb40:	stp	x24, x23, [sp, #192]
    bb44:	stp	x22, x21, [sp, #208]
    bb48:	stp	x20, x19, [sp, #224]
    bb4c:	add	x29, sp, #0x90
    bb50:	cmp	x1, x3
    bb54:	b.ne	bd24 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x1f4>  // b.any
    bb58:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    bb5c:	add	x8, x8, #0x0
    bb60:	ldarb	w8, [x8]
    bb64:	mov	x22, x4
    bb68:	mov	x19, x2
    bb6c:	mov	x20, x1
    bb70:	mov	x21, x0
    bb74:	tbz	w8, #0, bccc <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x19c>
    bb78:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    bb7c:	ldr	d0, [x8]
    bb80:	mov	x8, sp
    bb84:	add	x8, x8, #0x10
    bb88:	mov	x0, sp
    bb8c:	mov	x1, x22
    bb90:	str	x8, [sp]
    bb94:	str	d0, [sp, #8]
    bb98:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bb9c:	lsl	x23, x20, #3
    bba0:	cbz	x20, bbd0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xa0>
    bba4:	mov	x24, x23
    bba8:	mov	x25, x19
    bbac:	mov	x26, x21
    bbb0:	ldr	x1, [x26], #8
    bbb4:	mov	x0, sp
    bbb8:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bbbc:	ldr	x1, [x25], #8
    bbc0:	mov	x0, sp
    bbc4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    bbc8:	subs	x24, x24, #0x8
    bbcc:	b.ne	bbb0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x80>  // b.any
    bbd0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bbd4:	add	x0, x0, #0x0
    bbd8:	mov	x1, sp
    bbdc:	add	x2, x29, #0x18
    bbe0:	str	xzr, [x29, #24]
    bbe4:	mov	x26, sp
    bbe8:	bl	0 <_ZN4llvm14FoldingSetBase19FindNodeOrInsertPosERKNS_16FoldingSetNodeIDERPv>
    bbec:	cbz	x0, bc2c <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xfc>
    bbf0:	sub	x24, x0, #0x18
    bbf4:	ldr	x0, [sp]
    bbf8:	add	x8, x26, #0x10
    bbfc:	cmp	x0, x8
    bc00:	b.eq	bc08 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xd8>  // b.none
    bc04:	bl	0 <free>
    bc08:	mov	x0, x24
    bc0c:	ldp	x20, x19, [sp, #224]
    bc10:	ldp	x22, x21, [sp, #208]
    bc14:	ldp	x24, x23, [sp, #192]
    bc18:	ldp	x26, x25, [sp, #176]
    bc1c:	ldr	x27, [sp, #160]
    bc20:	ldp	x29, x30, [sp, #144]
    bc24:	add	sp, sp, #0xf0
    bc28:	ret
    bc2c:	lsl	x8, x20, #4
    bc30:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bc34:	add	x1, x8, #0x30
    bc38:	add	x0, x0, #0x0
    bc3c:	mov	w2, #0x3                   	// #3
    bc40:	add	x27, x21, x20, lsl #3
    bc44:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    bc48:	str	x22, [x0, #16]
    bc4c:	adrp	x9, 958 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x14c>
    bc50:	ldr	x9, [x9]
    bc54:	mov	w8, #0xf                   	// #15
    bc58:	mov	x25, x0
    bc5c:	mov	x24, x0
    bc60:	subs	x2, x27, x21
    bc64:	strh	w8, [x0, #8]
    bc68:	str	xzr, [x25, #24]!
    bc6c:	add	x8, x9, #0x10
    bc70:	str	x22, [x0, #40]
    bc74:	add	x22, x0, #0x30
    bc78:	str	w20, [x0, #32]
    bc7c:	str	x8, [x0]
    bc80:	b.eq	bc90 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x160>  // b.none
    bc84:	mov	x0, x22
    bc88:	mov	x1, x21
    bc8c:	bl	0 <memmove>
    bc90:	cbz	x23, bca4 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x174>
    bc94:	add	x0, x22, x20, lsl #3
    bc98:	mov	x1, x19
    bc9c:	mov	x2, x23
    bca0:	bl	0 <memmove>
    bca4:	ldr	x2, [x29, #24]
    bca8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bcac:	add	x0, x0, #0x0
    bcb0:	mov	x1, x25
    bcb4:	bl	0 <_ZN4llvm14FoldingSetBase10InsertNodeEPNS0_4NodeEPv>
    bcb8:	ldr	x0, [sp]
    bcbc:	add	x8, x26, #0x10
    bcc0:	cmp	x0, x8
    bcc4:	b.ne	bc04 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xd4>  // b.any
    bcc8:	b	bc08 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0xd8>
    bccc:	adrp	x23, 0 <_ZNK4llvm5RecTy4dumpEv>
    bcd0:	add	x23, x23, #0x0
    bcd4:	mov	x0, x23
    bcd8:	bl	0 <__cxa_guard_acquire>
    bcdc:	cbz	w0, bb78 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    bce0:	add	x24, x23, #0xf8
    bce4:	mov	w1, #0x6                   	// #6
    bce8:	mov	x0, x24
    bcec:	bl	0 <_ZN4llvm14FoldingSetBaseC2Ej>
    bcf0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    bcf4:	ldr	x8, [x8]
    bcf8:	adrp	x0, 0 <_ZN4llvm14FoldingSetBaseD2Ev>
    bcfc:	adrp	x2, 0 <__dso_handle>
    bd00:	add	x2, x2, #0x0
    bd04:	add	x8, x8, #0x10
    bd08:	str	x8, [x23, #248]
    bd0c:	ldr	x0, [x0]
    bd10:	mov	x1, x24
    bd14:	bl	0 <__cxa_atexit>
    bd18:	mov	x0, x23
    bd1c:	bl	0 <__cxa_guard_release>
    bd20:	b	bb78 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE+0x48>
    bd24:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bd28:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    bd2c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    bd30:	add	x0, x0, #0x0
    bd34:	add	x1, x1, #0x0
    bd38:	add	x3, x3, #0x0
    bd3c:	mov	w2, #0x711                 	// #1809
    bd40:	bl	0 <__assert_fail>

000000000000bd44 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE>:
    bd44:	sub	sp, sp, #0xc0
    bd48:	str	d8, [sp, #96]
    bd4c:	stp	x29, x30, [sp, #104]
    bd50:	str	x27, [sp, #120]
    bd54:	stp	x26, x25, [sp, #128]
    bd58:	stp	x24, x23, [sp, #144]
    bd5c:	stp	x22, x21, [sp, #160]
    bd60:	stp	x20, x19, [sp, #176]
    bd64:	add	x29, sp, #0x60
    bd68:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    bd6c:	ldr	d8, [x8]
    bd70:	add	x8, sp, #0x30
    bd74:	add	x21, x8, #0x10
    bd78:	str	x21, [sp, #48]
    bd7c:	str	d8, [sp, #56]
    bd80:	ldr	w8, [x0, #32]
    bd84:	mov	x20, x1
    bd88:	mov	x19, x0
    bd8c:	add	x25, x0, #0x30
    bd90:	lsl	x26, x8, #3
    bd94:	mov	w24, wzr
    bd98:	cbz	x26, be20 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xdc>
    bd9c:	mov	x27, x25
    bda0:	ldr	x22, [x27]
    bda4:	mov	x1, x20
    bda8:	ldr	x8, [x22]
    bdac:	mov	x0, x22
    bdb0:	ldr	x8, [x8, #96]
    bdb4:	blr	x8
    bdb8:	ldp	w8, w9, [sp, #56]
    bdbc:	mov	x23, x0
    bdc0:	cmp	w8, w9
    bdc4:	b.cs	be00 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xbc>  // b.hs, b.nlast
    bdc8:	ldr	x9, [sp, #48]
    bdcc:	str	x23, [x9, w8, uxtw #3]
    bdd0:	ldp	w8, w9, [sp, #56]
    bdd4:	cmp	w8, w9
    bdd8:	b.cs	bf40 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1fc>  // b.hs, b.nlast
    bddc:	add	w8, w8, #0x1
    bde0:	cmp	x23, x22
    bde4:	str	w8, [sp, #56]
    bde8:	cset	w8, ne  // ne = any
    bdec:	subs	x26, x26, #0x8
    bdf0:	orr	w24, w24, w8
    bdf4:	add	x27, x27, #0x8
    bdf8:	b.ne	bda0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x5c>  // b.any
    bdfc:	b	be1c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xd8>
    be00:	add	x0, sp, #0x30
    be04:	mov	w3, #0x8                   	// #8
    be08:	mov	x1, x21
    be0c:	mov	x2, xzr
    be10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    be14:	ldr	w8, [sp, #56]
    be18:	b	bdc8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x84>
    be1c:	ldr	w8, [x19, #32]
    be20:	mov	x9, sp
    be24:	lsl	x26, x8, #3
    be28:	add	x21, x9, #0x10
    be2c:	str	x21, [sp]
    be30:	str	d8, [sp, #8]
    be34:	cbz	x26, bec0 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x17c>
    be38:	add	x25, x25, x26
    be3c:	ldr	x22, [x25]
    be40:	mov	x1, x20
    be44:	ldr	x8, [x22]
    be48:	mov	x0, x22
    be4c:	ldr	x8, [x8, #96]
    be50:	blr	x8
    be54:	ldp	w8, w9, [sp, #8]
    be58:	mov	x23, x0
    be5c:	cmp	w8, w9
    be60:	b.cs	be9c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x158>  // b.hs, b.nlast
    be64:	ldr	x9, [sp]
    be68:	str	x23, [x9, w8, uxtw #3]
    be6c:	ldp	w8, w9, [sp, #8]
    be70:	cmp	w8, w9
    be74:	b.cs	bf40 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1fc>  // b.hs, b.nlast
    be78:	cmp	x23, x22
    be7c:	add	x3, x8, #0x1
    be80:	cset	w8, ne  // ne = any
    be84:	subs	x26, x26, #0x8
    be88:	orr	w24, w24, w8
    be8c:	add	x25, x25, #0x8
    be90:	str	w3, [sp, #8]
    be94:	b.ne	be3c <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0xf8>  // b.any
    be98:	b	beb8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x174>
    be9c:	mov	x0, sp
    bea0:	mov	w3, #0x8                   	// #8
    bea4:	mov	x1, x21
    bea8:	mov	x2, xzr
    beac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    beb0:	ldr	w8, [sp, #8]
    beb4:	b	be64 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x120>
    beb8:	tbnz	w24, #0, bec8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x184>
    bebc:	b	bee8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1a4>
    bec0:	tbz	w24, #0, bee8 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1a4>
    bec4:	mov	x3, xzr
    bec8:	ldr	x0, [sp, #48]
    becc:	ldr	w1, [sp, #56]
    bed0:	ldr	x2, [sp]
    bed4:	ldr	x4, [x19, #40]
    bed8:	bl	bb30 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    bedc:	ldr	x1, [x20, #8]
    bee0:	bl	bf60 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    bee4:	mov	x19, x0
    bee8:	ldr	x0, [sp]
    beec:	mov	x8, sp
    bef0:	add	x8, x8, #0x10
    bef4:	cmp	x0, x8
    bef8:	b.eq	bf00 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1bc>  // b.none
    befc:	bl	0 <free>
    bf00:	ldr	x0, [sp, #48]
    bf04:	add	x8, sp, #0x30
    bf08:	add	x8, x8, #0x10
    bf0c:	cmp	x0, x8
    bf10:	b.eq	bf18 <_ZNK4llvm10CondOpInit17resolveReferencesERNS_8ResolverE+0x1d4>  // b.none
    bf14:	bl	0 <free>
    bf18:	mov	x0, x19
    bf1c:	ldp	x20, x19, [sp, #176]
    bf20:	ldp	x22, x21, [sp, #160]
    bf24:	ldp	x24, x23, [sp, #144]
    bf28:	ldp	x26, x25, [sp, #128]
    bf2c:	ldr	x27, [sp, #120]
    bf30:	ldp	x29, x30, [sp, #104]
    bf34:	ldr	d8, [sp, #96]
    bf38:	add	sp, sp, #0xc0
    bf3c:	ret
    bf40:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    bf44:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    bf48:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    bf4c:	add	x0, x0, #0x0
    bf50:	add	x1, x1, #0x0
    bf54:	add	x3, x3, #0x0
    bf58:	mov	w2, #0x43                  	// #67
    bf5c:	bl	0 <__assert_fail>

000000000000bf60 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>:
    bf60:	sub	sp, sp, #0xc0
    bf64:	stp	x29, x30, [sp, #128]
    bf68:	stp	x24, x23, [sp, #144]
    bf6c:	stp	x22, x21, [sp, #160]
    bf70:	stp	x20, x19, [sp, #176]
    bf74:	add	x29, sp, #0x80
    bf78:	ldr	w8, [x0, #32]
    bf7c:	mov	x19, x0
    bf80:	mov	x20, x1
    bf84:	cbz	w8, bfdc <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x7c>
    bf88:	adrp	x21, 30 <_ZNK4llvm5RecTy4dumpEv+0x30>
    bf8c:	ldr	x21, [x21]
    bf90:	mov	x23, xzr
    bf94:	add	x24, x19, #0x30
    bf98:	ldr	x0, [x24, x23, lsl #3]
    bf9c:	add	w8, w23, w8
    bfa0:	ldr	x22, [x24, w8, uxtw #3]
    bfa4:	mov	x1, x21
    bfa8:	ldr	x9, [x0]
    bfac:	ldr	x8, [x9, #64]
    bfb0:	blr	x8
    bfb4:	cbz	x0, c044 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0xe4>
    bfb8:	ldrb	w8, [x0, #8]
    bfbc:	cmp	w8, #0x8
    bfc0:	b.ne	c044 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0xe4>  // b.any
    bfc4:	ldr	x8, [x0, #24]
    bfc8:	cbnz	x8, c060 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x100>
    bfcc:	ldr	w8, [x19, #32]
    bfd0:	add	x23, x23, #0x1
    bfd4:	cmp	x23, x8
    bfd8:	b.cc	bf98 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE+0x38>  // b.lo, b.ul, b.last
    bfdc:	ldr	x21, [x20, #8]
    bfe0:	ldr	w22, [x20, #16]
    bfe4:	mov	x0, x20
    bfe8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    bfec:	mov	w8, #0x305                 	// #773
    bff0:	adrp	x10, 0 <_ZNK4llvm5RecTy4dumpEv>
    bff4:	stp	x0, x1, [sp, #64]
    bff8:	add	x9, sp, #0x40
    bffc:	add	x10, x10, #0x0
    c000:	sturh	w8, [x29, #-32]
    c004:	add	x8, sp, #0x8
    c008:	mov	x0, x19
    c00c:	stp	x9, x10, [x29, #-48]
    c010:	add	x20, sp, #0x8
    c014:	bl	c088 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>
    c018:	mov	w8, #0x104                 	// #260
    c01c:	strh	w8, [sp, #56]
    c020:	sub	x8, x29, #0x18
    c024:	sub	x0, x29, #0x30
    c028:	add	x1, sp, #0x28
    c02c:	stp	x20, xzr, [sp, #40]
    c030:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    c034:	sub	x2, x29, #0x18
    c038:	mov	x0, x21
    c03c:	mov	x1, x22
    c040:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c044:	mov	x0, x19
    c048:	ldp	x20, x19, [sp, #176]
    c04c:	ldp	x22, x21, [sp, #160]
    c050:	ldp	x24, x23, [sp, #144]
    c054:	ldp	x29, x30, [sp, #128]
    c058:	add	sp, sp, #0xc0
    c05c:	ret
    c060:	ldr	x8, [x22]
    c064:	ldr	x1, [x19, #40]
    c068:	mov	x0, x22
    c06c:	ldp	x20, x19, [sp, #176]
    c070:	ldr	x2, [x8, #64]
    c074:	ldp	x22, x21, [sp, #160]
    c078:	ldp	x24, x23, [sp, #144]
    c07c:	ldp	x29, x30, [sp, #128]
    c080:	add	sp, sp, #0xc0
    c084:	br	x2

000000000000c088 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev>:
    c088:	sub	sp, sp, #0xc0
    c08c:	stp	x29, x30, [sp, #96]
    c090:	stp	x28, x27, [sp, #112]
    c094:	stp	x26, x25, [sp, #128]
    c098:	stp	x24, x23, [sp, #144]
    c09c:	stp	x22, x21, [sp, #160]
    c0a0:	stp	x20, x19, [sp, #176]
    c0a4:	add	x29, sp, #0x60
    c0a8:	sub	x9, x29, #0x20
    c0ac:	mov	w11, #0x6321                	// #25377
    c0b0:	mov	w10, #0x2864                	// #10340
    c0b4:	movk	w11, #0x6e6f, lsl #16
    c0b8:	mov	w12, #0x6                   	// #6
    c0bc:	add	x23, x9, #0x10
    c0c0:	sturh	w10, [x29, #-12]
    c0c4:	stur	w11, [x29, #-16]
    c0c8:	stp	x23, x12, [x29, #-32]
    c0cc:	sturb	wzr, [x29, #-10]
    c0d0:	ldr	w9, [x0, #32]
    c0d4:	mov	x19, x8
    c0d8:	cbz	w9, c284 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1fc>
    c0dc:	add	x8, sp, #0x20
    c0e0:	mov	x9, sp
    c0e4:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    c0e8:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    c0ec:	mov	x20, x0
    c0f0:	mov	x24, xzr
    c0f4:	add	x25, x0, #0x30
    c0f8:	mov	x26, #0x3fffffffffffffff    	// #4611686018427387903
    c0fc:	add	x21, x21, #0x0
    c100:	add	x27, x8, #0x10
    c104:	add	x28, x9, #0x10
    c108:	add	x22, x22, #0x0
    c10c:	b	c11c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x94>
    c110:	add	x24, x24, #0x1
    c114:	cmp	x24, w8, uxtw
    c118:	b.cs	c230 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1a8>  // b.hs, b.nlast
    c11c:	ldr	x0, [x25, x24, lsl #3]
    c120:	ldr	x8, [x0]
    c124:	ldr	x9, [x8, #40]
    c128:	mov	x8, sp
    c12c:	blr	x9
    c130:	ldr	x8, [sp, #8]
    c134:	orr	x8, x8, #0x1
    c138:	cmp	x8, x26
    c13c:	b.eq	c308 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    c140:	mov	x0, sp
    c144:	mov	w2, #0x2                   	// #2
    c148:	mov	x1, x21
    c14c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c150:	str	x27, [sp, #32]
    c154:	mov	x8, x0
    c158:	ldr	x9, [x8], #16
    c15c:	cmp	x9, x8
    c160:	b.eq	c174 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xec>  // b.none
    c164:	str	x9, [sp, #32]
    c168:	ldr	x9, [x0, #16]
    c16c:	str	x9, [sp, #48]
    c170:	b	c17c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0xf4>
    c174:	ldr	q0, [x9]
    c178:	str	q0, [x27]
    c17c:	ldr	x9, [x0, #8]
    c180:	str	x9, [sp, #40]
    c184:	stp	x8, xzr, [x0]
    c188:	strb	wzr, [x0, #16]
    c18c:	ldp	x1, x2, [sp, #32]
    c190:	sub	x0, x29, #0x20
    c194:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c198:	ldr	x0, [sp, #32]
    c19c:	cmp	x0, x27
    c1a0:	b.eq	c1a8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x120>  // b.none
    c1a4:	bl	0 <_ZdlPv>
    c1a8:	ldr	x0, [sp]
    c1ac:	cmp	x0, x28
    c1b0:	b.eq	c1b8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x130>  // b.none
    c1b4:	bl	0 <_ZdlPv>
    c1b8:	ldr	w8, [x20, #32]
    c1bc:	cmp	x24, x8
    c1c0:	b.cs	c314 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x28c>  // b.hs, b.nlast
    c1c4:	add	w8, w24, w8
    c1c8:	ldr	x0, [x25, w8, uxtw #3]
    c1cc:	ldr	x8, [x0]
    c1d0:	ldr	x9, [x8, #40]
    c1d4:	add	x8, sp, #0x20
    c1d8:	blr	x9
    c1dc:	ldp	x1, x2, [sp, #32]
    c1e0:	sub	x0, x29, #0x20
    c1e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c1e8:	ldr	x0, [sp, #32]
    c1ec:	cmp	x0, x27
    c1f0:	b.eq	c1f8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x170>  // b.none
    c1f4:	bl	0 <_ZdlPv>
    c1f8:	ldr	w8, [x20, #32]
    c1fc:	sub	w9, w8, #0x1
    c200:	cmp	x24, x9
    c204:	b.eq	c110 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x88>  // b.none
    c208:	ldur	x8, [x29, #-24]
    c20c:	orr	x8, x8, #0x1
    c210:	cmp	x8, x26
    c214:	b.eq	c308 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    c218:	sub	x0, x29, #0x20
    c21c:	mov	w2, #0x2                   	// #2
    c220:	mov	x1, x22
    c224:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c228:	ldr	w8, [x20, #32]
    c22c:	b	c110 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x88>
    c230:	ldp	x21, x20, [x29, #-32]
    c234:	add	x0, x19, #0x10
    c238:	str	x0, [x19]
    c23c:	cbnz	x21, c244 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1bc>
    c240:	cbnz	x20, c334 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x2ac>
    c244:	cmp	x20, #0x10
    c248:	str	x20, [sp, #32]
    c24c:	b.cc	c26c <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x1e4>  // b.lo, b.ul, b.last
    c250:	add	x1, sp, #0x20
    c254:	mov	x0, x19
    c258:	mov	x2, xzr
    c25c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    c260:	ldr	x8, [sp, #32]
    c264:	str	x0, [x19]
    c268:	str	x8, [x19, #16]
    c26c:	cbz	x20, c2a4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x21c>
    c270:	cmp	x20, #0x1
    c274:	b.ne	c298 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x210>  // b.any
    c278:	ldrb	w8, [x21]
    c27c:	strb	w8, [x0]
    c280:	b	c2a4 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x21c>
    c284:	add	x0, x19, #0x10
    c288:	mov	w20, #0x6                   	// #6
    c28c:	mov	x21, x23
    c290:	str	x0, [x19]
    c294:	str	x20, [sp, #32]
    c298:	mov	x1, x21
    c29c:	mov	x2, x20
    c2a0:	bl	0 <memcpy>
    c2a4:	ldr	x8, [sp, #32]
    c2a8:	ldr	x9, [x19]
    c2ac:	str	x8, [x19, #8]
    c2b0:	strb	wzr, [x9, x8]
    c2b4:	ldr	x8, [x19, #8]
    c2b8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    c2bc:	cmp	x8, x9
    c2c0:	b.eq	c308 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x280>  // b.none
    c2c4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c2c8:	add	x1, x1, #0x0
    c2cc:	mov	w2, #0x1                   	// #1
    c2d0:	mov	x0, x19
    c2d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    c2d8:	ldur	x0, [x29, #-32]
    c2dc:	cmp	x0, x23
    c2e0:	b.eq	c2e8 <_ZNK4llvm10CondOpInit11getAsStringB5cxx11Ev+0x260>  // b.none
    c2e4:	bl	0 <_ZdlPv>
    c2e8:	ldp	x20, x19, [sp, #176]
    c2ec:	ldp	x22, x21, [sp, #160]
    c2f0:	ldp	x24, x23, [sp, #144]
    c2f4:	ldp	x26, x25, [sp, #128]
    c2f8:	ldp	x28, x27, [sp, #112]
    c2fc:	ldp	x29, x30, [sp, #96]
    c300:	add	sp, sp, #0xc0
    c304:	ret
    c308:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c30c:	add	x0, x0, #0x0
    c310:	bl	0 <_ZSt20__throw_length_errorPKc>
    c314:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c318:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c31c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c320:	add	x0, x0, #0x0
    c324:	add	x1, x1, #0x0
    c328:	add	x3, x3, #0x0
    c32c:	mov	w2, #0x3bf                 	// #959
    c330:	bl	0 <__assert_fail>
    c334:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c338:	add	x0, x0, #0x0
    c33c:	bl	0 <_ZSt19__throw_logic_errorPKc>

000000000000c340 <_ZNK4llvm10CondOpInit10isConcreteEv>:
    c340:	stp	x29, x30, [sp, #-48]!
    c344:	stp	x22, x21, [sp, #16]
    c348:	stp	x20, x19, [sp, #32]
    c34c:	mov	x29, sp
    c350:	ldr	w8, [x0, #32]
    c354:	add	x20, x0, #0x30
    c358:	lsl	x21, x8, #3
    c35c:	cbz	x21, c388 <_ZNK4llvm10CondOpInit10isConcreteEv+0x48>
    c360:	mov	x19, x0
    c364:	mov	x22, x20
    c368:	ldr	x0, [x22], #8
    c36c:	ldr	x8, [x0]
    c370:	ldr	x8, [x8, #32]
    c374:	blr	x8
    c378:	tbz	w0, #0, c3c4 <_ZNK4llvm10CondOpInit10isConcreteEv+0x84>
    c37c:	subs	x21, x21, #0x8
    c380:	b.ne	c368 <_ZNK4llvm10CondOpInit10isConcreteEv+0x28>  // b.any
    c384:	ldr	w8, [x19, #32]
    c388:	lsl	x19, x8, #3
    c38c:	cbz	x19, c3b0 <_ZNK4llvm10CondOpInit10isConcreteEv+0x70>
    c390:	add	x20, x20, x19
    c394:	ldr	x0, [x20], #8
    c398:	ldr	x8, [x0]
    c39c:	ldr	x8, [x8, #32]
    c3a0:	blr	x8
    c3a4:	tbz	w0, #0, c3c4 <_ZNK4llvm10CondOpInit10isConcreteEv+0x84>
    c3a8:	subs	x19, x19, #0x8
    c3ac:	b.ne	c394 <_ZNK4llvm10CondOpInit10isConcreteEv+0x54>  // b.any
    c3b0:	mov	w0, #0x1                   	// #1
    c3b4:	ldp	x20, x19, [sp, #32]
    c3b8:	ldp	x22, x21, [sp, #16]
    c3bc:	ldp	x29, x30, [sp], #48
    c3c0:	ret
    c3c4:	mov	w0, wzr
    c3c8:	ldp	x20, x19, [sp, #32]
    c3cc:	ldp	x22, x21, [sp, #16]
    c3d0:	ldp	x29, x30, [sp], #48
    c3d4:	ret

000000000000c3d8 <_ZNK4llvm10CondOpInit10isCompleteEv>:
    c3d8:	stp	x29, x30, [sp, #-48]!
    c3dc:	stp	x22, x21, [sp, #16]
    c3e0:	stp	x20, x19, [sp, #32]
    c3e4:	mov	x29, sp
    c3e8:	ldr	w8, [x0, #32]
    c3ec:	add	x20, x0, #0x30
    c3f0:	lsl	x21, x8, #3
    c3f4:	cbz	x21, c420 <_ZNK4llvm10CondOpInit10isCompleteEv+0x48>
    c3f8:	mov	x19, x0
    c3fc:	mov	x22, x20
    c400:	ldr	x0, [x22], #8
    c404:	ldr	x8, [x0]
    c408:	ldr	x8, [x8, #24]
    c40c:	blr	x8
    c410:	tbz	w0, #0, c45c <_ZNK4llvm10CondOpInit10isCompleteEv+0x84>
    c414:	subs	x21, x21, #0x8
    c418:	b.ne	c400 <_ZNK4llvm10CondOpInit10isCompleteEv+0x28>  // b.any
    c41c:	ldr	w8, [x19, #32]
    c420:	lsl	x19, x8, #3
    c424:	cbz	x19, c448 <_ZNK4llvm10CondOpInit10isCompleteEv+0x70>
    c428:	add	x20, x20, x19
    c42c:	ldr	x0, [x20], #8
    c430:	ldr	x8, [x0]
    c434:	ldr	x8, [x8, #32]
    c438:	blr	x8
    c43c:	tbz	w0, #0, c45c <_ZNK4llvm10CondOpInit10isCompleteEv+0x84>
    c440:	subs	x19, x19, #0x8
    c444:	b.ne	c42c <_ZNK4llvm10CondOpInit10isCompleteEv+0x54>  // b.any
    c448:	mov	w0, #0x1                   	// #1
    c44c:	ldp	x20, x19, [sp, #32]
    c450:	ldp	x22, x21, [sp, #16]
    c454:	ldp	x29, x30, [sp], #48
    c458:	ret
    c45c:	mov	w0, wzr
    c460:	ldp	x20, x19, [sp, #32]
    c464:	ldp	x22, x21, [sp, #16]
    c468:	ldp	x29, x30, [sp], #48
    c46c:	ret

000000000000c470 <_ZNK4llvm10CondOpInit6getBitEj>:
    c470:	b	3a80 <_ZN4llvm10VarBitInit3getEPNS_9TypedInitEj>

000000000000c474 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>:
    c474:	stp	x29, x30, [sp, #-64]!
    c478:	stp	x24, x23, [sp, #16]
    c47c:	stp	x22, x21, [sp, #32]
    c480:	stp	x20, x19, [sp, #48]
    c484:	mov	x29, sp
    c488:	mov	x23, x6
    c48c:	mov	x19, x5
    c490:	mov	x22, x4
    c494:	mov	x20, x3
    c498:	mov	x24, x2
    c49c:	mov	x21, x0
    c4a0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c4a4:	mov	x0, x21
    c4a8:	mov	x1, x24
    c4ac:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c4b0:	cmp	x23, #0x0
    c4b4:	cset	w8, eq  // eq = none
    c4b8:	cbz	x22, c4f8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x84>
    c4bc:	lsl	x9, x23, #3
    c4c0:	sub	x23, x9, #0x8
    c4c4:	lsl	x22, x22, #3
    c4c8:	tbnz	w8, #0, c510 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x9c>
    c4cc:	ldr	x1, [x20], #8
    c4d0:	mov	x0, x21
    c4d4:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c4d8:	ldr	x1, [x19], #8
    c4dc:	mov	x0, x21
    c4e0:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
    c4e4:	cmp	x23, #0x0
    c4e8:	cset	w8, eq  // eq = none
    c4ec:	subs	x22, x22, #0x8
    c4f0:	sub	x23, x23, #0x8
    c4f4:	b.ne	c4c8 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0x54>  // b.any
    c4f8:	tbz	w8, #0, c530 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE+0xbc>
    c4fc:	ldp	x20, x19, [sp, #48]
    c500:	ldp	x22, x21, [sp, #32]
    c504:	ldp	x24, x23, [sp, #16]
    c508:	ldp	x29, x30, [sp], #64
    c50c:	ret
    c510:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c514:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c518:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c51c:	add	x0, x0, #0x0
    c520:	add	x1, x1, #0x0
    c524:	add	x3, x3, #0x0
    c528:	mov	w2, #0x782                 	// #1922
    c52c:	bl	0 <__assert_fail>
    c530:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c534:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c538:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c53c:	add	x0, x0, #0x0
    c540:	add	x1, x1, #0x0
    c544:	add	x3, x3, #0x0
    c548:	mov	w2, #0x786                 	// #1926
    c54c:	bl	0 <__assert_fail>

000000000000c550 <_ZNK4llvm7DagInit7ProfileERNS_16FoldingSetNodeIDE>:
    c550:	ldp	x8, x2, [x0, #32]
    c554:	ldp	w4, w6, [x0, #48]
    c558:	add	x3, x0, #0x38
    c55c:	mov	x0, x1
    c560:	mov	x1, x8
    c564:	add	x5, x3, x4, lsl #3
    c568:	b	c474 <_ZL14ProfileDagInitRN4llvm16FoldingSetNodeIDEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS3_EENS6_IS5_EE>

000000000000c56c <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE>:
    c56c:	sub	sp, sp, #0xb0
    c570:	stp	x29, x30, [sp, #80]
    c574:	str	x27, [sp, #96]
    c578:	stp	x26, x25, [sp, #112]
    c57c:	stp	x24, x23, [sp, #128]
    c580:	stp	x22, x21, [sp, #144]
    c584:	stp	x20, x19, [sp, #160]
    c588:	add	x29, sp, #0x50
    c58c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c590:	ldr	d0, [x8]
    c594:	mov	x8, sp
    c598:	add	x21, x8, #0x10
    c59c:	str	x21, [sp]
    c5a0:	str	d0, [sp, #8]
    c5a4:	ldr	w2, [x0, #48]
    c5a8:	mov	x19, x0
    c5ac:	mov	x20, x1
    c5b0:	cmp	w2, #0x9
    c5b4:	b.cc	c5cc <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x60>  // b.lo, b.ul, b.last
    c5b8:	mov	x0, sp
    c5bc:	mov	w3, #0x8                   	// #8
    c5c0:	mov	x1, x21
    c5c4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c5c8:	ldr	w2, [x19, #48]
    c5cc:	mov	w8, w2
    c5d0:	lsl	x26, x8, #3
    c5d4:	add	x24, x19, #0x38
    c5d8:	mov	w25, wzr
    c5dc:	cbz	x26, c660 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xf4>
    c5e0:	mov	x27, x24
    c5e4:	ldr	x22, [x27]
    c5e8:	mov	x1, x20
    c5ec:	ldr	x8, [x22]
    c5f0:	mov	x0, x22
    c5f4:	ldr	x8, [x8, #96]
    c5f8:	blr	x8
    c5fc:	ldp	w8, w9, [sp, #8]
    c600:	mov	x23, x0
    c604:	cmp	w8, w9
    c608:	b.cs	c644 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xd8>  // b.hs, b.nlast
    c60c:	ldr	x9, [sp]
    c610:	str	x23, [x9, w8, uxtw #3]
    c614:	ldp	w8, w9, [sp, #8]
    c618:	cmp	w8, w9
    c61c:	b.cs	c6dc <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x170>  // b.hs, b.nlast
    c620:	add	w8, w8, #0x1
    c624:	cmp	x23, x22
    c628:	str	w8, [sp, #8]
    c62c:	cset	w8, ne  // ne = any
    c630:	subs	x26, x26, #0x8
    c634:	orr	w25, w25, w8
    c638:	add	x27, x27, #0x8
    c63c:	b.ne	c5e4 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x78>  // b.any
    c640:	b	c660 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xf4>
    c644:	mov	x0, sp
    c648:	mov	w3, #0x8                   	// #8
    c64c:	mov	x1, x21
    c650:	mov	x2, xzr
    c654:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c658:	ldr	w8, [sp, #8]
    c65c:	b	c60c <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0xa0>
    c660:	ldr	x0, [x19, #32]
    c664:	mov	x1, x20
    c668:	ldr	x8, [x0]
    c66c:	ldr	x8, [x8, #96]
    c670:	blr	x8
    c674:	tbnz	w25, #0, c684 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x118>
    c678:	ldr	x8, [x19, #32]
    c67c:	cmp	x0, x8
    c680:	b.eq	c6a0 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x134>  // b.none
    c684:	ldp	w8, w5, [x19, #48]
    c688:	ldr	x1, [x19, #40]
    c68c:	ldr	x2, [sp]
    c690:	ldr	w3, [sp, #8]
    c694:	add	x4, x24, x8, lsl #3
    c698:	bl	62e8 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefIS2_EENS5_IS4_EE>
    c69c:	mov	x19, x0
    c6a0:	ldr	x0, [sp]
    c6a4:	mov	x8, sp
    c6a8:	add	x8, x8, #0x10
    c6ac:	cmp	x0, x8
    c6b0:	b.eq	c6b8 <_ZNK4llvm7DagInit17resolveReferencesERNS_8ResolverE+0x14c>  // b.none
    c6b4:	bl	0 <free>
    c6b8:	mov	x0, x19
    c6bc:	ldp	x20, x19, [sp, #160]
    c6c0:	ldp	x22, x21, [sp, #144]
    c6c4:	ldp	x24, x23, [sp, #128]
    c6c8:	ldp	x26, x25, [sp, #112]
    c6cc:	ldr	x27, [sp, #96]
    c6d0:	ldp	x29, x30, [sp, #80]
    c6d4:	add	sp, sp, #0xb0
    c6d8:	ret
    c6dc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c6e0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c6e4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c6e8:	add	x0, x0, #0x0
    c6ec:	add	x1, x1, #0x0
    c6f0:	add	x3, x3, #0x0
    c6f4:	mov	w2, #0x43                  	// #67
    c6f8:	bl	0 <__assert_fail>

000000000000c6fc <_ZNK4llvm7DagInit10isConcreteEv>:
    c6fc:	stp	x29, x30, [sp, #-32]!
    c700:	stp	x20, x19, [sp, #16]
    c704:	mov	x29, sp
    c708:	mov	x19, x0
    c70c:	ldr	x0, [x0, #32]
    c710:	ldr	x8, [x0]
    c714:	ldr	x8, [x8, #32]
    c718:	blr	x8
    c71c:	tbz	w0, #0, c75c <_ZNK4llvm7DagInit10isConcreteEv+0x60>
    c720:	ldr	w8, [x19, #48]
    c724:	lsl	x20, x8, #3
    c728:	cbz	x20, c74c <_ZNK4llvm7DagInit10isConcreteEv+0x50>
    c72c:	add	x19, x19, #0x38
    c730:	ldr	x0, [x19], #8
    c734:	ldr	x8, [x0]
    c738:	ldr	x8, [x8, #32]
    c73c:	blr	x8
    c740:	tbz	w0, #0, c75c <_ZNK4llvm7DagInit10isConcreteEv+0x60>
    c744:	subs	x20, x20, #0x8
    c748:	b.ne	c730 <_ZNK4llvm7DagInit10isConcreteEv+0x34>  // b.any
    c74c:	mov	w0, #0x1                   	// #1
    c750:	ldp	x20, x19, [sp, #16]
    c754:	ldp	x29, x30, [sp], #32
    c758:	ret
    c75c:	mov	w0, wzr
    c760:	ldp	x20, x19, [sp, #16]
    c764:	ldp	x29, x30, [sp], #32
    c768:	ret

000000000000c76c <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>:
    c76c:	stp	x29, x30, [sp, #-32]!
    c770:	stp	x20, x19, [sp, #16]
    c774:	mov	x29, sp
    c778:	tst	x2, #0x7
    c77c:	stp	x1, xzr, [x0]
    c780:	b.ne	c80c <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0xa0>  // b.any
    c784:	tst	w3, #0x1
    c788:	mov	w9, #0x4                   	// #4
    c78c:	and	x8, x2, #0xfffffffffffffffb
    c790:	csel	x9, x9, xzr, ne  // ne = any
    c794:	orr	x8, x9, x8
    c798:	str	x8, [x0, #8]
    c79c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c7a0:	add	x8, x8, #0x0
    c7a4:	ldarb	w8, [x8]
    c7a8:	mov	x19, x0
    c7ac:	tbz	w8, #0, c7d4 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x68>
    c7b0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c7b4:	add	x1, x1, #0x0
    c7b8:	mov	x0, x19
    c7bc:	bl	c84c <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
    c7c0:	ldr	x8, [x19, #16]
    c7c4:	cbz	x8, c82c <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0xc0>
    c7c8:	ldp	x20, x19, [sp, #16]
    c7cc:	ldp	x29, x30, [sp], #32
    c7d0:	ret
    c7d4:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    c7d8:	add	x20, x20, #0x0
    c7dc:	mov	x0, x20
    c7e0:	bl	0 <__cxa_guard_acquire>
    c7e4:	cbz	w0, c7b0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x44>
    c7e8:	adrp	x9, 378 <_ZNK4llvm9BitsRecTy11getAsStringB5cxx11Ev+0xcc>
    c7ec:	ldr	x9, [x9]
    c7f0:	mov	w8, #0x18                  	// #24
    c7f4:	strh	w8, [x20, #168]
    c7f8:	mov	x0, x20
    c7fc:	add	x8, x9, #0x10
    c800:	str	x8, [x20, #160]
    c804:	bl	0 <__cxa_guard_release>
    c808:	b	c7b0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb+0x44>
    c80c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c810:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c814:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c818:	add	x0, x0, #0x0
    c81c:	add	x1, x1, #0x0
    c820:	add	x3, x3, #0x0
    c824:	mov	w2, #0xb3                  	// #179
    c828:	bl	0 <__assert_fail>
    c82c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c830:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c834:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    c838:	add	x0, x0, #0x0
    c83c:	add	x1, x1, #0x0
    c840:	add	x3, x3, #0x0
    c844:	mov	w2, #0x7e9                 	// #2025
    c848:	bl	0 <__assert_fail>

000000000000c84c <_ZN4llvm9RecordVal8setValueEPNS_4InitE>:
    c84c:	stp	x29, x30, [sp, #-64]!
    c850:	stp	x28, x23, [sp, #16]
    c854:	stp	x22, x21, [sp, #32]
    c858:	stp	x20, x19, [sp, #48]
    c85c:	mov	x29, sp
    c860:	sub	sp, sp, #0x210
    c864:	mov	x19, x0
    c868:	cbz	x1, c998 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x14c>
    c86c:	ldr	x8, [x1]
    c870:	ldr	x9, [x19, #8]
    c874:	mov	x0, x1
    c878:	ldr	x10, [x8, #56]
    c87c:	and	x8, x9, #0xfffffffffffffff8
    c880:	mov	x1, x8
    c884:	blr	x10
    c888:	str	x0, [x19, #16]
    c88c:	cbz	x0, c9d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>
    c890:	ldrb	w8, [x0, #8]
    c894:	sub	w8, w8, #0x1
    c898:	cmp	w8, #0x16
    c89c:	b.hi	c8bc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x70>  // b.pmore
    c8a0:	ldr	x0, [x0, #16]
    c8a4:	ldr	x9, [x19, #8]
    c8a8:	ldr	x8, [x0]
    c8ac:	and	x1, x9, #0xfffffffffffffff8
    c8b0:	ldr	x8, [x8, #32]
    c8b4:	blr	x8
    c8b8:	tbz	w0, #0, ca34 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1e8>
    c8bc:	ldr	x8, [x19, #8]
    c8c0:	ands	x22, x8, #0xfffffffffffffff8
    c8c4:	b.eq	ca14 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1c8>  // b.none
    c8c8:	ldr	w8, [x22, #8]
    c8cc:	cmp	w8, #0x1
    c8d0:	b.ne	c9d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.any
    c8d4:	ldr	x8, [x19, #16]
    c8d8:	cbz	x8, ca54 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x208>
    c8dc:	ldrb	w8, [x8, #8]
    c8e0:	cmp	w8, #0x3
    c8e4:	b.eq	c9d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.none
    c8e8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    c8ec:	ldr	d0, [x8]
    c8f0:	mov	x8, sp
    c8f4:	add	x20, x8, #0x10
    c8f8:	str	x20, [sp]
    c8fc:	str	d0, [sp, #8]
    c900:	ldr	w21, [x22, #24]
    c904:	cmp	w21, #0x41
    c908:	b.cc	c924 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xd8>  // b.lo, b.ul, b.last
    c90c:	mov	x0, sp
    c910:	mov	w3, #0x8                   	// #8
    c914:	mov	x1, x20
    c918:	mov	x2, x21
    c91c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c920:	ldr	w21, [x22, #24]
    c924:	cbz	w21, c9a4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x158>
    c928:	mov	w22, wzr
    c92c:	ldr	x0, [x19, #16]
    c930:	mov	w1, w22
    c934:	ldr	x8, [x0]
    c938:	ldr	x8, [x8, #104]
    c93c:	blr	x8
    c940:	ldp	w8, w9, [sp, #8]
    c944:	mov	x23, x0
    c948:	cmp	w8, w9
    c94c:	b.cs	c97c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x130>  // b.hs, b.nlast
    c950:	ldr	x9, [sp]
    c954:	str	x23, [x9, w8, uxtw #3]
    c958:	ldp	w8, w9, [sp, #8]
    c95c:	cmp	w8, w9
    c960:	b.cs	c9f4 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x1a8>  // b.hs, b.nlast
    c964:	add	w22, w22, #0x1
    c968:	add	w8, w8, #0x1
    c96c:	cmp	w21, w22
    c970:	str	w8, [sp, #8]
    c974:	b.ne	c92c <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0xe0>  // b.any
    c978:	b	c9a8 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x15c>
    c97c:	mov	x0, sp
    c980:	mov	w3, #0x8                   	// #8
    c984:	mov	x1, x20
    c988:	mov	x2, xzr
    c98c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c990:	ldr	w8, [sp, #8]
    c994:	b	c950 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x104>
    c998:	mov	w0, wzr
    c99c:	str	xzr, [x19, #16]
    c9a0:	b	c9dc <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x190>
    c9a4:	ldr	w8, [sp, #8]
    c9a8:	ldr	x0, [sp]
    c9ac:	mov	w1, w8
    c9b0:	bl	1bac <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    c9b4:	str	x0, [x19, #16]
    c9b8:	ldr	x0, [sp]
    c9bc:	mov	x8, sp
    c9c0:	add	x8, x8, #0x10
    c9c4:	cmp	x0, x8
    c9c8:	b.eq	c9d0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE+0x184>  // b.none
    c9cc:	bl	0 <free>
    c9d0:	ldr	x8, [x19, #16]
    c9d4:	cmp	x8, #0x0
    c9d8:	cset	w0, eq  // eq = none
    c9dc:	add	sp, sp, #0x210
    c9e0:	ldp	x20, x19, [sp, #48]
    c9e4:	ldp	x22, x21, [sp, #32]
    c9e8:	ldp	x28, x23, [sp, #16]
    c9ec:	ldp	x29, x30, [sp], #64
    c9f0:	ret
    c9f4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    c9f8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    c9fc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca00:	add	x0, x0, #0x0
    ca04:	add	x1, x1, #0x0
    ca08:	add	x3, x3, #0x0
    ca0c:	mov	w2, #0x43                  	// #67
    ca10:	bl	0 <__assert_fail>
    ca14:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca18:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca1c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca20:	add	x0, x0, #0x0
    ca24:	add	x1, x1, #0x0
    ca28:	add	x3, x3, #0x0
    ca2c:	mov	w2, #0x69                  	// #105
    ca30:	bl	0 <__assert_fail>
    ca34:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca38:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca3c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca40:	add	x0, x0, #0x0
    ca44:	add	x1, x1, #0x0
    ca48:	add	x3, x3, #0x0
    ca4c:	mov	w2, #0x7f5                 	// #2037
    ca50:	bl	0 <__assert_fail>
    ca54:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca58:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca5c:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    ca60:	add	x0, x0, #0x0
    ca64:	add	x1, x1, #0x0
    ca68:	add	x3, x3, #0x0
    ca6c:	mov	w2, #0x69                  	// #105
    ca70:	bl	0 <__assert_fail>

000000000000ca74 <_ZNK4llvm9RecordVal7getNameEv>:
    ca74:	stp	x29, x30, [sp, #-16]!
    ca78:	mov	x29, sp
    ca7c:	ldr	x8, [x0]
    ca80:	cbz	x8, ca9c <_ZNK4llvm9RecordVal7getNameEv+0x28>
    ca84:	ldrb	w9, [x8, #8]
    ca88:	cmp	w9, #0x12
    ca8c:	b.ne	cabc <_ZNK4llvm9RecordVal7getNameEv+0x48>  // b.any
    ca90:	ldp	x0, x1, [x8, #24]
    ca94:	ldp	x29, x30, [sp], #16
    ca98:	ret
    ca9c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    caa0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    caa4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    caa8:	add	x0, x0, #0x0
    caac:	add	x1, x1, #0x0
    cab0:	add	x3, x3, #0x0
    cab4:	mov	w2, #0x69                  	// #105
    cab8:	bl	0 <__assert_fail>
    cabc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cac0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cac4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cac8:	add	x0, x0, #0x0
    cacc:	add	x1, x1, #0x0
    cad0:	add	x3, x3, #0x0
    cad4:	mov	w2, #0x108                 	// #264
    cad8:	bl	0 <__assert_fail>

000000000000cadc <_ZNK4llvm9RecordVal4dumpEv>:
    cadc:	stp	x29, x30, [sp, #-32]!
    cae0:	str	x19, [sp, #16]
    cae4:	mov	x29, sp
    cae8:	mov	x19, x0
    caec:	bl	0 <_ZN4llvm4errsEv>
    caf0:	ldp	x10, x9, [x0, #16]
    caf4:	mov	x8, x0
    caf8:	sub	x10, x10, x9
    cafc:	cmp	x10, #0x1
    cb00:	b.hi	cb20 <_ZNK4llvm9RecordVal4dumpEv+0x44>  // b.pmore
    cb04:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cb08:	add	x1, x1, #0x0
    cb0c:	mov	w2, #0x2                   	// #2
    cb10:	mov	x0, x8
    cb14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cb18:	mov	x8, x0
    cb1c:	b	cb34 <_ZNK4llvm9RecordVal4dumpEv+0x58>
    cb20:	mov	w10, #0x2020                	// #8224
    cb24:	strh	w10, [x9]
    cb28:	ldr	x9, [x8, #24]
    cb2c:	add	x9, x9, #0x2
    cb30:	str	x9, [x8, #24]
    cb34:	mov	x0, x19
    cb38:	ldr	x19, [sp, #16]
    cb3c:	mov	w2, #0x1                   	// #1
    cb40:	mov	x1, x8
    cb44:	ldp	x29, x30, [sp], #32
    cb48:	b	cb4c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>

000000000000cb4c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>:
    cb4c:	sub	sp, sp, #0x60
    cb50:	stp	x29, x30, [sp, #32]
    cb54:	str	x23, [sp, #48]
    cb58:	stp	x22, x21, [sp, #64]
    cb5c:	stp	x20, x19, [sp, #80]
    cb60:	add	x29, sp, #0x20
    cb64:	ldrb	w8, [x0, #8]
    cb68:	mov	w20, w2
    cb6c:	mov	x21, x0
    cb70:	mov	x19, x1
    cb74:	tbz	w8, #2, cbc0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x74>
    cb78:	ldp	x9, x8, [x19, #16]
    cb7c:	sub	x9, x9, x8
    cb80:	cmp	x9, #0x5
    cb84:	b.hi	cba0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x54>  // b.pmore
    cb88:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cb8c:	add	x1, x1, #0x0
    cb90:	mov	w2, #0x6                   	// #6
    cb94:	mov	x0, x19
    cb98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cb9c:	b	cbc0 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x74>
    cba0:	mov	w10, #0x6966                	// #26982
    cba4:	mov	w9, #0x2064                	// #8292
    cba8:	movk	w10, #0x6c65, lsl #16
    cbac:	strh	w9, [x8, #4]
    cbb0:	str	w10, [x8]
    cbb4:	ldr	x8, [x19, #24]
    cbb8:	add	x8, x8, #0x6
    cbbc:	str	x8, [x19, #24]
    cbc0:	ldr	x8, [x21, #8]
    cbc4:	mov	x22, sp
    cbc8:	and	x0, x8, #0xfffffffffffffff8
    cbcc:	ldr	x8, [x0]
    cbd0:	ldr	x9, [x8, #16]
    cbd4:	mov	x8, sp
    cbd8:	blr	x9
    cbdc:	ldp	x1, x2, [sp]
    cbe0:	mov	x0, x19
    cbe4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cbe8:	ldr	x0, [sp]
    cbec:	add	x8, x22, #0x10
    cbf0:	cmp	x0, x8
    cbf4:	b.eq	cbfc <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xb0>  // b.none
    cbf8:	bl	0 <_ZdlPv>
    cbfc:	ldp	x9, x8, [x19, #16]
    cc00:	cmp	x9, x8
    cc04:	b.ne	cc24 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xd8>  // b.any
    cc08:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cc0c:	add	x1, x1, #0x0
    cc10:	mov	w2, #0x1                   	// #1
    cc14:	mov	x0, x19
    cc18:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cc1c:	mov	x22, x0
    cc20:	b	cc3c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0xf0>
    cc24:	mov	w9, #0x20                  	// #32
    cc28:	strb	w9, [x8]
    cc2c:	ldr	x8, [x19, #24]
    cc30:	mov	x22, x19
    cc34:	add	x8, x8, #0x1
    cc38:	str	x8, [x19, #24]
    cc3c:	ldr	x0, [x21]
    cc40:	mov	x23, sp
    cc44:	ldr	x8, [x0]
    cc48:	ldr	x9, [x8, #48]
    cc4c:	mov	x8, sp
    cc50:	blr	x9
    cc54:	ldp	x1, x2, [sp]
    cc58:	mov	x0, x22
    cc5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cc60:	ldr	x0, [sp]
    cc64:	add	x8, x23, #0x10
    cc68:	cmp	x0, x8
    cc6c:	b.eq	cc74 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x128>  // b.none
    cc70:	bl	0 <_ZdlPv>
    cc74:	ldr	x8, [x21, #16]
    cc78:	cbz	x8, cd00 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1b4>
    cc7c:	ldp	x9, x8, [x19, #16]
    cc80:	sub	x9, x9, x8
    cc84:	cmp	x9, #0x2
    cc88:	b.hi	cca8 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x15c>  // b.pmore
    cc8c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cc90:	add	x1, x1, #0x0
    cc94:	mov	w2, #0x3                   	// #3
    cc98:	mov	x0, x19
    cc9c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cca0:	mov	x22, x0
    cca4:	b	ccc8 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x17c>
    cca8:	mov	w9, #0x20                  	// #32
    ccac:	mov	w10, #0x3d20                	// #15648
    ccb0:	strb	w9, [x8, #2]
    ccb4:	strh	w10, [x8]
    ccb8:	ldr	x8, [x19, #24]
    ccbc:	mov	x22, x19
    ccc0:	add	x8, x8, #0x3
    ccc4:	str	x8, [x19, #24]
    ccc8:	ldr	x0, [x21, #16]
    cccc:	mov	x21, sp
    ccd0:	ldr	x8, [x0]
    ccd4:	ldr	x9, [x8, #40]
    ccd8:	mov	x8, sp
    ccdc:	blr	x9
    cce0:	ldp	x1, x2, [sp]
    cce4:	mov	x0, x22
    cce8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ccec:	ldr	x0, [sp]
    ccf0:	add	x8, x21, #0x10
    ccf4:	cmp	x0, x8
    ccf8:	b.eq	cd00 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1b4>  // b.none
    ccfc:	bl	0 <_ZdlPv>
    cd00:	tbz	w20, #0, cd40 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1f4>
    cd04:	ldp	x9, x8, [x19, #16]
    cd08:	sub	x9, x9, x8
    cd0c:	cmp	x9, #0x1
    cd10:	b.hi	cd2c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1e0>  // b.pmore
    cd14:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cd18:	add	x1, x1, #0x0
    cd1c:	mov	w2, #0x2                   	// #2
    cd20:	mov	x0, x19
    cd24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    cd28:	b	cd40 <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb+0x1f4>
    cd2c:	mov	w9, #0xa3b                 	// #2619
    cd30:	strh	w9, [x8]
    cd34:	ldr	x8, [x19, #24]
    cd38:	add	x8, x8, #0x2
    cd3c:	str	x8, [x19, #24]
    cd40:	ldp	x20, x19, [sp, #80]
    cd44:	ldp	x22, x21, [sp, #64]
    cd48:	ldr	x23, [sp, #48]
    cd4c:	ldp	x29, x30, [sp, #32]
    cd50:	add	sp, sp, #0x60
    cd54:	ret

000000000000cd58 <_ZN4llvm6Record9checkNameEv>:
    cd58:	sub	sp, sp, #0xd0
    cd5c:	stp	x29, x30, [sp, #160]
    cd60:	stp	x22, x21, [sp, #176]
    cd64:	stp	x20, x19, [sp, #192]
    cd68:	add	x29, sp, #0xa0
    cd6c:	mov	x8, x0
    cd70:	ldr	x0, [x0]
    cd74:	cbz	x0, cdb0 <_ZN4llvm6Record9checkNameEv+0x58>
    cd78:	ldrb	w9, [x0, #8]
    cd7c:	sub	w9, w9, #0x1
    cd80:	cmp	w9, #0x17
    cd84:	b.cs	cdd0 <_ZN4llvm6Record9checkNameEv+0x78>  // b.hs, b.nlast
    cd88:	ldr	x9, [x0, #16]
    cd8c:	cbz	x9, cdf0 <_ZN4llvm6Record9checkNameEv+0x98>
    cd90:	ldr	w9, [x9, #8]
    cd94:	cmp	w9, #0x4
    cd98:	b.ne	ce10 <_ZN4llvm6Record9checkNameEv+0xb8>  // b.any
    cd9c:	ldp	x20, x19, [sp, #192]
    cda0:	ldp	x22, x21, [sp, #176]
    cda4:	ldp	x29, x30, [sp, #160]
    cda8:	add	sp, sp, #0xd0
    cdac:	ret
    cdb0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdb4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdb8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdbc:	add	x0, x0, #0x0
    cdc0:	add	x1, x1, #0x0
    cdc4:	add	x3, x3, #0x0
    cdc8:	mov	w2, #0x69                  	// #105
    cdcc:	bl	0 <__assert_fail>
    cdd0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdd4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdd8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cddc:	add	x0, x0, #0x0
    cde0:	add	x1, x1, #0x0
    cde4:	add	x3, x3, #0x0
    cde8:	mov	w2, #0x108                 	// #264
    cdec:	bl	0 <__assert_fail>
    cdf0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdf4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdf8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cdfc:	add	x0, x0, #0x0
    ce00:	add	x1, x1, #0x0
    ce04:	add	x3, x3, #0x0
    ce08:	mov	w2, #0x69                  	// #105
    ce0c:	bl	0 <__assert_fail>
    ce10:	ldr	x19, [x8, #8]
    ce14:	ldr	w20, [x8, #16]
    ce18:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ce1c:	add	x8, x8, #0x0
    ce20:	mov	w21, #0x103                 	// #259
    ce24:	stp	x8, xzr, [x29, #-72]
    ce28:	sturh	w21, [x29, #-56]
    ce2c:	ldr	x8, [x0]
    ce30:	add	x22, sp, #0x20
    ce34:	ldr	x9, [x8, #40]
    ce38:	add	x8, sp, #0x20
    ce3c:	blr	x9
    ce40:	mov	w8, #0x104                 	// #260
    ce44:	strh	w8, [sp, #80]
    ce48:	sub	x8, x29, #0x30
    ce4c:	sub	x0, x29, #0x48
    ce50:	add	x1, sp, #0x40
    ce54:	stp	x22, xzr, [sp, #64]
    ce58:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ce5c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ce60:	add	x8, x8, #0x0
    ce64:	stp	x8, xzr, [sp, #8]
    ce68:	sub	x8, x29, #0x18
    ce6c:	sub	x0, x29, #0x30
    ce70:	add	x1, sp, #0x8
    ce74:	strh	w21, [sp, #24]
    ce78:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ce7c:	sub	x2, x29, #0x18
    ce80:	mov	x0, x19
    ce84:	mov	x1, x20
    ce88:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000ce8c <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE>:
    ce8c:	stp	x29, x30, [sp, #-80]!
    ce90:	str	x25, [sp, #16]
    ce94:	stp	x24, x23, [sp, #32]
    ce98:	stp	x22, x21, [sp, #48]
    ce9c:	stp	x20, x19, [sp, #64]
    cea0:	mov	x29, sp
    cea4:	ldr	w21, [x0, #96]
    cea8:	cbz	w21, cf24 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x98>
    ceac:	ldr	x22, [x0, #88]
    ceb0:	mov	x19, x1
    ceb4:	add	x20, x1, #0x10
    ceb8:	mov	w23, #0x18                  	// #24
    cebc:	madd	x8, x21, x23, x22
    cec0:	ldur	x25, [x8, #-24]
    cec4:	ldr	w24, [x25, #96]
    cec8:	cmp	x21, x24
    cecc:	b.ls	cf3c <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xb0>  // b.plast
    ced0:	ldp	w8, w9, [x19, #8]
    ced4:	cmp	w8, w9
    ced8:	b.cs	cf08 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x7c>  // b.hs, b.nlast
    cedc:	ldr	x9, [x19]
    cee0:	str	x25, [x9, w8, uxtw #3]
    cee4:	ldp	w8, w9, [x19, #8]
    cee8:	cmp	w8, w9
    ceec:	b.cs	cf5c <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0xd0>  // b.hs, b.nlast
    cef0:	mvn	x9, x24
    cef4:	add	x21, x21, x9
    cef8:	add	w8, w8, #0x1
    cefc:	str	w8, [x19, #8]
    cf00:	cbnz	x21, cebc <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x30>
    cf04:	b	cf24 <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x98>
    cf08:	mov	w3, #0x8                   	// #8
    cf0c:	mov	x0, x19
    cf10:	mov	x1, x20
    cf14:	mov	x2, xzr
    cf18:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    cf1c:	ldr	w8, [x19, #8]
    cf20:	b	cedc <_ZNK4llvm6Record21getDirectSuperClassesERNS_15SmallVectorImplIPS0_EE+0x50>
    cf24:	ldp	x20, x19, [sp, #64]
    cf28:	ldp	x22, x21, [sp, #48]
    cf2c:	ldp	x24, x23, [sp, #32]
    cf30:	ldr	x25, [sp, #16]
    cf34:	ldp	x29, x30, [sp], #80
    cf38:	ret
    cf3c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf40:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf44:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf48:	add	x0, x0, #0x0
    cf4c:	add	x1, x1, #0x0
    cf50:	add	x3, x3, #0x0
    cf54:	mov	w2, #0xcc                  	// #204
    cf58:	bl	0 <__assert_fail>
    cf5c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf60:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf64:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf68:	add	x0, x0, #0x0
    cf6c:	add	x1, x1, #0x0
    cf70:	add	x3, x3, #0x0
    cf74:	mov	w2, #0x43                  	// #67
    cf78:	bl	0 <__assert_fail>

000000000000cf7c <_ZN4llvm6Record7setNameEPNS_4InitE>:
    cf7c:	str	x1, [x0]
    cf80:	b	cd58 <_ZN4llvm6Record9checkNameEv>

000000000000cf84 <_ZN4llvm6Record19resolveReferencesToEPKNS_9RecordValE>:
    cf84:	sub	sp, sp, #0x30
    cf88:	stp	x29, x30, [sp, #32]
    cf8c:	add	x29, sp, #0x20
    cf90:	strb	wzr, [sp, #16]
    cf94:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    cf98:	ldr	x8, [x8]
    cf9c:	mov	x2, x1
    cfa0:	str	x1, [sp, #24]
    cfa4:	mov	x1, sp
    cfa8:	add	x8, x8, #0x10
    cfac:	stp	x8, x0, [sp]
    cfb0:	bl	aee0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    cfb4:	ldp	x29, x30, [sp, #32]
    cfb8:	add	sp, sp, #0x30
    cfbc:	ret

000000000000cfc0 <_ZNK4llvm6Record4dumpEv>:
    cfc0:	stp	x29, x30, [sp, #-32]!
    cfc4:	str	x19, [sp, #16]
    cfc8:	mov	x29, sp
    cfcc:	mov	x19, x0
    cfd0:	bl	0 <_ZN4llvm4errsEv>
    cfd4:	mov	x1, x19
    cfd8:	ldr	x19, [sp, #16]
    cfdc:	ldp	x29, x30, [sp], #32
    cfe0:	b	cfe4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>

000000000000cfe4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>:
    cfe4:	sub	sp, sp, #0x70
    cfe8:	stp	x29, x30, [sp, #32]
    cfec:	stp	x26, x25, [sp, #48]
    cff0:	stp	x24, x23, [sp, #64]
    cff4:	stp	x22, x21, [sp, #80]
    cff8:	stp	x20, x19, [sp, #96]
    cffc:	add	x29, sp, #0x20
    d000:	ldr	x9, [x1]
    d004:	mov	x19, x0
    d008:	mov	x20, x1
    d00c:	mov	x21, sp
    d010:	ldr	x8, [x9]
    d014:	mov	x0, x9
    d018:	ldr	x10, [x8, #48]
    d01c:	mov	x8, sp
    d020:	blr	x10
    d024:	ldp	x1, x2, [sp]
    d028:	mov	x0, x19
    d02c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d030:	ldr	x0, [sp]
    d034:	add	x8, x21, #0x10
    d038:	cmp	x0, x8
    d03c:	b.eq	d044 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x60>  // b.none
    d040:	bl	0 <_ZdlPv>
    d044:	ldr	w21, [x20, #64]
    d048:	cbz	w21, d14c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x168>
    d04c:	ldp	x9, x8, [x19, #16]
    d050:	ldr	x22, [x20, #56]
    d054:	cmp	x9, x8
    d058:	b.ne	d074 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x90>  // b.any
    d05c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d060:	add	x1, x1, #0x0
    d064:	mov	w2, #0x1                   	// #1
    d068:	mov	x0, x19
    d06c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d070:	b	d088 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xa4>
    d074:	mov	w9, #0x3c                  	// #60
    d078:	strb	w9, [x8]
    d07c:	ldr	x8, [x19, #24]
    d080:	add	x8, x8, #0x1
    d084:	str	x8, [x19, #24]
    d088:	add	x23, x22, x21, lsl #3
    d08c:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    d090:	mov	w8, wzr
    d094:	add	x21, x21, #0x0
    d098:	mov	w24, #0x202c                	// #8236
    d09c:	ldr	x25, [x22]
    d0a0:	tbz	w8, #0, d0d8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xf4>
    d0a4:	ldp	x9, x8, [x19, #16]
    d0a8:	sub	x9, x9, x8
    d0ac:	cmp	x9, #0x1
    d0b0:	b.hi	d0c8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xe4>  // b.pmore
    d0b4:	mov	w2, #0x2                   	// #2
    d0b8:	mov	x0, x19
    d0bc:	mov	x1, x21
    d0c0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d0c4:	b	d0d8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xf4>
    d0c8:	strh	w24, [x8]
    d0cc:	ldr	x8, [x19, #24]
    d0d0:	add	x8, x8, #0x2
    d0d4:	str	x8, [x19, #24]
    d0d8:	ldr	w8, [x20, #80]
    d0dc:	cbz	w8, d490 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4ac>
    d0e0:	ldr	x0, [x20, #72]
    d0e4:	add	x8, x8, x8, lsl #1
    d0e8:	lsl	x8, x8, #3
    d0ec:	mov	x9, x0
    d0f0:	ldr	x10, [x9], #24
    d0f4:	cmp	x10, x25
    d0f8:	b.eq	d10c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x128>  // b.none
    d0fc:	subs	x8, x8, #0x18
    d100:	mov	x0, x9
    d104:	b.ne	d0f0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x10c>  // b.any
    d108:	b	d490 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4ac>
    d10c:	cbz	x0, d490 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x4ac>
    d110:	mov	x1, x19
    d114:	mov	w2, wzr
    d118:	bl	cb4c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    d11c:	add	x22, x22, #0x8
    d120:	cmp	x22, x23
    d124:	mov	w8, #0x1                   	// #1
    d128:	b.ne	d09c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0xb8>  // b.any
    d12c:	ldp	x9, x8, [x19, #16]
    d130:	cmp	x9, x8
    d134:	b.ne	d17c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x198>  // b.any
    d138:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d13c:	add	x1, x1, #0x0
    d140:	mov	w2, #0x1                   	// #1
    d144:	mov	x0, x19
    d148:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d14c:	ldp	x9, x8, [x19, #16]
    d150:	sub	x9, x9, x8
    d154:	cmp	x9, #0x1
    d158:	b.hi	d1a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1bc>  // b.pmore
    d15c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d160:	add	x1, x1, #0x0
    d164:	mov	w2, #0x2                   	// #2
    d168:	mov	x0, x19
    d16c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d170:	ldr	w21, [x20, #96]
    d174:	cbnz	w21, d1bc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x1d8>
    d178:	b	d2a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2bc>
    d17c:	mov	w9, #0x3e                  	// #62
    d180:	strb	w9, [x8]
    d184:	ldr	x8, [x19, #24]
    d188:	add	x8, x8, #0x1
    d18c:	str	x8, [x19, #24]
    d190:	ldp	x9, x8, [x19, #16]
    d194:	sub	x9, x9, x8
    d198:	cmp	x9, #0x1
    d19c:	b.ls	d15c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x178>  // b.plast
    d1a0:	mov	w9, #0x7b20                	// #31520
    d1a4:	strh	w9, [x8]
    d1a8:	ldr	x8, [x19, #24]
    d1ac:	add	x8, x8, #0x2
    d1b0:	str	x8, [x19, #24]
    d1b4:	ldr	w21, [x20, #96]
    d1b8:	cbz	w21, d2a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2bc>
    d1bc:	ldp	x9, x8, [x19, #16]
    d1c0:	ldr	x23, [x20, #88]
    d1c4:	sub	x9, x9, x8
    d1c8:	cmp	x9, #0x2
    d1cc:	b.hi	d1e8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x204>  // b.pmore
    d1d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d1d4:	add	x1, x1, #0x0
    d1d8:	mov	w2, #0x3                   	// #3
    d1dc:	mov	x0, x19
    d1e0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d1e4:	b	d204 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x220>
    d1e8:	mov	w9, #0x2f                  	// #47
    d1ec:	mov	w10, #0x2f09                	// #12041
    d1f0:	strb	w9, [x8, #2]
    d1f4:	strh	w10, [x8]
    d1f8:	ldr	x8, [x19, #24]
    d1fc:	add	x8, x8, #0x3
    d200:	str	x8, [x19, #24]
    d204:	mov	x8, sp
    d208:	add	x9, x21, x21, lsl #1
    d20c:	adrp	x21, 0 <_ZNK4llvm5RecTy4dumpEv>
    d210:	add	x21, x21, #0x0
    d214:	add	x24, x8, #0x10
    d218:	lsl	x25, x9, #3
    d21c:	mov	w26, #0x20                  	// #32
    d220:	b	d230 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x24c>
    d224:	subs	x25, x25, #0x18
    d228:	add	x23, x23, #0x18
    d22c:	b.eq	d2a0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2bc>  // b.none
    d230:	ldp	x9, x8, [x19, #16]
    d234:	cmp	x9, x8
    d238:	b.ne	d254 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x270>  // b.any
    d23c:	mov	w2, #0x1                   	// #1
    d240:	mov	x0, x19
    d244:	mov	x1, x21
    d248:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d24c:	mov	x22, x0
    d250:	b	d268 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x284>
    d254:	strb	w26, [x8]
    d258:	ldr	x8, [x19, #24]
    d25c:	mov	x22, x19
    d260:	add	x8, x8, #0x1
    d264:	str	x8, [x19, #24]
    d268:	ldr	x8, [x23]
    d26c:	ldr	x0, [x8]
    d270:	ldr	x8, [x0]
    d274:	ldr	x9, [x8, #48]
    d278:	mov	x8, sp
    d27c:	blr	x9
    d280:	ldp	x1, x2, [sp]
    d284:	mov	x0, x22
    d288:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d28c:	ldr	x0, [sp]
    d290:	cmp	x0, x24
    d294:	b.eq	d224 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x240>  // b.none
    d298:	bl	0 <_ZdlPv>
    d29c:	b	d224 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x240>
    d2a0:	ldp	x9, x8, [x19, #16]
    d2a4:	cmp	x9, x8
    d2a8:	b.ne	d2cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x2e8>  // b.any
    d2ac:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d2b0:	add	x1, x1, #0x0
    d2b4:	mov	w2, #0x1                   	// #1
    d2b8:	mov	x0, x19
    d2bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d2c0:	ldr	w8, [x20, #80]
    d2c4:	cbnz	w8, d2e8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x304>
    d2c8:	b	d430 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x44c>
    d2cc:	mov	w9, #0xa                   	// #10
    d2d0:	strb	w9, [x8]
    d2d4:	ldr	x8, [x19, #24]
    d2d8:	add	x8, x8, #0x1
    d2dc:	str	x8, [x19, #24]
    d2e0:	ldr	w8, [x20, #80]
    d2e4:	cbz	w8, d430 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x44c>
    d2e8:	ldr	x21, [x20, #72]
    d2ec:	mov	w9, #0x18                  	// #24
    d2f0:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    d2f4:	add	x22, x22, #0x0
    d2f8:	madd	x23, x8, x9, x21
    d2fc:	mov	w24, #0x2020                	// #8224
    d300:	b	d330 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x34c>
    d304:	strh	w24, [x8]
    d308:	ldr	x8, [x19, #24]
    d30c:	mov	x1, x19
    d310:	add	x8, x8, #0x2
    d314:	str	x8, [x19, #24]
    d318:	mov	w2, #0x1                   	// #1
    d31c:	mov	x0, x21
    d320:	bl	cb4c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    d324:	add	x21, x21, #0x18
    d328:	cmp	x21, x23
    d32c:	b.eq	d388 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3a4>  // b.none
    d330:	ldrb	w8, [x21, #8]
    d334:	tbz	w8, #2, d324 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x340>
    d338:	ldr	w10, [x20, #64]
    d33c:	cbz	w10, d360 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x37c>
    d340:	ldr	x8, [x21]
    d344:	ldr	x9, [x20, #56]
    d348:	lsl	x10, x10, #3
    d34c:	ldr	x11, [x9], #8
    d350:	cmp	x11, x8
    d354:	b.eq	d324 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x340>  // b.none
    d358:	subs	x10, x10, #0x8
    d35c:	b.ne	d34c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x368>  // b.any
    d360:	ldp	x9, x8, [x19, #16]
    d364:	sub	x9, x9, x8
    d368:	cmp	x9, #0x1
    d36c:	b.hi	d304 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x320>  // b.pmore
    d370:	mov	w2, #0x2                   	// #2
    d374:	mov	x0, x19
    d378:	mov	x1, x22
    d37c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d380:	mov	x1, x0
    d384:	b	d318 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x334>
    d388:	ldr	w8, [x20, #80]
    d38c:	cbz	w8, d430 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x44c>
    d390:	ldr	x21, [x20, #72]
    d394:	mov	w9, #0x18                  	// #24
    d398:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    d39c:	add	x22, x22, #0x0
    d3a0:	madd	x23, x8, x9, x21
    d3a4:	mov	w24, #0x2020                	// #8224
    d3a8:	b	d3d8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3f4>
    d3ac:	strh	w24, [x8]
    d3b0:	ldr	x8, [x19, #24]
    d3b4:	mov	x1, x19
    d3b8:	add	x8, x8, #0x2
    d3bc:	str	x8, [x19, #24]
    d3c0:	mov	w2, #0x1                   	// #1
    d3c4:	mov	x0, x21
    d3c8:	bl	cb4c <_ZNK4llvm9RecordVal5printERNS_11raw_ostreamEb>
    d3cc:	add	x21, x21, #0x18
    d3d0:	cmp	x21, x23
    d3d4:	b.eq	d430 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x44c>  // b.none
    d3d8:	ldrb	w8, [x21, #8]
    d3dc:	tbnz	w8, #2, d3cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3e8>
    d3e0:	ldr	w10, [x20, #64]
    d3e4:	cbz	w10, d408 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x424>
    d3e8:	ldr	x8, [x21]
    d3ec:	ldr	x9, [x20, #56]
    d3f0:	lsl	x10, x10, #3
    d3f4:	ldr	x11, [x9], #8
    d3f8:	cmp	x11, x8
    d3fc:	b.eq	d3cc <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3e8>  // b.none
    d400:	subs	x10, x10, #0x8
    d404:	b.ne	d3f4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x410>  // b.any
    d408:	ldp	x9, x8, [x19, #16]
    d40c:	sub	x9, x9, x8
    d410:	cmp	x9, #0x1
    d414:	b.hi	d3ac <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3c8>  // b.pmore
    d418:	mov	w2, #0x2                   	// #2
    d41c:	mov	x0, x19
    d420:	mov	x1, x22
    d424:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d428:	mov	x1, x0
    d42c:	b	d3c0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x3dc>
    d430:	ldp	x9, x8, [x19, #16]
    d434:	sub	x9, x9, x8
    d438:	cmp	x9, #0x1
    d43c:	b.hi	d45c <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x478>  // b.pmore
    d440:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d444:	add	x1, x1, #0x0
    d448:	mov	w2, #0x2                   	// #2
    d44c:	mov	x0, x19
    d450:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    d454:	mov	x19, x0
    d458:	b	d470 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE+0x48c>
    d45c:	mov	w9, #0xa7d                 	// #2685
    d460:	strh	w9, [x8]
    d464:	ldr	x8, [x19, #24]
    d468:	add	x8, x8, #0x2
    d46c:	str	x8, [x19, #24]
    d470:	mov	x0, x19
    d474:	ldp	x20, x19, [sp, #96]
    d478:	ldp	x22, x21, [sp, #80]
    d47c:	ldp	x24, x23, [sp, #64]
    d480:	ldp	x26, x25, [sp, #48]
    d484:	ldp	x29, x30, [sp, #32]
    d488:	add	sp, sp, #0x70
    d48c:	ret
    d490:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    d494:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    d498:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    d49c:	add	x0, x0, #0x0
    d4a0:	add	x1, x1, #0x0
    d4a4:	add	x3, x3, #0x0
    d4a8:	mov	w2, #0x87c                 	// #2172
    d4ac:	bl	0 <__assert_fail>

000000000000d4b0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>:
    d4b0:	sub	sp, sp, #0x100
    d4b4:	stp	x29, x30, [sp, #208]
    d4b8:	str	x21, [sp, #224]
    d4bc:	stp	x20, x19, [sp, #240]
    d4c0:	add	x29, sp, #0xd0
    d4c4:	mov	x19, x0
    d4c8:	stp	x1, x2, [x29, #-16]
    d4cc:	mov	x0, x1
    d4d0:	mov	x1, x2
    d4d4:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    d4d8:	ldr	w9, [x19, #80]
    d4dc:	cbz	w9, d508 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d4e0:	ldr	x8, [x19, #72]
    d4e4:	add	x9, x9, x9, lsl #1
    d4e8:	lsl	x9, x9, #3
    d4ec:	mov	x10, x8
    d4f0:	ldr	x11, [x10], #24
    d4f4:	cmp	x11, x0
    d4f8:	b.eq	d5a8 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0xf8>  // b.none
    d4fc:	subs	x9, x9, #0x18
    d500:	mov	x8, x10
    d504:	b.ne	d4f0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x40>  // b.any
    d508:	ldr	x20, [x19, #8]
    d50c:	ldr	w21, [x19, #16]
    d510:	mov	x0, x19
    d514:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d518:	mov	w8, #0x503                 	// #1283
    d51c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d520:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d524:	stp	x0, x1, [sp, #80]
    d528:	add	x9, x9, #0x0
    d52c:	add	x10, sp, #0x50
    d530:	add	x11, x11, #0x0
    d534:	mov	w19, #0x103                 	// #259
    d538:	strh	w8, [sp, #112]
    d53c:	sub	x8, x29, #0x58
    d540:	add	x0, sp, #0x60
    d544:	add	x1, sp, #0x38
    d548:	stp	x9, x10, [sp, #96]
    d54c:	stp	x11, xzr, [sp, #56]
    d550:	strh	w19, [sp, #72]
    d554:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d558:	mov	w8, #0x105                 	// #261
    d55c:	sub	x9, x29, #0x10
    d560:	strh	w8, [sp, #48]
    d564:	sub	x8, x29, #0x40
    d568:	sub	x0, x29, #0x58
    d56c:	add	x1, sp, #0x20
    d570:	stp	x9, xzr, [sp, #32]
    d574:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d578:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d57c:	add	x8, x8, #0x0
    d580:	stp	x8, xzr, [sp, #8]
    d584:	sub	x8, x29, #0x28
    d588:	sub	x0, x29, #0x40
    d58c:	add	x1, sp, #0x8
    d590:	strh	w19, [sp, #24]
    d594:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d598:	sub	x2, x29, #0x28
    d59c:	mov	x0, x20
    d5a0:	mov	x1, x21
    d5a4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d5a8:	cbz	x8, d508 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d5ac:	ldr	x0, [x8, #16]
    d5b0:	cbz	x0, d508 <_ZNK4llvm6Record12getValueInitENS_9StringRefE+0x58>
    d5b4:	ldp	x20, x19, [sp, #240]
    d5b8:	ldr	x21, [sp, #224]
    d5bc:	ldp	x29, x30, [sp, #208]
    d5c0:	add	sp, sp, #0x100
    d5c4:	ret

000000000000d5c8 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE>:
    d5c8:	sub	sp, sp, #0x100
    d5cc:	stp	x29, x30, [sp, #208]
    d5d0:	str	x21, [sp, #224]
    d5d4:	stp	x20, x19, [sp, #240]
    d5d8:	add	x29, sp, #0xd0
    d5dc:	mov	x19, x0
    d5e0:	stp	x1, x2, [x29, #-16]
    d5e4:	mov	x0, x1
    d5e8:	mov	x1, x2
    d5ec:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    d5f0:	ldr	w9, [x19, #80]
    d5f4:	cbz	w9, d620 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d5f8:	ldr	x8, [x19, #72]
    d5fc:	add	x9, x9, x9, lsl #1
    d600:	lsl	x9, x9, #3
    d604:	mov	x10, x8
    d608:	ldr	x11, [x10], #24
    d60c:	cmp	x11, x0
    d610:	b.eq	d6c0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0xf8>  // b.none
    d614:	subs	x9, x9, #0x18
    d618:	mov	x8, x10
    d61c:	b.ne	d608 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x40>  // b.any
    d620:	ldr	x20, [x19, #8]
    d624:	ldr	w21, [x19, #16]
    d628:	mov	x0, x19
    d62c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d630:	mov	w8, #0x503                 	// #1283
    d634:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d638:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d63c:	stp	x0, x1, [sp, #80]
    d640:	add	x9, x9, #0x0
    d644:	add	x10, sp, #0x50
    d648:	add	x11, x11, #0x0
    d64c:	mov	w19, #0x103                 	// #259
    d650:	strh	w8, [sp, #112]
    d654:	sub	x8, x29, #0x58
    d658:	add	x0, sp, #0x60
    d65c:	add	x1, sp, #0x38
    d660:	stp	x9, x10, [sp, #96]
    d664:	stp	x11, xzr, [sp, #56]
    d668:	strh	w19, [sp, #72]
    d66c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d670:	mov	w8, #0x105                 	// #261
    d674:	sub	x9, x29, #0x10
    d678:	strh	w8, [sp, #48]
    d67c:	sub	x8, x29, #0x40
    d680:	sub	x0, x29, #0x58
    d684:	add	x1, sp, #0x20
    d688:	stp	x9, xzr, [sp, #32]
    d68c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d690:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d694:	add	x8, x8, #0x0
    d698:	stp	x8, xzr, [sp, #8]
    d69c:	sub	x8, x29, #0x28
    d6a0:	sub	x0, x29, #0x40
    d6a4:	add	x1, sp, #0x8
    d6a8:	strh	w19, [sp, #24]
    d6ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d6b0:	sub	x2, x29, #0x28
    d6b4:	mov	x0, x20
    d6b8:	mov	x1, x21
    d6bc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d6c0:	cbz	x8, d620 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d6c4:	ldr	x8, [x8, #16]
    d6c8:	cbz	x8, d620 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x58>
    d6cc:	ldrb	w9, [x8, #8]
    d6d0:	cmp	w9, #0x4
    d6d4:	b.eq	d6e0 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x118>  // b.none
    d6d8:	cmp	w9, #0x12
    d6dc:	b.ne	d6f8 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0x130>  // b.any
    d6e0:	ldp	x0, x1, [x8, #24]
    d6e4:	ldp	x20, x19, [sp, #240]
    d6e8:	ldr	x21, [sp, #224]
    d6ec:	ldp	x29, x30, [sp, #208]
    d6f0:	add	sp, sp, #0x100
    d6f4:	ret
    d6f8:	ldr	x20, [x19, #8]
    d6fc:	ldr	w21, [x19, #16]
    d700:	mov	x0, x19
    d704:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d708:	mov	w8, #0x503                 	// #1283
    d70c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d710:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d714:	stp	x0, x1, [sp, #80]
    d718:	add	x9, x9, #0x0
    d71c:	add	x10, sp, #0x50
    d720:	add	x11, x11, #0x0
    d724:	mov	w19, #0x103                 	// #259
    d728:	strh	w8, [sp, #112]
    d72c:	sub	x8, x29, #0x58
    d730:	add	x0, sp, #0x60
    d734:	add	x1, sp, #0x38
    d738:	stp	x9, x10, [sp, #96]
    d73c:	stp	x11, xzr, [sp, #56]
    d740:	strh	w19, [sp, #72]
    d744:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d748:	mov	w8, #0x105                 	// #261
    d74c:	sub	x9, x29, #0x10
    d750:	strh	w8, [sp, #48]
    d754:	sub	x8, x29, #0x40
    d758:	sub	x0, x29, #0x58
    d75c:	add	x1, sp, #0x20
    d760:	stp	x9, xzr, [sp, #32]
    d764:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d768:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d76c:	add	x8, x8, #0x0
    d770:	b	d698 <_ZNK4llvm6Record16getValueAsStringENS_9StringRefE+0xd0>

000000000000d774 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE>:
    d774:	sub	sp, sp, #0x100
    d778:	stp	x29, x30, [sp, #208]
    d77c:	str	x21, [sp, #224]
    d780:	stp	x20, x19, [sp, #240]
    d784:	add	x29, sp, #0xd0
    d788:	mov	x19, x0
    d78c:	stp	x1, x2, [x29, #-16]
    d790:	mov	x0, x1
    d794:	mov	x1, x2
    d798:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    d79c:	ldr	w9, [x19, #80]
    d7a0:	cbz	w9, d7cc <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d7a4:	ldr	x8, [x19, #72]
    d7a8:	add	x9, x9, x9, lsl #1
    d7ac:	lsl	x9, x9, #3
    d7b0:	mov	x10, x8
    d7b4:	ldr	x11, [x10], #24
    d7b8:	cmp	x11, x0
    d7bc:	b.eq	d86c <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0xf8>  // b.none
    d7c0:	subs	x9, x9, #0x18
    d7c4:	mov	x8, x10
    d7c8:	b.ne	d7b4 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x40>  // b.any
    d7cc:	ldr	x20, [x19, #8]
    d7d0:	ldr	w21, [x19, #16]
    d7d4:	mov	x0, x19
    d7d8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d7dc:	mov	w8, #0x503                 	// #1283
    d7e0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d7e4:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d7e8:	stp	x0, x1, [sp, #80]
    d7ec:	add	x9, x9, #0x0
    d7f0:	add	x10, sp, #0x50
    d7f4:	add	x11, x11, #0x0
    d7f8:	mov	w19, #0x103                 	// #259
    d7fc:	strh	w8, [sp, #112]
    d800:	sub	x8, x29, #0x58
    d804:	add	x0, sp, #0x60
    d808:	add	x1, sp, #0x38
    d80c:	stp	x9, x10, [sp, #96]
    d810:	stp	x11, xzr, [sp, #56]
    d814:	strh	w19, [sp, #72]
    d818:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d81c:	mov	w8, #0x105                 	// #261
    d820:	sub	x9, x29, #0x10
    d824:	strh	w8, [sp, #48]
    d828:	sub	x8, x29, #0x40
    d82c:	sub	x0, x29, #0x58
    d830:	add	x1, sp, #0x20
    d834:	stp	x9, xzr, [sp, #32]
    d838:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d83c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d840:	add	x8, x8, #0x0
    d844:	stp	x8, xzr, [sp, #8]
    d848:	sub	x8, x29, #0x28
    d84c:	sub	x0, x29, #0x40
    d850:	add	x1, sp, #0x8
    d854:	strh	w19, [sp, #24]
    d858:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d85c:	sub	x2, x29, #0x28
    d860:	mov	x0, x20
    d864:	mov	x1, x21
    d868:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d86c:	cbz	x8, d7cc <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d870:	ldr	x0, [x8, #16]
    d874:	cbz	x0, d7cc <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x58>
    d878:	ldrb	w8, [x0, #8]
    d87c:	cmp	w8, #0x3
    d880:	b.ne	d898 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0x124>  // b.any
    d884:	ldp	x20, x19, [sp, #240]
    d888:	ldr	x21, [sp, #224]
    d88c:	ldp	x29, x30, [sp, #208]
    d890:	add	sp, sp, #0x100
    d894:	ret
    d898:	ldr	x20, [x19, #8]
    d89c:	ldr	w21, [x19, #16]
    d8a0:	mov	x0, x19
    d8a4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d8a8:	mov	w8, #0x503                 	// #1283
    d8ac:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d8b0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d8b4:	stp	x0, x1, [sp, #80]
    d8b8:	add	x9, x9, #0x0
    d8bc:	add	x10, sp, #0x50
    d8c0:	add	x11, x11, #0x0
    d8c4:	mov	w19, #0x103                 	// #259
    d8c8:	strh	w8, [sp, #112]
    d8cc:	sub	x8, x29, #0x58
    d8d0:	add	x0, sp, #0x60
    d8d4:	add	x1, sp, #0x38
    d8d8:	stp	x9, x10, [sp, #96]
    d8dc:	stp	x11, xzr, [sp, #56]
    d8e0:	strh	w19, [sp, #72]
    d8e4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d8e8:	mov	w8, #0x105                 	// #261
    d8ec:	sub	x9, x29, #0x10
    d8f0:	strh	w8, [sp, #48]
    d8f4:	sub	x8, x29, #0x40
    d8f8:	sub	x0, x29, #0x58
    d8fc:	add	x1, sp, #0x20
    d900:	stp	x9, xzr, [sp, #32]
    d904:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d908:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d90c:	add	x8, x8, #0x0
    d910:	b	d844 <_ZNK4llvm6Record18getValueAsBitsInitENS_9StringRefE+0xd0>

000000000000d914 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>:
    d914:	sub	sp, sp, #0x100
    d918:	stp	x29, x30, [sp, #208]
    d91c:	str	x21, [sp, #224]
    d920:	stp	x20, x19, [sp, #240]
    d924:	add	x29, sp, #0xd0
    d928:	mov	x19, x0
    d92c:	stp	x1, x2, [x29, #-16]
    d930:	mov	x0, x1
    d934:	mov	x1, x2
    d938:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    d93c:	ldr	w9, [x19, #80]
    d940:	cbz	w9, d96c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    d944:	ldr	x8, [x19, #72]
    d948:	add	x9, x9, x9, lsl #1
    d94c:	lsl	x9, x9, #3
    d950:	mov	x10, x8
    d954:	ldr	x11, [x10], #24
    d958:	cmp	x11, x0
    d95c:	b.eq	da0c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0xf8>  // b.none
    d960:	subs	x9, x9, #0x18
    d964:	mov	x8, x10
    d968:	b.ne	d954 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x40>  // b.any
    d96c:	ldr	x20, [x19, #8]
    d970:	ldr	w21, [x19, #16]
    d974:	mov	x0, x19
    d978:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d97c:	mov	w8, #0x503                 	// #1283
    d980:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    d984:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    d988:	stp	x0, x1, [sp, #80]
    d98c:	add	x9, x9, #0x0
    d990:	add	x10, sp, #0x50
    d994:	add	x11, x11, #0x0
    d998:	mov	w19, #0x103                 	// #259
    d99c:	strh	w8, [sp, #112]
    d9a0:	sub	x8, x29, #0x58
    d9a4:	add	x0, sp, #0x60
    d9a8:	add	x1, sp, #0x38
    d9ac:	stp	x9, x10, [sp, #96]
    d9b0:	stp	x11, xzr, [sp, #56]
    d9b4:	strh	w19, [sp, #72]
    d9b8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9bc:	mov	w8, #0x105                 	// #261
    d9c0:	sub	x9, x29, #0x10
    d9c4:	strh	w8, [sp, #48]
    d9c8:	sub	x8, x29, #0x40
    d9cc:	sub	x0, x29, #0x58
    d9d0:	add	x1, sp, #0x20
    d9d4:	stp	x9, xzr, [sp, #32]
    d9d8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9dc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    d9e0:	add	x8, x8, #0x0
    d9e4:	stp	x8, xzr, [sp, #8]
    d9e8:	sub	x8, x29, #0x28
    d9ec:	sub	x0, x29, #0x40
    d9f0:	add	x1, sp, #0x8
    d9f4:	strh	w19, [sp, #24]
    d9f8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    d9fc:	sub	x2, x29, #0x28
    da00:	mov	x0, x20
    da04:	mov	x1, x21
    da08:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    da0c:	cbz	x8, d96c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    da10:	ldr	x0, [x8, #16]
    da14:	cbz	x0, d96c <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x58>
    da18:	ldrb	w8, [x0, #8]
    da1c:	cmp	w8, #0x9
    da20:	b.ne	da38 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0x124>  // b.any
    da24:	ldp	x20, x19, [sp, #240]
    da28:	ldr	x21, [sp, #224]
    da2c:	ldp	x29, x30, [sp, #208]
    da30:	add	sp, sp, #0x100
    da34:	ret
    da38:	ldr	x20, [x19, #8]
    da3c:	ldr	w21, [x19, #16]
    da40:	mov	x0, x19
    da44:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    da48:	mov	w8, #0x503                 	// #1283
    da4c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    da50:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    da54:	stp	x0, x1, [sp, #80]
    da58:	add	x9, x9, #0x0
    da5c:	add	x10, sp, #0x50
    da60:	add	x11, x11, #0x0
    da64:	mov	w19, #0x103                 	// #259
    da68:	strh	w8, [sp, #112]
    da6c:	sub	x8, x29, #0x58
    da70:	add	x0, sp, #0x60
    da74:	add	x1, sp, #0x38
    da78:	stp	x9, x10, [sp, #96]
    da7c:	stp	x11, xzr, [sp, #56]
    da80:	strh	w19, [sp, #72]
    da84:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    da88:	mov	w8, #0x105                 	// #261
    da8c:	sub	x9, x29, #0x10
    da90:	strh	w8, [sp, #48]
    da94:	sub	x8, x29, #0x40
    da98:	sub	x0, x29, #0x58
    da9c:	add	x1, sp, #0x20
    daa0:	stp	x9, xzr, [sp, #32]
    daa4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    daa8:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    daac:	add	x8, x8, #0x0
    dab0:	b	d9e4 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE+0xd0>

000000000000dab4 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE>:
    dab4:	sub	sp, sp, #0x140
    dab8:	stp	x29, x30, [sp, #224]
    dabc:	stp	x28, x27, [sp, #240]
    dac0:	stp	x26, x25, [sp, #256]
    dac4:	stp	x24, x23, [sp, #272]
    dac8:	stp	x22, x21, [sp, #288]
    dacc:	stp	x20, x19, [sp, #304]
    dad0:	add	x29, sp, #0xe0
    dad4:	mov	x20, x8
    dad8:	stp	x1, x2, [x29, #-24]
    dadc:	str	x0, [sp, #8]
    dae0:	bl	d914 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    dae4:	stp	xzr, xzr, [x20, #8]
    dae8:	str	xzr, [x20]
    daec:	ldr	w8, [x0, #32]
    daf0:	lsl	x25, x8, #3
    daf4:	cbz	x25, dc1c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x168>
    daf8:	mov	x21, xzr
    dafc:	add	x26, x0, #0x28
    db00:	b	db18 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x64>
    db04:	str	x27, [x21], #8
    db08:	str	x21, [x20, #8]
    db0c:	subs	x25, x25, #0x8
    db10:	add	x26, x26, #0x8
    db14:	b.eq	dc1c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x168>  // b.none
    db18:	ldr	x8, [x26]
    db1c:	cbz	x8, dc3c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x188>
    db20:	ldrb	w9, [x8, #8]
    db24:	cmp	w9, #0x6
    db28:	b.ne	dc5c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x1a8>  // b.any
    db2c:	ldr	x9, [x20, #16]
    db30:	ldr	x27, [x8, #24]
    db34:	cmp	x21, x9
    db38:	b.ne	db04 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x50>  // b.any
    db3c:	ldr	x22, [x20]
    db40:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    db44:	sub	x8, x21, x22
    db48:	cmp	x8, x9
    db4c:	b.eq	dcfc <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x248>  // b.none
    db50:	asr	x9, x8, #3
    db54:	cmp	x8, #0x0
    db58:	csinc	x8, x9, xzr, ne  // ne = any
    db5c:	adds	x8, x8, x9
    db60:	lsr	x10, x8, #60
    db64:	cset	w9, cs  // cs = hs, nlast
    db68:	cmp	x10, #0x0
    db6c:	cset	w10, ne  // ne = any
    db70:	orr	w9, w9, w10
    db74:	cmp	w9, #0x0
    db78:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    db7c:	sub	x24, x21, x22
    db80:	csel	x19, x9, x8, ne  // ne = any
    db84:	asr	x28, x24, #3
    db88:	cbz	x19, dc04 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x150>
    db8c:	lsl	x0, x19, #3
    db90:	bl	0 <_Znwm>
    db94:	mov	x23, x0
    db98:	add	x28, x23, x28, lsl #3
    db9c:	cmp	x24, #0x1
    dba0:	str	x27, [x28]
    dba4:	b.lt	dbb8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x104>  // b.tstop
    dba8:	mov	x0, x23
    dbac:	mov	x1, x22
    dbb0:	mov	x2, x24
    dbb4:	bl	0 <memmove>
    dbb8:	sub	x2, x21, x21
    dbbc:	add	x24, x28, #0x8
    dbc0:	cmp	x2, #0x1
    dbc4:	asr	x27, x2, #3
    dbc8:	b.lt	dbd8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x124>  // b.tstop
    dbcc:	mov	x0, x24
    dbd0:	mov	x1, x21
    dbd4:	bl	0 <memmove>
    dbd8:	add	x21, x24, x27, lsl #3
    dbdc:	cbz	x22, dbe8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x134>
    dbe0:	mov	x0, x22
    dbe4:	bl	0 <_ZdlPv>
    dbe8:	add	x8, x23, x19, lsl #3
    dbec:	stp	x23, x21, [x20]
    dbf0:	str	x8, [x20, #16]
    dbf4:	subs	x25, x25, #0x8
    dbf8:	add	x26, x26, #0x8
    dbfc:	b.ne	db18 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x64>  // b.any
    dc00:	b	dc1c <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x168>
    dc04:	mov	x23, xzr
    dc08:	add	x28, x23, x28, lsl #3
    dc0c:	cmp	x24, #0x1
    dc10:	str	x27, [x28]
    dc14:	b.ge	dba8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0xf4>  // b.tcont
    dc18:	b	dbb8 <_ZNK4llvm6Record20getValueAsListOfDefsENS_9StringRefE+0x104>
    dc1c:	ldp	x20, x19, [sp, #304]
    dc20:	ldp	x22, x21, [sp, #288]
    dc24:	ldp	x24, x23, [sp, #272]
    dc28:	ldp	x26, x25, [sp, #256]
    dc2c:	ldp	x28, x27, [sp, #240]
    dc30:	ldp	x29, x30, [sp, #224]
    dc34:	add	sp, sp, #0x140
    dc38:	ret
    dc3c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc40:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc44:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc48:	add	x0, x0, #0x0
    dc4c:	add	x1, x1, #0x0
    dc50:	add	x3, x3, #0x0
    dc54:	mov	w2, #0x69                  	// #105
    dc58:	bl	0 <__assert_fail>
    dc5c:	ldr	x0, [sp, #8]
    dc60:	ldr	x20, [x0, #8]
    dc64:	ldr	w21, [x0, #16]
    dc68:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dc6c:	mov	w8, #0x503                 	// #1283
    dc70:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc74:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    dc78:	stp	x0, x1, [sp, #88]
    dc7c:	add	x9, x9, #0x0
    dc80:	add	x10, sp, #0x58
    dc84:	add	x11, x11, #0x0
    dc88:	mov	w19, #0x103                 	// #259
    dc8c:	strh	w8, [sp, #120]
    dc90:	sub	x8, x29, #0x60
    dc94:	add	x0, sp, #0x68
    dc98:	add	x1, sp, #0x40
    dc9c:	stp	x9, x10, [sp, #104]
    dca0:	stp	x11, xzr, [sp, #64]
    dca4:	strh	w19, [sp, #80]
    dca8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dcac:	mov	w8, #0x105                 	// #261
    dcb0:	sub	x9, x29, #0x18
    dcb4:	strh	w8, [sp, #56]
    dcb8:	sub	x8, x29, #0x48
    dcbc:	sub	x0, x29, #0x60
    dcc0:	add	x1, sp, #0x28
    dcc4:	stp	x9, xzr, [sp, #40]
    dcc8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dccc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    dcd0:	add	x8, x8, #0x0
    dcd4:	stp	x8, xzr, [sp, #16]
    dcd8:	sub	x8, x29, #0x30
    dcdc:	sub	x0, x29, #0x48
    dce0:	add	x1, sp, #0x10
    dce4:	strh	w19, [sp, #32]
    dce8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dcec:	sub	x2, x29, #0x30
    dcf0:	mov	x0, x20
    dcf4:	mov	x1, x21
    dcf8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dcfc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd00:	add	x0, x0, #0x0
    dd04:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000dd08 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE>:
    dd08:	sub	sp, sp, #0x190
    dd0c:	stp	x29, x30, [sp, #336]
    dd10:	stp	x28, x23, [sp, #352]
    dd14:	stp	x22, x21, [sp, #368]
    dd18:	stp	x20, x19, [sp, #384]
    dd1c:	add	x29, sp, #0x150
    dd20:	mov	x19, x0
    dd24:	stp	x1, x2, [x29, #-16]
    dd28:	mov	x0, x1
    dd2c:	mov	x1, x2
    dd30:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    dd34:	ldr	w8, [x19, #80]
    dd38:	cbz	w8, dd64 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>
    dd3c:	ldr	x9, [x19, #72]
    dd40:	add	x8, x8, x8, lsl #1
    dd44:	lsl	x8, x8, #3
    dd48:	add	x21, x9, #0x10
    dd4c:	ldur	x9, [x21, #-16]
    dd50:	cmp	x9, x0
    dd54:	b.eq	de04 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0xfc>  // b.none
    dd58:	subs	x8, x8, #0x18
    dd5c:	add	x21, x21, #0x18
    dd60:	b.ne	dd4c <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x44>  // b.any
    dd64:	ldr	x20, [x19, #8]
    dd68:	ldr	w21, [x19, #16]
    dd6c:	mov	x0, x19
    dd70:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dd74:	mov	w8, #0x503                 	// #1283
    dd78:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd7c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    dd80:	stp	x0, x1, [sp, #152]
    dd84:	add	x9, x9, #0x0
    dd88:	add	x10, sp, #0x98
    dd8c:	add	x11, x11, #0x0
    dd90:	mov	w19, #0x103                 	// #259
    dd94:	sturh	w8, [x29, #-72]
    dd98:	sub	x8, x29, #0x40
    dd9c:	sub	x0, x29, #0x58
    dda0:	sub	x1, x29, #0x70
    dda4:	stp	x9, x10, [x29, #-88]
    dda8:	stp	x11, xzr, [x29, #-112]
    ddac:	sturh	w19, [x29, #-96]
    ddb0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ddb4:	mov	w8, #0x105                 	// #261
    ddb8:	sub	x9, x29, #0x10
    ddbc:	sturh	w8, [x29, #-120]
    ddc0:	sub	x8, x29, #0x28
    ddc4:	sub	x0, x29, #0x40
    ddc8:	sub	x1, x29, #0x88
    ddcc:	stp	x9, xzr, [x29, #-136]
    ddd0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ddd4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ddd8:	add	x8, x8, #0x0
    dddc:	stp	x8, xzr, [x29, #-160]
    dde0:	add	x8, sp, #0x8
    dde4:	sub	x0, x29, #0x28
    dde8:	sub	x1, x29, #0xa0
    ddec:	sturh	w19, [x29, #-144]
    ddf0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ddf4:	add	x2, sp, #0x8
    ddf8:	mov	x0, x20
    ddfc:	mov	x1, x21
    de00:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    de04:	cmp	x21, #0x10
    de08:	b.eq	dd64 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>  // b.none
    de0c:	ldr	x8, [x21]
    de10:	cbz	x8, dd64 <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x5c>
    de14:	ldrb	w9, [x8, #8]
    de18:	cmp	w9, #0x8
    de1c:	b.ne	de3c <_ZNK4llvm6Record13getValueAsIntENS_9StringRefE+0x134>  // b.any
    de20:	ldr	x0, [x8, #24]
    de24:	ldp	x20, x19, [sp, #384]
    de28:	ldp	x22, x21, [sp, #368]
    de2c:	ldp	x28, x23, [sp, #352]
    de30:	ldp	x29, x30, [sp, #336]
    de34:	add	sp, sp, #0x190
    de38:	ret
    de3c:	mov	x0, x19
    de40:	ldr	x19, [x19, #8]
    de44:	ldr	w20, [x0, #16]
    de48:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    de4c:	add	x8, x8, #0x0
    de50:	mov	w22, #0x103                 	// #259
    de54:	stp	x8, xzr, [x29, #-160]
    de58:	sturh	w22, [x29, #-144]
    de5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de60:	add	x8, sp, #0x88
    de64:	stp	x0, x1, [sp, #136]
    de68:	mov	w23, #0x105                 	// #261
    de6c:	stp	x8, xzr, [sp, #152]
    de70:	sub	x8, x29, #0x88
    de74:	sub	x0, x29, #0xa0
    de78:	add	x1, sp, #0x98
    de7c:	strh	w23, [sp, #168]
    de80:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    de84:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    de88:	add	x8, x8, #0x0
    de8c:	stp	x8, xzr, [sp, #112]
    de90:	sub	x8, x29, #0x70
    de94:	sub	x0, x29, #0x88
    de98:	add	x1, sp, #0x70
    de9c:	strh	w22, [sp, #128]
    dea0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dea4:	sub	x8, x29, #0x10
    dea8:	stp	x8, xzr, [sp, #88]
    deac:	sub	x8, x29, #0x58
    deb0:	sub	x0, x29, #0x70
    deb4:	add	x1, sp, #0x58
    deb8:	strh	w23, [sp, #104]
    debc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dec0:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    dec4:	add	x8, x8, #0x0
    dec8:	stp	x8, xzr, [sp, #64]
    decc:	sub	x8, x29, #0x40
    ded0:	sub	x0, x29, #0x58
    ded4:	add	x1, sp, #0x40
    ded8:	strh	w22, [sp, #80]
    dedc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    dee0:	ldr	x0, [x21]
    dee4:	add	x21, sp, #0x8
    dee8:	ldr	x8, [x0]
    deec:	ldr	x9, [x8, #40]
    def0:	add	x8, sp, #0x8
    def4:	blr	x9
    def8:	mov	w8, #0x104                 	// #260
    defc:	strh	w8, [sp, #56]
    df00:	sub	x8, x29, #0x28
    df04:	sub	x0, x29, #0x40
    df08:	add	x1, sp, #0x28
    df0c:	stp	x21, xzr, [sp, #40]
    df10:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    df14:	sub	x2, x29, #0x28
    df18:	mov	x0, x19
    df1c:	mov	x1, x20
    df20:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000df24 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE>:
    df24:	sub	sp, sp, #0x1c0
    df28:	stp	x29, x30, [sp, #352]
    df2c:	stp	x28, x27, [sp, #368]
    df30:	stp	x26, x25, [sp, #384]
    df34:	stp	x24, x23, [sp, #400]
    df38:	stp	x22, x21, [sp, #416]
    df3c:	stp	x20, x19, [sp, #432]
    df40:	add	x29, sp, #0x160
    df44:	mov	x21, x8
    df48:	stp	x1, x2, [x29, #-24]
    df4c:	str	x0, [sp]
    df50:	bl	d914 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    df54:	stp	xzr, xzr, [x21, #8]
    df58:	str	xzr, [x21]
    df5c:	ldr	w8, [x0, #32]
    df60:	lsl	x25, x8, #3
    df64:	cbz	x25, e090 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x16c>
    df68:	mov	x23, xzr
    df6c:	mov	x19, xzr
    df70:	mov	x22, xzr
    df74:	add	x26, x0, #0x28
    df78:	b	df90 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x6c>
    df7c:	str	x28, [x19], #8
    df80:	str	x19, [x21, #8]
    df84:	subs	x25, x25, #0x8
    df88:	add	x26, x26, #0x8
    df8c:	b.eq	e090 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x16c>  // b.none
    df90:	ldr	x8, [x26]
    df94:	cbz	x8, e0b0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x18c>
    df98:	ldrb	w9, [x8, #8]
    df9c:	cmp	w9, #0x8
    dfa0:	b.ne	e0d0 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x1ac>  // b.any
    dfa4:	ldr	x28, [x8, #24]
    dfa8:	cmp	x19, x22
    dfac:	b.ne	df7c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x58>  // b.any
    dfb0:	sub	x8, x19, x23
    dfb4:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    dfb8:	cmp	x8, x9
    dfbc:	b.eq	e1bc <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x298>  // b.none
    dfc0:	asr	x9, x8, #3
    dfc4:	cmp	x8, #0x0
    dfc8:	csinc	x8, x9, xzr, ne  // ne = any
    dfcc:	adds	x8, x8, x9
    dfd0:	lsr	x10, x8, #60
    dfd4:	cset	w9, cs  // cs = hs, nlast
    dfd8:	cmp	x10, #0x0
    dfdc:	cset	w10, ne  // ne = any
    dfe0:	orr	w9, w9, w10
    dfe4:	cmp	w9, #0x0
    dfe8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    dfec:	sub	x24, x22, x23
    dff0:	csel	x27, x9, x8, ne  // ne = any
    dff4:	asr	x20, x24, #3
    dff8:	str	x23, [sp, #8]
    dffc:	cbz	x27, e078 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x154>
    e000:	lsl	x0, x27, #3
    e004:	bl	0 <_Znwm>
    e008:	mov	x23, x0
    e00c:	add	x20, x23, x20, lsl #3
    e010:	cmp	x24, #0x1
    e014:	str	x28, [x20]
    e018:	b.lt	e02c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x108>  // b.tstop
    e01c:	ldr	x1, [sp, #8]
    e020:	mov	x0, x23
    e024:	mov	x2, x24
    e028:	bl	0 <memmove>
    e02c:	sub	x2, x19, x22
    e030:	add	x24, x20, #0x8
    e034:	cmp	x2, #0x1
    e038:	asr	x19, x2, #3
    e03c:	b.lt	e04c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x128>  // b.tstop
    e040:	mov	x0, x24
    e044:	mov	x1, x22
    e048:	bl	0 <memmove>
    e04c:	ldr	x0, [sp, #8]
    e050:	add	x19, x24, x19, lsl #3
    e054:	cbz	x0, e05c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x138>
    e058:	bl	0 <_ZdlPv>
    e05c:	add	x22, x23, x27, lsl #3
    e060:	stp	x23, x19, [x21]
    e064:	str	x22, [x21, #16]
    e068:	subs	x25, x25, #0x8
    e06c:	add	x26, x26, #0x8
    e070:	b.ne	df90 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x6c>  // b.any
    e074:	b	e090 <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x16c>
    e078:	mov	x23, xzr
    e07c:	add	x20, x23, x20, lsl #3
    e080:	cmp	x24, #0x1
    e084:	str	x28, [x20]
    e088:	b.ge	e01c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0xf8>  // b.tcont
    e08c:	b	e02c <_ZNK4llvm6Record20getValueAsListOfIntsENS_9StringRefE+0x108>
    e090:	ldp	x20, x19, [sp, #432]
    e094:	ldp	x22, x21, [sp, #416]
    e098:	ldp	x24, x23, [sp, #400]
    e09c:	ldp	x26, x25, [sp, #384]
    e0a0:	ldp	x28, x27, [sp, #368]
    e0a4:	ldp	x29, x30, [sp, #352]
    e0a8:	add	sp, sp, #0x1c0
    e0ac:	ret
    e0b0:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0b4:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0b8:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0bc:	add	x0, x0, #0x0
    e0c0:	add	x1, x1, #0x0
    e0c4:	add	x3, x3, #0x0
    e0c8:	mov	w2, #0x69                  	// #105
    e0cc:	bl	0 <__assert_fail>
    e0d0:	ldr	x0, [sp]
    e0d4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e0d8:	add	x9, x9, #0x0
    e0dc:	mov	w19, #0x103                 	// #259
    e0e0:	ldr	x20, [x0, #8]
    e0e4:	ldr	w21, [x0, #16]
    e0e8:	stp	x9, xzr, [x29, #-168]
    e0ec:	sturh	w19, [x29, #-152]
    e0f0:	mov	x22, x8
    e0f4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e0f8:	add	x8, sp, #0x90
    e0fc:	stp	x0, x1, [sp, #144]
    e100:	mov	w23, #0x105                 	// #261
    e104:	stp	x8, xzr, [sp, #160]
    e108:	sub	x8, x29, #0x90
    e10c:	sub	x0, x29, #0xa8
    e110:	add	x1, sp, #0xa0
    e114:	strh	w23, [sp, #176]
    e118:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e11c:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e120:	add	x8, x8, #0x0
    e124:	stp	x8, xzr, [sp, #120]
    e128:	sub	x8, x29, #0x78
    e12c:	sub	x0, x29, #0x90
    e130:	add	x1, sp, #0x78
    e134:	strh	w19, [sp, #136]
    e138:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e13c:	sub	x8, x29, #0x18
    e140:	stp	x8, xzr, [sp, #96]
    e144:	sub	x8, x29, #0x60
    e148:	sub	x0, x29, #0x78
    e14c:	add	x1, sp, #0x60
    e150:	strh	w23, [sp, #112]
    e154:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e158:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e15c:	add	x8, x8, #0x0
    e160:	stp	x8, xzr, [sp, #72]
    e164:	sub	x8, x29, #0x48
    e168:	sub	x0, x29, #0x60
    e16c:	add	x1, sp, #0x48
    e170:	strh	w19, [sp, #88]
    e174:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e178:	ldr	x8, [x22]
    e17c:	mov	x0, x22
    e180:	add	x19, sp, #0x10
    e184:	ldr	x9, [x8, #40]
    e188:	add	x8, sp, #0x10
    e18c:	blr	x9
    e190:	mov	w8, #0x104                 	// #260
    e194:	strh	w8, [sp, #64]
    e198:	sub	x8, x29, #0x30
    e19c:	sub	x0, x29, #0x48
    e1a0:	add	x1, sp, #0x30
    e1a4:	stp	x19, xzr, [sp, #48]
    e1a8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e1ac:	sub	x2, x29, #0x30
    e1b0:	mov	x0, x20
    e1b4:	mov	x1, x21
    e1b8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e1bc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    e1c0:	add	x0, x0, #0x0
    e1c4:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000e1c8 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE>:
    e1c8:	sub	sp, sp, #0x1c0
    e1cc:	stp	x29, x30, [sp, #352]
    e1d0:	stp	x28, x27, [sp, #368]
    e1d4:	stp	x26, x25, [sp, #384]
    e1d8:	stp	x24, x23, [sp, #400]
    e1dc:	stp	x22, x21, [sp, #416]
    e1e0:	stp	x20, x19, [sp, #432]
    e1e4:	add	x29, sp, #0x160
    e1e8:	mov	x20, x8
    e1ec:	stp	x1, x2, [x29, #-24]
    e1f0:	str	x0, [sp]
    e1f4:	bl	d914 <_ZNK4llvm6Record18getValueAsListInitENS_9StringRefE>
    e1f8:	stp	xzr, xzr, [x20, #8]
    e1fc:	str	xzr, [x20]
    e200:	ldr	w8, [x0, #32]
    e204:	lsl	x8, x8, #3
    e208:	cbz	x8, e33c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x174>
    e20c:	add	x23, x0, #0x28
    e210:	mov	x24, xzr
    e214:	mov	x27, xzr
    e218:	add	x9, x23, x8
    e21c:	str	x9, [sp, #8]
    e220:	b	e244 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x7c>
    e224:	stp	x26, x28, [x27]
    e228:	add	x28, x27, #0x10
    e22c:	str	x28, [x20, #8]
    e230:	add	x23, x23, #0x8
    e234:	cmp	x23, x9
    e238:	mov	x24, x28
    e23c:	mov	x27, x28
    e240:	b.eq	e33c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x174>  // b.none
    e244:	ldr	x22, [x23]
    e248:	cbz	x22, e35c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x194>
    e24c:	ldrb	w8, [x22, #8]
    e250:	cmp	w8, #0x12
    e254:	b.ne	e37c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x1b4>  // b.any
    e258:	ldr	x8, [x20, #16]
    e25c:	ldp	x26, x28, [x22, #24]
    e260:	cmp	x27, x8
    e264:	b.ne	e224 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x5c>  // b.any
    e268:	ldr	x21, [x20]
    e26c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    e270:	sub	x8, x24, x21
    e274:	cmp	x8, x9
    e278:	b.eq	e464 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x29c>  // b.none
    e27c:	asr	x9, x8, #4
    e280:	cmp	x8, #0x0
    e284:	csinc	x8, x9, xzr, ne  // ne = any
    e288:	adds	x8, x8, x9
    e28c:	lsr	x10, x8, #59
    e290:	cset	w9, cs  // cs = hs, nlast
    e294:	cmp	x10, #0x0
    e298:	cset	w10, ne  // ne = any
    e29c:	orr	w9, w9, w10
    e2a0:	cmp	w9, #0x0
    e2a4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    e2a8:	csel	x19, x9, x8, ne  // ne = any
    e2ac:	sub	x8, x27, x21
    e2b0:	asr	x25, x8, #4
    e2b4:	cbz	x19, e2c8 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x100>
    e2b8:	lsl	x0, x19, #4
    e2bc:	bl	0 <_Znwm>
    e2c0:	mov	x22, x0
    e2c4:	b	e2cc <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x104>
    e2c8:	mov	x22, xzr
    e2cc:	add	x8, x22, x25, lsl #4
    e2d0:	cmp	x27, x21
    e2d4:	stp	x26, x28, [x8]
    e2d8:	mov	x8, x22
    e2dc:	b.eq	e2fc <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x134>  // b.none
    e2e0:	mov	x8, x22
    e2e4:	mov	x9, x21
    e2e8:	ldr	q0, [x9], #16
    e2ec:	cmp	x27, x9
    e2f0:	str	q0, [x8]
    e2f4:	add	x8, x8, #0x10
    e2f8:	b.ne	e2e8 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x120>  // b.any
    e2fc:	cmp	x27, x24
    e300:	add	x28, x8, #0x10
    e304:	b.eq	e31c <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x154>  // b.none
    e308:	ldr	q0, [x27], #16
    e30c:	cmp	x24, x27
    e310:	str	q0, [x28]
    e314:	add	x28, x28, #0x10
    e318:	b.ne	e308 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x140>  // b.any
    e31c:	cbz	x21, e328 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x160>
    e320:	mov	x0, x21
    e324:	bl	0 <_ZdlPv>
    e328:	ldr	x9, [sp, #8]
    e32c:	add	x8, x22, x19, lsl #4
    e330:	stp	x22, x28, [x20]
    e334:	str	x8, [x20, #16]
    e338:	b	e230 <_ZNK4llvm6Record23getValueAsListOfStringsENS_9StringRefE+0x68>
    e33c:	ldp	x20, x19, [sp, #432]
    e340:	ldp	x22, x21, [sp, #416]
    e344:	ldp	x24, x23, [sp, #400]
    e348:	ldp	x26, x25, [sp, #384]
    e34c:	ldp	x28, x27, [sp, #368]
    e350:	ldp	x29, x30, [sp, #352]
    e354:	add	sp, sp, #0x1c0
    e358:	ret
    e35c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    e360:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    e364:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    e368:	add	x0, x0, #0x0
    e36c:	add	x1, x1, #0x0
    e370:	add	x3, x3, #0x0
    e374:	mov	w2, #0x69                  	// #105
    e378:	bl	0 <__assert_fail>
    e37c:	ldr	x0, [sp]
    e380:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e384:	add	x8, x8, #0x0
    e388:	mov	w19, #0x103                 	// #259
    e38c:	ldr	x20, [x0, #8]
    e390:	ldr	w21, [x0, #16]
    e394:	stp	x8, xzr, [x29, #-168]
    e398:	sturh	w19, [x29, #-152]
    e39c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e3a0:	add	x8, sp, #0x90
    e3a4:	stp	x0, x1, [sp, #144]
    e3a8:	mov	w23, #0x105                 	// #261
    e3ac:	stp	x8, xzr, [sp, #160]
    e3b0:	sub	x8, x29, #0x90
    e3b4:	sub	x0, x29, #0xa8
    e3b8:	add	x1, sp, #0xa0
    e3bc:	strh	w23, [sp, #176]
    e3c0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e3c4:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e3c8:	add	x8, x8, #0x0
    e3cc:	stp	x8, xzr, [sp, #120]
    e3d0:	sub	x8, x29, #0x78
    e3d4:	sub	x0, x29, #0x90
    e3d8:	add	x1, sp, #0x78
    e3dc:	strh	w19, [sp, #136]
    e3e0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e3e4:	sub	x8, x29, #0x18
    e3e8:	stp	x8, xzr, [sp, #96]
    e3ec:	sub	x8, x29, #0x60
    e3f0:	sub	x0, x29, #0x78
    e3f4:	add	x1, sp, #0x60
    e3f8:	strh	w23, [sp, #112]
    e3fc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e400:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e404:	add	x8, x8, #0x0
    e408:	stp	x8, xzr, [sp, #72]
    e40c:	sub	x8, x29, #0x48
    e410:	sub	x0, x29, #0x60
    e414:	add	x1, sp, #0x48
    e418:	strh	w19, [sp, #88]
    e41c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e420:	ldr	x8, [x22]
    e424:	mov	x0, x22
    e428:	add	x19, sp, #0x10
    e42c:	ldr	x9, [x8, #40]
    e430:	add	x8, sp, #0x10
    e434:	blr	x9
    e438:	mov	w8, #0x104                 	// #260
    e43c:	strh	w8, [sp, #64]
    e440:	sub	x8, x29, #0x30
    e444:	sub	x0, x29, #0x48
    e448:	add	x1, sp, #0x30
    e44c:	stp	x19, xzr, [sp, #48]
    e450:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e454:	sub	x2, x29, #0x30
    e458:	mov	x0, x20
    e45c:	mov	x1, x21
    e460:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e464:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    e468:	add	x0, x0, #0x0
    e46c:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000e470 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE>:
    e470:	sub	sp, sp, #0x100
    e474:	stp	x29, x30, [sp, #208]
    e478:	str	x21, [sp, #224]
    e47c:	stp	x20, x19, [sp, #240]
    e480:	add	x29, sp, #0xd0
    e484:	mov	x19, x0
    e488:	stp	x1, x2, [x29, #-16]
    e48c:	mov	x0, x1
    e490:	mov	x1, x2
    e494:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    e498:	ldr	w9, [x19, #80]
    e49c:	cbz	w9, e4c8 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    e4a0:	ldr	x8, [x19, #72]
    e4a4:	add	x9, x9, x9, lsl #1
    e4a8:	lsl	x9, x9, #3
    e4ac:	mov	x10, x8
    e4b0:	ldr	x11, [x10], #24
    e4b4:	cmp	x11, x0
    e4b8:	b.eq	e568 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0xf8>  // b.none
    e4bc:	subs	x9, x9, #0x18
    e4c0:	mov	x8, x10
    e4c4:	b.ne	e4b0 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x40>  // b.any
    e4c8:	ldr	x20, [x19, #8]
    e4cc:	ldr	w21, [x19, #16]
    e4d0:	mov	x0, x19
    e4d4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e4d8:	mov	w8, #0x503                 	// #1283
    e4dc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e4e0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e4e4:	stp	x0, x1, [sp, #80]
    e4e8:	add	x9, x9, #0x0
    e4ec:	add	x10, sp, #0x50
    e4f0:	add	x11, x11, #0x0
    e4f4:	mov	w19, #0x103                 	// #259
    e4f8:	strh	w8, [sp, #112]
    e4fc:	sub	x8, x29, #0x58
    e500:	add	x0, sp, #0x60
    e504:	add	x1, sp, #0x38
    e508:	stp	x9, x10, [sp, #96]
    e50c:	stp	x11, xzr, [sp, #56]
    e510:	strh	w19, [sp, #72]
    e514:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e518:	mov	w8, #0x105                 	// #261
    e51c:	sub	x9, x29, #0x10
    e520:	strh	w8, [sp, #48]
    e524:	sub	x8, x29, #0x40
    e528:	sub	x0, x29, #0x58
    e52c:	add	x1, sp, #0x20
    e530:	stp	x9, xzr, [sp, #32]
    e534:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e538:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e53c:	add	x8, x8, #0x0
    e540:	stp	x8, xzr, [sp, #8]
    e544:	sub	x8, x29, #0x28
    e548:	sub	x0, x29, #0x40
    e54c:	add	x1, sp, #0x8
    e550:	strh	w19, [sp, #24]
    e554:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e558:	sub	x2, x29, #0x28
    e55c:	mov	x0, x20
    e560:	mov	x1, x21
    e564:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e568:	cbz	x8, e4c8 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    e56c:	ldr	x8, [x8, #16]
    e570:	cbz	x8, e4c8 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x58>
    e574:	ldrb	w9, [x8, #8]
    e578:	cmp	w9, #0x6
    e57c:	b.ne	e598 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0x128>  // b.any
    e580:	ldr	x0, [x8, #24]
    e584:	ldp	x20, x19, [sp, #240]
    e588:	ldr	x21, [sp, #224]
    e58c:	ldp	x29, x30, [sp, #208]
    e590:	add	sp, sp, #0x100
    e594:	ret
    e598:	ldr	x20, [x19, #8]
    e59c:	ldr	w21, [x19, #16]
    e5a0:	mov	x0, x19
    e5a4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e5a8:	mov	w8, #0x503                 	// #1283
    e5ac:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e5b0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e5b4:	stp	x0, x1, [sp, #80]
    e5b8:	add	x9, x9, #0x0
    e5bc:	add	x10, sp, #0x50
    e5c0:	add	x11, x11, #0x0
    e5c4:	mov	w19, #0x103                 	// #259
    e5c8:	strh	w8, [sp, #112]
    e5cc:	sub	x8, x29, #0x58
    e5d0:	add	x0, sp, #0x60
    e5d4:	add	x1, sp, #0x38
    e5d8:	stp	x9, x10, [sp, #96]
    e5dc:	stp	x11, xzr, [sp, #56]
    e5e0:	strh	w19, [sp, #72]
    e5e4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e5e8:	mov	w8, #0x105                 	// #261
    e5ec:	sub	x9, x29, #0x10
    e5f0:	strh	w8, [sp, #48]
    e5f4:	sub	x8, x29, #0x40
    e5f8:	sub	x0, x29, #0x58
    e5fc:	add	x1, sp, #0x20
    e600:	stp	x9, xzr, [sp, #32]
    e604:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e608:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e60c:	add	x8, x8, #0x0
    e610:	b	e540 <_ZNK4llvm6Record13getValueAsDefENS_9StringRefE+0xd0>

000000000000e614 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE>:
    e614:	sub	sp, sp, #0x100
    e618:	stp	x29, x30, [sp, #208]
    e61c:	str	x21, [sp, #224]
    e620:	stp	x20, x19, [sp, #240]
    e624:	add	x29, sp, #0xd0
    e628:	mov	x19, x0
    e62c:	stp	x1, x2, [x29, #-16]
    e630:	mov	x0, x1
    e634:	mov	x1, x2
    e638:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    e63c:	ldr	w9, [x19, #80]
    e640:	cbz	w9, e66c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e644:	ldr	x8, [x19, #72]
    e648:	add	x9, x9, x9, lsl #1
    e64c:	lsl	x9, x9, #3
    e650:	mov	x10, x8
    e654:	ldr	x11, [x10], #24
    e658:	cmp	x11, x0
    e65c:	b.eq	e70c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xf8>  // b.none
    e660:	subs	x9, x9, #0x18
    e664:	mov	x8, x10
    e668:	b.ne	e654 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x40>  // b.any
    e66c:	ldr	x20, [x19, #8]
    e670:	ldr	w21, [x19, #16]
    e674:	mov	x0, x19
    e678:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e67c:	mov	w8, #0x503                 	// #1283
    e680:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e684:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e688:	stp	x0, x1, [sp, #80]
    e68c:	add	x9, x9, #0x0
    e690:	add	x10, sp, #0x50
    e694:	add	x11, x11, #0x0
    e698:	mov	w19, #0x103                 	// #259
    e69c:	strh	w8, [sp, #112]
    e6a0:	sub	x8, x29, #0x58
    e6a4:	add	x0, sp, #0x60
    e6a8:	add	x1, sp, #0x38
    e6ac:	stp	x9, x10, [sp, #96]
    e6b0:	stp	x11, xzr, [sp, #56]
    e6b4:	strh	w19, [sp, #72]
    e6b8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e6bc:	mov	w8, #0x105                 	// #261
    e6c0:	sub	x9, x29, #0x10
    e6c4:	strh	w8, [sp, #48]
    e6c8:	sub	x8, x29, #0x40
    e6cc:	sub	x0, x29, #0x58
    e6d0:	add	x1, sp, #0x20
    e6d4:	stp	x9, xzr, [sp, #32]
    e6d8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e6dc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e6e0:	add	x8, x8, #0x0
    e6e4:	stp	x8, xzr, [sp, #8]
    e6e8:	sub	x8, x29, #0x28
    e6ec:	sub	x0, x29, #0x40
    e6f0:	add	x1, sp, #0x8
    e6f4:	strh	w19, [sp, #24]
    e6f8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e6fc:	sub	x2, x29, #0x28
    e700:	mov	x0, x20
    e704:	mov	x1, x21
    e708:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e70c:	cbz	x8, e66c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e710:	ldr	x8, [x8, #16]
    e714:	cbz	x8, e66c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x58>
    e718:	ldrb	w9, [x8, #8]
    e71c:	cmp	w9, #0x18
    e720:	b.eq	e734 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x120>  // b.none
    e724:	cmp	w9, #0x6
    e728:	b.ne	e74c <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x138>  // b.any
    e72c:	ldr	x0, [x8, #24]
    e730:	b	e738 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0x124>
    e734:	mov	x0, xzr
    e738:	ldp	x20, x19, [sp, #240]
    e73c:	ldr	x21, [sp, #224]
    e740:	ldp	x29, x30, [sp, #208]
    e744:	add	sp, sp, #0x100
    e748:	ret
    e74c:	ldr	x20, [x19, #8]
    e750:	ldr	w21, [x19, #16]
    e754:	mov	x0, x19
    e758:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e75c:	mov	w8, #0x503                 	// #1283
    e760:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e764:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e768:	stp	x0, x1, [sp, #80]
    e76c:	add	x9, x9, #0x0
    e770:	add	x10, sp, #0x50
    e774:	add	x11, x11, #0x0
    e778:	mov	w19, #0x103                 	// #259
    e77c:	strh	w8, [sp, #112]
    e780:	sub	x8, x29, #0x58
    e784:	add	x0, sp, #0x60
    e788:	add	x1, sp, #0x38
    e78c:	stp	x9, x10, [sp, #96]
    e790:	stp	x11, xzr, [sp, #56]
    e794:	strh	w19, [sp, #72]
    e798:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e79c:	mov	w8, #0x105                 	// #261
    e7a0:	sub	x9, x29, #0x10
    e7a4:	strh	w8, [sp, #48]
    e7a8:	sub	x8, x29, #0x40
    e7ac:	sub	x0, x29, #0x58
    e7b0:	add	x1, sp, #0x20
    e7b4:	stp	x9, xzr, [sp, #32]
    e7b8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e7bc:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e7c0:	add	x8, x8, #0x0
    e7c4:	b	e6e4 <_ZNK4llvm6Record21getValueAsOptionalDefENS_9StringRefE+0xd0>

000000000000e7c8 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE>:
    e7c8:	sub	sp, sp, #0x100
    e7cc:	stp	x29, x30, [sp, #208]
    e7d0:	str	x21, [sp, #224]
    e7d4:	stp	x20, x19, [sp, #240]
    e7d8:	add	x29, sp, #0xd0
    e7dc:	mov	x19, x0
    e7e0:	stp	x1, x2, [x29, #-16]
    e7e4:	mov	x0, x1
    e7e8:	mov	x1, x2
    e7ec:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    e7f0:	ldr	w9, [x19, #80]
    e7f4:	cbz	w9, e820 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e7f8:	ldr	x8, [x19, #72]
    e7fc:	add	x9, x9, x9, lsl #1
    e800:	lsl	x9, x9, #3
    e804:	mov	x10, x8
    e808:	ldr	x11, [x10], #24
    e80c:	cmp	x11, x0
    e810:	b.eq	e8c0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0xf8>  // b.none
    e814:	subs	x9, x9, #0x18
    e818:	mov	x8, x10
    e81c:	b.ne	e808 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x40>  // b.any
    e820:	ldr	x20, [x19, #8]
    e824:	ldr	w21, [x19, #16]
    e828:	mov	x0, x19
    e82c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e830:	mov	w8, #0x503                 	// #1283
    e834:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e838:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e83c:	stp	x0, x1, [sp, #80]
    e840:	add	x9, x9, #0x0
    e844:	add	x10, sp, #0x50
    e848:	add	x11, x11, #0x0
    e84c:	mov	w19, #0x103                 	// #259
    e850:	strh	w8, [sp, #112]
    e854:	sub	x8, x29, #0x58
    e858:	add	x0, sp, #0x60
    e85c:	add	x1, sp, #0x38
    e860:	stp	x9, x10, [sp, #96]
    e864:	stp	x11, xzr, [sp, #56]
    e868:	strh	w19, [sp, #72]
    e86c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e870:	mov	w8, #0x105                 	// #261
    e874:	sub	x9, x29, #0x10
    e878:	strh	w8, [sp, #48]
    e87c:	sub	x8, x29, #0x40
    e880:	sub	x0, x29, #0x58
    e884:	add	x1, sp, #0x20
    e888:	stp	x9, xzr, [sp, #32]
    e88c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e890:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e894:	add	x8, x8, #0x0
    e898:	stp	x8, xzr, [sp, #8]
    e89c:	sub	x8, x29, #0x28
    e8a0:	sub	x0, x29, #0x40
    e8a4:	add	x1, sp, #0x8
    e8a8:	strh	w19, [sp, #24]
    e8ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e8b0:	sub	x2, x29, #0x28
    e8b4:	mov	x0, x20
    e8b8:	mov	x1, x21
    e8bc:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e8c0:	cbz	x8, e820 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e8c4:	ldr	x8, [x8, #16]
    e8c8:	cbz	x8, e820 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x58>
    e8cc:	ldrb	w9, [x8, #8]
    e8d0:	cmp	w9, #0x2
    e8d4:	b.ne	e8f0 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0x128>  // b.any
    e8d8:	ldrb	w0, [x8, #24]
    e8dc:	ldp	x20, x19, [sp, #240]
    e8e0:	ldr	x21, [sp, #224]
    e8e4:	ldp	x29, x30, [sp, #208]
    e8e8:	add	sp, sp, #0x100
    e8ec:	ret
    e8f0:	ldr	x20, [x19, #8]
    e8f4:	ldr	w21, [x19, #16]
    e8f8:	mov	x0, x19
    e8fc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e900:	mov	w8, #0x503                 	// #1283
    e904:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e908:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e90c:	stp	x0, x1, [sp, #80]
    e910:	add	x9, x9, #0x0
    e914:	add	x10, sp, #0x50
    e918:	add	x11, x11, #0x0
    e91c:	mov	w19, #0x103                 	// #259
    e920:	strh	w8, [sp, #112]
    e924:	sub	x8, x29, #0x58
    e928:	add	x0, sp, #0x60
    e92c:	add	x1, sp, #0x38
    e930:	stp	x9, x10, [sp, #96]
    e934:	stp	x11, xzr, [sp, #56]
    e938:	strh	w19, [sp, #72]
    e93c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e940:	mov	w8, #0x105                 	// #261
    e944:	sub	x9, x29, #0x10
    e948:	strh	w8, [sp, #48]
    e94c:	sub	x8, x29, #0x40
    e950:	sub	x0, x29, #0x58
    e954:	add	x1, sp, #0x20
    e958:	stp	x9, xzr, [sp, #32]
    e95c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e960:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    e964:	add	x8, x8, #0x0
    e968:	b	e898 <_ZNK4llvm6Record13getValueAsBitENS_9StringRefE+0xd0>

000000000000e96c <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb>:
    e96c:	sub	sp, sp, #0x130
    e970:	stp	x29, x30, [sp, #240]
    e974:	str	x28, [sp, #256]
    e978:	stp	x22, x21, [sp, #272]
    e97c:	stp	x20, x19, [sp, #288]
    e980:	add	x29, sp, #0xf0
    e984:	mov	x19, x0
    e988:	stp	x1, x2, [x29, #-16]
    e98c:	mov	x0, x1
    e990:	mov	x1, x2
    e994:	mov	x20, x3
    e998:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    e99c:	ldr	w9, [x19, #80]
    e9a0:	cbz	w9, e9cc <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    e9a4:	ldr	x8, [x19, #72]
    e9a8:	add	x9, x9, x9, lsl #1
    e9ac:	lsl	x9, x9, #3
    e9b0:	mov	x10, x8
    e9b4:	ldr	x11, [x10], #24
    e9b8:	cmp	x11, x0
    e9bc:	b.eq	ea78 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x10c>  // b.none
    e9c0:	subs	x9, x9, #0x18
    e9c4:	mov	x8, x10
    e9c8:	b.ne	e9b4 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x48>  // b.any
    e9cc:	ldr	x20, [x19, #8]
    e9d0:	ldr	w21, [x19, #16]
    e9d4:	mov	x0, x19
    e9d8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    e9dc:	mov	w8, #0x503                 	// #1283
    e9e0:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    e9e4:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    e9e8:	stp	x0, x1, [sp, #112]
    e9ec:	add	x9, x9, #0x0
    e9f0:	add	x10, sp, #0x70
    e9f4:	add	x11, x11, #0x0
    e9f8:	mov	w19, #0x103                 	// #259
    e9fc:	sturh	w8, [x29, #-96]
    ea00:	sub	x8, x29, #0x58
    ea04:	sub	x0, x29, #0x70
    ea08:	add	x1, sp, #0x58
    ea0c:	stp	x9, x10, [x29, #-112]
    ea10:	stp	x11, xzr, [sp, #88]
    ea14:	strh	w19, [sp, #104]
    ea18:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ea1c:	add	x8, sp, #0x20
    ea20:	sub	x0, x29, #0x10
    ea24:	add	x22, sp, #0x20
    ea28:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ea2c:	mov	w8, #0x104                 	// #260
    ea30:	strh	w8, [sp, #80]
    ea34:	sub	x8, x29, #0x40
    ea38:	sub	x0, x29, #0x58
    ea3c:	add	x1, sp, #0x40
    ea40:	stp	x22, xzr, [sp, #64]
    ea44:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ea48:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ea4c:	add	x8, x8, #0x0
    ea50:	stp	x8, xzr, [sp, #8]
    ea54:	sub	x8, x29, #0x28
    ea58:	sub	x0, x29, #0x40
    ea5c:	add	x1, sp, #0x8
    ea60:	strh	w19, [sp, #24]
    ea64:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ea68:	sub	x2, x29, #0x28
    ea6c:	mov	x0, x20
    ea70:	mov	x1, x21
    ea74:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ea78:	cbz	x8, e9cc <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    ea7c:	ldr	x8, [x8, #16]
    ea80:	cbz	x8, e9cc <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x60>
    ea84:	ldrb	w9, [x8, #8]
    ea88:	cmp	w9, #0x18
    ea8c:	b.ne	eaa0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x134>  // b.any
    ea90:	mov	w8, #0x1                   	// #1
    ea94:	mov	w0, wzr
    ea98:	strb	w8, [x20]
    ea9c:	b	eab8 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x14c>
    eaa0:	cmp	w9, #0x2
    eaa4:	strb	wzr, [x20]
    eaa8:	b.ne	ead0 <_ZNK4llvm6Record20getValueAsBitOrUnsetENS_9StringRefERb+0x164>  // b.any
    eaac:	ldrb	w8, [x8, #24]
    eab0:	cmp	w8, #0x0
    eab4:	cset	w0, ne  // ne = any
    eab8:	ldp	x20, x19, [sp, #288]
    eabc:	ldp	x22, x21, [sp, #272]
    eac0:	ldr	x28, [sp, #256]
    eac4:	ldp	x29, x30, [sp, #240]
    eac8:	add	sp, sp, #0x130
    eacc:	ret
    ead0:	ldr	x20, [x19, #8]
    ead4:	ldr	w21, [x19, #16]
    ead8:	mov	x0, x19
    eadc:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eae0:	mov	w8, #0x503                 	// #1283
    eae4:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    eae8:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    eaec:	stp	x0, x1, [sp, #8]
    eaf0:	add	x9, x9, #0x0
    eaf4:	add	x10, sp, #0x8
    eaf8:	add	x11, x11, #0x0
    eafc:	mov	w19, #0x103                 	// #259
    eb00:	sturh	w8, [x29, #-72]
    eb04:	sub	x8, x29, #0x40
    eb08:	sub	x0, x29, #0x58
    eb0c:	sub	x1, x29, #0x70
    eb10:	stp	x9, x10, [x29, #-88]
    eb14:	stp	x11, xzr, [x29, #-112]
    eb18:	sturh	w19, [x29, #-96]
    eb1c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eb20:	mov	w8, #0x105                 	// #261
    eb24:	sub	x9, x29, #0x10
    eb28:	strh	w8, [sp, #104]
    eb2c:	sub	x8, x29, #0x28
    eb30:	sub	x0, x29, #0x40
    eb34:	add	x1, sp, #0x58
    eb38:	stp	x9, xzr, [sp, #88]
    eb3c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eb40:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    eb44:	add	x8, x8, #0x0
    eb48:	stp	x8, xzr, [sp, #64]
    eb4c:	add	x8, sp, #0x20
    eb50:	sub	x0, x29, #0x28
    eb54:	add	x1, sp, #0x40
    eb58:	strh	w19, [sp, #80]
    eb5c:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eb60:	add	x2, sp, #0x20
    eb64:	mov	x0, x20
    eb68:	mov	x1, x21
    eb6c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000eb70 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE>:
    eb70:	sub	sp, sp, #0x100
    eb74:	stp	x29, x30, [sp, #208]
    eb78:	str	x21, [sp, #224]
    eb7c:	stp	x20, x19, [sp, #240]
    eb80:	add	x29, sp, #0xd0
    eb84:	mov	x19, x0
    eb88:	stp	x1, x2, [x29, #-16]
    eb8c:	mov	x0, x1
    eb90:	mov	x1, x2
    eb94:	bl	2dbc <_ZN4llvm10StringInit3getENS_9StringRefE>
    eb98:	ldr	w9, [x19, #80]
    eb9c:	cbz	w9, ebc8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    eba0:	ldr	x8, [x19, #72]
    eba4:	add	x9, x9, x9, lsl #1
    eba8:	lsl	x9, x9, #3
    ebac:	mov	x10, x8
    ebb0:	ldr	x11, [x10], #24
    ebb4:	cmp	x11, x0
    ebb8:	b.eq	ec68 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0xf8>  // b.none
    ebbc:	subs	x9, x9, #0x18
    ebc0:	mov	x8, x10
    ebc4:	b.ne	ebb0 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x40>  // b.any
    ebc8:	ldr	x20, [x19, #8]
    ebcc:	ldr	w21, [x19, #16]
    ebd0:	mov	x0, x19
    ebd4:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ebd8:	mov	w8, #0x503                 	// #1283
    ebdc:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ebe0:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    ebe4:	stp	x0, x1, [sp, #80]
    ebe8:	add	x9, x9, #0x0
    ebec:	add	x10, sp, #0x50
    ebf0:	add	x11, x11, #0x0
    ebf4:	mov	w19, #0x103                 	// #259
    ebf8:	strh	w8, [sp, #112]
    ebfc:	sub	x8, x29, #0x58
    ec00:	add	x0, sp, #0x60
    ec04:	add	x1, sp, #0x38
    ec08:	stp	x9, x10, [sp, #96]
    ec0c:	stp	x11, xzr, [sp, #56]
    ec10:	strh	w19, [sp, #72]
    ec14:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ec18:	mov	w8, #0x105                 	// #261
    ec1c:	sub	x9, x29, #0x10
    ec20:	strh	w8, [sp, #48]
    ec24:	sub	x8, x29, #0x40
    ec28:	sub	x0, x29, #0x58
    ec2c:	add	x1, sp, #0x20
    ec30:	stp	x9, xzr, [sp, #32]
    ec34:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ec38:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ec3c:	add	x8, x8, #0x0
    ec40:	stp	x8, xzr, [sp, #8]
    ec44:	sub	x8, x29, #0x28
    ec48:	sub	x0, x29, #0x40
    ec4c:	add	x1, sp, #0x8
    ec50:	strh	w19, [sp, #24]
    ec54:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ec58:	sub	x2, x29, #0x28
    ec5c:	mov	x0, x20
    ec60:	mov	x1, x21
    ec64:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ec68:	cbz	x8, ebc8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    ec6c:	ldr	x0, [x8, #16]
    ec70:	cbz	x0, ebc8 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x58>
    ec74:	ldrb	w8, [x0, #8]
    ec78:	cmp	w8, #0x5
    ec7c:	b.ne	ec94 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0x124>  // b.any
    ec80:	ldp	x20, x19, [sp, #240]
    ec84:	ldr	x21, [sp, #224]
    ec88:	ldp	x29, x30, [sp, #208]
    ec8c:	add	sp, sp, #0x100
    ec90:	ret
    ec94:	ldr	x20, [x19, #8]
    ec98:	ldr	w21, [x19, #16]
    ec9c:	mov	x0, x19
    eca0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    eca4:	mov	w8, #0x503                 	// #1283
    eca8:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ecac:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    ecb0:	stp	x0, x1, [sp, #80]
    ecb4:	add	x9, x9, #0x0
    ecb8:	add	x10, sp, #0x50
    ecbc:	add	x11, x11, #0x0
    ecc0:	mov	w19, #0x103                 	// #259
    ecc4:	strh	w8, [sp, #112]
    ecc8:	sub	x8, x29, #0x58
    eccc:	add	x0, sp, #0x60
    ecd0:	add	x1, sp, #0x38
    ecd4:	stp	x9, x10, [sp, #96]
    ecd8:	stp	x11, xzr, [sp, #56]
    ecdc:	strh	w19, [sp, #72]
    ece0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ece4:	mov	w8, #0x105                 	// #261
    ece8:	sub	x9, x29, #0x10
    ecec:	strh	w8, [sp, #48]
    ecf0:	sub	x8, x29, #0x40
    ecf4:	sub	x0, x29, #0x58
    ecf8:	add	x1, sp, #0x20
    ecfc:	stp	x9, xzr, [sp, #32]
    ed00:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    ed04:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    ed08:	add	x8, x8, #0x0
    ed0c:	b	ec40 <_ZNK4llvm6Record13getValueAsDagENS_9StringRefE+0xd0>

000000000000ed10 <_ZNK4llvm12RecordKeeper4dumpEv>:
    ed10:	stp	x29, x30, [sp, #-32]!
    ed14:	str	x19, [sp, #16]
    ed18:	mov	x29, sp
    ed1c:	mov	x19, x0
    ed20:	bl	0 <_ZN4llvm4errsEv>
    ed24:	mov	x1, x19
    ed28:	ldr	x19, [sp, #16]
    ed2c:	ldp	x29, x30, [sp], #32
    ed30:	b	ed34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>

000000000000ed34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE>:
    ed34:	stp	x29, x30, [sp, #-80]!
    ed38:	str	x25, [sp, #16]
    ed3c:	stp	x24, x23, [sp, #32]
    ed40:	stp	x22, x21, [sp, #48]
    ed44:	stp	x20, x19, [sp, #64]
    ed48:	mov	x29, sp
    ed4c:	ldp	x9, x8, [x0, #16]
    ed50:	mov	x19, x0
    ed54:	mov	x20, x1
    ed58:	sub	x9, x9, x8
    ed5c:	cmp	x9, #0x27
    ed60:	b.hi	ed80 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x4c>  // b.pmore
    ed64:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ed68:	add	x1, x1, #0x0
    ed6c:	mov	w2, #0x28                  	// #40
    ed70:	mov	x0, x19
    ed74:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ed78:	ldr	x8, [x19, #24]
    ed7c:	b	eda4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x70>
    ed80:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ed84:	add	x9, x9, #0x0
    ed88:	ldr	x10, [x9, #32]
    ed8c:	ldp	q1, q0, [x9]
    ed90:	str	x10, [x8, #32]
    ed94:	stp	q1, q0, [x8]
    ed98:	ldr	x8, [x19, #24]
    ed9c:	add	x8, x8, #0x28
    eda0:	str	x8, [x19, #24]
    eda4:	ldr	x21, [x20, #24]
    eda8:	ldr	x9, [x19, #16]
    edac:	add	x23, x20, #0x8
    edb0:	cmp	x21, x23
    edb4:	sub	x9, x9, x8
    edb8:	b.eq	ee2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf8>  // b.none
    edbc:	adrp	x22, 0 <_ZNK4llvm5RecTy4dumpEv>
    edc0:	mov	w25, #0x6c63                	// #27747
    edc4:	add	x22, x22, #0x0
    edc8:	mov	w24, #0x2073                	// #8307
    edcc:	movk	w25, #0x7361, lsl #16
    edd0:	b	ee10 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xdc>
    edd4:	strh	w24, [x8, #4]
    edd8:	str	w25, [x8]
    eddc:	ldr	x8, [x19, #24]
    ede0:	mov	x0, x19
    ede4:	add	x8, x8, #0x6
    ede8:	str	x8, [x19, #24]
    edec:	ldr	x1, [x21, #64]
    edf0:	bl	cfe4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    edf4:	mov	x0, x21
    edf8:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    edfc:	ldp	x9, x8, [x19, #16]
    ee00:	mov	x21, x0
    ee04:	cmp	x0, x23
    ee08:	sub	x9, x9, x8
    ee0c:	b.eq	ee2c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xf8>  // b.none
    ee10:	cmp	x9, #0x5
    ee14:	b.hi	edd4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xa0>  // b.pmore
    ee18:	mov	w2, #0x6                   	// #6
    ee1c:	mov	x0, x19
    ee20:	mov	x1, x22
    ee24:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ee28:	b	edec <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0xb8>
    ee2c:	cmp	x9, #0x24
    ee30:	b.hi	ee5c <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x128>  // b.pmore
    ee34:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    ee38:	add	x1, x1, #0x0
    ee3c:	mov	w2, #0x25                  	// #37
    ee40:	mov	x0, x19
    ee44:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ee48:	ldr	x21, [x20, #72]
    ee4c:	add	x22, x20, #0x38
    ee50:	cmp	x21, x22
    ee54:	b.ne	ee90 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x15c>  // b.any
    ee58:	b	eef8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1c4>
    ee5c:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    ee60:	add	x9, x9, #0x0
    ee64:	ldur	x10, [x9, #29]
    ee68:	ldp	q1, q0, [x9]
    ee6c:	stur	x10, [x8, #29]
    ee70:	stp	q1, q0, [x8]
    ee74:	ldr	x8, [x19, #24]
    ee78:	add	x8, x8, #0x25
    ee7c:	str	x8, [x19, #24]
    ee80:	ldr	x21, [x20, #72]
    ee84:	add	x22, x20, #0x38
    ee88:	cmp	x21, x22
    ee8c:	b.eq	eef8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1c4>  // b.none
    ee90:	adrp	x20, 0 <_ZNK4llvm5RecTy4dumpEv>
    ee94:	mov	w23, #0x6564                	// #25956
    ee98:	add	x20, x20, #0x0
    ee9c:	movk	w23, #0x2066, lsl #16
    eea0:	b	eed4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1a0>
    eea4:	str	w23, [x8]
    eea8:	ldr	x8, [x19, #24]
    eeac:	mov	x0, x19
    eeb0:	add	x8, x8, #0x4
    eeb4:	str	x8, [x19, #24]
    eeb8:	ldr	x1, [x21, #64]
    eebc:	bl	cfe4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_6RecordE>
    eec0:	mov	x0, x21
    eec4:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    eec8:	mov	x21, x0
    eecc:	cmp	x0, x22
    eed0:	b.eq	eef8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x1c4>  // b.none
    eed4:	ldp	x9, x8, [x19, #16]
    eed8:	sub	x9, x9, x8
    eedc:	cmp	x9, #0x3
    eee0:	b.hi	eea4 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x170>  // b.pmore
    eee4:	mov	w2, #0x4                   	// #4
    eee8:	mov	x0, x19
    eeec:	mov	x1, x20
    eef0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    eef4:	b	eeb8 <_ZN4llvmlsERNS_11raw_ostreamERKNS_12RecordKeeperE+0x184>
    eef8:	mov	x0, x19
    eefc:	ldp	x20, x19, [sp, #64]
    ef00:	ldp	x22, x21, [sp, #48]
    ef04:	ldp	x24, x23, [sp, #32]
    ef08:	ldr	x25, [sp, #16]
    ef0c:	ldp	x29, x30, [sp], #80
    ef10:	ret

000000000000ef14 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE>:
    ef14:	sub	sp, sp, #0xc0
    ef18:	stp	x29, x30, [sp, #96]
    ef1c:	stp	x28, x27, [sp, #112]
    ef20:	stp	x26, x25, [sp, #128]
    ef24:	stp	x24, x23, [sp, #144]
    ef28:	stp	x22, x21, [sp, #160]
    ef2c:	stp	x20, x19, [sp, #176]
    ef30:	add	x29, sp, #0x60
    ef34:	stp	x1, x2, [x29, #-16]
    ef38:	ldr	x25, [x0, #16]
    ef3c:	mov	x21, x0
    ef40:	add	x23, x0, #0x8
    ef44:	str	x8, [sp]
    ef48:	cbz	x25, efe0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xcc>
    ef4c:	mov	x20, x2
    ef50:	mov	x22, x1
    ef54:	mov	x24, x23
    ef58:	b	ef6c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x58>
    ef5c:	add	x8, x25, #0x10
    ef60:	mov	x24, x25
    ef64:	ldr	x25, [x8]
    ef68:	cbz	x25, efa8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x94>
    ef6c:	ldr	x19, [x25, #40]
    ef70:	cmp	x20, x19
    ef74:	csel	x2, x20, x19, cc  // cc = lo, ul, last
    ef78:	cbz	x2, ef94 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x80>
    ef7c:	ldr	x0, [x25, #32]
    ef80:	mov	x1, x22
    ef84:	bl	0 <memcmp>
    ef88:	cbz	w0, ef94 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x80>
    ef8c:	tbz	w0, #31, ef5c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x48>
    ef90:	b	ef9c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x88>
    ef94:	cmp	x19, x20
    ef98:	b.cs	ef5c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x48>  // b.hs, b.nlast
    ef9c:	add	x8, x25, #0x18
    efa0:	ldr	x25, [x8]
    efa4:	cbnz	x25, ef6c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x58>
    efa8:	cmp	x24, x23
    efac:	b.eq	efe4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>  // b.none
    efb0:	ldr	x25, [x24, #40]
    efb4:	cmp	x25, x20
    efb8:	csel	x2, x25, x20, cc  // cc = lo, ul, last
    efbc:	cbz	x2, efd8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xc4>
    efc0:	ldr	x1, [x24, #32]
    efc4:	mov	x0, x22
    efc8:	bl	0 <memcmp>
    efcc:	cbz	w0, efd8 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xc4>
    efd0:	tbnz	w0, #31, efe0 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xcc>
    efd4:	b	efe4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>
    efd8:	cmp	x20, x25
    efdc:	b.cs	efe4 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0xd0>  // b.hs, b.nlast
    efe0:	mov	x24, x23
    efe4:	cmp	x24, x23
    efe8:	b.eq	f174 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x260>  // b.none
    efec:	ldr	x25, [x24, #64]
    eff0:	cbz	x25, f174 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x260>
    eff4:	ldr	x19, [sp]
    eff8:	add	x26, x21, #0x38
    effc:	stp	xzr, xzr, [x19]
    f000:	str	xzr, [x19, #16]
    f004:	ldr	x20, [x21, #72]
    f008:	cmp	x20, x26
    f00c:	b.eq	f148 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x234>  // b.none
    f010:	mov	x21, xzr
    f014:	b	f040 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x12c>
    f018:	ldr	x8, [x19, #16]
    f01c:	cmp	x21, x8
    f020:	b.eq	f070 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x15c>  // b.none
    f024:	str	x27, [x21], #8
    f028:	str	x21, [x19, #8]
    f02c:	mov	x0, x20
    f030:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    f034:	mov	x20, x0
    f038:	cmp	x0, x26
    f03c:	b.eq	f148 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x234>  // b.none
    f040:	ldr	x27, [x20, #64]
    f044:	ldr	w9, [x27, #96]
    f048:	cbz	w9, f02c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    f04c:	ldr	x8, [x27, #88]
    f050:	add	x9, x9, x9, lsl #1
    f054:	lsl	x9, x9, #3
    f058:	ldr	x10, [x8], #24
    f05c:	cmp	x10, x25
    f060:	b.eq	f018 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x104>  // b.none
    f064:	subs	x9, x9, #0x18
    f068:	b.ne	f058 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x144>  // b.any
    f06c:	b	f02c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    f070:	ldr	x22, [x19]
    f074:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
    f078:	sub	x8, x21, x22
    f07c:	cmp	x8, x9
    f080:	b.eq	f168 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x254>  // b.none
    f084:	asr	x9, x8, #3
    f088:	cmp	x8, #0x0
    f08c:	csinc	x8, x9, xzr, ne  // ne = any
    f090:	adds	x8, x8, x9
    f094:	lsr	x10, x8, #60
    f098:	cset	w9, cs  // cs = hs, nlast
    f09c:	cmp	x10, #0x0
    f0a0:	cset	w10, ne  // ne = any
    f0a4:	orr	w9, w9, w10
    f0a8:	cmp	w9, #0x0
    f0ac:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
    f0b0:	sub	x24, x21, x22
    f0b4:	csel	x28, x9, x8, ne  // ne = any
    f0b8:	asr	x19, x24, #3
    f0bc:	cbz	x28, f130 <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x21c>
    f0c0:	lsl	x0, x28, #3
    f0c4:	bl	0 <_Znwm>
    f0c8:	mov	x23, x0
    f0cc:	add	x19, x23, x19, lsl #3
    f0d0:	cmp	x24, #0x1
    f0d4:	str	x27, [x19]
    f0d8:	b.lt	f0ec <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1d8>  // b.tstop
    f0dc:	mov	x0, x23
    f0e0:	mov	x1, x22
    f0e4:	mov	x2, x24
    f0e8:	bl	0 <memmove>
    f0ec:	sub	x2, x21, x21
    f0f0:	add	x24, x19, #0x8
    f0f4:	cmp	x2, #0x1
    f0f8:	asr	x19, x2, #3
    f0fc:	b.lt	f10c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1f8>  // b.tstop
    f100:	mov	x0, x24
    f104:	mov	x1, x21
    f108:	bl	0 <memmove>
    f10c:	add	x21, x24, x19, lsl #3
    f110:	cbz	x22, f11c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x208>
    f114:	mov	x0, x22
    f118:	bl	0 <_ZdlPv>
    f11c:	ldr	x19, [sp]
    f120:	add	x8, x23, x28, lsl #3
    f124:	stp	x23, x21, [x19]
    f128:	str	x8, [x19, #16]
    f12c:	b	f02c <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x118>
    f130:	mov	x23, xzr
    f134:	add	x19, x23, x19, lsl #3
    f138:	cmp	x24, #0x1
    f13c:	str	x27, [x19]
    f140:	b.ge	f0dc <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1c8>  // b.tcont
    f144:	b	f0ec <_ZNK4llvm12RecordKeeper24getAllDerivedDefinitionsENS_9StringRefE+0x1d8>
    f148:	ldp	x20, x19, [sp, #176]
    f14c:	ldp	x22, x21, [sp, #160]
    f150:	ldp	x24, x23, [sp, #144]
    f154:	ldp	x26, x25, [sp, #128]
    f158:	ldp	x28, x27, [sp, #112]
    f15c:	ldp	x29, x30, [sp, #96]
    f160:	add	sp, sp, #0xc0
    f164:	ret
    f168:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f16c:	add	x0, x0, #0x0
    f170:	bl	0 <_ZSt20__throw_length_errorPKc>
    f174:	mov	w8, #0x503                 	// #1283
    f178:	adrp	x9, 0 <_ZNK4llvm5RecTy4dumpEv>
    f17c:	adrp	x11, 0 <_ZNK4llvm5RecTy4dumpEv>
    f180:	add	x9, x9, #0x0
    f184:	sub	x10, x29, #0x10
    f188:	add	x11, x11, #0x0
    f18c:	mov	w12, #0x103                 	// #259
    f190:	strh	w8, [sp, #48]
    f194:	sub	x8, x29, #0x28
    f198:	add	x0, sp, #0x20
    f19c:	add	x1, sp, #0x8
    f1a0:	stp	x9, x10, [sp, #32]
    f1a4:	stp	x11, xzr, [sp, #8]
    f1a8:	strh	w12, [sp, #24]
    f1ac:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f1b0:	sub	x0, x29, #0x28
    f1b4:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

000000000000f1b8 <_ZN4llvm11MapResolver7resolveEPNS_4InitE>:
    f1b8:	sub	sp, sp, #0x30
    f1bc:	stp	x29, x30, [sp, #16]
    f1c0:	stp	x20, x19, [sp, #32]
    f1c4:	add	x29, sp, #0x10
    f1c8:	str	x1, [sp, #8]
    f1cc:	ldr	w9, [x0, #48]
    f1d0:	ldr	x10, [x0, #32]
    f1d4:	mov	x8, x0
    f1d8:	cbz	w9, f238 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x80>
    f1dc:	orr	x11, x1, #0x8
    f1e0:	cmn	x11, #0x8
    f1e4:	b.eq	f2d4 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x11c>  // b.none
    f1e8:	ubfx	x11, x1, #4, #28
    f1ec:	sub	w12, w9, #0x1
    f1f0:	eor	w11, w11, w1, lsr #9
    f1f4:	and	w14, w12, w11
    f1f8:	mov	w13, #0x18                  	// #24
    f1fc:	umaddl	x11, w14, w13, x10
    f200:	ldr	x15, [x11]
    f204:	cmp	x15, x1
    f208:	b.eq	f240 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x88>  // b.none
    f20c:	mov	w16, #0x1                   	// #1
    f210:	cmn	x15, #0x8
    f214:	b.eq	f238 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x80>  // b.none
    f218:	add	w11, w14, w16
    f21c:	and	w14, w11, w12
    f220:	umaddl	x11, w14, w13, x10
    f224:	ldr	x15, [x11]
    f228:	add	w16, w16, #0x1
    f22c:	cmp	x15, x1
    f230:	b.eq	f240 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x88>  // b.none
    f234:	b	f210 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x58>
    f238:	mov	w11, #0x18                  	// #24
    f23c:	madd	x11, x9, x11, x10
    f240:	mov	w12, #0x18                  	// #24
    f244:	madd	x9, x9, x12, x10
    f248:	cmp	x11, x9
    f24c:	b.eq	f2bc <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x104>  // b.none
    f250:	ldrb	w9, [x11, #16]
    f254:	ldr	x19, [x11, #8]
    f258:	cbnz	w9, f2c0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>
    f25c:	add	x20, x8, #0x18
    f260:	ldr	w9, [x20, #16]
    f264:	cmp	w9, #0x2
    f268:	b.cc	f2c0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>  // b.lo, b.ul, b.last
    f26c:	mov	x10, #0xfffffffffffffff0    	// #-16
    f270:	str	x10, [x11]
    f274:	ldr	w10, [x8, #44]
    f278:	sub	w9, w9, #0x1
    f27c:	str	w9, [x8, #40]
    f280:	mov	x0, x19
    f284:	add	w9, w10, #0x1
    f288:	str	w9, [x8, #44]
    f28c:	ldr	x9, [x19]
    f290:	mov	x1, x8
    f294:	ldr	x9, [x9, #96]
    f298:	blr	x9
    f29c:	mov	x19, x0
    f2a0:	add	x1, sp, #0x8
    f2a4:	mov	x0, x20
    f2a8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f2ac:	mov	w8, #0x1                   	// #1
    f2b0:	str	x19, [x0, #8]
    f2b4:	strb	w8, [x0, #16]
    f2b8:	b	f2c0 <_ZN4llvm11MapResolver7resolveEPNS_4InitE+0x108>
    f2bc:	mov	x19, xzr
    f2c0:	mov	x0, x19
    f2c4:	ldp	x20, x19, [sp, #32]
    f2c8:	ldp	x29, x30, [sp, #16]
    f2cc:	add	sp, sp, #0x30
    f2d0:	ret
    f2d4:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2d8:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2dc:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f2e0:	add	x0, x0, #0x0
    f2e4:	add	x1, x1, #0x0
    f2e8:	add	x3, x3, #0x0
    f2ec:	mov	w2, #0x252                 	// #594
    f2f0:	bl	0 <__assert_fail>

000000000000f2f4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE>:
    f2f4:	sub	sp, sp, #0x30
    f2f8:	stp	x29, x30, [sp, #16]
    f2fc:	stp	x20, x19, [sp, #32]
    f300:	add	x29, sp, #0x10
    f304:	str	x1, [sp, #8]
    f308:	ldr	w9, [x0, #48]
    f30c:	ldr	x8, [x0, #32]
    f310:	mov	x19, x0
    f314:	cbz	w9, f350 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x5c>
    f318:	orr	x10, x1, #0x8
    f31c:	cmn	x10, #0x8
    f320:	b.eq	f578 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x284>  // b.none
    f324:	ubfx	x10, x1, #4, #28
    f328:	eor	w10, w10, w1, lsr #9
    f32c:	sub	w11, w9, #0x1
    f330:	and	w10, w11, w10
    f334:	lsl	x12, x10, #4
    f338:	ldr	x12, [x8, x12]
    f33c:	cmp	x12, x1
    f340:	b.ne	f4dc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1e8>  // b.any
    f344:	add	x10, x8, x10, lsl #4
    f348:	ldr	x20, [x10, #8]
    f34c:	cbnz	x20, f4c8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d4>
    f350:	mov	x0, x19
    f354:	ldr	x10, [x0, #56]!
    f358:	ldr	w11, [x0, #8]
    f35c:	cbz	w11, f37c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x88>
    f360:	lsl	x12, x11, #3
    f364:	mov	x13, x10
    f368:	ldr	x14, [x13], #8
    f36c:	cmp	x14, x1
    f370:	b.eq	f3b4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xc0>  // b.none
    f374:	subs	x12, x12, #0x8
    f378:	b.ne	f368 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x74>  // b.any
    f37c:	ldr	x12, [x19, #8]
    f380:	ldr	w13, [x12, #80]
    f384:	cbz	w13, f3d4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    f388:	ldr	x12, [x12, #72]
    f38c:	add	x13, x13, x13, lsl #1
    f390:	lsl	x13, x13, #3
    f394:	mov	x14, x12
    f398:	ldr	x15, [x14], #24
    f39c:	cmp	x15, x1
    f3a0:	b.eq	f3bc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xc8>  // b.none
    f3a4:	subs	x13, x13, #0x18
    f3a8:	mov	x12, x14
    f3ac:	b.ne	f398 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xa4>  // b.any
    f3b0:	b	f3d4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    f3b4:	mov	x20, xzr
    f3b8:	b	f4c8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d4>
    f3bc:	cbz	x12, f3d4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe0>
    f3c0:	ldr	x20, [x12, #16]
    f3c4:	cbz	x20, f5b8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2c4>
    f3c8:	ldrb	w12, [x20, #8]
    f3cc:	cmp	w12, #0x18
    f3d0:	b.ne	f44c <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x158>  // b.any
    f3d4:	mov	x20, xzr
    f3d8:	cbz	w9, f4a8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b4>
    f3dc:	ldr	x10, [sp, #8]
    f3e0:	orr	x11, x10, #0x8
    f3e4:	cmn	x11, #0x8
    f3e8:	b.eq	f598 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x2a4>  // b.none
    f3ec:	ubfx	x11, x10, #4, #28
    f3f0:	eor	w11, w11, w10, lsr #9
    f3f4:	sub	w9, w9, #0x1
    f3f8:	and	w11, w11, w9
    f3fc:	add	x0, x8, w11, uxtw #4
    f400:	ldr	x13, [x0]
    f404:	cmp	x13, x10
    f408:	b.eq	f4c4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d0>  // b.none
    f40c:	mov	x12, xzr
    f410:	mov	w15, #0x1                   	// #1
    f414:	mov	x14, #0xfffffffffffffff0    	// #-16
    f418:	cmn	x13, #0x8
    f41c:	b.eq	f518 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x224>  // b.none
    f420:	cmp	x12, #0x0
    f424:	add	w11, w11, w15
    f428:	ccmp	x13, x14, #0x0, eq  // eq = none
    f42c:	and	w11, w11, w9
    f430:	csel	x12, x12, x0, ne  // ne = any
    f434:	add	x0, x8, w11, uxtw #4
    f438:	ldr	x13, [x0]
    f43c:	add	w15, w15, #0x1
    f440:	cmp	x13, x10
    f444:	b.eq	f4c4 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d0>  // b.none
    f448:	b	f418 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x124>
    f44c:	ldr	w8, [x19, #68]
    f450:	cmp	w11, w8
    f454:	b.cs	f524 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x230>  // b.hs, b.nlast
    f458:	str	x1, [x10, x11, lsl #3]
    f45c:	ldp	w8, w9, [x19, #64]
    f460:	cmp	w8, w9
    f464:	b.cs	f558 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x264>  // b.hs, b.nlast
    f468:	add	w8, w8, #0x1
    f46c:	str	w8, [x19, #64]
    f470:	ldr	x8, [x20]
    f474:	mov	x0, x20
    f478:	mov	x1, x19
    f47c:	ldr	x8, [x8, #96]
    f480:	blr	x8
    f484:	ldp	w8, w9, [x19, #64]
    f488:	sub	x10, x8, #0x1
    f48c:	cmp	x10, x9
    f490:	b.hi	f558 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x264>  // b.pmore
    f494:	ldr	x8, [x19, #32]
    f498:	ldr	w9, [x19, #48]
    f49c:	mov	x20, x0
    f4a0:	str	w10, [x19, #64]
    f4a4:	cbnz	w9, f3dc <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0xe8>
    f4a8:	mov	x3, xzr
    f4ac:	add	x0, x19, #0x18
    f4b0:	add	x1, sp, #0x8
    f4b4:	add	x2, sp, #0x8
    f4b8:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f4bc:	ldr	x8, [sp, #8]
    f4c0:	stp	x8, xzr, [x0]
    f4c4:	str	x20, [x0, #8]
    f4c8:	mov	x0, x20
    f4cc:	ldp	x20, x19, [sp, #32]
    f4d0:	ldp	x29, x30, [sp, #16]
    f4d4:	add	sp, sp, #0x30
    f4d8:	ret
    f4dc:	mov	w13, #0x1                   	// #1
    f4e0:	cmn	x12, #0x8
    f4e4:	b.eq	f350 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x5c>  // b.none
    f4e8:	add	w10, w10, w13
    f4ec:	and	w10, w10, w11
    f4f0:	lsl	x12, x10, #4
    f4f4:	ldr	x12, [x8, x12]
    f4f8:	add	w13, w13, #0x1
    f4fc:	cmp	x12, x1
    f500:	b.ne	f4e0 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1ec>  // b.any
    f504:	mov	w10, w10
    f508:	add	x10, x8, x10, lsl #4
    f50c:	ldr	x20, [x10, #8]
    f510:	cbnz	x20, f4c8 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1d4>
    f514:	b	f350 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x5c>
    f518:	cmp	x12, #0x0
    f51c:	csel	x3, x0, x12, eq  // eq = none
    f520:	b	f4ac <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x1b8>
    f524:	add	x8, x0, #0x10
    f528:	mov	w3, #0x8                   	// #8
    f52c:	str	x1, [sp]
    f530:	mov	x1, x8
    f534:	mov	x2, xzr
    f538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    f53c:	ldr	x1, [sp]
    f540:	ldr	w11, [x19, #64]
    f544:	ldr	x10, [x19, #56]
    f548:	str	x1, [x10, x11, lsl #3]
    f54c:	ldp	w8, w9, [x19, #64]
    f550:	cmp	w8, w9
    f554:	b.cc	f468 <_ZN4llvm14RecordResolver7resolveEPNS_4InitE+0x174>  // b.lo, b.ul, b.last
    f558:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f55c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f560:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f564:	add	x0, x0, #0x0
    f568:	add	x1, x1, #0x0
    f56c:	add	x3, x3, #0x0
    f570:	mov	w2, #0x43                  	// #67
    f574:	bl	0 <__assert_fail>
    f578:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f57c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f580:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f584:	add	x0, x0, #0x0
    f588:	add	x1, x1, #0x0
    f58c:	add	x3, x3, #0x0
    f590:	mov	w2, #0x252                 	// #594
    f594:	bl	0 <__assert_fail>
    f598:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f59c:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f5a0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f5a4:	add	x0, x0, #0x0
    f5a8:	add	x1, x1, #0x0
    f5ac:	add	x3, x3, #0x0
    f5b0:	mov	w2, #0x252                 	// #594
    f5b4:	bl	0 <__assert_fail>
    f5b8:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f5bc:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f5c0:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f5c4:	add	x0, x0, #0x0
    f5c8:	add	x1, x1, #0x0
    f5cc:	add	x3, x3, #0x0
    f5d0:	mov	w2, #0x69                  	// #105
    f5d4:	bl	0 <__assert_fail>

000000000000f5d8 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE>:
    f5d8:	sub	sp, sp, #0x50
    f5dc:	stp	x29, x30, [sp, #48]
    f5e0:	stp	x20, x19, [sp, #64]
    f5e4:	add	x29, sp, #0x30
    f5e8:	mov	x19, x0
    f5ec:	ldr	x0, [x0, #24]
    f5f0:	cbz	x0, f650 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x78>
    f5f4:	ldr	x8, [x0]
    f5f8:	ldr	x8, [x8, #16]
    f5fc:	blr	x8
    f600:	cbz	x0, f650 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x78>
    f604:	ldrb	w8, [x19, #32]
    f608:	mov	x20, x0
    f60c:	cbnz	w8, f65c <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x84>
    f610:	strb	wzr, [sp, #24]
    f614:	adrp	x8, e38 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x62c>
    f618:	ldr	x8, [x8]
    f61c:	str	xzr, [sp, #32]
    f620:	strb	wzr, [sp, #40]
    f624:	add	x1, sp, #0x8
    f628:	add	x8, x8, #0x10
    f62c:	stp	x8, xzr, [sp, #8]
    f630:	ldr	x8, [x20]
    f634:	mov	x0, x20
    f638:	ldr	x8, [x8, #96]
    f63c:	blr	x8
    f640:	ldrb	w8, [sp, #40]
    f644:	ldrb	w9, [x19, #32]
    f648:	orr	w8, w9, w8
    f64c:	b	f658 <_ZN4llvm23TrackUnresolvedResolver7resolveEPNS_4InitE+0x80>
    f650:	mov	x20, xzr
    f654:	mov	w8, #0x1                   	// #1
    f658:	strb	w8, [x19, #32]
    f65c:	mov	x0, x20
    f660:	ldp	x20, x19, [sp, #64]
    f664:	ldp	x29, x30, [sp, #48]
    f668:	add	sp, sp, #0x50
    f66c:	ret

000000000000f670 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE>:
    f670:	ldr	x8, [x0, #24]
    f674:	cmp	x8, x1
    f678:	b.eq	f684 <_ZN4llvm20HasReferenceResolver7resolveEPNS_4InitE+0x14>  // b.none
    f67c:	mov	x0, xzr
    f680:	ret
    f684:	mov	w8, #0x1                   	// #1
    f688:	strb	w8, [x0, #32]
    f68c:	mov	x0, xzr
    f690:	ret

000000000000f694 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>:
    f694:	sub	sp, sp, #0x150
    f698:	stp	x29, x30, [sp, #240]
    f69c:	stp	x28, x27, [sp, #256]
    f6a0:	stp	x26, x25, [sp, #272]
    f6a4:	stp	x24, x23, [sp, #288]
    f6a8:	stp	x22, x21, [sp, #304]
    f6ac:	stp	x20, x19, [sp, #320]
    f6b0:	add	x29, sp, #0xf0
    f6b4:	ldr	x23, [x1, #32]
    f6b8:	strb	wzr, [sp, #40]
    f6bc:	adrp	x8, dd8 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE+0x5cc>
    f6c0:	ldr	x8, [x8]
    f6c4:	add	x24, sp, #0x18
    f6c8:	mov	x19, x1
    f6cc:	mov	x9, x0
    f6d0:	add	x27, x8, #0x10
    f6d4:	add	x0, x24, #0x18
    f6d8:	sub	x1, x29, #0x48
    f6dc:	mov	x21, x2
    f6e0:	stp	xzr, xzr, [sp, #56]
    f6e4:	str	xzr, [sp, #48]
    f6e8:	stp	x3, x27, [sp, #16]
    f6ec:	str	x3, [sp, #32]
    f6f0:	str	wzr, [sp, #72]
    f6f4:	mov	x22, x9
    f6f8:	stur	x9, [x29, #-72]
    f6fc:	sub	x20, x29, #0x48
    f700:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f704:	str	x23, [x0, #8]
    f708:	strb	wzr, [x0, #16]
    f70c:	ldr	x8, [x21]
    f710:	add	x1, sp, #0x18
    f714:	mov	x0, x21
    f718:	ldr	x8, [x8, #96]
    f71c:	blr	x8
    f720:	mov	x23, x0
    f724:	ldr	x0, [sp, #56]
    f728:	str	x27, [sp, #24]
    f72c:	bl	0 <_ZdlPv>
    f730:	adrp	x8, 0 <_ZNK4llvm5RecTy4dumpEv>
    f734:	ldr	d0, [x8]
    f738:	ldr	x9, [x19, #32]
    f73c:	add	x8, x24, #0x10
    f740:	str	x8, [sp, #24]
    f744:	str	d0, [sp, #32]
    f748:	ldr	w8, [x19, #48]
    f74c:	cmp	x23, x9
    f750:	cset	w28, ne  // ne = any
    f754:	cbz	w8, f870 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1dc>
    f758:	str	x23, [sp, #8]
    f75c:	add	x24, x20, #0x18
    f760:	mov	w23, #0x7                   	// #7
    f764:	ldr	w9, [x19, #52]
    f768:	sub	x10, x23, #0x7
    f76c:	cmp	x10, x9
    f770:	b.cs	f8cc <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x238>  // b.hs, b.nlast
    f774:	ldr	x25, [x19, x23, lsl #3]
    f778:	cbz	x25, f8ec <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x258>
    f77c:	ldrb	w9, [x25, #8]
    f780:	add	x8, x19, w8, uxtw #3
    f784:	ldr	x20, [x8, x23, lsl #3]
    f788:	cmp	w9, #0x5
    f78c:	b.ne	f7ac <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x118>  // b.any
    f790:	ldr	x3, [sp, #16]
    f794:	mov	x0, x22
    f798:	mov	x1, x25
    f79c:	mov	x2, x21
    f7a0:	bl	f694 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE>
    f7a4:	mov	x26, x0
    f7a8:	b	f800 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x16c>
    f7ac:	ldr	x8, [sp, #16]
    f7b0:	sub	x1, x29, #0x10
    f7b4:	mov	x0, x24
    f7b8:	sturb	wzr, [x29, #-56]
    f7bc:	stp	x27, x8, [x29, #-72]
    f7c0:	stp	xzr, xzr, [x24]
    f7c4:	str	wzr, [x24, #24]
    f7c8:	str	xzr, [x24, #16]
    f7cc:	stur	x22, [x29, #-16]
    f7d0:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f7d4:	str	x25, [x0, #8]
    f7d8:	strb	wzr, [x0, #16]
    f7dc:	ldr	x8, [x21]
    f7e0:	sub	x1, x29, #0x48
    f7e4:	mov	x0, x21
    f7e8:	ldr	x8, [x8, #96]
    f7ec:	blr	x8
    f7f0:	mov	x26, x0
    f7f4:	ldur	x0, [x29, #-40]
    f7f8:	stur	x27, [x29, #-72]
    f7fc:	bl	0 <_ZdlPv>
    f800:	ldp	w8, w9, [sp, #32]
    f804:	cmp	w8, w9
    f808:	b.cs	f850 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1bc>  // b.hs, b.nlast
    f80c:	ldr	x9, [sp, #24]
    f810:	add	x8, x9, w8, uxtw #4
    f814:	stp	x26, x20, [x8]
    f818:	ldp	w8, w9, [sp, #32]
    f81c:	cmp	w8, w9
    f820:	b.cs	f90c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x278>  // b.hs, b.nlast
    f824:	add	x3, x8, #0x1
    f828:	str	w3, [sp, #32]
    f82c:	ldr	w8, [x19, #48]
    f830:	cmp	x25, x26
    f834:	cset	w9, ne  // ne = any
    f838:	sub	x10, x23, #0x6
    f83c:	add	x23, x23, #0x1
    f840:	cmp	x10, x8
    f844:	orr	w28, w28, w9
    f848:	b.cc	f764 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0xd0>  // b.lo, b.ul, b.last
    f84c:	b	f864 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1d0>
    f850:	add	x0, sp, #0x18
    f854:	mov	x1, xzr
    f858:	bl	0 <_ZNK4llvm5RecTy4dumpEv>
    f85c:	ldr	w8, [sp, #32]
    f860:	b	f80c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x178>
    f864:	ldr	x23, [sp, #8]
    f868:	tbnz	w28, #0, f87c <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1e8>
    f86c:	b	f890 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1fc>
    f870:	cmp	x23, x9
    f874:	b.eq	f890 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x1fc>  // b.none
    f878:	mov	x3, xzr
    f87c:	ldr	x2, [sp, #24]
    f880:	mov	x0, x23
    f884:	mov	x1, xzr
    f888:	bl	7a3c <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    f88c:	mov	x19, x0
    f890:	ldr	x0, [sp, #24]
    f894:	add	x8, sp, #0x18
    f898:	add	x8, x8, #0x10
    f89c:	cmp	x0, x8
    f8a0:	b.eq	f8a8 <_ZL15ForeachDagApplyPN4llvm4InitEPNS_7DagInitES1_PNS_6RecordE+0x214>  // b.none
    f8a4:	bl	0 <free>
    f8a8:	mov	x0, x19
    f8ac:	ldp	x20, x19, [sp, #320]
    f8b0:	ldp	x22, x21, [sp, #304]
    f8b4:	ldp	x24, x23, [sp, #288]
    f8b8:	ldp	x26, x25, [sp, #272]
    f8bc:	ldp	x28, x27, [sp, #256]
    f8c0:	ldp	x29, x30, [sp, #240]
    f8c4:	add	sp, sp, #0x150
    f8c8:	ret
    f8cc:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8d0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8d4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8d8:	add	x0, x0, #0x0
    f8dc:	add	x1, x1, #0x0
    f8e0:	add	x3, x3, #0x0
    f8e4:	mov	w2, #0x545                 	// #1349
    f8e8:	bl	0 <__assert_fail>
    f8ec:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8f0:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8f4:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f8f8:	add	x0, x0, #0x0
    f8fc:	add	x1, x1, #0x0
    f900:	add	x3, x3, #0x0
    f904:	mov	w2, #0x69                  	// #105
    f908:	bl	0 <__assert_fail>
    f90c:	adrp	x0, 0 <_ZNK4llvm5RecTy4dumpEv>
    f910:	adrp	x1, 0 <_ZNK4llvm5RecTy4dumpEv>
    f914:	adrp	x3, 0 <_ZNK4llvm5RecTy4dumpEv>
    f918:	add	x0, x0, #0x0
    f91c:	add	x1, x1, #0x0
    f920:	add	x3, x3, #0x0
    f924:	mov	w2, #0x43                  	// #67
    f928:	bl	0 <__assert_fail>

000000000000f92c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>:
    f92c:	stp	x29, x30, [sp, #-80]!
    f930:	stp	x26, x25, [sp, #16]
    f934:	stp	x24, x23, [sp, #32]
    f938:	stp	x22, x21, [sp, #48]
    f93c:	stp	x20, x19, [sp, #64]
    f940:	mov	x29, sp
    f944:	sub	x25, x1, x0
    f948:	cmp	x25, #0x81
    f94c:	b.lt	fb20 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1f4>  // b.tstop
    f950:	mov	x21, x1
    f954:	mov	x19, x0
    f958:	mov	x22, x2
    f95c:	and	x20, x3, #0xff
    f960:	add	x24, x0, #0x8
    f964:	b	f98c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x60>
    f968:	mov	x0, x23
    f96c:	mov	x1, x21
    f970:	mov	x2, x22
    f974:	mov	x3, x20
    f978:	bl	f92c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_>
    f97c:	sub	x25, x23, x19
    f980:	cmp	x25, #0x80
    f984:	mov	x21, x23
    f988:	b.le	fb20 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1f4>
    f98c:	cbz	x22, faac <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x180>
    f990:	ldr	x8, [x19, #8]
    f994:	lsr	x23, x25, #4
    f998:	ldr	x1, [x19, x23, lsl #3]
    f99c:	sub	x22, x22, #0x1
    f9a0:	ldr	x0, [x8]
    f9a4:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f9a8:	tbz	w0, #0, f9d8 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0xac>
    f9ac:	ldr	x8, [x19, x23, lsl #3]
    f9b0:	ldur	x1, [x21, #-8]
    f9b4:	ldr	x0, [x8]
    f9b8:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f9bc:	tbz	w0, #0, f9fc <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0xd0>
    f9c0:	lsl	x8, x23, #3
    f9c4:	ldr	x9, [x19, x8]
    f9c8:	ldr	x10, [x19]
    f9cc:	str	x9, [x19]
    f9d0:	str	x10, [x19, x8]
    f9d4:	b	fa58 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x12c>
    f9d8:	ldr	x8, [x24]
    f9dc:	ldur	x1, [x21, #-8]
    f9e0:	ldr	x0, [x8]
    f9e4:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    f9e8:	tbz	w0, #0, fa20 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0xf4>
    f9ec:	ldr	q0, [x19]
    f9f0:	ext	v0.16b, v0.16b, v0.16b, #8
    f9f4:	str	q0, [x19]
    f9f8:	b	fa58 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x12c>
    f9fc:	ldr	x8, [x19, #8]
    fa00:	ldur	x1, [x21, #-8]
    fa04:	ldr	x0, [x8]
    fa08:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    fa0c:	ldr	x8, [x19]
    fa10:	tbnz	w0, #0, fa38 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x10c>
    fa14:	ldr	x9, [x19, #8]
    fa18:	stp	x9, x8, [x19]
    fa1c:	b	fa58 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x12c>
    fa20:	ldr	x8, [x19, x23, lsl #3]
    fa24:	ldur	x1, [x21, #-8]
    fa28:	ldr	x0, [x8]
    fa2c:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    fa30:	ldr	x8, [x19]
    fa34:	tbz	w0, #0, fa48 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x11c>
    fa38:	ldur	x9, [x21, #-8]
    fa3c:	str	x9, [x19]
    fa40:	stur	x8, [x21, #-8]
    fa44:	b	fa58 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x12c>
    fa48:	lsl	x9, x23, #3
    fa4c:	ldr	x10, [x19, x9]
    fa50:	str	x10, [x19]
    fa54:	str	x8, [x19, x9]
    fa58:	mov	x25, x21
    fa5c:	mov	x26, x24
    fa60:	sub	x23, x26, #0x8
    fa64:	ldr	x8, [x23, #8]!
    fa68:	ldr	x1, [x19]
    fa6c:	ldr	x0, [x8]
    fa70:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    fa74:	tbnz	w0, #0, fa64 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x138>
    fa78:	add	x26, x23, #0x8
    fa7c:	ldr	x1, [x25, #-8]!
    fa80:	ldr	x8, [x19]
    fa84:	ldr	x0, [x8]
    fa88:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    fa8c:	tbnz	w0, #0, fa7c <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x150>
    fa90:	cmp	x23, x25
    fa94:	b.cs	f968 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x3c>  // b.hs, b.nlast
    fa98:	ldr	x8, [x25]
    fa9c:	ldr	x9, [x23]
    faa0:	str	x8, [x23]
    faa4:	str	x9, [x25]
    faa8:	b	fa60 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x134>
    faac:	lsr	x22, x25, #3
    fab0:	sub	x8, x22, #0x2
    fab4:	sub	x9, x22, #0x1
    fab8:	cmp	x8, #0x0
    fabc:	csel	x8, x9, x8, lt  // lt = tstop
    fac0:	asr	x23, x8, #1
    fac4:	ldr	x3, [x19, x23, lsl #3]
    fac8:	mov	x0, x19
    facc:	mov	x1, x23
    fad0:	mov	x2, x22
    fad4:	mov	x4, x20
    fad8:	bl	fbf8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>
    fadc:	sub	x23, x23, #0x1
    fae0:	cmn	x23, #0x1
    fae4:	b.ne	fac4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x198>  // b.any
    fae8:	cmp	x25, #0x9
    faec:	b.lt	fb20 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1f4>  // b.tstop
    faf0:	sub	x21, x21, #0x8
    faf4:	ldr	x8, [x19]
    faf8:	ldr	x3, [x21]
    fafc:	sub	x22, x21, x19
    fb00:	asr	x2, x22, #3
    fb04:	mov	x0, x19
    fb08:	mov	x1, xzr
    fb0c:	mov	x4, x20
    fb10:	str	x8, [x21], #-8
    fb14:	bl	fbf8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>
    fb18:	cmp	x22, #0x8
    fb1c:	b.gt	faf4 <_ZSt16__introsort_loopIPPN4llvm6RecordElN9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_SC_T0_T1_+0x1c8>
    fb20:	ldp	x20, x19, [sp, #64]
    fb24:	ldp	x22, x21, [sp, #48]
    fb28:	ldp	x24, x23, [sp, #32]
    fb2c:	ldp	x26, x25, [sp, #16]
    fb30:	ldp	x29, x30, [sp], #80
    fb34:	ret

000000000000fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>:
    fb38:	sub	sp, sp, #0x60
    fb3c:	stp	x29, x30, [sp, #64]
    fb40:	stp	x20, x19, [sp, #80]
    fb44:	add	x29, sp, #0x40
    fb48:	ldr	x8, [x0]
    fb4c:	mov	x19, x1
    fb50:	ldr	x9, [x8, #48]
    fb54:	add	x8, sp, #0x20
    fb58:	blr	x9
    fb5c:	ldr	x0, [x19]
    fb60:	ldr	x8, [x0]
    fb64:	ldr	x9, [x8, #48]
    fb68:	mov	x8, sp
    fb6c:	blr	x9
    fb70:	ldr	x8, [sp, #40]
    fb74:	ldr	x9, [sp, #8]
    fb78:	subs	x20, x8, x9
    fb7c:	csel	x2, x9, x8, hi  // hi = pmore
    fb80:	cbz	x2, fb98 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x60>
    fb84:	ldr	x1, [sp]
    fb88:	ldr	x0, [sp, #32]
    fb8c:	bl	0 <memcmp>
    fb90:	mov	w19, w0
    fb94:	cbnz	w0, fbb4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x7c>
    fb98:	mov	w19, #0x7fffffff            	// #2147483647
    fb9c:	cmp	x20, x19
    fba0:	b.gt	fbb4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x7c>
    fba4:	mov	x8, #0xffffffff80000000    	// #-2147483648
    fba8:	cmp	x20, x8
    fbac:	mov	w8, #0x80000000            	// #-2147483648
    fbb0:	csel	w19, w20, w8, gt
    fbb4:	ldr	x0, [sp]
    fbb8:	mov	x8, sp
    fbbc:	add	x8, x8, #0x10
    fbc0:	cmp	x0, x8
    fbc4:	b.eq	fbcc <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0x94>  // b.none
    fbc8:	bl	0 <_ZdlPv>
    fbcc:	ldr	x0, [sp, #32]
    fbd0:	add	x8, sp, #0x20
    fbd4:	add	x8, x8, #0x10
    fbd8:	cmp	x0, x8
    fbdc:	b.eq	fbe4 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_+0xac>  // b.none
    fbe0:	bl	0 <_ZdlPv>
    fbe4:	lsr	w0, w19, #31
    fbe8:	ldp	x20, x19, [sp, #80]
    fbec:	ldp	x29, x30, [sp, #64]
    fbf0:	add	sp, sp, #0x60
    fbf4:	ret

000000000000fbf8 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_>:
    fbf8:	sub	sp, sp, #0xa0
    fbfc:	stp	x29, x30, [sp, #64]
    fc00:	stp	x28, x27, [sp, #80]
    fc04:	stp	x26, x25, [sp, #96]
    fc08:	stp	x24, x23, [sp, #112]
    fc0c:	stp	x22, x21, [sp, #128]
    fc10:	stp	x20, x19, [sp, #144]
    fc14:	add	x29, sp, #0x40
    fc18:	sub	x24, x2, #0x1
    fc1c:	cmp	x24, #0x0
    fc20:	csel	x8, x2, x24, lt  // lt = tstop
    fc24:	asr	x25, x8, #1
    fc28:	mov	x19, x3
    fc2c:	mov	x22, x2
    fc30:	mov	x21, x1
    fc34:	mov	x20, x0
    fc38:	cmp	x25, x1
    fc3c:	mov	x23, x1
    fc40:	b.le	fc84 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x8c>
    fc44:	mov	x26, x21
    fc48:	lsl	x8, x26, #1
    fc4c:	add	x23, x8, #0x2
    fc50:	ldr	x8, [x20, x23, lsl #3]
    fc54:	mov	w27, #0x1                   	// #1
    fc58:	bfi	x27, x26, #1, #63
    fc5c:	ldr	x1, [x20, x27, lsl #3]
    fc60:	ldr	x0, [x8]
    fc64:	bl	fb38 <_ZN9__gnu_cxx5__ops15_Iter_comp_iterIZN4llvm11RecordRecTy3getENS2_8ArrayRefIPNS2_6RecordEEEE3$_0EclIPS6_SB_EEbT_T0_>
    fc68:	tst	w0, #0x1
    fc6c:	csel	x23, x27, x23, ne  // ne = any
    fc70:	ldr	x8, [x20, x23, lsl #3]
    fc74:	cmp	x23, x25
    fc78:	str	x8, [x20, x26, lsl #3]
    fc7c:	mov	x26, x23
    fc80:	b.lt	fc48 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x50>  // b.tstop
    fc84:	tbnz	w22, #0, fcb0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xb8>
    fc88:	sub	x8, x22, #0x2
    fc8c:	cmp	x8, #0x0
    fc90:	csel	x8, x24, x8, lt  // lt = tstop
    fc94:	cmp	x23, x8, asr #1
    fc98:	b.ne	fcb0 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xb8>  // b.any
    fc9c:	mov	w8, #0x1                   	// #1
    fca0:	bfi	x8, x23, #1, #63
    fca4:	ldr	x9, [x20, x8, lsl #3]
    fca8:	str	x9, [x20, x23, lsl #3]
    fcac:	mov	x23, x8
    fcb0:	cmp	x23, x21
    fcb4:	b.le	fd84 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x18c>
    fcb8:	mov	x8, sp
    fcbc:	add	x9, sp, #0x20
    fcc0:	add	x25, x8, #0x10
    fcc4:	add	x26, x9, #0x10
    fcc8:	mov	w27, #0x80000000            	// #-2147483648
    fccc:	sub	x8, x23, #0x1
    fcd0:	cmp	x8, #0x0
    fcd4:	csel	x8, x23, x8, lt  // lt = tstop
    fcd8:	asr	x28, x8, #1
    fcdc:	ldr	x8, [x20, x28, lsl #3]
    fce0:	ldr	x0, [x8]
    fce4:	ldr	x8, [x0]
    fce8:	ldr	x9, [x8, #48]
    fcec:	add	x8, sp, #0x20
    fcf0:	blr	x9
    fcf4:	ldr	x0, [x19]
    fcf8:	ldr	x8, [x0]
    fcfc:	ldr	x9, [x8, #48]
    fd00:	mov	x8, sp
    fd04:	blr	x9
    fd08:	ldr	x8, [sp, #40]
    fd0c:	ldr	x9, [sp, #8]
    fd10:	subs	x24, x8, x9
    fd14:	csel	x2, x9, x8, hi  // hi = pmore
    fd18:	cbz	x2, fd30 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x138>
    fd1c:	ldr	x1, [sp]
    fd20:	ldr	x0, [sp, #32]
    fd24:	bl	0 <memcmp>
    fd28:	mov	w22, w0
    fd2c:	cbnz	w0, fd48 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x150>
    fd30:	mov	w22, #0x7fffffff            	// #2147483647
    fd34:	cmp	x24, x22
    fd38:	b.gt	fd48 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x150>
    fd3c:	mov	x8, #0xffffffff80000000    	// #-2147483648
    fd40:	cmp	x24, x8
    fd44:	csel	w22, w24, w27, gt
    fd48:	ldr	x0, [sp]
    fd4c:	cmp	x0, x25
    fd50:	b.eq	fd58 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x160>  // b.none
    fd54:	bl	0 <_ZdlPv>
    fd58:	ldr	x0, [sp, #32]
    fd5c:	cmp	x0, x26
    fd60:	b.eq	fd68 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x170>  // b.none
    fd64:	bl	0 <_ZdlPv>
    fd68:	tbz	w22, #31, fd84 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x18c>
    fd6c:	ldr	x8, [x20, x28, lsl #3]
    fd70:	cmp	x28, x21
    fd74:	str	x8, [x20, x23, lsl #3]
    fd78:	mov	x23, x28
    fd7c:	b.gt	fccc <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0xd4>
    fd80:	b	fd88 <_ZSt13__adjust_heapIPPN4llvm6RecordElS2_N9__gnu_cxx5__ops15_Iter_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_SD_T1_T2_+0x190>
    fd84:	mov	x28, x23
    fd88:	str	x19, [x20, x28, lsl #3]
    fd8c:	ldp	x20, x19, [sp, #144]
    fd90:	ldp	x22, x21, [sp, #128]
    fd94:	ldp	x24, x23, [sp, #112]
    fd98:	ldp	x26, x25, [sp, #96]
    fd9c:	ldp	x28, x27, [sp, #80]
    fda0:	ldp	x29, x30, [sp, #64]
    fda4:	add	sp, sp, #0xa0
    fda8:	ret

000000000000fdac <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_>:
    fdac:	sub	sp, sp, #0xa0
    fdb0:	stp	x29, x30, [sp, #64]
    fdb4:	str	x27, [sp, #80]
    fdb8:	stp	x26, x25, [sp, #96]
    fdbc:	stp	x24, x23, [sp, #112]
    fdc0:	stp	x22, x21, [sp, #128]
    fdc4:	stp	x20, x19, [sp, #144]
    fdc8:	add	x29, sp, #0x40
    fdcc:	ldr	x21, [x0]
    fdd0:	mov	x8, sp
    fdd4:	add	x9, sp, #0x20
    fdd8:	mov	x19, x0
    fddc:	add	x22, x8, #0x10
    fde0:	add	x23, x9, #0x10
    fde4:	mov	x24, #0xffffffff80000000    	// #-2147483648
    fde8:	mov	w25, #0x80000000            	// #-2147483648
    fdec:	mov	x26, x0
    fdf0:	ldr	x20, [x26, #-8]!
    fdf4:	ldr	x0, [x21]
    fdf8:	ldr	x8, [x0]
    fdfc:	ldr	x9, [x8, #48]
    fe00:	add	x8, sp, #0x20
    fe04:	blr	x9
    fe08:	ldr	x0, [x20]
    fe0c:	ldr	x8, [x0]
    fe10:	ldr	x9, [x8, #48]
    fe14:	mov	x8, sp
    fe18:	blr	x9
    fe1c:	ldr	x8, [sp, #40]
    fe20:	ldr	x9, [sp, #8]
    fe24:	subs	x27, x8, x9
    fe28:	csel	x2, x9, x8, hi  // hi = pmore
    fe2c:	cbz	x2, fe44 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0x98>
    fe30:	ldr	x1, [sp]
    fe34:	ldr	x0, [sp, #32]
    fe38:	bl	0 <memcmp>
    fe3c:	mov	w20, w0
    fe40:	cbnz	w0, fe58 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xac>
    fe44:	mov	w20, #0x7fffffff            	// #2147483647
    fe48:	cmp	x27, x20
    fe4c:	b.gt	fe58 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xac>
    fe50:	cmp	x27, x24
    fe54:	csel	w20, w27, w25, gt
    fe58:	ldr	x0, [sp]
    fe5c:	cmp	x0, x22
    fe60:	b.eq	fe68 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xbc>  // b.none
    fe64:	bl	0 <_ZdlPv>
    fe68:	ldr	x0, [sp, #32]
    fe6c:	cmp	x0, x23
    fe70:	b.eq	fe78 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xcc>  // b.none
    fe74:	bl	0 <_ZdlPv>
    fe78:	tbz	w20, #31, fe8c <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0xe0>
    fe7c:	ldur	x8, [x19, #-8]
    fe80:	str	x8, [x19]
    fe84:	mov	x19, x26
    fe88:	b	fdf0 <_ZSt25__unguarded_linear_insertIPPN4llvm6RecordEN9__gnu_cxx5__ops14_Val_comp_iterIZNS0_11RecordRecTy3getENS0_8ArrayRefIS2_EEE3$_0EEEvT_T0_+0x44>
    fe8c:	str	x21, [x19]
    fe90:	ldp	x20, x19, [sp, #144]
    fe94:	ldp	x22, x21, [sp, #128]
    fe98:	ldp	x24, x23, [sp, #112]
    fe9c:	ldp	x26, x25, [sp, #96]
    fea0:	ldr	x27, [sp, #80]
    fea4:	ldp	x29, x30, [sp, #64]
    fea8:	add	sp, sp, #0xa0
    feac:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	ldr	x20, [x21, #16]!
  18:	mov	x19, x0
  1c:	ldr	w8, [x21, #8]
  20:	cbz	w8, 38 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x38>
  24:	lsl	x22, x8, #3
  28:	ldr	x0, [x20], #8
  2c:	bl	0 <free>
  30:	subs	x22, x22, #0x8
  34:	b.ne	28 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x28>  // b.any
  38:	ldr	w8, [x19, #72]
  3c:	ldr	x20, [x19, #64]
  40:	cbz	w8, 5c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x5c>
  44:	lsl	x22, x8, #4
  48:	ldr	x0, [x20], #16
  4c:	bl	0 <free>
  50:	subs	x22, x22, #0x10
  54:	b.ne	48 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x48>  // b.any
  58:	ldr	x20, [x19, #64]
  5c:	add	x8, x19, #0x50
  60:	cmp	x20, x8
  64:	b.eq	70 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x70>  // b.none
  68:	mov	x0, x20
  6c:	bl	0 <free>
  70:	ldr	x0, [x21], #16
  74:	cmp	x0, x21
  78:	b.eq	8c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EED2Ev+0x8c>  // b.none
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldp	x22, x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <free>
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x22, x21, [sp, #16]
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZN4llvm5RecTyD2Ev:

0000000000000000 <_ZN4llvm5RecTyD2Ev>:
   0:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev>:
   0:	ldr	x0, [x0]
   4:	cbz	x0, c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EED2Ev+0xc>
   8:	b	0 <_ZdlPv>
   c:	ret

Disassembly of section .text._ZNK4llvm8BitsInit6getBitEj:

0000000000000000 <_ZNK4llvm8BitsInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #32]
   c:	cmp	w8, w1
  10:	b.ls	24 <_ZNK4llvm8BitsInit6getBitEj+0x24>  // b.plast
  14:	add	x8, x0, w1, uxtw #3
  18:	ldr	x0, [x8, #40]
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8BitsInit6getBitEj>
  28:	adrp	x1, 0 <_ZNK4llvm8BitsInit6getBitEj>
  2c:	adrp	x3, 0 <_ZNK4llvm8BitsInit6getBitEj>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x22e                 	// #558
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev>:
   0:	ldr	x1, [x0, #16]
   4:	b	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEED2Ev>

Disassembly of section .text._ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_:

0000000000000000 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x22, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x6c>
  28:	ldr	x9, [x22]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, lt  // lt = tstop
  44:	csel	x8, x11, x12, lt  // lt = tstop
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x70>  // b.none
  58:	ldr	x8, [x22]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.lt	70 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0x70>  // b.tstop
  68:	b	f0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xf0>
  6c:	mov	x21, x20
  70:	mov	w0, #0x30                  	// #48
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x22]
  7c:	mov	x23, x0
  80:	mov	x22, x0
  84:	mov	x1, x21
  88:	str	x8, [x23, #32]!
  8c:	str	xzr, [x0, #40]
  90:	mov	x0, x19
  94:	mov	x2, x23
  98:	bl	0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_>
  9c:	mov	x21, x0
  a0:	cbz	x1, e8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xe8>
  a4:	mov	x2, x1
  a8:	mov	w0, #0x1                   	// #1
  ac:	cbnz	x21, c8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xc8>
  b0:	cmp	x20, x2
  b4:	b.eq	c8 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xc8>  // b.none
  b8:	ldr	x8, [x23]
  bc:	ldr	x9, [x2, #32]
  c0:	cmp	x8, x9
  c4:	cset	w0, lt  // lt = tstop
  c8:	mov	x1, x22
  cc:	mov	x3, x20
  d0:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  d4:	ldr	x8, [x19, #40]
  d8:	mov	x21, x22
  dc:	add	x8, x8, #0x1
  e0:	str	x8, [x19, #40]
  e4:	b	f0 <_ZNSt3mapIlPN4llvm7IntInitESt4lessIlESaISt4pairIKlS2_EEEixERS6_+0xf0>
  e8:	mov	x0, x22
  ec:	bl	0 <_ZdlPv>
  f0:	add	x0, x21, #0x28
  f4:	ldp	x20, x19, [sp, #48]
  f8:	ldp	x22, x21, [sp, #32]
  fc:	ldr	x23, [sp, #16]
 100:	ldp	x29, x30, [sp], #64
 104:	ret

Disassembly of section .text._ZN4llvm6itostrB5cxx11El:

0000000000000000 <_ZN4llvm6itostrB5cxx11El>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x8
  18:	tbnz	x0, #63, 5c <_ZN4llvm6itostrB5cxx11El+0x5c>
  1c:	add	x9, sp, #0x8
  20:	add	x8, x9, #0x15
  24:	cbz	x0, bc <_ZN4llvm6itostrB5cxx11El+0xbc>
  28:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  2c:	movk	x9, #0xcccd
  30:	mov	w10, #0xa                   	// #10
  34:	mov	x20, x8
  38:	umulh	x11, x0, x9
  3c:	lsr	x11, x11, #3
  40:	msub	w12, w11, w10, w0
  44:	orr	w12, w12, #0x30
  48:	cmp	x0, #0x9
  4c:	strb	w12, [x20, #-1]!
  50:	mov	x0, x11
  54:	b.hi	38 <_ZN4llvm6itostrB5cxx11El+0x38>  // b.pmore
  58:	b	c8 <_ZN4llvm6itostrB5cxx11El+0xc8>
  5c:	add	x11, sp, #0x8
  60:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  64:	neg	x9, x0
  68:	movk	x10, #0xcccd
  6c:	add	x8, x11, #0x15
  70:	add	x20, x11, #0x14
  74:	mov	w11, #0xa                   	// #10
  78:	umulh	x12, x9, x10
  7c:	lsr	x12, x12, #3
  80:	msub	w13, w12, w11, w9
  84:	orr	w13, w13, #0x30
  88:	cmp	x9, #0x9
  8c:	strb	w13, [x20], #-1
  90:	mov	x9, x12
  94:	b.hi	78 <_ZN4llvm6itostrB5cxx11El+0x78>  // b.pmore
  98:	sub	x21, x8, x20
  9c:	mov	w9, #0x2d                  	// #45
  a0:	add	x0, x19, #0x10
  a4:	cmp	x21, #0x10
  a8:	strb	w9, [x20]
  ac:	str	x0, [x19]
  b0:	str	x21, [x29, #24]
  b4:	b.cs	e0 <_ZN4llvm6itostrB5cxx11El+0xe0>  // b.hs, b.nlast
  b8:	b	fc <_ZN4llvm6itostrB5cxx11El+0xfc>
  bc:	add	x20, x9, #0x14
  c0:	mov	w9, #0x30                  	// #48
  c4:	strb	w9, [sp, #28]
  c8:	sub	x21, x8, x20
  cc:	add	x0, x19, #0x10
  d0:	cmp	x21, #0x10
  d4:	str	x0, [x19]
  d8:	str	x21, [x29, #24]
  dc:	b.cc	fc <_ZN4llvm6itostrB5cxx11El+0xfc>  // b.lo, b.ul, b.last
  e0:	add	x1, x29, #0x18
  e4:	mov	x0, x19
  e8:	mov	x2, xzr
  ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  f0:	ldr	x8, [x29, #24]
  f4:	str	x0, [x19]
  f8:	str	x8, [x19, #16]
  fc:	cbz	x21, 120 <_ZN4llvm6itostrB5cxx11El+0x120>
 100:	cmp	x21, #0x1
 104:	b.ne	114 <_ZN4llvm6itostrB5cxx11El+0x114>  // b.any
 108:	ldrb	w8, [x20]
 10c:	strb	w8, [x0]
 110:	b	120 <_ZN4llvm6itostrB5cxx11El+0x120>
 114:	mov	x1, x20
 118:	mov	x2, x21
 11c:	bl	0 <memcpy>
 120:	ldr	x8, [x29, #24]
 124:	ldr	x9, [x19]
 128:	str	x8, [x19, #8]
 12c:	strb	wzr, [x9, x8]
 130:	ldp	x20, x19, [sp, #64]
 134:	ldr	x21, [sp, #48]
 138:	ldp	x29, x30, [sp, #32]
 13c:	add	sp, sp, #0x50
 140:	ret

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEED2Ev>:
   0:	ldr	x0, [x0]
   4:	b	0 <free>

Disassembly of section .text._ZN4llvmplERKNS_5TwineES2_:

0000000000000000 <_ZN4llvmplERKNS_5TwineES2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w10, [x0, #16]
   c:	cbz	w10, 38 <_ZN4llvmplERKNS_5TwineES2_+0x38>
  10:	ldrb	w9, [x1, #16]
  14:	cbz	w9, 38 <_ZN4llvmplERKNS_5TwineES2_+0x38>
  18:	cmp	w10, #0x1
  1c:	b.ne	4c <_ZN4llvmplERKNS_5TwineES2_+0x4c>  // b.any
  20:	ldr	x9, [x1, #16]
  24:	ldr	q0, [x1]
  28:	str	x9, [x8, #16]
  2c:	str	q0, [x8]
  30:	ldp	x29, x30, [sp], #16
  34:	ret
  38:	mov	w9, #0x100                 	// #256
  3c:	stp	xzr, xzr, [x8]
  40:	strh	w9, [x8, #16]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	cmp	w9, #0x1
  50:	b.ne	6c <_ZN4llvmplERKNS_5TwineES2_+0x6c>  // b.any
  54:	ldr	x9, [x0, #16]
  58:	ldr	q0, [x0]
  5c:	str	x9, [x8, #16]
  60:	str	q0, [x8]
  64:	ldp	x29, x30, [sp], #16
  68:	ret
  6c:	ldrb	w11, [x0, #17]
  70:	cmp	w11, #0x1
  74:	b.ne	90 <_ZN4llvmplERKNS_5TwineES2_+0x90>  // b.any
  78:	ldr	x0, [x0]
  7c:	ldrb	w11, [x1, #17]
  80:	cmp	w11, #0x1
  84:	b.eq	a0 <_ZN4llvmplERKNS_5TwineES2_+0xa0>  // b.none
  88:	mov	w9, #0x2                   	// #2
  8c:	b	a4 <_ZN4llvmplERKNS_5TwineES2_+0xa4>
  90:	mov	w10, #0x2                   	// #2
  94:	ldrb	w11, [x1, #17]
  98:	cmp	w11, #0x1
  9c:	b.ne	88 <_ZN4llvmplERKNS_5TwineES2_+0x88>  // b.any
  a0:	ldr	x1, [x1]
  a4:	cmp	w10, #0x2
  a8:	stp	x0, x1, [x8]
  ac:	strb	w10, [x8, #16]
  b0:	strb	w9, [x8, #17]
  b4:	b.ne	cc <_ZN4llvmplERKNS_5TwineES2_+0xcc>  // b.any
  b8:	ldrb	w8, [x0, #16]
  bc:	cbz	w8, f0 <_ZN4llvmplERKNS_5TwineES2_+0xf0>
  c0:	ldrb	w8, [x0, #17]
  c4:	cmp	w8, #0x1
  c8:	b.eq	f0 <_ZN4llvmplERKNS_5TwineES2_+0xf0>  // b.none
  cc:	cmp	w9, #0x2
  d0:	b.ne	e8 <_ZN4llvmplERKNS_5TwineES2_+0xe8>  // b.any
  d4:	ldrb	w8, [x1, #16]
  d8:	cbz	w8, f0 <_ZN4llvmplERKNS_5TwineES2_+0xf0>
  dc:	ldrb	w8, [x1, #17]
  e0:	cmp	w8, #0x1
  e4:	b.eq	f0 <_ZN4llvmplERKNS_5TwineES2_+0xf0>  // b.none
  e8:	ldp	x29, x30, [sp], #16
  ec:	ret
  f0:	adrp	x0, 0 <_ZN4llvmplERKNS_5TwineES2_>
  f4:	adrp	x1, 0 <_ZN4llvmplERKNS_5TwineES2_>
  f8:	adrp	x3, 0 <_ZN4llvmplERKNS_5TwineES2_>
  fc:	add	x0, x0, #0x0
 100:	add	x1, x1, #0x0
 104:	add	x3, x3, #0x0
 108:	mov	w2, #0xb8                  	// #184
 10c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x27, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x20, x2
  2c:	sub	x10, x1, x27
  30:	add	x9, x27, x8, lsl #3
  34:	mov	x23, x0
  38:	cmp	x9, x1
  3c:	asr	x26, x10, #3
  40:	b.eq	12c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x12c>  // b.none
  44:	cmp	x27, x1
  48:	b.hi	2b0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b0>  // b.pmore
  4c:	cmp	x9, x1
  50:	b.cc	2d0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d0>  // b.lo, b.ul, b.last
  54:	ldr	w9, [x23, #12]
  58:	sub	x24, x21, x20
  5c:	asr	x22, x24, #3
  60:	add	x2, x22, x8
  64:	cmp	x2, x9
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x84>  // b.plast
  6c:	add	x1, x23, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x23
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x27, [x23]
  80:	ldr	w8, [x23, #8]
  84:	add	x19, x27, x26, lsl #3
  88:	add	x0, x27, x8, lsl #3
  8c:	sub	x25, x0, x19
  90:	asr	x28, x25, #3
  94:	cmp	x28, x22
  98:	b.cs	198 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x198>  // b.hs, b.nlast
  9c:	ldr	w10, [x23, #12]
  a0:	add	x9, x22, x8
  a4:	cmp	x9, x10
  a8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w9, [x23, #8]
  b4:	b.eq	d4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xd4>  // b.none
  b8:	add	x8, x27, w9, uxtw #3
  bc:	mov	x22, x0
  c0:	sub	x0, x8, x28, lsl #3
  c4:	mov	x1, x19
  c8:	mov	x2, x25
  cc:	bl	0 <memcpy>
  d0:	mov	x0, x22
  d4:	cbz	x25, 114 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
  d8:	cmp	x28, #0x3
  dc:	b.ls	fc <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0xfc>  // b.plast
  e0:	add	x8, x20, x28, lsl #3
  e4:	cmp	x19, x8
  e8:	b.cs	248 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.hs, b.nlast
  ec:	add	x8, x28, x26
  f0:	add	x8, x27, x8, lsl #3
  f4:	cmp	x8, x20
  f8:	b.ls	248 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.plast
  fc:	mov	x9, x19
 100:	mov	x8, x28
 104:	ldr	x10, [x20], #8
 108:	subs	x8, x8, #0x1
 10c:	str	x10, [x9], #8
 110:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 114:	cmp	x20, x21
 118:	b.eq	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>  // b.none
 11c:	sub	x2, x21, x20
 120:	mov	x1, x20
 124:	bl	0 <memcpy>
 128:	b	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 12c:	ldr	w9, [x23, #12]
 130:	sub	x19, x21, x20
 134:	asr	x22, x19, #3
 138:	sub	x9, x9, x8
 13c:	cmp	x22, x9
 140:	b.ls	158 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x158>  // b.plast
 144:	add	x2, x22, x8
 148:	add	x1, x23, #0x10
 14c:	mov	w3, #0x8                   	// #8
 150:	mov	x0, x23
 154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 158:	cmp	x20, x21
 15c:	b.eq	178 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x178>  // b.none
 160:	ldr	x8, [x23]
 164:	ldr	w9, [x23, #8]
 168:	mov	x1, x20
 16c:	mov	x2, x19
 170:	add	x0, x8, x9, lsl #3
 174:	bl	0 <memcpy>
 178:	ldp	w8, w9, [x23, #8]
 17c:	add	x8, x22, x8
 180:	cmp	x8, x9
 184:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 188:	ldr	x9, [x23]
 18c:	str	w8, [x23, #8]
 190:	add	x19, x9, x26, lsl #3
 194:	b	228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 198:	ldr	w9, [x23, #12]
 19c:	sub	x9, x9, x8
 1a0:	cmp	x22, x9
 1a4:	b.ls	1c4 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1c4>  // b.plast
 1a8:	add	x2, x22, x8
 1ac:	add	x1, x23, #0x10
 1b0:	mov	w3, #0x8                   	// #8
 1b4:	mov	x21, x0
 1b8:	mov	x0, x23
 1bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1c0:	mov	x0, x21
 1c4:	sub	x21, x0, x22, lsl #3
 1c8:	cbz	x24, 1ec <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1ec>
 1cc:	ldr	x8, [x23]
 1d0:	ldr	w9, [x23, #8]
 1d4:	mov	x25, x0
 1d8:	mov	x1, x21
 1dc:	mov	x2, x24
 1e0:	add	x0, x8, x9, lsl #3
 1e4:	bl	0 <memmove>
 1e8:	mov	x0, x25
 1ec:	ldp	w8, w9, [x23, #8]
 1f0:	add	x8, x22, x8
 1f4:	cmp	x8, x9
 1f8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 1fc:	subs	x2, x21, x19
 200:	str	w8, [x23, #8]
 204:	b.eq	214 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x214>  // b.none
 208:	sub	x0, x0, x2
 20c:	mov	x1, x19
 210:	bl	0 <memmove>
 214:	cbz	x24, 228 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 218:	mov	x0, x19
 21c:	mov	x1, x20
 220:	mov	x2, x24
 224:	bl	0 <memmove>
 228:	mov	x0, x19
 22c:	ldp	x20, x19, [sp, #80]
 230:	ldp	x22, x21, [sp, #64]
 234:	ldp	x24, x23, [sp, #48]
 238:	ldp	x26, x25, [sp, #32]
 23c:	ldp	x28, x27, [sp, #16]
 240:	ldp	x29, x30, [sp], #96
 244:	ret
 248:	and	x10, x28, #0xfffffffffffffffc
 24c:	add	x12, x27, x26, lsl #3
 250:	lsl	x13, x10, #3
 254:	and	x8, x28, #0x3
 258:	add	x11, x20, #0x10
 25c:	add	x9, x19, x13
 260:	add	x20, x20, x13
 264:	add	x12, x12, #0x10
 268:	mov	x13, x10
 26c:	ldp	q0, q1, [x11, #-16]
 270:	add	x11, x11, #0x20
 274:	subs	x13, x13, #0x4
 278:	stp	q0, q1, [x12, #-16]
 27c:	add	x12, x12, #0x20
 280:	b.ne	26c <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x26c>  // b.any
 284:	cmp	x28, x10
 288:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 28c:	b	114 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x24e                 	// #590
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x24f                 	// #591
 2ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14ShadowResolverD2Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14ShadowResolverD2Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #40]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #32]
  2c:	add	x8, x8, #0x1
  30:	str	x8, [x19, #32]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm11MapResolverD2Ev:

0000000000000000 <_ZN4llvm11MapResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, dd8 <_ZTVN4llvm11MapResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	ldr	x8, [x19, #24]
  2c:	add	x8, x8, #0x1
  30:	str	x8, [x19, #24]
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZNK4llvm6Record7getNameEv:

0000000000000000 <_ZNK4llvm6Record7getNameEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0]
   c:	cbz	x8, 28 <_ZNK4llvm6Record7getNameEv+0x28>
  10:	ldrb	w9, [x8, #8]
  14:	cmp	w9, #0x12
  18:	b.ne	48 <_ZNK4llvm6Record7getNameEv+0x48>  // b.any
  1c:	ldp	x0, x1, [x8, #24]
  20:	ldp	x29, x30, [sp], #16
  24:	ret
  28:	adrp	x0, 0 <_ZNK4llvm6Record7getNameEv>
  2c:	adrp	x1, 0 <_ZNK4llvm6Record7getNameEv>
  30:	adrp	x3, 0 <_ZNK4llvm6Record7getNameEv>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x69                  	// #105
  44:	bl	0 <__assert_fail>
  48:	adrp	x0, 0 <_ZNK4llvm6Record7getNameEv>
  4c:	adrp	x1, 0 <_ZNK4llvm6Record7getNameEv>
  50:	adrp	x3, 0 <_ZNK4llvm6Record7getNameEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x108                 	// #264
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE:

0000000000000000 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #112]
  14:	cbnz	x8, cc <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xcc>
  18:	ldr	w8, [x0, #96]
  1c:	ldr	x9, [x0, #88]
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x19, x0
  2c:	mov	x22, x1
  30:	cbz	w8, 54 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x54>
  34:	add	x10, x8, x8, lsl #1
  38:	lsl	x10, x10, #3
  3c:	mov	x11, x9
  40:	ldr	x12, [x11], #24
  44:	cmp	x12, x22
  48:	b.eq	ac <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xac>  // b.none
  4c:	subs	x10, x10, #0x18
  50:	b.ne	40 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x40>  // b.any
  54:	ldr	w10, [x19, #100]
  58:	cmp	w8, w10
  5c:	b.cs	94 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x94>  // b.hs, b.nlast
  60:	mov	w10, #0x18                  	// #24
  64:	madd	x8, x8, x10, x9
  68:	stp	x22, x21, [x8]
  6c:	str	x20, [x8, #16]
  70:	ldp	w8, w9, [x19, #96]
  74:	cmp	w8, w9
  78:	b.cs	ec <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xec>  // b.hs, b.nlast
  7c:	add	w8, w8, #0x1
  80:	str	w8, [x19, #96]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x58
  98:	mov	x1, xzr
  9c:	bl	0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  a0:	ldr	w8, [x19, #96]
  a4:	ldr	x9, [x19, #88]
  a8:	b	60 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x60>
  ac:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x630                 	// #1584
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x62f                 	// #1583
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, bc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xbc>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	dc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xdc>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	add	x0, x0, #0x30
  30:	str	q0, [sp]
  34:	str	xzr, [x1]
  38:	mov	x1, sp
  3c:	str	x8, [sp, #16]
  40:	bl	0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  44:	ldr	x20, [sp, #16]
  48:	mov	x19, x1
  4c:	cbz	x20, a8 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa8>
  50:	ldr	x0, [x20, #88]
  54:	add	x8, x20, #0x68
  58:	cmp	x0, x8
  5c:	b.eq	64 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x8, x20, #0x58
  6c:	cmp	x0, x8
  70:	b.eq	78 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	add	x8, x20, #0x48
  80:	cmp	x0, x8
  84:	b.eq	8c <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x20, #8]
  90:	add	x8, x20, #0x18
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x20
  a4:	bl	0 <_ZdlPv>
  a8:	tbz	w19, #0, fc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
  ac:	ldp	x20, x19, [sp, #48]
  b0:	ldp	x29, x30, [sp, #32]
  b4:	add	sp, sp, #0x40
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x6c7                 	// #1735
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #8]
  14:	bl	0 <_ZdlPv>
  18:	ldr	x8, [x19]
  1c:	add	x8, x8, #0x1
  20:	str	x8, [x19]
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret

Disassembly of section .text._ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE:

0000000000000000 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	ldr	x8, [x1]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	mov	x0, x1
  24:	ldr	x8, [x8, #88]
  28:	mov	x1, x2
  2c:	mov	x20, x2
  30:	blr	x8
  34:	adrp	x9, cd8 <_ZTVN4llvm9FieldInitE>
  38:	ldr	x9, [x9]
  3c:	mov	w8, #0x7                   	// #7
  40:	strh	w8, [x19, #8]
  44:	stp	x0, x21, [x19, #16]
  48:	add	x8, x9, #0x10
  4c:	str	x8, [x19]
  50:	str	x20, [x19, #32]
  54:	cbz	x0, 6c <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE+0x6c>
  58:	ldp	x20, x19, [sp, #64]
  5c:	ldr	x21, [sp, #48]
  60:	ldp	x29, x30, [sp, #32]
  64:	add	sp, sp, #0x50
  68:	ret
  6c:	bl	0 <_ZN4llvm4errsEv>
  70:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  74:	add	x1, x1, #0x0
  78:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  7c:	ldr	x9, [x19, #24]
  80:	mov	x20, x0
  84:	ldr	x8, [x9]
  88:	mov	x0, x9
  8c:	ldr	x10, [x8, #40]
  90:	mov	x8, sp
  94:	blr	x10
  98:	mov	x1, sp
  9c:	mov	x0, x20
  a0:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  a4:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  a8:	add	x1, x1, #0x0
  ac:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  b0:	ldr	x1, [x19, #32]
  b4:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  b8:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  bc:	add	x1, x1, #0x0
  c0:	bl	0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  c4:	mov	x0, sp
  c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev>
  cc:	adrp	x0, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  d0:	adrp	x1, 0 <_ZN4llvm9FieldInitC2EPNS_4InitEPNS_10StringInitE>
  d4:	add	x0, x0, #0x0
  d8:	add	x1, x1, #0x0
  dc:	mov	w2, #0x4f7                 	// #1271
  e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm11raw_ostreamlsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	ldp	x8, x2, [x1]
   4:	mov	x1, x8
   8:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	mov	x19, x0
  18:	mov	x0, x1
  1c:	mov	x20, sp
  20:	ldr	x9, [x8, #40]
  24:	mov	x8, sp
  28:	blr	x9
  2c:	ldp	x1, x2, [sp]
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	ldr	x0, [sp]
  3c:	add	x8, x20, #0x10
  40:	cmp	x0, x8
  44:	b.eq	4c <_ZN4llvmlsERNS_11raw_ostreamERKNS_4InitE+0x4c>  // b.none
  48:	bl	0 <_ZdlPv>
  4c:	mov	x0, x19
  50:	ldp	x20, x19, [sp, #48]
  54:	ldp	x29, x30, [sp, #32]
  58:	add	sp, sp, #0x40
  5c:	ret

Disassembly of section .text._ZN4llvm14RecordResolverD2Ev:

0000000000000000 <_ZN4llvm14RecordResolverD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, e08 <_ZTVN4llvm14RecordResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x48
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD2Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x8, [x19, #24]
  40:	add	x8, x8, #0x1
  44:	str	x8, [x19, #24]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret

Disassembly of section .text._ZNK4llvm9StringRef3strB5cxx11Ev:

0000000000000000 <_ZNK4llvm9StringRef3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #8]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 90 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x90>
  54:	cmp	x21, #0x1
  58:	b.ne	84 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x84>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	90 <_ZNK4llvm9StringRef3strB5cxx11Ev+0x90>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [x29, #24]
  94:	ldr	x9, [x19]
  98:	str	x8, [x19, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret

Disassembly of section .text._ZN4llvm5RecTyD0Ev:

0000000000000000 <_ZN4llvm5RecTyD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm8BitRecTyD0Ev:

0000000000000000 <_ZN4llvm8BitRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8BitRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6962                	// #26978
   4:	movk	w9, #0x74, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x3                   	// #3
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	ret

Disassembly of section .text._ZN4llvm9BitsRecTyD0Ev:

0000000000000000 <_ZN4llvm9BitsRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm9CodeRecTyD0Ev:

0000000000000000 <_ZN4llvm9CodeRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9CodeRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6f63                	// #28515
   4:	movk	w9, #0x6564, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x4                   	// #4
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	strb	wzr, [x8, #20]
  1c:	ret

Disassembly of section .text._ZN4llvm8IntRecTyD0Ev:

0000000000000000 <_ZN4llvm8IntRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8IntRecTy11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x6e69                	// #28265
   4:	movk	w9, #0x74, lsl #16
   8:	mov	x10, x8
   c:	mov	w11, #0x3                   	// #3
  10:	str	w9, [x10, #16]!
  14:	stp	x10, x11, [x8]
  18:	ret

Disassembly of section .text._ZN4llvm11StringRecTyD0Ev:

0000000000000000 <_ZN4llvm11StringRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm9ListRecTyD0Ev:

0000000000000000 <_ZN4llvm9ListRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm8DagRecTyD0Ev:

0000000000000000 <_ZN4llvm8DagRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11RecordRecTyD0Ev:

0000000000000000 <_ZN4llvm11RecordRecTyD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm4InitD0Ev:

0000000000000000 <_ZN4llvm4InitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZNK4llvm4Init10isCompleteEv:

0000000000000000 <_ZNK4llvm4Init10isCompleteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm4Init10isConcreteEv:

0000000000000000 <_ZNK4llvm4Init10isConcreteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm4Init19getAsUnquotedStringB5cxx11Ev>:
   0:	ldr	x9, [x0]
   4:	ldr	x1, [x9, #40]
   8:	br	x1

Disassembly of section .text._ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init26convertInitializerBitRangeENS_8ArrayRefIjEE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE:

0000000000000000 <_ZNK4llvm4Init20convertInitListSliceENS_8ArrayRefIjEE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE:

0000000000000000 <_ZNK4llvm4Init12getFieldTypeEPNS_10StringInitE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm4Init17resolveReferencesERNS_8ResolverE:

0000000000000000 <_ZNK4llvm4Init17resolveReferencesERNS_8ResolverE>:
   0:	ret

Disassembly of section .text._ZN4llvm9TypedInitD0Ev:

0000000000000000 <_ZN4llvm9TypedInitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm9UnsetInitD0Ev:

0000000000000000 <_ZN4llvm9UnsetInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9UnsetInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit10isConcreteEv:

0000000000000000 <_ZNK4llvm9UnsetInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9UnsetInit11getAsStringB5cxx11Ev>:
   0:	mov	w9, #0x3f                  	// #63
   4:	mov	x10, x8
   8:	mov	w11, #0x1                   	// #1
   c:	strh	w9, [x10, #16]!
  10:	stp	x10, x11, [x8]
  14:	ret

Disassembly of section .text._ZNK4llvm9UnsetInit6getBitEj:

0000000000000000 <_ZNK4llvm9UnsetInit6getBitEj>:
   0:	ret

Disassembly of section .text._ZN4llvm7BitInitD0Ev:

0000000000000000 <_ZN4llvm7BitInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7BitInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7BitInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7BitInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>:
   0:	ldrb	w9, [x0, #24]
   4:	adrp	x10, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   8:	adrp	x11, 0 <_ZNK4llvm7BitInit11getAsStringB5cxx11Ev>
   c:	add	x10, x10, #0x0
  10:	add	x11, x11, #0x0
  14:	cmp	w9, #0x0
  18:	csel	x9, x11, x10, eq  // eq = none
  1c:	ldrb	w9, [x9]
  20:	mov	x10, x8
  24:	mov	w11, #0x1                   	// #1
  28:	strb	w9, [x10, #16]!
  2c:	stp	x10, x11, [x8]
  30:	strb	wzr, [x8, #17]
  34:	ret

Disassembly of section .text._ZNK4llvm7BitInit6getBitEj:

0000000000000000 <_ZNK4llvm7BitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm7BitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm7BitInit6getBitEj>
  14:	adrp	x1, 0 <_ZNK4llvm7BitInit6getBitEj>
  18:	adrp	x3, 0 <_ZNK4llvm7BitInit6getBitEj>
  1c:	add	x0, x0, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x1f7                 	// #503
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8BitsInitD0Ev:

0000000000000000 <_ZN4llvm8BitsInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8BitsInit10isCompleteEv:

0000000000000000 <_ZNK4llvm8BitsInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #32]
  14:	cbz	w8, 50 <_ZNK4llvm8BitsInit10isCompleteEv+0x50>
  18:	mov	x19, x0
  1c:	mov	x20, xzr
  20:	add	x21, x0, #0x28
  24:	cmp	x20, w8, uxtw
  28:	b.cs	78 <_ZNK4llvm8BitsInit10isCompleteEv+0x78>  // b.hs, b.nlast
  2c:	ldr	x0, [x21, x20, lsl #3]
  30:	ldr	x8, [x0]
  34:	ldr	x8, [x8, #24]
  38:	blr	x8
  3c:	tbz	w0, #0, 64 <_ZNK4llvm8BitsInit10isCompleteEv+0x64>
  40:	ldr	w8, [x19, #32]
  44:	add	x20, x20, #0x1
  48:	cmp	x20, x8
  4c:	b.ne	24 <_ZNK4llvm8BitsInit10isCompleteEv+0x24>  // b.any
  50:	mov	w0, #0x1                   	// #1
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	ret
  64:	mov	w0, wzr
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldr	x21, [sp, #16]
  70:	ldp	x29, x30, [sp], #48
  74:	ret
  78:	adrp	x0, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  7c:	adrp	x1, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  80:	adrp	x3, 0 <_ZNK4llvm8BitsInit10isCompleteEv>
  84:	add	x0, x0, #0x0
  88:	add	x1, x1, #0x0
  8c:	add	x3, x3, #0x0
  90:	mov	w2, #0x22e                 	// #558
  94:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm7IntInitD0Ev:

0000000000000000 <_ZN4llvm7IntInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7IntInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7IntInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7IntInit6getBitEj:

0000000000000000 <_ZNK4llvm7IntInit6getBitEj>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  14:	add	x9, x9, #0x0
  18:	ldr	x8, [x0, #24]
  1c:	ldarb	w10, [x9]
  20:	mov	w9, #0x1                   	// #1
  24:	lsl	x9, x9, x1
  28:	tbz	w10, #0, 64 <_ZNK4llvm7IntInit6getBitEj+0x64>
  2c:	adrp	x10, 0 <_ZNK4llvm7IntInit6getBitEj>
  30:	add	x10, x10, #0x0
  34:	ldarb	w10, [x10]
  38:	and	x8, x8, x9
  3c:	tbz	w10, #0, c8 <_ZNK4llvm7IntInit6getBitEj+0xc8>
  40:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  44:	ldp	x20, x19, [sp, #32]
  48:	ldp	x29, x30, [sp, #16]
  4c:	add	x9, x9, #0x0
  50:	add	x10, x9, #0x20
  54:	cmp	x8, #0x0
  58:	csel	x0, x10, x9, eq  // eq = none
  5c:	add	sp, sp, #0x30
  60:	ret
  64:	adrp	x20, 0 <_ZNK4llvm7IntInit6getBitEj>
  68:	add	x20, x20, #0x0
  6c:	mov	x0, x20
  70:	str	x8, [sp, #8]
  74:	mov	x19, x9
  78:	bl	0 <__cxa_guard_acquire>
  7c:	ldr	x8, [sp, #8]
  80:	mov	x9, x19
  84:	cbz	w0, 2c <_ZNK4llvm7IntInit6getBitEj+0x2c>
  88:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  8c:	adrp	x10, 3f8 <_ZTVN4llvm7BitInitE>
  90:	ldr	x9, [x9]
  94:	ldr	x10, [x10]
  98:	mov	w8, #0x2                   	// #2
  9c:	mov	w11, #0x1                   	// #1
  a0:	strh	w8, [x20, #472]
  a4:	add	x8, x10, #0x10
  a8:	mov	x0, x20
  ac:	str	x9, [x20, #480]
  b0:	str	x8, [x20, #464]
  b4:	strb	w11, [x20, #488]
  b8:	bl	0 <__cxa_guard_release>
  bc:	ldr	x8, [sp, #8]
  c0:	mov	x9, x19
  c4:	b	2c <_ZNK4llvm7IntInit6getBitEj+0x2c>
  c8:	adrp	x19, 0 <_ZNK4llvm7IntInit6getBitEj>
  cc:	add	x19, x19, #0x0
  d0:	mov	x0, x19
  d4:	str	x8, [sp, #8]
  d8:	bl	0 <__cxa_guard_acquire>
  dc:	ldr	x8, [sp, #8]
  e0:	cbz	w0, 40 <_ZNK4llvm7IntInit6getBitEj+0x40>
  e4:	adrp	x9, 0 <_ZNK4llvm7IntInit6getBitEj>
  e8:	adrp	x10, 3f8 <_ZTVN4llvm7BitInitE>
  ec:	ldr	x9, [x9]
  f0:	ldr	x10, [x10]
  f4:	mov	w8, #0x2                   	// #2
  f8:	strh	w8, [x19, #496]
  fc:	mov	x0, x19
 100:	add	x8, x10, #0x10
 104:	str	x9, [x19, #504]
 108:	str	x8, [x19, #488]
 10c:	strb	wzr, [x19, #512]
 110:	bl	0 <__cxa_guard_release>
 114:	ldr	x8, [sp, #8]
 118:	b	40 <_ZNK4llvm7IntInit6getBitEj+0x40>

Disassembly of section .text._ZN4llvm10StringInitD0Ev:

0000000000000000 <_ZN4llvm10StringInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10StringInit10isConcreteEv:

0000000000000000 <_ZNK4llvm10StringInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm10StringInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #64]
   8:	str	x21, [sp, #80]
   c:	stp	x20, x19, [sp, #96]
  10:	add	x29, sp, #0x40
  14:	ldr	x20, [x0, #24]
  18:	mov	x19, x8
  1c:	cbz	x20, 70 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x70>
  20:	ldr	x21, [x0, #32]
  24:	mov	x8, sp
  28:	add	x0, x8, #0x10
  2c:	str	x0, [sp]
  30:	cmp	x21, #0x10
  34:	str	x21, [sp, #32]
  38:	b.cc	58 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x58>  // b.lo, b.ul, b.last
  3c:	mov	x0, sp
  40:	add	x1, sp, #0x20
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	ldr	x8, [sp, #32]
  50:	str	x0, [sp]
  54:	str	x8, [sp, #16]
  58:	cbz	x21, 90 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x90>
  5c:	cmp	x21, #0x1
  60:	b.ne	84 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x84>  // b.any
  64:	ldrb	w8, [x20]
  68:	strb	w8, [x0]
  6c:	b	90 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x90>
  70:	mov	x8, sp
  74:	add	x8, x8, #0x10
  78:	stp	x8, xzr, [sp]
  7c:	strb	wzr, [sp, #16]
  80:	b	a0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xa0>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #32]
  94:	ldr	x9, [sp]
  98:	str	x8, [sp, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	adrp	x3, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
  a4:	add	x3, x3, #0x0
  a8:	mov	x0, sp
  ac:	mov	w4, #0x1                   	// #1
  b0:	mov	x1, xzr
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  bc:	add	x8, sp, #0x20
  c0:	add	x20, x8, #0x10
  c4:	str	x20, [sp, #32]
  c8:	mov	x8, x0
  cc:	ldr	x9, [x8], #16
  d0:	cmp	x9, x8
  d4:	b.eq	e8 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xe8>  // b.none
  d8:	str	x9, [sp, #32]
  dc:	ldr	x9, [x0, #16]
  e0:	str	x9, [sp, #48]
  e4:	b	f0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0xf0>
  e8:	ldr	q0, [x9]
  ec:	str	q0, [x20]
  f0:	ldr	x9, [x0, #8]
  f4:	str	x9, [sp, #40]
  f8:	stp	x8, xzr, [x0]
  fc:	strb	wzr, [x0, #16]
 100:	ldr	x8, [sp, #40]
 104:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 108:	cmp	x8, x9
 10c:	b.eq	1a0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x1a0>  // b.none
 110:	adrp	x1, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 114:	add	x1, x1, #0x0
 118:	add	x0, sp, #0x20
 11c:	mov	w2, #0x1                   	// #1
 120:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 124:	add	x9, x19, #0x10
 128:	str	x9, [x19]
 12c:	mov	x8, x0
 130:	ldr	x10, [x8], #16
 134:	cmp	x10, x8
 138:	b.eq	14c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x14c>  // b.none
 13c:	str	x10, [x19]
 140:	ldr	x9, [x0, #16]
 144:	str	x9, [x19, #16]
 148:	b	154 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x154>
 14c:	ldr	q0, [x10]
 150:	str	q0, [x9]
 154:	ldr	x9, [x0, #8]
 158:	str	x9, [x19, #8]
 15c:	stp	x8, xzr, [x0]
 160:	strb	wzr, [x0, #16]
 164:	ldr	x0, [sp, #32]
 168:	cmp	x0, x20
 16c:	b.eq	174 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x174>  // b.none
 170:	bl	0 <_ZdlPv>
 174:	ldr	x0, [sp]
 178:	mov	x8, sp
 17c:	add	x8, x8, #0x10
 180:	cmp	x0, x8
 184:	b.eq	18c <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev+0x18c>  // b.none
 188:	bl	0 <_ZdlPv>
 18c:	ldp	x20, x19, [sp, #96]
 190:	ldr	x21, [sp, #80]
 194:	ldp	x29, x30, [sp, #64]
 198:	add	sp, sp, #0x70
 19c:	ret
 1a0:	adrp	x0, 0 <_ZNK4llvm10StringInit11getAsStringB5cxx11Ev>
 1a4:	add	x0, x0, #0x0
 1a8:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #24]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #32]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 90 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x90>
  54:	cmp	x21, #0x1
  58:	b.ne	84 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x84>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	90 <_ZNK4llvm10StringInit19getAsUnquotedStringB5cxx11Ev+0x90>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [x29, #24]
  94:	ldr	x9, [x19]
  98:	str	x8, [x19, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret

Disassembly of section .text._ZNK4llvm10StringInit6getBitEj:

0000000000000000 <_ZNK4llvm10StringInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm10StringInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm10StringInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x26c                 	// #620
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm4InitD2Ev:

0000000000000000 <_ZN4llvm4InitD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm8CodeInitD0Ev:

0000000000000000 <_ZN4llvm8CodeInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8CodeInit10isConcreteEv:

0000000000000000 <_ZNK4llvm8CodeInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8CodeInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #64]
   8:	str	x21, [sp, #80]
   c:	stp	x20, x19, [sp, #96]
  10:	add	x29, sp, #0x40
  14:	ldr	x20, [x0, #24]
  18:	mov	x19, x8
  1c:	cbz	x20, 70 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x70>
  20:	ldr	x21, [x0, #32]
  24:	mov	x8, sp
  28:	add	x0, x8, #0x10
  2c:	str	x0, [sp]
  30:	cmp	x21, #0x10
  34:	str	x21, [sp, #32]
  38:	b.cc	58 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x58>  // b.lo, b.ul, b.last
  3c:	mov	x0, sp
  40:	add	x1, sp, #0x20
  44:	mov	x2, xzr
  48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  4c:	ldr	x8, [sp, #32]
  50:	str	x0, [sp]
  54:	str	x8, [sp, #16]
  58:	cbz	x21, 90 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x90>
  5c:	cmp	x21, #0x1
  60:	b.ne	84 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x84>  // b.any
  64:	ldrb	w8, [x20]
  68:	strb	w8, [x0]
  6c:	b	90 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x90>
  70:	mov	x8, sp
  74:	add	x8, x8, #0x10
  78:	stp	x8, xzr, [sp]
  7c:	strb	wzr, [sp, #16]
  80:	b	a0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xa0>
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [sp, #32]
  94:	ldr	x9, [sp]
  98:	str	x8, [sp, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	adrp	x3, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
  a4:	add	x3, x3, #0x0
  a8:	mov	x0, sp
  ac:	mov	w4, #0x2                   	// #2
  b0:	mov	x1, xzr
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  bc:	add	x8, sp, #0x20
  c0:	add	x20, x8, #0x10
  c4:	str	x20, [sp, #32]
  c8:	mov	x8, x0
  cc:	ldr	x9, [x8], #16
  d0:	cmp	x9, x8
  d4:	b.eq	e8 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xe8>  // b.none
  d8:	str	x9, [sp, #32]
  dc:	ldr	x9, [x0, #16]
  e0:	str	x9, [sp, #48]
  e4:	b	f0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0xf0>
  e8:	ldr	q0, [x9]
  ec:	str	q0, [x20]
  f0:	ldr	x9, [x0, #8]
  f4:	str	x9, [sp, #40]
  f8:	stp	x8, xzr, [x0]
  fc:	strb	wzr, [x0, #16]
 100:	ldr	x8, [sp, #40]
 104:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
 108:	orr	x8, x8, #0x1
 10c:	cmp	x8, x9
 110:	b.eq	1a4 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x1a4>  // b.none
 114:	adrp	x1, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 118:	add	x1, x1, #0x0
 11c:	add	x0, sp, #0x20
 120:	mov	w2, #0x2                   	// #2
 124:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 128:	add	x9, x19, #0x10
 12c:	str	x9, [x19]
 130:	mov	x8, x0
 134:	ldr	x10, [x8], #16
 138:	cmp	x10, x8
 13c:	b.eq	150 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x150>  // b.none
 140:	str	x10, [x19]
 144:	ldr	x9, [x0, #16]
 148:	str	x9, [x19, #16]
 14c:	b	158 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x158>
 150:	ldr	q0, [x10]
 154:	str	q0, [x9]
 158:	ldr	x9, [x0, #8]
 15c:	str	x9, [x19, #8]
 160:	stp	x8, xzr, [x0]
 164:	strb	wzr, [x0, #16]
 168:	ldr	x0, [sp, #32]
 16c:	cmp	x0, x20
 170:	b.eq	178 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x178>  // b.none
 174:	bl	0 <_ZdlPv>
 178:	ldr	x0, [sp]
 17c:	mov	x8, sp
 180:	add	x8, x8, #0x10
 184:	cmp	x0, x8
 188:	b.eq	190 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev+0x190>  // b.none
 18c:	bl	0 <_ZdlPv>
 190:	ldp	x20, x19, [sp, #96]
 194:	ldr	x21, [sp, #80]
 198:	ldp	x29, x30, [sp, #64]
 19c:	add	sp, sp, #0x70
 1a0:	ret
 1a4:	adrp	x0, 0 <_ZNK4llvm8CodeInit11getAsStringB5cxx11Ev>
 1a8:	add	x0, x0, #0x0
 1ac:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0, #24]
  14:	mov	x19, x8
  18:	cbz	x20, 68 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x68>
  1c:	ldr	x21, [x0, #32]
  20:	add	x0, x19, #0x10
  24:	str	x0, [x19]
  28:	cmp	x21, #0x10
  2c:	str	x21, [x29, #24]
  30:	b.cc	50 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x50>  // b.lo, b.ul, b.last
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	ldr	x8, [x29, #24]
  48:	str	x0, [x19]
  4c:	str	x8, [x19, #16]
  50:	cbz	x21, 90 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x90>
  54:	cmp	x21, #0x1
  58:	b.ne	84 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x84>  // b.any
  5c:	ldrb	w8, [x20]
  60:	strb	w8, [x0]
  64:	b	90 <_ZNK4llvm8CodeInit19getAsUnquotedStringB5cxx11Ev+0x90>
  68:	mov	x8, x19
  6c:	strb	wzr, [x8, #16]!
  70:	stp	x8, xzr, [x19]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	mov	x1, x20
  88:	mov	x2, x21
  8c:	bl	0 <memcpy>
  90:	ldr	x8, [x29, #24]
  94:	ldr	x9, [x19]
  98:	str	x8, [x19, #8]
  9c:	strb	wzr, [x9, x8]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldr	x21, [sp, #16]
  a8:	ldp	x29, x30, [sp], #48
  ac:	ret

Disassembly of section .text._ZNK4llvm8CodeInit6getBitEj:

0000000000000000 <_ZNK4llvm8CodeInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm8CodeInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm8CodeInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x28f                 	// #655
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm8ListInitD0Ev:

0000000000000000 <_ZN4llvm8ListInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8ListInit6getBitEj:

0000000000000000 <_ZNK4llvm8ListInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm8ListInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm8ListInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x2d1                 	// #721
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm6OpInitD0Ev:

0000000000000000 <_ZN4llvm6OpInitD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm8UnOpInitD0Ev:

0000000000000000 <_ZN4llvm8UnOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x1
   c:	b.ne	24 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x24>  // b.any
  10:	ldr	x1, [x1]
  14:	ldr	x2, [x0, #16]
  18:	ldrb	w0, [x0, #9]
  1c:	ldp	x29, x30, [sp], #16
  20:	b	3bf0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
  24:	adrp	x0, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  28:	adrp	x1, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x3, 0 <_ZNK4llvm8UnOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x309                 	// #777
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm8UnOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm8UnOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm8UnOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm8UnOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbnz	w1, 18 <_ZNK4llvm8UnOpInit10getOperandEj+0x18>
   c:	ldr	x0, [x0, #32]
  10:	ldp	x29, x30, [sp], #16
  14:	ret
  18:	adrp	x0, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  1c:	adrp	x1, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  20:	adrp	x3, 0 <_ZNK4llvm8UnOpInit10getOperandEj>
  24:	add	x0, x0, #0x0
  28:	add	x1, x1, #0x0
  2c:	add	x3, x3, #0x0
  30:	mov	w2, #0x310                 	// #784
  34:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9BinOpInitD0Ev:

0000000000000000 <_ZN4llvm9BinOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x2
   c:	b.ne	28 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x28>  // b.any
  10:	ldp	x8, x2, [x1]
  14:	ldr	x3, [x0, #16]
  18:	ldrb	w0, [x0, #9]
  1c:	mov	x1, x8
  20:	ldp	x29, x30, [sp], #16
  24:	b	4a98 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
  28:	adrp	x0, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  2c:	adrp	x1, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	adrp	x3, 0 <_ZNK4llvm9BinOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  34:	add	x0, x0, #0x0
  38:	add	x1, x1, #0x0
  3c:	add	x3, x3, #0x0
  40:	mov	w2, #0x340                 	// #832
  44:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BinOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm9BinOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x2                   	// #2
   4:	ret

Disassembly of section .text._ZNK4llvm9BinOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm9BinOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, 24 <_ZNK4llvm9BinOpInit10getOperandEj+0x24>
   c:	cmp	w1, #0x1
  10:	b.ne	34 <_ZNK4llvm9BinOpInit10getOperandEj+0x34>  // b.any
  14:	add	x8, x0, #0x28
  18:	ldr	x0, [x8]
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	add	x8, x0, #0x20
  28:	ldr	x0, [x8]
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	adrp	x0, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  38:	adrp	x1, 0 <_ZNK4llvm9BinOpInit10getOperandEj>
  3c:	add	x0, x0, #0x0
  40:	add	x1, x1, #0x0
  44:	mov	w2, #0x347                 	// #839
  48:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm10TernOpInitD0Ev:

0000000000000000 <_ZN4llvm10TernOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10TernOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10TernOpInit10isCompleteEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #32]
  14:	ldr	x8, [x0]
  18:	ldr	x8, [x8, #24]
  1c:	blr	x8
  20:	tbz	w0, #0, 50 <_ZNK4llvm10TernOpInit10isCompleteEv+0x50>
  24:	ldr	x0, [x19, #40]
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #24]
  30:	blr	x8
  34:	tbz	w0, #0, 50 <_ZNK4llvm10TernOpInit10isCompleteEv+0x50>
  38:	ldr	x0, [x19, #48]
  3c:	ldr	x19, [sp, #16]
  40:	ldr	x8, [x0]
  44:	ldr	x1, [x8, #24]
  48:	ldp	x29, x30, [sp], #32
  4c:	br	x1
  50:	ldr	x19, [sp, #16]
  54:	mov	w0, wzr
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE:

0000000000000000 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmp	x2, #0x3
   c:	b.ne	2c <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE+0x2c>  // b.any
  10:	ldp	x8, x2, [x1]
  14:	ldr	x3, [x1, #16]
  18:	ldr	x4, [x0, #16]
  1c:	ldrb	w0, [x0, #9]
  20:	mov	x1, x8
  24:	ldp	x29, x30, [sp], #16
  28:	b	6a44 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
  2c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  30:	adrp	x1, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  34:	adrp	x3, 0 <_ZNK4llvm10TernOpInit5cloneENS_8ArrayRefIPNS_4InitEEE>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x377                 	// #887
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10TernOpInit14getNumOperandsEv:

0000000000000000 <_ZNK4llvm10TernOpInit14getNumOperandsEv>:
   0:	mov	w0, #0x3                   	// #3
   4:	ret

Disassembly of section .text._ZNK4llvm10TernOpInit10getOperandEj:

0000000000000000 <_ZNK4llvm10TernOpInit10getOperandEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cbz	w1, 3c <_ZNK4llvm10TernOpInit10getOperandEj+0x3c>
   c:	cmp	w1, #0x1
  10:	b.eq	2c <_ZNK4llvm10TernOpInit10getOperandEj+0x2c>  // b.none
  14:	cmp	w1, #0x2
  18:	b.ne	4c <_ZNK4llvm10TernOpInit10getOperandEj+0x4c>  // b.any
  1c:	add	x8, x0, #0x30
  20:	ldr	x0, [x8]
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	add	x8, x0, #0x28
  30:	ldr	x0, [x8]
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	add	x8, x0, #0x20
  40:	ldr	x0, [x8]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	adrp	x0, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  50:	adrp	x1, 0 <_ZNK4llvm10TernOpInit10getOperandEj>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	mov	w2, #0x37f                 	// #895
  60:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm10CondOpInitD0Ev:

0000000000000000 <_ZN4llvm10CondOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10FoldOpInitD0Ev:

0000000000000000 <_ZN4llvm10FoldOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10FoldOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm10FoldOpInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm9IsAOpInitD0Ev:

0000000000000000 <_ZN4llvm9IsAOpInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9IsAOpInit10isCompleteEv:

0000000000000000 <_ZNK4llvm9IsAOpInit10isCompleteEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm7VarInitD0Ev:

0000000000000000 <_ZN4llvm7VarInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7VarInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x9, [x0, #24]
  14:	cbz	x9, bc <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0xbc>
  18:	mov	x19, x8
  1c:	ldrb	w8, [x9, #8]
  20:	cmp	w8, #0x12
  24:	b.ne	dc <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0xdc>  // b.any
  28:	ldp	x20, x21, [x9, #24]
  2c:	add	x0, x19, #0x10
  30:	str	x0, [x19]
  34:	cbz	x20, 78 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x78>
  38:	cmp	x21, #0x10
  3c:	str	x21, [x29, #24]
  40:	b.cc	60 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x60>  // b.lo, b.ul, b.last
  44:	add	x1, x29, #0x18
  48:	mov	x0, x19
  4c:	mov	x2, xzr
  50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  54:	ldr	x8, [x29, #24]
  58:	str	x0, [x19]
  5c:	str	x8, [x19, #16]
  60:	cbz	x21, 9c <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x9c>
  64:	cmp	x21, #0x1
  68:	b.ne	90 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x90>  // b.any
  6c:	ldrb	w8, [x20]
  70:	strb	w8, [x0]
  74:	b	9c <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev+0x9c>
  78:	str	xzr, [x19, #8]
  7c:	strb	wzr, [x19, #16]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret
  90:	mov	x1, x20
  94:	mov	x2, x21
  98:	bl	0 <memcpy>
  9c:	ldr	x8, [x29, #24]
  a0:	ldr	x9, [x19]
  a4:	str	x8, [x19, #8]
  a8:	strb	wzr, [x9, x8]
  ac:	ldp	x20, x19, [sp, #32]
  b0:	ldr	x21, [sp, #16]
  b4:	ldp	x29, x30, [sp], #48
  b8:	ret
  bc:	adrp	x0, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  c0:	adrp	x1, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  c4:	adrp	x3, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  e0:	adrp	x1, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  e4:	adrp	x3, 0 <_ZNK4llvm7VarInit11getAsStringB5cxx11Ev>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10VarBitInitD0Ev:

0000000000000000 <_ZN4llvm10VarBitInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10VarBitInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarBitInit6getBitEj>:
   0:	cbnz	w1, 8 <_ZNK4llvm10VarBitInit6getBitEj+0x8>
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	adrp	x0, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  14:	adrp	x1, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  18:	adrp	x3, 0 <_ZNK4llvm10VarBitInit6getBitEj>
  1c:	add	x0, x0, #0x0
  20:	add	x1, x1, #0x0
  24:	add	x3, x3, #0x0
  28:	mov	w2, #0x46f                 	// #1135
  2c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm18VarListElementInitD0Ev:

0000000000000000 <_ZN4llvm18VarListElementInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm10VarDefInitD0Ev:

0000000000000000 <_ZN4llvm10VarDefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm10VarDefInit6getBitEj:

0000000000000000 <_ZNK4llvm10VarDefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm10VarDefInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm10VarDefInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x4e7                 	// #1255
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm9FieldInitD0Ev:

0000000000000000 <_ZN4llvm9FieldInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm9FieldInit11getAsStringB5cxx11Ev:

0000000000000000 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #96]
   8:	str	x23, [sp, #112]
   c:	stp	x22, x21, [sp, #128]
  10:	stp	x20, x19, [sp, #144]
  14:	add	x29, sp, #0x60
  18:	mov	x20, x0
  1c:	ldr	x0, [x0, #24]
  20:	mov	x19, x8
  24:	add	x8, sp, #0x20
  28:	ldr	x9, [x0]
  2c:	ldr	x9, [x9, #40]
  30:	blr	x9
  34:	ldr	x8, [sp, #40]
  38:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  3c:	cmp	x8, x9
  40:	b.eq	210 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x210>  // b.none
  44:	adrp	x1, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
  48:	add	x1, x1, #0x0
  4c:	add	x0, sp, #0x20
  50:	mov	w2, #0x1                   	// #1
  54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  58:	sub	x8, x29, #0x20
  5c:	add	x22, x8, #0x10
  60:	stur	x22, [x29, #-32]
  64:	mov	x8, x0
  68:	ldr	x9, [x8], #16
  6c:	cmp	x9, x8
  70:	b.eq	84 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x84>  // b.none
  74:	stur	x9, [x29, #-32]
  78:	ldr	x9, [x0, #16]
  7c:	stur	x9, [x29, #-16]
  80:	b	8c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x8c>
  84:	ldr	q0, [x9]
  88:	str	q0, [x22]
  8c:	ldr	x9, [x0, #8]
  90:	stur	x9, [x29, #-24]
  94:	stp	x8, xzr, [x0]
  98:	strb	wzr, [x0, #16]
  9c:	ldr	x8, [x20, #32]
  a0:	ldp	x20, x21, [x8, #24]
  a4:	mov	x8, sp
  a8:	add	x23, x8, #0x10
  ac:	str	x23, [sp]
  b0:	cbz	x20, f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xf8>
  b4:	cmp	x21, #0x10
  b8:	mov	x0, x23
  bc:	str	x21, [x29, #24]
  c0:	b.cc	e0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0xe0>  // b.lo, b.ul, b.last
  c4:	mov	x0, sp
  c8:	add	x1, x29, #0x18
  cc:	mov	x2, xzr
  d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  d4:	ldr	x8, [x29, #24]
  d8:	str	x0, [sp]
  dc:	str	x8, [sp, #16]
  e0:	cbz	x21, 118 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x118>
  e4:	cmp	x21, #0x1
  e8:	b.ne	10c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x10c>  // b.any
  ec:	ldrb	w8, [x20]
  f0:	strb	w8, [x0]
  f4:	b	118 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x118>
  f8:	mov	x2, xzr
  fc:	str	xzr, [sp, #8]
 100:	strb	wzr, [sp, #16]
 104:	mov	x1, x23
 108:	b	12c <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x12c>
 10c:	mov	x1, x20
 110:	mov	x2, x21
 114:	bl	0 <memcpy>
 118:	ldr	x8, [x29, #24]
 11c:	ldr	x9, [sp]
 120:	str	x8, [sp, #8]
 124:	strb	wzr, [x9, x8]
 128:	ldp	x1, x2, [sp]
 12c:	ldp	x3, x4, [x29, #-32]
 130:	ldur	x9, [x29, #-16]
 134:	mov	w10, #0xf                   	// #15
 138:	cmp	x3, x22
 13c:	add	x8, x2, x4
 140:	csel	x9, x10, x9, eq  // eq = none
 144:	cmp	x8, x9
 148:	b.ls	164 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x164>  // b.plast
 14c:	ldr	x9, [sp, #16]
 150:	cmp	x1, x23
 154:	mov	w10, #0xf                   	// #15
 158:	csel	x9, x10, x9, eq  // eq = none
 15c:	cmp	x8, x9
 160:	b.ls	170 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x170>  // b.plast
 164:	sub	x0, x29, #0x20
 168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
 16c:	b	180 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x180>
 170:	mov	x0, sp
 174:	mov	x1, xzr
 178:	mov	x2, xzr
 17c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 180:	add	x9, x19, #0x10
 184:	str	x9, [x19]
 188:	mov	x8, x0
 18c:	ldr	x10, [x8], #16
 190:	cmp	x10, x8
 194:	b.eq	1a8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1a8>  // b.none
 198:	str	x10, [x19]
 19c:	ldr	x9, [x0, #16]
 1a0:	str	x9, [x19, #16]
 1a4:	b	1b0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1b0>
 1a8:	ldr	q0, [x10]
 1ac:	str	q0, [x9]
 1b0:	ldr	x9, [x0, #8]
 1b4:	str	x9, [x19, #8]
 1b8:	stp	x8, xzr, [x0]
 1bc:	strb	wzr, [x0, #16]
 1c0:	ldr	x0, [sp]
 1c4:	cmp	x0, x23
 1c8:	b.eq	1d0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1d0>  // b.none
 1cc:	bl	0 <_ZdlPv>
 1d0:	ldur	x0, [x29, #-32]
 1d4:	cmp	x0, x22
 1d8:	b.eq	1e0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1e0>  // b.none
 1dc:	bl	0 <_ZdlPv>
 1e0:	ldr	x0, [sp, #32]
 1e4:	add	x8, sp, #0x20
 1e8:	add	x8, x8, #0x10
 1ec:	cmp	x0, x8
 1f0:	b.eq	1f8 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev+0x1f8>  // b.none
 1f4:	bl	0 <_ZdlPv>
 1f8:	ldp	x20, x19, [sp, #144]
 1fc:	ldp	x22, x21, [sp, #128]
 200:	ldr	x23, [sp, #112]
 204:	ldp	x29, x30, [sp, #96]
 208:	add	sp, sp, #0xa0
 20c:	ret
 210:	adrp	x0, 0 <_ZNK4llvm9FieldInit11getAsStringB5cxx11Ev>
 214:	add	x0, x0, #0x0
 218:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm7DagInitD0Ev:

0000000000000000 <_ZN4llvm7DagInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7DagInit6getBitEj:

0000000000000000 <_ZNK4llvm7DagInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm7DagInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm7DagInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x56b                 	// #1387
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm11MapResolverD0Ev:

0000000000000000 <_ZN4llvm11MapResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, dd8 <_ZTVN4llvm11MapResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #32]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm8Resolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm8Resolver13keepUnsetBitsEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm14RecordResolverD0Ev:

0000000000000000 <_ZN4llvm14RecordResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, e08 <_ZTVN4llvm14RecordResolverE>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #56]
  18:	ldr	x8, [x8]
  1c:	add	x9, x19, #0x48
  20:	cmp	x0, x9
  24:	add	x8, x8, #0x10
  28:	str	x8, [x19]
  2c:	b.eq	34 <_ZN4llvm14RecordResolverD0Ev+0x34>  // b.none
  30:	bl	0 <free>
  34:	ldr	x0, [x19, #32]
  38:	bl	0 <_ZdlPv>
  3c:	mov	x0, x19
  40:	ldr	x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm14RecordResolver13keepUnsetBitsEv:

0000000000000000 <_ZNK4llvm14RecordResolver13keepUnsetBitsEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm23TrackUnresolvedResolverD0Ev:

0000000000000000 <_ZN4llvm23TrackUnresolvedResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm20HasReferenceResolverD0Ev:

0000000000000000 <_ZN4llvm20HasReferenceResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm7DefInitD0Ev:

0000000000000000 <_ZN4llvm7DefInitD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK4llvm7DefInit10isConcreteEv:

0000000000000000 <_ZNK4llvm7DefInit10isConcreteEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZNK4llvm7DefInit6getBitEj:

0000000000000000 <_ZNK4llvm7DefInit6getBitEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <_ZNK4llvm7DefInit6getBitEj>
   c:	adrp	x1, 0 <_ZNK4llvm7DefInit6getBitEj>
  10:	add	x0, x0, #0x0
  14:	add	x1, x1, #0x0
  18:	mov	w2, #0x4b3                 	// #1203
  1c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	stp	x28, x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldr	x27, [x0]
  20:	ldr	w8, [x0, #8]
  24:	mov	x21, x3
  28:	mov	x20, x2
  2c:	sub	x10, x1, x27
  30:	add	x9, x27, x8, lsl #3
  34:	mov	x23, x0
  38:	cmp	x9, x1
  3c:	asr	x26, x10, #3
  40:	b.eq	12c <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x12c>  // b.none
  44:	cmp	x27, x1
  48:	b.hi	2b0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2b0>  // b.pmore
  4c:	cmp	x9, x1
  50:	b.cc	2d0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x2d0>  // b.lo, b.ul, b.last
  54:	ldr	w9, [x23, #12]
  58:	sub	x24, x21, x20
  5c:	asr	x22, x24, #3
  60:	add	x2, x22, x8
  64:	cmp	x2, x9
  68:	b.ls	84 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x84>  // b.plast
  6c:	add	x1, x23, #0x10
  70:	mov	w3, #0x8                   	// #8
  74:	mov	x0, x23
  78:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  7c:	ldr	x27, [x23]
  80:	ldr	w8, [x23, #8]
  84:	add	x19, x27, x26, lsl #3
  88:	add	x0, x27, x8, lsl #3
  8c:	sub	x25, x0, x19
  90:	asr	x28, x25, #3
  94:	cmp	x28, x22
  98:	b.cs	198 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x198>  // b.hs, b.nlast
  9c:	ldr	w10, [x23, #12]
  a0:	add	x9, x22, x8
  a4:	cmp	x9, x10
  a8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
  ac:	cmp	x26, x8
  b0:	str	w9, [x23, #8]
  b4:	b.eq	d4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0xd4>  // b.none
  b8:	add	x8, x27, w9, uxtw #3
  bc:	mov	x22, x0
  c0:	sub	x0, x8, x28, lsl #3
  c4:	mov	x1, x19
  c8:	mov	x2, x25
  cc:	bl	0 <memcpy>
  d0:	mov	x0, x22
  d4:	cbz	x25, 114 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
  d8:	cmp	x28, #0x3
  dc:	b.ls	fc <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0xfc>  // b.plast
  e0:	add	x8, x20, x28, lsl #3
  e4:	cmp	x19, x8
  e8:	b.cs	248 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.hs, b.nlast
  ec:	add	x8, x28, x26
  f0:	add	x8, x27, x8, lsl #3
  f4:	cmp	x8, x20
  f8:	b.ls	248 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x248>  // b.plast
  fc:	mov	x9, x19
 100:	mov	x8, x28
 104:	ldr	x10, [x20], #8
 108:	subs	x8, x8, #0x1
 10c:	str	x10, [x9], #8
 110:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 114:	cmp	x20, x21
 118:	b.eq	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>  // b.none
 11c:	sub	x2, x21, x20
 120:	mov	x1, x20
 124:	bl	0 <memcpy>
 128:	b	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 12c:	ldr	w9, [x23, #12]
 130:	sub	x19, x21, x20
 134:	asr	x22, x19, #3
 138:	sub	x9, x9, x8
 13c:	cmp	x22, x9
 140:	b.ls	158 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x158>  // b.plast
 144:	add	x2, x22, x8
 148:	add	x1, x23, #0x10
 14c:	mov	w3, #0x8                   	// #8
 150:	mov	x0, x23
 154:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 158:	cmp	x20, x21
 15c:	b.eq	178 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x178>  // b.none
 160:	ldr	x8, [x23]
 164:	ldr	w9, [x23, #8]
 168:	mov	x1, x20
 16c:	mov	x2, x19
 170:	add	x0, x8, x9, lsl #3
 174:	bl	0 <memcpy>
 178:	ldp	w8, w9, [x23, #8]
 17c:	add	x8, x22, x8
 180:	cmp	x8, x9
 184:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 188:	ldr	x9, [x23]
 18c:	str	w8, [x23, #8]
 190:	add	x19, x9, x26, lsl #3
 194:	b	228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 198:	ldr	w9, [x23, #12]
 19c:	sub	x9, x9, x8
 1a0:	cmp	x22, x9
 1a4:	b.ls	1c4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1c4>  // b.plast
 1a8:	add	x2, x22, x8
 1ac:	add	x1, x23, #0x10
 1b0:	mov	w3, #0x8                   	// #8
 1b4:	mov	x21, x0
 1b8:	mov	x0, x23
 1bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 1c0:	mov	x0, x21
 1c4:	sub	x21, x0, x22, lsl #3
 1c8:	cbz	x24, 1ec <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x1ec>
 1cc:	ldr	x8, [x23]
 1d0:	ldr	w9, [x23, #8]
 1d4:	mov	x25, x0
 1d8:	mov	x1, x21
 1dc:	mov	x2, x24
 1e0:	add	x0, x8, x9, lsl #3
 1e4:	bl	0 <memmove>
 1e8:	mov	x0, x25
 1ec:	ldp	w8, w9, [x23, #8]
 1f0:	add	x8, x22, x8
 1f4:	cmp	x8, x9
 1f8:	b.hi	290 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x290>  // b.pmore
 1fc:	subs	x2, x21, x19
 200:	str	w8, [x23, #8]
 204:	b.eq	214 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x214>  // b.none
 208:	sub	x0, x0, x2
 20c:	mov	x1, x19
 210:	bl	0 <memmove>
 214:	cbz	x24, 228 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x228>
 218:	mov	x0, x19
 21c:	mov	x1, x20
 220:	mov	x2, x24
 224:	bl	0 <memmove>
 228:	mov	x0, x19
 22c:	ldp	x20, x19, [sp, #80]
 230:	ldp	x22, x21, [sp, #64]
 234:	ldp	x24, x23, [sp, #48]
 238:	ldp	x26, x25, [sp, #32]
 23c:	ldp	x28, x27, [sp, #16]
 240:	ldp	x29, x30, [sp], #96
 244:	ret
 248:	and	x10, x28, #0xfffffffffffffffc
 24c:	add	x12, x27, x26, lsl #3
 250:	lsl	x13, x10, #3
 254:	and	x8, x28, #0x3
 258:	add	x11, x20, #0x10
 25c:	add	x9, x19, x13
 260:	add	x20, x20, x13
 264:	add	x12, x12, #0x10
 268:	mov	x13, x10
 26c:	ldp	q0, q1, [x11, #-16]
 270:	add	x11, x11, #0x20
 274:	subs	x13, x13, #0x4
 278:	stp	q0, q1, [x12, #-16]
 27c:	add	x12, x12, #0x20
 280:	b.ne	26c <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x26c>  // b.any
 284:	cmp	x28, x10
 288:	b.ne	104 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x104>  // b.any
 28c:	b	114 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_+0x114>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x24e                 	// #590
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEE6insertIPKS2_vEEPS2_S7_T_S8_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x24f                 	// #591
 2ec:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 3c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x3c>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  28:	ldr	x21, [x20, #16]
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	mov	x20, x21
  38:	cbnz	x21, 1c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x1c>
  3c:	ldp	x20, x19, [sp, #32]
  40:	ldr	x21, [sp, #16]
  44:	ldp	x29, x30, [sp], #48
  48:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm14ShadowResolverD0Ev:

0000000000000000 <_ZN4llvm14ShadowResolverD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14ShadowResolverD0Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #40]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	bl	0 <_ZdlPv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm14ShadowResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #56]
   c:	cbz	w9, 70 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x70>
  10:	orr	x8, x1, #0x8
  14:	cmn	x8, #0x8
  18:	b.eq	84 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x84>  // b.none
  1c:	ldr	x8, [x0, #40]
  20:	ubfx	x10, x1, #4, #28
  24:	eor	w10, w10, w1, lsr #9
  28:	sub	w9, w9, #0x1
  2c:	and	w10, w9, w10
  30:	ldr	x11, [x8, w10, uxtw #3]
  34:	cmp	x11, x1
  38:	b.ne	48 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x48>  // b.any
  3c:	mov	x0, xzr
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	mov	w12, #0x1                   	// #1
  4c:	cmn	x11, #0x8
  50:	b.eq	70 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x70>  // b.none
  54:	add	w10, w10, w12
  58:	and	w10, w10, w9
  5c:	ldr	x11, [x8, w10, uxtw #3]
  60:	add	w12, w12, #0x1
  64:	cmp	x11, x1
  68:	b.eq	3c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x3c>  // b.none
  6c:	b	4c <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE+0x4c>
  70:	ldr	x0, [x0, #24]
  74:	ldr	x8, [x0]
  78:	ldr	x2, [x8, #16]
  7c:	ldp	x29, x30, [sp], #16
  80:	br	x2
  84:	adrp	x0, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  88:	adrp	x1, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  8c:	adrp	x3, 0 <_ZN4llvm14ShadowResolver7resolveEPNS_4InitE>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x252                 	// #594
  a0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ResolverD2Ev:

0000000000000000 <_ZN4llvm8ResolverD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #3
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #3
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #3
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #3
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #3
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #3
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	110 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x110>  // b.any
  98:	cbz	w8, 100 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x100>
  9c:	lsl	x8, x8, #3
  a0:	sub	x9, x8, #0x8
  a4:	cmp	x9, #0x18
  a8:	b.cs	b4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb4>  // b.hs, b.nlast
  ac:	mov	x9, x0
  b0:	b	ec <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xec>
  b4:	lsr	x9, x9, #3
  b8:	add	x11, x9, #0x1
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	and	x12, x11, #0x3ffffffffffffffc
  c4:	add	x10, x0, #0x10
  c8:	add	x9, x0, x12, lsl #3
  cc:	dup	v0.2d, x13
  d0:	mov	x13, x12
  d4:	stp	q0, q0, [x10, #-16]
  d8:	subs	x13, x13, #0x4
  dc:	add	x10, x10, #0x20
  e0:	b.ne	d4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xd4>  // b.any
  e4:	cmp	x11, x12
  e8:	b.eq	100 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x100>  // b.none
  ec:	add	x8, x0, x8
  f0:	mov	x10, #0xfffffffffffffff8    	// #-8
  f4:	str	x10, [x9], #8
  f8:	cmp	x8, x9
  fc:	b.ne	f4 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf4>  // b.any
 100:	ldp	x20, x19, [sp, #32]
 104:	ldr	x21, [sp, #16]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret
 110:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 114:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 118:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 11c:	add	x0, x0, #0x0
 120:	add	x1, x1, #0x0
 124:	add	x3, x3, #0x0
 128:	mov	w2, #0x15c                 	// #348
 12c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x170>  // b.any
  1c:	cbz	w9, 84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x84>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x10, x9, #3
  28:	sub	x11, x10, #0x8
  2c:	cmp	x11, #0x18
  30:	mov	x10, x8
  34:	b.cc	70 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x70>  // b.lo, b.ul, b.last
  38:	lsr	x10, x11, #3
  3c:	add	x12, x10, #0x1
  40:	mov	x14, #0xfffffffffffffff8    	// #-8
  44:	and	x13, x12, #0x3ffffffffffffffc
  48:	add	x11, x8, #0x10
  4c:	add	x10, x8, x13, lsl #3
  50:	dup	v0.2d, x14
  54:	mov	x14, x13
  58:	stp	q0, q0, [x11, #-16]
  5c:	subs	x14, x14, #0x4
  60:	add	x11, x11, #0x20
  64:	b.ne	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x58>  // b.any
  68:	cmp	x12, x13
  6c:	b.eq	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x84>  // b.none
  70:	add	x8, x8, x9, lsl #3
  74:	mov	x11, #0xfffffffffffffff8    	// #-8
  78:	str	x11, [x10], #8
  7c:	cmp	x8, x10
  80:	b.ne	78 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.any
  84:	cmp	x1, x2
  88:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>  // b.none
  8c:	cbz	w9, a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>
  90:	mov	w8, wzr
  94:	sub	w9, w9, #0x1
  98:	mov	x10, #0xfffffffffffffff0    	// #-16
  9c:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xe4>
  a0:	ldr	x8, [x1]
  a4:	orr	x8, x8, #0x8
  a8:	cmn	x8, #0x8
  ac:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x16c>  // b.any
  b0:	add	x1, x1, #0x8
  b4:	cmp	x2, x1
  b8:	b.ne	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xa0>  // b.any
  bc:	ldp	x29, x30, [sp], #16
  c0:	ret
  c4:	cmp	x15, #0x0
  c8:	add	w8, w8, #0x1
  cc:	csel	x12, x13, x15, eq  // eq = none
  d0:	str	x11, [x12]
  d4:	str	w8, [x0, #16]
  d8:	add	x1, x1, #0x8
  dc:	cmp	x1, x2
  e0:	b.eq	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xbc>  // b.none
  e4:	ldr	x11, [x1]
  e8:	orr	x12, x11, #0x8
  ec:	cmn	x12, #0x8
  f0:	b.eq	d8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xd8>  // b.none
  f4:	ldr	x12, [x0, #8]
  f8:	ubfx	x13, x11, #4, #28
  fc:	eor	w13, w13, w11, lsr #9
 100:	and	w14, w13, w9
 104:	add	x13, x12, w14, uxtw #3
 108:	ldr	x16, [x13]
 10c:	cmp	x16, x11
 110:	b.eq	14c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x14c>  // b.none
 114:	mov	x15, xzr
 118:	mov	w17, #0x1                   	// #1
 11c:	cmn	x16, #0x8
 120:	b.eq	c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xc4>  // b.none
 124:	cmp	x15, #0x0
 128:	add	w14, w14, w17
 12c:	ccmp	x16, x10, #0x0, eq  // eq = none
 130:	and	w14, w14, w9
 134:	csel	x15, x15, x13, ne  // ne = any
 138:	add	x13, x12, w14, uxtw #3
 13c:	ldr	x16, [x13]
 140:	add	w17, w17, #0x1
 144:	cmp	x16, x11
 148:	b.ne	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x11c>  // b.any
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	brk	#0x1
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_6detail13DenseSetEmptyENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x15c                 	// #348
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x20, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x20, #0x30
  40:	str	x25, [x20, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  88:	mov	x8, x20
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x20, #32]
  b0:	str	x8, [x20, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	str	xzr, [x22, #16]
  c8:	str	x8, [x20, #64]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x104>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x154>
  e8:	mov	x0, x19
  ec:	mov	x1, x21
  f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  f4:	mov	x0, x20
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x1, xzr
 100:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x178>
 104:	add	x8, x19, #0x8
 108:	cmp	x8, x22
 10c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe0>  // b.none
 110:	ldr	x8, [x20, #40]
 114:	ldr	x9, [x22, #40]
 118:	subs	x23, x8, x9
 11c:	csel	x2, x9, x8, hi  // hi = pmore
 120:	cbz	x2, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>
 124:	ldr	x1, [x22, #32]
 128:	ldr	x0, [x21]
 12c:	bl	0 <memcmp>
 130:	cbnz	w0, 150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 134:	mov	w0, #0x7fffffff            	// #2147483647
 138:	cmp	x23, x0
 13c:	b.gt	150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x23, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w23, w8, gt
 150:	lsr	w0, w0, #31
 154:	add	x3, x19, #0x8
 158:	mov	x1, x20
 15c:	mov	x2, x22
 160:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 164:	ldr	x8, [x19, #40]
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x23, x20
 170:	add	x8, x8, #0x1
 174:	str	x8, [x19, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZN4llvm17RecordValResolverD0Ev:

0000000000000000 <_ZN4llvm17RecordValResolverD0Ev>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm17RecordValResolver7resolveEPNS_4InitE:

0000000000000000 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE>:
   0:	ldr	x8, [x0, #24]
   4:	ldr	x9, [x8]
   8:	cmp	x9, x1
   c:	b.eq	18 <_ZN4llvm17RecordValResolver7resolveEPNS_4InitE+0x18>  // b.none
  10:	mov	x0, xzr
  14:	ret
  18:	ldr	x0, [x8, #16]
  1c:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x60>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xdc>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w13, w12, w11
  3c:	mov	w12, #0x18                  	// #24
  40:	umaddl	x8, w13, w12, x10
  44:	ldr	x15, [x8]
  48:	cmp	x15, x9
  4c:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x90>  // b.any
  50:	ldr	x19, [sp, #16]
  54:	mov	x0, x8
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
  60:	mov	x3, xzr
  64:	mov	x1, x19
  68:	mov	x2, x19
  6c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  70:	ldr	x9, [x19]
  74:	mov	x8, x0
  78:	strb	wzr, [x0, #16]
  7c:	stp	x9, xzr, [x0]
  80:	ldr	x19, [sp, #16]
  84:	mov	x0, x8
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	mov	x14, xzr
  94:	mov	w17, #0x1                   	// #1
  98:	mov	x16, #0xfffffffffffffff0    	// #-16
  9c:	cmn	x15, #0x8
  a0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xd0>  // b.none
  a4:	cmp	x14, #0x0
  a8:	add	w13, w13, w17
  ac:	ccmp	x15, x16, #0x0, eq  // eq = none
  b0:	and	w13, w13, w11
  b4:	csel	x14, x14, x8, ne  // ne = any
  b8:	umaddl	x8, w13, w12, x10
  bc:	ldr	x15, [x8]
  c0:	add	w17, w17, #0x1
  c4:	cmp	x15, x9
  c8:	b.eq	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x50>  // b.none
  cc:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x9c>
  d0:	cmp	x14, #0x0
  d4:	csel	x3, x8, x14, eq  // eq = none
  d8:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x64>
  dc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x252                 	// #594
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x118>  // b.plast
  54:	cbz	x3, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w12, w11, w10
  c4:	mov	w11, #0x18                  	// #24
  c8:	umaddl	x3, w12, w11, x9
  cc:	ldr	x14, [x3]
  d0:	cmp	x14, x8
  d4:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
  d8:	mov	x13, xzr
  dc:	mov	w16, #0x1                   	// #1
  e0:	mov	x15, #0xfffffffffffffff0    	// #-16
  e4:	cmn	x14, #0x8
  e8:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
  ec:	cmp	x13, #0x0
  f0:	add	w12, w12, w16
  f4:	ccmp	x14, x15, #0x0, eq  // eq = none
  f8:	and	w12, w12, w10
  fc:	csel	x13, x13, x3, ne  // ne = any
 100:	umaddl	x3, w12, w11, x9
 104:	ldr	x14, [x3]
 108:	add	w16, w16, #0x1
 10c:	cmp	x14, x8
 110:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 114:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0xe4>
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 120:	ldr	w10, [x19, #24]
 124:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
 128:	ldr	x8, [x20]
 12c:	orr	x9, x8, #0x8
 130:	cmn	x9, #0x8
 134:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
 138:	ldr	x9, [x19, #8]
 13c:	ubfx	x11, x8, #4, #28
 140:	eor	w11, w11, w8, lsr #9
 144:	sub	w10, w10, #0x1
 148:	and	w12, w11, w10
 14c:	mov	w11, #0x18                  	// #24
 150:	umaddl	x3, w12, w11, x9
 154:	ldr	x14, [x3]
 158:	cmp	x14, x8
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 160:	mov	x13, xzr
 164:	mov	w16, #0x1                   	// #1
 168:	mov	x15, #0xfffffffffffffff0    	// #-16
 16c:	cmn	x14, #0x8
 170:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
 174:	cmp	x13, #0x0
 178:	add	w12, w12, w16
 17c:	ccmp	x14, x15, #0x0, eq  // eq = none
 180:	and	w12, w12, w10
 184:	csel	x13, x13, x3, ne  // ne = any
 188:	umaddl	x3, w12, w11, x9
 18c:	ldr	x14, [x3]
 190:	add	w16, w16, #0x1
 194:	cmp	x14, x8
 198:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 19c:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x16c>
 1a0:	cmp	x13, #0x0
 1a4:	csel	x3, x3, x13, eq  // eq = none
 1a8:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>
 1ac:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x22f                 	// #559
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x252                 	// #594
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	128 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x128>  // b.any
  a0:	cbz	w8, 118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	104 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x104>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	and	x11, x10, #0x1ffffffffffffffe
  d8:	madd	x9, x11, x12, x0
  dc:	mov	x12, #0xfffffffffffffff8    	// #-8
  e0:	mov	x13, x11
  e4:	mov	x14, x0
  e8:	str	x12, [x14]
  ec:	str	x12, [x14, #24]
  f0:	subs	x13, x13, #0x2
  f4:	add	x14, x14, #0x30
  f8:	b.ne	e8 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xe8>  // b.any
  fc:	cmp	x10, x11
 100:	b.eq	118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>  // b.none
 104:	add	x8, x0, x8
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	str	x10, [x9], #24
 110:	cmp	x8, x9
 114:	b.ne	10c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x10c>  // b.any
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 12c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 130:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x15c                 	// #348
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	1b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x1b0>  // b.any
  1c:	cbz	w8, a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>
  20:	ldr	x9, [x0, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mul	x10, x8, x10
  2c:	sub	x10, x10, #0x18
  30:	cmp	x10, #0x18
  34:	b.cs	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x40>  // b.hs, b.nlast
  38:	mov	x10, x9
  3c:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x88>
  40:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x11, #0xaaab
  48:	umulh	x10, x10, x11
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	mov	w13, #0x18                  	// #24
  58:	and	x12, x11, #0x1ffffffffffffffe
  5c:	madd	x10, x12, x13, x9
  60:	mov	x13, #0xfffffffffffffff8    	// #-8
  64:	mov	x14, x12
  68:	mov	x15, x9
  6c:	str	x13, [x15]
  70:	str	x13, [x15, #24]
  74:	subs	x14, x14, #0x2
  78:	add	x15, x15, #0x30
  7c:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x6c>  // b.any
  80:	cmp	x11, x12
  84:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>  // b.none
  88:	mov	w11, #0x18                  	// #24
  8c:	madd	x8, x8, x11, x9
  90:	mov	x9, #0xfffffffffffffff8    	// #-8
  94:	str	x9, [x10], #24
  98:	cmp	x8, x10
  9c:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x94>  // b.any
  a0:	cmp	x1, x2
  a4:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  a8:	mov	w8, #0x18                  	// #24
  ac:	mov	x9, #0xfffffffffffffff0    	// #-16
  b0:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xe0>
  b4:	cmp	x15, #0x0
  b8:	csel	x11, x13, x15, eq  // eq = none
  bc:	str	x10, [x11]
  c0:	ldur	q0, [x1, #8]
  c4:	stur	q0, [x11, #8]
  c8:	ldr	w10, [x0, #16]
  cc:	add	w10, w10, #0x1
  d0:	str	w10, [x0, #16]
  d4:	add	x1, x1, #0x18
  d8:	cmp	x1, x2
  dc:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  e0:	ldr	x10, [x1]
  e4:	orr	x11, x10, #0x8
  e8:	cmn	x11, #0x8
  ec:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xd4>  // b.none
  f0:	ldr	w12, [x0, #24]
  f4:	cbz	w12, 160 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x160>
  f8:	cmn	x10, #0x8
  fc:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x190>  // b.none
 100:	ldr	x11, [x0, #8]
 104:	ubfx	x13, x10, #4, #28
 108:	eor	w13, w13, w10, lsr #9
 10c:	sub	w12, w12, #0x1
 110:	and	w14, w13, w12
 114:	umaddl	x13, w14, w8, x11
 118:	ldr	x16, [x13]
 11c:	cmp	x16, x10
 120:	b.eq	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>  // b.none
 124:	mov	x15, xzr
 128:	mov	w17, #0x1                   	// #1
 12c:	cmn	x16, #0x8
 130:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xb4>  // b.none
 134:	cmp	x15, #0x0
 138:	add	w14, w14, w17
 13c:	ccmp	x16, x9, #0x0, eq  // eq = none
 140:	and	w14, w14, w12
 144:	csel	x15, x15, x13, ne  // ne = any
 148:	umaddl	x13, w14, w8, x11
 14c:	ldr	x16, [x13]
 150:	add	w17, w17, #0x1
 154:	cmp	x16, x10
 158:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x12c>  // b.any
 15c:	b	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>
 160:	mov	x11, xzr
 164:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xbc>
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x17a                 	// #378
 18c:	bl	0 <__assert_fail>
 190:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 194:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 198:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x252                 	// #594
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x15c                 	// #348
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm:

0000000000000000 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	cbz	x1, 108 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x108>
  1c:	mov	x23, x0
  20:	mov	x25, x0
  24:	ldr	x22, [x23, #8]!
  28:	ldr	x21, [x0]
  2c:	ldr	x8, [x25, #16]!
  30:	mov	x19, x1
  34:	mov	x20, x0
  38:	sub	x8, x8, x22
  3c:	cmp	x1, x8, asr #3
  40:	b.ls	9c <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x9c>  // b.plast
  44:	sub	x8, x22, x21
  48:	asr	x24, x8, #3
  4c:	eor	x8, x24, #0xfffffffffffffff
  50:	cmp	x8, x19
  54:	b.cc	120 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x120>  // b.lo, b.ul, b.last
  58:	cmp	x24, x19
  5c:	csel	x8, x19, x24, cc  // cc = lo, ul, last
  60:	adds	x8, x8, x24
  64:	lsr	x10, x8, #60
  68:	cset	w9, cs  // cs = hs, nlast
  6c:	cmp	x10, #0x0
  70:	cset	w10, ne  // ne = any
  74:	orr	w9, w9, w10
  78:	cmp	w9, #0x0
  7c:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  80:	csel	x26, x9, x8, ne  // ne = any
  84:	cbz	x26, bc <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xbc>
  88:	lsl	x0, x26, #3
  8c:	bl	0 <_Znwm>
  90:	ldp	x21, x22, [x20]
  94:	mov	x23, x0
  98:	b	c0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xc0>
  9c:	lsl	x19, x19, #3
  a0:	mov	x0, x22
  a4:	mov	w1, wzr
  a8:	mov	x2, x19
  ac:	bl	0 <memset>
  b0:	add	x8, x22, x19
  b4:	mov	x25, x23
  b8:	b	104 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0x104>
  bc:	mov	x23, xzr
  c0:	add	x24, x23, x24, lsl #3
  c4:	lsl	x2, x19, #3
  c8:	mov	x0, x24
  cc:	mov	w1, wzr
  d0:	bl	0 <memset>
  d4:	sub	x2, x22, x21
  d8:	cmp	x2, #0x1
  dc:	b.lt	ec <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xec>  // b.tstop
  e0:	mov	x0, x23
  e4:	mov	x1, x21
  e8:	bl	0 <memmove>
  ec:	cbz	x21, f8 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm+0xf8>
  f0:	mov	x0, x21
  f4:	bl	0 <_ZdlPv>
  f8:	add	x8, x24, x19, lsl #3
  fc:	stp	x23, x8, [x20]
 100:	add	x8, x23, x26, lsl #3
 104:	str	x8, [x25]
 108:	ldp	x20, x19, [sp, #64]
 10c:	ldp	x22, x21, [sp, #48]
 110:	ldp	x24, x23, [sp, #32]
 114:	ldp	x26, x25, [sp, #16]
 118:	ldp	x29, x30, [sp], #80
 11c:	ret
 120:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm9BitsRecTyESaIS2_EE17_M_default_appendEm>
 124:	add	x0, x0, #0x0
 128:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x10, [x0, #80]
  18:	ldr	x8, [x0]
  1c:	mov	w9, #0x1                   	// #1
  20:	lsl	x9, x9, x2
  24:	sub	x24, x9, #0x1
  28:	add	x12, x10, x1
  2c:	add	x10, x24, x8
  30:	neg	x23, x9
  34:	and	x10, x10, x23
  38:	sub	x10, x10, x8
  3c:	adds	x11, x10, x1
  40:	str	x12, [x0, #80]
  44:	b.cs	158 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x158>  // b.hs, b.nlast
  48:	ldr	x12, [x0, #8]
  4c:	mov	x20, x1
  50:	mov	x19, x0
  54:	sub	x12, x12, x8
  58:	cmp	x11, x12
  5c:	b.ls	f8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xf8>  // b.plast
  60:	add	x8, x20, x9
  64:	sub	x21, x8, #0x1
  68:	cmp	x21, #0x1, lsl #12
  6c:	b.ls	104 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x104>  // b.plast
  70:	mov	x0, x21
  74:	bl	0 <malloc>
  78:	mov	x22, x0
  7c:	cbnz	x0, 90 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x90>
  80:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	ldp	w8, w9, [x19, #72]
  94:	cmp	w8, w9
  98:	b.cs	144 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x144>  // b.hs, b.nlast
  9c:	ldr	x9, [x19, #64]
  a0:	add	x8, x9, w8, uxtw #4
  a4:	stp	x22, x21, [x8]
  a8:	ldp	w8, w9, [x19, #72]
  ac:	cmp	w8, w9
  b0:	b.cs	198 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x198>  // b.hs, b.nlast
  b4:	add	w9, w8, #0x1
  b8:	adds	x8, x24, x22
  bc:	str	w9, [x19, #72]
  c0:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
  c4:	and	x0, x8, x23
  c8:	add	x8, x0, x20
  cc:	add	x9, x21, x22
  d0:	cmp	x8, x9
  d4:	b.ls	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.plast
  d8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  dc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0xfb                  	// #251
  f4:	bl	0 <__assert_fail>
  f8:	add	x0, x8, x10
  fc:	add	x8, x0, x20
 100:	b	12c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x12c>
 104:	mov	x0, x19
 108:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 10c:	ldr	x8, [x19]
 110:	adds	x8, x24, x8
 114:	b.cs	178 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x178>  // b.hs, b.nlast
 118:	ldr	x9, [x19, #8]
 11c:	and	x0, x8, x23
 120:	add	x8, x0, x20
 124:	cmp	x8, x9
 128:	b.hi	1b8 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x1b8>  // b.pmore
 12c:	str	x8, [x19]
 130:	ldp	x20, x19, [sp, #48]
 134:	ldp	x22, x21, [sp, #32]
 138:	ldp	x24, x23, [sp, #16]
 13c:	ldp	x29, x30, [sp], #64
 140:	ret
 144:	add	x0, x19, #0x40
 148:	mov	x1, xzr
 14c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 150:	ldr	w8, [x19, #72]
 154:	b	9c <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x9c>
 158:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 160:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 164:	add	x0, x0, #0x0
 168:	add	x1, x1, #0x0
 16c:	add	x3, x3, #0x0
 170:	mov	w2, #0xdc                  	// #220
 174:	bl	0 <__assert_fail>
 178:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 180:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 184:	add	x0, x0, #0x0
 188:	add	x1, x1, #0x0
 18c:	add	x3, x3, #0x0
 190:	mov	w2, #0xbb                  	// #187
 194:	bl	0 <__assert_fail>
 198:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 19c:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1a4:	add	x0, x0, #0x0
 1a8:	add	x1, x1, #0x0
 1ac:	add	x3, x3, #0x0
 1b0:	mov	w2, #0x43                  	// #67
 1b4:	bl	0 <__assert_fail>
 1b8:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1bc:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c0:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 1c4:	add	x0, x0, #0x0
 1c8:	add	x1, x1, #0x0
 1cc:	add	x3, x3, #0x0
 1d0:	mov	w2, #0x106                 	// #262
 1d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w22, [x0, #24]
  14:	mov	w8, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x9, x22, #7
  20:	cmp	x9, #0x1e
  24:	csel	x8, x9, x8, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 54 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x54>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	ldr	w22, [x19, #24]
  54:	ldr	w8, [x19, #28]
  58:	cmp	w22, w8
  5c:	b.cs	94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x94>  // b.hs, b.nlast
  60:	ldr	x8, [x19, #16]
  64:	str	x21, [x8, w22, uxtw #3]
  68:	ldp	w8, w9, [x19, #24]
  6c:	cmp	w8, w9
  70:	b.cs	b0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0xb0>  // b.hs, b.nlast
  74:	add	w8, w8, #0x1
  78:	add	x9, x21, x20
  7c:	str	w8, [x19, #24]
  80:	stp	x21, x9, [x19]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x10
  98:	add	x1, x0, #0x10
  9c:	mov	w3, #0x8                   	// #8
  a0:	mov	x2, xzr
  a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a8:	ldr	w22, [x19, #24]
  ac:	b	60 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x60>
  b0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  b8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  bc:	add	x0, x0, #0x0
  c0:	add	x1, x1, #0x0
  c4:	add	x3, x3, #0x0
  c8:	mov	w2, #0x43                  	// #67
  cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x21, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x21, #32]
  20:	mov	x0, x2
  24:	mov	x19, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  30:	cbz	w20, 50 <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x50>
  34:	add	x21, x21, #0x28
  38:	lsl	x20, x20, #3
  3c:	ldr	x1, [x21], #8
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	subs	x20, x20, #0x8
  4c:	b.ne	3c <_ZNK4llvm10FoldingSetINS_8BitsInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x3c>  // b.any
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w21, [x22, #32]
  20:	mov	x0, x4
  24:	mov	x19, x4
  28:	mov	x20, x2
  2c:	mov	x1, x21
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	cbz	w21, 54 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x54>
  38:	add	x22, x22, #0x28
  3c:	lsl	x21, x21, #3
  40:	ldr	x1, [x22], #8
  44:	mov	x0, x19
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	subs	x21, x21, #0x8
  50:	b.ne	40 <_ZNK4llvm10FoldingSetINS_8BitsInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x40>  // b.any
  54:	mov	x0, x19
  58:	mov	x1, x20
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x21, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x21, #32]
  20:	mov	x0, x2
  24:	mov	x19, x2
  28:	mov	x1, x20
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  30:	cbz	w20, 50 <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x50>
  34:	add	x21, x21, #0x28
  38:	lsl	x20, x20, #3
  3c:	ldr	x1, [x21], #8
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	subs	x20, x20, #0x8
  4c:	b.ne	3c <_ZNK4llvm10FoldingSetINS_8BitsInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x3c>  // b.any
  50:	mov	x0, x19
  54:	ldp	x20, x19, [sp, #32]
  58:	ldr	x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.ge	dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0xdc>  // b.tcont
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.ge	130 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x130>  // b.tcont
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.lt	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>  // b.tstop
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x170>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, lt  // lt = tstop
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.ge	18c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x18c>  // b.tcont
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>
  dc:	cmp	x8, x22
  e0:	b.ge	11c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x11c>  // b.tcont
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldr	x8, [x0, #32]
  fc:	cmp	x22, x8
 100:	b.ge	198 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x198>  // b.tcont
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1d0>
 138:	ldr	x8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	x22, x8
 14c:	csel	x9, x9, x10, lt  // lt = tstop
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x138>
 158:	cmp	x22, x8
 15c:	mov	x0, x19
 160:	b.ge	1fc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1fc>  // b.tcont
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldr	x8, [x22]
 18c:	ldr	x9, [x0, #32]
 190:	cmp	x9, x8
 194:	b	204 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1e4>
 1a0:	ldr	x8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	x22, x8
 1b4:	csel	x9, x9, x10, lt  // lt = tstop
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1a0>
 1c0:	cmp	x22, x8
 1c4:	mov	x0, x19
 1c8:	b.lt	1e8 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1e8>  // b.tstop
 1cc:	b	1fc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeIlSt4pairIKlPN4llvm7IntInitEESt10_Select1stIS5_ESt4lessIlESaIS5_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS5_ERS1_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldr	x8, [x0, #32]
 200:	cmp	x8, x22
 204:	csel	x20, xzr, x0, lt  // lt = tstop
 208:	csel	x19, x19, xzr, lt  // lt = tstop
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	f0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xf0>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	ldr	x0, [x20, #24]
  70:	add	x1, x22, #0x9
  74:	mov	w2, #0x3                   	// #3
  78:	bl	0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  7c:	mov	x25, x0
  80:	mov	x24, x0
  84:	str	x22, [x25], #8
  88:	cbz	x22, 9c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x9c>
  8c:	mov	x0, x25
  90:	mov	x1, x23
  94:	mov	x2, x22
  98:	bl	0 <memcpy>
  9c:	strb	wzr, [x25, x22]
  a0:	str	x24, [x19]
  a4:	ldp	w8, w9, [x20, #12]
  a8:	ldr	w10, [x20, #8]
  ac:	add	w8, w8, #0x1
  b0:	add	w9, w9, w8
  b4:	cmp	w9, w10
  b8:	str	w8, [x20, #12]
  bc:	b.hi	10c <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x10c>  // b.pmore
  c0:	mov	x0, x20
  c4:	mov	w1, w21
  c8:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  cc:	ldr	x8, [x20]
  d0:	add	x19, x8, w0, uxtw #3
  d4:	b	dc <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xdc>
  d8:	add	x19, x19, #0x8
  dc:	ldr	x8, [x19]
  e0:	cbz	x8, d8 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xd8>
  e4:	cmn	x8, #0x8
  e8:	b.eq	d8 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xd8>  // b.none
  ec:	mov	w1, #0x1                   	// #1
  f0:	mov	x0, x19
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 110:	adrp	x1, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 114:	adrp	x3, 0 <_ZN4llvm9StringMapINS_8NoneTypeERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x1bb                 	// #443
 128:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x3
  1c:	mov	x22, x2
  20:	mov	x23, x1
  24:	mov	x20, x0
  28:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  2c:	ldr	x8, [x20]
  30:	mov	w21, w0
  34:	add	x19, x8, w0, uxtw #3
  38:	ldr	x8, [x19]
  3c:	cmn	x8, #0x8
  40:	b.eq	64 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x64>  // b.none
  44:	cbz	x8, 70 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x70>
  48:	b	50 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x50>
  4c:	ldr	x8, [x19, #8]!
  50:	cbz	x8, 4c <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x4c>
  54:	cmn	x8, #0x8
  58:	b.eq	4c <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x4c>  // b.none
  5c:	mov	x1, xzr
  60:	b	f8 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xf8>
  64:	ldr	w8, [x20, #16]
  68:	sub	w8, w8, #0x1
  6c:	str	w8, [x20, #16]
  70:	ldr	x0, [x20, #24]
  74:	add	x1, x22, #0x11
  78:	mov	w2, #0x3                   	// #3
  7c:	bl	0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
  80:	ldr	x8, [x24]
  84:	mov	x25, x0
  88:	add	x24, x0, #0x10
  8c:	stp	x22, x8, [x0]
  90:	cbz	x22, a4 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xa4>
  94:	mov	x0, x24
  98:	mov	x1, x23
  9c:	mov	x2, x22
  a0:	bl	0 <memcpy>
  a4:	strb	wzr, [x24, x22]
  a8:	str	x25, [x19]
  ac:	ldp	w8, w9, [x20, #12]
  b0:	ldr	w10, [x20, #8]
  b4:	add	w8, w8, #0x1
  b8:	add	w9, w9, w8
  bc:	cmp	w9, w10
  c0:	str	w8, [x20, #12]
  c4:	b.hi	114 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0x114>  // b.pmore
  c8:	mov	x0, x20
  cc:	mov	w1, w21
  d0:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  d4:	ldr	x8, [x20]
  d8:	add	x19, x8, w0, uxtw #3
  dc:	b	e4 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe4>
  e0:	add	x19, x19, #0x8
  e4:	ldr	x8, [x19]
  e8:	cbz	x8, e0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe0>
  ec:	cmn	x8, #0x8
  f0:	b.eq	e0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_+0xe0>  // b.none
  f4:	mov	w1, #0x1                   	// #1
  f8:	mov	x0, x19
  fc:	ldp	x20, x19, [sp, #64]
 100:	ldp	x22, x21, [sp, #48]
 104:	ldp	x24, x23, [sp, #32]
 108:	ldr	x25, [sp, #16]
 10c:	ldp	x29, x30, [sp], #80
 110:	ret
 114:	adrp	x0, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 118:	adrp	x1, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 11c:	adrp	x3, 0 <_ZN4llvm9StringMapIPNS_10StringInitERNS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS2_EEESt4pairINS_17StringMapIteratorIS2_EEbENS_9StringRefEDpOT_>
 120:	add	x0, x0, #0x0
 124:	add	x1, x1, #0x0
 128:	add	x3, x3, #0x0
 12c:	mov	w2, #0x1bb                 	// #443
 130:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	x8, [x22, #16]
  20:	cbz	x8, 84 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x84>
  24:	ldr	w9, [x8, #8]
  28:	cmp	w9, #0x5
  2c:	b.ne	a4 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0xa4>  // b.any
  30:	ldr	w20, [x22, #32]
  34:	ldr	x21, [x8, #24]
  38:	mov	x0, x2
  3c:	mov	x19, x2
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  48:	mov	x0, x19
  4c:	mov	x1, x21
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	cbz	w20, 74 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x74>
  58:	add	x21, x22, #0x28
  5c:	lsl	x20, x20, #3
  60:	ldr	x1, [x21], #8
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	subs	x20, x20, #0x8
  70:	b.ne	60 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>  // b.any
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret
  84:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  88:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  8c:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x69                  	// #105
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  a8:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  ac:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x108                 	// #264
  c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x23, xzr, x8, eq  // eq = none
  20:	ldr	x8, [x23, #16]
  24:	cbz	x8, 98 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x98>
  28:	ldr	w9, [x8, #8]
  2c:	cmp	w9, #0x5
  30:	b.ne	b8 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0xb8>  // b.any
  34:	ldr	w21, [x23, #32]
  38:	ldr	x22, [x8, #24]
  3c:	mov	x0, x4
  40:	mov	x19, x4
  44:	mov	x1, x21
  48:	mov	x20, x2
  4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  50:	mov	x0, x19
  54:	mov	x1, x22
  58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  5c:	cbz	w21, 7c <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x7c>
  60:	add	x22, x23, #0x28
  64:	lsl	x21, x21, #3
  68:	ldr	x1, [x22], #8
  6c:	mov	x0, x19
  70:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  74:	subs	x21, x21, #0x8
  78:	b.ne	68 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x68>  // b.any
  7c:	mov	x0, x19
  80:	mov	x1, x20
  84:	ldp	x20, x19, [sp, #48]
  88:	ldp	x22, x21, [sp, #32]
  8c:	ldr	x23, [sp, #16]
  90:	ldp	x29, x30, [sp], #64
  94:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>
  98:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  9c:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  a0:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  a4:	add	x0, x0, #0x0
  a8:	add	x1, x1, #0x0
  ac:	add	x3, x3, #0x0
  b0:	mov	w2, #0x69                  	// #105
  b4:	bl	0 <__assert_fail>
  b8:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  bc:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  c0:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x108                 	// #264
  d4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	x8, [x22, #16]
  20:	cbz	x8, 88 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x88>
  24:	ldr	w9, [x8, #8]
  28:	cmp	w9, #0x5
  2c:	b.ne	a8 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0xa8>  // b.any
  30:	ldr	w20, [x22, #32]
  34:	ldr	x21, [x8, #24]
  38:	mov	x0, x2
  3c:	mov	x19, x2
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  48:	mov	x0, x19
  4c:	mov	x1, x21
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	cbz	w20, 74 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x74>
  58:	add	x21, x22, #0x28
  5c:	lsl	x20, x20, #3
  60:	ldr	x1, [x21], #8
  64:	mov	x0, x19
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	subs	x20, x20, #0x8
  70:	b.ne	60 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>  // b.any
  74:	mov	x0, x19
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldp	x22, x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>
  88:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  8c:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  90:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x69                  	// #105
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  ac:	adrp	x1, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  b0:	adrp	x3, 0 <_ZNK4llvm10FoldingSetINS_8ListInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x108                 	// #264
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x19, [x8, #32]
  24:	ldr	x20, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x21, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x21
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x22, x2
  34:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  44:	mov	x0, x19
  48:	mov	x1, x21
  4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  50:	mov	x0, x19
  54:	mov	x1, x22
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_8UnOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldr	x19, [x8, #32]
  24:	ldr	x20, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x21, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x21
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x21
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldp	x19, x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x22, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x22
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x22
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x22
  50:	mov	x1, x21
  54:	ldp	x20, x19, [sp, #32]
  58:	ldp	x22, x21, [sp, #16]
  5c:	ldp	x29, x30, [sp], #48
  60:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x20, x21, [x8, #32]
  28:	ldr	x22, [x8, #16]
  2c:	mov	x0, x4
  30:	mov	x19, x4
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x19
  4c:	mov	x1, x21
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x19
  58:	mov	x1, x22
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x19
  64:	mov	x1, x23
  68:	ldp	x20, x19, [sp, #48]
  6c:	ldp	x22, x21, [sp, #32]
  70:	ldr	x23, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9BinOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldrb	w1, [x8, #9]
  20:	ldp	x19, x20, [x8, #32]
  24:	ldr	x21, [x8, #16]
  28:	mov	x0, x2
  2c:	mov	x22, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  34:	mov	x0, x22
  38:	mov	x1, x19
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	mov	x0, x22
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x22
  50:	mov	x1, x21
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	mov	x0, x22
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x21, [x8, #48]
  2c:	ldr	x22, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x23
  40:	mov	x1, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x23
  4c:	mov	x1, x20
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x23
  58:	mov	x1, x21
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x23
  64:	mov	x1, x22
  68:	ldp	x20, x19, [sp, #48]
  6c:	ldp	x22, x21, [sp, #32]
  70:	ldr	x23, [sp, #16]
  74:	ldp	x29, x30, [sp], #64
  78:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x20, x21, [x8, #32]
  28:	ldr	x22, [x8, #48]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x4
  34:	mov	x19, x4
  38:	mov	x24, x2
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  4c:	mov	x0, x19
  50:	mov	x1, x21
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	mov	x0, x19
  5c:	mov	x1, x22
  60:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  64:	mov	x0, x19
  68:	mov	x1, x23
  6c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  70:	mov	x0, x19
  74:	mov	x1, x24
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldp	x24, x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10TernOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldrb	w1, [x8, #9]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x21, [x8, #48]
  2c:	ldr	x22, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x23, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEj>
  3c:	mov	x0, x23
  40:	mov	x1, x19
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x23
  4c:	mov	x1, x20
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x23
  58:	mov	x1, x21
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x23
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x23
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldp	x1, x21, [x8, #48]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x22, [x8, #64]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x24, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x24
  40:	mov	x1, x21
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x24
  4c:	mov	x1, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x24
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x24
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x24
  70:	mov	x1, x23
  74:	ldp	x20, x19, [sp, #48]
  78:	ldp	x22, x21, [sp, #32]
  7c:	ldp	x24, x23, [sp, #16]
  80:	ldp	x29, x30, [sp], #64
  84:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, #0x18
  1c:	cmp	x1, #0x0
  20:	csel	x8, xzr, x8, eq  // eq = none
  24:	ldp	x1, x22, [x8, #48]
  28:	ldp	x20, x21, [x8, #32]
  2c:	ldr	x23, [x8, #64]
  30:	ldr	x24, [x8, #16]
  34:	mov	x0, x4
  38:	mov	x19, x4
  3c:	mov	x25, x2
  40:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  44:	mov	x0, x19
  48:	mov	x1, x22
  4c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  50:	mov	x0, x19
  54:	mov	x1, x20
  58:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  5c:	mov	x0, x19
  60:	mov	x1, x21
  64:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  68:	mov	x0, x19
  6c:	mov	x1, x23
  70:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  74:	mov	x0, x19
  78:	mov	x1, x24
  7c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  80:	mov	x0, x19
  84:	mov	x1, x25
  88:	ldp	x20, x19, [sp, #64]
  8c:	ldp	x22, x21, [sp, #48]
  90:	ldp	x24, x23, [sp, #32]
  94:	ldr	x25, [sp, #16]
  98:	ldp	x29, x30, [sp], #80
  9c:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10FoldOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x8, xzr, x8, eq  // eq = none
  20:	ldp	x1, x21, [x8, #48]
  24:	ldp	x19, x20, [x8, #32]
  28:	ldr	x22, [x8, #64]
  2c:	ldr	x23, [x8, #16]
  30:	mov	x0, x2
  34:	mov	x24, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x24
  40:	mov	x1, x21
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	mov	x0, x24
  4c:	mov	x1, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	mov	x0, x24
  58:	mov	x1, x20
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	mov	x0, x24
  64:	mov	x1, x22
  68:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  6c:	mov	x0, x24
  70:	mov	x1, x23
  74:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  78:	mov	x0, x24
  7c:	ldp	x20, x19, [sp, #48]
  80:	ldp	x22, x21, [sp, #32]
  84:	ldp	x24, x23, [sp, #16]
  88:	ldp	x29, x30, [sp], #64
  8c:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	x1, x19, [x8, #32]
  1c:	mov	x0, x2
  20:	mov	x20, x2
  24:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	ldp	x20, x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x8, xzr, x8, eq  // eq = none
  1c:	ldp	x1, x20, [x8, #32]
  20:	mov	x0, x4
  24:	mov	x19, x4
  28:	mov	x21, x2
  2c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  30:	mov	x0, x19
  34:	mov	x1, x20
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  3c:	mov	x0, x19
  40:	mov	x1, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_9IsAOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	x1, x19, [x8, #32]
  1c:	mov	x0, x2
  20:	mov	x20, x2
  24:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  28:	mov	x0, x20
  2c:	mov	x1, x19
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	mov	x0, x20
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
  10:	ldp	x8, x10, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x8
  1c:	b.ne	28 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x28>  // b.any
  20:	cmn	x10, #0x8
  24:	b.eq	140 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x140>  // b.none
  28:	cmn	x8, #0x10
  2c:	b.ne	38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x38>  // b.any
  30:	cmn	x10, #0x10
  34:	b.eq	140 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x140>  // b.none
  38:	ubfx	x13, x8, #4, #28
  3c:	ubfx	x14, x10, #4, #28
  40:	mov	x15, #0xffffffffffffffff    	// #-1
  44:	sub	w12, w11, #0x1
  48:	eor	w11, w13, w8, lsr #9
  4c:	eor	w13, w14, w10, lsr #9
  50:	eor	x14, x15, x13, lsl #32
  54:	bfi	x13, x11, #32, #28
  58:	add	x11, x13, x14
  5c:	eor	x11, x11, x11, lsr #22
  60:	eor	x13, x15, x11, lsl #13
  64:	add	x11, x11, x13
  68:	eor	x11, x11, x11, lsr #8
  6c:	add	x11, x11, x11, lsl #3
  70:	eor	x11, x11, x11, lsr #15
  74:	eor	x13, x15, x11, lsl #27
  78:	add	x11, x11, x13
  7c:	lsr	x13, x11, #31
  80:	eor	w11, w13, w11
  84:	and	w14, w12, w11
  88:	mov	w13, #0x18                  	// #24
  8c:	umaddl	x11, w14, w13, x9
  90:	ldp	x16, x18, [x11]
  94:	cmp	x8, x16
  98:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.any
  9c:	cmp	x10, x18
  a0:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.any
  a4:	mov	w0, #0x1                   	// #1
  a8:	str	x11, [x2]
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret
  b4:	mov	x11, xzr
  b8:	mov	w0, wzr
  bc:	str	x11, [x2]
  c0:	ldp	x29, x30, [sp], #16
  c4:	ret
  c8:	mov	x15, xzr
  cc:	mov	w1, #0x1                   	// #1
  d0:	mov	x17, #0xfffffffffffffff0    	// #-16
  d4:	mov	w0, #0x1                   	// #1
  d8:	cmn	x16, #0x8
  dc:	b.ne	e8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xe8>  // b.any
  e0:	cmn	x18, #0x8
  e4:	b.eq	128 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x128>  // b.none
  e8:	cmn	x18, #0x10
  ec:	add	w14, w14, w1
  f0:	ccmp	x16, x17, #0x0, eq  // eq = none
  f4:	and	w14, w14, w12
  f8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  fc:	csel	x15, x15, x11, ne  // ne = any
 100:	umaddl	x11, w14, w13, x9
 104:	ldp	x16, x18, [x11]
 108:	add	w3, w1, #0x1
 10c:	mov	w1, w3
 110:	cmp	x8, x16
 114:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd8>  // b.any
 118:	cmp	x10, x18
 11c:	mov	w1, w3
 120:	b.eq	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xa8>  // b.none
 124:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd8>
 128:	cmp	x15, #0x0
 12c:	mov	w0, wzr
 130:	csel	x11, x11, x15, eq  // eq = none
 134:	str	x11, [x2]
 138:	ldp	x29, x30, [sp], #16
 13c:	ret
 140:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 144:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 148:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x252                 	// #594
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x8
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	130 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x130>  // b.any
  a0:	cbz	w8, 120 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	mov	x13, #0xfffffffffffffff8    	// #-8
  d8:	and	x11, x10, #0x1ffffffffffffffe
  dc:	madd	x9, x11, x12, x0
  e0:	dup	v0.2d, x13
  e4:	mov	x12, x11
  e8:	mov	x13, x0
  ec:	str	q0, [x13]
  f0:	stur	q0, [x13, #24]
  f4:	subs	x12, x12, #0x2
  f8:	add	x13, x13, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xec>  // b.any
 100:	cmp	x10, x11
 104:	b.eq	120 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>  // b.none
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	add	x8, x0, x8
 110:	dup	v0.2d, x10
 114:	str	q0, [x9], #24
 118:	cmp	x8, x9
 11c:	b.ne	114 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x114>  // b.any
 120:	ldp	x20, x19, [sp, #32]
 124:	ldr	x21, [sp, #16]
 128:	ldp	x29, x30, [sp], #48
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 134:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 138:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x15c                 	// #348
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x160>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x10, x10, #0x18
  44:	cmp	x10, #0x18
  48:	b.cs	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x54>  // b.hs, b.nlast
  4c:	mov	x10, x9
  50:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xa0>
  54:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  58:	movk	x11, #0xaaab
  5c:	umulh	x10, x10, x11
  60:	lsr	x10, x10, #4
  64:	add	x11, x10, #0x1
  68:	mov	w13, #0x18                  	// #24
  6c:	mov	x14, #0xfffffffffffffff8    	// #-8
  70:	and	x12, x11, #0x1ffffffffffffffe
  74:	madd	x10, x12, x13, x9
  78:	dup	v0.2d, x14
  7c:	mov	x13, x12
  80:	mov	x14, x9
  84:	str	q0, [x14]
  88:	stur	q0, [x14, #24]
  8c:	subs	x13, x13, #0x2
  90:	add	x14, x14, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x84>  // b.any
  98:	cmp	x11, x12
  9c:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>  // b.none
  a0:	mov	w11, #0x18                  	// #24
  a4:	mov	x12, #0xfffffffffffffff8    	// #-8
  a8:	madd	x8, x8, x11, x9
  ac:	dup	v0.2d, x12
  b0:	str	q0, [x10], #24
  b4:	cmp	x8, x10
  b8:	b.ne	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xb0>  // b.any
  bc:	b	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  c0:	add	x2, x29, #0x18
  c4:	mov	x0, x21
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
  d0:	tbnz	w0, #0, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x140>
  d4:	ldr	x8, [x29, #24]
  d8:	ldr	x9, [x20]
  dc:	str	x9, [x8]
  e0:	ldr	x9, [x20, #8]
  e4:	str	x9, [x8, #8]
  e8:	ldr	x9, [x20, #16]
  ec:	str	x9, [x8, #16]
  f0:	ldr	w8, [x21, #16]
  f4:	add	w8, w8, #0x1
  f8:	str	w8, [x21, #16]
  fc:	add	x20, x20, #0x18
 100:	cmp	x20, x19
 104:	b.eq	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x130>  // b.none
 108:	ldp	x9, x8, [x20]
 10c:	cmn	x9, #0x8
 110:	b.ne	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x11c>  // b.any
 114:	cmn	x8, #0x8
 118:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 11c:	cmn	x9, #0x10
 120:	b.ne	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>  // b.any
 124:	cmn	x8, #0x10
 128:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 12c:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 144:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 148:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x17a                 	// #378
 15c:	bl	0 <__assert_fail>
 160:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 164:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 168:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_5RecTyEPNS_4InitEEPNS_7VarInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x15c                 	// #348
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w12, [x0, #24]
   c:	cbz	w12, 38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x38>
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x10
  1c:	b.eq	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x4c>  // b.none
  20:	cmn	x8, #0x8
  24:	b.ne	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>  // b.any
  28:	ldr	w10, [x1, #8]
  2c:	cmn	w10, #0x1
  30:	b.ne	7c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x7c>  // b.any
  34:	b	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x58>
  38:	mov	x12, xzr
  3c:	mov	w0, wzr
  40:	str	x12, [x2]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	ldr	w10, [x1, #8]
  50:	cmn	w10, #0x2
  54:	b.ne	7c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x7c>  // b.any
  58:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  5c:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  60:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x252                 	// #594
  74:	bl	0 <__assert_fail>
  78:	ldr	w10, [x1, #8]
  7c:	ubfx	x13, x8, #4, #28
  80:	mov	w14, #0x25                  	// #37
  84:	mov	x15, #0xffffffffffffffff    	// #-1
  88:	eor	w13, w13, w8, lsr #9
  8c:	mul	w14, w10, w14
  90:	eor	x16, x15, x14, lsl #32
  94:	bfi	x14, x13, #32, #28
  98:	sub	w13, w12, #0x1
  9c:	add	x12, x14, x16
  a0:	eor	x12, x12, x12, lsr #22
  a4:	eor	x14, x15, x12, lsl #13
  a8:	add	x12, x12, x14
  ac:	eor	x12, x12, x12, lsr #8
  b0:	add	x12, x12, x12, lsl #3
  b4:	eor	x12, x12, x12, lsr #15
  b8:	eor	x15, x15, x12, lsl #27
  bc:	add	x12, x12, x15
  c0:	lsr	x15, x12, #31
  c4:	eor	w12, w15, w12
  c8:	mov	x11, xzr
  cc:	mov	w14, #0x1                   	// #1
  d0:	and	w16, w13, w12
  d4:	mov	w15, #0x18                  	// #24
  d8:	umaddl	x12, w16, w15, x9
  dc:	ldr	x17, [x12]
  e0:	mov	w16, w16
  e4:	cmp	x17, x8
  e8:	b.ne	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.any
  ec:	madd	x18, x16, x15, x9
  f0:	ldr	w18, [x18, #8]
  f4:	cmp	w10, w18
  f8:	b.eq	160 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x160>  // b.none
  fc:	cmn	x17, #0x8
 100:	b.ne	118 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x118>  // b.any
 104:	madd	x17, x16, x15, x9
 108:	ldr	w17, [x17, #8]
 10c:	cmn	w17, #0x1
 110:	b.eq	170 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x170>  // b.none
 114:	b	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x134>
 118:	cmn	x17, #0x10
 11c:	b.ne	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x134>  // b.any
 120:	madd	x17, x16, x15, x9
 124:	ldr	w17, [x17, #8]
 128:	cmn	w17, #0x2
 12c:	cset	w17, eq  // eq = none
 130:	b	138 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x138>
 134:	mov	w17, wzr
 138:	cmp	x11, #0x0
 13c:	eor	w17, w17, #0x1
 140:	cset	w18, ne  // ne = any
 144:	orr	w17, w18, w17
 148:	add	w16, w16, w14
 14c:	cmp	w17, #0x0
 150:	add	w14, w14, #0x1
 154:	csel	x11, x11, x12, ne  // ne = any
 158:	and	w16, w16, w13
 15c:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd8>
 160:	mov	w0, #0x1                   	// #1
 164:	str	x12, [x2]
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	cmp	x11, #0x0
 174:	mov	w0, wzr
 178:	csel	x12, x12, x11, eq  // eq = none
 17c:	str	x12, [x2]
 180:	ldp	x29, x30, [sp], #16
 184:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x80>  // b.any
  74:	ldr	w8, [x3, #8]
  78:	cmn	w8, #0x1
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x16c>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc0>  // b.none
  dc:	ldr	x8, [x20]
  e0:	cmn	x8, #0x10
  e4:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.none
  e8:	cmn	x8, #0x8
  ec:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  f0:	ldr	w8, [x20, #8]
  f4:	cmn	w8, #0x1
  f8:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  fc:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 100:	ldr	w8, [x20, #8]
 104:	cmn	w8, #0x2
 108:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>  // b.none
 10c:	add	x2, x29, #0x18
 110:	mov	x0, x21
 114:	mov	x1, x20
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 11c:	tbnz	w0, #0, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x14c>
 120:	ldr	x8, [x29, #24]
 124:	ldr	x9, [x20]
 128:	str	x9, [x8]
 12c:	ldr	w9, [x20, #8]
 130:	str	w9, [x8, #8]
 134:	ldr	x9, [x20, #16]
 138:	str	x9, [x8, #16]
 13c:	ldr	w8, [x21, #16]
 140:	add	w8, w8, #0x1
 144:	str	w8, [x21, #16]
 148:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_10VarBitInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x15c                 	// #348
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w12, [x0, #24]
   c:	cbz	w12, 38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x38>
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x10
  1c:	b.eq	4c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x4c>  // b.none
  20:	cmn	x8, #0x8
  24:	b.ne	78 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x78>  // b.any
  28:	ldr	w10, [x1, #8]
  2c:	cmn	w10, #0x1
  30:	b.ne	7c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x7c>  // b.any
  34:	b	58 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x58>
  38:	mov	x12, xzr
  3c:	mov	w0, wzr
  40:	str	x12, [x2]
  44:	ldp	x29, x30, [sp], #16
  48:	ret
  4c:	ldr	w10, [x1, #8]
  50:	cmn	w10, #0x2
  54:	b.ne	7c <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x7c>  // b.any
  58:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  5c:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  60:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_>
  64:	add	x0, x0, #0x0
  68:	add	x1, x1, #0x0
  6c:	add	x3, x3, #0x0
  70:	mov	w2, #0x252                 	// #594
  74:	bl	0 <__assert_fail>
  78:	ldr	w10, [x1, #8]
  7c:	ubfx	x13, x8, #4, #28
  80:	mov	w14, #0x25                  	// #37
  84:	mov	x15, #0xffffffffffffffff    	// #-1
  88:	eor	w13, w13, w8, lsr #9
  8c:	mul	w14, w10, w14
  90:	eor	x16, x15, x14, lsl #32
  94:	bfi	x14, x13, #32, #28
  98:	sub	w13, w12, #0x1
  9c:	add	x12, x14, x16
  a0:	eor	x12, x12, x12, lsr #22
  a4:	eor	x14, x15, x12, lsl #13
  a8:	add	x12, x12, x14
  ac:	eor	x12, x12, x12, lsr #8
  b0:	add	x12, x12, x12, lsl #3
  b4:	eor	x12, x12, x12, lsr #15
  b8:	eor	x15, x15, x12, lsl #27
  bc:	add	x12, x12, x15
  c0:	lsr	x15, x12, #31
  c4:	eor	w12, w15, w12
  c8:	mov	x11, xzr
  cc:	mov	w14, #0x1                   	// #1
  d0:	and	w16, w13, w12
  d4:	mov	w15, #0x18                  	// #24
  d8:	umaddl	x12, w16, w15, x9
  dc:	ldr	x17, [x12]
  e0:	mov	w16, w16
  e4:	cmp	x17, x8
  e8:	b.ne	fc <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xfc>  // b.any
  ec:	madd	x18, x16, x15, x9
  f0:	ldr	w18, [x18, #8]
  f4:	cmp	w10, w18
  f8:	b.eq	160 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x160>  // b.none
  fc:	cmn	x17, #0x8
 100:	b.ne	118 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x118>  // b.any
 104:	madd	x17, x16, x15, x9
 108:	ldr	w17, [x17, #8]
 10c:	cmn	w17, #0x1
 110:	b.eq	170 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x170>  // b.none
 114:	b	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x134>
 118:	cmn	x17, #0x10
 11c:	b.ne	134 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x134>  // b.any
 120:	madd	x17, x16, x15, x9
 124:	ldr	w17, [x17, #8]
 128:	cmn	w17, #0x2
 12c:	cset	w17, eq  // eq = none
 130:	b	138 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0x138>
 134:	mov	w17, wzr
 138:	cmp	x11, #0x0
 13c:	eor	w17, w17, #0x1
 140:	cset	w18, ne  // ne = any
 144:	orr	w17, w18, w17
 148:	add	w16, w16, w14
 14c:	cmp	w17, #0x0
 150:	add	w14, w14, #0x1
 154:	csel	x11, x11, x12, ne  // ne = any
 158:	and	w16, w16, w13
 15c:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E15LookupBucketForIS5_EEbRKT_RPKSC_+0xd8>
 160:	mov	w0, #0x1                   	// #1
 164:	str	x12, [x2]
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	cmp	x11, #0x0
 174:	mov	w0, wzr
 178:	csel	x12, x12, x11, eq  // eq = none
 17c:	str	x12, [x2]
 180:	ldp	x29, x30, [sp], #16
 184:	ret

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x80>  // b.any
  74:	ldr	w8, [x3, #8]
  78:	cmn	w8, #0x1
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E20InsertIntoBucketImplIS5_EEPSC_RKS5_RKT_SG_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	12c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x12c>  // b.any
  a0:	cbz	w8, 11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x11, x8, #0x18
  b0:	cmp	x11, #0x18
  b4:	adrp	x9, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
  b8:	mov	x10, x0
  bc:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  c0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c4:	movk	x10, #0xaaab
  c8:	umulh	x10, x11, x10
  cc:	ldr	q0, [x9]
  d0:	lsr	x10, x10, #4
  d4:	add	x11, x10, #0x1
  d8:	and	x12, x11, #0x1ffffffffffffffe
  dc:	mov	w10, #0x18                  	// #24
  e0:	madd	x10, x12, x10, x0
  e4:	mov	x13, x12
  e8:	mov	x14, x0
  ec:	str	q0, [x14]
  f0:	stur	q0, [x14, #24]
  f4:	subs	x13, x13, #0x2
  f8:	add	x14, x14, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0xec>  // b.any
 100:	cmp	x11, x12
 104:	b.eq	11c <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x11c>  // b.none
 108:	ldr	q0, [x9]
 10c:	add	x8, x0, x8
 110:	str	q0, [x10], #24
 114:	cmp	x8, x10
 118:	b.ne	110 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj+0x110>  // b.any
 11c:	ldp	x20, x19, [sp, #32]
 120:	ldr	x21, [sp, #16]
 124:	ldp	x29, x30, [sp], #48
 128:	ret
 12c:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 130:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 134:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS4_EENS_6detail12DenseMapPairIS4_S6_EEE4growEj>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x15c                 	// #348
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x16c>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x11, x10, #0x18
  44:	cmp	x11, #0x18
  48:	adrp	x10, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
  4c:	b.cs	58 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x58>  // b.hs, b.nlast
  50:	mov	x11, x9
  54:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xa0>
  58:	mov	x12, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  5c:	movk	x12, #0xaaab
  60:	umulh	x11, x11, x12
  64:	ldr	q0, [x10]
  68:	lsr	x11, x11, #4
  6c:	add	x12, x11, #0x1
  70:	and	x13, x12, #0x1ffffffffffffffe
  74:	mov	w11, #0x18                  	// #24
  78:	madd	x11, x13, x11, x9
  7c:	mov	x14, x13
  80:	mov	x15, x9
  84:	str	q0, [x15]
  88:	stur	q0, [x15, #24]
  8c:	subs	x14, x14, #0x2
  90:	add	x15, x15, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x84>  // b.any
  98:	cmp	x12, x13
  9c:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xb8>  // b.none
  a0:	ldr	q0, [x10]
  a4:	mov	w10, #0x18                  	// #24
  a8:	madd	x8, x8, x10, x9
  ac:	str	q0, [x11], #24
  b0:	cmp	x8, x11
  b4:	b.ne	ac <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xac>  // b.any
  b8:	cmp	x20, x19
  bc:	b.ne	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xdc>  // b.any
  c0:	ldp	x20, x19, [sp, #32]
  c4:	ldr	x21, [sp, #16]
  c8:	ldp	x29, x30, [sp], #48
  cc:	ret
  d0:	add	x20, x20, #0x18
  d4:	cmp	x19, x20
  d8:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xc0>  // b.none
  dc:	ldr	x8, [x20]
  e0:	cmn	x8, #0x10
  e4:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x100>  // b.none
  e8:	cmn	x8, #0x8
  ec:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  f0:	ldr	w8, [x20, #8]
  f4:	cmn	w8, #0x1
  f8:	b.ne	10c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x10c>  // b.any
  fc:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 100:	ldr	w8, [x20, #8]
 104:	cmn	w8, #0x2
 108:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>  // b.none
 10c:	add	x2, x29, #0x18
 110:	mov	x0, x21
 114:	mov	x1, x20
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 11c:	tbnz	w0, #0, 14c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0x14c>
 120:	ldr	x8, [x29, #24]
 124:	ldr	x9, [x20]
 128:	str	x9, [x8]
 12c:	ldr	w9, [x20, #8]
 130:	str	w9, [x8, #8]
 134:	ldr	x9, [x20, #16]
 138:	str	x9, [x8, #16]
 13c:	ldr	w8, [x21, #16]
 140:	add	w8, w8, #0x1
 144:	str	w8, [x21, #16]
 148:	b	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_+0xd0>
 14c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 150:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 154:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x17a                 	// #378
 168:	bl	0 <__assert_fail>
 16c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 170:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 174:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_9TypedInitEjEPNS_18VarListElementInitENS_12DenseMapInfoIS5_EENS_6detail12DenseMapPairIS5_S7_EEEES5_S7_S9_SC_E18moveFromOldBucketsEPSC_SF_>
 178:	add	x0, x0, #0x0
 17c:	add	x1, x1, #0x0
 180:	add	x3, x3, #0x0
 184:	mov	w2, #0x15c                 	// #348
 188:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x22, #48]
  20:	ldr	x21, [x22, #32]
  24:	mov	x0, x2
  28:	mov	x19, x2
  2c:	mov	x1, x20
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	mov	x0, x19
  38:	mov	x1, x21
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	cbz	w20, 60 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>
  44:	add	x21, x22, #0x38
  48:	lsl	x20, x20, #3
  4c:	ldr	x1, [x21], #8
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	subs	x20, x20, #0x8
  5c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10VarDefInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x4c>  // b.any
  60:	ldp	x20, x19, [sp, #32]
  64:	ldp	x22, x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x23, xzr, x8, eq  // eq = none
  20:	ldr	w21, [x23, #48]
  24:	ldr	x22, [x23, #32]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x1, x21
  34:	mov	x20, x2
  38:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  3c:	mov	x0, x19
  40:	mov	x1, x22
  44:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  48:	cbz	w21, 68 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x68>
  4c:	add	x22, x23, #0x38
  50:	lsl	x21, x21, #3
  54:	ldr	x1, [x22], #8
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	subs	x21, x21, #0x8
  64:	b.ne	54 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x54>  // b.any
  68:	mov	x0, x19
  6c:	mov	x1, x20
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	x8, x1, #0x18
  14:	cmp	x1, #0x0
  18:	csel	x22, xzr, x8, eq  // eq = none
  1c:	ldr	w20, [x22, #48]
  20:	ldr	x21, [x22, #32]
  24:	mov	x0, x2
  28:	mov	x19, x2
  2c:	mov	x1, x20
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddIntegerEm>
  34:	mov	x0, x19
  38:	mov	x1, x21
  3c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  40:	cbz	w20, 60 <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x60>
  44:	add	x21, x22, #0x38
  48:	lsl	x20, x20, #3
  4c:	ldr	x1, [x21], #8
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	subs	x20, x20, #0x8
  5c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10VarDefInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x4c>  // b.any
  60:	mov	x0, x19
  64:	ldp	x20, x19, [sp, #32]
  68:	ldp	x22, x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb:

0000000000000000 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
  1c:	ldr	d0, [x8]
  20:	str	x1, [x0]
  24:	add	x1, x0, #0x18
  28:	sbfx	x24, x3, #0, #61
  2c:	mov	w19, w6
  30:	mov	w20, w5
  34:	mov	x22, x4
  38:	mov	x25, x3
  3c:	mov	x23, x2
  40:	mov	x21, x0
  44:	str	x1, [x0, #8]!
  48:	cmp	x24, #0x5
  4c:	str	d0, [x21, #16]
  50:	b.cc	60 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x60>  // b.lo, b.ul, b.last
  54:	mov	w3, #0x8                   	// #8
  58:	mov	x2, x24
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	cbz	x25, 7c <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x7c>
  64:	ldr	x8, [x21, #8]
  68:	ldr	w9, [x21, #16]
  6c:	lsl	x2, x25, #3
  70:	mov	x1, x23
  74:	add	x0, x8, x9, lsl #3
  78:	bl	0 <memcpy>
  7c:	ldp	w8, w9, [x21, #16]
  80:	add	x8, x24, x8
  84:	cmp	x8, x9
  88:	b.hi	104 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x104>  // b.pmore
  8c:	str	w8, [x21, #16]
  90:	mov	x8, x21
  94:	mov	x9, x21
  98:	str	x22, [x8, #104]!
  9c:	str	x8, [x9, #88]!
  a0:	adrp	x8, 78 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x78>
  a4:	ldr	x8, [x8]
  a8:	mov	x10, x21
  ac:	movi	v0.2d, #0x0
  b0:	str	x9, [x10, #72]!
  b4:	str	d0, [x21, #64]
  b8:	str	d0, [x21, #80]
  bc:	str	d0, [x21, #96]
  c0:	str	xzr, [x21, #112]
  c4:	str	x10, [x21, #56]
  c8:	ldr	w9, [x8]
  cc:	and	w10, w20, #0x1
  d0:	and	w11, w19, #0x1
  d4:	mov	x0, x21
  d8:	add	w12, w9, #0x1
  dc:	str	w12, [x8]
  e0:	str	w9, [x21, #120]
  e4:	strb	w10, [x21, #124]
  e8:	strb	w11, [x21, #125]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldr	x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	cd58 <_ZN4llvm6Record9checkNameEv>
 104:	adrp	x0, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 108:	adrp	x1, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 10c:	adrp	x3, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_:

0000000000000000 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w11, [x0, #24]
   c:	cbz	w11, b4 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xb4>
  10:	ldp	x8, x10, [x1]
  14:	ldr	x9, [x0, #8]
  18:	cmn	x8, #0x8
  1c:	b.ne	28 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x28>  // b.any
  20:	cmn	x10, #0x8
  24:	b.eq	140 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x140>  // b.none
  28:	cmn	x8, #0x10
  2c:	b.ne	38 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x38>  // b.any
  30:	cmn	x10, #0x10
  34:	b.eq	140 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x140>  // b.none
  38:	ubfx	x13, x8, #4, #28
  3c:	ubfx	x14, x10, #4, #28
  40:	mov	x15, #0xffffffffffffffff    	// #-1
  44:	sub	w12, w11, #0x1
  48:	eor	w11, w13, w8, lsr #9
  4c:	eor	w13, w14, w10, lsr #9
  50:	eor	x14, x15, x13, lsl #32
  54:	bfi	x13, x11, #32, #28
  58:	add	x11, x13, x14
  5c:	eor	x11, x11, x11, lsr #22
  60:	eor	x13, x15, x11, lsl #13
  64:	add	x11, x11, x13
  68:	eor	x11, x11, x11, lsr #8
  6c:	add	x11, x11, x11, lsl #3
  70:	eor	x11, x11, x11, lsr #15
  74:	eor	x13, x15, x11, lsl #27
  78:	add	x11, x11, x13
  7c:	lsr	x13, x11, #31
  80:	eor	w11, w13, w11
  84:	and	w14, w12, w11
  88:	mov	w13, #0x18                  	// #24
  8c:	umaddl	x11, w14, w13, x9
  90:	ldp	x16, x18, [x11]
  94:	cmp	x8, x16
  98:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.any
  9c:	cmp	x10, x18
  a0:	b.ne	c8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xc8>  // b.any
  a4:	mov	w0, #0x1                   	// #1
  a8:	str	x11, [x2]
  ac:	ldp	x29, x30, [sp], #16
  b0:	ret
  b4:	mov	x11, xzr
  b8:	mov	w0, wzr
  bc:	str	x11, [x2]
  c0:	ldp	x29, x30, [sp], #16
  c4:	ret
  c8:	mov	x15, xzr
  cc:	mov	w1, #0x1                   	// #1
  d0:	mov	x17, #0xfffffffffffffff0    	// #-16
  d4:	mov	w0, #0x1                   	// #1
  d8:	cmn	x16, #0x8
  dc:	b.ne	e8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xe8>  // b.any
  e0:	cmn	x18, #0x8
  e4:	b.eq	128 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0x128>  // b.none
  e8:	cmn	x18, #0x10
  ec:	add	w14, w14, w1
  f0:	ccmp	x16, x17, #0x0, eq  // eq = none
  f4:	and	w14, w14, w12
  f8:	ccmp	x15, #0x0, #0x0, eq  // eq = none
  fc:	csel	x15, x15, x11, ne  // ne = any
 100:	umaddl	x11, w14, w13, x9
 104:	ldp	x16, x18, [x11]
 108:	add	w3, w1, #0x1
 10c:	mov	w1, w3
 110:	cmp	x8, x16
 114:	b.ne	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd8>  // b.any
 118:	cmp	x10, x18
 11c:	mov	w1, w3
 120:	b.eq	a8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xa8>  // b.none
 124:	b	d8 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_+0xd8>
 128:	cmp	x15, #0x0
 12c:	mov	w0, wzr
 130:	csel	x11, x11, x15, eq  // eq = none
 134:	str	x11, [x2]
 138:	ldp	x29, x30, [sp], #16
 13c:	ret
 140:	adrp	x0, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 144:	adrp	x1, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 148:	adrp	x3, 0 <_ZNK4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E15LookupBucketForIS7_EEbRKT_RPKSE_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x252                 	// #594
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	ldr	w8, [x0, #16]
  14:	ldr	w1, [x0, #24]
  18:	ldr	x9, [x0]
  1c:	mov	x20, x2
  20:	lsl	w10, w8, #2
  24:	add	w10, w10, #0x4
  28:	add	w11, w1, w1, lsl #1
  2c:	mov	x19, x0
  30:	add	x9, x9, #0x1
  34:	cmp	w10, w11
  38:	str	x9, [x0]
  3c:	b.cs	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa0>  // b.hs, b.nlast
  40:	ldr	w9, [x19, #20]
  44:	mvn	w8, w8
  48:	add	w8, w1, w8
  4c:	sub	w8, w8, w9
  50:	cmp	w8, w1, lsr #3
  54:	b.ls	a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xa4>  // b.plast
  58:	cbz	x3, c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0xc4>
  5c:	ldr	w8, [x19, #16]
  60:	add	w8, w8, #0x1
  64:	str	w8, [x19, #16]
  68:	ldr	x8, [x3]
  6c:	cmn	x8, #0x8
  70:	b.ne	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x80>  // b.any
  74:	ldr	x8, [x3, #8]
  78:	cmn	x8, #0x8
  7c:	b.eq	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x8c>  // b.none
  80:	ldr	w8, [x19, #20]
  84:	sub	w8, w8, #0x1
  88:	str	w8, [x19, #20]
  8c:	ldp	x20, x19, [sp, #32]
  90:	ldp	x29, x30, [sp, #16]
  94:	mov	x0, x3
  98:	add	sp, sp, #0x30
  9c:	ret
  a0:	lsl	w1, w1, #1
  a4:	mov	x0, x19
  a8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  ac:	add	x2, sp, #0x8
  b0:	mov	x0, x19
  b4:	mov	x1, x20
  b8:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  bc:	ldr	x3, [sp, #8]
  c0:	cbnz	x3, 5c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_+0x5c>
  c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E20InsertIntoBucketImplIS7_EEPSE_RKS7_RKT_SI_>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x22f                 	// #559
  e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	130 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x130>  // b.any
  a0:	cbz	w8, 120 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	108 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x108>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	mov	x13, #0xfffffffffffffff8    	// #-8
  d8:	and	x11, x10, #0x1ffffffffffffffe
  dc:	madd	x9, x11, x12, x0
  e0:	dup	v0.2d, x13
  e4:	mov	x12, x11
  e8:	mov	x13, x0
  ec:	str	q0, [x13]
  f0:	stur	q0, [x13, #24]
  f4:	subs	x12, x12, #0x2
  f8:	add	x13, x13, #0x30
  fc:	b.ne	ec <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0xec>  // b.any
 100:	cmp	x10, x11
 104:	b.eq	120 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x120>  // b.none
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	add	x8, x0, x8
 110:	dup	v0.2d, x10
 114:	str	q0, [x9], #24
 118:	cmp	x8, x9
 11c:	b.ne	114 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj+0x114>  // b.any
 120:	ldp	x20, x19, [sp, #32]
 124:	ldr	x21, [sp, #16]
 128:	ldp	x29, x30, [sp], #48
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 134:	adrp	x1, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 138:	adrp	x3, 0 <_ZN4llvm8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS6_EENS_6detail12DenseMapPairIS6_S8_EEE4growEj>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0x15c                 	// #348
 14c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	str	xzr, [x0, #16]
  18:	sub	w9, w8, #0x1
  1c:	tst	w8, w9
  20:	b.ne	160 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x160>  // b.any
  24:	mov	x19, x2
  28:	mov	x20, x1
  2c:	mov	x21, x0
  30:	cbz	w8, 100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  34:	ldr	x9, [x21, #8]
  38:	mov	w10, #0x18                  	// #24
  3c:	mul	x10, x8, x10
  40:	sub	x10, x10, #0x18
  44:	cmp	x10, #0x18
  48:	b.cs	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x54>  // b.hs, b.nlast
  4c:	mov	x10, x9
  50:	b	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xa0>
  54:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  58:	movk	x11, #0xaaab
  5c:	umulh	x10, x10, x11
  60:	lsr	x10, x10, #4
  64:	add	x11, x10, #0x1
  68:	mov	w13, #0x18                  	// #24
  6c:	mov	x14, #0xfffffffffffffff8    	// #-8
  70:	and	x12, x11, #0x1ffffffffffffffe
  74:	madd	x10, x12, x13, x9
  78:	dup	v0.2d, x14
  7c:	mov	x13, x12
  80:	mov	x14, x9
  84:	str	q0, [x14]
  88:	stur	q0, [x14, #24]
  8c:	subs	x13, x13, #0x2
  90:	add	x14, x14, #0x30
  94:	b.ne	84 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x84>  // b.any
  98:	cmp	x11, x12
  9c:	b.eq	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>  // b.none
  a0:	mov	w11, #0x18                  	// #24
  a4:	mov	x12, #0xfffffffffffffff8    	// #-8
  a8:	madd	x8, x8, x11, x9
  ac:	dup	v0.2d, x12
  b0:	str	q0, [x10], #24
  b4:	cmp	x8, x10
  b8:	b.ne	b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xb0>  // b.any
  bc:	b	100 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x100>
  c0:	add	x2, x29, #0x18
  c4:	mov	x0, x21
  c8:	mov	x1, x20
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
  d0:	tbnz	w0, #0, 140 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x140>
  d4:	ldr	x8, [x29, #24]
  d8:	ldr	x9, [x20]
  dc:	str	x9, [x8]
  e0:	ldr	x9, [x20, #8]
  e4:	str	x9, [x8, #8]
  e8:	ldr	x9, [x20, #16]
  ec:	str	x9, [x8, #16]
  f0:	ldr	w8, [x21, #16]
  f4:	add	w8, w8, #0x1
  f8:	str	w8, [x21, #16]
  fc:	add	x20, x20, #0x18
 100:	cmp	x20, x19
 104:	b.eq	130 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x130>  // b.none
 108:	ldp	x9, x8, [x20]
 10c:	cmn	x9, #0x8
 110:	b.ne	11c <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0x11c>  // b.any
 114:	cmn	x8, #0x8
 118:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 11c:	cmn	x9, #0x10
 120:	b.ne	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>  // b.any
 124:	cmn	x8, #0x10
 128:	b.eq	fc <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xfc>  // b.none
 12c:	b	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_+0xc0>
 130:	ldp	x20, x19, [sp, #32]
 134:	ldr	x21, [sp, #16]
 138:	ldp	x29, x30, [sp], #48
 13c:	ret
 140:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 144:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 148:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x17a                 	// #378
 15c:	bl	0 <__assert_fail>
 160:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 164:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 168:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapISt4pairIPNS_4InitEPNS_10StringInitEEPNS_9FieldInitENS_12DenseMapInfoIS7_EENS_6detail12DenseMapPairIS7_S9_EEEES7_S9_SB_SE_E18moveFromOldBucketsEPSE_SH_>
 16c:	add	x0, x0, #0x0
 170:	add	x1, x1, #0x0
 174:	add	x3, x3, #0x0
 178:	mov	w2, #0x15c                 	// #348
 17c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x21, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x21, #40]
  24:	ldr	w22, [x21, #32]
  28:	mov	x0, x2
  2c:	mov	x19, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	cbz	w22, 6c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x6c>
  38:	add	x21, x21, #0x30
  3c:	lsl	x22, x22, #3
  40:	mov	x20, xzr
  44:	add	x23, x21, x22
  48:	ldr	x1, [x21, x20]
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	ldr	x1, [x23, x20]
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	add	x20, x20, #0x8
  64:	cmp	x22, x20
  68:	b.ne	48 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x48>  // b.any
  6c:	ldp	x20, x19, [sp, #48]
  70:	ldp	x22, x21, [sp, #32]
  74:	ldr	x23, [sp, #16]
  78:	ldp	x29, x30, [sp], #64
  7c:	ret

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x22, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x22, #40]
  24:	ldr	w23, [x22, #32]
  28:	mov	x0, x4
  2c:	mov	x19, x4
  30:	mov	x20, x2
  34:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  38:	cbz	w23, 70 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x70>
  3c:	add	x22, x22, #0x30
  40:	lsl	x23, x23, #3
  44:	mov	x21, xzr
  48:	add	x24, x22, x23
  4c:	ldr	x1, [x22, x21]
  50:	mov	x0, x19
  54:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  58:	ldr	x1, [x24, x21]
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  64:	add	x21, x21, #0x8
  68:	cmp	x23, x21
  6c:	b.ne	4c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_+0x4c>  // b.any
  70:	mov	x0, x19
  74:	mov	x1, x20
  78:	ldp	x20, x19, [sp, #48]
  7c:	ldp	x22, x21, [sp, #32]
  80:	ldp	x24, x23, [sp, #16]
  84:	ldp	x29, x30, [sp], #64
  88:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	sub	x8, x1, #0x18
  18:	cmp	x1, #0x0
  1c:	csel	x21, xzr, x8, eq  // eq = none
  20:	ldr	x1, [x21, #40]
  24:	ldr	w22, [x21, #32]
  28:	mov	x0, x2
  2c:	mov	x19, x2
  30:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  34:	cbz	w22, 6c <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x6c>
  38:	add	x21, x21, #0x30
  3c:	lsl	x22, x22, #3
  40:	mov	x20, xzr
  44:	add	x23, x21, x22
  48:	ldr	x1, [x21, x20]
  4c:	mov	x0, x19
  50:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  54:	ldr	x1, [x23, x20]
  58:	mov	x0, x19
  5c:	bl	0 <_ZN4llvm16FoldingSetNodeID10AddPointerEPKv>
  60:	add	x20, x20, #0x8
  64:	cmp	x22, x20
  68:	b.ne	48 <_ZNK4llvm10FoldingSetINS_10CondOpInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE+0x48>  // b.any
  6c:	mov	x0, x19
  70:	ldp	x20, x19, [sp, #48]
  74:	ldp	x22, x21, [sp, #32]
  78:	ldr	x23, [sp, #16]
  7c:	ldp	x29, x30, [sp], #64
  80:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	sub	x8, x1, #0x18
   4:	cmp	x1, #0x0
   8:	csel	x9, xzr, x8, eq  // eq = none
   c:	ldp	x1, x8, [x9, #32]
  10:	ldp	w4, w6, [x9, #48]
  14:	add	x3, x9, #0x38
  18:	mov	x0, x2
  1c:	mov	x2, x8
  20:	add	x5, x3, x4, lsl #3
  24:	b	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE14GetNodeProfileEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	mov	x19, x4
  1c:	ldp	w4, w6, [x8, #48]
  20:	mov	x20, x2
  24:	ldp	x1, x2, [x8, #32]
  28:	add	x3, x8, #0x38
  2c:	add	x5, x3, x4, lsl #3
  30:	mov	x0, x19
  34:	bl	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE10NodeEqualsEPNS_14FoldingSetBase4NodeERKNS_16FoldingSetNodeIDEjRS6_>
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	b	0 <_ZNK4llvm16FoldingSetNodeIDeqERKS0_>

Disassembly of section .text._ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE:

0000000000000000 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	sub	x8, x1, #0x18
  10:	cmp	x1, #0x0
  14:	csel	x8, xzr, x8, eq  // eq = none
  18:	ldp	w4, w6, [x8, #48]
  1c:	mov	x19, x2
  20:	ldp	x1, x2, [x8, #32]
  24:	add	x3, x8, #0x38
  28:	add	x5, x3, x4, lsl #3
  2c:	mov	x0, x19
  30:	bl	0 <_ZNK4llvm10FoldingSetINS_7DagInitEE15ComputeNodeHashEPNS_14FoldingSetBase4NodeERNS_16FoldingSetNodeIDE>
  34:	mov	x0, x19
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZNK4llvm16FoldingSetNodeID11ComputeHashEv>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	114 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x114>  // b.plast
  54:	cbz	x3, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w11, w11, w10
  c4:	add	x3, x9, w11, uxtw #4
  c8:	ldr	x13, [x3]
  cc:	cmp	x13, x8
  d0:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
  d4:	mov	x12, xzr
  d8:	mov	w15, #0x1                   	// #1
  dc:	mov	x14, #0xfffffffffffffff0    	// #-16
  e0:	cmn	x13, #0x8
  e4:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
  e8:	cmp	x12, #0x0
  ec:	add	w11, w11, w15
  f0:	ccmp	x13, x14, #0x0, eq  // eq = none
  f4:	and	w11, w11, w10
  f8:	csel	x12, x12, x3, ne  // ne = any
  fc:	add	x3, x9, w11, uxtw #4
 100:	ldr	x13, [x3]
 104:	add	w15, w15, #0x1
 108:	cmp	x13, x8
 10c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 110:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0xe0>
 114:	mov	x0, x19
 118:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 11c:	ldr	w10, [x19, #24]
 120:	cbz	w10, 1a4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1a4>
 124:	ldr	x8, [x20]
 128:	orr	x9, x8, #0x8
 12c:	cmn	x9, #0x8
 130:	b.eq	1c4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x1c4>  // b.none
 134:	ldr	x9, [x19, #8]
 138:	ubfx	x11, x8, #4, #28
 13c:	eor	w11, w11, w8, lsr #9
 140:	sub	w10, w10, #0x1
 144:	and	w11, w11, w10
 148:	add	x3, x9, w11, uxtw #4
 14c:	ldr	x13, [x3]
 150:	cmp	x13, x8
 154:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 158:	mov	x12, xzr
 15c:	mov	w15, #0x1                   	// #1
 160:	mov	x14, #0xfffffffffffffff0    	// #-16
 164:	cmn	x13, #0x8
 168:	b.eq	198 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x198>  // b.none
 16c:	cmp	x12, #0x0
 170:	add	w11, w11, w15
 174:	ccmp	x13, x14, #0x0, eq  // eq = none
 178:	and	w11, w11, w10
 17c:	csel	x12, x12, x3, ne  // ne = any
 180:	add	x3, x9, w11, uxtw #4
 184:	ldr	x13, [x3]
 188:	add	w15, w15, #0x1
 18c:	cmp	x13, x8
 190:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>  // b.none
 194:	b	164 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x164>
 198:	cmp	x12, #0x0
 19c:	csel	x3, x3, x12, eq  // eq = none
 1a0:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_+0x54>
 1a4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1a8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1ac:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1b0:	add	x0, x0, #0x0
 1b4:	add	x1, x1, #0x0
 1b8:	add	x3, x3, #0x0
 1bc:	mov	w2, #0x22f                 	// #559
 1c0:	bl	0 <__assert_fail>
 1c4:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1c8:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1cc:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E20InsertIntoBucketImplIS3_EEPS8_RKS3_RKT_SC_>
 1d0:	add	x0, x0, #0x0
 1d4:	add	x1, x1, #0x0
 1d8:	add	x3, x3, #0x0
 1dc:	mov	w2, #0x252                 	// #594
 1e0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	x19, x0
  4c:	str	w8, [x0, #24]
  50:	lsl	x0, x8, #4
  54:	bl	0 <_Znwm>
  58:	str	x0, [x19, #8]
  5c:	cbz	x20, 84 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x84>
  60:	add	x2, x20, x21, lsl #4
  64:	mov	x0, x19
  68:	mov	x1, x20
  6c:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
  70:	mov	x0, x20
  74:	ldp	x20, x19, [sp, #32]
  78:	ldr	x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZdlPv>
  84:	ldr	w8, [x19, #24]
  88:	str	xzr, [x19, #16]
  8c:	sub	w9, w8, #0x1
  90:	tst	w8, w9
  94:	b.ne	108 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0x108>  // b.any
  98:	cbz	w8, f8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  9c:	lsl	x8, x8, #4
  a0:	subs	x9, x8, #0x10
  a4:	b.eq	e0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe0>  // b.none
  a8:	lsr	x9, x9, #4
  ac:	add	x10, x9, #0x1
  b0:	and	x11, x10, #0x1ffffffffffffffe
  b4:	add	x12, x0, #0x10
  b8:	add	x9, x0, x11, lsl #4
  bc:	mov	x13, #0xfffffffffffffff8    	// #-8
  c0:	mov	x14, x11
  c4:	stur	x13, [x12, #-16]
  c8:	str	x13, [x12], #32
  cc:	subs	x14, x14, #0x2
  d0:	b.ne	c4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xc4>  // b.any
  d4:	cmp	x10, x11
  d8:	b.ne	e4 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xe4>  // b.any
  dc:	b	f8 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xf8>
  e0:	mov	x9, x0
  e4:	add	x8, x0, x8
  e8:	mov	x10, #0xfffffffffffffff8    	// #-8
  ec:	str	x10, [x9], #16
  f0:	cmp	x8, x9
  f4:	b.ne	ec <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj+0xec>  // b.any
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret
 108:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 10c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 110:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitES2_NS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S2_EEE4growEj>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x15c                 	// #348
 124:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w9, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w8, w9, #0x1
  14:	tst	w9, w8
  18:	b.ne	174 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x174>  // b.any
  1c:	cbz	w9, 80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  20:	ldr	x8, [x0, #8]
  24:	lsl	x10, x9, #4
  28:	subs	x10, x10, #0x10
  2c:	b.eq	68 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x68>  // b.none
  30:	lsr	x10, x10, #4
  34:	add	x11, x10, #0x1
  38:	and	x12, x11, #0x1ffffffffffffffe
  3c:	add	x13, x8, #0x10
  40:	add	x10, x8, x12, lsl #4
  44:	mov	x14, #0xfffffffffffffff8    	// #-8
  48:	mov	x15, x12
  4c:	stur	x14, [x13, #-16]
  50:	str	x14, [x13], #32
  54:	subs	x15, x15, #0x2
  58:	b.ne	4c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x4c>  // b.any
  5c:	cmp	x11, x12
  60:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x6c>  // b.any
  64:	b	80 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x80>
  68:	mov	x10, x8
  6c:	add	x8, x8, x9, lsl #4
  70:	mov	x11, #0xfffffffffffffff8    	// #-8
  74:	str	x11, [x10], #16
  78:	cmp	x8, x10
  7c:	b.ne	74 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x74>  // b.any
  80:	cmp	x1, x2
  84:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>  // b.none
  88:	cbz	w9, 9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>
  8c:	mov	w8, wzr
  90:	sub	w9, w9, #0x1
  94:	mov	x10, #0xfffffffffffffff0    	// #-16
  98:	b	e8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xe8>
  9c:	ldr	x8, [x1]
  a0:	orr	x8, x8, #0x8
  a4:	cmn	x8, #0x8
  a8:	b.ne	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x170>  // b.any
  ac:	add	x1, x1, #0x10
  b0:	cmp	x2, x1
  b4:	b.ne	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x9c>  // b.any
  b8:	ldp	x29, x30, [sp], #16
  bc:	ret
  c0:	cmp	x15, #0x0
  c4:	csel	x12, x13, x15, eq  // eq = none
  c8:	str	x11, [x12]
  cc:	ldr	x11, [x1, #8]
  d0:	add	w8, w8, #0x1
  d4:	str	x11, [x12, #8]
  d8:	str	w8, [x0, #16]
  dc:	add	x1, x1, #0x10
  e0:	cmp	x1, x2
  e4:	b.eq	b8 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xb8>  // b.none
  e8:	ldr	x11, [x1]
  ec:	orr	x12, x11, #0x8
  f0:	cmn	x12, #0x8
  f4:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xdc>  // b.none
  f8:	ldr	x12, [x0, #8]
  fc:	ubfx	x13, x11, #4, #28
 100:	eor	w13, w13, w11, lsr #9
 104:	and	w14, w13, w9
 108:	add	x13, x12, w14, uxtw #4
 10c:	ldr	x16, [x13]
 110:	cmp	x16, x11
 114:	b.eq	150 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x150>  // b.none
 118:	mov	x15, xzr
 11c:	mov	w17, #0x1                   	// #1
 120:	cmn	x16, #0x8
 124:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0xc0>  // b.none
 128:	cmp	x15, #0x0
 12c:	add	w14, w14, w17
 130:	ccmp	x16, x10, #0x0, eq  // eq = none
 134:	and	w14, w14, w9
 138:	csel	x15, x15, x13, ne  // ne = any
 13c:	add	x13, x12, w14, uxtw #4
 140:	ldr	x16, [x13]
 144:	add	w17, w17, #0x1
 148:	cmp	x16, x11
 14c:	b.ne	120 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_+0x120>  // b.any
 150:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 154:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 158:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 15c:	add	x0, x0, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0x17a                 	// #378
 16c:	bl	0 <__assert_fail>
 170:	brk	#0x1
 174:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 178:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 17c:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitES3_NS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S3_EEEES3_S3_S5_S8_E18moveFromOldBucketsEPS8_SB_>
 180:	add	x0, x0, #0x0
 184:	add	x1, x1, #0x0
 188:	add	x3, x3, #0x0
 18c:	mov	w2, #0x15c                 	// #348
 190:	bl	0 <__assert_fail>

Disassembly of section .text.startup:

0000000000000000 <_GLOBAL__sub_I_Record.cpp>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
  10:	ldr	d1, [x8]
  14:	adrp	x19, 0 <_GLOBAL__sub_I_Record.cpp>
  18:	add	x19, x19, #0x0
  1c:	adrp	x0, 0 <_GLOBAL__sub_I_Record.cpp>
  20:	adrp	x2, 0 <__dso_handle>
  24:	movi	v0.2d, #0x0
  28:	mov	w9, #0x1                   	// #1
  2c:	add	x1, x19, #0x178
  30:	add	x10, x19, #0x198
  34:	add	x8, x19, #0x1c8
  38:	add	x0, x0, #0x0
  3c:	add	x2, x2, #0x0
  40:	str	q0, [x1]
  44:	str	x10, [x19, #392]
  48:	str	x8, [x19, #440]
  4c:	str	q0, [x19, #448]
  50:	str	d1, [x19, #400]
  54:	str	x9, [x19, #464]
  58:	bl	0 <__cxa_atexit>
  5c:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
  60:	adrp	x9, 0 <_GLOBAL__sub_I_Record.cpp>
  64:	add	x8, x8, #0x0
  68:	add	x9, x9, #0x0
  6c:	stp	x8, x9, [x19]
  70:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
  74:	add	x8, x8, #0x0
  78:	str	wzr, [x19, #24]
  7c:	strb	wzr, [x19, #28]
  80:	str	x8, [x19, #16]
  84:	adrp	x8, 0 <_GLOBAL__sub_I_Record.cpp>
  88:	adrp	x9, b8 <_GLOBAL__sub_I_Record.cpp+0xb8>
  8c:	ldr	x8, [x8]
  90:	ldr	x9, [x9]
  94:	add	x9, x9, #0x10
  98:	str	x9, [x8]
  9c:	adrp	x9, 18 <_GLOBAL__sub_I_Record.cpp+0x18>
  a0:	ldr	x9, [x9]
  a4:	str	wzr, [x8, #8]
  a8:	str	xzr, [x8, #16]
  ac:	mov	w8, #0x2                   	// #2
  b0:	str	w8, [x9, #8]
  b4:	adrp	x8, 128 <_GLOBAL__sub_I_Record.cpp+0x128>
  b8:	ldr	x8, [x8]
  bc:	add	x8, x8, #0x10
  c0:	str	x8, [x9]
  c4:	adrp	x8, 30 <_GLOBAL__sub_I_Record.cpp+0x30>
  c8:	ldr	x8, [x8]
  cc:	str	xzr, [x9, #16]
  d0:	mov	w9, #0x3                   	// #3
  d4:	str	w9, [x8, #8]
  d8:	adrp	x9, 160 <_ZTVN4llvm8IntRecTyE>
  dc:	ldr	x9, [x9]
  e0:	add	x9, x9, #0x10
  e4:	str	x9, [x8]
  e8:	adrp	x9, 48 <_GLOBAL__sub_I_Record.cpp+0x48>
  ec:	ldr	x9, [x9]
  f0:	str	xzr, [x8, #16]
  f4:	mov	w8, #0x4                   	// #4
  f8:	str	w8, [x9, #8]
  fc:	adrp	x8, 198 <_ZTVN4llvm11StringRecTyE>
 100:	ldr	x8, [x8]
 104:	add	x8, x8, #0x10
 108:	str	x8, [x9]
 10c:	adrp	x8, 60 <_GLOBAL__sub_I_Record.cpp+0x60>
 110:	ldr	x8, [x8]
 114:	str	xzr, [x9, #16]
 118:	mov	w9, #0x6                   	// #6
 11c:	str	w9, [x8, #8]
 120:	adrp	x9, 208 <_ZTVN4llvm8DagRecTyE>
 124:	ldr	x9, [x9]
 128:	ldr	x19, [sp, #16]
 12c:	str	xzr, [x8, #16]
 130:	add	x9, x9, #0x10
 134:	str	x9, [x8]
 138:	ldp	x29, x30, [sp], #32
 13c:	ret

SetTheory.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm9SetTheory8Operator6anchorEv>:
       0:	ret

0000000000000004 <_ZN4llvm9SetTheory8Expander6anchorEv>:
       4:	ret

0000000000000008 <_ZN4llvm9SetTheoryC1Ev>:
       8:	stp	x29, x30, [sp, #-48]!
       c:	str	x21, [sp, #16]
      10:	stp	x20, x19, [sp, #32]
      14:	mov	x29, sp
      18:	str	wzr, [x0, #8]!
      1c:	mov	x8, #0x1000000000          	// #68719476736
      20:	mov	x19, x0
      24:	stp	xzr, x0, [x0, #8]
      28:	stp	x0, xzr, [x0, #24]
      2c:	str	xzr, [x19, #40]!
      30:	stp	xzr, x8, [x0, #48]
      34:	stp	xzr, xzr, [x0, #72]
      38:	str	x8, [x0, #88]
      3c:	mov	w0, #0x8                   	// #8
      40:	bl	0 <_Znwm>
      44:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      48:	add	x8, x8, #0x0
      4c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      50:	mov	x20, x0
      54:	str	x8, [x0]
      58:	add	x1, x1, #0x0
      5c:	mov	w2, #0x3                   	// #3
      60:	mov	x0, x19
      64:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      68:	ldr	x8, [x0]
      6c:	ldr	x0, [x8, #8]
      70:	str	x20, [x8, #8]
      74:	cbz	x0, 84 <_ZN4llvm9SetTheoryC1Ev+0x7c>
      78:	ldr	x8, [x0]
      7c:	ldr	x8, [x8, #16]
      80:	blr	x8
      84:	mov	w0, #0x8                   	// #8
      88:	bl	0 <_Znwm>
      8c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      90:	add	x8, x8, #0x0
      94:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      98:	mov	x20, x0
      9c:	str	x8, [x0]
      a0:	add	x1, x1, #0x0
      a4:	mov	w2, #0x3                   	// #3
      a8:	mov	x0, x19
      ac:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      b0:	ldr	x8, [x0]
      b4:	ldr	x0, [x8, #8]
      b8:	str	x20, [x8, #8]
      bc:	cbz	x0, cc <_ZN4llvm9SetTheoryC1Ev+0xc4>
      c0:	ldr	x8, [x0]
      c4:	ldr	x8, [x8, #16]
      c8:	blr	x8
      cc:	mov	w0, #0x8                   	// #8
      d0:	bl	0 <_Znwm>
      d4:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      d8:	add	x8, x8, #0x0
      dc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      e0:	mov	x20, x0
      e4:	str	x8, [x0]
      e8:	add	x1, x1, #0x0
      ec:	mov	w2, #0x3                   	// #3
      f0:	mov	x0, x19
      f4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
      f8:	ldr	x8, [x0]
      fc:	ldr	x0, [x8, #8]
     100:	str	x20, [x8, #8]
     104:	cbz	x0, 114 <_ZN4llvm9SetTheoryC1Ev+0x10c>
     108:	ldr	x8, [x0]
     10c:	ldr	x8, [x8, #16]
     110:	blr	x8
     114:	mov	w0, #0x8                   	// #8
     118:	bl	0 <_Znwm>
     11c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     120:	add	x8, x8, #0x0
     124:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     128:	mov	x20, x0
     12c:	str	x8, [x0]
     130:	add	x1, x1, #0x0
     134:	mov	w2, #0x3                   	// #3
     138:	mov	x0, x19
     13c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     140:	ldr	x8, [x0]
     144:	ldr	x0, [x8, #8]
     148:	str	x20, [x8, #8]
     14c:	cbz	x0, 15c <_ZN4llvm9SetTheoryC1Ev+0x154>
     150:	ldr	x8, [x0]
     154:	ldr	x8, [x8, #16]
     158:	blr	x8
     15c:	mov	w0, #0x8                   	// #8
     160:	bl	0 <_Znwm>
     164:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     168:	add	x8, x8, #0x0
     16c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     170:	mov	x20, x0
     174:	str	x8, [x0]
     178:	add	x1, x1, #0x0
     17c:	mov	w2, #0x5                   	// #5
     180:	mov	x0, x19
     184:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     188:	ldr	x8, [x0]
     18c:	ldr	x0, [x8, #8]
     190:	str	x20, [x8, #8]
     194:	cbz	x0, 1a4 <_ZN4llvm9SetTheoryC1Ev+0x19c>
     198:	ldr	x8, [x0]
     19c:	ldr	x8, [x8, #16]
     1a0:	blr	x8
     1a4:	mov	w0, #0x10                  	// #16
     1a8:	bl	0 <_Znwm>
     1ac:	adrp	x21, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1b0:	add	x21, x21, #0x0
     1b4:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1b8:	mov	x20, x0
     1bc:	str	x21, [x0]
     1c0:	strb	wzr, [x0, #8]
     1c4:	add	x1, x1, #0x0
     1c8:	mov	w2, #0x4                   	// #4
     1cc:	mov	x0, x19
     1d0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     1d4:	ldr	x8, [x0]
     1d8:	ldr	x0, [x8, #8]
     1dc:	str	x20, [x8, #8]
     1e0:	cbz	x0, 1f0 <_ZN4llvm9SetTheoryC1Ev+0x1e8>
     1e4:	ldr	x8, [x0]
     1e8:	ldr	x8, [x8, #16]
     1ec:	blr	x8
     1f0:	mov	w0, #0x10                  	// #16
     1f4:	bl	0 <_Znwm>
     1f8:	mov	w8, #0x1                   	// #1
     1fc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     200:	mov	x20, x0
     204:	str	x21, [x0]
     208:	strb	w8, [x0, #8]
     20c:	add	x1, x1, #0x0
     210:	mov	w2, #0x4                   	// #4
     214:	mov	x0, x19
     218:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     21c:	ldr	x8, [x0]
     220:	ldr	x0, [x8, #8]
     224:	str	x20, [x8, #8]
     228:	cbz	x0, 238 <_ZN4llvm9SetTheoryC1Ev+0x230>
     22c:	ldr	x8, [x0]
     230:	ldr	x8, [x8, #16]
     234:	blr	x8
     238:	mov	w0, #0x8                   	// #8
     23c:	bl	0 <_Znwm>
     240:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     244:	add	x8, x8, #0x0
     248:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     24c:	mov	x20, x0
     250:	str	x8, [x0]
     254:	add	x1, x1, #0x0
     258:	mov	w2, #0x8                   	// #8
     25c:	mov	x0, x19
     260:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     264:	ldr	x8, [x0]
     268:	ldr	x0, [x8, #8]
     26c:	str	x20, [x8, #8]
     270:	cbz	x0, 280 <_ZN4llvm9SetTheoryC1Ev+0x278>
     274:	ldr	x8, [x0]
     278:	ldr	x8, [x8, #16]
     27c:	blr	x8
     280:	mov	w0, #0x8                   	// #8
     284:	bl	0 <_Znwm>
     288:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     28c:	add	x8, x8, #0x0
     290:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     294:	mov	x20, x0
     298:	str	x8, [x0]
     29c:	add	x1, x1, #0x0
     2a0:	mov	w2, #0xa                   	// #10
     2a4:	mov	x0, x19
     2a8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2ac:	ldr	x8, [x0]
     2b0:	ldr	x0, [x8, #8]
     2b4:	str	x20, [x8, #8]
     2b8:	cbz	x0, 2c8 <_ZN4llvm9SetTheoryC1Ev+0x2c0>
     2bc:	ldr	x8, [x0]
     2c0:	ldr	x8, [x8, #16]
     2c4:	blr	x8
     2c8:	mov	w0, #0x8                   	// #8
     2cc:	bl	0 <_Znwm>
     2d0:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2d4:	add	x8, x8, #0x0
     2d8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2dc:	mov	x20, x0
     2e0:	str	x8, [x0]
     2e4:	add	x1, x1, #0x0
     2e8:	mov	w2, #0x8                   	// #8
     2ec:	mov	x0, x19
     2f0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     2f4:	ldr	x8, [x0]
     2f8:	ldr	x0, [x8, #8]
     2fc:	str	x20, [x8, #8]
     300:	cbz	x0, 31c <_ZN4llvm9SetTheoryC1Ev+0x314>
     304:	ldr	x8, [x0]
     308:	ldp	x20, x19, [sp, #32]
     30c:	ldr	x21, [sp, #16]
     310:	ldr	x1, [x8, #16]
     314:	ldp	x29, x30, [sp], #48
     318:	br	x1
     31c:	ldp	x20, x19, [sp, #32]
     320:	ldr	x21, [sp, #16]
     324:	ldp	x29, x30, [sp], #48
     328:	ret

000000000000032c <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE>:
     32c:	stp	x29, x30, [sp, #-32]!
     330:	str	x19, [sp, #16]
     334:	mov	x29, sp
     338:	add	x0, x0, #0x30
     33c:	mov	x19, x3
     340:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     344:	ldr	x8, [x0]
     348:	ldr	x9, [x19]
     34c:	str	xzr, [x19]
     350:	ldr	x0, [x8, #8]
     354:	str	x9, [x8, #8]
     358:	cbz	x0, 370 <_ZN4llvm9SetTheory11addOperatorENS_9StringRefESt10unique_ptrINS0_8OperatorESt14default_deleteIS3_EE+0x44>
     35c:	ldr	x8, [x0]
     360:	ldr	x19, [sp, #16]
     364:	ldr	x1, [x8, #16]
     368:	ldp	x29, x30, [sp], #32
     36c:	br	x1
     370:	ldr	x19, [sp, #16]
     374:	ldp	x29, x30, [sp], #32
     378:	ret

000000000000037c <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE>:
     37c:	stp	x29, x30, [sp, #-32]!
     380:	str	x19, [sp, #16]
     384:	mov	x29, sp
     388:	add	x0, x0, #0x50
     38c:	mov	x19, x3
     390:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     394:	ldr	x8, [x0]
     398:	ldr	x9, [x19]
     39c:	str	xzr, [x19]
     3a0:	ldr	x0, [x8, #8]
     3a4:	str	x9, [x8, #8]
     3a8:	cbz	x0, 3c0 <_ZN4llvm9SetTheory11addExpanderENS_9StringRefESt10unique_ptrINS0_8ExpanderESt14default_deleteIS3_EE+0x44>
     3ac:	ldr	x8, [x0]
     3b0:	ldr	x19, [sp, #16]
     3b4:	ldr	x1, [x8, #16]
     3b8:	ldp	x29, x30, [sp], #32
     3bc:	br	x1
     3c0:	ldr	x19, [sp, #16]
     3c4:	ldp	x29, x30, [sp], #32
     3c8:	ret

00000000000003cc <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_>:
     3cc:	stp	x29, x30, [sp, #-64]!
     3d0:	stp	x24, x23, [sp, #16]
     3d4:	stp	x22, x21, [sp, #32]
     3d8:	stp	x20, x19, [sp, #48]
     3dc:	mov	x29, sp
     3e0:	mov	x23, x0
     3e4:	mov	w0, #0x18                  	// #24
     3e8:	mov	x19, x4
     3ec:	mov	x20, x3
     3f0:	mov	x21, x2
     3f4:	mov	x22, x1
     3f8:	bl	0 <_Znwm>
     3fc:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     400:	add	x8, x8, #0x0
     404:	mov	x24, x0
     408:	stp	x20, x19, [x0, #8]
     40c:	str	x8, [x0]
     410:	add	x0, x23, #0x50
     414:	mov	x1, x22
     418:	mov	x2, x21
     41c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     420:	ldr	x8, [x0]
     424:	ldr	x0, [x8, #8]
     428:	str	x24, [x8, #8]
     42c:	cbz	x0, 44c <_ZN4llvm9SetTheory16addFieldExpanderENS_9StringRefES1_+0x80>
     430:	ldr	x8, [x0]
     434:	ldp	x20, x19, [sp, #48]
     438:	ldp	x22, x21, [sp, #32]
     43c:	ldp	x24, x23, [sp, #16]
     440:	ldr	x1, [x8, #16]
     444:	ldp	x29, x30, [sp], #64
     448:	br	x1
     44c:	ldp	x20, x19, [sp, #48]
     450:	ldp	x22, x21, [sp, #32]
     454:	ldp	x24, x23, [sp, #16]
     458:	ldp	x29, x30, [sp], #64
     45c:	ret

0000000000000460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>:
     460:	sub	sp, sp, #0xa0
     464:	stp	x29, x30, [sp, #96]
     468:	stp	x24, x23, [sp, #112]
     46c:	stp	x22, x21, [sp, #128]
     470:	stp	x20, x19, [sp, #144]
     474:	add	x29, sp, #0x60
     478:	cbz	x1, 6b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
     47c:	ldrb	w8, [x1, #8]
     480:	mov	x20, x4
     484:	mov	x21, x3
     488:	mov	x19, x2
     48c:	mov	x22, x1
     490:	mov	x23, x0
     494:	cmp	w8, #0x9
     498:	b.eq	540 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xe0>  // b.none
     49c:	cmp	w8, #0x6
     4a0:	b.ne	574 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x114>  // b.any
     4a4:	ldr	x1, [x22, #24]
     4a8:	mov	x0, x23
     4ac:	bl	79c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
     4b0:	cbz	x0, 610 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1b0>
     4b4:	ldp	x20, x23, [x0]
     4b8:	cmp	x20, x23
     4bc:	b.eq	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>  // b.none
     4c0:	add	x21, x19, #0x90
     4c4:	add	x22, x19, #0xa0
     4c8:	b	4d8 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x78>
     4cc:	add	x20, x20, #0x8
     4d0:	cmp	x23, x20
     4d4:	b.eq	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>  // b.none
     4d8:	sub	x8, x29, #0x28
     4dc:	mov	x2, sp
     4e0:	mov	x0, x19
     4e4:	mov	x1, x20
     4e8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     4ec:	ldurb	w8, [x29, #-8]
     4f0:	cbz	w8, 4cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6c>
     4f4:	ldp	w8, w9, [x19, #152]
     4f8:	cmp	w8, w9
     4fc:	b.cs	524 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xc4>  // b.hs, b.nlast
     500:	ldr	x9, [x19, #144]
     504:	ldr	x10, [x20]
     508:	str	x10, [x9, w8, uxtw #3]
     50c:	ldp	w8, w9, [x19, #152]
     510:	cmp	w8, w9
     514:	b.cs	694 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x234>  // b.hs, b.nlast
     518:	add	w8, w8, #0x1
     51c:	str	w8, [x19, #152]
     520:	b	4cc <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x6c>
     524:	mov	w3, #0x8                   	// #8
     528:	mov	x0, x21
     52c:	mov	x1, x22
     530:	mov	x2, xzr
     534:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     538:	ldr	w8, [x19, #152]
     53c:	b	500 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xa0>
     540:	ldr	w8, [x22, #32]
     544:	lsl	x24, x8, #3
     548:	cbz	x24, 660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     54c:	add	x22, x22, #0x28
     550:	ldr	x1, [x22], #8
     554:	mov	x0, x23
     558:	mov	x2, x19
     55c:	mov	x3, x21
     560:	mov	x4, x20
     564:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     568:	subs	x24, x24, #0x8
     56c:	b.ne	550 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0xf0>  // b.any
     570:	b	660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     574:	cmp	w8, #0x5
     578:	b.ne	6f4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x294>  // b.any
     57c:	ldr	x8, [x22, #32]
     580:	cbz	x8, 6b4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x254>
     584:	ldrb	w9, [x8, #8]
     588:	cmp	w9, #0x6
     58c:	b.ne	714 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2b4>  // b.any
     590:	ldr	x8, [x8, #24]
     594:	ldr	x8, [x8]
     598:	cbz	x8, 75c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2fc>
     59c:	ldrb	w9, [x8, #8]
     5a0:	cmp	w9, #0x12
     5a4:	b.ne	77c <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x31c>  // b.any
     5a8:	ldp	x1, x2, [x8, #24]
     5ac:	add	x24, x23, #0x30
     5b0:	mov	x0, x24
     5b4:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
     5b8:	cmn	w0, #0x1
     5bc:	b.eq	6d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x274>  // b.none
     5c0:	ldr	w9, [x23, #56]
     5c4:	sxtw	x8, w0
     5c8:	cmp	x8, x9
     5cc:	b.eq	6d4 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x274>  // b.none
     5d0:	ldr	x9, [x24]
     5d4:	mov	x1, x23
     5d8:	mov	x2, x22
     5dc:	mov	x3, x19
     5e0:	ldr	x8, [x9, x8, lsl #3]
     5e4:	mov	x4, x21
     5e8:	mov	x5, x20
     5ec:	ldp	x20, x19, [sp, #144]
     5f0:	ldr	x0, [x8, #8]
     5f4:	ldp	x22, x21, [sp, #128]
     5f8:	ldp	x24, x23, [sp, #112]
     5fc:	ldp	x29, x30, [sp, #96]
     600:	ldr	x8, [x0]
     604:	ldr	x6, [x8, #24]
     608:	add	sp, sp, #0xa0
     60c:	br	x6
     610:	ldr	x8, [x22, #24]
     614:	mov	x1, sp
     618:	add	x2, sp, #0x20
     61c:	mov	x0, x19
     620:	str	x8, [sp]
     624:	sub	x8, x29, #0x28
     628:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     62c:	ldurb	w8, [x29, #-8]
     630:	cbz	w8, 660 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x200>
     634:	ldp	w8, w9, [x19, #152]
     638:	cmp	w8, w9
     63c:	b.cs	678 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x218>  // b.hs, b.nlast
     640:	ldr	x9, [x19, #144]
     644:	ldr	x10, [sp]
     648:	str	x10, [x9, w8, uxtw #3]
     64c:	ldp	w8, w9, [x19, #152]
     650:	cmp	w8, w9
     654:	b.cs	694 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x234>  // b.hs, b.nlast
     658:	add	w8, w8, #0x1
     65c:	str	w8, [x19, #152]
     660:	ldp	x20, x19, [sp, #144]
     664:	ldp	x22, x21, [sp, #128]
     668:	ldp	x24, x23, [sp, #112]
     66c:	ldp	x29, x30, [sp, #96]
     670:	add	sp, sp, #0xa0
     674:	ret
     678:	add	x0, x19, #0x90
     67c:	add	x1, x0, #0x10
     680:	mov	w3, #0x8                   	// #8
     684:	mov	x2, xzr
     688:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     68c:	ldr	w8, [x19, #152]
     690:	b	640 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x1e0>
     694:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     698:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     69c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6a0:	add	x0, x0, #0x0
     6a4:	add	x1, x1, #0x0
     6a8:	add	x3, x3, #0x0
     6ac:	mov	w2, #0x43                  	// #67
     6b0:	bl	0 <__assert_fail>
     6b4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6b8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6bc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6c0:	add	x0, x0, #0x0
     6c4:	add	x1, x1, #0x0
     6c8:	add	x3, x3, #0x0
     6cc:	mov	w2, #0x69                  	// #105
     6d0:	bl	0 <__assert_fail>
     6d4:	ldr	x8, [x22]
     6d8:	mov	x0, x22
     6dc:	ldr	x9, [x8, #40]
     6e0:	mov	x8, sp
     6e4:	blr	x9
     6e8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     6ec:	add	x0, x0, #0x0
     6f0:	b	730 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d0>
     6f4:	ldr	x8, [x22]
     6f8:	mov	x0, x22
     6fc:	ldr	x9, [x8, #40]
     700:	mov	x8, sp
     704:	blr	x9
     708:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     70c:	add	x0, x0, #0x0
     710:	b	730 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE+0x2d0>
     714:	ldr	x8, [x22]
     718:	mov	x0, x22
     71c:	ldr	x9, [x8, #40]
     720:	mov	x8, sp
     724:	blr	x9
     728:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     72c:	add	x0, x0, #0x0
     730:	sub	x8, x29, #0x28
     734:	mov	x1, sp
     738:	sub	x19, x29, #0x28
     73c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     740:	mov	w8, #0x104                 	// #260
     744:	add	x2, sp, #0x20
     748:	mov	x0, x21
     74c:	mov	x1, x20
     750:	strh	w8, [sp, #48]
     754:	stp	x19, xzr, [sp, #32]
     758:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     75c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     760:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     764:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     768:	add	x0, x0, #0x0
     76c:	add	x1, x1, #0x0
     770:	add	x3, x3, #0x0
     774:	mov	w2, #0x69                  	// #105
     778:	bl	0 <__assert_fail>
     77c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     780:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     784:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     788:	add	x0, x0, #0x0
     78c:	add	x1, x1, #0x0
     790:	add	x3, x3, #0x0
     794:	mov	w2, #0x108                 	// #264
     798:	bl	0 <__assert_fail>

000000000000079c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>:
     79c:	sub	sp, sp, #0x170
     7a0:	stp	x29, x30, [sp, #304]
     7a4:	stp	x28, x23, [sp, #320]
     7a8:	stp	x22, x21, [sp, #336]
     7ac:	stp	x20, x19, [sp, #352]
     7b0:	add	x29, sp, #0x130
     7b4:	stur	x1, [x29, #-8]
     7b8:	ldr	x10, [x0, #16]
     7bc:	mov	x19, x0
     7c0:	cbz	x10, 810 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x74>
     7c4:	add	x8, x19, #0x8
     7c8:	mov	x9, x8
     7cc:	ldr	x11, [x10, #32]
     7d0:	add	x12, x10, #0x18
     7d4:	add	x13, x10, #0x10
     7d8:	cmp	x11, x1
     7dc:	csel	x9, x9, x10, cc  // cc = lo, ul, last
     7e0:	csel	x10, x12, x13, cc  // cc = lo, ul, last
     7e4:	ldr	x10, [x10]
     7e8:	cbnz	x10, 7cc <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x30>
     7ec:	cmp	x9, x8
     7f0:	b.eq	810 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x74>  // b.none
     7f4:	ldr	x10, [x9, #32]
     7f8:	cmp	x10, x1
     7fc:	csel	x9, x8, x9, hi  // hi = pmore
     800:	cmp	x9, x8
     804:	b.eq	810 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x74>  // b.none
     808:	add	x20, x9, #0x28
     80c:	b	958 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1bc>
     810:	ldr	w8, [x1, #96]
     814:	cbz	w8, 954 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1b8>
     818:	ldr	x22, [x1, #88]
     81c:	add	x8, x8, x8, lsl #1
     820:	add	x20, x19, #0x50
     824:	lsl	x23, x8, #3
     828:	b	838 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x9c>
     82c:	subs	x23, x23, #0x18
     830:	add	x22, x22, #0x18
     834:	b.eq	954 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1b8>  // b.none
     838:	ldr	x8, [x22]
     83c:	ldr	x8, [x8]
     840:	cbz	x8, 974 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1d8>
     844:	ldrb	w9, [x8, #8]
     848:	cmp	w9, #0x12
     84c:	b.ne	82c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x90>  // b.any
     850:	ldp	x1, x2, [x8, #24]
     854:	mov	x0, x20
     858:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
     85c:	cmn	w0, #0x1
     860:	b.eq	82c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x90>  // b.none
     864:	ldr	w8, [x19, #88]
     868:	sxtw	x21, w0
     86c:	cmp	x21, x8
     870:	b.eq	82c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x90>  // b.none
     874:	ldr	x20, [x19, #80]
     878:	sub	x1, x29, #0x8
     87c:	mov	x0, x19
     880:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     884:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     888:	ldr	d0, [x8]
     88c:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     890:	mov	x8, #0xfffffffffffffff8    	// #-8
     894:	str	xzr, [sp, #8]
     898:	str	d0, [sp, #16]
     89c:	ldr	d0, [x9]
     8a0:	add	x9, sp, #0x8
     8a4:	add	x22, x9, #0xa0
     8a8:	stp	x8, x8, [sp, #24]
     8ac:	stp	x8, x8, [sp, #40]
     8b0:	stp	x8, x8, [sp, #56]
     8b4:	stp	x8, x8, [sp, #72]
     8b8:	stp	x8, x8, [sp, #88]
     8bc:	stp	x8, x8, [sp, #104]
     8c0:	stp	x8, x8, [sp, #120]
     8c4:	stp	x8, x8, [sp, #136]
     8c8:	str	x22, [sp, #152]
     8cc:	str	d0, [sp, #160]
     8d0:	ldr	x8, [x20, x21, lsl #3]
     8d4:	ldur	x2, [x29, #-8]
     8d8:	mov	x20, x0
     8dc:	add	x3, sp, #0x8
     8e0:	ldr	x8, [x8, #8]
     8e4:	mov	x1, x19
     8e8:	ldr	x9, [x8]
     8ec:	mov	x0, x8
     8f0:	ldr	x9, [x9, #24]
     8f4:	blr	x9
     8f8:	ldr	x1, [sp, #152]
     8fc:	ldr	w8, [sp, #160]
     900:	mov	x0, x20
     904:	add	x2, x1, x8, lsl #3
     908:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     90c:	ldr	x0, [sp, #152]
     910:	cmp	x0, x22
     914:	b.eq	91c <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x180>  // b.none
     918:	bl	0 <free>
     91c:	ldrb	w8, [sp, #16]
     920:	tbnz	w8, #0, 958 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1bc>
     924:	ldr	x0, [sp, #24]
     928:	bl	0 <_ZdlPv>
     92c:	ldrb	w8, [sp, #16]
     930:	tbz	w8, #0, 958 <_ZN4llvm9SetTheory6expandEPNS_6RecordE+0x1bc>
     934:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     938:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     93c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     940:	add	x0, x0, #0x0
     944:	add	x1, x1, #0x0
     948:	add	x3, x3, #0x0
     94c:	mov	w2, #0x45b                 	// #1115
     950:	bl	0 <__assert_fail>
     954:	mov	x20, xzr
     958:	mov	x0, x20
     95c:	ldp	x20, x19, [sp, #352]
     960:	ldp	x22, x21, [sp, #336]
     964:	ldp	x28, x23, [sp, #320]
     968:	ldp	x29, x30, [sp, #304]
     96c:	add	sp, sp, #0x170
     970:	ret
     974:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     978:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     97c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     980:	add	x0, x0, #0x0
     984:	add	x1, x1, #0x0
     988:	add	x3, x3, #0x0
     98c:	mov	w2, #0x69                  	// #105
     990:	bl	0 <__assert_fail>

0000000000000994 <_ZN12_GLOBAL__N_15AddOpD0Ev>:
     994:	b	0 <_ZdlPv>

0000000000000998 <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     998:	stp	x29, x30, [sp, #-64]!
     99c:	stp	x24, x23, [sp, #16]
     9a0:	stp	x22, x21, [sp, #32]
     9a4:	stp	x20, x19, [sp, #48]
     9a8:	mov	x29, sp
     9ac:	ldr	w8, [x2, #48]
     9b0:	lsl	x23, x8, #3
     9b4:	cbz	x23, 9ec <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x54>
     9b8:	mov	x19, x5
     9bc:	mov	x20, x4
     9c0:	mov	x21, x3
     9c4:	mov	x22, x1
     9c8:	add	x24, x2, #0x38
     9cc:	ldr	x1, [x24], #8
     9d0:	mov	x0, x22
     9d4:	mov	x2, x21
     9d8:	mov	x3, x20
     9dc:	mov	x4, x19
     9e0:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     9e4:	subs	x23, x23, #0x8
     9e8:	b.ne	9cc <_ZN12_GLOBAL__N_15AddOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x34>  // b.any
     9ec:	ldp	x20, x19, [sp, #48]
     9f0:	ldp	x22, x21, [sp, #32]
     9f4:	ldp	x24, x23, [sp, #16]
     9f8:	ldp	x29, x30, [sp], #64
     9fc:	ret

0000000000000a00 <_ZN12_GLOBAL__N_15SubOpD0Ev>:
     a00:	b	0 <_ZdlPv>

0000000000000a04 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     a04:	stp	x29, x30, [sp, #-96]!
     a08:	str	x28, [sp, #16]
     a0c:	stp	x26, x25, [sp, #32]
     a10:	stp	x24, x23, [sp, #48]
     a14:	stp	x22, x21, [sp, #64]
     a18:	stp	x20, x19, [sp, #80]
     a1c:	mov	x29, sp
     a20:	sub	sp, sp, #0x270
     a24:	ldr	w8, [x2, #48]
     a28:	mov	x20, x5
     a2c:	mov	x21, x4
     a30:	mov	x23, x2
     a34:	cmp	w8, #0x1
     a38:	b.ls	cdc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d8>  // b.plast
     a3c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     a40:	ldr	d0, [x8]
     a44:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     a48:	ldr	d1, [x8]
     a4c:	add	x24, sp, #0x128
     a50:	add	x25, sp, #0x8
     a54:	add	x8, x24, #0xa0
     a58:	mov	x9, #0xfffffffffffffff8    	// #-8
     a5c:	str	x8, [sp, #440]
     a60:	add	x8, x25, #0xa0
     a64:	str	xzr, [sp, #296]
     a68:	str	xzr, [sp, #8]
     a6c:	stp	x9, x9, [sp, #312]
     a70:	stp	x9, x9, [sp, #328]
     a74:	stp	x9, x9, [sp, #344]
     a78:	stp	x9, x9, [sp, #360]
     a7c:	stp	x9, x9, [sp, #376]
     a80:	stp	x9, x9, [sp, #392]
     a84:	stp	x9, x9, [sp, #408]
     a88:	stp	x9, x9, [sp, #424]
     a8c:	stp	x9, x9, [sp, #24]
     a90:	stp	x9, x9, [sp, #40]
     a94:	stp	x9, x9, [sp, #56]
     a98:	stp	x9, x9, [sp, #72]
     a9c:	stp	x9, x9, [sp, #88]
     aa0:	stp	x9, x9, [sp, #104]
     aa4:	stp	x9, x9, [sp, #120]
     aa8:	stp	x9, x9, [sp, #136]
     aac:	str	x8, [sp, #152]
     ab0:	str	d0, [sp, #304]
     ab4:	str	d1, [sp, #448]
     ab8:	str	d0, [sp, #16]
     abc:	str	d1, [sp, #160]
     ac0:	mov	x22, x1
     ac4:	ldr	x1, [x23, #56]
     ac8:	mov	x19, x3
     acc:	add	x2, sp, #0x128
     ad0:	mov	x0, x22
     ad4:	mov	x3, x21
     ad8:	mov	x4, x20
     adc:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     ae0:	ldr	w8, [x23, #48]
     ae4:	lsl	x8, x8, #3
     ae8:	subs	x26, x8, #0x8
     aec:	b.eq	b14 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x110>  // b.none
     af0:	add	x23, x23, #0x40
     af4:	ldr	x1, [x23], #8
     af8:	add	x2, sp, #0x8
     afc:	mov	x0, x22
     b00:	mov	x3, x21
     b04:	mov	x4, x20
     b08:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     b0c:	subs	x26, x26, #0x8
     b10:	b.ne	af4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf0>  // b.any
     b14:	ldr	w8, [sp, #448]
     b18:	cbz	w8, c1c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x218>
     b1c:	ldr	x20, [sp, #440]
     b20:	add	x23, x25, #0x10
     b24:	add	x21, x19, #0x90
     b28:	add	x22, x19, #0xa0
     b2c:	add	x26, x20, x8, lsl #3
     b30:	b	b60 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x15c>
     b34:	cmn	x12, #0x8
     b38:	b.eq	bb4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b0>  // b.none
     b3c:	add	w11, w11, w13
     b40:	and	w11, w11, w10
     b44:	ldr	x12, [x9, w11, uxtw #3]
     b48:	add	w13, w13, #0x1
     b4c:	cmp	x12, x8
     b50:	b.ne	b34 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>  // b.any
     b54:	add	x20, x20, #0x8
     b58:	cmp	x20, x26
     b5c:	b.eq	c1c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x218>  // b.none
     b60:	ldrb	w9, [sp, #16]
     b64:	ldr	x8, [x20]
     b68:	tbnz	w9, #0, b7c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x178>
     b6c:	ldr	w10, [sp, #32]
     b70:	cbz	w10, bb4 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b0>
     b74:	ldr	x9, [sp, #24]
     b78:	b	b84 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x180>
     b7c:	mov	w10, #0x10                  	// #16
     b80:	mov	x9, x23
     b84:	orr	x11, x8, #0x8
     b88:	cmn	x11, #0x8
     b8c:	b.eq	c9c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x298>  // b.none
     b90:	ubfx	x11, x8, #4, #28
     b94:	eor	w11, w11, w8, lsr #9
     b98:	sub	w10, w10, #0x1
     b9c:	and	w11, w10, w11
     ba0:	ldr	x12, [x9, w11, uxtw #3]
     ba4:	cmp	x12, x8
     ba8:	b.eq	b54 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>  // b.none
     bac:	mov	w13, #0x1                   	// #1
     bb0:	b	b34 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>
     bb4:	sub	x8, x29, #0x28
     bb8:	add	x2, x29, #0x18
     bbc:	mov	x0, x19
     bc0:	mov	x1, x20
     bc4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     bc8:	ldurb	w8, [x29, #-8]
     bcc:	cbz	w8, b54 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
     bd0:	ldp	w8, w9, [x19, #152]
     bd4:	cmp	w8, w9
     bd8:	b.cs	c00 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>  // b.hs, b.nlast
     bdc:	ldr	x9, [x19, #144]
     be0:	ldr	x10, [x20]
     be4:	str	x10, [x9, w8, uxtw #3]
     be8:	ldp	w8, w9, [x19, #152]
     bec:	cmp	w8, w9
     bf0:	b.cs	cbc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b8>  // b.hs, b.nlast
     bf4:	add	w8, w8, #0x1
     bf8:	str	w8, [x19, #152]
     bfc:	b	b54 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x150>
     c00:	mov	w3, #0x8                   	// #8
     c04:	mov	x0, x21
     c08:	mov	x1, x22
     c0c:	mov	x2, xzr
     c10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     c14:	ldr	w8, [x19, #152]
     c18:	b	bdc <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1d8>
     c1c:	ldr	x0, [sp, #152]
     c20:	add	x8, x25, #0x90
     c24:	add	x8, x8, #0x10
     c28:	cmp	x0, x8
     c2c:	b.eq	c34 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x230>  // b.none
     c30:	bl	0 <free>
     c34:	ldrb	w8, [sp, #16]
     c38:	tbnz	w8, #0, c4c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x248>
     c3c:	ldr	x0, [sp, #24]
     c40:	bl	0 <_ZdlPv>
     c44:	ldrb	w8, [sp, #16]
     c48:	tbnz	w8, #0, d1c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x318>
     c4c:	ldr	x0, [sp, #440]
     c50:	add	x8, x24, #0x90
     c54:	add	x8, x8, #0x10
     c58:	cmp	x0, x8
     c5c:	b.eq	c64 <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x260>  // b.none
     c60:	bl	0 <free>
     c64:	ldrb	w8, [sp, #304]
     c68:	tbnz	w8, #0, c7c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x278>
     c6c:	ldr	x0, [sp, #312]
     c70:	bl	0 <_ZdlPv>
     c74:	ldrb	w8, [sp, #304]
     c78:	tbnz	w8, #0, d1c <_ZN12_GLOBAL__N_15SubOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x318>
     c7c:	add	sp, sp, #0x270
     c80:	ldp	x20, x19, [sp, #80]
     c84:	ldp	x22, x21, [sp, #64]
     c88:	ldp	x24, x23, [sp, #48]
     c8c:	ldp	x26, x25, [sp, #32]
     c90:	ldr	x28, [sp, #16]
     c94:	ldp	x29, x30, [sp], #96
     c98:	ret
     c9c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     ca0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     ca4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     ca8:	add	x0, x0, #0x0
     cac:	add	x1, x1, #0x0
     cb0:	add	x3, x3, #0x0
     cb4:	mov	w2, #0x252                 	// #594
     cb8:	bl	0 <__assert_fail>
     cbc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     cc0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     cc4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     cc8:	add	x0, x0, #0x0
     ccc:	add	x1, x1, #0x0
     cd0:	add	x3, x3, #0x0
     cd4:	mov	w2, #0x43                  	// #67
     cd8:	bl	0 <__assert_fail>
     cdc:	add	x8, sp, #0x8
     ce0:	mov	x0, x23
     ce4:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
     ce8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     cec:	add	x0, x0, #0x0
     cf0:	add	x8, sp, #0x128
     cf4:	add	x1, sp, #0x8
     cf8:	add	x19, sp, #0x128
     cfc:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d00:	mov	w8, #0x104                 	// #260
     d04:	sub	x2, x29, #0x28
     d08:	mov	x0, x21
     d0c:	mov	x1, x20
     d10:	sturh	w8, [x29, #-24]
     d14:	stp	x19, xzr, [x29, #-40]
     d18:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     d1c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d20:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d24:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d28:	add	x0, x0, #0x0
     d2c:	add	x1, x1, #0x0
     d30:	add	x3, x3, #0x0
     d34:	mov	w2, #0x45b                 	// #1115
     d38:	bl	0 <__assert_fail>

0000000000000d3c <_ZN12_GLOBAL__N_15AndOpD0Ev>:
     d3c:	b	0 <_ZdlPv>

0000000000000d40 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
     d40:	stp	x29, x30, [sp, #-96]!
     d44:	str	x28, [sp, #16]
     d48:	stp	x26, x25, [sp, #32]
     d4c:	stp	x24, x23, [sp, #48]
     d50:	stp	x22, x21, [sp, #64]
     d54:	stp	x20, x19, [sp, #80]
     d58:	mov	x29, sp
     d5c:	sub	sp, sp, #0x270
     d60:	ldr	w8, [x2, #48]
     d64:	mov	x20, x5
     d68:	mov	x21, x4
     d6c:	mov	x22, x2
     d70:	cmp	w8, #0x2
     d74:	b.ne	ffc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2bc>  // b.any
     d78:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d7c:	ldr	d0, [x8]
     d80:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     d84:	ldr	d1, [x8]
     d88:	add	x24, sp, #0x128
     d8c:	add	x25, sp, #0x8
     d90:	add	x8, x24, #0xa0
     d94:	mov	x9, #0xfffffffffffffff8    	// #-8
     d98:	str	x8, [sp, #440]
     d9c:	add	x8, x25, #0xa0
     da0:	str	xzr, [sp, #296]
     da4:	str	xzr, [sp, #8]
     da8:	stp	x9, x9, [sp, #312]
     dac:	stp	x9, x9, [sp, #328]
     db0:	stp	x9, x9, [sp, #344]
     db4:	stp	x9, x9, [sp, #360]
     db8:	stp	x9, x9, [sp, #376]
     dbc:	stp	x9, x9, [sp, #392]
     dc0:	stp	x9, x9, [sp, #408]
     dc4:	stp	x9, x9, [sp, #424]
     dc8:	stp	x9, x9, [sp, #24]
     dcc:	stp	x9, x9, [sp, #40]
     dd0:	stp	x9, x9, [sp, #56]
     dd4:	stp	x9, x9, [sp, #72]
     dd8:	stp	x9, x9, [sp, #88]
     ddc:	stp	x9, x9, [sp, #104]
     de0:	stp	x9, x9, [sp, #120]
     de4:	stp	x9, x9, [sp, #136]
     de8:	str	x8, [sp, #152]
     dec:	str	d0, [sp, #304]
     df0:	str	d1, [sp, #448]
     df4:	str	d0, [sp, #16]
     df8:	str	d1, [sp, #160]
     dfc:	mov	x23, x1
     e00:	ldr	x1, [x22, #56]
     e04:	mov	x19, x3
     e08:	add	x2, sp, #0x128
     e0c:	mov	x0, x23
     e10:	mov	x3, x21
     e14:	mov	x4, x20
     e18:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     e1c:	ldr	x1, [x22, #64]
     e20:	add	x2, sp, #0x8
     e24:	mov	x0, x23
     e28:	mov	x3, x21
     e2c:	mov	x4, x20
     e30:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
     e34:	ldr	w8, [sp, #448]
     e38:	cbz	w8, f3c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>
     e3c:	ldr	x20, [sp, #440]
     e40:	add	x23, x25, #0x10
     e44:	add	x21, x19, #0x90
     e48:	add	x22, x19, #0xa0
     e4c:	add	x26, x20, x8, lsl #3
     e50:	b	e60 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x120>
     e54:	add	x20, x20, #0x8
     e58:	cmp	x20, x26
     e5c:	b.eq	f3c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>  // b.none
     e60:	ldrb	w9, [sp, #16]
     e64:	ldr	x8, [x20]
     e68:	tbnz	w9, #0, e7c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x13c>
     e6c:	ldr	w10, [sp, #32]
     e70:	cbz	w10, e54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     e74:	ldr	x9, [sp, #24]
     e78:	b	e84 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x144>
     e7c:	mov	w10, #0x10                  	// #16
     e80:	mov	x9, x23
     e84:	orr	x11, x8, #0x8
     e88:	cmn	x11, #0x8
     e8c:	b.eq	fbc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x27c>  // b.none
     e90:	ubfx	x11, x8, #4, #28
     e94:	eor	w11, w11, w8, lsr #9
     e98:	sub	w10, w10, #0x1
     e9c:	and	w11, w10, w11
     ea0:	ldr	x12, [x9, w11, uxtw #3]
     ea4:	cmp	x12, x8
     ea8:	b.ne	ef8 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b8>  // b.any
     eac:	sub	x8, x29, #0x28
     eb0:	add	x2, x29, #0x18
     eb4:	mov	x0, x19
     eb8:	mov	x1, x20
     ebc:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     ec0:	ldurb	w8, [x29, #-8]
     ec4:	cbz	w8, e54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     ec8:	ldp	w8, w9, [x19, #152]
     ecc:	cmp	w8, w9
     ed0:	b.cs	f20 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1e0>  // b.hs, b.nlast
     ed4:	ldr	x9, [x19, #144]
     ed8:	ldr	x10, [x20]
     edc:	str	x10, [x9, w8, uxtw #3]
     ee0:	ldp	w8, w9, [x19, #152]
     ee4:	cmp	w8, w9
     ee8:	b.cs	fdc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>  // b.hs, b.nlast
     eec:	add	w8, w8, #0x1
     ef0:	str	w8, [x19, #152]
     ef4:	b	e54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
     ef8:	mov	w13, #0x1                   	// #1
     efc:	cmn	x12, #0x8
     f00:	b.eq	e54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>  // b.none
     f04:	add	w11, w11, w13
     f08:	and	w11, w11, w10
     f0c:	ldr	x12, [x9, w11, uxtw #3]
     f10:	add	w13, w13, #0x1
     f14:	cmp	x12, x8
     f18:	b.eq	eac <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x16c>  // b.none
     f1c:	b	efc <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1bc>
     f20:	mov	w3, #0x8                   	// #8
     f24:	mov	x0, x21
     f28:	mov	x1, x22
     f2c:	mov	x2, xzr
     f30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     f34:	ldr	w8, [x19, #152]
     f38:	b	ed4 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>
     f3c:	ldr	x0, [sp, #152]
     f40:	add	x8, x25, #0x90
     f44:	add	x8, x8, #0x10
     f48:	cmp	x0, x8
     f4c:	b.eq	f54 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x214>  // b.none
     f50:	bl	0 <free>
     f54:	ldrb	w8, [sp, #16]
     f58:	tbnz	w8, #0, f6c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x22c>
     f5c:	ldr	x0, [sp, #24]
     f60:	bl	0 <_ZdlPv>
     f64:	ldrb	w8, [sp, #16]
     f68:	tbnz	w8, #0, 103c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
     f6c:	ldr	x0, [sp, #440]
     f70:	add	x8, x24, #0x90
     f74:	add	x8, x8, #0x10
     f78:	cmp	x0, x8
     f7c:	b.eq	f84 <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x244>  // b.none
     f80:	bl	0 <free>
     f84:	ldrb	w8, [sp, #304]
     f88:	tbnz	w8, #0, f9c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x25c>
     f8c:	ldr	x0, [sp, #312]
     f90:	bl	0 <_ZdlPv>
     f94:	ldrb	w8, [sp, #304]
     f98:	tbnz	w8, #0, 103c <_ZN12_GLOBAL__N_15AndOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
     f9c:	add	sp, sp, #0x270
     fa0:	ldp	x20, x19, [sp, #80]
     fa4:	ldp	x22, x21, [sp, #64]
     fa8:	ldp	x24, x23, [sp, #48]
     fac:	ldp	x26, x25, [sp, #32]
     fb0:	ldr	x28, [sp, #16]
     fb4:	ldp	x29, x30, [sp], #96
     fb8:	ret
     fbc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fc0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fc4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fc8:	add	x0, x0, #0x0
     fcc:	add	x1, x1, #0x0
     fd0:	add	x3, x3, #0x0
     fd4:	mov	w2, #0x252                 	// #594
     fd8:	bl	0 <__assert_fail>
     fdc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fe0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fe4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
     fe8:	add	x0, x0, #0x0
     fec:	add	x1, x1, #0x0
     ff0:	add	x3, x3, #0x0
     ff4:	mov	w2, #0x43                  	// #67
     ff8:	bl	0 <__assert_fail>
     ffc:	add	x8, sp, #0x8
    1000:	mov	x0, x22
    1004:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1008:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    100c:	add	x0, x0, #0x0
    1010:	add	x8, sp, #0x128
    1014:	add	x1, sp, #0x8
    1018:	add	x19, sp, #0x128
    101c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1020:	mov	w8, #0x104                 	// #260
    1024:	sub	x2, x29, #0x28
    1028:	mov	x0, x21
    102c:	mov	x1, x20
    1030:	sturh	w8, [x29, #-24]
    1034:	stp	x19, xzr, [x29, #-40]
    1038:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    103c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1040:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1044:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1048:	add	x0, x0, #0x0
    104c:	add	x1, x1, #0x0
    1050:	add	x3, x3, #0x0
    1054:	mov	w2, #0x45b                 	// #1115
    1058:	bl	0 <__assert_fail>

000000000000105c <_ZN12_GLOBAL__N_15ShlOpD0Ev>:
    105c:	b	0 <_ZdlPv>

0000000000001060 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1060:	sub	sp, sp, #0x1d0
    1064:	stp	x29, x30, [sp, #384]
    1068:	stp	x28, x25, [sp, #400]
    106c:	stp	x24, x23, [sp, #416]
    1070:	stp	x22, x21, [sp, #432]
    1074:	stp	x20, x19, [sp, #448]
    1078:	add	x29, sp, #0x180
    107c:	ldr	w8, [x2, #48]
    1080:	mov	x19, x5
    1084:	mov	x20, x4
    1088:	mov	x21, x2
    108c:	cmp	w8, #0x2
    1090:	b.ne	1190 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x130>  // b.any
    1094:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1098:	ldr	d0, [x8]
    109c:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    10a0:	mov	x8, #0xfffffffffffffff8    	// #-8
    10a4:	add	x25, sp, #0x40
    10a8:	str	d0, [sp, #72]
    10ac:	ldr	d0, [x9]
    10b0:	stp	x8, x8, [sp, #80]
    10b4:	stp	x8, x8, [sp, #96]
    10b8:	stp	x8, x8, [sp, #112]
    10bc:	stp	x8, x8, [sp, #128]
    10c0:	stp	x8, x8, [sp, #144]
    10c4:	stp	x8, x8, [sp, #160]
    10c8:	stp	x8, x8, [sp, #176]
    10cc:	stp	x8, x8, [sp, #192]
    10d0:	add	x8, x25, #0xa0
    10d4:	str	xzr, [sp, #64]
    10d8:	str	x8, [sp, #208]
    10dc:	str	d0, [sp, #216]
    10e0:	mov	x23, x1
    10e4:	ldr	x1, [x21, #56]
    10e8:	mov	x22, x3
    10ec:	mov	x24, x0
    10f0:	add	x2, sp, #0x40
    10f4:	mov	x0, x23
    10f8:	mov	x3, x20
    10fc:	mov	x4, x19
    1100:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1104:	ldr	x8, [x21, #64]
    1108:	cbz	x8, 11c8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x168>
    110c:	ldrb	w9, [x8, #8]
    1110:	cmp	w9, #0x8
    1114:	b.ne	11e8 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x188>  // b.any
    1118:	ldr	x9, [x24]
    111c:	ldr	x4, [x8, #24]
    1120:	add	x3, sp, #0x40
    1124:	mov	x0, x24
    1128:	ldr	x8, [x9, #32]
    112c:	mov	x1, x23
    1130:	mov	x2, x21
    1134:	mov	x5, x22
    1138:	mov	x6, x20
    113c:	mov	x7, x19
    1140:	add	x25, x25, #0x90
    1144:	blr	x8
    1148:	ldr	x0, [sp, #208]
    114c:	add	x8, x25, #0x10
    1150:	cmp	x0, x8
    1154:	b.eq	115c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xfc>  // b.none
    1158:	bl	0 <free>
    115c:	ldrb	w8, [sp, #72]
    1160:	tbnz	w8, #0, 1174 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x114>
    1164:	ldr	x0, [sp, #80]
    1168:	bl	0 <_ZdlPv>
    116c:	ldrb	w8, [sp, #72]
    1170:	tbnz	w8, #0, 1228 <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1c8>
    1174:	ldp	x20, x19, [sp, #448]
    1178:	ldp	x22, x21, [sp, #432]
    117c:	ldp	x24, x23, [sp, #416]
    1180:	ldp	x28, x25, [sp, #400]
    1184:	ldp	x29, x30, [sp, #384]
    1188:	add	sp, sp, #0x1d0
    118c:	ret
    1190:	sub	x8, x29, #0x20
    1194:	mov	x0, x21
    1198:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    119c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11a0:	add	x0, x0, #0x0
    11a4:	add	x8, sp, #0x40
    11a8:	sub	x1, x29, #0x20
    11ac:	add	x21, sp, #0x40
    11b0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11b4:	mov	w8, #0x104                 	// #260
    11b8:	add	x2, sp, #0x8
    11bc:	strh	w8, [sp, #24]
    11c0:	stp	x21, xzr, [sp, #8]
    11c4:	b	121c <_ZN12_GLOBAL__N_111SetIntBinOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1bc>
    11c8:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11cc:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11d0:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11d4:	add	x0, x0, #0x0
    11d8:	add	x1, x1, #0x0
    11dc:	add	x3, x3, #0x0
    11e0:	mov	w2, #0x69                  	// #105
    11e4:	bl	0 <__assert_fail>
    11e8:	add	x8, sp, #0x8
    11ec:	mov	x0, x21
    11f0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    11f4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    11f8:	add	x0, x0, #0x0
    11fc:	sub	x8, x29, #0x20
    1200:	add	x1, sp, #0x8
    1204:	sub	x21, x29, #0x20
    1208:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    120c:	mov	w8, #0x104                 	// #260
    1210:	strh	w8, [sp, #56]
    1214:	stp	x21, xzr, [sp, #40]
    1218:	add	x2, sp, #0x28
    121c:	mov	x0, x20
    1220:	mov	x1, x19
    1224:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1228:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    122c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1230:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1234:	add	x0, x0, #0x0
    1238:	add	x1, x1, #0x0
    123c:	add	x3, x3, #0x0
    1240:	mov	w2, #0x45b                 	// #1115
    1244:	bl	0 <__assert_fail>

0000000000001248 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    1248:	sub	sp, sp, #0xa0
    124c:	stp	x29, x30, [sp, #96]
    1250:	str	x23, [sp, #112]
    1254:	stp	x22, x21, [sp, #128]
    1258:	stp	x20, x19, [sp, #144]
    125c:	add	x29, sp, #0x60
    1260:	tbnz	x4, #63, 1348 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x100>
    1264:	ldr	w8, [x3, #152]
    1268:	cmp	x8, w4, uxtw
    126c:	b.ls	1278 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x30>  // b.plast
    1270:	cmp	x8, x4
    1274:	b.ne	1290 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>  // b.any
    1278:	ldp	x20, x19, [sp, #144]
    127c:	ldp	x22, x21, [sp, #128]
    1280:	ldr	x23, [sp, #112]
    1284:	ldp	x29, x30, [sp, #96]
    1288:	add	sp, sp, #0xa0
    128c:	ret
    1290:	ldr	x9, [x3, #144]
    1294:	lsl	x10, x4, #3
    1298:	lsl	x8, x8, #3
    129c:	mov	x19, x5
    12a0:	add	x20, x5, #0x90
    12a4:	add	x21, x5, #0xa0
    12a8:	add	x22, x9, x10
    12ac:	sub	x23, x8, x10
    12b0:	b	12c0 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78>
    12b4:	subs	x23, x23, #0x8
    12b8:	add	x22, x22, #0x8
    12bc:	b.eq	1278 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x30>  // b.none
    12c0:	sub	x8, x29, #0x28
    12c4:	mov	x2, sp
    12c8:	mov	x0, x19
    12cc:	mov	x1, x22
    12d0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    12d4:	ldurb	w8, [x29, #-8]
    12d8:	cbz	w8, 12b4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    12dc:	ldp	w8, w9, [x19, #152]
    12e0:	cmp	w8, w9
    12e4:	b.cs	130c <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc4>  // b.hs, b.nlast
    12e8:	ldr	x9, [x19, #144]
    12ec:	ldr	x10, [x22]
    12f0:	str	x10, [x9, w8, uxtw #3]
    12f4:	ldp	w8, w9, [x19, #152]
    12f8:	cmp	w8, w9
    12fc:	b.cs	1328 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xe0>  // b.hs, b.nlast
    1300:	add	w8, w8, #0x1
    1304:	str	w8, [x19, #152]
    1308:	b	12b4 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    130c:	mov	w3, #0x8                   	// #8
    1310:	mov	x0, x20
    1314:	mov	x1, x21
    1318:	mov	x2, xzr
    131c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1320:	ldr	w8, [x19, #152]
    1324:	b	12e8 <_ZN12_GLOBAL__N_15ShlOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa0>
    1328:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    132c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1330:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1334:	add	x0, x0, #0x0
    1338:	add	x1, x1, #0x0
    133c:	add	x3, x3, #0x0
    1340:	mov	w2, #0x43                  	// #67
    1344:	bl	0 <__assert_fail>
    1348:	mov	x8, sp
    134c:	mov	x0, x2
    1350:	mov	x20, x7
    1354:	mov	x21, x6
    1358:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    135c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1360:	add	x0, x0, #0x0
    1364:	sub	x8, x29, #0x28
    1368:	mov	x1, sp
    136c:	sub	x19, x29, #0x28
    1370:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1374:	mov	w8, #0x104                 	// #260
    1378:	add	x2, sp, #0x20
    137c:	mov	x0, x21
    1380:	mov	x1, x20
    1384:	strh	w8, [sp, #48]
    1388:	stp	x19, xzr, [sp, #32]
    138c:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

0000000000001390 <_ZN12_GLOBAL__N_17TruncOpD0Ev>:
    1390:	b	0 <_ZdlPv>

0000000000001394 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    1394:	sub	sp, sp, #0xa0
    1398:	stp	x29, x30, [sp, #96]
    139c:	str	x23, [sp, #112]
    13a0:	stp	x22, x21, [sp, #128]
    13a4:	stp	x20, x19, [sp, #144]
    13a8:	add	x29, sp, #0x60
    13ac:	tbnz	x4, #63, 1484 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf0>
    13b0:	ldr	w8, [x3, #152]
    13b4:	cmp	x8, w4, uxtw
    13b8:	csel	x8, x8, x4, cc  // cc = lo, ul, last
    13bc:	cbz	x8, 144c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>
    13c0:	ldr	x20, [x3, #144]
    13c4:	mov	x19, x5
    13c8:	add	x21, x5, #0x90
    13cc:	add	x22, x5, #0xa0
    13d0:	lsl	x23, x8, #3
    13d4:	b	13e4 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x50>
    13d8:	subs	x23, x23, #0x8
    13dc:	add	x20, x20, #0x8
    13e0:	b.eq	144c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xb8>  // b.none
    13e4:	sub	x8, x29, #0x28
    13e8:	mov	x2, sp
    13ec:	mov	x0, x19
    13f0:	mov	x1, x20
    13f4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    13f8:	ldurb	w8, [x29, #-8]
    13fc:	cbz	w8, 13d8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
    1400:	ldp	w8, w9, [x19, #152]
    1404:	cmp	w8, w9
    1408:	b.cs	1430 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x9c>  // b.hs, b.nlast
    140c:	ldr	x9, [x19, #144]
    1410:	ldr	x10, [x20]
    1414:	str	x10, [x9, w8, uxtw #3]
    1418:	ldp	w8, w9, [x19, #152]
    141c:	cmp	w8, w9
    1420:	b.cs	1464 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xd0>  // b.hs, b.nlast
    1424:	add	w8, w8, #0x1
    1428:	str	w8, [x19, #152]
    142c:	b	13d8 <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x44>
    1430:	mov	w3, #0x8                   	// #8
    1434:	mov	x0, x21
    1438:	mov	x1, x22
    143c:	mov	x2, xzr
    1440:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1444:	ldr	w8, [x19, #152]
    1448:	b	140c <_ZN12_GLOBAL__N_17TruncOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x78>
    144c:	ldp	x20, x19, [sp, #144]
    1450:	ldp	x22, x21, [sp, #128]
    1454:	ldr	x23, [sp, #112]
    1458:	ldp	x29, x30, [sp, #96]
    145c:	add	sp, sp, #0xa0
    1460:	ret
    1464:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1468:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    146c:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1470:	add	x0, x0, #0x0
    1474:	add	x1, x1, #0x0
    1478:	add	x3, x3, #0x0
    147c:	mov	w2, #0x43                  	// #67
    1480:	bl	0 <__assert_fail>
    1484:	mov	x8, sp
    1488:	mov	x0, x2
    148c:	mov	x20, x7
    1490:	mov	x21, x6
    1494:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    1498:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    149c:	add	x0, x0, #0x0
    14a0:	sub	x8, x29, #0x28
    14a4:	mov	x1, sp
    14a8:	sub	x19, x29, #0x28
    14ac:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    14b0:	mov	w8, #0x104                 	// #260
    14b4:	add	x2, sp, #0x20
    14b8:	mov	x0, x21
    14bc:	mov	x1, x20
    14c0:	strh	w8, [sp, #48]
    14c4:	stp	x19, xzr, [sp, #32]
    14c8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

00000000000014cc <_ZN12_GLOBAL__N_15RotOpD0Ev>:
    14cc:	b	0 <_ZdlPv>

00000000000014d0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    14d0:	sub	sp, sp, #0x80
    14d4:	stp	x29, x30, [sp, #48]
    14d8:	str	x25, [sp, #64]
    14dc:	stp	x24, x23, [sp, #80]
    14e0:	stp	x22, x21, [sp, #96]
    14e4:	stp	x20, x19, [sp, #112]
    14e8:	add	x29, sp, #0x30
    14ec:	ldrb	w9, [x0, #8]
    14f0:	ldr	w8, [x3, #152]
    14f4:	cmp	w9, #0x0
    14f8:	cneg	x9, x4, ne  // ne = any
    14fc:	cbz	w8, 164c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>
    1500:	mov	x19, x5
    1504:	mov	x20, x3
    1508:	tbnz	x9, #63, 151c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x4c>
    150c:	ldr	x21, [x20, #144]!
    1510:	udiv	x10, x9, x8
    1514:	msub	x24, x10, x8, x9
    1518:	b	1534 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x64>
    151c:	neg	x9, x9
    1520:	ldr	x21, [x20, #144]!
    1524:	udiv	x10, x9, x8
    1528:	msub	x9, x10, x8, x9
    152c:	sub	x24, x8, x9
    1530:	cbz	x9, 15c4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf4>
    1534:	lsl	x9, x24, #3
    1538:	lsl	x8, x8, #3
    153c:	add	x22, x19, #0x90
    1540:	add	x23, x19, #0xa0
    1544:	add	x21, x21, x9
    1548:	sub	x25, x8, x9
    154c:	b	157c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>
    1550:	ldr	x9, [x19, #144]
    1554:	ldr	x10, [x21]
    1558:	str	x10, [x9, w8, uxtw #3]
    155c:	ldp	w8, w9, [x19, #152]
    1560:	cmp	w8, w9
    1564:	b.cs	1668 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x198>  // b.hs, b.nlast
    1568:	add	w8, w8, #0x1
    156c:	str	w8, [x19, #152]
    1570:	subs	x25, x25, #0x8
    1574:	add	x21, x21, #0x8
    1578:	b.eq	15c0 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xf0>  // b.none
    157c:	add	x8, sp, #0x8
    1580:	add	x2, x29, #0x18
    1584:	mov	x0, x19
    1588:	mov	x1, x21
    158c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1590:	ldrb	w8, [sp, #40]
    1594:	cbz	w8, 1570 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xa0>
    1598:	ldp	w8, w9, [x19, #152]
    159c:	cmp	w8, w9
    15a0:	b.cc	1550 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x80>  // b.lo, b.ul, b.last
    15a4:	mov	w3, #0x8                   	// #8
    15a8:	mov	x0, x22
    15ac:	mov	x1, x23
    15b0:	mov	x2, xzr
    15b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    15b8:	ldr	w8, [x19, #152]
    15bc:	b	1550 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x80>
    15c0:	ldr	x21, [x20]
    15c4:	cbz	x24, 164c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>
    15c8:	add	x20, x19, #0x90
    15cc:	add	x22, x19, #0xa0
    15d0:	lsl	x23, x24, #3
    15d4:	b	15e4 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x114>
    15d8:	subs	x23, x23, #0x8
    15dc:	add	x21, x21, #0x8
    15e0:	b.eq	164c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x17c>  // b.none
    15e4:	add	x8, sp, #0x8
    15e8:	add	x2, x29, #0x18
    15ec:	mov	x0, x19
    15f0:	mov	x1, x21
    15f4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    15f8:	ldrb	w8, [sp, #40]
    15fc:	cbz	w8, 15d8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x108>
    1600:	ldp	w8, w9, [x19, #152]
    1604:	cmp	w8, w9
    1608:	b.cs	1630 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x160>  // b.hs, b.nlast
    160c:	ldr	x9, [x19, #144]
    1610:	ldr	x10, [x21]
    1614:	str	x10, [x9, w8, uxtw #3]
    1618:	ldp	w8, w9, [x19, #152]
    161c:	cmp	w8, w9
    1620:	b.cs	1668 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x198>  // b.hs, b.nlast
    1624:	add	w8, w8, #0x1
    1628:	str	w8, [x19, #152]
    162c:	b	15d8 <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x108>
    1630:	mov	w3, #0x8                   	// #8
    1634:	mov	x0, x20
    1638:	mov	x1, x22
    163c:	mov	x2, xzr
    1640:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1644:	ldr	w8, [x19, #152]
    1648:	b	160c <_ZN12_GLOBAL__N_15RotOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x13c>
    164c:	ldp	x20, x19, [sp, #112]
    1650:	ldp	x22, x21, [sp, #96]
    1654:	ldp	x24, x23, [sp, #80]
    1658:	ldr	x25, [sp, #64]
    165c:	ldp	x29, x30, [sp, #48]
    1660:	add	sp, sp, #0x80
    1664:	ret
    1668:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    166c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1670:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1674:	add	x0, x0, #0x0
    1678:	add	x1, x1, #0x0
    167c:	add	x3, x3, #0x0
    1680:	mov	w2, #0x43                  	// #67
    1684:	bl	0 <__assert_fail>

0000000000001688 <_ZN12_GLOBAL__N_110DecimateOpD0Ev>:
    1688:	b	0 <_ZdlPv>

000000000000168c <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE>:
    168c:	sub	sp, sp, #0xb0
    1690:	stp	x29, x30, [sp, #96]
    1694:	str	x25, [sp, #112]
    1698:	stp	x24, x23, [sp, #128]
    169c:	stp	x22, x21, [sp, #144]
    16a0:	stp	x20, x19, [sp, #160]
    16a4:	add	x29, sp, #0x60
    16a8:	cmp	x4, #0x1
    16ac:	b.lt	1790 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x104>  // b.tstop
    16b0:	ldr	w8, [x3, #152]
    16b4:	mov	x21, x3
    16b8:	cbz	w8, 1754 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>
    16bc:	mov	x19, x5
    16c0:	mov	x20, x4
    16c4:	mov	x25, xzr
    16c8:	add	x22, x5, #0x90
    16cc:	add	x23, x5, #0xa0
    16d0:	b	16e4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x58>
    16d4:	ldr	w8, [x21, #152]
    16d8:	add	w25, w25, w20
    16dc:	cmp	x25, x8
    16e0:	b.cs	1754 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xc8>  // b.hs, b.nlast
    16e4:	ldr	x8, [x21, #144]
    16e8:	mov	x2, sp
    16ec:	mov	x0, x19
    16f0:	add	x24, x8, x25, lsl #3
    16f4:	sub	x8, x29, #0x28
    16f8:	mov	x1, x24
    16fc:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1700:	ldurb	w8, [x29, #-8]
    1704:	cbz	w8, 16d4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    1708:	ldp	w8, w9, [x19, #152]
    170c:	cmp	w8, w9
    1710:	b.cs	1738 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xac>  // b.hs, b.nlast
    1714:	ldr	x9, [x19, #144]
    1718:	ldr	x10, [x24]
    171c:	str	x10, [x9, w8, uxtw #3]
    1720:	ldp	w8, w9, [x19, #152]
    1724:	cmp	w8, w9
    1728:	b.cs	1770 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0xe4>  // b.hs, b.nlast
    172c:	add	w8, w8, #0x1
    1730:	str	w8, [x19, #152]
    1734:	b	16d4 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x48>
    1738:	mov	w3, #0x8                   	// #8
    173c:	mov	x0, x22
    1740:	mov	x1, x23
    1744:	mov	x2, xzr
    1748:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    174c:	ldr	w8, [x19, #152]
    1750:	b	1714 <_ZN12_GLOBAL__N_110DecimateOp6apply2ERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEElSA_NS1_8ArrayRefINS1_5SMLocEEE+0x88>
    1754:	ldp	x20, x19, [sp, #160]
    1758:	ldp	x22, x21, [sp, #144]
    175c:	ldp	x24, x23, [sp, #128]
    1760:	ldr	x25, [sp, #112]
    1764:	ldp	x29, x30, [sp, #96]
    1768:	add	sp, sp, #0xb0
    176c:	ret
    1770:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1774:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1778:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    177c:	add	x0, x0, #0x0
    1780:	add	x1, x1, #0x0
    1784:	add	x3, x3, #0x0
    1788:	mov	w2, #0x43                  	// #67
    178c:	bl	0 <__assert_fail>
    1790:	mov	x8, sp
    1794:	mov	x0, x2
    1798:	mov	x22, x7
    179c:	mov	x23, x6
    17a0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    17a4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    17a8:	add	x0, x0, #0x0
    17ac:	sub	x8, x29, #0x28
    17b0:	mov	x1, sp
    17b4:	sub	x19, x29, #0x28
    17b8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    17bc:	mov	w8, #0x104                 	// #260
    17c0:	add	x2, sp, #0x20
    17c4:	mov	x0, x23
    17c8:	mov	x1, x22
    17cc:	strh	w8, [sp, #48]
    17d0:	stp	x19, xzr, [sp, #32]
    17d4:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

00000000000017d8 <_ZN12_GLOBAL__N_112InterleaveOpD0Ev>:
    17d8:	b	0 <_ZdlPv>

00000000000017dc <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    17dc:	stp	x29, x30, [sp, #-96]!
    17e0:	stp	x28, x27, [sp, #16]
    17e4:	stp	x26, x25, [sp, #32]
    17e8:	stp	x24, x23, [sp, #48]
    17ec:	stp	x22, x21, [sp, #64]
    17f0:	stp	x20, x19, [sp, #80]
    17f4:	mov	x29, sp
    17f8:	sub	sp, sp, #0x5c0
    17fc:	movi	v0.2d, #0x0
    1800:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1804:	mov	x23, x1
    1808:	ldr	w1, [x2, #48]
    180c:	stp	q0, q0, [sp, #256]
    1810:	stp	q0, q0, [sp, #224]
    1814:	stp	q0, q0, [sp, #192]
    1818:	stp	q0, q0, [sp, #160]
    181c:	stp	q0, q0, [sp, #128]
    1820:	stp	q0, q0, [sp, #96]
    1824:	stp	q0, q0, [sp, #64]
    1828:	stp	q0, q0, [sp, #32]
    182c:	stp	q0, q0, [sp]
    1830:	ldr	d0, [x9]
    1834:	mov	x9, #0xfffffffffffffff8    	// #-8
    1838:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    183c:	stp	x9, x9, [sp, #16]
    1840:	stp	x9, x9, [sp, #32]
    1844:	stp	x9, x9, [sp, #48]
    1848:	stp	x9, x9, [sp, #64]
    184c:	stp	x9, x9, [sp, #80]
    1850:	stp	x9, x9, [sp, #96]
    1854:	stp	x9, x9, [sp, #112]
    1858:	stp	x9, x9, [sp, #128]
    185c:	adrp	x9, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1860:	ldr	d1, [x8]
    1864:	str	d0, [sp, #152]
    1868:	ldr	d0, [x9]
    186c:	mov	x8, sp
    1870:	add	x9, sp, #0x120
    1874:	mov	x20, x2
    1878:	add	x24, x8, #0xa0
    187c:	add	x8, x9, #0x10
    1880:	add	x0, sp, #0x120
    1884:	mov	x2, sp
    1888:	mov	x21, x5
    188c:	mov	x22, x4
    1890:	mov	x19, x3
    1894:	str	d1, [sp, #8]
    1898:	str	x24, [sp, #144]
    189c:	str	x8, [sp, #288]
    18a0:	str	d0, [sp, #296]
    18a4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    18a8:	ldr	x0, [sp, #144]
    18ac:	cmp	x0, x24
    18b0:	b.eq	18b8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xdc>  // b.none
    18b4:	bl	0 <free>
    18b8:	ldrb	w8, [sp, #8]
    18bc:	tbnz	w8, #0, 18d0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf4>
    18c0:	ldr	x0, [sp, #16]
    18c4:	bl	0 <_ZdlPv>
    18c8:	ldrb	w8, [sp, #8]
    18cc:	tbnz	w8, #0, 1ab4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2d8>
    18d0:	ldr	w8, [x20, #48]
    18d4:	cbz	w8, 1a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    18d8:	mov	w25, wzr
    18dc:	mov	x24, xzr
    18e0:	add	x26, x20, #0x38
    18e4:	sub	x27, x8, #0x1
    18e8:	mov	w28, #0x98                  	// #152
    18ec:	ldr	w8, [sp, #296]
    18f0:	cmp	x24, x8
    18f4:	b.cs	1b10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    18f8:	ldr	x8, [sp, #288]
    18fc:	ldr	x1, [x26, x24, lsl #3]
    1900:	mov	x0, x23
    1904:	mov	x3, x22
    1908:	add	x8, x8, x28
    190c:	sub	x2, x8, #0x98
    1910:	mov	x4, x21
    1914:	bl	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>
    1918:	ldr	w8, [sp, #296]
    191c:	cmp	x24, x8
    1920:	b.cs	1b10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    1924:	ldr	x8, [sp, #288]
    1928:	ldr	w8, [x8, x28]
    192c:	cmp	w25, w8
    1930:	csel	w25, w8, w25, cc  // cc = lo, ul, last
    1934:	cmp	x27, x24
    1938:	b.eq	1970 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x194>  // b.none
    193c:	ldr	w8, [x20, #48]
    1940:	add	x24, x24, #0x1
    1944:	add	x28, x28, #0x120
    1948:	cmp	x24, x8
    194c:	b.cc	18ec <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x110>  // b.lo, b.ul, b.last
    1950:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1954:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1958:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    195c:	add	x0, x0, #0x0
    1960:	add	x1, x1, #0x0
    1964:	add	x3, x3, #0x0
    1968:	mov	w2, #0x540                 	// #1344
    196c:	bl	0 <__assert_fail>
    1970:	cbz	w25, 1a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>
    1974:	mov	x24, xzr
    1978:	add	x21, x19, #0x90
    197c:	add	x22, x19, #0xa0
    1980:	mov	w25, w25
    1984:	b	1994 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1b8>
    1988:	add	x24, x24, #0x1
    198c:	cmp	x24, x25
    1990:	b.eq	1a44 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x268>  // b.none
    1994:	ldr	w26, [x20, #48]
    1998:	cbz	w26, 1988 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ac>
    199c:	mov	x27, xzr
    19a0:	mov	w28, #0x98                  	// #152
    19a4:	b	19d8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1fc>
    19a8:	ldr	x9, [x19, #144]
    19ac:	ldr	x10, [x23]
    19b0:	str	x10, [x9, w8, uxtw #3]
    19b4:	ldp	w8, w9, [x19, #152]
    19b8:	cmp	w8, w9
    19bc:	b.cs	1b30 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>  // b.hs, b.nlast
    19c0:	add	w8, w8, #0x1
    19c4:	str	w8, [x19, #152]
    19c8:	add	x27, x27, #0x1
    19cc:	cmp	x26, x27
    19d0:	add	x28, x28, #0x120
    19d4:	b.eq	1988 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ac>  // b.none
    19d8:	ldr	w8, [sp, #296]
    19dc:	cmp	x27, x8
    19e0:	b.cs	1b10 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x334>  // b.hs, b.nlast
    19e4:	ldr	x8, [sp, #288]
    19e8:	ldr	w9, [x8, x28]
    19ec:	cmp	x24, x9
    19f0:	b.cs	19c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ec>  // b.hs, b.nlast
    19f4:	add	x8, x8, x28
    19f8:	ldur	x8, [x8, #-8]
    19fc:	sub	x2, x29, #0x10
    1a00:	mov	x0, x19
    1a04:	add	x23, x8, x24, lsl #3
    1a08:	mov	x8, sp
    1a0c:	mov	x1, x23
    1a10:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1a14:	ldrb	w8, [sp, #32]
    1a18:	cbz	w8, 19c8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1ec>
    1a1c:	ldp	w8, w9, [x19, #152]
    1a20:	cmp	w8, w9
    1a24:	b.cc	19a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1cc>  // b.lo, b.ul, b.last
    1a28:	mov	w3, #0x8                   	// #8
    1a2c:	mov	x0, x21
    1a30:	mov	x1, x22
    1a34:	mov	x2, xzr
    1a38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1a3c:	ldr	w8, [x19, #152]
    1a40:	b	19a8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x1cc>
    1a44:	ldr	w8, [sp, #296]
    1a48:	ldr	x19, [sp, #288]
    1a4c:	cbz	w8, 1ad8 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2fc>
    1a50:	add	x8, x8, x8, lsl #3
    1a54:	lsl	x20, x8, #5
    1a58:	b	1a78 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x29c>
    1a5c:	add	x8, x19, x20
    1a60:	sub	x8, x8, #0x120
    1a64:	ldr	x9, [x8]
    1a68:	subs	x20, x20, #0x120
    1a6c:	add	x9, x9, #0x1
    1a70:	str	x9, [x8]
    1a74:	b.eq	1ad4 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2f8>  // b.none
    1a78:	add	x21, x19, x20
    1a7c:	ldur	x0, [x21, #-144]
    1a80:	sub	x8, x21, #0x80
    1a84:	cmp	x8, x0
    1a88:	b.eq	1a90 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b4>  // b.none
    1a8c:	bl	0 <free>
    1a90:	sub	x21, x21, #0x118
    1a94:	ldrb	w8, [x21]
    1a98:	tbnz	w8, #0, 1a5c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x280>
    1a9c:	add	x8, x19, x20
    1aa0:	sub	x8, x8, #0x110
    1aa4:	ldr	x0, [x8]
    1aa8:	bl	0 <_ZdlPv>
    1aac:	ldrb	w8, [x21]
    1ab0:	tbz	w8, #0, 1a5c <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x280>
    1ab4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1ab8:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1abc:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1ac0:	add	x0, x0, #0x0
    1ac4:	add	x1, x1, #0x0
    1ac8:	add	x3, x3, #0x0
    1acc:	mov	w2, #0x45b                 	// #1115
    1ad0:	bl	0 <__assert_fail>
    1ad4:	ldr	x19, [sp, #288]
    1ad8:	add	x8, sp, #0x120
    1adc:	add	x8, x8, #0x10
    1ae0:	cmp	x19, x8
    1ae4:	b.eq	1af0 <_ZN12_GLOBAL__N_112InterleaveOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x314>  // b.none
    1ae8:	mov	x0, x19
    1aec:	bl	0 <free>
    1af0:	add	sp, sp, #0x5c0
    1af4:	ldp	x20, x19, [sp, #80]
    1af8:	ldp	x22, x21, [sp, #64]
    1afc:	ldp	x24, x23, [sp, #48]
    1b00:	ldp	x26, x25, [sp, #32]
    1b04:	ldp	x28, x27, [sp, #16]
    1b08:	ldp	x29, x30, [sp], #96
    1b0c:	ret
    1b10:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b14:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b18:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b1c:	add	x0, x0, #0x0
    1b20:	add	x1, x1, #0x0
    1b24:	add	x3, x3, #0x0
    1b28:	mov	w2, #0x95                  	// #149
    1b2c:	bl	0 <__assert_fail>
    1b30:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b34:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b38:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1b3c:	add	x0, x0, #0x0
    1b40:	add	x1, x1, #0x0
    1b44:	add	x3, x3, #0x0
    1b48:	mov	w2, #0x43                  	// #67
    1b4c:	bl	0 <__assert_fail>

0000000000001b50 <_ZN12_GLOBAL__N_110SequenceOpD0Ev>:
    1b50:	b	0 <_ZdlPv>

0000000000001b54 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE>:
    1b54:	sub	sp, sp, #0x1f0
    1b58:	stp	x29, x30, [sp, #400]
    1b5c:	stp	x28, x27, [sp, #416]
    1b60:	stp	x26, x25, [sp, #432]
    1b64:	stp	x24, x23, [sp, #448]
    1b68:	stp	x22, x21, [sp, #464]
    1b6c:	stp	x20, x19, [sp, #480]
    1b70:	add	x29, sp, #0x190
    1b74:	ldr	w8, [x2, #48]
    1b78:	mov	x21, x5
    1b7c:	mov	x23, x4
    1b80:	mov	x27, x2
    1b84:	cmp	w8, #0x5
    1b88:	sub	x19, x29, #0xa0
    1b8c:	str	x1, [sp, #96]
    1b90:	b.cs	211c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5c8>  // b.hs, b.nlast
    1b94:	mov	x22, x3
    1b98:	cmp	w8, #0x4
    1b9c:	b.ne	1bbc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x68>  // b.any
    1ba0:	ldr	x8, [x27, #80]
    1ba4:	cbz	x8, 20fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1ba8:	ldrb	w9, [x8, #8]
    1bac:	cmp	w9, #0x8
    1bb0:	b.ne	222c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6d8>  // b.any
    1bb4:	ldr	w20, [x8, #24]
    1bb8:	b	1bc0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6c>
    1bbc:	mov	w20, #0x1                   	// #1
    1bc0:	sub	x8, x29, #0x50
    1bc4:	add	x28, x8, #0x10
    1bc8:	stp	x28, xzr, [x29, #-80]
    1bcc:	sturb	wzr, [x29, #-64]
    1bd0:	ldr	x8, [x27, #56]
    1bd4:	cbz	x8, 213c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5e8>
    1bd8:	ldrb	w9, [x8, #8]
    1bdc:	cmp	w9, #0x12
    1be0:	b.ne	215c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x608>  // b.any
    1be4:	ldp	x25, x26, [x8, #24]
    1be8:	sub	x8, x29, #0xa0
    1bec:	add	x24, x8, #0x10
    1bf0:	stur	x24, [x29, #-160]
    1bf4:	cbz	x25, 1c3c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xe8>
    1bf8:	cmp	x26, #0x10
    1bfc:	mov	x0, x24
    1c00:	stur	x26, [x29, #-48]
    1c04:	b.cc	1c24 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xd0>  // b.lo, b.ul, b.last
    1c08:	sub	x0, x29, #0xa0
    1c0c:	sub	x1, x29, #0x30
    1c10:	mov	x2, xzr
    1c14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1c18:	ldur	x8, [x29, #-48]
    1c1c:	stur	x0, [x29, #-160]
    1c20:	stur	x8, [x29, #-144]
    1c24:	cbz	x26, 1c54 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x100>
    1c28:	cmp	x26, #0x1
    1c2c:	b.ne	1c48 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0xf4>  // b.any
    1c30:	ldrb	w8, [x25]
    1c34:	strb	w8, [x0]
    1c38:	b	1c54 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x100>
    1c3c:	stur	xzr, [x29, #-152]
    1c40:	sturb	wzr, [x29, #-144]
    1c44:	b	1c9c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x148>
    1c48:	mov	x1, x25
    1c4c:	mov	x2, x26
    1c50:	bl	0 <memcpy>
    1c54:	ldur	x8, [x29, #-48]
    1c58:	ldur	x9, [x29, #-160]
    1c5c:	stur	x8, [x29, #-152]
    1c60:	strb	wzr, [x9, x8]
    1c64:	ldur	x9, [x29, #-160]
    1c68:	cmp	x9, x24
    1c6c:	b.eq	1c9c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x148>  // b.none
    1c70:	ldur	x8, [x29, #-80]
    1c74:	ldur	x10, [x29, #-64]
    1c78:	ldur	q0, [x19, #8]
    1c7c:	stur	x9, [x29, #-80]
    1c80:	cmp	x8, x28
    1c84:	csel	x8, xzr, x8, eq  // eq = none
    1c88:	stur	q0, [x19, #88]
    1c8c:	cbz	x8, 206c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x518>
    1c90:	stur	x8, [x29, #-160]
    1c94:	stur	x10, [x29, #-144]
    1c98:	b	1cd8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x184>
    1c9c:	ldur	x2, [x29, #-152]
    1ca0:	cbz	x2, 1cc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x170>
    1ca4:	ldur	x0, [x29, #-80]
    1ca8:	cmp	x2, #0x1
    1cac:	b.ne	1cbc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x168>  // b.any
    1cb0:	ldurb	w8, [x29, #-144]
    1cb4:	strb	w8, [x0]
    1cb8:	b	1cc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x170>
    1cbc:	mov	x1, x24
    1cc0:	bl	0 <memcpy>
    1cc4:	ldur	x8, [x29, #-152]
    1cc8:	ldur	x9, [x29, #-80]
    1ccc:	stur	x8, [x29, #-72]
    1cd0:	strb	wzr, [x9, x8]
    1cd4:	ldur	x8, [x29, #-160]
    1cd8:	stur	xzr, [x29, #-152]
    1cdc:	strb	wzr, [x8]
    1ce0:	ldur	x0, [x29, #-160]
    1ce4:	cmp	x0, x24
    1ce8:	b.eq	1cf0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x19c>  // b.none
    1cec:	bl	0 <_ZdlPv>
    1cf0:	ldr	x8, [x27, #64]
    1cf4:	cbz	x8, 20fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1cf8:	ldrb	w9, [x8, #8]
    1cfc:	str	x28, [sp, #48]
    1d00:	cmp	w9, #0x8
    1d04:	b.ne	2174 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x620>  // b.any
    1d08:	ldr	x28, [x8, #24]
    1d0c:	lsr	x8, x28, #30
    1d10:	cbnz	x8, 218c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x638>
    1d14:	ldr	x8, [x27, #72]
    1d18:	cbz	x8, 20fc <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x5a8>
    1d1c:	ldrb	w9, [x8, #8]
    1d20:	cmp	w9, #0x8
    1d24:	b.ne	2198 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x644>  // b.any
    1d28:	ldr	x8, [x8, #24]
    1d2c:	str	x8, [sp, #104]
    1d30:	lsr	x8, x8, #30
    1d34:	cbnz	x8, 21d0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x67c>
    1d38:	ldr	x8, [x27, #32]
    1d3c:	cbz	x8, 21ec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x698>
    1d40:	stp	x27, x23, [sp, #24]
    1d44:	ldrb	w9, [x8, #8]
    1d48:	str	x21, [sp, #40]
    1d4c:	cmp	w9, #0x6
    1d50:	b.ne	220c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6b8>  // b.any
    1d54:	ldr	x9, [sp, #104]
    1d58:	cmp	x28, x9
    1d5c:	cneg	w27, w20, gt
    1d60:	cmp	w27, #0x1
    1d64:	b.lt	1da8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x254>  // b.tstop
    1d68:	ldr	x9, [sp, #104]
    1d6c:	cmp	x28, x9
    1d70:	b.le	1da8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x254>
    1d74:	ldur	x0, [x29, #-80]
    1d78:	ldr	x8, [sp, #48]
    1d7c:	cmp	x0, x8
    1d80:	b.eq	1d88 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x234>  // b.none
    1d84:	bl	0 <_ZdlPv>
    1d88:	ldp	x20, x19, [sp, #480]
    1d8c:	ldp	x22, x21, [sp, #464]
    1d90:	ldp	x24, x23, [sp, #448]
    1d94:	ldp	x26, x25, [sp, #432]
    1d98:	ldp	x28, x27, [sp, #416]
    1d9c:	ldp	x29, x30, [sp, #400]
    1da0:	add	sp, sp, #0x1f0
    1da4:	ret
    1da8:	add	x10, x22, #0x90
    1dac:	ldr	x8, [x8, #24]
    1db0:	str	x10, [sp, #16]
    1db4:	add	x10, x22, #0xa0
    1db8:	str	x10, [sp, #8]
    1dbc:	sxtw	x10, w27
    1dc0:	str	x10, [sp, #88]
    1dc4:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1dc8:	ldr	x10, [x10]
    1dcc:	adrp	x11, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1dd0:	ldr	x11, [x11]
    1dd4:	ldr	x8, [x8, #104]
    1dd8:	sub	x9, x29, #0xa0
    1ddc:	add	x9, x9, #0x8
    1de0:	sub	x12, x29, #0x70
    1de4:	str	x9, [sp, #56]
    1de8:	add	x9, x10, #0x10
    1dec:	add	x21, x12, #0x10
    1df0:	str	x9, [sp, #80]
    1df4:	add	x9, x8, #0x30
    1df8:	add	x19, x8, #0x38
    1dfc:	add	x8, x11, #0x10
    1e00:	stp	x8, x9, [sp, #64]
    1e04:	tbz	w27, #31, 1e14 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2c0>
    1e08:	ldr	x8, [sp, #104]
    1e0c:	cmp	x28, x8
    1e10:	b.lt	1d74 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x220>  // b.tstop
    1e14:	mov	w8, #0x1                   	// #1
    1e18:	ldr	x9, [sp, #56]
    1e1c:	stur	w8, [x29, #-128]
    1e20:	ldur	x8, [x29, #-80]
    1e24:	sub	x0, x29, #0xa0
    1e28:	stp	xzr, xzr, [x9]
    1e2c:	str	xzr, [x9, #16]
    1e30:	ldr	x9, [sp, #80]
    1e34:	stur	x8, [x29, #-40]
    1e38:	ldr	x8, [sp, #64]
    1e3c:	sub	x1, x29, #0x30
    1e40:	stur	x9, [x29, #-160]
    1e44:	sub	x9, x29, #0x70
    1e48:	stp	x21, xzr, [x29, #-112]
    1e4c:	sturb	wzr, [x29, #-96]
    1e50:	stur	x9, [x29, #-120]
    1e54:	stur	x8, [x29, #-48]
    1e58:	stur	w28, [x29, #-32]
    1e5c:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    1e60:	ldur	x8, [x29, #-136]
    1e64:	ldur	x9, [x29, #-152]
    1e68:	cmp	x8, x9
    1e6c:	b.eq	1e78 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x324>  // b.none
    1e70:	sub	x0, x29, #0xa0
    1e74:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    1e78:	ldr	x8, [sp, #72]
    1e7c:	ldr	x25, [x8, #16]
    1e80:	cbz	x25, 1f24 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>
    1e84:	ldur	x8, [x29, #-120]
    1e88:	mov	x23, x19
    1e8c:	mov	x20, x21
    1e90:	ldp	x26, x24, [x8]
    1e94:	b	1ea8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>
    1e98:	add	x8, x25, #0x10
    1e9c:	mov	x23, x25
    1ea0:	ldr	x25, [x8]
    1ea4:	cbz	x25, 1ee4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x390>
    1ea8:	ldr	x21, [x25, #40]
    1eac:	cmp	x24, x21
    1eb0:	csel	x2, x24, x21, cc  // cc = lo, ul, last
    1eb4:	cbz	x2, 1ed0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x37c>
    1eb8:	ldr	x0, [x25, #32]
    1ebc:	mov	x1, x26
    1ec0:	bl	0 <memcmp>
    1ec4:	cbz	w0, 1ed0 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x37c>
    1ec8:	tbz	w0, #31, 1e98 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x344>
    1ecc:	b	1ed8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x384>
    1ed0:	cmp	x21, x24
    1ed4:	b.cs	1e98 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x344>  // b.hs, b.nlast
    1ed8:	add	x8, x25, #0x18
    1edc:	ldr	x25, [x8]
    1ee0:	cbnz	x25, 1ea8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x354>
    1ee4:	cmp	x23, x19
    1ee8:	b.eq	2044 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4f0>  // b.none
    1eec:	ldr	x25, [x23, #40]
    1ef0:	cmp	x25, x24
    1ef4:	csel	x2, x25, x24, cc  // cc = lo, ul, last
    1ef8:	cbz	x2, 1f18 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c4>
    1efc:	ldr	x1, [x23, #32]
    1f00:	mov	x0, x26
    1f04:	bl	0 <memcmp>
    1f08:	cbz	w0, 1f18 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3c4>
    1f0c:	mov	x21, x20
    1f10:	tbnz	w0, #31, 1f24 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d0>
    1f14:	b	1f28 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d4>
    1f18:	cmp	x24, x25
    1f1c:	mov	x21, x20
    1f20:	b.cs	1f28 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3d4>  // b.hs, b.nlast
    1f24:	mov	x23, x19
    1f28:	cmp	x23, x19
    1f2c:	b.eq	2098 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>  // b.none
    1f30:	ldr	x1, [x23, #64]
    1f34:	stur	x1, [x29, #-168]
    1f38:	cbz	x1, 209c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x548>
    1f3c:	ldr	x0, [sp, #96]
    1f40:	bl	79c <_ZN4llvm9SetTheory6expandEPNS_6RecordE>
    1f44:	cbz	x0, 1fc4 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x470>
    1f48:	ldp	x26, x24, [x0]
    1f4c:	cmp	x26, x24
    1f50:	b.ne	1f84 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x430>  // b.any
    1f54:	b	200c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>
    1f58:	ldr	x9, [x22, #144]
    1f5c:	ldr	x10, [x26]
    1f60:	str	x10, [x9, w8, uxtw #3]
    1f64:	ldp	w8, w9, [x22, #152]
    1f68:	cmp	w8, w9
    1f6c:	b.cs	2078 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x524>  // b.hs, b.nlast
    1f70:	add	w8, w8, #0x1
    1f74:	str	w8, [x22, #152]
    1f78:	add	x26, x26, #0x8
    1f7c:	cmp	x24, x26
    1f80:	b.eq	200c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>  // b.none
    1f84:	sub	x8, x29, #0x30
    1f88:	add	x2, sp, #0xb0
    1f8c:	mov	x0, x22
    1f90:	mov	x1, x26
    1f94:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1f98:	ldurb	w8, [x29, #-16]
    1f9c:	cbz	w8, 1f78 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x424>
    1fa0:	ldp	w8, w9, [x22, #152]
    1fa4:	cmp	w8, w9
    1fa8:	b.cc	1f58 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x404>  // b.lo, b.ul, b.last
    1fac:	ldp	x1, x0, [sp, #8]
    1fb0:	mov	w3, #0x8                   	// #8
    1fb4:	mov	x2, xzr
    1fb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    1fbc:	ldr	w8, [x22, #152]
    1fc0:	b	1f58 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x404>
    1fc4:	sub	x8, x29, #0x30
    1fc8:	sub	x1, x29, #0xa8
    1fcc:	add	x2, sp, #0xb0
    1fd0:	mov	x0, x22
    1fd4:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    1fd8:	ldurb	w8, [x29, #-16]
    1fdc:	cbz	w8, 200c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4b8>
    1fe0:	ldp	w8, w9, [x22, #152]
    1fe4:	cmp	w8, w9
    1fe8:	b.cs	2054 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x500>  // b.hs, b.nlast
    1fec:	ldr	x9, [x22, #144]
    1ff0:	ldur	x10, [x29, #-168]
    1ff4:	str	x10, [x9, w8, uxtw #3]
    1ff8:	ldp	w8, w9, [x22, #152]
    1ffc:	cmp	w8, w9
    2000:	b.cs	2078 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x524>  // b.hs, b.nlast
    2004:	add	w8, w8, #0x1
    2008:	str	w8, [x22, #152]
    200c:	ldr	x8, [sp, #88]
    2010:	sub	x0, x29, #0xa0
    2014:	add	x28, x28, x8
    2018:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    201c:	ldur	x0, [x29, #-112]
    2020:	cmp	x0, x21
    2024:	b.eq	202c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x4d8>  // b.none
    2028:	bl	0 <_ZdlPv>
    202c:	cmp	w27, #0x1
    2030:	b.lt	1e04 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b0>  // b.tstop
    2034:	ldr	x8, [sp, #104]
    2038:	cmp	x28, x8
    203c:	b.le	1e04 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x2b0>
    2040:	b	1d74 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x220>
    2044:	mov	x21, x20
    2048:	cmp	x23, x19
    204c:	b.ne	1f30 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x3dc>  // b.any
    2050:	b	2098 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x544>
    2054:	ldp	x1, x0, [sp, #8]
    2058:	mov	w3, #0x8                   	// #8
    205c:	mov	x2, xzr
    2060:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2064:	ldr	w8, [x22, #152]
    2068:	b	1fec <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x498>
    206c:	mov	x8, x24
    2070:	stur	x24, [x29, #-160]
    2074:	b	1cd8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x184>
    2078:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    207c:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2080:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2084:	add	x0, x0, #0x0
    2088:	add	x1, x1, #0x0
    208c:	add	x3, x3, #0x0
    2090:	mov	w2, #0x43                  	// #67
    2094:	bl	0 <__assert_fail>
    2098:	stur	xzr, [x29, #-168]
    209c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20a0:	add	x0, x0, #0x0
    20a4:	add	x8, sp, #0x90
    20a8:	sub	x1, x29, #0x70
    20ac:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20b0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20b4:	add	x1, x1, #0x0
    20b8:	add	x8, sp, #0xb0
    20bc:	add	x0, sp, #0x90
    20c0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20c4:	ldr	x0, [sp, #24]
    20c8:	add	x8, sp, #0x70
    20cc:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    20d0:	sub	x8, x29, #0x30
    20d4:	add	x0, sp, #0xb0
    20d8:	add	x1, sp, #0x70
    20dc:	sub	x19, x29, #0x30
    20e0:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    20e4:	ldp	x0, x1, [sp, #32]
    20e8:	mov	w8, #0x104                 	// #260
    20ec:	sub	x2, x29, #0xc0
    20f0:	sturh	w8, [x29, #-176]
    20f4:	stp	x19, xzr, [x29, #-192]
    20f8:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    20fc:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2100:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2104:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2108:	add	x0, x0, #0x0
    210c:	add	x1, x1, #0x0
    2110:	add	x3, x3, #0x0
    2114:	mov	w2, #0x69                  	// #105
    2118:	bl	0 <__assert_fail>
    211c:	sub	x8, x29, #0x30
    2120:	mov	x0, x27
    2124:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2128:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    212c:	add	x0, x0, #0x0
    2130:	sub	x8, x29, #0xa0
    2134:	sub	x1, x29, #0x30
    2138:	b	224c <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x6f8>
    213c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2140:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2144:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2148:	add	x0, x0, #0x0
    214c:	add	x1, x1, #0x0
    2150:	add	x3, x3, #0x0
    2154:	mov	w2, #0x69                  	// #105
    2158:	bl	0 <__assert_fail>
    215c:	sub	x8, x29, #0x30
    2160:	mov	x0, x27
    2164:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2168:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    216c:	add	x0, x0, #0x0
    2170:	b	21ac <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x658>
    2174:	sub	x8, x29, #0x30
    2178:	mov	x0, x27
    217c:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2180:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2184:	add	x0, x0, #0x0
    2188:	b	21ac <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x658>
    218c:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2190:	add	x8, x8, #0x0
    2194:	b	21d8 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x684>
    2198:	sub	x8, x29, #0x30
    219c:	mov	x0, x27
    21a0:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    21a4:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21a8:	add	x0, x0, #0x0
    21ac:	sub	x8, x29, #0xa0
    21b0:	sub	x1, x29, #0x30
    21b4:	sub	x19, x29, #0xa0
    21b8:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21bc:	mov	w8, #0x104                 	// #260
    21c0:	sturh	w8, [x29, #-96]
    21c4:	stp	x19, xzr, [x29, #-112]
    21c8:	sub	x2, x29, #0x70
    21cc:	b	2260 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>
    21d0:	adrp	x8, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21d4:	add	x8, x8, #0x0
    21d8:	mov	w9, #0x103                 	// #259
    21dc:	sub	x2, x29, #0xa0
    21e0:	stp	x8, xzr, [x29, #-160]
    21e4:	sturh	w9, [x29, #-144]
    21e8:	b	2260 <_ZN12_GLOBAL__N_110SequenceOp5applyERN4llvm9SetTheoryEPNS1_7DagInitERNS1_14SmallSetVectorIPNS1_6RecordELj16EEENS1_8ArrayRefINS1_5SMLocEEE+0x70c>
    21ec:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21f0:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21f4:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    21f8:	add	x0, x0, #0x0
    21fc:	add	x1, x1, #0x0
    2200:	add	x3, x3, #0x0
    2204:	mov	w2, #0x69                  	// #105
    2208:	bl	0 <__assert_fail>
    220c:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2210:	adrp	x1, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2214:	adrp	x3, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2218:	add	x0, x0, #0x0
    221c:	add	x1, x1, #0x0
    2220:	add	x3, x3, #0x0
    2224:	mov	w2, #0x108                 	// #264
    2228:	bl	0 <__assert_fail>
    222c:	sub	x8, x29, #0x30
    2230:	mov	x0, x27
    2234:	bl	0 <_ZNK4llvm7DagInit11getAsStringB5cxx11Ev>
    2238:	adrp	x0, 0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    223c:	add	x0, x0, #0x0
    2240:	sub	x8, x29, #0xa0
    2244:	sub	x1, x29, #0x30
    2248:	sub	x19, x29, #0xa0
    224c:	bl	0 <_ZN4llvm9SetTheory8Operator6anchorEv>
    2250:	mov	w8, #0x104                 	// #260
    2254:	sturh	w8, [x29, #-64]
    2258:	stp	x19, xzr, [x29, #-80]
    225c:	sub	x2, x29, #0x50
    2260:	mov	x0, x23
    2264:	mov	x1, x21
    2268:	bl	0 <_ZN4llvm15PrintFatalErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>

000000000000226c <_ZN12_GLOBAL__N_113FieldExpanderD0Ev>:
    226c:	b	0 <_ZdlPv>

0000000000002270 <_ZN12_GLOBAL__N_113FieldExpander6expandERN4llvm9SetTheoryEPNS1_6RecordERNS1_14SmallSetVectorIS5_Lj16EEE>:
    2270:	stp	x29, x30, [sp, #-48]!
    2274:	str	x21, [sp, #16]
    2278:	stp	x20, x19, [sp, #32]
    227c:	mov	x29, sp
    2280:	mov	x20, x2
    2284:	ldp	x8, x2, [x0, #8]
    2288:	mov	x21, x1
    228c:	mov	x0, x20
    2290:	mov	x19, x3
    2294:	mov	x1, x8
    2298:	bl	0 <_ZNK4llvm6Record12getValueInitENS_9StringRefE>
    229c:	ldr	x3, [x20, #8]
    22a0:	ldr	w4, [x20, #16]
    22a4:	mov	x1, x0
    22a8:	mov	x0, x21
    22ac:	mov	x2, x19
    22b0:	ldp	x20, x19, [sp, #32]
    22b4:	ldr	x21, [sp, #16]
    22b8:	ldp	x29, x30, [sp], #48
    22bc:	b	460 <_ZN4llvm9SetTheory8evaluateEPNS_4InitERNS_14SmallSetVectorIPNS_6RecordELj16EEENS_8ArrayRefINS_5SMLocEEE>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x21, x0
  18:	mov	x19, x8
  1c:	bl	0 <strlen>
  20:	mov	x4, x0
  24:	mov	x0, x20
  28:	mov	x1, xzr
  2c:	mov	x2, xzr
  30:	mov	x3, x21
  34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  38:	add	x9, x19, #0x10
  3c:	str	x9, [x19]
  40:	mov	x8, x0
  44:	ldr	x10, [x8], #16
  48:	cmp	x10, x8
  4c:	b.eq	60 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x60>  // b.none
  50:	str	x10, [x19]
  54:	ldr	x9, [x0, #16]
  58:	str	x9, [x19, #16]
  5c:	b	68 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_OS8_+0x68>
  60:	ldr	q0, [x10]
  64:	str	q0, [x9]
  68:	ldr	x9, [x0, #8]
  6c:	str	x9, [x19, #8]
  70:	stp	x8, xzr, [x0]
  74:	strb	wzr, [x0, #16]
  78:	ldp	x20, x19, [sp, #32]
  7c:	ldr	x21, [sp, #16]
  80:	ldp	x29, x30, [sp], #48
  84:	ret

Disassembly of section .text._ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_:

0000000000000000 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x23, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x6c>
  28:	ldr	x9, [x23]
  2c:	mov	x21, x20
  30:	ldr	x10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	x10, x9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x70>  // b.none
  58:	ldr	x8, [x23]
  5c:	ldr	x9, [x21, #32]
  60:	cmp	x8, x9
  64:	b.cc	70 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x70>  // b.lo, b.ul, b.last
  68:	b	104 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x104>
  6c:	mov	x21, x20
  70:	mov	w0, #0x40                  	// #64
  74:	bl	0 <_Znwm>
  78:	ldr	x8, [x23]
  7c:	mov	x23, x0
  80:	mov	x24, x0
  84:	mov	x22, x0
  88:	str	x8, [x23, #32]!
  8c:	str	xzr, [x24, #40]!
  90:	stp	xzr, xzr, [x0, #48]
  94:	mov	x0, x19
  98:	mov	x1, x21
  9c:	mov	x2, x23
  a0:	bl	0 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_>
  a4:	mov	x21, x0
  a8:	cbz	x1, f0 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0xf0>
  ac:	mov	x2, x1
  b0:	mov	w0, #0x1                   	// #1
  b4:	cbnz	x21, d0 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0xd0>
  b8:	cmp	x20, x2
  bc:	b.eq	d0 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0xd0>  // b.none
  c0:	ldr	x8, [x23]
  c4:	ldr	x9, [x2, #32]
  c8:	cmp	x8, x9
  cc:	cset	w0, cc  // cc = lo, ul, last
  d0:	mov	x1, x22
  d4:	mov	x3, x20
  d8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  dc:	ldr	x8, [x19, #40]
  e0:	mov	x21, x22
  e4:	add	x8, x8, #0x1
  e8:	str	x8, [x19, #40]
  ec:	b	104 <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0x104>
  f0:	ldr	x0, [x24]
  f4:	cbz	x0, fc <_ZNSt3mapIPN4llvm6RecordESt6vectorIS2_SaIS2_EESt4lessIS2_ESaISt4pairIKS2_S5_EEEixERS9_+0xfc>
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x0, x22
 100:	bl	0 <_ZdlPv>
 104:	add	x0, x21, #0x28
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x24, x23, [sp, #16]
 114:	ldp	x29, x30, [sp], #64
 118:	ret

Disassembly of section .text._ZN4llvm9SetTheory8OperatorD0Ev:

0000000000000000 <_ZN4llvm9SetTheory8OperatorD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm9SetTheory8ExpanderD0Ev:

0000000000000000 <_ZN4llvm9SetTheory8ExpanderD0Ev>:
   0:	brk	#0x1

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x8
  14:	ldr	w8, [x0, #8]
  18:	mov	x21, x1
  1c:	mov	x19, x0
  20:	add	x22, x0, #0x10
  24:	tbnz	w8, #0, 38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x38>
  28:	ldr	w11, [x19, #24]
  2c:	cbz	w11, ac <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xac>
  30:	ldr	x9, [x19, #16]
  34:	b	40 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x40>
  38:	mov	w11, #0x10                  	// #16
  3c:	mov	x9, x22
  40:	ldr	x10, [x21]
  44:	orr	x12, x10, #0x8
  48:	cmn	x12, #0x8
  4c:	b.eq	138 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x138>  // b.none
  50:	ubfx	x12, x10, #4, #28
  54:	eor	w12, w12, w10, lsr #9
  58:	sub	w11, w11, #0x1
  5c:	and	w12, w12, w11
  60:	add	x0, x9, w12, uxtw #3
  64:	ldr	x14, [x0]
  68:	cmp	x14, x10
  6c:	b.ne	ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xec>  // b.any
  70:	tbnz	w8, #0, 80 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x80>
  74:	ldr	x22, [x19, #16]
  78:	ldr	w9, [x19, #24]
  7c:	b	84 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x84>
  80:	mov	w9, #0x10                  	// #16
  84:	mov	w8, wzr
  88:	add	x9, x22, x9, lsl #3
  8c:	ldr	x10, [x19]
  90:	stp	x0, x9, [x20, #16]
  94:	strb	w8, [x20, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	stp	x19, x10, [x20]
  a0:	ldp	x20, x19, [sp, #32]
  a4:	ldp	x29, x30, [sp], #48
  a8:	ret
  ac:	mov	x3, xzr
  b0:	mov	x0, x19
  b4:	mov	x1, x21
  b8:	mov	x2, x21
  bc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
  c0:	ldr	x8, [x21]
  c4:	str	x8, [x0]
  c8:	ldrb	w8, [x19, #8]
  cc:	tbnz	w8, #0, dc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xdc>
  d0:	ldr	x22, [x19, #16]
  d4:	ldr	w8, [x19, #24]
  d8:	b	e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xe0>
  dc:	mov	w8, #0x10                  	// #16
  e0:	add	x9, x22, x8, lsl #3
  e4:	mov	w8, #0x1                   	// #1
  e8:	b	8c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x8c>
  ec:	mov	x13, xzr
  f0:	mov	w16, #0x1                   	// #1
  f4:	mov	x15, #0xfffffffffffffff0    	// #-16
  f8:	cmn	x14, #0x8
  fc:	b.eq	12c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x12c>  // b.none
 100:	cmp	x13, #0x0
 104:	add	w12, w12, w16
 108:	ccmp	x14, x15, #0x0, eq  // eq = none
 10c:	and	w12, w12, w11
 110:	csel	x13, x13, x0, ne  // ne = any
 114:	add	x0, x9, w12, uxtw #3
 118:	ldr	x14, [x0]
 11c:	add	w16, w16, #0x1
 120:	cmp	x14, x10
 124:	b.eq	70 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0x70>  // b.none
 128:	b	f8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xf8>
 12c:	cmp	x13, #0x0
 130:	csel	x3, x0, x13, eq  // eq = none
 134:	b	b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_+0xb0>
 138:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 13c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 140:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E11try_emplaceIJRS5_EEESt4pairINS_16DenseMapIteratorIS3_S5_S7_S9_Lb0EEEbERKS3_DpOT_>
 144:	add	x0, x0, #0x0
 148:	add	x1, x1, #0x0
 14c:	add	x3, x3, #0x0
 150:	mov	w2, #0x252                 	// #594
 154:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x9, [x0]
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x2
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x1
  20:	str	x9, [x0]
  24:	lsr	w9, w8, #1
  28:	tbnz	w8, #0, 34 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x34>
  2c:	ldr	w1, [x19, #24]
  30:	b	38 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x38>
  34:	mov	w1, #0x10                  	// #16
  38:	lsl	w10, w9, #2
  3c:	add	w10, w10, #0x4
  40:	add	w11, w1, w1, lsl #1
  44:	cmp	w10, w11
  48:	b.cs	a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xa4>  // b.hs, b.nlast
  4c:	ldr	w10, [x19, #12]
  50:	mvn	w9, w9
  54:	add	w9, w1, w9
  58:	sub	w9, w9, w10
  5c:	cmp	w9, w1, lsr #3
  60:	b.ls	c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xc8>  // b.plast
  64:	cbz	x3, 1ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1ec>
  68:	lsr	w9, w8, #1
  6c:	adds	w9, w9, #0x1
  70:	b.mi	20c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x20c>  // b.first
  74:	bfi	w8, w9, #1, #31
  78:	str	w8, [x19, #8]
  7c:	ldr	x8, [x3]
  80:	cmn	x8, #0x8
  84:	b.eq	94 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x94>  // b.none
  88:	ldr	w8, [x19, #12]
  8c:	sub	w8, w8, #0x1
  90:	str	w8, [x19, #12]
  94:	ldp	x20, x19, [sp, #16]
  98:	mov	x0, x3
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	lsl	w1, w1, #1
  a8:	mov	x0, x19
  ac:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  b0:	ldr	w8, [x19, #8]
  b4:	tbnz	w8, #0, e8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xe8>
  b8:	ldr	w11, [x19, #24]
  bc:	cbz	w11, 1d8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1d8>
  c0:	ldr	x9, [x19, #16]
  c4:	b	f0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0xf0>
  c8:	mov	x0, x19
  cc:	bl	0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
  d0:	ldr	w8, [x19, #8]
  d4:	tbnz	w8, #0, 160 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x160>
  d8:	ldr	w11, [x19, #24]
  dc:	cbz	w11, 1ec <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1ec>
  e0:	ldr	x9, [x19, #16]
  e4:	b	168 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x168>
  e8:	add	x9, x19, #0x10
  ec:	mov	w11, #0x10                  	// #16
  f0:	ldr	x10, [x20]
  f4:	orr	x12, x10, #0x8
  f8:	cmn	x12, #0x8
  fc:	b.eq	22c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x22c>  // b.none
 100:	ubfx	x12, x10, #4, #28
 104:	eor	w12, w12, w10, lsr #9
 108:	sub	w11, w11, #0x1
 10c:	and	w12, w12, w11
 110:	add	x3, x9, w12, uxtw #3
 114:	ldr	x14, [x3]
 118:	cmp	x14, x10
 11c:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 120:	mov	x13, xzr
 124:	mov	w16, #0x1                   	// #1
 128:	mov	x15, #0xfffffffffffffff0    	// #-16
 12c:	cmn	x14, #0x8
 130:	b.eq	1e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1e0>  // b.none
 134:	cmp	x13, #0x0
 138:	add	w12, w12, w16
 13c:	ccmp	x14, x15, #0x0, eq  // eq = none
 140:	and	w12, w12, w11
 144:	csel	x13, x13, x3, ne  // ne = any
 148:	add	x3, x9, w12, uxtw #3
 14c:	ldr	x14, [x3]
 150:	add	w16, w16, #0x1
 154:	cmp	x14, x10
 158:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 15c:	b	12c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x12c>
 160:	add	x9, x19, #0x10
 164:	mov	w11, #0x10                  	// #16
 168:	ldr	x10, [x20]
 16c:	orr	x12, x10, #0x8
 170:	cmn	x12, #0x8
 174:	b.eq	22c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x22c>  // b.none
 178:	ubfx	x12, x10, #4, #28
 17c:	eor	w12, w12, w10, lsr #9
 180:	sub	w11, w11, #0x1
 184:	and	w12, w12, w11
 188:	add	x3, x9, w12, uxtw #3
 18c:	ldr	x14, [x3]
 190:	cmp	x14, x10
 194:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 198:	mov	x13, xzr
 19c:	mov	w16, #0x1                   	// #1
 1a0:	mov	x15, #0xfffffffffffffff0    	// #-16
 1a4:	cmn	x14, #0x8
 1a8:	b.eq	1e0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1e0>  // b.none
 1ac:	cmp	x13, #0x0
 1b0:	add	w12, w12, w16
 1b4:	ccmp	x14, x15, #0x0, eq  // eq = none
 1b8:	and	w12, w12, w11
 1bc:	csel	x13, x13, x3, ne  // ne = any
 1c0:	add	x3, x9, w12, uxtw #3
 1c4:	ldr	x14, [x3]
 1c8:	add	w16, w16, #0x1
 1cc:	cmp	x14, x10
 1d0:	b.eq	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>  // b.none
 1d4:	b	1a4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x1a4>
 1d8:	mov	x3, xzr
 1dc:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>
 1e0:	cmp	x13, #0x0
 1e4:	csel	x3, x3, x13, eq  // eq = none
 1e8:	b	64 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_+0x64>
 1ec:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 1f8:	add	x0, x0, #0x0
 1fc:	add	x1, x1, #0x0
 200:	add	x3, x3, #0x0
 204:	mov	w2, #0x22f                 	// #559
 208:	bl	0 <__assert_fail>
 20c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 210:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 214:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 218:	add	x0, x0, #0x0
 21c:	add	x1, x1, #0x0
 220:	add	x3, x3, #0x0
 224:	mov	w2, #0x441                 	// #1089
 228:	bl	0 <__assert_fail>
 22c:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 230:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 234:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E20InsertIntoBucketImplIS3_EEPS9_RKS3_RKT_SD_>
 238:	add	x0, x0, #0x0
 23c:	add	x1, x1, #0x0
 240:	add	x3, x3, #0x0
 244:	mov	w2, #0x252                 	// #594
 248:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #128]
   8:	stp	x22, x21, [sp, #144]
   c:	stp	x20, x19, [sp, #160]
  10:	add	x29, sp, #0x80
  14:	cmp	w1, #0x11
  18:	mov	x19, x0
  1c:	b.cc	50 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x50>  // b.lo, b.ul, b.last
  20:	sub	w8, w1, #0x1
  24:	orr	x8, x8, x8, lsr #1
  28:	orr	x8, x8, x8, lsr #2
  2c:	orr	x8, x8, x8, lsr #4
  30:	orr	x8, x8, x8, lsr #8
  34:	orr	x8, x8, x8, lsr #16
  38:	lsr	x9, x8, #32
  3c:	orr	w8, w9, w8
  40:	add	w9, w8, #0x1
  44:	cmp	w9, #0x40
  48:	mov	w9, #0x40                  	// #64
  4c:	csinc	w1, w9, w8, ls  // ls = plast
  50:	ldr	w8, [x19, #8]
  54:	tbnz	w8, #0, 74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x74>
  58:	ldr	x20, [x19, #16]
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w1, #0x10
  64:	b.hi	1c0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1c0>  // b.pmore
  68:	orr	w8, w8, #0x1
  6c:	str	w8, [x19, #8]
  70:	b	1d0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1d0>
  74:	ldr	x8, [x19, #16]
  78:	mov	x20, sp
  7c:	orr	x9, x8, #0x8
  80:	cmn	x9, #0x8
  84:	b.ne	1f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x1f8>  // b.any
  88:	ldr	x8, [x19, #24]
  8c:	orr	x9, x8, #0x8
  90:	cmn	x9, #0x8
  94:	b.ne	210 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x210>  // b.any
  98:	ldr	x8, [x19, #32]
  9c:	orr	x9, x8, #0x8
  a0:	cmn	x9, #0x8
  a4:	b.ne	238 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x238>  // b.any
  a8:	ldr	x8, [x19, #40]
  ac:	orr	x9, x8, #0x8
  b0:	cmn	x9, #0x8
  b4:	b.ne	260 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x260>  // b.any
  b8:	ldr	x8, [x19, #48]
  bc:	orr	x9, x8, #0x8
  c0:	cmn	x9, #0x8
  c4:	b.ne	288 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x288>  // b.any
  c8:	ldr	x8, [x19, #56]
  cc:	orr	x9, x8, #0x8
  d0:	cmn	x9, #0x8
  d4:	b.ne	2b0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2b0>  // b.any
  d8:	ldr	x8, [x19, #64]
  dc:	orr	x9, x8, #0x8
  e0:	cmn	x9, #0x8
  e4:	b.ne	2d8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x2d8>  // b.any
  e8:	ldr	x8, [x19, #72]
  ec:	orr	x9, x8, #0x8
  f0:	cmn	x9, #0x8
  f4:	b.ne	300 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x300>  // b.any
  f8:	ldr	x8, [x19, #80]
  fc:	orr	x9, x8, #0x8
 100:	cmn	x9, #0x8
 104:	b.ne	328 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x328>  // b.any
 108:	ldr	x8, [x19, #88]
 10c:	orr	x9, x8, #0x8
 110:	cmn	x9, #0x8
 114:	b.ne	350 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x350>  // b.any
 118:	ldr	x8, [x19, #96]
 11c:	orr	x9, x8, #0x8
 120:	cmn	x9, #0x8
 124:	b.ne	378 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x378>  // b.any
 128:	ldr	x8, [x19, #104]
 12c:	orr	x9, x8, #0x8
 130:	cmn	x9, #0x8
 134:	b.ne	3a0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3a0>  // b.any
 138:	ldr	x8, [x19, #112]
 13c:	orr	x9, x8, #0x8
 140:	cmn	x9, #0x8
 144:	b.ne	3c8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3c8>  // b.any
 148:	ldr	x8, [x19, #120]
 14c:	orr	x9, x8, #0x8
 150:	cmn	x9, #0x8
 154:	b.ne	3f0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x3f0>  // b.any
 158:	ldr	x8, [x19, #128]
 15c:	orr	x9, x8, #0x8
 160:	cmn	x9, #0x8
 164:	b.ne	418 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x418>  // b.any
 168:	ldr	x8, [x19, #136]
 16c:	orr	x9, x8, #0x8
 170:	cmn	x9, #0x8
 174:	b.ne	440 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x440>  // b.any
 178:	cmp	w1, #0x10
 17c:	b.ls	19c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x19c>  // b.plast
 180:	ldr	w8, [x19, #8]
 184:	mov	w21, w1
 188:	lsl	x0, x21, #3
 18c:	and	w8, w8, #0xfffffffe
 190:	str	w8, [x19, #8]
 194:	bl	0 <_Znwm>
 198:	stp	x0, x21, [x19, #16]
 19c:	mov	x1, sp
 1a0:	mov	x0, x19
 1a4:	mov	x2, x20
 1a8:	bl	0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1ac:	ldp	x20, x19, [sp, #160]
 1b0:	ldp	x22, x21, [sp, #144]
 1b4:	ldp	x29, x30, [sp, #128]
 1b8:	add	sp, sp, #0xb0
 1bc:	ret
 1c0:	mov	w22, w1
 1c4:	lsl	x0, x22, #3
 1c8:	bl	0 <_Znwm>
 1cc:	stp	x0, x22, [x19, #16]
 1d0:	add	x2, x20, x21, lsl #3
 1d4:	mov	x0, x19
 1d8:	mov	x1, x20
 1dc:	bl	0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 1e0:	mov	x0, x20
 1e4:	ldp	x20, x19, [sp, #160]
 1e8:	ldp	x22, x21, [sp, #144]
 1ec:	ldp	x29, x30, [sp, #128]
 1f0:	add	sp, sp, #0xb0
 1f4:	b	0 <_ZdlPv>
 1f8:	add	x20, x20, #0x8
 1fc:	str	x8, [sp]
 200:	ldr	x8, [x19, #24]
 204:	orr	x9, x8, #0x8
 208:	cmn	x9, #0x8
 20c:	b.eq	98 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x98>  // b.none
 210:	mov	x9, sp
 214:	sub	x9, x20, x9
 218:	asr	x9, x9, #3
 21c:	cmp	x9, #0xf
 220:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 224:	str	x8, [x20], #8
 228:	ldr	x8, [x19, #32]
 22c:	orr	x9, x8, #0x8
 230:	cmn	x9, #0x8
 234:	b.eq	a8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xa8>  // b.none
 238:	mov	x9, sp
 23c:	sub	x9, x20, x9
 240:	asr	x9, x9, #3
 244:	cmp	x9, #0xf
 248:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 24c:	str	x8, [x20], #8
 250:	ldr	x8, [x19, #40]
 254:	orr	x9, x8, #0x8
 258:	cmn	x9, #0x8
 25c:	b.eq	b8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xb8>  // b.none
 260:	mov	x9, sp
 264:	sub	x9, x20, x9
 268:	asr	x9, x9, #3
 26c:	cmp	x9, #0xf
 270:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 274:	str	x8, [x20], #8
 278:	ldr	x8, [x19, #48]
 27c:	orr	x9, x8, #0x8
 280:	cmn	x9, #0x8
 284:	b.eq	c8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xc8>  // b.none
 288:	mov	x9, sp
 28c:	sub	x9, x20, x9
 290:	asr	x9, x9, #3
 294:	cmp	x9, #0xf
 298:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 29c:	str	x8, [x20], #8
 2a0:	ldr	x8, [x19, #56]
 2a4:	orr	x9, x8, #0x8
 2a8:	cmn	x9, #0x8
 2ac:	b.eq	d8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xd8>  // b.none
 2b0:	mov	x9, sp
 2b4:	sub	x9, x20, x9
 2b8:	asr	x9, x9, #3
 2bc:	cmp	x9, #0xf
 2c0:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 2c4:	str	x8, [x20], #8
 2c8:	ldr	x8, [x19, #64]
 2cc:	orr	x9, x8, #0x8
 2d0:	cmn	x9, #0x8
 2d4:	b.eq	e8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xe8>  // b.none
 2d8:	mov	x9, sp
 2dc:	sub	x9, x20, x9
 2e0:	asr	x9, x9, #3
 2e4:	cmp	x9, #0xf
 2e8:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 2ec:	str	x8, [x20], #8
 2f0:	ldr	x8, [x19, #72]
 2f4:	orr	x9, x8, #0x8
 2f8:	cmn	x9, #0x8
 2fc:	b.eq	f8 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0xf8>  // b.none
 300:	mov	x9, sp
 304:	sub	x9, x20, x9
 308:	asr	x9, x9, #3
 30c:	cmp	x9, #0xf
 310:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 314:	str	x8, [x20], #8
 318:	ldr	x8, [x19, #80]
 31c:	orr	x9, x8, #0x8
 320:	cmn	x9, #0x8
 324:	b.eq	108 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x108>  // b.none
 328:	mov	x9, sp
 32c:	sub	x9, x20, x9
 330:	asr	x9, x9, #3
 334:	cmp	x9, #0xf
 338:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 33c:	str	x8, [x20], #8
 340:	ldr	x8, [x19, #88]
 344:	orr	x9, x8, #0x8
 348:	cmn	x9, #0x8
 34c:	b.eq	118 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x118>  // b.none
 350:	mov	x9, sp
 354:	sub	x9, x20, x9
 358:	asr	x9, x9, #3
 35c:	cmp	x9, #0xf
 360:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 364:	str	x8, [x20], #8
 368:	ldr	x8, [x19, #96]
 36c:	orr	x9, x8, #0x8
 370:	cmn	x9, #0x8
 374:	b.eq	128 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x128>  // b.none
 378:	mov	x9, sp
 37c:	sub	x9, x20, x9
 380:	asr	x9, x9, #3
 384:	cmp	x9, #0xf
 388:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 38c:	str	x8, [x20], #8
 390:	ldr	x8, [x19, #104]
 394:	orr	x9, x8, #0x8
 398:	cmn	x9, #0x8
 39c:	b.eq	138 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x138>  // b.none
 3a0:	mov	x9, sp
 3a4:	sub	x9, x20, x9
 3a8:	asr	x9, x9, #3
 3ac:	cmp	x9, #0xf
 3b0:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 3b4:	str	x8, [x20], #8
 3b8:	ldr	x8, [x19, #112]
 3bc:	orr	x9, x8, #0x8
 3c0:	cmn	x9, #0x8
 3c4:	b.eq	148 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x148>  // b.none
 3c8:	mov	x9, sp
 3cc:	sub	x9, x20, x9
 3d0:	asr	x9, x9, #3
 3d4:	cmp	x9, #0xf
 3d8:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 3dc:	str	x8, [x20], #8
 3e0:	ldr	x8, [x19, #120]
 3e4:	orr	x9, x8, #0x8
 3e8:	cmn	x9, #0x8
 3ec:	b.eq	158 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x158>  // b.none
 3f0:	mov	x9, sp
 3f4:	sub	x9, x20, x9
 3f8:	asr	x9, x9, #3
 3fc:	cmp	x9, #0xf
 400:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 404:	str	x8, [x20], #8
 408:	ldr	x8, [x19, #128]
 40c:	orr	x9, x8, #0x8
 410:	cmn	x9, #0x8
 414:	b.eq	168 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x168>  // b.none
 418:	mov	x9, sp
 41c:	sub	x9, x20, x9
 420:	asr	x9, x9, #3
 424:	cmp	x9, #0xf
 428:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 42c:	str	x8, [x20], #8
 430:	ldr	x8, [x19, #136]
 434:	orr	x9, x8, #0x8
 438:	cmn	x9, #0x8
 43c:	b.eq	178 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x178>  // b.none
 440:	mov	x9, sp
 444:	sub	x9, x20, x9
 448:	asr	x9, x9, #3
 44c:	cmp	x9, #0xf
 450:	b.hi	464 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x464>  // b.pmore
 454:	str	x8, [x20], #8
 458:	cmp	w1, #0x10
 45c:	b.hi	180 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x180>  // b.pmore
 460:	b	19c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj+0x19c>
 464:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 468:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 46c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4growEj>
 470:	add	x0, x0, #0x0
 474:	add	x1, x1, #0x0
 478:	add	x3, x3, #0x0
 47c:	mov	w2, #0x402                 	// #1026
 480:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #8]
   c:	and	w9, w8, #0x1
  10:	stp	w9, wzr, [x0, #8]
  14:	tbnz	w8, #0, 24 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x24>
  18:	ldr	w8, [x0, #24]
  1c:	sub	w10, w8, #0x1
  20:	b	2c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x2c>
  24:	mov	w10, #0xf                   	// #15
  28:	mov	w8, #0x10                  	// #16
  2c:	tst	w10, w8
  30:	b.ne	208 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x208>  // b.any
  34:	add	x8, x0, #0x10
  38:	cbnz	w9, 60 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x60>
  3c:	ldr	w9, [x0, #24]
  40:	cbz	w9, c0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>
  44:	ldr	x10, [x0, #16]
  48:	add	x9, x10, x9, lsl #3
  4c:	sub	x11, x9, x10
  50:	sub	x11, x11, #0x8
  54:	cmp	x11, #0x18
  58:	b.cs	78 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x78>  // b.hs, b.nlast
  5c:	b	b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>
  60:	add	x9, x0, #0x90
  64:	mov	x10, x8
  68:	sub	x11, x9, x10
  6c:	sub	x11, x11, #0x8
  70:	cmp	x11, #0x18
  74:	b.cc	b0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb0>  // b.lo, b.ul, b.last
  78:	lsr	x12, x11, #3
  7c:	add	x12, x12, #0x1
  80:	mov	x14, #0xfffffffffffffff8    	// #-8
  84:	and	x13, x12, #0x3ffffffffffffffc
  88:	add	x11, x10, #0x10
  8c:	add	x10, x10, x13, lsl #3
  90:	dup	v0.2d, x14
  94:	mov	x14, x13
  98:	stp	q0, q0, [x11, #-16]
  9c:	subs	x14, x14, #0x4
  a0:	add	x11, x11, #0x20
  a4:	b.ne	98 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x98>  // b.any
  a8:	cmp	x12, x13
  ac:	b.eq	c0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xc0>  // b.none
  b0:	mov	x11, #0xfffffffffffffff8    	// #-8
  b4:	str	x11, [x10], #8
  b8:	cmp	x9, x10
  bc:	b.ne	b4 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xb4>  // b.any
  c0:	cmp	x1, x2
  c4:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1a0>  // b.none
  c8:	mov	x9, #0xfffffffffffffff0    	// #-16
  cc:	b	dc <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xdc>
  d0:	add	x1, x1, #0x8
  d4:	cmp	x1, x2
  d8:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1a0>  // b.none
  dc:	ldr	x10, [x1]
  e0:	orr	x11, x10, #0x8
  e4:	cmn	x11, #0x8
  e8:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>  // b.none
  ec:	ldrb	w11, [x0, #8]
  f0:	tbnz	w11, #0, 104 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x104>
  f4:	ldr	w12, [x0, #24]
  f8:	cbz	w12, 198 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x198>
  fc:	ldr	x11, [x0, #16]
 100:	b	10c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x10c>
 104:	mov	w12, #0x10                  	// #16
 108:	mov	x11, x8
 10c:	cmn	x10, #0x8
 110:	b.eq	1e8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1e8>  // b.none
 114:	ubfx	x13, x10, #4, #28
 118:	eor	w13, w13, w10, lsr #9
 11c:	sub	w12, w12, #0x1
 120:	and	w14, w13, w12
 124:	add	x13, x11, w14, uxtw #3
 128:	ldr	x16, [x13]
 12c:	cmp	x16, x10
 130:	b.eq	1a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1a8>  // b.none
 134:	mov	x15, xzr
 138:	mov	w17, #0x1                   	// #1
 13c:	cmn	x16, #0x8
 140:	b.eq	170 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x170>  // b.none
 144:	cmp	x15, #0x0
 148:	add	w14, w14, w17
 14c:	ccmp	x16, x9, #0x0, eq  // eq = none
 150:	and	w14, w14, w12
 154:	csel	x15, x15, x13, ne  // ne = any
 158:	add	x13, x11, w14, uxtw #3
 15c:	ldr	x16, [x13]
 160:	add	w17, w17, #0x1
 164:	cmp	x16, x10
 168:	b.ne	13c <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x13c>  // b.any
 16c:	b	1a8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1a8>
 170:	cmp	x15, #0x0
 174:	csel	x11, x13, x15, eq  // eq = none
 178:	str	x10, [x11]
 17c:	ldr	w10, [x0, #8]
 180:	lsr	w11, w10, #1
 184:	adds	w11, w11, #0x1
 188:	b.mi	1c8 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x1c8>  // b.first
 18c:	bfi	w10, w11, #1, #31
 190:	str	w10, [x0, #8]
 194:	b	d0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0xd0>
 198:	mov	x11, xzr
 19c:	b	178 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_+0x178>
 1a0:	ldp	x29, x30, [sp], #16
 1a4:	ret
 1a8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1ac:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1b0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1b4:	add	x0, x0, #0x0
 1b8:	add	x1, x1, #0x0
 1bc:	add	x3, x3, #0x0
 1c0:	mov	w2, #0x17a                 	// #378
 1c4:	bl	0 <__assert_fail>
 1c8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1cc:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1d0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0x441                 	// #1089
 1e4:	bl	0 <__assert_fail>
 1e8:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1ec:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1f0:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x252                 	// #594
 204:	bl	0 <__assert_fail>
 208:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 20c:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 210:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS3_EENS4_12DenseSetPairIS3_EEEES3_S5_S7_S9_E18moveFromOldBucketsEPS9_SC_>
 214:	add	x0, x0, #0x0
 218:	add	x1, x1, #0x0
 21c:	add	x3, x3, #0x0
 220:	mov	w2, #0x15c                 	// #348
 224:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9SetTheory8OperatorD2Ev:

0000000000000000 <_ZN4llvm9SetTheory8OperatorD2Ev>:
   0:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>:
   0:	stp	d9, d8, [sp, #-80]!
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	w8, [x0, #8]
  1c:	mov	x19, x2
  20:	mov	x20, x0
  24:	mov	x21, x1
  28:	cbz	w8, b4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xb4>
  2c:	ldr	x22, [x20]
  30:	add	x8, x8, x8, lsl #3
  34:	lsl	x23, x8, #5
  38:	b	58 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x58>
  3c:	add	x8, x22, x23
  40:	sub	x8, x8, #0x120
  44:	ldr	x9, [x8]
  48:	subs	x23, x23, #0x120
  4c:	add	x9, x9, #0x1
  50:	str	x9, [x8]
  54:	b.eq	b4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xb4>  // b.none
  58:	add	x24, x22, x23
  5c:	ldur	x0, [x24, #-144]
  60:	sub	x8, x24, #0x80
  64:	cmp	x8, x0
  68:	b.eq	70 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x70>  // b.none
  6c:	bl	0 <free>
  70:	sub	x24, x24, #0x118
  74:	ldrb	w8, [x24]
  78:	tbnz	w8, #0, 3c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x3c>
  7c:	add	x8, x22, x23
  80:	sub	x8, x8, #0x110
  84:	ldr	x0, [x8]
  88:	bl	0 <_ZdlPv>
  8c:	ldrb	w8, [x24]
  90:	tbz	w8, #0, 3c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x3c>
  94:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  98:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  9c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  a0:	add	x0, x0, #0x0
  a4:	add	x1, x1, #0x0
  a8:	add	x3, x3, #0x0
  ac:	mov	w2, #0x45b                 	// #1115
  b0:	bl	0 <__assert_fail>
  b4:	ldr	w8, [x20, #12]
  b8:	str	wzr, [x20, #8]
  bc:	cmp	x8, x21
  c0:	b.cs	d4 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0xd4>  // b.hs, b.nlast
  c4:	mov	x0, x20
  c8:	mov	x1, x21
  cc:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  d0:	ldr	w8, [x20, #12]
  d4:	cmp	x8, x21
  d8:	b.cc	194 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x194>  // b.lo, b.ul, b.last
  dc:	ands	x8, x21, #0xffffffff
  e0:	str	w21, [x20, #8]
  e4:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x17c>  // b.none
  e8:	ldr	x9, [x20]
  ec:	adrp	x11, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  f0:	adrp	x12, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
  f4:	ldr	d8, [x11]
  f8:	ldr	d9, [x12]
  fc:	mov	w10, #0x120                 	// #288
 100:	add	x20, x19, #0x90
 104:	madd	x22, x8, x10, x9
 108:	add	x21, x9, #0x90
 10c:	mov	x23, #0xfffffffffffffff8    	// #-8
 110:	b	124 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x124>
 114:	add	x8, x24, #0x80
 118:	cmp	x8, x22
 11c:	add	x21, x21, #0x120
 120:	b.eq	17c <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x17c>  // b.none
 124:	mov	x0, x21
 128:	str	xzr, [x0, #-144]!
 12c:	mov	x1, x19
 130:	stur	d8, [x21, #-136]
 134:	stp	x23, x23, [x21, #-128]
 138:	stp	x23, x23, [x21, #-112]
 13c:	stp	x23, x23, [x21, #-96]
 140:	stp	x23, x23, [x21, #-80]
 144:	stp	x23, x23, [x21, #-64]
 148:	stp	x23, x23, [x21, #-48]
 14c:	stp	x23, x23, [x21, #-32]
 150:	stp	x23, x23, [x21, #-16]
 154:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 158:	add	x24, x21, #0x10
 15c:	str	x24, [x21]
 160:	str	d9, [x21, #8]
 164:	ldr	w8, [x19, #152]
 168:	cbz	w8, 114 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x114>
 16c:	mov	x0, x21
 170:	mov	x1, x20
 174:	bl	0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 178:	b	114 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_+0x114>
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldp	x29, x30, [sp, #16]
 18c:	ldp	d9, d8, [sp], #80
 190:	ret
 194:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 198:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 19c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_14SmallSetVectorIPNS_6RecordELj16EEEE6assignEmRKS4_>
 1a0:	add	x0, x0, #0x0
 1a4:	add	x1, x1, #0x0
 1a8:	add	x3, x3, #0x0
 1ac:	mov	w2, #0x43                  	// #67
 1b0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>:
   0:	stp	d9, d8, [sp, #-96]!
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x20, x1
  20:	lsr	x8, x1, #32
  24:	mov	x19, x0
  28:	cbz	x8, 3c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x3c>
  2c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  30:	add	x0, x0, #0x0
  34:	mov	w1, #0x1                   	// #1
  38:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  3c:	ldr	w8, [x19, #12]
  40:	add	x8, x8, #0x2
  44:	orr	x8, x8, x8, lsr #1
  48:	orr	x8, x8, x8, lsr #2
  4c:	orr	x8, x8, x8, lsr #4
  50:	orr	x8, x8, x8, lsr #8
  54:	orr	x8, x8, x8, lsr #16
  58:	orr	x8, x8, x8, lsr #32
  5c:	add	x9, x8, #0x1
  60:	cmp	x9, x20
  64:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  68:	mov	w9, #0xffffffff            	// #-1
  6c:	cmp	x8, x9
  70:	csel	x23, x8, x9, cc  // cc = lo, ul, last
  74:	add	x8, x23, x23, lsl #3
  78:	lsl	x0, x8, #5
  7c:	bl	0 <malloc>
  80:	mov	x20, x0
  84:	cbnz	x0, c0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xc0>
  88:	cbz	x23, b0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xb0>
  8c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  90:	add	x0, x0, #0x0
  94:	mov	w1, #0x1                   	// #1
  98:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  9c:	mov	x20, xzr
  a0:	ldr	w8, [x19, #8]
  a4:	ldr	x21, [x19]
  a8:	cbnz	w8, cc <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xcc>
  ac:	b	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>
  b0:	mov	w0, #0x1                   	// #1
  b4:	bl	0 <malloc>
  b8:	mov	x20, x0
  bc:	cbz	x0, 224 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x224>
  c0:	ldr	w8, [x19, #8]
  c4:	ldr	x21, [x19]
  c8:	cbz	w8, 1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>
  cc:	adrp	x10, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  d0:	adrp	x11, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
  d4:	ldr	d8, [x10]
  d8:	ldr	d9, [x11]
  dc:	mov	w9, #0x120                 	// #288
  e0:	madd	x24, x8, x9, x21
  e4:	add	x22, x20, #0x90
  e8:	mov	x25, #0xfffffffffffffff8    	// #-8
  ec:	b	100 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x100>
  f0:	add	x21, x21, #0x120
  f4:	cmp	x21, x24
  f8:	add	x22, x22, #0x120
  fc:	b.eq	158 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x158>  // b.none
 100:	mov	x0, x22
 104:	str	xzr, [x0, #-144]!
 108:	mov	x1, x21
 10c:	stur	d8, [x22, #-136]
 110:	stp	x25, x25, [x22, #-128]
 114:	stp	x25, x25, [x22, #-112]
 118:	stp	x25, x25, [x22, #-96]
 11c:	stp	x25, x25, [x22, #-80]
 120:	stp	x25, x25, [x22, #-64]
 124:	stp	x25, x25, [x22, #-48]
 128:	stp	x25, x25, [x22, #-32]
 12c:	stp	x25, x25, [x22, #-16]
 130:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 134:	add	x8, x22, #0x10
 138:	str	x8, [x22]
 13c:	str	d9, [x22, #8]
 140:	ldr	w8, [x21, #152]
 144:	cbz	w8, f0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xf0>
 148:	add	x1, x21, #0x90
 14c:	mov	x0, x22
 150:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 154:	b	f0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xf0>
 158:	ldr	w8, [x19, #8]
 15c:	ldr	x21, [x19]
 160:	cbz	w8, 1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>
 164:	add	x8, x8, x8, lsl #3
 168:	lsl	x22, x8, #5
 16c:	b	18c <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x18c>
 170:	add	x8, x21, x22
 174:	sub	x8, x8, #0x120
 178:	ldr	x9, [x8]
 17c:	subs	x22, x22, #0x120
 180:	add	x9, x9, #0x1
 184:	str	x9, [x8]
 188:	b.eq	1e8 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1e8>  // b.none
 18c:	add	x24, x21, x22
 190:	ldur	x0, [x24, #-144]
 194:	sub	x8, x24, #0x80
 198:	cmp	x8, x0
 19c:	b.eq	1a4 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1a4>  // b.none
 1a0:	bl	0 <free>
 1a4:	sub	x24, x24, #0x118
 1a8:	ldrb	w8, [x24]
 1ac:	tbnz	w8, #0, 170 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x170>
 1b0:	add	x8, x21, x22
 1b4:	sub	x8, x8, #0x110
 1b8:	ldr	x0, [x8]
 1bc:	bl	0 <_ZdlPv>
 1c0:	ldrb	w8, [x24]
 1c4:	tbz	w8, #0, 170 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x170>
 1c8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1cc:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1d0:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 1d4:	add	x0, x0, #0x0
 1d8:	add	x1, x1, #0x0
 1dc:	add	x3, x3, #0x0
 1e0:	mov	w2, #0x45b                 	// #1115
 1e4:	bl	0 <__assert_fail>
 1e8:	ldr	x21, [x19]
 1ec:	add	x8, x19, #0x10
 1f0:	cmp	x21, x8
 1f4:	b.eq	200 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x200>  // b.none
 1f8:	mov	x0, x21
 1fc:	bl	0 <free>
 200:	str	x20, [x19]
 204:	str	w23, [x19, #12]
 208:	ldp	x20, x19, [sp, #80]
 20c:	ldp	x22, x21, [sp, #64]
 210:	ldp	x24, x23, [sp, #48]
 214:	ldr	x25, [sp, #32]
 218:	ldp	x29, x30, [sp, #16]
 21c:	ldp	d9, d8, [sp], #96
 220:	ret
 224:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm>
 228:	add	x0, x0, #0x0
 22c:	mov	w1, #0x1                   	// #1
 230:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
 234:	ldr	w8, [x19, #8]
 238:	ldr	x21, [x19]
 23c:	cbnz	w8, cc <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0xcc>
 240:	b	1ec <_ZN4llvm23SmallVectorTemplateBaseINS_14SmallSetVectorIPNS_6RecordELj16EEELb0EE4growEm+0x1ec>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	ldr	w8, [x1, #8]
  10:	ldr	w9, [x0, #8]
  14:	bfxil	w9, w8, #0, #1
  18:	str	w9, [x1, #8]
  1c:	ldp	w9, w10, [x0, #8]
  20:	bfxil	w8, w9, #0, #1
  24:	str	w8, [x0, #8]
  28:	ldr	w8, [x1, #12]
  2c:	str	w8, [x0, #12]
  30:	str	w10, [x1, #12]
  34:	ldr	w8, [x0, #8]
  38:	ldr	w9, [x1, #8]
  3c:	tbnz	w8, #0, 80 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x80>
  40:	tbnz	w9, #0, 84 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x84>
  44:	ldr	x8, [x1, #16]
  48:	ldr	x9, [x0, #16]
  4c:	str	x8, [x0, #16]
  50:	str	x9, [x1, #16]
  54:	ldrb	w8, [x0, #8]
  58:	tbnz	w8, #0, 254 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x254>
  5c:	ldrb	w8, [x1, #8]
  60:	tbnz	w8, #0, 254 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x254>
  64:	ldr	w8, [x1, #24]
  68:	ldr	w9, [x0, #24]
  6c:	str	w8, [x0, #24]
  70:	str	w9, [x1, #24]
  74:	ldp	x29, x30, [sp, #16]
  78:	add	sp, sp, #0x20
  7c:	ret
  80:	tbnz	w9, #0, 1cc <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1cc>
  84:	tst	w8, #0x1
  88:	csel	x9, x1, x0, ne  // ne = any
  8c:	ldr	w10, [x9, #8]
  90:	csel	x8, x0, x1, ne  // ne = any
  94:	tbnz	w10, #0, 254 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x254>
  98:	ldr	q0, [x9, #16]
  9c:	orr	w10, w10, #0x1
  a0:	str	q0, [sp]
  a4:	str	w10, [x9, #8]
  a8:	ldrb	w10, [x8, #8]
  ac:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
  b0:	ldr	x10, [x8, #16]
  b4:	add	x11, x9, #0x10
  b8:	str	x10, [x11]
  bc:	ldrb	w10, [x8, #8]
  c0:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
  c4:	ldr	x10, [x8, #24]
  c8:	str	x10, [x9, #24]
  cc:	ldrb	w10, [x8, #8]
  d0:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
  d4:	ldr	x10, [x8, #32]
  d8:	str	x10, [x9, #32]
  dc:	ldrb	w10, [x8, #8]
  e0:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
  e4:	ldr	x10, [x8, #40]
  e8:	str	x10, [x9, #40]
  ec:	ldrb	w10, [x8, #8]
  f0:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
  f4:	ldr	x10, [x8, #48]
  f8:	str	x10, [x9, #48]
  fc:	ldrb	w10, [x8, #8]
 100:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 104:	ldr	x10, [x8, #56]
 108:	str	x10, [x9, #56]
 10c:	ldrb	w10, [x8, #8]
 110:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 114:	ldr	x10, [x8, #64]
 118:	str	x10, [x9, #64]
 11c:	ldrb	w10, [x8, #8]
 120:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 124:	ldr	x10, [x8, #72]
 128:	str	x10, [x9, #72]
 12c:	ldrb	w10, [x8, #8]
 130:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 134:	ldr	x10, [x8, #80]
 138:	str	x10, [x9, #80]
 13c:	ldrb	w10, [x8, #8]
 140:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 144:	ldr	x10, [x8, #88]
 148:	str	x10, [x9, #88]
 14c:	ldrb	w10, [x8, #8]
 150:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 154:	ldr	x10, [x8, #96]
 158:	str	x10, [x9, #96]
 15c:	ldrb	w10, [x8, #8]
 160:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 164:	ldr	x10, [x8, #104]
 168:	str	x10, [x9, #104]
 16c:	ldrb	w10, [x8, #8]
 170:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 174:	ldr	x10, [x8, #112]
 178:	str	x10, [x9, #112]
 17c:	ldrb	w10, [x8, #8]
 180:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 184:	ldr	x10, [x8, #120]
 188:	str	x10, [x9, #120]
 18c:	ldrb	w10, [x8, #8]
 190:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 194:	ldr	x10, [x8, #128]
 198:	str	x10, [x9, #128]
 19c:	ldrb	w10, [x8, #8]
 1a0:	tbz	w10, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 1a4:	ldr	x10, [x8, #136]
 1a8:	str	x10, [x9, #136]
 1ac:	ldr	w9, [x8, #8]
 1b0:	and	w9, w9, #0xfffffffe
 1b4:	str	w9, [x8, #8]
 1b8:	ldr	q0, [sp]
 1bc:	str	q0, [x8, #16]!
 1c0:	ldp	x29, x30, [sp, #16]
 1c4:	add	sp, sp, #0x20
 1c8:	ret
 1cc:	tbz	w8, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 1d0:	mov	x8, xzr
 1d4:	mov	x9, xzr
 1d8:	add	x10, x0, #0x10
 1dc:	add	x11, x1, #0x10
 1e0:	ldrb	w12, [x1, #8]
 1e4:	tbz	w12, #0, 234 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x234>
 1e8:	ldr	x12, [x11, x8]
 1ec:	orr	x13, x12, #0x8
 1f0:	cmn	x13, #0x8
 1f4:	b.eq	20c <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x20c>  // b.none
 1f8:	add	x14, x10, x8
 1fc:	ldr	x13, [x14]
 200:	orr	x15, x13, #0x8
 204:	cmn	x15, #0x8
 208:	b.ne	214 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x214>  // b.any
 20c:	ldr	x13, [x10, x8]
 210:	add	x14, x10, x9, lsl #3
 214:	cmp	x8, #0x78
 218:	str	x12, [x14]
 21c:	str	x13, [x11, x8]
 220:	b.eq	74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x74>  // b.none
 224:	ldrb	w12, [x0, #8]
 228:	add	x9, x9, #0x1
 22c:	add	x8, x8, #0x8
 230:	tbnz	w12, #0, 1e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_+0x1e0>
 234:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 238:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 23c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 240:	add	x0, x0, #0x0
 244:	add	x1, x1, #0x0
 248:	add	x3, x3, #0x0
 24c:	mov	w2, #0x44e                 	// #1102
 250:	bl	0 <__assert_fail>
 254:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 258:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 25c:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE4swapERS9_>
 260:	add	x0, x0, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0x45b                 	// #1115
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x0, x1
  1c:	b.eq	114 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x114>  // b.none
  20:	mov	x21, x1
  24:	mov	x20, x1
  28:	ldr	x1, [x21], #16
  2c:	cmp	x1, x21
  30:	b.eq	68 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x68>  // b.none
  34:	mov	x8, x19
  38:	ldr	x0, [x8], #16
  3c:	cmp	x0, x8
  40:	b.eq	4c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x4c>  // b.none
  44:	bl	0 <free>
  48:	ldr	x1, [x20]
  4c:	str	x1, [x19]
  50:	mov	x22, x20
  54:	ldr	x8, [x22, #8]!
  58:	str	x8, [x19, #8]
  5c:	str	x21, [x20]
  60:	str	wzr, [x20, #12]
  64:	b	110 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x110>
  68:	mov	x22, x20
  6c:	ldr	w21, [x22, #8]!
  70:	ldr	w23, [x19, #8]
  74:	cmp	w23, w21
  78:	b.cs	b4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xb4>  // b.hs, b.nlast
  7c:	ldr	w8, [x19, #12]
  80:	cmp	w8, w21
  84:	b.cs	c8 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xc8>  // b.hs, b.nlast
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	mov	x2, x21
  98:	str	wzr, [x19, #8]
  9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a0:	mov	x23, xzr
  a4:	ldr	w8, [x20, #8]
  a8:	cmp	x23, x8
  ac:	b.ne	e4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xe4>  // b.any
  b0:	b	100 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x100>
  b4:	cbz	w21, 100 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x100>
  b8:	ldr	x0, [x19]
  bc:	lsl	x2, x21, #3
  c0:	bl	0 <memmove>
  c4:	b	100 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x100>
  c8:	cbz	w23, 12c <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x12c>
  cc:	ldr	x0, [x19]
  d0:	lsl	x2, x23, #3
  d4:	bl	0 <memmove>
  d8:	ldr	w8, [x20, #8]
  dc:	cmp	x23, x8
  e0:	b.eq	100 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x100>  // b.none
  e4:	ldr	x9, [x20]
  e8:	ldr	x10, [x19]
  ec:	add	x1, x9, x23, lsl #3
  f0:	add	x8, x9, x8, lsl #3
  f4:	add	x0, x10, x23, lsl #3
  f8:	sub	x2, x8, x1
  fc:	bl	0 <memcpy>
 100:	ldr	w8, [x19, #12]
 104:	cmp	w8, w21
 108:	b.cc	140 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x140>  // b.lo, b.ul, b.last
 10c:	str	w21, [x19, #8]
 110:	str	wzr, [x22]
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #48]
 11c:	ldp	x22, x21, [sp, #32]
 120:	ldr	x23, [sp, #16]
 124:	ldp	x29, x30, [sp], #64
 128:	ret
 12c:	mov	x23, xzr
 130:	ldr	w8, [x20, #8]
 134:	cmp	x23, x8
 138:	b.ne	e4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0xe4>  // b.any
 13c:	b	100 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_+0x100>
 140:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 144:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 148:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSEOS3_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x43                  	// #67
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_:

0000000000000000 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #8]
  14:	mov	x20, x0
  18:	mov	x19, x1
  1c:	tbnz	w8, #0, 30 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x30>
  20:	ldr	x0, [x20, #16]
  24:	bl	0 <_ZdlPv>
  28:	ldr	w8, [x20, #8]
  2c:	tbnz	w8, #0, 148 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x148>
  30:	orr	w9, w8, #0x1
  34:	str	w9, [x20, #8]
  38:	ldrb	w9, [x19, #8]
  3c:	tbnz	w9, #0, 74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x74>
  40:	ldr	w9, [x19, #24]
  44:	cmp	w9, #0x11
  48:	b.cc	74 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x74>  // b.lo, b.ul, b.last
  4c:	and	w8, w8, #0xfffffffe
  50:	str	w8, [x20, #8]
  54:	ldrb	w8, [x19, #8]
  58:	tbnz	w8, #0, 168 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x168>
  5c:	ldr	w21, [x19, #24]
  60:	cmp	w21, #0x10
  64:	b.ls	168 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x168>  // b.plast
  68:	lsl	x0, x21, #3
  6c:	bl	0 <_Znwm>
  70:	stp	x0, x21, [x20, #16]
  74:	cmp	x19, x20
  78:	b.eq	108 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x108>  // b.none
  7c:	ldr	w8, [x20, #8]
  80:	mov	w9, #0x10                  	// #16
  84:	mov	w10, #0x10                  	// #16
  88:	tbnz	w8, #0, 90 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x90>
  8c:	ldr	w10, [x20, #24]
  90:	ldr	w11, [x19, #8]
  94:	ldr	w12, [x19, #24]
  98:	tst	w11, #0x1
  9c:	csel	w9, w12, w9, eq  // eq = none
  a0:	cmp	w10, w9
  a4:	b.ne	128 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0x128>  // b.any
  a8:	and	w8, w8, #0x1
  ac:	and	w9, w11, #0xfffffffe
  b0:	orr	w9, w9, w8
  b4:	str	w9, [x20, #8]
  b8:	ldr	w9, [x19, #12]
  bc:	str	w9, [x20, #12]
  c0:	cbnz	w8, e0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0xe0>
  c4:	ldr	x0, [x20, #16]
  c8:	ldr	x8, [x19, #16]!
  cc:	ldr	w9, [x20, #24]
  d0:	ldurb	w10, [x19, #-8]
  d4:	lsl	x2, x9, #3
  d8:	tst	w10, #0x1
  dc:	b	f4 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_+0xf4>
  e0:	ldr	x8, [x19, #16]!
  e4:	add	x0, x20, #0x10
  e8:	mov	w2, #0x80                  	// #128
  ec:	ldurb	w9, [x19, #-8]
  f0:	tst	w9, #0x1
  f4:	csel	x1, x8, x19, eq  // eq = none
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	b	0 <memcpy>
 108:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 10c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 110:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 114:	add	x0, x0, #0x0
 118:	add	x1, x1, #0x0
 11c:	add	x3, x3, #0x0
 120:	mov	w2, #0x189                 	// #393
 124:	bl	0 <__assert_fail>
 128:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 12c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 130:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x18a                 	// #394
 144:	bl	0 <__assert_fail>
 148:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 14c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 150:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 154:	add	x0, x0, #0x0
 158:	add	x1, x1, #0x0
 15c:	add	x3, x3, #0x0
 160:	mov	w2, #0x45b                 	// #1115
 164:	bl	0 <__assert_fail>
 168:	adrp	x0, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 16c:	adrp	x1, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 170:	adrp	x3, 0 <_ZN4llvm13SmallDenseMapIPNS_6RecordENS_6detail13DenseSetEmptyELj16ENS_12DenseMapInfoIS2_EENS3_12DenseSetPairIS2_EEE8copyFromERKS9_>
 174:	add	x0, x0, #0x0
 178:	add	x1, x1, #0x0
 17c:	add	x3, x3, #0x0
 180:	mov	w2, #0x47d                 	// #1149
 184:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #3
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #3
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #3
  ac:	add	x8, x9, x8, lsl #3
  b0:	add	x0, x10, x22, lsl #3
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_6RecordEEaSERKS3_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x9, x0
  10:	ldr	x2, [x1, #8]
  14:	ldp	x3, x4, [x0]
  18:	ldr	x11, [x9, #16]!
  1c:	mov	w12, #0xf                   	// #15
  20:	mov	x19, x8
  24:	add	x10, x2, x4
  28:	cmp	x3, x9
  2c:	ldr	x9, [x1]
  30:	csel	x11, x12, x11, eq  // eq = none
  34:	cmp	x10, x11
  38:	b.ls	58 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x58>  // b.plast
  3c:	mov	x8, x1
  40:	ldr	x11, [x8, #16]!
  44:	cmp	x9, x8
  48:	mov	w8, #0xf                   	// #15
  4c:	csel	x8, x8, x11, eq  // eq = none
  50:	cmp	x10, x8
  54:	b.ls	64 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x64>  // b.plast
  58:	mov	x1, x9
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  60:	b	74 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x74>
  64:	mov	x0, x1
  68:	mov	x1, xzr
  6c:	mov	x2, xzr
  70:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
  74:	add	x9, x19, #0x10
  78:	str	x9, [x19]
  7c:	mov	x8, x0
  80:	ldr	x10, [x8], #16
  84:	cmp	x10, x8
  88:	b.eq	9c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0x9c>  // b.none
  8c:	str	x10, [x19]
  90:	ldr	x9, [x0, #16]
  94:	str	x9, [x19, #16]
  98:	b	a4 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_S9_+0xa4>
  9c:	ldr	q0, [x10]
  a0:	str	q0, [x9]
  a4:	ldr	x9, [x0, #8]
  a8:	str	x9, [x19, #8]
  ac:	stp	x8, xzr, [x0]
  b0:	ldr	x19, [sp, #16]
  b4:	strb	wzr, [x0, #16]
  b8:	ldp	x29, x30, [sp], #32
  bc:	ret

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x0
  14:	mov	x0, x1
  18:	mov	x20, x1
  1c:	mov	x19, x8
  20:	bl	0 <strlen>
  24:	ldr	x8, [x21, #8]
  28:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  2c:	sub	x8, x9, x8
  30:	cmp	x8, x0
  34:	b.cc	98 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x98>  // b.lo, b.ul, b.last
  38:	mov	x2, x0
  3c:	mov	x0, x21
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  48:	add	x9, x19, #0x10
  4c:	str	x9, [x19]
  50:	mov	x8, x0
  54:	ldr	x10, [x8], #16
  58:	cmp	x10, x8
  5c:	b.eq	70 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x70>  // b.none
  60:	str	x10, [x19]
  64:	ldr	x9, [x0, #16]
  68:	str	x9, [x19, #16]
  6c:	b	78 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_+0x78>
  70:	ldr	q0, [x10]
  74:	str	q0, [x9]
  78:	ldr	x9, [x0, #8]
  7c:	str	x9, [x19, #8]
  80:	stp	x8, xzr, [x0]
  84:	strb	wzr, [x0, #16]
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret
  98:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEOS8_PKS5_>
  9c:	add	x0, x0, #0x0
  a0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x21, x0
  18:	mov	x20, x8
  1c:	bl	0 <strlen>
  20:	mov	x8, x20
  24:	strb	wzr, [x8, #16]!
  28:	stp	x8, xzr, [x20]
  2c:	ldr	x8, [x19, #8]
  30:	mov	x22, x0
  34:	add	x1, x8, x0
  38:	mov	x0, x20
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	ldr	x8, [x20, #8]
  44:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  48:	sub	x8, x9, x8
  4c:	cmp	x8, x22
  50:	b.cc	7c <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_+0x7c>  // b.lo, b.ul, b.last
  54:	mov	x0, x20
  58:	mov	x1, x21
  5c:	mov	x2, x22
  60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  64:	ldp	x1, x2, [x19]
  68:	mov	x0, x20
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldp	x22, x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
  7c:	adrp	x0, 0 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>
  80:	add	x0, x0, #0x0
  84:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm13format_objectIJjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjEE7snprintEPcj>:
   0:	ldr	x8, [x0, #8]
   4:	ldr	w3, [x0, #16]
   8:	mov	w9, w2
   c:	mov	x0, x1
  10:	mov	x1, x9
  14:	mov	x2, x8
  18:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	140 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x140>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x11
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbz	x0, 90 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x90>
  80:	add	x25, x24, #0x10
  84:	stp	x22, xzr, [x24]
  88:	cbnz	x22, dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  8c:	b	ec <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xec>
  90:	cbz	x25, b4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xb4>
  94:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  98:	add	x0, x0, #0x0
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  a4:	add	x25, x24, #0x10
  a8:	stp	x22, xzr, [x24]
  ac:	cbnz	x22, dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  b0:	b	ec <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xec>
  b4:	mov	w0, #0x1                   	// #1
  b8:	bl	0 <malloc>
  bc:	mov	x24, x0
  c0:	cbnz	x0, d4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xd4>
  c4:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  c8:	add	x0, x0, #0x0
  cc:	mov	w1, #0x1                   	// #1
  d0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  d4:	stp	x22, xzr, [x24]
  d8:	add	x25, x24, #0x10
  dc:	mov	x0, x25
  e0:	mov	x1, x23
  e4:	mov	x2, x22
  e8:	bl	0 <memcpy>
  ec:	strb	wzr, [x25, x22]
  f0:	str	x24, [x19]
  f4:	ldp	w8, w9, [x20, #12]
  f8:	ldr	w10, [x20, #8]
  fc:	add	w8, w8, #0x1
 100:	add	w9, w9, w8
 104:	cmp	w9, w10
 108:	str	w8, [x20, #12]
 10c:	b.hi	15c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x15c>  // b.pmore
 110:	mov	x0, x20
 114:	mov	w1, w21
 118:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 11c:	ldr	x8, [x20]
 120:	add	x19, x8, w0, uxtw #3
 124:	b	12c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x12c>
 128:	add	x19, x19, #0x8
 12c:	ldr	x8, [x19]
 130:	cbz	x8, 128 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x128>
 134:	cmn	x8, #0x8
 138:	b.eq	128 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x128>  // b.none
 13c:	mov	w1, #0x1                   	// #1
 140:	mov	x0, x19
 144:	ldp	x20, x19, [sp, #64]
 148:	ldp	x22, x21, [sp, #48]
 14c:	ldp	x24, x23, [sp, #32]
 150:	ldr	x25, [sp, #16]
 154:	ldp	x29, x30, [sp], #80
 158:	ret
 15c:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 160:	adrp	x1, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 164:	adrp	x3, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8OperatorESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x1bb                 	// #443
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	140 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x140>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x11
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbz	x0, 90 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x90>
  80:	add	x25, x24, #0x10
  84:	stp	x22, xzr, [x24]
  88:	cbnz	x22, dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  8c:	b	ec <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xec>
  90:	cbz	x25, b4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xb4>
  94:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  98:	add	x0, x0, #0x0
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  a4:	add	x25, x24, #0x10
  a8:	stp	x22, xzr, [x24]
  ac:	cbnz	x22, dc <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xdc>
  b0:	b	ec <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xec>
  b4:	mov	w0, #0x1                   	// #1
  b8:	bl	0 <malloc>
  bc:	mov	x24, x0
  c0:	cbnz	x0, d4 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0xd4>
  c4:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
  c8:	add	x0, x0, #0x0
  cc:	mov	w1, #0x1                   	// #1
  d0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  d4:	stp	x22, xzr, [x24]
  d8:	add	x25, x24, #0x10
  dc:	mov	x0, x25
  e0:	mov	x1, x23
  e4:	mov	x2, x22
  e8:	bl	0 <memcpy>
  ec:	strb	wzr, [x25, x22]
  f0:	str	x24, [x19]
  f4:	ldp	w8, w9, [x20, #12]
  f8:	ldr	w10, [x20, #8]
  fc:	add	w8, w8, #0x1
 100:	add	w9, w9, w8
 104:	cmp	w9, w10
 108:	str	w8, [x20, #12]
 10c:	b.hi	15c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x15c>  // b.pmore
 110:	mov	x0, x20
 114:	mov	w1, w21
 118:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 11c:	ldr	x8, [x20]
 120:	add	x19, x8, w0, uxtw #3
 124:	b	12c <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x12c>
 128:	add	x19, x19, #0x8
 12c:	ldr	x8, [x19]
 130:	cbz	x8, 128 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x128>
 134:	cmn	x8, #0x8
 138:	b.eq	128 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_+0x128>  // b.none
 13c:	mov	w1, #0x1                   	// #1
 140:	mov	x0, x19
 144:	ldp	x20, x19, [sp, #64]
 148:	ldp	x22, x21, [sp, #48]
 14c:	ldp	x24, x23, [sp, #32]
 150:	ldr	x25, [sp, #16]
 154:	ldp	x29, x30, [sp], #80
 158:	ret
 15c:	adrp	x0, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 160:	adrp	x1, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 164:	adrp	x3, 0 <_ZN4llvm9StringMapISt10unique_ptrINS_9SetTheory8ExpanderESt14default_deleteIS3_EENS_15MallocAllocatorEE11try_emplaceIJEEESt4pairINS_17StringMapIteratorIS6_EEbENS_9StringRefEDpOT_>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x1bb                 	// #443
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm9SetTheory8ExpanderD2Ev:

0000000000000000 <_ZN4llvm9SetTheory8ExpanderD2Ev>:
   0:	ret

Disassembly of section .text._ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_:

0000000000000000 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x74>  // b.none
  2c:	ldr	x22, [x22]
  30:	ldr	x8, [x20, #32]
  34:	cmp	x22, x8
  38:	b.cs	dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0xdc>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	x8, [x0, #32]
  54:	cmp	x8, x22
  58:	b.cs	130 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x130>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	x9, [x22]
  84:	ldr	x8, [x19, #32]
  88:	cmp	x8, x9
  8c:	b.cc	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x170>
  98:	ldr	x8, [x22]
  9c:	ldr	x10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	x8, x10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x9c>
  bc:	cmp	x8, x10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cs	18c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x18c>  // b.hs, b.nlast
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>
  dc:	cmp	x8, x22
  e0:	b.cs	11c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x11c>  // b.hs, b.nlast
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldr	x8, [x0, #32]
  fc:	cmp	x22, x8
 100:	b.cs	198 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x198>  // b.hs, b.nlast
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1d0>
 138:	ldr	x8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	x22, x8
 14c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x138>
 158:	cmp	x22, x8
 15c:	mov	x0, x19
 160:	b.cs	1fc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1fc>  // b.hs, b.nlast
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldr	x8, [x22]
 18c:	ldr	x9, [x0, #32]
 190:	cmp	x9, x8
 194:	b	204 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1e4>
 1a0:	ldr	x8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	x22, x8
 1b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1a0>
 1c0:	cmp	x22, x8
 1c4:	mov	x0, x19
 1c8:	b.cc	1e8 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1e8>  // b.lo, b.ul, b.last
 1cc:	b	1fc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeIPN4llvm6RecordESt4pairIKS2_St6vectorIS2_SaIS2_EEESt10_Select1stIS8_ESt4lessIS2_ESaIS8_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS8_ERS4_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldr	x8, [x0, #32]
 200:	cmp	x8, x22
 204:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 208:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

Disassembly of section .text._ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x8, [x0, #16]
  1c:	ldr	x23, [x0]
  20:	sub	x24, x2, x1
  24:	asr	x25, x24, #3
  28:	mov	x20, x1
  2c:	sub	x8, x8, x23
  30:	mov	x19, x0
  34:	cmp	x25, x8, asr #3
  38:	b.ls	7c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x7c>  // b.plast
  3c:	lsr	x8, x25, #60
  40:	cbnz	x8, 11c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x11c>
  44:	cbz	x24, 10c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x10c>
  48:	mov	x0, x24
  4c:	bl	0 <_Znwm>
  50:	mov	x1, x20
  54:	mov	x2, x24
  58:	mov	x21, x0
  5c:	bl	0 <memcpy>
  60:	ldr	x0, [x19]
  64:	cbz	x0, 6c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
  68:	bl	0 <_ZdlPv>
  6c:	add	x8, x21, x25, lsl #3
  70:	stp	x21, x8, [x19]
  74:	str	x8, [x19, #16]
  78:	b	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>
  7c:	ldr	x21, [x19, #8]
  80:	mov	x22, x2
  84:	sub	x2, x21, x23
  88:	asr	x8, x2, #3
  8c:	cmp	x8, x25
  90:	b.cs	cc <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xcc>  // b.hs, b.nlast
  94:	add	x24, x20, x8, lsl #3
  98:	cbz	x2, ac <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xac>
  9c:	mov	x0, x23
  a0:	mov	x1, x20
  a4:	bl	0 <memmove>
  a8:	ldr	x21, [x19, #8]
  ac:	subs	x2, x22, x24
  b0:	asr	x20, x2, #3
  b4:	b.eq	c4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xc4>  // b.none
  b8:	mov	x0, x21
  bc:	mov	x1, x24
  c0:	bl	0 <memmove>
  c4:	add	x8, x21, x20, lsl #3
  c8:	b	f0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf0>
  cc:	cbz	x24, e4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xe4>
  d0:	mov	x0, x23
  d4:	mov	x1, x20
  d8:	mov	x2, x24
  dc:	bl	0 <memmove>
  e0:	ldr	x21, [x19, #8]
  e4:	add	x8, x23, x25, lsl #3
  e8:	cmp	x21, x8
  ec:	b.eq	f4 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0xf4>  // b.none
  f0:	str	x8, [x19, #8]
  f4:	ldp	x20, x19, [sp, #64]
  f8:	ldp	x22, x21, [sp, #48]
  fc:	ldp	x24, x23, [sp, #32]
 100:	ldr	x25, [sp, #16]
 104:	ldp	x29, x30, [sp], #80
 108:	ret
 10c:	mov	x21, xzr
 110:	ldr	x0, [x19]
 114:	cbnz	x0, 68 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x68>
 118:	b	6c <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag+0x6c>
 11c:	adrp	x0, 0 <_ZNSt6vectorIPN4llvm6RecordESaIS2_EE13_M_assign_auxIPKS2_EEvT_S8_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

StringMatcher.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>:
       0:	sub	sp, sp, #0x120
       4:	stp	x29, x30, [sp, #192]
       8:	stp	x28, x27, [sp, #208]
       c:	stp	x26, x25, [sp, #224]
      10:	stp	x24, x23, [sp, #240]
      14:	stp	x22, x21, [sp, #256]
      18:	stp	x20, x19, [sp, #272]
      1c:	add	x29, sp, #0xc0
      20:	ldp	x8, x9, [x1]
      24:	cmp	x8, x9
      28:	b.eq	e3c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe3c>  // b.none
      2c:	lsl	w8, w3, #1
      30:	sub	x9, x29, #0x30
      34:	mov	w20, w2
      38:	mov	x26, x1
      3c:	mov	x19, x0
      40:	add	w1, w8, #0x4
      44:	add	x8, x9, #0x10
      48:	sub	x0, x29, #0x30
      4c:	mov	w2, #0x20                  	// #32
      50:	mov	w25, w4
      54:	mov	w21, w3
      58:	str	x8, [sp, #16]
      5c:	stur	x8, [x29, #-48]
      60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
      64:	ldr	x8, [x26]
      68:	mov	w27, w20
      6c:	str	w20, [sp, #12]
      70:	ldr	x9, [x8]
      74:	ldr	x10, [x9, #8]
      78:	cmp	x10, x27
      7c:	b.ne	e0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe0>  // b.any
      80:	ldr	x10, [x26, #8]
      84:	sub	x8, x10, x8
      88:	asr	x8, x8, #3
      8c:	cmp	x8, #0x2
      90:	b.cc	98 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x98>  // b.lo, b.ul, b.last
      94:	tbz	w25, #0, e5c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe5c>
      98:	ldr	q0, [x9, #32]
      9c:	mov	w8, #0xa                   	// #10
      a0:	add	x0, sp, #0x60
      a4:	add	x1, sp, #0x40
      a8:	mov	w2, #0x1                   	// #1
      ac:	mov	x3, xzr
      b0:	str	q0, [sp, #96]
      b4:	strb	w8, [sp, #64]
      b8:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
      bc:	cmn	x0, #0x1
      c0:	b.eq	304 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x304>  // b.none
      c4:	ldp	x23, x8, [sp, #96]
      c8:	cmp	x8, x0
      cc:	csinc	x9, x8, x0, ls  // ls = plast
      d0:	csel	x21, x8, x0, cc  // cc = lo, ul, last
      d4:	add	x25, x23, x9
      d8:	sub	x24, x8, x9
      dc:	b	310 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x310>
      e0:	add	x9, sp, #0x60
      e4:	add	x9, x9, #0x8
      e8:	str	wzr, [sp, #104]
      ec:	stp	xzr, x9, [sp, #112]
      f0:	stp	x9, xzr, [sp, #128]
      f4:	str	x9, [sp, #56]
      f8:	ldr	x9, [x26, #8]
      fc:	sub	x9, x9, x8
     100:	lsr	x10, x9, #3
     104:	cbz	w10, 2c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2c4>
     108:	ubfx	x9, x9, #3, #32
     10c:	lsl	x9, x9, #3
     110:	str	w21, [sp, #8]
     114:	mov	x21, xzr
     118:	sub	x22, x9, #0x8
     11c:	str	w25, [sp, #52]
     120:	stp	x27, x26, [sp, #32]
     124:	str	x22, [sp, #24]
     128:	ldr	x8, [x8, x21]
     12c:	add	x0, sp, #0x60
     130:	ldr	x8, [x8]
     134:	add	x1, x8, x27
     138:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     13c:	mov	x8, x0
     140:	mov	x28, x0
     144:	ldr	x23, [x26]
     148:	ldr	x9, [x8, #8]!
     14c:	ldr	x10, [x28, #16]!
     150:	cmp	x9, x10
     154:	b.eq	178 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x178>  // b.none
     158:	ldr	x10, [x23, x21]
     15c:	str	x10, [x9]
     160:	ldr	x9, [x8]
     164:	add	x9, x9, #0x8
     168:	cmp	x22, x21
     16c:	str	x9, [x8]
     170:	b.ne	238 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x238>  // b.any
     174:	b	244 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x244>
     178:	ldr	x24, [x0]
     17c:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     180:	mov	x20, x0
     184:	sub	x26, x9, x24
     188:	cmp	x26, x8
     18c:	b.eq	e30 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe30>  // b.none
     190:	asr	x22, x26, #3
     194:	cmp	x26, #0x0
     198:	csinc	x8, x22, xzr, ne  // ne = any
     19c:	adds	x8, x8, x22
     1a0:	lsr	x10, x8, #60
     1a4:	cset	w9, cs  // cs = hs, nlast
     1a8:	cmp	x10, #0x0
     1ac:	cset	w10, ne  // ne = any
     1b0:	orr	w9, w9, w10
     1b4:	cmp	w9, #0x0
     1b8:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     1bc:	mov	x25, x19
     1c0:	csel	x19, x9, x8, ne  // ne = any
     1c4:	cbz	x19, 1d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1d8>
     1c8:	lsl	x0, x19, #3
     1cc:	bl	0 <_Znwm>
     1d0:	mov	x27, x0
     1d4:	b	1dc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x1dc>
     1d8:	mov	x27, xzr
     1dc:	ldr	x8, [x23, x21]
     1e0:	add	x22, x27, x22, lsl #3
     1e4:	cmp	x26, #0x1
     1e8:	str	x8, [x22]
     1ec:	b.lt	200 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x200>  // b.tstop
     1f0:	mov	x0, x27
     1f4:	mov	x1, x24
     1f8:	mov	x2, x26
     1fc:	bl	0 <memmove>
     200:	add	x22, x22, #0x8
     204:	cbz	x24, 210 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x210>
     208:	mov	x0, x24
     20c:	bl	0 <_ZdlPv>
     210:	stp	x27, x22, [x20]
     214:	add	x9, x27, x19, lsl #3
     218:	mov	x19, x25
     21c:	ldr	w25, [sp, #52]
     220:	ldp	x27, x26, [sp, #32]
     224:	ldr	x22, [sp, #24]
     228:	mov	x8, x28
     22c:	cmp	x22, x21
     230:	str	x9, [x8]
     234:	b.eq	244 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x244>  // b.none
     238:	ldr	x8, [x26]
     23c:	add	x21, x21, #0x8
     240:	b	128 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x128>
     244:	ldr	x8, [sp, #136]
     248:	ldr	w21, [sp, #8]
     24c:	cmp	x8, #0x1
     250:	b.ne	2c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2c4>  // b.any
     254:	ldp	x8, x9, [x26]
     258:	cmp	x8, x9
     25c:	b.eq	e6c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe6c>  // b.none
     260:	ldr	x10, [x8]
     264:	ldr	w24, [x10, #8]
     268:	cbz	w24, 2b8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2b8>
     26c:	sub	x9, x9, x8
     270:	lsr	x9, x9, #3
     274:	cbz	w9, 2b8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x2b8>
     278:	ldr	x10, [x10]
     27c:	mov	w11, wzr
     280:	mov	w12, w11
     284:	ldrb	w13, [x10, x12]
     288:	mov	w14, wzr
     28c:	ldr	x15, [x8, w14, uxtw #3]
     290:	ldr	x15, [x15]
     294:	ldrb	w15, [x15, x12]
     298:	cmp	w15, w13
     29c:	b.ne	948 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x948>  // b.any
     2a0:	add	w14, w14, #0x1
     2a4:	cmp	w9, w14
     2a8:	b.ne	28c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x28c>  // b.any
     2ac:	add	w11, w11, #0x1
     2b0:	cmp	w11, w24
     2b4:	b.ne	280 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x280>  // b.any
     2b8:	mov	x28, x27
     2bc:	mov	w22, w25
     2c0:	b	954 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x954>
     2c4:	ldr	x0, [x19, #24]
     2c8:	ldp	x1, x2, [x29, #-48]
     2cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2d0:	ldp	x9, x8, [x0, #16]
     2d4:	mov	x22, x0
     2d8:	sub	x9, x9, x8
     2dc:	cmp	x9, #0x7
     2e0:	b.hi	538 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x538>  // b.pmore
     2e4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     2e8:	add	x1, x1, #0x0
     2ec:	mov	w2, #0x8                   	// #8
     2f0:	mov	x0, x22
     2f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     2f8:	mov	x22, x0
     2fc:	ldr	x0, [x0, #24]
     300:	b	558 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x558>
     304:	ldp	x23, x21, [sp, #96]
     308:	mov	x24, xzr
     30c:	mov	x25, xzr
     310:	ldr	x0, [x19, #24]
     314:	ldp	x1, x2, [x29, #-48]
     318:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     31c:	mov	x20, x0
     320:	ldp	x8, x0, [x0, #16]
     324:	sub	x8, x8, x0
     328:	cmp	x21, x8
     32c:	b.ls	34c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x34c>  // b.plast
     330:	mov	x0, x20
     334:	mov	x1, x23
     338:	mov	x2, x21
     33c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     340:	mov	x20, x0
     344:	ldr	x0, [x0, #24]
     348:	b	368 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x368>
     34c:	cbz	x21, 368 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x368>
     350:	mov	x1, x23
     354:	mov	x2, x21
     358:	bl	0 <memcpy>
     35c:	ldr	x8, [x20, #24]
     360:	add	x0, x8, x21
     364:	str	x0, [x20, #24]
     368:	ldr	x8, [x20, #16]
     36c:	sub	x8, x8, x0
     370:	cmp	x8, #0x5
     374:	b.hi	394 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x394>  // b.pmore
     378:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     37c:	add	x1, x1, #0x0
     380:	mov	w2, #0x6                   	// #6
     384:	mov	x0, x20
     388:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     38c:	mov	x20, x0
     390:	b	3b4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3b4>
     394:	mov	w9, #0x2009                	// #8201
     398:	mov	w8, #0x2220                	// #8736
     39c:	movk	w9, #0x2f2f, lsl #16
     3a0:	strh	w8, [x0, #4]
     3a4:	str	w9, [x0]
     3a8:	ldr	x8, [x20, #24]
     3ac:	add	x8, x8, #0x6
     3b0:	str	x8, [x20, #24]
     3b4:	ldr	x8, [x26]
     3b8:	mov	x0, x20
     3bc:	ldr	x8, [x8]
     3c0:	ldp	x1, x2, [x8]
     3c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3c8:	ldp	x9, x8, [x0, #16]
     3cc:	sub	x9, x9, x8
     3d0:	cmp	x9, #0x1
     3d4:	b.hi	3f4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x3f4>  // b.pmore
     3d8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     3dc:	add	x1, x1, #0x0
     3e0:	mov	w2, #0x2                   	// #2
     3e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     3e8:	stp	x25, x24, [sp, #96]
     3ec:	cbnz	x24, 410 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x410>
     3f0:	b	4fc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4fc>
     3f4:	mov	w9, #0xa22                 	// #2594
     3f8:	strh	w9, [x8]
     3fc:	ldr	x8, [x0, #24]
     400:	add	x8, x8, #0x2
     404:	str	x8, [x0, #24]
     408:	stp	x25, x24, [sp, #96]
     40c:	cbz	x24, 4fc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4fc>
     410:	adrp	x20, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     414:	mov	w24, #0xa                   	// #10
     418:	add	x20, x20, #0x0
     41c:	b	438 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x438>
     420:	strb	w24, [x0]
     424:	ldr	x8, [x22, #24]
     428:	add	x8, x8, #0x1
     42c:	str	x8, [x22, #24]
     430:	stp	x25, x26, [sp, #96]
     434:	cbz	x26, 4fc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4fc>
     438:	add	x0, sp, #0x60
     43c:	add	x1, sp, #0x40
     440:	mov	w2, #0x1                   	// #1
     444:	mov	x3, xzr
     448:	strb	w24, [sp, #64]
     44c:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
     450:	cmn	x0, #0x1
     454:	b.eq	474 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x474>  // b.none
     458:	ldp	x23, x8, [sp, #96]
     45c:	cmp	x8, x0
     460:	csinc	x9, x8, x0, ls  // ls = plast
     464:	csel	x21, x8, x0, cc  // cc = lo, ul, last
     468:	add	x25, x23, x9
     46c:	sub	x26, x8, x9
     470:	b	480 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x480>
     474:	ldp	x23, x21, [sp, #96]
     478:	mov	x25, xzr
     47c:	mov	x26, xzr
     480:	ldr	x0, [x19, #24]
     484:	ldp	x1, x2, [x29, #-48]
     488:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     48c:	mov	x22, x0
     490:	ldp	x8, x0, [x0, #16]
     494:	sub	x8, x8, x0
     498:	cmp	x21, x8
     49c:	b.ls	4bc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4bc>  // b.plast
     4a0:	mov	x0, x22
     4a4:	mov	x1, x23
     4a8:	mov	x2, x21
     4ac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4b0:	mov	x22, x0
     4b4:	ldr	x0, [x0, #24]
     4b8:	b	4d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4d8>
     4bc:	cbz	x21, 4d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x4d8>
     4c0:	mov	x1, x23
     4c4:	mov	x2, x21
     4c8:	bl	0 <memcpy>
     4cc:	ldr	x8, [x22, #24]
     4d0:	add	x0, x8, x21
     4d4:	str	x0, [x22, #24]
     4d8:	ldr	x8, [x22, #16]
     4dc:	cmp	x8, x0
     4e0:	b.ne	420 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x420>  // b.any
     4e4:	mov	w2, #0x1                   	// #1
     4e8:	mov	x0, x22
     4ec:	mov	x1, x20
     4f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4f4:	stp	x25, x26, [sp, #96]
     4f8:	cbnz	x26, 438 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x438>
     4fc:	mov	w19, wzr
     500:	ldur	x0, [x29, #-48]
     504:	ldr	x8, [sp, #16]
     508:	cmp	x0, x8
     50c:	b.eq	514 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x514>  // b.none
     510:	bl	0 <_ZdlPv>
     514:	and	w0, w19, #0x1
     518:	ldp	x20, x19, [sp, #272]
     51c:	ldp	x22, x21, [sp, #256]
     520:	ldp	x24, x23, [sp, #240]
     524:	ldp	x26, x25, [sp, #224]
     528:	ldp	x28, x27, [sp, #208]
     52c:	ldp	x29, x30, [sp, #192]
     530:	add	sp, sp, #0x120
     534:	ret
     538:	mov	x9, #0x7773                	// #30579
     53c:	movk	x9, #0x7469, lsl #16
     540:	movk	x9, #0x6863, lsl #32
     544:	movk	x9, #0x2820, lsl #48
     548:	str	x9, [x8]
     54c:	ldr	x8, [x22, #24]
     550:	add	x0, x8, #0x8
     554:	str	x0, [x22, #24]
     558:	ldr	x8, [x22, #16]
     55c:	ldp	x1, x20, [x19]
     560:	sub	x8, x8, x0
     564:	cmp	x20, x8
     568:	b.ls	584 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x584>  // b.plast
     56c:	mov	x0, x22
     570:	mov	x2, x20
     574:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     578:	mov	x22, x0
     57c:	ldr	x0, [x0, #24]
     580:	b	59c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x59c>
     584:	cbz	x20, 59c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x59c>
     588:	mov	x2, x20
     58c:	bl	0 <memcpy>
     590:	ldr	x8, [x22, #24]
     594:	add	x0, x8, x20
     598:	str	x0, [x22, #24]
     59c:	ldr	x8, [x22, #16]
     5a0:	cmp	x8, x0
     5a4:	b.ne	5c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5c4>  // b.any
     5a8:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     5ac:	add	x1, x1, #0x0
     5b0:	mov	w2, #0x1                   	// #1
     5b4:	mov	x0, x22
     5b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     5bc:	mov	x22, x0
     5c0:	b	5d8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x5d8>
     5c4:	mov	w8, #0x5b                  	// #91
     5c8:	strb	w8, [x0]
     5cc:	ldr	x8, [x22, #24]
     5d0:	add	x8, x8, #0x1
     5d4:	str	x8, [x22, #24]
     5d8:	mov	x0, x22
     5dc:	mov	x1, x27
     5e0:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     5e4:	ldp	x9, x8, [x0, #16]
     5e8:	sub	x9, x9, x8
     5ec:	cmp	x9, #0x4
     5f0:	b.hi	608 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x608>  // b.pmore
     5f4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     5f8:	add	x1, x1, #0x0
     5fc:	mov	w2, #0x5                   	// #5
     600:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     604:	b	628 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x628>
     608:	mov	w10, #0x295d                	// #10589
     60c:	mov	w9, #0xa                   	// #10
     610:	movk	w10, #0x7b20, lsl #16
     614:	strb	w9, [x8, #4]
     618:	str	w10, [x8]
     61c:	ldr	x8, [x0, #24]
     620:	add	x8, x8, #0x5
     624:	str	x8, [x0, #24]
     628:	ldr	x0, [x19, #24]
     62c:	ldp	x1, x2, [x29, #-48]
     630:	ldr	w22, [sp, #12]
     634:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     638:	ldp	x9, x8, [x0, #16]
     63c:	sub	x9, x9, x8
     640:	cmp	x9, #0xf
     644:	b.hi	65c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x65c>  // b.pmore
     648:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     64c:	add	x1, x1, #0x0
     650:	mov	w2, #0x10                  	// #16
     654:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     658:	b	678 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x678>
     65c:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     660:	add	x9, x9, #0x0
     664:	ldr	q0, [x9]
     668:	str	q0, [x8]
     66c:	ldr	x8, [x0, #24]
     670:	add	x8, x8, #0x10
     674:	str	x8, [x0, #24]
     678:	ldr	x0, [x19, #24]
     67c:	ldp	x1, x2, [x29, #-48]
     680:	ldr	x20, [sp, #120]
     684:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     688:	mov	x8, x0
     68c:	ldr	x10, [x0, #16]
     690:	ldr	x9, [x8, #24]!
     694:	ldr	x11, [sp, #56]
     698:	sub	x10, x10, x9
     69c:	cmp	x20, x11
     6a0:	b.eq	910 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x910>  // b.none
     6a4:	adrp	x27, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     6a8:	mov	w26, #0x3a27                	// #14887
     6ac:	mov	w24, #0x6163                	// #24931
     6b0:	add	w23, w22, #0x1
     6b4:	add	w21, w21, #0x1
     6b8:	add	x27, x27, #0x0
     6bc:	movk	w26, #0x2009, lsl #16
     6c0:	mov	w28, #0x2720                	// #10016
     6c4:	movk	w24, #0x6573, lsl #16
     6c8:	b	728 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x728>
     6cc:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     6d0:	add	x9, x9, #0x0
     6d4:	ldr	x9, [x9]
     6d8:	mov	w10, #0xa                   	// #10
     6dc:	strb	w10, [x8, #8]
     6e0:	str	x9, [x8]
     6e4:	ldr	x8, [x0, #24]
     6e8:	add	x8, x8, #0x9
     6ec:	str	x8, [x0, #24]
     6f0:	mov	x0, x20
     6f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
     6f8:	ldr	x8, [x19, #24]
     6fc:	ldp	x1, x2, [x29, #-48]
     700:	mov	x20, x0
     704:	mov	x0, x8
     708:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     70c:	mov	x8, x0
     710:	ldr	x10, [x0, #16]
     714:	ldr	x9, [x8, #24]!
     718:	ldr	x11, [sp, #56]
     71c:	sub	x10, x10, x9
     720:	cmp	x20, x11
     724:	b.eq	910 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x910>  // b.none
     728:	cmp	x10, #0x5
     72c:	b.hi	784 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x784>  // b.pmore
     730:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     734:	mov	w2, #0x6                   	// #6
     738:	add	x1, x1, #0x0
     73c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     740:	ldp	x9, x8, [x0, #16]
     744:	ldrb	w1, [x20, #32]
     748:	cmp	x8, x9
     74c:	b.cc	7a8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7a8>  // b.lo, b.ul, b.last
     750:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     754:	ldp	x9, x8, [x0, #16]
     758:	sub	x9, x9, x8
     75c:	cmp	x9, #0x6
     760:	b.ls	7c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7c4>  // b.plast
     764:	mov	w9, #0x2f20                	// #12064
     768:	movk	w9, #0x202f, lsl #16
     76c:	stur	w9, [x8, #3]
     770:	str	w26, [x8]
     774:	ldr	x8, [x0, #24]
     778:	add	x8, x8, #0x7
     77c:	str	x8, [x0, #24]
     780:	b	7d4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x7d4>
     784:	strh	w28, [x9, #4]
     788:	str	w24, [x9]
     78c:	ldr	x9, [x8]
     790:	add	x9, x9, #0x6
     794:	str	x9, [x8]
     798:	ldp	x9, x8, [x0, #16]
     79c:	ldrb	w1, [x20, #32]
     7a0:	cmp	x8, x9
     7a4:	b.cs	750 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x750>  // b.hs, b.nlast
     7a8:	add	x9, x8, #0x1
     7ac:	str	x9, [x0, #24]
     7b0:	strb	w1, [x8]
     7b4:	ldp	x9, x8, [x0, #16]
     7b8:	sub	x9, x9, x8
     7bc:	cmp	x9, #0x6
     7c0:	b.hi	764 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x764>  // b.pmore
     7c4:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     7c8:	mov	w2, #0x7                   	// #7
     7cc:	add	x1, x1, #0x0
     7d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     7d4:	mov	x22, x20
     7d8:	ldr	x8, [x22, #40]!
     7dc:	ldr	x9, [x22, #8]
     7e0:	sub	x8, x9, x8
     7e4:	asr	x1, x8, #3
     7e8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     7ec:	ldp	x9, x8, [x0, #16]
     7f0:	sub	x9, x9, x8
     7f4:	cmp	x9, #0x6
     7f8:	b.hi	820 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x820>  // b.pmore
     7fc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     800:	mov	w2, #0x7                   	// #7
     804:	add	x1, x1, #0x0
     808:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     80c:	ldp	x9, x8, [x22]
     810:	sub	x8, x8, x9
     814:	cmp	x8, #0x8
     818:	b.ne	854 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x854>  // b.any
     81c:	b	880 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x880>
     820:	mov	w9, #0x6972                	// #26994
     824:	movk	w9, #0x676e, lsl #16
     828:	stur	w9, [x8, #3]
     82c:	mov	w9, #0x7320                	// #29472
     830:	movk	w9, #0x7274, lsl #16
     834:	str	w9, [x8]
     838:	ldr	x8, [x0, #24]
     83c:	add	x8, x8, #0x7
     840:	str	x8, [x0, #24]
     844:	ldp	x9, x8, [x22]
     848:	sub	x8, x8, x9
     84c:	cmp	x8, #0x8
     850:	b.eq	880 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x880>  // b.none
     854:	ldr	x0, [x19, #24]
     858:	ldp	x9, x8, [x0, #16]
     85c:	cmp	x8, x9
     860:	b.cs	878 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x878>  // b.hs, b.nlast
     864:	add	x9, x8, #0x1
     868:	str	x9, [x0, #24]
     86c:	mov	w9, #0x73                  	// #115
     870:	strb	w9, [x8]
     874:	b	880 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x880>
     878:	mov	w1, #0x73                  	// #115
     87c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     880:	ldr	x0, [x19, #24]
     884:	ldp	x9, x8, [x0, #16]
     888:	sub	x9, x9, x8
     88c:	cmp	x9, #0xa
     890:	b.hi	8a4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8a4>  // b.pmore
     894:	mov	w2, #0xb                   	// #11
     898:	mov	x1, x27
     89c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8a0:	b	8c4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x8c4>
     8a4:	ldr	x9, [x27]
     8a8:	mov	w10, #0x6863                	// #26723
     8ac:	movk	w10, #0xa2e, lsl #16
     8b0:	stur	w10, [x8, #7]
     8b4:	str	x9, [x8]
     8b8:	ldr	x8, [x0, #24]
     8bc:	add	x8, x8, #0xb
     8c0:	str	x8, [x0, #24]
     8c4:	and	w4, w25, #0x1
     8c8:	mov	x0, x19
     8cc:	mov	x1, x22
     8d0:	mov	w2, w23
     8d4:	mov	w3, w21
     8d8:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     8dc:	tbz	w0, #0, 6f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6f0>
     8e0:	ldr	x0, [x19, #24]
     8e4:	ldp	x1, x2, [x29, #-48]
     8e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     8ec:	ldp	x9, x8, [x0, #16]
     8f0:	sub	x9, x9, x8
     8f4:	cmp	x9, #0x8
     8f8:	b.hi	6cc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6cc>  // b.pmore
     8fc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     900:	mov	w2, #0x9                   	// #9
     904:	add	x1, x1, #0x0
     908:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     90c:	b	6f0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x6f0>
     910:	cmp	x10, #0x1
     914:	b.hi	92c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x92c>  // b.pmore
     918:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     91c:	add	x1, x1, #0x0
     920:	mov	w2, #0x2                   	// #2
     924:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     928:	b	940 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x940>
     92c:	mov	w10, #0xa7d                 	// #2685
     930:	strh	w10, [x9]
     934:	ldr	x9, [x8]
     938:	add	x9, x9, #0x2
     93c:	str	x9, [x8]
     940:	mov	w19, #0x1                   	// #1
     944:	b	e10 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe10>
     948:	mov	x28, x27
     94c:	mov	w22, w25
     950:	mov	w24, w11
     954:	ldr	x0, [x19, #24]
     958:	ldp	x1, x2, [x29, #-48]
     95c:	ldr	w8, [sp, #12]
     960:	sub	w27, w24, w8
     964:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     968:	ldp	x9, x8, [x0, #16]
     96c:	mov	x25, x0
     970:	cmp	w27, #0x1
     974:	sub	x9, x9, x8
     978:	b.ne	9a4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9a4>  // b.any
     97c:	cmp	x9, #0x3
     980:	b.hi	9cc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9cc>  // b.pmore
     984:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     988:	add	x1, x1, #0x0
     98c:	mov	w2, #0x4                   	// #4
     990:	mov	x0, x25
     994:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     998:	mov	x25, x0
     99c:	ldr	x0, [x0, #24]
     9a0:	b	9e4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x9e4>
     9a4:	cmp	x9, #0xa
     9a8:	b.hi	a10 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa10>  // b.pmore
     9ac:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     9b0:	add	x1, x1, #0x0
     9b4:	mov	w2, #0xb                   	// #11
     9b8:	mov	x0, x25
     9bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     9c0:	mov	x25, x0
     9c4:	ldr	x0, [x0, #24]
     9c8:	b	a38 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa38>
     9cc:	mov	w9, #0x6669                	// #26217
     9d0:	movk	w9, #0x2820, lsl #16
     9d4:	str	w9, [x8]
     9d8:	ldr	x8, [x25, #24]
     9dc:	add	x0, x8, #0x4
     9e0:	str	x0, [x25, #24]
     9e4:	ldr	x8, [x25, #16]
     9e8:	ldp	x1, x20, [x19]
     9ec:	sub	x8, x8, x0
     9f0:	cmp	x20, x8
     9f4:	b.ls	a64 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa64>  // b.plast
     9f8:	mov	x0, x25
     9fc:	mov	x2, x20
     a00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a04:	mov	x25, x0
     a08:	ldr	x0, [x0, #24]
     a0c:	b	a7c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa7c>
     a10:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     a14:	add	x9, x9, #0x0
     a18:	ldr	x9, [x9]
     a1c:	mov	w10, #0x6d63                	// #28003
     a20:	movk	w10, #0x2870, lsl #16
     a24:	stur	w10, [x8, #7]
     a28:	str	x9, [x8]
     a2c:	ldr	x8, [x25, #24]
     a30:	add	x0, x8, #0xb
     a34:	str	x0, [x25, #24]
     a38:	ldr	x8, [x25, #16]
     a3c:	ldp	x1, x20, [x19]
     a40:	sub	x8, x8, x0
     a44:	cmp	x20, x8
     a48:	b.ls	aa4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaa4>  // b.plast
     a4c:	mov	x0, x25
     a50:	mov	x2, x20
     a54:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a58:	mov	x25, x0
     a5c:	ldr	x0, [x0, #24]
     a60:	b	abc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xabc>
     a64:	cbz	x20, a7c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xa7c>
     a68:	mov	x2, x20
     a6c:	bl	0 <memcpy>
     a70:	ldr	x8, [x25, #24]
     a74:	add	x0, x8, x20
     a78:	str	x0, [x25, #24]
     a7c:	ldr	x8, [x25, #16]
     a80:	cmp	x8, x0
     a84:	b.ne	aec <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xaec>  // b.any
     a88:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     a8c:	add	x1, x1, #0x0
     a90:	mov	w2, #0x1                   	// #1
     a94:	mov	x0, x25
     a98:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     a9c:	mov	x25, x0
     aa0:	b	b00 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb00>
     aa4:	cbz	x20, abc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xabc>
     aa8:	mov	x2, x20
     aac:	bl	0 <memcpy>
     ab0:	ldr	x8, [x25, #24]
     ab4:	add	x0, x8, x20
     ab8:	str	x0, [x25, #24]
     abc:	ldr	x8, [x25, #16]
     ac0:	mov	x23, x26
     ac4:	sub	x8, x8, x0
     ac8:	cmp	x8, #0x7
     acc:	b.hi	b34 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb34>  // b.pmore
     ad0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ad4:	add	x1, x1, #0x0
     ad8:	mov	w2, #0x8                   	// #8
     adc:	mov	x0, x25
     ae0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     ae4:	mov	x25, x0
     ae8:	b	b54 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb54>
     aec:	mov	w8, #0x5b                  	// #91
     af0:	strb	w8, [x0]
     af4:	ldr	x8, [x25, #24]
     af8:	add	x8, x8, #0x1
     afc:	str	x8, [x25, #24]
     b00:	mov	x0, x25
     b04:	mov	x1, x28
     b08:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b0c:	ldp	x9, x8, [x0, #16]
     b10:	sub	x9, x9, x8
     b14:	cmp	x9, #0x5
     b18:	b.hi	b90 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xb90>  // b.pmore
     b1c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     b20:	add	x1, x1, #0x0
     b24:	mov	w2, #0x6                   	// #6
     b28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b2c:	ldr	x8, [x0, #24]
     b30:	b	bb0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbb0>
     b34:	mov	x8, #0x642e                	// #25646
     b38:	movk	x8, #0x7461, lsl #16
     b3c:	movk	x8, #0x2861, lsl #32
     b40:	movk	x8, #0x2b29, lsl #48
     b44:	str	x8, [x0]
     b48:	ldr	x8, [x25, #24]
     b4c:	add	x8, x8, #0x8
     b50:	str	x8, [x25, #24]
     b54:	mov	x0, x25
     b58:	mov	x1, x28
     b5c:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     b60:	ldp	x9, x8, [x0, #16]
     b64:	mov	x26, x0
     b68:	sub	x9, x9, x8
     b6c:	cmp	x9, #0x2
     b70:	b.hi	c08 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc08>  // b.pmore
     b74:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     b78:	add	x1, x1, #0x0
     b7c:	mov	w2, #0x3                   	// #3
     b80:	mov	x0, x26
     b84:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     b88:	mov	x26, x0
     b8c:	b	c24 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc24>
     b90:	mov	w10, #0x205d                	// #8285
     b94:	mov	w9, #0x2720                	// #10016
     b98:	movk	w10, #0x3d21, lsl #16
     b9c:	strh	w9, [x8, #4]
     ba0:	str	w10, [x8]
     ba4:	ldr	x8, [x0, #24]
     ba8:	add	x8, x8, #0x6
     bac:	str	x8, [x0, #24]
     bb0:	ldr	x9, [x26]
     bb4:	ldr	x10, [x0, #16]
     bb8:	ldr	x9, [x9]
     bbc:	cmp	x8, x10
     bc0:	ldr	x9, [x9]
     bc4:	ldrb	w1, [x9, x28]
     bc8:	b.cs	c8c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc8c>  // b.hs, b.nlast
     bcc:	add	x9, x8, #0x1
     bd0:	str	x9, [x0, #24]
     bd4:	strb	w1, [x8]
     bd8:	ldp	x9, x8, [x0, #16]
     bdc:	sub	x9, x9, x8
     be0:	cmp	x9, #0x2
     be4:	b.ls	ca0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xca0>  // b.plast
     be8:	mov	w9, #0xa                   	// #10
     bec:	mov	w10, #0x2927                	// #10535
     bf0:	strb	w9, [x8, #2]
     bf4:	strh	w10, [x8]
     bf8:	ldr	x8, [x0, #24]
     bfc:	add	x8, x8, #0x3
     c00:	str	x8, [x0, #24]
     c04:	b	da0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xda0>
     c08:	mov	w9, #0x22                  	// #34
     c0c:	mov	w10, #0x202c                	// #8236
     c10:	strb	w9, [x8, #2]
     c14:	strh	w10, [x8]
     c18:	ldr	x8, [x26, #24]
     c1c:	add	x8, x8, #0x3
     c20:	str	x8, [x26, #24]
     c24:	ldr	x8, [x23]
     c28:	ldr	x8, [x8]
     c2c:	ldr	x3, [x8, #8]
     c30:	subs	x9, x3, x28
     c34:	b.cc	e8c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xe8c>  // b.lo, b.ul, b.last
     c38:	add	x10, sp, #0x40
     c3c:	mov	w25, w27
     c40:	add	x27, x10, #0x10
     c44:	str	x27, [sp, #64]
     c48:	mov	x21, x19
     c4c:	ldr	x19, [x8]
     c50:	cmp	x9, x25
     c54:	csel	x20, x25, x9, hi  // hi = pmore
     c58:	cbz	x20, c60 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xc60>
     c5c:	cbz	x19, ea4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xea4>
     c60:	cmp	x20, #0x10
     c64:	stur	x20, [x29, #-16]
     c68:	b.cc	cb4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcb4>  // b.lo, b.ul, b.last
     c6c:	add	x0, sp, #0x40
     c70:	sub	x1, x29, #0x10
     c74:	mov	x2, xzr
     c78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     c7c:	ldur	x8, [x29, #-16]
     c80:	str	x0, [sp, #64]
     c84:	str	x8, [sp, #80]
     c88:	b	cb8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcb8>
     c8c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
     c90:	ldp	x9, x8, [x0, #16]
     c94:	sub	x9, x9, x8
     c98:	cmp	x9, #0x2
     c9c:	b.hi	be8 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xbe8>  // b.pmore
     ca0:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ca4:	add	x1, x1, #0x0
     ca8:	mov	w2, #0x3                   	// #3
     cac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cb0:	b	da0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xda0>
     cb4:	mov	x0, x27
     cb8:	cbz	w20, cdc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcdc>
     cbc:	cmp	w20, #0x1
     cc0:	add	x1, x19, x28
     cc4:	b.ne	cd4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcd4>  // b.any
     cc8:	ldrb	w8, [x1]
     ccc:	strb	w8, [x0]
     cd0:	b	cdc <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xcdc>
     cd4:	mov	x2, x20
     cd8:	bl	0 <memcpy>
     cdc:	ldur	x8, [x29, #-16]
     ce0:	ldr	x9, [sp, #64]
     ce4:	mov	x0, x26
     ce8:	str	x8, [sp, #72]
     cec:	strb	wzr, [x9, x8]
     cf0:	ldp	x1, x2, [sp, #64]
     cf4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     cf8:	ldp	x9, x8, [x0, #16]
     cfc:	sub	x9, x9, x8
     d00:	cmp	x9, #0x2
     d04:	b.hi	d1c <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd1c>  // b.pmore
     d08:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d0c:	add	x1, x1, #0x0
     d10:	mov	w2, #0x3                   	// #3
     d14:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d18:	b	d38 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd38>
     d1c:	mov	w9, #0x20                  	// #32
     d20:	mov	w10, #0x2c22                	// #11298
     d24:	strb	w9, [x8, #2]
     d28:	strh	w10, [x8]
     d2c:	ldr	x8, [x0, #24]
     d30:	add	x8, x8, #0x3
     d34:	str	x8, [x0, #24]
     d38:	mov	x1, x25
     d3c:	mov	x19, x21
     d40:	mov	x26, x23
     d44:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     d48:	ldp	x9, x8, [x0, #16]
     d4c:	ldr	w21, [sp, #8]
     d50:	sub	x9, x9, x8
     d54:	cmp	x9, #0x7
     d58:	b.hi	d70 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd70>  // b.pmore
     d5c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     d60:	add	x1, x1, #0x0
     d64:	mov	w2, #0x8                   	// #8
     d68:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     d6c:	b	d90 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xd90>
     d70:	mov	x9, #0x2029                	// #8233
     d74:	movk	x9, #0x3d21, lsl #16
     d78:	movk	x9, #0x3020, lsl #32
     d7c:	movk	x9, #0xa29, lsl #48
     d80:	str	x9, [x8]
     d84:	ldr	x8, [x0, #24]
     d88:	add	x8, x8, #0x8
     d8c:	str	x8, [x0, #24]
     d90:	ldr	x0, [sp, #64]
     d94:	cmp	x0, x27
     d98:	b.eq	da0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xda0>  // b.none
     d9c:	bl	0 <_ZdlPv>
     da0:	ldr	x0, [x19, #24]
     da4:	ldp	x1, x2, [x29, #-48]
     da8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     dac:	ldp	x9, x8, [x0, #16]
     db0:	sub	x9, x9, x8
     db4:	cmp	x9, #0x8
     db8:	b.hi	dd0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdd0>  // b.pmore
     dbc:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     dc0:	add	x1, x1, #0x0
     dc4:	mov	w2, #0x9                   	// #9
     dc8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     dcc:	b	df4 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0xdf4>
     dd0:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     dd4:	add	x9, x9, #0x0
     dd8:	ldr	x9, [x9]
     ddc:	mov	w10, #0xa                   	// #10
     de0:	strb	w10, [x8, #8]
     de4:	str	x9, [x8]
     de8:	ldr	x8, [x0, #24]
     dec:	add	x8, x8, #0x9
     df0:	str	x8, [x0, #24]
     df4:	and	w4, w22, #0x1
     df8:	mov	x0, x19
     dfc:	mov	x1, x26
     e00:	mov	w2, w24
     e04:	mov	w3, w21
     e08:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e0c:	mov	w19, w0
     e10:	ldr	x1, [sp, #112]
     e14:	add	x0, sp, #0x60
     e18:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e1c:	ldur	x0, [x29, #-48]
     e20:	ldr	x8, [sp, #16]
     e24:	cmp	x0, x8
     e28:	b.ne	510 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x510>  // b.any
     e2c:	b	514 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb+0x514>
     e30:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e34:	add	x0, x0, #0x0
     e38:	bl	0 <_ZSt20__throw_length_errorPKc>
     e3c:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e40:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e44:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e48:	add	x0, x0, #0x0
     e4c:	add	x1, x1, #0x0
     e50:	add	x3, x3, #0x0
     e54:	mov	w2, #0x33                  	// #51
     e58:	bl	0 <__assert_fail>
     e5c:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e60:	add	x0, x0, #0x0
     e64:	mov	w1, #0x1                   	// #1
     e68:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     e6c:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e70:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e74:	adrp	x3, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e78:	add	x0, x0, #0x0
     e7c:	add	x1, x1, #0x0
     e80:	add	x3, x3, #0x0
     e84:	mov	w2, #0x1e                  	// #30
     e88:	bl	0 <__assert_fail>
     e8c:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e90:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     e94:	add	x0, x0, #0x0
     e98:	add	x1, x1, #0x0
     e9c:	mov	x2, x28
     ea0:	bl	0 <_ZSt24__throw_out_of_range_fmtPKcz>
     ea4:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     ea8:	add	x0, x0, #0x0
     eac:	bl	0 <_ZSt19__throw_logic_errorPKc>

0000000000000eb0 <_ZNK4llvm13StringMatcher4EmitEjb>:
     eb0:	sub	sp, sp, #0xc0
     eb4:	stp	x29, x30, [sp, #96]
     eb8:	stp	x28, x27, [sp, #112]
     ebc:	stp	x26, x25, [sp, #128]
     ec0:	stp	x24, x23, [sp, #144]
     ec4:	stp	x22, x21, [sp, #160]
     ec8:	stp	x20, x19, [sp, #176]
     ecc:	add	x29, sp, #0x60
     ed0:	ldr	x9, [x0, #16]
     ed4:	ldp	x8, x9, [x9]
     ed8:	cmp	x8, x9
     edc:	b.eq	1464 <_ZNK4llvm13StringMatcher4EmitEjb+0x5b4>  // b.none
     ee0:	add	x10, sp, #0x30
     ee4:	sub	x9, x9, x8
     ee8:	mov	x19, x0
     eec:	mov	w20, w1
     ef0:	add	x11, x10, #0x8
     ef4:	lsr	x10, x9, #6
     ef8:	str	w2, [sp, #12]
     efc:	str	wzr, [sp, #56]
     f00:	stp	xzr, x11, [sp, #64]
     f04:	str	x11, [sp, #32]
     f08:	stp	x11, xzr, [sp, #80]
     f0c:	cbz	w10, 1050 <_ZNK4llvm13StringMatcher4EmitEjb+0x1a0>
     f10:	ubfx	x9, x9, #6, #32
     f14:	lsl	x9, x9, #6
     f18:	mov	x26, xzr
     f1c:	sub	x22, x9, #0x40
     f20:	stp	x22, x19, [sp, #16]
     f24:	add	x8, x8, x26
     f28:	ldr	x8, [x8, #8]
     f2c:	add	x0, sp, #0x30
     f30:	add	x1, sp, #0x2c
     f34:	str	w8, [sp, #44]
     f38:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
     f3c:	ldr	x9, [x19, #16]
     f40:	mov	x8, x0
     f44:	mov	x27, x0
     f48:	ldr	x10, [x9]
     f4c:	ldr	x9, [x8, #8]!
     f50:	ldr	x11, [x27, #16]!
     f54:	add	x28, x10, x26
     f58:	cmp	x9, x11
     f5c:	b.eq	f7c <_ZNK4llvm13StringMatcher4EmitEjb+0xcc>  // b.none
     f60:	str	x28, [x9]
     f64:	ldr	x9, [x8]
     f68:	add	x9, x9, #0x8
     f6c:	cmp	x22, x26
     f70:	str	x9, [x8]
     f74:	b.ne	1028 <_ZNK4llvm13StringMatcher4EmitEjb+0x178>  // b.any
     f78:	b	1050 <_ZNK4llvm13StringMatcher4EmitEjb+0x1a0>
     f7c:	ldr	x23, [x0]
     f80:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
     f84:	mov	x21, x0
     f88:	sub	x24, x9, x23
     f8c:	cmp	x24, x8
     f90:	b.eq	1484 <_ZNK4llvm13StringMatcher4EmitEjb+0x5d4>  // b.none
     f94:	asr	x22, x24, #3
     f98:	cmp	x24, #0x0
     f9c:	csinc	x8, x22, xzr, ne  // ne = any
     fa0:	adds	x8, x8, x22
     fa4:	lsr	x10, x8, #60
     fa8:	cset	w9, cs  // cs = hs, nlast
     fac:	cmp	x10, #0x0
     fb0:	cset	w10, ne  // ne = any
     fb4:	orr	w9, w9, w10
     fb8:	cmp	w9, #0x0
     fbc:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
     fc0:	mov	w19, w20
     fc4:	csel	x20, x9, x8, ne  // ne = any
     fc8:	cbz	x20, 1038 <_ZNK4llvm13StringMatcher4EmitEjb+0x188>
     fcc:	lsl	x0, x20, #3
     fd0:	bl	0 <_Znwm>
     fd4:	mov	x25, x0
     fd8:	add	x22, x25, x22, lsl #3
     fdc:	cmp	x24, #0x1
     fe0:	str	x28, [x22]
     fe4:	b.lt	ff8 <_ZNK4llvm13StringMatcher4EmitEjb+0x148>  // b.tstop
     fe8:	mov	x0, x25
     fec:	mov	x1, x23
     ff0:	mov	x2, x24
     ff4:	bl	0 <memmove>
     ff8:	add	x22, x22, #0x8
     ffc:	cbz	x23, 1008 <_ZNK4llvm13StringMatcher4EmitEjb+0x158>
    1000:	mov	x0, x23
    1004:	bl	0 <_ZdlPv>
    1008:	stp	x25, x22, [x21]
    100c:	add	x9, x25, x20, lsl #3
    1010:	mov	w20, w19
    1014:	ldp	x22, x19, [sp, #16]
    1018:	mov	x8, x27
    101c:	cmp	x22, x26
    1020:	str	x9, [x8]
    1024:	b.eq	1050 <_ZNK4llvm13StringMatcher4EmitEjb+0x1a0>  // b.none
    1028:	ldr	x8, [x19, #16]
    102c:	add	x26, x26, #0x40
    1030:	ldr	x8, [x8]
    1034:	b	f24 <_ZNK4llvm13StringMatcher4EmitEjb+0x74>
    1038:	mov	x25, xzr
    103c:	add	x22, x25, x22, lsl #3
    1040:	cmp	x24, #0x1
    1044:	str	x28, [x22]
    1048:	b.ge	fe8 <_ZNK4llvm13StringMatcher4EmitEjb+0x138>  // b.tcont
    104c:	b	ff8 <_ZNK4llvm13StringMatcher4EmitEjb+0x148>
    1050:	ldr	x0, [x19, #24]
    1054:	lsl	w26, w20, #1
    1058:	add	w21, w26, #0x2
    105c:	mov	w1, w21
    1060:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1064:	ldp	x9, x8, [x0, #16]
    1068:	mov	x23, x0
    106c:	sub	x9, x9, x8
    1070:	cmp	x9, #0x7
    1074:	b.hi	1098 <_ZNK4llvm13StringMatcher4EmitEjb+0x1e8>  // b.pmore
    1078:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    107c:	add	x1, x1, #0x0
    1080:	mov	w2, #0x8                   	// #8
    1084:	mov	x0, x23
    1088:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    108c:	mov	x23, x0
    1090:	ldr	x0, [x0, #24]
    1094:	b	10b8 <_ZNK4llvm13StringMatcher4EmitEjb+0x208>
    1098:	mov	x9, #0x7773                	// #30579
    109c:	movk	x9, #0x7469, lsl #16
    10a0:	movk	x9, #0x6863, lsl #32
    10a4:	movk	x9, #0x2820, lsl #48
    10a8:	str	x9, [x8]
    10ac:	ldr	x8, [x23, #24]
    10b0:	add	x0, x8, #0x8
    10b4:	str	x0, [x23, #24]
    10b8:	ldr	x8, [x23, #16]
    10bc:	ldp	x1, x24, [x19]
    10c0:	sub	x8, x8, x0
    10c4:	cmp	x24, x8
    10c8:	b.ls	10e4 <_ZNK4llvm13StringMatcher4EmitEjb+0x234>  // b.plast
    10cc:	mov	x0, x23
    10d0:	mov	x2, x24
    10d4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    10d8:	mov	x23, x0
    10dc:	ldr	x0, [x0, #24]
    10e0:	b	10fc <_ZNK4llvm13StringMatcher4EmitEjb+0x24c>
    10e4:	cbz	x24, 10fc <_ZNK4llvm13StringMatcher4EmitEjb+0x24c>
    10e8:	mov	x2, x24
    10ec:	bl	0 <memcpy>
    10f0:	ldr	x8, [x23, #24]
    10f4:	add	x0, x8, x24
    10f8:	str	x0, [x23, #24]
    10fc:	ldr	x8, [x23, #16]
    1100:	sub	x8, x8, x0
    1104:	cmp	x8, #0xa
    1108:	b.hi	1124 <_ZNK4llvm13StringMatcher4EmitEjb+0x274>  // b.pmore
    110c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1110:	add	x1, x1, #0x0
    1114:	mov	w2, #0xb                   	// #11
    1118:	mov	x0, x23
    111c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1120:	b	114c <_ZNK4llvm13StringMatcher4EmitEjb+0x29c>
    1124:	adrp	x8, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1128:	add	x8, x8, #0x0
    112c:	ldr	x8, [x8]
    1130:	mov	w9, #0x2029                	// #8233
    1134:	movk	w9, #0xa7b, lsl #16
    1138:	stur	w9, [x0, #7]
    113c:	str	x8, [x0]
    1140:	ldr	x8, [x23, #24]
    1144:	add	x8, x8, #0xb
    1148:	str	x8, [x23, #24]
    114c:	ldr	x0, [x19, #24]
    1150:	mov	w1, w21
    1154:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1158:	ldp	x9, x8, [x0, #16]
    115c:	sub	x9, x9, x8
    1160:	cmp	x9, #0xf
    1164:	b.hi	117c <_ZNK4llvm13StringMatcher4EmitEjb+0x2cc>  // b.pmore
    1168:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    116c:	add	x1, x1, #0x0
    1170:	mov	w2, #0x10                  	// #16
    1174:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1178:	b	1198 <_ZNK4llvm13StringMatcher4EmitEjb+0x2e8>
    117c:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1180:	add	x9, x9, #0x0
    1184:	ldr	q0, [x9]
    1188:	str	q0, [x8]
    118c:	ldr	x8, [x0, #24]
    1190:	add	x8, x8, #0x10
    1194:	str	x8, [x0, #24]
    1198:	ldr	x0, [x19, #24]
    119c:	ldr	x25, [sp, #72]
    11a0:	mov	w1, w21
    11a4:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    11a8:	mov	x8, x0
    11ac:	ldr	x10, [x0, #16]
    11b0:	ldr	x9, [x8, #24]!
    11b4:	ldr	x11, [sp, #32]
    11b8:	sub	x10, x10, x9
    11bc:	cmp	x25, x11
    11c0:	b.eq	1428 <_ZNK4llvm13StringMatcher4EmitEjb+0x578>  // b.none
    11c4:	ldr	w11, [sp, #12]
    11c8:	adrp	x24, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    11cc:	add	w28, w26, #0x4
    11d0:	add	x24, x24, #0x0
    11d4:	and	w22, w11, #0x1
    11d8:	b	1238 <_ZNK4llvm13StringMatcher4EmitEjb+0x388>
    11dc:	mov	w9, #0x6b61                	// #27489
    11e0:	movk	w9, #0xa3b, lsl #16
    11e4:	stur	w9, [x8, #3]
    11e8:	mov	w9, #0x7262                	// #29282
    11ec:	movk	w9, #0x6165, lsl #16
    11f0:	str	w9, [x8]
    11f4:	ldr	x8, [x0, #24]
    11f8:	add	x8, x8, #0x7
    11fc:	str	x8, [x0, #24]
    1200:	mov	x0, x25
    1204:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
    1208:	ldr	x8, [x19, #24]
    120c:	mov	x25, x0
    1210:	mov	w1, w21
    1214:	mov	x0, x8
    1218:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    121c:	mov	x8, x0
    1220:	ldr	x10, [x0, #16]
    1224:	ldr	x9, [x8, #24]!
    1228:	ldr	x11, [sp, #32]
    122c:	sub	x10, x10, x9
    1230:	cmp	x25, x11
    1234:	b.eq	1428 <_ZNK4llvm13StringMatcher4EmitEjb+0x578>  // b.none
    1238:	cmp	x10, #0x4
    123c:	b.hi	1254 <_ZNK4llvm13StringMatcher4EmitEjb+0x3a4>  // b.pmore
    1240:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1244:	mov	w2, #0x5                   	// #5
    1248:	add	x1, x1, #0x0
    124c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1250:	b	1274 <_ZNK4llvm13StringMatcher4EmitEjb+0x3c4>
    1254:	mov	w10, #0x20                  	// #32
    1258:	strb	w10, [x9, #4]
    125c:	mov	w10, #0x6163                	// #24931
    1260:	movk	w10, #0x6573, lsl #16
    1264:	str	w10, [x9]
    1268:	ldr	x9, [x8]
    126c:	add	x9, x9, #0x5
    1270:	str	x9, [x8]
    1274:	ldr	w1, [x25, #32]
    1278:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    127c:	ldp	x9, x8, [x0, #16]
    1280:	sub	x9, x9, x8
    1284:	cmp	x9, #0x5
    1288:	b.hi	12a0 <_ZNK4llvm13StringMatcher4EmitEjb+0x3f0>  // b.pmore
    128c:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1290:	mov	w2, #0x6                   	// #6
    1294:	add	x1, x1, #0x0
    1298:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    129c:	b	12c0 <_ZNK4llvm13StringMatcher4EmitEjb+0x410>
    12a0:	mov	w9, #0x202f                	// #8239
    12a4:	strh	w9, [x8, #4]
    12a8:	mov	w9, #0x93a                 	// #2362
    12ac:	movk	w9, #0x2f20, lsl #16
    12b0:	str	w9, [x8]
    12b4:	ldr	x8, [x0, #24]
    12b8:	add	x8, x8, #0x6
    12bc:	str	x8, [x0, #24]
    12c0:	mov	x23, x25
    12c4:	ldr	x8, [x23, #40]!
    12c8:	ldr	x9, [x23, #8]
    12cc:	sub	x8, x9, x8
    12d0:	asr	x1, x8, #3
    12d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    12d8:	ldp	x9, x8, [x0, #16]
    12dc:	mov	x26, x0
    12e0:	sub	x9, x9, x8
    12e4:	cmp	x9, #0x6
    12e8:	b.hi	130c <_ZNK4llvm13StringMatcher4EmitEjb+0x45c>  // b.pmore
    12ec:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    12f0:	mov	w2, #0x7                   	// #7
    12f4:	mov	x0, x26
    12f8:	add	x1, x1, #0x0
    12fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1300:	mov	x26, x0
    1304:	ldr	x0, [x0, #24]
    1308:	b	1330 <_ZNK4llvm13StringMatcher4EmitEjb+0x480>
    130c:	mov	w9, #0x6972                	// #26994
    1310:	movk	w9, #0x676e, lsl #16
    1314:	stur	w9, [x8, #3]
    1318:	mov	w9, #0x7320                	// #29472
    131c:	movk	w9, #0x7274, lsl #16
    1320:	str	w9, [x8]
    1324:	ldr	x8, [x26, #24]
    1328:	add	x0, x8, #0x7
    132c:	str	x0, [x26, #24]
    1330:	ldp	x9, x8, [x23]
    1334:	ldr	x10, [x26, #16]
    1338:	adrp	x11, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    133c:	add	x11, x11, #0x0
    1340:	sub	x8, x8, x9
    1344:	adrp	x9, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1348:	cmp	x8, #0x8
    134c:	add	x9, x9, #0x0
    1350:	cset	w27, ne  // ne = any
    1354:	csel	x1, x11, x9, eq  // eq = none
    1358:	sub	x9, x10, x0
    135c:	cmp	x9, x27
    1360:	b.cs	137c <_ZNK4llvm13StringMatcher4EmitEjb+0x4cc>  // b.hs, b.nlast
    1364:	mov	x0, x26
    1368:	mov	x2, x27
    136c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1370:	mov	x26, x0
    1374:	ldr	x0, [x0, #24]
    1378:	b	1398 <_ZNK4llvm13StringMatcher4EmitEjb+0x4e8>
    137c:	cmp	x8, #0x8
    1380:	b.eq	1398 <_ZNK4llvm13StringMatcher4EmitEjb+0x4e8>  // b.none
    1384:	mov	x2, x27
    1388:	bl	0 <memcpy>
    138c:	ldr	x8, [x26, #24]
    1390:	add	x0, x8, x27
    1394:	str	x0, [x26, #24]
    1398:	ldr	x8, [x26, #16]
    139c:	sub	x8, x8, x0
    13a0:	cmp	x8, #0xa
    13a4:	b.hi	13bc <_ZNK4llvm13StringMatcher4EmitEjb+0x50c>  // b.pmore
    13a8:	mov	w2, #0xb                   	// #11
    13ac:	mov	x0, x26
    13b0:	mov	x1, x24
    13b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    13b8:	b	13dc <_ZNK4llvm13StringMatcher4EmitEjb+0x52c>
    13bc:	ldr	x8, [x24]
    13c0:	mov	w9, #0x6863                	// #26723
    13c4:	movk	w9, #0xa2e, lsl #16
    13c8:	stur	w9, [x0, #7]
    13cc:	str	x8, [x0]
    13d0:	ldr	x8, [x26, #24]
    13d4:	add	x8, x8, #0xb
    13d8:	str	x8, [x26, #24]
    13dc:	mov	x0, x19
    13e0:	mov	x1, x23
    13e4:	mov	w2, wzr
    13e8:	mov	w3, w20
    13ec:	mov	w4, w22
    13f0:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    13f4:	tbz	w0, #0, 1200 <_ZNK4llvm13StringMatcher4EmitEjb+0x350>
    13f8:	ldr	x0, [x19, #24]
    13fc:	mov	w1, w28
    1400:	bl	0 <_ZN4llvm11raw_ostream6indentEj>
    1404:	ldp	x9, x8, [x0, #16]
    1408:	sub	x9, x9, x8
    140c:	cmp	x9, #0x6
    1410:	b.hi	11dc <_ZNK4llvm13StringMatcher4EmitEjb+0x32c>  // b.pmore
    1414:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1418:	mov	w2, #0x7                   	// #7
    141c:	add	x1, x1, #0x0
    1420:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1424:	b	1200 <_ZNK4llvm13StringMatcher4EmitEjb+0x350>
    1428:	cmp	x10, #0x1
    142c:	b.hi	1444 <_ZNK4llvm13StringMatcher4EmitEjb+0x594>  // b.pmore
    1430:	adrp	x1, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1434:	add	x1, x1, #0x0
    1438:	mov	w2, #0x2                   	// #2
    143c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    1440:	b	1458 <_ZNK4llvm13StringMatcher4EmitEjb+0x5a8>
    1444:	mov	w10, #0xa7d                 	// #2685
    1448:	strh	w10, [x9]
    144c:	ldr	x9, [x8]
    1450:	add	x9, x9, #0x2
    1454:	str	x9, [x8]
    1458:	ldr	x1, [sp, #64]
    145c:	add	x0, sp, #0x30
    1460:	bl	0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1464:	ldp	x20, x19, [sp, #176]
    1468:	ldp	x22, x21, [sp, #160]
    146c:	ldp	x24, x23, [sp, #144]
    1470:	ldp	x26, x25, [sp, #128]
    1474:	ldp	x28, x27, [sp, #112]
    1478:	ldp	x29, x30, [sp, #96]
    147c:	add	sp, sp, #0xc0
    1480:	ret
    1484:	adrp	x0, 0 <_ZNK4llvm13StringMatcher24EmitStringMatcherForCharERKSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEjjb>
    1488:	add	x0, x0, #0x0
    148c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_:

0000000000000000 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x23, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x6c>
  28:	ldrb	w9, [x23]
  2c:	mov	x21, x20
  30:	ldrb	w10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	w10, w9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x70>  // b.none
  58:	ldrb	w8, [x23]
  5c:	ldrb	w9, [x21, #32]
  60:	cmp	w8, w9
  64:	b.cc	70 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x70>  // b.lo, b.ul, b.last
  68:	b	104 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x104>
  6c:	mov	x21, x20
  70:	mov	w0, #0x40                  	// #64
  74:	bl	0 <_Znwm>
  78:	ldrb	w8, [x23]
  7c:	mov	x23, x0
  80:	mov	x24, x0
  84:	mov	x22, x0
  88:	strb	w8, [x23, #32]!
  8c:	str	xzr, [x24, #40]!
  90:	stp	xzr, xzr, [x0, #48]
  94:	mov	x0, x19
  98:	mov	x1, x21
  9c:	mov	x2, x23
  a0:	bl	0 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_>
  a4:	mov	x21, x0
  a8:	cbz	x1, f0 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0xf0>
  ac:	mov	x2, x1
  b0:	mov	w0, #0x1                   	// #1
  b4:	cbnz	x21, d0 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0xd0>
  b8:	cmp	x20, x2
  bc:	b.eq	d0 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0xd0>  // b.none
  c0:	ldrb	w8, [x23]
  c4:	ldrb	w9, [x2, #32]
  c8:	cmp	w8, w9
  cc:	cset	w0, cc  // cc = lo, ul, last
  d0:	mov	x1, x22
  d4:	mov	x3, x20
  d8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  dc:	ldr	x8, [x19, #40]
  e0:	mov	x21, x22
  e4:	add	x8, x8, #0x1
  e8:	str	x8, [x19, #40]
  ec:	b	104 <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0x104>
  f0:	ldr	x0, [x24]
  f4:	cbz	x0, fc <_ZNSt3mapIcSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIcESaIS1_IKcSC_EEEixERSF_+0xfc>
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x0, x22
 100:	bl	0 <_ZdlPv>
 104:	add	x0, x21, #0x28
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x24, x23, [sp, #16]
 114:	ldp	x29, x30, [sp], #64
 118:	ret

Disassembly of section .text._ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj:

0000000000000000 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0, #16]
  18:	mov	x23, x1
  1c:	mov	x19, x0
  20:	add	x20, x0, #0x8
  24:	cbz	x8, 6c <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x6c>
  28:	ldr	w9, [x23]
  2c:	mov	x21, x20
  30:	ldr	w10, [x8, #32]
  34:	add	x11, x8, #0x18
  38:	add	x12, x8, #0x10
  3c:	cmp	w10, w9
  40:	csel	x21, x21, x8, cc  // cc = lo, ul, last
  44:	csel	x8, x11, x12, cc  // cc = lo, ul, last
  48:	ldr	x8, [x8]
  4c:	cbnz	x8, 30 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x30>
  50:	cmp	x21, x20
  54:	b.eq	70 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x70>  // b.none
  58:	ldr	w8, [x23]
  5c:	ldr	w9, [x21, #32]
  60:	cmp	w8, w9
  64:	b.cc	70 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x70>  // b.lo, b.ul, b.last
  68:	b	104 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x104>
  6c:	mov	x21, x20
  70:	mov	w0, #0x40                  	// #64
  74:	bl	0 <_Znwm>
  78:	ldr	w8, [x23]
  7c:	mov	x23, x0
  80:	mov	x24, x0
  84:	mov	x22, x0
  88:	str	w8, [x23, #32]!
  8c:	str	xzr, [x24, #40]!
  90:	stp	xzr, xzr, [x0, #48]
  94:	mov	x0, x19
  98:	mov	x1, x21
  9c:	mov	x2, x23
  a0:	bl	0 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj>
  a4:	mov	x21, x0
  a8:	cbz	x1, f0 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0xf0>
  ac:	mov	x2, x1
  b0:	mov	w0, #0x1                   	// #1
  b4:	cbnz	x21, d0 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0xd0>
  b8:	cmp	x20, x2
  bc:	b.eq	d0 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0xd0>  // b.none
  c0:	ldr	w8, [x23]
  c4:	ldr	w9, [x2, #32]
  c8:	cmp	w8, w9
  cc:	cset	w0, cc  // cc = lo, ul, last
  d0:	mov	x1, x22
  d4:	mov	x3, x20
  d8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  dc:	ldr	x8, [x19, #40]
  e0:	mov	x21, x22
  e4:	add	x8, x8, #0x1
  e8:	str	x8, [x19, #40]
  ec:	b	104 <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0x104>
  f0:	ldr	x0, [x24]
  f4:	cbz	x0, fc <_ZNSt3mapIjSt6vectorIPKSt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ESaISA_EESt4lessIjESaIS1_IKjSC_EEEixEOj+0xfc>
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x0, x22
 100:	bl	0 <_ZdlPv>
 104:	add	x0, x21, #0x28
 108:	ldp	x20, x19, [sp, #48]
 10c:	ldp	x22, x21, [sp, #32]
 110:	ldp	x24, x23, [sp, #16]
 114:	ldp	x29, x30, [sp], #64
 118:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 50 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 50 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  3c:	ldr	x0, [x20, #40]
  40:	ldr	x21, [x20, #16]
  44:	cbz	x0, 20 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  48:	bl	0 <_ZdlPv>
  4c:	b	20 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 50 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 50 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x50>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E>
  3c:	ldr	x0, [x20, #40]
  40:	ldr	x21, [x20, #16]
  44:	cbz	x0, 20 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  48:	bl	0 <_ZdlPv>
  4c:	b	20 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE8_M_eraseEPSt13_Rb_tree_nodeISE_E+0x20>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	ldp	x29, x30, [sp], #48
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x74>  // b.none
  2c:	ldrb	w22, [x22]
  30:	ldrb	w8, [x20, #32]
  34:	cmp	w22, w8
  38:	b.cs	dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xdc>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldrb	w8, [x0, #32]
  54:	cmp	w8, w22
  58:	b.cs	130 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x130>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldrb	w9, [x22]
  84:	ldrb	w8, [x19, #32]
  88:	cmp	w8, w9
  8c:	b.cc	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>
  98:	ldrb	w8, [x22]
  9c:	ldrb	w10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	w8, w10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x9c>
  bc:	cmp	w8, w10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cs	18c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x18c>  // b.hs, b.nlast
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>
  dc:	cmp	w8, w22
  e0:	b.cs	11c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x11c>  // b.hs, b.nlast
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldrb	w8, [x0, #32]
  fc:	cmp	w22, w8
 100:	b.cs	198 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x198>  // b.hs, b.nlast
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>
 138:	ldrb	w8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	w22, w8
 14c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x138>
 158:	cmp	w22, w8
 15c:	mov	x0, x19
 160:	b.cs	1fc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>  // b.hs, b.nlast
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldrb	w8, [x22]
 18c:	ldrb	w9, [x0, #32]
 190:	cmp	w9, w8
 194:	b	204 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e4>
 1a0:	ldrb	w8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	w22, w8
 1b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a0>
 1c0:	cmp	w22, w8
 1c4:	mov	x0, x19
 1c8:	b.cc	1e8 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.lo, b.ul, b.last
 1cc:	b	1fc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeIcSt4pairIKcSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIcESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldrb	w8, [x0, #32]
 200:	cmp	w8, w22
 204:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 208:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

Disassembly of section .text._ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_:

0000000000000000 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x0, #0x8
  18:	mov	x20, x1
  1c:	mov	x21, x0
  20:	cmp	x23, x1
  24:	mov	x22, x2
  28:	b.eq	74 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x74>  // b.none
  2c:	ldr	w22, [x22]
  30:	ldr	w8, [x20, #32]
  34:	cmp	w22, w8
  38:	b.cs	dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0xdc>  // b.hs, b.nlast
  3c:	ldr	x24, [x21, #24]
  40:	cmp	x24, x20
  44:	b.eq	124 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x124>  // b.none
  48:	mov	x0, x20
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	ldr	w8, [x0, #32]
  54:	cmp	w8, w22
  58:	b.cs	130 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x130>  // b.hs, b.nlast
  5c:	ldr	x8, [x0, #24]
  60:	cmp	x8, #0x0
  64:	csel	x8, xzr, x20, eq  // eq = none
  68:	csel	x19, x0, x20, eq  // eq = none
  6c:	mov	x20, x8
  70:	b	20c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
  74:	ldr	x8, [x21, #40]
  78:	cbz	x8, 90 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x90>
  7c:	ldr	x19, [x21, #32]
  80:	ldr	w9, [x22]
  84:	ldr	w8, [x19, #32]
  88:	cmp	w8, w9
  8c:	b.cc	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.lo, b.ul, b.last
  90:	ldr	x9, [x21, #16]
  94:	cbz	x9, 170 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x170>
  98:	ldr	w8, [x22]
  9c:	ldr	w10, [x9, #32]
  a0:	mov	x19, x9
  a4:	add	x9, x9, #0x10
  a8:	add	x11, x19, #0x18
  ac:	cmp	w8, w10
  b0:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  b4:	ldr	x9, [x9]
  b8:	cbnz	x9, 9c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x9c>
  bc:	cmp	w8, w10
  c0:	mov	x20, x19
  c4:	mov	x0, x19
  c8:	b.cs	18c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x18c>  // b.hs, b.nlast
  cc:	ldr	x8, [x21, #24]
  d0:	cmp	x8, x20
  d4:	b.ne	180 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x180>  // b.any
  d8:	b	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>
  dc:	cmp	w8, w22
  e0:	b.cs	11c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x11c>  // b.hs, b.nlast
  e4:	ldr	x19, [x21, #32]
  e8:	cmp	x19, x20
  ec:	b.eq	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
  f0:	mov	x0, x20
  f4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  f8:	ldr	w8, [x0, #32]
  fc:	cmp	w22, w8
 100:	b.cs	198 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x198>  // b.hs, b.nlast
 104:	ldr	x8, [x20, #24]
 108:	cmp	x8, #0x0
 10c:	csel	x8, xzr, x0, eq  // eq = none
 110:	csel	x19, x20, x0, eq  // eq = none
 114:	mov	x20, x8
 118:	b	20c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 11c:	mov	x19, xzr
 120:	b	20c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 124:	mov	x20, x24
 128:	mov	x19, x24
 12c:	b	20c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 130:	ldr	x9, [x21, #16]
 134:	cbz	x9, 1d0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1d0>
 138:	ldr	w8, [x9, #32]
 13c:	mov	x19, x9
 140:	add	x9, x9, #0x10
 144:	add	x10, x19, #0x18
 148:	cmp	w22, w8
 14c:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 150:	ldr	x9, [x9]
 154:	cbnz	x9, 138 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x138>
 158:	cmp	w22, w8
 15c:	mov	x0, x19
 160:	b.cs	1fc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>  // b.hs, b.nlast
 164:	cmp	x24, x19
 168:	b.ne	1f4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>  // b.any
 16c:	b	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>
 170:	mov	x19, x23
 174:	ldr	x8, [x21, #24]
 178:	cmp	x8, x20
 17c:	b.eq	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
 180:	mov	x0, x20
 184:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 188:	ldr	w8, [x22]
 18c:	ldr	w9, [x0, #32]
 190:	cmp	w9, w8
 194:	b	204 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x204>
 198:	ldr	x9, [x21, #16]
 19c:	cbz	x9, 1e4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e4>
 1a0:	ldr	w8, [x9, #32]
 1a4:	mov	x19, x9
 1a8:	add	x9, x9, #0x10
 1ac:	add	x10, x19, #0x18
 1b0:	cmp	w22, w8
 1b4:	csel	x9, x9, x10, cc  // cc = lo, ul, last
 1b8:	ldr	x9, [x9]
 1bc:	cbnz	x9, 1a0 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1a0>
 1c0:	cmp	w22, w8
 1c4:	mov	x0, x19
 1c8:	b.cc	1e8 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1e8>  // b.lo, b.ul, b.last
 1cc:	b	1fc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1fc>
 1d0:	mov	x19, x23
 1d4:	cmp	x24, x19
 1d8:	b.ne	1f4 <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1f4>  // b.any
 1dc:	mov	x20, xzr
 1e0:	b	20c <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x20c>
 1e4:	mov	x19, x23
 1e8:	ldr	x8, [x21, #24]
 1ec:	cmp	x8, x19
 1f0:	b.eq	1dc <_ZNSt8_Rb_treeIjSt4pairIKjSt6vectorIPKS0_INSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES8_ESaISB_EEESt10_Select1stISE_ESt4lessIjESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS1_+0x1dc>  // b.none
 1f4:	mov	x0, x19
 1f8:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 1fc:	ldr	w8, [x0, #32]
 200:	cmp	w8, w22
 204:	csel	x20, xzr, x0, cc  // cc = lo, ul, last
 208:	csel	x19, x19, xzr, cc  // cc = lo, ul, last
 20c:	mov	x0, x20
 210:	mov	x1, x19
 214:	ldp	x20, x19, [sp, #48]
 218:	ldp	x22, x21, [sp, #32]
 21c:	ldp	x24, x23, [sp, #16]
 220:	ldp	x29, x30, [sp], #64
 224:	ret

TableGenBackend.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #64]
   8:	stp	x28, x27, [sp, #80]
   c:	stp	x26, x25, [sp, #96]
  10:	stp	x24, x23, [sp, #112]
  14:	stp	x22, x21, [sp, #128]
  18:	stp	x20, x19, [sp, #144]
  1c:	add	x29, sp, #0x40
  20:	mov	x19, x2
  24:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  28:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  2c:	mov	x20, x1
  30:	mov	x21, x0
  34:	add	x8, x8, #0x0
  38:	mov	w9, #0x103                 	// #259
  3c:	add	x3, x3, #0x0
  40:	sub	x1, x29, #0x18
  44:	mov	w2, #0x2d                  	// #45
  48:	mov	w4, #0xf                   	// #15
  4c:	mov	x0, x19
  50:	stp	x8, xzr, [x29, #-24]
  54:	sturh	w9, [x29, #-8]
  58:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
  5c:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  60:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  64:	add	x8, x8, #0x0
  68:	mov	w9, #0x3                   	// #3
  6c:	mov	w10, #0x105                 	// #261
  70:	add	x23, sp, #0x18
  74:	add	x3, x3, #0x0
  78:	sub	x1, x29, #0x18
  7c:	mov	w2, #0x20                  	// #32
  80:	mov	w4, #0x3                   	// #3
  84:	mov	x0, x19
  88:	stp	x8, x9, [sp, #24]
  8c:	sturh	w10, [x29, #-8]
  90:	stp	x23, xzr, [x29, #-24]
  94:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
  98:	ldr	x8, [sp, #32]
  9c:	add	x9, x8, #0x3
  a0:	cmp	x9, #0x4f
  a4:	b.hi	20c <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x20c>  // b.pmore
  a8:	mov	w9, #0x4d                  	// #77
  ac:	adrp	x22, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
  b0:	mov	x24, xzr
  b4:	add	x25, sp, #0x8
  b8:	mov	w26, #0x505                 	// #1285
  bc:	sub	x27, x9, x8
  c0:	add	x22, x22, #0x0
  c4:	subs	x8, x20, x24
  c8:	csel	x9, x20, x24, cc  // cc = lo, ul, last
  cc:	cmp	x27, x8
  d0:	csel	x28, x27, x8, cc  // cc = lo, ul, last
  d4:	add	x8, x21, x9
  d8:	sub	x9, x20, x9
  dc:	cmp	x9, x28
  e0:	csel	x9, x9, x28, cc  // cc = lo, ul, last
  e4:	sub	x1, x29, #0x18
  e8:	mov	w2, #0x20                  	// #32
  ec:	mov	w4, #0x3                   	// #3
  f0:	mov	x0, x19
  f4:	mov	x3, x22
  f8:	stp	x23, x25, [x29, #-24]
  fc:	stp	x8, x9, [sp, #8]
 100:	sturh	w26, [x29, #-8]
 104:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 108:	add	x24, x28, x24
 10c:	cmp	x24, x20
 110:	b.cc	c4 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0xc4>  // b.lo, b.ul, b.last
 114:	adrp	x20, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 118:	add	x20, x20, #0x0
 11c:	mov	w21, #0x105                 	// #261
 120:	add	x22, sp, #0x18
 124:	sub	x1, x29, #0x18
 128:	mov	w2, #0x20                  	// #32
 12c:	mov	w4, #0x3                   	// #3
 130:	mov	x0, x19
 134:	mov	x3, x20
 138:	sturh	w21, [x29, #-8]
 13c:	stp	x22, xzr, [x29, #-24]
 140:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 144:	adrp	x9, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 148:	mov	w8, #0x305                 	// #773
 14c:	add	x9, x9, #0x0
 150:	sub	x1, x29, #0x18
 154:	mov	w2, #0x20                  	// #32
 158:	mov	w4, #0x3                   	// #3
 15c:	mov	x0, x19
 160:	mov	x3, x20
 164:	sturh	w8, [x29, #-8]
 168:	stp	x22, x9, [x29, #-24]
 16c:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 170:	sub	x1, x29, #0x18
 174:	mov	w2, #0x20                  	// #32
 178:	mov	w4, #0x3                   	// #3
 17c:	mov	x0, x19
 180:	mov	x3, x20
 184:	sturh	w21, [x29, #-8]
 188:	stp	x22, xzr, [x29, #-24]
 18c:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 190:	adrp	x8, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 194:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 198:	add	x8, x8, #0x0
 19c:	mov	w9, #0x103                 	// #259
 1a0:	add	x3, x3, #0x0
 1a4:	sub	x1, x29, #0x18
 1a8:	mov	w2, #0x2d                  	// #45
 1ac:	mov	w4, #0x5                   	// #5
 1b0:	mov	x0, x19
 1b4:	stp	x8, xzr, [x29, #-24]
 1b8:	sturh	w9, [x29, #-8]
 1bc:	bl	22c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>
 1c0:	ldp	x9, x8, [x19, #16]
 1c4:	cmp	x8, x9
 1c8:	b.cs	1e0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1e0>  // b.hs, b.nlast
 1cc:	add	x9, x8, #0x1
 1d0:	mov	w10, #0xa                   	// #10
 1d4:	str	x9, [x19, #24]
 1d8:	strb	w10, [x8]
 1dc:	b	1ec <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE+0x1ec>
 1e0:	mov	w1, #0xa                   	// #10
 1e4:	mov	x0, x19
 1e8:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 1ec:	ldp	x20, x19, [sp, #144]
 1f0:	ldp	x22, x21, [sp, #128]
 1f4:	ldp	x24, x23, [sp, #112]
 1f8:	ldp	x26, x25, [sp, #96]
 1fc:	ldp	x28, x27, [sp, #80]
 200:	ldp	x29, x30, [sp, #64]
 204:	add	sp, sp, #0xa0
 208:	ret
 20c:	adrp	x0, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 210:	adrp	x1, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 214:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 218:	add	x0, x0, #0x0
 21c:	add	x1, x1, #0x0
 220:	add	x3, x3, #0x0
 224:	mov	w2, #0x27                  	// #39
 228:	bl	0 <__assert_fail>

000000000000022c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE>:
 22c:	sub	sp, sp, #0x80
 230:	stp	x29, x30, [sp, #32]
 234:	str	x27, [sp, #48]
 238:	stp	x26, x25, [sp, #64]
 23c:	stp	x24, x23, [sp, #80]
 240:	stp	x22, x21, [sp, #96]
 244:	stp	x20, x19, [sp, #112]
 248:	add	x29, sp, #0x20
 24c:	ldr	x8, [x0]
 250:	mov	x20, x4
 254:	mov	x21, x3
 258:	mov	w22, w2
 25c:	ldr	x8, [x8, #72]
 260:	mov	x19, x0
 264:	mov	x24, x1
 268:	blr	x8
 26c:	ldr	x25, [x19, #24]
 270:	ldr	x26, [x19, #8]
 274:	mov	x23, x0
 278:	mov	x8, sp
 27c:	mov	x0, x24
 280:	mov	x27, sp
 284:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
 288:	ldr	x8, [sp, #8]
 28c:	add	x8, x8, x20
 290:	cmp	x8, #0x51
 294:	b.cs	3e8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x1bc>  // b.hs, b.nlast
 298:	ldr	x0, [sp]
 29c:	add	x8, x27, #0x10
 2a0:	cmp	x0, x8
 2a4:	b.eq	2ac <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x80>  // b.none
 2a8:	bl	0 <_ZdlPv>
 2ac:	mov	x0, x24
 2b0:	mov	x1, x19
 2b4:	bl	0 <_ZNK4llvm5Twine5printERNS_11raw_ostreamE>
 2b8:	ldr	x8, [x19]
 2bc:	mov	x0, x19
 2c0:	ldr	x8, [x8, #72]
 2c4:	blr	x8
 2c8:	mov	x8, x0
 2cc:	ldr	x0, [x19, #24]
 2d0:	ldr	x9, [x19, #8]
 2d4:	add	x10, x25, x23
 2d8:	sub	x10, x26, x10
 2dc:	add	x10, x10, x8
 2e0:	mov	w11, #0x50                  	// #80
 2e4:	add	x10, x10, x0
 2e8:	sub	x10, x10, x9
 2ec:	sub	x11, x11, x20
 2f0:	cmp	x10, x11
 2f4:	b.cs	354 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x128>  // b.hs, b.nlast
 2f8:	add	x8, x20, x8
 2fc:	add	x8, x8, x26
 300:	add	x8, x8, x0
 304:	sub	x8, x8, x23
 308:	sub	x8, x8, x25
 30c:	sub	x8, x8, x9
 310:	sub	x23, x8, #0x50
 314:	b	330 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x104>
 318:	add	x8, x0, #0x1
 31c:	str	x8, [x19, #24]
 320:	strb	w22, [x0]
 324:	ldr	x0, [x19, #24]
 328:	adds	x23, x23, #0x1
 32c:	b.cs	354 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x128>  // b.hs, b.nlast
 330:	ldr	x8, [x19, #16]
 334:	cmp	x0, x8
 338:	b.cc	318 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0xec>  // b.lo, b.ul, b.last
 33c:	mov	x0, x19
 340:	mov	w1, w22
 344:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 348:	ldr	x0, [x19, #24]
 34c:	adds	x23, x23, #0x1
 350:	b.cc	330 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x104>  // b.lo, b.ul, b.last
 354:	ldr	x8, [x19, #16]
 358:	sub	x8, x8, x0
 35c:	cmp	x20, x8
 360:	b.ls	380 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x154>  // b.plast
 364:	mov	x0, x19
 368:	mov	x1, x21
 36c:	mov	x2, x20
 370:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 374:	mov	x19, x0
 378:	ldr	x0, [x0, #24]
 37c:	b	39c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x170>
 380:	cbz	x20, 39c <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x170>
 384:	mov	x1, x21
 388:	mov	x2, x20
 38c:	bl	0 <memcpy>
 390:	ldr	x8, [x19, #24]
 394:	add	x0, x8, x20
 398:	str	x0, [x19, #24]
 39c:	ldr	x8, [x19, #16]
 3a0:	cmp	x0, x8
 3a4:	b.cs	3bc <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x190>  // b.hs, b.nlast
 3a8:	add	x8, x0, #0x1
 3ac:	mov	w9, #0xa                   	// #10
 3b0:	str	x8, [x19, #24]
 3b4:	strb	w9, [x0]
 3b8:	b	3c8 <_ZL9printLineRN4llvm11raw_ostreamERKNS_5TwineEcNS_9StringRefE+0x19c>
 3bc:	mov	w1, #0xa                   	// #10
 3c0:	mov	x0, x19
 3c4:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 3c8:	ldp	x20, x19, [sp, #112]
 3cc:	ldp	x22, x21, [sp, #96]
 3d0:	ldp	x24, x23, [sp, #80]
 3d4:	ldp	x26, x25, [sp, #64]
 3d8:	ldr	x27, [sp, #48]
 3dc:	ldp	x29, x30, [sp, #32]
 3e0:	add	sp, sp, #0x80
 3e4:	ret
 3e8:	adrp	x0, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3ec:	adrp	x1, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3f0:	adrp	x3, 0 <_ZN4llvm20emitSourceFileHeaderENS_9StringRefERNS_11raw_ostreamE>
 3f4:	add	x0, x0, #0x0
 3f8:	add	x1, x1, #0x0
 3fc:	add	x3, x3, #0x0
 400:	mov	w2, #0x19                  	// #25
 404:	bl	0 <__assert_fail>

TGLexer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>:
       0:	sub	sp, sp, #0x60
       4:	stp	x29, x30, [sp, #32]
       8:	str	x23, [sp, #48]
       c:	stp	x22, x21, [sp, #64]
      10:	stp	x20, x19, [sp, #80]
      14:	add	x29, sp, #0x20
      18:	movi	v0.2d, #0x0
      1c:	mov	x8, x0
      20:	str	x1, [x0]
      24:	str	wzr, [x0, #40]
      28:	mov	x9, x0
      2c:	stur	q0, [x0, #8]
      30:	stur	q0, [x0, #24]
      34:	strb	wzr, [x8, #64]!
      38:	mov	x19, x0
      3c:	mov	x10, #0x800000000           	// #34359738368
      40:	mov	x22, x0
      44:	str	xzr, [x0, #80]
      48:	str	wzr, [x0, #88]
      4c:	stp	x8, xzr, [x0, #48]
      50:	str	wzr, [x9, #104]!
      54:	stp	xzr, x9, [x0, #112]
      58:	stp	x9, xzr, [x0, #128]
      5c:	str	xzr, [x19, #144]!
      60:	stp	xzr, x10, [x0, #152]
      64:	str	xzr, [x22, #176]!
      68:	stp	xzr, xzr, [x0, #184]
      6c:	ldp	x8, x9, [x1]
      70:	mov	w11, #0xaaab                	// #43691
      74:	movk	w11, #0xaaaa, lsl #16
      78:	sub	x9, x9, x8
      7c:	lsr	x10, x9, #3
      80:	mul	w10, w10, w11
      84:	cbz	w10, 164 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x164>
      88:	mov	w10, #0x1                   	// #1
      8c:	str	w10, [x0, #88]
      90:	cbz	x9, 184 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x184>
      94:	ldr	x8, [x8]
      98:	mov	x20, x3
      9c:	mov	x21, x2
      a0:	ldp	x9, x8, [x8, #8]
      a4:	sub	x8, x8, x9
      a8:	stp	x9, x9, [x0, #8]
      ac:	stp	x8, xzr, [x0, #24]
      b0:	mov	w0, #0x18                  	// #24
      b4:	bl	0 <_Znwm>
      b8:	stp	xzr, xzr, [x0, #8]
      bc:	str	xzr, [x0]
      c0:	str	x0, [sp, #8]
      c4:	add	x2, sp, #0x8
      c8:	mov	x0, x22
      cc:	mov	x1, xzr
      d0:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
      d4:	ldr	x22, [sp, #8]
      d8:	cbz	x22, f0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xf0>
      dc:	ldr	x0, [x22]
      e0:	cbz	x0, e8 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0xe8>
      e4:	bl	0 <_ZdlPv>
      e8:	mov	x0, x22
      ec:	bl	0 <_ZdlPv>
      f0:	cbz	x20, 12c <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x12c>
      f4:	add	x8, sp, #0x8
      f8:	add	x22, x21, x20, lsl #5
      fc:	add	x20, x8, #0x10
     100:	mov	w23, #0x1                   	// #1
     104:	ldr	x2, [x21, #8]
     108:	cbz	x2, 144 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x144>
     10c:	ldr	x1, [x21], #32
     110:	mov	x0, x19
     114:	mov	x3, x20
     118:	str	w23, [sp, #24]
     11c:	stp	x1, x2, [sp, #8]
     120:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     124:	cmp	x21, x22
     128:	b.ne	104 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE+0x104>  // b.any
     12c:	ldp	x20, x19, [sp, #80]
     130:	ldp	x22, x21, [sp, #64]
     134:	ldr	x23, [sp, #48]
     138:	ldp	x29, x30, [sp, #32]
     13c:	add	sp, sp, #0x60
     140:	ret
     144:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     148:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     14c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     150:	add	x0, x0, #0x0
     154:	add	x1, x1, #0x0
     158:	add	x3, x3, #0x0
     15c:	mov	w2, #0x27                  	// #39
     160:	bl	0 <__assert_fail>
     164:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     168:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     16c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     170:	add	x0, x0, #0x0
     174:	add	x1, x1, #0x0
     178:	add	x3, x3, #0x0
     17c:	mov	w2, #0x8e                  	// #142
     180:	bl	0 <__assert_fail>
     184:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     188:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     18c:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     190:	add	x0, x0, #0x0
     194:	add	x1, x1, #0x0
     198:	add	x3, x3, #0x0
     19c:	mov	w2, #0x85                  	// #133
     1a0:	bl	0 <__assert_fail>

00000000000001a4 <_ZNK4llvm7TGLexer6getLocEv>:
     1a4:	ldr	x0, [x0, #32]
     1a8:	ret

00000000000001ac <_ZN4llvm7TGLexer11ReturnErrorENS_5SMLocERKNS_5TwineE>:
     1ac:	sub	sp, sp, #0x20
     1b0:	stp	x29, x30, [sp, #16]
     1b4:	add	x29, sp, #0x10
     1b8:	str	x1, [sp, #8]
     1bc:	add	x0, sp, #0x8
     1c0:	mov	w1, #0x1                   	// #1
     1c4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     1c8:	ldp	x29, x30, [sp, #16]
     1cc:	mov	w0, #0x1                   	// #1
     1d0:	add	sp, sp, #0x20
     1d4:	ret

00000000000001d8 <_ZN4llvm7TGLexer11ReturnErrorEPKcRKNS_5TwineE>:
     1d8:	sub	sp, sp, #0x20
     1dc:	stp	x29, x30, [sp, #16]
     1e0:	add	x29, sp, #0x10
     1e4:	str	x1, [sp, #8]
     1e8:	add	x0, sp, #0x8
     1ec:	mov	w1, #0x1                   	// #1
     1f0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     1f4:	ldp	x29, x30, [sp, #16]
     1f8:	mov	w0, #0x1                   	// #1
     1fc:	add	sp, sp, #0x20
     200:	ret

0000000000000204 <_ZN4llvm7TGLexer10processEOFEv>:
     204:	stp	x29, x30, [sp, #-32]!
     208:	stp	x20, x19, [sp, #16]
     20c:	mov	x29, sp
     210:	ldr	w8, [x0, #88]
     214:	cbz	w8, 2f0 <_ZN4llvm7TGLexer10processEOFEv+0xec>
     218:	ldr	x9, [x0]
     21c:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     220:	movk	x11, #0xaaab
     224:	mov	x19, x0
     228:	ldp	x9, x10, [x9]
     22c:	sub	x10, x10, x9
     230:	asr	x10, x10, #3
     234:	mul	x10, x10, x11
     238:	cmp	x10, x8
     23c:	b.cc	2f0 <_ZN4llvm7TGLexer10processEOFEv+0xec>  // b.lo, b.ul, b.last
     240:	sub	w8, w8, #0x1
     244:	mov	w10, #0x18                  	// #24
     248:	umaddl	x8, w8, w10, x9
     24c:	ldr	x20, [x8, #16]
     250:	cbz	x20, 2d4 <_ZN4llvm7TGLexer10processEOFEv+0xd0>
     254:	mov	x0, x19
     258:	mov	w1, wzr
     25c:	bl	330 <_ZN4llvm7TGLexer15prepExitIncludeEb>
     260:	mov	w8, w0
     264:	mov	w0, wzr
     268:	tbz	w8, #0, 2c8 <_ZN4llvm7TGLexer10processEOFEv+0xc4>
     26c:	ldr	x0, [x19]
     270:	mov	x1, x20
     274:	bl	0 <_ZNK4llvm9SourceMgr23FindBufferContainingLocENS_5SMLocE>
     278:	str	w0, [x19, #88]
     27c:	cbz	w0, 310 <_ZN4llvm7TGLexer10processEOFEv+0x10c>
     280:	ldr	x8, [x19]
     284:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
     288:	movk	x10, #0xaaab
     28c:	ldp	x8, x9, [x8]
     290:	sub	x9, x9, x8
     294:	asr	x9, x9, #3
     298:	mul	x9, x9, x10
     29c:	cmp	x9, w0, uxtw
     2a0:	b.cc	310 <_ZN4llvm7TGLexer10processEOFEv+0x10c>  // b.lo, b.ul, b.last
     2a4:	sub	w9, w0, #0x1
     2a8:	mov	w10, #0x18                  	// #24
     2ac:	umull	x9, w9, w10
     2b0:	ldr	x8, [x8, x9]
     2b4:	mov	w0, #0x1                   	// #1
     2b8:	ldp	x9, x8, [x8, #8]
     2bc:	sub	x8, x8, x9
     2c0:	stp	x20, x9, [x19, #8]
     2c4:	stp	x8, x20, [x19, #24]
     2c8:	ldp	x20, x19, [sp, #16]
     2cc:	ldp	x29, x30, [sp], #32
     2d0:	ret
     2d4:	mov	w1, #0x1                   	// #1
     2d8:	mov	x0, x19
     2dc:	bl	330 <_ZN4llvm7TGLexer15prepExitIncludeEb>
     2e0:	mov	w0, wzr
     2e4:	ldp	x20, x19, [sp, #16]
     2e8:	ldp	x29, x30, [sp], #32
     2ec:	ret
     2f0:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2f4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2f8:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     2fc:	add	x0, x0, #0x0
     300:	add	x1, x1, #0x0
     304:	add	x3, x3, #0x0
     308:	mov	w2, #0x93                  	// #147
     30c:	bl	0 <__assert_fail>
     310:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     314:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     318:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     31c:	add	x0, x0, #0x0
     320:	add	x1, x1, #0x0
     324:	add	x3, x3, #0x0
     328:	mov	w2, #0x85                  	// #133
     32c:	bl	0 <__assert_fail>

0000000000000330 <_ZN4llvm7TGLexer15prepExitIncludeEb>:
     330:	sub	sp, sp, #0x50
     334:	stp	x29, x30, [sp, #32]
     338:	stp	x22, x21, [sp, #48]
     33c:	stp	x20, x19, [sp, #64]
     340:	add	x29, sp, #0x20
     344:	ldr	x8, [x0, #184]
     348:	mov	x19, x0
     34c:	mov	x22, x8
     350:	ldr	x9, [x22, #-8]!
     354:	ldp	x10, x21, [x9]
     358:	cmp	x10, x21
     35c:	b.eq	3b4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0x84>  // b.none
     360:	ldp	x8, x9, [x19, #16]
     364:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     368:	add	x10, x10, #0x0
     36c:	mov	w20, #0x103                 	// #259
     370:	add	x0, x8, x9
     374:	add	x1, sp, #0x8
     378:	stp	x10, xzr, [sp, #8]
     37c:	strh	w20, [sp, #24]
     380:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
     384:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     388:	sub	x0, x21, #0x8
     38c:	add	x8, x8, #0x0
     390:	add	x2, sp, #0x8
     394:	mov	w1, #0x1                   	// #1
     398:	stp	x8, xzr, [sp, #8]
     39c:	strh	w20, [sp, #24]
     3a0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     3a4:	ldr	x8, [x19, #8]
     3a8:	mov	w0, wzr
     3ac:	str	x8, [x19, #32]
     3b0:	b	40c <_ZN4llvm7TGLexer15prepExitIncludeEb+0xdc>
     3b4:	ldr	x9, [x19, #176]
     3b8:	cmp	x9, x8
     3bc:	b.eq	420 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf0>  // b.none
     3c0:	str	x22, [x19, #184]
     3c4:	ldr	x21, [x22]
     3c8:	mov	w20, w1
     3cc:	cbz	x21, 3e4 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xb4>
     3d0:	ldr	x0, [x21]
     3d4:	cbz	x0, 3dc <_ZN4llvm7TGLexer15prepExitIncludeEb+0xac>
     3d8:	bl	0 <_ZdlPv>
     3dc:	mov	x0, x21
     3e0:	bl	0 <_ZdlPv>
     3e4:	str	xzr, [x22]
     3e8:	ldp	x8, x9, [x19, #176]
     3ec:	cmp	x8, x9
     3f0:	tbz	w20, #0, 404 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xd4>
     3f4:	b.eq	408 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xd8>  // b.none
     3f8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     3fc:	add	x8, x8, #0x0
     400:	b	428 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf8>
     404:	b.eq	420 <_ZN4llvm7TGLexer15prepExitIncludeEb+0xf0>  // b.none
     408:	mov	w0, #0x1                   	// #1
     40c:	ldp	x20, x19, [sp, #64]
     410:	ldp	x22, x21, [sp, #48]
     414:	ldp	x29, x30, [sp, #32]
     418:	add	sp, sp, #0x50
     41c:	ret
     420:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     424:	add	x8, x8, #0x0
     428:	mov	w9, #0x103                 	// #259
     42c:	add	x0, sp, #0x8
     430:	stp	x8, xzr, [sp, #8]
     434:	strh	w9, [sp, #24]
     438:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

000000000000043c <_ZN4llvm7TGLexer11getNextCharEv>:
     43c:	ldr	x9, [x0, #8]
     440:	mov	x8, x0
     444:	add	x10, x9, #0x1
     448:	str	x10, [x0, #8]
     44c:	ldrb	w0, [x9]
     450:	cbz	w0, 490 <_ZN4llvm7TGLexer11getNextCharEv+0x54>
     454:	cmp	w0, #0xa
     458:	b.eq	464 <_ZN4llvm7TGLexer11getNextCharEv+0x28>  // b.none
     45c:	cmp	w0, #0xd
     460:	b.ne	4b0 <_ZN4llvm7TGLexer11getNextCharEv+0x74>  // b.any
     464:	ldrb	w10, [x10]
     468:	cmp	w10, #0xd
     46c:	b.eq	478 <_ZN4llvm7TGLexer11getNextCharEv+0x3c>  // b.none
     470:	cmp	w10, #0xa
     474:	b.ne	488 <_ZN4llvm7TGLexer11getNextCharEv+0x4c>  // b.any
     478:	cmp	w10, w0
     47c:	b.eq	488 <_ZN4llvm7TGLexer11getNextCharEv+0x4c>  // b.none
     480:	add	x9, x9, #0x2
     484:	str	x9, [x8, #8]
     488:	mov	w0, #0xa                   	// #10
     48c:	ret
     490:	ldp	x10, x11, [x8, #16]
     494:	add	x10, x10, x11
     498:	cmp	x9, x10
     49c:	b.eq	4a8 <_ZN4llvm7TGLexer11getNextCharEv+0x6c>  // b.none
     4a0:	mov	w0, wzr
     4a4:	ret
     4a8:	mov	w0, #0xffffffff            	// #-1
     4ac:	str	x9, [x8, #8]
     4b0:	ret

00000000000004b4 <_ZNK4llvm7TGLexer12peekNextCharEi>:
     4b4:	ldr	x8, [x0, #8]
     4b8:	ldrb	w0, [x8, w1, sxtw]
     4bc:	ret

00000000000004c0 <_ZN4llvm7TGLexer8LexTokenEb>:
     4c0:	sub	sp, sp, #0x60
     4c4:	stp	x29, x30, [sp, #32]
     4c8:	str	x23, [sp, #48]
     4cc:	stp	x22, x21, [sp, #64]
     4d0:	stp	x20, x19, [sp, #80]
     4d4:	add	x29, sp, #0x20
     4d8:	ldr	x23, [x0, #8]
     4dc:	mov	x19, x0
     4e0:	add	x8, x23, #0x1
     4e4:	str	x23, [x0, #32]
     4e8:	str	x8, [x0, #8]
     4ec:	ldrb	w22, [x23]
     4f0:	cmp	w22, #0xd
     4f4:	b.eq	520 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.none
     4f8:	cmp	w22, #0xa
     4fc:	b.eq	520 <_ZN4llvm7TGLexer8LexTokenEb+0x60>  // b.none
     500:	mov	w20, w1
     504:	cbnz	w22, 564 <_ZN4llvm7TGLexer8LexTokenEb+0xa4>
     508:	ldp	x8, x9, [x19, #16]
     50c:	add	x8, x8, x9
     510:	cmp	x8, x23
     514:	b.eq	5f4 <_ZN4llvm7TGLexer8LexTokenEb+0x134>  // b.none
     518:	and	w1, w20, #0x1
     51c:	b	548 <_ZN4llvm7TGLexer8LexTokenEb+0x88>
     520:	ldrb	w8, [x8]
     524:	cmp	w8, #0xd
     528:	b.eq	534 <_ZN4llvm7TGLexer8LexTokenEb+0x74>  // b.none
     52c:	cmp	w8, #0xa
     530:	b.ne	544 <_ZN4llvm7TGLexer8LexTokenEb+0x84>  // b.any
     534:	cmp	w8, w22
     538:	b.eq	544 <_ZN4llvm7TGLexer8LexTokenEb+0x84>  // b.none
     53c:	add	x8, x23, #0x2
     540:	str	x8, [x19, #8]
     544:	mov	w1, #0x1                   	// #1
     548:	mov	x0, x19
     54c:	ldp	x20, x19, [sp, #80]
     550:	ldp	x22, x21, [sp, #64]
     554:	ldr	x23, [sp, #48]
     558:	ldp	x29, x30, [sp, #32]
     55c:	add	sp, sp, #0x60
     560:	b	4c0 <_ZN4llvm7TGLexer8LexTokenEb>
     564:	sub	w9, w22, #0x9
     568:	cmp	w9, #0x74
     56c:	b.hi	704 <_ZN4llvm7TGLexer8LexTokenEb+0x244>  // b.pmore
     570:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     574:	add	x10, x10, #0x0
     578:	adr	x11, 518 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     57c:	ldrb	w12, [x10, x9]
     580:	add	x11, x11, x12, lsl #2
     584:	mov	w21, #0xc                   	// #12
     588:	br	x11
     58c:	sub	w9, w22, #0x30
     590:	cmp	w9, #0x9
     594:	b.hi	630 <_ZN4llvm7TGLexer8LexTokenEb+0x170>  // b.pmore
     598:	mov	x9, xzr
     59c:	ldrb	w20, [x8, x9]
     5a0:	add	x9, x9, #0x1
     5a4:	sub	w10, w20, #0x30
     5a8:	cmp	w10, #0xa
     5ac:	b.cc	59c <_ZN4llvm7TGLexer8LexTokenEb+0xdc>  // b.lo, b.ul, b.last
     5b0:	cmp	w20, #0x78
     5b4:	b.eq	5c0 <_ZN4llvm7TGLexer8LexTokenEb+0x100>  // b.none
     5b8:	cmp	w20, #0x62
     5bc:	b.ne	634 <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.any
     5c0:	ldrb	w8, [x8, w9, uxtw]
     5c4:	sub	w8, w8, #0x30
     5c8:	cmp	w8, #0x36
     5cc:	b.hi	634 <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.pmore
     5d0:	mov	w9, #0x1                   	// #1
     5d4:	mov	x10, #0x7e0000007e0000      	// #35465847073800192
     5d8:	lsl	x9, x9, x8
     5dc:	movk	x10, #0x3fc
     5e0:	tst	x9, x10
     5e4:	b.eq	800 <_ZN4llvm7TGLexer8LexTokenEb+0x340>  // b.none
     5e8:	cmp	w20, #0x78
     5ec:	b.ne	634 <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.any
     5f0:	b	648 <_ZN4llvm7TGLexer8LexTokenEb+0x188>
     5f4:	mov	x0, x19
     5f8:	str	x23, [x19, #8]
     5fc:	bl	204 <_ZN4llvm7TGLexer10processEOFEv>
     600:	tbz	w0, #0, 610 <_ZN4llvm7TGLexer8LexTokenEb+0x150>
     604:	mov	x0, x19
     608:	mov	w1, wzr
     60c:	b	54c <_ZN4llvm7TGLexer8LexTokenEb+0x8c>
     610:	mov	w21, wzr
     614:	mov	w0, w21
     618:	ldp	x20, x19, [sp, #80]
     61c:	ldp	x22, x21, [sp, #64]
     620:	ldr	x23, [sp, #48]
     624:	ldp	x29, x30, [sp, #32]
     628:	add	sp, sp, #0x60
     62c:	ret
     630:	mov	w20, wzr
     634:	mov	w0, w20
     638:	bl	0 <isalpha>
     63c:	cmp	w20, #0x5f
     640:	b.eq	718 <_ZN4llvm7TGLexer8LexTokenEb+0x258>  // b.none
     644:	cbnz	w0, 718 <_ZN4llvm7TGLexer8LexTokenEb+0x258>
     648:	mov	x0, x19
     64c:	ldp	x20, x19, [sp, #80]
     650:	ldp	x22, x21, [sp, #64]
     654:	ldr	x23, [sp, #48]
     658:	ldp	x29, x30, [sp, #32]
     65c:	add	sp, sp, #0x60
     660:	b	1918 <_ZN4llvm7TGLexer9LexNumberEv>
     664:	mov	x0, x19
     668:	ldp	x20, x19, [sp, #80]
     66c:	ldp	x22, x21, [sp, #64]
     670:	ldr	x23, [sp, #48]
     674:	ldp	x29, x30, [sp, #32]
     678:	add	sp, sp, #0x60
     67c:	b	203c <_ZN4llvm7TGLexer10LexExclaimEv>
     680:	mov	x0, x19
     684:	ldp	x20, x19, [sp, #80]
     688:	ldp	x22, x21, [sp, #64]
     68c:	ldr	x23, [sp, #48]
     690:	ldp	x29, x30, [sp, #32]
     694:	add	sp, sp, #0x60
     698:	b	1af8 <_ZN4llvm7TGLexer9LexStringEv>
     69c:	tbz	w20, #0, 6b0 <_ZN4llvm7TGLexer8LexTokenEb+0x1f0>
     6a0:	mov	x0, x19
     6a4:	bl	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
     6a8:	cmp	w0, #0x1
     6ac:	b.ne	838 <_ZN4llvm7TGLexer8LexTokenEb+0x378>  // b.any
     6b0:	mov	w21, #0x12                  	// #18
     6b4:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6b8:	mov	x0, x19
     6bc:	ldp	x20, x19, [sp, #80]
     6c0:	ldp	x22, x21, [sp, #64]
     6c4:	ldr	x23, [sp, #48]
     6c8:	ldp	x29, x30, [sp, #32]
     6cc:	add	sp, sp, #0x60
     6d0:	b	1ddc <_ZN4llvm7TGLexer10LexVarNameEv>
     6d4:	mov	w21, #0x8                   	// #8
     6d8:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6dc:	mov	w21, #0x9                   	// #9
     6e0:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6e4:	mov	w21, #0xe                   	// #14
     6e8:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6ec:	mov	w21, #0x10                  	// #16
     6f0:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6f4:	mov	w21, #0xb                   	// #11
     6f8:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     6fc:	mov	w21, #0x7                   	// #7
     700:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     704:	mov	w0, w22
     708:	bl	0 <isalpha>
     70c:	cmp	w22, #0x5f
     710:	b.eq	718 <_ZN4llvm7TGLexer8LexTokenEb+0x258>  // b.none
     714:	cbz	w0, 7d0 <_ZN4llvm7TGLexer8LexTokenEb+0x310>
     718:	mov	x0, x19
     71c:	ldp	x20, x19, [sp, #80]
     720:	ldp	x22, x21, [sp, #64]
     724:	ldr	x23, [sp, #48]
     728:	ldp	x29, x30, [sp, #32]
     72c:	add	sp, sp, #0x60
     730:	b	85c <_ZN4llvm7TGLexer13LexIdentifierEv>
     734:	mov	w21, #0xf                   	// #15
     738:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     73c:	ldrb	w8, [x8]
     740:	cmp	w8, #0x2a
     744:	b.eq	824 <_ZN4llvm7TGLexer8LexTokenEb+0x364>  // b.none
     748:	cmp	w8, #0x2f
     74c:	b.ne	7d0 <_ZN4llvm7TGLexer8LexTokenEb+0x310>  // b.any
     750:	add	x8, x23, #0x2
     754:	b	76c <_ZN4llvm7TGLexer8LexTokenEb+0x2ac>
     758:	ldp	x9, x10, [x19, #16]
     75c:	add	x9, x9, x10
     760:	cmp	x8, x9
     764:	b.eq	518 <_ZN4llvm7TGLexer8LexTokenEb+0x58>  // b.none
     768:	add	x8, x8, #0x1
     76c:	str	x8, [x19, #8]
     770:	ldrb	w9, [x8]
     774:	cbz	w9, 758 <_ZN4llvm7TGLexer8LexTokenEb+0x298>
     778:	cmp	w9, #0xa
     77c:	b.eq	518 <_ZN4llvm7TGLexer8LexTokenEb+0x58>  // b.none
     780:	cmp	w9, #0xd
     784:	b.ne	768 <_ZN4llvm7TGLexer8LexTokenEb+0x2a8>  // b.any
     788:	b	518 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     78c:	mov	w21, #0xd                   	// #13
     790:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     794:	mov	w21, #0xa                   	// #10
     798:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     79c:	mov	w21, #0x11                  	// #17
     7a0:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7a4:	mov	x0, x19
     7a8:	ldp	x20, x19, [sp, #80]
     7ac:	ldp	x22, x21, [sp, #64]
     7b0:	ldr	x23, [sp, #48]
     7b4:	ldp	x29, x30, [sp, #32]
     7b8:	add	sp, sp, #0x60
     7bc:	b	1ea8 <_ZN4llvm7TGLexer10LexBracketEv>
     7c0:	mov	w21, #0x5                   	// #5
     7c4:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7c8:	mov	w21, #0x6                   	// #6
     7cc:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     7d0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     7d4:	add	x8, x8, #0x0
     7d8:	mov	w9, #0x103                 	// #259
     7dc:	add	x0, x29, #0x18
     7e0:	add	x2, sp, #0x8
     7e4:	mov	w1, #0x1                   	// #1
     7e8:	stp	x8, xzr, [sp, #8]
     7ec:	strh	w9, [sp, #24]
     7f0:	str	x23, [x29, #24]
     7f4:	mov	w21, #0x1                   	// #1
     7f8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     7fc:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     800:	mov	w9, #0x1                   	// #1
     804:	lsl	x8, x9, x8
     808:	tst	x8, #0x3
     80c:	b.eq	634 <_ZN4llvm7TGLexer8LexTokenEb+0x174>  // b.none
     810:	cmp	w20, #0x78
     814:	b.eq	648 <_ZN4llvm7TGLexer8LexTokenEb+0x188>  // b.none
     818:	cmp	w20, #0x62
     81c:	b.eq	648 <_ZN4llvm7TGLexer8LexTokenEb+0x188>  // b.none
     820:	b	634 <_ZN4llvm7TGLexer8LexTokenEb+0x174>
     824:	mov	x0, x19
     828:	bl	1814 <_ZN4llvm7TGLexer12SkipCCommentEv>
     82c:	tbz	w0, #0, 518 <_ZN4llvm7TGLexer8LexTokenEb+0x58>
     830:	mov	w21, #0x1                   	// #1
     834:	b	614 <_ZN4llvm7TGLexer8LexTokenEb+0x154>
     838:	mov	w1, w0
     83c:	mov	x0, x19
     840:	ldp	x20, x19, [sp, #80]
     844:	ldp	x22, x21, [sp, #64]
     848:	ldr	x23, [sp, #48]
     84c:	ldp	x29, x30, [sp, #32]
     850:	mov	w2, #0x1                   	// #1
     854:	add	sp, sp, #0x60
     858:	b	ff4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>

000000000000085c <_ZN4llvm7TGLexer13LexIdentifierEv>:
     85c:	stp	x29, x30, [sp, #-48]!
     860:	stp	x22, x21, [sp, #16]
     864:	stp	x20, x19, [sp, #32]
     868:	mov	x29, sp
     86c:	ldr	x22, [x0, #8]
     870:	ldr	x20, [x0, #32]
     874:	mov	x19, x0
     878:	ldrb	w21, [x22]
     87c:	mov	w0, w21
     880:	bl	0 <isalpha>
     884:	cmp	w21, #0x5f
     888:	b.eq	89c <_ZN4llvm7TGLexer13LexIdentifierEv+0x40>  // b.none
     88c:	cbnz	w0, 89c <_ZN4llvm7TGLexer13LexIdentifierEv+0x40>
     890:	sub	w8, w21, #0x30
     894:	cmp	w8, #0x9
     898:	b.hi	8cc <_ZN4llvm7TGLexer13LexIdentifierEv+0x70>  // b.pmore
     89c:	add	x22, x22, #0x1
     8a0:	str	x22, [x19, #8]
     8a4:	ldrb	w21, [x22], #1
     8a8:	mov	w0, w21
     8ac:	bl	0 <isalpha>
     8b0:	cmp	w21, #0x5f
     8b4:	b.eq	8a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>  // b.none
     8b8:	sub	w8, w21, #0x30
     8bc:	cbnz	w0, 8a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>
     8c0:	cmp	w8, #0xa
     8c4:	b.cc	8a0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x44>  // b.lo, b.ul, b.last
     8c8:	sub	x22, x22, #0x1
     8cc:	sub	x21, x22, x20
     8d0:	sub	x8, x21, #0x2
     8d4:	cmp	x8, #0x8
     8d8:	b.hi	b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>  // b.pmore
     8dc:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     8e0:	add	x9, x9, #0x0
     8e4:	adr	x10, 8f4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x98>
     8e8:	ldrb	w11, [x9, x8]
     8ec:	add	x10, x10, x11, lsl #2
     8f0:	br	x10
     8f4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     8f8:	add	x1, x1, #0x0
     8fc:	mov	x0, x20
     900:	mov	x2, x21
     904:	bl	0 <bcmp>
     908:	cbz	w0, bb0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x354>
     90c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     910:	add	x1, x1, #0x0
     914:	mov	x0, x20
     918:	mov	x2, x21
     91c:	bl	0 <bcmp>
     920:	cbnz	w0, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     924:	mov	w0, #0x24                  	// #36
     928:	ldp	x20, x19, [sp, #32]
     92c:	ldp	x22, x21, [sp, #16]
     930:	ldp	x29, x30, [sp], #48
     934:	ret
     938:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     93c:	add	x1, x1, #0x0
     940:	mov	x0, x20
     944:	mov	x2, x21
     948:	bl	0 <bcmp>
     94c:	cbz	w0, bc4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x368>
     950:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     954:	add	x1, x1, #0x0
     958:	mov	x0, x20
     95c:	mov	x2, x21
     960:	bl	0 <bcmp>
     964:	cbz	w0, c48 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3ec>
     968:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     96c:	add	x1, x1, #0x0
     970:	mov	x0, x20
     974:	mov	x2, x21
     978:	bl	0 <bcmp>
     97c:	cbz	w0, cac <_ZN4llvm7TGLexer13LexIdentifierEv+0x450>
     980:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     984:	add	x1, x1, #0x0
     988:	mov	x0, x20
     98c:	mov	x2, x21
     990:	bl	0 <bcmp>
     994:	cbz	w0, cd4 <_ZN4llvm7TGLexer13LexIdentifierEv+0x478>
     998:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     99c:	add	x1, x1, #0x0
     9a0:	mov	x0, x20
     9a4:	mov	x2, x21
     9a8:	bl	0 <bcmp>
     9ac:	cbnz	w0, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     9b0:	mov	w0, #0x1e                  	// #30
     9b4:	ldp	x20, x19, [sp, #32]
     9b8:	ldp	x22, x21, [sp, #16]
     9bc:	ldp	x29, x30, [sp], #48
     9c0:	ret
     9c4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9c8:	add	x1, x1, #0x0
     9cc:	mov	x0, x20
     9d0:	mov	x2, x21
     9d4:	bl	0 <bcmp>
     9d8:	cbz	w0, bd8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x37c>
     9dc:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9e0:	add	x1, x1, #0x0
     9e4:	mov	x0, x20
     9e8:	mov	x2, x21
     9ec:	bl	0 <bcmp>
     9f0:	cbz	w0, c5c <_ZN4llvm7TGLexer13LexIdentifierEv+0x400>
     9f4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     9f8:	add	x1, x1, #0x0
     9fc:	mov	x0, x20
     a00:	mov	x2, x21
     a04:	bl	0 <bcmp>
     a08:	cbz	w0, cc0 <_ZN4llvm7TGLexer13LexIdentifierEv+0x464>
     a0c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a10:	add	x1, x1, #0x0
     a14:	mov	x0, x20
     a18:	mov	x2, x21
     a1c:	bl	0 <bcmp>
     a20:	cbz	w0, ce8 <_ZN4llvm7TGLexer13LexIdentifierEv+0x48c>
     a24:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a28:	add	x1, x1, #0x0
     a2c:	mov	x0, x20
     a30:	mov	x2, x21
     a34:	bl	0 <bcmp>
     a38:	cbz	w0, cfc <_ZN4llvm7TGLexer13LexIdentifierEv+0x4a0>
     a3c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a40:	add	x1, x1, #0x0
     a44:	mov	x0, x20
     a48:	mov	x2, x21
     a4c:	bl	0 <bcmp>
     a50:	cbnz	w0, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     a54:	mov	w0, #0x26                  	// #38
     a58:	ldp	x20, x19, [sp, #32]
     a5c:	ldp	x22, x21, [sp, #16]
     a60:	ldp	x29, x30, [sp], #48
     a64:	ret
     a68:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a6c:	add	x1, x1, #0x0
     a70:	mov	x0, x20
     a74:	mov	x2, x21
     a78:	bl	0 <bcmp>
     a7c:	cbz	w0, bec <_ZN4llvm7TGLexer13LexIdentifierEv+0x390>
     a80:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     a84:	add	x1, x1, #0x0
     a88:	mov	x0, x20
     a8c:	mov	x2, x21
     a90:	bl	0 <bcmp>
     a94:	cbnz	w0, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     a98:	mov	w0, #0x1b                  	// #27
     a9c:	ldp	x20, x19, [sp, #32]
     aa0:	ldp	x22, x21, [sp, #16]
     aa4:	ldp	x29, x30, [sp], #48
     aa8:	ret
     aac:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ab0:	add	x1, x1, #0x0
     ab4:	mov	x0, x20
     ab8:	mov	x2, x21
     abc:	bl	0 <bcmp>
     ac0:	cbz	w0, c00 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3a4>
     ac4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ac8:	add	x1, x1, #0x0
     acc:	mov	x0, x20
     ad0:	mov	x2, x21
     ad4:	bl	0 <bcmp>
     ad8:	cbz	w0, c70 <_ZN4llvm7TGLexer13LexIdentifierEv+0x414>
     adc:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ae0:	add	x1, x1, #0x0
     ae4:	mov	x0, x20
     ae8:	mov	x2, x21
     aec:	bl	0 <bcmp>
     af0:	cbnz	w0, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     af4:	mov	w0, #0x23                  	// #35
     af8:	ldp	x20, x19, [sp, #32]
     afc:	ldp	x22, x21, [sp, #16]
     b00:	ldp	x29, x30, [sp], #48
     b04:	ret
     b08:	ldr	w8, [x20]
     b0c:	ldur	w9, [x20, #3]
     b10:	mov	w10, #0x6e69                	// #28265
     b14:	mov	w11, #0x756c                	// #30060
     b18:	movk	w10, #0x6c63, lsl #16
     b1c:	movk	w11, #0x6564, lsl #16
     b20:	eor	w8, w8, w10
     b24:	eor	w9, w9, w11
     b28:	orr	w8, w8, w9
     b2c:	cbz	w8, c14 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3b8>
     b30:	ldr	w8, [x20]
     b34:	ldur	w9, [x20, #3]
     b38:	mov	w10, #0x6f66                	// #28518
     b3c:	mov	w11, #0x6165                	// #24933
     b40:	movk	w10, #0x6572, lsl #16
     b44:	movk	w11, #0x6863, lsl #16
     b48:	eor	w8, w8, w10
     b4c:	eor	w9, w9, w11
     b50:	orr	w8, w8, w9
     b54:	cbnz	w8, b84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x328>
     b58:	mov	w0, #0x19                  	// #25
     b5c:	ldp	x20, x19, [sp, #32]
     b60:	ldp	x22, x21, [sp, #16]
     b64:	ldp	x29, x30, [sp], #48
     b68:	ret
     b6c:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     b70:	add	x1, x1, #0x0
     b74:	mov	x0, x20
     b78:	mov	x2, x21
     b7c:	bl	0 <bcmp>
     b80:	cbz	w0, c34 <_ZN4llvm7TGLexer13LexIdentifierEv+0x3d8>
     b84:	ldr	x2, [x19, #56]
     b88:	add	x0, x19, #0x30
     b8c:	mov	x1, xzr
     b90:	mov	x3, x20
     b94:	mov	x4, x21
     b98:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     b9c:	mov	w0, #0x48                  	// #72
     ba0:	ldp	x20, x19, [sp, #32]
     ba4:	ldp	x22, x21, [sp, #16]
     ba8:	ldp	x29, x30, [sp], #48
     bac:	ret
     bb0:	mov	w0, #0x1c                  	// #28
     bb4:	ldp	x20, x19, [sp, #32]
     bb8:	ldp	x22, x21, [sp, #16]
     bbc:	ldp	x29, x30, [sp], #48
     bc0:	ret
     bc4:	mov	w0, #0x1d                  	// #29
     bc8:	ldp	x20, x19, [sp, #32]
     bcc:	ldp	x22, x21, [sp, #16]
     bd0:	ldp	x29, x30, [sp], #48
     bd4:	ret
     bd8:	mov	w0, #0x14                  	// #20
     bdc:	ldp	x20, x19, [sp, #32]
     be0:	ldp	x22, x21, [sp, #16]
     be4:	ldp	x29, x30, [sp], #48
     be8:	ret
     bec:	mov	w0, #0x15                  	// #21
     bf0:	ldp	x20, x19, [sp, #32]
     bf4:	ldp	x22, x21, [sp, #16]
     bf8:	ldp	x29, x30, [sp], #48
     bfc:	ret
     c00:	mov	w0, #0x21                  	// #33
     c04:	ldp	x20, x19, [sp, #32]
     c08:	ldp	x22, x21, [sp, #16]
     c0c:	ldp	x29, x30, [sp], #48
     c10:	ret
     c14:	mov	x0, x19
     c18:	bl	2568 <_ZN4llvm7TGLexer10LexIncludeEv>
     c1c:	tbz	w0, #0, c84 <_ZN4llvm7TGLexer13LexIdentifierEv+0x428>
     c20:	mov	w0, #0x1                   	// #1
     c24:	ldp	x20, x19, [sp, #32]
     c28:	ldp	x22, x21, [sp, #16]
     c2c:	ldp	x29, x30, [sp], #48
     c30:	ret
     c34:	mov	w0, #0x20                  	// #32
     c38:	ldp	x20, x19, [sp, #32]
     c3c:	ldp	x22, x21, [sp, #16]
     c40:	ldp	x29, x30, [sp], #48
     c44:	ret
     c48:	mov	w0, #0x13                  	// #19
     c4c:	ldp	x20, x19, [sp, #32]
     c50:	ldp	x22, x21, [sp, #16]
     c54:	ldp	x29, x30, [sp], #48
     c58:	ret
     c5c:	mov	w0, #0x1f                  	// #31
     c60:	ldp	x20, x19, [sp, #32]
     c64:	ldp	x22, x21, [sp, #16]
     c68:	ldp	x29, x30, [sp], #48
     c6c:	ret
     c70:	mov	w0, #0x22                  	// #34
     c74:	ldp	x20, x19, [sp, #32]
     c78:	ldp	x22, x21, [sp, #16]
     c7c:	ldp	x29, x30, [sp], #48
     c80:	ret
     c84:	ldp	x8, x9, [x19, #8]
     c88:	mov	x0, x19
     c8c:	cmp	x8, x9
     c90:	cset	w1, eq  // eq = none
     c94:	bl	4c0 <_ZN4llvm7TGLexer8LexTokenEb>
     c98:	str	w0, [x19, #40]
     c9c:	ldp	x20, x19, [sp, #32]
     ca0:	ldp	x22, x21, [sp, #16]
     ca4:	ldp	x29, x30, [sp], #48
     ca8:	ret
     cac:	mov	w0, #0x17                  	// #23
     cb0:	ldp	x20, x19, [sp, #32]
     cb4:	ldp	x22, x21, [sp, #16]
     cb8:	ldp	x29, x30, [sp], #48
     cbc:	ret
     cc0:	mov	w0, #0x16                  	// #22
     cc4:	ldp	x20, x19, [sp, #32]
     cc8:	ldp	x22, x21, [sp, #16]
     ccc:	ldp	x29, x30, [sp], #48
     cd0:	ret
     cd4:	mov	w0, #0x18                  	// #24
     cd8:	ldp	x20, x19, [sp, #32]
     cdc:	ldp	x22, x21, [sp, #16]
     ce0:	ldp	x29, x30, [sp], #48
     ce4:	ret
     ce8:	mov	w0, #0x1a                  	// #26
     cec:	ldp	x20, x19, [sp, #32]
     cf0:	ldp	x22, x21, [sp, #16]
     cf4:	ldp	x29, x30, [sp], #48
     cf8:	ret
     cfc:	mov	w0, #0x25                  	// #37
     d00:	ldp	x20, x19, [sp, #32]
     d04:	ldp	x22, x21, [sp, #16]
     d08:	ldp	x29, x30, [sp], #48
     d0c:	ret

0000000000000d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>:
     d10:	ldr	x8, [x0, #8]
     d14:	ldrb	w9, [x8]
     d18:	cmp	w9, #0x64
     d1c:	b.eq	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     d20:	cmp	w9, #0x65
     d24:	b.eq	db0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xa0>  // b.none
     d28:	cmp	w9, #0x69
     d2c:	b.ne	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     d30:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     d34:	mov	w10, #0x2                   	// #2
     d38:	add	x12, x12, #0x0
     d3c:	sub	x13, x10, #0x1
     d40:	ldrb	w11, [x8, w13, sxtw]
     d44:	cmp	w13, #0x4
     d48:	b.hi	ea8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x198>  // b.pmore
     d4c:	ldrb	w13, [x12, w13, uxtw]
     d50:	add	x10, x10, #0x1
     d54:	cmp	w11, w13
     d58:	b.eq	d3c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x2c>  // b.none
     d5c:	cmp	w9, #0x64
     d60:	b.eq	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     d64:	cmp	w9, #0x65
     d68:	b.eq	db0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xa0>  // b.none
     d6c:	cmp	w9, #0x69
     d70:	b.ne	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     d74:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     d78:	mov	w10, #0x2                   	// #2
     d7c:	add	x12, x12, #0x0
     d80:	sub	x13, x10, #0x1
     d84:	ldrb	w11, [x8, w13, sxtw]
     d88:	cmp	w13, #0x5
     d8c:	b.hi	f84 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x274>  // b.pmore
     d90:	ldrb	w13, [x12, w13, uxtw]
     d94:	add	x10, x10, #0x1
     d98:	cmp	w11, w13
     d9c:	b.eq	d80 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x70>  // b.none
     da0:	cmp	w9, #0x64
     da4:	b.eq	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     da8:	cmp	w9, #0x65
     dac:	b.ne	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     db0:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     db4:	mov	w10, #0x2                   	// #2
     db8:	add	x12, x12, #0x0
     dbc:	sub	x13, x10, #0x1
     dc0:	ldrb	w11, [x8, w13, sxtw]
     dc4:	cmp	w13, #0x3
     dc8:	b.hi	e80 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x170>  // b.pmore
     dcc:	ldrb	w13, [x12, w13, uxtw]
     dd0:	add	x10, x10, #0x1
     dd4:	cmp	w11, w13
     dd8:	b.eq	dbc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xac>  // b.none
     ddc:	cmp	w9, #0x64
     de0:	b.eq	e20 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x110>  // b.none
     de4:	cmp	w9, #0x65
     de8:	b.ne	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     dec:	adrp	x12, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     df0:	mov	w10, #0x2                   	// #2
     df4:	add	x12, x12, #0x0
     df8:	sub	x13, x10, #0x1
     dfc:	ldrb	w11, [x8, w13, sxtw]
     e00:	cmp	w13, #0x4
     e04:	b.hi	f5c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x24c>  // b.pmore
     e08:	ldrb	w13, [x12, w13, uxtw]
     e0c:	add	x10, x10, #0x1
     e10:	cmp	w11, w13
     e14:	b.eq	df8 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xe8>  // b.none
     e18:	cmp	w9, #0x64
     e1c:	b.ne	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>  // b.any
     e20:	adrp	x11, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     e24:	mov	w9, #0x2                   	// #2
     e28:	add	x11, x11, #0x0
     e2c:	sub	x12, x9, #0x1
     e30:	ldrb	w10, [x8, w12, sxtw]
     e34:	cmp	w12, #0x5
     e38:	b.hi	e54 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x144>  // b.pmore
     e3c:	ldrb	w12, [x11, w12, uxtw]
     e40:	add	x9, x9, #0x1
     e44:	cmp	w10, w12
     e48:	b.eq	e2c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x11c>  // b.none
     e4c:	mov	w0, #0x1                   	// #1
     e50:	ret
     e54:	cmp	w10, #0x2f
     e58:	mov	w0, #0x1                   	// #1
     e5c:	b.hi	e50 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x140>  // b.pmore
     e60:	mov	w11, #0x1                   	// #1
     e64:	mov	x12, #0x2600                	// #9728
     e68:	lsl	x11, x11, x10
     e6c:	movk	x12, #0x1, lsl #32
     e70:	tst	x11, x12
     e74:	b.eq	ee0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1d0>  // b.none
     e78:	mov	w8, #0x4                   	// #4
     e7c:	b	ecc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     e80:	cmp	w11, #0x2f
     e84:	b.hi	ddc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>  // b.pmore
     e88:	mov	w12, #0x1                   	// #1
     e8c:	mov	x13, #0x2600                	// #9728
     e90:	lsl	x12, x12, x11
     e94:	movk	x13, #0x1, lsl #32
     e98:	tst	x12, x13
     e9c:	b.eq	f04 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1f4>  // b.none
     ea0:	mov	w8, #0x2                   	// #2
     ea4:	b	ecc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     ea8:	cmp	w11, #0x2f
     eac:	b.hi	d5c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.pmore
     eb0:	mov	w12, #0x1                   	// #1
     eb4:	mov	x13, #0x2600                	// #9728
     eb8:	lsl	x12, x12, x11
     ebc:	movk	x13, #0x1, lsl #32
     ec0:	tst	x12, x13
     ec4:	b.eq	f28 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x218>  // b.none
     ec8:	mov	x8, xzr
     ecc:	lsl	x8, x8, #4
     ed0:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     ed4:	add	x9, x9, #0x0
     ed8:	ldr	w0, [x9, x8]
     edc:	ret
     ee0:	cmp	x10, #0x2f
     ee4:	b.ne	e50 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x140>  // b.any
     ee8:	ldrb	w8, [x8, x9]
     eec:	mov	w10, #0x4                   	// #4
     ef0:	cmp	w8, #0x2a
     ef4:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     ef8:	cmp	w8, #0x2f
     efc:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     f00:	b	e4c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x13c>
     f04:	cmp	x11, #0x2f
     f08:	b.ne	ddc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>  // b.any
     f0c:	ldrb	w11, [x8, x10]
     f10:	mov	w10, #0x2                   	// #2
     f14:	cmp	w11, #0x2a
     f18:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     f1c:	cmp	w11, #0x2f
     f20:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     f24:	b	ddc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0xcc>
     f28:	cmp	x11, #0x2f
     f2c:	b.ne	d5c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.any
     f30:	ldrb	w11, [x8, x10]
     f34:	mov	x10, xzr
     f38:	cmp	w11, #0x2a
     f3c:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     f40:	cmp	w11, #0x2f
     f44:	b.ne	d5c <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x4c>  // b.any
     f48:	lsl	x8, x10, #4
     f4c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
     f50:	add	x9, x9, #0x0
     f54:	ldr	w0, [x9, x8]
     f58:	ret
     f5c:	cmp	w11, #0x2f
     f60:	b.hi	e18 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>  // b.pmore
     f64:	mov	w12, #0x1                   	// #1
     f68:	mov	x13, #0x2600                	// #9728
     f6c:	lsl	x12, x12, x11
     f70:	movk	x13, #0x1, lsl #32
     f74:	tst	x12, x13
     f78:	b.eq	fac <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x29c>  // b.none
     f7c:	mov	w8, #0x3                   	// #3
     f80:	b	ecc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     f84:	cmp	w11, #0x2f
     f88:	b.hi	da0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>  // b.pmore
     f8c:	mov	w12, #0x1                   	// #1
     f90:	mov	x13, #0x2600                	// #9728
     f94:	lsl	x12, x12, x11
     f98:	movk	x13, #0x1, lsl #32
     f9c:	tst	x12, x13
     fa0:	b.eq	fd0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x2c0>  // b.none
     fa4:	mov	w8, #0x1                   	// #1
     fa8:	b	ecc <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x1bc>
     fac:	cmp	x11, #0x2f
     fb0:	b.ne	e18 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>  // b.any
     fb4:	ldrb	w11, [x8, x10]
     fb8:	mov	w10, #0x3                   	// #3
     fbc:	cmp	w11, #0x2a
     fc0:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     fc4:	cmp	w11, #0x2f
     fc8:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     fcc:	b	e18 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x108>
     fd0:	cmp	x11, #0x2f
     fd4:	b.ne	da0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>  // b.any
     fd8:	ldrb	w11, [x8, x10]
     fdc:	mov	w10, #0x1                   	// #1
     fe0:	cmp	w11, #0x2a
     fe4:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     fe8:	cmp	w11, #0x2f
     fec:	b.eq	f48 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x238>  // b.none
     ff0:	b	da0 <_ZNK4llvm7TGLexer15prepIsDirectiveEv+0x90>

0000000000000ff4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>:
     ff4:	sub	sp, sp, #0xc0
     ff8:	stp	x29, x30, [sp, #96]
     ffc:	stp	x28, x27, [sp, #112]
    1000:	stp	x26, x25, [sp, #128]
    1004:	stp	x24, x23, [sp, #144]
    1008:	stp	x22, x21, [sp, #160]
    100c:	stp	x20, x19, [sp, #176]
    1010:	add	x29, sp, #0x60
    1014:	ldr	x23, [x0, #8]
    1018:	sub	w8, w1, #0x4c
    101c:	cmp	w8, #0x5
    1020:	str	x23, [x0, #32]
    1024:	b.cs	178c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x798>  // b.hs, b.nlast
    1028:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    102c:	add	x9, x9, #0x0
    1030:	add	x8, x9, w8, uxtw #4
    1034:	mov	x19, x0
    1038:	ldr	x0, [x8, #8]
    103c:	mov	w28, w2
    1040:	mov	w22, w1
    1044:	bl	0 <strlen>
    1048:	orr	w8, w22, #0x1
    104c:	add	x21, x23, x0
    1050:	cmp	w8, #0x4d
    1054:	str	x21, [x19, #8]
    1058:	b.eq	1124 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x130>  // b.none
    105c:	cmp	w22, #0x50
    1060:	b.eq	115c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x168>  // b.none
    1064:	cmp	w22, #0x4f
    1068:	b.eq	1258 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x264>  // b.none
    106c:	cmp	w22, #0x4e
    1070:	b.ne	1798 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7a4>  // b.any
    1074:	ldr	x8, [x19, #184]
    1078:	ldur	x8, [x8, #-8]
    107c:	ldp	x10, x9, [x8]
    1080:	cmp	x10, x9
    1084:	b.eq	14c8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4d4>  // b.none
    1088:	mov	x10, x9
    108c:	ldr	w11, [x10, #-16]!
    1090:	cmp	w11, #0x4c
    1094:	b.ne	14f0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4fc>  // b.any
    1098:	ldurb	w9, [x9, #-12]
    109c:	str	x10, [x8, #8]
    10a0:	ldr	x8, [x19, #184]
    10a4:	mvn	w9, w9
    10a8:	and	w20, w9, #0x1
    10ac:	ldur	x24, [x8, #-8]
    10b0:	mov	x8, x24
    10b4:	mov	x25, x24
    10b8:	ldr	x26, [x8, #8]!
    10bc:	ldr	x10, [x25, #16]!
    10c0:	cmp	x26, x10
    10c4:	b.eq	1654 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x660>  // b.none
    10c8:	mov	w9, #0x4e                  	// #78
    10cc:	strb	w20, [x26, #4]
    10d0:	str	w9, [x26]
    10d4:	ldurb	w9, [x29, #-22]
    10d8:	ldurh	w10, [x29, #-24]
    10dc:	str	x23, [x26, #8]
    10e0:	strb	w9, [x26, #7]
    10e4:	sturh	w10, [x26, #5]
    10e8:	ldr	x9, [x8]
    10ec:	add	x9, x9, #0x10
    10f0:	mov	x0, x19
    10f4:	str	x9, [x8]
    10f8:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    10fc:	tbz	w0, #0, 1738 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x744>
    1100:	tbz	w28, #0, 16b0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x6bc>
    1104:	mov	w1, #0x1                   	// #1
    1108:	mov	x0, x19
    110c:	mov	w21, #0x1                   	// #1
    1110:	bl	2c14 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    1114:	tbnz	w0, #0, 12a0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2ac>
    1118:	b	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    111c:	add	x21, x21, #0x1
    1120:	str	x21, [x19, #8]
    1124:	ldrb	w8, [x21]
    1128:	cmp	w8, #0x20
    112c:	b.eq	111c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x128>  // b.none
    1130:	cmp	w8, #0x9
    1134:	b.eq	111c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x128>  // b.none
    1138:	str	x21, [x19, #32]
    113c:	mov	x25, x21
    1140:	ldrb	w23, [x25], #1
    1144:	cmp	w23, #0x5f
    1148:	b.ne	118c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x198>  // b.any
    114c:	mov	w24, #0x5f                  	// #95
    1150:	b	119c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1a8>
    1154:	add	x21, x21, #0x1
    1158:	str	x21, [x19, #8]
    115c:	ldrb	w8, [x21]
    1160:	cmp	w8, #0x20
    1164:	b.eq	1154 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x160>  // b.none
    1168:	cmp	w8, #0x9
    116c:	b.eq	1154 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x160>  // b.none
    1170:	str	x21, [x19, #32]
    1174:	mov	x24, x21
    1178:	ldrb	w22, [x24], #1
    117c:	cmp	w22, #0x5f
    1180:	b.ne	13d4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3e0>  // b.any
    1184:	mov	w23, #0x5f                  	// #95
    1188:	b	13e4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3f0>
    118c:	mov	w0, w23
    1190:	bl	0 <isalpha>
    1194:	mov	w24, w23
    1198:	cbz	w0, 13c4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x3d0>
    119c:	mov	w0, w24
    11a0:	bl	0 <isalpha>
    11a4:	cmp	w23, #0x5f
    11a8:	b.eq	11c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1cc>  // b.none
    11ac:	cbnz	w0, 11c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1cc>
    11b0:	sub	w8, w24, #0x30
    11b4:	cmp	w8, #0x9
    11b8:	mov	x8, x21
    11bc:	b.hi	11ec <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1f8>  // b.pmore
    11c0:	str	x25, [x19, #8]
    11c4:	ldrb	w23, [x25], #1
    11c8:	mov	w0, w23
    11cc:	bl	0 <isalpha>
    11d0:	cmp	w23, #0x5f
    11d4:	b.eq	11c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1cc>  // b.none
    11d8:	sub	w8, w23, #0x30
    11dc:	cbnz	w0, 11c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1cc>
    11e0:	cmp	w8, #0xa
    11e4:	b.cc	11c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x1cc>  // b.lo, b.ul, b.last
    11e8:	sub	x8, x25, #0x1
    11ec:	sub	x2, x8, x21
    11f0:	mov	x1, x21
    11f4:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11f8:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    11fc:	add	x8, x8, #0x0
    1200:	add	x9, x9, #0x0
    1204:	cmp	w22, #0x4c
    1208:	mov	w10, #0x6                   	// #6
    120c:	csel	x8, x9, x8, eq  // eq = none
    1210:	cinc	x9, x10, ne  // ne = any
    1214:	stp	x8, x9, [sp, #48]
    1218:	cbz	x2, 1238 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x244>
    121c:	add	x0, x19, #0x90
    1220:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    1224:	cmn	w0, #0x1
    1228:	b.eq	12c8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2d4>  // b.none
    122c:	ldr	w8, [x19, #152]
    1230:	sxtw	x9, w0
    1234:	b	12d0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x2dc>
    1238:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    123c:	mov	w8, #0x503                 	// #1283
    1240:	add	x9, x9, #0x0
    1244:	add	x10, sp, #0x30
    1248:	sturh	w8, [x29, #-8]
    124c:	stp	x9, x10, [x29, #-24]
    1250:	str	x21, [sp, #24]
    1254:	b	1754 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x760>
    1258:	ldr	x8, [x19, #184]
    125c:	ldur	x8, [x8, #-8]
    1260:	ldp	x9, x8, [x8]
    1264:	cmp	x9, x8
    1268:	b.eq	14d4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4e0>  // b.none
    126c:	ldur	w8, [x8, #-16]
    1270:	orr	w8, w8, #0x2
    1274:	cmp	w8, #0x4e
    1278:	b.ne	17c0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7cc>  // b.any
    127c:	mov	x0, x19
    1280:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1284:	tbz	w0, #0, 152c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x538>
    1288:	ldr	x8, [x19, #184]
    128c:	ldur	x8, [x8, #-8]
    1290:	ldr	x9, [x8, #8]
    1294:	sub	x9, x9, #0x10
    1298:	str	x9, [x8, #8]
    129c:	tbz	w28, #0, 164c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x658>
    12a0:	mov	x0, x19
    12a4:	ldp	x20, x19, [sp, #176]
    12a8:	ldp	x22, x21, [sp, #160]
    12ac:	ldp	x24, x23, [sp, #144]
    12b0:	ldp	x26, x25, [sp, #128]
    12b4:	ldp	x28, x27, [sp, #112]
    12b8:	ldp	x29, x30, [sp, #96]
    12bc:	mov	w1, wzr
    12c0:	add	sp, sp, #0xc0
    12c4:	b	4c0 <_ZN4llvm7TGLexer8LexTokenEb>
    12c8:	ldr	w8, [x19, #152]
    12cc:	mov	x9, x8
    12d0:	ldr	x10, [x19, #184]
    12d4:	cmp	x9, x8
    12d8:	ldr	x20, [x19, #32]
    12dc:	cset	w9, ne  // ne = any
    12e0:	ldur	x25, [x10, #-8]
    12e4:	cmp	w22, #0x4d
    12e8:	cset	w11, eq  // eq = none
    12ec:	mov	w12, #0x4c                  	// #76
    12f0:	mov	x8, x25
    12f4:	mov	x26, x25
    12f8:	ldr	x27, [x8, #8]!
    12fc:	ldr	x10, [x26, #16]!
    1300:	csel	w21, w12, w22, eq  // eq = none
    1304:	eor	w24, w11, w9
    1308:	cmp	x27, x10
    130c:	b.eq	1364 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x370>  // b.none
    1310:	str	w21, [x27]
    1314:	strb	w24, [x27, #4]
    1318:	ldurb	w9, [x29, #-22]
    131c:	ldurh	w10, [x29, #-24]
    1320:	str	x20, [x27, #8]
    1324:	strb	w9, [x27, #7]
    1328:	sturh	w10, [x27, #5]
    132c:	ldr	x9, [x8]
    1330:	add	x9, x9, #0x10
    1334:	mov	x0, x19
    1338:	str	x9, [x8]
    133c:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1340:	tbz	w0, #0, 15bc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5c8>
    1344:	tbz	w28, #0, 1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    1348:	cbnz	w24, 14b4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4c0>
    134c:	mov	w1, #0x1                   	// #1
    1350:	mov	x0, x19
    1354:	mov	w21, #0x1                   	// #1
    1358:	bl	2c14 <_ZN4llvm7TGLexer14prepSkipRegionEb>
    135c:	tbnz	w0, #0, 14b4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4c0>
    1360:	b	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    1364:	ldr	x22, [x25]
    1368:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    136c:	str	w28, [sp, #20]
    1370:	sub	x8, x27, x22
    1374:	cmp	x8, x9
    1378:	b.eq	17b4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7c0>  // b.none
    137c:	asr	x28, x8, #4
    1380:	cmp	x8, #0x0
    1384:	csinc	x8, x28, xzr, ne  // ne = any
    1388:	adds	x8, x8, x28
    138c:	lsr	x10, x8, #59
    1390:	cset	w9, cs  // cs = hs, nlast
    1394:	cmp	x10, #0x0
    1398:	cset	w10, ne  // ne = any
    139c:	orr	w9, w9, w10
    13a0:	cmp	w9, #0x0
    13a4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    13a8:	csel	x8, x9, x8, ne  // ne = any
    13ac:	str	x8, [sp, #8]
    13b0:	cbz	x8, 153c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x548>
    13b4:	lsl	x0, x8, #4
    13b8:	bl	0 <_Znwm>
    13bc:	mov	x23, x0
    13c0:	b	1540 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x54c>
    13c4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    13c8:	mov	x2, xzr
    13cc:	add	x1, x1, #0x0
    13d0:	b	11f4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x200>
    13d4:	mov	w0, w22
    13d8:	bl	0 <isalpha>
    13dc:	mov	w23, w22
    13e0:	cbz	w0, 1620 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x62c>
    13e4:	mov	w0, w23
    13e8:	bl	0 <isalpha>
    13ec:	cmp	w22, #0x5f
    13f0:	b.eq	1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>  // b.none
    13f4:	cbnz	w0, 1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>
    13f8:	sub	w8, w23, #0x30
    13fc:	cmp	w8, #0x9
    1400:	mov	x8, x21
    1404:	b.ls	1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>  // b.plast
    1408:	subs	x2, x8, x21
    140c:	stp	x21, x2, [sp, #24]
    1410:	b.ne	1450 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x45c>  // b.any
    1414:	b	162c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x638>
    1418:	str	x24, [x19, #8]
    141c:	ldrb	w22, [x24], #1
    1420:	mov	w0, w22
    1424:	bl	0 <isalpha>
    1428:	cmp	w22, #0x5f
    142c:	b.eq	1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>  // b.none
    1430:	sub	w8, w22, #0x30
    1434:	cbnz	w0, 1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>
    1438:	cmp	w8, #0xa
    143c:	b.cc	1418 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x424>  // b.lo, b.ul, b.last
    1440:	sub	x8, x24, #0x1
    1444:	subs	x2, x8, x21
    1448:	stp	x21, x2, [sp, #24]
    144c:	b.eq	162c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x638>  // b.none
    1450:	sub	x8, x29, #0x18
    1454:	add	x0, x19, #0x90
    1458:	mov	w9, #0x1                   	// #1
    145c:	add	x3, x8, #0x10
    1460:	mov	x1, x21
    1464:	stp	x21, x2, [x29, #-24]
    1468:	stur	w9, [x29, #-8]
    146c:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1470:	tbnz	w1, #0, 14a4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4b0>
    1474:	ldr	x8, [x19, #32]
    1478:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    147c:	add	x9, x9, #0x0
    1480:	add	x10, sp, #0x18
    1484:	mov	w11, #0x503                 	// #1283
    1488:	add	x0, sp, #0x30
    148c:	sub	x2, x29, #0x18
    1490:	mov	w1, #0x1                   	// #1
    1494:	stp	x9, x10, [x29, #-24]
    1498:	str	x8, [sp, #48]
    149c:	sturh	w11, [x29, #-8]
    14a0:	bl	0 <_ZN4llvm12PrintWarningENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    14a4:	mov	x0, x19
    14a8:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    14ac:	tbz	w0, #0, 15fc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x608>
    14b0:	tbz	w28, #0, 17cc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7d8>
    14b4:	mov	x0, x19
    14b8:	mov	w1, wzr
    14bc:	bl	4c0 <_ZN4llvm7TGLexer8LexTokenEb>
    14c0:	mov	w21, w0
    14c4:	b	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    14c8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    14cc:	add	x8, x8, #0x0
    14d0:	b	14dc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x4e8>
    14d4:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    14d8:	add	x8, x8, #0x0
    14dc:	mov	w9, #0x103                 	// #259
    14e0:	stp	x8, xzr, [x29, #-24]
    14e4:	sturh	w9, [x29, #-8]
    14e8:	str	x23, [sp, #24]
    14ec:	b	1754 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x760>
    14f0:	ldur	x19, [x9, #-8]
    14f4:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    14f8:	add	x8, x8, #0x0
    14fc:	mov	w20, #0x103                 	// #259
    1500:	sub	x1, x29, #0x18
    1504:	mov	x0, x23
    1508:	stp	x8, xzr, [x29, #-24]
    150c:	sturh	w20, [x29, #-8]
    1510:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1514:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1518:	add	x8, x8, #0x0
    151c:	sturh	w20, [x29, #-8]
    1520:	stp	x8, xzr, [x29, #-24]
    1524:	str	x19, [sp, #24]
    1528:	b	1754 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x760>
    152c:	ldr	x8, [x19, #8]
    1530:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1534:	add	x9, x9, #0x0
    1538:	b	1744 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x750>
    153c:	mov	x23, xzr
    1540:	add	x8, x23, x28, lsl #4
    1544:	str	w21, [x8]
    1548:	strb	w24, [x8, #4]
    154c:	ldurb	w9, [x29, #-22]
    1550:	ldurh	w10, [x29, #-24]
    1554:	cmp	x27, x22
    1558:	str	x20, [x8, #8]
    155c:	strb	w9, [x8, #7]
    1560:	sturh	w10, [x8, #5]
    1564:	mov	x8, x23
    1568:	b.eq	1588 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x594>  // b.none
    156c:	mov	x8, x23
    1570:	mov	x9, x22
    1574:	ldr	q0, [x9], #16
    1578:	cmp	x27, x9
    157c:	str	q0, [x8]
    1580:	add	x8, x8, #0x10
    1584:	b.ne	1574 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x580>  // b.any
    1588:	ldr	w28, [sp, #20]
    158c:	add	x20, x8, #0x10
    1590:	cbz	x22, 159c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x5a8>
    1594:	mov	x0, x22
    1598:	bl	0 <_ZdlPv>
    159c:	stp	x23, x20, [x25]
    15a0:	ldr	x8, [sp, #8]
    15a4:	add	x9, x23, x8, lsl #4
    15a8:	mov	x8, x26
    15ac:	mov	x0, x19
    15b0:	str	x9, [x8]
    15b4:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    15b8:	tbnz	w0, #0, 1344 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x350>
    15bc:	ldr	x8, [x19, #8]
    15c0:	mov	w9, #0x503                 	// #1283
    15c4:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    15c8:	adrp	x13, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    15cc:	add	x10, x10, #0x0
    15d0:	add	x11, sp, #0x30
    15d4:	add	x12, sp, #0x18
    15d8:	add	x13, x13, #0x0
    15dc:	strh	w9, [sp, #40]
    15e0:	mov	w9, #0x302                 	// #770
    15e4:	stp	x10, x11, [sp, #24]
    15e8:	stp	x12, x13, [x29, #-24]
    15ec:	sturh	w9, [x29, #-8]
    15f0:	stur	x8, [x29, #-32]
    15f4:	sub	x0, x29, #0x20
    15f8:	b	1758 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x764>
    15fc:	ldr	x8, [x19, #8]
    1600:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1604:	add	x9, x9, #0x0
    1608:	stp	x9, xzr, [x29, #-24]
    160c:	mov	w9, #0x103                 	// #259
    1610:	sturh	w9, [x29, #-8]
    1614:	str	x8, [sp, #48]
    1618:	add	x0, sp, #0x30
    161c:	b	1758 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x764>
    1620:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1624:	add	x8, x8, #0x0
    1628:	stp	x8, xzr, [sp, #24]
    162c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1630:	add	x8, x8, #0x0
    1634:	mov	w9, #0x103                 	// #259
    1638:	stp	x8, xzr, [x29, #-24]
    163c:	sturh	w9, [x29, #-8]
    1640:	str	x21, [sp, #48]
    1644:	add	x0, sp, #0x30
    1648:	b	1758 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x764>
    164c:	mov	w21, #0x4f                  	// #79
    1650:	b	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    1654:	ldr	x21, [x24]
    1658:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
    165c:	str	w28, [sp, #20]
    1660:	sub	x8, x26, x21
    1664:	cmp	x8, x9
    1668:	b.eq	17b4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7c0>  // b.none
    166c:	asr	x28, x8, #4
    1670:	cmp	x8, #0x0
    1674:	csinc	x8, x28, xzr, ne  // ne = any
    1678:	adds	x8, x8, x28
    167c:	lsr	x10, x8, #59
    1680:	cset	w9, cs  // cs = hs, nlast
    1684:	cmp	x10, #0x0
    1688:	cset	w10, ne  // ne = any
    168c:	orr	w9, w9, w10
    1690:	cmp	w9, #0x0
    1694:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
    1698:	csel	x27, x9, x8, ne  // ne = any
    169c:	cbz	x27, 16b8 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x6c4>
    16a0:	lsl	x0, x27, #4
    16a4:	bl	0 <_Znwm>
    16a8:	mov	x22, x0
    16ac:	b	16bc <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x6c8>
    16b0:	mov	w21, #0x4e                  	// #78
    16b4:	b	1768 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x774>
    16b8:	mov	x22, xzr
    16bc:	add	x8, x22, x28, lsl #4
    16c0:	mov	w9, #0x4e                  	// #78
    16c4:	str	w9, [x8]
    16c8:	strb	w20, [x8, #4]
    16cc:	ldurb	w9, [x29, #-22]
    16d0:	ldurh	w10, [x29, #-24]
    16d4:	cmp	x26, x21
    16d8:	str	x23, [x8, #8]
    16dc:	strb	w9, [x8, #7]
    16e0:	sturh	w10, [x8, #5]
    16e4:	mov	x8, x22
    16e8:	b.eq	1708 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x714>  // b.none
    16ec:	mov	x8, x22
    16f0:	mov	x9, x21
    16f4:	ldr	q0, [x9], #16
    16f8:	cmp	x26, x9
    16fc:	str	q0, [x8]
    1700:	add	x8, x8, #0x10
    1704:	b.ne	16f4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x700>  // b.any
    1708:	ldr	w28, [sp, #20]
    170c:	add	x20, x8, #0x10
    1710:	cbz	x21, 171c <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x728>
    1714:	mov	x0, x21
    1718:	bl	0 <_ZdlPv>
    171c:	add	x9, x22, x27, lsl #4
    1720:	mov	x8, x25
    1724:	stp	x22, x20, [x24]
    1728:	mov	x0, x19
    172c:	str	x9, [x8]
    1730:	bl	2ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>
    1734:	tbnz	w0, #0, 1100 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x10c>
    1738:	ldr	x8, [x19, #8]
    173c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1740:	add	x9, x9, #0x0
    1744:	stp	x9, xzr, [x29, #-24]
    1748:	mov	w9, #0x103                 	// #259
    174c:	sturh	w9, [x29, #-8]
    1750:	str	x8, [sp, #24]
    1754:	add	x0, sp, #0x18
    1758:	sub	x2, x29, #0x18
    175c:	mov	w1, #0x1                   	// #1
    1760:	mov	w21, #0x1                   	// #1
    1764:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1768:	mov	w0, w21
    176c:	ldp	x20, x19, [sp, #176]
    1770:	ldp	x22, x21, [sp, #160]
    1774:	ldp	x24, x23, [sp, #144]
    1778:	ldp	x26, x25, [sp, #128]
    177c:	ldp	x28, x27, [sp, #112]
    1780:	ldp	x29, x30, [sp, #96]
    1784:	add	sp, sp, #0xc0
    1788:	ret
    178c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1790:	add	x8, x8, #0x0
    1794:	b	17a0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7ac>
    1798:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    179c:	add	x8, x8, #0x0
    17a0:	mov	w9, #0x103                 	// #259
    17a4:	sub	x0, x29, #0x18
    17a8:	stp	x8, xzr, [x29, #-24]
    17ac:	sturh	w9, [x29, #-8]
    17b0:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>
    17b4:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    17b8:	add	x0, x0, #0x0
    17bc:	bl	0 <_ZSt20__throw_length_errorPKc>
    17c0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    17c4:	add	x8, x8, #0x0
    17c8:	b	17a0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7ac>
    17cc:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    17d0:	add	x8, x8, #0x0
    17d4:	b	17a0 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb+0x7ac>

00000000000017d8 <_ZN4llvm7TGLexer15SkipBCPLCommentEv>:
    17d8:	ldr	x8, [x0, #8]
    17dc:	b	17f0 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x18>
    17e0:	ldp	x9, x10, [x0, #16]
    17e4:	add	x9, x9, x10
    17e8:	cmp	x8, x9
    17ec:	b.eq	1810 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x38>  // b.none
    17f0:	add	x8, x8, #0x1
    17f4:	str	x8, [x0, #8]
    17f8:	ldrb	w9, [x8]
    17fc:	cbz	w9, 17e0 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x8>
    1800:	cmp	w9, #0xa
    1804:	b.eq	1810 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x38>  // b.none
    1808:	cmp	w9, #0xd
    180c:	b.ne	17f0 <_ZN4llvm7TGLexer15SkipBCPLCommentEv+0x18>  // b.any
    1810:	ret

0000000000001814 <_ZN4llvm7TGLexer12SkipCCommentEv>:
    1814:	sub	sp, sp, #0x30
    1818:	stp	x29, x30, [sp, #32]
    181c:	add	x29, sp, #0x20
    1820:	ldr	x9, [x0, #8]
    1824:	mov	w8, #0x1                   	// #1
    1828:	add	x10, x9, #0x1
    182c:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1830:	add	x9, x9, #0x0
    1834:	str	x10, [x0, #8]
    1838:	b	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    183c:	ldp	x12, x13, [x0, #16]
    1840:	add	x12, x12, x13
    1844:	cmp	x11, x12
    1848:	b.eq	18e4 <_ZN4llvm7TGLexer12SkipCCommentEv+0xd0>  // b.none
    184c:	mov	x11, x10
    1850:	add	x10, x10, #0x1
    1854:	str	x10, [x0, #8]
    1858:	ldrb	w12, [x11]
    185c:	cmp	w12, #0x2f
    1860:	b.hi	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.pmore
    1864:	adr	x13, 183c <_ZN4llvm7TGLexer12SkipCCommentEv+0x28>
    1868:	ldrb	w14, [x9, x12]
    186c:	add	x13, x13, x14, lsl #2
    1870:	br	x13
    1874:	ldrb	w13, [x10]
    1878:	cmp	w13, #0xd
    187c:	b.eq	1888 <_ZN4llvm7TGLexer12SkipCCommentEv+0x74>  // b.none
    1880:	cmp	w13, #0xa
    1884:	b.ne	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    1888:	cmp	w13, w12
    188c:	b.eq	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.none
    1890:	add	x10, x11, #0x2
    1894:	str	x10, [x0, #8]
    1898:	b	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    189c:	ldrb	w12, [x10]
    18a0:	cmp	w12, #0x2a
    18a4:	b.ne	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    18a8:	add	x10, x11, #0x2
    18ac:	str	x10, [x0, #8]
    18b0:	add	w8, w8, #0x1
    18b4:	b	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>
    18b8:	ldrb	w12, [x10]
    18bc:	cmp	w12, #0x2f
    18c0:	b.ne	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    18c4:	add	x10, x11, #0x2
    18c8:	subs	w8, w8, #0x1
    18cc:	str	x10, [x0, #8]
    18d0:	b.ne	184c <_ZN4llvm7TGLexer12SkipCCommentEv+0x38>  // b.any
    18d4:	mov	w0, wzr
    18d8:	ldp	x29, x30, [sp, #32]
    18dc:	add	sp, sp, #0x30
    18e0:	ret
    18e4:	str	x11, [x0, #8]
    18e8:	ldr	x0, [x0, #32]
    18ec:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    18f0:	add	x8, x8, #0x0
    18f4:	stp	x8, xzr, [sp, #8]
    18f8:	mov	w8, #0x103                 	// #259
    18fc:	add	x1, sp, #0x8
    1900:	strh	w8, [sp, #24]
    1904:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    1908:	mov	w0, #0x1                   	// #1
    190c:	ldp	x29, x30, [sp, #32]
    1910:	add	sp, sp, #0x30
    1914:	ret

0000000000001918 <_ZN4llvm7TGLexer9LexNumberEv>:
    1918:	sub	sp, sp, #0x50
    191c:	stp	x29, x30, [sp, #32]
    1920:	stp	x22, x21, [sp, #48]
    1924:	stp	x20, x19, [sp, #64]
    1928:	add	x29, sp, #0x20
    192c:	ldr	x20, [x0, #8]
    1930:	mov	x19, x0
    1934:	ldurb	w8, [x20, #-1]
    1938:	ldrb	w9, [x20]
    193c:	cmp	w8, #0x30
    1940:	b.ne	199c <_ZN4llvm7TGLexer9LexNumberEv+0x84>  // b.any
    1944:	cmp	w9, #0x78
    1948:	b.eq	19f8 <_ZN4llvm7TGLexer9LexNumberEv+0xe0>  // b.none
    194c:	cmp	w9, #0x62
    1950:	b.ne	199c <_ZN4llvm7TGLexer9LexNumberEv+0x84>  // b.any
    1954:	mov	x8, xzr
    1958:	add	x9, x20, #0x1
    195c:	add	x10, x9, x8
    1960:	str	x10, [x19, #8]
    1964:	ldrb	w10, [x9, x8]
    1968:	add	x8, x8, #0x1
    196c:	orr	w10, w10, #0x1
    1970:	cmp	w10, #0x31
    1974:	b.eq	195c <_ZN4llvm7TGLexer9LexNumberEv+0x44>  // b.none
    1978:	cmp	x8, #0x1
    197c:	b.ne	1ab8 <_ZN4llvm7TGLexer9LexNumberEv+0x1a0>  // b.any
    1980:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1984:	add	x9, x9, #0x0
    1988:	mov	w10, #0x103                 	// #259
    198c:	sub	x8, x20, #0x1
    1990:	stp	x9, xzr, [sp]
    1994:	strh	w10, [sp, #16]
    1998:	b	1a94 <_ZN4llvm7TGLexer9LexNumberEv+0x17c>
    199c:	sub	w9, w9, #0x30
    19a0:	cmp	w9, #0x9
    19a4:	b.hi	19c4 <_ZN4llvm7TGLexer9LexNumberEv+0xac>  // b.pmore
    19a8:	add	x8, x20, #0x1
    19ac:	str	x8, [x19, #8]
    19b0:	ldrb	w9, [x8], #1
    19b4:	sub	w9, w9, #0x30
    19b8:	cmp	w9, #0xa
    19bc:	b.cc	19ac <_ZN4llvm7TGLexer9LexNumberEv+0x94>  // b.lo, b.ul, b.last
    19c0:	b	19dc <_ZN4llvm7TGLexer9LexNumberEv+0xc4>
    19c4:	cmp	w8, #0x2d
    19c8:	b.eq	1ab0 <_ZN4llvm7TGLexer9LexNumberEv+0x198>  // b.none
    19cc:	cmp	w8, #0x2b
    19d0:	b.ne	19dc <_ZN4llvm7TGLexer9LexNumberEv+0xc4>  // b.any
    19d4:	mov	w19, #0x3                   	// #3
    19d8:	b	1ad0 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    19dc:	ldr	x0, [x19, #32]
    19e0:	mov	w2, #0xa                   	// #10
    19e4:	mov	x1, xzr
    19e8:	bl	0 <strtoll>
    19ec:	str	x0, [x19, #80]
    19f0:	mov	w19, #0x46                  	// #70
    19f4:	b	1ad0 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    19f8:	mov	x21, xzr
    19fc:	add	x22, x20, #0x1
    1a00:	add	x8, x22, x21
    1a04:	str	x8, [x19, #8]
    1a08:	ldrb	w0, [x22, x21]
    1a0c:	bl	0 <isxdigit>
    1a10:	add	x21, x21, #0x1
    1a14:	cbnz	w0, 1a00 <_ZN4llvm7TGLexer9LexNumberEv+0xe8>
    1a18:	cmp	x21, #0x1
    1a1c:	b.eq	1a7c <_ZN4llvm7TGLexer9LexNumberEv+0x164>  // b.none
    1a20:	add	x20, x20, #0x1
    1a24:	bl	0 <__errno_location>
    1a28:	mov	x21, x0
    1a2c:	str	wzr, [x0]
    1a30:	mov	w2, #0x10                  	// #16
    1a34:	mov	x0, x20
    1a38:	mov	x1, xzr
    1a3c:	bl	0 <strtoll>
    1a40:	str	x0, [x19, #80]
    1a44:	ldr	w8, [x21]
    1a48:	cmp	w8, #0x22
    1a4c:	b.ne	1a74 <_ZN4llvm7TGLexer9LexNumberEv+0x15c>  // b.any
    1a50:	mov	w2, #0x10                  	// #16
    1a54:	mov	x0, x20
    1a58:	mov	x1, xzr
    1a5c:	str	wzr, [x21]
    1a60:	bl	0 <strtoull>
    1a64:	str	x0, [x19, #80]
    1a68:	ldr	w8, [x21]
    1a6c:	cmp	w8, #0x22
    1a70:	b.eq	1ae8 <_ZN4llvm7TGLexer9LexNumberEv+0x1d0>  // b.none
    1a74:	cmp	w8, #0x16
    1a78:	b.ne	19f0 <_ZN4llvm7TGLexer9LexNumberEv+0xd8>  // b.any
    1a7c:	ldr	x8, [x19, #32]
    1a80:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1a84:	add	x9, x9, #0x0
    1a88:	stp	x9, xzr, [sp]
    1a8c:	mov	w9, #0x103                 	// #259
    1a90:	strh	w9, [sp, #16]
    1a94:	sub	x0, x29, #0x8
    1a98:	mov	x2, sp
    1a9c:	mov	w1, #0x1                   	// #1
    1aa0:	stur	x8, [x29, #-8]
    1aa4:	mov	w19, #0x1                   	// #1
    1aa8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1aac:	b	1ad0 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1ab0:	mov	w19, #0x2                   	// #2
    1ab4:	b	1ad0 <_ZN4llvm7TGLexer9LexNumberEv+0x1b8>
    1ab8:	add	x0, x20, #0x1
    1abc:	mov	w2, #0x2                   	// #2
    1ac0:	mov	x1, xzr
    1ac4:	bl	0 <strtoll>
    1ac8:	str	x0, [x19, #80]
    1acc:	mov	w19, #0x47                  	// #71
    1ad0:	mov	w0, w19
    1ad4:	ldp	x20, x19, [sp, #64]
    1ad8:	ldp	x22, x21, [sp, #48]
    1adc:	ldp	x29, x30, [sp, #32]
    1ae0:	add	sp, sp, #0x50
    1ae4:	ret
    1ae8:	ldr	x8, [x19, #32]
    1aec:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1af0:	add	x9, x9, #0x0
    1af4:	b	1a88 <_ZN4llvm7TGLexer9LexNumberEv+0x170>

0000000000001af8 <_ZN4llvm7TGLexer9LexStringEv>:
    1af8:	sub	sp, sp, #0x80
    1afc:	stp	x29, x30, [sp, #32]
    1b00:	stp	x28, x27, [sp, #48]
    1b04:	stp	x26, x25, [sp, #64]
    1b08:	stp	x24, x23, [sp, #80]
    1b0c:	stp	x22, x21, [sp, #96]
    1b10:	stp	x20, x19, [sp, #112]
    1b14:	add	x29, sp, #0x20
    1b18:	ldr	x2, [x0, #56]
    1b1c:	ldr	x22, [x0, #8]
    1b20:	add	x20, x0, #0x30
    1b24:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1b28:	mov	x19, x0
    1b2c:	add	x3, x3, #0x0
    1b30:	mov	x0, x20
    1b34:	mov	x1, xzr
    1b38:	mov	x4, xzr
    1b3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1b40:	adrp	x24, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1b44:	adrp	x27, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1b48:	add	x23, x19, #0x40
    1b4c:	add	x24, x24, #0x0
    1b50:	mov	w26, #0xa                   	// #10
    1b54:	add	x27, x27, #0x0
    1b58:	ldr	x8, [x19, #8]
    1b5c:	ldrb	w10, [x8]
    1b60:	cmp	w10, #0x22
    1b64:	b.hi	1b94 <_ZN4llvm7TGLexer9LexStringEv+0x9c>  // b.pmore
    1b68:	adr	x9, 1b78 <_ZN4llvm7TGLexer9LexStringEv+0x80>
    1b6c:	ldrb	w11, [x27, x10]
    1b70:	add	x9, x9, x11, lsl #2
    1b74:	br	x9
    1b78:	ldp	x9, x10, [x19, #16]
    1b7c:	add	x9, x9, x10
    1b80:	cmp	x8, x9
    1b84:	b.eq	1d8c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
    1b88:	add	x9, x8, #0x1
    1b8c:	str	x9, [x19, #8]
    1b90:	b	1bcc <_ZN4llvm7TGLexer9LexStringEv+0xd4>
    1b94:	add	x9, x8, #0x1
    1b98:	cmp	w10, #0x5c
    1b9c:	str	x9, [x19, #8]
    1ba0:	b.ne	1bcc <_ZN4llvm7TGLexer9LexStringEv+0xd4>  // b.any
    1ba4:	ldrb	w10, [x9]
    1ba8:	cmp	w10, #0x5b
    1bac:	b.le	1c2c <_ZN4llvm7TGLexer9LexStringEv+0x134>
    1bb0:	cmp	w10, #0x74
    1bb4:	b.eq	1c70 <_ZN4llvm7TGLexer9LexStringEv+0x178>  // b.none
    1bb8:	cmp	w10, #0x6e
    1bbc:	b.eq	1cb4 <_ZN4llvm7TGLexer9LexStringEv+0x1bc>  // b.none
    1bc0:	cmp	w10, #0x5c
    1bc4:	b.eq	1c44 <_ZN4llvm7TGLexer9LexStringEv+0x14c>  // b.none
    1bc8:	b	1d70 <_ZN4llvm7TGLexer9LexStringEv+0x278>
    1bcc:	ldp	x9, x21, [x19, #48]
    1bd0:	ldrb	w25, [x8]
    1bd4:	cmp	x9, x23
    1bd8:	add	x28, x21, #0x1
    1bdc:	b.eq	1c60 <_ZN4llvm7TGLexer9LexStringEv+0x168>  // b.none
    1be0:	ldr	x8, [x19, #64]
    1be4:	cmp	x28, x8
    1be8:	b.ls	1c08 <_ZN4llvm7TGLexer9LexStringEv+0x110>  // b.plast
    1bec:	mov	w4, #0x1                   	// #1
    1bf0:	mov	x0, x20
    1bf4:	mov	x1, x21
    1bf8:	mov	x2, xzr
    1bfc:	mov	x3, xzr
    1c00:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1c04:	ldr	x9, [x20]
    1c08:	strb	w25, [x9, x21]
    1c0c:	ldr	x8, [x19, #48]
    1c10:	str	x28, [x19, #56]
    1c14:	strb	wzr, [x8, x28]
    1c18:	ldr	x8, [x19, #8]
    1c1c:	ldrb	w10, [x8]
    1c20:	cmp	w10, #0x22
    1c24:	b.ls	1b68 <_ZN4llvm7TGLexer9LexStringEv+0x70>  // b.plast
    1c28:	b	1b94 <_ZN4llvm7TGLexer9LexStringEv+0x9c>
    1c2c:	cmp	w10, #0x27
    1c30:	b.hi	1d70 <_ZN4llvm7TGLexer9LexStringEv+0x278>  // b.pmore
    1c34:	adr	x11, 1c44 <_ZN4llvm7TGLexer9LexStringEv+0x14c>
    1c38:	ldrb	w12, [x24, x10]
    1c3c:	add	x11, x11, x12, lsl #2
    1c40:	br	x11
    1c44:	add	x10, x8, #0x2
    1c48:	ldp	x9, x21, [x19, #48]
    1c4c:	str	x10, [x19, #8]
    1c50:	ldrb	w25, [x8, #1]
    1c54:	cmp	x9, x23
    1c58:	add	x28, x21, #0x1
    1c5c:	b.ne	1be0 <_ZN4llvm7TGLexer9LexStringEv+0xe8>  // b.any
    1c60:	mov	w8, #0xf                   	// #15
    1c64:	cmp	x28, x8
    1c68:	b.ls	1c08 <_ZN4llvm7TGLexer9LexStringEv+0x110>  // b.plast
    1c6c:	b	1bec <_ZN4llvm7TGLexer9LexStringEv+0xf4>
    1c70:	ldp	x8, x21, [x19, #48]
    1c74:	cmp	x8, x23
    1c78:	add	x28, x21, #0x1
    1c7c:	b.eq	1d18 <_ZN4llvm7TGLexer9LexStringEv+0x220>  // b.none
    1c80:	ldr	x9, [x19, #64]
    1c84:	cmp	x28, x9
    1c88:	b.ls	1ca8 <_ZN4llvm7TGLexer9LexStringEv+0x1b0>  // b.plast
    1c8c:	mov	w4, #0x1                   	// #1
    1c90:	mov	x0, x20
    1c94:	mov	x1, x21
    1c98:	mov	x2, xzr
    1c9c:	mov	x3, xzr
    1ca0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1ca4:	ldr	x8, [x20]
    1ca8:	mov	w9, #0x9                   	// #9
    1cac:	strb	w9, [x8, x21]
    1cb0:	b	1cf0 <_ZN4llvm7TGLexer9LexStringEv+0x1f8>
    1cb4:	ldp	x8, x21, [x19, #48]
    1cb8:	cmp	x8, x23
    1cbc:	add	x28, x21, #0x1
    1cc0:	b.eq	1d28 <_ZN4llvm7TGLexer9LexStringEv+0x230>  // b.none
    1cc4:	ldr	x9, [x19, #64]
    1cc8:	cmp	x28, x9
    1ccc:	b.ls	1cec <_ZN4llvm7TGLexer9LexStringEv+0x1f4>  // b.plast
    1cd0:	mov	w4, #0x1                   	// #1
    1cd4:	mov	x0, x20
    1cd8:	mov	x1, x21
    1cdc:	mov	x2, xzr
    1ce0:	mov	x3, xzr
    1ce4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    1ce8:	ldr	x8, [x20]
    1cec:	strb	w26, [x8, x21]
    1cf0:	ldr	x8, [x19, #48]
    1cf4:	str	x28, [x19, #56]
    1cf8:	strb	wzr, [x8, x28]
    1cfc:	ldr	x8, [x19, #8]
    1d00:	add	x8, x8, #0x1
    1d04:	str	x8, [x19, #8]
    1d08:	ldrb	w10, [x8]
    1d0c:	cmp	w10, #0x22
    1d10:	b.ls	1b68 <_ZN4llvm7TGLexer9LexStringEv+0x70>  // b.plast
    1d14:	b	1b94 <_ZN4llvm7TGLexer9LexStringEv+0x9c>
    1d18:	mov	w9, #0xf                   	// #15
    1d1c:	cmp	x28, x9
    1d20:	b.hi	1c8c <_ZN4llvm7TGLexer9LexStringEv+0x194>  // b.pmore
    1d24:	b	1ca8 <_ZN4llvm7TGLexer9LexStringEv+0x1b0>
    1d28:	mov	w9, #0xf                   	// #15
    1d2c:	cmp	x28, x9
    1d30:	b.hi	1cd0 <_ZN4llvm7TGLexer9LexStringEv+0x1d8>  // b.pmore
    1d34:	b	1cec <_ZN4llvm7TGLexer9LexStringEv+0x1f4>
    1d38:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1d3c:	add	x8, x8, #0x0
    1d40:	b	1d94 <_ZN4llvm7TGLexer9LexStringEv+0x29c>
    1d44:	add	x8, x8, #0x1
    1d48:	str	x8, [x19, #8]
    1d4c:	mov	w19, #0x49                  	// #73
    1d50:	b	1db8 <_ZN4llvm7TGLexer9LexStringEv+0x2c0>
    1d54:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1d58:	add	x8, x8, #0x0
    1d5c:	b	1d78 <_ZN4llvm7TGLexer9LexStringEv+0x280>
    1d60:	ldp	x8, x10, [x19, #16]
    1d64:	add	x8, x8, x10
    1d68:	cmp	x9, x8
    1d6c:	b.eq	1d8c <_ZN4llvm7TGLexer9LexStringEv+0x294>  // b.none
    1d70:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1d74:	add	x8, x8, #0x0
    1d78:	mov	w10, #0x103                 	// #259
    1d7c:	stp	x8, xzr, [sp]
    1d80:	strh	w10, [sp, #16]
    1d84:	stur	x9, [x29, #-8]
    1d88:	b	1da4 <_ZN4llvm7TGLexer9LexStringEv+0x2ac>
    1d8c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1d90:	add	x8, x8, #0x0
    1d94:	mov	w9, #0x103                 	// #259
    1d98:	stp	x8, xzr, [sp]
    1d9c:	strh	w9, [sp, #16]
    1da0:	stur	x22, [x29, #-8]
    1da4:	sub	x0, x29, #0x8
    1da8:	mov	x2, sp
    1dac:	mov	w1, #0x1                   	// #1
    1db0:	mov	w19, #0x1                   	// #1
    1db4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1db8:	mov	w0, w19
    1dbc:	ldp	x20, x19, [sp, #112]
    1dc0:	ldp	x22, x21, [sp, #96]
    1dc4:	ldp	x24, x23, [sp, #80]
    1dc8:	ldp	x26, x25, [sp, #64]
    1dcc:	ldp	x28, x27, [sp, #48]
    1dd0:	ldp	x29, x30, [sp, #32]
    1dd4:	add	sp, sp, #0x80
    1dd8:	ret

0000000000001ddc <_ZN4llvm7TGLexer10LexVarNameEv>:
    1ddc:	sub	sp, sp, #0x50
    1de0:	stp	x29, x30, [sp, #32]
    1de4:	stp	x22, x21, [sp, #48]
    1de8:	stp	x20, x19, [sp, #64]
    1dec:	add	x29, sp, #0x20
    1df0:	ldr	x19, [x0, #8]
    1df4:	mov	x20, x0
    1df8:	ldrb	w21, [x19]
    1dfc:	mov	w0, w21
    1e00:	bl	0 <isalpha>
    1e04:	cmp	w21, #0x5f
    1e08:	b.eq	1e44 <_ZN4llvm7TGLexer10LexVarNameEv+0x68>  // b.none
    1e0c:	cbnz	w0, 1e44 <_ZN4llvm7TGLexer10LexVarNameEv+0x68>
    1e10:	ldr	x8, [x20, #32]
    1e14:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1e18:	add	x9, x9, #0x0
    1e1c:	stp	x9, xzr, [sp]
    1e20:	mov	w9, #0x103                 	// #259
    1e24:	sub	x0, x29, #0x8
    1e28:	mov	x2, sp
    1e2c:	mov	w1, #0x1                   	// #1
    1e30:	strh	w9, [sp, #16]
    1e34:	stur	x8, [x29, #-8]
    1e38:	mov	w19, #0x1                   	// #1
    1e3c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1e40:	b	1e90 <_ZN4llvm7TGLexer10LexVarNameEv+0xb4>
    1e44:	add	x22, x19, #0x1
    1e48:	str	x22, [x20, #8]
    1e4c:	ldrb	w21, [x22], #1
    1e50:	mov	w0, w21
    1e54:	bl	0 <isalpha>
    1e58:	cmp	w21, #0x5f
    1e5c:	b.eq	1e48 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>  // b.none
    1e60:	sub	w8, w21, #0x30
    1e64:	cbnz	w0, 1e48 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>
    1e68:	cmp	w8, #0xa
    1e6c:	b.cc	1e48 <_ZN4llvm7TGLexer10LexVarNameEv+0x6c>  // b.lo, b.ul, b.last
    1e70:	ldr	x2, [x20, #56]
    1e74:	mvn	x8, x19
    1e78:	add	x0, x20, #0x30
    1e7c:	add	x4, x8, x22
    1e80:	mov	x1, xzr
    1e84:	mov	x3, x19
    1e88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1e8c:	mov	w19, #0x4a                  	// #74
    1e90:	mov	w0, w19
    1e94:	ldp	x20, x19, [sp, #64]
    1e98:	ldp	x22, x21, [sp, #48]
    1e9c:	ldp	x29, x30, [sp, #32]
    1ea0:	add	sp, sp, #0x50
    1ea4:	ret

0000000000001ea8 <_ZN4llvm7TGLexer10LexBracketEv>:
    1ea8:	sub	sp, sp, #0x40
    1eac:	stp	x29, x30, [sp, #32]
    1eb0:	str	x19, [sp, #48]
    1eb4:	add	x29, sp, #0x20
    1eb8:	ldr	x8, [x0, #8]
    1ebc:	ldrb	w9, [x8]
    1ec0:	cmp	w9, #0x7b
    1ec4:	b.ne	2008 <_ZN4llvm7TGLexer10LexBracketEv+0x160>  // b.any
    1ec8:	add	x3, x8, #0x1
    1ecc:	mov	x10, x3
    1ed0:	str	x3, [x0, #8]
    1ed4:	b	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1ed8:	ldp	x10, x12, [x0, #16]
    1edc:	add	x10, x10, x12
    1ee0:	cmp	x9, x10
    1ee4:	mov	x10, x11
    1ee8:	b.eq	1fd0 <_ZN4llvm7TGLexer10LexBracketEv+0x128>  // b.none
    1eec:	add	x11, x10, #0x1
    1ef0:	str	x11, [x0, #8]
    1ef4:	ldrb	w12, [x10]
    1ef8:	mov	x9, x10
    1efc:	cmp	w12, #0xc
    1f00:	b.gt	1f18 <_ZN4llvm7TGLexer10LexBracketEv+0x70>
    1f04:	cbz	w12, 1ed8 <_ZN4llvm7TGLexer10LexBracketEv+0x30>
    1f08:	cmp	w12, #0xa
    1f0c:	mov	x10, x11
    1f10:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1f14:	b	1f50 <_ZN4llvm7TGLexer10LexBracketEv+0xa8>
    1f18:	cmp	w12, #0xd
    1f1c:	b.eq	1f50 <_ZN4llvm7TGLexer10LexBracketEv+0xa8>  // b.none
    1f20:	cmp	w12, #0x7d
    1f24:	mov	x10, x11
    1f28:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1f2c:	add	x10, x9, #0x2
    1f30:	str	x10, [x0, #8]
    1f34:	ldrb	w12, [x9, #1]
    1f38:	cmp	w12, #0xc
    1f3c:	b.gt	1f80 <_ZN4llvm7TGLexer10LexBracketEv+0xd8>
    1f40:	cbz	w12, 1fbc <_ZN4llvm7TGLexer10LexBracketEv+0x114>
    1f44:	cmp	w12, #0xa
    1f48:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1f4c:	b	1f94 <_ZN4llvm7TGLexer10LexBracketEv+0xec>
    1f50:	ldrb	w13, [x11]
    1f54:	cmp	w13, #0xd
    1f58:	b.eq	1f68 <_ZN4llvm7TGLexer10LexBracketEv+0xc0>  // b.none
    1f5c:	cmp	w13, #0xa
    1f60:	mov	x10, x11
    1f64:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1f68:	cmp	w13, w12
    1f6c:	mov	x10, x11
    1f70:	b.eq	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.none
    1f74:	add	x10, x9, #0x2
    1f78:	str	x10, [x0, #8]
    1f7c:	b	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1f80:	cmp	w12, #0xd
    1f84:	b.eq	1f94 <_ZN4llvm7TGLexer10LexBracketEv+0xec>  // b.none
    1f88:	cmp	w12, #0x5d
    1f8c:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1f90:	b	2010 <_ZN4llvm7TGLexer10LexBracketEv+0x168>
    1f94:	ldrb	w11, [x10]
    1f98:	cmp	w11, #0xd
    1f9c:	b.eq	1fa8 <_ZN4llvm7TGLexer10LexBracketEv+0x100>  // b.none
    1fa0:	cmp	w11, #0xa
    1fa4:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1fa8:	cmp	w11, w12
    1fac:	b.eq	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.none
    1fb0:	add	x10, x9, #0x3
    1fb4:	str	x10, [x0, #8]
    1fb8:	b	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>
    1fbc:	ldp	x9, x12, [x0, #16]
    1fc0:	add	x9, x9, x12
    1fc4:	cmp	x11, x9
    1fc8:	mov	x9, x11
    1fcc:	b.ne	1eec <_ZN4llvm7TGLexer10LexBracketEv+0x44>  // b.any
    1fd0:	str	x9, [x0, #8]
    1fd4:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    1fd8:	sub	x8, x8, #0x1
    1fdc:	add	x9, x9, #0x0
    1fe0:	mov	w10, #0x103                 	// #259
    1fe4:	add	x0, x29, #0x18
    1fe8:	add	x2, sp, #0x8
    1fec:	mov	w1, #0x1                   	// #1
    1ff0:	stp	x9, xzr, [sp, #8]
    1ff4:	strh	w10, [sp, #24]
    1ff8:	str	x8, [x29, #24]
    1ffc:	mov	w19, #0x1                   	// #1
    2000:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2004:	b	2028 <_ZN4llvm7TGLexer10LexBracketEv+0x180>
    2008:	mov	w19, #0x4                   	// #4
    200c:	b	2028 <_ZN4llvm7TGLexer10LexBracketEv+0x180>
    2010:	ldr	x2, [x0, #56]
    2014:	add	x0, x0, #0x30
    2018:	sub	x4, x9, x3
    201c:	mov	x1, xzr
    2020:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2024:	mov	w19, #0x4b                  	// #75
    2028:	mov	w0, w19
    202c:	ldr	x19, [sp, #48]
    2030:	ldp	x29, x30, [sp, #32]
    2034:	add	sp, sp, #0x40
    2038:	ret

000000000000203c <_ZN4llvm7TGLexer10LexExclaimEv>:
    203c:	sub	sp, sp, #0x50
    2040:	stp	x29, x30, [sp, #32]
    2044:	str	x21, [sp, #48]
    2048:	stp	x20, x19, [sp, #64]
    204c:	add	x29, sp, #0x20
    2050:	ldr	x20, [x0, #8]
    2054:	mov	x19, x0
    2058:	ldrb	w0, [x20]
    205c:	bl	0 <isalpha>
    2060:	cbz	w0, 2128 <_ZN4llvm7TGLexer10LexExclaimEv+0xec>
    2064:	add	x21, x20, #0x1
    2068:	str	x21, [x19, #8]
    206c:	ldrb	w0, [x21], #1
    2070:	bl	0 <isalpha>
    2074:	cbnz	w0, 2068 <_ZN4llvm7TGLexer10LexExclaimEv+0x2c>
    2078:	sub	x8, x21, x20
    207c:	sub	x8, x8, #0x3
    2080:	cmp	x8, #0x8
    2084:	b.hi	2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.pmore
    2088:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    208c:	add	x9, x9, #0x0
    2090:	adr	x10, 20a0 <_ZN4llvm7TGLexer10LexExclaimEv+0x64>
    2094:	ldrb	w11, [x9, x8]
    2098:	add	x10, x10, x11, lsl #2
    209c:	br	x10
    20a0:	ldrh	w8, [x20]
    20a4:	mov	w9, #0x7165                	// #29029
    20a8:	cmp	w8, w9
    20ac:	b.eq	24a0 <_ZN4llvm7TGLexer10LexExclaimEv+0x464>  // b.none
    20b0:	ldrh	w8, [x20]
    20b4:	mov	w9, #0x656e                	// #25966
    20b8:	cmp	w8, w9
    20bc:	b.eq	24d0 <_ZN4llvm7TGLexer10LexExclaimEv+0x494>  // b.none
    20c0:	ldrh	w8, [x20]
    20c4:	mov	w9, #0x656c                	// #25964
    20c8:	cmp	w8, w9
    20cc:	b.eq	24f0 <_ZN4llvm7TGLexer10LexExclaimEv+0x4b4>  // b.none
    20d0:	ldrh	w8, [x20]
    20d4:	mov	w9, #0x746c                	// #29804
    20d8:	cmp	w8, w9
    20dc:	b.eq	2510 <_ZN4llvm7TGLexer10LexExclaimEv+0x4d4>  // b.none
    20e0:	ldrh	w8, [x20]
    20e4:	mov	w9, #0x6567                	// #25959
    20e8:	cmp	w8, w9
    20ec:	b.eq	2530 <_ZN4llvm7TGLexer10LexExclaimEv+0x4f4>  // b.none
    20f0:	ldrh	w8, [x20]
    20f4:	mov	w9, #0x7467                	// #29799
    20f8:	cmp	w8, w9
    20fc:	b.eq	2540 <_ZN4llvm7TGLexer10LexExclaimEv+0x504>  // b.none
    2100:	ldrh	w8, [x20]
    2104:	mov	w9, #0x6669                	// #26217
    2108:	cmp	w8, w9
    210c:	b.eq	2550 <_ZN4llvm7TGLexer10LexExclaimEv+0x514>  // b.none
    2110:	ldrh	w8, [x20]
    2114:	mov	w9, #0x726f                	// #29295
    2118:	cmp	w8, w9
    211c:	b.ne	2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    2120:	mov	w19, #0x2b                  	// #43
    2124:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2128:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    212c:	sub	x8, x20, #0x1
    2130:	add	x9, x9, #0x0
    2134:	b	2464 <_ZN4llvm7TGLexer10LexExclaimEv+0x428>
    2138:	ldrh	w8, [x20]
    213c:	ldrb	w9, [x20, #2]
    2140:	mov	w10, #0x7369                	// #29545
    2144:	mov	w11, #0x61                  	// #97
    2148:	eor	w8, w8, w10
    214c:	eor	w9, w9, w11
    2150:	orr	w8, w8, w9
    2154:	tst	w8, #0xffff
    2158:	b.eq	24a8 <_ZN4llvm7TGLexer10LexExclaimEv+0x46c>  // b.none
    215c:	ldrh	w8, [x20]
    2160:	ldrb	w9, [x20, #2]
    2164:	mov	w10, #0x6f63                	// #28515
    2168:	mov	w11, #0x6e                  	// #110
    216c:	eor	w8, w8, w10
    2170:	eor	w9, w9, w11
    2174:	orr	w8, w8, w9
    2178:	tst	w8, #0xffff
    217c:	b.eq	24d8 <_ZN4llvm7TGLexer10LexExclaimEv+0x49c>  // b.none
    2180:	ldrh	w8, [x20]
    2184:	ldrb	w9, [x20, #2]
    2188:	mov	w10, #0x6164                	// #24932
    218c:	mov	w11, #0x67                  	// #103
    2190:	eor	w8, w8, w10
    2194:	eor	w9, w9, w11
    2198:	orr	w8, w8, w9
    219c:	tst	w8, #0xffff
    21a0:	b.eq	24f8 <_ZN4llvm7TGLexer10LexExclaimEv+0x4bc>  // b.none
    21a4:	ldrh	w8, [x20]
    21a8:	ldrb	w9, [x20, #2]
    21ac:	mov	w10, #0x6461                	// #25697
    21b0:	mov	w11, #0x64                  	// #100
    21b4:	eor	w8, w8, w10
    21b8:	eor	w9, w9, w11
    21bc:	orr	w8, w8, w9
    21c0:	tst	w8, #0xffff
    21c4:	b.eq	2518 <_ZN4llvm7TGLexer10LexExclaimEv+0x4dc>  // b.none
    21c8:	ldrh	w8, [x20]
    21cc:	ldrb	w9, [x20, #2]
    21d0:	mov	w10, #0x756d                	// #30061
    21d4:	mov	w11, #0x6c                  	// #108
    21d8:	eor	w8, w8, w10
    21dc:	eor	w9, w9, w11
    21e0:	orr	w8, w8, w9
    21e4:	tst	w8, #0xffff
    21e8:	b.eq	2538 <_ZN4llvm7TGLexer10LexExclaimEv+0x4fc>  // b.none
    21ec:	ldrh	w8, [x20]
    21f0:	ldrb	w9, [x20, #2]
    21f4:	mov	w10, #0x6e61                	// #28257
    21f8:	mov	w11, #0x64                  	// #100
    21fc:	eor	w8, w8, w10
    2200:	eor	w9, w9, w11
    2204:	orr	w8, w8, w9
    2208:	tst	w8, #0xffff
    220c:	b.eq	2548 <_ZN4llvm7TGLexer10LexExclaimEv+0x50c>  // b.none
    2210:	ldrh	w8, [x20]
    2214:	ldrb	w9, [x20, #2]
    2218:	mov	w10, #0x6873                	// #26739
    221c:	mov	w11, #0x6c                  	// #108
    2220:	eor	w8, w8, w10
    2224:	eor	w9, w9, w11
    2228:	orr	w8, w8, w9
    222c:	tst	w8, #0xffff
    2230:	b.eq	2558 <_ZN4llvm7TGLexer10LexExclaimEv+0x51c>  // b.none
    2234:	ldrh	w9, [x20]
    2238:	ldrb	w10, [x20, #2]
    223c:	mov	w8, #0x7273                	// #29299
    2240:	mov	w11, #0x61                  	// #97
    2244:	eor	w9, w9, w8
    2248:	eor	w10, w10, w11
    224c:	orr	w9, w9, w10
    2250:	tst	w9, #0xffff
    2254:	b.eq	2560 <_ZN4llvm7TGLexer10LexExclaimEv+0x524>  // b.none
    2258:	ldrh	w9, [x20]
    225c:	ldrb	w10, [x20, #2]
    2260:	mov	w11, #0x6c                  	// #108
    2264:	eor	w8, w9, w8
    2268:	eor	w9, w10, w11
    226c:	orr	w8, w8, w9
    2270:	tst	w8, #0xffff
    2274:	b.ne	2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    2278:	mov	w19, #0x2d                  	// #45
    227c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2280:	ldr	w8, [x20]
    2284:	mov	w9, #0x6f63                	// #28515
    2288:	movk	w9, #0x646e, lsl #16
    228c:	cmp	w8, w9
    2290:	b.eq	24b0 <_ZN4llvm7TGLexer10LexExclaimEv+0x474>  // b.none
    2294:	ldr	w8, [x20]
    2298:	mov	w9, #0x6568                	// #25960
    229c:	movk	w9, #0x6461, lsl #16
    22a0:	cmp	w8, w9
    22a4:	b.eq	24e0 <_ZN4llvm7TGLexer10LexExclaimEv+0x4a4>  // b.none
    22a8:	ldr	w8, [x20]
    22ac:	mov	w9, #0x6174                	// #24948
    22b0:	movk	w9, #0x6c69, lsl #16
    22b4:	cmp	w8, w9
    22b8:	b.eq	2500 <_ZN4llvm7TGLexer10LexExclaimEv+0x4c4>  // b.none
    22bc:	ldr	w8, [x20]
    22c0:	mov	w9, #0x6973                	// #26995
    22c4:	movk	w9, #0x657a, lsl #16
    22c8:	cmp	w8, w9
    22cc:	b.eq	2520 <_ZN4llvm7TGLexer10LexExclaimEv+0x4e4>  // b.none
    22d0:	ldr	w8, [x20]
    22d4:	mov	w9, #0x6163                	// #24931
    22d8:	movk	w9, #0x7473, lsl #16
    22dc:	cmp	w8, w9
    22e0:	b.ne	2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>  // b.any
    22e4:	mov	w19, #0x32                  	// #50
    22e8:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    22ec:	ldr	w8, [x20]
    22f0:	ldrb	w9, [x20, #4]
    22f4:	mov	w10, #0x6d65                	// #28005
    22f8:	movk	w10, #0x7470, lsl #16
    22fc:	mov	w11, #0x79                  	// #121
    2300:	eor	w8, w8, w10
    2304:	eor	w9, w9, w11
    2308:	orr	w8, w8, w9
    230c:	cbz	w8, 24b8 <_ZN4llvm7TGLexer10LexExclaimEv+0x47c>
    2310:	ldr	w8, [x20]
    2314:	ldrb	w9, [x20, #4]
    2318:	mov	w10, #0x7573                	// #30067
    231c:	movk	w10, #0x7362, lsl #16
    2320:	mov	w11, #0x74                  	// #116
    2324:	eor	w8, w8, w10
    2328:	eor	w9, w9, w11
    232c:	orr	w8, w8, w9
    2330:	cbz	w8, 24e8 <_ZN4llvm7TGLexer10LexExclaimEv+0x4ac>
    2334:	ldr	w8, [x20]
    2338:	ldrb	w9, [x20, #4]
    233c:	mov	w10, #0x6f66                	// #28518
    2340:	movk	w10, #0x646c, lsl #16
    2344:	mov	w11, #0x6c                  	// #108
    2348:	eor	w8, w8, w10
    234c:	eor	w9, w9, w11
    2350:	orr	w8, w8, w9
    2354:	cbz	w8, 2508 <_ZN4llvm7TGLexer10LexExclaimEv+0x4cc>
    2358:	ldr	w9, [x20]
    235c:	ldrb	w10, [x20, #4]
    2360:	mov	w8, #0x6567                	// #25959
    2364:	movk	w8, #0x6f74, lsl #16
    2368:	add	w11, w8, #0xc
    236c:	eor	w9, w9, w11
    2370:	eor	w10, w10, #0x70
    2374:	orr	w9, w9, w10
    2378:	cbz	w9, 2528 <_ZN4llvm7TGLexer10LexExclaimEv+0x4ec>
    237c:	ldr	w9, [x20]
    2380:	ldrb	w10, [x20, #4]
    2384:	eor	w8, w9, w8
    2388:	eor	w9, w10, #0x70
    238c:	orr	w8, w8, w9
    2390:	cbnz	w8, 2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    2394:	mov	w19, #0x45                  	// #69
    2398:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    239c:	ldr	w8, [x20]
    23a0:	ldur	w9, [x20, #3]
    23a4:	mov	w10, #0x6f66                	// #28518
    23a8:	mov	w11, #0x6165                	// #24933
    23ac:	movk	w10, #0x6572, lsl #16
    23b0:	movk	w11, #0x6863, lsl #16
    23b4:	eor	w8, w8, w10
    23b8:	eor	w9, w9, w11
    23bc:	orr	w8, w8, w9
    23c0:	cbnz	w8, 2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    23c4:	mov	w19, #0x34                  	// #52
    23c8:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    23cc:	ldr	x8, [x20]
    23d0:	ldrb	w9, [x20, #8]
    23d4:	mov	x10, #0x696c                	// #26988
    23d8:	movk	x10, #0x7473, lsl #16
    23dc:	movk	x10, #0x7073, lsl #32
    23e0:	movk	x10, #0x616c, lsl #48
    23e4:	mov	w11, #0x74                  	// #116
    23e8:	eor	x8, x8, x10
    23ec:	eor	x9, x9, x11
    23f0:	orr	x8, x8, x9
    23f4:	cbz	x8, 24c0 <_ZN4llvm7TGLexer10LexExclaimEv+0x484>
    23f8:	ldr	x8, [x20]
    23fc:	ldrb	w9, [x20, #8]
    2400:	mov	x10, #0x7473                	// #29811
    2404:	movk	x10, #0x6372, lsl #16
    2408:	movk	x10, #0x6e6f, lsl #32
    240c:	movk	x10, #0x6163, lsl #48
    2410:	mov	w11, #0x74                  	// #116
    2414:	eor	x8, x8, x10
    2418:	eor	x9, x9, x11
    241c:	orr	x8, x8, x9
    2420:	cbnz	x8, 2458 <_ZN4llvm7TGLexer10LexExclaimEv+0x41c>
    2424:	mov	w19, #0x31                  	// #49
    2428:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    242c:	ldr	x8, [x20]
    2430:	ldrh	w9, [x20, #8]
    2434:	mov	x10, #0x696c                	// #26988
    2438:	movk	x10, #0x7473, lsl #16
    243c:	movk	x10, #0x6f63, lsl #32
    2440:	movk	x10, #0x636e, lsl #48
    2444:	mov	w11, #0x7461                	// #29793
    2448:	eor	x8, x8, x10
    244c:	eor	x9, x9, x11
    2450:	orr	x8, x8, x9
    2454:	cbz	x8, 24c8 <_ZN4llvm7TGLexer10LexExclaimEv+0x48c>
    2458:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    245c:	sub	x8, x20, #0x1
    2460:	add	x9, x9, #0x0
    2464:	mov	w10, #0x103                 	// #259
    2468:	add	x0, x29, #0x18
    246c:	add	x2, sp, #0x8
    2470:	mov	w1, #0x1                   	// #1
    2474:	stp	x9, xzr, [sp, #8]
    2478:	strh	w10, [sp, #24]
    247c:	str	x8, [x29, #24]
    2480:	mov	w19, #0x1                   	// #1
    2484:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2488:	mov	w0, w19
    248c:	ldp	x20, x19, [sp, #64]
    2490:	ldr	x21, [sp, #48]
    2494:	ldp	x29, x30, [sp, #32]
    2498:	add	sp, sp, #0x50
    249c:	ret
    24a0:	mov	w19, #0x3c                  	// #60
    24a4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24a8:	mov	w19, #0x3d                  	// #61
    24ac:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24b0:	mov	w19, #0x3b                  	// #59
    24b4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24b8:	mov	w19, #0x39                  	// #57
    24bc:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24c0:	mov	w19, #0x30                  	// #48
    24c4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24c8:	mov	w19, #0x2f                  	// #47
    24cc:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24d0:	mov	w19, #0x3f                  	// #63
    24d4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24d8:	mov	w19, #0x27                  	// #39
    24dc:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24e0:	mov	w19, #0x36                  	// #54
    24e4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24e8:	mov	w19, #0x33                  	// #51
    24ec:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24f0:	mov	w19, #0x40                  	// #64
    24f4:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    24f8:	mov	w19, #0x3e                  	// #62
    24fc:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2500:	mov	w19, #0x37                  	// #55
    2504:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2508:	mov	w19, #0x35                  	// #53
    250c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2510:	mov	w19, #0x41                  	// #65
    2514:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2518:	mov	w19, #0x28                  	// #40
    251c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2520:	mov	w19, #0x38                  	// #56
    2524:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2528:	mov	w19, #0x44                  	// #68
    252c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2530:	mov	w19, #0x42                  	// #66
    2534:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2538:	mov	w19, #0x29                  	// #41
    253c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2540:	mov	w19, #0x43                  	// #67
    2544:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2548:	mov	w19, #0x2a                  	// #42
    254c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2550:	mov	w19, #0x3a                  	// #58
    2554:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2558:	mov	w19, #0x2e                  	// #46
    255c:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>
    2560:	mov	w19, #0x2c                  	// #44
    2564:	b	2488 <_ZN4llvm7TGLexer10LexExclaimEv+0x44c>

0000000000002568 <_ZN4llvm7TGLexer10LexIncludeEv>:
    2568:	sub	sp, sp, #0xd0
    256c:	stp	x29, x30, [sp, #160]
    2570:	stp	x22, x21, [sp, #176]
    2574:	stp	x20, x19, [sp, #192]
    2578:	add	x29, sp, #0xa0
    257c:	mov	w1, wzr
    2580:	mov	x19, x0
    2584:	bl	4c0 <_ZN4llvm7TGLexer8LexTokenEb>
    2588:	cmp	w0, #0x1
    258c:	b.eq	25e0 <_ZN4llvm7TGLexer10LexIncludeEv+0x78>  // b.none
    2590:	cmp	w0, #0x49
    2594:	b.ne	25e8 <_ZN4llvm7TGLexer10LexIncludeEv+0x80>  // b.any
    2598:	sub	x8, x29, #0x20
    259c:	add	x22, x8, #0x10
    25a0:	stur	x22, [x29, #-32]
    25a4:	ldp	x20, x21, [x19, #48]
    25a8:	cbnz	x20, 25b0 <_ZN4llvm7TGLexer10LexIncludeEv+0x48>
    25ac:	cbnz	x21, 28d0 <_ZN4llvm7TGLexer10LexIncludeEv+0x368>
    25b0:	cmp	x21, #0x10
    25b4:	stur	x21, [x29, #-64]
    25b8:	b.cc	261c <_ZN4llvm7TGLexer10LexIncludeEv+0xb4>  // b.lo, b.ul, b.last
    25bc:	sub	x0, x29, #0x20
    25c0:	sub	x1, x29, #0x40
    25c4:	mov	x2, xzr
    25c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    25cc:	ldur	x8, [x29, #-64]
    25d0:	stur	x0, [x29, #-32]
    25d4:	stur	x8, [x29, #-16]
    25d8:	cbnz	x21, 2624 <_ZN4llvm7TGLexer10LexIncludeEv+0xbc>
    25dc:	b	2644 <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    25e0:	mov	w19, #0x1                   	// #1
    25e4:	b	282c <_ZN4llvm7TGLexer10LexIncludeEv+0x2c4>
    25e8:	ldr	x8, [x19, #32]
    25ec:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    25f0:	add	x9, x9, #0x0
    25f4:	mov	w10, #0x103                 	// #259
    25f8:	sub	x0, x29, #0x40
    25fc:	sub	x2, x29, #0x20
    2600:	mov	w1, #0x1                   	// #1
    2604:	stp	x9, xzr, [x29, #-32]
    2608:	stur	x8, [x29, #-64]
    260c:	sturh	w10, [x29, #-16]
    2610:	mov	w19, #0x1                   	// #1
    2614:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2618:	b	282c <_ZN4llvm7TGLexer10LexIncludeEv+0x2c4>
    261c:	mov	x0, x22
    2620:	cbz	x21, 2644 <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    2624:	cmp	x21, #0x1
    2628:	b.ne	2638 <_ZN4llvm7TGLexer10LexIncludeEv+0xd0>  // b.any
    262c:	ldrb	w8, [x20]
    2630:	strb	w8, [x0]
    2634:	b	2644 <_ZN4llvm7TGLexer10LexIncludeEv+0xdc>
    2638:	mov	x1, x20
    263c:	mov	x2, x21
    2640:	bl	0 <memcpy>
    2644:	ldur	x8, [x29, #-64]
    2648:	ldur	x9, [x29, #-32]
    264c:	sub	x10, x29, #0x40
    2650:	add	x21, x10, #0x10
    2654:	stur	x8, [x29, #-24]
    2658:	strb	wzr, [x9, x8]
    265c:	stp	x21, xzr, [x29, #-64]
    2660:	sturb	wzr, [x29, #-48]
    2664:	ldp	x0, x2, [x19]
    2668:	sub	x1, x29, #0x20
    266c:	sub	x3, x29, #0x40
    2670:	bl	0 <_ZN4llvm9SourceMgr14AddIncludeFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS_5SMLocERS6_>
    2674:	str	w0, [x19, #88]
    2678:	cbz	w0, 2738 <_ZN4llvm7TGLexer10LexIncludeEv+0x1d0>
    267c:	add	x20, x19, #0x60
    2680:	sub	x1, x29, #0x40
    2684:	mov	x0, x20
    2688:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    268c:	cbz	x1, 26b4 <_ZN4llvm7TGLexer10LexIncludeEv+0x14c>
    2690:	mov	x2, x0
    2694:	mov	x8, x1
    2698:	sub	x3, x29, #0x40
    269c:	add	x4, sp, #0x20
    26a0:	mov	x0, x20
    26a4:	mov	x1, x2
    26a8:	mov	x2, x8
    26ac:	str	x20, [sp, #32]
    26b0:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    26b4:	ldr	w8, [x19, #88]
    26b8:	cbz	w8, 28b0 <_ZN4llvm7TGLexer10LexIncludeEv+0x348>
    26bc:	ldr	x9, [x19]
    26c0:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    26c4:	movk	x11, #0xaaab
    26c8:	ldp	x9, x10, [x9]
    26cc:	sub	x10, x10, x9
    26d0:	asr	x10, x10, #3
    26d4:	mul	x10, x10, x11
    26d8:	cmp	x10, x8
    26dc:	b.cc	28b0 <_ZN4llvm7TGLexer10LexIncludeEv+0x348>  // b.lo, b.ul, b.last
    26e0:	sub	w8, w8, #0x1
    26e4:	mov	w10, #0x18                  	// #24
    26e8:	umull	x8, w8, w10
    26ec:	ldr	x8, [x9, x8]
    26f0:	mov	w0, #0x18                  	// #24
    26f4:	ldp	x9, x8, [x8, #8]
    26f8:	sub	x8, x8, x9
    26fc:	stp	x9, x8, [x19, #16]
    2700:	str	x9, [x19, #8]
    2704:	bl	0 <_Znwm>
    2708:	stp	xzr, xzr, [x0, #8]
    270c:	str	xzr, [x0]
    2710:	str	x0, [sp, #32]
    2714:	ldp	x1, x8, [x19, #184]
    2718:	cmp	x1, x8
    271c:	b.eq	27e0 <_ZN4llvm7TGLexer10LexIncludeEv+0x278>  // b.none
    2720:	str	xzr, [sp, #32]
    2724:	str	x0, [x1], #8
    2728:	str	x1, [x19, #184]
    272c:	ldr	x19, [sp, #32]
    2730:	cbnz	x19, 27f4 <_ZN4llvm7TGLexer10LexIncludeEv+0x28c>
    2734:	b	2808 <_ZN4llvm7TGLexer10LexIncludeEv+0x2a0>
    2738:	ldur	x10, [x29, #-24]
    273c:	ldr	x8, [x19, #32]
    2740:	mov	x9, sp
    2744:	add	x19, x9, #0x10
    2748:	add	x1, x10, #0x1d
    274c:	mov	x0, sp
    2750:	strb	wzr, [sp, #16]
    2754:	stp	x19, xzr, [sp]
    2758:	stur	x8, [x29, #-72]
    275c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    2760:	ldr	x8, [sp, #8]
    2764:	mov	x20, #0x3fffffffffffffff    	// #4611686018427387903
    2768:	sub	x8, x20, x8
    276c:	cmp	x8, #0x1c
    2770:	b.ls	28dc <_ZN4llvm7TGLexer10LexIncludeEv+0x374>  // b.plast
    2774:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2778:	add	x1, x1, #0x0
    277c:	mov	x0, sp
    2780:	mov	w2, #0x1d                  	// #29
    2784:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2788:	ldp	x1, x2, [x29, #-32]
    278c:	mov	x0, sp
    2790:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2794:	ldr	x8, [sp, #8]
    2798:	cmp	x8, x20
    279c:	b.eq	28dc <_ZN4llvm7TGLexer10LexIncludeEv+0x374>  // b.none
    27a0:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    27a4:	add	x1, x1, #0x0
    27a8:	mov	x0, sp
    27ac:	mov	w2, #0x1                   	// #1
    27b0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    27b4:	add	x8, sp, #0x20
    27b8:	add	x20, x8, #0x10
    27bc:	str	x20, [sp, #32]
    27c0:	mov	x8, x0
    27c4:	ldr	x9, [x8], #16
    27c8:	cmp	x9, x8
    27cc:	b.eq	2844 <_ZN4llvm7TGLexer10LexIncludeEv+0x2dc>  // b.none
    27d0:	str	x9, [sp, #32]
    27d4:	ldr	x9, [x0, #16]
    27d8:	str	x9, [sp, #48]
    27dc:	b	284c <_ZN4llvm7TGLexer10LexIncludeEv+0x2e4>
    27e0:	add	x0, x19, #0xb0
    27e4:	add	x2, sp, #0x20
    27e8:	bl	0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    27ec:	ldr	x19, [sp, #32]
    27f0:	cbz	x19, 2808 <_ZN4llvm7TGLexer10LexIncludeEv+0x2a0>
    27f4:	ldr	x0, [x19]
    27f8:	cbz	x0, 2800 <_ZN4llvm7TGLexer10LexIncludeEv+0x298>
    27fc:	bl	0 <_ZdlPv>
    2800:	mov	x0, x19
    2804:	bl	0 <_ZdlPv>
    2808:	mov	w19, wzr
    280c:	ldur	x0, [x29, #-64]
    2810:	cmp	x0, x21
    2814:	b.eq	281c <_ZN4llvm7TGLexer10LexIncludeEv+0x2b4>  // b.none
    2818:	bl	0 <_ZdlPv>
    281c:	ldur	x0, [x29, #-32]
    2820:	cmp	x0, x22
    2824:	b.eq	282c <_ZN4llvm7TGLexer10LexIncludeEv+0x2c4>  // b.none
    2828:	bl	0 <_ZdlPv>
    282c:	mov	w0, w19
    2830:	ldp	x20, x19, [sp, #192]
    2834:	ldp	x22, x21, [sp, #176]
    2838:	ldp	x29, x30, [sp, #160]
    283c:	add	sp, sp, #0xd0
    2840:	ret
    2844:	ldr	q0, [x9]
    2848:	str	q0, [x20]
    284c:	ldr	x9, [x0, #8]
    2850:	mov	w10, #0x104                 	// #260
    2854:	add	x11, sp, #0x20
    2858:	add	x2, sp, #0x40
    285c:	str	x9, [sp, #40]
    2860:	stp	x8, xzr, [x0]
    2864:	strb	wzr, [x0, #16]
    2868:	sub	x0, x29, #0x48
    286c:	mov	w1, #0x1                   	// #1
    2870:	strh	w10, [sp, #80]
    2874:	stp	x11, xzr, [sp, #64]
    2878:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    287c:	ldr	x0, [sp, #32]
    2880:	cmp	x0, x20
    2884:	b.eq	288c <_ZN4llvm7TGLexer10LexIncludeEv+0x324>  // b.none
    2888:	bl	0 <_ZdlPv>
    288c:	ldr	x0, [sp]
    2890:	cmp	x0, x19
    2894:	b.eq	289c <_ZN4llvm7TGLexer10LexIncludeEv+0x334>  // b.none
    2898:	bl	0 <_ZdlPv>
    289c:	mov	w19, #0x1                   	// #1
    28a0:	ldur	x0, [x29, #-64]
    28a4:	cmp	x0, x21
    28a8:	b.ne	2818 <_ZN4llvm7TGLexer10LexIncludeEv+0x2b0>  // b.any
    28ac:	b	281c <_ZN4llvm7TGLexer10LexIncludeEv+0x2b4>
    28b0:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    28b4:	adrp	x1, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    28b8:	adrp	x3, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    28bc:	add	x0, x0, #0x0
    28c0:	add	x1, x1, #0x0
    28c4:	add	x3, x3, #0x0
    28c8:	mov	w2, #0x85                  	// #133
    28cc:	bl	0 <__assert_fail>
    28d0:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    28d4:	add	x0, x0, #0x0
    28d8:	bl	0 <_ZSt19__throw_logic_errorPKc>
    28dc:	adrp	x0, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    28e0:	add	x0, x0, #0x0
    28e4:	bl	0 <_ZSt20__throw_length_errorPKc>

00000000000028e8 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv>:
    28e8:	sub	sp, sp, #0x50
    28ec:	stp	x29, x30, [sp, #32]
    28f0:	str	x21, [sp, #48]
    28f4:	stp	x20, x19, [sp, #64]
    28f8:	add	x29, sp, #0x20
    28fc:	ldr	x8, [x0, #184]
    2900:	ldur	x8, [x8, #-8]
    2904:	ldp	x9, x20, [x8]
    2908:	cmp	x9, x20
    290c:	b.eq	2974 <_ZN4llvm7TGLexer32prepReportPreprocessorStackErrorEv+0x8c>  // b.none
    2910:	ldp	x8, x9, [x0, #16]
    2914:	adrp	x10, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2918:	mov	x19, x0
    291c:	add	x10, x10, #0x0
    2920:	mov	w21, #0x103                 	// #259
    2924:	add	x0, x8, x9
    2928:	add	x1, sp, #0x8
    292c:	stp	x10, xzr, [sp, #8]
    2930:	strh	w21, [sp, #24]
    2934:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    2938:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    293c:	sub	x0, x20, #0x8
    2940:	add	x8, x8, #0x0
    2944:	add	x2, sp, #0x8
    2948:	mov	w1, #0x1                   	// #1
    294c:	stp	x8, xzr, [sp, #8]
    2950:	strh	w21, [sp, #24]
    2954:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2958:	ldr	x8, [x19, #8]
    295c:	ldr	x21, [sp, #48]
    2960:	str	x8, [x19, #32]
    2964:	ldp	x20, x19, [sp, #64]
    2968:	ldp	x29, x30, [sp, #32]
    296c:	add	sp, sp, #0x50
    2970:	ret
    2974:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2978:	add	x8, x8, #0x0
    297c:	mov	w9, #0x103                 	// #259
    2980:	add	x0, sp, #0x8
    2984:	stp	x8, xzr, [sp, #8]
    2988:	strh	w9, [sp, #24]
    298c:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000002990 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE>:
    2990:	sub	sp, sp, #0x40
    2994:	stp	x29, x30, [sp, #32]
    2998:	stp	x20, x19, [sp, #48]
    299c:	add	x29, sp, #0x20
    29a0:	ldr	x20, [x0, #8]
    29a4:	sub	w8, w1, #0x4c
    29a8:	cmp	w8, #0x4
    29ac:	str	x20, [x0, #32]
    29b0:	b.hi	29e8 <_ZN4llvm7TGLexer28prepEatPreprocessorDirectiveENS_5tgtok7TokKindE+0x58>  // b.pmore
    29b4:	adrp	x9, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    29b8:	add	x9, x9, #0x0
    29bc:	add	x8, x9, w8, uxtw #4
    29c0:	mov	x19, x0
    29c4:	ldr	x0, [x8, #8]
    29c8:	bl	0 <strlen>
    29cc:	add	x8, x20, x0
    29d0:	str	x8, [x19, #8]
    29d4:	ldp	x20, x19, [sp, #48]
    29d8:	ldp	x29, x30, [sp, #32]
    29dc:	mov	w0, #0x1                   	// #1
    29e0:	add	sp, sp, #0x40
    29e4:	ret
    29e8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    29ec:	add	x8, x8, #0x0
    29f0:	mov	w9, #0x103                 	// #259
    29f4:	add	x0, sp, #0x8
    29f8:	stp	x8, xzr, [sp, #8]
    29fc:	strh	w9, [sp, #24]
    2a00:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000002a04 <_ZN4llvm7TGLexer16prepLexMacroNameEv>:
    2a04:	stp	x29, x30, [sp, #-64]!
    2a08:	str	x23, [sp, #16]
    2a0c:	stp	x22, x21, [sp, #32]
    2a10:	stp	x20, x19, [sp, #48]
    2a14:	mov	x29, sp
    2a18:	ldr	x19, [x0, #8]
    2a1c:	mov	x20, x0
    2a20:	b	2a2c <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x28>
    2a24:	add	x19, x19, #0x1
    2a28:	str	x19, [x20, #8]
    2a2c:	ldrb	w8, [x19]
    2a30:	cmp	w8, #0x20
    2a34:	b.eq	2a24 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x20>  // b.none
    2a38:	cmp	w8, #0x9
    2a3c:	b.eq	2a24 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x20>  // b.none
    2a40:	str	x19, [x20, #32]
    2a44:	mov	x23, x19
    2a48:	ldrb	w21, [x23], #1
    2a4c:	cmp	w21, #0x5f
    2a50:	b.ne	2a5c <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x58>  // b.any
    2a54:	mov	w22, #0x5f                  	// #95
    2a58:	b	2a6c <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x68>
    2a5c:	mov	w0, w21
    2a60:	bl	0 <isalpha>
    2a64:	mov	w22, w21
    2a68:	cbz	w0, 2ac4 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xc0>
    2a6c:	mov	w0, w22
    2a70:	bl	0 <isalpha>
    2a74:	cmp	w21, #0x5f
    2a78:	b.eq	2a90 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.none
    2a7c:	cbnz	w0, 2a90 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>
    2a80:	sub	w8, w22, #0x30
    2a84:	cmp	w8, #0x9
    2a88:	mov	x8, x19
    2a8c:	b.hi	2abc <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xb8>  // b.pmore
    2a90:	str	x23, [x20, #8]
    2a94:	ldrb	w21, [x23], #1
    2a98:	mov	w0, w21
    2a9c:	bl	0 <isalpha>
    2aa0:	cmp	w21, #0x5f
    2aa4:	b.eq	2a90 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.none
    2aa8:	sub	w8, w21, #0x30
    2aac:	cbnz	w0, 2a90 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>
    2ab0:	cmp	w8, #0xa
    2ab4:	b.cc	2a90 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0x8c>  // b.lo, b.ul, b.last
    2ab8:	sub	x8, x23, #0x1
    2abc:	sub	x1, x8, x19
    2ac0:	b	2ad0 <_ZN4llvm7TGLexer16prepLexMacroNameEv+0xcc>
    2ac4:	adrp	x19, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2ac8:	mov	x1, xzr
    2acc:	add	x19, x19, #0x0
    2ad0:	mov	x0, x19
    2ad4:	ldp	x20, x19, [sp, #48]
    2ad8:	ldp	x22, x21, [sp, #32]
    2adc:	ldr	x23, [sp, #16]
    2ae0:	ldp	x29, x30, [sp], #64
    2ae4:	ret

0000000000002ae8 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv>:
    2ae8:	sub	sp, sp, #0x40
    2aec:	stp	x29, x30, [sp, #32]
    2af0:	stp	x20, x19, [sp, #48]
    2af4:	add	x29, sp, #0x20
    2af8:	ldp	x9, x10, [x0, #16]
    2afc:	mov	x19, x0
    2b00:	ldr	x0, [x0, #8]
    2b04:	add	x8, x9, x10
    2b08:	cmp	x0, x8
    2b0c:	b.eq	2bcc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe4>  // b.none
    2b10:	adrp	x20, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2b14:	add	x20, x20, #0x0
    2b18:	b	2b30 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x48>
    2b1c:	add	x0, x0, #0x1
    2b20:	str	x0, [x19, #8]
    2b24:	add	x8, x9, x10
    2b28:	cmp	x0, x8
    2b2c:	b.eq	2bcc <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe4>  // b.none
    2b30:	ldrb	w8, [x0]
    2b34:	sub	w8, w8, #0x9
    2b38:	cmp	w8, #0x26
    2b3c:	b.hi	2be4 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xfc>  // b.pmore
    2b40:	adr	x11, 2b1c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x34>
    2b44:	ldrb	w12, [x20, x8]
    2b48:	add	x11, x11, x12, lsl #2
    2b4c:	mov	w8, #0x1                   	// #1
    2b50:	br	x11
    2b54:	mov	x8, x0
    2b58:	ldrb	w11, [x8, #1]!
    2b5c:	cmp	w11, #0x2f
    2b60:	b.ne	2ba0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xb8>  // b.any
    2b64:	str	x8, [x19, #8]
    2b68:	add	x8, x9, x10
    2b6c:	add	x0, x0, #0x2
    2b70:	b	2b80 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x98>
    2b74:	cmp	x8, x0
    2b78:	b.eq	2b24 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>  // b.none
    2b7c:	add	x0, x0, #0x1
    2b80:	str	x0, [x19, #8]
    2b84:	ldrb	w11, [x0]
    2b88:	cbz	w11, 2b74 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x8c>
    2b8c:	cmp	w11, #0xa
    2b90:	b.eq	2b24 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>  // b.none
    2b94:	cmp	w11, #0xd
    2b98:	b.ne	2b7c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x94>  // b.any
    2b9c:	b	2b24 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>
    2ba0:	cmp	w11, #0x2a
    2ba4:	str	x0, [x19, #32]
    2ba8:	b.ne	2bf0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x108>  // b.any
    2bac:	add	x8, x0, #0x1
    2bb0:	mov	x0, x19
    2bb4:	str	x8, [x19, #8]
    2bb8:	bl	1814 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2bbc:	tbnz	w0, #0, 2c0c <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x124>
    2bc0:	ldp	x0, x9, [x19, #8]
    2bc4:	ldr	x10, [x19, #24]
    2bc8:	b	2b24 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0x3c>
    2bcc:	mov	w8, #0x1                   	// #1
    2bd0:	ldp	x20, x19, [sp, #48]
    2bd4:	ldp	x29, x30, [sp, #32]
    2bd8:	mov	w0, w8
    2bdc:	add	sp, sp, #0x40
    2be0:	ret
    2be4:	mov	w8, wzr
    2be8:	str	x0, [x19, #32]
    2bec:	b	2bd0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>
    2bf0:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2bf4:	add	x8, x8, #0x0
    2bf8:	mov	w9, #0x103                 	// #259
    2bfc:	add	x1, sp, #0x8
    2c00:	stp	x8, xzr, [sp, #8]
    2c04:	strh	w9, [sp, #24]
    2c08:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    2c0c:	mov	w8, wzr
    2c10:	b	2bd0 <_ZN4llvm7TGLexer20prepSkipDirectiveEndEv+0xe8>

0000000000002c14 <_ZN4llvm7TGLexer14prepSkipRegionEb>:
    2c14:	sub	sp, sp, #0x70
    2c18:	stp	x29, x30, [sp, #32]
    2c1c:	str	x25, [sp, #48]
    2c20:	stp	x24, x23, [sp, #64]
    2c24:	stp	x22, x21, [sp, #80]
    2c28:	stp	x20, x19, [sp, #96]
    2c2c:	add	x29, sp, #0x20
    2c30:	tbz	w1, #0, 2e40 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x22c>
    2c34:	ldr	x20, [x0, #8]
    2c38:	mov	x23, #0x2600                	// #9728
    2c3c:	mov	x19, x0
    2c40:	mov	w22, #0x1                   	// #1
    2c44:	movk	x23, #0x1, lsl #32
    2c48:	ldrb	w8, [x20]
    2c4c:	cmp	w8, #0xa
    2c50:	b.ne	2c78 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x64>  // b.any
    2c54:	b	2ca4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>
    2c58:	ldp	x20, x24, [x19, #8]
    2c5c:	ldr	x25, [x19, #24]
    2c60:	add	x8, x24, x25
    2c64:	cmp	x20, x8
    2c68:	b.eq	2dc4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1b0>  // b.none
    2c6c:	ldrb	w8, [x20]
    2c70:	cmp	w8, #0xa
    2c74:	b.eq	2ca4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>  // b.none
    2c78:	cmp	w8, #0xd
    2c7c:	b.eq	2ca4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>  // b.none
    2c80:	ldp	x9, x10, [x19, #16]
    2c84:	add	x9, x9, x10
    2c88:	cmp	x20, x9
    2c8c:	b.eq	2ca4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x90>  // b.none
    2c90:	add	x20, x20, #0x1
    2c94:	str	x20, [x19, #8]
    2c98:	ldrb	w8, [x20]
    2c9c:	cmp	w8, #0xa
    2ca0:	b.ne	2c78 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x64>  // b.any
    2ca4:	ldp	x24, x25, [x19, #16]
    2ca8:	add	x9, x24, x25
    2cac:	cmp	x20, x9
    2cb0:	b.eq	2d30 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x11c>  // b.none
    2cb4:	and	w9, w8, #0xff
    2cb8:	cmp	w9, #0x2f
    2cbc:	b.hi	2d30 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x11c>  // b.pmore
    2cc0:	and	x9, x8, #0xff
    2cc4:	lsl	x10, x22, x9
    2cc8:	tst	x10, x23
    2ccc:	b.eq	2cec <_ZN4llvm7TGLexer14prepSkipRegionEb+0xd8>  // b.none
    2cd0:	add	x20, x20, #0x1
    2cd4:	str	x20, [x19, #8]
    2cd8:	ldrb	w8, [x20]
    2cdc:	add	x9, x24, x25
    2ce0:	cmp	x20, x9
    2ce4:	b.ne	2cb4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xa0>  // b.any
    2ce8:	b	2d30 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x11c>
    2cec:	cmp	x9, #0x2f
    2cf0:	b.ne	2d30 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x11c>  // b.any
    2cf4:	mov	x8, x20
    2cf8:	ldrb	w9, [x8, #1]!
    2cfc:	cmp	w9, #0x2a
    2d00:	b.ne	2c60 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>  // b.any
    2d04:	mov	x0, x19
    2d08:	str	x20, [x19, #32]
    2d0c:	str	x8, [x19, #8]
    2d10:	bl	1814 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2d14:	tbnz	w0, #0, 2dbc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1a8>
    2d18:	ldp	x20, x24, [x19, #8]
    2d1c:	ldr	x25, [x19, #24]
    2d20:	ldrb	w8, [x20]
    2d24:	add	x9, x24, x25
    2d28:	cmp	x20, x9
    2d2c:	b.ne	2cb4 <_ZN4llvm7TGLexer14prepSkipRegionEb+0xa0>  // b.any
    2d30:	and	w8, w8, #0xff
    2d34:	cmp	w8, #0x23
    2d38:	b.ne	2c60 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>  // b.any
    2d3c:	add	x20, x20, #0x1
    2d40:	mov	x0, x19
    2d44:	str	x20, [x19, #8]
    2d48:	bl	d10 <_ZNK4llvm7TGLexer15prepIsDirectiveEv>
    2d4c:	cmp	w0, #0x1
    2d50:	b.eq	2c60 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>  // b.none
    2d54:	mov	w21, w0
    2d58:	cmp	w0, #0x50
    2d5c:	b.eq	2c60 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x4c>  // b.none
    2d60:	mov	x0, x19
    2d64:	mov	w1, w21
    2d68:	mov	w2, wzr
    2d6c:	bl	ff4 <_ZN4llvm7TGLexer15lexPreprocessorENS_5tgtok7TokKindEb>
    2d70:	cmp	w0, #0x1
    2d74:	b.eq	2dbc <_ZN4llvm7TGLexer14prepSkipRegionEb+0x1a8>  // b.none
    2d78:	cmp	w21, w0
    2d7c:	b.ne	2e4c <_ZN4llvm7TGLexer14prepSkipRegionEb+0x238>  // b.any
    2d80:	ldr	x8, [x19, #184]
    2d84:	ldur	x9, [x8, #-8]
    2d88:	ldp	x9, x8, [x9]
    2d8c:	cmp	x8, x9
    2d90:	b.eq	2da8 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x194>  // b.none
    2d94:	ldurb	w10, [x8, #-12]
    2d98:	cbz	w10, 2c58 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x44>
    2d9c:	sub	x8, x8, #0x10
    2da0:	cmp	x9, x8
    2da4:	b.ne	2d94 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x180>  // b.any
    2da8:	orr	w8, w21, #0x1
    2dac:	cmp	w8, #0x4f
    2db0:	b.ne	2e58 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x244>  // b.any
    2db4:	mov	w0, #0x1                   	// #1
    2db8:	b	2e24 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x210>
    2dbc:	mov	w0, wzr
    2dc0:	b	2e24 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x210>
    2dc4:	ldr	x8, [x19, #184]
    2dc8:	ldur	x8, [x8, #-8]
    2dcc:	ldp	x9, x21, [x8]
    2dd0:	cmp	x9, x21
    2dd4:	b.eq	2e64 <_ZN4llvm7TGLexer14prepSkipRegionEb+0x250>  // b.none
    2dd8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2ddc:	add	x8, x8, #0x0
    2de0:	mov	w22, #0x103                 	// #259
    2de4:	add	x1, sp, #0x8
    2de8:	mov	x0, x20
    2dec:	stp	x8, xzr, [sp, #8]
    2df0:	strh	w22, [sp, #24]
    2df4:	bl	0 <_ZN4llvm10PrintErrorEPKcRKNS_5TwineE>
    2df8:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2dfc:	sub	x0, x21, #0x8
    2e00:	add	x8, x8, #0x0
    2e04:	add	x2, sp, #0x8
    2e08:	mov	w1, #0x1                   	// #1
    2e0c:	stp	x8, xzr, [sp, #8]
    2e10:	strh	w22, [sp, #24]
    2e14:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2e18:	ldr	x8, [x19, #8]
    2e1c:	mov	w0, wzr
    2e20:	str	x8, [x19, #32]
    2e24:	ldp	x20, x19, [sp, #96]
    2e28:	ldp	x22, x21, [sp, #80]
    2e2c:	ldp	x24, x23, [sp, #64]
    2e30:	ldr	x25, [sp, #48]
    2e34:	ldp	x29, x30, [sp, #32]
    2e38:	add	sp, sp, #0x70
    2e3c:	ret
    2e40:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2e44:	add	x8, x8, #0x0
    2e48:	b	2e6c <_ZN4llvm7TGLexer14prepSkipRegionEb+0x258>
    2e4c:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2e50:	add	x8, x8, #0x0
    2e54:	b	2e6c <_ZN4llvm7TGLexer14prepSkipRegionEb+0x258>
    2e58:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2e5c:	add	x8, x8, #0x0
    2e60:	b	2e6c <_ZN4llvm7TGLexer14prepSkipRegionEb+0x258>
    2e64:	adrp	x8, 0 <_ZN4llvm7TGLexerC1ERNS_9SourceMgrENS_8ArrayRefINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE>
    2e68:	add	x8, x8, #0x0
    2e6c:	mov	w9, #0x103                 	// #259
    2e70:	add	x0, sp, #0x8
    2e74:	stp	x8, xzr, [sp, #8]
    2e78:	strh	w9, [sp, #24]
    2e7c:	bl	0 <_ZN4llvm15PrintFatalErrorERKNS_5TwineE>

0000000000002e80 <_ZN4llvm7TGLexer17prepSkipToLineEndEv>:
    2e80:	ldr	x8, [x0, #8]
    2e84:	ldrb	w9, [x8]
    2e88:	cmp	w9, #0xa
    2e8c:	b.eq	2ebc <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x3c>  // b.none
    2e90:	cmp	w9, #0xd
    2e94:	b.eq	2ebc <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x3c>  // b.none
    2e98:	ldp	x9, x10, [x0, #16]
    2e9c:	add	x9, x9, x10
    2ea0:	cmp	x8, x9
    2ea4:	b.eq	2ebc <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x3c>  // b.none
    2ea8:	add	x8, x8, #0x1
    2eac:	str	x8, [x0, #8]
    2eb0:	ldrb	w9, [x8]
    2eb4:	cmp	w9, #0xa
    2eb8:	b.ne	2e90 <_ZN4llvm7TGLexer17prepSkipToLineEndEv+0x10>  // b.any
    2ebc:	ret

0000000000002ec0 <_ZN4llvm7TGLexer17prepSkipLineBeginEv>:
    2ec0:	stp	x29, x30, [sp, #-48]!
    2ec4:	str	x21, [sp, #16]
    2ec8:	stp	x20, x19, [sp, #32]
    2ecc:	mov	x29, sp
    2ed0:	ldp	x9, x10, [x0, #16]
    2ed4:	ldr	x8, [x0, #8]
    2ed8:	add	x11, x9, x10
    2edc:	cmp	x8, x11
    2ee0:	b.eq	2f68 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa8>  // b.none
    2ee4:	mov	x21, #0x2600                	// #9728
    2ee8:	mov	x19, x0
    2eec:	mov	w20, #0x1                   	// #1
    2ef0:	movk	x21, #0x1, lsl #32
    2ef4:	b	2f0c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x4c>
    2ef8:	add	x8, x8, #0x1
    2efc:	str	x8, [x19, #8]
    2f00:	add	x11, x9, x10
    2f04:	cmp	x8, x11
    2f08:	b.eq	2f68 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa8>  // b.none
    2f0c:	ldrb	w11, [x8]
    2f10:	mov	w0, #0x1                   	// #1
    2f14:	cmp	w11, #0x2f
    2f18:	b.hi	2f6c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xac>  // b.pmore
    2f1c:	lsl	x12, x20, x11
    2f20:	tst	x12, x21
    2f24:	b.ne	2ef8 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x38>  // b.any
    2f28:	cmp	x11, #0x2f
    2f2c:	b.ne	2f6c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xac>  // b.any
    2f30:	ldrb	w9, [x8, #1]
    2f34:	cmp	w9, #0x2a
    2f38:	b.ne	2f68 <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xa8>  // b.any
    2f3c:	str	x8, [x19, #32]
    2f40:	add	x8, x8, #0x1
    2f44:	mov	x0, x19
    2f48:	str	x8, [x19, #8]
    2f4c:	bl	1814 <_ZN4llvm7TGLexer12SkipCCommentEv>
    2f50:	tbnz	w0, #0, 2f7c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0xbc>
    2f54:	ldp	x8, x9, [x19, #8]
    2f58:	ldr	x10, [x19, #24]
    2f5c:	add	x11, x9, x10
    2f60:	cmp	x8, x11
    2f64:	b.ne	2f0c <_ZN4llvm7TGLexer17prepSkipLineBeginEv+0x4c>  // b.any
    2f68:	mov	w0, #0x1                   	// #1
    2f6c:	ldp	x20, x19, [sp, #32]
    2f70:	ldr	x21, [sp, #16]
    2f74:	ldp	x29, x30, [sp], #48
    2f78:	ret
    2f7c:	mov	w0, wzr
    2f80:	ldp	x20, x19, [sp, #32]
    2f84:	ldr	x21, [sp, #16]
    2f88:	ldp	x29, x30, [sp], #48
    2f8c:	ret

0000000000002f90 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv>:
    2f90:	ldr	x8, [x0, #184]
    2f94:	ldur	x9, [x8, #-8]
    2f98:	ldp	x9, x8, [x9]
    2f9c:	cmp	x8, x9
    2fa0:	b.eq	2fb8 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x28>  // b.none
    2fa4:	ldurb	w10, [x8, #-12]
    2fa8:	cbz	w10, 2fc0 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x30>
    2fac:	sub	x8, x8, #0x10
    2fb0:	cmp	x9, x8
    2fb4:	b.ne	2fa4 <_ZN4llvm7TGLexer23prepIsProcessingEnabledEv+0x14>  // b.any
    2fb8:	mov	w0, #0x1                   	// #1
    2fbc:	ret
    2fc0:	mov	w0, wzr
    2fc4:	ret

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	15c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x15c>  // b.none
  30:	asr	x9, x8, #3
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #60
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  58:	cmp	w10, #0x0
  5c:	csel	x25, x8, x9, ne  // ne = any
  60:	sub	x8, x1, x20
  64:	mov	x23, x2
  68:	mov	x19, x0
  6c:	mov	x21, x1
  70:	asr	x26, x8, #3
  74:	cbz	x25, 88 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x88>
  78:	lsl	x0, x25, #3
  7c:	bl	0 <_Znwm>
  80:	mov	x22, x0
  84:	b	8c <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	x8, [x23]
  90:	str	xzr, [x23]
  94:	cmp	x20, x21
  98:	str	x8, [x22, x26, lsl #3]
  9c:	mov	x26, x22
  a0:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf8>  // b.none
  a4:	mov	x26, x22
  a8:	mov	x27, x20
  ac:	b	c8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xc8>
  b0:	mov	x0, x23
  b4:	bl	0 <_ZdlPv>
  b8:	str	xzr, [x27], #8
  bc:	cmp	x21, x27
  c0:	add	x26, x26, #0x8
  c4:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf8>  // b.none
  c8:	ldr	x8, [x27]
  cc:	str	xzr, [x27]
  d0:	str	x8, [x26]
  d4:	ldr	x23, [x27]
  d8:	cbz	x23, b8 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb8>
  dc:	ldr	x0, [x23]
  e0:	cbz	x0, b0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb0>
  e4:	bl	0 <_ZdlPv>
  e8:	b	b0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xb0>
  ec:	mov	x0, x23
  f0:	bl	0 <_ZdlPv>
  f4:	str	xzr, [x21], #8
  f8:	cmp	x24, x21
  fc:	add	x26, x26, #0x8
 100:	b.eq	128 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x128>  // b.none
 104:	ldr	x8, [x21]
 108:	str	xzr, [x21]
 10c:	str	x8, [x26]
 110:	ldr	x23, [x21]
 114:	cbz	x23, f4 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xf4>
 118:	ldr	x0, [x23]
 11c:	cbz	x0, ec <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xec>
 120:	bl	0 <_ZdlPv>
 124:	b	ec <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0xec>
 128:	cbz	x20, 134 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_+0x134>
 12c:	mov	x0, x20
 130:	bl	0 <_ZdlPv>
 134:	add	x8, x22, x25, lsl #3
 138:	stp	x22, x26, [x19]
 13c:	str	x8, [x19, #16]
 140:	ldp	x20, x19, [sp, #80]
 144:	ldp	x22, x21, [sp, #64]
 148:	ldp	x24, x23, [sp, #48]
 14c:	ldp	x26, x25, [sp, #32]
 150:	ldr	x27, [sp, #16]
 154:	ldp	x29, x30, [sp], #96
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIS_IN4llvm7TGLexer23PreprocessorControlDescESaIS3_EESt14default_deleteIS5_EESaIS8_EE17_M_realloc_insertIJS8_EEEvN9__gnu_cxx17__normal_iteratorIPS8_SA_EEDpOT_>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x22, x2
  1c:	mov	x23, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	140 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x140>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x25, x22, #0x9
  70:	mov	x0, x25
  74:	bl	0 <malloc>
  78:	mov	x24, x0
  7c:	cbz	x0, 90 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x90>
  80:	mov	x25, x24
  84:	str	x22, [x25], #8
  88:	cbnz	x22, dc <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xdc>
  8c:	b	ec <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xec>
  90:	cbz	x25, b4 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xb4>
  94:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  98:	add	x0, x0, #0x0
  9c:	mov	w1, #0x1                   	// #1
  a0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  a4:	mov	x25, x24
  a8:	str	x22, [x25], #8
  ac:	cbnz	x22, dc <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xdc>
  b0:	b	ec <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xec>
  b4:	mov	w0, #0x1                   	// #1
  b8:	bl	0 <malloc>
  bc:	mov	x24, x0
  c0:	cbnz	x0, d4 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0xd4>
  c4:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
  c8:	add	x0, x0, #0x0
  cc:	mov	w1, #0x1                   	// #1
  d0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  d4:	mov	x25, x24
  d8:	str	x22, [x25], #8
  dc:	mov	x0, x25
  e0:	mov	x1, x23
  e4:	mov	x2, x22
  e8:	bl	0 <memcpy>
  ec:	strb	wzr, [x25, x22]
  f0:	str	x24, [x19]
  f4:	ldp	w8, w9, [x20, #12]
  f8:	ldr	w10, [x20, #8]
  fc:	add	w8, w8, #0x1
 100:	add	w9, w9, w8
 104:	cmp	w9, w10
 108:	str	w8, [x20, #12]
 10c:	b.hi	15c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x15c>  // b.pmore
 110:	mov	x0, x20
 114:	mov	w1, w21
 118:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
 11c:	ldr	x8, [x20]
 120:	add	x19, x8, w0, uxtw #3
 124:	b	12c <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x12c>
 128:	add	x19, x19, #0x8
 12c:	ldr	x8, [x19]
 130:	cbz	x8, 128 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x128>
 134:	cmn	x8, #0x8
 138:	b.eq	128 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_+0x128>  // b.none
 13c:	mov	w1, #0x1                   	// #1
 140:	mov	x0, x19
 144:	ldp	x20, x19, [sp, #64]
 148:	ldp	x22, x21, [sp, #48]
 14c:	ldp	x24, x23, [sp, #32]
 150:	ldr	x25, [sp, #16]
 154:	ldp	x29, x30, [sp], #80
 158:	ret
 15c:	adrp	x0, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 160:	adrp	x1, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 164:	adrp	x3, 0 <_ZN4llvm9StringMapINS_8NoneTypeENS_15MallocAllocatorEE11try_emplaceIJS1_EEESt4pairINS_17StringMapIteratorIS1_EEbENS_9StringRefEDpOT_>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x1bb                 	// #443
 178:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE24_M_get_insert_unique_posERKS5_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x22, x3
  20:	mov	x20, x2
  24:	mov	x19, x0
  28:	cbz	x1, 34 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x34>
  2c:	mov	w21, #0x1                   	// #1
  30:	b	84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x84>
  34:	add	x8, x19, #0x8
  38:	cmp	x8, x20
  3c:	b.eq	2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x2c>  // b.none
  40:	ldr	x8, [x22, #8]
  44:	ldr	x9, [x20, #40]
  48:	subs	x21, x8, x9
  4c:	csel	x2, x9, x8, hi  // hi = pmore
  50:	cbz	x2, 64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x64>
  54:	ldr	x1, [x20, #32]
  58:	ldr	x0, [x22]
  5c:	bl	0 <memcmp>
  60:	cbnz	w0, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x80>
  64:	mov	w0, #0x7fffffff            	// #2147483647
  68:	cmp	x21, x0
  6c:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x80>
  70:	mov	x8, #0xffffffff80000000    	// #-2147483648
  74:	cmp	x21, x8
  78:	mov	w8, #0x80000000            	// #-2147483648
  7c:	csel	w0, w21, w8, gt
  80:	lsr	w21, w0, #31
  84:	mov	w0, #0x40                  	// #64
  88:	bl	0 <_Znwm>
  8c:	add	x24, x0, #0x30
  90:	mov	x26, x0
  94:	str	x24, [x26, #32]!
  98:	ldp	x25, x22, [x22]
  9c:	mov	x23, x0
  a0:	cbnz	x25, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xa8>
  a4:	cbnz	x22, 14c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0x14c>
  a8:	cmp	x22, #0x10
  ac:	str	x22, [sp, #8]
  b0:	b.cc	d4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xd4>  // b.lo, b.ul, b.last
  b4:	add	x1, sp, #0x8
  b8:	mov	x0, x26
  bc:	mov	x2, xzr
  c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  c4:	ldr	x8, [sp, #8]
  c8:	str	x0, [x26]
  cc:	str	x8, [x24]
  d0:	mov	x24, x0
  d4:	cbz	x22, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xfc>
  d8:	cmp	x22, #0x1
  dc:	b.ne	ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xec>  // b.any
  e0:	ldrb	w8, [x25]
  e4:	strb	w8, [x24]
  e8:	b	fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_+0xfc>
  ec:	mov	x0, x24
  f0:	mov	x1, x25
  f4:	mov	x2, x22
  f8:	bl	0 <memcpy>
  fc:	ldr	x8, [sp, #8]
 100:	ldr	x9, [x23, #32]
 104:	add	x3, x19, #0x8
 108:	mov	w0, w21
 10c:	mov	x1, x23
 110:	mov	x2, x20
 114:	str	x8, [x23, #40]
 118:	strb	wzr, [x9, x8]
 11c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 120:	ldr	x8, [x19, #40]
 124:	mov	x0, x23
 128:	add	x8, x8, #0x1
 12c:	str	x8, [x19, #40]
 130:	ldp	x20, x19, [sp, #80]
 134:	ldp	x22, x21, [sp, #64]
 138:	ldp	x24, x23, [sp, #48]
 13c:	ldp	x26, x25, [sp, #32]
 140:	ldp	x29, x30, [sp, #16]
 144:	add	sp, sp, #0x60
 148:	ret
 14c:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_St9_IdentityIS5_ESt4lessIS5_ESaIS5_EE10_M_insert_IRKS5_NSB_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS5_EPSt18_Rb_tree_node_baseSJ_OT_RT0_>
 150:	add	x0, x0, #0x0
 154:	bl	0 <_ZSt19__throw_logic_errorPKc>

TGParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZNK4llvm22SubMultiClassReference4dumpEv>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	stp	x20, x19, [sp, #16]
       8:	mov	x29, sp
       c:	mov	x19, x0
      10:	bl	0 <_ZN4llvm4errsEv>
      14:	ldp	x9, x8, [x0, #16]
      18:	sub	x9, x9, x8
      1c:	cmp	x9, #0xb
      20:	b.hi	38 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x38>  // b.pmore
      24:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      28:	add	x1, x1, #0x0
      2c:	mov	w2, #0xc                   	// #12
      30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      34:	b	60 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x60>
      38:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      3c:	add	x9, x9, #0x0
      40:	ldr	x9, [x9]
      44:	mov	w10, #0x7373                	// #29555
      48:	movk	w10, #0xa3a, lsl #16
      4c:	str	w10, [x8, #8]
      50:	str	x9, [x8]
      54:	ldr	x8, [x0, #24]
      58:	add	x8, x8, #0xc
      5c:	str	x8, [x0, #24]
      60:	ldr	x0, [x19, #16]
      64:	bl	e8 <_ZNK4llvm10MultiClass4dumpEv>
      68:	bl	0 <_ZN4llvm4errsEv>
      6c:	ldp	x9, x8, [x0, #16]
      70:	sub	x9, x9, x8
      74:	cmp	x9, #0xe
      78:	b.hi	98 <_ZNK4llvm22SubMultiClassReference4dumpEv+0x98>  // b.pmore
      7c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      80:	add	x1, x1, #0x0
      84:	mov	w2, #0xf                   	// #15
      88:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
      8c:	ldr	w8, [x19, #32]
      90:	cbnz	w8, c4 <_ZNK4llvm22SubMultiClassReference4dumpEv+0xc4>
      94:	b	dc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xdc>
      98:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
      9c:	add	x9, x9, #0x0
      a0:	ldur	x10, [x9, #7]
      a4:	ldr	x9, [x9]
      a8:	stur	x10, [x8, #7]
      ac:	str	x9, [x8]
      b0:	ldr	x8, [x0, #24]
      b4:	add	x8, x8, #0xf
      b8:	str	x8, [x0, #24]
      bc:	ldr	w8, [x19, #32]
      c0:	cbz	w8, dc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xdc>
      c4:	ldr	x19, [x19, #24]
      c8:	lsl	x20, x8, #3
      cc:	ldr	x0, [x19], #8
      d0:	bl	0 <_ZNK4llvm4Init4dumpEv>
      d4:	subs	x20, x20, #0x8
      d8:	b.ne	cc <_ZNK4llvm22SubMultiClassReference4dumpEv+0xcc>  // b.any
      dc:	ldp	x20, x19, [sp, #16]
      e0:	ldp	x29, x30, [sp], #32
      e4:	ret

00000000000000e8 <_ZNK4llvm10MultiClass4dumpEv>:
      e8:	stp	x29, x30, [sp, #-32]!
      ec:	stp	x20, x19, [sp, #16]
      f0:	mov	x29, sp
      f4:	mov	x19, x0
      f8:	bl	0 <_ZN4llvm4errsEv>
      fc:	ldp	x9, x8, [x0, #16]
     100:	sub	x9, x9, x8
     104:	cmp	x9, #0x7
     108:	b.hi	120 <_ZNK4llvm10MultiClass4dumpEv+0x38>  // b.pmore
     10c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     110:	add	x1, x1, #0x0
     114:	mov	w2, #0x8                   	// #8
     118:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     11c:	b	140 <_ZNK4llvm10MultiClass4dumpEv+0x58>
     120:	mov	x9, #0x6552                	// #25938
     124:	movk	x9, #0x6f63, lsl #16
     128:	movk	x9, #0x6472, lsl #32
     12c:	movk	x9, #0xa3a, lsl #48
     130:	str	x9, [x8]
     134:	ldr	x8, [x0, #24]
     138:	add	x8, x8, #0x8
     13c:	str	x8, [x0, #24]
     140:	mov	x0, x19
     144:	bl	0 <_ZNK4llvm6Record4dumpEv>
     148:	bl	0 <_ZN4llvm4errsEv>
     14c:	ldp	x9, x8, [x0, #16]
     150:	sub	x9, x9, x8
     154:	cmp	x9, #0x5
     158:	b.hi	180 <_ZNK4llvm10MultiClass4dumpEv+0x98>  // b.pmore
     15c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     160:	add	x1, x1, #0x0
     164:	mov	w2, #0x6                   	// #6
     168:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     16c:	ldr	x20, [x19, #128]
     170:	ldr	x19, [x19, #136]
     174:	cmp	x20, x19
     178:	b.ne	1b0 <_ZNK4llvm10MultiClass4dumpEv+0xc8>  // b.any
     17c:	b	1c4 <_ZNK4llvm10MultiClass4dumpEv+0xdc>
     180:	mov	w10, #0x6544                	// #25924
     184:	mov	w9, #0xa3a                 	// #2618
     188:	movk	w10, #0x7366, lsl #16
     18c:	strh	w9, [x8, #4]
     190:	str	w10, [x8]
     194:	ldr	x8, [x0, #24]
     198:	add	x8, x8, #0x6
     19c:	str	x8, [x0, #24]
     1a0:	ldr	x20, [x19, #128]
     1a4:	ldr	x19, [x19, #136]
     1a8:	cmp	x20, x19
     1ac:	b.eq	1c4 <_ZNK4llvm10MultiClass4dumpEv+0xdc>  // b.none
     1b0:	mov	x0, x20
     1b4:	bl	e974 <_ZNK4llvm12RecordsEntry4dumpEv>
     1b8:	add	x20, x20, #0x10
     1bc:	cmp	x19, x20
     1c0:	b.ne	1b0 <_ZNK4llvm10MultiClass4dumpEv+0xc8>  // b.any
     1c4:	ldp	x20, x19, [sp, #16]
     1c8:	ldp	x29, x30, [sp], #32
     1cc:	ret

00000000000001d0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>:
     1d0:	sub	sp, sp, #0x1e0
     1d4:	stp	x29, x30, [sp, #416]
     1d8:	stp	x28, x23, [sp, #432]
     1dc:	stp	x22, x21, [sp, #448]
     1e0:	stp	x20, x19, [sp, #464]
     1e4:	add	x29, sp, #0x1a0
     1e8:	mov	x21, x3
     1ec:	mov	x19, x2
     1f0:	mov	x22, x1
     1f4:	cbz	x1, 208 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x38>
     1f8:	ldr	w8, [x22, #80]
     1fc:	ldr	x9, [x22, #72]
     200:	cbnz	w8, 218 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x48>
     204:	b	328 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x158>
     208:	ldr	x22, [x0, #328]
     20c:	ldr	w8, [x22, #80]
     210:	ldr	x9, [x22, #72]
     214:	cbz	w8, 328 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x158>
     218:	ldr	x10, [x21]
     21c:	add	x11, x8, x8, lsl #1
     220:	sub	x23, x29, #0xa0
     224:	lsl	x11, x11, #3
     228:	mov	x20, x9
     22c:	mov	x12, x9
     230:	ldr	x13, [x12], #24
     234:	cmp	x13, x10
     238:	b.eq	24c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x7c>  // b.none
     23c:	subs	x11, x11, #0x18
     240:	mov	x20, x12
     244:	b.ne	230 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x60>  // b.any
     248:	b	2f8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x128>
     24c:	cbz	x20, 2f8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x128>
     250:	ldr	x1, [x21, #16]
     254:	mov	x0, x20
     258:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     25c:	tbz	w0, #0, 37c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1ac>
     260:	mov	x0, x21
     264:	bl	0 <_ZNK4llvm9RecordVal7getNameEv>
     268:	mov	w8, #0x503                 	// #1283
     26c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     270:	add	x9, x9, #0x0
     274:	add	x10, sp, #0xc0
     278:	strh	w8, [sp, #224]
     27c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     280:	add	x11, sp, #0xd0
     284:	add	x8, x8, #0x0
     288:	stp	x9, x10, [sp, #208]
     28c:	mov	w9, #0x302                 	// #770
     290:	stp	x0, x1, [sp, #192]
     294:	stp	x11, x8, [x29, #-184]
     298:	sturh	w9, [x29, #-168]
     29c:	ldr	x8, [x21, #8]
     2a0:	add	x22, sp, #0x88
     2a4:	and	x0, x8, #0xfffffffffffffff8
     2a8:	ldr	x8, [x0]
     2ac:	ldr	x9, [x8, #16]
     2b0:	add	x8, sp, #0x88
     2b4:	blr	x9
     2b8:	ldurb	w21, [x29, #-168]
     2bc:	mov	w8, #0x104                 	// #260
     2c0:	strh	w8, [sp, #184]
     2c4:	stp	x22, xzr, [sp, #168]
     2c8:	cmp	w21, #0x1
     2cc:	b.eq	384 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1b4>  // b.none
     2d0:	cbnz	w21, 39c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x1cc>
     2d4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     2d8:	mov	w8, #0x100                 	// #256
     2dc:	add	x9, x9, #0x0
     2e0:	mov	w10, #0x103                 	// #259
     2e4:	stp	xzr, xzr, [x29, #-160]
     2e8:	sturh	w8, [x29, #-144]
     2ec:	stp	x9, xzr, [sp, #112]
     2f0:	strh	w10, [sp, #128]
     2f4:	b	424 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x254>
     2f8:	add	x11, x8, x8, lsl #1
     2fc:	lsl	x11, x11, #3
     300:	mov	x13, x9
     304:	mov	x12, x9
     308:	ldr	x14, [x12], #24
     30c:	cmp	x14, x10
     310:	b.eq	324 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x154>  // b.none
     314:	subs	x11, x11, #0x18
     318:	mov	x13, x12
     31c:	b.ne	308 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x138>  // b.any
     320:	b	328 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x158>
     324:	cbnz	x13, 75c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x58c>
     328:	ldr	w10, [x22, #84]
     32c:	cmp	w8, w10
     330:	b.cs	71c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x54c>  // b.hs, b.nlast
     334:	ldr	x10, [x21, #16]
     338:	ldr	q0, [x21]
     33c:	mov	w11, #0x18                  	// #24
     340:	madd	x8, x8, x11, x9
     344:	str	x10, [x8, #16]
     348:	str	q0, [x8]
     34c:	ldp	w8, w9, [x22, #80]
     350:	cmp	w8, w9
     354:	b.cs	73c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x56c>  // b.hs, b.nlast
     358:	mov	w0, wzr
     35c:	add	w8, w8, #0x1
     360:	str	w8, [x22, #80]
     364:	ldp	x20, x19, [sp, #464]
     368:	ldp	x22, x21, [sp, #448]
     36c:	ldp	x28, x23, [sp, #432]
     370:	ldp	x29, x30, [sp, #416]
     374:	add	sp, sp, #0x1e0
     378:	ret
     37c:	mov	w0, wzr
     380:	b	364 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x194>
     384:	ldr	x8, [sp, #184]
     388:	ldur	q0, [sp, #168]
     38c:	and	w21, w8, #0xff
     390:	str	q0, [x23]
     394:	stur	x8, [x29, #-144]
     398:	b	404 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x234>
     39c:	ldurb	w8, [x29, #-167]
     3a0:	ldur	x9, [x29, #-184]
     3a4:	mov	w10, #0x2                   	// #2
     3a8:	sub	x11, x29, #0xb8
     3ac:	cmp	w8, #0x1
     3b0:	csel	w10, w21, w10, eq  // eq = none
     3b4:	add	x12, sp, #0x88
     3b8:	mov	w13, #0x4                   	// #4
     3bc:	csel	x8, x9, x11, eq  // eq = none
     3c0:	cmp	w10, #0x2
     3c4:	stp	x8, x12, [x29, #-160]
     3c8:	sturb	w10, [x29, #-144]
     3cc:	sturb	w13, [x29, #-143]
     3d0:	b.ne	404 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x234>  // b.any
     3d4:	ldrb	w9, [x8, #16]
     3d8:	cbz	w9, 77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     3dc:	ldrb	w8, [x8, #17]
     3e0:	cmp	w8, #0x1
     3e4:	b.eq	77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>  // b.none
     3e8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     3ec:	add	x8, x8, #0x0
     3f0:	mov	w9, #0x103                 	// #259
     3f4:	mov	w21, #0x2                   	// #2
     3f8:	stp	x8, xzr, [sp, #112]
     3fc:	strh	w9, [sp, #128]
     400:	b	4c4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2f4>
     404:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     408:	add	x8, x8, #0x0
     40c:	mov	w9, #0x103                 	// #259
     410:	cmp	w21, #0x1
     414:	stp	x8, xzr, [sp, #112]
     418:	strh	w9, [sp, #128]
     41c:	b.eq	61c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x44c>  // b.none
     420:	cbnz	w21, 4c4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2f4>
     424:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     428:	mov	w8, #0x100                 	// #256
     42c:	add	x9, x9, #0x0
     430:	mov	w10, #0x103                 	// #259
     434:	stp	xzr, xzr, [x29, #-128]
     438:	sturh	w8, [x29, #-112]
     43c:	stp	x9, xzr, [sp, #88]
     440:	strh	w10, [sp, #104]
     444:	mov	w8, #0x100                 	// #256
     448:	mov	w21, wzr
     44c:	stp	xzr, xzr, [x29, #-96]
     450:	sturh	w8, [x29, #-80]
     454:	ldr	x8, [x20, #8]
     458:	add	x20, sp, #0x20
     45c:	and	x0, x8, #0xfffffffffffffff8
     460:	ldr	x8, [x0]
     464:	ldr	x9, [x8, #16]
     468:	add	x8, sp, #0x20
     46c:	blr	x9
     470:	mov	w8, #0x104                 	// #260
     474:	cmp	w21, #0x1
     478:	strh	w8, [sp, #80]
     47c:	stp	x20, xzr, [sp, #64]
     480:	b.eq	4ac <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x2dc>  // b.none
     484:	cbnz	w21, 530 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x360>
     488:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     48c:	mov	w8, #0x100                 	// #256
     490:	add	x9, x9, #0x0
     494:	mov	w10, #0x103                 	// #259
     498:	stp	xzr, xzr, [x29, #-64]
     49c:	sturh	w8, [x29, #-48]
     4a0:	stp	x9, xzr, [sp, #8]
     4a4:	strh	w10, [sp, #24]
     4a8:	b	5b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3e8>
     4ac:	ldr	x8, [sp, #80]
     4b0:	ldr	q0, [sp, #64]
     4b4:	and	w21, w8, #0xff
     4b8:	str	q0, [x23, #96]
     4bc:	stur	x8, [x29, #-48]
     4c0:	b	598 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3c8>
     4c4:	ldurb	w8, [x29, #-143]
     4c8:	ldur	x9, [x29, #-160]
     4cc:	mov	w10, #0x2                   	// #2
     4d0:	sub	x11, x29, #0xa0
     4d4:	cmp	w8, #0x1
     4d8:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     4dc:	csel	w10, w21, w10, eq  // eq = none
     4e0:	add	x12, x12, #0x0
     4e4:	mov	w13, #0x3                   	// #3
     4e8:	csel	x8, x9, x11, eq  // eq = none
     4ec:	cmp	w10, #0x2
     4f0:	stp	x8, x12, [x29, #-128]
     4f4:	sturb	w10, [x29, #-112]
     4f8:	sturb	w13, [x29, #-111]
     4fc:	b.ne	630 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x460>  // b.any
     500:	ldrb	w9, [x8, #16]
     504:	cbz	w9, 77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     508:	ldrb	w8, [x8, #17]
     50c:	cmp	w8, #0x1
     510:	b.eq	77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>  // b.none
     514:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     518:	add	x8, x8, #0x0
     51c:	mov	w9, #0x103                 	// #259
     520:	mov	w21, #0x2                   	// #2
     524:	stp	x8, xzr, [sp, #88]
     528:	strh	w9, [sp, #104]
     52c:	b	650 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x480>
     530:	ldurb	w8, [x29, #-79]
     534:	ldur	x9, [x29, #-96]
     538:	mov	w10, #0x2                   	// #2
     53c:	sub	x11, x29, #0x60
     540:	cmp	w8, #0x1
     544:	csel	w10, w21, w10, eq  // eq = none
     548:	add	x12, sp, #0x20
     54c:	mov	w13, #0x4                   	// #4
     550:	csel	x8, x9, x11, eq  // eq = none
     554:	cmp	w10, #0x2
     558:	stp	x8, x12, [x29, #-64]
     55c:	sturb	w10, [x29, #-48]
     560:	sturb	w13, [x29, #-47]
     564:	b.ne	598 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3c8>  // b.any
     568:	ldrb	w9, [x8, #16]
     56c:	cbz	w9, 77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     570:	ldrb	w8, [x8, #17]
     574:	cmp	w8, #0x1
     578:	b.eq	77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>  // b.none
     57c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     580:	add	x8, x8, #0x0
     584:	mov	w9, #0x103                 	// #259
     588:	mov	w21, #0x2                   	// #2
     58c:	stp	x8, xzr, [sp, #8]
     590:	strh	w9, [sp, #24]
     594:	b	5c8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3f8>
     598:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     59c:	add	x8, x8, #0x0
     5a0:	mov	w9, #0x103                 	// #259
     5a4:	cmp	w21, #0x1
     5a8:	stp	x8, xzr, [sp, #8]
     5ac:	strh	w9, [sp, #24]
     5b0:	b.eq	6a8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4d8>  // b.none
     5b4:	cbnz	w21, 5c8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x3f8>
     5b8:	mov	w8, #0x100                 	// #256
     5bc:	stp	xzr, xzr, [x29, #-32]
     5c0:	sturh	w8, [x29, #-16]
     5c4:	b	6b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4e8>
     5c8:	ldurb	w8, [x29, #-47]
     5cc:	ldur	x9, [x29, #-64]
     5d0:	mov	w10, #0x2                   	// #2
     5d4:	sub	x11, x29, #0x40
     5d8:	cmp	w8, #0x1
     5dc:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     5e0:	csel	w10, w21, w10, eq  // eq = none
     5e4:	add	x12, x12, #0x0
     5e8:	mov	w13, #0x3                   	// #3
     5ec:	csel	x8, x9, x11, eq  // eq = none
     5f0:	cmp	w10, #0x2
     5f4:	stp	x8, x12, [x29, #-32]
     5f8:	sturb	w10, [x29, #-16]
     5fc:	sturb	w13, [x29, #-15]
     600:	b.ne	6b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4e8>  // b.any
     604:	ldrb	w9, [x8, #16]
     608:	cbz	w9, 77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     60c:	ldrb	w8, [x8, #17]
     610:	cmp	w8, #0x1
     614:	b.ne	6b8 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x4e8>  // b.any
     618:	b	77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     61c:	ldr	x8, [sp, #128]
     620:	ldr	q0, [sp, #112]
     624:	and	w21, w8, #0xff
     628:	str	q0, [x23, #32]
     62c:	stur	x8, [x29, #-112]
     630:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     634:	add	x8, x8, #0x0
     638:	mov	w9, #0x103                 	// #259
     63c:	cmp	w21, #0x1
     640:	stp	x8, xzr, [sp, #88]
     644:	strh	w9, [sp, #104]
     648:	b.eq	704 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x534>  // b.none
     64c:	cbz	w21, 444 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x274>
     650:	ldurb	w8, [x29, #-111]
     654:	ldur	x9, [x29, #-128]
     658:	mov	w10, #0x2                   	// #2
     65c:	sub	x11, x29, #0x80
     660:	cmp	w8, #0x1
     664:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     668:	csel	w10, w21, w10, eq  // eq = none
     66c:	add	x12, x12, #0x0
     670:	mov	w13, #0x3                   	// #3
     674:	csel	x8, x9, x11, eq  // eq = none
     678:	cmp	w10, #0x2
     67c:	stp	x8, x12, [x29, #-96]
     680:	sturb	w10, [x29, #-80]
     684:	sturb	w13, [x29, #-79]
     688:	b.ne	454 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x284>  // b.any
     68c:	ldrb	w9, [x8, #16]
     690:	cbz	w9, 77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>
     694:	ldrb	w8, [x8, #17]
     698:	cmp	w8, #0x1
     69c:	b.eq	77c <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x5ac>  // b.none
     6a0:	mov	w21, #0x2                   	// #2
     6a4:	b	454 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x284>
     6a8:	ldur	q0, [sp, #8]
     6ac:	ldr	x8, [sp, #24]
     6b0:	str	q0, [x23, #128]
     6b4:	stur	x8, [x29, #-16]
     6b8:	sub	x0, x29, #0x8
     6bc:	sub	x2, x29, #0x20
     6c0:	mov	w1, #0x1                   	// #1
     6c4:	stur	x19, [x29, #-8]
     6c8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     6cc:	ldr	x0, [sp, #32]
     6d0:	add	x8, sp, #0x20
     6d4:	add	x8, x8, #0x10
     6d8:	cmp	x0, x8
     6dc:	b.eq	6e4 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x514>  // b.none
     6e0:	bl	0 <_ZdlPv>
     6e4:	ldr	x0, [sp, #136]
     6e8:	add	x8, sp, #0x88
     6ec:	add	x8, x8, #0x10
     6f0:	cmp	x0, x8
     6f4:	b.eq	6fc <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x52c>  // b.none
     6f8:	bl	0 <_ZdlPv>
     6fc:	mov	w0, #0x1                   	// #1
     700:	b	364 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x194>
     704:	ldr	x8, [sp, #104]
     708:	ldur	q0, [sp, #88]
     70c:	and	w21, w8, #0xff
     710:	str	q0, [x23, #64]
     714:	stur	x8, [x29, #-80]
     718:	b	454 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x284>
     71c:	add	x0, x22, #0x48
     720:	add	x1, x0, #0x10
     724:	mov	w3, #0x18                  	// #24
     728:	mov	x2, xzr
     72c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     730:	ldr	w8, [x22, #80]
     734:	ldr	x9, [x22, #72]
     738:	b	334 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE+0x164>
     73c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     740:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     744:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     748:	add	x0, x0, #0x0
     74c:	add	x1, x1, #0x0
     750:	add	x3, x3, #0x0
     754:	mov	w2, #0x43                  	// #67
     758:	bl	0 <__assert_fail>
     75c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     760:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     764:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     768:	add	x0, x0, #0x0
     76c:	add	x1, x1, #0x0
     770:	add	x3, x3, #0x0
     774:	mov	w2, #0x60a                 	// #1546
     778:	bl	0 <__assert_fail>
     77c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     780:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     784:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     788:	add	x0, x0, #0x0
     78c:	add	x1, x1, #0x0
     790:	add	x3, x3, #0x0
     794:	mov	w2, #0xb8                  	// #184
     798:	bl	0 <__assert_fail>

000000000000079c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>:
     79c:	stp	x29, x30, [sp, #-96]!
     7a0:	stp	x28, x27, [sp, #16]
     7a4:	stp	x26, x25, [sp, #32]
     7a8:	stp	x24, x23, [sp, #48]
     7ac:	stp	x22, x21, [sp, #64]
     7b0:	stp	x20, x19, [sp, #80]
     7b4:	mov	x29, sp
     7b8:	sub	sp, sp, #0x210
     7bc:	cbz	x6, e68 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6cc>
     7c0:	mov	x20, x6
     7c4:	mov	x23, x5
     7c8:	mov	x24, x4
     7cc:	mov	x22, x3
     7d0:	mov	x19, x2
     7d4:	cbz	x1, 7e4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x48>
     7d8:	ldr	w8, [x1, #80]
     7dc:	cbnz	w8, 7f0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x54>
     7e0:	b	89c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     7e4:	ldr	x1, [x0, #328]
     7e8:	ldr	w8, [x1, #80]
     7ec:	cbz	w8, 89c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     7f0:	ldr	x21, [x1, #72]
     7f4:	add	x8, x8, x8, lsl #1
     7f8:	sub	x25, x29, #0xf0
     7fc:	lsl	x8, x8, #3
     800:	mov	x9, x21
     804:	ldr	x10, [x9], #24
     808:	cmp	x10, x22
     80c:	b.eq	820 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x84>  // b.none
     810:	subs	x8, x8, #0x18
     814:	mov	x21, x9
     818:	b.ne	804 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x68>  // b.any
     81c:	b	89c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     820:	cbz	x21, 89c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x100>
     824:	cbz	x23, 9e0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x244>
     828:	ldr	x28, [x21, #16]
     82c:	cbz	x28, 1520 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd84>
     830:	ldrb	w8, [x28, #8]
     834:	cmp	w8, #0x3
     838:	b.ne	a08 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x26c>  // b.any
     83c:	mov	w0, w23
     840:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
     844:	ldr	x8, [x20]
     848:	mov	x1, x0
     84c:	mov	x0, x20
     850:	ldr	x8, [x8, #56]
     854:	blr	x8
     858:	cbz	x0, a64 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2c8>
     85c:	ldr	w26, [x28, #32]
     860:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     864:	ldr	d0, [x9]
     868:	sub	x8, x29, #0xf0
     86c:	mov	x25, x0
     870:	add	x1, x8, #0x10
     874:	cmp	w26, #0x11
     878:	stur	x1, [x29, #-240]
     87c:	stur	d0, [x29, #-232]
     880:	b.cc	ad4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x338>  // b.lo, b.ul, b.last
     884:	sub	x0, x29, #0xf0
     888:	mov	w3, #0x8                   	// #8
     88c:	mov	x2, x26
     890:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
     894:	ldur	w8, [x29, #-228]
     898:	b	ad8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x33c>
     89c:	ldr	x8, [x22]
     8a0:	mov	x0, x22
     8a4:	ldr	x9, [x8, #48]
     8a8:	sub	x8, x29, #0x60
     8ac:	blr	x9
     8b0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     8b4:	add	x3, x3, #0x0
     8b8:	sub	x0, x29, #0x60
     8bc:	mov	w4, #0x7                   	// #7
     8c0:	mov	x1, xzr
     8c4:	mov	x2, xzr
     8c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     8cc:	sub	x8, x29, #0x38
     8d0:	add	x20, x8, #0x10
     8d4:	stur	x20, [x29, #-56]
     8d8:	mov	x8, x0
     8dc:	ldr	x9, [x8], #16
     8e0:	cmp	x9, x8
     8e4:	b.eq	8f8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x15c>  // b.none
     8e8:	stur	x9, [x29, #-56]
     8ec:	ldr	x9, [x0, #16]
     8f0:	stur	x9, [x29, #-40]
     8f4:	b	900 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x164>
     8f8:	ldr	q0, [x9]
     8fc:	str	q0, [x20]
     900:	ldr	x9, [x0, #8]
     904:	stur	x9, [x29, #-48]
     908:	stp	x8, xzr, [x0]
     90c:	strb	wzr, [x0, #16]
     910:	ldur	x8, [x29, #-48]
     914:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     918:	sub	x8, x9, x8
     91c:	cmp	x8, #0x9
     920:	b.ls	14f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
     924:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     928:	add	x1, x1, #0x0
     92c:	sub	x0, x29, #0x38
     930:	mov	w2, #0xa                   	// #10
     934:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     938:	sub	x8, x29, #0xf0
     93c:	add	x21, x8, #0x10
     940:	stur	x21, [x29, #-240]
     944:	mov	x8, x0
     948:	ldr	x9, [x8], #16
     94c:	cmp	x9, x8
     950:	b.eq	964 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1c8>  // b.none
     954:	stur	x9, [x29, #-240]
     958:	ldr	x9, [x0, #16]
     95c:	stur	x9, [x29, #-224]
     960:	b	96c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x1d0>
     964:	ldr	q0, [x9]
     968:	str	q0, [x21]
     96c:	ldr	x9, [x0, #8]
     970:	mov	w10, #0x104                 	// #260
     974:	sub	x11, x29, #0xf0
     978:	add	x2, sp, #0xe0
     97c:	stur	x9, [x29, #-232]
     980:	stp	x8, xzr, [x0]
     984:	strb	wzr, [x0, #16]
     988:	add	x0, sp, #0xc0
     98c:	mov	w1, #0x1                   	// #1
     990:	strh	w10, [sp, #240]
     994:	stp	x11, xzr, [sp, #224]
     998:	str	x19, [sp, #192]
     99c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     9a0:	ldur	x0, [x29, #-240]
     9a4:	cmp	x0, x21
     9a8:	b.eq	9b0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x214>  // b.none
     9ac:	bl	0 <_ZdlPv>
     9b0:	ldur	x0, [x29, #-56]
     9b4:	cmp	x0, x20
     9b8:	b.eq	9c0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x224>  // b.none
     9bc:	bl	0 <_ZdlPv>
     9c0:	ldur	x0, [x29, #-96]
     9c4:	sub	x8, x29, #0x60
     9c8:	add	x8, x8, #0x10
     9cc:	cmp	x0, x8
     9d0:	b.eq	9d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>  // b.none
     9d4:	bl	0 <_ZdlPv>
     9d8:	mov	w19, #0x1                   	// #1
     9dc:	b	e6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6d0>
     9e0:	ldrb	w8, [x20, #8]
     9e4:	cmp	w8, #0x13
     9e8:	b.ne	dc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>  // b.any
     9ec:	ldr	x8, [x20, #24]
     9f0:	cmp	x8, x22
     9f4:	b.ne	dc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>  // b.any
     9f8:	tbnz	w7, #0, dc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x624>
     9fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     a00:	add	x8, x8, #0x0
     a04:	b	a6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2d0>
     a08:	ldr	x8, [x22]
     a0c:	mov	x0, x22
     a10:	ldr	x9, [x8, #48]
     a14:	sub	x8, x29, #0x60
     a18:	blr	x9
     a1c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     a20:	add	x3, x3, #0x0
     a24:	sub	x0, x29, #0x60
     a28:	mov	w4, #0x7                   	// #7
     a2c:	mov	x1, xzr
     a30:	mov	x2, xzr
     a34:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
     a38:	sub	x8, x29, #0x38
     a3c:	add	x20, x8, #0x10
     a40:	stur	x20, [x29, #-56]
     a44:	mov	x8, x0
     a48:	ldr	x9, [x8], #16
     a4c:	cmp	x9, x8
     a50:	b.eq	a94 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x2f8>  // b.none
     a54:	stur	x9, [x29, #-56]
     a58:	ldr	x9, [x0, #16]
     a5c:	stur	x9, [x29, #-40]
     a60:	b	a9c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x300>
     a64:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     a68:	add	x8, x8, #0x0
     a6c:	mov	w9, #0x103                 	// #259
     a70:	sub	x0, x29, #0x38
     a74:	sub	x2, x29, #0xf0
     a78:	mov	w1, #0x1                   	// #1
     a7c:	stp	x8, xzr, [x29, #-240]
     a80:	sturh	w9, [x29, #-224]
     a84:	stur	x19, [x29, #-56]
     a88:	mov	w19, #0x1                   	// #1
     a8c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     a90:	b	e6c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6d0>
     a94:	ldr	q0, [x9]
     a98:	str	q0, [x20]
     a9c:	ldr	x9, [x0, #8]
     aa0:	stur	x9, [x29, #-48]
     aa4:	stp	x8, xzr, [x0]
     aa8:	strb	wzr, [x0, #16]
     aac:	ldur	x8, [x29, #-48]
     ab0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
     ab4:	sub	x8, x9, x8
     ab8:	cmp	x8, #0x13
     abc:	b.ls	14f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
     ac0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     ac4:	add	x1, x1, #0x0
     ac8:	sub	x0, x29, #0x38
     acc:	mov	w2, #0x14                  	// #20
     ad0:	b	934 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x198>
     ad4:	mov	w8, #0x10                  	// #16
     ad8:	cmp	x8, x26
     adc:	b.cc	1540 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xda4>  // b.lo, b.ul, b.last
     ae0:	stur	w26, [x29, #-232]
     ae4:	cbz	w26, af8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x35c>
     ae8:	ldur	x0, [x29, #-240]
     aec:	lsl	x2, x26, #3
     af0:	mov	w1, wzr
     af4:	bl	0 <memset>
     af8:	cbz	w23, b5c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3c0>
     afc:	mov	w8, wzr
     b00:	mov	w26, w8
     b04:	cmp	x23, x26
     b08:	b.ls	1500 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd64>  // b.plast
     b0c:	ldr	w27, [x24, x26, lsl #2]
     b10:	ldur	w8, [x29, #-232]
     b14:	cmp	w8, w27
     b18:	b.ls	14d4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.plast
     b1c:	ldur	x8, [x29, #-240]
     b20:	ldr	x8, [x8, x27, lsl #3]
     b24:	cbnz	x8, bc0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x424>
     b28:	ldr	x8, [x25]
     b2c:	mov	x0, x25
     b30:	mov	w1, w26
     b34:	ldr	x8, [x8, #104]
     b38:	blr	x8
     b3c:	ldur	w8, [x29, #-232]
     b40:	cmp	w8, w27
     b44:	b.ls	14d4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.plast
     b48:	ldur	x9, [x29, #-240]
     b4c:	add	w8, w26, #0x1
     b50:	cmp	w23, w8
     b54:	str	x0, [x9, x27, lsl #3]
     b58:	b.ne	b00 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x364>  // b.any
     b5c:	ldr	w11, [x28, #32]
     b60:	ldur	w1, [x29, #-232]
     b64:	sub	x25, x29, #0xf0
     b68:	cbz	w11, bac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x410>
     b6c:	mov	x8, xzr
     b70:	lsl	x9, x1, #3
     b74:	add	x10, x28, #0x28
     b78:	lsl	x11, x11, #3
     b7c:	b	b8c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3f0>
     b80:	add	x8, x8, #0x8
     b84:	cmp	x11, x8
     b88:	b.eq	bac <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x410>  // b.none
     b8c:	cmp	x9, x8
     b90:	b.eq	14d4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd38>  // b.none
     b94:	ldur	x12, [x29, #-240]
     b98:	ldr	x13, [x12, x8]
     b9c:	cbnz	x13, b80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3e4>
     ba0:	ldr	x13, [x10, x8]
     ba4:	str	x13, [x12, x8]
     ba8:	b	b80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x3e4>
     bac:	ldur	x0, [x29, #-240]
     bb0:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
     bb4:	mov	x20, x0
     bb8:	mov	w23, wzr
     bbc:	b	da4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x608>
     bc0:	stp	xzr, xzr, [sp, #128]
     bc4:	str	w27, [sp, #128]
     bc8:	mov	w10, #0x903                 	// #2307
     bcc:	mov	w8, #0x109                 	// #265
     bd0:	strh	w10, [sp, #176]
     bd4:	ldr	x10, [sp, #128]
     bd8:	strh	w8, [sp, #144]
     bdc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     be0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     be4:	add	x11, sp, #0xa0
     be8:	add	x8, x8, #0x0
     bec:	add	x9, x9, #0x0
     bf0:	stp	x11, x8, [sp, #192]
     bf4:	mov	w8, #0x302                 	// #770
     bf8:	stp	x9, x10, [sp, #160]
     bfc:	strh	w8, [sp, #208]
     c00:	ldr	x8, [x22]
     c04:	mov	x0, x22
     c08:	sub	x23, x29, #0x38
     c0c:	ldr	x9, [x8, #48]
     c10:	sub	x8, x29, #0x38
     c14:	blr	x9
     c18:	ldrb	w8, [sp, #208]
     c1c:	mov	w9, #0x104                 	// #260
     c20:	strh	w9, [sp, #112]
     c24:	stp	x23, xzr, [sp, #96]
     c28:	cmp	w8, #0x1
     c2c:	b.eq	c5c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4c0>  // b.none
     c30:	sub	x25, x29, #0xf0
     c34:	cbnz	w8, c78 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x4dc>
     c38:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     c3c:	mov	w8, #0x100                 	// #256
     c40:	add	x9, x9, #0x0
     c44:	mov	w10, #0x103                 	// #259
     c48:	stp	xzr, xzr, [sp, #224]
     c4c:	strh	w8, [sp, #240]
     c50:	stp	x9, xzr, [sp, #64]
     c54:	strh	w10, [sp, #80]
     c58:	b	d00 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x564>
     c5c:	ldr	x8, [sp, #112]
     c60:	ldr	q0, [sp, #96]
     c64:	sub	x25, x29, #0xf0
     c68:	str	x8, [sp, #240]
     c6c:	and	w8, w8, #0xff
     c70:	str	q0, [sp, #224]
     c74:	b	ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x544>
     c78:	ldrb	w9, [sp, #209]
     c7c:	ldr	x10, [sp, #192]
     c80:	mov	w11, #0x2                   	// #2
     c84:	add	x12, sp, #0xc0
     c88:	cmp	w9, #0x1
     c8c:	csel	w11, w8, w11, eq  // eq = none
     c90:	sub	x13, x29, #0x38
     c94:	mov	w14, #0x4                   	// #4
     c98:	csel	x9, x10, x12, eq  // eq = none
     c9c:	cmp	w11, #0x2
     ca0:	stp	x9, x13, [sp, #224]
     ca4:	strb	w11, [sp, #240]
     ca8:	strb	w14, [sp, #241]
     cac:	b.ne	ce0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x544>  // b.any
     cb0:	ldrb	w8, [x9, #16]
     cb4:	cbz	w8, 1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     cb8:	ldrb	w8, [x9, #17]
     cbc:	cmp	w8, #0x1
     cc0:	b.eq	1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>  // b.none
     cc4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     cc8:	add	x8, x8, #0x0
     ccc:	mov	w9, #0x103                 	// #259
     cd0:	stp	x8, xzr, [sp, #64]
     cd4:	mov	w8, #0x2                   	// #2
     cd8:	strh	w9, [sp, #80]
     cdc:	b	d10 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x574>
     ce0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     ce4:	add	x9, x9, #0x0
     ce8:	mov	w10, #0x103                 	// #259
     cec:	cmp	w8, #0x1
     cf0:	stp	x9, xzr, [sp, #64]
     cf4:	strh	w10, [sp, #80]
     cf8:	b.eq	d64 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5c8>  // b.none
     cfc:	cbnz	w8, d10 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x574>
     d00:	mov	w8, #0x100                 	// #256
     d04:	stp	xzr, xzr, [x29, #-96]
     d08:	sturh	w8, [x29, #-80]
     d0c:	b	d74 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>
     d10:	ldrb	w9, [sp, #241]
     d14:	ldr	x10, [sp, #224]
     d18:	mov	w11, #0x2                   	// #2
     d1c:	add	x12, sp, #0xe0
     d20:	cmp	w9, #0x1
     d24:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     d28:	csel	w9, w8, w11, eq  // eq = none
     d2c:	add	x13, x13, #0x0
     d30:	mov	w14, #0x3                   	// #3
     d34:	csel	x8, x10, x12, eq  // eq = none
     d38:	cmp	w9, #0x2
     d3c:	stp	x8, x13, [x29, #-96]
     d40:	sturb	w9, [x29, #-80]
     d44:	sturb	w14, [x29, #-79]
     d48:	b.ne	d74 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>  // b.any
     d4c:	ldrb	w9, [x8, #16]
     d50:	cbz	w9, 1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     d54:	ldrb	w8, [x8, #17]
     d58:	cmp	w8, #0x1
     d5c:	b.ne	d74 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x5d8>  // b.any
     d60:	b	1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     d64:	ldr	q0, [sp, #64]
     d68:	ldr	x8, [sp, #80]
     d6c:	stur	q0, [x29, #-96]
     d70:	stur	x8, [x29, #-80]
     d74:	add	x0, sp, #0x20
     d78:	sub	x2, x29, #0x60
     d7c:	mov	w1, #0x1                   	// #1
     d80:	str	x19, [sp, #32]
     d84:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
     d88:	ldur	x0, [x29, #-56]
     d8c:	sub	x8, x29, #0x38
     d90:	add	x8, x8, #0x10
     d94:	cmp	x0, x8
     d98:	b.eq	da0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x604>  // b.none
     d9c:	bl	0 <_ZdlPv>
     da0:	mov	w23, #0x1                   	// #1
     da4:	ldur	x0, [x29, #-240]
     da8:	sub	x8, x29, #0xf0
     dac:	add	x8, x8, #0x10
     db0:	cmp	x0, x8
     db4:	b.eq	dbc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x620>  // b.none
     db8:	bl	0 <free>
     dbc:	cbnz	w23, 9d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>
     dc0:	mov	x0, x21
     dc4:	mov	x1, x20
     dc8:	bl	0 <_ZN4llvm9RecordVal8setValueEPNS_4InitE>
     dcc:	tbz	w0, #0, e68 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6cc>
     dd0:	sub	x8, x29, #0xf0
     dd4:	add	x23, x8, #0x10
     dd8:	stp	x23, xzr, [x29, #-240]
     ddc:	sturb	wzr, [x29, #-224]
     de0:	cbz	x20, 1520 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd84>
     de4:	ldrb	w8, [x20, #8]
     de8:	cmp	w8, #0x3
     dec:	b.ne	e90 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x6f4>  // b.any
     df0:	ldr	w8, [x20, #32]
     df4:	stp	xzr, xzr, [sp, #224]
     df8:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     dfc:	add	x10, x10, #0x0
     e00:	str	w8, [sp, #224]
     e04:	ldr	x8, [sp, #224]
     e08:	mov	w9, #0x109                 	// #265
     e0c:	mov	w11, #0x903                 	// #2307
     e10:	sub	x0, x29, #0x60
     e14:	stp	x10, x8, [x29, #-96]
     e18:	sub	x8, x29, #0x38
     e1c:	strh	w9, [sp, #240]
     e20:	sturh	w11, [x29, #-80]
     e24:	sub	x24, x29, #0x38
     e28:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     e2c:	ldur	x1, [x29, #-56]
     e30:	add	x24, x24, #0x10
     e34:	cmp	x1, x24
     e38:	b.eq	ef4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x758>  // b.none
     e3c:	ldur	x8, [x29, #-240]
     e40:	ldur	x9, [x29, #-224]
     e44:	ldur	q0, [x25, #192]
     e48:	stur	x1, [x29, #-240]
     e4c:	cmp	x8, x23
     e50:	csel	x8, xzr, x8, eq  // eq = none
     e54:	stur	q0, [x25, #8]
     e58:	cbz	x8, f14 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x778>
     e5c:	stur	x8, [x29, #-56]
     e60:	stur	x9, [x29, #-40]
     e64:	b	1004 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x868>
     e68:	mov	w19, wzr
     e6c:	mov	w0, w19
     e70:	add	sp, sp, #0x210
     e74:	ldp	x20, x19, [sp, #80]
     e78:	ldp	x22, x21, [sp, #64]
     e7c:	ldp	x24, x23, [sp, #48]
     e80:	ldp	x26, x25, [sp, #32]
     e84:	ldp	x28, x27, [sp, #16]
     e88:	ldp	x29, x30, [sp], #96
     e8c:	ret
     e90:	sub	w8, w8, #0x1
     e94:	cmp	w8, #0x16
     e98:	b.hi	101c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>  // b.pmore
     e9c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
     ea0:	add	x8, x8, #0x0
     ea4:	mov	w9, #0x103                 	// #259
     ea8:	stp	x8, xzr, [sp, #192]
     eac:	strh	w9, [sp, #208]
     eb0:	ldr	x0, [x20, #16]
     eb4:	sub	x24, x29, #0x60
     eb8:	ldr	x8, [x0]
     ebc:	ldr	x9, [x8, #16]
     ec0:	sub	x8, x29, #0x60
     ec4:	blr	x9
     ec8:	ldrb	w8, [sp, #208]
     ecc:	mov	w9, #0x104                 	// #260
     ed0:	strh	w9, [sp, #176]
     ed4:	stp	x24, xzr, [sp, #160]
     ed8:	cmp	w8, #0x1
     edc:	b.eq	f20 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x784>  // b.none
     ee0:	cbnz	w8, f34 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x798>
     ee4:	mov	w8, #0x100                 	// #256
     ee8:	stp	xzr, xzr, [sp, #224]
     eec:	strh	w8, [sp, #240]
     ef0:	b	f80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>
     ef4:	ldur	x2, [x29, #-48]
     ef8:	cbz	x2, ff0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x854>
     efc:	ldur	x0, [x29, #-240]
     f00:	cmp	x2, #0x1
     f04:	b.ne	fec <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x850>  // b.any
     f08:	ldrb	w8, [x1]
     f0c:	strb	w8, [x0]
     f10:	b	ff0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x854>
     f14:	mov	x8, x24
     f18:	stur	x24, [x29, #-56]
     f1c:	b	1004 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x868>
     f20:	ldr	q0, [sp, #160]
     f24:	ldr	x8, [sp, #176]
     f28:	str	q0, [sp, #224]
     f2c:	str	x8, [sp, #240]
     f30:	b	f80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>
     f34:	ldrb	w9, [sp, #209]
     f38:	ldr	x10, [sp, #192]
     f3c:	mov	w11, #0x2                   	// #2
     f40:	add	x12, sp, #0xc0
     f44:	cmp	w9, #0x1
     f48:	csel	w9, w8, w11, eq  // eq = none
     f4c:	sub	x13, x29, #0x60
     f50:	mov	w14, #0x4                   	// #4
     f54:	csel	x8, x10, x12, eq  // eq = none
     f58:	cmp	w9, #0x2
     f5c:	stp	x8, x13, [sp, #224]
     f60:	strb	w9, [sp, #240]
     f64:	strb	w14, [sp, #241]
     f68:	b.ne	f80 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x7e4>  // b.any
     f6c:	ldrb	w9, [x8, #16]
     f70:	cbz	w9, 1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>
     f74:	ldrb	w8, [x8, #17]
     f78:	cmp	w8, #0x1
     f7c:	b.eq	1560 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xdc4>  // b.none
     f80:	sub	x8, x29, #0x38
     f84:	add	x0, sp, #0xe0
     f88:	sub	x24, x29, #0x38
     f8c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     f90:	ldur	x1, [x29, #-56]
     f94:	add	x24, x24, #0x10
     f98:	cmp	x1, x24
     f9c:	b.eq	fcc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x830>  // b.none
     fa0:	ldur	x8, [x29, #-240]
     fa4:	ldur	x9, [x29, #-224]
     fa8:	ldur	q0, [x25, #192]
     fac:	stur	x1, [x29, #-240]
     fb0:	cmp	x8, x23
     fb4:	csel	x8, xzr, x8, eq  // eq = none
     fb8:	stur	q0, [x25, #8]
     fbc:	cbz	x8, 1480 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xce4>
     fc0:	stur	x8, [x29, #-56]
     fc4:	stur	x9, [x29, #-40]
     fc8:	b	14a4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd08>
     fcc:	ldur	x2, [x29, #-48]
     fd0:	cbz	x2, 1490 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf4>
     fd4:	ldur	x0, [x29, #-240]
     fd8:	cmp	x2, #0x1
     fdc:	b.ne	148c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf0>  // b.any
     fe0:	ldrb	w8, [x1]
     fe4:	strb	w8, [x0]
     fe8:	b	1490 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcf4>
     fec:	bl	0 <memcpy>
     ff0:	ldur	x8, [x29, #-48]
     ff4:	ldur	x9, [x29, #-240]
     ff8:	stur	x8, [x29, #-232]
     ffc:	strb	wzr, [x9, x8]
    1000:	ldur	x8, [x29, #-56]
    1004:	stur	xzr, [x29, #-48]
    1008:	strb	wzr, [x8]
    100c:	ldur	x0, [x29, #-56]
    1010:	cmp	x0, x24
    1014:	b.eq	101c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>  // b.none
    1018:	bl	0 <_ZdlPv>
    101c:	ldr	x8, [x22]
    1020:	mov	x0, x22
    1024:	ldr	x9, [x8, #48]
    1028:	add	x8, sp, #0x40
    102c:	blr	x9
    1030:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1034:	add	x3, x3, #0x0
    1038:	add	x0, sp, #0x40
    103c:	mov	w4, #0x7                   	// #7
    1040:	mov	x1, xzr
    1044:	mov	x2, xzr
    1048:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    104c:	add	x8, sp, #0x60
    1050:	add	x22, x8, #0x10
    1054:	str	x22, [sp, #96]
    1058:	mov	x8, x0
    105c:	ldr	x9, [x8], #16
    1060:	cmp	x9, x8
    1064:	b.eq	1078 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8dc>  // b.none
    1068:	str	x9, [sp, #96]
    106c:	ldr	x9, [x0, #16]
    1070:	str	x9, [sp, #112]
    1074:	b	1080 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x8e4>
    1078:	ldr	q0, [x9]
    107c:	str	q0, [x22]
    1080:	ldr	x9, [x0, #8]
    1084:	str	x9, [sp, #104]
    1088:	stp	x8, xzr, [x0]
    108c:	strb	wzr, [x0, #16]
    1090:	ldr	x8, [sp, #104]
    1094:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1098:	sub	x8, x9, x8
    109c:	cmp	x8, #0xa
    10a0:	b.ls	14f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
    10a4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    10a8:	add	x1, x1, #0x0
    10ac:	add	x0, sp, #0x60
    10b0:	mov	w2, #0xb                   	// #11
    10b4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    10b8:	add	x8, sp, #0x80
    10bc:	add	x24, x8, #0x10
    10c0:	str	x24, [sp, #128]
    10c4:	mov	x8, x0
    10c8:	ldr	x9, [x8], #16
    10cc:	cmp	x9, x8
    10d0:	b.eq	10e4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x948>  // b.none
    10d4:	str	x9, [sp, #128]
    10d8:	ldr	x9, [x0, #16]
    10dc:	str	x9, [sp, #144]
    10e0:	b	10ec <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x950>
    10e4:	ldr	q0, [x9]
    10e8:	str	q0, [x24]
    10ec:	ldr	x9, [x0, #8]
    10f0:	str	x9, [sp, #136]
    10f4:	stp	x8, xzr, [x0]
    10f8:	strb	wzr, [x0, #16]
    10fc:	ldr	x8, [x21, #8]
    1100:	add	x21, sp, #0x20
    1104:	and	x0, x8, #0xfffffffffffffff8
    1108:	ldr	x8, [x0]
    110c:	ldr	x9, [x8, #16]
    1110:	add	x8, sp, #0x20
    1114:	blr	x9
    1118:	ldp	x3, x4, [sp, #128]
    111c:	ldp	x1, x2, [sp, #32]
    1120:	ldr	x9, [sp, #144]
    1124:	mov	w10, #0xf                   	// #15
    1128:	cmp	x3, x24
    112c:	add	x8, x2, x4
    1130:	csel	x9, x10, x9, eq  // eq = none
    1134:	cmp	x8, x9
    1138:	b.ls	1158 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9bc>  // b.plast
    113c:	ldr	x9, [sp, #48]
    1140:	add	x10, x21, #0x10
    1144:	cmp	x1, x10
    1148:	mov	w10, #0xf                   	// #15
    114c:	csel	x9, x10, x9, eq  // eq = none
    1150:	cmp	x8, x9
    1154:	b.ls	1164 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9c8>  // b.plast
    1158:	add	x0, sp, #0x80
    115c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1160:	b	1174 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x9d8>
    1164:	add	x0, sp, #0x20
    1168:	mov	x1, xzr
    116c:	mov	x2, xzr
    1170:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1174:	add	x8, sp, #0xa0
    1178:	add	x21, x8, #0x10
    117c:	str	x21, [sp, #160]
    1180:	mov	x8, x0
    1184:	ldr	x9, [x8], #16
    1188:	cmp	x9, x8
    118c:	b.eq	11a0 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa04>  // b.none
    1190:	str	x9, [sp, #160]
    1194:	ldr	x9, [x0, #16]
    1198:	str	x9, [sp, #176]
    119c:	b	11a8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa0c>
    11a0:	ldr	q0, [x9]
    11a4:	str	q0, [x21]
    11a8:	ldr	x9, [x0, #8]
    11ac:	str	x9, [sp, #168]
    11b0:	stp	x8, xzr, [x0]
    11b4:	strb	wzr, [x0, #16]
    11b8:	ldr	x8, [sp, #168]
    11bc:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    11c0:	sub	x8, x9, x8
    11c4:	cmp	x8, #0x23
    11c8:	b.ls	14f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.plast
    11cc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    11d0:	add	x1, x1, #0x0
    11d4:	add	x0, sp, #0xa0
    11d8:	mov	w2, #0x24                  	// #36
    11dc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    11e0:	add	x8, sp, #0xc0
    11e4:	add	x25, x8, #0x10
    11e8:	str	x25, [sp, #192]
    11ec:	mov	x8, x0
    11f0:	ldr	x9, [x8], #16
    11f4:	cmp	x9, x8
    11f8:	b.eq	120c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa70>  // b.none
    11fc:	str	x9, [sp, #192]
    1200:	ldr	x9, [x0, #16]
    1204:	str	x9, [sp, #208]
    1208:	b	1214 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xa78>
    120c:	ldr	q0, [x9]
    1210:	str	q0, [x25]
    1214:	ldr	x9, [x0, #8]
    1218:	mov	x26, sp
    121c:	str	x9, [sp, #200]
    1220:	stp	x8, xzr, [x0]
    1224:	strb	wzr, [x0, #16]
    1228:	ldr	x8, [x20]
    122c:	mov	x0, x20
    1230:	ldr	x9, [x8, #40]
    1234:	mov	x8, sp
    1238:	blr	x9
    123c:	ldp	x3, x4, [sp, #192]
    1240:	ldp	x1, x2, [sp]
    1244:	ldr	x9, [sp, #208]
    1248:	mov	w10, #0xf                   	// #15
    124c:	cmp	x3, x25
    1250:	add	x8, x2, x4
    1254:	csel	x9, x10, x9, eq  // eq = none
    1258:	cmp	x8, x9
    125c:	b.ls	127c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xae0>  // b.plast
    1260:	ldr	x9, [sp, #16]
    1264:	add	x10, x26, #0x10
    1268:	cmp	x1, x10
    126c:	mov	w10, #0xf                   	// #15
    1270:	csel	x9, x10, x9, eq  // eq = none
    1274:	cmp	x8, x9
    1278:	b.ls	1288 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xaec>  // b.plast
    127c:	add	x0, sp, #0xc0
    1280:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1284:	b	1298 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xafc>
    1288:	mov	x0, sp
    128c:	mov	x1, xzr
    1290:	mov	x2, xzr
    1294:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1298:	add	x8, sp, #0xe0
    129c:	add	x20, x8, #0x10
    12a0:	str	x20, [sp, #224]
    12a4:	mov	x8, x0
    12a8:	ldr	x9, [x8], #16
    12ac:	cmp	x9, x8
    12b0:	b.eq	12c4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb28>  // b.none
    12b4:	str	x9, [sp, #224]
    12b8:	ldr	x9, [x0, #16]
    12bc:	str	x9, [sp, #240]
    12c0:	b	12cc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb30>
    12c4:	ldr	q0, [x9]
    12c8:	str	q0, [x20]
    12cc:	ldr	x9, [x0, #8]
    12d0:	str	x9, [sp, #232]
    12d4:	stp	x8, xzr, [x0]
    12d8:	strb	wzr, [x0, #16]
    12dc:	ldp	x1, x2, [x29, #-240]
    12e0:	add	x0, sp, #0xe0
    12e4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    12e8:	sub	x8, x29, #0x60
    12ec:	add	x26, x8, #0x10
    12f0:	stur	x26, [x29, #-96]
    12f4:	mov	x8, x0
    12f8:	ldr	x9, [x8], #16
    12fc:	cmp	x9, x8
    1300:	b.eq	1314 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb78>  // b.none
    1304:	stur	x9, [x29, #-96]
    1308:	ldr	x9, [x0, #16]
    130c:	stur	x9, [x29, #-80]
    1310:	b	131c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xb80>
    1314:	ldr	q0, [x9]
    1318:	str	q0, [x26]
    131c:	ldr	x9, [x0, #8]
    1320:	stur	x9, [x29, #-88]
    1324:	stp	x8, xzr, [x0]
    1328:	strb	wzr, [x0, #16]
    132c:	ldur	x8, [x29, #-88]
    1330:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1334:	cmp	x8, x9
    1338:	b.eq	14f4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd58>  // b.none
    133c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1340:	add	x1, x1, #0x0
    1344:	sub	x0, x29, #0x60
    1348:	mov	w2, #0x1                   	// #1
    134c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1350:	sub	x8, x29, #0x38
    1354:	add	x27, x8, #0x10
    1358:	stur	x27, [x29, #-56]
    135c:	mov	x8, x0
    1360:	ldr	x9, [x8], #16
    1364:	cmp	x9, x8
    1368:	b.eq	137c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xbe0>  // b.none
    136c:	stur	x9, [x29, #-56]
    1370:	ldr	x9, [x0, #16]
    1374:	stur	x9, [x29, #-40]
    1378:	b	1384 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xbe8>
    137c:	ldr	q0, [x9]
    1380:	str	q0, [x27]
    1384:	ldr	x9, [x0, #8]
    1388:	mov	w10, #0x104                 	// #260
    138c:	sub	x11, x29, #0x38
    1390:	add	x2, sp, #0x108
    1394:	stur	x9, [x29, #-48]
    1398:	stp	x8, xzr, [x0]
    139c:	strb	wzr, [x0, #16]
    13a0:	sub	x0, x29, #0x18
    13a4:	mov	w1, #0x1                   	// #1
    13a8:	strh	w10, [sp, #280]
    13ac:	stp	x11, xzr, [sp, #264]
    13b0:	stur	x19, [x29, #-24]
    13b4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    13b8:	ldur	x0, [x29, #-56]
    13bc:	cmp	x0, x27
    13c0:	b.eq	13c8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc2c>  // b.none
    13c4:	bl	0 <_ZdlPv>
    13c8:	ldur	x0, [x29, #-96]
    13cc:	cmp	x0, x26
    13d0:	b.eq	13d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc3c>  // b.none
    13d4:	bl	0 <_ZdlPv>
    13d8:	ldr	x0, [sp, #224]
    13dc:	cmp	x0, x20
    13e0:	b.eq	13e8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc4c>  // b.none
    13e4:	bl	0 <_ZdlPv>
    13e8:	ldr	x0, [sp]
    13ec:	mov	x8, sp
    13f0:	add	x8, x8, #0x10
    13f4:	cmp	x0, x8
    13f8:	b.eq	1400 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc64>  // b.none
    13fc:	bl	0 <_ZdlPv>
    1400:	ldr	x0, [sp, #192]
    1404:	cmp	x0, x25
    1408:	b.eq	1410 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc74>  // b.none
    140c:	bl	0 <_ZdlPv>
    1410:	ldr	x0, [sp, #160]
    1414:	cmp	x0, x21
    1418:	b.eq	1420 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc84>  // b.none
    141c:	bl	0 <_ZdlPv>
    1420:	ldr	x0, [sp, #32]
    1424:	add	x8, sp, #0x20
    1428:	add	x8, x8, #0x10
    142c:	cmp	x0, x8
    1430:	b.eq	1438 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xc9c>  // b.none
    1434:	bl	0 <_ZdlPv>
    1438:	ldr	x0, [sp, #128]
    143c:	cmp	x0, x24
    1440:	b.eq	1448 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcac>  // b.none
    1444:	bl	0 <_ZdlPv>
    1448:	ldr	x0, [sp, #96]
    144c:	cmp	x0, x22
    1450:	b.eq	1458 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcbc>  // b.none
    1454:	bl	0 <_ZdlPv>
    1458:	ldr	x0, [sp, #64]
    145c:	add	x8, sp, #0x40
    1460:	add	x8, x8, #0x10
    1464:	cmp	x0, x8
    1468:	b.eq	1470 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xcd4>  // b.none
    146c:	bl	0 <_ZdlPv>
    1470:	ldur	x0, [x29, #-240]
    1474:	cmp	x0, x23
    1478:	b.ne	9d4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x238>  // b.any
    147c:	b	9d8 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x23c>
    1480:	mov	x8, x24
    1484:	stur	x24, [x29, #-56]
    1488:	b	14a4 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd08>
    148c:	bl	0 <memcpy>
    1490:	ldur	x8, [x29, #-48]
    1494:	ldur	x9, [x29, #-240]
    1498:	stur	x8, [x29, #-232]
    149c:	strb	wzr, [x9, x8]
    14a0:	ldur	x8, [x29, #-56]
    14a4:	stur	xzr, [x29, #-48]
    14a8:	strb	wzr, [x8]
    14ac:	ldur	x0, [x29, #-56]
    14b0:	cmp	x0, x24
    14b4:	b.eq	14bc <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0xd20>  // b.none
    14b8:	bl	0 <_ZdlPv>
    14bc:	ldur	x0, [x29, #-96]
    14c0:	sub	x8, x29, #0x60
    14c4:	add	x8, x8, #0x10
    14c8:	cmp	x0, x8
    14cc:	b.ne	1018 <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x87c>  // b.any
    14d0:	b	101c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b+0x880>
    14d4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    14d8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    14dc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    14e0:	add	x0, x0, #0x0
    14e4:	add	x1, x1, #0x0
    14e8:	add	x3, x3, #0x0
    14ec:	mov	w2, #0x95                  	// #149
    14f0:	bl	0 <__assert_fail>
    14f4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    14f8:	add	x0, x0, #0x0
    14fc:	bl	0 <_ZSt20__throw_length_errorPKc>
    1500:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1504:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1508:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    150c:	add	x0, x0, #0x0
    1510:	add	x1, x1, #0x0
    1514:	add	x3, x3, #0x0
    1518:	mov	w2, #0xfa                  	// #250
    151c:	bl	0 <__assert_fail>
    1520:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1524:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1528:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    152c:	add	x0, x0, #0x0
    1530:	add	x1, x1, #0x0
    1534:	add	x3, x3, #0x0
    1538:	mov	w2, #0x69                  	// #105
    153c:	bl	0 <__assert_fail>
    1540:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1544:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1548:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    154c:	add	x0, x0, #0x0
    1550:	add	x1, x1, #0x0
    1554:	add	x3, x3, #0x0
    1558:	mov	w2, #0x43                  	// #67
    155c:	bl	0 <__assert_fail>
    1560:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1564:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1568:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    156c:	add	x0, x0, #0x0
    1570:	add	x1, x1, #0x0
    1574:	add	x3, x3, #0x0
    1578:	mov	w2, #0xb8                  	// #184
    157c:	bl	0 <__assert_fail>

0000000000001580 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>:
    1580:	stp	x29, x30, [sp, #-96]!
    1584:	stp	x28, x27, [sp, #16]
    1588:	stp	x26, x25, [sp, #32]
    158c:	stp	x24, x23, [sp, #48]
    1590:	stp	x22, x21, [sp, #64]
    1594:	stp	x20, x19, [sp, #80]
    1598:	mov	x29, sp
    159c:	sub	sp, sp, #0x1c0
    15a0:	ldr	x19, [x2, #16]
    15a4:	mov	x20, x2
    15a8:	mov	x21, x1
    15ac:	mov	x22, x0
    15b0:	ldr	w8, [x19, #80]
    15b4:	cbz	w8, 15e8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x68>
    15b8:	ldr	x23, [x19, #72]
    15bc:	add	x8, x8, x8, lsl #1
    15c0:	lsl	x24, x8, #3
    15c4:	ldr	x2, [x20]
    15c8:	mov	x0, x22
    15cc:	mov	x1, x21
    15d0:	mov	x3, x23
    15d4:	bl	1d0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    15d8:	tbnz	w0, #0, 1720 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a0>
    15dc:	subs	x24, x24, #0x18
    15e0:	add	x23, x23, #0x18
    15e4:	b.ne	15c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x44>  // b.any
    15e8:	ldr	w27, [x19, #64]
    15ec:	ldr	w8, [x20, #32]
    15f0:	cmp	w27, w8
    15f4:	b.cs	162c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xac>  // b.hs, b.nlast
    15f8:	ldr	x8, [x20]
    15fc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1600:	add	x9, x9, #0x0
    1604:	stp	x9, xzr, [x29, #-80]
    1608:	mov	w9, #0x103                 	// #259
    160c:	add	x0, sp, #0x70
    1610:	sub	x2, x29, #0x50
    1614:	mov	w1, #0x1                   	// #1
    1618:	sturh	w9, [x29, #-64]
    161c:	str	x8, [sp, #112]
    1620:	mov	w19, #0x1                   	// #1
    1624:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1628:	b	19e0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x460>
    162c:	ldr	x24, [x19, #56]
    1630:	sturb	wzr, [x29, #-64]
    1634:	adrp	x9, 0 <_ZTVN4llvm11MapResolverE>
    1638:	ldr	x9, [x9]
    163c:	add	x25, sp, #0x90
    1640:	stp	xzr, xzr, [x29, #-48]
    1644:	stur	xzr, [x29, #-56]
    1648:	add	x9, x9, #0x10
    164c:	stp	x9, x21, [x29, #-80]
    1650:	stur	wzr, [x29, #-32]
    1654:	cbz	w27, 1728 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>
    1658:	sub	x9, x29, #0x50
    165c:	mov	x28, xzr
    1660:	add	x23, x9, #0x18
    1664:	cmp	x28, w8, uxtw
    1668:	b.cs	16a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x120>  // b.hs, b.nlast
    166c:	ldr	x8, [x20, #24]
    1670:	lsl	x9, x28, #3
    1674:	ldr	x2, [x20]
    1678:	ldr	x3, [x24, x9]
    167c:	ldr	x6, [x8, x9]
    1680:	mov	x0, x22
    1684:	mov	x1, x21
    1688:	mov	x4, xzr
    168c:	mov	x5, xzr
    1690:	mov	w7, wzr
    1694:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    1698:	tbz	w0, #0, 16c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x148>
    169c:	b	19c4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x444>
    16a0:	ldr	x9, [x24, x28, lsl #3]
    16a4:	ldr	x8, [x21, #72]
    16a8:	ldr	x10, [x8], #24
    16ac:	cmp	x10, x9
    16b0:	b.ne	16a8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x128>  // b.any
    16b4:	ldur	x0, [x8, #-8]
    16b8:	ldr	x8, [x0]
    16bc:	ldr	x8, [x8, #24]
    16c0:	blr	x8
    16c4:	tbz	w0, #0, 1928 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x3a8>
    16c8:	ldr	x8, [x24, x28, lsl #3]
    16cc:	ldr	x9, [x21, #72]
    16d0:	ldr	x10, [x9], #24
    16d4:	cmp	x10, x8
    16d8:	b.ne	16d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x150>  // b.any
    16dc:	ldur	x26, [x9, #-8]
    16e0:	add	x1, sp, #0x70
    16e4:	mov	x0, x23
    16e8:	str	x8, [sp, #112]
    16ec:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    16f0:	str	x26, [x0, #8]
    16f4:	strb	wzr, [x0, #16]
    16f8:	ldr	x1, [x24, x28, lsl #3]
    16fc:	mov	x0, x21
    1700:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1704:	add	x28, x28, #0x1
    1708:	cmp	x28, x27
    170c:	b.eq	1728 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x1a8>  // b.none
    1710:	ldr	w8, [x20, #32]
    1714:	cmp	x28, w8, uxtw
    1718:	b.cs	16a0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x120>  // b.hs, b.nlast
    171c:	b	166c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0xec>
    1720:	mov	w19, #0x1                   	// #1
    1724:	b	19e0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x460>
    1728:	ldrb	w8, [x21, #125]
    172c:	cbz	w8, 1798 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x218>
    1730:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1734:	add	x0, x0, #0x0
    1738:	mov	w1, #0x4                   	// #4
    173c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1740:	ldr	x22, [x21]
    1744:	mov	x23, x0
    1748:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    174c:	add	x0, x0, #0x0
    1750:	mov	w1, #0x1                   	// #1
    1754:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1758:	mov	x1, x0
    175c:	mov	x0, x22
    1760:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    1764:	mov	x1, x23
    1768:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    176c:	cbz	x0, 1d2c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7ac>
    1770:	ldrb	w8, [x0, #8]
    1774:	cmp	w8, #0xb
    1778:	b.ne	1784 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x204>  // b.any
    177c:	mov	x1, x21
    1780:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    1784:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    1788:	ldr	x1, [x1]
    178c:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    1790:	mov	x22, x0
    1794:	b	179c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x21c>
    1798:	ldr	x22, [x21]
    179c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    17a0:	add	x0, x0, #0x0
    17a4:	mov	w1, #0x4                   	// #4
    17a8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    17ac:	ldr	x23, [x19]
    17b0:	mov	x24, x0
    17b4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    17b8:	add	x0, x0, #0x0
    17bc:	mov	w1, #0x1                   	// #1
    17c0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    17c4:	mov	x1, x0
    17c8:	mov	x0, x23
    17cc:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    17d0:	mov	x1, x24
    17d4:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    17d8:	cbz	x0, 1d2c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7ac>
    17dc:	ldrb	w8, [x0, #8]
    17e0:	cmp	w8, #0xb
    17e4:	b.ne	17f0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x270>  // b.any
    17e8:	mov	x1, x19
    17ec:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    17f0:	sub	x8, x29, #0x50
    17f4:	str	x0, [sp, #112]
    17f8:	add	x0, x8, #0x18
    17fc:	add	x1, sp, #0x70
    1800:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1804:	str	x22, [x0, #8]
    1808:	strb	wzr, [x0, #16]
    180c:	sub	x1, x29, #0x50
    1810:	mov	x0, x21
    1814:	mov	x2, xzr
    1818:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    181c:	ldr	w8, [x19, #96]
    1820:	cbz	w8, 18e8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x368>
    1824:	ldr	x22, [x19, #88]
    1828:	mov	w9, #0x18                  	// #24
    182c:	madd	x23, x8, x9, x22
    1830:	b	184c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2cc>
    1834:	ldp	x2, x3, [x22, #8]
    1838:	mov	x0, x21
    183c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1840:	add	x22, x22, #0x18
    1844:	cmp	x22, x23
    1848:	b.eq	18e8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x368>  // b.none
    184c:	ldr	w9, [x21, #96]
    1850:	ldr	x1, [x22]
    1854:	cbz	w9, 1834 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2b4>
    1858:	ldr	x8, [x21, #88]
    185c:	add	x9, x9, x9, lsl #1
    1860:	lsl	x9, x9, #3
    1864:	ldr	x10, [x8], #24
    1868:	cmp	x10, x1
    186c:	b.eq	187c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2fc>  // b.none
    1870:	subs	x9, x9, #0x18
    1874:	b.ne	1864 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2e4>  // b.any
    1878:	b	1834 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x2b4>
    187c:	ldr	x8, [x1]
    1880:	cbz	x8, 1a0c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x48c>
    1884:	ldrb	w9, [x8, #8]
    1888:	cmp	w9, #0x12
    188c:	b.ne	1d4c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7cc>  // b.any
    1890:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1894:	ldr	x9, [x20]
    1898:	ldur	q0, [x8, #24]
    189c:	add	x10, x10, #0x0
    18a0:	sub	x11, x29, #0x70
    18a4:	mov	w8, #0x503                 	// #1283
    18a8:	stp	x10, x11, [sp, #32]
    18ac:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    18b0:	strh	w8, [sp, #48]
    18b4:	add	x8, sp, #0x20
    18b8:	add	x10, x10, #0x0
    18bc:	stp	x8, x10, [sp, #112]
    18c0:	mov	w8, #0x302                 	// #770
    18c4:	sub	x0, x29, #0x90
    18c8:	add	x2, sp, #0x70
    18cc:	mov	w1, #0x1                   	// #1
    18d0:	strh	w8, [sp, #128]
    18d4:	str	q0, [x25, #192]
    18d8:	stur	x9, [x29, #-144]
    18dc:	mov	w19, #0x1                   	// #1
    18e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    18e4:	b	19c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x448>
    18e8:	ldr	w9, [x21, #96]
    18ec:	cbz	w9, 1910 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x390>
    18f0:	ldr	x8, [x21, #88]
    18f4:	add	x9, x9, x9, lsl #1
    18f8:	lsl	x9, x9, #3
    18fc:	ldr	x10, [x8], #24
    1900:	cmp	x10, x19
    1904:	b.eq	1a04 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x484>  // b.none
    1908:	subs	x9, x9, #0x18
    190c:	b.ne	18fc <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x37c>  // b.any
    1910:	ldp	x2, x3, [x20]
    1914:	mov	x0, x21
    1918:	mov	x1, x19
    191c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1920:	mov	w19, wzr
    1924:	b	19c8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x448>
    1928:	ldr	x20, [x20]
    192c:	stp	xzr, xzr, [sp, #168]
    1930:	str	w28, [sp, #168]
    1934:	mov	w10, #0x903                 	// #2307
    1938:	mov	w8, #0x109                 	// #265
    193c:	strh	w10, [sp, #208]
    1940:	ldr	x10, [sp, #168]
    1944:	strh	w8, [sp, #184]
    1948:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    194c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1950:	add	x11, sp, #0xc0
    1954:	add	x8, x8, #0x0
    1958:	add	x9, x9, #0x0
    195c:	stp	x11, x8, [sp, #216]
    1960:	mov	w8, #0x302                 	// #770
    1964:	stp	x9, x10, [sp, #192]
    1968:	strh	w8, [sp, #232]
    196c:	ldr	x0, [x24, w28, uxtw #3]
    1970:	add	x22, sp, #0x70
    1974:	ldr	x8, [x0]
    1978:	ldr	x9, [x8, #48]
    197c:	add	x8, sp, #0x70
    1980:	blr	x9
    1984:	ldrb	w21, [sp, #232]
    1988:	mov	w8, #0x104                 	// #260
    198c:	strh	w8, [sp, #160]
    1990:	stp	x22, xzr, [sp, #144]
    1994:	cmp	w21, #0x1
    1998:	b.eq	1a2c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4ac>  // b.none
    199c:	cbnz	w21, 1a4c <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x4cc>
    19a0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    19a4:	mov	w8, #0x100                 	// #256
    19a8:	add	x9, x9, #0x0
    19ac:	mov	w10, #0x103                 	// #259
    19b0:	stp	xzr, xzr, [x29, #-208]
    19b4:	sturh	w8, [x29, #-192]
    19b8:	stp	x9, xzr, [sp, #88]
    19bc:	strh	w10, [sp, #104]
    19c0:	b	1ad4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x554>
    19c4:	mov	w19, #0x1                   	// #1
    19c8:	adrp	x20, 0 <_ZTVN4llvm11MapResolverE>
    19cc:	ldr	x20, [x20]
    19d0:	ldur	x0, [x29, #-48]
    19d4:	add	x8, x20, #0x10
    19d8:	stur	x8, [x29, #-80]
    19dc:	bl	0 <_ZdlPv>
    19e0:	mov	w0, w19
    19e4:	add	sp, sp, #0x1c0
    19e8:	ldp	x20, x19, [sp, #80]
    19ec:	ldp	x22, x21, [sp, #64]
    19f0:	ldp	x24, x23, [sp, #48]
    19f4:	ldp	x26, x25, [sp, #32]
    19f8:	ldp	x28, x27, [sp, #16]
    19fc:	ldp	x29, x30, [sp], #96
    1a00:	ret
    1a04:	ldr	x8, [x19]
    1a08:	cbnz	x8, 1884 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x304>
    1a0c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1a10:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1a14:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1a18:	add	x0, x0, #0x0
    1a1c:	add	x1, x1, #0x0
    1a20:	add	x3, x3, #0x0
    1a24:	mov	w2, #0x69                  	// #105
    1a28:	bl	0 <__assert_fail>
    1a2c:	add	x9, sp, #0x90
    1a30:	ldr	x8, [sp, #160]
    1a34:	ldr	q0, [x9]
    1a38:	add	x25, sp, #0x90
    1a3c:	and	w21, w8, #0xff
    1a40:	str	q0, [x9, #96]
    1a44:	stur	x8, [x29, #-192]
    1a48:	b	1ab4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x534>
    1a4c:	ldrb	w8, [sp, #233]
    1a50:	ldr	x9, [sp, #216]
    1a54:	mov	w10, #0x2                   	// #2
    1a58:	add	x11, sp, #0xd8
    1a5c:	cmp	w8, #0x1
    1a60:	csel	w10, w21, w10, eq  // eq = none
    1a64:	add	x12, sp, #0x70
    1a68:	mov	w13, #0x4                   	// #4
    1a6c:	csel	x8, x9, x11, eq  // eq = none
    1a70:	cmp	w10, #0x2
    1a74:	stp	x8, x12, [x29, #-208]
    1a78:	sturb	w10, [x29, #-192]
    1a7c:	sturb	w13, [x29, #-191]
    1a80:	b.ne	1ab4 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x534>  // b.any
    1a84:	ldrb	w9, [x8, #16]
    1a88:	cbz	w9, 1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>
    1a8c:	ldrb	w8, [x8, #17]
    1a90:	cmp	w8, #0x1
    1a94:	b.eq	1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>  // b.none
    1a98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1a9c:	add	x8, x8, #0x0
    1aa0:	mov	w9, #0x103                 	// #259
    1aa4:	mov	w21, #0x2                   	// #2
    1aa8:	stp	x8, xzr, [sp, #88]
    1aac:	strh	w9, [sp, #104]
    1ab0:	b	1ae8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x568>
    1ab4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1ab8:	add	x8, x8, #0x0
    1abc:	mov	w9, #0x103                 	// #259
    1ac0:	cmp	w21, #0x1
    1ac4:	stp	x8, xzr, [sp, #88]
    1ac8:	strh	w9, [sp, #104]
    1acc:	b.eq	1b40 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5c0>  // b.none
    1ad0:	cbnz	w21, 1ae8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x568>
    1ad4:	mov	w8, #0x100                 	// #256
    1ad8:	mov	w21, wzr
    1adc:	stp	xzr, xzr, [x29, #-176]
    1ae0:	sturh	w8, [x29, #-160]
    1ae4:	b	1b54 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5d4>
    1ae8:	ldurb	w8, [x29, #-191]
    1aec:	ldur	x9, [x29, #-208]
    1af0:	mov	w10, #0x2                   	// #2
    1af4:	sub	x11, x29, #0xd0
    1af8:	cmp	w8, #0x1
    1afc:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b00:	csel	w10, w21, w10, eq  // eq = none
    1b04:	add	x12, x12, #0x0
    1b08:	mov	w13, #0x3                   	// #3
    1b0c:	csel	x8, x9, x11, eq  // eq = none
    1b10:	cmp	w10, #0x2
    1b14:	stp	x8, x12, [x29, #-176]
    1b18:	sturb	w10, [x29, #-160]
    1b1c:	sturb	w13, [x29, #-159]
    1b20:	b.ne	1b54 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5d4>  // b.any
    1b24:	ldrb	w9, [x8, #16]
    1b28:	cbz	w9, 1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>
    1b2c:	ldrb	w8, [x8, #17]
    1b30:	cmp	w8, #0x1
    1b34:	b.eq	1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>  // b.none
    1b38:	mov	w21, #0x2                   	// #2
    1b3c:	b	1b54 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x5d4>
    1b40:	ldr	x8, [sp, #104]
    1b44:	ldur	q0, [sp, #88]
    1b48:	and	w21, w8, #0xff
    1b4c:	str	q0, [x25, #128]
    1b50:	stur	x8, [x29, #-160]
    1b54:	ldr	x0, [x19]
    1b58:	add	x19, sp, #0x20
    1b5c:	ldr	x8, [x0]
    1b60:	ldr	x9, [x8, #48]
    1b64:	add	x8, sp, #0x20
    1b68:	blr	x9
    1b6c:	mov	w8, #0x104                 	// #260
    1b70:	cmp	w21, #0x1
    1b74:	strh	w8, [sp, #80]
    1b78:	stp	x19, xzr, [sp, #64]
    1b7c:	b.eq	1ba8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x628>  // b.none
    1b80:	cbnz	w21, 1bc0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x640>
    1b84:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1b88:	mov	w8, #0x100                 	// #256
    1b8c:	add	x9, x9, #0x0
    1b90:	mov	w10, #0x103                 	// #259
    1b94:	stp	xzr, xzr, [x29, #-144]
    1b98:	sturh	w8, [x29, #-128]
    1b9c:	stp	x9, xzr, [sp, #8]
    1ba0:	strh	w10, [sp, #24]
    1ba4:	b	1c48 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6c8>
    1ba8:	ldr	x8, [sp, #80]
    1bac:	ldr	q0, [sp, #64]
    1bb0:	and	w21, w8, #0xff
    1bb4:	str	q0, [x25, #160]
    1bb8:	stur	x8, [x29, #-128]
    1bbc:	b	1c28 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6a8>
    1bc0:	ldurb	w8, [x29, #-159]
    1bc4:	ldur	x9, [x29, #-176]
    1bc8:	mov	w10, #0x2                   	// #2
    1bcc:	sub	x11, x29, #0xb0
    1bd0:	cmp	w8, #0x1
    1bd4:	csel	w10, w21, w10, eq  // eq = none
    1bd8:	add	x12, sp, #0x20
    1bdc:	mov	w13, #0x4                   	// #4
    1be0:	csel	x8, x9, x11, eq  // eq = none
    1be4:	cmp	w10, #0x2
    1be8:	stp	x8, x12, [x29, #-144]
    1bec:	sturb	w10, [x29, #-128]
    1bf0:	sturb	w13, [x29, #-127]
    1bf4:	b.ne	1c28 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6a8>  // b.any
    1bf8:	ldrb	w9, [x8, #16]
    1bfc:	cbz	w9, 1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>
    1c00:	ldrb	w8, [x8, #17]
    1c04:	cmp	w8, #0x1
    1c08:	b.eq	1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>  // b.none
    1c0c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c10:	add	x8, x8, #0x0
    1c14:	mov	w9, #0x103                 	// #259
    1c18:	mov	w21, #0x2                   	// #2
    1c1c:	stp	x8, xzr, [sp, #8]
    1c20:	strh	w9, [sp, #24]
    1c24:	b	1c58 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6d8>
    1c28:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c2c:	add	x8, x8, #0x0
    1c30:	mov	w9, #0x103                 	// #259
    1c34:	cmp	w21, #0x1
    1c38:	stp	x8, xzr, [sp, #8]
    1c3c:	strh	w9, [sp, #24]
    1c40:	b.eq	1cc8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x748>  // b.none
    1c44:	cbnz	w21, 1c58 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x6d8>
    1c48:	mov	w8, #0x100                 	// #256
    1c4c:	stp	xzr, xzr, [x29, #-112]
    1c50:	sturh	w8, [x29, #-96]
    1c54:	b	1cd8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x758>
    1c58:	ldurb	w8, [x29, #-127]
    1c5c:	ldur	x9, [x29, #-144]
    1c60:	mov	w10, #0x2                   	// #2
    1c64:	sub	x11, x29, #0x90
    1c68:	cmp	w8, #0x1
    1c6c:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1c70:	csel	w10, w21, w10, eq  // eq = none
    1c74:	add	x12, x12, #0x0
    1c78:	mov	w13, #0x3                   	// #3
    1c7c:	csel	x8, x9, x11, eq  // eq = none
    1c80:	cmp	w10, #0x2
    1c84:	stp	x8, x12, [x29, #-112]
    1c88:	sturb	w10, [x29, #-96]
    1c8c:	sturb	w13, [x29, #-95]
    1c90:	b.ne	1cd8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x758>  // b.any
    1c94:	ldrb	w9, [x8, #16]
    1c98:	cbz	w9, 1ca8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x728>
    1c9c:	ldrb	w8, [x8, #17]
    1ca0:	cmp	w8, #0x1
    1ca4:	b.ne	1cd8 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x758>  // b.any
    1ca8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1cac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1cb0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1cb4:	add	x0, x0, #0x0
    1cb8:	add	x1, x1, #0x0
    1cbc:	add	x3, x3, #0x0
    1cc0:	mov	w2, #0xb8                  	// #184
    1cc4:	bl	0 <__assert_fail>
    1cc8:	ldur	q0, [sp, #8]
    1ccc:	ldr	x8, [sp, #24]
    1cd0:	str	q0, [x25, #192]
    1cd4:	stur	x8, [x29, #-96]
    1cd8:	sub	x0, x29, #0x18
    1cdc:	sub	x2, x29, #0x70
    1ce0:	mov	w1, #0x1                   	// #1
    1ce4:	stur	x20, [x29, #-24]
    1ce8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1cec:	ldr	x0, [sp, #32]
    1cf0:	add	x8, sp, #0x20
    1cf4:	add	x8, x8, #0x10
    1cf8:	cmp	x0, x8
    1cfc:	b.eq	1d04 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x784>  // b.none
    1d00:	bl	0 <_ZdlPv>
    1d04:	ldr	x0, [sp, #112]
    1d08:	adrp	x20, 0 <_ZTVN4llvm11MapResolverE>
    1d0c:	ldr	x20, [x20]
    1d10:	add	x8, sp, #0x70
    1d14:	add	x8, x8, #0x10
    1d18:	cmp	x0, x8
    1d1c:	b.eq	1d24 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x7a4>  // b.none
    1d20:	bl	0 <_ZdlPv>
    1d24:	mov	w19, #0x1                   	// #1
    1d28:	b	19d0 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE+0x450>
    1d2c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d30:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d34:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d38:	add	x0, x0, #0x0
    1d3c:	add	x1, x1, #0x0
    1d40:	add	x3, x3, #0x0
    1d44:	mov	w2, #0x69                  	// #105
    1d48:	bl	0 <__assert_fail>
    1d4c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d50:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d54:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1d58:	add	x0, x0, #0x0
    1d5c:	add	x1, x1, #0x0
    1d60:	add	x3, x3, #0x0
    1d64:	mov	w2, #0x108                 	// #264
    1d68:	bl	0 <__assert_fail>

0000000000001d6c <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>:
    1d6c:	stp	x29, x30, [sp, #-48]!
    1d70:	stp	x22, x21, [sp, #16]
    1d74:	stp	x20, x19, [sp, #32]
    1d78:	mov	x29, sp
    1d7c:	mov	x8, x1
    1d80:	ldr	x1, [x1]
    1d84:	mov	x19, x2
    1d88:	mov	x20, x0
    1d8c:	cbz	x1, 1da8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x3c>
    1d90:	mov	x0, x20
    1d94:	mov	x2, x19
    1d98:	ldp	x20, x19, [sp, #32]
    1d9c:	ldp	x22, x21, [sp, #16]
    1da0:	ldp	x29, x30, [sp], #48
    1da4:	b	1580 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    1da8:	ldr	x8, [x8, #8]
    1dac:	ldp	x21, x22, [x8, #24]
    1db0:	cmp	x21, x22
    1db4:	b.eq	1dd8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x6c>  // b.none
    1db8:	mov	x0, x20
    1dbc:	mov	x1, x21
    1dc0:	mov	x2, x19
    1dc4:	bl	1d6c <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    1dc8:	tbnz	w0, #0, 1dec <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x80>
    1dcc:	add	x21, x21, #0x10
    1dd0:	cmp	x22, x21
    1dd4:	b.ne	1db8 <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE+0x4c>  // b.any
    1dd8:	mov	w0, wzr
    1ddc:	ldp	x20, x19, [sp, #32]
    1de0:	ldp	x22, x21, [sp, #16]
    1de4:	ldp	x29, x30, [sp], #48
    1de8:	ret
    1dec:	mov	w0, #0x1                   	// #1
    1df0:	ldp	x20, x19, [sp, #32]
    1df4:	ldp	x22, x21, [sp, #16]
    1df8:	ldp	x29, x30, [sp], #48
    1dfc:	ret

0000000000001e00 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>:
    1e00:	stp	x29, x30, [sp, #-96]!
    1e04:	stp	x28, x27, [sp, #16]
    1e08:	stp	x26, x25, [sp, #32]
    1e0c:	stp	x24, x23, [sp, #48]
    1e10:	stp	x22, x21, [sp, #64]
    1e14:	stp	x20, x19, [sp, #80]
    1e18:	mov	x29, sp
    1e1c:	sub	sp, sp, #0x200
    1e20:	ldr	x19, [x2, #16]
    1e24:	ldr	w11, [x2, #32]
    1e28:	mov	x22, x2
    1e2c:	ldr	w27, [x19, #64]
    1e30:	cmp	w27, w11
    1e34:	b.cs	1e6c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x6c>  // b.hs, b.nlast
    1e38:	ldr	x8, [x22]
    1e3c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e40:	add	x9, x9, #0x0
    1e44:	stp	x9, xzr, [x29, #-152]
    1e48:	mov	w9, #0x103                 	// #259
    1e4c:	add	x0, sp, #0x70
    1e50:	sub	x2, x29, #0x98
    1e54:	mov	w1, #0x1                   	// #1
    1e58:	sturh	w9, [x29, #-136]
    1e5c:	str	x8, [sp, #112]
    1e60:	mov	w19, #0x1                   	// #1
    1e64:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    1e68:	b	23e8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5e8>
    1e6c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1e70:	ldr	x25, [x19, #56]
    1e74:	ldr	d0, [x8]
    1e78:	sub	x8, x29, #0x98
    1e7c:	mov	x20, x1
    1e80:	mov	x21, x0
    1e84:	add	x10, x8, #0x10
    1e88:	stur	x10, [x29, #-152]
    1e8c:	stur	d0, [x29, #-144]
    1e90:	cbz	w27, 1f7c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x17c>
    1e94:	mov	w8, wzr
    1e98:	mov	x26, xzr
    1e9c:	add	x24, sp, #0x90
    1ea0:	mov	w9, #0x8                   	// #8
    1ea4:	cmp	x26, w11, uxtw
    1ea8:	b.cs	1edc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xdc>  // b.hs, b.nlast
    1eac:	ldr	x23, [x22, #24]
    1eb0:	cmp	w8, w9
    1eb4:	b.cs	1f50 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x150>  // b.hs, b.nlast
    1eb8:	lsl	x11, x26, #3
    1ebc:	ldr	x12, [x25, x11]
    1ec0:	add	x13, x10, w8, uxtw #4
    1ec4:	cmp	w8, w9
    1ec8:	str	x12, [x13]
    1ecc:	ldr	x11, [x23, x11]
    1ed0:	str	x11, [x13, #8]
    1ed4:	b.cc	1f2c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x12c>  // b.lo, b.ul, b.last
    1ed8:	b	2420 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>
    1edc:	ldr	x9, [x25, x26, lsl #3]
    1ee0:	ldr	x8, [x19, #72]
    1ee4:	ldr	x10, [x8], #24
    1ee8:	cmp	x10, x9
    1eec:	b.ne	1ee4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xe4>  // b.any
    1ef0:	ldur	x23, [x8, #-8]
    1ef4:	ldr	x8, [x23]
    1ef8:	mov	x0, x23
    1efc:	ldr	x8, [x8, #24]
    1f00:	blr	x8
    1f04:	tbz	w0, #0, 2048 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x248>
    1f08:	ldp	w8, w9, [x29, #-144]
    1f0c:	cmp	w8, w9
    1f10:	b.cs	1f68 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x168>  // b.hs, b.nlast
    1f14:	ldur	x10, [x29, #-152]
    1f18:	ldr	x11, [x25, x26, lsl #3]
    1f1c:	cmp	w8, w9
    1f20:	add	x12, x10, w8, uxtw #4
    1f24:	stp	x11, x23, [x12]
    1f28:	b.cs	2420 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>  // b.hs, b.nlast
    1f2c:	add	x26, x26, #0x1
    1f30:	add	w8, w8, #0x1
    1f34:	cmp	x26, x27
    1f38:	stur	w8, [x29, #-144]
    1f3c:	b.eq	1f7c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x17c>  // b.none
    1f40:	ldr	w11, [x22, #32]
    1f44:	cmp	x26, w11, uxtw
    1f48:	b.cs	1edc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xdc>  // b.hs, b.nlast
    1f4c:	b	1eac <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xac>
    1f50:	sub	x0, x29, #0x98
    1f54:	mov	x1, xzr
    1f58:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f5c:	ldp	w8, w9, [x29, #-144]
    1f60:	ldur	x10, [x29, #-152]
    1f64:	b	1eb8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0xb8>
    1f68:	sub	x0, x29, #0x98
    1f6c:	mov	x1, xzr
    1f70:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f74:	ldp	w8, w9, [x29, #-144]
    1f78:	b	1f14 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x114>
    1f7c:	adrp	x23, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f80:	add	x23, x23, #0x0
    1f84:	mov	w1, #0x4                   	// #4
    1f88:	mov	x0, x23
    1f8c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1f90:	adrp	x24, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f94:	adrp	x25, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    1f98:	add	x24, x24, #0x0
    1f9c:	add	x25, x25, #0x0
    1fa0:	cmp	x19, #0x0
    1fa4:	mov	w26, #0x1                   	// #1
    1fa8:	mov	x2, x0
    1fac:	csel	x3, x25, x24, eq  // eq = none
    1fb0:	cinc	x4, x26, ne  // ne = any
    1fb4:	mov	x0, x19
    1fb8:	mov	x1, x19
    1fbc:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    1fc0:	mov	x22, x0
    1fc4:	mov	w1, #0x4                   	// #4
    1fc8:	mov	x0, x23
    1fcc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    1fd0:	cmp	x20, #0x0
    1fd4:	mov	x2, x0
    1fd8:	csel	x3, x25, x24, eq  // eq = none
    1fdc:	cinc	x4, x26, ne  // ne = any
    1fe0:	mov	x0, x20
    1fe4:	mov	x1, x20
    1fe8:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    1fec:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    1ff0:	ldr	x1, [x1]
    1ff4:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    1ff8:	ldp	w8, w9, [x29, #-144]
    1ffc:	mov	x23, x0
    2000:	cmp	w8, w9
    2004:	b.cs	240c <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x60c>  // b.hs, b.nlast
    2008:	ldur	x10, [x29, #-152]
    200c:	cmp	w8, w9
    2010:	add	x9, x10, w8, uxtw #4
    2014:	stp	x22, x23, [x9]
    2018:	b.cs	2420 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x620>  // b.hs, b.nlast
    201c:	add	w8, w8, #0x1
    2020:	add	x1, x19, #0x80
    2024:	add	x4, x20, #0x80
    2028:	sub	x2, x29, #0x98
    202c:	mov	x0, x21
    2030:	mov	w3, wzr
    2034:	mov	x5, xzr
    2038:	stur	w8, [x29, #-144]
    203c:	bl	2440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    2040:	mov	w19, w0
    2044:	b	23d0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5d0>
    2048:	ldr	x20, [x22]
    204c:	stp	xzr, xzr, [sp, #168]
    2050:	str	w26, [sp, #168]
    2054:	mov	w10, #0x903                 	// #2307
    2058:	mov	w8, #0x109                 	// #265
    205c:	strh	w10, [sp, #208]
    2060:	ldr	x10, [sp, #168]
    2064:	strh	w8, [sp, #184]
    2068:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    206c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2070:	add	x11, sp, #0xc0
    2074:	add	x8, x8, #0x0
    2078:	add	x9, x9, #0x0
    207c:	stp	x11, x8, [sp, #216]
    2080:	mov	w8, #0x302                 	// #770
    2084:	stp	x9, x10, [sp, #192]
    2088:	strh	w8, [sp, #232]
    208c:	ldr	x0, [x25, x26, lsl #3]
    2090:	add	x22, sp, #0x70
    2094:	ldr	x8, [x0]
    2098:	ldr	x9, [x8, #48]
    209c:	add	x8, sp, #0x70
    20a0:	blr	x9
    20a4:	ldrb	w21, [sp, #232]
    20a8:	mov	w8, #0x104                 	// #260
    20ac:	strh	w8, [sp, #160]
    20b0:	stp	x22, xzr, [sp, #144]
    20b4:	cmp	w21, #0x1
    20b8:	b.eq	20e4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2e4>  // b.none
    20bc:	cbnz	w21, 20fc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x2fc>
    20c0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    20c4:	mov	w8, #0x100                 	// #256
    20c8:	add	x9, x9, #0x0
    20cc:	mov	w10, #0x103                 	// #259
    20d0:	stp	xzr, xzr, [sp, #240]
    20d4:	strh	w8, [sp, #256]
    20d8:	stp	x9, xzr, [sp, #88]
    20dc:	strh	w10, [sp, #104]
    20e0:	b	2184 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x384>
    20e4:	ldr	x8, [sp, #160]
    20e8:	ldr	q0, [x24]
    20ec:	and	w21, w8, #0xff
    20f0:	str	q0, [x24, #96]
    20f4:	str	x8, [sp, #256]
    20f8:	b	2164 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x364>
    20fc:	ldrb	w8, [sp, #233]
    2100:	ldr	x9, [sp, #216]
    2104:	mov	w10, #0x2                   	// #2
    2108:	add	x11, sp, #0xd8
    210c:	cmp	w8, #0x1
    2110:	csel	w10, w21, w10, eq  // eq = none
    2114:	add	x12, sp, #0x70
    2118:	mov	w13, #0x4                   	// #4
    211c:	csel	x8, x9, x11, eq  // eq = none
    2120:	cmp	w10, #0x2
    2124:	stp	x8, x12, [sp, #240]
    2128:	strb	w10, [sp, #256]
    212c:	strb	w13, [sp, #257]
    2130:	b.ne	2164 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x364>  // b.any
    2134:	ldrb	w9, [x8, #16]
    2138:	cbz	w9, 2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    213c:	ldrb	w8, [x8, #17]
    2140:	cmp	w8, #0x1
    2144:	b.eq	2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    2148:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    214c:	add	x8, x8, #0x0
    2150:	mov	w9, #0x103                 	// #259
    2154:	mov	w21, #0x2                   	// #2
    2158:	stp	x8, xzr, [sp, #88]
    215c:	strh	w9, [sp, #104]
    2160:	b	2198 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x398>
    2164:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2168:	add	x8, x8, #0x0
    216c:	mov	w9, #0x103                 	// #259
    2170:	cmp	w21, #0x1
    2174:	stp	x8, xzr, [sp, #88]
    2178:	strh	w9, [sp, #104]
    217c:	b.eq	21f0 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x3f0>  // b.none
    2180:	cbnz	w21, 2198 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x398>
    2184:	mov	w8, #0x100                 	// #256
    2188:	mov	w21, wzr
    218c:	stp	xzr, xzr, [x29, #-240]
    2190:	sturh	w8, [x29, #-224]
    2194:	b	2204 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>
    2198:	ldrb	w8, [sp, #257]
    219c:	ldr	x9, [sp, #240]
    21a0:	mov	w10, #0x2                   	// #2
    21a4:	add	x11, sp, #0xf0
    21a8:	cmp	w8, #0x1
    21ac:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    21b0:	csel	w10, w21, w10, eq  // eq = none
    21b4:	add	x12, x12, #0x0
    21b8:	mov	w13, #0x3                   	// #3
    21bc:	csel	x8, x9, x11, eq  // eq = none
    21c0:	cmp	w10, #0x2
    21c4:	stp	x8, x12, [x29, #-240]
    21c8:	sturb	w10, [x29, #-224]
    21cc:	sturb	w13, [x29, #-223]
    21d0:	b.ne	2204 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>  // b.any
    21d4:	ldrb	w9, [x8, #16]
    21d8:	cbz	w9, 2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    21dc:	ldrb	w8, [x8, #17]
    21e0:	cmp	w8, #0x1
    21e4:	b.eq	2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    21e8:	mov	w21, #0x2                   	// #2
    21ec:	b	2204 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x404>
    21f0:	ldr	x8, [sp, #104]
    21f4:	ldur	q0, [sp, #88]
    21f8:	and	w21, w8, #0xff
    21fc:	str	q0, [x24, #128]
    2200:	stur	x8, [x29, #-224]
    2204:	ldr	x0, [x19]
    2208:	add	x19, sp, #0x20
    220c:	ldr	x8, [x0]
    2210:	ldr	x9, [x8, #48]
    2214:	add	x8, sp, #0x20
    2218:	blr	x9
    221c:	mov	w8, #0x104                 	// #260
    2220:	cmp	w21, #0x1
    2224:	strh	w8, [sp, #80]
    2228:	stp	x19, xzr, [sp, #64]
    222c:	b.eq	2258 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x458>  // b.none
    2230:	cbnz	w21, 2270 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x470>
    2234:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2238:	mov	w8, #0x100                 	// #256
    223c:	add	x9, x9, #0x0
    2240:	mov	w10, #0x103                 	// #259
    2244:	stp	xzr, xzr, [x29, #-208]
    2248:	sturh	w8, [x29, #-192]
    224c:	stp	x9, xzr, [sp, #8]
    2250:	strh	w10, [sp, #24]
    2254:	b	22f8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4f8>
    2258:	ldr	x8, [sp, #80]
    225c:	ldr	q0, [sp, #64]
    2260:	and	w21, w8, #0xff
    2264:	str	q0, [x24, #160]
    2268:	stur	x8, [x29, #-192]
    226c:	b	22d8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d8>
    2270:	ldurb	w8, [x29, #-223]
    2274:	ldur	x9, [x29, #-240]
    2278:	mov	w10, #0x2                   	// #2
    227c:	sub	x11, x29, #0xf0
    2280:	cmp	w8, #0x1
    2284:	csel	w10, w21, w10, eq  // eq = none
    2288:	add	x12, sp, #0x20
    228c:	mov	w13, #0x4                   	// #4
    2290:	csel	x8, x9, x11, eq  // eq = none
    2294:	cmp	w10, #0x2
    2298:	stp	x8, x12, [x29, #-208]
    229c:	sturb	w10, [x29, #-192]
    22a0:	sturb	w13, [x29, #-191]
    22a4:	b.ne	22d8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x4d8>  // b.any
    22a8:	ldrb	w9, [x8, #16]
    22ac:	cbz	w9, 2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    22b0:	ldrb	w8, [x8, #17]
    22b4:	cmp	w8, #0x1
    22b8:	b.eq	2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>  // b.none
    22bc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    22c0:	add	x8, x8, #0x0
    22c4:	mov	w9, #0x103                 	// #259
    22c8:	mov	w21, #0x2                   	// #2
    22cc:	stp	x8, xzr, [sp, #8]
    22d0:	strh	w9, [sp, #24]
    22d4:	b	2308 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x508>
    22d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    22dc:	add	x8, x8, #0x0
    22e0:	mov	w9, #0x103                 	// #259
    22e4:	cmp	w21, #0x1
    22e8:	stp	x8, xzr, [sp, #8]
    22ec:	strh	w9, [sp, #24]
    22f0:	b.eq	2378 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x578>  // b.none
    22f4:	cbnz	w21, 2308 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x508>
    22f8:	mov	w8, #0x100                 	// #256
    22fc:	stp	xzr, xzr, [x29, #-176]
    2300:	sturh	w8, [x29, #-160]
    2304:	b	2388 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>
    2308:	ldurb	w8, [x29, #-191]
    230c:	ldur	x9, [x29, #-208]
    2310:	mov	w10, #0x2                   	// #2
    2314:	sub	x11, x29, #0xd0
    2318:	cmp	w8, #0x1
    231c:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2320:	csel	w10, w21, w10, eq  // eq = none
    2324:	add	x12, x12, #0x0
    2328:	mov	w13, #0x3                   	// #3
    232c:	csel	x8, x9, x11, eq  // eq = none
    2330:	cmp	w10, #0x2
    2334:	stp	x8, x12, [x29, #-176]
    2338:	sturb	w10, [x29, #-160]
    233c:	sturb	w13, [x29, #-159]
    2340:	b.ne	2388 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>  // b.any
    2344:	ldrb	w9, [x8, #16]
    2348:	cbz	w9, 2358 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x558>
    234c:	ldrb	w8, [x8, #17]
    2350:	cmp	w8, #0x1
    2354:	b.ne	2388 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x588>  // b.any
    2358:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    235c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2360:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2364:	add	x0, x0, #0x0
    2368:	add	x1, x1, #0x0
    236c:	add	x3, x3, #0x0
    2370:	mov	w2, #0xb8                  	// #184
    2374:	bl	0 <__assert_fail>
    2378:	ldur	q0, [sp, #8]
    237c:	ldr	x8, [sp, #24]
    2380:	str	q0, [x24, #192]
    2384:	stur	x8, [x29, #-160]
    2388:	sub	x0, x29, #0x8
    238c:	sub	x2, x29, #0xb0
    2390:	mov	w1, #0x1                   	// #1
    2394:	stur	x20, [x29, #-8]
    2398:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    239c:	ldr	x0, [sp, #32]
    23a0:	add	x8, sp, #0x20
    23a4:	add	x8, x8, #0x10
    23a8:	cmp	x0, x8
    23ac:	b.eq	23b4 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5b4>  // b.none
    23b0:	bl	0 <_ZdlPv>
    23b4:	ldr	x0, [sp, #112]
    23b8:	add	x8, sp, #0x70
    23bc:	add	x8, x8, #0x10
    23c0:	cmp	x0, x8
    23c4:	b.eq	23cc <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5cc>  // b.none
    23c8:	bl	0 <_ZdlPv>
    23cc:	mov	w19, #0x1                   	// #1
    23d0:	ldur	x0, [x29, #-152]
    23d4:	sub	x8, x29, #0x98
    23d8:	add	x8, x8, #0x10
    23dc:	cmp	x0, x8
    23e0:	b.eq	23e8 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x5e8>  // b.none
    23e4:	bl	0 <free>
    23e8:	and	w0, w19, #0x1
    23ec:	add	sp, sp, #0x200
    23f0:	ldp	x20, x19, [sp, #80]
    23f4:	ldp	x22, x21, [sp, #64]
    23f8:	ldp	x24, x23, [sp, #48]
    23fc:	ldp	x26, x25, [sp, #32]
    2400:	ldp	x28, x27, [sp, #16]
    2404:	ldp	x29, x30, [sp], #96
    2408:	ret
    240c:	sub	x0, x29, #0x98
    2410:	mov	x1, xzr
    2414:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2418:	ldp	w8, w9, [x29, #-144]
    241c:	b	2008 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE+0x208>
    2420:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2424:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2428:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    242c:	add	x0, x0, #0x0
    2430:	add	x1, x1, #0x0
    2434:	add	x3, x3, #0x0
    2438:	mov	w2, #0x43                  	// #67
    243c:	bl	0 <__assert_fail>

0000000000002440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>:
    2440:	sub	sp, sp, #0xd0
    2444:	stp	x29, x30, [sp, #112]
    2448:	stp	x28, x27, [sp, #128]
    244c:	stp	x26, x25, [sp, #144]
    2450:	stp	x24, x23, [sp, #160]
    2454:	stp	x22, x21, [sp, #176]
    2458:	stp	x20, x19, [sp, #192]
    245c:	add	x29, sp, #0x70
    2460:	str	x5, [sp, #24]
    2464:	ldp	x27, x28, [x1]
    2468:	cmp	x27, x28
    246c:	b.eq	26a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x260>  // b.none
    2470:	adrp	x9, 0 <_ZTVN4llvm11MapResolverE>
    2474:	ldr	x9, [x9]
    2478:	add	x8, sp, #0x38
    247c:	add	x23, x8, #0x18
    2480:	mov	x20, x4
    2484:	add	x8, x9, #0x10
    2488:	mov	x21, x2
    248c:	mov	x22, x0
    2490:	str	x8, [sp, #8]
    2494:	and	w8, w3, #0x1
    2498:	str	w8, [sp, #20]
    249c:	b	24c8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x88>
    24a0:	ldr	w3, [sp, #20]
    24a4:	mov	x0, x22
    24a8:	mov	x2, x21
    24ac:	mov	x4, x20
    24b0:	mov	x5, xzr
    24b4:	bl	28b0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    24b8:	tbnz	w0, #0, 26a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x268>
    24bc:	add	x27, x27, #0x10
    24c0:	cmp	x27, x28
    24c4:	b.eq	26a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x260>  // b.none
    24c8:	ldr	x1, [x27, #8]
    24cc:	cbnz	x1, 24a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x60>
    24d0:	ldr	x26, [x27]
    24d4:	mov	w0, #0x80                  	// #128
    24d8:	bl	0 <_Znwm>
    24dc:	mov	x1, x26
    24e0:	mov	x25, x0
    24e4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    24e8:	ldr	x8, [sp, #24]
    24ec:	cbz	x8, 2520 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xe0>
    24f0:	ldr	x10, [sp, #24]
    24f4:	ldp	w8, w9, [x25, #16]
    24f8:	ldr	x19, [x10]
    24fc:	cmp	w8, w9
    2500:	b.cs	2684 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x244>  // b.hs, b.nlast
    2504:	ldr	x9, [x25, #8]
    2508:	str	x19, [x9, w8, uxtw #3]
    250c:	ldp	w8, w9, [x25, #16]
    2510:	cmp	w8, w9
    2514:	b.cs	26cc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x28c>  // b.hs, b.nlast
    2518:	add	w8, w8, #0x1
    251c:	str	w8, [x25, #16]
    2520:	ldr	x8, [sp, #8]
    2524:	strb	wzr, [sp, #72]
    2528:	stp	x8, x25, [sp, #56]
    252c:	stp	xzr, xzr, [x23]
    2530:	str	wzr, [x23, #24]
    2534:	str	xzr, [x23, #16]
    2538:	ldr	w8, [x21, #8]
    253c:	cbz	w8, 256c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x12c>
    2540:	ldr	x26, [x21]
    2544:	add	x19, x26, x8, lsl #4
    2548:	ldp	x8, x24, [x26], #16
    254c:	add	x1, sp, #0x28
    2550:	mov	x0, x23
    2554:	str	x8, [sp, #40]
    2558:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    255c:	cmp	x26, x19
    2560:	str	x24, [x0, #8]
    2564:	strb	wzr, [x0, #16]
    2568:	b.ne	2548 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x108>  // b.any
    256c:	add	x1, sp, #0x38
    2570:	mov	x0, x25
    2574:	mov	x2, xzr
    2578:	bl	0 <_ZN4llvm6Record17resolveReferencesERNS_8ResolverEPKNS_9RecordValE>
    257c:	cbz	x20, 25b0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x170>
    2580:	stp	x25, xzr, [sp, #40]
    2584:	ldp	x1, x8, [x20, #8]
    2588:	cmp	x1, x8
    258c:	b.eq	2648 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x208>  // b.none
    2590:	str	xzr, [sp, #40]
    2594:	str	x25, [x1]
    2598:	ldr	x8, [sp, #48]
    259c:	add	x9, x1, #0x10
    25a0:	str	xzr, [sp, #48]
    25a4:	str	x8, [x1, #8]
    25a8:	str	x9, [x20, #8]
    25ac:	b	2654 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x214>
    25b0:	add	x1, sp, #0x20
    25b4:	mov	x0, x22
    25b8:	str	x25, [sp, #32]
    25bc:	bl	2be4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    25c0:	ldr	x26, [sp, #32]
    25c4:	mov	w25, w0
    25c8:	cbz	x26, 2624 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1e4>
    25cc:	ldr	x0, [x26, #88]
    25d0:	add	x8, x26, #0x68
    25d4:	cmp	x0, x8
    25d8:	b.eq	25e0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1a0>  // b.none
    25dc:	bl	0 <free>
    25e0:	ldr	x0, [x26, #72]
    25e4:	add	x8, x26, #0x58
    25e8:	cmp	x0, x8
    25ec:	b.eq	25f4 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1b4>  // b.none
    25f0:	bl	0 <free>
    25f4:	ldr	x0, [x26, #56]
    25f8:	add	x8, x26, #0x48
    25fc:	cmp	x0, x8
    2600:	b.eq	2608 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1c8>  // b.none
    2604:	bl	0 <free>
    2608:	ldr	x0, [x26, #8]
    260c:	add	x8, x26, #0x18
    2610:	cmp	x0, x8
    2614:	b.eq	261c <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x1dc>  // b.none
    2618:	bl	0 <free>
    261c:	mov	x0, x26
    2620:	bl	0 <_ZdlPv>
    2624:	str	xzr, [sp, #32]
    2628:	adrp	x8, 0 <_ZTVN4llvm11MapResolverE>
    262c:	ldr	x0, [sp, #88]
    2630:	ldr	x8, [x8]
    2634:	add	x8, x8, #0x10
    2638:	str	x8, [sp, #56]
    263c:	bl	0 <_ZdlPv>
    2640:	tbz	w25, #0, 24bc <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x7c>
    2644:	b	26a8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x268>
    2648:	add	x2, sp, #0x28
    264c:	mov	x0, x20
    2650:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2654:	add	x0, sp, #0x28
    2658:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    265c:	adrp	x8, 0 <_ZTVN4llvm11MapResolverE>
    2660:	ldr	x0, [sp, #88]
    2664:	ldr	x8, [x8]
    2668:	add	x8, x8, #0x10
    266c:	str	x8, [sp, #56]
    2670:	bl	0 <_ZdlPv>
    2674:	add	x27, x27, #0x10
    2678:	cmp	x27, x28
    267c:	b.ne	24c8 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x88>  // b.any
    2680:	b	26a0 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x260>
    2684:	add	x0, x25, #0x8
    2688:	add	x1, x25, #0x18
    268c:	mov	w3, #0x8                   	// #8
    2690:	mov	x2, xzr
    2694:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2698:	ldr	w8, [x25, #16]
    269c:	b	2504 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0xc4>
    26a0:	mov	w0, wzr
    26a4:	b	26ac <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE+0x26c>
    26a8:	mov	w0, #0x1                   	// #1
    26ac:	ldp	x20, x19, [sp, #192]
    26b0:	ldp	x22, x21, [sp, #176]
    26b4:	ldp	x24, x23, [sp, #160]
    26b8:	ldp	x26, x25, [sp, #144]
    26bc:	ldp	x28, x27, [sp, #128]
    26c0:	ldp	x29, x30, [sp, #112]
    26c4:	add	sp, sp, #0xd0
    26c8:	ret
    26cc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    26d0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    26d4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    26d8:	add	x0, x0, #0x0
    26dc:	add	x1, x1, #0x0
    26e0:	add	x3, x3, #0x0
    26e4:	mov	w2, #0x43                  	// #67
    26e8:	bl	0 <__assert_fail>

00000000000026ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>:
    26ec:	sub	sp, sp, #0xc0
    26f0:	stp	x29, x30, [sp, #160]
    26f4:	stp	x20, x19, [sp, #176]
    26f8:	add	x29, sp, #0xa0
    26fc:	ldr	x8, [x1]
    2700:	mov	x2, x1
    2704:	cbz	x8, 2710 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x24>
    2708:	ldr	x9, [x2, #8]
    270c:	cbnz	x9, 2890 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x1a4>
    2710:	ldp	x10, x9, [x0, #272]
    2714:	cmp	x10, x9
    2718:	b.eq	2754 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x68>  // b.none
    271c:	ldur	x9, [x9, #-8]
    2720:	ldp	x1, x10, [x9, #32]
    2724:	cmp	x1, x10
    2728:	b.eq	27b0 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xc4>  // b.none
    272c:	str	xzr, [x2]
    2730:	str	x8, [x1]
    2734:	ldr	x8, [x2, #8]
    2738:	str	xzr, [x2, #8]
    273c:	mov	w19, wzr
    2740:	str	x8, [x1, #8]
    2744:	ldr	x8, [x9, #32]
    2748:	add	x8, x8, #0x10
    274c:	str	x8, [x9, #32]
    2750:	b	27bc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    2754:	ldr	x1, [x2, #8]
    2758:	cbz	x1, 27d0 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xe4>
    275c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2760:	ldr	d0, [x8]
    2764:	add	x8, sp, #0x10
    2768:	add	x19, x8, #0x10
    276c:	str	x19, [sp, #16]
    2770:	str	d0, [sp, #24]
    2774:	ldr	x8, [x0, #328]
    2778:	add	x2, sp, #0x10
    277c:	mov	x5, xzr
    2780:	cmp	x8, #0x0
    2784:	add	x8, x8, #0x80
    2788:	cset	w3, eq  // eq = none
    278c:	csel	x4, xzr, x8, eq  // eq = none
    2790:	bl	28b0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>
    2794:	ldr	x8, [sp, #16]
    2798:	cmp	x8, x19
    279c:	mov	w19, w0
    27a0:	b.eq	27bc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>  // b.none
    27a4:	mov	x0, x8
    27a8:	bl	0 <free>
    27ac:	b	27bc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    27b0:	add	x0, x9, #0x18
    27b4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    27b8:	mov	w19, wzr
    27bc:	and	w0, w19, #0x1
    27c0:	ldp	x20, x19, [sp, #176]
    27c4:	ldp	x29, x30, [sp, #160]
    27c8:	add	sp, sp, #0xc0
    27cc:	ret
    27d0:	ldr	x9, [x0, #328]
    27d4:	cbz	x9, 280c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x120>
    27d8:	ldp	x1, x10, [x9, #136]
    27dc:	cmp	x1, x10
    27e0:	b.eq	2888 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x19c>  // b.none
    27e4:	str	xzr, [x2]
    27e8:	str	x8, [x1]
    27ec:	ldr	x8, [x2, #8]
    27f0:	str	xzr, [x2, #8]
    27f4:	mov	w19, wzr
    27f8:	str	x8, [x1, #8]
    27fc:	ldr	x8, [x9, #136]
    2800:	add	x8, x8, #0x10
    2804:	str	x8, [x9, #136]
    2808:	b	27bc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    280c:	add	x1, sp, #0x8
    2810:	str	xzr, [x2]
    2814:	str	x8, [sp, #8]
    2818:	bl	2be4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
    281c:	ldr	x20, [sp, #8]
    2820:	mov	w19, w0
    2824:	cbz	x20, 2880 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x194>
    2828:	ldr	x0, [x20, #88]
    282c:	add	x8, x20, #0x68
    2830:	cmp	x0, x8
    2834:	b.eq	283c <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x150>  // b.none
    2838:	bl	0 <free>
    283c:	ldr	x0, [x20, #72]
    2840:	add	x8, x20, #0x58
    2844:	cmp	x0, x8
    2848:	b.eq	2850 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x164>  // b.none
    284c:	bl	0 <free>
    2850:	ldr	x0, [x20, #56]
    2854:	add	x8, x20, #0x48
    2858:	cmp	x0, x8
    285c:	b.eq	2864 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x178>  // b.none
    2860:	bl	0 <free>
    2864:	ldr	x0, [x20, #8]
    2868:	add	x8, x20, #0x18
    286c:	cmp	x0, x8
    2870:	b.eq	2878 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0x18c>  // b.none
    2874:	bl	0 <free>
    2878:	mov	x0, x20
    287c:	bl	0 <_ZdlPv>
    2880:	str	xzr, [sp, #8]
    2884:	b	27bc <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xd0>
    2888:	add	x0, x9, #0x80
    288c:	b	27b4 <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE+0xc8>
    2890:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2894:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2898:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    289c:	add	x0, x0, #0x0
    28a0:	add	x1, x1, #0x0
    28a4:	add	x3, x3, #0x0
    28a8:	mov	w2, #0x159                 	// #345
    28ac:	bl	0 <__assert_fail>

00000000000028b0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE>:
    28b0:	sub	sp, sp, #0xf0
    28b4:	stp	x29, x30, [sp, #144]
    28b8:	stp	x28, x27, [sp, #160]
    28bc:	stp	x26, x25, [sp, #176]
    28c0:	stp	x24, x23, [sp, #192]
    28c4:	stp	x22, x21, [sp, #208]
    28c8:	stp	x20, x19, [sp, #224]
    28cc:	add	x29, sp, #0x90
    28d0:	sturb	wzr, [x29, #-40]
    28d4:	adrp	x8, 0 <_ZTVN4llvm11MapResolverE>
    28d8:	ldr	x8, [x8]
    28dc:	stp	xzr, xzr, [x29, #-24]
    28e0:	stur	xzr, [x29, #-32]
    28e4:	stur	wzr, [x29, #-8]
    28e8:	add	x8, x8, #0x10
    28ec:	stp	x8, xzr, [x29, #-56]
    28f0:	ldr	w8, [x2, #8]
    28f4:	mov	x24, x5
    28f8:	mov	x21, x4
    28fc:	mov	w23, w3
    2900:	mov	x20, x2
    2904:	mov	x19, x1
    2908:	mov	x22, x0
    290c:	cbz	w8, 2944 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x94>
    2910:	ldr	x26, [x20]
    2914:	sub	x9, x29, #0x38
    2918:	add	x25, x9, #0x18
    291c:	add	x27, x26, x8, lsl #4
    2920:	ldp	x8, x28, [x26], #16
    2924:	add	x1, sp, #0x8
    2928:	mov	x0, x25
    292c:	str	x8, [sp, #8]
    2930:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2934:	cmp	x26, x27
    2938:	str	x28, [x0, #8]
    293c:	strb	wzr, [x0, #16]
    2940:	b.ne	2920 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x70>  // b.any
    2944:	ldr	x0, [x19, #16]
    2948:	sub	x1, x29, #0x38
    294c:	ldr	x8, [x0]
    2950:	ldr	x8, [x8, #96]
    2954:	blr	x8
    2958:	cbz	x0, 2ba4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2f4>
    295c:	ldrb	w8, [x0, #8]
    2960:	mov	x25, x0
    2964:	cmp	w8, #0x9
    2968:	b.ne	2a18 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x168>  // b.any
    296c:	ldr	w8, [x25, #32]
    2970:	lsl	x27, x8, #3
    2974:	cbz	x27, 2aa8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1f8>
    2978:	ldr	x8, [x19, #8]
    297c:	add	x25, x25, #0x28
    2980:	add	x24, x19, #0x18
    2984:	cbz	x8, 29b8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x108>
    2988:	ldp	w9, w10, [x20, #8]
    298c:	ldr	x28, [x25]
    2990:	ldr	x26, [x8, #24]
    2994:	cmp	w9, w10
    2998:	b.cs	2a04 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x154>  // b.hs, b.nlast
    299c:	ldr	x8, [x20]
    29a0:	cmp	w9, w10
    29a4:	add	x8, x8, w9, uxtw #4
    29a8:	stp	x26, x28, [x8]
    29ac:	b.cs	2b84 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2d4>  // b.hs, b.nlast
    29b0:	add	w8, w9, #0x1
    29b4:	str	w8, [x20, #8]
    29b8:	and	w3, w23, #0x1
    29bc:	mov	x0, x22
    29c0:	mov	x1, x24
    29c4:	mov	x2, x20
    29c8:	mov	x4, x21
    29cc:	mov	x5, xzr
    29d0:	bl	2440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    29d4:	ldr	x8, [x19, #8]
    29d8:	cbz	x8, 29f0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x140>
    29dc:	ldp	w9, w10, [x20, #8]
    29e0:	sub	x9, x9, #0x1
    29e4:	cmp	x9, x10
    29e8:	b.hi	2b84 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2d4>  // b.pmore
    29ec:	str	w9, [x20, #8]
    29f0:	tbnz	w0, #0, 2afc <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x24c>
    29f4:	subs	x27, x27, #0x8
    29f8:	add	x25, x25, #0x8
    29fc:	b.ne	2984 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xd4>  // b.any
    2a00:	b	2aa8 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1f8>
    2a04:	mov	x0, x20
    2a08:	mov	x1, xzr
    2a0c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a10:	ldp	w9, w10, [x20, #8]
    2a14:	b	299c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0xec>
    2a18:	tbz	w23, #0, 2ab0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x200>
    2a1c:	ldr	x8, [x25]
    2a20:	mov	x0, x25
    2a24:	add	x20, sp, #0x8
    2a28:	ldr	x9, [x8, #40]
    2a2c:	add	x8, sp, #0x8
    2a30:	blr	x9
    2a34:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a38:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2a3c:	add	x8, x8, #0x0
    2a40:	mov	w9, #0x403                 	// #1027
    2a44:	add	x10, sp, #0x28
    2a48:	add	x11, x11, #0x0
    2a4c:	mov	w12, #0x302                 	// #770
    2a50:	stp	x8, x20, [sp, #40]
    2a54:	strh	w9, [sp, #56]
    2a58:	stp	x10, x11, [sp, #64]
    2a5c:	strh	w12, [sp, #80]
    2a60:	cbnz	wzr, 2bc4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x314>
    2a64:	ldrb	w8, [sp, #57]
    2a68:	cmp	w8, #0x1
    2a6c:	b.eq	2bc4 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x314>  // b.none
    2a70:	add	x2, sp, #0x40
    2a74:	mov	w1, #0x1                   	// #1
    2a78:	mov	x0, x19
    2a7c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    2a80:	ldr	x0, [sp, #8]
    2a84:	adrp	x23, 0 <_ZTVN4llvm11MapResolverE>
    2a88:	ldr	x23, [x23]
    2a8c:	add	x8, sp, #0x8
    2a90:	add	x8, x8, #0x10
    2a94:	cmp	x0, x8
    2a98:	b.eq	2aa0 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x1f0>  // b.none
    2a9c:	bl	0 <_ZdlPv>
    2aa0:	mov	w19, #0x1                   	// #1
    2aa4:	b	2b50 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2a0>
    2aa8:	mov	w19, wzr
    2aac:	b	2b00 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x250>
    2ab0:	mov	w0, #0x30                  	// #48
    2ab4:	bl	0 <_Znwm>
    2ab8:	ldr	q0, [x19]
    2abc:	stp	xzr, xzr, [x0, #32]
    2ac0:	stp	x25, xzr, [x0, #16]
    2ac4:	str	x0, [sp, #64]
    2ac8:	str	q0, [x0]
    2acc:	ldp	x1, x8, [x21, #8]
    2ad0:	cmp	x1, x8
    2ad4:	b.eq	2b0c <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x25c>  // b.none
    2ad8:	str	xzr, [sp, #64]
    2adc:	stp	xzr, x0, [x1]
    2ae0:	add	x0, sp, #0x8
    2ae4:	str	xzr, [sp, #8]
    2ae8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2aec:	ldr	x8, [x21, #8]
    2af0:	add	x8, x8, #0x10
    2af4:	str	x8, [x21, #8]
    2af8:	b	2b18 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x268>
    2afc:	mov	w19, #0x1                   	// #1
    2b00:	adrp	x23, 0 <_ZTVN4llvm11MapResolverE>
    2b04:	ldr	x23, [x23]
    2b08:	b	2b50 <_ZN4llvm8TGParser7resolveERKNS_11ForeachLoopERNS_11SmallVectorISt4pairIPNS_4InitES7_ELj8EEEbPSt6vectorINS_12RecordsEntryESaISC_EEPNS_5SMLocE+0x2a0>
    2b0c:	add	x2, sp, #0x40
    2b10:	mov	x0, x21
    2b14:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2b18:	adrp	x23, 0 <_ZTVN4llvm11MapResolverE>
    2b1c:	ldr	x23, [x23]
    2b20:	add	x0, sp, #0x40
    2b24:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2b28:	ldr	x8, [x21, #8]
    2b2c:	add	x1, x19, #0x18
    2b30:	mov	x0, x22
    2b34:	mov	x2, x20
    2b38:	ldur	x8, [x8, #-8]
    2b3c:	mov	w3, wzr
    2b40:	mov	x5, x24
    2b44:	add	x4, x8, #0x18
    2b48:	bl	2440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    2b4c:	mov	w19, w0
    2b50:	ldur	x0, [x29, #-24]
    2b54:	add	x8, x23, #0x10
    2b58:	stur	x8, [x29, #-56]
    2b5c:	bl	0 <_ZdlPv>
    2b60:	and	w0, w19, #0x1
    2b64:	ldp	x20, x19, [sp, #224]
    2b68:	ldp	x22, x21, [sp, #208]
    2b6c:	ldp	x24, x23, [sp, #192]
    2b70:	ldp	x26, x25, [sp, #176]
    2b74:	ldp	x28, x27, [sp, #160]
    2b78:	ldp	x29, x30, [sp, #144]
    2b7c:	add	sp, sp, #0xf0
    2b80:	ret
    2b84:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2b88:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2b8c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2b90:	add	x0, x0, #0x0
    2b94:	add	x1, x1, #0x0
    2b98:	add	x3, x3, #0x0
    2b9c:	mov	w2, #0x43                  	// #67
    2ba0:	bl	0 <__assert_fail>
    2ba4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2ba8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2bac:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2bb0:	add	x0, x0, #0x0
    2bb4:	add	x1, x1, #0x0
    2bb8:	add	x3, x3, #0x0
    2bbc:	mov	w2, #0x69                  	// #105
    2bc0:	bl	0 <__assert_fail>
    2bc4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2bc8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2bcc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2bd0:	add	x0, x0, #0x0
    2bd4:	add	x1, x1, #0x0
    2bd8:	add	x3, x3, #0x0
    2bdc:	mov	w2, #0xb8                  	// #184
    2be0:	bl	0 <__assert_fail>

0000000000002be4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
    2be4:	sub	sp, sp, #0x1b0
    2be8:	stp	x29, x30, [sp, #336]
    2bec:	stp	x28, x27, [sp, #352]
    2bf0:	stp	x26, x25, [sp, #368]
    2bf4:	stp	x24, x23, [sp, #384]
    2bf8:	stp	x22, x21, [sp, #400]
    2bfc:	stp	x20, x19, [sp, #416]
    2c00:	add	x29, sp, #0x150
    2c04:	ldr	x8, [x1]
    2c08:	mov	x26, x0
    2c0c:	ldr	x20, [x26, #344]
    2c10:	mov	x19, x1
    2c14:	ldr	x0, [x8]
    2c18:	ldr	x8, [x0]
    2c1c:	ldr	x9, [x8, #48]
    2c20:	add	x8, sp, #0x90
    2c24:	blr	x9
    2c28:	ldr	x24, [x20, #64]
    2c2c:	add	x22, x20, #0x38
    2c30:	cbz	x24, 2cc4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xe0>
    2c34:	ldp	x21, x23, [sp, #144]
    2c38:	mov	x20, x22
    2c3c:	b	2c50 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6c>
    2c40:	add	x8, x24, #0x10
    2c44:	mov	x20, x24
    2c48:	ldr	x24, [x8]
    2c4c:	cbz	x24, 2c8c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa8>
    2c50:	ldr	x25, [x24, #40]
    2c54:	cmp	x23, x25
    2c58:	csel	x2, x23, x25, cc  // cc = lo, ul, last
    2c5c:	cbz	x2, 2c78 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x94>
    2c60:	ldr	x0, [x24, #32]
    2c64:	mov	x1, x21
    2c68:	bl	0 <memcmp>
    2c6c:	cbz	w0, 2c78 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x94>
    2c70:	tbz	w0, #31, 2c40 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5c>
    2c74:	b	2c80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9c>
    2c78:	cmp	x25, x23
    2c7c:	b.cs	2c40 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5c>  // b.hs, b.nlast
    2c80:	add	x8, x24, #0x18
    2c84:	ldr	x24, [x8]
    2c88:	cbnz	x24, 2c50 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6c>
    2c8c:	cmp	x20, x22
    2c90:	b.eq	2cc8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xe4>  // b.none
    2c94:	ldr	x24, [x20, #40]
    2c98:	cmp	x24, x23
    2c9c:	csel	x2, x24, x23, cc  // cc = lo, ul, last
    2ca0:	cbz	x2, 2cbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd8>
    2ca4:	ldr	x1, [x20, #32]
    2ca8:	mov	x0, x21
    2cac:	bl	0 <memcmp>
    2cb0:	cbz	w0, 2cbc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd8>
    2cb4:	tbnz	w0, #31, 2cc4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xe0>
    2cb8:	b	2cc8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xe4>
    2cbc:	cmp	x23, x24
    2cc0:	b.cs	2cc8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xe4>  // b.hs, b.nlast
    2cc4:	mov	x20, x22
    2cc8:	cmp	x20, x22
    2ccc:	b.eq	2cd8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xf4>  // b.none
    2cd0:	ldr	x22, [x20, #64]
    2cd4:	b	2cdc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xf8>
    2cd8:	mov	x22, xzr
    2cdc:	ldr	x0, [sp, #144]
    2ce0:	add	x8, sp, #0x90
    2ce4:	add	x8, x8, #0x10
    2ce8:	cmp	x0, x8
    2cec:	b.eq	2cf4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x110>  // b.none
    2cf0:	bl	0 <_ZdlPv>
    2cf4:	cbz	x22, 2d18 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x134>
    2cf8:	ldr	x21, [x19]
    2cfc:	ldrb	w8, [x21, #124]
    2d00:	cbz	w8, 32e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x704>
    2d04:	ldr	x0, [x26, #344]
    2d08:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    2d0c:	mov	x1, x0
    2d10:	mov	x0, x21
    2d14:	bl	0 <_ZN4llvm6Record7setNameEPNS_4InitE>
    2d18:	ldr	x0, [x19]
    2d1c:	bl	0 <_ZN4llvm6Record17resolveReferencesEv>
    2d20:	ldr	x21, [x19]
    2d24:	ldr	w8, [x21, #80]
    2d28:	cbz	w8, 318c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5a8>
    2d2c:	ldr	x24, [x21, #72]
    2d30:	add	x11, sp, #0x40
    2d34:	add	x12, sp, #0x68
    2d38:	add	x11, x11, #0x10
    2d3c:	sub	x14, x29, #0x80
    2d40:	str	x11, [sp, #48]
    2d44:	add	x11, x12, #0x10
    2d48:	mov	w9, #0x18                  	// #24
    2d4c:	add	x13, sp, #0x90
    2d50:	sub	x15, x29, #0x50
    2d54:	sub	x10, x29, #0x20
    2d58:	str	x11, [sp, #40]
    2d5c:	add	x11, x14, #0x12
    2d60:	add	x27, x13, #0x10
    2d64:	str	x11, [sp, #32]
    2d68:	add	x11, x15, #0x12
    2d6c:	add	x10, x10, #0x12
    2d70:	madd	x25, x8, x9, x24
    2d74:	str	x11, [sp, #24]
    2d78:	stp	x26, x10, [sp, #8]
    2d7c:	b	2d8c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1a8>
    2d80:	add	x24, x24, #0x18
    2d84:	cmp	x24, x25
    2d88:	b.eq	3184 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x5a0>  // b.none
    2d8c:	ldrb	w8, [x24, #8]
    2d90:	tbnz	w8, #2, 2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>
    2d94:	ldr	x22, [x24, #16]
    2d98:	cbz	x22, 2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>
    2d9c:	ldrb	w8, [x22, #8]
    2da0:	cmp	w8, #0x3
    2da4:	b.ne	2e58 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x274>  // b.any
    2da8:	ldr	w20, [x22, #32]
    2dac:	cbz	w20, 2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>
    2db0:	mov	w28, wzr
    2db4:	add	x26, x22, #0x28
    2db8:	ldr	x23, [x26, w28, uxtw #3]
    2dbc:	cbz	x23, 351c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x938>
    2dc0:	ldrb	w8, [x23, #8]
    2dc4:	cmp	w8, #0x13
    2dc8:	b.eq	2e3c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x258>  // b.none
    2dcc:	cmp	w8, #0x15
    2dd0:	b.ne	2e28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x244>  // b.any
    2dd4:	ldr	x0, [x23, #24]
    2dd8:	cbz	x0, 355c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x978>
    2ddc:	ldrb	w8, [x0, #8]
    2de0:	cmp	w8, #0x13
    2de4:	b.ne	2e28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x244>  // b.any
    2de8:	bl	0 <_ZNK4llvm7VarInit7getNameEv>
    2dec:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    2df0:	ldr	w8, [x21, #80]
    2df4:	cbz	w8, 2e28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x244>
    2df8:	ldr	x10, [x21, #72]
    2dfc:	add	x8, x8, x8, lsl #1
    2e00:	lsl	x8, x8, #3
    2e04:	mov	x9, x10
    2e08:	ldr	x11, [x9], #24
    2e0c:	cmp	x11, x0
    2e10:	b.eq	2e24 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x240>  // b.none
    2e14:	subs	x8, x8, #0x18
    2e18:	mov	x10, x9
    2e1c:	b.ne	2e08 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x224>  // b.any
    2e20:	b	2e28 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x244>
    2e24:	cbnz	x10, 2e3c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x258>
    2e28:	ldr	x8, [x23]
    2e2c:	mov	x0, x23
    2e30:	ldr	x8, [x8, #32]
    2e34:	blr	x8
    2e38:	tbz	w0, #0, 2e6c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x288>
    2e3c:	add	w28, w28, #0x1
    2e40:	cmp	w28, w20
    2e44:	b.eq	2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>  // b.none
    2e48:	ldr	w8, [x22, #32]
    2e4c:	cmp	w8, w28
    2e50:	b.hi	2db8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x1d4>  // b.pmore
    2e54:	b	353c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x958>
    2e58:	ldr	x8, [x22]
    2e5c:	mov	x0, x22
    2e60:	ldr	x8, [x8, #32]
    2e64:	blr	x8
    2e68:	tbnz	w0, #0, 2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>
    2e6c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2e70:	add	x8, x8, #0x0
    2e74:	ldr	x22, [x21, #8]
    2e78:	ldr	w23, [x21, #16]
    2e7c:	stp	x8, xzr, [x29, #-152]
    2e80:	mov	w8, #0x103                 	// #259
    2e84:	sturh	w8, [x29, #-136]
    2e88:	ldr	x0, [x24]
    2e8c:	ldr	x8, [x0]
    2e90:	ldr	x9, [x8, #48]
    2e94:	add	x8, sp, #0x90
    2e98:	blr	x9
    2e9c:	ldurb	w8, [x29, #-136]
    2ea0:	cmp	w8, #0x1
    2ea4:	b.eq	2ec8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x2e4>  // b.none
    2ea8:	cbnz	w8, 2f10 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x32c>
    2eac:	mov	w8, #0x100                 	// #256
    2eb0:	stp	xzr, xzr, [x29, #-128]
    2eb4:	sturh	w8, [x29, #-112]
    2eb8:	stp	xzr, xzr, [x29, #-104]
    2ebc:	sturb	wzr, [x29, #-88]
    2ec0:	mov	w8, #0x1                   	// #1
    2ec4:	b	2f08 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x324>
    2ec8:	add	x10, sp, #0x90
    2ecc:	stp	x10, xzr, [x29, #-128]
    2ed0:	stur	x10, [x29, #-104]
    2ed4:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2ed8:	add	x10, x10, #0x0
    2edc:	mov	w8, #0x104                 	// #260
    2ee0:	stur	x10, [x29, #-96]
    2ee4:	mov	w10, #0x4                   	// #4
    2ee8:	sturh	w8, [x29, #-112]
    2eec:	ldur	w8, [x29, #-160]
    2ef0:	sturb	w10, [x29, #-88]
    2ef4:	ldr	x10, [sp, #32]
    2ef8:	ldurh	w9, [x29, #-156]
    2efc:	str	w8, [x10]
    2f00:	mov	w8, #0x3                   	// #3
    2f04:	strh	w9, [x10, #4]
    2f08:	sturb	w8, [x29, #-87]
    2f0c:	b	2f8c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x3a8>
    2f10:	ldurb	w9, [x29, #-135]
    2f14:	ldur	x10, [x29, #-152]
    2f18:	cmp	w9, #0x1
    2f1c:	mov	w9, #0x2                   	// #2
    2f20:	csel	w9, w8, w9, eq  // eq = none
    2f24:	sub	x8, x29, #0x98
    2f28:	csel	x8, x10, x8, eq  // eq = none
    2f2c:	add	x10, sp, #0x90
    2f30:	sturb	w9, [x29, #-112]
    2f34:	cmp	w9, #0x2
    2f38:	mov	w9, #0x4                   	// #4
    2f3c:	stp	x8, x10, [x29, #-128]
    2f40:	sturb	w9, [x29, #-111]
    2f44:	b.ne	2f5c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x378>  // b.any
    2f48:	ldrb	w9, [x8, #16]
    2f4c:	cbz	w9, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    2f50:	ldrb	w8, [x8, #17]
    2f54:	cmp	w8, #0x1
    2f58:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    2f5c:	ldurb	w8, [x29, #-112]
    2f60:	sub	x9, x29, #0x80
    2f64:	stur	x9, [x29, #-104]
    2f68:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2f6c:	add	x9, x9, #0x0
    2f70:	stur	x9, [x29, #-96]
    2f74:	mov	w9, #0x302                 	// #770
    2f78:	sturh	w9, [x29, #-88]
    2f7c:	cbz	w8, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    2f80:	ldurb	w8, [x29, #-111]
    2f84:	cmp	w8, #0x1
    2f88:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    2f8c:	ldr	x0, [x21]
    2f90:	ldr	x8, [x0]
    2f94:	ldr	x9, [x8, #48]
    2f98:	add	x8, sp, #0x68
    2f9c:	blr	x9
    2fa0:	ldurb	w8, [x29, #-88]
    2fa4:	cmp	w8, #0x1
    2fa8:	b.eq	2fcc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x3e8>  // b.none
    2fac:	cbnz	w8, 3014 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x430>
    2fb0:	mov	w8, #0x100                 	// #256
    2fb4:	stp	xzr, xzr, [x29, #-80]
    2fb8:	sturh	w8, [x29, #-64]
    2fbc:	stp	xzr, xzr, [x29, #-56]
    2fc0:	sturb	wzr, [x29, #-40]
    2fc4:	mov	w8, #0x1                   	// #1
    2fc8:	b	300c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x428>
    2fcc:	add	x10, sp, #0x68
    2fd0:	stp	x10, xzr, [x29, #-80]
    2fd4:	stur	x10, [x29, #-56]
    2fd8:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    2fdc:	add	x10, x10, #0x0
    2fe0:	mov	w8, #0x104                 	// #260
    2fe4:	stur	x10, [x29, #-48]
    2fe8:	mov	w10, #0x4                   	// #4
    2fec:	sturh	w8, [x29, #-64]
    2ff0:	ldr	w8, [sp, #136]
    2ff4:	sturb	w10, [x29, #-40]
    2ff8:	ldr	x10, [sp, #24]
    2ffc:	ldrh	w9, [sp, #140]
    3000:	str	w8, [x10]
    3004:	mov	w8, #0x3                   	// #3
    3008:	strh	w9, [x10, #4]
    300c:	sturb	w8, [x29, #-39]
    3010:	b	3090 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4ac>
    3014:	ldurb	w9, [x29, #-87]
    3018:	ldur	x10, [x29, #-104]
    301c:	cmp	w9, #0x1
    3020:	mov	w9, #0x2                   	// #2
    3024:	csel	w9, w8, w9, eq  // eq = none
    3028:	sub	x8, x29, #0x68
    302c:	csel	x8, x10, x8, eq  // eq = none
    3030:	add	x10, sp, #0x68
    3034:	sturb	w9, [x29, #-64]
    3038:	cmp	w9, #0x2
    303c:	mov	w9, #0x4                   	// #4
    3040:	stp	x8, x10, [x29, #-80]
    3044:	sturb	w9, [x29, #-63]
    3048:	b.ne	3060 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x47c>  // b.any
    304c:	ldrb	w9, [x8, #16]
    3050:	cbz	w9, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    3054:	ldrb	w8, [x8, #17]
    3058:	cmp	w8, #0x1
    305c:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    3060:	ldurb	w8, [x29, #-64]
    3064:	sub	x9, x29, #0x50
    3068:	stur	x9, [x29, #-56]
    306c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3070:	add	x9, x9, #0x0
    3074:	stur	x9, [x29, #-48]
    3078:	mov	w9, #0x302                 	// #770
    307c:	sturh	w9, [x29, #-40]
    3080:	cbz	w8, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    3084:	ldurb	w8, [x29, #-63]
    3088:	cmp	w8, #0x1
    308c:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    3090:	ldr	x0, [x24, #16]
    3094:	ldr	x8, [x0]
    3098:	ldr	x9, [x8, #40]
    309c:	add	x8, sp, #0x40
    30a0:	blr	x9
    30a4:	ldurb	w8, [x29, #-40]
    30a8:	cmp	w8, #0x1
    30ac:	b.eq	30c4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x4e0>  // b.none
    30b0:	cbnz	w8, 30ec <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x508>
    30b4:	mov	w8, #0x100                 	// #256
    30b8:	stp	xzr, xzr, [x29, #-32]
    30bc:	sturh	w8, [x29, #-16]
    30c0:	b	3138 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x554>
    30c4:	add	x10, sp, #0x40
    30c8:	stp	x10, xzr, [x29, #-32]
    30cc:	mov	w10, #0x104                 	// #260
    30d0:	ldr	w8, [sp, #96]
    30d4:	ldrh	w9, [sp, #100]
    30d8:	sturh	w10, [x29, #-16]
    30dc:	ldr	x10, [sp, #16]
    30e0:	strh	w9, [x10, #4]
    30e4:	str	w8, [x10]
    30e8:	b	3138 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x554>
    30ec:	ldurb	w9, [x29, #-39]
    30f0:	ldur	x10, [x29, #-56]
    30f4:	cmp	w9, #0x1
    30f8:	mov	w9, #0x2                   	// #2
    30fc:	csel	w9, w8, w9, eq  // eq = none
    3100:	sub	x8, x29, #0x38
    3104:	csel	x8, x10, x8, eq  // eq = none
    3108:	add	x10, sp, #0x40
    310c:	sturb	w9, [x29, #-16]
    3110:	cmp	w9, #0x2
    3114:	mov	w9, #0x4                   	// #4
    3118:	stp	x8, x10, [x29, #-32]
    311c:	sturb	w9, [x29, #-15]
    3120:	b.ne	3138 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x554>  // b.any
    3124:	ldrb	w9, [x8, #16]
    3128:	cbz	w9, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    312c:	ldrb	w8, [x8, #17]
    3130:	cmp	w8, #0x1
    3134:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    3138:	sub	x2, x29, #0x20
    313c:	mov	x0, x22
    3140:	mov	x1, x23
    3144:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3148:	ldr	x0, [sp, #64]
    314c:	ldr	x8, [sp, #48]
    3150:	cmp	x0, x8
    3154:	b.eq	315c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x578>  // b.none
    3158:	bl	0 <_ZdlPv>
    315c:	ldr	x0, [sp, #104]
    3160:	ldr	x8, [sp, #40]
    3164:	cmp	x0, x8
    3168:	b.eq	3170 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x58c>  // b.none
    316c:	bl	0 <_ZdlPv>
    3170:	ldr	x0, [sp, #144]
    3174:	cmp	x0, x27
    3178:	b.eq	2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>  // b.none
    317c:	bl	0 <_ZdlPv>
    3180:	b	2d80 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x19c>
    3184:	ldr	x21, [x19]
    3188:	ldr	x26, [sp, #8]
    318c:	ldr	x8, [x21]
    3190:	cbz	x8, 35bc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9d8>
    3194:	ldrb	w8, [x8, #8]
    3198:	cmp	w8, #0x12
    319c:	b.ne	3260 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x67c>  // b.any
    31a0:	ldr	w8, [x21, #64]
    31a4:	cbnz	w8, 35dc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9f8>
    31a8:	ldr	w23, [x26, #304]
    31ac:	cbz	w23, 347c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x898>
    31b0:	ldr	x20, [x26, #296]
    31b4:	mov	x0, x21
    31b8:	ldr	x22, [x20]
    31bc:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    31c0:	mov	x21, x0
    31c4:	ldr	x0, [x0, #16]
    31c8:	ldr	x1, [x22, #8]
    31cc:	ldr	x8, [x0]
    31d0:	ldr	x8, [x8, #32]
    31d4:	blr	x8
    31d8:	tbz	w0, #0, 33c4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7e0>
    31dc:	lsl	x8, x23, #3
    31e0:	add	x20, x20, #0x8
    31e4:	sub	x23, x8, #0x8
    31e8:	ldp	w8, w9, [x22, #24]
    31ec:	cmp	w8, w9
    31f0:	b.cs	3244 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x660>  // b.hs, b.nlast
    31f4:	ldr	x9, [x22, #16]
    31f8:	str	x21, [x9, w8, uxtw #3]
    31fc:	ldp	w8, w9, [x22, #24]
    3200:	cmp	w8, w9
    3204:	b.cs	359c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9b8>  // b.hs, b.nlast
    3208:	add	w8, w8, #0x1
    320c:	str	w8, [x22, #24]
    3210:	cbz	x23, 3478 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x894>
    3214:	ldr	x0, [x19]
    3218:	ldr	x22, [x20], #8
    321c:	bl	0 <_ZN4llvm6Record10getDefInitEv>
    3220:	mov	x21, x0
    3224:	ldr	x0, [x0, #16]
    3228:	ldr	x1, [x22, #8]
    322c:	ldr	x8, [x0]
    3230:	ldr	x8, [x8, #32]
    3234:	blr	x8
    3238:	sub	x23, x23, #0x8
    323c:	tbnz	w0, #0, 31e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x604>
    3240:	b	33c4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7e0>
    3244:	add	x0, x22, #0x10
    3248:	add	x1, x0, #0x10
    324c:	mov	w3, #0x8                   	// #8
    3250:	mov	x2, xzr
    3254:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3258:	ldr	w8, [x22, #24]
    325c:	b	31f4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x610>
    3260:	ldp	x0, x20, [x21]
    3264:	ldr	w19, [x21, #16]
    3268:	add	x21, sp, #0x90
    326c:	ldr	x8, [x0]
    3270:	ldr	x9, [x8, #40]
    3274:	add	x8, sp, #0x90
    3278:	blr	x9
    327c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3280:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3284:	add	x8, x8, #0x0
    3288:	mov	w9, #0x403                 	// #1027
    328c:	add	x10, sp, #0x40
    3290:	add	x11, x11, #0x0
    3294:	mov	w12, #0x302                 	// #770
    3298:	stp	x8, x21, [sp, #64]
    329c:	strh	w9, [sp, #80]
    32a0:	stp	x10, x11, [sp, #104]
    32a4:	strh	w12, [sp, #120]
    32a8:	cbnz	wzr, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    32ac:	ldrb	w8, [sp, #81]
    32b0:	cmp	w8, #0x1
    32b4:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    32b8:	add	x2, sp, #0x68
    32bc:	mov	x0, x20
    32c0:	mov	x1, x19
    32c4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    32c8:	ldr	x0, [sp, #144]
    32cc:	add	x8, sp, #0x90
    32d0:	add	x8, x8, #0x10
    32d4:	cmp	x0, x8
    32d8:	b.eq	32e0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x6fc>  // b.none
    32dc:	bl	0 <_ZdlPv>
    32e0:	mov	w19, #0x1                   	// #1
    32e4:	b	34f8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x914>
    32e8:	ldp	x0, x20, [x21]
    32ec:	ldr	w19, [x21, #16]
    32f0:	ldr	x8, [x0]
    32f4:	ldr	x9, [x8, #48]
    32f8:	add	x8, sp, #0x68
    32fc:	blr	x9
    3300:	ldr	x8, [sp, #112]
    3304:	add	x23, sp, #0x90
    3308:	add	x21, x23, #0x10
    330c:	add	x0, sp, #0x90
    3310:	add	x1, x8, #0x14
    3314:	stp	x21, xzr, [sp, #144]
    3318:	strb	wzr, [sp, #160]
    331c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    3320:	ldr	x8, [sp, #152]
    3324:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    3328:	sub	x8, x9, x8
    332c:	cmp	x8, #0x13
    3330:	b.ls	35fc <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa18>  // b.plast
    3334:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3338:	add	x1, x1, #0x0
    333c:	add	x0, sp, #0x90
    3340:	mov	w2, #0x14                  	// #20
    3344:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3348:	ldp	x1, x2, [sp, #104]
    334c:	add	x0, sp, #0x90
    3350:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3354:	mov	w8, #0x104                 	// #260
    3358:	add	x2, sp, #0x40
    335c:	mov	x0, x20
    3360:	mov	x1, x19
    3364:	strh	w8, [sp, #80]
    3368:	stp	x23, xzr, [sp, #64]
    336c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3370:	ldr	x0, [sp, #144]
    3374:	cmp	x0, x21
    3378:	b.eq	3380 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x79c>  // b.none
    337c:	bl	0 <_ZdlPv>
    3380:	ldr	x0, [sp, #104]
    3384:	add	x8, sp, #0x68
    3388:	add	x8, x8, #0x10
    338c:	cmp	x0, x8
    3390:	b.eq	3398 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x7b4>  // b.none
    3394:	bl	0 <_ZdlPv>
    3398:	ldr	x0, [x22, #8]
    339c:	ldr	w1, [x22, #16]
    33a0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33a4:	add	x8, x8, #0x0
    33a8:	stp	x8, xzr, [sp, #144]
    33ac:	mov	w8, #0x103                 	// #259
    33b0:	add	x2, sp, #0x90
    33b4:	strh	w8, [sp, #160]
    33b8:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    33bc:	mov	w19, #0x1                   	// #1
    33c0:	b	34f8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x914>
    33c4:	ldr	x0, [x21, #16]
    33c8:	ldr	x8, [x19]
    33cc:	add	x21, sp, #0x90
    33d0:	ldr	x9, [x0]
    33d4:	ldr	x20, [x8, #8]
    33d8:	ldr	w19, [x8, #16]
    33dc:	add	x8, sp, #0x90
    33e0:	ldr	x9, [x9, #16]
    33e4:	blr	x9
    33e8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33ec:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    33f0:	add	x8, x8, #0x0
    33f4:	mov	w9, #0x403                 	// #1027
    33f8:	add	x10, sp, #0x40
    33fc:	add	x11, x11, #0x0
    3400:	mov	w12, #0x302                 	// #770
    3404:	stp	x8, x21, [sp, #64]
    3408:	strh	w9, [sp, #80]
    340c:	stp	x10, x11, [sp, #104]
    3410:	strh	w12, [sp, #120]
    3414:	cbnz	wzr, 357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>
    3418:	ldrb	w8, [sp, #81]
    341c:	cmp	w8, #0x1
    3420:	b.eq	357c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x998>  // b.none
    3424:	add	x2, sp, #0x68
    3428:	mov	x0, x20
    342c:	mov	x1, x19
    3430:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3434:	ldr	x0, [sp, #144]
    3438:	add	x8, sp, #0x90
    343c:	add	x8, x8, #0x10
    3440:	cmp	x0, x8
    3444:	b.eq	344c <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x868>  // b.none
    3448:	bl	0 <_ZdlPv>
    344c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3450:	add	x8, x8, #0x0
    3454:	mov	w9, #0x103                 	// #259
    3458:	add	x2, sp, #0x90
    345c:	mov	w1, #0x1                   	// #1
    3460:	mov	x0, x22
    3464:	stp	x8, xzr, [sp, #144]
    3468:	strh	w9, [sp, #160]
    346c:	mov	w19, #0x1                   	// #1
    3470:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3474:	b	34f8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x914>
    3478:	ldr	x21, [x19]
    347c:	ldr	x0, [x26, #344]
    3480:	add	x1, sp, #0x38
    3484:	str	xzr, [x19]
    3488:	str	x21, [sp, #56]
    348c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3490:	ldr	x19, [sp, #56]
    3494:	cbz	x19, 34f0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x90c>
    3498:	ldr	x0, [x19, #88]
    349c:	add	x8, x19, #0x68
    34a0:	cmp	x0, x8
    34a4:	b.eq	34ac <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c8>  // b.none
    34a8:	bl	0 <free>
    34ac:	ldr	x0, [x19, #72]
    34b0:	add	x8, x19, #0x58
    34b4:	cmp	x0, x8
    34b8:	b.eq	34c0 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8dc>  // b.none
    34bc:	bl	0 <free>
    34c0:	ldr	x0, [x19, #56]
    34c4:	add	x8, x19, #0x48
    34c8:	cmp	x0, x8
    34cc:	b.eq	34d4 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8f0>  // b.none
    34d0:	bl	0 <free>
    34d4:	ldr	x0, [x19, #8]
    34d8:	add	x8, x19, #0x18
    34dc:	cmp	x0, x8
    34e0:	b.eq	34e8 <_ZN4llvm8TGParser9addDefOneESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x904>  // b.none
    34e4:	bl	0 <free>
    34e8:	mov	x0, x19
    34ec:	bl	0 <_ZdlPv>
    34f0:	mov	w19, wzr
    34f4:	str	xzr, [sp, #56]
    34f8:	mov	w0, w19
    34fc:	ldp	x20, x19, [sp, #416]
    3500:	ldp	x22, x21, [sp, #400]
    3504:	ldp	x24, x23, [sp, #384]
    3508:	ldp	x26, x25, [sp, #368]
    350c:	ldp	x28, x27, [sp, #352]
    3510:	ldp	x29, x30, [sp, #336]
    3514:	add	sp, sp, #0x1b0
    3518:	ret
    351c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3520:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3524:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3528:	add	x0, x0, #0x0
    352c:	add	x1, x1, #0x0
    3530:	add	x3, x3, #0x0
    3534:	mov	w2, #0x69                  	// #105
    3538:	bl	0 <__assert_fail>
    353c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3540:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3544:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3548:	add	x0, x0, #0x0
    354c:	add	x1, x1, #0x0
    3550:	add	x3, x3, #0x0
    3554:	mov	w2, #0x22e                 	// #558
    3558:	bl	0 <__assert_fail>
    355c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3560:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3564:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3568:	add	x0, x0, #0x0
    356c:	add	x1, x1, #0x0
    3570:	add	x3, x3, #0x0
    3574:	mov	w2, #0x69                  	// #105
    3578:	bl	0 <__assert_fail>
    357c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3580:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3584:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3588:	add	x0, x0, #0x0
    358c:	add	x1, x1, #0x0
    3590:	add	x3, x3, #0x0
    3594:	mov	w2, #0xb8                  	// #184
    3598:	bl	0 <__assert_fail>
    359c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35a0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35a4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35a8:	add	x0, x0, #0x0
    35ac:	add	x1, x1, #0x0
    35b0:	add	x3, x3, #0x0
    35b4:	mov	w2, #0x43                  	// #67
    35b8:	bl	0 <__assert_fail>
    35bc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35c0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35c4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35c8:	add	x0, x0, #0x0
    35cc:	add	x1, x1, #0x0
    35d0:	add	x3, x3, #0x0
    35d4:	mov	w2, #0x69                  	// #105
    35d8:	bl	0 <__assert_fail>
    35dc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35e0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35e4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    35e8:	add	x0, x0, #0x0
    35ec:	add	x1, x1, #0x0
    35f0:	add	x3, x3, #0x0
    35f4:	mov	w2, #0x1cd                 	// #461
    35f8:	bl	0 <__assert_fail>
    35fc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3600:	add	x0, x0, #0x0
    3604:	bl	0 <_ZSt20__throw_length_errorPKc>

0000000000003608 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>:
    3608:	sub	sp, sp, #0x50
    360c:	stp	x29, x30, [sp, #48]
    3610:	stp	x20, x19, [sp, #64]
    3614:	add	x29, sp, #0x30
    3618:	ldr	w8, [x0, #40]
    361c:	mov	x20, x1
    3620:	cmp	w8, #0xd
    3624:	b.hi	364c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x44>  // b.pmore
    3628:	mov	w9, #0x1                   	// #1
    362c:	lsl	w8, w9, w8
    3630:	mov	w9, #0x3040                	// #12352
    3634:	tst	w8, w9
    3638:	b.eq	364c <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0x44>  // b.none
    363c:	ldp	x20, x19, [sp, #64]
    3640:	ldp	x29, x30, [sp, #48]
    3644:	add	sp, sp, #0x50
    3648:	b	0 <_ZN4llvm9UnsetInit3getEv>
    364c:	adrp	x2, 0 <_ZN4llvm11StringRecTy6SharedE>
    3650:	ldr	x2, [x2]
    3654:	mov	w3, #0x1                   	// #1
    3658:	mov	x1, x20
    365c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    3660:	mov	x19, x0
    3664:	cbz	x20, 36f0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    3668:	cbz	x19, 36f0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    366c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3670:	add	x0, x0, #0x0
    3674:	mov	w1, #0x4                   	// #4
    3678:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    367c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3680:	mov	x2, x0
    3684:	add	x3, x3, #0x0
    3688:	mov	w4, #0x2                   	// #2
    368c:	mov	x0, x20
    3690:	mov	x1, x20
    3694:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    3698:	strb	wzr, [sp, #24]
    369c:	adrp	x8, 0 <_ZTVN4llvm20HasReferenceResolverE>
    36a0:	ldr	x8, [x8]
    36a4:	str	x0, [sp, #32]
    36a8:	strb	wzr, [sp, #40]
    36ac:	mov	x20, x0
    36b0:	add	x8, x8, #0x10
    36b4:	stp	x8, xzr, [sp, #8]
    36b8:	ldr	x8, [x19]
    36bc:	add	x1, sp, #0x8
    36c0:	mov	x0, x19
    36c4:	ldr	x8, [x8, #96]
    36c8:	blr	x8
    36cc:	ldrb	w8, [sp, #40]
    36d0:	cbnz	w8, 36f0 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE+0xe8>
    36d4:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    36d8:	ldr	x1, [x1]
    36dc:	mov	x0, x20
    36e0:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    36e4:	mov	x1, x19
    36e8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    36ec:	mov	x19, x0
    36f0:	mov	x0, x19
    36f4:	ldp	x20, x19, [sp, #64]
    36f8:	ldp	x29, x30, [sp, #48]
    36fc:	add	sp, sp, #0x50
    3700:	ret

0000000000003704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    3704:	sub	sp, sp, #0x160
    3708:	str	d8, [sp, #240]
    370c:	stp	x29, x30, [sp, #256]
    3710:	stp	x28, x27, [sp, #272]
    3714:	stp	x26, x25, [sp, #288]
    3718:	stp	x24, x23, [sp, #304]
    371c:	stp	x22, x21, [sp, #320]
    3720:	stp	x20, x19, [sp, #336]
    3724:	add	x29, sp, #0xf0
    3728:	mov	w20, w3
    372c:	mov	x21, x2
    3730:	mov	x22, x1
    3734:	mov	x19, x0
    3738:	bl	8a64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    373c:	mov	x23, x0
    3740:	cbz	x0, 3f8c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>
    3744:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3748:	adrp	x24, 0 <_ZN4llvm11StringRecTy6SharedE>
    374c:	ldr	d8, [x9]
    3750:	ldr	x24, [x24]
    3754:	sub	x8, x29, #0x58
    3758:	adrp	x25, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    375c:	add	x25, x25, #0x0
    3760:	add	x28, x8, #0x10
    3764:	ldr	w8, [x19, #40]
    3768:	sub	w8, w8, #0x4
    376c:	cmp	w8, #0xe
    3770:	b.hi	3f8c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>  // b.pmore
    3774:	adr	x9, 3784 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x80>
    3778:	ldrh	w10, [x25, x8, lsl #1]
    377c:	add	x9, x9, x10, lsl #2
    3780:	br	x9
    3784:	mov	x0, x19
    3788:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    378c:	ldp	x8, x9, [x19, #8]
    3790:	mov	x26, x0
    3794:	mov	x0, x19
    3798:	cmp	x8, x9
    379c:	cset	w1, eq  // eq = none
    37a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    37a4:	str	w0, [x19, #40]
    37a8:	stur	x28, [x29, #-88]
    37ac:	stur	d8, [x29, #-80]
    37b0:	sub	x1, x29, #0x58
    37b4:	mov	x0, x19
    37b8:	mov	x2, xzr
    37bc:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    37c0:	tbnz	w0, #0, 3964 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x260>
    37c4:	ldr	w8, [x19, #40]
    37c8:	cmp	w8, #0xe
    37cc:	b.ne	39e4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2e0>  // b.any
    37d0:	ldp	x8, x9, [x19, #8]
    37d4:	mov	x0, x19
    37d8:	cmp	x8, x9
    37dc:	cset	w1, eq  // eq = none
    37e0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    37e4:	str	w0, [x19, #40]
    37e8:	b	37b0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xac>
    37ec:	ldp	x8, x9, [x19, #8]
    37f0:	mov	x0, x19
    37f4:	cmp	x8, x9
    37f8:	cset	w1, eq  // eq = none
    37fc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3800:	cmp	w0, #0x48
    3804:	str	w0, [x19, #40]
    3808:	b.ne	3c64 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x560>  // b.any
    380c:	ldp	x0, x1, [x19, #48]
    3810:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3814:	ldr	x8, [x23]
    3818:	mov	x26, x0
    381c:	mov	x0, x23
    3820:	mov	x1, x26
    3824:	ldr	x8, [x8, #88]
    3828:	blr	x8
    382c:	cbz	x0, 3c98 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x594>
    3830:	mov	x0, x23
    3834:	mov	x1, x26
    3838:	bl	0 <_ZN4llvm9FieldInit3getEPNS_4InitEPNS_10StringInitE>
    383c:	mov	x1, x22
    3840:	bl	0 <_ZNK4llvm9FieldInit4FoldEPNS_6RecordE>
    3844:	ldp	x8, x9, [x19, #8]
    3848:	mov	x23, x0
    384c:	mov	x0, x19
    3850:	cmp	x8, x9
    3854:	cset	w1, eq  // eq = none
    3858:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    385c:	str	w0, [x19, #40]
    3860:	b	3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3864:	cmp	w20, #0x1
    3868:	b.eq	3f8c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x888>  // b.none
    386c:	mov	x0, x19
    3870:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3874:	ldp	x8, x9, [x19, #8]
    3878:	mov	x26, x0
    387c:	mov	x0, x19
    3880:	cmp	x8, x9
    3884:	cset	w1, eq  // eq = none
    3888:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    388c:	str	w0, [x19, #40]
    3890:	stur	x28, [x29, #-88]
    3894:	stur	d8, [x29, #-80]
    3898:	sub	x1, x29, #0x58
    389c:	mov	x0, x19
    38a0:	mov	x2, xzr
    38a4:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    38a8:	tbnz	w0, #0, 3984 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x280>
    38ac:	ldr	w8, [x19, #40]
    38b0:	cmp	w8, #0xe
    38b4:	b.ne	3a34 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x330>  // b.any
    38b8:	ldp	x8, x9, [x19, #8]
    38bc:	mov	x0, x19
    38c0:	cmp	x8, x9
    38c4:	cset	w1, eq  // eq = none
    38c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    38cc:	str	w0, [x19, #40]
    38d0:	b	3898 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x194>
    38d4:	mov	x0, x19
    38d8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    38dc:	cbz	x23, 3fc0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    38e0:	ldrb	w8, [x23, #8]
    38e4:	mov	x26, x0
    38e8:	sub	w8, w8, #0x1
    38ec:	cmp	w8, #0x17
    38f0:	b.cs	3c48 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x544>  // b.hs, b.nlast
    38f4:	ldr	x8, [x23, #16]
    38f8:	cbz	x8, 3fe0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8dc>
    38fc:	ldr	w9, [x8, #8]
    3900:	cmp	w9, #0x5
    3904:	b.ne	39a4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x2a0>  // b.any
    3908:	ldp	x8, x9, [x19, #8]
    390c:	mov	x0, x19
    3910:	cmp	x8, x9
    3914:	cset	w1, eq  // eq = none
    3918:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    391c:	cmp	w0, #0xd
    3920:	str	w0, [x19, #40]
    3924:	b.hi	393c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x238>  // b.pmore
    3928:	mov	w8, #0x1                   	// #1
    392c:	lsl	w8, w8, w0
    3930:	mov	w9, #0x3040                	// #12352
    3934:	tst	w8, w9
    3938:	b.ne	3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>  // b.any
    393c:	mov	w3, #0x1                   	// #1
    3940:	mov	x0, x19
    3944:	mov	x1, x22
    3948:	mov	x2, x21
    394c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    3950:	mov	x1, x0
    3954:	mov	x0, x23
    3958:	bl	0 <_ZN4llvm9BinOpInit13getListConcatEPNS_9TypedInitEPNS_4InitE>
    395c:	mov	x23, x0
    3960:	b	3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3964:	mov	w26, wzr
    3968:	stur	wzr, [x29, #-80]
    396c:	ldur	x0, [x29, #-88]
    3970:	cmp	x0, x28
    3974:	b.eq	397c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x278>  // b.none
    3978:	bl	0 <free>
    397c:	tbnz	w26, #0, 3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3980:	b	3f88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3984:	mov	w26, wzr
    3988:	stur	wzr, [x29, #-80]
    398c:	ldur	x0, [x29, #-88]
    3990:	cmp	x0, x28
    3994:	b.eq	399c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x298>  // b.none
    3998:	bl	0 <free>
    399c:	tbnz	w26, #0, 3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    39a0:	b	3f88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    39a4:	cmp	x8, x24
    39a8:	b.eq	3abc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3b8>  // b.none
    39ac:	mov	w0, wzr
    39b0:	mov	x1, x23
    39b4:	mov	x2, x24
    39b8:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    39bc:	mov	x1, x22
    39c0:	mov	w2, wzr
    39c4:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    39c8:	cbz	x0, 3fc0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    39cc:	ldrb	w8, [x0, #8]
    39d0:	mov	x27, x0
    39d4:	sub	w8, w8, #0x1
    39d8:	cmp	w8, #0x17
    39dc:	b.cc	3ac0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3bc>  // b.lo, b.ul, b.last
    39e0:	b	3d4c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x648>
    39e4:	ldur	w2, [x29, #-80]
    39e8:	cbz	w2, 3b88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x484>
    39ec:	ldr	x8, [x23]
    39f0:	ldur	x1, [x29, #-88]
    39f4:	mov	x0, x23
    39f8:	ldr	x8, [x8, #80]
    39fc:	blr	x8
    3a00:	mov	x23, x0
    3a04:	cbz	x0, 3b98 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x494>
    3a08:	ldr	w8, [x19, #40]
    3a0c:	cmp	w8, #0x5
    3a10:	b.ne	3bd0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4cc>  // b.any
    3a14:	ldp	x8, x9, [x19, #8]
    3a18:	mov	x0, x19
    3a1c:	cmp	x8, x9
    3a20:	cset	w1, eq  // eq = none
    3a24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3a28:	mov	w26, #0x1                   	// #1
    3a2c:	str	w0, [x19, #40]
    3a30:	b	396c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    3a34:	ldur	w9, [x29, #-80]
    3a38:	cbz	w9, 3b90 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x48c>
    3a3c:	ldur	x1, [x29, #-88]
    3a40:	add	x8, x1, x9, lsl #2
    3a44:	sub	x8, x8, #0x4
    3a48:	cmp	x8, x1
    3a4c:	b.ls	3a74 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x370>  // b.plast
    3a50:	add	x9, x1, #0x4
    3a54:	ldr	w10, [x8]
    3a58:	ldur	w11, [x9, #-4]
    3a5c:	stur	w10, [x9, #-4]
    3a60:	str	w11, [x8], #-4
    3a64:	cmp	x9, x8
    3a68:	add	x9, x9, #0x4
    3a6c:	b.cc	3a54 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x350>  // b.lo, b.ul, b.last
    3a70:	ldur	w9, [x29, #-80]
    3a74:	ldr	x8, [x23]
    3a78:	mov	w2, w9
    3a7c:	mov	x0, x23
    3a80:	ldr	x8, [x8, #72]
    3a84:	blr	x8
    3a88:	mov	x23, x0
    3a8c:	cbz	x0, 3bb4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4b0>
    3a90:	ldr	w8, [x19, #40]
    3a94:	cmp	w8, #0x7
    3a98:	b.ne	3c08 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x504>  // b.any
    3a9c:	ldp	x8, x9, [x19, #8]
    3aa0:	mov	x0, x19
    3aa4:	cmp	x8, x9
    3aa8:	cset	w1, eq  // eq = none
    3aac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3ab0:	mov	w26, #0x1                   	// #1
    3ab4:	str	w0, [x19, #40]
    3ab8:	b	398c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    3abc:	mov	x27, x23
    3ac0:	ldp	x8, x9, [x19, #8]
    3ac4:	mov	x0, x19
    3ac8:	cmp	x8, x9
    3acc:	cset	w1, eq  // eq = none
    3ad0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    3ad4:	cmp	w0, #0xd
    3ad8:	str	w0, [x19, #40]
    3adc:	b.hi	3b18 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x414>  // b.pmore
    3ae0:	mov	w8, #0x1                   	// #1
    3ae4:	lsl	w8, w8, w0
    3ae8:	mov	w9, #0x3040                	// #12352
    3aec:	tst	w8, w9
    3af0:	b.eq	3b18 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x414>  // b.none
    3af4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3af8:	add	x0, x0, #0x0
    3afc:	mov	x1, xzr
    3b00:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    3b04:	mov	x1, x0
    3b08:	mov	x0, x27
    3b0c:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    3b10:	mov	x23, x0
    3b14:	b	3764 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x60>
    3b18:	mov	w3, #0x1                   	// #1
    3b1c:	mov	x0, x19
    3b20:	mov	x1, x22
    3b24:	mov	x2, xzr
    3b28:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    3b2c:	cbz	x0, 3fc0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    3b30:	ldrb	w8, [x0, #8]
    3b34:	mov	x23, x0
    3b38:	sub	w8, w8, #0x1
    3b3c:	cmp	w8, #0x17
    3b40:	b.cs	3fb4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8b0>  // b.hs, b.nlast
    3b44:	ldr	x8, [x23, #16]
    3b48:	cmp	x8, x24
    3b4c:	b.eq	3c40 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x53c>  // b.none
    3b50:	mov	w0, wzr
    3b54:	mov	x1, x23
    3b58:	mov	x2, x24
    3b5c:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    3b60:	mov	x1, x22
    3b64:	mov	w2, wzr
    3b68:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    3b6c:	cbz	x0, 3fc0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8bc>
    3b70:	ldrb	w8, [x0, #8]
    3b74:	mov	x1, x0
    3b78:	sub	w8, w8, #0x1
    3b7c:	cmp	w8, #0x17
    3b80:	b.cc	3b08 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x404>  // b.lo, b.ul, b.last
    3b84:	b	3d4c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x648>
    3b88:	mov	w26, wzr
    3b8c:	b	396c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    3b90:	mov	w26, wzr
    3b94:	b	398c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    3b98:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3b9c:	add	x8, x8, #0x0
    3ba0:	stp	x8, xzr, [sp, #96]
    3ba4:	mov	w8, #0x103                 	// #259
    3ba8:	strh	w8, [sp, #112]
    3bac:	str	x26, [sp, #64]
    3bb0:	b	3bf0 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ec>
    3bb4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3bb8:	add	x8, x8, #0x0
    3bbc:	stp	x8, xzr, [sp, #96]
    3bc0:	mov	w8, #0x103                 	// #259
    3bc4:	strh	w8, [sp, #112]
    3bc8:	str	x26, [sp, #64]
    3bcc:	b	3c28 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>
    3bd0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3bd4:	add	x8, x8, #0x0
    3bd8:	stp	x8, xzr, [sp, #96]
    3bdc:	mov	w8, #0x103                 	// #259
    3be0:	mov	x0, x19
    3be4:	strh	w8, [sp, #112]
    3be8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3bec:	str	x0, [sp, #64]
    3bf0:	add	x0, sp, #0x40
    3bf4:	add	x2, sp, #0x60
    3bf8:	mov	w1, #0x1                   	// #1
    3bfc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3c00:	mov	w26, wzr
    3c04:	b	396c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x268>
    3c08:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3c0c:	add	x8, x8, #0x0
    3c10:	stp	x8, xzr, [sp, #96]
    3c14:	mov	w8, #0x103                 	// #259
    3c18:	mov	x0, x19
    3c1c:	strh	w8, [sp, #112]
    3c20:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3c24:	str	x0, [sp, #64]
    3c28:	add	x0, sp, #0x40
    3c2c:	add	x2, sp, #0x60
    3c30:	mov	w1, #0x1                   	// #1
    3c34:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3c38:	mov	w26, wzr
    3c3c:	b	398c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x288>
    3c40:	mov	x1, x23
    3c44:	b	3b08 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x404>
    3c48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3c4c:	add	x8, x8, #0x0
    3c50:	mov	w9, #0x103                 	// #259
    3c54:	stp	x8, xzr, [x29, #-88]
    3c58:	sturh	w9, [x29, #-72]
    3c5c:	str	x26, [sp, #96]
    3c60:	b	3c84 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x580>
    3c64:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3c68:	add	x8, x8, #0x0
    3c6c:	mov	w9, #0x103                 	// #259
    3c70:	mov	x0, x19
    3c74:	stp	x8, xzr, [x29, #-88]
    3c78:	sturh	w9, [x29, #-72]
    3c7c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3c80:	str	x0, [sp, #96]
    3c84:	add	x0, sp, #0x60
    3c88:	sub	x2, x29, #0x58
    3c8c:	mov	w1, #0x1                   	// #1
    3c90:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3c94:	b	3f88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3c98:	ldr	w8, [x19, #40]
    3c9c:	and	w8, w8, #0xfffffffc
    3ca0:	cmp	w8, #0x48
    3ca4:	b.ne	400c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x908>  // b.any
    3ca8:	add	x8, sp, #0x20
    3cac:	add	x20, x8, #0x10
    3cb0:	stp	x20, xzr, [sp, #32]
    3cb4:	strb	wzr, [sp, #48]
    3cb8:	ldr	x8, [x19, #56]
    3cbc:	add	x0, sp, #0x20
    3cc0:	add	x1, x8, #0x15
    3cc4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    3cc8:	ldr	x8, [sp, #40]
    3ccc:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    3cd0:	sub	x8, x21, x8
    3cd4:	cmp	x8, #0x14
    3cd8:	b.ls	4000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.plast
    3cdc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3ce0:	add	x1, x1, #0x0
    3ce4:	add	x0, sp, #0x20
    3ce8:	mov	w2, #0x15                  	// #21
    3cec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3cf0:	ldp	x1, x2, [x19, #48]
    3cf4:	add	x0, sp, #0x20
    3cf8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3cfc:	ldr	x8, [sp, #40]
    3d00:	sub	x8, x21, x8
    3d04:	cmp	x8, #0xb
    3d08:	b.ls	4000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.plast
    3d0c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3d10:	add	x1, x1, #0x0
    3d14:	add	x0, sp, #0x20
    3d18:	mov	w2, #0xc                   	// #12
    3d1c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3d20:	add	x8, sp, #0x40
    3d24:	add	x21, x8, #0x10
    3d28:	str	x21, [sp, #64]
    3d2c:	mov	x8, x0
    3d30:	ldr	x9, [x8], #16
    3d34:	cmp	x9, x8
    3d38:	b.eq	3dcc <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6c8>  // b.none
    3d3c:	str	x9, [sp, #64]
    3d40:	ldr	x9, [x0, #16]
    3d44:	str	x9, [sp, #80]
    3d48:	b	3dd4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d0>
    3d4c:	ldr	x8, [x23]
    3d50:	mov	x0, x23
    3d54:	sub	x19, x29, #0x58
    3d58:	ldr	x9, [x8, #40]
    3d5c:	sub	x8, x29, #0x58
    3d60:	blr	x9
    3d64:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3d68:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3d6c:	add	x8, x8, #0x0
    3d70:	mov	w9, #0x403                 	// #1027
    3d74:	add	x10, sp, #0x40
    3d78:	add	x11, x11, #0x0
    3d7c:	mov	w12, #0x302                 	// #770
    3d80:	stp	x8, x19, [sp, #64]
    3d84:	strh	w9, [sp, #80]
    3d88:	stp	x10, x11, [sp, #96]
    3d8c:	strh	w12, [sp, #112]
    3d90:	cbnz	wzr, 402c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>
    3d94:	ldrb	w8, [sp, #81]
    3d98:	cmp	w8, #0x1
    3d9c:	b.eq	402c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>  // b.none
    3da0:	add	x0, sp, #0x20
    3da4:	add	x2, sp, #0x60
    3da8:	mov	w1, #0x1                   	// #1
    3dac:	str	x26, [sp, #32]
    3db0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3db4:	ldur	x0, [x29, #-88]
    3db8:	sub	x8, x29, #0x58
    3dbc:	add	x8, x8, #0x10
    3dc0:	cmp	x0, x8
    3dc4:	b.ne	3f84 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x880>  // b.any
    3dc8:	b	3f88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>
    3dcc:	ldr	q0, [x9]
    3dd0:	str	q0, [x21]
    3dd4:	ldr	x9, [x0, #8]
    3dd8:	mov	x22, sp
    3ddc:	str	x9, [sp, #72]
    3de0:	stp	x8, xzr, [x0]
    3de4:	strb	wzr, [x0, #16]
    3de8:	ldr	x8, [x23]
    3dec:	mov	x0, x23
    3df0:	ldr	x9, [x8, #40]
    3df4:	mov	x8, sp
    3df8:	blr	x9
    3dfc:	ldp	x3, x4, [sp, #64]
    3e00:	ldp	x1, x2, [sp]
    3e04:	ldr	x9, [sp, #80]
    3e08:	mov	w10, #0xf                   	// #15
    3e0c:	cmp	x3, x21
    3e10:	add	x8, x2, x4
    3e14:	csel	x9, x10, x9, eq  // eq = none
    3e18:	cmp	x8, x9
    3e1c:	b.ls	3e3c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x738>  // b.plast
    3e20:	ldr	x9, [sp, #16]
    3e24:	add	x10, x22, #0x10
    3e28:	cmp	x1, x10
    3e2c:	mov	w10, #0xf                   	// #15
    3e30:	csel	x9, x10, x9, eq  // eq = none
    3e34:	cmp	x8, x9
    3e38:	b.ls	3e48 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x744>  // b.plast
    3e3c:	add	x0, sp, #0x40
    3e40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3e44:	b	3e58 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x754>
    3e48:	mov	x0, sp
    3e4c:	mov	x1, xzr
    3e50:	mov	x2, xzr
    3e54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    3e58:	add	x8, sp, #0x60
    3e5c:	add	x22, x8, #0x10
    3e60:	str	x22, [sp, #96]
    3e64:	mov	x8, x0
    3e68:	ldr	x9, [x8], #16
    3e6c:	cmp	x9, x8
    3e70:	b.eq	3e84 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x780>  // b.none
    3e74:	str	x9, [sp, #96]
    3e78:	ldr	x9, [x0, #16]
    3e7c:	str	x9, [sp, #112]
    3e80:	b	3e8c <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x788>
    3e84:	ldr	q0, [x9]
    3e88:	str	q0, [x22]
    3e8c:	ldr	x9, [x0, #8]
    3e90:	str	x9, [sp, #104]
    3e94:	stp	x8, xzr, [x0]
    3e98:	strb	wzr, [x0, #16]
    3e9c:	ldr	x8, [sp, #104]
    3ea0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    3ea4:	cmp	x8, x9
    3ea8:	b.eq	4000 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8fc>  // b.none
    3eac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3eb0:	add	x1, x1, #0x0
    3eb4:	add	x0, sp, #0x60
    3eb8:	mov	w2, #0x1                   	// #1
    3ebc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    3ec0:	sub	x8, x29, #0x58
    3ec4:	add	x23, x8, #0x10
    3ec8:	stur	x23, [x29, #-88]
    3ecc:	mov	x8, x0
    3ed0:	ldr	x9, [x8], #16
    3ed4:	cmp	x9, x8
    3ed8:	b.eq	3eec <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7e8>  // b.none
    3edc:	stur	x9, [x29, #-88]
    3ee0:	ldr	x9, [x0, #16]
    3ee4:	stur	x9, [x29, #-72]
    3ee8:	b	3ef4 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f0>
    3eec:	ldr	q0, [x9]
    3ef0:	str	q0, [x23]
    3ef4:	ldr	x9, [x0, #8]
    3ef8:	mov	w10, #0x104                 	// #260
    3efc:	sub	x11, x29, #0x58
    3f00:	stur	x9, [x29, #-80]
    3f04:	stp	x8, xzr, [x0]
    3f08:	strb	wzr, [x0, #16]
    3f0c:	mov	x0, x19
    3f10:	sturh	w10, [x29, #-96]
    3f14:	stp	x11, xzr, [x29, #-112]
    3f18:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    3f1c:	str	x0, [x29, #8]
    3f20:	add	x0, x29, #0x8
    3f24:	sub	x2, x29, #0x70
    3f28:	mov	w1, #0x1                   	// #1
    3f2c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    3f30:	ldur	x0, [x29, #-88]
    3f34:	cmp	x0, x23
    3f38:	b.eq	3f40 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x83c>  // b.none
    3f3c:	bl	0 <_ZdlPv>
    3f40:	ldr	x0, [sp, #96]
    3f44:	cmp	x0, x22
    3f48:	b.eq	3f50 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x84c>  // b.none
    3f4c:	bl	0 <_ZdlPv>
    3f50:	ldr	x0, [sp]
    3f54:	mov	x8, sp
    3f58:	add	x8, x8, #0x10
    3f5c:	cmp	x0, x8
    3f60:	b.eq	3f68 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x864>  // b.none
    3f64:	bl	0 <_ZdlPv>
    3f68:	ldr	x0, [sp, #64]
    3f6c:	cmp	x0, x21
    3f70:	b.eq	3f78 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x874>  // b.none
    3f74:	bl	0 <_ZdlPv>
    3f78:	ldr	x0, [sp, #32]
    3f7c:	cmp	x0, x20
    3f80:	b.eq	3f88 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x884>  // b.none
    3f84:	bl	0 <_ZdlPv>
    3f88:	mov	x23, xzr
    3f8c:	mov	x0, x23
    3f90:	ldp	x20, x19, [sp, #336]
    3f94:	ldp	x22, x21, [sp, #320]
    3f98:	ldp	x24, x23, [sp, #304]
    3f9c:	ldp	x26, x25, [sp, #288]
    3fa0:	ldp	x28, x27, [sp, #272]
    3fa4:	ldp	x29, x30, [sp, #256]
    3fa8:	ldr	d8, [sp, #240]
    3fac:	add	sp, sp, #0x160
    3fb0:	ret
    3fb4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fb8:	add	x8, x8, #0x0
    3fbc:	b	3c50 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x54c>
    3fc0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fc4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fc8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fcc:	add	x0, x0, #0x0
    3fd0:	add	x1, x1, #0x0
    3fd4:	add	x3, x3, #0x0
    3fd8:	mov	w2, #0x69                  	// #105
    3fdc:	bl	0 <__assert_fail>
    3fe0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fe4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fe8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    3fec:	add	x0, x0, #0x0
    3ff0:	add	x1, x1, #0x0
    3ff4:	add	x3, x3, #0x0
    3ff8:	mov	w2, #0x69                  	// #105
    3ffc:	bl	0 <__assert_fail>
    4000:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4004:	add	x0, x0, #0x0
    4008:	bl	0 <_ZSt20__throw_length_errorPKc>
    400c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4010:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4014:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4018:	add	x0, x0, #0x0
    401c:	add	x1, x1, #0x0
    4020:	add	x3, x3, #0x0
    4024:	mov	w2, #0x71                  	// #113
    4028:	bl	0 <__assert_fail>
    402c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4030:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4034:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4038:	add	x0, x0, #0x0
    403c:	add	x1, x1, #0x0
    4040:	add	x3, x3, #0x0
    4044:	mov	w2, #0xb8                  	// #184
    4048:	bl	0 <__assert_fail>

000000000000404c <_ZN4llvm8TGParser12ParseClassIDEv>:
    404c:	sub	sp, sp, #0xf0
    4050:	stp	x29, x30, [sp, #160]
    4054:	stp	x26, x25, [sp, #176]
    4058:	stp	x24, x23, [sp, #192]
    405c:	stp	x22, x21, [sp, #208]
    4060:	stp	x20, x19, [sp, #224]
    4064:	add	x29, sp, #0xa0
    4068:	ldr	w8, [x0, #40]
    406c:	mov	x19, x0
    4070:	cmp	w8, #0x48
    4074:	b.ne	4118 <_ZN4llvm8TGParser12ParseClassIDEv+0xcc>  // b.any
    4078:	ldr	x8, [x19, #344]
    407c:	ldr	x22, [x19, #56]
    4080:	add	x20, x19, #0x30
    4084:	ldr	x25, [x8, #16]
    4088:	add	x23, x8, #0x8
    408c:	cbz	x25, 4158 <_ZN4llvm8TGParser12ParseClassIDEv+0x10c>
    4090:	ldr	x21, [x20]
    4094:	mov	x24, x23
    4098:	b	40ac <_ZN4llvm8TGParser12ParseClassIDEv+0x60>
    409c:	add	x8, x25, #0x10
    40a0:	mov	x24, x25
    40a4:	ldr	x25, [x8]
    40a8:	cbz	x25, 40e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x9c>
    40ac:	ldr	x26, [x25, #40]
    40b0:	cmp	x22, x26
    40b4:	csel	x2, x22, x26, cc  // cc = lo, ul, last
    40b8:	cbz	x2, 40d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x88>
    40bc:	ldr	x0, [x25, #32]
    40c0:	mov	x1, x21
    40c4:	bl	0 <memcmp>
    40c8:	cbz	w0, 40d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x88>
    40cc:	tbz	w0, #31, 409c <_ZN4llvm8TGParser12ParseClassIDEv+0x50>
    40d0:	b	40dc <_ZN4llvm8TGParser12ParseClassIDEv+0x90>
    40d4:	cmp	x26, x22
    40d8:	b.cs	409c <_ZN4llvm8TGParser12ParseClassIDEv+0x50>  // b.hs, b.nlast
    40dc:	add	x8, x25, #0x18
    40e0:	ldr	x25, [x8]
    40e4:	cbnz	x25, 40ac <_ZN4llvm8TGParser12ParseClassIDEv+0x60>
    40e8:	cmp	x24, x23
    40ec:	b.eq	415c <_ZN4llvm8TGParser12ParseClassIDEv+0x110>  // b.none
    40f0:	ldr	x25, [x24, #40]
    40f4:	cmp	x25, x22
    40f8:	csel	x2, x25, x22, cc  // cc = lo, ul, last
    40fc:	cbz	x2, 4150 <_ZN4llvm8TGParser12ParseClassIDEv+0x104>
    4100:	ldr	x1, [x24, #32]
    4104:	mov	x0, x21
    4108:	bl	0 <memcmp>
    410c:	cbz	w0, 4150 <_ZN4llvm8TGParser12ParseClassIDEv+0x104>
    4110:	tbnz	w0, #31, 4158 <_ZN4llvm8TGParser12ParseClassIDEv+0x10c>
    4114:	b	415c <_ZN4llvm8TGParser12ParseClassIDEv+0x110>
    4118:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    411c:	add	x8, x8, #0x0
    4120:	mov	w9, #0x103                 	// #259
    4124:	mov	x0, x19
    4128:	stp	x8, xzr, [x29, #-40]
    412c:	sturh	w9, [x29, #-24]
    4130:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4134:	stur	x0, [x29, #-72]
    4138:	sub	x0, x29, #0x48
    413c:	sub	x2, x29, #0x28
    4140:	mov	w1, #0x1                   	// #1
    4144:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4148:	mov	x21, xzr
    414c:	b	447c <_ZN4llvm8TGParser12ParseClassIDEv+0x430>
    4150:	cmp	x22, x25
    4154:	b.cs	415c <_ZN4llvm8TGParser12ParseClassIDEv+0x110>  // b.hs, b.nlast
    4158:	mov	x24, x23
    415c:	cmp	x24, x23
    4160:	b.eq	416c <_ZN4llvm8TGParser12ParseClassIDEv+0x120>  // b.none
    4164:	ldr	x21, [x24, #64]
    4168:	cbnz	x21, 4464 <_ZN4llvm8TGParser12ParseClassIDEv+0x418>
    416c:	sub	x8, x29, #0x48
    4170:	add	x21, x8, #0x10
    4174:	add	x1, x22, #0x15
    4178:	sub	x0, x29, #0x48
    417c:	sturb	wzr, [x29, #-56]
    4180:	stp	x21, xzr, [x29, #-72]
    4184:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    4188:	ldur	x8, [x29, #-64]
    418c:	mov	x22, #0x3fffffffffffffff    	// #4611686018427387903
    4190:	sub	x8, x22, x8
    4194:	cmp	x8, #0x14
    4198:	b.ls	449c <_ZN4llvm8TGParser12ParseClassIDEv+0x450>  // b.plast
    419c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    41a0:	add	x1, x1, #0x0
    41a4:	sub	x0, x29, #0x48
    41a8:	mov	w2, #0x15                  	// #21
    41ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    41b0:	ldp	x1, x2, [x19, #48]
    41b4:	sub	x0, x29, #0x48
    41b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    41bc:	ldur	x8, [x29, #-64]
    41c0:	cmp	x8, x22
    41c4:	b.eq	449c <_ZN4llvm8TGParser12ParseClassIDEv+0x450>  // b.none
    41c8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    41cc:	add	x1, x1, #0x0
    41d0:	sub	x0, x29, #0x48
    41d4:	mov	w2, #0x1                   	// #1
    41d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    41dc:	sub	x8, x29, #0x28
    41e0:	add	x22, x8, #0x10
    41e4:	stur	x22, [x29, #-40]
    41e8:	mov	x8, x0
    41ec:	ldr	x9, [x8], #16
    41f0:	cmp	x9, x8
    41f4:	b.eq	4208 <_ZN4llvm8TGParser12ParseClassIDEv+0x1bc>  // b.none
    41f8:	stur	x9, [x29, #-40]
    41fc:	ldr	x9, [x0, #16]
    4200:	stur	x9, [x29, #-24]
    4204:	b	4210 <_ZN4llvm8TGParser12ParseClassIDEv+0x1c4>
    4208:	ldr	q0, [x9]
    420c:	str	q0, [x22]
    4210:	ldr	x9, [x0, #8]
    4214:	stur	x9, [x29, #-32]
    4218:	stp	x8, xzr, [x0]
    421c:	strb	wzr, [x0, #16]
    4220:	ldur	x0, [x29, #-72]
    4224:	cmp	x0, x21
    4228:	b.eq	4230 <_ZN4llvm8TGParser12ParseClassIDEv+0x1e4>  // b.none
    422c:	bl	0 <_ZdlPv>
    4230:	ldr	w8, [x19, #40]
    4234:	and	w8, w8, #0xfffffffc
    4238:	cmp	w8, #0x48
    423c:	b.ne	44a8 <_ZN4llvm8TGParser12ParseClassIDEv+0x45c>  // b.any
    4240:	add	x0, x19, #0xe0
    4244:	mov	x1, x20
    4248:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    424c:	ldr	x8, [x0]
    4250:	cbz	x8, 429c <_ZN4llvm8TGParser12ParseClassIDEv+0x250>
    4254:	ldp	x20, x21, [x29, #-40]
    4258:	mov	x8, sp
    425c:	add	x23, x8, #0x10
    4260:	str	x23, [sp]
    4264:	cbnz	x20, 426c <_ZN4llvm8TGParser12ParseClassIDEv+0x220>
    4268:	cbnz	x21, 44c8 <_ZN4llvm8TGParser12ParseClassIDEv+0x47c>
    426c:	cmp	x21, #0x10
    4270:	stur	x21, [x29, #-72]
    4274:	b.cc	42cc <_ZN4llvm8TGParser12ParseClassIDEv+0x280>  // b.lo, b.ul, b.last
    4278:	mov	x0, sp
    427c:	sub	x1, x29, #0x48
    4280:	mov	x2, xzr
    4284:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    4288:	ldur	x8, [x29, #-72]
    428c:	str	x0, [sp]
    4290:	str	x8, [sp, #16]
    4294:	cbnz	x21, 42d4 <_ZN4llvm8TGParser12ParseClassIDEv+0x288>
    4298:	b	42f4 <_ZN4llvm8TGParser12ParseClassIDEv+0x2a8>
    429c:	mov	w8, #0x104                 	// #260
    42a0:	sub	x9, x29, #0x28
    42a4:	mov	x0, x19
    42a8:	sturh	w8, [x29, #-56]
    42ac:	stp	x9, xzr, [x29, #-72]
    42b0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    42b4:	str	x0, [sp, #32]
    42b8:	add	x0, sp, #0x20
    42bc:	sub	x2, x29, #0x48
    42c0:	mov	w1, #0x1                   	// #1
    42c4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    42c8:	b	4450 <_ZN4llvm8TGParser12ParseClassIDEv+0x404>
    42cc:	mov	x0, x23
    42d0:	cbz	x21, 42f4 <_ZN4llvm8TGParser12ParseClassIDEv+0x2a8>
    42d4:	cmp	x21, #0x1
    42d8:	b.ne	42e8 <_ZN4llvm8TGParser12ParseClassIDEv+0x29c>  // b.any
    42dc:	ldrb	w8, [x20]
    42e0:	strb	w8, [x0]
    42e4:	b	42f4 <_ZN4llvm8TGParser12ParseClassIDEv+0x2a8>
    42e8:	mov	x1, x20
    42ec:	mov	x2, x21
    42f0:	bl	0 <memcpy>
    42f4:	ldur	x8, [x29, #-72]
    42f8:	ldr	x9, [sp]
    42fc:	str	x8, [sp, #8]
    4300:	strb	wzr, [x9, x8]
    4304:	ldr	x8, [sp, #8]
    4308:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    430c:	sub	x8, x9, x8
    4310:	cmp	x8, #0x2c
    4314:	b.ls	449c <_ZN4llvm8TGParser12ParseClassIDEv+0x450>  // b.plast
    4318:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    431c:	add	x1, x1, #0x0
    4320:	mov	x0, sp
    4324:	mov	w2, #0x2d                  	// #45
    4328:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    432c:	ldr	w8, [x19, #40]
    4330:	and	w8, w8, #0xfffffffc
    4334:	cmp	w8, #0x48
    4338:	b.ne	44a8 <_ZN4llvm8TGParser12ParseClassIDEv+0x45c>  // b.any
    433c:	ldp	x1, x2, [x19, #48]
    4340:	mov	x0, sp
    4344:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4348:	add	x8, sp, #0x20
    434c:	add	x20, x8, #0x10
    4350:	str	x20, [sp, #32]
    4354:	mov	x8, x0
    4358:	ldr	x9, [x8], #16
    435c:	cmp	x9, x8
    4360:	b.eq	4374 <_ZN4llvm8TGParser12ParseClassIDEv+0x328>  // b.none
    4364:	str	x9, [sp, #32]
    4368:	ldr	x9, [x0, #16]
    436c:	str	x9, [sp, #48]
    4370:	b	437c <_ZN4llvm8TGParser12ParseClassIDEv+0x330>
    4374:	ldr	q0, [x9]
    4378:	str	q0, [x20]
    437c:	ldr	x9, [x0, #8]
    4380:	str	x9, [sp, #40]
    4384:	stp	x8, xzr, [x0]
    4388:	strb	wzr, [x0, #16]
    438c:	ldr	x8, [sp, #40]
    4390:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    4394:	cmp	x8, x9
    4398:	b.eq	449c <_ZN4llvm8TGParser12ParseClassIDEv+0x450>  // b.none
    439c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    43a0:	add	x1, x1, #0x0
    43a4:	add	x0, sp, #0x20
    43a8:	mov	w2, #0x1                   	// #1
    43ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    43b0:	sub	x8, x29, #0x48
    43b4:	add	x21, x8, #0x10
    43b8:	stur	x21, [x29, #-72]
    43bc:	mov	x8, x0
    43c0:	ldr	x9, [x8], #16
    43c4:	cmp	x9, x8
    43c8:	b.eq	43dc <_ZN4llvm8TGParser12ParseClassIDEv+0x390>  // b.none
    43cc:	stur	x9, [x29, #-72]
    43d0:	ldr	x9, [x0, #16]
    43d4:	stur	x9, [x29, #-56]
    43d8:	b	43e4 <_ZN4llvm8TGParser12ParseClassIDEv+0x398>
    43dc:	ldr	q0, [x9]
    43e0:	str	q0, [x21]
    43e4:	ldr	x9, [x0, #8]
    43e8:	mov	w10, #0x104                 	// #260
    43ec:	sub	x11, x29, #0x48
    43f0:	stur	x9, [x29, #-64]
    43f4:	stp	x8, xzr, [x0]
    43f8:	strb	wzr, [x0, #16]
    43fc:	mov	x0, x19
    4400:	strh	w10, [sp, #80]
    4404:	stp	x11, xzr, [sp, #64]
    4408:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    440c:	stur	x0, [x29, #-8]
    4410:	sub	x0, x29, #0x8
    4414:	add	x2, sp, #0x40
    4418:	mov	w1, #0x1                   	// #1
    441c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4420:	ldur	x0, [x29, #-72]
    4424:	cmp	x0, x21
    4428:	b.eq	4430 <_ZN4llvm8TGParser12ParseClassIDEv+0x3e4>  // b.none
    442c:	bl	0 <_ZdlPv>
    4430:	ldr	x0, [sp, #32]
    4434:	cmp	x0, x20
    4438:	b.eq	4440 <_ZN4llvm8TGParser12ParseClassIDEv+0x3f4>  // b.none
    443c:	bl	0 <_ZdlPv>
    4440:	ldr	x0, [sp]
    4444:	cmp	x0, x23
    4448:	b.eq	4450 <_ZN4llvm8TGParser12ParseClassIDEv+0x404>  // b.none
    444c:	bl	0 <_ZdlPv>
    4450:	ldur	x0, [x29, #-40]
    4454:	cmp	x0, x22
    4458:	b.eq	4460 <_ZN4llvm8TGParser12ParseClassIDEv+0x414>  // b.none
    445c:	bl	0 <_ZdlPv>
    4460:	mov	x21, xzr
    4464:	ldp	x8, x9, [x19, #8]
    4468:	mov	x0, x19
    446c:	cmp	x8, x9
    4470:	cset	w1, eq  // eq = none
    4474:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4478:	str	w0, [x19, #40]
    447c:	mov	x0, x21
    4480:	ldp	x20, x19, [sp, #224]
    4484:	ldp	x22, x21, [sp, #208]
    4488:	ldp	x24, x23, [sp, #192]
    448c:	ldp	x26, x25, [sp, #176]
    4490:	ldp	x29, x30, [sp, #160]
    4494:	add	sp, sp, #0xf0
    4498:	ret
    449c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44a0:	add	x0, x0, #0x0
    44a4:	bl	0 <_ZSt20__throw_length_errorPKc>
    44a8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44ac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44b0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44b4:	add	x0, x0, #0x0
    44b8:	add	x1, x1, #0x0
    44bc:	add	x3, x3, #0x0
    44c0:	mov	w2, #0x71                  	// #113
    44c4:	bl	0 <__assert_fail>
    44c8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    44cc:	add	x0, x0, #0x0
    44d0:	bl	0 <_ZSt19__throw_logic_errorPKc>

00000000000044d4 <_ZN4llvm8TGParser17ParseMultiClassIDEv>:
    44d4:	sub	sp, sp, #0x90
    44d8:	stp	x29, x30, [sp, #96]
    44dc:	stp	x22, x21, [sp, #112]
    44e0:	stp	x20, x19, [sp, #128]
    44e4:	add	x29, sp, #0x60
    44e8:	ldr	w8, [x0, #40]
    44ec:	mov	x19, x0
    44f0:	cmp	w8, #0x48
    44f4:	b.ne	45bc <_ZN4llvm8TGParser17ParseMultiClassIDEv+0xe8>  // b.any
    44f8:	add	x0, x19, #0xe0
    44fc:	add	x1, x19, #0x30
    4500:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4504:	ldr	x20, [x0]
    4508:	cbnz	x20, 4658 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x184>
    450c:	ldr	w8, [x19, #40]
    4510:	and	w8, w8, #0xfffffffc
    4514:	cmp	w8, #0x48
    4518:	b.ne	4694 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1c0>  // b.any
    451c:	mov	x8, sp
    4520:	add	x21, x8, #0x10
    4524:	stp	x21, xzr, [sp]
    4528:	strb	wzr, [sp, #16]
    452c:	ldr	x8, [x19, #56]
    4530:	mov	x0, sp
    4534:	add	x1, x8, #0x1a
    4538:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    453c:	ldr	x8, [sp, #8]
    4540:	mov	x22, #0x3fffffffffffffff    	// #4611686018427387903
    4544:	sub	x8, x22, x8
    4548:	cmp	x8, #0x19
    454c:	b.ls	4688 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1b4>  // b.plast
    4550:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4554:	add	x1, x1, #0x0
    4558:	mov	x0, sp
    455c:	mov	w2, #0x1a                  	// #26
    4560:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4564:	ldp	x1, x2, [x19, #48]
    4568:	mov	x0, sp
    456c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4570:	ldr	x8, [sp, #8]
    4574:	cmp	x8, x22
    4578:	b.eq	4688 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x1b4>  // b.none
    457c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4580:	add	x1, x1, #0x0
    4584:	mov	x0, sp
    4588:	mov	w2, #0x1                   	// #1
    458c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    4590:	add	x8, sp, #0x20
    4594:	add	x22, x8, #0x10
    4598:	str	x22, [sp, #32]
    459c:	mov	x8, x0
    45a0:	ldr	x9, [x8], #16
    45a4:	cmp	x9, x8
    45a8:	b.eq	45f4 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x120>  // b.none
    45ac:	str	x9, [sp, #32]
    45b0:	ldr	x9, [x0, #16]
    45b4:	str	x9, [sp, #48]
    45b8:	b	45fc <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x128>
    45bc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    45c0:	add	x8, x8, #0x0
    45c4:	mov	w9, #0x103                 	// #259
    45c8:	mov	x0, x19
    45cc:	stp	x8, xzr, [sp, #32]
    45d0:	strh	w9, [sp, #48]
    45d4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    45d8:	str	x0, [sp]
    45dc:	mov	x0, sp
    45e0:	add	x2, sp, #0x20
    45e4:	mov	w1, #0x1                   	// #1
    45e8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    45ec:	mov	x20, xzr
    45f0:	b	4670 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x19c>
    45f4:	ldr	q0, [x9]
    45f8:	str	q0, [x22]
    45fc:	ldr	x9, [x0, #8]
    4600:	mov	w10, #0x104                 	// #260
    4604:	add	x11, sp, #0x20
    4608:	str	x9, [sp, #40]
    460c:	stp	x8, xzr, [x0]
    4610:	strb	wzr, [x0, #16]
    4614:	mov	x0, x19
    4618:	sturh	w10, [x29, #-16]
    461c:	stp	x11, xzr, [x29, #-32]
    4620:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4624:	stur	x0, [x29, #-8]
    4628:	sub	x0, x29, #0x8
    462c:	sub	x2, x29, #0x20
    4630:	mov	w1, #0x1                   	// #1
    4634:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4638:	ldr	x0, [sp, #32]
    463c:	cmp	x0, x22
    4640:	b.eq	4648 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x174>  // b.none
    4644:	bl	0 <_ZdlPv>
    4648:	ldr	x0, [sp]
    464c:	cmp	x0, x21
    4650:	b.eq	4658 <_ZN4llvm8TGParser17ParseMultiClassIDEv+0x184>  // b.none
    4654:	bl	0 <_ZdlPv>
    4658:	ldp	x8, x9, [x19, #8]
    465c:	mov	x0, x19
    4660:	cmp	x8, x9
    4664:	cset	w1, eq  // eq = none
    4668:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    466c:	str	w0, [x19, #40]
    4670:	mov	x0, x20
    4674:	ldp	x20, x19, [sp, #128]
    4678:	ldp	x22, x21, [sp, #112]
    467c:	ldp	x29, x30, [sp, #96]
    4680:	add	sp, sp, #0x90
    4684:	ret
    4688:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    468c:	add	x0, x0, #0x0
    4690:	bl	0 <_ZSt20__throw_length_errorPKc>
    4694:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4698:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    469c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    46a0:	add	x0, x0, #0x0
    46a4:	add	x1, x1, #0x0
    46a8:	add	x3, x3, #0x0
    46ac:	mov	w2, #0x71                  	// #113
    46b0:	bl	0 <__assert_fail>

00000000000046b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>:
    46b4:	sub	sp, sp, #0x60
    46b8:	stp	x29, x30, [sp, #32]
    46bc:	str	x23, [sp, #48]
    46c0:	stp	x22, x21, [sp, #64]
    46c4:	stp	x20, x19, [sp, #80]
    46c8:	add	x29, sp, #0x20
    46cc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    46d0:	ldr	d0, [x9]
    46d4:	mov	x19, x8
    46d8:	add	x8, x8, #0x28
    46dc:	mov	x22, x19
    46e0:	mov	w23, w2
    46e4:	mov	x21, x1
    46e8:	mov	x20, x0
    46ec:	str	x8, [x22, #24]!
    46f0:	stp	xzr, xzr, [x19]
    46f4:	str	xzr, [x19, #16]
    46f8:	str	d0, [x19, #32]
    46fc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4700:	str	x0, [x19]
    4704:	mov	x0, x20
    4708:	tbz	w23, #0, 4720 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x6c>
    470c:	bl	44d4 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    4710:	cbnz	x0, 4724 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x70>
    4714:	ldr	x0, [x19, #16]
    4718:	cbnz	x0, 472c <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x78>
    471c:	b	47ec <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    4720:	bl	404c <_ZN4llvm8TGParser12ParseClassIDEv>
    4724:	str	x0, [x19, #16]
    4728:	cbz	x0, 47ec <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    472c:	ldr	w8, [x20, #40]
    4730:	cmp	w8, #0xa
    4734:	b.ne	47a8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xf4>  // b.any
    4738:	ldp	x8, x9, [x20, #8]
    473c:	mov	x0, x20
    4740:	cmp	x8, x9
    4744:	cset	w1, eq  // eq = none
    4748:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    474c:	cmp	w0, #0xb
    4750:	str	w0, [x20, #40]
    4754:	b.ne	4764 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0xb0>  // b.any
    4758:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    475c:	add	x8, x8, #0x0
    4760:	b	47c0 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x10c>
    4764:	ldr	x3, [x19, #16]
    4768:	mov	x0, x20
    476c:	mov	x1, x22
    4770:	mov	x2, x21
    4774:	mov	x4, xzr
    4778:	bl	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    477c:	ldr	w8, [x19, #32]
    4780:	cbz	w8, 47e8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x134>
    4784:	ldr	w8, [x20, #40]
    4788:	cmp	w8, #0xb
    478c:	b.ne	47b8 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x104>  // b.any
    4790:	ldp	x8, x9, [x20, #8]
    4794:	mov	x0, x20
    4798:	cmp	x8, x9
    479c:	cset	w1, eq  // eq = none
    47a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    47a4:	str	w0, [x20, #40]
    47a8:	mov	x0, x20
    47ac:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    47b0:	str	x0, [x19, #8]
    47b4:	b	47ec <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb+0x138>
    47b8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    47bc:	add	x8, x8, #0x0
    47c0:	mov	w9, #0x103                 	// #259
    47c4:	mov	x0, x20
    47c8:	stp	x8, xzr, [sp, #8]
    47cc:	strh	w9, [sp, #24]
    47d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    47d4:	str	x0, [x29, #24]
    47d8:	add	x0, x29, #0x18
    47dc:	add	x2, sp, #0x8
    47e0:	mov	w1, #0x1                   	// #1
    47e4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    47e8:	str	xzr, [x19, #16]
    47ec:	ldp	x20, x19, [sp, #80]
    47f0:	ldp	x22, x21, [sp, #64]
    47f4:	ldr	x23, [sp, #48]
    47f8:	ldp	x29, x30, [sp, #32]
    47fc:	add	sp, sp, #0x60
    4800:	ret

0000000000004804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>:
    4804:	sub	sp, sp, #0x80
    4808:	stp	x29, x30, [sp, #48]
    480c:	stp	x26, x25, [sp, #64]
    4810:	stp	x24, x23, [sp, #80]
    4814:	stp	x22, x21, [sp, #96]
    4818:	stp	x20, x19, [sp, #112]
    481c:	add	x29, sp, #0x30
    4820:	cmp	x3, #0x0
    4824:	cset	w8, eq  // eq = none
    4828:	cmp	x4, #0x0
    482c:	cset	w9, ne  // ne = any
    4830:	mov	x22, x3
    4834:	mov	x21, x2
    4838:	mov	x19, x1
    483c:	orr	w26, w8, w9
    4840:	mov	x20, x0
    4844:	tbz	w26, #0, 4854 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x50>
    4848:	mov	x24, x4
    484c:	mov	w25, wzr
    4850:	b	4914 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x110>
    4854:	ldr	x8, [x22, #56]
    4858:	ldr	w9, [x22, #64]
    485c:	stp	x8, x9, [sp, #24]
    4860:	cbz	w9, 4af8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2f4>
    4864:	ldr	w10, [x22, #80]
    4868:	cbz	w10, 4898 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x94>
    486c:	ldr	x9, [x22, #72]
    4870:	ldr	x8, [x8]
    4874:	add	x10, x10, x10, lsl #1
    4878:	lsl	x10, x10, #3
    487c:	mov	x11, x9
    4880:	ldr	x12, [x11], #24
    4884:	cmp	x12, x8
    4888:	b.eq	4904 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x100>  // b.none
    488c:	subs	x10, x10, #0x18
    4890:	mov	x9, x11
    4894:	b.ne	4880 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x7c>  // b.any
    4898:	bl	0 <_ZN4llvm4errsEv>
    489c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48a0:	add	x1, x1, #0x0
    48a4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48a8:	mov	w1, wzr
    48ac:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48b0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48b4:	add	x1, x1, #0x0
    48b8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48bc:	mov	x19, x0
    48c0:	add	x0, sp, #0x18
    48c4:	mov	x1, xzr
    48c8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48cc:	ldr	x1, [x0]
    48d0:	mov	x0, x19
    48d4:	bl	0 <_ZN4llvm11raw_ostreamlsEPKv>
    48d8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48dc:	add	x1, x1, #0x0
    48e0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48e4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48e8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48ec:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    48f0:	add	x0, x0, #0x0
    48f4:	add	x1, x1, #0x0
    48f8:	add	x3, x3, #0x0
    48fc:	mov	w2, #0x945                 	// #2373
    4900:	bl	0 <__assert_fail>
    4904:	cbz	x9, 4898 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x94>
    4908:	ldr	x8, [x9, #8]
    490c:	mov	w25, #0x1                   	// #1
    4910:	and	x24, x8, #0xfffffffffffffff8
    4914:	mov	x0, x20
    4918:	mov	x1, x21
    491c:	mov	x2, x24
    4920:	mov	w3, wzr
    4924:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4928:	ldp	w8, w9, [x19, #8]
    492c:	mov	x23, x0
    4930:	cmp	w8, w9
    4934:	b.cs	4b70 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x36c>  // b.hs, b.nlast
    4938:	ldr	x9, [x19]
    493c:	str	x23, [x9, w8, uxtw #3]
    4940:	ldp	w8, w9, [x19, #8]
    4944:	cmp	w8, w9
    4948:	b.cs	4bac <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3a8>  // b.hs, b.nlast
    494c:	ldr	x9, [x19]
    4950:	add	x8, x8, #0x1
    4954:	str	w8, [x19, #8]
    4958:	add	x8, x9, x8, lsl #3
    495c:	ldur	x8, [x8, #-8]
    4960:	cbz	x8, 4b50 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x34c>
    4964:	add	x23, x19, #0x10
    4968:	tbz	w26, #0, 4a08 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x204>
    496c:	ldr	w8, [x20, #40]
    4970:	cmp	w8, #0xe
    4974:	b.ne	4b54 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x350>  // b.any
    4978:	ldp	x8, x9, [x20, #8]
    497c:	mov	x0, x20
    4980:	cmp	x8, x9
    4984:	cset	w1, eq  // eq = none
    4988:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    498c:	cmp	w0, #0x5
    4990:	str	w0, [x20, #40]
    4994:	b.eq	4b54 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x350>  // b.none
    4998:	mov	x0, x20
    499c:	mov	x1, x21
    49a0:	mov	x2, x24
    49a4:	mov	w3, wzr
    49a8:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    49ac:	ldp	w8, w9, [x19, #8]
    49b0:	mov	x22, x0
    49b4:	cmp	w8, w9
    49b8:	b.cs	49ec <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1e8>  // b.hs, b.nlast
    49bc:	ldr	x9, [x19]
    49c0:	str	x22, [x9, w8, uxtw #3]
    49c4:	ldp	w8, w9, [x19, #8]
    49c8:	cmp	w8, w9
    49cc:	b.cs	4bac <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3a8>  // b.hs, b.nlast
    49d0:	ldr	x9, [x19]
    49d4:	add	x8, x8, #0x1
    49d8:	str	w8, [x19, #8]
    49dc:	add	x8, x9, x8, lsl #3
    49e0:	ldur	x8, [x8, #-8]
    49e4:	cbnz	x8, 496c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x168>
    49e8:	b	4b50 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x34c>
    49ec:	mov	w3, #0x8                   	// #8
    49f0:	mov	x0, x19
    49f4:	mov	x1, x23
    49f8:	mov	x2, xzr
    49fc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4a00:	ldr	w8, [x19, #8]
    4a04:	b	49bc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x1b8>
    4a08:	ldr	w8, [x20, #40]
    4a0c:	cmp	w8, #0xe
    4a10:	b.ne	4b54 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x350>  // b.any
    4a14:	ldp	x8, x9, [x20, #8]
    4a18:	mov	x0, x20
    4a1c:	cmp	x8, x9
    4a20:	cset	w1, eq  // eq = none
    4a24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4a28:	cmp	w0, #0x5
    4a2c:	str	w0, [x20, #40]
    4a30:	b.eq	4b54 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x350>  // b.none
    4a34:	ldr	w8, [x22, #64]
    4a38:	cmp	w8, w25
    4a3c:	b.ls	4b20 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x31c>  // b.plast
    4a40:	ldr	w10, [x22, #80]
    4a44:	cbz	w10, 4b8c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x388>
    4a48:	ldr	x8, [x22, #56]
    4a4c:	ldr	x9, [x22, #72]
    4a50:	add	x10, x10, x10, lsl #1
    4a54:	lsl	x10, x10, #3
    4a58:	ldr	x8, [x8, w25, uxtw #3]
    4a5c:	mov	x11, x9
    4a60:	ldr	x12, [x11], #24
    4a64:	cmp	x12, x8
    4a68:	b.eq	4a7c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x278>  // b.none
    4a6c:	subs	x10, x10, #0x18
    4a70:	mov	x9, x11
    4a74:	b.ne	4a60 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x25c>  // b.any
    4a78:	b	4b8c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x388>
    4a7c:	cbz	x9, 4b8c <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x388>
    4a80:	ldr	x8, [x9, #8]
    4a84:	mov	x0, x20
    4a88:	mov	x1, x21
    4a8c:	mov	w3, wzr
    4a90:	and	x2, x8, #0xfffffffffffffff8
    4a94:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4a98:	ldp	w8, w9, [x19, #8]
    4a9c:	mov	x24, x0
    4aa0:	cmp	w8, w9
    4aa4:	b.cs	4adc <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2d8>  // b.hs, b.nlast
    4aa8:	ldr	x9, [x19]
    4aac:	str	x24, [x9, w8, uxtw #3]
    4ab0:	ldp	w8, w9, [x19, #8]
    4ab4:	cmp	w8, w9
    4ab8:	b.cs	4bac <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x3a8>  // b.hs, b.nlast
    4abc:	ldr	x9, [x19]
    4ac0:	add	x8, x8, #0x1
    4ac4:	str	w8, [x19, #8]
    4ac8:	add	w25, w25, #0x1
    4acc:	add	x8, x9, x8, lsl #3
    4ad0:	ldur	x8, [x8, #-8]
    4ad4:	cbnz	x8, 4a08 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x204>
    4ad8:	b	4b50 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x34c>
    4adc:	mov	w3, #0x8                   	// #8
    4ae0:	mov	x0, x19
    4ae4:	mov	x1, x23
    4ae8:	mov	x2, xzr
    4aec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4af0:	ldr	w8, [x19, #8]
    4af4:	b	4aa8 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x2a4>
    4af8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4afc:	add	x8, x8, #0x0
    4b00:	mov	w9, #0x103                 	// #259
    4b04:	mov	x0, x20
    4b08:	stp	x8, xzr, [sp]
    4b0c:	strh	w9, [sp, #16]
    4b10:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4b14:	stur	x0, [x29, #-8]
    4b18:	sub	x0, x29, #0x8
    4b1c:	b	4b44 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x340>
    4b20:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b24:	add	x8, x8, #0x0
    4b28:	mov	w9, #0x103                 	// #259
    4b2c:	mov	x0, x20
    4b30:	stp	x8, xzr, [sp]
    4b34:	strh	w9, [sp, #16]
    4b38:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4b3c:	str	x0, [sp, #24]
    4b40:	add	x0, sp, #0x18
    4b44:	mov	x2, sp
    4b48:	mov	w1, #0x1                   	// #1
    4b4c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4b50:	str	wzr, [x19, #8]
    4b54:	ldp	x20, x19, [sp, #112]
    4b58:	ldp	x22, x21, [sp, #96]
    4b5c:	ldp	x24, x23, [sp, #80]
    4b60:	ldp	x26, x25, [sp, #64]
    4b64:	ldp	x29, x30, [sp, #48]
    4b68:	add	sp, sp, #0x80
    4b6c:	ret
    4b70:	add	x1, x19, #0x10
    4b74:	mov	w3, #0x8                   	// #8
    4b78:	mov	x0, x19
    4b7c:	mov	x2, xzr
    4b80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4b84:	ldr	w8, [x19, #8]
    4b88:	b	4938 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE+0x134>
    4b8c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b90:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b94:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4b98:	add	x0, x0, #0x0
    4b9c:	add	x1, x1, #0x0
    4ba0:	add	x3, x3, #0x0
    4ba4:	mov	w2, #0x95e                 	// #2398
    4ba8:	bl	0 <__assert_fail>
    4bac:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4bb0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4bb4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4bb8:	add	x0, x0, #0x0
    4bbc:	add	x1, x1, #0x0
    4bc0:	add	x3, x3, #0x0
    4bc4:	mov	w2, #0x43                  	// #67
    4bc8:	bl	0 <__assert_fail>

0000000000004bcc <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>:
    4bcc:	sub	sp, sp, #0x50
    4bd0:	stp	x29, x30, [sp, #32]
    4bd4:	stp	x22, x21, [sp, #48]
    4bd8:	stp	x20, x19, [sp, #64]
    4bdc:	add	x29, sp, #0x20
    4be0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4be4:	ldr	d0, [x9]
    4be8:	mov	x19, x8
    4bec:	add	x8, x8, #0x28
    4bf0:	mov	x22, x19
    4bf4:	mov	x21, x1
    4bf8:	mov	x20, x0
    4bfc:	str	x8, [x22, #24]!
    4c00:	stp	xzr, xzr, [x19]
    4c04:	str	xzr, [x19, #16]
    4c08:	str	d0, [x19, #32]
    4c0c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4c10:	str	x0, [x19]
    4c14:	mov	x0, x20
    4c18:	bl	44d4 <_ZN4llvm8TGParser17ParseMultiClassIDEv>
    4c1c:	str	x0, [x19, #16]
    4c20:	cbz	x0, 4ce4 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x118>
    4c24:	ldr	w8, [x20, #40]
    4c28:	cmp	w8, #0xa
    4c2c:	b.ne	4ca0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xd4>  // b.any
    4c30:	ldp	x8, x9, [x20, #8]
    4c34:	mov	x0, x20
    4c38:	cmp	x8, x9
    4c3c:	cset	w1, eq  // eq = none
    4c40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c44:	cmp	w0, #0xb
    4c48:	str	w0, [x20, #40]
    4c4c:	b.ne	4c5c <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x90>  // b.any
    4c50:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4c54:	add	x8, x8, #0x0
    4c58:	b	4cb8 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xec>
    4c5c:	ldr	x3, [x19, #16]
    4c60:	mov	x0, x20
    4c64:	mov	x1, x22
    4c68:	mov	x2, x21
    4c6c:	mov	x4, xzr
    4c70:	bl	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    4c74:	ldr	w8, [x19, #32]
    4c78:	cbz	w8, 4ce0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x114>
    4c7c:	ldr	w8, [x20, #40]
    4c80:	cmp	w8, #0xb
    4c84:	b.ne	4cb0 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0xe4>  // b.any
    4c88:	ldp	x8, x9, [x20, #8]
    4c8c:	mov	x0, x20
    4c90:	cmp	x8, x9
    4c94:	cset	w1, eq  // eq = none
    4c98:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4c9c:	str	w0, [x20, #40]
    4ca0:	mov	x0, x20
    4ca4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4ca8:	str	x0, [x19, #8]
    4cac:	b	4ce4 <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE+0x118>
    4cb0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4cb4:	add	x8, x8, #0x0
    4cb8:	mov	w9, #0x103                 	// #259
    4cbc:	mov	x0, x20
    4cc0:	stp	x8, xzr, [sp]
    4cc4:	strh	w9, [sp, #16]
    4cc8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4ccc:	stur	x0, [x29, #-8]
    4cd0:	sub	x0, x29, #0x8
    4cd4:	mov	x2, sp
    4cd8:	mov	w1, #0x1                   	// #1
    4cdc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4ce0:	str	xzr, [x19, #16]
    4ce4:	ldp	x20, x19, [sp, #64]
    4ce8:	ldp	x22, x21, [sp, #48]
    4cec:	ldp	x29, x30, [sp, #32]
    4cf0:	add	sp, sp, #0x50
    4cf4:	ret

0000000000004cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>:
    4cf8:	sub	sp, sp, #0x60
    4cfc:	stp	x29, x30, [sp, #32]
    4d00:	str	x23, [sp, #48]
    4d04:	stp	x22, x21, [sp, #64]
    4d08:	stp	x20, x19, [sp, #80]
    4d0c:	add	x29, sp, #0x20
    4d10:	mov	x19, x1
    4d14:	mov	x20, x0
    4d18:	cbz	x2, 4d24 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x2c>
    4d1c:	cbnz	x2, 4d3c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x44>
    4d20:	b	4e40 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>
    4d24:	mov	x0, x20
    4d28:	mov	x1, xzr
    4d2c:	mov	w3, wzr
    4d30:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4d34:	mov	x2, x0
    4d38:	cbz	x2, 4e40 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>
    4d3c:	ldrb	w8, [x2, #8]
    4d40:	cmp	w8, #0x8
    4d44:	b.ne	4e40 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x148>  // b.any
    4d48:	ldr	x22, [x2, #24]
    4d4c:	tbnz	x22, #63, 4ed4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1dc>
    4d50:	ldr	w8, [x20, #40]
    4d54:	cmp	w8, #0x2
    4d58:	b.eq	4e90 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x198>  // b.none
    4d5c:	cmp	w8, #0x46
    4d60:	b.ne	4ee0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1e8>  // b.any
    4d64:	ldp	x9, x10, [x20, #8]
    4d68:	ldr	x8, [x20, #80]
    4d6c:	mov	x0, x20
    4d70:	cmp	x9, x10
    4d74:	cset	w1, eq  // eq = none
    4d78:	neg	x23, x8
    4d7c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4d80:	str	w0, [x20, #40]
    4d84:	tbnz	x23, #63, 4ed4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1dc>
    4d88:	ldp	w8, w9, [x19, #8]
    4d8c:	cmp	x22, x23
    4d90:	add	x20, x19, #0x10
    4d94:	b.ge	4dec <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>  // b.tcont
    4d98:	cmp	w8, w9
    4d9c:	b.cs	4dd0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xd8>  // b.hs, b.nlast
    4da0:	ldr	x9, [x19]
    4da4:	str	w22, [x9, w8, uxtw #2]
    4da8:	ldp	w8, w9, [x19, #8]
    4dac:	cmp	w8, w9
    4db0:	b.cs	4f38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4db4:	mov	w21, wzr
    4db8:	add	w8, w8, #0x1
    4dbc:	cmp	x22, x23
    4dc0:	add	x22, x22, #0x1
    4dc4:	str	w8, [x19, #8]
    4dc8:	b.lt	4d98 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xa0>  // b.tstop
    4dcc:	b	4e74 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4dd0:	mov	w3, #0x4                   	// #4
    4dd4:	mov	x0, x19
    4dd8:	mov	x1, x20
    4ddc:	mov	x2, xzr
    4de0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4de4:	ldr	w8, [x19, #8]
    4de8:	b	4da0 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xa8>
    4dec:	cmp	w8, w9
    4df0:	b.cs	4e24 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x12c>  // b.hs, b.nlast
    4df4:	ldr	x9, [x19]
    4df8:	str	w22, [x9, w8, uxtw #2]
    4dfc:	ldp	w8, w9, [x19, #8]
    4e00:	cmp	w8, w9
    4e04:	b.cs	4f38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4e08:	mov	w21, wzr
    4e0c:	add	w8, w8, #0x1
    4e10:	cmp	x22, x23
    4e14:	sub	x22, x22, #0x1
    4e18:	str	w8, [x19, #8]
    4e1c:	b.gt	4dec <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xf4>
    4e20:	b	4e74 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4e24:	mov	w3, #0x4                   	// #4
    4e28:	mov	x0, x19
    4e2c:	mov	x1, x20
    4e30:	mov	x2, xzr
    4e34:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4e38:	ldr	w8, [x19, #8]
    4e3c:	b	4df4 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0xfc>
    4e40:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4e44:	add	x8, x8, #0x0
    4e48:	mov	w9, #0x103                 	// #259
    4e4c:	mov	x0, x20
    4e50:	stp	x8, xzr, [sp, #8]
    4e54:	strh	w9, [sp, #24]
    4e58:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4e5c:	str	x0, [x29, #24]
    4e60:	add	x0, x29, #0x18
    4e64:	add	x2, sp, #0x8
    4e68:	mov	w1, #0x1                   	// #1
    4e6c:	mov	w21, #0x1                   	// #1
    4e70:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    4e74:	mov	w0, w21
    4e78:	ldp	x20, x19, [sp, #80]
    4e7c:	ldp	x22, x21, [sp, #64]
    4e80:	ldr	x23, [sp, #48]
    4e84:	ldp	x29, x30, [sp, #32]
    4e88:	add	sp, sp, #0x60
    4e8c:	ret
    4e90:	ldp	x8, x9, [x20, #8]
    4e94:	mov	x0, x20
    4e98:	cmp	x8, x9
    4e9c:	cset	w1, eq  // eq = none
    4ea0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4ea4:	str	w0, [x20, #40]
    4ea8:	mov	x0, x20
    4eac:	mov	x1, xzr
    4eb0:	mov	x2, xzr
    4eb4:	mov	w3, wzr
    4eb8:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    4ebc:	cbz	x0, 4f10 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x218>
    4ec0:	ldrb	w8, [x0, #8]
    4ec4:	cmp	w8, #0x8
    4ec8:	b.ne	4f10 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x218>  // b.any
    4ecc:	ldr	x23, [x0, #24]
    4ed0:	tbz	x23, #63, 4d88 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x90>
    4ed4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4ed8:	add	x8, x8, #0x0
    4edc:	b	4e48 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x150>
    4ee0:	ldp	w8, w9, [x19, #8]
    4ee4:	cmp	w8, w9
    4ee8:	b.cs	4f1c <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x224>  // b.hs, b.nlast
    4eec:	ldr	x9, [x19]
    4ef0:	str	w22, [x9, w8, uxtw #2]
    4ef4:	ldp	w8, w9, [x19, #8]
    4ef8:	cmp	w8, w9
    4efc:	b.cs	4f38 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x240>  // b.hs, b.nlast
    4f00:	add	w8, w8, #0x1
    4f04:	mov	w21, wzr
    4f08:	str	w8, [x19, #8]
    4f0c:	b	4e74 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x17c>
    4f10:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4f14:	add	x8, x8, #0x0
    4f18:	b	4e48 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x150>
    4f1c:	add	x1, x19, #0x10
    4f20:	mov	w3, #0x4                   	// #4
    4f24:	mov	x0, x19
    4f28:	mov	x2, xzr
    4f2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4f30:	ldr	w8, [x19, #8]
    4f34:	b	4eec <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE+0x1f4>
    4f38:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4f3c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4f40:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    4f44:	add	x0, x0, #0x0
    4f48:	add	x1, x1, #0x0
    4f4c:	add	x3, x3, #0x0
    4f50:	mov	w2, #0x43                  	// #67
    4f54:	bl	0 <__assert_fail>

0000000000004f58 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE>:
    4f58:	stp	x29, x30, [sp, #-32]!
    4f5c:	stp	x20, x19, [sp, #16]
    4f60:	mov	x29, sp
    4f64:	mov	x19, x1
    4f68:	mov	x20, x0
    4f6c:	mov	x2, xzr
    4f70:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    4f74:	tbnz	w0, #0, 4fb0 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x58>
    4f78:	ldr	w8, [x20, #40]
    4f7c:	cmp	w8, #0xe
    4f80:	b.ne	4fb4 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x5c>  // b.any
    4f84:	ldp	x8, x9, [x20, #8]
    4f88:	mov	x0, x20
    4f8c:	cmp	x8, x9
    4f90:	cset	w1, eq  // eq = none
    4f94:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    4f98:	str	w0, [x20, #40]
    4f9c:	mov	x0, x20
    4fa0:	mov	x1, x19
    4fa4:	mov	x2, xzr
    4fa8:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    4fac:	tbz	w0, #0, 4f78 <_ZN4llvm8TGParser14ParseRangeListERNS_15SmallVectorImplIjEE+0x20>
    4fb0:	str	wzr, [x19, #8]
    4fb4:	ldp	x20, x19, [sp, #16]
    4fb8:	ldp	x29, x30, [sp], #32
    4fbc:	ret

0000000000004fc0 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>:
    4fc0:	sub	sp, sp, #0x50
    4fc4:	stp	x29, x30, [sp, #32]
    4fc8:	stp	x22, x21, [sp, #48]
    4fcc:	stp	x20, x19, [sp, #64]
    4fd0:	add	x29, sp, #0x20
    4fd4:	ldr	w8, [x0, #40]
    4fd8:	cmp	w8, #0xa
    4fdc:	b.ne	505c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x9c>  // b.any
    4fe0:	mov	x19, x0
    4fe4:	mov	x21, x1
    4fe8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    4fec:	mov	x20, x0
    4ff0:	ldp	x8, x9, [x19, #8]
    4ff4:	mov	x0, x19
    4ff8:	cmp	x8, x9
    4ffc:	cset	w1, eq  // eq = none
    5000:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5004:	str	w0, [x19, #40]
    5008:	mov	x0, x19
    500c:	mov	x1, x21
    5010:	mov	x2, xzr
    5014:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    5018:	tbnz	w0, #0, 5064 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xa4>
    501c:	ldr	w8, [x19, #40]
    5020:	cmp	w8, #0xe
    5024:	b.eq	4ff0 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0x30>  // b.none
    5028:	ldr	w8, [x21, #8]
    502c:	cbz	w8, 5068 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xa8>
    5030:	ldr	w8, [x19, #40]
    5034:	cmp	w8, #0xb
    5038:	b.ne	5084 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xc4>  // b.any
    503c:	ldp	x8, x9, [x19, #8]
    5040:	mov	x0, x19
    5044:	cmp	x8, x9
    5048:	cset	w1, eq  // eq = none
    504c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5050:	mov	w21, wzr
    5054:	str	w0, [x19, #40]
    5058:	b	506c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>
    505c:	mov	w21, wzr
    5060:	b	506c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>
    5064:	str	wzr, [x21, #8]
    5068:	mov	w21, #0x1                   	// #1
    506c:	mov	w0, w21
    5070:	ldp	x20, x19, [sp, #64]
    5074:	ldp	x22, x21, [sp, #48]
    5078:	ldp	x29, x30, [sp, #32]
    507c:	add	sp, sp, #0x50
    5080:	ret
    5084:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5088:	add	x8, x8, #0x0
    508c:	mov	w22, #0x103                 	// #259
    5090:	mov	x0, x19
    5094:	stp	x8, xzr, [sp]
    5098:	strh	w22, [sp, #16]
    509c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    50a0:	stur	x0, [x29, #-8]
    50a4:	sub	x0, x29, #0x8
    50a8:	mov	x2, sp
    50ac:	mov	w1, #0x1                   	// #1
    50b0:	mov	w21, #0x1                   	// #1
    50b4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    50b8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    50bc:	add	x8, x8, #0x0
    50c0:	sub	x0, x29, #0x8
    50c4:	mov	x2, sp
    50c8:	mov	w1, #0x1                   	// #1
    50cc:	strh	w22, [sp, #16]
    50d0:	stp	x8, xzr, [sp]
    50d4:	stur	x20, [x29, #-8]
    50d8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    50dc:	b	506c <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE+0xac>

00000000000050e0 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>:
    50e0:	sub	sp, sp, #0x50
    50e4:	stp	x29, x30, [sp, #32]
    50e8:	stp	x22, x21, [sp, #48]
    50ec:	stp	x20, x19, [sp, #64]
    50f0:	add	x29, sp, #0x20
    50f4:	ldr	w8, [x0, #40]
    50f8:	cmp	w8, #0x6
    50fc:	b.ne	517c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x9c>  // b.any
    5100:	mov	x19, x0
    5104:	mov	x21, x1
    5108:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    510c:	mov	x20, x0
    5110:	ldp	x8, x9, [x19, #8]
    5114:	mov	x0, x19
    5118:	cmp	x8, x9
    511c:	cset	w1, eq  // eq = none
    5120:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5124:	str	w0, [x19, #40]
    5128:	mov	x0, x19
    512c:	mov	x1, x21
    5130:	mov	x2, xzr
    5134:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    5138:	tbnz	w0, #0, 5184 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xa4>
    513c:	ldr	w8, [x19, #40]
    5140:	cmp	w8, #0xe
    5144:	b.eq	5110 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0x30>  // b.none
    5148:	ldr	w8, [x21, #8]
    514c:	cbz	w8, 5188 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xa8>
    5150:	ldr	w8, [x19, #40]
    5154:	cmp	w8, #0x7
    5158:	b.ne	51a4 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xc4>  // b.any
    515c:	ldp	x8, x9, [x19, #8]
    5160:	mov	x0, x19
    5164:	cmp	x8, x9
    5168:	cset	w1, eq  // eq = none
    516c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5170:	mov	w21, wzr
    5174:	str	w0, [x19, #40]
    5178:	b	518c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>
    517c:	mov	w21, wzr
    5180:	b	518c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>
    5184:	str	wzr, [x21, #8]
    5188:	mov	w21, #0x1                   	// #1
    518c:	mov	w0, w21
    5190:	ldp	x20, x19, [sp, #64]
    5194:	ldp	x22, x21, [sp, #48]
    5198:	ldp	x29, x30, [sp, #32]
    519c:	add	sp, sp, #0x50
    51a0:	ret
    51a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    51a8:	add	x8, x8, #0x0
    51ac:	mov	w22, #0x103                 	// #259
    51b0:	mov	x0, x19
    51b4:	stp	x8, xzr, [sp]
    51b8:	strh	w22, [sp, #16]
    51bc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    51c0:	stur	x0, [x29, #-8]
    51c4:	sub	x0, x29, #0x8
    51c8:	mov	x2, sp
    51cc:	mov	w1, #0x1                   	// #1
    51d0:	mov	w21, #0x1                   	// #1
    51d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    51d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    51dc:	add	x8, x8, #0x0
    51e0:	sub	x0, x29, #0x8
    51e4:	mov	x2, sp
    51e8:	mov	w1, #0x1                   	// #1
    51ec:	strh	w22, [sp, #16]
    51f0:	stp	x8, xzr, [sp]
    51f4:	stur	x20, [x29, #-8]
    51f8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    51fc:	b	518c <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE+0xac>

0000000000005200 <_ZN4llvm8TGParser9ParseTypeEv>:
    5200:	sub	sp, sp, #0x40
    5204:	stp	x29, x30, [sp, #32]
    5208:	stp	x20, x19, [sp, #48]
    520c:	add	x29, sp, #0x20
    5210:	ldr	w8, [x0, #40]
    5214:	mov	x19, x0
    5218:	sub	w8, w8, #0x13
    521c:	cmp	w8, #0x35
    5220:	b.hi	526c <_ZN4llvm8TGParser9ParseTypeEv+0x6c>  // b.pmore
    5224:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5228:	add	x9, x9, #0x0
    522c:	adr	x10, 523c <_ZN4llvm8TGParser9ParseTypeEv+0x3c>
    5230:	ldrb	w11, [x9, x8]
    5234:	add	x10, x10, x11, lsl #2
    5238:	br	x10
    523c:	ldp	x8, x9, [x19, #8]
    5240:	mov	x0, x19
    5244:	cmp	x8, x9
    5248:	cset	w1, eq  // eq = none
    524c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5250:	str	w0, [x19, #40]
    5254:	adrp	x0, 0 <_ZN4llvm8BitRecTy6SharedE>
    5258:	ldr	x0, [x0]
    525c:	ldp	x20, x19, [sp, #48]
    5260:	ldp	x29, x30, [sp, #32]
    5264:	add	sp, sp, #0x40
    5268:	ret
    526c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5270:	add	x8, x8, #0x0
    5274:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    5278:	ldp	x8, x9, [x19, #8]
    527c:	mov	x0, x19
    5280:	cmp	x8, x9
    5284:	cset	w1, eq  // eq = none
    5288:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    528c:	cmp	w0, #0xa
    5290:	str	w0, [x19, #40]
    5294:	b.ne	5474 <_ZN4llvm8TGParser9ParseTypeEv+0x274>  // b.any
    5298:	ldp	x8, x9, [x19, #8]
    529c:	mov	x0, x19
    52a0:	cmp	x8, x9
    52a4:	cset	w1, eq  // eq = none
    52a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    52ac:	str	w0, [x19, #40]
    52b0:	mov	x0, x19
    52b4:	bl	5200 <_ZN4llvm8TGParser9ParseTypeEv>
    52b8:	cbz	x0, 525c <_ZN4llvm8TGParser9ParseTypeEv+0x5c>
    52bc:	ldr	w8, [x19, #40]
    52c0:	cmp	w8, #0xb
    52c4:	b.ne	54a4 <_ZN4llvm8TGParser9ParseTypeEv+0x2a4>  // b.any
    52c8:	ldp	x8, x9, [x19, #8]
    52cc:	mov	x20, x0
    52d0:	mov	x0, x19
    52d4:	cmp	x8, x9
    52d8:	cset	w1, eq  // eq = none
    52dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    52e0:	str	w0, [x19, #40]
    52e4:	mov	x0, x20
    52e8:	ldp	x20, x19, [sp, #48]
    52ec:	ldp	x29, x30, [sp, #32]
    52f0:	add	sp, sp, #0x40
    52f4:	b	0 <_ZN4llvm5RecTy9getListTyEv>
    52f8:	ldp	x8, x9, [x19, #8]
    52fc:	mov	x0, x19
    5300:	cmp	x8, x9
    5304:	cset	w1, eq  // eq = none
    5308:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    530c:	cmp	w0, #0xa
    5310:	str	w0, [x19, #40]
    5314:	b.ne	5480 <_ZN4llvm8TGParser9ParseTypeEv+0x280>  // b.any
    5318:	ldp	x8, x9, [x19, #8]
    531c:	mov	x0, x19
    5320:	cmp	x8, x9
    5324:	cset	w1, eq  // eq = none
    5328:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    532c:	cmp	w0, #0x46
    5330:	str	w0, [x19, #40]
    5334:	b.ne	5498 <_ZN4llvm8TGParser9ParseTypeEv+0x298>  // b.any
    5338:	ldp	x8, x9, [x19, #8]
    533c:	ldr	x20, [x19, #80]
    5340:	mov	x0, x19
    5344:	cmp	x8, x9
    5348:	cset	w1, eq  // eq = none
    534c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5350:	cmp	w0, #0xb
    5354:	str	w0, [x19, #40]
    5358:	b.ne	54b0 <_ZN4llvm8TGParser9ParseTypeEv+0x2b0>  // b.any
    535c:	ldp	x8, x9, [x19, #8]
    5360:	mov	x0, x19
    5364:	cmp	x8, x9
    5368:	cset	w1, eq  // eq = none
    536c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5370:	str	w0, [x19, #40]
    5374:	mov	w0, w20
    5378:	ldp	x20, x19, [sp, #48]
    537c:	ldp	x29, x30, [sp, #32]
    5380:	add	sp, sp, #0x40
    5384:	b	0 <_ZN4llvm9BitsRecTy3getEj>
    5388:	ldp	x8, x9, [x19, #8]
    538c:	mov	x0, x19
    5390:	cmp	x8, x9
    5394:	cset	w1, eq  // eq = none
    5398:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    539c:	str	w0, [x19, #40]
    53a0:	adrp	x0, 0 <_ZN4llvm9CodeRecTy6SharedE>
    53a4:	ldr	x0, [x0]
    53a8:	ldp	x20, x19, [sp, #48]
    53ac:	ldp	x29, x30, [sp, #32]
    53b0:	add	sp, sp, #0x40
    53b4:	ret
    53b8:	ldp	x8, x9, [x19, #8]
    53bc:	mov	x0, x19
    53c0:	cmp	x8, x9
    53c4:	cset	w1, eq  // eq = none
    53c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    53cc:	str	w0, [x19, #40]
    53d0:	adrp	x0, 0 <_ZN4llvm8DagRecTy6SharedE>
    53d4:	ldr	x0, [x0]
    53d8:	ldp	x20, x19, [sp, #48]
    53dc:	ldp	x29, x30, [sp, #32]
    53e0:	add	sp, sp, #0x40
    53e4:	ret
    53e8:	ldp	x8, x9, [x19, #8]
    53ec:	mov	x0, x19
    53f0:	cmp	x8, x9
    53f4:	cset	w1, eq  // eq = none
    53f8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    53fc:	str	w0, [x19, #40]
    5400:	adrp	x0, 0 <_ZN4llvm8IntRecTy6SharedE>
    5404:	ldr	x0, [x0]
    5408:	ldp	x20, x19, [sp, #48]
    540c:	ldp	x29, x30, [sp, #32]
    5410:	add	sp, sp, #0x40
    5414:	ret
    5418:	ldp	x8, x9, [x19, #8]
    541c:	mov	x0, x19
    5420:	cmp	x8, x9
    5424:	cset	w1, eq  // eq = none
    5428:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    542c:	str	w0, [x19, #40]
    5430:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    5434:	ldr	x0, [x0]
    5438:	ldp	x20, x19, [sp, #48]
    543c:	ldp	x29, x30, [sp, #32]
    5440:	add	sp, sp, #0x40
    5444:	ret
    5448:	mov	x0, x19
    544c:	bl	404c <_ZN4llvm8TGParser12ParseClassIDEv>
    5450:	str	x0, [sp]
    5454:	cbz	x0, 548c <_ZN4llvm8TGParser9ParseTypeEv+0x28c>
    5458:	mov	x0, sp
    545c:	mov	w1, #0x1                   	// #1
    5460:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    5464:	ldp	x20, x19, [sp, #48]
    5468:	ldp	x29, x30, [sp, #32]
    546c:	add	sp, sp, #0x40
    5470:	ret
    5474:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5478:	add	x8, x8, #0x0
    547c:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    5480:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5484:	add	x8, x8, #0x0
    5488:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    548c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5490:	add	x8, x8, #0x0
    5494:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    5498:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    549c:	add	x8, x8, #0x0
    54a0:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    54a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    54a8:	add	x8, x8, #0x0
    54ac:	b	54b8 <_ZN4llvm8TGParser9ParseTypeEv+0x2b8>
    54b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    54b4:	add	x8, x8, #0x0
    54b8:	mov	w9, #0x103                 	// #259
    54bc:	mov	x0, x19
    54c0:	stp	x8, xzr, [sp]
    54c4:	strh	w9, [sp, #16]
    54c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    54cc:	stur	x0, [x29, #-8]
    54d0:	sub	x0, x29, #0x8
    54d4:	mov	x2, sp
    54d8:	mov	w1, #0x1                   	// #1
    54dc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    54e0:	mov	x0, xzr
    54e4:	ldp	x20, x19, [sp, #48]
    54e8:	ldp	x29, x30, [sp, #32]
    54ec:	add	sp, sp, #0x40
    54f0:	ret

00000000000054f4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>:
    54f4:	sub	sp, sp, #0x90
    54f8:	stp	x29, x30, [sp, #64]
    54fc:	str	x25, [sp, #80]
    5500:	stp	x24, x23, [sp, #96]
    5504:	stp	x22, x21, [sp, #112]
    5508:	stp	x20, x19, [sp, #128]
    550c:	add	x29, sp, #0x40
    5510:	mov	w23, w4
    5514:	mov	x19, x3
    5518:	mov	x20, x2
    551c:	mov	x21, x1
    5520:	mov	x22, x0
    5524:	cbz	x1, 55c8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xd4>
    5528:	ldr	w9, [x21, #80]
    552c:	cbz	w9, 5570 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    5530:	ldr	x8, [x21, #72]
    5534:	add	x9, x9, x9, lsl #1
    5538:	lsl	x9, x9, #3
    553c:	mov	x10, x8
    5540:	ldr	x11, [x10], #24
    5544:	cmp	x11, x20
    5548:	b.eq	555c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x68>  // b.none
    554c:	subs	x9, x9, #0x18
    5550:	mov	x8, x10
    5554:	b.ne	5540 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x4c>  // b.any
    5558:	b	5570 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    555c:	cbz	x8, 5570 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x7c>
    5560:	ldr	x8, [x8, #8]
    5564:	mov	x0, x20
    5568:	and	x1, x8, #0xfffffffffffffff8
    556c:	b	579c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a8>
    5570:	ldrb	w8, [x21, #125]
    5574:	cbz	w8, 55c8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xd4>
    5578:	ldr	x0, [x22, #328]
    557c:	add	x25, x22, #0x148
    5580:	cbnz	x0, 55d4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xe0>
    5584:	ldr	x24, [x21]
    5588:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    558c:	add	x0, x0, #0x0
    5590:	mov	w1, #0x1                   	// #1
    5594:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5598:	mov	x1, x0
    559c:	mov	x0, x24
    55a0:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    55a4:	mov	x1, x20
    55a8:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    55ac:	cbz	x0, 57e8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2f4>
    55b0:	ldrb	w8, [x0, #8]
    55b4:	cmp	w8, #0xb
    55b8:	b.ne	55ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xf8>  // b.any
    55bc:	mov	x1, x21
    55c0:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    55c4:	b	55ec <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0xf8>
    55c8:	ldr	x0, [x22, #328]
    55cc:	cbz	x0, 5640 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x14c>
    55d0:	add	x25, x22, #0x148
    55d4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    55d8:	add	x3, x3, #0x0
    55dc:	mov	w4, #0x2                   	// #2
    55e0:	mov	x1, x0
    55e4:	mov	x2, x20
    55e8:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    55ec:	ldr	x8, [x25]
    55f0:	cmp	x8, #0x0
    55f4:	csel	x8, x21, x8, eq  // eq = none
    55f8:	ldr	w10, [x8, #64]
    55fc:	cbz	w10, 561c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x128>
    5600:	ldr	x9, [x8, #56]
    5604:	lsl	x10, x10, #3
    5608:	ldr	x11, [x9], #8
    560c:	cmp	x11, x0
    5610:	b.eq	5698 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1a4>  // b.none
    5614:	subs	x10, x10, #0x8
    5618:	b.ne	5608 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x114>  // b.any
    561c:	ldr	x8, [x20, #32]
    5620:	cmp	x8, #0x4
    5624:	b.ne	5640 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x14c>  // b.any
    5628:	ldr	x8, [x20, #24]
    562c:	mov	w9, #0x414e                	// #16718
    5630:	movk	w9, #0x454d, lsl #16
    5634:	ldr	w8, [x8]
    5638:	cmp	w8, w9
    563c:	b.eq	5794 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a0>  // b.none
    5640:	ldr	x0, [x22, #336]
    5644:	cbz	x0, 5654 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x160>
    5648:	ldp	x1, x2, [x20, #24]
    564c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5650:	cbnz	x0, 5778 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    5654:	ldp	x8, x9, [x22, #272]
    5658:	cmp	x8, x9
    565c:	b.ne	567c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x188>  // b.any
    5660:	cmp	w23, #0x1
    5664:	b.ne	56f8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x204>  // b.any
    5668:	mov	x0, x20
    566c:	b	5778 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    5670:	add	x8, x8, #0x8
    5674:	cmp	x9, x8
    5678:	b.eq	5660 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x16c>  // b.none
    567c:	ldr	x10, [x8]
    5680:	ldr	x0, [x10, #8]
    5684:	cbz	x0, 5670 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x17c>
    5688:	ldr	x10, [x0, #24]
    568c:	cmp	x10, x20
    5690:	b.ne	5670 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x17c>  // b.any
    5694:	b	5778 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    5698:	ldr	w9, [x8, #80]
    569c:	cbz	w9, 56c8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d4>
    56a0:	ldr	x8, [x8, #72]
    56a4:	add	x9, x9, x9, lsl #1
    56a8:	lsl	x9, x9, #3
    56ac:	mov	x10, x8
    56b0:	ldr	x11, [x10], #24
    56b4:	cmp	x11, x0
    56b8:	b.eq	56e8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1f4>  // b.none
    56bc:	subs	x9, x9, #0x18
    56c0:	mov	x8, x10
    56c4:	b.ne	56b0 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1bc>  // b.any
    56c8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    56cc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    56d0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    56d4:	add	x0, x0, #0x0
    56d8:	add	x1, x1, #0x0
    56dc:	add	x3, x3, #0x0
    56e0:	mov	w2, #0x363                 	// #867
    56e4:	bl	0 <__assert_fail>
    56e8:	cbz	x8, 56c8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x1d4>
    56ec:	ldr	x8, [x8, #8]
    56f0:	and	x1, x8, #0xfffffffffffffff8
    56f4:	b	579c <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2a8>
    56f8:	ldr	x0, [x22, #344]
    56fc:	ldp	x1, x2, [x20, #24]
    5700:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5704:	cbnz	x0, 5778 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x284>
    5708:	cbz	x21, 5728 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    570c:	ldrb	w8, [x21, #125]
    5710:	cbnz	w8, 5728 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    5714:	ldr	x8, [x22, #328]
    5718:	cbnz	x8, 5728 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x234>
    571c:	ldr	x8, [x21]
    5720:	cmp	x8, x20
    5724:	b.eq	57b8 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE+0x2c4>  // b.none
    5728:	ldur	q0, [x20, #24]
    572c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5730:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5734:	mov	w8, #0x503                 	// #1283
    5738:	add	x9, x9, #0x0
    573c:	mov	x10, sp
    5740:	add	x11, sp, #0x10
    5744:	add	x12, x12, #0x0
    5748:	mov	w13, #0x302                 	// #770
    574c:	add	x0, x29, #0x18
    5750:	sub	x2, x29, #0x18
    5754:	mov	w1, #0x1                   	// #1
    5758:	strh	w8, [sp, #32]
    575c:	stp	x9, x10, [sp, #16]
    5760:	stp	x11, x12, [x29, #-24]
    5764:	sturh	w13, [x29, #-8]
    5768:	str	q0, [sp]
    576c:	str	x19, [x29, #24]
    5770:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    5774:	mov	x0, xzr
    5778:	ldp	x20, x19, [sp, #128]
    577c:	ldp	x22, x21, [sp, #112]
    5780:	ldp	x24, x23, [sp, #96]
    5784:	ldr	x25, [sp, #80]
    5788:	ldp	x29, x30, [sp, #64]
    578c:	add	sp, sp, #0x90
    5790:	ret
    5794:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    5798:	ldr	x1, [x1]
    579c:	ldp	x20, x19, [sp, #128]
    57a0:	ldp	x22, x21, [sp, #112]
    57a4:	ldp	x24, x23, [sp, #96]
    57a8:	ldr	x25, [sp, #80]
    57ac:	ldp	x29, x30, [sp, #64]
    57b0:	add	sp, sp, #0x90
    57b4:	b	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    57b8:	mov	x0, x21
    57bc:	bl	0 <_ZN4llvm6Record7getTypeEv>
    57c0:	mov	x1, x20
    57c4:	ldp	x20, x19, [sp, #128]
    57c8:	ldp	x22, x21, [sp, #112]
    57cc:	ldp	x24, x23, [sp, #96]
    57d0:	ldr	x25, [sp, #80]
    57d4:	ldp	x29, x30, [sp, #64]
    57d8:	mov	x2, x0
    57dc:	mov	w0, wzr
    57e0:	add	sp, sp, #0x90
    57e4:	b	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    57e8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    57ec:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    57f0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    57f4:	add	x0, x0, #0x0
    57f8:	add	x1, x1, #0x0
    57fc:	add	x3, x3, #0x0
    5800:	mov	w2, #0x69                  	// #105
    5804:	bl	0 <__assert_fail>

0000000000005808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>:
    5808:	stp	x29, x30, [sp, #-64]!
    580c:	stp	x24, x23, [sp, #16]
    5810:	stp	x22, x21, [sp, #32]
    5814:	stp	x20, x19, [sp, #48]
    5818:	mov	x29, sp
    581c:	ldr	x24, [x0]
    5820:	mov	x19, x0
    5824:	mov	x21, x1
    5828:	mov	x0, x3
    582c:	mov	x1, x4
    5830:	mov	x23, x4
    5834:	mov	x22, x3
    5838:	mov	x20, x2
    583c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5840:	mov	x1, x0
    5844:	mov	x0, x24
    5848:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    584c:	mov	x1, x20
    5850:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5854:	mov	x20, x0
    5858:	cbz	x21, 58a0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x98>
    585c:	cmp	x23, #0x2
    5860:	b.ne	5874 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x6c>  // b.any
    5864:	ldrh	w8, [x22]
    5868:	mov	w9, #0x3a3a                	// #14906
    586c:	cmp	w8, w9
    5870:	b.eq	58a0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0x98>  // b.none
    5874:	ldr	x21, [x21]
    5878:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    587c:	add	x0, x0, #0x0
    5880:	mov	w1, #0x2                   	// #2
    5884:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    5888:	mov	x1, x0
    588c:	mov	x0, x21
    5890:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    5894:	mov	x1, x20
    5898:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    589c:	mov	x20, x0
    58a0:	cbz	x20, 58e0 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xd8>
    58a4:	ldrb	w8, [x20, #8]
    58a8:	mov	x0, x20
    58ac:	cmp	w8, #0xb
    58b0:	b.ne	58cc <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE+0xc4>  // b.any
    58b4:	mov	x1, x19
    58b8:	ldp	x20, x19, [sp, #48]
    58bc:	ldp	x22, x21, [sp, #32]
    58c0:	ldp	x24, x23, [sp, #16]
    58c4:	ldp	x29, x30, [sp], #64
    58c8:	b	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    58cc:	ldp	x20, x19, [sp, #48]
    58d0:	ldp	x22, x21, [sp, #32]
    58d4:	ldp	x24, x23, [sp, #16]
    58d8:	ldp	x29, x30, [sp], #64
    58dc:	ret
    58e0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    58e4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    58e8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    58ec:	add	x0, x0, #0x0
    58f0:	add	x1, x1, #0x0
    58f4:	add	x3, x3, #0x0
    58f8:	mov	w2, #0x69                  	// #105
    58fc:	bl	0 <__assert_fail>

0000000000005900 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>:
    5900:	sub	sp, sp, #0x1d0
    5904:	stp	x29, x30, [sp, #368]
    5908:	stp	x28, x27, [sp, #384]
    590c:	stp	x26, x25, [sp, #400]
    5910:	stp	x24, x23, [sp, #416]
    5914:	stp	x22, x21, [sp, #432]
    5918:	stp	x20, x19, [sp, #448]
    591c:	add	x29, sp, #0x170
    5920:	ldr	w28, [x0, #40]
    5924:	mov	x19, x0
    5928:	sub	w23, w28, #0x27
    592c:	cmp	w23, #0x1e
    5930:	b.hi	6154 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x854>  // b.pmore
    5934:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5938:	add	x8, x8, #0x0
    593c:	adr	x9, 5954 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x54>
    5940:	ldrh	w10, [x8, x23, lsl #1]
    5944:	add	x9, x9, x10, lsl #2
    5948:	mov	x22, x2
    594c:	mov	x20, x1
    5950:	br	x9
    5954:	mov	x0, x19
    5958:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    595c:	ldp	x8, x9, [x19, #8]
    5960:	mov	x28, x0
    5964:	mov	x0, x19
    5968:	cmp	x8, x9
    596c:	cset	w1, eq  // eq = none
    5970:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5974:	cmp	w23, #0x1d
    5978:	str	w0, [x19, #40]
    597c:	b.hi	80dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27dc>  // b.pmore
    5980:	adrp	x25, 0 <_ZN4llvm8DagRecTy6SharedE>
    5984:	ldr	x25, [x25]
    5988:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    598c:	add	x8, x8, #0x0
    5990:	adr	x9, 59b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb4>
    5994:	ldrh	w10, [x8, x23, lsl #1]
    5998:	add	x9, x9, x10, lsl #2
    599c:	mov	x21, xzr
    59a0:	mov	x27, xzr
    59a4:	mov	w24, #0x8                   	// #8
    59a8:	mov	w26, #0xa                   	// #10
    59ac:	mov	x23, x25
    59b0:	br	x9
    59b4:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    59b8:	ldr	x25, [x25]
    59bc:	mov	w26, wzr
    59c0:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    59c4:	ldp	x8, x9, [x19, #8]
    59c8:	mov	x0, x19
    59cc:	cmp	x8, x9
    59d0:	cset	w1, eq  // eq = none
    59d4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    59d8:	cmp	w28, #0x33
    59dc:	str	w0, [x19, #40]
    59e0:	b.eq	6454 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xb54>  // b.none
    59e4:	cmp	w28, #0x3a
    59e8:	b.eq	63c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xac8>  // b.none
    59ec:	cmp	w28, #0x3e
    59f0:	b.ne	816c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x286c>  // b.any
    59f4:	adrp	x25, 0 <_ZN4llvm8DagRecTy6SharedE>
    59f8:	ldr	x25, [x25]
    59fc:	mov	x22, xzr
    5a00:	mov	w21, #0x3                   	// #3
    5a04:	cmp	w0, #0x8
    5a08:	b.ne	63d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xad8>  // b.any
    5a0c:	ldp	x8, x9, [x19, #8]
    5a10:	mov	x0, x19
    5a14:	cmp	x8, x9
    5a18:	cset	w1, eq  // eq = none
    5a1c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5a20:	str	w0, [x19, #40]
    5a24:	mov	x0, x19
    5a28:	mov	x1, x20
    5a2c:	mov	x2, xzr
    5a30:	mov	w3, wzr
    5a34:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5a38:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    5a3c:	ldr	w8, [x19, #40]
    5a40:	cmp	w8, #0xe
    5a44:	b.ne	6f68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1668>  // b.any
    5a48:	ldp	x8, x9, [x19, #8]
    5a4c:	mov	x23, x0
    5a50:	mov	x0, x19
    5a54:	cmp	x8, x9
    5a58:	cset	w1, eq  // eq = none
    5a5c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5a60:	str	w0, [x19, #40]
    5a64:	mov	x0, x19
    5a68:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5a6c:	mov	x26, x0
    5a70:	mov	x0, x19
    5a74:	mov	x1, x20
    5a78:	mov	x2, x22
    5a7c:	mov	w3, wzr
    5a80:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5a84:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    5a88:	ldr	w8, [x19, #40]
    5a8c:	cmp	w8, #0xe
    5a90:	b.ne	6f68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1668>  // b.any
    5a94:	ldp	x8, x9, [x19, #8]
    5a98:	mov	x24, x0
    5a9c:	mov	x0, x19
    5aa0:	cmp	x8, x9
    5aa4:	cset	w1, eq  // eq = none
    5aa8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5aac:	str	w0, [x19, #40]
    5ab0:	mov	x0, x19
    5ab4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5ab8:	mov	x27, x0
    5abc:	mov	x0, x19
    5ac0:	mov	x1, x20
    5ac4:	mov	x2, x22
    5ac8:	mov	w3, wzr
    5acc:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5ad0:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    5ad4:	ldr	w8, [x19, #40]
    5ad8:	cmp	w8, #0x9
    5adc:	b.ne	6f74 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1674>  // b.any
    5ae0:	ldp	x8, x9, [x19, #8]
    5ae4:	mov	x22, x0
    5ae8:	mov	x0, x19
    5aec:	cmp	x8, x9
    5af0:	cset	w1, eq  // eq = none
    5af4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5af8:	cmp	w28, #0x33
    5afc:	str	w0, [x19, #40]
    5b00:	b.eq	73a0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1aa0>  // b.none
    5b04:	cmp	w28, #0x3a
    5b08:	b.eq	7388 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a88>  // b.none
    5b0c:	cmp	w28, #0x3e
    5b10:	b.ne	8204 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2904>  // b.any
    5b14:	ldrb	w9, [x24, #8]
    5b18:	sub	w8, w9, #0x1
    5b1c:	cmp	w8, #0x17
    5b20:	b.cs	7418 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b18>  // b.hs, b.nlast
    5b24:	ldr	x0, [x24, #16]
    5b28:	cbz	x0, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    5b2c:	ldr	w9, [x0, #8]
    5b30:	cmp	w9, #0x5
    5b34:	b.eq	7420 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1b20>  // b.none
    5b38:	ldr	x8, [x0]
    5b3c:	sub	x19, x29, #0x90
    5b40:	ldr	x9, [x8, #16]
    5b44:	sub	x8, x29, #0x90
    5b48:	blr	x9
    5b4c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5b50:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5b54:	add	x8, x8, #0x0
    5b58:	mov	w9, #0x403                 	// #1027
    5b5c:	add	x10, sp, #0x20
    5b60:	add	x11, x11, #0x0
    5b64:	mov	w12, #0x302                 	// #770
    5b68:	stp	x8, x19, [sp, #32]
    5b6c:	strh	w9, [sp, #48]
    5b70:	stp	x10, x11, [x29, #-176]
    5b74:	sturh	w12, [x29, #-160]
    5b78:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    5b7c:	ldrb	w8, [sp, #49]
    5b80:	cmp	w8, #0x1
    5b84:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    5b88:	sub	x0, x29, #0x30
    5b8c:	sub	x2, x29, #0xb0
    5b90:	mov	w1, #0x1                   	// #1
    5b94:	stur	x26, [x29, #-48]
    5b98:	b	65e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    5b9c:	ldp	x8, x9, [x19, #8]
    5ba0:	mov	x0, x19
    5ba4:	cmp	x8, x9
    5ba8:	cset	w1, eq  // eq = none
    5bac:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5bb0:	str	w0, [x19, #40]
    5bb4:	adrp	x21, 0 <_ZN4llvm8IntRecTy6SharedE>
    5bb8:	ldr	x21, [x21]
    5bbc:	mov	w22, #0x4                   	// #4
    5bc0:	cmp	w0, #0x8
    5bc4:	b.eq	6740 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>  // b.none
    5bc8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5bcc:	add	x8, x8, #0x0
    5bd0:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    5bd4:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    5bd8:	ldr	x23, [x23]
    5bdc:	mov	x25, xzr
    5be0:	mov	w26, #0xb                   	// #11
    5be4:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    5be8:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    5bec:	ldr	x23, [x23]
    5bf0:	mov	x25, xzr
    5bf4:	mov	w26, #0xc                   	// #12
    5bf8:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    5bfc:	mov	x21, xzr
    5c00:	mov	w24, #0x7                   	// #7
    5c04:	mov	x27, x22
    5c08:	cmp	w0, #0x8
    5c0c:	b.ne	621c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x91c>  // b.any
    5c10:	str	x28, [sp]
    5c14:	ldp	x8, x9, [x19, #8]
    5c18:	mov	x0, x19
    5c1c:	cmp	x8, x9
    5c20:	cset	w1, eq  // eq = none
    5c24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5c28:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    5c2c:	ldr	d0, [x9]
    5c30:	sub	x8, x29, #0x90
    5c34:	add	x25, x8, #0x10
    5c38:	cmp	w24, #0x7
    5c3c:	sub	w28, w24, #0xb
    5c40:	str	w0, [x19, #40]
    5c44:	stur	x25, [x29, #-144]
    5c48:	stur	d0, [x29, #-136]
    5c4c:	b.cs	5de0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4e0>  // b.hs, b.nlast
    5c50:	mov	x0, x19
    5c54:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5c58:	mov	x23, x0
    5c5c:	mov	x0, x19
    5c60:	mov	x1, x20
    5c64:	mov	x2, x27
    5c68:	mov	w3, wzr
    5c6c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5c70:	ldp	w8, w9, [x29, #-136]
    5c74:	mov	x26, x0
    5c78:	cmp	w8, w9
    5c7c:	b.cs	5dc4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4c4>  // b.hs, b.nlast
    5c80:	ldur	x9, [x29, #-144]
    5c84:	str	x26, [x9, w8, uxtw #3]
    5c88:	ldp	w9, w8, [x29, #-136]
    5c8c:	cmp	w9, w8
    5c90:	b.cs	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.hs, b.nlast
    5c94:	ldur	x10, [x29, #-144]
    5c98:	add	x8, x9, #0x1
    5c9c:	stur	w8, [x29, #-136]
    5ca0:	add	x10, x10, x8, lsl #3
    5ca4:	ldur	x10, [x10, #-8]
    5ca8:	cbz	x10, 6d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1448>
    5cac:	ldrb	w11, [x10, #8]
    5cb0:	sub	w11, w11, #0x1
    5cb4:	cmp	w11, #0x16
    5cb8:	b.hi	80bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27bc>  // b.pmore
    5cbc:	ldr	x26, [x10, #16]
    5cc0:	cbz	x27, 5cfc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3fc>
    5cc4:	mov	x0, x27
    5cc8:	mov	x1, x26
    5ccc:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    5cd0:	cbz	x0, 6040 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x740>
    5cd4:	ldr	w8, [x19, #40]
    5cd8:	cmp	w8, #0xe
    5cdc:	b.ne	5f8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x68c>  // b.any
    5ce0:	ldp	x8, x9, [x19, #8]
    5ce4:	mov	x0, x19
    5ce8:	cmp	x8, x9
    5cec:	cset	w1, eq  // eq = none
    5cf0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5cf4:	str	w0, [x19, #40]
    5cf8:	b	5c50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x350>
    5cfc:	cmp	w28, #0x2
    5d00:	b.cc	5d68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x468>  // b.lo, b.ul, b.last
    5d04:	cmp	w24, #0x7
    5d08:	b.eq	5dac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4ac>  // b.none
    5d0c:	cmp	w24, #0x8
    5d10:	b.ne	8114 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2814>  // b.any
    5d14:	cbnz	w9, 5d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x448>
    5d18:	cbz	x22, 5d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x448>
    5d1c:	ldr	w8, [x22, #8]
    5d20:	cmp	w8, #0x5
    5d24:	b.ne	6c5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x135c>  // b.any
    5d28:	mov	x0, x26
    5d2c:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    5d30:	ldr	x8, [x0]
    5d34:	mov	x1, x22
    5d38:	ldr	x8, [x8, #24]
    5d3c:	blr	x8
    5d40:	tbz	w0, #0, 6d68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1468>
    5d44:	ldur	w8, [x29, #-136]
    5d48:	cmp	w8, #0x2
    5d4c:	b.ne	5d60 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x460>  // b.any
    5d50:	cbz	x26, 814c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x284c>
    5d54:	ldr	w8, [x26, #8]
    5d58:	cmp	w8, #0x3
    5d5c:	b.ne	6cc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13c8>  // b.any
    5d60:	mov	x27, xzr
    5d64:	b	5cd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d4>
    5d68:	ldr	x8, [x26]
    5d6c:	adrp	x1, 0 <_ZN4llvm8IntRecTy6SharedE>
    5d70:	mov	x0, x26
    5d74:	ldr	x8, [x8, #24]
    5d78:	ldr	x1, [x1]
    5d7c:	blr	x8
    5d80:	mov	x27, x26
    5d84:	tbnz	w0, #0, 5cd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d4>
    5d88:	ldr	x8, [x26]
    5d8c:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    5d90:	mov	x0, x26
    5d94:	ldr	x8, [x8, #24]
    5d98:	ldr	x1, [x1]
    5d9c:	blr	x8
    5da0:	mov	x27, x26
    5da4:	tbnz	w0, #0, 5cd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d4>
    5da8:	b	6b28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1228>
    5dac:	cbz	x26, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    5db0:	ldr	w8, [x26, #8]
    5db4:	mov	x27, x26
    5db8:	cmp	w8, #0x5
    5dbc:	b.eq	5cd4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x3d4>  // b.none
    5dc0:	b	6b00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1200>
    5dc4:	sub	x0, x29, #0x90
    5dc8:	mov	w3, #0x8                   	// #8
    5dcc:	mov	x1, x25
    5dd0:	mov	x2, xzr
    5dd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5dd8:	ldur	w8, [x29, #-136]
    5ddc:	b	5c80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x380>
    5de0:	mov	x0, x19
    5de4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    5de8:	mov	x23, x0
    5dec:	mov	x0, x19
    5df0:	mov	x1, x20
    5df4:	mov	x2, x27
    5df8:	mov	w3, wzr
    5dfc:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    5e00:	ldp	w8, w9, [x29, #-136]
    5e04:	mov	x26, x0
    5e08:	cmp	w8, w9
    5e0c:	b.cs	5f70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x670>  // b.hs, b.nlast
    5e10:	ldur	x9, [x29, #-144]
    5e14:	str	x26, [x9, w8, uxtw #3]
    5e18:	ldp	w9, w8, [x29, #-136]
    5e1c:	cmp	w9, w8
    5e20:	b.cs	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.hs, b.nlast
    5e24:	ldur	x10, [x29, #-144]
    5e28:	add	x8, x9, #0x1
    5e2c:	stur	w8, [x29, #-136]
    5e30:	add	x10, x10, x8, lsl #3
    5e34:	ldur	x10, [x10, #-8]
    5e38:	cbz	x10, 6d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1448>
    5e3c:	ldrb	w11, [x10, #8]
    5e40:	sub	w11, w11, #0x1
    5e44:	cmp	w11, #0x17
    5e48:	b.cs	80bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27bc>  // b.hs, b.nlast
    5e4c:	ldr	x26, [x10, #16]
    5e50:	cbz	x27, 5ea8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x5a8>
    5e54:	mov	x0, x27
    5e58:	mov	x1, x26
    5e5c:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    5e60:	cbz	x0, 6040 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x740>
    5e64:	mov	x27, x0
    5e68:	cmp	w24, #0x11
    5e6c:	b.ne	5e80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x580>  // b.any
    5e70:	mov	x0, xzr
    5e74:	mov	x1, xzr
    5e78:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    5e7c:	mov	x27, x0
    5e80:	ldr	w8, [x19, #40]
    5e84:	cmp	w8, #0xe
    5e88:	b.ne	5f8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x68c>  // b.any
    5e8c:	ldp	x8, x9, [x19, #8]
    5e90:	mov	x0, x19
    5e94:	cmp	x8, x9
    5e98:	cset	w1, eq  // eq = none
    5e9c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5ea0:	str	w0, [x19, #40]
    5ea4:	b	5de0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x4e0>
    5ea8:	cmp	w28, #0x2
    5eac:	b.cc	5ed8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x5d8>  // b.lo, b.ul, b.last
    5eb0:	cmp	w24, #0x8
    5eb4:	b.eq	5f1c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x61c>  // b.none
    5eb8:	cmp	w24, #0x7
    5ebc:	b.ne	8114 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2814>  // b.any
    5ec0:	cbz	x26, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    5ec4:	ldr	w8, [x26, #8]
    5ec8:	mov	x27, x26
    5ecc:	cmp	w8, #0x5
    5ed0:	b.eq	5e68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x568>  // b.none
    5ed4:	b	6b00 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1200>
    5ed8:	ldr	x8, [x26]
    5edc:	adrp	x1, 0 <_ZN4llvm8IntRecTy6SharedE>
    5ee0:	mov	x0, x26
    5ee4:	ldr	x8, [x8, #24]
    5ee8:	ldr	x1, [x1]
    5eec:	blr	x8
    5ef0:	mov	x27, x26
    5ef4:	tbnz	w0, #0, 5e68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x568>
    5ef8:	ldr	x8, [x26]
    5efc:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    5f00:	mov	x0, x26
    5f04:	ldr	x8, [x8, #24]
    5f08:	ldr	x1, [x1]
    5f0c:	blr	x8
    5f10:	mov	x27, x26
    5f14:	tbnz	w0, #0, 5e68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x568>
    5f18:	b	6b28 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1228>
    5f1c:	cbnz	w9, 5f50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x650>
    5f20:	cbz	x22, 5f50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x650>
    5f24:	ldr	w8, [x22, #8]
    5f28:	cmp	w8, #0x5
    5f2c:	b.ne	6c5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x135c>  // b.any
    5f30:	mov	x0, x26
    5f34:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    5f38:	ldr	x8, [x0]
    5f3c:	mov	x1, x22
    5f40:	ldr	x8, [x8, #24]
    5f44:	blr	x8
    5f48:	tbz	w0, #0, 6d68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1468>
    5f4c:	ldur	w8, [x29, #-136]
    5f50:	cmp	w8, #0x2
    5f54:	b.ne	5f68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x668>  // b.any
    5f58:	cbz	x26, 814c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x284c>
    5f5c:	ldr	w8, [x26, #8]
    5f60:	cmp	w8, #0x3
    5f64:	b.ne	6cc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13c8>  // b.any
    5f68:	mov	x27, xzr
    5f6c:	b	5e68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x568>
    5f70:	sub	x0, x29, #0x90
    5f74:	mov	w3, #0x8                   	// #8
    5f78:	mov	x1, x25
    5f7c:	mov	x2, xzr
    5f80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    5f84:	ldur	w8, [x29, #-136]
    5f88:	b	5e10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x510>
    5f8c:	ldr	x23, [sp]
    5f90:	cmp	w8, #0x9
    5f94:	b.ne	60b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x7b0>  // b.any
    5f98:	ldp	x8, x9, [x19, #8]
    5f9c:	mov	x0, x19
    5fa0:	cmp	x8, x9
    5fa4:	cset	w1, eq  // eq = none
    5fa8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    5fac:	cmp	w24, #0x7
    5fb0:	csel	x22, x27, x21, eq  // eq = none
    5fb4:	cmp	w24, #0xa
    5fb8:	str	w0, [x19, #40]
    5fbc:	b.hi	6b88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1288>  // b.pmore
    5fc0:	mov	w8, #0x1                   	// #1
    5fc4:	lsl	w8, w8, w24
    5fc8:	mov	w9, #0x68f                 	// #1679
    5fcc:	tst	w8, w9
    5fd0:	b.eq	6b50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1250>  // b.none
    5fd4:	ldur	w8, [x29, #-136]
    5fd8:	cmp	w8, #0x3
    5fdc:	b.cc	6b8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x128c>  // b.lo, b.ul, b.last
    5fe0:	ldur	w9, [x29, #-132]
    5fe4:	mov	w10, w8
    5fe8:	sub	x8, x10, #0x1
    5fec:	cmp	x8, x9
    5ff0:	b.hi	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.pmore
    5ff4:	ldur	x9, [x29, #-144]
    5ff8:	sub	x9, x9, #0x8
    5ffc:	ldr	x2, [x9, x10, lsl #3]
    6000:	stur	w8, [x29, #-136]
    6004:	cbz	w8, 80f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27f4>
    6008:	ldr	x1, [x9, x8, lsl #3]
    600c:	mov	w0, w24
    6010:	mov	x3, x22
    6014:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    6018:	mov	x1, x20
    601c:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    6020:	ldur	w8, [x29, #-136]
    6024:	cbz	w8, 80f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27f4>
    6028:	ldur	x9, [x29, #-144]
    602c:	cmp	w8, #0x2
    6030:	add	x9, x9, x8, lsl #3
    6034:	stur	x0, [x9, #-8]
    6038:	b.hi	5fe0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x6e0>  // b.pmore
    603c:	b	6b88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1288>
    6040:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6044:	add	x8, x8, #0x0
    6048:	mov	w9, #0x103                 	// #259
    604c:	stp	x8, xzr, [sp, #136]
    6050:	strh	w9, [sp, #152]
    6054:	ldr	x8, [x27]
    6058:	mov	x0, x27
    605c:	sub	x20, x29, #0xb0
    6060:	ldr	x9, [x8, #16]
    6064:	sub	x8, x29, #0xb0
    6068:	blr	x9
    606c:	ldrb	w19, [sp, #152]
    6070:	mov	w8, #0x104                 	// #260
    6074:	strh	w8, [sp, #128]
    6078:	stp	x20, xzr, [sp, #112]
    607c:	cmp	w19, #0x1
    6080:	b.eq	682c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf2c>  // b.none
    6084:	add	x21, sp, #0xa0
    6088:	cbnz	w19, 6848 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf48>
    608c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6090:	mov	w8, #0x100                 	// #256
    6094:	add	x9, x9, #0x0
    6098:	mov	w10, #0x103                 	// #259
    609c:	stp	xzr, xzr, [sp, #160]
    60a0:	strh	w8, [sp, #176]
    60a4:	stp	x9, xzr, [sp, #88]
    60a8:	strh	w10, [sp, #104]
    60ac:	b	68d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfd0>
    60b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    60b4:	add	x8, x8, #0x0
    60b8:	mov	w9, #0x103                 	// #259
    60bc:	mov	x0, x19
    60c0:	stp	x8, xzr, [x29, #-176]
    60c4:	sturh	w9, [x29, #-160]
    60c8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    60cc:	str	x0, [sp, #32]
    60d0:	b	6bd0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x12d0>
    60d4:	ldp	x8, x9, [x19, #8]
    60d8:	mov	x0, x19
    60dc:	cmp	x8, x9
    60e0:	cset	w1, eq  // eq = none
    60e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    60e8:	mov	x21, xzr
    60ec:	str	w0, [x19, #40]
    60f0:	mov	w22, #0x2                   	// #2
    60f4:	cmp	w0, #0x8
    60f8:	b.ne	5bc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    60fc:	b	6740 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>
    6100:	ldp	x8, x9, [x19, #8]
    6104:	mov	x0, x19
    6108:	cmp	x8, x9
    610c:	cset	w1, eq  // eq = none
    6110:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6114:	mov	x21, xzr
    6118:	str	w0, [x19, #40]
    611c:	mov	w22, #0x1                   	// #1
    6120:	cmp	w0, #0x8
    6124:	b.ne	5bc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    6128:	b	6740 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>
    612c:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    6130:	ldr	x25, [x25]
    6134:	mov	w26, #0x6                   	// #6
    6138:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    613c:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    6140:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    6144:	ldr	x23, [x23]
    6148:	ldr	x25, [x25]
    614c:	mov	w26, #0xf                   	// #15
    6150:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    6154:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6158:	add	x8, x8, #0x0
    615c:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6160:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    6164:	ldr	x25, [x25]
    6168:	mov	w26, #0x3                   	// #3
    616c:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    6170:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    6174:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    6178:	ldr	x23, [x23]
    617c:	ldr	x25, [x25]
    6180:	mov	w26, #0xd                   	// #13
    6184:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    6188:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    618c:	ldr	x25, [x25]
    6190:	mov	w26, #0x5                   	// #5
    6194:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    6198:	adrp	x25, 0 <_ZN4llvm11StringRecTy6SharedE>
    619c:	ldr	x25, [x25]
    61a0:	mov	w26, #0x9                   	// #9
    61a4:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    61a8:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    61ac:	ldr	x25, [x25]
    61b0:	mov	w26, #0x4                   	// #4
    61b4:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    61b8:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    61bc:	ldr	x25, [x25]
    61c0:	mov	w26, #0x2                   	// #2
    61c4:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    61c8:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    61cc:	ldr	x25, [x25]
    61d0:	mov	w26, #0x1                   	// #1
    61d4:	b	61e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e4>
    61d8:	adrp	x25, 0 <_ZN4llvm8DagRecTy6SharedE>
    61dc:	ldr	x25, [x25]
    61e0:	mov	w26, #0x11                  	// #17
    61e4:	mov	x23, x25
    61e8:	cbz	x22, 6208 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x908>
    61ec:	ldr	x8, [x23]
    61f0:	mov	x0, x23
    61f4:	mov	x1, x22
    61f8:	ldr	x8, [x8, #24]
    61fc:	blr	x8
    6200:	tbz	w0, #0, 6274 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x974>
    6204:	ldr	w0, [x19, #40]
    6208:	mov	x21, x23
    620c:	mov	x27, x25
    6210:	mov	w24, w26
    6214:	cmp	w0, #0x8
    6218:	b.eq	5c10 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x310>  // b.none
    621c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6220:	add	x8, x8, #0x0
    6224:	mov	w9, #0x103                 	// #259
    6228:	mov	x0, x19
    622c:	stp	x8, xzr, [x29, #-144]
    6230:	sturh	w9, [x29, #-128]
    6234:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6238:	stur	x0, [x29, #-176]
    623c:	sub	x0, x29, #0xb0
    6240:	sub	x2, x29, #0x90
    6244:	mov	w1, #0x1                   	// #1
    6248:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    624c:	mov	x19, xzr
    6250:	mov	x0, x19
    6254:	ldp	x20, x19, [sp, #448]
    6258:	ldp	x22, x21, [sp, #432]
    625c:	ldp	x24, x23, [sp, #416]
    6260:	ldp	x26, x25, [sp, #400]
    6264:	ldp	x28, x27, [sp, #384]
    6268:	ldp	x29, x30, [sp, #368]
    626c:	add	sp, sp, #0x1d0
    6270:	ret
    6274:	ldr	x8, [x22]
    6278:	mov	x0, x22
    627c:	sub	x19, x29, #0x90
    6280:	ldr	x9, [x8, #16]
    6284:	sub	x8, x29, #0x90
    6288:	blr	x9
    628c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6290:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6294:	add	x8, x8, #0x0
    6298:	mov	w9, #0x403                 	// #1027
    629c:	sub	x10, x29, #0x70
    62a0:	add	x11, x11, #0x0
    62a4:	mov	w12, #0x302                 	// #770
    62a8:	stp	x8, x19, [x29, #-112]
    62ac:	sturh	w9, [x29, #-96]
    62b0:	stp	x10, x11, [x29, #-80]
    62b4:	sturh	w12, [x29, #-64]
    62b8:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    62bc:	ldurb	w8, [x29, #-95]
    62c0:	cmp	w8, #0x1
    62c4:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    62c8:	ldr	x8, [x23]
    62cc:	mov	x0, x23
    62d0:	sub	x19, x29, #0xb0
    62d4:	ldr	x9, [x8, #16]
    62d8:	sub	x8, x29, #0xb0
    62dc:	blr	x9
    62e0:	ldurb	w8, [x29, #-63]
    62e4:	ldur	x9, [x29, #-80]
    62e8:	sub	x10, x29, #0x50
    62ec:	mov	w11, #0x402                 	// #1026
    62f0:	cmp	w8, #0x1
    62f4:	csel	x8, x9, x10, eq  // eq = none
    62f8:	stp	x8, x19, [x29, #-48]
    62fc:	sturh	w11, [x29, #-32]
    6300:	ldrb	w9, [x8, #16]
    6304:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6308:	ldrb	w8, [x8, #17]
    630c:	cmp	w8, #0x1
    6310:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6314:	ldurb	w8, [x29, #-31]
    6318:	ldur	x9, [x29, #-48]
    631c:	sub	x10, x29, #0x30
    6320:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6324:	cmp	w8, #0x1
    6328:	add	x11, x11, #0x0
    632c:	mov	w12, #0x302                 	// #770
    6330:	csel	x8, x9, x10, eq  // eq = none
    6334:	stp	x8, x11, [sp, #32]
    6338:	strh	w12, [sp, #48]
    633c:	ldrb	w9, [x8, #16]
    6340:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6344:	ldrb	w8, [x8, #17]
    6348:	cmp	w8, #0x1
    634c:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6350:	add	x0, sp, #0xa0
    6354:	add	x2, sp, #0x20
    6358:	mov	w1, #0x1                   	// #1
    635c:	str	x28, [sp, #160]
    6360:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6364:	ldur	x0, [x29, #-176]
    6368:	sub	x8, x29, #0xb0
    636c:	add	x8, x8, #0x10
    6370:	cmp	x0, x8
    6374:	b.eq	637c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa7c>  // b.none
    6378:	bl	0 <_ZdlPv>
    637c:	ldur	x0, [x29, #-144]
    6380:	sub	x8, x29, #0x90
    6384:	add	x8, x8, #0x10
    6388:	cmp	x0, x8
    638c:	b.eq	624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>  // b.none
    6390:	bl	0 <_ZdlPv>
    6394:	b	624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6398:	ldp	x8, x9, [x19, #8]
    639c:	mov	x0, x19
    63a0:	cmp	x8, x9
    63a4:	cset	w1, eq  // eq = none
    63a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    63ac:	str	w0, [x19, #40]
    63b0:	mov	x0, x19
    63b4:	bl	823c <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    63b8:	cbz	x0, 6714 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe14>
    63bc:	mov	x21, x0
    63c0:	mov	w22, wzr
    63c4:	b	6734 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe34>
    63c8:	mov	x25, xzr
    63cc:	mov	w21, #0x2                   	// #2
    63d0:	cmp	w0, #0x8
    63d4:	b.eq	5a0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10c>  // b.none
    63d8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    63dc:	add	x8, x8, #0x0
    63e0:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    63e4:	ldp	x8, x9, [x19, #8]
    63e8:	mov	x0, x19
    63ec:	cmp	x8, x9
    63f0:	cset	w1, eq  // eq = none
    63f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    63f8:	cmp	w0, #0xa
    63fc:	str	w0, [x19, #40]
    6400:	b.ne	6720 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe20>  // b.any
    6404:	mov	x0, x19
    6408:	bl	823c <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    640c:	cbz	x0, 6714 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe14>
    6410:	ldr	w8, [x0, #8]
    6414:	mov	x21, x0
    6418:	cmp	w8, #0x7
    641c:	b.eq	6730 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe30>  // b.none
    6420:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6424:	add	x8, x8, #0x0
    6428:	mov	w9, #0x103                 	// #259
    642c:	mov	x0, x19
    6430:	stp	x8, xzr, [x29, #-144]
    6434:	sturh	w9, [x29, #-128]
    6438:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    643c:	stur	x0, [x29, #-176]
    6440:	sub	x0, x29, #0xb0
    6444:	sub	x2, x29, #0x90
    6448:	mov	w1, #0x1                   	// #1
    644c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6450:	b	6730 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe30>
    6454:	mov	x25, xzr
    6458:	mov	w21, wzr
    645c:	cmp	w0, #0x8
    6460:	b.eq	5a0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10c>  // b.none
    6464:	b	63d8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xad8>
    6468:	mov	x0, x19
    646c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6470:	ldp	x8, x9, [x19, #8]
    6474:	mov	x25, x0
    6478:	mov	x0, x19
    647c:	cmp	x8, x9
    6480:	cset	w1, eq  // eq = none
    6484:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6488:	cmp	w0, #0x8
    648c:	str	w0, [x19, #40]
    6490:	b.ne	6814 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf14>  // b.any
    6494:	ldp	x8, x9, [x19, #8]
    6498:	mov	x0, x19
    649c:	cmp	x8, x9
    64a0:	cset	w1, eq  // eq = none
    64a4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    64a8:	cmp	w0, #0x48
    64ac:	str	w0, [x19, #40]
    64b0:	b.ne	6948 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1048>  // b.any
    64b4:	ldp	x0, x1, [x19, #48]
    64b8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    64bc:	mov	x21, x0
    64c0:	cbz	x20, 6ed4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d4>
    64c4:	ldr	w8, [x20, #80]
    64c8:	cbz	w8, 6ed4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d4>
    64cc:	ldr	x10, [x20, #72]
    64d0:	add	x8, x8, x8, lsl #1
    64d4:	lsl	x8, x8, #3
    64d8:	mov	x9, x10
    64dc:	ldr	x11, [x9], #24
    64e0:	cmp	x11, x21
    64e4:	b.eq	6e18 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1518>  // b.none
    64e8:	subs	x8, x8, #0x18
    64ec:	mov	x10, x9
    64f0:	b.ne	64dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xbdc>  // b.any
    64f4:	b	6ed4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d4>
    64f8:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    64fc:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    6500:	ldr	x23, [x23]
    6504:	ldr	x25, [x25]
    6508:	mov	w26, #0xe                   	// #14
    650c:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    6510:	ldp	x8, x9, [x19, #8]
    6514:	mov	x0, x19
    6518:	cmp	x8, x9
    651c:	cset	w1, eq  // eq = none
    6520:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6524:	cmp	w0, #0x8
    6528:	str	w0, [x19, #40]
    652c:	b.ne	6820 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf20>  // b.any
    6530:	ldp	x8, x9, [x19, #8]
    6534:	mov	x0, x19
    6538:	cmp	x8, x9
    653c:	cset	w1, eq  // eq = none
    6540:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6544:	str	w0, [x19, #40]
    6548:	mov	x0, x19
    654c:	mov	x1, x20
    6550:	mov	x2, xzr
    6554:	mov	w3, wzr
    6558:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    655c:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6560:	ldrb	w8, [x0, #8]
    6564:	mov	x22, x0
    6568:	sub	w8, w8, #0x1
    656c:	cmp	w8, #0x17
    6570:	b.cc	6be4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x12e4>  // b.lo, b.ul, b.last
    6574:	ldr	x8, [x22]
    6578:	mov	x0, x22
    657c:	sub	x20, x29, #0x90
    6580:	ldr	x9, [x8, #40]
    6584:	sub	x8, x29, #0x90
    6588:	blr	x9
    658c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6590:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6594:	add	x8, x8, #0x0
    6598:	mov	w9, #0x403                 	// #1027
    659c:	add	x10, sp, #0x20
    65a0:	add	x11, x11, #0x0
    65a4:	mov	w12, #0x302                 	// #770
    65a8:	stp	x8, x20, [sp, #32]
    65ac:	strh	w9, [sp, #48]
    65b0:	stp	x10, x11, [x29, #-176]
    65b4:	sturh	w12, [x29, #-160]
    65b8:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    65bc:	ldrb	w8, [sp, #49]
    65c0:	cmp	w8, #0x1
    65c4:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    65c8:	mov	x0, x19
    65cc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    65d0:	stur	x0, [x29, #-48]
    65d4:	sub	x0, x29, #0x30
    65d8:	sub	x2, x29, #0xb0
    65dc:	mov	w1, #0x1                   	// #1
    65e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    65e4:	b	637c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa7c>
    65e8:	mov	x0, x19
    65ec:	mov	x1, x20
    65f0:	mov	x2, x22
    65f4:	ldp	x20, x19, [sp, #448]
    65f8:	ldp	x22, x21, [sp, #432]
    65fc:	ldp	x24, x23, [sp, #416]
    6600:	ldp	x26, x25, [sp, #400]
    6604:	ldp	x28, x27, [sp, #384]
    6608:	ldp	x29, x30, [sp, #368]
    660c:	add	sp, sp, #0x1d0
    6610:	b	8328 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>
    6614:	ldp	x8, x9, [x19, #8]
    6618:	mov	x0, x19
    661c:	cmp	x8, x9
    6620:	cset	w1, eq  // eq = none
    6624:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6628:	str	w0, [x19, #40]
    662c:	mov	x0, x19
    6630:	bl	823c <_ZN4llvm8TGParser17ParseOperatorTypeEv>
    6634:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6638:	ldr	w8, [x19, #40]
    663c:	cmp	w8, #0x8
    6640:	b.ne	693c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x103c>  // b.any
    6644:	ldp	x8, x9, [x19, #8]
    6648:	mov	x21, x0
    664c:	mov	x0, x19
    6650:	cmp	x8, x9
    6654:	cset	w1, eq  // eq = none
    6658:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    665c:	str	w0, [x19, #40]
    6660:	mov	x0, x19
    6664:	mov	x1, x20
    6668:	mov	x2, xzr
    666c:	mov	w3, wzr
    6670:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6674:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6678:	ldr	w8, [x19, #40]
    667c:	cmp	w8, #0x9
    6680:	b.ne	6ddc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14dc>  // b.any
    6684:	ldp	x8, x9, [x19, #8]
    6688:	mov	x20, x0
    668c:	mov	x0, x19
    6690:	cmp	x8, x9
    6694:	cset	w1, eq  // eq = none
    6698:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    669c:	str	w0, [x19, #40]
    66a0:	mov	x0, x21
    66a4:	mov	x1, x20
    66a8:	bl	0 <_ZN4llvm9IsAOpInit3getEPNS_5RecTyEPNS_4InitE>
    66ac:	ldp	x20, x19, [sp, #448]
    66b0:	ldp	x22, x21, [sp, #432]
    66b4:	ldp	x24, x23, [sp, #416]
    66b8:	ldp	x26, x25, [sp, #400]
    66bc:	ldp	x28, x27, [sp, #384]
    66c0:	ldp	x29, x30, [sp, #368]
    66c4:	add	sp, sp, #0x1d0
    66c8:	b	0 <_ZNK4llvm9IsAOpInit4FoldEv>
    66cc:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    66d0:	adrp	x25, 0 <_ZN4llvm8IntRecTy6SharedE>
    66d4:	ldr	x23, [x23]
    66d8:	ldr	x25, [x25]
    66dc:	mov	w26, #0x10                  	// #16
    66e0:	b	61e8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x8e8>
    66e4:	ldp	x8, x9, [x19, #8]
    66e8:	mov	x0, x19
    66ec:	cmp	x8, x9
    66f0:	cset	w1, eq  // eq = none
    66f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    66f8:	str	w0, [x19, #40]
    66fc:	adrp	x21, 0 <_ZN4llvm8IntRecTy6SharedE>
    6700:	ldr	x21, [x21]
    6704:	mov	w22, #0x3                   	// #3
    6708:	cmp	w0, #0x8
    670c:	b.eq	6740 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xe40>  // b.none
    6710:	b	5bc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>
    6714:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6718:	add	x8, x8, #0x0
    671c:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6720:	mov	x0, xzr
    6724:	mov	x1, xzr
    6728:	bl	0 <_ZN4llvm11RecordRecTy3getENS_8ArrayRefIPNS_6RecordEEE>
    672c:	mov	x21, x0
    6730:	mov	w22, #0x5                   	// #5
    6734:	ldr	w0, [x19, #40]
    6738:	cmp	w0, #0x8
    673c:	b.ne	5bc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2c8>  // b.any
    6740:	ldp	x8, x9, [x19, #8]
    6744:	mov	x0, x19
    6748:	cmp	x8, x9
    674c:	cset	w1, eq  // eq = none
    6750:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6754:	str	w0, [x19, #40]
    6758:	mov	x0, x19
    675c:	mov	x1, x20
    6760:	mov	x2, xzr
    6764:	mov	w3, wzr
    6768:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    676c:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6770:	mov	x23, x0
    6774:	cmp	w22, #0x4
    6778:	b.hi	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>  // b.pmore
    677c:	mov	w8, #0x1                   	// #1
    6780:	lsl	w8, w8, w22
    6784:	mov	w9, #0x16                  	// #22
    6788:	tst	w8, w9
    678c:	b.eq	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>  // b.none
    6790:	ldrb	w10, [x23, #8]
    6794:	cmp	w10, #0x9
    6798:	sub	w11, w10, #0x1
    679c:	csel	x8, x23, xzr, eq  // eq = none
    67a0:	cmp	w11, #0x17
    67a4:	csel	x9, x23, xzr, cc  // cc = lo, ul, last
    67a8:	b.cs	6808 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf08>  // b.hs, b.nlast
    67ac:	ldr	x12, [x9, #16]
    67b0:	cbz	x12, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    67b4:	ldr	w12, [x12, #8]
    67b8:	and	w12, w12, #0xfffffffe
    67bc:	cmp	w12, #0x4
    67c0:	b.ne	6808 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xf08>  // b.any
    67c4:	sub	w12, w22, #0x1
    67c8:	and	w12, w12, #0xff
    67cc:	cmp	w12, #0x2
    67d0:	b.cs	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>  // b.hs, b.nlast
    67d4:	cmp	w10, #0x9
    67d8:	b.ne	6de8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x14e8>  // b.any
    67dc:	ldr	w9, [x8, #32]
    67e0:	cbz	w9, 7090 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1790>
    67e4:	ldr	x8, [x8, #40]
    67e8:	cbz	x8, 8184 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2884>
    67ec:	ldrb	w9, [x8, #8]
    67f0:	sub	w9, w9, #0x1
    67f4:	cmp	w9, #0x16
    67f8:	b.ls	709c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x179c>  // b.plast
    67fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6800:	add	x8, x8, #0x0
    6804:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6808:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    680c:	add	x8, x8, #0x0
    6810:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6814:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6818:	add	x8, x8, #0x0
    681c:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6820:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6824:	add	x8, x8, #0x0
    6828:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    682c:	ldr	x8, [sp, #128]
    6830:	ldr	q0, [sp, #112]
    6834:	add	x21, sp, #0xa0
    6838:	and	w19, w8, #0xff
    683c:	str	q0, [x21]
    6840:	str	x8, [sp, #176]
    6844:	b	68b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfb0>
    6848:	ldrb	w8, [sp, #153]
    684c:	ldr	x9, [sp, #136]
    6850:	mov	w10, #0x2                   	// #2
    6854:	add	x11, sp, #0x88
    6858:	cmp	w8, #0x1
    685c:	csel	w10, w19, w10, eq  // eq = none
    6860:	sub	x12, x29, #0xb0
    6864:	mov	w13, #0x4                   	// #4
    6868:	csel	x8, x9, x11, eq  // eq = none
    686c:	cmp	w10, #0x2
    6870:	stp	x8, x12, [sp, #160]
    6874:	strb	w10, [sp, #176]
    6878:	strb	w13, [sp, #177]
    687c:	b.ne	68b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfb0>  // b.any
    6880:	ldrb	w9, [x8, #16]
    6884:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6888:	ldrb	w8, [x8, #17]
    688c:	cmp	w8, #0x1
    6890:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6894:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6898:	add	x8, x8, #0x0
    689c:	mov	w9, #0x103                 	// #259
    68a0:	mov	w19, #0x2                   	// #2
    68a4:	stp	x8, xzr, [sp, #88]
    68a8:	strh	w9, [sp, #104]
    68ac:	b	68e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfe4>
    68b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    68b4:	add	x8, x8, #0x0
    68b8:	mov	w9, #0x103                 	// #259
    68bc:	cmp	w19, #0x1
    68c0:	stp	x8, xzr, [sp, #88]
    68c4:	strh	w9, [sp, #104]
    68c8:	b.eq	6954 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1054>  // b.none
    68cc:	cbnz	w19, 68e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xfe4>
    68d0:	mov	w8, #0x100                 	// #256
    68d4:	mov	w19, wzr
    68d8:	stp	xzr, xzr, [x29, #-112]
    68dc:	sturh	w8, [x29, #-96]
    68e0:	b	6968 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1068>
    68e4:	ldrb	w8, [sp, #177]
    68e8:	ldr	x9, [sp, #160]
    68ec:	mov	w10, #0x2                   	// #2
    68f0:	add	x11, sp, #0xa0
    68f4:	cmp	w8, #0x1
    68f8:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    68fc:	csel	w10, w19, w10, eq  // eq = none
    6900:	add	x12, x12, #0x0
    6904:	mov	w13, #0x3                   	// #3
    6908:	csel	x8, x9, x11, eq  // eq = none
    690c:	cmp	w10, #0x2
    6910:	stp	x8, x12, [x29, #-112]
    6914:	sturb	w10, [x29, #-96]
    6918:	sturb	w13, [x29, #-95]
    691c:	b.ne	6968 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1068>  // b.any
    6920:	ldrb	w9, [x8, #16]
    6924:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6928:	ldrb	w8, [x8, #17]
    692c:	cmp	w8, #0x1
    6930:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6934:	mov	w19, #0x2                   	// #2
    6938:	b	6968 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1068>
    693c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6940:	add	x8, x8, #0x0
    6944:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6948:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    694c:	add	x8, x8, #0x0
    6950:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6954:	ldr	x8, [sp, #104]
    6958:	ldur	q0, [sp, #88]
    695c:	and	w19, w8, #0xff
    6960:	str	q0, [x21, #96]
    6964:	stur	x8, [x29, #-96]
    6968:	ldr	x8, [x26]
    696c:	mov	x0, x26
    6970:	add	x20, sp, #0x20
    6974:	ldr	x9, [x8, #16]
    6978:	add	x8, sp, #0x20
    697c:	blr	x9
    6980:	mov	w8, #0x104                 	// #260
    6984:	cmp	w19, #0x1
    6988:	strh	w8, [sp, #80]
    698c:	stp	x20, xzr, [sp, #64]
    6990:	b.eq	69bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10bc>  // b.none
    6994:	cbnz	w19, 69d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x10d4>
    6998:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    699c:	mov	w8, #0x100                 	// #256
    69a0:	add	x9, x9, #0x0
    69a4:	mov	w10, #0x103                 	// #259
    69a8:	stp	xzr, xzr, [x29, #-80]
    69ac:	sturh	w8, [x29, #-64]
    69b0:	stp	x9, xzr, [sp, #8]
    69b4:	strh	w10, [sp, #24]
    69b8:	b	6a5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x115c>
    69bc:	ldr	x8, [sp, #80]
    69c0:	ldr	q0, [sp, #64]
    69c4:	and	w19, w8, #0xff
    69c8:	str	q0, [x21, #128]
    69cc:	stur	x8, [x29, #-64]
    69d0:	b	6a3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x113c>
    69d4:	ldurb	w8, [x29, #-95]
    69d8:	ldur	x9, [x29, #-112]
    69dc:	mov	w10, #0x2                   	// #2
    69e0:	sub	x11, x29, #0x70
    69e4:	cmp	w8, #0x1
    69e8:	csel	w10, w19, w10, eq  // eq = none
    69ec:	add	x12, sp, #0x20
    69f0:	mov	w13, #0x4                   	// #4
    69f4:	csel	x8, x9, x11, eq  // eq = none
    69f8:	cmp	w10, #0x2
    69fc:	stp	x8, x12, [x29, #-80]
    6a00:	sturb	w10, [x29, #-64]
    6a04:	sturb	w13, [x29, #-63]
    6a08:	b.ne	6a3c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x113c>  // b.any
    6a0c:	ldrb	w9, [x8, #16]
    6a10:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6a14:	ldrb	w8, [x8, #17]
    6a18:	cmp	w8, #0x1
    6a1c:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6a20:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a24:	add	x8, x8, #0x0
    6a28:	mov	w9, #0x103                 	// #259
    6a2c:	mov	w19, #0x2                   	// #2
    6a30:	stp	x8, xzr, [sp, #8]
    6a34:	strh	w9, [sp, #24]
    6a38:	b	6a6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x116c>
    6a3c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a40:	add	x8, x8, #0x0
    6a44:	mov	w9, #0x103                 	// #259
    6a48:	cmp	w19, #0x1
    6a4c:	stp	x8, xzr, [sp, #8]
    6a50:	strh	w9, [sp, #24]
    6a54:	b.eq	6ac0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11c0>  // b.none
    6a58:	cbnz	w19, 6a6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x116c>
    6a5c:	mov	w8, #0x100                 	// #256
    6a60:	stp	xzr, xzr, [x29, #-48]
    6a64:	sturh	w8, [x29, #-32]
    6a68:	b	6ad0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11d0>
    6a6c:	ldurb	w8, [x29, #-63]
    6a70:	ldur	x9, [x29, #-80]
    6a74:	mov	w10, #0x2                   	// #2
    6a78:	sub	x11, x29, #0x50
    6a7c:	cmp	w8, #0x1
    6a80:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6a84:	csel	w10, w19, w10, eq  // eq = none
    6a88:	add	x12, x12, #0x0
    6a8c:	mov	w13, #0x3                   	// #3
    6a90:	csel	x8, x9, x11, eq  // eq = none
    6a94:	cmp	w10, #0x2
    6a98:	stp	x8, x12, [x29, #-48]
    6a9c:	sturb	w10, [x29, #-32]
    6aa0:	sturb	w13, [x29, #-31]
    6aa4:	b.ne	6ad0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11d0>  // b.any
    6aa8:	ldrb	w9, [x8, #16]
    6aac:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6ab0:	ldrb	w8, [x8, #17]
    6ab4:	cmp	w8, #0x1
    6ab8:	b.ne	6ad0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11d0>  // b.any
    6abc:	b	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6ac0:	ldur	q0, [sp, #8]
    6ac4:	ldr	x8, [sp, #24]
    6ac8:	str	q0, [x21, #160]
    6acc:	stur	x8, [x29, #-32]
    6ad0:	sub	x0, x29, #0x18
    6ad4:	sub	x2, x29, #0x30
    6ad8:	mov	w1, #0x1                   	// #1
    6adc:	stur	x23, [x29, #-24]
    6ae0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6ae4:	ldr	x0, [sp, #32]
    6ae8:	add	x8, sp, #0x20
    6aec:	add	x8, x8, #0x10
    6af0:	cmp	x0, x8
    6af4:	b.eq	6d30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1430>  // b.none
    6af8:	bl	0 <_ZdlPv>
    6afc:	b	6d30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1430>
    6b00:	ldr	x8, [x26]
    6b04:	mov	x0, x26
    6b08:	sub	x19, x29, #0xb0
    6b0c:	ldr	x9, [x8, #16]
    6b10:	sub	x8, x29, #0xb0
    6b14:	blr	x9
    6b18:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b1c:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b20:	add	x8, x8, #0x0
    6b24:	b	6cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13ec>
    6b28:	ldr	x8, [x26]
    6b2c:	mov	x0, x26
    6b30:	sub	x19, x29, #0xb0
    6b34:	ldr	x9, [x8, #16]
    6b38:	sub	x8, x29, #0xb0
    6b3c:	blr	x9
    6b40:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b44:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6b48:	add	x8, x8, #0x0
    6b4c:	b	6cec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x13ec>
    6b50:	cmp	w24, #0x8
    6b54:	b.ne	6b88 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1288>  // b.any
    6b58:	ldur	w8, [x29, #-136]
    6b5c:	cbz	w8, 81a4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x28a4>
    6b60:	ldur	x8, [x29, #-144]
    6b64:	ldr	x8, [x8]
    6b68:	cbz	x8, 8184 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2884>
    6b6c:	ldrb	w9, [x8, #8]
    6b70:	sub	w9, w9, #0x1
    6b74:	cmp	w9, #0x17
    6b78:	b.cs	80bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x27bc>  // b.hs, b.nlast
    6b7c:	ldr	x0, [x8, #16]
    6b80:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    6b84:	mov	x22, x0
    6b88:	ldur	w8, [x29, #-136]
    6b8c:	cmp	w8, #0x2
    6b90:	b.ne	6bb8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x12b8>  // b.any
    6b94:	ldur	x8, [x29, #-144]
    6b98:	mov	w0, w24
    6b9c:	mov	x3, x22
    6ba0:	ldp	x1, x2, [x8]
    6ba4:	bl	0 <_ZN4llvm9BinOpInit3getENS0_8BinaryOpEPNS_4InitES3_PNS_5RecTyE>
    6ba8:	mov	x1, x20
    6bac:	bl	0 <_ZNK4llvm9BinOpInit4FoldEPNS_6RecordE>
    6bb0:	mov	x19, x0
    6bb4:	b	6d4c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x144c>
    6bb8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6bbc:	add	x8, x8, #0x0
    6bc0:	mov	w9, #0x103                 	// #259
    6bc4:	stp	x8, xzr, [x29, #-176]
    6bc8:	sturh	w9, [x29, #-160]
    6bcc:	str	x23, [sp, #32]
    6bd0:	add	x0, sp, #0x20
    6bd4:	sub	x2, x29, #0xb0
    6bd8:	mov	w1, #0x1                   	// #1
    6bdc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6be0:	b	6d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1448>
    6be4:	ldr	w8, [x19, #40]
    6be8:	cmp	w8, #0xe
    6bec:	b.ne	7b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x220c>  // b.any
    6bf0:	ldp	x8, x9, [x19, #8]
    6bf4:	mov	x0, x19
    6bf8:	cmp	x8, x9
    6bfc:	cset	w1, eq  // eq = none
    6c00:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6c04:	str	w0, [x19, #40]
    6c08:	mov	x0, x19
    6c0c:	mov	x1, x20
    6c10:	mov	x2, xzr
    6c14:	mov	w3, wzr
    6c18:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6c1c:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6c20:	ldrb	w8, [x0, #8]
    6c24:	mov	x23, x0
    6c28:	sub	w8, w8, #0x1
    6c2c:	cmp	w8, #0x17
    6c30:	b.cc	7108 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1808>  // b.lo, b.ul, b.last
    6c34:	ldr	x8, [x23]
    6c38:	mov	x0, x23
    6c3c:	sub	x20, x29, #0x90
    6c40:	ldr	x9, [x8, #40]
    6c44:	sub	x8, x29, #0x90
    6c48:	blr	x9
    6c4c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6c50:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6c54:	add	x8, x8, #0x0
    6c58:	b	6598 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xc98>
    6c5c:	ldr	x8, [x22]
    6c60:	mov	x0, x22
    6c64:	sub	x19, x29, #0xb0
    6c68:	ldr	x9, [x8, #16]
    6c6c:	sub	x8, x29, #0xb0
    6c70:	blr	x9
    6c74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6c78:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6c7c:	add	x8, x8, #0x0
    6c80:	mov	w9, #0x403                 	// #1027
    6c84:	sub	x10, x29, #0x30
    6c88:	add	x11, x11, #0x0
    6c8c:	mov	w12, #0x302                 	// #770
    6c90:	stp	x8, x19, [x29, #-48]
    6c94:	sturh	w9, [x29, #-32]
    6c98:	stp	x10, x11, [sp, #32]
    6c9c:	strh	w12, [sp, #48]
    6ca0:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6ca4:	ldurb	w8, [x29, #-31]
    6ca8:	cmp	w8, #0x1
    6cac:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6cb0:	ldr	x8, [sp]
    6cb4:	sub	x0, x29, #0x50
    6cb8:	add	x2, sp, #0x20
    6cbc:	mov	w1, #0x1                   	// #1
    6cc0:	stur	x8, [x29, #-80]
    6cc4:	b	6d2c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x142c>
    6cc8:	ldr	x8, [x26]
    6ccc:	mov	x0, x26
    6cd0:	sub	x19, x29, #0xb0
    6cd4:	ldr	x9, [x8, #16]
    6cd8:	sub	x8, x29, #0xb0
    6cdc:	blr	x9
    6ce0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6ce4:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6ce8:	add	x8, x8, #0x0
    6cec:	mov	w9, #0x403                 	// #1027
    6cf0:	sub	x10, x29, #0x30
    6cf4:	add	x11, x11, #0x0
    6cf8:	mov	w12, #0x302                 	// #770
    6cfc:	stp	x8, x19, [x29, #-48]
    6d00:	sturh	w9, [x29, #-32]
    6d04:	stp	x10, x11, [sp, #32]
    6d08:	strh	w12, [sp, #48]
    6d0c:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6d10:	ldurb	w8, [x29, #-31]
    6d14:	cmp	w8, #0x1
    6d18:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6d1c:	sub	x0, x29, #0x50
    6d20:	add	x2, sp, #0x20
    6d24:	mov	w1, #0x1                   	// #1
    6d28:	stur	x23, [x29, #-80]
    6d2c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6d30:	ldur	x0, [x29, #-176]
    6d34:	sub	x8, x29, #0xb0
    6d38:	add	x8, x8, #0x10
    6d3c:	cmp	x0, x8
    6d40:	b.eq	6d48 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1448>  // b.none
    6d44:	bl	0 <_ZdlPv>
    6d48:	mov	x19, xzr
    6d4c:	ldur	x0, [x29, #-144]
    6d50:	sub	x8, x29, #0x90
    6d54:	add	x8, x8, #0x10
    6d58:	cmp	x0, x8
    6d5c:	b.eq	6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>  // b.none
    6d60:	bl	0 <free>
    6d64:	b	6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>
    6d68:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6d6c:	add	x8, x8, #0x0
    6d70:	mov	w9, #0x103                 	// #259
    6d74:	stp	x8, xzr, [sp, #136]
    6d78:	strh	w9, [sp, #152]
    6d7c:	ldr	x8, [x26]
    6d80:	mov	x0, x26
    6d84:	sub	x19, x29, #0xb0
    6d88:	ldr	x9, [x8, #16]
    6d8c:	sub	x8, x29, #0xb0
    6d90:	blr	x9
    6d94:	ldrb	w8, [sp, #152]
    6d98:	ldr	x21, [sp]
    6d9c:	mov	w9, #0x104                 	// #260
    6da0:	add	x20, sp, #0xa0
    6da4:	cmp	w8, #0x1
    6da8:	strh	w9, [sp, #128]
    6dac:	stp	x19, xzr, [sp, #112]
    6db0:	b.eq	6f8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x168c>  // b.none
    6db4:	cbnz	w8, 6fa4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x16a4>
    6db8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6dbc:	mov	w8, #0x100                 	// #256
    6dc0:	add	x9, x9, #0x0
    6dc4:	mov	w10, #0x103                 	// #259
    6dc8:	stp	xzr, xzr, [sp, #160]
    6dcc:	strh	w8, [sp, #176]
    6dd0:	stp	x9, xzr, [sp, #88]
    6dd4:	strh	w10, [sp, #104]
    6dd8:	b	702c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x172c>
    6ddc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6de0:	add	x8, x8, #0x0
    6de4:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6de8:	and	w8, w11, #0xff
    6dec:	cmp	w8, #0x17
    6df0:	b.cs	81e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x28e4>  // b.hs, b.nlast
    6df4:	ldr	x21, [x9, #16]
    6df8:	cbz	x21, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    6dfc:	ldr	w8, [x21, #8]
    6e00:	cmp	w8, #0x5
    6e04:	b.ne	6f80 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1680>  // b.any
    6e08:	cmp	w22, #0x1
    6e0c:	b.ne	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>  // b.any
    6e10:	ldr	x21, [x21, #24]
    6e14:	b	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>
    6e18:	cbz	x10, 6ed4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15d4>
    6e1c:	ldr	x8, [x21]
    6e20:	mov	x0, x21
    6e24:	sub	x20, x29, #0xb0
    6e28:	ldr	x9, [x8, #40]
    6e2c:	sub	x8, x29, #0xb0
    6e30:	blr	x9
    6e34:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6e38:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6e3c:	add	x8, x8, #0x0
    6e40:	mov	w9, #0x403                 	// #1027
    6e44:	sub	x10, x29, #0x50
    6e48:	add	x11, x11, #0x0
    6e4c:	mov	w12, #0x302                 	// #770
    6e50:	stp	x8, x20, [x29, #-80]
    6e54:	sturh	w9, [x29, #-64]
    6e58:	stp	x10, x11, [x29, #-48]
    6e5c:	sturh	w12, [x29, #-32]
    6e60:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6e64:	ldurb	w8, [x29, #-63]
    6e68:	cmp	w8, #0x1
    6e6c:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6e70:	sub	x8, x29, #0x90
    6e74:	sub	x0, x29, #0x30
    6e78:	sub	x20, x29, #0x90
    6e7c:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    6e80:	mov	w8, #0x104                 	// #260
    6e84:	mov	x0, x19
    6e88:	strh	w8, [sp, #48]
    6e8c:	stp	x20, xzr, [sp, #32]
    6e90:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    6e94:	stur	x0, [x29, #-112]
    6e98:	sub	x0, x29, #0x70
    6e9c:	add	x2, sp, #0x20
    6ea0:	mov	w1, #0x1                   	// #1
    6ea4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    6ea8:	ldur	x0, [x29, #-144]
    6eac:	add	x8, x20, #0x10
    6eb0:	cmp	x0, x8
    6eb4:	b.eq	6ebc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x15bc>  // b.none
    6eb8:	bl	0 <_ZdlPv>
    6ebc:	ldur	x0, [x29, #-176]
    6ec0:	sub	x8, x29, #0xb0
    6ec4:	add	x8, x8, #0x10
    6ec8:	cmp	x0, x8
    6ecc:	b.ne	6390 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa90>  // b.any
    6ed0:	b	624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6ed4:	ldp	x8, x9, [x19, #8]
    6ed8:	mov	x0, x19
    6edc:	cmp	x8, x9
    6ee0:	cset	w1, eq  // eq = none
    6ee4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6ee8:	cmp	w0, #0xe
    6eec:	str	w0, [x19, #40]
    6ef0:	b.ne	6f68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1668>  // b.any
    6ef4:	ldp	x8, x9, [x19, #8]
    6ef8:	mov	x0, x19
    6efc:	cmp	x8, x9
    6f00:	cset	w1, eq  // eq = none
    6f04:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6f08:	str	w0, [x19, #40]
    6f0c:	mov	x0, x19
    6f10:	mov	x1, x20
    6f14:	mov	x2, xzr
    6f18:	mov	w3, wzr
    6f1c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    6f20:	cbz	x0, 624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    6f24:	ldr	w8, [x19, #40]
    6f28:	cmp	w8, #0xe
    6f2c:	b.ne	6f68 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1668>  // b.any
    6f30:	ldp	x8, x9, [x19, #8]
    6f34:	mov	x23, x0
    6f38:	mov	x0, x19
    6f3c:	cmp	x8, x9
    6f40:	cset	w1, eq  // eq = none
    6f44:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    6f48:	str	w0, [x19, #40]
    6f4c:	ldrb	w8, [x23, #8]
    6f50:	sub	w8, w8, #0x1
    6f54:	cmp	w8, #0x17
    6f58:	b.cc	7190 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1890>  // b.lo, b.ul, b.last
    6f5c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f60:	add	x8, x8, #0x0
    6f64:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6f68:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f6c:	add	x8, x8, #0x0
    6f70:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6f74:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f78:	add	x8, x8, #0x0
    6f7c:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6f80:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6f84:	add	x8, x8, #0x0
    6f88:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    6f8c:	ldr	x8, [sp, #128]
    6f90:	ldr	q0, [sp, #112]
    6f94:	str	x8, [sp, #176]
    6f98:	and	w8, w8, #0xff
    6f9c:	str	q0, [x20]
    6fa0:	b	700c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x170c>
    6fa4:	ldrb	w9, [sp, #153]
    6fa8:	ldr	x10, [sp, #136]
    6fac:	mov	w11, #0x2                   	// #2
    6fb0:	add	x12, sp, #0x88
    6fb4:	cmp	w9, #0x1
    6fb8:	csel	w11, w8, w11, eq  // eq = none
    6fbc:	sub	x13, x29, #0xb0
    6fc0:	mov	w14, #0x4                   	// #4
    6fc4:	csel	x9, x10, x12, eq  // eq = none
    6fc8:	cmp	w11, #0x2
    6fcc:	stp	x9, x13, [sp, #160]
    6fd0:	strb	w11, [sp, #176]
    6fd4:	strb	w14, [sp, #177]
    6fd8:	b.ne	700c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x170c>  // b.any
    6fdc:	ldrb	w8, [x9, #16]
    6fe0:	cbz	w8, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    6fe4:	ldrb	w8, [x9, #17]
    6fe8:	cmp	w8, #0x1
    6fec:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    6ff0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    6ff4:	add	x8, x8, #0x0
    6ff8:	mov	w9, #0x103                 	// #259
    6ffc:	stp	x8, xzr, [sp, #88]
    7000:	mov	w8, #0x2                   	// #2
    7004:	strh	w9, [sp, #104]
    7008:	b	703c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x173c>
    700c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7010:	add	x9, x9, #0x0
    7014:	mov	w10, #0x103                 	// #259
    7018:	cmp	w8, #0x1
    701c:	stp	x9, xzr, [sp, #88]
    7020:	strh	w10, [sp, #104]
    7024:	b.eq	71d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18d0>  // b.none
    7028:	cbnz	w8, 703c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x173c>
    702c:	mov	w8, #0x100                 	// #256
    7030:	stp	xzr, xzr, [x29, #-112]
    7034:	sturh	w8, [x29, #-96]
    7038:	b	71e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e0>
    703c:	ldrb	w9, [sp, #177]
    7040:	ldr	x10, [sp, #160]
    7044:	mov	w11, #0x2                   	// #2
    7048:	add	x12, sp, #0xa0
    704c:	cmp	w9, #0x1
    7050:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7054:	csel	w9, w8, w11, eq  // eq = none
    7058:	add	x13, x13, #0x0
    705c:	mov	w14, #0x3                   	// #3
    7060:	csel	x8, x10, x12, eq  // eq = none
    7064:	cmp	w9, #0x2
    7068:	stp	x8, x13, [x29, #-112]
    706c:	sturb	w9, [x29, #-96]
    7070:	sturb	w14, [x29, #-95]
    7074:	b.ne	71e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e0>  // b.any
    7078:	ldrb	w9, [x8, #16]
    707c:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7080:	ldrb	w8, [x8, #17]
    7084:	cmp	w8, #0x1
    7088:	b.ne	71e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x18e0>  // b.any
    708c:	b	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7090:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7094:	add	x8, x8, #0x0
    7098:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    709c:	ldr	x21, [x8, #16]
    70a0:	cmp	w22, #0x1
    70a4:	b.eq	70b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17b4>  // b.none
    70a8:	mov	x0, x21
    70ac:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    70b0:	mov	x21, x0
    70b4:	ldr	w8, [x19, #40]
    70b8:	cmp	w8, #0x9
    70bc:	b.ne	70fc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x17fc>  // b.any
    70c0:	ldp	x8, x9, [x19, #8]
    70c4:	mov	x0, x19
    70c8:	cmp	x8, x9
    70cc:	cset	w1, eq  // eq = none
    70d0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    70d4:	str	w0, [x19, #40]
    70d8:	mov	w0, w22
    70dc:	mov	x1, x23
    70e0:	mov	x2, x21
    70e4:	bl	0 <_ZN4llvm8UnOpInit3getENS0_7UnaryOpEPNS_4InitEPNS_5RecTyE>
    70e8:	mov	x1, x20
    70ec:	mov	w2, wzr
    70f0:	bl	0 <_ZNK4llvm8UnOpInit4FoldEPNS_6RecordEb>
    70f4:	mov	x19, x0
    70f8:	b	6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>
    70fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7100:	add	x8, x8, #0x0
    7104:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    7108:	ldr	x26, [x23, #16]
    710c:	cbz	x26, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    7110:	ldr	w8, [x26, #8]
    7114:	cmp	w8, #0x5
    7118:	b.ne	73bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1abc>  // b.any
    711c:	ldr	w8, [x19, #40]
    7120:	cmp	w8, #0xe
    7124:	b.ne	7b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x220c>  // b.any
    7128:	ldp	x8, x9, [x19, #8]
    712c:	mov	x0, x19
    7130:	add	x28, sp, #0xa0
    7134:	cmp	x8, x9
    7138:	cset	w1, eq  // eq = none
    713c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7140:	cmp	w0, #0x48
    7144:	str	w0, [x19, #40]
    7148:	b.ne	75fc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cfc>  // b.any
    714c:	ldp	x0, x1, [x19, #48]
    7150:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7154:	mov	x24, x0
    7158:	cbz	x20, 7a08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2108>
    715c:	ldr	w8, [x20, #80]
    7160:	cbz	w8, 7a08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2108>
    7164:	ldr	x10, [x20, #72]
    7168:	add	x8, x8, x8, lsl #1
    716c:	lsl	x8, x8, #3
    7170:	mov	x9, x10
    7174:	ldr	x11, [x9], #24
    7178:	cmp	x11, x24
    717c:	b.eq	79dc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20dc>  // b.none
    7180:	subs	x8, x8, #0x18
    7184:	mov	x10, x9
    7188:	b.ne	7174 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1874>  // b.any
    718c:	b	7a08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2108>
    7190:	ldr	x24, [x23, #16]
    7194:	add	x28, sp, #0xa0
    7198:	cbz	x24, 812c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x282c>
    719c:	ldr	w8, [x24, #8]
    71a0:	cmp	w8, #0x6
    71a4:	b.eq	74d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bd0>  // b.none
    71a8:	cmp	w8, #0x5
    71ac:	b.ne	74ec <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bec>  // b.any
    71b0:	ldr	x24, [x24, #24]
    71b4:	cbz	x22, 7700 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e00>
    71b8:	ldr	w8, [x22, #8]
    71bc:	cmp	w8, #0x5
    71c0:	b.ne	78b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fb0>  // b.any
    71c4:	ldr	x25, [x22, #24]
    71c8:	mov	w27, wzr
    71cc:	b	7708 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e08>
    71d0:	ldur	q0, [sp, #88]
    71d4:	ldr	x8, [sp, #104]
    71d8:	str	q0, [x20, #96]
    71dc:	stur	x8, [x29, #-96]
    71e0:	ldr	w8, [x22, #8]
    71e4:	cmp	w8, #0x5
    71e8:	b.ne	81c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x28c4>  // b.any
    71ec:	ldr	x0, [x22, #24]
    71f0:	add	x19, sp, #0x20
    71f4:	ldr	x8, [x0]
    71f8:	ldr	x9, [x8, #16]
    71fc:	add	x8, sp, #0x20
    7200:	blr	x9
    7204:	ldurb	w8, [x29, #-96]
    7208:	mov	w9, #0x104                 	// #260
    720c:	strh	w9, [sp, #80]
    7210:	stp	x19, xzr, [sp, #64]
    7214:	cmp	w8, #0x1
    7218:	b.eq	7244 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1944>  // b.none
    721c:	cbnz	w8, 725c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x195c>
    7220:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7224:	mov	w8, #0x100                 	// #256
    7228:	add	x9, x9, #0x0
    722c:	mov	w10, #0x103                 	// #259
    7230:	stp	xzr, xzr, [x29, #-80]
    7234:	sturh	w8, [x29, #-64]
    7238:	stp	x9, xzr, [sp, #8]
    723c:	strh	w10, [sp, #24]
    7240:	b	72e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19e4>
    7244:	ldr	x8, [sp, #80]
    7248:	ldr	q0, [sp, #64]
    724c:	stur	x8, [x29, #-64]
    7250:	and	w8, w8, #0xff
    7254:	str	q0, [x20, #128]
    7258:	b	72c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19c4>
    725c:	ldurb	w9, [x29, #-95]
    7260:	ldur	x10, [x29, #-112]
    7264:	mov	w11, #0x2                   	// #2
    7268:	sub	x12, x29, #0x70
    726c:	cmp	w9, #0x1
    7270:	csel	w11, w8, w11, eq  // eq = none
    7274:	add	x13, sp, #0x20
    7278:	mov	w14, #0x4                   	// #4
    727c:	csel	x9, x10, x12, eq  // eq = none
    7280:	cmp	w11, #0x2
    7284:	stp	x9, x13, [x29, #-80]
    7288:	sturb	w11, [x29, #-64]
    728c:	sturb	w14, [x29, #-63]
    7290:	b.ne	72c4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19c4>  // b.any
    7294:	ldrb	w8, [x9, #16]
    7298:	cbz	w8, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    729c:	ldrb	w8, [x9, #17]
    72a0:	cmp	w8, #0x1
    72a4:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    72a8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    72ac:	add	x8, x8, #0x0
    72b0:	mov	w9, #0x103                 	// #259
    72b4:	stp	x8, xzr, [sp, #8]
    72b8:	mov	w8, #0x2                   	// #2
    72bc:	strh	w9, [sp, #24]
    72c0:	b	72f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19f4>
    72c4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    72c8:	add	x9, x9, #0x0
    72cc:	mov	w10, #0x103                 	// #259
    72d0:	cmp	w8, #0x1
    72d4:	stp	x9, xzr, [sp, #8]
    72d8:	strh	w10, [sp, #24]
    72dc:	b.eq	7364 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a64>  // b.none
    72e0:	cbnz	w8, 72f4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x19f4>
    72e4:	mov	w8, #0x100                 	// #256
    72e8:	stp	xzr, xzr, [x29, #-48]
    72ec:	sturh	w8, [x29, #-32]
    72f0:	b	7374 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a74>
    72f4:	ldurb	w9, [x29, #-63]
    72f8:	ldur	x10, [x29, #-80]
    72fc:	mov	w11, #0x2                   	// #2
    7300:	sub	x12, x29, #0x50
    7304:	cmp	w9, #0x1
    7308:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    730c:	csel	w9, w8, w11, eq  // eq = none
    7310:	add	x13, x13, #0x0
    7314:	mov	w14, #0x3                   	// #3
    7318:	csel	x8, x10, x12, eq  // eq = none
    731c:	cmp	w9, #0x2
    7320:	stp	x8, x13, [x29, #-48]
    7324:	sturb	w9, [x29, #-32]
    7328:	sturb	w14, [x29, #-31]
    732c:	b.ne	7374 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a74>  // b.any
    7330:	ldrb	w9, [x8, #16]
    7334:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7338:	ldrb	w8, [x8, #17]
    733c:	cmp	w8, #0x1
    7340:	b.ne	7374 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a74>  // b.any
    7344:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7348:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    734c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7350:	add	x0, x0, #0x0
    7354:	add	x1, x1, #0x0
    7358:	add	x3, x3, #0x0
    735c:	mov	w2, #0xb8                  	// #184
    7360:	bl	0 <__assert_fail>
    7364:	ldur	q0, [sp, #8]
    7368:	ldr	x8, [sp, #24]
    736c:	str	q0, [x20, #160]
    7370:	stur	x8, [x29, #-32]
    7374:	sub	x0, x29, #0x18
    7378:	sub	x2, x29, #0x30
    737c:	mov	w1, #0x1                   	// #1
    7380:	stur	x21, [x29, #-24]
    7384:	b	6ae0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x11e0>
    7388:	ldrb	w8, [x24, #8]
    738c:	sub	w9, w8, #0x1
    7390:	cmp	w9, #0x16
    7394:	b.ls	74b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bb0>  // b.plast
    7398:	mov	x0, xzr
    739c:	b	7538 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c38>
    73a0:	ldrb	w8, [x22, #8]
    73a4:	sub	w8, w8, #0x1
    73a8:	cmp	w8, #0x16
    73ac:	b.ls	74c8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bc8>  // b.plast
    73b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    73b4:	add	x8, x8, #0x0
    73b8:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    73bc:	ldr	x8, [x26]
    73c0:	mov	x0, x26
    73c4:	sub	x20, x29, #0x90
    73c8:	ldr	x9, [x8, #16]
    73cc:	sub	x8, x29, #0x90
    73d0:	blr	x9
    73d4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    73d8:	add	x8, x8, #0x0
    73dc:	mov	w9, #0x403                 	// #1027
    73e0:	mov	x0, x19
    73e4:	stp	x8, x20, [x29, #-176]
    73e8:	sturh	w9, [x29, #-160]
    73ec:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    73f0:	str	x0, [sp, #32]
    73f4:	add	x0, sp, #0x20
    73f8:	sub	x2, x29, #0xb0
    73fc:	mov	w1, #0x1                   	// #1
    7400:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7404:	ldur	x0, [x29, #-144]
    7408:	add	x8, x20, #0x10
    740c:	cmp	x0, x8
    7410:	b.ne	6390 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa90>  // b.any
    7414:	b	624c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x94c>
    7418:	cmp	w9, #0x18
    741c:	b.ne	74f8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1bf8>  // b.any
    7420:	ldrb	w9, [x22, #8]
    7424:	sub	w10, w9, #0x1
    7428:	cmp	w10, #0x17
    742c:	b.cs	7514 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c14>  // b.hs, b.nlast
    7430:	adrp	x0, 0 <_ZN4llvm11StringRecTy6SharedE>
    7434:	ldr	x0, [x0]
    7438:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    743c:	ldr	x9, [x22, #16]
    7440:	cmp	x0, x9
    7444:	b.eq	75b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cb4>  // b.none
    7448:	ldr	x8, [x9]
    744c:	mov	x0, x9
    7450:	sub	x19, x29, #0x90
    7454:	ldr	x10, [x8, #16]
    7458:	sub	x8, x29, #0x90
    745c:	blr	x10
    7460:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7464:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7468:	add	x8, x8, #0x0
    746c:	mov	w9, #0x403                 	// #1027
    7470:	add	x10, sp, #0x20
    7474:	add	x11, x11, #0x0
    7478:	mov	w12, #0x302                 	// #770
    747c:	stp	x8, x19, [sp, #32]
    7480:	strh	w9, [sp, #48]
    7484:	stp	x10, x11, [x29, #-176]
    7488:	sturh	w12, [x29, #-160]
    748c:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7490:	ldrb	w8, [sp, #49]
    7494:	cmp	w8, #0x1
    7498:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    749c:	sub	x0, x29, #0x30
    74a0:	sub	x2, x29, #0xb0
    74a4:	mov	w1, #0x1                   	// #1
    74a8:	stur	x27, [x29, #-48]
    74ac:	b	65e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    74b0:	cmp	w8, #0x3
    74b4:	b.ne	7534 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c34>  // b.any
    74b8:	ldr	w0, [x24, #32]
    74bc:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    74c0:	ldrb	w8, [x24, #8]
    74c4:	b	7538 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c38>
    74c8:	ldr	x25, [x22, #16]
    74cc:	b	75b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cb4>
    74d0:	cbz	x22, 74e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1be0>
    74d4:	ldr	w8, [x22, #8]
    74d8:	cmp	w8, #0x6
    74dc:	b.ne	78e4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1fe4>  // b.any
    74e0:	mov	x25, xzr
    74e4:	mov	w27, #0x1                   	// #1
    74e8:	b	7708 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e08>
    74ec:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    74f0:	add	x8, x8, #0x0
    74f4:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    74f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    74fc:	add	x8, x8, #0x0
    7500:	mov	w9, #0x103                 	// #259
    7504:	stp	x8, xzr, [x29, #-144]
    7508:	sturh	w9, [x29, #-128]
    750c:	stur	x26, [x29, #-176]
    7510:	b	623c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x93c>
    7514:	cmp	w9, #0x18
    7518:	b.ne	7894 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f94>  // b.any
    751c:	and	w8, w8, #0xff
    7520:	cmp	w8, #0x17
    7524:	b.cc	75b4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cb4>  // b.lo, b.ul, b.last
    7528:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    752c:	add	x8, x8, #0x0
    7530:	b	7500 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c00>
    7534:	ldr	x0, [x24, #16]
    7538:	ldrb	w9, [x22, #8]
    753c:	adrp	x26, 0 <_ZN4llvm8BitRecTy6SharedE>
    7540:	ldr	x26, [x26]
    7544:	cmp	w8, #0x2
    7548:	sub	w10, w9, #0x1
    754c:	csel	x25, x26, x0, eq  // eq = none
    7550:	cmp	w10, #0x16
    7554:	b.ls	7560 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c60>  // b.plast
    7558:	mov	x0, xzr
    755c:	b	7580 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c80>
    7560:	cmp	w9, #0x3
    7564:	b.ne	757c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c7c>  // b.any
    7568:	ldr	w0, [x22, #32]
    756c:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    7570:	ldrb	w9, [x22, #8]
    7574:	ldrb	w8, [x24, #8]
    7578:	b	7580 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1c80>
    757c:	ldr	x0, [x22, #16]
    7580:	cmp	w9, #0x2
    7584:	csel	x10, x26, x0, eq  // eq = none
    7588:	cmp	w8, #0x18
    758c:	csel	x27, x10, x25, eq  // eq = none
    7590:	cmp	w9, #0x18
    7594:	csel	x26, x27, x10, eq  // eq = none
    7598:	cbz	x27, 75f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cf0>
    759c:	cbz	x26, 75f0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1cf0>
    75a0:	mov	x0, x27
    75a4:	mov	x1, x26
    75a8:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    75ac:	mov	x25, x0
    75b0:	cbz	x0, 7608 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1d08>
    75b4:	mov	w0, w21
    75b8:	mov	x1, x23
    75bc:	mov	x2, x24
    75c0:	mov	x3, x22
    75c4:	mov	x4, x25
    75c8:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    75cc:	mov	x1, x20
    75d0:	ldp	x20, x19, [sp, #448]
    75d4:	ldp	x22, x21, [sp, #432]
    75d8:	ldp	x24, x23, [sp, #416]
    75dc:	ldp	x26, x25, [sp, #400]
    75e0:	ldp	x28, x27, [sp, #384]
    75e4:	ldp	x29, x30, [sp, #368]
    75e8:	add	sp, sp, #0x1d0
    75ec:	b	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    75f0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    75f4:	add	x8, x8, #0x0
    75f8:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    75fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7600:	add	x8, x8, #0x0
    7604:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    7608:	ldr	x8, [x27]
    760c:	mov	x0, x27
    7610:	sub	x20, x29, #0x90
    7614:	ldr	x9, [x8, #16]
    7618:	sub	x8, x29, #0x90
    761c:	blr	x9
    7620:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7624:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7628:	add	x8, x8, #0x0
    762c:	mov	w9, #0x403                 	// #1027
    7630:	sub	x10, x29, #0x70
    7634:	add	x11, x11, #0x0
    7638:	mov	w12, #0x302                 	// #770
    763c:	stp	x8, x20, [x29, #-112]
    7640:	sturh	w9, [x29, #-96]
    7644:	stp	x10, x11, [x29, #-80]
    7648:	sturh	w12, [x29, #-64]
    764c:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7650:	ldurb	w8, [x29, #-95]
    7654:	cmp	w8, #0x1
    7658:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    765c:	ldr	x8, [x26]
    7660:	mov	x0, x26
    7664:	sub	x20, x29, #0xb0
    7668:	ldr	x9, [x8, #16]
    766c:	sub	x8, x29, #0xb0
    7670:	blr	x9
    7674:	ldurb	w8, [x29, #-63]
    7678:	ldur	x9, [x29, #-80]
    767c:	sub	x10, x29, #0x50
    7680:	mov	w11, #0x402                 	// #1026
    7684:	cmp	w8, #0x1
    7688:	csel	x8, x9, x10, eq  // eq = none
    768c:	stp	x8, x20, [x29, #-48]
    7690:	sturh	w11, [x29, #-32]
    7694:	ldrb	w9, [x8, #16]
    7698:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    769c:	ldrb	w8, [x8, #17]
    76a0:	cmp	w8, #0x1
    76a4:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    76a8:	ldurb	w8, [x29, #-31]
    76ac:	ldur	x9, [x29, #-48]
    76b0:	sub	x10, x29, #0x30
    76b4:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    76b8:	cmp	w8, #0x1
    76bc:	add	x11, x11, #0x0
    76c0:	mov	w12, #0x302                 	// #770
    76c4:	csel	x8, x9, x10, eq  // eq = none
    76c8:	stp	x8, x11, [sp, #32]
    76cc:	strh	w12, [sp, #48]
    76d0:	ldrb	w9, [x8, #16]
    76d4:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    76d8:	ldrb	w8, [x8, #17]
    76dc:	cmp	w8, #0x1
    76e0:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    76e4:	mov	x0, x19
    76e8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    76ec:	str	x0, [sp, #160]
    76f0:	add	x0, sp, #0xa0
    76f4:	add	x2, sp, #0x20
    76f8:	mov	w1, #0x1                   	// #1
    76fc:	b	6360 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xa60>
    7700:	mov	w27, wzr
    7704:	mov	x25, xzr
    7708:	cbz	x20, 7718 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e18>
    770c:	mov	x22, xzr
    7710:	mov	x26, x20
    7714:	b	775c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e5c>
    7718:	ldr	x26, [x19, #344]
    771c:	mov	w0, #0x80                  	// #128
    7720:	bl	0 <_Znwm>
    7724:	mov	x22, x0
    7728:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    772c:	add	x0, x0, #0x0
    7730:	mov	w1, #0x6                   	// #6
    7734:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7738:	mov	x1, x0
    773c:	mov	x0, x22
    7740:	mov	x2, xzr
    7744:	mov	x3, xzr
    7748:	mov	x4, x26
    774c:	mov	w5, wzr
    7750:	mov	w6, wzr
    7754:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7758:	mov	x26, x22
    775c:	sub	x0, x29, #0x90
    7760:	mov	x1, x21
    7764:	mov	x2, x24
    7768:	mov	w3, wzr
    776c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    7770:	ldr	w8, [x26, #80]
    7774:	ldr	x9, [x26, #72]
    7778:	cbz	w8, 77b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1eb0>
    777c:	ldur	x10, [x29, #-144]
    7780:	add	x11, x8, x8, lsl #1
    7784:	lsl	x11, x11, #3
    7788:	mov	x13, x9
    778c:	mov	x12, x9
    7790:	ldr	x14, [x12], #24
    7794:	cmp	x14, x10
    7798:	b.eq	77ac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1eac>  // b.none
    779c:	subs	x11, x11, #0x18
    77a0:	mov	x13, x12
    77a4:	b.ne	7790 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1e90>  // b.any
    77a8:	b	77b0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1eb0>
    77ac:	cbnz	x13, 821c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x291c>
    77b0:	ldr	w10, [x26, #84]
    77b4:	cmp	w8, w10
    77b8:	b.cs	803c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x273c>  // b.hs, b.nlast
    77bc:	ldur	x10, [x29, #-128]
    77c0:	ldr	q0, [x28, #64]
    77c4:	mov	w11, #0x18                  	// #24
    77c8:	madd	x8, x8, x11, x9
    77cc:	str	x10, [x8, #16]
    77d0:	str	q0, [x8]
    77d4:	ldp	w8, w9, [x26, #80]
    77d8:	cmp	w8, w9
    77dc:	b.cs	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.hs, b.nlast
    77e0:	add	w8, w8, #0x1
    77e4:	mov	x0, x19
    77e8:	mov	x1, x26
    77ec:	mov	x2, x25
    77f0:	mov	w3, wzr
    77f4:	str	w8, [x26, #80]
    77f8:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    77fc:	mov	x25, x0
    7800:	mov	x0, x26
    7804:	mov	x1, x21
    7808:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    780c:	cbz	x25, 7854 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f54>
    7810:	ldr	w8, [x19, #40]
    7814:	cmp	w8, #0x9
    7818:	b.ne	785c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f5c>  // b.any
    781c:	ldp	x8, x9, [x19, #8]
    7820:	mov	x0, x19
    7824:	cmp	x8, x9
    7828:	cset	w1, eq  // eq = none
    782c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7830:	str	w0, [x19, #40]
    7834:	tbnz	w27, #0, 7958 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2058>
    7838:	ldrb	w8, [x25, #8]
    783c:	sub	w8, w8, #0x1
    7840:	cmp	w8, #0x16
    7844:	b.ls	794c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x204c>  // b.plast
    7848:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    784c:	add	x8, x8, #0x0
    7850:	b	7864 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1f64>
    7854:	mov	x19, xzr
    7858:	b	797c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x207c>
    785c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7860:	add	x8, x8, #0x0
    7864:	mov	w9, #0x103                 	// #259
    7868:	mov	x0, x19
    786c:	stp	x8, xzr, [x29, #-144]
    7870:	sturh	w9, [x29, #-128]
    7874:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7878:	stur	x0, [x29, #-176]
    787c:	sub	x0, x29, #0xb0
    7880:	sub	x2, x29, #0x90
    7884:	mov	w1, #0x1                   	// #1
    7888:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    788c:	mov	x19, xzr
    7890:	b	797c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x207c>
    7894:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7898:	add	x8, x8, #0x0
    789c:	mov	w9, #0x103                 	// #259
    78a0:	stp	x8, xzr, [x29, #-144]
    78a4:	sturh	w9, [x29, #-128]
    78a8:	stur	x27, [x29, #-176]
    78ac:	b	623c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x93c>
    78b0:	ldr	x8, [x22]
    78b4:	mov	x0, x22
    78b8:	sub	x19, x29, #0x90
    78bc:	ldr	x9, [x8, #16]
    78c0:	sub	x8, x29, #0x90
    78c4:	blr	x9
    78c8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    78cc:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    78d0:	add	x8, x8, #0x0
    78d4:	mov	w9, #0x403                 	// #1027
    78d8:	add	x10, sp, #0x20
    78dc:	add	x11, x11, #0x0
    78e0:	b	7914 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2014>
    78e4:	ldr	x8, [x22]
    78e8:	mov	x0, x22
    78ec:	sub	x19, x29, #0x90
    78f0:	ldr	x9, [x8, #16]
    78f4:	sub	x8, x29, #0x90
    78f8:	blr	x9
    78fc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7900:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7904:	add	x8, x8, #0x0
    7908:	mov	w9, #0x403                 	// #1027
    790c:	add	x10, sp, #0x20
    7910:	add	x11, x11, #0x0
    7914:	mov	w12, #0x302                 	// #770
    7918:	stp	x8, x19, [sp, #32]
    791c:	strh	w9, [sp, #48]
    7920:	stp	x10, x11, [x29, #-176]
    7924:	sturh	w12, [x29, #-160]
    7928:	cbnz	wzr, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    792c:	ldrb	w8, [sp, #49]
    7930:	cmp	w8, #0x1
    7934:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    7938:	sub	x0, x29, #0x30
    793c:	sub	x2, x29, #0xb0
    7940:	mov	w1, #0x1                   	// #1
    7944:	stur	x25, [x29, #-48]
    7948:	b	65e0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0xce0>
    794c:	ldr	x0, [x25, #16]
    7950:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    7954:	mov	x24, x0
    7958:	mov	w0, #0x1                   	// #1
    795c:	mov	x1, x21
    7960:	mov	x2, x23
    7964:	mov	x3, x25
    7968:	mov	x4, x24
    796c:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    7970:	mov	x1, x20
    7974:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    7978:	mov	x19, x0
    797c:	cbz	x22, 6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>
    7980:	ldr	x0, [x22, #88]
    7984:	add	x8, x22, #0x68
    7988:	cmp	x0, x8
    798c:	b.eq	7994 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2094>  // b.none
    7990:	bl	0 <free>
    7994:	ldr	x0, [x22, #72]
    7998:	add	x8, x22, #0x58
    799c:	cmp	x0, x8
    79a0:	b.eq	79a8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20a8>  // b.none
    79a4:	bl	0 <free>
    79a8:	ldr	x0, [x22, #56]
    79ac:	add	x8, x22, #0x48
    79b0:	cmp	x0, x8
    79b4:	b.eq	79bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20bc>  // b.none
    79b8:	bl	0 <free>
    79bc:	ldr	x0, [x22, #8]
    79c0:	add	x8, x22, #0x18
    79c4:	cmp	x0, x8
    79c8:	b.eq	79d0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20d0>  // b.none
    79cc:	bl	0 <free>
    79d0:	mov	x0, x22
    79d4:	bl	0 <_ZdlPv>
    79d8:	b	6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>
    79dc:	cbz	x10, 7a08 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2108>
    79e0:	ldr	x8, [x24]
    79e4:	mov	x0, x24
    79e8:	sub	x20, x29, #0xb0
    79ec:	ldr	x9, [x8, #40]
    79f0:	sub	x8, x29, #0xb0
    79f4:	blr	x9
    79f8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    79fc:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a00:	add	x8, x8, #0x0
    7a04:	b	6e40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1540>
    7a08:	ldp	x8, x9, [x19, #8]
    7a0c:	mov	x0, x19
    7a10:	cmp	x8, x9
    7a14:	cset	w1, eq  // eq = none
    7a18:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7a1c:	cmp	w0, #0xe
    7a20:	str	w0, [x19, #40]
    7a24:	b.ne	7b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x220c>  // b.any
    7a28:	ldp	x8, x9, [x19, #8]
    7a2c:	mov	x0, x19
    7a30:	cmp	x8, x9
    7a34:	cset	w1, eq  // eq = none
    7a38:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7a3c:	cmp	w0, #0x48
    7a40:	str	w0, [x19, #40]
    7a44:	b.ne	7a8c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x218c>  // b.any
    7a48:	ldp	x0, x1, [x19, #48]
    7a4c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7a50:	mov	x25, x0
    7a54:	cbz	x20, 7ac4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21c4>
    7a58:	ldr	w8, [x20, #80]
    7a5c:	cbz	w8, 7ac4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21c4>
    7a60:	ldr	x10, [x20, #72]
    7a64:	add	x8, x8, x8, lsl #1
    7a68:	lsl	x8, x8, #3
    7a6c:	mov	x9, x10
    7a70:	ldr	x11, [x9], #24
    7a74:	cmp	x11, x25
    7a78:	b.eq	7a98 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2198>  // b.none
    7a7c:	subs	x8, x8, #0x18
    7a80:	mov	x10, x9
    7a84:	b.ne	7a70 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2170>  // b.any
    7a88:	b	7ac4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21c4>
    7a8c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7a90:	add	x8, x8, #0x0
    7a94:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    7a98:	cbz	x10, 7ac4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x21c4>
    7a9c:	ldr	x8, [x25]
    7aa0:	mov	x0, x25
    7aa4:	sub	x20, x29, #0xb0
    7aa8:	ldr	x9, [x8, #40]
    7aac:	sub	x8, x29, #0xb0
    7ab0:	blr	x9
    7ab4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ab8:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7abc:	add	x8, x8, #0x0
    7ac0:	b	6e40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1540>
    7ac4:	ldp	x8, x9, [x19, #8]
    7ac8:	mov	x0, x19
    7acc:	cmp	x8, x9
    7ad0:	cset	w1, eq  // eq = none
    7ad4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7ad8:	cmp	w0, #0xe
    7adc:	str	w0, [x19, #40]
    7ae0:	b.ne	7b0c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x220c>  // b.any
    7ae4:	ldp	x8, x9, [x19, #8]
    7ae8:	mov	x0, x19
    7aec:	cmp	x8, x9
    7af0:	cset	w1, eq  // eq = none
    7af4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7af8:	str	w0, [x19, #40]
    7afc:	cbz	x20, 7b18 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2218>
    7b00:	mov	x21, xzr
    7b04:	mov	x27, x20
    7b08:	b	7b5c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x225c>
    7b0c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b10:	add	x8, x8, #0x0
    7b14:	b	6224 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x924>
    7b18:	ldr	x27, [x19, #344]
    7b1c:	mov	w0, #0x80                  	// #128
    7b20:	bl	0 <_Znwm>
    7b24:	mov	x21, x0
    7b28:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b2c:	add	x0, x0, #0x0
    7b30:	mov	w1, #0x6                   	// #6
    7b34:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    7b38:	mov	x1, x0
    7b3c:	mov	x0, x21
    7b40:	mov	x2, xzr
    7b44:	mov	x3, xzr
    7b48:	mov	x4, x27
    7b4c:	mov	w5, wzr
    7b50:	mov	w6, wzr
    7b54:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7b58:	mov	x27, x21
    7b5c:	ldr	x2, [x22, #16]
    7b60:	sub	x0, x29, #0x90
    7b64:	mov	x1, x24
    7b68:	mov	w3, wzr
    7b6c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    7b70:	ldr	w8, [x27, #80]
    7b74:	ldr	x9, [x27, #72]
    7b78:	cbz	w8, 7bb0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22b0>
    7b7c:	ldur	x10, [x29, #-144]
    7b80:	add	x11, x8, x8, lsl #1
    7b84:	lsl	x11, x11, #3
    7b88:	mov	x13, x9
    7b8c:	mov	x12, x9
    7b90:	ldr	x14, [x12], #24
    7b94:	cmp	x14, x10
    7b98:	b.eq	7bac <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22ac>  // b.none
    7b9c:	subs	x11, x11, #0x18
    7ba0:	mov	x13, x12
    7ba4:	b.ne	7b90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2290>  // b.any
    7ba8:	b	7bb0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22b0>
    7bac:	cbnz	x13, 821c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x291c>
    7bb0:	ldr	w10, [x27, #84]
    7bb4:	cmp	w8, w10
    7bb8:	add	x10, x27, #0x48
    7bbc:	str	x10, [sp]
    7bc0:	b.cs	805c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x275c>  // b.hs, b.nlast
    7bc4:	ldur	x10, [x29, #-128]
    7bc8:	ldr	q0, [x28, #64]
    7bcc:	mov	w11, #0x18                  	// #24
    7bd0:	madd	x8, x8, x11, x9
    7bd4:	str	x10, [x8, #16]
    7bd8:	str	q0, [x8]
    7bdc:	ldp	w8, w9, [x27, #80]
    7be0:	cmp	w8, w9
    7be4:	b.cs	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.hs, b.nlast
    7be8:	add	w8, w8, #0x1
    7bec:	str	w8, [x27, #80]
    7bf0:	ldr	x2, [x26, #24]
    7bf4:	sub	x0, x29, #0x90
    7bf8:	mov	x1, x25
    7bfc:	mov	w3, wzr
    7c00:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    7c04:	ldr	w8, [x27, #80]
    7c08:	ldr	x9, [x27, #72]
    7c0c:	cbz	w8, 7c44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2344>
    7c10:	ldur	x10, [x29, #-144]
    7c14:	add	x11, x8, x8, lsl #1
    7c18:	lsl	x11, x11, #3
    7c1c:	mov	x13, x9
    7c20:	mov	x12, x9
    7c24:	ldr	x14, [x12], #24
    7c28:	cmp	x14, x10
    7c2c:	b.eq	7c40 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2340>  // b.none
    7c30:	subs	x11, x11, #0x18
    7c34:	mov	x13, x12
    7c38:	b.ne	7c24 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2324>  // b.any
    7c3c:	b	7c44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2344>
    7c40:	cbnz	x13, 821c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x291c>
    7c44:	ldr	w10, [x27, #84]
    7c48:	cmp	w8, w10
    7c4c:	b.cs	807c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x277c>  // b.hs, b.nlast
    7c50:	ldur	x10, [x29, #-128]
    7c54:	ldr	q0, [x28, #64]
    7c58:	mov	w11, #0x18                  	// #24
    7c5c:	madd	x8, x8, x11, x9
    7c60:	str	x10, [x8, #16]
    7c64:	str	q0, [x8]
    7c68:	ldp	w8, w9, [x27, #80]
    7c6c:	cmp	w8, w9
    7c70:	b.cs	809c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x279c>  // b.hs, b.nlast
    7c74:	add	w8, w8, #0x1
    7c78:	mov	x0, x19
    7c7c:	mov	x1, x27
    7c80:	mov	x2, xzr
    7c84:	mov	w3, wzr
    7c88:	str	w8, [x27, #80]
    7c8c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    7c90:	mov	x26, x0
    7c94:	mov	x0, x27
    7c98:	mov	x1, x24
    7c9c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ca0:	mov	x0, x27
    7ca4:	mov	x1, x25
    7ca8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7cac:	cbz	x26, 7fdc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26dc>
    7cb0:	ldrb	w8, [x26, #8]
    7cb4:	sub	w8, w8, #0x1
    7cb8:	cmp	w8, #0x17
    7cbc:	b.cc	7cf4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23f4>  // b.lo, b.ul, b.last
    7cc0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7cc4:	add	x8, x8, #0x0
    7cc8:	mov	w9, #0x103                 	// #259
    7ccc:	mov	x0, x19
    7cd0:	stp	x8, xzr, [x29, #-144]
    7cd4:	sturh	w9, [x29, #-128]
    7cd8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7cdc:	stur	x0, [x29, #-176]
    7ce0:	sub	x0, x29, #0xb0
    7ce4:	sub	x2, x29, #0x90
    7ce8:	mov	w1, #0x1                   	// #1
    7cec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7cf0:	b	7fdc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26dc>
    7cf4:	ldr	x8, [x26, #16]
    7cf8:	ldr	x0, [x22, #16]
    7cfc:	cmp	x8, x0
    7d00:	b.eq	7d6c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x246c>  // b.none
    7d04:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7d08:	add	x8, x8, #0x0
    7d0c:	mov	w9, #0x103                 	// #259
    7d10:	stp	x8, xzr, [x29, #-112]
    7d14:	sturh	w9, [x29, #-96]
    7d18:	ldr	x8, [x0]
    7d1c:	sub	x22, x29, #0x90
    7d20:	ldr	x9, [x8, #16]
    7d24:	sub	x8, x29, #0x90
    7d28:	blr	x9
    7d2c:	ldurb	w20, [x29, #-96]
    7d30:	mov	w8, #0x104                 	// #260
    7d34:	strh	w8, [sp, #176]
    7d38:	stp	x22, xzr, [sp, #160]
    7d3c:	cmp	w20, #0x1
    7d40:	b.eq	7dbc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24bc>  // b.none
    7d44:	cbnz	w20, 7ddc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x24dc>
    7d48:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7d4c:	mov	w8, #0x100                 	// #256
    7d50:	add	x9, x9, #0x0
    7d54:	mov	w10, #0x103                 	// #259
    7d58:	stp	xzr, xzr, [x29, #-80]
    7d5c:	sturh	w8, [x29, #-64]
    7d60:	stp	x9, xzr, [sp, #136]
    7d64:	strh	w10, [sp, #152]
    7d68:	b	7e64 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2564>
    7d6c:	ldr	w8, [x19, #40]
    7d70:	cmp	w8, #0x9
    7d74:	b.ne	7ed0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25d0>  // b.any
    7d78:	ldp	x8, x9, [x19, #8]
    7d7c:	mov	x0, x19
    7d80:	cmp	x8, x9
    7d84:	cset	w1, eq  // eq = none
    7d88:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    7d8c:	str	w0, [x19, #40]
    7d90:	ldr	x5, [x22, #16]
    7d94:	mov	x0, x22
    7d98:	mov	x1, x23
    7d9c:	mov	x2, x24
    7da0:	mov	x3, x25
    7da4:	mov	x4, x26
    7da8:	bl	0 <_ZN4llvm10FoldOpInit3getEPNS_4InitES2_S2_S2_S2_PNS_5RecTyE>
    7dac:	mov	x1, x20
    7db0:	bl	0 <_ZNK4llvm10FoldOpInit4FoldEPNS_6RecordE>
    7db4:	mov	x19, x0
    7db8:	b	7fe0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26e0>
    7dbc:	add	x9, sp, #0xa0
    7dc0:	ldr	x8, [sp, #176]
    7dc4:	ldr	q0, [x9]
    7dc8:	add	x28, sp, #0xa0
    7dcc:	and	w20, w8, #0xff
    7dd0:	str	q0, [x9, #128]
    7dd4:	stur	x8, [x29, #-64]
    7dd8:	b	7e44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2544>
    7ddc:	ldurb	w8, [x29, #-95]
    7de0:	ldur	x9, [x29, #-112]
    7de4:	mov	w10, #0x2                   	// #2
    7de8:	sub	x11, x29, #0x70
    7dec:	cmp	w8, #0x1
    7df0:	csel	w10, w20, w10, eq  // eq = none
    7df4:	sub	x12, x29, #0x90
    7df8:	mov	w13, #0x4                   	// #4
    7dfc:	csel	x8, x9, x11, eq  // eq = none
    7e00:	cmp	w10, #0x2
    7e04:	stp	x8, x12, [x29, #-80]
    7e08:	sturb	w10, [x29, #-64]
    7e0c:	sturb	w13, [x29, #-63]
    7e10:	b.ne	7e44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2544>  // b.any
    7e14:	ldrb	w9, [x8, #16]
    7e18:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7e1c:	ldrb	w8, [x8, #17]
    7e20:	cmp	w8, #0x1
    7e24:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    7e28:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7e2c:	add	x8, x8, #0x0
    7e30:	mov	w9, #0x103                 	// #259
    7e34:	mov	w20, #0x2                   	// #2
    7e38:	stp	x8, xzr, [sp, #136]
    7e3c:	strh	w9, [sp, #152]
    7e40:	b	7e78 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2578>
    7e44:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7e48:	add	x8, x8, #0x0
    7e4c:	mov	w9, #0x103                 	// #259
    7e50:	cmp	w20, #0x1
    7e54:	stp	x8, xzr, [sp, #136]
    7e58:	strh	w9, [sp, #152]
    7e5c:	b.eq	7edc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25dc>  // b.none
    7e60:	cbnz	w20, 7e78 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2578>
    7e64:	mov	w8, #0x100                 	// #256
    7e68:	mov	w20, wzr
    7e6c:	stp	xzr, xzr, [x29, #-48]
    7e70:	sturh	w8, [x29, #-32]
    7e74:	b	7ef0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25f0>
    7e78:	ldurb	w8, [x29, #-63]
    7e7c:	ldur	x9, [x29, #-80]
    7e80:	mov	w10, #0x2                   	// #2
    7e84:	sub	x11, x29, #0x50
    7e88:	cmp	w8, #0x1
    7e8c:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7e90:	csel	w10, w20, w10, eq  // eq = none
    7e94:	add	x12, x12, #0x0
    7e98:	mov	w13, #0x3                   	// #3
    7e9c:	csel	x8, x9, x11, eq  // eq = none
    7ea0:	cmp	w10, #0x2
    7ea4:	stp	x8, x12, [x29, #-48]
    7ea8:	sturb	w10, [x29, #-32]
    7eac:	sturb	w13, [x29, #-31]
    7eb0:	b.ne	7ef0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25f0>  // b.any
    7eb4:	ldrb	w9, [x8, #16]
    7eb8:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7ebc:	ldrb	w8, [x8, #17]
    7ec0:	cmp	w8, #0x1
    7ec4:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    7ec8:	mov	w20, #0x2                   	// #2
    7ecc:	b	7ef0 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x25f0>
    7ed0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    7ed4:	add	x8, x8, #0x0
    7ed8:	b	7cc8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x23c8>
    7edc:	ldr	x8, [sp, #152]
    7ee0:	ldur	q0, [sp, #136]
    7ee4:	and	w20, w8, #0xff
    7ee8:	str	q0, [x28, #160]
    7eec:	stur	x8, [x29, #-32]
    7ef0:	ldr	x0, [x26, #16]
    7ef4:	sub	x22, x29, #0xb0
    7ef8:	ldr	x8, [x0]
    7efc:	ldr	x9, [x8, #16]
    7f00:	sub	x8, x29, #0xb0
    7f04:	blr	x9
    7f08:	mov	w8, #0x104                 	// #260
    7f0c:	cmp	w20, #0x1
    7f10:	strh	w8, [sp, #128]
    7f14:	stp	x22, xzr, [sp, #112]
    7f18:	b.eq	7f30 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2630>  // b.none
    7f1c:	cbnz	w20, 7f44 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2644>
    7f20:	mov	w8, #0x100                 	// #256
    7f24:	stp	xzr, xzr, [sp, #32]
    7f28:	strh	w8, [sp, #48]
    7f2c:	b	7f90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2690>
    7f30:	ldr	q0, [sp, #112]
    7f34:	ldr	x8, [sp, #128]
    7f38:	str	q0, [sp, #32]
    7f3c:	str	x8, [sp, #48]
    7f40:	b	7f90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2690>
    7f44:	ldurb	w8, [x29, #-31]
    7f48:	ldur	x9, [x29, #-48]
    7f4c:	mov	w10, #0x2                   	// #2
    7f50:	sub	x11, x29, #0x30
    7f54:	cmp	w8, #0x1
    7f58:	csel	w10, w20, w10, eq  // eq = none
    7f5c:	sub	x12, x29, #0xb0
    7f60:	mov	w13, #0x4                   	// #4
    7f64:	csel	x8, x9, x11, eq  // eq = none
    7f68:	cmp	w10, #0x2
    7f6c:	stp	x8, x12, [sp, #32]
    7f70:	strb	w10, [sp, #48]
    7f74:	strb	w13, [sp, #49]
    7f78:	b.ne	7f90 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2690>  // b.any
    7f7c:	ldrb	w9, [x8, #16]
    7f80:	cbz	w9, 7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>
    7f84:	ldrb	w8, [x8, #17]
    7f88:	cmp	w8, #0x1
    7f8c:	b.eq	7344 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1a44>  // b.none
    7f90:	mov	x0, x19
    7f94:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    7f98:	str	x0, [sp, #88]
    7f9c:	add	x0, sp, #0x58
    7fa0:	add	x2, sp, #0x20
    7fa4:	mov	w1, #0x1                   	// #1
    7fa8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    7fac:	ldur	x0, [x29, #-176]
    7fb0:	sub	x8, x29, #0xb0
    7fb4:	add	x8, x8, #0x10
    7fb8:	cmp	x0, x8
    7fbc:	b.eq	7fc4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26c4>  // b.none
    7fc0:	bl	0 <_ZdlPv>
    7fc4:	ldur	x0, [x29, #-144]
    7fc8:	sub	x8, x29, #0x90
    7fcc:	add	x8, x8, #0x10
    7fd0:	cmp	x0, x8
    7fd4:	b.eq	7fdc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26dc>  // b.none
    7fd8:	bl	0 <_ZdlPv>
    7fdc:	mov	x19, xzr
    7fe0:	cbz	x21, 6250 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x950>
    7fe4:	ldr	x0, [x21, #88]
    7fe8:	add	x8, x21, #0x68
    7fec:	cmp	x0, x8
    7ff0:	b.eq	7ff8 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x26f8>  // b.none
    7ff4:	bl	0 <free>
    7ff8:	ldr	x0, [x21, #72]
    7ffc:	add	x8, x21, #0x58
    8000:	cmp	x0, x8
    8004:	b.eq	800c <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x270c>  // b.none
    8008:	bl	0 <free>
    800c:	ldr	x0, [x21, #56]
    8010:	add	x8, x21, #0x48
    8014:	cmp	x0, x8
    8018:	b.eq	8020 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2720>  // b.none
    801c:	bl	0 <free>
    8020:	ldr	x0, [x21, #8]
    8024:	add	x8, x21, #0x18
    8028:	cmp	x0, x8
    802c:	b.eq	8034 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2734>  // b.none
    8030:	bl	0 <free>
    8034:	mov	x0, x21
    8038:	b	79d4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x20d4>
    803c:	add	x0, x26, #0x48
    8040:	add	x1, x0, #0x10
    8044:	mov	w3, #0x18                  	// #24
    8048:	mov	x2, xzr
    804c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8050:	ldr	w8, [x26, #80]
    8054:	ldr	x9, [x26, #72]
    8058:	b	77bc <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x1ebc>
    805c:	ldr	x0, [sp]
    8060:	mov	w3, #0x18                  	// #24
    8064:	mov	x2, xzr
    8068:	add	x1, x0, #0x10
    806c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8070:	ldr	w8, [x27, #80]
    8074:	ldr	x9, [x27, #72]
    8078:	b	7bc4 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x22c4>
    807c:	ldr	x0, [sp]
    8080:	mov	w3, #0x18                  	// #24
    8084:	mov	x2, xzr
    8088:	add	x1, x0, #0x10
    808c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8090:	ldr	w8, [x27, #80]
    8094:	ldr	x9, [x27, #72]
    8098:	b	7c50 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE+0x2350>
    809c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80a0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80a4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80a8:	add	x0, x0, #0x0
    80ac:	add	x1, x1, #0x0
    80b0:	add	x3, x3, #0x0
    80b4:	mov	w2, #0x43                  	// #67
    80b8:	bl	0 <__assert_fail>
    80bc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80c0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80c4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80c8:	add	x0, x0, #0x0
    80cc:	add	x1, x1, #0x0
    80d0:	add	x3, x3, #0x0
    80d4:	mov	w2, #0x108                 	// #264
    80d8:	bl	0 <__assert_fail>
    80dc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80e0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80e4:	add	x0, x0, #0x0
    80e8:	add	x1, x1, #0x0
    80ec:	mov	w2, #0x449                 	// #1097
    80f0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    80f4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80f8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    80fc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8100:	add	x0, x0, #0x0
    8104:	add	x1, x1, #0x0
    8108:	add	x3, x3, #0x0
    810c:	mov	w2, #0xa7                  	// #167
    8110:	bl	0 <__assert_fail>
    8114:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8118:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    811c:	add	x0, x0, #0x0
    8120:	add	x1, x1, #0x0
    8124:	mov	w2, #0x4cf                 	// #1231
    8128:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    812c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8130:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8134:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8138:	add	x0, x0, #0x0
    813c:	add	x1, x1, #0x0
    8140:	add	x3, x3, #0x0
    8144:	mov	w2, #0x69                  	// #105
    8148:	bl	0 <__assert_fail>
    814c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8150:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8154:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8158:	add	x0, x0, #0x0
    815c:	add	x1, x1, #0x0
    8160:	add	x3, x3, #0x0
    8164:	mov	w2, #0x69                  	// #105
    8168:	bl	0 <__assert_fail>
    816c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8170:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8174:	add	x0, x0, #0x0
    8178:	add	x1, x1, #0x0
    817c:	mov	w2, #0x58b                 	// #1419
    8180:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    8184:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8188:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    818c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8190:	add	x0, x0, #0x0
    8194:	add	x1, x1, #0x0
    8198:	add	x3, x3, #0x0
    819c:	mov	w2, #0x69                  	// #105
    81a0:	bl	0 <__assert_fail>
    81a4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81a8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81ac:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81b0:	add	x0, x0, #0x0
    81b4:	add	x1, x1, #0x0
    81b8:	add	x3, x3, #0x0
    81bc:	mov	w2, #0x9e                  	// #158
    81c0:	bl	0 <__assert_fail>
    81c4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81c8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81cc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81d0:	add	x0, x0, #0x0
    81d4:	add	x1, x1, #0x0
    81d8:	add	x3, x3, #0x0
    81dc:	mov	w2, #0x108                 	// #264
    81e0:	bl	0 <__assert_fail>
    81e4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81e8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81ec:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    81f0:	add	x0, x0, #0x0
    81f4:	add	x1, x1, #0x0
    81f8:	add	x3, x3, #0x0
    81fc:	mov	w2, #0x403                 	// #1027
    8200:	bl	0 <__assert_fail>
    8204:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8208:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    820c:	add	x0, x0, #0x0
    8210:	add	x1, x1, #0x0
    8214:	mov	w2, #0x5be                 	// #1470
    8218:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    821c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8220:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8224:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8228:	add	x0, x0, #0x0
    822c:	add	x1, x1, #0x0
    8230:	add	x3, x3, #0x0
    8234:	mov	w2, #0x60a                 	// #1546
    8238:	bl	0 <__assert_fail>

000000000000823c <_ZN4llvm8TGParser17ParseOperatorTypeEv>:
    823c:	sub	sp, sp, #0x40
    8240:	stp	x29, x30, [sp, #32]
    8244:	stp	x20, x19, [sp, #48]
    8248:	add	x29, sp, #0x20
    824c:	ldr	w8, [x0, #40]
    8250:	mov	x19, x0
    8254:	cmp	w8, #0xa
    8258:	b.ne	82ac <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x70>  // b.any
    825c:	ldp	x8, x9, [x19, #8]
    8260:	mov	x0, x19
    8264:	cmp	x8, x9
    8268:	cset	w1, eq  // eq = none
    826c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8270:	str	w0, [x19, #40]
    8274:	mov	x0, x19
    8278:	bl	5200 <_ZN4llvm8TGParser9ParseTypeEv>
    827c:	mov	x20, x0
    8280:	cbz	x0, 82e4 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xa8>
    8284:	ldr	w8, [x19, #40]
    8288:	cmp	w8, #0xb
    828c:	b.ne	82ac <_ZN4llvm8TGParser17ParseOperatorTypeEv+0x70>  // b.any
    8290:	ldp	x8, x9, [x19, #8]
    8294:	mov	x0, x19
    8298:	cmp	x8, x9
    829c:	cset	w1, eq  // eq = none
    82a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    82a4:	str	w0, [x19, #40]
    82a8:	b	8314 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xd8>
    82ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    82b0:	add	x8, x8, #0x0
    82b4:	mov	w9, #0x103                 	// #259
    82b8:	mov	x0, x19
    82bc:	stp	x8, xzr, [sp]
    82c0:	strh	w9, [sp, #16]
    82c4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    82c8:	stur	x0, [x29, #-8]
    82cc:	sub	x0, x29, #0x8
    82d0:	mov	x2, sp
    82d4:	mov	w1, #0x1                   	// #1
    82d8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    82dc:	mov	x20, xzr
    82e0:	b	8314 <_ZN4llvm8TGParser17ParseOperatorTypeEv+0xd8>
    82e4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    82e8:	add	x8, x8, #0x0
    82ec:	mov	w9, #0x103                 	// #259
    82f0:	mov	x0, x19
    82f4:	stp	x8, xzr, [sp]
    82f8:	strh	w9, [sp, #16]
    82fc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8300:	stur	x0, [x29, #-8]
    8304:	sub	x0, x29, #0x8
    8308:	mov	x2, sp
    830c:	mov	w1, #0x1                   	// #1
    8310:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8314:	mov	x0, x20
    8318:	ldp	x20, x19, [sp, #48]
    831c:	ldp	x29, x30, [sp, #32]
    8320:	add	sp, sp, #0x40
    8324:	ret

0000000000008328 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE>:
    8328:	stp	x29, x30, [sp, #-96]!
    832c:	str	x28, [sp, #16]
    8330:	stp	x26, x25, [sp, #32]
    8334:	stp	x24, x23, [sp, #48]
    8338:	stp	x22, x21, [sp, #64]
    833c:	stp	x20, x19, [sp, #80]
    8340:	mov	x29, sp
    8344:	sub	sp, sp, #0x1a0
    8348:	ldp	x8, x9, [x0, #8]
    834c:	mov	x20, x1
    8350:	mov	x21, x2
    8354:	mov	x19, x0
    8358:	cmp	x8, x9
    835c:	cset	w1, eq  // eq = none
    8360:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8364:	cmp	w0, #0x8
    8368:	str	w0, [x19, #40]
    836c:	b.ne	861c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x2f4>  // b.any
    8370:	ldp	x8, x9, [x19, #8]
    8374:	mov	x0, x19
    8378:	cmp	x8, x9
    837c:	cset	w1, eq  // eq = none
    8380:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8384:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8388:	ldr	d0, [x9]
    838c:	sub	x8, x29, #0x38
    8390:	sub	x10, x29, #0x68
    8394:	cmp	w0, #0x9
    8398:	add	x22, x8, #0x10
    839c:	add	x23, x10, #0x10
    83a0:	str	w0, [x19, #40]
    83a4:	stur	x22, [x29, #-56]
    83a8:	stur	x23, [x29, #-104]
    83ac:	stur	d0, [x29, #-48]
    83b0:	stur	d0, [x29, #-96]
    83b4:	b.ne	83fc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xd4>  // b.any
    83b8:	ldp	x8, x9, [x19, #8]
    83bc:	mov	x0, x19
    83c0:	cmp	x8, x9
    83c4:	cset	w1, eq  // eq = none
    83c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    83cc:	str	w0, [x19, #40]
    83d0:	ldur	w8, [x29, #-48]
    83d4:	cbz	w8, 8654 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x32c>
    83d8:	ldur	w8, [x29, #-96]
    83dc:	cbz	w8, 8688 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x360>
    83e0:	adrp	x26, 0 <_ZN4llvm8BitRecTy6SharedE>
    83e4:	ldur	x24, [x29, #-104]
    83e8:	ldr	x26, [x26]
    83ec:	mov	x4, xzr
    83f0:	add	x23, sp, #0x90
    83f4:	lsl	x25, x8, #3
    83f8:	b	8520 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1f8>
    83fc:	mov	x0, x19
    8400:	mov	x1, x20
    8404:	mov	x2, xzr
    8408:	mov	w3, wzr
    840c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8410:	cbz	x0, 86d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b0>
    8414:	ldp	w8, w9, [x29, #-48]
    8418:	mov	x24, x0
    841c:	cmp	w8, w9
    8420:	b.cs	84d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1b0>  // b.hs, b.nlast
    8424:	ldur	x9, [x29, #-56]
    8428:	str	x24, [x9, w8, uxtw #3]
    842c:	ldp	w8, w9, [x29, #-48]
    8430:	cmp	w8, w9
    8434:	b.cs	8a24 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6fc>  // b.hs, b.nlast
    8438:	add	w8, w8, #0x1
    843c:	stur	w8, [x29, #-48]
    8440:	ldr	w8, [x19, #40]
    8444:	cmp	w8, #0xc
    8448:	b.ne	8694 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x36c>  // b.any
    844c:	ldp	x8, x9, [x19, #8]
    8450:	mov	x0, x19
    8454:	cmp	x8, x9
    8458:	cset	w1, eq  // eq = none
    845c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8460:	str	w0, [x19, #40]
    8464:	mov	x0, x19
    8468:	mov	x1, x20
    846c:	mov	x2, x21
    8470:	mov	w3, wzr
    8474:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8478:	cbz	x0, 86d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b0>
    847c:	ldp	w8, w9, [x29, #-96]
    8480:	mov	x24, x0
    8484:	cmp	w8, w9
    8488:	b.cs	84f4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1cc>  // b.hs, b.nlast
    848c:	ldur	x9, [x29, #-104]
    8490:	str	x24, [x9, w8, uxtw #3]
    8494:	ldp	w8, w9, [x29, #-96]
    8498:	cmp	w8, w9
    849c:	b.cs	8a24 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6fc>  // b.hs, b.nlast
    84a0:	add	w8, w8, #0x1
    84a4:	stur	w8, [x29, #-96]
    84a8:	ldr	w8, [x19, #40]
    84ac:	cmp	w8, #0xe
    84b0:	b.ne	86a0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x378>  // b.any
    84b4:	ldp	x8, x9, [x19, #8]
    84b8:	mov	x0, x19
    84bc:	cmp	x8, x9
    84c0:	cset	w1, eq  // eq = none
    84c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    84c8:	cmp	w0, #0x9
    84cc:	str	w0, [x19, #40]
    84d0:	b.ne	83fc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xd4>  // b.any
    84d4:	b	83b8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>
    84d8:	sub	x0, x29, #0x38
    84dc:	mov	w3, #0x8                   	// #8
    84e0:	mov	x1, x22
    84e4:	mov	x2, xzr
    84e8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    84ec:	ldur	w8, [x29, #-48]
    84f0:	b	8424 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0xfc>
    84f4:	sub	x0, x29, #0x68
    84f8:	mov	w3, #0x8                   	// #8
    84fc:	mov	x1, x23
    8500:	mov	x2, xzr
    8504:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8508:	ldur	w8, [x29, #-96]
    850c:	b	848c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x164>
    8510:	csel	x4, xzr, x21, eq  // eq = none
    8514:	subs	x25, x25, #0x8
    8518:	add	x24, x24, #0x8
    851c:	b.eq	8660 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x338>  // b.none
    8520:	ldr	x21, [x24]
    8524:	cbz	x21, 8a44 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x71c>
    8528:	ldrb	w8, [x21, #8]
    852c:	mov	x22, x4
    8530:	sub	w9, w8, #0x1
    8534:	cmp	w9, #0x16
    8538:	b.ls	8554 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x22c>  // b.plast
    853c:	mov	x0, xzr
    8540:	cmp	w8, #0x2
    8544:	csel	x21, x26, x0, eq  // eq = none
    8548:	cmp	w8, #0x18
    854c:	cbnz	x22, 8590 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x268>
    8550:	b	8510 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1e8>
    8554:	cmp	w8, #0x3
    8558:	b.ne	857c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x254>  // b.any
    855c:	ldr	w0, [x21, #32]
    8560:	bl	0 <_ZN4llvm9BitsRecTy3getEj>
    8564:	ldrb	w8, [x21, #8]
    8568:	cmp	w8, #0x2
    856c:	csel	x21, x26, x0, eq  // eq = none
    8570:	cmp	w8, #0x18
    8574:	cbnz	x22, 8590 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x268>
    8578:	b	8510 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1e8>
    857c:	ldr	x0, [x21, #16]
    8580:	cmp	w8, #0x2
    8584:	csel	x21, x26, x0, eq  // eq = none
    8588:	cmp	w8, #0x18
    858c:	cbz	x22, 8510 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1e8>
    8590:	b.ne	859c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x274>  // b.any
    8594:	mov	x4, x22
    8598:	b	8514 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1ec>
    859c:	mov	x0, x22
    85a0:	mov	x1, x21
    85a4:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    85a8:	mov	x4, x0
    85ac:	cbnz	x0, 8514 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x1ec>
    85b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    85b4:	add	x8, x8, #0x0
    85b8:	mov	w9, #0x103                 	// #259
    85bc:	stp	x8, xzr, [sp, #168]
    85c0:	strh	w9, [sp, #184]
    85c4:	ldr	x8, [x22]
    85c8:	mov	x0, x22
    85cc:	add	x24, sp, #0x70
    85d0:	ldr	x9, [x8, #16]
    85d4:	add	x8, sp, #0x70
    85d8:	blr	x9
    85dc:	ldrb	w20, [sp, #184]
    85e0:	mov	w8, #0x104                 	// #260
    85e4:	strh	w8, [sp, #160]
    85e8:	stp	x24, xzr, [sp, #144]
    85ec:	cmp	w20, #0x1
    85f0:	b.eq	8730 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x408>  // b.none
    85f4:	cbnz	w20, 8748 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x420>
    85f8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    85fc:	mov	w8, #0x100                 	// #256
    8600:	add	x9, x9, #0x0
    8604:	mov	w10, #0x103                 	// #259
    8608:	stp	xzr, xzr, [sp, #192]
    860c:	strh	w8, [sp, #208]
    8610:	stp	x9, xzr, [sp, #88]
    8614:	strh	w10, [sp, #104]
    8618:	b	87d0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x4a8>
    861c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8620:	add	x8, x8, #0x0
    8624:	mov	w9, #0x103                 	// #259
    8628:	mov	x0, x19
    862c:	stp	x8, xzr, [x29, #-56]
    8630:	sturh	w9, [x29, #-40]
    8634:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8638:	stur	x0, [x29, #-104]
    863c:	sub	x0, x29, #0x68
    8640:	sub	x2, x29, #0x38
    8644:	mov	w1, #0x1                   	// #1
    8648:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    864c:	mov	x19, xzr
    8650:	b	870c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3e4>
    8654:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8658:	add	x8, x8, #0x0
    865c:	b	86b0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x388>
    8660:	cbz	x4, 8688 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x360>
    8664:	ldur	x0, [x29, #-56]
    8668:	ldur	w1, [x29, #-48]
    866c:	ldur	x2, [x29, #-104]
    8670:	ldur	w3, [x29, #-96]
    8674:	bl	0 <_ZN4llvm10CondOpInit3getENS_8ArrayRefIPNS_4InitEEES4_PNS_5RecTyE>
    8678:	mov	x1, x20
    867c:	bl	0 <_ZNK4llvm10CondOpInit4FoldEPNS_6RecordE>
    8680:	mov	x19, x0
    8684:	b	86dc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b4>
    8688:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    868c:	add	x8, x8, #0x0
    8690:	b	86b0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x388>
    8694:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8698:	add	x8, x8, #0x0
    869c:	b	86b0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x388>
    86a0:	cmp	w8, #0x9
    86a4:	b.eq	83b8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x90>  // b.none
    86a8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    86ac:	add	x8, x8, #0x0
    86b0:	mov	w9, #0x103                 	// #259
    86b4:	mov	x0, x19
    86b8:	stp	x8, xzr, [sp, #112]
    86bc:	strh	w9, [sp, #128]
    86c0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    86c4:	str	x0, [sp, #32]
    86c8:	add	x0, sp, #0x20
    86cc:	add	x2, sp, #0x70
    86d0:	mov	w1, #0x1                   	// #1
    86d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    86d8:	mov	x19, xzr
    86dc:	ldur	x0, [x29, #-104]
    86e0:	sub	x8, x29, #0x68
    86e4:	add	x8, x8, #0x10
    86e8:	cmp	x0, x8
    86ec:	b.eq	86f4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3cc>  // b.none
    86f0:	bl	0 <free>
    86f4:	ldur	x0, [x29, #-56]
    86f8:	sub	x8, x29, #0x38
    86fc:	add	x8, x8, #0x10
    8700:	cmp	x0, x8
    8704:	b.eq	870c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3e4>  // b.none
    8708:	bl	0 <free>
    870c:	mov	x0, x19
    8710:	add	sp, sp, #0x1a0
    8714:	ldp	x20, x19, [sp, #80]
    8718:	ldp	x22, x21, [sp, #64]
    871c:	ldp	x24, x23, [sp, #48]
    8720:	ldp	x26, x25, [sp, #32]
    8724:	ldr	x28, [sp, #16]
    8728:	ldp	x29, x30, [sp], #96
    872c:	ret
    8730:	ldr	x8, [sp, #160]
    8734:	ldr	q0, [x23]
    8738:	and	w20, w8, #0xff
    873c:	str	q0, [x23, #48]
    8740:	str	x8, [sp, #208]
    8744:	b	87b0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x488>
    8748:	ldrb	w8, [sp, #185]
    874c:	ldr	x9, [sp, #168]
    8750:	mov	w10, #0x2                   	// #2
    8754:	add	x11, sp, #0xa8
    8758:	cmp	w8, #0x1
    875c:	csel	w10, w20, w10, eq  // eq = none
    8760:	add	x12, sp, #0x70
    8764:	mov	w13, #0x4                   	// #4
    8768:	csel	x8, x9, x11, eq  // eq = none
    876c:	cmp	w10, #0x2
    8770:	stp	x8, x12, [sp, #192]
    8774:	strb	w10, [sp, #208]
    8778:	strb	w13, [sp, #209]
    877c:	b.ne	87b0 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x488>  // b.any
    8780:	ldrb	w9, [x8, #16]
    8784:	cbz	w9, 89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>
    8788:	ldrb	w8, [x8, #17]
    878c:	cmp	w8, #0x1
    8790:	b.eq	89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>  // b.none
    8794:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8798:	add	x8, x8, #0x0
    879c:	mov	w9, #0x103                 	// #259
    87a0:	mov	w20, #0x2                   	// #2
    87a4:	stp	x8, xzr, [sp, #88]
    87a8:	strh	w9, [sp, #104]
    87ac:	b	87e4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x4bc>
    87b0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    87b4:	add	x8, x8, #0x0
    87b8:	mov	w9, #0x103                 	// #259
    87bc:	cmp	w20, #0x1
    87c0:	stp	x8, xzr, [sp, #88]
    87c4:	strh	w9, [sp, #104]
    87c8:	b.eq	883c <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x514>  // b.none
    87cc:	cbnz	w20, 87e4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x4bc>
    87d0:	mov	w8, #0x100                 	// #256
    87d4:	mov	w20, wzr
    87d8:	stp	xzr, xzr, [x29, #-192]
    87dc:	sturh	w8, [x29, #-176]
    87e0:	b	8850 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x528>
    87e4:	ldrb	w8, [sp, #209]
    87e8:	ldr	x9, [sp, #192]
    87ec:	mov	w10, #0x2                   	// #2
    87f0:	add	x11, sp, #0xc0
    87f4:	cmp	w8, #0x1
    87f8:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    87fc:	csel	w10, w20, w10, eq  // eq = none
    8800:	add	x12, x12, #0x0
    8804:	mov	w13, #0x3                   	// #3
    8808:	csel	x8, x9, x11, eq  // eq = none
    880c:	cmp	w10, #0x2
    8810:	stp	x8, x12, [x29, #-192]
    8814:	sturb	w10, [x29, #-176]
    8818:	sturb	w13, [x29, #-175]
    881c:	b.ne	8850 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x528>  // b.any
    8820:	ldrb	w9, [x8, #16]
    8824:	cbz	w9, 89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>
    8828:	ldrb	w8, [x8, #17]
    882c:	cmp	w8, #0x1
    8830:	b.eq	89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>  // b.none
    8834:	mov	w20, #0x2                   	// #2
    8838:	b	8850 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x528>
    883c:	ldr	x8, [sp, #104]
    8840:	ldur	q0, [sp, #88]
    8844:	and	w20, w8, #0xff
    8848:	str	q0, [x23, #80]
    884c:	stur	x8, [x29, #-176]
    8850:	ldr	x8, [x21]
    8854:	mov	x0, x21
    8858:	add	x22, sp, #0x20
    885c:	ldr	x9, [x8, #16]
    8860:	add	x8, sp, #0x20
    8864:	blr	x9
    8868:	mov	w8, #0x104                 	// #260
    886c:	cmp	w20, #0x1
    8870:	strh	w8, [sp, #80]
    8874:	stp	x22, xzr, [sp, #64]
    8878:	b.eq	88a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x57c>  // b.none
    887c:	cbnz	w20, 88bc <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x594>
    8880:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8884:	mov	w8, #0x100                 	// #256
    8888:	add	x9, x9, #0x0
    888c:	mov	w10, #0x103                 	// #259
    8890:	stp	xzr, xzr, [x29, #-160]
    8894:	sturh	w8, [x29, #-144]
    8898:	stp	x9, xzr, [sp, #8]
    889c:	strh	w10, [sp, #24]
    88a0:	b	8944 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x61c>
    88a4:	ldr	x8, [sp, #80]
    88a8:	ldr	q0, [sp, #64]
    88ac:	and	w20, w8, #0xff
    88b0:	str	q0, [x23, #112]
    88b4:	stur	x8, [x29, #-144]
    88b8:	b	8924 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5fc>
    88bc:	ldurb	w8, [x29, #-175]
    88c0:	ldur	x9, [x29, #-192]
    88c4:	mov	w10, #0x2                   	// #2
    88c8:	sub	x11, x29, #0xc0
    88cc:	cmp	w8, #0x1
    88d0:	csel	w10, w20, w10, eq  // eq = none
    88d4:	add	x12, sp, #0x20
    88d8:	mov	w13, #0x4                   	// #4
    88dc:	csel	x8, x9, x11, eq  // eq = none
    88e0:	cmp	w10, #0x2
    88e4:	stp	x8, x12, [x29, #-160]
    88e8:	sturb	w10, [x29, #-144]
    88ec:	sturb	w13, [x29, #-143]
    88f0:	b.ne	8924 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x5fc>  // b.any
    88f4:	ldrb	w9, [x8, #16]
    88f8:	cbz	w9, 89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>
    88fc:	ldrb	w8, [x8, #17]
    8900:	cmp	w8, #0x1
    8904:	b.eq	89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>  // b.none
    8908:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    890c:	add	x8, x8, #0x0
    8910:	mov	w9, #0x103                 	// #259
    8914:	mov	w20, #0x2                   	// #2
    8918:	stp	x8, xzr, [sp, #8]
    891c:	strh	w9, [sp, #24]
    8920:	b	8954 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x62c>
    8924:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8928:	add	x8, x8, #0x0
    892c:	mov	w9, #0x103                 	// #259
    8930:	cmp	w20, #0x1
    8934:	stp	x8, xzr, [sp, #8]
    8938:	strh	w9, [sp, #24]
    893c:	b.eq	89c4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x69c>  // b.none
    8940:	cbnz	w20, 8954 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x62c>
    8944:	mov	w8, #0x100                 	// #256
    8948:	stp	xzr, xzr, [x29, #-128]
    894c:	sturh	w8, [x29, #-112]
    8950:	b	89d4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6ac>
    8954:	ldurb	w8, [x29, #-143]
    8958:	ldur	x9, [x29, #-160]
    895c:	mov	w10, #0x2                   	// #2
    8960:	sub	x11, x29, #0xa0
    8964:	cmp	w8, #0x1
    8968:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    896c:	csel	w10, w20, w10, eq  // eq = none
    8970:	add	x12, x12, #0x0
    8974:	mov	w13, #0x3                   	// #3
    8978:	csel	x8, x9, x11, eq  // eq = none
    897c:	cmp	w10, #0x2
    8980:	stp	x8, x12, [x29, #-128]
    8984:	sturb	w10, [x29, #-112]
    8988:	sturb	w13, [x29, #-111]
    898c:	b.ne	89d4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6ac>  // b.any
    8990:	ldrb	w9, [x8, #16]
    8994:	cbz	w9, 89a4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x67c>
    8998:	ldrb	w8, [x8, #17]
    899c:	cmp	w8, #0x1
    89a0:	b.ne	89d4 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6ac>  // b.any
    89a4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    89a8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    89ac:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    89b0:	add	x0, x0, #0x0
    89b4:	add	x1, x1, #0x0
    89b8:	add	x3, x3, #0x0
    89bc:	mov	w2, #0xb8                  	// #184
    89c0:	bl	0 <__assert_fail>
    89c4:	ldur	q0, [sp, #8]
    89c8:	ldr	x8, [sp, #24]
    89cc:	str	q0, [x23, #144]
    89d0:	stur	x8, [x29, #-112]
    89d4:	mov	x0, x19
    89d8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    89dc:	stur	x0, [x29, #-8]
    89e0:	sub	x0, x29, #0x8
    89e4:	sub	x2, x29, #0x80
    89e8:	mov	w1, #0x1                   	// #1
    89ec:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    89f0:	ldr	x0, [sp, #32]
    89f4:	add	x8, sp, #0x20
    89f8:	add	x8, x8, #0x10
    89fc:	cmp	x0, x8
    8a00:	b.eq	8a08 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x6e0>  // b.none
    8a04:	bl	0 <_ZdlPv>
    8a08:	ldr	x0, [sp, #112]
    8a0c:	add	x8, sp, #0x70
    8a10:	add	x8, x8, #0x10
    8a14:	cmp	x0, x8
    8a18:	b.eq	86d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b0>  // b.none
    8a1c:	bl	0 <_ZdlPv>
    8a20:	b	86d8 <_ZN4llvm8TGParser18ParseOperationCondEPNS_6RecordEPNS_5RecTyE+0x3b0>
    8a24:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a28:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a2c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a30:	add	x0, x0, #0x0
    8a34:	add	x1, x1, #0x0
    8a38:	add	x3, x3, #0x0
    8a3c:	mov	w2, #0x43                  	// #67
    8a40:	bl	0 <__assert_fail>
    8a44:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a48:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a4c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8a50:	add	x0, x0, #0x0
    8a54:	add	x1, x1, #0x0
    8a58:	add	x3, x3, #0x0
    8a5c:	mov	w2, #0x69                  	// #105
    8a60:	bl	0 <__assert_fail>

0000000000008a64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>:
    8a64:	str	d8, [sp, #-112]!
    8a68:	stp	x29, x30, [sp, #16]
    8a6c:	stp	x28, x27, [sp, #32]
    8a70:	stp	x26, x25, [sp, #48]
    8a74:	stp	x24, x23, [sp, #64]
    8a78:	stp	x22, x21, [sp, #80]
    8a7c:	stp	x20, x19, [sp, #96]
    8a80:	mov	x29, sp
    8a84:	sub	sp, sp, #0x360
    8a88:	ldr	w8, [x0, #40]
    8a8c:	mov	x20, x2
    8a90:	mov	x19, x0
    8a94:	mov	x21, x1
    8a98:	sub	w9, w8, #0x27
    8a9c:	cmp	w9, #0x1f
    8aa0:	b.cs	8ad4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x70>  // b.hs, b.nlast
    8aa4:	mov	x0, x19
    8aa8:	mov	x1, x21
    8aac:	mov	x2, x20
    8ab0:	add	sp, sp, #0x360
    8ab4:	ldp	x20, x19, [sp, #96]
    8ab8:	ldp	x22, x21, [sp, #80]
    8abc:	ldp	x24, x23, [sp, #64]
    8ac0:	ldp	x26, x25, [sp, #48]
    8ac4:	ldp	x28, x27, [sp, #32]
    8ac8:	ldp	x29, x30, [sp, #16]
    8acc:	ldr	d8, [sp], #112
    8ad0:	b	5900 <_ZN4llvm8TGParser14ParseOperationEPNS_6RecordEPNS_5RecTyE>
    8ad4:	sub	w8, w8, #0x4
    8ad8:	cmp	w8, #0x47
    8adc:	b.hi	9048 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5e4>  // b.pmore
    8ae0:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8ae4:	add	x9, x9, #0x0
    8ae8:	adr	x10, 8afc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x98>
    8aec:	ldrh	w11, [x9, x8, lsl #1]
    8af0:	add	x10, x10, x11, lsl #2
    8af4:	mov	w22, w3
    8af8:	br	x10
    8afc:	ldp	x8, x9, [x19, #8]
    8b00:	mov	x0, x19
    8b04:	cmp	x8, x9
    8b08:	cset	w1, eq  // eq = none
    8b0c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8b10:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8b14:	ldr	d0, [x8]
    8b18:	sub	x8, x29, #0xa8
    8b1c:	add	x8, x8, #0x10
    8b20:	str	w0, [x19, #40]
    8b24:	stur	x8, [x29, #-168]
    8b28:	stur	d0, [x29, #-160]
    8b2c:	cbz	x20, 9134 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d0>
    8b30:	ldr	w8, [x20, #8]
    8b34:	mov	x22, x20
    8b38:	cmp	w8, #0x5
    8b3c:	b.eq	9138 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6d4>  // b.none
    8b40:	ldr	x8, [x20]
    8b44:	mov	x0, x20
    8b48:	mov	x21, sp
    8b4c:	ldr	x9, [x8, #16]
    8b50:	mov	x8, sp
    8b54:	blr	x9
    8b58:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8b5c:	add	x8, x8, #0x0
    8b60:	mov	w9, #0x403                 	// #1027
    8b64:	mov	x0, x19
    8b68:	stp	x8, x21, [sp, #304]
    8b6c:	strh	w9, [sp, #320]
    8b70:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8b74:	str	x0, [sp, #224]
    8b78:	add	x0, sp, #0xe0
    8b7c:	add	x2, sp, #0x130
    8b80:	mov	w1, #0x1                   	// #1
    8b84:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    8b88:	ldr	x0, [sp]
    8b8c:	add	x8, x21, #0x10
    8b90:	cmp	x0, x8
    8b94:	b.eq	967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>  // b.none
    8b98:	bl	0 <_ZdlPv>
    8b9c:	b	967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8ba0:	mov	x0, x19
    8ba4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8ba8:	ldr	w8, [x19, #40]
    8bac:	and	w8, w8, #0xfffffffc
    8bb0:	cmp	w8, #0x48
    8bb4:	b.ne	a21c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17b8>  // b.any
    8bb8:	mov	x20, x0
    8bbc:	ldp	x0, x1, [x19, #48]
    8bc0:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    8bc4:	ldp	x8, x9, [x19, #8]
    8bc8:	mov	x23, x0
    8bcc:	mov	x0, x19
    8bd0:	cmp	x8, x9
    8bd4:	cset	w1, eq  // eq = none
    8bd8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8bdc:	cmp	w0, #0xa
    8be0:	str	w0, [x19, #40]
    8be4:	b.ne	9080 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x61c>  // b.any
    8be8:	ldp	x8, x9, [x19, #8]
    8bec:	mov	x0, x19
    8bf0:	cmp	x8, x9
    8bf4:	cset	w1, eq  // eq = none
    8bf8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8bfc:	cmp	w0, #0xb
    8c00:	str	w0, [x19, #40]
    8c04:	b.ne	925c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7f8>  // b.any
    8c08:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8c0c:	add	x8, x8, #0x0
    8c10:	b	9050 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    8c14:	ldp	x8, x9, [x19, #8]
    8c18:	mov	x0, x19
    8c1c:	cmp	x8, x9
    8c20:	cset	w1, eq  // eq = none
    8c24:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8c28:	str	w0, [x19, #40]
    8c2c:	mov	x0, x19
    8c30:	mov	x1, x21
    8c34:	mov	x2, x20
    8c38:	mov	w3, w22
    8c3c:	add	sp, sp, #0x360
    8c40:	ldp	x20, x19, [sp, #96]
    8c44:	ldp	x22, x21, [sp, #80]
    8c48:	ldp	x24, x23, [sp, #64]
    8c4c:	ldp	x26, x25, [sp, #48]
    8c50:	ldp	x28, x27, [sp, #32]
    8c54:	ldp	x29, x30, [sp, #16]
    8c58:	ldr	d8, [sp], #112
    8c5c:	b	8a64 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8c60:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    8c64:	b	9028 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5c4>
    8c68:	ldr	x8, [x19, #8]
    8c6c:	ldr	x9, [x19, #32]
    8c70:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8c74:	ldr	x21, [x19, #80]
    8c78:	mov	w10, #0xfffffffe            	// #-2
    8c7c:	ldr	d0, [x12]
    8c80:	sub	x8, x8, x9
    8c84:	add	x22, x8, x10
    8c88:	sub	x11, x29, #0xa8
    8c8c:	and	x20, x22, #0xffffffff
    8c90:	add	x1, x11, #0x10
    8c94:	cmp	x20, #0x11
    8c98:	stur	x1, [x29, #-168]
    8c9c:	stur	d0, [x29, #-160]
    8ca0:	b.cc	90b8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x654>  // b.lo, b.ul, b.last
    8ca4:	sub	x0, x29, #0xa8
    8ca8:	mov	w3, #0x8                   	// #8
    8cac:	mov	x2, x20
    8cb0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8cb4:	ldur	w8, [x29, #-156]
    8cb8:	b	90bc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x658>
    8cbc:	ldp	x8, x9, [x19, #8]
    8cc0:	mov	x0, x19
    8cc4:	cmp	x8, x9
    8cc8:	cset	w1, eq  // eq = none
    8ccc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8cd0:	sub	w8, w0, #0x11
    8cd4:	cmp	w8, #0x37
    8cd8:	str	w0, [x19, #40]
    8cdc:	b.hi	9370 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x90c>  // b.pmore
    8ce0:	mov	w9, #0x1                   	// #1
    8ce4:	lsl	x8, x9, x8
    8ce8:	mov	x9, #0x1                   	// #1
    8cec:	movk	x9, #0x2, lsl #32
    8cf0:	movk	x9, #0x90, lsl #48
    8cf4:	tst	x8, x9
    8cf8:	b.eq	9370 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x90c>  // b.none
    8cfc:	mov	x0, x19
    8d00:	mov	x1, x21
    8d04:	mov	x2, xzr
    8d08:	mov	w3, wzr
    8d0c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    8d10:	mov	x20, x0
    8d14:	cbz	x0, 98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    8d18:	ldr	w0, [x19, #40]
    8d1c:	cmp	w0, #0xc
    8d20:	b.ne	92f8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x894>  // b.any
    8d24:	ldp	x8, x9, [x19, #8]
    8d28:	mov	x0, x19
    8d2c:	cmp	x8, x9
    8d30:	cset	w1, eq  // eq = none
    8d34:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8d38:	cmp	w0, #0x4a
    8d3c:	str	w0, [x19, #40]
    8d40:	b.ne	947c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa18>  // b.any
    8d44:	ldp	x0, x1, [x19, #48]
    8d48:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    8d4c:	ldp	x8, x9, [x19, #8]
    8d50:	mov	x22, x0
    8d54:	mov	x0, x19
    8d58:	cmp	x8, x9
    8d5c:	cset	w1, eq  // eq = none
    8d60:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8d64:	str	w0, [x19, #40]
    8d68:	b	92fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x898>
    8d6c:	ldp	x20, x21, [x19, #48]
    8d70:	mov	x0, x19
    8d74:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8d78:	stur	x0, [x29, #-168]
    8d7c:	sub	x2, x29, #0xa8
    8d80:	mov	x0, x20
    8d84:	mov	x1, x21
    8d88:	bl	0 <_ZN4llvm8CodeInit3getENS_9StringRefERKNS_5SMLocE>
    8d8c:	b	9028 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5c4>
    8d90:	sub	x8, x29, #0xa8
    8d94:	add	x22, x8, #0x10
    8d98:	stur	x22, [x29, #-168]
    8d9c:	ldp	x20, x21, [x19, #48]
    8da0:	cbnz	x20, 8da8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x344>
    8da4:	cbnz	x21, a23c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17d8>
    8da8:	cmp	x21, #0x10
    8dac:	str	x21, [sp]
    8db0:	b.cc	9118 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b4>  // b.lo, b.ul, b.last
    8db4:	sub	x0, x29, #0xa8
    8db8:	mov	x1, sp
    8dbc:	mov	x2, xzr
    8dc0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    8dc4:	ldr	x8, [sp]
    8dc8:	stur	x0, [x29, #-168]
    8dcc:	stur	x8, [x29, #-152]
    8dd0:	b	911c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6b8>
    8dd4:	mov	x0, x19
    8dd8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    8ddc:	ldp	x8, x9, [x19, #8]
    8de0:	mov	x20, x0
    8de4:	mov	x0, x19
    8de8:	cmp	x8, x9
    8dec:	cset	w1, eq  // eq = none
    8df0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8df4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    8df8:	ldr	d8, [x9]
    8dfc:	sub	x8, x29, #0xa8
    8e00:	add	x8, x8, #0x10
    8e04:	cmp	w0, #0x7
    8e08:	str	w0, [x19, #40]
    8e0c:	stur	x8, [x29, #-168]
    8e10:	stur	d8, [x29, #-160]
    8e14:	b.eq	8e44 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x3e0>  // b.none
    8e18:	sub	x1, x29, #0xa8
    8e1c:	mov	x0, x19
    8e20:	mov	x2, x21
    8e24:	mov	x3, xzr
    8e28:	mov	x4, xzr
    8e2c:	bl	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    8e30:	ldur	w8, [x29, #-160]
    8e34:	cbz	w8, 967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    8e38:	ldr	w8, [x19, #40]
    8e3c:	cmp	w8, #0x7
    8e40:	b.ne	937c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x918>  // b.any
    8e44:	ldp	x8, x9, [x19, #8]
    8e48:	mov	x0, x19
    8e4c:	cmp	x8, x9
    8e50:	cset	w1, eq  // eq = none
    8e54:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    8e58:	str	w0, [x19, #40]
    8e5c:	ldur	w26, [x29, #-160]
    8e60:	mov	x8, sp
    8e64:	add	x19, x8, #0x10
    8e68:	str	x19, [sp]
    8e6c:	str	d8, [sp, #8]
    8e70:	cbz	w26, 9230 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7cc>
    8e74:	adrp	x21, 0 <_ZN4llvm8BitRecTy6SharedE>
    8e78:	ldr	x21, [x21]
    8e7c:	mov	w25, wzr
    8e80:	mov	w9, wzr
    8e84:	mov	w8, #0x10                  	// #16
    8e88:	ldur	x10, [x29, #-168]
    8e8c:	ldr	x22, [x10, w25, uxtw #3]
    8e90:	cbz	x22, a1bc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1758>
    8e94:	ldrb	w10, [x22, #8]
    8e98:	cmp	w10, #0x3
    8e9c:	b.ne	8f10 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4ac>  // b.any
    8ea0:	ldr	w23, [x22, #32]
    8ea4:	cbz	w23, 8fe8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    8ea8:	add	x24, x22, #0x28
    8eac:	sub	w10, w23, #0x1
    8eb0:	ldr	x27, [x24, w10, uxtw #3]
    8eb4:	cmp	w9, w8
    8eb8:	b.cs	8ef4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x490>  // b.hs, b.nlast
    8ebc:	ldr	x8, [sp]
    8ec0:	str	x27, [x8, w9, uxtw #3]
    8ec4:	ldp	w9, w8, [sp, #8]
    8ec8:	cmp	w9, w8
    8ecc:	b.cs	a15c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16f8>  // b.hs, b.nlast
    8ed0:	add	w9, w9, #0x1
    8ed4:	subs	x23, x23, #0x1
    8ed8:	str	w9, [sp, #8]
    8edc:	b.eq	8fe8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>  // b.none
    8ee0:	ldr	w10, [x22, #32]
    8ee4:	sub	w11, w23, #0x1
    8ee8:	cmp	w10, w11
    8eec:	b.hi	8eac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x448>  // b.pmore
    8ef0:	b	a17c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1718>
    8ef4:	mov	x0, sp
    8ef8:	mov	w3, #0x8                   	// #8
    8efc:	mov	x1, x19
    8f00:	mov	x2, xzr
    8f04:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8f08:	ldr	w9, [sp, #8]
    8f0c:	b	8ebc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x458>
    8f10:	cmp	w10, #0x13
    8f14:	b.ne	8fa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x540>  // b.any
    8f18:	ldr	x10, [x22, #16]
    8f1c:	cbz	x10, a1fc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1798>
    8f20:	ldr	w11, [x10, #8]
    8f24:	cmp	w11, #0x1
    8f28:	b.ne	8fa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x540>  // b.any
    8f2c:	ldr	w10, [x10, #24]
    8f30:	cbz	w10, 8fe8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    8f34:	sub	w23, w10, #0x1
    8f38:	ldr	x8, [x22]
    8f3c:	mov	x0, x22
    8f40:	mov	w1, w23
    8f44:	ldr	x8, [x8, #104]
    8f48:	blr	x8
    8f4c:	ldp	w8, w9, [sp, #8]
    8f50:	mov	x24, x0
    8f54:	cmp	w8, w9
    8f58:	b.cs	8f88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x524>  // b.hs, b.nlast
    8f5c:	ldr	x9, [sp]
    8f60:	str	x24, [x9, w8, uxtw #3]
    8f64:	ldp	w9, w8, [sp, #8]
    8f68:	cmp	w9, w8
    8f6c:	b.cs	a15c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16f8>  // b.hs, b.nlast
    8f70:	sub	w23, w23, #0x1
    8f74:	add	w9, w9, #0x1
    8f78:	cmn	w23, #0x1
    8f7c:	str	w9, [sp, #8]
    8f80:	b.ne	8f38 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4d4>  // b.any
    8f84:	b	8fe8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x584>
    8f88:	mov	x0, sp
    8f8c:	mov	w3, #0x8                   	// #8
    8f90:	mov	x1, x19
    8f94:	mov	x2, xzr
    8f98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    8f9c:	ldr	w8, [sp, #8]
    8fa0:	b	8f5c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x4f8>
    8fa4:	ldr	x8, [x22]
    8fa8:	mov	x0, x22
    8fac:	mov	x1, x21
    8fb0:	ldr	x8, [x8, #56]
    8fb4:	blr	x8
    8fb8:	cbz	x0, 9488 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xa24>
    8fbc:	ldp	w8, w9, [sp, #8]
    8fc0:	mov	x22, x0
    8fc4:	cmp	w8, w9
    8fc8:	b.cs	9004 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5a0>  // b.hs, b.nlast
    8fcc:	ldr	x9, [sp]
    8fd0:	str	x22, [x9, w8, uxtw #3]
    8fd4:	ldp	w9, w8, [sp, #8]
    8fd8:	cmp	w9, w8
    8fdc:	b.cs	a15c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16f8>  // b.hs, b.nlast
    8fe0:	add	w9, w9, #0x1
    8fe4:	str	w9, [sp, #8]
    8fe8:	add	w25, w25, #0x1
    8fec:	cmp	w25, w26
    8ff0:	b.eq	91ec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x788>  // b.none
    8ff4:	ldur	w10, [x29, #-160]
    8ff8:	cmp	w10, w25
    8ffc:	b.hi	8e88 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x424>  // b.pmore
    9000:	b	a19c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1738>
    9004:	mov	x0, sp
    9008:	mov	w3, #0x8                   	// #8
    900c:	mov	x1, x19
    9010:	mov	x2, xzr
    9014:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    9018:	ldr	w8, [sp, #8]
    901c:	b	8fcc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x568>
    9020:	ldr	x0, [x19, #80]
    9024:	bl	0 <_ZN4llvm7IntInit3getEl>
    9028:	ldp	x8, x9, [x19, #8]
    902c:	mov	x20, x0
    9030:	mov	x0, x19
    9034:	cmp	x8, x9
    9038:	cset	w1, eq  // eq = none
    903c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9040:	str	w0, [x19, #40]
    9044:	b	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    9048:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    904c:	add	x8, x8, #0x0
    9050:	mov	w9, #0x103                 	// #259
    9054:	mov	x0, x19
    9058:	stp	x8, xzr, [x29, #-168]
    905c:	sturh	w9, [x29, #-152]
    9060:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9064:	str	x0, [sp]
    9068:	mov	x0, sp
    906c:	sub	x2, x29, #0xa8
    9070:	mov	w1, #0x1                   	// #1
    9074:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9078:	mov	x20, xzr
    907c:	b	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    9080:	mov	x0, x19
    9084:	mov	x1, x21
    9088:	mov	x2, x23
    908c:	mov	x3, x20
    9090:	mov	w4, w22
    9094:	add	sp, sp, #0x360
    9098:	ldp	x20, x19, [sp, #96]
    909c:	ldp	x22, x21, [sp, #80]
    90a0:	ldp	x24, x23, [sp, #64]
    90a4:	ldp	x26, x25, [sp, #48]
    90a8:	ldp	x28, x27, [sp, #32]
    90ac:	ldp	x29, x30, [sp, #16]
    90b0:	ldr	d8, [sp], #112
    90b4:	b	54f4 <_ZN4llvm8TGParser12ParseIDValueEPNS_6RecordEPNS_10StringInitENS_5SMLocENS0_11IDParseModeE>
    90b8:	mov	w8, #0x10                  	// #16
    90bc:	cmp	x8, x20
    90c0:	b.cc	a15c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16f8>  // b.lo, b.ul, b.last
    90c4:	stur	w22, [x29, #-160]
    90c8:	cbz	x20, 90dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x678>
    90cc:	ldur	x0, [x29, #-168]
    90d0:	lsl	x2, x20, #3
    90d4:	mov	w1, wzr
    90d8:	bl	0 <memset>
    90dc:	cbz	w22, 914c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6e8>
    90e0:	mov	x20, xzr
    90e4:	and	x22, x22, #0xffffffff
    90e8:	lsr	x8, x21, x20
    90ec:	and	w0, w8, #0x1
    90f0:	bl	0 <_ZN4llvm7BitInit3getEb>
    90f4:	ldur	w8, [x29, #-160]
    90f8:	cmp	x20, x8
    90fc:	b.cs	a19c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1738>  // b.hs, b.nlast
    9100:	ldur	x9, [x29, #-168]
    9104:	str	x0, [x9, x20, lsl #3]
    9108:	add	x20, x20, #0x1
    910c:	cmp	x22, x20
    9110:	b.ne	90e8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x684>  // b.any
    9114:	b	9150 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x6ec>
    9118:	mov	x0, x22
    911c:	cbz	x21, 9188 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x724>
    9120:	cmp	x21, #0x1
    9124:	b.ne	917c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x718>  // b.any
    9128:	ldrb	w8, [x20]
    912c:	strb	w8, [x0]
    9130:	b	9188 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x724>
    9134:	mov	x22, xzr
    9138:	cmp	w0, #0x5
    913c:	b.eq	93b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x950>  // b.none
    9140:	cbz	x22, 9388 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x924>
    9144:	ldr	x4, [x22, #24]
    9148:	b	938c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x928>
    914c:	ldur	w8, [x29, #-160]
    9150:	ldur	x0, [x29, #-168]
    9154:	mov	w1, w8
    9158:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    915c:	ldp	x8, x9, [x19, #8]
    9160:	mov	x20, x0
    9164:	mov	x0, x19
    9168:	cmp	x8, x9
    916c:	cset	w1, eq  // eq = none
    9170:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9174:	str	w0, [x19, #40]
    9178:	b	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>
    917c:	mov	x1, x20
    9180:	mov	x2, x21
    9184:	bl	0 <memcpy>
    9188:	ldr	x8, [sp]
    918c:	ldur	x9, [x29, #-168]
    9190:	stur	x8, [x29, #-160]
    9194:	strb	wzr, [x9, x8]
    9198:	ldp	x8, x9, [x19, #8]
    919c:	mov	x0, x19
    91a0:	cmp	x8, x9
    91a4:	cset	w1, eq  // eq = none
    91a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    91ac:	cmp	w0, #0x49
    91b0:	str	w0, [x19, #40]
    91b4:	b.ne	91c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x764>  // b.any
    91b8:	ldp	x1, x2, [x19, #48]
    91bc:	sub	x0, x29, #0xa8
    91c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    91c4:	b	9198 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x734>
    91c8:	ldp	x0, x1, [x29, #-168]
    91cc:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    91d0:	ldur	x8, [x29, #-168]
    91d4:	mov	x20, x0
    91d8:	cmp	x8, x22
    91dc:	b.eq	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>  // b.none
    91e0:	mov	x0, x8
    91e4:	bl	0 <_ZdlPv>
    91e8:	b	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    91ec:	ldr	x19, [sp]
    91f0:	cbz	w9, 9230 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7cc>
    91f4:	mov	w1, w9
    91f8:	add	x8, x19, x1, lsl #3
    91fc:	sub	x8, x8, #0x8
    9200:	cmp	x8, x19
    9204:	b.ls	9234 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7d0>  // b.plast
    9208:	add	x9, x19, #0x8
    920c:	ldr	x10, [x8]
    9210:	ldur	x11, [x9, #-8]
    9214:	stur	x10, [x9, #-8]
    9218:	str	x11, [x8], #-8
    921c:	cmp	x9, x8
    9220:	add	x9, x9, #0x8
    9224:	b.cc	920c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7a8>  // b.lo, b.ul, b.last
    9228:	ldr	x19, [sp]
    922c:	b	9234 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7d0>
    9230:	mov	x1, xzr
    9234:	mov	x0, x19
    9238:	bl	0 <_ZN4llvm8BitsInit3getENS_8ArrayRefIPNS_4InitEEE>
    923c:	mov	x20, x0
    9240:	ldr	x0, [sp]
    9244:	mov	x8, sp
    9248:	add	x8, x8, #0x10
    924c:	cmp	x0, x8
    9250:	b.eq	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>  // b.none
    9254:	bl	0 <free>
    9258:	b	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>
    925c:	ldr	x8, [x19, #344]
    9260:	ldr	x24, [x23, #32]
    9264:	ldr	x27, [x8, #16]
    9268:	add	x25, x8, #0x8
    926c:	cbz	x27, 9698 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc34>
    9270:	ldr	x22, [x23, #24]
    9274:	mov	x26, x25
    9278:	b	928c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x828>
    927c:	add	x8, x27, #0x10
    9280:	mov	x26, x27
    9284:	ldr	x27, [x8]
    9288:	cbz	x27, 92c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x864>
    928c:	ldr	x28, [x27, #40]
    9290:	cmp	x24, x28
    9294:	csel	x2, x24, x28, cc  // cc = lo, ul, last
    9298:	cbz	x2, 92b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x850>
    929c:	ldr	x0, [x27, #32]
    92a0:	mov	x1, x22
    92a4:	bl	0 <memcmp>
    92a8:	cbz	w0, 92b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x850>
    92ac:	tbz	w0, #31, 927c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x818>
    92b0:	b	92bc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x858>
    92b4:	cmp	x28, x24
    92b8:	b.cs	927c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x818>  // b.hs, b.nlast
    92bc:	add	x8, x27, #0x18
    92c0:	ldr	x27, [x8]
    92c4:	cbnz	x27, 928c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x828>
    92c8:	cmp	x26, x25
    92cc:	b.eq	969c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc38>  // b.none
    92d0:	ldr	x27, [x26, #40]
    92d4:	cmp	x27, x24
    92d8:	csel	x2, x27, x24, cc  // cc = lo, ul, last
    92dc:	cbz	x2, 9690 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc2c>
    92e0:	ldr	x1, [x26, #32]
    92e4:	mov	x0, x22
    92e8:	bl	0 <memcmp>
    92ec:	cbz	w0, 9690 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc2c>
    92f0:	tbnz	w0, #31, 9698 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc34>
    92f4:	b	969c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc38>
    92f8:	mov	x22, xzr
    92fc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9300:	ldr	d0, [x9]
    9304:	sub	x8, x29, #0xa8
    9308:	add	x8, x8, #0x10
    930c:	cmp	w0, #0x9
    9310:	stur	x8, [x29, #-168]
    9314:	stur	d0, [x29, #-160]
    9318:	b.eq	9340 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x8dc>  // b.none
    931c:	sub	x1, x29, #0xa8
    9320:	mov	x0, x19
    9324:	mov	x2, x21
    9328:	bl	a268 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>
    932c:	ldur	w8, [x29, #-160]
    9330:	cbz	w8, 967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    9334:	ldr	w8, [x19, #40]
    9338:	cmp	w8, #0x9
    933c:	b.ne	9778 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd14>  // b.any
    9340:	ldp	x8, x9, [x19, #8]
    9344:	mov	x0, x19
    9348:	cmp	x8, x9
    934c:	cset	w1, eq  // eq = none
    9350:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9354:	str	w0, [x19, #40]
    9358:	ldur	x2, [x29, #-168]
    935c:	ldur	w3, [x29, #-160]
    9360:	mov	x0, x20
    9364:	mov	x1, x22
    9368:	bl	0 <_ZN4llvm7DagInit3getEPNS_4InitEPNS_10StringInitENS_8ArrayRefISt4pairIS2_S4_EEE>
    936c:	b	98d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe70>
    9370:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9374:	add	x8, x8, #0x0
    9378:	b	9050 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    937c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9380:	add	x8, x8, #0x0
    9384:	b	9780 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>
    9388:	mov	x4, xzr
    938c:	sub	x1, x29, #0xa8
    9390:	mov	x0, x19
    9394:	mov	x2, x21
    9398:	mov	x3, xzr
    939c:	bl	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    93a0:	ldur	w8, [x29, #-160]
    93a4:	cbz	w8, 967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    93a8:	ldr	w8, [x19, #40]
    93ac:	cmp	w8, #0x5
    93b0:	b.ne	9564 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb00>  // b.any
    93b4:	ldp	x8, x9, [x19, #8]
    93b8:	mov	x0, x19
    93bc:	cmp	x8, x9
    93c0:	cset	w1, eq  // eq = none
    93c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    93c8:	cmp	w0, #0xa
    93cc:	str	w0, [x19, #40]
    93d0:	b.ne	9424 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9c0>  // b.any
    93d4:	ldp	x8, x9, [x19, #8]
    93d8:	mov	x0, x19
    93dc:	cmp	x8, x9
    93e0:	cset	w1, eq  // eq = none
    93e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    93e8:	str	w0, [x19, #40]
    93ec:	mov	x0, x19
    93f0:	bl	5200 <_ZN4llvm8TGParser9ParseTypeEv>
    93f4:	cbz	x0, 967c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc18>
    93f8:	ldr	w8, [x19, #40]
    93fc:	cmp	w8, #0xb
    9400:	b.ne	9684 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc20>  // b.any
    9404:	ldp	x8, x9, [x19, #8]
    9408:	mov	x21, x0
    940c:	mov	x0, x19
    9410:	cmp	x8, x9
    9414:	cset	w1, eq  // eq = none
    9418:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    941c:	str	w0, [x19, #40]
    9420:	b	9428 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9c4>
    9424:	mov	x21, xzr
    9428:	ldur	w8, [x29, #-160]
    942c:	cbz	w8, 9538 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xad4>
    9430:	ldur	x23, [x29, #-168]
    9434:	mov	x0, xzr
    9438:	lsl	x24, x8, #3
    943c:	b	9450 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9ec>
    9440:	mov	x0, x1
    9444:	subs	x24, x24, #0x8
    9448:	add	x23, x23, #0x8
    944c:	b.eq	953c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xad8>  // b.none
    9450:	ldr	x8, [x23]
    9454:	cbz	x8, a1dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1778>
    9458:	ldrb	w9, [x8, #8]
    945c:	sub	w9, w9, #0x1
    9460:	cmp	w9, #0x16
    9464:	b.hi	9444 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9e0>  // b.pmore
    9468:	ldr	x1, [x8, #16]
    946c:	cbz	x0, 9440 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9dc>
    9470:	bl	0 <_ZN4llvm12resolveTypesEPNS_5RecTyES1_>
    9474:	cbnz	x0, 9444 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x9e0>
    9478:	b	9558 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xaf4>
    947c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9480:	add	x8, x8, #0x0
    9484:	b	9050 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x5ec>
    9488:	mov	w8, #0x109                 	// #265
    948c:	mov	w10, #0x903                 	// #2307
    9490:	sturh	w8, [x29, #-240]
    9494:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9498:	stp	xzr, xzr, [x29, #-256]
    949c:	stur	w25, [x29, #-256]
    94a0:	sub	x11, x29, #0xe0
    94a4:	add	x8, x8, #0x0
    94a8:	sturh	w10, [x29, #-208]
    94ac:	ldur	w10, [x29, #-160]
    94b0:	stp	x11, x8, [x29, #-192]
    94b4:	ldur	x8, [x29, #-256]
    94b8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    94bc:	add	x9, x9, #0x0
    94c0:	cmp	w10, w25
    94c4:	mov	w10, #0x302                 	// #770
    94c8:	stp	x9, x8, [x29, #-224]
    94cc:	sturh	w10, [x29, #-176]
    94d0:	b.ls	a19c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1738>  // b.plast
    94d4:	ldur	x8, [x29, #-168]
    94d8:	add	x19, sp, #0x130
    94dc:	ldr	x0, [x8, w25, uxtw #3]
    94e0:	ldr	x8, [x0]
    94e4:	ldr	x9, [x8, #40]
    94e8:	add	x8, sp, #0x130
    94ec:	blr	x9
    94f0:	ldurb	w8, [x29, #-176]
    94f4:	mov	w9, #0x104                 	// #260
    94f8:	strh	w9, [sp, #592]
    94fc:	str	xzr, [sp, #584]
    9500:	cmp	w8, #0x1
    9504:	str	x19, [sp, #576]
    9508:	b.eq	97b0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd4c>  // b.none
    950c:	cbnz	w8, 97c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd64>
    9510:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9514:	mov	w8, #0x100                 	// #256
    9518:	add	x9, x9, #0x0
    951c:	mov	w10, #0x103                 	// #259
    9520:	stp	xzr, xzr, [sp, #144]
    9524:	strh	w8, [sp, #160]
    9528:	str	xzr, [sp, #552]
    952c:	str	x9, [sp, #544]
    9530:	strh	w10, [sp, #560]
    9534:	b	9858 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdf4>
    9538:	mov	x0, xzr
    953c:	cbz	x21, 9570 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb0c>
    9540:	cbz	x0, 9578 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb14>
    9544:	ldr	x8, [x0]
    9548:	mov	x1, x21
    954c:	ldr	x8, [x8, #24]
    9550:	blr	x8
    9554:	tbnz	w0, #0, 9578 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xb14>
    9558:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    955c:	add	x8, x8, #0x0
    9560:	b	9780 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>
    9564:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9568:	add	x8, x8, #0x0
    956c:	b	9780 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>
    9570:	mov	x21, x0
    9574:	cbz	x0, 98bc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe58>
    9578:	cbz	x22, 98c4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe60>
    957c:	ldr	x8, [x21]
    9580:	ldr	x1, [x22, #24]
    9584:	mov	x0, x21
    9588:	ldr	x8, [x8, #24]
    958c:	blr	x8
    9590:	tbnz	w0, #0, 98c4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe60>
    9594:	ldr	x8, [x21]
    9598:	mov	x0, x21
    959c:	mov	x20, sp
    95a0:	ldr	x9, [x8, #16]
    95a4:	mov	x8, sp
    95a8:	blr	x9
    95ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    95b0:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    95b4:	add	x8, x8, #0x0
    95b8:	mov	w9, #0x403                 	// #1027
    95bc:	sub	x10, x29, #0xc0
    95c0:	add	x11, x11, #0x0
    95c4:	mov	w12, #0x302                 	// #770
    95c8:	stp	x8, x20, [x29, #-192]
    95cc:	sturh	w9, [x29, #-176]
    95d0:	stp	x10, x11, [sp, #144]
    95d4:	strh	w12, [sp, #160]
    95d8:	cbnz	wzr, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    95dc:	ldurb	w8, [x29, #-175]
    95e0:	cmp	w8, #0x1
    95e4:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    95e8:	ldr	x0, [x22, #24]
    95ec:	add	x20, sp, #0x130
    95f0:	ldr	x8, [x0]
    95f4:	ldr	x9, [x8, #16]
    95f8:	add	x8, sp, #0x130
    95fc:	blr	x9
    9600:	ldrb	w8, [sp, #161]
    9604:	ldr	x9, [sp, #144]
    9608:	add	x10, sp, #0x90
    960c:	mov	w11, #0x402                 	// #1026
    9610:	cmp	w8, #0x1
    9614:	csel	x8, x9, x10, eq  // eq = none
    9618:	stp	x8, x20, [sp, #224]
    961c:	strh	w11, [sp, #240]
    9620:	ldrb	w9, [x8, #16]
    9624:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9628:	ldrb	w8, [x8, #17]
    962c:	cmp	w8, #0x1
    9630:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9634:	mov	x0, x19
    9638:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    963c:	stur	x0, [x29, #-224]
    9640:	sub	x0, x29, #0xe0
    9644:	add	x2, sp, #0xe0
    9648:	mov	w1, #0x1                   	// #1
    964c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9650:	ldr	x0, [sp, #304]
    9654:	add	x8, sp, #0x130
    9658:	add	x8, x8, #0x10
    965c:	cmp	x0, x8
    9660:	b.eq	9668 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc04>  // b.none
    9664:	bl	0 <_ZdlPv>
    9668:	ldr	x0, [sp]
    966c:	mov	x8, sp
    9670:	add	x8, x8, #0x10
    9674:	cmp	x0, x8
    9678:	b.ne	8b98 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x134>  // b.any
    967c:	mov	x20, xzr
    9680:	b	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>
    9684:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9688:	add	x8, x8, #0x0
    968c:	b	9780 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xd1c>
    9690:	cmp	x24, x27
    9694:	b.cs	969c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xc38>  // b.hs, b.nlast
    9698:	mov	x26, x25
    969c:	cmp	x26, x25
    96a0:	b.eq	9734 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcd0>  // b.none
    96a4:	ldr	x22, [x26, #64]
    96a8:	cbz	x22, 9734 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xcd0>
    96ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    96b0:	ldr	d0, [x8]
    96b4:	sub	x8, x29, #0xa8
    96b8:	add	x23, x8, #0x10
    96bc:	sub	x1, x29, #0xa8
    96c0:	mov	x0, x19
    96c4:	mov	x2, x21
    96c8:	mov	x3, x22
    96cc:	mov	x4, xzr
    96d0:	stur	x23, [x29, #-168]
    96d4:	stur	d0, [x29, #-160]
    96d8:	bl	4804 <_ZN4llvm8TGParser14ParseValueListERNS_15SmallVectorImplIPNS_4InitEEEPNS_6RecordES7_PNS_5RecTyE>
    96dc:	ldur	w8, [x29, #-160]
    96e0:	cbz	w8, 9948 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xee4>
    96e4:	ldr	w8, [x19, #40]
    96e8:	cmp	w8, #0xb
    96ec:	b.ne	9918 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xeb4>  // b.any
    96f0:	ldp	x8, x9, [x19, #8]
    96f4:	mov	x0, x19
    96f8:	cmp	x8, x9
    96fc:	cset	w1, eq  // eq = none
    9700:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    9704:	str	w0, [x19, #40]
    9708:	ldr	w27, [x22, #64]
    970c:	ldur	w8, [x29, #-160]
    9710:	cmp	w27, w8
    9714:	b.cs	99a0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf3c>  // b.hs, b.nlast
    9718:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    971c:	add	x8, x8, #0x0
    9720:	mov	w9, #0x103                 	// #259
    9724:	stp	x8, xzr, [sp]
    9728:	strh	w9, [sp, #16]
    972c:	str	x20, [sp, #304]
    9730:	b	9938 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xed4>
    9734:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9738:	ldr	x8, [x23, #24]
    973c:	add	x10, x10, #0x0
    9740:	add	x11, sp, #0x130
    9744:	mov	w9, #0x503                 	// #1283
    9748:	stp	x10, x11, [sp]
    974c:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9750:	strh	w9, [sp, #16]
    9754:	mov	x9, sp
    9758:	add	x10, x10, #0x0
    975c:	stp	x9, x10, [x29, #-168]
    9760:	mov	w9, #0x302                 	// #770
    9764:	sturh	w9, [x29, #-152]
    9768:	stp	x8, x24, [sp, #304]
    976c:	str	x20, [sp, #224]
    9770:	add	x0, sp, #0xe0
    9774:	b	906c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x608>
    9778:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    977c:	add	x8, x8, #0x0
    9780:	mov	w9, #0x103                 	// #259
    9784:	mov	x0, x19
    9788:	stp	x8, xzr, [sp]
    978c:	strh	w9, [sp, #16]
    9790:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9794:	str	x0, [sp, #304]
    9798:	add	x0, sp, #0x130
    979c:	mov	x2, sp
    97a0:	mov	w1, #0x1                   	// #1
    97a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    97a8:	mov	x20, xzr
    97ac:	b	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>
    97b0:	ldr	x8, [sp, #592]
    97b4:	ldr	q0, [sp, #576]
    97b8:	str	x8, [sp, #160]
    97bc:	and	w8, w8, #0xff
    97c0:	str	q0, [sp, #144]
    97c4:	b	9834 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdd0>
    97c8:	ldurb	w9, [x29, #-175]
    97cc:	ldur	x10, [x29, #-192]
    97d0:	mov	w11, #0x2                   	// #2
    97d4:	sub	x12, x29, #0xc0
    97d8:	cmp	w9, #0x1
    97dc:	csel	w11, w8, w11, eq  // eq = none
    97e0:	add	x13, sp, #0x130
    97e4:	mov	w14, #0x4                   	// #4
    97e8:	csel	x9, x10, x12, eq  // eq = none
    97ec:	cmp	w11, #0x2
    97f0:	stp	x9, x13, [sp, #144]
    97f4:	strb	w11, [sp, #160]
    97f8:	strb	w14, [sp, #161]
    97fc:	b.ne	9834 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xdd0>  // b.any
    9800:	ldrb	w8, [x9, #16]
    9804:	cbz	w8, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9808:	ldrb	w8, [x9, #17]
    980c:	cmp	w8, #0x1
    9810:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9814:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9818:	add	x8, x8, #0x0
    981c:	mov	w9, #0x103                 	// #259
    9820:	str	x8, [sp, #544]
    9824:	mov	w8, #0x2                   	// #2
    9828:	str	xzr, [sp, #552]
    982c:	strh	w9, [sp, #560]
    9830:	b	9868 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe04>
    9834:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9838:	add	x9, x9, #0x0
    983c:	mov	w10, #0x103                 	// #259
    9840:	cmp	w8, #0x1
    9844:	str	xzr, [sp, #552]
    9848:	str	x9, [sp, #544]
    984c:	strh	w10, [sp, #560]
    9850:	b.eq	995c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xef8>  // b.none
    9854:	cbnz	w8, 9868 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe04>
    9858:	mov	w8, #0x100                 	// #256
    985c:	stp	xzr, xzr, [sp, #224]
    9860:	strh	w8, [sp, #240]
    9864:	b	996c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf08>
    9868:	ldrb	w9, [sp, #161]
    986c:	ldr	x10, [sp, #144]
    9870:	mov	w11, #0x2                   	// #2
    9874:	add	x12, sp, #0x90
    9878:	cmp	w9, #0x1
    987c:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9880:	csel	w9, w8, w11, eq  // eq = none
    9884:	add	x13, x13, #0x0
    9888:	mov	w14, #0x3                   	// #3
    988c:	csel	x8, x10, x12, eq  // eq = none
    9890:	cmp	w9, #0x2
    9894:	stp	x8, x13, [sp, #224]
    9898:	strb	w9, [sp, #240]
    989c:	strb	w14, [sp, #241]
    98a0:	b.ne	996c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf08>  // b.any
    98a4:	ldrb	w9, [x8, #16]
    98a8:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    98ac:	ldrb	w8, [x8, #17]
    98b0:	cmp	w8, #0x1
    98b4:	b.ne	996c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf08>  // b.any
    98b8:	b	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    98bc:	cbz	x20, 9aec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1088>
    98c0:	ldr	x21, [x22, #24]
    98c4:	ldur	x0, [x29, #-168]
    98c8:	ldur	w1, [x29, #-160]
    98cc:	mov	x2, x21
    98d0:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    98d4:	mov	x20, x0
    98d8:	ldur	x0, [x29, #-168]
    98dc:	sub	x8, x29, #0xa8
    98e0:	add	x8, x8, #0x10
    98e4:	cmp	x0, x8
    98e8:	b.eq	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>  // b.none
    98ec:	bl	0 <free>
    98f0:	mov	x0, x20
    98f4:	add	sp, sp, #0x360
    98f8:	ldp	x20, x19, [sp, #96]
    98fc:	ldp	x22, x21, [sp, #80]
    9900:	ldp	x24, x23, [sp, #64]
    9904:	ldp	x26, x25, [sp, #48]
    9908:	ldp	x28, x27, [sp, #32]
    990c:	ldp	x29, x30, [sp, #16]
    9910:	ldr	d8, [sp], #112
    9914:	ret
    9918:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    991c:	add	x8, x8, #0x0
    9920:	mov	w9, #0x103                 	// #259
    9924:	mov	x0, x19
    9928:	stp	x8, xzr, [sp]
    992c:	strh	w9, [sp, #16]
    9930:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9934:	str	x0, [sp, #304]
    9938:	add	x0, sp, #0x130
    993c:	mov	x2, sp
    9940:	mov	w1, #0x1                   	// #1
    9944:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9948:	mov	x20, xzr
    994c:	ldur	x0, [x29, #-168]
    9950:	cmp	x0, x23
    9954:	b.ne	98ec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe88>  // b.any
    9958:	b	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    995c:	ldr	q0, [sp, #544]
    9960:	ldr	x8, [sp, #560]
    9964:	str	q0, [sp, #224]
    9968:	str	x8, [sp, #240]
    996c:	add	x0, sp, #0x200
    9970:	add	x2, sp, #0xe0
    9974:	mov	w1, #0x1                   	// #1
    9978:	str	x20, [sp, #512]
    997c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9980:	ldr	x0, [sp, #304]
    9984:	add	x8, sp, #0x130
    9988:	add	x8, x8, #0x10
    998c:	cmp	x0, x8
    9990:	b.eq	9998 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf34>  // b.none
    9994:	bl	0 <_ZdlPv>
    9998:	mov	x20, xzr
    999c:	b	9240 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x7dc>
    99a0:	cbz	w27, 9c04 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11a0>
    99a4:	ldr	x26, [x22, #56]
    99a8:	mov	x25, xzr
    99ac:	add	x24, sp, #0xc8
    99b0:	b	99d4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf70>
    99b4:	ldr	x0, [x28, #16]
    99b8:	ldr	x8, [x0]
    99bc:	ldr	x8, [x8, #24]
    99c0:	blr	x8
    99c4:	tbz	w0, #0, 9b20 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10bc>
    99c8:	add	x25, x25, #0x1
    99cc:	cmp	x25, x27
    99d0:	b.eq	9c00 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x119c>  // b.none
    99d4:	ldr	w9, [x22, #80]
    99d8:	cbz	w9, 9a08 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfa4>
    99dc:	ldr	x28, [x22, #72]
    99e0:	ldr	x8, [x26, x25, lsl #3]
    99e4:	add	x9, x9, x9, lsl #1
    99e8:	lsl	x9, x9, #3
    99ec:	mov	x10, x28
    99f0:	ldr	x11, [x10], #24
    99f4:	cmp	x11, x8
    99f8:	b.eq	9a0c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xfa8>  // b.none
    99fc:	subs	x9, x9, #0x18
    9a00:	mov	x28, x10
    9a04:	b.ne	99f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf8c>  // b.any
    9a08:	mov	x28, xzr
    9a0c:	ldur	w8, [x29, #-160]
    9a10:	cmp	x25, x8
    9a14:	b.cs	99b4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf50>  // b.hs, b.nlast
    9a18:	ldur	x8, [x29, #-168]
    9a1c:	ldr	x19, [x8, x25, lsl #3]
    9a20:	cbz	x19, a1dc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1778>
    9a24:	ldrb	w8, [x19, #8]
    9a28:	sub	w8, w8, #0x1
    9a2c:	cmp	w8, #0x16
    9a30:	b.hi	9b20 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x10bc>  // b.pmore
    9a34:	ldr	x0, [x19, #16]
    9a38:	ldr	x9, [x28, #8]
    9a3c:	ldr	x8, [x0]
    9a40:	and	x21, x9, #0xfffffffffffffff8
    9a44:	mov	x1, x21
    9a48:	ldr	x8, [x8, #24]
    9a4c:	blr	x8
    9a50:	tbnz	w0, #0, 99c8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xf64>
    9a54:	stp	xzr, xzr, [sp, #408]
    9a58:	str	w25, [sp, #408]
    9a5c:	mov	w10, #0x903                 	// #2307
    9a60:	mov	w8, #0x109                 	// #265
    9a64:	strh	w10, [sp, #448]
    9a68:	ldr	x10, [sp, #408]
    9a6c:	strh	w8, [sp, #424]
    9a70:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a74:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9a78:	add	x11, sp, #0x1b0
    9a7c:	add	x8, x8, #0x0
    9a80:	add	x9, x9, #0x0
    9a84:	stp	x11, x8, [sp, #456]
    9a88:	mov	w8, #0x302                 	// #770
    9a8c:	stp	x9, x10, [sp, #432]
    9a90:	strh	w8, [sp, #472]
    9a94:	ldr	x0, [x28]
    9a98:	mov	x22, sp
    9a9c:	ldr	x8, [x0]
    9aa0:	ldr	x9, [x8, #48]
    9aa4:	mov	x8, sp
    9aa8:	blr	x9
    9aac:	ldrb	w8, [sp, #472]
    9ab0:	mov	w9, #0x104                 	// #260
    9ab4:	strh	w9, [sp, #400]
    9ab8:	stp	x22, xzr, [sp, #384]
    9abc:	cmp	w8, #0x1
    9ac0:	b.eq	9c2c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11c8>  // b.none
    9ac4:	cbnz	w8, 9c44 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x11e0>
    9ac8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9acc:	mov	w8, #0x100                 	// #256
    9ad0:	add	x9, x9, #0x0
    9ad4:	mov	w10, #0x103                 	// #259
    9ad8:	stp	xzr, xzr, [sp, #480]
    9adc:	strh	w8, [sp, #496]
    9ae0:	stp	x9, xzr, [sp, #360]
    9ae4:	strh	w10, [sp, #376]
    9ae8:	b	9ccc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1268>
    9aec:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9af0:	add	x8, x8, #0x0
    9af4:	mov	w9, #0x103                 	// #259
    9af8:	mov	x0, x19
    9afc:	stp	x8, xzr, [sp]
    9b00:	strh	w9, [sp, #16]
    9b04:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    9b08:	str	x0, [sp, #304]
    9b0c:	add	x0, sp, #0x130
    9b10:	mov	x2, sp
    9b14:	mov	w1, #0x1                   	// #1
    9b18:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9b1c:	b	98d8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe74>
    9b20:	stp	xzr, xzr, [x29, #-224]
    9b24:	stur	w25, [x29, #-224]
    9b28:	mov	w10, #0x903                 	// #2307
    9b2c:	mov	w8, #0x109                 	// #265
    9b30:	sturh	w10, [x29, #-176]
    9b34:	ldur	x10, [x29, #-224]
    9b38:	sturh	w8, [x29, #-208]
    9b3c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9b40:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9b44:	sub	x11, x29, #0xc0
    9b48:	add	x8, x8, #0x0
    9b4c:	add	x9, x9, #0x0
    9b50:	stp	x11, x8, [sp, #144]
    9b54:	mov	w8, #0x302                 	// #770
    9b58:	stp	x9, x10, [x29, #-192]
    9b5c:	strh	w8, [sp, #160]
    9b60:	ldr	x0, [x26, w25, uxtw #3]
    9b64:	mov	x19, sp
    9b68:	ldr	x8, [x0]
    9b6c:	ldr	x9, [x8, #48]
    9b70:	mov	x8, sp
    9b74:	blr	x9
    9b78:	ldrb	w8, [sp, #161]
    9b7c:	ldr	x9, [sp, #144]
    9b80:	add	x10, sp, #0x90
    9b84:	mov	w11, #0x402                 	// #1026
    9b88:	cmp	w8, #0x1
    9b8c:	csel	x8, x9, x10, eq  // eq = none
    9b90:	stp	x8, x19, [sp, #224]
    9b94:	strh	w11, [sp, #240]
    9b98:	ldrb	w9, [x8, #16]
    9b9c:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9ba0:	ldrb	w8, [x8, #17]
    9ba4:	cmp	w8, #0x1
    9ba8:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9bac:	ldrb	w8, [sp, #241]
    9bb0:	ldr	x9, [sp, #224]
    9bb4:	add	x10, sp, #0xe0
    9bb8:	adrp	x11, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9bbc:	cmp	w8, #0x1
    9bc0:	add	x11, x11, #0x0
    9bc4:	mov	w12, #0x302                 	// #770
    9bc8:	csel	x8, x9, x10, eq  // eq = none
    9bcc:	stp	x8, x11, [sp, #304]
    9bd0:	strh	w12, [sp, #320]
    9bd4:	ldrb	w9, [x8, #16]
    9bd8:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9bdc:	ldrb	w8, [x8, #17]
    9be0:	cmp	w8, #0x1
    9be4:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9be8:	sub	x0, x29, #0x100
    9bec:	add	x2, sp, #0x130
    9bf0:	mov	w1, #0x1                   	// #1
    9bf4:	stur	x20, [x29, #-256]
    9bf8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    9bfc:	b	a140 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16dc>
    9c00:	ldur	w8, [x29, #-160]
    9c04:	ldur	x1, [x29, #-168]
    9c08:	mov	w2, w8
    9c0c:	mov	x0, x22
    9c10:	bl	0 <_ZN4llvm10VarDefInit3getEPNS_6RecordENS_8ArrayRefIPNS_4InitEEE>
    9c14:	bl	0 <_ZNK4llvm10VarDefInit4FoldEv>
    9c18:	mov	x20, x0
    9c1c:	ldur	x0, [x29, #-168]
    9c20:	cmp	x0, x23
    9c24:	b.ne	98ec <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe88>  // b.any
    9c28:	b	98f0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xe8c>
    9c2c:	ldr	x8, [sp, #400]
    9c30:	ldr	q0, [sp, #384]
    9c34:	str	x8, [sp, #496]
    9c38:	and	w8, w8, #0xff
    9c3c:	str	q0, [sp, #480]
    9c40:	b	9cac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1248>
    9c44:	ldrb	w9, [sp, #473]
    9c48:	ldr	x10, [sp, #456]
    9c4c:	mov	w11, #0x2                   	// #2
    9c50:	add	x12, sp, #0x1c8
    9c54:	cmp	w9, #0x1
    9c58:	csel	w11, w8, w11, eq  // eq = none
    9c5c:	mov	x13, sp
    9c60:	mov	w14, #0x4                   	// #4
    9c64:	csel	x9, x10, x12, eq  // eq = none
    9c68:	cmp	w11, #0x2
    9c6c:	stp	x9, x13, [sp, #480]
    9c70:	strb	w11, [sp, #496]
    9c74:	strb	w14, [sp, #497]
    9c78:	b.ne	9cac <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1248>  // b.any
    9c7c:	ldrb	w8, [x9, #16]
    9c80:	cbz	w8, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9c84:	ldrb	w8, [x9, #17]
    9c88:	cmp	w8, #0x1
    9c8c:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9c90:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9c94:	add	x8, x8, #0x0
    9c98:	mov	w9, #0x103                 	// #259
    9c9c:	stp	x8, xzr, [sp, #360]
    9ca0:	mov	w8, #0x2                   	// #2
    9ca4:	strh	w9, [sp, #376]
    9ca8:	b	9ce0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x127c>
    9cac:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9cb0:	add	x9, x9, #0x0
    9cb4:	mov	w10, #0x103                 	// #259
    9cb8:	cmp	w8, #0x1
    9cbc:	stp	x9, xzr, [sp, #360]
    9cc0:	strh	w10, [sp, #376]
    9cc4:	b.eq	9d38 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12d4>  // b.none
    9cc8:	cbnz	w8, 9ce0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x127c>
    9ccc:	mov	w8, #0x100                 	// #256
    9cd0:	str	xzr, [sp, #520]
    9cd4:	str	xzr, [sp, #512]
    9cd8:	strh	w8, [sp, #528]
    9cdc:	b	9d48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12e4>
    9ce0:	ldrb	w9, [sp, #497]
    9ce4:	ldr	x10, [sp, #480]
    9ce8:	mov	w11, #0x2                   	// #2
    9cec:	add	x12, sp, #0x1e0
    9cf0:	cmp	w9, #0x1
    9cf4:	adrp	x13, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9cf8:	csel	w9, w8, w11, eq  // eq = none
    9cfc:	add	x13, x13, #0x0
    9d00:	mov	w14, #0x3                   	// #3
    9d04:	csel	x8, x10, x12, eq  // eq = none
    9d08:	cmp	w9, #0x2
    9d0c:	str	x8, [sp, #512]
    9d10:	str	x13, [sp, #520]
    9d14:	strb	w9, [sp, #528]
    9d18:	strb	w14, [sp, #529]
    9d1c:	b.ne	9d48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12e4>  // b.any
    9d20:	ldrb	w9, [x8, #16]
    9d24:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9d28:	ldrb	w8, [x8, #17]
    9d2c:	cmp	w8, #0x1
    9d30:	b.ne	9d48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x12e4>  // b.any
    9d34:	b	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9d38:	ldr	q0, [x24, #160]
    9d3c:	ldr	x8, [sp, #376]
    9d40:	str	q0, [sp, #512]
    9d44:	str	x8, [sp, #528]
    9d48:	ldr	x0, [x19, #16]
    9d4c:	add	x25, sp, #0x130
    9d50:	ldr	x8, [x0]
    9d54:	ldr	x9, [x8, #16]
    9d58:	add	x8, sp, #0x130
    9d5c:	blr	x9
    9d60:	ldrb	w22, [sp, #528]
    9d64:	mov	w8, #0x104                 	// #260
    9d68:	strh	w8, [sp, #352]
    9d6c:	stp	x25, xzr, [sp, #336]
    9d70:	cmp	w22, #0x1
    9d74:	b.eq	9da4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1340>  // b.none
    9d78:	cbnz	w22, 9dbc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1358>
    9d7c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9d80:	mov	w8, #0x100                 	// #256
    9d84:	add	x9, x9, #0x0
    9d88:	mov	w10, #0x103                 	// #259
    9d8c:	str	xzr, [sp, #552]
    9d90:	str	xzr, [sp, #544]
    9d94:	strh	w8, [sp, #560]
    9d98:	stp	x9, xzr, [sp, #280]
    9d9c:	strh	w10, [sp, #296]
    9da0:	b	9e48 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13e4>
    9da4:	ldr	x8, [sp, #352]
    9da8:	ldr	q0, [sp, #336]
    9dac:	and	w22, w8, #0xff
    9db0:	str	q0, [sp, #544]
    9db4:	str	x8, [sp, #560]
    9db8:	b	9e28 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13c4>
    9dbc:	ldrb	w8, [sp, #529]
    9dc0:	ldr	x9, [sp, #512]
    9dc4:	mov	w10, #0x2                   	// #2
    9dc8:	add	x11, sp, #0x200
    9dcc:	cmp	w8, #0x1
    9dd0:	csel	w10, w22, w10, eq  // eq = none
    9dd4:	add	x12, sp, #0x130
    9dd8:	mov	w13, #0x4                   	// #4
    9ddc:	csel	x8, x9, x11, eq  // eq = none
    9de0:	cmp	w10, #0x2
    9de4:	str	x8, [sp, #544]
    9de8:	str	x12, [sp, #552]
    9dec:	strb	w10, [sp, #560]
    9df0:	strb	w13, [sp, #561]
    9df4:	b.ne	9e28 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13c4>  // b.any
    9df8:	ldrb	w9, [x8, #16]
    9dfc:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9e00:	ldrb	w8, [x8, #17]
    9e04:	cmp	w8, #0x1
    9e08:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9e0c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9e10:	add	x8, x8, #0x0
    9e14:	mov	w9, #0x103                 	// #259
    9e18:	mov	w22, #0x2                   	// #2
    9e1c:	stp	x8, xzr, [sp, #280]
    9e20:	strh	w9, [sp, #296]
    9e24:	b	9e60 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13fc>
    9e28:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9e2c:	add	x8, x8, #0x0
    9e30:	mov	w9, #0x103                 	// #259
    9e34:	cmp	w22, #0x1
    9e38:	stp	x8, xzr, [sp, #280]
    9e3c:	strh	w9, [sp, #296]
    9e40:	b.eq	9ebc <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1458>  // b.none
    9e44:	cbnz	w22, 9e60 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x13fc>
    9e48:	mov	w8, #0x100                 	// #256
    9e4c:	mov	w22, wzr
    9e50:	str	xzr, [sp, #584]
    9e54:	str	xzr, [sp, #576]
    9e58:	strh	w8, [sp, #592]
    9e5c:	b	9ed0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x146c>
    9e60:	ldrb	w8, [sp, #561]
    9e64:	ldr	x9, [sp, #544]
    9e68:	mov	w10, #0x2                   	// #2
    9e6c:	add	x11, sp, #0x220
    9e70:	cmp	w8, #0x1
    9e74:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9e78:	csel	w10, w22, w10, eq  // eq = none
    9e7c:	add	x12, x12, #0x0
    9e80:	mov	w13, #0x3                   	// #3
    9e84:	csel	x8, x9, x11, eq  // eq = none
    9e88:	cmp	w10, #0x2
    9e8c:	str	x8, [sp, #576]
    9e90:	str	x12, [sp, #584]
    9e94:	strb	w10, [sp, #592]
    9e98:	strb	w13, [sp, #593]
    9e9c:	b.ne	9ed0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x146c>  // b.any
    9ea0:	ldrb	w9, [x8, #16]
    9ea4:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9ea8:	ldrb	w8, [x8, #17]
    9eac:	cmp	w8, #0x1
    9eb0:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9eb4:	mov	w22, #0x2                   	// #2
    9eb8:	b	9ed0 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x146c>
    9ebc:	ldr	x8, [sp, #296]
    9ec0:	ldr	q0, [x24, #80]
    9ec4:	and	w22, w8, #0xff
    9ec8:	str	q0, [sp, #576]
    9ecc:	str	x8, [sp, #592]
    9ed0:	ldr	x8, [x21]
    9ed4:	mov	x0, x21
    9ed8:	add	x25, sp, #0xe0
    9edc:	ldr	x9, [x8, #16]
    9ee0:	add	x8, sp, #0xe0
    9ee4:	blr	x9
    9ee8:	mov	w8, #0x104                 	// #260
    9eec:	cmp	w22, #0x1
    9ef0:	strh	w8, [sp, #272]
    9ef4:	stp	x25, xzr, [sp, #256]
    9ef8:	b.eq	9f24 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14c0>  // b.none
    9efc:	cbnz	w22, 9f3c <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x14d8>
    9f00:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9f04:	mov	w8, #0x100                 	// #256
    9f08:	add	x9, x9, #0x0
    9f0c:	mov	w10, #0x103                 	// #259
    9f10:	stp	xzr, xzr, [x29, #-256]
    9f14:	sturh	w8, [x29, #-240]
    9f18:	stp	x9, xzr, [sp, #200]
    9f1c:	strh	w10, [sp, #216]
    9f20:	b	9fc4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1560>
    9f24:	ldr	x8, [sp, #272]
    9f28:	ldr	q0, [sp, #256]
    9f2c:	and	w22, w8, #0xff
    9f30:	stur	q0, [x29, #-256]
    9f34:	stur	x8, [x29, #-240]
    9f38:	b	9fa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1540>
    9f3c:	ldrb	w8, [sp, #593]
    9f40:	ldr	x9, [sp, #576]
    9f44:	mov	w10, #0x2                   	// #2
    9f48:	add	x11, sp, #0x240
    9f4c:	cmp	w8, #0x1
    9f50:	csel	w10, w22, w10, eq  // eq = none
    9f54:	add	x12, sp, #0xe0
    9f58:	mov	w13, #0x4                   	// #4
    9f5c:	csel	x8, x9, x11, eq  // eq = none
    9f60:	cmp	w10, #0x2
    9f64:	stp	x8, x12, [x29, #-256]
    9f68:	sturb	w10, [x29, #-240]
    9f6c:	sturb	w13, [x29, #-239]
    9f70:	b.ne	9fa4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1540>  // b.any
    9f74:	ldrb	w9, [x8, #16]
    9f78:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    9f7c:	ldrb	w8, [x8, #17]
    9f80:	cmp	w8, #0x1
    9f84:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    9f88:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9f8c:	add	x8, x8, #0x0
    9f90:	mov	w9, #0x103                 	// #259
    9f94:	mov	w22, #0x2                   	// #2
    9f98:	stp	x8, xzr, [sp, #200]
    9f9c:	strh	w9, [sp, #216]
    9fa0:	b	9fd8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1574>
    9fa4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9fa8:	add	x8, x8, #0x0
    9fac:	mov	w9, #0x103                 	// #259
    9fb0:	cmp	w22, #0x1
    9fb4:	stp	x8, xzr, [sp, #200]
    9fb8:	strh	w9, [sp, #216]
    9fbc:	b.eq	a030 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15cc>  // b.none
    9fc0:	cbnz	w22, 9fd8 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1574>
    9fc4:	mov	w8, #0x100                 	// #256
    9fc8:	mov	w22, wzr
    9fcc:	stp	xzr, xzr, [x29, #-224]
    9fd0:	sturh	w8, [x29, #-208]
    9fd4:	b	a044 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15e0>
    9fd8:	ldurb	w8, [x29, #-239]
    9fdc:	ldur	x9, [x29, #-256]
    9fe0:	mov	w10, #0x2                   	// #2
    9fe4:	sub	x11, x29, #0x100
    9fe8:	cmp	w8, #0x1
    9fec:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    9ff0:	csel	w10, w22, w10, eq  // eq = none
    9ff4:	add	x12, x12, #0x0
    9ff8:	mov	w13, #0x3                   	// #3
    9ffc:	csel	x8, x9, x11, eq  // eq = none
    a000:	cmp	w10, #0x2
    a004:	stp	x8, x12, [x29, #-224]
    a008:	sturb	w10, [x29, #-208]
    a00c:	sturb	w13, [x29, #-207]
    a010:	b.ne	a044 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15e0>  // b.any
    a014:	ldrb	w9, [x8, #16]
    a018:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    a01c:	ldrb	w8, [x8, #17]
    a020:	cmp	w8, #0x1
    a024:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    a028:	mov	w22, #0x2                   	// #2
    a02c:	b	a044 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x15e0>
    a030:	ldr	x8, [sp, #216]
    a034:	ldr	q0, [x24]
    a038:	and	w22, w8, #0xff
    a03c:	stur	q0, [x29, #-224]
    a040:	stur	x8, [x29, #-208]
    a044:	ldr	x8, [x19]
    a048:	mov	x0, x19
    a04c:	add	x21, sp, #0x90
    a050:	ldr	x9, [x8, #40]
    a054:	add	x8, sp, #0x90
    a058:	blr	x9
    a05c:	mov	w8, #0x104                 	// #260
    a060:	cmp	w22, #0x1
    a064:	strh	w8, [sp, #192]
    a068:	stp	x21, xzr, [sp, #176]
    a06c:	b.eq	a084 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1620>  // b.none
    a070:	cbnz	w22, a098 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1634>
    a074:	mov	w8, #0x100                 	// #256
    a078:	stp	xzr, xzr, [x29, #-192]
    a07c:	sturh	w8, [x29, #-176]
    a080:	b	a0e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1680>
    a084:	ldr	q0, [sp, #176]
    a088:	ldr	x8, [sp, #192]
    a08c:	stur	q0, [x29, #-192]
    a090:	stur	x8, [x29, #-176]
    a094:	b	a0e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1680>
    a098:	ldurb	w8, [x29, #-207]
    a09c:	ldur	x9, [x29, #-224]
    a0a0:	mov	w10, #0x2                   	// #2
    a0a4:	sub	x11, x29, #0xe0
    a0a8:	cmp	w8, #0x1
    a0ac:	csel	w10, w22, w10, eq  // eq = none
    a0b0:	add	x12, sp, #0x90
    a0b4:	mov	w13, #0x4                   	// #4
    a0b8:	csel	x8, x9, x11, eq  // eq = none
    a0bc:	cmp	w10, #0x2
    a0c0:	stp	x8, x12, [x29, #-192]
    a0c4:	sturb	w10, [x29, #-176]
    a0c8:	sturb	w13, [x29, #-175]
    a0cc:	b.ne	a0e4 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x1680>  // b.any
    a0d0:	ldrb	w9, [x8, #16]
    a0d4:	cbz	w9, a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>
    a0d8:	ldrb	w8, [x8, #17]
    a0dc:	cmp	w8, #0x1
    a0e0:	b.eq	a248 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x17e4>  // b.none
    a0e4:	sub	x0, x29, #0x18
    a0e8:	sub	x2, x29, #0xc0
    a0ec:	mov	w1, #0x1                   	// #1
    a0f0:	stur	x20, [x29, #-24]
    a0f4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a0f8:	ldr	x0, [sp, #144]
    a0fc:	add	x8, sp, #0x90
    a100:	add	x8, x8, #0x10
    a104:	cmp	x0, x8
    a108:	b.eq	a110 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16ac>  // b.none
    a10c:	bl	0 <_ZdlPv>
    a110:	ldr	x0, [sp, #224]
    a114:	add	x8, sp, #0xe0
    a118:	add	x8, x8, #0x10
    a11c:	cmp	x0, x8
    a120:	b.eq	a128 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16c4>  // b.none
    a124:	bl	0 <_ZdlPv>
    a128:	ldr	x0, [sp, #304]
    a12c:	add	x8, sp, #0x130
    a130:	add	x8, x8, #0x10
    a134:	cmp	x0, x8
    a138:	b.eq	a140 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0x16dc>  // b.none
    a13c:	bl	0 <_ZdlPv>
    a140:	ldr	x0, [sp]
    a144:	mov	x8, sp
    a148:	add	x8, x8, #0x10
    a14c:	cmp	x0, x8
    a150:	b.eq	9948 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xee4>  // b.none
    a154:	bl	0 <_ZdlPv>
    a158:	b	9948 <_ZN4llvm8TGParser16ParseSimpleValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE+0xee4>
    a15c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a160:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a164:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a168:	add	x0, x0, #0x0
    a16c:	add	x1, x1, #0x0
    a170:	add	x3, x3, #0x0
    a174:	mov	w2, #0x43                  	// #67
    a178:	bl	0 <__assert_fail>
    a17c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a180:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a184:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a188:	add	x0, x0, #0x0
    a18c:	add	x1, x1, #0x0
    a190:	add	x3, x3, #0x0
    a194:	mov	w2, #0x22e                 	// #558
    a198:	bl	0 <__assert_fail>
    a19c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1a0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1a4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1a8:	add	x0, x0, #0x0
    a1ac:	add	x1, x1, #0x0
    a1b0:	add	x3, x3, #0x0
    a1b4:	mov	w2, #0x95                  	// #149
    a1b8:	bl	0 <__assert_fail>
    a1bc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1c0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1c4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1c8:	add	x0, x0, #0x0
    a1cc:	add	x1, x1, #0x0
    a1d0:	add	x3, x3, #0x0
    a1d4:	mov	w2, #0x69                  	// #105
    a1d8:	bl	0 <__assert_fail>
    a1dc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1e0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1e4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a1e8:	add	x0, x0, #0x0
    a1ec:	add	x1, x1, #0x0
    a1f0:	add	x3, x3, #0x0
    a1f4:	mov	w2, #0x69                  	// #105
    a1f8:	bl	0 <__assert_fail>
    a1fc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a200:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a204:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a208:	add	x0, x0, #0x0
    a20c:	add	x1, x1, #0x0
    a210:	add	x3, x3, #0x0
    a214:	mov	w2, #0x69                  	// #105
    a218:	bl	0 <__assert_fail>
    a21c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a220:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a224:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a228:	add	x0, x0, #0x0
    a22c:	add	x1, x1, #0x0
    a230:	add	x3, x3, #0x0
    a234:	mov	w2, #0x71                  	// #113
    a238:	bl	0 <__assert_fail>
    a23c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a240:	add	x0, x0, #0x0
    a244:	bl	0 <_ZSt19__throw_logic_errorPKc>
    a248:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a24c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a250:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a254:	add	x0, x0, #0x0
    a258:	add	x1, x1, #0x0
    a25c:	add	x3, x3, #0x0
    a260:	mov	w2, #0xb8                  	// #184
    a264:	bl	0 <__assert_fail>

000000000000a268 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE>:
    a268:	sub	sp, sp, #0x60
    a26c:	stp	x29, x30, [sp, #32]
    a270:	str	x23, [sp, #48]
    a274:	stp	x22, x21, [sp, #64]
    a278:	stp	x20, x19, [sp, #80]
    a27c:	add	x29, sp, #0x20
    a280:	mov	x20, x0
    a284:	ldr	w0, [x0, #40]
    a288:	mov	x21, x2
    a28c:	mov	x19, x1
    a290:	cmp	w0, #0x4a
    a294:	b.ne	a2f8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x90>  // b.any
    a298:	ldp	x0, x1, [x20, #48]
    a29c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a2a0:	mov	x22, x0
    a2a4:	bl	0 <_ZN4llvm9UnsetInit3getEv>
    a2a8:	ldp	w8, w9, [x19, #8]
    a2ac:	mov	x23, x0
    a2b0:	cmp	w8, w9
    a2b4:	b.cs	a3c8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x160>  // b.hs, b.nlast
    a2b8:	ldr	x10, [x19]
    a2bc:	cmp	w8, w9
    a2c0:	add	x9, x10, w8, uxtw #4
    a2c4:	stp	x23, x22, [x9]
    a2c8:	b.cs	a43c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1d4>  // b.hs, b.nlast
    a2cc:	add	w8, w8, #0x1
    a2d0:	str	w8, [x19, #8]
    a2d4:	ldp	x8, x9, [x20, #8]
    a2d8:	mov	x0, x20
    a2dc:	cmp	x8, x9
    a2e0:	cset	w1, eq  // eq = none
    a2e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a2e8:	str	w0, [x20, #40]
    a2ec:	cmp	w0, #0xe
    a2f0:	b.eq	a3a4 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x13c>  // b.none
    a2f4:	b	a424 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1bc>
    a2f8:	mov	x0, x20
    a2fc:	mov	x1, x21
    a300:	mov	x2, xzr
    a304:	mov	w3, wzr
    a308:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a30c:	cbz	x0, a420 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1b8>
    a310:	ldr	w8, [x20, #40]
    a314:	mov	x22, x0
    a318:	cmp	w8, #0xc
    a31c:	b.ne	a368 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x100>  // b.any
    a320:	ldp	x8, x9, [x20, #8]
    a324:	mov	x0, x20
    a328:	cmp	x8, x9
    a32c:	cset	w1, eq  // eq = none
    a330:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a334:	cmp	w0, #0x4a
    a338:	str	w0, [x20, #40]
    a33c:	b.ne	a3f0 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x188>  // b.any
    a340:	ldp	x0, x1, [x20, #48]
    a344:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a348:	ldp	x8, x9, [x20, #8]
    a34c:	mov	x23, x0
    a350:	mov	x0, x20
    a354:	cmp	x8, x9
    a358:	cset	w1, eq  // eq = none
    a35c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a360:	str	w0, [x20, #40]
    a364:	b	a36c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x104>
    a368:	mov	x23, xzr
    a36c:	ldp	w8, w9, [x19, #8]
    a370:	cmp	w8, w9
    a374:	b.cs	a3dc <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x174>  // b.hs, b.nlast
    a378:	ldr	x9, [x19]
    a37c:	add	x8, x9, w8, uxtw #4
    a380:	stp	x22, x23, [x8]
    a384:	ldp	w8, w9, [x19, #8]
    a388:	cmp	w8, w9
    a38c:	b.cs	a43c <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1d4>  // b.hs, b.nlast
    a390:	add	w8, w8, #0x1
    a394:	str	w8, [x19, #8]
    a398:	ldr	w0, [x20, #40]
    a39c:	cmp	w0, #0xe
    a3a0:	b.ne	a424 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x1bc>  // b.any
    a3a4:	ldp	x8, x9, [x20, #8]
    a3a8:	mov	x0, x20
    a3ac:	cmp	x8, x9
    a3b0:	cset	w1, eq  // eq = none
    a3b4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a3b8:	str	w0, [x20, #40]
    a3bc:	cmp	w0, #0x4a
    a3c0:	b.ne	a2f8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x90>  // b.any
    a3c4:	b	a298 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x30>
    a3c8:	mov	x0, x19
    a3cc:	mov	x1, xzr
    a3d0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a3d4:	ldp	w8, w9, [x19, #8]
    a3d8:	b	a2b8 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x50>
    a3dc:	mov	x0, x19
    a3e0:	mov	x1, xzr
    a3e4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a3e8:	ldr	w8, [x19, #8]
    a3ec:	b	a378 <_ZN4llvm8TGParser15ParseDagArgListERNS_15SmallVectorImplISt4pairIPNS_4InitEPNS_10StringInitEEEEPNS_6RecordE+0x110>
    a3f0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a3f4:	add	x8, x8, #0x0
    a3f8:	mov	w9, #0x103                 	// #259
    a3fc:	mov	x0, x20
    a400:	stp	x8, xzr, [sp, #8]
    a404:	strh	w9, [sp, #24]
    a408:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a40c:	str	x0, [x29, #24]
    a410:	add	x0, x29, #0x18
    a414:	add	x2, sp, #0x8
    a418:	mov	w1, #0x1                   	// #1
    a41c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a420:	str	wzr, [x19, #8]
    a424:	ldp	x20, x19, [sp, #80]
    a428:	ldp	x22, x21, [sp, #64]
    a42c:	ldr	x23, [sp, #48]
    a430:	ldp	x29, x30, [sp, #32]
    a434:	add	sp, sp, #0x60
    a438:	ret
    a43c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a440:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a444:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a448:	add	x0, x0, #0x0
    a44c:	add	x1, x1, #0x0
    a450:	add	x3, x3, #0x0
    a454:	mov	w2, #0x43                  	// #67
    a458:	bl	0 <__assert_fail>

000000000000a45c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>:
    a45c:	sub	sp, sp, #0xd0
    a460:	stp	x29, x30, [sp, #128]
    a464:	stp	x26, x25, [sp, #144]
    a468:	stp	x24, x23, [sp, #160]
    a46c:	stp	x22, x21, [sp, #176]
    a470:	stp	x20, x19, [sp, #192]
    a474:	add	x29, sp, #0x80
    a478:	ldr	w26, [x0, #40]
    a47c:	mov	w23, w2
    a480:	mov	x19, x0
    a484:	mov	x20, x1
    a488:	cmp	w26, #0x1b
    a48c:	b.ne	a4a8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x4c>  // b.any
    a490:	ldp	x8, x9, [x19, #8]
    a494:	mov	x0, x19
    a498:	cmp	x8, x9
    a49c:	cset	w1, eq  // eq = none
    a4a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a4a4:	str	w0, [x19, #40]
    a4a8:	mov	x0, x19
    a4ac:	bl	5200 <_ZN4llvm8TGParser9ParseTypeEv>
    a4b0:	cbz	x0, a50c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xb0>
    a4b4:	ldr	w8, [x19, #40]
    a4b8:	cmp	w8, #0x48
    a4bc:	b.ne	a514 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xb8>  // b.any
    a4c0:	sub	x8, x29, #0x28
    a4c4:	add	x25, x8, #0x10
    a4c8:	stur	x25, [x29, #-40]
    a4cc:	ldp	x22, x24, [x19, #48]
    a4d0:	mov	x21, x0
    a4d4:	cbnz	x22, a4dc <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x80>
    a4d8:	cbnz	x24, a7fc <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3a0>
    a4dc:	cmp	x24, #0x10
    a4e0:	str	x24, [sp, #32]
    a4e4:	b.cc	a54c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xf0>  // b.lo, b.ul, b.last
    a4e8:	sub	x0, x29, #0x28
    a4ec:	add	x1, sp, #0x20
    a4f0:	mov	x2, xzr
    a4f4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    a4f8:	ldr	x8, [sp, #32]
    a4fc:	stur	x0, [x29, #-40]
    a500:	stur	x8, [x29, #-24]
    a504:	cbnz	x24, a554 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0xf8>
    a508:	b	a574 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    a50c:	mov	x22, xzr
    a510:	b	a76c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>
    a514:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a518:	add	x8, x8, #0x0
    a51c:	mov	w9, #0x103                 	// #259
    a520:	mov	x0, x19
    a524:	stp	x8, xzr, [x29, #-40]
    a528:	sturh	w9, [x29, #-24]
    a52c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a530:	str	x0, [sp, #32]
    a534:	add	x0, sp, #0x20
    a538:	sub	x2, x29, #0x28
    a53c:	mov	w1, #0x1                   	// #1
    a540:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a544:	mov	x22, xzr
    a548:	b	a76c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>
    a54c:	mov	x0, x25
    a550:	cbz	x24, a574 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    a554:	cmp	x24, #0x1
    a558:	b.ne	a568 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x10c>  // b.any
    a55c:	ldrb	w8, [x22]
    a560:	strb	w8, [x0]
    a564:	b	a574 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x118>
    a568:	mov	x1, x22
    a56c:	mov	x2, x24
    a570:	bl	0 <memcpy>
    a574:	ldr	x8, [sp, #32]
    a578:	ldur	x9, [x29, #-40]
    a57c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a580:	add	x1, x1, #0x0
    a584:	sub	x0, x29, #0x28
    a588:	stur	x8, [x29, #-32]
    a58c:	strb	wzr, [x9, x8]
    a590:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    a594:	cbz	w0, a600 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x1a4>
    a598:	mov	x0, x19
    a59c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a5a0:	ldp	x8, x1, [x29, #-40]
    a5a4:	mov	x24, x0
    a5a8:	mov	x0, x8
    a5ac:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a5b0:	ldp	x8, x9, [x19, #8]
    a5b4:	mov	x22, x0
    a5b8:	mov	x0, x19
    a5bc:	cmp	x8, x9
    a5c0:	cset	w1, eq  // eq = none
    a5c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a5c8:	str	w0, [x19, #40]
    a5cc:	tbz	w23, #0, a728 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2cc>
    a5d0:	ldr	x1, [x19, #328]
    a5d4:	cbz	x20, a708 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2ac>
    a5d8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a5dc:	add	x3, x3, #0x0
    a5e0:	mov	w4, #0x1                   	// #1
    a5e4:	mov	x0, x20
    a5e8:	mov	x2, x22
    a5ec:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    a5f0:	ldr	x1, [x19, #328]
    a5f4:	mov	x22, x0
    a5f8:	cbnz	x1, a70c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2b0>
    a5fc:	b	a728 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2cc>
    a600:	ldur	x9, [x29, #-32]
    a604:	mov	x8, sp
    a608:	add	x20, x8, #0x10
    a60c:	mov	x0, sp
    a610:	add	x1, x9, #0x1
    a614:	stp	x20, xzr, [sp]
    a618:	strb	wzr, [sp, #16]
    a61c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    a620:	ldr	x8, [sp, #8]
    a624:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    a628:	cmp	x8, x21
    a62c:	b.eq	a808 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3ac>  // b.none
    a630:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a634:	add	x1, x1, #0x0
    a638:	mov	x0, sp
    a63c:	mov	w2, #0x1                   	// #1
    a640:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a644:	ldp	x1, x2, [x29, #-40]
    a648:	mov	x0, sp
    a64c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a650:	ldr	x8, [sp, #8]
    a654:	sub	x8, x21, x8
    a658:	cmp	x8, #0x1c
    a65c:	b.ls	a808 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3ac>  // b.plast
    a660:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a664:	add	x1, x1, #0x0
    a668:	mov	x0, sp
    a66c:	mov	w2, #0x1d                  	// #29
    a670:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    a674:	add	x8, sp, #0x20
    a678:	add	x21, x8, #0x10
    a67c:	str	x21, [sp, #32]
    a680:	mov	x8, x0
    a684:	ldr	x9, [x8], #16
    a688:	cmp	x9, x8
    a68c:	b.eq	a6a0 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x244>  // b.none
    a690:	str	x9, [sp, #32]
    a694:	ldr	x9, [x0, #16]
    a698:	str	x9, [sp, #48]
    a69c:	b	a6a8 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x24c>
    a6a0:	ldr	q0, [x9]
    a6a4:	str	q0, [x21]
    a6a8:	ldr	x9, [x0, #8]
    a6ac:	mov	w10, #0x104                 	// #260
    a6b0:	add	x11, sp, #0x20
    a6b4:	str	x9, [sp, #40]
    a6b8:	stp	x8, xzr, [x0]
    a6bc:	strb	wzr, [x0, #16]
    a6c0:	mov	x0, x19
    a6c4:	strh	w10, [sp, #80]
    a6c8:	stp	x11, xzr, [sp, #64]
    a6cc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a6d0:	stur	x0, [x29, #-8]
    a6d4:	sub	x0, x29, #0x8
    a6d8:	add	x2, sp, #0x40
    a6dc:	mov	w1, #0x1                   	// #1
    a6e0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a6e4:	ldr	x0, [sp, #32]
    a6e8:	cmp	x0, x21
    a6ec:	b.eq	a6f4 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x298>  // b.none
    a6f0:	bl	0 <_ZdlPv>
    a6f4:	ldr	x0, [sp]
    a6f8:	cmp	x0, x20
    a6fc:	b.eq	a758 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2fc>  // b.none
    a700:	bl	0 <_ZdlPv>
    a704:	b	a758 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x2fc>
    a708:	cbz	x1, a814 <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x3b8>
    a70c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a710:	add	x3, x3, #0x0
    a714:	mov	w4, #0x2                   	// #2
    a718:	mov	x0, x1
    a71c:	mov	x2, x22
    a720:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    a724:	mov	x22, x0
    a728:	cmp	w26, #0x1b
    a72c:	cset	w3, eq  // eq = none
    a730:	add	x0, sp, #0x20
    a734:	mov	x1, x22
    a738:	mov	x2, x21
    a73c:	bl	0 <_ZN4llvm9RecordValC1EPNS_4InitEPNS_5RecTyEb>
    a740:	add	x3, sp, #0x20
    a744:	mov	x0, x19
    a748:	mov	x1, x20
    a74c:	mov	x2, x24
    a750:	bl	1d0 <_ZN4llvm8TGParser8AddValueEPNS_6RecordENS_5SMLocERKNS_9RecordValE>
    a754:	tbz	w0, #0, a78c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x330>
    a758:	mov	x22, xzr
    a75c:	ldur	x0, [x29, #-40]
    a760:	cmp	x0, x25
    a764:	b.eq	a76c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x310>  // b.none
    a768:	bl	0 <_ZdlPv>
    a76c:	mov	x0, x22
    a770:	ldp	x20, x19, [sp, #192]
    a774:	ldp	x22, x21, [sp, #176]
    a778:	ldp	x24, x23, [sp, #160]
    a77c:	ldp	x26, x25, [sp, #144]
    a780:	ldp	x29, x30, [sp, #128]
    a784:	add	sp, sp, #0xd0
    a788:	ret
    a78c:	ldr	w8, [x19, #40]
    a790:	cmp	w8, #0x10
    a794:	b.ne	a75c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>  // b.any
    a798:	ldp	x8, x9, [x19, #8]
    a79c:	mov	x0, x19
    a7a0:	cmp	x8, x9
    a7a4:	cset	w1, eq  // eq = none
    a7a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a7ac:	str	w0, [x19, #40]
    a7b0:	mov	x0, x19
    a7b4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a7b8:	mov	x23, x0
    a7bc:	mov	x0, x19
    a7c0:	mov	x1, x20
    a7c4:	mov	x2, x21
    a7c8:	mov	w3, wzr
    a7cc:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a7d0:	cbz	x0, a75c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>
    a7d4:	mov	x6, x0
    a7d8:	mov	x0, x19
    a7dc:	mov	x1, x20
    a7e0:	mov	x2, x23
    a7e4:	mov	x3, x22
    a7e8:	mov	x4, xzr
    a7ec:	mov	x5, xzr
    a7f0:	mov	w7, wzr
    a7f4:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    a7f8:	b	a75c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb+0x300>
    a7fc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a800:	add	x0, x0, #0x0
    a804:	bl	0 <_ZSt19__throw_logic_errorPKc>
    a808:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a80c:	add	x0, x0, #0x0
    a810:	bl	0 <_ZSt20__throw_length_errorPKc>
    a814:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a818:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a81c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a820:	add	x0, x0, #0x0
    a824:	add	x1, x1, #0x0
    a828:	add	x3, x3, #0x0
    a82c:	mov	w2, #0x990                 	// #2448
    a830:	bl	0 <__assert_fail>

000000000000a834 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>:
    a834:	sub	sp, sp, #0x180
    a838:	stp	x29, x30, [sp, #288]
    a83c:	stp	x28, x27, [sp, #304]
    a840:	stp	x26, x25, [sp, #320]
    a844:	stp	x24, x23, [sp, #336]
    a848:	stp	x22, x21, [sp, #352]
    a84c:	stp	x20, x19, [sp, #368]
    a850:	add	x29, sp, #0x120
    a854:	ldr	w8, [x0, #40]
    a858:	mov	x19, x0
    a85c:	cmp	w8, #0x48
    a860:	b.ne	a92c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0xf8>  // b.any
    a864:	mov	x21, x1
    a868:	ldp	x0, x1, [x19, #48]
    a86c:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    a870:	ldp	x8, x9, [x19, #8]
    a874:	mov	x20, x0
    a878:	mov	x0, x19
    a87c:	cmp	x8, x9
    a880:	cset	w1, eq  // eq = none
    a884:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a888:	cmp	w0, #0x10
    a88c:	str	w0, [x19, #40]
    a890:	b.ne	a938 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x104>  // b.any
    a894:	ldp	x8, x9, [x19, #8]
    a898:	mov	x0, x19
    a89c:	cmp	x8, x9
    a8a0:	cset	w1, eq  // eq = none
    a8a4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a8a8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a8ac:	ldr	d0, [x9]
    a8b0:	sub	x8, x29, #0x60
    a8b4:	add	x8, x8, #0x10
    a8b8:	cmp	w0, #0x6
    a8bc:	str	w0, [x19, #40]
    a8c0:	stur	x8, [x29, #-96]
    a8c4:	stur	d0, [x29, #-88]
    a8c8:	b.ne	a990 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x15c>  // b.any
    a8cc:	ldp	x8, x9, [x19, #8]
    a8d0:	mov	x0, x19
    a8d4:	cmp	x8, x9
    a8d8:	cset	w1, eq  // eq = none
    a8dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a8e0:	str	w0, [x19, #40]
    a8e4:	sub	x1, x29, #0x60
    a8e8:	mov	x0, x19
    a8ec:	mov	x2, xzr
    a8f0:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    a8f4:	tbnz	w0, #0, aa00 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1cc>
    a8f8:	ldr	w8, [x19, #40]
    a8fc:	cmp	w8, #0xe
    a900:	b.eq	a8cc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x98>  // b.none
    a904:	cmp	w8, #0x7
    a908:	b.ne	aa10 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x1dc>  // b.any
    a90c:	ldp	x8, x9, [x19, #8]
    a910:	mov	x0, x19
    a914:	cmp	x8, x9
    a918:	cset	w1, eq  // eq = none
    a91c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    a920:	mov	x22, xzr
    a924:	str	w0, [x19, #40]
    a928:	b	aac4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x290>
    a92c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a930:	add	x8, x8, #0x0
    a934:	b	a940 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x10c>
    a938:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    a93c:	add	x8, x8, #0x0
    a940:	mov	w9, #0x103                 	// #259
    a944:	mov	x0, x19
    a948:	stp	x8, xzr, [x29, #-96]
    a94c:	sturh	w9, [x29, #-80]
    a950:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a954:	stur	x0, [x29, #-128]
    a958:	sub	x0, x29, #0x80
    a95c:	sub	x2, x29, #0x60
    a960:	mov	w1, #0x1                   	// #1
    a964:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    a968:	mov	x19, xzr
    a96c:	mov	x0, x19
    a970:	ldp	x20, x19, [sp, #368]
    a974:	ldp	x22, x21, [sp, #352]
    a978:	ldp	x24, x23, [sp, #336]
    a97c:	ldp	x26, x25, [sp, #320]
    a980:	ldp	x28, x27, [sp, #304]
    a984:	ldp	x29, x30, [sp, #288]
    a988:	add	sp, sp, #0x180
    a98c:	ret
    a990:	mov	x0, x19
    a994:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    a998:	mov	x22, x0
    a99c:	mov	x0, x19
    a9a0:	mov	x1, xzr
    a9a4:	mov	x2, xzr
    a9a8:	mov	w3, wzr
    a9ac:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    a9b0:	cbz	x0, ad7c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x548>
    a9b4:	ldrb	w8, [x0, #8]
    a9b8:	sub	w8, w8, #0x1
    a9bc:	cmp	w8, #0x17
    a9c0:	csel	x2, x0, xzr, cc  // cc = lo, ul, last
    a9c4:	cmp	w8, #0x16
    a9c8:	b.hi	aa44 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x210>  // b.pmore
    a9cc:	ldr	x8, [x2, #16]
    a9d0:	cbz	x8, ada8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x574>
    a9d4:	ldr	w8, [x8, #8]
    a9d8:	cmp	w8, #0x5
    a9dc:	b.ne	aaac <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x278>  // b.any
    a9e0:	str	x0, [x21]
    a9e4:	ldr	x8, [x2, #16]
    a9e8:	cbz	x8, ada8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x574>
    a9ec:	ldr	w9, [x8, #8]
    a9f0:	cmp	w9, #0x5
    a9f4:	b.ne	adf4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x5c0>  // b.any
    a9f8:	ldr	x22, [x8, #24]
    a9fc:	b	aac4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x290>
    aa00:	stur	wzr, [x29, #-88]
    aa04:	ldr	w8, [x19, #40]
    aa08:	cmp	w8, #0x7
    aa0c:	b.eq	a90c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0xd8>  // b.none
    aa10:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aa14:	add	x8, x8, #0x0
    aa18:	mov	w9, #0x103                 	// #259
    aa1c:	mov	x0, x19
    aa20:	stp	x8, xzr, [x29, #-128]
    aa24:	sturh	w9, [x29, #-112]
    aa28:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    aa2c:	str	x0, [sp, #104]
    aa30:	add	x0, sp, #0x68
    aa34:	sub	x2, x29, #0x80
    aa38:	mov	w1, #0x1                   	// #1
    aa3c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    aa40:	b	ad7c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x548>
    aa44:	sub	x8, x29, #0x80
    aa48:	add	x20, x8, #0x10
    aa4c:	stp	x20, xzr, [x29, #-128]
    aa50:	sturb	wzr, [x29, #-112]
    aa54:	ldr	x8, [x0]
    aa58:	ldr	x9, [x8, #40]
    aa5c:	add	x8, sp, #0x8
    aa60:	blr	x9
    aa64:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    aa68:	add	x3, x3, #0x0
    aa6c:	add	x0, sp, #0x8
    aa70:	mov	w4, #0x16                  	// #22
    aa74:	mov	x1, xzr
    aa78:	mov	x2, xzr
    aa7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    aa80:	add	x8, sp, #0x28
    aa84:	add	x21, x8, #0x10
    aa88:	str	x21, [sp, #40]
    aa8c:	mov	x8, x0
    aa90:	ldr	x9, [x8], #16
    aa94:	cmp	x9, x8
    aa98:	b.eq	ac04 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3d0>  // b.none
    aa9c:	str	x9, [sp, #40]
    aaa0:	ldr	x9, [x0, #16]
    aaa4:	str	x9, [sp, #56]
    aaa8:	b	ac0c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3d8>
    aaac:	sub	x1, x29, #0x60
    aab0:	mov	x0, x19
    aab4:	bl	4cf8 <_ZN4llvm8TGParser15ParseRangePieceERNS_15SmallVectorImplIjEEPNS_9TypedInitE>
    aab8:	mov	x22, xzr
    aabc:	mov	x19, xzr
    aac0:	tbnz	w0, #0, ad80 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x54c>
    aac4:	ldur	w8, [x29, #-88]
    aac8:	cbz	w8, abec <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3b8>
    aacc:	str	x20, [sp]
    aad0:	cbnz	x22, adc8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x594>
    aad4:	ldur	x25, [x29, #-96]
    aad8:	mov	x19, xzr
    aadc:	mov	x20, xzr
    aae0:	lsl	x26, x8, #2
    aae4:	mov	x28, #0xfffffffffffffff     	// #1152921504606846975
    aae8:	b	ab00 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2cc>
    aaec:	str	x23, [x20]
    aaf0:	add	x20, x20, #0x8
    aaf4:	subs	x26, x26, #0x4
    aaf8:	add	x25, x25, #0x4
    aafc:	b.eq	abb0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x37c>  // b.none
    ab00:	ldr	w0, [x25]
    ab04:	bl	0 <_ZN4llvm7IntInit3getEl>
    ab08:	cmp	x22, x20
    ab0c:	mov	x23, x0
    ab10:	b.ne	aaec <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2b8>  // b.any
    ab14:	sub	x22, x20, x19
    ab18:	mov	x8, #0x7ffffffffffffff8    	// #9223372036854775800
    ab1c:	cmp	x22, x8
    ab20:	b.eq	ad9c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x568>  // b.none
    ab24:	asr	x20, x22, #3
    ab28:	cmp	x22, #0x0
    ab2c:	csinc	x8, x20, xzr, ne  // ne = any
    ab30:	adds	x8, x8, x20
    ab34:	lsr	x10, x8, #60
    ab38:	cset	w9, cs  // cs = hs, nlast
    ab3c:	cmp	x10, #0x0
    ab40:	cset	w10, ne  // ne = any
    ab44:	orr	w9, w9, w10
    ab48:	cmp	w9, #0x0
    ab4c:	csel	x27, x28, x8, ne  // ne = any
    ab50:	cbz	x27, ab98 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x364>
    ab54:	lsl	x0, x27, #3
    ab58:	bl	0 <_Znwm>
    ab5c:	mov	x24, x0
    ab60:	add	x20, x24, x20, lsl #3
    ab64:	cmp	x22, #0x1
    ab68:	str	x23, [x20]
    ab6c:	b.lt	ab80 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x34c>  // b.tstop
    ab70:	mov	x0, x24
    ab74:	mov	x1, x19
    ab78:	mov	x2, x22
    ab7c:	bl	0 <memmove>
    ab80:	cbz	x19, ab8c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x358>
    ab84:	mov	x0, x19
    ab88:	bl	0 <_ZdlPv>
    ab8c:	add	x22, x24, x27, lsl #3
    ab90:	mov	x19, x24
    ab94:	b	aaf0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x2bc>
    ab98:	mov	x24, xzr
    ab9c:	add	x20, x24, x20, lsl #3
    aba0:	cmp	x22, #0x1
    aba4:	str	x23, [x20]
    aba8:	b.ge	ab70 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x33c>  // b.tcont
    abac:	b	ab80 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x34c>
    abb0:	adrp	x22, 0 <_ZN4llvm8IntRecTy6SharedE>
    abb4:	ldr	x22, [x22]
    abb8:	sub	x8, x20, x19
    abbc:	asr	x1, x8, #3
    abc0:	mov	x0, x19
    abc4:	mov	x2, x22
    abc8:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    abcc:	str	x0, [x21]
    abd0:	cbz	x19, abe4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3b0>
    abd4:	mov	x0, x19
    abd8:	bl	0 <_ZdlPv>
    abdc:	adrp	x22, 0 <_ZN4llvm8IntRecTy6SharedE>
    abe0:	ldr	x22, [x22]
    abe4:	ldr	x20, [sp]
    abe8:	b	abf0 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x3bc>
    abec:	cbz	x22, ad7c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x548>
    abf0:	mov	x0, x20
    abf4:	mov	x1, x22
    abf8:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    abfc:	mov	x19, x0
    ac00:	b	ad80 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x54c>
    ac04:	ldr	q0, [x9]
    ac08:	str	q0, [x21]
    ac0c:	ldr	x9, [x0, #8]
    ac10:	str	x9, [sp, #48]
    ac14:	stp	x8, xzr, [x0]
    ac18:	strb	wzr, [x0, #16]
    ac1c:	ldp	x1, x2, [x29, #-128]
    ac20:	add	x0, sp, #0x28
    ac24:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    ac28:	add	x8, sp, #0x48
    ac2c:	add	x23, x8, #0x10
    ac30:	str	x23, [sp, #72]
    ac34:	mov	x8, x0
    ac38:	ldr	x9, [x8], #16
    ac3c:	cmp	x9, x8
    ac40:	b.eq	ac54 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x420>  // b.none
    ac44:	str	x9, [sp, #72]
    ac48:	ldr	x9, [x0, #16]
    ac4c:	str	x9, [sp, #88]
    ac50:	b	ac5c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x428>
    ac54:	ldr	q0, [x9]
    ac58:	str	q0, [x23]
    ac5c:	ldr	x9, [x0, #8]
    ac60:	str	x9, [sp, #80]
    ac64:	stp	x8, xzr, [x0]
    ac68:	strb	wzr, [x0, #16]
    ac6c:	ldr	x8, [sp, #80]
    ac70:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    ac74:	cmp	x8, x9
    ac78:	b.eq	ade8 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x5b4>  // b.none
    ac7c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ac80:	add	x1, x1, #0x0
    ac84:	add	x0, sp, #0x48
    ac88:	mov	w2, #0x1                   	// #1
    ac8c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    ac90:	add	x8, sp, #0x68
    ac94:	add	x24, x8, #0x10
    ac98:	str	x24, [sp, #104]
    ac9c:	mov	x8, x0
    aca0:	ldr	x9, [x8], #16
    aca4:	cmp	x9, x8
    aca8:	b.eq	acbc <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x488>  // b.none
    acac:	str	x9, [sp, #104]
    acb0:	ldr	x9, [x0, #16]
    acb4:	str	x9, [sp, #120]
    acb8:	b	acc4 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x490>
    acbc:	ldr	q0, [x9]
    acc0:	str	q0, [x24]
    acc4:	ldr	x9, [x0, #8]
    acc8:	mov	w10, #0x104                 	// #260
    accc:	add	x11, sp, #0x68
    acd0:	add	x2, sp, #0x88
    acd4:	str	x9, [sp, #112]
    acd8:	stp	x8, xzr, [x0]
    acdc:	strb	wzr, [x0, #16]
    ace0:	sub	x0, x29, #0x10
    ace4:	mov	w1, #0x1                   	// #1
    ace8:	strh	w10, [sp, #152]
    acec:	stp	x11, xzr, [sp, #136]
    acf0:	stur	x22, [x29, #-16]
    acf4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    acf8:	ldr	x0, [sp, #104]
    acfc:	cmp	x0, x24
    ad00:	b.eq	ad08 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4d4>  // b.none
    ad04:	bl	0 <_ZdlPv>
    ad08:	ldr	x0, [sp, #72]
    ad0c:	cmp	x0, x23
    ad10:	b.eq	ad18 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4e4>  // b.none
    ad14:	bl	0 <_ZdlPv>
    ad18:	ldr	x0, [sp, #40]
    ad1c:	cmp	x0, x21
    ad20:	b.eq	ad28 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x4f4>  // b.none
    ad24:	bl	0 <_ZdlPv>
    ad28:	ldr	x0, [sp, #8]
    ad2c:	add	x8, sp, #0x8
    ad30:	add	x8, x8, #0x10
    ad34:	cmp	x0, x8
    ad38:	b.eq	ad40 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x50c>  // b.none
    ad3c:	bl	0 <_ZdlPv>
    ad40:	ldr	x8, [x19, #328]
    ad44:	cbz	x8, ad6c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x538>
    ad48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ad4c:	add	x8, x8, #0x0
    ad50:	mov	w9, #0x103                 	// #259
    ad54:	add	x2, sp, #0x68
    ad58:	mov	x0, xzr
    ad5c:	mov	x1, xzr
    ad60:	stp	x8, xzr, [sp, #104]
    ad64:	strh	w9, [sp, #120]
    ad68:	bl	0 <_ZN4llvm9PrintNoteENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ad6c:	ldur	x0, [x29, #-128]
    ad70:	cmp	x0, x20
    ad74:	b.eq	ad7c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x548>  // b.none
    ad78:	bl	0 <_ZdlPv>
    ad7c:	mov	x19, xzr
    ad80:	ldur	x0, [x29, #-96]
    ad84:	sub	x8, x29, #0x60
    ad88:	add	x8, x8, #0x10
    ad8c:	cmp	x0, x8
    ad90:	b.eq	a96c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x138>  // b.none
    ad94:	bl	0 <free>
    ad98:	b	a96c <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE+0x138>
    ad9c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ada0:	add	x0, x0, #0x0
    ada4:	bl	0 <_ZSt20__throw_length_errorPKc>
    ada8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adac:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adb0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adb4:	add	x0, x0, #0x0
    adb8:	add	x1, x1, #0x0
    adbc:	add	x3, x3, #0x0
    adc0:	mov	w2, #0x69                  	// #105
    adc4:	bl	0 <__assert_fail>
    adc8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adcc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    add0:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    add4:	add	x0, x0, #0x0
    add8:	add	x1, x1, #0x0
    addc:	add	x3, x3, #0x0
    ade0:	mov	w2, #0x9f2                 	// #2546
    ade4:	bl	0 <__assert_fail>
    ade8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adec:	add	x0, x0, #0x0
    adf0:	bl	0 <_ZSt20__throw_length_errorPKc>
    adf4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adf8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    adfc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ae00:	add	x0, x0, #0x0
    ae04:	add	x1, x1, #0x0
    ae08:	add	x3, x3, #0x0
    ae0c:	mov	w2, #0x108                 	// #264
    ae10:	bl	0 <__assert_fail>

000000000000ae14 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>:
    ae14:	sub	sp, sp, #0x70
    ae18:	stp	x29, x30, [sp, #32]
    ae1c:	stp	x26, x25, [sp, #48]
    ae20:	stp	x24, x23, [sp, #64]
    ae24:	stp	x22, x21, [sp, #80]
    ae28:	stp	x20, x19, [sp, #96]
    ae2c:	add	x29, sp, #0x20
    ae30:	ldr	w8, [x0, #40]
    ae34:	cmp	w8, #0xa
    ae38:	b.ne	b0d4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2c0>  // b.any
    ae3c:	ldp	x8, x9, [x0, #8]
    ae40:	mov	x20, x1
    ae44:	mov	x19, x0
    ae48:	cmp	x8, x9
    ae4c:	cset	w1, eq  // eq = none
    ae50:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ae54:	str	w0, [x19, #40]
    ae58:	cbz	x20, afdc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1c8>
    ae5c:	mov	w2, #0x1                   	// #1
    ae60:	mov	x0, x19
    ae64:	mov	x1, x20
    ae68:	bl	a45c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    ae6c:	mov	x22, x0
    ae70:	mov	x26, x20
    ae74:	cbz	x22, aff8 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1e4>
    ae78:	ldr	w8, [x26, #64]
    ae7c:	ldr	x9, [x26, #56]
    ae80:	cbz	w8, aea0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x8c>
    ae84:	lsl	x10, x8, #3
    ae88:	mov	x11, x9
    ae8c:	ldr	x12, [x11], #8
    ae90:	cmp	x12, x22
    ae94:	b.eq	b0b4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2a0>  // b.none
    ae98:	subs	x10, x10, #0x8
    ae9c:	b.ne	ae8c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x78>  // b.any
    aea0:	ldr	w10, [x26, #68]
    aea4:	add	x21, x26, #0x38
    aea8:	cmp	w8, w10
    aeac:	b.cs	b068 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x254>  // b.hs, b.nlast
    aeb0:	str	x22, [x9, x8, lsl #3]
    aeb4:	ldp	w8, w9, [x26, #64]
    aeb8:	cmp	w8, w9
    aebc:	b.cs	b094 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x280>  // b.hs, b.nlast
    aec0:	add	x22, x21, #0x10
    aec4:	add	w8, w8, #0x1
    aec8:	str	w8, [x26, #64]
    aecc:	ldr	w8, [x19, #40]
    aed0:	cmp	w8, #0xe
    aed4:	b.ne	b01c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x208>  // b.any
    aed8:	ldp	x8, x9, [x19, #8]
    aedc:	mov	x0, x19
    aee0:	cmp	x8, x9
    aee4:	cset	w1, eq  // eq = none
    aee8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    aeec:	str	w0, [x19, #40]
    aef0:	mov	x0, x19
    aef4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    aef8:	mov	x24, x0
    aefc:	mov	w2, #0x1                   	// #1
    af00:	mov	x0, x19
    af04:	mov	x1, x20
    af08:	mov	w25, #0x1                   	// #1
    af0c:	bl	a45c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    af10:	cbz	x0, affc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1e8>
    af14:	ldr	w8, [x26, #64]
    af18:	ldr	x9, [x26, #56]
    af1c:	mov	x23, x0
    af20:	cbz	w8, af5c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x148>
    af24:	lsl	x10, x8, #3
    af28:	mov	x11, x10
    af2c:	mov	x12, x9
    af30:	ldr	x13, [x12], #8
    af34:	cmp	x13, x23
    af38:	b.eq	afac <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x198>  // b.none
    af3c:	subs	x11, x11, #0x8
    af40:	b.ne	af30 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x11c>  // b.any
    af44:	mov	x11, x9
    af48:	ldr	x12, [x11], #8
    af4c:	cmp	x12, x23
    af50:	b.eq	b0b4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x2a0>  // b.none
    af54:	subs	x10, x10, #0x8
    af58:	b.ne	af48 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x134>  // b.any
    af5c:	ldr	w10, [x26, #68]
    af60:	cmp	w8, w10
    af64:	b.cs	af7c <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x168>  // b.hs, b.nlast
    af68:	str	x23, [x9, x8, lsl #3]
    af6c:	ldp	w8, w9, [x26, #64]
    af70:	cmp	w8, w9
    af74:	b.cc	aec4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>  // b.lo, b.ul, b.last
    af78:	b	b094 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x280>
    af7c:	mov	w3, #0x8                   	// #8
    af80:	mov	x0, x21
    af84:	mov	x1, x22
    af88:	mov	x2, xzr
    af8c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    af90:	ldr	w8, [x26, #64]
    af94:	ldr	x9, [x26, #56]
    af98:	str	x23, [x9, x8, lsl #3]
    af9c:	ldp	w8, w9, [x26, #64]
    afa0:	cmp	w8, w9
    afa4:	b.cc	aec4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xb0>  // b.lo, b.ul, b.last
    afa8:	b	b094 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x280>
    afac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    afb0:	add	x8, x8, #0x0
    afb4:	mov	w9, #0x103                 	// #259
    afb8:	stp	x8, xzr, [sp]
    afbc:	strh	w9, [sp, #16]
    afc0:	stur	x24, [x29, #-8]
    afc4:	sub	x0, x29, #0x8
    afc8:	mov	x2, sp
    afcc:	mov	w1, #0x1                   	// #1
    afd0:	mov	w25, #0x1                   	// #1
    afd4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    afd8:	b	affc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1e8>
    afdc:	ldr	x26, [x19, #328]
    afe0:	mov	w2, #0x1                   	// #1
    afe4:	mov	x0, x19
    afe8:	mov	x1, xzr
    afec:	bl	a45c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    aff0:	mov	x22, x0
    aff4:	cbnz	x22, ae78 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x64>
    aff8:	mov	w25, #0x1                   	// #1
    affc:	mov	w0, w25
    b000:	ldp	x20, x19, [sp, #96]
    b004:	ldp	x22, x21, [sp, #80]
    b008:	ldp	x24, x23, [sp, #64]
    b00c:	ldp	x26, x25, [sp, #48]
    b010:	ldp	x29, x30, [sp, #32]
    b014:	add	sp, sp, #0x70
    b018:	ret
    b01c:	cmp	w8, #0xb
    b020:	b.ne	b044 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x230>  // b.any
    b024:	ldp	x8, x9, [x19, #8]
    b028:	mov	x0, x19
    b02c:	cmp	x8, x9
    b030:	cset	w1, eq  // eq = none
    b034:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b038:	mov	w25, wzr
    b03c:	str	w0, [x19, #40]
    b040:	b	affc <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1e8>
    b044:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b048:	add	x8, x8, #0x0
    b04c:	mov	w9, #0x103                 	// #259
    b050:	mov	x0, x19
    b054:	stp	x8, xzr, [sp]
    b058:	strh	w9, [sp, #16]
    b05c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b060:	stur	x0, [x29, #-8]
    b064:	b	afc4 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0x1b0>
    b068:	add	x1, x21, #0x10
    b06c:	mov	w3, #0x8                   	// #8
    b070:	mov	x0, x21
    b074:	mov	x2, xzr
    b078:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    b07c:	ldr	w8, [x26, #64]
    b080:	ldr	x9, [x26, #56]
    b084:	str	x22, [x9, x8, lsl #3]
    b088:	ldp	w8, w9, [x26, #64]
    b08c:	cmp	w8, w9
    b090:	b.cc	aec0 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE+0xac>  // b.lo, b.ul, b.last
    b094:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b098:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b09c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0a0:	add	x0, x0, #0x0
    b0a4:	add	x1, x1, #0x0
    b0a8:	add	x3, x3, #0x0
    b0ac:	mov	w2, #0x43                  	// #67
    b0b0:	bl	0 <__assert_fail>
    b0b4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0b8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0bc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0c0:	add	x0, x0, #0x0
    b0c4:	add	x1, x1, #0x0
    b0c8:	add	x3, x3, #0x0
    b0cc:	mov	w2, #0x605                 	// #1541
    b0d0:	bl	0 <__assert_fail>
    b0d4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0d8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0dc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b0e0:	add	x0, x0, #0x0
    b0e4:	add	x1, x1, #0x0
    b0e8:	add	x3, x3, #0x0
    b0ec:	mov	w2, #0xa08                 	// #2568
    b0f0:	bl	0 <__assert_fail>

000000000000b0f4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>:
    b0f4:	sub	sp, sp, #0xe0
    b0f8:	stp	x29, x30, [sp, #160]
    b0fc:	stp	x24, x23, [sp, #176]
    b100:	stp	x22, x21, [sp, #192]
    b104:	stp	x20, x19, [sp, #208]
    b108:	add	x29, sp, #0xa0
    b10c:	ldr	w8, [x0, #40]
    b110:	mov	x19, x0
    b114:	mov	x20, x1
    b118:	cmp	w8, #0x1e
    b11c:	b.eq	b144 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x50>  // b.none
    b120:	cmp	w8, #0x23
    b124:	b.ne	b1e0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xec>  // b.any
    b128:	mov	x0, x19
    b12c:	ldp	x20, x19, [sp, #208]
    b130:	ldp	x22, x21, [sp, #192]
    b134:	ldp	x24, x23, [sp, #176]
    b138:	ldp	x29, x30, [sp, #160]
    b13c:	add	sp, sp, #0xe0
    b140:	b	b458 <_ZN4llvm8TGParser11ParseDefvarEv>
    b144:	ldp	x8, x9, [x19, #8]
    b148:	mov	x0, x19
    b14c:	cmp	x8, x9
    b150:	cset	w1, eq  // eq = none
    b154:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b158:	cmp	w0, #0x48
    b15c:	str	w0, [x19, #40]
    b160:	b.ne	b220 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x12c>  // b.any
    b164:	mov	x0, x19
    b168:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b16c:	ldr	w8, [x19, #40]
    b170:	and	w8, w8, #0xfffffffc
    b174:	cmp	w8, #0x48
    b178:	b.ne	b438 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x344>  // b.any
    b17c:	mov	x21, x0
    b180:	ldp	x0, x1, [x19, #48]
    b184:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b188:	ldp	x8, x9, [x19, #8]
    b18c:	mov	x22, x0
    b190:	mov	x0, x19
    b194:	cmp	x8, x9
    b198:	cset	w1, eq  // eq = none
    b19c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b1a0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b1a4:	ldr	d0, [x8]
    b1a8:	add	x8, sp, #0x48
    b1ac:	str	w0, [x19, #40]
    b1b0:	add	x24, x8, #0x10
    b1b4:	add	x1, sp, #0x48
    b1b8:	mov	x0, x19
    b1bc:	str	x24, [sp, #72]
    b1c0:	str	d0, [sp, #80]
    b1c4:	bl	50e0 <_ZN4llvm8TGParser20ParseOptionalBitListERNS_15SmallVectorImplIjEE>
    b1c8:	tbz	w0, #0, b26c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x178>
    b1cc:	mov	w20, #0x1                   	// #1
    b1d0:	ldr	x0, [sp, #72]
    b1d4:	cmp	x0, x24
    b1d8:	b.ne	b40c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x318>  // b.any
    b1dc:	b	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>
    b1e0:	mov	x0, x19
    b1e4:	mov	x1, x20
    b1e8:	mov	w2, wzr
    b1ec:	bl	a45c <_ZN4llvm8TGParser16ParseDeclarationEPNS_6RecordEb>
    b1f0:	cbz	x0, b22c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x138>
    b1f4:	ldr	w8, [x19, #40]
    b1f8:	cmp	w8, #0xd
    b1fc:	b.ne	b234 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x140>  // b.any
    b200:	ldp	x8, x9, [x19, #8]
    b204:	mov	x0, x19
    b208:	cmp	x8, x9
    b20c:	cset	w1, eq  // eq = none
    b210:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b214:	mov	w20, wzr
    b218:	str	w0, [x19, #40]
    b21c:	b	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>
    b220:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b224:	add	x8, x8, #0x0
    b228:	b	b23c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x148>
    b22c:	mov	w20, #0x1                   	// #1
    b230:	b	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>
    b234:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b238:	add	x8, x8, #0x0
    b23c:	mov	w9, #0x103                 	// #259
    b240:	mov	x0, x19
    b244:	stp	x8, xzr, [sp, #72]
    b248:	strh	w9, [sp, #88]
    b24c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b250:	str	x0, [sp, #48]
    b254:	add	x0, sp, #0x30
    b258:	add	x2, sp, #0x48
    b25c:	mov	w1, #0x1                   	// #1
    b260:	mov	w20, #0x1                   	// #1
    b264:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b268:	b	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>
    b26c:	ldr	w8, [sp, #80]
    b270:	cbz	w8, b2a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1b4>
    b274:	ldr	x9, [sp, #72]
    b278:	add	x8, x9, x8, lsl #2
    b27c:	sub	x8, x8, #0x4
    b280:	cmp	x8, x9
    b284:	b.ls	b2a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1b4>  // b.plast
    b288:	add	x9, x9, #0x4
    b28c:	ldr	w10, [x8]
    b290:	ldur	w11, [x9, #-4]
    b294:	stur	w10, [x9, #-4]
    b298:	str	w11, [x8], #-4
    b29c:	cmp	x9, x8
    b2a0:	add	x9, x9, #0x4
    b2a4:	b.cc	b28c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x198>  // b.lo, b.ul, b.last
    b2a8:	ldr	w8, [x19, #40]
    b2ac:	cmp	w8, #0x10
    b2b0:	b.ne	b300 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x20c>  // b.any
    b2b4:	ldp	x8, x9, [x19, #8]
    b2b8:	mov	x0, x19
    b2bc:	cmp	x8, x9
    b2c0:	cset	w1, eq  // eq = none
    b2c4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b2c8:	str	w0, [x19, #40]
    b2cc:	ldr	w9, [x20, #80]
    b2d0:	cbz	w9, b3a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2b4>
    b2d4:	ldr	x8, [x20, #72]
    b2d8:	add	x9, x9, x9, lsl #1
    b2dc:	lsl	x9, x9, #3
    b2e0:	mov	x10, x8
    b2e4:	ldr	x11, [x10], #24
    b2e8:	cmp	x11, x22
    b2ec:	b.eq	b328 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x234>  // b.none
    b2f0:	subs	x9, x9, #0x18
    b2f4:	mov	x8, x10
    b2f8:	b.ne	b2e4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x1f0>  // b.any
    b2fc:	b	b3a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2b4>
    b300:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b304:	add	x8, x8, #0x0
    b308:	mov	w9, #0x103                 	// #259
    b30c:	mov	x0, x19
    b310:	stp	x8, xzr, [sp, #48]
    b314:	strh	w9, [sp, #64]
    b318:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b31c:	str	x0, [sp, #24]
    b320:	add	x0, sp, #0x18
    b324:	b	b3f0 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2fc>
    b328:	cbz	x8, b3a8 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x2b4>
    b32c:	ldr	x8, [x8, #8]
    b330:	mov	x0, x19
    b334:	mov	x1, x20
    b338:	mov	w3, wzr
    b33c:	and	x2, x8, #0xfffffffffffffff8
    b340:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b344:	cbz	x0, b1cc <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0xd8>
    b348:	ldr	w8, [x19, #40]
    b34c:	cmp	w8, #0xd
    b350:	b.ne	b42c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x338>  // b.any
    b354:	ldp	x8, x9, [x19, #8]
    b358:	mov	x23, x0
    b35c:	mov	x0, x19
    b360:	cmp	x8, x9
    b364:	cset	w1, eq  // eq = none
    b368:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b36c:	str	w0, [x19, #40]
    b370:	ldr	x4, [sp, #72]
    b374:	ldr	w5, [sp, #80]
    b378:	mov	x0, x19
    b37c:	mov	x1, x20
    b380:	mov	x2, x21
    b384:	mov	x3, x22
    b388:	mov	x6, x23
    b38c:	mov	w7, wzr
    b390:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b394:	mov	w20, w0
    b398:	ldr	x0, [sp, #72]
    b39c:	cmp	x0, x24
    b3a0:	b.ne	b40c <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x318>  // b.any
    b3a4:	b	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>
    b3a8:	ldur	q0, [x22, #24]
    b3ac:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b3b0:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b3b4:	mov	w8, #0x503                 	// #1283
    b3b8:	add	x9, x9, #0x0
    b3bc:	mov	x10, sp
    b3c0:	add	x11, sp, #0x18
    b3c4:	add	x12, x12, #0x0
    b3c8:	mov	w13, #0x302                 	// #770
    b3cc:	mov	x0, x19
    b3d0:	strh	w8, [sp, #40]
    b3d4:	stp	x9, x10, [sp, #24]
    b3d8:	stp	x11, x12, [sp, #48]
    b3dc:	str	q0, [sp]
    b3e0:	strh	w13, [sp, #64]
    b3e4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b3e8:	stur	x0, [x29, #-8]
    b3ec:	sub	x0, x29, #0x8
    b3f0:	add	x2, sp, #0x30
    b3f4:	mov	w1, #0x1                   	// #1
    b3f8:	mov	w20, #0x1                   	// #1
    b3fc:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b400:	ldr	x0, [sp, #72]
    b404:	cmp	x0, x24
    b408:	b.eq	b410 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x31c>  // b.none
    b40c:	bl	0 <free>
    b410:	and	w0, w20, #0x1
    b414:	ldp	x20, x19, [sp, #208]
    b418:	ldp	x22, x21, [sp, #192]
    b41c:	ldp	x24, x23, [sp, #176]
    b420:	ldp	x29, x30, [sp, #160]
    b424:	add	sp, sp, #0xe0
    b428:	ret
    b42c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b430:	add	x8, x8, #0x0
    b434:	b	b308 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE+0x214>
    b438:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b43c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b440:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b444:	add	x0, x0, #0x0
    b448:	add	x1, x1, #0x0
    b44c:	add	x3, x3, #0x0
    b450:	mov	w2, #0x71                  	// #113
    b454:	bl	0 <__assert_fail>

000000000000b458 <_ZN4llvm8TGParser11ParseDefvarEv>:
    b458:	sub	sp, sp, #0x70
    b45c:	stp	x29, x30, [sp, #32]
    b460:	stp	x26, x25, [sp, #48]
    b464:	stp	x24, x23, [sp, #64]
    b468:	stp	x22, x21, [sp, #80]
    b46c:	stp	x20, x19, [sp, #96]
    b470:	add	x29, sp, #0x20
    b474:	ldr	w8, [x0, #40]
    b478:	cmp	w8, #0x23
    b47c:	b.ne	b6cc <_ZN4llvm8TGParser11ParseDefvarEv+0x274>  // b.any
    b480:	ldp	x8, x9, [x0, #8]
    b484:	mov	x19, x0
    b488:	cmp	x8, x9
    b48c:	cset	w1, eq  // eq = none
    b490:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b494:	cmp	w0, #0x48
    b498:	str	w0, [x19, #40]
    b49c:	b.ne	b548 <_ZN4llvm8TGParser11ParseDefvarEv+0xf0>  // b.any
    b4a0:	ldp	x0, x1, [x19, #48]
    b4a4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    b4a8:	ldr	x8, [x19, #336]
    b4ac:	mov	x20, x0
    b4b0:	cbz	x8, b554 <_ZN4llvm8TGParser11ParseDefvarEv+0xfc>
    b4b4:	ldr	x25, [x8, #16]
    b4b8:	add	x22, x8, #0x8
    b4bc:	cbz	x25, b578 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    b4c0:	ldp	x21, x24, [x20, #24]
    b4c4:	mov	x23, x22
    b4c8:	b	b4dc <_ZN4llvm8TGParser11ParseDefvarEv+0x84>
    b4cc:	add	x8, x25, #0x10
    b4d0:	mov	x23, x25
    b4d4:	ldr	x25, [x8]
    b4d8:	cbz	x25, b518 <_ZN4llvm8TGParser11ParseDefvarEv+0xc0>
    b4dc:	ldr	x26, [x25, #40]
    b4e0:	cmp	x24, x26
    b4e4:	csel	x2, x24, x26, cc  // cc = lo, ul, last
    b4e8:	cbz	x2, b504 <_ZN4llvm8TGParser11ParseDefvarEv+0xac>
    b4ec:	ldr	x0, [x25, #32]
    b4f0:	mov	x1, x21
    b4f4:	bl	0 <memcmp>
    b4f8:	cbz	w0, b504 <_ZN4llvm8TGParser11ParseDefvarEv+0xac>
    b4fc:	tbz	w0, #31, b4cc <_ZN4llvm8TGParser11ParseDefvarEv+0x74>
    b500:	b	b50c <_ZN4llvm8TGParser11ParseDefvarEv+0xb4>
    b504:	cmp	x26, x24
    b508:	b.cs	b4cc <_ZN4llvm8TGParser11ParseDefvarEv+0x74>  // b.hs, b.nlast
    b50c:	add	x8, x25, #0x18
    b510:	ldr	x25, [x8]
    b514:	cbnz	x25, b4dc <_ZN4llvm8TGParser11ParseDefvarEv+0x84>
    b518:	cmp	x23, x22
    b51c:	b.eq	b57c <_ZN4llvm8TGParser11ParseDefvarEv+0x124>  // b.none
    b520:	ldr	x25, [x23, #40]
    b524:	cmp	x25, x24
    b528:	csel	x2, x25, x24, cc  // cc = lo, ul, last
    b52c:	cbz	x2, b570 <_ZN4llvm8TGParser11ParseDefvarEv+0x118>
    b530:	ldr	x1, [x23, #32]
    b534:	mov	x0, x21
    b538:	bl	0 <memcmp>
    b53c:	cbz	w0, b570 <_ZN4llvm8TGParser11ParseDefvarEv+0x118>
    b540:	tbnz	w0, #31, b578 <_ZN4llvm8TGParser11ParseDefvarEv+0x120>
    b544:	b	b57c <_ZN4llvm8TGParser11ParseDefvarEv+0x124>
    b548:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b54c:	add	x8, x8, #0x0
    b550:	b	b668 <_ZN4llvm8TGParser11ParseDefvarEv+0x210>
    b554:	ldr	x0, [x19, #344]
    b558:	ldp	x1, x2, [x20, #24]
    b55c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b560:	cbz	x0, b590 <_ZN4llvm8TGParser11ParseDefvarEv+0x138>
    b564:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b568:	add	x8, x8, #0x0
    b56c:	b	b668 <_ZN4llvm8TGParser11ParseDefvarEv+0x210>
    b570:	cmp	x24, x25
    b574:	b.cs	b57c <_ZN4llvm8TGParser11ParseDefvarEv+0x124>  // b.hs, b.nlast
    b578:	mov	x23, x22
    b57c:	cmp	x23, x22
    b580:	b.eq	b590 <_ZN4llvm8TGParser11ParseDefvarEv+0x138>  // b.none
    b584:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b588:	add	x8, x8, #0x0
    b58c:	b	b668 <_ZN4llvm8TGParser11ParseDefvarEv+0x210>
    b590:	ldp	x8, x9, [x19, #8]
    b594:	mov	x0, x19
    b598:	cmp	x8, x9
    b59c:	cset	w1, eq  // eq = none
    b5a0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b5a4:	cmp	w0, #0x10
    b5a8:	str	w0, [x19, #40]
    b5ac:	b.ne	b64c <_ZN4llvm8TGParser11ParseDefvarEv+0x1f4>  // b.any
    b5b0:	ldp	x8, x9, [x19, #8]
    b5b4:	mov	x0, x19
    b5b8:	cmp	x8, x9
    b5bc:	cset	w1, eq  // eq = none
    b5c0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b5c4:	str	w0, [x19, #40]
    b5c8:	mov	x0, x19
    b5cc:	mov	x1, xzr
    b5d0:	mov	x2, xzr
    b5d4:	mov	w3, wzr
    b5d8:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    b5dc:	cbz	x0, b658 <_ZN4llvm8TGParser11ParseDefvarEv+0x200>
    b5e0:	ldr	w8, [x19, #40]
    b5e4:	cmp	w8, #0xd
    b5e8:	b.ne	b660 <_ZN4llvm8TGParser11ParseDefvarEv+0x208>  // b.any
    b5ec:	ldp	x8, x9, [x19, #8]
    b5f0:	mov	x21, x0
    b5f4:	mov	x0, x19
    b5f8:	cmp	x8, x9
    b5fc:	cset	w1, eq  // eq = none
    b600:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b604:	ldr	x8, [x19, #336]
    b608:	str	w0, [x19, #40]
    b60c:	cbz	x8, b6b4 <_ZN4llvm8TGParser11ParseDefvarEv+0x25c>
    b610:	ldp	x9, x10, [x20, #24]
    b614:	mov	x1, sp
    b618:	mov	x0, x8
    b61c:	str	x21, [sp, #16]
    b620:	stp	x9, x10, [sp]
    b624:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b628:	tbnz	w1, #0, b6c4 <_ZN4llvm8TGParser11ParseDefvarEv+0x26c>
    b62c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b630:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b634:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b638:	add	x0, x0, #0x0
    b63c:	add	x1, x1, #0x0
    b640:	add	x3, x3, #0x0
    b644:	mov	w2, #0x75                  	// #117
    b648:	bl	0 <__assert_fail>
    b64c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b650:	add	x8, x8, #0x0
    b654:	b	b668 <_ZN4llvm8TGParser11ParseDefvarEv+0x210>
    b658:	mov	w19, #0x1                   	// #1
    b65c:	b	b694 <_ZN4llvm8TGParser11ParseDefvarEv+0x23c>
    b660:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b664:	add	x8, x8, #0x0
    b668:	mov	w9, #0x103                 	// #259
    b66c:	mov	x0, x19
    b670:	stp	x8, xzr, [sp]
    b674:	strh	w9, [sp, #16]
    b678:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b67c:	stur	x0, [x29, #-8]
    b680:	sub	x0, x29, #0x8
    b684:	mov	x2, sp
    b688:	mov	w1, #0x1                   	// #1
    b68c:	mov	w19, #0x1                   	// #1
    b690:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b694:	mov	w0, w19
    b698:	ldp	x20, x19, [sp, #96]
    b69c:	ldp	x22, x21, [sp, #80]
    b6a0:	ldp	x24, x23, [sp, #64]
    b6a4:	ldp	x26, x25, [sp, #48]
    b6a8:	ldp	x29, x30, [sp, #32]
    b6ac:	add	sp, sp, #0x70
    b6b0:	ret
    b6b4:	ldr	x0, [x19, #344]
    b6b8:	ldp	x1, x2, [x20, #24]
    b6bc:	mov	x3, x21
    b6c0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b6c4:	mov	w19, wzr
    b6c8:	b	b694 <_ZN4llvm8TGParser11ParseDefvarEv+0x23c>
    b6cc:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b6d0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b6d4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b6d8:	add	x0, x0, #0x0
    b6dc:	add	x1, x1, #0x0
    b6e0:	add	x3, x3, #0x0
    b6e4:	mov	w2, #0xb09                 	// #2825
    b6e8:	bl	0 <__assert_fail>

000000000000b6ec <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>:
    b6ec:	sub	sp, sp, #0x50
    b6f0:	stp	x29, x30, [sp, #32]
    b6f4:	str	x21, [sp, #48]
    b6f8:	stp	x20, x19, [sp, #64]
    b6fc:	add	x29, sp, #0x20
    b700:	ldr	w8, [x0, #40]
    b704:	mov	x19, x0
    b708:	cmp	w8, #0x6
    b70c:	b.eq	b750 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x64>  // b.none
    b710:	cmp	w8, #0xd
    b714:	b.eq	b7e4 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xf8>  // b.none
    b718:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b71c:	add	x8, x8, #0x0
    b720:	mov	w9, #0x103                 	// #259
    b724:	mov	x0, x19
    b728:	stp	x8, xzr, [sp, #8]
    b72c:	strh	w9, [sp, #24]
    b730:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    b734:	str	x0, [x29, #24]
    b738:	add	x0, x29, #0x18
    b73c:	add	x2, sp, #0x8
    b740:	mov	w1, #0x1                   	// #1
    b744:	mov	w20, #0x1                   	// #1
    b748:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    b74c:	b	b800 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x114>
    b750:	ldp	x8, x9, [x19, #8]
    b754:	mov	x20, x1
    b758:	mov	x0, x19
    b75c:	cmp	x8, x9
    b760:	cset	w1, eq  // eq = none
    b764:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b768:	str	w0, [x19, #40]
    b76c:	mov	x0, x19
    b770:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b774:	mov	x21, x0
    b778:	ldr	w8, [x19, #40]
    b77c:	cmp	w8, #0x7
    b780:	b.eq	b79c <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xb0>  // b.none
    b784:	mov	x0, x19
    b788:	mov	x1, x20
    b78c:	bl	b0f4 <_ZN4llvm8TGParser13ParseBodyItemEPNS_6RecordE>
    b790:	tbz	w0, #0, b778 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x8c>
    b794:	mov	w20, #0x1                   	// #1
    b798:	b	b800 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x114>
    b79c:	ldr	x8, [x19, #336]
    b7a0:	cmp	x8, x21
    b7a4:	b.ne	b818 <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0x12c>  // b.any
    b7a8:	ldr	x8, [x21, #48]
    b7ac:	str	xzr, [x21, #48]
    b7b0:	str	xzr, [sp, #8]
    b7b4:	ldr	x20, [x19, #336]
    b7b8:	str	x8, [x19, #336]
    b7bc:	cbz	x20, b7dc <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE+0xf0>
    b7c0:	add	x0, x20, #0x30
    b7c4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b7c8:	ldr	x1, [x20, #16]
    b7cc:	mov	x0, x20
    b7d0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b7d4:	mov	x0, x20
    b7d8:	bl	0 <_ZdlPv>
    b7dc:	add	x0, sp, #0x8
    b7e0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b7e4:	ldp	x8, x9, [x19, #8]
    b7e8:	mov	x0, x19
    b7ec:	cmp	x8, x9
    b7f0:	cset	w1, eq  // eq = none
    b7f4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b7f8:	mov	w20, wzr
    b7fc:	str	w0, [x19, #40]
    b800:	mov	w0, w20
    b804:	ldp	x20, x19, [sp, #64]
    b808:	ldr	x21, [sp, #48]
    b80c:	ldp	x29, x30, [sp, #32]
    b810:	add	sp, sp, #0x50
    b814:	ret
    b818:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b81c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b820:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    b824:	add	x0, x0, #0x0
    b828:	add	x1, x1, #0x0
    b82c:	add	x3, x3, #0x0
    b830:	mov	w2, #0xc1                  	// #193
    b834:	bl	0 <__assert_fail>

000000000000b838 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE>:
    b838:	stp	x29, x30, [sp, #-64]!
    b83c:	stp	x24, x23, [sp, #16]
    b840:	stp	x22, x21, [sp, #32]
    b844:	stp	x20, x19, [sp, #48]
    b848:	mov	x29, sp
    b84c:	ldp	x21, x22, [x0, #200]
    b850:	cmp	x21, x22
    b854:	b.eq	b8c8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x90>  // b.none
    b858:	mov	x19, x0
    b85c:	mov	x20, x1
    b860:	b	b870 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x38>
    b864:	add	x21, x21, #0xd0
    b868:	cmp	x21, x22
    b86c:	b.eq	b8c8 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x90>  // b.none
    b870:	ldr	w8, [x21, #8]
    b874:	cbz	w8, b864 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x2c>
    b878:	ldr	x9, [x21]
    b87c:	add	x8, x8, x8, lsl #1
    b880:	lsl	x23, x8, #4
    b884:	add	x24, x9, #0x20
    b888:	ldp	x3, x4, [x24, #-32]
    b88c:	ldur	x8, [x24, #-16]
    b890:	ldp	x6, x2, [x24]
    b894:	mov	x0, x19
    b898:	mov	x1, x20
    b89c:	sub	x8, x8, x4
    b8a0:	asr	x5, x8, #2
    b8a4:	mov	w7, wzr
    b8a8:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b8ac:	tbnz	w0, #0, b8c0 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x88>
    b8b0:	subs	x23, x23, #0x30
    b8b4:	add	x24, x24, #0x30
    b8b8:	b.ne	b888 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x50>  // b.any
    b8bc:	b	b864 <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x2c>
    b8c0:	mov	w0, #0x1                   	// #1
    b8c4:	b	b8cc <_ZN4llvm8TGParser13ApplyLetStackEPNS_6RecordE+0x94>
    b8c8:	mov	w0, wzr
    b8cc:	ldp	x20, x19, [sp, #48]
    b8d0:	ldp	x22, x21, [sp, #32]
    b8d4:	ldp	x24, x23, [sp, #16]
    b8d8:	ldp	x29, x30, [sp], #64
    b8dc:	ret

000000000000b8e0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>:
    b8e0:	stp	x29, x30, [sp, #-64]!
    b8e4:	stp	x24, x23, [sp, #16]
    b8e8:	stp	x22, x21, [sp, #32]
    b8ec:	stp	x20, x19, [sp, #48]
    b8f0:	mov	x29, sp
    b8f4:	ldr	x20, [x1]
    b8f8:	mov	x19, x0
    b8fc:	cbz	x20, b964 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x84>
    b900:	ldp	x21, x22, [x19, #200]
    b904:	b	b90c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x2c>
    b908:	add	x21, x21, #0xd0
    b90c:	cmp	x21, x22
    b910:	b.eq	b990 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb0>  // b.none
    b914:	ldr	w8, [x21, #8]
    b918:	cbz	w8, b908 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x28>
    b91c:	ldr	x9, [x21]
    b920:	add	x8, x8, x8, lsl #1
    b924:	lsl	x23, x8, #4
    b928:	add	x24, x9, #0x20
    b92c:	ldp	x3, x4, [x24, #-32]
    b930:	ldur	x8, [x24, #-16]
    b934:	ldp	x6, x2, [x24]
    b938:	mov	x0, x19
    b93c:	mov	x1, x20
    b940:	sub	x8, x8, x4
    b944:	asr	x5, x8, #2
    b948:	mov	w7, wzr
    b94c:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    b950:	tbnz	w0, #0, b998 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb8>
    b954:	subs	x23, x23, #0x30
    b958:	add	x24, x24, #0x30
    b95c:	b.ne	b92c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x4c>  // b.any
    b960:	b	b908 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x28>
    b964:	ldr	x8, [x1, #8]
    b968:	ldp	x20, x21, [x8, #24]
    b96c:	cmp	x20, x21
    b970:	b.eq	b990 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb0>  // b.none
    b974:	mov	x0, x19
    b978:	mov	x1, x20
    b97c:	bl	b8e0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    b980:	tbnz	w0, #0, b998 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xb8>
    b984:	add	x20, x20, #0x10
    b988:	cmp	x21, x20
    b98c:	b.ne	b974 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0x94>  // b.any
    b990:	mov	w0, wzr
    b994:	b	b99c <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE+0xbc>
    b998:	mov	w0, #0x1                   	// #1
    b99c:	ldp	x20, x19, [sp, #48]
    b9a0:	ldp	x22, x21, [sp, #32]
    b9a4:	ldp	x24, x23, [sp, #16]
    b9a8:	ldp	x29, x30, [sp], #64
    b9ac:	ret

000000000000b9b0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>:
    b9b0:	sub	sp, sp, #0xe0
    b9b4:	stp	x29, x30, [sp, #160]
    b9b8:	stp	x24, x23, [sp, #176]
    b9bc:	stp	x22, x21, [sp, #192]
    b9c0:	stp	x20, x19, [sp, #208]
    b9c4:	add	x29, sp, #0xa0
    b9c8:	ldr	w8, [x0, #40]
    b9cc:	mov	x19, x0
    b9d0:	mov	x20, x1
    b9d4:	cmp	w8, #0xc
    b9d8:	b.ne	baf8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x148>  // b.any
    b9dc:	ldp	x8, x9, [x19, #8]
    b9e0:	mov	x0, x19
    b9e4:	cmp	x8, x9
    b9e8:	cset	w1, eq  // eq = none
    b9ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    b9f0:	str	w0, [x19, #40]
    b9f4:	add	x8, sp, #0x50
    b9f8:	mov	x0, x19
    b9fc:	mov	x1, x20
    ba00:	mov	w2, wzr
    ba04:	add	x23, sp, #0x50
    ba08:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    ba0c:	ldr	x8, [sp, #96]
    ba10:	cbz	x8, baac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xfc>
    ba14:	add	x8, sp, #0x8
    ba18:	add	x21, x23, #0x18
    ba1c:	add	x22, x8, #0x18
    ba20:	add	x24, x8, #0x28
    ba24:	b	ba30 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x80>
    ba28:	ldr	x8, [sp, #96]
    ba2c:	cbz	x8, baac <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0xfc>
    ba30:	add	x2, sp, #0x50
    ba34:	mov	x0, x19
    ba38:	mov	x1, x20
    ba3c:	bl	1580 <_ZN4llvm8TGParser11AddSubClassEPNS_6RecordERNS_17SubClassReferenceE>
    ba40:	tbnz	w0, #0, bac0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x110>
    ba44:	ldr	w8, [x19, #40]
    ba48:	cmp	w8, #0xe
    ba4c:	b.ne	bae0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x130>  // b.any
    ba50:	ldp	x8, x9, [x19, #8]
    ba54:	mov	x0, x19
    ba58:	cmp	x8, x9
    ba5c:	cset	w1, eq  // eq = none
    ba60:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    ba64:	str	w0, [x19, #40]
    ba68:	add	x8, sp, #0x8
    ba6c:	mov	x0, x19
    ba70:	mov	x1, x20
    ba74:	mov	w2, wzr
    ba78:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    ba7c:	ldur	q0, [sp, #8]
    ba80:	ldr	x8, [sp, #24]
    ba84:	mov	x0, x21
    ba88:	mov	x1, x22
    ba8c:	str	q0, [sp, #80]
    ba90:	str	x8, [sp, #96]
    ba94:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ba98:	ldr	x0, [sp, #32]
    ba9c:	cmp	x0, x24
    baa0:	b.eq	ba28 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x78>  // b.none
    baa4:	bl	0 <free>
    baa8:	b	ba28 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x78>
    baac:	ldr	x0, [sp, #104]
    bab0:	add	x8, x23, #0x28
    bab4:	cmp	x0, x8
    bab8:	b.ne	bad4 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x124>  // b.any
    babc:	b	bad8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>
    bac0:	ldr	x0, [sp, #104]
    bac4:	add	x8, sp, #0x50
    bac8:	add	x8, x8, #0x28
    bacc:	cmp	x0, x8
    bad0:	b.eq	bad8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>  // b.none
    bad4:	bl	0 <free>
    bad8:	mov	w0, #0x1                   	// #1
    badc:	b	bb68 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x1b8>
    bae0:	ldr	x0, [sp, #104]
    bae4:	add	x8, sp, #0x50
    bae8:	add	x8, x8, #0x28
    baec:	cmp	x0, x8
    baf0:	b.eq	baf8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x148>  // b.none
    baf4:	bl	0 <free>
    baf8:	ldp	x21, x22, [x19, #200]
    bafc:	b	bb04 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x154>
    bb00:	add	x21, x21, #0xd0
    bb04:	cmp	x21, x22
    bb08:	b.eq	bb5c <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x1ac>  // b.none
    bb0c:	ldr	w8, [x21, #8]
    bb10:	cbz	w8, bb00 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x150>
    bb14:	ldr	x9, [x21]
    bb18:	add	x8, x8, x8, lsl #1
    bb1c:	lsl	x23, x8, #4
    bb20:	add	x24, x9, #0x20
    bb24:	ldp	x3, x4, [x24, #-32]
    bb28:	ldur	x8, [x24, #-16]
    bb2c:	ldp	x6, x2, [x24]
    bb30:	mov	x0, x19
    bb34:	mov	x1, x20
    bb38:	sub	x8, x8, x4
    bb3c:	asr	x5, x8, #2
    bb40:	mov	w7, wzr
    bb44:	bl	79c <_ZN4llvm8TGParser8SetValueEPNS_6RecordENS_5SMLocEPNS_4InitENS_8ArrayRefIjEES5_b>
    bb48:	tbnz	w0, #0, bad8 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x128>
    bb4c:	subs	x23, x23, #0x30
    bb50:	add	x24, x24, #0x30
    bb54:	b.ne	bb24 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x174>  // b.any
    bb58:	b	bb00 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE+0x150>
    bb5c:	mov	x0, x19
    bb60:	mov	x1, x20
    bb64:	bl	b6ec <_ZN4llvm8TGParser9ParseBodyEPNS_6RecordE>
    bb68:	ldp	x20, x19, [sp, #208]
    bb6c:	ldp	x22, x21, [sp, #192]
    bb70:	ldp	x24, x23, [sp, #176]
    bb74:	ldp	x29, x30, [sp, #160]
    bb78:	and	w0, w0, #0x1
    bb7c:	add	sp, sp, #0xe0
    bb80:	ret

000000000000bb84 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>:
    bb84:	sub	sp, sp, #0x50
    bb88:	stp	x29, x30, [sp, #32]
    bb8c:	stp	x22, x21, [sp, #48]
    bb90:	stp	x20, x19, [sp, #64]
    bb94:	add	x29, sp, #0x20
    bb98:	mov	x20, x1
    bb9c:	mov	x19, x0
    bba0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bba4:	stur	x0, [x29, #-8]
    bba8:	ldr	w8, [x19, #40]
    bbac:	cmp	w8, #0x18
    bbb0:	b.ne	bcf0 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x16c>  // b.any
    bbb4:	ldp	x8, x9, [x19, #8]
    bbb8:	mov	x0, x19
    bbbc:	cmp	x8, x9
    bbc0:	cset	w1, eq  // eq = none
    bbc4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bbc8:	str	w0, [x19, #40]
    bbcc:	mov	x0, x19
    bbd0:	mov	x1, x20
    bbd4:	bl	3608 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    bbd8:	cbz	x0, bcb4 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x130>
    bbdc:	ldrb	w8, [x0, #8]
    bbe0:	ldr	x22, [x19, #344]
    bbe4:	mov	x21, x0
    bbe8:	cmp	w8, #0x18
    bbec:	b.ne	bc24 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xa0>  // b.any
    bbf0:	mov	x0, x22
    bbf4:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    bbf8:	ldr	x21, [x19, #344]
    bbfc:	mov	x22, x0
    bc00:	mov	w0, #0x80                  	// #128
    bc04:	bl	0 <_Znwm>
    bc08:	mov	x20, x0
    bc0c:	sub	x2, x29, #0x8
    bc10:	mov	w3, #0x1                   	// #1
    bc14:	mov	w5, #0x1                   	// #1
    bc18:	mov	x1, x22
    bc1c:	mov	x4, x21
    bc20:	b	bc44 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xc0>
    bc24:	mov	w0, #0x80                  	// #128
    bc28:	bl	0 <_Znwm>
    bc2c:	mov	x20, x0
    bc30:	sub	x2, x29, #0x8
    bc34:	mov	w3, #0x1                   	// #1
    bc38:	mov	x1, x21
    bc3c:	mov	x4, x22
    bc40:	mov	w5, wzr
    bc44:	mov	w6, wzr
    bc48:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bc4c:	mov	x0, x19
    bc50:	mov	x1, x20
    bc54:	bl	b9b0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    bc58:	tbz	w0, #0, bcbc <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x138>
    bc5c:	mov	x19, x20
    bc60:	ldr	x0, [x19, #88]!
    bc64:	add	x8, x19, #0x10
    bc68:	cmp	x0, x8
    bc6c:	b.eq	bc74 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0xf0>  // b.none
    bc70:	bl	0 <free>
    bc74:	mov	x21, x20
    bc78:	ldr	x0, [x21, #72]!
    bc7c:	cmp	x0, x19
    bc80:	b.eq	bc88 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x104>  // b.none
    bc84:	bl	0 <free>
    bc88:	ldr	x0, [x20, #56]
    bc8c:	cmp	x0, x21
    bc90:	b.eq	bc98 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x114>  // b.none
    bc94:	bl	0 <free>
    bc98:	ldr	x0, [x20, #8]
    bc9c:	add	x8, x20, #0x18
    bca0:	cmp	x0, x8
    bca4:	b.eq	bcac <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x128>  // b.none
    bca8:	bl	0 <free>
    bcac:	mov	x0, x20
    bcb0:	bl	0 <_ZdlPv>
    bcb4:	mov	w19, #0x1                   	// #1
    bcb8:	b	bcd8 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE+0x154>
    bcbc:	add	x1, sp, #0x8
    bcc0:	mov	x0, x19
    bcc4:	stp	x20, xzr, [sp, #8]
    bcc8:	bl	26ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    bccc:	mov	w19, w0
    bcd0:	add	x0, sp, #0x8
    bcd4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bcd8:	and	w0, w19, #0x1
    bcdc:	ldp	x20, x19, [sp, #64]
    bce0:	ldp	x22, x21, [sp, #48]
    bce4:	ldp	x29, x30, [sp, #32]
    bce8:	add	sp, sp, #0x50
    bcec:	ret
    bcf0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bcf4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bcf8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bcfc:	add	x0, x0, #0x0
    bd00:	add	x1, x1, #0x0
    bd04:	add	x3, x3, #0x0
    bd08:	mov	w2, #0xac0                 	// #2752
    bd0c:	bl	0 <__assert_fail>

000000000000bd10 <_ZN4llvm8TGParser11ParseDefsetEv>:
    bd10:	sub	sp, sp, #0x100
    bd14:	stp	x29, x30, [sp, #192]
    bd18:	stp	x24, x23, [sp, #208]
    bd1c:	stp	x22, x21, [sp, #224]
    bd20:	stp	x20, x19, [sp, #240]
    bd24:	add	x29, sp, #0xc0
    bd28:	ldr	w8, [x0, #40]
    bd2c:	cmp	w8, #0x22
    bd30:	b.ne	c028 <_ZN4llvm8TGParser11ParseDefsetEv+0x318>  // b.any
    bd34:	ldp	x8, x9, [x0, #8]
    bd38:	mov	x19, x0
    bd3c:	cmp	x8, x9
    bd40:	cset	w1, eq  // eq = none
    bd44:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bd48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bd4c:	ldr	d0, [x8]
    bd50:	add	x22, sp, #0x18
    bd54:	str	w0, [x19, #40]
    bd58:	add	x9, x22, #0x20
    bd5c:	mov	x0, x19
    bd60:	stp	xzr, xzr, [sp, #24]
    bd64:	str	x9, [sp, #40]
    bd68:	str	d0, [sp, #48]
    bd6c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bd70:	str	x0, [sp, #24]
    bd74:	mov	x0, x19
    bd78:	bl	5200 <_ZN4llvm8TGParser9ParseTypeEv>
    bd7c:	cbz	x0, bf10 <_ZN4llvm8TGParser11ParseDefsetEv+0x200>
    bd80:	ldr	w8, [x0, #8]
    bd84:	cmp	w8, #0x5
    bd88:	b.ne	bdc8 <_ZN4llvm8TGParser11ParseDefsetEv+0xb8>  // b.any
    bd8c:	ldr	x8, [x0, #24]
    bd90:	str	x8, [sp, #32]
    bd94:	ldr	w8, [x19, #40]
    bd98:	cmp	w8, #0x48
    bd9c:	b.ne	bde8 <_ZN4llvm8TGParser11ParseDefsetEv+0xd8>  // b.any
    bda0:	ldp	x0, x1, [x19, #48]
    bda4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    bda8:	mov	x20, x0
    bdac:	ldr	x0, [x19, #344]
    bdb0:	ldp	x1, x2, [x20, #24]
    bdb4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bdb8:	cbz	x0, be20 <_ZN4llvm8TGParser11ParseDefsetEv+0x110>
    bdbc:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bdc0:	add	x8, x8, #0x0
    bdc4:	b	bdf0 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    bdc8:	ldr	x8, [sp, #24]
    bdcc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bdd0:	add	x9, x9, #0x0
    bdd4:	stp	x9, xzr, [sp]
    bdd8:	mov	w9, #0x103                 	// #259
    bddc:	strh	w9, [sp, #16]
    bde0:	stur	x8, [x29, #-8]
    bde4:	b	be08 <_ZN4llvm8TGParser11ParseDefsetEv+0xf8>
    bde8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bdec:	add	x8, x8, #0x0
    bdf0:	mov	w9, #0x103                 	// #259
    bdf4:	mov	x0, x19
    bdf8:	stp	x8, xzr, [sp]
    bdfc:	strh	w9, [sp, #16]
    be00:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    be04:	stur	x0, [x29, #-8]
    be08:	sub	x0, x29, #0x8
    be0c:	mov	x2, sp
    be10:	mov	w1, #0x1                   	// #1
    be14:	mov	w19, #0x1                   	// #1
    be18:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    be1c:	b	bf14 <_ZN4llvm8TGParser11ParseDefsetEv+0x204>
    be20:	ldp	x8, x9, [x19, #8]
    be24:	mov	x0, x19
    be28:	cmp	x8, x9
    be2c:	cset	w1, eq  // eq = none
    be30:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    be34:	cmp	w0, #0x10
    be38:	str	w0, [x19, #40]
    be3c:	b.ne	bf48 <_ZN4llvm8TGParser11ParseDefsetEv+0x238>  // b.any
    be40:	ldp	x8, x9, [x19, #8]
    be44:	mov	x0, x19
    be48:	cmp	x8, x9
    be4c:	cset	w1, eq  // eq = none
    be50:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    be54:	cmp	w0, #0x6
    be58:	str	w0, [x19, #40]
    be5c:	b.ne	bf54 <_ZN4llvm8TGParser11ParseDefsetEv+0x244>  // b.any
    be60:	mov	x0, x19
    be64:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    be68:	ldp	x8, x9, [x19, #8]
    be6c:	mov	x21, x0
    be70:	mov	x0, x19
    be74:	cmp	x8, x9
    be78:	cset	w1, eq  // eq = none
    be7c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    be80:	ldr	w8, [x19, #304]
    be84:	ldr	w9, [x19, #308]
    be88:	str	w0, [x19, #40]
    be8c:	cmp	w8, w9
    be90:	b.cs	c00c <_ZN4llvm8TGParser11ParseDefsetEv+0x2fc>  // b.hs, b.nlast
    be94:	ldr	x9, [x19, #296]
    be98:	add	x10, sp, #0x18
    be9c:	str	x10, [x9, w8, uxtw #3]
    bea0:	ldr	w8, [x19, #304]
    bea4:	ldr	w9, [x19, #308]
    bea8:	cmp	w8, w9
    beac:	b.cs	c048 <_ZN4llvm8TGParser11ParseDefsetEv+0x338>  // b.hs, b.nlast
    beb0:	mov	x24, #0x47200000            	// #1193279488
    beb4:	add	w8, w8, #0x1
    beb8:	mov	w23, #0x1                   	// #1
    bebc:	movk	x24, #0x1d, lsl #32
    bec0:	str	w8, [x19, #304]
    bec4:	ldr	w9, [x19, #40]
    bec8:	mov	w8, wzr
    becc:	cmp	w9, #0x24
    bed0:	b.hi	bef4 <_ZN4llvm8TGParser11ParseDefsetEv+0x1e4>  // b.pmore
    bed4:	lsl	x9, x23, x9
    bed8:	tst	x9, x24
    bedc:	b.eq	bef4 <_ZN4llvm8TGParser11ParseDefsetEv+0x1e4>  // b.none
    bee0:	mov	x0, x19
    bee4:	mov	x1, xzr
    bee8:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    beec:	tbz	w0, #0, bec4 <_ZN4llvm8TGParser11ParseDefsetEv+0x1b4>
    bef0:	mov	w8, #0x1                   	// #1
    bef4:	ldr	w9, [x19, #304]
    bef8:	ldr	w10, [x19, #308]
    befc:	sub	x9, x9, #0x1
    bf00:	cmp	x9, x10
    bf04:	b.hi	c048 <_ZN4llvm8TGParser11ParseDefsetEv+0x338>  // b.pmore
    bf08:	str	w9, [x19, #304]
    bf0c:	tbz	w8, #0, bf60 <_ZN4llvm8TGParser11ParseDefsetEv+0x250>
    bf10:	mov	w19, #0x1                   	// #1
    bf14:	ldr	x0, [sp, #40]
    bf18:	add	x8, x22, #0x10
    bf1c:	add	x8, x8, #0x10
    bf20:	cmp	x0, x8
    bf24:	b.eq	bf2c <_ZN4llvm8TGParser11ParseDefsetEv+0x21c>  // b.none
    bf28:	bl	0 <free>
    bf2c:	mov	w0, w19
    bf30:	ldp	x20, x19, [sp, #240]
    bf34:	ldp	x22, x21, [sp, #224]
    bf38:	ldp	x24, x23, [sp, #208]
    bf3c:	ldp	x29, x30, [sp, #192]
    bf40:	add	sp, sp, #0x100
    bf44:	ret
    bf48:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bf4c:	add	x8, x8, #0x0
    bf50:	b	bdf0 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    bf54:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bf58:	add	x8, x8, #0x0
    bf5c:	b	bdf0 <_ZN4llvm8TGParser11ParseDefsetEv+0xe0>
    bf60:	ldr	w8, [x19, #40]
    bf64:	cmp	w8, #0x7
    bf68:	b.ne	bfb4 <_ZN4llvm8TGParser11ParseDefsetEv+0x2a4>  // b.any
    bf6c:	ldp	x8, x9, [x19, #8]
    bf70:	mov	x0, x19
    bf74:	cmp	x8, x9
    bf78:	cset	w1, eq  // eq = none
    bf7c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    bf80:	str	w0, [x19, #40]
    bf84:	ldr	w1, [sp, #48]
    bf88:	ldp	x2, x0, [sp, #32]
    bf8c:	ldr	x19, [x19, #344]
    bf90:	ldp	x21, x20, [x20, #24]
    bf94:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    bf98:	mov	x3, x0
    bf9c:	mov	x0, x19
    bfa0:	mov	x1, x21
    bfa4:	mov	x2, x20
    bfa8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfac:	mov	w19, wzr
    bfb0:	b	bf14 <_ZN4llvm8TGParser11ParseDefsetEv+0x204>
    bfb4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfb8:	add	x8, x8, #0x0
    bfbc:	mov	w20, #0x103                 	// #259
    bfc0:	mov	x0, x19
    bfc4:	stp	x8, xzr, [sp]
    bfc8:	strh	w20, [sp, #16]
    bfcc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    bfd0:	stur	x0, [x29, #-8]
    bfd4:	sub	x0, x29, #0x8
    bfd8:	mov	x2, sp
    bfdc:	mov	w1, #0x1                   	// #1
    bfe0:	mov	w19, #0x1                   	// #1
    bfe4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    bfe8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    bfec:	add	x8, x8, #0x0
    bff0:	sub	x0, x29, #0x8
    bff4:	mov	x2, sp
    bff8:	mov	w1, #0x1                   	// #1
    bffc:	strh	w20, [sp, #16]
    c000:	stp	x8, xzr, [sp]
    c004:	stur	x21, [x29, #-8]
    c008:	b	be18 <_ZN4llvm8TGParser11ParseDefsetEv+0x108>
    c00c:	add	x0, x19, #0x128
    c010:	add	x1, x0, #0x10
    c014:	mov	w3, #0x8                   	// #8
    c018:	mov	x2, xzr
    c01c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    c020:	ldr	w8, [x19, #304]
    c024:	b	be94 <_ZN4llvm8TGParser11ParseDefsetEv+0x184>
    c028:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c02c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c030:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c034:	add	x0, x0, #0x0
    c038:	add	x1, x1, #0x0
    c03c:	add	x3, x3, #0x0
    c040:	mov	w2, #0xada                 	// #2778
    c044:	bl	0 <__assert_fail>
    c048:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c04c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c050:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c054:	add	x0, x0, #0x0
    c058:	add	x1, x1, #0x0
    c05c:	add	x3, x3, #0x0
    c060:	mov	w2, #0x43                  	// #67
    c064:	bl	0 <__assert_fail>

000000000000c068 <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE>:
    c068:	stp	x29, x30, [sp, #-48]!
    c06c:	stp	x22, x21, [sp, #16]
    c070:	stp	x20, x19, [sp, #32]
    c074:	mov	x29, sp
    c078:	mov	x22, #0x47200000            	// #1193279488
    c07c:	mov	x19, x1
    c080:	mov	x20, x0
    c084:	mov	w21, #0x1                   	// #1
    c088:	movk	x22, #0x1d, lsl #32
    c08c:	ldr	w8, [x20, #40]
    c090:	mov	w0, wzr
    c094:	cmp	w8, #0x24
    c098:	b.hi	c0bc <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x54>  // b.pmore
    c09c:	lsl	x8, x21, x8
    c0a0:	tst	x8, x22
    c0a4:	b.eq	c0bc <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x54>  // b.none
    c0a8:	mov	x0, x20
    c0ac:	mov	x1, x19
    c0b0:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c0b4:	tbz	w0, #0, c08c <_ZN4llvm8TGParser15ParseObjectListEPNS_10MultiClassE+0x24>
    c0b8:	mov	w0, #0x1                   	// #1
    c0bc:	ldp	x20, x19, [sp, #32]
    c0c0:	ldp	x22, x21, [sp, #16]
    c0c4:	ldp	x29, x30, [sp], #48
    c0c8:	ret

000000000000c0cc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>:
    c0cc:	sub	sp, sp, #0x80
    c0d0:	stp	x29, x30, [sp, #64]
    c0d4:	stp	x24, x23, [sp, #80]
    c0d8:	stp	x22, x21, [sp, #96]
    c0dc:	stp	x20, x19, [sp, #112]
    c0e0:	add	x29, sp, #0x40
    c0e4:	mov	x20, x1
    c0e8:	mov	x19, x0
    c0ec:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c0f0:	ldr	w8, [x19, #40]
    c0f4:	cmp	w8, #0x19
    c0f8:	b.ne	c3a0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2d4>  // b.any
    c0fc:	ldp	x8, x9, [x19, #8]
    c100:	mov	x21, x0
    c104:	mov	x0, x19
    c108:	cmp	x8, x9
    c10c:	cset	w1, eq  // eq = none
    c110:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c114:	str	w0, [x19, #40]
    c118:	sub	x1, x29, #0x10
    c11c:	mov	x0, x19
    c120:	stur	xzr, [x29, #-16]
    c124:	bl	a834 <_ZN4llvm8TGParser23ParseForeachDeclarationERPNS_4InitE>
    c128:	cbz	x0, c18c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xc0>
    c12c:	ldr	w8, [x19, #40]
    c130:	cmp	w8, #0x1c
    c134:	b.ne	c198 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xcc>  // b.any
    c138:	ldp	x8, x9, [x19, #8]
    c13c:	mov	x22, x0
    c140:	mov	x0, x19
    c144:	cmp	x8, x9
    c148:	cset	w1, eq  // eq = none
    c14c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c150:	str	w0, [x19, #40]
    c154:	mov	w0, #0x30                  	// #48
    c158:	bl	0 <_Znwm>
    c15c:	ldur	x8, [x29, #-16]
    c160:	stp	x21, x22, [x0]
    c164:	stp	xzr, xzr, [x0, #32]
    c168:	str	x0, [sp, #24]
    c16c:	stp	x8, xzr, [x0, #16]
    c170:	ldp	x1, x8, [x19, #280]
    c174:	cmp	x1, x8
    c178:	b.eq	c1e8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x11c>  // b.none
    c17c:	str	xzr, [sp, #24]
    c180:	str	x0, [x1], #8
    c184:	str	x1, [x19, #280]
    c188:	b	c1f4 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x128>
    c18c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c190:	add	x8, x8, #0x0
    c194:	b	c1a0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xd4>
    c198:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c19c:	add	x8, x8, #0x0
    c1a0:	mov	w9, #0x103                 	// #259
    c1a4:	mov	x0, x19
    c1a8:	stp	x8, xzr, [sp, #24]
    c1ac:	strh	w9, [sp, #40]
    c1b0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c1b4:	stur	x0, [x29, #-8]
    c1b8:	sub	x0, x29, #0x8
    c1bc:	add	x2, sp, #0x18
    c1c0:	mov	w1, #0x1                   	// #1
    c1c4:	mov	w19, #0x1                   	// #1
    c1c8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c1cc:	and	w0, w19, #0x1
    c1d0:	ldp	x20, x19, [sp, #112]
    c1d4:	ldp	x22, x21, [sp, #96]
    c1d8:	ldp	x24, x23, [sp, #80]
    c1dc:	ldp	x29, x30, [sp, #64]
    c1e0:	add	sp, sp, #0x80
    c1e4:	ret
    c1e8:	add	x0, x19, #0x110
    c1ec:	add	x2, sp, #0x18
    c1f0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1f4:	add	x0, sp, #0x18
    c1f8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c1fc:	mov	x0, x19
    c200:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c204:	ldr	w8, [x19, #40]
    c208:	mov	x21, x0
    c20c:	mov	x0, x19
    c210:	cmp	w8, #0x6
    c214:	b.ne	c27c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1b0>  // b.any
    c218:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c21c:	ldp	x8, x9, [x19, #8]
    c220:	mov	x22, x0
    c224:	mov	x0, x19
    c228:	cmp	x8, x9
    c22c:	cset	w1, eq  // eq = none
    c230:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c234:	mov	x24, #0x47200000            	// #1193279488
    c238:	str	w0, [x19, #40]
    c23c:	mov	w23, #0x1                   	// #1
    c240:	movk	x24, #0x1d, lsl #32
    c244:	cmp	w0, #0x24
    c248:	b.hi	c348 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>  // b.pmore
    c24c:	mov	w8, w0
    c250:	lsl	x9, x23, x8
    c254:	tst	x9, x24
    c258:	b.eq	c290 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1c4>  // b.none
    c25c:	mov	x0, x19
    c260:	mov	x1, x20
    c264:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c268:	tbnz	w0, #0, c288 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1bc>
    c26c:	ldr	w0, [x19, #40]
    c270:	cmp	w0, #0x24
    c274:	b.ls	c24c <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x180>  // b.plast
    c278:	b	c348 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>
    c27c:	mov	x1, x20
    c280:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c284:	tbz	w0, #0, c2b0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x1e4>
    c288:	mov	w19, #0x1                   	// #1
    c28c:	b	c1cc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x100>
    c290:	cmp	x8, #0x7
    c294:	b.ne	c348 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x27c>  // b.any
    c298:	ldp	x8, x9, [x19, #8]
    c29c:	mov	x0, x19
    c2a0:	cmp	x8, x9
    c2a4:	cset	w1, eq  // eq = none
    c2a8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c2ac:	str	w0, [x19, #40]
    c2b0:	ldr	x8, [x19, #336]
    c2b4:	cmp	x8, x21
    c2b8:	b.ne	c3c0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x2f4>  // b.any
    c2bc:	ldr	x8, [x21, #48]
    c2c0:	str	xzr, [x21, #48]
    c2c4:	str	xzr, [sp, #24]
    c2c8:	ldr	x20, [x19, #336]
    c2cc:	str	x8, [x19, #336]
    c2d0:	cbz	x20, c2f0 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x224>
    c2d4:	add	x0, x20, #0x30
    c2d8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c2dc:	ldr	x1, [x20, #16]
    c2e0:	mov	x0, x20
    c2e4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c2e8:	mov	x0, x20
    c2ec:	bl	0 <_ZdlPv>
    c2f0:	add	x0, sp, #0x18
    c2f4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c2f8:	ldr	x8, [x19, #280]
    c2fc:	ldur	x20, [x8, #-8]
    c300:	stur	xzr, [x8, #-8]
    c304:	ldr	x8, [x19, #280]
    c308:	sub	x0, x8, #0x8
    c30c:	str	x0, [x19, #280]
    c310:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c314:	add	x1, sp, #0x8
    c318:	mov	x0, x19
    c31c:	stp	x20, xzr, [sp, #16]
    c320:	stp	xzr, xzr, [sp]
    c324:	bl	26ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    c328:	mov	w19, w0
    c32c:	add	x0, sp, #0x8
    c330:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c334:	mov	x0, sp
    c338:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c33c:	add	x0, sp, #0x18
    c340:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c344:	b	c1cc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0x100>
    c348:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c34c:	add	x8, x8, #0x0
    c350:	mov	w20, #0x103                 	// #259
    c354:	mov	x0, x19
    c358:	stp	x8, xzr, [sp, #24]
    c35c:	strh	w20, [sp, #40]
    c360:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c364:	stur	x0, [x29, #-8]
    c368:	sub	x0, x29, #0x8
    c36c:	add	x2, sp, #0x18
    c370:	mov	w1, #0x1                   	// #1
    c374:	mov	w19, #0x1                   	// #1
    c378:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c37c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c380:	add	x8, x8, #0x0
    c384:	sub	x0, x29, #0x8
    c388:	add	x2, sp, #0x18
    c38c:	mov	w1, #0x1                   	// #1
    c390:	strh	w20, [sp, #40]
    c394:	stp	x8, xzr, [sp, #24]
    c398:	stur	x22, [x29, #-8]
    c39c:	b	c1c8 <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE+0xfc>
    c3a0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3a4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3a8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3ac:	add	x0, x0, #0x0
    c3b0:	add	x1, x1, #0x0
    c3b4:	add	x3, x3, #0x0
    c3b8:	mov	w2, #0xb33                 	// #2867
    c3bc:	bl	0 <__assert_fail>
    c3c0:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3c4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3c8:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c3cc:	add	x0, x0, #0x0
    c3d0:	add	x1, x1, #0x0
    c3d4:	add	x3, x3, #0x0
    c3d8:	mov	w2, #0xc1                  	// #193
    c3dc:	bl	0 <__assert_fail>

000000000000c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>:
    c3e0:	sub	sp, sp, #0x30
    c3e4:	stp	x29, x30, [sp, #32]
    c3e8:	add	x29, sp, #0x20
    c3ec:	ldr	w8, [x0, #40]
    c3f0:	sub	w8, w8, #0x15
    c3f4:	cmp	w8, #0xf
    c3f8:	b.hi	c424 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x44>  // b.pmore
    c3fc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c400:	add	x9, x9, #0x0
    c404:	adr	x10, c414 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x34>
    c408:	ldrb	w11, [x9, x8]
    c40c:	add	x10, x10, x11, lsl #2
    c410:	br	x10
    c414:	cbz	x1, c4a0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xc0>
    c418:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c41c:	add	x8, x8, #0x0
    c420:	b	c4b4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    c424:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c428:	add	x8, x8, #0x0
    c42c:	b	c4b4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    c430:	ldp	x29, x30, [sp, #32]
    c434:	add	sp, sp, #0x30
    c438:	b	bb84 <_ZN4llvm8TGParser8ParseDefEPNS_10MultiClassE>
    c43c:	ldp	x29, x30, [sp, #32]
    c440:	add	sp, sp, #0x30
    c444:	b	c0cc <_ZN4llvm8TGParser12ParseForeachEPNS_10MultiClassE>
    c448:	ldp	x29, x30, [sp, #32]
    c44c:	add	sp, sp, #0x30
    c450:	b	dc7c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>
    c454:	ldp	x29, x30, [sp, #32]
    c458:	add	sp, sp, #0x30
    c45c:	b	d1cc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>
    c460:	ldp	x8, x9, [x0, #272]
    c464:	cmp	x8, x9
    c468:	b.eq	c4e8 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x108>  // b.none
    c46c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c470:	add	x8, x8, #0x0
    c474:	b	c4b4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    c478:	cbz	x1, c4f4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x114>
    c47c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c480:	add	x8, x8, #0x0
    c484:	b	c4b4 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0xd4>
    c488:	ldp	x29, x30, [sp, #32]
    c48c:	add	sp, sp, #0x30
    c490:	b	b458 <_ZN4llvm8TGParser11ParseDefvarEv>
    c494:	ldp	x29, x30, [sp, #32]
    c498:	add	sp, sp, #0x30
    c49c:	b	c50c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>
    c4a0:	ldp	x8, x9, [x0, #272]
    c4a4:	cmp	x8, x9
    c4a8:	b.eq	c500 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE+0x120>  // b.none
    c4ac:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c4b0:	add	x8, x8, #0x0
    c4b4:	mov	w9, #0x103                 	// #259
    c4b8:	stp	x8, xzr, [sp]
    c4bc:	strh	w9, [sp, #16]
    c4c0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c4c4:	stur	x0, [x29, #-8]
    c4c8:	sub	x0, x29, #0x8
    c4cc:	mov	x2, sp
    c4d0:	mov	w1, #0x1                   	// #1
    c4d4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c4d8:	ldp	x29, x30, [sp, #32]
    c4dc:	mov	w0, #0x1                   	// #1
    c4e0:	add	sp, sp, #0x30
    c4e4:	ret
    c4e8:	ldp	x29, x30, [sp, #32]
    c4ec:	add	sp, sp, #0x30
    c4f0:	b	d5f4 <_ZN4llvm8TGParser15ParseMultiClassEv>
    c4f4:	ldp	x29, x30, [sp, #32]
    c4f8:	add	sp, sp, #0x30
    c4fc:	b	bd10 <_ZN4llvm8TGParser11ParseDefsetEv>
    c500:	ldp	x29, x30, [sp, #32]
    c504:	add	sp, sp, #0x30
    c508:	b	ca70 <_ZN4llvm8TGParser10ParseClassEv>

000000000000c50c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE>:
    c50c:	sub	sp, sp, #0xb0
    c510:	stp	x29, x30, [sp, #80]
    c514:	str	x27, [sp, #96]
    c518:	stp	x26, x25, [sp, #112]
    c51c:	stp	x24, x23, [sp, #128]
    c520:	stp	x22, x21, [sp, #144]
    c524:	stp	x20, x19, [sp, #160]
    c528:	add	x29, sp, #0x50
    c52c:	mov	x20, x1
    c530:	mov	x19, x0
    c534:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c538:	ldr	w8, [x19, #40]
    c53c:	cmp	w8, #0x24
    c540:	b.ne	c878 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x36c>  // b.any
    c544:	ldp	x8, x9, [x19, #8]
    c548:	mov	x21, x0
    c54c:	mov	x0, x19
    c550:	cmp	x8, x9
    c554:	cset	w1, eq  // eq = none
    c558:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c55c:	str	w0, [x19, #40]
    c560:	mov	x0, x19
    c564:	mov	x1, xzr
    c568:	mov	x2, xzr
    c56c:	mov	w3, wzr
    c570:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    c574:	cbz	x0, c6ac <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1a0>
    c578:	ldr	w8, [x19, #40]
    c57c:	cmp	w8, #0x25
    c580:	b.ne	c644 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x138>  // b.any
    c584:	ldp	x8, x9, [x19, #8]
    c588:	mov	x22, x0
    c58c:	mov	x0, x19
    c590:	cmp	x8, x9
    c594:	cset	w1, eq  // eq = none
    c598:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c59c:	str	w0, [x19, #40]
    c5a0:	adrp	x23, 0 <_ZN4llvm8BitRecTy6SharedE>
    c5a4:	ldr	x23, [x23]
    c5a8:	mov	x0, xzr
    c5ac:	mov	x1, xzr
    c5b0:	mov	x2, x23
    c5b4:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    c5b8:	mov	x24, x0
    c5bc:	mov	w0, #0x1                   	// #1
    c5c0:	bl	0 <_ZN4llvm7BitInit3getEb>
    c5c4:	stur	x0, [x29, #-24]
    c5c8:	sub	x0, x29, #0x18
    c5cc:	mov	w1, #0x1                   	// #1
    c5d0:	mov	x2, x23
    c5d4:	bl	0 <_ZN4llvm8ListInit3getENS_8ArrayRefIPNS_4InitEEEPNS_5RecTyE>
    c5d8:	mov	x25, x0
    c5dc:	mov	x0, x23
    c5e0:	bl	0 <_ZN4llvm5RecTy9getListTyEv>
    c5e4:	mov	x26, x0
    c5e8:	mov	w0, #0x2                   	// #2
    c5ec:	mov	x1, x22
    c5f0:	mov	x2, x25
    c5f4:	mov	x3, x24
    c5f8:	mov	x4, x26
    c5fc:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    c600:	mov	x1, xzr
    c604:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    c608:	mov	x27, x0
    c60c:	mov	w0, #0x30                  	// #48
    c610:	add	x23, x19, #0x110
    c614:	bl	0 <_Znwm>
    c618:	stp	x21, xzr, [x0]
    c61c:	stp	x27, xzr, [x0, #16]
    c620:	stp	xzr, xzr, [x0, #32]
    c624:	stur	x0, [x29, #-24]
    c628:	ldp	x1, x8, [x19, #280]
    c62c:	cmp	x1, x8
    c630:	b.eq	c67c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x170>  // b.none
    c634:	stur	xzr, [x29, #-24]
    c638:	str	x0, [x1], #8
    c63c:	str	x1, [x19, #280]
    c640:	b	c688 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x17c>
    c644:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c648:	add	x8, x8, #0x0
    c64c:	mov	w9, #0x103                 	// #259
    c650:	mov	x0, x19
    c654:	stp	x8, xzr, [x29, #-24]
    c658:	sturh	w9, [x29, #-8]
    c65c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c660:	str	x0, [x29, #24]
    c664:	add	x0, x29, #0x18
    c668:	sub	x2, x29, #0x18
    c66c:	mov	w1, #0x1                   	// #1
    c670:	mov	w19, #0x1                   	// #1
    c674:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    c678:	b	c854 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x348>
    c67c:	sub	x2, x29, #0x18
    c680:	mov	x0, x23
    c684:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c688:	sub	x0, x29, #0x18
    c68c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c690:	adrp	x2, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c694:	add	x2, x2, #0x0
    c698:	mov	w3, #0x4                   	// #4
    c69c:	mov	x0, x19
    c6a0:	mov	x1, x20
    c6a4:	bl	c898 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    c6a8:	tbz	w0, #0, c6b4 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1a8>
    c6ac:	mov	w19, #0x1                   	// #1
    c6b0:	b	c854 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x348>
    c6b4:	ldr	x8, [x19, #280]
    c6b8:	ldur	x27, [x8, #-8]
    c6bc:	stur	xzr, [x8, #-8]
    c6c0:	ldr	x8, [x19, #280]
    c6c4:	sub	x0, x8, #0x8
    c6c8:	str	x0, [x19, #280]
    c6cc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c6d0:	add	x1, sp, #0x28
    c6d4:	mov	x0, x19
    c6d8:	stur	xzr, [x29, #-24]
    c6dc:	stp	xzr, xzr, [sp, #32]
    c6e0:	str	x27, [sp, #48]
    c6e4:	bl	26ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    c6e8:	mov	w27, w0
    c6ec:	add	x0, sp, #0x28
    c6f0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c6f4:	add	x0, sp, #0x20
    c6f8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c6fc:	tbz	w27, #0, c708 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1fc>
    c700:	mov	w19, #0x1                   	// #1
    c704:	b	c84c <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x340>
    c708:	ldr	w8, [x19, #40]
    c70c:	cmp	w8, #0x26
    c710:	b.ne	c848 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x33c>  // b.any
    c714:	ldp	x8, x9, [x19, #8]
    c718:	mov	x0, x19
    c71c:	cmp	x8, x9
    c720:	cset	w1, eq  // eq = none
    c724:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c728:	str	w0, [x19, #40]
    c72c:	mov	w0, #0x2                   	// #2
    c730:	mov	x1, x22
    c734:	mov	x2, x24
    c738:	mov	x3, x25
    c73c:	mov	x4, x26
    c740:	bl	0 <_ZN4llvm10TernOpInit3getENS0_9TernaryOpEPNS_4InitES3_S3_PNS_5RecTyE>
    c744:	mov	x1, xzr
    c748:	bl	0 <_ZNK4llvm10TernOpInit4FoldEPNS_6RecordE>
    c74c:	mov	x22, x0
    c750:	mov	w0, #0x30                  	// #48
    c754:	bl	0 <_Znwm>
    c758:	stp	x21, xzr, [x0]
    c75c:	stp	x22, xzr, [x0, #16]
    c760:	stp	xzr, xzr, [x0, #32]
    c764:	str	x0, [x29, #24]
    c768:	ldp	x1, x8, [x19, #280]
    c76c:	cmp	x1, x8
    c770:	b.eq	c784 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x278>  // b.none
    c774:	str	xzr, [x29, #24]
    c778:	str	x0, [x1], #8
    c77c:	str	x1, [x19, #280]
    c780:	b	c790 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x284>
    c784:	add	x2, x29, #0x18
    c788:	mov	x0, x23
    c78c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c790:	add	x0, x29, #0x18
    c794:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c798:	adrp	x2, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c79c:	add	x2, x2, #0x0
    c7a0:	mov	w3, #0x4                   	// #4
    c7a4:	mov	x0, x19
    c7a8:	mov	x1, x20
    c7ac:	bl	c898 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>
    c7b0:	tbnz	w0, #0, c700 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f4>
    c7b4:	ldr	x8, [x19, #280]
    c7b8:	ldur	x9, [x8, #-8]
    c7bc:	stur	xzr, [x8, #-8]
    c7c0:	ldur	x20, [x29, #-24]
    c7c4:	stur	x9, [x29, #-24]
    c7c8:	cbz	x20, c804 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2f8>
    c7cc:	ldp	x21, x22, [x20, #24]
    c7d0:	cmp	x21, x22
    c7d4:	b.eq	c7f0 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2e4>  // b.none
    c7d8:	mov	x0, x21
    c7dc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c7e0:	add	x21, x21, #0x10
    c7e4:	cmp	x22, x21
    c7e8:	b.ne	c7d8 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2cc>  // b.any
    c7ec:	ldr	x21, [x20, #24]
    c7f0:	cbz	x21, c7fc <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x2f0>
    c7f4:	mov	x0, x21
    c7f8:	bl	0 <_ZdlPv>
    c7fc:	mov	x0, x20
    c800:	bl	0 <_ZdlPv>
    c804:	ldr	x8, [x19, #280]
    c808:	sub	x0, x8, #0x8
    c80c:	str	x0, [x19, #280]
    c810:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c814:	ldur	x8, [x29, #-24]
    c818:	add	x1, sp, #0x10
    c81c:	mov	x0, x19
    c820:	stur	xzr, [x29, #-24]
    c824:	stp	xzr, xzr, [sp, #8]
    c828:	str	x8, [sp, #24]
    c82c:	bl	26ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    c830:	mov	w19, w0
    c834:	add	x0, sp, #0x10
    c838:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c83c:	add	x0, sp, #0x8
    c840:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c844:	tbnz	w19, #0, c700 <_ZN4llvm8TGParser7ParseIfEPNS_10MultiClassE+0x1f4>
    c848:	mov	w19, wzr
    c84c:	sub	x0, x29, #0x18
    c850:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c854:	mov	w0, w19
    c858:	ldp	x20, x19, [sp, #160]
    c85c:	ldp	x22, x21, [sp, #144]
    c860:	ldp	x24, x23, [sp, #128]
    c864:	ldp	x26, x25, [sp, #112]
    c868:	ldr	x27, [sp, #96]
    c86c:	ldp	x29, x30, [sp, #80]
    c870:	add	sp, sp, #0xb0
    c874:	ret
    c878:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c87c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c880:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c884:	add	x0, x0, #0x0
    c888:	add	x1, x1, #0x0
    c88c:	add	x3, x3, #0x0
    c890:	mov	w2, #0xb6b                 	// #2923
    c894:	bl	0 <__assert_fail>

000000000000c898 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE>:
    c898:	sub	sp, sp, #0x90
    c89c:	stp	x29, x30, [sp, #80]
    c8a0:	stp	x24, x23, [sp, #96]
    c8a4:	stp	x22, x21, [sp, #112]
    c8a8:	stp	x20, x19, [sp, #128]
    c8ac:	add	x29, sp, #0x50
    c8b0:	mov	x22, x1
    c8b4:	mov	x19, x0
    c8b8:	stp	x2, x3, [x29, #-24]
    c8bc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c8c0:	ldr	w8, [x19, #40]
    c8c4:	mov	x20, x0
    c8c8:	mov	x0, x19
    c8cc:	cmp	w8, #0x6
    c8d0:	b.ne	c938 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xa0>  // b.any
    c8d4:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c8d8:	ldp	x8, x9, [x19, #8]
    c8dc:	mov	x21, x0
    c8e0:	mov	x0, x19
    c8e4:	cmp	x8, x9
    c8e8:	cset	w1, eq  // eq = none
    c8ec:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c8f0:	mov	x24, #0x47200000            	// #1193279488
    c8f4:	str	w0, [x19, #40]
    c8f8:	mov	w23, #0x1                   	// #1
    c8fc:	movk	x24, #0x1d, lsl #32
    c900:	cmp	w0, #0x24
    c904:	b.hi	c9bc <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>  // b.pmore
    c908:	mov	w8, w0
    c90c:	lsl	x9, x23, x8
    c910:	tst	x9, x24
    c914:	b.eq	c94c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xb4>  // b.none
    c918:	mov	x0, x19
    c91c:	mov	x1, x22
    c920:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c924:	tbnz	w0, #0, c944 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xac>
    c928:	ldr	w0, [x19, #40]
    c92c:	cmp	w0, #0x24
    c930:	b.ls	c908 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x70>  // b.plast
    c934:	b	c9bc <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>
    c938:	mov	x1, x22
    c93c:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    c940:	tbz	w0, #0, c96c <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0xd4>
    c944:	mov	w19, #0x1                   	// #1
    c948:	b	ca34 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x19c>
    c94c:	cmp	x8, #0x7
    c950:	b.ne	c9bc <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x124>  // b.any
    c954:	ldp	x8, x9, [x19, #8]
    c958:	mov	x0, x19
    c95c:	cmp	x8, x9
    c960:	cset	w1, eq  // eq = none
    c964:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    c968:	str	w0, [x19, #40]
    c96c:	ldr	x8, [x19, #336]
    c970:	cmp	x8, x20
    c974:	b.ne	ca50 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x1b8>  // b.any
    c978:	ldr	x8, [x20, #48]
    c97c:	str	xzr, [x20, #48]
    c980:	str	xzr, [sp, #32]
    c984:	ldr	x20, [x19, #336]
    c988:	str	x8, [x19, #336]
    c98c:	cbz	x20, c9ac <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x114>
    c990:	add	x0, x20, #0x30
    c994:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c998:	ldr	x1, [x20, #16]
    c99c:	mov	x0, x20
    c9a0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c9a4:	mov	x0, x20
    c9a8:	bl	0 <_ZdlPv>
    c9ac:	add	x0, sp, #0x20
    c9b0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c9b4:	mov	w19, wzr
    c9b8:	b	ca34 <_ZN4llvm8TGParser11ParseIfBodyEPNS_10MultiClassENS_9StringRefE+0x19c>
    c9bc:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c9c0:	adrp	x12, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    c9c4:	mov	w8, #0x503                 	// #1283
    c9c8:	add	x9, x9, #0x0
    c9cc:	sub	x10, x29, #0x18
    c9d0:	add	x11, sp, #0x8
    c9d4:	add	x12, x12, #0x0
    c9d8:	mov	w13, #0x302                 	// #770
    c9dc:	mov	x0, x19
    c9e0:	strh	w8, [sp, #24]
    c9e4:	stp	x9, x10, [sp, #8]
    c9e8:	stp	x11, x12, [sp, #32]
    c9ec:	strh	w13, [sp, #48]
    c9f0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    c9f4:	stur	x0, [x29, #-8]
    c9f8:	sub	x0, x29, #0x8
    c9fc:	add	x2, sp, #0x20
    ca00:	mov	w1, #0x1                   	// #1
    ca04:	mov	w19, #0x1                   	// #1
    ca08:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ca0c:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca10:	add	x8, x8, #0x0
    ca14:	mov	w9, #0x103                 	// #259
    ca18:	add	x0, sp, #0x8
    ca1c:	add	x2, sp, #0x20
    ca20:	mov	w1, #0x1                   	// #1
    ca24:	stp	x8, xzr, [sp, #32]
    ca28:	strh	w9, [sp, #48]
    ca2c:	str	x21, [sp, #8]
    ca30:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    ca34:	mov	w0, w19
    ca38:	ldp	x20, x19, [sp, #128]
    ca3c:	ldp	x22, x21, [sp, #112]
    ca40:	ldp	x24, x23, [sp, #96]
    ca44:	ldp	x29, x30, [sp, #80]
    ca48:	add	sp, sp, #0x90
    ca4c:	ret
    ca50:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca54:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca58:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ca5c:	add	x0, x0, #0x0
    ca60:	add	x1, x1, #0x0
    ca64:	add	x3, x3, #0x0
    ca68:	mov	w2, #0xc1                  	// #193
    ca6c:	bl	0 <__assert_fail>

000000000000ca70 <_ZN4llvm8TGParser10ParseClassEv>:
    ca70:	sub	sp, sp, #0xd0
    ca74:	stp	x29, x30, [sp, #128]
    ca78:	str	x25, [sp, #144]
    ca7c:	stp	x24, x23, [sp, #160]
    ca80:	stp	x22, x21, [sp, #176]
    ca84:	stp	x20, x19, [sp, #192]
    ca88:	add	x29, sp, #0x80
    ca8c:	ldr	w8, [x0, #40]
    ca90:	cmp	w8, #0x15
    ca94:	b.ne	ce14 <_ZN4llvm8TGParser10ParseClassEv+0x3a4>  // b.any
    ca98:	ldp	x8, x9, [x0, #8]
    ca9c:	mov	x19, x0
    caa0:	cmp	x8, x9
    caa4:	cset	w1, eq  // eq = none
    caa8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    caac:	cmp	w0, #0x48
    cab0:	str	w0, [x19, #40]
    cab4:	b.ne	cb50 <_ZN4llvm8TGParser10ParseClassEv+0xe0>  // b.any
    cab8:	ldr	x8, [x19, #344]
    cabc:	ldr	x24, [x8, #16]
    cac0:	add	x21, x8, #0x8
    cac4:	cbz	x24, cb90 <_ZN4llvm8TGParser10ParseClassEv+0x120>
    cac8:	ldp	x20, x23, [x19, #48]
    cacc:	mov	x22, x21
    cad0:	b	cae4 <_ZN4llvm8TGParser10ParseClassEv+0x74>
    cad4:	add	x8, x24, #0x10
    cad8:	mov	x22, x24
    cadc:	ldr	x24, [x8]
    cae0:	cbz	x24, cb20 <_ZN4llvm8TGParser10ParseClassEv+0xb0>
    cae4:	ldr	x25, [x24, #40]
    cae8:	cmp	x23, x25
    caec:	csel	x2, x23, x25, cc  // cc = lo, ul, last
    caf0:	cbz	x2, cb0c <_ZN4llvm8TGParser10ParseClassEv+0x9c>
    caf4:	ldr	x0, [x24, #32]
    caf8:	mov	x1, x20
    cafc:	bl	0 <memcmp>
    cb00:	cbz	w0, cb0c <_ZN4llvm8TGParser10ParseClassEv+0x9c>
    cb04:	tbz	w0, #31, cad4 <_ZN4llvm8TGParser10ParseClassEv+0x64>
    cb08:	b	cb14 <_ZN4llvm8TGParser10ParseClassEv+0xa4>
    cb0c:	cmp	x25, x23
    cb10:	b.cs	cad4 <_ZN4llvm8TGParser10ParseClassEv+0x64>  // b.hs, b.nlast
    cb14:	add	x8, x24, #0x18
    cb18:	ldr	x24, [x8]
    cb1c:	cbnz	x24, cae4 <_ZN4llvm8TGParser10ParseClassEv+0x74>
    cb20:	cmp	x22, x21
    cb24:	b.eq	cb94 <_ZN4llvm8TGParser10ParseClassEv+0x124>  // b.none
    cb28:	ldr	x24, [x22, #40]
    cb2c:	cmp	x24, x23
    cb30:	csel	x2, x24, x23, cc  // cc = lo, ul, last
    cb34:	cbz	x2, cb88 <_ZN4llvm8TGParser10ParseClassEv+0x118>
    cb38:	ldr	x1, [x22, #32]
    cb3c:	mov	x0, x20
    cb40:	bl	0 <memcmp>
    cb44:	cbz	w0, cb88 <_ZN4llvm8TGParser10ParseClassEv+0x118>
    cb48:	tbnz	w0, #31, cb90 <_ZN4llvm8TGParser10ParseClassEv+0x120>
    cb4c:	b	cb94 <_ZN4llvm8TGParser10ParseClassEv+0x124>
    cb50:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cb54:	add	x8, x8, #0x0
    cb58:	mov	w9, #0x103                 	// #259
    cb5c:	mov	x0, x19
    cb60:	stp	x8, xzr, [x29, #-56]
    cb64:	sturh	w9, [x29, #-40]
    cb68:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cb6c:	str	x0, [sp, #40]
    cb70:	add	x0, sp, #0x28
    cb74:	sub	x2, x29, #0x38
    cb78:	mov	w1, #0x1                   	// #1
    cb7c:	mov	w19, #0x1                   	// #1
    cb80:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cb84:	b	cdf4 <_ZN4llvm8TGParser10ParseClassEv+0x384>
    cb88:	cmp	x23, x24
    cb8c:	b.cs	cb94 <_ZN4llvm8TGParser10ParseClassEv+0x124>  // b.hs, b.nlast
    cb90:	mov	x22, x21
    cb94:	cmp	x22, x21
    cb98:	b.eq	cc74 <_ZN4llvm8TGParser10ParseClassEv+0x204>  // b.none
    cb9c:	ldr	x20, [x22, #64]
    cba0:	cbz	x20, cc74 <_ZN4llvm8TGParser10ParseClassEv+0x204>
    cba4:	ldr	w8, [x20, #80]
    cba8:	cbnz	w8, cbbc <_ZN4llvm8TGParser10ParseClassEv+0x14c>
    cbac:	ldr	w8, [x20, #96]
    cbb0:	cbnz	w8, cbbc <_ZN4llvm8TGParser10ParseClassEv+0x14c>
    cbb4:	ldr	w8, [x20, #64]
    cbb8:	cbz	w8, cd30 <_ZN4llvm8TGParser10ParseClassEv+0x2c0>
    cbbc:	ldr	x0, [x20]
    cbc0:	ldr	x8, [x0]
    cbc4:	ldr	x9, [x8, #48]
    cbc8:	add	x8, sp, #0x8
    cbcc:	blr	x9
    cbd0:	ldr	x9, [sp, #16]
    cbd4:	add	x8, sp, #0x28
    cbd8:	add	x20, x8, #0x10
    cbdc:	add	x0, sp, #0x28
    cbe0:	add	x1, x9, #0x7
    cbe4:	stp	x20, xzr, [sp, #40]
    cbe8:	strb	wzr, [sp, #56]
    cbec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    cbf0:	ldr	x8, [sp, #48]
    cbf4:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    cbf8:	sub	x8, x21, x8
    cbfc:	cmp	x8, #0x6
    cc00:	b.ls	ce34 <_ZN4llvm8TGParser10ParseClassEv+0x3c4>  // b.plast
    cc04:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc08:	add	x1, x1, #0x0
    cc0c:	add	x0, sp, #0x28
    cc10:	mov	w2, #0x7                   	// #7
    cc14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    cc18:	ldp	x1, x2, [sp, #8]
    cc1c:	add	x0, sp, #0x28
    cc20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    cc24:	ldr	x8, [sp, #48]
    cc28:	sub	x8, x21, x8
    cc2c:	cmp	x8, #0x10
    cc30:	b.ls	ce34 <_ZN4llvm8TGParser10ParseClassEv+0x3c4>  // b.plast
    cc34:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cc38:	add	x1, x1, #0x0
    cc3c:	add	x0, sp, #0x28
    cc40:	mov	w2, #0x11                  	// #17
    cc44:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    cc48:	sub	x8, x29, #0x38
    cc4c:	add	x21, x8, #0x10
    cc50:	stur	x21, [x29, #-56]
    cc54:	mov	x8, x0
    cc58:	ldr	x9, [x8], #16
    cc5c:	cmp	x9, x8
    cc60:	b.eq	cd74 <_ZN4llvm8TGParser10ParseClassEv+0x304>  // b.none
    cc64:	stur	x9, [x29, #-56]
    cc68:	ldr	x9, [x0, #16]
    cc6c:	stur	x9, [x29, #-40]
    cc70:	b	cd7c <_ZN4llvm8TGParser10ParseClassEv+0x30c>
    cc74:	mov	x0, x19
    cc78:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cc7c:	stur	x0, [x29, #-56]
    cc80:	ldr	x21, [x19, #344]
    cc84:	mov	w0, #0x80                  	// #128
    cc88:	bl	0 <_Znwm>
    cc8c:	ldp	x8, x1, [x19, #48]
    cc90:	mov	x20, x0
    cc94:	mov	x0, x8
    cc98:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    cc9c:	mov	x1, x0
    cca0:	sub	x2, x29, #0x38
    cca4:	mov	w3, #0x1                   	// #1
    cca8:	mov	w6, #0x1                   	// #1
    ccac:	mov	x0, x20
    ccb0:	mov	x4, x21
    ccb4:	mov	w5, wzr
    ccb8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ccbc:	ldr	x0, [x19, #344]
    ccc0:	mov	x1, sp
    ccc4:	str	x20, [sp]
    ccc8:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    cccc:	ldr	x21, [sp]
    ccd0:	cbz	x21, cd2c <_ZN4llvm8TGParser10ParseClassEv+0x2bc>
    ccd4:	ldr	x0, [x21, #88]
    ccd8:	add	x8, x21, #0x68
    ccdc:	cmp	x0, x8
    cce0:	b.eq	cce8 <_ZN4llvm8TGParser10ParseClassEv+0x278>  // b.none
    cce4:	bl	0 <free>
    cce8:	ldr	x0, [x21, #72]
    ccec:	add	x8, x21, #0x58
    ccf0:	cmp	x0, x8
    ccf4:	b.eq	ccfc <_ZN4llvm8TGParser10ParseClassEv+0x28c>  // b.none
    ccf8:	bl	0 <free>
    ccfc:	ldr	x0, [x21, #56]
    cd00:	add	x8, x21, #0x48
    cd04:	cmp	x0, x8
    cd08:	b.eq	cd10 <_ZN4llvm8TGParser10ParseClassEv+0x2a0>  // b.none
    cd0c:	bl	0 <free>
    cd10:	ldr	x0, [x21, #8]
    cd14:	add	x8, x21, #0x18
    cd18:	cmp	x0, x8
    cd1c:	b.eq	cd24 <_ZN4llvm8TGParser10ParseClassEv+0x2b4>  // b.none
    cd20:	bl	0 <free>
    cd24:	mov	x0, x21
    cd28:	bl	0 <_ZdlPv>
    cd2c:	str	xzr, [sp]
    cd30:	ldp	x8, x9, [x19, #8]
    cd34:	mov	x0, x19
    cd38:	cmp	x8, x9
    cd3c:	cset	w1, eq  // eq = none
    cd40:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cd44:	cmp	w0, #0xa
    cd48:	str	w0, [x19, #40]
    cd4c:	b.ne	cd60 <_ZN4llvm8TGParser10ParseClassEv+0x2f0>  // b.any
    cd50:	mov	x0, x19
    cd54:	mov	x1, x20
    cd58:	bl	ae14 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    cd5c:	tbnz	w0, #0, cdf0 <_ZN4llvm8TGParser10ParseClassEv+0x380>
    cd60:	mov	x0, x19
    cd64:	mov	x1, x20
    cd68:	bl	b9b0 <_ZN4llvm8TGParser15ParseObjectBodyEPNS_6RecordE>
    cd6c:	mov	w19, w0
    cd70:	b	cdf4 <_ZN4llvm8TGParser10ParseClassEv+0x384>
    cd74:	ldr	q0, [x9]
    cd78:	str	q0, [x21]
    cd7c:	ldr	x9, [x0, #8]
    cd80:	mov	w10, #0x104                 	// #260
    cd84:	sub	x11, x29, #0x38
    cd88:	stur	x9, [x29, #-48]
    cd8c:	stp	x8, xzr, [x0]
    cd90:	strb	wzr, [x0, #16]
    cd94:	mov	x0, x19
    cd98:	sturh	w10, [x29, #-8]
    cd9c:	stp	x11, xzr, [x29, #-24]
    cda0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    cda4:	str	x0, [x29, #24]
    cda8:	add	x0, x29, #0x18
    cdac:	sub	x2, x29, #0x18
    cdb0:	mov	w1, #0x1                   	// #1
    cdb4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    cdb8:	ldur	x0, [x29, #-56]
    cdbc:	cmp	x0, x21
    cdc0:	b.eq	cdc8 <_ZN4llvm8TGParser10ParseClassEv+0x358>  // b.none
    cdc4:	bl	0 <_ZdlPv>
    cdc8:	ldr	x0, [sp, #40]
    cdcc:	cmp	x0, x20
    cdd0:	b.eq	cdd8 <_ZN4llvm8TGParser10ParseClassEv+0x368>  // b.none
    cdd4:	bl	0 <_ZdlPv>
    cdd8:	ldr	x0, [sp, #8]
    cddc:	add	x8, sp, #0x8
    cde0:	add	x8, x8, #0x10
    cde4:	cmp	x0, x8
    cde8:	b.eq	cdf0 <_ZN4llvm8TGParser10ParseClassEv+0x380>  // b.none
    cdec:	bl	0 <_ZdlPv>
    cdf0:	mov	w19, #0x1                   	// #1
    cdf4:	and	w0, w19, #0x1
    cdf8:	ldp	x20, x19, [sp, #192]
    cdfc:	ldp	x22, x21, [sp, #176]
    ce00:	ldp	x24, x23, [sp, #160]
    ce04:	ldr	x25, [sp, #144]
    ce08:	ldp	x29, x30, [sp, #128]
    ce0c:	add	sp, sp, #0xd0
    ce10:	ret
    ce14:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce18:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce1c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce20:	add	x0, x0, #0x0
    ce24:	add	x1, x1, #0x0
    ce28:	add	x3, x3, #0x0
    ce2c:	mov	w2, #0xbd6                 	// #3030
    ce30:	bl	0 <__assert_fail>
    ce34:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce38:	add	x0, x0, #0x0
    ce3c:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000ce40 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>:
    ce40:	sub	sp, sp, #0xe0
    ce44:	str	d8, [sp, #112]
    ce48:	stp	x29, x30, [sp, #128]
    ce4c:	stp	x28, x27, [sp, #144]
    ce50:	stp	x26, x25, [sp, #160]
    ce54:	stp	x24, x23, [sp, #176]
    ce58:	stp	x22, x21, [sp, #192]
    ce5c:	stp	x20, x19, [sp, #208]
    ce60:	add	x29, sp, #0x70
    ce64:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce68:	ldr	d8, [x9]
    ce6c:	add	x8, sp, #0x20
    ce70:	adrp	x24, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ce74:	mov	x19, x1
    ce78:	mov	x20, x0
    ce7c:	add	x25, x8, #0x10
    ce80:	add	x24, x24, #0x0
    ce84:	mov	w26, #0x103                 	// #259
    ce88:	str	x25, [sp]
    ce8c:	b	ce94 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x54>
    ce90:	cbnz	w21, d188 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x348>
    ce94:	ldr	w8, [x20, #40]
    ce98:	cmp	w8, #0x48
    ce9c:	b.ne	d120 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2e0>  // b.any
    cea0:	ldp	x0, x1, [x20, #48]
    cea4:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    cea8:	mov	x22, x0
    ceac:	mov	x0, x20
    ceb0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    ceb4:	ldp	x8, x9, [x20, #8]
    ceb8:	mov	x21, x0
    cebc:	mov	x0, x20
    cec0:	cmp	x8, x9
    cec4:	cset	w1, eq  // eq = none
    cec8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cecc:	str	w0, [x20, #40]
    ced0:	add	x1, sp, #0x20
    ced4:	mov	x0, x20
    ced8:	str	x25, [sp, #32]
    cedc:	str	d8, [sp, #40]
    cee0:	bl	4fc0 <_ZN4llvm8TGParser22ParseOptionalRangeListERNS_15SmallVectorImplIjEE>
    cee4:	tbz	w0, #0, cf1c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xdc>
    cee8:	ldr	w8, [x19, #8]
    ceec:	cbz	w8, d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>
    cef0:	ldr	x9, [x19]
    cef4:	add	x8, x8, x8, lsl #1
    cef8:	lsl	x22, x8, #4
    cefc:	sub	x21, x9, #0x28
    cf00:	b	cf0c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xcc>
    cf04:	subs	x22, x22, #0x30
    cf08:	b.eq	d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>  // b.none
    cf0c:	ldr	x0, [x21, x22]
    cf10:	cbz	x0, cf04 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xc4>
    cf14:	bl	0 <_ZdlPv>
    cf18:	b	cf04 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xc4>
    cf1c:	ldr	w8, [sp, #40]
    cf20:	cbz	w8, cf58 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x118>
    cf24:	ldr	x9, [sp, #32]
    cf28:	add	x8, x9, x8, lsl #2
    cf2c:	sub	x8, x8, #0x4
    cf30:	cmp	x8, x9
    cf34:	b.ls	cf58 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x118>  // b.plast
    cf38:	add	x9, x9, #0x4
    cf3c:	ldr	w10, [x8]
    cf40:	ldur	w11, [x9, #-4]
    cf44:	stur	w10, [x9, #-4]
    cf48:	str	w11, [x8], #-4
    cf4c:	cmp	x9, x8
    cf50:	add	x9, x9, #0x4
    cf54:	b.cc	cf3c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0xfc>  // b.lo, b.ul, b.last
    cf58:	ldr	w8, [x20, #40]
    cf5c:	cmp	w8, #0x10
    cf60:	b.ne	cff0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1b0>  // b.any
    cf64:	ldp	x8, x9, [x20, #8]
    cf68:	mov	x0, x20
    cf6c:	cmp	x8, x9
    cf70:	cset	w1, eq  // eq = none
    cf74:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    cf78:	str	w0, [x20, #40]
    cf7c:	mov	x0, x20
    cf80:	mov	x1, xzr
    cf84:	mov	x2, xzr
    cf88:	mov	w3, wzr
    cf8c:	bl	3704 <_ZN4llvm8TGParser10ParseValueEPNS_6RecordEPNS_5RecTyENS0_11IDParseModeE>
    cf90:	cbz	x0, d048 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x208>
    cf94:	ldp	w8, w9, [x19, #8]
    cf98:	mov	x23, x0
    cf9c:	cmp	w8, w9
    cfa0:	b.cs	d10c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x2cc>  // b.hs, b.nlast
    cfa4:	ldr	x27, [x19]
    cfa8:	ldr	x25, [sp, #32]
    cfac:	ldr	w26, [sp, #40]
    cfb0:	mov	w9, #0x30                  	// #48
    cfb4:	umaddl	x28, w8, w9, x27
    cfb8:	mov	w24, w8
    cfbc:	str	x22, [x28]
    cfc0:	stp	xzr, xzr, [x28, #16]
    cfc4:	str	xzr, [x28, #8]!
    cfc8:	cbz	w26, d098 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x258>
    cfcc:	lsl	x22, x26, #2
    cfd0:	mov	x0, x22
    cfd4:	bl	0 <_Znwm>
    cfd8:	mov	x1, x25
    cfdc:	mov	x2, x22
    cfe0:	str	x0, [x28]
    cfe4:	add	x26, x0, x26, lsl #2
    cfe8:	bl	0 <memcpy>
    cfec:	b	d0a0 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x260>
    cff0:	mov	x0, x20
    cff4:	stp	x24, xzr, [sp, #8]
    cff8:	strh	w26, [sp, #24]
    cffc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d000:	str	x0, [x29, #8]
    d004:	add	x0, x29, #0x8
    d008:	add	x2, sp, #0x8
    d00c:	mov	w1, #0x1                   	// #1
    d010:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d014:	ldr	w8, [x19, #8]
    d018:	cbz	w8, d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>
    d01c:	ldr	x9, [x19]
    d020:	add	x8, x8, x8, lsl #1
    d024:	lsl	x22, x8, #4
    d028:	sub	x21, x9, #0x28
    d02c:	b	d038 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1f8>
    d030:	subs	x22, x22, #0x30
    d034:	b.eq	d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>  // b.none
    d038:	ldr	x0, [x21, x22]
    d03c:	cbz	x0, d030 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1f0>
    d040:	bl	0 <_ZdlPv>
    d044:	b	d030 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x1f0>
    d048:	ldr	w8, [x19, #8]
    d04c:	cbz	w8, d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>
    d050:	ldr	x9, [x19]
    d054:	add	x8, x8, x8, lsl #1
    d058:	lsl	x22, x8, #4
    d05c:	sub	x21, x9, #0x28
    d060:	b	d06c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x22c>
    d064:	subs	x22, x22, #0x30
    d068:	b.eq	d07c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x23c>  // b.none
    d06c:	ldr	x0, [x21, x22]
    d070:	cbz	x0, d064 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x224>
    d074:	bl	0 <_ZdlPv>
    d078:	b	d064 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x224>
    d07c:	str	wzr, [x19, #8]
    d080:	mov	w21, #0x1                   	// #1
    d084:	ldr	x0, [sp, #32]
    d088:	cmp	x0, x25
    d08c:	b.eq	ce90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x50>  // b.none
    d090:	bl	0 <free>
    d094:	b	ce90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x50>
    d098:	mov	x26, xzr
    d09c:	str	xzr, [x28]
    d0a0:	mov	w8, #0x30                  	// #48
    d0a4:	madd	x8, x24, x8, x27
    d0a8:	stp	x26, x26, [x8, #16]
    d0ac:	stp	x23, x21, [x8, #32]
    d0b0:	ldp	w8, w9, [x19, #8]
    d0b4:	cmp	w8, w9
    d0b8:	b.cs	d1ac <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x36c>  // b.hs, b.nlast
    d0bc:	add	w8, w8, #0x1
    d0c0:	str	w8, [x19, #8]
    d0c4:	ldr	w8, [x20, #40]
    d0c8:	ldr	x25, [sp]
    d0cc:	adrp	x24, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d0d0:	add	x24, x24, #0x0
    d0d4:	cmp	w8, #0xe
    d0d8:	mov	w26, #0x103                 	// #259
    d0dc:	b.ne	d080 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x240>  // b.any
    d0e0:	ldp	x8, x9, [x20, #8]
    d0e4:	mov	x0, x20
    d0e8:	cmp	x8, x9
    d0ec:	cset	w1, eq  // eq = none
    d0f0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d0f4:	mov	w21, wzr
    d0f8:	str	w0, [x20, #40]
    d0fc:	ldr	x0, [sp, #32]
    d100:	cmp	x0, x25
    d104:	b.ne	d090 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x250>  // b.any
    d108:	b	ce90 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x50>
    d10c:	mov	x0, x19
    d110:	mov	x1, xzr
    d114:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d118:	ldr	w8, [x19, #8]
    d11c:	b	cfa4 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x164>
    d120:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d124:	add	x8, x8, #0x0
    d128:	mov	w9, #0x103                 	// #259
    d12c:	mov	x0, x20
    d130:	stp	x8, xzr, [sp, #32]
    d134:	strh	w9, [sp, #48]
    d138:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d13c:	str	x0, [sp, #8]
    d140:	add	x0, sp, #0x8
    d144:	add	x2, sp, #0x20
    d148:	mov	w1, #0x1                   	// #1
    d14c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d150:	ldr	w8, [x19, #8]
    d154:	cbz	w8, d184 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x344>
    d158:	ldr	x9, [x19]
    d15c:	add	x8, x8, x8, lsl #1
    d160:	lsl	x21, x8, #4
    d164:	sub	x20, x9, #0x28
    d168:	b	d174 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x334>
    d16c:	subs	x21, x21, #0x30
    d170:	b.eq	d184 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x344>  // b.none
    d174:	ldr	x0, [x20, x21]
    d178:	cbz	x0, d16c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x32c>
    d17c:	bl	0 <_ZdlPv>
    d180:	b	d16c <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE+0x32c>
    d184:	str	wzr, [x19, #8]
    d188:	ldp	x20, x19, [sp, #208]
    d18c:	ldp	x22, x21, [sp, #192]
    d190:	ldp	x24, x23, [sp, #176]
    d194:	ldp	x26, x25, [sp, #160]
    d198:	ldp	x28, x27, [sp, #144]
    d19c:	ldp	x29, x30, [sp, #128]
    d1a0:	ldr	d8, [sp, #112]
    d1a4:	add	sp, sp, #0xe0
    d1a8:	ret
    d1ac:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d1b0:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d1b4:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d1b8:	add	x0, x0, #0x0
    d1bc:	add	x1, x1, #0x0
    d1c0:	add	x3, x3, #0x0
    d1c4:	mov	w2, #0x43                  	// #67
    d1c8:	bl	0 <__assert_fail>

000000000000d1cc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE>:
    d1cc:	str	d8, [sp, #-80]!
    d1d0:	stp	x29, x30, [sp, #8]
    d1d4:	str	x28, [sp, #24]
    d1d8:	stp	x24, x23, [sp, #32]
    d1dc:	stp	x22, x21, [sp, #48]
    d1e0:	stp	x20, x19, [sp, #64]
    d1e4:	mov	x29, sp
    d1e8:	sub	sp, sp, #0x270
    d1ec:	ldr	w8, [x0, #40]
    d1f0:	cmp	w8, #0x1e
    d1f4:	b.ne	d5b4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3e8>  // b.any
    d1f8:	ldp	x8, x9, [x0, #8]
    d1fc:	mov	x20, x1
    d200:	mov	x19, x0
    d204:	cmp	x8, x9
    d208:	cset	w1, eq  // eq = none
    d20c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d210:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d214:	ldr	d0, [x8]
    d218:	add	x8, sp, #0xd8
    d21c:	str	w0, [x19, #40]
    d220:	add	x8, x8, #0x10
    d224:	add	x1, sp, #0xd8
    d228:	mov	x0, x19
    d22c:	str	x8, [sp, #216]
    d230:	str	d0, [sp, #224]
    d234:	bl	ce40 <_ZN4llvm8TGParser12ParseLetListERNS_15SmallVectorImplINS_9LetRecordEEE>
    d238:	ldr	w8, [sp, #224]
    d23c:	cbz	w8, d2ac <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xe0>
    d240:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d244:	ldr	d8, [x8]
    d248:	add	x8, sp, #0x8
    d24c:	add	x8, x8, #0x10
    d250:	add	x0, sp, #0x8
    d254:	add	x1, sp, #0xd8
    d258:	str	x8, [sp, #8]
    d25c:	str	d8, [sp, #16]
    d260:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d264:	ldp	x8, x9, [x19, #208]
    d268:	cmp	x8, x9
    d26c:	b.eq	d2b8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xec>  // b.none
    d270:	add	x9, x8, #0x10
    d274:	str	x9, [x8]
    d278:	str	d8, [x8, #8]
    d27c:	ldr	w9, [sp, #16]
    d280:	cbz	w9, d294 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0xc8>
    d284:	add	x1, sp, #0x8
    d288:	mov	x0, x8
    d28c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d290:	ldr	x8, [x19, #208]
    d294:	add	x8, x8, #0xd0
    d298:	str	x8, [x19, #208]
    d29c:	ldr	w8, [sp, #16]
    d2a0:	ldr	x0, [sp, #8]
    d2a4:	cbnz	w8, d2d4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x108>
    d2a8:	b	d300 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x134>
    d2ac:	ldr	x0, [sp, #216]
    d2b0:	mov	w19, #0x1                   	// #1
    d2b4:	b	d57c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b0>
    d2b8:	add	x0, x19, #0xc8
    d2bc:	add	x2, sp, #0x8
    d2c0:	mov	x1, x8
    d2c4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d2c8:	ldr	w8, [sp, #16]
    d2cc:	ldr	x0, [sp, #8]
    d2d0:	cbz	w8, d300 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x134>
    d2d4:	add	x8, x8, x8, lsl #1
    d2d8:	sub	x21, x0, #0x28
    d2dc:	lsl	x22, x8, #4
    d2e0:	b	d2ec <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x120>
    d2e4:	subs	x22, x22, #0x30
    d2e8:	b.eq	d2fc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x130>  // b.none
    d2ec:	ldr	x0, [x21, x22]
    d2f0:	cbz	x0, d2e4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x118>
    d2f4:	bl	0 <_ZdlPv>
    d2f8:	b	d2e4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x118>
    d2fc:	ldr	x0, [sp, #8]
    d300:	add	x8, sp, #0x8
    d304:	add	x8, x8, #0x10
    d308:	cmp	x0, x8
    d30c:	b.eq	d314 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x148>  // b.none
    d310:	bl	0 <free>
    d314:	ldr	w8, [x19, #40]
    d318:	cmp	w8, #0x1c
    d31c:	b.ne	d3b8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1ec>  // b.any
    d320:	ldp	x8, x9, [x19, #8]
    d324:	mov	x0, x19
    d328:	cmp	x8, x9
    d32c:	cset	w1, eq  // eq = none
    d330:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d334:	str	w0, [x19, #40]
    d338:	mov	x0, x19
    d33c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d340:	ldr	w8, [x19, #40]
    d344:	mov	x21, x0
    d348:	mov	x0, x19
    d34c:	cmp	w8, #0x6
    d350:	b.ne	d3fc <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x230>  // b.any
    d354:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d358:	ldp	x8, x9, [x19, #8]
    d35c:	mov	x22, x0
    d360:	mov	x0, x19
    d364:	cmp	x8, x9
    d368:	cset	w1, eq  // eq = none
    d36c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d370:	mov	x24, #0x47200000            	// #1193279488
    d374:	str	w0, [x19, #40]
    d378:	mov	w23, #0x1                   	// #1
    d37c:	movk	x24, #0x1d, lsl #32
    d380:	cmp	w0, #0x24
    d384:	b.hi	d4ec <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x320>  // b.pmore
    d388:	mov	w8, w0
    d38c:	lsl	x9, x23, x8
    d390:	tst	x9, x24
    d394:	b.eq	d41c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x250>  // b.none
    d398:	mov	x0, x19
    d39c:	mov	x1, x20
    d3a0:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    d3a4:	tbnz	w0, #0, d408 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x23c>
    d3a8:	ldr	w0, [x19, #40]
    d3ac:	cmp	w0, #0x24
    d3b0:	b.ls	d388 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x1bc>  // b.plast
    d3b4:	b	d4ec <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x320>
    d3b8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d3bc:	add	x8, x8, #0x0
    d3c0:	mov	w9, #0x103                 	// #259
    d3c4:	mov	x0, x19
    d3c8:	stp	x8, xzr, [sp, #8]
    d3cc:	strh	w9, [sp, #24]
    d3d0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d3d4:	stur	x0, [x29, #-8]
    d3d8:	sub	x0, x29, #0x8
    d3dc:	add	x2, sp, #0x8
    d3e0:	mov	w1, #0x1                   	// #1
    d3e4:	mov	w19, #0x1                   	// #1
    d3e8:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d3ec:	ldr	w8, [sp, #224]
    d3f0:	ldr	x0, [sp, #216]
    d3f4:	cbnz	w8, d550 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x384>
    d3f8:	b	d57c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b0>
    d3fc:	mov	x1, x20
    d400:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    d404:	tbz	w0, #0, d43c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x270>
    d408:	mov	w19, #0x1                   	// #1
    d40c:	ldr	w8, [sp, #224]
    d410:	ldr	x0, [sp, #216]
    d414:	cbnz	w8, d550 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x384>
    d418:	b	d57c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b0>
    d41c:	cmp	x8, #0x7
    d420:	b.ne	d4ec <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x320>  // b.any
    d424:	ldp	x8, x9, [x19, #8]
    d428:	mov	x0, x19
    d42c:	cmp	x8, x9
    d430:	cset	w1, eq  // eq = none
    d434:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d438:	str	w0, [x19, #40]
    d43c:	ldr	x8, [x19, #336]
    d440:	cmp	x8, x21
    d444:	b.ne	d5d4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x408>  // b.any
    d448:	ldr	x8, [x21, #48]
    d44c:	str	xzr, [x21, #48]
    d450:	str	xzr, [sp, #8]
    d454:	ldr	x20, [x19, #336]
    d458:	str	x8, [x19, #336]
    d45c:	cbz	x20, d47c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2b0>
    d460:	add	x0, x20, #0x30
    d464:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d468:	ldr	x1, [x20, #16]
    d46c:	mov	x0, x20
    d470:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d474:	mov	x0, x20
    d478:	bl	0 <_ZdlPv>
    d47c:	add	x0, sp, #0x8
    d480:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d484:	ldr	x9, [x19, #208]
    d488:	sub	x20, x9, #0xd0
    d48c:	str	x20, [x19, #208]
    d490:	ldur	w8, [x9, #-200]
    d494:	ldur	x0, [x9, #-208]
    d498:	cbz	w8, d4c8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2fc>
    d49c:	add	x8, x8, x8, lsl #1
    d4a0:	sub	x19, x0, #0x28
    d4a4:	lsl	x21, x8, #4
    d4a8:	b	d4b4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2e8>
    d4ac:	subs	x21, x21, #0x30
    d4b0:	b.eq	d4c4 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2f8>  // b.none
    d4b4:	ldr	x0, [x19, x21]
    d4b8:	cbz	x0, d4ac <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2e0>
    d4bc:	bl	0 <_ZdlPv>
    d4c0:	b	d4ac <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x2e0>
    d4c4:	ldr	x0, [x20]
    d4c8:	add	x8, x20, #0x10
    d4cc:	cmp	x0, x8
    d4d0:	b.eq	d4d8 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x30c>  // b.none
    d4d4:	bl	0 <free>
    d4d8:	mov	w19, wzr
    d4dc:	ldr	w8, [sp, #224]
    d4e0:	ldr	x0, [sp, #216]
    d4e4:	cbnz	w8, d550 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x384>
    d4e8:	b	d57c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b0>
    d4ec:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d4f0:	add	x8, x8, #0x0
    d4f4:	mov	w20, #0x103                 	// #259
    d4f8:	mov	x0, x19
    d4fc:	stp	x8, xzr, [sp, #8]
    d500:	strh	w20, [sp, #24]
    d504:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d508:	stur	x0, [x29, #-8]
    d50c:	sub	x0, x29, #0x8
    d510:	add	x2, sp, #0x8
    d514:	mov	w1, #0x1                   	// #1
    d518:	mov	w19, #0x1                   	// #1
    d51c:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d520:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d524:	add	x8, x8, #0x0
    d528:	sub	x0, x29, #0x8
    d52c:	add	x2, sp, #0x8
    d530:	mov	w1, #0x1                   	// #1
    d534:	strh	w20, [sp, #24]
    d538:	stp	x8, xzr, [sp, #8]
    d53c:	stur	x22, [x29, #-8]
    d540:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d544:	ldr	w8, [sp, #224]
    d548:	ldr	x0, [sp, #216]
    d54c:	cbz	w8, d57c <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3b0>
    d550:	add	x8, x8, x8, lsl #1
    d554:	sub	x20, x0, #0x28
    d558:	lsl	x21, x8, #4
    d55c:	b	d568 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x39c>
    d560:	subs	x21, x21, #0x30
    d564:	b.eq	d578 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3ac>  // b.none
    d568:	ldr	x0, [x20, x21]
    d56c:	cbz	x0, d560 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x394>
    d570:	bl	0 <_ZdlPv>
    d574:	b	d560 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x394>
    d578:	ldr	x0, [sp, #216]
    d57c:	add	x8, sp, #0xd8
    d580:	add	x8, x8, #0x10
    d584:	cmp	x0, x8
    d588:	b.eq	d590 <_ZN4llvm8TGParser16ParseTopLevelLetEPNS_10MultiClassE+0x3c4>  // b.none
    d58c:	bl	0 <free>
    d590:	mov	w0, w19
    d594:	add	sp, sp, #0x270
    d598:	ldp	x20, x19, [sp, #64]
    d59c:	ldp	x22, x21, [sp, #48]
    d5a0:	ldp	x24, x23, [sp, #32]
    d5a4:	ldr	x28, [sp, #24]
    d5a8:	ldp	x29, x30, [sp, #8]
    d5ac:	ldr	d8, [sp], #80
    d5b0:	ret
    d5b4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5b8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5bc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5c0:	add	x0, x0, #0x0
    d5c4:	add	x1, x1, #0x0
    d5c8:	add	x3, x3, #0x0
    d5cc:	mov	w2, #0xc2d                 	// #3117
    d5d0:	bl	0 <__assert_fail>
    d5d4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5d8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5dc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d5e0:	add	x0, x0, #0x0
    d5e4:	add	x1, x1, #0x0
    d5e8:	add	x3, x3, #0x0
    d5ec:	mov	w2, #0xc1                  	// #193
    d5f0:	bl	0 <__assert_fail>

000000000000d5f4 <_ZN4llvm8TGParser15ParseMultiClassEv>:
    d5f4:	sub	sp, sp, #0x120
    d5f8:	stp	x29, x30, [sp, #208]
    d5fc:	str	x28, [sp, #224]
    d600:	stp	x24, x23, [sp, #240]
    d604:	stp	x22, x21, [sp, #256]
    d608:	stp	x20, x19, [sp, #272]
    d60c:	add	x29, sp, #0xd0
    d610:	ldr	w8, [x0, #40]
    d614:	cmp	w8, #0x20
    d618:	b.ne	dc24 <_ZN4llvm8TGParser15ParseMultiClassEv+0x630>  // b.any
    d61c:	ldp	x8, x9, [x0, #8]
    d620:	mov	x19, x0
    d624:	cmp	x8, x9
    d628:	cset	w1, eq  // eq = none
    d62c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d630:	cmp	w0, #0x48
    d634:	str	w0, [x19, #40]
    d638:	b.ne	d684 <_ZN4llvm8TGParser15ParseMultiClassEv+0x90>  // b.any
    d63c:	sub	x8, x29, #0x20
    d640:	add	x23, x8, #0x10
    d644:	stur	x23, [x29, #-32]
    d648:	ldp	x20, x21, [x19, #48]
    d64c:	cbnz	x20, d654 <_ZN4llvm8TGParser15ParseMultiClassEv+0x60>
    d650:	cbnz	x21, dc44 <_ZN4llvm8TGParser15ParseMultiClassEv+0x650>
    d654:	cmp	x21, #0x10
    d658:	str	x21, [sp, #80]
    d65c:	b.cc	d6bc <_ZN4llvm8TGParser15ParseMultiClassEv+0xc8>  // b.lo, b.ul, b.last
    d660:	sub	x0, x29, #0x20
    d664:	add	x1, sp, #0x50
    d668:	mov	x2, xzr
    d66c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    d670:	ldr	x8, [sp, #80]
    d674:	stur	x0, [x29, #-32]
    d678:	stur	x8, [x29, #-16]
    d67c:	cbnz	x21, d6c4 <_ZN4llvm8TGParser15ParseMultiClassEv+0xd0>
    d680:	b	d6e4 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    d684:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d688:	add	x8, x8, #0x0
    d68c:	mov	w9, #0x103                 	// #259
    d690:	mov	x0, x19
    d694:	stp	x8, xzr, [sp, #80]
    d698:	strh	w9, [sp, #96]
    d69c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d6a0:	str	x0, [sp, #8]
    d6a4:	add	x0, sp, #0x8
    d6a8:	add	x2, sp, #0x50
    d6ac:	mov	w1, #0x1                   	// #1
    d6b0:	mov	w20, #0x1                   	// #1
    d6b4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    d6b8:	b	dc04 <_ZN4llvm8TGParser15ParseMultiClassEv+0x610>
    d6bc:	mov	x0, x23
    d6c0:	cbz	x21, d6e4 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    d6c4:	cmp	x21, #0x1
    d6c8:	b.ne	d6d8 <_ZN4llvm8TGParser15ParseMultiClassEv+0xe4>  // b.any
    d6cc:	ldrb	w8, [x20]
    d6d0:	strb	w8, [x0]
    d6d4:	b	d6e4 <_ZN4llvm8TGParser15ParseMultiClassEv+0xf0>
    d6d8:	mov	x1, x20
    d6dc:	mov	x2, x21
    d6e0:	bl	0 <memcpy>
    d6e4:	ldr	x8, [sp, #80]
    d6e8:	ldur	x9, [x29, #-32]
    d6ec:	mov	x0, x19
    d6f0:	stur	x8, [x29, #-24]
    d6f4:	strb	wzr, [x9, x8]
    d6f8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    d6fc:	ldr	x20, [x19, #344]
    d700:	mov	x21, x0
    d704:	mov	w0, #0x98                  	// #152
    d708:	bl	0 <_Znwm>
    d70c:	mov	x22, x0
    d710:	ldp	x0, x1, [x29, #-32]
    d714:	str	x21, [sp, #80]
    d718:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    d71c:	mov	x1, x0
    d720:	add	x2, sp, #0x50
    d724:	mov	w3, #0x1                   	// #1
    d728:	mov	x0, x22
    d72c:	mov	x4, x20
    d730:	mov	w5, wzr
    d734:	mov	w6, wzr
    d738:	add	x24, sp, #0x50
    d73c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d740:	ldp	x20, x21, [x29, #-32]
    d744:	add	x24, x24, #0x10
    d748:	stp	xzr, xzr, [x22, #128]
    d74c:	str	xzr, [x22, #144]
    d750:	stur	x22, [x29, #-56]
    d754:	str	x24, [sp, #80]
    d758:	cbnz	x20, d760 <_ZN4llvm8TGParser15ParseMultiClassEv+0x16c>
    d75c:	cbnz	x21, dc44 <_ZN4llvm8TGParser15ParseMultiClassEv+0x650>
    d760:	cmp	x21, #0x10
    d764:	str	x21, [sp, #8]
    d768:	b.cc	d790 <_ZN4llvm8TGParser15ParseMultiClassEv+0x19c>  // b.lo, b.ul, b.last
    d76c:	add	x0, sp, #0x50
    d770:	add	x1, sp, #0x8
    d774:	mov	x2, xzr
    d778:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    d77c:	ldr	x8, [sp, #8]
    d780:	str	x0, [sp, #80]
    d784:	str	x8, [sp, #96]
    d788:	cbnz	x21, d798 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1a4>
    d78c:	b	d7b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    d790:	mov	x0, x24
    d794:	cbz	x21, d7b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    d798:	cmp	x21, #0x1
    d79c:	b.ne	d7ac <_ZN4llvm8TGParser15ParseMultiClassEv+0x1b8>  // b.any
    d7a0:	ldrb	w8, [x20]
    d7a4:	strb	w8, [x0]
    d7a8:	b	d7b8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x1c4>
    d7ac:	mov	x1, x20
    d7b0:	mov	x2, x21
    d7b4:	bl	0 <memcpy>
    d7b8:	ldr	x8, [sp, #8]
    d7bc:	ldr	x9, [sp, #80]
    d7c0:	add	x0, x19, #0xe0
    d7c4:	add	x1, sp, #0x50
    d7c8:	str	x8, [sp, #88]
    d7cc:	strb	wzr, [x9, x8]
    d7d0:	ldur	x8, [x29, #-56]
    d7d4:	add	x9, sp, #0x50
    d7d8:	add	x22, x9, #0x20
    d7dc:	stur	xzr, [x29, #-56]
    d7e0:	str	x8, [sp, #112]
    d7e4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d7e8:	mov	x20, x0
    d7ec:	mov	x0, x22
    d7f0:	mov	x21, x1
    d7f4:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d7f8:	ldr	x0, [sp, #80]
    d7fc:	cmp	x0, x24
    d800:	b.eq	d808 <_ZN4llvm8TGParser15ParseMultiClassEv+0x214>  // b.none
    d804:	bl	0 <_ZdlPv>
    d808:	sub	x0, x29, #0x38
    d80c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d810:	tst	w21, #0xff
    d814:	b.eq	d924 <_ZN4llvm8TGParser15ParseMultiClassEv+0x330>  // b.none
    d818:	ldp	x9, x10, [x19, #8]
    d81c:	ldr	x8, [x20, #64]
    d820:	mov	x0, x19
    d824:	cmp	x9, x10
    d828:	cset	w1, eq  // eq = none
    d82c:	str	x8, [x19, #328]
    d830:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d834:	cmp	w0, #0xa
    d838:	str	w0, [x19, #40]
    d83c:	b.ne	d854 <_ZN4llvm8TGParser15ParseMultiClassEv+0x260>  // b.any
    d840:	mov	x0, x19
    d844:	mov	x1, xzr
    d848:	bl	ae14 <_ZN4llvm8TGParser20ParseTemplateArgListEPNS_6RecordE>
    d84c:	tbnz	w0, #0, dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    d850:	ldr	w0, [x19, #40]
    d854:	cmp	w0, #0xc
    d858:	b.ne	d9c8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3d4>  // b.any
    d85c:	ldp	x8, x9, [x19, #8]
    d860:	mov	x0, x19
    d864:	cmp	x8, x9
    d868:	cset	w1, eq  // eq = none
    d86c:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d870:	ldr	x1, [x19, #328]
    d874:	str	w0, [x19, #40]
    d878:	add	x8, sp, #0x50
    d87c:	mov	x0, x19
    d880:	add	x22, sp, #0x50
    d884:	bl	4bcc <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    d888:	ldr	x8, [sp, #96]
    d88c:	cbz	x8, da68 <_ZN4llvm8TGParser15ParseMultiClassEv+0x474>
    d890:	add	x8, sp, #0x8
    d894:	add	x20, x22, #0x18
    d898:	add	x21, x8, #0x18
    d89c:	add	x24, x8, #0x28
    d8a0:	b	d8ac <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b8>
    d8a4:	ldr	x8, [sp, #96]
    d8a8:	cbz	x8, da68 <_ZN4llvm8TGParser15ParseMultiClassEv+0x474>
    d8ac:	ldr	x1, [x19, #328]
    d8b0:	add	x2, sp, #0x50
    d8b4:	mov	x0, x19
    d8b8:	bl	1e00 <_ZN4llvm8TGParser16AddSubMultiClassEPNS_10MultiClassERNS_22SubMultiClassReferenceE>
    d8bc:	tbnz	w0, #0, dac0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4cc>
    d8c0:	ldr	w0, [x19, #40]
    d8c4:	cmp	w0, #0xe
    d8c8:	b.ne	dae0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4ec>  // b.any
    d8cc:	ldp	x8, x9, [x19, #8]
    d8d0:	mov	x0, x19
    d8d4:	cmp	x8, x9
    d8d8:	cset	w1, eq  // eq = none
    d8dc:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d8e0:	ldr	x1, [x19, #328]
    d8e4:	str	w0, [x19, #40]
    d8e8:	add	x8, sp, #0x8
    d8ec:	mov	x0, x19
    d8f0:	bl	4bcc <_ZN4llvm8TGParser27ParseSubMultiClassReferenceEPNS_10MultiClassE>
    d8f4:	ldur	q0, [sp, #8]
    d8f8:	ldr	x8, [sp, #24]
    d8fc:	mov	x0, x20
    d900:	mov	x1, x21
    d904:	str	q0, [sp, #80]
    d908:	str	x8, [sp, #96]
    d90c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d910:	ldr	x0, [sp, #32]
    d914:	cmp	x0, x24
    d918:	b.eq	d8a4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b0>  // b.none
    d91c:	bl	0 <free>
    d920:	b	d8a4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x2b0>
    d924:	ldur	x9, [x29, #-24]
    d928:	add	x8, sp, #0x8
    d92c:	add	x20, x8, #0x10
    d930:	add	x0, sp, #0x8
    d934:	add	x1, x9, #0xc
    d938:	stp	x20, xzr, [sp, #8]
    d93c:	strb	wzr, [sp, #24]
    d940:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    d944:	ldr	x8, [sp, #16]
    d948:	mov	x21, #0x3fffffffffffffff    	// #4611686018427387903
    d94c:	sub	x8, x21, x8
    d950:	cmp	x8, #0xb
    d954:	b.ls	dc50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x65c>  // b.plast
    d958:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d95c:	add	x1, x1, #0x0
    d960:	add	x0, sp, #0x8
    d964:	mov	w2, #0xc                   	// #12
    d968:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d96c:	ldp	x1, x2, [x29, #-32]
    d970:	add	x0, sp, #0x8
    d974:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d978:	ldr	x8, [sp, #16]
    d97c:	sub	x8, x21, x8
    d980:	cmp	x8, #0x10
    d984:	b.ls	dc50 <_ZN4llvm8TGParser15ParseMultiClassEv+0x65c>  // b.plast
    d988:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d98c:	add	x1, x1, #0x0
    d990:	add	x0, sp, #0x8
    d994:	mov	w2, #0x11                  	// #17
    d998:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    d99c:	add	x8, sp, #0x50
    d9a0:	add	x21, x8, #0x10
    d9a4:	str	x21, [sp, #80]
    d9a8:	mov	x8, x0
    d9ac:	ldr	x9, [x8], #16
    d9b0:	cmp	x9, x8
    d9b4:	b.eq	da00 <_ZN4llvm8TGParser15ParseMultiClassEv+0x40c>  // b.none
    d9b8:	str	x9, [sp, #80]
    d9bc:	ldr	x9, [x0, #16]
    d9c0:	str	x9, [sp, #96]
    d9c4:	b	da08 <_ZN4llvm8TGParser15ParseMultiClassEv+0x414>
    d9c8:	mov	w8, wzr
    d9cc:	cmp	w0, #0x6
    d9d0:	b.ne	db0c <_ZN4llvm8TGParser15ParseMultiClassEv+0x518>  // b.any
    d9d4:	ldp	x8, x9, [x19, #8]
    d9d8:	mov	x0, x19
    d9dc:	cmp	x8, x9
    d9e0:	cset	w1, eq  // eq = none
    d9e4:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    d9e8:	cmp	w0, #0x7
    d9ec:	str	w0, [x19, #40]
    d9f0:	b.ne	da7c <_ZN4llvm8TGParser15ParseMultiClassEv+0x488>  // b.any
    d9f4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    d9f8:	add	x8, x8, #0x0
    d9fc:	b	dbc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    da00:	ldr	q0, [x9]
    da04:	str	q0, [x21]
    da08:	ldr	x9, [x0, #8]
    da0c:	mov	w10, #0x104                 	// #260
    da10:	add	x11, sp, #0x50
    da14:	str	x9, [sp, #88]
    da18:	stp	x8, xzr, [x0]
    da1c:	strb	wzr, [x0, #16]
    da20:	mov	x0, x19
    da24:	sturh	w10, [x29, #-40]
    da28:	stp	x11, xzr, [x29, #-56]
    da2c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    da30:	str	x0, [x29, #24]
    da34:	add	x0, x29, #0x18
    da38:	sub	x2, x29, #0x38
    da3c:	mov	w1, #0x1                   	// #1
    da40:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    da44:	ldr	x0, [sp, #80]
    da48:	cmp	x0, x21
    da4c:	b.eq	da54 <_ZN4llvm8TGParser15ParseMultiClassEv+0x460>  // b.none
    da50:	bl	0 <_ZdlPv>
    da54:	ldr	x0, [sp, #8]
    da58:	cmp	x0, x20
    da5c:	b.eq	dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>  // b.none
    da60:	bl	0 <_ZdlPv>
    da64:	b	dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    da68:	ldr	x0, [sp, #104]
    da6c:	add	x8, x22, #0x28
    da70:	cmp	x0, x8
    da74:	b.ne	dad4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e0>  // b.any
    da78:	b	dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    da7c:	mov	x0, x19
    da80:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    da84:	mov	x22, #0x47000000            	// #1191182336
    da88:	mov	x20, x0
    da8c:	mov	w21, #0x1                   	// #1
    da90:	movk	x22, #0x18, lsl #32
    da94:	ldr	w8, [x19, #40]
    da98:	cmp	w8, #0x24
    da9c:	b.hi	dbc0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5cc>  // b.pmore
    daa0:	lsl	x9, x21, x8
    daa4:	tst	x9, x22
    daa8:	b.eq	db4c <_ZN4llvm8TGParser15ParseMultiClassEv+0x558>  // b.none
    daac:	ldr	x1, [x19, #328]
    dab0:	mov	x0, x19
    dab4:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    dab8:	tbz	w0, #0, da94 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4a0>
    dabc:	b	dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>
    dac0:	ldr	x0, [sp, #104]
    dac4:	add	x8, sp, #0x50
    dac8:	add	x8, x8, #0x28
    dacc:	cmp	x0, x8
    dad0:	b.eq	dad8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x4e4>  // b.none
    dad4:	bl	0 <free>
    dad8:	mov	w20, #0x1                   	// #1
    dadc:	b	dbf4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x600>
    dae0:	ldr	x8, [sp, #104]
    dae4:	add	x9, sp, #0x50
    dae8:	add	x9, x9, #0x28
    daec:	cmp	x8, x9
    daf0:	b.eq	db00 <_ZN4llvm8TGParser15ParseMultiClassEv+0x50c>  // b.none
    daf4:	mov	x0, x8
    daf8:	bl	0 <free>
    dafc:	ldr	w0, [x19, #40]
    db00:	mov	w8, #0x1                   	// #1
    db04:	cmp	w0, #0x6
    db08:	b.eq	d9d4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x3e0>  // b.none
    db0c:	tbz	w8, #0, db34 <_ZN4llvm8TGParser15ParseMultiClassEv+0x540>
    db10:	cmp	w0, #0xd
    db14:	b.ne	db40 <_ZN4llvm8TGParser15ParseMultiClassEv+0x54c>  // b.any
    db18:	ldp	x8, x9, [x19, #8]
    db1c:	mov	x0, x19
    db20:	cmp	x8, x9
    db24:	cset	w1, eq  // eq = none
    db28:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    db2c:	str	w0, [x19, #40]
    db30:	b	dbb4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5c0>
    db34:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db38:	add	x8, x8, #0x0
    db3c:	b	dbc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    db40:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db44:	add	x8, x8, #0x0
    db48:	b	dbc8 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5d4>
    db4c:	cmp	x8, #0x7
    db50:	b.ne	dbc0 <_ZN4llvm8TGParser15ParseMultiClassEv+0x5cc>  // b.any
    db54:	ldp	x8, x9, [x19, #8]
    db58:	mov	x0, x19
    db5c:	cmp	x8, x9
    db60:	cset	w1, eq  // eq = none
    db64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    db68:	ldr	x8, [x19, #336]
    db6c:	str	w0, [x19, #40]
    db70:	cmp	x8, x20
    db74:	b.ne	dc5c <_ZN4llvm8TGParser15ParseMultiClassEv+0x668>  // b.any
    db78:	ldr	x8, [x20, #48]
    db7c:	str	xzr, [x20, #48]
    db80:	str	xzr, [sp, #80]
    db84:	ldr	x20, [x19, #336]
    db88:	str	x8, [x19, #336]
    db8c:	cbz	x20, dbac <_ZN4llvm8TGParser15ParseMultiClassEv+0x5b8>
    db90:	add	x0, x20, #0x30
    db94:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    db98:	ldr	x1, [x20, #16]
    db9c:	mov	x0, x20
    dba0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dba4:	mov	x0, x20
    dba8:	bl	0 <_ZdlPv>
    dbac:	add	x0, sp, #0x50
    dbb0:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dbb4:	mov	w20, wzr
    dbb8:	str	xzr, [x19, #328]
    dbbc:	b	dbf4 <_ZN4llvm8TGParser15ParseMultiClassEv+0x600>
    dbc0:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dbc4:	add	x8, x8, #0x0
    dbc8:	mov	w9, #0x103                 	// #259
    dbcc:	mov	x0, x19
    dbd0:	stp	x8, xzr, [sp, #80]
    dbd4:	strh	w9, [sp, #96]
    dbd8:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    dbdc:	str	x0, [sp, #8]
    dbe0:	add	x0, sp, #0x8
    dbe4:	add	x2, sp, #0x50
    dbe8:	mov	w1, #0x1                   	// #1
    dbec:	mov	w20, #0x1                   	// #1
    dbf0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    dbf4:	ldur	x0, [x29, #-32]
    dbf8:	cmp	x0, x23
    dbfc:	b.eq	dc04 <_ZN4llvm8TGParser15ParseMultiClassEv+0x610>  // b.none
    dc00:	bl	0 <_ZdlPv>
    dc04:	mov	w0, w20
    dc08:	ldp	x20, x19, [sp, #272]
    dc0c:	ldp	x22, x21, [sp, #256]
    dc10:	ldp	x24, x23, [sp, #240]
    dc14:	ldr	x28, [sp, #224]
    dc18:	ldp	x29, x30, [sp, #208]
    dc1c:	add	sp, sp, #0x120
    dc20:	ret
    dc24:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc28:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc2c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc30:	add	x0, x0, #0x0
    dc34:	add	x1, x1, #0x0
    dc38:	add	x3, x3, #0x0
    dc3c:	mov	w2, #0xc63                 	// #3171
    dc40:	bl	0 <__assert_fail>
    dc44:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc48:	add	x0, x0, #0x0
    dc4c:	bl	0 <_ZSt19__throw_logic_errorPKc>
    dc50:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc54:	add	x0, x0, #0x0
    dc58:	bl	0 <_ZSt20__throw_length_errorPKc>
    dc5c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc60:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc64:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dc68:	add	x0, x0, #0x0
    dc6c:	add	x1, x1, #0x0
    dc70:	add	x3, x3, #0x0
    dc74:	mov	w2, #0xc1                  	// #193
    dc78:	bl	0 <__assert_fail>

000000000000dc7c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE>:
    dc7c:	str	d8, [sp, #-112]!
    dc80:	stp	x29, x30, [sp, #16]
    dc84:	stp	x28, x27, [sp, #32]
    dc88:	stp	x26, x25, [sp, #48]
    dc8c:	stp	x24, x23, [sp, #64]
    dc90:	stp	x22, x21, [sp, #80]
    dc94:	stp	x20, x19, [sp, #96]
    dc98:	mov	x29, sp
    dc9c:	sub	sp, sp, #0x2e0
    dca0:	ldr	w8, [x0, #40]
    dca4:	cmp	w8, #0x1a
    dca8:	b.ne	e844 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbc8>  // b.any
    dcac:	ldp	x8, x9, [x0, #8]
    dcb0:	mov	x20, x1
    dcb4:	mov	x19, x0
    dcb8:	cmp	x8, x9
    dcbc:	cset	w1, eq  // eq = none
    dcc0:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dcc4:	str	w0, [x19, #40]
    dcc8:	mov	x0, x19
    dccc:	mov	x1, x20
    dcd0:	bl	3608 <_ZN4llvm8TGParser15ParseObjectNameEPNS_10MultiClassE>
    dcd4:	cbz	x0, e538 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8bc>
    dcd8:	ldrb	w8, [x0, #8]
    dcdc:	mov	x21, x0
    dce0:	cmp	w8, #0x18
    dce4:	b.ne	dd3c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0>  // b.any
    dce8:	ldr	x0, [x19, #344]
    dcec:	bl	0 <_ZN4llvm12RecordKeeper19getNewAnonymousNameEv>
    dcf0:	mov	x21, x0
    dcf4:	cbz	x20, dd3c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc0>
    dcf8:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dcfc:	add	x0, x0, #0x0
    dd00:	mov	w1, #0x4                   	// #4
    dd04:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    dd08:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dd0c:	mov	x2, x0
    dd10:	add	x3, x3, #0x0
    dd14:	mov	w4, #0x2                   	// #2
    dd18:	mov	x0, x20
    dd1c:	mov	x1, x20
    dd20:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    dd24:	adrp	x1, 0 <_ZN4llvm11StringRecTy6SharedE>
    dd28:	ldr	x1, [x1]
    dd2c:	bl	0 <_ZN4llvm7VarInit3getEPNS_4InitEPNS_5RecTyE>
    dd30:	mov	x1, x21
    dd34:	bl	0 <_ZN4llvm9BinOpInit12getStrConcatEPNS_4InitES2_>
    dd38:	mov	x21, x0
    dd3c:	ldr	w8, [x19, #40]
    dd40:	cmp	w8, #0xc
    dd44:	b.ne	e540 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8c4>  // b.any
    dd48:	str	x20, [sp, #48]
    dd4c:	stp	xzr, xzr, [x29, #-32]
    dd50:	stur	xzr, [x29, #-16]
    dd54:	ldp	x8, x9, [x19, #8]
    dd58:	mov	x0, x19
    dd5c:	cmp	x8, x9
    dd60:	cset	w1, eq  // eq = none
    dd64:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    dd68:	str	w0, [x19, #40]
    dd6c:	mov	x0, x19
    dd70:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    dd74:	stur	x0, [x29, #-40]
    dd78:	sub	x8, x29, #0x70
    dd7c:	mov	w2, #0x1                   	// #1
    dd80:	mov	x0, x19
    dd84:	mov	x1, xzr
    dd88:	sub	x20, x29, #0x70
    dd8c:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    dd90:	add	x8, x19, #0xe0
    dd94:	add	x9, x20, #0x18
    dd98:	str	x8, [sp, #56]
    dd9c:	sub	x8, x29, #0x100
    dda0:	add	x10, sp, #0xb0
    dda4:	str	x9, [sp, #16]
    dda8:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ddac:	add	x11, sp, #0x50
    ddb0:	add	x23, x8, #0x10
    ddb4:	add	x8, x10, #0x10
    ddb8:	ldr	d8, [x9]
    ddbc:	str	x8, [sp, #40]
    ddc0:	add	x8, x11, #0x10
    ddc4:	str	x8, [sp, #32]
    ddc8:	add	x8, x11, #0x18
    ddcc:	str	x8, [sp, #8]
    ddd0:	add	x8, x11, #0x28
    ddd4:	str	wzr, [sp, #28]
    ddd8:	str	x8, [sp]
    dddc:	b	dde4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x168>
    dde0:	cbnz	w20, e5ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x930>
    dde4:	ldur	x8, [x29, #-96]
    dde8:	cbz	x8, e6a0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa24>
    ddec:	ldr	x8, [x8]
    ddf0:	cbz	x8, e7e4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb68>
    ddf4:	ldrb	w9, [x8, #8]
    ddf8:	cmp	w9, #0x12
    ddfc:	b.ne	e804 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb88>  // b.any
    de00:	ldp	x27, x28, [x8, #24]
    de04:	stur	x23, [x29, #-256]
    de08:	cbz	x27, de50 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1d4>
    de0c:	cmp	x28, #0x10
    de10:	mov	x0, x23
    de14:	str	x28, [sp, #80]
    de18:	b.cc	de38 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1bc>  // b.lo, b.ul, b.last
    de1c:	sub	x0, x29, #0x100
    de20:	add	x1, sp, #0x50
    de24:	mov	x2, xzr
    de28:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    de2c:	ldr	x8, [sp, #80]
    de30:	stur	x0, [x29, #-256]
    de34:	stur	x8, [x29, #-240]
    de38:	cbz	x28, de68 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1ec>
    de3c:	cmp	x28, #0x1
    de40:	b.ne	de5c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1e0>  // b.any
    de44:	ldrb	w8, [x27]
    de48:	strb	w8, [x0]
    de4c:	b	de68 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1ec>
    de50:	stur	xzr, [x29, #-248]
    de54:	sturb	wzr, [x29, #-240]
    de58:	b	de78 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x1fc>
    de5c:	mov	x1, x27
    de60:	mov	x2, x28
    de64:	bl	0 <memcpy>
    de68:	ldr	x8, [sp, #80]
    de6c:	ldur	x9, [x29, #-256]
    de70:	stur	x8, [x29, #-248]
    de74:	strb	wzr, [x9, x8]
    de78:	ldr	x0, [sp, #56]
    de7c:	sub	x1, x29, #0x100
    de80:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    de84:	ldur	x8, [x29, #-256]
    de88:	ldr	x27, [x0]
    de8c:	cmp	x8, x23
    de90:	b.eq	de9c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x220>  // b.none
    de94:	mov	x0, x8
    de98:	bl	0 <_ZdlPv>
    de9c:	cbz	x27, e824 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xba8>
    dea0:	ldur	w24, [x29, #-80]
    dea4:	ldr	w22, [x27, #64]
    dea8:	cmp	w22, w24
    deac:	b.cc	e578 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8fc>  // b.lo, b.ul, b.last
    deb0:	ldur	x20, [x29, #-88]
    deb4:	ldr	x26, [x27, #56]
    deb8:	stur	x23, [x29, #-256]
    debc:	stur	d8, [x29, #-248]
    dec0:	cbz	w22, df9c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x320>
    dec4:	mov	w8, wzr
    dec8:	mov	x25, xzr
    decc:	mov	w9, #0x8                   	// #8
    ded0:	mov	x10, x23
    ded4:	b	df14 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x298>
    ded8:	cmp	w8, w9
    dedc:	b.cs	df70 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2f4>  // b.hs, b.nlast
    dee0:	lsl	x11, x25, #3
    dee4:	ldr	x12, [x26, x11]
    dee8:	add	x13, x10, w8, uxtw #4
    deec:	cmp	w8, w9
    def0:	str	x12, [x13]
    def4:	ldr	x11, [x20, x11]
    def8:	str	x11, [x13, #8]
    defc:	b.cs	e7c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb48>  // b.hs, b.nlast
    df00:	add	x25, x25, #0x1
    df04:	add	w8, w8, #0x1
    df08:	cmp	x25, x22
    df0c:	stur	w8, [x29, #-248]
    df10:	b.eq	df9c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x320>  // b.none
    df14:	cmp	x25, x24
    df18:	b.cc	ded8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x25c>  // b.lo, b.ul, b.last
    df1c:	ldr	x9, [x26, x25, lsl #3]
    df20:	ldr	x8, [x27, #72]
    df24:	ldr	x10, [x8], #24
    df28:	cmp	x10, x9
    df2c:	b.ne	df24 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2a8>  // b.any
    df30:	ldur	x28, [x8, #-8]
    df34:	ldr	x8, [x28]
    df38:	mov	x0, x28
    df3c:	ldr	x8, [x8, #24]
    df40:	blr	x8
    df44:	tbz	w0, #0, e0fc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x480>
    df48:	ldp	w8, w9, [x29, #-248]
    df4c:	cmp	w8, w9
    df50:	b.cs	df88 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x30c>  // b.hs, b.nlast
    df54:	ldur	x10, [x29, #-256]
    df58:	ldr	x11, [x26, x25, lsl #3]
    df5c:	cmp	w8, w9
    df60:	add	x12, x10, w8, uxtw #4
    df64:	stp	x11, x28, [x12]
    df68:	b.cc	df00 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x284>  // b.lo, b.ul, b.last
    df6c:	b	e7c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb48>
    df70:	sub	x0, x29, #0x100
    df74:	mov	x1, xzr
    df78:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    df7c:	ldp	w8, w9, [x29, #-248]
    df80:	ldur	x10, [x29, #-256]
    df84:	b	dee0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x264>
    df88:	sub	x0, x29, #0x100
    df8c:	mov	x1, xzr
    df90:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    df94:	ldp	w8, w9, [x29, #-248]
    df98:	b	df54 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x2d8>
    df9c:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dfa0:	mov	w1, #0x4                   	// #4
    dfa4:	add	x0, x0, #0x0
    dfa8:	bl	0 <_ZN4llvm10StringInit3getENS_9StringRefE>
    dfac:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    dfb0:	mov	x2, x0
    dfb4:	mov	w4, #0x2                   	// #2
    dfb8:	mov	x0, x27
    dfbc:	mov	x1, x27
    dfc0:	add	x3, x3, #0x0
    dfc4:	bl	5808 <_ZL11QualifyNameRN4llvm6RecordEPNS_10MultiClassEPNS_4InitENS_9StringRefE>
    dfc8:	ldp	w8, w9, [x29, #-248]
    dfcc:	mov	x28, x0
    dfd0:	cmp	w8, w9
    dfd4:	b.cs	e524 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x8a8>  // b.hs, b.nlast
    dfd8:	ldur	x10, [x29, #-256]
    dfdc:	cmp	w8, w9
    dfe0:	add	x9, x10, w8, uxtw #4
    dfe4:	stp	x28, x21, [x9]
    dfe8:	b.cs	e7c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb48>  // b.hs, b.nlast
    dfec:	ldr	x9, [sp, #48]
    dff0:	add	w8, w8, #0x1
    dff4:	add	x1, x27, #0x80
    dff8:	sub	x2, x29, #0x100
    dffc:	cmp	x9, #0x0
    e000:	cset	w3, eq  // eq = none
    e004:	sub	x4, x29, #0x20
    e008:	sub	x5, x29, #0x28
    e00c:	mov	x0, x19
    e010:	stur	w8, [x29, #-248]
    e014:	bl	2440 <_ZN4llvm8TGParser7resolveERKSt6vectorINS_12RecordsEntryESaIS2_EERNS_11SmallVectorISt4pairIPNS_4InitESA_ELj8EEEbPS4_PNS_5SMLocE>
    e018:	tbnz	w0, #0, e494 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x818>
    e01c:	ldr	w8, [x19, #40]
    e020:	cmp	w8, #0xe
    e024:	b.ne	e19c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x520>  // b.any
    e028:	ldp	x8, x9, [x19, #8]
    e02c:	mov	x0, x19
    e030:	cmp	x8, x9
    e034:	cset	w1, eq  // eq = none
    e038:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e03c:	cmp	w0, #0x48
    e040:	str	w0, [x19, #40]
    e044:	b.ne	e1a4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x528>  // b.any
    e048:	mov	x0, x19
    e04c:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e050:	stur	x0, [x29, #-40]
    e054:	ldr	w8, [x19, #40]
    e058:	and	w8, w8, #0xfffffffc
    e05c:	cmp	w8, #0x48
    e060:	b.ne	e884 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xc08>  // b.any
    e064:	ldr	x8, [x19, #344]
    e068:	ldr	x25, [x8, #16]
    e06c:	add	x20, x8, #0x8
    e070:	cbz	x25, e4b4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x838>
    e074:	ldp	x27, x24, [x19, #48]
    e078:	mov	x22, x20
    e07c:	b	e090 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x414>
    e080:	add	x8, x25, #0x10
    e084:	mov	x22, x25
    e088:	ldr	x25, [x8]
    e08c:	cbz	x25, e0cc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x450>
    e090:	ldr	x26, [x25, #40]
    e094:	cmp	x24, x26
    e098:	csel	x2, x24, x26, cc  // cc = lo, ul, last
    e09c:	cbz	x2, e0b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x43c>
    e0a0:	ldr	x0, [x25, #32]
    e0a4:	mov	x1, x27
    e0a8:	bl	0 <memcmp>
    e0ac:	cbz	w0, e0b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x43c>
    e0b0:	tbz	w0, #31, e080 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x404>
    e0b4:	b	e0c0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x444>
    e0b8:	cmp	x26, x24
    e0bc:	b.cs	e080 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x404>  // b.hs, b.nlast
    e0c0:	add	x8, x25, #0x18
    e0c4:	ldr	x25, [x8]
    e0c8:	cbnz	x25, e090 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x414>
    e0cc:	cmp	x22, x20
    e0d0:	b.eq	e4b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x83c>  // b.none
    e0d4:	ldr	x25, [x22, #40]
    e0d8:	cmp	x25, x24
    e0dc:	csel	x2, x25, x24, cc  // cc = lo, ul, last
    e0e0:	cbz	x2, e4ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x830>
    e0e4:	ldr	x1, [x22, #32]
    e0e8:	mov	x0, x27
    e0ec:	bl	0 <memcmp>
    e0f0:	cbz	w0, e4ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x830>
    e0f4:	tbnz	w0, #31, e4b4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x838>
    e0f8:	b	e4b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x83c>
    e0fc:	mov	w8, #0x109                 	// #265
    e100:	stp	xzr, xzr, [sp, #280]
    e104:	strh	w8, [sp, #296]
    e108:	str	w25, [sp, #280]
    e10c:	mov	w8, #0x903                 	// #2307
    e110:	add	x9, sp, #0x130
    e114:	strh	w8, [sp, #320]
    e118:	ldr	x8, [sp, #280]
    e11c:	str	x9, [sp, #328]
    e120:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e124:	add	x9, x9, #0x0
    e128:	str	x9, [sp, #336]
    e12c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e130:	add	x9, x9, #0x0
    e134:	stp	x9, x8, [sp, #304]
    e138:	mov	w8, #0x302                 	// #770
    e13c:	strh	w8, [sp, #344]
    e140:	ldr	x0, [x26, x25, lsl #3]
    e144:	ldur	x28, [x29, #-40]
    e148:	ldr	x8, [x0]
    e14c:	ldr	x9, [x8, #48]
    e150:	add	x8, sp, #0x50
    e154:	blr	x9
    e158:	ldrb	w8, [sp, #344]
    e15c:	mov	w20, #0x104                 	// #260
    e160:	add	x9, sp, #0x50
    e164:	strh	w20, [sp, #272]
    e168:	cmp	w8, #0x1
    e16c:	stp	x9, xzr, [sp, #256]
    e170:	b.eq	e1dc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x560>  // b.none
    e174:	cbnz	w8, e1f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x578>
    e178:	mov	w8, #0x100                 	// #256
    e17c:	strh	w8, [sp, #368]
    e180:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e184:	add	x8, x8, #0x0
    e188:	stp	x8, xzr, [sp, #232]
    e18c:	mov	w8, #0x103                 	// #259
    e190:	stp	xzr, xzr, [sp, #352]
    e194:	strh	w8, [sp, #248]
    e198:	b	e27c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x600>
    e19c:	mov	w20, #0x3                   	// #3
    e1a0:	b	e498 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x81c>
    e1a4:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e1a8:	add	x8, x8, #0x0
    e1ac:	stp	x8, xzr, [sp, #80]
    e1b0:	mov	w8, #0x103                 	// #259
    e1b4:	mov	x0, x19
    e1b8:	strh	w8, [sp, #96]
    e1bc:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e1c0:	str	x0, [sp, #176]
    e1c4:	add	x0, sp, #0xb0
    e1c8:	add	x2, sp, #0x50
    e1cc:	mov	w1, #0x1                   	// #1
    e1d0:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e1d4:	mov	w20, #0x1                   	// #1
    e1d8:	b	e498 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x81c>
    e1dc:	ldr	x8, [sp, #272]
    e1e0:	ldr	q0, [sp, #256]
    e1e4:	str	x8, [sp, #368]
    e1e8:	and	w8, w8, #0xff
    e1ec:	str	q0, [sp, #352]
    e1f0:	b	e25c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5e0>
    e1f4:	ldrb	w9, [sp, #345]
    e1f8:	ldr	x10, [sp, #328]
    e1fc:	cmp	w9, #0x1
    e200:	mov	w9, #0x2                   	// #2
    e204:	csel	w11, w8, w9, eq  // eq = none
    e208:	add	x9, sp, #0x148
    e20c:	csel	x9, x10, x9, eq  // eq = none
    e210:	add	x10, sp, #0x50
    e214:	stp	x9, x10, [sp, #352]
    e218:	cmp	w11, #0x2
    e21c:	mov	w10, #0x4                   	// #4
    e220:	strb	w11, [sp, #368]
    e224:	strb	w10, [sp, #369]
    e228:	b.ne	e25c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x5e0>  // b.any
    e22c:	ldrb	w8, [x9, #16]
    e230:	cbz	w8, e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e234:	ldrb	w8, [x9, #17]
    e238:	cmp	w8, #0x1
    e23c:	b.eq	e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>  // b.none
    e240:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e244:	add	x8, x8, #0x0
    e248:	stp	x8, xzr, [sp, #232]
    e24c:	mov	w8, #0x103                 	// #259
    e250:	strh	w8, [sp, #248]
    e254:	mov	w8, #0x2                   	// #2
    e258:	b	e28c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x610>
    e25c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e260:	add	x9, x9, #0x0
    e264:	stp	x9, xzr, [sp, #232]
    e268:	cmp	w8, #0x1
    e26c:	mov	w9, #0x103                 	// #259
    e270:	strh	w9, [sp, #248]
    e274:	b.eq	e2e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x664>  // b.none
    e278:	cbnz	w8, e28c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x610>
    e27c:	mov	w8, #0x100                 	// #256
    e280:	stp	xzr, xzr, [sp, #384]
    e284:	strh	w8, [sp, #400]
    e288:	b	e2f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x674>
    e28c:	ldrb	w9, [sp, #369]
    e290:	ldr	x10, [sp, #352]
    e294:	cmp	w9, #0x1
    e298:	mov	w9, #0x2                   	// #2
    e29c:	csel	w9, w8, w9, eq  // eq = none
    e2a0:	add	x8, sp, #0x160
    e2a4:	csel	x8, x10, x8, eq  // eq = none
    e2a8:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e2ac:	add	x10, x10, #0x0
    e2b0:	strb	w9, [sp, #400]
    e2b4:	cmp	w9, #0x2
    e2b8:	mov	w9, #0x3                   	// #3
    e2bc:	stp	x8, x10, [sp, #384]
    e2c0:	strb	w9, [sp, #401]
    e2c4:	b.ne	e2f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x674>  // b.any
    e2c8:	ldrb	w9, [x8, #16]
    e2cc:	cbz	w9, e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e2d0:	ldrb	w8, [x8, #17]
    e2d4:	cmp	w8, #0x1
    e2d8:	b.ne	e2f0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x674>  // b.any
    e2dc:	b	e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e2e0:	ldur	q0, [sp, #232]
    e2e4:	ldr	x8, [sp, #248]
    e2e8:	str	q0, [sp, #384]
    e2ec:	str	x8, [sp, #400]
    e2f0:	ldr	x0, [x27]
    e2f4:	ldr	x8, [x0]
    e2f8:	ldr	x9, [x8, #48]
    e2fc:	add	x8, sp, #0xb0
    e300:	blr	x9
    e304:	ldrb	w8, [sp, #400]
    e308:	add	x9, sp, #0xb0
    e30c:	strh	w20, [sp, #224]
    e310:	stp	x9, xzr, [sp, #208]
    e314:	cmp	w8, #0x1
    e318:	b.eq	e344 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x6c8>  // b.none
    e31c:	cbnz	w8, e35c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x6e0>
    e320:	mov	w8, #0x100                 	// #256
    e324:	strh	w8, [sp, #432]
    e328:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e32c:	add	x8, x8, #0x0
    e330:	stp	x8, xzr, [sp, #152]
    e334:	mov	w8, #0x103                 	// #259
    e338:	stp	xzr, xzr, [sp, #416]
    e33c:	strh	w8, [sp, #168]
    e340:	b	e3e4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x768>
    e344:	ldr	x8, [sp, #224]
    e348:	ldr	q0, [sp, #208]
    e34c:	str	x8, [sp, #432]
    e350:	and	w8, w8, #0xff
    e354:	str	q0, [sp, #416]
    e358:	b	e3c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x748>
    e35c:	ldrb	w9, [sp, #401]
    e360:	ldr	x10, [sp, #384]
    e364:	cmp	w9, #0x1
    e368:	mov	w9, #0x2                   	// #2
    e36c:	csel	w11, w8, w9, eq  // eq = none
    e370:	add	x9, sp, #0x180
    e374:	csel	x9, x10, x9, eq  // eq = none
    e378:	add	x10, sp, #0xb0
    e37c:	stp	x9, x10, [sp, #416]
    e380:	cmp	w11, #0x2
    e384:	mov	w10, #0x4                   	// #4
    e388:	strb	w11, [sp, #432]
    e38c:	strb	w10, [sp, #433]
    e390:	b.ne	e3c4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x748>  // b.any
    e394:	ldrb	w8, [x9, #16]
    e398:	cbz	w8, e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e39c:	ldrb	w8, [x9, #17]
    e3a0:	cmp	w8, #0x1
    e3a4:	b.eq	e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>  // b.none
    e3a8:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e3ac:	add	x8, x8, #0x0
    e3b0:	stp	x8, xzr, [sp, #152]
    e3b4:	mov	w8, #0x103                 	// #259
    e3b8:	strh	w8, [sp, #168]
    e3bc:	mov	w8, #0x2                   	// #2
    e3c0:	b	e3f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x778>
    e3c4:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e3c8:	add	x9, x9, #0x0
    e3cc:	stp	x9, xzr, [sp, #152]
    e3d0:	cmp	w8, #0x1
    e3d4:	mov	w9, #0x103                 	// #259
    e3d8:	strh	w9, [sp, #168]
    e3dc:	b.eq	e448 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7cc>  // b.none
    e3e0:	cbnz	w8, e3f4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x778>
    e3e4:	mov	w8, #0x100                 	// #256
    e3e8:	stp	xzr, xzr, [sp, #448]
    e3ec:	strh	w8, [sp, #464]
    e3f0:	b	e458 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7dc>
    e3f4:	ldrb	w9, [sp, #433]
    e3f8:	ldr	x10, [sp, #416]
    e3fc:	cmp	w9, #0x1
    e400:	mov	w9, #0x2                   	// #2
    e404:	csel	w9, w8, w9, eq  // eq = none
    e408:	add	x8, sp, #0x1a0
    e40c:	csel	x8, x10, x8, eq  // eq = none
    e410:	adrp	x10, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e414:	add	x10, x10, #0x0
    e418:	strb	w9, [sp, #464]
    e41c:	cmp	w9, #0x2
    e420:	mov	w9, #0x3                   	// #3
    e424:	stp	x8, x10, [sp, #448]
    e428:	strb	w9, [sp, #465]
    e42c:	b.ne	e458 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7dc>  // b.any
    e430:	ldrb	w9, [x8, #16]
    e434:	cbz	w9, e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e438:	ldrb	w8, [x8, #17]
    e43c:	cmp	w8, #0x1
    e440:	b.ne	e458 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x7dc>  // b.any
    e444:	b	e864 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xbe8>
    e448:	ldur	q0, [sp, #152]
    e44c:	ldr	x8, [sp, #168]
    e450:	str	q0, [sp, #448]
    e454:	str	x8, [sp, #464]
    e458:	add	x0, x29, #0x8
    e45c:	add	x2, sp, #0x1c0
    e460:	mov	w1, #0x1                   	// #1
    e464:	str	x28, [x29, #8]
    e468:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e46c:	ldr	x0, [sp, #176]
    e470:	ldr	x8, [sp, #40]
    e474:	cmp	x0, x8
    e478:	b.eq	e480 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x804>  // b.none
    e47c:	bl	0 <_ZdlPv>
    e480:	ldr	x0, [sp, #80]
    e484:	ldr	x8, [sp, #32]
    e488:	cmp	x0, x8
    e48c:	b.eq	e494 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x818>  // b.none
    e490:	bl	0 <_ZdlPv>
    e494:	mov	w20, #0x1                   	// #1
    e498:	ldur	x0, [x29, #-256]
    e49c:	cmp	x0, x23
    e4a0:	b.eq	dde0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x164>  // b.none
    e4a4:	bl	0 <free>
    e4a8:	b	dde0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x164>
    e4ac:	cmp	x24, x25
    e4b0:	b.cs	e4b8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x83c>  // b.hs, b.nlast
    e4b4:	mov	x22, x20
    e4b8:	cmp	x22, x20
    e4bc:	b.eq	e4d8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x85c>  // b.none
    e4c0:	ldr	x8, [x22, #64]
    e4c4:	cbz	x8, e4d8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x85c>
    e4c8:	mov	w8, #0x1                   	// #1
    e4cc:	mov	w20, #0x3                   	// #3
    e4d0:	str	w8, [sp, #28]
    e4d4:	b	e498 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x81c>
    e4d8:	add	x8, sp, #0x50
    e4dc:	mov	w2, #0x1                   	// #1
    e4e0:	mov	x0, x19
    e4e4:	mov	x1, xzr
    e4e8:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    e4ec:	ldr	q0, [sp, #80]
    e4f0:	ldr	x8, [sp, #96]
    e4f4:	ldp	x1, x0, [sp, #8]
    e4f8:	stur	q0, [x29, #-112]
    e4fc:	stur	x8, [x29, #-96]
    e500:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e504:	ldr	x0, [sp, #104]
    e508:	ldr	x8, [sp]
    e50c:	cmp	x0, x8
    e510:	b.eq	e518 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x89c>  // b.none
    e514:	bl	0 <free>
    e518:	mov	w20, wzr
    e51c:	str	wzr, [sp, #28]
    e520:	b	e498 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x81c>
    e524:	sub	x0, x29, #0x100
    e528:	mov	x1, xzr
    e52c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e530:	ldp	w8, w9, [x29, #-248]
    e534:	b	dfd8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x35c>
    e538:	mov	w20, #0x1                   	// #1
    e53c:	b	e6ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa70>
    e540:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e544:	add	x8, x8, #0x0
    e548:	mov	w9, #0x103                 	// #259
    e54c:	mov	x0, x19
    e550:	stp	x8, xzr, [x29, #-256]
    e554:	sturh	w9, [x29, #-240]
    e558:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e55c:	stur	x0, [x29, #-112]
    e560:	sub	x0, x29, #0x70
    e564:	sub	x2, x29, #0x100
    e568:	mov	w1, #0x1                   	// #1
    e56c:	mov	w20, #0x1                   	// #1
    e570:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e574:	b	e6ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa70>
    e578:	ldur	x8, [x29, #-40]
    e57c:	adrp	x9, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e580:	add	x9, x9, #0x0
    e584:	stp	x9, xzr, [x29, #-256]
    e588:	mov	w9, #0x103                 	// #259
    e58c:	sturh	w9, [x29, #-240]
    e590:	str	x8, [sp, #80]
    e594:	add	x0, sp, #0x50
    e598:	sub	x2, x29, #0x100
    e59c:	mov	w1, #0x1                   	// #1
    e5a0:	mov	w20, #0x1                   	// #1
    e5a4:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e5a8:	b	e6a4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa28>
    e5ac:	cmp	w20, #0x3
    e5b0:	b.ne	e6a0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa24>  // b.any
    e5b4:	ldr	w8, [sp, #28]
    e5b8:	tbz	w8, #0, e714 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa98>
    e5bc:	sub	x8, x29, #0x100
    e5c0:	mov	x0, x19
    e5c4:	mov	x1, xzr
    e5c8:	mov	w2, wzr
    e5cc:	sub	x23, x29, #0x100
    e5d0:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    e5d4:	ldur	x8, [x29, #-240]
    e5d8:	cbz	x8, e684 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa08>
    e5dc:	add	x8, sp, #0x50
    e5e0:	add	x20, x23, #0x18
    e5e4:	add	x21, x8, #0x18
    e5e8:	add	x24, x8, #0x28
    e5ec:	ldp	x22, x25, [x29, #-32]
    e5f0:	cmp	x22, x25
    e5f4:	b.eq	e618 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x99c>  // b.none
    e5f8:	sub	x2, x29, #0x100
    e5fc:	mov	x0, x19
    e600:	mov	x1, x22
    e604:	bl	1d6c <_ZN4llvm8TGParser11AddSubClassERNS_12RecordsEntryERNS_17SubClassReferenceE>
    e608:	tbnz	w0, #0, e684 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa08>
    e60c:	add	x22, x22, #0x10
    e610:	cmp	x25, x22
    e614:	b.ne	e5f8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x97c>  // b.any
    e618:	ldr	w8, [x19, #40]
    e61c:	cmp	w8, #0xe
    e620:	b.ne	e7ac <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb30>  // b.any
    e624:	ldp	x8, x9, [x19, #8]
    e628:	mov	x0, x19
    e62c:	cmp	x8, x9
    e630:	cset	w1, eq  // eq = none
    e634:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e638:	str	w0, [x19, #40]
    e63c:	add	x8, sp, #0x50
    e640:	mov	x0, x19
    e644:	mov	x1, xzr
    e648:	mov	w2, wzr
    e64c:	bl	46b4 <_ZN4llvm8TGParser22ParseSubClassReferenceEPNS_6RecordEb>
    e650:	ldr	q0, [sp, #80]
    e654:	ldr	x8, [sp, #96]
    e658:	mov	x0, x20
    e65c:	mov	x1, x21
    e660:	stur	q0, [x29, #-256]
    e664:	stur	x8, [x29, #-240]
    e668:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e66c:	ldr	x0, [sp, #104]
    e670:	cmp	x0, x24
    e674:	b.eq	e67c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa00>  // b.none
    e678:	bl	0 <free>
    e67c:	ldur	x8, [x29, #-240]
    e680:	cbnz	x8, e5ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x970>
    e684:	mov	w20, #0x1                   	// #1
    e688:	ldur	x0, [x29, #-232]
    e68c:	add	x8, x23, #0x28
    e690:	cmp	x0, x8
    e694:	b.eq	e69c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa20>  // b.none
    e698:	bl	0 <free>
    e69c:	cbz	w20, e714 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa98>
    e6a0:	mov	w20, #0x1                   	// #1
    e6a4:	ldur	x0, [x29, #-88]
    e6a8:	sub	x8, x29, #0x70
    e6ac:	add	x8, x8, #0x28
    e6b0:	cmp	x0, x8
    e6b4:	b.eq	e6bc <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa40>  // b.none
    e6b8:	bl	0 <free>
    e6bc:	ldp	x19, x21, [x29, #-32]
    e6c0:	cmp	x19, x21
    e6c4:	b.eq	e6e0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa64>  // b.none
    e6c8:	mov	x0, x19
    e6cc:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e6d0:	add	x19, x19, #0x10
    e6d4:	cmp	x21, x19
    e6d8:	b.ne	e6c8 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa4c>  // b.any
    e6dc:	ldur	x19, [x29, #-32]
    e6e0:	cbz	x19, e6ec <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa70>
    e6e4:	mov	x0, x19
    e6e8:	bl	0 <_ZdlPv>
    e6ec:	mov	w0, w20
    e6f0:	add	sp, sp, #0x2e0
    e6f4:	ldp	x20, x19, [sp, #96]
    e6f8:	ldp	x22, x21, [sp, #80]
    e6fc:	ldp	x24, x23, [sp, #64]
    e700:	ldp	x26, x25, [sp, #48]
    e704:	ldp	x28, x27, [sp, #32]
    e708:	ldp	x29, x30, [sp, #16]
    e70c:	ldr	d8, [sp], #112
    e710:	ret
    e714:	ldp	x20, x21, [x29, #-32]
    e718:	cmp	x20, x21
    e71c:	b.eq	e75c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xae0>  // b.none
    e720:	mov	x0, x19
    e724:	mov	x1, x20
    e728:	bl	b8e0 <_ZN4llvm8TGParser13ApplyLetStackERNS_12RecordsEntryE>
    e72c:	tbnz	w0, #0, e6a0 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa24>
    e730:	ldr	q0, [x20]
    e734:	add	x1, sp, #0x40
    e738:	mov	x0, x19
    e73c:	stp	xzr, xzr, [x20]
    e740:	str	q0, [sp, #64]
    e744:	bl	26ec <_ZN4llvm8TGParser8addEntryENS_12RecordsEntryE>
    e748:	add	x0, sp, #0x40
    e74c:	bl	0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e750:	add	x20, x20, #0x10
    e754:	cmp	x20, x21
    e758:	b.ne	e720 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xaa4>  // b.any
    e75c:	ldr	w8, [x19, #40]
    e760:	cmp	w8, #0xd
    e764:	b.ne	e788 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xb0c>  // b.any
    e768:	ldp	x8, x9, [x19, #8]
    e76c:	mov	x0, x19
    e770:	cmp	x8, x9
    e774:	cset	w1, eq  // eq = none
    e778:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e77c:	mov	w20, wzr
    e780:	str	w0, [x19, #40]
    e784:	b	e6a4 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa28>
    e788:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e78c:	add	x8, x8, #0x0
    e790:	mov	w9, #0x103                 	// #259
    e794:	mov	x0, x19
    e798:	stp	x8, xzr, [x29, #-256]
    e79c:	sturh	w9, [x29, #-240]
    e7a0:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e7a4:	str	x0, [sp, #80]
    e7a8:	b	e594 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0x918>
    e7ac:	mov	w20, wzr
    e7b0:	ldur	x0, [x29, #-232]
    e7b4:	add	x8, x23, #0x28
    e7b8:	cmp	x0, x8
    e7bc:	b.ne	e698 <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa1c>  // b.any
    e7c0:	b	e69c <_ZN4llvm8TGParser9ParseDefmEPNS_10MultiClassE+0xa20>
    e7c4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7c8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7cc:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7d0:	add	x0, x0, #0x0
    e7d4:	add	x1, x1, #0x0
    e7d8:	add	x3, x3, #0x0
    e7dc:	mov	w2, #0x43                  	// #67
    e7e0:	bl	0 <__assert_fail>
    e7e4:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7e8:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7ec:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e7f0:	add	x0, x0, #0x0
    e7f4:	add	x1, x1, #0x0
    e7f8:	add	x3, x3, #0x0
    e7fc:	mov	w2, #0x69                  	// #105
    e800:	bl	0 <__assert_fail>
    e804:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e808:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e80c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e810:	add	x0, x0, #0x0
    e814:	add	x1, x1, #0x0
    e818:	add	x3, x3, #0x0
    e81c:	mov	w2, #0x108                 	// #264
    e820:	bl	0 <__assert_fail>
    e824:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e828:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e82c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e830:	add	x0, x0, #0x0
    e834:	add	x1, x1, #0x0
    e838:	add	x3, x3, #0x0
    e83c:	mov	w2, #0xce2                 	// #3298
    e840:	bl	0 <__assert_fail>
    e844:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e848:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e84c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e850:	add	x0, x0, #0x0
    e854:	add	x1, x1, #0x0
    e858:	add	x3, x3, #0x0
    e85c:	mov	w2, #0xcbd                 	// #3261
    e860:	bl	0 <__assert_fail>
    e864:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e868:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e86c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e870:	add	x0, x0, #0x0
    e874:	add	x1, x1, #0x0
    e878:	add	x3, x3, #0x0
    e87c:	mov	w2, #0xb8                  	// #184
    e880:	bl	0 <__assert_fail>
    e884:	adrp	x0, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e888:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e88c:	adrp	x3, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e890:	add	x0, x0, #0x0
    e894:	add	x1, x1, #0x0
    e898:	add	x3, x3, #0x0
    e89c:	mov	w2, #0x71                  	// #113
    e8a0:	bl	0 <__assert_fail>

000000000000e8a4 <_ZN4llvm8TGParser9ParseFileEv>:
    e8a4:	sub	sp, sp, #0x50
    e8a8:	stp	x29, x30, [sp, #32]
    e8ac:	str	x21, [sp, #48]
    e8b0:	stp	x20, x19, [sp, #64]
    e8b4:	add	x29, sp, #0x20
    e8b8:	ldp	x8, x9, [x0, #8]
    e8bc:	mov	x19, x0
    e8c0:	cmp	x8, x9
    e8c4:	cset	w1, eq  // eq = none
    e8c8:	bl	0 <_ZN4llvm7TGLexer8LexTokenEb>
    e8cc:	mov	x21, #0x47200000            	// #1193279488
    e8d0:	mov	w20, #0x1                   	// #1
    e8d4:	movk	x21, #0x1d, lsl #32
    e8d8:	str	w0, [x19, #40]
    e8dc:	cmp	w0, #0x24
    e8e0:	b.hi	e928 <_ZN4llvm8TGParser9ParseFileEv+0x84>  // b.pmore
    e8e4:	mov	w8, w0
    e8e8:	lsl	x9, x20, x8
    e8ec:	tst	x9, x21
    e8f0:	b.eq	e91c <_ZN4llvm8TGParser9ParseFileEv+0x78>  // b.none
    e8f4:	mov	x0, x19
    e8f8:	mov	x1, xzr
    e8fc:	bl	c3e0 <_ZN4llvm8TGParser11ParseObjectEPNS_10MultiClassE>
    e900:	tbnz	w0, #0, e914 <_ZN4llvm8TGParser9ParseFileEv+0x70>
    e904:	ldr	w0, [x19, #40]
    e908:	cmp	w0, #0x24
    e90c:	b.ls	e8e4 <_ZN4llvm8TGParser9ParseFileEv+0x40>  // b.plast
    e910:	b	e928 <_ZN4llvm8TGParser9ParseFileEv+0x84>
    e914:	mov	w19, #0x1                   	// #1
    e918:	b	e95c <_ZN4llvm8TGParser9ParseFileEv+0xb8>
    e91c:	cbnz	x8, e928 <_ZN4llvm8TGParser9ParseFileEv+0x84>
    e920:	mov	w19, wzr
    e924:	b	e95c <_ZN4llvm8TGParser9ParseFileEv+0xb8>
    e928:	adrp	x8, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e92c:	add	x8, x8, #0x0
    e930:	mov	w9, #0x103                 	// #259
    e934:	mov	x0, x19
    e938:	stp	x8, xzr, [sp, #8]
    e93c:	strh	w9, [sp, #24]
    e940:	bl	0 <_ZNK4llvm7TGLexer6getLocEv>
    e944:	str	x0, [x29, #24]
    e948:	add	x0, x29, #0x18
    e94c:	add	x2, sp, #0x8
    e950:	mov	w1, #0x1                   	// #1
    e954:	mov	w19, #0x1                   	// #1
    e958:	bl	0 <_ZN4llvm10PrintErrorENS_8ArrayRefINS_5SMLocEEERKNS_5TwineE>
    e95c:	mov	w0, w19
    e960:	ldp	x20, x19, [sp, #64]
    e964:	ldr	x21, [sp, #48]
    e968:	ldp	x29, x30, [sp, #32]
    e96c:	add	sp, sp, #0x50
    e970:	ret

000000000000e974 <_ZNK4llvm12RecordsEntry4dumpEv>:
    e974:	stp	x29, x30, [sp, #-32]!
    e978:	str	x19, [sp, #16]
    e97c:	mov	x29, sp
    e980:	mov	x19, x0
    e984:	ldr	x0, [x0, #8]
    e988:	cbz	x0, e990 <_ZNK4llvm12RecordsEntry4dumpEv+0x1c>
    e98c:	bl	e9b0 <_ZNK4llvm11ForeachLoop4dumpEv>
    e990:	ldr	x0, [x19]
    e994:	cbz	x0, e9a4 <_ZNK4llvm12RecordsEntry4dumpEv+0x30>
    e998:	ldr	x19, [sp, #16]
    e99c:	ldp	x29, x30, [sp], #32
    e9a0:	b	0 <_ZNK4llvm6Record4dumpEv>
    e9a4:	ldr	x19, [sp, #16]
    e9a8:	ldp	x29, x30, [sp], #32
    e9ac:	ret

000000000000e9b0 <_ZNK4llvm11ForeachLoop4dumpEv>:
    e9b0:	sub	sp, sp, #0x60
    e9b4:	stp	x29, x30, [sp, #64]
    e9b8:	stp	x20, x19, [sp, #80]
    e9bc:	add	x29, sp, #0x40
    e9c0:	mov	x19, x0
    e9c4:	bl	0 <_ZN4llvm4errsEv>
    e9c8:	ldp	x9, x8, [x0, #16]
    e9cc:	mov	x20, x0
    e9d0:	sub	x9, x9, x8
    e9d4:	cmp	x9, #0x7
    e9d8:	b.hi	e9f8 <_ZNK4llvm11ForeachLoop4dumpEv+0x48>  // b.pmore
    e9dc:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    e9e0:	add	x1, x1, #0x0
    e9e4:	mov	w2, #0x8                   	// #8
    e9e8:	mov	x0, x20
    e9ec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    e9f0:	mov	x20, x0
    e9f4:	b	ea18 <_ZNK4llvm11ForeachLoop4dumpEv+0x68>
    e9f8:	mov	x9, #0x6f66                	// #28518
    e9fc:	movk	x9, #0x6572, lsl #16
    ea00:	movk	x9, #0x6361, lsl #32
    ea04:	movk	x9, #0x2068, lsl #48
    ea08:	str	x9, [x8]
    ea0c:	ldr	x8, [x20, #24]
    ea10:	add	x8, x8, #0x8
    ea14:	str	x8, [x20, #24]
    ea18:	ldr	x0, [x19, #8]
    ea1c:	ldr	x8, [x0]
    ea20:	ldr	x9, [x8, #40]
    ea24:	add	x8, sp, #0x20
    ea28:	blr	x9
    ea2c:	ldp	x1, x2, [sp, #32]
    ea30:	mov	x0, x20
    ea34:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ea38:	ldp	x9, x8, [x0, #16]
    ea3c:	mov	x20, x0
    ea40:	sub	x9, x9, x8
    ea44:	cmp	x9, #0x2
    ea48:	b.hi	ea68 <_ZNK4llvm11ForeachLoop4dumpEv+0xb8>  // b.pmore
    ea4c:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    ea50:	add	x1, x1, #0x0
    ea54:	mov	w2, #0x3                   	// #3
    ea58:	mov	x0, x20
    ea5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ea60:	mov	x20, x0
    ea64:	b	ea84 <_ZNK4llvm11ForeachLoop4dumpEv+0xd4>
    ea68:	mov	w9, #0x20                  	// #32
    ea6c:	mov	w10, #0x3d20                	// #15648
    ea70:	strb	w9, [x8, #2]
    ea74:	strh	w10, [x8]
    ea78:	ldr	x8, [x20, #24]
    ea7c:	add	x8, x8, #0x3
    ea80:	str	x8, [x20, #24]
    ea84:	ldr	x0, [x19, #16]
    ea88:	ldr	x8, [x0]
    ea8c:	ldr	x9, [x8, #40]
    ea90:	mov	x8, sp
    ea94:	blr	x9
    ea98:	ldp	x1, x2, [sp]
    ea9c:	mov	x0, x20
    eaa0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    eaa4:	ldp	x9, x8, [x0, #16]
    eaa8:	sub	x9, x9, x8
    eaac:	cmp	x9, #0x5
    eab0:	b.hi	eac8 <_ZNK4llvm11ForeachLoop4dumpEv+0x118>  // b.pmore
    eab4:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    eab8:	add	x1, x1, #0x0
    eabc:	mov	w2, #0x6                   	// #6
    eac0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    eac4:	b	eae8 <_ZNK4llvm11ForeachLoop4dumpEv+0x138>
    eac8:	mov	w10, #0x6920                	// #26912
    eacc:	mov	w9, #0xa7b                 	// #2683
    ead0:	movk	w10, #0x206e, lsl #16
    ead4:	strh	w9, [x8, #4]
    ead8:	str	w10, [x8]
    eadc:	ldr	x8, [x0, #24]
    eae0:	add	x8, x8, #0x6
    eae4:	str	x8, [x0, #24]
    eae8:	ldr	x0, [sp]
    eaec:	mov	x8, sp
    eaf0:	add	x8, x8, #0x10
    eaf4:	cmp	x0, x8
    eaf8:	b.eq	eb00 <_ZNK4llvm11ForeachLoop4dumpEv+0x150>  // b.none
    eafc:	bl	0 <_ZdlPv>
    eb00:	ldr	x0, [sp, #32]
    eb04:	add	x8, sp, #0x20
    eb08:	add	x8, x8, #0x10
    eb0c:	cmp	x0, x8
    eb10:	b.eq	eb18 <_ZNK4llvm11ForeachLoop4dumpEv+0x168>  // b.none
    eb14:	bl	0 <_ZdlPv>
    eb18:	ldr	x20, [x19, #24]
    eb1c:	ldr	x19, [x19, #32]
    eb20:	cmp	x20, x19
    eb24:	b.eq	eb3c <_ZNK4llvm11ForeachLoop4dumpEv+0x18c>  // b.none
    eb28:	mov	x0, x20
    eb2c:	bl	e974 <_ZNK4llvm12RecordsEntry4dumpEv>
    eb30:	add	x20, x20, #0x10
    eb34:	cmp	x19, x20
    eb38:	b.ne	eb28 <_ZNK4llvm11ForeachLoop4dumpEv+0x178>  // b.any
    eb3c:	bl	0 <_ZN4llvm4errsEv>
    eb40:	ldp	x9, x8, [x0, #16]
    eb44:	sub	x9, x9, x8
    eb48:	cmp	x9, #0x1
    eb4c:	b.hi	eb70 <_ZNK4llvm11ForeachLoop4dumpEv+0x1c0>  // b.pmore
    eb50:	adrp	x1, 0 <_ZNK4llvm22SubMultiClassReference4dumpEv>
    eb54:	add	x1, x1, #0x0
    eb58:	mov	w2, #0x2                   	// #2
    eb5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    eb60:	ldp	x20, x19, [sp, #80]
    eb64:	ldp	x29, x30, [sp, #64]
    eb68:	add	sp, sp, #0x60
    eb6c:	ret
    eb70:	mov	w9, #0xa7d                 	// #2685
    eb74:	strh	w9, [x8]
    eb78:	ldr	x8, [x0, #24]
    eb7c:	add	x8, x8, #0x2
    eb80:	str	x8, [x0, #24]
    eb84:	ldp	x20, x19, [sp, #80]
    eb88:	ldp	x29, x30, [sp, #64]
    eb8c:	add	sp, sp, #0x60
    eb90:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZNK4llvm8ArrayRefIPNS_4InitEEixEm:

0000000000000000 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #8]
   c:	cmp	x8, x1
  10:	b.ls	24 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm+0x24>  // b.plast
  14:	ldr	x8, [x0]
  18:	add	x0, x8, x1, lsl #3
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  28:	adrp	x1, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  2c:	adrp	x3, 0 <_ZNK4llvm8ArrayRefIPNS_4InitEEixEm>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xfa                  	// #250
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record11removeValueEPNS_4InitE:

0000000000000000 <_ZN4llvm6Record11removeValueEPNS_4InitE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #80]
  10:	cbz	w8, 48 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x48>
  14:	ldr	x9, [x0, #72]
  18:	mov	x19, x0
  1c:	mov	w10, wzr
  20:	mov	w11, #0x18                  	// #24
  24:	cmp	w8, w10
  28:	b.eq	a4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xa4>  // b.none
  2c:	umaddl	x0, w10, w11, x9
  30:	ldr	x12, [x0]
  34:	cmp	x12, x1
  38:	b.eq	60 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x60>  // b.none
  3c:	add	w10, w10, #0x1
  40:	cmp	w8, w10
  44:	b.ne	24 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x24>  // b.any
  48:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  4c:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x614                 	// #1556
  5c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  60:	cmp	w8, w10
  64:	b.ls	c4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xc4>  // b.plast
  68:	mov	w10, #0x18                  	// #24
  6c:	madd	x9, x8, x10, x9
  70:	add	x1, x0, #0x18
  74:	subs	x2, x9, x1
  78:	b.eq	84 <_ZN4llvm6Record11removeValueEPNS_4InitE+0x84>  // b.none
  7c:	bl	0 <memmove>
  80:	ldr	w8, [x19, #80]
  84:	ldr	w9, [x19, #84]
  88:	sub	x8, x8, #0x1
  8c:	cmp	x8, x9
  90:	b.hi	e4 <_ZN4llvm6Record11removeValueEPNS_4InitE+0xe4>  // b.pmore
  94:	str	w8, [x19, #80]
  98:	ldr	x19, [sp, #16]
  9c:	ldp	x29, x30, [sp], #32
  a0:	ret
  a4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  a8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ac:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x95                  	// #149
  c0:	bl	0 <__assert_fail>
  c4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  c8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  cc:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  d0:	add	x0, x0, #0x0
  d4:	add	x1, x1, #0x0
  d8:	add	x3, x3, #0x0
  dc:	mov	w2, #0x1b7                 	// #439
  e0:	bl	0 <__assert_fail>
  e4:	adrp	x0, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  e8:	adrp	x1, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  ec:	adrp	x3, 0 <_ZN4llvm6Record11removeValueEPNS_4InitE>
  f0:	add	x0, x0, #0x0
  f4:	add	x1, x1, #0x0
  f8:	add	x3, x3, #0x0
  fc:	mov	w2, #0x43                  	// #67
 100:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE:

0000000000000000 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #112]
  14:	cbnz	x8, cc <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xcc>
  18:	ldr	w8, [x0, #96]
  1c:	ldr	x9, [x0, #88]
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x19, x0
  2c:	mov	x22, x1
  30:	cbz	w8, 54 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x54>
  34:	add	x10, x8, x8, lsl #1
  38:	lsl	x10, x10, #3
  3c:	mov	x11, x9
  40:	ldr	x12, [x11], #24
  44:	cmp	x12, x22
  48:	b.eq	ac <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xac>  // b.none
  4c:	subs	x10, x10, #0x18
  50:	b.ne	40 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x40>  // b.any
  54:	ldr	w10, [x19, #100]
  58:	cmp	w8, w10
  5c:	b.cs	94 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x94>  // b.hs, b.nlast
  60:	mov	w10, #0x18                  	// #24
  64:	madd	x8, x8, x10, x9
  68:	stp	x22, x21, [x8]
  6c:	str	x20, [x8, #16]
  70:	ldp	w8, w9, [x19, #96]
  74:	cmp	w8, w9
  78:	b.cs	ec <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0xec>  // b.hs, b.nlast
  7c:	add	w8, w8, #0x1
  80:	str	w8, [x19, #96]
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	ret
  94:	add	x0, x19, #0x58
  98:	mov	x1, xzr
  9c:	bl	0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  a0:	ldr	w8, [x19, #96]
  a4:	ldr	x9, [x19, #88]
  a8:	b	60 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE+0x60>
  ac:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  b8:	add	x0, x0, #0x0
  bc:	add	x1, x1, #0x0
  c0:	add	x3, x3, #0x0
  c4:	mov	w2, #0x630                 	// #1584
  c8:	bl	0 <__assert_fail>
  cc:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  d8:	add	x0, x0, #0x0
  dc:	add	x1, x1, #0x0
  e0:	add	x3, x3, #0x0
  e4:	mov	w2, #0x62f                 	// #1583
  e8:	bl	0 <__assert_fail>
  ec:	adrp	x0, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f0:	adrp	x1, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f4:	adrp	x3, 0 <_ZN4llvm6Record13addSuperClassEPS0_NS_7SMRangeE>
  f8:	add	x0, x0, #0x0
  fc:	add	x1, x1, #0x0
 100:	add	x3, x3, #0x0
 104:	mov	w2, #0x43                  	// #67
 108:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	6c <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x6c>  // b.any
  2c:	cbz	x21, 38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	str	xzr, [x19]
  44:	ldp	x20, x19, [sp, #48]
  48:	ldp	x22, x21, [sp, #32]
  4c:	ldr	x23, [sp, #16]
  50:	ldp	x29, x30, [sp], #64
  54:	ret
  58:	mov	x0, x22
  5c:	bl	0 <_ZdlPv>
  60:	str	xzr, [x21], #16
  64:	cmp	x23, x21
  68:	b.eq	d0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xd0>  // b.none
  6c:	add	x0, x21, #0x8
  70:	bl	0 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev>
  74:	ldr	x22, [x21]
  78:	cbz	x22, 60 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x60>
  7c:	ldr	x0, [x22, #88]
  80:	add	x8, x22, #0x68
  84:	cmp	x0, x8
  88:	b.eq	90 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x90>  // b.none
  8c:	bl	0 <free>
  90:	ldr	x0, [x22, #72]
  94:	add	x8, x22, #0x58
  98:	cmp	x0, x8
  9c:	b.eq	a4 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xa4>  // b.none
  a0:	bl	0 <free>
  a4:	ldr	x0, [x22, #56]
  a8:	add	x8, x22, #0x48
  ac:	cmp	x0, x8
  b0:	b.eq	b8 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0xb8>  // b.none
  b4:	bl	0 <free>
  b8:	ldr	x0, [x22, #8]
  bc:	add	x8, x22, #0x18
  c0:	cmp	x0, x8
  c4:	b.eq	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>  // b.none
  c8:	bl	0 <free>
  cc:	b	58 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x58>
  d0:	ldr	x21, [x20, #24]
  d4:	cbnz	x21, 30 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x30>
  d8:	b	38 <_ZNSt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS1_EED2Ev+0x38>

Disassembly of section .text._ZN4llvm12RecordsEntryD2Ev:

0000000000000000 <_ZN4llvm12RecordsEntryD2Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZN4llvm12RecordsEntryD2Ev+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZN4llvm12RecordsEntryD2Ev+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZN4llvm12RecordsEntryD2Ev+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZN4llvm12RecordsEntryD2Ev+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZN4llvm12RecordsEntryD2Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm12RecordsEntryD2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm12RecordsEntryD2Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZN4llvm12RecordsEntryD2Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZN4llvm12RecordsEntryD2Ev+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZN4llvm12RecordsEntryD2Ev>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZN4llvm12RecordsEntryD2Ev+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZN4llvm12RecordsEntryD2Ev+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZN4llvm12RecordsEntryD2Ev+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZN4llvm12RecordsEntryD2Ev+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZN4llvm12RecordsEntryD2Ev+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZN4llvm12RecordsEntryD2Ev+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZN4llvm12RecordsEntryD2Ev+0x30>
 13c:	b	38 <_ZN4llvm12RecordsEntryD2Ev+0x38>

Disassembly of section .text._ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, bc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xbc>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	dc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xdc>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	add	x0, x0, #0x30
  30:	str	q0, [sp]
  34:	str	xzr, [x1]
  38:	mov	x1, sp
  3c:	str	x8, [sp, #16]
  40:	bl	0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  44:	ldr	x20, [sp, #16]
  48:	mov	x19, x1
  4c:	cbz	x20, a8 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa8>
  50:	ldr	x0, [x20, #88]
  54:	add	x8, x20, #0x68
  58:	cmp	x0, x8
  5c:	b.eq	64 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x64>  // b.none
  60:	bl	0 <free>
  64:	ldr	x0, [x20, #72]
  68:	add	x8, x20, #0x58
  6c:	cmp	x0, x8
  70:	b.eq	78 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x78>  // b.none
  74:	bl	0 <free>
  78:	ldr	x0, [x20, #56]
  7c:	add	x8, x20, #0x48
  80:	cmp	x0, x8
  84:	b.eq	8c <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x8c>  // b.none
  88:	bl	0 <free>
  8c:	ldr	x0, [x20, #8]
  90:	add	x8, x20, #0x18
  94:	cmp	x0, x8
  98:	b.eq	a0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa0>  // b.none
  9c:	bl	0 <free>
  a0:	mov	x0, x20
  a4:	bl	0 <_ZdlPv>
  a8:	tbz	w19, #0, fc <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xfc>
  ac:	ldp	x20, x19, [sp, #48]
  b0:	ldp	x29, x30, [sp, #32]
  b4:	add	sp, sp, #0x40
  b8:	ret
  bc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c8:	add	x0, x0, #0x0
  cc:	add	x1, x1, #0x0
  d0:	add	x3, x3, #0x0
  d4:	mov	w2, #0x69                  	// #105
  d8:	bl	0 <__assert_fail>
  dc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x108                 	// #264
  f8:	bl	0 <__assert_fail>
  fc:	adrp	x0, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x1, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	adrp	x3, 0 <_ZN4llvm12RecordKeeper6addDefESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 108:	add	x0, x0, #0x0
 10c:	add	x1, x1, #0x0
 110:	add	x3, x3, #0x0
 114:	mov	w2, #0x6c7                 	// #1735
 118:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixERSF_+0xec>

Disassembly of section .text._ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE:

0000000000000000 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x2
  1c:	mov	x20, x1
  20:	mov	x21, x0
  24:	ldr	x24, [x21, #16]
  28:	add	x22, x21, #0x8
  2c:	cbz	x24, bc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xbc>
  30:	mov	x23, x22
  34:	b	48 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x48>
  38:	add	x8, x24, #0x10
  3c:	mov	x23, x24
  40:	ldr	x24, [x8]
  44:	cbz	x24, 84 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x84>
  48:	ldr	x25, [x24, #40]
  4c:	cmp	x19, x25
  50:	csel	x2, x19, x25, cc  // cc = lo, ul, last
  54:	cbz	x2, 70 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x70>
  58:	ldr	x0, [x24, #32]
  5c:	mov	x1, x20
  60:	bl	0 <memcmp>
  64:	cbz	w0, 70 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x70>
  68:	tbz	w0, #31, 38 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x38>
  6c:	b	78 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x78>
  70:	cmp	x25, x19
  74:	b.cs	38 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x38>  // b.hs, b.nlast
  78:	add	x8, x24, #0x18
  7c:	ldr	x24, [x8]
  80:	cbnz	x24, 48 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x48>
  84:	cmp	x23, x22
  88:	b.eq	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>  // b.none
  8c:	ldr	x24, [x23, #40]
  90:	cmp	x24, x19
  94:	csel	x2, x24, x19, cc  // cc = lo, ul, last
  98:	cbz	x2, b4 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xb4>
  9c:	ldr	x1, [x23, #32]
  a0:	mov	x0, x20
  a4:	bl	0 <memcmp>
  a8:	cbz	w0, b4 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xb4>
  ac:	tbnz	w0, #31, bc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xbc>
  b0:	b	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>
  b4:	cmp	x19, x24
  b8:	b.cs	c0 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xc0>  // b.hs, b.nlast
  bc:	mov	x23, x22
  c0:	cmp	x23, x22
  c4:	b.ne	d8 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xd8>  // b.any
  c8:	ldr	x21, [x21, #48]
  cc:	cbnz	x21, 24 <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0x24>
  d0:	mov	x0, xzr
  d4:	b	dc <_ZNK4llvm15TGLocalVarScope6getVarENS_9StringRefE+0xdc>
  d8:	ldr	x0, [x23, #64]
  dc:	ldp	x20, x19, [sp, #64]
  e0:	ldp	x22, x21, [sp, #48]
  e4:	ldp	x24, x23, [sp, #32]
  e8:	ldr	x25, [sp, #16]
  ec:	ldp	x29, x30, [sp], #80
  f0:	ret

Disassembly of section .text._ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE:

0000000000000000 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x24, [x0, #64]
  1c:	mov	x19, x2
  20:	mov	x20, x1
  24:	mov	x21, x0
  28:	add	x22, x0, #0x38
  2c:	cbz	x24, bc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xbc>
  30:	mov	x23, x22
  34:	b	48 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x48>
  38:	add	x8, x24, #0x10
  3c:	mov	x23, x24
  40:	ldr	x24, [x8]
  44:	cbz	x24, 84 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x84>
  48:	ldr	x25, [x24, #40]
  4c:	cmp	x19, x25
  50:	csel	x2, x19, x25, cc  // cc = lo, ul, last
  54:	cbz	x2, 70 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x70>
  58:	ldr	x0, [x24, #32]
  5c:	mov	x1, x20
  60:	bl	0 <memcmp>
  64:	cbz	w0, 70 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x70>
  68:	tbz	w0, #31, 38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>
  6c:	b	78 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x78>
  70:	cmp	x25, x19
  74:	b.cs	38 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x38>  // b.hs, b.nlast
  78:	add	x8, x24, #0x18
  7c:	ldr	x24, [x8]
  80:	cbnz	x24, 48 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x48>
  84:	cmp	x23, x22
  88:	b.eq	c0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xc0>  // b.none
  8c:	ldr	x24, [x23, #40]
  90:	cmp	x24, x19
  94:	csel	x2, x24, x19, cc  // cc = lo, ul, last
  98:	cbz	x2, b4 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb4>
  9c:	ldr	x1, [x23, #32]
  a0:	mov	x0, x20
  a4:	bl	0 <memcmp>
  a8:	cbz	w0, b4 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xb4>
  ac:	tbnz	w0, #31, bc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xbc>
  b0:	b	c0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xc0>
  b4:	cmp	x19, x24
  b8:	b.cs	c0 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xc0>  // b.hs, b.nlast
  bc:	mov	x23, x22
  c0:	cmp	x23, x22
  c4:	b.eq	e8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe8>  // b.none
  c8:	ldr	x0, [x23, #64]
  cc:	cbz	x0, e8 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xe8>
  d0:	ldp	x20, x19, [sp, #64]
  d4:	ldp	x22, x21, [sp, #48]
  d8:	ldp	x24, x23, [sp, #32]
  dc:	ldr	x25, [sp, #16]
  e0:	ldp	x29, x30, [sp], #80
  e4:	b	0 <_ZN4llvm6Record10getDefInitEv>
  e8:	ldr	x23, [x21, #136]
  ec:	add	x21, x21, #0x80
  f0:	cbz	x23, 180 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x180>
  f4:	mov	x22, x21
  f8:	b	10c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x10c>
  fc:	add	x8, x23, #0x10
 100:	mov	x22, x23
 104:	ldr	x23, [x8]
 108:	cbz	x23, 148 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x148>
 10c:	ldr	x24, [x23, #40]
 110:	cmp	x19, x24
 114:	csel	x2, x19, x24, cc  // cc = lo, ul, last
 118:	cbz	x2, 134 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x134>
 11c:	ldr	x0, [x23, #32]
 120:	mov	x1, x20
 124:	bl	0 <memcmp>
 128:	cbz	w0, 134 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x134>
 12c:	tbz	w0, #31, fc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xfc>
 130:	b	13c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x13c>
 134:	cmp	x24, x19
 138:	b.cs	fc <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0xfc>  // b.hs, b.nlast
 13c:	add	x8, x23, #0x18
 140:	ldr	x23, [x8]
 144:	cbnz	x23, 10c <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x10c>
 148:	cmp	x22, x21
 14c:	b.eq	184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>  // b.none
 150:	ldr	x23, [x22, #40]
 154:	cmp	x23, x19
 158:	csel	x2, x23, x19, cc  // cc = lo, ul, last
 15c:	cbz	x2, 178 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x178>
 160:	ldr	x1, [x22, #32]
 164:	mov	x0, x20
 168:	bl	0 <memcmp>
 16c:	cbz	w0, 178 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x178>
 170:	tbnz	w0, #31, 180 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x180>
 174:	b	184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>
 178:	cmp	x19, x23
 17c:	b.cs	184 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x184>  // b.hs, b.nlast
 180:	mov	x22, x21
 184:	cmp	x22, x21
 188:	b.eq	194 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x194>  // b.none
 18c:	ldr	x0, [x22, #64]
 190:	b	198 <_ZNK4llvm12RecordKeeper9getGlobalENS_9StringRefE+0x198>
 194:	mov	x0, xzr
 198:	ldp	x20, x19, [sp, #64]
 19c:	ldp	x22, x21, [sp, #48]
 1a0:	ldp	x24, x23, [sp, #32]
 1a4:	ldr	x25, [sp, #16]
 1a8:	ldp	x29, x30, [sp], #80
 1ac:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEj:

0000000000000000 <_ZN4llvm11raw_ostreamlsEj>:
   0:	mov	w1, w1
   4:	b	0 <_ZN4llvm11raw_ostreamlsEm>

Disassembly of section .text._ZN4llvm8TGParser14PushLocalScopeEv:

0000000000000000 <_ZN4llvm8TGParser14PushLocalScopeEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	mov	w0, #0x38                  	// #56
  18:	bl	0 <_Znwm>
  1c:	ldr	x8, [x19, #336]
  20:	mov	x9, x0
  24:	str	xzr, [x19, #336]
  28:	str	wzr, [x9, #8]!
  2c:	mov	x21, x0
  30:	stp	xzr, x9, [x0, #16]
  34:	stp	x9, xzr, [x0, #32]
  38:	str	x8, [x0, #48]
  3c:	add	x0, x29, #0x18
  40:	str	xzr, [x29, #24]
  44:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  48:	str	xzr, [x29, #24]
  4c:	ldr	x20, [x19, #336]
  50:	str	x21, [x19, #336]
  54:	cbz	x20, 74 <_ZN4llvm8TGParser14PushLocalScopeEv+0x74>
  58:	add	x0, x20, #0x30
  5c:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  60:	ldr	x1, [x20, #16]
  64:	mov	x0, x20
  68:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  6c:	mov	x0, x20
  70:	bl	0 <_ZdlPv>
  74:	add	x0, x29, #0x18
  78:	bl	0 <_ZN4llvm8TGParser14PushLocalScopeEv>
  7c:	ldr	x0, [x19, #336]
  80:	ldp	x20, x19, [sp, #32]
  84:	ldr	x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret

Disassembly of section .text._ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE:

0000000000000000 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #32]
   8:	str	x25, [sp, #48]
   c:	stp	x24, x23, [sp, #64]
  10:	stp	x22, x21, [sp, #80]
  14:	stp	x20, x19, [sp, #96]
  18:	add	x29, sp, #0x20
  1c:	mov	x21, x1
  20:	mov	x22, x0
  24:	stp	x1, x2, [sp, #8]
  28:	add	x0, x0, #0x78
  2c:	add	x1, sp, #0x8
  30:	mov	x20, x2
  34:	str	x3, [sp, #24]
  38:	bl	0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
  3c:	ldr	x24, [x22, #64]
  40:	mov	x19, x1
  44:	add	x22, x22, #0x38
  48:	cbz	x24, d8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd8>
  4c:	mov	x23, x22
  50:	b	64 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x64>
  54:	add	x8, x24, #0x10
  58:	mov	x23, x24
  5c:	ldr	x24, [x8]
  60:	cbz	x24, a0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xa0>
  64:	ldr	x25, [x24, #40]
  68:	cmp	x20, x25
  6c:	csel	x2, x20, x25, cc  // cc = lo, ul, last
  70:	cbz	x2, 8c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x8c>
  74:	ldr	x0, [x24, #32]
  78:	mov	x1, x21
  7c:	bl	0 <memcmp>
  80:	cbz	w0, 8c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x8c>
  84:	tbz	w0, #31, 54 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x54>
  88:	b	94 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x94>
  8c:	cmp	x25, x20
  90:	b.cs	54 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x54>  // b.hs, b.nlast
  94:	add	x8, x24, #0x18
  98:	ldr	x24, [x8]
  9c:	cbnz	x24, 64 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x64>
  a0:	cmp	x23, x22
  a4:	b.eq	dc <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xdc>  // b.none
  a8:	ldr	x24, [x23, #40]
  ac:	cmp	x24, x20
  b0:	csel	x2, x24, x20, cc  // cc = lo, ul, last
  b4:	cbz	x2, d0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd0>
  b8:	ldr	x1, [x23, #32]
  bc:	mov	x0, x21
  c0:	bl	0 <memcmp>
  c4:	cbz	w0, d0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd0>
  c8:	tbnz	w0, #31, d8 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xd8>
  cc:	b	dc <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xdc>
  d0:	cmp	x20, x24
  d4:	b.cs	dc <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xdc>  // b.hs, b.nlast
  d8:	mov	x23, x22
  dc:	cmp	x23, x22
  e0:	b.eq	ec <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0xec>  // b.none
  e4:	ldr	x8, [x23, #64]
  e8:	cbnz	x8, 12c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x12c>
  ec:	tbz	w19, #0, 10c <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE+0x10c>
  f0:	ldp	x20, x19, [sp, #96]
  f4:	ldp	x22, x21, [sp, #80]
  f8:	ldp	x24, x23, [sp, #64]
  fc:	ldr	x25, [sp, #48]
 100:	ldp	x29, x30, [sp, #32]
 104:	add	sp, sp, #0x70
 108:	ret
 10c:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 110:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 114:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 118:	add	x0, x0, #0x0
 11c:	add	x1, x1, #0x0
 120:	add	x3, x3, #0x0
 124:	mov	w2, #0x6ce                 	// #1742
 128:	bl	0 <__assert_fail>
 12c:	adrp	x0, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 130:	adrp	x1, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 134:	adrp	x3, 0 <_ZN4llvm12RecordKeeper14addExtraGlobalENS_9StringRefEPNS_4InitE>
 138:	add	x0, x0, #0x0
 13c:	add	x1, x1, #0x0
 140:	add	x3, x3, #0x0
 144:	mov	w2, #0x6cd                 	// #1741
 148:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE:

0000000000000000 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x1]
  14:	ldr	x9, [x8]
  18:	cbz	x9, b8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xb8>
  1c:	ldrb	w10, [x9, #8]
  20:	cmp	w10, #0x12
  24:	b.ne	d8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xd8>  // b.any
  28:	ldur	q0, [x9, #24]
  2c:	str	q0, [sp]
  30:	str	xzr, [x1]
  34:	mov	x1, sp
  38:	str	x8, [sp, #16]
  3c:	bl	0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  40:	ldr	x20, [sp, #16]
  44:	mov	x19, x1
  48:	cbz	x20, a4 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	tbz	w19, #0, f8 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE+0xf8>
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x29, x30, [sp, #32]
  b0:	add	sp, sp, #0x40
  b4:	ret
  b8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  bc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c0:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  c4:	add	x0, x0, #0x0
  c8:	add	x1, x1, #0x0
  cc:	add	x3, x3, #0x0
  d0:	mov	w2, #0x69                  	// #105
  d4:	bl	0 <__assert_fail>
  d8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  dc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e0:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  e4:	add	x0, x0, #0x0
  e8:	add	x1, x1, #0x0
  ec:	add	x3, x3, #0x0
  f0:	mov	w2, #0x108                 	// #264
  f4:	bl	0 <__assert_fail>
  f8:	adrp	x0, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
  fc:	adrp	x1, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 100:	adrp	x3, 0 <_ZN4llvm12RecordKeeper8addClassESt10unique_ptrINS_6RecordESt14default_deleteIS2_EE>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x6c0                 	// #1728
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x20, [x0]
  14:	mov	x19, x0
  18:	cbz	x20, a4 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0xa4>
  1c:	ldp	x21, x22, [x20, #128]
  20:	cmp	x21, x22
  24:	b.eq	40 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x40>  // b.none
  28:	mov	x0, x21
  2c:	bl	0 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev>
  30:	add	x21, x21, #0x10
  34:	cmp	x22, x21
  38:	b.ne	28 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x28>  // b.any
  3c:	ldr	x21, [x20, #128]
  40:	cbz	x21, 4c <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x4c>
  44:	mov	x0, x21
  48:	bl	0 <_ZdlPv>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZNSt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS1_EED2Ev+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #32]
  ac:	ldp	x22, x21, [sp, #16]
  b0:	ldp	x29, x30, [sp], #48
  b4:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x28, x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	ldr	x25, [x0, #16]
  24:	mov	x20, x1
  28:	mov	x19, x0
  2c:	add	x23, x0, #0x8
  30:	cbz	x25, e0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xe0>
  34:	str	x19, [sp, #8]
  38:	ldp	x22, x24, [x20]
  3c:	mov	w26, #0x7fffffff            	// #2147483647
  40:	mov	x27, #0xffffffff80000000    	// #-2147483648
  44:	mov	w28, #0x80000000            	// #-2147483648
  48:	mov	x21, x23
  4c:	b	74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x74>
  50:	tbnz	w0, #31, 68 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x68>
  54:	add	x8, x25, #0x10
  58:	mov	x21, x25
  5c:	ldr	x25, [x8]
  60:	cbnz	x25, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x74>
  64:	b	a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xa8>
  68:	add	x8, x25, #0x18
  6c:	ldr	x25, [x8]
  70:	cbz	x25, a8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xa8>
  74:	ldr	x8, [x25, #40]
  78:	subs	x19, x8, x24
  7c:	csel	x2, x24, x8, hi  // hi = pmore
  80:	cbz	x2, 94 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x94>
  84:	ldr	x0, [x25, #32]
  88:	mov	x1, x22
  8c:	bl	0 <memcmp>
  90:	cbnz	w0, 50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x50>
  94:	cmp	x19, x26
  98:	b.gt	54 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x54>
  9c:	cmp	x19, x27
  a0:	csel	w0, w19, w28, gt
  a4:	b	50 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x50>
  a8:	cmp	x21, x23
  ac:	b.eq	e8 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xe8>  // b.none
  b0:	ldr	x8, [x20, #8]
  b4:	ldr	x9, [x21, #40]
  b8:	ldr	x19, [sp, #8]
  bc:	subs	x22, x8, x9
  c0:	csel	x2, x9, x8, hi  // hi = pmore
  c4:	cbz	x2, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x134>
  c8:	ldr	x1, [x21, #32]
  cc:	ldr	x0, [x20]
  d0:	bl	0 <memcmp>
  d4:	cbz	w0, 134 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x134>
  d8:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
  dc:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>
  e0:	mov	x21, x23
  e4:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>
  e8:	ldr	x19, [sp, #8]
  ec:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>
  f0:	add	x2, x2, #0x0
  f4:	sub	x3, x29, #0x8
  f8:	add	x4, sp, #0x10
  fc:	mov	x0, x19
 100:	mov	x1, x21
 104:	stur	x20, [x29, #-8]
 108:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_>
 10c:	mov	x21, x0
 110:	add	x0, x21, #0x40
 114:	ldp	x20, x19, [sp, #112]
 118:	ldp	x22, x21, [sp, #96]
 11c:	ldp	x24, x23, [sp, #80]
 120:	ldp	x26, x25, [sp, #64]
 124:	ldp	x28, x27, [sp, #48]
 128:	ldp	x29, x30, [sp, #32]
 12c:	add	sp, sp, #0x80
 130:	ret
 134:	mov	w8, #0x7fffffff            	// #2147483647
 138:	cmp	x22, x8
 13c:	b.gt	110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x22, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w22, w8, gt
 150:	tbz	w0, #31, 110 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0x110>
 154:	b	ec <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm10MultiClassESt14default_deleteIS8_EESt4lessIS5_ESaISt4pairIKS5_SB_EEEixEOS5_+0xec>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #24]
  10:	mov	x19, x1
  14:	cbz	w8, 60 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x60>
  18:	ldr	x9, [x19]
  1c:	orr	x10, x9, #0x8
  20:	cmn	x10, #0x8
  24:	b.eq	dc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xdc>  // b.none
  28:	ldr	x10, [x0, #8]
  2c:	ubfx	x11, x9, #4, #28
  30:	eor	w12, w11, w9, lsr #9
  34:	sub	w11, w8, #0x1
  38:	and	w13, w12, w11
  3c:	mov	w12, #0x18                  	// #24
  40:	umaddl	x8, w13, w12, x10
  44:	ldr	x15, [x8]
  48:	cmp	x15, x9
  4c:	b.ne	90 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x90>  // b.any
  50:	ldr	x19, [sp, #16]
  54:	mov	x0, x8
  58:	ldp	x29, x30, [sp], #32
  5c:	ret
  60:	mov	x3, xzr
  64:	mov	x1, x19
  68:	mov	x2, x19
  6c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  70:	ldr	x9, [x19]
  74:	mov	x8, x0
  78:	strb	wzr, [x0, #16]
  7c:	stp	x9, xzr, [x0]
  80:	ldr	x19, [sp, #16]
  84:	mov	x0, x8
  88:	ldp	x29, x30, [sp], #32
  8c:	ret
  90:	mov	x14, xzr
  94:	mov	w17, #0x1                   	// #1
  98:	mov	x16, #0xfffffffffffffff0    	// #-16
  9c:	cmn	x15, #0x8
  a0:	b.eq	d0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0xd0>  // b.none
  a4:	cmp	x14, #0x0
  a8:	add	w13, w13, w17
  ac:	ccmp	x15, x16, #0x0, eq  // eq = none
  b0:	and	w13, w13, w11
  b4:	csel	x14, x14, x8, ne  // ne = any
  b8:	umaddl	x8, w13, w12, x10
  bc:	ldr	x15, [x8]
  c0:	add	w17, w17, #0x1
  c4:	cmp	x15, x9
  c8:	b.eq	50 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x50>  // b.none
  cc:	b	9c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x9c>
  d0:	cmp	x14, #0x0
  d4:	csel	x3, x8, x14, eq  // eq = none
  d8:	b	64 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_+0x64>
  dc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E16FindAndConstructERKS3_>
  e8:	add	x0, x0, #0x0
  ec:	add	x1, x1, #0x0
  f0:	add	x3, x3, #0x0
  f4:	mov	w2, #0x252                 	// #594
  f8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0, #16]
  10:	ldr	w1, [x0, #24]
  14:	ldr	x9, [x0]
  18:	mov	x20, x2
  1c:	lsl	w10, w8, #2
  20:	add	w10, w10, #0x4
  24:	add	w11, w1, w1, lsl #1
  28:	mov	x19, x0
  2c:	add	x9, x9, #0x1
  30:	cmp	w10, w11
  34:	str	x9, [x0]
  38:	b.cs	8c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x8c>  // b.hs, b.nlast
  3c:	ldr	w9, [x19, #20]
  40:	mvn	w8, w8
  44:	add	w8, w1, w8
  48:	sub	w8, w8, w9
  4c:	cmp	w8, w1, lsr #3
  50:	b.ls	118 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x118>  // b.plast
  54:	cbz	x3, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  58:	ldr	w8, [x19, #16]
  5c:	add	w8, w8, #0x1
  60:	str	w8, [x19, #16]
  64:	ldr	x8, [x3]
  68:	cmn	x8, #0x8
  6c:	b.eq	7c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x7c>  // b.none
  70:	ldr	w8, [x19, #20]
  74:	sub	w8, w8, #0x1
  78:	str	w8, [x19, #20]
  7c:	ldp	x20, x19, [sp, #16]
  80:	mov	x0, x3
  84:	ldp	x29, x30, [sp], #32
  88:	ret
  8c:	lsl	w1, w1, #1
  90:	mov	x0, x19
  94:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
  98:	ldr	w10, [x19, #24]
  9c:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
  a0:	ldr	x8, [x20]
  a4:	orr	x9, x8, #0x8
  a8:	cmn	x9, #0x8
  ac:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
  b0:	ldr	x9, [x19, #8]
  b4:	ubfx	x11, x8, #4, #28
  b8:	eor	w11, w11, w8, lsr #9
  bc:	sub	w10, w10, #0x1
  c0:	and	w12, w11, w10
  c4:	mov	w11, #0x18                  	// #24
  c8:	umaddl	x3, w12, w11, x9
  cc:	ldr	x14, [x3]
  d0:	cmp	x14, x8
  d4:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
  d8:	mov	x13, xzr
  dc:	mov	w16, #0x1                   	// #1
  e0:	mov	x15, #0xfffffffffffffff0    	// #-16
  e4:	cmn	x14, #0x8
  e8:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
  ec:	cmp	x13, #0x0
  f0:	add	w12, w12, w16
  f4:	ccmp	x14, x15, #0x0, eq  // eq = none
  f8:	and	w12, w12, w10
  fc:	csel	x13, x13, x3, ne  // ne = any
 100:	umaddl	x3, w12, w11, x9
 104:	ldr	x14, [x3]
 108:	add	w16, w16, #0x1
 10c:	cmp	x14, x8
 110:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 114:	b	e4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0xe4>
 118:	mov	x0, x19
 11c:	bl	0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 120:	ldr	w10, [x19, #24]
 124:	cbz	w10, 1ac <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1ac>
 128:	ldr	x8, [x20]
 12c:	orr	x9, x8, #0x8
 130:	cmn	x9, #0x8
 134:	b.eq	1cc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1cc>  // b.none
 138:	ldr	x9, [x19, #8]
 13c:	ubfx	x11, x8, #4, #28
 140:	eor	w11, w11, w8, lsr #9
 144:	sub	w10, w10, #0x1
 148:	and	w12, w11, w10
 14c:	mov	w11, #0x18                  	// #24
 150:	umaddl	x3, w12, w11, x9
 154:	ldr	x14, [x3]
 158:	cmp	x14, x8
 15c:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 160:	mov	x13, xzr
 164:	mov	w16, #0x1                   	// #1
 168:	mov	x15, #0xfffffffffffffff0    	// #-16
 16c:	cmn	x14, #0x8
 170:	b.eq	1a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x1a0>  // b.none
 174:	cmp	x13, #0x0
 178:	add	w12, w12, w16
 17c:	ccmp	x14, x15, #0x0, eq  // eq = none
 180:	and	w12, w12, w10
 184:	csel	x13, x13, x3, ne  // ne = any
 188:	umaddl	x3, w12, w11, x9
 18c:	ldr	x14, [x3]
 190:	add	w16, w16, #0x1
 194:	cmp	x14, x8
 198:	b.eq	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>  // b.none
 19c:	b	16c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x16c>
 1a0:	cmp	x13, #0x0
 1a4:	csel	x3, x3, x13, eq  // eq = none
 1a8:	b	54 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_+0x54>
 1ac:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1b8:	add	x0, x0, #0x0
 1bc:	add	x1, x1, #0x0
 1c0:	add	x3, x3, #0x0
 1c4:	mov	w2, #0x22f                 	// #559
 1c8:	bl	0 <__assert_fail>
 1cc:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d0:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d4:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E20InsertIntoBucketImplIS3_EEPSA_RKS3_RKT_SE_>
 1d8:	add	x0, x0, #0x0
 1dc:	add	x1, x1, #0x0
 1e0:	add	x3, x3, #0x0
 1e4:	mov	w2, #0x252                 	// #594
 1e8:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj:

0000000000000000 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	sub	w8, w1, #0x1
  14:	orr	x8, x8, x8, lsr #1
  18:	orr	x8, x8, x8, lsr #2
  1c:	orr	x8, x8, x8, lsr #4
  20:	orr	x8, x8, x8, lsr #8
  24:	orr	x8, x8, x8, lsr #16
  28:	lsr	x9, x8, #32
  2c:	orr	w8, w9, w8
  30:	add	w9, w8, #0x1
  34:	ldr	w21, [x0, #24]
  38:	ldr	x20, [x0, #8]
  3c:	cmp	w9, #0x40
  40:	mov	w9, #0x40                  	// #64
  44:	csinc	w8, w9, w8, ls  // ls = plast
  48:	mov	w9, #0x18                  	// #24
  4c:	mov	x19, x0
  50:	str	w8, [x0, #24]
  54:	umull	x0, w8, w9
  58:	bl	0 <_Znwm>
  5c:	str	x0, [x19, #8]
  60:	cbz	x20, 8c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x8c>
  64:	mov	w8, #0x18                  	// #24
  68:	madd	x2, x21, x8, x20
  6c:	mov	x0, x19
  70:	mov	x1, x20
  74:	bl	0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
  78:	mov	x0, x20
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldr	x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	b	0 <_ZdlPv>
  8c:	ldr	w8, [x19, #24]
  90:	str	xzr, [x19, #16]
  94:	sub	w9, w8, #0x1
  98:	tst	w8, w9
  9c:	b.ne	128 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x128>  // b.any
  a0:	cbz	w8, 118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>
  a4:	add	x8, x8, x8, lsl #1
  a8:	lsl	x8, x8, #3
  ac:	sub	x10, x8, #0x18
  b0:	cmp	x10, #0x18
  b4:	mov	x9, x0
  b8:	b.cc	104 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x104>  // b.lo, b.ul, b.last
  bc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  c0:	movk	x9, #0xaaab
  c4:	umulh	x9, x10, x9
  c8:	lsr	x9, x9, #4
  cc:	add	x10, x9, #0x1
  d0:	mov	w12, #0x18                  	// #24
  d4:	and	x11, x10, #0x1ffffffffffffffe
  d8:	madd	x9, x11, x12, x0
  dc:	mov	x12, #0xfffffffffffffff8    	// #-8
  e0:	mov	x13, x11
  e4:	mov	x14, x0
  e8:	str	x12, [x14]
  ec:	str	x12, [x14, #24]
  f0:	subs	x13, x13, #0x2
  f4:	add	x14, x14, #0x30
  f8:	b.ne	e8 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0xe8>  // b.any
  fc:	cmp	x10, x11
 100:	b.eq	118 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x118>  // b.none
 104:	add	x8, x0, x8
 108:	mov	x10, #0xfffffffffffffff8    	// #-8
 10c:	str	x10, [x9], #24
 110:	cmp	x8, x9
 114:	b.ne	10c <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj+0x10c>  // b.any
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldr	x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	adrp	x0, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 12c:	adrp	x1, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 130:	adrp	x3, 0 <_ZN4llvm8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS2_EENS_6detail12DenseMapPairIS2_S4_EEE4growEj>
 134:	add	x0, x0, #0x0
 138:	add	x1, x1, #0x0
 13c:	add	x3, x3, #0x0
 140:	mov	w2, #0x15c                 	// #348
 144:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_:

0000000000000000 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #24]
   c:	str	xzr, [x0, #16]
  10:	sub	w9, w8, #0x1
  14:	tst	w8, w9
  18:	b.ne	1b0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x1b0>  // b.any
  1c:	cbz	w8, a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>
  20:	ldr	x9, [x0, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mul	x10, x8, x10
  2c:	sub	x10, x10, #0x18
  30:	cmp	x10, #0x18
  34:	b.cs	40 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x40>  // b.hs, b.nlast
  38:	mov	x10, x9
  3c:	b	88 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x88>
  40:	mov	x11, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  44:	movk	x11, #0xaaab
  48:	umulh	x10, x10, x11
  4c:	lsr	x10, x10, #4
  50:	add	x11, x10, #0x1
  54:	mov	w13, #0x18                  	// #24
  58:	and	x12, x11, #0x1ffffffffffffffe
  5c:	madd	x10, x12, x13, x9
  60:	mov	x13, #0xfffffffffffffff8    	// #-8
  64:	mov	x14, x12
  68:	mov	x15, x9
  6c:	str	x13, [x15]
  70:	str	x13, [x15, #24]
  74:	subs	x14, x14, #0x2
  78:	add	x15, x15, #0x30
  7c:	b.ne	6c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x6c>  // b.any
  80:	cmp	x11, x12
  84:	b.eq	a0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xa0>  // b.none
  88:	mov	w11, #0x18                  	// #24
  8c:	madd	x8, x8, x11, x9
  90:	mov	x9, #0xfffffffffffffff8    	// #-8
  94:	str	x9, [x10], #24
  98:	cmp	x8, x10
  9c:	b.ne	94 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x94>  // b.any
  a0:	cmp	x1, x2
  a4:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  a8:	mov	w8, #0x18                  	// #24
  ac:	mov	x9, #0xfffffffffffffff0    	// #-16
  b0:	b	e0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xe0>
  b4:	cmp	x15, #0x0
  b8:	csel	x11, x13, x15, eq  // eq = none
  bc:	str	x10, [x11]
  c0:	ldur	q0, [x1, #8]
  c4:	stur	q0, [x11, #8]
  c8:	ldr	w10, [x0, #16]
  cc:	add	w10, w10, #0x1
  d0:	str	w10, [x0, #16]
  d4:	add	x1, x1, #0x18
  d8:	cmp	x1, x2
  dc:	b.eq	168 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x168>  // b.none
  e0:	ldr	x10, [x1]
  e4:	orr	x11, x10, #0x8
  e8:	cmn	x11, #0x8
  ec:	b.eq	d4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xd4>  // b.none
  f0:	ldr	w12, [x0, #24]
  f4:	cbz	w12, 160 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x160>
  f8:	cmn	x10, #0x8
  fc:	b.eq	190 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x190>  // b.none
 100:	ldr	x11, [x0, #8]
 104:	ubfx	x13, x10, #4, #28
 108:	eor	w13, w13, w10, lsr #9
 10c:	sub	w12, w12, #0x1
 110:	and	w14, w13, w12
 114:	umaddl	x13, w14, w8, x11
 118:	ldr	x16, [x13]
 11c:	cmp	x16, x10
 120:	b.eq	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>  // b.none
 124:	mov	x15, xzr
 128:	mov	w17, #0x1                   	// #1
 12c:	cmn	x16, #0x8
 130:	b.eq	b4 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xb4>  // b.none
 134:	cmp	x15, #0x0
 138:	add	w14, w14, w17
 13c:	ccmp	x16, x9, #0x0, eq  // eq = none
 140:	and	w14, w14, w12
 144:	csel	x15, x15, x13, ne  // ne = any
 148:	umaddl	x13, w14, w8, x11
 14c:	ldr	x16, [x13]
 150:	add	w17, w17, #0x1
 154:	cmp	x16, x10
 158:	b.ne	12c <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x12c>  // b.any
 15c:	b	170 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0x170>
 160:	mov	x11, xzr
 164:	b	bc <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_+0xbc>
 168:	ldp	x29, x30, [sp], #16
 16c:	ret
 170:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 174:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 178:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x17a                 	// #378
 18c:	bl	0 <__assert_fail>
 190:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 194:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 198:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 19c:	add	x0, x0, #0x0
 1a0:	add	x1, x1, #0x0
 1a4:	add	x3, x3, #0x0
 1a8:	mov	w2, #0x252                 	// #594
 1ac:	bl	0 <__assert_fail>
 1b0:	adrp	x0, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b4:	adrp	x1, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1b8:	adrp	x3, 0 <_ZN4llvm12DenseMapBaseINS_8DenseMapIPNS_4InitENS_11MapResolver11MappedValueENS_12DenseMapInfoIS3_EENS_6detail12DenseMapPairIS3_S5_EEEES3_S5_S7_SA_E18moveFromOldBucketsEPSA_SD_>
 1bc:	add	x0, x0, #0x0
 1c0:	add	x1, x1, #0x0
 1c4:	add	x3, x3, #0x0
 1c8:	mov	w2, #0x15c                 	// #348
 1cc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	add	x8, x21, x21, lsl #1
  6c:	lsl	x0, x8, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, ec <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xec>
  c4:	add	x8, x8, x8, lsl #1
  c8:	lsl	x8, x8, #3
  cc:	mov	x9, x20
  d0:	ldr	x10, [x0, #16]
  d4:	ldr	q0, [x0], #24
  d8:	subs	x8, x8, #0x18
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9], #24
  e4:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xd0>  // b.any
  e8:	ldr	x0, [x19]
  ec:	add	x8, x19, #0x10
  f0:	cmp	x0, x8
  f4:	b.eq	fc <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_6RecordENS_7SMRangeEELb0EE4growEm+0xfc>  // b.none
  f8:	bl	0 <free>
  fc:	str	x20, [x19]
 100:	str	w21, [x19, #12]
 104:	ldp	x20, x19, [sp, #32]
 108:	ldr	x21, [sp, #16]
 10c:	ldp	x29, x30, [sp], #48
 110:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x20, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x20, #0x30
  40:	str	x25, [x20, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa8>
  88:	mov	x8, x20
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x20, #32]
  b0:	str	x8, [x20, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x19
  c0:	mov	x1, x21
  c4:	str	xzr, [x22, #16]
  c8:	str	x8, [x20, #64]
  cc:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  d0:	mov	x23, x0
  d4:	cbz	x1, e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe8>
  d8:	mov	x22, x1
  dc:	cbz	x23, 104 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x104>
  e0:	mov	w0, #0x1                   	// #1
  e4:	b	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x154>
  e8:	mov	x0, x19
  ec:	mov	x1, x21
  f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  f4:	mov	x0, x20
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x1, xzr
 100:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x178>
 104:	add	x8, x19, #0x8
 108:	cmp	x8, x22
 10c:	b.eq	e0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xe0>  // b.none
 110:	ldr	x8, [x20, #40]
 114:	ldr	x9, [x22, #40]
 118:	subs	x23, x8, x9
 11c:	csel	x2, x9, x8, hi  // hi = pmore
 120:	cbz	x2, 134 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x134>
 124:	ldr	x1, [x22, #32]
 128:	ldr	x0, [x21]
 12c:	bl	0 <memcmp>
 130:	cbnz	w0, 150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 134:	mov	w0, #0x7fffffff            	// #2147483647
 138:	cmp	x23, x0
 13c:	b.gt	150 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE17_M_emplace_uniqueIJS6_INS9_9StringRefESD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x150>
 140:	mov	x8, #0xffffffff80000000    	// #-2147483648
 144:	cmp	x23, x8
 148:	mov	w8, #0x80000000            	// #-2147483648
 14c:	csel	w0, w23, w8, gt
 150:	lsr	w0, w0, #31
 154:	add	x3, x19, #0x8
 158:	mov	x1, x20
 15c:	mov	x2, x22
 160:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 164:	ldr	x8, [x19, #40]
 168:	mov	w1, #0x1                   	// #1
 16c:	mov	x23, x20
 170:	add	x8, x8, #0x1
 174:	str	x8, [x19, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm6RecordESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIvESaISE_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x1, #32]
  10:	mov	x19, x1
  14:	cbz	x20, 70 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x70>
  18:	ldr	x0, [x20, #88]
  1c:	add	x8, x20, #0x68
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x20, #72]
  30:	add	x8, x20, #0x58
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x40>  // b.none
  3c:	bl	0 <free>
  40:	ldr	x0, [x20, #56]
  44:	add	x8, x20, #0x48
  48:	cmp	x0, x8
  4c:	b.eq	54 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x54>  // b.none
  50:	bl	0 <free>
  54:	ldr	x0, [x20, #8]
  58:	add	x8, x20, #0x18
  5c:	cmp	x0, x8
  60:	b.eq	68 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x68>  // b.none
  64:	bl	0 <free>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19]
  74:	add	x8, x19, #0x10
  78:	str	xzr, [x19, #32]
  7c:	cmp	x0, x8
  80:	b.eq	90 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt10unique_ptrIN4llvm6RecordESt14default_deleteISC_EEEEE7destroyISG_EEvPT_+0x90>  // b.none
  84:	ldp	x20, x19, [sp, #16]
  88:	ldp	x29, x30, [sp], #32
  8c:	b	0 <_ZdlPv>
  90:	ldp	x20, x19, [sp, #16]
  94:	ldp	x29, x30, [sp], #32
  98:	ret

Disassembly of section .text._ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 34 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev+0x34>
  18:	add	x0, x20, #0x30
  1c:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  20:	ldr	x1, [x20, #16]
  24:	mov	x0, x20
  28:	bl	0 <_ZNSt10unique_ptrIN4llvm15TGLocalVarScopeESt14default_deleteIS1_EED2Ev>
  2c:	mov	x0, x20
  30:	bl	0 <_ZdlPv>
  34:	str	xzr, [x19]
  38:	ldp	x20, x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x30>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	mov	x20, x21
  2c:	cbz	x21, 58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x58>
  30:	ldr	x1, [x20, #24]
  34:	mov	x0, x19
  38:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E>
  3c:	ldr	x0, [x20, #32]
  40:	ldr	x21, [x20, #16]
  44:	add	x8, x20, #0x30
  48:	cmp	x0, x8
  4c:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	b	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE8_M_eraseEPSt13_Rb_tree_nodeISB_E+0x20>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x0, x1
  1c:	b.eq	114 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x114>  // b.none
  20:	mov	x21, x1
  24:	mov	x20, x1
  28:	ldr	x1, [x21], #16
  2c:	cmp	x1, x21
  30:	b.eq	68 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x68>  // b.none
  34:	mov	x8, x19
  38:	ldr	x0, [x8], #16
  3c:	cmp	x0, x8
  40:	b.eq	4c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x4c>  // b.none
  44:	bl	0 <free>
  48:	ldr	x1, [x20]
  4c:	str	x1, [x19]
  50:	mov	x22, x20
  54:	ldr	x8, [x22, #8]!
  58:	str	x8, [x19, #8]
  5c:	str	x21, [x20]
  60:	str	wzr, [x20, #12]
  64:	b	110 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x110>
  68:	mov	x22, x20
  6c:	ldr	w21, [x22, #8]!
  70:	ldr	w23, [x19, #8]
  74:	cmp	w23, w21
  78:	b.cs	b4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xb4>  // b.hs, b.nlast
  7c:	ldr	w8, [x19, #12]
  80:	cmp	w8, w21
  84:	b.cs	c8 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xc8>  // b.hs, b.nlast
  88:	add	x1, x19, #0x10
  8c:	mov	w3, #0x8                   	// #8
  90:	mov	x0, x19
  94:	mov	x2, x21
  98:	str	wzr, [x19, #8]
  9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  a0:	mov	x23, xzr
  a4:	ldr	w8, [x20, #8]
  a8:	cmp	x23, x8
  ac:	b.ne	e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>  // b.any
  b0:	b	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x100>
  b4:	cbz	w21, 100 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x100>
  b8:	ldr	x0, [x19]
  bc:	lsl	x2, x21, #3
  c0:	bl	0 <memmove>
  c4:	b	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x100>
  c8:	cbz	w23, 12c <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x12c>
  cc:	ldr	x0, [x19]
  d0:	lsl	x2, x23, #3
  d4:	bl	0 <memmove>
  d8:	ldr	w8, [x20, #8]
  dc:	cmp	x23, x8
  e0:	b.eq	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x100>  // b.none
  e4:	ldr	x9, [x20]
  e8:	ldr	x10, [x19]
  ec:	add	x1, x9, x23, lsl #3
  f0:	add	x8, x9, x8, lsl #3
  f4:	add	x0, x10, x23, lsl #3
  f8:	sub	x2, x8, x1
  fc:	bl	0 <memcpy>
 100:	ldr	w8, [x19, #12]
 104:	cmp	w8, w21
 108:	b.cc	140 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x140>  // b.lo, b.ul, b.last
 10c:	str	w21, [x19, #8]
 110:	str	wzr, [x22]
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #48]
 11c:	ldp	x22, x21, [sp, #32]
 120:	ldr	x23, [sp, #16]
 124:	ldp	x29, x30, [sp], #64
 128:	ret
 12c:	mov	x23, xzr
 130:	ldr	w8, [x20, #8]
 134:	cmp	x23, x8
 138:	b.ne	e4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0xe4>  // b.any
 13c:	b	100 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_+0x100>
 140:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 144:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 148:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSEOS3_>
 14c:	add	x0, x0, #0x0
 150:	add	x1, x1, #0x0
 154:	add	x3, x3, #0x0
 158:	mov	w2, #0x43                  	// #67
 15c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x1
  24:	bl	0 <_Znwm>
  28:	ldr	x23, [x22]
  2c:	mov	x19, x0
  30:	add	x21, x0, #0x20
  34:	cbz	x23, 88 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x88>
  38:	ldr	x24, [x22, #8]
  3c:	add	x25, x19, #0x30
  40:	str	x25, [x19, #32]
  44:	cmp	x24, #0x10
  48:	str	x24, [x29, #24]
  4c:	b.cc	70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x70>  // b.lo, b.ul, b.last
  50:	add	x1, x29, #0x18
  54:	mov	x0, x21
  58:	mov	x2, xzr
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  60:	ldr	x8, [x29, #24]
  64:	str	x0, [x21]
  68:	str	x8, [x25]
  6c:	mov	x25, x0
  70:	cbz	x24, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa8>
  74:	cmp	x24, #0x1
  78:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x98>  // b.any
  7c:	ldrb	w8, [x23]
  80:	strb	w8, [x25]
  84:	b	a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xa8>
  88:	mov	x8, x19
  8c:	strb	wzr, [x8, #48]!
  90:	stp	x8, xzr, [x8, #-16]
  94:	b	b8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xb8>
  98:	mov	x0, x25
  9c:	mov	x1, x23
  a0:	mov	x2, x24
  a4:	bl	0 <memcpy>
  a8:	ldr	x8, [x29, #24]
  ac:	ldr	x9, [x19, #32]
  b0:	str	x8, [x19, #40]
  b4:	strb	wzr, [x9, x8]
  b8:	ldr	x8, [x22, #16]
  bc:	mov	x0, x20
  c0:	mov	x1, x21
  c4:	str	x8, [x19, #64]
  c8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_>
  cc:	mov	x23, x0
  d0:	cbz	x1, e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xe4>
  d4:	mov	x22, x1
  d8:	cbz	x23, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x108>
  dc:	mov	w0, #0x1                   	// #1
  e0:	b	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x158>
  e4:	ldr	x0, [x19, #32]
  e8:	add	x8, x19, #0x30
  ec:	cmp	x0, x8
  f0:	b.eq	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xf8>  // b.none
  f4:	bl	0 <_ZdlPv>
  f8:	mov	x0, x19
  fc:	bl	0 <_ZdlPv>
 100:	mov	x1, xzr
 104:	b	17c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x17c>
 108:	add	x8, x20, #0x8
 10c:	cmp	x8, x22
 110:	b.eq	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0xdc>  // b.none
 114:	ldr	x8, [x19, #40]
 118:	ldr	x9, [x22, #40]
 11c:	subs	x23, x8, x9
 120:	csel	x2, x9, x8, hi  // hi = pmore
 124:	cbz	x2, 138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x138>
 128:	ldr	x1, [x22, #32]
 12c:	ldr	x0, [x21]
 130:	bl	0 <memcmp>
 134:	cbnz	w0, 154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x154>
 138:	mov	w0, #0x7fffffff            	// #2147483647
 13c:	cmp	x23, x0
 140:	b.gt	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE17_M_emplace_uniqueIJS6_INS8_9StringRefESA_EEEES6_ISt17_Rb_tree_iteratorISB_EbEDpOT_+0x154>
 144:	mov	x8, #0xffffffff80000000    	// #-2147483648
 148:	cmp	x23, x8
 14c:	mov	w8, #0x80000000            	// #-2147483648
 150:	csel	w0, w23, w8, gt
 154:	lsr	w0, w0, #31
 158:	add	x3, x20, #0x8
 15c:	mov	x1, x19
 160:	mov	x2, x22
 164:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 168:	ldr	x8, [x20, #40]
 16c:	mov	w1, #0x1                   	// #1
 170:	mov	x23, x19
 174:	add	x8, x8, #0x1
 178:	str	x8, [x20, #40]
 17c:	mov	x0, x23
 180:	ldp	x20, x19, [sp, #64]
 184:	ldp	x22, x21, [sp, #48]
 188:	ldp	x24, x23, [sp, #32]
 18c:	ldr	x25, [sp, #16]
 190:	ldp	x29, x30, [sp], #80
 194:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_PN4llvm4InitEESt10_Select1stISB_ESt4lessIvESaISB_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_:

0000000000000000 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x20, [x0, #8]
  18:	mov	x19, x0
  1c:	cbz	x20, 40 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x40>
  20:	ldp	x21, x23, [x20, #24]
  24:	cmp	x21, x23
  28:	b.ne	d0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xd0>  // b.any
  2c:	cbz	x21, 38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>
  30:	mov	x0, x21
  34:	bl	0 <_ZdlPv>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x20, [x19]
  44:	str	xzr, [x19, #8]
  48:	cbz	x20, a4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xa4>
  4c:	ldr	x0, [x20, #88]
  50:	add	x8, x20, #0x68
  54:	cmp	x0, x8
  58:	b.eq	60 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x60>  // b.none
  5c:	bl	0 <free>
  60:	ldr	x0, [x20, #72]
  64:	add	x8, x20, #0x58
  68:	cmp	x0, x8
  6c:	b.eq	74 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x74>  // b.none
  70:	bl	0 <free>
  74:	ldr	x0, [x20, #56]
  78:	add	x8, x20, #0x48
  7c:	cmp	x0, x8
  80:	b.eq	88 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x88>  // b.none
  84:	bl	0 <free>
  88:	ldr	x0, [x20, #8]
  8c:	add	x8, x20, #0x18
  90:	cmp	x0, x8
  94:	b.eq	9c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x9c>  // b.none
  98:	bl	0 <free>
  9c:	mov	x0, x20
  a0:	bl	0 <_ZdlPv>
  a4:	str	xzr, [x19]
  a8:	ldp	x20, x19, [sp, #48]
  ac:	ldp	x22, x21, [sp, #32]
  b0:	ldr	x23, [sp, #16]
  b4:	ldp	x29, x30, [sp], #64
  b8:	ret
  bc:	mov	x0, x22
  c0:	bl	0 <_ZdlPv>
  c4:	str	xzr, [x21], #16
  c8:	cmp	x23, x21
  cc:	b.eq	134 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x134>  // b.none
  d0:	add	x0, x21, #0x8
  d4:	bl	0 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_>
  d8:	ldr	x22, [x21]
  dc:	cbz	x22, c4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xc4>
  e0:	ldr	x0, [x22, #88]
  e4:	add	x8, x22, #0x68
  e8:	cmp	x0, x8
  ec:	b.eq	f4 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xf4>  // b.none
  f0:	bl	0 <free>
  f4:	ldr	x0, [x22, #72]
  f8:	add	x8, x22, #0x58
  fc:	cmp	x0, x8
 100:	b.eq	108 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x108>  // b.none
 104:	bl	0 <free>
 108:	ldr	x0, [x22, #56]
 10c:	add	x8, x22, #0x48
 110:	cmp	x0, x8
 114:	b.eq	11c <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x11c>  // b.none
 118:	bl	0 <free>
 11c:	ldr	x0, [x22, #8]
 120:	add	x8, x22, #0x18
 124:	cmp	x0, x8
 128:	b.eq	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>  // b.none
 12c:	bl	0 <free>
 130:	b	bc <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0xbc>
 134:	ldr	x21, [x20, #24]
 138:	cbnz	x21, 30 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x30>
 13c:	b	38 <_ZSt8_DestroyIN4llvm12RecordsEntryEEvPT_+0x38>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitES3_ELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #4
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #59
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #4
  70:	cbz	x25, 84 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x84>
  74:	lsl	x0, x25, #4
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	q0, [x23]
  8c:	stp	xzr, xzr, [x23]
  90:	cmp	x20, x21
  94:	str	q0, [x22, x26, lsl #4]
  98:	mov	x26, x22
  9c:	b.eq	d8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xd8>  // b.none
  a0:	mov	x26, x22
  a4:	mov	x23, x20
  a8:	ldr	x8, [x23]
  ac:	str	xzr, [x23]
  b0:	mov	x0, x23
  b4:	str	x8, [x26]
  b8:	ldr	x8, [x23, #8]
  bc:	str	xzr, [x23, #8]
  c0:	str	x8, [x26, #8]
  c4:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  c8:	add	x23, x23, #0x10
  cc:	cmp	x23, x21
  d0:	add	x26, x26, #0x10
  d4:	b.ne	a8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xa8>  // b.any
  d8:	cmp	x24, x21
  dc:	add	x23, x26, #0x10
  e0:	b.eq	114 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x114>  // b.none
  e4:	ldr	x8, [x21]
  e8:	str	xzr, [x21]
  ec:	mov	x0, x21
  f0:	str	x8, [x23]
  f4:	ldr	x8, [x21, #8]
  f8:	str	xzr, [x21, #8]
  fc:	str	x8, [x23, #8]
 100:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 104:	add	x21, x21, #0x10
 108:	cmp	x21, x24
 10c:	add	x23, x23, #0x10
 110:	b.ne	e4 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xe4>  // b.any
 114:	cbz	x20, 120 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #4
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJS1_EEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldp	x20, x24, [x0]
  20:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
  24:	sub	x8, x24, x20
  28:	cmp	x8, x9
  2c:	b.eq	15c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x15c>  // b.none
  30:	asr	x9, x8, #4
  34:	cmp	x8, #0x0
  38:	csinc	x10, x9, xzr, ne  // ne = any
  3c:	adds	x9, x10, x9
  40:	lsr	x11, x9, #59
  44:	cset	w10, cs  // cs = hs, nlast
  48:	cmp	x11, #0x0
  4c:	cset	w11, ne  // ne = any
  50:	orr	w10, w10, w11
  54:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  58:	cmp	w10, #0x0
  5c:	csel	x25, x8, x9, ne  // ne = any
  60:	sub	x8, x1, x20
  64:	mov	x23, x2
  68:	mov	x19, x0
  6c:	mov	x21, x1
  70:	asr	x26, x8, #4
  74:	cbz	x25, 88 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x88>
  78:	lsl	x0, x25, #4
  7c:	bl	0 <_Znwm>
  80:	mov	x22, x0
  84:	b	8c <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x8c>
  88:	mov	x22, xzr
  8c:	ldr	x8, [x23]
  90:	add	x9, x22, x26, lsl #4
  94:	add	x0, sp, #0x8
  98:	str	xzr, [x23]
  9c:	stp	xzr, x8, [x9]
  a0:	str	xzr, [sp, #8]
  a4:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  a8:	cmp	x20, x21
  ac:	mov	x26, x22
  b0:	b.eq	ec <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xec>  // b.none
  b4:	mov	x26, x22
  b8:	mov	x23, x20
  bc:	ldr	x8, [x23]
  c0:	str	xzr, [x23]
  c4:	mov	x0, x23
  c8:	str	x8, [x26]
  cc:	ldr	x8, [x23, #8]
  d0:	str	xzr, [x23, #8]
  d4:	str	x8, [x26, #8]
  d8:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
  dc:	add	x23, x23, #0x10
  e0:	cmp	x23, x21
  e4:	add	x26, x26, #0x10
  e8:	b.ne	bc <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xbc>  // b.any
  ec:	cmp	x24, x21
  f0:	add	x23, x26, #0x10
  f4:	b.eq	128 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x128>  // b.none
  f8:	ldr	x8, [x21]
  fc:	str	xzr, [x21]
 100:	mov	x0, x21
 104:	str	x8, [x23]
 108:	ldr	x8, [x21, #8]
 10c:	str	xzr, [x21, #8]
 110:	str	x8, [x23, #8]
 114:	bl	0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 118:	add	x21, x21, #0x10
 11c:	cmp	x21, x24
 120:	add	x23, x23, #0x10
 124:	b.ne	f8 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0xf8>  // b.any
 128:	cbz	x20, 134 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_+0x134>
 12c:	mov	x0, x20
 130:	bl	0 <_ZdlPv>
 134:	add	x8, x22, x25, lsl #4
 138:	stp	x22, x23, [x19]
 13c:	str	x8, [x19, #16]
 140:	ldp	x20, x19, [sp, #80]
 144:	ldp	x22, x21, [sp, #64]
 148:	ldp	x24, x23, [sp, #48]
 14c:	ldp	x26, x25, [sp, #32]
 150:	ldp	x29, x30, [sp, #16]
 154:	add	sp, sp, #0x60
 158:	ret
 15c:	adrp	x0, 0 <_ZNSt6vectorIN4llvm12RecordsEntryESaIS1_EE17_M_realloc_insertIJSt10unique_ptrINS0_11ForeachLoopESt14default_deleteIS6_EEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_>
 160:	add	x0, x0, #0x0
 164:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm6RecordC2ERKS0_:

0000000000000000 <_ZN4llvm6RecordC2ERKS0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN4llvm6RecordC2ERKS0_>
  10:	ldr	x8, [x1]
  14:	ldr	d0, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x0, #0x18
  20:	str	x8, [x0]
  24:	str	x9, [x0, #8]!
  28:	str	d0, [x19, #16]
  2c:	ldr	w8, [x1, #16]
  30:	mov	x20, x1
  34:	cbz	w8, 40 <_ZN4llvm6RecordC2ERKS0_+0x40>
  38:	add	x1, x20, #0x8
  3c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  40:	add	x8, x19, #0x48
  44:	mov	x0, x19
  48:	str	x8, [x0, #56]!
  4c:	str	xzr, [x0, #8]
  50:	ldr	w8, [x20, #64]
  54:	cbz	w8, 60 <_ZN4llvm6RecordC2ERKS0_+0x60>
  58:	add	x1, x20, #0x38
  5c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  60:	add	x8, x19, #0x58
  64:	mov	x0, x19
  68:	str	x8, [x0, #72]!
  6c:	str	xzr, [x0, #8]
  70:	ldr	w8, [x20, #80]
  74:	cbz	w8, 80 <_ZN4llvm6RecordC2ERKS0_+0x80>
  78:	add	x1, x20, #0x48
  7c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  80:	add	x8, x19, #0x68
  84:	mov	x0, x19
  88:	str	x8, [x0, #88]!
  8c:	str	xzr, [x0, #8]
  90:	ldr	w8, [x20, #96]
  94:	cbz	w8, a0 <_ZN4llvm6RecordC2ERKS0_+0xa0>
  98:	add	x1, x20, #0x58
  9c:	bl	0 <_ZN4llvm6RecordC2ERKS0_>
  a0:	ldr	x8, [x20, #104]
  a4:	adrp	x9, 0 <_ZN4llvm6Record6LastIDE>
  a8:	ldr	x9, [x9]
  ac:	stp	x8, xzr, [x19, #104]
  b0:	ldr	w8, [x9]
  b4:	add	w10, w8, #0x1
  b8:	str	w10, [x9]
  bc:	str	w8, [x19, #120]
  c0:	ldrb	w8, [x20, #124]
  c4:	strb	w8, [x19, #124]
  c8:	ldrb	w8, [x20, #125]
  cc:	strb	w8, [x19, #125]
  d0:	ldp	x20, x19, [sp, #16]
  d4:	ldp	x29, x30, [sp], #32
  d8:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #3
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #3
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #3
  ac:	add	x8, x9, x8, lsl #3
  b0:	add	x0, x10, x22, lsl #3
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_5SMLocEEaSERKS2_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_:

0000000000000000 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	cc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xcc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	80 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0x80>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x8                   	// #8
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xa0>  // b.any
  64:	b	bc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xbc>
  68:	cbz	w20, bc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xbc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	lsl	x2, x20, #3
  78:	bl	0 <memmove>
  7c:	b	bc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xbc>
  80:	cbz	w22, e0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xe0>
  84:	ldr	x1, [x21]
  88:	ldr	x0, [x19]
  8c:	lsl	x2, x22, #3
  90:	bl	0 <memmove>
  94:	ldr	w8, [x21, #8]
  98:	cmp	x22, x8
  9c:	b.eq	bc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xbc>  // b.none
  a0:	ldr	x9, [x21]
  a4:	ldr	x10, [x19]
  a8:	add	x1, x9, x22, lsl #3
  ac:	add	x8, x9, x8, lsl #3
  b0:	add	x0, x10, x22, lsl #3
  b4:	sub	x2, x8, x1
  b8:	bl	0 <memcpy>
  bc:	ldr	w8, [x19, #12]
  c0:	cmp	w8, w20
  c4:	b.cc	f4 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xf4>  // b.lo, b.ul, b.last
  c8:	str	w20, [x19, #8]
  cc:	mov	x0, x19
  d0:	ldp	x20, x19, [sp, #32]
  d4:	ldp	x22, x21, [sp, #16]
  d8:	ldp	x29, x30, [sp], #48
  dc:	ret
  e0:	mov	x22, xzr
  e4:	ldr	w8, [x21, #8]
  e8:	cmp	x22, x8
  ec:	b.ne	a0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xa0>  // b.any
  f0:	b	bc <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_+0xbc>
  f4:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
  f8:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
  fc:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIPNS_4InitEEaSERKS3_>
 100:	add	x0, x0, #0x0
 104:	add	x1, x1, #0x0
 108:	add	x3, x3, #0x0
 10c:	mov	w2, #0x43                  	// #67
 110:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	dc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xdc>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w22, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w22, w20
  2c:	b.cs	68 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x68>  // b.hs, b.nlast
  30:	ldr	w8, [x19, #12]
  34:	cmp	w8, w20
  38:	b.cs	84 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x84>  // b.hs, b.nlast
  3c:	add	x1, x19, #0x10
  40:	mov	w3, #0x18                  	// #24
  44:	mov	x0, x19
  48:	mov	x2, x20
  4c:	str	wzr, [x19, #8]
  50:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  54:	mov	x22, xzr
  58:	ldr	w8, [x21, #8]
  5c:	cmp	x22, x8
  60:	b.ne	a8 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xa8>  // b.any
  64:	b	cc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xcc>
  68:	cbz	w20, cc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xcc>
  6c:	ldr	x1, [x21]
  70:	ldr	x0, [x19]
  74:	add	x8, x20, x20, lsl #1
  78:	lsl	x2, x8, #3
  7c:	bl	0 <memmove>
  80:	b	cc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xcc>
  84:	cbz	w22, f0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xf0>
  88:	ldr	x1, [x21]
  8c:	ldr	x0, [x19]
  90:	add	x8, x22, x22, lsl #1
  94:	lsl	x2, x8, #3
  98:	bl	0 <memmove>
  9c:	ldr	w8, [x21, #8]
  a0:	cmp	x22, x8
  a4:	b.eq	cc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xcc>  // b.none
  a8:	ldr	x9, [x21]
  ac:	ldr	x11, [x19]
  b0:	mov	w10, #0x18                  	// #24
  b4:	mov	w12, #0x18                  	// #24
  b8:	madd	x1, x22, x10, x9
  bc:	madd	x8, x8, x12, x9
  c0:	madd	x0, x22, x12, x11
  c4:	sub	x2, x8, x1
  c8:	bl	0 <memcpy>
  cc:	ldr	w8, [x19, #12]
  d0:	cmp	w8, w20
  d4:	b.cc	104 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0x104>  // b.lo, b.ul, b.last
  d8:	str	w20, [x19, #8]
  dc:	mov	x0, x19
  e0:	ldp	x20, x19, [sp, #32]
  e4:	ldp	x22, x21, [sp, #16]
  e8:	ldp	x29, x30, [sp], #48
  ec:	ret
  f0:	mov	x22, xzr
  f4:	ldr	w8, [x21, #8]
  f8:	cmp	x22, x8
  fc:	b.ne	a8 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xa8>  // b.any
 100:	b	cc <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_+0xcc>
 104:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 108:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 10c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9RecordValEEaSERKS2_>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_:

0000000000000000 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	124 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x124>  // b.none
  1c:	ldr	w20, [x1, #8]
  20:	ldr	w8, [x19, #8]
  24:	mov	x21, x1
  28:	cmp	w8, w20
  2c:	b.cs	60 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x60>  // b.hs, b.nlast
  30:	ldr	w9, [x19, #12]
  34:	cmp	w9, w20
  38:	b.cs	98 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x98>  // b.hs, b.nlast
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	str	wzr, [x19, #8]
  48:	bl	0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
  4c:	mov	x8, xzr
  50:	ldr	w10, [x21, #8]
  54:	cmp	x8, x10
  58:	b.ne	d8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xd8>  // b.any
  5c:	b	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x114>
  60:	cbz	w20, 114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x114>
  64:	ldr	x8, [x21]
  68:	ldr	x9, [x19]
  6c:	add	x10, x20, #0x1
  70:	ldr	x11, [x8]
  74:	sub	x10, x10, #0x1
  78:	cmp	x10, #0x1
  7c:	str	x11, [x9]
  80:	ldur	q0, [x8, #8]
  84:	add	x8, x8, #0x18
  88:	stur	q0, [x9, #8]
  8c:	add	x9, x9, #0x18
  90:	b.gt	70 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x70>
  94:	b	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x114>
  98:	cbz	w8, 138 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x138>
  9c:	ldr	x9, [x21]
  a0:	ldr	x10, [x19]
  a4:	add	x11, x8, #0x1
  a8:	ldr	x12, [x9]
  ac:	sub	x11, x11, #0x1
  b0:	cmp	x11, #0x1
  b4:	str	x12, [x10]
  b8:	ldur	q0, [x9, #8]
  bc:	add	x9, x9, #0x18
  c0:	stur	q0, [x10, #8]
  c4:	add	x10, x10, #0x18
  c8:	b.gt	a8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xa8>
  cc:	ldr	w10, [x21, #8]
  d0:	cmp	x8, x10
  d4:	b.eq	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x114>  // b.none
  d8:	ldr	x9, [x21]
  dc:	ldr	x11, [x19]
  e0:	add	x8, x8, x8, lsl #1
  e4:	lsl	x13, x8, #3
  e8:	mov	w12, #0x18                  	// #24
  ec:	neg	x14, x13
  f0:	add	x8, x11, x13
  f4:	add	x9, x9, x13
  f8:	madd	x10, x10, x12, x14
  fc:	ldr	x11, [x9, #16]
 100:	ldr	q0, [x9], #24
 104:	subs	x10, x10, #0x18
 108:	str	x11, [x8, #16]
 10c:	str	q0, [x8], #24
 110:	b.ne	fc <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xfc>  // b.any
 114:	ldr	w8, [x19, #12]
 118:	cmp	w8, w20
 11c:	b.cc	14c <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x14c>  // b.lo, b.ul, b.last
 120:	str	w20, [x19, #8]
 124:	mov	x0, x19
 128:	ldp	x20, x19, [sp, #32]
 12c:	ldr	x21, [sp, #16]
 130:	ldp	x29, x30, [sp], #48
 134:	ret
 138:	mov	x8, xzr
 13c:	ldr	w10, [x21, #8]
 140:	cmp	x8, x10
 144:	b.ne	d8 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0xd8>  // b.any
 148:	b	114 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_+0x114>
 14c:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 150:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 154:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplISt4pairIPNS_6RecordENS_7SMRangeEEEaSERKS6_>
 158:	add	x0, x0, #0x0
 15c:	add	x1, x1, #0x0
 160:	add	x3, x3, #0x0
 164:	mov	w2, #0x43                  	// #67
 168:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x3
  24:	mov	x22, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x21]
  30:	add	x25, x0, #0x30
  34:	mov	x21, x0
  38:	str	x25, [x21, #32]!
  3c:	ldp	x23, x24, [x8]
  40:	mov	x19, x0
  44:	cbnz	x23, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x4c>
  48:	cbnz	x24, 194 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x194>
  4c:	cmp	x24, #0x10
  50:	str	x24, [x29, #24]
  54:	b.cc	7c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x7c>  // b.lo, b.ul, b.last
  58:	add	x1, x29, #0x18
  5c:	mov	x0, x21
  60:	mov	x2, xzr
  64:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  68:	ldr	x8, [x29, #24]
  6c:	str	x0, [x21]
  70:	str	x8, [x25]
  74:	cbnz	x24, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x84>
  78:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  7c:	mov	x0, x25
  80:	cbz	x24, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  84:	cmp	x24, #0x1
  88:	b.ne	98 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x98>  // b.any
  8c:	ldrb	w8, [x23]
  90:	strb	w8, [x0]
  94:	b	a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa4>
  98:	mov	x1, x23
  9c:	mov	x2, x24
  a0:	bl	0 <memcpy>
  a4:	ldr	x8, [x29, #24]
  a8:	ldr	x9, [x19, #32]
  ac:	mov	x24, x19
  b0:	mov	x0, x20
  b4:	mov	x1, x22
  b8:	mov	x2, x21
  bc:	str	x8, [x19, #40]
  c0:	strb	wzr, [x9, x8]
  c4:	str	xzr, [x24, #64]!
  c8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  cc:	mov	x23, x0
  d0:	cbz	x1, e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xe4>
  d4:	mov	x22, x1
  d8:	cbz	x23, 108 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x108>
  dc:	mov	w0, #0x1                   	// #1
  e0:	b	158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x158>
  e4:	mov	x0, x24
  e8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  ec:	ldr	x0, [x21]
  f0:	cmp	x0, x25
  f4:	b.eq	fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xfc>  // b.none
  f8:	bl	0 <_ZdlPv>
  fc:	mov	x0, x19
 100:	bl	0 <_ZdlPv>
 104:	b	178 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x178>
 108:	add	x8, x20, #0x8
 10c:	cmp	x8, x22
 110:	b.eq	dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xdc>  // b.none
 114:	ldr	x8, [x19, #40]
 118:	ldr	x9, [x22, #40]
 11c:	subs	x23, x8, x9
 120:	csel	x2, x9, x8, hi  // hi = pmore
 124:	cbz	x2, 138 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x138>
 128:	ldr	x1, [x22, #32]
 12c:	ldr	x0, [x21]
 130:	bl	0 <memcmp>
 134:	cbnz	w0, 154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x154>
 138:	mov	w0, #0x7fffffff            	// #2147483647
 13c:	cmp	x23, x0
 140:	b.gt	154 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x154>
 144:	mov	x8, #0xffffffff80000000    	// #-2147483648
 148:	cmp	x23, x8
 14c:	mov	w8, #0x80000000            	// #-2147483648
 150:	csel	w0, w23, w8, gt
 154:	lsr	w0, w0, #31
 158:	add	x3, x20, #0x8
 15c:	mov	x1, x19
 160:	mov	x2, x22
 164:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 168:	ldr	x8, [x20, #40]
 16c:	mov	x23, x19
 170:	add	x8, x8, #0x1
 174:	str	x8, [x20, #40]
 178:	mov	x0, x23
 17c:	ldp	x20, x19, [sp, #64]
 180:	ldp	x22, x21, [sp, #48]
 184:	ldp	x24, x23, [sp, #32]
 188:	ldr	x25, [sp, #16]
 18c:	ldp	x29, x30, [sp], #80
 190:	ret
 194:	adrp	x0, 0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
 198:	add	x0, x0, #0x0
 19c:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	add	x8, x0, #0x8
  1c:	mov	x21, x0
  20:	cmp	x8, x1
  24:	mov	x20, x2
  28:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xa0>  // b.none
  2c:	ldr	x23, [x20, #8]
  30:	ldr	x24, [x1, #40]
  34:	mov	x19, x1
  38:	subs	x25, x23, x24
  3c:	csel	x22, x24, x23, hi  // hi = pmore
  40:	cbz	x22, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x60>
  44:	ldr	x1, [x19, #32]
  48:	ldr	x0, [x20]
  4c:	mov	x2, x22
  50:	bl	0 <memcmp>
  54:	cbz	w0, 60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x60>
  58:	tbz	w0, #31, 80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  5c:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x120>
  60:	mov	w8, #0x7fffffff            	// #2147483647
  64:	cmp	x25, x8
  68:	b.gt	80 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x80>
  6c:	mov	x8, #0xffffffff80000000    	// #-2147483648
  70:	cmp	x25, x8
  74:	mov	w8, #0x80000000            	// #-2147483648
  78:	csel	w0, w25, w8, gt
  7c:	tbnz	w0, #31, 120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x120>
  80:	cbz	x22, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf4>
  84:	ldr	x1, [x20]
  88:	ldr	x0, [x19, #32]
  8c:	mov	x2, x22
  90:	bl	0 <memcmp>
  94:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xf4>
  98:	tbz	w0, #31, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x118>
  9c:	b	190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x190>
  a0:	ldr	x8, [x21, #40]
  a4:	cbz	x8, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  a8:	ldr	x22, [x21, #32]
  ac:	ldr	x9, [x20, #8]
  b0:	ldr	x8, [x22, #40]
  b4:	subs	x19, x8, x9
  b8:	csel	x2, x9, x8, hi  // hi = pmore
  bc:	cbz	x2, d0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xd0>
  c0:	ldr	x1, [x20]
  c4:	ldr	x0, [x22, #32]
  c8:	bl	0 <memcmp>
  cc:	cbnz	w0, ec <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0xec>
  d0:	mov	w8, #0x7fffffff            	// #2147483647
  d4:	cmp	x19, x8
  d8:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  dc:	mov	x8, #0xffffffff80000000    	// #-2147483648
  e0:	cmp	x19, x8
  e4:	mov	w8, #0x80000000            	// #-2147483648
  e8:	csel	w0, w19, w8, gt
  ec:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
  f0:	b	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x21c>
  f4:	sub	x8, x24, x23
  f8:	mov	w9, #0x7fffffff            	// #2147483647
  fc:	cmp	x8, x9
 100:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x118>
 104:	mov	x9, #0xffffffff80000000    	// #-2147483648
 108:	cmp	x8, x9
 10c:	mov	w9, #0x80000000            	// #-2147483648
 110:	csel	w0, w8, w9, gt
 114:	tbnz	w0, #31, 190 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x190>
 118:	mov	x22, xzr
 11c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 120:	ldr	x22, [x21, #24]
 124:	cmp	x22, x19
 128:	b.eq	224 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x224>  // b.none
 12c:	mov	x0, x19
 130:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
 134:	ldr	x8, [x0, #40]
 138:	mov	x22, x0
 13c:	subs	x24, x8, x23
 140:	csel	x2, x23, x8, hi  // hi = pmore
 144:	cbz	x2, 158 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x158>
 148:	ldr	x1, [x20]
 14c:	ldr	x0, [x22, #32]
 150:	bl	0 <memcmp>
 154:	cbnz	w0, 174 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x174>
 158:	mov	w8, #0x7fffffff            	// #2147483647
 15c:	cmp	x24, x8
 160:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 164:	mov	x8, #0xffffffff80000000    	// #-2147483648
 168:	cmp	x24, x8
 16c:	mov	w8, #0x80000000            	// #-2147483648
 170:	csel	w0, w24, w8, gt
 174:	tbz	w0, #31, 1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 178:	ldr	x8, [x22, #24]
 17c:	cmp	x8, #0x0
 180:	csel	x8, xzr, x19, eq  // eq = none
 184:	csel	x22, x22, x19, eq  // eq = none
 188:	mov	x19, x8
 18c:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 190:	ldr	x22, [x21, #32]
 194:	cmp	x22, x19
 198:	b.eq	21c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x21c>  // b.none
 19c:	mov	x0, x19
 1a0:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
 1a4:	ldr	x8, [x0, #40]
 1a8:	mov	x22, x0
 1ac:	subs	x24, x23, x8
 1b0:	csel	x2, x8, x23, hi  // hi = pmore
 1b4:	cbz	x2, 1c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1c8>
 1b8:	ldr	x1, [x22, #32]
 1bc:	ldr	x0, [x20]
 1c0:	bl	0 <memcmp>
 1c4:	cbnz	w0, 1e4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e4>
 1c8:	mov	w8, #0x7fffffff            	// #2147483647
 1cc:	cmp	x24, x8
 1d0:	b.gt	1e8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1e8>
 1d4:	mov	x8, #0xffffffff80000000    	// #-2147483648
 1d8:	cmp	x24, x8
 1dc:	mov	w8, #0x80000000            	// #-2147483648
 1e0:	csel	w0, w24, w8, gt
 1e4:	tbnz	w0, #31, 22c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x22c>
 1e8:	mov	x0, x21
 1ec:	mov	x1, x20
 1f0:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_>
 1f4:	mov	x19, x0
 1f8:	mov	x22, x1
 1fc:	mov	x0, x19
 200:	mov	x1, x22
 204:	ldp	x20, x19, [sp, #64]
 208:	ldp	x22, x21, [sp, #48]
 20c:	ldp	x24, x23, [sp, #32]
 210:	ldr	x25, [sp, #16]
 214:	ldp	x29, x30, [sp], #80
 218:	ret
 21c:	mov	x19, xzr
 220:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 224:	mov	x19, x22
 228:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>
 22c:	ldr	x8, [x19, #24]
 230:	cmp	x8, #0x0
 234:	csel	x8, xzr, x22, eq  // eq = none
 238:	csel	x22, x19, x22, eq  // eq = none
 23c:	mov	x19, x8
 240:	b	1fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISE_ERS7_+0x1fc>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x9, [x0, #16]
  1c:	mov	x21, x0
  20:	mov	x20, x1
  24:	cbz	x9, ac <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xac>
  28:	ldp	x22, x23, [x20]
  2c:	mov	w24, #0x80000000            	// #-2147483648
  30:	mov	x25, #0xffffffff80000000    	// #-2147483648
  34:	b	4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  38:	tbnz	w0, #31, 84 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x84>
  3c:	mov	w8, wzr
  40:	add	x9, x19, #0x18
  44:	ldr	x9, [x9]
  48:	cbz	x9, 94 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x94>
  4c:	ldr	x8, [x9, #40]
  50:	mov	x19, x9
  54:	subs	x26, x23, x8
  58:	csel	x2, x8, x23, hi  // hi = pmore
  5c:	cbz	x2, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x70>
  60:	ldr	x1, [x19, #32]
  64:	mov	x0, x22
  68:	bl	0 <memcmp>
  6c:	cbnz	w0, 38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  70:	cmp	x26, x24
  74:	b.ge	3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x3c>  // b.tcont
  78:	cmp	x26, x25
  7c:	csel	w0, w26, w24, gt
  80:	b	38 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x38>
  84:	add	x9, x19, #0x10
  88:	mov	w8, #0x1                   	// #1
  8c:	ldr	x9, [x9]
  90:	cbnz	x9, 4c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x4c>
  94:	mov	x22, x19
  98:	cbz	w8, c8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xc8>
  9c:	ldr	x8, [x21, #24]
  a0:	cmp	x8, x19
  a4:	b.ne	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xbc>  // b.any
  a8:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  ac:	add	x19, x21, #0x8
  b0:	ldr	x8, [x21, #24]
  b4:	cmp	x8, x19
  b8:	b.eq	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>  // b.none
  bc:	mov	x0, x19
  c0:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  c4:	mov	x22, x0
  c8:	ldr	x8, [x22, #40]
  cc:	ldr	x9, [x20, #8]
  d0:	subs	x21, x8, x9
  d4:	csel	x2, x9, x8, hi  // hi = pmore
  d8:	cbz	x2, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  dc:	ldr	x1, [x20]
  e0:	ldr	x0, [x22, #32]
  e4:	bl	0 <memcmp>
  e8:	cbz	w0, f4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0xf4>
  ec:	tbz	w0, #31, 114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
  f0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
  f4:	mov	w8, #0x7fffffff            	// #2147483647
  f8:	cmp	x21, x8
  fc:	b.gt	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x114>
 100:	mov	x8, #0xffffffff80000000    	// #-2147483648
 104:	cmp	x21, x8
 108:	mov	w8, #0x80000000            	// #-2147483648
 10c:	csel	w0, w21, w8, gt
 110:	tbnz	w0, #31, 11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x11c>
 114:	mov	x19, xzr
 118:	b	120 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE24_M_get_insert_unique_posERS7_+0x120>
 11c:	mov	x22, xzr
 120:	mov	x0, x22
 124:	mov	x1, x19
 128:	ldp	x20, x19, [sp, #64]
 12c:	ldp	x22, x21, [sp, #48]
 130:	ldp	x24, x23, [sp, #32]
 134:	ldp	x26, x25, [sp, #16]
 138:	ldp	x29, x30, [sp], #80
 13c:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPNS_4InitEPNS_10StringInitEELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb:

0000000000000000 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	adrp	x8, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
  1c:	ldr	d0, [x8]
  20:	str	x1, [x0]
  24:	add	x1, x0, #0x18
  28:	sbfx	x24, x3, #0, #61
  2c:	mov	w19, w6
  30:	mov	w20, w5
  34:	mov	x22, x4
  38:	mov	x25, x3
  3c:	mov	x23, x2
  40:	mov	x21, x0
  44:	str	x1, [x0, #8]!
  48:	cmp	x24, #0x5
  4c:	str	d0, [x21, #16]
  50:	b.cc	60 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x60>  // b.lo, b.ul, b.last
  54:	mov	w3, #0x8                   	// #8
  58:	mov	x2, x24
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	cbz	x25, 7c <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x7c>
  64:	ldr	x8, [x21, #8]
  68:	ldr	w9, [x21, #16]
  6c:	lsl	x2, x25, #3
  70:	mov	x1, x23
  74:	add	x0, x8, x9, lsl #3
  78:	bl	0 <memcpy>
  7c:	ldp	w8, w9, [x21, #16]
  80:	add	x8, x24, x8
  84:	cmp	x8, x9
  88:	b.hi	104 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb+0x104>  // b.pmore
  8c:	str	w8, [x21, #16]
  90:	mov	x8, x21
  94:	mov	x9, x21
  98:	str	x22, [x8, #104]!
  9c:	str	x8, [x9, #88]!
  a0:	adrp	x8, 0 <_ZN4llvm6Record6LastIDE>
  a4:	ldr	x8, [x8]
  a8:	mov	x10, x21
  ac:	movi	v0.2d, #0x0
  b0:	str	x9, [x10, #72]!
  b4:	str	d0, [x21, #64]
  b8:	str	d0, [x21, #80]
  bc:	str	d0, [x21, #96]
  c0:	str	xzr, [x21, #112]
  c4:	str	x10, [x21, #56]
  c8:	ldr	w9, [x8]
  cc:	and	w10, w20, #0x1
  d0:	and	w11, w19, #0x1
  d4:	mov	x0, x21
  d8:	add	w12, w9, #0x1
  dc:	str	w12, [x8]
  e0:	str	w9, [x21, #120]
  e4:	strb	w10, [x21, #124]
  e8:	strb	w11, [x21, #125]
  ec:	ldp	x20, x19, [sp, #64]
  f0:	ldp	x22, x21, [sp, #48]
  f4:	ldp	x24, x23, [sp, #32]
  f8:	ldr	x25, [sp, #16]
  fc:	ldp	x29, x30, [sp], #80
 100:	b	0 <_ZN4llvm6Record9checkNameEv>
 104:	adrp	x0, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 108:	adrp	x1, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 10c:	adrp	x3, 0 <_ZN4llvm6RecordC2EPNS_4InitENS_8ArrayRefINS_5SMLocEEERNS_12RecordKeeperEbb>
 110:	add	x0, x0, #0x0
 114:	add	x1, x1, #0x0
 118:	add	x3, x3, #0x0
 11c:	mov	w2, #0x43                  	// #67
 120:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	128 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x128>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	c8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xc8>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x0, x20
  a8:	mov	x26, x20
  ac:	ldr	x8, [x0]
  b0:	str	xzr, [x26], #8
  b4:	str	x8, [x23], #8
  b8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  bc:	cmp	x21, x26
  c0:	mov	x0, x26
  c4:	b.ne	ac <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>  // b.any
  c8:	cmp	x24, x21
  cc:	add	x23, x23, #0x8
  d0:	b.eq	f8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xf8>  // b.none
  d4:	mov	x26, x21
  d8:	ldr	x8, [x21]
  dc:	mov	x0, x21
  e0:	str	xzr, [x26], #8
  e4:	str	x8, [x23], #8
  e8:	bl	0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
  ec:	cmp	x24, x26
  f0:	mov	x21, x26
  f4:	b.ne	d8 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xd8>  // b.any
  f8:	cbz	x20, 104 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x104>
  fc:	mov	x0, x20
 100:	bl	0 <_ZdlPv>
 104:	add	x8, x22, x25, lsl #3
 108:	stp	x22, x23, [x19]
 10c:	str	x8, [x19, #16]
 110:	ldp	x20, x19, [sp, #64]
 114:	ldp	x22, x21, [sp, #48]
 118:	ldp	x24, x23, [sp, #32]
 11c:	ldp	x26, x25, [sp, #16]
 120:	ldp	x29, x30, [sp], #80
 124:	ret
 128:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm11ForeachLoopESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 12c:	add	x0, x0, #0x0
 130:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x21, x21, lsl #1
  70:	lsl	x0, x8, #4
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  80:	cbz	x21, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x0, [x19]
  c4:	cbz	w8, 13c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x13c>
  c8:	mov	w9, #0x30                  	// #48
  cc:	madd	x8, x8, x9, x0
  d0:	mov	x9, x20
  d4:	ldr	q0, [x0]
  d8:	str	q0, [x9]
  dc:	ldr	q0, [x0, #16]
  e0:	str	q0, [x9, #16]
  e4:	ldr	q0, [x0, #32]
  e8:	stp	xzr, xzr, [x0, #8]
  ec:	str	xzr, [x0, #24]
  f0:	add	x0, x0, #0x30
  f4:	cmp	x0, x8
  f8:	str	q0, [x9, #32]
  fc:	add	x9, x9, #0x30
 100:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0xd4>  // b.any
 104:	ldr	w8, [x19, #8]
 108:	ldr	x0, [x19]
 10c:	cbz	w8, 13c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x13c>
 110:	add	x8, x8, x8, lsl #1
 114:	sub	x22, x0, #0x28
 118:	lsl	x23, x8, #4
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x128>
 120:	subs	x23, x23, #0x30
 124:	b.eq	138 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x138>  // b.none
 128:	ldr	x0, [x22, x23]
 12c:	cbz	x0, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x120>
 130:	bl	0 <_ZdlPv>
 134:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x120>
 138:	ldr	x0, [x19]
 13c:	add	x8, x19, #0x10
 140:	cmp	x0, x8
 144:	b.eq	14c <_ZN4llvm23SmallVectorTemplateBaseINS_9LetRecordELb0EE4growEm+0x14c>  // b.none
 148:	bl	0 <free>
 14c:	str	x20, [x19]
 150:	str	w21, [x19, #12]
 154:	ldp	x20, x19, [sp, #48]
 158:	ldp	x22, x21, [sp, #32]
 15c:	ldr	x23, [sp, #16]
 160:	ldp	x29, x30, [sp], #64
 164:	ret

Disassembly of section .text._ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	str	d8, [sp, #-96]!
   4:	stp	x29, x30, [sp, #8]
   8:	str	x27, [sp, #24]
   c:	stp	x26, x25, [sp, #32]
  10:	stp	x24, x23, [sp, #48]
  14:	stp	x22, x21, [sp, #64]
  18:	stp	x20, x19, [sp, #80]
  1c:	mov	x29, sp
  20:	ldp	x20, x25, [x0]
  24:	mov	x9, #0xffffffffffffff90    	// #-112
  28:	movk	x9, #0x7fff, lsl #48
  2c:	sub	x8, x25, x20
  30:	cmp	x8, x9
  34:	b.eq	230 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x230>  // b.none
  38:	mov	x10, #0x4ec5                	// #20165
  3c:	movk	x10, #0xc4ec, lsl #16
  40:	movk	x10, #0xec4e, lsl #32
  44:	asr	x9, x8, #4
  48:	movk	x10, #0x4ec4, lsl #48
  4c:	cmp	x8, #0x0
  50:	mov	x8, #0xd89d                	// #55453
  54:	movk	x8, #0x9d89, lsl #16
  58:	mul	x9, x9, x10
  5c:	movk	x8, #0x89d8, lsl #32
  60:	csinc	x11, x9, xzr, ne  // ne = any
  64:	movk	x8, #0x9d, lsl #48
  68:	adds	x9, x11, x9
  6c:	cset	w11, cs  // cs = hs, nlast
  70:	cmp	x9, x8
  74:	cset	w12, hi  // hi = pmore
  78:	orr	w11, w11, w12
  7c:	sub	x12, x1, x20
  80:	cmp	w11, #0x0
  84:	csel	x26, x8, x9, ne  // ne = any
  88:	asr	x8, x12, #4
  8c:	mov	x23, x2
  90:	mov	x19, x0
  94:	mov	x22, x1
  98:	mul	x24, x8, x10
  9c:	cbz	x26, b4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb4>
  a0:	mov	w8, #0xd0                  	// #208
  a4:	mul	x0, x26, x8
  a8:	bl	0 <_Znwm>
  ac:	mov	x21, x0
  b0:	b	b8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xb8>
  b4:	mov	x21, xzr
  b8:	adrp	x9, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  bc:	ldr	d8, [x9]
  c0:	mov	w8, #0xd0                  	// #208
  c4:	madd	x0, x24, x8, x21
  c8:	add	x8, x0, #0x10
  cc:	str	x8, [x0]
  d0:	str	d8, [x0, #8]
  d4:	ldr	w8, [x23, #8]
  d8:	cbz	w8, e4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xe4>
  dc:	mov	x1, x23
  e0:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
  e4:	cmp	x20, x22
  e8:	mov	x23, x21
  ec:	b.eq	130 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x130>  // b.none
  f0:	mov	x23, x21
  f4:	mov	x24, x20
  f8:	b	10c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x10c>
  fc:	add	x24, x24, #0xd0
 100:	cmp	x22, x24
 104:	add	x23, x23, #0xd0
 108:	b.eq	130 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x130>  // b.none
 10c:	add	x8, x23, #0x10
 110:	str	x8, [x23]
 114:	str	d8, [x23, #8]
 118:	ldr	w8, [x24, #8]
 11c:	cbz	w8, fc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
 120:	mov	x0, x23
 124:	mov	x1, x24
 128:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 12c:	b	fc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xfc>
 130:	subs	x24, x25, x22
 134:	b.eq	188 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x188>  // b.none
 138:	mov	x27, xzr
 13c:	b	14c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x14c>
 140:	add	x27, x27, #0xd0
 144:	cmp	x24, x27
 148:	b.eq	174 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x174>  // b.none
 14c:	add	x8, x23, x27
 150:	add	x9, x8, #0xe0
 154:	str	d8, [x8, #216]
 158:	str	x9, [x8, #208]
 15c:	add	x1, x22, x27
 160:	ldr	w9, [x1, #8]
 164:	cbz	w9, 140 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x140>
 168:	add	x0, x8, #0xd0
 16c:	bl	0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 170:	b	140 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x140>
 174:	add	x8, x23, x27
 178:	add	x22, x8, #0xd0
 17c:	cmp	x20, x25
 180:	b.ne	194 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x194>  // b.any
 184:	b	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>
 188:	add	x22, x23, #0xd0
 18c:	cmp	x20, x25
 190:	b.eq	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>  // b.none
 194:	mov	x23, x20
 198:	b	1a8 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a8>
 19c:	add	x23, x23, #0xd0
 1a0:	cmp	x23, x25
 1a4:	b.eq	1f4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1f4>  // b.none
 1a8:	ldr	w8, [x23, #8]
 1ac:	ldr	x0, [x23]
 1b0:	cbz	w8, 1e0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e0>
 1b4:	add	x8, x8, x8, lsl #1
 1b8:	sub	x24, x0, #0x28
 1bc:	lsl	x27, x8, #4
 1c0:	b	1cc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1cc>
 1c4:	subs	x27, x27, #0x30
 1c8:	b.eq	1dc <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1dc>  // b.none
 1cc:	ldr	x0, [x24, x27]
 1d0:	cbz	x0, 1c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c4>
 1d4:	bl	0 <_ZdlPv>
 1d8:	b	1c4 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1c4>
 1dc:	ldr	x0, [x23]
 1e0:	add	x8, x23, #0x10
 1e4:	cmp	x0, x8
 1e8:	b.eq	19c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x19c>  // b.none
 1ec:	bl	0 <free>
 1f0:	b	19c <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x19c>
 1f4:	cbz	x20, 200 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x200>
 1f8:	mov	x0, x20
 1fc:	bl	0 <_ZdlPv>
 200:	mov	w8, #0xd0                  	// #208
 204:	madd	x8, x26, x8, x21
 208:	stp	x21, x22, [x19]
 20c:	str	x8, [x19, #16]
 210:	ldp	x20, x19, [sp, #80]
 214:	ldp	x22, x21, [sp, #64]
 218:	ldp	x24, x23, [sp, #48]
 21c:	ldp	x26, x25, [sp, #32]
 220:	ldr	x27, [sp, #24]
 224:	ldp	x29, x30, [sp, #8]
 228:	ldr	d8, [sp], #96
 22c:	ret
 230:	adrp	x0, 0 <_ZNSt6vectorIN4llvm11SmallVectorINS0_9LetRecordELj4EEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 234:	add	x0, x0, #0x0
 238:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	a0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xa0>  // b.none
  24:	mov	x21, x1
  28:	ldr	x23, [x21], #16
  2c:	mov	x20, x1
  30:	cmp	x23, x21
  34:	b.eq	bc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xbc>  // b.none
  38:	ldr	w8, [x19, #8]
  3c:	ldr	x0, [x19]
  40:	cbz	w8, 70 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x70>
  44:	add	x8, x8, x8, lsl #1
  48:	sub	x22, x0, #0x28
  4c:	lsl	x23, x8, #4
  50:	b	5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x5c>
  54:	subs	x23, x23, #0x30
  58:	b.eq	6c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x6c>  // b.none
  5c:	ldr	x0, [x22, x23]
  60:	cbz	x0, 54 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x54>
  64:	bl	0 <_ZdlPv>
  68:	b	54 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x54>
  6c:	ldr	x0, [x19]
  70:	add	x8, x19, #0x10
  74:	cmp	x0, x8
  78:	b.eq	80 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x80>  // b.none
  7c:	bl	0 <free>
  80:	ldr	x8, [x20]
  84:	mov	x22, x20
  88:	str	x8, [x19]
  8c:	ldr	x8, [x22, #8]!
  90:	str	x8, [x19, #8]
  94:	str	x21, [x20]
  98:	str	wzr, [x20, #12]
  9c:	str	wzr, [x22]
  a0:	mov	x0, x19
  a4:	ldp	x20, x19, [sp, #64]
  a8:	ldp	x22, x21, [sp, #48]
  ac:	ldp	x24, x23, [sp, #32]
  b0:	ldp	x26, x25, [sp, #16]
  b4:	ldp	x29, x30, [sp], #80
  b8:	ret
  bc:	mov	x22, x20
  c0:	ldr	w21, [x22, #8]!
  c4:	ldr	w24, [x19, #8]
  c8:	cmp	w24, w21
  cc:	b.cs	10c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x10c>  // b.hs, b.nlast
  d0:	ldr	w8, [x19, #12]
  d4:	cmp	w8, w21
  d8:	b.cs	17c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x17c>  // b.hs, b.nlast
  dc:	cbz	w24, 1d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1d4>
  e0:	ldr	x8, [x19]
  e4:	add	x9, x24, x24, lsl #1
  e8:	lsl	x24, x9, #4
  ec:	sub	x23, x8, #0x28
  f0:	b	fc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xfc>
  f4:	subs	x24, x24, #0x30
  f8:	b.eq	1d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1d4>  // b.none
  fc:	ldr	x0, [x23, x24]
 100:	cbz	x0, f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xf4>
 104:	bl	0 <_ZdlPv>
 108:	b	f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0xf4>
 10c:	ldr	x25, [x19]
 110:	cbz	w21, 288 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x288>
 114:	add	x24, x21, #0x1
 118:	b	138 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x138>
 11c:	ldr	q0, [x23, #32]
 120:	sub	x24, x24, #0x1
 124:	cmp	x24, #0x1
 128:	add	x23, x23, #0x30
 12c:	str	q0, [x25, #32]
 130:	add	x25, x25, #0x30
 134:	b.le	160 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x160>
 138:	ldr	q0, [x23]
 13c:	ldr	x0, [x25, #8]
 140:	str	q0, [x25]
 144:	ldr	q0, [x23, #16]
 148:	str	q0, [x25, #16]
 14c:	stp	xzr, xzr, [x23, #8]
 150:	str	xzr, [x23, #24]
 154:	cbz	x0, 11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x11c>
 158:	bl	0 <_ZdlPv>
 15c:	b	11c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x11c>
 160:	ldr	x8, [x19]
 164:	ldr	w24, [x19, #8]
 168:	mov	w9, #0x30                  	// #48
 16c:	madd	x8, x24, x9, x8
 170:	cmp	x8, x25
 174:	b.ne	2d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2d4>  // b.any
 178:	b	29c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x29c>
 17c:	cbz	w24, 300 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x300>
 180:	ldr	x8, [x19]
 184:	add	x25, x24, #0x1
 188:	add	x26, x8, #0x10
 18c:	b	1ac <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1ac>
 190:	ldr	q0, [x23, #32]
 194:	sub	x25, x25, #0x1
 198:	cmp	x25, #0x1
 19c:	add	x23, x23, #0x30
 1a0:	str	q0, [x26, #16]
 1a4:	add	x26, x26, #0x30
 1a8:	b.le	1e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1e8>
 1ac:	ldr	q0, [x23]
 1b0:	ldur	x0, [x26, #-8]
 1b4:	stur	q0, [x26, #-16]
 1b8:	ldr	q0, [x23, #16]
 1bc:	str	q0, [x26]
 1c0:	stp	xzr, xzr, [x23, #8]
 1c4:	str	xzr, [x23, #24]
 1c8:	cbz	x0, 190 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x190>
 1cc:	bl	0 <_ZdlPv>
 1d0:	b	190 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x190>
 1d4:	mov	x0, x19
 1d8:	mov	x1, x21
 1dc:	str	wzr, [x19, #8]
 1e0:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 1e4:	mov	x24, xzr
 1e8:	ldr	w8, [x20, #8]
 1ec:	cmp	x24, x8
 1f0:	b.eq	244 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x244>  // b.none
 1f4:	ldr	x10, [x20]
 1f8:	ldr	x11, [x19]
 1fc:	add	x12, x24, x24, lsl #1
 200:	mov	w9, #0x30                  	// #48
 204:	lsl	x12, x12, #4
 208:	madd	x8, x8, x9, x10
 20c:	add	x9, x11, x12
 210:	add	x10, x10, x12
 214:	ldr	q0, [x10]
 218:	str	q0, [x9]
 21c:	ldr	q0, [x10, #16]
 220:	str	q0, [x9, #16]
 224:	ldr	q0, [x10, #32]
 228:	stp	xzr, xzr, [x10, #8]
 22c:	str	xzr, [x10, #24]
 230:	add	x10, x10, #0x30
 234:	cmp	x10, x8
 238:	str	q0, [x9, #32]
 23c:	add	x9, x9, #0x30
 240:	b.ne	214 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x214>  // b.any
 244:	ldr	w8, [x19, #12]
 248:	cmp	w8, w21
 24c:	b.cc	314 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x314>  // b.lo, b.ul, b.last
 250:	str	w21, [x19, #8]
 254:	ldr	w8, [x20, #8]
 258:	cbz	w8, 9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>
 25c:	ldr	x9, [x20]
 260:	add	x8, x8, x8, lsl #1
 264:	lsl	x21, x8, #4
 268:	sub	x20, x9, #0x28
 26c:	b	278 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x278>
 270:	subs	x21, x21, #0x30
 274:	b.eq	9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>  // b.none
 278:	ldr	x0, [x20, x21]
 27c:	cbz	x0, 270 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x270>
 280:	bl	0 <_ZdlPv>
 284:	b	270 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x270>
 288:	mov	x8, x25
 28c:	mov	w9, #0x30                  	// #48
 290:	madd	x8, x24, x9, x8
 294:	cmp	x8, x25
 298:	b.ne	2d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2d4>  // b.any
 29c:	ldr	w8, [x19, #12]
 2a0:	cmp	w8, w21
 2a4:	b.cc	314 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x314>  // b.lo, b.ul, b.last
 2a8:	str	w21, [x19, #8]
 2ac:	ldr	w8, [x20, #8]
 2b0:	cbz	w8, 9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>
 2b4:	ldr	x9, [x20]
 2b8:	add	x8, x8, x8, lsl #1
 2bc:	lsl	x21, x8, #4
 2c0:	sub	x20, x9, #0x28
 2c4:	b	2f0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2f0>
 2c8:	cmp	x25, x23
 2cc:	mov	x8, x23
 2d0:	b.eq	29c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x29c>  // b.none
 2d4:	ldur	x0, [x8, #-40]
 2d8:	sub	x23, x8, #0x30
 2dc:	cbz	x0, 2c8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2c8>
 2e0:	bl	0 <_ZdlPv>
 2e4:	b	2c8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2c8>
 2e8:	subs	x21, x21, #0x30
 2ec:	b.eq	9c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x9c>  // b.none
 2f0:	ldr	x0, [x20, x21]
 2f4:	cbz	x0, 2e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2e8>
 2f8:	bl	0 <_ZdlPv>
 2fc:	b	2e8 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x2e8>
 300:	mov	x24, xzr
 304:	ldr	w8, [x20, #8]
 308:	cmp	x24, x8
 30c:	b.ne	1f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x1f4>  // b.any
 310:	b	244 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_+0x244>
 314:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 318:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 31c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSEOS2_>
 320:	add	x0, x0, #0x0
 324:	add	x1, x1, #0x0
 328:	add	x3, x3, #0x0
 32c:	mov	w2, #0x43                  	// #67
 330:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x19, x0
  1c:	cmp	x0, x1
  20:	b.eq	234 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x234>  // b.none
  24:	ldr	w20, [x1, #8]
  28:	ldr	w22, [x19, #8]
  2c:	mov	x21, x1
  30:	cmp	w22, w20
  34:	b.cs	74 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x74>  // b.hs, b.nlast
  38:	ldr	w8, [x19, #12]
  3c:	cmp	w8, w20
  40:	b.cs	d4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xd4>  // b.hs, b.nlast
  44:	cbz	w22, 118 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x118>
  48:	ldr	x8, [x19]
  4c:	add	x9, x22, x22, lsl #1
  50:	lsl	x23, x9, #4
  54:	sub	x22, x8, #0x28
  58:	b	64 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x64>
  5c:	subs	x23, x23, #0x30
  60:	b.eq	118 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x118>  // b.none
  64:	ldr	x0, [x22, x23]
  68:	cbz	x0, 5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x5c>
  6c:	bl	0 <_ZdlPv>
  70:	b	5c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x5c>
  74:	ldr	x23, [x19]
  78:	cbz	w20, 1dc <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1dc>
  7c:	ldr	x21, [x21]
  80:	add	x22, x20, #0x1
  84:	ldr	x8, [x21]
  88:	add	x1, x21, #0x8
  8c:	add	x0, x23, #0x8
  90:	str	x8, [x23]
  94:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  98:	ldr	q0, [x21, #32]
  9c:	sub	x22, x22, #0x1
  a0:	cmp	x22, #0x1
  a4:	add	x21, x21, #0x30
  a8:	str	q0, [x23, #32]
  ac:	add	x23, x23, #0x30
  b0:	b.gt	84 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x84>
  b4:	mov	x21, x23
  b8:	ldr	x23, [x19]
  bc:	ldr	w22, [x19, #8]
  c0:	mov	w8, #0x30                  	// #48
  c4:	madd	x8, x22, x8, x23
  c8:	cmp	x8, x21
  cc:	b.ne	200 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x200>  // b.any
  d0:	b	224 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x224>
  d4:	cbz	w22, 214 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x214>
  d8:	ldr	x23, [x21]
  dc:	ldr	x24, [x19]
  e0:	add	x25, x22, #0x1
  e4:	ldr	x8, [x23]
  e8:	add	x1, x23, #0x8
  ec:	add	x0, x24, #0x8
  f0:	str	x8, [x24]
  f4:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
  f8:	ldr	q0, [x23, #32]
  fc:	sub	x25, x25, #0x1
 100:	add	x23, x23, #0x30
 104:	cmp	x25, #0x1
 108:	str	q0, [x24, #32]
 10c:	add	x24, x24, #0x30
 110:	b.gt	e4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0xe4>
 114:	b	12c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x12c>
 118:	mov	x0, x19
 11c:	mov	x1, x20
 120:	str	wzr, [x19, #8]
 124:	bl	0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 128:	mov	x22, xzr
 12c:	ldr	w8, [x21, #8]
 130:	cmp	x22, x8
 134:	b.eq	224 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x224>  // b.none
 138:	ldr	x9, [x21]
 13c:	ldr	x11, [x19]
 140:	add	x12, x22, x22, lsl #1
 144:	mov	w10, #0x30                  	// #48
 148:	lsl	x12, x12, #4
 14c:	madd	x22, x8, x10, x9
 150:	add	x23, x11, x12
 154:	add	x24, x9, x12
 158:	b	17c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x17c>
 15c:	add	x8, x21, x25, lsl #2
 160:	str	x8, [x23, #16]
 164:	ldr	q0, [x24, #32]
 168:	add	x24, x24, #0x30
 16c:	cmp	x24, x22
 170:	str	q0, [x23, #32]
 174:	add	x23, x23, #0x30
 178:	b.eq	224 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x224>  // b.none
 17c:	ldr	x8, [x24]
 180:	str	x8, [x23]
 184:	ldp	x9, x8, [x24, #8]
 188:	stp	xzr, xzr, [x23, #8]
 18c:	str	xzr, [x23, #24]
 190:	subs	x0, x8, x9
 194:	asr	x25, x0, #2
 198:	b.eq	1b0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1b0>  // b.none
 19c:	lsr	x8, x25, #61
 1a0:	cbnz	x8, 250 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x250>
 1a4:	bl	0 <_Znwm>
 1a8:	mov	x21, x0
 1ac:	b	1b4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1b4>
 1b0:	mov	x21, xzr
 1b4:	add	x8, x21, x25, lsl #2
 1b8:	stp	x21, x21, [x23, #8]
 1bc:	str	x8, [x23, #24]
 1c0:	ldp	x1, x8, [x24, #8]
 1c4:	subs	x2, x8, x1
 1c8:	asr	x25, x2, #2
 1cc:	b.eq	15c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x15c>  // b.none
 1d0:	mov	x0, x21
 1d4:	bl	0 <memmove>
 1d8:	b	15c <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x15c>
 1dc:	mov	x21, x23
 1e0:	mov	w8, #0x30                  	// #48
 1e4:	madd	x8, x22, x8, x23
 1e8:	cmp	x8, x21
 1ec:	b.ne	200 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x200>  // b.any
 1f0:	b	224 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x224>
 1f4:	cmp	x21, x22
 1f8:	mov	x8, x22
 1fc:	b.eq	224 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x224>  // b.none
 200:	ldur	x0, [x8, #-40]
 204:	sub	x22, x8, #0x30
 208:	cbz	x0, 1f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1f4>
 20c:	bl	0 <_ZdlPv>
 210:	b	1f4 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x1f4>
 214:	mov	x22, xzr
 218:	ldr	w8, [x21, #8]
 21c:	cmp	x22, x8
 220:	b.ne	138 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x138>  // b.any
 224:	ldr	w8, [x19, #12]
 228:	cmp	w8, w20
 22c:	b.cc	254 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_+0x254>  // b.lo, b.ul, b.last
 230:	str	w20, [x19, #8]
 234:	mov	x0, x19
 238:	ldp	x20, x19, [sp, #64]
 23c:	ldp	x22, x21, [sp, #48]
 240:	ldp	x24, x23, [sp, #32]
 244:	ldr	x25, [sp, #16]
 248:	ldp	x29, x30, [sp], #80
 24c:	ret
 250:	bl	0 <_ZSt17__throw_bad_allocv>
 254:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 258:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 25c:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_9LetRecordEEaSERKS2_>
 260:	add	x0, x0, #0x0
 264:	add	x1, x1, #0x0
 268:	add	x3, x3, #0x0
 26c:	mov	w2, #0x43                  	// #67
 270:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIjSaIjEEaSERKS1_:

0000000000000000 <_ZNSt6vectorIjSaIjEEaSERKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x19, x0
  18:	cmp	x1, x0
  1c:	b.eq	108 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x108>  // b.none
  20:	ldp	x20, x9, [x1]
  24:	ldr	x10, [x19, #16]
  28:	ldr	x8, [x19]
  2c:	mov	x21, x1
  30:	sub	x22, x9, x20
  34:	asr	x23, x22, #2
  38:	sub	x10, x10, x8
  3c:	cmp	x23, x10, asr #2
  40:	b.ls	84 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x84>  // b.plast
  44:	cbz	x22, d8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xd8>
  48:	lsr	x8, x23, #61
  4c:	cbnz	x8, 120 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x120>
  50:	mov	x0, x22
  54:	bl	0 <_Znwm>
  58:	mov	x1, x20
  5c:	mov	x2, x22
  60:	mov	x21, x0
  64:	bl	0 <memmove>
  68:	ldr	x0, [x19]
  6c:	cbz	x0, 74 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x74>
  70:	bl	0 <_ZdlPv>
  74:	add	x8, x21, x23, lsl #2
  78:	str	x21, [x19]
  7c:	str	x8, [x19, #16]
  80:	b	fc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xfc>
  84:	ldr	x0, [x19, #8]
  88:	sub	x2, x0, x8
  8c:	cmp	x23, x2, asr #2
  90:	b.ls	c4 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xc4>  // b.plast
  94:	cbz	x2, e8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xe8>
  98:	mov	x0, x8
  9c:	mov	x1, x20
  a0:	bl	0 <memmove>
  a4:	ldp	x8, x0, [x19]
  a8:	ldp	x20, x9, [x21]
  ac:	sub	x8, x0, x8
  b0:	asr	x8, x8, #2
  b4:	add	x1, x20, x8, lsl #2
  b8:	subs	x2, x9, x1
  bc:	b.ne	f8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xf8>  // b.any
  c0:	b	fc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xfc>
  c4:	cbz	x22, fc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xfc>
  c8:	mov	x0, x8
  cc:	mov	x1, x20
  d0:	mov	x2, x22
  d4:	b	f8 <_ZNSt6vectorIjSaIjEEaSERKS1_+0xf8>
  d8:	mov	x21, xzr
  dc:	ldr	x0, [x19]
  e0:	cbnz	x0, 70 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x70>
  e4:	b	74 <_ZNSt6vectorIjSaIjEEaSERKS1_+0x74>
  e8:	mov	x8, xzr
  ec:	add	x1, x20, x8, lsl #2
  f0:	subs	x2, x9, x1
  f4:	b.eq	fc <_ZNSt6vectorIjSaIjEEaSERKS1_+0xfc>  // b.none
  f8:	bl	0 <memmove>
  fc:	ldr	x8, [x19]
 100:	add	x8, x8, x23, lsl #2
 104:	str	x8, [x19, #8]
 108:	mov	x0, x19
 10c:	ldp	x20, x19, [sp, #48]
 110:	ldp	x22, x21, [sp, #32]
 114:	ldr	x23, [sp, #16]
 118:	ldp	x29, x30, [sp], #64
 11c:	ret
 120:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x21, x1
  24:	bl	0 <_Znwm>
  28:	add	x25, x0, #0x30
  2c:	mov	x22, x0
  30:	str	x25, [x22, #32]!
  34:	mov	x8, x21
  38:	ldr	x9, [x8], #16
  3c:	mov	x19, x0
  40:	cmp	x9, x8
  44:	b.eq	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x58>  // b.none
  48:	str	x9, [x22]
  4c:	ldr	x9, [x21, #16]
  50:	str	x9, [x25]
  54:	b	60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x60>
  58:	ldr	q0, [x9]
  5c:	str	q0, [x25]
  60:	ldr	x9, [x21, #8]
  64:	mov	x24, x19
  68:	mov	x0, x20
  6c:	mov	x1, x22
  70:	str	x9, [x19, #40]
  74:	ldr	x9, [x21, #32]
  78:	stp	x8, xzr, [x21]
  7c:	strb	wzr, [x21, #16]
  80:	str	xzr, [x21, #32]
  84:	str	x9, [x24, #64]!
  88:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  8c:	mov	x23, x0
  90:	cbz	x1, a4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xa4>
  94:	mov	x21, x1
  98:	cbz	x23, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xcc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x11c>
  a4:	mov	x0, x24
  a8:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_>
  ac:	ldr	x0, [x22]
  b0:	cmp	x0, x25
  b4:	b.eq	bc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xbc>  // b.none
  b8:	bl	0 <_ZdlPv>
  bc:	mov	x0, x19
  c0:	bl	0 <_ZdlPv>
  c4:	mov	x1, xzr
  c8:	b	140 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x140>
  cc:	add	x8, x20, #0x8
  d0:	cmp	x8, x21
  d4:	b.eq	9c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x9c>  // b.none
  d8:	ldr	x8, [x19, #40]
  dc:	ldr	x9, [x21, #40]
  e0:	subs	x23, x8, x9
  e4:	csel	x2, x9, x8, hi  // hi = pmore
  e8:	cbz	x2, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0xfc>
  ec:	ldr	x1, [x21, #32]
  f0:	ldr	x0, [x22]
  f4:	bl	0 <memcmp>
  f8:	cbnz	w0, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
  fc:	mov	w0, #0x7fffffff            	// #2147483647
 100:	cmp	x23, x0
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE17_M_emplace_uniqueIJS6_IS5_SD_EEEES6_ISt17_Rb_tree_iteratorISE_EbEDpOT_+0x118>
 108:	mov	x8, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x23, x8
 110:	mov	w8, #0x80000000            	// #-2147483648
 114:	csel	w0, w23, w8, gt
 118:	lsr	w0, w0, #31
 11c:	add	x3, x20, #0x8
 120:	mov	x1, x19
 124:	mov	x2, x21
 128:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 12c:	ldr	x8, [x20, #40]
 130:	mov	w1, #0x1                   	// #1
 134:	mov	x23, x19
 138:	add	x8, x8, #0x1
 13c:	str	x8, [x20, #40]
 140:	mov	x0, x23
 144:	ldp	x20, x19, [sp, #64]
 148:	ldp	x22, x21, [sp, #48]
 14c:	ldp	x24, x23, [sp, #32]
 150:	ldr	x25, [sp, #16]
 154:	ldp	x29, x30, [sp], #80
 158:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x20, x0
  1c:	mov	w0, #0x48                  	// #72
  20:	mov	x22, x3
  24:	mov	x21, x1
  28:	bl	0 <_Znwm>
  2c:	ldr	x8, [x22]
  30:	add	x25, x0, #0x30
  34:	mov	x22, x0
  38:	str	x25, [x22, #32]!
  3c:	mov	x9, x8
  40:	ldr	x10, [x9], #16
  44:	mov	x19, x0
  48:	cmp	x10, x9
  4c:	b.eq	60 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x60>  // b.none
  50:	str	x10, [x22]
  54:	ldr	x10, [x8, #16]
  58:	str	x10, [x25]
  5c:	b	68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x68>
  60:	ldr	q0, [x10]
  64:	str	q0, [x25]
  68:	ldr	x10, [x8, #8]
  6c:	mov	x24, x19
  70:	mov	x0, x20
  74:	mov	x1, x21
  78:	mov	x2, x22
  7c:	str	x10, [x19, #40]
  80:	stp	x9, xzr, [x8]
  84:	strb	wzr, [x8, #16]
  88:	str	xzr, [x24, #64]!
  8c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  90:	mov	x23, x0
  94:	cbz	x1, a8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa8>
  98:	mov	x21, x1
  9c:	cbz	x23, cc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xcc>
  a0:	mov	w0, #0x1                   	// #1
  a4:	b	11c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x11c>
  a8:	mov	x0, x24
  ac:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_>
  b0:	ldr	x0, [x22]
  b4:	cmp	x0, x25
  b8:	b.eq	c0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xc0>  // b.none
  bc:	bl	0 <_ZdlPv>
  c0:	mov	x0, x19
  c4:	bl	0 <_ZdlPv>
  c8:	b	13c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x13c>
  cc:	add	x8, x20, #0x8
  d0:	cmp	x8, x21
  d4:	b.eq	a0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xa0>  // b.none
  d8:	ldr	x8, [x19, #40]
  dc:	ldr	x9, [x21, #40]
  e0:	subs	x23, x8, x9
  e4:	csel	x2, x9, x8, hi  // hi = pmore
  e8:	cbz	x2, fc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0xfc>
  ec:	ldr	x1, [x21, #32]
  f0:	ldr	x0, [x22]
  f4:	bl	0 <memcmp>
  f8:	cbnz	w0, 118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x118>
  fc:	mov	w0, #0x7fffffff            	// #2147483647
 100:	cmp	x23, x0
 104:	b.gt	118 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St10unique_ptrIN4llvm10MultiClassESt14default_deleteISA_EEESt10_Select1stISE_ESt4lessIS5_ESaISE_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJOS5_EESP_IJEEEEESt17_Rb_tree_iteratorISE_ESt23_Rb_tree_const_iteratorISE_EDpOT_+0x118>
 108:	mov	x8, #0xffffffff80000000    	// #-2147483648
 10c:	cmp	x23, x8
 110:	mov	w8, #0x80000000            	// #-2147483648
 114:	csel	w0, w23, w8, gt
 118:	lsr	w0, w0, #31
 11c:	add	x3, x20, #0x8
 120:	mov	x1, x19
 124:	mov	x2, x21
 128:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
 12c:	ldr	x8, [x20, #40]
 130:	mov	x23, x19
 134:	add	x8, x8, #0x1
 138:	str	x8, [x20, #40]
 13c:	mov	x0, x23
 140:	ldp	x20, x19, [sp, #64]
 144:	ldp	x22, x21, [sp, #48]
 148:	ldp	x24, x23, [sp, #32]
 14c:	ldr	x25, [sp, #16]
 150:	ldp	x29, x30, [sp], #80
 154:	ret
