
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//regexp.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x288>:
       0:	stp	x29, x30, [sp, #-144]!
       4:	cmp	w1, #0x2
       8:	mov	x29, sp
       c:	stp	x19, x20, [sp, #16]
      10:	b.eq	38 <grub_mod_init-0x250>  // b.none
      14:	adrp	x1, 0 <grub_mod_init-0x288>
      18:	mov	w0, #0x12                  	// #18
      1c:	ldr	x1, [x1]
      20:	bl	0 <grub_error>
      24:	mov	w19, w0
      28:	mov	w0, w19
      2c:	ldp	x19, x20, [sp, #16]
      30:	ldp	x29, x30, [sp], #144
      34:	ret
      38:	stp	x21, x22, [sp, #32]
      3c:	mov	x21, x2
      40:	mov	x22, x0
      44:	mov	w2, #0x1                   	// #1
      48:	add	x0, sp, #0x50
      4c:	ldr	x1, [x21]
      50:	mov	x20, #0x0                   	// #0
      54:	bl	115d8 <regcomp>
      58:	mov	w19, w0
      5c:	cbz	w0, dc <grub_mod_init-0x1ac>
      60:	mov	x0, x20
      64:	bl	0 <grub_free>
      68:	add	x1, sp, #0x50
      6c:	mov	x3, #0x0                   	// #0
      70:	mov	x2, #0x0                   	// #0
      74:	mov	w0, w19
      78:	bl	116f0 <regerror>
      7c:	mov	x21, x0
      80:	bl	0 <grub_malloc>
      84:	mov	x20, x0
      88:	cbz	x0, 1c0 <grub_mod_init-0xc8>
      8c:	mov	x3, x21
      90:	mov	x2, x20
      94:	add	x1, sp, #0x50
      98:	mov	w0, w19
      9c:	bl	116f0 <regerror>
      a0:	adrp	x1, 0 <grub_mod_init-0x288>
      a4:	mov	x2, x20
      a8:	mov	w0, #0x1                   	// #1
      ac:	ldr	x1, [x1]
      b0:	bl	0 <grub_error>
      b4:	mov	w19, w0
      b8:	add	x0, sp, #0x50
      bc:	bl	11790 <regfree>
      c0:	mov	x0, x20
      c4:	bl	0 <grub_free>
      c8:	mov	w0, w19
      cc:	ldp	x19, x20, [sp, #16]
      d0:	ldp	x21, x22, [sp, #32]
      d4:	ldp	x29, x30, [sp], #144
      d8:	ret
      dc:	ldr	x0, [sp, #128]
      e0:	add	x0, x0, #0x1
      e4:	lsl	x0, x0, #3
      e8:	bl	0 <grub_zalloc>
      ec:	mov	x20, x0
      f0:	cbz	x0, 60 <grub_mod_init-0x228>
      f4:	ldr	x1, [x21, #8]
      f8:	mov	x3, x0
      fc:	ldr	x2, [sp, #128]
     100:	add	x0, sp, #0x50
     104:	mov	w4, #0x0                   	// #0
     108:	add	x2, x2, #0x1
     10c:	bl	117d8 <regexec>
     110:	mov	w19, w0
     114:	cbnz	w0, 60 <grub_mod_init-0x228>
     118:	ldr	x0, [x22, #8]
     11c:	stp	x23, x24, [sp, #48]
     120:	ldr	x22, [sp, #128]
     124:	ldr	x0, [x0, #8]
     128:	add	x22, x22, #0x1
     12c:	ldr	x23, [x21, #8]
     130:	cbz	x0, 1dc <grub_mod_init-0xac>
     134:	mov	x21, x0
     138:	ldr	x0, [x21]
     13c:	cbz	x0, 1dc <grub_mod_init-0xac>
     140:	mov	w1, #0x3a                  	// #58
     144:	bl	0 <grub_strchr>
     148:	mov	x19, x0
     14c:	cbz	x0, 208 <grub_mod_init-0x80>
     150:	ldr	x0, [x21]
     154:	add	x1, sp, #0x48
     158:	mov	w2, #0xa                   	// #10
     15c:	bl	0 <grub_strtoul>
     160:	mov	x1, x0
     164:	ldr	x2, [sp, #72]
     168:	cmp	x19, x2
     16c:	b.ne	24c <grub_mod_init-0x3c>  // b.any
     170:	add	x0, x19, #0x1
     174:	cmp	x22, x1
     178:	b.ls	1fc <grub_mod_init-0x8c>  // b.plast
     17c:	lsl	x1, x1, #3
     180:	add	x19, x20, x1
     184:	ldr	w2, [x20, x1]
     188:	cmn	w2, #0x1
     18c:	b.eq	1fc <grub_mod_init-0x8c>  // b.none
     190:	ldrsw	x2, [x19, #4]
     194:	ldrb	w24, [x23, x2]
     198:	strb	wzr, [x23, x2]
     19c:	ldrsw	x1, [x20, x1]
     1a0:	add	x1, x23, x1
     1a4:	bl	0 <grub_env_set>
     1a8:	ldrsw	x1, [x19, #4]
     1ac:	mov	w19, w0
     1b0:	strb	w24, [x23, x1]
     1b4:	cbnz	w19, 1e0 <grub_mod_init-0xa8>
     1b8:	add	x21, x21, #0x8
     1bc:	b	138 <grub_mod_init-0x150>
     1c0:	add	x0, sp, #0x50
     1c4:	bl	11790 <regfree>
     1c8:	adrp	x0, 0 <grub_mod_init-0x288>
     1cc:	ldp	x21, x22, [sp, #32]
     1d0:	ldr	x0, [x0]
     1d4:	ldr	w19, [x0]
     1d8:	b	28 <grub_mod_init-0x260>
     1dc:	mov	w19, #0x0                   	// #0
     1e0:	add	x0, sp, #0x50
     1e4:	bl	11790 <regfree>
     1e8:	mov	x0, x20
     1ec:	bl	0 <grub_free>
     1f0:	ldp	x21, x22, [sp, #32]
     1f4:	ldp	x23, x24, [sp, #48]
     1f8:	b	28 <grub_mod_init-0x260>
     1fc:	add	x21, x21, #0x8
     200:	bl	0 <grub_env_unset>
     204:	b	138 <grub_mod_init-0x150>
     208:	cmp	x22, #0x1
     20c:	ldr	x0, [x21]
     210:	b.ls	1fc <grub_mod_init-0x8c>  // b.plast
     214:	ldr	w1, [x20, #8]
     218:	cmn	w1, #0x1
     21c:	b.eq	1fc <grub_mod_init-0x8c>  // b.none
     220:	ldrsw	x1, [x20, #12]
     224:	ldrb	w24, [x23, x1]
     228:	strb	wzr, [x23, x1]
     22c:	ldrsw	x1, [x20, #8]
     230:	add	x1, x23, x1
     234:	bl	0 <grub_env_set>
     238:	ldrsw	x1, [x20, #12]
     23c:	mov	w19, w0
     240:	strb	w24, [x23, x1]
     244:	cbz	w19, 1b8 <grub_mod_init-0xd0>
     248:	b	1e0 <grub_mod_init-0xa8>
     24c:	adrp	x1, 0 <grub_mod_init-0x288>
     250:	mov	w0, #0x12                  	// #18
     254:	ldr	x2, [x21]
     258:	ldr	x1, [x1]
     25c:	bl	0 <grub_error>
     260:	mov	w19, w0
     264:	b	1e0 <grub_mod_init-0xa8>
	...

0000000000000288 <grub_mod_init>:
     288:	stp	x29, x30, [sp, #-16]!
     28c:	adrp	x5, 0 <grub_mod_init-0x288>
     290:	adrp	x4, 0 <grub_mod_init-0x288>
     294:	adrp	x3, 0 <grub_mod_init-0x288>
     298:	adrp	x1, 0 <grub_mod_init-0x288>
     29c:	adrp	x0, 0 <grub_mod_init-0x288>
     2a0:	mov	x29, sp
     2a4:	ldr	x5, [x5]
     2a8:	mov	w2, #0x0                   	// #0
     2ac:	ldr	x4, [x4]
     2b0:	ldr	x3, [x3]
     2b4:	ldr	x1, [x1]
     2b8:	ldr	x0, [x0]
     2bc:	bl	0 <grub_register_extcmd>
     2c0:	adrp	x3, 0 <grub_mod_init-0x288>
     2c4:	adrp	x1, 0 <grub_mod_init-0x288>
     2c8:	adrp	x2, 0 <grub_mod_init-0x288>
     2cc:	ldr	x3, [x3]
     2d0:	ldr	x1, [x1]
     2d4:	ldr	x2, [x2]
     2d8:	str	x0, [x3]
     2dc:	str	x2, [x1]
     2e0:	ldp	x29, x30, [sp], #16
     2e4:	ret
	...

0000000000000328 <grub_mod_fini>:
     328:	stp	x29, x30, [sp, #-16]!
     32c:	adrp	x0, 0 <grub_mod_init-0x288>
     330:	mov	x29, sp
     334:	ldr	x0, [x0]
     338:	ldr	x0, [x0]
     33c:	bl	0 <grub_unregister_extcmd>
     340:	adrp	x0, 0 <grub_mod_init-0x288>
     344:	ldr	x0, [x0]
     348:	str	xzr, [x0]
     34c:	ldp	x29, x30, [sp], #16
     350:	ret
     354:	nop
	...
     368:	stp	x29, x30, [sp, #-32]!
     36c:	mov	x29, sp
     370:	str	x19, [sp, #16]
     374:	mov	x19, x2
     378:	mov	x2, x1
     37c:	ldr	x1, [x19]
     380:	ldrb	w3, [x1]
     384:	cbz	w3, 41c <grub_mod_fini+0xf4>
     388:	ldrb	w2, [x2]
     38c:	tbz	w2, #2, 414 <grub_mod_fini+0xec>
     390:	ldrb	w4, [x0]
     394:	mov	x6, x0
     398:	cbz	w4, 434 <grub_mod_fini+0x10c>
     39c:	nop
     3a0:	sub	w2, w4, #0x41
     3a4:	sub	w7, w3, #0x41
     3a8:	cmp	w2, #0x1a
     3ac:	add	w5, w4, #0x20
     3b0:	csel	w5, w5, w4, cc  // cc = lo, ul, last
     3b4:	add	w0, w3, #0x20
     3b8:	cmp	w7, #0x1a
     3bc:	mov	w7, w4
     3c0:	csel	w3, w0, w3, cc  // cc = lo, ul, last
     3c4:	cmp	w3, w5
     3c8:	b.ne	43c <grub_mod_fini+0x114>  // b.any
     3cc:	ldrb	w4, [x6, #1]!
     3d0:	ldrb	w3, [x1, #1]!
     3d4:	cbz	w4, 434 <grub_mod_fini+0x10c>
     3d8:	cbnz	w3, 3a0 <grub_mod_fini+0x78>
     3dc:	sub	w0, w4, #0x41
     3e0:	cmp	w0, #0x19
     3e4:	b.hi	404 <grub_mod_fini+0xdc>  // b.pmore
     3e8:	add	w7, w4, #0x20
     3ec:	sub	w1, w3, #0x41
     3f0:	add	w0, w3, #0x20
     3f4:	cmp	w1, #0x1a
     3f8:	csel	w3, w0, w3, cc  // cc = lo, ul, last
     3fc:	cmp	w7, w3
     400:	b.eq	41c <grub_mod_fini+0xf4>  // b.none
     404:	mov	w0, #0x0                   	// #0
     408:	ldr	x19, [sp, #16]
     40c:	ldp	x29, x30, [sp], #32
     410:	ret
     414:	bl	0 <grub_strcmp>
     418:	cbnz	w0, 404 <grub_mod_fini+0xdc>
     41c:	mov	w1, #0x1                   	// #1
     420:	str	w1, [x19, #8]
     424:	mov	w0, w1
     428:	ldr	x19, [sp, #16]
     42c:	ldp	x29, x30, [sp], #32
     430:	ret
     434:	mov	w7, #0x0                   	// #0
     438:	b	3ec <grub_mod_fini+0xc4>
     43c:	ldrb	w3, [x1]
     440:	cmp	w2, #0x19
     444:	b.ls	3e8 <grub_mod_fini+0xc0>  // b.plast
     448:	b	3ec <grub_mod_fini+0xc4>
     44c:	nop
     450:	stp	x29, x30, [sp, #-64]!
     454:	mov	x29, sp
     458:	stp	x19, x20, [sp, #16]
     45c:	mov	x19, x1
     460:	ldr	w1, [x1, #8]
     464:	stp	x21, x22, [sp, #32]
     468:	mov	x21, x0
     46c:	cbz	w1, 494 <grub_mod_fini+0x16c>
     470:	mov	w1, #0x2c                  	// #44
     474:	mov	w20, #0x0                   	// #0
     478:	bl	0 <grub_strchr>
     47c:	cbz	x0, 494 <grub_mod_fini+0x16c>
     480:	mov	w0, w20
     484:	ldp	x19, x20, [sp, #16]
     488:	ldp	x21, x22, [sp, #32]
     48c:	ldp	x29, x30, [sp], #64
     490:	ret
     494:	adrp	x0, 0 <grub_mod_init-0x288>
     498:	mov	x1, x21
     49c:	mov	w20, #0x1                   	// #1
     4a0:	ldr	x0, [x0]
     4a4:	bl	0 <grub_xasprintf>
     4a8:	mov	x21, x0
     4ac:	cbz	x0, 480 <grub_mod_fini+0x158>
     4b0:	adrp	x1, 0 <grub_mod_init-0x288>
     4b4:	adrp	x2, 0 <grub_mod_init-0x288>
     4b8:	adrp	x0, 0 <grub_mod_init-0x288>
     4bc:	str	x23, [sp, #48]
     4c0:	ldr	x3, [x1]
     4c4:	mov	x4, x21
     4c8:	ldr	x22, [x0]
     4cc:	mov	w1, #0xee                  	// #238
     4d0:	ldr	x23, [x2]
     4d4:	mov	x0, x22
     4d8:	mov	x2, x23
     4dc:	bl	0 <grub_real_dprintf>
     4e0:	ldr	x0, [x19]
     4e4:	mov	x1, x21
     4e8:	mov	w4, #0x0                   	// #0
     4ec:	mov	x3, #0x0                   	// #0
     4f0:	mov	x2, #0x0                   	// #0
     4f4:	bl	117d8 <regexec>
     4f8:	mov	w20, w0
     4fc:	cbnz	w0, 54c <grub_mod_fini+0x224>
     500:	ldr	w1, [x19, #12]
     504:	ldr	x0, [x19, #16]
     508:	add	w1, w1, #0x2
     50c:	sbfiz	x1, x1, #3, #32
     510:	bl	0 <grub_realloc>
     514:	cbz	x0, 588 <grub_mod_fini+0x260>
     518:	ldr	w1, [x19, #12]
     51c:	ldr	x23, [sp, #48]
     520:	add	w2, w1, #0x1
     524:	str	w2, [x19, #12]
     528:	add	x2, x0, w1, sxtw #3
     52c:	str	x0, [x19, #16]
     530:	str	x21, [x0, w1, sxtw #3]
     534:	mov	w0, w20
     538:	str	xzr, [x2, #8]
     53c:	ldp	x19, x20, [sp, #16]
     540:	ldp	x21, x22, [sp, #32]
     544:	ldp	x29, x30, [sp], #64
     548:	ret
     54c:	adrp	x3, 0 <grub_mod_init-0x288>
     550:	mov	x2, x23
     554:	mov	w1, #0xf1                  	// #241
     558:	mov	x0, x22
     55c:	ldr	x3, [x3]
     560:	mov	w20, #0x0                   	// #0
     564:	bl	0 <grub_real_dprintf>
     568:	mov	x0, x21
     56c:	bl	0 <grub_free>
     570:	mov	w0, w20
     574:	ldp	x19, x20, [sp, #16]
     578:	ldp	x21, x22, [sp, #32]
     57c:	ldr	x23, [sp, #48]
     580:	ldp	x29, x30, [sp], #64
     584:	ret
     588:	mov	x0, x21
     58c:	mov	w20, #0x1                   	// #1
     590:	bl	0 <grub_free>
     594:	ldr	x23, [sp, #48]
     598:	b	480 <grub_mod_fini+0x158>
     59c:	nop
	...
     5c8:	stp	x29, x30, [sp, #-112]!
     5cc:	mov	x29, sp
     5d0:	stp	x19, x20, [sp, #16]
     5d4:	mov	x19, x1
     5d8:	mov	x20, x0
     5dc:	stp	x21, x22, [sp, #32]
     5e0:	stp	x23, x24, [sp, #48]
     5e4:	stp	x25, x26, [sp, #64]
     5e8:	mov	x25, x2
     5ec:	str	x3, [sp, #80]
     5f0:	stp	xzr, xzr, [sp, #88]
     5f4:	str	xzr, [sp, #104]
     5f8:	bl	0 <grub_error_push>
     5fc:	mov	x0, x20
     600:	bl	0 <grub_strlen>
     604:	add	x3, x25, w0, uxtw
     608:	mov	w22, w0
     60c:	sub	x3, x3, x19
     610:	and	x24, x0, #0xffffffff
     614:	add	w0, w3, #0x1
     618:	bl	0 <grub_malloc>
     61c:	mov	x23, x0
     620:	cbz	x0, 790 <grub_mod_fini+0x468>
     624:	mov	x1, x20
     628:	bl	0 <grub_strcpy>
     62c:	cmp	x19, x25
     630:	adrp	x26, 0 <grub_mod_init-0x288>
     634:	b.cc	64c <grub_mod_fini+0x324>  // b.lo, b.ul, b.last
     638:	b	7e0 <grub_mod_fini+0x4b8>
     63c:	strb	w20, [x24]
     640:	mov	x19, x21
     644:	cmp	x25, x19
     648:	b.ls	690 <grub_mod_fini+0x368>  // b.plast
     64c:	mov	x21, x19
     650:	add	x24, x23, w22, uxtw
     654:	add	w22, w22, #0x1
     658:	ldrb	w20, [x21], #1
     65c:	cmp	w20, #0x5c
     660:	cbz	w20, 694 <grub_mod_fini+0x36c>
     664:	b.ne	63c <grub_mod_fini+0x314>  // b.any
     668:	ldrb	w1, [x19, #1]
     66c:	ldr	x0, [x26]
     670:	bl	0 <grub_strchr>
     674:	cbz	x0, 63c <grub_mod_fini+0x314>
     678:	ldrb	w0, [x19, #1]
     67c:	add	x19, x19, #0x2
     680:	strb	w0, [x24]
     684:	cmp	x25, x19
     688:	b.hi	64c <grub_mod_fini+0x324>  // b.pmore
     68c:	nop
     690:	add	x24, x23, w22, uxtw
     694:	strb	wzr, [x24]
     698:	mov	x0, x23
     69c:	str	x23, [sp, #104]
     6a0:	bl	0 <grub_file_get_device_name>
     6a4:	mov	x23, x0
     6a8:	bl	0 <grub_device_open>
     6ac:	mov	x20, x0
     6b0:	cbz	x0, 7cc <grub_mod_fini+0x4a4>
     6b4:	bl	0 <grub_fs_probe>
     6b8:	mov	x19, x0
     6bc:	cbz	x0, 724 <grub_mod_fini+0x3fc>
     6c0:	ldr	x1, [sp, #104]
     6c4:	ldrb	w0, [x1]
     6c8:	cmp	w0, #0x28
     6cc:	b.eq	7b4 <grub_mod_fini+0x48c>  // b.none
     6d0:	adrp	x0, 0 <grub_mod_init-0x288>
     6d4:	add	x3, sp, #0x50
     6d8:	ldr	x4, [x19, #24]
     6dc:	ldr	x2, [x0]
     6e0:	mov	x0, x20
     6e4:	blr	x4
     6e8:	cbnz	w0, 724 <grub_mod_fini+0x3fc>
     6ec:	ldr	x0, [sp, #104]
     6f0:	bl	0 <grub_free>
     6f4:	mov	x0, x20
     6f8:	bl	0 <grub_device_close>
     6fc:	mov	x0, x23
     700:	bl	0 <grub_free>
     704:	bl	0 <grub_error_pop>
     708:	ldp	x19, x20, [sp, #16]
     70c:	ldp	x21, x22, [sp, #32]
     710:	ldp	x23, x24, [sp, #48]
     714:	ldp	x25, x26, [sp, #64]
     718:	ldr	x0, [sp, #88]
     71c:	ldp	x29, x30, [sp], #112
     720:	ret
     724:	ldr	x0, [sp, #104]
     728:	bl	0 <grub_free>
     72c:	ldr	x1, [sp, #88]
     730:	cbz	x1, 7d4 <grub_mod_fini+0x4ac>
     734:	mov	x19, #0x0                   	// #0
     738:	b	748 <grub_mod_fini+0x420>
     73c:	bl	0 <grub_free>
     740:	ldr	x1, [sp, #88]
     744:	cbz	x1, 754 <grub_mod_fini+0x42c>
     748:	ldr	x0, [x1, x19]
     74c:	add	x19, x19, #0x8
     750:	cbnz	x0, 73c <grub_mod_fini+0x414>
     754:	mov	x0, x1
     758:	bl	0 <grub_free>
     75c:	cbz	x20, 768 <grub_mod_fini+0x440>
     760:	mov	x0, x20
     764:	bl	0 <grub_device_close>
     768:	mov	x0, x23
     76c:	bl	0 <grub_free>
     770:	bl	0 <grub_error_pop>
     774:	mov	x0, #0x0                   	// #0
     778:	ldp	x19, x20, [sp, #16]
     77c:	ldp	x21, x22, [sp, #32]
     780:	ldp	x23, x24, [sp, #48]
     784:	ldp	x25, x26, [sp, #64]
     788:	ldp	x29, x30, [sp], #112
     78c:	ret
     790:	mov	x0, #0x0                   	// #0
     794:	str	xzr, [sp, #104]
     798:	bl	0 <grub_free>
     79c:	mov	x20, #0x0                   	// #0
     7a0:	ldr	x1, [sp, #88]
     7a4:	cbnz	x1, 734 <grub_mod_fini+0x40c>
     7a8:	mov	x0, #0x0                   	// #0
     7ac:	bl	0 <grub_free>
     7b0:	b	768 <grub_mod_fini+0x440>
     7b4:	mov	x0, x1
     7b8:	mov	w1, #0x29                  	// #41
     7bc:	bl	0 <grub_strchr>
     7c0:	cbz	x0, 724 <grub_mod_fini+0x3fc>
     7c4:	add	x1, x0, #0x1
     7c8:	b	6d0 <grub_mod_fini+0x3a8>
     7cc:	ldr	x0, [sp, #104]
     7d0:	b	798 <grub_mod_fini+0x470>
     7d4:	mov	x0, #0x0                   	// #0
     7d8:	bl	0 <grub_free>
     7dc:	b	760 <grub_mod_fini+0x438>
     7e0:	add	x24, x23, x24
     7e4:	b	694 <grub_mod_fini+0x36c>
	...
     7f8:	stp	x29, x30, [sp, #-256]!
     7fc:	mov	x29, sp
     800:	stp	x21, x22, [sp, #32]
     804:	mov	x22, x0
     808:	str	xzr, [x1]
     80c:	str	x1, [sp, #144]
     810:	mov	w1, #0x2f                  	// #47
     814:	ldrb	w0, [x0]
     818:	and	w2, w0, #0xfffffffd
     81c:	cmp	w2, #0x28
     820:	ccmp	w0, w1, #0x4, ne  // ne = any
     824:	b.ne	e84 <grub_mod_fini+0xb5c>  // b.any
     828:	stp	x19, x20, [sp, #16]
     82c:	cbz	w0, 1064 <grub_mod_fini+0xd3c>
     830:	mov	x19, #0x2                   	// #2
     834:	mov	x20, #0x0                   	// #0
     838:	movk	x19, #0x5000, lsl #16
     83c:	stp	x23, x24, [sp, #48]
     840:	movk	x19, #0x7000, lsl #48
     844:	stp	x25, x26, [sp, #64]
     848:	stp	x27, x28, [sp, #80]
     84c:	str	wzr, [sp, #108]
     850:	mov	x21, x22
     854:	mov	x28, x22
     858:	mov	w2, #0x0                   	// #0
     85c:	mov	w3, #0x3f                  	// #63
     860:	b	884 <grub_mod_fini+0x55c>
     864:	cmp	w0, #0x2a
     868:	mov	x1, x28
     86c:	ccmp	w0, w3, #0x4, ne  // ne = any
     870:	b.ne	a5c <grub_mod_fini+0x734>  // b.any
     874:	add	x28, x28, #0x1
     878:	mov	w2, #0x1                   	// #1
     87c:	ldrb	w0, [x1, #1]
     880:	cbz	w0, 8a8 <grub_mod_fini+0x580>
     884:	cmp	w0, #0x5c
     888:	b.ne	864 <grub_mod_fini+0x53c>  // b.any
     88c:	ldrb	w0, [x28, #1]
     890:	add	x1, x28, #0x1
     894:	cbz	w0, a90 <grub_mod_fini+0x768>
     898:	ldrb	w0, [x1, #1]
     89c:	add	x28, x28, #0x2
     8a0:	cbnz	w0, 884 <grub_mod_fini+0x55c>
     8a4:	nop
     8a8:	cbnz	w2, a9c <grub_mod_fini+0x774>
     8ac:	adrp	x3, 0 <grub_mod_init-0x288>
     8b0:	adrp	x2, 0 <grub_mod_init-0x288>
     8b4:	adrp	x0, 0 <grub_mod_init-0x288>
     8b8:	mov	w1, #0x1fd                 	// #509
     8bc:	ldr	x2, [x2]
     8c0:	ldr	x0, [x0]
     8c4:	stp	x2, x0, [sp, #128]
     8c8:	ldr	x3, [x3]
     8cc:	bl	0 <grub_real_dprintf>
     8d0:	cbz	x20, f70 <grub_mod_fini+0xc48>
     8d4:	ldr	x23, [x20]
     8d8:	cbz	x23, f30 <grub_mod_fini+0xc08>
     8dc:	sub	x0, x28, x22
     8e0:	mov	w25, #0x0                   	// #0
     8e4:	mov	w24, #0x0                   	// #0
     8e8:	str	x0, [sp, #112]
     8ec:	nop
     8f0:	mov	x0, x23
     8f4:	bl	0 <grub_strlen>
     8f8:	mov	x26, x0
     8fc:	ldr	x0, [sp, #112]
     900:	add	x0, x26, x0
     904:	add	x0, x0, #0x1
     908:	bl	0 <grub_malloc>
     90c:	mov	x21, x0
     910:	cbz	x0, e94 <grub_mod_fini+0xb6c>
     914:	mov	x2, x26
     918:	mov	x1, x23
     91c:	bl	0 <grub_memmove>
     920:	add	x5, x21, x26
     924:	cmp	x22, x28
     928:	b.cs	96c <grub_mod_fini+0x644>  // b.hs, b.nlast
     92c:	mov	x3, x5
     930:	mov	x2, x22
     934:	b	94c <grub_mod_fini+0x624>
     938:	strb	w4, [x1], #1
     93c:	mov	x2, x0
     940:	cmp	x2, x28
     944:	mov	x3, x1
     948:	b.cs	de8 <grub_mod_fini+0xac0>  // b.hs, b.nlast
     94c:	mov	x0, x2
     950:	mov	x1, x3
     954:	mov	x5, x3
     958:	ldrb	w4, [x0], #1
     95c:	cmp	w4, #0x5c
     960:	b.ne	938 <grub_mod_fini+0x610>  // b.any
     964:	cmp	x28, x0
     968:	b.hi	dd0 <grub_mod_fini+0xaa8>  // b.pmore
     96c:	ldr	w0, [sp, #108]
     970:	strb	wzr, [x5]
     974:	cbz	w0, a18 <grub_mod_fini+0x6f0>
     978:	mov	x0, x21
     97c:	mov	w1, #0x2f                  	// #47
     980:	bl	0 <grub_strrchr>
     984:	mov	x27, x0
     988:	cbz	x0, a18 <grub_mod_fini+0x6f0>
     98c:	mov	x26, x0
     990:	mov	x0, x21
     994:	strb	wzr, [x26], #1
     998:	str	wzr, [sp, #176]
     99c:	str	x26, [sp, #168]
     9a0:	bl	0 <grub_file_get_device_name>
     9a4:	bl	0 <grub_device_open>
     9a8:	cbz	x0, e18 <grub_mod_fini+0xaf0>
     9ac:	str	x0, [sp, #120]
     9b0:	bl	0 <grub_fs_probe>
     9b4:	mov	x2, x0
     9b8:	ldr	x3, [sp, #120]
     9bc:	cbz	x0, e18 <grub_mod_fini+0xaf0>
     9c0:	ldrb	w0, [x21]
     9c4:	mov	x1, x21
     9c8:	cmp	w0, #0x28
     9cc:	b.eq	df0 <grub_mod_fini+0xac8>  // b.none
     9d0:	adrp	x8, 0 <grub_mod_init-0x288>
     9d4:	adrp	x9, 0 <grub_mod_init-0x288>
     9d8:	ldr	x7, [x2, #24]
     9dc:	cmp	w0, #0x0
     9e0:	ldr	x2, [x8]
     9e4:	ldr	x0, [x9]
     9e8:	csel	x1, x1, x0, ne  // ne = any
     9ec:	mov	x0, x3
     9f0:	add	x3, sp, #0xa8
     9f4:	blr	x7
     9f8:	adrp	x0, 0 <grub_mod_init-0x288>
     9fc:	ldr	x0, [x0]
     a00:	ldr	w1, [x0]
     a04:	cbnz	w1, d94 <grub_mod_fini+0xa6c>
     a08:	ldrb	w1, [x27, #1]
     a0c:	cbnz	w1, d94 <grub_mod_fini+0xa6c>
     a10:	mov	w0, #0x2f                  	// #47
     a14:	strb	w0, [x27]
     a18:	mov	x0, x23
     a1c:	bl	0 <grub_free>
     a20:	str	x21, [x20, w25, sxtw #3]
     a24:	add	w25, w25, #0x1
     a28:	add	w24, w24, #0x1
     a2c:	ldr	x23, [x20, w24, uxtw #3]
     a30:	cbnz	x23, 8f0 <grub_mod_fini+0x5c8>
     a34:	cbz	w25, f30 <grub_mod_fini+0xc08>
     a38:	str	xzr, [x20, w25, sxtw #3]
     a3c:	adrp	x1, 0 <grub_mod_init-0x288>
     a40:	mov	x22, x28
     a44:	ldp	x2, x0, [sp, #128]
     a48:	ldr	x3, [x1]
     a4c:	mov	w1, #0x238                 	// #568
     a50:	ldr	x4, [x20]
     a54:	bl	0 <grub_real_dprintf>
     a58:	b	bf4 <grub_mod_fini+0x8cc>
     a5c:	cmp	w0, #0x2f
     a60:	eor	w0, w2, #0x1
     a64:	cset	w1, eq  // eq = none
     a68:	csel	w0, w0, wzr, eq  // eq = none
     a6c:	cbz	w0, a84 <grub_mod_fini+0x75c>
     a70:	add	x21, x28, #0x1
     a74:	mov	x1, x28
     a78:	mov	w2, #0x0                   	// #0
     a7c:	mov	x28, x21
     a80:	b	87c <grub_mod_fini+0x554>
     a84:	tst	w1, w2
     a88:	b.ne	a9c <grub_mod_fini+0x774>  // b.any
     a8c:	nop
     a90:	mov	x1, x28
     a94:	add	x28, x28, #0x1
     a98:	b	87c <grub_mod_fini+0x554>
     a9c:	cmp	x28, x21
     aa0:	b.eq	8ac <grub_mod_fini+0x584>  // b.none
     aa4:	sub	x0, x28, x21
     aa8:	lsl	w0, w0, #1
     aac:	add	w0, w0, #0x3
     ab0:	bl	0 <grub_malloc>
     ab4:	mov	x24, x0
     ab8:	cbz	x0, e7c <grub_mod_fini+0xb54>
     abc:	mov	w0, #0x5e                  	// #94
     ac0:	strb	w0, [x24]
     ac4:	cmp	x28, x21
     ac8:	b.ls	f64 <grub_mod_fini+0xc3c>  // b.plast
     acc:	mov	x0, x21
     ad0:	mov	w3, #0x1                   	// #1
     ad4:	mov	w11, #0x5c                  	// #92
     ad8:	mov	x5, #0x1                   	// #1
     adc:	mov	w10, #0x2e                  	// #46
     ae0:	b	b10 <grub_mod_fini+0x7e8>
     ae4:	sub	w1, w2, #0x3f
     ae8:	lsl	x1, x5, x1
     aec:	tst	x1, x19
     af0:	b.ne	c20 <grub_mod_fini+0x8f8>  // b.any
     af4:	tbnz	w1, #0, c6c <grub_mod_fini+0x944>
     af8:	tbnz	w1, #29, c4c <grub_mod_fini+0x924>
     afc:	mov	w3, w7
     b00:	mov	x0, x4
     b04:	strb	w2, [x24, x8]
     b08:	cmp	x28, x0
     b0c:	b.ls	b58 <grub_mod_fini+0x830>  // b.plast
     b10:	mov	x4, x0
     b14:	add	w7, w3, #0x1
     b18:	sxtw	x8, w3
     b1c:	add	x9, x24, w7, sxtw
     b20:	ldrb	w2, [x4], #1
     b24:	cmp	w2, #0x7d
     b28:	b.hi	afc <grub_mod_fini+0x7d4>  // b.pmore
     b2c:	cmp	w2, #0x3e
     b30:	b.hi	ae4 <grub_mod_fini+0x7bc>  // b.pmore
     b34:	cmp	w2, #0x2a
     b38:	b.ne	c0c <grub_mod_fini+0x8e4>  // b.any
     b3c:	strb	w10, [x24, x8]
     b40:	add	w3, w3, #0x2
     b44:	strb	w2, [x24, w7, sxtw]
     b48:	mov	x0, x4
     b4c:	add	x9, x24, w3, sxtw
     b50:	cmp	x28, x0
     b54:	b.hi	b10 <grub_mod_fini+0x7e8>  // b.pmore
     b58:	add	w1, w3, #0x1
     b5c:	sxtw	x1, w1
     b60:	adrp	x3, 0 <grub_mod_init-0x288>
     b64:	adrp	x2, 0 <grub_mod_init-0x288>
     b68:	adrp	x0, 0 <grub_mod_init-0x288>
     b6c:	mov	w4, #0x24                  	// #36
     b70:	ldr	x2, [x2]
     b74:	strb	w4, [x9]
     b78:	ldr	x0, [x0]
     b7c:	strb	wzr, [x24, x1]
     b80:	ldr	x3, [x3]
     b84:	mov	x4, x24
     b88:	mov	w1, #0xa4                  	// #164
     b8c:	add	x23, sp, #0xc0
     b90:	bl	0 <grub_real_dprintf>
     b94:	mov	w2, #0xb24d                	// #45645
     b98:	mov	x0, x23
     b9c:	mov	x1, x24
     ba0:	movk	w2, #0x23, lsl #16
     ba4:	bl	115d8 <regcomp>
     ba8:	cbnz	w0, e68 <grub_mod_fini+0xb40>
     bac:	mov	x0, x24
     bb0:	bl	0 <grub_free>
     bb4:	cbnz	x20, c88 <grub_mod_fini+0x960>
     bb8:	cmp	x22, x21
     bbc:	b.eq	ef0 <grub_mod_fini+0xbc8>  // b.none
     bc0:	adrp	x0, 0 <grub_mod_init-0x288>
     bc4:	mov	x2, x21
     bc8:	mov	x1, x22
     bcc:	mov	x3, x23
     bd0:	ldr	x0, [x0]
     bd4:	bl	5c8 <grub_mod_fini+0x2a0>
     bd8:	mov	x20, x0
     bdc:	mov	x0, x23
     be0:	bl	11790 <regfree>
     be4:	cbz	x20, 1058 <grub_mod_fini+0xd30>
     be8:	mov	x22, x28
     bec:	mov	w0, #0x1                   	// #1
     bf0:	str	w0, [sp, #108]
     bf4:	ldrb	w0, [x28]
     bf8:	cbnz	w0, 850 <grub_mod_fini+0x528>
     bfc:	ldp	x23, x24, [sp, #48]
     c00:	ldp	x25, x26, [sp, #64]
     c04:	ldp	x27, x28, [sp, #80]
     c08:	b	f48 <grub_mod_fini+0xc20>
     c0c:	b.ls	c38 <grub_mod_fini+0x910>  // b.plast
     c10:	cmp	w2, #0x2b
     c14:	b.eq	c20 <grub_mod_fini+0x8f8>  // b.none
     c18:	cmp	w2, #0x2e
     c1c:	b.ne	afc <grub_mod_fini+0x7d4>  // b.any
     c20:	add	w3, w3, #0x2
     c24:	strb	w11, [x24, x8]
     c28:	mov	x0, x4
     c2c:	strb	w2, [x24, w7, sxtw]
     c30:	add	x9, x24, w3, sxtw
     c34:	b	b08 <grub_mod_fini+0x7e0>
     c38:	sub	w0, w2, #0x28
     c3c:	and	w0, w0, #0xff
     c40:	cmp	w0, #0x1
     c44:	b.hi	afc <grub_mod_fini+0x7d4>  // b.pmore
     c48:	b	c20 <grub_mod_fini+0x8f8>
     c4c:	strb	w11, [x24, x8]
     c50:	ldrb	w1, [x0, #1]
     c54:	cbz	w1, c7c <grub_mod_fini+0x954>
     c58:	add	w3, w3, #0x2
     c5c:	add	x0, x0, #0x2
     c60:	strb	w1, [x24, w7, sxtw]
     c64:	add	x9, x24, w3, sxtw
     c68:	b	b08 <grub_mod_fini+0x7e0>
     c6c:	mov	w3, w7
     c70:	mov	x0, x4
     c74:	strb	w10, [x24, x8]
     c78:	b	b08 <grub_mod_fini+0x7e0>
     c7c:	mov	w3, w7
     c80:	mov	x0, x4
     c84:	b	b08 <grub_mod_fini+0x7e0>
     c88:	ldr	x0, [x20]
     c8c:	cbz	x0, 103c <grub_mod_fini+0xd14>
     c90:	mov	x24, x20
     c94:	mov	x27, #0x0                   	// #0
     c98:	mov	w26, #0x0                   	// #0
     c9c:	nop
     ca0:	mov	x3, x23
     ca4:	mov	x2, x21
     ca8:	mov	x1, x22
     cac:	bl	5c8 <grub_mod_fini+0x2a0>
     cb0:	mov	x25, x0
     cb4:	ldr	x0, [x24]
     cb8:	bl	0 <grub_free>
     cbc:	cbz	x25, d6c <grub_mod_fini+0xa44>
     cc0:	cbz	x27, d8c <grub_mod_fini+0xa64>
     cc4:	ldr	x0, [x27]
     cc8:	cbz	x0, e28 <grub_mod_fini+0xb00>
     ccc:	sub	x0, x27, #0x8
     cd0:	mov	x1, #0x1                   	// #1
     cd4:	nop
     cd8:	mov	w24, w1
     cdc:	add	x1, x1, #0x1
     ce0:	ldr	x2, [x0, x1, lsl #3]
     ce4:	cbnz	x2, cd8 <grub_mod_fini+0x9b0>
     ce8:	ldr	x0, [x25]
     cec:	cbz	x0, e34 <grub_mod_fini+0xb0c>
     cf0:	sub	x3, x25, #0x8
     cf4:	mov	x1, #0x1                   	// #1
     cf8:	mov	w0, w1
     cfc:	add	x1, x1, #0x1
     d00:	ldr	x2, [x3, x1, lsl #3]
     d04:	cbnz	x2, cf8 <grub_mod_fini+0x9d0>
     d08:	add	w1, w0, w24
     d0c:	mov	x0, x27
     d10:	add	w1, w1, #0x1
     d14:	sbfiz	x1, x1, #3, #32
     d18:	bl	0 <grub_realloc>
     d1c:	mov	x5, x0
     d20:	cbz	x0, e50 <grub_mod_fini+0xb28>
     d24:	ldr	x2, [x25]
     d28:	cbz	x2, d5c <grub_mod_fini+0xa34>
     d2c:	sxtw	x3, w24
     d30:	add	w1, w24, #0x1
     d34:	mvn	x3, x3
     d38:	sub	x4, x0, #0x8
     d3c:	sxtw	x1, w1
     d40:	add	x3, x25, x3, lsl #3
     d44:	nop
     d48:	mov	w24, w1
     d4c:	str	x2, [x4, x1, lsl #3]
     d50:	add	x1, x1, #0x1
     d54:	ldr	x2, [x3, x1, lsl #3]
     d58:	cbnz	x2, d48 <grub_mod_fini+0xa20>
     d5c:	str	xzr, [x5, w24, sxtw #3]
     d60:	mov	x0, x25
     d64:	mov	x27, x5
     d68:	bl	0 <grub_free>
     d6c:	add	w26, w26, #0x1
     d70:	add	x24, x20, w26, uxtw #3
     d74:	ldr	x0, [x20, w26, uxtw #3]
     d78:	cbnz	x0, ca0 <grub_mod_fini+0x978>
     d7c:	mov	x0, x20
     d80:	mov	x20, x27
     d84:	bl	0 <grub_free>
     d88:	b	bdc <grub_mod_fini+0x8b4>
     d8c:	mov	x27, x25
     d90:	b	d6c <grub_mod_fini+0xa44>
     d94:	ldr	w1, [sp, #176]
     d98:	str	wzr, [x0]
     d9c:	cbnz	w1, a10 <grub_mod_fini+0x6e8>
     da0:	adrp	x0, 0 <grub_mod_init-0x288>
     da4:	mov	x4, x26
     da8:	mov	x5, x21
     dac:	mov	w1, #0x226                 	// #550
     db0:	ldr	x3, [x0]
     db4:	ldp	x2, x0, [sp, #128]
     db8:	bl	0 <grub_real_dprintf>
     dbc:	mov	x0, x23
     dc0:	bl	0 <grub_free>
     dc4:	mov	x0, x21
     dc8:	bl	0 <grub_free>
     dcc:	b	a28 <grub_mod_fini+0x700>
     dd0:	ldrb	w0, [x2, #1]
     dd4:	add	x2, x2, #0x2
     dd8:	strb	w0, [x1], #1
     ddc:	cmp	x2, x28
     de0:	mov	x3, x1
     de4:	b.cc	94c <grub_mod_fini+0x624>  // b.lo, b.ul, b.last
     de8:	mov	x5, x1
     dec:	b	96c <grub_mod_fini+0x644>
     df0:	mov	w1, #0x29                  	// #41
     df4:	mov	x0, x21
     df8:	str	x3, [sp, #120]
     dfc:	str	x2, [sp, #152]
     e00:	bl	0 <grub_strchr>
     e04:	mov	x1, x0
     e08:	ldr	x3, [sp, #120]
     e0c:	ldr	x2, [sp, #152]
     e10:	cbnz	x0, f24 <grub_mod_fini+0xbfc>
     e14:	nop
     e18:	adrp	x0, 0 <grub_mod_init-0x288>
     e1c:	ldr	w1, [sp, #176]
     e20:	ldr	x0, [x0]
     e24:	b	d98 <grub_mod_fini+0xa70>
     e28:	ldr	x0, [x25]
     e2c:	mov	w24, #0x0                   	// #0
     e30:	cbnz	x0, cf0 <grub_mod_fini+0x9c8>
     e34:	mov	w1, w24
     e38:	mov	x0, x27
     e3c:	add	w1, w1, #0x1
     e40:	sbfiz	x1, x1, #3, #32
     e44:	bl	0 <grub_realloc>
     e48:	mov	x5, x0
     e4c:	cbnz	x0, d24 <grub_mod_fini+0x9fc>
     e50:	mov	x0, x27
     e54:	bl	0 <grub_free>
     e58:	mov	x0, x25
     e5c:	bl	0 <grub_free>
     e60:	ldr	x0, [x20]
     e64:	b	e9c <grub_mod_fini+0xb74>
     e68:	mov	x0, x24
     e6c:	bl	0 <grub_free>
     e70:	cbz	x20, eb8 <grub_mod_fini+0xb90>
     e74:	ldr	x0, [x20]
     e78:	b	e9c <grub_mod_fini+0xb74>
     e7c:	add	x23, sp, #0xc0
     e80:	b	e70 <grub_mod_fini+0xb48>
     e84:	mov	w0, #0x0                   	// #0
     e88:	ldp	x21, x22, [sp, #32]
     e8c:	ldp	x29, x30, [sp], #256
     e90:	ret
     e94:	ldr	x0, [x20]
     e98:	add	x23, sp, #0xc0
     e9c:	mov	w19, #0x0                   	// #0
     ea0:	cbz	x0, eb8 <grub_mod_fini+0xb90>
     ea4:	nop
     ea8:	add	w19, w19, #0x1
     eac:	bl	0 <grub_free>
     eb0:	ldr	x0, [x20, w19, uxtw #3]
     eb4:	cbnz	x0, ea8 <grub_mod_fini+0xb80>
     eb8:	mov	x0, x20
     ebc:	bl	0 <grub_free>
     ec0:	mov	x0, x23
     ec4:	bl	11790 <regfree>
     ec8:	adrp	x0, 0 <grub_mod_init-0x288>
     ecc:	ldp	x19, x20, [sp, #16]
     ed0:	ldr	x0, [x0]
     ed4:	ldp	x21, x22, [sp, #32]
     ed8:	ldr	w0, [x0]
     edc:	ldp	x23, x24, [sp, #48]
     ee0:	ldp	x25, x26, [sp, #64]
     ee4:	ldp	x27, x28, [sp, #80]
     ee8:	ldp	x29, x30, [sp], #256
     eec:	ret
     ef0:	ldrb	w2, [x22]
     ef4:	adrp	x0, 0 <grub_mod_init-0x288>
     ef8:	add	x1, sp, #0xa8
     efc:	str	x23, [sp, #168]
     f00:	cmp	w2, #0x28
     f04:	str	xzr, [sp, #184]
     f08:	ldr	x0, [x0]
     f0c:	cset	w2, ne  // ne = any
     f10:	stp	w2, wzr, [sp, #176]
     f14:	bl	0 <grub_device_iterate>
     f18:	cbnz	w0, ff0 <grub_mod_fini+0xcc8>
     f1c:	ldr	x20, [sp, #184]
     f20:	b	bdc <grub_mod_fini+0x8b4>
     f24:	ldrb	w0, [x0, #1]
     f28:	add	x1, x1, #0x1
     f2c:	b	9d0 <grub_mod_fini+0x6a8>
     f30:	mov	x0, x20
     f34:	bl	0 <grub_free>
     f38:	ldp	x23, x24, [sp, #48]
     f3c:	mov	x20, #0x0                   	// #0
     f40:	ldp	x25, x26, [sp, #64]
     f44:	ldp	x27, x28, [sp, #80]
     f48:	mov	w0, #0x0                   	// #0
     f4c:	ldr	x1, [sp, #144]
     f50:	ldp	x21, x22, [sp, #32]
     f54:	str	x20, [x1]
     f58:	ldp	x19, x20, [sp, #16]
     f5c:	ldp	x29, x30, [sp], #256
     f60:	ret
     f64:	add	x9, x24, #0x1
     f68:	mov	x1, #0x2                   	// #2
     f6c:	b	b60 <grub_mod_fini+0x838>
     f70:	mov	x0, #0x10                  	// #16
     f74:	bl	0 <grub_malloc>
     f78:	mov	x20, x0
     f7c:	cbz	x0, fe8 <grub_mod_fini+0xcc0>
     f80:	sub	x0, x28, x22
     f84:	add	x0, x0, #0x1
     f88:	bl	0 <grub_malloc>
     f8c:	str	x0, [x20]
     f90:	mov	x4, x0
     f94:	cbz	x0, fe8 <grub_mod_fini+0xcc0>
     f98:	cmp	x22, x28
     f9c:	b.cs	fdc <grub_mod_fini+0xcb4>  // b.hs, b.nlast
     fa0:	mov	x2, x0
     fa4:	b	fbc <grub_mod_fini+0xc94>
     fa8:	mov	x22, x0
     fac:	strb	w3, [x1], #1
     fb0:	cmp	x22, x28
     fb4:	mov	x2, x1
     fb8:	b.cs	1048 <grub_mod_fini+0xd20>  // b.hs, b.nlast
     fbc:	mov	x0, x22
     fc0:	mov	x1, x2
     fc4:	mov	x4, x2
     fc8:	ldrb	w3, [x0], #1
     fcc:	cmp	w3, #0x5c
     fd0:	b.ne	fa8 <grub_mod_fini+0xc80>  // b.any
     fd4:	cmp	x28, x0
     fd8:	b.hi	102c <grub_mod_fini+0xd04>  // b.pmore
     fdc:	strb	wzr, [x4]
     fe0:	str	xzr, [x20, #8]
     fe4:	b	a3c <grub_mod_fini+0x714>
     fe8:	add	x23, sp, #0xc0
     fec:	b	eb8 <grub_mod_fini+0xb90>
     ff0:	ldr	x1, [sp, #184]
     ff4:	mov	x19, #0x0                   	// #0
     ff8:	cbnz	x1, 100c <grub_mod_fini+0xce4>
     ffc:	b	1050 <grub_mod_fini+0xd28>
    1000:	bl	0 <grub_free>
    1004:	ldr	x1, [sp, #184]
    1008:	cbz	x1, 1050 <grub_mod_fini+0xd28>
    100c:	ldr	x0, [x1, x19]
    1010:	add	x19, x19, #0x8
    1014:	cbnz	x0, 1000 <grub_mod_fini+0xcd8>
    1018:	mov	x0, x1
    101c:	bl	0 <grub_free>
    1020:	mov	x0, x23
    1024:	bl	11790 <regfree>
    1028:	b	bfc <grub_mod_fini+0x8d4>
    102c:	ldrb	w0, [x22, #1]
    1030:	add	x22, x22, #0x2
    1034:	strb	w0, [x1], #1
    1038:	b	fb0 <grub_mod_fini+0xc88>
    103c:	mov	x0, x20
    1040:	mov	x20, #0x0                   	// #0
    1044:	b	101c <grub_mod_fini+0xcf4>
    1048:	mov	x4, x1
    104c:	b	fdc <grub_mod_fini+0xcb4>
    1050:	mov	x1, #0x0                   	// #0
    1054:	b	1018 <grub_mod_fini+0xcf0>
    1058:	ldp	x23, x24, [sp, #48]
    105c:	ldp	x25, x26, [sp, #64]
    1060:	ldp	x27, x28, [sp, #80]
    1064:	mov	x20, #0x0                   	// #0
    1068:	b	f48 <grub_mod_fini+0xc20>
    106c:	nop
	...
    10c8:	stp	x29, x30, [sp, #-64]!
    10cc:	adrp	x1, 0 <grub_mod_init-0x288>
    10d0:	mov	x29, sp
    10d4:	stp	x19, x20, [sp, #16]
    10d8:	mov	x19, x0
    10dc:	ldr	x0, [x1]
    10e0:	mov	x1, x19
    10e4:	stp	x21, x22, [sp, #32]
    10e8:	mov	x21, x2
    10ec:	bl	0 <grub_strcmp>
    10f0:	cbnz	w0, 110c <grub_mod_fini+0xde4>
    10f4:	mov	w20, #0x0                   	// #0
    10f8:	mov	w0, w20
    10fc:	ldp	x19, x20, [sp, #16]
    1100:	ldp	x21, x22, [sp, #32]
    1104:	ldp	x29, x30, [sp], #64
    1108:	ret
    110c:	adrp	x0, 0 <grub_mod_init-0x288>
    1110:	mov	x1, x19
    1114:	ldr	x0, [x0]
    1118:	bl	0 <grub_strcmp>
    111c:	cbz	w0, 10f4 <grub_mod_fini+0xdcc>
    1120:	adrp	x1, 0 <grub_mod_init-0x288>
    1124:	adrp	x2, 0 <grub_mod_init-0x288>
    1128:	adrp	x0, 0 <grub_mod_init-0x288>
    112c:	mov	x4, x19
    1130:	ldr	x3, [x1]
    1134:	mov	w1, #0x134                 	// #308
    1138:	ldr	x5, [x21, #24]
    113c:	str	x23, [sp, #48]
    1140:	ldr	x22, [x0]
    1144:	ldr	x23, [x2]
    1148:	mov	x0, x22
    114c:	mov	x2, x23
    1150:	bl	0 <grub_real_dprintf>
    1154:	ldr	x0, [x21]
    1158:	mov	x1, x19
    115c:	mov	w4, #0x0                   	// #0
    1160:	mov	x3, #0x0                   	// #0
    1164:	mov	x2, #0x0                   	// #0
    1168:	bl	117d8 <regexec>
    116c:	mov	w20, w0
    1170:	cbz	w0, 117c <grub_mod_fini+0xe54>
    1174:	ldr	x23, [sp, #48]
    1178:	b	10f4 <grub_mod_fini+0xdcc>
    117c:	adrp	x3, 0 <grub_mod_init-0x288>
    1180:	mov	x2, x23
    1184:	mov	x0, x22
    1188:	mov	w1, #0x138                 	// #312
    118c:	ldr	x3, [x3]
    1190:	bl	0 <grub_real_dprintf>
    1194:	adrp	x0, 0 <grub_mod_init-0x288>
    1198:	mov	x2, x19
    119c:	ldr	x1, [x21, #24]
    11a0:	ldr	x0, [x0]
    11a4:	bl	0 <grub_xasprintf>
    11a8:	mov	x19, x0
    11ac:	cbz	x0, 11e8 <grub_mod_fini+0xec0>
    11b0:	ldr	w1, [x21, #16]
    11b4:	ldr	x0, [x21, #8]
    11b8:	add	w1, w1, #0x2
    11bc:	lsl	x1, x1, #3
    11c0:	bl	0 <grub_realloc>
    11c4:	cbz	x0, 11f4 <grub_mod_fini+0xecc>
    11c8:	ldr	w2, [x21, #16]
    11cc:	ldr	x23, [sp, #48]
    11d0:	add	w1, w2, #0x1
    11d4:	str	x0, [x21, #8]
    11d8:	str	w1, [x21, #16]
    11dc:	str	x19, [x0, w2, uxtw #3]
    11e0:	str	xzr, [x0, w1, uxtw #3]
    11e4:	b	10f8 <grub_mod_fini+0xdd0>
    11e8:	mov	w20, #0x1                   	// #1
    11ec:	ldr	x23, [sp, #48]
    11f0:	b	10f8 <grub_mod_fini+0xdd0>
    11f4:	mov	x0, x19
    11f8:	mov	w20, #0x1                   	// #1
    11fc:	bl	0 <grub_free>
    1200:	ldr	x23, [sp, #48]
    1204:	b	10f8 <grub_mod_fini+0xdd0>
	...
    1240:	ldr	w4, [x1, #72]
    1244:	mov	x3, x0
    1248:	ldr	w0, [x1, #56]
    124c:	cmp	w4, w0
    1250:	b.le	12f8 <grub_mod_fini+0xfd0>
    1254:	ldr	x5, [x1, #8]
    1258:	sxtw	x7, w0
    125c:	ldr	w6, [x1, #104]
    1260:	ldrb	w4, [x5, w0, sxtw]
    1264:	cmp	w6, #0x1
    1268:	strb	w4, [x3]
    126c:	b.le	128c <grub_mod_fini+0xf64>
    1270:	ldr	w6, [x1, #44]
    1274:	cmp	w0, w6
    1278:	b.eq	128c <grub_mod_fini+0xf64>  // b.none
    127c:	ldr	x6, [x1, #16]
    1280:	ldr	w6, [x6, x7, lsl #2]
    1284:	cmn	w6, #0x1
    1288:	b.eq	12d0 <grub_mod_fini+0xfa8>  // b.none
    128c:	cmp	w4, #0x5c
    1290:	b.eq	12bc <grub_mod_fini+0xf94>  // b.none
    1294:	cmp	w4, #0x5b
    1298:	b.eq	1308 <grub_mod_fini+0xfe0>  // b.none
    129c:	cmp	w4, #0x5d
    12a0:	b.eq	1354 <grub_mod_fini+0x102c>  // b.none
    12a4:	cmp	w4, #0x5e
    12a8:	b.ne	12e0 <grub_mod_fini+0xfb8>  // b.any
    12ac:	mov	w1, #0x19                  	// #25
    12b0:	mov	w0, #0x1                   	// #1
    12b4:	strb	w1, [x3, #8]
    12b8:	ret
    12bc:	tbz	w2, #0, 12d0 <grub_mod_fini+0xfa8>
    12c0:	ldr	w4, [x1, #64]
    12c4:	add	w2, w0, #0x1
    12c8:	cmp	w2, w4
    12cc:	b.lt	1364 <grub_mod_fini+0x103c>  // b.tstop
    12d0:	mov	w1, #0x1                   	// #1
    12d4:	mov	w0, #0x1                   	// #1
    12d8:	strb	w1, [x3, #8]
    12dc:	ret
    12e0:	cmp	w4, #0x2d
    12e4:	b.ne	12d0 <grub_mod_fini+0xfa8>  // b.any
    12e8:	mov	w1, #0x16                  	// #22
    12ec:	mov	w0, #0x1                   	// #1
    12f0:	strb	w1, [x3, #8]
    12f4:	ret
    12f8:	mov	w1, #0x2                   	// #2
    12fc:	mov	w0, #0x0                   	// #0
    1300:	strb	w1, [x3, #8]
    1304:	ret
    1308:	ldr	w1, [x1, #64]
    130c:	add	w0, w0, #0x1
    1310:	cmp	w0, w1
    1314:	b.ge	133c <grub_mod_fini+0x1014>  // b.tcont
    1318:	add	x5, x5, x7
    131c:	ldrb	w0, [x5, #1]
    1320:	strb	w0, [x3]
    1324:	cmp	w0, #0x3a
    1328:	b.eq	13a0 <grub_mod_fini+0x1078>  // b.none
    132c:	cmp	w0, #0x3d
    1330:	b.eq	1390 <grub_mod_fini+0x1068>  // b.none
    1334:	cmp	w0, #0x2e
    1338:	b.eq	1380 <grub_mod_fini+0x1058>  // b.none
    133c:	mov	w1, #0x1                   	// #1
    1340:	mov	w2, #0x5b                  	// #91
    1344:	mov	w0, #0x1                   	// #1
    1348:	strb	w2, [x3]
    134c:	strb	w1, [x3, #8]
    1350:	ret
    1354:	mov	w1, #0x15                  	// #21
    1358:	mov	w0, #0x1                   	// #1
    135c:	strb	w1, [x3, #8]
    1360:	ret
    1364:	str	w2, [x1, #56]
    1368:	mov	w0, #0x1                   	// #1
    136c:	mov	w1, #0x1                   	// #1
    1370:	ldrb	w2, [x5, w2, sxtw]
    1374:	strb	w2, [x3]
    1378:	strb	w1, [x3, #8]
    137c:	ret
    1380:	mov	w1, #0x1a                  	// #26
    1384:	mov	w0, #0x2                   	// #2
    1388:	strb	w1, [x3, #8]
    138c:	ret
    1390:	mov	w1, #0x1c                  	// #28
    1394:	mov	w0, #0x2                   	// #2
    1398:	strb	w1, [x3, #8]
    139c:	ret
    13a0:	tbz	w2, #2, 133c <grub_mod_fini+0x1014>
    13a4:	mov	w1, #0x1e                  	// #30
    13a8:	mov	w0, #0x2                   	// #2
    13ac:	strb	w1, [x3, #8]
    13b0:	ret
    13b4:	nop
    13b8:	stp	x29, x30, [sp, #-128]!
    13bc:	mov	x29, sp
    13c0:	stp	x23, x24, [sp, #48]
    13c4:	ldr	x24, [x0, #112]
    13c8:	stp	x27, x28, [sp, #80]
    13cc:	mov	w27, w1
    13d0:	str	w3, [sp, #120]
    13d4:	ldr	x7, [x24, #48]
    13d8:	add	x23, x7, w3, sxtw #4
    13dc:	ldr	w8, [x23, #4]
    13e0:	cmp	w8, #0x0
    13e4:	b.le	158c <grub_mod_fini+0x1264>
    13e8:	mov	w1, #0x14                  	// #20
    13ec:	stp	x21, x22, [sp, #32]
    13f0:	mov	x22, x0
    13f4:	smull	x1, w4, w1
    13f8:	mov	x0, #0x1                   	// #1
    13fc:	lsl	x0, x0, x2
    1400:	stp	x0, x1, [sp, #104]
    1404:	mvn	w0, w0
    1408:	and	w0, w0, #0xffff
    140c:	str	w0, [sp, #124]
    1410:	and	w0, w27, #0x2
    1414:	stp	x19, x20, [sp, #16]
    1418:	mov	x19, #0x0                   	// #0
    141c:	stp	x25, x26, [sp, #64]
    1420:	mov	w25, w2
    1424:	mov	w26, w4
    1428:	str	w0, [sp, #96]
    142c:	and	w0, w27, #0x1
    1430:	str	w0, [sp, #100]
    1434:	b	144c <grub_mod_fini+0x1124>
    1438:	cmp	w5, #0x4
    143c:	b.eq	14dc <grub_mod_fini+0x11b4>  // b.none
    1440:	add	x19, x19, #0x1
    1444:	cmp	w8, w19
    1448:	b.le	1580 <grub_mod_fini+0x1258>
    144c:	ldr	x5, [x23, #8]
    1450:	ldr	x3, [x24]
    1454:	ldr	w21, [x5, x19, lsl #2]
    1458:	sbfiz	x28, x21, #4, #32
    145c:	add	x5, x3, x28
    1460:	ldrb	w5, [x5, #8]
    1464:	cmp	w5, #0x8
    1468:	b.eq	14a8 <grub_mod_fini+0x1180>  // b.none
    146c:	cmp	w5, #0x9
    1470:	b.ne	1438 <grub_mod_fini+0x1110>  // b.any
    1474:	ldr	w0, [sp, #96]
    1478:	cbz	w0, 1440 <grub_mod_fini+0x1118>
    147c:	ldr	w0, [x3, x28]
    1480:	cmp	w0, w25
    1484:	b.ne	1440 <grub_mod_fini+0x1118>  // b.any
    1488:	mov	w0, #0x0                   	// #0
    148c:	ldp	x19, x20, [sp, #16]
    1490:	ldp	x21, x22, [sp, #32]
    1494:	ldp	x23, x24, [sp, #48]
    1498:	ldp	x25, x26, [sp, #64]
    149c:	ldp	x27, x28, [sp, #80]
    14a0:	ldp	x29, x30, [sp], #128
    14a4:	ret
    14a8:	ldr	w0, [sp, #100]
    14ac:	cbz	w0, 1440 <grub_mod_fini+0x1118>
    14b0:	ldr	w0, [x3, x28]
    14b4:	cmp	w0, w25
    14b8:	b.ne	1440 <grub_mod_fini+0x1118>  // b.any
    14bc:	mov	w0, #0xffffffff            	// #-1
    14c0:	ldp	x19, x20, [sp, #16]
    14c4:	ldp	x21, x22, [sp, #32]
    14c8:	ldp	x23, x24, [sp, #48]
    14cc:	ldp	x25, x26, [sp, #64]
    14d0:	ldp	x27, x28, [sp, #80]
    14d4:	ldp	x29, x30, [sp], #128
    14d8:	ret
    14dc:	cmn	w26, #0x1
    14e0:	b.eq	1440 <grub_mod_fini+0x1118>  // b.none
    14e4:	ldr	x0, [sp, #112]
    14e8:	cmp	w25, #0x3f
    14ec:	ldr	x20, [x22, #160]
    14f0:	add	x20, x20, x0
    14f4:	ldr	w0, [sp, #96]
    14f8:	b.gt	15a0 <grub_mod_fini+0x1278>
    14fc:	cbnz	w0, 16c0 <grub_mod_fini+0x1398>
    1500:	ldr	w0, [x20]
    1504:	cmp	w0, w21
    1508:	b.ne	1564 <grub_mod_fini+0x123c>  // b.any
    150c:	ldr	x5, [sp, #104]
    1510:	mov	w4, w26
    1514:	ldrh	w3, [x20, #18]
    1518:	mov	w2, w25
    151c:	mov	w1, w27
    1520:	mov	x0, x22
    1524:	tst	x3, x5
    1528:	b.eq	1564 <grub_mod_fini+0x123c>  // b.none
    152c:	ldr	x3, [x24, #40]
    1530:	ldr	w5, [sp, #120]
    1534:	add	x3, x3, x28
    1538:	ldr	x3, [x3, #8]
    153c:	ldr	w3, [x3]
    1540:	cmp	w5, w3
    1544:	b.eq	16d0 <grub_mod_fini+0x13a8>  // b.none
    1548:	bl	13b8 <grub_mod_fini+0x1090>
    154c:	cmn	w0, #0x1
    1550:	b.eq	14bc <grub_mod_fini+0x1194>  // b.none
    1554:	ldrh	w0, [x20, #18]
    1558:	ldr	w1, [sp, #124]
    155c:	and	w0, w1, w0
    1560:	strh	w0, [x20, #18]
    1564:	ldrb	w0, [x20, #16]
    1568:	add	x20, x20, #0x14
    156c:	cbnz	w0, 1500 <grub_mod_fini+0x11d8>
    1570:	ldr	w8, [x23, #4]
    1574:	add	x19, x19, #0x1
    1578:	cmp	w8, w19
    157c:	b.gt	144c <grub_mod_fini+0x1124>
    1580:	ldp	x19, x20, [sp, #16]
    1584:	ldp	x21, x22, [sp, #32]
    1588:	ldp	x25, x26, [sp, #64]
    158c:	asr	w0, w27, #1
    1590:	ldp	x23, x24, [sp, #48]
    1594:	ldp	x27, x28, [sp, #80]
    1598:	ldp	x29, x30, [sp], #128
    159c:	ret
    15a0:	cbnz	w0, 1634 <grub_mod_fini+0x130c>
    15a4:	nop
    15a8:	ldr	w3, [x20]
    15ac:	mov	w4, w26
    15b0:	mov	w2, w25
    15b4:	mov	w1, w27
    15b8:	mov	x0, x22
    15bc:	add	x20, x20, #0x14
    15c0:	cmp	w21, w3
    15c4:	b.ne	15f0 <grub_mod_fini+0x12c8>  // b.any
    15c8:	ldr	x3, [x24, #40]
    15cc:	ldr	w5, [sp, #120]
    15d0:	add	x3, x3, x28
    15d4:	ldr	x3, [x3, #8]
    15d8:	ldr	w3, [x3]
    15dc:	cmp	w5, w3
    15e0:	b.eq	16d0 <grub_mod_fini+0x13a8>  // b.none
    15e4:	bl	13b8 <grub_mod_fini+0x1090>
    15e8:	cmn	w0, #0x1
    15ec:	b.eq	14bc <grub_mod_fini+0x1194>  // b.none
    15f0:	ldurb	w0, [x20, #-4]
    15f4:	cbnz	w0, 15a8 <grub_mod_fini+0x1280>
    15f8:	ldr	w8, [x23, #4]
    15fc:	b	1574 <grub_mod_fini+0x124c>
    1600:	ldr	x3, [x24, #40]
    1604:	ldr	w5, [sp, #120]
    1608:	add	x3, x3, x28
    160c:	ldr	x3, [x3, #8]
    1610:	ldr	w3, [x3]
    1614:	cmp	w5, w3
    1618:	b.eq	16d0 <grub_mod_fini+0x13a8>  // b.none
    161c:	bl	13b8 <grub_mod_fini+0x1090>
    1620:	cmn	w0, #0x1
    1624:	b.eq	14bc <grub_mod_fini+0x1194>  // b.none
    1628:	cbz	w0, 1488 <grub_mod_fini+0x1160>
    162c:	ldurb	w0, [x20, #-4]
    1630:	cbz	w0, 1570 <grub_mod_fini+0x1248>
    1634:	ldr	w3, [x20]
    1638:	mov	w4, w26
    163c:	mov	w2, w25
    1640:	mov	w1, w27
    1644:	mov	x0, x22
    1648:	add	x20, x20, #0x14
    164c:	cmp	w21, w3
    1650:	b.eq	1600 <grub_mod_fini+0x12d8>  // b.none
    1654:	b	162c <grub_mod_fini+0x1304>
    1658:	ldr	x5, [sp, #104]
    165c:	mov	w4, w26
    1660:	ldrh	w3, [x20, #18]
    1664:	mov	w2, w25
    1668:	mov	w1, w27
    166c:	mov	x0, x22
    1670:	tst	x3, x5
    1674:	b.eq	16b4 <grub_mod_fini+0x138c>  // b.none
    1678:	ldr	x3, [x24, #40]
    167c:	ldr	w5, [sp, #120]
    1680:	add	x3, x3, x28
    1684:	ldr	x3, [x3, #8]
    1688:	ldr	w3, [x3]
    168c:	cmp	w5, w3
    1690:	b.eq	16d0 <grub_mod_fini+0x13a8>  // b.none
    1694:	bl	13b8 <grub_mod_fini+0x1090>
    1698:	cmn	w0, #0x1
    169c:	b.eq	14bc <grub_mod_fini+0x1194>  // b.none
    16a0:	cbz	w0, 1488 <grub_mod_fini+0x1160>
    16a4:	ldrh	w0, [x20, #18]
    16a8:	ldr	w1, [sp, #124]
    16ac:	and	w0, w1, w0
    16b0:	strh	w0, [x20, #18]
    16b4:	ldrb	w0, [x20, #16]
    16b8:	add	x20, x20, #0x14
    16bc:	cbz	w0, 1570 <grub_mod_fini+0x1248>
    16c0:	ldr	w0, [x20]
    16c4:	cmp	w0, w21
    16c8:	b.eq	1658 <grub_mod_fini+0x1330>  // b.none
    16cc:	b	16b4 <grub_mod_fini+0x138c>
    16d0:	ldr	w0, [sp, #100]
    16d4:	ldp	x19, x20, [sp, #16]
    16d8:	neg	w0, w0
    16dc:	ldp	x21, x22, [sp, #32]
    16e0:	ldp	x23, x24, [sp, #48]
    16e4:	ldp	x25, x26, [sp, #64]
    16e8:	ldp	x27, x28, [sp, #80]
    16ec:	ldp	x29, x30, [sp], #128
    16f0:	ret
    16f4:	nop
    16f8:	stp	x29, x30, [sp, #-32]!
    16fc:	mov	x29, sp
    1700:	stp	x19, x20, [sp, #16]
    1704:	mov	w20, w1
    1708:	ldr	w1, [x0]
    170c:	mov	x19, x0
    1710:	cbz	w1, 1740 <grub_mod_fini+0x1418>
    1714:	ldr	w2, [x0, #4]
    1718:	ldr	x0, [x0, #8]
    171c:	cbnz	w2, 1770 <grub_mod_fini+0x1448>
    1720:	str	w20, [x0]
    1724:	mov	w0, #0x1                   	// #1
    1728:	ldr	w1, [x19, #4]
    172c:	add	w1, w1, w0
    1730:	str	w1, [x19, #4]
    1734:	ldp	x19, x20, [sp, #16]
    1738:	ldp	x29, x30, [sp], #32
    173c:	ret
    1740:	mov	x0, #0x100000001           	// #4294967297
    1744:	str	x0, [x19]
    1748:	mov	x0, #0x4                   	// #4
    174c:	bl	0 <grub_malloc>
    1750:	str	x0, [x19, #8]
    1754:	mov	x1, x0
    1758:	cbz	x0, 17f8 <grub_mod_fini+0x14d0>
    175c:	str	w20, [x1]
    1760:	mov	w0, #0x1                   	// #1
    1764:	ldp	x19, x20, [sp, #16]
    1768:	ldp	x29, x30, [sp], #32
    176c:	ret
    1770:	cmp	w1, w2
    1774:	b.eq	1804 <grub_mod_fini+0x14dc>  // b.none
    1778:	ldr	w4, [x0]
    177c:	sxtw	x1, w2
    1780:	sbfiz	x3, x2, #2, #32
    1784:	cmp	w4, w20
    1788:	b.le	17c8 <grub_mod_fini+0x14a0>
    178c:	cmp	w2, #0x0
    1790:	b.le	17b0 <grub_mod_fini+0x1488>
    1794:	sub	x3, x0, #0x4
    1798:	ldr	w2, [x3, x1, lsl #2]
    179c:	str	w2, [x0, x1, lsl #2]
    17a0:	sub	x1, x1, #0x1
    17a4:	cmp	w1, #0x0
    17a8:	b.gt	1798 <grub_mod_fini+0x1470>
    17ac:	mov	x3, #0x0                   	// #0
    17b0:	str	w20, [x0, x3]
    17b4:	mov	w0, #0x1                   	// #1
    17b8:	ldr	w1, [x19, #4]
    17bc:	add	w1, w1, w0
    17c0:	str	w1, [x19, #4]
    17c4:	b	1734 <grub_mod_fini+0x140c>
    17c8:	add	x1, x0, x3
    17cc:	ldur	w1, [x1, #-4]
    17d0:	cmp	w20, w1
    17d4:	b.ge	17b0 <grub_mod_fini+0x1488>  // b.tcont
    17d8:	sub	x2, x0, #0x4
    17dc:	nop
    17e0:	str	w1, [x0, x3]
    17e4:	sub	x3, x3, #0x4
    17e8:	ldr	w1, [x2, x3]
    17ec:	cmp	w1, w20
    17f0:	b.gt	17e0 <grub_mod_fini+0x14b8>
    17f4:	b	17b0 <grub_mod_fini+0x1488>
    17f8:	mov	w0, #0x0                   	// #0
    17fc:	str	xzr, [x19]
    1800:	b	1734 <grub_mod_fini+0x140c>
    1804:	lsl	w1, w2, #1
    1808:	str	w1, [x19]
    180c:	sbfiz	x1, x1, #2, #32
    1810:	bl	0 <grub_realloc>
    1814:	cbz	x0, 1824 <grub_mod_fini+0x14fc>
    1818:	ldr	w2, [x19, #4]
    181c:	str	x0, [x19, #8]
    1820:	b	1778 <grub_mod_fini+0x1450>
    1824:	mov	w0, #0x0                   	// #0
    1828:	b	1734 <grub_mod_fini+0x140c>
    182c:	nop
    1830:	stp	x29, x30, [sp, #-64]!
    1834:	mov	x29, sp
    1838:	stp	x19, x20, [sp, #16]
    183c:	mov	x20, x1
    1840:	ldr	w19, [x1, #12]
    1844:	stp	x21, x22, [sp, #32]
    1848:	mov	w22, w2
    184c:	str	x23, [sp, #48]
    1850:	mov	x23, x0
    1854:	str	w2, [x1]
    1858:	sbfiz	x0, x19, #2, #32
    185c:	stp	w19, wzr, [x1, #24]
    1860:	bl	0 <grub_malloc>
    1864:	str	x0, [x20, #32]
    1868:	cmp	w19, #0x0
    186c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    1870:	b.eq	1944 <grub_mod_fini+0x161c>  // b.none
    1874:	ldr	w2, [x20, #12]
    1878:	mov	x19, #0x0                   	// #0
    187c:	cmp	w2, #0x0
    1880:	b.gt	1890 <grub_mod_fini+0x1568>
    1884:	b	18d4 <grub_mod_fini+0x15ac>
    1888:	cmp	w2, w19
    188c:	b.le	18d4 <grub_mod_fini+0x15ac>
    1890:	ldr	x1, [x20, #16]
    1894:	ldr	x3, [x23]
    1898:	ldr	w21, [x1, x19, lsl #2]
    189c:	add	x19, x19, #0x1
    18a0:	add	x3, x3, w21, sxtw #4
    18a4:	ldrb	w1, [x3, #8]
    18a8:	tbnz	w1, #3, 1888 <grub_mod_fini+0x1560>
    18ac:	ldp	w2, w1, [x20, #24]
    18b0:	ldr	x0, [x20, #32]
    18b4:	cmp	w2, w1
    18b8:	b.eq	1920 <grub_mod_fini+0x15f8>  // b.none
    18bc:	add	w2, w1, #0x1
    18c0:	str	w2, [x20, #28]
    18c4:	str	w21, [x0, w1, sxtw #2]
    18c8:	ldr	w2, [x20, #12]
    18cc:	cmp	w2, w19
    18d0:	b.gt	1890 <grub_mod_fini+0x1568>
    18d4:	ldr	w0, [x23, #132]
    18d8:	ldr	x19, [x23, #64]
    18dc:	and	w22, w22, w0
    18e0:	lsl	x22, x22, #4
    18e4:	add	x21, x19, x22
    18e8:	ldr	w1, [x19, x22]
    18ec:	ldr	w2, [x21, #4]
    18f0:	add	w0, w1, #0x1
    18f4:	cmp	w2, w1
    18f8:	ldr	x2, [x21, #8]
    18fc:	b.le	195c <grub_mod_fini+0x1634>
    1900:	str	w0, [x19, x22]
    1904:	mov	w0, #0x0                   	// #0
    1908:	str	x20, [x2, w1, sxtw #3]
    190c:	ldp	x19, x20, [sp, #16]
    1910:	ldp	x21, x22, [sp, #32]
    1914:	ldr	x23, [sp, #48]
    1918:	ldp	x29, x30, [sp], #64
    191c:	ret
    1920:	add	w1, w1, #0x1
    1924:	lsl	w1, w1, #1
    1928:	str	w1, [x20, #24]
    192c:	sbfiz	x1, x1, #2, #32
    1930:	bl	0 <grub_realloc>
    1934:	cbz	x0, 1944 <grub_mod_fini+0x161c>
    1938:	ldr	w1, [x20, #28]
    193c:	str	x0, [x20, #32]
    1940:	b	18bc <grub_mod_fini+0x1594>
    1944:	mov	w0, #0xc                   	// #12
    1948:	ldp	x19, x20, [sp, #16]
    194c:	ldp	x21, x22, [sp, #32]
    1950:	ldr	x23, [sp, #48]
    1954:	ldp	x29, x30, [sp], #64
    1958:	ret
    195c:	lsl	w23, w0, #1
    1960:	mov	x0, x2
    1964:	sbfiz	x1, x23, #3, #32
    1968:	bl	0 <grub_realloc>
    196c:	mov	x2, x0
    1970:	cbz	x0, 1944 <grub_mod_fini+0x161c>
    1974:	ldr	w1, [x19, x22]
    1978:	str	w23, [x21, #4]
    197c:	add	w0, w1, #0x1
    1980:	str	x2, [x21, #8]
    1984:	b	1900 <grub_mod_fini+0x15d8>
    1988:	stp	x29, x30, [sp, #-96]!
    198c:	mov	x29, sp
    1990:	stp	x21, x22, [sp, #32]
    1994:	mov	x21, x1
    1998:	ldp	x22, x4, [x0, #8]
    199c:	stp	x19, x20, [sp, #16]
    19a0:	mov	x19, x0
    19a4:	stp	x23, x24, [sp, #48]
    19a8:	mov	x20, x2
    19ac:	stp	x25, x26, [sp, #64]
    19b0:	and	w25, w2, #0xff
    19b4:	cmp	x4, x22
    19b8:	b.cs	1a60 <grub_mod_fini+0x1738>  // b.hs, b.nlast
    19bc:	ldr	x22, [x0, #24]
    19c0:	ldr	x23, [x0, #40]
    19c4:	lsl	x0, x4, #4
    19c8:	ldr	x1, [x19]
    19cc:	and	w2, w20, #0xfffc00ff
    19d0:	cmp	w25, #0x6
    19d4:	add	x3, x1, x0
    19d8:	cset	w6, eq  // eq = none
    19dc:	str	x21, [x1, x0]
    19e0:	cmp	w25, #0x5
    19e4:	str	x20, [x3, #8]
    19e8:	str	w2, [x3, #8]
    19ec:	b.ne	19fc <grub_mod_fini+0x16d4>  // b.any
    19f0:	ldr	w1, [x19, #164]
    19f4:	cmp	w1, #0x1
    19f8:	cset	w6, gt
    19fc:	ldrb	w5, [x3, #10]
    1a00:	mov	w7, #0xffffffff            	// #-1
    1a04:	mov	x2, #0x10                  	// #16
    1a08:	mov	w1, #0x0                   	// #0
    1a0c:	add	x0, x23, x0
    1a10:	bfi	w5, w6, #4, #1
    1a14:	strb	w5, [x3, #10]
    1a18:	str	w7, [x22, x4, lsl #2]
    1a1c:	bl	0 <grub_memset>
    1a20:	ldr	x3, [x19, #16]
    1a24:	mov	w1, #0x0                   	// #0
    1a28:	ldr	x0, [x19, #48]
    1a2c:	mov	x2, #0x10                  	// #16
    1a30:	add	x0, x0, x3, lsl #4
    1a34:	bl	0 <grub_memset>
    1a38:	ldr	x1, [x19, #16]
    1a3c:	mov	w0, w1
    1a40:	add	x1, x1, #0x1
    1a44:	str	x1, [x19, #16]
    1a48:	ldp	x19, x20, [sp, #16]
    1a4c:	ldp	x21, x22, [sp, #32]
    1a50:	ldp	x23, x24, [sp, #48]
    1a54:	ldp	x25, x26, [sp, #64]
    1a58:	ldp	x29, x30, [sp], #96
    1a5c:	ret
    1a60:	mov	x0, #0x7fffffff            	// #2147483647
    1a64:	lsl	x24, x22, #1
    1a68:	cmp	x0, x22, lsl #1
    1a6c:	b.cc	1b08 <grub_mod_fini+0x17e0>  // b.lo, b.ul, b.last
    1a70:	ldr	x0, [x19]
    1a74:	str	x27, [sp, #80]
    1a78:	lsl	x27, x22, #5
    1a7c:	mov	x1, x27
    1a80:	bl	0 <grub_realloc>
    1a84:	mov	x1, x0
    1a88:	cbz	x0, 1b04 <grub_mod_fini+0x17dc>
    1a8c:	ldr	x0, [x19, #24]
    1a90:	str	x1, [x19]
    1a94:	lsl	x22, x22, #3
    1a98:	mov	x1, x22
    1a9c:	bl	0 <grub_realloc>
    1aa0:	mov	x1, x22
    1aa4:	mov	x22, x0
    1aa8:	ldr	x0, [x19, #32]
    1aac:	bl	0 <grub_realloc>
    1ab0:	mov	x26, x0
    1ab4:	ldr	x0, [x19, #40]
    1ab8:	mov	x1, x27
    1abc:	bl	0 <grub_realloc>
    1ac0:	mov	x23, x0
    1ac4:	ldr	x0, [x19, #48]
    1ac8:	mov	x1, x27
    1acc:	bl	0 <grub_realloc>
    1ad0:	mov	x27, x0
    1ad4:	cmp	x22, #0x0
    1ad8:	ccmp	x26, #0x0, #0x4, ne  // ne = any
    1adc:	b.eq	1b10 <grub_mod_fini+0x17e8>  // b.none
    1ae0:	cmp	x23, #0x0
    1ae4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    1ae8:	b.eq	1b10 <grub_mod_fini+0x17e8>  // b.none
    1aec:	str	x24, [x19, #8]
    1af0:	stp	x22, x26, [x19, #24]
    1af4:	stp	x23, x0, [x19, #40]
    1af8:	ldr	x4, [x19, #16]
    1afc:	ldr	x27, [sp, #80]
    1b00:	b	19c4 <grub_mod_fini+0x169c>
    1b04:	ldr	x27, [sp, #80]
    1b08:	mov	w0, #0xffffffff            	// #-1
    1b0c:	b	1a48 <grub_mod_fini+0x1720>
    1b10:	mov	x0, x22
    1b14:	bl	0 <grub_free>
    1b18:	mov	x0, x26
    1b1c:	bl	0 <grub_free>
    1b20:	mov	x0, x23
    1b24:	bl	0 <grub_free>
    1b28:	mov	x0, x27
    1b2c:	bl	0 <grub_free>
    1b30:	mov	w0, #0xffffffff            	// #-1
    1b34:	ldr	x27, [sp, #80]
    1b38:	b	1a48 <grub_mod_fini+0x1720>
    1b3c:	nop
    1b40:	stp	x29, x30, [sp, #-64]!
    1b44:	mov	x29, sp
    1b48:	str	x23, [sp, #48]
    1b4c:	mov	x23, x0
    1b50:	ldr	w0, [x0, #172]
    1b54:	cmp	w0, #0x0
    1b58:	b.le	1be8 <grub_mod_fini+0x18c0>
    1b5c:	stp	x19, x20, [sp, #16]
    1b60:	stp	x21, x22, [sp, #32]
    1b64:	mov	x22, #0x0                   	// #0
    1b68:	ldr	x0, [x23, #184]
    1b6c:	ldr	x21, [x0, x22, lsl #3]
    1b70:	ldr	w0, [x21, #20]
    1b74:	cmp	w0, #0x0
    1b78:	b.le	1ba8 <grub_mod_fini+0x1880>
    1b7c:	mov	x19, #0x0                   	// #0
    1b80:	ldr	x1, [x21, #24]
    1b84:	ldr	x20, [x1, x19, lsl #3]
    1b88:	add	x19, x19, #0x1
    1b8c:	ldr	x0, [x20, #16]
    1b90:	bl	0 <grub_free>
    1b94:	mov	x0, x20
    1b98:	bl	0 <grub_free>
    1b9c:	ldr	w1, [x21, #20]
    1ba0:	cmp	w1, w19
    1ba4:	b.gt	1b80 <grub_mod_fini+0x1858>
    1ba8:	ldr	x0, [x21, #24]
    1bac:	bl	0 <grub_free>
    1bb0:	ldr	x0, [x21, #8]
    1bb4:	cbz	x0, 1bfc <grub_mod_fini+0x18d4>
    1bb8:	ldr	x0, [x0, #8]
    1bbc:	add	x22, x22, #0x1
    1bc0:	bl	0 <grub_free>
    1bc4:	ldr	x0, [x21, #8]
    1bc8:	bl	0 <grub_free>
    1bcc:	mov	x0, x21
    1bd0:	bl	0 <grub_free>
    1bd4:	ldr	w0, [x23, #172]
    1bd8:	cmp	w0, w22
    1bdc:	b.gt	1b68 <grub_mod_fini+0x1840>
    1be0:	ldp	x19, x20, [sp, #16]
    1be4:	ldp	x21, x22, [sp, #32]
    1be8:	str	wzr, [x23, #148]
    1bec:	str	wzr, [x23, #172]
    1bf0:	ldr	x23, [sp, #48]
    1bf4:	ldp	x29, x30, [sp], #64
    1bf8:	ret
    1bfc:	mov	x0, x21
    1c00:	bl	0 <grub_free>
    1c04:	ldr	w0, [x23, #172]
    1c08:	add	x22, x22, #0x1
    1c0c:	cmp	w0, w22
    1c10:	b.gt	1b68 <grub_mod_fini+0x1840>
    1c14:	b	1be0 <grub_mod_fini+0x18b8>
    1c18:	sub	w1, w0, #0x20
    1c1c:	cmp	w1, #0x5e
    1c20:	b.ls	1c2c <grub_mod_fini+0x1904>  // b.plast
    1c24:	mov	w0, #0x0                   	// #0
    1c28:	ret
    1c2c:	stp	x29, x30, [sp, #-32]!
    1c30:	mov	x29, sp
    1c34:	str	x19, [sp, #16]
    1c38:	mov	w19, w0
    1c3c:	bl	0 <grub_isspace>
    1c40:	cbnz	w0, 1c64 <grub_mod_fini+0x193c>
    1c44:	and	w0, w19, #0xffffffdf
    1c48:	sub	w0, w0, #0x41
    1c4c:	cmp	w0, #0x19
    1c50:	b.ls	1c64 <grub_mod_fini+0x193c>  // b.plast
    1c54:	sub	w19, w19, #0x30
    1c58:	cmp	w19, #0x9
    1c5c:	cset	w0, hi  // hi = pmore
    1c60:	b	1c68 <grub_mod_fini+0x1940>
    1c64:	mov	w0, #0x0                   	// #0
    1c68:	ldr	x19, [sp, #16]
    1c6c:	ldp	x29, x30, [sp], #32
    1c70:	ret
    1c74:	nop
    1c78:	mov	x3, x0
    1c7c:	tbnz	w1, #31, 1d00 <grub_mod_fini+0x19d8>
    1c80:	ldr	w0, [x0, #64]
    1c84:	cmp	w0, w1
    1c88:	b.eq	1d1c <grub_mod_fini+0x19f4>  // b.none
    1c8c:	ldr	w0, [x3, #104]
    1c90:	cmp	w0, #0x1
    1c94:	b.le	1cd0 <grub_mod_fini+0x19a8>
    1c98:	sxtw	x1, w1
    1c9c:	ldr	x0, [x3, #16]
    1ca0:	b	1ca8 <grub_mod_fini+0x1980>
    1ca4:	tbnz	w1, #31, 1d00 <grub_mod_fini+0x19d8>
    1ca8:	ldr	w2, [x0, x1, lsl #2]
    1cac:	sub	x1, x1, #0x1
    1cb0:	cmn	w2, #0x1
    1cb4:	b.eq	1ca4 <grub_mod_fini+0x197c>  // b.none
    1cb8:	ldrb	w0, [x3, #102]
    1cbc:	cbnz	w0, 1d30 <grub_mod_fini+0x1a08>
    1cc0:	cmp	w2, #0xa
    1cc4:	mov	w0, #0x0                   	// #0
    1cc8:	b.eq	1d08 <grub_mod_fini+0x19e0>  // b.none
    1ccc:	ret
    1cd0:	ldr	x2, [x3, #8]
    1cd4:	mov	w0, #0x1                   	// #1
    1cd8:	ldr	x4, [x3, #88]
    1cdc:	ldrb	w2, [x2, w1, sxtw]
    1ce0:	ubfx	x1, x2, #6, #2
    1ce4:	ldr	x1, [x4, x1, lsl #3]
    1ce8:	lsr	x1, x1, x2
    1cec:	tbnz	w1, #0, 1ccc <grub_mod_fini+0x19a4>
    1cf0:	cmp	w2, #0xa
    1cf4:	b.eq	1d08 <grub_mod_fini+0x19e0>  // b.none
    1cf8:	mov	w0, #0x0                   	// #0
    1cfc:	ret
    1d00:	ldr	w0, [x3, #76]
    1d04:	ret
    1d08:	ldrb	w0, [x3, #101]
    1d0c:	cmp	w0, #0x0
    1d10:	cset	w0, ne  // ne = any
    1d14:	lsl	w0, w0, #1
    1d18:	ret
    1d1c:	tst	x2, #0x2
    1d20:	mov	w1, #0xa                   	// #10
    1d24:	mov	w0, #0x8                   	// #8
    1d28:	csel	w0, w0, w1, ne  // ne = any
    1d2c:	ret
    1d30:	and	w1, w2, #0xffffffdf
    1d34:	mov	w0, #0x1                   	// #1
    1d38:	sub	w1, w1, #0x41
    1d3c:	cmp	w1, #0x19
    1d40:	b.ls	1ccc <grub_mod_fini+0x19a4>  // b.plast
    1d44:	cmp	w2, #0x5f
    1d48:	sub	w1, w2, #0x30
    1d4c:	ccmp	w1, #0x9, #0x0, ne  // ne = any
    1d50:	b.hi	1cc0 <grub_mod_fini+0x1998>  // b.pmore
    1d54:	ret
    1d58:	stp	x29, x30, [sp, #-16]!
    1d5c:	mov	x7, x2
    1d60:	mov	w5, w1
    1d64:	mov	x29, sp
    1d68:	ldr	w2, [x0, #120]
    1d6c:	mov	x6, x0
    1d70:	mov	w1, w3
    1d74:	bl	1c78 <grub_mod_fini+0x1950>
    1d78:	cmp	w5, #0x0
    1d7c:	b.le	1dd4 <grub_mod_fini+0x1aac>
    1d80:	ldr	x1, [x6, #112]
    1d84:	and	w2, w0, #0x8
    1d88:	and	w6, w0, #0x2
    1d8c:	ldr	x3, [x7]
    1d90:	ldr	x4, [x1]
    1d94:	tbz	w0, #0, 1de0 <grub_mod_fini+0x1ab8>
    1d98:	cbz	w6, 1efc <grub_mod_fini+0x1bd4>
    1d9c:	cbz	w2, 1f84 <grub_mod_fini+0x1c5c>
    1da0:	mov	x2, #0x0                   	// #0
    1da4:	ldr	w0, [x3, x2, lsl #2]
    1da8:	add	x2, x2, #0x1
    1dac:	add	x6, x4, w0, sxtw #4
    1db0:	ldr	w1, [x6, #8]
    1db4:	ldrb	w6, [x6, #8]
    1db8:	ubfx	x1, x1, #8, #10
    1dbc:	cmp	w6, #0x2
    1dc0:	b.ne	1dcc <grub_mod_fini+0x1aa4>  // b.any
    1dc4:	cbz	w1, 1e18 <grub_mod_fini+0x1af0>
    1dc8:	tbz	w1, #3, 1e18 <grub_mod_fini+0x1af0>
    1dcc:	cmp	w5, w2
    1dd0:	b.gt	1da4 <grub_mod_fini+0x1a7c>
    1dd4:	mov	w0, #0x0                   	// #0
    1dd8:	ldp	x29, x30, [sp], #16
    1ddc:	ret
    1de0:	mov	x1, #0x0                   	// #0
    1de4:	cbz	w6, 1e74 <grub_mod_fini+0x1b4c>
    1de8:	cbz	w2, 1e30 <grub_mod_fini+0x1b08>
    1dec:	nop
    1df0:	ldr	w0, [x3, x1, lsl #2]
    1df4:	add	x1, x1, #0x1
    1df8:	add	x6, x4, w0, sxtw #4
    1dfc:	ldr	w2, [x6, #8]
    1e00:	ldrb	w6, [x6, #8]
    1e04:	ubfx	x2, x2, #8, #10
    1e08:	cmp	w6, #0x2
    1e0c:	b.ne	1e20 <grub_mod_fini+0x1af8>  // b.any
    1e10:	cbz	w2, 1e18 <grub_mod_fini+0x1af0>
    1e14:	tbnz	w2, #2, 1e20 <grub_mod_fini+0x1af8>
    1e18:	ldp	x29, x30, [sp], #16
    1e1c:	ret
    1e20:	cmp	w5, w1
    1e24:	b.gt	1df0 <grub_mod_fini+0x1ac8>
    1e28:	mov	w0, #0x0                   	// #0
    1e2c:	b	1dd8 <grub_mod_fini+0x1ab0>
    1e30:	mov	w7, #0x84                  	// #132
    1e34:	nop
    1e38:	ldr	w0, [x3, x1, lsl #2]
    1e3c:	add	x1, x1, #0x1
    1e40:	add	x6, x4, w0, sxtw #4
    1e44:	ldr	w2, [x6, #8]
    1e48:	ldrb	w6, [x6, #8]
    1e4c:	ubfx	x2, x2, #8, #10
    1e50:	cmp	w6, #0x2
    1e54:	b.ne	1e64 <grub_mod_fini+0x1b3c>  // b.any
    1e58:	cbz	w2, 1e18 <grub_mod_fini+0x1af0>
    1e5c:	tst	w2, w7
    1e60:	b.eq	1e18 <grub_mod_fini+0x1af0>  // b.none
    1e64:	cmp	w5, w1
    1e68:	b.gt	1e38 <grub_mod_fini+0x1b10>
    1e6c:	mov	w0, #0x0                   	// #0
    1e70:	b	1dd8 <grub_mod_fini+0x1ab0>
    1e74:	cbz	w2, 1ebc <grub_mod_fini+0x1b94>
    1e78:	mov	w7, #0x24                  	// #36
    1e7c:	nop
    1e80:	ldr	w0, [x3, x1, lsl #2]
    1e84:	add	x1, x1, #0x1
    1e88:	add	x6, x4, w0, sxtw #4
    1e8c:	ldr	w2, [x6, #8]
    1e90:	ldrb	w6, [x6, #8]
    1e94:	ubfx	x2, x2, #8, #10
    1e98:	cmp	w6, #0x2
    1e9c:	b.ne	1eac <grub_mod_fini+0x1b84>  // b.any
    1ea0:	cbz	w2, 1e18 <grub_mod_fini+0x1af0>
    1ea4:	tst	w2, w7
    1ea8:	b.eq	1e18 <grub_mod_fini+0x1af0>  // b.none
    1eac:	cmp	w5, w1
    1eb0:	b.gt	1e80 <grub_mod_fini+0x1b58>
    1eb4:	mov	w0, #0x0                   	// #0
    1eb8:	b	1dd8 <grub_mod_fini+0x1ab0>
    1ebc:	mov	w7, #0xa4                  	// #164
    1ec0:	ldr	w0, [x3, x1, lsl #2]
    1ec4:	add	x1, x1, #0x1
    1ec8:	add	x6, x4, w0, sxtw #4
    1ecc:	ldr	w2, [x6, #8]
    1ed0:	ldrb	w6, [x6, #8]
    1ed4:	ubfx	x2, x2, #8, #10
    1ed8:	cmp	w6, #0x2
    1edc:	b.ne	1eec <grub_mod_fini+0x1bc4>  // b.any
    1ee0:	cbz	w2, 1e18 <grub_mod_fini+0x1af0>
    1ee4:	tst	w2, w7
    1ee8:	b.eq	1e18 <grub_mod_fini+0x1af0>  // b.none
    1eec:	cmp	w5, w1
    1ef0:	b.gt	1ec0 <grub_mod_fini+0x1b98>
    1ef4:	mov	w0, #0x0                   	// #0
    1ef8:	b	1dd8 <grub_mod_fini+0x1ab0>
    1efc:	cbz	w2, 1f3c <grub_mod_fini+0x1c14>
    1f00:	mov	x2, #0x0                   	// #0
    1f04:	ldr	w0, [x3, x2, lsl #2]
    1f08:	add	x6, x4, w0, sxtw #4
    1f0c:	ldr	w1, [x6, #8]
    1f10:	ldrb	w6, [x6, #8]
    1f14:	ubfx	x1, x1, #8, #10
    1f18:	cmp	w6, #0x2
    1f1c:	b.ne	1f28 <grub_mod_fini+0x1c00>  // b.any
    1f20:	cbz	w1, 1e18 <grub_mod_fini+0x1af0>
    1f24:	tbz	w1, #3, 1fc0 <grub_mod_fini+0x1c98>
    1f28:	add	x2, x2, #0x1
    1f2c:	cmp	w5, w2
    1f30:	b.gt	1f04 <grub_mod_fini+0x1bdc>
    1f34:	mov	w0, #0x0                   	// #0
    1f38:	b	1dd8 <grub_mod_fini+0x1ab0>
    1f3c:	mov	x2, #0x0                   	// #0
    1f40:	mov	w7, #0xa0                  	// #160
    1f44:	ldr	w0, [x3, x2, lsl #2]
    1f48:	add	x6, x4, w0, sxtw #4
    1f4c:	ldr	w1, [x6, #8]
    1f50:	ldrb	w6, [x6, #8]
    1f54:	ubfx	x1, x1, #8, #10
    1f58:	cmp	w6, #0x2
    1f5c:	b.ne	1f70 <grub_mod_fini+0x1c48>  // b.any
    1f60:	cbz	w1, 1e18 <grub_mod_fini+0x1af0>
    1f64:	tbnz	w1, #3, 1f70 <grub_mod_fini+0x1c48>
    1f68:	tst	w1, w7
    1f6c:	b.eq	1e18 <grub_mod_fini+0x1af0>  // b.none
    1f70:	add	x2, x2, #0x1
    1f74:	cmp	w5, w2
    1f78:	b.gt	1f44 <grub_mod_fini+0x1c1c>
    1f7c:	mov	w0, #0x0                   	// #0
    1f80:	b	1dd8 <grub_mod_fini+0x1ab0>
    1f84:	mov	x2, #0x0                   	// #0
    1f88:	ldr	w0, [x3, x2, lsl #2]
    1f8c:	add	x6, x4, w0, sxtw #4
    1f90:	ldr	w1, [x6, #8]
    1f94:	ldrb	w6, [x6, #8]
    1f98:	ubfx	x1, x1, #8, #10
    1f9c:	cmp	w6, #0x2
    1fa0:	b.ne	1fac <grub_mod_fini+0x1c84>  // b.any
    1fa4:	cbz	w1, 1e18 <grub_mod_fini+0x1af0>
    1fa8:	tbz	w1, #3, 1fc8 <grub_mod_fini+0x1ca0>
    1fac:	add	x2, x2, #0x1
    1fb0:	cmp	w5, w2
    1fb4:	b.gt	1f88 <grub_mod_fini+0x1c60>
    1fb8:	mov	w0, #0x0                   	// #0
    1fbc:	b	1dd8 <grub_mod_fini+0x1ab0>
    1fc0:	tbz	w1, #5, 1e18 <grub_mod_fini+0x1af0>
    1fc4:	b	1f28 <grub_mod_fini+0x1c00>
    1fc8:	tbz	w1, #7, 1e18 <grub_mod_fini+0x1af0>
    1fcc:	b	1fac <grub_mod_fini+0x1c84>
    1fd0:	stp	x29, x30, [sp, #-96]!
    1fd4:	mov	x29, sp
    1fd8:	stp	x21, x22, [sp, #32]
    1fdc:	mov	x22, x2
    1fe0:	ldr	w2, [x1]
    1fe4:	ldr	x21, [x0, #112]
    1fe8:	cmp	w2, #0x0
    1fec:	b.le	20b4 <grub_mod_fini+0x1d8c>
    1ff0:	stp	x19, x20, [sp, #16]
    1ff4:	mov	x19, #0x0                   	// #0
    1ff8:	stp	x23, x24, [sp, #48]
    1ffc:	mov	x24, x0
    2000:	mov	w23, w3
    2004:	stp	x25, x26, [sp, #64]
    2008:	mov	x25, x1
    200c:	b	2018 <grub_mod_fini+0x1cf0>
    2010:	cmp	w2, w19
    2014:	b.le	20a8 <grub_mod_fini+0x1d80>
    2018:	ldr	x4, [x22]
    201c:	ldr	x5, [x21]
    2020:	ldr	w20, [x4, x19, lsl #2]
    2024:	add	x19, x19, #0x1
    2028:	sbfiz	x4, x20, #4, #32
    202c:	add	x6, x5, x4
    2030:	ldrb	w6, [x6, #8]
    2034:	cmp	w6, #0x8
    2038:	b.ne	2010 <grub_mod_fini+0x1ce8>  // b.any
    203c:	ldr	w3, [x5, x4]
    2040:	cmp	w3, #0x3f
    2044:	b.gt	2010 <grub_mod_fini+0x1ce8>
    2048:	ldr	x4, [x21, #144]
    204c:	lsr	x3, x4, x3
    2050:	tbz	w3, #0, 2010 <grub_mod_fini+0x1ce8>
    2054:	ldp	w1, w0, [x24, #172]
    2058:	str	x27, [sp, #80]
    205c:	ldr	x27, [x24, #184]
    2060:	cmp	w1, w0
    2064:	b.eq	20dc <grub_mod_fini+0x1db4>  // b.none
    2068:	sxtw	x26, w1
    206c:	mov	x0, #0x20                  	// #32
    2070:	bl	0 <grub_zalloc>
    2074:	ldr	w1, [x24, #172]
    2078:	ldr	x2, [x24, #184]
    207c:	str	x0, [x27, x26, lsl #3]
    2080:	add	w3, w1, #0x1
    2084:	ldr	x0, [x2, w1, sxtw #3]
    2088:	cbz	x0, 20c4 <grub_mod_fini+0x1d9c>
    208c:	ldr	x27, [sp, #80]
    2090:	str	w20, [x0, #4]
    2094:	str	w3, [x24, #172]
    2098:	str	w23, [x0]
    209c:	ldr	w2, [x25]
    20a0:	cmp	w2, w19
    20a4:	b.gt	2018 <grub_mod_fini+0x1cf0>
    20a8:	ldp	x19, x20, [sp, #16]
    20ac:	ldp	x23, x24, [sp, #48]
    20b0:	ldp	x25, x26, [sp, #64]
    20b4:	mov	w0, #0x0                   	// #0
    20b8:	ldp	x21, x22, [sp, #32]
    20bc:	ldp	x29, x30, [sp], #96
    20c0:	ret
    20c4:	mov	w0, #0xc                   	// #12
    20c8:	ldp	x19, x20, [sp, #16]
    20cc:	ldp	x23, x24, [sp, #48]
    20d0:	ldp	x25, x26, [sp, #64]
    20d4:	ldr	x27, [sp, #80]
    20d8:	b	20b8 <grub_mod_fini+0x1d90>
    20dc:	lsl	w26, w1, #1
    20e0:	mov	x0, x27
    20e4:	sbfiz	x1, x26, #3, #32
    20e8:	bl	0 <grub_realloc>
    20ec:	mov	x27, x0
    20f0:	cbz	x0, 20c4 <grub_mod_fini+0x1d9c>
    20f4:	ldr	w1, [x24, #172]
    20f8:	str	w26, [x24, #176]
    20fc:	str	x0, [x24, #184]
    2100:	b	2068 <grub_mod_fini+0x1d40>
    2104:	nop
    2108:	stp	x29, x30, [sp, #-48]!
    210c:	mov	x29, sp
    2110:	stp	x19, x20, [sp, #16]
    2114:	cbz	x1, 2220 <grub_mod_fini+0x1ef8>
    2118:	stp	x21, x22, [sp, #32]
    211c:	mov	x21, x1
    2120:	ldr	w1, [x1, #4]
    2124:	cbz	w1, 221c <grub_mod_fini+0x1ef4>
    2128:	mov	x20, x0
    212c:	ldp	w0, w19, [x0]
    2130:	add	w2, w19, w1, lsl #1
    2134:	cmp	w0, w2
    2138:	b.lt	2270 <grub_mod_fini+0x1f48>  // b.tstop
    213c:	cbz	w19, 229c <grub_mod_fini+0x1f74>
    2140:	sub	w3, w19, #0x1
    2144:	subs	w2, w1, #0x1
    2148:	add	w19, w19, w1, lsl #1
    214c:	ccmp	w3, #0x0, #0x1, pl  // pl = nfrst
    2150:	b.lt	21a0 <grub_mod_fini+0x1e78>  // b.tstop
    2154:	ldr	x0, [x20, #8]
    2158:	ldr	x1, [x21, #8]
    215c:	b	217c <grub_mod_fini+0x1e54>
    2160:	b.ge	2234 <grub_mod_fini+0x1f0c>  // b.tcont
    2164:	sub	w19, w19, #0x1
    2168:	sub	w2, w2, #0x1
    216c:	str	w4, [x0, w19, sxtw #2]
    2170:	cmp	w2, #0x0
    2174:	ccmp	w3, #0x0, #0x1, ge  // ge = tcont
    2178:	b.lt	21a0 <grub_mod_fini+0x1e78>  // b.tstop
    217c:	ldr	w5, [x0, w3, sxtw #2]
    2180:	ldr	w4, [x1, w2, sxtw #2]
    2184:	cmp	w5, w4
    2188:	b.ne	2160 <grub_mod_fini+0x1e38>  // b.any
    218c:	sub	w2, w2, #0x1
    2190:	sub	w3, w3, #0x1
    2194:	cmp	w2, #0x0
    2198:	ccmp	w3, #0x0, #0x1, ge  // ge = tcont
    219c:	b.ge	217c <grub_mod_fini+0x1e54>  // b.tcont
    21a0:	tbnz	w2, #31, 21c0 <grub_mod_fini+0x1e98>
    21a4:	ldr	x0, [x20, #8]
    21a8:	add	w2, w2, #0x1
    21ac:	ldr	x1, [x21, #8]
    21b0:	sub	w19, w19, w2
    21b4:	sbfiz	x2, x2, #2, #32
    21b8:	add	x0, x0, w19, sxtw #2
    21bc:	bl	0 <grub_memmove>
    21c0:	ldr	w1, [x20, #4]
    21c4:	ldr	w2, [x21, #4]
    21c8:	add	w2, w1, w2, lsl #1
    21cc:	sub	w6, w2, #0x1
    21d0:	subs	w2, w2, w19
    21d4:	b.eq	221c <grub_mod_fini+0x1ef4>  // b.none
    21d8:	sub	w3, w1, #0x1
    21dc:	sxtw	x8, w6
    21e0:	ldr	x0, [x20, #8]
    21e4:	sxtw	x7, w3
    21e8:	add	w1, w1, w2
    21ec:	str	w1, [x20, #4]
    21f0:	ldr	w5, [x0, x8, lsl #2]
    21f4:	add	w1, w3, w2
    21f8:	ldr	w4, [x0, x7, lsl #2]
    21fc:	sxtw	x1, w1
    2200:	cmp	w5, w4
    2204:	b.le	223c <grub_mod_fini+0x1f14>
    2208:	sub	w6, w6, #0x1
    220c:	str	w5, [x0, x1, lsl #2]
    2210:	subs	w2, w2, #0x1
    2214:	sxtw	x8, w6
    2218:	b.ne	21f0 <grub_mod_fini+0x1ec8>  // b.any
    221c:	ldp	x21, x22, [sp, #32]
    2220:	mov	w19, #0x0                   	// #0
    2224:	mov	w0, w19
    2228:	ldp	x19, x20, [sp, #16]
    222c:	ldp	x29, x30, [sp], #48
    2230:	ret
    2234:	sub	w3, w3, #0x1
    2238:	b	2170 <grub_mod_fini+0x1e48>
    223c:	subs	w3, w3, #0x1
    2240:	str	w4, [x0, x1, lsl #2]
    2244:	sxtw	x7, w3
    2248:	b.pl	21f0 <grub_mod_fini+0x1ec8>  // b.nfrst
    224c:	add	x1, x0, w19, sxtw #2
    2250:	sbfiz	x2, x2, #2, #32
    2254:	mov	w19, #0x0                   	// #0
    2258:	bl	0 <grub_memmove>
    225c:	mov	w0, w19
    2260:	ldp	x19, x20, [sp, #16]
    2264:	ldp	x21, x22, [sp, #32]
    2268:	ldp	x29, x30, [sp], #48
    226c:	ret
    2270:	add	w1, w1, w0
    2274:	ldr	x0, [x20, #8]
    2278:	lsl	w22, w1, #1
    227c:	sbfiz	x1, x22, #2, #32
    2280:	bl	0 <grub_realloc>
    2284:	cbz	x0, 22bc <grub_mod_fini+0x1f94>
    2288:	ldr	w19, [x20, #4]
    228c:	ldr	w1, [x21, #4]
    2290:	str	w22, [x20]
    2294:	str	x0, [x20, #8]
    2298:	cbnz	w19, 2140 <grub_mod_fini+0x1e18>
    229c:	str	w1, [x20, #4]
    22a0:	ldr	x0, [x20, #8]
    22a4:	ldr	x1, [x21, #8]
    22a8:	ldrsw	x2, [x21, #4]
    22ac:	lsl	x2, x2, #2
    22b0:	bl	0 <grub_memmove>
    22b4:	ldp	x21, x22, [sp, #32]
    22b8:	b	2224 <grub_mod_fini+0x1efc>
    22bc:	mov	w19, #0xc                   	// #12
    22c0:	ldp	x21, x22, [sp, #32]
    22c4:	b	2224 <grub_mod_fini+0x1efc>
    22c8:	stp	x29, x30, [sp, #-48]!
    22cc:	mov	x29, sp
    22d0:	stp	x19, x20, [sp, #16]
    22d4:	mov	x19, x0
    22d8:	ldr	w0, [x1, #4]
    22dc:	cbz	w0, 23cc <grub_mod_fini+0x20a4>
    22e0:	mov	x20, x1
    22e4:	ldr	w1, [x2, #4]
    22e8:	stp	x21, x22, [sp, #32]
    22ec:	mov	x21, x2
    22f0:	cbz	w1, 23d8 <grub_mod_fini+0x20b0>
    22f4:	ldp	w22, w4, [x19]
    22f8:	add	w2, w0, w1
    22fc:	ldr	x7, [x19, #8]
    2300:	add	w3, w2, w4
    2304:	cmp	w3, w22
    2308:	b.gt	246c <grub_mod_fini+0x2144>
    230c:	ldr	x12, [x20, #8]
    2310:	sub	w8, w0, #0x1
    2314:	ldr	x11, [x21, #8]
    2318:	sub	w9, w1, #0x1
    231c:	add	w10, w4, w0
    2320:	ldr	w5, [x12, w8, sxtw #2]
    2324:	sub	w4, w4, #0x1
    2328:	add	w10, w10, w1
    232c:	ldr	w3, [x11, w9, sxtw #2]
    2330:	cmp	w5, w3
    2334:	b.eq	2350 <grub_mod_fini+0x2028>  // b.none
    2338:	b.ge	245c <grub_mod_fini+0x2134>  // b.tcont
    233c:	subs	w9, w9, #0x1
    2340:	b.mi	23ec <grub_mod_fini+0x20c4>  // b.first
    2344:	ldr	w3, [x11, w9, sxtw #2]
    2348:	cmp	w5, w3
    234c:	b.ne	2338 <grub_mod_fini+0x2010>  // b.any
    2350:	tbnz	w4, #31, 237c <grub_mod_fini+0x2054>
    2354:	sxtw	x3, w4
    2358:	b	2368 <grub_mod_fini+0x2040>
    235c:	sub	w4, w3, #0x1
    2360:	sub	x3, x3, #0x1
    2364:	tbnz	w3, #31, 237c <grub_mod_fini+0x2054>
    2368:	ldr	w6, [x7, x3, lsl #2]
    236c:	mov	w4, w3
    2370:	cmp	w6, w5
    2374:	b.gt	235c <grub_mod_fini+0x2034>
    2378:	b.eq	2384 <grub_mod_fini+0x205c>  // b.none
    237c:	sub	w10, w10, #0x1
    2380:	str	w5, [x7, w10, sxtw #2]
    2384:	subs	w8, w8, #0x1
    2388:	b.mi	23ec <grub_mod_fini+0x20c4>  // b.first
    238c:	subs	w9, w9, #0x1
    2390:	b.mi	23ec <grub_mod_fini+0x20c4>  // b.first
    2394:	ldr	w5, [x12, w8, sxtw #2]
    2398:	ldr	w3, [x11, w9, sxtw #2]
    239c:	b	2348 <grub_mod_fini+0x2020>
    23a0:	sub	w2, w2, #0x1
    23a4:	str	w3, [x7, x0, lsl #2]
    23a8:	cmn	w2, #0x1
    23ac:	sxtw	x6, w2
    23b0:	b.ne	2428 <grub_mod_fini+0x2100>  // b.any
    23b4:	sbfiz	x2, x1, #2, #32
    23b8:	add	x1, x7, w10, sxtw #2
    23bc:	mov	x0, x7
    23c0:	bl	0 <grub_memmove>
    23c4:	ldp	x21, x22, [sp, #32]
    23c8:	mov	w0, #0x0                   	// #0
    23cc:	ldp	x19, x20, [sp, #16]
    23d0:	ldp	x29, x30, [sp], #48
    23d4:	ret
    23d8:	mov	w0, #0x0                   	// #0
    23dc:	ldp	x19, x20, [sp, #16]
    23e0:	ldp	x21, x22, [sp, #32]
    23e4:	ldp	x29, x30, [sp], #48
    23e8:	ret
    23ec:	ldr	w0, [x19, #4]
    23f0:	ldr	w5, [x20, #4]
    23f4:	ldr	w1, [x21, #4]
    23f8:	sub	w2, w0, #0x1
    23fc:	add	w5, w0, w5
    2400:	add	w5, w5, w1
    2404:	sub	w1, w5, w10
    2408:	sub	w5, w5, #0x1
    240c:	add	w0, w0, w1
    2410:	str	w0, [x19, #4]
    2414:	cmp	w1, #0x0
    2418:	ccmp	w2, #0x0, #0x1, gt
    241c:	b.lt	23b4 <grub_mod_fini+0x208c>  // b.tstop
    2420:	sxtw	x8, w5
    2424:	sxtw	x6, w2
    2428:	ldr	w4, [x7, x8, lsl #2]
    242c:	add	w0, w2, w1
    2430:	ldr	w3, [x7, x6, lsl #2]
    2434:	sxtw	x0, w0
    2438:	cmp	w4, w3
    243c:	b.le	23a0 <grub_mod_fini+0x2078>
    2440:	sub	w5, w5, #0x1
    2444:	str	w4, [x7, x0, lsl #2]
    2448:	subs	w1, w1, #0x1
    244c:	sxtw	x8, w5
    2450:	b.ne	2428 <grub_mod_fini+0x2100>  // b.any
    2454:	mov	x2, #0x0                   	// #0
    2458:	b	23b8 <grub_mod_fini+0x2090>
    245c:	subs	w8, w8, #0x1
    2460:	b.mi	23ec <grub_mod_fini+0x20c4>  // b.first
    2464:	ldr	w5, [x12, w8, sxtw #2]
    2468:	b	2330 <grub_mod_fini+0x2008>
    246c:	add	w22, w2, w22
    2470:	mov	x0, x7
    2474:	sbfiz	x1, x22, #2, #32
    2478:	bl	0 <grub_realloc>
    247c:	mov	x7, x0
    2480:	cbz	x0, 249c <grub_mod_fini+0x2174>
    2484:	ldr	w0, [x20, #4]
    2488:	ldr	w1, [x21, #4]
    248c:	ldr	w4, [x19, #4]
    2490:	str	w22, [x19]
    2494:	str	x7, [x19, #8]
    2498:	b	230c <grub_mod_fini+0x1fe4>
    249c:	mov	w0, #0xc                   	// #12
    24a0:	ldp	x21, x22, [sp, #32]
    24a4:	b	23cc <grub_mod_fini+0x20a4>
    24a8:	stp	x29, x30, [sp, #-64]!
    24ac:	mov	x29, sp
    24b0:	ldr	w4, [x1, #56]
    24b4:	ldr	w3, [x1, #72]
    24b8:	str	x19, [sp, #16]
    24bc:	mov	x19, x0
    24c0:	cmp	w3, w4
    24c4:	b.le	26cc <grub_mod_fini+0x23a4>
    24c8:	ldr	x6, [x1, #8]
    24cc:	sxtw	x7, w4
    24d0:	ldrb	w5, [x0, #10]
    24d4:	ldr	w0, [x1, #104]
    24d8:	ldrb	w3, [x6, w4, sxtw]
    24dc:	and	w5, w5, #0xffffff9f
    24e0:	strb	w3, [x19]
    24e4:	cmp	w0, #0x1
    24e8:	strb	w5, [x19, #10]
    24ec:	b.le	2590 <grub_mod_fini+0x2268>
    24f0:	ldr	w5, [x1, #44]
    24f4:	cmp	w4, w5
    24f8:	b.eq	250c <grub_mod_fini+0x21e4>  // b.none
    24fc:	ldr	x5, [x1, #16]
    2500:	ldr	w5, [x5, x7, lsl #2]
    2504:	cmn	w5, #0x1
    2508:	b.eq	2780 <grub_mod_fini+0x2458>  // b.none
    250c:	cmp	w3, #0x5c
    2510:	b.eq	25d0 <grub_mod_fini+0x22a8>  // b.none
    2514:	ldr	x0, [x1, #16]
    2518:	mov	w5, #0x1                   	// #1
    251c:	strb	w5, [x19, #8]
    2520:	mov	w5, #0x1                   	// #1
    2524:	ldr	w8, [x0, x7, lsl #2]
    2528:	and	w0, w8, #0xffffffdf
    252c:	sub	w0, w0, #0x41
    2530:	cmp	w0, #0x19
    2534:	b.hi	26e4 <grub_mod_fini+0x23bc>  // b.pmore
    2538:	ldrb	w0, [x19, #10]
    253c:	cmp	w3, #0x2e
    2540:	bfi	w0, w5, #6, #1
    2544:	strb	w0, [x19, #10]
    2548:	b.eq	29b4 <grub_mod_fini+0x268c>  // b.none
    254c:	b.hi	261c <grub_mod_fini+0x22f4>  // b.pmore
    2550:	cmp	w3, #0x29
    2554:	b.eq	29c4 <grub_mod_fini+0x269c>  // b.none
    2558:	b.ls	25f8 <grub_mod_fini+0x22d0>  // b.plast
    255c:	cmp	w3, #0x2a
    2560:	b.eq	29d0 <grub_mod_fini+0x26a8>  // b.none
    2564:	cmp	w3, #0x2b
    2568:	b.ne	2a6c <grub_mod_fini+0x2744>  // b.any
    256c:	mov	x1, #0x402                 	// #1026
    2570:	mov	w0, #0x1                   	// #1
    2574:	tst	x2, x1
    2578:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    257c:	mov	w1, #0x12                  	// #18
    2580:	strb	w1, [x19, #8]
    2584:	ldr	x19, [sp, #16]
    2588:	ldp	x29, x30, [sp], #64
    258c:	ret
    2590:	cmp	w3, #0x5c
    2594:	b.eq	25d0 <grub_mod_fini+0x22a8>  // b.none
    2598:	and	w0, w3, #0xffffffdf
    259c:	mov	w5, #0x1                   	// #1
    25a0:	sub	w0, w0, #0x41
    25a4:	strb	w5, [x19, #8]
    25a8:	and	w0, w0, #0xff
    25ac:	mov	w5, #0x1                   	// #1
    25b0:	cmp	w0, #0x19
    25b4:	b.ls	2538 <grub_mod_fini+0x2210>  // b.plast
    25b8:	sub	w0, w3, #0x30
    25bc:	cmp	w0, #0x9
    25c0:	cset	w5, ls  // ls = plast
    25c4:	cmp	w3, #0x5f
    25c8:	csinc	w5, w5, wzr, ne  // ne = any
    25cc:	b	2538 <grub_mod_fini+0x2210>
    25d0:	ldr	w5, [x1, #64]
    25d4:	add	w3, w4, #0x1
    25d8:	cmp	w3, w5
    25dc:	b.lt	26fc <grub_mod_fini+0x23d4>  // b.tstop
    25e0:	mov	w1, #0x24                  	// #36
    25e4:	strb	w1, [x19, #8]
    25e8:	mov	w0, #0x1                   	// #1
    25ec:	ldr	x19, [sp, #16]
    25f0:	ldp	x29, x30, [sp], #64
    25f4:	ret
    25f8:	cmp	w3, #0x24
    25fc:	b.eq	29e0 <grub_mod_fini+0x26b8>  // b.none
    2600:	cmp	w3, #0x28
    2604:	mov	w0, #0x1                   	// #1
    2608:	b.ne	2654 <grub_mod_fini+0x232c>  // b.any
    260c:	tbz	w2, #13, 2584 <grub_mod_fini+0x225c>
    2610:	mov	w1, #0x8                   	// #8
    2614:	strb	w1, [x19, #8]
    2618:	b	2584 <grub_mod_fini+0x225c>
    261c:	cmp	w3, #0x7b
    2620:	b.eq	2a48 <grub_mod_fini+0x2720>  // b.none
    2624:	b.ls	2670 <grub_mod_fini+0x2348>  // b.plast
    2628:	cmp	w3, #0x7c
    262c:	b.eq	2a5c <grub_mod_fini+0x2734>  // b.none
    2630:	cmp	w3, #0x7d
    2634:	b.ne	2a6c <grub_mod_fini+0x2744>  // b.any
    2638:	mov	x1, #0x1200                	// #4608
    263c:	mov	w0, #0x1                   	// #1
    2640:	bics	xzr, x1, x2
    2644:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    2648:	mov	w1, #0x18                  	// #24
    264c:	strb	w1, [x19, #8]
    2650:	b	2584 <grub_mod_fini+0x225c>
    2654:	cmp	w3, #0xa
    2658:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    265c:	tbz	w2, #11, 2584 <grub_mod_fini+0x225c>
    2660:	mov	w1, #0xa                   	// #10
    2664:	mov	w0, #0x1                   	// #1
    2668:	strb	w1, [x19, #8]
    266c:	b	2584 <grub_mod_fini+0x225c>
    2670:	cmp	w3, #0x5b
    2674:	b.eq	2a74 <grub_mod_fini+0x274c>  // b.none
    2678:	cmp	w3, #0x5e
    267c:	b.ne	26a8 <grub_mod_fini+0x2380>  // b.any
    2680:	and	x0, x2, #0xfffff8
    2684:	ands	x0, x0, #0xffffffffff80000f
    2688:	ccmp	w4, #0x0, #0x4, eq  // eq = none
    268c:	b.ne	27dc <grub_mod_fini+0x24b4>  // b.any
    2690:	mov	w1, #0xc                   	// #12
    2694:	mov	w2, #0x10                  	// #16
    2698:	mov	w0, #0x1                   	// #1
    269c:	str	w2, [x19]
    26a0:	strb	w1, [x19, #8]
    26a4:	b	2584 <grub_mod_fini+0x225c>
    26a8:	cmp	w3, #0x3f
    26ac:	b.ne	2a6c <grub_mod_fini+0x2744>  // b.any
    26b0:	mov	x1, #0x402                 	// #1026
    26b4:	mov	w0, #0x1                   	// #1
    26b8:	tst	x2, x1
    26bc:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    26c0:	mov	w1, #0x13                  	// #19
    26c4:	strb	w1, [x19, #8]
    26c8:	b	2584 <grub_mod_fini+0x225c>
    26cc:	mov	w1, #0x2                   	// #2
    26d0:	strb	w1, [x19, #8]
    26d4:	mov	w0, #0x0                   	// #0
    26d8:	ldr	x19, [sp, #16]
    26dc:	ldp	x29, x30, [sp], #64
    26e0:	ret
    26e4:	sub	w0, w8, #0x30
    26e8:	cmp	w0, #0x9
    26ec:	cset	w5, ls  // ls = plast
    26f0:	cmp	w8, #0x5f
    26f4:	csinc	w5, w5, wzr, ne  // ne = any
    26f8:	b	2538 <grub_mod_fini+0x2210>
    26fc:	ldrb	w5, [x1, #99]
    2700:	cbnz	w5, 2a84 <grub_mod_fini+0x275c>
    2704:	ldrb	w4, [x6, w3, sxtw]
    2708:	mov	w5, #0x1                   	// #1
    270c:	strb	w4, [x19]
    2710:	strb	w5, [x19, #8]
    2714:	cmp	w0, #0x1
    2718:	b.le	27a4 <grub_mod_fini+0x247c>
    271c:	ldr	x5, [x1, #16]
    2720:	add	x5, x5, w3, sxtw #2
    2724:	ldr	w3, [x5]
    2728:	mov	w1, #0x1                   	// #1
    272c:	and	w0, w3, #0xffffffdf
    2730:	sub	w0, w0, #0x41
    2734:	cmp	w0, #0x19
    2738:	b.ls	2750 <grub_mod_fini+0x2428>  // b.plast
    273c:	sub	w0, w3, #0x30
    2740:	cmp	w0, #0x9
    2744:	cset	w1, ls  // ls = plast
    2748:	cmp	w3, #0x5f
    274c:	csinc	w1, w1, wzr, ne  // ne = any
    2750:	ldrb	w0, [x19, #10]
    2754:	bfi	w0, w1, #6, #1
    2758:	strb	w0, [x19, #10]
    275c:	sub	w0, w4, #0x27
    2760:	cmp	w0, #0x56
    2764:	b.hi	27d4 <grub_mod_fini+0x24ac>  // b.pmore
    2768:	adrp	x1, 0 <grub_mod_init-0x288>
    276c:	ldr	x1, [x1]
    2770:	ldrh	w0, [x1, w0, uxtw #1]
    2774:	adr	x1, 2780 <grub_mod_fini+0x2458>
    2778:	add	x0, x1, w0, sxth #2
    277c:	br	x0
    2780:	ldr	w1, [x19, #8]
    2784:	mov	w2, #0x1                   	// #1
    2788:	movk	w2, #0x20, lsl #16
    278c:	mov	w0, #0x1                   	// #1
    2790:	and	w1, w1, #0xffffff00
    2794:	and	w1, w1, #0xffdfffff
    2798:	orr	w1, w1, w2
    279c:	str	w1, [x19, #8]
    27a0:	b	2584 <grub_mod_fini+0x225c>
    27a4:	and	w0, w4, #0xffffffdf
    27a8:	mov	w1, #0x1                   	// #1
    27ac:	sub	w0, w0, #0x41
    27b0:	and	w0, w0, #0xff
    27b4:	cmp	w0, #0x19
    27b8:	b.ls	2750 <grub_mod_fini+0x2428>  // b.plast
    27bc:	sub	w0, w4, #0x30
    27c0:	cmp	w0, #0x9
    27c4:	cset	w1, ls  // ls = plast
    27c8:	cmp	w4, #0x5f
    27cc:	csinc	w1, w1, wzr, ne  // ne = any
    27d0:	b	2750 <grub_mod_fini+0x2428>
    27d4:	mov	w0, #0x2                   	// #2
    27d8:	b	2584 <grub_mod_fini+0x225c>
    27dc:	add	x6, x6, x7
    27e0:	tst	x2, #0x800
    27e4:	mov	w0, #0x1                   	// #1
    27e8:	ldurb	w1, [x6, #-1]
    27ec:	ccmp	w1, #0xa, #0x0, ne  // ne = any
    27f0:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    27f4:	b	2690 <grub_mod_fini+0x2368>
    27f8:	mov	w0, #0x2                   	// #2
    27fc:	tbnz	w2, #14, 2584 <grub_mod_fini+0x225c>
    2800:	sub	w4, w4, #0x31
    2804:	mov	w1, #0x4                   	// #4
    2808:	str	w4, [x19]
    280c:	strb	w1, [x19, #8]
    2810:	b	2584 <grub_mod_fini+0x225c>
    2814:	mov	w0, #0x2                   	// #2
    2818:	tbnz	w2, #13, 2584 <grub_mod_fini+0x225c>
    281c:	nop
    2820:	mov	w1, #0x9                   	// #9
    2824:	strb	w1, [x19, #8]
    2828:	b	2584 <grub_mod_fini+0x225c>
    282c:	mov	w0, #0x2                   	// #2
    2830:	tbnz	w2, #13, 2584 <grub_mod_fini+0x225c>
    2834:	b	2610 <grub_mod_fini+0x22e8>
    2838:	mov	w0, #0x2                   	// #2
    283c:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    2840:	mov	w1, #0x20                  	// #32
    2844:	strb	w1, [x19, #8]
    2848:	b	2584 <grub_mod_fini+0x225c>
    284c:	mov	w0, #0x2                   	// #2
    2850:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    2854:	mov	w1, #0x22                  	// #34
    2858:	strb	w1, [x19, #8]
    285c:	b	2584 <grub_mod_fini+0x225c>
    2860:	mov	w0, #0x2                   	// #2
    2864:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    2868:	mov	w1, #0xc                   	// #12
    286c:	mov	w2, #0x100                 	// #256
    2870:	str	w2, [x19]
    2874:	strb	w1, [x19, #8]
    2878:	b	2584 <grub_mod_fini+0x225c>
    287c:	mov	w0, #0x2                   	// #2
    2880:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    2884:	mov	w1, #0xc                   	// #12
    2888:	mov	w2, #0x40                  	// #64
    288c:	str	w2, [x19]
    2890:	strb	w1, [x19, #8]
    2894:	b	2584 <grub_mod_fini+0x225c>
    2898:	mov	w0, #0x2                   	// #2
    289c:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    28a0:	mov	w1, #0x21                  	// #33
    28a4:	strb	w1, [x19, #8]
    28a8:	b	2584 <grub_mod_fini+0x225c>
    28ac:	mov	w0, #0x2                   	// #2
    28b0:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    28b4:	mov	w1, #0x23                  	// #35
    28b8:	strb	w1, [x19, #8]
    28bc:	b	2584 <grub_mod_fini+0x225c>
    28c0:	mov	w0, #0x2                   	// #2
    28c4:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    28c8:	mov	w1, #0xc                   	// #12
    28cc:	mov	w2, #0x200                 	// #512
    28d0:	str	w2, [x19]
    28d4:	strb	w1, [x19, #8]
    28d8:	b	2584 <grub_mod_fini+0x225c>
    28dc:	mov	x0, #0x402                 	// #1026
    28e0:	and	x2, x2, x0
    28e4:	cmp	x2, #0x2
    28e8:	mov	w0, #0x2                   	// #2
    28ec:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    28f0:	b	26c0 <grub_mod_fini+0x2398>
    28f4:	mov	w0, #0x2                   	// #2
    28f8:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    28fc:	mov	w1, #0xc                   	// #12
    2900:	mov	w2, #0x80                  	// #128
    2904:	str	w2, [x19]
    2908:	strb	w1, [x19, #8]
    290c:	b	2584 <grub_mod_fini+0x225c>
    2910:	mov	x0, #0x402                 	// #1026
    2914:	and	x2, x2, x0
    2918:	cmp	x2, #0x2
    291c:	mov	w0, #0x2                   	// #2
    2920:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    2924:	b	257c <grub_mod_fini+0x2254>
    2928:	mov	w0, #0x2                   	// #2
    292c:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    2930:	mov	w1, #0xc                   	// #12
    2934:	mov	w2, #0x9                   	// #9
    2938:	str	w2, [x19]
    293c:	strb	w1, [x19, #8]
    2940:	b	2584 <grub_mod_fini+0x225c>
    2944:	mov	w0, #0x2                   	// #2
    2948:	tbnz	w2, #19, 2584 <grub_mod_fini+0x225c>
    294c:	mov	w1, #0xc                   	// #12
    2950:	mov	w2, #0x6                   	// #6
    2954:	str	w2, [x19]
    2958:	strb	w1, [x19, #8]
    295c:	b	2584 <grub_mod_fini+0x225c>
    2960:	mov	x0, #0x1200                	// #4608
    2964:	and	x2, x2, x0
    2968:	cmp	x2, #0x200
    296c:	mov	w0, #0x2                   	// #2
    2970:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    2974:	b	2648 <grub_mod_fini+0x2320>
    2978:	mov	x1, #0x8400                	// #33792
    297c:	mov	w0, #0x2                   	// #2
    2980:	tst	x2, x1
    2984:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    2988:	mov	w1, #0xa                   	// #10
    298c:	strb	w1, [x19, #8]
    2990:	b	2584 <grub_mod_fini+0x225c>
    2994:	mov	x0, #0x1200                	// #4608
    2998:	and	x2, x2, x0
    299c:	cmp	x2, #0x200
    29a0:	mov	w0, #0x2                   	// #2
    29a4:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    29a8:	mov	w1, #0x17                  	// #23
    29ac:	strb	w1, [x19, #8]
    29b0:	b	2584 <grub_mod_fini+0x225c>
    29b4:	mov	w1, #0x5                   	// #5
    29b8:	mov	w0, #0x1                   	// #1
    29bc:	strb	w1, [x19, #8]
    29c0:	b	2584 <grub_mod_fini+0x225c>
    29c4:	mov	w0, #0x1                   	// #1
    29c8:	tbz	w2, #13, 2584 <grub_mod_fini+0x225c>
    29cc:	b	2820 <grub_mod_fini+0x24f8>
    29d0:	mov	w1, #0xb                   	// #11
    29d4:	mov	w0, #0x1                   	// #1
    29d8:	strb	w1, [x19, #8]
    29dc:	b	2584 <grub_mod_fini+0x225c>
    29e0:	tbnz	w2, #3, 2a30 <grub_mod_fini+0x2708>
    29e4:	ldr	w0, [x1, #64]
    29e8:	add	w4, w4, #0x1
    29ec:	cmp	w4, w0
    29f0:	b.eq	2a30 <grub_mod_fini+0x2708>  // b.none
    29f4:	str	w4, [x1, #56]
    29f8:	add	x0, sp, #0x30
    29fc:	str	x1, [sp, #40]
    2a00:	bl	24a8 <grub_mod_fini+0x2180>
    2a04:	ldr	x1, [sp, #40]
    2a08:	mov	w0, #0x1                   	// #1
    2a0c:	ldrb	w2, [sp, #56]
    2a10:	ldr	w3, [x1, #56]
    2a14:	sub	w2, w2, #0x9
    2a18:	and	w2, w2, #0xff
    2a1c:	sub	w3, w3, #0x1
    2a20:	str	w3, [x1, #56]
    2a24:	cmp	w2, w0
    2a28:	b.hi	2584 <grub_mod_fini+0x225c>  // b.pmore
    2a2c:	nop
    2a30:	mov	w1, #0xc                   	// #12
    2a34:	mov	w2, #0x20                  	// #32
    2a38:	mov	w0, #0x1                   	// #1
    2a3c:	str	w2, [x19]
    2a40:	strb	w1, [x19, #8]
    2a44:	b	2584 <grub_mod_fini+0x225c>
    2a48:	mov	x1, #0x1200                	// #4608
    2a4c:	mov	w0, #0x1                   	// #1
    2a50:	bics	xzr, x1, x2
    2a54:	b.ne	2584 <grub_mod_fini+0x225c>  // b.any
    2a58:	b	29a8 <grub_mod_fini+0x2680>
    2a5c:	mov	x0, #0x8400                	// #33792
    2a60:	and	x2, x2, x0
    2a64:	cmp	x2, #0x8, lsl #12
    2a68:	b.eq	2660 <grub_mod_fini+0x2338>  // b.none
    2a6c:	mov	w0, #0x1                   	// #1
    2a70:	b	2584 <grub_mod_fini+0x225c>
    2a74:	mov	w1, #0x14                  	// #20
    2a78:	mov	w0, #0x1                   	// #1
    2a7c:	strb	w1, [x19, #8]
    2a80:	b	2584 <grub_mod_fini+0x225c>
    2a84:	cmp	w0, #0x1
    2a88:	b.le	2abc <grub_mod_fini+0x2794>
    2a8c:	ldr	x5, [x1, #16]
    2a90:	ldr	w7, [x5, w3, sxtw #2]
    2a94:	add	x5, x5, w3, sxtw #2
    2a98:	cmn	w7, #0x1
    2a9c:	b.eq	2af8 <grub_mod_fini+0x27d0>  // b.none
    2aa0:	ldr	w7, [x1, #44]
    2aa4:	add	w4, w4, #0x2
    2aa8:	cmp	w7, w4
    2aac:	b.eq	2abc <grub_mod_fini+0x2794>  // b.none
    2ab0:	ldr	w4, [x5, #4]
    2ab4:	cmn	w4, #0x1
    2ab8:	b.eq	2af8 <grub_mod_fini+0x27d0>  // b.none
    2abc:	ldrb	w5, [x1, #100]
    2ac0:	ldr	w4, [x1, #40]
    2ac4:	ldr	x7, [x1]
    2ac8:	cbz	w5, 2aec <grub_mod_fini+0x27c4>
    2acc:	ldr	x8, [x1, #24]
    2ad0:	sxtw	x5, w3
    2ad4:	ldr	w8, [x8, x5, lsl #2]
    2ad8:	add	w4, w4, w8
    2adc:	ldrb	w4, [x7, w4, sxtw]
    2ae0:	tbz	w4, #7, 2708 <grub_mod_fini+0x23e0>
    2ae4:	ldrb	w4, [x6, x5]
    2ae8:	b	2708 <grub_mod_fini+0x23e0>
    2aec:	add	w4, w3, w4
    2af0:	ldrb	w4, [x7, w4, sxtw]
    2af4:	b	2708 <grub_mod_fini+0x23e0>
    2af8:	ldrb	w4, [x6, w3, sxtw]
    2afc:	mov	w0, #0x1                   	// #1
    2b00:	strb	w4, [x19]
    2b04:	strb	w0, [x19, #8]
    2b08:	b	2724 <grub_mod_fini+0x23fc>
    2b0c:	nop
	...
    2b18:	mov	x10, x0
    2b1c:	ldr	w0, [x1, #104]
    2b20:	ldr	w9, [x1, #56]
    2b24:	mov	x11, x2
    2b28:	and	w5, w5, #0xff
    2b2c:	cmp	w0, #0x1
    2b30:	b.eq	2b84 <grub_mod_fini+0x285c>  // b.none
    2b34:	ldr	w7, [x1, #44]
    2b38:	add	w6, w9, #0x1
    2b3c:	cmp	w6, w7
    2b40:	b.ge	2b84 <grub_mod_fini+0x285c>  // b.tcont
    2b44:	sub	w8, w7, w9
    2b48:	sxtw	x6, w6
    2b4c:	mov	w7, #0x1                   	// #1
    2b50:	ldr	x12, [x1, #16]
    2b54:	b	2b6c <grub_mod_fini+0x2844>
    2b58:	add	w7, w7, #0x1
    2b5c:	add	w2, w6, #0x1
    2b60:	cmp	w8, w7
    2b64:	add	x6, x6, #0x1
    2b68:	b.eq	2c70 <grub_mod_fini+0x2948>  // b.none
    2b6c:	ldr	w0, [x12, x6, lsl #2]
    2b70:	mov	w2, w6
    2b74:	cmn	w0, #0x1
    2b78:	b.eq	2b58 <grub_mod_fini+0x2830>  // b.none
    2b7c:	cmp	w7, #0x1
    2b80:	b.ne	2c70 <grub_mod_fini+0x2948>  // b.any
    2b84:	ldrb	w6, [x11, #8]
    2b88:	add	w3, w9, w3
    2b8c:	str	w3, [x1, #56]
    2b90:	and	w0, w6, #0xfffffffb
    2b94:	cmp	w0, #0x1a
    2b98:	ccmp	w6, #0x1c, #0x4, ne  // ne = any
    2b9c:	b.eq	2bc0 <grub_mod_fini+0x2898>  // b.none
    2ba0:	cmp	w5, #0x0
    2ba4:	ccmp	w6, #0x16, #0x0, eq  // eq = none
    2ba8:	b.eq	2d5c <grub_mod_fini+0x2a34>  // b.none
    2bac:	ldrb	w1, [x11]
    2bb0:	mov	w0, #0x0                   	// #0
    2bb4:	str	wzr, [x10]
    2bb8:	strb	w1, [x10, #8]
    2bbc:	ret
    2bc0:	ldr	w5, [x1, #72]
    2bc4:	cmp	w3, w5
    2bc8:	b.ge	2c68 <grub_mod_fini+0x2940>  // b.tcont
    2bcc:	ldrb	w7, [x11]
    2bd0:	mov	x0, #0x0                   	// #0
    2bd4:	b	2bf8 <grub_mod_fini+0x28d0>
    2bd8:	ldr	x3, [x10, #8]
    2bdc:	strb	w2, [x3, x0]
    2be0:	add	x0, x0, #0x1
    2be4:	cmp	x0, #0x20
    2be8:	b.eq	2c68 <grub_mod_fini+0x2940>  // b.none
    2bec:	ldrb	w6, [x11, #8]
    2bf0:	ldr	w3, [x1, #56]
    2bf4:	ldr	w5, [x1, #72]
    2bf8:	cmp	w6, #0x1e
    2bfc:	add	w4, w3, #0x1
    2c00:	mov	w6, w0
    2c04:	b.eq	2c8c <grub_mod_fini+0x2964>  // b.none
    2c08:	ldr	x2, [x1, #8]
    2c0c:	str	w4, [x1, #56]
    2c10:	ldrb	w2, [x2, w3, sxtw]
    2c14:	cmp	w5, w4
    2c18:	b.le	2c68 <grub_mod_fini+0x2940>
    2c1c:	cmp	w7, w2
    2c20:	b.ne	2bd8 <grub_mod_fini+0x28b0>  // b.any
    2c24:	ldr	x3, [x1, #8]
    2c28:	ldrb	w3, [x3, w4, sxtw]
    2c2c:	cmp	w3, #0x5d
    2c30:	b.ne	2bd8 <grub_mod_fini+0x28b0>  // b.any
    2c34:	ldr	x0, [x10, #8]
    2c38:	add	w4, w4, #0x1
    2c3c:	str	w4, [x1, #56]
    2c40:	strb	wzr, [x0, w6, sxtw]
    2c44:	ldrb	w0, [x11, #8]
    2c48:	cmp	w0, #0x1c
    2c4c:	b.eq	2db0 <grub_mod_fini+0x2a88>  // b.none
    2c50:	cmp	w0, #0x1e
    2c54:	b.eq	2da0 <grub_mod_fini+0x2a78>  // b.none
    2c58:	cmp	w0, #0x1a
    2c5c:	mov	w0, #0x0                   	// #0
    2c60:	b.eq	2d94 <grub_mod_fini+0x2a6c>  // b.none
    2c64:	ret
    2c68:	mov	w0, #0x7                   	// #7
    2c6c:	ret
    2c70:	mov	w0, #0x1                   	// #1
    2c74:	str	w0, [x10]
    2c78:	mov	w0, #0x0                   	// #0
    2c7c:	ldr	w3, [x12, w9, sxtw #2]
    2c80:	str	w3, [x10, #8]
    2c84:	str	w2, [x1, #56]
    2c88:	ret
    2c8c:	ldrb	w2, [x1, #99]
    2c90:	cbz	w2, 2c08 <grub_mod_fini+0x28e0>
    2c94:	ldrb	w2, [x1, #100]
    2c98:	cbz	w2, 2d34 <grub_mod_fini+0x2a0c>
    2c9c:	ldr	w13, [x1, #44]
    2ca0:	sxtw	x8, w3
    2ca4:	cmp	w13, w3
    2ca8:	b.eq	2cbc <grub_mod_fini+0x2994>  // b.none
    2cac:	ldr	x2, [x1, #16]
    2cb0:	ldr	w2, [x2, x8, lsl #2]
    2cb4:	cmn	w2, #0x1
    2cb8:	b.eq	2d4c <grub_mod_fini+0x2a24>  // b.none
    2cbc:	ldr	x2, [x1, #24]
    2cc0:	ldr	w12, [x1, #40]
    2cc4:	ldr	x9, [x1]
    2cc8:	ldr	w2, [x2, x8, lsl #2]
    2ccc:	add	w2, w2, w12
    2cd0:	ldrb	w2, [x9, w2, sxtw]
    2cd4:	tbnz	w2, #7, 2d4c <grub_mod_fini+0x2a24>
    2cd8:	ldr	w8, [x1, #104]
    2cdc:	cmp	w8, #0x1
    2ce0:	b.eq	2d2c <grub_mod_fini+0x2a04>  // b.none
    2ce4:	cmp	w13, w4
    2ce8:	b.le	2d2c <grub_mod_fini+0x2a04>
    2cec:	ldr	x14, [x1, #16]
    2cf0:	add	w8, w3, #0x2
    2cf4:	sub	w13, w13, w3
    2cf8:	mov	w9, #0x1                   	// #1
    2cfc:	sxtw	x8, w8
    2d00:	sub	x14, x14, #0x4
    2d04:	b	2d14 <grub_mod_fini+0x29ec>
    2d08:	add	w9, w9, #0x1
    2d0c:	cmp	w9, w13
    2d10:	b.eq	2d2c <grub_mod_fini+0x2a04>  // b.none
    2d14:	ldr	w12, [x14, x8, lsl #2]
    2d18:	mov	w4, w8
    2d1c:	add	x8, x8, #0x1
    2d20:	cmn	w12, #0x1
    2d24:	b.eq	2d08 <grub_mod_fini+0x29e0>  // b.none
    2d28:	add	w4, w9, w3
    2d2c:	str	w4, [x1, #56]
    2d30:	b	2c14 <grub_mod_fini+0x28ec>
    2d34:	ldr	w2, [x1, #40]
    2d38:	ldr	x8, [x1]
    2d3c:	add	w3, w2, w3
    2d40:	str	w4, [x1, #56]
    2d44:	ldrb	w2, [x8, w3, sxtw]
    2d48:	b	2c14 <grub_mod_fini+0x28ec>
    2d4c:	ldr	x2, [x1, #8]
    2d50:	str	w4, [x1, #56]
    2d54:	ldrb	w2, [x2, x8]
    2d58:	b	2c14 <grub_mod_fini+0x28ec>
    2d5c:	stp	x29, x30, [sp, #-32]!
    2d60:	mov	x2, x4
    2d64:	mov	x29, sp
    2d68:	add	x0, sp, #0x10
    2d6c:	bl	1240 <grub_mod_fini+0xf18>
    2d70:	ldrb	w0, [sp, #24]
    2d74:	cmp	w0, #0x15
    2d78:	b.ne	2dc0 <grub_mod_fini+0x2a98>  // b.any
    2d7c:	ldrb	w1, [x11]
    2d80:	mov	w0, #0x0                   	// #0
    2d84:	str	wzr, [x10]
    2d88:	strb	w1, [x10, #8]
    2d8c:	ldp	x29, x30, [sp], #32
    2d90:	ret
    2d94:	mov	w1, #0x3                   	// #3
    2d98:	str	w1, [x10]
    2d9c:	ret
    2da0:	mov	w1, #0x4                   	// #4
    2da4:	mov	w0, #0x0                   	// #0
    2da8:	str	w1, [x10]
    2dac:	ret
    2db0:	mov	w1, #0x2                   	// #2
    2db4:	mov	w0, #0x0                   	// #0
    2db8:	str	w1, [x10]
    2dbc:	ret
    2dc0:	mov	w0, #0xb                   	// #11
    2dc4:	b	2d8c <grub_mod_fini+0x2a64>
    2dc8:	stp	x29, x30, [sp, #-64]!
    2dcc:	mov	x15, x1
    2dd0:	mov	x10, x0
    2dd4:	mov	x29, sp
    2dd8:	ldr	w16, [x0, #148]
    2ddc:	mov	x14, x2
    2de0:	mov	w18, w3
    2de4:	mov	w13, w4
    2de8:	mov	w9, w16
    2dec:	mov	w11, #0x0                   	// #0
    2df0:	mov	w1, #0x14                  	// #20
    2df4:	stp	x19, x20, [sp, #16]
    2df8:	mov	w19, w5
    2dfc:	stp	x21, x22, [sp, #32]
    2e00:	ldr	x20, [x0, #112]
    2e04:	b	2e24 <grub_mod_fini+0x2afc>
    2e08:	ldr	x8, [x10, #160]
    2e0c:	asr	w7, w7, #1
    2e10:	smaddl	x8, w7, w1, x8
    2e14:	ldr	w0, [x8, #4]
    2e18:	cmp	w0, w13
    2e1c:	b.lt	2f6c <grub_mod_fini+0x2c44>  // b.tstop
    2e20:	mov	w9, w7
    2e24:	add	w7, w9, w11
    2e28:	cmp	w9, w11
    2e2c:	b.gt	2e08 <grub_mod_fini+0x2ae0>
    2e30:	cmp	w16, w11
    2e34:	b.le	301c <grub_mod_fini+0x2cf4>
    2e38:	ldr	x1, [x10, #160]
    2e3c:	mov	w0, #0x14                  	// #20
    2e40:	smaddl	x0, w11, w0, x1
    2e44:	ldr	w0, [x0, #4]
    2e48:	cmp	w13, w0
    2e4c:	csinv	w11, w11, wzr, eq  // eq = none
    2e50:	mov	w9, w16
    2e54:	mov	w12, #0x0                   	// #0
    2e58:	mov	w1, #0x14                  	// #20
    2e5c:	b	2e7c <grub_mod_fini+0x2b54>
    2e60:	ldr	x8, [x10, #160]
    2e64:	asr	w7, w7, #1
    2e68:	smaddl	x8, w7, w1, x8
    2e6c:	ldr	w0, [x8, #4]
    2e70:	cmp	w0, w6
    2e74:	b.lt	2f74 <grub_mod_fini+0x2c4c>  // b.tstop
    2e78:	mov	w9, w7
    2e7c:	add	w7, w9, w12
    2e80:	cmp	w9, w12
    2e84:	b.gt	2e60 <grub_mod_fini+0x2b38>
    2e88:	cmp	w16, w12
    2e8c:	b.le	3024 <grub_mod_fini+0x2cfc>
    2e90:	ldr	x1, [x10, #160]
    2e94:	mov	w0, #0x14                  	// #20
    2e98:	smaddl	x0, w12, w0, x1
    2e9c:	ldr	w0, [x0, #4]
    2ea0:	cmp	w6, w0
    2ea4:	csinv	w12, w12, wzr, eq  // eq = none
    2ea8:	ldr	w4, [x15]
    2eac:	mov	x9, #0x0                   	// #0
    2eb0:	mov	w21, #0x14                  	// #20
    2eb4:	cmp	w4, #0x0
    2eb8:	b.le	2fb0 <grub_mod_fini+0x2c88>
    2ebc:	stp	x23, x24, [sp, #48]
    2ec0:	lsl	x23, x9, #2
    2ec4:	ldr	x0, [x14]
    2ec8:	ldr	x2, [x10, #160]
    2ecc:	ldr	w0, [x0, x9, lsl #2]
    2ed0:	ldr	x5, [x20]
    2ed4:	smull	x0, w0, w21
    2ed8:	add	x1, x2, x0
    2edc:	ldrsw	x0, [x2, x0]
    2ee0:	ldr	w3, [x1, #8]
    2ee4:	lsl	x0, x0, #4
    2ee8:	cmp	w13, w3
    2eec:	ldr	w24, [x5, x0]
    2ef0:	b.lt	3000 <grub_mod_fini+0x2cd8>  // b.tstop
    2ef4:	ldr	w4, [x1, #12]
    2ef8:	cmp	w13, w4
    2efc:	b.gt	2ff8 <grub_mod_fini+0x2cd0>
    2f00:	cmp	w13, w3
    2f04:	cset	w1, eq  // eq = none
    2f08:	cmp	w13, w4
    2f0c:	b.eq	2fb8 <grub_mod_fini+0x2c90>  // b.none
    2f10:	cmp	w13, w3
    2f14:	mov	w22, #0x0                   	// #0
    2f18:	b.eq	2fbc <grub_mod_fini+0x2c94>  // b.none
    2f1c:	cmp	w6, w3
    2f20:	b.lt	2f54 <grub_mod_fini+0x2c2c>  // b.tstop
    2f24:	cmp	w6, w4
    2f28:	mov	w0, #0x1                   	// #1
    2f2c:	b.gt	2f4c <grub_mod_fini+0x2c24>
    2f30:	cmp	w6, w3
    2f34:	cset	w1, eq  // eq = none
    2f38:	cmp	w6, w4
    2f3c:	b.eq	2f7c <grub_mod_fini+0x2c54>  // b.none
    2f40:	cmp	w6, w3
    2f44:	mov	w0, #0x0                   	// #0
    2f48:	b.eq	2f80 <grub_mod_fini+0x2c58>  // b.none
    2f4c:	cmp	w0, w22
    2f50:	b.eq	2f9c <grub_mod_fini+0x2c74>  // b.none
    2f54:	ldp	x23, x24, [sp, #48]
    2f58:	mov	w0, #0x1                   	// #1
    2f5c:	ldp	x19, x20, [sp, #16]
    2f60:	ldp	x21, x22, [sp, #32]
    2f64:	ldp	x29, x30, [sp], #64
    2f68:	ret
    2f6c:	add	w11, w7, #0x1
    2f70:	b	2e24 <grub_mod_fini+0x2afc>
    2f74:	add	w12, w7, #0x1
    2f78:	b	2e7c <grub_mod_fini+0x2b54>
    2f7c:	orr	w1, w1, #0x2
    2f80:	mov	w2, w24
    2f84:	mov	w4, w12
    2f88:	mov	w3, w19
    2f8c:	mov	x0, x10
    2f90:	bl	13b8 <grub_mod_fini+0x1090>
    2f94:	cmp	w0, w22
    2f98:	b.ne	2f54 <grub_mod_fini+0x2c2c>  // b.any
    2f9c:	ldr	w4, [x15]
    2fa0:	add	x9, x9, #0x1
    2fa4:	cmp	w4, w9
    2fa8:	b.gt	2ec0 <grub_mod_fini+0x2b98>
    2fac:	ldp	x23, x24, [sp, #48]
    2fb0:	mov	w0, #0x0                   	// #0
    2fb4:	b	2f5c <grub_mod_fini+0x2c34>
    2fb8:	orr	w1, w1, #0x2
    2fbc:	mov	w2, w24
    2fc0:	mov	w3, w18
    2fc4:	mov	w4, w11
    2fc8:	mov	x0, x10
    2fcc:	bl	13b8 <grub_mod_fini+0x1090>
    2fd0:	mov	w22, w0
    2fd4:	ldr	x2, [x14]
    2fd8:	ldr	x1, [x10, #160]
    2fdc:	ldr	w0, [x2, x23]
    2fe0:	smaddl	x0, w0, w21, x1
    2fe4:	ldr	w3, [x0, #8]
    2fe8:	cmp	w6, w3
    2fec:	b.lt	302c <grub_mod_fini+0x2d04>  // b.tstop
    2ff0:	ldr	w4, [x0, #12]
    2ff4:	b	2f24 <grub_mod_fini+0x2bfc>
    2ff8:	mov	w22, #0x1                   	// #1
    2ffc:	b	2f1c <grub_mod_fini+0x2bf4>
    3000:	cmp	w6, w3
    3004:	b.lt	2fa0 <grub_mod_fini+0x2c78>  // b.tstop
    3008:	ldr	w4, [x1, #12]
    300c:	cmp	w6, w4
    3010:	b.gt	2f54 <grub_mod_fini+0x2c2c>
    3014:	mov	w22, #0xffffffff            	// #-1
    3018:	b	2f30 <grub_mod_fini+0x2c08>
    301c:	mov	w11, #0xffffffff            	// #-1
    3020:	b	2e50 <grub_mod_fini+0x2b28>
    3024:	mov	w12, #0xffffffff            	// #-1
    3028:	b	2ea8 <grub_mod_fini+0x2b80>
    302c:	mov	w0, #0xffffffff            	// #-1
    3030:	b	2f4c <grub_mod_fini+0x2c24>
    3034:	nop
    3038:	sbfiz	x2, x2, #4, #32
    303c:	stp	x29, x30, [sp, #-96]!
    3040:	add	x5, x0, x2
    3044:	mov	x29, sp
    3048:	stp	x19, x20, [sp, #16]
    304c:	ldrb	w8, [x5, #8]
    3050:	cmp	w8, #0x7
    3054:	b.eq	31b4 <grub_mod_fini+0x2e8c>  // b.none
    3058:	ldr	w5, [x3, #104]
    305c:	cmp	w5, #0x1
    3060:	b.eq	30dc <grub_mod_fini+0x2db4>  // b.none
    3064:	ldr	w6, [x3, #44]
    3068:	add	w5, w4, #0x1
    306c:	cmp	w5, w6
    3070:	b.ge	30dc <grub_mod_fini+0x2db4>  // b.tcont
    3074:	ldr	x7, [x3, #16]
    3078:	sub	w6, w6, w4
    307c:	mov	w19, #0x1                   	// #1
    3080:	stp	x21, x22, [sp, #32]
    3084:	add	x7, x7, w5, sxtw #2
    3088:	stp	x23, x24, [sp, #48]
    308c:	mov	x5, x7
    3090:	stp	x25, x26, [sp, #64]
    3094:	stp	x27, x28, [sp, #80]
    3098:	b	30a8 <grub_mod_fini+0x2d80>
    309c:	add	w19, w19, #0x1
    30a0:	cmp	w19, w6
    30a4:	b.eq	30f0 <grub_mod_fini+0x2dc8>  // b.none
    30a8:	ldr	w9, [x5]
    30ac:	add	x5, x5, #0x4
    30b0:	cmn	w9, #0x1
    30b4:	b.eq	309c <grub_mod_fini+0x2d74>  // b.none
    30b8:	cmp	w8, #0x5
    30bc:	b.eq	31a0 <grub_mod_fini+0x2e78>  // b.none
    30c0:	cmp	w8, #0x6
    30c4:	ccmp	w19, #0x1, #0x4, eq  // eq = none
    30c8:	b.ne	3140 <grub_mod_fini+0x2e18>  // b.any
    30cc:	ldp	x21, x22, [sp, #32]
    30d0:	ldp	x23, x24, [sp, #48]
    30d4:	ldp	x25, x26, [sp, #64]
    30d8:	ldp	x27, x28, [sp, #80]
    30dc:	mov	w19, #0x0                   	// #0
    30e0:	mov	w0, w19
    30e4:	ldp	x19, x20, [sp, #16]
    30e8:	ldp	x29, x30, [sp], #96
    30ec:	ret
    30f0:	cmp	w8, #0x5
    30f4:	b.ne	30c0 <grub_mod_fini+0x2d98>  // b.any
    30f8:	ldr	x0, [x1]
    30fc:	tbnz	w0, #6, 3110 <grub_mod_fini+0x2de8>
    3100:	ldr	x1, [x3, #8]
    3104:	ldrb	w1, [x1, w4, sxtw]
    3108:	cmp	w1, #0xa
    310c:	b.eq	30cc <grub_mod_fini+0x2da4>  // b.none
    3110:	tbz	w0, #7, 3120 <grub_mod_fini+0x2df8>
    3114:	ldr	x0, [x3, #8]
    3118:	ldrb	w0, [x0, w4, sxtw]
    311c:	cbz	w0, 30cc <grub_mod_fini+0x2da4>
    3120:	ldp	x21, x22, [sp, #32]
    3124:	ldp	x23, x24, [sp, #48]
    3128:	ldp	x25, x26, [sp, #64]
    312c:	ldp	x27, x28, [sp, #80]
    3130:	mov	w0, w19
    3134:	ldp	x19, x20, [sp, #16]
    3138:	ldp	x29, x30, [sp], #96
    313c:	ret
    3140:	ldr	x22, [x0, x2]
    3144:	ldr	x0, [x22, #48]
    3148:	ldr	w2, [x22, #36]
    314c:	cbnz	x0, 3154 <grub_mod_fini+0x2e2c>
    3150:	cbz	w2, 32a0 <grub_mod_fini+0x2f78>
    3154:	ldur	w21, [x7, #-4]
    3158:	cmp	w2, #0x0
    315c:	b.le	32a4 <grub_mod_fini+0x2f7c>
    3160:	mov	x0, #0x0                   	// #0
    3164:	ldr	x3, [x22]
    3168:	b	3174 <grub_mod_fini+0x2e4c>
    316c:	cmp	w2, w0
    3170:	b.le	32a4 <grub_mod_fini+0x2f7c>
    3174:	ldr	w1, [x3, x0, lsl #2]
    3178:	add	x0, x0, #0x1
    317c:	cmp	w21, w1
    3180:	b.ne	316c <grub_mod_fini+0x2e44>  // b.any
    3184:	ldrb	w0, [x22, #32]
    3188:	tbnz	w0, #0, 30cc <grub_mod_fini+0x2da4>
    318c:	ldp	x21, x22, [sp, #32]
    3190:	ldp	x23, x24, [sp, #48]
    3194:	ldp	x25, x26, [sp, #64]
    3198:	ldp	x27, x28, [sp, #80]
    319c:	b	3130 <grub_mod_fini+0x2e08>
    31a0:	cmp	w19, #0x1
    31a4:	b.eq	30cc <grub_mod_fini+0x2da4>  // b.none
    31a8:	ldr	x0, [x1]
    31ac:	tbnz	w0, #6, 3110 <grub_mod_fini+0x2de8>
    31b0:	b	3100 <grub_mod_fini+0x2dd8>
    31b4:	ldr	x1, [x3, #8]
    31b8:	sxtw	x2, w4
    31bc:	ldrb	w0, [x1, w4, sxtw]
    31c0:	cmp	w0, #0xc1
    31c4:	b.ls	30dc <grub_mod_fini+0x2db4>  // b.plast
    31c8:	ldr	w5, [x3, #64]
    31cc:	add	w3, w4, #0x1
    31d0:	cmp	w3, w5
    31d4:	b.ge	30dc <grub_mod_fini+0x2db4>  // b.tcont
    31d8:	add	x2, x1, x2
    31dc:	cmp	w0, #0xdf
    31e0:	ldrb	w2, [x2, #1]
    31e4:	b.ls	3488 <grub_mod_fini+0x3160>  // b.plast
    31e8:	cmp	w0, #0xef
    31ec:	b.hi	34a0 <grub_mod_fini+0x3178>  // b.pmore
    31f0:	cmp	w0, #0xe0
    31f4:	mov	w19, #0x3                   	// #3
    31f8:	mov	w0, #0x9f                  	// #159
    31fc:	ccmp	w2, w0, #0x2, eq  // eq = none
    3200:	b.ls	30dc <grub_mod_fini+0x2db4>  // b.plast
    3204:	add	w0, w4, w19
    3208:	cmp	w5, w0
    320c:	b.lt	30dc <grub_mod_fini+0x2db4>  // b.tstop
    3210:	ldrb	w0, [x1, w3, sxtw]
    3214:	sub	w0, w0, #0x80
    3218:	and	w0, w0, #0xff
    321c:	cmp	w0, #0x3f
    3220:	b.hi	30dc <grub_mod_fini+0x2db4>  // b.pmore
    3224:	add	w0, w4, #0x2
    3228:	ldrb	w0, [x1, w0, sxtw]
    322c:	sub	w0, w0, #0x80
    3230:	and	w0, w0, #0xff
    3234:	cmp	w0, #0x3f
    3238:	b.hi	30dc <grub_mod_fini+0x2db4>  // b.pmore
    323c:	cmp	w19, #0x3
    3240:	b.eq	30e0 <grub_mod_fini+0x2db8>  // b.none
    3244:	add	w0, w4, #0x3
    3248:	ldrb	w0, [x1, w0, sxtw]
    324c:	sub	w0, w0, #0x80
    3250:	and	w0, w0, #0xff
    3254:	cmp	w0, #0x3f
    3258:	b.hi	30dc <grub_mod_fini+0x2db4>  // b.pmore
    325c:	cmp	w19, #0x4
    3260:	b.eq	30e0 <grub_mod_fini+0x2db8>  // b.none
    3264:	add	w0, w4, #0x4
    3268:	ldrb	w0, [x1, w0, sxtw]
    326c:	sub	w0, w0, #0x80
    3270:	and	w0, w0, #0xff
    3274:	cmp	w0, #0x3f
    3278:	b.hi	30dc <grub_mod_fini+0x2db4>  // b.pmore
    327c:	cmp	w19, #0x6
    3280:	b.ne	3500 <grub_mod_fini+0x31d8>  // b.any
    3284:	add	w4, w4, #0x5
    3288:	ldrb	w0, [x1, w4, sxtw]
    328c:	sub	w0, w0, #0x80
    3290:	and	w0, w0, #0xff
    3294:	cmp	w0, #0x3f
    3298:	b.ls	30e0 <grub_mod_fini+0x2db8>  // b.plast
    329c:	b	30dc <grub_mod_fini+0x2db4>
    32a0:	mov	w21, #0x0                   	// #0
    32a4:	ldr	w1, [x22, #52]
    32a8:	cmp	w1, #0x0
    32ac:	b.le	3320 <grub_mod_fini+0x2ff8>
    32b0:	and	w26, w21, #0xffffffdf
    32b4:	sub	w27, w21, #0x30
    32b8:	sub	w26, w26, #0x41
    32bc:	sub	w28, w21, #0x20
    32c0:	sub	w25, w21, #0x21
    32c4:	sub	w24, w21, #0x41
    32c8:	sub	w23, w21, #0x61
    32cc:	mov	x20, #0x0                   	// #0
    32d0:	ldr	x0, [x22, #24]
    32d4:	ldr	w0, [x0, x20, lsl #2]
    32d8:	cmp	w0, #0x7
    32dc:	b.eq	3468 <grub_mod_fini+0x3140>  // b.none
    32e0:	b.hi	33a8 <grub_mod_fini+0x3080>  // b.pmore
    32e4:	cmp	w0, #0x4
    32e8:	b.eq	3458 <grub_mod_fini+0x3130>  // b.none
    32ec:	b.hi	3390 <grub_mod_fini+0x3068>  // b.pmore
    32f0:	cmp	w0, #0x2
    32f4:	b.eq	3444 <grub_mod_fini+0x311c>  // b.none
    32f8:	cmp	w0, #0x3
    32fc:	b.ne	3374 <grub_mod_fini+0x304c>  // b.any
    3300:	cmp	w23, #0x19
    3304:	cset	w0, ls  // ls = plast
    3308:	cbnz	w0, 3184 <grub_mod_fini+0x2e5c>
    330c:	nop
    3310:	ldr	w1, [x22, #52]
    3314:	add	x20, x20, #0x1
    3318:	cmp	w1, w20
    331c:	b.gt	32d0 <grub_mod_fini+0x2fa8>
    3320:	ldr	w0, [x22, #48]
    3324:	cmp	w0, #0x0
    3328:	b.le	3368 <grub_mod_fini+0x3040>
    332c:	sub	w2, w0, #0x1
    3330:	mov	x0, #0x0                   	// #0
    3334:	add	x2, x2, #0x1
    3338:	ldr	x3, [x22, #8]
    333c:	lsl	x2, x2, #2
    3340:	ldr	w1, [x3, x0]
    3344:	cmp	w21, w1
    3348:	b.lt	335c <grub_mod_fini+0x3034>  // b.tstop
    334c:	ldr	x1, [x22, #16]
    3350:	ldr	w1, [x1, x0]
    3354:	cmp	w21, w1
    3358:	b.le	3184 <grub_mod_fini+0x2e5c>
    335c:	add	x0, x0, #0x4
    3360:	cmp	x2, x0
    3364:	b.ne	3340 <grub_mod_fini+0x3018>  // b.any
    3368:	ldrb	w0, [x22, #32]
    336c:	tbnz	w0, #0, 3120 <grub_mod_fini+0x2df8>
    3370:	b	30cc <grub_mod_fini+0x2da4>
    3374:	cmp	w0, #0x1
    3378:	b.ne	3314 <grub_mod_fini+0x2fec>  // b.any
    337c:	cmp	w26, #0x19
    3380:	b.ls	3184 <grub_mod_fini+0x2e5c>  // b.plast
    3384:	cmp	w27, #0x9
    3388:	b.ls	3184 <grub_mod_fini+0x2e5c>  // b.plast
    338c:	b	3314 <grub_mod_fini+0x2fec>
    3390:	cmp	w0, #0x5
    3394:	b.eq	3478 <grub_mod_fini+0x3150>  // b.none
    3398:	cmp	w27, #0x9
    339c:	cset	w0, ls  // ls = plast
    33a0:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    33a4:	b	3184 <grub_mod_fini+0x2e5c>
    33a8:	cmp	w0, #0xa
    33ac:	b.eq	33fc <grub_mod_fini+0x30d4>  // b.none
    33b0:	b.ls	33d8 <grub_mod_fini+0x30b0>  // b.plast
    33b4:	cmp	w0, #0xb
    33b8:	b.eq	340c <grub_mod_fini+0x30e4>  // b.none
    33bc:	cmp	w0, #0xc
    33c0:	b.ne	3314 <grub_mod_fini+0x2fec>  // b.any
    33c4:	cmp	w27, #0x9
    33c8:	b.ls	3184 <grub_mod_fini+0x2e5c>  // b.plast
    33cc:	cmp	w26, #0x5
    33d0:	b.ls	3184 <grub_mod_fini+0x2e5c>  // b.plast
    33d4:	b	3314 <grub_mod_fini+0x2fec>
    33d8:	cmp	w0, #0x8
    33dc:	b.eq	3434 <grub_mod_fini+0x310c>  // b.none
    33e0:	cmp	w0, #0x9
    33e4:	b.ne	3314 <grub_mod_fini+0x2fec>  // b.any
    33e8:	cmp	w21, #0x20
    33ec:	ccmp	w21, #0x9, #0x4, ne  // ne = any
    33f0:	cset	w0, eq  // eq = none
    33f4:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    33f8:	b	3184 <grub_mod_fini+0x2e5c>
    33fc:	cmp	w25, #0x5d
    3400:	cset	w0, ls  // ls = plast
    3404:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3408:	b	3184 <grub_mod_fini+0x2e5c>
    340c:	cmp	w28, #0x5e
    3410:	b.hi	3314 <grub_mod_fini+0x2fec>  // b.pmore
    3414:	mov	w0, w21
    3418:	bl	0 <grub_isspace>
    341c:	cbnz	w0, 3310 <grub_mod_fini+0x2fe8>
    3420:	cmp	w26, #0x19
    3424:	b.ls	3310 <grub_mod_fini+0x2fe8>  // b.plast
    3428:	cmp	w27, #0x9
    342c:	b.hi	3184 <grub_mod_fini+0x2e5c>  // b.pmore
    3430:	b	3310 <grub_mod_fini+0x2fe8>
    3434:	cmp	w24, #0x19
    3438:	cset	w0, ls  // ls = plast
    343c:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3440:	b	3184 <grub_mod_fini+0x2e5c>
    3444:	cmp	w21, #0x7f
    3448:	ccmp	w21, #0x1f, #0x0, ne  // ne = any
    344c:	cset	w0, ls  // ls = plast
    3450:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3454:	b	3184 <grub_mod_fini+0x2e5c>
    3458:	mov	w0, w21
    345c:	bl	0 <grub_isspace>
    3460:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3464:	b	3184 <grub_mod_fini+0x2e5c>
    3468:	cmp	w28, #0x5e
    346c:	cset	w0, ls  // ls = plast
    3470:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3474:	b	3184 <grub_mod_fini+0x2e5c>
    3478:	cmp	w26, #0x19
    347c:	cset	w0, ls  // ls = plast
    3480:	cbz	w0, 3310 <grub_mod_fini+0x2fe8>
    3484:	b	3184 <grub_mod_fini+0x2e5c>
    3488:	sub	w0, w2, #0x80
    348c:	mov	w19, #0x2                   	// #2
    3490:	and	w0, w0, #0xff
    3494:	cmp	w0, #0x3f
    3498:	b.ls	30e0 <grub_mod_fini+0x2db8>  // b.plast
    349c:	b	30dc <grub_mod_fini+0x2db4>
    34a0:	cmp	w0, #0xf7
    34a4:	b.hi	34c0 <grub_mod_fini+0x3198>  // b.pmore
    34a8:	cmp	w0, #0xf0
    34ac:	mov	w19, #0x4                   	// #4
    34b0:	mov	w0, #0x8f                  	// #143
    34b4:	ccmp	w2, w0, #0x2, eq  // eq = none
    34b8:	b.hi	3204 <grub_mod_fini+0x2edc>  // b.pmore
    34bc:	b	30dc <grub_mod_fini+0x2db4>
    34c0:	cmp	w0, #0xfb
    34c4:	b.hi	34e0 <grub_mod_fini+0x31b8>  // b.pmore
    34c8:	cmp	w0, #0xf8
    34cc:	mov	w0, #0x87                  	// #135
    34d0:	ccmp	w2, w0, #0x2, eq  // eq = none
    34d4:	b.ls	30dc <grub_mod_fini+0x2db4>  // b.plast
    34d8:	mov	w19, #0x5                   	// #5
    34dc:	b	3204 <grub_mod_fini+0x2edc>
    34e0:	cmp	w0, #0xfd
    34e4:	b.hi	30dc <grub_mod_fini+0x2db4>  // b.pmore
    34e8:	cmp	w0, #0xfc
    34ec:	mov	w0, #0x83                  	// #131
    34f0:	ccmp	w2, w0, #0x2, eq  // eq = none
    34f4:	b.ls	30dc <grub_mod_fini+0x2db4>  // b.plast
    34f8:	mov	w19, #0x6                   	// #6
    34fc:	b	3204 <grub_mod_fini+0x2edc>
    3500:	mov	w19, #0x5                   	// #5
    3504:	b	30e0 <grub_mod_fini+0x2db8>
    3508:	stp	x29, x30, [sp, #-80]!
    350c:	mov	x29, sp
    3510:	stp	x19, x20, [sp, #16]
    3514:	mov	x20, x0
    3518:	mov	x19, x1
    351c:	stp	x21, x22, [sp, #32]
    3520:	mov	x22, x4
    3524:	stp	x23, x24, [sp, #48]
    3528:	mov	x24, x3
    352c:	mov	x23, x5
    3530:	str	x25, [sp, #64]
    3534:	mov	x25, x2
    3538:	tbnz	w6, #22, 360c <grub_mod_fini+0x32e4>
    353c:	ldr	w2, [x22]
    3540:	ldr	w1, [x24]
    3544:	ldr	x0, [x25]
    3548:	cmp	w2, w1
    354c:	b.eq	363c <grub_mod_fini+0x3314>  // b.none
    3550:	adrp	x2, 0 <grub_mod_init-0x288>
    3554:	add	x25, x0, w1, sxtw #2
    3558:	mov	w21, #0x0                   	// #0
    355c:	add	w1, w1, #0x1
    3560:	ldr	x22, [x2]
    3564:	str	w1, [x24]
    3568:	mov	x1, x23
    356c:	mov	x0, x22
    3570:	bl	0 <grub_strcmp>
    3574:	cbz	w0, 358c <grub_mod_fini+0x3264>
    3578:	add	w21, w21, #0x1
    357c:	add	x22, x22, #0xa
    3580:	cmp	w21, #0xd
    3584:	b.ne	3568 <grub_mod_fini+0x3240>  // b.any
    3588:	mov	w21, #0x0                   	// #0
    358c:	adrp	x1, 0 <grub_mod_init-0x288>
    3590:	str	w21, [x25]
    3594:	mov	x0, x23
    3598:	ldr	x1, [x1]
    359c:	bl	0 <grub_strcmp>
    35a0:	cbnz	w0, 3660 <grub_mod_fini+0x3338>
    35a4:	mov	x5, #0x1                   	// #1
    35a8:	cbnz	x20, 36f8 <grub_mod_fini+0x33d0>
    35ac:	nop
    35b0:	asr	w2, w0, #6
    35b4:	and	w3, w0, #0xffffffdf
    35b8:	sub	w3, w3, #0x41
    35bc:	sub	w4, w0, #0x30
    35c0:	lsl	x1, x5, x0
    35c4:	sxtw	x2, w2
    35c8:	add	w0, w0, #0x1
    35cc:	cmp	w3, #0x19
    35d0:	b.ls	35dc <grub_mod_fini+0x32b4>  // b.plast
    35d4:	cmp	w4, #0x9
    35d8:	b.hi	35e8 <grub_mod_fini+0x32c0>  // b.pmore
    35dc:	ldr	x3, [x19, x2, lsl #3]
    35e0:	orr	x3, x3, x1
    35e4:	str	x3, [x19, x2, lsl #3]
    35e8:	cmp	w0, #0x100
    35ec:	b.ne	35b0 <grub_mod_fini+0x3288>  // b.any
    35f0:	mov	w0, #0x0                   	// #0
    35f4:	ldp	x19, x20, [sp, #16]
    35f8:	ldp	x21, x22, [sp, #32]
    35fc:	ldp	x23, x24, [sp, #48]
    3600:	ldr	x25, [sp, #64]
    3604:	ldp	x29, x30, [sp], #80
    3608:	ret
    360c:	adrp	x1, 0 <grub_mod_init-0x288>
    3610:	mov	x0, x5
    3614:	ldr	x1, [x1]
    3618:	bl	0 <grub_strcmp>
    361c:	cbnz	w0, 36e0 <grub_mod_fini+0x33b8>
    3620:	adrp	x0, 0 <grub_mod_init-0x288>
    3624:	ldr	w2, [x22]
    3628:	ldr	w1, [x24]
    362c:	ldr	x23, [x0]
    3630:	cmp	w2, w1
    3634:	ldr	x0, [x25]
    3638:	b.ne	3550 <grub_mod_fini+0x3228>  // b.any
    363c:	lsl	w1, w1, #1
    3640:	add	w21, w1, #0x1
    3644:	sbfiz	x1, x21, #2, #32
    3648:	bl	0 <grub_realloc>
    364c:	cbz	x0, 3824 <grub_mod_fini+0x34fc>
    3650:	str	x0, [x25]
    3654:	str	w21, [x22]
    3658:	ldr	w1, [x24]
    365c:	b	3550 <grub_mod_fini+0x3228>
    3660:	adrp	x1, 0 <grub_mod_init-0x288>
    3664:	mov	x0, x23
    3668:	ldr	x1, [x1]
    366c:	bl	0 <grub_strcmp>
    3670:	mov	w1, w0
    3674:	cbnz	w0, 369c <grub_mod_fini+0x3374>
    3678:	mov	x2, #0x1                   	// #1
    367c:	cbnz	x20, 3744 <grub_mod_fini+0x341c>
    3680:	sub	w0, w1, #0x20
    3684:	cmp	w0, #0x5e
    3688:	b.hi	3bd4 <grub_mod_fini+0x38ac>  // b.pmore
    368c:	add	w1, w1, #0x1
    3690:	cmp	w1, #0x100
    3694:	b.ne	3680 <grub_mod_fini+0x3358>  // b.any
    3698:	b	35f0 <grub_mod_fini+0x32c8>
    369c:	adrp	x1, 0 <grub_mod_init-0x288>
    36a0:	mov	x0, x23
    36a4:	ldr	x1, [x1]
    36a8:	bl	0 <grub_strcmp>
    36ac:	mov	w1, w0
    36b0:	cbnz	w0, 376c <grub_mod_fini+0x3444>
    36b4:	mov	x3, #0x1                   	// #1
    36b8:	cbnz	x20, 382c <grub_mod_fini+0x3504>
    36bc:	nop
    36c0:	sub	w0, w1, #0x61
    36c4:	add	w2, w1, #0x1
    36c8:	cmp	w0, #0x19
    36cc:	b.ls	3b00 <grub_mod_fini+0x37d8>  // b.plast
    36d0:	cmp	w2, #0x100
    36d4:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    36d8:	mov	w1, w2
    36dc:	b	36c0 <grub_mod_fini+0x3398>
    36e0:	adrp	x1, 0 <grub_mod_init-0x288>
    36e4:	mov	x0, x23
    36e8:	ldr	x1, [x1]
    36ec:	bl	0 <grub_strcmp>
    36f0:	cbz	w0, 3620 <grub_mod_fini+0x32f8>
    36f4:	b	353c <grub_mod_fini+0x3214>
    36f8:	mov	x4, x5
    36fc:	mov	x0, #0x0                   	// #0
    3700:	and	w1, w0, #0xffffffdf
    3704:	sub	w2, w0, #0x30
    3708:	sub	w1, w1, #0x41
    370c:	cmp	w1, #0x19
    3710:	b.ls	371c <grub_mod_fini+0x33f4>  // b.plast
    3714:	cmp	w2, #0x9
    3718:	b.hi	3734 <grub_mod_fini+0x340c>  // b.pmore
    371c:	ldrb	w1, [x20, x0]
    3720:	ubfx	x3, x1, #6, #2
    3724:	lsl	x1, x4, x1
    3728:	ldr	x2, [x19, x3, lsl #3]
    372c:	orr	x1, x2, x1
    3730:	str	x1, [x19, x3, lsl #3]
    3734:	add	x0, x0, #0x1
    3738:	cmp	x0, #0x100
    373c:	b.ne	3700 <grub_mod_fini+0x33d8>  // b.any
    3740:	b	35f0 <grub_mod_fini+0x32c8>
    3744:	mov	x4, x2
    3748:	mov	x0, #0x0                   	// #0
    374c:	nop
    3750:	sub	w1, w0, #0x20
    3754:	cmp	w1, #0x5e
    3758:	b.hi	3b18 <grub_mod_fini+0x37f0>  // b.pmore
    375c:	add	x0, x0, #0x1
    3760:	cmp	x0, #0x100
    3764:	b.ne	3750 <grub_mod_fini+0x3428>  // b.any
    3768:	b	35f0 <grub_mod_fini+0x32c8>
    376c:	adrp	x1, 0 <grub_mod_init-0x288>
    3770:	mov	x0, x23
    3774:	ldr	x1, [x1]
    3778:	bl	0 <grub_strcmp>
    377c:	mov	w21, w0
    3780:	cbnz	w0, 37c4 <grub_mod_fini+0x349c>
    3784:	mov	x22, #0x1                   	// #1
    3788:	cbnz	x20, 3b9c <grub_mod_fini+0x3874>
    378c:	nop
    3790:	mov	w0, w21
    3794:	bl	0 <grub_isspace>
    3798:	asr	w1, w21, #6
    379c:	lsl	x2, x22, x21
    37a0:	add	w21, w21, #0x1
    37a4:	sxtw	x1, w1
    37a8:	cbz	w0, 37b8 <grub_mod_fini+0x3490>
    37ac:	ldr	x0, [x19, x1, lsl #3]
    37b0:	orr	x0, x0, x2
    37b4:	str	x0, [x19, x1, lsl #3]
    37b8:	cmp	w21, #0x100
    37bc:	b.ne	3790 <grub_mod_fini+0x3468>  // b.any
    37c0:	b	35f0 <grub_mod_fini+0x32c8>
    37c4:	adrp	x1, 0 <grub_mod_init-0x288>
    37c8:	mov	x0, x23
    37cc:	ldr	x1, [x1]
    37d0:	bl	0 <grub_strcmp>
    37d4:	cbnz	w0, 3854 <grub_mod_fini+0x352c>
    37d8:	mov	w0, #0x1                   	// #1
    37dc:	mov	x4, #0x1                   	// #1
    37e0:	cbnz	x20, 3b5c <grub_mod_fini+0x3834>
    37e4:	nop
    37e8:	sub	w1, w0, #0x1
    37ec:	asr	w2, w0, #6
    37f0:	and	w1, w1, #0xffffffdf
    37f4:	lsl	x3, x4, x0
    37f8:	sub	w1, w1, #0x40
    37fc:	sxtw	x2, w2
    3800:	add	w0, w0, #0x1
    3804:	cmp	w1, #0x19
    3808:	b.hi	3818 <grub_mod_fini+0x34f0>  // b.pmore
    380c:	ldr	x1, [x19, x2, lsl #3]
    3810:	orr	x1, x1, x3
    3814:	str	x1, [x19, x2, lsl #3]
    3818:	cmp	w0, #0x100
    381c:	b.ne	37e8 <grub_mod_fini+0x34c0>  // b.any
    3820:	b	35f0 <grub_mod_fini+0x32c8>
    3824:	mov	w0, #0xc                   	// #12
    3828:	b	35f4 <grub_mod_fini+0x32cc>
    382c:	mov	x4, x3
    3830:	mov	x0, #0x0                   	// #0
    3834:	nop
    3838:	sub	w1, w0, #0x61
    383c:	cmp	w1, #0x19
    3840:	b.ls	3b38 <grub_mod_fini+0x3810>  // b.plast
    3844:	cmp	w0, #0xff
    3848:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    384c:	add	x0, x0, #0x1
    3850:	b	3838 <grub_mod_fini+0x3510>
    3854:	adrp	x1, 0 <grub_mod_init-0x288>
    3858:	mov	x0, x23
    385c:	ldr	x1, [x1]
    3860:	bl	0 <grub_strcmp>
    3864:	cbnz	w0, 38f0 <grub_mod_fini+0x35c8>
    3868:	mov	x3, #0x1                   	// #1
    386c:	cbnz	x20, 38a8 <grub_mod_fini+0x3580>
    3870:	sub	w1, w0, #0x30
    3874:	add	w2, w0, #0x1
    3878:	cmp	w1, #0x9
    387c:	b.ls	3890 <grub_mod_fini+0x3568>  // b.plast
    3880:	cmp	w2, #0x100
    3884:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3888:	mov	w0, w2
    388c:	b	3870 <grub_mod_fini+0x3548>
    3890:	ldr	x1, [x19]
    3894:	lsl	x0, x3, x0
    3898:	orr	x0, x1, x0
    389c:	str	x0, [x19]
    38a0:	mov	w0, w2
    38a4:	b	3870 <grub_mod_fini+0x3548>
    38a8:	mov	x4, x3
    38ac:	mov	x0, #0x0                   	// #0
    38b0:	sub	w1, w0, #0x30
    38b4:	cmp	w1, #0x9
    38b8:	b.ls	38cc <grub_mod_fini+0x35a4>  // b.plast
    38bc:	cmp	w0, #0xff
    38c0:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    38c4:	add	x0, x0, #0x1
    38c8:	b	38b0 <grub_mod_fini+0x3588>
    38cc:	ldrb	w2, [x20, x0]
    38d0:	add	x0, x0, #0x1
    38d4:	ubfx	x1, x2, #6, #2
    38d8:	lsl	x2, x4, x2
    38dc:	lsl	x1, x1, #3
    38e0:	ldr	x3, [x19, x1]
    38e4:	orr	x2, x3, x2
    38e8:	str	x2, [x19, x1]
    38ec:	b	38b0 <grub_mod_fini+0x3588>
    38f0:	adrp	x1, 0 <grub_mod_init-0x288>
    38f4:	mov	x0, x23
    38f8:	ldr	x1, [x1]
    38fc:	bl	0 <grub_strcmp>
    3900:	cbnz	w0, 3990 <grub_mod_fini+0x3668>
    3904:	mov	x4, #0x1                   	// #1
    3908:	cbnz	x20, 394c <grub_mod_fini+0x3624>
    390c:	sub	w1, w0, #0x20
    3910:	add	w3, w0, #0x1
    3914:	cmp	w1, #0x5e
    3918:	b.ls	392c <grub_mod_fini+0x3604>  // b.plast
    391c:	cmp	w3, #0x100
    3920:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3924:	mov	w0, w3
    3928:	b	390c <grub_mod_fini+0x35e4>
    392c:	asr	w1, w0, #6
    3930:	lsl	x0, x4, x0
    3934:	sbfiz	x1, x1, #3, #32
    3938:	ldr	x2, [x19, x1]
    393c:	orr	x0, x2, x0
    3940:	str	x0, [x19, x1]
    3944:	mov	w0, w3
    3948:	b	390c <grub_mod_fini+0x35e4>
    394c:	mov	x0, #0x0                   	// #0
    3950:	sub	w1, w0, #0x20
    3954:	cmp	w1, #0x5e
    3958:	b.ls	396c <grub_mod_fini+0x3644>  // b.plast
    395c:	cmp	w0, #0xff
    3960:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3964:	add	x0, x0, #0x1
    3968:	b	3950 <grub_mod_fini+0x3628>
    396c:	ldrb	w2, [x20, x0]
    3970:	add	x0, x0, #0x1
    3974:	ubfx	x1, x2, #6, #2
    3978:	lsl	x2, x4, x2
    397c:	lsl	x1, x1, #3
    3980:	ldr	x3, [x19, x1]
    3984:	orr	x2, x3, x2
    3988:	str	x2, [x19, x1]
    398c:	b	3950 <grub_mod_fini+0x3628>
    3990:	adrp	x1, 0 <grub_mod_init-0x288>
    3994:	mov	x0, x23
    3998:	ldr	x1, [x1]
    399c:	bl	0 <grub_strcmp>
    39a0:	cbnz	w0, 3a08 <grub_mod_fini+0x36e0>
    39a4:	mov	x3, #0x1                   	// #1
    39a8:	cbnz	x20, 39e4 <grub_mod_fini+0x36bc>
    39ac:	sub	w1, w0, #0x41
    39b0:	add	w2, w0, #0x1
    39b4:	cmp	w1, #0x19
    39b8:	b.ls	39cc <grub_mod_fini+0x36a4>  // b.plast
    39bc:	cmp	w2, #0x100
    39c0:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    39c4:	mov	w0, w2
    39c8:	b	39ac <grub_mod_fini+0x3684>
    39cc:	ldr	x1, [x19, #8]
    39d0:	lsl	x0, x3, x0
    39d4:	orr	x0, x1, x0
    39d8:	str	x0, [x19, #8]
    39dc:	mov	w0, w2
    39e0:	b	39ac <grub_mod_fini+0x3684>
    39e4:	mov	x4, x3
    39e8:	mov	x0, #0x0                   	// #0
    39ec:	sub	w1, w0, #0x41
    39f0:	cmp	w1, #0x19
    39f4:	b.ls	3adc <grub_mod_fini+0x37b4>  // b.plast
    39f8:	cmp	w0, #0xff
    39fc:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3a00:	add	x0, x0, #0x1
    3a04:	b	39ec <grub_mod_fini+0x36c4>
    3a08:	adrp	x1, 0 <grub_mod_init-0x288>
    3a0c:	mov	x0, x23
    3a10:	ldr	x1, [x1]
    3a14:	bl	0 <grub_strcmp>
    3a18:	cbnz	w0, 3a9c <grub_mod_fini+0x3774>
    3a1c:	mov	w0, #0x1                   	// #1
    3a20:	mov	x3, #0x1                   	// #1
    3a24:	cbnz	x20, 3a5c <grub_mod_fini+0x3734>
    3a28:	asr	w1, w0, #6
    3a2c:	cmp	w0, #0x20
    3a30:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    3a34:	lsl	x4, x3, x0
    3a38:	sxtw	x1, w1
    3a3c:	add	w0, w0, #0x1
    3a40:	b.ne	3a50 <grub_mod_fini+0x3728>  // b.any
    3a44:	ldr	x2, [x19, x1, lsl #3]
    3a48:	orr	x2, x2, x4
    3a4c:	str	x2, [x19, x1, lsl #3]
    3a50:	cmp	w0, #0x100
    3a54:	b.ne	3a28 <grub_mod_fini+0x3700>  // b.any
    3a58:	b	35f0 <grub_mod_fini+0x32c8>
    3a5c:	mov	x0, x3
    3a60:	mov	x4, x3
    3a64:	cmp	w0, #0x20
    3a68:	ccmp	w0, #0x9, #0x4, ne  // ne = any
    3a6c:	b.ne	3a8c <grub_mod_fini+0x3764>  // b.any
    3a70:	ldrb	w2, [x20, x0]
    3a74:	ubfx	x1, x2, #6, #2
    3a78:	lsl	x2, x4, x2
    3a7c:	lsl	x1, x1, #3
    3a80:	ldr	x3, [x19, x1]
    3a84:	orr	x2, x3, x2
    3a88:	str	x2, [x19, x1]
    3a8c:	add	x0, x0, #0x1
    3a90:	cmp	x0, #0x100
    3a94:	b.ne	3a64 <grub_mod_fini+0x373c>  // b.any
    3a98:	b	35f0 <grub_mod_fini+0x32c8>
    3a9c:	adrp	x1, 0 <grub_mod_init-0x288>
    3aa0:	mov	x0, x23
    3aa4:	ldr	x1, [x1]
    3aa8:	bl	0 <grub_strcmp>
    3aac:	mov	w21, w0
    3ab0:	cbnz	w0, 3c3c <grub_mod_fini+0x3914>
    3ab4:	mov	x22, #0x1                   	// #1
    3ab8:	cbnz	x20, 3c1c <grub_mod_fini+0x38f4>
    3abc:	sub	w0, w21, #0x20
    3ac0:	add	w20, w21, #0x1
    3ac4:	cmp	w0, #0x5e
    3ac8:	b.ls	3bf0 <grub_mod_fini+0x38c8>  // b.plast
    3acc:	cmp	w20, #0x100
    3ad0:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3ad4:	mov	w21, w20
    3ad8:	b	3abc <grub_mod_fini+0x3794>
    3adc:	ldrb	w2, [x20, x0]
    3ae0:	add	x0, x0, #0x1
    3ae4:	ubfx	x1, x2, #6, #2
    3ae8:	lsl	x2, x4, x2
    3aec:	lsl	x1, x1, #3
    3af0:	ldr	x3, [x19, x1]
    3af4:	orr	x2, x3, x2
    3af8:	str	x2, [x19, x1]
    3afc:	b	39ec <grub_mod_fini+0x36c4>
    3b00:	ldr	x0, [x19, #8]
    3b04:	lsl	x1, x3, x1
    3b08:	orr	x1, x0, x1
    3b0c:	str	x1, [x19, #8]
    3b10:	mov	w1, w2
    3b14:	b	36c0 <grub_mod_fini+0x3398>
    3b18:	ldrb	w2, [x20, x0]
    3b1c:	ubfx	x1, x2, #6, #2
    3b20:	lsl	x2, x4, x2
    3b24:	lsl	x1, x1, #3
    3b28:	ldr	x3, [x19, x1]
    3b2c:	orr	x2, x3, x2
    3b30:	str	x2, [x19, x1]
    3b34:	b	375c <grub_mod_fini+0x3434>
    3b38:	ldrb	w2, [x20, x0]
    3b3c:	add	x0, x0, #0x1
    3b40:	ubfx	x1, x2, #6, #2
    3b44:	lsl	x2, x4, x2
    3b48:	lsl	x1, x1, #3
    3b4c:	ldr	x3, [x19, x1]
    3b50:	orr	x2, x3, x2
    3b54:	str	x2, [x19, x1]
    3b58:	b	3838 <grub_mod_fini+0x3510>
    3b5c:	add	x20, x20, x4
    3b60:	mov	x0, #0x0                   	// #0
    3b64:	and	w1, w0, #0xffffffdf
    3b68:	sub	w1, w1, #0x40
    3b6c:	cmp	w1, #0x19
    3b70:	b.hi	3b8c <grub_mod_fini+0x3864>  // b.pmore
    3b74:	ldrb	w1, [x20, x0]
    3b78:	ubfx	x3, x1, #6, #2
    3b7c:	lsl	x1, x4, x1
    3b80:	ldr	x2, [x19, x3, lsl #3]
    3b84:	orr	x1, x2, x1
    3b88:	str	x1, [x19, x3, lsl #3]
    3b8c:	add	x0, x0, #0x1
    3b90:	cmp	x0, #0xff
    3b94:	b.ne	3b64 <grub_mod_fini+0x383c>  // b.any
    3b98:	b	35f0 <grub_mod_fini+0x32c8>
    3b9c:	mov	x21, #0x0                   	// #0
    3ba0:	mov	w0, w21
    3ba4:	bl	0 <grub_isspace>
    3ba8:	cbz	w0, 3bc4 <grub_mod_fini+0x389c>
    3bac:	ldrb	w0, [x20, x21]
    3bb0:	ubfx	x2, x0, #6, #2
    3bb4:	lsl	x0, x22, x0
    3bb8:	ldr	x1, [x19, x2, lsl #3]
    3bbc:	orr	x0, x1, x0
    3bc0:	str	x0, [x19, x2, lsl #3]
    3bc4:	add	x21, x21, #0x1
    3bc8:	cmp	x21, #0x100
    3bcc:	b.ne	3ba0 <grub_mod_fini+0x3878>  // b.any
    3bd0:	b	35f0 <grub_mod_fini+0x32c8>
    3bd4:	asr	w0, w1, #6
    3bd8:	lsl	x4, x2, x1
    3bdc:	sbfiz	x0, x0, #3, #32
    3be0:	ldr	x3, [x19, x0]
    3be4:	orr	x3, x3, x4
    3be8:	str	x3, [x19, x0]
    3bec:	b	368c <grub_mod_fini+0x3364>
    3bf0:	mov	w0, w21
    3bf4:	bl	0 <grub_isspace>
    3bf8:	asr	w1, w21, #6
    3bfc:	cbnz	w0, 3ad4 <grub_mod_fini+0x37ac>
    3c00:	sbfiz	x0, x1, #3, #32
    3c04:	lsl	x21, x22, x21
    3c08:	ldr	x1, [x19, x0]
    3c0c:	orr	x21, x1, x21
    3c10:	str	x21, [x19, x0]
    3c14:	mov	w21, w20
    3c18:	b	3abc <grub_mod_fini+0x3794>
    3c1c:	mov	x21, #0x0                   	// #0
    3c20:	sub	w0, w21, #0x20
    3c24:	cmp	w0, #0x5e
    3c28:	b.ls	3d80 <grub_mod_fini+0x3a58>  // b.plast
    3c2c:	cmp	w21, #0xff
    3c30:	b.eq	35f0 <grub_mod_fini+0x32c8>  // b.none
    3c34:	add	x21, x21, #0x1
    3c38:	b	3c20 <grub_mod_fini+0x38f8>
    3c3c:	adrp	x1, 0 <grub_mod_init-0x288>
    3c40:	mov	x0, x23
    3c44:	ldr	x1, [x1]
    3c48:	bl	0 <grub_strcmp>
    3c4c:	mov	w21, w0
    3c50:	cbnz	w0, 3ccc <grub_mod_fini+0x39a4>
    3c54:	mov	x22, #0x1                   	// #1
    3c58:	cbnz	x20, 3c90 <grub_mod_fini+0x3968>
    3c5c:	mov	w0, w21
    3c60:	bl	1c18 <grub_mod_fini+0x18f0>
    3c64:	asr	w1, w21, #6
    3c68:	lsl	x2, x22, x21
    3c6c:	add	w21, w21, #0x1
    3c70:	sbfiz	x1, x1, #3, #32
    3c74:	cbz	w0, 3c84 <grub_mod_fini+0x395c>
    3c78:	ldr	x0, [x19, x1]
    3c7c:	orr	x0, x0, x2
    3c80:	str	x0, [x19, x1]
    3c84:	cmp	w21, #0x100
    3c88:	b.ne	3c5c <grub_mod_fini+0x3934>  // b.any
    3c8c:	b	35f0 <grub_mod_fini+0x32c8>
    3c90:	mov	x21, #0x0                   	// #0
    3c94:	mov	w0, w21
    3c98:	bl	1c18 <grub_mod_fini+0x18f0>
    3c9c:	cbz	w0, 3cbc <grub_mod_fini+0x3994>
    3ca0:	ldrb	w1, [x20, x21]
    3ca4:	ubfx	x0, x1, #6, #2
    3ca8:	lsl	x1, x22, x1
    3cac:	lsl	x0, x0, #3
    3cb0:	ldr	x2, [x19, x0]
    3cb4:	orr	x1, x2, x1
    3cb8:	str	x1, [x19, x0]
    3cbc:	add	x21, x21, #0x1
    3cc0:	cmp	x21, #0x100
    3cc4:	b.ne	3c94 <grub_mod_fini+0x396c>  // b.any
    3cc8:	b	35f0 <grub_mod_fini+0x32c8>
    3ccc:	adrp	x1, 0 <grub_mod_init-0x288>
    3cd0:	mov	x0, x23
    3cd4:	ldr	x1, [x1]
    3cd8:	bl	0 <grub_strcmp>
    3cdc:	cbnz	w0, 3d78 <grub_mod_fini+0x3a50>
    3ce0:	mov	x4, #0x1                   	// #1
    3ce4:	cbnz	x20, 3d2c <grub_mod_fini+0x3a04>
    3ce8:	asr	w1, w0, #6
    3cec:	and	w2, w0, #0xffffffdf
    3cf0:	sub	w3, w0, #0x30
    3cf4:	lsl	x5, x4, x0
    3cf8:	sbfiz	x1, x1, #3, #32
    3cfc:	sub	w2, w2, #0x41
    3d00:	cmp	w3, #0x9
    3d04:	add	w0, w0, #0x1
    3d08:	b.ls	3d14 <grub_mod_fini+0x39ec>  // b.plast
    3d0c:	cmp	w2, #0x5
    3d10:	b.hi	3d20 <grub_mod_fini+0x39f8>  // b.pmore
    3d14:	ldr	x2, [x19, x1]
    3d18:	orr	x2, x2, x5
    3d1c:	str	x2, [x19, x1]
    3d20:	cmp	w0, #0x100
    3d24:	b.ne	3ce8 <grub_mod_fini+0x39c0>  // b.any
    3d28:	b	35f0 <grub_mod_fini+0x32c8>
    3d2c:	mov	x0, #0x0                   	// #0
    3d30:	and	w1, w0, #0xffffffdf
    3d34:	sub	w2, w0, #0x30
    3d38:	sub	w1, w1, #0x41
    3d3c:	cmp	w2, #0x9
    3d40:	b.ls	3d4c <grub_mod_fini+0x3a24>  // b.plast
    3d44:	cmp	w1, #0x5
    3d48:	b.hi	3d68 <grub_mod_fini+0x3a40>  // b.pmore
    3d4c:	ldrb	w2, [x20, x0]
    3d50:	ubfx	x1, x2, #6, #2
    3d54:	lsl	x2, x4, x2
    3d58:	lsl	x1, x1, #3
    3d5c:	ldr	x3, [x19, x1]
    3d60:	orr	x2, x3, x2
    3d64:	str	x2, [x19, x1]
    3d68:	add	x0, x0, #0x1
    3d6c:	cmp	x0, #0x100
    3d70:	b.ne	3d30 <grub_mod_fini+0x3a08>  // b.any
    3d74:	b	35f0 <grub_mod_fini+0x32c8>
    3d78:	mov	w0, #0x4                   	// #4
    3d7c:	b	35f4 <grub_mod_fini+0x32cc>
    3d80:	mov	w0, w21
    3d84:	bl	0 <grub_isspace>
    3d88:	cbnz	w0, 3c34 <grub_mod_fini+0x390c>
    3d8c:	ldrb	w1, [x20, x21]
    3d90:	add	x21, x21, #0x1
    3d94:	ubfx	x0, x1, #6, #2
    3d98:	lsl	x1, x22, x1
    3d9c:	lsl	x0, x0, #3
    3da0:	ldr	x2, [x19, x0]
    3da4:	orr	x1, x2, x1
    3da8:	str	x1, [x19, x0]
    3dac:	b	3c20 <grub_mod_fini+0x38f8>
	...
    3e18:	stp	x29, x30, [sp, #-48]!
    3e1c:	mov	x29, sp
    3e20:	str	x21, [sp, #32]
    3e24:	mov	w21, #0xff                  	// #255
    3e28:	movk	w21, #0x4, lsl #16
    3e2c:	stp	x19, x20, [sp, #16]
    3e30:	mov	x19, x0
    3e34:	ldr	x0, [x0, #8]
    3e38:	cbnz	x0, 3e30 <grub_mod_fini+0x3b08>
    3e3c:	ldr	x0, [x19, #16]
    3e40:	cbnz	x0, 3e30 <grub_mod_fini+0x3b08>
    3e44:	ldr	w0, [x19, #48]
    3e48:	and	w0, w0, w21
    3e4c:	cmp	w0, #0x6
    3e50:	b.eq	3e8c <grub_mod_fini+0x3b64>  // b.none
    3e54:	nop
    3e58:	cmp	w0, #0x3
    3e5c:	b.eq	3ed4 <grub_mod_fini+0x3bac>  // b.none
    3e60:	ldr	x1, [x19]
    3e64:	cbz	x1, 3ec0 <grub_mod_fini+0x3b98>
    3e68:	ldr	x0, [x1, #16]
    3e6c:	cmp	x0, #0x0
    3e70:	ccmp	x19, x0, #0x4, ne  // ne = any
    3e74:	mov	x19, x1
    3e78:	b.ne	3e30 <grub_mod_fini+0x3b08>  // b.any
    3e7c:	ldr	w0, [x19, #48]
    3e80:	and	w0, w0, w21
    3e84:	cmp	w0, #0x6
    3e88:	b.ne	3e58 <grub_mod_fini+0x3b30>  // b.any
    3e8c:	ldr	x20, [x19, #40]
    3e90:	ldr	x0, [x20]
    3e94:	bl	0 <grub_free>
    3e98:	ldr	x0, [x20, #8]
    3e9c:	bl	0 <grub_free>
    3ea0:	ldr	x0, [x20, #16]
    3ea4:	bl	0 <grub_free>
    3ea8:	ldr	x0, [x20, #24]
    3eac:	bl	0 <grub_free>
    3eb0:	mov	x0, x20
    3eb4:	bl	0 <grub_free>
    3eb8:	ldr	x1, [x19]
    3ebc:	cbnz	x1, 3e68 <grub_mod_fini+0x3b40>
    3ec0:	mov	w0, #0x0                   	// #0
    3ec4:	ldp	x19, x20, [sp, #16]
    3ec8:	ldr	x21, [sp, #32]
    3ecc:	ldp	x29, x30, [sp], #48
    3ed0:	ret
    3ed4:	ldr	x0, [x19, #40]
    3ed8:	bl	0 <grub_free>
    3edc:	b	3e60 <grub_mod_fini+0x3b38>
    3ee0:	stp	x29, x30, [sp, #-32]!
    3ee4:	mov	x29, sp
    3ee8:	ldr	w0, [x1, #48]
    3eec:	and	w0, w0, #0x7ffff
    3ef0:	and	w0, w0, #0xfffc00ff
    3ef4:	cmp	w0, #0x6
    3ef8:	b.eq	3f10 <grub_mod_fini+0x3be8>  // b.none
    3efc:	cmp	w0, #0x3
    3f00:	b.eq	3f50 <grub_mod_fini+0x3c28>  // b.none
    3f04:	mov	w0, #0x0                   	// #0
    3f08:	ldp	x29, x30, [sp], #32
    3f0c:	ret
    3f10:	str	x19, [sp, #16]
    3f14:	ldr	x19, [x1, #40]
    3f18:	ldr	x0, [x19]
    3f1c:	bl	0 <grub_free>
    3f20:	ldr	x0, [x19, #8]
    3f24:	bl	0 <grub_free>
    3f28:	ldr	x0, [x19, #16]
    3f2c:	bl	0 <grub_free>
    3f30:	ldr	x0, [x19, #24]
    3f34:	bl	0 <grub_free>
    3f38:	mov	x0, x19
    3f3c:	bl	0 <grub_free>
    3f40:	mov	w0, #0x0                   	// #0
    3f44:	ldr	x19, [sp, #16]
    3f48:	ldp	x29, x30, [sp], #32
    3f4c:	ret
    3f50:	ldr	x0, [x1, #40]
    3f54:	bl	0 <grub_free>
    3f58:	mov	w0, #0x0                   	// #0
    3f5c:	ldp	x29, x30, [sp], #32
    3f60:	ret
    3f64:	nop
    3f68:	stp	x29, x30, [sp, #-64]!
    3f6c:	mov	x29, sp
    3f70:	ldr	x1, [x0]
    3f74:	stp	x19, x20, [sp, #16]
    3f78:	stp	x21, x22, [sp, #32]
    3f7c:	mov	x22, x0
    3f80:	str	x23, [sp, #48]
    3f84:	cbz	x1, 4010 <grub_mod_fini+0x3ce8>
    3f88:	ldr	x4, [x0, #16]
    3f8c:	cbz	x4, 4010 <grub_mod_fini+0x3ce8>
    3f90:	mov	w21, #0xff                  	// #255
    3f94:	mov	x19, #0x0                   	// #0
    3f98:	movk	w21, #0x4, lsl #16
    3f9c:	b	3fb8 <grub_mod_fini+0x3c90>
    3fa0:	cmp	w0, #0x3
    3fa4:	b.eq	41a8 <grub_mod_fini+0x3e80>  // b.none
    3fa8:	add	x19, x19, #0x1
    3fac:	cmp	x19, x4
    3fb0:	b.cs	4010 <grub_mod_fini+0x3ce8>  // b.hs, b.nlast
    3fb4:	ldr	x1, [x22]
    3fb8:	lsl	x2, x19, #4
    3fbc:	add	x3, x1, x2
    3fc0:	ldr	w0, [x3, #8]
    3fc4:	and	w0, w0, w21
    3fc8:	cmp	w0, #0x6
    3fcc:	b.ne	3fa0 <grub_mod_fini+0x3c78>  // b.any
    3fd0:	ldr	x20, [x1, x2]
    3fd4:	add	x19, x19, #0x1
    3fd8:	ldr	x0, [x20]
    3fdc:	bl	0 <grub_free>
    3fe0:	ldr	x0, [x20, #8]
    3fe4:	bl	0 <grub_free>
    3fe8:	ldr	x0, [x20, #16]
    3fec:	bl	0 <grub_free>
    3ff0:	ldr	x0, [x20, #24]
    3ff4:	bl	0 <grub_free>
    3ff8:	mov	x0, x20
    3ffc:	bl	0 <grub_free>
    4000:	ldr	x4, [x22, #16]
    4004:	cmp	x19, x4
    4008:	b.cc	3fb4 <grub_mod_fini+0x3c8c>  // b.lo, b.ul, b.last
    400c:	nop
    4010:	ldr	x0, [x22, #24]
    4014:	mov	x19, #0x0                   	// #0
    4018:	bl	0 <grub_free>
    401c:	ldr	x0, [x22, #16]
    4020:	cbz	x0, 4074 <grub_mod_fini+0x3d4c>
    4024:	nop
    4028:	ldr	x0, [x22, #48]
    402c:	add	x1, x0, x19, lsl #4
    4030:	cbz	x0, 403c <grub_mod_fini+0x3d14>
    4034:	ldr	x0, [x1, #8]
    4038:	bl	0 <grub_free>
    403c:	ldr	x0, [x22, #56]
    4040:	add	x1, x0, x19, lsl #4
    4044:	cbz	x0, 4050 <grub_mod_fini+0x3d28>
    4048:	ldr	x0, [x1, #8]
    404c:	bl	0 <grub_free>
    4050:	ldr	x0, [x22, #40]
    4054:	add	x1, x0, x19, lsl #4
    4058:	cbz	x0, 4150 <grub_mod_fini+0x3e28>
    405c:	ldr	x0, [x1, #8]
    4060:	add	x19, x19, #0x1
    4064:	bl	0 <grub_free>
    4068:	ldr	x0, [x22, #16]
    406c:	cmp	x0, x19
    4070:	b.hi	4028 <grub_mod_fini+0x3d00>  // b.pmore
    4074:	ldr	x0, [x22, #40]
    4078:	bl	0 <grub_free>
    407c:	ldr	x0, [x22, #48]
    4080:	mov	x23, #0x0                   	// #0
    4084:	bl	0 <grub_free>
    4088:	ldr	x0, [x22, #56]
    408c:	bl	0 <grub_free>
    4090:	ldr	x0, [x22]
    4094:	bl	0 <grub_free>
    4098:	ldr	x0, [x22, #64]
    409c:	cbz	x0, 4168 <grub_mod_fini+0x3e40>
    40a0:	lsl	x1, x23, #4
    40a4:	mov	x20, #0x0                   	// #0
    40a8:	add	x21, x0, x1
    40ac:	ldr	w0, [x0, x1]
    40b0:	cmp	w0, #0x0
    40b4:	b.gt	40fc <grub_mod_fini+0x3dd4>
    40b8:	b	4130 <grub_mod_fini+0x3e08>
    40bc:	ldr	x0, [x1, #8]
    40c0:	add	x20, x20, #0x1
    40c4:	bl	0 <grub_free>
    40c8:	ldr	x0, [x19, #56]
    40cc:	bl	0 <grub_free>
    40d0:	ldr	x0, [x19, #16]
    40d4:	bl	0 <grub_free>
    40d8:	ldr	x0, [x19, #72]
    40dc:	bl	0 <grub_free>
    40e0:	ldr	x0, [x19, #64]
    40e4:	bl	0 <grub_free>
    40e8:	mov	x0, x19
    40ec:	bl	0 <grub_free>
    40f0:	ldr	w0, [x21]
    40f4:	cmp	w0, w20
    40f8:	b.le	4130 <grub_mod_fini+0x3e08>
    40fc:	ldr	x1, [x21, #8]
    4100:	ldr	x19, [x1, x20, lsl #3]
    4104:	ldr	x0, [x19, #32]
    4108:	bl	0 <grub_free>
    410c:	ldr	x0, [x19, #48]
    4110:	bl	0 <grub_free>
    4114:	ldr	x1, [x19, #56]
    4118:	add	x2, x19, #0x8
    411c:	cmp	x1, x2
    4120:	b.ne	40bc <grub_mod_fini+0x3d94>  // b.any
    4124:	add	x20, x20, #0x1
    4128:	ldr	x0, [x19, #16]
    412c:	b	40d4 <grub_mod_fini+0x3dac>
    4130:	ldr	x0, [x21, #8]
    4134:	add	x23, x23, #0x1
    4138:	bl	0 <grub_free>
    413c:	ldr	w0, [x22, #132]
    4140:	cmp	w0, w23
    4144:	b.cc	4164 <grub_mod_fini+0x3e3c>  // b.lo, b.ul, b.last
    4148:	ldr	x0, [x22, #64]
    414c:	b	40a0 <grub_mod_fini+0x3d78>
    4150:	ldr	x1, [x22, #16]
    4154:	add	x19, x19, #0x1
    4158:	cmp	x1, x19
    415c:	b.hi	4028 <grub_mod_fini+0x3d00>  // b.pmore
    4160:	b	4078 <grub_mod_fini+0x3d50>
    4164:	ldr	x0, [x22, #64]
    4168:	bl	0 <grub_free>
    416c:	adrp	x1, 0 <grub_mod_init-0x288>
    4170:	ldr	x0, [x22, #120]
    4174:	ldr	x1, [x1]
    4178:	add	x1, x1, #0x88
    417c:	cmp	x0, x1
    4180:	b.eq	4188 <grub_mod_fini+0x3e60>  // b.none
    4184:	bl	0 <grub_free>
    4188:	ldr	x0, [x22, #208]
    418c:	bl	0 <grub_free>
    4190:	mov	x0, x22
    4194:	ldp	x19, x20, [sp, #16]
    4198:	ldp	x21, x22, [sp, #32]
    419c:	ldr	x23, [sp, #48]
    41a0:	ldp	x29, x30, [sp], #64
    41a4:	b	0 <grub_free>
    41a8:	ldr	x0, [x3]
    41ac:	bl	0 <grub_free>
    41b0:	ldr	x4, [x22, #16]
    41b4:	b	3fa8 <grub_mod_fini+0x3c80>
	...
    41c0:	ldr	w8, [x0, #52]
    41c4:	ldr	w1, [x0, #64]
    41c8:	ldr	w3, [x0, #44]
    41cc:	cmp	w8, w1
    41d0:	csel	w8, w8, w1, le
    41d4:	cmp	w8, w3
    41d8:	b.le	4594 <grub_mod_fini+0x426c>
    41dc:	sub	sp, sp, #0x50
    41e0:	mov	w11, #0x1                   	// #1
    41e4:	add	x10, sp, #0x10
    41e8:	mov	w13, #0x3                   	// #3
    41ec:	mov	w12, #0x2                   	// #2
    41f0:	adrp	x9, 0 <grub_mod_init-0x288>
    41f4:	mov	w7, #0xffffffff            	// #-1
    41f8:	mov	x6, #0xffffffffffffffff    	// #-1
    41fc:	nop
    4200:	ldr	x1, [x0, #80]
    4204:	sub	w2, w8, w3
    4208:	ldp	w15, w14, [x0, #32]
    420c:	cbnz	x1, 44a8 <grub_mod_fini+0x4180>
    4210:	ldrsw	x4, [x0, #40]
    4214:	ldr	x1, [x0]
    4218:	add	x4, x4, w3, sxtw
    421c:	adds	x4, x1, x4
    4220:	b.eq	4468 <grub_mod_fini+0x4140>  // b.none
    4224:	str	wzr, [sp, #12]
    4228:	add	x17, x4, w2, sxtw
    422c:	cmp	x17, x4
    4230:	b.ls	4448 <grub_mod_fini+0x4120>  // b.plast
    4234:	ldr	w5, [x0, #36]
    4238:	add	x16, sp, #0xc
    423c:	mov	x1, x4
    4240:	ldrb	w2, [x1]
    4244:	cbnz	w5, 43b0 <grub_mod_fini+0x4088>
    4248:	tbz	w2, #7, 447c <grub_mod_fini+0x4154>
    424c:	and	w5, w2, #0xe0
    4250:	cmp	w5, #0xc0
    4254:	b.eq	438c <grub_mod_fini+0x4064>  // b.none
    4258:	and	w5, w2, #0xf0
    425c:	cmp	w5, #0xe0
    4260:	b.eq	4544 <grub_mod_fini+0x421c>  // b.none
    4264:	and	w5, w2, #0xf8
    4268:	cmp	w5, #0xf0
    426c:	b.eq	4564 <grub_mod_fini+0x423c>  // b.none
    4270:	ldr	w1, [x0, #40]
    4274:	ldr	x4, [x0]
    4278:	add	w1, w3, w1
    427c:	ldr	x2, [x0, #80]
    4280:	ldrb	w1, [x4, w1, sxtw]
    4284:	str	w1, [sp, #12]
    4288:	cbnz	x2, 4584 <grub_mod_fini+0x425c>
    428c:	ldr	x5, [x0, #16]
    4290:	stp	w15, w14, [x0, #32]
    4294:	add	w4, w3, #0x1
    4298:	mov	w2, #0x1                   	// #1
    429c:	add	w16, w3, w2
    42a0:	sbfiz	x15, x3, #2, #32
    42a4:	str	w1, [x5, w3, sxtw #2]
    42a8:	cmp	w4, w16
    42ac:	b.ge	4430 <grub_mod_fini+0x4108>  // b.tcont
    42b0:	add	x15, x15, #0x4
    42b4:	sub	w14, w2, #0x2
    42b8:	add	x1, x5, x15
    42bc:	cmp	w14, #0x5
    42c0:	sxtw	x14, w4
    42c4:	ubfx	w1, w1, #2, #1
    42c8:	b.ls	4318 <grub_mod_fini+0x3ff0>  // b.plast
    42cc:	cbz	w1, 42d8 <grub_mod_fini+0x3fb0>
    42d0:	add	w4, w3, #0x2
    42d4:	str	w7, [x5, x15]
    42d8:	mvn	w3, w1
    42dc:	mov	w1, w1
    42e0:	add	w2, w3, w2
    42e4:	add	x1, x1, x14
    42e8:	lsr	w3, w2, #1
    42ec:	add	x1, x5, x1, lsl #2
    42f0:	add	x3, x1, w3, uxtw #3
    42f4:	nop
    42f8:	str	x6, [x1], #8
    42fc:	cmp	x3, x1
    4300:	b.ne	42f8 <grub_mod_fini+0x3fd0>  // b.any
    4304:	and	w1, w2, #0xfffffffe
    4308:	add	w4, w4, w1
    430c:	cmp	w1, w2
    4310:	b.eq	4374 <grub_mod_fini+0x404c>  // b.none
    4314:	sxtw	x14, w4
    4318:	str	w7, [x5, x14, lsl #2]
    431c:	add	w2, w4, #0x1
    4320:	lsl	x1, x14, #2
    4324:	cmp	w16, w2
    4328:	b.le	4374 <grub_mod_fini+0x404c>
    432c:	add	x5, x5, x1
    4330:	add	w1, w4, #0x2
    4334:	cmp	w16, w1
    4338:	str	w7, [x5, #4]
    433c:	b.le	4374 <grub_mod_fini+0x404c>
    4340:	str	w7, [x5, #8]
    4344:	add	w1, w4, #0x3
    4348:	cmp	w16, w1
    434c:	b.le	4374 <grub_mod_fini+0x404c>
    4350:	str	w7, [x5, #12]
    4354:	add	w1, w4, #0x4
    4358:	cmp	w16, w1
    435c:	b.le	4374 <grub_mod_fini+0x404c>
    4360:	str	w7, [x5, #16]
    4364:	add	w4, w4, #0x5
    4368:	cmp	w16, w4
    436c:	b.le	4374 <grub_mod_fini+0x404c>
    4370:	str	w7, [x5, #20]
    4374:	mov	w3, w16
    4378:	cmp	w3, w8
    437c:	b.lt	4200 <grub_mod_fini+0x3ed8>  // b.tstop
    4380:	stp	w3, w3, [x0, #44]
    4384:	add	sp, sp, #0x50
    4388:	ret
    438c:	and	w5, w2, #0x1f
    4390:	stp	w5, w11, [x0, #32]
    4394:	tst	w2, #0x1e
    4398:	b.eq	4484 <grub_mod_fini+0x415c>  // b.none
    439c:	add	x1, x1, #0x1
    43a0:	cmp	x1, x17
    43a4:	b.cs	4448 <grub_mod_fini+0x4120>  // b.hs, b.nlast
    43a8:	ldrb	w2, [x1]
    43ac:	mov	w5, #0x1                   	// #1
    43b0:	and	w18, w2, #0xc0
    43b4:	sub	w5, w5, #0x1
    43b8:	cmp	w18, #0x80
    43bc:	b.eq	43c8 <grub_mod_fini+0x40a0>  // b.none
    43c0:	str	wzr, [x0, #36]
    43c4:	b	4270 <grub_mod_fini+0x3f48>
    43c8:	ldr	w18, [x0, #32]
    43cc:	cmp	w5, #0x1
    43d0:	bfi	w2, w18, #6, #26
    43d4:	stp	w2, w5, [x0, #32]
    43d8:	b.eq	448c <grub_mod_fini+0x4164>  // b.none
    43dc:	cmp	w5, #0x2
    43e0:	ccmp	w2, #0xf, #0x2, eq  // eq = none
    43e4:	b.ls	4484 <grub_mod_fini+0x415c>  // b.plast
    43e8:	cbnz	w5, 4438 <grub_mod_fini+0x4110>
    43ec:	cbz	x16, 43f4 <grub_mod_fini+0x40cc>
    43f0:	str	w2, [x16]
    43f4:	cbz	w2, 4270 <grub_mod_fini+0x3f48>
    43f8:	sub	x1, x1, x4
    43fc:	cmn	x1, #0x3
    4400:	add	x2, x1, #0x1
    4404:	b.hi	4270 <grub_mod_fini+0x3f48>  // b.pmore
    4408:	cmn	x2, #0x2
    440c:	b.eq	4448 <grub_mod_fini+0x4120>  // b.none
    4410:	ldr	x5, [x0, #16]
    4414:	add	w4, w3, #0x1
    4418:	ldr	w1, [sp, #12]
    441c:	add	w16, w3, w2
    4420:	sbfiz	x15, x3, #2, #32
    4424:	cmp	w4, w16
    4428:	str	w1, [x5, w3, sxtw #2]
    442c:	b.lt	42b0 <grub_mod_fini+0x3f88>  // b.tstop
    4430:	mov	w3, w4
    4434:	b	4378 <grub_mod_fini+0x4050>
    4438:	add	x1, x1, #0x1
    443c:	cmp	x1, x17
    4440:	b.cc	4240 <grub_mod_fini+0x3f18>  // b.lo, b.ul, b.last
    4444:	nop
    4448:	ldr	w2, [x0, #52]
    444c:	ldr	w1, [x0, #64]
    4450:	cmp	w2, w1
    4454:	b.ge	4270 <grub_mod_fini+0x3f48>  // b.tcont
    4458:	stp	w15, w14, [x0, #32]
    445c:	stp	w3, w3, [x0, #44]
    4460:	add	sp, sp, #0x50
    4464:	ret
    4468:	ldr	x17, [x9]
    446c:	mov	w5, w14
    4470:	mov	x16, #0x0                   	// #0
    4474:	sub	x4, x17, #0x1
    4478:	b	423c <grub_mod_fini+0x3f14>
    447c:	str	w2, [x0, #32]
    4480:	b	43ec <grub_mod_fini+0x40c4>
    4484:	str	xzr, [x0, #32]
    4488:	b	4270 <grub_mod_fini+0x3f48>
    448c:	add	x1, x1, #0x1
    4490:	cmp	w2, #0x1f
    4494:	b.ls	4484 <grub_mod_fini+0x415c>  // b.plast
    4498:	cmp	x1, x17
    449c:	b.cs	4448 <grub_mod_fini+0x4120>  // b.hs, b.nlast
    44a0:	ldrb	w2, [x1]
    44a4:	b	43b0 <grub_mod_fini+0x4088>
    44a8:	ldr	w4, [x0, #104]
    44ac:	cmp	w4, #0x0
    44b0:	ccmp	w2, #0x0, #0x4, gt
    44b4:	b.le	453c <grub_mod_fini+0x4214>
    44b8:	ldp	x16, x5, [x0]
    44bc:	sxtw	x18, w3
    44c0:	ldr	w4, [x0, #40]
    44c4:	add	w4, w3, w4
    44c8:	ldrb	w4, [x16, w4, sxtw]
    44cc:	ldrb	w1, [x1, x4]
    44d0:	strb	w1, [x5, w3, sxtw]
    44d4:	strb	w1, [sp, #16]
    44d8:	ldr	w1, [x0, #104]
    44dc:	cmp	w1, w2
    44e0:	csel	w1, w1, w2, le
    44e4:	cmp	w1, #0x1
    44e8:	b.le	453c <grub_mod_fini+0x4214>
    44ec:	add	x5, x18, #0x1
    44f0:	sub	x18, x10, x18
    44f4:	mov	w4, #0x1                   	// #1
    44f8:	ldr	w1, [x0, #40]
    44fc:	ldr	x16, [x0]
    4500:	add	w1, w3, w1
    4504:	add	w1, w1, w4
    4508:	add	w4, w4, #0x1
    450c:	ldr	x17, [x0, #80]
    4510:	ldrb	w1, [x16, w1, sxtw]
    4514:	ldr	x16, [x0, #8]
    4518:	ldrb	w1, [x17, x1]
    451c:	strb	w1, [x16, x5]
    4520:	strb	w1, [x18, x5]
    4524:	add	x5, x5, #0x1
    4528:	ldr	w1, [x0, #104]
    452c:	cmp	w1, w2
    4530:	csel	w1, w1, w2, le
    4534:	cmp	w4, w1
    4538:	b.lt	44f8 <grub_mod_fini+0x41d0>  // b.tstop
    453c:	mov	x4, x10
    4540:	b	4224 <grub_mod_fini+0x3efc>
    4544:	and	w2, w2, #0xf
    4548:	stp	w2, w12, [x0, #32]
    454c:	add	x1, x1, #0x1
    4550:	cmp	x1, x17
    4554:	b.cs	4448 <grub_mod_fini+0x4120>  // b.hs, b.nlast
    4558:	ldrb	w2, [x1]
    455c:	mov	w5, #0x2                   	// #2
    4560:	b	43b0 <grub_mod_fini+0x4088>
    4564:	and	w2, w2, #0x7
    4568:	stp	w2, w13, [x0, #32]
    456c:	add	x1, x1, #0x1
    4570:	cmp	x1, x17
    4574:	b.cs	4448 <grub_mod_fini+0x4120>  // b.hs, b.nlast
    4578:	ldrb	w2, [x1]
    457c:	mov	w5, #0x3                   	// #3
    4580:	b	43b0 <grub_mod_fini+0x4088>
    4584:	and	x1, x1, #0xff
    4588:	ldrb	w1, [x2, x1]
    458c:	str	w1, [sp, #12]
    4590:	b	428c <grub_mod_fini+0x3f64>
    4594:	stp	w3, w3, [x0, #44]
    4598:	ret
    459c:	nop
	...
    45a8:	stp	x29, x30, [sp, #-112]!
    45ac:	mov	x29, sp
    45b0:	stp	x25, x26, [sp, #64]
    45b4:	sxtw	x26, w1
    45b8:	stp	x27, x28, [sp, #80]
    45bc:	sxtw	x27, w2
    45c0:	stp	x19, x20, [sp, #16]
    45c4:	mov	x20, x27
    45c8:	mov	x19, x0
    45cc:	stp	x21, x22, [sp, #32]
    45d0:	mov	w22, w3
    45d4:	mov	w21, w4
    45d8:	stp	x23, x24, [sp, #48]
    45dc:	mov	x24, x26
    45e0:	lsl	x25, x26, #4
    45e4:	ldr	x3, [x19]
    45e8:	ldr	x2, [x19, #40]
    45ec:	add	x4, x3, x25
    45f0:	ldrb	w0, [x4, #8]
    45f4:	cmp	w0, #0x4
    45f8:	b.eq	4830 <grub_mod_fini+0x4508>  // b.none
    45fc:	add	x0, x2, x25
    4600:	ldr	w1, [x0, #4]
    4604:	cbz	w1, 4998 <grub_mod_fini+0x4670>
    4608:	ldr	x5, [x0, #8]
    460c:	lsl	x23, x27, #4
    4610:	cmp	w1, #0x1
    4614:	add	x0, x2, x23
    4618:	ldr	w26, [x5]
    461c:	b.eq	4764 <grub_mod_fini+0x443c>  // b.none
    4620:	ldr	x1, [x19, #16]
    4624:	sub	w1, w1, #0x1
    4628:	add	x5, x3, w1, sxtw #4
    462c:	sxtw	x2, w1
    4630:	ldrb	w4, [x5, #10]
    4634:	str	wzr, [x0, #4]
    4638:	tst	x4, #0x4
    463c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4640:	b.le	48f0 <grub_mod_fini+0x45c8>
    4644:	ldr	x6, [x19, #32]
    4648:	sub	x4, x2, #0x1
    464c:	add	x4, x3, x4, lsl #4
    4650:	add	x2, x6, x2, lsl #2
    4654:	b	4674 <grub_mod_fini+0x434c>
    4658:	mov	x5, x4
    465c:	sub	w1, w1, #0x1
    4660:	sub	x4, x4, #0x10
    4664:	ldrb	w6, [x5, #10]
    4668:	tst	x6, #0x4
    466c:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    4670:	b.le	48f0 <grub_mod_fini+0x45c8>
    4674:	ldr	w6, [x2]
    4678:	sub	x2, x2, #0x4
    467c:	cmp	w6, w26
    4680:	b.ne	4658 <grub_mod_fini+0x4330>  // b.any
    4684:	ldr	w5, [x5, #8]
    4688:	ubfx	x5, x5, #8, #10
    468c:	cmp	w21, w5
    4690:	b.ne	4658 <grub_mod_fini+0x4330>  // b.any
    4694:	bl	16f8 <grub_mod_fini+0x13d0>
    4698:	tst	w0, #0xff
    469c:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    46a0:	ldr	x2, [x19, #40]
    46a4:	mov	x0, x19
    46a8:	ldr	x1, [x19]
    46ac:	add	x25, x2, x25
    46b0:	ldr	x2, [x25, #8]
    46b4:	ldr	w24, [x2, #4]
    46b8:	sbfiz	x25, x24, #4, #32
    46bc:	sxtw	x26, w24
    46c0:	add	x1, x1, x25
    46c4:	ldp	x2, x3, [x1]
    46c8:	mov	x1, x2
    46cc:	mov	x2, x3
    46d0:	bl	1988 <grub_mod_fini+0x1660>
    46d4:	mov	w20, w0
    46d8:	cmn	w0, #0x1
    46dc:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    46e0:	ldr	x3, [x19]
    46e4:	sxtw	x27, w0
    46e8:	mov	w1, w0
    46ec:	and	w2, w21, #0x3ff
    46f0:	add	x25, x3, x25
    46f4:	mov	w4, w2
    46f8:	add	x3, x3, w0, sxtw #4
    46fc:	ldr	w0, [x3, #8]
    4700:	bfi	w0, w2, #8, #10
    4704:	str	w0, [x3, #8]
    4708:	and	w0, w0, #0xfff800ff
    470c:	ldr	w2, [x25, #8]
    4710:	ubfx	x2, x2, #8, #10
    4714:	orr	w2, w2, w4
    4718:	ldp	x5, x4, [x19, #32]
    471c:	lsl	w2, w2, #8
    4720:	orr	w2, w2, #0x40000
    4724:	orr	w2, w2, w0
    4728:	str	w2, [x3, #8]
    472c:	str	w24, [x5, x27, lsl #2]
    4730:	add	x0, x4, x23
    4734:	bl	16f8 <grub_mod_fini+0x13d0>
    4738:	tst	w0, #0xff
    473c:	b.ne	45e0 <grub_mod_fini+0x42b8>  // b.any
    4740:	mov	w1, #0xc                   	// #12
    4744:	mov	w0, w1
    4748:	ldp	x19, x20, [sp, #16]
    474c:	ldp	x21, x22, [sp, #32]
    4750:	ldp	x23, x24, [sp, #48]
    4754:	ldp	x25, x26, [sp, #64]
    4758:	ldp	x27, x28, [sp, #80]
    475c:	ldp	x29, x30, [sp], #112
    4760:	ret
    4764:	str	wzr, [x0, #4]
    4768:	cmp	w24, w22
    476c:	ccmp	w24, w20, #0x4, eq  // eq = none
    4770:	b.ne	49a8 <grub_mod_fini+0x4680>  // b.any
    4774:	sbfiz	x24, x26, #4, #32
    4778:	ldr	w2, [x4, #8]
    477c:	add	x3, x3, x24
    4780:	mov	x0, x19
    4784:	sxtw	x25, w26
    4788:	ubfx	x2, x2, #8, #10
    478c:	ldp	x4, x5, [x3]
    4790:	orr	w21, w21, w2
    4794:	mov	x1, x4
    4798:	mov	x2, x5
    479c:	bl	1988 <grub_mod_fini+0x1660>
    47a0:	mov	w20, w0
    47a4:	cmn	w0, #0x1
    47a8:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    47ac:	ldr	x3, [x19]
    47b0:	sxtw	x27, w0
    47b4:	mov	w1, w0
    47b8:	and	w2, w21, #0x3ff
    47bc:	add	x24, x3, x24
    47c0:	mov	w4, w2
    47c4:	add	x3, x3, w0, sxtw #4
    47c8:	ldr	w0, [x3, #8]
    47cc:	bfi	w0, w2, #8, #10
    47d0:	str	w0, [x3, #8]
    47d4:	and	w0, w0, #0xfff800ff
    47d8:	ldr	w2, [x24, #8]
    47dc:	ubfx	x2, x2, #8, #10
    47e0:	orr	w2, w2, w4
    47e4:	ldp	x5, x4, [x19, #32]
    47e8:	lsl	w2, w2, #8
    47ec:	orr	w2, w2, #0x40000
    47f0:	orr	w2, w2, w0
    47f4:	str	w2, [x3, #8]
    47f8:	str	w26, [x5, x27, lsl #2]
    47fc:	add	x0, x4, x23
    4800:	bl	16f8 <grub_mod_fini+0x13d0>
    4804:	tst	w0, #0xff
    4808:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    480c:	mov	w24, w26
    4810:	mov	x26, x25
    4814:	ldr	x3, [x19]
    4818:	lsl	x25, x26, #4
    481c:	ldr	x2, [x19, #40]
    4820:	add	x4, x3, x25
    4824:	ldrb	w0, [x4, #8]
    4828:	cmp	w0, #0x4
    482c:	b.ne	45fc <grub_mod_fini+0x42d4>  // b.any
    4830:	ldr	x1, [x19, #24]
    4834:	lsl	x25, x27, #4
    4838:	add	x2, x2, x25
    483c:	mov	x0, x19
    4840:	lsl	x28, x26, #2
    4844:	ldr	w24, [x1, x26, lsl #2]
    4848:	str	wzr, [x2, #4]
    484c:	sbfiz	x23, x24, #4, #32
    4850:	sxtw	x26, w24
    4854:	add	x3, x3, x23
    4858:	ldp	x2, x3, [x3]
    485c:	mov	x1, x2
    4860:	mov	x2, x3
    4864:	bl	1988 <grub_mod_fini+0x1660>
    4868:	mov	w20, w0
    486c:	cmn	w0, #0x1
    4870:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    4874:	sxtw	x5, w0
    4878:	mov	w1, w0
    487c:	ldr	x0, [x19]
    4880:	and	w3, w21, #0x3ff
    4884:	mov	w4, w3
    4888:	add	x23, x0, x23
    488c:	add	x0, x0, w20, sxtw #4
    4890:	ldr	w2, [x0, #8]
    4894:	bfi	w2, w3, #8, #10
    4898:	str	w2, [x0, #8]
    489c:	and	w2, w2, #0xfff800ff
    48a0:	str	x5, [sp, #104]
    48a4:	ldr	w3, [x23, #8]
    48a8:	ubfx	x3, x3, #8, #10
    48ac:	orr	w3, w3, w4
    48b0:	ldp	x4, x6, [x19, #24]
    48b4:	lsl	w3, w3, #8
    48b8:	orr	w3, w3, #0x40000
    48bc:	orr	w3, w3, w2
    48c0:	str	w3, [x0, #8]
    48c4:	ldr	x0, [x19, #40]
    48c8:	str	w24, [x6, x5, lsl #2]
    48cc:	add	x0, x0, x25
    48d0:	ldr	w2, [x4, x28]
    48d4:	str	w2, [x4, x27, lsl #2]
    48d8:	bl	16f8 <grub_mod_fini+0x13d0>
    48dc:	tst	w0, #0xff
    48e0:	ldr	x5, [sp, #104]
    48e4:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    48e8:	mov	x27, x5
    48ec:	b	45e0 <grub_mod_fini+0x42b8>
    48f0:	sbfiz	x24, x26, #4, #32
    48f4:	mov	x0, x19
    48f8:	add	x3, x3, x24
    48fc:	ldp	x2, x3, [x3]
    4900:	mov	x1, x2
    4904:	mov	x2, x3
    4908:	bl	1988 <grub_mod_fini+0x1660>
    490c:	mov	w20, w0
    4910:	cmn	w0, #0x1
    4914:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    4918:	ldr	x2, [x19]
    491c:	and	w3, w21, #0x3ff
    4920:	mov	w4, w3
    4924:	mov	w1, w20
    4928:	add	x24, x2, x24
    492c:	add	x2, x2, w20, sxtw #4
    4930:	ldr	w0, [x2, #8]
    4934:	bfi	w0, w3, #8, #10
    4938:	str	w0, [x2, #8]
    493c:	and	w0, w0, #0xfff800ff
    4940:	ldr	w3, [x24, #8]
    4944:	ubfx	x3, x3, #8, #10
    4948:	orr	w3, w3, w4
    494c:	ldp	x5, x4, [x19, #32]
    4950:	lsl	w3, w3, #8
    4954:	orr	w3, w3, #0x40000
    4958:	orr	w3, w3, w0
    495c:	str	w3, [x2, #8]
    4960:	str	w26, [x5, w20, sxtw #2]
    4964:	add	x0, x4, x23
    4968:	bl	16f8 <grub_mod_fini+0x13d0>
    496c:	tst	w0, #0xff
    4970:	b.eq	4740 <grub_mod_fini+0x4418>  // b.none
    4974:	mov	w1, w26
    4978:	mov	w2, w20
    497c:	mov	w4, w21
    4980:	mov	w3, w22
    4984:	mov	x0, x19
    4988:	bl	45a8 <grub_mod_fini+0x4280>
    498c:	mov	w1, w0
    4990:	cbz	w0, 46a0 <grub_mod_fini+0x4378>
    4994:	b	4744 <grub_mod_fini+0x441c>
    4998:	ldr	x0, [x19, #24]
    499c:	ldr	w2, [x0, x26, lsl #2]
    49a0:	str	w2, [x0, x27, lsl #2]
    49a4:	b	4744 <grub_mod_fini+0x441c>
    49a8:	mov	w1, w26
    49ac:	bl	16f8 <grub_mod_fini+0x13d0>
    49b0:	mov	w1, #0x0                   	// #0
    49b4:	tst	w0, #0xff
    49b8:	b.ne	4744 <grub_mod_fini+0x441c>  // b.any
    49bc:	b	4740 <grub_mod_fini+0x4418>
    49c0:	stp	x29, x30, [sp, #-112]!
    49c4:	mov	x29, sp
    49c8:	stp	x23, x24, [sp, #48]
    49cc:	mov	x23, x0
    49d0:	and	w24, w3, #0xff
    49d4:	ldr	x0, [x1, #40]
    49d8:	stp	x19, x20, [sp, #16]
    49dc:	sbfiz	x20, x2, #4, #32
    49e0:	add	x0, x0, x20
    49e4:	stp	x25, x26, [sp, #64]
    49e8:	mov	x19, x1
    49ec:	stp	x21, x22, [sp, #32]
    49f0:	mov	w22, w2
    49f4:	ldr	w25, [x0, #4]
    49f8:	add	w25, w25, #0x1
    49fc:	stp	w25, wzr, [sp, #80]
    4a00:	sbfiz	x0, x25, #2, #32
    4a04:	bl	0 <grub_malloc>
    4a08:	cmp	x0, #0x0
    4a0c:	str	x0, [sp, #88]
    4a10:	cset	w21, eq  // eq = none
    4a14:	cmp	w25, #0x0
    4a18:	csel	w21, w21, wzr, ne  // ne = any
    4a1c:	cbnz	w21, 4bc0 <grub_mod_fini+0x4898>
    4a20:	ldr	x2, [x19]
    4a24:	mov	w3, #0xffffffff            	// #-1
    4a28:	ldr	x0, [x19, #48]
    4a2c:	add	x1, x2, x20
    4a30:	add	x0, x0, x20
    4a34:	ldr	w4, [x1, #8]
    4a38:	str	w3, [x0, #4]
    4a3c:	tst	w4, #0x3ff00
    4a40:	b.ne	4b4c <grub_mod_fini+0x4824>  // b.any
    4a44:	ldrb	w0, [x1, #8]
    4a48:	tbz	w0, #3, 4b98 <grub_mod_fini+0x4870>
    4a4c:	ldr	x3, [x19, #40]
    4a50:	add	x0, x3, x20
    4a54:	ldr	w1, [x0, #4]
    4a58:	cmp	w1, #0x0
    4a5c:	b.le	4b98 <grub_mod_fini+0x4870>
    4a60:	mov	x25, #0x0                   	// #0
    4a64:	nop
    4a68:	ldr	x1, [x0, #8]
    4a6c:	ldr	x0, [x19, #48]
    4a70:	ldr	w2, [x1, x25, lsl #2]
    4a74:	sbfiz	x26, x2, #4, #32
    4a78:	add	x0, x0, x26
    4a7c:	ldr	w1, [x0, #4]
    4a80:	cmn	w1, #0x1
    4a84:	b.eq	4b44 <grub_mod_fini+0x481c>  // b.none
    4a88:	cbz	w1, 4b2c <grub_mod_fini+0x4804>
    4a8c:	ldp	x0, x1, [x0]
    4a90:	stp	x0, x1, [sp, #96]
    4a94:	add	x1, sp, #0x60
    4a98:	add	x0, sp, #0x50
    4a9c:	bl	2108 <grub_mod_fini+0x1de0>
    4aa0:	cbnz	w0, 4b04 <grub_mod_fini+0x47dc>
    4aa4:	ldr	x0, [x19, #48]
    4aa8:	add	x0, x0, x26
    4aac:	ldr	w0, [x0, #4]
    4ab0:	cbz	w0, 4b1c <grub_mod_fini+0x47f4>
    4ab4:	ldr	x3, [x19, #40]
    4ab8:	add	x0, x3, x20
    4abc:	add	x25, x25, #0x1
    4ac0:	ldr	w1, [x0, #4]
    4ac4:	cmp	w1, w25
    4ac8:	b.gt	4a68 <grub_mod_fini+0x4740>
    4acc:	mov	w1, w22
    4ad0:	add	x0, sp, #0x50
    4ad4:	bl	16f8 <grub_mod_fini+0x13d0>
    4ad8:	tst	w0, #0xff
    4adc:	b.eq	4bc0 <grub_mod_fini+0x4898>  // b.none
    4ae0:	ldr	x0, [x19, #48]
    4ae4:	eor	w24, w24, #0x1
    4ae8:	tst	w21, w24
    4aec:	add	x1, x0, x20
    4af0:	b.eq	4bb0 <grub_mod_fini+0x4888>  // b.none
    4af4:	str	wzr, [x1, #4]
    4af8:	ldp	x2, x3, [sp, #80]
    4afc:	mov	w0, #0x0                   	// #0
    4b00:	stp	x2, x3, [x23]
    4b04:	ldp	x19, x20, [sp, #16]
    4b08:	ldp	x21, x22, [sp, #32]
    4b0c:	ldp	x23, x24, [sp, #48]
    4b10:	ldp	x25, x26, [sp, #64]
    4b14:	ldp	x29, x30, [sp], #112
    4b18:	ret
    4b1c:	ldr	x0, [sp, #104]
    4b20:	mov	w21, #0x1                   	// #1
    4b24:	bl	0 <grub_free>
    4b28:	b	4ab4 <grub_mod_fini+0x478c>
    4b2c:	mov	x1, x19
    4b30:	add	x0, sp, #0x60
    4b34:	mov	w3, #0x0                   	// #0
    4b38:	bl	49c0 <grub_mod_fini+0x4698>
    4b3c:	cbz	w0, 4a94 <grub_mod_fini+0x476c>
    4b40:	b	4b04 <grub_mod_fini+0x47dc>
    4b44:	mov	w21, #0x1                   	// #1
    4b48:	b	4ab8 <grub_mod_fini+0x4790>
    4b4c:	ldr	x0, [x19, #40]
    4b50:	add	x0, x0, x20
    4b54:	ldr	w3, [x0, #4]
    4b58:	cbz	w3, 4b98 <grub_mod_fini+0x4870>
    4b5c:	ldr	x0, [x0, #8]
    4b60:	ldrsw	x0, [x0]
    4b64:	add	x2, x2, x0, lsl #4
    4b68:	ldrb	w0, [x2, #10]
    4b6c:	tbnz	w0, #2, 4a44 <grub_mod_fini+0x471c>
    4b70:	ubfx	x4, x4, #8, #10
    4b74:	mov	w3, w22
    4b78:	mov	w2, w22
    4b7c:	mov	w1, w22
    4b80:	mov	x0, x19
    4b84:	bl	45a8 <grub_mod_fini+0x4280>
    4b88:	cbnz	w0, 4b04 <grub_mod_fini+0x47dc>
    4b8c:	ldr	x1, [x19]
    4b90:	add	x1, x1, x20
    4b94:	b	4a44 <grub_mod_fini+0x471c>
    4b98:	mov	w1, w22
    4b9c:	add	x0, sp, #0x50
    4ba0:	bl	16f8 <grub_mod_fini+0x13d0>
    4ba4:	tst	w0, #0xff
    4ba8:	b.eq	4bc0 <grub_mod_fini+0x4898>  // b.none
    4bac:	ldr	x0, [x19, #48]
    4bb0:	add	x20, x0, x20
    4bb4:	ldp	x0, x1, [sp, #80]
    4bb8:	stp	x0, x1, [x20]
    4bbc:	b	4af8 <grub_mod_fini+0x47d0>
    4bc0:	mov	w0, #0xc                   	// #12
    4bc4:	ldp	x19, x20, [sp, #16]
    4bc8:	ldp	x21, x22, [sp, #32]
    4bcc:	ldp	x23, x24, [sp, #48]
    4bd0:	ldp	x25, x26, [sp, #64]
    4bd4:	ldp	x29, x30, [sp], #112
    4bd8:	ret
    4bdc:	nop
    4be0:	stp	x29, x30, [sp, #-64]!
    4be4:	mov	x29, sp
    4be8:	stp	x19, x20, [sp, #16]
    4bec:	mov	w20, w3
    4bf0:	mov	w19, w4
    4bf4:	stp	x21, x22, [sp, #32]
    4bf8:	mov	x21, x1
    4bfc:	mov	w1, w2
    4c00:	str	x23, [sp, #48]
    4c04:	mov	x23, x0
    4c08:	ldr	w5, [x21, #4]
    4c0c:	cmp	w5, #0x0
    4c10:	b.le	4c54 <grub_mod_fini+0x492c>
    4c14:	sub	w5, w5, #0x1
    4c18:	mov	w2, #0x0                   	// #0
    4c1c:	ldr	x0, [x21, #8]
    4c20:	b	4c3c <grub_mod_fini+0x4914>
    4c24:	lsr	w3, w6, #1
    4c28:	lsr	w6, w6, #1
    4c2c:	ldr	w3, [x0, x3, lsl #2]
    4c30:	cmp	w1, w3
    4c34:	b.gt	4cdc <grub_mod_fini+0x49b4>
    4c38:	mov	w5, w6
    4c3c:	add	w6, w5, w2
    4c40:	cmp	w5, w2
    4c44:	b.hi	4c24 <grub_mod_fini+0x48fc>  // b.pmore
    4c48:	ldr	w0, [x0, w2, uxtw #2]
    4c4c:	cmp	w1, w0
    4c50:	b.eq	4d00 <grub_mod_fini+0x49d8>  // b.none
    4c54:	ldr	x0, [x23]
    4c58:	sbfiz	x22, x1, #4, #32
    4c5c:	add	x2, x0, x22
    4c60:	ldrb	w2, [x2, #8]
    4c64:	cmp	w2, w19
    4c68:	b.ne	4c78 <grub_mod_fini+0x4950>  // b.any
    4c6c:	ldr	w0, [x0, x22]
    4c70:	cmp	w0, w20
    4c74:	b.eq	4ce4 <grub_mod_fini+0x49bc>  // b.none
    4c78:	mov	x0, x21
    4c7c:	bl	16f8 <grub_mod_fini+0x13d0>
    4c80:	tst	w0, #0xff
    4c84:	b.eq	4d18 <grub_mod_fini+0x49f0>  // b.none
    4c88:	ldr	x2, [x23, #40]
    4c8c:	add	x2, x2, x22
    4c90:	ldr	w0, [x2, #4]
    4c94:	cbz	w0, 4d00 <grub_mod_fini+0x49d8>
    4c98:	cmp	w0, #0x2
    4c9c:	ldr	x0, [x2, #8]
    4ca0:	b.eq	4cac <grub_mod_fini+0x4984>  // b.none
    4ca4:	ldr	w1, [x0]
    4ca8:	b	4c08 <grub_mod_fini+0x48e0>
    4cac:	ldr	w2, [x0, #4]
    4cb0:	mov	w4, w19
    4cb4:	mov	w3, w20
    4cb8:	mov	x1, x21
    4cbc:	mov	x0, x23
    4cc0:	bl	4be0 <grub_mod_fini+0x48b8>
    4cc4:	cbnz	w0, 4d04 <grub_mod_fini+0x49dc>
    4cc8:	ldr	x0, [x23, #40]
    4ccc:	add	x22, x0, x22
    4cd0:	ldr	x0, [x22, #8]
    4cd4:	ldr	w1, [x0]
    4cd8:	b	4c08 <grub_mod_fini+0x48e0>
    4cdc:	add	w2, w6, #0x1
    4ce0:	b	4c3c <grub_mod_fini+0x4914>
    4ce4:	cmp	w19, #0x9
    4ce8:	b.ne	4d00 <grub_mod_fini+0x49d8>  // b.any
    4cec:	mov	x0, x21
    4cf0:	bl	16f8 <grub_mod_fini+0x13d0>
    4cf4:	tst	w0, #0xff
    4cf8:	b.eq	4d18 <grub_mod_fini+0x49f0>  // b.none
    4cfc:	nop
    4d00:	mov	w0, #0x0                   	// #0
    4d04:	ldp	x19, x20, [sp, #16]
    4d08:	ldp	x21, x22, [sp, #32]
    4d0c:	ldr	x23, [sp, #48]
    4d10:	ldp	x29, x30, [sp], #64
    4d14:	ret
    4d18:	mov	w0, #0xc                   	// #12
    4d1c:	ldp	x19, x20, [sp, #16]
    4d20:	ldp	x21, x22, [sp, #32]
    4d24:	ldr	x23, [sp, #48]
    4d28:	ldp	x29, x30, [sp], #64
    4d2c:	ret
    4d30:	stp	x29, x30, [sp, #-80]!
    4d34:	mov	x29, sp
    4d38:	stp	x21, x22, [sp, #32]
    4d3c:	ldr	w21, [x1, #4]
    4d40:	stp	x19, x20, [sp, #16]
    4d44:	mov	w20, w2
    4d48:	mov	w19, w3
    4d4c:	stp	x23, x24, [sp, #48]
    4d50:	mov	x24, x1
    4d54:	mov	x23, x0
    4d58:	sbfiz	x0, x21, #2, #32
    4d5c:	stp	w21, wzr, [sp, #64]
    4d60:	bl	0 <grub_malloc>
    4d64:	str	x0, [sp, #72]
    4d68:	cmp	w21, #0x0
    4d6c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    4d70:	b.eq	4e74 <grub_mod_fini+0x4b4c>  // b.none
    4d74:	ldr	w0, [x24, #4]
    4d78:	cmp	w0, #0x0
    4d7c:	b.le	4e18 <grub_mod_fini+0x4af0>
    4d80:	mov	x22, #0x0                   	// #0
    4d84:	nop
    4d88:	ldr	x0, [x24, #8]
    4d8c:	ldr	x1, [x23, #48]
    4d90:	ldr	w2, [x0, x22, lsl #2]
    4d94:	add	x1, x1, w2, sxtw #4
    4d98:	ldr	w10, [x1, #4]
    4d9c:	cmp	w10, #0x0
    4da0:	b.le	4e44 <grub_mod_fini+0x4b1c>
    4da4:	mov	x5, #0x0                   	// #0
    4da8:	ldr	x9, [x23]
    4dac:	ldr	x4, [x1, #8]
    4db0:	b	4dbc <grub_mod_fini+0x4a94>
    4db4:	cmp	w10, w5
    4db8:	b.le	4e44 <grub_mod_fini+0x4b1c>
    4dbc:	ldr	w7, [x4, x5, lsl #2]
    4dc0:	add	x5, x5, #0x1
    4dc4:	sbfiz	x6, x7, #4, #32
    4dc8:	add	x8, x9, x6
    4dcc:	ldrb	w8, [x8, #8]
    4dd0:	cmp	w19, w8
    4dd4:	b.ne	4db4 <grub_mod_fini+0x4a8c>  // b.any
    4dd8:	ldr	w6, [x9, x6]
    4ddc:	cmp	w20, w6
    4de0:	b.ne	4db4 <grub_mod_fini+0x4a8c>  // b.any
    4de4:	cmn	w7, #0x1
    4de8:	b.eq	4e44 <grub_mod_fini+0x4b1c>  // b.none
    4dec:	mov	w4, w19
    4df0:	mov	w3, w20
    4df4:	add	x1, sp, #0x40
    4df8:	mov	x0, x23
    4dfc:	bl	4be0 <grub_mod_fini+0x48b8>
    4e00:	mov	w21, w0
    4e04:	cbnz	w0, 4e54 <grub_mod_fini+0x4b2c>
    4e08:	ldr	w0, [x24, #4]
    4e0c:	add	x22, x22, #0x1
    4e10:	cmp	w0, w22
    4e14:	b.gt	4d88 <grub_mod_fini+0x4a60>
    4e18:	ldr	x0, [x24, #8]
    4e1c:	mov	w21, #0x0                   	// #0
    4e20:	bl	0 <grub_free>
    4e24:	ldp	x0, x1, [sp, #64]
    4e28:	stp	x0, x1, [x24]
    4e2c:	mov	w0, w21
    4e30:	ldp	x19, x20, [sp, #16]
    4e34:	ldp	x21, x22, [sp, #32]
    4e38:	ldp	x23, x24, [sp, #48]
    4e3c:	ldp	x29, x30, [sp], #80
    4e40:	ret
    4e44:	add	x0, sp, #0x40
    4e48:	bl	2108 <grub_mod_fini+0x1de0>
    4e4c:	mov	w21, w0
    4e50:	cbz	w0, 4e08 <grub_mod_fini+0x4ae0>
    4e54:	ldr	x0, [sp, #72]
    4e58:	bl	0 <grub_free>
    4e5c:	mov	w0, w21
    4e60:	ldp	x19, x20, [sp, #16]
    4e64:	ldp	x21, x22, [sp, #32]
    4e68:	ldp	x23, x24, [sp, #48]
    4e6c:	ldp	x29, x30, [sp], #80
    4e70:	ret
    4e74:	mov	w21, #0xc                   	// #12
    4e78:	b	4e5c <grub_mod_fini+0x4b34>
    4e7c:	nop
    4e80:	stp	x29, x30, [sp, #-400]!
    4e84:	mov	x29, sp
    4e88:	stp	x23, x24, [sp, #48]
    4e8c:	ldr	x23, [x0]
    4e90:	stp	x19, x20, [sp, #16]
    4e94:	mov	x20, x0
    4e98:	stp	x21, x22, [sp, #32]
    4e9c:	mov	x21, x2
    4ea0:	ldr	w0, [x23, #164]
    4ea4:	stp	x25, x26, [sp, #64]
    4ea8:	mov	x25, x3
    4eac:	cmp	w0, #0x1
    4eb0:	str	wzr, [sp, #108]
    4eb4:	str	x1, [sp, #120]
    4eb8:	b.ne	4ec8 <grub_mod_fini+0x4ba0>  // b.any
    4ebc:	ldr	x19, [x20, #24]
    4ec0:	ubfx	w0, w19, #22, #1
    4ec4:	str	w0, [sp, #108]
    4ec8:	ldr	x0, [sp, #120]
    4ecc:	mov	x26, #0x0                   	// #0
    4ed0:	ldr	w5, [x0]
    4ed4:	cmp	w5, #0x0
    4ed8:	b.le	4f98 <grub_mod_fini+0x4c70>
    4edc:	add	x22, sp, #0x94
    4ee0:	mov	w24, #0x1                   	// #1
    4ee4:	stp	x27, x28, [sp, #80]
    4ee8:	b	4f1c <grub_mod_fini+0x4bf4>
    4eec:	cmp	w27, #0x3
    4ef0:	b.eq	5154 <grub_mod_fini+0x4e2c>  // b.none
    4ef4:	cmp	w27, #0x6
    4ef8:	b.eq	4fb0 <grub_mod_fini+0x4c88>  // b.none
    4efc:	and	w0, w27, #0xfffffffd
    4f00:	cmp	w0, #0x5
    4f04:	b.eq	53d4 <grub_mod_fini+0x50ac>  // b.none
    4f08:	cmp	w27, #0x2
    4f0c:	b.eq	540c <grub_mod_fini+0x50e4>  // b.none
    4f10:	add	x26, x26, #0x1
    4f14:	cmp	w5, w26
    4f18:	b.le	4f94 <grub_mod_fini+0x4c6c>
    4f1c:	ldr	x1, [x21]
    4f20:	ldr	x0, [x23]
    4f24:	ldr	w2, [x1, x26, lsl #2]
    4f28:	sbfiz	x10, x2, #4, #32
    4f2c:	add	x1, x0, x10
    4f30:	ldrb	w27, [x1, #8]
    4f34:	cmp	w27, #0x1
    4f38:	b.ne	4eec <grub_mod_fini+0x4bc4>  // b.any
    4f3c:	ldrb	w0, [x0, x10]
    4f40:	and	x3, x0, #0xff
    4f44:	add	x1, x25, w0, uxtb
    4f48:	strb	w27, [x25, x3]
    4f4c:	ldr	w3, [sp, #108]
    4f50:	cbz	w3, 4f6c <grub_mod_fini+0x4c44>
    4f54:	add	w3, w0, #0x20
    4f58:	sub	w0, w0, #0x41
    4f5c:	cmp	w0, #0x1a
    4f60:	add	x0, x25, w3, sxtw
    4f64:	csel	x1, x0, x1, cc  // cc = lo, ul, last
    4f68:	strb	w24, [x1]
    4f6c:	ldr	x0, [x20, #24]
    4f70:	tbz	w0, #22, 4f80 <grub_mod_fini+0x4c58>
    4f74:	ldr	w0, [x23, #164]
    4f78:	cmp	w0, #0x1
    4f7c:	b.gt	5228 <grub_mod_fini+0x4f00>
    4f80:	ldr	x0, [sp, #120]
    4f84:	add	x26, x26, #0x1
    4f88:	ldr	w5, [x0]
    4f8c:	cmp	w5, w26
    4f90:	b.gt	4f1c <grub_mod_fini+0x4bf4>
    4f94:	ldp	x27, x28, [sp, #80]
    4f98:	ldp	x19, x20, [sp, #16]
    4f9c:	ldp	x21, x22, [sp, #32]
    4fa0:	ldp	x23, x24, [sp, #48]
    4fa4:	ldp	x25, x26, [sp, #64]
    4fa8:	ldp	x29, x30, [sp], #400
    4fac:	ret
    4fb0:	ldr	w0, [x23, #164]
    4fb4:	ldr	x28, [x1]
    4fb8:	cmp	w0, #0x1
    4fbc:	b.le	4fd8 <grub_mod_fini+0x4cb0>
    4fc0:	ldr	w0, [x28, #52]
    4fc4:	cbnz	w0, 50b8 <grub_mod_fini+0x4d90>
    4fc8:	ldrb	w0, [x28, #32]
    4fcc:	tbnz	w0, #0, 50b8 <grub_mod_fini+0x4d90>
    4fd0:	ldr	w0, [x28, #48]
    4fd4:	cbnz	w0, 50b8 <grub_mod_fini+0x4d90>
    4fd8:	ldr	w0, [x28, #36]
    4fdc:	add	x27, sp, #0x88
    4fe0:	mov	x19, #0x0                   	// #0
    4fe4:	cmp	w0, #0x0
    4fe8:	b.le	4f10 <grub_mod_fini+0x4be8>
    4fec:	nop
    4ff0:	mov	x2, #0x8                   	// #8
    4ff4:	mov	w1, #0x0                   	// #0
    4ff8:	mov	x0, x27
    4ffc:	bl	0 <grub_memset>
    5000:	ldr	x2, [x28]
    5004:	lsl	x3, x19, #2
    5008:	mov	x1, x22
    500c:	add	x0, sp, #0x90
    5010:	str	x3, [sp, #112]
    5014:	ldr	w2, [x2, x19, lsl #2]
    5018:	add	x19, x19, #0x1
    501c:	bl	0 <grub_encode_utf8_character>
    5020:	cmn	x0, #0x1
    5024:	b.eq	5058 <grub_mod_fini+0x4d30>  // b.none
    5028:	ldrb	w0, [sp, #144]
    502c:	add	w1, w0, #0x20
    5030:	sub	w2, w0, #0x41
    5034:	cmp	w2, #0x1a
    5038:	and	x2, x0, #0xff
    503c:	add	x1, x25, w1, sxtw
    5040:	add	x0, x25, w0, uxtb
    5044:	csel	x0, x1, x0, cc  // cc = lo, ul, last
    5048:	ldr	w1, [sp, #108]
    504c:	strb	w24, [x25, x2]
    5050:	cbz	w1, 5058 <grub_mod_fini+0x4d30>
    5054:	strb	w24, [x0]
    5058:	ldr	x0, [x20, #24]
    505c:	tbz	w0, #22, 50a8 <grub_mod_fini+0x4d80>
    5060:	ldr	w2, [x23, #164]
    5064:	mov	x1, x22
    5068:	add	x0, sp, #0x90
    506c:	cmp	w2, #0x1
    5070:	b.le	50a8 <grub_mod_fini+0x4d80>
    5074:	ldr	x2, [x28]
    5078:	ldr	x3, [sp, #112]
    507c:	ldr	w2, [x2, x3]
    5080:	sub	w7, w2, #0x41
    5084:	add	w5, w2, #0x20
    5088:	cmp	w7, #0x1a
    508c:	csel	w2, w5, w2, cc  // cc = lo, ul, last
    5090:	bl	0 <grub_encode_utf8_character>
    5094:	cmn	x0, #0x1
    5098:	b.eq	50a8 <grub_mod_fini+0x4d80>  // b.none
    509c:	ldrb	w0, [sp, #144]
    50a0:	strb	w24, [x25, x0]
    50a4:	nop
    50a8:	ldr	w0, [x28, #36]
    50ac:	cmp	w0, w19
    50b0:	b.gt	4ff0 <grub_mod_fini+0x4cc8>
    50b4:	b	4f80 <grub_mod_fini+0x4c58>
    50b8:	mov	w28, #0x0                   	// #0
    50bc:	mov	w27, #0x1                   	// #1
    50c0:	b	50fc <grub_mod_fini+0x4dd4>
    50c4:	tbz	w28, #7, 50f0 <grub_mod_fini+0x4dc8>
    50c8:	and	w0, w1, #0xe0
    50cc:	cmp	w0, #0xc0
    50d0:	b.eq	5200 <grub_mod_fini+0x4ed8>  // b.none
    50d4:	and	w0, w1, #0xf0
    50d8:	cmp	w0, #0xe0
    50dc:	b.eq	514c <grub_mod_fini+0x4e24>  // b.none
    50e0:	and	w1, w1, #0xf8
    50e4:	cmp	w1, #0xf0
    50e8:	b.eq	514c <grub_mod_fini+0x4e24>  // b.none
    50ec:	nop
    50f0:	add	w28, w28, #0x1
    50f4:	cmp	w28, #0x100
    50f8:	b.eq	4f80 <grub_mod_fini+0x4c58>  // b.none
    50fc:	mov	w1, #0x0                   	// #0
    5100:	add	x0, sp, #0x90
    5104:	mov	x2, #0x8                   	// #8
    5108:	bl	0 <grub_memset>
    510c:	ldr	w0, [sp, #148]
    5110:	and	w1, w28, #0xff
    5114:	cbz	w0, 50c4 <grub_mod_fini+0x4d9c>
    5118:	and	w2, w1, #0xc0
    511c:	cmp	w2, #0x80
    5120:	b.ne	50f0 <grub_mod_fini+0x4dc8>  // b.any
    5124:	ldr	w2, [sp, #144]
    5128:	sub	w0, w0, #0x1
    512c:	cmp	w0, #0x1
    5130:	bfi	w1, w2, #6, #26
    5134:	stp	w1, w0, [sp, #144]
    5138:	b.eq	5218 <grub_mod_fini+0x4ef0>  // b.none
    513c:	cmp	w0, #0x2
    5140:	ccmp	w1, #0xf, #0x2, eq  // eq = none
    5144:	b.ls	50f0 <grub_mod_fini+0x4dc8>  // b.plast
    5148:	cbz	w0, 50f0 <grub_mod_fini+0x4dc8>
    514c:	strb	w24, [x25, w28, uxtw]
    5150:	b	50f0 <grub_mod_fini+0x4dc8>
    5154:	ldr	x0, [x1]
    5158:	mov	x12, #0x0                   	// #0
    515c:	mov	x4, x25
    5160:	mov	w11, #0x0                   	// #0
    5164:	ldr	x5, [x0, x12]
    5168:	ldr	w0, [sp, #108]
    516c:	cbnz	w0, 51bc <grub_mod_fini+0x4e94>
    5170:	mov	x0, #0x0                   	// #0
    5174:	nop
    5178:	lsr	x1, x5, x0
    517c:	tbz	w1, #0, 5184 <grub_mod_fini+0x4e5c>
    5180:	strb	w24, [x4, x0]
    5184:	add	x0, x0, #0x1
    5188:	cmp	x0, #0x40
    518c:	b.ne	5178 <grub_mod_fini+0x4e50>  // b.any
    5190:	add	w11, w11, #0x40
    5194:	add	x12, x12, #0x8
    5198:	cmp	w11, #0x100
    519c:	add	x4, x4, #0x40
    51a0:	b.eq	4f80 <grub_mod_fini+0x4c58>  // b.none
    51a4:	ldr	x0, [x23]
    51a8:	add	x1, x0, x10
    51ac:	ldr	x0, [x1]
    51b0:	ldr	x5, [x0, x12]
    51b4:	ldr	w0, [sp, #108]
    51b8:	cbz	w0, 5170 <grub_mod_fini+0x4e48>
    51bc:	sub	w9, w11, #0x41
    51c0:	add	w8, w11, #0x20
    51c4:	mov	x0, #0x0                   	// #0
    51c8:	add	w7, w9, w0
    51cc:	add	x3, x4, x0
    51d0:	add	w1, w8, w0
    51d4:	lsr	x2, x5, x0
    51d8:	tbz	w2, #0, 51f0 <grub_mod_fini+0x4ec8>
    51dc:	add	x1, x25, x1
    51e0:	cmp	w7, #0x19
    51e4:	csel	x1, x3, x1, hi  // hi = pmore
    51e8:	strb	w24, [x4, x0]
    51ec:	strb	w24, [x1]
    51f0:	add	x0, x0, #0x1
    51f4:	cmp	x0, #0x40
    51f8:	b.ne	51c8 <grub_mod_fini+0x4ea0>  // b.any
    51fc:	b	5190 <grub_mod_fini+0x4e68>
    5200:	and	w0, w1, #0x1f
    5204:	stp	w0, w27, [sp, #144]
    5208:	tst	w1, #0x1e
    520c:	b.eq	50f0 <grub_mod_fini+0x4dc8>  // b.none
    5210:	strb	w24, [x25, w28, uxtw]
    5214:	b	50f0 <grub_mod_fini+0x4dc8>
    5218:	cmp	w1, #0x1f
    521c:	b.ls	50f0 <grub_mod_fini+0x4dc8>  // b.plast
    5220:	strb	w24, [x25, w28, uxtw]
    5224:	b	50f0 <grub_mod_fini+0x4dc8>
    5228:	ldr	x3, [x23]
    522c:	add	w2, w2, #0x1
    5230:	add	x27, sp, #0x88
    5234:	sxtw	x0, w2
    5238:	add	x28, x27, #0x1
    523c:	ldrb	w1, [x3, x10]
    5240:	strb	w1, [sp, #136]
    5244:	ldr	x1, [x23, #16]
    5248:	cmp	x1, w2, sxtw
    524c:	b.ls	545c <grub_mod_fini+0x5134>  // b.plast
    5250:	mov	w5, #0xff                  	// #255
    5254:	mov	w4, #0x1                   	// #1
    5258:	movk	w5, #0x20, lsl #16
    525c:	movk	w4, #0x20, lsl #16
    5260:	b	527c <grub_mod_fini+0x4f54>
    5264:	ldrb	w1, [x3, x2]
    5268:	strb	w1, [x28], #1
    526c:	ldr	x1, [x23, #16]
    5270:	cmp	x1, x0
    5274:	b.ls	5298 <grub_mod_fini+0x4f70>  // b.plast
    5278:	ldr	x3, [x23]
    527c:	lsl	x2, x0, #4
    5280:	add	x1, x3, x2
    5284:	add	x0, x0, #0x1
    5288:	ldr	w1, [x1, #8]
    528c:	and	w1, w1, w5
    5290:	cmp	w1, w4
    5294:	b.eq	5264 <grub_mod_fini+0x4f3c>  // b.none
    5298:	sub	x4, x28, x27
    529c:	mov	w1, #0x0                   	// #0
    52a0:	add	x0, sp, #0x90
    52a4:	mov	x2, #0x8                   	// #8
    52a8:	str	x4, [sp, #112]
    52ac:	bl	0 <grub_memset>
    52b0:	ldp	w1, w0, [sp, #144]
    52b4:	mov	x3, x27
    52b8:	ldr	x4, [sp, #112]
    52bc:	mov	w5, #0x0                   	// #0
    52c0:	ldrb	w2, [x3]
    52c4:	cbz	w0, 5320 <grub_mod_fini+0x4ff8>
    52c8:	and	w7, w2, #0xc0
    52cc:	cmp	w7, #0x80
    52d0:	b.ne	5358 <grub_mod_fini+0x5030>  // b.any
    52d4:	sub	w0, w0, #0x1
    52d8:	bfi	w2, w1, #6, #26
    52dc:	cmp	w0, #0x1
    52e0:	b.eq	53ac <grub_mod_fini+0x5084>  // b.none
    52e4:	cmp	w0, #0x2
    52e8:	ccmp	w2, #0xf, #0x2, eq  // eq = none
    52ec:	b.ls	53f4 <grub_mod_fini+0x50cc>  // b.plast
    52f0:	cbnz	w0, 53b4 <grub_mod_fini+0x508c>
    52f4:	stp	w2, wzr, [sp, #144]
    52f8:	cbz	w2, 53a4 <grub_mod_fini+0x507c>
    52fc:	sub	x0, x3, x27
    5300:	add	x0, x0, #0x1
    5304:	cmp	x0, x4
    5308:	b.ne	4f80 <grub_mod_fini+0x4c58>  // b.any
    530c:	sub	w0, w2, #0x41
    5310:	cmp	w0, #0x19
    5314:	b.hi	5374 <grub_mod_fini+0x504c>  // b.pmore
    5318:	add	w2, w2, #0x20
    531c:	b	5374 <grub_mod_fini+0x504c>
    5320:	tbz	w2, #7, 5394 <grub_mod_fini+0x506c>
    5324:	and	w0, w2, #0xe0
    5328:	cmp	w0, #0xc0
    532c:	b.eq	5444 <grub_mod_fini+0x511c>  // b.none
    5330:	and	w0, w2, #0xf0
    5334:	cmp	w0, #0xe0
    5338:	b.eq	5400 <grub_mod_fini+0x50d8>  // b.none
    533c:	and	w0, w2, #0xf8
    5340:	cmp	w0, #0xf0
    5344:	b.eq	5468 <grub_mod_fini+0x5140>  // b.none
    5348:	cbz	w5, 5350 <grub_mod_fini+0x5028>
    534c:	stp	w1, wzr, [sp, #144]
    5350:	mov	x2, #0xffffffffffffffff    	// #-1
    5354:	b	5368 <grub_mod_fini+0x5040>
    5358:	cbz	w5, 5360 <grub_mod_fini+0x5038>
    535c:	str	w1, [sp, #144]
    5360:	mov	x2, #0xffffffffffffffff    	// #-1
    5364:	str	wzr, [sp, #148]
    5368:	cmp	x2, x4
    536c:	b.ne	4f80 <grub_mod_fini+0x4c58>  // b.any
    5370:	mov	w2, #0x0                   	// #0
    5374:	add	x1, x27, #0x4
    5378:	mov	x0, x27
    537c:	bl	0 <grub_encode_utf8_character>
    5380:	cmn	x0, #0x1
    5384:	b.eq	4f80 <grub_mod_fini+0x4c58>  // b.none
    5388:	ldrb	w0, [sp, #136]
    538c:	strb	w24, [x25, x0]
    5390:	b	4f80 <grub_mod_fini+0x4c58>
    5394:	cbz	w5, 539c <grub_mod_fini+0x5074>
    5398:	str	wzr, [sp, #148]
    539c:	str	w2, [sp, #144]
    53a0:	cbnz	w2, 52fc <grub_mod_fini+0x4fd4>
    53a4:	mov	x2, #0x0                   	// #0
    53a8:	b	5368 <grub_mod_fini+0x5040>
    53ac:	cmp	w2, #0x1f
    53b0:	b.ls	53f4 <grub_mod_fini+0x50cc>  // b.plast
    53b4:	mov	w1, w2
    53b8:	add	x3, x3, #0x1
    53bc:	mov	w5, #0x1                   	// #1
    53c0:	cmp	x3, x28
    53c4:	b.cc	52c0 <grub_mod_fini+0x4f98>  // b.lo, b.ul, b.last
    53c8:	mov	x2, #0xfffffffffffffffe    	// #-2
    53cc:	stp	w1, w0, [sp, #144]
    53d0:	b	5368 <grub_mod_fini+0x5040>
    53d4:	mov	x0, x25
    53d8:	mov	x2, #0x100                 	// #256
    53dc:	mov	w1, #0x1                   	// #1
    53e0:	bl	0 <grub_memset>
    53e4:	cmp	w27, #0x2
    53e8:	b.eq	541c <grub_mod_fini+0x50f4>  // b.none
    53ec:	ldp	x27, x28, [sp, #80]
    53f0:	b	4f98 <grub_mod_fini+0x4c70>
    53f4:	mov	x2, #0xffffffffffffffff    	// #-1
    53f8:	str	xzr, [sp, #144]
    53fc:	b	5368 <grub_mod_fini+0x5040>
    5400:	and	w1, w2, #0xf
    5404:	mov	w0, #0x2                   	// #2
    5408:	b	53b8 <grub_mod_fini+0x5090>
    540c:	mov	x0, x25
    5410:	mov	x2, #0x100                 	// #256
    5414:	mov	w1, #0x1                   	// #1
    5418:	bl	0 <grub_memset>
    541c:	ldrb	w0, [x20, #56]
    5420:	ldp	x21, x22, [sp, #32]
    5424:	orr	w0, w0, #0x1
    5428:	strb	w0, [x20, #56]
    542c:	ldp	x19, x20, [sp, #16]
    5430:	ldp	x23, x24, [sp, #48]
    5434:	ldp	x25, x26, [sp, #64]
    5438:	ldp	x27, x28, [sp, #80]
    543c:	ldp	x29, x30, [sp], #400
    5440:	ret
    5444:	tst	w2, #0x1e
    5448:	and	w2, w2, #0x1f
    544c:	b.eq	53f4 <grub_mod_fini+0x50cc>  // b.none
    5450:	mov	w1, w2
    5454:	mov	w0, #0x1                   	// #1
    5458:	b	53b8 <grub_mod_fini+0x5090>
    545c:	mov	x4, #0x1                   	// #1
    5460:	add	x28, x27, x4
    5464:	b	529c <grub_mod_fini+0x4f74>
    5468:	and	w1, w2, #0x7
    546c:	mov	w0, #0x3                   	// #3
    5470:	b	53b8 <grub_mod_fini+0x5090>
    5474:	nop
    5478:	stp	x29, x30, [sp, #-128]!
    547c:	mov	x29, sp
    5480:	ldr	w7, [x2, #4]
    5484:	stp	x19, x20, [sp, #16]
    5488:	str	x0, [sp, #112]
    548c:	cbz	w7, 5988 <grub_mod_fini+0x5660>
    5490:	stp	x21, x22, [sp, #32]
    5494:	cmp	w7, #0x0
    5498:	mov	w22, w3
    549c:	stp	x23, x24, [sp, #48]
    54a0:	mov	x24, x1
    54a4:	stp	x27, x28, [sp, #80]
    54a8:	mov	x27, x2
    54ac:	add	w28, w3, w7
    54b0:	b.le	562c <grub_mod_fini+0x5304>
    54b4:	ldr	x12, [x2, #8]
    54b8:	sub	w0, w7, #0x1
    54bc:	cmp	w0, #0x7
    54c0:	neg	x5, x12, lsr #2
    54c4:	and	w5, w5, #0x3
    54c8:	b.ls	59f4 <grub_mod_fini+0x56cc>  // b.plast
    54cc:	mov	w11, #0x0                   	// #0
    54d0:	cbz	w5, 5508 <grub_mod_fini+0x51e0>
    54d4:	ldr	w0, [x12]
    54d8:	cmp	w5, #0x1
    54dc:	mov	w11, #0x1                   	// #1
    54e0:	add	w28, w28, w0
    54e4:	b.eq	5508 <grub_mod_fini+0x51e0>  // b.none
    54e8:	ldr	w0, [x12, #4]
    54ec:	cmp	w5, #0x3
    54f0:	mov	w11, #0x2                   	// #2
    54f4:	add	w28, w28, w0
    54f8:	b.ne	5508 <grub_mod_fini+0x51e0>  // b.any
    54fc:	ldr	w0, [x12, #8]
    5500:	mov	w11, w5
    5504:	add	w28, w28, w0
    5508:	sub	w13, w7, w5
    550c:	ubfiz	x5, x5, #2, #2
    5510:	add	x5, x12, x5
    5514:	mov	x4, #0x0                   	// #0
    5518:	lsr	w14, w13, #2
    551c:	mov	x2, #0x0                   	// #0
    5520:	add	x14, x5, w14, uxtw #4
    5524:	nop
    5528:	ldp	x0, x1, [x5]
    552c:	lsr	x10, x4, #32
    5530:	lsr	x9, x2, #32
    5534:	add	x5, x5, #0x10
    5538:	cmp	x5, x14
    553c:	add	w8, w0, w4
    5540:	add	w3, w1, w2
    5544:	lsr	x0, x0, #32
    5548:	lsr	x1, x1, #32
    554c:	mov	x4, #0x0                   	// #0
    5550:	mov	x2, #0x0                   	// #0
    5554:	add	w0, w0, w10
    5558:	bfxil	x4, x8, #0, #32
    555c:	add	w1, w1, w9
    5560:	bfxil	x2, x3, #0, #32
    5564:	bfi	x4, x0, #32, #32
    5568:	bfi	x2, x1, #32, #32
    556c:	b.ne	5528 <grub_mod_fini+0x5200>  // b.any
    5570:	add	w1, w3, w1
    5574:	add	w0, w0, w8
    5578:	add	w0, w0, w1
    557c:	and	w1, w13, #0xfffffffc
    5580:	add	w28, w28, w0
    5584:	cmp	w1, w13
    5588:	add	w0, w1, w11
    558c:	b.eq	562c <grub_mod_fini+0x5304>  // b.none
    5590:	ldr	w1, [x12, w0, sxtw #2]
    5594:	add	w2, w0, #0x1
    5598:	cmp	w7, w2
    559c:	sbfiz	x2, x0, #2, #32
    55a0:	add	w28, w28, w1
    55a4:	b.le	562c <grub_mod_fini+0x5304>
    55a8:	add	x12, x12, x2
    55ac:	add	w1, w0, #0x2
    55b0:	cmp	w7, w1
    55b4:	ldr	w1, [x12, #4]
    55b8:	add	w28, w28, w1
    55bc:	b.le	562c <grub_mod_fini+0x5304>
    55c0:	ldr	w1, [x12, #8]
    55c4:	add	w2, w0, #0x3
    55c8:	cmp	w7, w2
    55cc:	add	w28, w28, w1
    55d0:	b.le	562c <grub_mod_fini+0x5304>
    55d4:	ldr	w1, [x12, #12]
    55d8:	add	w2, w0, #0x4
    55dc:	cmp	w7, w2
    55e0:	add	w28, w28, w1
    55e4:	b.le	562c <grub_mod_fini+0x5304>
    55e8:	ldr	w1, [x12, #16]
    55ec:	add	w2, w0, #0x5
    55f0:	cmp	w7, w2
    55f4:	add	w28, w28, w1
    55f8:	b.le	562c <grub_mod_fini+0x5304>
    55fc:	ldr	w1, [x12, #20]
    5600:	add	w2, w0, #0x6
    5604:	cmp	w7, w2
    5608:	add	w28, w28, w1
    560c:	b.le	562c <grub_mod_fini+0x5304>
    5610:	ldr	w1, [x12, #24]
    5614:	add	w0, w0, #0x7
    5618:	cmp	w7, w0
    561c:	add	w28, w28, w1
    5620:	b.le	562c <grub_mod_fini+0x5304>
    5624:	ldr	w0, [x12, #28]
    5628:	add	w28, w28, w0
    562c:	ldr	w0, [x24, #132]
    5630:	ldr	x1, [x24, #64]
    5634:	and	w0, w28, w0
    5638:	lsl	x0, x0, #4
    563c:	add	x2, x1, x0
    5640:	ldr	w3, [x1, x0]
    5644:	cmp	w3, #0x0
    5648:	b.le	56f0 <grub_mod_fini+0x53c8>
    564c:	sxtw	x1, w7
    5650:	mov	x0, #0x0                   	// #0
    5654:	sub	x10, x1, #0x1
    5658:	ldr	x4, [x2, #8]
    565c:	b	566c <grub_mod_fini+0x5344>
    5660:	add	x0, x0, #0x1
    5664:	cmp	w3, w0
    5668:	b.le	56f0 <grub_mod_fini+0x53c8>
    566c:	ldr	x19, [x4, x0, lsl #3]
    5670:	ldr	w1, [x19]
    5674:	cmp	w1, w28
    5678:	b.ne	5660 <grub_mod_fini+0x5338>  // b.any
    567c:	ldrb	w1, [x19, #80]
    5680:	and	w1, w1, #0xf
    5684:	cmp	w1, w22
    5688:	b.ne	5660 <grub_mod_fini+0x5338>  // b.any
    568c:	ldr	x9, [x19, #56]
    5690:	cbz	x9, 5660 <grub_mod_fini+0x5338>
    5694:	ldr	w2, [x9, #4]
    5698:	lsl	x1, x10, #2
    569c:	cmp	w7, w2
    56a0:	b.ne	5660 <grub_mod_fini+0x5338>  // b.any
    56a4:	subs	w2, w2, #0x1
    56a8:	b.mi	56d4 <grub_mod_fini+0x53ac>  // b.first
    56ac:	nop
    56b0:	ldr	x8, [x9, #8]
    56b4:	ldr	x5, [x27, #8]
    56b8:	ldr	w8, [x8, x1]
    56bc:	ldr	w5, [x5, x1]
    56c0:	sub	x1, x1, #0x4
    56c4:	cmp	w8, w5
    56c8:	b.ne	5660 <grub_mod_fini+0x5338>  // b.any
    56cc:	subs	w2, w2, #0x1
    56d0:	b.pl	56b0 <grub_mod_fini+0x5388>  // b.nfrst
    56d4:	ldp	x21, x22, [sp, #32]
    56d8:	ldp	x23, x24, [sp, #48]
    56dc:	ldp	x27, x28, [sp, #80]
    56e0:	mov	x0, x19
    56e4:	ldp	x19, x20, [sp, #16]
    56e8:	ldp	x29, x30, [sp], #128
    56ec:	ret
    56f0:	mov	x0, #0x58                  	// #88
    56f4:	bl	0 <grub_zalloc>
    56f8:	mov	x19, x0
    56fc:	cbz	x0, 58a8 <grub_mod_fini+0x5580>
    5700:	add	x23, x0, #0x8
    5704:	ldr	w0, [x27, #4]
    5708:	str	w0, [x19, #12]
    570c:	cmp	w0, #0x0
    5710:	b.le	5958 <grub_mod_fini+0x5630>
    5714:	str	w0, [x19, #8]
    5718:	sbfiz	x0, x0, #2, #32
    571c:	bl	0 <grub_malloc>
    5720:	str	x0, [x19, #16]
    5724:	cbz	x0, 59fc <grub_mod_fini+0x56d4>
    5728:	ldr	x1, [x27, #8]
    572c:	ldrsw	x2, [x27, #4]
    5730:	lsl	x2, x2, #2
    5734:	bl	0 <grub_memmove>
    5738:	ldrb	w0, [x19, #80]
    573c:	bfxil	w0, w22, #0, #4
    5740:	strb	w0, [x19, #80]
    5744:	ldr	w5, [x27, #4]
    5748:	str	x23, [x19, #56]
    574c:	cmp	w5, #0x0
    5750:	b.le	5848 <grub_mod_fini+0x5520>
    5754:	and	w0, w22, #0x2
    5758:	stp	x25, x26, [sp, #64]
    575c:	and	w25, w22, #0x1
    5760:	and	w22, w22, #0x4
    5764:	mov	x26, #0x0                   	// #0
    5768:	mov	w2, #0x0                   	// #0
    576c:	str	w0, [sp, #108]
    5770:	ldr	x1, [x27, #8]
    5774:	mov	w21, w26
    5778:	ldr	x0, [x24]
    577c:	ldrsw	x3, [x1, x26, lsl #2]
    5780:	add	x3, x0, x3, lsl #4
    5784:	ldr	w20, [x3, #8]
    5788:	ldrb	w4, [x3, #8]
    578c:	ubfx	x20, x20, #8, #10
    5790:	cmp	w20, #0x0
    5794:	ccmp	w4, #0x1, #0x0, eq  // eq = none
    5798:	b.eq	5838 <grub_mod_fini+0x5510>  // b.none
    579c:	ldrb	w5, [x3, #10]
    57a0:	cmp	w4, #0x2
    57a4:	ldrb	w0, [x19, #80]
    57a8:	ubfx	x5, x5, #4, #1
    57ac:	mov	w3, w0
    57b0:	ubfx	x0, x0, #5, #1
    57b4:	orr	w0, w0, w5
    57b8:	bfi	w3, w0, #5, #1
    57bc:	strb	w3, [x19, #80]
    57c0:	b.eq	596c <grub_mod_fini+0x5644>  // b.none
    57c4:	cmp	w4, #0x4
    57c8:	b.eq	58c8 <grub_mod_fini+0x55a0>  // b.none
    57cc:	cbz	w20, 5834 <grub_mod_fini+0x550c>
    57d0:	ldr	x0, [x19, #56]
    57d4:	cmp	x23, x0
    57d8:	b.eq	58d4 <grub_mod_fini+0x55ac>  // b.none
    57dc:	tbz	w20, #0, 5938 <grub_mod_fini+0x5610>
    57e0:	cbz	w25, 57e8 <grub_mod_fini+0x54c0>
    57e4:	tbz	w20, #1, 5940 <grub_mod_fini+0x5618>
    57e8:	subs	w21, w21, w2
    57ec:	b.mi	5830 <grub_mod_fini+0x5508>  // b.first
    57f0:	ldr	w0, [x19, #12]
    57f4:	cmp	w21, w0
    57f8:	b.ge	5830 <grub_mod_fini+0x5508>  // b.tcont
    57fc:	sub	w0, w0, #0x1
    5800:	str	w0, [x19, #12]
    5804:	cmp	w21, w0
    5808:	b.ge	5830 <grub_mod_fini+0x5508>  // b.tcont
    580c:	ldr	x1, [x19, #16]
    5810:	sxtw	x3, w21
    5814:	add	x4, x1, #0x4
    5818:	ldr	w0, [x4, x3, lsl #2]
    581c:	str	w0, [x1, x3, lsl #2]
    5820:	add	x3, x3, #0x1
    5824:	ldr	w0, [x19, #12]
    5828:	cmp	w0, w3
    582c:	b.gt	5818 <grub_mod_fini+0x54f0>
    5830:	add	w2, w2, #0x1
    5834:	ldr	w5, [x27, #4]
    5838:	add	x26, x26, #0x1
    583c:	cmp	w5, w26
    5840:	b.gt	5770 <grub_mod_fini+0x5448>
    5844:	ldp	x25, x26, [sp, #64]
    5848:	mov	w2, w28
    584c:	mov	x0, x24
    5850:	mov	x1, x19
    5854:	bl	1830 <grub_mod_fini+0x1508>
    5858:	cbz	w0, 56d4 <grub_mod_fini+0x53ac>
    585c:	ldr	x0, [x19, #32]
    5860:	bl	0 <grub_free>
    5864:	ldr	x0, [x19, #48]
    5868:	bl	0 <grub_free>
    586c:	ldr	x0, [x19, #56]
    5870:	cmp	x23, x0
    5874:	b.eq	5888 <grub_mod_fini+0x5560>  // b.none
    5878:	ldr	x0, [x0, #8]
    587c:	bl	0 <grub_free>
    5880:	ldr	x0, [x19, #56]
    5884:	bl	0 <grub_free>
    5888:	ldr	x0, [x19, #16]
    588c:	bl	0 <grub_free>
    5890:	ldr	x0, [x19, #72]
    5894:	bl	0 <grub_free>
    5898:	ldr	x0, [x19, #64]
    589c:	bl	0 <grub_free>
    58a0:	mov	x0, x19
    58a4:	bl	0 <grub_free>
    58a8:	ldr	x1, [sp, #112]
    58ac:	mov	w0, #0xc                   	// #12
    58b0:	mov	x19, #0x0                   	// #0
    58b4:	ldp	x21, x22, [sp, #32]
    58b8:	ldp	x23, x24, [sp, #48]
    58bc:	ldp	x27, x28, [sp, #80]
    58c0:	str	w0, [x1]
    58c4:	b	56e0 <grub_mod_fini+0x53b8>
    58c8:	orr	w3, w3, #0x40
    58cc:	strb	w3, [x19, #80]
    58d0:	b	57cc <grub_mod_fini+0x54a4>
    58d4:	mov	x0, #0x10                  	// #16
    58d8:	bl	0 <grub_malloc>
    58dc:	str	x0, [x19, #56]
    58e0:	mov	x1, x0
    58e4:	cbz	x0, 59a0 <grub_mod_fini+0x5678>
    58e8:	ldr	w2, [x27, #4]
    58ec:	str	w2, [x0, #4]
    58f0:	cmp	w2, #0x0
    58f4:	b.le	5978 <grub_mod_fini+0x5650>
    58f8:	str	w2, [x1]
    58fc:	sbfiz	x0, x2, #2, #32
    5900:	str	x1, [sp, #120]
    5904:	bl	0 <grub_malloc>
    5908:	ldr	x1, [sp, #120]
    590c:	str	x0, [x1, #8]
    5910:	cbz	x0, 5a0c <grub_mod_fini+0x56e4>
    5914:	ldr	x1, [x27, #8]
    5918:	ldrsw	x2, [x27, #4]
    591c:	lsl	x2, x2, #2
    5920:	bl	0 <grub_memmove>
    5924:	ldrb	w0, [x19, #80]
    5928:	mov	w2, #0x0                   	// #0
    592c:	orr	w0, w0, #0xffffff80
    5930:	strb	w0, [x19, #80]
    5934:	tbnz	w20, #0, 57e0 <grub_mod_fini+0x54b8>
    5938:	tbz	w20, #1, 5940 <grub_mod_fini+0x5618>
    593c:	cbnz	w25, 57e8 <grub_mod_fini+0x54c0>
    5940:	tbz	w20, #4, 594c <grub_mod_fini+0x5624>
    5944:	ldr	w0, [sp, #108]
    5948:	cbz	w0, 57e8 <grub_mod_fini+0x54c0>
    594c:	tbz	w20, #6, 5834 <grub_mod_fini+0x550c>
    5950:	cbz	w22, 57e8 <grub_mod_fini+0x54c0>
    5954:	b	5834 <grub_mod_fini+0x550c>
    5958:	mov	x0, x23
    595c:	mov	x2, #0x10                  	// #16
    5960:	mov	w1, #0x0                   	// #0
    5964:	bl	0 <grub_memset>
    5968:	b	5738 <grub_mod_fini+0x5410>
    596c:	orr	w3, w3, #0x10
    5970:	strb	w3, [x19, #80]
    5974:	b	57cc <grub_mod_fini+0x54a4>
    5978:	mov	x2, #0x10                  	// #16
    597c:	mov	w1, #0x0                   	// #0
    5980:	bl	0 <grub_memset>
    5984:	b	5924 <grub_mod_fini+0x55fc>
    5988:	str	wzr, [x0]
    598c:	mov	x19, #0x0                   	// #0
    5990:	mov	x0, x19
    5994:	ldp	x19, x20, [sp, #16]
    5998:	ldp	x29, x30, [sp], #128
    599c:	ret
    59a0:	ldr	x0, [x19, #32]
    59a4:	bl	0 <grub_free>
    59a8:	ldr	x0, [x19, #48]
    59ac:	bl	0 <grub_free>
    59b0:	ldr	x0, [x19, #56]
    59b4:	cmp	x23, x0
    59b8:	b.eq	59cc <grub_mod_fini+0x56a4>  // b.none
    59bc:	ldr	x0, [x0, #8]
    59c0:	bl	0 <grub_free>
    59c4:	ldr	x0, [x19, #56]
    59c8:	bl	0 <grub_free>
    59cc:	ldr	x0, [x19, #16]
    59d0:	bl	0 <grub_free>
    59d4:	ldr	x0, [x19, #72]
    59d8:	bl	0 <grub_free>
    59dc:	ldr	x0, [x19, #64]
    59e0:	bl	0 <grub_free>
    59e4:	mov	x0, x19
    59e8:	bl	0 <grub_free>
    59ec:	ldp	x25, x26, [sp, #64]
    59f0:	b	58a8 <grub_mod_fini+0x5580>
    59f4:	mov	w0, #0x0                   	// #0
    59f8:	b	5590 <grub_mod_fini+0x5268>
    59fc:	str	xzr, [x19, #8]
    5a00:	mov	x0, x19
    5a04:	bl	0 <grub_free>
    5a08:	b	58a8 <grub_mod_fini+0x5580>
    5a0c:	ldp	x25, x26, [sp, #64]
    5a10:	str	xzr, [x1]
    5a14:	b	58a8 <grub_mod_fini+0x5580>
    5a18:	stp	x29, x30, [sp, #-96]!
    5a1c:	mov	x29, sp
    5a20:	stp	x21, x22, [sp, #32]
    5a24:	mov	x21, x2
    5a28:	mov	x2, #0x10                  	// #16
    5a2c:	ldr	x22, [x0, #56]
    5a30:	stp	x23, x24, [sp, #48]
    5a34:	mov	w24, w1
    5a38:	mov	x23, x0
    5a3c:	mov	w1, #0x0                   	// #0
    5a40:	add	x22, x22, w24, sxtw #4
    5a44:	add	x0, sp, #0x50
    5a48:	stp	x19, x20, [sp, #16]
    5a4c:	mov	x19, x3
    5a50:	str	x25, [sp, #64]
    5a54:	bl	0 <grub_memset>
    5a58:	ldr	w8, [x22, #4]
    5a5c:	cmp	w8, #0x0
    5a60:	b.le	5d70 <grub_mod_fini+0x5a48>
    5a64:	mov	x20, #0x0                   	// #0
    5a68:	ldr	x5, [x22, #8]
    5a6c:	ldr	w2, [x5, x20, lsl #2]
    5a70:	cmp	w24, w2
    5a74:	b.eq	5bc8 <grub_mod_fini+0x58a0>  // b.none
    5a78:	ldr	x0, [x23]
    5a7c:	sbfiz	x2, x2, #4, #32
    5a80:	add	x0, x0, x2
    5a84:	ldrb	w0, [x0, #8]
    5a88:	tbz	w0, #3, 5bc8 <grub_mod_fini+0x58a0>
    5a8c:	ldr	x0, [x23, #40]
    5a90:	mov	w7, #0xffffffff            	// #-1
    5a94:	add	x0, x0, x2
    5a98:	ldr	w3, [x0, #4]
    5a9c:	ldr	x1, [x0, #8]
    5aa0:	cmp	w3, #0x1
    5aa4:	b.le	5aac <grub_mod_fini+0x5784>
    5aa8:	ldr	w7, [x1, #4]
    5aac:	sub	w6, w8, #0x1
    5ab0:	ldr	w1, [x1]
    5ab4:	mov	w3, w6
    5ab8:	mov	w0, #0x0                   	// #0
    5abc:	b	5ad8 <grub_mod_fini+0x57b0>
    5ac0:	lsr	w9, w4, #1
    5ac4:	lsr	w4, w4, #1
    5ac8:	ldr	w9, [x5, x9, lsl #2]
    5acc:	cmp	w1, w9
    5ad0:	b.gt	5cbc <grub_mod_fini+0x5994>
    5ad4:	mov	w3, w4
    5ad8:	add	w4, w3, w0
    5adc:	cmp	w3, w0
    5ae0:	b.hi	5ac0 <grub_mod_fini+0x5798>  // b.pmore
    5ae4:	ldr	w0, [x5, w0, uxtw #2]
    5ae8:	cmp	w1, w0
    5aec:	b.eq	5b3c <grub_mod_fini+0x5814>  // b.none
    5af0:	ldr	w3, [x21, #4]
    5af4:	cmp	w3, #0x0
    5af8:	b.le	5b3c <grub_mod_fini+0x5814>
    5afc:	sub	w3, w3, #0x1
    5b00:	mov	w0, #0x0                   	// #0
    5b04:	ldr	x10, [x21, #8]
    5b08:	b	5b24 <grub_mod_fini+0x57fc>
    5b0c:	lsr	w9, w4, #1
    5b10:	lsr	w4, w4, #1
    5b14:	ldr	w9, [x10, x9, lsl #2]
    5b18:	cmp	w1, w9
    5b1c:	b.gt	5d34 <grub_mod_fini+0x5a0c>
    5b20:	mov	w3, w4
    5b24:	add	w4, w3, w0
    5b28:	cmp	w3, w0
    5b2c:	b.hi	5b0c <grub_mod_fini+0x57e4>  // b.pmore
    5b30:	ldr	w0, [x10, w0, uxtw #2]
    5b34:	cmp	w1, w0
    5b38:	b.eq	5d10 <grub_mod_fini+0x59e8>  // b.none
    5b3c:	cmp	w7, #0x0
    5b40:	mov	w0, #0x0                   	// #0
    5b44:	b.gt	5b64 <grub_mod_fini+0x583c>
    5b48:	b	5bc8 <grub_mod_fini+0x58a0>
    5b4c:	lsr	w1, w4, #1
    5b50:	lsr	w4, w4, #1
    5b54:	ldr	w1, [x5, x1, lsl #2]
    5b58:	cmp	w1, w7
    5b5c:	b.lt	5d3c <grub_mod_fini+0x5a14>  // b.tstop
    5b60:	mov	w6, w4
    5b64:	add	w4, w6, w0
    5b68:	cmp	w6, w0
    5b6c:	b.hi	5b4c <grub_mod_fini+0x5824>  // b.pmore
    5b70:	ldr	w0, [x5, w0, uxtw #2]
    5b74:	cmp	w0, w7
    5b78:	b.eq	5bc8 <grub_mod_fini+0x58a0>  // b.none
    5b7c:	ldr	w3, [x21, #4]
    5b80:	cmp	w3, #0x0
    5b84:	b.le	5bc8 <grub_mod_fini+0x58a0>
    5b88:	sub	w3, w3, #0x1
    5b8c:	mov	w0, #0x0                   	// #0
    5b90:	ldr	x5, [x21, #8]
    5b94:	b	5bb0 <grub_mod_fini+0x5888>
    5b98:	lsr	w1, w4, #1
    5b9c:	lsr	w4, w4, #1
    5ba0:	ldr	w1, [x5, x1, lsl #2]
    5ba4:	cmp	w1, w7
    5ba8:	b.lt	5d44 <grub_mod_fini+0x5a1c>  // b.tstop
    5bac:	mov	w3, w4
    5bb0:	add	w4, w3, w0
    5bb4:	cmp	w3, w0
    5bb8:	b.hi	5b98 <grub_mod_fini+0x5870>  // b.pmore
    5bbc:	ldr	w0, [x5, w0, uxtw #2]
    5bc0:	cmp	w0, w7
    5bc4:	b.eq	5d10 <grub_mod_fini+0x59e8>  // b.none
    5bc8:	add	x20, x20, #0x1
    5bcc:	cmp	w8, w20
    5bd0:	b.gt	5a68 <grub_mod_fini+0x5740>
    5bd4:	cmp	w8, #0x0
    5bd8:	ldr	x0, [sp, #88]
    5bdc:	b.le	5c90 <grub_mod_fini+0x5968>
    5be0:	ldr	x11, [x22, #8]
    5be4:	mov	x7, #0x0                   	// #0
    5be8:	ldr	w3, [sp, #84]
    5bec:	ldr	w4, [x11, x7, lsl #2]
    5bf0:	cmp	w3, #0x0
    5bf4:	b.le	5c34 <grub_mod_fini+0x590c>
    5bf8:	sub	w3, w3, #0x1
    5bfc:	mov	w2, #0x0                   	// #0
    5c00:	b	5c1c <grub_mod_fini+0x58f4>
    5c04:	lsr	w5, w1, #1
    5c08:	lsr	w1, w1, #1
    5c0c:	ldr	w5, [x0, x5, lsl #2]
    5c10:	cmp	w4, w5
    5c14:	b.gt	5cb4 <grub_mod_fini+0x598c>
    5c18:	mov	w3, w1
    5c1c:	add	w1, w3, w2
    5c20:	cmp	w3, w2
    5c24:	b.hi	5c04 <grub_mod_fini+0x58dc>  // b.pmore
    5c28:	ldr	w1, [x0, w2, uxtw #2]
    5c2c:	cmp	w4, w1
    5c30:	b.eq	5c84 <grub_mod_fini+0x595c>  // b.none
    5c34:	ldr	w9, [x21, #4]
    5c38:	cmp	w9, #0x0
    5c3c:	b.le	5c84 <grub_mod_fini+0x595c>
    5c40:	sub	w10, w9, #0x1
    5c44:	mov	w1, #0x0                   	// #0
    5c48:	mov	w2, w10
    5c4c:	ldr	x5, [x21, #8]
    5c50:	b	5c6c <grub_mod_fini+0x5944>
    5c54:	lsr	w6, w3, #1
    5c58:	lsr	w3, w3, #1
    5c5c:	ldr	w6, [x5, x6, lsl #2]
    5c60:	cmp	w4, w6
    5c64:	b.gt	5d08 <grub_mod_fini+0x59e0>
    5c68:	mov	w2, w3
    5c6c:	add	w3, w2, w1
    5c70:	cmp	w2, w1
    5c74:	b.hi	5c54 <grub_mod_fini+0x592c>  // b.pmore
    5c78:	ldr	w2, [x5, w1, uxtw #2]
    5c7c:	cmp	w4, w2
    5c80:	b.eq	5cc4 <grub_mod_fini+0x599c>  // b.none
    5c84:	add	x7, x7, #0x1
    5c88:	cmp	w8, w7
    5c8c:	b.gt	5be8 <grub_mod_fini+0x58c0>
    5c90:	bl	0 <grub_free>
    5c94:	mov	w25, #0x0                   	// #0
    5c98:	mov	w0, w25
    5c9c:	ldp	x19, x20, [sp, #16]
    5ca0:	ldp	x21, x22, [sp, #32]
    5ca4:	ldp	x23, x24, [sp, #48]
    5ca8:	ldr	x25, [sp, #64]
    5cac:	ldp	x29, x30, [sp], #96
    5cb0:	ret
    5cb4:	add	w2, w1, #0x1
    5cb8:	b	5c1c <grub_mod_fini+0x58f4>
    5cbc:	add	w0, w4, #0x1
    5cc0:	b	5ad8 <grub_mod_fini+0x57b0>
    5cc4:	cmp	w1, #0x0
    5cc8:	ccmp	w1, w9, #0x0, ge  // ge = tcont
    5ccc:	b.ge	5c84 <grub_mod_fini+0x595c>  // b.tcont
    5cd0:	str	w10, [x21, #4]
    5cd4:	cmp	w1, w10
    5cd8:	add	x3, x5, #0x4
    5cdc:	sxtw	x1, w1
    5ce0:	b.ge	5d00 <grub_mod_fini+0x59d8>  // b.tcont
    5ce4:	nop
    5ce8:	ldr	w2, [x3, x1, lsl #2]
    5cec:	str	w2, [x5, x1, lsl #2]
    5cf0:	add	x1, x1, #0x1
    5cf4:	ldr	w2, [x21, #4]
    5cf8:	cmp	w2, w1
    5cfc:	b.gt	5ce8 <grub_mod_fini+0x59c0>
    5d00:	ldr	w8, [x22, #4]
    5d04:	b	5c84 <grub_mod_fini+0x595c>
    5d08:	add	w1, w3, #0x1
    5d0c:	b	5c6c <grub_mod_fini+0x5944>
    5d10:	ldr	x3, [x23, #56]
    5d14:	mov	x1, x19
    5d18:	add	x0, sp, #0x50
    5d1c:	add	x2, x3, x2
    5d20:	bl	22c8 <grub_mod_fini+0x1fa0>
    5d24:	mov	w25, w0
    5d28:	cbnz	w0, 5d4c <grub_mod_fini+0x5a24>
    5d2c:	ldr	w8, [x22, #4]
    5d30:	b	5bc8 <grub_mod_fini+0x58a0>
    5d34:	add	w0, w4, #0x1
    5d38:	b	5b24 <grub_mod_fini+0x57fc>
    5d3c:	add	w0, w4, #0x1
    5d40:	b	5b64 <grub_mod_fini+0x583c>
    5d44:	add	w0, w4, #0x1
    5d48:	b	5bb0 <grub_mod_fini+0x5888>
    5d4c:	ldr	x0, [sp, #88]
    5d50:	bl	0 <grub_free>
    5d54:	mov	w0, w25
    5d58:	ldp	x19, x20, [sp, #16]
    5d5c:	ldp	x21, x22, [sp, #32]
    5d60:	ldp	x23, x24, [sp, #48]
    5d64:	ldr	x25, [sp, #64]
    5d68:	ldp	x29, x30, [sp], #96
    5d6c:	ret
    5d70:	ldr	x0, [sp, #88]
    5d74:	b	5c90 <grub_mod_fini+0x5968>
    5d78:	stp	x29, x30, [sp, #-64]!
    5d7c:	mov	x29, sp
    5d80:	ldr	w6, [x2, #4]
    5d84:	stp	x19, x20, [sp, #16]
    5d88:	stp	x21, x22, [sp, #32]
    5d8c:	mov	x21, x0
    5d90:	cbz	w6, 6190 <grub_mod_fini+0x5e68>
    5d94:	stp	x23, x24, [sp, #48]
    5d98:	mov	x22, x2
    5d9c:	mov	x23, x1
    5da0:	cmp	w6, #0x0
    5da4:	mov	w20, w6
    5da8:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5dac:	ldr	x9, [x2, #8]
    5db0:	sub	w0, w6, #0x1
    5db4:	cmp	w0, #0x7
    5db8:	neg	x5, x9, lsr #2
    5dbc:	and	w5, w5, #0x3
    5dc0:	b.ls	61ac <grub_mod_fini+0x5e84>  // b.plast
    5dc4:	cbz	w5, 6184 <grub_mod_fini+0x5e5c>
    5dc8:	ldr	w20, [x9]
    5dcc:	cmp	w5, #0x1
    5dd0:	mov	w10, #0x1                   	// #1
    5dd4:	add	w13, w6, w20
    5dd8:	b.eq	5dfc <grub_mod_fini+0x5ad4>  // b.none
    5ddc:	ldr	w0, [x9, #4]
    5de0:	cmp	w5, #0x3
    5de4:	mov	w10, #0x2                   	// #2
    5de8:	add	w13, w13, w0
    5dec:	b.ne	5dfc <grub_mod_fini+0x5ad4>  // b.any
    5df0:	ldr	w0, [x9, #8]
    5df4:	mov	w10, w5
    5df8:	add	w13, w13, w0
    5dfc:	sub	w12, w6, w5
    5e00:	ubfiz	x5, x5, #2, #2
    5e04:	add	x5, x9, x5
    5e08:	mov	x0, #0x0                   	// #0
    5e0c:	lsr	w11, w12, #2
    5e10:	mov	x4, #0x0                   	// #0
    5e14:	add	x11, x5, w11, uxtw #4
    5e18:	ldp	x2, x3, [x5]
    5e1c:	lsr	x1, x0, #32
    5e20:	lsr	x8, x4, #32
    5e24:	add	x5, x5, #0x10
    5e28:	cmp	x5, x11
    5e2c:	add	w20, w2, w0
    5e30:	add	w7, w3, w4
    5e34:	lsr	x2, x2, #32
    5e38:	lsr	x3, x3, #32
    5e3c:	mov	x0, #0x0                   	// #0
    5e40:	mov	x4, #0x0                   	// #0
    5e44:	add	w2, w1, w2
    5e48:	bfxil	x0, x20, #0, #32
    5e4c:	add	w3, w3, w8
    5e50:	bfxil	x4, x7, #0, #32
    5e54:	bfi	x0, x2, #32, #32
    5e58:	bfi	x4, x3, #32, #32
    5e5c:	b.ne	5e18 <grub_mod_fini+0x5af0>  // b.any
    5e60:	add	w2, w2, w20
    5e64:	add	w20, w7, w3
    5e68:	and	w1, w12, #0xfffffffc
    5e6c:	add	w20, w2, w20
    5e70:	add	w20, w20, w13
    5e74:	add	w0, w1, w10
    5e78:	cmp	w1, w12
    5e7c:	b.eq	5f1c <grub_mod_fini+0x5bf4>  // b.none
    5e80:	ldr	w1, [x9, w0, sxtw #2]
    5e84:	add	w2, w0, #0x1
    5e88:	cmp	w6, w2
    5e8c:	sbfiz	x2, x0, #2, #32
    5e90:	add	w20, w20, w1
    5e94:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5e98:	add	x9, x9, x2
    5e9c:	add	w1, w0, #0x2
    5ea0:	cmp	w6, w1
    5ea4:	ldr	w1, [x9, #4]
    5ea8:	add	w20, w20, w1
    5eac:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5eb0:	ldr	w1, [x9, #8]
    5eb4:	add	w2, w0, #0x3
    5eb8:	cmp	w6, w2
    5ebc:	add	w20, w20, w1
    5ec0:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5ec4:	ldr	w1, [x9, #12]
    5ec8:	add	w2, w0, #0x4
    5ecc:	cmp	w6, w2
    5ed0:	add	w20, w20, w1
    5ed4:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5ed8:	ldr	w1, [x9, #16]
    5edc:	add	w2, w0, #0x5
    5ee0:	cmp	w6, w2
    5ee4:	add	w20, w20, w1
    5ee8:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5eec:	ldr	w1, [x9, #20]
    5ef0:	add	w2, w0, #0x6
    5ef4:	cmp	w6, w2
    5ef8:	add	w20, w20, w1
    5efc:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5f00:	ldr	w1, [x9, #24]
    5f04:	add	w0, w0, #0x7
    5f08:	cmp	w6, w0
    5f0c:	add	w20, w20, w1
    5f10:	b.le	5f1c <grub_mod_fini+0x5bf4>
    5f14:	ldr	w0, [x9, #28]
    5f18:	add	w20, w20, w0
    5f1c:	ldr	w0, [x23, #132]
    5f20:	ldr	x1, [x23, #64]
    5f24:	and	w0, w20, w0
    5f28:	lsl	x0, x0, #4
    5f2c:	add	x2, x1, x0
    5f30:	ldr	w1, [x1, x0]
    5f34:	cmp	w1, #0x0
    5f38:	b.le	5fc4 <grub_mod_fini+0x5c9c>
    5f3c:	sxtw	x8, w6
    5f40:	mov	x5, #0x0                   	// #0
    5f44:	sub	x8, x8, #0x1
    5f48:	ldr	x7, [x2, #8]
    5f4c:	b	5f5c <grub_mod_fini+0x5c34>
    5f50:	add	x5, x5, #0x1
    5f54:	cmp	w1, w5
    5f58:	b.le	5fc4 <grub_mod_fini+0x5c9c>
    5f5c:	ldr	x19, [x7, x5, lsl #3]
    5f60:	ldr	w0, [x19]
    5f64:	cmp	w0, w20
    5f68:	b.ne	5f50 <grub_mod_fini+0x5c28>  // b.any
    5f6c:	ldr	w4, [x19, #12]
    5f70:	lsl	x3, x8, #2
    5f74:	cmp	w6, w4
    5f78:	b.ne	5f50 <grub_mod_fini+0x5c28>  // b.any
    5f7c:	subs	w4, w4, #0x1
    5f80:	b.mi	5fac <grub_mod_fini+0x5c84>  // b.first
    5f84:	nop
    5f88:	ldr	x0, [x22, #8]
    5f8c:	ldr	x2, [x19, #16]
    5f90:	ldr	w0, [x0, x3]
    5f94:	ldr	w2, [x2, x3]
    5f98:	sub	x3, x3, #0x4
    5f9c:	cmp	w2, w0
    5fa0:	b.ne	5f50 <grub_mod_fini+0x5c28>  // b.any
    5fa4:	subs	w4, w4, #0x1
    5fa8:	b.pl	5f88 <grub_mod_fini+0x5c60>  // b.nfrst
    5fac:	ldp	x23, x24, [sp, #48]
    5fb0:	mov	x0, x19
    5fb4:	ldp	x19, x20, [sp, #16]
    5fb8:	ldp	x21, x22, [sp, #32]
    5fbc:	ldp	x29, x30, [sp], #64
    5fc0:	ret
    5fc4:	mov	x0, #0x58                  	// #88
    5fc8:	bl	0 <grub_zalloc>
    5fcc:	mov	x19, x0
    5fd0:	cbz	x0, 6130 <grub_mod_fini+0x5e08>
    5fd4:	add	x24, x0, #0x8
    5fd8:	ldr	w0, [x22, #4]
    5fdc:	str	w0, [x19, #12]
    5fe0:	cmp	w0, #0x0
    5fe4:	b.le	6144 <grub_mod_fini+0x5e1c>
    5fe8:	str	w0, [x19, #8]
    5fec:	sbfiz	x0, x0, #2, #32
    5ff0:	bl	0 <grub_malloc>
    5ff4:	str	x0, [x19, #16]
    5ff8:	cbz	x0, 61b4 <grub_mod_fini+0x5e8c>
    5ffc:	ldr	x1, [x22, #8]
    6000:	ldrsw	x2, [x22, #4]
    6004:	lsl	x2, x2, #2
    6008:	bl	0 <grub_memmove>
    600c:	ldr	w1, [x22, #4]
    6010:	str	x24, [x19, #56]
    6014:	cmp	w1, #0x0
    6018:	b.le	60d0 <grub_mod_fini+0x5da8>
    601c:	mov	x2, #0x0                   	// #0
    6020:	ldr	x6, [x23]
    6024:	b	6070 <grub_mod_fini+0x5d48>
    6028:	ldrb	w1, [x19, #80]
    602c:	cmp	w4, #0x2
    6030:	ldrb	w5, [x0, #10]
    6034:	mov	w3, w1
    6038:	ubfx	x1, x1, #5, #1
    603c:	ubfx	x5, x5, #4, #1
    6040:	orr	w1, w1, w5
    6044:	bfi	w3, w1, #5, #1
    6048:	strb	w3, [x19, #80]
    604c:	b.eq	6158 <grub_mod_fini+0x5e30>  // b.none
    6050:	cmp	w4, #0x4
    6054:	b.ne	6168 <grub_mod_fini+0x5e40>  // b.any
    6058:	orr	w3, w3, #0x40
    605c:	strb	w3, [x19, #80]
    6060:	ldr	w1, [x22, #4]
    6064:	add	x2, x2, #0x1
    6068:	cmp	w1, w2
    606c:	b.le	60d0 <grub_mod_fini+0x5da8>
    6070:	ldr	x0, [x22, #8]
    6074:	ldrsw	x0, [x0, x2, lsl #2]
    6078:	add	x0, x6, x0, lsl #4
    607c:	ldrb	w4, [x0, #8]
    6080:	cmp	w4, #0x1
    6084:	b.ne	6028 <grub_mod_fini+0x5d00>  // b.any
    6088:	ldr	w3, [x0, #8]
    608c:	tst	w3, #0x3ff00
    6090:	b.eq	6064 <grub_mod_fini+0x5d3c>  // b.none
    6094:	ldrb	w1, [x0, #10]
    6098:	ldrb	w0, [x19, #80]
    609c:	ubfx	x1, x1, #4, #1
    60a0:	mov	w3, w0
    60a4:	ubfx	x0, x0, #5, #1
    60a8:	orr	w0, w0, w1
    60ac:	bfi	w3, w0, #5, #1
    60b0:	strb	w3, [x19, #80]
    60b4:	ldrb	w0, [x19, #80]
    60b8:	orr	w0, w0, #0xffffff80
    60bc:	strb	w0, [x19, #80]
    60c0:	ldr	w1, [x22, #4]
    60c4:	add	x2, x2, #0x1
    60c8:	cmp	w1, w2
    60cc:	b.gt	6070 <grub_mod_fini+0x5d48>
    60d0:	mov	w2, w20
    60d4:	mov	x0, x23
    60d8:	mov	x1, x19
    60dc:	bl	1830 <grub_mod_fini+0x1508>
    60e0:	cbz	w0, 5fac <grub_mod_fini+0x5c84>
    60e4:	ldr	x0, [x19, #32]
    60e8:	bl	0 <grub_free>
    60ec:	ldr	x0, [x19, #48]
    60f0:	bl	0 <grub_free>
    60f4:	ldr	x0, [x19, #56]
    60f8:	cmp	x24, x0
    60fc:	b.eq	6110 <grub_mod_fini+0x5de8>  // b.none
    6100:	ldr	x0, [x0, #8]
    6104:	bl	0 <grub_free>
    6108:	ldr	x0, [x19, #56]
    610c:	bl	0 <grub_free>
    6110:	ldr	x0, [x19, #16]
    6114:	bl	0 <grub_free>
    6118:	ldr	x0, [x19, #72]
    611c:	bl	0 <grub_free>
    6120:	ldr	x0, [x19, #64]
    6124:	bl	0 <grub_free>
    6128:	mov	x0, x19
    612c:	bl	0 <grub_free>
    6130:	mov	w0, #0xc                   	// #12
    6134:	mov	x19, #0x0                   	// #0
    6138:	ldp	x23, x24, [sp, #48]
    613c:	str	w0, [x21]
    6140:	b	5fb0 <grub_mod_fini+0x5c88>
    6144:	mov	x0, x24
    6148:	mov	x2, #0x10                  	// #16
    614c:	mov	w1, #0x0                   	// #0
    6150:	bl	0 <grub_memset>
    6154:	b	600c <grub_mod_fini+0x5ce4>
    6158:	orr	w3, w3, #0x10
    615c:	strb	w3, [x19, #80]
    6160:	ldr	w1, [x22, #4]
    6164:	b	6064 <grub_mod_fini+0x5d3c>
    6168:	cmp	w4, #0xc
    616c:	b.eq	60b4 <grub_mod_fini+0x5d8c>  // b.none
    6170:	ldr	w0, [x0, #8]
    6174:	tst	w0, #0x3ff00
    6178:	b.ne	60b4 <grub_mod_fini+0x5d8c>  // b.any
    617c:	ldr	w1, [x22, #4]
    6180:	b	60c4 <grub_mod_fini+0x5d9c>
    6184:	mov	w13, w6
    6188:	mov	w10, #0x0                   	// #0
    618c:	b	5dfc <grub_mod_fini+0x5ad4>
    6190:	str	wzr, [x0]
    6194:	mov	x19, #0x0                   	// #0
    6198:	mov	x0, x19
    619c:	ldp	x19, x20, [sp, #16]
    61a0:	ldp	x21, x22, [sp, #32]
    61a4:	ldp	x29, x30, [sp], #64
    61a8:	ret
    61ac:	mov	w0, #0x0                   	// #0
    61b0:	b	5e80 <grub_mod_fini+0x5b58>
    61b4:	str	xzr, [x19, #8]
    61b8:	mov	x0, x19
    61bc:	bl	0 <grub_free>
    61c0:	b	6130 <grub_mod_fini+0x5e08>
    61c4:	nop
    61c8:	stp	x29, x30, [sp, #-144]!
    61cc:	mov	x29, sp
    61d0:	ldr	w5, [x0, #148]
    61d4:	stp	x19, x20, [sp, #16]
    61d8:	mov	x20, x1
    61dc:	mov	w19, #0x0                   	// #0
    61e0:	stp	x21, x22, [sp, #32]
    61e4:	mov	w22, w4
    61e8:	mov	w21, w3
    61ec:	mov	w4, #0x14                  	// #20
    61f0:	stp	x25, x26, [sp, #64]
    61f4:	mov	x26, x0
    61f8:	mov	w0, w5
    61fc:	stp	x27, x28, [sp, #80]
    6200:	mov	w27, w2
    6204:	b	6224 <grub_mod_fini+0x5efc>
    6208:	ldr	x3, [x26, #160]
    620c:	asr	w1, w1, #1
    6210:	smaddl	x3, w1, w4, x3
    6214:	ldr	w2, [x3, #4]
    6218:	cmp	w27, w2
    621c:	b.gt	6520 <grub_mod_fini+0x61f8>
    6220:	mov	w0, w1
    6224:	add	w1, w0, w19
    6228:	cmp	w0, w19
    622c:	b.gt	6208 <grub_mod_fini+0x5ee0>
    6230:	cmp	w5, w19
    6234:	b.le	62c4 <grub_mod_fini+0x5f9c>
    6238:	mov	w0, #0x14                  	// #20
    623c:	ldr	x25, [x26, #160]
    6240:	smull	x19, w19, w0
    6244:	add	x25, x25, x19
    6248:	ldr	w0, [x25, #4]
    624c:	cmp	w27, w0
    6250:	b.ne	62c4 <grub_mod_fini+0x5f9c>  // b.any
    6254:	ldr	x28, [x26, #112]
    6258:	stp	x23, x24, [sp, #48]
    625c:	nop
    6260:	ldr	w5, [x20, #4]
    6264:	cmp	w5, #0x0
    6268:	b.le	62b4 <grub_mod_fini+0x5f8c>
    626c:	sub	w5, w5, #0x1
    6270:	ldr	w3, [x25]
    6274:	mov	w0, w5
    6278:	mov	w1, #0x0                   	// #0
    627c:	ldr	x2, [x20, #8]
    6280:	b	629c <grub_mod_fini+0x5f74>
    6284:	lsr	w4, w6, #1
    6288:	lsr	w6, w6, #1
    628c:	ldr	w4, [x2, x4, lsl #2]
    6290:	cmp	w3, w4
    6294:	b.gt	62e0 <grub_mod_fini+0x5fb8>
    6298:	mov	w0, w6
    629c:	add	w6, w0, w1
    62a0:	cmp	w0, w1
    62a4:	b.hi	6284 <grub_mod_fini+0x5f5c>  // b.pmore
    62a8:	ldr	w0, [x2, w1, uxtw #2]
    62ac:	cmp	w3, w0
    62b0:	b.eq	62e8 <grub_mod_fini+0x5fc0>  // b.none
    62b4:	ldrb	w0, [x25, #16]
    62b8:	add	x25, x25, #0x14
    62bc:	cbnz	w0, 6260 <grub_mod_fini+0x5f38>
    62c0:	ldp	x23, x24, [sp, #48]
    62c4:	mov	w0, #0x0                   	// #0
    62c8:	ldp	x19, x20, [sp, #16]
    62cc:	ldp	x21, x22, [sp, #32]
    62d0:	ldp	x25, x26, [sp, #64]
    62d4:	ldp	x27, x28, [sp, #80]
    62d8:	ldp	x29, x30, [sp], #144
    62dc:	ret
    62e0:	add	w1, w6, #0x1
    62e4:	b	629c <grub_mod_fini+0x5f74>
    62e8:	ldp	w0, w24, [x25, #8]
    62ec:	add	w24, w27, w24
    62f0:	sub	w24, w24, w0
    62f4:	cmp	w27, w24
    62f8:	b.eq	6424 <grub_mod_fini+0x60fc>  // b.none
    62fc:	ldr	x1, [x26, #136]
    6300:	sxtw	x24, w24
    6304:	ldr	x0, [x28, #24]
    6308:	ldr	x6, [x1, x24, lsl #3]
    630c:	ldr	w23, [x0, w3, sxtw #2]
    6310:	cbz	x6, 64e0 <grub_mod_fini+0x61b8>
    6314:	ldr	w7, [x6, #12]
    6318:	cmp	w7, #0x0
    631c:	b.le	6504 <grub_mod_fini+0x61dc>
    6320:	sub	w0, w7, #0x1
    6324:	mov	w1, #0x0                   	// #0
    6328:	ldr	x4, [x6, #16]
    632c:	b	6348 <grub_mod_fini+0x6020>
    6330:	lsr	w2, w5, #1
    6334:	lsr	w5, w5, #1
    6338:	ldr	w2, [x4, x2, lsl #2]
    633c:	cmp	w23, w2
    6340:	b.gt	641c <grub_mod_fini+0x60f4>
    6344:	mov	w0, w5
    6348:	add	w5, w0, w1
    634c:	cmp	w0, w1
    6350:	b.hi	6330 <grub_mod_fini+0x6008>  // b.pmore
    6354:	ldr	w0, [x4, w1, uxtw #2]
    6358:	cmp	w23, w0
    635c:	b.eq	62b4 <grub_mod_fini+0x5f8c>  // b.none
    6360:	mov	x1, #0x0                   	// #0
    6364:	sbfiz	x0, x7, #2, #32
    6368:	bfxil	x1, x7, #0, #32
    636c:	str	x6, [sp, #104]
    6370:	bfi	x1, x7, #32, #32
    6374:	str	x1, [sp, #128]
    6378:	bl	0 <grub_malloc>
    637c:	str	x0, [sp, #136]
    6380:	ldr	x6, [sp, #104]
    6384:	cbz	x0, 6590 <grub_mod_fini+0x6268>
    6388:	ldr	x1, [x6, #16]
    638c:	ldrsw	x2, [x6, #12]
    6390:	lsl	x2, x2, #2
    6394:	bl	0 <grub_memmove>
    6398:	mov	w2, #0x0                   	// #0
    639c:	mov	w1, w23
    63a0:	add	x0, sp, #0x80
    63a4:	str	w2, [sp, #124]
    63a8:	bl	16f8 <grub_mod_fini+0x13d0>
    63ac:	ldr	w1, [sp, #124]
    63b0:	and	w0, w0, #0xff
    63b4:	eor	w0, w0, #0x1
    63b8:	cmp	w1, #0x0
    63bc:	cset	w1, ne  // ne = any
    63c0:	orr	w0, w1, w0
    63c4:	cbnz	w0, 6528 <grub_mod_fini+0x6200>
    63c8:	ldr	x23, [x26, #136]
    63cc:	add	x2, sp, #0x80
    63d0:	mov	x1, x28
    63d4:	add	x0, sp, #0x7c
    63d8:	bl	5d78 <grub_mod_fini+0x5a50>
    63dc:	mov	x1, x0
    63e0:	ldr	x0, [sp, #136]
    63e4:	str	x1, [x23, x24, lsl #3]
    63e8:	bl	0 <grub_free>
    63ec:	ldr	x0, [x26, #136]
    63f0:	ldr	x0, [x0, x24, lsl #3]
    63f4:	cbnz	x0, 62b4 <grub_mod_fini+0x5f8c>
    63f8:	ldr	w0, [sp, #124]
    63fc:	cbz	w0, 62b4 <grub_mod_fini+0x5f8c>
    6400:	ldp	x19, x20, [sp, #16]
    6404:	ldp	x21, x22, [sp, #32]
    6408:	ldp	x23, x24, [sp, #48]
    640c:	ldp	x25, x26, [sp, #64]
    6410:	ldp	x27, x28, [sp, #80]
    6414:	ldp	x29, x30, [sp], #144
    6418:	ret
    641c:	add	w1, w5, #0x1
    6420:	b	6348 <grub_mod_fini+0x6020>
    6424:	ldr	x1, [x28, #40]
    6428:	mov	w0, #0x0                   	// #0
    642c:	add	x3, x1, w3, sxtw #4
    6430:	ldr	x1, [x3, #8]
    6434:	ldr	w24, [x1]
    6438:	b	6454 <grub_mod_fini+0x612c>
    643c:	lsr	w3, w1, #1
    6440:	lsr	w1, w1, #1
    6444:	ldr	w3, [x2, x3, lsl #2]
    6448:	cmp	w24, w3
    644c:	b.gt	64d8 <grub_mod_fini+0x61b0>
    6450:	mov	w5, w1
    6454:	add	w1, w5, w0
    6458:	cmp	w5, w0
    645c:	b.hi	643c <grub_mod_fini+0x6114>  // b.pmore
    6460:	ldr	w0, [x2, w0, uxtw #2]
    6464:	cmp	w24, w0
    6468:	b.eq	62b4 <grub_mod_fini+0x5f8c>  // b.none
    646c:	mov	x1, #0x100000001           	// #4294967297
    6470:	mov	x0, #0x4                   	// #4
    6474:	str	x1, [sp, #128]
    6478:	bl	0 <grub_malloc>
    647c:	str	x0, [sp, #136]
    6480:	mov	w3, w22
    6484:	mov	w2, w21
    6488:	cbz	x0, 656c <grub_mod_fini+0x6244>
    648c:	str	w24, [x0]
    6490:	add	x1, sp, #0x80
    6494:	mov	x0, x28
    6498:	str	wzr, [sp, #124]
    649c:	bl	4d30 <grub_mod_fini+0x4a08>
    64a0:	mov	w23, w0
    64a4:	add	x1, sp, #0x80
    64a8:	mov	x0, x20
    64ac:	bl	2108 <grub_mod_fini+0x1de0>
    64b0:	mov	w24, w0
    64b4:	ldr	x0, [sp, #136]
    64b8:	bl	0 <grub_free>
    64bc:	ldr	w0, [sp, #124]
    64c0:	orr	w1, w23, w24
    64c4:	orr	w1, w1, w0
    64c8:	cbnz	w1, 6558 <grub_mod_fini+0x6230>
    64cc:	ldr	x25, [x26, #160]
    64d0:	add	x25, x25, x19
    64d4:	b	6260 <grub_mod_fini+0x5f38>
    64d8:	add	w0, w1, #0x1
    64dc:	b	6454 <grub_mod_fini+0x612c>
    64e0:	mov	x1, #0x100000001           	// #4294967297
    64e4:	mov	x0, #0x4                   	// #4
    64e8:	str	x1, [sp, #128]
    64ec:	bl	0 <grub_malloc>
    64f0:	str	x0, [sp, #136]
    64f4:	cbz	x0, 6538 <grub_mod_fini+0x6210>
    64f8:	str	w23, [x0]
    64fc:	str	wzr, [sp, #124]
    6500:	b	63c8 <grub_mod_fini+0x60a0>
    6504:	mov	x2, #0x10                  	// #16
    6508:	add	x0, sp, #0x80
    650c:	mov	w1, #0x0                   	// #0
    6510:	str	w7, [sp, #132]
    6514:	bl	0 <grub_memset>
    6518:	mov	w2, #0x0                   	// #0
    651c:	b	639c <grub_mod_fini+0x6074>
    6520:	add	w19, w1, #0x1
    6524:	b	6224 <grub_mod_fini+0x5efc>
    6528:	ldr	x0, [sp, #136]
    652c:	bl	0 <grub_free>
    6530:	ldr	w0, [sp, #124]
    6534:	cbnz	w0, 6400 <grub_mod_fini+0x60d8>
    6538:	mov	w0, #0xc                   	// #12
    653c:	ldp	x19, x20, [sp, #16]
    6540:	ldp	x21, x22, [sp, #32]
    6544:	ldp	x23, x24, [sp, #48]
    6548:	ldp	x25, x26, [sp, #64]
    654c:	ldp	x27, x28, [sp, #80]
    6550:	ldp	x29, x30, [sp], #144
    6554:	ret
    6558:	cbnz	w0, 6400 <grub_mod_fini+0x60d8>
    655c:	cmp	w23, #0x0
    6560:	csel	w0, w23, w24, ne  // ne = any
    6564:	ldp	x23, x24, [sp, #48]
    6568:	b	62c8 <grub_mod_fini+0x5fa0>
    656c:	mov	w4, #0xc                   	// #12
    6570:	add	x1, sp, #0x80
    6574:	mov	x0, x28
    6578:	str	w4, [sp, #124]
    657c:	str	xzr, [sp, #128]
    6580:	bl	4d30 <grub_mod_fini+0x4a08>
    6584:	add	x1, sp, #0x80
    6588:	mov	w23, w0
    658c:	b	64a8 <grub_mod_fini+0x6180>
    6590:	mov	w2, #0xc                   	// #12
    6594:	str	xzr, [sp, #128]
    6598:	b	639c <grub_mod_fini+0x6074>
    659c:	nop
    65a0:	stp	x29, x30, [sp, #-208]!
    65a4:	mov	x7, x1
    65a8:	mov	x29, sp
    65ac:	stp	x27, x28, [sp, #80]
    65b0:	mov	x28, x0
    65b4:	ldr	x27, [x0, #112]
    65b8:	stp	x19, x20, [sp, #16]
    65bc:	mov	w20, w2
    65c0:	stp	x21, x22, [sp, #32]
    65c4:	mov	w19, w3
    65c8:	ldr	w22, [x1, #4]
    65cc:	str	x1, [sp, #136]
    65d0:	sbfiz	x1, x2, #4, #32
    65d4:	ldr	x2, [x27]
    65d8:	stp	x23, x24, [sp, #48]
    65dc:	ldr	w0, [x0, #168]
    65e0:	str	w5, [sp, #124]
    65e4:	ldr	w1, [x2, x1]
    65e8:	add	w0, w5, w0
    65ec:	str	w1, [sp, #128]
    65f0:	cmp	w0, w22
    65f4:	str	w6, [sp, #132]
    65f8:	str	w4, [sp, #152]
    65fc:	str	wzr, [sp, #168]
    6600:	b.ge	6bac <grub_mod_fini+0x6884>  // b.tcont
    6604:	ldr	x0, [sp, #136]
    6608:	ldr	w2, [x28, #120]
    660c:	ldr	w22, [x0]
    6610:	ldr	x5, [x0, #8]
    6614:	ldr	w0, [x28, #56]
    6618:	str	w0, [sp, #156]
    661c:	ldr	x0, [x28, #136]
    6620:	str	x0, [sp, #144]
    6624:	cbz	w22, 6ae4 <grub_mod_fini+0x67bc>
    6628:	str	w22, [x28, #56]
    662c:	sub	w1, w22, #0x1
    6630:	str	x5, [x28, #136]
    6634:	mov	x0, x28
    6638:	bl	1c78 <grub_mod_fini+0x1950>
    663c:	mov	w21, w0
    6640:	cmp	w22, w19
    6644:	b.eq	6afc <grub_mod_fini+0x67d4>  // b.none
    6648:	sxtw	x24, w22
    664c:	ldr	x20, [x5, x24, lsl #3]
    6650:	cbz	x20, 6b98 <grub_mod_fini+0x6870>
    6654:	ldrb	w0, [x20, #80]
    6658:	tbnz	w0, #6, 6950 <grub_mod_fini+0x6628>
    665c:	add	x0, sp, #0xb0
    6660:	mov	x2, #0x10                  	// #16
    6664:	mov	w1, #0x0                   	// #0
    6668:	bl	0 <grub_memset>
    666c:	ldrb	w0, [x20, #80]
    6670:	tbz	w0, #6, 66c4 <grub_mod_fini+0x639c>
    6674:	add	x20, sp, #0xb0
    6678:	ldr	w0, [sp, #180]
    667c:	cbz	w0, 669c <grub_mod_fini+0x6374>
    6680:	ldp	w3, w4, [sp, #128]
    6684:	mov	w2, w22
    6688:	mov	x1, x20
    668c:	mov	x0, x28
    6690:	bl	61c8 <grub_mod_fini+0x5ea0>
    6694:	str	w0, [sp, #168]
    6698:	cbnz	w0, 6b3c <grub_mod_fini+0x6814>
    669c:	mov	x2, x20
    66a0:	mov	w3, w21
    66a4:	mov	x1, x27
    66a8:	add	x0, sp, #0xa8
    66ac:	bl	5478 <grub_mod_fini+0x5150>
    66b0:	mov	x20, x0
    66b4:	cbz	x0, 6c08 <grub_mod_fini+0x68e0>
    66b8:	ldr	x0, [x28, #136]
    66bc:	sxtw	x24, w22
    66c0:	str	x20, [x0, x24, lsl #3]
    66c4:	ldr	w0, [sp, #124]
    66c8:	cmp	w22, w0
    66cc:	b.ge	68b0 <grub_mod_fini+0x6588>  // b.tcont
    66d0:	mov	w21, w22
    66d4:	str	wzr, [sp, #120]
    66d8:	ldr	w0, [x28, #168]
    66dc:	mov	w22, w21
    66e0:	ldr	w1, [sp, #120]
    66e4:	cmp	w1, w0
    66e8:	b.gt	68b0 <grub_mod_fini+0x6588>
    66ec:	ldr	x0, [x28, #136]
    66f0:	add	x1, x24, #0x1
    66f4:	str	x1, [sp, #104]
    66f8:	str	wzr, [sp, #180]
    66fc:	ldr	x1, [x0, x1, lsl #3]
    6700:	cbz	x1, 6a84 <grub_mod_fini+0x675c>
    6704:	add	x1, x1, #0x8
    6708:	add	x0, sp, #0xb0
    670c:	bl	2108 <grub_mod_fini+0x1de0>
    6710:	str	w0, [sp, #168]
    6714:	cbnz	w0, 6b3c <grub_mod_fini+0x6814>
    6718:	cbz	x20, 6824 <grub_mod_fini+0x64fc>
    671c:	ldr	x22, [x28, #112]
    6720:	mov	w1, #0x0                   	// #0
    6724:	add	x0, sp, #0xc0
    6728:	mov	x2, #0x10                  	// #16
    672c:	str	wzr, [sp, #172]
    6730:	bl	0 <grub_memset>
    6734:	ldr	w0, [x20, #28]
    6738:	add	x1, x22, #0xc8
    673c:	str	x1, [sp, #112]
    6740:	mov	x23, #0x0                   	// #0
    6744:	cmp	w0, #0x0
    6748:	b.le	6818 <grub_mod_fini+0x64f0>
    674c:	stp	x25, x26, [sp, #64]
    6750:	ldr	x1, [x20, #32]
    6754:	ldr	x0, [x22]
    6758:	ldr	w2, [x1, x23, lsl #2]
    675c:	sbfiz	x19, x2, #4, #32
    6760:	sxtw	x26, w2
    6764:	add	x1, x0, x19
    6768:	ldrb	w3, [x1, #10]
    676c:	tbnz	w3, #4, 69b4 <grub_mod_fini+0x668c>
    6770:	ldr	x0, [x28, #8]
    6774:	ldrb	w2, [x1, #8]
    6778:	ldrb	w0, [x0, x24]
    677c:	cmp	w2, #0x5
    6780:	b.eq	6998 <grub_mod_fini+0x6670>  // b.none
    6784:	b.hi	698c <grub_mod_fini+0x6664>  // b.pmore
    6788:	cmp	w2, #0x1
    678c:	b.eq	6a64 <grub_mod_fini+0x673c>  // b.none
    6790:	cmp	w2, #0x3
    6794:	b.ne	6804 <grub_mod_fini+0x64dc>  // b.any
    6798:	ldr	x2, [x1]
    679c:	ubfx	x3, x0, #6, #2
    67a0:	ldr	x2, [x2, x3, lsl #3]
    67a4:	lsr	x0, x2, x0
    67a8:	tbz	w0, #0, 6804 <grub_mod_fini+0x64dc>
    67ac:	ldr	w6, [x1, #8]
    67b0:	tst	w6, #0x3ff00
    67b4:	b.eq	67e8 <grub_mod_fini+0x64c0>  // b.none
    67b8:	ldr	w2, [x28, #120]
    67bc:	mov	w1, w21
    67c0:	mov	x0, x28
    67c4:	bl	1c78 <grub_mod_fini+0x1950>
    67c8:	ubfx	x1, x6, #8, #10
    67cc:	tbz	w6, #10, 6a90 <grub_mod_fini+0x6768>
    67d0:	tbz	w0, #0, 6804 <grub_mod_fini+0x64dc>
    67d4:	tbnz	w1, #3, 6804 <grub_mod_fini+0x64dc>
    67d8:	tbz	w1, #5, 67e0 <grub_mod_fini+0x64b8>
    67dc:	tbz	w0, #1, 6804 <grub_mod_fini+0x64dc>
    67e0:	tbz	w1, #7, 67e8 <grub_mod_fini+0x64c0>
    67e4:	tbz	w0, #3, 6804 <grub_mod_fini+0x64dc>
    67e8:	lsl	x25, x26, #2
    67ec:	ldr	x1, [x22, #24]
    67f0:	add	x0, sp, #0xb0
    67f4:	ldr	w1, [x1, x25]
    67f8:	bl	16f8 <grub_mod_fini+0x13d0>
    67fc:	tst	w0, #0xff
    6800:	b.eq	6aac <grub_mod_fini+0x6784>  // b.none
    6804:	ldr	w0, [x20, #28]
    6808:	add	x23, x23, #0x1
    680c:	cmp	w0, w23
    6810:	b.gt	6750 <grub_mod_fini+0x6428>
    6814:	ldp	x25, x26, [sp, #64]
    6818:	ldr	x0, [sp, #200]
    681c:	bl	0 <grub_free>
    6820:	str	wzr, [sp, #168]
    6824:	ldr	w0, [sp, #180]
    6828:	add	w22, w21, #0x1
    682c:	cbz	w0, 6864 <grub_mod_fini+0x653c>
    6830:	ldp	w2, w3, [sp, #128]
    6834:	add	x1, sp, #0xb0
    6838:	mov	x0, x27
    683c:	bl	4d30 <grub_mod_fini+0x4a08>
    6840:	str	w0, [sp, #168]
    6844:	cbnz	w0, 6b3c <grub_mod_fini+0x6814>
    6848:	ldp	w3, w4, [sp, #128]
    684c:	mov	w2, w22
    6850:	add	x1, sp, #0xb0
    6854:	mov	x0, x28
    6858:	bl	61c8 <grub_mod_fini+0x5ea0>
    685c:	str	w0, [sp, #168]
    6860:	cbnz	w0, 6b3c <grub_mod_fini+0x6814>
    6864:	ldr	w2, [x28, #120]
    6868:	mov	w1, w21
    686c:	mov	x0, x28
    6870:	bl	1c78 <grub_mod_fini+0x1950>
    6874:	mov	w3, w0
    6878:	add	x2, sp, #0xb0
    687c:	mov	x1, x27
    6880:	add	x0, sp, #0xa8
    6884:	bl	5478 <grub_mod_fini+0x5150>
    6888:	mov	x20, x0
    688c:	cbz	x0, 6b60 <grub_mod_fini+0x6838>
    6890:	ldr	x0, [x28, #136]
    6894:	str	wzr, [sp, #120]
    6898:	str	x20, [x0, w22, sxtw #3]
    689c:	ldr	w0, [sp, #124]
    68a0:	mov	w21, w22
    68a4:	ldr	x24, [sp, #104]
    68a8:	cmp	w0, w22
    68ac:	b.gt	66d8 <grub_mod_fini+0x63b0>
    68b0:	ldr	x0, [sp, #184]
    68b4:	bl	0 <grub_free>
    68b8:	ldr	w1, [sp, #124]
    68bc:	ldr	x0, [x28, #136]
    68c0:	ldr	x3, [x0, w1, sxtw #3]
    68c4:	cbz	x3, 6c14 <grub_mod_fini+0x68ec>
    68c8:	ldr	x0, [sp, #136]
    68cc:	ldr	w1, [sp, #156]
    68d0:	str	w22, [x0]
    68d4:	mov	w0, #0x1                   	// #1
    68d8:	str	w1, [x28, #56]
    68dc:	ldr	x1, [sp, #144]
    68e0:	str	x1, [x28, #136]
    68e4:	ldr	w1, [x3, #12]
    68e8:	cmp	w1, #0x0
    68ec:	b.le	6938 <grub_mod_fini+0x6610>
    68f0:	sub	w1, w1, #0x1
    68f4:	mov	w2, #0x0                   	// #0
    68f8:	ldr	x4, [x3, #16]
    68fc:	b	691c <grub_mod_fini+0x65f4>
    6900:	lsr	w3, w0, #1
    6904:	ldr	w5, [sp, #152]
    6908:	lsr	w0, w0, #1
    690c:	ldr	w3, [x4, x3, lsl #2]
    6910:	cmp	w5, w3
    6914:	b.gt	6bf8 <grub_mod_fini+0x68d0>
    6918:	mov	w1, w0
    691c:	add	w0, w1, w2
    6920:	cmp	w1, w2
    6924:	b.hi	6900 <grub_mod_fini+0x65d8>  // b.pmore
    6928:	ldr	w0, [x4, w2, uxtw #2]
    692c:	ldr	w1, [sp, #152]
    6930:	cmp	w0, w1
    6934:	cset	w0, ne  // ne = any
    6938:	ldp	x19, x20, [sp, #16]
    693c:	ldp	x21, x22, [sp, #32]
    6940:	ldp	x23, x24, [sp, #48]
    6944:	ldp	x27, x28, [sp, #80]
    6948:	ldp	x29, x30, [sp], #208
    694c:	ret
    6950:	ldr	w1, [x20, #12]
    6954:	str	w1, [sp, #180]
    6958:	cmp	w1, #0x0
    695c:	b.le	6b80 <grub_mod_fini+0x6858>
    6960:	sbfiz	x0, x1, #2, #32
    6964:	str	w1, [sp, #176]
    6968:	bl	0 <grub_malloc>
    696c:	str	x0, [sp, #184]
    6970:	cbz	x0, 6c00 <grub_mod_fini+0x68d8>
    6974:	ldr	x1, [x20, #16]
    6978:	ldrsw	x2, [x20, #12]
    697c:	lsl	x2, x2, #2
    6980:	bl	0 <grub_memmove>
    6984:	str	wzr, [sp, #168]
    6988:	b	666c <grub_mod_fini+0x6344>
    698c:	cmp	w2, #0x7
    6990:	b.ne	6804 <grub_mod_fini+0x64dc>  // b.any
    6994:	tbnz	w0, #7, 6804 <grub_mod_fini+0x64dc>
    6998:	cmp	w0, #0xa
    699c:	b.eq	6a9c <grub_mod_fini+0x6774>  // b.none
    69a0:	cbnz	w0, 67ac <grub_mod_fini+0x6484>
    69a4:	ldr	x0, [x28, #112]
    69a8:	ldr	x0, [x0, #200]
    69ac:	tbz	w0, #7, 67ac <grub_mod_fini+0x6484>
    69b0:	b	6804 <grub_mod_fini+0x64dc>
    69b4:	ldr	x1, [sp, #112]
    69b8:	mov	w4, w21
    69bc:	mov	x3, x28
    69c0:	bl	3038 <grub_mod_fini+0x2d10>
    69c4:	cmp	w0, #0x1
    69c8:	b.le	6a74 <grub_mod_fini+0x674c>
    69cc:	add	w0, w21, w0
    69d0:	lsl	x25, x26, #2
    69d4:	ldr	x1, [x28, #136]
    69d8:	sxtw	x19, w0
    69dc:	ldr	x0, [x22, #24]
    69e0:	ldr	x1, [x1, x19, lsl #3]
    69e4:	ldr	w26, [x0, x26, lsl #2]
    69e8:	str	wzr, [sp, #196]
    69ec:	cbz	x1, 6a04 <grub_mod_fini+0x66dc>
    69f0:	add	x1, x1, #0x8
    69f4:	add	x0, sp, #0xc0
    69f8:	bl	2108 <grub_mod_fini+0x1de0>
    69fc:	str	w0, [sp, #172]
    6a00:	cbnz	w0, 6a48 <grub_mod_fini+0x6720>
    6a04:	mov	w1, w26
    6a08:	add	x0, sp, #0xc0
    6a0c:	bl	16f8 <grub_mod_fini+0x13d0>
    6a10:	tst	w0, #0xff
    6a14:	b.eq	6aac <grub_mod_fini+0x6784>  // b.none
    6a18:	ldr	x26, [x28, #136]
    6a1c:	mov	x1, x22
    6a20:	add	x2, sp, #0xc0
    6a24:	add	x0, sp, #0xac
    6a28:	bl	5d78 <grub_mod_fini+0x5a50>
    6a2c:	ldr	x1, [x28, #136]
    6a30:	str	x0, [x26, x19, lsl #3]
    6a34:	ldr	x0, [x1, x19, lsl #3]
    6a38:	cbnz	x0, 67ec <grub_mod_fini+0x64c4>
    6a3c:	ldr	w0, [sp, #172]
    6a40:	cbz	w0, 67ec <grub_mod_fini+0x64c4>
    6a44:	nop
    6a48:	ldr	x0, [sp, #200]
    6a4c:	bl	0 <grub_free>
    6a50:	ldr	w0, [sp, #172]
    6a54:	str	w0, [sp, #168]
    6a58:	cbnz	w0, 6abc <grub_mod_fini+0x6794>
    6a5c:	ldp	x25, x26, [sp, #64]
    6a60:	b	6824 <grub_mod_fini+0x64fc>
    6a64:	ldrb	w2, [x1]
    6a68:	cmp	w2, w0
    6a6c:	b.eq	67ac <grub_mod_fini+0x6484>  // b.none
    6a70:	b	6804 <grub_mod_fini+0x64dc>
    6a74:	cbnz	w0, 67e8 <grub_mod_fini+0x64c0>
    6a78:	ldr	x1, [x22]
    6a7c:	add	x1, x1, x19
    6a80:	b	6770 <grub_mod_fini+0x6448>
    6a84:	cbnz	x20, 671c <grub_mod_fini+0x63f4>
    6a88:	add	w22, w21, #0x1
    6a8c:	b	6864 <grub_mod_fini+0x653c>
    6a90:	tbz	w1, #3, 67d8 <grub_mod_fini+0x64b0>
    6a94:	tbz	w0, #0, 67d8 <grub_mod_fini+0x64b0>
    6a98:	b	6804 <grub_mod_fini+0x64dc>
    6a9c:	ldr	x0, [x28, #112]
    6aa0:	ldr	x0, [x0, #200]
    6aa4:	tbnz	w0, #6, 67ac <grub_mod_fini+0x6484>
    6aa8:	b	6804 <grub_mod_fini+0x64dc>
    6aac:	ldr	x0, [sp, #200]
    6ab0:	bl	0 <grub_free>
    6ab4:	mov	w0, #0xc                   	// #12
    6ab8:	str	w0, [sp, #168]
    6abc:	ldr	x0, [sp, #184]
    6ac0:	bl	0 <grub_free>
    6ac4:	ldr	w0, [sp, #168]
    6ac8:	ldp	x19, x20, [sp, #16]
    6acc:	ldp	x21, x22, [sp, #32]
    6ad0:	ldp	x23, x24, [sp, #48]
    6ad4:	ldp	x25, x26, [sp, #64]
    6ad8:	ldp	x27, x28, [sp, #80]
    6adc:	ldp	x29, x30, [sp], #208
    6ae0:	ret
    6ae4:	str	w19, [x28, #56]
    6ae8:	sub	w1, w19, #0x1
    6aec:	str	x5, [x28, #136]
    6af0:	mov	x0, x28
    6af4:	bl	1c78 <grub_mod_fini+0x1950>
    6af8:	mov	w21, w0
    6afc:	mov	x1, #0x100000001           	// #4294967297
    6b00:	mov	x0, #0x4                   	// #4
    6b04:	str	x1, [sp, #176]
    6b08:	bl	0 <grub_malloc>
    6b0c:	str	x0, [sp, #184]
    6b10:	cbz	x0, 6c00 <grub_mod_fini+0x68d8>
    6b14:	ldp	w2, w3, [sp, #128]
    6b18:	str	w20, [x0]
    6b1c:	add	x20, sp, #0xb0
    6b20:	mov	x0, x27
    6b24:	mov	x1, x20
    6b28:	str	wzr, [sp, #168]
    6b2c:	bl	4d30 <grub_mod_fini+0x4a08>
    6b30:	str	w0, [sp, #168]
    6b34:	mov	w22, w19
    6b38:	cbz	w0, 6678 <grub_mod_fini+0x6350>
    6b3c:	ldr	x0, [sp, #184]
    6b40:	bl	0 <grub_free>
    6b44:	ldr	w0, [sp, #168]
    6b48:	ldp	x19, x20, [sp, #16]
    6b4c:	ldp	x21, x22, [sp, #32]
    6b50:	ldp	x23, x24, [sp, #48]
    6b54:	ldp	x27, x28, [sp, #80]
    6b58:	ldp	x29, x30, [sp], #208
    6b5c:	ret
    6b60:	ldr	w0, [sp, #168]
    6b64:	cbnz	w0, 6b3c <grub_mod_fini+0x6814>
    6b68:	ldr	x0, [x28, #136]
    6b6c:	ldr	w1, [sp, #120]
    6b70:	add	w1, w1, #0x1
    6b74:	str	xzr, [x0, w22, sxtw #3]
    6b78:	str	w1, [sp, #120]
    6b7c:	b	689c <grub_mod_fini+0x6574>
    6b80:	add	x0, sp, #0xb0
    6b84:	mov	x2, #0x10                  	// #16
    6b88:	mov	w1, #0x0                   	// #0
    6b8c:	bl	0 <grub_memset>
    6b90:	str	wzr, [sp, #168]
    6b94:	b	666c <grub_mod_fini+0x6344>
    6b98:	add	x0, sp, #0xb0
    6b9c:	mov	x2, #0x10                  	// #16
    6ba0:	mov	w1, #0x0                   	// #0
    6ba4:	bl	0 <grub_memset>
    6ba8:	b	66c4 <grub_mod_fini+0x639c>
    6bac:	add	w21, w0, #0x1
    6bb0:	mov	w0, #0x7fffffff            	// #2147483647
    6bb4:	sub	w0, w0, w22
    6bb8:	cmp	w0, w21
    6bbc:	b.lt	6c00 <grub_mod_fini+0x68d8>  // b.tstop
    6bc0:	adds	w23, w22, w21
    6bc4:	b.mi	6c00 <grub_mod_fini+0x68d8>  // b.first
    6bc8:	ldr	x0, [x7, #8]
    6bcc:	mov	x24, x7
    6bd0:	sbfiz	x1, x23, #3, #32
    6bd4:	bl	0 <grub_realloc>
    6bd8:	cbz	x0, 6c00 <grub_mod_fini+0x68d8>
    6bdc:	str	w23, [x24, #4]
    6be0:	sbfiz	x2, x21, #3, #32
    6be4:	str	x0, [x24, #8]
    6be8:	mov	w1, #0x0                   	// #0
    6bec:	add	x0, x0, w22, sxtw #3
    6bf0:	bl	0 <grub_memset>
    6bf4:	b	6604 <grub_mod_fini+0x62dc>
    6bf8:	add	w2, w0, #0x1
    6bfc:	b	691c <grub_mod_fini+0x65f4>
    6c00:	mov	w0, #0xc                   	// #12
    6c04:	b	6938 <grub_mod_fini+0x6610>
    6c08:	ldr	w0, [sp, #168]
    6c0c:	cbz	w0, 66b8 <grub_mod_fini+0x6390>
    6c10:	b	6b3c <grub_mod_fini+0x6814>
    6c14:	ldr	x0, [sp, #136]
    6c18:	ldr	w1, [sp, #156]
    6c1c:	str	w22, [x0]
    6c20:	mov	w0, #0x1                   	// #1
    6c24:	str	w1, [x28, #56]
    6c28:	ldr	x1, [sp, #144]
    6c2c:	str	x1, [x28, #136]
    6c30:	b	6938 <grub_mod_fini+0x6610>
    6c34:	nop
    6c38:	stp	x29, x30, [sp, #-80]!
    6c3c:	mov	x29, sp
    6c40:	stp	x19, x20, [sp, #16]
    6c44:	ldr	x20, [x1]
    6c48:	stp	x23, x24, [sp, #48]
    6c4c:	mov	x24, x2
    6c50:	ldr	x19, [x2, #8]
    6c54:	str	x25, [sp, #64]
    6c58:	mov	x25, x0
    6c5c:	ldrb	w0, [x1, #56]
    6c60:	tst	x0, #0x10
    6c64:	ccmp	x19, #0x0, #0x4, ne  // ne = any
    6c68:	b.ne	6e8c <grub_mod_fini+0x6b64>  // b.any
    6c6c:	ldr	w2, [x20, #128]
    6c70:	stp	x21, x22, [sp, #32]
    6c74:	cmp	w2, #0xf
    6c78:	b.eq	6ee4 <grub_mod_fini+0x6bbc>  // b.none
    6c7c:	sbfiz	x21, x2, #6, #32
    6c80:	sxtw	x1, w2
    6c84:	add	x4, x21, #0x30
    6c88:	add	x0, x21, #0x8
    6c8c:	ldr	x21, [x20, #112]
    6c90:	add	w3, w2, #0x1
    6c94:	lsl	x1, x1, #6
    6c98:	add	x4, x21, x4
    6c9c:	add	x2, x21, x1
    6ca0:	add	x1, x1, #0x20
    6ca4:	str	w3, [x20, #128]
    6ca8:	add	x1, x21, x1
    6cac:	mov	w5, #0x8                   	// #8
    6cb0:	add	x21, x21, x0
    6cb4:	stp	xzr, xzr, [x2, #8]
    6cb8:	mov	w3, #0xffffffff            	// #-1
    6cbc:	str	xzr, [x2, #24]
    6cc0:	strb	w5, [x4, #8]
    6cc4:	ldrb	w0, [x1, #26]
    6cc8:	and	w0, w0, #0xfffffff3
    6ccc:	strb	w0, [x1, #26]
    6cd0:	stp	xzr, xzr, [x2, #32]
    6cd4:	str	w3, [x2, #64]
    6cd8:	ldr	w2, [x20, #128]
    6cdc:	cmp	w2, #0xf
    6ce0:	b.eq	6f14 <grub_mod_fini+0x6bec>  // b.none
    6ce4:	sbfiz	x3, x2, #6, #32
    6ce8:	sxtw	x1, w2
    6cec:	ldr	x22, [x20, #112]
    6cf0:	add	x0, x3, #0x8
    6cf4:	add	x4, x3, #0x30
    6cf8:	add	w3, w2, #0x1
    6cfc:	lsl	x1, x1, #6
    6d00:	add	x4, x22, x4
    6d04:	add	x2, x22, x1
    6d08:	add	x1, x1, #0x20
    6d0c:	str	w3, [x20, #128]
    6d10:	add	x1, x22, x1
    6d14:	mov	w5, #0x9                   	// #9
    6d18:	add	x22, x22, x0
    6d1c:	stp	xzr, xzr, [x2, #8]
    6d20:	mov	w3, #0xffffffff            	// #-1
    6d24:	str	xzr, [x2, #24]
    6d28:	strb	w5, [x4, #8]
    6d2c:	ldrb	w0, [x1, #26]
    6d30:	and	w0, w0, #0xfffffff3
    6d34:	strb	w0, [x1, #26]
    6d38:	stp	xzr, xzr, [x2, #32]
    6d3c:	str	w3, [x2, #64]
    6d40:	ldr	w3, [x20, #128]
    6d44:	mov	x23, x22
    6d48:	cbz	x19, 6dc0 <grub_mod_fini+0x6a98>
    6d4c:	cmp	w3, #0xf
    6d50:	b.eq	6f74 <grub_mod_fini+0x6c4c>  // b.none
    6d54:	sbfiz	x0, x3, #6, #32
    6d58:	sxtw	x1, w3
    6d5c:	ldr	x23, [x20, #112]
    6d60:	add	x5, x0, #0x8
    6d64:	add	x4, x0, #0x30
    6d68:	add	w3, w3, #0x1
    6d6c:	lsl	x1, x1, #6
    6d70:	add	x4, x23, x4
    6d74:	add	x2, x23, x1
    6d78:	add	x1, x1, #0x20
    6d7c:	str	w3, [x20, #128]
    6d80:	add	x1, x23, x1
    6d84:	mov	w0, #0x10                  	// #16
    6d88:	mov	w3, #0xffffffff            	// #-1
    6d8c:	stp	xzr, x19, [x2, #8]
    6d90:	add	x23, x23, x5
    6d94:	str	x22, [x2, #24]
    6d98:	strb	w0, [x4, #8]
    6d9c:	ldrb	w0, [x1, #26]
    6da0:	and	w0, w0, #0xfffffff3
    6da4:	strb	w0, [x1, #26]
    6da8:	stp	xzr, xzr, [x2, #32]
    6dac:	str	w3, [x2, #64]
    6db0:	str	x23, [x19]
    6db4:	cbz	x22, 6dbc <grub_mod_fini+0x6a94>
    6db8:	str	x23, [x22]
    6dbc:	ldr	w3, [x20, #128]
    6dc0:	cmp	w3, #0xf
    6dc4:	b.eq	6f44 <grub_mod_fini+0x6c1c>  // b.none
    6dc8:	sbfiz	x19, x3, #6, #32
    6dcc:	sxtw	x1, w3
    6dd0:	add	x4, x19, #0x30
    6dd4:	add	x0, x19, #0x8
    6dd8:	ldr	x19, [x20, #112]
    6ddc:	add	w3, w3, #0x1
    6de0:	lsl	x1, x1, #6
    6de4:	add	x4, x19, x4
    6de8:	add	x2, x19, x1
    6dec:	add	x1, x1, #0x20
    6df0:	str	w3, [x20, #128]
    6df4:	add	x1, x19, x1
    6df8:	mov	w5, #0x10                  	// #16
    6dfc:	add	x19, x19, x0
    6e00:	stp	xzr, x21, [x2, #8]
    6e04:	mov	w3, #0xffffffff            	// #-1
    6e08:	str	x23, [x2, #24]
    6e0c:	strb	w5, [x4, #8]
    6e10:	ldrb	w0, [x1, #26]
    6e14:	and	w0, w0, #0xfffffff3
    6e18:	strb	w0, [x1, #26]
    6e1c:	stp	xzr, xzr, [x2, #32]
    6e20:	str	w3, [x2, #64]
    6e24:	cbz	x21, 6e2c <grub_mod_fini+0x6b04>
    6e28:	str	x19, [x21]
    6e2c:	cbz	x23, 6ebc <grub_mod_fini+0x6b94>
    6e30:	str	x19, [x23]
    6e34:	cbz	x19, 6ebc <grub_mod_fini+0x6b94>
    6e38:	cmp	x21, #0x0
    6e3c:	ccmp	x22, #0x0, #0x4, ne  // ne = any
    6e40:	b.eq	6ebc <grub_mod_fini+0x6b94>  // b.none
    6e44:	ldr	w0, [x24, #40]
    6e48:	str	w0, [x22, #40]
    6e4c:	str	w0, [x21, #40]
    6e50:	ldrb	w0, [x24, #50]
    6e54:	ldrb	w1, [x22, #50]
    6e58:	ubfx	x0, x0, #3, #1
    6e5c:	bfi	w1, w0, #3, #1
    6e60:	strb	w1, [x22, #50]
    6e64:	ldrb	w1, [x21, #50]
    6e68:	bfi	w1, w0, #3, #1
    6e6c:	strb	w1, [x21, #50]
    6e70:	ldp	x21, x22, [sp, #32]
    6e74:	mov	x0, x19
    6e78:	ldp	x19, x20, [sp, #16]
    6e7c:	ldp	x23, x24, [sp, #48]
    6e80:	ldr	x25, [sp, #64]
    6e84:	ldp	x29, x30, [sp], #80
    6e88:	ret
    6e8c:	ldr	w0, [x2, #40]
    6e90:	cmp	w0, #0x3f
    6e94:	b.gt	6e74 <grub_mod_fini+0x6b4c>
    6e98:	ldr	x1, [x20, #144]
    6e9c:	lsr	x0, x1, x0
    6ea0:	tbnz	w0, #0, 6c6c <grub_mod_fini+0x6944>
    6ea4:	mov	x0, x19
    6ea8:	ldp	x19, x20, [sp, #16]
    6eac:	ldp	x23, x24, [sp, #48]
    6eb0:	ldr	x25, [sp, #64]
    6eb4:	ldp	x29, x30, [sp], #80
    6eb8:	ret
    6ebc:	mov	w0, #0xc                   	// #12
    6ec0:	mov	x19, #0x0                   	// #0
    6ec4:	ldp	x21, x22, [sp, #32]
    6ec8:	str	w0, [x25]
    6ecc:	mov	x0, x19
    6ed0:	ldp	x19, x20, [sp, #16]
    6ed4:	ldp	x23, x24, [sp, #48]
    6ed8:	ldr	x25, [sp, #64]
    6edc:	ldp	x29, x30, [sp], #80
    6ee0:	ret
    6ee4:	mov	x0, #0x3c8                 	// #968
    6ee8:	bl	0 <grub_malloc>
    6eec:	mov	x21, x0
    6ef0:	cbz	x0, 6fac <grub_mod_fini+0x6c84>
    6ef4:	ldr	x0, [x20, #112]
    6ef8:	str	x0, [x21]
    6efc:	mov	w3, #0x1                   	// #1
    6f00:	mov	x4, #0x30                  	// #48
    6f04:	mov	x1, #0x0                   	// #0
    6f08:	mov	x0, #0x8                   	// #8
    6f0c:	str	x21, [x20, #112]
    6f10:	b	6c94 <grub_mod_fini+0x696c>
    6f14:	mov	x0, #0x3c8                 	// #968
    6f18:	bl	0 <grub_malloc>
    6f1c:	mov	x22, x0
    6f20:	cbz	x0, 6fa4 <grub_mod_fini+0x6c7c>
    6f24:	ldr	x0, [x20, #112]
    6f28:	str	x0, [x22]
    6f2c:	mov	x4, #0x30                  	// #48
    6f30:	mov	w3, #0x1                   	// #1
    6f34:	mov	x1, #0x0                   	// #0
    6f38:	mov	x0, #0x8                   	// #8
    6f3c:	str	x22, [x20, #112]
    6f40:	b	6cfc <grub_mod_fini+0x69d4>
    6f44:	mov	x0, #0x3c8                 	// #968
    6f48:	bl	0 <grub_malloc>
    6f4c:	mov	x19, x0
    6f50:	cbz	x0, 6ebc <grub_mod_fini+0x6b94>
    6f54:	ldr	x0, [x20, #112]
    6f58:	str	x0, [x19]
    6f5c:	mov	w3, #0x1                   	// #1
    6f60:	mov	x4, #0x30                  	// #48
    6f64:	mov	x1, #0x0                   	// #0
    6f68:	mov	x0, #0x8                   	// #8
    6f6c:	str	x19, [x20, #112]
    6f70:	b	6de0 <grub_mod_fini+0x6ab8>
    6f74:	mov	x0, #0x3c8                 	// #968
    6f78:	bl	0 <grub_malloc>
    6f7c:	mov	x23, x0
    6f80:	cbz	x0, 6fb4 <grub_mod_fini+0x6c8c>
    6f84:	ldr	x0, [x20, #112]
    6f88:	str	x0, [x23]
    6f8c:	mov	x4, #0x30                  	// #48
    6f90:	mov	w3, #0x1                   	// #1
    6f94:	mov	x5, #0x8                   	// #8
    6f98:	mov	x1, #0x0                   	// #0
    6f9c:	str	x23, [x20, #112]
    6fa0:	b	6d6c <grub_mod_fini+0x6a44>
    6fa4:	mov	x22, #0x0                   	// #0
    6fa8:	b	6d40 <grub_mod_fini+0x6a18>
    6fac:	mov	x21, #0x0                   	// #0
    6fb0:	b	6cd8 <grub_mod_fini+0x69b0>
    6fb4:	ldr	w3, [x20, #128]
    6fb8:	mov	x23, #0x0                   	// #0
    6fbc:	b	6dc0 <grub_mod_fini+0x6a98>
    6fc0:	stp	x29, x30, [sp, #-64]!
    6fc4:	mov	x29, sp
    6fc8:	stp	x19, x20, [sp, #16]
    6fcc:	mov	x19, x2
    6fd0:	stp	x23, x24, [sp, #48]
    6fd4:	mov	x24, x0
    6fd8:	cbz	x1, 6ff8 <grub_mod_fini+0x6cd0>
    6fdc:	mov	x20, x1
    6fe0:	ldr	w1, [x1, #4]
    6fe4:	cmp	x2, #0x0
    6fe8:	ccmp	w1, #0x0, #0x4, ne  // ne = any
    6fec:	b.gt	702c <grub_mod_fini+0x6d04>
    6ff0:	cmp	w1, #0x0
    6ff4:	b.gt	7038 <grub_mod_fini+0x6d10>
    6ff8:	cbz	x19, 7008 <grub_mod_fini+0x6ce0>
    6ffc:	ldr	w0, [x19, #4]
    7000:	cmp	w0, #0x0
    7004:	b.gt	7070 <grub_mod_fini+0x6d48>
    7008:	mov	x0, x24
    700c:	mov	x2, #0x10                  	// #16
    7010:	mov	w1, #0x0                   	// #0
    7014:	bl	0 <grub_memset>
    7018:	mov	w0, #0x0                   	// #0
    701c:	ldp	x19, x20, [sp, #16]
    7020:	ldp	x23, x24, [sp, #48]
    7024:	ldp	x29, x30, [sp], #64
    7028:	ret
    702c:	ldr	w0, [x2, #4]
    7030:	cmp	w0, #0x0
    7034:	b.gt	70b8 <grub_mod_fini+0x6d90>
    7038:	mov	x2, #0x0                   	// #0
    703c:	sbfiz	x0, x1, #2, #32
    7040:	bfxil	x2, x1, #0, #32
    7044:	bfi	x2, x1, #32, #32
    7048:	str	x2, [x24]
    704c:	bl	0 <grub_malloc>
    7050:	str	x0, [x24, #8]
    7054:	cbz	x0, 71c8 <grub_mod_fini+0x6ea0>
    7058:	ldr	x1, [x20, #8]
    705c:	ldrsw	x2, [x20, #4]
    7060:	lsl	x2, x2, #2
    7064:	bl	0 <grub_memmove>
    7068:	mov	w0, #0x0                   	// #0
    706c:	b	701c <grub_mod_fini+0x6cf4>
    7070:	mov	x2, x0
    7074:	mov	x1, #0x0                   	// #0
    7078:	sbfiz	x0, x0, #2, #32
    707c:	bfxil	x1, x2, #0, #32
    7080:	bfi	x1, x2, #32, #32
    7084:	str	x1, [x24]
    7088:	bl	0 <grub_malloc>
    708c:	str	x0, [x24, #8]
    7090:	cbz	x0, 71c8 <grub_mod_fini+0x6ea0>
    7094:	ldr	x1, [x19, #8]
    7098:	ldrsw	x2, [x19, #4]
    709c:	lsl	x2, x2, #2
    70a0:	bl	0 <grub_memmove>
    70a4:	mov	w0, #0x0                   	// #0
    70a8:	ldp	x19, x20, [sp, #16]
    70ac:	ldp	x23, x24, [sp, #48]
    70b0:	ldp	x29, x30, [sp], #64
    70b4:	ret
    70b8:	add	w0, w1, w0
    70bc:	str	w0, [x24]
    70c0:	sbfiz	x0, x0, #2, #32
    70c4:	bl	0 <grub_malloc>
    70c8:	str	x0, [x24, #8]
    70cc:	cbz	x0, 71d4 <grub_mod_fini+0x6eac>
    70d0:	ldr	w2, [x20, #4]
    70d4:	stp	x21, x22, [sp, #32]
    70d8:	cmp	w2, #0x0
    70dc:	b.le	714c <grub_mod_fini+0x6e24>
    70e0:	mov	x3, x0
    70e4:	mov	w23, #0x0                   	// #0
    70e8:	mov	w22, #0x0                   	// #0
    70ec:	mov	w21, #0x0                   	// #0
    70f0:	ldr	x4, [x20, #8]
    70f4:	b	7114 <grub_mod_fini+0x6dec>
    70f8:	cinc	w22, w22, eq  // eq = none
    70fc:	add	w21, w21, #0x1
    7100:	str	w1, [x3]
    7104:	ldr	w2, [x20, #4]
    7108:	add	x3, x3, #0x4
    710c:	cmp	w2, w21
    7110:	b.le	7158 <grub_mod_fini+0x6e30>
    7114:	ldr	w5, [x19, #4]
    7118:	sxtw	x6, w21
    711c:	add	x1, x4, w21, sxtw #2
    7120:	cmp	w22, w5
    7124:	b.ge	71a8 <grub_mod_fini+0x6e80>  // b.tcont
    7128:	ldr	x2, [x19, #8]
    712c:	add	w23, w23, #0x1
    7130:	ldr	w1, [x4, x6, lsl #2]
    7134:	ldr	w2, [x2, w22, sxtw #2]
    7138:	cmp	w1, w2
    713c:	b.le	70f8 <grub_mod_fini+0x6dd0>
    7140:	add	w22, w22, #0x1
    7144:	str	w2, [x3]
    7148:	b	7104 <grub_mod_fini+0x6ddc>
    714c:	mov	w23, #0x0                   	// #0
    7150:	mov	w22, #0x0                   	// #0
    7154:	nop
    7158:	ldr	w2, [x19, #4]
    715c:	cmp	w2, w22
    7160:	b.gt	7180 <grub_mod_fini+0x6e58>
    7164:	ldp	x21, x22, [sp, #32]
    7168:	str	w23, [x24, #4]
    716c:	mov	w0, #0x0                   	// #0
    7170:	ldp	x19, x20, [sp, #16]
    7174:	ldp	x23, x24, [sp, #48]
    7178:	ldp	x29, x30, [sp], #64
    717c:	ret
    7180:	ldr	x1, [x19, #8]
    7184:	sub	w2, w2, w22
    7188:	add	x0, x0, w23, sxtw #2
    718c:	sbfiz	x2, x2, #2, #32
    7190:	add	x1, x1, w22, sxtw #2
    7194:	bl	0 <grub_memmove>
    7198:	ldr	w0, [x19, #4]
    719c:	sub	w22, w0, w22
    71a0:	add	w23, w23, w22
    71a4:	b	7164 <grub_mod_fini+0x6e3c>
    71a8:	sub	w2, w2, w21
    71ac:	mov	x0, x3
    71b0:	sbfiz	x2, x2, #2, #32
    71b4:	bl	0 <grub_memmove>
    71b8:	ldr	w0, [x20, #4]
    71bc:	sub	w21, w0, w21
    71c0:	add	w23, w23, w21
    71c4:	b	7164 <grub_mod_fini+0x6e3c>
    71c8:	mov	w0, #0xc                   	// #12
    71cc:	str	xzr, [x24]
    71d0:	b	701c <grub_mod_fini+0x6cf4>
    71d4:	mov	w0, #0xc                   	// #12
    71d8:	b	701c <grub_mod_fini+0x6cf4>
    71dc:	nop
    71e0:	stp	x29, x30, [sp, #-224]!
    71e4:	mov	x29, sp
    71e8:	stp	x19, x20, [sp, #16]
    71ec:	mov	x20, x0
    71f0:	ldr	w4, [x3, #4]
    71f4:	ldr	x0, [x0, #136]
    71f8:	stp	x23, x24, [sp, #48]
    71fc:	sxtw	x24, w2
    7200:	stp	x21, x22, [sp, #32]
    7204:	mov	x21, x3
    7208:	sbfiz	x2, x24, #3, #32
    720c:	ldr	x23, [x0, x24, lsl #3]
    7210:	stp	x25, x26, [sp, #64]
    7214:	mov	x26, x1
    7218:	str	x2, [sp, #112]
    721c:	add	x1, x0, x2
    7220:	str	wzr, [sp, #160]
    7224:	ldr	x22, [x20, #112]
    7228:	cbz	x23, 7534 <grub_mod_fini+0x720c>
    722c:	mov	x19, x24
    7230:	cbnz	w4, 7268 <grub_mod_fini+0x6f40>
    7234:	ldr	x0, [x26]
    7238:	mov	w4, #0x0                   	// #0
    723c:	str	xzr, [x0, x24, lsl #3]
    7240:	ldr	x0, [x1]
    7244:	ldrb	w0, [x0, #80]
    7248:	tbnz	w0, #6, 7384 <grub_mod_fini+0x705c>
    724c:	mov	w0, w4
    7250:	ldp	x19, x20, [sp, #16]
    7254:	ldp	x21, x22, [sp, #32]
    7258:	ldp	x23, x24, [sp, #48]
    725c:	ldp	x25, x26, [sp, #64]
    7260:	ldp	x29, x30, [sp], #224
    7264:	ret
    7268:	mov	x2, x3
    726c:	mov	x1, x22
    7270:	add	x0, sp, #0xb8
    7274:	str	wzr, [sp, #184]
    7278:	bl	5d78 <grub_mod_fini+0x5a50>
    727c:	mov	x25, x0
    7280:	ldr	w4, [sp, #184]
    7284:	cbnz	w4, 724c <grub_mod_fini+0x6f24>
    7288:	stp	x27, x28, [sp, #80]
    728c:	add	x27, x0, #0x28
    7290:	ldr	w0, [x0, #40]
    7294:	cbnz	w0, 731c <grub_mod_fini+0x6ff4>
    7298:	ldr	w28, [x21, #4]
    729c:	stp	w28, wzr, [x25, #40]
    72a0:	sbfiz	x0, x28, #2, #32
    72a4:	bl	0 <grub_malloc>
    72a8:	str	x0, [x25, #48]
    72ac:	cbz	x0, 7ae0 <grub_mod_fini+0x77b8>
    72b0:	ldr	w0, [x21, #4]
    72b4:	str	wzr, [sp, #184]
    72b8:	cmp	w0, #0x0
    72bc:	b.le	731c <grub_mod_fini+0x6ff4>
    72c0:	mov	x25, #0x0                   	// #0
    72c4:	b	72d4 <grub_mod_fini+0x6fac>
    72c8:	ldr	w0, [x21, #4]
    72cc:	cmp	w0, w25
    72d0:	b.le	731c <grub_mod_fini+0x6ff4>
    72d4:	ldr	x3, [x21, #8]
    72d8:	mov	x0, x27
    72dc:	ldr	x1, [x22, #56]
    72e0:	ldrsw	x3, [x3, x25, lsl #2]
    72e4:	add	x25, x25, #0x1
    72e8:	add	x1, x1, x3, lsl #4
    72ec:	bl	2108 <grub_mod_fini+0x1de0>
    72f0:	str	w0, [sp, #184]
    72f4:	cbz	w0, 72c8 <grub_mod_fini+0x6fa0>
    72f8:	mov	w4, #0xc                   	// #12
    72fc:	mov	w0, w4
    7300:	ldp	x19, x20, [sp, #16]
    7304:	ldp	x21, x22, [sp, #32]
    7308:	ldp	x23, x24, [sp, #48]
    730c:	ldp	x25, x26, [sp, #64]
    7310:	ldp	x27, x28, [sp, #80]
    7314:	ldp	x29, x30, [sp], #224
    7318:	ret
    731c:	add	x25, x23, #0x8
    7320:	mov	x2, x27
    7324:	mov	x1, x25
    7328:	mov	x0, x21
    732c:	bl	22c8 <grub_mod_fini+0x1fa0>
    7330:	str	w0, [sp, #160]
    7334:	cbnz	w0, 7afc <grub_mod_fini+0x77d4>
    7338:	ldr	w13, [x26, #28]
    733c:	cmp	w13, #0x0
    7340:	cbnz	w13, 7820 <grub_mod_fini+0x74f8>
    7344:	ldr	x25, [x26]
    7348:	mov	x2, x21
    734c:	mov	x1, x22
    7350:	add	x0, sp, #0xa0
    7354:	bl	5d78 <grub_mod_fini+0x5a50>
    7358:	ldr	w4, [sp, #160]
    735c:	str	x0, [x25, x24, lsl #3]
    7360:	cbnz	w4, 7800 <grub_mod_fini+0x74d8>
    7364:	ldr	x0, [sp, #112]
    7368:	mov	w4, #0x0                   	// #0
    736c:	ldr	x1, [x20, #136]
    7370:	ldp	x27, x28, [sp, #80]
    7374:	add	x1, x1, x0
    7378:	ldr	x0, [x1]
    737c:	ldrb	w0, [x0, #80]
    7380:	tbz	w0, #6, 724c <grub_mod_fini+0x6f24>
    7384:	ldr	w4, [x20, #148]
    7388:	mov	w3, #0x14                  	// #20
    738c:	stp	x27, x28, [sp, #80]
    7390:	mov	w2, w4
    7394:	str	wzr, [sp, #108]
    7398:	b	73b8 <grub_mod_fini+0x7090>
    739c:	ldr	x1, [x20, #160]
    73a0:	asr	w0, w0, #1
    73a4:	smaddl	x1, w0, w3, x1
    73a8:	ldr	w1, [x1, #4]
    73ac:	cmp	w19, w1
    73b0:	b.gt	776c <grub_mod_fini+0x7444>
    73b4:	mov	w2, w0
    73b8:	ldr	w1, [sp, #108]
    73bc:	add	w0, w2, w1
    73c0:	cmp	w2, w1
    73c4:	b.gt	739c <grub_mod_fini+0x7074>
    73c8:	cmp	w4, w1
    73cc:	b.le	7598 <grub_mod_fini+0x7270>
    73d0:	ldr	w2, [sp, #108]
    73d4:	mov	w1, #0x14                  	// #20
    73d8:	ldr	x0, [x20, #160]
    73dc:	smull	x1, w2, w1
    73e0:	str	x1, [sp, #152]
    73e4:	add	x0, x0, x1
    73e8:	ldr	w0, [x0, #4]
    73ec:	cmp	w19, w0
    73f0:	b.ne	7598 <grub_mod_fini+0x7270>  // b.any
    73f4:	ldr	w2, [x23, #12]
    73f8:	str	xzr, [sp, #184]
    73fc:	cmp	w2, #0x0
    7400:	ldr	x28, [x20, #112]
    7404:	b.le	7598 <grub_mod_fini+0x7270>
    7408:	mov	x22, #0x0                   	// #0
    740c:	b	7424 <grub_mod_fini+0x70fc>
    7410:	cmp	w0, #0x4
    7414:	b.eq	7464 <grub_mod_fini+0x713c>  // b.none
    7418:	add	x22, x22, #0x1
    741c:	cmp	w2, w22
    7420:	b.le	7590 <grub_mod_fini+0x7268>
    7424:	ldr	x1, [x23, #16]
    7428:	ldr	x0, [x28]
    742c:	ldr	w27, [x1, x22, lsl #2]
    7430:	ldr	w1, [x26, #16]
    7434:	sbfiz	x3, x27, #4, #32
    7438:	str	x3, [sp, #120]
    743c:	add	x0, x0, x3
    7440:	cmp	w27, w1
    7444:	sxtw	x1, w27
    7448:	ldrb	w0, [x0, #8]
    744c:	b.ne	7410 <grub_mod_fini+0x70e8>  // b.any
    7450:	ldr	w4, [x26, #20]
    7454:	cmp	w19, w4
    7458:	b.eq	7418 <grub_mod_fini+0x70f0>  // b.none
    745c:	cmp	w0, #0x4
    7460:	b.ne	7418 <grub_mod_fini+0x70f0>  // b.any
    7464:	lsl	x0, x1, #2
    7468:	str	x0, [sp, #136]
    746c:	ldr	x0, [sp, #152]
    7470:	str	x0, [sp, #96]
    7474:	ldr	x24, [x20, #160]
    7478:	ldr	w21, [sp, #108]
    747c:	add	x24, x24, x0
    7480:	ldr	w0, [x24]
    7484:	cmp	w27, w0
    7488:	b.ne	7510 <grub_mod_fini+0x71e8>  // b.any
    748c:	ldp	w1, w0, [x24, #8]
    7490:	sub	w0, w0, w1
    7494:	add	w6, w19, w0
    7498:	cbz	w0, 75a4 <grub_mod_fini+0x727c>
    749c:	ldr	x0, [x28, #24]
    74a0:	ldr	x1, [sp, #136]
    74a4:	ldr	w5, [x0, x1]
    74a8:	ldr	w0, [x26, #20]
    74ac:	cmp	w6, w0
    74b0:	b.gt	7510 <grub_mod_fini+0x71e8>
    74b4:	ldr	x0, [x26]
    74b8:	ldr	x1, [x0, w6, sxtw #3]
    74bc:	cbz	x1, 7510 <grub_mod_fini+0x71e8>
    74c0:	ldr	w0, [x1, #12]
    74c4:	cmp	w0, #0x0
    74c8:	b.le	7510 <grub_mod_fini+0x71e8>
    74cc:	sub	w0, w0, #0x1
    74d0:	mov	w2, #0x0                   	// #0
    74d4:	ldr	x4, [x1, #16]
    74d8:	b	74f4 <grub_mod_fini+0x71cc>
    74dc:	lsr	w9, w1, #1
    74e0:	lsr	w1, w1, #1
    74e4:	ldr	w9, [x4, x9, lsl #2]
    74e8:	cmp	w5, w9
    74ec:	b.gt	75bc <grub_mod_fini+0x7294>
    74f0:	mov	w0, w1
    74f4:	add	w1, w0, w2
    74f8:	cmp	w0, w2
    74fc:	b.hi	74dc <grub_mod_fini+0x71b4>  // b.pmore
    7500:	ldr	w0, [x4, w2, uxtw #2]
    7504:	cmp	w5, w0
    7508:	b.eq	75c4 <grub_mod_fini+0x729c>  // b.none
    750c:	nop
    7510:	ldr	x1, [sp, #96]
    7514:	add	w21, w21, #0x1
    7518:	ldrb	w0, [x24, #16]
    751c:	add	x24, x24, #0x14
    7520:	add	x1, x1, #0x14
    7524:	str	x1, [sp, #96]
    7528:	cbnz	w0, 7480 <grub_mod_fini+0x7158>
    752c:	ldr	w2, [x23, #12]
    7530:	b	7418 <grub_mod_fini+0x70f0>
    7534:	ldr	x19, [x26]
    7538:	cbnz	w4, 755c <grub_mod_fini+0x7234>
    753c:	str	xzr, [x19, x24, lsl #3]
    7540:	mov	w0, w4
    7544:	ldp	x19, x20, [sp, #16]
    7548:	ldp	x21, x22, [sp, #32]
    754c:	ldp	x23, x24, [sp, #48]
    7550:	ldp	x25, x26, [sp, #64]
    7554:	ldp	x29, x30, [sp], #224
    7558:	ret
    755c:	mov	x1, x22
    7560:	mov	x2, x3
    7564:	add	x0, sp, #0xa0
    7568:	bl	5d78 <grub_mod_fini+0x5a50>
    756c:	ldr	w4, [sp, #160]
    7570:	str	x0, [x19, x24, lsl #3]
    7574:	mov	w0, w4
    7578:	ldp	x19, x20, [sp, #16]
    757c:	ldp	x21, x22, [sp, #32]
    7580:	ldp	x23, x24, [sp, #48]
    7584:	ldp	x25, x26, [sp, #64]
    7588:	ldp	x29, x30, [sp], #224
    758c:	ret
    7590:	ldr	x0, [sp, #184]
    7594:	cbnz	x0, 7af4 <grub_mod_fini+0x77cc>
    7598:	mov	w4, #0x0                   	// #0
    759c:	ldp	x27, x28, [sp, #80]
    75a0:	b	724c <grub_mod_fini+0x6f24>
    75a4:	ldr	x0, [x28, #40]
    75a8:	ldr	x1, [sp, #120]
    75ac:	add	x0, x0, x1
    75b0:	ldr	x0, [x0, #8]
    75b4:	ldr	w5, [x0]
    75b8:	b	74a8 <grub_mod_fini+0x7180>
    75bc:	add	w2, w1, #0x1
    75c0:	b	74f4 <grub_mod_fini+0x71cc>
    75c4:	mov	w4, w19
    75c8:	mov	w3, w27
    75cc:	add	x2, x26, #0x20
    75d0:	add	x1, x26, #0x1c
    75d4:	mov	x0, x20
    75d8:	bl	2dc8 <grub_mod_fini+0x2aa0>
    75dc:	tst	w0, #0xff
    75e0:	b.ne	7510 <grub_mod_fini+0x71e8>  // b.any
    75e4:	ldr	x0, [sp, #184]
    75e8:	cbz	x0, 7778 <grub_mod_fini+0x7450>
    75ec:	mov	w1, w21
    75f0:	add	x0, sp, #0xd0
    75f4:	stp	w27, w19, [sp, #200]
    75f8:	bl	16f8 <grub_mod_fini+0x13d0>
    75fc:	tst	w0, #0xff
    7600:	b.eq	77c4 <grub_mod_fini+0x749c>  // b.none
    7604:	ldr	x3, [sp, #112]
    7608:	add	x1, sp, #0xb8
    760c:	ldr	x2, [sp, #184]
    7610:	mov	x0, x20
    7614:	ldr	x2, [x2, x3]
    7618:	str	x2, [sp, #144]
    761c:	bl	7b08 <grub_mod_fini+0x77e0>
    7620:	mov	w4, w0
    7624:	cbnz	w0, 77c8 <grub_mod_fini+0x74a0>
    7628:	ldr	x24, [x26, #8]
    762c:	ldr	x0, [sp, #184]
    7630:	str	x0, [sp, #128]
    7634:	cbz	x24, 76b8 <grub_mod_fini+0x7390>
    7638:	tbnz	w19, #31, 76b8 <grub_mod_fini+0x7390>
    763c:	mov	x25, #0x0                   	// #0
    7640:	b	7698 <grub_mod_fini+0x7370>
    7644:	add	x2, x4, #0x8
    7648:	add	x1, x1, #0x8
    764c:	add	x0, sp, #0xa8
    7650:	cbz	x4, 768c <grub_mod_fini+0x7364>
    7654:	bl	6fc0 <grub_mod_fini+0x6c98>
    7658:	mov	w4, w0
    765c:	str	w4, [sp, #164]
    7660:	add	x2, sp, #0xa8
    7664:	mov	x1, x28
    7668:	add	x0, sp, #0xa4
    766c:	cbnz	w4, 77c8 <grub_mod_fini+0x74a0>
    7670:	bl	5d78 <grub_mod_fini+0x5a50>
    7674:	mov	x1, x0
    7678:	ldr	x0, [sp, #176]
    767c:	str	x1, [x24, x25, lsl #3]
    7680:	bl	0 <grub_free>
    7684:	ldr	w4, [sp, #164]
    7688:	cbnz	w4, 77c8 <grub_mod_fini+0x74a0>
    768c:	add	x25, x25, #0x1
    7690:	cmp	w19, w25
    7694:	b.lt	76b0 <grub_mod_fini+0x7388>  // b.tstop
    7698:	ldr	x1, [x24, x25, lsl #3]
    769c:	ldr	x0, [sp, #128]
    76a0:	ldr	x4, [x0, x25, lsl #3]
    76a4:	cbnz	x1, 7644 <grub_mod_fini+0x731c>
    76a8:	str	x4, [x24, x25, lsl #3]
    76ac:	b	768c <grub_mod_fini+0x7364>
    76b0:	ldr	x0, [sp, #184]
    76b4:	str	x0, [sp, #128]
    76b8:	ldr	x1, [sp, #112]
    76bc:	ldr	x0, [sp, #128]
    76c0:	ldr	x2, [sp, #144]
    76c4:	ldr	w6, [sp, #212]
    76c8:	str	x2, [x0, x1]
    76cc:	cmp	w6, #0x0
    76d0:	b.le	7718 <grub_mod_fini+0x73f0>
    76d4:	sub	w9, w6, #0x1
    76d8:	mov	w0, #0x0                   	// #0
    76dc:	mov	w2, w9
    76e0:	ldr	x4, [sp, #216]
    76e4:	b	7700 <grub_mod_fini+0x73d8>
    76e8:	lsr	w5, w1, #1
    76ec:	lsr	w1, w1, #1
    76f0:	ldr	w5, [x4, x5, lsl #2]
    76f4:	cmp	w21, w5
    76f8:	b.gt	7764 <grub_mod_fini+0x743c>
    76fc:	mov	w2, w1
    7700:	add	w1, w2, w0
    7704:	cmp	w2, w0
    7708:	b.hi	76e8 <grub_mod_fini+0x73c0>  // b.pmore
    770c:	ldr	w1, [x4, w0, uxtw #2]
    7710:	cmp	w21, w1
    7714:	b.eq	7728 <grub_mod_fini+0x7400>  // b.none
    7718:	ldr	x0, [sp, #96]
    771c:	ldr	x24, [x20, #160]
    7720:	add	x24, x24, x0
    7724:	b	7510 <grub_mod_fini+0x71e8>
    7728:	cmp	w0, #0x0
    772c:	ccmp	w6, w0, #0x4, ge  // ge = tcont
    7730:	b.le	7718 <grub_mod_fini+0x73f0>
    7734:	str	w9, [sp, #212]
    7738:	cmp	w0, w9
    773c:	b.ge	7718 <grub_mod_fini+0x73f0>  // b.tcont
    7740:	sxtw	x0, w0
    7744:	add	x2, x4, #0x4
    7748:	ldr	w1, [x2, x0, lsl #2]
    774c:	str	w1, [x4, x0, lsl #2]
    7750:	add	x0, x0, #0x1
    7754:	ldr	w1, [sp, #212]
    7758:	cmp	w1, w0
    775c:	b.gt	7748 <grub_mod_fini+0x7420>
    7760:	b	7718 <grub_mod_fini+0x73f0>
    7764:	add	w0, w1, #0x1
    7768:	b	7700 <grub_mod_fini+0x73d8>
    776c:	add	w0, w0, #0x1
    7770:	str	w0, [sp, #108]
    7774:	b	73b8 <grub_mod_fini+0x7090>
    7778:	ldp	x0, x1, [x26]
    777c:	stp	x0, x1, [sp, #184]
    7780:	ldr	w1, [x26, #28]
    7784:	ldp	x4, x5, [x26, #16]
    7788:	stp	x4, x5, [sp, #200]
    778c:	cmp	w1, #0x0
    7790:	ldr	x0, [x26, #32]
    7794:	str	x0, [sp, #216]
    7798:	b.le	7a7c <grub_mod_fini+0x7754>
    779c:	sbfiz	x0, x1, #2, #32
    77a0:	str	w1, [sp, #208]
    77a4:	bl	0 <grub_malloc>
    77a8:	str	x0, [sp, #216]
    77ac:	cbz	x0, 7ae8 <grub_mod_fini+0x77c0>
    77b0:	ldr	x1, [x26, #32]
    77b4:	ldrsw	x2, [x26, #28]
    77b8:	lsl	x2, x2, #2
    77bc:	bl	0 <grub_memmove>
    77c0:	b	75ec <grub_mod_fini+0x72c4>
    77c4:	mov	w4, #0xc                   	// #12
    77c8:	ldr	x0, [sp, #184]
    77cc:	cbz	x0, 7800 <grub_mod_fini+0x74d8>
    77d0:	ldr	x0, [sp, #216]
    77d4:	str	w4, [sp, #96]
    77d8:	bl	0 <grub_free>
    77dc:	ldr	w4, [sp, #96]
    77e0:	ldp	x19, x20, [sp, #16]
    77e4:	mov	w0, w4
    77e8:	ldp	x21, x22, [sp, #32]
    77ec:	ldp	x23, x24, [sp, #48]
    77f0:	ldp	x25, x26, [sp, #64]
    77f4:	ldp	x27, x28, [sp, #80]
    77f8:	ldp	x29, x30, [sp], #224
    77fc:	ret
    7800:	mov	w0, w4
    7804:	ldp	x19, x20, [sp, #16]
    7808:	ldp	x21, x22, [sp, #32]
    780c:	ldp	x23, x24, [sp, #48]
    7810:	ldp	x25, x26, [sp, #64]
    7814:	ldp	x27, x28, [sp, #80]
    7818:	ldp	x29, x30, [sp], #224
    781c:	ret
    7820:	ldr	x5, [x20, #160]
    7824:	b.le	7910 <grub_mod_fini+0x75e8>
    7828:	mov	x28, #0x0                   	// #0
    782c:	nop
    7830:	ldr	x0, [x26, #32]
    7834:	mov	w1, #0x14                  	// #20
    7838:	ldr	w0, [x0, x28, lsl #2]
    783c:	smull	x0, w0, w1
    7840:	add	x1, x5, x0
    7844:	ldr	w2, [x1, #8]
    7848:	cmp	w19, w2
    784c:	b.le	7904 <grub_mod_fini+0x75dc>
    7850:	ldr	w2, [x1, #4]
    7854:	cmp	w19, w2
    7858:	b.gt	7904 <grub_mod_fini+0x75dc>
    785c:	ldrsw	x2, [x5, x0]
    7860:	ldr	x0, [x22]
    7864:	lsl	x2, x2, #4
    7868:	ldr	w1, [x1, #12]
    786c:	ldr	w9, [x21, #4]
    7870:	cmp	w19, w1
    7874:	ldr	w6, [x0, x2]
    7878:	mov	w8, w9
    787c:	b.eq	7918 <grub_mod_fini+0x75f0>  // b.none
    7880:	cmp	w9, #0x0
    7884:	mov	x27, #0x0                   	// #0
    7888:	b.gt	789c <grub_mod_fini+0x7574>
    788c:	b	7904 <grub_mod_fini+0x75dc>
    7890:	cmp	w9, w27
    7894:	b.le	7900 <grub_mod_fini+0x75d8>
    7898:	ldr	x0, [x22]
    789c:	ldr	x1, [x21, #8]
    78a0:	ldr	w1, [x1, x27, lsl #2]
    78a4:	add	x27, x27, #0x1
    78a8:	sbfiz	x4, x1, #4, #32
    78ac:	add	x2, x0, x4
    78b0:	ldrb	w2, [x2, #8]
    78b4:	sub	w2, w2, #0x8
    78b8:	cmp	w2, #0x1
    78bc:	b.hi	7890 <grub_mod_fini+0x7568>  // b.pmore
    78c0:	ldr	w0, [x0, x4]
    78c4:	cmp	w6, w0
    78c8:	b.ne	7890 <grub_mod_fini+0x7568>  // b.any
    78cc:	mov	x3, x25
    78d0:	mov	x2, x21
    78d4:	mov	x0, x22
    78d8:	str	x5, [sp, #96]
    78dc:	str	w6, [sp, #108]
    78e0:	bl	5a18 <grub_mod_fini+0x56f0>
    78e4:	mov	w4, w0
    78e8:	cbnz	w0, 7800 <grub_mod_fini+0x74d8>
    78ec:	ldr	w9, [x21, #4]
    78f0:	ldr	w6, [sp, #108]
    78f4:	cmp	w9, w27
    78f8:	ldr	x5, [sp, #96]
    78fc:	b.gt	7898 <grub_mod_fini+0x7570>
    7900:	ldr	w13, [x26, #28]
    7904:	add	x28, x28, #0x1
    7908:	cmp	w13, w28
    790c:	b.gt	7830 <grub_mod_fini+0x7508>
    7910:	str	wzr, [sp, #160]
    7914:	b	7344 <grub_mod_fini+0x701c>
    7918:	cmp	w9, #0x0
    791c:	b.le	7904 <grub_mod_fini+0x75dc>
    7920:	mov	w27, #0xffffffff            	// #-1
    7924:	mov	x2, #0x0                   	// #0
    7928:	mov	w1, w27
    792c:	ldr	x10, [x21, #8]
    7930:	b	7954 <grub_mod_fini+0x762c>
    7934:	cmp	w4, #0x9
    7938:	b.ne	7948 <grub_mod_fini+0x7620>  // b.any
    793c:	ldr	w4, [x12]
    7940:	cmp	w6, w4
    7944:	csel	w27, w27, w9, ne  // ne = any
    7948:	add	x2, x2, #0x1
    794c:	cmp	w8, w2
    7950:	b.le	7984 <grub_mod_fini+0x765c>
    7954:	ldr	w9, [x10, x2, lsl #2]
    7958:	sbfiz	x11, x9, #4, #32
    795c:	add	x12, x0, x11
    7960:	ldrb	w4, [x12, #8]
    7964:	cmp	w4, #0x8
    7968:	b.ne	7934 <grub_mod_fini+0x760c>  // b.any
    796c:	ldr	w4, [x0, x11]
    7970:	add	x2, x2, #0x1
    7974:	cmp	w6, w4
    7978:	csel	w1, w1, w9, ne  // ne = any
    797c:	cmp	w8, w2
    7980:	b.gt	7954 <grub_mod_fini+0x762c>
    7984:	tbz	w1, #31, 7a90 <grub_mod_fini+0x7768>
    7988:	tbnz	w27, #31, 7904 <grub_mod_fini+0x75dc>
    798c:	mov	w6, #0x0                   	// #0
    7990:	ldr	w1, [x10, w6, sxtw #2]
    7994:	ldr	x0, [x22, #56]
    7998:	sbfiz	x11, x1, #4, #32
    799c:	add	x0, x0, x11
    79a0:	ldr	w2, [x0, #4]
    79a4:	cmp	w2, #0x0
    79a8:	b.le	79ec <grub_mod_fini+0x76c4>
    79ac:	sub	w2, w2, #0x1
    79b0:	mov	w4, #0x0                   	// #0
    79b4:	ldr	x9, [x0, #8]
    79b8:	b	79d4 <grub_mod_fini+0x76ac>
    79bc:	lsr	w10, w0, #1
    79c0:	lsr	w0, w0, #1
    79c4:	ldr	w10, [x9, x10, lsl #2]
    79c8:	cmp	w27, w10
    79cc:	b.gt	7ac8 <grub_mod_fini+0x77a0>
    79d0:	mov	w2, w0
    79d4:	add	w0, w2, w4
    79d8:	cmp	w2, w4
    79dc:	b.hi	79bc <grub_mod_fini+0x7694>  // b.pmore
    79e0:	ldr	w0, [x9, w4, uxtw #2]
    79e4:	cmp	w27, w0
    79e8:	b.eq	7ad0 <grub_mod_fini+0x77a8>  // b.none
    79ec:	ldr	x0, [x22, #48]
    79f0:	add	x11, x0, x11
    79f4:	ldr	w2, [x11, #4]
    79f8:	cmp	w2, #0x0
    79fc:	b.le	7a40 <grub_mod_fini+0x7718>
    7a00:	sub	w2, w2, #0x1
    7a04:	mov	w4, #0x0                   	// #0
    7a08:	ldr	x10, [x11, #8]
    7a0c:	b	7a28 <grub_mod_fini+0x7700>
    7a10:	lsr	w9, w0, #1
    7a14:	lsr	w0, w0, #1
    7a18:	ldr	w9, [x10, x9, lsl #2]
    7a1c:	cmp	w27, w9
    7a20:	b.gt	7ad8 <grub_mod_fini+0x77b0>
    7a24:	mov	w2, w0
    7a28:	add	w0, w2, w4
    7a2c:	cmp	w2, w4
    7a30:	b.hi	7a10 <grub_mod_fini+0x76e8>  // b.pmore
    7a34:	ldr	w0, [x10, w4, uxtw #2]
    7a38:	cmp	w27, w0
    7a3c:	b.eq	7ad0 <grub_mod_fini+0x77a8>  // b.none
    7a40:	mov	x3, x25
    7a44:	mov	x2, x21
    7a48:	mov	x0, x22
    7a4c:	str	x5, [sp, #96]
    7a50:	str	w6, [sp, #108]
    7a54:	bl	5a18 <grub_mod_fini+0x56f0>
    7a58:	mov	w4, w0
    7a5c:	cbnz	w0, 7800 <grub_mod_fini+0x74d8>
    7a60:	ldr	w8, [x21, #4]
    7a64:	ldr	w6, [sp, #108]
    7a68:	ldr	x5, [sp, #96]
    7a6c:	cmp	w8, w6
    7a70:	b.le	7900 <grub_mod_fini+0x75d8>
    7a74:	ldr	x10, [x21, #8]
    7a78:	b	7990 <grub_mod_fini+0x7668>
    7a7c:	add	x0, sp, #0xd0
    7a80:	mov	x2, #0x10                  	// #16
    7a84:	mov	w1, #0x0                   	// #0
    7a88:	bl	0 <grub_memset>
    7a8c:	b	75ec <grub_mod_fini+0x72c4>
    7a90:	mov	x3, x25
    7a94:	mov	x2, x21
    7a98:	mov	x0, x22
    7a9c:	str	x5, [sp, #96]
    7aa0:	bl	5a18 <grub_mod_fini+0x56f0>
    7aa4:	mov	w4, w0
    7aa8:	cbnz	w0, 7800 <grub_mod_fini+0x74d8>
    7aac:	ldr	x5, [sp, #96]
    7ab0:	tbnz	w27, #31, 7900 <grub_mod_fini+0x75d8>
    7ab4:	ldr	w8, [x21, #4]
    7ab8:	cmp	w8, #0x0
    7abc:	b.le	7900 <grub_mod_fini+0x75d8>
    7ac0:	ldr	x10, [x21, #8]
    7ac4:	b	798c <grub_mod_fini+0x7664>
    7ac8:	add	w4, w0, #0x1
    7acc:	b	79d4 <grub_mod_fini+0x76ac>
    7ad0:	add	w6, w6, #0x1
    7ad4:	b	7a6c <grub_mod_fini+0x7744>
    7ad8:	add	w4, w0, #0x1
    7adc:	b	7a28 <grub_mod_fini+0x7700>
    7ae0:	cbz	w28, 72b0 <grub_mod_fini+0x6f88>
    7ae4:	b	72f8 <grub_mod_fini+0x6fd0>
    7ae8:	mov	w4, #0xc                   	// #12
    7aec:	str	xzr, [sp, #208]
    7af0:	b	77c8 <grub_mod_fini+0x74a0>
    7af4:	mov	w4, #0x0                   	// #0
    7af8:	b	77d0 <grub_mod_fini+0x74a8>
    7afc:	mov	w4, w0
    7b00:	ldp	x27, x28, [sp, #80]
    7b04:	b	724c <grub_mod_fini+0x6f24>
    7b08:	stp	x29, x30, [sp, #-160]!
    7b0c:	mov	x29, sp
    7b10:	stp	x19, x20, [sp, #16]
    7b14:	mov	x20, x1
    7b18:	mov	x1, #0x100000001           	// #4294967297
    7b1c:	mov	x19, x0
    7b20:	mov	x0, #0x4                   	// #4
    7b24:	stp	x21, x22, [sp, #32]
    7b28:	stp	x27, x28, [sp, #80]
    7b2c:	ldp	w21, w27, [x20, #16]
    7b30:	str	x1, [sp, #144]
    7b34:	bl	0 <grub_malloc>
    7b38:	str	x0, [sp, #152]
    7b3c:	cbz	x0, 7ee8 <grub_mod_fini+0x7bc0>
    7b40:	str	w21, [x0]
    7b44:	add	x3, sp, #0x90
    7b48:	mov	w2, w27
    7b4c:	mov	x1, x20
    7b50:	mov	x0, x19
    7b54:	bl	71e0 <grub_mod_fini+0x6eb8>
    7b58:	cbnz	w0, 7f04 <grub_mod_fini+0x7bdc>
    7b5c:	sxtw	x21, w27
    7b60:	add	x0, x20, #0x20
    7b64:	stp	x23, x24, [sp, #48]
    7b68:	sub	x24, x21, #0x1
    7b6c:	lsl	x21, x21, #3
    7b70:	stp	x25, x26, [sp, #64]
    7b74:	str	wzr, [sp, #104]
    7b78:	str	x0, [sp, #128]
    7b7c:	add	x0, x20, #0x1c
    7b80:	str	x0, [sp, #136]
    7b84:	cmp	w27, #0x0
    7b88:	b.le	7ea0 <grub_mod_fini+0x7b78>
    7b8c:	ldr	x0, [x20]
    7b90:	ldr	w1, [x19, #168]
    7b94:	ldr	x2, [x0, x21]
    7b98:	cmp	x2, #0x0
    7b9c:	ldr	w2, [sp, #104]
    7ba0:	csinc	w2, wzr, w2, ne  // ne = any
    7ba4:	str	w2, [sp, #104]
    7ba8:	cmp	w1, w2
    7bac:	b.lt	7eb0 <grub_mod_fini+0x7b88>  // b.tstop
    7bb0:	ldr	x0, [x19, #136]
    7bb4:	sub	w27, w27, #0x1
    7bb8:	ldr	x23, [x0, x24, lsl #3]
    7bbc:	str	wzr, [sp, #148]
    7bc0:	cbz	x23, 7ce0 <grub_mod_fini+0x79b8>
    7bc4:	ldr	w0, [x23, #28]
    7bc8:	ldr	x28, [x19, #112]
    7bcc:	cmp	w0, #0x0
    7bd0:	b.le	7ce0 <grub_mod_fini+0x79b8>
    7bd4:	mov	x22, #0x0                   	// #0
    7bd8:	ldr	x1, [x23, #32]
    7bdc:	ldr	x0, [x28]
    7be0:	ldr	w26, [x1, x22, lsl #2]
    7be4:	sbfiz	x8, x26, #4, #32
    7be8:	sxtw	x25, w26
    7bec:	add	x0, x0, x8
    7bf0:	ldrb	w1, [x0, #10]
    7bf4:	tbnz	w1, #4, 7d5c <grub_mod_fini+0x7a34>
    7bf8:	ldr	x1, [x19, #8]
    7bfc:	ldrb	w2, [x0, #8]
    7c00:	ldrb	w1, [x1, x24]
    7c04:	cmp	w2, #0x5
    7c08:	b.eq	7d40 <grub_mod_fini+0x7a18>  // b.none
    7c0c:	b.hi	7d34 <grub_mod_fini+0x7a0c>  // b.pmore
    7c10:	cmp	w2, #0x1
    7c14:	b.eq	7e64 <grub_mod_fini+0x7b3c>  // b.none
    7c18:	cmp	w2, #0x3
    7c1c:	b.ne	7cd0 <grub_mod_fini+0x79a8>  // b.any
    7c20:	ldr	x2, [x0]
    7c24:	ubfx	x3, x1, #6, #2
    7c28:	ldr	x2, [x2, x3, lsl #3]
    7c2c:	lsr	x1, x2, x1
    7c30:	tbz	w1, #0, 7cd0 <grub_mod_fini+0x79a8>
    7c34:	ldr	w8, [x0, #8]
    7c38:	tst	w8, #0x3ff00
    7c3c:	b.eq	7c70 <grub_mod_fini+0x7948>  // b.none
    7c40:	ldr	w2, [x19, #120]
    7c44:	mov	w1, w27
    7c48:	mov	x0, x19
    7c4c:	bl	1c78 <grub_mod_fini+0x1950>
    7c50:	ubfx	x1, x8, #8, #10
    7c54:	tbz	w8, #10, 7e7c <grub_mod_fini+0x7b54>
    7c58:	tbz	w0, #0, 7cd0 <grub_mod_fini+0x79a8>
    7c5c:	tbnz	w1, #3, 7cd0 <grub_mod_fini+0x79a8>
    7c60:	tbz	w1, #5, 7c68 <grub_mod_fini+0x7940>
    7c64:	tbz	w0, #1, 7cd0 <grub_mod_fini+0x79a8>
    7c68:	tbz	w1, #7, 7c70 <grub_mod_fini+0x7948>
    7c6c:	tbz	w0, #3, 7cd0 <grub_mod_fini+0x79a8>
    7c70:	ldr	x0, [x20]
    7c74:	ldr	x1, [x0, x21]
    7c78:	cbz	x1, 7cd0 <grub_mod_fini+0x79a8>
    7c7c:	ldr	w0, [x1, #12]
    7c80:	cmp	w0, #0x0
    7c84:	b.le	7cd0 <grub_mod_fini+0x79a8>
    7c88:	ldr	x3, [x28, #24]
    7c8c:	sub	w0, w0, #0x1
    7c90:	mov	w2, #0x0                   	// #0
    7c94:	ldr	x4, [x1, #16]
    7c98:	ldr	w3, [x3, x25, lsl #2]
    7c9c:	b	7cb8 <grub_mod_fini+0x7990>
    7ca0:	lsr	w8, w1, #1
    7ca4:	lsr	w1, w1, #1
    7ca8:	ldr	w8, [x4, x8, lsl #2]
    7cac:	cmp	w3, w8
    7cb0:	b.gt	7d2c <grub_mod_fini+0x7a04>
    7cb4:	mov	w0, w1
    7cb8:	add	w1, w0, w2
    7cbc:	cmp	w0, w2
    7cc0:	b.hi	7ca0 <grub_mod_fini+0x7978>  // b.pmore
    7cc4:	ldr	w0, [x4, w2, uxtw #2]
    7cc8:	cmp	w3, w0
    7ccc:	b.eq	7e14 <grub_mod_fini+0x7aec>  // b.none
    7cd0:	ldr	w0, [x23, #28]
    7cd4:	add	x22, x22, #0x1
    7cd8:	cmp	w0, w22
    7cdc:	b.gt	7bd8 <grub_mod_fini+0x78b0>
    7ce0:	add	x3, sp, #0x90
    7ce4:	mov	w2, w27
    7ce8:	mov	x1, x20
    7cec:	mov	x0, x19
    7cf0:	sub	x24, x24, #0x1
    7cf4:	bl	71e0 <grub_mod_fini+0x6eb8>
    7cf8:	sub	x21, x21, #0x8
    7cfc:	mov	w22, w0
    7d00:	cbz	w0, 7b84 <grub_mod_fini+0x785c>
    7d04:	ldp	x23, x24, [sp, #48]
    7d08:	ldp	x25, x26, [sp, #64]
    7d0c:	ldr	x0, [sp, #152]
    7d10:	bl	0 <grub_free>
    7d14:	mov	w0, w22
    7d18:	ldp	x19, x20, [sp, #16]
    7d1c:	ldp	x21, x22, [sp, #32]
    7d20:	ldp	x27, x28, [sp, #80]
    7d24:	ldp	x29, x30, [sp], #160
    7d28:	ret
    7d2c:	add	w2, w1, #0x1
    7d30:	b	7cb8 <grub_mod_fini+0x7990>
    7d34:	cmp	w2, #0x7
    7d38:	b.ne	7cd0 <grub_mod_fini+0x79a8>  // b.any
    7d3c:	tbnz	w1, #7, 7cd0 <grub_mod_fini+0x79a8>
    7d40:	cmp	w1, #0xa
    7d44:	b.eq	7e88 <grub_mod_fini+0x7b60>  // b.none
    7d48:	cbnz	w1, 7c34 <grub_mod_fini+0x790c>
    7d4c:	ldr	x1, [x19, #112]
    7d50:	ldr	x1, [x1, #200]
    7d54:	tbz	w1, #7, 7c34 <grub_mod_fini+0x790c>
    7d58:	b	7cd0 <grub_mod_fini+0x79a8>
    7d5c:	ldr	x10, [x19, #112]
    7d60:	mov	w4, w27
    7d64:	ldr	w9, [x20, #20]
    7d68:	mov	x3, x19
    7d6c:	mov	x1, x10
    7d70:	mov	w2, w26
    7d74:	str	w9, [sp, #108]
    7d78:	stp	x8, x10, [sp, #112]
    7d7c:	ldr	x0, [x1], #200
    7d80:	bl	3038 <grub_mod_fini+0x2d10>
    7d84:	cmp	w0, #0x0
    7d88:	ldr	x8, [sp, #112]
    7d8c:	b.le	7e74 <grub_mod_fini+0x7b4c>
    7d90:	ldr	w9, [sp, #108]
    7d94:	add	w1, w27, w0
    7d98:	cmp	w9, w1
    7d9c:	b.lt	7e18 <grub_mod_fini+0x7af0>  // b.tstop
    7da0:	ldr	x2, [x20]
    7da4:	ldr	x10, [sp, #120]
    7da8:	ldr	x1, [x2, w1, sxtw #3]
    7dac:	cbz	x1, 7e08 <grub_mod_fini+0x7ae0>
    7db0:	ldr	w2, [x1, #12]
    7db4:	cmp	w2, #0x0
    7db8:	b.le	7e08 <grub_mod_fini+0x7ae0>
    7dbc:	ldr	x4, [x10, #24]
    7dc0:	sub	w2, w2, #0x1
    7dc4:	mov	w3, #0x0                   	// #0
    7dc8:	ldr	x10, [x1, #16]
    7dcc:	ldr	w9, [x4, x25, lsl #2]
    7dd0:	b	7dec <grub_mod_fini+0x7ac4>
    7dd4:	lsr	w4, w1, #1
    7dd8:	lsr	w1, w1, #1
    7ddc:	ldr	w4, [x10, x4, lsl #2]
    7de0:	cmp	w9, w4
    7de4:	b.gt	7e98 <grub_mod_fini+0x7b70>
    7de8:	mov	w2, w1
    7dec:	add	w1, w2, w3
    7df0:	cmp	w2, w3
    7df4:	b.hi	7dd4 <grub_mod_fini+0x7aac>  // b.pmore
    7df8:	ldr	w1, [x10, w3, uxtw #2]
    7dfc:	cmp	w9, w1
    7e00:	b.eq	7e18 <grub_mod_fini+0x7af0>  // b.none
    7e04:	nop
    7e08:	ldr	x0, [x28]
    7e0c:	add	x0, x0, x8
    7e10:	b	7bf8 <grub_mod_fini+0x78d0>
    7e14:	mov	w0, #0x1                   	// #1
    7e18:	ldr	w1, [x20, #28]
    7e1c:	cbz	w1, 7e48 <grub_mod_fini+0x7b20>
    7e20:	ldr	x3, [x28, #24]
    7e24:	add	w4, w27, w0
    7e28:	ldp	x2, x1, [sp, #128]
    7e2c:	mov	w6, w27
    7e30:	ldr	w3, [x3, x25, lsl #2]
    7e34:	mov	w5, w26
    7e38:	mov	x0, x19
    7e3c:	bl	2dc8 <grub_mod_fini+0x2aa0>
    7e40:	tst	w0, #0xff
    7e44:	b.ne	7cd0 <grub_mod_fini+0x79a8>  // b.any
    7e48:	mov	w1, w26
    7e4c:	add	x0, sp, #0x90
    7e50:	bl	16f8 <grub_mod_fini+0x13d0>
    7e54:	tst	w0, #0xff
    7e58:	b.ne	7cd0 <grub_mod_fini+0x79a8>  // b.any
    7e5c:	mov	w22, #0xc                   	// #12
    7e60:	b	7d04 <grub_mod_fini+0x79dc>
    7e64:	ldrb	w2, [x0]
    7e68:	cmp	w2, w1
    7e6c:	b.eq	7c34 <grub_mod_fini+0x790c>  // b.none
    7e70:	b	7cd0 <grub_mod_fini+0x79a8>
    7e74:	b.eq	7e08 <grub_mod_fini+0x7ae0>  // b.none
    7e78:	b	7e18 <grub_mod_fini+0x7af0>
    7e7c:	tbz	w1, #3, 7c60 <grub_mod_fini+0x7938>
    7e80:	tbz	w0, #0, 7c60 <grub_mod_fini+0x7938>
    7e84:	b	7cd0 <grub_mod_fini+0x79a8>
    7e88:	ldr	x1, [x19, #112]
    7e8c:	ldr	x1, [x1, #200]
    7e90:	tbnz	w1, #6, 7c34 <grub_mod_fini+0x790c>
    7e94:	b	7cd0 <grub_mod_fini+0x79a8>
    7e98:	add	w3, w1, #0x1
    7e9c:	b	7dec <grub_mod_fini+0x7ac4>
    7ea0:	mov	w22, #0x0                   	// #0
    7ea4:	ldp	x23, x24, [sp, #48]
    7ea8:	ldp	x25, x26, [sp, #64]
    7eac:	b	7d0c <grub_mod_fini+0x79e4>
    7eb0:	mov	x2, x21
    7eb4:	mov	w1, #0x0                   	// #0
    7eb8:	bl	0 <grub_memset>
    7ebc:	mov	w22, #0x0                   	// #0
    7ec0:	ldr	x0, [sp, #152]
    7ec4:	bl	0 <grub_free>
    7ec8:	mov	w0, w22
    7ecc:	ldp	x19, x20, [sp, #16]
    7ed0:	ldp	x21, x22, [sp, #32]
    7ed4:	ldp	x23, x24, [sp, #48]
    7ed8:	ldp	x25, x26, [sp, #64]
    7edc:	ldp	x27, x28, [sp, #80]
    7ee0:	ldp	x29, x30, [sp], #160
    7ee4:	ret
    7ee8:	mov	w22, #0xc                   	// #12
    7eec:	mov	w0, w22
    7ef0:	ldp	x19, x20, [sp, #16]
    7ef4:	ldp	x21, x22, [sp, #32]
    7ef8:	ldp	x27, x28, [sp, #80]
    7efc:	ldp	x29, x30, [sp], #160
    7f00:	ret
    7f04:	mov	w22, w0
    7f08:	b	7d0c <grub_mod_fini+0x79e4>
    7f0c:	nop
    7f10:	stp	x29, x30, [sp, #-96]!
    7f14:	mov	x29, sp
    7f18:	stp	x19, x20, [sp, #16]
    7f1c:	mov	x20, x3
    7f20:	stp	x21, x22, [sp, #32]
    7f24:	mov	x21, x0
    7f28:	mov	x22, x5
    7f2c:	mov	x0, #0x20                  	// #32
    7f30:	stp	x23, x24, [sp, #48]
    7f34:	and	w23, w4, #0xff
    7f38:	stp	x25, x26, [sp, #64]
    7f3c:	mov	x25, x1
    7f40:	mov	x26, x2
    7f44:	str	wzr, [sp, #92]
    7f48:	bl	0 <grub_zalloc>
    7f4c:	mov	x19, x0
    7f50:	cbz	x0, 81e0 <grub_mod_fini+0x7eb8>
    7f54:	mov	x0, #0x38                  	// #56
    7f58:	bl	0 <grub_zalloc>
    7f5c:	mov	x24, x0
    7f60:	cbz	x0, 824c <grub_mod_fini+0x7f24>
    7f64:	ldrb	w1, [x0, #32]
    7f68:	mov	x5, x26
    7f6c:	mov	x0, x25
    7f70:	add	x4, sp, #0x5c
    7f74:	add	x3, x24, #0x34
    7f78:	add	x2, x24, #0x18
    7f7c:	bfxil	w1, w23, #0, #1
    7f80:	strb	w1, [x24, #32]
    7f84:	mov	x6, #0x0                   	// #0
    7f88:	mov	x1, x19
    7f8c:	bl	3508 <grub_mod_fini+0x31e0>
    7f90:	mov	w25, w0
    7f94:	cbnz	w0, 8264 <grub_mod_fini+0x7f3c>
    7f98:	ldrb	w2, [x20]
    7f9c:	mov	x0, #0x1                   	// #1
    7fa0:	cbz	w2, 7fc4 <grub_mod_fini+0x7c9c>
    7fa4:	nop
    7fa8:	ubfx	x4, x2, #6, #2
    7fac:	lsl	x2, x0, x2
    7fb0:	ldr	x1, [x19, x4, lsl #3]
    7fb4:	orr	x2, x1, x2
    7fb8:	str	x2, [x19, x4, lsl #3]
    7fbc:	ldrb	w2, [x20, #1]!
    7fc0:	cbnz	w2, 7fa8 <grub_mod_fini+0x7c80>
    7fc4:	cbz	w23, 7fe8 <grub_mod_fini+0x7cc0>
    7fc8:	ldp	x3, x2, [x19]
    7fcc:	ldp	x1, x0, [x19, #16]
    7fd0:	mvn	x3, x3
    7fd4:	mvn	x2, x2
    7fd8:	stp	x3, x2, [x19]
    7fdc:	mvn	x1, x1
    7fe0:	mvn	x0, x0
    7fe4:	stp	x1, x0, [x19, #16]
    7fe8:	ldr	w0, [x21, #164]
    7fec:	cmp	w0, #0x1
    7ff0:	b.le	8034 <grub_mod_fini+0x7d0c>
    7ff4:	ldr	x0, [x21, #120]
    7ff8:	ldp	x1, x3, [x19]
    7ffc:	ldr	x2, [x0]
    8000:	and	x1, x1, x2
    8004:	str	x1, [x19]
    8008:	ldr	x2, [x19, #16]
    800c:	ldr	x4, [x0, #8]
    8010:	ldr	x1, [x19, #24]
    8014:	and	x3, x3, x4
    8018:	str	x3, [x19, #8]
    801c:	ldr	x3, [x0, #16]
    8020:	and	x2, x2, x3
    8024:	str	x2, [x19, #16]
    8028:	ldr	x0, [x0, #24]
    802c:	and	x0, x1, x0
    8030:	str	x0, [x19, #24]
    8034:	ldr	w1, [x21, #128]
    8038:	cmp	w1, #0xf
    803c:	b.eq	82a0 <grub_mod_fini+0x7f78>  // b.none
    8040:	sbfiz	x3, x1, #6, #32
    8044:	sxtw	x0, w1
    8048:	add	w2, w1, #0x1
    804c:	add	x23, x3, #0x8
    8050:	ldr	x1, [x21, #112]
    8054:	add	x3, x3, #0x30
    8058:	lsl	x0, x0, #6
    805c:	add	x5, x1, x3
    8060:	add	x20, x1, x0
    8064:	str	w2, [x21, #128]
    8068:	add	x0, x0, #0x20
    806c:	mov	w2, #0x3                   	// #3
    8070:	add	x0, x1, x0
    8074:	mov	w4, #0xffffffff            	// #-1
    8078:	stp	xzr, xzr, [x20, #8]
    807c:	adds	x23, x1, x23
    8080:	str	xzr, [x20, #24]
    8084:	str	x19, [x1, x3]
    8088:	strb	w2, [x5, #8]
    808c:	ldrb	w2, [x0, #26]
    8090:	and	w2, w2, #0xfffffff3
    8094:	strb	w2, [x0, #26]
    8098:	stp	xzr, xzr, [x20, #32]
    809c:	str	w4, [x20, #64]
    80a0:	b.eq	81ac <grub_mod_fini+0x7e84>  // b.none
    80a4:	ldr	w0, [x21, #164]
    80a8:	cmp	w0, #0x1
    80ac:	b.le	8204 <grub_mod_fini+0x7edc>
    80b0:	ldrb	w0, [x21, #160]
    80b4:	ldr	w2, [x21, #128]
    80b8:	orr	w0, w0, #0x2
    80bc:	strb	w0, [x21, #160]
    80c0:	cmp	w2, #0xf
    80c4:	b.eq	82d0 <grub_mod_fini+0x7fa8>  // b.none
    80c8:	sbfiz	x3, x2, #6, #32
    80cc:	sxtw	x0, w2
    80d0:	add	x4, x3, #0x30
    80d4:	add	w2, w2, #0x1
    80d8:	add	x3, x3, #0x8
    80dc:	lsl	x0, x0, #6
    80e0:	add	x6, x1, x4
    80e4:	add	x22, x1, x0
    80e8:	str	w2, [x21, #128]
    80ec:	add	x0, x0, #0x20
    80f0:	mov	w2, #0x6                   	// #6
    80f4:	add	x0, x1, x0
    80f8:	mov	w5, #0xffffffff            	// #-1
    80fc:	stp	xzr, xzr, [x22, #8]
    8100:	add	x25, x1, x3
    8104:	str	xzr, [x22, #24]
    8108:	str	x24, [x1, x4]
    810c:	strb	w2, [x6, #8]
    8110:	ldrb	w2, [x0, #26]
    8114:	and	w2, w2, #0xfffffff3
    8118:	strb	w2, [x0, #26]
    811c:	stp	xzr, xzr, [x22, #32]
    8120:	str	w5, [x22, #64]
    8124:	ldr	w3, [x21, #128]
    8128:	cmp	w3, #0xf
    812c:	b.eq	8300 <grub_mod_fini+0x7fd8>  // b.none
    8130:	sbfiz	x4, x3, #6, #32
    8134:	sxtw	x2, w3
    8138:	add	x19, x4, #0x8
    813c:	add	x5, x4, #0x30
    8140:	add	w4, w3, #0x1
    8144:	lsl	x2, x2, #6
    8148:	add	x5, x1, x5
    814c:	add	x3, x1, x2
    8150:	add	x2, x2, #0x20
    8154:	str	w4, [x21, #128]
    8158:	add	x2, x1, x2
    815c:	mov	w6, #0xa                   	// #10
    8160:	mov	w4, #0xffffffff            	// #-1
    8164:	stp	xzr, x23, [x3, #8]
    8168:	add	x19, x1, x19
    816c:	str	x25, [x3, #24]
    8170:	strb	w6, [x5, #8]
    8174:	ldrb	w0, [x2, #26]
    8178:	and	w0, w0, #0xfffffff3
    817c:	strb	w0, [x2, #26]
    8180:	stp	xzr, xzr, [x3, #32]
    8184:	str	w4, [x3, #64]
    8188:	str	x19, [x20, #8]
    818c:	str	x19, [x22, #8]
    8190:	mov	x0, x19
    8194:	ldp	x19, x20, [sp, #16]
    8198:	ldp	x21, x22, [sp, #32]
    819c:	ldp	x23, x24, [sp, #48]
    81a0:	ldp	x25, x26, [sp, #64]
    81a4:	ldp	x29, x30, [sp], #96
    81a8:	ret
    81ac:	mov	x0, x19
    81b0:	bl	0 <grub_free>
    81b4:	ldr	x0, [x24]
    81b8:	mov	x19, #0x0                   	// #0
    81bc:	bl	0 <grub_free>
    81c0:	ldr	x0, [x24, #8]
    81c4:	bl	0 <grub_free>
    81c8:	ldr	x0, [x24, #16]
    81cc:	bl	0 <grub_free>
    81d0:	ldr	x0, [x24, #24]
    81d4:	bl	0 <grub_free>
    81d8:	mov	x0, x24
    81dc:	bl	0 <grub_free>
    81e0:	mov	w0, #0xc                   	// #12
    81e4:	str	w0, [x22]
    81e8:	mov	x0, x19
    81ec:	ldp	x19, x20, [sp, #16]
    81f0:	ldp	x21, x22, [sp, #32]
    81f4:	ldp	x23, x24, [sp, #48]
    81f8:	ldp	x25, x26, [sp, #64]
    81fc:	ldp	x29, x30, [sp], #96
    8200:	ret
    8204:	ldr	x0, [x24]
    8208:	mov	x19, x23
    820c:	bl	0 <grub_free>
    8210:	ldr	x0, [x24, #8]
    8214:	bl	0 <grub_free>
    8218:	ldr	x0, [x24, #16]
    821c:	bl	0 <grub_free>
    8220:	ldr	x0, [x24, #24]
    8224:	bl	0 <grub_free>
    8228:	mov	x0, x24
    822c:	bl	0 <grub_free>
    8230:	mov	x0, x19
    8234:	ldp	x19, x20, [sp, #16]
    8238:	ldp	x21, x22, [sp, #32]
    823c:	ldp	x23, x24, [sp, #48]
    8240:	ldp	x25, x26, [sp, #64]
    8244:	ldp	x29, x30, [sp], #96
    8248:	ret
    824c:	mov	x0, x19
    8250:	bl	0 <grub_free>
    8254:	mov	w0, #0xc                   	// #12
    8258:	mov	x19, #0x0                   	// #0
    825c:	str	w0, [x22]
    8260:	b	8190 <grub_mod_fini+0x7e68>
    8264:	mov	x0, x19
    8268:	bl	0 <grub_free>
    826c:	ldr	x0, [x24]
    8270:	mov	x19, #0x0                   	// #0
    8274:	bl	0 <grub_free>
    8278:	ldr	x0, [x24, #8]
    827c:	bl	0 <grub_free>
    8280:	ldr	x0, [x24, #16]
    8284:	bl	0 <grub_free>
    8288:	ldr	x0, [x24, #24]
    828c:	bl	0 <grub_free>
    8290:	mov	x0, x24
    8294:	bl	0 <grub_free>
    8298:	str	w25, [x22]
    829c:	b	8190 <grub_mod_fini+0x7e68>
    82a0:	mov	x0, #0x3c8                 	// #968
    82a4:	bl	0 <grub_malloc>
    82a8:	mov	x1, x0
    82ac:	cbz	x0, 81ac <grub_mod_fini+0x7e84>
    82b0:	ldr	x0, [x21, #112]
    82b4:	str	x0, [x1]
    82b8:	mov	x3, #0x30                  	// #48
    82bc:	mov	w2, #0x1                   	// #1
    82c0:	mov	x23, #0x8                   	// #8
    82c4:	mov	x0, #0x0                   	// #0
    82c8:	str	x1, [x21, #112]
    82cc:	b	8058 <grub_mod_fini+0x7d30>
    82d0:	mov	x0, #0x3c8                 	// #968
    82d4:	bl	0 <grub_malloc>
    82d8:	mov	x1, x0
    82dc:	cbz	x0, 81ac <grub_mod_fini+0x7e84>
    82e0:	ldr	x0, [x21, #112]
    82e4:	str	x0, [x1]
    82e8:	mov	x3, #0x8                   	// #8
    82ec:	mov	w2, #0x1                   	// #1
    82f0:	mov	x4, #0x30                  	// #48
    82f4:	mov	x0, #0x0                   	// #0
    82f8:	str	x1, [x21, #112]
    82fc:	b	80dc <grub_mod_fini+0x7db4>
    8300:	mov	x0, #0x3c8                 	// #968
    8304:	bl	0 <grub_malloc>
    8308:	mov	x1, x0
    830c:	cbz	x0, 8330 <grub_mod_fini+0x8008>
    8310:	ldr	x0, [x21, #112]
    8314:	str	x0, [x1]
    8318:	mov	w4, #0x1                   	// #1
    831c:	mov	x5, #0x30                  	// #48
    8320:	mov	x19, #0x8                   	// #8
    8324:	mov	x2, #0x0                   	// #0
    8328:	str	x1, [x21, #112]
    832c:	b	8144 <grub_mod_fini+0x7e1c>
    8330:	mov	x19, #0x0                   	// #0
    8334:	b	8190 <grub_mod_fini+0x7e68>
    8338:	stp	x29, x30, [sp, #-192]!
    833c:	mov	x29, sp
    8340:	stp	x19, x20, [sp, #16]
    8344:	mov	x19, x0
    8348:	stp	x21, x22, [sp, #32]
    834c:	ldr	w20, [x19, #44]
    8350:	stp	x23, x24, [sp, #48]
    8354:	ldr	w23, [x0, #52]
    8358:	ldrb	w1, [x0, #98]
    835c:	ldr	w0, [x0, #64]
    8360:	cmp	w23, w0
    8364:	csel	w23, w23, w0, le
    8368:	cbnz	w1, 8374 <grub_mod_fini+0x804c>
    836c:	ldr	x0, [x19, #80]
    8370:	cbz	x0, 8484 <grub_mod_fini+0x815c>
    8374:	ldr	w21, [x19, #48]
    8378:	cmp	w20, w23
    837c:	b.ge	8468 <grub_mod_fini+0x8140>  // b.tcont
    8380:	stp	x27, x28, [sp, #80]
    8384:	sub	w27, w23, w20
    8388:	sxtw	x28, w27
    838c:	ldr	x7, [x19, #80]
    8390:	ldp	w6, w5, [x19, #32]
    8394:	cbnz	x7, 87fc <grub_mod_fini+0x84d4>
    8398:	ldrsw	x1, [x19, #40]
    839c:	ldr	x0, [x19]
    83a0:	add	x1, x1, w21, sxtw
    83a4:	adds	x0, x0, x1
    83a8:	b.eq	8ac0 <grub_mod_fini+0x8798>  // b.none
    83ac:	str	wzr, [sp, #124]
    83b0:	add	x28, x0, x28
    83b4:	cmp	x28, x0
    83b8:	b.ls	8a50 <grub_mod_fini+0x8728>  // b.plast
    83bc:	mov	x9, x0
    83c0:	add	x8, sp, #0x7c
    83c4:	mov	w2, w6
    83c8:	mov	w3, w5
    83cc:	mov	x1, x0
    83d0:	mov	w13, #0x3                   	// #3
    83d4:	mov	w12, #0x2                   	// #2
    83d8:	mov	w11, #0x1                   	// #1
    83dc:	ldrb	w4, [x1]
    83e0:	cbz	w3, 8880 <grub_mod_fini+0x8558>
    83e4:	and	w10, w4, #0xc0
    83e8:	cmp	w10, #0x80
    83ec:	b.eq	88b0 <grub_mod_fini+0x8588>  // b.none
    83f0:	mov	x0, #0xffffffffffffffff    	// #-1
    83f4:	str	wzr, [x19, #36]
    83f8:	ldr	w1, [x19, #40]
    83fc:	ldr	x2, [x19]
    8400:	add	w1, w21, w1
    8404:	ldrb	w1, [x2, w1, sxtw]
    8408:	cbnz	x7, 8de4 <grub_mod_fini+0x8abc>
    840c:	ldr	x4, [x19, #8]
    8410:	sxtw	x3, w20
    8414:	sbfiz	x2, x20, #2, #32
    8418:	strb	w1, [x4, w20, sxtw]
    841c:	ldrb	w4, [x19, #100]
    8420:	cbnz	w4, 8dd8 <grub_mod_fini+0x8ab0>
    8424:	ldr	x2, [x19, #16]
    8428:	add	w21, w21, #0x1
    842c:	add	w20, w20, #0x1
    8430:	cmn	x0, #0x1
    8434:	str	w1, [x2, x3, lsl #2]
    8438:	b.eq	8d9c <grub_mod_fini+0x8a74>  // b.none
    843c:	ldp	x27, x28, [sp, #80]
    8440:	b	8378 <grub_mod_fini+0x8050>
    8444:	cmn	x0, #0x1
    8448:	b.eq	8910 <grub_mod_fini+0x85e8>  // b.none
    844c:	add	x1, x0, x24
    8450:	ldrsw	x0, [x19, #52]
    8454:	cmp	x1, x0
    8458:	b.ls	8b4c <grub_mod_fini+0x8824>  // b.plast
    845c:	ldp	x25, x26, [sp, #64]
    8460:	ldp	x27, x28, [sp, #80]
    8464:	stp	w6, w5, [x19, #32]
    8468:	mov	w0, #0x0                   	// #0
    846c:	stp	w20, w21, [x19, #44]
    8470:	ldp	x19, x20, [sp, #16]
    8474:	ldp	x21, x22, [sp, #32]
    8478:	ldp	x23, x24, [sp, #48]
    847c:	ldp	x29, x30, [sp], #192
    8480:	ret
    8484:	ldrb	w0, [x19, #100]
    8488:	cbnz	w0, 8374 <grub_mod_fini+0x804c>
    848c:	cmp	w20, w23
    8490:	b.ge	86f4 <grub_mod_fini+0x83cc>  // b.tcont
    8494:	add	x21, sp, #0x84
    8498:	mov	w22, #0x3                   	// #3
    849c:	stp	x25, x26, [sp, #64]
    84a0:	stp	x27, x28, [sp, #80]
    84a4:	nop
    84a8:	ldp	w7, w1, [x19, #36]
    84ac:	ldr	x4, [x19]
    84b0:	add	w6, w1, w20
    84b4:	sxtw	x13, w6
    84b8:	ldrb	w2, [x4, w6, sxtw]
    84bc:	and	w0, w2, #0xffffff80
    84c0:	orr	w0, w0, w7
    84c4:	cbz	w0, 8798 <grub_mod_fini+0x8470>
    84c8:	sxtw	x24, w20
    84cc:	sub	w27, w23, w20
    84d0:	add	x1, x24, w1, sxtw
    84d4:	ldr	w11, [x19, #32]
    84d8:	adds	x1, x4, x1
    84dc:	sxtw	x28, w27
    84e0:	b.eq	8778 <grub_mod_fini+0x8450>  // b.none
    84e4:	str	wzr, [sp, #124]
    84e8:	add	x10, x1, x28
    84ec:	cmp	x1, x10
    84f0:	b.cs	8724 <grub_mod_fini+0x83fc>  // b.hs, b.nlast
    84f4:	mov	x8, x1
    84f8:	add	x9, sp, #0x7c
    84fc:	mov	w3, w11
    8500:	mov	w2, w7
    8504:	mov	x0, x8
    8508:	mov	w15, #0x2                   	// #2
    850c:	mov	w14, #0x1                   	// #1
    8510:	ldrb	w5, [x0]
    8514:	cbz	w2, 8548 <grub_mod_fini+0x8220>
    8518:	and	w12, w5, #0xc0
    851c:	cmp	w12, #0x80
    8520:	b.eq	8590 <grub_mod_fini+0x8268>  // b.none
    8524:	str	wzr, [x19, #36]
    8528:	ldr	x1, [x19, #8]
    852c:	add	w20, w20, #0x1
    8530:	ldrb	w0, [x4, w6, sxtw]
    8534:	strb	w0, [x1, x24]
    8538:	ldr	x1, [x19, #16]
    853c:	str	w0, [x1, x24, lsl #2]
    8540:	stp	w11, w7, [x19, #32]
    8544:	b	86e4 <grub_mod_fini+0x83bc>
    8548:	tbz	w5, #7, 878c <grub_mod_fini+0x8464>
    854c:	and	w2, w5, #0xe0
    8550:	cmp	w2, #0xc0
    8554:	b.eq	8700 <grub_mod_fini+0x83d8>  // b.none
    8558:	and	w2, w5, #0xf0
    855c:	cmp	w2, #0xe0
    8560:	b.eq	8860 <grub_mod_fini+0x8538>  // b.none
    8564:	and	w2, w5, #0xf8
    8568:	cmp	w2, #0xf0
    856c:	b.eq	8870 <grub_mod_fini+0x8548>  // b.none
    8570:	ldr	x1, [x19, #8]
    8574:	add	w20, w20, #0x1
    8578:	ldrb	w0, [x4, x13]
    857c:	strb	w0, [x1, x24]
    8580:	ldr	x1, [x19, #16]
    8584:	str	w0, [x1, x24, lsl #2]
    8588:	stp	w11, w7, [x19, #32]
    858c:	b	86e4 <grub_mod_fini+0x83bc>
    8590:	bfi	w5, w3, #6, #26
    8594:	sub	w2, w2, #0x1
    8598:	stp	w5, w2, [x19, #32]
    859c:	mov	w3, w5
    85a0:	cmp	w2, #0x1
    85a4:	b.eq	87c8 <grub_mod_fini+0x84a0>  // b.none
    85a8:	cmp	w5, #0xf
    85ac:	ccmp	w2, #0x2, #0x0, ls  // ls = plast
    85b0:	b.eq	87d0 <grub_mod_fini+0x84a8>  // b.none
    85b4:	cbnz	w2, 8718 <grub_mod_fini+0x83f0>
    85b8:	cbz	x9, 85c0 <grub_mod_fini+0x8298>
    85bc:	str	w3, [x9]
    85c0:	cbz	w3, 87e0 <grub_mod_fini+0x84b8>
    85c4:	sub	x0, x0, x8
    85c8:	cmn	x0, #0x4
    85cc:	add	x26, x0, #0x1
    85d0:	b.hi	8da8 <grub_mod_fini+0x8a80>  // b.pmore
    85d4:	ldr	w25, [sp, #124]
    85d8:	sub	w0, w25, #0x61
    85dc:	cmp	w0, #0x19
    85e0:	b.ls	8744 <grub_mod_fini+0x841c>  // b.plast
    85e4:	ldr	x0, [x19, #8]
    85e8:	mov	x2, x26
    85ec:	add	x0, x0, x24
    85f0:	bl	0 <grub_memmove>
    85f4:	ldr	x2, [x19, #16]
    85f8:	add	w1, w20, #0x1
    85fc:	add	w5, w20, w26
    8600:	lsl	x3, x24, #2
    8604:	cmp	w1, w5
    8608:	str	w25, [x2, x24, lsl #2]
    860c:	b.ge	87d8 <grub_mod_fini+0x84b0>  // b.tcont
    8610:	add	x3, x3, #0x4
    8614:	sub	w4, w26, #0x2
    8618:	add	x0, x2, x3
    861c:	cmp	w4, #0x5
    8620:	sxtw	x4, w1
    8624:	ubfx	w0, w0, #2, #1
    8628:	b.ls	8680 <grub_mod_fini+0x8358>  // b.plast
    862c:	cbz	w0, 863c <grub_mod_fini+0x8314>
    8630:	add	w1, w20, #0x2
    8634:	mov	w6, #0xffffffff            	// #-1
    8638:	str	w6, [x2, x3]
    863c:	mvn	w3, w0
    8640:	mov	w0, w0
    8644:	add	w26, w3, w26
    8648:	add	x0, x0, x4
    864c:	mov	x4, #0xffffffffffffffff    	// #-1
    8650:	lsr	w3, w26, #1
    8654:	add	x0, x2, x0, lsl #2
    8658:	add	x3, x0, w3, uxtw #3
    865c:	nop
    8660:	str	x4, [x0], #8
    8664:	cmp	x0, x3
    8668:	b.ne	8660 <grub_mod_fini+0x8338>  // b.any
    866c:	and	w0, w26, #0xfffffffe
    8670:	add	w1, w1, w0
    8674:	cmp	w0, w26
    8678:	b.eq	86e0 <grub_mod_fini+0x83b8>  // b.none
    867c:	sxtw	x4, w1
    8680:	mov	w3, #0xffffffff            	// #-1
    8684:	str	w3, [x2, x4, lsl #2]
    8688:	add	w6, w1, #0x1
    868c:	lsl	x0, x4, #2
    8690:	cmp	w5, w6
    8694:	b.le	86e0 <grub_mod_fini+0x83b8>
    8698:	add	x0, x2, x0
    869c:	add	w2, w1, #0x2
    86a0:	cmp	w5, w2
    86a4:	str	w3, [x0, #4]
    86a8:	b.le	86e0 <grub_mod_fini+0x83b8>
    86ac:	str	w3, [x0, #8]
    86b0:	add	w2, w1, #0x3
    86b4:	cmp	w5, w2
    86b8:	b.le	86e0 <grub_mod_fini+0x83b8>
    86bc:	str	w3, [x0, #12]
    86c0:	add	w2, w1, #0x4
    86c4:	cmp	w5, w2
    86c8:	b.le	86e0 <grub_mod_fini+0x83b8>
    86cc:	str	w3, [x0, #16]
    86d0:	add	w1, w1, #0x5
    86d4:	cmp	w5, w1
    86d8:	b.le	86e0 <grub_mod_fini+0x83b8>
    86dc:	str	w3, [x0, #20]
    86e0:	mov	w20, w5
    86e4:	cmp	w23, w20
    86e8:	b.gt	84a8 <grub_mod_fini+0x8180>
    86ec:	ldp	x25, x26, [sp, #64]
    86f0:	ldp	x27, x28, [sp, #80]
    86f4:	mov	w0, #0x0                   	// #0
    86f8:	stp	w20, w20, [x19, #44]
    86fc:	b	8470 <grub_mod_fini+0x8148>
    8700:	and	w3, w5, #0x1f
    8704:	stp	w3, w14, [x19, #32]
    8708:	tst	w5, #0x1e
    870c:	b.eq	87d0 <grub_mod_fini+0x84a8>  // b.none
    8710:	mov	w2, #0x1                   	// #1
    8714:	nop
    8718:	add	x0, x0, #0x1
    871c:	cmp	x0, x10
    8720:	b.cc	8510 <grub_mod_fini+0x81e8>  // b.lo, b.ul, b.last
    8724:	ldr	w1, [x19, #52]
    8728:	ldr	w0, [x19, #64]
    872c:	cmp	w1, w0
    8730:	b.ge	87e0 <grub_mod_fini+0x84b8>  // b.tcont
    8734:	ldp	x25, x26, [sp, #64]
    8738:	ldp	x27, x28, [sp, #80]
    873c:	stp	w11, w7, [x19, #32]
    8740:	b	86f4 <grub_mod_fini+0x83cc>
    8744:	sub	w25, w25, #0x20
    8748:	mov	x1, x21
    874c:	mov	w2, w25
    8750:	add	x0, sp, #0x80
    8754:	bl	0 <grub_encode_utf8_character>
    8758:	cmp	x26, x0
    875c:	b.ne	8854 <grub_mod_fini+0x852c>  // b.any
    8760:	ldr	x0, [x19, #8]
    8764:	mov	x2, x26
    8768:	add	x1, sp, #0x80
    876c:	add	x0, x0, x24
    8770:	bl	0 <grub_memmove>
    8774:	b	85f4 <grub_mod_fini+0x82cc>
    8778:	adrp	x0, 0 <grub_mod_init-0x288>
    877c:	mov	x9, #0x0                   	// #0
    8780:	ldr	x10, [x0]
    8784:	sub	x8, x10, #0x1
    8788:	b	84fc <grub_mod_fini+0x81d4>
    878c:	mov	w3, w5
    8790:	str	w5, [x19, #32]
    8794:	b	85b8 <grub_mod_fini+0x8290>
    8798:	ldr	x1, [x19, #8]
    879c:	sub	w3, w2, #0x61
    87a0:	sub	w0, w2, #0x20
    87a4:	cmp	w3, #0x1a
    87a8:	and	w0, w0, #0xff
    87ac:	csel	w2, w0, w2, cc  // cc = lo, ul, last
    87b0:	strb	w2, [x1, w20, sxtw]
    87b4:	ldp	x1, x0, [x19, #8]
    87b8:	ldrb	w1, [x1, w20, sxtw]
    87bc:	str	w1, [x0, w20, sxtw #2]
    87c0:	add	w20, w20, #0x1
    87c4:	b	86e4 <grub_mod_fini+0x83bc>
    87c8:	cmp	w5, #0x1f
    87cc:	b.hi	8718 <grub_mod_fini+0x83f0>  // b.pmore
    87d0:	str	xzr, [x19, #32]
    87d4:	b	8528 <grub_mod_fini+0x8200>
    87d8:	mov	w20, w1
    87dc:	b	86e4 <grub_mod_fini+0x83bc>
    87e0:	ldr	x1, [x19, #8]
    87e4:	add	w20, w20, #0x1
    87e8:	ldrb	w0, [x4, w6, sxtw]
    87ec:	strb	w0, [x1, x24]
    87f0:	ldr	x1, [x19, #16]
    87f4:	str	w0, [x1, x24, lsl #2]
    87f8:	b	86e4 <grub_mod_fini+0x83bc>
    87fc:	ldr	w0, [x19, #104]
    8800:	cmp	w27, #0x0
    8804:	add	x22, sp, #0x80
    8808:	ccmp	w0, #0x0, #0x4, gt
    880c:	b.le	884c <grub_mod_fini+0x8524>
    8810:	ldr	w3, [x19, #40]
    8814:	add	x22, sp, #0x80
    8818:	ldr	x2, [x19]
    881c:	add	w3, w21, w3
    8820:	cmp	w27, w0
    8824:	mov	x1, x22
    8828:	csel	w27, w27, w0, le
    882c:	mov	x0, #0x0                   	// #0
    8830:	add	x3, x2, w3, sxtw
    8834:	ldrb	w2, [x3, x0]
    8838:	add	x0, x0, #0x1
    883c:	cmp	w27, w0
    8840:	ldrb	w2, [x7, x2]
    8844:	strb	w2, [x1], #1
    8848:	b.gt	8834 <grub_mod_fini+0x850c>
    884c:	mov	x0, x22
    8850:	b	83ac <grub_mod_fini+0x8084>
    8854:	mov	w21, w20
    8858:	ldp	x25, x26, [sp, #64]
    885c:	b	838c <grub_mod_fini+0x8064>
    8860:	and	w3, w5, #0xf
    8864:	mov	w2, #0x2                   	// #2
    8868:	stp	w3, w15, [x19, #32]
    886c:	b	8718 <grub_mod_fini+0x83f0>
    8870:	and	w3, w5, #0x7
    8874:	mov	w2, #0x3                   	// #3
    8878:	stp	w3, w22, [x19, #32]
    887c:	b	8718 <grub_mod_fini+0x83f0>
    8880:	tbz	w4, #7, 8ab4 <grub_mod_fini+0x878c>
    8884:	and	w2, w4, #0xe0
    8888:	cmp	w2, #0xc0
    888c:	b.eq	8a30 <grub_mod_fini+0x8708>  // b.none
    8890:	and	w2, w4, #0xf0
    8894:	cmp	w2, #0xe0
    8898:	b.eq	8b20 <grub_mod_fini+0x87f8>  // b.none
    889c:	and	w2, w4, #0xf8
    88a0:	cmp	w2, #0xf0
    88a4:	b.eq	8b3c <grub_mod_fini+0x8814>  // b.none
    88a8:	mov	x0, #0xffffffffffffffff    	// #-1
    88ac:	b	83f8 <grub_mod_fini+0x80d0>
    88b0:	bfi	w4, w2, #6, #26
    88b4:	sub	w3, w3, #0x1
    88b8:	stp	w4, w3, [x19, #32]
    88bc:	mov	w2, w4
    88c0:	cmp	w3, #0x1
    88c4:	b.eq	8ad8 <grub_mod_fini+0x87b0>  // b.none
    88c8:	cmp	w3, #0x2
    88cc:	ccmp	w4, #0xf, #0x2, eq  // eq = none
    88d0:	b.ls	8ae0 <grub_mod_fini+0x87b8>  // b.plast
    88d4:	cbnz	w3, 8a44 <grub_mod_fini+0x871c>
    88d8:	cbz	x8, 88e0 <grub_mod_fini+0x85b8>
    88dc:	str	w2, [x8]
    88e0:	cbz	w2, 8d3c <grub_mod_fini+0x8a14>
    88e4:	stp	x25, x26, [sp, #64]
    88e8:	sub	x26, x1, x0
    88ec:	add	x25, x26, #0x1
    88f0:	cmn	x26, #0x4
    88f4:	mov	x0, x25
    88f8:	b.hi	8d64 <grub_mod_fini+0x8a3c>  // b.pmore
    88fc:	ldr	w27, [sp, #124]
    8900:	sxtw	x24, w20
    8904:	sub	w0, w27, #0x61
    8908:	cmp	w0, #0x19
    890c:	b.ls	8a68 <grub_mod_fini+0x8740>  // b.plast
    8910:	ldr	x0, [x19, #8]
    8914:	mov	x1, x9
    8918:	mov	x2, x25
    891c:	add	x0, x0, x24
    8920:	bl	0 <grub_memmove>
    8924:	ldrb	w0, [x19, #100]
    8928:	cbnz	w0, 8afc <grub_mod_fini+0x87d4>
    892c:	ldr	x2, [x19, #16]
    8930:	add	w1, w20, #0x1
    8934:	add	w4, w20, w25
    8938:	add	w21, w21, w25
    893c:	lsl	x5, x24, #2
    8940:	cmp	w1, w4
    8944:	str	w27, [x2, x24, lsl #2]
    8948:	b.ge	8aec <grub_mod_fini+0x87c4>  // b.tcont
    894c:	add	x5, x5, #0x4
    8950:	sub	w25, w25, #0x2
    8954:	add	x0, x2, x5
    8958:	cmp	w25, #0x5
    895c:	mvn	w7, w20
    8960:	sxtw	x3, w1
    8964:	ubfx	w0, w0, #2, #1
    8968:	b.ls	89c0 <grub_mod_fini+0x8698>  // b.plast
    896c:	cbz	w0, 897c <grub_mod_fini+0x8654>
    8970:	add	w1, w20, #0x2
    8974:	mov	w6, #0xffffffff            	// #-1
    8978:	str	w6, [x2, x5]
    897c:	sub	w6, w4, w0
    8980:	mov	w0, w0
    8984:	add	w6, w6, w7
    8988:	add	x0, x0, x3
    898c:	mov	x5, #0xffffffffffffffff    	// #-1
    8990:	lsr	w3, w6, #1
    8994:	add	x0, x2, x0, lsl #2
    8998:	add	x3, x0, w3, uxtw #3
    899c:	nop
    89a0:	str	x5, [x0], #8
    89a4:	cmp	x3, x0
    89a8:	b.ne	89a0 <grub_mod_fini+0x8678>  // b.any
    89ac:	and	w0, w6, #0xfffffffe
    89b0:	add	w1, w1, w0
    89b4:	cmp	w0, w6
    89b8:	b.eq	8a20 <grub_mod_fini+0x86f8>  // b.none
    89bc:	sxtw	x3, w1
    89c0:	mov	w5, #0xffffffff            	// #-1
    89c4:	str	w5, [x2, x3, lsl #2]
    89c8:	add	w6, w1, #0x1
    89cc:	lsl	x0, x3, #2
    89d0:	cmp	w6, w4
    89d4:	b.ge	8a20 <grub_mod_fini+0x86f8>  // b.tcont
    89d8:	add	x2, x2, x0
    89dc:	add	w0, w1, #0x2
    89e0:	cmp	w4, w0
    89e4:	str	w5, [x2, #4]
    89e8:	b.le	8a20 <grub_mod_fini+0x86f8>
    89ec:	str	w5, [x2, #8]
    89f0:	add	w0, w1, #0x3
    89f4:	cmp	w0, w4
    89f8:	b.ge	8a20 <grub_mod_fini+0x86f8>  // b.tcont
    89fc:	str	w5, [x2, #12]
    8a00:	add	w0, w1, #0x4
    8a04:	cmp	w4, w0
    8a08:	b.le	8a20 <grub_mod_fini+0x86f8>
    8a0c:	str	w5, [x2, #16]
    8a10:	add	w1, w1, #0x5
    8a14:	cmp	w4, w1
    8a18:	b.le	8a20 <grub_mod_fini+0x86f8>
    8a1c:	str	w5, [x2, #20]
    8a20:	mov	w20, w4
    8a24:	ldp	x25, x26, [sp, #64]
    8a28:	ldp	x27, x28, [sp, #80]
    8a2c:	b	8378 <grub_mod_fini+0x8050>
    8a30:	and	w2, w4, #0x1f
    8a34:	stp	w2, w11, [x19, #32]
    8a38:	tst	w4, #0x1e
    8a3c:	b.eq	8ae0 <grub_mod_fini+0x87b8>  // b.none
    8a40:	mov	w3, #0x1                   	// #1
    8a44:	add	x1, x1, #0x1
    8a48:	cmp	x28, x1
    8a4c:	b.hi	83dc <grub_mod_fini+0x80b4>  // b.pmore
    8a50:	ldr	w1, [x19, #52]
    8a54:	ldr	w0, [x19, #64]
    8a58:	cmp	w1, w0
    8a5c:	b.lt	8b30 <grub_mod_fini+0x8808>  // b.tstop
    8a60:	mov	x0, #0xfffffffffffffffe    	// #-2
    8a64:	b	83f8 <grub_mod_fini+0x80d0>
    8a68:	add	x22, sp, #0x80
    8a6c:	sub	w27, w27, #0x20
    8a70:	mov	w2, w27
    8a74:	add	x1, x22, #0x4
    8a78:	mov	x0, x22
    8a7c:	stp	w5, w6, [sp, #96]
    8a80:	str	x9, [sp, #104]
    8a84:	bl	0 <grub_encode_utf8_character>
    8a88:	ldp	w5, w6, [sp, #96]
    8a8c:	mov	x28, x0
    8a90:	cmp	x25, x0
    8a94:	ldr	x9, [sp, #104]
    8a98:	b.ne	8444 <grub_mod_fini+0x811c>  // b.any
    8a9c:	ldr	x0, [x19, #8]
    8aa0:	mov	x1, x22
    8aa4:	mov	x2, x25
    8aa8:	add	x0, x0, x24
    8aac:	bl	0 <grub_memmove>
    8ab0:	b	8924 <grub_mod_fini+0x85fc>
    8ab4:	mov	w2, w4
    8ab8:	str	w4, [x19, #32]
    8abc:	b	88d8 <grub_mod_fini+0x85b0>
    8ac0:	adrp	x0, 0 <grub_mod_init-0x288>
    8ac4:	mov	x9, #0x0                   	// #0
    8ac8:	mov	x8, #0x0                   	// #0
    8acc:	ldr	x28, [x0]
    8ad0:	sub	x0, x28, #0x1
    8ad4:	b	83c4 <grub_mod_fini+0x809c>
    8ad8:	cmp	w4, #0x1f
    8adc:	b.hi	8a44 <grub_mod_fini+0x871c>  // b.pmore
    8ae0:	mov	x0, #0xffffffffffffffff    	// #-1
    8ae4:	str	xzr, [x19, #32]
    8ae8:	b	83f8 <grub_mod_fini+0x80d0>
    8aec:	mov	w20, w1
    8af0:	ldp	x25, x26, [sp, #64]
    8af4:	ldp	x27, x28, [sp, #80]
    8af8:	b	8378 <grub_mod_fini+0x8050>
    8afc:	ldr	x2, [x19, #24]
    8b00:	mov	x0, #0x0                   	// #0
    8b04:	add	x2, x2, x24, lsl #2
    8b08:	add	w1, w21, w0
    8b0c:	str	w1, [x2, x0, lsl #2]
    8b10:	cmp	x26, x0
    8b14:	add	x0, x0, #0x1
    8b18:	b.ne	8b08 <grub_mod_fini+0x87e0>  // b.any
    8b1c:	b	892c <grub_mod_fini+0x8604>
    8b20:	and	w2, w4, #0xf
    8b24:	mov	w3, #0x2                   	// #2
    8b28:	stp	w2, w12, [x19, #32]
    8b2c:	b	8a44 <grub_mod_fini+0x871c>
    8b30:	ldp	x27, x28, [sp, #80]
    8b34:	stp	w6, w5, [x19, #32]
    8b38:	b	8468 <grub_mod_fini+0x8140>
    8b3c:	and	w2, w4, #0x7
    8b40:	mov	w3, #0x3                   	// #3
    8b44:	stp	w2, w13, [x19, #32]
    8b48:	b	8a44 <grub_mod_fini+0x871c>
    8b4c:	ldr	x1, [x19, #24]
    8b50:	cbz	x1, 8d44 <grub_mod_fini+0x8a1c>
    8b54:	ldrb	w0, [x19, #100]
    8b58:	cbnz	w0, 8b80 <grub_mod_fini+0x8858>
    8b5c:	cbz	x24, 8b78 <grub_mod_fini+0x8850>
    8b60:	ldr	x1, [x19, #24]
    8b64:	mov	x0, #0x0                   	// #0
    8b68:	str	w0, [x1, x0, lsl #2]
    8b6c:	add	x0, x0, #0x1
    8b70:	cmp	x0, x24
    8b74:	b.ne	8b68 <grub_mod_fini+0x8840>  // b.any
    8b78:	mov	w0, #0x1                   	// #1
    8b7c:	strb	w0, [x19, #100]
    8b80:	ldr	x0, [x19, #8]
    8b84:	mov	x1, x22
    8b88:	mov	x2, x28
    8b8c:	add	x0, x0, x24
    8b90:	bl	0 <grub_memmove>
    8b94:	ldp	x4, x5, [x19, #16]
    8b98:	str	w27, [x4, x24, lsl #2]
    8b9c:	lsl	x6, x24, #2
    8ba0:	cmp	x28, #0x1
    8ba4:	mov	w7, w25
    8ba8:	str	w21, [x5, x24, lsl #2]
    8bac:	add	x10, x4, x6
    8bb0:	add	x6, x5, x6
    8bb4:	b.ls	8cf8 <grub_mod_fini+0x89d0>  // b.plast
    8bb8:	cmp	x25, #0x1
    8bbc:	mov	x0, #0x1                   	// #1
    8bc0:	b.ls	8bf0 <grub_mod_fini+0x88c8>  // b.plast
    8bc4:	cmp	x25, x28
    8bc8:	mov	w2, #0xffffffff            	// #-1
    8bcc:	csel	x1, x25, x28, ls  // ls = plast
    8bd0:	add	w3, w21, w0
    8bd4:	str	w3, [x6, x0, lsl #2]
    8bd8:	str	w2, [x10, x0, lsl #2]
    8bdc:	add	x0, x0, #0x1
    8be0:	cmp	x0, x1
    8be4:	b.cc	8bd0 <grub_mod_fini+0x88a8>  // b.lo, b.ul, b.last
    8be8:	cmp	x0, x28
    8bec:	b.cs	8cf8 <grub_mod_fini+0x89d0>  // b.hs, b.nlast
    8bf0:	add	x3, x24, #0x4
    8bf4:	add	x1, x24, x0
    8bf8:	add	x3, x3, x0
    8bfc:	sub	x9, x28, #0x1
    8c00:	add	x2, x4, x1, lsl #2
    8c04:	add	x1, x5, x1, lsl #2
    8c08:	add	x8, x5, x3, lsl #2
    8c0c:	add	x3, x4, x3, lsl #2
    8c10:	cmp	x8, x2
    8c14:	sub	x9, x9, x0
    8c18:	ccmp	x3, x1, #0x0, hi  // hi = pmore
    8c1c:	add	x3, x0, #0x1
    8c20:	cset	w8, ls  // ls = plast
    8c24:	cmp	x9, #0x5
    8c28:	ccmp	x28, x3, #0x0, hi  // hi = pmore
    8c2c:	orr	x9, x2, x1
    8c30:	cset	w11, cs  // cs = hs, nlast
    8c34:	and	w8, w8, w11
    8c38:	tst	x9, #0xf
    8c3c:	csel	w8, w8, wzr, eq  // eq = none
    8c40:	cbz	w8, 8d74 <grub_mod_fini+0x8a4c>
    8c44:	cmp	x28, x3
    8c48:	sub	x10, x28, x0
    8c4c:	csinc	x10, x10, xzr, cs  // cs = hs, nlast
    8c50:	sub	w3, w7, #0x1
    8c54:	add	w3, w3, w21
    8c58:	mov	x8, #0xffffffffffffffff    	// #-1
    8c5c:	lsr	x7, x10, #2
    8c60:	mov	x9, #0xffffffffffffffff    	// #-1
    8c64:	add	x7, x2, x7, lsl #4
    8c68:	mov	x12, #0x0                   	// #0
    8c6c:	mov	x11, #0x0                   	// #0
    8c70:	bfxil	x12, x3, #0, #32
    8c74:	bfxil	x11, x3, #0, #32
    8c78:	bfi	x12, x3, #32, #32
    8c7c:	bfi	x11, x3, #32, #32
    8c80:	stp	x12, x11, [x1]
    8c84:	add	x1, x1, #0x10
    8c88:	stp	x8, x9, [x2], #16
    8c8c:	cmp	x2, x7
    8c90:	b.ne	8c68 <grub_mod_fini+0x8940>  // b.any
    8c94:	and	x1, x10, #0xfffffffffffffffc
    8c98:	add	x0, x1, x0
    8c9c:	cmp	x1, x10
    8ca0:	b.eq	8cf8 <grub_mod_fini+0x89d0>  // b.none
    8ca4:	add	x2, x0, x24
    8ca8:	sub	w3, w21, #0x1
    8cac:	add	w3, w3, w25
    8cb0:	mov	w6, #0xffffffff            	// #-1
    8cb4:	lsl	x2, x2, #2
    8cb8:	add	x1, x0, #0x1
    8cbc:	cmp	x28, x1
    8cc0:	str	w3, [x5, x2]
    8cc4:	str	w6, [x4, x2]
    8cc8:	b.ls	8cf8 <grub_mod_fini+0x89d0>  // b.plast
    8ccc:	add	x1, x24, x1
    8cd0:	add	x0, x0, #0x2
    8cd4:	cmp	x28, x0
    8cd8:	lsl	x1, x1, #2
    8cdc:	str	w3, [x5, x1]
    8ce0:	str	w6, [x4, x1]
    8ce4:	b.ls	8cf8 <grub_mod_fini+0x89d0>  // b.plast
    8ce8:	add	x0, x24, x0
    8cec:	lsl	x0, x0, #2
    8cf0:	str	w3, [x5, x0]
    8cf4:	str	w6, [x4, x0]
    8cf8:	ldp	w0, w1, [x19, #64]
    8cfc:	sub	w2, w28, w25
    8d00:	add	w0, w2, w0
    8d04:	str	w0, [x19, #64]
    8d08:	cmp	w1, w21
    8d0c:	b.le	8d1c <grub_mod_fini+0x89f4>
    8d10:	ldr	w1, [x19, #72]
    8d14:	add	w1, w1, w2
    8d18:	str	w1, [x19, #72]
    8d1c:	ldr	w23, [x19, #52]
    8d20:	add	w20, w20, w28
    8d24:	add	w21, w21, w25
    8d28:	cmp	w23, w0
    8d2c:	csel	w23, w23, w0, le
    8d30:	ldp	x25, x26, [sp, #64]
    8d34:	ldp	x27, x28, [sp, #80]
    8d38:	b	8378 <grub_mod_fini+0x8050>
    8d3c:	mov	x0, #0x0                   	// #0
    8d40:	b	83f8 <grub_mod_fini+0x80d0>
    8d44:	lsl	x0, x0, #2
    8d48:	bl	0 <grub_malloc>
    8d4c:	str	x0, [x19, #24]
    8d50:	cbnz	x0, 8b54 <grub_mod_fini+0x882c>
    8d54:	mov	w0, #0xc                   	// #12
    8d58:	ldp	x25, x26, [sp, #64]
    8d5c:	ldp	x27, x28, [sp, #80]
    8d60:	b	8470 <grub_mod_fini+0x8148>
    8d64:	cmn	x26, #0x3
    8d68:	ldp	x25, x26, [sp, #64]
    8d6c:	b.ne	83f8 <grub_mod_fini+0x80d0>  // b.any
    8d70:	b	8a50 <grub_mod_fini+0x8728>
    8d74:	sub	w1, w21, #0x1
    8d78:	mov	w2, #0xffffffff            	// #-1
    8d7c:	add	w7, w1, w7
    8d80:	str	w7, [x6, x0, lsl #2]
    8d84:	cmp	x3, x28
    8d88:	str	w2, [x10, x0, lsl #2]
    8d8c:	mov	x0, x3
    8d90:	add	x3, x3, #0x1
    8d94:	b.cc	8d80 <grub_mod_fini+0x8a58>  // b.lo, b.ul, b.last
    8d98:	b	8cf8 <grub_mod_fini+0x89d0>
    8d9c:	ldp	x27, x28, [sp, #80]
    8da0:	stp	w6, w5, [x19, #32]
    8da4:	b	8378 <grub_mod_fini+0x8050>
    8da8:	cmn	x0, #0x3
    8dac:	b.eq	8724 <grub_mod_fini+0x83fc>  // b.none
    8db0:	ldr	x1, [x19, #8]
    8db4:	add	w20, w20, #0x1
    8db8:	ldrb	w0, [x4, w6, sxtw]
    8dbc:	cmn	x26, #0x1
    8dc0:	strb	w0, [x1, x24]
    8dc4:	ldr	x1, [x19, #16]
    8dc8:	str	w0, [x1, x24, lsl #2]
    8dcc:	b.ne	86e4 <grub_mod_fini+0x83bc>  // b.any
    8dd0:	stp	w11, w7, [x19, #32]
    8dd4:	b	86e4 <grub_mod_fini+0x83bc>
    8dd8:	ldr	x4, [x19, #24]
    8ddc:	str	w21, [x4, x2]
    8de0:	b	8424 <grub_mod_fini+0x80fc>
    8de4:	and	x1, x1, #0xff
    8de8:	ldrb	w1, [x7, x1]
    8dec:	b	840c <grub_mod_fini+0x80e4>
	...
    8df8:	stp	x29, x30, [sp, #-48]!
    8dfc:	mov	w2, #0x3ffffffe            	// #1073741822
    8e00:	mov	x29, sp
    8e04:	stp	x19, x20, [sp, #16]
    8e08:	mov	x19, x0
    8e0c:	ldr	w0, [x0, #52]
    8e10:	cmp	w0, w2
    8e14:	b.hi	8f70 <grub_mod_fini+0x8c48>  // b.pmore
    8e18:	ldr	w2, [x19, #64]
    8e1c:	lsl	w20, w0, #1
    8e20:	ldr	w0, [x19, #104]
    8e24:	cmp	w20, w2
    8e28:	csel	w20, w20, w2, le
    8e2c:	cmp	w20, w1
    8e30:	csel	w20, w20, w1, ge  // ge = tcont
    8e34:	cmp	w0, #0x1
    8e38:	b.le	8e88 <grub_mod_fini+0x8b60>
    8e3c:	str	x21, [sp, #32]
    8e40:	mov	x0, #0x7fffffff            	// #2147483647
    8e44:	cmp	x0, w20, sxtw
    8e48:	sxtw	x21, w20
    8e4c:	b.cc	8f6c <grub_mod_fini+0x8c44>  // b.lo, b.ul, b.last
    8e50:	ldr	x0, [x19, #16]
    8e54:	lsl	x21, x21, #2
    8e58:	mov	x1, x21
    8e5c:	bl	0 <grub_realloc>
    8e60:	mov	x2, x0
    8e64:	cbz	x0, 8f6c <grub_mod_fini+0x8c44>
    8e68:	ldr	x0, [x19, #24]
    8e6c:	str	x2, [x19, #16]
    8e70:	cbz	x0, 8f98 <grub_mod_fini+0x8c70>
    8e74:	mov	x1, x21
    8e78:	bl	0 <grub_realloc>
    8e7c:	cbz	x0, 8f6c <grub_mod_fini+0x8c44>
    8e80:	ldr	x21, [sp, #32]
    8e84:	str	x0, [x19, #24]
    8e88:	ldrb	w0, [x19, #99]
    8e8c:	cbnz	w0, 8f80 <grub_mod_fini+0x8c58>
    8e90:	ldr	x0, [x19, #136]
    8e94:	str	w20, [x19, #52]
    8e98:	cbz	x0, 8eb0 <grub_mod_fini+0x8b88>
    8e9c:	add	w1, w20, #0x1
    8ea0:	sbfiz	x1, x1, #3, #32
    8ea4:	bl	0 <grub_realloc>
    8ea8:	cbz	x0, 8f70 <grub_mod_fini+0x8c48>
    8eac:	str	x0, [x19, #136]
    8eb0:	ldrb	w0, [x19, #96]
    8eb4:	ldr	w1, [x19, #104]
    8eb8:	cmp	w1, #0x1
    8ebc:	cbz	w0, 8ed4 <grub_mod_fini+0x8bac>
    8ec0:	b.le	8fb8 <grub_mod_fini+0x8c90>
    8ec4:	mov	x0, x19
    8ec8:	ldp	x19, x20, [sp, #16]
    8ecc:	ldp	x29, x30, [sp], #48
    8ed0:	b	8338 <grub_mod_fini+0x8010>
    8ed4:	b.gt	8fa0 <grub_mod_fini+0x8c78>
    8ed8:	ldr	x2, [x19, #80]
    8edc:	mov	w0, #0x0                   	// #0
    8ee0:	cbz	x2, 8f60 <grub_mod_fini+0x8c38>
    8ee4:	ldr	w3, [x19, #52]
    8ee8:	ldr	w0, [x19, #64]
    8eec:	ldr	w1, [x19, #44]
    8ef0:	cmp	w3, w0
    8ef4:	csel	w3, w3, w0, le
    8ef8:	cmp	w3, w1
    8efc:	b.le	9064 <grub_mod_fini+0x8d3c>
    8f00:	ldp	x6, x5, [x19]
    8f04:	add	w0, w1, #0x1
    8f08:	ldr	w4, [x19, #40]
    8f0c:	cmp	w3, w0
    8f10:	add	w4, w1, w4
    8f14:	ldrb	w4, [x6, w4, sxtw]
    8f18:	ldrb	w2, [x2, x4]
    8f1c:	strb	w2, [x5, w1, sxtw]
    8f20:	b.le	8f58 <grub_mod_fini+0x8c30>
    8f24:	sxtw	x2, w0
    8f28:	ldr	w1, [x19, #40]
    8f2c:	ldr	x4, [x19]
    8f30:	add	w1, w0, w1
    8f34:	ldr	x5, [x19, #80]
    8f38:	add	w0, w0, #0x1
    8f3c:	ldrb	w4, [x4, w1, sxtw]
    8f40:	cmp	w3, w0
    8f44:	ldr	x1, [x19, #8]
    8f48:	ldrb	w4, [x5, x4]
    8f4c:	strb	w4, [x1, x2]
    8f50:	add	x2, x2, #0x1
    8f54:	b.ne	8f28 <grub_mod_fini+0x8c00>  // b.any
    8f58:	mov	w0, #0x0                   	// #0
    8f5c:	stp	w3, w3, [x19, #44]
    8f60:	ldp	x19, x20, [sp, #16]
    8f64:	ldp	x29, x30, [sp], #48
    8f68:	ret
    8f6c:	ldr	x21, [sp, #32]
    8f70:	mov	w0, #0xc                   	// #12
    8f74:	ldp	x19, x20, [sp, #16]
    8f78:	ldp	x29, x30, [sp], #48
    8f7c:	ret
    8f80:	ldr	x0, [x19, #8]
    8f84:	sxtw	x1, w20
    8f88:	bl	0 <grub_realloc>
    8f8c:	cbz	x0, 8f70 <grub_mod_fini+0x8c48>
    8f90:	str	x0, [x19, #8]
    8f94:	b	8e90 <grub_mod_fini+0x8b68>
    8f98:	ldr	x21, [sp, #32]
    8f9c:	b	8e88 <grub_mod_fini+0x8b60>
    8fa0:	mov	x0, x19
    8fa4:	bl	41c0 <grub_mod_fini+0x3e98>
    8fa8:	mov	w0, #0x0                   	// #0
    8fac:	ldp	x19, x20, [sp, #16]
    8fb0:	ldp	x29, x30, [sp], #48
    8fb4:	ret
    8fb8:	ldr	w5, [x19, #52]
    8fbc:	ldr	w1, [x19, #64]
    8fc0:	ldr	w0, [x19, #44]
    8fc4:	cmp	w5, w1
    8fc8:	csel	w5, w5, w1, le
    8fcc:	cmp	w5, w0
    8fd0:	b.le	906c <grub_mod_fini+0x8d44>
    8fd4:	sxtw	x2, w0
    8fd8:	ldr	w1, [x19, #40]
    8fdc:	ldr	x4, [x19]
    8fe0:	add	w1, w0, w1
    8fe4:	ldr	x3, [x19, #80]
    8fe8:	ldrb	w1, [x4, w1, sxtw]
    8fec:	cbnz	x3, 9058 <grub_mod_fini+0x8d30>
    8ff0:	sub	w3, w1, #0x61
    8ff4:	cmp	w3, #0x19
    8ff8:	ldr	x3, [x19, #8]
    8ffc:	b.ls	9028 <grub_mod_fini+0x8d00>  // b.plast
    9000:	strb	w1, [x3, x2]
    9004:	add	w0, w0, #0x1
    9008:	cmp	w5, w0
    900c:	add	x2, x2, #0x1
    9010:	b.ne	8fd8 <grub_mod_fini+0x8cb0>  // b.any
    9014:	stp	w5, w5, [x19, #44]
    9018:	mov	w0, #0x0                   	// #0
    901c:	ldp	x19, x20, [sp, #16]
    9020:	ldp	x29, x30, [sp], #48
    9024:	ret
    9028:	sub	w1, w1, #0x20
    902c:	strb	w1, [x3, x2]
    9030:	add	w0, w0, #0x1
    9034:	add	x2, x2, #0x1
    9038:	cmp	w0, w5
    903c:	b.eq	9014 <grub_mod_fini+0x8cec>  // b.none
    9040:	ldr	w1, [x19, #40]
    9044:	ldr	x4, [x19]
    9048:	add	w1, w0, w1
    904c:	ldr	x3, [x19, #80]
    9050:	ldrb	w1, [x4, w1, sxtw]
    9054:	cbz	x3, 8ff0 <grub_mod_fini+0x8cc8>
    9058:	and	x1, x1, #0xff
    905c:	ldrb	w1, [x3, x1]
    9060:	b	8ff0 <grub_mod_fini+0x8cc8>
    9064:	mov	w3, w1
    9068:	b	8f58 <grub_mod_fini+0x8c30>
    906c:	mov	w5, w0
    9070:	b	9014 <grub_mod_fini+0x8cec>
    9074:	nop
    9078:	stp	x29, x30, [sp, #-96]!
    907c:	mov	x6, x2
    9080:	mov	w5, w4
    9084:	mov	x29, sp
    9088:	stp	x19, x20, [sp, #16]
    908c:	mov	w20, w4
    9090:	mov	w4, w3
    9094:	stp	x21, x22, [sp, #32]
    9098:	mov	x21, x2
    909c:	mov	x22, x1
    90a0:	stp	x25, x26, [sp, #64]
    90a4:	mov	w25, w3
    90a8:	ldr	w3, [x2, #4]
    90ac:	ldr	w2, [x6], #8
    90b0:	mov	x19, x0
    90b4:	stp	x23, x24, [sp, #48]
    90b8:	mov	x1, x6
    90bc:	mov	w6, #0x8                   	// #8
    90c0:	bl	65a0 <grub_mod_fini+0x6278>
    90c4:	mov	w24, w0
    90c8:	cbz	w0, 90e8 <grub_mod_fini+0x8dc0>
    90cc:	mov	w0, w24
    90d0:	ldp	x19, x20, [sp, #16]
    90d4:	ldp	x21, x22, [sp, #32]
    90d8:	ldp	x23, x24, [sp, #48]
    90dc:	ldp	x25, x26, [sp, #64]
    90e0:	ldp	x29, x30, [sp], #96
    90e4:	ret
    90e8:	ldp	w2, w1, [x19, #148]
    90ec:	ldr	w23, [x21, #4]
    90f0:	ldr	w26, [x22]
    90f4:	cmp	w2, w1
    90f8:	mov	w5, w23
    90fc:	ldr	x0, [x19, #160]
    9100:	b.ge	9208 <grub_mod_fini+0x8ee0>  // b.tcont
    9104:	mov	w6, #0x14                  	// #20
    9108:	cmp	w2, #0x0
    910c:	smull	x6, w2, w6
    9110:	b.le	9128 <grub_mod_fini+0x8e00>
    9114:	sub	x1, x6, #0x14
    9118:	add	x1, x0, x1
    911c:	ldr	w3, [x1, #4]
    9120:	cmp	w20, w3
    9124:	b.eq	91fc <grub_mod_fini+0x8ed4>  // b.none
    9128:	add	x1, x0, x6
    912c:	cmp	w26, w23
    9130:	str	w25, [x0, x6]
    9134:	csetm	w3, eq  // eq = none
    9138:	add	w2, w2, #0x1
    913c:	sub	w0, w23, w26
    9140:	stp	w20, w26, [x1, #4]
    9144:	str	w23, [x1, #12]
    9148:	strh	w3, [x1, #18]
    914c:	str	w2, [x19, #148]
    9150:	strb	wzr, [x1, #16]
    9154:	ldr	w1, [x19, #168]
    9158:	cmp	w1, w0
    915c:	b.ge	9164 <grub_mod_fini+0x8e3c>  // b.tcont
    9160:	str	w0, [x19, #168]
    9164:	ldr	w1, [x22]
    9168:	add	w20, w20, w5
    916c:	ldr	w0, [x19, #52]
    9170:	sub	w20, w20, w1
    9174:	ldr	w21, [x19, #144]
    9178:	cmp	w20, w0
    917c:	b.lt	918c <grub_mod_fini+0x8e64>  // b.tstop
    9180:	ldr	w1, [x19, #64]
    9184:	cmp	w0, w1
    9188:	b.lt	91a4 <grub_mod_fini+0x8e7c>  // b.tstop
    918c:	ldr	w0, [x19, #44]
    9190:	cmp	w20, w0
    9194:	b.lt	91b4 <grub_mod_fini+0x8e8c>  // b.tstop
    9198:	ldr	w1, [x19, #64]
    919c:	cmp	w0, w1
    91a0:	b.ge	91b4 <grub_mod_fini+0x8e8c>  // b.tcont
    91a4:	add	w1, w20, #0x1
    91a8:	mov	x0, x19
    91ac:	bl	8df8 <grub_mod_fini+0x8ad0>
    91b0:	cbnz	w0, 9254 <grub_mod_fini+0x8f2c>
    91b4:	cmp	w20, w21
    91b8:	b.le	90cc <grub_mod_fini+0x8da4>
    91bc:	ldr	x3, [x19, #136]
    91c0:	sxtw	x0, w21
    91c4:	sub	w2, w20, w21
    91c8:	add	x0, x0, #0x1
    91cc:	mov	w1, #0x0                   	// #0
    91d0:	sbfiz	x2, x2, #3, #32
    91d4:	add	x0, x3, x0, lsl #3
    91d8:	bl	0 <grub_memset>
    91dc:	str	w20, [x19, #144]
    91e0:	mov	w0, w24
    91e4:	ldp	x19, x20, [sp, #16]
    91e8:	ldp	x21, x22, [sp, #32]
    91ec:	ldp	x23, x24, [sp, #48]
    91f0:	ldp	x25, x26, [sp, #64]
    91f4:	ldp	x29, x30, [sp], #96
    91f8:	ret
    91fc:	mov	w3, #0x1                   	// #1
    9200:	strb	w3, [x1, #16]
    9204:	b	9128 <grub_mod_fini+0x8e00>
    9208:	lsl	w1, w1, #1
    920c:	str	x27, [sp, #80]
    9210:	mov	w27, #0x14                  	// #20
    9214:	smull	x1, w1, w27
    9218:	bl	0 <grub_realloc>
    921c:	cbz	x0, 925c <grub_mod_fini+0x8f34>
    9220:	ldp	w3, w2, [x19, #148]
    9224:	str	x0, [x19, #160]
    9228:	mov	w1, #0x0                   	// #0
    922c:	smull	x2, w2, w27
    9230:	smaddl	x0, w3, w27, x0
    9234:	bl	0 <grub_memset>
    9238:	ldp	w2, w1, [x19, #148]
    923c:	ldr	w5, [x21, #4]
    9240:	ldr	x27, [sp, #80]
    9244:	lsl	w1, w1, #1
    9248:	str	w1, [x19, #152]
    924c:	ldr	x0, [x19, #160]
    9250:	b	9104 <grub_mod_fini+0x8ddc>
    9254:	mov	w24, w0
    9258:	b	90cc <grub_mod_fini+0x8da4>
    925c:	ldr	x0, [x19, #160]
    9260:	mov	w24, #0xc                   	// #12
    9264:	bl	0 <grub_free>
    9268:	ldr	x27, [sp, #80]
    926c:	b	90cc <grub_mod_fini+0x8da4>
    9270:	stp	x29, x30, [sp, #-240]!
    9274:	mov	x29, sp
    9278:	stp	x21, x22, [sp, #32]
    927c:	ldr	w22, [x0, #56]
    9280:	ldr	w6, [x1]
    9284:	stp	x23, x24, [sp, #48]
    9288:	cmp	w6, #0x0
    928c:	stp	x27, x28, [sp, #80]
    9290:	mov	x27, x0
    9294:	str	x2, [sp, #160]
    9298:	str	x1, [sp, #192]
    929c:	ldr	x24, [x0, #112]
    92a0:	sbfiz	x0, x22, #3, #32
    92a4:	str	x0, [sp, #176]
    92a8:	b.le	933c <grub_mod_fini+0x9014>
    92ac:	mov	x23, #0x0                   	// #0
    92b0:	stp	x19, x20, [sp, #16]
    92b4:	stp	x25, x26, [sp, #64]
    92b8:	ldr	x0, [sp, #160]
    92bc:	ldr	x1, [x0]
    92c0:	ldr	x0, [x24]
    92c4:	ldr	w19, [x1, x23, lsl #2]
    92c8:	sbfiz	x1, x19, #4, #32
    92cc:	sxtw	x2, w19
    92d0:	add	x0, x0, x1
    92d4:	str	x1, [sp, #112]
    92d8:	str	x2, [sp, #152]
    92dc:	ldrb	w1, [x0, #8]
    92e0:	cmp	w1, #0x4
    92e4:	b.ne	9328 <grub_mod_fini+0x9000>  // b.any
    92e8:	ldr	w5, [x0, #8]
    92ec:	tst	w5, #0x3ff00
    92f0:	b.eq	9360 <grub_mod_fini+0x9038>  // b.none
    92f4:	ldr	w2, [x27, #120]
    92f8:	mov	w1, w22
    92fc:	mov	x0, x27
    9300:	bl	1c78 <grub_mod_fini+0x1950>
    9304:	ubfx	x1, x5, #8, #10
    9308:	tbz	w5, #10, 9354 <grub_mod_fini+0x902c>
    930c:	tbz	w0, #0, 9328 <grub_mod_fini+0x9000>
    9310:	tbnz	w1, #3, 9328 <grub_mod_fini+0x9000>
    9314:	tbz	w1, #5, 931c <grub_mod_fini+0x8ff4>
    9318:	tbz	w0, #1, 9328 <grub_mod_fini+0x9000>
    931c:	tbz	w1, #7, 9360 <grub_mod_fini+0x9038>
    9320:	tbnz	w0, #3, 9360 <grub_mod_fini+0x9038>
    9324:	nop
    9328:	add	x23, x23, #0x1
    932c:	cmp	w6, w23
    9330:	b.gt	92b8 <grub_mod_fini+0x8f90>
    9334:	ldp	x19, x20, [sp, #16]
    9338:	ldp	x25, x26, [sp, #64]
    933c:	mov	w0, #0x0                   	// #0
    9340:	ldp	x21, x22, [sp, #32]
    9344:	ldp	x23, x24, [sp, #48]
    9348:	ldp	x27, x28, [sp, #80]
    934c:	ldp	x29, x30, [sp], #240
    9350:	ret
    9354:	tbz	w1, #3, 9314 <grub_mod_fini+0x8fec>
    9358:	tbz	w0, #0, 9314 <grub_mod_fini+0x8fec>
    935c:	b	9328 <grub_mod_fini+0x9000>
    9360:	ldr	w21, [x27, #148]
    9364:	mov	w1, #0x0                   	// #0
    9368:	mov	w4, #0x14                  	// #20
    936c:	mov	w3, w21
    9370:	b	9390 <grub_mod_fini+0x9068>
    9374:	ldr	x2, [x27, #160]
    9378:	asr	w0, w0, #1
    937c:	smaddl	x2, w0, w4, x2
    9380:	ldr	w2, [x2, #4]
    9384:	cmp	w22, w2
    9388:	b.gt	951c <grub_mod_fini+0x91f4>
    938c:	mov	w3, w0
    9390:	add	w0, w3, w1
    9394:	cmp	w3, w1
    9398:	b.gt	9374 <grub_mod_fini+0x904c>
    939c:	cmp	w21, w1
    93a0:	b.le	9524 <grub_mod_fini+0x91fc>
    93a4:	ldr	x0, [x27, #160]
    93a8:	mov	w2, #0x14                  	// #20
    93ac:	smaddl	x1, w1, w2, x0
    93b0:	ldr	w0, [x1, #4]
    93b4:	cmp	w22, w0
    93b8:	b.eq	93c8 <grub_mod_fini+0x90a0>  // b.none
    93bc:	b	9524 <grub_mod_fini+0x91fc>
    93c0:	ldurb	w0, [x1, #-4]
    93c4:	cbz	w0, 9524 <grub_mod_fini+0x91fc>
    93c8:	ldr	w0, [x1]
    93cc:	add	x1, x1, #0x14
    93d0:	cmp	w19, w0
    93d4:	b.ne	93c0 <grub_mod_fini+0x9098>  // b.any
    93d8:	mov	w2, w21
    93dc:	str	wzr, [sp, #220]
    93e0:	cmp	w21, w2
    93e4:	b.ge	9510 <grub_mod_fini+0x91e8>  // b.tcont
    93e8:	mov	w4, #0x14                  	// #20
    93ec:	ldr	x0, [sp, #152]
    93f0:	smull	x28, w21, w4
    93f4:	lsl	x0, x0, #2
    93f8:	str	x0, [sp, #128]
    93fc:	nop
    9400:	ldr	x0, [x27, #160]
    9404:	add	x1, x0, x28
    9408:	ldr	w0, [x0, x28]
    940c:	cmp	w19, w0
    9410:	b.ne	9500 <grub_mod_fini+0x91d8>  // b.any
    9414:	ldr	w0, [x1, #4]
    9418:	cmp	w22, w0
    941c:	b.ne	9500 <grub_mod_fini+0x91d8>  // b.any
    9420:	ldp	w3, w0, [x1, #8]
    9424:	ldr	x25, [x24, #48]
    9428:	subs	w1, w0, w3
    942c:	str	w1, [sp, #104]
    9430:	b.ne	9730 <grub_mod_fini+0x9408>  // b.any
    9434:	ldr	x1, [x24, #40]
    9438:	ldr	x2, [sp, #112]
    943c:	add	x1, x1, x2
    9440:	ldr	x1, [x1, #8]
    9444:	ldrsw	x2, [x1]
    9448:	add	x25, x25, x2, lsl #4
    944c:	ldr	w2, [x27, #120]
    9450:	add	w20, w22, w0
    9454:	sub	w20, w20, w3
    9458:	mov	x0, x27
    945c:	sub	w1, w20, #0x1
    9460:	mov	w26, #0x0                   	// #0
    9464:	sxtw	x20, w20
    9468:	bl	1c78 <grub_mod_fini+0x1950>
    946c:	mov	w3, w0
    9470:	ldr	x5, [x27, #136]
    9474:	ldr	x0, [sp, #176]
    9478:	ldr	x1, [x5, x0]
    947c:	ldr	x0, [x5, x20, lsl #3]
    9480:	cbz	x1, 9488 <grub_mod_fini+0x9160>
    9484:	ldr	w26, [x1, #12]
    9488:	cbz	x0, 9744 <grub_mod_fini+0x941c>
    948c:	ldr	x1, [x0, #56]
    9490:	mov	x2, x25
    9494:	add	x0, sp, #0xe0
    9498:	str	w3, [sp, #120]
    949c:	bl	6fc0 <grub_mod_fini+0x6c98>
    94a0:	str	w0, [sp, #220]
    94a4:	ldr	w3, [sp, #120]
    94a8:	cbnz	w0, 9778 <grub_mod_fini+0x9450>
    94ac:	ldr	x5, [x27, #136]
    94b0:	mov	x1, x24
    94b4:	add	x2, sp, #0xe0
    94b8:	add	x0, sp, #0xdc
    94bc:	str	x5, [sp, #120]
    94c0:	bl	5478 <grub_mod_fini+0x5150>
    94c4:	ldr	x5, [sp, #120]
    94c8:	str	x0, [x5, x20, lsl #3]
    94cc:	ldr	x0, [sp, #232]
    94d0:	bl	0 <grub_free>
    94d4:	ldr	x1, [x27, #136]
    94d8:	ldr	x0, [x1, x20, lsl #3]
    94dc:	cbz	x0, 976c <grub_mod_fini+0x9444>
    94e0:	ldr	w0, [sp, #104]
    94e4:	cbnz	w0, 94fc <grub_mod_fini+0x91d4>
    94e8:	ldr	x0, [sp, #176]
    94ec:	ldr	x0, [x1, x0]
    94f0:	ldr	w0, [x0, #12]
    94f4:	cmp	w0, w26
    94f8:	b.gt	96b0 <grub_mod_fini+0x9388>
    94fc:	ldr	w2, [x27, #148]
    9500:	add	w21, w21, #0x1
    9504:	add	x28, x28, #0x14
    9508:	cmp	w21, w2
    950c:	b.lt	9400 <grub_mod_fini+0x90d8>  // b.tstop
    9510:	ldr	x0, [sp, #192]
    9514:	ldr	w6, [x0]
    9518:	b	9328 <grub_mod_fini+0x9000>
    951c:	add	w1, w0, #0x1
    9520:	b	9390 <grub_mod_fini+0x9068>
    9524:	ldr	x0, [x27, #112]
    9528:	str	x0, [sp, #184]
    952c:	ldr	w2, [x27, #172]
    9530:	ldr	x1, [x0]
    9534:	cmp	w2, #0x0
    9538:	ldr	x0, [sp, #112]
    953c:	ldr	w0, [x1, x0]
    9540:	str	w0, [sp, #200]
    9544:	b.le	93d8 <grub_mod_fini+0x90b0>
    9548:	ldr	x7, [x27, #8]
    954c:	str	xzr, [sp, #144]
    9550:	ldr	x3, [sp, #144]
    9554:	ldr	x0, [x27, #184]
    9558:	ldr	x26, [x0, x3, lsl #3]
    955c:	ldrsw	x0, [x26, #4]
    9560:	lsl	x0, x0, #4
    9564:	ldr	w0, [x1, x0]
    9568:	ldr	w1, [sp, #200]
    956c:	cmp	w1, w0
    9570:	b.eq	9594 <grub_mod_fini+0x926c>  // b.none
    9574:	ldr	x0, [sp, #144]
    9578:	add	x0, x0, #0x1
    957c:	str	x0, [sp, #144]
    9580:	cmp	w2, w0
    9584:	b.le	99a0 <grub_mod_fini+0x9678>
    9588:	ldr	x0, [sp, #184]
    958c:	ldr	x1, [x0]
    9590:	b	9550 <grub_mod_fini+0x9228>
    9594:	ldr	w0, [x26]
    9598:	ldr	w2, [x26, #20]
    959c:	str	w0, [sp, #104]
    95a0:	cmp	w2, #0x0
    95a4:	b.le	99ec <grub_mod_fini+0x96c4>
    95a8:	mov	w25, w22
    95ac:	mov	x20, #0x0                   	// #0
    95b0:	b	95c0 <grub_mod_fini+0x9298>
    95b4:	ldr	w2, [x26, #20]
    95b8:	cmp	w2, w20
    95bc:	b.le	9960 <grub_mod_fini+0x9638>
    95c0:	ldr	x0, [x26, #24]
    95c4:	str	w20, [sp, #172]
    95c8:	ldr	w28, [sp, #104]
    95cc:	mov	w10, w25
    95d0:	ldr	x4, [x0, x20, lsl #3]
    95d4:	add	x20, x20, #0x1
    95d8:	ldr	w0, [x4, #4]
    95dc:	str	w0, [sp, #104]
    95e0:	sub	w3, w0, w28
    95e4:	cmp	w3, #0x0
    95e8:	add	w25, w25, w3
    95ec:	b.le	9620 <grub_mod_fini+0x92f8>
    95f0:	ldr	w0, [x27, #44]
    95f4:	cmp	w0, w25
    95f8:	b.lt	9660 <grub_mod_fini+0x9338>  // b.tstop
    95fc:	add	x0, x7, w10, sxtw
    9600:	add	x1, x7, w28, sxtw
    9604:	sxtw	x2, w3
    9608:	str	w10, [sp, #120]
    960c:	stp	x7, x4, [sp, #128]
    9610:	bl	0 <grub_memcmp>
    9614:	ldr	w10, [sp, #120]
    9618:	ldp	x7, x4, [sp, #128]
    961c:	cbnz	w0, 97a0 <grub_mod_fini+0x9478>
    9620:	mov	x2, x4
    9624:	mov	w3, w19
    9628:	mov	w4, w22
    962c:	mov	x1, x26
    9630:	mov	x0, x27
    9634:	bl	9078 <grub_mod_fini+0x8d50>
    9638:	cmp	w0, #0x1
    963c:	ldr	x7, [x27, #8]
    9640:	b.ls	95b4 <grub_mod_fini+0x928c>  // b.plast
    9644:	ldp	x19, x20, [sp, #16]
    9648:	ldp	x25, x26, [sp, #64]
    964c:	ldp	x21, x22, [sp, #32]
    9650:	ldp	x23, x24, [sp, #48]
    9654:	ldp	x27, x28, [sp, #80]
    9658:	ldp	x29, x30, [sp], #240
    965c:	ret
    9660:	ldr	w12, [x27, #64]
    9664:	add	w1, w25, #0x1
    9668:	str	x4, [sp, #120]
    966c:	mov	x0, x27
    9670:	str	w3, [sp, #128]
    9674:	cmp	w12, w25
    9678:	b.lt	97a4 <grub_mod_fini+0x947c>  // b.tstop
    967c:	ldr	w2, [x27, #144]
    9680:	str	w2, [sp, #136]
    9684:	str	w10, [sp, #204]
    9688:	bl	8df8 <grub_mod_fini+0x8ad0>
    968c:	cbnz	w0, 9644 <grub_mod_fini+0x931c>
    9690:	ldr	w2, [sp, #136]
    9694:	ldr	w3, [sp, #128]
    9698:	ldr	w10, [sp, #204]
    969c:	cmp	w2, w25
    96a0:	ldr	x4, [sp, #120]
    96a4:	b.lt	96f0 <grub_mod_fini+0x93c8>  // b.tstop
    96a8:	ldr	x7, [x27, #8]
    96ac:	b	95fc <grub_mod_fini+0x92d4>
    96b0:	add	x20, x25, #0x4
    96b4:	add	x25, x25, #0x8
    96b8:	mov	x2, x25
    96bc:	mov	x1, x20
    96c0:	mov	w3, w22
    96c4:	mov	x0, x27
    96c8:	bl	1fd0 <grub_mod_fini+0x1ca8>
    96cc:	str	w0, [sp, #220]
    96d0:	cbnz	w0, 9644 <grub_mod_fini+0x931c>
    96d4:	mov	x2, x25
    96d8:	mov	x1, x20
    96dc:	mov	x0, x27
    96e0:	bl	9270 <grub_mod_fini+0x8f48>
    96e4:	str	w0, [sp, #220]
    96e8:	cbz	w0, 94fc <grub_mod_fini+0x91d4>
    96ec:	b	9644 <grub_mod_fini+0x931c>
    96f0:	ldr	x11, [x27, #136]
    96f4:	sxtw	x0, w2
    96f8:	add	x0, x0, #0x1
    96fc:	sub	w2, w25, w2
    9700:	mov	w1, #0x0                   	// #0
    9704:	str	w3, [sp, #128]
    9708:	sbfiz	x2, x2, #3, #32
    970c:	add	x0, x11, x0, lsl #3
    9710:	str	w10, [sp, #136]
    9714:	bl	0 <grub_memset>
    9718:	ldr	w3, [sp, #128]
    971c:	ldr	w10, [sp, #136]
    9720:	str	w25, [x27, #144]
    9724:	ldr	x7, [x27, #8]
    9728:	ldr	x4, [sp, #120]
    972c:	b	95fc <grub_mod_fini+0x92d4>
    9730:	ldr	x1, [x24, #24]
    9734:	ldr	x2, [sp, #128]
    9738:	ldrsw	x2, [x1, x2]
    973c:	add	x25, x25, x2, lsl #4
    9740:	b	944c <grub_mod_fini+0x9124>
    9744:	mov	x1, x24
    9748:	mov	x2, x25
    974c:	add	x0, sp, #0xdc
    9750:	str	x5, [sp, #120]
    9754:	bl	5478 <grub_mod_fini+0x5150>
    9758:	ldr	x5, [sp, #120]
    975c:	ldr	x1, [x27, #136]
    9760:	str	x0, [x5, x20, lsl #3]
    9764:	ldr	x0, [x1, x20, lsl #3]
    9768:	cbnz	x0, 94e0 <grub_mod_fini+0x91b8>
    976c:	ldr	w0, [sp, #220]
    9770:	cbz	w0, 94e0 <grub_mod_fini+0x91b8>
    9774:	b	9644 <grub_mod_fini+0x931c>
    9778:	ldr	x0, [sp, #232]
    977c:	bl	0 <grub_free>
    9780:	ldr	w0, [sp, #220]
    9784:	ldp	x19, x20, [sp, #16]
    9788:	ldp	x21, x22, [sp, #32]
    978c:	ldp	x23, x24, [sp, #48]
    9790:	ldp	x25, x26, [sp, #64]
    9794:	ldp	x27, x28, [sp, #80]
    9798:	ldp	x29, x30, [sp], #240
    979c:	ret
    97a0:	ldr	w2, [x26, #20]
    97a4:	ldr	w0, [sp, #172]
    97a8:	cmp	w0, w2
    97ac:	b.ge	97b8 <grub_mod_fini+0x9490>  // b.tcont
    97b0:	ldr	w2, [x27, #172]
    97b4:	b	9574 <grub_mod_fini+0x924c>
    97b8:	ldr	w0, [sp, #172]
    97bc:	cbnz	w0, 9958 <grub_mod_fini+0x9630>
    97c0:	cmp	w22, w28
    97c4:	sxtw	x20, w28
    97c8:	b.lt	97b0 <grub_mod_fini+0x9488>  // b.tstop
    97cc:	nop
    97d0:	ldr	w0, [x26]
    97d4:	sub	w0, w28, w0
    97d8:	cmp	w0, #0x0
    97dc:	b.le	9808 <grub_mod_fini+0x94e0>
    97e0:	ldr	w0, [x27, #44]
    97e4:	cmp	w0, w10
    97e8:	b.le	9970 <grub_mod_fini+0x9648>
    97ec:	add	w25, w10, #0x1
    97f0:	add	x0, x7, x20
    97f4:	ldrb	w2, [x7, w10, sxtw]
    97f8:	ldurb	w0, [x0, #-1]
    97fc:	cmp	w2, w0
    9800:	b.ne	97b0 <grub_mod_fini+0x9488>  // b.any
    9804:	mov	w10, w25
    9808:	ldr	x0, [x27, #136]
    980c:	ldr	x1, [x0, x20, lsl #3]
    9810:	cbz	x1, 990c <grub_mod_fini+0x95e4>
    9814:	ldr	w4, [x1, #12]
    9818:	cmp	w4, #0x0
    981c:	b.le	990c <grub_mod_fini+0x95e4>
    9820:	ldr	x0, [sp, #184]
    9824:	ldr	x6, [x1, #16]
    9828:	ldr	x3, [x0]
    982c:	mov	x0, #0x0                   	// #0
    9830:	b	983c <grub_mod_fini+0x9514>
    9834:	cmp	w4, w0
    9838:	b.le	990c <grub_mod_fini+0x95e4>
    983c:	ldr	w25, [x6, x0, lsl #2]
    9840:	add	x0, x0, #0x1
    9844:	sbfiz	x1, x25, #4, #32
    9848:	add	x2, x3, x1
    984c:	ldrb	w2, [x2, #8]
    9850:	cmp	w2, #0x9
    9854:	b.ne	9834 <grub_mod_fini+0x950c>  // b.any
    9858:	ldr	w1, [x3, x1]
    985c:	ldr	w2, [sp, #200]
    9860:	cmp	w2, w1
    9864:	b.ne	9834 <grub_mod_fini+0x950c>  // b.any
    9868:	cmn	w25, #0x1
    986c:	b.eq	990c <grub_mod_fini+0x95e4>  // b.none
    9870:	ldr	x1, [x26, #8]
    9874:	ldr	w3, [x26]
    9878:	cbz	x1, 9924 <grub_mod_fini+0x95fc>
    987c:	ldr	w2, [x26, #4]
    9880:	mov	w5, w28
    9884:	mov	w4, w25
    9888:	mov	x0, x27
    988c:	mov	w6, #0x9                   	// #9
    9890:	str	x7, [sp, #104]
    9894:	str	w10, [sp, #120]
    9898:	bl	65a0 <grub_mod_fini+0x6278>
    989c:	cmp	w0, #0x1
    98a0:	ldr	w10, [sp, #120]
    98a4:	ldr	x7, [sp, #104]
    98a8:	b.eq	990c <grub_mod_fini+0x95e4>  // b.none
    98ac:	cbnz	w0, 9644 <grub_mod_fini+0x931c>
    98b0:	ldp	w0, w1, [x26, #16]
    98b4:	cmp	w1, w0
    98b8:	b.eq	99b8 <grub_mod_fini+0x9690>  // b.none
    98bc:	mov	x0, #0x18                  	// #24
    98c0:	str	w10, [sp, #104]
    98c4:	bl	0 <grub_zalloc>
    98c8:	mov	x2, x0
    98cc:	cbz	x0, 99a8 <grub_mod_fini+0x9680>
    98d0:	ldr	w0, [x26, #20]
    98d4:	mov	w4, w22
    98d8:	ldr	x1, [x26, #24]
    98dc:	add	w6, w0, #0x1
    98e0:	mov	w3, w19
    98e4:	str	x2, [x1, w0, sxtw #3]
    98e8:	mov	x1, x26
    98ec:	stp	w25, w28, [x2]
    98f0:	mov	x0, x27
    98f4:	str	w6, [x26, #20]
    98f8:	bl	9078 <grub_mod_fini+0x8d50>
    98fc:	cmp	w0, #0x1
    9900:	ldr	w10, [sp, #104]
    9904:	ldr	x7, [x27, #8]
    9908:	b.hi	9644 <grub_mod_fini+0x931c>  // b.pmore
    990c:	add	w28, w28, #0x1
    9910:	add	x20, x20, #0x1
    9914:	cmp	w22, w28
    9918:	b.ge	97d0 <grub_mod_fini+0x94a8>  // b.tcont
    991c:	ldr	w2, [x27, #172]
    9920:	b	9574 <grub_mod_fini+0x924c>
    9924:	sub	w0, w28, w3
    9928:	str	x7, [sp, #104]
    992c:	add	w0, w0, #0x1
    9930:	str	w10, [sp, #120]
    9934:	sbfiz	x0, x0, #4, #32
    9938:	bl	0 <grub_zalloc>
    993c:	str	x0, [x26, #8]
    9940:	mov	x1, x0
    9944:	ldr	w10, [sp, #120]
    9948:	ldr	x7, [sp, #104]
    994c:	cbz	x0, 99a8 <grub_mod_fini+0x9680>
    9950:	ldr	w3, [x26]
    9954:	b	987c <grub_mod_fini+0x9554>
    9958:	mov	w25, w10
    995c:	str	w28, [sp, #104]
    9960:	ldr	w0, [sp, #104]
    9964:	mov	w10, w25
    9968:	add	w28, w0, #0x1
    996c:	b	97c0 <grub_mod_fini+0x9498>
    9970:	ldr	w0, [x27, #64]
    9974:	cmp	w0, w10
    9978:	b.le	97b0 <grub_mod_fini+0x9488>
    997c:	add	w25, w10, #0x1
    9980:	mov	x0, x27
    9984:	mov	w1, w25
    9988:	str	w10, [sp, #104]
    998c:	bl	8df8 <grub_mod_fini+0x8ad0>
    9990:	cbnz	w0, 9644 <grub_mod_fini+0x931c>
    9994:	ldr	w10, [sp, #104]
    9998:	ldr	x7, [x27, #8]
    999c:	b	97f0 <grub_mod_fini+0x94c8>
    99a0:	ldr	w2, [x27, #148]
    99a4:	b	93dc <grub_mod_fini+0x90b4>
    99a8:	mov	w0, #0xc                   	// #12
    99ac:	ldp	x19, x20, [sp, #16]
    99b0:	ldp	x25, x26, [sp, #64]
    99b4:	b	964c <grub_mod_fini+0x9324>
    99b8:	lsl	w1, w1, #1
    99bc:	str	w10, [sp, #120]
    99c0:	ldr	x0, [x26, #24]
    99c4:	add	w2, w1, #0x1
    99c8:	str	w2, [sp, #104]
    99cc:	sbfiz	x1, x2, #3, #32
    99d0:	bl	0 <grub_realloc>
    99d4:	cbz	x0, 99a8 <grub_mod_fini+0x9680>
    99d8:	ldr	w2, [sp, #104]
    99dc:	ldr	w10, [sp, #120]
    99e0:	str	w2, [x26, #16]
    99e4:	str	x0, [x26, #24]
    99e8:	b	98bc <grub_mod_fini+0x9594>
    99ec:	ldr	w28, [sp, #104]
    99f0:	mov	w10, w22
    99f4:	b	97c0 <grub_mod_fini+0x9498>
    99f8:	stp	x29, x30, [sp, #-96]!
    99fc:	mov	x29, sp
    9a00:	stp	x19, x20, [sp, #16]
    9a04:	mov	x19, x1
    9a08:	ldr	w20, [x1, #56]
    9a0c:	stp	x21, x22, [sp, #32]
    9a10:	mov	x21, x0
    9a14:	ldr	w0, [x1, #144]
    9a18:	stp	x23, x24, [sp, #48]
    9a1c:	sxtw	x23, w20
    9a20:	cmp	w0, w20
    9a24:	stp	x25, x26, [sp, #64]
    9a28:	ldr	x24, [x1, #112]
    9a2c:	ldr	x25, [x1, #136]
    9a30:	b.ge	9a64 <grub_mod_fini+0x973c>  // b.tcont
    9a34:	mov	x22, x2
    9a38:	str	x2, [x25, x23, lsl #3]
    9a3c:	str	w20, [x1, #144]
    9a40:	ldr	w0, [x24, #140]
    9a44:	cbnz	w0, 9b18 <grub_mod_fini+0x97f0>
    9a48:	mov	x0, x22
    9a4c:	ldp	x19, x20, [sp, #16]
    9a50:	ldp	x21, x22, [sp, #32]
    9a54:	ldp	x23, x24, [sp, #48]
    9a58:	ldp	x25, x26, [sp, #64]
    9a5c:	ldp	x29, x30, [sp], #96
    9a60:	ret
    9a64:	ldr	x0, [x25, x23, lsl #3]
    9a68:	cbz	x0, 9b0c <grub_mod_fini+0x97e4>
    9a6c:	ldr	x0, [x0, #56]
    9a70:	cbz	x2, 9ad4 <grub_mod_fini+0x97ac>
    9a74:	ldr	x25, [x2, #56]
    9a78:	mov	x2, x0
    9a7c:	add	x0, sp, #0x50
    9a80:	mov	x1, x25
    9a84:	bl	6fc0 <grub_mod_fini+0x6c98>
    9a88:	str	w0, [x21]
    9a8c:	cbnz	w0, 9b6c <grub_mod_fini+0x9844>
    9a90:	ldr	w2, [x19, #120]
    9a94:	mov	x0, x19
    9a98:	ldr	w1, [x19, #56]
    9a9c:	sub	w1, w1, #0x1
    9aa0:	bl	1c78 <grub_mod_fini+0x1950>
    9aa4:	mov	w3, w0
    9aa8:	ldr	x26, [x19, #136]
    9aac:	add	x2, sp, #0x50
    9ab0:	mov	x1, x24
    9ab4:	mov	x0, x21
    9ab8:	bl	5478 <grub_mod_fini+0x5150>
    9abc:	mov	x22, x0
    9ac0:	str	x0, [x26, x23, lsl #3]
    9ac4:	cbz	x25, 9a40 <grub_mod_fini+0x9718>
    9ac8:	ldr	x0, [sp, #88]
    9acc:	bl	0 <grub_free>
    9ad0:	b	9a40 <grub_mod_fini+0x9718>
    9ad4:	ldp	x4, x5, [x0]
    9ad8:	sub	w1, w20, #0x1
    9adc:	ldr	w2, [x19, #120]
    9ae0:	mov	x0, x19
    9ae4:	stp	x4, x5, [sp, #80]
    9ae8:	bl	1c78 <grub_mod_fini+0x1950>
    9aec:	mov	w3, w0
    9af0:	add	x2, sp, #0x50
    9af4:	mov	x1, x24
    9af8:	mov	x0, x21
    9afc:	bl	5478 <grub_mod_fini+0x5150>
    9b00:	mov	x22, x0
    9b04:	str	x0, [x25, x23, lsl #3]
    9b08:	b	9a40 <grub_mod_fini+0x9718>
    9b0c:	mov	x22, x2
    9b10:	str	x2, [x25, x23, lsl #3]
    9b14:	b	9a40 <grub_mod_fini+0x9718>
    9b18:	cbz	x22, 9b6c <grub_mod_fini+0x9844>
    9b1c:	add	x24, x22, #0xc
    9b20:	add	x25, x22, #0x10
    9b24:	mov	w3, w20
    9b28:	mov	x1, x24
    9b2c:	mov	x2, x25
    9b30:	mov	x0, x19
    9b34:	bl	1fd0 <grub_mod_fini+0x1ca8>
    9b38:	str	w0, [x21]
    9b3c:	cbnz	w0, 9b6c <grub_mod_fini+0x9844>
    9b40:	ldrb	w0, [x22, #80]
    9b44:	tbz	w0, #6, 9a48 <grub_mod_fini+0x9720>
    9b48:	mov	x2, x25
    9b4c:	mov	x1, x24
    9b50:	mov	x0, x19
    9b54:	bl	9270 <grub_mod_fini+0x8f48>
    9b58:	str	w0, [x21]
    9b5c:	cbnz	w0, 9b6c <grub_mod_fini+0x9844>
    9b60:	ldr	x0, [x19, #136]
    9b64:	ldr	x22, [x0, x23, lsl #3]
    9b68:	b	9a48 <grub_mod_fini+0x9720>
    9b6c:	mov	x22, #0x0                   	// #0
    9b70:	b	9a48 <grub_mod_fini+0x9720>
    9b74:	nop
    9b78:	stp	x29, x30, [sp, #-112]!
    9b7c:	mov	x29, sp
    9b80:	stp	x19, x20, [sp, #16]
    9b84:	mov	x19, x0
    9b88:	ldr	w0, [x0, #40]
    9b8c:	stp	x21, x22, [sp, #32]
    9b90:	mov	w21, w1
    9b94:	sub	w20, w1, w0
    9b98:	stp	x23, x24, [sp, #48]
    9b9c:	cmp	w0, w1
    9ba0:	mov	w23, w2
    9ba4:	b.le	9c04 <grub_mod_fini+0x98dc>
    9ba8:	ldr	w0, [x19, #104]
    9bac:	cmp	w0, #0x1
    9bb0:	b.le	9bc4 <grub_mod_fini+0x989c>
    9bb4:	add	x0, x19, #0x20
    9bb8:	mov	x2, #0x8                   	// #8
    9bbc:	mov	w1, #0x0                   	// #0
    9bc0:	bl	0 <grub_memset>
    9bc4:	ldrb	w0, [x19, #99]
    9bc8:	tst	x23, #0x1
    9bcc:	ldr	w4, [x19, #60]
    9bd0:	mov	w1, #0x4                   	// #4
    9bd4:	ldr	w2, [x19, #68]
    9bd8:	mov	w3, #0x6                   	// #6
    9bdc:	csel	w1, w1, w3, ne  // ne = any
    9be0:	str	xzr, [x19, #40]
    9be4:	str	wzr, [x19, #48]
    9be8:	str	w4, [x19, #64]
    9bec:	stp	w2, w1, [x19, #72]
    9bf0:	strb	wzr, [x19, #100]
    9bf4:	cbnz	w0, 9cb8 <grub_mod_fini+0x9990>
    9bf8:	mov	w20, w21
    9bfc:	ldr	x5, [x19]
    9c00:	str	x5, [x19, #8]
    9c04:	cbz	w20, 9cc4 <grub_mod_fini+0x999c>
    9c08:	ldp	w22, w1, [x19, #44]
    9c0c:	ldrb	w2, [x19, #100]
    9c10:	cmp	w1, w20
    9c14:	b.le	9d24 <grub_mod_fini+0x99fc>
    9c18:	cbnz	w2, 9e14 <grub_mod_fini+0x9aec>
    9c1c:	mov	w2, w23
    9c20:	sub	w1, w20, #0x1
    9c24:	mov	x0, x19
    9c28:	bl	1c78 <grub_mod_fini+0x1950>
    9c2c:	str	w0, [x19, #76]
    9c30:	sub	w22, w22, w20
    9c34:	ldr	w0, [x19, #104]
    9c38:	cmp	w0, #0x1
    9c3c:	b.gt	9cf8 <grub_mod_fini+0x99d0>
    9c40:	ldrb	w0, [x19, #99]
    9c44:	cbnz	w0, 9e54 <grub_mod_fini+0x9b2c>
    9c48:	ldr	w2, [x19, #48]
    9c4c:	ldr	w1, [x19, #64]
    9c50:	sub	w2, w2, w20
    9c54:	ldr	w3, [x19, #72]
    9c58:	stp	w22, w2, [x19, #44]
    9c5c:	sub	w1, w1, w20
    9c60:	ldr	w2, [x19, #104]
    9c64:	sub	w3, w3, w20
    9c68:	cbnz	w0, 9c78 <grub_mod_fini+0x9950>
    9c6c:	ldr	x0, [x19, #8]
    9c70:	add	x20, x0, w20, sxtw
    9c74:	str	x20, [x19, #8]
    9c78:	str	w21, [x19, #40]
    9c7c:	cmp	w2, #0x1
    9c80:	str	w1, [x19, #64]
    9c84:	str	w3, [x19, #72]
    9c88:	b.le	9ce8 <grub_mod_fini+0x99c0>
    9c8c:	ldrb	w0, [x19, #96]
    9c90:	cbnz	w0, 9d14 <grub_mod_fini+0x99ec>
    9c94:	mov	x0, x19
    9c98:	bl	41c0 <grub_mod_fini+0x3e98>
    9c9c:	mov	w0, #0x0                   	// #0
    9ca0:	str	wzr, [x19, #56]
    9ca4:	ldp	x19, x20, [sp, #16]
    9ca8:	ldp	x21, x22, [sp, #32]
    9cac:	ldp	x23, x24, [sp, #48]
    9cb0:	ldp	x29, x30, [sp], #112
    9cb4:	ret
    9cb8:	mov	w20, w21
    9cbc:	mov	w0, #0x0                   	// #0
    9cc0:	cbnz	w20, 9c08 <grub_mod_fini+0x98e0>
    9cc4:	ldr	w1, [x19, #64]
    9cc8:	ldr	w3, [x19, #72]
    9ccc:	ldr	w2, [x19, #104]
    9cd0:	str	w21, [x19, #40]
    9cd4:	str	w1, [x19, #64]
    9cd8:	cmp	w2, #0x1
    9cdc:	str	w3, [x19, #72]
    9ce0:	b.gt	9c8c <grub_mod_fini+0x9964>
    9ce4:	nop
    9ce8:	ldrb	w0, [x19, #99]
    9cec:	cbnz	w0, a0cc <grub_mod_fini+0x9da4>
    9cf0:	str	w1, [x19, #44]
    9cf4:	b	9c9c <grub_mod_fini+0x9974>
    9cf8:	ldr	x0, [x19, #16]
    9cfc:	sbfiz	x2, x22, #2, #32
    9d00:	add	x1, x0, w20, sxtw #2
    9d04:	bl	0 <grub_memmove>
    9d08:	ldr	w22, [x19, #44]
    9d0c:	sub	w22, w22, w20
    9d10:	b	9c40 <grub_mod_fini+0x9918>
    9d14:	mov	x0, x19
    9d18:	bl	8338 <grub_mod_fini+0x8010>
    9d1c:	cbz	w0, 9c9c <grub_mod_fini+0x9974>
    9d20:	b	9ca4 <grub_mod_fini+0x997c>
    9d24:	cbnz	w2, a458 <grub_mod_fini+0xa130>
    9d28:	ldr	w2, [x19, #104]
    9d2c:	str	wzr, [x19, #44]
    9d30:	cmp	w2, #0x1
    9d34:	b.le	a150 <grub_mod_fini+0x9e28>
    9d38:	stp	x25, x26, [sp, #64]
    9d3c:	ldrb	w3, [x19, #97]
    9d40:	cbnz	w3, 9f98 <grub_mod_fini+0x9c70>
    9d44:	add	w0, w0, w1
    9d48:	cmp	w21, w0
    9d4c:	b.le	a438 <grub_mod_fini+0xa110>
    9d50:	ldp	w12, w11, [x19, #32]
    9d54:	mov	w16, #0x1                   	// #1
    9d58:	ldr	w4, [x19, #60]
    9d5c:	mov	w18, #0x3                   	// #3
    9d60:	mov	w17, #0x2                   	// #2
    9d64:	adrp	x15, 0 <grub_mod_init-0x288>
    9d68:	ldr	x5, [x19]
    9d6c:	b	9dac <grub_mod_fini+0x9a84>
    9d70:	and	w14, w6, #0xc0
    9d74:	cmp	w14, #0x80
    9d78:	b.eq	a1d4 <grub_mod_fini+0x9eac>  // b.none
    9d7c:	mov	w1, #0x0                   	// #0
    9d80:	str	wzr, [x19, #36]
    9d84:	cmp	w13, #0x0
    9d88:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    9d8c:	b.ne	a234 <grub_mod_fini+0x9f0c>  // b.any
    9d90:	ldrb	w25, [x7]
    9d94:	nop
    9d98:	mov	w1, #0x1                   	// #1
    9d9c:	stp	w12, w11, [x19, #32]
    9da0:	add	w0, w0, w1
    9da4:	cmp	w21, w0
    9da8:	b.le	a3cc <grub_mod_fini+0xa0a4>
    9dac:	sub	w13, w4, w0
    9db0:	adds	x7, x5, w0, sxtw
    9db4:	b.eq	a23c <grub_mod_fini+0x9f14>  // b.none
    9db8:	str	wzr, [sp, #104]
    9dbc:	add	x10, x7, w13, sxtw
    9dc0:	cmp	x10, x7
    9dc4:	mov	x8, x7
    9dc8:	add	x9, sp, #0x68
    9dcc:	b.ls	9e0c <grub_mod_fini+0x9ae4>  // b.plast
    9dd0:	mov	w2, w12
    9dd4:	mov	w3, w11
    9dd8:	mov	x1, x8
    9ddc:	ldrb	w6, [x1]
    9de0:	cbnz	w3, 9d70 <grub_mod_fini+0x9a48>
    9de4:	tbz	w6, #7, a24c <grub_mod_fini+0x9f24>
    9de8:	and	w2, w6, #0xe0
    9dec:	cmp	w2, #0xc0
    9df0:	b.eq	a3a8 <grub_mod_fini+0xa080>  // b.none
    9df4:	and	w2, w6, #0xf0
    9df8:	cmp	w2, #0xe0
    9dfc:	b.eq	a508 <grub_mod_fini+0xa1e0>  // b.none
    9e00:	and	w2, w6, #0xf8
    9e04:	cmp	w2, #0xf0
    9e08:	b.eq	a0ac <grub_mod_fini+0x9d84>  // b.none
    9e0c:	mov	w1, #0x0                   	// #0
    9e10:	b	9d84 <grub_mod_fini+0x9a5c>
    9e14:	mov	w1, w22
    9e18:	mov	w2, #0x0                   	// #0
    9e1c:	ldr	x6, [x19, #24]
    9e20:	b	9e34 <grub_mod_fini+0x9b0c>
    9e24:	b.ge	a0a0 <grub_mod_fini+0x9d78>  // b.tcont
    9e28:	add	w2, w0, #0x1
    9e2c:	cmp	w2, w1
    9e30:	b.ge	9e74 <grub_mod_fini+0x9b4c>  // b.tcont
    9e34:	add	w0, w2, w1
    9e38:	add	w0, w0, w0, lsr #31
    9e3c:	asr	w0, w0, #1
    9e40:	ldr	w3, [x6, w0, sxtw #2]
    9e44:	cmp	w3, w20
    9e48:	b.le	9e24 <grub_mod_fini+0x9afc>
    9e4c:	mov	w1, w0
    9e50:	b	9e2c <grub_mod_fini+0x9b04>
    9e54:	ldr	x0, [x19, #8]
    9e58:	sxtw	x2, w22
    9e5c:	add	x1, x0, w20, sxtw
    9e60:	bl	0 <grub_memmove>
    9e64:	ldr	w22, [x19, #44]
    9e68:	ldrb	w0, [x19, #99]
    9e6c:	sub	w22, w22, w20
    9e70:	b	9c48 <grub_mod_fini+0x9920>
    9e74:	cmp	w3, w20
    9e78:	add	w5, w0, #0x1
    9e7c:	b.ge	a0a0 <grub_mod_fini+0x9d78>  // b.tcont
    9e80:	mov	w1, w0
    9e84:	mov	w2, w23
    9e88:	mov	x0, x19
    9e8c:	bl	1c78 <grub_mod_fini+0x1950>
    9e90:	str	w0, [x19, #76]
    9e94:	cmp	w20, w5
    9e98:	ccmp	w20, w22, #0x0, eq  // eq = none
    9e9c:	b.lt	a26c <grub_mod_fini+0x9f44>  // b.tstop
    9ea0:	ldr	w1, [x19, #60]
    9ea4:	cmp	w5, #0x0
    9ea8:	ldr	w3, [x19, #68]
    9eac:	sxtw	x0, w5
    9eb0:	sub	w1, w1, w21
    9eb4:	strb	wzr, [x19, #100]
    9eb8:	sub	w3, w3, w21
    9ebc:	add	w4, w1, w20
    9ec0:	add	w2, w3, w20
    9ec4:	str	w4, [x19, #64]
    9ec8:	str	w2, [x19, #72]
    9ecc:	sub	x4, x6, #0x4
    9ed0:	b.gt	9ee8 <grub_mod_fini+0x9bc0>
    9ed4:	b	9ef8 <grub_mod_fini+0x9bd0>
    9ed8:	sub	w5, w0, #0x1
    9edc:	sub	x0, x0, #0x1
    9ee0:	cmp	w0, #0x0
    9ee4:	b.le	9ef8 <grub_mod_fini+0x9bd0>
    9ee8:	ldr	w2, [x4, x0, lsl #2]
    9eec:	mov	w5, w0
    9ef0:	cmp	w2, w20
    9ef4:	b.eq	9ed8 <grub_mod_fini+0x9bb0>  // b.none
    9ef8:	cmp	w5, w22
    9efc:	b.ge	a308 <grub_mod_fini+0x9fe0>  // b.tcont
    9f00:	sbfiz	x0, x5, #2, #32
    9f04:	ldr	x4, [x19, #16]
    9f08:	b	9f18 <grub_mod_fini+0x9bf0>
    9f0c:	add	x0, x0, #0x4
    9f10:	cmp	w5, w22
    9f14:	b.eq	a228 <grub_mod_fini+0x9f00>  // b.none
    9f18:	ldr	w2, [x4, x0]
    9f1c:	add	w5, w5, #0x1
    9f20:	cmn	w2, #0x1
    9f24:	b.eq	9f0c <grub_mod_fini+0x9be4>  // b.none
    9f28:	ldr	w2, [x6, x0]
    9f2c:	sub	w2, w2, w20
    9f30:	str	w2, [x19, #44]
    9f34:	cmp	w2, #0x0
    9f38:	cbz	w2, 9f88 <grub_mod_fini+0x9c60>
    9f3c:	b.le	9f64 <grub_mod_fini+0x9c3c>
    9f40:	ldr	x3, [x19, #16]
    9f44:	mov	x0, #0x0                   	// #0
    9f48:	mov	w1, #0xffffffff            	// #-1
    9f4c:	nop
    9f50:	str	w1, [x3, x0, lsl #2]
    9f54:	add	x0, x0, #0x1
    9f58:	ldr	w2, [x19, #44]
    9f5c:	cmp	w2, w0
    9f60:	b.gt	9f50 <grub_mod_fini+0x9c28>
    9f64:	ldr	x0, [x19, #8]
    9f68:	sxtw	x2, w2
    9f6c:	mov	w1, #0xff                  	// #255
    9f70:	bl	0 <grub_memset>
    9f74:	ldr	w1, [x19, #64]
    9f78:	ldr	w3, [x19, #72]
    9f7c:	ldr	w2, [x19, #44]
    9f80:	sub	w1, w1, w20
    9f84:	sub	w3, w3, w20
    9f88:	ldrb	w0, [x19, #99]
    9f8c:	str	w2, [x19, #48]
    9f90:	ldr	w2, [x19, #104]
    9f94:	b	9c68 <grub_mod_fini+0x9940>
    9f98:	ldr	x5, [x19]
    9f9c:	sub	w3, w20, w2
    9fa0:	stp	x27, x28, [sp, #80]
    9fa4:	sxtw	x25, w20
    9fa8:	sub	x24, x25, #0x1
    9fac:	add	x27, x5, w0, sxtw
    9fb0:	add	x3, x27, w3, sxtw
    9fb4:	add	x24, x27, x24
    9fb8:	cmp	x5, x3
    9fbc:	csel	x3, x5, x3, cs  // cs = hs, nlast
    9fc0:	cmp	x3, x24
    9fc4:	b.ls	9fd8 <grub_mod_fini+0x9cb0>  // b.plast
    9fc8:	b	a314 <grub_mod_fini+0x9fec>
    9fcc:	sub	x24, x24, #0x1
    9fd0:	cmp	x3, x24
    9fd4:	b.hi	a314 <grub_mod_fini+0x9fec>  // b.pmore
    9fd8:	ldrb	w2, [x24]
    9fdc:	and	w2, w2, #0xc0
    9fe0:	cmp	w2, #0x80
    9fe4:	b.eq	9fcc <grub_mod_fini+0x9ca4>  // b.none
    9fe8:	ldr	x1, [x19, #80]
    9fec:	mov	x28, x24
    9ff0:	ldrsw	x3, [x19, #64]
    9ff4:	add	x3, x27, x3
    9ff8:	sub	x26, x3, x24
    9ffc:	cbnz	x1, a5b0 <grub_mod_fini+0xa288>
    a000:	add	x0, sp, #0x68
    a004:	mov	x2, #0x8                   	// #8
    a008:	mov	w1, #0x0                   	// #0
    a00c:	bl	0 <grub_memset>
    a010:	add	x3, x28, w26, sxtw
    a014:	mov	x0, x28
    a018:	cmp	x3, x28
    a01c:	mov	w7, #0x3                   	// #3
    a020:	mov	w6, #0x2                   	// #2
    a024:	mov	w5, #0x1                   	// #1
    a028:	b.ls	a090 <grub_mod_fini+0x9d68>  // b.plast
    a02c:	ldr	w1, [sp, #108]
    a030:	ldrb	w2, [x0]
    a034:	cbz	w1, a480 <grub_mod_fini+0xa158>
    a038:	and	w4, w2, #0xc0
    a03c:	cmp	w4, #0x80
    a040:	b.ne	a090 <grub_mod_fini+0x9d68>  // b.any
    a044:	ldr	w4, [sp, #104]
    a048:	sub	w1, w1, #0x1
    a04c:	cmp	w1, #0x1
    a050:	bfi	w2, w4, #6, #26
    a054:	stp	w2, w1, [sp, #104]
    a058:	mov	w26, w2
    a05c:	b.eq	a5a4 <grub_mod_fini+0xa27c>  // b.none
    a060:	cmp	w1, #0x2
    a064:	ccmp	w2, #0xf, #0x2, eq  // eq = none
    a068:	b.ls	a090 <grub_mod_fini+0x9d68>  // b.plast
    a06c:	cbnz	w1, a4b0 <grub_mod_fini+0xa188>
    a070:	add	x27, x27, x25
    a074:	mov	w25, w26
    a078:	cbz	w26, a518 <grub_mod_fini+0xa1f0>
    a07c:	sub	x0, x0, x28
    a080:	sub	x24, x27, x24
    a084:	add	x0, x0, #0x1
    a088:	cmp	x0, x24
    a08c:	b.cs	a678 <grub_mod_fini+0xa350>  // b.hs, b.nlast
    a090:	ldr	w0, [x19, #40]
    a094:	ldr	w1, [x19, #48]
    a098:	ldp	x27, x28, [sp, #80]
    a09c:	b	9d44 <grub_mod_fini+0x9a1c>
    a0a0:	mov	w5, w0
    a0a4:	sub	w0, w0, #0x1
    a0a8:	b	9e80 <grub_mod_fini+0x9b58>
    a0ac:	and	w2, w6, #0x7
    a0b0:	mov	w3, #0x3                   	// #3
    a0b4:	stp	w2, w18, [x19, #32]
    a0b8:	add	x1, x1, #0x1
    a0bc:	cmp	x10, x1
    a0c0:	b.hi	9ddc <grub_mod_fini+0x9ab4>  // b.pmore
    a0c4:	mov	w1, #0x0                   	// #0
    a0c8:	b	9d84 <grub_mod_fini+0x9a5c>
    a0cc:	ldrb	w0, [x19, #96]
    a0d0:	cbnz	w0, a31c <grub_mod_fini+0x9ff4>
    a0d4:	ldr	x4, [x19, #80]
    a0d8:	cbz	x4, 9c9c <grub_mod_fini+0x9974>
    a0dc:	ldr	w3, [x19, #52]
    a0e0:	ldr	w2, [x19, #44]
    a0e4:	cmp	w3, w1
    a0e8:	csel	w3, w3, w1, le
    a0ec:	cmp	w3, w2
    a0f0:	b.le	a584 <grub_mod_fini+0xa25c>
    a0f4:	ldp	x5, x1, [x19]
    a0f8:	add	w21, w21, w2
    a0fc:	add	w0, w2, #0x1
    a100:	cmp	w3, w0
    a104:	ldrb	w5, [x5, w21, sxtw]
    a108:	ldrb	w4, [x4, x5]
    a10c:	strb	w4, [x1, w2, sxtw]
    a110:	b.le	a148 <grub_mod_fini+0x9e20>
    a114:	sxtw	x2, w0
    a118:	ldr	w1, [x19, #40]
    a11c:	ldr	x4, [x19]
    a120:	add	w1, w0, w1
    a124:	ldr	x5, [x19, #80]
    a128:	add	w0, w0, #0x1
    a12c:	ldrb	w4, [x4, w1, sxtw]
    a130:	cmp	w3, w0
    a134:	ldr	x1, [x19, #8]
    a138:	ldrb	w4, [x5, x4]
    a13c:	strb	w4, [x1, x2]
    a140:	add	x2, x2, #0x1
    a144:	b.ne	a118 <grub_mod_fini+0x9df0>  // b.any
    a148:	stp	w3, w3, [x19, #44]
    a14c:	b	9c9c <grub_mod_fini+0x9974>
    a150:	ldr	x3, [x19]
    a154:	add	w0, w20, w0
    a158:	ldr	x1, [x19, #80]
    a15c:	add	x0, x3, w0, sxtw
    a160:	ldurb	w0, [x0, #-1]
    a164:	str	wzr, [x19, #48]
    a168:	cbz	x1, a174 <grub_mod_fini+0x9e4c>
    a16c:	and	x0, x0, #0xff
    a170:	ldrb	w0, [x1, x0]
    a174:	ldr	x4, [x19, #88]
    a178:	ubfx	x1, x0, #6, #2
    a17c:	mov	w3, #0x1                   	// #1
    a180:	ldr	x1, [x4, x1, lsl #3]
    a184:	lsr	x1, x1, x0
    a188:	tbnz	w1, #0, a1a8 <grub_mod_fini+0x9e80>
    a18c:	cmp	w0, #0xa
    a190:	mov	w3, #0x0                   	// #0
    a194:	b.ne	a1a8 <grub_mod_fini+0x9e80>  // b.any
    a198:	ldrb	w0, [x19, #101]
    a19c:	cmp	w0, #0x0
    a1a0:	cset	w3, ne  // ne = any
    a1a4:	lsl	w3, w3, #1
    a1a8:	ldrb	w0, [x19, #99]
    a1ac:	ldr	w1, [x19, #64]
    a1b0:	str	w3, [x19, #76]
    a1b4:	ldr	w3, [x19, #72]
    a1b8:	sub	w1, w1, w20
    a1bc:	sub	w3, w3, w20
    a1c0:	cbz	w0, 9c6c <grub_mod_fini+0x9944>
    a1c4:	str	w21, [x19, #40]
    a1c8:	str	w1, [x19, #64]
    a1cc:	str	w3, [x19, #72]
    a1d0:	b	9cec <grub_mod_fini+0x99c4>
    a1d4:	bfi	w6, w2, #6, #26
    a1d8:	sub	w3, w3, #0x1
    a1dc:	stp	w6, w3, [x19, #32]
    a1e0:	mov	w2, w6
    a1e4:	cmp	w3, #0x1
    a1e8:	b.eq	a258 <grub_mod_fini+0x9f30>  // b.none
    a1ec:	cmp	w6, #0xf
    a1f0:	ccmp	w3, #0x2, #0x0, ls  // ls = plast
    a1f4:	b.eq	a260 <grub_mod_fini+0x9f38>  // b.none
    a1f8:	cbnz	w3, a0b8 <grub_mod_fini+0x9d90>
    a1fc:	cbz	x9, a204 <grub_mod_fini+0x9edc>
    a200:	str	w2, [x9]
    a204:	cbz	w2, a234 <grub_mod_fini+0x9f0c>
    a208:	sub	x1, x1, x8
    a20c:	cmn	x1, #0x4
    a210:	add	x1, x1, #0x1
    a214:	b.hi	a6a8 <grub_mod_fini+0xa380>  // b.pmore
    a218:	ldr	w25, [sp, #104]
    a21c:	mov	w12, w2
    a220:	mov	w11, #0x0                   	// #0
    a224:	b	9da0 <grub_mod_fini+0x9a78>
    a228:	mov	w2, #0x0                   	// #0
    a22c:	str	wzr, [x19, #44]
    a230:	b	9f88 <grub_mod_fini+0x9c60>
    a234:	mov	w25, #0x0                   	// #0
    a238:	b	9d98 <grub_mod_fini+0x9a70>
    a23c:	ldr	x10, [x15]
    a240:	mov	x9, #0x0                   	// #0
    a244:	sub	x8, x10, #0x1
    a248:	b	9dd0 <grub_mod_fini+0x9aa8>
    a24c:	mov	w2, w6
    a250:	str	w6, [x19, #32]
    a254:	b	a1fc <grub_mod_fini+0x9ed4>
    a258:	cmp	w6, #0x1f
    a25c:	b.hi	a0b8 <grub_mod_fini+0x9d90>  // b.pmore
    a260:	mov	w1, #0x0                   	// #0
    a264:	str	xzr, [x19, #32]
    a268:	b	9d84 <grub_mod_fini+0x9a5c>
    a26c:	ldr	w0, [x6, w5, sxtw #2]
    a270:	cmp	w0, w20
    a274:	b.ne	9ea0 <grub_mod_fini+0x9b78>  // b.any
    a278:	ldr	x0, [x19, #16]
    a27c:	sub	w2, w22, w20
    a280:	sbfiz	x23, x20, #2, #32
    a284:	sxtw	x24, w20
    a288:	sbfiz	x2, x2, #2, #32
    a28c:	add	x1, x0, x23
    a290:	bl	0 <grub_memmove>
    a294:	ldr	w2, [x19, #44]
    a298:	ldr	x0, [x19, #8]
    a29c:	sub	w2, w2, w20
    a2a0:	add	x1, x0, x24
    a2a4:	sxtw	x2, w2
    a2a8:	bl	0 <grub_memmove>
    a2ac:	ldp	w0, w1, [x19, #44]
    a2b0:	sub	w0, w0, w20
    a2b4:	sub	w1, w1, w20
    a2b8:	stp	w0, w1, [x19, #44]
    a2bc:	cmp	w0, #0x0
    a2c0:	b.le	a2ec <grub_mod_fini+0x9fc4>
    a2c4:	ldr	x3, [x19, #24]
    a2c8:	mov	x0, #0x0                   	// #0
    a2cc:	add	x2, x3, x23
    a2d0:	ldr	w1, [x2, x0, lsl #2]
    a2d4:	sub	w1, w1, w20
    a2d8:	str	w1, [x3, x0, lsl #2]
    a2dc:	add	x0, x0, #0x1
    a2e0:	ldr	w1, [x19, #44]
    a2e4:	cmp	w1, w0
    a2e8:	b.gt	a2d0 <grub_mod_fini+0x9fa8>
    a2ec:	ldr	w1, [x19, #64]
    a2f0:	ldr	w3, [x19, #72]
    a2f4:	ldrb	w0, [x19, #99]
    a2f8:	sub	w1, w1, w20
    a2fc:	ldr	w2, [x19, #104]
    a300:	sub	w3, w3, w20
    a304:	b	9c68 <grub_mod_fini+0x9940>
    a308:	b.eq	a228 <grub_mod_fini+0x9f00>  // b.none
    a30c:	sbfiz	x0, x5, #2, #32
    a310:	b	9f28 <grub_mod_fini+0x9c00>
    a314:	ldp	x27, x28, [sp, #80]
    a318:	b	9d44 <grub_mod_fini+0x9a1c>
    a31c:	ldr	w5, [x19, #52]
    a320:	ldr	w0, [x19, #44]
    a324:	cmp	w5, w1
    a328:	csel	w5, w5, w1, le
    a32c:	cmp	w5, w0
    a330:	b.le	a378 <grub_mod_fini+0xa050>
    a334:	sxtw	x2, w0
    a338:	ldr	x4, [x19]
    a33c:	add	w21, w21, w0
    a340:	ldr	x3, [x19, #80]
    a344:	ldrb	w1, [x4, w21, sxtw]
    a348:	cbnz	x3, a3c0 <grub_mod_fini+0xa098>
    a34c:	sub	w3, w1, #0x61
    a350:	cmp	w3, #0x19
    a354:	ldr	x3, [x19, #8]
    a358:	b.ls	a388 <grub_mod_fini+0xa060>  // b.plast
    a35c:	strb	w1, [x3, x2]
    a360:	add	w0, w0, #0x1
    a364:	cmp	w5, w0
    a368:	add	x2, x2, #0x1
    a36c:	b.eq	a380 <grub_mod_fini+0xa058>  // b.none
    a370:	ldr	w21, [x19, #40]
    a374:	b	a338 <grub_mod_fini+0xa010>
    a378:	mov	w5, w0
    a37c:	nop
    a380:	stp	w5, w5, [x19, #44]
    a384:	b	9c9c <grub_mod_fini+0x9974>
    a388:	sub	w1, w1, #0x20
    a38c:	strb	w1, [x3, x2]
    a390:	add	w0, w0, #0x1
    a394:	add	x2, x2, #0x1
    a398:	cmp	w0, w5
    a39c:	b.eq	a380 <grub_mod_fini+0xa058>  // b.none
    a3a0:	ldr	w21, [x19, #40]
    a3a4:	b	a338 <grub_mod_fini+0xa010>
    a3a8:	and	w2, w6, #0x1f
    a3ac:	stp	w2, w16, [x19, #32]
    a3b0:	tst	w6, #0x1e
    a3b4:	b.eq	a260 <grub_mod_fini+0x9f38>  // b.none
    a3b8:	mov	w3, #0x1                   	// #1
    a3bc:	b	a0b8 <grub_mod_fini+0x9d90>
    a3c0:	and	x1, x1, #0xff
    a3c4:	ldrb	w1, [x3, x1]
    a3c8:	b	a34c <grub_mod_fini+0xa024>
    a3cc:	sub	w24, w0, w21
    a3d0:	str	w24, [x19, #44]
    a3d4:	cmn	w25, #0x1
    a3d8:	b.eq	a440 <grub_mod_fini+0xa118>  // b.none
    a3dc:	ldrb	w0, [x19, #102]
    a3e0:	cbnz	w0, a554 <grub_mod_fini+0xa22c>
    a3e4:	cmp	w25, #0xa
    a3e8:	mov	w0, #0x0                   	// #0
    a3ec:	b.eq	a424 <grub_mod_fini+0xa0fc>  // b.none
    a3f0:	str	w0, [x19, #76]
    a3f4:	cmp	w24, #0x0
    a3f8:	cbnz	w24, a4c0 <grub_mod_fini+0xa198>
    a3fc:	ldrb	w0, [x19, #99]
    a400:	mov	w24, #0x0                   	// #0
    a404:	ldr	w1, [x19, #64]
    a408:	ldr	w3, [x19, #72]
    a40c:	ldr	w2, [x19, #104]
    a410:	sub	w1, w1, w20
    a414:	sub	w3, w3, w20
    a418:	ldp	x25, x26, [sp, #64]
    a41c:	str	w24, [x19, #48]
    a420:	b	9c68 <grub_mod_fini+0x9940>
    a424:	ldrb	w0, [x19, #101]
    a428:	cmp	w0, #0x0
    a42c:	cset	w0, ne  // ne = any
    a430:	lsl	w0, w0, #1
    a434:	b	a3f0 <grub_mod_fini+0xa0c8>
    a438:	sub	w24, w0, w21
    a43c:	str	w24, [x19, #44]
    a440:	mov	w2, w23
    a444:	sub	w1, w22, #0x1
    a448:	mov	x0, x19
    a44c:	bl	1c78 <grub_mod_fini+0x1950>
    a450:	str	w0, [x19, #76]
    a454:	b	a3f4 <grub_mod_fini+0xa0cc>
    a458:	ldr	w4, [x19, #60]
    a45c:	ldr	w2, [x19, #68]
    a460:	sub	w3, w4, w21
    a464:	strb	wzr, [x19, #100]
    a468:	sub	w2, w2, w21
    a46c:	add	w3, w3, w20
    a470:	add	w2, w2, w20
    a474:	str	w3, [x19, #64]
    a478:	str	w2, [x19, #72]
    a47c:	b	9d28 <grub_mod_fini+0x9a00>
    a480:	tbz	w2, #7, a548 <grub_mod_fini+0xa220>
    a484:	and	w1, w2, #0xe0
    a488:	cmp	w1, #0xc0
    a48c:	b.eq	a590 <grub_mod_fini+0xa268>  // b.none
    a490:	and	w1, w2, #0xf0
    a494:	cmp	w1, #0xe0
    a498:	b.eq	a650 <grub_mod_fini+0xa328>  // b.none
    a49c:	and	w1, w2, #0xf8
    a4a0:	cmp	w1, #0xf0
    a4a4:	b.ne	a090 <grub_mod_fini+0x9d68>  // b.any
    a4a8:	and	w2, w2, #0x7
    a4ac:	stp	w2, w7, [sp, #104]
    a4b0:	add	x0, x0, #0x1
    a4b4:	cmp	x3, x0
    a4b8:	b.ne	a02c <grub_mod_fini+0x9d04>  // b.any
    a4bc:	b	a090 <grub_mod_fini+0x9d68>
    a4c0:	b.le	a4e4 <grub_mod_fini+0xa1bc>
    a4c4:	ldr	x2, [x19, #16]
    a4c8:	mov	x0, #0x0                   	// #0
    a4cc:	mov	w1, #0xffffffff            	// #-1
    a4d0:	str	w1, [x2, x0, lsl #2]
    a4d4:	add	x0, x0, #0x1
    a4d8:	ldr	w24, [x19, #44]
    a4dc:	cmp	w24, w0
    a4e0:	b.gt	a4d0 <grub_mod_fini+0xa1a8>
    a4e4:	ldrb	w0, [x19, #99]
    a4e8:	cbz	w0, a404 <grub_mod_fini+0xa0dc>
    a4ec:	ldr	x0, [x19, #8]
    a4f0:	sxtw	x2, w24
    a4f4:	mov	w1, #0xff                  	// #255
    a4f8:	bl	0 <grub_memset>
    a4fc:	ldr	w24, [x19, #44]
    a500:	ldrb	w0, [x19, #99]
    a504:	b	a404 <grub_mod_fini+0xa0dc>
    a508:	and	w2, w6, #0xf
    a50c:	mov	w3, #0x2                   	// #2
    a510:	stp	w2, w17, [x19, #32]
    a514:	b	a0b8 <grub_mod_fini+0x9d90>
    a518:	cmp	x24, x27
    a51c:	b.ne	a090 <grub_mod_fini+0x9d68>  // b.any
    a520:	add	x0, x19, #0x20
    a524:	mov	x2, #0x8                   	// #8
    a528:	mov	w1, #0x0                   	// #0
    a52c:	bl	0 <grub_memset>
    a530:	ldrb	w0, [x19, #102]
    a534:	str	wzr, [x19, #44]
    a538:	cbnz	w0, a668 <grub_mod_fini+0xa340>
    a53c:	ldp	x27, x28, [sp, #80]
    a540:	str	wzr, [x19, #76]
    a544:	b	a3fc <grub_mod_fini+0xa0d4>
    a548:	mov	w26, w2
    a54c:	str	w2, [sp, #104]
    a550:	b	a070 <grub_mod_fini+0x9d48>
    a554:	and	w1, w25, #0xffffffdf
    a558:	mov	w26, w25
    a55c:	sub	w1, w1, #0x41
    a560:	mov	w0, #0x1                   	// #1
    a564:	cmp	w1, #0x19
    a568:	b.ls	a3f0 <grub_mod_fini+0xa0c8>  // b.plast
    a56c:	sub	w2, w26, #0x30
    a570:	cmp	w25, #0x5f
    a574:	ccmp	w2, #0x9, #0x0, ne  // ne = any
    a578:	mov	w0, #0x1                   	// #1
    a57c:	b.ls	a3f0 <grub_mod_fini+0xa0c8>  // b.plast
    a580:	b	a3e4 <grub_mod_fini+0xa0bc>
    a584:	mov	w3, w2
    a588:	stp	w3, w3, [x19, #44]
    a58c:	b	9c9c <grub_mod_fini+0x9974>
    a590:	and	w1, w2, #0x1f
    a594:	stp	w1, w5, [sp, #104]
    a598:	tst	w2, #0x1e
    a59c:	b.ne	a4b0 <grub_mod_fini+0xa188>  // b.any
    a5a0:	b	a090 <grub_mod_fini+0x9d68>
    a5a4:	cmp	w2, #0x1f
    a5a8:	b.hi	a4b0 <grub_mod_fini+0xa188>  // b.pmore
    a5ac:	b	a090 <grub_mod_fini+0x9d68>
    a5b0:	cmp	w26, #0x6
    a5b4:	mov	w2, #0x6                   	// #6
    a5b8:	csel	w2, w26, w2, le
    a5bc:	subs	w4, w2, #0x1
    a5c0:	b.mi	a65c <grub_mod_fini+0xa334>  // b.first
    a5c4:	ldrb	w5, [x24, w4, sxtw]
    a5c8:	add	x0, sp, #0x60
    a5cc:	cmp	w2, #0x1
    a5d0:	sub	w3, w2, #0x2
    a5d4:	ldrb	w5, [x1, x5]
    a5d8:	strb	w5, [x0, w4, sxtw]
    a5dc:	b.eq	a648 <grub_mod_fini+0xa320>  // b.none
    a5e0:	ldrb	w5, [x24, w3, sxtw]
    a5e4:	cmp	w2, #0x2
    a5e8:	sub	w4, w2, #0x3
    a5ec:	ldrb	w5, [x1, x5]
    a5f0:	strb	w5, [x0, w3, sxtw]
    a5f4:	b.eq	a648 <grub_mod_fini+0xa320>  // b.none
    a5f8:	ldrb	w5, [x24, w4, sxtw]
    a5fc:	cmp	w2, #0x3
    a600:	sub	w3, w2, #0x4
    a604:	ldrb	w5, [x1, x5]
    a608:	strb	w5, [x0, w4, sxtw]
    a60c:	b.eq	a648 <grub_mod_fini+0xa320>  // b.none
    a610:	ldrb	w4, [x24, w3, sxtw]
    a614:	cmp	w2, #0x4
    a618:	sub	w2, w2, #0x5
    a61c:	ldrb	w4, [x1, x4]
    a620:	strb	w4, [x0, w3, sxtw]
    a624:	b.eq	a648 <grub_mod_fini+0xa320>  // b.none
    a628:	ldrb	w3, [x24, w2, sxtw]
    a62c:	cmp	w26, #0x5
    a630:	ldrb	w3, [x1, x3]
    a634:	strb	w3, [x0, w2, sxtw]
    a638:	b.le	a648 <grub_mod_fini+0xa320>
    a63c:	ldrb	w2, [x24]
    a640:	ldrb	w1, [x1, x2]
    a644:	strb	w1, [sp, #96]
    a648:	mov	x28, x0
    a64c:	b	a000 <grub_mod_fini+0x9cd8>
    a650:	and	w2, w2, #0xf
    a654:	stp	w2, w6, [sp, #104]
    a658:	b	a4b0 <grub_mod_fini+0xa188>
    a65c:	add	x0, sp, #0x60
    a660:	mov	x28, x0
    a664:	b	a000 <grub_mod_fini+0x9cd8>
    a668:	mov	w25, w26
    a66c:	mov	w24, #0x0                   	// #0
    a670:	ldp	x27, x28, [sp, #80]
    a674:	b	a56c <grub_mod_fini+0xa244>
    a678:	cmn	x0, #0x3
    a67c:	b.hi	a090 <grub_mod_fini+0x9d68>  // b.pmore
    a680:	sub	w24, w0, w24
    a684:	mov	x2, #0x8                   	// #8
    a688:	add	x0, x19, #0x20
    a68c:	mov	w1, #0x0                   	// #0
    a690:	bl	0 <grub_memset>
    a694:	str	w24, [x19, #44]
    a698:	cmn	w26, #0x1
    a69c:	b.eq	a090 <grub_mod_fini+0x9d68>  // b.none
    a6a0:	ldp	x27, x28, [sp, #80]
    a6a4:	b	a3dc <grub_mod_fini+0xa0b4>
    a6a8:	cmp	x1, #0x0
    a6ac:	cset	w1, eq  // eq = none
    a6b0:	b	9d84 <grub_mod_fini+0x9a5c>
    a6b4:	nop
	...
    a6c0:	sub	sp, sp, #0x260
    a6c4:	add	x8, sp, #0x200
    a6c8:	stp	x29, x30, [sp]
    a6cc:	mov	x29, sp
    a6d0:	stp	x19, x20, [sp, #16]
    a6d4:	mov	w19, w3
    a6d8:	stp	x21, x22, [sp, #32]
    a6dc:	mov	w21, w4
    a6e0:	mov	w22, w5
    a6e4:	stp	x25, x26, [sp, #64]
    a6e8:	mov	x25, x0
    a6ec:	stp	x27, x28, [sp, #80]
    a6f0:	ldr	x28, [x0, #32]
    a6f4:	stp	xzr, xzr, [x8, #16]
    a6f8:	ldr	x26, [x0]
    a6fc:	stp	xzr, xzr, [x8]
    a700:	ldr	w0, [sp, #608]
    a704:	stp	xzr, xzr, [x8, #32]
    a708:	stp	xzr, xzr, [x8, #48]
    a70c:	stp	xzr, xzr, [x8, #64]
    a710:	stp	xzr, xzr, [x8, #80]
    a714:	str	x6, [sp, #120]
    a718:	str	w0, [sp, #144]
    a71c:	str	w2, [sp, #156]
    a720:	str	x1, [sp, #168]
    a724:	str	x7, [sp, #248]
    a728:	stp	xzr, xzr, [sp, #416]
    a72c:	stp	xzr, xzr, [sp, #432]
    a730:	stp	xzr, xzr, [sp, #448]
    a734:	stp	xzr, xzr, [sp, #464]
    a738:	stp	xzr, xzr, [sp, #480]
    a73c:	stp	xzr, xzr, [sp, #496]
    a740:	str	x26, [sp, #528]
    a744:	cbz	x28, a75c <grub_mod_fini+0xa434>
    a748:	ldrb	w0, [x25, #56]
    a74c:	tst	x0, #0x8
    a750:	ccmp	w3, w4, #0x4, ne  // ne = any
    a754:	b.ne	ab08 <grub_mod_fini+0xa7e0>  // b.any
    a758:	mov	x28, #0x0                   	// #0
    a75c:	ldr	x0, [x25, #48]
    a760:	str	wzr, [sp, #220]
    a764:	ldr	x2, [sp, #120]
    a768:	cmp	x0, x2
    a76c:	b.cs	a784 <grub_mod_fini+0xa45c>  // b.hs, b.nlast
    a770:	sub	w1, w2, #0x1
    a774:	sub	w0, w1, w0
    a778:	str	w0, [sp, #220]
    a77c:	sub	x0, x2, w0, sxtw
    a780:	str	x0, [sp, #120]
    a784:	ldr	x0, [x25, #16]
    a788:	cbz	x0, b2b8 <grub_mod_fini+0xaf90>
    a78c:	ldr	x0, [x26, #72]
    a790:	cbz	x0, b2b8 <grub_mod_fini+0xaf90>
    a794:	ldr	x1, [x26, #80]
    a798:	cbz	x1, b2b8 <grub_mod_fini+0xaf90>
    a79c:	ldr	x2, [x26, #88]
    a7a0:	cbz	x2, b2b8 <grub_mod_fini+0xaf90>
    a7a4:	ldr	x3, [x26, #96]
    a7a8:	cbz	x3, b2b8 <grub_mod_fini+0xaf90>
    a7ac:	ldr	w0, [x0, #12]
    a7b0:	cbz	w0, aacc <grub_mod_fini+0xa7a4>
    a7b4:	stp	x23, x24, [sp, #48]
    a7b8:	ldr	x0, [sp, #120]
    a7bc:	cbnz	x0, b3c0 <grub_mod_fini+0xb098>
    a7c0:	ldr	w0, [x26, #140]
    a7c4:	cmp	w0, #0x0
    a7c8:	cset	w0, ne  // ne = any
    a7cc:	str	w0, [sp, #136]
    a7d0:	str	w0, [sp, #164]
    a7d4:	ldr	x0, [x26, #16]
    a7d8:	add	x7, sp, #0x1e4
    a7dc:	ldr	w1, [x26, #164]
    a7e0:	ldr	x3, [x25, #24]
    a7e4:	add	w0, w0, #0x1
    a7e8:	ldr	w5, [sp, #156]
    a7ec:	cmp	w0, w1
    a7f0:	ldr	x6, [x25, #40]
    a7f4:	csel	w0, w0, w1, ge  // ge = tcont
    a7f8:	ldrb	w2, [x26, #160]
    a7fc:	add	w20, w5, #0x1
    a800:	and	x4, x3, #0x400000
    a804:	cmp	w0, w20
    a808:	orr	x4, x4, x6
    a80c:	csel	w20, w0, w20, le
    a810:	cmp	x4, #0x0
    a814:	ubfx	w3, w3, #22, #1
    a818:	ldr	x0, [sp, #168]
    a81c:	cset	w4, ne  // ne = any
    a820:	stp	w5, w5, [x7, #-8]
    a824:	cmp	w1, #0x1
    a828:	stp	w5, w5, [x7]
    a82c:	str	x6, [sp, #208]
    a830:	str	x0, [sp, #416]
    a834:	ubfx	x0, x2, #2, #1
    a838:	ubfx	x2, x2, #3, #1
    a83c:	str	x6, [sp, #496]
    a840:	strb	w3, [sp, #512]
    a844:	strb	w0, [sp, #513]
    a848:	strb	w2, [sp, #514]
    a84c:	strb	w4, [sp, #515]
    a850:	str	w1, [sp, #520]
    a854:	b.le	a8a0 <grub_mod_fini+0xa578>
    a858:	mov	x0, #0x7fffffff            	// #2147483647
    a85c:	sxtw	x23, w20
    a860:	cmp	x0, w20, sxtw
    a864:	b.cc	c2d8 <grub_mod_fini+0xbfb0>  // b.lo, b.ul, b.last
    a868:	lsl	x23, x23, #2
    a86c:	mov	x0, #0x0                   	// #0
    a870:	mov	x1, x23
    a874:	bl	0 <grub_realloc>
    a878:	mov	x2, x0
    a87c:	cbz	x0, b6e8 <grub_mod_fini+0xb3c0>
    a880:	ldr	x0, [sp, #440]
    a884:	str	x2, [sp, #432]
    a888:	cbz	x0, b6f8 <grub_mod_fini+0xb3d0>
    a88c:	mov	x1, x23
    a890:	bl	0 <grub_realloc>
    a894:	cbz	x0, b6e8 <grub_mod_fini+0xb3c0>
    a898:	ldrb	w4, [sp, #515]
    a89c:	str	x0, [sp, #440]
    a8a0:	cbnz	w4, b700 <grub_mod_fini+0xb3d8>
    a8a4:	ldrb	w0, [x26, #160]
    a8a8:	add	x1, x26, #0xa8
    a8ac:	str	w20, [sp, #468]
    a8b0:	str	x1, [sp, #504]
    a8b4:	ubfx	x0, x0, #4, #1
    a8b8:	strb	w0, [sp, #518]
    a8bc:	ldr	x0, [sp, #168]
    a8c0:	str	x0, [sp, #424]
    a8c4:	ldr	w0, [x26, #164]
    a8c8:	ldr	w1, [sp, #156]
    a8cc:	cmp	w0, #0x1
    a8d0:	b.le	a8d8 <grub_mod_fini+0xa5b0>
    a8d4:	mov	w1, #0x0                   	// #0
    a8d8:	ldrb	w0, [x25, #56]
    a8dc:	add	x3, sp, #0x1dc
    a8e0:	ldr	w20, [x26, #140]
    a8e4:	mov	w2, #0xffffffff            	// #-1
    a8e8:	str	w2, [sp, #540]
    a8ec:	ubfx	x0, x0, #7, #1
    a8f0:	strb	w0, [sp, #517]
    a8f4:	ldr	w0, [sp, #144]
    a8f8:	cmp	wzr, w20, lsl #1
    a8fc:	stp	w1, w1, [x3, #-16]
    a900:	lsl	w20, w20, #1
    a904:	stp	w22, w22, [x3, #8]
    a908:	str	w0, [sp, #536]
    a90c:	b.lt	b6b8 <grub_mod_fini+0xb390>  // b.tstop
    a910:	mov	w0, #0x1                   	// #1
    a914:	str	w0, [sp, #584]
    a918:	ldr	x0, [sp, #120]
    a91c:	str	w20, [sp, #568]
    a920:	str	w20, [sp, #592]
    a924:	cmp	x0, #0x1
    a928:	b.ls	b784 <grub_mod_fini+0xb45c>  // b.plast
    a92c:	ldr	w0, [sp, #468]
    a930:	mov	w1, #0x7ffffffe            	// #2147483646
    a934:	cmp	w0, w1
    a938:	b.hi	b6e8 <grub_mod_fini+0xb3c0>  // b.pmore
    a93c:	add	w0, w0, #0x1
    a940:	sbfiz	x0, x0, #3, #32
    a944:	bl	0 <grub_malloc>
    a948:	str	x0, [sp, #552]
    a94c:	mov	x8, x0
    a950:	cbz	x0, b2f0 <grub_mod_fini+0xafc8>
    a954:	ldr	x0, [sp, #144]
    a958:	mov	w1, #0x6                   	// #6
    a95c:	mov	w2, #0x1                   	// #1
    a960:	str	w19, [sp, #304]
    a964:	tst	x0, #0x1
    a968:	mov	w0, #0x4                   	// #4
    a96c:	csel	w1, w0, w1, ne  // ne = any
    a970:	cmp	w19, w21
    a974:	str	w1, [sp, #492]
    a978:	csel	w1, w19, w21, ge  // ge = tcont
    a97c:	str	w1, [sp, #140]
    a980:	mov	w1, #0x8                   	// #8
    a984:	cneg	w2, w2, gt
    a988:	str	w1, [sp, #160]
    a98c:	ldr	w1, [x26, #164]
    a990:	str	w2, [sp, #188]
    a994:	csel	w2, w19, w21, le
    a998:	str	w2, [sp, #184]
    a99c:	str	w1, [sp, #256]
    a9a0:	cbz	x28, a9e8 <grub_mod_fini+0xa6c0>
    a9a4:	cmp	w1, #0x1
    a9a8:	b.eq	a9c8 <grub_mod_fini+0xa6a0>  // b.none
    a9ac:	ldr	x0, [x25, #24]
    a9b0:	ldr	x1, [sp, #208]
    a9b4:	and	x0, x0, #0x400000
    a9b8:	orr	x0, x1, x0
    a9bc:	cmp	x0, #0x0
    a9c0:	cset	w0, eq  // eq = none
    a9c4:	lsl	w0, w0, #2
    a9c8:	ldr	x1, [sp, #208]
    a9cc:	cmp	w19, w21
    a9d0:	cset	w2, le
    a9d4:	cmp	x1, #0x0
    a9d8:	cset	w1, ne  // ne = any
    a9dc:	orr	w0, w1, w0
    a9e0:	orr	w0, w0, w2, lsl #1
    a9e4:	str	w0, [sp, #160]
    a9e8:	ldr	w0, [sp, #184]
    a9ec:	ldr	w1, [sp, #140]
    a9f0:	cmp	w19, w0
    a9f4:	cset	w0, lt  // lt = tstop
    a9f8:	cmp	w19, w1
    a9fc:	cset	w1, gt
    aa00:	orr	w0, w0, w1
    aa04:	cbnz	w0, c3c8 <grub_mod_fini+0xc0a0>
    aa08:	cmp	w19, w21
    aa0c:	add	x0, sp, #0x130
    aa10:	csel	x0, x0, xzr, le
    aa14:	str	x26, [sp, #176]
    aa18:	cmp	x0, #0x0
    aa1c:	str	x28, [sp, #192]
    aa20:	stp	x25, x0, [sp, #232]
    aa24:	cset	w0, ne  // ne = any
    aa28:	str	w0, [sp, #260]
    aa2c:	ldr	w0, [sp, #160]
    aa30:	cmp	w0, #0x7
    aa34:	b.eq	b660 <grub_mod_fini+0xb338>  // b.none
    aa38:	cmp	w0, #0x8
    aa3c:	b.eq	ab74 <grub_mod_fini+0xa84c>  // b.none
    aa40:	cmp	w0, #0x5
    aa44:	b.gt	ab14 <grub_mod_fini+0xa7ec>
    aa48:	cmp	w0, #0x3
    aa4c:	b.gt	b5e4 <grub_mod_fini+0xb2bc>
    aa50:	ldr	w24, [sp, #140]
    aa54:	ldr	w21, [sp, #156]
    aa58:	ldp	w23, w22, [sp, #184]
    aa5c:	ldr	w2, [sp, #456]
    aa60:	ldr	x20, [sp, #192]
    aa64:	b	aa9c <grub_mod_fini+0xa774>
    aa68:	cmp	w21, w19
    aa6c:	mov	x0, x20
    aa70:	b.le	aa80 <grub_mod_fini+0xa758>
    aa74:	ldr	x0, [sp, #424]
    aa78:	ldrb	w0, [x0, w1, uxtw]
    aa7c:	add	x0, x20, x0
    aa80:	ldrb	w0, [x0]
    aa84:	cbnz	w0, ab74 <grub_mod_fini+0xa84c>
    aa88:	add	w19, w19, w22
    aa8c:	str	w19, [sp, #304]
    aa90:	cmp	w19, w23
    aa94:	ccmp	w19, w24, #0x0, ge  // ge = tcont
    aa98:	b.gt	b118 <grub_mod_fini+0xadf0>
    aa9c:	ldr	w0, [sp, #464]
    aaa0:	sub	w1, w19, w2
    aaa4:	cmp	w0, w1
    aaa8:	b.hi	aa68 <grub_mod_fini+0xa740>  // b.pmore
    aaac:	ldr	w2, [sp, #144]
    aab0:	mov	w1, w19
    aab4:	add	x0, sp, #0x1a0
    aab8:	bl	9b78 <grub_mod_fini+0x9850>
    aabc:	cbnz	w0, c2e8 <grub_mod_fini+0xbfc0>
    aac0:	ldr	w2, [sp, #456]
    aac4:	sub	w1, w19, w2
    aac8:	b	aa68 <grub_mod_fini+0xa740>
    aacc:	ldr	w0, [x1, #12]
    aad0:	cbnz	w0, a7b4 <grub_mod_fini+0xa48c>
    aad4:	ldr	w0, [x2, #12]
    aad8:	cbz	w0, aae4 <grub_mod_fini+0xa7bc>
    aadc:	ldrsb	w0, [x25, #56]
    aae0:	tbnz	w0, #31, a7b4 <grub_mod_fini+0xa48c>
    aae4:	mov	w0, #0x1                   	// #1
    aae8:	str	w0, [sp, #152]
    aaec:	cmp	w19, #0x0
    aaf0:	ccmp	w21, #0x0, #0x4, ne  // ne = any
    aaf4:	b.ne	b2c0 <grub_mod_fini+0xaf98>  // b.any
    aaf8:	mov	w21, #0x0                   	// #0
    aafc:	mov	w19, #0x0                   	// #0
    ab00:	stp	x23, x24, [sp, #48]
    ab04:	b	a7b8 <grub_mod_fini+0xa490>
    ab08:	tst	x0, #0x1
    ab0c:	csel	x28, x28, xzr, eq  // eq = none
    ab10:	b	a75c <grub_mod_fini+0xa434>
    ab14:	ldr	w0, [sp, #160]
    ab18:	cmp	w0, #0x6
    ab1c:	b.ne	aa50 <grub_mod_fini+0xa728>  // b.any
    ab20:	ldr	w0, [sp, #140]
    ab24:	mov	w3, #0x0                   	// #0
    ab28:	cmp	w0, w19
    ab2c:	sxtw	x0, w19
    ab30:	b.le	ab68 <grub_mod_fini+0xa840>
    ab34:	ldr	w6, [sp, #140]
    ab38:	ldr	x5, [sp, #168]
    ab3c:	ldr	x4, [sp, #192]
    ab40:	add	w2, w0, #0x1
    ab44:	ldrb	w1, [x5, x0]
    ab48:	ldrb	w1, [x4, x1]
    ab4c:	cbnz	w1, bee4 <grub_mod_fini+0xbbbc>
    ab50:	add	x0, x0, #0x1
    ab54:	mov	w3, #0x1                   	// #1
    ab58:	cmp	w6, w0
    ab5c:	b.gt	ab40 <grub_mod_fini+0xa818>
    ab60:	mov	w19, w2
    ab64:	str	w2, [sp, #304]
    ab68:	ldr	w0, [sp, #140]
    ab6c:	cmp	w0, w19
    ab70:	b.eq	c210 <grub_mod_fini+0xbee8>  // b.none
    ab74:	ldr	w2, [sp, #144]
    ab78:	add	x0, sp, #0x1a0
    ab7c:	mov	w1, w19
    ab80:	bl	9b78 <grub_mod_fini+0x9850>
    ab84:	str	w0, [sp, #152]
    ab88:	cbnz	w0, b7f8 <grub_mod_fini+0xb4d0>
    ab8c:	ldr	w0, [sp, #256]
    ab90:	cmp	w0, #0x1
    ab94:	b.eq	abb0 <grub_mod_fini+0xa888>  // b.none
    ab98:	ldr	w0, [sp, #460]
    ab9c:	cbz	w0, abb0 <grub_mod_fini+0xa888>
    aba0:	ldr	x0, [sp, #432]
    aba4:	ldr	w0, [x0]
    aba8:	cmn	w0, #0x1
    abac:	b.eq	b0f4 <grub_mod_fini+0xadcc>  // b.none
    abb0:	ldr	x19, [sp, #528]
    abb4:	str	wzr, [sp, #308]
    abb8:	ldr	w0, [sp, #472]
    abbc:	str	w0, [sp, #96]
    abc0:	ldr	x28, [x19, #72]
    abc4:	str	xzr, [sp, #560]
    abc8:	mov	w1, w0
    abcc:	str	wzr, [sp, #584]
    abd0:	ldrsb	w0, [x28, #80]
    abd4:	tbz	w0, #31, ac08 <grub_mod_fini+0xa8e0>
    abd8:	ldr	w2, [sp, #536]
    abdc:	sub	w1, w1, #0x1
    abe0:	add	x0, sp, #0x1a0
    abe4:	bl	1c78 <grub_mod_fini+0x1950>
    abe8:	tbnz	w0, #0, b798 <grub_mod_fini+0xb470>
    abec:	cbz	w0, ac08 <grub_mod_fini+0xa8e0>
    abf0:	and	w1, w0, #0x6
    abf4:	cmp	w1, #0x6
    abf8:	b.eq	c278 <grub_mod_fini+0xbf50>  // b.none
    abfc:	tbnz	w0, #1, bfac <grub_mod_fini+0xbc84>
    ac00:	tbnz	w0, #2, bfe8 <grub_mod_fini+0xbcc0>
    ac04:	nop
    ac08:	ldr	x0, [sp, #552]
    ac0c:	cbz	x0, b5d4 <grub_mod_fini+0xb2ac>
    ac10:	ldr	w2, [sp, #96]
    ac14:	ldr	w1, [x19, #140]
    ac18:	str	x28, [x0, w2, sxtw #3]
    ac1c:	cbnz	w1, c10c <grub_mod_fini+0xbde4>
    ac20:	ldr	w1, [sp, #260]
    ac24:	ldrb	w0, [x28, #80]
    ac28:	mov	w8, w1
    ac2c:	str	wzr, [sp, #104]
    ac30:	mov	w27, #0xffffffff            	// #-1
    ac34:	tbnz	w0, #4, bf04 <grub_mod_fini+0xbbdc>
    ac38:	ldr	x0, [sp, #240]
    ac3c:	str	x0, [sp, #128]
    ac40:	ldr	w9, [sp, #472]
    ac44:	ldr	w0, [sp, #488]
    ac48:	cmp	w9, w0
    ac4c:	b.ge	c39c <grub_mod_fini+0xc074>  // b.tcont
    ac50:	ldr	w0, [sp, #468]
    ac54:	add	w23, w9, #0x1
    ac58:	str	w27, [sp, #112]
    ac5c:	mov	w27, w8
    ac60:	cmp	w23, w0
    ac64:	b.ge	ad1c <grub_mod_fini+0xa9f4>  // b.tcont
    ac68:	ldr	w0, [sp, #460]
    ac6c:	cmp	w23, w0
    ac70:	b.ge	b2a8 <grub_mod_fini+0xaf80>  // b.tcont
    ac74:	ldrb	w0, [x28, #80]
    ac78:	tbnz	w0, #5, ad48 <grub_mod_fini+0xaa20>
    ac7c:	add	w0, w9, #0x1
    ac80:	str	w0, [sp, #472]
    ac84:	ldr	x0, [x28, #64]
    ac88:	ldr	x1, [sp, #424]
    ac8c:	ldrb	w20, [x1, w9, sxtw]
    ac90:	cbz	x0, aed0 <grub_mod_fini+0xaba8>
    ac94:	mov	w4, w20
    ac98:	ldr	x8, [x0, x4, lsl #3]
    ac9c:	ldr	x0, [sp, #552]
    aca0:	cbz	x0, acb8 <grub_mod_fini+0xa990>
    aca4:	mov	x2, x8
    aca8:	add	x1, sp, #0x1a0
    acac:	add	x0, sp, #0x134
    acb0:	bl	99f8 <grub_mod_fini+0x96d0>
    acb4:	mov	x8, x0
    acb8:	cbz	x8, af18 <grub_mod_fini+0xabf0>
    acbc:	cmp	x28, x8
    acc0:	ldr	w1, [sp, #96]
    acc4:	csel	w27, w27, wzr, eq  // eq = none
    acc8:	ldrb	w0, [x8, #80]
    accc:	cmp	w27, #0x0
    acd0:	ldr	w9, [sp, #472]
    acd4:	csel	w1, w1, w23, eq  // eq = none
    acd8:	str	w1, [sp, #96]
    acdc:	tbz	w0, #4, acfc <grub_mod_fini+0xa9d4>
    ace0:	tbnz	w0, #7, b1d0 <grub_mod_fini+0xaea8>
    ace4:	ldr	w0, [sp, #136]
    ace8:	cbz	w0, bf28 <grub_mod_fini+0xbc00>
    acec:	ldr	w0, [sp, #136]
    acf0:	str	w0, [sp, #104]
    acf4:	str	w9, [sp, #112]
    acf8:	str	xzr, [sp, #128]
    acfc:	ldr	w0, [sp, #488]
    ad00:	cmp	w0, w9
    ad04:	b.le	b1c8 <grub_mod_fini+0xaea0>
    ad08:	ldr	w0, [sp, #468]
    ad0c:	add	w23, w9, #0x1
    ad10:	mov	x28, x8
    ad14:	cmp	w23, w0
    ad18:	b.lt	ac68 <grub_mod_fini+0xa940>  // b.tstop
    ad1c:	ldr	w1, [sp, #480]
    ad20:	cmp	w0, w1
    ad24:	b.ge	ac68 <grub_mod_fini+0xa940>  // b.tcont
    ad28:	add	w1, w9, #0x2
    ad2c:	add	x0, sp, #0x1a0
    ad30:	bl	8df8 <grub_mod_fini+0x8ad0>
    ad34:	str	w0, [sp, #308]
    ad38:	cbnz	w0, beb0 <grub_mod_fini+0xbb88>
    ad3c:	ldrb	w0, [x28, #80]
    ad40:	ldr	w9, [sp, #472]
    ad44:	tbz	w0, #5, ac7c <grub_mod_fini+0xa954>
    ad48:	ldr	w7, [x28, #12]
    ad4c:	ldr	x19, [sp, #528]
    ad50:	cmp	w7, #0x0
    ad54:	b.le	aeb0 <grub_mod_fini+0xab88>
    ad58:	add	x26, x19, #0xc8
    ad5c:	mov	x20, #0x0                   	// #0
    ad60:	ldr	x0, [x28, #16]
    ad64:	ldr	x8, [x19]
    ad68:	ldr	w5, [x0, x20, lsl #2]
    ad6c:	add	x0, x8, w5, sxtw #4
    ad70:	sxtw	x22, w5
    ad74:	ldrb	w1, [x0, #10]
    ad78:	tbz	w1, #4, aea4 <grub_mod_fini+0xab7c>
    ad7c:	ldr	w6, [x0, #8]
    ad80:	tst	w6, #0x3ff00
    ad84:	b.eq	adb8 <grub_mod_fini+0xaa90>  // b.none
    ad88:	ldr	w2, [sp, #536]
    ad8c:	mov	w1, w9
    ad90:	add	x0, sp, #0x1a0
    ad94:	bl	1c78 <grub_mod_fini+0x1950>
    ad98:	ubfx	x2, x6, #8, #10
    ad9c:	tbz	w6, #10, b1ec <grub_mod_fini+0xaec4>
    ada0:	tbz	w0, #0, aea4 <grub_mod_fini+0xab7c>
    ada4:	tbnz	w2, #3, aea4 <grub_mod_fini+0xab7c>
    ada8:	tbz	w2, #5, adb0 <grub_mod_fini+0xaa88>
    adac:	tbz	w0, #1, aea4 <grub_mod_fini+0xab7c>
    adb0:	tbz	w2, #7, adb8 <grub_mod_fini+0xaa90>
    adb4:	tbz	w0, #3, aea4 <grub_mod_fini+0xab7c>
    adb8:	mov	w4, w9
    adbc:	mov	w2, w5
    adc0:	mov	x0, x8
    adc4:	add	x3, sp, #0x1a0
    adc8:	mov	x1, x26
    adcc:	bl	3038 <grub_mod_fini+0x2d10>
    add0:	cbz	w0, ae9c <grub_mod_fini+0xab74>
    add4:	ldr	w1, [sp, #584]
    add8:	ldr	w21, [sp, #472]
    addc:	cmp	w1, w0
    ade0:	ldr	w2, [sp, #468]
    ade4:	csel	w1, w1, w0, ge  // ge = tcont
    ade8:	str	w1, [sp, #584]
    adec:	add	w21, w0, w21
    adf0:	ldr	w24, [sp, #560]
    adf4:	cmp	w21, w2
    adf8:	b.lt	b1f8 <grub_mod_fini+0xaed0>  // b.tstop
    adfc:	ldr	w0, [sp, #480]
    ae00:	cmp	w2, w0
    ae04:	b.ge	b1f8 <grub_mod_fini+0xaed0>  // b.tcont
    ae08:	add	w1, w21, #0x1
    ae0c:	add	x0, sp, #0x1a0
    ae10:	bl	8df8 <grub_mod_fini+0x8ad0>
    ae14:	cbnz	w0, b220 <grub_mod_fini+0xaef8>
    ae18:	cmp	w21, w24
    ae1c:	ldr	x25, [sp, #552]
    ae20:	b.gt	b280 <grub_mod_fini+0xaf58>
    ae24:	str	wzr, [sp, #344]
    ae28:	sxtw	x24, w21
    ae2c:	ldr	x0, [x19, #24]
    ae30:	ldr	x1, [x25, x24, lsl #3]
    ae34:	ldr	x2, [x19, #48]
    ae38:	ldrsw	x0, [x0, x22, lsl #2]
    ae3c:	add	x0, x2, x0, lsl #4
    ae40:	cbz	x1, b234 <grub_mod_fini+0xaf0c>
    ae44:	ldr	x1, [x1, #56]
    ae48:	mov	x2, x0
    ae4c:	add	x0, sp, #0x178
    ae50:	bl	6fc0 <grub_mod_fini+0x6c98>
    ae54:	str	w0, [sp, #344]
    ae58:	cbnz	w0, b220 <grub_mod_fini+0xaef8>
    ae5c:	ldr	w2, [sp, #536]
    ae60:	sub	w1, w21, #0x1
    ae64:	add	x0, sp, #0x1a0
    ae68:	bl	1c78 <grub_mod_fini+0x1950>
    ae6c:	mov	w3, w0
    ae70:	ldr	x21, [sp, #552]
    ae74:	mov	x1, x19
    ae78:	add	x2, sp, #0x178
    ae7c:	add	x0, sp, #0x158
    ae80:	bl	5478 <grub_mod_fini+0x5150>
    ae84:	str	x0, [x21, x24, lsl #3]
    ae88:	ldr	x0, [sp, #384]
    ae8c:	bl	0 <grub_free>
    ae90:	ldr	x1, [sp, #552]
    ae94:	ldr	x0, [x1, x24, lsl #3]
    ae98:	cbz	x0, b274 <grub_mod_fini+0xaf4c>
    ae9c:	ldr	w7, [x28, #12]
    aea0:	ldr	w9, [sp, #472]
    aea4:	add	x20, x20, #0x1
    aea8:	cmp	w7, w20
    aeac:	b.gt	ad60 <grub_mod_fini+0xaa38>
    aeb0:	add	w0, w9, #0x1
    aeb4:	str	w0, [sp, #472]
    aeb8:	ldr	x0, [x28, #64]
    aebc:	str	wzr, [sp, #308]
    aec0:	ldr	x1, [sp, #424]
    aec4:	ldrb	w20, [x1, w9, sxtw]
    aec8:	cbnz	x0, ac94 <grub_mod_fini+0xa96c>
    aecc:	nop
    aed0:	mov	x22, x28
    aed4:	stp	w27, w23, [sp, #200]
    aed8:	str	w20, [sp, #216]
    aedc:	ldr	x5, [x22, #72]
    aee0:	cbz	x5, b804 <grub_mod_fini+0xb4dc>
    aee4:	ldr	w2, [sp, #536]
    aee8:	add	x0, sp, #0x1a0
    aeec:	ldr	w1, [sp, #472]
    aef0:	mov	x28, x22
    aef4:	ldr	w20, [sp, #216]
    aef8:	sub	w1, w1, #0x1
    aefc:	bl	1c78 <grub_mod_fini+0x1950>
    af00:	ldp	w27, w23, [sp, #200]
    af04:	and	x1, x20, #0xff
    af08:	tbz	w0, #0, b2e0 <grub_mod_fini+0xafb8>
    af0c:	add	x1, x1, #0x100
    af10:	ldr	x8, [x5, x1, lsl #3]
    af14:	b	ac9c <grub_mod_fini+0xa974>
    af18:	ldr	w0, [sp, #308]
    af1c:	ldr	x8, [sp, #552]
    af20:	cbnz	w0, b2ec <grub_mod_fini+0xafc4>
    af24:	cbz	x8, b1c8 <grub_mod_fini+0xaea0>
    af28:	ldr	w0, [sp, #164]
    af2c:	ldr	w1, [sp, #104]
    af30:	eor	w0, w0, #0x1
    af34:	tst	w1, w0
    af38:	b.ne	b1c8 <grub_mod_fini+0xaea0>  // b.any
    af3c:	ldr	w0, [sp, #472]
    af40:	sub	x8, x8, #0x8
    af44:	ldr	w2, [sp, #560]
    af48:	mov	w1, #0x0                   	// #0
    af4c:	add	w0, w0, #0x1
    af50:	sxtw	x0, w0
    af54:	b	af64 <grub_mod_fini+0xac3c>
    af58:	ldr	x3, [x8, x0, lsl #3]
    af5c:	mov	w1, #0x1                   	// #1
    af60:	cbnz	x3, b194 <grub_mod_fini+0xae6c>
    af64:	cmp	w2, w0
    af68:	sub	w3, w0, #0x1
    af6c:	mov	w4, w0
    af70:	add	x0, x0, #0x1
    af74:	b.ge	af58 <grub_mod_fini+0xac30>  // b.tcont
    af78:	ldr	w27, [sp, #112]
    af7c:	cbz	w1, af84 <grub_mod_fini+0xac5c>
    af80:	str	w3, [sp, #472]
    af84:	ldr	x1, [sp, #128]
    af88:	cbz	x1, af9c <grub_mod_fini+0xac74>
    af8c:	ldr	w0, [x1]
    af90:	ldr	w2, [sp, #96]
    af94:	add	w0, w0, w2
    af98:	str	w0, [x1]
    af9c:	cmn	w27, #0x1
    afa0:	b.eq	b0e8 <grub_mod_fini+0xadc0>  // b.none
    afa4:	cmn	w27, #0x2
    afa8:	b.eq	cf64 <grub_mod_fini+0xcc3c>  // b.none
    afac:	ldr	x0, [sp, #232]
    afb0:	str	w27, [sp, #540]
    afb4:	ldrb	w0, [x0, #56]
    afb8:	tbnz	w0, #4, b344 <grub_mod_fini+0xb01c>
    afbc:	ldr	x0, [sp, #120]
    afc0:	cmp	x0, #0x1
    afc4:	b.ls	b35c <grub_mod_fini+0xb034>  // b.plast
    afc8:	ldr	x8, [sp, #552]
    afcc:	mov	w3, w27
    afd0:	add	x0, sp, #0x1a0
    afd4:	ldr	x1, [x8, w27, sxtw #3]
    afd8:	add	x2, x1, #0x10
    afdc:	ldr	w1, [x1, #12]
    afe0:	bl	1d58 <grub_mod_fini+0x1a30>
    afe4:	str	w0, [sp, #544]
    afe8:	ldr	x1, [sp, #176]
    afec:	mov	w20, w0
    aff0:	ldrb	w1, [x1, #160]
    aff4:	tbnz	w1, #0, b008 <grub_mod_fini+0xace0>
    aff8:	ldr	x0, [sp, #176]
    affc:	ldr	w0, [x0, #140]
    b000:	cbz	w0, b350 <grub_mod_fini+0xb028>
    b004:	ldr	w20, [sp, #544]
    b008:	mov	w0, #0x7ffffffe            	// #2147483646
    b00c:	cmp	w27, w0
    b010:	ldr	x21, [sp, #528]
    b014:	b.hi	b2ec <grub_mod_fini+0xafc4>  // b.pmore
    b018:	add	w19, w27, #0x1
    b01c:	sbfiz	x22, x19, #3, #32
    b020:	mov	x0, x22
    b024:	bl	0 <grub_malloc>
    b028:	mov	x23, x0
    b02c:	cbz	x0, bfb4 <grub_mod_fini+0xbc8c>
    b030:	ldr	w0, [x21, #140]
    b034:	cbz	w0, b40c <grub_mod_fini+0xb0e4>
    b038:	mov	x0, x22
    b03c:	bl	0 <grub_malloc>
    b040:	mov	x24, x0
    b044:	cbz	x0, c300 <grub_mod_fini+0xbfd8>
    b048:	add	x22, sp, #0x190
    b04c:	sbfiz	x2, x19, #3, #32
    b050:	mov	w1, #0x0                   	// #0
    b054:	mov	x0, x24
    b058:	bl	0 <grub_memset>
    b05c:	mov	x2, #0x10                  	// #16
    b060:	mov	w1, #0x0                   	// #0
    b064:	mov	x0, x22
    b068:	stp	x23, x24, [sp, #376]
    b06c:	str	w20, [sp, #392]
    b070:	str	w27, [sp, #396]
    b074:	bl	0 <grub_memset>
    b078:	add	x1, sp, #0x178
    b07c:	add	x0, sp, #0x1a0
    b080:	bl	7b08 <grub_mod_fini+0x77e0>
    b084:	mov	w19, w0
    b088:	ldr	x0, [sp, #408]
    b08c:	bl	0 <grub_free>
    b090:	cbnz	w19, b398 <grub_mod_fini+0xb070>
    b094:	ldr	x0, [x23]
    b098:	ldr	x1, [x24]
    b09c:	cbnz	x0, c324 <grub_mod_fini+0xbffc>
    b0a0:	cbnz	x1, c324 <grub_mod_fini+0xbffc>
    b0a4:	sub	w3, w27, #0x1
    b0a8:	cbz	w27, b0d8 <grub_mod_fini+0xadb0>
    b0ac:	ldr	x1, [sp, #552]
    b0b0:	sxtw	x3, w3
    b0b4:	nop
    b0b8:	ldr	x2, [x1, x3, lsl #3]
    b0bc:	mov	w27, w3
    b0c0:	cbz	x2, b0cc <grub_mod_fini+0xada4>
    b0c4:	ldrb	w0, [x2, #80]
    b0c8:	tbnz	w0, #4, b7c4 <grub_mod_fini+0xb49c>
    b0cc:	sub	x3, x3, #0x1
    b0d0:	cmn	w3, #0x1
    b0d4:	b.ne	b0b8 <grub_mod_fini+0xad90>  // b.any
    b0d8:	mov	x0, x23
    b0dc:	bl	0 <grub_free>
    b0e0:	mov	x0, x24
    b0e4:	bl	0 <grub_free>
    b0e8:	add	x0, sp, #0x1a0
    b0ec:	bl	1b40 <grub_mod_fini+0x1818>
    b0f0:	ldr	w19, [sp, #304]
    b0f4:	ldr	w0, [sp, #188]
    b0f8:	add	w19, w19, w0
    b0fc:	ldr	w0, [sp, #184]
    b100:	str	w19, [sp, #304]
    b104:	cmp	w19, w0
    b108:	ldr	w0, [sp, #140]
    b10c:	ccmp	w19, w0, #0x0, ge  // ge = tcont
    b110:	b.le	aa2c <grub_mod_fini+0xa704>
    b114:	nop
    b118:	ldr	x26, [sp, #176]
    b11c:	mov	w0, #0x1                   	// #1
    b120:	str	w0, [sp, #152]
    b124:	ldr	x8, [sp, #552]
    b128:	mov	x0, x8
    b12c:	bl	0 <grub_free>
    b130:	ldr	w0, [x26, #140]
    b134:	cbz	w0, b308 <grub_mod_fini+0xafe0>
    b138:	add	x0, sp, #0x1a0
    b13c:	bl	1b40 <grub_mod_fini+0x1818>
    b140:	ldr	x0, [sp, #600]
    b144:	bl	0 <grub_free>
    b148:	ldr	x0, [sp, #576]
    b14c:	bl	0 <grub_free>
    b150:	ldr	x0, [sp, #432]
    b154:	bl	0 <grub_free>
    b158:	ldr	x0, [sp, #440]
    b15c:	bl	0 <grub_free>
    b160:	ldrb	w0, [sp, #515]
    b164:	cbz	w0, b320 <grub_mod_fini+0xaff8>
    b168:	ldr	x0, [sp, #424]
    b16c:	bl	0 <grub_free>
    b170:	ldr	w0, [sp, #152]
    b174:	ldp	x29, x30, [sp]
    b178:	ldp	x19, x20, [sp, #16]
    b17c:	ldp	x21, x22, [sp, #32]
    b180:	ldp	x23, x24, [sp, #48]
    b184:	ldp	x25, x26, [sp, #64]
    b188:	ldp	x27, x28, [sp, #80]
    b18c:	add	sp, sp, #0x260
    b190:	ret
    b194:	add	x1, sp, #0x1a0
    b198:	add	x0, sp, #0x134
    b19c:	mov	x2, #0x0                   	// #0
    b1a0:	str	w4, [sp, #472]
    b1a4:	bl	99f8 <grub_mod_fini+0x96d0>
    b1a8:	ldr	w1, [sp, #308]
    b1ac:	cbnz	w1, b1bc <grub_mod_fini+0xae94>
    b1b0:	cbnz	x0, bf20 <grub_mod_fini+0xbbf8>
    b1b4:	ldr	x8, [sp, #552]
    b1b8:	b	af3c <grub_mod_fini+0xac14>
    b1bc:	mov	x8, x0
    b1c0:	cbnz	x0, acbc <grub_mod_fini+0xa994>
    b1c4:	nop
    b1c8:	ldr	w27, [sp, #112]
    b1cc:	b	af84 <grub_mod_fini+0xac5c>
    b1d0:	ldr	w1, [x8, #12]
    b1d4:	mov	w3, w9
    b1d8:	add	x2, x8, #0x10
    b1dc:	add	x0, sp, #0x1a0
    b1e0:	bl	1d58 <grub_mod_fini+0x1a30>
    b1e4:	cbz	w0, acfc <grub_mod_fini+0xa9d4>
    b1e8:	b	ace4 <grub_mod_fini+0xa9bc>
    b1ec:	tbz	w2, #3, ada8 <grub_mod_fini+0xaa80>
    b1f0:	tbz	w0, #0, ada8 <grub_mod_fini+0xaa80>
    b1f4:	b	aea4 <grub_mod_fini+0xab7c>
    b1f8:	ldr	w0, [sp, #460]
    b1fc:	cmp	w21, w0
    b200:	b.lt	ae18 <grub_mod_fini+0xaaf0>  // b.tstop
    b204:	ldr	w1, [sp, #480]
    b208:	cmp	w0, w1
    b20c:	b.ge	ae18 <grub_mod_fini+0xaaf0>  // b.tcont
    b210:	add	w1, w21, #0x1
    b214:	add	x0, sp, #0x1a0
    b218:	bl	8df8 <grub_mod_fini+0x8ad0>
    b21c:	cbz	w0, ae18 <grub_mod_fini+0xaaf0>
    b220:	ldr	x1, [sp, #552]
    b224:	str	w0, [sp, #308]
    b228:	cbz	x1, b400 <grub_mod_fini+0xb0d8>
    b22c:	mov	x8, #0x0                   	// #0
    b230:	b	aca4 <grub_mod_fini+0xa97c>
    b234:	ldp	x4, x5, [x0]
    b238:	add	x0, sp, #0x200
    b23c:	ldr	w2, [sp, #536]
    b240:	sub	w1, w21, #0x1
    b244:	stp	x4, x5, [x0, #-136]
    b248:	add	x0, sp, #0x1a0
    b24c:	bl	1c78 <grub_mod_fini+0x1950>
    b250:	mov	w3, w0
    b254:	mov	x1, x19
    b258:	add	x2, sp, #0x178
    b25c:	add	x0, sp, #0x158
    b260:	bl	5478 <grub_mod_fini+0x5150>
    b264:	ldr	x1, [sp, #552]
    b268:	str	x0, [x25, x24, lsl #3]
    b26c:	ldr	x0, [x1, x24, lsl #3]
    b270:	cbnz	x0, ae9c <grub_mod_fini+0xab74>
    b274:	ldr	w0, [sp, #344]
    b278:	cbz	w0, ae9c <grub_mod_fini+0xab74>
    b27c:	b	b224 <grub_mod_fini+0xaefc>
    b280:	sub	w2, w21, w24
    b284:	add	x0, x25, w24, sxtw #3
    b288:	add	x0, x0, #0x8
    b28c:	mov	w1, #0x0                   	// #0
    b290:	sbfiz	x2, x2, #3, #32
    b294:	bl	0 <grub_memset>
    b298:	str	wzr, [sp, #344]
    b29c:	str	w21, [sp, #560]
    b2a0:	ldr	x25, [sp, #552]
    b2a4:	b	ae28 <grub_mod_fini+0xab00>
    b2a8:	ldr	w1, [sp, #480]
    b2ac:	cmp	w0, w1
    b2b0:	b.ge	ac74 <grub_mod_fini+0xa94c>  // b.tcont
    b2b4:	b	ad28 <grub_mod_fini+0xaa00>
    b2b8:	mov	w0, #0x1                   	// #1
    b2bc:	str	w0, [sp, #152]
    b2c0:	ldr	w0, [sp, #152]
    b2c4:	ldp	x29, x30, [sp]
    b2c8:	ldp	x19, x20, [sp, #16]
    b2cc:	ldp	x21, x22, [sp, #32]
    b2d0:	ldp	x25, x26, [sp, #64]
    b2d4:	ldp	x27, x28, [sp, #80]
    b2d8:	add	sp, sp, #0x260
    b2dc:	ret
    b2e0:	mov	w4, w20
    b2e4:	ldr	x8, [x5, x4, lsl #3]
    b2e8:	b	ac9c <grub_mod_fini+0xa974>
    b2ec:	ldr	x26, [sp, #176]
    b2f0:	mov	w0, #0xc                   	// #12
    b2f4:	str	w0, [sp, #152]
    b2f8:	mov	x0, x8
    b2fc:	bl	0 <grub_free>
    b300:	ldr	w0, [x26, #140]
    b304:	cbnz	w0, b138 <grub_mod_fini+0xae10>
    b308:	ldr	x0, [sp, #432]
    b30c:	bl	0 <grub_free>
    b310:	ldr	x0, [sp, #440]
    b314:	bl	0 <grub_free>
    b318:	ldrb	w0, [sp, #515]
    b31c:	cbnz	w0, b168 <grub_mod_fini+0xae40>
    b320:	ldr	w0, [sp, #152]
    b324:	ldp	x29, x30, [sp]
    b328:	ldp	x19, x20, [sp, #16]
    b32c:	ldp	x21, x22, [sp, #32]
    b330:	ldp	x23, x24, [sp, #48]
    b334:	ldp	x25, x26, [sp, #64]
    b338:	ldp	x27, x28, [sp, #80]
    b33c:	add	sp, sp, #0x260
    b340:	ret
    b344:	ldr	x0, [sp, #176]
    b348:	ldr	w0, [x0, #140]
    b34c:	cbnz	w0, b368 <grub_mod_fini+0xb040>
    b350:	ldr	x26, [sp, #176]
    b354:	ldr	x25, [sp, #232]
    b358:	b	b478 <grub_mod_fini+0xb150>
    b35c:	ldr	x26, [sp, #176]
    b360:	ldr	w0, [x26, #140]
    b364:	cbz	w0, b354 <grub_mod_fini+0xb02c>
    b368:	ldr	x8, [sp, #552]
    b36c:	mov	w3, w27
    b370:	add	x0, sp, #0x1a0
    b374:	ldr	x1, [x8, w27, sxtw #3]
    b378:	add	x2, x1, #0x10
    b37c:	ldr	w1, [x1, #12]
    b380:	bl	1d58 <grub_mod_fini+0x1a30>
    b384:	str	w0, [sp, #544]
    b388:	b	b004 <grub_mod_fini+0xacdc>
    b38c:	mov	x0, x24
    b390:	mov	x24, #0x0                   	// #0
    b394:	bl	0 <grub_free>
    b398:	mov	x0, x23
    b39c:	bl	0 <grub_free>
    b3a0:	mov	x0, x24
    b3a4:	bl	0 <grub_free>
    b3a8:	cmp	w19, #0x1
    b3ac:	b.eq	b0e8 <grub_mod_fini+0xadc0>  // b.none
    b3b0:	str	w19, [sp, #152]
    b3b4:	ldr	x26, [sp, #176]
    b3b8:	ldr	x8, [sp, #552]
    b3bc:	b	b2f8 <grub_mod_fini+0xafd0>
    b3c0:	mov	w0, #0x1                   	// #1
    b3c4:	str	w0, [sp, #136]
    b3c8:	str	w0, [sp, #164]
    b3cc:	b	a7d4 <grub_mod_fini+0xa4ac>
    b3d0:	str	xzr, [x21]
    b3d4:	mov	w24, w27
    b3d8:	mov	x28, x22
    b3dc:	ldp	w27, w23, [sp, #200]
    b3e0:	cbnz	w24, c254 <grub_mod_fini+0xbf2c>
    b3e4:	nop
    b3e8:	ldr	x0, [sp, #272]
    b3ec:	bl	0 <grub_free>
    b3f0:	ldr	x0, [sp, #552]
    b3f4:	mov	w1, #0xc                   	// #12
    b3f8:	str	w1, [sp, #308]
    b3fc:	cbnz	x0, b22c <grub_mod_fini+0xaf04>
    b400:	mov	x8, #0x0                   	// #0
    b404:	ldr	x26, [sp, #176]
    b408:	b	b2f0 <grub_mod_fini+0xafc8>
    b40c:	mov	x2, #0x10                  	// #16
    b410:	mov	w1, #0x0                   	// #0
    b414:	add	x0, sp, #0x190
    b418:	stp	x23, xzr, [sp, #376]
    b41c:	str	w20, [sp, #392]
    b420:	str	w27, [sp, #396]
    b424:	bl	0 <grub_memset>
    b428:	add	x1, sp, #0x178
    b42c:	add	x0, sp, #0x1a0
    b430:	bl	7b08 <grub_mod_fini+0x77e0>
    b434:	mov	w19, w0
    b438:	ldr	x0, [sp, #408]
    b43c:	bl	0 <grub_free>
    b440:	cbnz	w19, c2f8 <grub_mod_fini+0xbfd0>
    b444:	ldr	x0, [x23]
    b448:	cbz	x0, bfd4 <grub_mod_fini+0xbcac>
    b44c:	ldr	x26, [sp, #176]
    b450:	ldr	x25, [sp, #232]
    b454:	ldr	x0, [sp, #552]
    b458:	bl	0 <grub_free>
    b45c:	str	w27, [sp, #540]
    b460:	mov	x0, #0x0                   	// #0
    b464:	str	w20, [sp, #544]
    b468:	str	x23, [sp, #552]
    b46c:	bl	0 <grub_free>
    b470:	mov	x0, #0x0                   	// #0
    b474:	bl	0 <grub_free>
    b478:	ldr	x0, [sp, #120]
    b47c:	cbz	x0, b124 <grub_mod_fini+0xadfc>
    b480:	mov	x1, x0
    b484:	cmp	x0, #0x1
    b488:	b.ls	cdc0 <grub_mod_fini+0xca98>  // b.plast
    b48c:	ldr	x2, [sp, #248]
    b490:	sub	x0, x0, #0x2
    b494:	lsl	x19, x1, #3
    b498:	tst	x2, #0x7
    b49c:	ccmp	x0, #0x9, #0x0, eq  // eq = none
    b4a0:	add	x0, x2, #0x8
    b4a4:	b.ls	cc98 <grub_mod_fini+0xc970>  // b.plast
    b4a8:	add	x2, x2, x19
    b4ac:	mov	x1, #0xffffffffffffffff    	// #-1
    b4b0:	str	x1, [x0], #8
    b4b4:	cmp	x2, x0
    b4b8:	b.ne	b4b0 <grub_mod_fini+0xb188>  // b.any
    b4bc:	ldrb	w0, [x25, #56]
    b4c0:	ldr	x2, [sp, #248]
    b4c4:	ldr	w1, [sp, #540]
    b4c8:	tst	x0, #0x10
    b4cc:	ldr	x0, [sp, #120]
    b4d0:	stp	wzr, w1, [x2]
    b4d4:	mov	w1, #0x0                   	// #0
    b4d8:	ccmp	x0, #0x1, #0x4, eq  // eq = none
    b4dc:	b.ne	c448 <grub_mod_fini+0xc120>  // b.any
    b4e0:	ldrb	w3, [sp, #516]
    b4e4:	mov	x0, x2
    b4e8:	add	x4, x2, x19
    b4ec:	ldr	w5, [sp, #460]
    b4f0:	ldr	w2, [sp, #304]
    b4f4:	ldr	w6, [sp, #464]
    b4f8:	ldr	x7, [sp, #440]
    b4fc:	cbz	w3, b508 <grub_mod_fini+0xb1e0>
    b500:	b	c0c4 <grub_mod_fini+0xbd9c>
    b504:	ldr	w1, [x0]
    b508:	add	w3, w2, w1
    b50c:	cmn	w1, #0x1
    b510:	b.eq	b520 <grub_mod_fini+0xb1f8>  // b.none
    b514:	ldr	w1, [x0, #4]
    b518:	add	w1, w2, w1
    b51c:	stp	w3, w1, [x0]
    b520:	add	x0, x0, #0x8
    b524:	cmp	x4, x0
    b528:	b.ne	b504 <grub_mod_fini+0xb1dc>  // b.any
    b52c:	ldr	w0, [sp, #220]
    b530:	cmp	w0, #0x0
    b534:	b.le	b570 <grub_mod_fini+0xb248>
    b538:	ldr	x1, [sp, #248]
    b53c:	ldr	w2, [sp, #220]
    b540:	add	x19, x1, x19
    b544:	sub	w0, w2, #0x1
    b548:	tst	x1, #0x7
    b54c:	ccmp	w0, #0x9, #0x0, eq  // eq = none
    b550:	b.ls	cbfc <grub_mod_fini+0xc8d4>  // b.plast
    b554:	mov	x0, #0x0                   	// #0
    b558:	mov	x1, #0xffffffffffffffff    	// #-1
    b55c:	nop
    b560:	str	x1, [x19, x0, lsl #3]
    b564:	add	x0, x0, #0x1
    b568:	cmp	w2, w0
    b56c:	b.hi	b560 <grub_mod_fini+0xb238>  // b.pmore
    b570:	ldr	x3, [x26, #208]
    b574:	ldr	x8, [sp, #552]
    b578:	cbz	x3, b2f8 <grub_mod_fini+0xafd0>
    b57c:	ldr	x0, [sp, #120]
    b580:	cmp	x0, #0x1
    b584:	b.ls	b2f8 <grub_mod_fini+0xafd0>  // b.plast
    b588:	ldr	x5, [sp, #248]
    b58c:	sub	x4, x0, #0x1
    b590:	mov	x0, #0x0                   	// #0
    b594:	add	x2, x5, #0x8
    b598:	ldr	w1, [x3, x0, lsl #2]
    b59c:	cmp	w1, w0
    b5a0:	b.eq	b5c0 <grub_mod_fini+0xb298>  // b.none
    b5a4:	add	x1, x5, w1, sxtw #3
    b5a8:	ldr	w1, [x1, #8]
    b5ac:	str	w1, [x2]
    b5b0:	ldrsw	x1, [x3, x0, lsl #2]
    b5b4:	add	x1, x5, x1, lsl #3
    b5b8:	ldr	w1, [x1, #12]
    b5bc:	str	w1, [x2, #4]
    b5c0:	add	x0, x0, #0x1
    b5c4:	add	x2, x2, #0x8
    b5c8:	cmp	x4, x0
    b5cc:	b.ne	b598 <grub_mod_fini+0xb270>  // b.any
    b5d0:	b	b2f8 <grub_mod_fini+0xafd0>
    b5d4:	ldr	w0, [sp, #260]
    b5d8:	mov	w8, w0
    b5dc:	ldrb	w0, [x28, #80]
    b5e0:	b	ac2c <grub_mod_fini+0xa904>
    b5e4:	ldr	w0, [sp, #184]
    b5e8:	cmp	w0, w19
    b5ec:	b.gt	b118 <grub_mod_fini+0xadf0>
    b5f0:	ldr	x1, [sp, #208]
    b5f4:	sxtw	x0, w19
    b5f8:	mov	w3, #0x0                   	// #0
    b5fc:	cbz	x1, b738 <grub_mod_fini+0xb410>
    b600:	ldr	w8, [sp, #156]
    b604:	mov	x6, x1
    b608:	ldr	w7, [sp, #184]
    b60c:	ldr	x9, [sp, #168]
    b610:	ldr	x5, [sp, #192]
    b614:	b	b620 <grub_mod_fini+0xb2f8>
    b618:	mov	w3, #0x1                   	// #1
    b61c:	b.gt	b7e0 <grub_mod_fini+0xb4b8>
    b620:	cmp	w8, w0
    b624:	mov	w1, w0
    b628:	mov	w4, w0
    b62c:	mov	x2, #0x0                   	// #0
    b630:	b.le	b638 <grub_mod_fini+0xb310>
    b634:	ldrb	w2, [x9, x0]
    b638:	ldrb	w2, [x6, x2]
    b63c:	sub	x0, x0, #0x1
    b640:	sub	w1, w1, #0x1
    b644:	cmp	w7, w0
    b648:	ldrb	w2, [x5, x2]
    b64c:	cbz	w2, b618 <grub_mod_fini+0xb2f0>
    b650:	cbz	w3, ab74 <grub_mod_fini+0xa84c>
    b654:	mov	w19, w4
    b658:	str	w4, [sp, #304]
    b65c:	b	ab74 <grub_mod_fini+0xa84c>
    b660:	ldr	w0, [sp, #140]
    b664:	mov	w3, #0x0                   	// #0
    b668:	cmp	w0, w19
    b66c:	sxtw	x0, w19
    b670:	b.le	ab68 <grub_mod_fini+0xa840>
    b674:	ldr	w7, [sp, #140]
    b678:	ldr	x6, [sp, #168]
    b67c:	ldr	x4, [sp, #192]
    b680:	ldr	x5, [sp, #208]
    b684:	nop
    b688:	add	w2, w0, #0x1
    b68c:	ldrb	w1, [x6, x0]
    b690:	ldrb	w1, [x5, x1]
    b694:	ldrb	w1, [x4, x1]
    b698:	cbnz	w1, bef4 <grub_mod_fini+0xbbcc>
    b69c:	add	x0, x0, #0x1
    b6a0:	mov	w3, #0x1                   	// #1
    b6a4:	cmp	w7, w0
    b6a8:	b.gt	b688 <grub_mod_fini+0xb360>
    b6ac:	mov	w19, w2
    b6b0:	str	w2, [sp, #304]
    b6b4:	b	ab68 <grub_mod_fini+0xa840>
    b6b8:	mov	w0, #0x14                  	// #20
    b6bc:	smull	x0, w20, w0
    b6c0:	bl	0 <grub_malloc>
    b6c4:	mov	x1, x0
    b6c8:	sbfiz	x0, x20, #3, #32
    b6cc:	str	x1, [sp, #576]
    b6d0:	bl	0 <grub_malloc>
    b6d4:	str	x0, [sp, #600]
    b6d8:	ldr	x1, [sp, #576]
    b6dc:	cmp	x1, #0x0
    b6e0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    b6e4:	b.ne	a910 <grub_mod_fini+0xa5e8>  // b.any
    b6e8:	mov	w0, #0xc                   	// #12
    b6ec:	str	w0, [sp, #152]
    b6f0:	ldr	x8, [sp, #552]
    b6f4:	b	b128 <grub_mod_fini+0xae00>
    b6f8:	ldrb	w4, [sp, #515]
    b6fc:	cbz	w4, a8a4 <grub_mod_fini+0xa57c>
    b700:	ldr	x0, [sp, #424]
    b704:	sxtw	x1, w20
    b708:	bl	0 <grub_realloc>
    b70c:	cbz	x0, b6e8 <grub_mod_fini+0xb3c0>
    b710:	ldrb	w1, [x26, #160]
    b714:	add	x2, x26, #0xa8
    b718:	ldrb	w3, [sp, #515]
    b71c:	str	x0, [sp, #424]
    b720:	ubfx	x0, x1, #4, #1
    b724:	str	w20, [sp, #468]
    b728:	str	x2, [sp, #504]
    b72c:	strb	w0, [sp, #518]
    b730:	cbnz	w3, a8d4 <grub_mod_fini+0xa5ac>
    b734:	b	a8bc <grub_mod_fini+0xa594>
    b738:	ldr	w7, [sp, #156]
    b73c:	ldr	w6, [sp, #184]
    b740:	ldr	x8, [sp, #168]
    b744:	ldr	x5, [sp, #192]
    b748:	b	b754 <grub_mod_fini+0xb42c>
    b74c:	mov	w3, #0x1                   	// #1
    b750:	b.gt	b7e0 <grub_mod_fini+0xb4b8>
    b754:	cmp	w7, w0
    b758:	mov	w1, w0
    b75c:	mov	w4, w0
    b760:	mov	x2, #0x0                   	// #0
    b764:	b.le	b76c <grub_mod_fini+0xb444>
    b768:	ldrb	w2, [x8, x0]
    b76c:	ldrb	w2, [x5, x2]
    b770:	sub	x0, x0, #0x1
    b774:	sub	w1, w1, #0x1
    b778:	cmp	w6, w0
    b77c:	cbz	w2, b74c <grub_mod_fini+0xb424>
    b780:	b	b650 <grub_mod_fini+0xb328>
    b784:	ldrb	w0, [x26, #160]
    b788:	tbnz	w0, #1, a92c <grub_mod_fini+0xa604>
    b78c:	mov	x8, #0x0                   	// #0
    b790:	str	xzr, [sp, #552]
    b794:	b	a954 <grub_mod_fini+0xa62c>
    b798:	ldr	x28, [x19, #80]
    b79c:	cbnz	x28, ac08 <grub_mod_fini+0xa8e0>
    b7a0:	ldr	w0, [sp, #308]
    b7a4:	str	w0, [sp, #152]
    b7a8:	cmp	w0, #0xc
    b7ac:	ldr	x26, [sp, #176]
    b7b0:	b.eq	b124 <grub_mod_fini+0xadfc>  // b.none
    b7b4:	adrp	x1, 0 <grub_mod_init-0x288>
    b7b8:	adrp	x0, 0 <grub_mod_init-0x288>
    b7bc:	mov	w2, #0x435                 	// #1077
    b7c0:	b	bec8 <grub_mod_fini+0xbba0>
    b7c4:	ldr	w1, [x2, #12]
    b7c8:	add	x0, sp, #0x1a0
    b7cc:	add	w19, w3, #0x1
    b7d0:	add	x2, x2, #0x10
    b7d4:	bl	1d58 <grub_mod_fini+0x1a30>
    b7d8:	mov	w20, w0
    b7dc:	b	b04c <grub_mod_fini+0xad24>
    b7e0:	mov	w0, #0x1                   	// #1
    b7e4:	str	w0, [sp, #152]
    b7e8:	str	w1, [sp, #304]
    b7ec:	ldr	x26, [sp, #176]
    b7f0:	ldr	x8, [sp, #552]
    b7f4:	b	b2f8 <grub_mod_fini+0xafd0>
    b7f8:	ldr	x26, [sp, #176]
    b7fc:	ldr	x8, [sp, #552]
    b800:	b	b2f8 <grub_mod_fini+0xafd0>
    b804:	mov	x0, #0x3000                	// #12288
    b808:	ldr	x20, [sp, #528]
    b80c:	bl	0 <grub_malloc>
    b810:	str	x0, [sp, #272]
    b814:	mov	x19, x0
    b818:	cbz	x0, c3bc <grub_mod_fini+0xc094>
    b81c:	stp	xzr, xzr, [x22, #64]
    b820:	mov	x2, #0x20                  	// #32
    b824:	add	x0, sp, #0x138
    b828:	mov	w1, #0x0                   	// #0
    b82c:	bl	0 <grub_memset>
    b830:	ldr	w2, [x22, #12]
    b834:	add	x0, x19, #0x1, lsl #12
    b838:	str	x0, [sp, #224]
    b83c:	cmp	w2, #0x0
    b840:	b.le	cbcc <grub_mod_fini+0xc8a4>
    b844:	mov	w24, #0x0                   	// #0
    b848:	mov	w27, w24
    b84c:	str	xzr, [sp, #264]
    b850:	str	x20, [sp, #288]
    b854:	ldr	x3, [sp, #264]
    b858:	ldr	x0, [x22, #16]
    b85c:	lsl	x1, x3, #2
    b860:	str	x1, [sp, #280]
    b864:	ldr	x1, [sp, #288]
    b868:	ldrsw	x0, [x0, x3, lsl #2]
    b86c:	ldr	x1, [x1]
    b870:	lsl	x0, x0, #4
    b874:	add	x19, x1, x0
    b878:	ldr	w21, [x19, #8]
    b87c:	ldrb	w23, [x19, #8]
    b880:	ubfx	x21, x21, #8, #10
    b884:	cmp	w23, #0x1
    b888:	b.eq	baf8 <grub_mod_fini+0xb7d0>  // b.none
    b88c:	cmp	w23, #0x3
    b890:	b.eq	c294 <grub_mod_fini+0xbf6c>  // b.none
    b894:	cmp	w23, #0x5
    b898:	b.eq	bf30 <grub_mod_fini+0xbc08>  // b.none
    b89c:	cmp	w23, #0x7
    b8a0:	b.eq	c280 <grub_mod_fini+0xbf58>  // b.none
    b8a4:	ldr	x0, [sp, #264]
    b8a8:	add	x0, x0, #0x1
    b8ac:	str	x0, [sp, #264]
    b8b0:	cmp	w2, w0
    b8b4:	b.gt	b854 <grub_mod_fini+0xb52c>
    b8b8:	mov	w24, w27
    b8bc:	cmp	w27, #0x0
    b8c0:	ldr	x20, [sp, #288]
    b8c4:	b.le	cf28 <grub_mod_fini+0xcc00>
    b8c8:	add	w0, w27, #0x1
    b8cc:	str	w0, [sp, #344]
    b8d0:	str	wzr, [sp, #348]
    b8d4:	sbfiz	x0, x0, #2, #32
    b8d8:	bl	0 <grub_malloc>
    b8dc:	str	x0, [sp, #352]
    b8e0:	cbz	x0, cd64 <grub_mod_fini+0xca3c>
    b8e4:	add	w0, w27, w27, lsl #1
    b8e8:	str	wzr, [sp, #312]
    b8ec:	sbfiz	x0, x0, #3, #32
    b8f0:	bl	0 <grub_malloc>
    b8f4:	mov	x25, x0
    b8f8:	cbz	x0, c3d4 <grub_mod_fini+0xc0ac>
    b8fc:	ldr	x0, [sp, #272]
    b900:	mov	x27, #0x0                   	// #0
    b904:	ldr	x21, [sp, #224]
    b908:	add	x26, x0, #0x4
    b90c:	sbfiz	x0, x24, #3, #32
    b910:	mov	x2, #0x20                  	// #32
    b914:	add	x23, x25, x0
    b918:	mov	w1, #0x0                   	// #0
    b91c:	add	x28, x23, x0
    b920:	add	x0, sp, #0x178
    b924:	str	wzr, [sp, #264]
    b928:	stp	x21, x28, [sp, #280]
    b92c:	bl	0 <grub_memset>
    b930:	mov	x19, #0x0                   	// #0
    b934:	str	wzr, [sp, #348]
    b938:	ldr	w3, [x26]
    b93c:	cmp	w3, #0x0
    b940:	b.le	b988 <grub_mod_fini+0xb660>
    b944:	nop
    b948:	ldur	x2, [x26, #4]
    b94c:	add	x0, sp, #0x158
    b950:	ldr	x1, [x20, #24]
    b954:	ldrsw	x2, [x2, x19, lsl #2]
    b958:	add	x19, x19, #0x1
    b95c:	ldr	w1, [x1, x2, lsl #2]
    b960:	cmn	w1, #0x1
    b964:	b.eq	b980 <grub_mod_fini+0xb658>  // b.none
    b968:	ldr	x2, [x20, #48]
    b96c:	add	x1, x2, w1, sxtw #4
    b970:	bl	2108 <grub_mod_fini+0x1de0>
    b974:	str	w0, [sp, #312]
    b978:	cbnz	w0, c1d0 <grub_mod_fini+0xbea8>
    b97c:	ldr	w3, [x26]
    b980:	cmp	w3, w19
    b984:	b.gt	b948 <grub_mod_fini+0xb620>
    b988:	add	x2, sp, #0x158
    b98c:	mov	x1, x20
    b990:	add	x0, sp, #0x138
    b994:	mov	w3, #0x0                   	// #0
    b998:	bl	5478 <grub_mod_fini+0x5150>
    b99c:	str	x0, [x25, x27, lsl #3]
    b9a0:	cbz	x0, c428 <grub_mod_fini+0xc100>
    b9a4:	ldrsb	w1, [x0, #80]
    b9a8:	tbnz	w1, #31, c16c <grub_mod_fini+0xbe44>
    b9ac:	str	x0, [x23, x27, lsl #3]
    b9b0:	str	x0, [x28, x27, lsl #3]
    b9b4:	ldr	x1, [x21]
    b9b8:	add	x27, x27, #0x1
    b9bc:	ldr	x0, [sp, #376]
    b9c0:	cmp	w24, w27
    b9c4:	add	x26, x26, #0x10
    b9c8:	add	x21, x21, #0x20
    b9cc:	orr	x0, x0, x1
    b9d0:	str	x0, [sp, #376]
    b9d4:	ldr	x0, [sp, #384]
    b9d8:	ldur	x2, [x21, #-24]
    b9dc:	ldr	x1, [sp, #392]
    b9e0:	orr	x0, x0, x2
    b9e4:	str	x0, [sp, #384]
    b9e8:	ldr	x0, [sp, #400]
    b9ec:	ldur	x2, [x21, #-16]
    b9f0:	orr	x1, x1, x2
    b9f4:	str	x1, [sp, #392]
    b9f8:	ldur	x1, [x21, #-8]
    b9fc:	orr	x0, x0, x1
    ba00:	str	x0, [sp, #400]
    ba04:	b.gt	b930 <grub_mod_fini+0xb608>
    ba08:	ldr	w0, [sp, #264]
    ba0c:	cbnz	w0, ce74 <grub_mod_fini+0xcb4c>
    ba10:	mov	x0, #0x800                 	// #2048
    ba14:	bl	0 <grub_zalloc>
    ba18:	str	x0, [x22, #64]
    ba1c:	mov	x6, x0
    ba20:	cbz	x0, c1d0 <grub_mod_fini+0xbea8>
    ba24:	ldr	x5, [sp, #280]
    ba28:	sub	x8, x20, #0xf58
    ba2c:	sub	x12, sp, #0xe88
    ba30:	sub	x11, x0, #0x40, lsl #12
    ba34:	mov	x7, #0x1000                	// #4096
    ba38:	mov	x10, #0x1020                	// #4128
    ba3c:	ldr	x0, [x12, x7]
    ba40:	add	x4, x11, x7, lsl #6
    ba44:	mov	x3, #0x1                   	// #1
    ba48:	cbz	x0, ba64 <grub_mod_fini+0xb73c>
    ba4c:	nop
    ba50:	tbnz	w0, #0, c3e4 <grub_mod_fini+0xc0bc>
    ba54:	lsl	x3, x3, #1
    ba58:	lsr	x0, x0, #1
    ba5c:	add	x4, x4, #0x8
    ba60:	cbnz	x0, ba50 <grub_mod_fini+0xb728>
    ba64:	add	x7, x7, #0x8
    ba68:	add	x5, x5, #0x8
    ba6c:	cmp	x7, x10
    ba70:	b.ne	ba3c <grub_mod_fini+0xb714>  // b.any
    ba74:	ldr	x0, [sp, #376]
    ba78:	tst	w0, #0x400
    ba7c:	b.eq	baa4 <grub_mod_fini+0xb77c>  // b.none
    ba80:	ldr	x2, [sp, #224]
    ba84:	mov	x0, #0x0                   	// #0
    ba88:	lsl	x1, x0, #5
    ba8c:	ldr	x1, [x2, x1]
    ba90:	tst	w1, #0x400
    ba94:	b.ne	ce40 <grub_mod_fini+0xcb18>  // b.any
    ba98:	add	x0, x0, #0x1
    ba9c:	cmp	w24, w0
    baa0:	b.gt	ba88 <grub_mod_fini+0xb760>
    baa4:	mov	x0, x25
    baa8:	bl	0 <grub_free>
    baac:	ldr	x0, [sp, #352]
    bab0:	sub	w20, w24, #0x1
    bab4:	ldr	x21, [sp, #272]
    bab8:	bl	0 <grub_free>
    babc:	add	x0, x21, #0x18
    bac0:	add	x19, x21, #0x8
    bac4:	add	x20, x0, w20, uxtw #4
    bac8:	ldr	x0, [x19], #16
    bacc:	bl	0 <grub_free>
    bad0:	cmp	x20, x19
    bad4:	b.ne	bac8 <grub_mod_fini+0xb7a0>  // b.any
    bad8:	ldr	x0, [sp, #272]
    badc:	bl	0 <grub_free>
    bae0:	ldr	x0, [x22, #64]
    bae4:	cbz	x0, aedc <grub_mod_fini+0xabb4>
    bae8:	ldp	w27, w23, [sp, #200]
    baec:	mov	x28, x22
    baf0:	ldr	w20, [sp, #216]
    baf4:	b	ac94 <grub_mod_fini+0xa96c>
    baf8:	ldrb	w1, [x1, x0]
    bafc:	mov	x0, #0x1                   	// #1
    bb00:	ubfx	x2, x1, #6, #2
    bb04:	lsl	x1, x0, x1
    bb08:	add	x0, sp, #0x138
    bb0c:	ldr	x0, [x0, x2, lsl #3]
    bb10:	orr	x0, x0, x1
    bb14:	add	x1, sp, #0x138
    bb18:	str	x0, [x1, x2, lsl #3]
    bb1c:	cbz	w21, bc64 <grub_mod_fini+0xb93c>
    bb20:	tbnz	w21, #5, bc38 <grub_mod_fini+0xb910>
    bb24:	tbnz	w21, #7, c070 <grub_mod_fini+0xbd48>
    bb28:	tbz	w21, #2, bbac <grub_mod_fini+0xb884>
    bb2c:	cmp	w23, #0x1
    bb30:	b.eq	c0b4 <grub_mod_fini+0xbd8c>  // b.none
    bb34:	ldr	x3, [sp, #288]
    bb38:	ldp	x1, x4, [sp, #312]
    bb3c:	ldr	w0, [x3, #164]
    bb40:	ldp	x11, x10, [x3, #168]
    bb44:	cmp	w0, #0x1
    bb48:	ldp	x9, x3, [x3, #184]
    bb4c:	ldp	x2, x8, [sp, #328]
    bb50:	b.le	c088 <grub_mod_fini+0xbd60>
    bb54:	ldr	x0, [sp, #288]
    bb58:	ldr	x5, [x0, #120]
    bb5c:	ldr	x0, [x5]
    bb60:	orn	x0, x11, x0
    bb64:	and	x0, x0, x1
    bb68:	str	x0, [sp, #312]
    bb6c:	ldr	x1, [x5, #8]
    bb70:	orn	x1, x10, x1
    bb74:	and	x1, x1, x4
    bb78:	str	x1, [sp, #320]
    bb7c:	orr	x0, x0, x1
    bb80:	ldr	x1, [x5, #16]
    bb84:	orn	x1, x9, x1
    bb88:	and	x1, x1, x2
    bb8c:	str	x1, [sp, #328]
    bb90:	ldr	x2, [x5, #24]
    bb94:	orn	x2, x3, x2
    bb98:	and	x2, x2, x8
    bb9c:	str	x2, [sp, #336]
    bba0:	orr	x1, x1, x2
    bba4:	orr	x0, x0, x1
    bba8:	cbz	x0, bc30 <grub_mod_fini+0xb908>
    bbac:	tbz	w21, #3, bc64 <grub_mod_fini+0xb93c>
    bbb0:	cmp	w23, #0x1
    bbb4:	b.eq	c064 <grub_mod_fini+0xbd3c>  // b.none
    bbb8:	ldr	x2, [sp, #288]
    bbbc:	ldp	x10, x9, [sp, #312]
    bbc0:	ldr	w0, [x2, #164]
    bbc4:	ldp	x1, x3, [x2, #168]
    bbc8:	cmp	w0, #0x1
    bbcc:	ldp	x0, x2, [x2, #184]
    bbd0:	ldp	x4, x8, [sp, #328]
    bbd4:	b.le	c024 <grub_mod_fini+0xbcfc>
    bbd8:	ldr	x5, [sp, #288]
    bbdc:	ldr	x5, [x5, #120]
    bbe0:	ldr	x11, [x5]
    bbe4:	and	x1, x1, x11
    bbe8:	bic	x1, x10, x1
    bbec:	str	x1, [sp, #312]
    bbf0:	ldr	x10, [x5, #8]
    bbf4:	and	x3, x3, x10
    bbf8:	bic	x3, x9, x3
    bbfc:	str	x3, [sp, #320]
    bc00:	orr	x1, x1, x3
    bc04:	ldr	x3, [x5, #16]
    bc08:	and	x0, x0, x3
    bc0c:	bic	x0, x4, x0
    bc10:	str	x0, [sp, #328]
    bc14:	ldr	x3, [x5, #24]
    bc18:	and	x2, x2, x3
    bc1c:	bic	x2, x8, x2
    bc20:	str	x2, [sp, #336]
    bc24:	orr	x0, x0, x2
    bc28:	orr	x0, x0, x1
    bc2c:	cbnz	x0, bc64 <grub_mod_fini+0xb93c>
    bc30:	ldr	w2, [x22, #12]
    bc34:	b	b8a4 <grub_mod_fini+0xb57c>
    bc38:	ldr	x24, [sp, #312]
    bc3c:	add	x0, sp, #0x138
    bc40:	mov	x2, #0x20                  	// #32
    bc44:	mov	w1, #0x0                   	// #0
    bc48:	ubfx	w24, w24, #10, #1
    bc4c:	bl	0 <grub_memset>
    bc50:	cbz	w24, bc30 <grub_mod_fini+0xb908>
    bc54:	ldr	x0, [sp, #312]
    bc58:	orr	x0, x0, #0x400
    bc5c:	str	x0, [sp, #312]
    bc60:	b	bb24 <grub_mod_fini+0xb7fc>
    bc64:	cmp	w27, #0x0
    bc68:	mov	w26, #0x0                   	// #0
    bc6c:	mov	x21, #0x0                   	// #0
    bc70:	ldr	x28, [sp, #224]
    bc74:	ldr	x25, [sp, #272]
    bc78:	b.le	be2c <grub_mod_fini+0xbb04>
    bc7c:	mov	w26, w27
    bc80:	mov	x27, x25
    bc84:	b	bcbc <grub_mod_fini+0xb994>
    bc88:	ldrb	w2, [x19]
    bc8c:	asr	w1, w2, #6
    bc90:	add	x1, x0, w1, sxtw #3
    bc94:	ldr	x0, [sp, #224]
    bc98:	ldr	x0, [x0, x1]
    bc9c:	lsr	x0, x0, x2
    bca0:	tbnz	w0, #0, bcd0 <grub_mod_fini+0xb9a8>
    bca4:	add	x21, x21, #0x1
    bca8:	add	w24, w20, #0x1
    bcac:	cmp	w26, w21
    bcb0:	add	x28, x28, #0x20
    bcb4:	add	x27, x27, #0x10
    bcb8:	b.le	be24 <grub_mod_fini+0xbafc>
    bcbc:	cmp	w23, #0x1
    bcc0:	mov	w20, w21
    bcc4:	mov	w24, w21
    bcc8:	lsl	x0, x21, #5
    bccc:	b.eq	bc88 <grub_mod_fini+0xb960>  // b.none
    bcd0:	ldp	x9, x8, [sp, #312]
    bcd4:	ldr	x0, [x28]
    bcd8:	ldp	x6, x7, [sp, #328]
    bcdc:	and	x0, x9, x0
    bce0:	str	x0, [sp, #344]
    bce4:	ldr	x1, [x28, #8]
    bce8:	and	x1, x8, x1
    bcec:	str	x1, [sp, #352]
    bcf0:	orr	x0, x0, x1
    bcf4:	ldr	x1, [x28, #16]
    bcf8:	and	x1, x6, x1
    bcfc:	str	x1, [sp, #360]
    bd00:	ldr	x2, [x28, #24]
    bd04:	and	x2, x7, x2
    bd08:	str	x2, [sp, #368]
    bd0c:	orr	x1, x1, x2
    bd10:	orr	x0, x0, x1
    bd14:	cbz	x0, bca4 <grub_mod_fini+0xb97c>
    bd18:	ldr	x25, [x28]
    bd1c:	bic	x0, x25, x9
    bd20:	bic	x25, x9, x25
    bd24:	str	x25, [sp, #312]
    bd28:	str	x0, [sp, #376]
    bd2c:	ldr	x1, [x28, #8]
    bd30:	bic	x2, x1, x8
    bd34:	bic	x8, x8, x1
    bd38:	str	x8, [sp, #320]
    bd3c:	orr	x0, x0, x2
    bd40:	str	x2, [sp, #384]
    bd44:	orr	x25, x25, x8
    bd48:	ldr	x2, [x28, #16]
    bd4c:	bic	x1, x6, x2
    bd50:	bic	x6, x2, x6
    bd54:	str	x1, [sp, #328]
    bd58:	str	x6, [sp, #392]
    bd5c:	ldr	x8, [x28, #24]
    bd60:	bic	x2, x7, x8
    bd64:	bic	x7, x8, x7
    bd68:	str	x2, [sp, #336]
    bd6c:	orr	x1, x1, x2
    bd70:	str	x7, [sp, #400]
    bd74:	orr	x6, x6, x7
    bd78:	orr	x25, x25, x1
    bd7c:	orr	x6, x0, x6
    bd80:	cbz	x6, be04 <grub_mod_fini+0xbadc>
    bd84:	sxtw	x6, w26
    bd88:	sbfiz	x0, x26, #5, #32
    bd8c:	ldr	x1, [sp, #224]
    bd90:	mov	x2, #0x20                  	// #32
    bd94:	str	x6, [sp, #296]
    bd98:	add	x0, x1, x0
    bd9c:	add	x1, sp, #0x178
    bda0:	bl	0 <grub_memmove>
    bda4:	add	x1, sp, #0x158
    bda8:	mov	x2, #0x20                  	// #32
    bdac:	mov	x0, x28
    bdb0:	bl	0 <grub_memmove>
    bdb4:	ldr	x6, [sp, #296]
    bdb8:	ldr	x3, [sp, #272]
    bdbc:	lsl	x1, x6, #4
    bdc0:	ldr	w0, [x27, #4]
    bdc4:	add	x2, x3, x1
    bdc8:	cmp	w0, #0x0
    bdcc:	str	w0, [x2, #4]
    bdd0:	b.le	be9c <grub_mod_fini+0xbb74>
    bdd4:	str	w0, [x3, x1]
    bdd8:	sbfiz	x0, x0, #2, #32
    bddc:	str	x2, [sp, #296]
    bde0:	bl	0 <grub_malloc>
    bde4:	ldr	x2, [sp, #296]
    bde8:	str	x0, [x2, #8]
    bdec:	cbz	x0, c3a8 <grub_mod_fini+0xc080>
    bdf0:	ldr	x1, [x27, #8]
    bdf4:	ldrsw	x2, [x27, #4]
    bdf8:	lsl	x2, x2, #2
    bdfc:	bl	0 <grub_memmove>
    be00:	add	w26, w26, #0x1
    be04:	ldr	x1, [x22, #16]
    be08:	mov	x0, x27
    be0c:	ldr	x2, [sp, #280]
    be10:	ldr	w1, [x1, x2]
    be14:	bl	16f8 <grub_mod_fini+0x13d0>
    be18:	tst	w0, #0xff
    be1c:	b.eq	c248 <grub_mod_fini+0xbf20>  // b.none
    be20:	cbnz	x25, bca4 <grub_mod_fini+0xb97c>
    be24:	mov	w27, w26
    be28:	mov	w26, w24
    be2c:	cmp	w27, w26
    be30:	b.ne	bc30 <grub_mod_fini+0xb908>  // b.any
    be34:	ldr	x1, [sp, #224]
    be38:	sbfiz	x0, x27, #5, #32
    be3c:	mov	x2, #0x20                  	// #32
    be40:	sxtw	x19, w27
    be44:	add	x0, x1, x0
    be48:	add	x1, sp, #0x138
    be4c:	bl	0 <grub_memmove>
    be50:	ldp	x3, x4, [sp, #272]
    be54:	lsl	x1, x19, #4
    be58:	ldr	x0, [x22, #16]
    be5c:	mov	x2, #0x100000001           	// #4294967297
    be60:	add	x21, x3, x1
    be64:	ldr	w19, [x0, x4]
    be68:	str	x2, [x3, x1]
    be6c:	mov	x0, #0x4                   	// #4
    be70:	bl	0 <grub_malloc>
    be74:	str	x0, [x21, #8]
    be78:	cbz	x0, b3d0 <grub_mod_fini+0xb0a8>
    be7c:	str	w19, [x0]
    be80:	mov	x2, #0x20                  	// #32
    be84:	add	x0, sp, #0x138
    be88:	mov	w1, #0x0                   	// #0
    be8c:	bl	0 <grub_memset>
    be90:	add	w27, w27, #0x1
    be94:	ldr	w2, [x22, #12]
    be98:	b	b8a4 <grub_mod_fini+0xb57c>
    be9c:	mov	x0, x2
    bea0:	mov	w1, #0x0                   	// #0
    bea4:	mov	x2, #0x10                  	// #16
    bea8:	bl	0 <grub_memset>
    beac:	b	be00 <grub_mod_fini+0xbad8>
    beb0:	cmp	w0, #0xc
    beb4:	ldr	x26, [sp, #176]
    beb8:	b.eq	b120 <grub_mod_fini+0xadf8>  // b.none
    bebc:	adrp	x1, 0 <grub_mod_init-0x288>
    bec0:	adrp	x0, 0 <grub_mod_init-0x288>
    bec4:	mov	w2, #0x46c                 	// #1132
    bec8:	ldr	x1, [x1]
    becc:	mov	w3, #0xc                   	// #12
    bed0:	ldr	x0, [x0]
    bed4:	str	w3, [sp, #152]
    bed8:	bl	0 <grub_printf>
    bedc:	ldr	x8, [sp, #552]
    bee0:	b	b128 <grub_mod_fini+0xae00>
    bee4:	cbz	w3, ab74 <grub_mod_fini+0xa84c>
    bee8:	mov	w19, w0
    beec:	str	w0, [sp, #304]
    bef0:	b	ab68 <grub_mod_fini+0xa840>
    bef4:	cbz	w3, ab74 <grub_mod_fini+0xa84c>
    bef8:	mov	w19, w0
    befc:	str	w0, [sp, #304]
    bf00:	b	ab68 <grub_mod_fini+0xa840>
    bf04:	ldrsb	w0, [x28, #80]
    bf08:	tbnz	w0, #31, c004 <grub_mod_fini+0xbcdc>
    bf0c:	ldr	w0, [sp, #136]
    bf10:	str	w0, [sp, #104]
    bf14:	ldr	w27, [sp, #96]
    bf18:	cbnz	w0, ac38 <grub_mod_fini+0xa910>
    bf1c:	b	af9c <grub_mod_fini+0xac74>
    bf20:	mov	x8, x0
    bf24:	b	acbc <grub_mod_fini+0xa994>
    bf28:	mov	w27, w9
    bf2c:	b	af9c <grub_mod_fini+0xac74>
    bf30:	ldr	x1, [sp, #288]
    bf34:	ldr	w0, [x1, #164]
    bf38:	cmp	w0, #0x1
    bf3c:	b.le	c050 <grub_mod_fini+0xbd28>
    bf40:	ldr	x0, [x1, #120]
    bf44:	ldp	x2, x1, [sp, #312]
    bf48:	ldr	x3, [x0]
    bf4c:	orr	x2, x2, x3
    bf50:	str	x2, [sp, #312]
    bf54:	ldr	x2, [sp, #328]
    bf58:	ldr	x3, [x0, #8]
    bf5c:	orr	x1, x1, x3
    bf60:	str	x1, [sp, #320]
    bf64:	ldr	x1, [sp, #336]
    bf68:	ldr	x3, [x0, #16]
    bf6c:	orr	x2, x2, x3
    bf70:	str	x2, [sp, #328]
    bf74:	ldr	x0, [x0, #24]
    bf78:	orr	x0, x1, x0
    bf7c:	str	x0, [sp, #336]
    bf80:	ldr	x0, [sp, #288]
    bf84:	ldr	x0, [x0, #200]
    bf88:	tbnz	w0, #6, bf98 <grub_mod_fini+0xbc70>
    bf8c:	ldr	x1, [sp, #312]
    bf90:	and	x1, x1, #0xfffffffffffffbff
    bf94:	str	x1, [sp, #312]
    bf98:	tbz	w0, #7, bb1c <grub_mod_fini+0xb7f4>
    bf9c:	ldr	x0, [sp, #312]
    bfa0:	and	x0, x0, #0xfffffffffffffffe
    bfa4:	str	x0, [sp, #312]
    bfa8:	b	bb1c <grub_mod_fini+0xb7f4>
    bfac:	ldr	x28, [x19, #88]
    bfb0:	b	b79c <grub_mod_fini+0xb474>
    bfb4:	ldr	x26, [sp, #176]
    bfb8:	bl	0 <grub_free>
    bfbc:	mov	w0, #0xc                   	// #12
    bfc0:	str	w0, [sp, #152]
    bfc4:	mov	x0, #0x0                   	// #0
    bfc8:	bl	0 <grub_free>
    bfcc:	ldr	x8, [sp, #552]
    bfd0:	b	b2f8 <grub_mod_fini+0xafd0>
    bfd4:	mov	x0, x23
    bfd8:	bl	0 <grub_free>
    bfdc:	mov	x0, #0x0                   	// #0
    bfe0:	bl	0 <grub_free>
    bfe4:	b	b0e8 <grub_mod_fini+0xadc0>
    bfe8:	ldr	x2, [x28, #56]
    bfec:	mov	w3, w0
    bff0:	mov	x1, x19
    bff4:	add	x0, sp, #0x134
    bff8:	bl	5478 <grub_mod_fini+0x5150>
    bffc:	mov	x28, x0
    c000:	b	b79c <grub_mod_fini+0xb474>
    c004:	ldr	w1, [x28, #12]
    c008:	add	x2, x28, #0x10
    c00c:	ldr	w3, [sp, #96]
    c010:	add	x0, sp, #0x1a0
    c014:	bl	1d58 <grub_mod_fini+0x1a30>
    c018:	str	w0, [sp, #104]
    c01c:	cbz	w0, ac38 <grub_mod_fini+0xa910>
    c020:	b	bf0c <grub_mod_fini+0xbbe4>
    c024:	bic	x4, x4, x0
    c028:	bic	x1, x10, x1
    c02c:	bic	x3, x9, x3
    c030:	bic	x2, x8, x2
    c034:	stp	x1, x3, [sp, #312]
    c038:	orr	x0, x1, x3
    c03c:	orr	x5, x4, x2
    c040:	stp	x4, x2, [sp, #328]
    c044:	orr	x0, x0, x5
    c048:	cbz	x0, bc30 <grub_mod_fini+0xb908>
    c04c:	b	bc64 <grub_mod_fini+0xb93c>
    c050:	add	x0, sp, #0x138
    c054:	mov	x2, #0x20                  	// #32
    c058:	mov	w1, #0xffffffff            	// #-1
    c05c:	bl	0 <grub_memset>
    c060:	b	bf80 <grub_mod_fini+0xbc58>
    c064:	ldrb	w0, [x19, #10]
    c068:	tbz	w0, #6, bbb8 <grub_mod_fini+0xb890>
    c06c:	nop
    c070:	mov	x2, #0x20                  	// #32
    c074:	add	x0, sp, #0x138
    c078:	mov	w1, #0x0                   	// #0
    c07c:	bl	0 <grub_memset>
    c080:	ldr	w2, [x22, #12]
    c084:	b	b8a4 <grub_mod_fini+0xb57c>
    c088:	and	x5, x1, x11
    c08c:	and	x4, x4, x10
    c090:	and	x1, x2, x9
    c094:	and	x2, x8, x3
    c098:	stp	x5, x4, [sp, #312]
    c09c:	orr	x0, x5, x4
    c0a0:	orr	x3, x1, x2
    c0a4:	stp	x1, x2, [sp, #328]
    c0a8:	orr	x0, x0, x3
    c0ac:	cbnz	x0, bbac <grub_mod_fini+0xb884>
    c0b0:	b	bc30 <grub_mod_fini+0xb908>
    c0b4:	ldrb	w0, [x19, #10]
    c0b8:	tbnz	w0, #6, bb34 <grub_mod_fini+0xb80c>
    c0bc:	b	c070 <grub_mod_fini+0xbd48>
    c0c0:	ldr	w1, [x0]
    c0c4:	cmn	w1, #0x1
    c0c8:	b.eq	c0fc <grub_mod_fini+0xbdd4>  // b.none
    c0cc:	ldr	w8, [x0, #4]
    c0d0:	cmp	w5, w1
    c0d4:	mov	w3, w6
    c0d8:	b.eq	c0e0 <grub_mod_fini+0xbdb8>  // b.none
    c0dc:	ldr	w3, [x7, w1, sxtw #2]
    c0e0:	str	w3, [x0]
    c0e4:	cmp	w5, w8
    c0e8:	b.eq	cf18 <grub_mod_fini+0xcbf0>  // b.none
    c0ec:	ldr	w1, [x7, w8, sxtw #2]
    c0f0:	add	w1, w2, w1
    c0f4:	add	w3, w2, w3
    c0f8:	stp	w3, w1, [x0]
    c0fc:	add	x0, x0, #0x8
    c100:	cmp	x4, x0
    c104:	b.ne	c0c0 <grub_mod_fini+0xbd98>  // b.any
    c108:	b	b52c <grub_mod_fini+0xb204>
    c10c:	add	x19, x28, #0xc
    c110:	add	x20, x28, #0x10
    c114:	mov	x1, x19
    c118:	mov	x2, x20
    c11c:	add	x0, sp, #0x1a0
    c120:	mov	w3, #0x0                   	// #0
    c124:	bl	1fd0 <grub_mod_fini+0x1ca8>
    c128:	str	w0, [sp, #308]
    c12c:	mov	w27, w0
    c130:	cbnz	w0, af9c <grub_mod_fini+0xac74>
    c134:	ldrb	w0, [x28, #80]
    c138:	tbnz	w0, #6, c144 <grub_mod_fini+0xbe1c>
    c13c:	mov	w8, #0x0                   	// #0
    c140:	b	ac2c <grub_mod_fini+0xa904>
    c144:	mov	x2, x20
    c148:	mov	x1, x19
    c14c:	add	x0, sp, #0x1a0
    c150:	bl	9270 <grub_mod_fini+0x8f48>
    c154:	str	w0, [sp, #308]
    c158:	mov	w27, w0
    c15c:	cbnz	w0, af9c <grub_mod_fini+0xac74>
    c160:	ldrb	w0, [x28, #80]
    c164:	mov	w8, #0x0                   	// #0
    c168:	b	ac2c <grub_mod_fini+0xa904>
    c16c:	add	x2, sp, #0x158
    c170:	mov	x1, x20
    c174:	add	x0, sp, #0x138
    c178:	mov	w3, #0x1                   	// #1
    c17c:	bl	5478 <grub_mod_fini+0x5150>
    c180:	str	x0, [x23, x27, lsl #3]
    c184:	cbz	x0, cd58 <grub_mod_fini+0xca30>
    c188:	ldr	x1, [x25, x27, lsl #3]
    c18c:	cmp	x0, x1
    c190:	b.eq	c1a8 <grub_mod_fini+0xbe80>  // b.none
    c194:	ldr	w0, [x20, #164]
    c198:	cmp	w0, #0x2
    c19c:	ldr	w0, [sp, #264]
    c1a0:	csinc	w0, w0, wzr, lt  // lt = tstop
    c1a4:	str	w0, [sp, #264]
    c1a8:	add	x2, sp, #0x158
    c1ac:	mov	x1, x20
    c1b0:	add	x0, sp, #0x138
    c1b4:	mov	w3, #0x2                   	// #2
    c1b8:	bl	5478 <grub_mod_fini+0x5150>
    c1bc:	str	x0, [x28, x27, lsl #3]
    c1c0:	cbnz	x0, b9b4 <grub_mod_fini+0xb68c>
    c1c4:	ldr	w0, [sp, #312]
    c1c8:	cbz	w0, b9b4 <grub_mod_fini+0xb68c>
    c1cc:	nop
    c1d0:	mov	x0, x25
    c1d4:	mov	x28, x22
    c1d8:	ldp	w27, w23, [sp, #200]
    c1dc:	bl	0 <grub_free>
    c1e0:	ldr	x0, [sp, #352]
    c1e4:	mov	w20, #0x0                   	// #0
    c1e8:	ldr	x1, [sp, #272]
    c1ec:	add	x19, x1, #0x8
    c1f0:	bl	0 <grub_free>
    c1f4:	nop
    c1f8:	ldr	x0, [x19], #16
    c1fc:	add	w20, w20, #0x1
    c200:	bl	0 <grub_free>
    c204:	cmp	w20, w24
    c208:	b.lt	c1f8 <grub_mod_fini+0xbed0>  // b.tstop
    c20c:	b	b3e8 <grub_mod_fini+0xb0c0>
    c210:	ldr	w0, [sp, #156]
    c214:	ldr	w1, [sp, #140]
    c218:	cmp	w0, w1
    c21c:	mov	x0, #0x0                   	// #0
    c220:	b.le	c22c <grub_mod_fini+0xbf04>
    c224:	ldr	x0, [sp, #168]
    c228:	ldrb	w0, [x0, w1, sxtw]
    c22c:	ldr	x1, [sp, #208]
    c230:	cbz	x1, c238 <grub_mod_fini+0xbf10>
    c234:	ldrb	w0, [x1, x0]
    c238:	ldr	x1, [sp, #192]
    c23c:	ldrb	w0, [x1, x0]
    c240:	cbnz	w0, ab74 <grub_mod_fini+0xa84c>
    c244:	b	b118 <grub_mod_fini+0xadf0>
    c248:	ldp	w27, w23, [sp, #200]
    c24c:	mov	x28, x22
    c250:	mov	w24, w26
    c254:	ldr	x0, [sp, #272]
    c258:	mov	w19, #0x0                   	// #0
    c25c:	add	x20, x0, #0x8
    c260:	ldr	x0, [x20], #16
    c264:	add	w19, w19, #0x1
    c268:	bl	0 <grub_free>
    c26c:	cmp	w24, w19
    c270:	b.gt	c260 <grub_mod_fini+0xbf38>
    c274:	b	b3e8 <grub_mod_fini+0xb0c0>
    c278:	ldr	x28, [x19, #96]
    c27c:	b	b79c <grub_mod_fini+0xb474>
    c280:	add	x0, sp, #0x138
    c284:	mov	x2, #0x10                  	// #16
    c288:	mov	w1, #0xffffffff            	// #-1
    c28c:	bl	0 <grub_memset>
    c290:	b	bf80 <grub_mod_fini+0xbc58>
    c294:	ldr	x0, [x1, x0]
    c298:	ldp	x2, x1, [sp, #312]
    c29c:	ldr	x3, [x0]
    c2a0:	orr	x2, x2, x3
    c2a4:	str	x2, [sp, #312]
    c2a8:	ldr	x2, [sp, #328]
    c2ac:	ldr	x3, [x0, #8]
    c2b0:	orr	x1, x1, x3
    c2b4:	str	x1, [sp, #320]
    c2b8:	ldr	x1, [sp, #336]
    c2bc:	ldr	x3, [x0, #16]
    c2c0:	orr	x2, x2, x3
    c2c4:	str	x2, [sp, #328]
    c2c8:	ldr	x0, [x0, #24]
    c2cc:	orr	x0, x1, x0
    c2d0:	str	x0, [sp, #336]
    c2d4:	b	bb1c <grub_mod_fini+0xb7f4>
    c2d8:	mov	w0, #0xc                   	// #12
    c2dc:	mov	x8, #0x0                   	// #0
    c2e0:	str	w0, [sp, #152]
    c2e4:	b	b2f8 <grub_mod_fini+0xafd0>
    c2e8:	str	w0, [sp, #152]
    c2ec:	ldr	x26, [sp, #176]
    c2f0:	ldr	x8, [sp, #552]
    c2f4:	b	b2f8 <grub_mod_fini+0xafd0>
    c2f8:	mov	x24, #0x0                   	// #0
    c2fc:	b	b398 <grub_mod_fini+0xb070>
    c300:	mov	x0, x23
    c304:	ldr	x26, [sp, #176]
    c308:	bl	0 <grub_free>
    c30c:	mov	w1, #0xc                   	// #12
    c310:	mov	x0, #0x0                   	// #0
    c314:	str	w1, [sp, #152]
    c318:	bl	0 <grub_free>
    c31c:	ldr	x8, [sp, #552]
    c320:	b	b2f8 <grub_mod_fini+0xafd0>
    c324:	sxtw	x22, w27
    c328:	mov	x25, #0x0                   	// #0
    c32c:	b	c388 <grub_mod_fini+0xc060>
    c330:	ldr	x3, [x24, x25, lsl #3]
    c334:	add	x1, x1, #0x8
    c338:	add	x0, sp, #0x158
    c33c:	add	x2, x3, #0x8
    c340:	cbz	x3, c37c <grub_mod_fini+0xc054>
    c344:	bl	6fc0 <grub_mod_fini+0x6c98>
    c348:	mov	w19, w0
    c34c:	str	w19, [sp, #312]
    c350:	add	x2, sp, #0x158
    c354:	mov	x1, x21
    c358:	add	x0, sp, #0x138
    c35c:	cbnz	w19, b38c <grub_mod_fini+0xb064>
    c360:	bl	5d78 <grub_mod_fini+0x5a50>
    c364:	mov	x1, x0
    c368:	ldr	x0, [sp, #352]
    c36c:	str	x1, [x23, x25, lsl #3]
    c370:	bl	0 <grub_free>
    c374:	ldr	w19, [sp, #312]
    c378:	cbnz	w19, b38c <grub_mod_fini+0xb064>
    c37c:	cmp	x22, x25
    c380:	add	x25, x25, #0x1
    c384:	b.eq	c434 <grub_mod_fini+0xc10c>  // b.none
    c388:	ldr	x1, [x23, x25, lsl #3]
    c38c:	cbnz	x1, c330 <grub_mod_fini+0xc008>
    c390:	ldr	x0, [x24, x25, lsl #3]
    c394:	str	x0, [x23, x25, lsl #3]
    c398:	b	c37c <grub_mod_fini+0xc054>
    c39c:	ldr	x0, [sp, #240]
    c3a0:	str	x0, [sp, #128]
    c3a4:	b	af84 <grub_mod_fini+0xac5c>
    c3a8:	ldp	w27, w23, [sp, #200]
    c3ac:	mov	x28, x22
    c3b0:	mov	w24, w26
    c3b4:	str	xzr, [x2]
    c3b8:	b	c254 <grub_mod_fini+0xbf2c>
    c3bc:	ldp	w27, w23, [sp, #200]
    c3c0:	mov	x28, x22
    c3c4:	b	b3f0 <grub_mod_fini+0xb0c8>
    c3c8:	mov	w0, #0x1                   	// #1
    c3cc:	str	w0, [sp, #152]
    c3d0:	b	b2f8 <grub_mod_fini+0xafd0>
    c3d4:	ldp	w27, w23, [sp, #200]
    c3d8:	mov	x28, x22
    c3dc:	ldr	x0, [sp, #352]
    c3e0:	b	c1e4 <grub_mod_fini+0xbebc>
    c3e4:	ldr	x1, [x5]
    c3e8:	tst	x3, x1
    c3ec:	b.ne	ce6c <grub_mod_fini+0xcb44>  // b.any
    c3f0:	mov	x1, #0x1                   	// #1
    c3f4:	nop
    c3f8:	lsl	x2, x1, #5
    c3fc:	mov	x9, x1
    c400:	add	x1, x1, #0x1
    c404:	ldr	x2, [x5, x2]
    c408:	tst	x3, x2
    c40c:	b.eq	c3f8 <grub_mod_fini+0xc0d0>  // b.none
    c410:	ldr	x1, [x8, x7]
    c414:	tst	x3, x1
    c418:	b.eq	cb68 <grub_mod_fini+0xc840>  // b.none
    c41c:	ldr	x1, [x23, x9, lsl #3]
    c420:	str	x1, [x4]
    c424:	b	ba54 <grub_mod_fini+0xb72c>
    c428:	ldr	w1, [sp, #312]
    c42c:	cbz	w1, b9a4 <grub_mod_fini+0xb67c>
    c430:	b	c1d0 <grub_mod_fini+0xbea8>
    c434:	mov	x0, x24
    c438:	ldr	x26, [sp, #176]
    c43c:	ldr	x25, [sp, #232]
    c440:	bl	0 <grub_free>
    c444:	b	b454 <grub_mod_fini+0xb12c>
    c448:	ldrb	w0, [x26, #160]
    c44c:	ldr	x20, [x25]
    c450:	tbnz	w0, #0, cc2c <grub_mod_fini+0xc904>
    c454:	mov	x0, #0x200000000           	// #8589934592
    c458:	stp	x0, xzr, [sp, #376]
    c45c:	mov	x2, #0x10                  	// #16
    c460:	mov	w1, #0x0                   	// #0
    c464:	add	x22, sp, #0x158
    c468:	ldr	w24, [x20, #136]
    c46c:	mov	x0, x22
    c470:	bl	0 <grub_memset>
    c474:	mov	x0, x19
    c478:	bl	0 <grub_malloc>
    c47c:	mov	x21, x0
    c480:	cbz	x0, b6e8 <grub_mod_fini+0xb3c0>
    c484:	mov	x27, #0x0                   	// #0
    c488:	ldr	x25, [sp, #120]
    c48c:	mov	x2, x19
    c490:	ldr	x23, [sp, #248]
    c494:	mov	x0, x21
    c498:	str	w25, [sp, #136]
    c49c:	mov	x1, x23
    c4a0:	bl	0 <grub_memmove>
    c4a4:	sbfiz	x0, x25, #3, #32
    c4a8:	ldr	w25, [x23]
    c4ac:	str	x0, [sp, #112]
    c4b0:	ldr	w0, [x23, #4]
    c4b4:	cmp	w0, w25
    c4b8:	b.lt	ccb8 <grub_mod_fini+0xc990>  // b.tstop
    c4bc:	ldr	x2, [x20]
    c4c0:	sbfiz	x28, x24, #4, #32
    c4c4:	sxtw	x6, w24
    c4c8:	add	x3, x2, x28
    c4cc:	ldrb	w1, [x3, #8]
    c4d0:	cmp	w1, #0x8
    c4d4:	b.eq	c6f4 <grub_mod_fini+0xc3cc>  // b.none
    c4d8:	cmp	w1, #0x9
    c4dc:	b.eq	c7e4 <grub_mod_fini+0xc4bc>  // b.none
    c4e0:	cmp	w25, w0
    c4e4:	b.ne	c4f4 <grub_mod_fini+0xc1cc>  // b.any
    c4e8:	ldr	w0, [sp, #544]
    c4ec:	cmp	w24, w0
    c4f0:	b.eq	ca3c <grub_mod_fini+0xc714>  // b.none
    c4f4:	ldr	x5, [sp, #528]
    c4f8:	ldr	x0, [x5]
    c4fc:	add	x2, x0, x28
    c500:	ldrb	w1, [x2, #8]
    c504:	tbnz	w1, #3, c724 <grub_mod_fini+0xc3fc>
    c508:	ldrb	w3, [x2, #10]
    c50c:	tbnz	w3, #4, c840 <grub_mod_fini+0xc518>
    c510:	sxtw	x4, w25
    c514:	cmp	w1, #0x4
    c518:	b.eq	c88c <grub_mod_fini+0xc564>  // b.none
    c51c:	ldr	x0, [sp, #424]
    c520:	cmp	w1, #0x5
    c524:	ldrb	w0, [x0, x4]
    c528:	b.eq	c6d0 <grub_mod_fini+0xc3a8>  // b.none
    c52c:	b.hi	c6c4 <grub_mod_fini+0xc39c>  // b.pmore
    c530:	cmp	w1, #0x1
    c534:	b.eq	c660 <grub_mod_fini+0xc338>  // b.none
    c538:	cmp	w1, #0x3
    c53c:	b.ne	c66c <grub_mod_fini+0xc344>  // b.any
    c540:	ldr	x1, [x2]
    c544:	ubfx	x3, x0, #6, #2
    c548:	ldr	x1, [x1, x3, lsl #3]
    c54c:	lsr	x0, x1, x0
    c550:	tbz	w0, #0, c66c <grub_mod_fini+0xc344>
    c554:	ldr	w7, [x2, #8]
    c558:	tst	w7, #0x3ff00
    c55c:	b.eq	c598 <grub_mod_fini+0xc270>  // b.none
    c560:	ldr	w2, [sp, #536]
    c564:	mov	w1, w25
    c568:	add	x0, sp, #0x1a0
    c56c:	stp	x6, x5, [sp, #96]
    c570:	bl	1c78 <grub_mod_fini+0x1950>
    c574:	ubfx	x1, x7, #8, #10
    c578:	ldp	x6, x5, [sp, #96]
    c57c:	tbz	w7, #10, cb40 <grub_mod_fini+0xc818>
    c580:	tbz	w0, #0, c66c <grub_mod_fini+0xc344>
    c584:	tbnz	w1, #3, c66c <grub_mod_fini+0xc344>
    c588:	tbz	w1, #5, c590 <grub_mod_fini+0xc268>
    c58c:	tbz	w0, #1, c66c <grub_mod_fini+0xc344>
    c590:	tbz	w1, #7, c598 <grub_mod_fini+0xc270>
    c594:	tbz	w0, #3, c66c <grub_mod_fini+0xc344>
    c598:	ldr	x0, [x5, #24]
    c59c:	add	w25, w25, #0x1
    c5a0:	ldr	w24, [x0, x6, lsl #2]
    c5a4:	cbz	x27, c690 <grub_mod_fini+0xc368>
    c5a8:	ldr	w0, [sp, #540]
    c5ac:	cmp	w25, w0
    c5b0:	b.gt	c60c <grub_mod_fini+0xc2e4>
    c5b4:	ldr	x0, [sp, #552]
    c5b8:	ldr	x0, [x0, w25, sxtw #3]
    c5bc:	cbz	x0, c60c <grub_mod_fini+0xc2e4>
    c5c0:	ldr	w1, [x0, #12]
    c5c4:	cmp	w1, #0x0
    c5c8:	b.le	c60c <grub_mod_fini+0xc2e4>
    c5cc:	sub	w1, w1, #0x1
    c5d0:	mov	w2, #0x0                   	// #0
    c5d4:	ldr	x4, [x0, #16]
    c5d8:	b	c5f4 <grub_mod_fini+0xc2cc>
    c5dc:	lsr	w3, w0, #1
    c5e0:	lsr	w0, w0, #1
    c5e4:	ldr	w3, [x4, x3, lsl #2]
    c5e8:	cmp	w3, w24
    c5ec:	b.lt	c6ec <grub_mod_fini+0xc3c4>  // b.tstop
    c5f0:	mov	w1, w0
    c5f4:	add	w0, w1, w2
    c5f8:	cmp	w1, w2
    c5fc:	b.hi	c5dc <grub_mod_fini+0xc2b4>  // b.pmore
    c600:	ldr	w0, [x4, w2, uxtw #2]
    c604:	cmp	w0, w24
    c608:	b.eq	c690 <grub_mod_fini+0xc368>  // b.none
    c60c:	ldr	w24, [x27]
    c610:	sub	w24, w24, #0x1
    c614:	str	w24, [x27]
    c618:	tbnz	w24, #31, cd20 <grub_mod_fini+0xc9f8>
    c61c:	ldr	x1, [x27, #8]
    c620:	sbfiz	x24, x24, #5, #32
    c624:	ldr	x2, [sp, #112]
    c628:	add	x28, x1, x24
    c62c:	ldr	w25, [x1, x24]
    c630:	mov	x0, x23
    c634:	ldr	x1, [x28, #8]
    c638:	bl	0 <grub_memmove>
    c63c:	ldr	x0, [sp, #352]
    c640:	bl	0 <grub_free>
    c644:	ldr	x0, [x28, #8]
    c648:	bl	0 <grub_free>
    c64c:	ldr	w24, [x28, #4]
    c650:	add	x2, sp, #0x200
    c654:	ldp	x0, x1, [x28, #16]
    c658:	stp	x0, x1, [x2, #-168]
    c65c:	b	c4b0 <grub_mod_fini+0xc188>
    c660:	ldrb	w1, [x2]
    c664:	cmp	w1, w0
    c668:	b.eq	c554 <grub_mod_fini+0xc22c>  // b.none
    c66c:	cbnz	x27, c60c <grub_mod_fini+0xc2e4>
    c670:	ldr	x0, [sp, #352]
    c674:	mov	w1, #0x1                   	// #1
    c678:	str	w1, [sp, #152]
    c67c:	bl	0 <grub_free>
    c680:	mov	x0, x21
    c684:	bl	0 <grub_free>
    c688:	ldr	x8, [sp, #552]
    c68c:	b	b128 <grub_mod_fini+0xae00>
    c690:	str	wzr, [sp, #348]
    c694:	tbz	w24, #31, c4b0 <grub_mod_fini+0xc188>
    c698:	cmn	w24, #0x2
    c69c:	b.ne	c66c <grub_mod_fini+0xc344>  // b.any
    c6a0:	ldr	x0, [sp, #352]
    c6a4:	bl	0 <grub_free>
    c6a8:	mov	x0, x21
    c6ac:	bl	0 <grub_free>
    c6b0:	cbnz	x27, cdec <grub_mod_fini+0xcac4>
    c6b4:	mov	w0, #0xc                   	// #12
    c6b8:	str	w0, [sp, #152]
    c6bc:	ldr	x8, [sp, #552]
    c6c0:	b	b2f8 <grub_mod_fini+0xafd0>
    c6c4:	cmp	w1, #0x7
    c6c8:	b.ne	c66c <grub_mod_fini+0xc344>  // b.any
    c6cc:	tbnz	w0, #7, c66c <grub_mod_fini+0xc344>
    c6d0:	cmp	w0, #0xa
    c6d4:	b.eq	cb58 <grub_mod_fini+0xc830>  // b.none
    c6d8:	cbnz	w0, c554 <grub_mod_fini+0xc22c>
    c6dc:	ldr	x0, [sp, #528]
    c6e0:	ldr	x0, [x0, #200]
    c6e4:	tbz	w0, #7, c554 <grub_mod_fini+0xc22c>
    c6e8:	b	c66c <grub_mod_fini+0xc344>
    c6ec:	add	w2, w0, #0x1
    c6f0:	b	c5f4 <grub_mod_fini+0xc2cc>
    c6f4:	ldr	w1, [x2, x28]
    c6f8:	ldr	w2, [sp, #136]
    c6fc:	add	w1, w1, #0x1
    c700:	cmp	w2, w1
    c704:	b.le	c4e0 <grub_mod_fini+0xc1b8>
    c708:	sbfiz	x1, x1, #3, #32
    c70c:	add	x0, x23, x1
    c710:	str	w25, [x23, x1]
    c714:	mov	w1, #0xffffffff            	// #-1
    c718:	str	w1, [x0, #4]
    c71c:	ldr	w0, [x23, #4]
    c720:	b	c4e0 <grub_mod_fini+0xc1b8>
    c724:	ldr	x3, [sp, #552]
    c728:	mov	w1, w24
    c72c:	ldr	x2, [x5, #40]
    c730:	mov	x0, x22
    c734:	ldr	x8, [x3, w25, sxtw #3]
    c738:	add	x28, x2, x28
    c73c:	str	x8, [sp, #96]
    c740:	bl	16f8 <grub_mod_fini+0x13d0>
    c744:	tst	w0, #0xff
    c748:	ldr	x8, [sp, #96]
    c74c:	b.eq	c6a0 <grub_mod_fini+0xc378>  // b.none
    c750:	ldr	w7, [x28, #4]
    c754:	cmp	w7, #0x0
    c758:	b.le	c66c <grub_mod_fini+0xc344>
    c75c:	ldr	w6, [x8, #12]
    c760:	mov	x4, #0x0                   	// #0
    c764:	ldr	x10, [x28, #8]
    c768:	sub	w9, w6, #0x1
    c76c:	mov	w24, #0xffffffff            	// #-1
    c770:	cmp	w6, #0x0
    c774:	b.le	c7bc <grub_mod_fini+0xc494>
    c778:	ldr	w28, [x10, x4, lsl #2]
    c77c:	mov	w1, w9
    c780:	mov	w2, #0x0                   	// #0
    c784:	ldr	x5, [x8, #16]
    c788:	b	c7a4 <grub_mod_fini+0xc47c>
    c78c:	lsr	w3, w0, #1
    c790:	lsr	w0, w0, #1
    c794:	ldr	w3, [x5, x3, lsl #2]
    c798:	cmp	w28, w3
    c79c:	b.gt	c7cc <grub_mod_fini+0xc4a4>
    c7a0:	mov	w1, w0
    c7a4:	add	w0, w1, w2
    c7a8:	cmp	w1, w2
    c7ac:	b.hi	c78c <grub_mod_fini+0xc464>  // b.pmore
    c7b0:	ldr	w0, [x5, w2, uxtw #2]
    c7b4:	cmp	w28, w0
    c7b8:	b.eq	c7d4 <grub_mod_fini+0xc4ac>  // b.none
    c7bc:	add	x4, x4, #0x1
    c7c0:	cmp	w7, w4
    c7c4:	b.gt	c770 <grub_mod_fini+0xc448>
    c7c8:	b	c694 <grub_mod_fini+0xc36c>
    c7cc:	add	w2, w0, #0x1
    c7d0:	b	c7a4 <grub_mod_fini+0xc47c>
    c7d4:	cmn	w24, #0x1
    c7d8:	b.ne	c950 <grub_mod_fini+0xc628>  // b.any
    c7dc:	mov	w24, w28
    c7e0:	b	c7bc <grub_mod_fini+0xc494>
    c7e4:	ldr	w1, [x3]
    c7e8:	ldr	w2, [sp, #136]
    c7ec:	add	w1, w1, #0x1
    c7f0:	cmp	w2, w1
    c7f4:	b.le	c4e0 <grub_mod_fini+0xc1b8>
    c7f8:	sbfiz	x1, x1, #3, #32
    c7fc:	add	x0, x23, x1
    c800:	ldr	w2, [x23, x1]
    c804:	cmp	w2, w25
    c808:	b.lt	cb74 <grub_mod_fini+0xc84c>  // b.tstop
    c80c:	ldrb	w2, [x3, #10]
    c810:	tbz	w2, #3, cb4c <grub_mod_fini+0xc824>
    c814:	ldr	w1, [x21, x1]
    c818:	cmn	w1, #0x1
    c81c:	b.eq	cb4c <grub_mod_fini+0xc824>  // b.none
    c820:	ldr	x2, [sp, #112]
    c824:	mov	x1, x21
    c828:	mov	x0, x23
    c82c:	str	x6, [sp, #96]
    c830:	bl	0 <grub_memmove>
    c834:	ldr	w0, [x23, #4]
    c838:	ldr	x6, [sp, #96]
    c83c:	b	c4e0 <grub_mod_fini+0xc1b8>
    c840:	add	x3, sp, #0x1a0
    c844:	add	x1, x5, #0xc8
    c848:	mov	w2, w24
    c84c:	mov	w4, w25
    c850:	stp	x5, x6, [sp, #96]
    c854:	bl	3038 <grub_mod_fini+0x2d10>
    c858:	mov	w3, w0
    c85c:	ldp	x5, x6, [sp, #96]
    c860:	cbnz	w0, c87c <grub_mod_fini+0xc554>
    c864:	ldr	x2, [x5]
    c868:	sxtw	x4, w25
    c86c:	add	x2, x2, x28
    c870:	ldrb	w1, [x2, #8]
    c874:	b	c51c <grub_mod_fini+0xc1f4>
    c878:	cbz	w3, c8bc <grub_mod_fini+0xc594>
    c87c:	ldr	x0, [x5, #24]
    c880:	add	w25, w25, w3
    c884:	ldr	w24, [x0, x6, lsl #2]
    c888:	b	c5a4 <grub_mod_fini+0xc27c>
    c88c:	ldr	w0, [x2]
    c890:	add	w0, w0, #0x1
    c894:	sbfiz	x0, x0, #3, #32
    c898:	add	x1, x23, x0
    c89c:	ldr	w0, [x23, x0]
    c8a0:	ldr	w1, [x1, #4]
    c8a4:	sub	w3, w1, w0
    c8a8:	cbz	x27, c878 <grub_mod_fini+0xc550>
    c8ac:	cmn	w0, #0x1
    c8b0:	ccmn	w1, #0x1, #0x4, ne  // ne = any
    c8b4:	b.eq	c60c <grub_mod_fini+0xc2e4>  // b.none
    c8b8:	cbnz	w3, cb98 <grub_mod_fini+0xc870>
    c8bc:	mov	w1, w24
    c8c0:	mov	x0, x22
    c8c4:	stp	x6, x5, [sp, #96]
    c8c8:	bl	16f8 <grub_mod_fini+0x13d0>
    c8cc:	tst	w0, #0xff
    c8d0:	b.eq	c6a0 <grub_mod_fini+0xc378>  // b.none
    c8d4:	ldr	x0, [sp, #552]
    c8d8:	sxtw	x4, w25
    c8dc:	ldp	x6, x5, [sp, #96]
    c8e0:	ldr	x3, [x0, x4, lsl #3]
    c8e4:	ldr	w1, [x3, #12]
    c8e8:	cmp	w1, #0x0
    c8ec:	b.le	c940 <grub_mod_fini+0xc618>
    c8f0:	ldr	x0, [x5, #40]
    c8f4:	sub	w1, w1, #0x1
    c8f8:	mov	w2, #0x0                   	// #0
    c8fc:	add	x0, x0, x28
    c900:	ldr	x8, [x3, #16]
    c904:	ldr	x0, [x0, #8]
    c908:	ldr	w7, [x0]
    c90c:	b	c928 <grub_mod_fini+0xc600>
    c910:	lsr	w3, w0, #1
    c914:	lsr	w0, w0, #1
    c918:	ldr	w3, [x8, x3, lsl #2]
    c91c:	cmp	w7, w3
    c920:	b.gt	cbf4 <grub_mod_fini+0xc8cc>
    c924:	mov	w1, w0
    c928:	add	w0, w1, w2
    c92c:	cmp	w1, w2
    c930:	b.hi	c910 <grub_mod_fini+0xc5e8>  // b.pmore
    c934:	ldr	w24, [x8, w2, uxtw #2]
    c938:	cmp	w7, w24
    c93c:	b.eq	c694 <grub_mod_fini+0xc36c>  // b.none
    c940:	ldr	x2, [x5]
    c944:	add	x2, x2, x28
    c948:	ldrb	w1, [x2, #8]
    c94c:	b	c51c <grub_mod_fini+0xc1f4>
    c950:	ldr	w1, [sp, #348]
    c954:	cmp	w1, #0x0
    c958:	b.le	c99c <grub_mod_fini+0xc674>
    c95c:	sub	w1, w1, #0x1
    c960:	mov	w2, #0x0                   	// #0
    c964:	ldr	x4, [sp, #352]
    c968:	b	c984 <grub_mod_fini+0xc65c>
    c96c:	lsr	w3, w0, #1
    c970:	lsr	w0, w0, #1
    c974:	ldr	w3, [x4, x3, lsl #2]
    c978:	cmp	w24, w3
    c97c:	b.gt	ca34 <grub_mod_fini+0xc70c>
    c980:	mov	w1, w0
    c984:	add	w0, w1, w2
    c988:	cmp	w1, w2
    c98c:	b.hi	c96c <grub_mod_fini+0xc644>  // b.pmore
    c990:	ldr	w0, [x4, w2, uxtw #2]
    c994:	cmp	w24, w0
    c998:	b.eq	ca2c <grub_mod_fini+0xc704>  // b.none
    c99c:	cbz	x27, c694 <grub_mod_fini+0xc36c>
    c9a0:	ldp	w3, w1, [x27]
    c9a4:	add	w0, w3, #0x1
    c9a8:	str	w0, [x27]
    c9ac:	cmp	w0, w1
    c9b0:	ldr	x1, [x27, #8]
    c9b4:	b.eq	cd8c <grub_mod_fini+0xca64>  // b.none
    c9b8:	sbfiz	x2, x3, #5, #32
    c9bc:	mov	x0, x19
    c9c0:	add	x3, x1, x2
    c9c4:	str	x3, [sp, #96]
    c9c8:	str	w25, [x1, x2]
    c9cc:	str	w28, [x3, #4]
    c9d0:	bl	0 <grub_malloc>
    c9d4:	ldr	x3, [sp, #96]
    c9d8:	str	x0, [x3, #8]
    c9dc:	cbz	x0, cddc <grub_mod_fini+0xcab4>
    c9e0:	mov	x2, x19
    c9e4:	mov	x1, x23
    c9e8:	bl	0 <grub_memmove>
    c9ec:	ldr	x3, [sp, #96]
    c9f0:	ldr	w0, [sp, #348]
    c9f4:	str	w0, [x3, #20]
    c9f8:	cmp	w0, #0x0
    c9fc:	b.le	cd78 <grub_mod_fini+0xca50>
    ca00:	str	w0, [x3, #16]
    ca04:	sbfiz	x0, x0, #2, #32
    ca08:	bl	0 <grub_malloc>
    ca0c:	ldr	x3, [sp, #96]
    ca10:	str	x0, [x3, #24]
    ca14:	cbz	x0, cdd8 <grub_mod_fini+0xcab0>
    ca18:	ldr	x1, [sp, #352]
    ca1c:	ldrsw	x2, [sp, #348]
    ca20:	lsl	x2, x2, #2
    ca24:	bl	0 <grub_memmove>
    ca28:	b	c694 <grub_mod_fini+0xc36c>
    ca2c:	mov	w24, w28
    ca30:	b	c694 <grub_mod_fini+0xc36c>
    ca34:	add	w2, w0, #0x1
    ca38:	b	c984 <grub_mod_fini+0xc65c>
    ca3c:	cbz	x27, cf44 <grub_mod_fini+0xcc1c>
    ca40:	mov	x0, x23
    ca44:	mov	x1, #0x0                   	// #0
    ca48:	ldr	w2, [x0]
    ca4c:	tbnz	w2, #31, ca5c <grub_mod_fini+0xc734>
    ca50:	ldr	w2, [x0, #4]
    ca54:	cmn	w2, #0x1
    ca58:	b.eq	cad8 <grub_mod_fini+0xc7b0>  // b.none
    ca5c:	ldr	x2, [sp, #120]
    ca60:	add	x1, x1, #0x1
    ca64:	add	x0, x0, #0x8
    ca68:	cmp	x2, x1
    ca6c:	b.ne	ca48 <grub_mod_fini+0xc720>  // b.any
    ca70:	ldr	x0, [sp, #352]
    ca74:	bl	0 <grub_free>
    ca78:	mov	x0, x21
    ca7c:	bl	0 <grub_free>
    ca80:	ldr	w0, [x27]
    ca84:	cmp	w0, #0x0
    ca88:	b.le	cac0 <grub_mod_fini+0xc798>
    ca8c:	sub	w20, w0, #0x1
    ca90:	mov	x21, #0x0                   	// #0
    ca94:	add	x20, x20, #0x1
    ca98:	lsl	x20, x20, #5
    ca9c:	ldr	x22, [x27, #8]
    caa0:	add	x22, x22, x21
    caa4:	add	x21, x21, #0x20
    caa8:	ldr	x0, [x22, #24]
    caac:	bl	0 <grub_free>
    cab0:	ldr	x0, [x22, #8]
    cab4:	bl	0 <grub_free>
    cab8:	cmp	x20, x21
    cabc:	b.ne	ca9c <grub_mod_fini+0xc774>  // b.any
    cac0:	ldr	x0, [x27, #8]
    cac4:	bl	0 <grub_free>
    cac8:	ldr	x0, [sp, #248]
    cacc:	mov	x2, x0
    cad0:	ldr	w1, [x0]
    cad4:	b	b4e0 <grub_mod_fini+0xb1b8>
    cad8:	ldr	x0, [sp, #120]
    cadc:	cmp	x1, x0
    cae0:	b.eq	ca70 <grub_mod_fini+0xc748>  // b.none
    cae4:	ldr	w24, [x27]
    cae8:	sub	w24, w24, #0x1
    caec:	str	w24, [x27]
    caf0:	tbnz	w24, #31, cd3c <grub_mod_fini+0xca14>
    caf4:	ldr	x1, [x27, #8]
    caf8:	sbfiz	x24, x24, #5, #32
    cafc:	mov	x2, x19
    cb00:	mov	x0, x23
    cb04:	add	x28, x1, x24
    cb08:	ldr	w25, [x1, x24]
    cb0c:	ldr	x1, [x28, #8]
    cb10:	bl	0 <grub_memmove>
    cb14:	ldr	x0, [sp, #352]
    cb18:	bl	0 <grub_free>
    cb1c:	ldr	x0, [x28, #8]
    cb20:	bl	0 <grub_free>
    cb24:	ldr	w24, [x28, #4]
    cb28:	add	x2, sp, #0x200
    cb2c:	ldp	x0, x1, [x28, #16]
    cb30:	sxtw	x6, w24
    cb34:	sbfiz	x28, x24, #4, #32
    cb38:	stp	x0, x1, [x2, #-168]
    cb3c:	b	c4f4 <grub_mod_fini+0xc1cc>
    cb40:	tbz	w1, #3, c588 <grub_mod_fini+0xc260>
    cb44:	tbz	w0, #0, c588 <grub_mod_fini+0xc260>
    cb48:	b	c66c <grub_mod_fini+0xc344>
    cb4c:	str	w25, [x0, #4]
    cb50:	ldr	w0, [x23, #4]
    cb54:	b	c4e0 <grub_mod_fini+0xc1b8>
    cb58:	ldr	x0, [sp, #528]
    cb5c:	ldr	x0, [x0, #200]
    cb60:	tbnz	w0, #6, c554 <grub_mod_fini+0xc22c>
    cb64:	b	c66c <grub_mod_fini+0xc344>
    cb68:	ldr	x1, [x25, x9, lsl #3]
    cb6c:	str	x1, [x4]
    cb70:	b	ba54 <grub_mod_fini+0xb72c>
    cb74:	ldr	x2, [sp, #112]
    cb78:	str	w25, [x0, #4]
    cb7c:	mov	x1, x23
    cb80:	mov	x0, x21
    cb84:	str	x6, [sp, #96]
    cb88:	bl	0 <grub_memmove>
    cb8c:	ldr	w0, [x23, #4]
    cb90:	ldr	x6, [sp, #96]
    cb94:	b	c4e0 <grub_mod_fini+0xc1b8>
    cb98:	ldr	x1, [sp, #424]
    cb9c:	sxtw	x2, w3
    cba0:	str	w3, [sp, #96]
    cba4:	str	x6, [sp, #104]
    cba8:	add	x0, x1, w0, sxtw
    cbac:	add	x1, x1, w25, sxtw
    cbb0:	str	x5, [sp, #128]
    cbb4:	bl	0 <grub_memcmp>
    cbb8:	ldr	w3, [sp, #96]
    cbbc:	ldr	x6, [sp, #104]
    cbc0:	ldr	x5, [sp, #128]
    cbc4:	cbz	w0, c87c <grub_mod_fini+0xc554>
    cbc8:	b	c60c <grub_mod_fini+0xc2e4>
    cbcc:	ldr	x0, [sp, #272]
    cbd0:	mov	x28, x22
    cbd4:	ldp	w27, w23, [sp, #200]
    cbd8:	ldr	w20, [sp, #216]
    cbdc:	bl	0 <grub_free>
    cbe0:	mov	x0, #0x800                 	// #2048
    cbe4:	bl	0 <grub_zalloc>
    cbe8:	str	x0, [x28, #64]
    cbec:	cbnz	x0, ac94 <grub_mod_fini+0xa96c>
    cbf0:	b	b3f0 <grub_mod_fini+0xb0c8>
    cbf4:	add	w2, w0, #0x1
    cbf8:	b	c928 <grub_mod_fini+0xc600>
    cbfc:	ldr	x1, [sp, #120]
    cc00:	mov	w2, #0xffffffff            	// #-1
    cc04:	add	x1, x1, w0, uxtw
    cc08:	ldr	x0, [sp, #248]
    cc0c:	add	x3, x0, #0x8
    cc10:	mov	x0, x19
    cc14:	add	x1, x3, x1, lsl #3
    cc18:	stp	w2, w2, [x0]
    cc1c:	add	x0, x0, #0x8
    cc20:	cmp	x0, x1
    cc24:	b.ne	cc18 <grub_mod_fini+0xc8f0>  // b.any
    cc28:	b	b570 <grub_mod_fini+0xb248>
    cc2c:	ldr	w0, [x26, #140]
    cc30:	cmp	w0, #0x0
    cc34:	b.le	c454 <grub_mod_fini+0xc12c>
    cc38:	mov	x1, #0x200000000           	// #8589934592
    cc3c:	mov	x0, #0x40                  	// #64
    cc40:	str	x1, [sp, #376]
    cc44:	bl	0 <grub_malloc>
    cc48:	str	x0, [sp, #384]
    cc4c:	mov	x23, x0
    cc50:	cbz	x0, b6e8 <grub_mod_fini+0xb3c0>
    cc54:	mov	x2, #0x10                  	// #16
    cc58:	mov	w1, #0x0                   	// #0
    cc5c:	add	x22, sp, #0x158
    cc60:	ldr	w24, [x20, #136]
    cc64:	mov	x0, x22
    cc68:	bl	0 <grub_memset>
    cc6c:	mov	x0, x19
    cc70:	add	x27, sp, #0x178
    cc74:	bl	0 <grub_malloc>
    cc78:	mov	x21, x0
    cc7c:	cbnz	x0, c488 <grub_mod_fini+0xc160>
    cc80:	mov	w1, #0xc                   	// #12
    cc84:	mov	x0, x23
    cc88:	str	w1, [sp, #152]
    cc8c:	bl	0 <grub_free>
    cc90:	ldr	x8, [sp, #552]
    cc94:	b	b2f8 <grub_mod_fini+0xafd0>
    cc98:	ldr	x1, [sp, #248]
    cc9c:	add	x2, x1, x19
    cca0:	mov	w1, #0xffffffff            	// #-1
    cca4:	str	w1, [x0, #4]
    cca8:	str	w1, [x0], #8
    ccac:	cmp	x2, x0
    ccb0:	b.ne	cca4 <grub_mod_fini+0xc97c>  // b.any
    ccb4:	b	b4bc <grub_mod_fini+0xb194>
    ccb8:	ldr	x0, [sp, #352]
    ccbc:	bl	0 <grub_free>
    ccc0:	mov	x0, x21
    ccc4:	bl	0 <grub_free>
    ccc8:	cbz	x27, ce5c <grub_mod_fini+0xcb34>
    cccc:	ldr	w0, [x27]
    ccd0:	ldr	x22, [x27, #8]
    ccd4:	cmp	w0, #0x0
    ccd8:	b.le	cd08 <grub_mod_fini+0xc9e0>
    ccdc:	sub	w0, w0, #0x1
    cce0:	add	x21, x22, #0x28
    cce4:	mov	w1, #0x20                  	// #32
    cce8:	add	x20, x22, #0x8
    ccec:	umaddl	x21, w0, w1, x21
    ccf0:	ldr	x0, [x20, #16]
    ccf4:	bl	0 <grub_free>
    ccf8:	ldr	x0, [x20], #32
    ccfc:	bl	0 <grub_free>
    cd00:	cmp	x21, x20
    cd04:	b.ne	ccf0 <grub_mod_fini+0xc9c8>  // b.any
    cd08:	mov	x0, x22
    cd0c:	bl	0 <grub_free>
    cd10:	ldr	x0, [sp, #248]
    cd14:	mov	x2, x0
    cd18:	ldr	w1, [x0]
    cd1c:	b	b4e0 <grub_mod_fini+0xb1b8>
    cd20:	adrp	x0, 0 <grub_mod_init-0x288>
    cd24:	mov	w2, #0x553                 	// #1363
    cd28:	ldr	x1, [x0]
    cd2c:	adrp	x0, 0 <grub_mod_init-0x288>
    cd30:	ldr	x0, [x0]
    cd34:	bl	0 <grub_printf>
    cd38:	b	c61c <grub_mod_fini+0xc2f4>
    cd3c:	adrp	x0, 0 <grub_mod_init-0x288>
    cd40:	mov	w2, #0x553                 	// #1363
    cd44:	ldr	x1, [x0]
    cd48:	adrp	x0, 0 <grub_mod_init-0x288>
    cd4c:	ldr	x0, [x0]
    cd50:	bl	0 <grub_printf>
    cd54:	b	caf4 <grub_mod_fini+0xc7cc>
    cd58:	ldr	w1, [sp, #312]
    cd5c:	cbz	w1, c188 <grub_mod_fini+0xbe60>
    cd60:	b	c1d0 <grub_mod_fini+0xbea8>
    cd64:	mov	w1, #0xc                   	// #12
    cd68:	mov	x28, x22
    cd6c:	ldp	w27, w23, [sp, #200]
    cd70:	str	w1, [sp, #312]
    cd74:	b	c1e4 <grub_mod_fini+0xbebc>
    cd78:	add	x0, x3, #0x10
    cd7c:	mov	x2, #0x10                  	// #16
    cd80:	mov	w1, #0x0                   	// #0
    cd84:	bl	0 <grub_memset>
    cd88:	b	c694 <grub_mod_fini+0xc36c>
    cd8c:	lsl	w2, w0, #1
    cd90:	mov	x0, x1
    cd94:	str	w2, [sp, #96]
    cd98:	sbfiz	x1, x2, #5, #32
    cd9c:	str	w3, [sp, #104]
    cda0:	bl	0 <grub_realloc>
    cda4:	mov	x1, x0
    cda8:	cbz	x0, cddc <grub_mod_fini+0xcab4>
    cdac:	ldr	w2, [sp, #96]
    cdb0:	ldr	w3, [sp, #104]
    cdb4:	str	w2, [x27, #4]
    cdb8:	str	x0, [x27, #8]
    cdbc:	b	c9b8 <grub_mod_fini+0xc690>
    cdc0:	ldr	x2, [sp, #248]
    cdc4:	lsl	x19, x0, #3
    cdc8:	ldr	w0, [sp, #540]
    cdcc:	mov	w1, #0x0                   	// #0
    cdd0:	stp	wzr, w0, [x2]
    cdd4:	b	b4e0 <grub_mod_fini+0xb1b8>
    cdd8:	str	xzr, [x3, #16]
    cddc:	ldr	x0, [sp, #352]
    cde0:	bl	0 <grub_free>
    cde4:	mov	x0, x21
    cde8:	bl	0 <grub_free>
    cdec:	ldr	w0, [x27]
    cdf0:	ldr	x21, [x27, #8]
    cdf4:	cmp	w0, #0x0
    cdf8:	b.le	ce28 <grub_mod_fini+0xcb00>
    cdfc:	sub	w0, w0, #0x1
    ce00:	add	x19, x21, #0x28
    ce04:	mov	w1, #0x20                  	// #32
    ce08:	add	x20, x21, #0x8
    ce0c:	umaddl	x19, w0, w1, x19
    ce10:	ldr	x0, [x20, #16]
    ce14:	bl	0 <grub_free>
    ce18:	ldr	x0, [x20], #32
    ce1c:	bl	0 <grub_free>
    ce20:	cmp	x19, x20
    ce24:	b.ne	ce10 <grub_mod_fini+0xcae8>  // b.any
    ce28:	mov	w1, #0xc                   	// #12
    ce2c:	mov	x0, x21
    ce30:	str	w1, [sp, #152]
    ce34:	bl	0 <grub_free>
    ce38:	ldr	x8, [sp, #552]
    ce3c:	b	b2f8 <grub_mod_fini+0xafd0>
    ce40:	ldr	x1, [sp, #288]
    ce44:	ldr	x0, [x1, x0, lsl #3]
    ce48:	str	x0, [x6, #80]
    ce4c:	ldr	w1, [sp, #264]
    ce50:	cbz	w1, baa4 <grub_mod_fini+0xb77c>
    ce54:	str	x0, [x6, #2128]
    ce58:	b	baa4 <grub_mod_fini+0xb77c>
    ce5c:	ldr	x0, [sp, #248]
    ce60:	mov	x2, x0
    ce64:	ldr	w1, [x0]
    ce68:	b	b4e0 <grub_mod_fini+0xb1b8>
    ce6c:	mov	x9, #0x0                   	// #0
    ce70:	b	c410 <grub_mod_fini+0xc0e8>
    ce74:	mov	x0, #0x1000                	// #4096
    ce78:	bl	0 <grub_zalloc>
    ce7c:	str	x0, [x22, #72]
    ce80:	mov	x6, x0
    ce84:	cbz	x0, c1d0 <grub_mod_fini+0xbea8>
    ce88:	ldr	x9, [sp, #280]
    ce8c:	add	x8, x0, #0x800
    ce90:	mov	x7, #0x0                   	// #0
    ce94:	add	x0, sp, #0x178
    ce98:	ldr	x0, [x0, x7]
    ce9c:	cbz	x0, cebc <grub_mod_fini+0xcb94>
    cea0:	mov	x4, x8
    cea4:	mov	x2, #0x1                   	// #1
    cea8:	tbnz	w0, #0, ced4 <grub_mod_fini+0xcbac>
    ceac:	lsl	x2, x2, #1
    ceb0:	lsr	x0, x0, #1
    ceb4:	add	x4, x4, #0x8
    ceb8:	cbnz	x0, cea8 <grub_mod_fini+0xcb80>
    cebc:	add	x7, x7, #0x8
    cec0:	add	x8, x8, #0x200
    cec4:	cmp	x7, #0x20
    cec8:	add	x9, x9, #0x8
    cecc:	b.ne	ce94 <grub_mod_fini+0xcb6c>  // b.any
    ced0:	b	ba74 <grub_mod_fini+0xb74c>
    ced4:	ldr	x1, [x9]
    ced8:	tst	x2, x1
    cedc:	b.ne	cf20 <grub_mod_fini+0xcbf8>  // b.any
    cee0:	mov	x1, #0x1                   	// #1
    cee4:	lsl	x3, x1, #5
    cee8:	mov	x5, x1
    ceec:	add	x1, x1, #0x1
    cef0:	ldr	x3, [x9, x3]
    cef4:	tst	x2, x3
    cef8:	b.eq	cee4 <grub_mod_fini+0xcbbc>  // b.none
    cefc:	lsl	x5, x5, #3
    cf00:	sub	x1, x4, #0x8, lsl #12
    cf04:	ldr	x3, [x25, x5]
    cf08:	str	x3, [x1, #30720]
    cf0c:	ldr	x1, [x23, x5]
    cf10:	str	x1, [x4]
    cf14:	b	ceac <grub_mod_fini+0xcb84>
    cf18:	mov	w1, w6
    cf1c:	b	c0f0 <grub_mod_fini+0xbdc8>
    cf20:	mov	x5, #0x0                   	// #0
    cf24:	b	cefc <grub_mod_fini+0xcbd4>
    cf28:	ldr	x0, [sp, #272]
    cf2c:	mov	x28, x22
    cf30:	ldp	w27, w23, [sp, #200]
    cf34:	ldr	w20, [sp, #216]
    cf38:	bl	0 <grub_free>
    cf3c:	cbnz	w24, b3f0 <grub_mod_fini+0xb0c8>
    cf40:	b	cbe0 <grub_mod_fini+0xc8b8>
    cf44:	ldr	x0, [sp, #352]
    cf48:	bl	0 <grub_free>
    cf4c:	mov	x0, x21
    cf50:	bl	0 <grub_free>
    cf54:	ldr	x0, [sp, #248]
    cf58:	mov	x2, x0
    cf5c:	ldr	w1, [x0]
    cf60:	b	b4e0 <grub_mod_fini+0xb1b8>
    cf64:	mov	w0, #0xc                   	// #12
    cf68:	str	w0, [sp, #152]
    cf6c:	ldr	x26, [sp, #176]
    cf70:	ldr	x8, [sp, #552]
    cf74:	b	b2f8 <grub_mod_fini+0xafd0>
	...
    cf88:	stp	x29, x30, [sp, #-288]!
    cf8c:	mov	x9, x1
    cf90:	mov	x29, sp
    cf94:	stp	x19, x20, [sp, #16]
    cf98:	ldrb	w19, [x2, #8]
    cf9c:	stp	x21, x22, [sp, #32]
    cfa0:	mov	x22, x2
    cfa4:	cmp	w19, #0x13
    cfa8:	stp	x23, x24, [sp, #48]
    cfac:	mov	x24, x3
    cfb0:	stp	x27, x28, [sp, #80]
    cfb4:	mov	x28, x0
    cfb8:	str	x5, [sp, #136]
    cfbc:	ldr	x20, [x1]
    cfc0:	b.hi	d1d0 <grub_mod_fini+0xcea8>  // b.pmore
    cfc4:	cmp	w19, #0x11
    cfc8:	b.hi	e1e8 <grub_mod_fini+0xdec0>  // b.pmore
    cfcc:	cmp	w19, #0x8
    cfd0:	b.eq	e264 <grub_mod_fini+0xdf3c>  // b.none
    cfd4:	b.ls	d48c <grub_mod_fini+0xd164>  // b.plast
    cfd8:	cmp	w19, #0xb
    cfdc:	b.eq	e1e8 <grub_mod_fini+0xdec0>  // b.none
    cfe0:	cmp	w19, #0xc
    cfe4:	b.ne	d46c <grub_mod_fini+0xd144>  // b.any
    cfe8:	ldr	w9, [x2]
    cfec:	mov	w0, #0x30f                 	// #783
    cff0:	tst	w9, w0
    cff4:	b.eq	d038 <grub_mod_fini+0xcd10>  // b.none
    cff8:	ldrb	w0, [x20, #160]
    cffc:	tbnz	w0, #4, d038 <grub_mod_fini+0xcd10>
    d000:	orr	w0, w0, #0x10
    d004:	strb	w0, [x20, #160]
    d008:	mov	w1, w0
    d00c:	tbnz	w0, #3, ed8c <grub_mod_fini+0xea64>
    d010:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
    d014:	mov	x2, #0x3ff000000000000     	// #287948901175001088
    d018:	movk	x0, #0x87ff, lsl #16
    d01c:	stp	x2, x0, [x20, #168]
    d020:	tbz	w1, #2, ed20 <grub_mod_fini+0xe9f8>
    d024:	add	x0, x20, #0xb8
    d028:	mov	x2, #0x10                  	// #16
    d02c:	mov	w1, #0x0                   	// #0
    d030:	bl	0 <grub_memset>
    d034:	ldr	w9, [x22]
    d038:	sub	w0, w9, #0x100
    d03c:	tst	w0, #0xfffffeff
    d040:	b.ne	e49c <grub_mod_fini+0xe174>  // b.any
    d044:	cmp	w9, #0x100
    d048:	b.eq	e758 <grub_mod_fini+0xe430>  // b.none
    d04c:	mov	w0, #0x5                   	// #5
    d050:	str	w0, [x22]
    d054:	ldr	w0, [x20, #128]
    d058:	cmp	w0, #0xf
    d05c:	b.eq	ec60 <grub_mod_fini+0xe938>  // b.none
    d060:	mov	x2, #0x8                   	// #8
    d064:	mov	w3, #0x40                  	// #64
    d068:	add	w1, w0, #0x1
    d06c:	smaddl	x3, w0, w3, x2
    d070:	ldr	x2, [x20, #112]
    d074:	sbfiz	x0, x0, #6, #32
    d078:	str	w1, [x20, #128]
    d07c:	add	x1, x2, x0
    d080:	add	x0, x0, #0x20
    d084:	add	x19, x2, x3
    d088:	add	x0, x2, x0
    d08c:	mov	w4, #0xffffffff            	// #-1
    d090:	stp	xzr, xzr, [x1, #8]
    d094:	str	xzr, [x1, #24]
    d098:	ldp	x2, x3, [x22]
    d09c:	stp	x2, x3, [x1, #48]
    d0a0:	ldrb	w2, [x0, #26]
    d0a4:	and	w2, w2, #0xfffffff3
    d0a8:	strb	w2, [x0, #26]
    d0ac:	stp	xzr, xzr, [x1, #32]
    d0b0:	str	w4, [x1, #64]
    d0b4:	mov	w0, #0xa                   	// #10
    d0b8:	str	w0, [x22]
    d0bc:	ldr	w0, [x20, #128]
    d0c0:	cmp	w0, #0xf
    d0c4:	b.eq	ea4c <grub_mod_fini+0xe724>  // b.none
    d0c8:	mov	x2, #0x8                   	// #8
    d0cc:	mov	w21, #0x40                  	// #64
    d0d0:	add	w1, w0, #0x1
    d0d4:	smaddl	x21, w0, w21, x2
    d0d8:	ldr	x2, [x20, #112]
    d0dc:	sbfiz	x0, x0, #6, #32
    d0e0:	str	w1, [x20, #128]
    d0e4:	add	x1, x2, x0
    d0e8:	add	x0, x0, #0x20
    d0ec:	add	x21, x2, x21
    d0f0:	add	x0, x2, x0
    d0f4:	mov	w3, #0xffffffff            	// #-1
    d0f8:	stp	xzr, xzr, [x1, #8]
    d0fc:	str	xzr, [x1, #24]
    d100:	ldp	x4, x5, [x22]
    d104:	stp	x4, x5, [x1, #48]
    d108:	ldrb	w2, [x0, #26]
    d10c:	and	w2, w2, #0xfffffff3
    d110:	strb	w2, [x0, #26]
    d114:	stp	xzr, xzr, [x1, #32]
    d118:	str	w3, [x1, #64]
    d11c:	ldr	w1, [x20, #128]
    d120:	cmp	w1, #0xf
    d124:	b.eq	ea1c <grub_mod_fini+0xe6f4>  // b.none
    d128:	sbfiz	x4, x1, #6, #32
    d12c:	sxtw	x0, w1
    d130:	ldr	x23, [x20, #112]
    d134:	add	x3, x4, #0x30
    d138:	add	w2, w1, #0x1
    d13c:	add	x4, x4, #0x8
    d140:	lsl	x0, x0, #6
    d144:	add	x3, x23, x3
    d148:	add	x1, x23, x0
    d14c:	add	x0, x0, #0x20
    d150:	str	w2, [x20, #128]
    d154:	add	x0, x23, x0
    d158:	mov	w2, #0xa                   	// #10
    d15c:	mov	w5, #0xffffffff            	// #-1
    d160:	stp	xzr, x19, [x1, #8]
    d164:	add	x23, x23, x4
    d168:	str	x21, [x1, #24]
    d16c:	strb	w2, [x3, #8]
    d170:	ldrb	w2, [x0, #26]
    d174:	and	w2, w2, #0xfffffff3
    d178:	strb	w2, [x0, #26]
    d17c:	stp	xzr, xzr, [x1, #32]
    d180:	str	w5, [x1, #64]
    d184:	cbz	x19, e968 <grub_mod_fini+0xe640>
    d188:	str	x23, [x19]
    d18c:	cbz	x21, d978 <grub_mod_fini+0xd650>
    d190:	str	x23, [x21]
    d194:	cbz	x23, d978 <grub_mod_fini+0xd650>
    d198:	mov	x1, x28
    d19c:	mov	x2, x24
    d1a0:	mov	x0, x22
    d1a4:	bl	24a8 <grub_mod_fini+0x2180>
    d1a8:	ldr	w1, [x28, #56]
    d1ac:	add	w1, w1, w0
    d1b0:	str	w1, [x28, #56]
    d1b4:	mov	x0, x23
    d1b8:	ldp	x19, x20, [sp, #16]
    d1bc:	ldp	x21, x22, [sp, #32]
    d1c0:	ldp	x23, x24, [sp, #48]
    d1c4:	ldp	x27, x28, [sp, #80]
    d1c8:	ldp	x29, x30, [sp], #288
    d1cc:	ret
    d1d0:	cmp	w19, #0x21
    d1d4:	b.hi	d64c <grub_mod_fini+0xd324>  // b.pmore
    d1d8:	cmp	w19, #0x1f
    d1dc:	b.hi	e240 <grub_mod_fini+0xdf18>  // b.pmore
    d1e0:	cmp	w19, #0x17
    d1e4:	b.eq	e1e4 <grub_mod_fini+0xdebc>  // b.none
    d1e8:	cmp	w19, #0x18
    d1ec:	b.ne	d51c <grub_mod_fini+0xd1f4>  // b.any
    d1f0:	mov	w0, #0x1                   	// #1
    d1f4:	strb	w0, [x22, #8]
    d1f8:	ldr	w0, [x20, #128]
    d1fc:	cmp	w0, #0xf
    d200:	b.eq	e504 <grub_mod_fini+0xe1dc>  // b.none
    d204:	mov	x23, #0x8                   	// #8
    d208:	mov	w2, #0x40                  	// #64
    d20c:	add	w1, w0, #0x1
    d210:	smaddl	x2, w0, w2, x23
    d214:	ldr	x23, [x20, #112]
    d218:	sbfiz	x0, x0, #6, #32
    d21c:	str	w1, [x20, #128]
    d220:	add	x1, x23, x0
    d224:	add	x0, x0, #0x20
    d228:	mov	w4, #0xffffffff            	// #-1
    d22c:	add	x0, x23, x0
    d230:	adds	x23, x23, x2
    d234:	stp	xzr, xzr, [x1, #8]
    d238:	str	xzr, [x1, #24]
    d23c:	ldp	x2, x3, [x22]
    d240:	stp	x2, x3, [x1, #48]
    d244:	ldrb	w2, [x0, #26]
    d248:	and	w2, w2, #0xfffffff3
    d24c:	strb	w2, [x0, #26]
    d250:	stp	xzr, xzr, [x1, #32]
    d254:	str	w4, [x1, #64]
    d258:	b.eq	d978 <grub_mod_fini+0xd650>  // b.none
    d25c:	mov	x2, x24
    d260:	mov	x1, x28
    d264:	mov	x0, x22
    d268:	bl	24a8 <grub_mod_fini+0x2180>
    d26c:	ldrb	w1, [x22, #8]
    d270:	ldr	w3, [x28, #56]
    d274:	subs	w2, w1, #0x12
    d278:	cset	w12, eq  // eq = none
    d27c:	add	w9, w0, w3
    d280:	cmp	w1, #0x17
    d284:	str	w9, [x28, #56]
    d288:	ccmp	w1, #0xb, #0x4, ne  // ne = any
    d28c:	and	w2, w2, #0xff
    d290:	ccmp	w2, #0x1, #0x0, ne  // ne = any
    d294:	b.hi	d1b4 <grub_mod_fini+0xce8c>  // b.pmore
    d298:	and	x0, x24, #0x200000
    d29c:	stp	x25, x26, [sp, #64]
    d2a0:	str	x0, [sp, #144]
    d2a4:	and	x0, x24, #0x1000000
    d2a8:	str	x0, [sp, #128]
    d2ac:	nop
    d2b0:	cmp	w1, #0x17
    d2b4:	ldp	x10, x11, [x22]
    d2b8:	b.eq	da20 <grub_mod_fini+0xd6f8>  // b.none
    d2bc:	cmp	w1, #0x13
    d2c0:	mov	x2, x24
    d2c4:	mov	x1, x28
    d2c8:	mov	x0, x22
    d2cc:	mov	w21, #0xffffffff            	// #-1
    d2d0:	cneg	w21, w21, eq  // eq = none
    d2d4:	bl	24a8 <grub_mod_fini+0x2180>
    d2d8:	ldr	w1, [x28, #56]
    d2dc:	add	w1, w1, w0
    d2e0:	str	w1, [x28, #56]
    d2e4:	cbz	x23, dbdc <grub_mod_fini+0xd8b4>
    d2e8:	cbnz	w12, e034 <grub_mod_fini+0xdd0c>
    d2ec:	mov	x19, x23
    d2f0:	mov	w26, #0x0                   	// #0
    d2f4:	mov	x27, #0x0                   	// #0
    d2f8:	ldrb	w0, [x19, #48]
    d2fc:	cmp	w0, #0x11
    d300:	b.eq	dab4 <grub_mod_fini+0xd78c>  // b.none
    d304:	cmn	w21, #0x1
    d308:	ldr	w2, [x20, #128]
    d30c:	cset	w0, eq  // eq = none
    d310:	add	w9, w0, #0xa
    d314:	cmp	w2, #0xf
    d318:	b.eq	dc34 <grub_mod_fini+0xd90c>  // b.none
    d31c:	sbfiz	x3, x2, #6, #32
    d320:	sxtw	x1, w2
    d324:	ldr	x0, [x20, #112]
    d328:	add	x8, x3, #0x8
    d32c:	add	x5, x3, #0x30
    d330:	add	w3, w2, #0x1
    d334:	lsl	x1, x1, #6
    d338:	add	x5, x0, x5
    d33c:	add	x2, x0, x1
    d340:	add	x1, x1, #0x20
    d344:	str	w3, [x20, #128]
    d348:	add	x1, x0, x1
    d34c:	mov	w10, #0xffffffff            	// #-1
    d350:	add	x8, x0, x8
    d354:	stp	xzr, x19, [x2, #8]
    d358:	str	xzr, [x2, #24]
    d35c:	strb	w9, [x5, #8]
    d360:	ldrb	w3, [x1, #26]
    d364:	and	w3, w3, #0xfffffff3
    d368:	strb	w3, [x1, #26]
    d36c:	stp	xzr, xzr, [x2, #32]
    d370:	str	w10, [x2, #64]
    d374:	str	x8, [x19]
    d378:	cbz	x8, d9a0 <grub_mod_fini+0xd678>
    d37c:	add	w25, w26, #0x2
    d380:	mov	x26, x8
    d384:	cmp	w25, w21
    d388:	b.gt	db1c <grub_mod_fini+0xd7f4>
    d38c:	ldr	w1, [x20, #128]
    d390:	mov	x9, x19
    d394:	add	x10, sp, #0x100
    d398:	mov	w11, #0x40                  	// #64
    d39c:	cmp	w1, #0xf
    d3a0:	b.eq	d430 <grub_mod_fini+0xd108>  // b.none
    d3a4:	nop
    d3a8:	mov	x0, #0x8                   	// #8
    d3ac:	add	w2, w1, #0x1
    d3b0:	smaddl	x19, w1, w11, x0
    d3b4:	ldr	x0, [x20, #112]
    d3b8:	sbfiz	x1, x1, #6, #32
    d3bc:	add	x12, x0, x1
    d3c0:	str	w2, [x20, #128]
    d3c4:	add	x1, x1, #0x20
    d3c8:	add	x19, x0, x19
    d3cc:	add	x1, x0, x1
    d3d0:	mov	w13, #0xffffffff            	// #-1
    d3d4:	stp	xzr, xzr, [x12, #8]
    d3d8:	str	xzr, [x12, #24]
    d3dc:	ldp	x2, x3, [x9, #40]
    d3e0:	stp	x2, x3, [x12, #48]
    d3e4:	ldrb	w0, [x1, #26]
    d3e8:	and	w0, w0, #0xfffffff3
    d3ec:	strb	w0, [x1, #26]
    d3f0:	stp	xzr, xzr, [x12, #32]
    d3f4:	str	w13, [x12, #64]
    d3f8:	str	x19, [x10]
    d3fc:	cbz	x19, d768 <grub_mod_fini+0xd440>
    d400:	str	x8, [x12, #8]
    d404:	ldr	x8, [x10]
    d408:	ldrb	w0, [x8, #50]
    d40c:	orr	w0, w0, #0x4
    d410:	strb	w0, [x8, #50]
    d414:	ldr	x0, [x9, #8]
    d418:	cbz	x0, d740 <grub_mod_fini+0xd418>
    d41c:	add	x10, x8, #0x8
    d420:	mov	x9, x0
    d424:	ldr	w1, [x20, #128]
    d428:	cmp	w1, #0xf
    d42c:	b.ne	d3a8 <grub_mod_fini+0xd080>  // b.any
    d430:	mov	x0, #0x3c8                 	// #968
    d434:	stp	x9, x8, [sp, #104]
    d438:	str	x10, [sp, #120]
    d43c:	bl	0 <grub_malloc>
    d440:	mov	w11, #0x40                  	// #64
    d444:	ldp	x9, x8, [sp, #104]
    d448:	ldr	x10, [sp, #120]
    d44c:	cbz	x0, daa8 <grub_mod_fini+0xd780>
    d450:	ldr	x1, [x20, #112]
    d454:	str	x1, [x0]
    d458:	mov	x19, #0x8                   	// #8
    d45c:	mov	w2, #0x1                   	// #1
    d460:	mov	w1, #0x0                   	// #0
    d464:	str	x0, [x20, #112]
    d468:	b	d3b8 <grub_mod_fini+0xd090>
    d46c:	cmp	w19, #0x9
    d470:	b.ne	d68c <grub_mod_fini+0xd364>  // b.any
    d474:	tbnz	w24, #17, d1f0 <grub_mod_fini+0xcec8>
    d478:	ldr	x1, [sp, #136]
    d47c:	mov	w0, #0x10                  	// #16
    d480:	mov	x23, #0x0                   	// #0
    d484:	str	w0, [x1]
    d488:	b	d1b4 <grub_mod_fini+0xce8c>
    d48c:	cmp	w19, #0x4
    d490:	b.eq	e328 <grub_mod_fini+0xe000>  // b.none
    d494:	cmp	w19, #0x5
    d498:	b.ne	d6ac <grub_mod_fini+0xd384>  // b.any
    d49c:	ldr	w0, [x20, #128]
    d4a0:	cmp	w0, #0xf
    d4a4:	b.eq	e5e8 <grub_mod_fini+0xe2c0>  // b.none
    d4a8:	mov	x23, #0x8                   	// #8
    d4ac:	mov	w2, #0x40                  	// #64
    d4b0:	add	w1, w0, #0x1
    d4b4:	smaddl	x2, w0, w2, x23
    d4b8:	ldr	x23, [x20, #112]
    d4bc:	sbfiz	x0, x0, #6, #32
    d4c0:	str	w1, [x20, #128]
    d4c4:	add	x1, x23, x0
    d4c8:	add	x0, x0, #0x20
    d4cc:	mov	w4, #0xffffffff            	// #-1
    d4d0:	add	x0, x23, x0
    d4d4:	adds	x23, x23, x2
    d4d8:	stp	xzr, xzr, [x1, #8]
    d4dc:	str	xzr, [x1, #24]
    d4e0:	ldp	x2, x3, [x22]
    d4e4:	stp	x2, x3, [x1, #48]
    d4e8:	ldrb	w2, [x0, #26]
    d4ec:	and	w2, w2, #0xfffffff3
    d4f0:	strb	w2, [x0, #26]
    d4f4:	stp	xzr, xzr, [x1, #32]
    d4f8:	str	w4, [x1, #64]
    d4fc:	b.eq	d978 <grub_mod_fini+0xd650>  // b.none
    d500:	ldr	w0, [x20, #164]
    d504:	cmp	w0, #0x1
    d508:	b.le	d25c <grub_mod_fini+0xcf34>
    d50c:	ldrb	w0, [x20, #160]
    d510:	orr	w0, w0, #0x2
    d514:	strb	w0, [x20, #160]
    d518:	b	d25c <grub_mod_fini+0xcf34>
    d51c:	cmp	w19, #0x14
    d520:	b.ne	d68c <grub_mod_fini+0xd364>  // b.any
    d524:	mov	x0, #0x20                  	// #32
    d528:	stp	x25, x26, [sp, #64]
    d52c:	str	wzr, [sp, #172]
    d530:	bl	0 <grub_zalloc>
    d534:	mov	x25, x0
    d538:	mov	x0, #0x38                  	// #56
    d53c:	bl	0 <grub_zalloc>
    d540:	mov	x19, x0
    d544:	cmp	x25, #0x0
    d548:	cset	w0, eq  // eq = none
    d54c:	cmp	x19, #0x0
    d550:	csinc	w0, w0, wzr, ne  // ne = any
    d554:	cbnz	w0, e5c0 <grub_mod_fini+0xe298>
    d558:	mov	x1, x28
    d55c:	mov	x2, x24
    d560:	mov	x0, x22
    d564:	bl	1240 <grub_mod_fini+0xf18>
    d568:	ldrb	w1, [x22, #8]
    d56c:	mov	w27, w0
    d570:	cmp	w1, #0x2
    d574:	b.eq	e974 <grub_mod_fini+0xe64c>  // b.none
    d578:	str	wzr, [sp, #120]
    d57c:	cmp	w1, #0x19
    d580:	b.eq	e53c <grub_mod_fini+0xe214>  // b.none
    d584:	cmp	w1, #0x15
    d588:	b.eq	e530 <grub_mod_fini+0xe208>  // b.none
    d58c:	add	x23, sp, #0xe0
    d590:	mov	w5, #0x1                   	// #1
    d594:	mov	w21, #0x3                   	// #3
    d598:	str	wzr, [sp, #104]
    d59c:	str	wzr, [sp, #112]
    d5a0:	mov	w3, w27
    d5a4:	mov	x4, x24
    d5a8:	mov	x2, x22
    d5ac:	mov	x1, x28
    d5b0:	add	x0, sp, #0xb0
    d5b4:	str	w21, [sp, #176]
    d5b8:	str	x23, [sp, #184]
    d5bc:	bl	2b18 <grub_mod_fini+0x27f0>
    d5c0:	cbnz	w0, e74c <grub_mod_fini+0xe424>
    d5c4:	mov	x1, x28
    d5c8:	mov	x2, x24
    d5cc:	mov	x0, x22
    d5d0:	bl	1240 <grub_mod_fini+0xf18>
    d5d4:	ldr	w1, [sp, #176]
    d5d8:	mov	w27, w0
    d5dc:	sub	w0, w1, #0x2
    d5e0:	tst	w0, #0xfffffffd
    d5e4:	b.eq	d5fc <grub_mod_fini+0xd2d4>  // b.none
    d5e8:	ldrb	w0, [x22, #8]
    d5ec:	cmp	w0, #0x2
    d5f0:	b.eq	e660 <grub_mod_fini+0xe338>  // b.none
    d5f4:	cmp	w0, #0x16
    d5f8:	b.eq	e7cc <grub_mod_fini+0xe4a4>  // b.none
    d5fc:	cmp	w1, #0x2
    d600:	b.eq	e3ec <grub_mod_fini+0xe0c4>  // b.none
    d604:	b.hi	e160 <grub_mod_fini+0xde38>  // b.pmore
    d608:	cbz	w1, e670 <grub_mod_fini+0xe348>
    d60c:	ldr	w1, [x19, #36]
    d610:	ldr	w2, [sp, #104]
    d614:	ldr	x0, [x19]
    d618:	cmp	w1, w2
    d61c:	b.eq	e630 <grub_mod_fini+0xe308>  // b.none
    d620:	add	w2, w1, #0x1
    d624:	str	w2, [x19, #36]
    d628:	ldr	w2, [sp, #184]
    d62c:	str	w2, [x0, w1, sxtw #2]
    d630:	ldrb	w0, [x22, #8]
    d634:	cmp	w0, #0x2
    d638:	b.eq	e660 <grub_mod_fini+0xe338>  // b.none
    d63c:	cmp	w0, #0x15
    d640:	b.eq	ea78 <grub_mod_fini+0xe750>  // b.none
    d644:	mov	w5, #0x0                   	// #0
    d648:	b	d5a0 <grub_mod_fini+0xd278>
    d64c:	cmp	w19, #0x23
    d650:	b.hi	d728 <grub_mod_fini+0xd400>  // b.pmore
    d654:	adrp	x2, 0 <grub_mod_init-0x288>
    d658:	adrp	x0, 0 <grub_mod_init-0x288>
    d65c:	ldr	x1, [x28, #80]
    d660:	cset	w4, eq  // eq = none
    d664:	ldr	x2, [x2]
    d668:	ldr	x3, [x0]
    d66c:	mov	x0, x20
    d670:	bl	7f10 <grub_mod_fini+0x7be8>
    d674:	mov	x23, x0
    d678:	ldr	x1, [sp, #136]
    d67c:	ldr	w1, [x1]
    d680:	cmp	w1, #0x0
    d684:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    d688:	b.ne	d25c <grub_mod_fini+0xcf34>  // b.any
    d68c:	mov	x23, #0x0                   	// #0
    d690:	mov	x0, x23
    d694:	ldp	x19, x20, [sp, #16]
    d698:	ldp	x21, x22, [sp, #32]
    d69c:	ldp	x23, x24, [sp, #48]
    d6a0:	ldp	x27, x28, [sp, #80]
    d6a4:	ldp	x29, x30, [sp], #288
    d6a8:	ret
    d6ac:	cmp	w19, #0x1
    d6b0:	b.ne	d68c <grub_mod_fini+0xd364>  // b.any
    d6b4:	ldr	w0, [x20, #128]
    d6b8:	cmp	w0, #0xf
    d6bc:	b.eq	e598 <grub_mod_fini+0xe270>  // b.none
    d6c0:	mov	x23, #0x8                   	// #8
    d6c4:	mov	w2, #0x40                  	// #64
    d6c8:	add	w19, w0, #0x1
    d6cc:	smaddl	x2, w0, w2, x23
    d6d0:	ldr	x23, [x20, #112]
    d6d4:	sbfiz	x0, x0, #6, #32
    d6d8:	add	x1, x23, x0
    d6dc:	str	w19, [x20, #128]
    d6e0:	add	x0, x0, #0x20
    d6e4:	mov	w19, #0xffffffff            	// #-1
    d6e8:	add	x0, x23, x0
    d6ec:	adds	x23, x23, x2
    d6f0:	stp	xzr, xzr, [x1, #8]
    d6f4:	str	xzr, [x1, #24]
    d6f8:	ldp	x2, x3, [x22]
    d6fc:	stp	x2, x3, [x1, #48]
    d700:	ldrb	w2, [x0, #26]
    d704:	and	w2, w2, #0xfffffff3
    d708:	strb	w2, [x0, #26]
    d70c:	stp	xzr, xzr, [x1, #32]
    d710:	str	w19, [x1, #64]
    d714:	b.eq	d978 <grub_mod_fini+0xd650>  // b.none
    d718:	ldr	w0, [x20, #164]
    d71c:	cmp	w0, #0x1
    d720:	b.gt	d868 <grub_mod_fini+0xd540>
    d724:	b	d25c <grub_mod_fini+0xcf34>
    d728:	cmp	w19, #0x24
    d72c:	b.ne	d68c <grub_mod_fini+0xd364>  // b.any
    d730:	mov	w0, #0x5                   	// #5
    d734:	mov	x23, #0x0                   	// #0
    d738:	str	w0, [x5]
    d73c:	b	d1b4 <grub_mod_fini+0xce8c>
    d740:	ldr	x1, [x9, #16]
    d744:	cmp	x1, #0x0
    d748:	ccmp	x1, x0, #0x4, ne  // ne = any
    d74c:	b.ne	d98c <grub_mod_fini+0xd664>  // b.any
    d750:	ldr	x1, [x9]
    d754:	mov	x0, x9
    d758:	ldr	x8, [x8]
    d75c:	mov	x9, x1
    d760:	cbnz	x1, d740 <grub_mod_fini+0xd418>
    d764:	ldr	x19, [sp, #256]
    d768:	ldr	w1, [x20, #128]
    d76c:	cmp	w1, #0xf
    d770:	b.eq	d9c0 <grub_mod_fini+0xd698>  // b.none
    d774:	sbfiz	x0, x1, #6, #32
    d778:	add	w9, w1, #0x1
    d77c:	add	x3, x0, #0x8
    d780:	add	x2, x0, #0x30
    d784:	ldr	x0, [x20, #112]
    d788:	sxtw	x1, w1
    d78c:	lsl	x1, x1, #6
    d790:	add	x8, x0, x2
    d794:	add	x2, x0, x1
    d798:	add	x1, x1, #0x20
    d79c:	str	w9, [x20, #128]
    d7a0:	add	x1, x0, x1
    d7a4:	mov	w10, #0x10                  	// #16
    d7a8:	mov	w9, #0xffffffff            	// #-1
    d7ac:	stp	xzr, x26, [x2, #8]
    d7b0:	add	x3, x0, x3
    d7b4:	str	x19, [x2, #24]
    d7b8:	strb	w10, [x8, #8]
    d7bc:	ldrb	w8, [x1, #26]
    d7c0:	and	w8, w8, #0xfffffff3
    d7c4:	strb	w8, [x1, #26]
    d7c8:	stp	xzr, xzr, [x2, #32]
    d7cc:	str	w9, [x2, #64]
    d7d0:	str	x3, [x26]
    d7d4:	cbz	x19, d9a0 <grub_mod_fini+0xd678>
    d7d8:	str	x3, [x19]
    d7dc:	cbz	x3, d9a0 <grub_mod_fini+0xd678>
    d7e0:	ldr	w8, [x20, #128]
    d7e4:	cmp	w8, #0xf
    d7e8:	b.eq	d9ec <grub_mod_fini+0xd6c4>  // b.none
    d7ec:	sbfiz	x5, x8, #6, #32
    d7f0:	sxtw	x1, w8
    d7f4:	add	x9, x5, #0x30
    d7f8:	add	w8, w8, #0x1
    d7fc:	add	x5, x5, #0x8
    d800:	lsl	x1, x1, #6
    d804:	add	x10, x0, x9
    d808:	add	x9, x0, x1
    d80c:	add	x1, x1, #0x20
    d810:	str	w8, [x20, #128]
    d814:	add	x1, x0, x1
    d818:	mov	w11, #0xa                   	// #10
    d81c:	mov	w8, #0xffffffff            	// #-1
    d820:	stp	xzr, x3, [x9, #8]
    d824:	add	x26, x0, x5
    d828:	add	w25, w25, #0x1
    d82c:	str	xzr, [x9, #24]
    d830:	cmp	w25, w21
    d834:	strb	w11, [x10, #8]
    d838:	ldrb	w3, [x1, #26]
    d83c:	and	w3, w3, #0xfffffff3
    d840:	strb	w3, [x1, #26]
    d844:	stp	xzr, xzr, [x9, #32]
    d848:	str	w8, [x9, #64]
    d84c:	str	x26, [x2, #8]
    d850:	b.gt	db1c <grub_mod_fini+0xd7f4>
    d854:	ldr	x8, [x19]
    d858:	b	d38c <grub_mod_fini+0xd064>
    d85c:	str	x0, [x21]
    d860:	cbz	x0, d978 <grub_mod_fini+0xd650>
    d864:	mov	x23, x0
    d868:	ldr	w0, [x28, #56]
    d86c:	ldr	w1, [x28, #72]
    d870:	cmp	w1, w0
    d874:	b.le	d25c <grub_mod_fini+0xcf34>
    d878:	ldr	w1, [x28, #44]
    d87c:	cmp	w0, w1
    d880:	b.eq	d25c <grub_mod_fini+0xcf34>  // b.none
    d884:	ldr	x1, [x28, #16]
    d888:	ldr	w0, [x1, w0, sxtw #2]
    d88c:	cmn	w0, #0x1
    d890:	b.ne	d25c <grub_mod_fini+0xcf34>  // b.any
    d894:	mov	x1, x28
    d898:	mov	x2, x24
    d89c:	mov	x0, x22
    d8a0:	bl	24a8 <grub_mod_fini+0x2180>
    d8a4:	ldr	w1, [x28, #56]
    d8a8:	add	w1, w1, w0
    d8ac:	str	w1, [x28, #56]
    d8b0:	ldr	w0, [x20, #128]
    d8b4:	cmp	w0, #0xf
    d8b8:	b.eq	e71c <grub_mod_fini+0xe3f4>  // b.none
    d8bc:	mov	x2, #0x8                   	// #8
    d8c0:	mov	w21, #0x40                  	// #64
    d8c4:	add	w1, w0, #0x1
    d8c8:	smaddl	x21, w0, w21, x2
    d8cc:	ldr	x2, [x20, #112]
    d8d0:	sbfiz	x0, x0, #6, #32
    d8d4:	str	w1, [x20, #128]
    d8d8:	add	x1, x2, x0
    d8dc:	add	x0, x0, #0x20
    d8e0:	add	x21, x2, x21
    d8e4:	add	x0, x2, x0
    d8e8:	stp	xzr, xzr, [x1, #8]
    d8ec:	str	xzr, [x1, #24]
    d8f0:	ldp	x2, x3, [x22]
    d8f4:	stp	x2, x3, [x1, #48]
    d8f8:	ldrb	w2, [x0, #26]
    d8fc:	and	w2, w2, #0xfffffff3
    d900:	strb	w2, [x0, #26]
    d904:	stp	xzr, xzr, [x1, #32]
    d908:	str	w19, [x1, #64]
    d90c:	ldr	w3, [x20, #128]
    d910:	cmp	w3, #0xf
    d914:	b.eq	e6f0 <grub_mod_fini+0xe3c8>  // b.none
    d918:	sbfiz	x2, x3, #6, #32
    d91c:	sxtw	x1, w3
    d920:	ldr	x0, [x20, #112]
    d924:	add	x5, x2, #0x8
    d928:	add	w4, w3, #0x1
    d92c:	add	x2, x2, #0x30
    d930:	lsl	x1, x1, #6
    d934:	add	x3, x0, x2
    d938:	add	x2, x0, x1
    d93c:	add	x1, x1, #0x20
    d940:	str	w4, [x20, #128]
    d944:	add	x1, x0, x1
    d948:	mov	w4, #0x10                  	// #16
    d94c:	add	x0, x0, x5
    d950:	stp	xzr, x23, [x2, #8]
    d954:	str	x21, [x2, #24]
    d958:	strb	w4, [x3, #8]
    d95c:	ldrb	w3, [x1, #26]
    d960:	and	w3, w3, #0xfffffff3
    d964:	strb	w3, [x1, #26]
    d968:	stp	xzr, xzr, [x2, #32]
    d96c:	str	w19, [x2, #64]
    d970:	str	x0, [x23]
    d974:	cbnz	x21, d85c <grub_mod_fini+0xd534>
    d978:	ldr	x1, [sp, #136]
    d97c:	mov	w0, #0xc                   	// #12
    d980:	mov	x23, #0x0                   	// #0
    d984:	str	w0, [x1]
    d988:	b	d1b4 <grub_mod_fini+0xce8c>
    d98c:	mov	x0, x1
    d990:	add	x10, x8, #0x10
    d994:	mov	x9, x0
    d998:	b	d424 <grub_mod_fini+0xd0fc>
    d99c:	str	xzr, [x10]
    d9a0:	ldr	x1, [sp, #136]
    d9a4:	mov	w0, #0xc                   	// #12
    d9a8:	str	w0, [x1]
    d9ac:	mov	x0, x23
    d9b0:	mov	x23, #0x0                   	// #0
    d9b4:	bl	3e18 <grub_mod_fini+0x3af0>
    d9b8:	ldp	x25, x26, [sp, #64]
    d9bc:	b	d1b4 <grub_mod_fini+0xce8c>
    d9c0:	mov	x0, #0x3c8                 	// #968
    d9c4:	bl	0 <grub_malloc>
    d9c8:	cbz	x0, d9a0 <grub_mod_fini+0xd678>
    d9cc:	ldr	x1, [x20, #112]
    d9d0:	str	x1, [x0]
    d9d4:	mov	x2, #0x30                  	// #48
    d9d8:	mov	x3, #0x8                   	// #8
    d9dc:	mov	w9, #0x1                   	// #1
    d9e0:	mov	x1, #0x0                   	// #0
    d9e4:	str	x0, [x20, #112]
    d9e8:	b	d78c <grub_mod_fini+0xd464>
    d9ec:	mov	x0, #0x3c8                 	// #968
    d9f0:	stp	x2, x3, [sp, #104]
    d9f4:	bl	0 <grub_malloc>
    d9f8:	cbz	x0, d9a0 <grub_mod_fini+0xd678>
    d9fc:	ldr	x1, [x20, #112]
    da00:	str	x1, [x0]
    da04:	mov	w8, #0x1                   	// #1
    da08:	mov	x5, #0x8                   	// #8
    da0c:	mov	x9, #0x30                  	// #48
    da10:	mov	x1, #0x0                   	// #0
    da14:	str	x0, [x20, #112]
    da18:	ldp	x2, x3, [sp, #104]
    da1c:	b	d800 <grub_mod_fini+0xd4d8>
    da20:	mov	w21, #0xffffffff            	// #-1
    da24:	mov	w12, #0x8030                	// #32816
    da28:	mov	x2, x24
    da2c:	mov	x1, x28
    da30:	mov	x0, x22
    da34:	bl	24a8 <grub_mod_fini+0x2180>
    da38:	ldr	w2, [x28, #56]
    da3c:	ldrb	w1, [x22, #8]
    da40:	add	w2, w2, w0
    da44:	ldrb	w0, [x22]
    da48:	str	w2, [x28, #56]
    da4c:	cmp	w1, #0x2
    da50:	b.eq	dc00 <grub_mod_fini+0xd8d8>  // b.none
    da54:	cmp	w1, #0x18
    da58:	b.eq	dc78 <grub_mod_fini+0xd950>  // b.none
    da5c:	cmp	w0, #0x2c
    da60:	b.eq	dd08 <grub_mod_fini+0xd9e0>  // b.none
    da64:	cmp	w1, #0x1
    da68:	b.eq	da74 <grub_mod_fini+0xd74c>  // b.none
    da6c:	mov	w21, #0xfffffffe            	// #-2
    da70:	b	da28 <grub_mod_fini+0xd700>
    da74:	sub	w1, w0, #0x30
    da78:	and	w2, w1, #0xff
    da7c:	cmp	w2, #0x9
    da80:	ccmn	w21, #0x2, #0x4, ls  // ls = plast
    da84:	b.eq	da6c <grub_mod_fini+0xd744>  // b.none
    da88:	add	w2, w21, w21, lsl #2
    da8c:	cmn	w21, #0x1
    da90:	b.eq	dd00 <grub_mod_fini+0xd9d8>  // b.none
    da94:	add	w21, w0, w2, lsl #1
    da98:	cmp	w21, w12
    da9c:	csel	w21, w21, w12, le
    daa0:	sub	w21, w21, #0x30
    daa4:	b	da28 <grub_mod_fini+0xd700>
    daa8:	mov	x19, #0x0                   	// #0
    daac:	str	xzr, [x10]
    dab0:	b	d768 <grub_mod_fini+0xd440>
    dab4:	ldr	w3, [x19, #40]
    dab8:	mov	x0, x19
    dabc:	nop
    dac0:	mov	x1, x0
    dac4:	ldr	x0, [x0, #8]
    dac8:	cbnz	x0, dac0 <grub_mod_fini+0xd798>
    dacc:	ldr	x0, [x1, #16]
    dad0:	cbnz	x0, dac0 <grub_mod_fini+0xd798>
    dad4:	b	daf4 <grub_mod_fini+0xd7cc>
    dad8:	ldr	x2, [x1]
    dadc:	cbz	x2, d304 <grub_mod_fini+0xcfdc>
    dae0:	ldr	x0, [x2, #16]
    dae4:	cmp	x0, #0x0
    dae8:	ccmp	x1, x0, #0x4, ne  // ne = any
    daec:	mov	x1, x2
    daf0:	b.ne	dac0 <grub_mod_fini+0xd798>  // b.any
    daf4:	ldrb	w0, [x1, #48]
    daf8:	cmp	w0, #0x11
    dafc:	b.ne	dad8 <grub_mod_fini+0xd7b0>  // b.any
    db00:	ldr	w0, [x1, #40]
    db04:	cmp	w3, w0
    db08:	b.ne	dad8 <grub_mod_fini+0xd7b0>  // b.any
    db0c:	ldrb	w0, [x1, #50]
    db10:	orr	w0, w0, #0x8
    db14:	strb	w0, [x1, #50]
    db18:	b	dad8 <grub_mod_fini+0xd7b0>
    db1c:	cbz	x27, dc70 <grub_mod_fini+0xd948>
    db20:	ldr	w1, [x20, #128]
    db24:	cmp	w1, #0xf
    db28:	b.eq	e214 <grub_mod_fini+0xdeec>  // b.none
    db2c:	sbfiz	x23, x1, #6, #32
    db30:	add	w6, w1, #0x1
    db34:	add	x3, x23, #0x30
    db38:	sxtw	x1, w1
    db3c:	add	x23, x23, #0x8
    db40:	lsl	x1, x1, #6
    db44:	add	x3, x0, x3
    db48:	add	x2, x0, x1
    db4c:	add	x1, x1, #0x20
    db50:	str	w6, [x20, #128]
    db54:	add	x1, x0, x1
    db58:	mov	w8, #0x10                  	// #16
    db5c:	add	x23, x0, x23
    db60:	stp	xzr, x27, [x2, #8]
    db64:	mov	w6, #0xffffffff            	// #-1
    db68:	str	x26, [x2, #24]
    db6c:	strb	w8, [x3, #8]
    db70:	ldrb	w0, [x1, #26]
    db74:	and	w0, w0, #0xfffffff3
    db78:	strb	w0, [x1, #26]
    db7c:	stp	xzr, xzr, [x2, #32]
    db80:	str	w6, [x2, #64]
    db84:	str	x23, [x27]
    db88:	str	x23, [x26]
    db8c:	nop
    db90:	ldrb	w1, [x22, #8]
    db94:	ldr	x0, [sp, #128]
    db98:	cmp	w1, #0xb
    db9c:	cset	w2, eq  // eq = none
    dba0:	cmp	w1, #0x17
    dba4:	cset	w3, eq  // eq = none
    dba8:	cbz	x0, dbb8 <grub_mod_fini+0xd890>
    dbac:	cmp	w3, #0x0
    dbb0:	ccmp	w2, #0x0, #0x0, eq  // eq = none
    dbb4:	b.ne	ddec <grub_mod_fini+0xdac4>  // b.any
    dbb8:	subs	w0, w1, #0x12
    dbbc:	cset	w12, eq  // eq = none
    dbc0:	cmp	w3, #0x0
    dbc4:	ccmp	w2, #0x0, #0x0, eq  // eq = none
    dbc8:	and	w0, w0, #0xff
    dbcc:	ccmp	w0, #0x1, #0x0, eq  // eq = none
    dbd0:	b.hi	e110 <grub_mod_fini+0xdde8>  // b.pmore
    dbd4:	ldr	w9, [x28, #56]
    dbd8:	b	d2b0 <grub_mod_fini+0xcf88>
    dbdc:	ldr	x0, [sp, #136]
    dbe0:	ldr	w0, [x0]
    dbe4:	cbnz	w0, dc28 <grub_mod_fini+0xd900>
    dbe8:	mov	x23, #0x0                   	// #0
    dbec:	b	db90 <grub_mod_fini+0xd868>
    dbf0:	cmn	w21, #0x2
    dbf4:	b.eq	dc00 <grub_mod_fini+0xd8d8>  // b.none
    dbf8:	cmp	w1, #0x1
    dbfc:	b.eq	ef40 <grub_mod_fini+0xec18>  // b.none
    dc00:	ldr	x0, [sp, #144]
    dc04:	cbz	x0, dce0 <grub_mod_fini+0xd9b8>
    dc08:	str	w9, [x28, #56]
    dc0c:	mov	w0, #0x1                   	// #1
    dc10:	stp	x10, x11, [x22]
    dc14:	strb	w0, [x22, #8]
    dc18:	ldr	x0, [sp, #136]
    dc1c:	ldr	w0, [x0]
    dc20:	cbz	w0, db90 <grub_mod_fini+0xd868>
    dc24:	cbnz	x23, db90 <grub_mod_fini+0xd868>
    dc28:	ldp	x25, x26, [sp, #64]
    dc2c:	mov	x23, #0x0                   	// #0
    dc30:	b	d690 <grub_mod_fini+0xd368>
    dc34:	mov	x0, #0x3c8                 	// #968
    dc38:	str	w9, [sp, #104]
    dc3c:	bl	0 <grub_malloc>
    dc40:	cbz	x0, d9a0 <grub_mod_fini+0xd678>
    dc44:	ldr	x1, [x20, #112]
    dc48:	str	x1, [x0]
    dc4c:	ldr	w9, [sp, #104]
    dc50:	mov	w3, #0x1                   	// #1
    dc54:	mov	x5, #0x30                  	// #48
    dc58:	mov	x8, #0x8                   	// #8
    dc5c:	mov	x1, #0x0                   	// #0
    dc60:	str	x0, [x20, #112]
    dc64:	b	d334 <grub_mod_fini+0xd00c>
    dc68:	mov	x26, x27
    dc6c:	nop
    dc70:	mov	x23, x26
    dc74:	b	db90 <grub_mod_fini+0xd868>
    dc78:	cmn	w21, #0x1
    dc7c:	b.eq	dce8 <grub_mod_fini+0xd9c0>  // b.none
    dc80:	cmn	w21, #0x2
    dc84:	mov	w26, w21
    dc88:	b.eq	e654 <grub_mod_fini+0xe32c>  // b.none
    dc8c:	mov	w0, #0x7fff                	// #32767
    dc90:	cmp	w21, w0
    dc94:	cset	x0, gt
    dc98:	cbnz	x0, ddd8 <grub_mod_fini+0xdab0>
    dc9c:	mov	x1, x28
    dca0:	mov	x2, x24
    dca4:	mov	x0, x22
    dca8:	bl	24a8 <grub_mod_fini+0x2180>
    dcac:	ldr	w1, [x28, #56]
    dcb0:	add	w1, w1, w0
    dcb4:	str	w1, [x28, #56]
    dcb8:	cbz	x23, dbdc <grub_mod_fini+0xd8b4>
    dcbc:	orr	w0, w26, w21
    dcc0:	cbnz	w0, de28 <grub_mod_fini+0xdb00>
    dcc4:	mov	x0, x23
    dcc8:	bl	3e18 <grub_mod_fini+0x3af0>
    dccc:	ldr	x0, [sp, #136]
    dcd0:	ldr	w0, [x0]
    dcd4:	cbnz	w0, d9ac <grub_mod_fini+0xd684>
    dcd8:	mov	x23, #0x0                   	// #0
    dcdc:	b	db90 <grub_mod_fini+0xd868>
    dce0:	cmp	w1, #0x2
    dce4:	b.eq	e3d8 <grub_mod_fini+0xe0b0>  // b.none
    dce8:	ldr	x1, [sp, #136]
    dcec:	mov	w0, #0xa                   	// #10
    dcf0:	str	w0, [x1]
    dcf4:	cbnz	x23, d9ac <grub_mod_fini+0xd684>
    dcf8:	ldp	x25, x26, [sp, #64]
    dcfc:	b	dc2c <grub_mod_fini+0xd904>
    dd00:	mov	w21, w1
    dd04:	b	da28 <grub_mod_fini+0xd700>
    dd08:	cmn	w21, #0x1
    dd0c:	b.ne	dbf0 <grub_mod_fini+0xd8c8>  // b.any
    dd10:	cmp	w1, #0x1
    dd14:	b.ne	dce8 <grub_mod_fini+0xd9c0>  // b.any
    dd18:	mov	w26, #0x0                   	// #0
    dd1c:	mov	w21, #0xffffffff            	// #-1
    dd20:	mov	w12, #0x8030                	// #32816
    dd24:	nop
    dd28:	mov	x2, x24
    dd2c:	mov	x1, x28
    dd30:	mov	x0, x22
    dd34:	bl	24a8 <grub_mod_fini+0x2180>
    dd38:	ldr	w2, [x28, #56]
    dd3c:	ldrb	w1, [x22, #8]
    dd40:	add	w2, w2, w0
    dd44:	ldrb	w0, [x22]
    dd48:	str	w2, [x28, #56]
    dd4c:	cmp	w1, #0x2
    dd50:	b.eq	e3d0 <grub_mod_fini+0xe0a8>  // b.none
    dd54:	cmp	w0, #0x2c
    dd58:	ccmp	w1, #0x18, #0x4, ne  // ne = any
    dd5c:	b.eq	dda4 <grub_mod_fini+0xda7c>  // b.none
    dd60:	cmp	w1, #0x1
    dd64:	b.eq	dd70 <grub_mod_fini+0xda48>  // b.none
    dd68:	mov	w21, #0xfffffffe            	// #-2
    dd6c:	b	dd28 <grub_mod_fini+0xda00>
    dd70:	sub	w1, w0, #0x30
    dd74:	and	w2, w1, #0xff
    dd78:	cmp	w2, #0x9
    dd7c:	ccmn	w21, #0x2, #0x4, ls  // ls = plast
    dd80:	b.eq	dd68 <grub_mod_fini+0xda40>  // b.none
    dd84:	add	w2, w21, w21, lsl #2
    dd88:	cmn	w21, #0x1
    dd8c:	b.eq	e590 <grub_mod_fini+0xe268>  // b.none
    dd90:	add	w0, w0, w2, lsl #1
    dd94:	cmp	w0, w12
    dd98:	csel	w0, w0, w12, le
    dd9c:	sub	w21, w0, #0x30
    dda0:	b	dd28 <grub_mod_fini+0xda00>
    dda4:	cmn	w21, #0x2
    dda8:	b.eq	e654 <grub_mod_fini+0xe32c>  // b.none
    ddac:	cmp	w26, w21
    ddb0:	ccmn	w21, #0x1, #0x4, gt
    ddb4:	b.ne	dce8 <grub_mod_fini+0xd9c0>  // b.any
    ddb8:	cmp	w1, #0x18
    ddbc:	b.ne	dce8 <grub_mod_fini+0xd9c0>  // b.any
    ddc0:	cmn	w21, #0x1
    ddc4:	b.ne	dc8c <grub_mod_fini+0xd964>  // b.any
    ddc8:	mov	w0, #0x7fff                	// #32767
    ddcc:	cmp	w26, w0
    ddd0:	cset	x0, gt
    ddd4:	cbz	x0, dc9c <grub_mod_fini+0xd974>
    ddd8:	ldr	x1, [sp, #136]
    dddc:	mov	w0, #0xf                   	// #15
    dde0:	str	w0, [x1]
    dde4:	cbnz	x23, d9ac <grub_mod_fini+0xd684>
    dde8:	b	dcf8 <grub_mod_fini+0xd9d0>
    ddec:	cbz	x23, e200 <grub_mod_fini+0xded8>
    ddf0:	mov	x0, x23
    ddf4:	bl	3e18 <grub_mod_fini+0x3af0>
    ddf8:	ldp	x25, x26, [sp, #64]
    ddfc:	mov	w0, #0xd                   	// #13
    de00:	ldr	x1, [sp, #136]
    de04:	mov	x23, #0x0                   	// #0
    de08:	ldp	x19, x20, [sp, #16]
    de0c:	str	w0, [x1]
    de10:	mov	x0, x23
    de14:	ldp	x21, x22, [sp, #32]
    de18:	ldp	x23, x24, [sp, #48]
    de1c:	ldp	x27, x28, [sp, #80]
    de20:	ldp	x29, x30, [sp], #288
    de24:	ret
    de28:	cmp	w26, #0x0
    de2c:	b.le	ef34 <grub_mod_fini+0xec0c>
    de30:	cmp	w26, #0x1
    de34:	b.eq	ef28 <grub_mod_fini+0xec00>  // b.none
    de38:	ldr	x27, [x23]
    de3c:	mov	x9, x23
    de40:	mov	x19, x23
    de44:	mov	w25, #0x2                   	// #2
    de48:	ldr	w1, [x20, #128]
    de4c:	add	x5, sp, #0x100
    de50:	mov	w8, #0x40                  	// #64
    de54:	cmp	w1, #0xf
    de58:	b.eq	dee8 <grub_mod_fini+0xdbc0>  // b.none
    de5c:	nop
    de60:	mov	x0, #0x8                   	// #8
    de64:	add	w3, w1, #0x1
    de68:	smaddl	x2, w1, w8, x0
    de6c:	ldr	x0, [x20, #112]
    de70:	sbfiz	x1, x1, #6, #32
    de74:	add	x11, x0, x1
    de78:	str	w3, [x20, #128]
    de7c:	add	x1, x1, #0x20
    de80:	mov	w12, #0xffffffff            	// #-1
    de84:	add	x1, x0, x1
    de88:	add	x0, x0, x2
    de8c:	stp	xzr, xzr, [x11, #8]
    de90:	str	xzr, [x11, #24]
    de94:	ldp	x2, x3, [x19, #40]
    de98:	stp	x2, x3, [x11, #48]
    de9c:	ldrb	w2, [x1, #26]
    dea0:	and	w2, w2, #0xfffffff3
    dea4:	strb	w2, [x1, #26]
    dea8:	stp	xzr, xzr, [x11, #32]
    deac:	str	w12, [x11, #64]
    deb0:	str	x0, [x5]
    deb4:	cbz	x0, dfe0 <grub_mod_fini+0xdcb8>
    deb8:	str	x27, [x11, #8]
    debc:	ldr	x27, [x5]
    dec0:	ldrb	w0, [x27, #50]
    dec4:	orr	w0, w0, #0x4
    dec8:	strb	w0, [x27, #50]
    decc:	ldr	x0, [x19, #8]
    ded0:	cbz	x0, df1c <grub_mod_fini+0xdbf4>
    ded4:	add	x5, x27, #0x8
    ded8:	mov	x19, x0
    dedc:	ldr	w1, [x20, #128]
    dee0:	cmp	w1, #0xf
    dee4:	b.ne	de60 <grub_mod_fini+0xdb38>  // b.any
    dee8:	mov	x0, #0x3c8                 	// #968
    deec:	stp	x9, x5, [sp, #104]
    def0:	bl	0 <grub_malloc>
    def4:	mov	w8, #0x40                  	// #64
    def8:	ldp	x9, x5, [sp, #104]
    defc:	cbz	x0, e028 <grub_mod_fini+0xdd00>
    df00:	ldr	x1, [x20, #112]
    df04:	str	x1, [x0]
    df08:	mov	x2, #0x8                   	// #8
    df0c:	mov	w3, #0x1                   	// #1
    df10:	mov	w1, #0x0                   	// #0
    df14:	str	x0, [x20, #112]
    df18:	b	de70 <grub_mod_fini+0xdb48>
    df1c:	ldr	x1, [x19, #16]
    df20:	cmp	x1, #0x0
    df24:	ccmp	x1, x0, #0x4, ne  // ne = any
    df28:	b.ne	dfd0 <grub_mod_fini+0xdca8>  // b.any
    df2c:	ldr	x1, [x19]
    df30:	mov	x0, x19
    df34:	ldr	x27, [x27]
    df38:	mov	x19, x1
    df3c:	cbnz	x1, df1c <grub_mod_fini+0xdbf4>
    df40:	ldr	x19, [sp, #256]
    df44:	ldr	w2, [x20, #128]
    df48:	cmp	w2, #0xf
    df4c:	b.eq	dff0 <grub_mod_fini+0xdcc8>  // b.none
    df50:	sbfiz	x3, x2, #6, #32
    df54:	sxtw	x1, w2
    df58:	ldr	x4, [x20, #112]
    df5c:	add	x8, x3, #0x8
    df60:	add	x5, x3, #0x30
    df64:	add	w3, w2, #0x1
    df68:	lsl	x1, x1, #6
    df6c:	add	x5, x4, x5
    df70:	add	x2, x4, x1
    df74:	add	x1, x1, #0x20
    df78:	str	w3, [x20, #128]
    df7c:	add	x1, x4, x1
    df80:	mov	w0, #0x10                  	// #16
    df84:	mov	w3, #0xffffffff            	// #-1
    df88:	stp	xzr, x9, [x2, #8]
    df8c:	add	x27, x4, x8
    df90:	str	x19, [x2, #24]
    df94:	strb	w0, [x5, #8]
    df98:	ldrb	w0, [x1, #26]
    df9c:	and	w0, w0, #0xfffffff3
    dfa0:	strb	w0, [x1, #26]
    dfa4:	stp	xzr, xzr, [x2, #32]
    dfa8:	str	w3, [x2, #64]
    dfac:	str	x27, [x9]
    dfb0:	cbz	x19, d9a0 <grub_mod_fini+0xd678>
    dfb4:	str	x27, [x19]
    dfb8:	cbz	x27, d9a0 <grub_mod_fini+0xd678>
    dfbc:	add	w25, w25, #0x1
    dfc0:	cmp	w26, w25
    dfc4:	b.lt	e040 <grub_mod_fini+0xdd18>  // b.tstop
    dfc8:	mov	x9, x27
    dfcc:	b	de48 <grub_mod_fini+0xdb20>
    dfd0:	mov	x0, x1
    dfd4:	add	x5, x27, #0x10
    dfd8:	mov	x19, x0
    dfdc:	b	dedc <grub_mod_fini+0xdbb4>
    dfe0:	ldr	w2, [x20, #128]
    dfe4:	mov	x19, #0x0                   	// #0
    dfe8:	cmp	w2, #0xf
    dfec:	b.ne	df50 <grub_mod_fini+0xdc28>  // b.any
    dff0:	mov	x0, #0x3c8                 	// #968
    dff4:	str	x9, [sp, #104]
    dff8:	bl	0 <grub_malloc>
    dffc:	mov	x4, x0
    e000:	cbz	x0, d9a0 <grub_mod_fini+0xd678>
    e004:	ldr	x0, [x20, #112]
    e008:	str	x0, [x4]
    e00c:	mov	w3, #0x1                   	// #1
    e010:	mov	x5, #0x30                  	// #48
    e014:	mov	x8, #0x8                   	// #8
    e018:	mov	x1, #0x0                   	// #0
    e01c:	str	x4, [x20, #112]
    e020:	ldr	x9, [sp, #104]
    e024:	b	df68 <grub_mod_fini+0xdc40>
    e028:	mov	x19, #0x0                   	// #0
    e02c:	str	xzr, [x5]
    e030:	b	df44 <grub_mod_fini+0xdc1c>
    e034:	mov	x27, x23
    e038:	mov	x19, x23
    e03c:	mov	w26, #0x1                   	// #1
    e040:	cmp	w26, w21
    e044:	b.eq	dc68 <grub_mod_fini+0xd940>  // b.none
    e048:	add	x10, sp, #0x100
    e04c:	mov	w25, #0x40                  	// #64
    e050:	ldr	x5, [x19]
    e054:	b	e060 <grub_mod_fini+0xdd38>
    e058:	mov	x19, x0
    e05c:	add	x10, x5, #0x8
    e060:	ldr	w1, [x20, #128]
    e064:	cmp	w1, #0xf
    e068:	b.eq	e130 <grub_mod_fini+0xde08>  // b.none
    e06c:	mov	x0, #0x8                   	// #8
    e070:	add	w2, w1, #0x1
    e074:	smaddl	x8, w1, w25, x0
    e078:	ldr	x0, [x20, #112]
    e07c:	sbfiz	x1, x1, #6, #32
    e080:	add	x3, x0, x1
    e084:	str	w2, [x20, #128]
    e088:	add	x1, x1, #0x20
    e08c:	add	x8, x0, x8
    e090:	add	x2, x0, x1
    e094:	mov	w11, #0xffffffff            	// #-1
    e098:	stp	xzr, xzr, [x3, #8]
    e09c:	str	xzr, [x3, #24]
    e0a0:	ldp	x0, x1, [x19, #40]
    e0a4:	stp	x0, x1, [x3, #48]
    e0a8:	ldrb	w0, [x2, #26]
    e0ac:	and	w0, w0, #0xfffffff3
    e0b0:	strb	w0, [x2, #26]
    e0b4:	stp	xzr, xzr, [x3, #32]
    e0b8:	str	w11, [x3, #64]
    e0bc:	str	x8, [x10]
    e0c0:	cbz	x8, d9a0 <grub_mod_fini+0xd678>
    e0c4:	str	x5, [x3, #8]
    e0c8:	ldr	x5, [x10]
    e0cc:	ldrb	w0, [x5, #50]
    e0d0:	orr	w0, w0, #0x4
    e0d4:	strb	w0, [x5, #50]
    e0d8:	ldr	x0, [x19, #8]
    e0dc:	cbnz	x0, e058 <grub_mod_fini+0xdd30>
    e0e0:	ldr	x1, [x19, #16]
    e0e4:	cmp	x1, #0x0
    e0e8:	ccmp	x1, x0, #0x4, ne  // ne = any
    e0ec:	b.ne	e208 <grub_mod_fini+0xdee0>  // b.any
    e0f0:	ldr	x1, [x19]
    e0f4:	mov	x0, x19
    e0f8:	ldr	x5, [x5]
    e0fc:	mov	x19, x1
    e100:	cbnz	x1, e0e0 <grub_mod_fini+0xddb8>
    e104:	ldr	x19, [sp, #256]
    e108:	cbnz	x19, d2f8 <grub_mod_fini+0xcfd0>
    e10c:	b	d9a0 <grub_mod_fini+0xd678>
    e110:	mov	x0, x23
    e114:	ldp	x19, x20, [sp, #16]
    e118:	ldp	x21, x22, [sp, #32]
    e11c:	ldp	x23, x24, [sp, #48]
    e120:	ldp	x25, x26, [sp, #64]
    e124:	ldp	x27, x28, [sp, #80]
    e128:	ldp	x29, x30, [sp], #288
    e12c:	ret
    e130:	mov	x0, #0x3c8                 	// #968
    e134:	stp	x5, x10, [sp, #104]
    e138:	bl	0 <grub_malloc>
    e13c:	ldp	x5, x10, [sp, #104]
    e140:	cbz	x0, d99c <grub_mod_fini+0xd674>
    e144:	ldr	x1, [x20, #112]
    e148:	str	x1, [x0]
    e14c:	mov	w2, #0x1                   	// #1
    e150:	mov	x8, #0x8                   	// #8
    e154:	mov	w1, #0x0                   	// #0
    e158:	str	x0, [x20, #112]
    e15c:	b	e07c <grub_mod_fini+0xdd54>
    e160:	cmp	w1, #0x3
    e164:	b.eq	e3ec <grub_mod_fini+0xe0c4>  // b.none
    e168:	cmp	w1, #0x4
    e16c:	b.ne	e690 <grub_mod_fini+0xe368>  // b.any
    e170:	ldr	x0, [x28, #80]
    e174:	mov	x1, x25
    e178:	ldr	x5, [sp, #184]
    e17c:	mov	x6, x24
    e180:	add	x4, sp, #0xac
    e184:	add	x3, x19, #0x34
    e188:	add	x2, x19, #0x18
    e18c:	bl	3508 <grub_mod_fini+0x31e0>
    e190:	ldr	x1, [sp, #136]
    e194:	str	w0, [x1]
    e198:	cbz	w0, d630 <grub_mod_fini+0xd308>
    e19c:	mov	x0, x25
    e1a0:	bl	0 <grub_free>
    e1a4:	ldr	x0, [x19]
    e1a8:	bl	0 <grub_free>
    e1ac:	ldr	x0, [x19, #8]
    e1b0:	bl	0 <grub_free>
    e1b4:	ldr	x0, [x19, #16]
    e1b8:	bl	0 <grub_free>
    e1bc:	ldr	x0, [x19, #24]
    e1c0:	bl	0 <grub_free>
    e1c4:	mov	x0, x19
    e1c8:	bl	0 <grub_free>
    e1cc:	ldr	x0, [sp, #136]
    e1d0:	ldr	w0, [x0]
    e1d4:	cbnz	w0, dc28 <grub_mod_fini+0xd900>
    e1d8:	mov	x23, #0x0                   	// #0
    e1dc:	ldp	x25, x26, [sp, #64]
    e1e0:	b	d25c <grub_mod_fini+0xcf34>
    e1e4:	tbnz	w3, #24, ddfc <grub_mod_fini+0xdad4>
    e1e8:	tbnz	w24, #5, ddfc <grub_mod_fini+0xdad4>
    e1ec:	tbnz	w24, #4, e6ac <grub_mod_fini+0xe384>
    e1f0:	cmp	w19, #0x9
    e1f4:	b.ne	d1f0 <grub_mod_fini+0xcec8>  // b.any
    e1f8:	tbnz	w24, #17, d1f0 <grub_mod_fini+0xcec8>
    e1fc:	b	d478 <grub_mod_fini+0xd150>
    e200:	ldp	x25, x26, [sp, #64]
    e204:	b	ddfc <grub_mod_fini+0xdad4>
    e208:	mov	x19, x1
    e20c:	add	x10, x5, #0x10
    e210:	b	e060 <grub_mod_fini+0xdd38>
    e214:	mov	x0, #0x3c8                 	// #968
    e218:	bl	0 <grub_malloc>
    e21c:	cbz	x0, ea08 <grub_mod_fini+0xe6e0>
    e220:	ldr	x1, [x20, #112]
    e224:	str	x1, [x0]
    e228:	mov	x23, #0x8                   	// #8
    e22c:	mov	x3, #0x30                  	// #48
    e230:	mov	w6, #0x1                   	// #1
    e234:	mov	x1, #0x0                   	// #0
    e238:	str	x0, [x20, #112]
    e23c:	b	db40 <grub_mod_fini+0xd818>
    e240:	adrp	x2, 0 <grub_mod_init-0x288>
    e244:	adrp	x0, 0 <grub_mod_init-0x288>
    e248:	cmp	w19, #0x21
    e24c:	ldr	x3, [x2]
    e250:	cset	w4, eq  // eq = none
    e254:	ldr	x2, [x0]
    e258:	mov	x0, x20
    e25c:	ldr	x1, [x28, #80]
    e260:	b	d670 <grub_mod_fini+0xd348>
    e264:	ldr	x19, [x9, #48]
    e268:	orr	x2, x3, #0x800000
    e26c:	mov	x1, x0
    e270:	mov	x0, x22
    e274:	add	x3, x19, #0x1
    e278:	str	x3, [x9, #48]
    e27c:	str	w4, [sp, #104]
    e280:	mov	x21, #0x0                   	// #0
    e284:	bl	24a8 <grub_mod_fini+0x2180>
    e288:	ldr	w1, [x28, #56]
    e28c:	ldrb	w2, [x22, #8]
    e290:	add	w1, w1, w0
    e294:	str	w1, [x28, #56]
    e298:	cmp	w2, #0x9
    e29c:	b.ne	e424 <grub_mod_fini+0xe0fc>  // b.any
    e2a0:	cmp	x19, #0x8
    e2a4:	b.ls	e480 <grub_mod_fini+0xe158>  // b.plast
    e2a8:	ldr	w0, [x20, #128]
    e2ac:	cmp	w0, #0xf
    e2b0:	b.eq	e9b0 <grub_mod_fini+0xe688>  // b.none
    e2b4:	sbfiz	x1, x0, #6, #32
    e2b8:	sxtw	x4, w0
    e2bc:	add	x3, x1, #0x30
    e2c0:	add	x23, x1, #0x8
    e2c4:	ldr	x1, [x20, #112]
    e2c8:	add	w2, w0, #0x1
    e2cc:	lsl	x0, x4, #6
    e2d0:	add	x5, x1, x3
    e2d4:	add	x3, x1, x0
    e2d8:	add	x0, x0, #0x20
    e2dc:	str	w2, [x20, #128]
    e2e0:	add	x0, x1, x0
    e2e4:	mov	w2, #0x11                  	// #17
    e2e8:	mov	w6, #0xffffffff            	// #-1
    e2ec:	stp	xzr, x21, [x3, #8]
    e2f0:	add	x23, x1, x23
    e2f4:	str	xzr, [x3, #24]
    e2f8:	strb	w2, [x5, #8]
    e2fc:	ldrb	w2, [x0, #26]
    e300:	and	w2, w2, #0xfffffff3
    e304:	strb	w2, [x0, #26]
    e308:	stp	xzr, xzr, [x3, #32]
    e30c:	str	w6, [x3, #64]
    e310:	cbz	x21, e318 <grub_mod_fini+0xdff0>
    e314:	str	x23, [x21]
    e318:	cbz	x23, d978 <grub_mod_fini+0xd650>
    e31c:	add	x1, x1, x4, lsl #6
    e320:	str	w19, [x1, #48]
    e324:	b	d25c <grub_mod_fini+0xcf34>
    e328:	ldr	w1, [x2]
    e32c:	mov	w19, #0x1                   	// #1
    e330:	ldr	x0, [x20, #152]
    e334:	lsl	w1, w19, w1
    e338:	sxtw	x1, w1
    e33c:	tst	x1, x0
    e340:	b.eq	e984 <grub_mod_fini+0xe65c>  // b.none
    e344:	ldr	x2, [x20, #144]
    e348:	ldr	w0, [x20, #128]
    e34c:	orr	x1, x2, x1
    e350:	str	x1, [x20, #144]
    e354:	cmp	w0, #0xf
    e358:	b.eq	e9e0 <grub_mod_fini+0xe6b8>  // b.none
    e35c:	mov	x23, #0x8                   	// #8
    e360:	mov	w2, #0x40                  	// #64
    e364:	add	w19, w0, #0x1
    e368:	smaddl	x2, w0, w2, x23
    e36c:	ldr	x23, [x20, #112]
    e370:	sbfiz	x0, x0, #6, #32
    e374:	add	x1, x23, x0
    e378:	str	w19, [x20, #128]
    e37c:	add	x0, x0, #0x20
    e380:	mov	w4, #0xffffffff            	// #-1
    e384:	add	x0, x23, x0
    e388:	adds	x23, x23, x2
    e38c:	stp	xzr, xzr, [x1, #8]
    e390:	str	xzr, [x1, #24]
    e394:	ldp	x2, x3, [x22]
    e398:	stp	x2, x3, [x1, #48]
    e39c:	ldrb	w2, [x0, #26]
    e3a0:	and	w2, w2, #0xfffffff3
    e3a4:	strb	w2, [x0, #26]
    e3a8:	stp	xzr, xzr, [x1, #32]
    e3ac:	str	w4, [x1, #64]
    e3b0:	b.eq	d978 <grub_mod_fini+0xd650>  // b.none
    e3b4:	ldrb	w0, [x20, #160]
    e3b8:	ldr	w1, [x20, #140]
    e3bc:	orr	w0, w0, #0x2
    e3c0:	strb	w0, [x20, #160]
    e3c4:	add	w1, w1, #0x1
    e3c8:	str	w1, [x20, #140]
    e3cc:	b	d25c <grub_mod_fini+0xcf34>
    e3d0:	ldr	x0, [sp, #144]
    e3d4:	cbnz	x0, dc08 <grub_mod_fini+0xd8e0>
    e3d8:	ldr	x1, [sp, #136]
    e3dc:	mov	w0, #0x9                   	// #9
    e3e0:	str	w0, [x1]
    e3e4:	cbnz	x23, d9ac <grub_mod_fini+0xd684>
    e3e8:	b	dcf8 <grub_mod_fini+0xd9d0>
    e3ec:	ldr	x26, [sp, #184]
    e3f0:	mov	x0, x26
    e3f4:	bl	0 <grub_strlen>
    e3f8:	cmp	x0, #0x1
    e3fc:	b.ne	e620 <grub_mod_fini+0xe2f8>  // b.any
    e400:	ldrb	w1, [x26]
    e404:	ubfx	x2, x1, #6, #2
    e408:	lsl	x0, x0, x1
    e40c:	ldr	x1, [x25, x2, lsl #3]
    e410:	orr	x0, x1, x0
    e414:	str	x0, [x25, x2, lsl #3]
    e418:	ldr	x0, [sp, #136]
    e41c:	str	wzr, [x0]
    e420:	b	d630 <grub_mod_fini+0xd308>
    e424:	ldr	x21, [sp, #136]
    e428:	mov	x1, x9
    e42c:	ldr	w4, [sp, #104]
    e430:	mov	x3, x24
    e434:	mov	x5, x21
    e438:	mov	x2, x22
    e43c:	mov	x0, x28
    e440:	add	w4, w4, #0x1
    e444:	bl	f248 <grub_mod_fini+0xef20>
    e448:	mov	x1, x21
    e44c:	mov	x21, x0
    e450:	ldr	w1, [x1]
    e454:	cbnz	w1, d68c <grub_mod_fini+0xd364>
    e458:	ldrb	w1, [x22, #8]
    e45c:	cmp	w1, #0x9
    e460:	b.eq	e2a0 <grub_mod_fini+0xdf78>  // b.none
    e464:	cbz	x0, e46c <grub_mod_fini+0xe144>
    e468:	bl	3e18 <grub_mod_fini+0x3af0>
    e46c:	ldr	x1, [sp, #136]
    e470:	mov	w0, #0x8                   	// #8
    e474:	mov	x23, #0x0                   	// #0
    e478:	str	w0, [x1]
    e47c:	b	d690 <grub_mod_fini+0xd368>
    e480:	mov	w0, #0x1                   	// #1
    e484:	ldr	x1, [x20, #152]
    e488:	lsl	w0, w0, w19
    e48c:	sxtw	x0, w0
    e490:	orr	x0, x1, x0
    e494:	str	x0, [x20, #152]
    e498:	b	e2a8 <grub_mod_fini+0xdf80>
    e49c:	ldr	w0, [x20, #128]
    e4a0:	cmp	w0, #0xf
    e4a4:	b.eq	ec90 <grub_mod_fini+0xe968>  // b.none
    e4a8:	mov	x23, #0x8                   	// #8
    e4ac:	mov	w2, #0x40                  	// #64
    e4b0:	add	w1, w0, #0x1
    e4b4:	smaddl	x2, w0, w2, x23
    e4b8:	ldr	x23, [x20, #112]
    e4bc:	sbfiz	x0, x0, #6, #32
    e4c0:	str	w1, [x20, #128]
    e4c4:	add	x1, x23, x0
    e4c8:	add	x0, x0, #0x20
    e4cc:	mov	w3, #0xffffffff            	// #-1
    e4d0:	add	x0, x23, x0
    e4d4:	adds	x23, x23, x2
    e4d8:	stp	xzr, xzr, [x1, #8]
    e4dc:	str	xzr, [x1, #24]
    e4e0:	ldp	x4, x5, [x22]
    e4e4:	stp	x4, x5, [x1, #48]
    e4e8:	ldrb	w2, [x0, #26]
    e4ec:	and	w2, w2, #0xfffffff3
    e4f0:	strb	w2, [x0, #26]
    e4f4:	stp	xzr, xzr, [x1, #32]
    e4f8:	str	w3, [x1, #64]
    e4fc:	b.ne	d198 <grub_mod_fini+0xce70>  // b.any
    e500:	b	d978 <grub_mod_fini+0xd650>
    e504:	mov	x0, #0x3c8                 	// #968
    e508:	bl	0 <grub_malloc>
    e50c:	mov	x23, x0
    e510:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e514:	ldr	x0, [x20, #112]
    e518:	str	x0, [x23]
    e51c:	mov	x2, #0x8                   	// #8
    e520:	mov	w1, #0x1                   	// #1
    e524:	mov	w0, #0x0                   	// #0
    e528:	str	x23, [x20, #112]
    e52c:	b	d218 <grub_mod_fini+0xcef0>
    e530:	mov	w0, #0x1                   	// #1
    e534:	strb	w0, [x22, #8]
    e538:	b	d58c <grub_mod_fini+0xd264>
    e53c:	ldrb	w0, [x19, #32]
    e540:	orr	w0, w0, #0x1
    e544:	strb	w0, [x19, #32]
    e548:	tbz	w24, #8, e558 <grub_mod_fini+0xe230>
    e54c:	ldr	x0, [x25]
    e550:	orr	x0, x0, #0x400
    e554:	str	x0, [x25]
    e558:	ldr	w3, [x28, #56]
    e55c:	mov	x1, x28
    e560:	mov	x2, x24
    e564:	mov	x0, x22
    e568:	add	w9, w3, w27
    e56c:	str	w9, [x28, #56]
    e570:	bl	1240 <grub_mod_fini+0xf18>
    e574:	mov	w27, w0
    e578:	ldrb	w1, [x22, #8]
    e57c:	cmp	w1, #0x2
    e580:	b.eq	e974 <grub_mod_fini+0xe64c>  // b.none
    e584:	mov	w0, #0x1                   	// #1
    e588:	str	w0, [sp, #120]
    e58c:	b	d584 <grub_mod_fini+0xd25c>
    e590:	mov	w21, w1
    e594:	b	dd28 <grub_mod_fini+0xda00>
    e598:	mov	x0, #0x3c8                 	// #968
    e59c:	bl	0 <grub_malloc>
    e5a0:	mov	x23, x0
    e5a4:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e5a8:	ldr	x0, [x20, #112]
    e5ac:	str	x0, [x23]
    e5b0:	mov	x2, #0x8                   	// #8
    e5b4:	mov	w0, #0x0                   	// #0
    e5b8:	str	x23, [x20, #112]
    e5bc:	b	d6d4 <grub_mod_fini+0xd3ac>
    e5c0:	mov	x0, x25
    e5c4:	bl	0 <grub_free>
    e5c8:	mov	x0, x19
    e5cc:	bl	0 <grub_free>
    e5d0:	ldr	x1, [sp, #136]
    e5d4:	mov	w0, #0xc                   	// #12
    e5d8:	mov	x23, #0x0                   	// #0
    e5dc:	ldp	x25, x26, [sp, #64]
    e5e0:	str	w0, [x1]
    e5e4:	b	d1b4 <grub_mod_fini+0xce8c>
    e5e8:	mov	x0, #0x3c8                 	// #968
    e5ec:	bl	0 <grub_malloc>
    e5f0:	mov	x23, x0
    e5f4:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e5f8:	ldr	x0, [x20, #112]
    e5fc:	str	x0, [x23]
    e600:	mov	w1, #0x1                   	// #1
    e604:	mov	x2, #0x8                   	// #8
    e608:	mov	w0, #0x0                   	// #0
    e60c:	str	x23, [x20, #112]
    e610:	b	d4bc <grub_mod_fini+0xd194>
    e614:	ldr	w5, [sp, #184]
    e618:	cbz	x26, e960 <grub_mod_fini+0xe638>
    e61c:	tbz	w2, #7, e960 <grub_mod_fini+0xe638>
    e620:	ldr	x1, [sp, #136]
    e624:	mov	w0, #0x3                   	// #3
    e628:	str	w0, [x1]
    e62c:	b	e19c <grub_mod_fini+0xde74>
    e630:	lsl	w1, w2, #1
    e634:	add	w1, w1, #0x1
    e638:	str	w1, [sp, #104]
    e63c:	sbfiz	x1, x1, #2, #32
    e640:	bl	0 <grub_realloc>
    e644:	cbz	x0, e748 <grub_mod_fini+0xe420>
    e648:	ldr	w1, [x19, #36]
    e64c:	str	x0, [x19]
    e650:	b	d620 <grub_mod_fini+0xd2f8>
    e654:	ldr	x0, [sp, #144]
    e658:	cbnz	x0, dc08 <grub_mod_fini+0xd8e0>
    e65c:	b	dce8 <grub_mod_fini+0xd9c0>
    e660:	ldr	x1, [sp, #136]
    e664:	mov	w0, #0x7                   	// #7
    e668:	str	w0, [x1]
    e66c:	b	e19c <grub_mod_fini+0xde74>
    e670:	ldrb	w1, [sp, #184]
    e674:	mov	x0, #0x1                   	// #1
    e678:	ubfx	x2, x1, #6, #2
    e67c:	lsl	x1, x0, x1
    e680:	ldr	x0, [x25, x2, lsl #3]
    e684:	orr	x0, x0, x1
    e688:	str	x0, [x25, x2, lsl #3]
    e68c:	b	d630 <grub_mod_fini+0xd308>
    e690:	adrp	x1, 0 <grub_mod_init-0x288>
    e694:	adrp	x0, 0 <grub_mod_init-0x288>
    e698:	mov	w2, #0xced                 	// #3309
    e69c:	ldr	x1, [x1]
    e6a0:	ldr	x0, [x0]
    e6a4:	bl	0 <grub_printf>
    e6a8:	b	d630 <grub_mod_fini+0xd308>
    e6ac:	mov	x2, x24
    e6b0:	mov	x1, x28
    e6b4:	mov	x0, x22
    e6b8:	str	w4, [sp, #104]
    e6bc:	bl	24a8 <grub_mod_fini+0x2180>
    e6c0:	ldr	w1, [x28, #56]
    e6c4:	mov	x3, x24
    e6c8:	ldr	w4, [sp, #104]
    e6cc:	mov	x2, x22
    e6d0:	ldr	x5, [sp, #136]
    e6d4:	add	w1, w1, w0
    e6d8:	str	w1, [x28, #56]
    e6dc:	mov	x0, x28
    e6e0:	mov	x1, x9
    e6e4:	bl	cf88 <grub_mod_fini+0xcc60>
    e6e8:	mov	x23, x0
    e6ec:	b	d1b4 <grub_mod_fini+0xce8c>
    e6f0:	mov	x0, #0x3c8                 	// #968
    e6f4:	bl	0 <grub_malloc>
    e6f8:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e6fc:	ldr	x1, [x20, #112]
    e700:	str	x1, [x0]
    e704:	mov	w4, #0x1                   	// #1
    e708:	mov	x2, #0x30                  	// #48
    e70c:	mov	x5, #0x8                   	// #8
    e710:	mov	x1, #0x0                   	// #0
    e714:	str	x0, [x20, #112]
    e718:	b	d930 <grub_mod_fini+0xd608>
    e71c:	mov	x0, #0x3c8                 	// #968
    e720:	bl	0 <grub_malloc>
    e724:	mov	x2, x0
    e728:	cbz	x0, ecbc <grub_mod_fini+0xe994>
    e72c:	ldr	x0, [x20, #112]
    e730:	str	x0, [x2]
    e734:	mov	w1, #0x1                   	// #1
    e738:	mov	x21, #0x8                   	// #8
    e73c:	mov	w0, #0x0                   	// #0
    e740:	str	x2, [x20, #112]
    e744:	b	d8d0 <grub_mod_fini+0xd5a8>
    e748:	mov	w0, #0xc                   	// #12
    e74c:	ldr	x1, [sp, #136]
    e750:	str	w0, [x1]
    e754:	b	e19c <grub_mod_fini+0xde74>
    e758:	mov	w0, #0x6                   	// #6
    e75c:	str	w0, [x22]
    e760:	ldr	w0, [x20, #128]
    e764:	cmp	w0, #0xf
    e768:	b.eq	ecf0 <grub_mod_fini+0xe9c8>  // b.none
    e76c:	mov	x3, #0x8                   	// #8
    e770:	mov	w2, #0x40                  	// #64
    e774:	add	w1, w0, #0x1
    e778:	smaddl	x2, w0, w2, x3
    e77c:	ldr	x3, [x20, #112]
    e780:	sbfiz	x0, x0, #6, #32
    e784:	str	w1, [x20, #128]
    e788:	add	x1, x3, x0
    e78c:	add	x0, x0, #0x20
    e790:	add	x19, x3, x2
    e794:	add	x0, x3, x0
    e798:	mov	w4, #0xffffffff            	// #-1
    e79c:	stp	xzr, xzr, [x1, #8]
    e7a0:	str	xzr, [x1, #24]
    e7a4:	ldp	x2, x3, [x22]
    e7a8:	stp	x2, x3, [x1, #48]
    e7ac:	ldrb	w2, [x0, #26]
    e7b0:	and	w2, w2, #0xfffffff3
    e7b4:	strb	w2, [x0, #26]
    e7b8:	stp	xzr, xzr, [x1, #32]
    e7bc:	str	w4, [x1, #64]
    e7c0:	mov	w0, #0x9                   	// #9
    e7c4:	str	w0, [x22]
    e7c8:	b	d0bc <grub_mod_fini+0xcd94>
    e7cc:	ldr	w3, [x28, #56]
    e7d0:	mov	x1, x28
    e7d4:	mov	x2, x24
    e7d8:	add	x0, sp, #0xd0
    e7dc:	add	w3, w3, w27
    e7e0:	str	w3, [x28, #56]
    e7e4:	bl	1240 <grub_mod_fini+0xf18>
    e7e8:	mov	w3, w0
    e7ec:	ldrb	w1, [sp, #216]
    e7f0:	cmp	w1, #0x2
    e7f4:	b.eq	e660 <grub_mod_fini+0xe338>  // b.none
    e7f8:	cmp	w1, #0x15
    e7fc:	b.eq	e994 <grub_mod_fini+0xe66c>  // b.none
    e800:	add	x6, sp, #0x100
    e804:	mov	x4, x24
    e808:	add	x2, sp, #0xd0
    e80c:	mov	x1, x28
    e810:	add	x0, sp, #0xc0
    e814:	mov	w5, #0x1                   	// #1
    e818:	str	w21, [sp, #192]
    e81c:	str	x6, [sp, #200]
    e820:	bl	2b18 <grub_mod_fini+0x27f0>
    e824:	mov	w3, w0
    e828:	cbnz	w0, eed4 <grub_mod_fini+0xebac>
    e82c:	mov	x2, x24
    e830:	mov	x1, x28
    e834:	mov	x0, x22
    e838:	str	w3, [sp, #128]
    e83c:	bl	1240 <grub_mod_fini+0xf18>
    e840:	mov	w27, w0
    e844:	ldr	w2, [x20, #164]
    e848:	ldr	w1, [sp, #176]
    e84c:	cmp	w2, #0x1
    e850:	ldr	w3, [sp, #128]
    e854:	sub	w0, w1, #0x2
    e858:	csel	x26, x19, xzr, gt
    e85c:	tst	w0, #0xfffffffd
    e860:	b.eq	ed98 <grub_mod_fini+0xea70>  // b.none
    e864:	ldr	w0, [sp, #192]
    e868:	sub	w2, w0, #0x2
    e86c:	tst	w2, #0xfffffffd
    e870:	b.eq	ed98 <grub_mod_fini+0xea70>  // b.none
    e874:	cmp	w1, #0x3
    e878:	b.eq	eee0 <grub_mod_fini+0xebb8>  // b.none
    e87c:	cmp	w0, #0x3
    e880:	b.eq	eeb4 <grub_mod_fini+0xeb8c>  // b.none
    e884:	ldr	w2, [sp, #176]
    e888:	cbnz	w2, ecd8 <grub_mod_fini+0xe9b0>
    e88c:	ldrb	w1, [sp, #184]
    e890:	cmp	w2, #0x3
    e894:	cset	w5, eq  // eq = none
    e898:	cmp	w2, #0x0
    e89c:	csinc	w5, w5, wzr, ne  // ne = any
    e8a0:	cbnz	w0, ecc4 <grub_mod_fini+0xe99c>
    e8a4:	ldrb	w2, [sp, #200]
    e8a8:	cbz	w5, e614 <grub_mod_fini+0xe2ec>
    e8ac:	cmp	w0, #0x3
    e8b0:	mov	w5, w1
    e8b4:	cset	w6, eq  // eq = none
    e8b8:	cmp	w0, #0x0
    e8bc:	csinc	w0, w6, wzr, ne  // ne = any
    e8c0:	cbz	x26, e95c <grub_mod_fini+0xe634>
    e8c4:	tst	x1, #0x80
    e8c8:	csinv	w5, w1, wzr, eq  // eq = none
    e8cc:	cbnz	w0, e61c <grub_mod_fini+0xe2f4>
    e8d0:	ldr	w2, [sp, #200]
    e8d4:	cmn	w2, #0x1
    e8d8:	cset	w0, eq  // eq = none
    e8dc:	cmp	w0, #0x0
    e8e0:	ccmn	w5, #0x1, #0x4, eq  // eq = none
    e8e4:	b.eq	e620 <grub_mod_fini+0xe2f8>  // b.none
    e8e8:	tst	x24, #0x10000
    e8ec:	ccmp	w2, w5, #0x0, ne  // ne = any
    e8f0:	b.lt	ed98 <grub_mod_fini+0xea70>  // b.tstop
    e8f4:	cbz	x26, e924 <grub_mod_fini+0xe5fc>
    e8f8:	ldr	w0, [x26, #48]
    e8fc:	ldr	w1, [sp, #112]
    e900:	ldr	x6, [x26, #8]
    e904:	cmp	w0, w1
    e908:	b.eq	ef48 <grub_mod_fini+0xec20>  // b.none
    e90c:	str	w5, [x6, w0, sxtw #2]
    e910:	ldr	x1, [x26, #16]
    e914:	ldr	w0, [x26, #48]
    e918:	add	w6, w0, #0x1
    e91c:	str	w6, [x26, #48]
    e920:	str	w2, [x1, w0, sxtw #2]
    e924:	mov	x6, #0x1                   	// #1
    e928:	asr	w1, w3, #6
    e92c:	cmp	w5, w3
    e930:	ccmp	w2, w3, #0x1, le
    e934:	lsl	x4, x6, x3
    e938:	sxtw	x1, w1
    e93c:	add	w3, w3, #0x1
    e940:	b.lt	e950 <grub_mod_fini+0xe628>  // b.tstop
    e944:	ldr	x0, [x25, x1, lsl #3]
    e948:	orr	x0, x0, x4
    e94c:	str	x0, [x25, x1, lsl #3]
    e950:	cmp	w3, #0x100
    e954:	b.ne	e928 <grub_mod_fini+0xe600>  // b.any
    e958:	b	e418 <grub_mod_fini+0xe0f0>
    e95c:	cbz	w0, e8d0 <grub_mod_fini+0xe5a8>
    e960:	mov	w0, #0x0                   	// #0
    e964:	b	e8dc <grub_mod_fini+0xe5b4>
    e968:	cbz	x21, d978 <grub_mod_fini+0xd650>
    e96c:	str	x23, [x21]
    e970:	b	d978 <grub_mod_fini+0xd650>
    e974:	ldr	x1, [sp, #136]
    e978:	mov	w0, #0x2                   	// #2
    e97c:	str	w0, [x1]
    e980:	b	e19c <grub_mod_fini+0xde74>
    e984:	mov	w0, #0x6                   	// #6
    e988:	mov	x23, #0x0                   	// #0
    e98c:	str	w0, [x5]
    e990:	b	d1b4 <grub_mod_fini+0xce8c>
    e994:	ldr	w0, [x28, #56]
    e998:	mov	w2, #0x1                   	// #1
    e99c:	ldr	w1, [sp, #176]
    e9a0:	sub	w0, w0, w27
    e9a4:	str	w0, [x28, #56]
    e9a8:	strb	w2, [x22, #8]
    e9ac:	b	d5fc <grub_mod_fini+0xd2d4>
    e9b0:	mov	x0, #0x3c8                 	// #968
    e9b4:	bl	0 <grub_malloc>
    e9b8:	mov	x1, x0
    e9bc:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e9c0:	ldr	x0, [x20, #112]
    e9c4:	str	x0, [x1]
    e9c8:	mov	x23, #0x8                   	// #8
    e9cc:	mov	w2, #0x1                   	// #1
    e9d0:	mov	x3, #0x30                  	// #48
    e9d4:	mov	x4, #0x0                   	// #0
    e9d8:	str	x1, [x20, #112]
    e9dc:	b	e2cc <grub_mod_fini+0xdfa4>
    e9e0:	mov	x0, #0x3c8                 	// #968
    e9e4:	bl	0 <grub_malloc>
    e9e8:	mov	x23, x0
    e9ec:	cbz	x0, d978 <grub_mod_fini+0xd650>
    e9f0:	ldr	x0, [x20, #112]
    e9f4:	str	x0, [x23]
    e9f8:	mov	x2, #0x8                   	// #8
    e9fc:	mov	w0, #0x0                   	// #0
    ea00:	str	x23, [x20, #112]
    ea04:	b	e370 <grub_mod_fini+0xe048>
    ea08:	ldr	x0, [sp, #136]
    ea0c:	ldr	w0, [x0]
    ea10:	cbnz	w0, d9ac <grub_mod_fini+0xd684>
    ea14:	mov	x23, #0x0                   	// #0
    ea18:	b	db90 <grub_mod_fini+0xd868>
    ea1c:	mov	x0, #0x3c8                 	// #968
    ea20:	bl	0 <grub_malloc>
    ea24:	mov	x23, x0
    ea28:	cbz	x0, d978 <grub_mod_fini+0xd650>
    ea2c:	ldr	x0, [x20, #112]
    ea30:	str	x0, [x23]
    ea34:	mov	w2, #0x1                   	// #1
    ea38:	mov	x4, #0x8                   	// #8
    ea3c:	mov	x3, #0x30                  	// #48
    ea40:	mov	x0, #0x0                   	// #0
    ea44:	str	x23, [x20, #112]
    ea48:	b	d140 <grub_mod_fini+0xce18>
    ea4c:	mov	x0, #0x3c8                 	// #968
    ea50:	bl	0 <grub_malloc>
    ea54:	mov	x2, x0
    ea58:	cbz	x0, eeac <grub_mod_fini+0xeb84>
    ea5c:	ldr	x0, [x20, #112]
    ea60:	str	x0, [x2]
    ea64:	mov	x21, #0x8                   	// #8
    ea68:	mov	w1, #0x1                   	// #1
    ea6c:	mov	w0, #0x0                   	// #0
    ea70:	str	x2, [x20, #112]
    ea74:	b	d0dc <grub_mod_fini+0xcdb4>
    ea78:	ldr	w0, [x28, #56]
    ea7c:	add	w9, w0, w27
    ea80:	ldr	w0, [sp, #120]
    ea84:	str	w9, [x28, #56]
    ea88:	cbz	w0, eaac <grub_mod_fini+0xe784>
    ea8c:	ldp	x3, x2, [x25]
    ea90:	ldp	x1, x0, [x25, #16]
    ea94:	mvn	x3, x3
    ea98:	mvn	x2, x2
    ea9c:	stp	x3, x2, [x25]
    eaa0:	mvn	x1, x1
    eaa4:	mvn	x0, x0
    eaa8:	stp	x1, x0, [x25, #16]
    eaac:	ldr	w4, [x20, #164]
    eab0:	cmp	w4, #0x1
    eab4:	b.le	eaf8 <grub_mod_fini+0xe7d0>
    eab8:	ldr	x0, [x20, #120]
    eabc:	ldp	x1, x3, [x25]
    eac0:	ldr	x2, [x0]
    eac4:	and	x1, x1, x2
    eac8:	str	x1, [x25]
    eacc:	ldr	x2, [x25, #16]
    ead0:	ldr	x5, [x0, #8]
    ead4:	ldr	x1, [x25, #24]
    ead8:	and	x3, x3, x5
    eadc:	str	x3, [x25, #8]
    eae0:	ldr	x3, [x0, #16]
    eae4:	and	x2, x2, x3
    eae8:	str	x2, [x25, #16]
    eaec:	ldr	x0, [x0, #24]
    eaf0:	and	x0, x1, x0
    eaf4:	str	x0, [x25, #24]
    eaf8:	ldr	w0, [x19, #36]
    eafc:	cbnz	w0, ebbc <grub_mod_fini+0xe894>
    eb00:	ldr	x0, [x19, #40]
    eb04:	cbnz	x0, ebbc <grub_mod_fini+0xe894>
    eb08:	ldr	w0, [x19, #48]
    eb0c:	cbnz	w0, ebbc <grub_mod_fini+0xe894>
    eb10:	cmp	w4, #0x1
    eb14:	b.le	eb28 <grub_mod_fini+0xe800>
    eb18:	ldr	w0, [x19, #52]
    eb1c:	cbnz	w0, ebbc <grub_mod_fini+0xe894>
    eb20:	ldrb	w0, [x19, #32]
    eb24:	tbnz	w0, #0, ebbc <grub_mod_fini+0xe894>
    eb28:	ldr	x0, [x19]
    eb2c:	bl	0 <grub_free>
    eb30:	ldr	x0, [x19, #8]
    eb34:	bl	0 <grub_free>
    eb38:	ldr	x0, [x19, #16]
    eb3c:	bl	0 <grub_free>
    eb40:	ldr	x0, [x19, #24]
    eb44:	bl	0 <grub_free>
    eb48:	mov	x0, x19
    eb4c:	bl	0 <grub_free>
    eb50:	ldr	w0, [x20, #128]
    eb54:	cmp	w0, #0xf
    eb58:	b.eq	ef00 <grub_mod_fini+0xebd8>  // b.none
    eb5c:	ldr	x3, [x20, #112]
    eb60:	sbfiz	x1, x0, #6, #32
    eb64:	add	w2, w0, #0x1
    eb68:	add	x4, x1, #0x30
    eb6c:	add	x0, x3, x1
    eb70:	add	x6, x3, x4
    eb74:	str	w2, [x20, #128]
    eb78:	add	x2, x1, #0x20
    eb7c:	add	x2, x3, x2
    eb80:	mov	w9, #0x3                   	// #3
    eb84:	stp	xzr, xzr, [x0, #8]
    eb88:	add	x1, x1, #0x8
    eb8c:	add	x23, x3, x1
    eb90:	str	xzr, [x0, #24]
    eb94:	mov	w5, #0xffffffff            	// #-1
    eb98:	str	x25, [x3, x4]
    eb9c:	strb	w9, [x6, #8]
    eba0:	ldp	x25, x26, [sp, #64]
    eba4:	ldrb	w1, [x2, #26]
    eba8:	and	w1, w1, #0xfffffff3
    ebac:	strb	w1, [x2, #26]
    ebb0:	stp	xzr, xzr, [x0, #32]
    ebb4:	str	w5, [x0, #64]
    ebb8:	b	d25c <grub_mod_fini+0xcf34>
    ebbc:	ldrb	w0, [x20, #160]
    ebc0:	ldr	w1, [x20, #128]
    ebc4:	orr	w0, w0, #0x2
    ebc8:	strb	w0, [x20, #160]
    ebcc:	cmp	w1, #0xf
    ebd0:	b.eq	ee78 <grub_mod_fini+0xeb50>  // b.none
    ebd4:	ldr	x23, [x20, #112]
    ebd8:	sbfiz	x0, x1, #6, #32
    ebdc:	add	x2, x0, #0x30
    ebe0:	add	w1, w1, #0x1
    ebe4:	add	x27, x23, x0
    ebe8:	add	x4, x23, x2
    ebec:	str	w1, [x20, #128]
    ebf0:	add	x1, x0, #0x20
    ebf4:	add	x1, x23, x1
    ebf8:	mov	w5, #0x6                   	// #6
    ebfc:	stp	xzr, xzr, [x27, #8]
    ec00:	add	x0, x0, #0x8
    ec04:	add	x21, x23, x0
    ec08:	str	xzr, [x27, #24]
    ec0c:	mov	w3, #0xffffffff            	// #-1
    ec10:	str	x19, [x23, x2]
    ec14:	strb	w5, [x4, #8]
    ec18:	ldr	x2, [x25]
    ec1c:	ldrb	w0, [x1, #26]
    ec20:	and	w0, w0, #0xfffffff3
    ec24:	strb	w0, [x1, #26]
    ec28:	stp	xzr, xzr, [x27, #32]
    ec2c:	str	w3, [x27, #64]
    ec30:	cbnz	x2, eda8 <grub_mod_fini+0xea80>
    ec34:	ldr	x0, [x25, #8]
    ec38:	cbnz	x0, eda8 <grub_mod_fini+0xea80>
    ec3c:	ldr	x0, [x25, #16]
    ec40:	cbnz	x0, eda8 <grub_mod_fini+0xea80>
    ec44:	ldr	x0, [x25, #24]
    ec48:	cbnz	x0, eda8 <grub_mod_fini+0xea80>
    ec4c:	mov	x0, x25
    ec50:	mov	x23, x21
    ec54:	bl	0 <grub_free>
    ec58:	ldp	x25, x26, [sp, #64]
    ec5c:	b	d25c <grub_mod_fini+0xcf34>
    ec60:	mov	x0, #0x3c8                 	// #968
    ec64:	bl	0 <grub_malloc>
    ec68:	mov	x19, x0
    ec6c:	cbz	x0, d0b4 <grub_mod_fini+0xcd8c>
    ec70:	mov	x2, x0
    ec74:	mov	x3, #0x8                   	// #8
    ec78:	ldr	x0, [x20, #112]
    ec7c:	str	x0, [x19]
    ec80:	mov	w1, #0x1                   	// #1
    ec84:	mov	w0, #0x0                   	// #0
    ec88:	str	x19, [x20, #112]
    ec8c:	b	d074 <grub_mod_fini+0xcd4c>
    ec90:	mov	x0, #0x3c8                 	// #968
    ec94:	bl	0 <grub_malloc>
    ec98:	mov	x23, x0
    ec9c:	cbz	x0, d978 <grub_mod_fini+0xd650>
    eca0:	ldr	x0, [x20, #112]
    eca4:	str	x0, [x23]
    eca8:	mov	x2, #0x8                   	// #8
    ecac:	mov	w1, #0x1                   	// #1
    ecb0:	mov	w0, #0x0                   	// #0
    ecb4:	str	x23, [x20, #112]
    ecb8:	b	e4bc <grub_mod_fini+0xe194>
    ecbc:	mov	x21, #0x0                   	// #0
    ecc0:	b	d90c <grub_mod_fini+0xd5e4>
    ecc4:	cmp	w0, #0x3
    ecc8:	b.eq	ee6c <grub_mod_fini+0xeb44>  // b.none
    eccc:	cbnz	w5, ee98 <grub_mod_fini+0xeb70>
    ecd0:	ldr	w5, [sp, #184]
    ecd4:	b	e8d0 <grub_mod_fini+0xe5a8>
    ecd8:	cmp	w2, #0x3
    ecdc:	mov	w1, #0x0                   	// #0
    ece0:	b.ne	e890 <grub_mod_fini+0xe568>  // b.any
    ece4:	ldr	x1, [sp, #184]
    ece8:	ldrb	w1, [x1]
    ecec:	b	e890 <grub_mod_fini+0xe568>
    ecf0:	mov	x0, #0x3c8                 	// #968
    ecf4:	bl	0 <grub_malloc>
    ecf8:	mov	x19, x0
    ecfc:	cbz	x0, e7c0 <grub_mod_fini+0xe498>
    ed00:	mov	x3, x0
    ed04:	mov	w1, #0x1                   	// #1
    ed08:	ldr	x0, [x20, #112]
    ed0c:	str	x0, [x19]
    ed10:	mov	x2, #0x8                   	// #8
    ed14:	mov	w0, #0x0                   	// #0
    ed18:	str	x19, [x20, #112]
    ed1c:	b	e780 <grub_mod_fini+0xe458>
    ed20:	mov	w10, #0x80                  	// #128
    ed24:	mov	x3, #0x2                   	// #2
    ed28:	add	x5, x20, #0xa8
    ed2c:	mov	x8, #0x1                   	// #1
    ed30:	mov	w1, w10
    ed34:	mov	w2, #0x0                   	// #0
    ed38:	and	w0, w1, #0xffffffdf
    ed3c:	lsl	x4, x8, x2
    ed40:	sub	w0, w0, #0x41
    ed44:	add	w2, w2, #0x1
    ed48:	sub	w6, w1, #0x30
    ed4c:	cmp	w0, #0x19
    ed50:	b.ls	ed60 <grub_mod_fini+0xea38>  // b.plast
    ed54:	cmp	w1, #0x5f
    ed58:	ccmp	w6, #0x9, #0x0, ne  // ne = any
    ed5c:	b.hi	ed6c <grub_mod_fini+0xea44>  // b.pmore
    ed60:	ldr	x0, [x5, x3, lsl #3]
    ed64:	orr	x0, x0, x4
    ed68:	str	x0, [x5, x3, lsl #3]
    ed6c:	add	w1, w1, #0x1
    ed70:	cmp	w2, #0x40
    ed74:	b.ne	ed38 <grub_mod_fini+0xea10>  // b.any
    ed78:	add	x3, x3, #0x1
    ed7c:	add	w10, w10, #0x40
    ed80:	cmp	w3, #0x3
    ed84:	b.le	ed30 <grub_mod_fini+0xea08>
    ed88:	b	d038 <grub_mod_fini+0xcd10>
    ed8c:	mov	w10, #0x0                   	// #0
    ed90:	mov	x3, #0x0                   	// #0
    ed94:	b	ed28 <grub_mod_fini+0xea00>
    ed98:	ldr	x1, [sp, #136]
    ed9c:	mov	w0, #0xb                   	// #11
    eda0:	str	w0, [x1]
    eda4:	b	e19c <grub_mod_fini+0xde74>
    eda8:	ldr	w0, [x20, #128]
    edac:	cmp	w0, #0xf
    edb0:	b.eq	effc <grub_mod_fini+0xecd4>  // b.none
    edb4:	sbfiz	x1, x0, #6, #32
    edb8:	add	w0, w0, #0x1
    edbc:	add	x6, x23, x1
    edc0:	add	x2, x1, #0x30
    edc4:	add	x4, x23, x2
    edc8:	str	w0, [x20, #128]
    edcc:	add	x0, x1, #0x20
    edd0:	mov	w5, #0x3                   	// #3
    edd4:	stp	xzr, xzr, [x6, #8]
    edd8:	add	x0, x23, x0
    eddc:	add	x1, x1, #0x8
    ede0:	str	xzr, [x6, #24]
    ede4:	add	x26, x23, x1
    ede8:	str	x25, [x23, x2]
    edec:	mov	w3, #0xffffffff            	// #-1
    edf0:	strb	w5, [x4, #8]
    edf4:	ldrb	w1, [x0, #26]
    edf8:	and	w1, w1, #0xfffffff3
    edfc:	strb	w1, [x0, #26]
    ee00:	stp	xzr, xzr, [x6, #32]
    ee04:	str	w3, [x6, #64]
    ee08:	ldr	w0, [x20, #128]
    ee0c:	cmp	w0, #0xf
    ee10:	b.eq	efd0 <grub_mod_fini+0xeca8>  // b.none
    ee14:	sbfiz	x2, x0, #6, #32
    ee18:	add	w1, w0, #0x1
    ee1c:	add	x0, x23, x2
    ee20:	add	x3, x2, #0x20
    ee24:	add	x3, x23, x3
    ee28:	str	w1, [x20, #128]
    ee2c:	mov	w1, #0xa                   	// #10
    ee30:	add	x2, x2, #0x8
    ee34:	stp	xzr, x26, [x0, #8]
    ee38:	mov	w4, #0xffffffff            	// #-1
    ee3c:	add	x23, x23, x2
    ee40:	str	x21, [x0, #24]
    ee44:	strb	w1, [x0, #56]
    ee48:	ldp	x25, x26, [sp, #64]
    ee4c:	ldrb	w1, [x3, #26]
    ee50:	and	w1, w1, #0xfffffff3
    ee54:	strb	w1, [x3, #26]
    ee58:	stp	xzr, xzr, [x0, #32]
    ee5c:	str	w4, [x0, #64]
    ee60:	str	x23, [x6, #8]
    ee64:	str	x23, [x27, #8]
    ee68:	b	d25c <grub_mod_fini+0xcf34>
    ee6c:	ldr	x2, [sp, #200]
    ee70:	ldrb	w2, [x2]
    ee74:	b	e8a8 <grub_mod_fini+0xe580>
    ee78:	mov	x0, #0x3c8                 	// #968
    ee7c:	bl	0 <grub_malloc>
    ee80:	cbz	x0, e748 <grub_mod_fini+0xe420>
    ee84:	ldr	x1, [x20, #112]
    ee88:	str	x1, [x0]
    ee8c:	mov	w1, #0x0                   	// #0
    ee90:	str	x0, [x20, #112]
    ee94:	b	ebd4 <grub_mod_fini+0xe8ac>
    ee98:	mov	w5, w1
    ee9c:	cbz	x26, e8d0 <grub_mod_fini+0xe5a8>
    eea0:	mov	w0, #0x0                   	// #0
    eea4:	mov	w2, #0x0                   	// #0
    eea8:	b	e8c4 <grub_mod_fini+0xe59c>
    eeac:	mov	x21, #0x0                   	// #0
    eeb0:	b	d11c <grub_mod_fini+0xcdf4>
    eeb4:	ldr	x0, [sp, #200]
    eeb8:	str	w3, [sp, #128]
    eebc:	bl	0 <grub_strlen>
    eec0:	cmp	x0, #0x1
    eec4:	b.hi	e620 <grub_mod_fini+0xe2f8>  // b.pmore
    eec8:	ldr	w3, [sp, #128]
    eecc:	ldr	w0, [sp, #192]
    eed0:	b	e884 <grub_mod_fini+0xe55c>
    eed4:	ldr	x0, [sp, #136]
    eed8:	str	w3, [x0]
    eedc:	b	e19c <grub_mod_fini+0xde74>
    eee0:	ldr	x0, [sp, #184]
    eee4:	str	w3, [sp, #128]
    eee8:	bl	0 <grub_strlen>
    eeec:	cmp	x0, #0x1
    eef0:	b.hi	e620 <grub_mod_fini+0xe2f8>  // b.pmore
    eef4:	ldr	w3, [sp, #128]
    eef8:	ldr	w0, [sp, #192]
    eefc:	b	e87c <grub_mod_fini+0xe554>
    ef00:	mov	x0, #0x3c8                 	// #968
    ef04:	bl	0 <grub_malloc>
    ef08:	mov	x1, x0
    ef0c:	cbz	x0, e748 <grub_mod_fini+0xe420>
    ef10:	ldr	x0, [x20, #112]
    ef14:	str	x0, [x1]
    ef18:	mov	w0, #0x0                   	// #0
    ef1c:	str	x1, [x20, #112]
    ef20:	str	wzr, [x20, #128]
    ef24:	b	eb5c <grub_mod_fini+0xe834>
    ef28:	mov	x27, x23
    ef2c:	mov	x19, x23
    ef30:	b	e040 <grub_mod_fini+0xdd18>
    ef34:	mov	x19, x23
    ef38:	mov	x27, #0x0                   	// #0
    ef3c:	b	d2f8 <grub_mod_fini+0xcfd0>
    ef40:	mov	w26, w21
    ef44:	b	dd1c <grub_mod_fini+0xd9f4>
    ef48:	lsl	w1, w1, #1
    ef4c:	mov	x0, x6
    ef50:	add	w1, w1, #0x1
    ef54:	str	w1, [sp, #112]
    ef58:	str	w2, [sp, #144]
    ef5c:	sbfiz	x1, x1, #2, #32
    ef60:	str	x1, [sp, #128]
    ef64:	stp	w3, w5, [sp, #152]
    ef68:	bl	0 <grub_realloc>
    ef6c:	mov	x6, x0
    ef70:	ldr	x0, [x26, #16]
    ef74:	ldr	x1, [sp, #128]
    ef78:	str	x6, [sp, #128]
    ef7c:	bl	0 <grub_realloc>
    ef80:	mov	x1, x0
    ef84:	ldr	x6, [sp, #128]
    ef88:	ldr	w2, [sp, #144]
    ef8c:	cmp	x6, #0x0
    ef90:	ldp	w3, w5, [sp, #152]
    ef94:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    ef98:	b.eq	efa8 <grub_mod_fini+0xec80>  // b.none
    ef9c:	ldr	w0, [x26, #48]
    efa0:	stp	x6, x1, [x26, #8]
    efa4:	b	e90c <grub_mod_fini+0xe5e4>
    efa8:	mov	x0, x6
    efac:	str	x1, [sp, #104]
    efb0:	bl	0 <grub_free>
    efb4:	ldr	x1, [sp, #104]
    efb8:	mov	x0, x1
    efbc:	bl	0 <grub_free>
    efc0:	ldr	x1, [sp, #136]
    efc4:	mov	w0, #0xc                   	// #12
    efc8:	str	w0, [x1]
    efcc:	b	e19c <grub_mod_fini+0xde74>
    efd0:	mov	x0, #0x3c8                 	// #968
    efd4:	str	x6, [sp, #104]
    efd8:	bl	0 <grub_malloc>
    efdc:	mov	x23, x0
    efe0:	cbz	x0, e748 <grub_mod_fini+0xe420>
    efe4:	ldr	x0, [x20, #112]
    efe8:	str	x0, [x23]
    efec:	mov	w0, #0x0                   	// #0
    eff0:	str	x23, [x20, #112]
    eff4:	ldr	x6, [sp, #104]
    eff8:	b	ee14 <grub_mod_fini+0xeaec>
    effc:	mov	x0, #0x3c8                 	// #968
    f000:	bl	0 <grub_malloc>
    f004:	mov	x23, x0
    f008:	cbz	x0, e748 <grub_mod_fini+0xe420>
    f00c:	ldr	x0, [x20, #112]
    f010:	str	x0, [x23]
    f014:	mov	w0, #0x0                   	// #0
    f018:	str	x23, [x20, #112]
    f01c:	b	edb4 <grub_mod_fini+0xea8c>
	...
    f050:	stp	x29, x30, [sp, #-96]!
    f054:	mov	x29, sp
    f058:	stp	x27, x28, [sp, #80]
    f05c:	mov	x27, x5
    f060:	mov	x28, x2
    f064:	stp	x19, x20, [sp, #16]
    f068:	stp	x21, x22, [sp, #32]
    f06c:	mov	x21, x1
    f070:	mov	w22, w4
    f074:	stp	x23, x24, [sp, #48]
    f078:	mov	x23, x0
    f07c:	mov	x24, x3
    f080:	stp	x25, x26, [sp, #64]
    f084:	ldr	x26, [x1]
    f088:	bl	cf88 <grub_mod_fini+0xcc60>
    f08c:	ldr	w1, [x27]
    f090:	cmp	w1, #0x0
    f094:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    f098:	b.eq	f240 <grub_mod_fini+0xef18>  // b.none
    f09c:	mov	x20, x0
    f0a0:	ldrb	w0, [x28, #8]
    f0a4:	and	w1, w0, #0xfffffff7
    f0a8:	cmp	w1, #0x2
    f0ac:	b.eq	f1a4 <grub_mod_fini+0xee7c>  // b.none
    f0b0:	cmp	w22, #0x0
    f0b4:	cset	w25, eq  // eq = none
    f0b8:	b	f0d4 <grub_mod_fini+0xedac>
    f0bc:	cmp	x20, #0x0
    f0c0:	csel	x20, x20, x0, ne  // ne = any
    f0c4:	ldrb	w0, [x28, #8]
    f0c8:	and	w1, w0, #0xfffffff7
    f0cc:	cmp	w1, #0x2
    f0d0:	b.eq	f1a4 <grub_mod_fini+0xee7c>  // b.none
    f0d4:	cmp	w25, #0x0
    f0d8:	ccmp	w0, #0x9, #0x0, eq  // eq = none
    f0dc:	b.eq	f1a4 <grub_mod_fini+0xee7c>  // b.none
    f0e0:	mov	x1, x21
    f0e4:	mov	x5, x27
    f0e8:	mov	w4, w22
    f0ec:	mov	x3, x24
    f0f0:	mov	x2, x28
    f0f4:	mov	x0, x23
    f0f8:	bl	cf88 <grub_mod_fini+0xcc60>
    f0fc:	mov	x19, x0
    f100:	ldr	w1, [x27]
    f104:	cmp	w1, #0x0
    f108:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    f10c:	b.eq	f1f0 <grub_mod_fini+0xeec8>  // b.none
    f110:	cmp	x20, #0x0
    f114:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    f118:	b.eq	f0bc <grub_mod_fini+0xed94>  // b.none
    f11c:	ldr	w2, [x26, #128]
    f120:	cmp	w2, #0xf
    f124:	b.eq	f1c4 <grub_mod_fini+0xee9c>  // b.none
    f128:	sbfiz	x3, x2, #6, #32
    f12c:	sxtw	x1, w2
    f130:	ldr	x0, [x26, #112]
    f134:	add	x5, x3, #0x8
    f138:	add	w2, w2, #0x1
    f13c:	add	x3, x3, #0x30
    f140:	lsl	x1, x1, #6
    f144:	add	x4, x0, x3
    f148:	add	x3, x0, x1
    f14c:	add	x1, x1, #0x20
    f150:	str	w2, [x26, #128]
    f154:	add	x1, x0, x1
    f158:	mov	w2, #0x10                  	// #16
    f15c:	add	x0, x0, x5
    f160:	stp	xzr, x20, [x3, #8]
    f164:	str	x19, [x3, #24]
    f168:	strb	w2, [x4, #8]
    f16c:	ldrb	w2, [x1, #26]
    f170:	and	w2, w2, #0xfffffff3
    f174:	strb	w2, [x1, #26]
    f178:	mov	w1, #0xffffffff            	// #-1
    f17c:	stp	xzr, xzr, [x3, #32]
    f180:	str	w1, [x3, #64]
    f184:	str	x0, [x20]
    f188:	str	x0, [x19]
    f18c:	cbz	x0, f204 <grub_mod_fini+0xeedc>
    f190:	mov	x20, x0
    f194:	ldrb	w0, [x28, #8]
    f198:	and	w1, w0, #0xfffffff7
    f19c:	cmp	w1, #0x2
    f1a0:	b.ne	f0d4 <grub_mod_fini+0xedac>  // b.any
    f1a4:	mov	x0, x20
    f1a8:	ldp	x19, x20, [sp, #16]
    f1ac:	ldp	x21, x22, [sp, #32]
    f1b0:	ldp	x23, x24, [sp, #48]
    f1b4:	ldp	x25, x26, [sp, #64]
    f1b8:	ldp	x27, x28, [sp, #80]
    f1bc:	ldp	x29, x30, [sp], #96
    f1c0:	ret
    f1c4:	mov	x0, #0x3c8                 	// #968
    f1c8:	bl	0 <grub_malloc>
    f1cc:	cbz	x0, f204 <grub_mod_fini+0xeedc>
    f1d0:	ldr	x1, [x26, #112]
    f1d4:	str	x1, [x0]
    f1d8:	mov	w2, #0x1                   	// #1
    f1dc:	mov	x3, #0x30                  	// #48
    f1e0:	mov	x5, #0x8                   	// #8
    f1e4:	mov	x1, #0x0                   	// #0
    f1e8:	str	x0, [x26, #112]
    f1ec:	b	f140 <grub_mod_fini+0xee18>
    f1f0:	cbz	x20, f240 <grub_mod_fini+0xef18>
    f1f4:	mov	x0, x20
    f1f8:	mov	x20, #0x0                   	// #0
    f1fc:	bl	3e18 <grub_mod_fini+0x3af0>
    f200:	b	f1a4 <grub_mod_fini+0xee7c>
    f204:	mov	x0, x19
    f208:	bl	3e18 <grub_mod_fini+0x3af0>
    f20c:	mov	x0, x20
    f210:	bl	3e18 <grub_mod_fini+0x3af0>
    f214:	mov	w0, #0xc                   	// #12
    f218:	str	w0, [x27]
    f21c:	mov	x20, #0x0                   	// #0
    f220:	mov	x0, x20
    f224:	ldp	x19, x20, [sp, #16]
    f228:	ldp	x21, x22, [sp, #32]
    f22c:	ldp	x23, x24, [sp, #48]
    f230:	ldp	x25, x26, [sp, #64]
    f234:	ldp	x27, x28, [sp, #80]
    f238:	ldp	x29, x30, [sp], #96
    f23c:	ret
    f240:	mov	x20, #0x0                   	// #0
    f244:	b	f1a4 <grub_mod_fini+0xee7c>
    f248:	stp	x29, x30, [sp, #-192]!
    f24c:	mov	x29, sp
    f250:	stp	x25, x26, [sp, #64]
    f254:	mov	x25, x2
    f258:	ldr	x26, [x1]
    f25c:	stp	x23, x24, [sp, #48]
    f260:	mov	x23, x5
    f264:	mov	x24, x0
    f268:	stp	x19, x20, [sp, #16]
    f26c:	mov	x20, x1
    f270:	mov	w19, w4
    f274:	stp	x21, x22, [sp, #32]
    f278:	stp	x27, x28, [sp, #80]
    f27c:	mov	x28, x3
    f280:	ldr	x22, [x26, #152]
    f284:	bl	f050 <grub_mod_fini+0xed28>
    f288:	ldr	w1, [x23]
    f28c:	cmp	w1, #0x0
    f290:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    f294:	b.eq	fad4 <grub_mod_fini+0xf7ac>  // b.none
    f298:	mov	x27, x0
    f29c:	mov	x0, #0x8400                	// #33792
    f2a0:	and	x0, x28, x0
    f2a4:	mov	x1, #0x1200                	// #4608
    f2a8:	and	x1, x28, x1
    f2ac:	str	x0, [sp, #136]
    f2b0:	mov	x0, #0x402                 	// #1026
    f2b4:	and	x0, x28, x0
    f2b8:	str	x1, [sp, #120]
    f2bc:	and	x1, x28, #0x2000
    f2c0:	stp	x1, x0, [sp, #104]
    f2c4:	and	x0, x28, #0x8
    f2c8:	str	x0, [sp, #152]
    f2cc:	and	x0, x28, #0x800
    f2d0:	str	x0, [sp, #160]
    f2d4:	and	x0, x28, #0x80000
    f2d8:	str	x0, [sp, #144]
    f2dc:	and	x0, x28, #0x4000
    f2e0:	str	x0, [sp, #168]
    f2e4:	nop
    f2e8:	ldrb	w0, [x25, #8]
    f2ec:	cmp	w0, #0xa
    f2f0:	b.ne	f4a4 <grub_mod_fini+0xf17c>  // b.any
    f2f4:	ldr	w1, [x24, #56]
    f2f8:	ldr	w0, [x24, #72]
    f2fc:	cmp	w0, w1
    f300:	b.le	f5d4 <grub_mod_fini+0xf2ac>
    f304:	ldr	x5, [x24, #8]
    f308:	sxtw	x12, w1
    f30c:	ldrb	w2, [x25, #10]
    f310:	add	w4, w1, #0x1
    f314:	ldr	w3, [x24, #104]
    f318:	ldrb	w0, [x5, w1, sxtw]
    f31c:	and	w2, w2, #0xffffff9f
    f320:	strb	w0, [x25]
    f324:	cmp	w3, #0x1
    f328:	strb	w2, [x25, #10]
    f32c:	b.le	f5e8 <grub_mod_fini+0xf2c0>
    f330:	ldr	w2, [x24, #44]
    f334:	cmp	w1, w2
    f338:	b.eq	f34c <grub_mod_fini+0xf024>  // b.none
    f33c:	ldr	x2, [x24, #16]
    f340:	ldr	w2, [x2, x12, lsl #2]
    f344:	cmn	w2, #0x1
    f348:	b.eq	f708 <grub_mod_fini+0xf3e0>  // b.none
    f34c:	cmp	w0, #0x5c
    f350:	b.eq	f648 <grub_mod_fini+0xf320>  // b.none
    f354:	ldr	x1, [x24, #16]
    f358:	mov	w2, #0x1                   	// #1
    f35c:	strb	w2, [x25, #8]
    f360:	mov	w2, #0x1                   	// #1
    f364:	ldr	w3, [x1, x12, lsl #2]
    f368:	and	w1, w3, #0xffffffdf
    f36c:	sub	w1, w1, #0x41
    f370:	cmp	w1, #0x19
    f374:	b.ls	f38c <grub_mod_fini+0xf064>  // b.plast
    f378:	sub	w1, w3, #0x30
    f37c:	cmp	w1, #0x9
    f380:	cset	w2, ls  // ls = plast
    f384:	cmp	w3, #0x5f
    f388:	csinc	w2, w2, wzr, ne  // ne = any
    f38c:	ldrb	w1, [x25, #10]
    f390:	cmp	w0, #0x2e
    f394:	bfi	w1, w2, #6, #1
    f398:	strb	w1, [x25, #10]
    f39c:	b.eq	f638 <grub_mod_fini+0xf310>  // b.none
    f3a0:	b.hi	f550 <grub_mod_fini+0xf228>  // b.pmore
    f3a4:	cmp	w0, #0x29
    f3a8:	b.eq	f7e8 <grub_mod_fini+0xf4c0>  // b.none
    f3ac:	b.hi	f528 <grub_mod_fini+0xf200>  // b.pmore
    f3b0:	cmp	w0, #0x24
    f3b4:	b.eq	f7bc <grub_mod_fini+0xf494>  // b.none
    f3b8:	cmp	w0, #0x28
    f3bc:	b.ne	f4c4 <grub_mod_fini+0xf19c>  // b.any
    f3c0:	ldr	x0, [sp, #104]
    f3c4:	cbnz	x0, f778 <grub_mod_fini+0xf450>
    f3c8:	str	w4, [x24, #56]
    f3cc:	ldr	x21, [x26, #152]
    f3d0:	str	x22, [x26, #152]
    f3d4:	mov	x3, x28
    f3d8:	mov	x1, x20
    f3dc:	mov	x5, x23
    f3e0:	mov	w4, w19
    f3e4:	mov	x2, x25
    f3e8:	mov	x0, x24
    f3ec:	bl	f050 <grub_mod_fini+0xed28>
    f3f0:	mov	x3, x0
    f3f4:	ldr	w1, [x23]
    f3f8:	cmp	w1, #0x0
    f3fc:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    f400:	b.eq	fac0 <grub_mod_fini+0xf798>  // b.none
    f404:	ldr	x0, [x26, #152]
    f408:	orr	x21, x0, x21
    f40c:	str	x21, [x26, #152]
    f410:	ldr	w2, [x26, #128]
    f414:	cmp	w2, #0xf
    f418:	b.eq	f4f0 <grub_mod_fini+0xf1c8>  // b.none
    f41c:	sbfiz	x4, x2, #6, #32
    f420:	sxtw	x1, w2
    f424:	add	x12, x4, #0x30
    f428:	add	x0, x4, #0x8
    f42c:	ldr	x4, [x26, #112]
    f430:	add	w5, w2, #0x1
    f434:	lsl	x1, x1, #6
    f438:	add	x12, x4, x12
    f43c:	add	x2, x4, x1
    f440:	add	x1, x1, #0x20
    f444:	str	w5, [x26, #128]
    f448:	add	x1, x4, x1
    f44c:	mov	w13, #0xa                   	// #10
    f450:	add	x4, x4, x0
    f454:	stp	xzr, x27, [x2, #8]
    f458:	mov	w5, #0xffffffff            	// #-1
    f45c:	str	x3, [x2, #24]
    f460:	strb	w13, [x12, #8]
    f464:	ldrb	w0, [x1, #26]
    f468:	and	w0, w0, #0xfffffff3
    f46c:	strb	w0, [x1, #26]
    f470:	stp	xzr, xzr, [x2, #32]
    f474:	str	w5, [x2, #64]
    f478:	cbz	x27, f480 <grub_mod_fini+0xf158>
    f47c:	str	x4, [x27]
    f480:	cbz	x3, f494 <grub_mod_fini+0xf16c>
    f484:	str	x4, [x3]
    f488:	cbz	x4, f498 <grub_mod_fini+0xf170>
    f48c:	mov	x27, x4
    f490:	b	f2e8 <grub_mod_fini+0xefc0>
    f494:	cbnz	x4, f48c <grub_mod_fini+0xf164>
    f498:	mov	w0, #0xc                   	// #12
    f49c:	mov	x27, #0x0                   	// #0
    f4a0:	str	w0, [x23]
    f4a4:	mov	x0, x27
    f4a8:	ldp	x19, x20, [sp, #16]
    f4ac:	ldp	x21, x22, [sp, #32]
    f4b0:	ldp	x23, x24, [sp, #48]
    f4b4:	ldp	x25, x26, [sp, #64]
    f4b8:	ldp	x27, x28, [sp, #80]
    f4bc:	ldp	x29, x30, [sp], #192
    f4c0:	ret
    f4c4:	cmp	w0, #0xa
    f4c8:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f4cc:	ldr	x1, [sp, #160]
    f4d0:	cbz	x1, f3c8 <grub_mod_fini+0xf0a0>
    f4d4:	strb	w0, [x25, #8]
    f4d8:	mov	x3, #0x0                   	// #0
    f4dc:	str	w4, [x24, #56]
    f4e0:	ldr	w2, [x26, #128]
    f4e4:	cmp	w2, #0xf
    f4e8:	b.ne	f41c <grub_mod_fini+0xf0f4>  // b.any
    f4ec:	nop
    f4f0:	mov	x0, #0x3c8                 	// #968
    f4f4:	str	x3, [sp, #128]
    f4f8:	bl	0 <grub_malloc>
    f4fc:	mov	x4, x0
    f500:	cbz	x0, f498 <grub_mod_fini+0xf170>
    f504:	ldr	x0, [x26, #112]
    f508:	str	x0, [x4]
    f50c:	mov	w5, #0x1                   	// #1
    f510:	mov	x12, #0x30                  	// #48
    f514:	mov	x1, #0x0                   	// #0
    f518:	mov	x0, #0x8                   	// #8
    f51c:	str	x4, [x26, #112]
    f520:	ldr	x3, [sp, #128]
    f524:	b	f434 <grub_mod_fini+0xf10c>
    f528:	cmp	w0, #0x2a
    f52c:	b.eq	f798 <grub_mod_fini+0xf470>  // b.none
    f530:	cmp	w0, #0x2b
    f534:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f538:	ldr	x0, [sp, #112]
    f53c:	cbnz	x0, f3c8 <grub_mod_fini+0xf0a0>
    f540:	mov	w0, #0x12                  	// #18
    f544:	strb	w0, [x25, #8]
    f548:	str	w4, [x24, #56]
    f54c:	b	f3cc <grub_mod_fini+0xf0a4>
    f550:	cmp	w0, #0x7b
    f554:	b.eq	f804 <grub_mod_fini+0xf4dc>  // b.none
    f558:	b.hi	f584 <grub_mod_fini+0xf25c>  // b.pmore
    f55c:	cmp	w0, #0x5b
    f560:	b.eq	f788 <grub_mod_fini+0xf460>  // b.none
    f564:	cmp	w0, #0x5e
    f568:	b.ne	f5b4 <grub_mod_fini+0xf28c>  // b.any
    f56c:	mov	w0, #0xc                   	// #12
    f570:	strb	w0, [x25, #8]
    f574:	mov	w0, #0x10                  	// #16
    f578:	str	w0, [x25]
    f57c:	str	w4, [x24, #56]
    f580:	b	f3cc <grub_mod_fini+0xf0a4>
    f584:	cmp	w0, #0x7c
    f588:	b.eq	f7a8 <grub_mod_fini+0xf480>  // b.none
    f58c:	cmp	w0, #0x7d
    f590:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f594:	ldr	x1, [sp, #120]
    f598:	mov	x0, #0x1200                	// #4608
    f59c:	cmp	x1, x0
    f5a0:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f5a4:	mov	w0, #0x18                  	// #24
    f5a8:	strb	w0, [x25, #8]
    f5ac:	str	w4, [x24, #56]
    f5b0:	b	f3cc <grub_mod_fini+0xf0a4>
    f5b4:	cmp	w0, #0x3f
    f5b8:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f5bc:	ldr	x0, [sp, #112]
    f5c0:	cbnz	x0, f3c8 <grub_mod_fini+0xf0a0>
    f5c4:	mov	w0, #0x13                  	// #19
    f5c8:	strb	w0, [x25, #8]
    f5cc:	str	w4, [x24, #56]
    f5d0:	b	f3cc <grub_mod_fini+0xf0a4>
    f5d4:	mov	w0, #0x2                   	// #2
    f5d8:	strb	w0, [x25, #8]
    f5dc:	mov	x3, #0x0                   	// #0
    f5e0:	str	w1, [x24, #56]
    f5e4:	b	f410 <grub_mod_fini+0xf0e8>
    f5e8:	cmp	w0, #0x5c
    f5ec:	b.eq	f648 <grub_mod_fini+0xf320>  // b.none
    f5f0:	and	w1, w0, #0xffffffdf
    f5f4:	mov	w2, #0x1                   	// #1
    f5f8:	sub	w1, w1, #0x41
    f5fc:	strb	w2, [x25, #8]
    f600:	and	w1, w1, #0xff
    f604:	mov	w2, #0x1                   	// #1
    f608:	cmp	w1, #0x19
    f60c:	b.ls	f38c <grub_mod_fini+0xf064>  // b.plast
    f610:	sub	w1, w0, #0x30
    f614:	cmp	w1, #0x9
    f618:	ldrb	w1, [x25, #10]
    f61c:	cset	w2, ls  // ls = plast
    f620:	cmp	w0, #0x5f
    f624:	csinc	w2, w2, wzr, ne  // ne = any
    f628:	cmp	w0, #0x2e
    f62c:	bfi	w1, w2, #6, #1
    f630:	strb	w1, [x25, #10]
    f634:	b.ne	f3a0 <grub_mod_fini+0xf078>  // b.any
    f638:	mov	w0, #0x5                   	// #5
    f63c:	strb	w0, [x25, #8]
    f640:	str	w4, [x24, #56]
    f644:	b	f3cc <grub_mod_fini+0xf0a4>
    f648:	ldr	w0, [x24, #64]
    f64c:	cmp	w0, w4
    f650:	b.gt	f664 <grub_mod_fini+0xf33c>
    f654:	mov	w0, #0x24                  	// #36
    f658:	strb	w0, [x25, #8]
    f65c:	str	w4, [x24, #56]
    f660:	b	f3cc <grub_mod_fini+0xf0a4>
    f664:	ldrb	w0, [x24, #99]
    f668:	add	w1, w1, #0x2
    f66c:	cbnz	w0, f824 <grub_mod_fini+0xf4fc>
    f670:	ldrb	w0, [x5, w4, sxtw]
    f674:	mov	w2, #0x1                   	// #1
    f678:	strb	w0, [x25]
    f67c:	strb	w2, [x25, #8]
    f680:	cmp	w3, #0x1
    f684:	b.le	f730 <grub_mod_fini+0xf408>
    f688:	ldr	x2, [x24, #16]
    f68c:	add	x2, x2, w4, sxtw #2
    f690:	ldr	w4, [x2]
    f694:	mov	w3, #0x1                   	// #1
    f698:	and	w2, w4, #0xffffffdf
    f69c:	sub	w2, w2, #0x41
    f6a0:	cmp	w2, #0x19
    f6a4:	b.hi	f760 <grub_mod_fini+0xf438>  // b.pmore
    f6a8:	ldrb	w2, [x25, #10]
    f6ac:	bfi	w2, w3, #6, #1
    f6b0:	strb	w2, [x25, #10]
    f6b4:	sub	w2, w0, #0x27
    f6b8:	cmp	w2, #0x56
    f6bc:	b.hi	f6d8 <grub_mod_fini+0xf3b0>  // b.pmore
    f6c0:	adrp	x3, 0 <grub_mod_init-0x288>
    f6c4:	ldr	x3, [x3]
    f6c8:	ldrh	w2, [x3, w2, uxtw #1]
    f6cc:	adr	x3, f6d8 <grub_mod_fini+0xf3b0>
    f6d0:	add	x2, x3, w2, sxth #2
    f6d4:	br	x2
    f6d8:	ldrb	w0, [x25, #8]
    f6dc:	mov	x3, #0x0                   	// #0
    f6e0:	str	w1, [x24, #56]
    f6e4:	and	w2, w0, #0xfffffff7
    f6e8:	and	w2, w2, #0xff
    f6ec:	cmp	w2, #0x2
    f6f0:	b.eq	f410 <grub_mod_fini+0xf0e8>  // b.none
    f6f4:	cmp	w19, #0x0
    f6f8:	mov	x3, #0x0                   	// #0
    f6fc:	ccmp	w0, #0x9, #0x0, ne  // ne = any
    f700:	b.eq	f410 <grub_mod_fini+0xf0e8>  // b.none
    f704:	b	f3cc <grub_mod_fini+0xf0a4>
    f708:	ldr	w0, [x25, #8]
    f70c:	mov	w1, #0xff00                	// #65280
    f710:	movk	w1, #0xffdf, lsl #16
    f714:	and	w0, w0, w1
    f718:	mov	w1, #0x1                   	// #1
    f71c:	movk	w1, #0x20, lsl #16
    f720:	orr	w0, w0, w1
    f724:	str	w0, [x25, #8]
    f728:	str	w4, [x24, #56]
    f72c:	b	f3cc <grub_mod_fini+0xf0a4>
    f730:	and	w2, w0, #0xffffffdf
    f734:	mov	w3, #0x1                   	// #1
    f738:	sub	w2, w2, #0x41
    f73c:	and	w2, w2, #0xff
    f740:	cmp	w2, #0x19
    f744:	b.ls	f6a8 <grub_mod_fini+0xf380>  // b.plast
    f748:	sub	w2, w0, #0x30
    f74c:	cmp	w2, #0x9
    f750:	cset	w3, ls  // ls = plast
    f754:	cmp	w0, #0x5f
    f758:	csinc	w3, w3, wzr, ne  // ne = any
    f75c:	b	f6a8 <grub_mod_fini+0xf380>
    f760:	sub	w2, w4, #0x30
    f764:	cmp	w2, #0x9
    f768:	cset	w3, ls  // ls = plast
    f76c:	cmp	w4, #0x5f
    f770:	csinc	w3, w3, wzr, ne  // ne = any
    f774:	b	f6a8 <grub_mod_fini+0xf380>
    f778:	mov	w0, #0x8                   	// #8
    f77c:	strb	w0, [x25, #8]
    f780:	str	w4, [x24, #56]
    f784:	b	f3cc <grub_mod_fini+0xf0a4>
    f788:	mov	w0, #0x14                  	// #20
    f78c:	strb	w0, [x25, #8]
    f790:	str	w4, [x24, #56]
    f794:	b	f3cc <grub_mod_fini+0xf0a4>
    f798:	mov	w0, #0xb                   	// #11
    f79c:	strb	w0, [x25, #8]
    f7a0:	str	w4, [x24, #56]
    f7a4:	b	f3cc <grub_mod_fini+0xf0a4>
    f7a8:	ldr	x0, [sp, #136]
    f7ac:	cmp	x0, #0x8, lsl #12
    f7b0:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f7b4:	mov	w0, #0xa                   	// #10
    f7b8:	b	f4d4 <grub_mod_fini+0xf1ac>
    f7bc:	ldr	x0, [sp, #152]
    f7c0:	cbnz	x0, f7d0 <grub_mod_fini+0xf4a8>
    f7c4:	ldr	w0, [x24, #64]
    f7c8:	cmp	w0, w4
    f7cc:	b.ne	fa84 <grub_mod_fini+0xf75c>  // b.any
    f7d0:	mov	w0, #0xc                   	// #12
    f7d4:	strb	w0, [x25, #8]
    f7d8:	mov	w0, #0x20                  	// #32
    f7dc:	str	w0, [x25]
    f7e0:	str	w4, [x24, #56]
    f7e4:	b	f3cc <grub_mod_fini+0xf0a4>
    f7e8:	ldr	x0, [sp, #104]
    f7ec:	cbz	x0, f3c8 <grub_mod_fini+0xf0a0>
    f7f0:	mov	w0, #0x9                   	// #9
    f7f4:	strb	w0, [x25, #8]
    f7f8:	mov	w0, #0x9                   	// #9
    f7fc:	str	w4, [x24, #56]
    f800:	b	f6f4 <grub_mod_fini+0xf3cc>
    f804:	ldr	x1, [sp, #120]
    f808:	mov	x0, #0x1200                	// #4608
    f80c:	cmp	x1, x0
    f810:	b.ne	f3c8 <grub_mod_fini+0xf0a0>  // b.any
    f814:	mov	w0, #0x17                  	// #23
    f818:	strb	w0, [x25, #8]
    f81c:	str	w4, [x24, #56]
    f820:	b	f3cc <grub_mod_fini+0xf0a4>
    f824:	cmp	w3, #0x1
    f828:	b.le	f85c <grub_mod_fini+0xf534>
    f82c:	ldr	x2, [x24, #16]
    f830:	sxtw	x0, w4
    f834:	ldr	w12, [x2, x0, lsl #2]
    f838:	add	x2, x2, w4, sxtw #2
    f83c:	cmn	w12, #0x1
    f840:	b.eq	fae8 <grub_mod_fini+0xf7c0>  // b.none
    f844:	ldr	w12, [x24, #44]
    f848:	cmp	w12, w1
    f84c:	b.eq	f85c <grub_mod_fini+0xf534>  // b.none
    f850:	ldr	w12, [x2, #4]
    f854:	cmn	w12, #0x1
    f858:	b.eq	fae8 <grub_mod_fini+0xf7c0>  // b.none
    f85c:	ldrb	w2, [x24, #100]
    f860:	ldr	w0, [x24, #40]
    f864:	ldr	x12, [x24]
    f868:	cbz	w2, fadc <grub_mod_fini+0xf7b4>
    f86c:	ldr	x2, [x24, #24]
    f870:	ldr	w2, [x2, w4, sxtw #2]
    f874:	add	w0, w0, w2
    f878:	ldrb	w0, [x12, w0, sxtw]
    f87c:	tbz	w0, #7, f674 <grub_mod_fini+0xf34c>
    f880:	b	f670 <grub_mod_fini+0xf348>
    f884:	ldr	x2, [sp, #168]
    f888:	cbnz	x2, f6d8 <grub_mod_fini+0xf3b0>
    f88c:	sub	w0, w0, #0x31
    f890:	str	w0, [x25]
    f894:	mov	w0, #0x4                   	// #4
    f898:	strb	w0, [x25, #8]
    f89c:	str	w1, [x24, #56]
    f8a0:	b	f3cc <grub_mod_fini+0xf0a4>
    f8a4:	ldr	x0, [sp, #144]
    f8a8:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f8ac:	mov	w0, #0xc                   	// #12
    f8b0:	strb	w0, [x25, #8]
    f8b4:	mov	w0, #0x200                 	// #512
    f8b8:	str	w0, [x25]
    f8bc:	str	w1, [x24, #56]
    f8c0:	b	f3cc <grub_mod_fini+0xf0a4>
    f8c4:	ldr	x0, [sp, #144]
    f8c8:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f8cc:	mov	w0, #0x23                  	// #35
    f8d0:	strb	w0, [x25, #8]
    f8d4:	str	w1, [x24, #56]
    f8d8:	b	f3cc <grub_mod_fini+0xf0a4>
    f8dc:	ldr	x0, [sp, #144]
    f8e0:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f8e4:	mov	w0, #0x21                  	// #33
    f8e8:	strb	w0, [x25, #8]
    f8ec:	str	w1, [x24, #56]
    f8f0:	b	f3cc <grub_mod_fini+0xf0a4>
    f8f4:	ldr	x0, [sp, #144]
    f8f8:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f8fc:	mov	w0, #0xc                   	// #12
    f900:	strb	w0, [x25, #8]
    f904:	mov	w0, #0x40                  	// #64
    f908:	str	w0, [x25]
    f90c:	str	w1, [x24, #56]
    f910:	b	f3cc <grub_mod_fini+0xf0a4>
    f914:	ldr	x0, [sp, #144]
    f918:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f91c:	mov	w0, #0xc                   	// #12
    f920:	strb	w0, [x25, #8]
    f924:	mov	w0, #0x100                 	// #256
    f928:	str	w0, [x25]
    f92c:	str	w1, [x24, #56]
    f930:	b	f3cc <grub_mod_fini+0xf0a4>
    f934:	ldr	x0, [sp, #144]
    f938:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f93c:	mov	w0, #0x22                  	// #34
    f940:	strb	w0, [x25, #8]
    f944:	str	w1, [x24, #56]
    f948:	b	f3cc <grub_mod_fini+0xf0a4>
    f94c:	ldr	x0, [sp, #144]
    f950:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f954:	mov	w0, #0x20                  	// #32
    f958:	strb	w0, [x25, #8]
    f95c:	str	w1, [x24, #56]
    f960:	b	f3cc <grub_mod_fini+0xf0a4>
    f964:	ldr	x0, [sp, #120]
    f968:	cmp	x0, #0x200
    f96c:	b.ne	f6d8 <grub_mod_fini+0xf3b0>  // b.any
    f970:	mov	w0, #0x17                  	// #23
    f974:	strb	w0, [x25, #8]
    f978:	str	w1, [x24, #56]
    f97c:	b	f3cc <grub_mod_fini+0xf0a4>
    f980:	ldr	x0, [sp, #144]
    f984:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f988:	mov	w0, #0xc                   	// #12
    f98c:	strb	w0, [x25, #8]
    f990:	mov	w0, #0x80                  	// #128
    f994:	str	w0, [x25]
    f998:	str	w1, [x24, #56]
    f99c:	b	f3cc <grub_mod_fini+0xf0a4>
    f9a0:	ldr	x0, [sp, #104]
    f9a4:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f9a8:	mov	w0, #0x8                   	// #8
    f9ac:	strb	w0, [x25, #8]
    f9b0:	str	w1, [x24, #56]
    f9b4:	b	f3cc <grub_mod_fini+0xf0a4>
    f9b8:	ldr	x0, [sp, #104]
    f9bc:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f9c0:	mov	w0, #0x9                   	// #9
    f9c4:	strb	w0, [x25, #8]
    f9c8:	mov	w0, #0x9                   	// #9
    f9cc:	str	w1, [x24, #56]
    f9d0:	b	f6f4 <grub_mod_fini+0xf3cc>
    f9d4:	ldr	x0, [sp, #112]
    f9d8:	cmp	x0, #0x2
    f9dc:	b.ne	f6d8 <grub_mod_fini+0xf3b0>  // b.any
    f9e0:	mov	w0, #0x12                  	// #18
    f9e4:	strb	w0, [x25, #8]
    f9e8:	str	w1, [x24, #56]
    f9ec:	b	f3cc <grub_mod_fini+0xf0a4>
    f9f0:	ldr	x0, [sp, #144]
    f9f4:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    f9f8:	mov	w0, #0xc                   	// #12
    f9fc:	strb	w0, [x25, #8]
    fa00:	mov	w0, #0x9                   	// #9
    fa04:	str	w0, [x25]
    fa08:	str	w1, [x24, #56]
    fa0c:	b	f3cc <grub_mod_fini+0xf0a4>
    fa10:	ldr	x0, [sp, #112]
    fa14:	cmp	x0, #0x2
    fa18:	b.ne	f6d8 <grub_mod_fini+0xf3b0>  // b.any
    fa1c:	mov	w0, #0x13                  	// #19
    fa20:	strb	w0, [x25, #8]
    fa24:	str	w1, [x24, #56]
    fa28:	b	f3cc <grub_mod_fini+0xf0a4>
    fa2c:	ldr	x0, [sp, #144]
    fa30:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    fa34:	mov	w0, #0xc                   	// #12
    fa38:	strb	w0, [x25, #8]
    fa3c:	mov	w0, #0x6                   	// #6
    fa40:	str	w0, [x25]
    fa44:	str	w1, [x24, #56]
    fa48:	b	f3cc <grub_mod_fini+0xf0a4>
    fa4c:	ldr	x0, [sp, #136]
    fa50:	cbnz	x0, f6d8 <grub_mod_fini+0xf3b0>
    fa54:	mov	w0, #0xa                   	// #10
    fa58:	strb	w0, [x25, #8]
    fa5c:	mov	x3, #0x0                   	// #0
    fa60:	str	w1, [x24, #56]
    fa64:	b	f410 <grub_mod_fini+0xf0e8>
    fa68:	ldr	x0, [sp, #120]
    fa6c:	cmp	x0, #0x200
    fa70:	b.ne	f6d8 <grub_mod_fini+0xf3b0>  // b.any
    fa74:	mov	w0, #0x18                  	// #24
    fa78:	strb	w0, [x25, #8]
    fa7c:	str	w1, [x24, #56]
    fa80:	b	f3cc <grub_mod_fini+0xf0a4>
    fa84:	str	w4, [x24, #56]
    fa88:	orr	x2, x28, #0x800000
    fa8c:	mov	x1, x24
    fa90:	add	x0, sp, #0xb0
    fa94:	bl	24a8 <grub_mod_fini+0x2180>
    fa98:	ldr	w1, [x24, #56]
    fa9c:	ldrb	w0, [sp, #184]
    faa0:	sub	w2, w1, #0x1
    faa4:	str	w2, [x24, #56]
    faa8:	sub	w0, w0, #0x9
    faac:	and	w0, w0, #0xff
    fab0:	cmp	w0, #0x1
    fab4:	b.hi	f6d8 <grub_mod_fini+0xf3b0>  // b.pmore
    fab8:	mov	w4, w1
    fabc:	b	f7d0 <grub_mod_fini+0xf4a8>
    fac0:	cbz	x27, fad4 <grub_mod_fini+0xf7ac>
    fac4:	mov	x0, x27
    fac8:	mov	x27, #0x0                   	// #0
    facc:	bl	3e18 <grub_mod_fini+0x3af0>
    fad0:	b	f4a4 <grub_mod_fini+0xf17c>
    fad4:	mov	x27, #0x0                   	// #0
    fad8:	b	f4a4 <grub_mod_fini+0xf17c>
    fadc:	add	w0, w0, w4
    fae0:	ldrb	w0, [x12, w0, sxtw]
    fae4:	b	f674 <grub_mod_fini+0xf34c>
    fae8:	ldrb	w0, [x5, x0]
    faec:	mov	w3, #0x1                   	// #1
    faf0:	strb	w0, [x25]
    faf4:	strb	w3, [x25, #8]
    faf8:	b	f690 <grub_mod_fini+0xf368>
    fafc:	nop
	...
    fb08:	stp	x29, x30, [sp, #-256]!
    fb0c:	mov	x29, sp
    fb10:	stp	x21, x22, [sp, #32]
    fb14:	mov	x21, x0
    fb18:	ldrb	w0, [x0, #56]
    fb1c:	stp	x19, x20, [sp, #16]
    fb20:	mov	x22, x3
    fb24:	mov	w3, #0xffffff90            	// #-112
    fb28:	stp	x23, x24, [sp, #48]
    fb2c:	mov	x24, x1
    fb30:	and	w0, w0, w3
    fb34:	ldp	x19, x1, [x21]
    fb38:	stp	xzr, x22, [x21, #16]
    fb3c:	mov	x20, x2
    fb40:	str	xzr, [x21, #48]
    fb44:	strb	w0, [x21, #56]
    fb48:	str	wzr, [sp, #120]
    fb4c:	cmp	x1, #0xd7
    fb50:	b.ls	10eb8 <grub_mod_fini+0x10b90>  // b.plast
    fb54:	mov	x2, #0xd8                  	// #216
    fb58:	str	x2, [x21, #16]
    fb5c:	mov	x0, x19
    fb60:	mov	w1, #0x0                   	// #0
    fb64:	bl	0 <grub_memset>
    fb68:	mov	w0, #0xf                   	// #15
    fb6c:	str	w0, [x19, #128]
    fb70:	mov	x0, #0x3ffffffe            	// #1073741822
    fb74:	cmp	x20, x0
    fb78:	b.hi	10368 <grub_mod_fini+0x10040>  // b.pmore
    fb7c:	add	x0, x20, #0x1
    fb80:	str	x0, [x19, #8]
    fb84:	lsl	x0, x0, #4
    fb88:	bl	0 <grub_malloc>
    fb8c:	str	x0, [x19]
    fb90:	cbz	x20, 10ed8 <grub_mod_fini+0x10bb0>
    fb94:	mov	w2, #0x1                   	// #1
    fb98:	lsl	w0, w2, #1
    fb9c:	mov	x2, x0
    fba0:	cmp	x20, w0, uxtw
    fba4:	b.cs	fb98 <grub_mod_fini+0xf870>  // b.hs, b.nlast
    fba8:	lsl	x0, x0, #4
    fbac:	sub	w23, w2, #0x1
    fbb0:	bl	0 <grub_zalloc>
    fbb4:	str	x0, [x19, #64]
    fbb8:	adrp	x1, 0 <grub_mod_init-0x288>
    fbbc:	adrp	x3, 0 <grub_mod_init-0x288>
    fbc0:	mov	w2, #0x4                   	// #4
    fbc4:	str	w23, [x19, #132]
    fbc8:	ldr	x1, [x1]
    fbcc:	str	w2, [x19, #164]
    fbd0:	ldr	x0, [x3]
    fbd4:	bl	0 <grub_strcmp>
    fbd8:	cbz	w0, fd3c <grub_mod_fini+0xfa14>
    fbdc:	ldrb	w0, [x19, #160]
    fbe0:	ldr	w1, [x19, #164]
    fbe4:	and	w2, w0, #0xfffffff7
    fbe8:	strb	w2, [x19, #160]
    fbec:	cmp	w1, #0x1
    fbf0:	b.le	fc08 <grub_mod_fini+0xf8e0>
    fbf4:	tbz	w0, #2, 10394 <grub_mod_fini+0x1006c>
    fbf8:	adrp	x0, 0 <grub_mod_init-0x288>
    fbfc:	ldr	x0, [x0]
    fc00:	add	x0, x0, #0x88
    fc04:	str	x0, [x19, #120]
    fc08:	ldr	x0, [x19]
    fc0c:	cbz	x0, 10368 <grub_mod_fini+0x10040>
    fc10:	ldr	x0, [x19, #64]
    fc14:	stp	x25, x26, [sp, #64]
    fc18:	stp	x27, x28, [sp, #80]
    fc1c:	cbz	x0, 10360 <grub_mod_fini+0x10038>
    fc20:	ldr	x26, [x21, #40]
    fc24:	mov	x2, #0x70                  	// #112
    fc28:	mov	w1, #0x0                   	// #0
    fc2c:	add	x0, sp, #0x90
    fc30:	str	wzr, [sp, #120]
    fc34:	bl	0 <grub_memset>
    fc38:	ldrb	w0, [x19, #160]
    fc3c:	and	x23, x22, #0x400000
    fc40:	cmp	x23, #0x0
    fc44:	orr	x27, x26, x23
    fc48:	cset	w4, ne  // ne = any
    fc4c:	ldr	w1, [x19, #164]
    fc50:	cmp	x27, #0x0
    fc54:	ubfx	x3, x0, #2, #1
    fc58:	cset	w2, ne  // ne = any
    fc5c:	ubfx	x0, x0, #3, #1
    fc60:	str	x24, [sp, #144]
    fc64:	mov	w25, w20
    fc68:	stp	w20, w20, [sp, #204]
    fc6c:	stp	w20, w20, [sp, #212]
    fc70:	str	x26, [sp, #224]
    fc74:	strb	w4, [sp, #240]
    fc78:	strb	w3, [sp, #241]
    fc7c:	strb	w0, [sp, #242]
    fc80:	strb	w2, [sp, #243]
    fc84:	str	w1, [sp, #248]
    fc88:	cbnz	x20, 102fc <grub_mod_fini+0xffd4>
    fc8c:	ldr	x0, [sp, #152]
    fc90:	cmp	w2, #0x0
    fc94:	csel	x24, x0, x24, ne  // ne = any
    fc98:	str	x24, [sp, #152]
    fc9c:	cmp	w1, #0x1
    fca0:	cbz	x23, fd4c <grub_mod_fini+0xfa24>
    fca4:	b.le	10dfc <grub_mod_fini+0x10ad4>
    fca8:	mov	x24, #0x7fffffff            	// #2147483647
    fcac:	add	x0, sp, #0x90
    fcb0:	bl	8338 <grub_mod_fini+0x8010>
    fcb4:	cbnz	w0, 10280 <grub_mod_fini+0xff58>
    fcb8:	ldr	w0, [sp, #192]
    fcbc:	cmp	w25, w0
    fcc0:	b.le	10f48 <grub_mod_fini+0x10c20>
    fcc4:	ldr	w1, [x19, #164]
    fcc8:	ldr	w0, [sp, #188]
    fccc:	ldr	w20, [sp, #196]
    fcd0:	add	w0, w0, w1
    fcd4:	cmp	w20, w0
    fcd8:	b.gt	10f48 <grub_mod_fini+0x10c20>
    fcdc:	ldr	w0, [sp, #248]
    fce0:	lsl	w20, w20, #1
    fce4:	cmp	w0, #0x1
    fce8:	b.le	fd2c <grub_mod_fini+0xfa04>
    fcec:	cmp	x24, w20, sxtw
    fcf0:	sxtw	x26, w20
    fcf4:	b.cc	1027c <grub_mod_fini+0xff54>  // b.lo, b.ul, b.last
    fcf8:	ldr	x0, [sp, #160]
    fcfc:	lsl	x26, x26, #2
    fd00:	mov	x1, x26
    fd04:	bl	0 <grub_realloc>
    fd08:	mov	x2, x0
    fd0c:	cbz	x0, 1027c <grub_mod_fini+0xff54>
    fd10:	ldr	x0, [sp, #168]
    fd14:	str	x2, [sp, #160]
    fd18:	cbz	x0, fd2c <grub_mod_fini+0xfa04>
    fd1c:	mov	x1, x26
    fd20:	bl	0 <grub_realloc>
    fd24:	cbz	x0, 1027c <grub_mod_fini+0xff54>
    fd28:	str	x0, [sp, #168]
    fd2c:	ldrb	w0, [sp, #243]
    fd30:	cbnz	w0, 10260 <grub_mod_fini+0xff38>
    fd34:	str	w20, [sp, #196]
    fd38:	b	fcac <grub_mod_fini+0xf984>
    fd3c:	ldrb	w0, [x19, #160]
    fd40:	orr	w0, w0, #0x4
    fd44:	strb	w0, [x19, #160]
    fd48:	b	fbdc <grub_mod_fini+0xf8b4>
    fd4c:	b.gt	10c70 <grub_mod_fini+0x10948>
    fd50:	ldr	w0, [sp, #196]
    fd54:	cbz	x27, 10448 <grub_mod_fini+0x10120>
    fd58:	ldr	w3, [sp, #208]
    fd5c:	ldr	w1, [sp, #188]
    fd60:	cmp	w3, w0
    fd64:	csel	w3, w3, w0, le
    fd68:	cmp	w3, w1
    fd6c:	b.le	1101c <grub_mod_fini+0x10cf4>
    fd70:	ldr	w2, [sp, #184]
    fd74:	add	w0, w1, #0x1
    fd78:	ldr	x5, [sp, #144]
    fd7c:	add	w2, w1, w2
    fd80:	ldr	x4, [sp, #224]
    fd84:	cmp	w3, w0
    fd88:	ldrb	w2, [x5, w2, sxtw]
    fd8c:	ldrb	w2, [x4, x2]
    fd90:	strb	w2, [x24, w1, sxtw]
    fd94:	b.le	fdd0 <grub_mod_fini+0xfaa8>
    fd98:	sxtw	x2, w0
    fd9c:	nop
    fda0:	ldr	w1, [sp, #184]
    fda4:	ldr	x4, [sp, #144]
    fda8:	add	w1, w0, w1
    fdac:	ldr	x5, [sp, #224]
    fdb0:	add	w0, w0, #0x1
    fdb4:	ldrb	w4, [x4, w1, sxtw]
    fdb8:	cmp	w3, w0
    fdbc:	ldr	x1, [sp, #152]
    fdc0:	ldrb	w4, [x5, x4]
    fdc4:	strb	w4, [x1, x2]
    fdc8:	add	x2, x2, #0x1
    fdcc:	b.ne	fda0 <grub_mod_fini+0xfa78>  // b.any
    fdd0:	str	wzr, [sp, #120]
    fdd4:	stp	w3, w3, [sp, #188]
    fdd8:	ldr	x20, [x21]
    fddc:	str	xzr, [x21, #48]
    fde0:	orr	x2, x22, #0x800000
    fde4:	add	x1, sp, #0x90
    fde8:	add	x0, sp, #0x80
    fdec:	str	x22, [x20, #200]
    fdf0:	bl	24a8 <grub_mod_fini+0x2180>
    fdf4:	mov	w1, w0
    fdf8:	ldr	w6, [sp, #200]
    fdfc:	mov	x3, x22
    fe00:	add	x0, sp, #0x90
    fe04:	add	x2, sp, #0x80
    fe08:	add	w6, w6, w1
    fe0c:	add	x5, sp, #0x78
    fe10:	mov	x1, x21
    fe14:	mov	w4, #0x0                   	// #0
    fe18:	str	w6, [sp, #200]
    fe1c:	bl	f248 <grub_mod_fini+0xef20>
    fe20:	mov	x24, x0
    fe24:	ldr	w1, [sp, #120]
    fe28:	cmp	w1, #0x0
    fe2c:	ccmp	x0, #0x0, #0x0, ne  // ne = any
    fe30:	b.eq	1102c <grub_mod_fini+0x10d04>  // b.none
    fe34:	ldr	w2, [x20, #128]
    fe38:	cmp	w2, #0xf
    fe3c:	b.eq	10f10 <grub_mod_fini+0x10be8>  // b.none
    fe40:	sbfiz	x3, x2, #6, #32
    fe44:	sxtw	x1, w2
    fe48:	ldr	x5, [x20, #112]
    fe4c:	add	x22, x3, #0x8
    fe50:	add	x4, x3, #0x30
    fe54:	add	w3, w2, #0x1
    fe58:	lsl	x1, x1, #6
    fe5c:	add	x4, x5, x4
    fe60:	add	x2, x5, x1
    fe64:	add	x1, x1, #0x20
    fe68:	str	w3, [x20, #128]
    fe6c:	add	x1, x5, x1
    fe70:	mov	w0, #0x2                   	// #2
    fe74:	mov	w3, #0xffffffff            	// #-1
    fe78:	stp	xzr, xzr, [x2, #8]
    fe7c:	adds	x22, x5, x22
    fe80:	cset	w25, eq  // eq = none
    fe84:	str	xzr, [x2, #24]
    fe88:	strb	w0, [x4, #8]
    fe8c:	ldrb	w0, [x1, #26]
    fe90:	and	w0, w0, #0xfffffff3
    fe94:	strb	w0, [x1, #26]
    fe98:	stp	xzr, xzr, [x2, #32]
    fe9c:	str	w3, [x2, #64]
    fea0:	cbz	x24, ff24 <grub_mod_fini+0xfbfc>
    fea4:	ldr	w2, [x20, #128]
    fea8:	cmp	w2, #0xf
    feac:	b.eq	10fb8 <grub_mod_fini+0x10c90>  // b.none
    feb0:	sbfiz	x3, x2, #6, #32
    feb4:	sxtw	x1, w2
    feb8:	ldr	x0, [x20, #112]
    febc:	add	x5, x3, #0x8
    fec0:	add	x4, x3, #0x30
    fec4:	add	w3, w2, #0x1
    fec8:	lsl	x1, x1, #6
    fecc:	add	x4, x0, x4
    fed0:	add	x2, x0, x1
    fed4:	add	x1, x1, #0x20
    fed8:	str	w3, [x20, #128]
    fedc:	add	x1, x0, x1
    fee0:	mov	w6, #0x10                  	// #16
    fee4:	adds	x0, x0, x5
    fee8:	stp	xzr, x24, [x2, #8]
    feec:	cset	w3, eq  // eq = none
    fef0:	orr	w25, w25, w3
    fef4:	str	x22, [x2, #24]
    fef8:	mov	w5, #0xffffffff            	// #-1
    fefc:	strb	w6, [x4, #8]
    ff00:	ldrb	w3, [x1, #26]
    ff04:	and	w3, w3, #0xfffffff3
    ff08:	strb	w3, [x1, #26]
    ff0c:	stp	xzr, xzr, [x2, #32]
    ff10:	str	w5, [x2, #64]
    ff14:	str	x0, [x24]
    ff18:	cbz	x22, ff20 <grub_mod_fini+0xfbf8>
    ff1c:	str	x0, [x22]
    ff20:	mov	x22, x0
    ff24:	ldr	x20, [x21]
    ff28:	cbnz	w25, 10f00 <grub_mod_fini+0x10bd8>
    ff2c:	ldr	x0, [x20, #8]
    ff30:	str	x22, [x19, #104]
    ff34:	lsl	x0, x0, #2
    ff38:	bl	0 <grub_malloc>
    ff3c:	str	x0, [x20, #24]
    ff40:	ldr	x0, [x20, #8]
    ff44:	lsl	x0, x0, #2
    ff48:	bl	0 <grub_malloc>
    ff4c:	str	x0, [x20, #32]
    ff50:	ldr	x0, [x20, #8]
    ff54:	lsl	x0, x0, #4
    ff58:	bl	0 <grub_malloc>
    ff5c:	str	x0, [x20, #40]
    ff60:	ldr	x0, [x20, #8]
    ff64:	lsl	x0, x0, #4
    ff68:	bl	0 <grub_malloc>
    ff6c:	ldr	x1, [x20, #24]
    ff70:	str	x0, [x20, #48]
    ff74:	cbz	x1, 10350 <grub_mod_fini+0x10028>
    ff78:	ldr	x1, [x20, #32]
    ff7c:	cbz	x1, 10350 <grub_mod_fini+0x10028>
    ff80:	ldr	x1, [x20, #40]
    ff84:	cbz	x1, 10350 <grub_mod_fini+0x10028>
    ff88:	cbz	x0, 10350 <grub_mod_fini+0x10028>
    ff8c:	ldr	x0, [x21, #48]
    ff90:	lsl	x0, x0, #2
    ff94:	bl	0 <grub_malloc>
    ff98:	str	x0, [x20, #208]
    ff9c:	cbz	x0, 101f0 <grub_mod_fini+0xfec8>
    ffa0:	ldr	x8, [x21, #48]
    ffa4:	cbz	x8, 10134 <grub_mod_fini+0xfe0c>
    ffa8:	neg	x1, x0, lsr #2
    ffac:	sub	x2, x8, #0x1
    ffb0:	and	x1, x1, #0x3
    ffb4:	cmp	x2, #0x9
    ffb8:	b.ls	10fec <grub_mod_fini+0x10cc4>  // b.plast
    ffbc:	cbz	x1, 10f5c <grub_mod_fini+0x10c34>
    ffc0:	str	wzr, [x0]
    ffc4:	cmp	x1, #0x1
    ffc8:	b.eq	10f50 <grub_mod_fini+0x10c28>  // b.none
    ffcc:	mov	w2, #0x1                   	// #1
    ffd0:	str	w2, [x0, #4]
    ffd4:	cmp	x1, #0x3
    ffd8:	b.ne	10fac <grub_mod_fini+0x10c84>  // b.any
    ffdc:	mov	x13, x1
    ffe0:	mov	w12, w1
    ffe4:	mov	w2, #0x2                   	// #2
    ffe8:	str	w2, [x0, #8]
    ffec:	add	w4, w12, #0x2
    fff0:	sub	x14, x8, x1
    fff4:	mov	x3, #0x0                   	// #0
    fff8:	mov	x2, #0x0                   	// #0
    fffc:	bfxil	x3, x4, #0, #32
   10000:	add	w5, w12, #0x3
   10004:	bfxil	x2, x12, #0, #32
   10008:	add	w4, w12, #0x1
   1000c:	lsr	x11, x14, #2
   10010:	add	x1, x0, x1, lsl #2
   10014:	bfi	x3, x5, #32, #32
   10018:	bfi	x2, x4, #32, #32
   1001c:	add	x11, x1, x11, lsl #4
   10020:	add	w10, w2, #0x4
   10024:	add	w9, w3, #0x4
   10028:	asr	x7, x2, #32
   1002c:	asr	x6, x3, #32
   10030:	mov	x5, #0x0                   	// #0
   10034:	mov	x4, #0x0                   	// #0
   10038:	bfxil	x5, x10, #0, #32
   1003c:	add	w7, w7, #0x4
   10040:	bfxil	x4, x9, #0, #32
   10044:	add	w6, w6, #0x4
   10048:	stp	x2, x3, [x1]
   1004c:	bfi	x5, x7, #32, #32
   10050:	bfi	x4, x6, #32, #32
   10054:	add	x1, x1, #0x10
   10058:	mov	x2, x5
   1005c:	mov	x3, x4
   10060:	cmp	x11, x1
   10064:	b.ne	10020 <grub_mod_fini+0xfcf8>  // b.any
   10068:	and	x2, x14, #0xfffffffffffffffc
   1006c:	add	x13, x2, x13
   10070:	add	w1, w12, w2
   10074:	cmp	x2, x14
   10078:	b.eq	10134 <grub_mod_fini+0xfe0c>  // b.none
   1007c:	add	w2, w1, #0x1
   10080:	str	w1, [x0, x13, lsl #2]
   10084:	cmp	x8, w2, sxtw
   10088:	sxtw	x4, w2
   1008c:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   10090:	add	w3, w1, #0x2
   10094:	str	w2, [x0, x4, lsl #2]
   10098:	cmp	x8, w3, sxtw
   1009c:	sxtw	x4, w3
   100a0:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   100a4:	add	w2, w1, #0x3
   100a8:	str	w3, [x0, x4, lsl #2]
   100ac:	cmp	x8, w2, sxtw
   100b0:	sxtw	x4, w2
   100b4:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   100b8:	add	w3, w1, #0x4
   100bc:	str	w2, [x0, x4, lsl #2]
   100c0:	cmp	x8, w3, sxtw
   100c4:	sxtw	x4, w3
   100c8:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   100cc:	add	w2, w1, #0x5
   100d0:	str	w3, [x0, x4, lsl #2]
   100d4:	cmp	x8, w2, sxtw
   100d8:	sxtw	x4, w2
   100dc:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   100e0:	add	w3, w1, #0x6
   100e4:	str	w2, [x0, x4, lsl #2]
   100e8:	cmp	x8, w3, sxtw
   100ec:	sxtw	x4, w3
   100f0:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   100f4:	add	w2, w1, #0x7
   100f8:	str	w3, [x0, x4, lsl #2]
   100fc:	cmp	x8, w2, sxtw
   10100:	sxtw	x4, w2
   10104:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   10108:	add	w3, w1, #0x8
   1010c:	str	w2, [x0, x4, lsl #2]
   10110:	cmp	x8, w3, sxtw
   10114:	sxtw	x2, w3
   10118:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   1011c:	add	w1, w1, #0x9
   10120:	str	w3, [x0, x2, lsl #2]
   10124:	cmp	x8, w1, sxtw
   10128:	sxtw	x2, w1
   1012c:	b.ls	10134 <grub_mod_fini+0xfe0c>  // b.plast
   10130:	str	w1, [x0, x2, lsl #2]
   10134:	ldr	x1, [x20, #104]
   10138:	mov	x7, #0x1                   	// #1
   1013c:	mov	w6, w7
   10140:	mov	x3, x1
   10144:	ldrb	w4, [x1, #48]
   10148:	ldr	x2, [x1, #8]
   1014c:	cmp	w4, #0x4
   10150:	b.eq	1017c <grub_mod_fini+0xfe54>  // b.none
   10154:	nop
   10158:	cmp	w4, #0x11
   1015c:	b.eq	103ec <grub_mod_fini+0x100c4>  // b.none
   10160:	cbz	x2, 101a0 <grub_mod_fini+0xfe78>
   10164:	ldrb	w4, [x2, #48]
   10168:	ldr	x5, [x2, #8]
   1016c:	mov	x3, x2
   10170:	cmp	w4, #0x4
   10174:	mov	x2, x5
   10178:	b.ne	10158 <grub_mod_fini+0xfe30>  // b.any
   1017c:	ldrsw	x4, [x3, #40]
   10180:	ldr	x5, [x20, #144]
   10184:	ldr	w4, [x0, x4, lsl #2]
   10188:	str	w4, [x3, #40]
   1018c:	lsl	w4, w6, w4
   10190:	sxtw	x4, w4
   10194:	orr	x4, x5, x4
   10198:	str	x4, [x20, #144]
   1019c:	cbnz	x2, 10164 <grub_mod_fini+0xfe3c>
   101a0:	mov	x4, #0x0                   	// #0
   101a4:	nop
   101a8:	ldr	x2, [x3, #16]
   101ac:	cmp	x2, #0x0
   101b0:	ccmp	x2, x4, #0x4, ne  // ne = any
   101b4:	b.ne	10164 <grub_mod_fini+0xfe3c>  // b.any
   101b8:	ldr	x2, [x3]
   101bc:	mov	x4, x3
   101c0:	mov	x3, x2
   101c4:	cbnz	x2, 101a8 <grub_mod_fini+0xfe80>
   101c8:	cbz	x8, 101e8 <grub_mod_fini+0xfec0>
   101cc:	nop
   101d0:	ldr	w3, [x0, x2, lsl #2]
   101d4:	cmp	w3, w2
   101d8:	add	x2, x2, #0x1
   101dc:	b.ne	101f8 <grub_mod_fini+0xfed0>  // b.any
   101e0:	cmp	x8, x2
   101e4:	b.ne	101d0 <grub_mod_fini+0xfea8>  // b.any
   101e8:	bl	0 <grub_free>
   101ec:	str	xzr, [x20, #208]
   101f0:	ldr	x1, [x20, #104]
   101f4:	nop
   101f8:	mov	x22, x1
   101fc:	ldr	x1, [x1, #8]
   10200:	cbnz	x1, 101f8 <grub_mod_fini+0xfed0>
   10204:	ldr	x1, [x22, #16]
   10208:	cbnz	x1, 101f8 <grub_mod_fini+0xfed0>
   1020c:	mov	x2, #0x0                   	// #0
   10210:	str	wzr, [sp, #128]
   10214:	cbz	x1, 10224 <grub_mod_fini+0xfefc>
   10218:	ldrb	w0, [x1, #48]
   1021c:	cmp	w0, #0x11
   10220:	b.eq	10454 <grub_mod_fini+0x1012c>  // b.none
   10224:	cbz	x2, 1023c <grub_mod_fini+0xff14>
   10228:	ldrb	w0, [x2, #48]
   1022c:	cmp	w0, #0x11
   10230:	b.eq	10488 <grub_mod_fini+0x10160>  // b.none
   10234:	ldr	w0, [sp, #128]
   10238:	cbnz	w0, 10280 <grub_mod_fini+0xff58>
   1023c:	ldr	x0, [x22]
   10240:	cbz	x0, 104a4 <grub_mod_fini+0x1017c>
   10244:	ldr	x2, [x0, #16]
   10248:	cmp	x2, #0x0
   1024c:	ccmp	x22, x2, #0x4, ne  // ne = any
   10250:	b.ne	10f40 <grub_mod_fini+0x10c18>  // b.any
   10254:	mov	x22, x0
   10258:	ldr	x1, [x0, #8]
   1025c:	b	10210 <grub_mod_fini+0xfee8>
   10260:	ldr	x0, [sp, #152]
   10264:	sxtw	x1, w20
   10268:	bl	0 <grub_realloc>
   1026c:	cbz	x0, 1027c <grub_mod_fini+0xff54>
   10270:	str	x0, [sp, #152]
   10274:	str	w20, [sp, #196]
   10278:	b	fcac <grub_mod_fini+0xf984>
   1027c:	mov	w0, #0xc                   	// #12
   10280:	ldr	x20, [x21]
   10284:	str	w0, [sp, #120]
   10288:	ldr	x22, [x20, #112]
   1028c:	cbz	x22, 102a0 <grub_mod_fini+0xff78>
   10290:	mov	x0, x22
   10294:	ldr	x22, [x22]
   10298:	bl	0 <grub_free>
   1029c:	cbnz	x22, 10290 <grub_mod_fini+0xff68>
   102a0:	ldr	x0, [x20, #32]
   102a4:	mov	w1, #0xf                   	// #15
   102a8:	stp	xzr, xzr, [x20, #104]
   102ac:	str	w1, [x20, #128]
   102b0:	bl	0 <grub_free>
   102b4:	str	xzr, [x20, #32]
   102b8:	ldr	x0, [sp, #160]
   102bc:	bl	0 <grub_free>
   102c0:	ldr	x0, [sp, #168]
   102c4:	bl	0 <grub_free>
   102c8:	ldrb	w0, [sp, #243]
   102cc:	cbnz	w0, 1043c <grub_mod_fini+0x10114>
   102d0:	mov	x0, x19
   102d4:	bl	3f68 <grub_mod_fini+0x3c40>
   102d8:	ldr	w0, [sp, #120]
   102dc:	ldp	x25, x26, [sp, #64]
   102e0:	ldp	x27, x28, [sp, #80]
   102e4:	stp	xzr, xzr, [x21]
   102e8:	ldp	x19, x20, [sp, #16]
   102ec:	ldp	x21, x22, [sp, #32]
   102f0:	ldp	x23, x24, [sp, #48]
   102f4:	ldp	x29, x30, [sp], #256
   102f8:	ret
   102fc:	add	w20, w20, #0x1
   10300:	cmp	w1, #0x1
   10304:	b.le	10340 <grub_mod_fini+0x10018>
   10308:	ldr	x0, [sp, #160]
   1030c:	sbfiz	x26, x20, #2, #32
   10310:	mov	x1, x26
   10314:	bl	0 <grub_realloc>
   10318:	mov	x2, x0
   1031c:	cbz	x0, 10350 <grub_mod_fini+0x10028>
   10320:	ldr	x0, [sp, #168]
   10324:	str	x2, [sp, #160]
   10328:	cbz	x0, 10ef0 <grub_mod_fini+0x10bc8>
   1032c:	mov	x1, x26
   10330:	bl	0 <grub_realloc>
   10334:	cbz	x0, 10350 <grub_mod_fini+0x10028>
   10338:	ldrb	w2, [sp, #243]
   1033c:	str	x0, [sp, #168]
   10340:	cbnz	w2, 10e94 <grub_mod_fini+0x10b6c>
   10344:	ldr	w1, [x19, #164]
   10348:	str	w20, [sp, #196]
   1034c:	b	fc98 <grub_mod_fini+0xf970>
   10350:	mov	w0, #0xc                   	// #12
   10354:	str	w0, [sp, #120]
   10358:	ldr	x20, [x21]
   1035c:	b	10288 <grub_mod_fini+0xff60>
   10360:	ldp	x25, x26, [sp, #64]
   10364:	ldp	x27, x28, [sp, #80]
   10368:	mov	w1, #0xc                   	// #12
   1036c:	mov	x0, x19
   10370:	str	w1, [sp, #120]
   10374:	bl	3f68 <grub_mod_fini+0x3c40>
   10378:	stp	xzr, xzr, [x21]
   1037c:	ldr	w0, [sp, #120]
   10380:	ldp	x19, x20, [sp, #16]
   10384:	ldp	x21, x22, [sp, #32]
   10388:	ldp	x23, x24, [sp, #48]
   1038c:	ldp	x29, x30, [sp], #256
   10390:	ret
   10394:	mov	x0, #0x20                  	// #32
   10398:	bl	0 <grub_zalloc>
   1039c:	str	x0, [x19, #120]
   103a0:	cbz	x0, 10368 <grub_mod_fini+0x10040>
   103a4:	mov	w4, #0x0                   	// #0
   103a8:	mov	x6, #0x1                   	// #1
   103ac:	mov	w2, #0x0                   	// #0
   103b0:	add	w3, w4, w2
   103b4:	lsl	x5, x6, x2
   103b8:	tst	w3, #0xffffff80
   103bc:	add	w2, w2, #0x1
   103c0:	b.ne	103d0 <grub_mod_fini+0x100a8>  // b.any
   103c4:	ldr	x1, [x0]
   103c8:	orr	x1, x1, x5
   103cc:	str	x1, [x0]
   103d0:	cmp	w2, #0x40
   103d4:	b.ne	103b0 <grub_mod_fini+0x10088>  // b.any
   103d8:	add	w4, w4, #0x40
   103dc:	add	x0, x0, #0x8
   103e0:	cmp	w4, #0x100
   103e4:	b.ne	103ac <grub_mod_fini+0x10084>  // b.any
   103e8:	b	fc08 <grub_mod_fini+0xf8e0>
   103ec:	cbz	x2, 101a0 <grub_mod_fini+0xfe78>
   103f0:	ldrb	w4, [x2, #48]
   103f4:	ldr	x5, [x2, #8]
   103f8:	cmp	w4, #0x11
   103fc:	b.ne	1016c <grub_mod_fini+0xfe44>  // b.any
   10400:	ldr	w4, [x2, #40]
   10404:	str	x5, [x3, #8]
   10408:	cbz	x5, 10410 <grub_mod_fini+0x100e8>
   1040c:	str	x3, [x5]
   10410:	ldrsw	x9, [x3, #40]
   10414:	mov	x2, x5
   10418:	cmp	w4, #0x3f
   1041c:	ldr	w5, [x0, x9, lsl #2]
   10420:	str	w5, [x0, w4, sxtw #2]
   10424:	b.gt	10160 <grub_mod_fini+0xfe38>
   10428:	ldr	x5, [x20, #144]
   1042c:	lsl	x4, x7, x4
   10430:	bic	x4, x5, x4
   10434:	str	x4, [x20, #144]
   10438:	b	10160 <grub_mod_fini+0xfe38>
   1043c:	ldr	x0, [sp, #152]
   10440:	bl	0 <grub_free>
   10444:	b	102d0 <grub_mod_fini+0xffa8>
   10448:	str	wzr, [sp, #120]
   1044c:	stp	w0, w0, [sp, #188]
   10450:	b	fdd8 <grub_mod_fini+0xfab0>
   10454:	mov	x2, x1
   10458:	add	x0, sp, #0x80
   1045c:	mov	x1, x21
   10460:	bl	6c38 <grub_mod_fini+0x6910>
   10464:	str	x0, [x22, #8]
   10468:	cbz	x0, 10470 <grub_mod_fini+0x10148>
   1046c:	str	x22, [x0]
   10470:	ldr	x2, [x22, #16]
   10474:	cbz	x2, 10234 <grub_mod_fini+0xff0c>
   10478:	ldrb	w0, [x2, #48]
   1047c:	cmp	w0, #0x11
   10480:	b.ne	10234 <grub_mod_fini+0xff0c>  // b.any
   10484:	nop
   10488:	mov	x1, x21
   1048c:	add	x0, sp, #0x80
   10490:	bl	6c38 <grub_mod_fini+0x6910>
   10494:	str	x0, [x22, #16]
   10498:	cbz	x0, 10234 <grub_mod_fini+0xff0c>
   1049c:	str	x22, [x0]
   104a0:	b	10234 <grub_mod_fini+0xff0c>
   104a4:	ldr	x0, [x20, #104]
   104a8:	mov	x22, x0
   104ac:	ldr	x0, [x0, #8]
   104b0:	cbnz	x0, 104a8 <grub_mod_fini+0x10180>
   104b4:	ldr	x0, [x22, #16]
   104b8:	cbnz	x0, 104a8 <grub_mod_fini+0x10180>
   104bc:	b	104f0 <grub_mod_fini+0x101c8>
   104c0:	ldr	x0, [x22, #8]
   104c4:	ldr	x1, [x0, #24]
   104c8:	ldr	w0, [x0, #56]
   104cc:	str	x1, [x22, #24]
   104d0:	str	w0, [x22, #56]
   104d4:	ldr	x1, [x22]
   104d8:	cbz	x1, 10550 <grub_mod_fini+0x10228>
   104dc:	ldr	x0, [x1, #16]
   104e0:	cmp	x0, #0x0
   104e4:	ccmp	x22, x0, #0x4, ne  // ne = any
   104e8:	mov	x22, x1
   104ec:	b.ne	104a8 <grub_mod_fini+0x10180>  // b.any
   104f0:	ldrb	w1, [x22, #48]
   104f4:	mov	x0, x20
   104f8:	cmp	w1, #0x10
   104fc:	b.eq	104c0 <grub_mod_fini+0x10198>  // b.none
   10500:	ldp	x2, x3, [x22, #40]
   10504:	str	x22, [x22, #24]
   10508:	mov	x1, x2
   1050c:	mov	x2, x3
   10510:	bl	1988 <grub_mod_fini+0x1660>
   10514:	str	w0, [x22, #56]
   10518:	cmn	w0, #0x1
   1051c:	b.eq	1027c <grub_mod_fini+0xff54>  // b.none
   10520:	ldrb	w1, [x22, #48]
   10524:	cmp	w1, #0xc
   10528:	b.ne	104d4 <grub_mod_fini+0x101ac>  // b.any
   1052c:	ldr	x1, [x20]
   10530:	ldr	w2, [x22, #40]
   10534:	add	x0, x1, w0, sxtw #4
   10538:	ldr	w1, [x0, #8]
   1053c:	bfi	w1, w2, #8, #10
   10540:	str	w1, [x0, #8]
   10544:	ldr	x1, [x22]
   10548:	cbnz	x1, 104dc <grub_mod_fini+0x101b4>
   1054c:	nop
   10550:	ldr	x22, [x20, #104]
   10554:	mov	x0, x22
   10558:	ldrb	w2, [x0, #48]
   1055c:	ldr	x1, [x0, #8]
   10560:	cmp	w2, #0xb
   10564:	b.eq	105a4 <grub_mod_fini+0x1027c>  // b.none
   10568:	cmp	w2, #0x10
   1056c:	b.eq	10788 <grub_mod_fini+0x10460>  // b.none
   10570:	cbz	x1, 1057c <grub_mod_fini+0x10254>
   10574:	ldr	x2, [x0, #32]
   10578:	str	x2, [x1, #32]
   1057c:	ldr	x2, [x0, #16]
   10580:	cbz	x2, 1058c <grub_mod_fini+0x10264>
   10584:	ldr	x3, [x0, #32]
   10588:	str	x3, [x2, #32]
   1058c:	cbz	x1, 105b4 <grub_mod_fini+0x1028c>
   10590:	mov	x0, x1
   10594:	ldrb	w2, [x0, #48]
   10598:	ldr	x1, [x0, #8]
   1059c:	cmp	w2, #0xb
   105a0:	b.ne	10568 <grub_mod_fini+0x10240>  // b.any
   105a4:	str	x0, [x1, #32]
   105a8:	mov	x0, x1
   105ac:	b	10594 <grub_mod_fini+0x1026c>
   105b0:	ldr	x2, [x2, #16]
   105b4:	cmp	x2, #0x0
   105b8:	ccmp	x1, x2, #0x4, ne  // ne = any
   105bc:	mov	x1, x0
   105c0:	b.ne	10db8 <grub_mod_fini+0x10a90>  // b.any
   105c4:	ldr	x2, [x0]
   105c8:	mov	x0, x2
   105cc:	cbnz	x2, 105b0 <grub_mod_fini+0x10288>
   105d0:	ldrb	w0, [x22, #48]
   105d4:	ldr	w25, [x22, #56]
   105d8:	cmp	w0, #0xb
   105dc:	b.hi	10654 <grub_mod_fini+0x1032c>  // b.pmore
   105e0:	cmp	w0, #0x9
   105e4:	b.hi	10834 <grub_mod_fini+0x1050c>  // b.pmore
   105e8:	cmp	w0, #0x4
   105ec:	b.eq	107dc <grub_mod_fini+0x104b4>  // b.none
   105f0:	b.ls	1075c <grub_mod_fini+0x10434>  // b.plast
   105f4:	sub	w1, w0, #0x8
   105f8:	and	w1, w1, #0xff
   105fc:	cmp	w1, #0x1
   10600:	b.hi	10668 <grub_mod_fini+0x10340>  // b.pmore
   10604:	ldr	x2, [x22, #32]
   10608:	sbfiz	x25, x25, #4, #32
   1060c:	ldr	x1, [x20, #40]
   10610:	mov	x0, #0x4                   	// #4
   10614:	ldr	w28, [x2, #56]
   10618:	mov	x2, #0x100000001           	// #4294967297
   1061c:	add	x27, x1, x25
   10620:	str	x2, [x1, x25]
   10624:	bl	0 <grub_malloc>
   10628:	str	x0, [x27, #8]
   1062c:	cbz	x0, 10f68 <grub_mod_fini+0x10c40>
   10630:	str	w28, [x0]
   10634:	nop
   10638:	ldr	x0, [x22, #8]
   1063c:	cbz	x0, 106a0 <grub_mod_fini+0x10378>
   10640:	mov	x22, x0
   10644:	ldrb	w0, [x22, #48]
   10648:	ldr	w25, [x22, #56]
   1064c:	cmp	w0, #0xb
   10650:	b.ls	105e0 <grub_mod_fini+0x102b8>  // b.plast
   10654:	cmp	w0, #0xc
   10658:	b.eq	10604 <grub_mod_fini+0x102dc>  // b.none
   1065c:	cmp	w0, #0x10
   10660:	b.eq	10638 <grub_mod_fini+0x10310>  // b.none
   10664:	nop
   10668:	tbz	w0, #3, 10684 <grub_mod_fini+0x1035c>
   1066c:	adrp	x0, 0 <grub_mod_init-0x288>
   10670:	mov	w2, #0x5c2                 	// #1474
   10674:	ldr	x1, [x0]
   10678:	adrp	x0, 0 <grub_mod_init-0x288>
   1067c:	ldr	x0, [x0]
   10680:	bl	0 <grub_printf>
   10684:	ldr	x1, [x22, #32]
   10688:	ldr	x0, [x20, #24]
   1068c:	ldr	w1, [x1, #56]
   10690:	str	w1, [x0, w25, sxtw #2]
   10694:	ldr	x0, [x22, #8]
   10698:	cbnz	x0, 10640 <grub_mod_fini+0x10318>
   1069c:	nop
   106a0:	ldr	x1, [x22, #16]
   106a4:	cmp	x1, #0x0
   106a8:	cset	w25, eq  // eq = none
   106ac:	cmp	x1, x0
   106b0:	csinc	w25, w25, wzr, ne  // ne = any
   106b4:	cbz	w25, 10dac <grub_mod_fini+0x10a84>
   106b8:	ldr	x1, [x22]
   106bc:	mov	x0, x22
   106c0:	mov	x22, x1
   106c4:	cbnz	x1, 106a0 <grub_mod_fini+0x10378>
   106c8:	ldr	x0, [x20, #16]
   106cc:	mov	w26, #0x0                   	// #0
   106d0:	mov	w22, #0x0                   	// #0
   106d4:	nop
   106d8:	cmp	x0, w22, sxtw
   106dc:	sxtw	x24, w22
   106e0:	b.eq	10734 <grub_mod_fini+0x1040c>  // b.none
   106e4:	ldr	x1, [x20, #48]
   106e8:	lsl	x24, x24, #4
   106ec:	add	x1, x1, x24
   106f0:	ldr	w1, [x1, #4]
   106f4:	cbnz	w1, 10754 <grub_mod_fini+0x1042c>
   106f8:	mov	w2, w22
   106fc:	mov	x1, x20
   10700:	add	x0, sp, #0x80
   10704:	mov	w3, #0x1                   	// #1
   10708:	bl	49c0 <grub_mod_fini+0x4698>
   1070c:	cbnz	w0, 10280 <grub_mod_fini+0xff58>
   10710:	ldr	x0, [x20, #48]
   10714:	add	w22, w22, #0x1
   10718:	add	x24, x0, x24
   1071c:	ldr	w0, [x24, #4]
   10720:	cbz	w0, 107a4 <grub_mod_fini+0x1047c>
   10724:	ldr	x0, [x20, #16]
   10728:	sxtw	x24, w22
   1072c:	cmp	x0, w22, sxtw
   10730:	b.ne	106e4 <grub_mod_fini+0x103bc>  // b.any
   10734:	cbz	w26, 108dc <grub_mod_fini+0x105b4>
   10738:	ldr	x1, [x20, #48]
   1073c:	mov	x24, #0x0                   	// #0
   10740:	mov	w26, #0x0                   	// #0
   10744:	mov	w22, #0x0                   	// #0
   10748:	add	x1, x1, x24
   1074c:	ldr	w1, [x1, #4]
   10750:	cbz	w1, 106f8 <grub_mod_fini+0x103d0>
   10754:	add	w22, w22, #0x1
   10758:	b	106d8 <grub_mod_fini+0x103b0>
   1075c:	cmp	w0, #0x2
   10760:	b.ne	10684 <grub_mod_fini+0x1035c>  // b.any
   10764:	ldr	x0, [x22, #32]
   10768:	cbz	x0, 10638 <grub_mod_fini+0x10310>
   1076c:	adrp	x0, 0 <grub_mod_init-0x288>
   10770:	mov	w2, #0x59f                 	// #1439
   10774:	ldr	x1, [x0]
   10778:	adrp	x0, 0 <grub_mod_init-0x288>
   1077c:	ldr	x0, [x0]
   10780:	bl	0 <grub_printf>
   10784:	b	10638 <grub_mod_fini+0x10310>
   10788:	ldr	x2, [x0, #16]
   1078c:	ldr	x3, [x2, #24]
   10790:	str	x3, [x1, #32]
   10794:	ldr	x0, [x0, #32]
   10798:	str	x0, [x2, #32]
   1079c:	mov	x0, x1
   107a0:	b	10594 <grub_mod_fini+0x1026c>
   107a4:	ldr	x0, [sp, #136]
   107a8:	sxtw	x26, w22
   107ac:	lsl	x24, x26, #4
   107b0:	bl	0 <grub_free>
   107b4:	ldr	x0, [x20, #16]
   107b8:	cmp	x0, x26
   107bc:	b.eq	10c40 <grub_mod_fini+0x10918>  // b.none
   107c0:	ldr	x1, [x20, #48]
   107c4:	mov	w26, w25
   107c8:	add	x1, x1, x24
   107cc:	ldr	w1, [x1, #4]
   107d0:	cbz	w1, 106f8 <grub_mod_fini+0x103d0>
   107d4:	add	w22, w22, #0x1
   107d8:	b	106d8 <grub_mod_fini+0x103b0>
   107dc:	ldr	x1, [x22, #32]
   107e0:	sxtw	x25, w25
   107e4:	ldr	x0, [x20, #24]
   107e8:	ldr	w28, [x1, #56]
   107ec:	str	w28, [x0, x25, lsl #2]
   107f0:	ldrb	w0, [x22, #48]
   107f4:	cmp	w0, #0x4
   107f8:	b.ne	10638 <grub_mod_fini+0x10310>  // b.any
   107fc:	ldr	x1, [x20, #40]
   10800:	lsl	x25, x25, #4
   10804:	mov	x0, #0x4                   	// #4
   10808:	add	x2, x1, x25
   1080c:	str	x2, [sp, #104]
   10810:	mov	x2, #0x100000001           	// #4294967297
   10814:	str	x2, [x1, x25]
   10818:	bl	0 <grub_malloc>
   1081c:	ldr	x2, [sp, #104]
   10820:	str	x0, [x2, #8]
   10824:	cbnz	x0, 10630 <grub_mod_fini+0x10308>
   10828:	mov	w0, #0xc                   	// #12
   1082c:	str	xzr, [x2]
   10830:	b	10280 <grub_mod_fini+0xff58>
   10834:	ldrb	w0, [x20, #160]
   10838:	orr	w0, w0, #0x1
   1083c:	strb	w0, [x20, #160]
   10840:	ldr	x0, [x22, #8]
   10844:	cbz	x0, 10dd4 <grub_mod_fini+0x10aac>
   10848:	ldr	x0, [x0, #24]
   1084c:	ldr	w28, [x0, #56]
   10850:	ldr	x0, [x22, #16]
   10854:	cbz	x0, 10de4 <grub_mod_fini+0x10abc>
   10858:	ldr	x0, [x0, #24]
   1085c:	ldr	w27, [x0, #56]
   10860:	tbnz	w28, #31, 108a4 <grub_mod_fini+0x1057c>
   10864:	tbnz	w27, #31, 108c0 <grub_mod_fini+0x10598>
   10868:	ldr	x1, [x20, #40]
   1086c:	sbfiz	x25, x25, #4, #32
   10870:	mov	w26, #0x2                   	// #2
   10874:	mov	x0, #0x8                   	// #8
   10878:	add	x24, x1, x25
   1087c:	str	w26, [x1, x25]
   10880:	bl	0 <grub_malloc>
   10884:	str	x0, [x24, #8]
   10888:	cbz	x0, 1027c <grub_mod_fini+0xff54>
   1088c:	cmp	w28, w27
   10890:	b.eq	10dc4 <grub_mod_fini+0x10a9c>  // b.none
   10894:	str	w26, [x24, #4]
   10898:	b.ge	10df4 <grub_mod_fini+0x10acc>  // b.tcont
   1089c:	stp	w28, w27, [x0]
   108a0:	b	10638 <grub_mod_fini+0x10310>
   108a4:	adrp	x0, 0 <grub_mod_init-0x288>
   108a8:	mov	w2, #0x5af                 	// #1455
   108ac:	ldr	x1, [x0]
   108b0:	adrp	x0, 0 <grub_mod_init-0x288>
   108b4:	ldr	x0, [x0]
   108b8:	bl	0 <grub_printf>
   108bc:	tbz	w27, #31, 10868 <grub_mod_fini+0x10540>
   108c0:	adrp	x0, 0 <grub_mod_init-0x288>
   108c4:	mov	w2, #0x5b0                 	// #1456
   108c8:	ldr	x1, [x0]
   108cc:	adrp	x0, 0 <grub_mod_init-0x288>
   108d0:	ldr	x0, [x0]
   108d4:	bl	0 <grub_printf>
   108d8:	b	10868 <grub_mod_fini+0x10540>
   108dc:	ldrb	w1, [x21, #56]
   108e0:	tbnz	w1, #4, 108f8 <grub_mod_fini+0x105d0>
   108e4:	ldr	x1, [x21, #48]
   108e8:	cbz	x1, 108f8 <grub_mod_fini+0x105d0>
   108ec:	ldrb	w1, [x20, #160]
   108f0:	tbnz	w1, #0, 10900 <grub_mod_fini+0x105d8>
   108f4:	nop
   108f8:	ldr	w1, [x20, #140]
   108fc:	cbz	w1, 109f8 <grub_mod_fini+0x106d0>
   10900:	lsl	x0, x0, #4
   10904:	bl	0 <grub_malloc>
   10908:	str	x0, [x20, #56]
   1090c:	cbz	x0, 10350 <grub_mod_fini+0x10028>
   10910:	ldr	x1, [x20, #16]
   10914:	mov	x22, #0x0                   	// #0
   10918:	cbnz	x1, 10924 <grub_mod_fini+0x105fc>
   1091c:	b	109f8 <grub_mod_fini+0x106d0>
   10920:	ldr	x0, [x20, #56]
   10924:	add	x0, x0, x22, lsl #4
   10928:	mov	x2, #0x10                  	// #16
   1092c:	mov	w1, #0x0                   	// #0
   10930:	bl	0 <grub_memset>
   10934:	add	x22, x22, #0x1
   10938:	ldr	x0, [x20, #16]
   1093c:	cmp	x0, x22
   10940:	b.hi	10920 <grub_mod_fini+0x105f8>  // b.pmore
   10944:	cbz	x0, 109f8 <grub_mod_fini+0x106d0>
   10948:	ldr	x6, [x20, #48]
   1094c:	mov	x28, #0x0                   	// #0
   10950:	lsl	x7, x28, #4
   10954:	mov	w27, w28
   10958:	add	x5, x6, x7
   1095c:	ldr	w1, [x5, #4]
   10960:	ldr	x25, [x5, #8]
   10964:	cmp	w1, #0x0
   10968:	b.le	109ec <grub_mod_fini+0x106c4>
   1096c:	mov	x24, #0x0                   	// #0
   10970:	b	1098c <grub_mod_fini+0x10664>
   10974:	add	w2, w1, #0x1
   10978:	str	w2, [x22, #4]
   1097c:	str	w27, [x0, w1, sxtw #2]
   10980:	ldr	w0, [x5, #4]
   10984:	cmp	w0, w24
   10988:	b.le	109e8 <grub_mod_fini+0x106c0>
   1098c:	ldrsw	x2, [x25, x24, lsl #2]
   10990:	add	x24, x24, #0x1
   10994:	ldr	x3, [x20, #56]
   10998:	lsl	x2, x2, #4
   1099c:	add	x22, x3, x2
   109a0:	ldr	w4, [x3, x2]
   109a4:	ldr	w1, [x22, #4]
   109a8:	ldr	x0, [x22, #8]
   109ac:	cmp	w4, w1
   109b0:	b.ne	10974 <grub_mod_fini+0x1064c>  // b.any
   109b4:	add	w1, w1, #0x1
   109b8:	str	x7, [sp, #104]
   109bc:	lsl	w1, w1, #1
   109c0:	str	w1, [x3, x2]
   109c4:	sbfiz	x1, x1, #2, #32
   109c8:	bl	0 <grub_realloc>
   109cc:	cbz	x0, 1027c <grub_mod_fini+0xff54>
   109d0:	ldr	x6, [x20, #48]
   109d4:	str	x0, [x22, #8]
   109d8:	ldr	x7, [sp, #104]
   109dc:	ldr	w1, [x22, #4]
   109e0:	add	x5, x6, x7
   109e4:	b	10974 <grub_mod_fini+0x1064c>
   109e8:	ldr	x0, [x20, #16]
   109ec:	add	x28, x28, #0x1
   109f0:	cmp	x28, x0
   109f4:	b.cc	10950 <grub_mod_fini+0x10628>  // b.lo, b.ul, b.last
   109f8:	ldrb	w0, [x19, #160]
   109fc:	cmp	x23, #0x0
   10a00:	str	wzr, [sp, #120]
   10a04:	cset	w1, eq  // eq = none
   10a08:	ands	w1, w1, w0, lsr #2
   10a0c:	b.ne	10c80 <grub_mod_fini+0x10958>  // b.any
   10a10:	ldr	x1, [x19, #104]
   10a14:	ldr	x0, [x19, #48]
   10a18:	ldr	x1, [x1, #24]
   10a1c:	ldr	w20, [x1, #56]
   10a20:	str	w20, [x19, #136]
   10a24:	add	x20, x0, w20, sxtw #4
   10a28:	ldr	w1, [x20, #4]
   10a2c:	str	w1, [sp, #132]
   10a30:	cmp	w1, #0x0
   10a34:	b.le	10c28 <grub_mod_fini+0x10900>
   10a38:	sbfiz	x0, x1, #2, #32
   10a3c:	str	w1, [sp, #128]
   10a40:	bl	0 <grub_malloc>
   10a44:	str	x0, [sp, #136]
   10a48:	cbz	x0, 10fe4 <grub_mod_fini+0x10cbc>
   10a4c:	ldr	x1, [x20, #8]
   10a50:	ldrsw	x2, [x20, #4]
   10a54:	lsl	x2, x2, #2
   10a58:	bl	0 <grub_memmove>
   10a5c:	str	wzr, [sp, #124]
   10a60:	ldr	w0, [x19, #140]
   10a64:	cmp	w0, #0x0
   10a68:	b.le	10aac <grub_mod_fini+0x10784>
   10a6c:	ldr	w6, [sp, #132]
   10a70:	cmp	w6, #0x0
   10a74:	b.le	10aac <grub_mod_fini+0x10784>
   10a78:	mov	w3, #0x0                   	// #0
   10a7c:	nop
   10a80:	ldr	x4, [sp, #136]
   10a84:	ldr	x8, [x19]
   10a88:	ldrsw	x2, [x4, w3, sxtw #2]
   10a8c:	lsl	x2, x2, #4
   10a90:	add	x9, x8, x2
   10a94:	ldrb	w0, [x9, #8]
   10a98:	cmp	w0, #0x4
   10a9c:	b.eq	10b5c <grub_mod_fini+0x10834>  // b.none
   10aa0:	add	w3, w3, #0x1
   10aa4:	cmp	w6, w3
   10aa8:	b.gt	10a80 <grub_mod_fini+0x10758>
   10aac:	add	x0, sp, #0x7c
   10ab0:	add	x2, sp, #0x80
   10ab4:	mov	x1, x19
   10ab8:	mov	w3, #0x0                   	// #0
   10abc:	bl	5478 <grub_mod_fini+0x5150>
   10ac0:	str	x0, [x19, #72]
   10ac4:	cbz	x0, 10da4 <grub_mod_fini+0x10a7c>
   10ac8:	ldrsb	w1, [x0, #80]
   10acc:	tbnz	w1, #31, 10d44 <grub_mod_fini+0x10a1c>
   10ad0:	stp	x0, x0, [x19, #80]
   10ad4:	str	x0, [x19, #96]
   10ad8:	ldr	x0, [sp, #136]
   10adc:	bl	0 <grub_free>
   10ae0:	mov	w0, #0x0                   	// #0
   10ae4:	ldr	x22, [x21]
   10ae8:	str	w0, [sp, #120]
   10aec:	ldr	x20, [x22, #112]
   10af0:	cbz	x20, 10b08 <grub_mod_fini+0x107e0>
   10af4:	nop
   10af8:	mov	x0, x20
   10afc:	ldr	x20, [x20]
   10b00:	bl	0 <grub_free>
   10b04:	cbnz	x20, 10af8 <grub_mod_fini+0x107d0>
   10b08:	ldr	x0, [x22, #32]
   10b0c:	mov	w1, #0xf                   	// #15
   10b10:	stp	xzr, xzr, [x22, #104]
   10b14:	str	w1, [x22, #128]
   10b18:	bl	0 <grub_free>
   10b1c:	str	xzr, [x22, #32]
   10b20:	ldr	x0, [sp, #160]
   10b24:	bl	0 <grub_free>
   10b28:	ldr	x0, [sp, #168]
   10b2c:	bl	0 <grub_free>
   10b30:	ldrb	w0, [sp, #243]
   10b34:	cbnz	w0, 10c64 <grub_mod_fini+0x1093c>
   10b38:	ldr	w0, [sp, #120]
   10b3c:	cbnz	w0, 102d0 <grub_mod_fini+0xffa8>
   10b40:	ldp	x19, x20, [sp, #16]
   10b44:	ldp	x21, x22, [sp, #32]
   10b48:	ldp	x23, x24, [sp, #48]
   10b4c:	ldp	x25, x26, [sp, #64]
   10b50:	ldp	x27, x28, [sp, #80]
   10b54:	ldp	x29, x30, [sp], #256
   10b58:	ret
   10b5c:	sub	w7, w6, #0x1
   10b60:	sub	x11, x4, #0x4
   10b64:	mov	x0, x7
   10b68:	mov	x1, #0x1                   	// #1
   10b6c:	add	x7, x7, #0x2
   10b70:	b	10b7c <grub_mod_fini+0x10854>
   10b74:	cmp	x7, x1
   10b78:	b.eq	10c1c <grub_mod_fini+0x108f4>  // b.none
   10b7c:	ldrsw	x5, [x11, x1, lsl #2]
   10b80:	mov	w10, w1
   10b84:	add	x1, x1, #0x1
   10b88:	lsl	x5, x5, #4
   10b8c:	add	x12, x8, x5
   10b90:	ldrb	w12, [x12, #8]
   10b94:	cmp	w12, #0x9
   10b98:	b.ne	10b74 <grub_mod_fini+0x1084c>  // b.any
   10b9c:	ldr	w12, [x8, x5]
   10ba0:	ldr	w5, [x9]
   10ba4:	cmp	w12, w5
   10ba8:	b.ne	10b74 <grub_mod_fini+0x1084c>  // b.any
   10bac:	ldr	x1, [x19, #40]
   10bb0:	mov	w5, #0x0                   	// #0
   10bb4:	add	x2, x1, x2
   10bb8:	ldr	x1, [x2, #8]
   10bbc:	ldr	w1, [x1]
   10bc0:	b	10bdc <grub_mod_fini+0x108b4>
   10bc4:	lsr	w7, w2, #1
   10bc8:	lsr	w2, w2, #1
   10bcc:	ldr	w7, [x4, x7, lsl #2]
   10bd0:	cmp	w1, w7
   10bd4:	b.gt	10c14 <grub_mod_fini+0x108ec>
   10bd8:	mov	w0, w2
   10bdc:	add	w2, w0, w5
   10be0:	cmp	w0, w5
   10be4:	b.hi	10bc4 <grub_mod_fini+0x1089c>  // b.pmore
   10be8:	ldr	w0, [x4, w5, uxtw #2]
   10bec:	cmp	w1, w0
   10bf0:	b.eq	10aa0 <grub_mod_fini+0x10778>  // b.none
   10bf4:	ldr	x2, [x19, #48]
   10bf8:	add	x0, sp, #0x80
   10bfc:	add	x1, x2, w1, sxtw #4
   10c00:	bl	2108 <grub_mod_fini+0x1de0>
   10c04:	cbnz	w0, 10ae4 <grub_mod_fini+0x107bc>
   10c08:	ldr	w6, [sp, #132]
   10c0c:	mov	w3, #0x1                   	// #1
   10c10:	b	10aa4 <grub_mod_fini+0x1077c>
   10c14:	add	w5, w2, #0x1
   10c18:	b	10bdc <grub_mod_fini+0x108b4>
   10c1c:	cmp	w10, w6
   10c20:	b.eq	10aa0 <grub_mod_fini+0x10778>  // b.none
   10c24:	b	10bac <grub_mod_fini+0x10884>
   10c28:	add	x0, sp, #0x80
   10c2c:	mov	x2, #0x10                  	// #16
   10c30:	mov	w1, #0x0                   	// #0
   10c34:	bl	0 <grub_memset>
   10c38:	str	wzr, [sp, #124]
   10c3c:	b	10a60 <grub_mod_fini+0x10738>
   10c40:	ldr	x1, [x20, #48]
   10c44:	mov	w26, #0x0                   	// #0
   10c48:	mov	x24, #0x0                   	// #0
   10c4c:	ldr	w22, [x1, #4]
   10c50:	cbz	w22, 106f8 <grub_mod_fini+0x103d0>
   10c54:	mov	w22, #0x0                   	// #0
   10c58:	mov	w26, #0x0                   	// #0
   10c5c:	add	w22, w22, #0x1
   10c60:	b	106d8 <grub_mod_fini+0x103b0>
   10c64:	ldr	x0, [sp, #152]
   10c68:	bl	0 <grub_free>
   10c6c:	b	10b38 <grub_mod_fini+0x10810>
   10c70:	add	x0, sp, #0x90
   10c74:	bl	41c0 <grub_mod_fini+0x3e98>
   10c78:	str	wzr, [sp, #120]
   10c7c:	b	fdd8 <grub_mod_fini+0xfab0>
   10c80:	ldr	x0, [x21, #40]
   10c84:	cbnz	x0, 10a10 <grub_mod_fini+0x106e8>
   10c88:	ldr	x6, [x19, #16]
   10c8c:	cbz	x6, 1104c <grub_mod_fini+0x10d24>
   10c90:	ldr	x7, [x19]
   10c94:	mov	w2, #0x10001               	// #65537
   10c98:	mov	w8, #0x0                   	// #0
   10c9c:	mov	x5, #0x0                   	// #0
   10ca0:	mov	x4, x7
   10ca4:	mov	x3, #0x1                   	// #1
   10ca8:	movk	x2, #0x1, lsl #48
   10cac:	ldrb	w0, [x4, #8]
   10cb0:	cmp	w0, #0x5
   10cb4:	b.eq	11008 <grub_mod_fini+0x10ce0>  // b.none
   10cb8:	b.hi	10f74 <grub_mod_fini+0x10c4c>  // b.pmore
   10cbc:	cmp	w0, #0x1
   10cc0:	b.eq	10ff8 <grub_mod_fini+0x10cd0>  // b.none
   10cc4:	cmp	w0, #0x3
   10cc8:	b.ne	10ce0 <grub_mod_fini+0x109b8>  // b.any
   10ccc:	ldr	x0, [x4]
   10cd0:	ldr	x9, [x0, #16]
   10cd4:	cbnz	x9, 10a10 <grub_mod_fini+0x106e8>
   10cd8:	ldr	x0, [x0, #24]
   10cdc:	cbnz	x0, 10a10 <grub_mod_fini+0x106e8>
   10ce0:	add	x5, x5, #0x1
   10ce4:	add	x4, x4, #0x10
   10ce8:	cmp	x6, x5
   10cec:	b.ne	10cac <grub_mod_fini+0x10984>  // b.any
   10cf0:	orr	w8, w8, w26
   10cf4:	add	x6, x7, x6, lsl #4
   10cf8:	tst	w8, #0xff
   10cfc:	mov	w1, #0x7                   	// #7
   10d00:	b.ne	10d20 <grub_mod_fini+0x109f8>  // b.any
   10d04:	b	11048 <grub_mod_fini+0x10d20>
   10d08:	cmp	w0, #0x5
   10d0c:	b.ne	10d14 <grub_mod_fini+0x109ec>  // b.any
   10d10:	strb	w1, [x7, #8]
   10d14:	add	x7, x7, #0x10
   10d18:	cmp	x6, x7
   10d1c:	b.eq	1104c <grub_mod_fini+0x10d24>  // b.none
   10d20:	ldrb	w0, [x7, #8]
   10d24:	cmp	w0, #0x1
   10d28:	b.ne	10d08 <grub_mod_fini+0x109e0>  // b.any
   10d2c:	ldrsb	w0, [x7]
   10d30:	tbz	w0, #31, 10d14 <grub_mod_fini+0x109ec>
   10d34:	ldrb	w0, [x7, #10]
   10d38:	and	w0, w0, #0xffffffdf
   10d3c:	strb	w0, [x7, #10]
   10d40:	b	10d14 <grub_mod_fini+0x109ec>
   10d44:	add	x2, sp, #0x80
   10d48:	mov	x1, x19
   10d4c:	mov	w3, #0x1                   	// #1
   10d50:	add	x0, sp, #0x7c
   10d54:	bl	5478 <grub_mod_fini+0x5150>
   10d58:	str	x0, [x19, #80]
   10d5c:	add	x2, sp, #0x80
   10d60:	mov	x1, x19
   10d64:	mov	w3, #0x2                   	// #2
   10d68:	add	x0, sp, #0x7c
   10d6c:	bl	5478 <grub_mod_fini+0x5150>
   10d70:	str	x0, [x19, #88]
   10d74:	mov	x1, x19
   10d78:	add	x2, sp, #0x80
   10d7c:	add	x0, sp, #0x7c
   10d80:	mov	w3, #0x6                   	// #6
   10d84:	bl	5478 <grub_mod_fini+0x5150>
   10d88:	str	x0, [x19, #96]
   10d8c:	ldr	x1, [x19, #80]
   10d90:	cbz	x1, 10da4 <grub_mod_fini+0x10a7c>
   10d94:	ldr	x1, [x19, #88]
   10d98:	cmp	x1, #0x0
   10d9c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
   10da0:	b.ne	10ad8 <grub_mod_fini+0x107b0>  // b.any
   10da4:	ldr	w0, [sp, #124]
   10da8:	b	10ae4 <grub_mod_fini+0x107bc>
   10dac:	mov	x0, x1
   10db0:	mov	x22, x0
   10db4:	b	10644 <grub_mod_fini+0x1031c>
   10db8:	mov	x1, x2
   10dbc:	mov	x0, x1
   10dc0:	b	10594 <grub_mod_fini+0x1026c>
   10dc4:	mov	w1, #0x1                   	// #1
   10dc8:	str	w1, [x24, #4]
   10dcc:	str	w28, [x0]
   10dd0:	b	10638 <grub_mod_fini+0x10310>
   10dd4:	ldr	x0, [x22, #32]
   10dd8:	ldr	w28, [x0, #56]
   10ddc:	ldr	x0, [x22, #16]
   10de0:	cbnz	x0, 10858 <grub_mod_fini+0x10530>
   10de4:	ldr	x0, [x22, #32]
   10de8:	ldr	w27, [x0, #56]
   10dec:	tbz	w28, #31, 10864 <grub_mod_fini+0x1053c>
   10df0:	b	108a4 <grub_mod_fini+0x1057c>
   10df4:	stp	w27, w28, [x0]
   10df8:	b	10638 <grub_mod_fini+0x10310>
   10dfc:	ldr	w5, [sp, #196]
   10e00:	ldr	w1, [sp, #208]
   10e04:	ldr	w0, [sp, #188]
   10e08:	cmp	w5, w1
   10e0c:	csel	w5, w5, w1, le
   10e10:	cmp	w5, w0
   10e14:	b.le	10e60 <grub_mod_fini+0x10b38>
   10e18:	sxtw	x2, w0
   10e1c:	nop
   10e20:	ldr	w1, [sp, #184]
   10e24:	ldr	x4, [sp, #144]
   10e28:	add	w1, w0, w1
   10e2c:	ldr	x3, [sp, #224]
   10e30:	ldrb	w1, [x4, w1, sxtw]
   10e34:	cbnz	x3, 10ee4 <grub_mod_fini+0x10bbc>
   10e38:	sub	w3, w1, #0x61
   10e3c:	cmp	w3, #0x19
   10e40:	b.ls	10e74 <grub_mod_fini+0x10b4c>  // b.plast
   10e44:	strb	w1, [x24, x2]
   10e48:	add	w0, w0, #0x1
   10e4c:	cmp	w5, w0
   10e50:	add	x2, x2, #0x1
   10e54:	b.eq	10e68 <grub_mod_fini+0x10b40>  // b.none
   10e58:	ldr	x24, [sp, #152]
   10e5c:	b	10e20 <grub_mod_fini+0x10af8>
   10e60:	mov	w5, w0
   10e64:	nop
   10e68:	str	wzr, [sp, #120]
   10e6c:	stp	w5, w5, [sp, #188]
   10e70:	b	fdd8 <grub_mod_fini+0xfab0>
   10e74:	sub	w1, w1, #0x20
   10e78:	strb	w1, [x24, x2]
   10e7c:	add	w0, w0, #0x1
   10e80:	add	x2, x2, #0x1
   10e84:	cmp	w5, w0
   10e88:	b.eq	10e68 <grub_mod_fini+0x10b40>  // b.none
   10e8c:	ldr	x24, [sp, #152]
   10e90:	b	10e20 <grub_mod_fini+0x10af8>
   10e94:	ldr	x0, [sp, #152]
   10e98:	sxtw	x1, w20
   10e9c:	bl	0 <grub_realloc>
   10ea0:	cbz	x0, 10350 <grub_mod_fini+0x10028>
   10ea4:	ldrb	w2, [sp, #243]
   10ea8:	ldr	w1, [x19, #164]
   10eac:	str	x0, [sp, #152]
   10eb0:	str	w20, [sp, #196]
   10eb4:	b	fc8c <grub_mod_fini+0xf964>
   10eb8:	mov	x0, x19
   10ebc:	mov	x1, #0xd8                  	// #216
   10ec0:	bl	0 <grub_realloc>
   10ec4:	mov	x19, x0
   10ec8:	cbz	x0, 11024 <grub_mod_fini+0x10cfc>
   10ecc:	mov	x0, #0xd8                  	// #216
   10ed0:	stp	x19, x0, [x21]
   10ed4:	b	fb54 <grub_mod_fini+0xf82c>
   10ed8:	mov	w23, #0x0                   	// #0
   10edc:	mov	x0, #0x10                  	// #16
   10ee0:	b	fbb0 <grub_mod_fini+0xf888>
   10ee4:	and	x1, x1, #0xff
   10ee8:	ldrb	w1, [x3, x1]
   10eec:	b	10e38 <grub_mod_fini+0x10b10>
   10ef0:	ldrb	w2, [sp, #243]
   10ef4:	b	10340 <grub_mod_fini+0x10018>
   10ef8:	ldr	x20, [x21]
   10efc:	nop
   10f00:	mov	w0, #0xc                   	// #12
   10f04:	str	xzr, [x19, #104]
   10f08:	str	w0, [sp, #120]
   10f0c:	b	10288 <grub_mod_fini+0xff60>
   10f10:	mov	x0, #0x3c8                 	// #968
   10f14:	bl	0 <grub_malloc>
   10f18:	mov	x5, x0
   10f1c:	cbz	x0, 11038 <grub_mod_fini+0x10d10>
   10f20:	ldr	x0, [x20, #112]
   10f24:	str	x0, [x5]
   10f28:	mov	x4, #0x30                  	// #48
   10f2c:	mov	w3, #0x1                   	// #1
   10f30:	mov	x22, #0x8                   	// #8
   10f34:	mov	x1, #0x0                   	// #0
   10f38:	str	x5, [x20, #112]
   10f3c:	b	fe58 <grub_mod_fini+0xfb30>
   10f40:	mov	x1, x2
   10f44:	b	101f8 <grub_mod_fini+0xfed0>
   10f48:	str	wzr, [sp, #120]
   10f4c:	b	fdd8 <grub_mod_fini+0xfab0>
   10f50:	mov	x13, #0x1                   	// #1
   10f54:	mov	w12, w13
   10f58:	b	ffec <grub_mod_fini+0xfcc4>
   10f5c:	mov	x13, #0x0                   	// #0
   10f60:	mov	w12, #0x0                   	// #0
   10f64:	b	ffec <grub_mod_fini+0xfcc4>
   10f68:	mov	w0, #0xc                   	// #12
   10f6c:	str	xzr, [x27]
   10f70:	b	10280 <grub_mod_fini+0xff58>
   10f74:	cmp	w0, #0x6
   10f78:	b.eq	10a10 <grub_mod_fini+0x106e8>  // b.none
   10f7c:	cmp	w0, #0xc
   10f80:	b.ne	10ce0 <grub_mod_fini+0x109b8>  // b.any
   10f84:	ldr	w0, [x4]
   10f88:	cmp	w0, #0x40
   10f8c:	b.hi	11010 <grub_mod_fini+0x10ce8>  // b.pmore
   10f90:	cmp	w0, #0xf
   10f94:	b.ls	10a10 <grub_mod_fini+0x106e8>  // b.plast
   10f98:	sub	w0, w0, #0x10
   10f9c:	lsl	x0, x3, x0
   10fa0:	tst	x0, x2
   10fa4:	b.eq	10a10 <grub_mod_fini+0x106e8>  // b.none
   10fa8:	b	10ce0 <grub_mod_fini+0x109b8>
   10fac:	mov	w12, #0x2                   	// #2
   10fb0:	mov	x13, #0x2                   	// #2
   10fb4:	b	ffec <grub_mod_fini+0xfcc4>
   10fb8:	mov	x0, #0x3c8                 	// #968
   10fbc:	bl	0 <grub_malloc>
   10fc0:	cbz	x0, 10ef8 <grub_mod_fini+0x10bd0>
   10fc4:	ldr	x1, [x20, #112]
   10fc8:	str	x1, [x0]
   10fcc:	mov	x4, #0x30                  	// #48
   10fd0:	mov	w3, #0x1                   	// #1
   10fd4:	mov	x5, #0x8                   	// #8
   10fd8:	mov	x1, #0x0                   	// #0
   10fdc:	str	x0, [x20, #112]
   10fe0:	b	fec8 <grub_mod_fini+0xfba0>
   10fe4:	mov	w0, #0xc                   	// #12
   10fe8:	b	10ae4 <grub_mod_fini+0x107bc>
   10fec:	mov	w1, #0x0                   	// #0
   10ff0:	mov	x13, #0x0                   	// #0
   10ff4:	b	1007c <grub_mod_fini+0xfd54>
   10ff8:	ldrsb	w0, [x4]
   10ffc:	cmp	w0, #0x0
   11000:	csel	w8, w8, w1, ge  // ge = tcont
   11004:	b	10ce0 <grub_mod_fini+0x109b8>
   11008:	mov	w26, w1
   1100c:	b	10ce0 <grub_mod_fini+0x109b8>
   11010:	cmp	w0, #0x80
   11014:	b.eq	10ce0 <grub_mod_fini+0x109b8>  // b.none
   11018:	b	10a10 <grub_mod_fini+0x106e8>
   1101c:	mov	w3, w1
   11020:	b	fdd0 <grub_mod_fini+0xfaa8>
   11024:	mov	w0, #0xc                   	// #12
   11028:	b	102e8 <grub_mod_fini+0xffc0>
   1102c:	ldr	x20, [x21]
   11030:	str	xzr, [x19, #104]
   11034:	b	10288 <grub_mod_fini+0xff60>
   11038:	cbz	x24, 10ef8 <grub_mod_fini+0x10bd0>
   1103c:	mov	x22, #0x0                   	// #0
   11040:	mov	w25, #0x1                   	// #1
   11044:	b	fea4 <grub_mod_fini+0xfb7c>
   11048:	mov	w26, #0x0                   	// #0
   1104c:	ldr	w2, [x19, #140]
   11050:	mov	w1, #0x1                   	// #1
   11054:	ldrb	w0, [x19, #160]
   11058:	cmp	w2, #0x0
   1105c:	str	w1, [x19, #164]
   11060:	ccmp	w26, #0x0, #0x0, le
   11064:	and	w1, w0, #0xfffffff9
   11068:	cset	w0, ne  // ne = any
   1106c:	orr	w0, w1, w0, lsl #1
   11070:	strb	w0, [x19, #160]
   11074:	b	10a10 <grub_mod_fini+0x106e8>
	...

00000000000110a0 <re_compile_pattern>:
   110a0:	stp	x29, x30, [sp, #-16]!
   110a4:	adrp	x3, 0 <grub_mod_init-0x288>
   110a8:	mov	w6, #0x6f                  	// #111
   110ac:	mov	x29, sp
   110b0:	ldr	x3, [x3]
   110b4:	mov	x5, x2
   110b8:	ldrb	w4, [x2, #56]
   110bc:	mov	x2, x1
   110c0:	mov	x1, x0
   110c4:	mov	x0, x5
   110c8:	ldr	x3, [x3]
   110cc:	and	w6, w4, w6
   110d0:	ubfx	w4, w3, #25, #1
   110d4:	ubfiz	w4, w4, #4, #4
   110d8:	orr	w4, w4, #0xffffff80
   110dc:	orr	w4, w4, w6
   110e0:	strb	w4, [x5, #56]
   110e4:	bl	fb08 <grub_mod_fini+0xf7e0>
   110e8:	cbz	w0, 1110c <re_compile_pattern+0x6c>
   110ec:	adrp	x1, 0 <grub_mod_init-0x288>
   110f0:	ldp	x29, x30, [sp], #16
   110f4:	ldr	x1, [x1]
   110f8:	add	x2, x1, #0x228
   110fc:	add	x1, x1, #0xa8
   11100:	ldr	x0, [x2, w0, sxtw #3]
   11104:	add	x0, x1, x0
   11108:	ret
   1110c:	mov	x0, #0x0                   	// #0
   11110:	ldp	x29, x30, [sp], #16
   11114:	ret
	...

0000000000011128 <re_set_syntax>:
   11128:	adrp	x1, 0 <grub_mod_init-0x288>
   1112c:	mov	x2, x0
   11130:	ldr	x1, [x1]
   11134:	ldr	x0, [x1]
   11138:	str	x2, [x1]
   1113c:	ret
	...

0000000000011148 <re_compile_fastmap>:
   11148:	stp	x29, x30, [sp, #-48]!
   1114c:	mov	x2, #0x100                 	// #256
   11150:	mov	w1, #0x0                   	// #0
   11154:	mov	x29, sp
   11158:	stp	x19, x20, [sp, #16]
   1115c:	mov	x19, x0
   11160:	ldr	x20, [x0]
   11164:	str	x21, [sp, #32]
   11168:	ldr	x21, [x0, #32]
   1116c:	mov	x0, x21
   11170:	bl	0 <grub_memset>
   11174:	ldr	x1, [x20, #72]
   11178:	mov	x0, x19
   1117c:	mov	x3, x21
   11180:	add	x2, x1, #0x10
   11184:	add	x1, x1, #0xc
   11188:	bl	4e80 <grub_mod_fini+0x4b58>
   1118c:	ldp	x1, x0, [x20, #72]
   11190:	cmp	x1, x0
   11194:	b.eq	111b0 <re_compile_fastmap+0x68>  // b.none
   11198:	add	x2, x0, #0x10
   1119c:	add	x1, x0, #0xc
   111a0:	mov	x3, x21
   111a4:	mov	x0, x19
   111a8:	bl	4e80 <grub_mod_fini+0x4b58>
   111ac:	ldr	x0, [x20, #72]
   111b0:	ldr	x1, [x20, #88]
   111b4:	cmp	x1, x0
   111b8:	b.eq	111d4 <re_compile_fastmap+0x8c>  // b.none
   111bc:	add	x2, x1, #0x10
   111c0:	mov	x0, x19
   111c4:	mov	x3, x21
   111c8:	add	x1, x1, #0xc
   111cc:	bl	4e80 <grub_mod_fini+0x4b58>
   111d0:	ldr	x0, [x20, #72]
   111d4:	ldr	x1, [x20, #96]
   111d8:	cmp	x1, x0
   111dc:	b.eq	111f4 <re_compile_fastmap+0xac>  // b.none
   111e0:	add	x2, x1, #0x10
   111e4:	mov	x3, x21
   111e8:	add	x1, x1, #0xc
   111ec:	mov	x0, x19
   111f0:	bl	4e80 <grub_mod_fini+0x4b58>
   111f4:	ldrb	w1, [x19, #56]
   111f8:	mov	w0, #0x0                   	// #0
   111fc:	ldr	x21, [sp, #32]
   11200:	orr	w1, w1, #0x8
   11204:	strb	w1, [x19, #56]
   11208:	ldp	x19, x20, [sp, #16]
   1120c:	ldp	x29, x30, [sp], #48
   11210:	ret
   11214:	nop
   11218:	sub	sp, sp, #0x90
   1121c:	cmp	w3, #0x0
   11220:	ccmp	w3, w2, #0x0, ge  // ge = tcont
   11224:	stp	x29, x30, [sp, #16]
   11228:	add	x29, sp, #0x10
   1122c:	stp	x19, x20, [sp, #32]
   11230:	stp	x23, x24, [sp, #64]
   11234:	add	w24, w3, w4
   11238:	b.gt	114b4 <re_compile_fastmap+0x36c>
   1123c:	stp	x21, x22, [sp, #48]
   11240:	mov	w19, w3
   11244:	mov	x21, x0
   11248:	stp	x25, x26, [sp, #80]
   1124c:	mov	x22, x6
   11250:	mov	w25, w2
   11254:	stp	x27, x28, [sp, #96]
   11258:	and	w26, w7, #0xff
   1125c:	cmp	w24, w2
   11260:	b.gt	11480 <re_compile_fastmap+0x338>
   11264:	cmp	w4, #0x0
   11268:	ccmp	w3, w24, #0x4, ge  // ge = tcont
   1126c:	b.gt	11480 <re_compile_fastmap+0x338>
   11270:	tbnz	w24, #31, 11488 <re_compile_fastmap+0x340>
   11274:	cmp	w4, #0x0
   11278:	ccmp	w3, w24, #0x0, lt  // lt = tstop
   1127c:	b.le	11488 <re_compile_fastmap+0x340>
   11280:	ldrb	w0, [x21, #56]
   11284:	cmp	w24, w19
   11288:	ubfx	x28, x0, #5, #2
   1128c:	b.le	1129c <re_compile_fastmap+0x154>
   11290:	ldr	x2, [x21, #32]
   11294:	cbz	x2, 1129c <re_compile_fastmap+0x154>
   11298:	tbz	w0, #3, 11434 <re_compile_fastmap+0x2ec>
   1129c:	ldrb	w2, [x21, #56]
   112a0:	cmp	x22, #0x0
   112a4:	cset	w0, eq  // eq = none
   112a8:	ubfx	x3, x2, #4, #1
   112ac:	orr	w0, w0, w3
   112b0:	tbnz	w0, #0, 1141c <re_compile_fastmap+0x2d4>
   112b4:	and	w2, w2, #0x6
   112b8:	cmp	w2, #0x4
   112bc:	ldr	x0, [x21, #48]
   112c0:	b.eq	114e4 <re_compile_fastmap+0x39c>  // b.none
   112c4:	add	w27, w0, #0x1
   112c8:	mov	w20, w27
   112cc:	sxtw	x6, w27
   112d0:	sbfiz	x0, x27, #3, #32
   112d4:	stp	x6, x1, [sp, #120]
   112d8:	str	w5, [sp, #140]
   112dc:	bl	0 <grub_malloc>
   112e0:	mov	x23, x0
   112e4:	cbz	x0, 114d0 <re_compile_fastmap+0x388>
   112e8:	ldp	x6, x1, [sp, #120]
   112ec:	str	w28, [sp]
   112f0:	ldr	w5, [sp, #140]
   112f4:	mov	x7, x0
   112f8:	mov	w4, w24
   112fc:	mov	w2, w25
   11300:	mov	w3, w19
   11304:	mov	x0, x21
   11308:	bl	a6c0 <grub_mod_fini+0xa398>
   1130c:	cbnz	w0, 113e0 <re_compile_fastmap+0x298>
   11310:	cbz	x22, 113c4 <re_compile_fastmap+0x27c>
   11314:	ldrb	w0, [x21, #56]
   11318:	add	w25, w20, #0x1
   1131c:	ubfx	x0, x0, #1, #2
   11320:	cbz	w0, 11450 <re_compile_fastmap+0x308>
   11324:	cmp	w0, #0x1
   11328:	b.eq	11514 <re_compile_fastmap+0x3cc>  // b.none
   1132c:	cmp	w0, #0x2
   11330:	b.ne	11558 <re_compile_fastmap+0x410>  // b.any
   11334:	ldr	w0, [x22]
   11338:	mov	w24, #0x2                   	// #2
   1133c:	cmp	w0, w27
   11340:	b.cc	11574 <re_compile_fastmap+0x42c>  // b.lo, b.ul, b.last
   11344:	cmp	w20, #0x0
   11348:	b.le	11590 <re_compile_fastmap+0x448>
   1134c:	ldp	x4, x3, [x22, #8]
   11350:	mov	x1, x23
   11354:	mov	x0, #0x0                   	// #0
   11358:	ldr	w2, [x1]
   1135c:	add	x1, x1, #0x8
   11360:	str	w2, [x4, x0, lsl #2]
   11364:	ldur	w2, [x1, #-4]
   11368:	str	w2, [x3, x0, lsl #2]
   1136c:	add	x0, x0, #0x1
   11370:	cmp	w20, w0
   11374:	b.gt	11358 <re_compile_fastmap+0x210>
   11378:	mov	w1, w20
   1137c:	ldr	w0, [x22]
   11380:	cmp	w0, w1
   11384:	b.ls	113b0 <re_compile_fastmap+0x268>  // b.plast
   11388:	ldp	x4, x3, [x22, #8]
   1138c:	sxtw	x1, w20
   11390:	mov	w0, #0xffffffff            	// #-1
   11394:	nop
   11398:	str	w0, [x3, x1, lsl #2]
   1139c:	str	w0, [x4, x1, lsl #2]
   113a0:	add	x1, x1, #0x1
   113a4:	ldr	w2, [x22]
   113a8:	cmp	w2, w1
   113ac:	b.hi	11398 <re_compile_fastmap+0x250>  // b.pmore
   113b0:	ldrb	w0, [x21, #56]
   113b4:	bfi	w0, w24, #1, #2
   113b8:	strb	w0, [x21, #56]
   113bc:	tst	w0, #0x6
   113c0:	b.eq	113ec <re_compile_fastmap+0x2a4>  // b.none
   113c4:	ldr	w20, [x23]
   113c8:	cbz	w26, 113f0 <re_compile_fastmap+0x2a8>
   113cc:	cmp	w20, w19
   113d0:	b.ne	11498 <re_compile_fastmap+0x350>  // b.any
   113d4:	ldr	w20, [x23, #4]
   113d8:	sub	w20, w20, w19
   113dc:	b	113f0 <re_compile_fastmap+0x2a8>
   113e0:	cmp	w0, #0x1
   113e4:	mov	w20, #0xffffffff            	// #-1
   113e8:	b.eq	113f0 <re_compile_fastmap+0x2a8>  // b.none
   113ec:	mov	w20, #0xfffffffe            	// #-2
   113f0:	mov	x0, x23
   113f4:	bl	0 <grub_free>
   113f8:	ldp	x21, x22, [sp, #48]
   113fc:	ldp	x25, x26, [sp, #80]
   11400:	ldp	x27, x28, [sp, #96]
   11404:	mov	w0, w20
   11408:	ldp	x29, x30, [sp, #16]
   1140c:	ldp	x19, x20, [sp, #32]
   11410:	ldp	x23, x24, [sp, #64]
   11414:	add	sp, sp, #0x90
   11418:	ret
   1141c:	mov	x6, #0x1                   	// #1
   11420:	mov	w27, #0x1                   	// #1
   11424:	mov	w20, w6
   11428:	mov	x0, #0x8                   	// #8
   1142c:	mov	x22, #0x0                   	// #0
   11430:	b	112d4 <re_compile_fastmap+0x18c>
   11434:	mov	x0, x21
   11438:	str	x1, [sp, #120]
   1143c:	str	w5, [sp, #128]
   11440:	bl	11148 <re_compile_fastmap>
   11444:	ldr	w5, [sp, #128]
   11448:	ldr	x1, [sp, #120]
   1144c:	b	1129c <re_compile_fastmap+0x154>
   11450:	sbfiz	x24, x25, #2, #32
   11454:	mov	x0, x24
   11458:	bl	0 <grub_malloc>
   1145c:	str	x0, [x22, #8]
   11460:	cbz	x0, 1159c <re_compile_fastmap+0x454>
   11464:	mov	x0, x24
   11468:	bl	0 <grub_malloc>
   1146c:	str	x0, [x22, #16]
   11470:	cbz	x0, 115a4 <re_compile_fastmap+0x45c>
   11474:	mov	w24, #0x1                   	// #1
   11478:	str	w25, [x22]
   1147c:	b	11344 <re_compile_fastmap+0x1fc>
   11480:	mov	w24, w25
   11484:	b	11280 <re_compile_fastmap+0x138>
   11488:	ldrb	w28, [x21, #56]
   1148c:	mov	w24, #0x0                   	// #0
   11490:	ubfx	x28, x28, #5, #2
   11494:	b	1129c <re_compile_fastmap+0x154>
   11498:	adrp	x1, 0 <grub_mod_init-0x288>
   1149c:	adrp	x0, 0 <grub_mod_init-0x288>
   114a0:	mov	w2, #0x1be                 	// #446
   114a4:	ldr	x1, [x1]
   114a8:	ldr	x0, [x0]
   114ac:	bl	0 <grub_printf>
   114b0:	b	113d4 <re_compile_fastmap+0x28c>
   114b4:	mov	w20, #0xffffffff            	// #-1
   114b8:	mov	w0, w20
   114bc:	ldp	x29, x30, [sp, #16]
   114c0:	ldp	x19, x20, [sp, #32]
   114c4:	ldp	x23, x24, [sp, #64]
   114c8:	add	sp, sp, #0x90
   114cc:	ret
   114d0:	mov	w20, #0xfffffffe            	// #-2
   114d4:	ldp	x21, x22, [sp, #48]
   114d8:	ldp	x25, x26, [sp, #80]
   114dc:	ldp	x27, x28, [sp, #96]
   114e0:	b	11404 <re_compile_fastmap+0x2bc>
   114e4:	ldr	w27, [x22]
   114e8:	cmp	x0, w27, uxtw
   114ec:	b.cc	112c4 <re_compile_fastmap+0x17c>  // b.lo, b.ul, b.last
   114f0:	cmp	w27, #0x0
   114f4:	mov	w20, w27
   114f8:	b.gt	112cc <re_compile_fastmap+0x184>
   114fc:	mov	x6, #0x1                   	// #1
   11500:	mov	w27, #0x1                   	// #1
   11504:	mov	w20, w6
   11508:	mov	x0, #0x8                   	// #8
   1150c:	mov	x22, #0x0                   	// #0
   11510:	b	112d4 <re_compile_fastmap+0x18c>
   11514:	ldr	w1, [x22]
   11518:	mov	w24, w0
   1151c:	cmp	w1, w25
   11520:	b.cs	11344 <re_compile_fastmap+0x1fc>  // b.hs, b.nlast
   11524:	ldr	x0, [x22, #8]
   11528:	sbfiz	x28, x25, #2, #32
   1152c:	mov	x1, x28
   11530:	bl	0 <grub_realloc>
   11534:	mov	x27, x0
   11538:	cbz	x0, 1159c <re_compile_fastmap+0x454>
   1153c:	ldr	x0, [x22, #16]
   11540:	mov	x1, x28
   11544:	bl	0 <grub_realloc>
   11548:	cbz	x0, 115b4 <re_compile_fastmap+0x46c>
   1154c:	str	w25, [x22]
   11550:	stp	x27, x0, [x22, #8]
   11554:	b	11344 <re_compile_fastmap+0x1fc>
   11558:	adrp	x1, 0 <grub_mod_init-0x288>
   1155c:	adrp	x0, 0 <grub_mod_init-0x288>
   11560:	mov	w2, #0x1f9                 	// #505
   11564:	ldr	x1, [x1]
   11568:	ldr	x0, [x0]
   1156c:	bl	0 <grub_printf>
   11570:	b	11334 <re_compile_fastmap+0x1ec>
   11574:	adrp	x1, 0 <grub_mod_init-0x288>
   11578:	adrp	x0, 0 <grub_mod_init-0x288>
   1157c:	mov	w2, #0x1fb                 	// #507
   11580:	ldr	x1, [x1]
   11584:	ldr	x0, [x0]
   11588:	bl	0 <grub_printf>
   1158c:	b	11344 <re_compile_fastmap+0x1fc>
   11590:	mov	w20, #0x0                   	// #0
   11594:	mov	w1, #0x0                   	// #0
   11598:	b	1137c <re_compile_fastmap+0x234>
   1159c:	mov	w24, #0x0                   	// #0
   115a0:	b	113b0 <re_compile_fastmap+0x268>
   115a4:	ldr	x0, [x22, #8]
   115a8:	mov	w24, #0x0                   	// #0
   115ac:	bl	0 <grub_free>
   115b0:	b	113b0 <re_compile_fastmap+0x268>
   115b4:	mov	x0, x27
   115b8:	mov	w24, #0x0                   	// #0
   115bc:	bl	0 <grub_free>
   115c0:	b	113b0 <re_compile_fastmap+0x268>
   115c4:	nop
	...

00000000000115d8 <regcomp>:
   115d8:	stp	x29, x30, [sp, #-64]!
   115dc:	mov	x29, sp
   115e0:	stp	x19, x20, [sp, #16]
   115e4:	mov	w19, w2
   115e8:	mov	x20, x0
   115ec:	tst	x19, #0x1
   115f0:	stp	x21, x22, [sp, #32]
   115f4:	mov	x21, #0xb2fc                	// #45820
   115f8:	str	x23, [sp, #48]
   115fc:	mov	x23, #0x2c6                 	// #710
   11600:	stp	xzr, xzr, [x0]
   11604:	mov	x22, x1
   11608:	movk	x21, #0x3, lsl #16
   1160c:	str	xzr, [x0, #16]
   11610:	movk	x23, #0x101, lsl #16
   11614:	mov	x0, #0x100                 	// #256
   11618:	csel	x23, x21, x23, ne  // ne = any
   1161c:	bl	0 <grub_malloc>
   11620:	str	x0, [x20, #32]
   11624:	cbz	x0, 116d0 <regcomp+0xf8>
   11628:	sbfiz	x21, x19, #21, #32
   1162c:	mov	w0, #0x0                   	// #0
   11630:	and	x21, x21, #0x400000
   11634:	orr	x21, x21, x23
   11638:	tbnz	w19, #2, 116ac <regcomp+0xd4>
   1163c:	ldrb	w1, [x20, #56]
   11640:	ubfx	x19, x19, #3, #1
   11644:	ubfiz	w0, w0, #7, #1
   11648:	mov	w2, #0x6f                  	// #111
   1164c:	orr	w19, w0, w19, lsl #4
   11650:	and	w0, w1, w2
   11654:	orr	w19, w19, w0
   11658:	str	xzr, [x20, #40]
   1165c:	strb	w19, [x20, #56]
   11660:	mov	x0, x22
   11664:	bl	0 <grub_strlen>
   11668:	mov	x2, x0
   1166c:	mov	x3, x21
   11670:	mov	x1, x22
   11674:	mov	x0, x20
   11678:	bl	fb08 <grub_mod_fini+0xf7e0>
   1167c:	mov	w19, w0
   11680:	cmp	w0, #0x10
   11684:	b.eq	116bc <regcomp+0xe4>  // b.none
   11688:	cbnz	w0, 116c0 <regcomp+0xe8>
   1168c:	mov	x0, x20
   11690:	bl	11148 <re_compile_fastmap>
   11694:	mov	w0, w19
   11698:	ldp	x19, x20, [sp, #16]
   1169c:	ldp	x21, x22, [sp, #32]
   116a0:	ldr	x23, [sp, #48]
   116a4:	ldp	x29, x30, [sp], #64
   116a8:	ret
   116ac:	and	x21, x21, #0xffffffffffffffbf
   116b0:	mov	w0, #0x1                   	// #1
   116b4:	orr	x21, x21, #0x100
   116b8:	b	1163c <regcomp+0x64>
   116bc:	mov	w19, #0x8                   	// #8
   116c0:	ldr	x0, [x20, #32]
   116c4:	bl	0 <grub_free>
   116c8:	str	xzr, [x20, #32]
   116cc:	b	11694 <regcomp+0xbc>
   116d0:	mov	w19, #0xc                   	// #12
   116d4:	mov	w0, w19
   116d8:	ldp	x19, x20, [sp, #16]
   116dc:	ldp	x21, x22, [sp, #32]
   116e0:	ldr	x23, [sp, #48]
   116e4:	ldp	x29, x30, [sp], #64
   116e8:	ret
   116ec:	nop

00000000000116f0 <regerror>:
   116f0:	stp	x29, x30, [sp, #-48]!
   116f4:	cmp	w0, #0x10
   116f8:	mov	x29, sp
   116fc:	stp	x19, x20, [sp, #16]
   11700:	stp	x21, x22, [sp, #32]
   11704:	mov	x22, x2
   11708:	mov	x21, x3
   1170c:	b.hi	11764 <regerror+0x74>  // b.pmore
   11710:	adrp	x1, 0 <grub_mod_init-0x288>
   11714:	ldr	x19, [x1]
   11718:	add	x1, x19, #0x228
   1171c:	add	x19, x19, #0xa8
   11720:	ldr	x1, [x1, w0, sxtw #3]
   11724:	add	x19, x19, x1
   11728:	mov	x0, x19
   1172c:	bl	0 <grub_strlen>
   11730:	add	x20, x0, #0x1
   11734:	cbz	x21, 11750 <regerror+0x60>
   11738:	cmp	x20, x21
   1173c:	mov	x2, x20
   11740:	b.hi	11770 <regerror+0x80>  // b.pmore
   11744:	mov	x1, x19
   11748:	mov	x0, x22
   1174c:	bl	0 <grub_memmove>
   11750:	mov	x0, x20
   11754:	ldp	x19, x20, [sp, #16]
   11758:	ldp	x21, x22, [sp, #32]
   1175c:	ldp	x29, x30, [sp], #48
   11760:	ret
   11764:	adrp	x0, 0 <grub_mod_init-0x288>
   11768:	ldr	x19, [x0]
   1176c:	b	11728 <regerror+0x38>
   11770:	sub	x2, x21, #0x1
   11774:	strb	wzr, [x22, x2]
   11778:	b	11744 <regerror+0x54>
   1177c:	nop
	...

0000000000011790 <regfree>:
   11790:	stp	x29, x30, [sp, #-32]!
   11794:	mov	x29, sp
   11798:	str	x19, [sp, #16]
   1179c:	mov	x19, x0
   117a0:	ldr	x0, [x0]
   117a4:	cbz	x0, 117ac <regfree+0x1c>
   117a8:	bl	3f68 <grub_mod_fini+0x3c40>
   117ac:	ldr	x0, [x19, #32]
   117b0:	stp	xzr, xzr, [x19]
   117b4:	bl	0 <grub_free>
   117b8:	str	xzr, [x19, #32]
   117bc:	ldr	x0, [x19, #40]
   117c0:	bl	0 <grub_free>
   117c4:	str	xzr, [x19, #40]
   117c8:	ldr	x19, [sp, #16]
   117cc:	ldp	x29, x30, [sp], #32
   117d0:	ret
   117d4:	nop

00000000000117d8 <regexec>:
   117d8:	tst	w4, #0xfffffff8
   117dc:	b.ne	118b0 <regexec+0xd8>  // b.any
   117e0:	sub	sp, sp, #0x60
   117e4:	stp	x29, x30, [sp, #16]
   117e8:	add	x29, sp, #0x10
   117ec:	stp	x19, x20, [sp, #32]
   117f0:	mov	w19, w4
   117f4:	mov	x20, x0
   117f8:	stp	x21, x22, [sp, #48]
   117fc:	mov	x22, x2
   11800:	mov	x21, x3
   11804:	str	x23, [sp, #64]
   11808:	and	w23, w4, #0x4
   1180c:	tbz	w19, #2, 11898 <regexec+0xc0>
   11810:	ldp	w23, w5, [x3]
   11814:	ldrb	w0, [x20, #56]
   11818:	str	w19, [sp]
   1181c:	tbnz	w0, #4, 1185c <regexec+0x84>
   11820:	mov	x7, x21
   11824:	mov	x6, x22
   11828:	mov	w3, w23
   1182c:	mov	x0, x20
   11830:	mov	w4, w5
   11834:	mov	w2, w5
   11838:	bl	a6c0 <grub_mod_fini+0xa398>
   1183c:	cmp	w0, #0x0
   11840:	cset	w0, ne  // ne = any
   11844:	ldp	x29, x30, [sp, #16]
   11848:	ldp	x19, x20, [sp, #32]
   1184c:	ldp	x21, x22, [sp, #48]
   11850:	ldr	x23, [sp, #64]
   11854:	add	sp, sp, #0x60
   11858:	ret
   1185c:	mov	w3, w23
   11860:	mov	x0, x20
   11864:	mov	w4, w5
   11868:	mov	w2, w5
   1186c:	mov	x7, #0x0                   	// #0
   11870:	mov	x6, #0x0                   	// #0
   11874:	bl	a6c0 <grub_mod_fini+0xa398>
   11878:	cmp	w0, #0x0
   1187c:	cset	w0, ne  // ne = any
   11880:	ldp	x29, x30, [sp, #16]
   11884:	ldp	x19, x20, [sp, #32]
   11888:	ldp	x21, x22, [sp, #48]
   1188c:	ldr	x23, [sp, #64]
   11890:	add	sp, sp, #0x60
   11894:	ret
   11898:	mov	x0, x1
   1189c:	str	x1, [sp, #88]
   118a0:	bl	0 <grub_strlen>
   118a4:	mov	w5, w0
   118a8:	ldr	x1, [sp, #88]
   118ac:	b	11814 <regexec+0x3c>
   118b0:	mov	w0, #0x2                   	// #2
   118b4:	ret

00000000000118b8 <re_match>:
   118b8:	sub	sp, sp, #0x70
   118bc:	cmp	w3, #0x0
   118c0:	ccmp	w2, w3, #0x1, ge  // ge = tcont
   118c4:	stp	x29, x30, [sp, #16]
   118c8:	add	x29, sp, #0x10
   118cc:	stp	x19, x20, [sp, #32]
   118d0:	b.lt	11adc <re_match+0x224>  // b.tstop
   118d4:	stp	x23, x24, [sp, #64]
   118d8:	mov	x23, x0
   118dc:	ldrb	w0, [x0, #56]
   118e0:	cmp	x4, #0x0
   118e4:	stp	x21, x22, [sp, #48]
   118e8:	mov	w24, w2
   118ec:	stp	x25, x26, [sp, #80]
   118f0:	ubfx	x2, x0, #4, #1
   118f4:	mov	x25, x1
   118f8:	stp	x27, x28, [sp, #96]
   118fc:	cset	w1, eq  // eq = none
   11900:	mov	w19, w3
   11904:	mov	x21, x4
   11908:	ubfx	x26, x0, #5, #2
   1190c:	orr	w1, w1, w2
   11910:	tbnz	w1, #0, 11a78 <re_match+0x1c0>
   11914:	and	w0, w0, #0x6
   11918:	cmp	w0, #0x4
   1191c:	ldr	x0, [x23, #48]
   11920:	b.eq	11b0c <re_match+0x254>  // b.none
   11924:	add	w27, w0, #0x1
   11928:	mov	w20, w27
   1192c:	sxtw	x28, w27
   11930:	sbfiz	x0, x27, #3, #32
   11934:	bl	0 <grub_malloc>
   11938:	mov	x22, x0
   1193c:	cbz	x0, 11af4 <re_match+0x23c>
   11940:	str	w26, [sp]
   11944:	mov	x7, x0
   11948:	mov	x6, x28
   1194c:	mov	x1, x25
   11950:	mov	w5, w24
   11954:	mov	w2, w24
   11958:	mov	w4, w19
   1195c:	mov	w3, w19
   11960:	mov	x0, x23
   11964:	bl	a6c0 <grub_mod_fini+0xa398>
   11968:	cbnz	w0, 11a3c <re_match+0x184>
   1196c:	cbz	x21, 11a24 <re_match+0x16c>
   11970:	ldrb	w0, [x23, #56]
   11974:	add	w25, w20, #0x1
   11978:	ubfx	x0, x0, #1, #2
   1197c:	cbz	w0, 11aac <re_match+0x1f4>
   11980:	cmp	w0, #0x1
   11984:	b.eq	11b3c <re_match+0x284>  // b.none
   11988:	cmp	w0, #0x2
   1198c:	b.ne	11b80 <re_match+0x2c8>  // b.any
   11990:	ldr	w0, [x21]
   11994:	mov	w24, #0x2                   	// #2
   11998:	cmp	w27, w0
   1199c:	b.hi	11b9c <re_match+0x2e4>  // b.pmore
   119a0:	cmp	w20, #0x0
   119a4:	b.le	11bb8 <re_match+0x300>
   119a8:	ldp	x4, x3, [x21, #8]
   119ac:	mov	x1, x22
   119b0:	mov	x0, #0x0                   	// #0
   119b4:	nop
   119b8:	ldr	w2, [x1]
   119bc:	add	x1, x1, #0x8
   119c0:	str	w2, [x4, x0, lsl #2]
   119c4:	ldur	w2, [x1, #-4]
   119c8:	str	w2, [x3, x0, lsl #2]
   119cc:	add	x0, x0, #0x1
   119d0:	cmp	w20, w0
   119d4:	b.gt	119b8 <re_match+0x100>
   119d8:	mov	w1, w20
   119dc:	ldr	w0, [x21]
   119e0:	cmp	w0, w1
   119e4:	b.ls	11a10 <re_match+0x158>  // b.plast
   119e8:	ldp	x4, x3, [x21, #8]
   119ec:	sxtw	x1, w20
   119f0:	mov	w0, #0xffffffff            	// #-1
   119f4:	nop
   119f8:	str	w0, [x3, x1, lsl #2]
   119fc:	str	w0, [x4, x1, lsl #2]
   11a00:	add	x1, x1, #0x1
   11a04:	ldr	w2, [x21]
   11a08:	cmp	w2, w1
   11a0c:	b.hi	119f8 <re_match+0x140>  // b.pmore
   11a10:	ldrb	w0, [x23, #56]
   11a14:	bfi	w0, w24, #1, #2
   11a18:	strb	w0, [x23, #56]
   11a1c:	tst	w0, #0x6
   11a20:	b.eq	11a48 <re_match+0x190>  // b.none
   11a24:	ldr	w0, [x22]
   11a28:	cmp	w19, w0
   11a2c:	b.ne	11a90 <re_match+0x1d8>  // b.any
   11a30:	ldr	w3, [x22, #4]
   11a34:	sub	w19, w3, w19
   11a38:	b	11a4c <re_match+0x194>
   11a3c:	cmp	w0, #0x1
   11a40:	mov	w19, #0xffffffff            	// #-1
   11a44:	b.eq	11a4c <re_match+0x194>  // b.none
   11a48:	mov	w19, #0xfffffffe            	// #-2
   11a4c:	mov	x0, x22
   11a50:	bl	0 <grub_free>
   11a54:	ldp	x21, x22, [sp, #48]
   11a58:	ldp	x23, x24, [sp, #64]
   11a5c:	ldp	x25, x26, [sp, #80]
   11a60:	ldp	x27, x28, [sp, #96]
   11a64:	mov	w0, w19
   11a68:	ldp	x29, x30, [sp, #16]
   11a6c:	ldp	x19, x20, [sp, #32]
   11a70:	add	sp, sp, #0x70
   11a74:	ret
   11a78:	mov	x28, #0x1                   	// #1
   11a7c:	mov	w27, #0x1                   	// #1
   11a80:	mov	w20, w28
   11a84:	mov	x0, #0x8                   	// #8
   11a88:	mov	x21, #0x0                   	// #0
   11a8c:	b	11934 <re_match+0x7c>
   11a90:	adrp	x1, 0 <grub_mod_init-0x288>
   11a94:	adrp	x0, 0 <grub_mod_init-0x288>
   11a98:	mov	w2, #0x1be                 	// #446
   11a9c:	ldr	x1, [x1]
   11aa0:	ldr	x0, [x0]
   11aa4:	bl	0 <grub_printf>
   11aa8:	b	11a30 <re_match+0x178>
   11aac:	sbfiz	x24, x25, #2, #32
   11ab0:	mov	x0, x24
   11ab4:	bl	0 <grub_malloc>
   11ab8:	str	x0, [x21, #8]
   11abc:	cbz	x0, 11bc4 <re_match+0x30c>
   11ac0:	mov	x0, x24
   11ac4:	bl	0 <grub_malloc>
   11ac8:	str	x0, [x21, #16]
   11acc:	cbz	x0, 11bcc <re_match+0x314>
   11ad0:	mov	w24, #0x1                   	// #1
   11ad4:	str	w25, [x21]
   11ad8:	b	119a0 <re_match+0xe8>
   11adc:	mov	w19, #0xffffffff            	// #-1
   11ae0:	mov	w0, w19
   11ae4:	ldp	x29, x30, [sp, #16]
   11ae8:	ldp	x19, x20, [sp, #32]
   11aec:	add	sp, sp, #0x70
   11af0:	ret
   11af4:	mov	w19, #0xfffffffe            	// #-2
   11af8:	ldp	x21, x22, [sp, #48]
   11afc:	ldp	x23, x24, [sp, #64]
   11b00:	ldp	x25, x26, [sp, #80]
   11b04:	ldp	x27, x28, [sp, #96]
   11b08:	b	11a64 <re_match+0x1ac>
   11b0c:	ldr	w27, [x21]
   11b10:	cmp	x0, w27, uxtw
   11b14:	b.cc	11924 <re_match+0x6c>  // b.lo, b.ul, b.last
   11b18:	cmp	w27, #0x0
   11b1c:	mov	w20, w27
   11b20:	b.gt	1192c <re_match+0x74>
   11b24:	mov	x28, #0x1                   	// #1
   11b28:	mov	w27, #0x1                   	// #1
   11b2c:	mov	w20, w28
   11b30:	mov	x0, #0x8                   	// #8
   11b34:	mov	x21, #0x0                   	// #0
   11b38:	b	11934 <re_match+0x7c>
   11b3c:	ldr	w1, [x21]
   11b40:	mov	w24, w0
   11b44:	cmp	w1, w25
   11b48:	b.cs	119a0 <re_match+0xe8>  // b.hs, b.nlast
   11b4c:	ldr	x0, [x21, #8]
   11b50:	sbfiz	x27, x25, #2, #32
   11b54:	mov	x1, x27
   11b58:	bl	0 <grub_realloc>
   11b5c:	mov	x26, x0
   11b60:	cbz	x0, 11bc4 <re_match+0x30c>
   11b64:	ldr	x0, [x21, #16]
   11b68:	mov	x1, x27
   11b6c:	bl	0 <grub_realloc>
   11b70:	cbz	x0, 11bdc <re_match+0x324>
   11b74:	str	w25, [x21]
   11b78:	stp	x26, x0, [x21, #8]
   11b7c:	b	119a0 <re_match+0xe8>
   11b80:	adrp	x1, 0 <grub_mod_init-0x288>
   11b84:	adrp	x0, 0 <grub_mod_init-0x288>
   11b88:	mov	w2, #0x1f9                 	// #505
   11b8c:	ldr	x1, [x1]
   11b90:	ldr	x0, [x0]
   11b94:	bl	0 <grub_printf>
   11b98:	b	11990 <re_match+0xd8>
   11b9c:	adrp	x1, 0 <grub_mod_init-0x288>
   11ba0:	adrp	x0, 0 <grub_mod_init-0x288>
   11ba4:	mov	w2, #0x1fb                 	// #507
   11ba8:	ldr	x1, [x1]
   11bac:	ldr	x0, [x0]
   11bb0:	bl	0 <grub_printf>
   11bb4:	b	119a0 <re_match+0xe8>
   11bb8:	mov	w20, #0x0                   	// #0
   11bbc:	mov	w1, #0x0                   	// #0
   11bc0:	b	119dc <re_match+0x124>
   11bc4:	mov	w24, #0x0                   	// #0
   11bc8:	b	11a10 <re_match+0x158>
   11bcc:	ldr	x0, [x21, #8]
   11bd0:	mov	w24, #0x0                   	// #0
   11bd4:	bl	0 <grub_free>
   11bd8:	b	11a10 <re_match+0x158>
   11bdc:	mov	x0, x26
   11be0:	mov	w24, #0x0                   	// #0
   11be4:	bl	0 <grub_free>
   11be8:	b	11a10 <re_match+0x158>
   11bec:	nop
	...

0000000000011c00 <re_search>:
   11c00:	sub	sp, sp, #0x80
   11c04:	cmp	w3, #0x0
   11c08:	ccmp	w2, w3, #0x1, ge  // ge = tcont
   11c0c:	stp	x29, x30, [sp, #16]
   11c10:	add	x29, sp, #0x10
   11c14:	stp	x19, x20, [sp, #32]
   11c18:	stp	x23, x24, [sp, #64]
   11c1c:	add	w23, w3, w4
   11c20:	b.lt	11e64 <re_search+0x264>  // b.tstop
   11c24:	stp	x21, x22, [sp, #48]
   11c28:	mov	w19, w3
   11c2c:	mov	x21, x0
   11c30:	stp	x25, x26, [sp, #80]
   11c34:	mov	x22, x5
   11c38:	cmp	w2, w23
   11c3c:	stp	x27, x28, [sp, #96]
   11c40:	mov	x27, x1
   11c44:	b.lt	11e4c <re_search+0x24c>  // b.tstop
   11c48:	cmp	w4, #0x0
   11c4c:	ccmp	w3, w23, #0x4, ge  // ge = tcont
   11c50:	b.gt	11e4c <re_search+0x24c>
   11c54:	tbnz	w23, #31, 11e54 <re_search+0x254>
   11c58:	cmp	w4, #0x0
   11c5c:	ccmp	w3, w23, #0x0, lt  // lt = tstop
   11c60:	b.le	11e54 <re_search+0x254>
   11c64:	ldrb	w0, [x21, #56]
   11c68:	cmp	w19, w23
   11c6c:	ubfx	x24, x0, #5, #2
   11c70:	b.ge	11c80 <re_search+0x80>  // b.tcont
   11c74:	ldr	x1, [x21, #32]
   11c78:	cbz	x1, 11c80 <re_search+0x80>
   11c7c:	tbz	w0, #3, 11e08 <re_search+0x208>
   11c80:	ldrb	w3, [x21, #56]
   11c84:	cmp	x22, #0x0
   11c88:	cset	w0, eq  // eq = none
   11c8c:	ubfx	x1, x3, #4, #1
   11c90:	orr	w0, w0, w1
   11c94:	tbnz	w0, #0, 11df0 <re_search+0x1f0>
   11c98:	and	w3, w3, #0x6
   11c9c:	cmp	w3, #0x4
   11ca0:	ldr	x0, [x21, #48]
   11ca4:	b.eq	11e94 <re_search+0x294>  // b.none
   11ca8:	add	w26, w0, #0x1
   11cac:	mov	w20, w26
   11cb0:	sxtw	x25, w26
   11cb4:	sbfiz	x0, x26, #3, #32
   11cb8:	str	w2, [sp, #124]
   11cbc:	bl	0 <grub_malloc>
   11cc0:	mov	x28, x0
   11cc4:	cbz	x0, 11e80 <re_search+0x280>
   11cc8:	ldr	w2, [sp, #124]
   11ccc:	mov	x7, x0
   11cd0:	str	w24, [sp]
   11cd4:	mov	x6, x25
   11cd8:	mov	w4, w23
   11cdc:	mov	w3, w19
   11ce0:	mov	x1, x27
   11ce4:	mov	x0, x21
   11ce8:	mov	w5, w2
   11cec:	bl	a6c0 <grub_mod_fini+0xa398>
   11cf0:	cbnz	w0, 11db4 <re_search+0x1b4>
   11cf4:	cbz	x22, 11dac <re_search+0x1ac>
   11cf8:	ldrb	w0, [x21, #56]
   11cfc:	add	w23, w20, #0x1
   11d00:	ubfx	x0, x0, #1, #2
   11d04:	cbz	w0, 11e1c <re_search+0x21c>
   11d08:	cmp	w0, #0x1
   11d0c:	b.eq	11ec4 <re_search+0x2c4>  // b.none
   11d10:	cmp	w0, #0x2
   11d14:	b.ne	11f08 <re_search+0x308>  // b.any
   11d18:	ldr	w0, [x22]
   11d1c:	mov	w19, #0x2                   	// #2
   11d20:	cmp	w0, w26
   11d24:	b.cc	11f24 <re_search+0x324>  // b.lo, b.ul, b.last
   11d28:	cmp	w20, #0x0
   11d2c:	b.le	11f40 <re_search+0x340>
   11d30:	ldp	x4, x3, [x22, #8]
   11d34:	mov	x2, x28
   11d38:	mov	x1, #0x0                   	// #0
   11d3c:	nop
   11d40:	ldr	w0, [x2]
   11d44:	add	x2, x2, #0x8
   11d48:	str	w0, [x4, x1, lsl #2]
   11d4c:	ldur	w0, [x2, #-4]
   11d50:	str	w0, [x3, x1, lsl #2]
   11d54:	add	x1, x1, #0x1
   11d58:	cmp	w20, w1
   11d5c:	b.gt	11d40 <re_search+0x140>
   11d60:	mov	w1, w20
   11d64:	ldr	w0, [x22]
   11d68:	cmp	w0, w1
   11d6c:	b.ls	11d98 <re_search+0x198>  // b.plast
   11d70:	ldp	x4, x3, [x22, #8]
   11d74:	sxtw	x1, w20
   11d78:	mov	w2, #0xffffffff            	// #-1
   11d7c:	nop
   11d80:	str	w2, [x3, x1, lsl #2]
   11d84:	str	w2, [x4, x1, lsl #2]
   11d88:	add	x1, x1, #0x1
   11d8c:	ldr	w0, [x22]
   11d90:	cmp	w0, w1
   11d94:	b.hi	11d80 <re_search+0x180>  // b.pmore
   11d98:	ldrb	w0, [x21, #56]
   11d9c:	bfi	w0, w19, #1, #2
   11da0:	strb	w0, [x21, #56]
   11da4:	tst	w0, #0x6
   11da8:	b.eq	11dc0 <re_search+0x1c0>  // b.none
   11dac:	ldr	w19, [x28]
   11db0:	b	11dc4 <re_search+0x1c4>
   11db4:	cmp	w0, #0x1
   11db8:	mov	w19, #0xffffffff            	// #-1
   11dbc:	b.eq	11dc4 <re_search+0x1c4>  // b.none
   11dc0:	mov	w19, #0xfffffffe            	// #-2
   11dc4:	mov	x0, x28
   11dc8:	bl	0 <grub_free>
   11dcc:	ldp	x21, x22, [sp, #48]
   11dd0:	ldp	x25, x26, [sp, #80]
   11dd4:	ldp	x27, x28, [sp, #96]
   11dd8:	mov	w0, w19
   11ddc:	ldp	x29, x30, [sp, #16]
   11de0:	ldp	x19, x20, [sp, #32]
   11de4:	ldp	x23, x24, [sp, #64]
   11de8:	add	sp, sp, #0x80
   11dec:	ret
   11df0:	mov	x25, #0x1                   	// #1
   11df4:	mov	w26, #0x1                   	// #1
   11df8:	mov	w20, w25
   11dfc:	mov	x0, #0x8                   	// #8
   11e00:	mov	x22, #0x0                   	// #0
   11e04:	b	11cb8 <re_search+0xb8>
   11e08:	mov	x0, x21
   11e0c:	str	w2, [sp, #124]
   11e10:	bl	11148 <re_compile_fastmap>
   11e14:	ldr	w2, [sp, #124]
   11e18:	b	11c80 <re_search+0x80>
   11e1c:	sbfiz	x19, x23, #2, #32
   11e20:	mov	x0, x19
   11e24:	bl	0 <grub_malloc>
   11e28:	str	x0, [x22, #8]
   11e2c:	cbz	x0, 11f4c <re_search+0x34c>
   11e30:	mov	x0, x19
   11e34:	bl	0 <grub_malloc>
   11e38:	str	x0, [x22, #16]
   11e3c:	cbz	x0, 11f54 <re_search+0x354>
   11e40:	mov	w19, #0x1                   	// #1
   11e44:	str	w23, [x22]
   11e48:	b	11d28 <re_search+0x128>
   11e4c:	mov	w23, w2
   11e50:	b	11c64 <re_search+0x64>
   11e54:	ldrb	w24, [x21, #56]
   11e58:	mov	w23, #0x0                   	// #0
   11e5c:	ubfx	x24, x24, #5, #2
   11e60:	b	11c80 <re_search+0x80>
   11e64:	mov	w19, #0xffffffff            	// #-1
   11e68:	mov	w0, w19
   11e6c:	ldp	x29, x30, [sp, #16]
   11e70:	ldp	x19, x20, [sp, #32]
   11e74:	ldp	x23, x24, [sp, #64]
   11e78:	add	sp, sp, #0x80
   11e7c:	ret
   11e80:	mov	w19, #0xfffffffe            	// #-2
   11e84:	ldp	x21, x22, [sp, #48]
   11e88:	ldp	x25, x26, [sp, #80]
   11e8c:	ldp	x27, x28, [sp, #96]
   11e90:	b	11dd8 <re_search+0x1d8>
   11e94:	ldr	w26, [x22]
   11e98:	cmp	x0, w26, uxtw
   11e9c:	b.cc	11ca8 <re_search+0xa8>  // b.lo, b.ul, b.last
   11ea0:	cmp	w26, #0x0
   11ea4:	mov	w20, w26
   11ea8:	b.gt	11cb0 <re_search+0xb0>
   11eac:	mov	x25, #0x1                   	// #1
   11eb0:	mov	w26, #0x1                   	// #1
   11eb4:	mov	w20, w25
   11eb8:	mov	x0, #0x8                   	// #8
   11ebc:	mov	x22, #0x0                   	// #0
   11ec0:	b	11cb8 <re_search+0xb8>
   11ec4:	ldr	w1, [x22]
   11ec8:	mov	w19, w0
   11ecc:	cmp	w1, w23
   11ed0:	b.cs	11d28 <re_search+0x128>  // b.hs, b.nlast
   11ed4:	ldr	x0, [x22, #8]
   11ed8:	sbfiz	x25, x23, #2, #32
   11edc:	mov	x1, x25
   11ee0:	bl	0 <grub_realloc>
   11ee4:	mov	x24, x0
   11ee8:	cbz	x0, 11f4c <re_search+0x34c>
   11eec:	ldr	x0, [x22, #16]
   11ef0:	mov	x1, x25
   11ef4:	bl	0 <grub_realloc>
   11ef8:	cbz	x0, 11f64 <re_search+0x364>
   11efc:	str	w23, [x22]
   11f00:	stp	x24, x0, [x22, #8]
   11f04:	b	11d28 <re_search+0x128>
   11f08:	adrp	x1, 0 <grub_mod_init-0x288>
   11f0c:	adrp	x0, 0 <grub_mod_init-0x288>
   11f10:	mov	w2, #0x1f9                 	// #505
   11f14:	ldr	x1, [x1]
   11f18:	ldr	x0, [x0]
   11f1c:	bl	0 <grub_printf>
   11f20:	b	11d18 <re_search+0x118>
   11f24:	adrp	x1, 0 <grub_mod_init-0x288>
   11f28:	adrp	x0, 0 <grub_mod_init-0x288>
   11f2c:	mov	w2, #0x1fb                 	// #507
   11f30:	ldr	x1, [x1]
   11f34:	ldr	x0, [x0]
   11f38:	bl	0 <grub_printf>
   11f3c:	b	11d28 <re_search+0x128>
   11f40:	mov	w20, #0x0                   	// #0
   11f44:	mov	w1, #0x0                   	// #0
   11f48:	b	11d64 <re_search+0x164>
   11f4c:	mov	w19, #0x0                   	// #0
   11f50:	b	11d98 <re_search+0x198>
   11f54:	ldr	x0, [x22, #8]
   11f58:	mov	w19, #0x0                   	// #0
   11f5c:	bl	0 <grub_free>
   11f60:	b	11d98 <re_search+0x198>
   11f64:	mov	x0, x24
   11f68:	mov	w19, #0x0                   	// #0
   11f6c:	bl	0 <grub_free>
   11f70:	b	11d98 <re_search+0x198>
   11f74:	nop
	...

0000000000011f88 <re_match_2>:
   11f88:	stp	x29, x30, [sp, #-96]!
   11f8c:	cmp	w4, #0x0
   11f90:	ccmp	w7, #0x0, #0x1, ge  // ge = tcont
   11f94:	mov	x29, sp
   11f98:	stp	x19, x20, [sp, #16]
   11f9c:	sxtw	x19, w2
   11fa0:	ccmp	w19, #0x0, #0x1, ge  // ge = tcont
   11fa4:	b.lt	1207c <re_match_2+0xf4>  // b.tstop
   11fa8:	stp	x27, x28, [sp, #80]
   11fac:	mov	w20, w4
   11fb0:	adds	w27, w19, w4
   11fb4:	b.vs	12078 <re_match_2+0xf0>
   11fb8:	stp	x21, x22, [sp, #32]
   11fbc:	mov	x28, x1
   11fc0:	mov	w21, w7
   11fc4:	stp	x23, x24, [sp, #48]
   11fc8:	mov	x23, x0
   11fcc:	mov	w24, w5
   11fd0:	stp	x25, x26, [sp, #64]
   11fd4:	mov	x25, x6
   11fd8:	cbz	w4, 12090 <re_match_2+0x108>
   11fdc:	mov	x22, x3
   11fe0:	mov	x26, #0x0                   	// #0
   11fe4:	cbnz	w19, 12038 <re_match_2+0xb0>
   11fe8:	mov	x6, x25
   11fec:	mov	w5, w21
   11ff0:	mov	w3, w24
   11ff4:	mov	w2, w27
   11ff8:	mov	x1, x22
   11ffc:	mov	w7, #0x1                   	// #1
   12000:	mov	w4, #0x0                   	// #0
   12004:	mov	x0, x23
   12008:	bl	11218 <re_compile_fastmap+0xd0>
   1200c:	mov	w19, w0
   12010:	mov	x0, x26
   12014:	bl	0 <grub_free>
   12018:	mov	w0, w19
   1201c:	ldp	x19, x20, [sp, #16]
   12020:	ldp	x21, x22, [sp, #32]
   12024:	ldp	x23, x24, [sp, #48]
   12028:	ldp	x25, x26, [sp, #64]
   1202c:	ldp	x27, x28, [sp, #80]
   12030:	ldp	x29, x30, [sp], #96
   12034:	ret
   12038:	sxtw	x0, w27
   1203c:	bl	0 <grub_malloc>
   12040:	mov	x26, x0
   12044:	cbz	x0, 1206c <re_match_2+0xe4>
   12048:	mov	x1, x28
   1204c:	mov	x2, x19
   12050:	bl	0 <grub_memmove>
   12054:	mov	x1, x22
   12058:	add	x0, x26, x19
   1205c:	sxtw	x2, w20
   12060:	mov	x22, x26
   12064:	bl	0 <grub_memmove>
   12068:	b	11fe8 <re_match_2+0x60>
   1206c:	ldp	x21, x22, [sp, #32]
   12070:	ldp	x23, x24, [sp, #48]
   12074:	ldp	x25, x26, [sp, #64]
   12078:	ldp	x27, x28, [sp, #80]
   1207c:	mov	w19, #0xfffffffe            	// #-2
   12080:	mov	w0, w19
   12084:	ldp	x19, x20, [sp, #16]
   12088:	ldp	x29, x30, [sp], #96
   1208c:	ret
   12090:	mov	x22, x1
   12094:	mov	x26, #0x0                   	// #0
   12098:	b	11fe8 <re_match_2+0x60>
   1209c:	nop

00000000000120a0 <re_search_2>:
   120a0:	stp	x29, x30, [sp, #-112]!
   120a4:	cmp	w4, #0x0
   120a8:	mov	x29, sp
   120ac:	stp	x27, x28, [sp, #80]
   120b0:	ldr	w27, [sp, #112]
   120b4:	stp	x19, x20, [sp, #16]
   120b8:	sxtw	x19, w2
   120bc:	ccmp	w27, #0x0, #0x1, ge  // ge = tcont
   120c0:	ccmp	w19, #0x0, #0x1, ge  // ge = tcont
   120c4:	b.lt	12194 <re_search_2+0xf4>  // b.tstop
   120c8:	mov	w20, w4
   120cc:	adds	w28, w19, w4
   120d0:	b.vs	12194 <re_search_2+0xf4>
   120d4:	stp	x21, x22, [sp, #32]
   120d8:	mov	x22, x0
   120dc:	stp	x23, x24, [sp, #48]
   120e0:	mov	w23, w5
   120e4:	mov	w24, w6
   120e8:	stp	x25, x26, [sp, #64]
   120ec:	mov	x25, x7
   120f0:	cbz	w4, 121ac <re_search_2+0x10c>
   120f4:	str	x1, [sp, #104]
   120f8:	mov	x21, x3
   120fc:	mov	x26, #0x0                   	// #0
   12100:	cbnz	w19, 12154 <re_search_2+0xb4>
   12104:	mov	x6, x25
   12108:	mov	w5, w27
   1210c:	mov	w4, w24
   12110:	mov	w3, w23
   12114:	mov	w2, w28
   12118:	mov	x1, x21
   1211c:	mov	w7, #0x0                   	// #0
   12120:	mov	x0, x22
   12124:	bl	11218 <re_compile_fastmap+0xd0>
   12128:	mov	w19, w0
   1212c:	mov	x0, x26
   12130:	bl	0 <grub_free>
   12134:	mov	w0, w19
   12138:	ldp	x19, x20, [sp, #16]
   1213c:	ldp	x21, x22, [sp, #32]
   12140:	ldp	x23, x24, [sp, #48]
   12144:	ldp	x25, x26, [sp, #64]
   12148:	ldp	x27, x28, [sp, #80]
   1214c:	ldp	x29, x30, [sp], #112
   12150:	ret
   12154:	sxtw	x0, w28
   12158:	bl	0 <grub_malloc>
   1215c:	mov	x26, x0
   12160:	cbz	x0, 12188 <re_search_2+0xe8>
   12164:	ldr	x1, [sp, #104]
   12168:	mov	x2, x19
   1216c:	bl	0 <grub_memmove>
   12170:	mov	x1, x21
   12174:	add	x0, x26, x19
   12178:	sxtw	x2, w20
   1217c:	mov	x21, x26
   12180:	bl	0 <grub_memmove>
   12184:	b	12104 <re_search_2+0x64>
   12188:	ldp	x21, x22, [sp, #32]
   1218c:	ldp	x23, x24, [sp, #48]
   12190:	ldp	x25, x26, [sp, #64]
   12194:	mov	w19, #0xfffffffe            	// #-2
   12198:	mov	w0, w19
   1219c:	ldp	x19, x20, [sp, #16]
   121a0:	ldp	x27, x28, [sp, #80]
   121a4:	ldp	x29, x30, [sp], #112
   121a8:	ret
   121ac:	mov	x21, x1
   121b0:	mov	x26, #0x0                   	// #0
   121b4:	b	12104 <re_search_2+0x64>

00000000000121b8 <re_set_registers>:
   121b8:	cbz	w2, 121d8 <re_set_registers+0x20>
   121bc:	ldrb	w5, [x0, #56]
   121c0:	mov	w6, #0x1                   	// #1
   121c4:	bfi	w5, w6, #1, #2
   121c8:	strb	w5, [x0, #56]
   121cc:	str	w2, [x1]
   121d0:	stp	x3, x4, [x1, #8]
   121d4:	ret
   121d8:	ldrb	w2, [x0, #56]
   121dc:	and	w2, w2, #0xfffffff9
   121e0:	strb	w2, [x0, #56]
   121e4:	str	wzr, [x1]
   121e8:	stp	xzr, xzr, [x1, #8]
   121ec:	ret
