
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.ubsan_standalone-aarch64.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000045a8 <.init>:
    45a8:	stp	x29, x30, [sp, #-16]!
    45ac:	mov	x29, sp
    45b0:	bl	49a0 <__sancov_default_options@plt+0x20>
    45b4:	ldp	x29, x30, [sp], #16
    45b8:	ret

Disassembly of section .plt:

00000000000045c0 <_Unwind_Backtrace@plt-0x20>:
    45c0:	stp	x16, x30, [sp, #-16]!
    45c4:	adrp	x16, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    45c8:	ldr	x17, [x16, #4088]
    45cc:	add	x16, x16, #0xff8
    45d0:	br	x17
    45d4:	nop
    45d8:	nop
    45dc:	nop

00000000000045e0 <_Unwind_Backtrace@plt>:
    45e0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    45e4:	ldr	x17, [x16]
    45e8:	add	x16, x16, #0x0
    45ec:	br	x17

00000000000045f0 <__sanitizer_report_error_summary@plt>:
    45f0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    45f4:	ldr	x17, [x16, #8]
    45f8:	add	x16, x16, #0x8
    45fc:	br	x17

0000000000004600 <__sanitizer_on_print@plt>:
    4600:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4604:	ldr	x17, [x16, #16]
    4608:	add	x16, x16, #0x10
    460c:	br	x17

0000000000004610 <sched_getaffinity@plt>:
    4610:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4614:	ldr	x17, [x16, #24]
    4618:	add	x16, x16, #0x18
    461c:	br	x17

0000000000004620 <execv@plt>:
    4620:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4624:	ldr	x17, [x16, #32]
    4628:	add	x16, x16, #0x20
    462c:	br	x17

0000000000004630 <pipe@plt>:
    4630:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4634:	ldr	x17, [x16, #40]
    4638:	add	x16, x16, #0x28
    463c:	br	x17

0000000000004640 <__sanitizer_get_module_and_offset_for_pc@plt>:
    4640:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4644:	ldr	x17, [x16, #48]
    4648:	add	x16, x16, #0x30
    464c:	br	x17

0000000000004650 <dlvsym@plt>:
    4650:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4654:	ldr	x17, [x16, #56]
    4658:	add	x16, x16, #0x38
    465c:	br	x17

0000000000004660 <pthread_getattr_np@plt>:
    4660:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4664:	ldr	x17, [x16, #64]
    4668:	add	x16, x16, #0x40
    466c:	br	x17

0000000000004670 <__sanitizer_symbolize_demangle@plt>:
    4670:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4674:	ldr	x17, [x16, #72]
    4678:	add	x16, x16, #0x48
    467c:	br	x17

0000000000004680 <pthread_attr_init@plt>:
    4680:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4684:	ldr	x17, [x16, #80]
    4688:	add	x16, x16, #0x50
    468c:	br	x17

0000000000004690 <real_pthread_attr_getstack@plt>:
    4690:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4694:	ldr	x17, [x16, #88]
    4698:	add	x16, x16, #0x58
    469c:	br	x17

00000000000046a0 <sleep@plt>:
    46a0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46a4:	ldr	x17, [x16, #96]
    46a8:	add	x16, x16, #0x60
    46ac:	br	x17

00000000000046b0 <dlsym@plt>:
    46b0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46b4:	ldr	x17, [x16, #104]
    46b8:	add	x16, x16, #0x68
    46bc:	br	x17

00000000000046c0 <__sanitizer_symbolize_data@plt>:
    46c0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46c4:	ldr	x17, [x16, #112]
    46c8:	add	x16, x16, #0x70
    46cc:	br	x17

00000000000046d0 <isatty@plt>:
    46d0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46d4:	ldr	x17, [x16, #120]
    46d8:	add	x16, x16, #0x78
    46dc:	br	x17

00000000000046e0 <dlerror@plt>:
    46e0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46e4:	ldr	x17, [x16, #128]
    46e8:	add	x16, x16, #0x80
    46ec:	br	x17

00000000000046f0 <__cxa_finalize@plt>:
    46f0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    46f4:	ldr	x17, [x16, #136]
    46f8:	add	x16, x16, #0x88
    46fc:	br	x17

0000000000004700 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>:
    4700:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4704:	ldr	x17, [x16, #144]
    4708:	add	x16, x16, #0x90
    470c:	br	x17

0000000000004710 <getrusage@plt>:
    4710:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4714:	ldr	x17, [x16, #152]
    4718:	add	x16, x16, #0x98
    471c:	br	x17

0000000000004720 <pthread_attr_destroy@plt>:
    4720:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4724:	ldr	x17, [x16, #160]
    4728:	add	x16, x16, #0xa0
    472c:	br	x17

0000000000004730 <real_clock_gettime@plt>:
    4730:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4734:	ldr	x17, [x16, #168]
    4738:	add	x16, x16, #0xa8
    473c:	br	x17

0000000000004740 <__cxa_demangle@plt>:
    4740:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4744:	ldr	x17, [x16, #176]
    4748:	add	x16, x16, #0xb0
    474c:	br	x17

0000000000004750 <__sanitizer_symbolize_code@plt>:
    4750:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4754:	ldr	x17, [x16, #184]
    4758:	add	x16, x16, #0xb8
    475c:	br	x17

0000000000004760 <dl_iterate_phdr@plt>:
    4760:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4764:	ldr	x17, [x16, #192]
    4768:	add	x16, x16, #0xc0
    476c:	br	x17

0000000000004770 <__sanitizer_dump_coverage@plt>:
    4770:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4774:	ldr	x17, [x16, #200]
    4778:	add	x16, x16, #0xc8
    477c:	br	x17

0000000000004780 <clock_gettime@plt>:
    4780:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4784:	ldr	x17, [x16, #208]
    4788:	add	x16, x16, #0xd0
    478c:	br	x17

0000000000004790 <__sanitizer_symbolize_flush@plt>:
    4790:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4794:	ldr	x17, [x16, #216]
    4798:	add	x16, x16, #0xd8
    479c:	br	x17

00000000000047a0 <__ubsan_on_report@plt>:
    47a0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47a4:	ldr	x17, [x16, #224]
    47a8:	add	x16, x16, #0xe0
    47ac:	br	x17

00000000000047b0 <__dynamic_cast@plt>:
    47b0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47b4:	ldr	x17, [x16, #232]
    47b8:	add	x16, x16, #0xe8
    47bc:	br	x17

00000000000047c0 <__cxa_atexit@plt>:
    47c0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47c4:	ldr	x17, [x16, #240]
    47c8:	add	x16, x16, #0xf0
    47cc:	br	x17

00000000000047d0 <snprintf@plt>:
    47d0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47d4:	ldr	x17, [x16, #248]
    47d8:	add	x16, x16, #0xf8
    47dc:	br	x17

00000000000047e0 <pthread_attr_getstack@plt>:
    47e0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47e4:	ldr	x17, [x16, #256]
    47e8:	add	x16, x16, #0x100
    47ec:	br	x17

00000000000047f0 <pthread_attr_setstacksize@plt>:
    47f0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    47f4:	ldr	x17, [x16, #264]
    47f8:	add	x16, x16, #0x108
    47fc:	br	x17

0000000000004800 <_Unwind_GetIP@plt>:
    4800:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4804:	ldr	x17, [x16, #272]
    4808:	add	x16, x16, #0x110
    480c:	br	x17

0000000000004810 <madvise@plt>:
    4810:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4814:	ldr	x17, [x16, #280]
    4818:	add	x16, x16, #0x118
    481c:	br	x17

0000000000004820 <usleep@plt>:
    4820:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4824:	ldr	x17, [x16, #288]
    4828:	add	x16, x16, #0x120
    482c:	br	x17

0000000000004830 <__sched_cpucount@plt>:
    4830:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4834:	ldr	x17, [x16, #296]
    4838:	add	x16, x16, #0x128
    483c:	br	x17

0000000000004840 <__errno_location@plt>:
    4840:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4844:	ldr	x17, [x16, #304]
    4848:	add	x16, x16, #0x130
    484c:	br	x17

0000000000004850 <sched_yield@plt>:
    4850:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4854:	ldr	x17, [x16, #312]
    4858:	add	x16, x16, #0x138
    485c:	br	x17

0000000000004860 <syslog@plt>:
    4860:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4864:	ldr	x17, [x16, #320]
    4868:	add	x16, x16, #0x140
    486c:	br	x17

0000000000004870 <sigaction@plt>:
    4870:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4874:	ldr	x17, [x16, #328]
    4878:	add	x16, x16, #0x148
    487c:	br	x17

0000000000004880 <__extenddftf2@plt>:
    4880:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4884:	ldr	x17, [x16, #336]
    4888:	add	x16, x16, #0x150
    488c:	br	x17

0000000000004890 <__ubsan_handle_cfi_bad_type@plt>:
    4890:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4894:	ldr	x17, [x16, #344]
    4898:	add	x16, x16, #0x158
    489c:	br	x17

00000000000048a0 <setrlimit@plt>:
    48a0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48a4:	ldr	x17, [x16, #352]
    48a8:	add	x16, x16, #0x160
    48ac:	br	x17

00000000000048b0 <getauxval@plt>:
    48b0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48b4:	ldr	x17, [x16, #360]
    48b8:	add	x16, x16, #0x168
    48bc:	br	x17

00000000000048c0 <abort@plt>:
    48c0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48c4:	ldr	x17, [x16, #368]
    48c8:	add	x16, x16, #0x170
    48cc:	br	x17

00000000000048d0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>:
    48d0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48d4:	ldr	x17, [x16, #376]
    48d8:	add	x16, x16, #0x178
    48dc:	br	x17

00000000000048e0 <sysconf@plt>:
    48e0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48e4:	ldr	x17, [x16, #384]
    48e8:	add	x16, x16, #0x180
    48ec:	br	x17

00000000000048f0 <__extendsftf2@plt>:
    48f0:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    48f4:	ldr	x17, [x16, #392]
    48f8:	add	x16, x16, #0x188
    48fc:	br	x17

0000000000004900 <pthread_self@plt>:
    4900:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4904:	ldr	x17, [x16, #400]
    4908:	add	x16, x16, #0x190
    490c:	br	x17

0000000000004910 <getuid@plt>:
    4910:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4914:	ldr	x17, [x16, #408]
    4918:	add	x16, x16, #0x198
    491c:	br	x17

0000000000004920 <__ubsan_default_options@plt>:
    4920:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4924:	ldr	x17, [x16, #416]
    4928:	add	x16, x16, #0x1a0
    492c:	br	x17

0000000000004930 <getrlimit@plt>:
    4930:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4934:	ldr	x17, [x16, #424]
    4938:	add	x16, x16, #0x1a8
    493c:	br	x17

0000000000004940 <sigaltstack@plt>:
    4940:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4944:	ldr	x17, [x16, #432]
    4948:	add	x16, x16, #0x1b0
    494c:	br	x17

0000000000004950 <__gmon_start__@plt>:
    4950:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4954:	ldr	x17, [x16, #440]
    4958:	add	x16, x16, #0x1b8
    495c:	br	x17

0000000000004960 <__sanitizer_set_report_path@plt>:
    4960:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4964:	ldr	x17, [x16, #448]
    4968:	add	x16, x16, #0x1c0
    496c:	br	x17

0000000000004970 <__sanitizer_print_memory_profile@plt>:
    4970:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4974:	ldr	x17, [x16, #456]
    4978:	add	x16, x16, #0x1c8
    497c:	br	x17

0000000000004980 <__sancov_default_options@plt>:
    4980:	adrp	x16, 42000 <_Unwind_Backtrace@GCC_3.3>
    4984:	ldr	x17, [x16, #464]
    4988:	add	x16, x16, #0x1d0
    498c:	br	x17

Disassembly of section .text:

0000000000004990 <__sanitizer_report_error_summary@@Base-0x2058>:
    4990:	str	x30, [sp, #-16]!
    4994:	bl	1da5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5924>
    4998:	ldr	x30, [sp], #16
    499c:	b	22618 <__interceptor_sigaction@@Base+0x5c>
    49a0:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    49a4:	ldr	x0, [x0, #4032]
    49a8:	cbz	x0, 49b0 <__sancov_default_options@plt+0x30>
    49ac:	b	4950 <__gmon_start__@plt>
    49b0:	ret
    49b4:	nop
    49b8:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    49bc:	add	x0, x0, #0xc08
    49c0:	adrp	x1, 44000 <__interceptor_sigaction@@Base+0x21a44>
    49c4:	add	x1, x1, #0xc08
    49c8:	cmp	x1, x0
    49cc:	b.eq	49e4 <__sancov_default_options@plt+0x64>  // b.none
    49d0:	adrp	x1, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    49d4:	ldr	x1, [x1, #3984]
    49d8:	cbz	x1, 49e4 <__sancov_default_options@plt+0x64>
    49dc:	mov	x16, x1
    49e0:	br	x16
    49e4:	ret
    49e8:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    49ec:	add	x0, x0, #0xc08
    49f0:	adrp	x1, 44000 <__interceptor_sigaction@@Base+0x21a44>
    49f4:	add	x1, x1, #0xc08
    49f8:	sub	x1, x1, x0
    49fc:	lsr	x2, x1, #63
    4a00:	add	x1, x2, x1, asr #3
    4a04:	cmp	xzr, x1, asr #1
    4a08:	asr	x1, x1, #1
    4a0c:	b.eq	4a24 <__sancov_default_options@plt+0xa4>  // b.none
    4a10:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4a14:	ldr	x2, [x2, #4040]
    4a18:	cbz	x2, 4a24 <__sancov_default_options@plt+0xa4>
    4a1c:	mov	x16, x2
    4a20:	br	x16
    4a24:	ret
    4a28:	stp	x29, x30, [sp, #-32]!
    4a2c:	mov	x29, sp
    4a30:	str	x19, [sp, #16]
    4a34:	adrp	x19, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4a38:	ldrb	w0, [x19, #3136]
    4a3c:	cbnz	w0, 4a64 <__sancov_default_options@plt+0xe4>
    4a40:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4a44:	ldr	x0, [x0, #3840]
    4a48:	cbz	x0, 4a58 <__sancov_default_options@plt+0xd8>
    4a4c:	adrp	x0, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    4a50:	ldr	x0, [x0, #472]
    4a54:	bl	46f0 <__cxa_finalize@plt>
    4a58:	bl	49b8 <__sancov_default_options@plt+0x38>
    4a5c:	mov	w0, #0x1                   	// #1
    4a60:	strb	w0, [x19, #3136]
    4a64:	ldr	x19, [sp, #16]
    4a68:	ldp	x29, x30, [sp], #32
    4a6c:	ret
    4a70:	b	49e8 <__sancov_default_options@plt+0x68>
    4a74:	stp	x30, x21, [sp, #-32]!
    4a78:	stp	x20, x19, [sp, #16]
    4a7c:	adrp	x21, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    4a80:	ldrb	w8, [x21, #1272]
    4a84:	dmb	ish
    4a88:	cbnz	w8, 4b7c <__sancov_default_options@plt+0x1fc>
    4a8c:	adrp	x19, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4a90:	adrp	x8, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    4a94:	add	x19, x19, #0xc80
    4a98:	add	x8, x8, #0x4fc
    4a9c:	mov	w9, #0x1                   	// #1
    4aa0:	ldaxrb	w10, [x8]
    4aa4:	stlxrb	w11, w9, [x8]
    4aa8:	cbnz	w11, 4aa0 <__sancov_default_options@plt+0x120>
    4aac:	cbz	w10, 4abc <__sancov_default_options@plt+0x13c>
    4ab0:	adrp	x0, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    4ab4:	add	x0, x0, #0x4fc
    4ab8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    4abc:	ldrb	w8, [x21, #1272]
    4ac0:	cbnz	w8, 4b70 <__sancov_default_options@plt+0x1f0>
    4ac4:	mov	w8, #0x1008                	// #4104
    4ac8:	movk	w8, #0xc, lsl #16
    4acc:	add	x20, x19, x8
    4ad0:	mov	w2, #0x28                  	// #40
    4ad4:	mov	x0, x20
    4ad8:	mov	w1, wzr
    4adc:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    4ae0:	mov	w8, #0x1010                	// #4112
    4ae4:	movk	w8, #0xc, lsl #16
    4ae8:	mov	w2, #0x80000               	// #524288
    4aec:	mov	x0, x19
    4af0:	mov	w1, wzr
    4af4:	str	x20, [x20]
    4af8:	str	x20, [x19, x8]
    4afc:	mov	w20, #0x80000               	// #524288
    4b00:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    4b04:	mov	w8, #0x40                  	// #64
    4b08:	movk	w8, #0x8, lsl #16
    4b0c:	add	x0, x19, x8
    4b10:	mov	w2, #0xd80                 	// #3456
    4b14:	mov	w1, wzr
    4b18:	strb	wzr, [x19, x20]
    4b1c:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    4b20:	mov	w8, #0xdc0                 	// #3520
    4b24:	movk	w8, #0x8, lsl #16
    4b28:	mov	w2, #0x248                 	// #584
    4b2c:	add	x0, x19, x8
    4b30:	movk	w2, #0x4, lsl #16
    4b34:	mov	w1, wzr
    4b38:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    4b3c:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4b40:	ldr	x19, [x19, #4016]
    4b44:	ldr	x0, [x19]
    4b48:	cbnz	x0, 4b54 <__sancov_default_options@plt+0x1d4>
    4b4c:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    4b50:	str	x0, [x19]
    4b54:	adrp	x8, c5000 <__interceptor_sigaction@@Base+0xa2a44>
    4b58:	add	x8, x8, #0xa40
    4b5c:	add	x10, x8, #0x10
    4b60:	mov	w9, #0x1                   	// #1
    4b64:	stp	x0, x10, [x8]
    4b68:	dmb	ish
    4b6c:	strb	w9, [x21, #1272]
    4b70:	adrp	x8, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    4b74:	dmb	ish
    4b78:	strb	wzr, [x8, #1276]
    4b7c:	ldp	x20, x19, [sp, #16]
    4b80:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4b84:	add	x0, x0, #0xc80
    4b88:	ldp	x30, x21, [sp], #32
    4b8c:	ret
    4b90:	stp	x30, x21, [sp, #-32]!
    4b94:	stp	x20, x19, [sp, #16]
    4b98:	cmn	x0, #0x9
    4b9c:	b.ls	4bb0 <__sancov_default_options@plt+0x230>  // b.plast
    4ba0:	mov	x0, xzr
    4ba4:	ldp	x20, x19, [sp, #16]
    4ba8:	ldp	x30, x21, [sp], #32
    4bac:	ret
    4bb0:	cmp	x2, #0x0
    4bb4:	mov	w8, #0x8                   	// #8
    4bb8:	mov	x21, x1
    4bbc:	add	x19, x0, #0x8
    4bc0:	csel	x20, x8, x2, eq  // eq = none
    4bc4:	cbz	x1, 4c08 <__sancov_default_options@plt+0x288>
    4bc8:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4bcc:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4bd0:	add	x0, x0, #0xc80
    4bd4:	mov	x1, x21
    4bd8:	mov	x2, x19
    4bdc:	mov	x3, x20
    4be0:	bl	51c0 <__sancov_default_options@plt+0x840>
    4be4:	cbz	x0, 4c60 <__sancov_default_options@plt+0x2e0>
    4be8:	mov	x8, #0xc041                	// #49217
    4bec:	movk	x8, #0xbceb, lsl #16
    4bf0:	movk	x8, #0xb03a, lsl #32
    4bf4:	movk	x8, #0x6a6c, lsl #48
    4bf8:	str	x8, [x0], #8
    4bfc:	ldp	x20, x19, [sp, #16]
    4c00:	ldp	x30, x21, [sp], #32
    4c04:	ret
    4c08:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4c0c:	add	x8, x8, #0xcd0
    4c10:	mov	w9, #0x1                   	// #1
    4c14:	ldaxrb	w10, [x8]
    4c18:	stlxrb	w11, w9, [x8]
    4c1c:	cbnz	w11, 4c14 <__sancov_default_options@plt+0x294>
    4c20:	cbz	w10, 4c30 <__sancov_default_options@plt+0x2b0>
    4c24:	adrp	x0, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4c28:	add	x0, x0, #0xcd0
    4c2c:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    4c30:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4c34:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4c38:	adrp	x1, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4c3c:	add	x0, x0, #0xc80
    4c40:	add	x1, x1, #0xcd8
    4c44:	mov	x2, x19
    4c48:	mov	x3, x20
    4c4c:	bl	51c0 <__sancov_default_options@plt+0x840>
    4c50:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4c54:	dmb	ish
    4c58:	strb	wzr, [x8, #3280]
    4c5c:	cbnz	x0, 4be8 <__sancov_default_options@plt+0x268>
    4c60:	mov	x0, x19
    4c64:	bl	4c68 <__sancov_default_options@plt+0x2e8>
    4c68:	str	x30, [sp, #-16]!
    4c6c:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4c70:	mov	w9, #0x1                   	// #1
    4c74:	strb	w9, [x8, #3272]
    4c78:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4c7c:	ldr	x8, [x8, #4024]
    4c80:	mov	x2, x0
    4c84:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    4c88:	add	x0, x0, #0xfea
    4c8c:	ldr	x1, [x8]
    4c90:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    4c94:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    4c98:	stp	x30, x21, [sp, #-32]!
    4c9c:	stp	x20, x19, [sp, #16]
    4ca0:	mov	x21, x2
    4ca4:	cbz	x0, 4cc0 <__sancov_default_options@plt+0x340>
    4ca8:	cmn	x1, #0x9
    4cac:	b.ls	4cd8 <__sancov_default_options@plt+0x358>  // b.plast
    4cb0:	mov	x0, xzr
    4cb4:	ldp	x20, x19, [sp, #16]
    4cb8:	ldp	x30, x21, [sp], #32
    4cbc:	ret
    4cc0:	ldp	x20, x19, [sp, #16]
    4cc4:	mov	x0, x1
    4cc8:	mov	x1, x21
    4ccc:	mov	x2, xzr
    4cd0:	ldp	x30, x21, [sp], #32
    4cd4:	b	4b90 <__sancov_default_options@plt+0x210>
    4cd8:	mov	x20, x0
    4cdc:	ldr	x4, [x20, #-8]!
    4ce0:	mov	x8, #0xc041                	// #49217
    4ce4:	movk	x8, #0xbceb, lsl #16
    4ce8:	movk	x8, #0xb03a, lsl #32
    4cec:	movk	x8, #0x6a6c, lsl #48
    4cf0:	cmp	x4, x8
    4cf4:	b.ne	4d98 <__sancov_default_options@plt+0x418>  // b.any
    4cf8:	add	x19, x1, #0x8
    4cfc:	cbz	x21, 4d34 <__sancov_default_options@plt+0x3b4>
    4d00:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4d04:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4d08:	add	x0, x0, #0xc80
    4d0c:	mov	w4, #0x8                   	// #8
    4d10:	mov	x1, x21
    4d14:	mov	x2, x20
    4d18:	mov	x3, x19
    4d1c:	bl	6224 <__sancov_default_options@plt+0x18a4>
    4d20:	cbz	x0, 4d90 <__sancov_default_options@plt+0x410>
    4d24:	add	x0, x0, #0x8
    4d28:	ldp	x20, x19, [sp, #16]
    4d2c:	ldp	x30, x21, [sp], #32
    4d30:	ret
    4d34:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4d38:	add	x8, x8, #0xcd0
    4d3c:	mov	w9, #0x1                   	// #1
    4d40:	ldaxrb	w10, [x8]
    4d44:	stlxrb	w11, w9, [x8]
    4d48:	cbnz	w11, 4d40 <__sancov_default_options@plt+0x3c0>
    4d4c:	cbz	w10, 4d5c <__sancov_default_options@plt+0x3dc>
    4d50:	adrp	x0, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4d54:	add	x0, x0, #0xcd0
    4d58:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    4d5c:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4d60:	adrp	x0, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4d64:	adrp	x1, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4d68:	add	x0, x0, #0xc80
    4d6c:	add	x1, x1, #0xcd8
    4d70:	mov	w4, #0x8                   	// #8
    4d74:	mov	x2, x20
    4d78:	mov	x3, x19
    4d7c:	bl	6224 <__sancov_default_options@plt+0x18a4>
    4d80:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4d84:	dmb	ish
    4d88:	strb	wzr, [x8, #3280]
    4d8c:	cbnz	x0, 4d24 <__sancov_default_options@plt+0x3a4>
    4d90:	mov	x0, x19
    4d94:	bl	4c68 <__sancov_default_options@plt+0x2e8>
    4d98:	mov	x3, #0xc041                	// #49217
    4d9c:	movk	x3, #0xbceb, lsl #16
    4da0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    4da4:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    4da8:	movk	x3, #0xb03a, lsl #32
    4dac:	add	x0, x0, #0x846
    4db0:	add	x2, x2, #0x89c
    4db4:	mov	w1, #0xa6                  	// #166
    4db8:	movk	x3, #0x6a6c, lsl #48
    4dbc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    4dc0:	mov	x8, x3
    4dc4:	mov	x3, x2
    4dc8:	mov	x2, x1
    4dcc:	umulh	x9, x1, x3
    4dd0:	cbnz	x9, 4de0 <__sancov_default_options@plt+0x460>
    4dd4:	mul	x1, x3, x2
    4dd8:	mov	x2, x8
    4ddc:	b	4c98 <__sancov_default_options@plt+0x318>
    4de0:	str	x30, [sp, #-16]!
    4de4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4de8:	ldr	x8, [x8, #4024]
    4dec:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    4df0:	add	x0, x0, #0x8c3
    4df4:	ldr	x1, [x8]
    4df8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    4dfc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    4e00:	str	x30, [sp, #-32]!
    4e04:	stp	x20, x19, [sp, #16]
    4e08:	mov	x3, x1
    4e0c:	mov	x8, x0
    4e10:	umulh	x9, x0, x1
    4e14:	cbnz	x9, 4e54 <__sancov_default_options@plt+0x4d4>
    4e18:	mul	x19, x3, x8
    4e1c:	mov	x1, x2
    4e20:	mov	x0, x19
    4e24:	mov	x2, xzr
    4e28:	bl	4b90 <__sancov_default_options@plt+0x210>
    4e2c:	mov	x20, x0
    4e30:	cbz	x0, 4e44 <__sancov_default_options@plt+0x4c4>
    4e34:	mov	x0, x20
    4e38:	mov	w1, wzr
    4e3c:	mov	x2, x19
    4e40:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    4e44:	mov	x0, x20
    4e48:	ldp	x20, x19, [sp, #16]
    4e4c:	ldr	x30, [sp], #32
    4e50:	ret
    4e54:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    4e58:	ldr	x9, [x9, #4024]
    4e5c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    4e60:	add	x0, x0, #0x92f
    4e64:	mov	x2, x8
    4e68:	ldr	x1, [x9]
    4e6c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    4e70:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    4e74:	str	x30, [sp, #-32]!
    4e78:	stp	x20, x19, [sp, #16]
    4e7c:	cbz	x0, 4fa8 <__sancov_default_options@plt+0x628>
    4e80:	mov	x19, x0
    4e84:	ldr	x4, [x19, #-8]!
    4e88:	mov	x8, #0xc041                	// #49217
    4e8c:	movk	x8, #0xbceb, lsl #16
    4e90:	movk	x8, #0xb03a, lsl #32
    4e94:	movk	x8, #0x6a6c, lsl #48
    4e98:	cmp	x4, x8
    4e9c:	b.ne	4ff4 <__sancov_default_options@plt+0x674>  // b.any
    4ea0:	mov	x20, x1
    4ea4:	str	xzr, [x19]
    4ea8:	cbz	x1, 4f14 <__sancov_default_options@plt+0x594>
    4eac:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4eb0:	lsr	x8, x19, #48
    4eb4:	cbnz	x8, 4ef0 <__sancov_default_options@plt+0x570>
    4eb8:	adrp	x9, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4ebc:	lsr	x8, x19, #32
    4ec0:	add	x9, x9, #0xc80
    4ec4:	ldr	x11, [x9, x8, lsl #3]
    4ec8:	dmb	ish
    4ecc:	cbz	x11, 4ef0 <__sancov_default_options@plt+0x570>
    4ed0:	ubfx	x10, x19, #20, #12
    4ed4:	ldrb	w11, [x11, x10]
    4ed8:	cbz	w11, 4ef0 <__sancov_default_options@plt+0x570>
    4edc:	ldr	x8, [x9, x8, lsl #3]
    4ee0:	dmb	ish
    4ee4:	cbz	x8, 4fb4 <__sancov_default_options@plt+0x634>
    4ee8:	ldrb	w2, [x8, x10]
    4eec:	b	4fb8 <__sancov_default_options@plt+0x638>
    4ef0:	mov	x2, x19
    4ef4:	ldp	x20, x19, [sp, #16]
    4ef8:	adrp	x0, c5000 <__interceptor_sigaction@@Base+0xa2a44>
    4efc:	mov	w8, #0x248                 	// #584
    4f00:	add	x0, x0, #0xa40
    4f04:	movk	w8, #0x4, lsl #16
    4f08:	add	x1, x0, x8
    4f0c:	ldr	x30, [sp], #32
    4f10:	b	652c <__sancov_default_options@plt+0x1bac>
    4f14:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4f18:	add	x8, x8, #0xcd0
    4f1c:	mov	w9, #0x1                   	// #1
    4f20:	ldaxrb	w10, [x8]
    4f24:	stlxrb	w11, w9, [x8]
    4f28:	cbnz	w11, 4f20 <__sancov_default_options@plt+0x5a0>
    4f2c:	cbz	w10, 4f3c <__sancov_default_options@plt+0x5bc>
    4f30:	adrp	x0, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4f34:	add	x0, x0, #0xcd0
    4f38:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    4f3c:	bl	4a74 <__sancov_default_options@plt+0xf4>
    4f40:	lsr	x8, x19, #48
    4f44:	cbnz	x8, 4f80 <__sancov_default_options@plt+0x600>
    4f48:	adrp	x9, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4f4c:	lsr	x8, x19, #32
    4f50:	add	x9, x9, #0xc80
    4f54:	ldr	x11, [x9, x8, lsl #3]
    4f58:	dmb	ish
    4f5c:	cbz	x11, 4f80 <__sancov_default_options@plt+0x600>
    4f60:	ubfx	x10, x19, #20, #12
    4f64:	ldrb	w11, [x11, x10]
    4f68:	cbz	w11, 4f80 <__sancov_default_options@plt+0x600>
    4f6c:	ldr	x8, [x9, x8, lsl #3]
    4f70:	dmb	ish
    4f74:	cbz	x8, 4fd4 <__sancov_default_options@plt+0x654>
    4f78:	ldrb	w2, [x8, x10]
    4f7c:	b	4fd8 <__sancov_default_options@plt+0x658>
    4f80:	adrp	x0, c5000 <__interceptor_sigaction@@Base+0xa2a44>
    4f84:	mov	w8, #0x248                 	// #584
    4f88:	add	x0, x0, #0xa40
    4f8c:	movk	w8, #0x4, lsl #16
    4f90:	add	x1, x0, x8
    4f94:	mov	x2, x19
    4f98:	bl	652c <__sancov_default_options@plt+0x1bac>
    4f9c:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4fa0:	dmb	ish
    4fa4:	strb	wzr, [x8, #3280]
    4fa8:	ldp	x20, x19, [sp, #16]
    4fac:	ldr	x30, [sp], #32
    4fb0:	ret
    4fb4:	mov	x2, xzr
    4fb8:	mov	x0, x20
    4fbc:	mov	x3, x19
    4fc0:	ldp	x20, x19, [sp, #16]
    4fc4:	adrp	x1, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4fc8:	add	x1, x1, #0xc80
    4fcc:	ldr	x30, [sp], #32
    4fd0:	b	5dfc <__sancov_default_options@plt+0x147c>
    4fd4:	mov	x2, xzr
    4fd8:	adrp	x0, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    4fdc:	adrp	x1, 44000 <__interceptor_sigaction@@Base+0x21a44>
    4fe0:	add	x0, x0, #0xcd8
    4fe4:	add	x1, x1, #0xc80
    4fe8:	mov	x3, x19
    4fec:	bl	5dfc <__sancov_default_options@plt+0x147c>
    4ff0:	b	4f9c <__sancov_default_options@plt+0x61c>
    4ff4:	mov	x3, #0xc041                	// #49217
    4ff8:	movk	x3, #0xbceb, lsl #16
    4ffc:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5000:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5004:	movk	x3, #0xb03a, lsl #32
    5008:	add	x0, x0, #0x846
    500c:	add	x2, x2, #0x89c
    5010:	mov	w1, #0xca                  	// #202
    5014:	movk	x3, #0x6a6c, lsl #48
    5018:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    501c:	stp	x30, x21, [sp, #-32]!
    5020:	stp	x20, x19, [sp, #16]
    5024:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    5028:	ldr	x9, [x8, #496]
    502c:	sub	x8, x9, #0x1
    5030:	tst	x9, x8
    5034:	b.ne	50e4 <__sancov_default_options@plt+0x764>  // b.any
    5038:	mov	x19, x0
    503c:	ldp	x8, x0, [x0]
    5040:	add	x10, x1, x9
    5044:	sub	x10, x10, #0x1
    5048:	neg	x9, x9
    504c:	and	x21, x10, x9
    5050:	sub	x9, x8, x0
    5054:	cmp	x9, x21
    5058:	b.ge	50c4 <__sancov_default_options@plt+0x744>  // b.tcont
    505c:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    5060:	ldr	x20, [x20, #4016]
    5064:	ldr	x0, [x20]
    5068:	cbnz	x0, 5074 <__sancov_default_options@plt+0x6f4>
    506c:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    5070:	str	x0, [x20]
    5074:	sub	x8, x0, #0x1
    5078:	tst	x0, x8
    507c:	b.ne	50e4 <__sancov_default_options@plt+0x764>  // b.any
    5080:	add	x8, x21, x0
    5084:	sub	x8, x8, #0x1
    5088:	neg	x9, x0
    508c:	and	x20, x8, x9
    5090:	adrp	x1, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5094:	add	x1, x1, #0x995
    5098:	mov	x0, x20
    509c:	mov	w2, wzr
    50a0:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    50a4:	add	x8, x0, x20
    50a8:	stp	x8, x0, [x19]
    50ac:	adrp	x9, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    50b0:	ldr	x9, [x9, #3264]
    50b4:	cbz	x9, 50c4 <__sancov_default_options@plt+0x744>
    50b8:	mov	x1, x20
    50bc:	blr	x9
    50c0:	ldp	x8, x0, [x19]
    50c4:	sub	x8, x8, x0
    50c8:	cmp	x8, x21
    50cc:	b.lt	50f4 <__sancov_default_options@plt+0x774>  // b.tstop
    50d0:	add	x8, x0, x21
    50d4:	str	x8, [x19, #8]
    50d8:	ldp	x20, x19, [sp, #16]
    50dc:	ldp	x30, x21, [sp], #32
    50e0:	ret
    50e4:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    50e8:	add	x0, x0, #0x121
    50ec:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    50f0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    50f4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    50f8:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    50fc:	add	x0, x0, #0x846
    5100:	add	x2, x2, #0x99e
    5104:	mov	w1, #0xe1                  	// #225
    5108:	mov	x3, xzr
    510c:	mov	x4, xzr
    5110:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5114:	str	x30, [sp, #-16]!
    5118:	sub	x8, x0, #0x1
    511c:	tst	x0, x8
    5120:	b.ne	5140 <__sancov_default_options@plt+0x7c0>  // b.any
    5124:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    5128:	ldr	x9, [x8, #496]
    512c:	cmp	x9, x0
    5130:	csel	x9, x0, x9, cc  // cc = lo, ul, last
    5134:	str	x9, [x8, #496]
    5138:	ldr	x30, [sp], #16
    513c:	ret
    5140:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5144:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5148:	add	x0, x0, #0x846
    514c:	add	x2, x2, #0x9db
    5150:	mov	w1, #0xe8                  	// #232
    5154:	mov	x3, xzr
    5158:	mov	x4, xzr
    515c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5160:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    5164:	str	x0, [x8, #3264]
    5168:	ret
    516c:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    5170:	ldrb	w8, [x8, #3272]
    5174:	cmp	w8, #0x0
    5178:	cset	w0, ne  // ne = any
    517c:	ret
    5180:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    5184:	mov	w9, #0x1                   	// #1
    5188:	strb	w9, [x8, #3272]
    518c:	ret
    5190:	adrp	x8, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    5194:	ldrb	w8, [x8, #3276]
    5198:	cmp	w8, #0x0
    519c:	cset	w0, ne  // ne = any
    51a0:	ret
    51a4:	and	w8, w0, #0x1
    51a8:	adrp	x9, 105000 <__interceptor_sigaction@@Base+0xe2a44>
    51ac:	strb	w8, [x9, #3276]
    51b0:	ret
    51b4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    51b8:	add	x0, x0, #0x9fe
    51bc:	b	ffac <__sanitizer_on_print@@Base+0xac>
    51c0:	sub	sp, sp, #0x20
    51c4:	stp	x30, x19, [sp, #16]
    51c8:	cmp	x2, #0x0
    51cc:	csinc	x2, x2, xzr, ne  // ne = any
    51d0:	mvn	x8, x2
    51d4:	mov	x19, x3
    51d8:	cmp	x8, x3
    51dc:	b.cs	5204 <__sancov_default_options@plt+0x884>  // b.hs, b.nlast
    51e0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    51e4:	ldr	x8, [x8, #4024]
    51e8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    51ec:	add	x0, x0, #0xa52
    51f0:	mov	x3, x19
    51f4:	ldr	x1, [x8]
    51f8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    51fc:	mov	x0, xzr
    5200:	b	5314 <__sancov_default_options@plt+0x994>
    5204:	mov	x8, x0
    5208:	cmp	x19, #0x9
    520c:	mov	x9, x2
    5210:	b.cc	5230 <__sancov_default_options@plt+0x8b0>  // b.lo, b.ul, b.last
    5214:	sub	x9, x19, #0x1
    5218:	tst	x19, x9
    521c:	b.ne	5354 <__sancov_default_options@plt+0x9d4>  // b.any
    5220:	add	x9, x19, x2
    5224:	sub	x9, x9, #0x1
    5228:	neg	x10, x19
    522c:	and	x9, x9, x10
    5230:	cmp	x19, #0x20, lsl #12
    5234:	b.hi	525c <__sancov_default_options@plt+0x8dc>  // b.pmore
    5238:	mov	w10, #0x1                   	// #1
    523c:	movk	w10, #0x2, lsl #16
    5240:	cmp	x9, x10
    5244:	b.cs	525c <__sancov_default_options@plt+0x8dc>  // b.hs, b.nlast
    5248:	cmp	x9, #0x100
    524c:	b.hi	5288 <__sancov_default_options@plt+0x908>  // b.pmore
    5250:	add	x9, x9, #0xf
    5254:	lsr	x3, x9, #4
    5258:	b	52b8 <__sancov_default_options@plt+0x938>
    525c:	mov	w9, #0xdc0                 	// #3520
    5260:	mov	w10, #0x1008                	// #4104
    5264:	movk	w9, #0x8, lsl #16
    5268:	movk	w10, #0xc, lsl #16
    526c:	add	x0, x8, x9
    5270:	add	x1, x8, x10
    5274:	mov	x3, x19
    5278:	bl	53b8 <__sancov_default_options@plt+0xa38>
    527c:	cmp	x19, #0x9
    5280:	b.cs	5308 <__sancov_default_options@plt+0x988>  // b.hs, b.nlast
    5284:	b	5314 <__sancov_default_options@plt+0x994>
    5288:	clz	x10, x9
    528c:	eor	x10, x10, #0x3f
    5290:	mov	w11, #0xffffffff            	// #-1
    5294:	sub	x12, x10, #0x2
    5298:	lsr	x13, x9, x12
    529c:	lsl	w11, w11, w12
    52a0:	and	x12, x13, #0x3
    52a4:	mvn	w11, w11
    52a8:	bfi	x12, x10, #2, #7
    52ac:	tst	x9, x11
    52b0:	cinc	x9, x12, ne  // ne = any
    52b4:	sub	x3, x9, #0x10
    52b8:	cbz	x3, 5364 <__sancov_default_options@plt+0x9e4>
    52bc:	cmp	x3, #0x36
    52c0:	b.cs	5380 <__sancov_default_options@plt+0xa00>  // b.hs, b.nlast
    52c4:	add	x9, x1, x3, lsl #10
    52c8:	ldr	x10, [x9]
    52cc:	cbz	x10, 5320 <__sancov_default_options@plt+0x9a0>
    52d0:	sub	x8, x10, #0x1
    52d4:	add	x11, x9, #0x20
    52d8:	str	x8, [x9]
    52dc:	add	x10, x11, x10, lsl #3
    52e0:	ldur	x10, [x10, #-16]
    52e4:	mov	w12, #0xd810                	// #55312
    52e8:	ldr	x0, [x11, x8, lsl #3]
    52ec:	prfm	pldl1keep, [x10]
    52f0:	ldr	x8, [x9, #16]
    52f4:	ldr	x9, [x1, x12]
    52f8:	add	x8, x9, x8
    52fc:	str	x8, [x1, x12]
    5300:	cmp	x19, #0x9
    5304:	b.cc	5314 <__sancov_default_options@plt+0x994>  // b.lo, b.ul, b.last
    5308:	sub	x8, x19, #0x1
    530c:	ands	x3, x8, x0
    5310:	b.ne	539c <__sancov_default_options@plt+0xa1c>  // b.any
    5314:	ldp	x30, x19, [sp, #16]
    5318:	add	sp, sp, #0x20
    531c:	ret
    5320:	stp	x9, x1, [sp]
    5324:	mov	x0, x1
    5328:	mov	x1, x9
    532c:	mov	x2, x8
    5330:	bl	5664 <__sancov_default_options@plt+0xce4>
    5334:	tbz	w0, #0, 5344 <__sancov_default_options@plt+0x9c4>
    5338:	ldp	x9, x1, [sp]
    533c:	ldr	x10, [x9]
    5340:	b	52d0 <__sancov_default_options@plt+0x950>
    5344:	mov	x0, xzr
    5348:	cmp	x19, #0x9
    534c:	b.cs	5308 <__sancov_default_options@plt+0x988>  // b.hs, b.nlast
    5350:	b	5314 <__sancov_default_options@plt+0x994>
    5354:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    5358:	add	x0, x0, #0x121
    535c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    5360:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    5364:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5368:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    536c:	add	x0, x0, #0xb4a
    5370:	add	x2, x2, #0xbaa
    5374:	mov	w1, #0x99                  	// #153
    5378:	mov	x4, xzr
    537c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5380:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5384:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5388:	add	x0, x0, #0xb4a
    538c:	add	x2, x2, #0xbc2
    5390:	mov	w1, #0x9a                  	// #154
    5394:	mov	w4, #0x36                  	// #54
    5398:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    539c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    53a0:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    53a4:	add	x0, x0, #0xab2
    53a8:	add	x2, x2, #0xb0f
    53ac:	mov	w1, #0x49                  	// #73
    53b0:	mov	x4, xzr
    53b4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    53b8:	stp	x30, x25, [sp, #-64]!
    53bc:	stp	x24, x23, [sp, #16]
    53c0:	stp	x22, x21, [sp, #32]
    53c4:	stp	x20, x19, [sp, #48]
    53c8:	sub	x24, x3, #0x1
    53cc:	tst	x3, x24
    53d0:	b.ne	5584 <__sancov_default_options@plt+0xc04>  // b.any
    53d4:	ldr	x8, [x0]
    53d8:	mov	x21, x0
    53dc:	sub	x9, x8, #0x1
    53e0:	tst	x8, x9
    53e4:	b.ne	559c <__sancov_default_options@plt+0xc1c>  // b.any
    53e8:	add	x9, x2, x8
    53ec:	neg	x10, x8
    53f0:	sub	x9, x9, #0x1
    53f4:	cmp	x8, x3
    53f8:	and	x9, x9, x10
    53fc:	add	x8, x9, x8
    5400:	csel	x9, x3, xzr, cc  // cc = lo, ul, last
    5404:	add	x20, x8, x9
    5408:	mov	x22, x3
    540c:	mov	x23, x2
    5410:	cmp	x20, x2
    5414:	b.cs	543c <__sancov_default_options@plt+0xabc>  // b.hs, b.nlast
    5418:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    541c:	ldr	x8, [x8, #4024]
    5420:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5424:	add	x0, x0, #0xe9a
    5428:	mov	x2, x20
    542c:	ldr	x1, [x8]
    5430:	mov	x3, x22
    5434:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    5438:	b	5568 <__sancov_default_options@plt+0xbe8>
    543c:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    5440:	mov	x19, x1
    5444:	ldr	x1, [x8, #488]
    5448:	mov	x0, x20
    544c:	bl	e958 <__sanitizer_set_report_fd@@Base+0x50a4>
    5450:	cbz	x0, 5568 <__sancov_default_options@plt+0xbe8>
    5454:	ldr	x9, [x21]
    5458:	mov	x8, x0
    545c:	sub	x10, x9, #0x1
    5460:	tst	x10, x0
    5464:	b.ne	55ac <__sancov_default_options@plt+0xc2c>  // b.any
    5468:	add	x11, x9, x8
    546c:	and	x12, x11, x24
    5470:	sub	x12, x22, x12
    5474:	tst	x11, x24
    5478:	csel	x12, xzr, x12, eq  // eq = none
    547c:	add	x22, x12, x11
    5480:	tst	x22, x24
    5484:	b.ne	55c4 <__sancov_default_options@plt+0xc44>  // b.any
    5488:	tst	x22, x10
    548c:	b.ne	55dc <__sancov_default_options@plt+0xc5c>  // b.any
    5490:	add	x3, x22, x23
    5494:	cmp	x3, x8
    5498:	b.cc	55f4 <__sancov_default_options@plt+0xc74>  // b.lo, b.ul, b.last
    549c:	add	x4, x20, x8
    54a0:	cmp	x3, x4
    54a4:	b.hi	5610 <__sancov_default_options@plt+0xc90>  // b.pmore
    54a8:	sub	x24, x22, x9
    54ac:	stp	x20, x23, [x24, #8]
    54b0:	str	x8, [x24]
    54b4:	cbz	x20, 5628 <__sancov_default_options@plt+0xca8>
    54b8:	mov	w8, #0x10                  	// #16
    54bc:	movk	w8, #0x4, lsl #16
    54c0:	clz	x9, x20
    54c4:	add	x23, x21, x8
    54c8:	eor	x25, x9, #0x3f
    54cc:	add	x0, x23, #0x230
    54d0:	mov	w8, #0x1                   	// #1
    54d4:	ldaxrb	w9, [x0]
    54d8:	stlxrb	w10, w8, [x0]
    54dc:	cbnz	w10, 54d4 <__sancov_default_options@plt+0xb54>
    54e0:	cbz	w9, 54e8 <__sancov_default_options@plt+0xb68>
    54e4:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    54e8:	ldr	x3, [x23]
    54ec:	cmp	x3, #0x8, lsl #12
    54f0:	b.cs	5648 <__sancov_default_options@plt+0xcc8>  // b.hs, b.nlast
    54f4:	add	x8, x3, #0x1
    54f8:	str	x8, [x23]
    54fc:	str	x3, [x24, #24]
    5500:	ldr	x8, [x21, #8]
    5504:	mov	w10, #0x40                  	// #64
    5508:	add	x9, x21, x25, lsl #3
    550c:	movk	w10, #0x4, lsl #16
    5510:	str	x24, [x8, x3, lsl #3]
    5514:	ldp	x11, x12, [x23, #32]
    5518:	ldr	x8, [x23, #16]
    551c:	strb	wzr, [x23, #8]
    5520:	add	x11, x11, x20
    5524:	add	x8, x8, #0x1
    5528:	cmp	x12, x11
    552c:	str	x8, [x23, #16]
    5530:	csel	x8, x12, x11, hi  // hi = pmore
    5534:	stp	x11, x8, [x23, #32]
    5538:	ldr	x8, [x9, x10]
    553c:	add	x8, x8, #0x1
    5540:	str	x8, [x9, x10]
    5544:	ldr	x8, [x19, #16]
    5548:	add	x8, x8, x20
    554c:	str	x8, [x19, #16]
    5550:	ldr	x8, [x19, #24]
    5554:	add	x8, x8, x20
    5558:	str	x8, [x19, #24]
    555c:	dmb	ish
    5560:	strb	wzr, [x23, #560]
    5564:	b	556c <__sancov_default_options@plt+0xbec>
    5568:	mov	x22, xzr
    556c:	mov	x0, x22
    5570:	ldp	x20, x19, [sp, #48]
    5574:	ldp	x22, x21, [sp, #32]
    5578:	ldp	x24, x23, [sp, #16]
    557c:	ldp	x30, x25, [sp], #64
    5580:	ret
    5584:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5588:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    558c:	add	x0, x0, #0xe3c
    5590:	add	x2, x2, #0x9db
    5594:	mov	w1, #0x56                  	// #86
    5598:	b	563c <__sancov_default_options@plt+0xcbc>
    559c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    55a0:	add	x0, x0, #0x121
    55a4:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    55a8:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    55ac:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55b0:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55b4:	add	x0, x0, #0xe3c
    55b8:	add	x2, x2, #0xefb
    55bc:	mov	w1, #0x65                  	// #101
    55c0:	b	563c <__sancov_default_options@plt+0xcbc>
    55c4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55c8:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55cc:	add	x0, x0, #0xe3c
    55d0:	add	x2, x2, #0xf25
    55d4:	mov	w1, #0x6b                  	// #107
    55d8:	b	563c <__sancov_default_options@plt+0xcbc>
    55dc:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55e0:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55e4:	add	x0, x0, #0xe3c
    55e8:	add	x2, x2, #0xf4a
    55ec:	mov	w1, #0x6c                  	// #108
    55f0:	b	563c <__sancov_default_options@plt+0xcbc>
    55f4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55f8:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    55fc:	add	x0, x0, #0xe3c
    5600:	add	x2, x2, #0xf70
    5604:	mov	w1, #0x6d                  	// #109
    5608:	mov	x4, x8
    560c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5610:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5614:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5618:	add	x0, x0, #0xe3c
    561c:	add	x2, x2, #0xf8e
    5620:	mov	w1, #0x6e                  	// #110
    5624:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5628:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    562c:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5630:	add	x0, x0, #0xbf8
    5634:	add	x2, x2, #0xc49
    5638:	mov	w1, #0x160                 	// #352
    563c:	mov	x3, xzr
    5640:	mov	x4, xzr
    5644:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5648:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    564c:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5650:	add	x0, x0, #0xe3c
    5654:	add	x2, x2, #0xfd0
    5658:	mov	w1, #0x16                  	// #22
    565c:	mov	w4, #0x8000                	// #32768
    5660:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5664:	str	x30, [sp, #-48]!
    5668:	stp	x22, x21, [sp, #16]
    566c:	stp	x20, x19, [sp, #32]
    5670:	ldr	x8, [x1, #8]
    5674:	mov	x21, x3
    5678:	mov	x19, x2
    567c:	mov	x22, x1
    5680:	mov	x20, x0
    5684:	cbz	x8, 5774 <__sancov_default_options@plt+0xdf4>
    5688:	mov	w8, #0xd800                	// #55296
    568c:	add	x1, x20, x8
    5690:	mov	x0, x19
    5694:	mov	x2, x20
    5698:	mov	x3, x21
    569c:	bl	5838 <__sancov_default_options@plt+0xeb8>
    56a0:	cbz	x0, 5730 <__sancov_default_options@plt+0xdb0>
    56a4:	ldr	x8, [x0, #8]
    56a8:	mov	x3, x0
    56ac:	cbz	x8, 5818 <__sancov_default_options@plt+0xe98>
    56b0:	cmp	x8, #0x3
    56b4:	b.ls	56e4 <__sancov_default_options@plt+0xd64>  // b.plast
    56b8:	lsl	x9, x8, #3
    56bc:	add	x11, x9, x3
    56c0:	add	x10, x22, #0x20
    56c4:	add	x11, x11, #0x10
    56c8:	cmp	x11, x10
    56cc:	b.ls	5740 <__sancov_default_options@plt+0xdc0>  // b.plast
    56d0:	add	x9, x9, x22
    56d4:	add	x9, x9, #0x20
    56d8:	add	x10, x3, #0x10
    56dc:	cmp	x9, x10
    56e0:	b.ls	5740 <__sancov_default_options@plt+0xdc0>  // b.plast
    56e4:	mov	x9, xzr
    56e8:	lsl	x10, x9, #3
    56ec:	add	x11, x10, x22
    56f0:	add	x12, x10, x3
    56f4:	sub	x9, x8, x9
    56f8:	add	x10, x11, #0x20
    56fc:	add	x11, x12, #0x10
    5700:	ldr	x12, [x11], #8
    5704:	subs	x9, x9, #0x1
    5708:	str	x12, [x10], #8
    570c:	b.ne	5700 <__sancov_default_options@plt+0xd80>  // b.any
    5710:	str	x8, [x22]
    5714:	add	x8, x20, x21, lsl #10
    5718:	ldr	x2, [x8, #24]
    571c:	cbz	x2, 572c <__sancov_default_options@plt+0xdac>
    5720:	mov	x0, x20
    5724:	mov	x1, x19
    5728:	bl	5dfc <__sancov_default_options@plt+0x147c>
    572c:	mov	w0, #0x1                   	// #1
    5730:	ldp	x20, x19, [sp, #32]
    5734:	ldp	x22, x21, [sp, #16]
    5738:	ldr	x30, [sp], #48
    573c:	ret
    5740:	and	x9, x8, #0xfffffffffffffffc
    5744:	add	x10, x3, #0x20
    5748:	add	x11, x22, #0x30
    574c:	mov	x12, x9
    5750:	ldp	q0, q1, [x10, #-16]
    5754:	add	x10, x10, #0x20
    5758:	subs	x12, x12, #0x4
    575c:	stp	q0, q1, [x11, #-16]
    5760:	add	x11, x11, #0x20
    5764:	b.ne	5750 <__sancov_default_options@plt+0xdd0>  // b.any
    5768:	cmp	x8, x9
    576c:	b.ne	56e8 <__sancov_default_options@plt+0xd68>  // b.any
    5770:	b	5710 <__sancov_default_options@plt+0xd90>
    5774:	add	x8, x20, #0x418
    5778:	mov	w9, #0x1                   	// #1
    577c:	mov	w10, #0x10                  	// #16
    5780:	mov	w11, #0x4000                	// #16384
    5784:	mov	w12, #0x40                  	// #64
    5788:	mov	w13, #0x3e                  	// #62
    578c:	mov	w14, #0x14                  	// #20
    5790:	mov	w15, #0x100                 	// #256
    5794:	b	57e8 <__sancov_default_options@plt+0xe68>
    5798:	mov	w16, #0x200                 	// #512
    579c:	udiv	w17, w11, w16
    57a0:	cmp	w17, #0x40
    57a4:	csel	x17, x17, x12, cc  // cc = lo, ul, last
    57a8:	cmp	x17, #0x0
    57ac:	csinc	x17, x17, xzr, ne  // ne = any
    57b0:	cmp	x17, #0x3e
    57b4:	csel	x17, x17, x13, cc  // cc = lo, ul, last
    57b8:	lsl	x18, x17, #1
    57bc:	lsl	x17, x17, #3
    57c0:	add	x17, x17, #0x10
    57c4:	cmp	x16, x17
    57c8:	add	x10, x10, #0x10
    57cc:	stp	x18, x16, [x8, #-16]
    57d0:	csel	x16, x14, xzr, cc  // cc = lo, ul, last
    57d4:	add	x9, x9, #0x1
    57d8:	cmp	x10, #0x360
    57dc:	str	x16, [x8]
    57e0:	add	x8, x8, #0x400
    57e4:	b.eq	5688 <__sancov_default_options@plt+0xd08>  // b.none
    57e8:	cmp	x10, #0x350
    57ec:	b.eq	5798 <__sancov_default_options@plt+0xe18>  // b.none
    57f0:	cmp	x9, #0x11
    57f4:	mov	x16, x10
    57f8:	b.cc	579c <__sancov_default_options@plt+0xe1c>  // b.lo, b.ul, b.last
    57fc:	sub	x16, x9, #0x10
    5800:	lsr	x17, x16, #2
    5804:	lsl	x17, x15, x17
    5808:	lsr	x18, x17, #2
    580c:	and	x16, x16, #0x3
    5810:	madd	x16, x18, x16, x17
    5814:	b	579c <__sancov_default_options@plt+0xe1c>
    5818:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    581c:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5820:	add	x0, x0, #0xb4a
    5824:	add	x2, x2, #0xbe1
    5828:	mov	w1, #0xf0                  	// #240
    582c:	mov	x3, xzr
    5830:	mov	x4, xzr
    5834:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5838:	stp	x30, x25, [sp, #-64]!
    583c:	stp	x24, x23, [sp, #16]
    5840:	stp	x22, x21, [sp, #32]
    5844:	stp	x20, x19, [sp, #48]
    5848:	mov	w9, #0x40                  	// #64
    584c:	add	x8, x0, x3, lsl #6
    5850:	movk	w9, #0x8, lsl #16
    5854:	mov	x20, x3
    5858:	mov	x22, x2
    585c:	mov	x23, x1
    5860:	mov	x21, x0
    5864:	add	x19, x8, x9
    5868:	mov	w8, #0x1                   	// #1
    586c:	ldaxrb	w9, [x19]
    5870:	stlxrb	w10, w8, [x19]
    5874:	cbnz	w10, 586c <__sancov_default_options@plt+0xeec>
    5878:	cbz	w9, 5884 <__sancov_default_options@plt+0xf04>
    587c:	mov	x0, x19
    5880:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    5884:	mov	w8, #0x48                  	// #72
    5888:	add	x25, x21, x20, lsl #6
    588c:	movk	w8, #0x8, lsl #16
    5890:	add	x24, x25, x8
    5894:	ldr	x8, [x24]
    5898:	cbnz	x8, 58c0 <__sancov_default_options@plt+0xf40>
    589c:	mov	x0, x21
    58a0:	mov	x1, x23
    58a4:	mov	x2, x22
    58a8:	mov	x3, x19
    58ac:	mov	x4, x20
    58b0:	bl	5934 <__sancov_default_options@plt+0xfb4>
    58b4:	tbz	w0, #0, 590c <__sancov_default_options@plt+0xf8c>
    58b8:	ldr	x8, [x24]
    58bc:	cbz	x8, 5914 <__sancov_default_options@plt+0xf94>
    58c0:	mov	w9, #0x50                  	// #80
    58c4:	movk	w9, #0x8, lsl #16
    58c8:	ldr	x0, [x25, x9]
    58cc:	ldr	x10, [x0]
    58d0:	str	x10, [x25, x9]
    58d4:	cbnz	x10, 58e8 <__sancov_default_options@plt+0xf68>
    58d8:	mov	w10, #0x58                  	// #88
    58dc:	add	x9, x21, x20, lsl #6
    58e0:	movk	w10, #0x8, lsl #16
    58e4:	str	xzr, [x9, x10]
    58e8:	sub	x8, x8, #0x1
    58ec:	str	x8, [x24]
    58f0:	dmb	ish
    58f4:	strb	wzr, [x19]
    58f8:	ldp	x20, x19, [sp, #48]
    58fc:	ldp	x22, x21, [sp, #32]
    5900:	ldp	x24, x23, [sp, #16]
    5904:	ldp	x30, x25, [sp], #64
    5908:	ret
    590c:	mov	x0, xzr
    5910:	b	58f0 <__sancov_default_options@plt+0xf70>
    5914:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5918:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    591c:	add	x0, x0, #0xd8d
    5920:	add	x2, x2, #0xddc
    5924:	mov	w1, #0x41                  	// #65
    5928:	mov	x3, xzr
    592c:	mov	x4, xzr
    5930:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5934:	stp	x29, x30, [sp, #-96]!
    5938:	stp	x28, x27, [sp, #16]
    593c:	stp	x26, x25, [sp, #32]
    5940:	stp	x24, x23, [sp, #48]
    5944:	stp	x22, x21, [sp, #64]
    5948:	stp	x20, x19, [sp, #80]
    594c:	sub	sp, sp, #0x1a0
    5950:	mov	x20, x2
    5954:	mov	x2, x4
    5958:	mov	x22, x4
    595c:	mov	x19, x3
    5960:	mov	x21, x0
    5964:	bl	5ccc <__sancov_default_options@plt+0x134c>
    5968:	cbz	x0, 5c60 <__sancov_default_options@plt+0x12e0>
    596c:	mov	x23, x0
    5970:	cmp	x22, #0x35
    5974:	b.ne	5980 <__sancov_default_options@plt+0x1000>  // b.any
    5978:	mov	w12, #0x200                 	// #512
    597c:	b	59ac <__sancov_default_options@plt+0x102c>
    5980:	subs	x8, x22, #0x10
    5984:	b.hi	5990 <__sancov_default_options@plt+0x1010>  // b.pmore
    5988:	lsl	x12, x22, #4
    598c:	b	59a8 <__sancov_default_options@plt+0x1028>
    5990:	lsr	x9, x8, #2
    5994:	mov	w10, #0x100                 	// #256
    5998:	lsl	x9, x10, x9
    599c:	lsr	x10, x9, #2
    59a0:	and	x8, x8, #0x3
    59a4:	madd	x12, x10, x8, x9
    59a8:	cbz	x12, 5c88 <__sancov_default_options@plt+0x1308>
    59ac:	mov	w8, #0x4000                	// #16384
    59b0:	udiv	w8, w8, w12
    59b4:	mov	w9, #0x40                  	// #64
    59b8:	cmp	w8, #0x40
    59bc:	csel	x8, x8, x9, cc  // cc = lo, ul, last
    59c0:	cmp	x8, #0x0
    59c4:	csinc	x8, x8, xzr, ne  // ne = any
    59c8:	cmp	x8, #0x3e
    59cc:	mov	w9, #0x3e                  	// #62
    59d0:	csel	x25, x8, x9, cc  // cc = lo, ul, last
    59d4:	mov	w8, #0x100000              	// #1048576
    59d8:	udiv	x8, x8, x12
    59dc:	madd	x27, x8, x12, x23
    59e0:	cmp	x23, x27
    59e4:	b.cs	5c5c <__sancov_default_options@plt+0x12dc>  // b.hs, b.nlast
    59e8:	add	x9, x20, x22, lsl #10
    59ec:	mov	w10, #0xd810                	// #55312
    59f0:	mov	x24, xzr
    59f4:	mov	x8, xzr
    59f8:	add	x28, x9, #0x18
    59fc:	add	x29, x20, x10
    5a00:	add	x13, sp, #0x20
    5a04:	stp	x21, x22, [sp, #16]
    5a08:	b	5a1c <__sancov_default_options@plt+0x109c>
    5a0c:	mov	x24, xzr
    5a10:	add	x23, x23, x12
    5a14:	cmp	x23, x27
    5a18:	b.cs	5b28 <__sancov_default_options@plt+0x11a8>  // b.hs, b.nlast
    5a1c:	mov	x9, x24
    5a20:	add	x24, x24, #0x1
    5a24:	cmp	x24, #0x30
    5a28:	str	x23, [x13, x9, lsl #3]
    5a2c:	b.ne	5a10 <__sancov_default_options@plt+0x1090>  // b.any
    5a30:	mov	x22, #0xffffffffffffffff    	// #-1
    5a34:	add	x21, sp, #0x20
    5a38:	b	5a64 <__sancov_default_options@plt+0x10e4>
    5a3c:	ldr	x10, [x19, #24]
    5a40:	add	x9, x9, #0x1
    5a44:	str	x8, [x10]
    5a48:	str	x8, [x19, #24]
    5a4c:	mov	x8, xzr
    5a50:	str	x9, [x19, #8]
    5a54:	add	x22, x22, #0x1
    5a58:	cmp	x22, #0x2f
    5a5c:	add	x21, x21, #0x8
    5a60:	b.cs	5a0c <__sancov_default_options@plt+0x108c>  // b.hs, b.nlast
    5a64:	cbz	x8, 5a74 <__sancov_default_options@plt+0x10f4>
    5a68:	ldr	x26, [x21]
    5a6c:	ldr	x9, [x8, #8]
    5a70:	b	5ad0 <__sancov_default_options@plt+0x1150>
    5a74:	ldr	x26, [x21]
    5a78:	ldr	x3, [x28]
    5a7c:	mov	x8, x26
    5a80:	cbz	x3, 5ac4 <__sancov_default_options@plt+0x1144>
    5a84:	cmp	x3, #0x36
    5a88:	b.cs	5c90 <__sancov_default_options@plt+0x1310>  // b.hs, b.nlast
    5a8c:	add	x24, x20, x3, lsl #10
    5a90:	ldr	x8, [x24]
    5a94:	cbz	x8, 5b00 <__sancov_default_options@plt+0x1180>
    5a98:	sub	x9, x8, #0x1
    5a9c:	add	x10, x24, #0x20
    5aa0:	str	x9, [x24]
    5aa4:	add	x8, x10, x8, lsl #3
    5aa8:	ldur	x11, [x8, #-16]
    5aac:	ldr	x8, [x10, x9, lsl #3]
    5ab0:	prfm	pldl1keep, [x11]
    5ab4:	ldr	x9, [x24, #16]
    5ab8:	ldr	x10, [x29]
    5abc:	add	x9, x10, x9
    5ac0:	str	x9, [x29]
    5ac4:	cbz	x8, 5c80 <__sancov_default_options@plt+0x1300>
    5ac8:	mov	x9, xzr
    5acc:	str	xzr, [x8, #8]
    5ad0:	add	x10, x9, #0x1
    5ad4:	add	x9, x8, x9, lsl #3
    5ad8:	cmp	x10, x25
    5adc:	str	x10, [x8, #8]
    5ae0:	str	x26, [x9, #16]
    5ae4:	b.ne	5a54 <__sancov_default_options@plt+0x10d4>  // b.any
    5ae8:	ldr	x9, [x19, #8]
    5aec:	str	xzr, [x8]
    5af0:	cbnz	x9, 5a3c <__sancov_default_options@plt+0x10bc>
    5af4:	stp	x8, x8, [x19, #16]
    5af8:	mov	w9, #0x1                   	// #1
    5afc:	b	5a4c <__sancov_default_options@plt+0x10cc>
    5b00:	ldr	x2, [sp, #16]
    5b04:	mov	x0, x20
    5b08:	mov	x1, x24
    5b0c:	str	x12, [sp, #8]
    5b10:	bl	5664 <__sancov_default_options@plt+0xce4>
    5b14:	tbz	w0, #0, 5c80 <__sancov_default_options@plt+0x1300>
    5b18:	ldr	x8, [x24]
    5b1c:	ldr	x12, [sp, #8]
    5b20:	add	x13, sp, #0x20
    5b24:	b	5a98 <__sancov_default_options@plt+0x1118>
    5b28:	cbz	x24, 5c24 <__sancov_default_options@plt+0x12a4>
    5b2c:	ldr	x9, [sp, #24]
    5b30:	mov	w10, #0xd810                	// #55312
    5b34:	add	x23, x20, x10
    5b38:	add	x26, sp, #0x20
    5b3c:	add	x9, x20, x9, lsl #10
    5b40:	add	x21, x9, #0x18
    5b44:	b	5b6c <__sancov_default_options@plt+0x11ec>
    5b48:	ldr	x10, [x19, #24]
    5b4c:	add	x9, x9, #0x1
    5b50:	str	x8, [x10]
    5b54:	str	x8, [x19, #24]
    5b58:	mov	x8, xzr
    5b5c:	str	x9, [x19, #8]
    5b60:	subs	x24, x24, #0x1
    5b64:	add	x26, x26, #0x8
    5b68:	b.eq	5c24 <__sancov_default_options@plt+0x12a4>  // b.none
    5b6c:	cbz	x8, 5b7c <__sancov_default_options@plt+0x11fc>
    5b70:	ldr	x27, [x26]
    5b74:	ldr	x9, [x8, #8]
    5b78:	b	5bd8 <__sancov_default_options@plt+0x1258>
    5b7c:	ldr	x27, [x26]
    5b80:	ldr	x3, [x21]
    5b84:	mov	x8, x27
    5b88:	cbz	x3, 5bcc <__sancov_default_options@plt+0x124c>
    5b8c:	cmp	x3, #0x36
    5b90:	b.cs	5c90 <__sancov_default_options@plt+0x1310>  // b.hs, b.nlast
    5b94:	add	x22, x20, x3, lsl #10
    5b98:	ldr	x8, [x22]
    5b9c:	cbz	x8, 5c08 <__sancov_default_options@plt+0x1288>
    5ba0:	sub	x9, x8, #0x1
    5ba4:	add	x10, x22, #0x20
    5ba8:	str	x9, [x22]
    5bac:	add	x8, x10, x8, lsl #3
    5bb0:	ldur	x11, [x8, #-16]
    5bb4:	ldr	x8, [x10, x9, lsl #3]
    5bb8:	prfm	pldl1keep, [x11]
    5bbc:	ldr	x9, [x22, #16]
    5bc0:	ldr	x10, [x23]
    5bc4:	add	x9, x10, x9
    5bc8:	str	x9, [x23]
    5bcc:	cbz	x8, 5c80 <__sancov_default_options@plt+0x1300>
    5bd0:	mov	x9, xzr
    5bd4:	str	xzr, [x8, #8]
    5bd8:	add	x10, x9, #0x1
    5bdc:	add	x9, x8, x9, lsl #3
    5be0:	cmp	x10, x25
    5be4:	str	x10, [x8, #8]
    5be8:	str	x27, [x9, #16]
    5bec:	b.ne	5b60 <__sancov_default_options@plt+0x11e0>  // b.any
    5bf0:	ldr	x9, [x19, #8]
    5bf4:	str	xzr, [x8]
    5bf8:	cbnz	x9, 5b48 <__sancov_default_options@plt+0x11c8>
    5bfc:	stp	x8, x8, [x19, #16]
    5c00:	mov	w9, #0x1                   	// #1
    5c04:	b	5b58 <__sancov_default_options@plt+0x11d8>
    5c08:	ldr	x2, [sp, #16]
    5c0c:	mov	x0, x20
    5c10:	mov	x1, x22
    5c14:	bl	5664 <__sancov_default_options@plt+0xce4>
    5c18:	tbz	w0, #0, 5c80 <__sancov_default_options@plt+0x1300>
    5c1c:	ldr	x8, [x22]
    5c20:	b	5ba0 <__sancov_default_options@plt+0x1220>
    5c24:	cbz	x8, 5c5c <__sancov_default_options@plt+0x12dc>
    5c28:	ldr	x9, [x8, #8]
    5c2c:	cbz	x9, 5cac <__sancov_default_options@plt+0x132c>
    5c30:	ldr	x9, [x19, #8]
    5c34:	str	xzr, [x8]
    5c38:	cbz	x9, 5c50 <__sancov_default_options@plt+0x12d0>
    5c3c:	ldr	x10, [x19, #24]
    5c40:	str	x8, [x10]
    5c44:	str	x8, [x19, #24]
    5c48:	add	x8, x9, #0x1
    5c4c:	b	5c58 <__sancov_default_options@plt+0x12d8>
    5c50:	stp	x8, x8, [x19, #16]
    5c54:	mov	w8, #0x1                   	// #1
    5c58:	str	x8, [x19, #8]
    5c5c:	mov	w0, #0x1                   	// #1
    5c60:	add	sp, sp, #0x1a0
    5c64:	ldp	x20, x19, [sp, #80]
    5c68:	ldp	x22, x21, [sp, #64]
    5c6c:	ldp	x24, x23, [sp, #48]
    5c70:	ldp	x26, x25, [sp, #32]
    5c74:	ldp	x28, x27, [sp, #16]
    5c78:	ldp	x29, x30, [sp], #96
    5c7c:	ret
    5c80:	mov	w0, wzr
    5c84:	b	5c60 <__sancov_default_options@plt+0x12e0>
    5c88:	mov	x25, xzr
    5c8c:	b	59d4 <__sancov_default_options@plt+0x1054>
    5c90:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5c94:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5c98:	add	x0, x0, #0xb4a
    5c9c:	add	x2, x2, #0xbc2
    5ca0:	mov	w1, #0x9a                  	// #154
    5ca4:	mov	w4, #0x36                  	// #54
    5ca8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5cac:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5cb0:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5cb4:	add	x0, x0, #0xc59
    5cb8:	add	x2, x2, #0xbe1
    5cbc:	mov	w1, #0x174                 	// #372
    5cc0:	mov	x3, xzr
    5cc4:	mov	x4, xzr
    5cc8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5ccc:	stp	x30, x23, [sp, #-48]!
    5cd0:	stp	x22, x21, [sp, #16]
    5cd4:	stp	x20, x19, [sp, #32]
    5cd8:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    5cdc:	mov	x19, x2
    5ce0:	ldr	x2, [x8, #480]
    5ce4:	mov	x22, x1
    5ce8:	mov	x21, x0
    5cec:	mov	w0, #0x100000              	// #1048576
    5cf0:	mov	w1, #0x100000              	// #1048576
    5cf4:	bl	ea4c <__sanitizer_set_report_fd@@Base+0x5198>
    5cf8:	mov	x20, x0
    5cfc:	cbz	x0, 5d8c <__sancov_default_options@plt+0x140c>
    5d00:	ldr	x8, [x22, #24]
    5d04:	tst	x20, #0xfffff
    5d08:	add	x8, x8, #0x100, lsl #12
    5d0c:	str	x8, [x22, #24]
    5d10:	b.ne	5da0 <__sancov_default_options@plt+0x1420>  // b.any
    5d14:	lsr	x8, x20, #48
    5d18:	cbnz	x8, 5dc0 <__sancov_default_options@plt+0x1440>
    5d1c:	lsr	x23, x20, #32
    5d20:	ldr	x0, [x21, x23, lsl #3]
    5d24:	dmb	ish
    5d28:	cbnz	x0, 5d7c <__sancov_default_options@plt+0x13fc>
    5d2c:	add	x22, x21, #0x80, lsl #12
    5d30:	mov	w8, #0x1                   	// #1
    5d34:	ldaxrb	w9, [x22]
    5d38:	stlxrb	w10, w8, [x22]
    5d3c:	cbnz	w10, 5d34 <__sancov_default_options@plt+0x13b4>
    5d40:	cbz	w9, 5d4c <__sancov_default_options@plt+0x13cc>
    5d44:	mov	x0, x22
    5d48:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    5d4c:	ldr	x0, [x21, x23, lsl #3]
    5d50:	dmb	ish
    5d54:	cbnz	x0, 5d74 <__sancov_default_options@plt+0x13f4>
    5d58:	adrp	x1, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5d5c:	add	x1, x1, #0xd5b
    5d60:	mov	w0, #0x1000                	// #4096
    5d64:	mov	w2, wzr
    5d68:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    5d6c:	dmb	ish
    5d70:	str	x0, [x21, x23, lsl #3]
    5d74:	dmb	ish
    5d78:	strb	wzr, [x22]
    5d7c:	ubfx	x8, x20, #20, #12
    5d80:	ldrb	w4, [x0, x8]
    5d84:	cbnz	x4, 5de0 <__sancov_default_options@plt+0x1460>
    5d88:	strb	w19, [x0, x8]
    5d8c:	mov	x0, x20
    5d90:	ldp	x20, x19, [sp, #32]
    5d94:	ldp	x22, x21, [sp, #16]
    5d98:	ldp	x30, x23, [sp], #48
    5d9c:	ret
    5da0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5da4:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5da8:	add	x0, x0, #0xc59
    5dac:	add	x2, x2, #0xcb7
    5db0:	mov	w1, #0x131                 	// #305
    5db4:	mov	x3, xzr
    5db8:	mov	x4, xzr
    5dbc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5dc0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5dc4:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5dc8:	lsr	x3, x20, #20
    5dcc:	add	x0, x0, #0xc59
    5dd0:	add	x2, x2, #0xd6b
    5dd4:	mov	w1, #0x121                 	// #289
    5dd8:	mov	w4, #0x10000000            	// #268435456
    5ddc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5de0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5de4:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5de8:	add	x0, x0, #0xcde
    5dec:	add	x2, x2, #0xd3a
    5df0:	mov	w1, #0x47                  	// #71
    5df4:	mov	x3, xzr
    5df8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5dfc:	str	x30, [sp, #-48]!
    5e00:	stp	x22, x21, [sp, #16]
    5e04:	stp	x20, x19, [sp, #32]
    5e08:	mov	x19, x2
    5e0c:	cbz	x2, 5f44 <__sancov_default_options@plt+0x15c4>
    5e10:	cmp	x19, #0x36
    5e14:	b.cs	5f64 <__sancov_default_options@plt+0x15e4>  // b.hs, b.nlast
    5e18:	add	x22, x0, x19, lsl #10
    5e1c:	mov	x8, x22
    5e20:	ldr	x9, [x8, #8]!
    5e24:	mov	x21, x3
    5e28:	mov	x2, x1
    5e2c:	mov	x20, x0
    5e30:	cbz	x9, 5e78 <__sancov_default_options@plt+0x14f8>
    5e34:	ldr	x8, [x22]
    5e38:	cmp	x8, x9
    5e3c:	b.eq	5f2c <__sancov_default_options@plt+0x15ac>  // b.none
    5e40:	add	x10, x20, x19, lsl #10
    5e44:	add	x9, x8, #0x1
    5e48:	add	x8, x10, x8, lsl #3
    5e4c:	mov	w11, #0xd810                	// #55312
    5e50:	str	x9, [x22]
    5e54:	str	x21, [x8, #32]
    5e58:	ldr	x8, [x10, #16]
    5e5c:	ldr	x9, [x20, x11]
    5e60:	sub	x8, x9, x8
    5e64:	str	x8, [x20, x11]
    5e68:	ldp	x20, x19, [sp, #32]
    5e6c:	ldp	x22, x21, [sp, #16]
    5e70:	ldr	x30, [sp], #48
    5e74:	ret
    5e78:	add	x9, x20, #0x418
    5e7c:	mov	w10, #0x1                   	// #1
    5e80:	mov	w11, #0x10                  	// #16
    5e84:	mov	w12, #0x4000                	// #16384
    5e88:	mov	w13, #0x40                  	// #64
    5e8c:	mov	w14, #0x3e                  	// #62
    5e90:	mov	w15, #0x14                  	// #20
    5e94:	mov	w16, #0x100                 	// #256
    5e98:	b	5eec <__sancov_default_options@plt+0x156c>
    5e9c:	mov	w17, #0x200                 	// #512
    5ea0:	udiv	w18, w12, w17
    5ea4:	cmp	w18, #0x40
    5ea8:	csel	x18, x18, x13, cc  // cc = lo, ul, last
    5eac:	cmp	x18, #0x0
    5eb0:	csinc	x18, x18, xzr, ne  // ne = any
    5eb4:	cmp	x18, #0x3e
    5eb8:	csel	x18, x18, x14, cc  // cc = lo, ul, last
    5ebc:	lsl	x0, x18, #1
    5ec0:	lsl	x18, x18, #3
    5ec4:	add	x18, x18, #0x10
    5ec8:	cmp	x17, x18
    5ecc:	add	x11, x11, #0x10
    5ed0:	stp	x0, x17, [x9, #-16]
    5ed4:	csel	x17, x15, xzr, cc  // cc = lo, ul, last
    5ed8:	add	x10, x10, #0x1
    5edc:	cmp	x11, #0x360
    5ee0:	str	x17, [x9]
    5ee4:	add	x9, x9, #0x400
    5ee8:	b.eq	5f1c <__sancov_default_options@plt+0x159c>  // b.none
    5eec:	cmp	x11, #0x350
    5ef0:	b.eq	5e9c <__sancov_default_options@plt+0x151c>  // b.none
    5ef4:	cmp	x10, #0x11
    5ef8:	mov	x17, x11
    5efc:	b.cc	5ea0 <__sancov_default_options@plt+0x1520>  // b.lo, b.ul, b.last
    5f00:	sub	x17, x10, #0x10
    5f04:	lsr	x18, x17, #2
    5f08:	lsl	x18, x16, x18
    5f0c:	lsr	x0, x18, #2
    5f10:	and	x17, x17, #0x3
    5f14:	madd	x17, x0, x17, x18
    5f18:	b	5ea0 <__sancov_default_options@plt+0x1520>
    5f1c:	ldr	x9, [x8]
    5f20:	ldr	x8, [x22]
    5f24:	cmp	x8, x9
    5f28:	b.ne	5e40 <__sancov_default_options@plt+0x14c0>  // b.any
    5f2c:	mov	x0, x20
    5f30:	mov	x1, x22
    5f34:	mov	x3, x19
    5f38:	bl	5f84 <__sancov_default_options@plt+0x1604>
    5f3c:	ldr	x8, [x22]
    5f40:	b	5e40 <__sancov_default_options@plt+0x14c0>
    5f44:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5f48:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5f4c:	add	x0, x0, #0xb4a
    5f50:	add	x2, x2, #0xbaa
    5f54:	mov	w1, #0xa8                  	// #168
    5f58:	mov	x3, xzr
    5f5c:	mov	x4, xzr
    5f60:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5f64:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5f68:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    5f6c:	add	x0, x0, #0xb4a
    5f70:	add	x2, x2, #0xbc2
    5f74:	mov	w1, #0xa9                  	// #169
    5f78:	mov	w4, #0x36                  	// #54
    5f7c:	mov	x3, x19
    5f80:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    5f84:	stp	x30, x25, [sp, #-64]!
    5f88:	stp	x24, x23, [sp, #16]
    5f8c:	stp	x22, x21, [sp, #32]
    5f90:	stp	x20, x19, [sp, #48]
    5f94:	ldp	x25, x8, [x1]
    5f98:	add	x9, x0, x3, lsl #10
    5f9c:	mov	x19, x3
    5fa0:	ldr	x3, [x9, #24]
    5fa4:	lsr	x8, x8, #1
    5fa8:	cmp	x8, x25
    5fac:	mov	x20, x2
    5fb0:	mov	x21, x1
    5fb4:	mov	x22, x0
    5fb8:	csel	x24, x8, x25, cc  // cc = lo, ul, last
    5fbc:	cbz	x3, 600c <__sancov_default_options@plt+0x168c>
    5fc0:	cmp	x3, #0x36
    5fc4:	b.cs	612c <__sancov_default_options@plt+0x17ac>  // b.hs, b.nlast
    5fc8:	add	x23, x22, x3, lsl #10
    5fcc:	ldr	x8, [x23]
    5fd0:	cbz	x8, 60f4 <__sancov_default_options@plt+0x1774>
    5fd4:	sub	x9, x8, #0x1
    5fd8:	add	x10, x23, #0x20
    5fdc:	str	x9, [x23]
    5fe0:	add	x8, x10, x8, lsl #3
    5fe4:	ldur	x8, [x8, #-16]
    5fe8:	mov	w11, #0xd810                	// #55312
    5fec:	ldr	x3, [x10, x9, lsl #3]
    5ff0:	prfm	pldl1keep, [x8]
    5ff4:	ldr	x8, [x23, #16]
    5ff8:	ldr	x9, [x22, x11]
    5ffc:	add	x8, x9, x8
    6000:	str	x8, [x22, x11]
    6004:	cbnz	x3, 601c <__sancov_default_options@plt+0x169c>
    6008:	b	6110 <__sancov_default_options@plt+0x1790>
    600c:	sub	x8, x25, x24
    6010:	add	x8, x21, x8, lsl #3
    6014:	ldr	x3, [x8, #32]
    6018:	cbz	x3, 6110 <__sancov_default_options@plt+0x1790>
    601c:	str	x24, [x3, #8]
    6020:	cbz	x24, 6088 <__sancov_default_options@plt+0x1708>
    6024:	cmp	x24, #0x4
    6028:	b.cc	6060 <__sancov_default_options@plt+0x16e0>  // b.lo, b.ul, b.last
    602c:	lsl	x9, x25, #3
    6030:	add	x8, x9, #0x20
    6034:	add	x10, x3, #0x10
    6038:	add	x11, x21, x8
    603c:	cmp	x11, x10
    6040:	b.ls	60b8 <__sancov_default_options@plt+0x1738>  // b.plast
    6044:	lsl	x10, x24, #3
    6048:	add	x11, x10, x3
    604c:	sub	x8, x8, x10
    6050:	add	x10, x11, #0x10
    6054:	add	x8, x21, x8
    6058:	cmp	x8, x10
    605c:	b.cs	60b8 <__sancov_default_options@plt+0x1738>  // b.hs, b.nlast
    6060:	mov	x8, xzr
    6064:	sub	x9, x8, x24
    6068:	add	x8, x3, x8, lsl #3
    606c:	add	x10, x21, x25, lsl #3
    6070:	add	x8, x8, #0x10
    6074:	add	x10, x10, #0x20
    6078:	ldr	x11, [x10, x9, lsl #3]
    607c:	adds	x9, x9, #0x1
    6080:	str	x11, [x8], #8
    6084:	b.cc	6078 <__sancov_default_options@plt+0x16f8>  // b.lo, b.ul, b.last
    6088:	ldr	x8, [x21]
    608c:	mov	w9, #0xd800                	// #55296
    6090:	add	x1, x22, x9
    6094:	mov	x0, x20
    6098:	sub	x8, x8, x24
    609c:	str	x8, [x21]
    60a0:	mov	x2, x19
    60a4:	ldp	x20, x19, [sp, #48]
    60a8:	ldp	x22, x21, [sp, #32]
    60ac:	ldp	x24, x23, [sp, #16]
    60b0:	ldp	x30, x25, [sp], #64
    60b4:	b	6148 <__sancov_default_options@plt+0x17c8>
    60b8:	sub	x9, x9, x24, lsl #3
    60bc:	and	x8, x24, #0x7ffffffffffffffc
    60c0:	add	x9, x9, x21
    60c4:	add	x9, x9, #0x30
    60c8:	add	x10, x3, #0x20
    60cc:	mov	x11, x8
    60d0:	ldp	q0, q1, [x9, #-16]
    60d4:	subs	x11, x11, #0x4
    60d8:	add	x9, x9, #0x20
    60dc:	stp	q0, q1, [x10, #-16]
    60e0:	add	x10, x10, #0x20
    60e4:	b.ne	60d0 <__sancov_default_options@plt+0x1750>  // b.any
    60e8:	cmp	x24, x8
    60ec:	b.eq	6088 <__sancov_default_options@plt+0x1708>  // b.none
    60f0:	b	6064 <__sancov_default_options@plt+0x16e4>
    60f4:	mov	x0, x22
    60f8:	mov	x1, x23
    60fc:	mov	x2, x20
    6100:	bl	5664 <__sancov_default_options@plt+0xce4>
    6104:	tbz	w0, #0, 6110 <__sancov_default_options@plt+0x1790>
    6108:	ldr	x8, [x23]
    610c:	b	5fd4 <__sancov_default_options@plt+0x1654>
    6110:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    6114:	ldr	x8, [x8, #4024]
    6118:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    611c:	add	x0, x0, #0xdf0
    6120:	ldr	x1, [x8]
    6124:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    6128:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    612c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6130:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6134:	add	x0, x0, #0xb4a
    6138:	add	x2, x2, #0xbc2
    613c:	mov	w1, #0x9a                  	// #154
    6140:	mov	w4, #0x36                  	// #54
    6144:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6148:	str	x30, [sp, #-48]!
    614c:	stp	x22, x21, [sp, #16]
    6150:	stp	x20, x19, [sp, #32]
    6154:	ldr	x8, [x3, #8]
    6158:	cbz	x8, 6204 <__sancov_default_options@plt+0x1884>
    615c:	mov	w9, #0x40                  	// #64
    6160:	add	x8, x0, x2, lsl #6
    6164:	movk	w9, #0x8, lsl #16
    6168:	mov	x20, x3
    616c:	mov	x21, x2
    6170:	mov	x22, x0
    6174:	add	x19, x8, x9
    6178:	mov	w8, #0x1                   	// #1
    617c:	ldaxrb	w9, [x19]
    6180:	stlxrb	w10, w8, [x19]
    6184:	cbnz	w10, 617c <__sancov_default_options@plt+0x17fc>
    6188:	cbz	w9, 6194 <__sancov_default_options@plt+0x1814>
    618c:	mov	x0, x19
    6190:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    6194:	mov	w8, #0x48                  	// #72
    6198:	add	x9, x22, x21, lsl #6
    619c:	movk	w8, #0x8, lsl #16
    61a0:	add	x8, x9, x8
    61a4:	ldr	x10, [x8]
    61a8:	cbz	x10, 61c8 <__sancov_default_options@plt+0x1848>
    61ac:	mov	w11, #0x50                  	// #80
    61b0:	movk	w11, #0x8, lsl #16
    61b4:	ldr	x12, [x9, x11]
    61b8:	str	x12, [x20]
    61bc:	str	x20, [x9, x11]
    61c0:	add	x9, x10, #0x1
    61c4:	b	61e8 <__sancov_default_options@plt+0x1868>
    61c8:	mov	w10, #0x58                  	// #88
    61cc:	mov	w11, #0x50                  	// #80
    61d0:	movk	w10, #0x8, lsl #16
    61d4:	movk	w11, #0x8, lsl #16
    61d8:	str	xzr, [x20]
    61dc:	str	x20, [x9, x10]
    61e0:	str	x20, [x9, x11]
    61e4:	mov	w9, #0x1                   	// #1
    61e8:	str	x9, [x8]
    61ec:	dmb	ish
    61f0:	strb	wzr, [x19]
    61f4:	ldp	x20, x19, [sp, #32]
    61f8:	ldp	x22, x21, [sp, #16]
    61fc:	ldr	x30, [sp], #48
    6200:	ret
    6204:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6208:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    620c:	add	x0, x0, #0xc59
    6210:	add	x2, x2, #0xbe1
    6214:	mov	w1, #0xb8                  	// #184
    6218:	mov	x3, xzr
    621c:	mov	x4, xzr
    6220:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6224:	stp	x30, x25, [sp, #-64]!
    6228:	stp	x24, x23, [sp, #16]
    622c:	stp	x22, x21, [sp, #32]
    6230:	stp	x20, x19, [sp, #48]
    6234:	mov	x22, x4
    6238:	mov	x23, x3
    623c:	mov	x21, x1
    6240:	mov	x20, x0
    6244:	cbz	x2, 6304 <__sancov_default_options@plt+0x1984>
    6248:	mov	x19, x2
    624c:	cbz	x23, 634c <__sancov_default_options@plt+0x19cc>
    6250:	lsr	x25, x19, #48
    6254:	cbnz	x25, 6278 <__sancov_default_options@plt+0x18f8>
    6258:	lsr	x8, x19, #29
    625c:	and	x8, x8, #0x7fffffff8
    6260:	ldr	x8, [x20, x8]
    6264:	dmb	ish
    6268:	cbz	x8, 6278 <__sancov_default_options@plt+0x18f8>
    626c:	ubfx	x9, x19, #20, #12
    6270:	ldrb	w8, [x8, x9]
    6274:	cbnz	w8, 6290 <__sancov_default_options@plt+0x1910>
    6278:	mov	w8, #0xdc0                 	// #3520
    627c:	movk	w8, #0x8, lsl #16
    6280:	add	x0, x20, x8
    6284:	mov	x1, x19
    6288:	bl	6664 <__sancov_default_options@plt+0x1ce4>
    628c:	cbz	x0, 63f0 <__sancov_default_options@plt+0x1a70>
    6290:	mov	x0, x20
    6294:	mov	x1, x19
    6298:	bl	6410 <__sancov_default_options@plt+0x1a90>
    629c:	mov	x24, x0
    62a0:	mov	x0, x20
    62a4:	mov	x1, x21
    62a8:	mov	x2, x23
    62ac:	mov	x3, x22
    62b0:	bl	51c0 <__sancov_default_options@plt+0x840>
    62b4:	mov	x22, x0
    62b8:	cbz	x0, 62d0 <__sancov_default_options@plt+0x1950>
    62bc:	cmp	x24, x23
    62c0:	csel	x2, x23, x24, hi  // hi = pmore
    62c4:	mov	x0, x22
    62c8:	mov	x1, x19
    62cc:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    62d0:	cbnz	x25, 6328 <__sancov_default_options@plt+0x19a8>
    62d4:	lsr	x8, x19, #32
    62d8:	ldr	x10, [x20, x8, lsl #3]
    62dc:	dmb	ish
    62e0:	cbz	x10, 6328 <__sancov_default_options@plt+0x19a8>
    62e4:	ubfx	x9, x19, #20, #12
    62e8:	ldrb	w10, [x10, x9]
    62ec:	cbz	w10, 6328 <__sancov_default_options@plt+0x19a8>
    62f0:	ldr	x8, [x20, x8, lsl #3]
    62f4:	dmb	ish
    62f8:	cbz	x8, 63ac <__sancov_default_options@plt+0x1a2c>
    62fc:	ldrb	w2, [x8, x9]
    6300:	b	63b0 <__sancov_default_options@plt+0x1a30>
    6304:	mov	x0, x20
    6308:	mov	x1, x21
    630c:	mov	x2, x23
    6310:	mov	x3, x22
    6314:	ldp	x20, x19, [sp, #48]
    6318:	ldp	x22, x21, [sp, #32]
    631c:	ldp	x24, x23, [sp, #16]
    6320:	ldp	x30, x25, [sp], #64
    6324:	b	51c0 <__sancov_default_options@plt+0x840>
    6328:	mov	w8, #0xdc0                 	// #3520
    632c:	mov	w9, #0x1008                	// #4104
    6330:	movk	w8, #0x8, lsl #16
    6334:	movk	w9, #0xc, lsl #16
    6338:	add	x0, x20, x8
    633c:	add	x1, x20, x9
    6340:	mov	x2, x19
    6344:	bl	652c <__sancov_default_options@plt+0x1bac>
    6348:	b	63c0 <__sancov_default_options@plt+0x1a40>
    634c:	lsr	x8, x19, #48
    6350:	cbnz	x8, 6384 <__sancov_default_options@plt+0x1a04>
    6354:	lsr	x8, x19, #32
    6358:	ldr	x10, [x20, x8, lsl #3]
    635c:	dmb	ish
    6360:	cbz	x10, 6384 <__sancov_default_options@plt+0x1a04>
    6364:	ubfx	x9, x19, #20, #12
    6368:	ldrb	w10, [x10, x9]
    636c:	cbz	w10, 6384 <__sancov_default_options@plt+0x1a04>
    6370:	ldr	x8, [x20, x8, lsl #3]
    6374:	dmb	ish
    6378:	cbz	x8, 63d8 <__sancov_default_options@plt+0x1a58>
    637c:	ldrb	w2, [x8, x9]
    6380:	b	63dc <__sancov_default_options@plt+0x1a5c>
    6384:	mov	w8, #0xdc0                 	// #3520
    6388:	mov	w9, #0x1008                	// #4104
    638c:	movk	w8, #0x8, lsl #16
    6390:	movk	w9, #0xc, lsl #16
    6394:	add	x0, x20, x8
    6398:	add	x1, x20, x9
    639c:	mov	x2, x19
    63a0:	bl	652c <__sancov_default_options@plt+0x1bac>
    63a4:	mov	x22, xzr
    63a8:	b	63c0 <__sancov_default_options@plt+0x1a40>
    63ac:	mov	x2, xzr
    63b0:	mov	x0, x21
    63b4:	mov	x1, x20
    63b8:	mov	x3, x19
    63bc:	bl	5dfc <__sancov_default_options@plt+0x147c>
    63c0:	mov	x0, x22
    63c4:	ldp	x20, x19, [sp, #48]
    63c8:	ldp	x22, x21, [sp, #32]
    63cc:	ldp	x24, x23, [sp, #16]
    63d0:	ldp	x30, x25, [sp], #64
    63d4:	ret
    63d8:	mov	x2, xzr
    63dc:	mov	x0, x21
    63e0:	mov	x1, x20
    63e4:	mov	x3, x19
    63e8:	bl	5dfc <__sancov_default_options@plt+0x147c>
    63ec:	b	63a4 <__sancov_default_options@plt+0x1a24>
    63f0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    63f4:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    63f8:	add	x0, x0, #0xab2
    63fc:	add	x2, x2, #0x39
    6400:	mov	w1, #0x69                  	// #105
    6404:	mov	x3, xzr
    6408:	mov	x4, xzr
    640c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6410:	str	x30, [sp, #-16]!
    6414:	lsr	x8, x1, #48
    6418:	cbnz	x8, 6470 <__sancov_default_options@plt+0x1af0>
    641c:	lsr	x8, x1, #32
    6420:	ldr	x10, [x0, x8, lsl #3]
    6424:	dmb	ish
    6428:	cbz	x10, 6470 <__sancov_default_options@plt+0x1af0>
    642c:	ubfx	x9, x1, #20, #12
    6430:	ldrb	w10, [x10, x9]
    6434:	cbz	w10, 6470 <__sancov_default_options@plt+0x1af0>
    6438:	ldr	x10, [x0, x8, lsl #3]
    643c:	dmb	ish
    6440:	cbz	x10, 650c <__sancov_default_options@plt+0x1b8c>
    6444:	ldrb	w10, [x10, x9]
    6448:	cbz	w10, 650c <__sancov_default_options@plt+0x1b8c>
    644c:	ldr	x8, [x0, x8, lsl #3]
    6450:	dmb	ish
    6454:	cbz	x8, 64b4 <__sancov_default_options@plt+0x1b34>
    6458:	ldrb	w8, [x8, x9]
    645c:	cmp	x8, #0x35
    6460:	b.ne	64ac <__sancov_default_options@plt+0x1b2c>  // b.any
    6464:	mov	w0, #0x200                 	// #512
    6468:	ldr	x30, [sp], #16
    646c:	ret
    6470:	mov	w8, #0xdc0                 	// #3520
    6474:	movk	w8, #0x8, lsl #16
    6478:	ldr	x8, [x0, x8]
    647c:	sub	x9, x8, #0x1
    6480:	tst	x9, x1
    6484:	b.ne	64e4 <__sancov_default_options@plt+0x1b64>  // b.any
    6488:	tst	x8, x9
    648c:	b.ne	64fc <__sancov_default_options@plt+0x1b7c>  // b.any
    6490:	sub	x10, x1, x8
    6494:	ldr	x10, [x10, #16]
    6498:	neg	x8, x8
    649c:	add	x9, x10, x9
    64a0:	and	x0, x9, x8
    64a4:	ldr	x30, [sp], #16
    64a8:	ret
    64ac:	cmp	w8, #0x10
    64b0:	b.hi	64c0 <__sancov_default_options@plt+0x1b40>  // b.pmore
    64b4:	lsl	x0, x8, #4
    64b8:	ldr	x30, [sp], #16
    64bc:	ret
    64c0:	sub	x8, x8, #0x10
    64c4:	mov	w9, #0x100                 	// #256
    64c8:	lsr	x10, x8, #2
    64cc:	lsl	x9, x9, x10
    64d0:	lsr	x10, x9, #2
    64d4:	and	x8, x8, #0x3
    64d8:	madd	x0, x10, x8, x9
    64dc:	ldr	x30, [sp], #16
    64e0:	ret
    64e4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    64e8:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    64ec:	add	x0, x0, #0xe3c
    64f0:	add	x2, x2, #0xfac
    64f4:	mov	w1, #0x12d                 	// #301
    64f8:	b	6520 <__sancov_default_options@plt+0x1ba0>
    64fc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    6500:	add	x0, x0, #0x121
    6504:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    6508:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    650c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6510:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6514:	add	x0, x0, #0xc59
    6518:	add	x2, x2, #0x39
    651c:	mov	w1, #0xd7                  	// #215
    6520:	mov	x3, xzr
    6524:	mov	x4, xzr
    6528:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    652c:	str	x30, [sp, #-48]!
    6530:	stp	x22, x21, [sp, #16]
    6534:	stp	x20, x19, [sp, #32]
    6538:	ldr	x8, [x0]
    653c:	sub	x9, x8, #0x1
    6540:	tst	x9, x2
    6544:	b.ne	660c <__sancov_default_options@plt+0x1c8c>  // b.any
    6548:	mov	w9, #0x10                  	// #16
    654c:	movk	w9, #0x4, lsl #16
    6550:	add	x22, x0, x9
    6554:	mov	x21, x0
    6558:	mov	x20, x1
    655c:	sub	x19, x2, x8
    6560:	add	x0, x22, #0x230
    6564:	mov	w8, #0x1                   	// #1
    6568:	ldaxrb	w9, [x0]
    656c:	stlxrb	w10, w8, [x0]
    6570:	cbnz	w10, 6568 <__sancov_default_options@plt+0x1be8>
    6574:	cbz	w9, 657c <__sancov_default_options@plt+0x1bfc>
    6578:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    657c:	ldr	x3, [x19, #24]
    6580:	ldr	x9, [x21, #8]
    6584:	ldr	x8, [x9, x3, lsl #3]
    6588:	cmp	x8, x19
    658c:	b.ne	662c <__sancov_default_options@plt+0x1cac>  // b.any
    6590:	ldr	x4, [x22]
    6594:	cmp	x3, x4
    6598:	b.cs	664c <__sancov_default_options@plt+0x1ccc>  // b.hs, b.nlast
    659c:	sub	x8, x4, #0x1
    65a0:	str	x8, [x22]
    65a4:	ldr	x8, [x9, x8, lsl #3]
    65a8:	lsl	x10, x3, #3
    65ac:	str	x8, [x9, x10]
    65b0:	ldr	x8, [x21, #8]
    65b4:	ldr	x8, [x8, x10]
    65b8:	str	x3, [x8, #24]
    65bc:	ldp	x8, x9, [x22, #24]
    65c0:	strb	wzr, [x22, #8]
    65c4:	add	x8, x8, #0x1
    65c8:	str	x8, [x22, #24]
    65cc:	ldr	x8, [x19, #8]
    65d0:	sub	x9, x9, x8
    65d4:	str	x9, [x22, #32]
    65d8:	ldr	x9, [x20, #16]
    65dc:	sub	x9, x9, x8
    65e0:	str	x9, [x20, #16]
    65e4:	ldr	x9, [x20, #24]
    65e8:	sub	x8, x9, x8
    65ec:	str	x8, [x20, #24]
    65f0:	dmb	ish
    65f4:	strb	wzr, [x22, #560]
    65f8:	ldp	x0, x1, [x19]
    65fc:	ldp	x20, x19, [sp, #32]
    6600:	ldp	x22, x21, [sp, #16]
    6604:	ldr	x30, [sp], #48
    6608:	b	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    660c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6610:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6614:	add	x0, x0, #0xe3c
    6618:	add	x2, x2, #0xfac
    661c:	mov	w1, #0x12d                 	// #301
    6620:	mov	x3, xzr
    6624:	mov	x4, xzr
    6628:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    662c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6630:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6634:	add	x0, x0, #0xe3c
    6638:	add	x2, x2, #0x55
    663c:	mov	w1, #0x8b                  	// #139
    6640:	mov	x3, x8
    6644:	mov	x4, x19
    6648:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    664c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6650:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6654:	add	x0, x0, #0xe3c
    6658:	add	x2, x2, #0x6f
    665c:	mov	w1, #0x8c                  	// #140
    6660:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6664:	str	x30, [sp, #-48]!
    6668:	stp	x22, x21, [sp, #16]
    666c:	stp	x20, x19, [sp, #32]
    6670:	mov	w8, #0x10                  	// #16
    6674:	mov	w9, #0x240                 	// #576
    6678:	movk	w8, #0x4, lsl #16
    667c:	movk	w9, #0x4, lsl #16
    6680:	mov	x20, x1
    6684:	mov	x21, x0
    6688:	add	x22, x0, x8
    668c:	add	x19, x0, x9
    6690:	mov	w8, #0x1                   	// #1
    6694:	ldaxrb	w9, [x19]
    6698:	stlxrb	w10, w8, [x19]
    669c:	cbnz	w10, 6694 <__sancov_default_options@plt+0x1d14>
    66a0:	cbz	w9, 66ac <__sancov_default_options@plt+0x1d2c>
    66a4:	mov	x0, x19
    66a8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    66ac:	ldr	x8, [x22]
    66b0:	cbz	x8, 6730 <__sancov_default_options@plt+0x1db0>
    66b4:	ldr	x9, [x21, #8]
    66b8:	mov	x3, xzr
    66bc:	mov	x10, xzr
    66c0:	ldr	x11, [x9, x10, lsl #3]
    66c4:	sub	x12, x20, x3
    66c8:	add	x10, x10, #0x1
    66cc:	subs	x13, x20, x11
    66d0:	cmp	x13, x12
    66d4:	csel	x12, x11, x3, cc  // cc = lo, ul, last
    66d8:	cmp	x20, x11
    66dc:	csel	x3, x3, x12, cc  // cc = lo, ul, last
    66e0:	cmp	x10, x8
    66e4:	b.cc	66c0 <__sancov_default_options@plt+0x1d40>  // b.lo, b.ul, b.last
    66e8:	cbz	x3, 6730 <__sancov_default_options@plt+0x1db0>
    66ec:	ldr	x4, [x3]
    66f0:	cmp	x3, x4
    66f4:	b.cc	674c <__sancov_default_options@plt+0x1dcc>  // b.lo, b.ul, b.last
    66f8:	ldr	x8, [x3, #8]
    66fc:	add	x4, x8, x4
    6700:	cmp	x3, x4
    6704:	b.cs	6764 <__sancov_default_options@plt+0x1de4>  // b.hs, b.nlast
    6708:	cmp	x3, x20
    670c:	b.hi	677c <__sancov_default_options@plt+0x1dfc>  // b.pmore
    6710:	cmp	x4, x20
    6714:	b.ls	6730 <__sancov_default_options@plt+0x1db0>  // b.plast
    6718:	ldr	x8, [x21]
    671c:	sub	x9, x8, #0x1
    6720:	tst	x9, x3
    6724:	b.ne	6798 <__sancov_default_options@plt+0x1e18>  // b.any
    6728:	add	x0, x8, x3
    672c:	b	6734 <__sancov_default_options@plt+0x1db4>
    6730:	mov	x0, xzr
    6734:	dmb	ish
    6738:	strb	wzr, [x19]
    673c:	ldp	x20, x19, [sp, #32]
    6740:	ldp	x22, x21, [sp, #16]
    6744:	ldr	x30, [sp], #48
    6748:	ret
    674c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6750:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6754:	add	x0, x0, #0xe3c
    6758:	add	x2, x2, #0x87
    675c:	mov	w1, #0xc7                  	// #199
    6760:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6764:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6768:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    676c:	add	x0, x0, #0xe3c
    6770:	add	x2, x2, #0xab
    6774:	mov	w1, #0xc8                  	// #200
    6778:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    677c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    6780:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6784:	add	x0, x0, #0xe3c
    6788:	add	x2, x2, #0xdc
    678c:	mov	w1, #0xc9                  	// #201
    6790:	mov	x4, x20
    6794:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6798:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    679c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    67a0:	add	x0, x0, #0xe3c
    67a4:	add	x2, x2, #0xf7
    67a8:	mov	w1, #0x135                 	// #309
    67ac:	mov	x3, xzr
    67b0:	mov	x4, xzr
    67b4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    67b8:	stp	x30, x21, [sp, #-32]!
    67bc:	stp	x20, x19, [sp, #16]
    67c0:	mov	x19, x0
    67c4:	mov	w20, wzr
    67c8:	mov	w21, #0x1                   	// #1
    67cc:	b	67d4 <__sancov_default_options@plt+0x1e54>
    67d0:	add	w20, w20, #0x1
    67d4:	cmp	w20, #0x9
    67d8:	b.hi	67e8 <__sancov_default_options@plt+0x1e68>  // b.pmore
    67dc:	ldrb	w8, [x19]
    67e0:	cbnz	w8, 67d0 <__sancov_default_options@plt+0x1e50>
    67e4:	b	67f4 <__sancov_default_options@plt+0x1e74>
    67e8:	bl	d0b8 <__sanitizer_set_report_fd@@Base+0x3804>
    67ec:	ldrb	w8, [x19]
    67f0:	cbnz	w8, 67d0 <__sancov_default_options@plt+0x1e50>
    67f4:	ldaxrb	w8, [x19]
    67f8:	stlxrb	w9, w21, [x19]
    67fc:	cbnz	w9, 67f4 <__sancov_default_options@plt+0x1e74>
    6800:	cbnz	w8, 67d0 <__sancov_default_options@plt+0x1e50>
    6804:	ldp	x20, x19, [sp, #16]
    6808:	ldp	x30, x21, [sp], #32
    680c:	ret
    6810:	str	x30, [sp, #-16]!
    6814:	adrp	x8, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6818:	ldrb	w9, [x8, #1320]
    681c:	tbnz	w9, #0, 6874 <__sancov_default_options@plt+0x1ef4>
    6820:	tbnz	w4, #0, 6874 <__sancov_default_options@plt+0x1ef4>
    6824:	adrp	x9, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    6828:	mov	x5, x1
    682c:	ldr	x1, [x9, #504]
    6830:	mov	w6, w3
    6834:	mov	x3, x0
    6838:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    683c:	mov	w9, #0x1                   	// #1
    6840:	add	x0, x0, #0x175
    6844:	mov	x4, x3
    6848:	strb	w9, [x8, #1320]
    684c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    6850:	bl	f380 <__sanitizer_set_report_fd@@Base+0x5acc>
    6854:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    6858:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    685c:	add	x0, x0, #0x1b6
    6860:	add	x2, x2, #0x209
    6864:	mov	w1, #0x36                  	// #54
    6868:	mov	x3, xzr
    686c:	mov	x4, xzr
    6870:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6874:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    6878:	add	x0, x0, #0x15e
    687c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    6880:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    6884:	stp	x30, x21, [sp, #-32]!
    6888:	stp	x20, x19, [sp, #16]
    688c:	mov	x19, x0
    6890:	cbz	x0, 68e4 <__sancov_default_options@plt+0x1f64>
    6894:	mov	x20, x1
    6898:	cbz	x1, 68e4 <__sancov_default_options@plt+0x1f64>
    689c:	mov	x0, x19
    68a0:	mov	x1, x20
    68a4:	bl	c704 <__sanitizer_set_report_fd@@Base+0x2e50>
    68a8:	cbz	x0, 68bc <__sancov_default_options@plt+0x1f3c>
    68ac:	mov	x21, x0
    68b0:	mov	x0, x20
    68b4:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    68b8:	add	x19, x21, x0
    68bc:	ldrb	w8, [x19]
    68c0:	cmp	w8, #0x2e
    68c4:	b.ne	68e4 <__sancov_default_options@plt+0x1f64>  // b.any
    68c8:	ldrb	w8, [x19, #1]
    68cc:	add	x9, x19, #0x2
    68d0:	cmp	w8, #0x2f
    68d4:	csel	x0, x9, x19, eq  // eq = none
    68d8:	ldp	x20, x19, [sp, #16]
    68dc:	ldp	x30, x21, [sp], #32
    68e0:	ret
    68e4:	mov	x0, x19
    68e8:	ldp	x20, x19, [sp, #16]
    68ec:	ldp	x30, x21, [sp], #32
    68f0:	ret
    68f4:	cbz	x0, 6914 <__sancov_default_options@plt+0x1f94>
    68f8:	stp	x30, x19, [sp, #-16]!
    68fc:	mov	w1, #0x2f                  	// #47
    6900:	mov	x19, x0
    6904:	bl	c230 <__sanitizer_set_report_fd@@Base+0x297c>
    6908:	cmp	x0, #0x0
    690c:	csinc	x0, x19, x0, eq  // eq = none
    6910:	ldp	x30, x19, [sp], #16
    6914:	ret
    6918:	sub	sp, sp, #0x40
    691c:	str	x30, [sp, #32]
    6920:	stp	x20, x19, [sp, #48]
    6924:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    6928:	ldr	x8, [x8, #4056]
    692c:	ldrb	w8, [x8, #60]
    6930:	cbz	w8, 69d8 <__sancov_default_options@plt+0x2058>
    6934:	mov	x20, x1
    6938:	mov	x19, x0
    693c:	mov	x0, sp
    6940:	mov	w1, #0x400                 	// #1024
    6944:	stp	xzr, xzr, [sp, #8]
    6948:	str	xzr, [sp]
    694c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    6950:	ldr	x8, [sp, #16]
    6954:	cmp	x8, #0x3ff
    6958:	b.hi	6990 <__sancov_default_options@plt+0x2010>  // b.pmore
    695c:	ldr	x9, [sp, #8]
    6960:	cmp	x9, #0x3ff
    6964:	b.hi	6978 <__sancov_default_options@plt+0x1ff8>  // b.pmore
    6968:	mov	x0, sp
    696c:	mov	w1, #0x400                 	// #1024
    6970:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    6974:	ldr	x8, [sp, #16]
    6978:	ldr	x9, [sp]
    697c:	mov	w10, #0x400                 	// #1024
    6980:	sub	x2, x10, x8
    6984:	mov	w1, wzr
    6988:	add	x0, x9, x8
    698c:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    6990:	adrp	x8, 23000 <__interceptor_sigaction@@Base+0xa44>
    6994:	ldr	q0, [x8, #320]
    6998:	ldr	x8, [sp]
    699c:	cmp	x20, #0x0
    69a0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    69a4:	str	q0, [sp, #16]
    69a8:	strb	wzr, [x8]
    69ac:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    69b0:	ldr	x8, [x8, #504]
    69b4:	add	x1, x1, #0x22a
    69b8:	mov	x0, sp
    69bc:	mov	x3, x19
    69c0:	csel	x2, x8, x20, eq  // eq = none
    69c4:	bl	10088 <__sanitizer_on_print@@Base+0x188>
    69c8:	ldr	x0, [sp]
    69cc:	bl	45f0 <__sanitizer_report_error_summary@plt>
    69d0:	ldp	x0, x1, [sp]
    69d4:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    69d8:	ldp	x20, x19, [sp, #48]
    69dc:	ldr	x30, [sp, #32]
    69e0:	add	sp, sp, #0x40
    69e4:	ret

00000000000069e8 <__sanitizer_report_error_summary@@Base>:
    69e8:	adrp	x8, 26000 <__interceptor_sigaction@@Base+0x3a44>
    69ec:	add	x8, x8, #0x6b3
    69f0:	mov	x1, x0
    69f4:	mov	x0, x8
    69f8:	b	ff04 <__sanitizer_on_print@@Base+0x4>
    69fc:	stp	x30, x19, [sp, #-16]!
    6a00:	cbz	x0, 6a7c <__sanitizer_report_error_summary@@Base+0x94>
    6a04:	ldrb	w8, [x0]
    6a08:	mov	x3, x0
    6a0c:	cbz	w8, 6a74 <__sanitizer_report_error_summary@@Base+0x8c>
    6a10:	mov	x19, x3
    6a14:	cmp	x3, x19
    6a18:	b.cc	6a84 <__sanitizer_report_error_summary@@Base+0x9c>  // b.lo, b.ul, b.last
    6a1c:	and	w9, w8, #0xff
    6a20:	cmp	w9, #0x1b
    6a24:	b.ne	6a58 <__sanitizer_report_error_summary@@Base+0x70>  // b.any
    6a28:	ldrb	w9, [x3, #1]
    6a2c:	cmp	w9, #0x5b
    6a30:	b.ne	6a58 <__sanitizer_report_error_summary@@Base+0x70>  // b.any
    6a34:	mov	w1, #0x6d                  	// #109
    6a38:	mov	x0, x3
    6a3c:	bl	c1d8 <__sanitizer_set_report_fd@@Base+0x2924>
    6a40:	mov	x3, x0
    6a44:	ldrb	w8, [x3], #1
    6a48:	cbz	w8, 6a78 <__sanitizer_report_error_summary@@Base+0x90>
    6a4c:	ldrb	w8, [x3]
    6a50:	cbnz	w8, 6a14 <__sanitizer_report_error_summary@@Base+0x2c>
    6a54:	b	6a78 <__sanitizer_report_error_summary@@Base+0x90>
    6a58:	cmp	x3, x19
    6a5c:	b.eq	6a64 <__sanitizer_report_error_summary@@Base+0x7c>  // b.none
    6a60:	strb	w8, [x19]
    6a64:	ldrb	w8, [x3, #1]!
    6a68:	add	x19, x19, #0x1
    6a6c:	cbnz	w8, 6a14 <__sanitizer_report_error_summary@@Base+0x2c>
    6a70:	b	6a78 <__sanitizer_report_error_summary@@Base+0x90>
    6a74:	mov	x19, x3
    6a78:	strb	wzr, [x19]
    6a7c:	ldp	x30, x19, [sp], #16
    6a80:	ret
    6a84:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    6a88:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    6a8c:	add	x0, x0, #0x1b6
    6a90:	add	x2, x2, #0x23a
    6a94:	mov	w1, #0x69                  	// #105
    6a98:	mov	x4, x19
    6a9c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    6aa0:	stp	x30, x21, [sp, #-32]!
    6aa4:	stp	x20, x19, [sp, #16]
    6aa8:	mov	x20, x0
    6aac:	ldr	x0, [x0]
    6ab0:	mov	x21, x1
    6ab4:	mov	x1, xzr
    6ab8:	mov	x19, x2
    6abc:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6ac0:	add	x0, x20, #0x1c
    6ac4:	mov	w2, #0x10                  	// #16
    6ac8:	mov	w1, wzr
    6acc:	stp	xzr, xzr, [x20, #8]
    6ad0:	str	xzr, [x20]
    6ad4:	str	wzr, [x20, #24]
    6ad8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    6adc:	ldr	x8, [x20, #48]
    6ae0:	strb	wzr, [x20, #44]
    6ae4:	cbnz	x8, 6b18 <__sanitizer_report_error_summary@@Base+0x130>
    6ae8:	mov	x0, x21
    6aec:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    6af0:	stp	x0, x19, [x20]
    6af4:	ldp	x20, x19, [sp, #16]
    6af8:	ldp	x30, x21, [sp], #32
    6afc:	ret
    6b00:	sub	x8, x8, #0x1
    6b04:	mov	x1, xzr
    6b08:	str	x8, [x20, #48]
    6b0c:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6b10:	ldr	x8, [x20, #48]
    6b14:	cbz	x8, 6ae8 <__sanitizer_report_error_summary@@Base+0x100>
    6b18:	ldr	x0, [x20, #56]
    6b1c:	ldr	x9, [x0]
    6b20:	str	x9, [x20, #56]
    6b24:	cbnz	x9, 6b00 <__sanitizer_report_error_summary@@Base+0x118>
    6b28:	str	xzr, [x20, #64]
    6b2c:	b	6b00 <__sanitizer_report_error_summary@@Base+0x118>
    6b30:	stp	x30, x19, [sp, #-16]!
    6b34:	mov	x19, x0
    6b38:	ldr	x0, [x0]
    6b3c:	mov	x1, xzr
    6b40:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6b44:	add	x0, x19, #0x1c
    6b48:	mov	w2, #0x10                  	// #16
    6b4c:	mov	w1, wzr
    6b50:	stp	xzr, xzr, [x19, #8]
    6b54:	str	xzr, [x19]
    6b58:	str	wzr, [x19, #24]
    6b5c:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    6b60:	ldr	x8, [x19, #48]
    6b64:	strb	wzr, [x19, #44]
    6b68:	cbnz	x8, 6b8c <__sanitizer_report_error_summary@@Base+0x1a4>
    6b6c:	ldp	x30, x19, [sp], #16
    6b70:	ret
    6b74:	sub	x8, x8, #0x1
    6b78:	mov	x1, xzr
    6b7c:	str	x8, [x19, #48]
    6b80:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6b84:	ldr	x8, [x19, #48]
    6b88:	cbz	x8, 6b6c <__sanitizer_report_error_summary@@Base+0x184>
    6b8c:	ldr	x0, [x19, #56]
    6b90:	ldr	x9, [x0]
    6b94:	str	x9, [x19, #56]
    6b98:	cbnz	x9, 6b74 <__sanitizer_report_error_summary@@Base+0x18c>
    6b9c:	str	xzr, [x19, #64]
    6ba0:	b	6b74 <__sanitizer_report_error_summary@@Base+0x18c>
    6ba4:	stp	x30, x25, [sp, #-64]!
    6ba8:	stp	x24, x23, [sp, #16]
    6bac:	stp	x22, x21, [sp, #32]
    6bb0:	stp	x20, x19, [sp, #48]
    6bb4:	mov	x20, x0
    6bb8:	ldr	x0, [x0]
    6bbc:	mov	x23, x1
    6bc0:	mov	x1, xzr
    6bc4:	mov	x19, x4
    6bc8:	mov	w21, w3
    6bcc:	mov	x22, x2
    6bd0:	and	w25, w5, #0x1
    6bd4:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6bd8:	add	x24, x20, #0x1c
    6bdc:	mov	w2, #0x10                  	// #16
    6be0:	mov	x0, x24
    6be4:	mov	w1, wzr
    6be8:	stp	xzr, xzr, [x20, #8]
    6bec:	str	xzr, [x20]
    6bf0:	str	wzr, [x20, #24]
    6bf4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    6bf8:	ldr	x8, [x20, #48]
    6bfc:	strb	wzr, [x20, #44]
    6c00:	cbnz	x8, 6c54 <__sanitizer_report_error_summary@@Base+0x26c>
    6c04:	mov	x0, x23
    6c08:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    6c0c:	stp	x0, x22, [x20]
    6c10:	mov	w2, #0x10                  	// #16
    6c14:	mov	x0, x24
    6c18:	mov	x1, x19
    6c1c:	str	w21, [x20, #24]
    6c20:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    6c24:	strb	w25, [x20, #44]
    6c28:	ldp	x20, x19, [sp, #48]
    6c2c:	ldp	x22, x21, [sp, #32]
    6c30:	ldp	x24, x23, [sp, #16]
    6c34:	ldp	x30, x25, [sp], #64
    6c38:	ret
    6c3c:	sub	x8, x8, #0x1
    6c40:	mov	x1, xzr
    6c44:	str	x8, [x20, #48]
    6c48:	bl	4e74 <__sancov_default_options@plt+0x4f4>
    6c4c:	ldr	x8, [x20, #48]
    6c50:	cbz	x8, 6c04 <__sanitizer_report_error_summary@@Base+0x21c>
    6c54:	ldr	x0, [x20, #56]
    6c58:	ldr	x9, [x0]
    6c5c:	str	x9, [x20, #56]
    6c60:	cbnz	x9, 6c3c <__sanitizer_report_error_summary@@Base+0x254>
    6c64:	str	xzr, [x20, #64]
    6c68:	b	6c3c <__sanitizer_report_error_summary@@Base+0x254>
    6c6c:	stp	x30, x25, [sp, #-64]!
    6c70:	stp	x24, x23, [sp, #16]
    6c74:	stp	x22, x21, [sp, #32]
    6c78:	stp	x20, x19, [sp, #48]
    6c7c:	mov	x19, x2
    6c80:	mov	x25, x1
    6c84:	mov	x20, x0
    6c88:	mov	w0, #0x30                  	// #48
    6c8c:	mov	x1, xzr
    6c90:	mov	x2, xzr
    6c94:	mov	x23, x5
    6c98:	mov	w24, w4
    6c9c:	mov	w21, w3
    6ca0:	bl	4b90 <__sancov_default_options@plt+0x210>
    6ca4:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
    6ca8:	add	x10, x10, #0x562
    6cac:	cmp	x23, #0x0
    6cb0:	mov	x22, x0
    6cb4:	and	w8, w21, #0x1
    6cb8:	and	w9, w24, #0x1
    6cbc:	stp	xzr, x25, [x0]
    6cc0:	str	x19, [x0, #16]
    6cc4:	add	x0, x0, #0x1a
    6cc8:	csel	x1, x10, x23, eq  // eq = none
    6ccc:	mov	w2, #0x10                  	// #16
    6cd0:	strb	w8, [x22, #24]
    6cd4:	strb	w9, [x22, #25]
    6cd8:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
    6cdc:	ldr	x8, [x20, #48]
    6ce0:	str	xzr, [x22]
    6ce4:	cbz	x8, 6d04 <__sanitizer_report_error_summary@@Base+0x31c>
    6ce8:	ldr	x9, [x20, #64]
    6cec:	add	x8, x8, #0x1
    6cf0:	str	x22, [x9]
    6cf4:	str	x22, [x20, #64]
    6cf8:	str	x8, [x20, #48]
    6cfc:	tbnz	w21, #0, 6d14 <__sanitizer_report_error_summary@@Base+0x32c>
    6d00:	b	6d24 <__sanitizer_report_error_summary@@Base+0x33c>
    6d04:	stp	x22, x22, [x20, #56]
    6d08:	mov	w8, #0x1                   	// #1
    6d0c:	str	x8, [x20, #48]
    6d10:	tbz	w21, #0, 6d24 <__sanitizer_report_error_summary@@Base+0x33c>
    6d14:	ldr	x8, [x20, #16]
    6d18:	cmp	x8, x19
    6d1c:	b.cs	6d24 <__sanitizer_report_error_summary@@Base+0x33c>  // b.hs, b.nlast
    6d20:	str	x19, [x20, #16]
    6d24:	ldp	x20, x19, [sp, #48]
    6d28:	ldp	x22, x21, [sp, #32]
    6d2c:	ldp	x24, x23, [sp, #16]
    6d30:	ldp	x30, x25, [sp], #64
    6d34:	ret
    6d38:	ldr	x8, [x0, #56]
    6d3c:	cbnz	x8, 6d50 <__sanitizer_report_error_summary@@Base+0x368>
    6d40:	mov	w0, wzr
    6d44:	ret
    6d48:	ldr	x8, [x8]
    6d4c:	cbz	x8, 6d40 <__sanitizer_report_error_summary@@Base+0x358>
    6d50:	ldr	x9, [x8, #8]
    6d54:	cmp	x9, x1
    6d58:	b.hi	6d48 <__sanitizer_report_error_summary@@Base+0x360>  // b.pmore
    6d5c:	ldr	x9, [x8, #16]
    6d60:	cmp	x9, x1
    6d64:	b.ls	6d48 <__sanitizer_report_error_summary@@Base+0x360>  // b.plast
    6d68:	mov	w0, #0x1                   	// #1
    6d6c:	ret
    6d70:	str	x30, [sp, #-16]!
    6d74:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    6d78:	ldr	x8, [x8, #4056]
    6d7c:	ldr	x9, [x8, #128]
    6d80:	cbz	x9, 6da8 <__sanitizer_report_error_summary@@Base+0x3c0>
    6d84:	adrp	x9, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6d88:	add	x9, x9, #0x530
    6d8c:	ldaxr	x10, [x9]
    6d90:	add	x10, x10, x0
    6d94:	stlxr	w11, x10, [x9]
    6d98:	cbnz	w11, 6d8c <__sanitizer_report_error_summary@@Base+0x3a4>
    6d9c:	ldr	x8, [x8, #128]
    6da0:	cmp	x8, x10, lsr #20
    6da4:	b.ls	6db0 <__sanitizer_report_error_summary@@Base+0x3c8>  // b.plast
    6da8:	ldr	x30, [sp], #16
    6dac:	ret
    6db0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    6db4:	add	x0, x0, #0x249
    6db8:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    6dbc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    6dc0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    6dc4:	ldr	x8, [x8, #4056]
    6dc8:	ldr	x8, [x8, #128]
    6dcc:	cbz	x8, 6dec <__sanitizer_report_error_summary@@Base+0x404>
    6dd0:	adrp	x9, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6dd4:	neg	x8, x0
    6dd8:	add	x9, x9, #0x530
    6ddc:	ldaxr	x10, [x9]
    6de0:	add	x10, x10, x8
    6de4:	stlxr	w11, x10, [x9]
    6de8:	cbnz	w11, 6ddc <__sanitizer_report_error_summary@@Base+0x3f4>
    6dec:	ret
    6df0:	stp	x30, x27, [sp, #-80]!
    6df4:	stp	x26, x25, [sp, #16]
    6df8:	stp	x24, x23, [sp, #32]
    6dfc:	stp	x22, x21, [sp, #48]
    6e00:	stp	x20, x19, [sp, #64]
    6e04:	cbz	x1, 6f20 <__sanitizer_report_error_summary@@Base+0x538>
    6e08:	ldrb	w8, [x1]
    6e0c:	mov	x19, x1
    6e10:	cbz	w8, 6f2c <__sanitizer_report_error_summary@@Base+0x544>
    6e14:	cbz	x0, 6e30 <__sanitizer_report_error_summary@@Base+0x448>
    6e18:	mov	x9, x0
    6e1c:	ldrb	w8, [x9], #1
    6e20:	cmp	w8, #0x5e
    6e24:	cset	w8, eq  // eq = none
    6e28:	csel	x26, x9, x0, eq  // eq = none
    6e2c:	b	6e38 <__sanitizer_report_error_summary@@Base+0x450>
    6e30:	mov	w8, wzr
    6e34:	mov	x26, xzr
    6e38:	mov	w23, #0x2a                  	// #42
    6e3c:	mov	w24, #0x24                  	// #36
    6e40:	cbz	x26, 6f28 <__sanitizer_report_error_summary@@Base+0x540>
    6e44:	mov	w9, wzr
    6e48:	mov	x20, x26
    6e4c:	mov	w25, w8
    6e50:	ldrb	w8, [x20]
    6e54:	cmp	w8, #0x2a
    6e58:	b.ne	6e70 <__sanitizer_report_error_summary@@Base+0x488>  // b.any
    6e5c:	mov	w25, wzr
    6e60:	mov	w9, #0x1                   	// #1
    6e64:	ldrb	w8, [x20, #1]!
    6e68:	cmp	w8, #0x2a
    6e6c:	b.eq	6e5c <__sanitizer_report_error_summary@@Base+0x474>  // b.none
    6e70:	cbz	w8, 6f28 <__sanitizer_report_error_summary@@Base+0x540>
    6e74:	ldrb	w10, [x19]
    6e78:	cmp	w8, #0x24
    6e7c:	b.eq	6f48 <__sanitizer_report_error_summary@@Base+0x560>  // b.none
    6e80:	cbz	w10, 6f20 <__sanitizer_report_error_summary@@Base+0x538>
    6e84:	mov	w1, #0x2a                  	// #42
    6e88:	mov	x0, x20
    6e8c:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
    6e90:	mov	x22, x0
    6e94:	mov	w1, #0x24                  	// #36
    6e98:	mov	x0, x20
    6e9c:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
    6ea0:	mov	x21, x0
    6ea4:	cbz	x22, 6eb8 <__sanitizer_report_error_summary@@Base+0x4d0>
    6ea8:	cmp	x21, x22
    6eac:	ccmp	x21, #0x0, #0x4, cc  // cc = lo, ul, last
    6eb0:	csel	x26, x21, x22, ne  // ne = any
    6eb4:	b	6ec0 <__sanitizer_report_error_summary@@Base+0x4d8>
    6eb8:	mov	x26, x21
    6ebc:	cbz	x21, 6f18 <__sanitizer_report_error_summary@@Base+0x530>
    6ec0:	strb	wzr, [x26]
    6ec4:	mov	w27, #0x1                   	// #1
    6ec8:	mov	x0, x19
    6ecc:	mov	x1, x20
    6ed0:	bl	c704 <__sanitizer_set_report_fd@@Base+0x2e50>
    6ed4:	mov	x22, x0
    6ed8:	mov	x0, x20
    6edc:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    6ee0:	cbz	w27, 6ef0 <__sanitizer_report_error_summary@@Base+0x508>
    6ee4:	cmp	x26, x21
    6ee8:	csel	w8, w24, w23, eq  // eq = none
    6eec:	strb	w8, [x26]
    6ef0:	mov	w8, wzr
    6ef4:	cbz	x22, 6f2c <__sanitizer_report_error_summary@@Base+0x544>
    6ef8:	add	x9, x22, x0
    6efc:	cmp	x22, x19
    6f00:	mov	x19, x9
    6f04:	b.eq	6e40 <__sanitizer_report_error_summary@@Base+0x458>  // b.none
    6f08:	eor	w10, w25, #0x1
    6f0c:	mov	x19, x9
    6f10:	tbnz	w10, #0, 6e40 <__sanitizer_report_error_summary@@Base+0x458>
    6f14:	b	6f2c <__sanitizer_report_error_summary@@Base+0x544>
    6f18:	mov	w27, wzr
    6f1c:	b	6ec8 <__sanitizer_report_error_summary@@Base+0x4e0>
    6f20:	mov	w8, wzr
    6f24:	b	6f2c <__sanitizer_report_error_summary@@Base+0x544>
    6f28:	mov	w8, #0x1                   	// #1
    6f2c:	ldp	x20, x19, [sp, #64]
    6f30:	ldp	x22, x21, [sp, #48]
    6f34:	ldp	x24, x23, [sp, #32]
    6f38:	ldp	x26, x25, [sp, #16]
    6f3c:	and	w0, w8, #0x1
    6f40:	ldp	x30, x27, [sp], #80
    6f44:	ret
    6f48:	cmp	w10, #0x0
    6f4c:	cset	w8, eq  // eq = none
    6f50:	orr	w8, w9, w8
    6f54:	b	6f2c <__sanitizer_report_error_summary@@Base+0x544>
    6f58:	adrp	x0, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6f5c:	add	x0, x0, #0x538
    6f60:	ret
    6f64:	stp	x30, x21, [sp, #-32]!
    6f68:	stp	x20, x19, [sp, #16]
    6f6c:	adrp	x19, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6f70:	add	x19, x19, #0x538
    6f74:	mov	w1, #0x1000                	// #4096
    6f78:	mov	x0, x19
    6f7c:	bl	de48 <__sanitizer_set_report_fd@@Base+0x4594>
    6f80:	mov	w1, #0x2f                  	// #47
    6f84:	mov	x0, x19
    6f88:	bl	c230 <__sanitizer_set_report_fd@@Base+0x297c>
    6f8c:	cmp	x0, #0x0
    6f90:	csinc	x20, x19, x0, eq  // eq = none
    6f94:	mov	x0, x20
    6f98:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    6f9c:	cmp	x20, x19
    6fa0:	b.eq	6fbc <__sanitizer_report_error_summary@@Base+0x5d4>  // b.none
    6fa4:	mov	x21, x0
    6fa8:	mov	x0, x19
    6fac:	mov	x1, x20
    6fb0:	mov	x2, x21
    6fb4:	bl	bec4 <__sanitizer_set_report_fd@@Base+0x2610>
    6fb8:	strb	wzr, [x19, x21]
    6fbc:	ldp	x20, x19, [sp, #16]
    6fc0:	ldp	x30, x21, [sp], #32
    6fc4:	ret
    6fc8:	stp	x30, x21, [sp, #-32]!
    6fcc:	stp	x20, x19, [sp, #16]
    6fd0:	adrp	x8, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    6fd4:	ldrb	w8, [x8, #1336]
    6fd8:	cbz	w8, 6fe8 <__sanitizer_report_error_summary@@Base+0x600>
    6fdc:	ldp	x20, x19, [sp, #16]
    6fe0:	ldp	x30, x21, [sp], #32
    6fe4:	ret
    6fe8:	adrp	x0, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    6fec:	add	x0, x0, #0x538
    6ff0:	mov	w1, #0x1000                	// #4096
    6ff4:	bl	ddac <__sanitizer_set_report_fd@@Base+0x44f8>
    6ff8:	adrp	x19, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    6ffc:	add	x19, x19, #0x538
    7000:	mov	w1, #0x1000                	// #4096
    7004:	mov	x0, x19
    7008:	bl	de48 <__sanitizer_set_report_fd@@Base+0x4594>
    700c:	mov	w1, #0x2f                  	// #47
    7010:	mov	x0, x19
    7014:	bl	c230 <__sanitizer_set_report_fd@@Base+0x297c>
    7018:	cmp	x0, #0x0
    701c:	csinc	x20, x19, x0, eq  // eq = none
    7020:	mov	x0, x20
    7024:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    7028:	cmp	x20, x19
    702c:	b.eq	6fdc <__sanitizer_report_error_summary@@Base+0x5f4>  // b.none
    7030:	mov	x21, x0
    7034:	mov	x0, x19
    7038:	mov	x1, x20
    703c:	mov	x2, x21
    7040:	bl	bec4 <__sanitizer_set_report_fd@@Base+0x2610>
    7044:	strb	wzr, [x19, x21]
    7048:	ldp	x20, x19, [sp, #16]
    704c:	ldp	x30, x21, [sp], #32
    7050:	ret
    7054:	stp	x30, x23, [sp, #-48]!
    7058:	stp	x22, x21, [sp, #16]
    705c:	stp	x20, x19, [sp, #32]
    7060:	adrp	x8, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    7064:	ldrb	w8, [x8, #1336]
    7068:	mov	x20, x1
    706c:	mov	x19, x0
    7070:	cbnz	w8, 70d4 <__sanitizer_report_error_summary@@Base+0x6ec>
    7074:	adrp	x0, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    7078:	add	x0, x0, #0x538
    707c:	mov	w1, #0x1000                	// #4096
    7080:	bl	ddac <__sanitizer_set_report_fd@@Base+0x44f8>
    7084:	adrp	x21, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    7088:	add	x21, x21, #0x538
    708c:	mov	w1, #0x1000                	// #4096
    7090:	mov	x0, x21
    7094:	bl	de48 <__sanitizer_set_report_fd@@Base+0x4594>
    7098:	mov	w1, #0x2f                  	// #47
    709c:	mov	x0, x21
    70a0:	bl	c230 <__sanitizer_set_report_fd@@Base+0x297c>
    70a4:	cmp	x0, #0x0
    70a8:	csinc	x22, x21, x0, eq  // eq = none
    70ac:	mov	x0, x22
    70b0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    70b4:	cmp	x22, x21
    70b8:	b.eq	70d4 <__sanitizer_report_error_summary@@Base+0x6ec>  // b.none
    70bc:	mov	x23, x0
    70c0:	mov	x0, x21
    70c4:	mov	x1, x22
    70c8:	mov	x2, x23
    70cc:	bl	bec4 <__sanitizer_set_report_fd@@Base+0x2610>
    70d0:	strb	wzr, [x21, x23]
    70d4:	adrp	x0, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    70d8:	add	x0, x0, #0x538
    70dc:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    70e0:	sub	x8, x20, #0x1
    70e4:	cmp	x0, x8
    70e8:	csel	x21, x0, x8, cc  // cc = lo, ul, last
    70ec:	cbz	x20, 710c <__sanitizer_report_error_summary@@Base+0x724>
    70f0:	adrp	x1, 114000 <__interceptor_sigaction@@Base+0xf1a44>
    70f4:	add	x1, x1, #0x538
    70f8:	mov	x0, x19
    70fc:	mov	x2, x21
    7100:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    7104:	strb	wzr, [x19, x21]
    7108:	b	7110 <__sanitizer_report_error_summary@@Base+0x728>
    710c:	mov	x21, xzr
    7110:	mov	x0, x21
    7114:	ldp	x20, x19, [sp, #32]
    7118:	ldp	x22, x21, [sp, #16]
    711c:	ldp	x30, x23, [sp], #48
    7120:	ret
    7124:	str	x30, [sp, #-32]!
    7128:	stp	x20, x19, [sp, #16]
    712c:	bl	d314 <__sanitizer_set_report_fd@@Base+0x3a60>
    7130:	cbz	x0, 717c <__sanitizer_report_error_summary@@Base+0x794>
    7134:	mov	x19, x0
    7138:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    713c:	add	x0, x0, #0x27e
    7140:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    7144:	ldr	x1, [x19]
    7148:	cbz	x1, 7168 <__sanitizer_report_error_summary@@Base+0x780>
    714c:	add	x20, x19, #0x8
    7150:	adrp	x19, 29000 <__interceptor_sigaction@@Base+0x6a44>
    7154:	add	x19, x19, #0x1d0
    7158:	mov	x0, x19
    715c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    7160:	ldr	x1, [x20], #8
    7164:	cbnz	x1, 7158 <__sanitizer_report_error_summary@@Base+0x770>
    7168:	ldp	x20, x19, [sp, #16]
    716c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
    7170:	add	x0, x0, #0x560
    7174:	ldr	x30, [sp], #32
    7178:	b	ff04 <__sanitizer_on_print@@Base+0x4>
    717c:	ldp	x20, x19, [sp, #16]
    7180:	ldr	x30, [sp], #32
    7184:	ret
    7188:	str	x30, [sp, #-32]!
    718c:	stp	x20, x19, [sp, #16]
    7190:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7194:	ldr	x8, [x8, #1336]
    7198:	cbz	x8, 7210 <__sanitizer_report_error_summary@@Base+0x828>
    719c:	mov	x19, x1
    71a0:	mov	x20, x0
    71a4:	blr	x8
    71a8:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    71ac:	ldr	x8, [x8, #1352]
    71b0:	cbz	x8, 7210 <__sanitizer_report_error_summary@@Base+0x828>
    71b4:	mov	x0, x20
    71b8:	mov	x1, x19
    71bc:	blr	x8
    71c0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    71c4:	ldr	x8, [x8, #1368]
    71c8:	cbz	x8, 7210 <__sanitizer_report_error_summary@@Base+0x828>
    71cc:	mov	x0, x20
    71d0:	mov	x1, x19
    71d4:	blr	x8
    71d8:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    71dc:	ldr	x8, [x8, #1384]
    71e0:	cbz	x8, 7210 <__sanitizer_report_error_summary@@Base+0x828>
    71e4:	mov	x0, x20
    71e8:	mov	x1, x19
    71ec:	blr	x8
    71f0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    71f4:	ldr	x2, [x8, #1400]
    71f8:	cbz	x2, 7210 <__sanitizer_report_error_summary@@Base+0x828>
    71fc:	mov	x0, x20
    7200:	mov	x1, x19
    7204:	ldp	x20, x19, [sp, #16]
    7208:	ldr	x30, [sp], #32
    720c:	br	x2
    7210:	ldp	x20, x19, [sp, #16]
    7214:	ldr	x30, [sp], #32
    7218:	ret
    721c:	stp	x30, x19, [sp, #-16]!
    7220:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7224:	ldr	x8, [x8, #1344]
    7228:	cbz	x8, 7288 <__sanitizer_report_error_summary@@Base+0x8a0>
    722c:	mov	x19, x0
    7230:	blr	x8
    7234:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7238:	ldr	x8, [x8, #1360]
    723c:	cbz	x8, 7288 <__sanitizer_report_error_summary@@Base+0x8a0>
    7240:	mov	x0, x19
    7244:	blr	x8
    7248:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    724c:	ldr	x8, [x8, #1376]
    7250:	cbz	x8, 7288 <__sanitizer_report_error_summary@@Base+0x8a0>
    7254:	mov	x0, x19
    7258:	blr	x8
    725c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7260:	ldr	x8, [x8, #1392]
    7264:	cbz	x8, 7288 <__sanitizer_report_error_summary@@Base+0x8a0>
    7268:	mov	x0, x19
    726c:	blr	x8
    7270:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7274:	ldr	x1, [x8, #1408]
    7278:	cbz	x1, 7288 <__sanitizer_report_error_summary@@Base+0x8a0>
    727c:	mov	x0, x19
    7280:	ldp	x30, x19, [sp], #16
    7284:	br	x1
    7288:	ldp	x30, x19, [sp], #16
    728c:	ret

0000000000007290 <__sanitizer_acquire_crash_state@@Base>:
    7290:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7294:	add	x8, x8, #0x588
    7298:	mov	w9, #0x1                   	// #1
    729c:	ldaxrb	w10, [x8]
    72a0:	stlxrb	w11, w9, [x8]
    72a4:	cbnz	w11, 729c <__sanitizer_acquire_crash_state@@Base+0xc>
    72a8:	cmp	w10, #0x0
    72ac:	cset	w0, eq  // eq = none
    72b0:	ret

00000000000072b4 <__sanitizer_install_malloc_and_free_hooks@@Base>:
    72b4:	mov	w8, wzr
    72b8:	cbz	x0, 7314 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
    72bc:	cbz	x1, 7314 <__sanitizer_install_malloc_and_free_hooks@@Base+0x60>
    72c0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    72c4:	add	x8, x8, #0x538
    72c8:	ldr	x9, [x8]
    72cc:	cbz	x9, 731c <__sanitizer_install_malloc_and_free_hooks@@Base+0x68>
    72d0:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    72d4:	add	x9, x9, #0x548
    72d8:	ldr	x10, [x9]
    72dc:	cbz	x10, 7328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x74>
    72e0:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    72e4:	add	x9, x9, #0x558
    72e8:	ldr	x10, [x9]
    72ec:	cbz	x10, 7330 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c>
    72f0:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    72f4:	add	x9, x9, #0x568
    72f8:	ldr	x10, [x9]
    72fc:	cbz	x10, 7338 <__sanitizer_install_malloc_and_free_hooks@@Base+0x84>
    7300:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    7304:	add	x9, x9, #0x578
    7308:	ldr	x10, [x9]
    730c:	cbz	x10, 7340 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8c>
    7310:	mov	w8, wzr
    7314:	mov	w0, w8
    7318:	ret
    731c:	mov	w10, wzr
    7320:	mov	x9, x8
    7324:	b	7344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
    7328:	mov	w10, #0x1                   	// #1
    732c:	b	7344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
    7330:	mov	w10, #0x2                   	// #2
    7334:	b	7344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
    7338:	mov	w10, #0x3                   	// #3
    733c:	b	7344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x90>
    7340:	mov	w10, #0x4                   	// #4
    7344:	str	x0, [x9]
    7348:	add	x8, x8, w10, uxtw #4
    734c:	add	w0, w10, #0x1
    7350:	str	x1, [x8, #8]
    7354:	ret
    7358:	stp	x30, x21, [sp, #-32]!
    735c:	stp	x20, x19, [sp, #16]
    7360:	cbz	x1, 73e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x130>
    7364:	ldr	x3, [x0, #16]
    7368:	mov	x20, x1
    736c:	mov	x19, x0
    7370:	cmp	x3, x1
    7374:	b.hi	7404 <__sanitizer_install_malloc_and_free_hooks@@Base+0x150>  // b.pmore
    7378:	adrp	x21, 113000 <__interceptor_sigaction@@Base+0xf0a44>
    737c:	ldr	x0, [x21, #1288]
    7380:	cbnz	x0, 738c <__sanitizer_install_malloc_and_free_hooks@@Base+0xd8>
    7384:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    7388:	str	x0, [x21, #1288]
    738c:	sub	x8, x0, #0x1
    7390:	tst	x0, x8
    7394:	b.ne	7420 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16c>  // b.any
    7398:	add	x8, x20, x0
    739c:	sub	x8, x8, #0x1
    73a0:	neg	x9, x0
    73a4:	and	x20, x8, x9
    73a8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    73ac:	add	x1, x1, #0x2c0
    73b0:	mov	x0, x20
    73b4:	mov	w2, wzr
    73b8:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    73bc:	ldr	x1, [x19]
    73c0:	ldr	x2, [x19, #16]
    73c4:	mov	x21, x0
    73c8:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    73cc:	ldp	x0, x1, [x19]
    73d0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    73d4:	stp	x21, x20, [x19]
    73d8:	ldp	x20, x19, [sp, #16]
    73dc:	ldp	x30, x21, [sp], #32
    73e0:	ret
    73e4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    73e8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    73ec:	add	x0, x0, #0xbf8
    73f0:	add	x2, x2, #0x289
    73f4:	mov	w1, #0x20b                 	// #523
    73f8:	mov	x3, xzr
    73fc:	mov	x4, xzr
    7400:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7404:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    7408:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    740c:	add	x0, x0, #0xbf8
    7410:	add	x2, x2, #0x2a2
    7414:	mov	w1, #0x20c                 	// #524
    7418:	mov	x4, x20
    741c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7420:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    7424:	add	x0, x0, #0x121
    7428:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    742c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    7430:	stp	x30, x19, [sp, #-16]!
    7434:	mov	x19, x0
    7438:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    743c:	mov	w0, #0xa50                 	// #2640
    7440:	add	x1, x1, #0x2d3
    7444:	movk	w0, #0x41, lsl #16
    7448:	mov	w2, wzr
    744c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    7450:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    7454:	add	x9, x9, #0x6b8
    7458:	str	x9, [x0]
    745c:	strb	wzr, [x0, #8]
    7460:	ldrb	w10, [x19]
    7464:	mov	w9, #0xa40                 	// #2624
    7468:	movk	w9, #0x41, lsl #16
    746c:	mov	w11, #0xa48                 	// #2632
    7470:	mov	x8, xzr
    7474:	movk	w11, #0x41, lsl #16
    7478:	add	x9, x0, x9
    747c:	strb	w10, [x0, x11]
    7480:	stp	xzr, xzr, [x0, #16]
    7484:	str	xzr, [x0, #544]
    7488:	add	x10, x0, x8
    748c:	add	x8, x8, #0x410
    7490:	cmp	x8, #0x208, lsl #12
    7494:	str	xzr, [x10, #1584]
    7498:	str	xzr, [x10, #2104]
    749c:	b.ne	7488 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d4>  // b.any
    74a0:	str	xzr, [x9]
    74a4:	ldp	x30, x19, [sp], #16
    74a8:	ret
    74ac:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    74b0:	add	x9, x9, #0x6b8
    74b4:	str	x9, [x0]
    74b8:	strb	wzr, [x0, #8]
    74bc:	ldrb	w10, [x1]
    74c0:	mov	w9, #0xa40                 	// #2624
    74c4:	movk	w9, #0x41, lsl #16
    74c8:	mov	w11, #0xa48                 	// #2632
    74cc:	mov	x8, xzr
    74d0:	movk	w11, #0x41, lsl #16
    74d4:	add	x9, x0, x9
    74d8:	strb	w10, [x0, x11]
    74dc:	stp	xzr, xzr, [x0, #16]
    74e0:	str	xzr, [x0, #544]
    74e4:	add	x10, x0, x8
    74e8:	add	x8, x8, #0x410
    74ec:	cmp	x8, #0x208, lsl #12
    74f0:	str	xzr, [x10, #1584]
    74f4:	str	xzr, [x10, #2104]
    74f8:	b.ne	74e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x230>  // b.any
    74fc:	str	xzr, [x9]
    7500:	ret
    7504:	mov	x0, xzr
    7508:	ret
    750c:	ret
    7510:	stp	x30, x19, [sp, #-16]!
    7514:	mov	x19, x1
    7518:	mov	w0, #0x8b8                 	// #2232
    751c:	mov	x1, xzr
    7520:	mov	x2, xzr
    7524:	bl	4b90 <__sancov_default_options@plt+0x210>
    7528:	stp	x19, xzr, [x0]
    752c:	str	xzr, [x0, #528]
    7530:	str	xzr, [x0, #1048]
    7534:	str	xzr, [x0, #1568]
    7538:	strb	wzr, [x0, #2224]
    753c:	ldp	x30, x19, [sp], #16
    7540:	ret
    7544:	mov	x0, x1
    7548:	mov	x1, xzr
    754c:	b	4e74 <__sancov_default_options@plt+0x4f4>
    7550:	stp	x30, x19, [sp, #-16]!
    7554:	str	xzr, [x2]
    7558:	ldr	x8, [x1]
    755c:	mov	x0, x1
    7560:	mov	x19, x2
    7564:	ldr	x8, [x8]
    7568:	blr	x8
    756c:	str	w0, [x19, #8]
    7570:	ldp	x30, x19, [sp], #16
    7574:	ret
    7578:	stp	x30, x21, [sp, #-32]!
    757c:	stp	x20, x19, [sp, #16]
    7580:	ldr	x8, [x2]
    7584:	mov	x20, x2
    7588:	mov	x19, x1
    758c:	add	x21, x0, #0x10
    7590:	cbz	x8, 75bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x308>
    7594:	ldr	x9, [x21]
    7598:	and	x8, x8, #0xfffffffffffff000
    759c:	cmp	x8, x9
    75a0:	b.ne	75bc <__sanitizer_install_malloc_and_free_hooks@@Base+0x308>  // b.any
    75a4:	ldr	x9, [x19, #528]
    75a8:	cmp	x9, x8
    75ac:	b.ne	75dc <__sanitizer_install_malloc_and_free_hooks@@Base+0x328>  // b.any
    75b0:	ldp	x20, x19, [sp, #16]
    75b4:	ldp	x30, x21, [sp], #32
    75b8:	ret
    75bc:	mov	x0, x21
    75c0:	mov	x1, x20
    75c4:	bl	7de8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb34>
    75c8:	str	x0, [x20]
    75cc:	ldr	x8, [x21]
    75d0:	ldr	x9, [x19, #528]
    75d4:	cmp	x9, x8
    75d8:	b.eq	75b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2fc>  // b.none
    75dc:	str	xzr, [x19, #8]
    75e0:	str	x8, [x19, #528]
    75e4:	str	xzr, [x19, #1048]
    75e8:	str	xzr, [x19, #1568]
    75ec:	ldp	x20, x19, [sp, #16]
    75f0:	ldp	x30, x21, [sp], #32
    75f4:	ret
    75f8:	str	x30, [sp, #-80]!
    75fc:	stp	x26, x25, [sp, #16]
    7600:	stp	x24, x23, [sp, #32]
    7604:	stp	x22, x21, [sp, #48]
    7608:	stp	x20, x19, [sp, #64]
    760c:	ldr	x25, [x1, #16]
    7610:	mov	x22, x25
    7614:	ldr	x8, [x22, #8]!
    7618:	cbz	x8, 7794 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4e0>
    761c:	ldr	x12, [x2]
    7620:	mov	x19, x2
    7624:	mov	x20, x1
    7628:	mov	x21, x0
    762c:	add	x23, x0, #0x10
    7630:	cbz	x12, 76ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>
    7634:	ldr	x8, [x25, #528]
    7638:	and	x9, x12, #0xfffffffffffff000
    763c:	cmp	x8, x9
    7640:	b.ne	76ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.any
    7644:	ldr	x9, [x23]
    7648:	cmp	x8, x9
    764c:	b.ne	76ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.any
    7650:	ldr	x8, [x25, #1568]
    7654:	cbz	x8, 7794 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4e0>
    7658:	lsr	x11, x12, #6
    765c:	mov	w13, #0x1                   	// #1
    7660:	ubfx	x9, x12, #6, #6
    7664:	add	x10, x25, #0x420
    7668:	lsl	x11, x13, x11
    766c:	lsl	x12, x13, x12
    7670:	mov	w13, #0x208                 	// #520
    7674:	ldr	w14, [x10]
    7678:	madd	x15, x14, x13, x21
    767c:	ldr	x15, [x15, #1584]
    7680:	tst	x15, x11
    7684:	b.eq	76ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.none
    7688:	madd	x14, x14, x13, x21
    768c:	add	x14, x14, x9, lsl #3
    7690:	ldr	x14, [x14, #1592]
    7694:	tst	x14, x12
    7698:	b.eq	76ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x3f8>  // b.none
    769c:	subs	x8, x8, #0x1
    76a0:	add	x10, x10, #0x8
    76a4:	b.ne	7674 <__sanitizer_install_malloc_and_free_hooks@@Base+0x3c0>  // b.any
    76a8:	b	7794 <__sanitizer_install_malloc_and_free_hooks@@Base+0x4e0>
    76ac:	add	x24, x21, #0x8
    76b0:	mov	w8, #0x1                   	// #1
    76b4:	ldaxrb	w9, [x24]
    76b8:	stlxrb	w10, w8, [x24]
    76bc:	cbnz	w10, 76b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x400>
    76c0:	cbz	w9, 76cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x418>
    76c4:	mov	x0, x24
    76c8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    76cc:	ldr	x8, [x19]
    76d0:	cbz	x8, 77ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f8>
    76d4:	ldr	x9, [x23]
    76d8:	and	x3, x8, #0xfffffffffffff000
    76dc:	cmp	x3, x9
    76e0:	b.ne	77ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x4f8>  // b.any
    76e4:	ldr	x9, [x25, #528]
    76e8:	cmp	x9, x3
    76ec:	b.ne	77d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x51c>  // b.any
    76f0:	cmp	x8, #0xfff
    76f4:	b.ls	77e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x534>  // b.plast
    76f8:	and	x4, x8, #0xfffffffffffff000
    76fc:	cmp	x3, x4
    7700:	b.ne	7808 <__sanitizer_install_malloc_and_free_hooks@@Base+0x554>  // b.any
    7704:	ldr	x9, [x22]
    7708:	lsr	x10, x8, #6
    770c:	lsr	x9, x9, x10
    7710:	tbz	w9, #0, 7728 <__sanitizer_install_malloc_and_free_hooks@@Base+0x474>
    7714:	ubfx	x9, x8, #6, #6
    7718:	add	x9, x25, x9, lsl #3
    771c:	ldr	x9, [x9, #16]
    7720:	lsr	x9, x9, x8
    7724:	tbnz	w9, #0, 778c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d8>
    7728:	add	x0, x21, #0x630
    772c:	and	x1, x8, #0xfff
    7730:	mov	x2, x22
    7734:	bl	87d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x151c>
    7738:	tbz	w0, #0, 778c <__sanitizer_install_malloc_and_free_hooks@@Base+0x4d8>
    773c:	ldr	x8, [x20]
    7740:	ldr	x25, [x19]
    7744:	mov	x0, x20
    7748:	ldr	x8, [x8]
    774c:	blr	x8
    7750:	ldr	x8, [x20]
    7754:	mov	w26, w0
    7758:	mov	x0, x20
    775c:	ldr	x8, [x8, #8]
    7760:	blr	x8
    7764:	mov	w4, w0
    7768:	mov	x0, x23
    776c:	mov	x1, x22
    7770:	mov	x2, x25
    7774:	mov	w3, w26
    7778:	bl	8220 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf6c>
    777c:	mov	x0, x21
    7780:	mov	x1, x20
    7784:	mov	x2, x19
    7788:	bl	7820 <__sanitizer_install_malloc_and_free_hooks@@Base+0x56c>
    778c:	dmb	ish
    7790:	strb	wzr, [x24]
    7794:	ldp	x20, x19, [sp, #64]
    7798:	ldp	x22, x21, [sp, #48]
    779c:	ldp	x24, x23, [sp, #32]
    77a0:	ldp	x26, x25, [sp, #16]
    77a4:	ldr	x30, [sp], #80
    77a8:	ret
    77ac:	mov	x0, x23
    77b0:	mov	x1, x19
    77b4:	bl	7de8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb34>
    77b8:	str	x0, [x19]
    77bc:	ldr	x3, [x23]
    77c0:	mov	x8, x0
    77c4:	ldr	x9, [x25, #528]
    77c8:	cmp	x9, x3
    77cc:	b.eq	76f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x43c>  // b.none
    77d0:	str	xzr, [x25, #8]
    77d4:	str	x3, [x25, #528]
    77d8:	str	xzr, [x25, #1048]
    77dc:	str	xzr, [x25, #1568]
    77e0:	cmp	x8, #0xfff
    77e4:	b.hi	76f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x444>  // b.pmore
    77e8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    77ec:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    77f0:	add	x0, x0, #0x3a8
    77f4:	add	x2, x2, #0x4d4
    77f8:	mov	w1, #0x16e                 	// #366
    77fc:	mov	w4, #0x1000                	// #4096
    7800:	mov	x3, x8
    7804:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7808:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    780c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7810:	add	x0, x0, #0x3a8
    7814:	add	x2, x2, #0x4eb
    7818:	mov	w1, #0x16f                 	// #367
    781c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7820:	sub	sp, sp, #0x110
    7824:	stp	x29, x30, [sp, #176]
    7828:	stp	x28, x27, [sp, #192]
    782c:	stp	x26, x25, [sp, #208]
    7830:	stp	x24, x23, [sp, #224]
    7834:	stp	x22, x21, [sp, #240]
    7838:	stp	x20, x19, [sp, #256]
    783c:	ldr	x22, [x1, #16]
    7840:	mov	x21, x2
    7844:	ldr	x2, [x2]
    7848:	add	x20, x0, #0x10
    784c:	mov	x19, x0
    7850:	add	x1, x22, #0x8
    7854:	add	x3, sp, #0x10
    7858:	mov	w4, #0x14                  	// #20
    785c:	mov	x0, x20
    7860:	bl	8378 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10c4>
    7864:	cbz	x0, 7988 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6d4>
    7868:	ldr	x8, [x21]
    786c:	ldr	x4, [sp, #16]
    7870:	cmp	x8, x4
    7874:	b.ne	79ec <__sanitizer_install_malloc_and_free_hooks@@Base+0x738>  // b.any
    7878:	cmp	x0, #0x14
    787c:	mov	w10, #0x14                  	// #20
    7880:	mov	w9, #0x1                   	// #1
    7884:	csel	x21, x0, x10, cc  // cc = lo, ul, last
    7888:	cmp	x8, #0x1, lsl #12
    788c:	strb	w9, [x22, #2224]
    7890:	str	w21, [x22, #1576]
    7894:	b.cc	7968 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6b4>  // b.lo, b.ul, b.last
    7898:	cmp	x21, #0x1
    789c:	mov	w25, #0x8a40                	// #35392
    78a0:	add	x22, x22, #0x64c
    78a4:	mov	w23, #0x1                   	// #1
    78a8:	add	x24, sp, #0x10
    78ac:	movk	w25, #0x20, lsl #16
    78b0:	cset	w9, ne  // ne = any
    78b4:	mov	w26, #0xffffffff            	// #-1
    78b8:	ldr	x3, [x20]
    78bc:	and	x4, x8, #0xfffffffffffff000
    78c0:	cmp	x3, x4
    78c4:	b.ne	79b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x700>  // b.any
    78c8:	ldr	x9, [x24, x9, lsl #3]
    78cc:	cmp	x9, #0xfff
    78d0:	b.ls	79cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x718>  // b.plast
    78d4:	and	x4, x9, #0xfffffffffffff000
    78d8:	cmp	x3, x4
    78dc:	b.ne	79b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x700>  // b.any
    78e0:	and	x10, x8, #0xfff
    78e4:	and	x11, x9, #0xfff
    78e8:	add	x10, x19, x10, lsl #3
    78ec:	add	x11, x19, x11, lsl #3
    78f0:	ldr	x27, [x10, x25]
    78f4:	ldr	x28, [x11, x25]
    78f8:	add	x3, sp, #0xc
    78fc:	add	x4, sp, #0x8
    7900:	add	x5, sp, #0x4
    7904:	mov	x0, x20
    7908:	mov	x1, x8
    790c:	mov	x2, x9
    7910:	stp	w26, w26, [sp, #8]
    7914:	str	wzr, [sp, #4]
    7918:	bl	8598 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12e4>
    791c:	ldrsw	x8, [sp, #4]
    7920:	cmp	x23, x21
    7924:	stur	x8, [x22, #-28]
    7928:	ldr	x8, [x27, #16]
    792c:	stur	x8, [x22, #-20]
    7930:	ldr	x8, [x28, #16]
    7934:	stur	x8, [x22, #-12]
    7938:	ldr	w8, [sp, #8]
    793c:	stur	w8, [x22, #-4]
    7940:	ldr	w8, [sp, #12]
    7944:	str	w8, [x22]
    7948:	b.cs	7994 <__sanitizer_install_malloc_and_free_hooks@@Base+0x6e0>  // b.hs, b.nlast
    794c:	ldr	x8, [x24, x23, lsl #3]
    7950:	add	x23, x23, #0x1
    7954:	udiv	x9, x23, x21
    7958:	msub	x9, x9, x21, x23
    795c:	cmp	x8, #0x1, lsl #12
    7960:	add	x22, x22, #0x20
    7964:	b.cs	78b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x604>  // b.hs, b.nlast
    7968:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    796c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7970:	add	x0, x0, #0x3a8
    7974:	add	x2, x2, #0x4d4
    7978:	mov	w1, #0x16e                 	// #366
    797c:	mov	w4, #0x1000                	// #4096
    7980:	mov	x3, x8
    7984:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7988:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    798c:	add	x0, x0, #0x2e5
    7990:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    7994:	ldp	x20, x19, [sp, #256]
    7998:	ldp	x22, x21, [sp, #240]
    799c:	ldp	x24, x23, [sp, #224]
    79a0:	ldp	x26, x25, [sp, #208]
    79a4:	ldp	x28, x27, [sp, #192]
    79a8:	ldp	x29, x30, [sp, #176]
    79ac:	add	sp, sp, #0x110
    79b0:	ret
    79b4:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    79b8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    79bc:	add	x0, x0, #0x3a8
    79c0:	add	x2, x2, #0x4eb
    79c4:	mov	w1, #0x16f                 	// #367
    79c8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    79cc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    79d0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    79d4:	add	x0, x0, #0x3a8
    79d8:	add	x2, x2, #0x4d4
    79dc:	mov	w1, #0x16e                 	// #366
    79e0:	mov	w4, #0x1000                	// #4096
    79e4:	mov	x3, x9
    79e8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    79ec:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    79f0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    79f4:	add	x0, x0, #0x30a
    79f8:	add	x2, x2, #0x369
    79fc:	mov	w1, #0x80                  	// #128
    7a00:	mov	x3, x8
    7a04:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7a08:	str	x30, [sp, #-96]!
    7a0c:	stp	x28, x27, [sp, #16]
    7a10:	stp	x26, x25, [sp, #32]
    7a14:	stp	x24, x23, [sp, #48]
    7a18:	stp	x22, x21, [sp, #64]
    7a1c:	stp	x20, x19, [sp, #80]
    7a20:	mov	w8, #0xa48                 	// #2632
    7a24:	movk	w8, #0x41, lsl #16
    7a28:	ldrb	w8, [x0, x8]
    7a2c:	ldr	x28, [x1, #16]
    7a30:	mov	w23, w4
    7a34:	mov	w25, w3
    7a38:	mov	x22, x1
    7a3c:	mov	x26, x0
    7a40:	mov	x21, x2
    7a44:	cbz	w8, 7a60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7ac>
    7a48:	ldr	x8, [x22]
    7a4c:	mov	x0, x22
    7a50:	ldr	x8, [x8]
    7a54:	blr	x8
    7a58:	mov	w19, w0
    7a5c:	b	7a64 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7b0>
    7a60:	mov	w19, wzr
    7a64:	mov	x20, x28
    7a68:	ldr	x10, [x20, #8]!
    7a6c:	ldr	x9, [x21]
    7a70:	ldr	x8, [x20, #520]
    7a74:	cbz	x10, 7bcc <__sanitizer_install_malloc_and_free_hooks@@Base+0x918>
    7a78:	add	x24, x26, #0x10
    7a7c:	cbz	x9, 7afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x848>
    7a80:	and	x2, x9, #0xfffffffffffff000
    7a84:	cmp	x8, x2
    7a88:	b.ne	7afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x848>  // b.any
    7a8c:	ldr	x10, [x24]
    7a90:	cmp	x8, x10
    7a94:	b.ne	7afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x848>  // b.any
    7a98:	ldr	x8, [x28, #1568]
    7a9c:	cbz	x8, 7af0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x83c>
    7aa0:	lsr	x12, x9, #6
    7aa4:	mov	w13, #0x1                   	// #1
    7aa8:	ubfx	x10, x9, #6, #6
    7aac:	add	x11, x28, #0x420
    7ab0:	lsl	x12, x13, x12
    7ab4:	lsl	x13, x13, x9
    7ab8:	mov	w14, #0x208                 	// #520
    7abc:	ldr	w15, [x11]
    7ac0:	madd	x16, x15, x14, x26
    7ac4:	ldr	x16, [x16, #1584]
    7ac8:	tst	x16, x12
    7acc:	b.eq	7afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x848>  // b.none
    7ad0:	madd	x15, x15, x14, x26
    7ad4:	add	x15, x15, x10, lsl #3
    7ad8:	ldr	x15, [x15, #1592]
    7adc:	tst	x15, x13
    7ae0:	b.eq	7afc <__sanitizer_install_malloc_and_free_hooks@@Base+0x848>  // b.none
    7ae4:	subs	x8, x8, #0x1
    7ae8:	add	x11, x11, #0x8
    7aec:	b.ne	7abc <__sanitizer_install_malloc_and_free_hooks@@Base+0x808>  // b.any
    7af0:	and	x1, x9, #0xfff
    7af4:	mov	x0, x20
    7af8:	b	7be8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x934>
    7afc:	add	x26, x26, #0x8
    7b00:	mov	w8, #0x1                   	// #1
    7b04:	ldaxrb	w9, [x26]
    7b08:	stlxrb	w10, w8, [x26]
    7b0c:	cbnz	w10, 7b04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x850>
    7b10:	cbz	w9, 7b1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x868>
    7b14:	mov	x0, x26
    7b18:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    7b1c:	ldr	x27, [x21]
    7b20:	cbz	x27, 7b48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x894>
    7b24:	ldr	x8, [x24]
    7b28:	and	x3, x27, #0xfffffffffffff000
    7b2c:	cmp	x3, x8
    7b30:	b.ne	7b48 <__sanitizer_install_malloc_and_free_hooks@@Base+0x894>  // b.any
    7b34:	ldr	x8, [x28, #528]
    7b38:	cmp	x8, x3
    7b3c:	b.ne	7b6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x8b8>  // b.any
    7b40:	tbnz	w25, #0, 7b80 <__sanitizer_install_malloc_and_free_hooks@@Base+0x8cc>
    7b44:	b	7bb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x904>
    7b48:	mov	x0, x24
    7b4c:	mov	x1, x21
    7b50:	bl	7de8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb34>
    7b54:	str	x0, [x21]
    7b58:	ldr	x3, [x24]
    7b5c:	mov	x27, x0
    7b60:	ldr	x8, [x28, #528]
    7b64:	cmp	x8, x3
    7b68:	b.eq	7b40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x88c>  // b.none
    7b6c:	str	xzr, [x28, #8]
    7b70:	str	x3, [x28, #528]
    7b74:	str	xzr, [x28, #1048]
    7b78:	str	xzr, [x28, #1568]
    7b7c:	tbz	w25, #0, 7bb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x904>
    7b80:	cmp	x27, #0xfff
    7b84:	b.ls	7cbc <__sanitizer_install_malloc_and_free_hooks@@Base+0xa08>  // b.plast
    7b88:	and	x4, x27, #0xfffffffffffff000
    7b8c:	cmp	x3, x4
    7b90:	b.ne	7cf8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa44>  // b.any
    7b94:	ldr	x8, [x20]
    7b98:	lsr	x9, x27, #6
    7b9c:	lsr	x8, x8, x9
    7ba0:	tbz	w8, #0, 7bb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x904>
    7ba4:	ubfx	x8, x27, #6, #6
    7ba8:	add	x8, x28, x8, lsl #3
    7bac:	ldr	x8, [x8, #16]
    7bb0:	lsr	x8, x8, x27
    7bb4:	tbnz	w8, #0, 7d10 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa5c>
    7bb8:	tbz	w23, #0, 7c08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x954>
    7bbc:	mov	x8, x3
    7bc0:	cmp	x3, x8
    7bc4:	b.ne	7c60 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9ac>  // b.any
    7bc8:	b	7c70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9bc>
    7bcc:	cbz	x8, 7a78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c4>
    7bd0:	and	x10, x9, #0xfffffffffffff000
    7bd4:	cmp	x8, x10
    7bd8:	b.ne	7a78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x7c4>  // b.any
    7bdc:	and	x1, x9, #0xfff
    7be0:	mov	x0, x20
    7be4:	mov	x2, x8
    7be8:	mov	w3, w19
    7bec:	ldp	x20, x19, [sp, #80]
    7bf0:	ldp	x22, x21, [sp, #64]
    7bf4:	ldp	x24, x23, [sp, #48]
    7bf8:	ldp	x26, x25, [sp, #32]
    7bfc:	ldp	x28, x27, [sp, #16]
    7c00:	ldr	x30, [sp], #96
    7c04:	b	8e5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ba8>
    7c08:	mov	w23, w19
    7c0c:	cbnz	w19, 7c24 <__sanitizer_install_malloc_and_free_hooks@@Base+0x970>
    7c10:	ldr	x8, [x22]
    7c14:	mov	x0, x22
    7c18:	ldr	x8, [x8]
    7c1c:	blr	x8
    7c20:	mov	w23, w0
    7c24:	ldr	x8, [x22]
    7c28:	mov	x0, x22
    7c2c:	ldr	x8, [x8, #8]
    7c30:	blr	x8
    7c34:	mov	w4, w0
    7c38:	mov	x0, x24
    7c3c:	mov	x1, x20
    7c40:	mov	x2, x27
    7c44:	mov	w3, w23
    7c48:	bl	8220 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf6c>
    7c4c:	ldr	x27, [x21]
    7c50:	ldr	x8, [x24]
    7c54:	ldr	x3, [x28, #528]
    7c58:	cmp	x3, x8
    7c5c:	b.eq	7c70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x9bc>  // b.none
    7c60:	str	xzr, [x28, #8]
    7c64:	str	x8, [x28, #528]
    7c68:	str	xzr, [x28, #1048]
    7c6c:	str	xzr, [x28, #1568]
    7c70:	cmp	x27, #0xfff
    7c74:	b.ls	7cbc <__sanitizer_install_malloc_and_free_hooks@@Base+0xa08>  // b.plast
    7c78:	and	x4, x27, #0xfffffffffffff000
    7c7c:	cmp	x8, x4
    7c80:	b.ne	7cdc <__sanitizer_install_malloc_and_free_hooks@@Base+0xa28>  // b.any
    7c84:	and	x1, x27, #0xfff
    7c88:	mov	x0, x20
    7c8c:	mov	x2, x8
    7c90:	mov	w3, w19
    7c94:	bl	8e5c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ba8>
    7c98:	dmb	ish
    7c9c:	strb	wzr, [x26]
    7ca0:	ldp	x20, x19, [sp, #80]
    7ca4:	ldp	x22, x21, [sp, #64]
    7ca8:	ldp	x24, x23, [sp, #48]
    7cac:	ldp	x26, x25, [sp, #32]
    7cb0:	ldp	x28, x27, [sp, #16]
    7cb4:	ldr	x30, [sp], #96
    7cb8:	ret
    7cbc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    7cc0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7cc4:	add	x0, x0, #0x3a8
    7cc8:	add	x2, x2, #0x4d4
    7ccc:	mov	w1, #0x16e                 	// #366
    7cd0:	mov	w4, #0x1000                	// #4096
    7cd4:	mov	x3, x27
    7cd8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7cdc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    7ce0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7ce4:	add	x0, x0, #0x3a8
    7ce8:	add	x2, x2, #0x4eb
    7cec:	mov	w1, #0x16f                 	// #367
    7cf0:	mov	x3, x8
    7cf4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7cf8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    7cfc:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7d00:	add	x0, x0, #0x3a8
    7d04:	add	x2, x2, #0x4eb
    7d08:	mov	w1, #0x16f                 	// #367
    7d0c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7d10:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    7d14:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    7d18:	add	x0, x0, #0x30a
    7d1c:	add	x2, x2, #0x382
    7d20:	mov	w1, #0xa6                  	// #166
    7d24:	mov	x3, xzr
    7d28:	mov	x4, xzr
    7d2c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    7d30:	ldr	x8, [x1, #16]
    7d34:	ldr	x9, [x2]
    7d38:	ldr	x10, [x8, #528]
    7d3c:	and	x11, x9, #0xfffffffffffff000
    7d40:	cmp	x10, x11
    7d44:	b.ne	7d54 <__sanitizer_install_malloc_and_free_hooks@@Base+0xaa0>  // b.any
    7d48:	add	x0, x8, #0x8
    7d4c:	and	x1, x9, #0xfff
    7d50:	b	8fb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d00>
    7d54:	ret
    7d58:	stp	x30, x21, [sp, #-32]!
    7d5c:	stp	x20, x19, [sp, #16]
    7d60:	ldr	x8, [x2]
    7d64:	cbz	x8, 7dbc <__sanitizer_install_malloc_and_free_hooks@@Base+0xb08>
    7d68:	mov	x19, x2
    7d6c:	mov	x21, x0
    7d70:	add	x20, x0, #0x8
    7d74:	mov	w8, #0x1                   	// #1
    7d78:	ldaxrb	w9, [x20]
    7d7c:	stlxrb	w10, w8, [x20]
    7d80:	cbnz	w10, 7d78 <__sanitizer_install_malloc_and_free_hooks@@Base+0xac4>
    7d84:	cbz	w9, 7d90 <__sanitizer_install_malloc_and_free_hooks@@Base+0xadc>
    7d88:	mov	x0, x20
    7d8c:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    7d90:	ldr	x1, [x19]
    7d94:	cbz	x1, 7db0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xafc>
    7d98:	add	x0, x21, #0x10
    7d9c:	ldr	x8, [x0]
    7da0:	and	x9, x1, #0xfffffffffffff000
    7da4:	cmp	x9, x8
    7da8:	b.ne	7db0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xafc>  // b.any
    7dac:	bl	86b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1400>
    7db0:	str	xzr, [x19]
    7db4:	dmb	ish
    7db8:	strb	wzr, [x20]
    7dbc:	ldp	x20, x19, [sp, #16]
    7dc0:	ldp	x30, x21, [sp], #32
    7dc4:	ret
    7dc8:	ldr	x8, [x1, #16]
    7dcc:	ldrb	w9, [x8, #2224]
    7dd0:	cbz	w9, 7de0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb2c>
    7dd4:	add	x0, x8, #0x628
    7dd8:	strb	wzr, [x8, #2224]
    7ddc:	ret
    7de0:	mov	x0, xzr
    7de4:	ret
    7de8:	sub	sp, sp, #0x20
    7dec:	str	x30, [sp, #16]
    7df0:	ldr	x8, [x0, #8]
    7df4:	cbz	x8, 7e4c <__sanitizer_install_malloc_and_free_hooks@@Base+0xb98>
    7df8:	rbit	x9, x8
    7dfc:	clz	x9, x9
    7e00:	mov	w10, #0x1                   	// #1
    7e04:	lsl	x10, x10, x9
    7e08:	bic	x11, x8, x10
    7e0c:	mov	x12, x0
    7e10:	str	x11, [x12, #8]!
    7e14:	add	x11, x12, x9, lsl #3
    7e18:	ldr	x13, [x11, #8]!
    7e1c:	cbz	x13, 81cc <__sanitizer_install_malloc_and_free_hooks@@Base+0xf18>
    7e20:	rbit	x12, x13
    7e24:	clz	x12, x12
    7e28:	mov	w14, #0x1                   	// #1
    7e2c:	lsl	x14, x14, x12
    7e30:	bics	x13, x13, x14
    7e34:	str	x13, [x11]
    7e38:	b.eq	7e44 <__sanitizer_install_malloc_and_free_hooks@@Base+0xb90>  // b.none
    7e3c:	orr	x8, x10, x8
    7e40:	str	x8, [x0, #8]
    7e44:	orr	x8, x12, x9, lsl #6
    7e48:	b	8070 <__sanitizer_install_malloc_and_free_hooks@@Base+0xdbc>
    7e4c:	ldr	x9, [x0, #528]
    7e50:	mov	w8, #0xa30                 	// #2608
    7e54:	movk	w8, #0x41, lsl #16
    7e58:	add	x8, x0, x8
    7e5c:	cbz	x9, 8094 <__sanitizer_install_malloc_and_free_hooks@@Base+0xde0>
    7e60:	ldr	x10, [x8]
    7e64:	subs	x9, x10, #0x1
    7e68:	b.mi	7f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc84>  // b.first
    7e6c:	mov	w11, #0xa20                 	// #2592
    7e70:	add	x12, x0, x10, lsl #4
    7e74:	movk	w11, #0x21, lsl #16
    7e78:	add	x12, x12, x11
    7e7c:	b	7eb4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc00>
    7e80:	ldr	q0, [x12]
    7e84:	add	x10, x0, x10, lsl #4
    7e88:	str	q0, [sp]
    7e8c:	ldr	q0, [x10, x11]
    7e90:	str	q0, [x12]
    7e94:	ldr	q0, [sp]
    7e98:	str	q0, [x10, x11]
    7e9c:	ldr	x10, [x8]
    7ea0:	sub	x10, x10, #0x1
    7ea4:	str	x10, [x8]
    7ea8:	sub	x9, x9, #0x1
    7eac:	sub	x12, x12, #0x10
    7eb0:	tbnz	x9, #63, 7f30 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc7c>
    7eb4:	ldrh	w3, [x12]
    7eb8:	cmp	x3, #0x1, lsl #12
    7ebc:	b.hi	81b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xefc>  // b.pmore
    7ec0:	lsr	x13, x3, #12
    7ec4:	add	x14, x0, x13, lsl #3
    7ec8:	ldr	x14, [x14, #528]
    7ecc:	lsr	x15, x3, #6
    7ed0:	lsr	x14, x14, x15
    7ed4:	tbz	w14, #0, 7ef0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xc3c>
    7ed8:	ubfx	x14, x3, #6, #6
    7edc:	add	x13, x0, x13, lsl #9
    7ee0:	add	x13, x13, x14, lsl #3
    7ee4:	ldr	x13, [x13, #536]
    7ee8:	lsr	x13, x13, x3
    7eec:	tbnz	w13, #0, 7e80 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbcc>
    7ef0:	ldrh	w3, [x12, #2]
    7ef4:	cmp	x3, #0x1, lsl #12
    7ef8:	b.hi	81b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xefc>  // b.pmore
    7efc:	lsr	x13, x3, #12
    7f00:	add	x14, x0, x13, lsl #3
    7f04:	ldr	x14, [x14, #528]
    7f08:	lsr	x15, x3, #6
    7f0c:	lsr	x14, x14, x15
    7f10:	tbz	w14, #0, 7ea8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbf4>
    7f14:	ubfx	x14, x3, #6, #6
    7f18:	add	x13, x0, x13, lsl #9
    7f1c:	add	x13, x13, x14, lsl #3
    7f20:	ldr	x13, [x13, #536]
    7f24:	lsr	x13, x13, x3
    7f28:	tbnz	w13, #0, 7e80 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbcc>
    7f2c:	b	7ea8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xbf4>
    7f30:	ldr	x8, [x0, #8]
    7f34:	cbnz	x8, 8200 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf4c>
    7f38:	ldr	x8, [x0, #528]
    7f3c:	mov	x9, xzr
    7f40:	mov	w10, #0x208                 	// #520
    7f44:	mov	w11, #0x1                   	// #1
    7f48:	b	7f58 <__sanitizer_install_malloc_and_free_hooks@@Base+0xca4>
    7f4c:	add	x9, x9, #0x1
    7f50:	cmp	x9, #0x1, lsl #12
    7f54:	b.eq	7fb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd04>  // b.none
    7f58:	madd	x14, x9, x10, x0
    7f5c:	ldr	x12, [x14, #1568]
    7f60:	ands	x13, x8, x12
    7f64:	b.eq	7f4c <__sanitizer_install_malloc_and_free_hooks@@Base+0xc98>  // b.none
    7f68:	add	x14, x14, #0x620
    7f6c:	b	7f74 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcc0>
    7f70:	cbz	x13, 7f4c <__sanitizer_install_malloc_and_free_hooks@@Base+0xc98>
    7f74:	rbit	x15, x13
    7f78:	clz	x15, x15
    7f7c:	madd	x16, x9, x10, x0
    7f80:	lsl	x17, x15, #3
    7f84:	add	x16, x16, x17
    7f88:	add	x17, x0, x17
    7f8c:	ldr	x18, [x16, #1576]
    7f90:	ldr	x17, [x17, #536]
    7f94:	lsl	x15, x11, x15
    7f98:	bic	x13, x13, x15
    7f9c:	bics	x17, x18, x17
    7fa0:	str	x17, [x16, #1576]
    7fa4:	b.ne	7f70 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcbc>  // b.any
    7fa8:	mvn	x15, x15
    7fac:	and	x12, x12, x15
    7fb0:	str	x12, [x14]
    7fb4:	b	7f70 <__sanitizer_install_malloc_and_free_hooks@@Base+0xcbc>
    7fb8:	cbz	x8, 81e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf30>
    7fbc:	mov	x11, xzr
    7fc0:	mov	w10, #0x1                   	// #1
    7fc4:	b	7fe8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd34>
    7fc8:	mov	x13, xzr
    7fcc:	str	xzr, [x11]
    7fd0:	add	x12, x0, x12, lsl #3
    7fd4:	ldr	x12, [x12, #536]
    7fd8:	orr	x12, x12, x13
    7fdc:	str	x12, [x11]
    7fe0:	mov	x11, x9
    7fe4:	cbz	x8, 801c <__sanitizer_install_malloc_and_free_hooks@@Base+0xd68>
    7fe8:	rbit	x9, x8
    7fec:	clz	x12, x9
    7ff0:	lsl	x9, x10, x12
    7ff4:	mov	x13, x0
    7ff8:	bic	x8, x8, x9
    7ffc:	orr	x9, x9, x11
    8000:	str	x9, [x13, #8]!
    8004:	add	x13, x13, x12, lsl #3
    8008:	cmp	x9, x11
    800c:	add	x11, x13, #0x8
    8010:	b.ne	7fc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd14>  // b.any
    8014:	ldr	x13, [x11]
    8018:	b	7fd0 <__sanitizer_install_malloc_and_free_hooks@@Base+0xd1c>
    801c:	rbit	x8, x9
    8020:	mov	w10, #0x1                   	// #1
    8024:	clz	x8, x8
    8028:	lsl	x10, x10, x8
    802c:	mov	x11, x0
    8030:	bic	x12, x9, x10
    8034:	str	x12, [x11, #8]!
    8038:	str	xzr, [x11, #520]
    803c:	add	x12, x11, x8, lsl #3
    8040:	ldr	x13, [x12, #8]!
    8044:	cbz	x13, 81cc <__sanitizer_install_malloc_and_free_hooks@@Base+0xf18>
    8048:	rbit	x11, x13
    804c:	clz	x11, x11
    8050:	mov	w14, #0x1                   	// #1
    8054:	lsl	x14, x14, x11
    8058:	bics	x13, x13, x14
    805c:	str	x13, [x12]
    8060:	b.eq	806c <__sanitizer_install_malloc_and_free_hooks@@Base+0xdb8>  // b.none
    8064:	orr	x9, x10, x9
    8068:	str	x9, [x0, #8]
    806c:	orr	x8, x11, x8, lsl #6
    8070:	mov	w10, #0x8a30                	// #35376
    8074:	add	x9, x0, x8, lsl #3
    8078:	movk	w10, #0x20, lsl #16
    807c:	str	x1, [x9, x10]
    8080:	ldr	x9, [x0]
    8084:	add	x0, x9, x8
    8088:	ldr	x30, [sp, #16]
    808c:	add	sp, sp, #0x20
    8090:	ret
    8094:	ldr	x9, [x0]
    8098:	add	x11, x0, #0x108
    809c:	movi	v0.2d, #0xffffffffffffffff
    80a0:	mov	x12, x0
    80a4:	add	x9, x9, #0x1, lsl #12
    80a8:	mov	x10, xzr
    80ac:	str	xzr, [x0, #528]
    80b0:	str	x9, [x0]
    80b4:	str	q0, [x12, #8]!
    80b8:	stur	q0, [x0, #24]
    80bc:	stur	q0, [x0, #40]
    80c0:	stur	q0, [x0, #56]
    80c4:	stur	q0, [x0, #72]
    80c8:	stur	q0, [x0, #88]
    80cc:	stur	q0, [x0, #104]
    80d0:	stur	q0, [x0, #120]
    80d4:	stur	q0, [x0, #136]
    80d8:	stur	q0, [x0, #152]
    80dc:	stur	q0, [x0, #168]
    80e0:	stur	q0, [x0, #184]
    80e4:	stur	q0, [x0, #200]
    80e8:	stur	q0, [x0, #216]
    80ec:	stur	q0, [x0, #232]
    80f0:	stur	q0, [x0, #248]
    80f4:	stp	q0, q0, [x11]
    80f8:	stp	q0, q0, [x11, #32]
    80fc:	stp	q0, q0, [x11, #64]
    8100:	stp	q0, q0, [x11, #96]
    8104:	stp	q0, q0, [x11, #128]
    8108:	stp	q0, q0, [x11, #160]
    810c:	stp	q0, q0, [x11, #192]
    8110:	stp	q0, q0, [x11, #224]
    8114:	mov	x11, #0xffffffffffffffff    	// #-1
    8118:	str	x11, [x12, #512]
    811c:	add	x11, x0, x10
    8120:	add	x10, x10, #0x410
    8124:	cmp	x10, #0x208, lsl #12
    8128:	str	xzr, [x11, #1568]
    812c:	str	xzr, [x11, #2088]
    8130:	b.ne	811c <__sanitizer_install_malloc_and_free_hooks@@Base+0xe68>  // b.any
    8134:	str	xzr, [x8]
    8138:	ldr	x8, [x0, #8]
    813c:	cbz	x8, 81e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf34>
    8140:	rbit	x10, x8
    8144:	clz	x10, x10
    8148:	mov	w11, #0x1                   	// #1
    814c:	lsl	x11, x11, x10
    8150:	bic	x12, x8, x11
    8154:	mov	x13, x0
    8158:	str	x12, [x13, #8]!
    815c:	add	x13, x13, x10, lsl #3
    8160:	ldr	x14, [x13, #8]!
    8164:	cbz	x14, 81cc <__sanitizer_install_malloc_and_free_hooks@@Base+0xf18>
    8168:	rbit	x12, x14
    816c:	clz	x12, x12
    8170:	mov	w15, #0x1                   	// #1
    8174:	lsl	x15, x15, x12
    8178:	bics	x14, x14, x15
    817c:	str	x14, [x13]
    8180:	b.eq	818c <__sanitizer_install_malloc_and_free_hooks@@Base+0xed8>  // b.none
    8184:	orr	x8, x11, x8
    8188:	str	x8, [x0, #8]
    818c:	orr	x8, x12, x10, lsl #6
    8190:	mov	w10, #0x8a30                	// #35376
    8194:	movk	w10, #0x20, lsl #16
    8198:	add	x11, x0, x8, lsl #3
    819c:	add	x0, x8, x9
    81a0:	str	x1, [x11, x10]
    81a4:	ldr	x30, [sp, #16]
    81a8:	add	sp, sp, #0x20
    81ac:	ret
    81b0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    81b4:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    81b8:	add	x0, x0, #0x428
    81bc:	add	x2, x2, #0x49e
    81c0:	mov	w1, #0x144                 	// #324
    81c4:	mov	w4, #0x1000                	// #4096
    81c8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    81cc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    81d0:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    81d4:	add	x0, x0, #0x428
    81d8:	add	x2, x2, #0xddc
    81dc:	mov	w1, #0x31                  	// #49
    81e0:	b	8214 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf60>
    81e4:	str	xzr, [x0, #528]
    81e8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    81ec:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    81f0:	add	x0, x0, #0x428
    81f4:	add	x2, x2, #0x47c
    81f8:	mov	w1, #0xc0                  	// #192
    81fc:	b	8214 <__sanitizer_install_malloc_and_free_hooks@@Base+0xf60>
    8200:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8204:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8208:	add	x0, x0, #0x3a8
    820c:	add	x2, x2, #0x404
    8210:	mov	w1, #0xa5                  	// #165
    8214:	mov	x3, xzr
    8218:	mov	x4, xzr
    821c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8220:	sub	sp, sp, #0x180
    8224:	stp	x29, x30, [sp, #320]
    8228:	stp	x24, x23, [sp, #336]
    822c:	stp	x22, x21, [sp, #352]
    8230:	stp	x20, x19, [sp, #368]
    8234:	mov	w20, w3
    8238:	ldr	x3, [x0]
    823c:	ldr	x8, [x1, #520]
    8240:	mov	w19, w4
    8244:	mov	x21, x1
    8248:	mov	x22, x0
    824c:	cmp	x8, x3
    8250:	mov	x8, x2
    8254:	b.eq	8268 <__sanitizer_install_malloc_and_free_hooks@@Base+0xfb4>  // b.none
    8258:	str	xzr, [x21]
    825c:	str	x3, [x21, #520]
    8260:	str	xzr, [x21, #1040]
    8264:	str	xzr, [x21, #1560]
    8268:	cmp	x8, #0xfff
    826c:	b.ls	8340 <__sanitizer_install_malloc_and_free_hooks@@Base+0x108c>  // b.plast
    8270:	and	x4, x8, #0xfffffffffffff000
    8274:	cmp	x3, x4
    8278:	b.ne	8360 <__sanitizer_install_malloc_and_free_hooks@@Base+0x10ac>  // b.any
    827c:	and	x23, x8, #0xfff
    8280:	add	x0, x22, #0x620
    8284:	mov	x3, sp
    8288:	mov	w4, #0x28                  	// #40
    828c:	mov	x1, x21
    8290:	mov	x2, x23
    8294:	mov	x24, sp
    8298:	bl	8abc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1808>
    829c:	cbz	x0, 8328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1074>
    82a0:	mov	w10, #0xa30                 	// #2608
    82a4:	movk	w10, #0x41, lsl #16
    82a8:	mov	w11, #0xa30                 	// #2608
    82ac:	mov	x8, xzr
    82b0:	add	x9, x21, #0x41c
    82b4:	add	x10, x22, x10
    82b8:	movk	w11, #0x21, lsl #16
    82bc:	b	82f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x103c>
    82c0:	ldr	w14, [x15]
    82c4:	add	x15, x12, #0x1
    82c8:	add	x12, x22, x12, lsl #4
    82cc:	add	x12, x12, x11
    82d0:	str	x15, [x10]
    82d4:	strh	w13, [x12]
    82d8:	strh	w23, [x12, #2]
    82dc:	stp	w14, w20, [x12, #4]
    82e0:	str	w19, [x12, #12]
    82e4:	add	x8, x8, #0x1
    82e8:	cmp	x8, x0
    82ec:	b.eq	8328 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1074>  // b.none
    82f0:	ldr	x12, [x10]
    82f4:	lsr	x13, x12, #17
    82f8:	cbnz	x13, 82e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1030>
    82fc:	ldr	x14, [x21, #1560]
    8300:	ldr	x13, [x24, x8, lsl #3]
    8304:	cbz	x14, 82c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1010>
    8308:	mov	x15, x9
    830c:	ldur	w16, [x15, #-4]
    8310:	cmp	w16, w13
    8314:	b.eq	82c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x100c>  // b.none
    8318:	subs	x14, x14, #0x1
    831c:	add	x15, x15, #0x8
    8320:	b.ne	830c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1058>  // b.any
    8324:	b	82c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1010>
    8328:	ldp	x20, x19, [sp, #368]
    832c:	ldp	x22, x21, [sp, #352]
    8330:	ldp	x24, x23, [sp, #336]
    8334:	ldp	x29, x30, [sp, #320]
    8338:	add	sp, sp, #0x180
    833c:	ret
    8340:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8344:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8348:	add	x0, x0, #0x3a8
    834c:	add	x2, x2, #0x4d4
    8350:	mov	w1, #0x16e                 	// #366
    8354:	mov	w4, #0x1000                	// #4096
    8358:	mov	x3, x8
    835c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8360:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8364:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8368:	add	x0, x0, #0x3a8
    836c:	add	x2, x2, #0x4eb
    8370:	mov	w1, #0x16f                 	// #367
    8374:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8378:	str	x30, [sp, #-80]!
    837c:	stp	x26, x25, [sp, #16]
    8380:	stp	x24, x23, [sp, #32]
    8384:	stp	x22, x21, [sp, #48]
    8388:	stp	x20, x19, [sp, #64]
    838c:	mov	x20, x3
    8390:	ldr	x8, [x0]
    8394:	ldr	x3, [x1, #520]
    8398:	cmp	x3, x8
    839c:	b.ne	8520 <__sanitizer_install_malloc_and_free_hooks@@Base+0x126c>  // b.any
    83a0:	add	x23, x0, #0x418
    83a4:	str	xzr, [x23]
    83a8:	ldr	x9, [x1]
    83ac:	mov	x22, x4
    83b0:	mov	x21, x0
    83b4:	mov	x19, x2
    83b8:	cbz	x9, 841c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1168>
    83bc:	mov	x12, xzr
    83c0:	mov	w10, #0x1                   	// #1
    83c4:	b	83e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1134>
    83c8:	mov	x14, xzr
    83cc:	str	xzr, [x12]
    83d0:	add	x13, x1, x13, lsl #3
    83d4:	ldr	x13, [x13, #8]
    83d8:	orr	x13, x13, x14
    83dc:	str	x13, [x12]
    83e0:	mov	x12, x11
    83e4:	cbz	x9, 8420 <__sanitizer_install_malloc_and_free_hooks@@Base+0x116c>
    83e8:	rbit	x11, x9
    83ec:	clz	x13, x11
    83f0:	add	x14, x21, #0x418
    83f4:	lsl	x11, x10, x13
    83f8:	add	x14, x14, x13, lsl #3
    83fc:	bic	x9, x9, x11
    8400:	orr	x11, x11, x12
    8404:	cmp	x11, x12
    8408:	add	x12, x14, #0x8
    840c:	str	x11, [x21, #1048]
    8410:	b.ne	83c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1114>  // b.any
    8414:	ldr	x14, [x12]
    8418:	b	83d0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x111c>
    841c:	mov	x11, xzr
    8420:	cmp	x19, #0xfff
    8424:	b.ls	853c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1288>  // b.plast
    8428:	and	x4, x19, #0xfffffffffffff000
    842c:	cmp	x8, x4
    8430:	b.ne	855c <__sanitizer_install_malloc_and_free_hooks@@Base+0x12a8>  // b.any
    8434:	ubfx	x8, x19, #6, #6
    8438:	lsr	x9, x11, x8
    843c:	tbz	w9, #0, 8450 <__sanitizer_install_malloc_and_free_hooks@@Base+0x119c>
    8440:	add	x8, x21, x8, lsl #3
    8444:	ldr	x8, [x8, #1056]
    8448:	lsr	x8, x8, x19
    844c:	tbnz	w8, #0, 8578 <__sanitizer_install_malloc_and_free_hooks@@Base+0x12c4>
    8450:	cbz	x22, 848c <__sanitizer_install_malloc_and_free_hooks@@Base+0x11d8>
    8454:	and	x25, x19, #0xfff
    8458:	add	x26, x21, #0x620
    845c:	mov	w24, #0x1                   	// #1
    8460:	mov	x0, x26
    8464:	mov	x1, x25
    8468:	mov	x2, x23
    846c:	mov	x3, x20
    8470:	mov	x4, x24
    8474:	bl	8cd8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a24>
    8478:	cmp	x24, x0
    847c:	b.eq	84ac <__sanitizer_install_malloc_and_free_hooks@@Base+0x11f8>  // b.none
    8480:	add	x24, x24, #0x1
    8484:	cmp	x24, x22
    8488:	b.ls	8460 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11ac>  // b.plast
    848c:	mov	x24, xzr
    8490:	mov	x0, x24
    8494:	ldp	x20, x19, [sp, #64]
    8498:	ldp	x22, x21, [sp, #48]
    849c:	ldp	x24, x23, [sp, #32]
    84a0:	ldp	x26, x25, [sp, #16]
    84a4:	ldr	x30, [sp], #80
    84a8:	ret
    84ac:	cbz	x24, 8490 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11dc>
    84b0:	mov	x8, xzr
    84b4:	ldr	x3, [x20, x8, lsl #3]
    84b8:	cmp	x3, #0x1, lsl #12
    84bc:	b.cs	8504 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1250>  // b.hs, b.nlast
    84c0:	ldr	x9, [x21]
    84c4:	add	x9, x9, x3
    84c8:	str	x9, [x20, x8, lsl #3]
    84cc:	add	x8, x8, #0x1
    84d0:	cmp	x24, x8
    84d4:	b.ne	84b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1200>  // b.any
    84d8:	cbz	x24, 8490 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11dc>
    84dc:	ldr	x3, [x20]
    84e0:	cmp	x3, x19
    84e4:	b.eq	8490 <__sanitizer_install_malloc_and_free_hooks@@Base+0x11dc>  // b.none
    84e8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    84ec:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    84f0:	add	x0, x0, #0x3a8
    84f4:	add	x2, x2, #0x537
    84f8:	mov	w1, #0x13f                 	// #319
    84fc:	mov	x4, x19
    8500:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8504:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8508:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    850c:	add	x0, x0, #0x3a8
    8510:	add	x2, x2, #0x489
    8514:	mov	w1, #0x16b                 	// #363
    8518:	mov	w4, #0x1000                	// #4096
    851c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8520:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8524:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8528:	add	x0, x0, #0x3a8
    852c:	add	x2, x2, #0x4b4
    8530:	mov	w1, #0x6b                  	// #107
    8534:	mov	x4, x8
    8538:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    853c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8540:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8544:	add	x0, x0, #0x3a8
    8548:	add	x2, x2, #0x4d4
    854c:	mov	w1, #0x16e                 	// #366
    8550:	mov	w4, #0x1000                	// #4096
    8554:	mov	x3, x19
    8558:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    855c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8560:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8564:	add	x0, x0, #0x3a8
    8568:	add	x2, x2, #0x4eb
    856c:	mov	w1, #0x16f                 	// #367
    8570:	mov	x3, x8
    8574:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8578:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    857c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8580:	add	x0, x0, #0x3a8
    8584:	add	x2, x2, #0x517
    8588:	mov	w1, #0x13a                 	// #314
    858c:	mov	x3, xzr
    8590:	mov	x4, xzr
    8594:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8598:	str	x30, [sp, #-16]!
    859c:	mov	x9, x1
    85a0:	cmp	x1, #0xfff
    85a4:	b.ls	8674 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13c0>  // b.plast
    85a8:	ldr	x10, [x0]
    85ac:	and	x11, x9, #0xfffffffffffff000
    85b0:	cmp	x10, x11
    85b4:	b.ne	8654 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13a0>  // b.any
    85b8:	mov	x8, x2
    85bc:	cmp	x2, #0xfff
    85c0:	b.ls	8694 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13e0>  // b.plast
    85c4:	and	x11, x8, #0xfffffffffffff000
    85c8:	cmp	x10, x11
    85cc:	b.ne	8654 <__sanitizer_install_malloc_and_free_hooks@@Base+0x13a0>  // b.any
    85d0:	mov	w10, #0xa30                 	// #2608
    85d4:	movk	w10, #0x41, lsl #16
    85d8:	ldr	x10, [x0, x10]
    85dc:	cbz	x10, 8648 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1394>
    85e0:	and	x12, x8, #0xfff
    85e4:	mov	w8, #0xa38                 	// #2616
    85e8:	movk	w8, #0x21, lsl #16
    85ec:	mov	x11, xzr
    85f0:	and	x9, x9, #0xfff
    85f4:	add	x8, x0, x8
    85f8:	b	860c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1358>
    85fc:	add	x11, x11, #0x1
    8600:	cmp	x11, x10
    8604:	add	x8, x8, #0x10
    8608:	b.cs	8648 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1394>  // b.hs, b.nlast
    860c:	ldurh	w13, [x8, #-8]
    8610:	cmp	x9, x13
    8614:	b.ne	85fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1348>  // b.any
    8618:	ldurh	w13, [x8, #-6]
    861c:	cmp	x12, x13
    8620:	b.ne	85fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1348>  // b.any
    8624:	ldur	w9, [x8, #-4]
    8628:	mov	w0, #0x1                   	// #1
    862c:	str	w9, [x3]
    8630:	ldr	w9, [x8]
    8634:	str	w9, [x4]
    8638:	ldr	w8, [x8, #4]
    863c:	str	w8, [x5]
    8640:	ldr	x30, [sp], #16
    8644:	ret
    8648:	mov	w0, wzr
    864c:	ldr	x30, [sp], #16
    8650:	ret
    8654:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8658:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    865c:	add	x0, x0, #0x3a8
    8660:	add	x2, x2, #0x4eb
    8664:	mov	w1, #0x16f                 	// #367
    8668:	mov	x3, x10
    866c:	mov	x4, x11
    8670:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8674:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8678:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    867c:	add	x0, x0, #0x3a8
    8680:	add	x2, x2, #0x4d4
    8684:	mov	w1, #0x16e                 	// #366
    8688:	mov	w4, #0x1000                	// #4096
    868c:	mov	x3, x9
    8690:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8694:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8698:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    869c:	add	x0, x0, #0x3a8
    86a0:	add	x2, x2, #0x4d4
    86a4:	mov	w1, #0x16e                 	// #366
    86a8:	mov	w4, #0x1000                	// #4096
    86ac:	mov	x3, x8
    86b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    86b4:	str	x30, [sp, #-16]!
    86b8:	mov	x8, x1
    86bc:	cmp	x1, #0xfff
    86c0:	b.ls	8778 <__sanitizer_install_malloc_and_free_hooks@@Base+0x14c4>  // b.plast
    86c4:	ldr	x3, [x0]
    86c8:	and	x4, x8, #0xfffffffffffff000
    86cc:	cmp	x3, x4
    86d0:	b.ne	8798 <__sanitizer_install_malloc_and_free_hooks@@Base+0x14e4>  // b.any
    86d4:	ldr	x9, [x0, #8]
    86d8:	ubfx	x10, x8, #6, #6
    86dc:	mov	w11, #0x1                   	// #1
    86e0:	lsl	x11, x11, x10
    86e4:	tst	x9, x11
    86e8:	and	x9, x8, #0x3f
    86ec:	b.eq	8700 <__sanitizer_install_malloc_and_free_hooks@@Base+0x144c>  // b.none
    86f0:	add	x12, x0, x10, lsl #3
    86f4:	ldr	x12, [x12, #16]
    86f8:	lsr	x12, x12, x9
    86fc:	tbnz	w12, #0, 87b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x14fc>
    8700:	ldr	x12, [x0, #528]
    8704:	tst	x12, x11
    8708:	b.eq	8744 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1490>  // b.none
    870c:	add	x10, x0, x10, lsl #3
    8710:	ldr	x11, [x10, #536]
    8714:	mov	w12, #0x1                   	// #1
    8718:	lsl	x9, x12, x9
    871c:	orr	x9, x11, x9
    8720:	cmp	x9, x11
    8724:	str	x9, [x10, #536]
    8728:	b.ne	8760 <__sanitizer_install_malloc_and_free_hooks@@Base+0x14ac>  // b.any
    872c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8730:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8734:	add	x0, x0, #0x3a8
    8738:	add	x2, x2, #0x649
    873c:	mov	w1, #0xbf                  	// #191
    8740:	b	87c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1510>
    8744:	orr	x11, x12, x11
    8748:	add	x12, x0, #0x210
    874c:	mov	w13, #0x1                   	// #1
    8750:	add	x10, x12, x10, lsl #3
    8754:	lsl	x9, x13, x9
    8758:	str	x11, [x0, #528]
    875c:	str	x9, [x10, #8]
    8760:	and	x8, x8, #0xfff
    8764:	mov	w9, #0x208                 	// #520
    8768:	madd	x8, x8, x9, x0
    876c:	str	xzr, [x8, #1568]
    8770:	ldr	x30, [sp], #16
    8774:	ret
    8778:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    877c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8780:	add	x0, x0, #0x3a8
    8784:	add	x2, x2, #0x4d4
    8788:	mov	w1, #0x16e                 	// #366
    878c:	mov	w4, #0x1000                	// #4096
    8790:	mov	x3, x8
    8794:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8798:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    879c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    87a0:	add	x0, x0, #0x3a8
    87a4:	add	x2, x2, #0x4eb
    87a8:	mov	w1, #0x16f                 	// #367
    87ac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    87b0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    87b4:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    87b8:	add	x0, x0, #0x3a8
    87bc:	add	x2, x2, #0x620
    87c0:	mov	w1, #0xbe                  	// #190
    87c4:	mov	x3, xzr
    87c8:	mov	x4, xzr
    87cc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    87d0:	str	x30, [sp, #-16]!
    87d4:	add	x8, x0, #0x208, lsl #12
    87d8:	mov	w9, #0x208                 	// #520
    87dc:	str	xzr, [x8]
    87e0:	mul	x9, x1, x9
    87e4:	ldr	x10, [x0, x9]
    87e8:	mov	x3, x1
    87ec:	cbz	x10, 885c <__sanitizer_install_malloc_and_free_hooks@@Base+0x15a8>
    87f0:	mov	w12, #0x8008                	// #32776
    87f4:	mov	w9, #0x208                 	// #520
    87f8:	mov	x14, xzr
    87fc:	mov	w11, #0x1                   	// #1
    8800:	movk	w12, #0x20, lsl #16
    8804:	madd	x13, x3, x9, x0
    8808:	b	882c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1578>
    880c:	mov	x16, xzr
    8810:	str	xzr, [x14]
    8814:	add	x15, x13, x15, lsl #3
    8818:	ldr	x15, [x15, #8]
    881c:	orr	x15, x15, x16
    8820:	str	x15, [x14]
    8824:	mov	x14, x9
    8828:	cbz	x10, 8860 <__sanitizer_install_malloc_and_free_hooks@@Base+0x15ac>
    882c:	rbit	x9, x10
    8830:	clz	x15, x9
    8834:	lsl	x9, x11, x15
    8838:	add	x16, x0, x15, lsl #3
    883c:	bic	x10, x10, x9
    8840:	orr	x9, x9, x14
    8844:	cmp	x9, x14
    8848:	add	x14, x16, x12
    884c:	str	x9, [x8]
    8850:	b.ne	880c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1558>  // b.any
    8854:	ldr	x16, [x14]
    8858:	b	8814 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1560>
    885c:	mov	x9, xzr
    8860:	cmp	x3, #0x1, lsl #12
    8864:	str	xzr, [x8, #520]
    8868:	b.hi	8aa0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17ec>  // b.pmore
    886c:	lsr	x10, x3, #12
    8870:	mov	w13, #0x8208                	// #33288
    8874:	add	x11, x0, x10, lsl #3
    8878:	movk	w13, #0x20, lsl #16
    887c:	add	x14, x11, x13
    8880:	ldr	x15, [x14]
    8884:	lsr	x12, x3, #6
    8888:	mov	w13, #0x1                   	// #1
    888c:	lsl	x16, x13, x12
    8890:	ubfx	x11, x3, #6, #6
    8894:	tst	x15, x16
    8898:	and	x12, x3, #0x3f
    889c:	b.eq	88b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1604>  // b.none
    88a0:	add	x13, x0, x10, lsl #9
    88a4:	mov	w14, #0x8210                	// #33296
    88a8:	add	x13, x13, x11, lsl #3
    88ac:	movk	w14, #0x20, lsl #16
    88b0:	ldr	x13, [x13, x14]
    88b4:	b	88d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1624>
    88b8:	orr	x15, x15, x16
    88bc:	add	x16, x0, x10, lsl #9
    88c0:	str	x15, [x14]
    88c4:	mov	w15, #0x8210                	// #33296
    88c8:	mov	x13, xzr
    88cc:	add	x14, x16, x11, lsl #3
    88d0:	movk	w15, #0x20, lsl #16
    88d4:	str	xzr, [x14, x15]
    88d8:	add	x10, x0, x10, lsl #9
    88dc:	mov	w14, #0x1                   	// #1
    88e0:	add	x10, x10, x11, lsl #3
    88e4:	lsl	x11, x14, x12
    88e8:	mov	w12, #0x8210                	// #33296
    88ec:	orr	x11, x13, x11
    88f0:	movk	w12, #0x20, lsl #16
    88f4:	str	x11, [x10, x12]
    88f8:	cbz	x9, 8a14 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1760>
    88fc:	mov	w11, #0x8008                	// #32776
    8900:	mov	w12, #0x8210                	// #33296
    8904:	mov	w10, #0x1                   	// #1
    8908:	movk	w11, #0x20, lsl #16
    890c:	movk	w12, #0x20, lsl #16
    8910:	mov	w13, #0x208                 	// #520
    8914:	b	8920 <__sanitizer_install_malloc_and_free_hooks@@Base+0x166c>
    8918:	mov	x9, x14
    891c:	cbz	x9, 8a14 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1760>
    8920:	rbit	x14, x9
    8924:	clz	x15, x14
    8928:	lsl	x17, x10, x15
    892c:	add	x16, x0, x15, lsl #3
    8930:	bic	x14, x9, x17
    8934:	str	x14, [x8]
    8938:	add	x1, x16, x11
    893c:	ldr	x3, [x1]
    8940:	cbz	x3, 8a84 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17d0>
    8944:	rbit	x16, x3
    8948:	clz	x16, x16
    894c:	lsl	x18, x10, x16
    8950:	bics	x3, x3, x18
    8954:	str	x3, [x1]
    8958:	b.eq	8964 <__sanitizer_install_malloc_and_free_hooks@@Base+0x16b0>  // b.none
    895c:	orr	x14, x17, x9
    8960:	str	x14, [x8]
    8964:	ldr	x9, [x8, #520]
    8968:	tst	x9, x17
    896c:	b.eq	899c <__sanitizer_install_malloc_and_free_hooks@@Base+0x16e8>  // b.none
    8970:	add	x9, x0, x15, lsl #3
    8974:	ldr	x17, [x9, x12]
    8978:	orr	x18, x17, x18
    897c:	cmp	x18, x17
    8980:	str	x18, [x9, x12]
    8984:	b.eq	8918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1664>  // b.none
    8988:	orr	x15, x16, x15, lsl #6
    898c:	mul	x9, x15, x13
    8990:	ldr	x16, [x0, x9]
    8994:	cbnz	x16, 89e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
    8998:	b	8918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1664>
    899c:	orr	x9, x9, x17
    89a0:	add	x17, x0, x15, lsl #3
    89a4:	str	x9, [x8, #520]
    89a8:	str	x18, [x17, x12]
    89ac:	orr	x15, x16, x15, lsl #6
    89b0:	mul	x9, x15, x13
    89b4:	ldr	x16, [x0, x9]
    89b8:	cbnz	x16, 89e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1730>
    89bc:	b	8918 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1664>
    89c0:	mov	x18, xzr
    89c4:	str	xzr, [x14]
    89c8:	madd	x1, x15, x13, x0
    89cc:	add	x17, x1, x17, lsl #3
    89d0:	ldr	x17, [x17, #8]
    89d4:	orr	x17, x17, x18
    89d8:	str	x17, [x14]
    89dc:	mov	x14, x9
    89e0:	cbz	x16, 891c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1668>
    89e4:	rbit	x9, x16
    89e8:	clz	x17, x9
    89ec:	lsl	x9, x10, x17
    89f0:	add	x18, x0, x17, lsl #3
    89f4:	bic	x16, x16, x9
    89f8:	orr	x9, x9, x14
    89fc:	cmp	x9, x14
    8a00:	add	x14, x18, x11
    8a04:	str	x9, [x8]
    8a08:	b.ne	89c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x170c>  // b.any
    8a0c:	ldr	x18, [x14]
    8a10:	b	89c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1714>
    8a14:	ldr	x9, [x2]
    8a18:	ldr	x8, [x8, #520]
    8a1c:	ands	x9, x8, x9
    8a20:	b.eq	8a78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17c4>  // b.none
    8a24:	mov	w11, #0x8210                	// #33296
    8a28:	mov	w10, #0x1                   	// #1
    8a2c:	movk	w11, #0x20, lsl #16
    8a30:	b	8a3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1788>
    8a34:	bic	x9, x9, x12
    8a38:	cbz	x9, 8a78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x17c4>
    8a3c:	rbit	x12, x9
    8a40:	clz	x13, x12
    8a44:	lsl	x12, x10, x13
    8a48:	tst	x12, x8
    8a4c:	b.eq	8a34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1780>  // b.none
    8a50:	lsl	x13, x13, #3
    8a54:	add	x14, x2, x13
    8a58:	add	x13, x0, x13
    8a5c:	ldr	x14, [x14, #8]
    8a60:	ldr	x13, [x13, x11]
    8a64:	tst	x13, x14
    8a68:	b.eq	8a34 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1780>  // b.none
    8a6c:	mov	w0, #0x1                   	// #1
    8a70:	ldr	x30, [sp], #16
    8a74:	ret
    8a78:	mov	w0, wzr
    8a7c:	ldr	x30, [sp], #16
    8a80:	ret
    8a84:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8a88:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    8a8c:	add	x0, x0, #0x428
    8a90:	add	x2, x2, #0xddc
    8a94:	mov	w1, #0x31                  	// #49
    8a98:	mov	x4, xzr
    8a9c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8aa0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8aa4:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8aa8:	add	x0, x0, #0x428
    8aac:	add	x2, x2, #0x49e
    8ab0:	mov	w1, #0x144                 	// #324
    8ab4:	mov	w4, #0x1000                	// #4096
    8ab8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8abc:	str	x30, [sp, #-16]!
    8ac0:	add	x10, x0, #0x208, lsl #12
    8ac4:	str	xzr, [x10]
    8ac8:	ldr	x8, [x1]
    8acc:	cbz	x8, 8c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1984>
    8ad0:	mov	w13, #0x8008                	// #32776
    8ad4:	mov	x9, x2
    8ad8:	mov	x11, xzr
    8adc:	mov	w12, #0x1                   	// #1
    8ae0:	movk	w13, #0x20, lsl #16
    8ae4:	b	8b04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1850>
    8ae8:	mov	x16, xzr
    8aec:	str	xzr, [x15]
    8af0:	add	x14, x1, x14, lsl #3
    8af4:	ldr	x14, [x14, #8]
    8af8:	orr	x14, x14, x16
    8afc:	str	x14, [x15]
    8b00:	cbz	x8, 8b38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1884>
    8b04:	mov	x15, x11
    8b08:	rbit	x11, x8
    8b0c:	clz	x14, x11
    8b10:	lsl	x11, x12, x14
    8b14:	add	x16, x0, x14, lsl #3
    8b18:	bic	x8, x8, x11
    8b1c:	orr	x11, x11, x15
    8b20:	cmp	x11, x15
    8b24:	add	x15, x16, x13
    8b28:	str	x11, [x10]
    8b2c:	b.ne	8ae8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1834>  // b.any
    8b30:	ldr	x16, [x15]
    8b34:	b	8af0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x183c>
    8b38:	cmp	x9, #0x1, lsl #12
    8b3c:	b.hi	8c44 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1990>  // b.pmore
    8b40:	lsr	x16, x9, #6
    8b44:	mov	w17, #0x1                   	// #1
    8b48:	mov	w15, #0x8008                	// #32776
    8b4c:	mov	x8, xzr
    8b50:	lsr	x12, x9, #12
    8b54:	ubfx	x13, x9, #6, #6
    8b58:	mov	w14, #0x1                   	// #1
    8b5c:	movk	w15, #0x20, lsl #16
    8b60:	lsl	x16, x17, x16
    8b64:	lsl	x9, x17, x9
    8b68:	mov	w17, #0x208                 	// #520
    8b6c:	b	8b78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18c4>
    8b70:	ldr	x11, [x10]
    8b74:	cbz	x11, 8c38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1984>
    8b78:	rbit	x18, x11
    8b7c:	clz	x18, x18
    8b80:	lsl	x1, x14, x18
    8b84:	add	x2, x0, x18, lsl #3
    8b88:	bic	x5, x11, x1
    8b8c:	str	x5, [x10]
    8b90:	add	x2, x2, x15
    8b94:	ldr	x6, [x2]
    8b98:	cbz	x6, 8c74 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19c0>
    8b9c:	rbit	x5, x6
    8ba0:	clz	x5, x5
    8ba4:	lsl	x7, x14, x5
    8ba8:	bics	x6, x6, x7
    8bac:	str	x6, [x2]
    8bb0:	b.eq	8bbc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1908>  // b.none
    8bb4:	orr	x11, x1, x11
    8bb8:	str	x11, [x10]
    8bbc:	orr	x11, x5, x18, lsl #6
    8bc0:	madd	x18, x11, x17, x0
    8bc4:	add	x1, x18, x12, lsl #3
    8bc8:	ldr	x2, [x1]
    8bcc:	tst	x2, x16
    8bd0:	b.eq	8be8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1934>  // b.none
    8bd4:	madd	x18, x11, x17, x0
    8bd8:	add	x18, x18, x12, lsl #9
    8bdc:	add	x18, x18, x13, lsl #3
    8be0:	ldr	x18, [x18, #8]
    8be4:	b	8c04 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1950>
    8be8:	orr	x2, x2, x16
    8bec:	madd	x5, x11, x17, x0
    8bf0:	str	x2, [x1]
    8bf4:	add	x1, x5, x12, lsl #9
    8bf8:	mov	x18, xzr
    8bfc:	add	x1, x1, x13, lsl #3
    8c00:	str	xzr, [x1, #8]
    8c04:	madd	x2, x11, x17, x0
    8c08:	add	x2, x2, x12, lsl #9
    8c0c:	orr	x1, x18, x9
    8c10:	add	x2, x2, x13, lsl #3
    8c14:	cmp	x8, x4
    8c18:	str	x1, [x2, #8]
    8c1c:	b.cs	8b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18bc>  // b.hs, b.nlast
    8c20:	cmp	x1, x18
    8c24:	b.eq	8b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18bc>  // b.none
    8c28:	add	x18, x8, #0x1
    8c2c:	str	x11, [x3, x8, lsl #3]
    8c30:	mov	x8, x18
    8c34:	b	8b70 <__sanitizer_install_malloc_and_free_hooks@@Base+0x18bc>
    8c38:	mov	x0, x8
    8c3c:	ldr	x30, [sp], #16
    8c40:	ret
    8c44:	rbit	x8, x11
    8c48:	mov	w12, #0x1                   	// #1
    8c4c:	clz	x14, x8
    8c50:	mov	w13, #0x8008                	// #32776
    8c54:	lsl	x8, x12, x14
    8c58:	movk	w13, #0x20, lsl #16
    8c5c:	add	x12, x0, x14, lsl #3
    8c60:	bic	x14, x11, x8
    8c64:	str	x14, [x10]
    8c68:	add	x12, x12, x13
    8c6c:	ldr	x13, [x12]
    8c70:	cbnz	x13, 8c94 <__sanitizer_install_malloc_and_free_hooks@@Base+0x19e0>
    8c74:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8c78:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    8c7c:	add	x0, x0, #0x428
    8c80:	add	x2, x2, #0xddc
    8c84:	mov	w1, #0x31                  	// #49
    8c88:	mov	x3, xzr
    8c8c:	mov	x4, xzr
    8c90:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8c94:	rbit	x14, x13
    8c98:	clz	x14, x14
    8c9c:	mov	w15, #0x1                   	// #1
    8ca0:	lsl	x14, x15, x14
    8ca4:	bics	x13, x13, x14
    8ca8:	str	x13, [x12]
    8cac:	b.eq	8cb8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a04>  // b.none
    8cb0:	orr	x8, x8, x11
    8cb4:	str	x8, [x10]
    8cb8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8cbc:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8cc0:	add	x0, x0, #0x428
    8cc4:	add	x2, x2, #0x49e
    8cc8:	mov	w1, #0x144                 	// #324
    8ccc:	mov	w4, #0x1000                	// #4096
    8cd0:	mov	x3, x9
    8cd4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8cd8:	stp	x29, x30, [sp, #-96]!
    8cdc:	stp	x28, x27, [sp, #16]
    8ce0:	stp	x26, x25, [sp, #32]
    8ce4:	stp	x24, x23, [sp, #48]
    8ce8:	stp	x22, x21, [sp, #64]
    8cec:	stp	x20, x19, [sp, #80]
    8cf0:	cbz	x4, 8df4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b40>
    8cf4:	mov	x19, x1
    8cf8:	cmp	x1, #0x1, lsl #12
    8cfc:	str	x1, [x3]
    8d00:	b.hi	8e3c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b88>  // b.pmore
    8d04:	lsr	x8, x19, #12
    8d08:	ldr	x9, [x2, x8, lsl #3]
    8d0c:	lsr	x10, x19, #6
    8d10:	mov	x20, x2
    8d14:	mov	x21, x0
    8d18:	lsr	x9, x9, x10
    8d1c:	tbz	w9, #0, 8d40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a8c>
    8d20:	ubfx	x9, x19, #6, #6
    8d24:	add	x8, x20, x8, lsl #9
    8d28:	add	x8, x8, x9, lsl #3
    8d2c:	ldr	x8, [x8, #8]
    8d30:	lsr	x8, x8, x19
    8d34:	tbz	w8, #0, 8d40 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a8c>
    8d38:	mov	w0, #0x1                   	// #1
    8d3c:	b	8e00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b4c>
    8d40:	mov	w8, #0x208                 	// #520
    8d44:	mov	x25, xzr
    8d48:	mov	x28, xzr
    8d4c:	mov	x24, xzr
    8d50:	mov	x27, xzr
    8d54:	add	x22, x3, #0x8
    8d58:	sub	x23, x4, #0x1
    8d5c:	madd	x26, x19, x8, x21
    8d60:	mov	w29, #0x1                   	// #1
    8d64:	b	8dac <__sanitizer_install_malloc_and_free_hooks@@Base+0x1af8>
    8d68:	mov	x27, xzr
    8d6c:	rbit	x8, x25
    8d70:	clz	x8, x8
    8d74:	lsl	x9, x28, #6
    8d78:	lsl	x10, x29, x8
    8d7c:	add	x9, x9, x24, lsl #12
    8d80:	bic	x25, x25, x10
    8d84:	orr	x1, x8, x9
    8d88:	orr	x8, x25, x27
    8d8c:	cmp	x8, #0x0
    8d90:	mov	x0, x21
    8d94:	mov	x2, x20
    8d98:	mov	x3, x22
    8d9c:	mov	x4, x23
    8da0:	cinc	x24, x24, eq  // eq = none
    8da4:	bl	8cd8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1a24>
    8da8:	cbnz	x0, 8dfc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b48>
    8dac:	cbz	x27, 8db8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b04>
    8db0:	cbnz	x25, 8d6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ab8>
    8db4:	b	8dc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b14>
    8db8:	cbnz	x24, 8df4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b40>
    8dbc:	ldr	x27, [x26]
    8dc0:	cbz	x27, 8df4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b40>
    8dc4:	cbnz	x25, 8d68 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ab4>
    8dc8:	mov	w9, #0x208                 	// #520
    8dcc:	rbit	x8, x27
    8dd0:	madd	x9, x19, x9, x21
    8dd4:	clz	x28, x8
    8dd8:	add	x8, x9, x24, lsl #9
    8ddc:	add	x8, x8, x28, lsl #3
    8de0:	ldr	x25, [x8, #8]
    8de4:	cbz	x25, 8e1c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b68>
    8de8:	lsl	x8, x29, x28
    8dec:	bic	x27, x27, x8
    8df0:	b	8d6c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ab8>
    8df4:	mov	x0, xzr
    8df8:	b	8e00 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1b4c>
    8dfc:	add	x0, x0, #0x1
    8e00:	ldp	x20, x19, [sp, #80]
    8e04:	ldp	x22, x21, [sp, #64]
    8e08:	ldp	x24, x23, [sp, #48]
    8e0c:	ldp	x26, x25, [sp, #32]
    8e10:	ldp	x28, x27, [sp, #16]
    8e14:	ldp	x29, x30, [sp], #96
    8e18:	ret
    8e1c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8e20:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8e24:	add	x0, x0, #0x428
    8e28:	add	x2, x2, #0x553
    8e2c:	mov	w1, #0x133                 	// #307
    8e30:	mov	x3, xzr
    8e34:	mov	x4, xzr
    8e38:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8e3c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8e40:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8e44:	add	x0, x0, #0x428
    8e48:	add	x2, x2, #0x49e
    8e4c:	mov	w1, #0x144                 	// #324
    8e50:	mov	w4, #0x1000                	// #4096
    8e54:	mov	x3, x19
    8e58:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8e5c:	str	x30, [sp, #-16]!
    8e60:	ldr	x9, [x0, #520]
    8e64:	cmp	x9, x2
    8e68:	b.ne	8f38 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c84>  // b.any
    8e6c:	mov	x8, x1
    8e70:	cmp	x1, #0x1, lsl #12
    8e74:	b.hi	8f58 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ca4>  // b.pmore
    8e78:	lsr	x9, x8, #12
    8e7c:	ldr	x12, [x0, x9, lsl #3]
    8e80:	lsr	x10, x8, #6
    8e84:	mov	w13, #0x1                   	// #1
    8e88:	lsl	x13, x13, x10
    8e8c:	ubfx	x11, x8, #6, #6
    8e90:	tst	x12, x13
    8e94:	and	x10, x8, #0x3f
    8e98:	b.eq	8eec <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c38>  // b.none
    8e9c:	add	x9, x0, x9, lsl #9
    8ea0:	add	x9, x9, x11, lsl #3
    8ea4:	ldr	x11, [x9, #8]
    8ea8:	mov	w12, #0x1                   	// #1
    8eac:	lsl	x10, x12, x10
    8eb0:	orr	x10, x11, x10
    8eb4:	cmp	x10, x11
    8eb8:	str	x10, [x9, #8]
    8ebc:	b.ne	8f08 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1c54>  // b.any
    8ec0:	ldr	x3, [x0, #1040]
    8ec4:	cmp	x3, #0x40
    8ec8:	b.cs	8f98 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ce4>  // b.hs, b.nlast
    8ecc:	mov	w9, wzr
    8ed0:	add	x10, x3, #0x1
    8ed4:	add	x11, x0, x3, lsl #3
    8ed8:	str	x10, [x0, #1040]
    8edc:	str	x8, [x11, #528]
    8ee0:	mov	w0, w9
    8ee4:	ldr	x30, [sp], #16
    8ee8:	ret
    8eec:	orr	x12, x12, x13
    8ef0:	add	x13, x0, x9, lsl #9
    8ef4:	mov	w14, #0x1                   	// #1
    8ef8:	str	x12, [x0, x9, lsl #3]
    8efc:	add	x9, x13, x11, lsl #3
    8f00:	lsl	x10, x14, x10
    8f04:	str	x10, [x9, #8]
    8f08:	ldr	x9, [x0, #1560]
    8f0c:	cmp	x9, #0x40
    8f10:	b.cs	8f78 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1cc4>  // b.hs, b.nlast
    8f14:	add	x10, x9, #0x1
    8f18:	add	x9, x0, x9, lsl #3
    8f1c:	str	x10, [x0, #1560]
    8f20:	str	w8, [x9, #1048]
    8f24:	str	w3, [x9, #1052]
    8f28:	mov	w9, #0x1                   	// #1
    8f2c:	mov	w0, w9
    8f30:	ldr	x30, [sp], #16
    8f34:	ret
    8f38:	mov	x4, x2
    8f3c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f40:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f44:	add	x0, x0, #0x3a8
    8f48:	add	x2, x2, #0x4b4
    8f4c:	mov	w1, #0x3c                  	// #60
    8f50:	mov	x3, x9
    8f54:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8f58:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f5c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f60:	add	x0, x0, #0x428
    8f64:	add	x2, x2, #0x49e
    8f68:	mov	w1, #0x144                 	// #324
    8f6c:	mov	w4, #0x1000                	// #4096
    8f70:	mov	x3, x8
    8f74:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8f78:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f7c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f80:	add	x0, x0, #0x3a8
    8f84:	add	x2, x2, #0x5c0
    8f88:	mov	w1, #0x43                  	// #67
    8f8c:	mov	w4, #0x40                  	// #64
    8f90:	mov	x3, x9
    8f94:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8f98:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    8f9c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    8fa0:	add	x0, x0, #0x3a8
    8fa4:	add	x2, x2, #0x56d
    8fa8:	mov	w1, #0x3f                  	// #63
    8fac:	mov	w4, #0x40                  	// #64
    8fb0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    8fb4:	str	x30, [sp, #-16]!
    8fb8:	ldr	x8, [x0, #1040]
    8fbc:	mov	x3, x1
    8fc0:	cbz	x8, 900c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d58>
    8fc4:	mov	x10, x8
    8fc8:	subs	x9, x10, #0x1
    8fcc:	b.mi	900c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d58>  // b.first
    8fd0:	add	x10, x0, x10, lsl #3
    8fd4:	ldr	x10, [x10, #520]
    8fd8:	cmp	x10, x3
    8fdc:	mov	x10, x9
    8fe0:	b.ne	8fc8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1d14>  // b.any
    8fe4:	sub	x8, x8, #0x1
    8fe8:	add	x9, x0, x9, lsl #3
    8fec:	str	x8, [x0, #1040]
    8ff0:	add	x8, x0, x8, lsl #3
    8ff4:	ldr	x10, [x8, #528]
    8ff8:	ldr	x11, [x9, #528]
    8ffc:	str	x10, [x9, #528]
    9000:	str	x11, [x8, #528]
    9004:	ldr	x30, [sp], #16
    9008:	ret
    900c:	cmp	x3, #0x1, lsl #12
    9010:	b.hi	90c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e10>  // b.pmore
    9014:	lsr	x8, x3, #12
    9018:	ldr	x9, [x0, x8, lsl #3]
    901c:	lsr	x10, x3, #6
    9020:	mov	w11, #0x1                   	// #1
    9024:	lsl	x10, x11, x10
    9028:	tst	x9, x10
    902c:	b.eq	905c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1da8>  // b.none
    9030:	ubfx	x11, x3, #6, #6
    9034:	add	x12, x0, x8, lsl #9
    9038:	add	x13, x12, x11, lsl #3
    903c:	ldr	x11, [x13, #8]
    9040:	mov	w12, #0x1                   	// #1
    9044:	lsl	x12, x12, x3
    9048:	bics	x12, x11, x12
    904c:	str	x12, [x13, #8]
    9050:	b.eq	9064 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1db0>  // b.none
    9054:	cmp	x12, x11
    9058:	b.ne	9074 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dc0>  // b.any
    905c:	ldr	x30, [sp], #16
    9060:	ret
    9064:	bic	x9, x9, x10
    9068:	cmp	x12, x11
    906c:	str	x9, [x0, x8, lsl #3]
    9070:	b.eq	905c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1da8>  // b.none
    9074:	ldr	x8, [x0, #1560]
    9078:	cbz	x8, 905c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1da8>
    907c:	add	x9, x0, x8, lsl #3
    9080:	add	x9, x9, #0x418
    9084:	sub	x10, x8, #0x1
    9088:	tbnz	x10, #63, 905c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1da8>
    908c:	ldr	w11, [x9, #-8]!
    9090:	sub	x10, x10, #0x1
    9094:	cmp	w11, w3
    9098:	b.ne	9088 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1dd4>  // b.any
    909c:	add	x8, x0, x8, lsl #3
    90a0:	ldr	x10, [x8, #1040]
    90a4:	ldr	x11, [x9]
    90a8:	str	x10, [x9]
    90ac:	str	x11, [x8, #1040]
    90b0:	ldr	x8, [x0, #1560]
    90b4:	sub	x8, x8, #0x1
    90b8:	str	x8, [x0, #1560]
    90bc:	ldr	x30, [sp], #16
    90c0:	ret
    90c4:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    90c8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    90cc:	add	x0, x0, #0x428
    90d0:	add	x2, x2, #0x49e
    90d4:	mov	w1, #0x144                 	// #324
    90d8:	mov	w4, #0x1000                	// #4096
    90dc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    90e0:	mov	x8, x0
    90e4:	mov	w0, #0x2                   	// #2
    90e8:	mov	x2, x1
    90ec:	mov	x1, x8
    90f0:	mov	x3, xzr
    90f4:	mov	x4, xzr
    90f8:	b	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
    90fc:	stp	x30, x19, [sp, #-16]!
    9100:	mov	x19, x0
    9104:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    9108:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    910c:	add	x8, x8, #0x200
    9110:	mov	x2, x0
    9114:	mov	x0, x8
    9118:	mov	x1, x19
    911c:	ldp	x30, x19, [sp], #16
    9120:	b	f4bc <__sanitizer_set_report_fd@@Base+0x5c08>
    9124:	stp	x30, x21, [sp, #-32]!
    9128:	stp	x20, x19, [sp, #16]
    912c:	ldr	x8, [x0]
    9130:	ldrb	w3, [x8]
    9134:	cmp	x3, #0x1
    9138:	b.ne	921c <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f68>  // b.any
    913c:	ldr	w8, [x0, #8]
    9140:	mov	x19, x0
    9144:	sub	w8, w8, #0x1
    9148:	cmp	w8, #0x2
    914c:	b.cc	9210 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f5c>  // b.lo, b.ul, b.last
    9150:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
    9154:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9158:	ldr	x8, [x8, #3824]
    915c:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9160:	ldr	x9, [x9, #3816]
    9164:	ldr	x10, [x8]
    9168:	ldr	w8, [x19, #8]
    916c:	ldr	x9, [x9]
    9170:	cmp	x0, x10
    9174:	csel	x21, x9, x0, eq  // eq = none
    9178:	cmn	w8, #0x1
    917c:	b.eq	9194 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1ee0>  // b.none
    9180:	ldr	x9, [x19, #8208]
    9184:	cmp	x9, x21
    9188:	b.eq	9210 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f5c>  // b.none
    918c:	mov	w0, w8
    9190:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    9194:	bl	6f58 <__sanitizer_report_error_summary@@Base+0x570>
    9198:	mov	w8, #0x100c                	// #4108
    919c:	add	x20, x19, x8
    91a0:	add	x3, x19, #0xc
    91a4:	cbz	x0, 91d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f24>
    91a8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    91ac:	ldr	x8, [x8, #4056]
    91b0:	ldrb	w8, [x8, #48]
    91b4:	cbz	w8, 91d8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f24>
    91b8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    91bc:	mov	x4, x0
    91c0:	add	x2, x2, #0x674
    91c4:	mov	w1, #0x1000                	// #4096
    91c8:	mov	x0, x20
    91cc:	mov	x5, x21
    91d0:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    91d4:	b	91f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f3c>
    91d8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    91dc:	add	x2, x2, #0x677
    91e0:	mov	w1, #0x1000                	// #4096
    91e4:	mov	x0, x20
    91e8:	mov	x4, x21
    91ec:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    91f0:	mov	w1, #0x1                   	// #1
    91f4:	mov	x0, x20
    91f8:	mov	x2, xzr
    91fc:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
    9200:	cmn	w0, #0x1
    9204:	str	w0, [x19, #8]
    9208:	b.eq	9238 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1f84>  // b.none
    920c:	str	x21, [x19, #8208]
    9210:	ldp	x20, x19, [sp, #16]
    9214:	ldp	x30, x21, [sp], #32
    9218:	ret
    921c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9220:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9224:	add	x0, x0, #0x775
    9228:	add	x2, x2, #0x7c5
    922c:	mov	w1, #0x2b                  	// #43
    9230:	mov	w4, #0x1                   	// #1
    9234:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    9238:	adrp	x19, 23000 <__interceptor_sigaction@@Base+0xa44>
    923c:	add	x19, x19, #0x67e
    9240:	mov	x0, x19
    9244:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    9248:	mov	x2, x0
    924c:	mov	w0, #0x2                   	// #2
    9250:	mov	x1, x19
    9254:	mov	x3, xzr
    9258:	mov	x4, xzr
    925c:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
    9260:	mov	x0, x20
    9264:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    9268:	mov	x2, x0
    926c:	mov	w0, #0x2                   	// #2
    9270:	mov	x1, x20
    9274:	mov	x3, xzr
    9278:	mov	x4, xzr
    927c:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
    9280:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    9284:	sub	sp, sp, #0x30
    9288:	stp	x30, x21, [sp, #16]
    928c:	stp	x20, x19, [sp, #32]
    9290:	cbz	x1, 934c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2098>
    9294:	mov	x21, x0
    9298:	mov	x0, x1
    929c:	mov	x19, x1
    92a0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    92a4:	cmp	x0, #0xf9d
    92a8:	b.cs	935c <__sanitizer_install_malloc_and_free_hooks@@Base+0x20a8>  // b.hs, b.nlast
    92ac:	ldr	x20, [x21]
    92b0:	mov	w8, #0x1                   	// #1
    92b4:	ldaxrb	w9, [x20]
    92b8:	stlxrb	w10, w8, [x20]
    92bc:	cbnz	w10, 92b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2000>
    92c0:	cbz	w9, 92cc <__sanitizer_install_malloc_and_free_hooks@@Base+0x2018>
    92c4:	mov	x0, x20
    92c8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    92cc:	ldr	w0, [x21, #8]
    92d0:	add	w8, w0, #0x1
    92d4:	cmp	w8, #0x3
    92d8:	b.hi	92e4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2030>  // b.pmore
    92dc:	cmp	w8, #0x1
    92e0:	b.ne	92e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2034>  // b.any
    92e4:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    92e8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    92ec:	mov	w8, #0xffffffff            	// #-1
    92f0:	add	x1, x1, #0x6c5
    92f4:	mov	x0, x19
    92f8:	str	w8, [x21, #8]
    92fc:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    9300:	cbz	w0, 9334 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2080>
    9304:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9308:	add	x1, x1, #0x6cc
    930c:	mov	x0, x19
    9310:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    9314:	cbz	w0, 933c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2088>
    9318:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    931c:	add	x0, x21, #0xc
    9320:	add	x2, x2, #0x338
    9324:	mov	w1, #0x1000                	// #4096
    9328:	mov	x3, x19
    932c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    9330:	b	9344 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2090>
    9334:	mov	w8, #0x1                   	// #1
    9338:	b	9340 <__sanitizer_install_malloc_and_free_hooks@@Base+0x208c>
    933c:	mov	w8, #0x2                   	// #2
    9340:	str	w8, [x21, #8]
    9344:	dmb	ish
    9348:	strb	wzr, [x20]
    934c:	ldp	x20, x19, [sp, #32]
    9350:	ldp	x30, x21, [sp, #16]
    9354:	add	sp, sp, #0x30
    9358:	ret
    935c:	ldrb	w1, [x19]
    9360:	ldrb	w2, [x19, #1]
    9364:	ldrb	w3, [x19, #2]
    9368:	ldrb	w4, [x19, #3]
    936c:	ldrb	w5, [x19, #4]
    9370:	ldrb	w6, [x19, #5]
    9374:	ldrb	w7, [x19, #6]
    9378:	ldrb	w8, [x19, #7]
    937c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9380:	add	x0, x0, #0x697
    9384:	str	w8, [sp]
    9388:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    938c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    9390:	sub	sp, sp, #0x60
    9394:	stp	x30, x27, [sp, #16]
    9398:	stp	x26, x25, [sp, #32]
    939c:	stp	x24, x23, [sp, #48]
    93a0:	stp	x22, x21, [sp, #64]
    93a4:	stp	x20, x19, [sp, #80]
    93a8:	str	xzr, [x1]
    93ac:	str	xzr, [x2]
    93b0:	str	xzr, [x3]
    93b4:	cbz	x4, 94c0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x220c>
    93b8:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    93bc:	ldr	x25, [x25, #4016]
    93c0:	mov	x24, x0
    93c4:	mov	x20, x5
    93c8:	mov	x21, x4
    93cc:	ldr	x0, [x25]
    93d0:	mov	x23, x3
    93d4:	mov	x19, x2
    93d8:	mov	x22, x1
    93dc:	cbnz	x0, 93e8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2134>
    93e0:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    93e4:	str	x0, [x25]
    93e8:	cmp	x0, x21
    93ec:	adrp	x26, 23000 <__interceptor_sigaction@@Base+0xa44>
    93f0:	csel	x25, x0, x21, cc  // cc = lo, ul, last
    93f4:	add	x26, x26, #0x6d3
    93f8:	ldr	x0, [x22]
    93fc:	ldr	x1, [x19]
    9400:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    9404:	mov	x0, x25
    9408:	mov	x1, x26
    940c:	mov	w2, wzr
    9410:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    9414:	str	x0, [x22]
    9418:	mov	x0, x24
    941c:	mov	w1, wzr
    9420:	mov	x2, x20
    9424:	str	x25, [x19]
    9428:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
    942c:	cmn	w0, #0x1
    9430:	b.eq	94e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x222c>  // b.none
    9434:	mov	w27, w0
    9438:	mov	x8, xzr
    943c:	str	xzr, [x23]
    9440:	subs	x2, x25, x8
    9444:	b.ls	9484 <__sanitizer_install_malloc_and_free_hooks@@Base+0x21d0>  // b.plast
    9448:	ldr	x9, [x22]
    944c:	add	x3, sp, #0x8
    9450:	mov	w0, w27
    9454:	mov	x4, x20
    9458:	add	x1, x9, x8
    945c:	bl	f008 <__sanitizer_set_report_fd@@Base+0x5754>
    9460:	tbz	w0, #0, 949c <__sanitizer_install_malloc_and_free_hooks@@Base+0x21e8>
    9464:	ldr	x9, [sp, #8]
    9468:	ldr	x8, [x23]
    946c:	add	x8, x8, x9
    9470:	str	x8, [x23]
    9474:	cbz	x9, 94b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2204>
    9478:	cmp	x8, x21
    947c:	b.ne	9440 <__sanitizer_install_malloc_and_free_hooks@@Base+0x218c>  // b.any
    9480:	b	94b8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2204>
    9484:	mov	w0, w27
    9488:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    948c:	lsl	x8, x25, #1
    9490:	cmp	x8, x21
    9494:	csel	x25, x8, x21, cc  // cc = lo, ul, last
    9498:	b	93f8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2144>
    949c:	ldr	x0, [x22]
    94a0:	ldr	x1, [x19]
    94a4:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    94a8:	mov	w0, w27
    94ac:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    94b0:	mov	w0, wzr
    94b4:	b	94c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2210>
    94b8:	mov	w0, w27
    94bc:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    94c0:	mov	w0, #0x1                   	// #1
    94c4:	ldp	x20, x19, [sp, #80]
    94c8:	ldp	x22, x21, [sp, #64]
    94cc:	ldp	x24, x23, [sp, #48]
    94d0:	ldp	x26, x25, [sp, #32]
    94d4:	ldp	x30, x27, [sp, #16]
    94d8:	add	sp, sp, #0x60
    94dc:	ret
    94e0:	ldr	x0, [x22]
    94e4:	ldr	x1, [x19]
    94e8:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    94ec:	mov	w0, wzr
    94f0:	b	94c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2210>
    94f4:	sub	sp, sp, #0x50
    94f8:	stp	x30, x25, [sp, #16]
    94fc:	stp	x24, x23, [sp, #32]
    9500:	stp	x22, x21, [sp, #48]
    9504:	stp	x20, x19, [sp, #64]
    9508:	str	xzr, [x1, #16]
    950c:	cbz	x2, 9648 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2394>
    9510:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9514:	ldr	x24, [x24, #4016]
    9518:	mov	x22, x3
    951c:	mov	x21, x2
    9520:	mov	x19, x1
    9524:	ldr	x23, [x24]
    9528:	mov	x20, x0
    952c:	cbnz	x23, 953c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2288>
    9530:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    9534:	mov	x23, x0
    9538:	str	x0, [x24]
    953c:	mov	x0, x20
    9540:	mov	w1, wzr
    9544:	mov	x2, x22
    9548:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
    954c:	cmn	w0, #0x1
    9550:	b.eq	9658 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23a4>  // b.none
    9554:	mov	w24, w0
    9558:	mov	x20, xzr
    955c:	cmp	x20, x21
    9560:	b.cs	9600 <__sanitizer_install_malloc_and_free_hooks@@Base+0x234c>  // b.hs, b.nlast
    9564:	ldr	x8, [x19, #16]
    9568:	cmp	x20, x8
    956c:	b.cs	9578 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22c4>  // b.hs, b.nlast
    9570:	mov	x25, x8
    9574:	b	95c8 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2314>
    9578:	lsl	x9, x20, #1
    957c:	cmp	x23, x9
    9580:	csel	x9, x23, x9, hi  // hi = pmore
    9584:	cmp	x9, x21
    9588:	csel	x25, x9, x21, cc  // cc = lo, ul, last
    958c:	cmp	x8, x25
    9590:	b.cs	95c4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2310>  // b.hs, b.nlast
    9594:	ldr	x9, [x19, #8]
    9598:	cmp	x9, x25
    959c:	b.cs	95b0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x22fc>  // b.hs, b.nlast
    95a0:	mov	x0, x19
    95a4:	mov	x1, x25
    95a8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    95ac:	ldr	x8, [x19, #16]
    95b0:	ldr	x9, [x19]
    95b4:	sub	x2, x25, x8
    95b8:	mov	w1, wzr
    95bc:	add	x0, x9, x8
    95c0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    95c4:	str	x25, [x19, #16]
    95c8:	subs	x2, x25, x20
    95cc:	b.ls	9674 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23c0>  // b.plast
    95d0:	cmp	x25, x21
    95d4:	b.hi	9694 <__sanitizer_install_malloc_and_free_hooks@@Base+0x23e0>  // b.pmore
    95d8:	ldr	x8, [x19]
    95dc:	add	x3, sp, #0x8
    95e0:	mov	w0, w24
    95e4:	mov	x4, x22
    95e8:	add	x1, x8, x20
    95ec:	bl	f008 <__sanitizer_set_report_fd@@Base+0x5754>
    95f0:	tbz	w0, #0, 9650 <__sanitizer_install_malloc_and_free_hooks@@Base+0x239c>
    95f4:	ldr	x8, [sp, #8]
    95f8:	add	x20, x8, x20
    95fc:	cbnz	x8, 955c <__sanitizer_install_malloc_and_free_hooks@@Base+0x22a8>
    9600:	mov	w0, w24
    9604:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    9608:	ldr	x8, [x19, #16]
    960c:	cmp	x8, x20
    9610:	b.cs	9644 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2390>  // b.hs, b.nlast
    9614:	ldr	x9, [x19, #8]
    9618:	cmp	x9, x20
    961c:	b.cs	9630 <__sanitizer_install_malloc_and_free_hooks@@Base+0x237c>  // b.hs, b.nlast
    9620:	mov	x0, x19
    9624:	mov	x1, x20
    9628:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    962c:	ldr	x8, [x19, #16]
    9630:	ldr	x9, [x19]
    9634:	sub	x2, x20, x8
    9638:	mov	w1, wzr
    963c:	add	x0, x9, x8
    9640:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    9644:	str	x20, [x19, #16]
    9648:	mov	w0, #0x1                   	// #1
    964c:	b	965c <__sanitizer_install_malloc_and_free_hooks@@Base+0x23a8>
    9650:	mov	w0, w24
    9654:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
    9658:	mov	w0, wzr
    965c:	ldp	x20, x19, [sp, #64]
    9660:	ldp	x22, x21, [sp, #48]
    9664:	ldp	x24, x23, [sp, #32]
    9668:	ldp	x30, x25, [sp, #16]
    966c:	add	sp, sp, #0x50
    9670:	ret
    9674:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9678:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    967c:	add	x0, x0, #0x6e4
    9680:	add	x2, x2, #0x735
    9684:	mov	w1, #0x99                  	// #153
    9688:	mov	x3, x20
    968c:	mov	x4, x25
    9690:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    9694:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9698:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    969c:	add	x0, x0, #0x6e4
    96a0:	add	x2, x2, #0x755
    96a4:	mov	w1, #0x9a                  	// #154
    96a8:	mov	x3, x25
    96ac:	mov	x4, x21
    96b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    96b4:	sub	sp, sp, #0x60
    96b8:	stp	x30, x25, [sp, #32]
    96bc:	stp	x24, x23, [sp, #48]
    96c0:	stp	x22, x21, [sp, #64]
    96c4:	stp	x20, x19, [sp, #80]
    96c8:	mov	x19, x0
    96cc:	bl	d110 <__sanitizer_set_report_fd@@Base+0x385c>
    96d0:	tbz	w0, #0, 96f0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x243c>
    96d4:	mov	x0, x19
    96d8:	ldp	x20, x19, [sp, #80]
    96dc:	ldp	x22, x21, [sp, #64]
    96e0:	ldp	x24, x23, [sp, #48]
    96e4:	ldp	x30, x25, [sp, #32]
    96e8:	add	sp, sp, #0x60
    96ec:	b	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    96f0:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
    96f4:	add	x0, x0, #0xa15
    96f8:	bl	d1f0 <__sanitizer_set_report_fd@@Base+0x393c>
    96fc:	cbz	x0, 9830 <__sanitizer_install_malloc_and_free_hooks@@Base+0x257c>
    9700:	mov	x21, x0
    9704:	mov	x0, x19
    9708:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    970c:	mov	x20, x0
    9710:	add	x0, sp, #0x8
    9714:	mov	w1, #0x1000                	// #4096
    9718:	stp	xzr, xzr, [sp, #16]
    971c:	str	xzr, [sp, #8]
    9720:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    9724:	ldr	x8, [sp, #24]
    9728:	cmp	x8, #0xfff
    972c:	b.hi	9764 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24b0>  // b.pmore
    9730:	ldr	x9, [sp, #16]
    9734:	cmp	x9, #0xfff
    9738:	b.hi	974c <__sanitizer_install_malloc_and_free_hooks@@Base+0x2498>  // b.pmore
    973c:	add	x0, sp, #0x8
    9740:	mov	w1, #0x1000                	// #4096
    9744:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    9748:	ldr	x8, [sp, #24]
    974c:	ldr	x9, [sp, #8]
    9750:	mov	w10, #0x1000                	// #4096
    9754:	sub	x2, x10, x8
    9758:	mov	w1, wzr
    975c:	add	x0, x9, x8
    9760:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    9764:	mov	w8, #0x1000                	// #4096
    9768:	add	x24, x20, #0x2
    976c:	mov	w25, #0x2f                  	// #47
    9770:	str	x8, [sp, #24]
    9774:	b	9784 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24d0>
    9778:	ldrb	w8, [x22], #1
    977c:	mov	x21, x22
    9780:	cbz	w8, 9820 <__sanitizer_install_malloc_and_free_hooks@@Base+0x256c>
    9784:	mov	w1, #0x3a                  	// #58
    9788:	mov	x0, x21
    978c:	bl	c1d8 <__sanitizer_set_report_fd@@Base+0x2924>
    9790:	sub	x23, x0, x21
    9794:	add	x8, x24, x23
    9798:	mov	x22, x0
    979c:	cmp	x8, #0x1, lsl #12
    97a0:	b.hi	9778 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24c4>  // b.pmore
    97a4:	ldr	x0, [sp, #8]
    97a8:	mov	x1, x21
    97ac:	mov	x2, x23
    97b0:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    97b4:	ldr	x4, [sp, #24]
    97b8:	cmp	x4, x23
    97bc:	b.ls	9850 <__sanitizer_install_malloc_and_free_hooks@@Base+0x259c>  // b.plast
    97c0:	ldr	x8, [sp, #8]
    97c4:	add	x21, x23, #0x1
    97c8:	strb	w25, [x8, x23]
    97cc:	ldr	x4, [sp, #24]
    97d0:	cmp	x4, x21
    97d4:	b.ls	986c <__sanitizer_install_malloc_and_free_hooks@@Base+0x25b8>  // b.plast
    97d8:	ldr	x8, [sp, #8]
    97dc:	mov	x1, x19
    97e0:	mov	x2, x20
    97e4:	add	x0, x8, x21
    97e8:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    97ec:	ldr	x4, [sp, #24]
    97f0:	add	x3, x21, x20
    97f4:	cmp	x4, x3
    97f8:	b.ls	9888 <__sanitizer_install_malloc_and_free_hooks@@Base+0x25d4>  // b.plast
    97fc:	ldr	x8, [sp, #8]
    9800:	strb	wzr, [x8, x3]
    9804:	ldr	x0, [sp, #8]
    9808:	bl	d110 <__sanitizer_set_report_fd@@Base+0x385c>
    980c:	tbz	w0, #0, 9778 <__sanitizer_install_malloc_and_free_hooks@@Base+0x24c4>
    9810:	ldr	x0, [sp, #8]
    9814:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    9818:	mov	x19, x0
    981c:	b	9824 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2570>
    9820:	mov	x19, xzr
    9824:	ldp	x0, x1, [sp, #8]
    9828:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    982c:	b	9834 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2580>
    9830:	mov	x19, xzr
    9834:	mov	x0, x19
    9838:	ldp	x20, x19, [sp, #80]
    983c:	ldp	x22, x21, [sp, #64]
    9840:	ldp	x24, x23, [sp, #48]
    9844:	ldp	x30, x25, [sp, #32]
    9848:	add	sp, sp, #0x60
    984c:	ret
    9850:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    9854:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9858:	add	x0, x0, #0xbf8
    985c:	add	x2, x2, #0x7fd
    9860:	mov	w1, #0x1c5                 	// #453
    9864:	mov	x3, x23
    9868:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    986c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    9870:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9874:	add	x0, x0, #0xbf8
    9878:	add	x2, x2, #0x7fd
    987c:	mov	w1, #0x1c5                 	// #453
    9880:	mov	x3, x21
    9884:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    9888:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    988c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9890:	add	x0, x0, #0xbf8
    9894:	add	x2, x2, #0x7fd
    9898:	mov	w1, #0x1c5                 	// #453
    989c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

00000000000098a0 <__sanitizer_set_report_path@@Base>:
    98a0:	adrp	x8, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    98a4:	add	x8, x8, #0x200
    98a8:	mov	x1, x0
    98ac:	mov	x0, x8
    98b0:	b	9284 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1fd0>

00000000000098b4 <__sanitizer_set_report_fd@@Base>:
    98b4:	stp	x30, x19, [sp, #-16]!
    98b8:	adrp	x19, 42000 <__interceptor_sigaction@@Base+0x1fa44>
    98bc:	add	x19, x19, #0x208
    98c0:	str	w0, [x19]
    98c4:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
    98c8:	str	x0, [x19, #8200]
    98cc:	ldp	x30, x19, [sp], #16
    98d0:	ret
    98d4:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
    98d8:	mov	x10, #0x10000               	// #65536
    98dc:	add	x9, x9, #0x562
    98e0:	movk	x10, #0x1, lsl #32
    98e4:	stp	x9, x10, [x0, #24]
    98e8:	adrp	x9, 23000 <__interceptor_sigaction@@Base+0xa44>
    98ec:	movi	v0.2d, #0x0
    98f0:	stp	q0, q0, [x0, #128]
    98f4:	ldr	q0, [x9, #2064]
    98f8:	adrp	x11, 23000 <__interceptor_sigaction@@Base+0xa44>
    98fc:	adrp	x10, 23000 <__interceptor_sigaction@@Base+0xa44>
    9900:	mov	w9, #0x101                 	// #257
    9904:	add	x11, x11, #0x6cc
    9908:	stur	q0, [x0, #72]
    990c:	ldr	d0, [x10, #2096]
    9910:	adrp	x10, 23000 <__interceptor_sigaction@@Base+0xa44>
    9914:	strh	w9, [x0, #96]
    9918:	mov	w9, #0x1388                	// #5000
    991c:	str	x11, [x0, #40]
    9920:	mov	w11, #0x10000               	// #65536
    9924:	add	x10, x10, #0x838
    9928:	str	w9, [x0, #164]
    992c:	mov	w9, #0x100                 	// #256
    9930:	stp	x11, x10, [x0, #104]
    9934:	adrp	x10, 23000 <__interceptor_sigaction@@Base+0xa44>
    9938:	movk	w9, #0x101, lsl #16
    993c:	add	x10, x10, #0xd35
    9940:	str	w9, [x0, #184]
    9944:	adrp	x9, 23000 <__interceptor_sigaction@@Base+0xa44>
    9948:	str	x10, [x0, #176]
    994c:	adrp	x10, 23000 <__interceptor_sigaction@@Base+0xa44>
    9950:	str	d0, [x0, #88]
    9954:	ldr	q0, [x9, #2080]
    9958:	mov	w8, #0x1                   	// #1
    995c:	add	x10, x10, #0x83d
    9960:	mov	x12, #0x10100000000         	// #1103806595072
    9964:	strb	w8, [x0]
    9968:	strb	w8, [x0, #60]
    996c:	strb	w8, [x0, #68]
    9970:	strb	w8, [x0, #98]
    9974:	strh	w8, [x0, #168]
    9978:	strh	w8, [x0, #188]
    997c:	mov	x8, #0x1                   	// #1
    9980:	str	x10, [x0, #200]
    9984:	adrp	x10, 23000 <__interceptor_sigaction@@Base+0xa44>
    9988:	movk	x12, #0x1, lsl #48
    998c:	movk	x8, #0x100, lsl #32
    9990:	add	x10, x10, #0x845
    9994:	mov	w9, #0x100                 	// #256
    9998:	str	xzr, [x0, #8]
    999c:	strb	wzr, [x0, #16]
    99a0:	strh	wzr, [x0, #48]
    99a4:	str	wzr, [x0, #64]
    99a8:	stur	x12, [x0, #52]
    99ac:	strh	wzr, [x0, #120]
    99b0:	strb	wzr, [x0, #122]
    99b4:	strb	wzr, [x0, #160]
    99b8:	str	wzr, [x0, #192]
    99bc:	stp	x8, x10, [x0, #224]
    99c0:	str	q0, [x0, #208]
    99c4:	str	w9, [x0, #240]
    99c8:	ret
    99cc:	mov	w2, #0xf8                  	// #248
    99d0:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    99d4:	sub	sp, sp, #0x80
    99d8:	stp	x29, x30, [sp, #32]
    99dc:	stp	x28, x27, [sp, #48]
    99e0:	stp	x26, x25, [sp, #64]
    99e4:	stp	x24, x23, [sp, #80]
    99e8:	stp	x22, x21, [sp, #96]
    99ec:	stp	x20, x19, [sp, #112]
    99f0:	add	x8, x1, x2
    99f4:	sub	x21, x8, #0x1
    99f8:	cmp	x21, x1
    99fc:	mov	x20, x1
    9a00:	cset	w9, hi  // hi = pmore
    9a04:	b.ls	9c40 <__sanitizer_set_report_fd@@Base+0x38c>  // b.plast
    9a08:	ldrb	w8, [x0]
    9a0c:	mov	x19, x0
    9a10:	cbz	w8, 9c40 <__sanitizer_set_report_fd@@Base+0x38c>
    9a14:	add	x9, x2, x20
    9a18:	mov	x22, sp
    9a1c:	mov	w23, #0x6667                	// #26215
    9a20:	movk	w23, #0x6666, lsl #16
    9a24:	mov	w24, #0xa                   	// #10
    9a28:	mov	x25, #0xfffffffffffffffe    	// #-2
    9a2c:	sub	x26, x9, #0x3
    9a30:	add	x27, x22, #0x30
    9a34:	add	x28, x22, #0x20
    9a38:	mov	w29, #0x25                  	// #37
    9a3c:	b	9a5c <__sanitizer_set_report_fd@@Base+0x1a8>
    9a40:	strb	w8, [x20], #1
    9a44:	mov	x19, x9
    9a48:	cmp	x20, x21
    9a4c:	cset	w9, cc  // cc = lo, ul, last
    9a50:	b.cs	9c40 <__sanitizer_set_report_fd@@Base+0x38c>  // b.hs, b.nlast
    9a54:	ldrb	w8, [x19]
    9a58:	cbz	w8, 9c40 <__sanitizer_set_report_fd@@Base+0x38c>
    9a5c:	and	w9, w8, #0xff
    9a60:	cmp	w9, #0x25
    9a64:	add	x9, x19, #0x1
    9a68:	b.ne	9a40 <__sanitizer_set_report_fd@@Base+0x18c>  // b.any
    9a6c:	ldrb	w8, [x9]
    9a70:	cmp	w8, #0x70
    9a74:	b.eq	9ac4 <__sanitizer_set_report_fd@@Base+0x210>  // b.none
    9a78:	cmp	w8, #0x62
    9a7c:	b.ne	9c10 <__sanitizer_set_report_fd@@Base+0x35c>  // b.any
    9a80:	bl	6f58 <__sanitizer_report_error_summary@@Base+0x570>
    9a84:	cbz	x0, 9c68 <__sanitizer_set_report_fd@@Base+0x3b4>
    9a88:	cmp	x20, x21
    9a8c:	b.cs	9ab0 <__sanitizer_set_report_fd@@Base+0x1fc>  // b.hs, b.nlast
    9a90:	ldrb	w9, [x0]
    9a94:	cbz	w9, 9ab0 <__sanitizer_set_report_fd@@Base+0x1fc>
    9a98:	add	x8, x0, #0x1
    9a9c:	strb	w9, [x20], #1
    9aa0:	ldrb	w9, [x8], #1
    9aa4:	cmp	x20, x21
    9aa8:	b.cs	9ab0 <__sanitizer_set_report_fd@@Base+0x1fc>  // b.hs, b.nlast
    9aac:	cbnz	w9, 9a9c <__sanitizer_set_report_fd@@Base+0x1e8>
    9ab0:	add	x19, x19, #0x2
    9ab4:	cmp	x20, x21
    9ab8:	cset	w9, cc  // cc = lo, ul, last
    9abc:	b.cc	9a54 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
    9ac0:	b	9c40 <__sanitizer_set_report_fd@@Base+0x38c>
    9ac4:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
    9ac8:	mov	x13, xzr
    9acc:	mov	x11, #0xfffffffffffffffe    	// #-2
    9ad0:	mov	x8, x27
    9ad4:	mov	x9, x8
    9ad8:	smull	x8, w0, w23
    9adc:	add	w14, w0, #0x9
    9ae0:	cmp	w14, #0x12
    9ae4:	lsr	x14, x8, #63
    9ae8:	asr	x8, x8, #34
    9aec:	add	w15, w8, w14
    9af0:	mov	x12, x13
    9af4:	msub	w8, w15, w24, w0
    9af8:	sub	x13, x13, #0x1
    9afc:	add	x10, x22, x12
    9b00:	add	x11, x11, #0x1
    9b04:	add	w14, w8, #0x30
    9b08:	sub	x8, x9, #0x1
    9b0c:	mov	w0, w15
    9b10:	strb	w14, [x10, #31]
    9b14:	b.hi	9ad4 <__sanitizer_set_report_fd@@Base+0x220>  // b.pmore
    9b18:	add	x10, x13, #0x1
    9b1c:	cmp	x10, #0x0
    9b20:	b.gt	9c28 <__sanitizer_set_report_fd@@Base+0x374>
    9b24:	cmp	x20, x21
    9b28:	b.cs	9c28 <__sanitizer_set_report_fd@@Base+0x374>  // b.hs, b.nlast
    9b2c:	mov	x8, x20
    9b30:	strb	w14, [x8], #1
    9b34:	tbz	x10, #63, 9c2c <__sanitizer_set_report_fd@@Base+0x378>
    9b38:	cmp	x8, x21
    9b3c:	b.cs	9c2c <__sanitizer_set_report_fd@@Base+0x378>  // b.hs, b.nlast
    9b40:	sub	x15, x26, x20
    9b44:	sub	x16, x25, x13
    9b48:	cmp	x15, x16
    9b4c:	csel	x14, x15, x16, cc  // cc = lo, ul, last
    9b50:	add	x14, x14, #0x1
    9b54:	cmp	x14, #0x20
    9b58:	b.cc	9bf0 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
    9b5c:	cmp	x15, x16
    9b60:	csel	x16, x15, x16, cc  // cc = lo, ul, last
    9b64:	cmp	x15, x11
    9b68:	csel	x17, x15, x11, cc  // cc = lo, ul, last
    9b6c:	add	x17, x22, x17
    9b70:	add	x17, x17, x13
    9b74:	add	x17, x17, #0x22
    9b78:	cmp	x8, x17
    9b7c:	b.cs	9b98 <__sanitizer_set_report_fd@@Base+0x2e4>  // b.hs, b.nlast
    9b80:	add	x16, x20, x16
    9b84:	add	x17, x22, x13
    9b88:	add	x16, x16, #0x2
    9b8c:	add	x17, x17, #0x21
    9b90:	cmp	x17, x16
    9b94:	b.cc	9bf0 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
    9b98:	cmp	x15, x11
    9b9c:	mvn	x10, x12
    9ba0:	csel	x11, x15, x11, cc  // cc = lo, ul, last
    9ba4:	cmp	x15, x10
    9ba8:	add	x10, x11, #0x1
    9bac:	csinv	x11, x15, x12, cc  // cc = lo, ul, last
    9bb0:	and	x10, x10, #0xffffffffffffffe0
    9bb4:	and	x16, x14, #0xffffffffffffffe0
    9bb8:	add	x11, x11, #0x1
    9bbc:	add	x10, x10, x13
    9bc0:	add	x17, x20, #0x11
    9bc4:	add	x8, x8, x16
    9bc8:	add	x10, x10, #0x1
    9bcc:	and	x11, x11, #0xffffffffffffffe0
    9bd0:	ldp	q0, q1, [x9, #-16]
    9bd4:	add	x9, x9, #0x20
    9bd8:	subs	x11, x11, #0x20
    9bdc:	stp	q0, q1, [x17, #-16]
    9be0:	add	x17, x17, #0x20
    9be4:	b.ne	9bd0 <__sanitizer_set_report_fd@@Base+0x31c>  // b.any
    9be8:	cmp	x14, x16
    9bec:	b.eq	9c2c <__sanitizer_set_report_fd@@Base+0x378>  // b.none
    9bf0:	ldrb	w9, [x28, x10]
    9bf4:	cmn	x10, #0x2
    9bf8:	strb	w9, [x8], #1
    9bfc:	b.gt	9c2c <__sanitizer_set_report_fd@@Base+0x378>
    9c00:	cmp	x8, x21
    9c04:	add	x10, x10, #0x1
    9c08:	b.cc	9bf0 <__sanitizer_set_report_fd@@Base+0x33c>  // b.lo, b.ul, b.last
    9c0c:	b	9c2c <__sanitizer_set_report_fd@@Base+0x378>
    9c10:	strb	w29, [x20], #1
    9c14:	mov	x19, x9
    9c18:	cmp	x20, x21
    9c1c:	cset	w9, cc  // cc = lo, ul, last
    9c20:	b.cc	9a54 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
    9c24:	b	9c40 <__sanitizer_set_report_fd@@Base+0x38c>
    9c28:	mov	x8, x20
    9c2c:	add	x19, x19, #0x2
    9c30:	mov	x20, x8
    9c34:	cmp	x20, x21
    9c38:	cset	w9, cc  // cc = lo, ul, last
    9c3c:	b.cc	9a54 <__sanitizer_set_report_fd@@Base+0x1a0>  // b.lo, b.ul, b.last
    9c40:	tbz	w9, #0, 9c80 <__sanitizer_set_report_fd@@Base+0x3cc>
    9c44:	strb	wzr, [x20]
    9c48:	ldp	x20, x19, [sp, #112]
    9c4c:	ldp	x22, x21, [sp, #96]
    9c50:	ldp	x24, x23, [sp, #80]
    9c54:	ldp	x26, x25, [sp, #64]
    9c58:	ldp	x28, x27, [sp, #48]
    9c5c:	ldp	x29, x30, [sp, #32]
    9c60:	add	sp, sp, #0x80
    9c64:	ret
    9c68:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9c6c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9c70:	add	x0, x0, #0x84c
    9c74:	add	x2, x2, #0x89e
    9c78:	mov	w1, #0x2f                  	// #47
    9c7c:	b	9c94 <__sanitizer_set_report_fd@@Base+0x3e0>
    9c80:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    9c84:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    9c88:	add	x0, x0, #0x84c
    9c8c:	add	x2, x2, #0x8ae
    9c90:	mov	w1, #0x47                  	// #71
    9c94:	mov	x3, xzr
    9c98:	mov	x4, xzr
    9c9c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    9ca0:	str	x30, [sp, #-48]!
    9ca4:	stp	x22, x21, [sp, #16]
    9ca8:	stp	x20, x19, [sp, #32]
    9cac:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9cb0:	ldr	x20, [x20, #3752]
    9cb4:	mov	x19, x0
    9cb8:	mov	w1, #0x20                  	// #32
    9cbc:	mov	x0, x20
    9cc0:	bl	501c <__sancov_default_options@plt+0x69c>
    9cc4:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9cc8:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
    9ccc:	add	x21, x21, #0x718
    9cd0:	add	x22, x22, #0x562
    9cd4:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9cd8:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9cdc:	mov	x2, x0
    9ce0:	strb	wzr, [x0, #16]
    9ce4:	stp	x21, x19, [x0]
    9ce8:	str	x22, [x0, #24]
    9cec:	add	x1, x1, #0x8cb
    9cf0:	add	x3, x3, #0x8d3
    9cf4:	mov	x0, x19
    9cf8:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9cfc:	mov	w1, #0x20                  	// #32
    9d00:	mov	x0, x20
    9d04:	bl	501c <__sancov_default_options@plt+0x69c>
    9d08:	mov	w8, #0x1                   	// #1
    9d0c:	stp	x21, x19, [x0]
    9d10:	strb	w8, [x0, #16]
    9d14:	str	x22, [x0, #24]
    9d18:	mov	x2, x0
    9d1c:	mov	x0, x19
    9d20:	ldp	x20, x19, [sp, #32]
    9d24:	ldp	x22, x21, [sp, #16]
    9d28:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9d2c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9d30:	add	x1, x1, #0x8f9
    9d34:	add	x3, x3, #0x90b
    9d38:	ldr	x30, [sp], #48
    9d3c:	b	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9d40:	str	x30, [sp, #-80]!
    9d44:	stp	x26, x25, [sp, #16]
    9d48:	stp	x24, x23, [sp, #32]
    9d4c:	stp	x22, x21, [sp, #48]
    9d50:	stp	x20, x19, [sp, #64]
    9d54:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9d58:	ldr	x20, [x20, #3752]
    9d5c:	mov	x21, x1
    9d60:	mov	x19, x0
    9d64:	mov	w1, #0x10                  	// #16
    9d68:	mov	x0, x20
    9d6c:	bl	501c <__sancov_default_options@plt+0x69c>
    9d70:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9d74:	add	x22, x22, #0x738
    9d78:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9d7c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9d80:	mov	x2, x0
    9d84:	stp	x22, x21, [x0]
    9d88:	add	x1, x1, #0x940
    9d8c:	add	x3, x3, #0x94a
    9d90:	mov	x0, x19
    9d94:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9d98:	mov	w1, #0x10                  	// #16
    9d9c:	mov	x0, x20
    9da0:	add	x24, x21, #0x8
    9da4:	bl	501c <__sancov_default_options@plt+0x69c>
    9da8:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9dac:	add	x23, x23, #0x758
    9db0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9db4:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9db8:	mov	x2, x0
    9dbc:	stp	x23, x24, [x0]
    9dc0:	add	x1, x1, #0x9bc
    9dc4:	add	x3, x3, #0x9d5
    9dc8:	mov	x0, x19
    9dcc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9dd0:	mov	w1, #0x10                  	// #16
    9dd4:	mov	x0, x20
    9dd8:	add	x24, x21, #0x10
    9ddc:	bl	501c <__sancov_default_options@plt+0x69c>
    9de0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9de4:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9de8:	mov	x2, x0
    9dec:	stp	x22, x24, [x0]
    9df0:	add	x1, x1, #0xa2b
    9df4:	add	x3, x3, #0xa3b
    9df8:	mov	x0, x19
    9dfc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9e00:	mov	w1, #0x10                  	// #16
    9e04:	mov	x0, x20
    9e08:	add	x24, x21, #0x18
    9e0c:	bl	501c <__sancov_default_options@plt+0x69c>
    9e10:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e14:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e18:	mov	x2, x0
    9e1c:	stp	x23, x24, [x0]
    9e20:	add	x1, x1, #0xad5
    9e24:	add	x3, x3, #0xae7
    9e28:	mov	x0, x19
    9e2c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9e30:	mov	w1, #0x10                  	// #16
    9e34:	mov	x0, x20
    9e38:	add	x24, x21, #0x20
    9e3c:	bl	501c <__sancov_default_options@plt+0x69c>
    9e40:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e44:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e48:	mov	x2, x0
    9e4c:	stp	x22, x24, [x0]
    9e50:	add	x1, x1, #0xb1c
    9e54:	add	x3, x3, #0xb31
    9e58:	mov	x0, x19
    9e5c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9e60:	mov	w1, #0x10                  	// #16
    9e64:	mov	x0, x20
    9e68:	add	x24, x21, #0x21
    9e6c:	bl	501c <__sancov_default_options@plt+0x69c>
    9e70:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e74:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9e78:	mov	x2, x0
    9e7c:	stp	x22, x24, [x0]
    9e80:	add	x1, x1, #0xb85
    9e84:	add	x3, x3, #0xb9a
    9e88:	mov	x0, x19
    9e8c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9e90:	mov	w1, #0x10                  	// #16
    9e94:	mov	x0, x20
    9e98:	add	x24, x21, #0x22
    9e9c:	bl	501c <__sancov_default_options@plt+0x69c>
    9ea0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9ea4:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9ea8:	mov	x2, x0
    9eac:	stp	x22, x24, [x0]
    9eb0:	add	x1, x1, #0xbe3
    9eb4:	add	x3, x3, #0xbf9
    9eb8:	mov	x0, x19
    9ebc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9ec0:	mov	w1, #0x10                  	// #16
    9ec4:	mov	x0, x20
    9ec8:	add	x24, x21, #0x23
    9ecc:	bl	501c <__sancov_default_options@plt+0x69c>
    9ed0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9ed4:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9ed8:	mov	x2, x0
    9edc:	stp	x22, x24, [x0]
    9ee0:	add	x1, x1, #0xc41
    9ee4:	add	x3, x3, #0xc4e
    9ee8:	mov	x0, x19
    9eec:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9ef0:	mov	w1, #0x10                  	// #16
    9ef4:	mov	x0, x20
    9ef8:	add	x25, x21, #0x24
    9efc:	bl	501c <__sancov_default_options@plt+0x69c>
    9f00:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    9f04:	add	x24, x24, #0x778
    9f08:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f0c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f10:	mov	x2, x0
    9f14:	stp	x24, x25, [x0]
    9f18:	add	x1, x1, #0xc73
    9f1c:	add	x3, x3, #0xc87
    9f20:	mov	x0, x19
    9f24:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9f28:	mov	w1, #0x10                  	// #16
    9f2c:	mov	x0, x20
    9f30:	add	x25, x21, #0x28
    9f34:	bl	501c <__sancov_default_options@plt+0x69c>
    9f38:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f3c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f40:	mov	x2, x0
    9f44:	stp	x23, x25, [x0]
    9f48:	add	x1, x1, #0xcc9
    9f4c:	add	x3, x3, #0xcd2
    9f50:	mov	x0, x19
    9f54:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9f58:	mov	w1, #0x10                  	// #16
    9f5c:	mov	x0, x20
    9f60:	add	x25, x21, #0x30
    9f64:	bl	501c <__sancov_default_options@plt+0x69c>
    9f68:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f6c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f70:	mov	x2, x0
    9f74:	stp	x22, x25, [x0]
    9f78:	add	x1, x1, #0xd37
    9f7c:	add	x3, x3, #0xd44
    9f80:	mov	x0, x19
    9f84:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9f88:	mov	w1, #0x10                  	// #16
    9f8c:	mov	x0, x20
    9f90:	add	x25, x21, #0x31
    9f94:	bl	501c <__sancov_default_options@plt+0x69c>
    9f98:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9f9c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9fa0:	mov	x2, x0
    9fa4:	stp	x22, x25, [x0]
    9fa8:	add	x1, x1, #0xdb8
    9fac:	add	x3, x3, #0xdc6
    9fb0:	mov	x0, x19
    9fb4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9fb8:	mov	w1, #0x10                  	// #16
    9fbc:	mov	x0, x20
    9fc0:	add	x25, x21, #0x34
    9fc4:	bl	501c <__sancov_default_options@plt+0x69c>
    9fc8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9fcc:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    9fd0:	mov	x2, x0
    9fd4:	stp	x24, x25, [x0]
    9fd8:	add	x1, x1, #0xe12
    9fdc:	add	x3, x3, #0xe1c
    9fe0:	mov	x0, x19
    9fe4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    9fe8:	mov	w1, #0x10                  	// #16
    9fec:	mov	x0, x20
    9ff0:	add	x25, x21, #0x38
    9ff4:	bl	501c <__sancov_default_options@plt+0x69c>
    9ff8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    9ffc:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    a000:	mov	x2, x0
    a004:	stp	x22, x25, [x0]
    a008:	add	x1, x1, #0xe61
    a00c:	add	x3, x3, #0xe6b
    a010:	mov	x0, x19
    a014:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a018:	mov	w1, #0x10                  	// #16
    a01c:	mov	x0, x20
    a020:	add	x25, x21, #0x39
    a024:	bl	501c <__sancov_default_options@plt+0x69c>
    a028:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    a02c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    a030:	mov	x2, x0
    a034:	stp	x22, x25, [x0]
    a038:	add	x1, x1, #0xed8
    a03c:	add	x3, x3, #0xee5
    a040:	mov	x0, x19
    a044:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a048:	mov	w1, #0x10                  	// #16
    a04c:	mov	x0, x20
    a050:	add	x25, x21, #0x3a
    a054:	bl	501c <__sancov_default_options@plt+0x69c>
    a058:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    a05c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    a060:	mov	x2, x0
    a064:	stp	x22, x25, [x0]
    a068:	add	x1, x1, #0xf03
    a06c:	add	x3, x3, #0xf16
    a070:	mov	x0, x19
    a074:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a078:	mov	w1, #0x10                  	// #16
    a07c:	mov	x0, x20
    a080:	add	x25, x21, #0x3b
    a084:	bl	501c <__sancov_default_options@plt+0x69c>
    a088:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    a08c:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    a090:	mov	x2, x0
    a094:	stp	x22, x25, [x0]
    a098:	add	x1, x1, #0xfb5
    a09c:	add	x3, x3, #0xfcf
    a0a0:	mov	x0, x19
    a0a4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a0a8:	mov	w1, #0x10                  	// #16
    a0ac:	mov	x0, x20
    a0b0:	add	x25, x21, #0x3c
    a0b4:	bl	501c <__sancov_default_options@plt+0x69c>
    a0b8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a0bc:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a0c0:	mov	x2, x0
    a0c4:	stp	x22, x25, [x0]
    a0c8:	add	x1, x1, #0x1b
    a0cc:	add	x3, x3, #0x29
    a0d0:	mov	x0, x19
    a0d4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a0d8:	mov	w1, #0x10                  	// #16
    a0dc:	mov	x0, x20
    a0e0:	add	x25, x21, #0x40
    a0e4:	bl	501c <__sancov_default_options@plt+0x69c>
    a0e8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a0ec:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a0f0:	mov	x2, x0
    a0f4:	stp	x24, x25, [x0]
    a0f8:	add	x1, x1, #0x72
    a0fc:	add	x3, x3, #0x83
    a100:	mov	x0, x19
    a104:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a108:	mov	w1, #0x10                  	// #16
    a10c:	mov	x0, x20
    a110:	add	x25, x21, #0x44
    a114:	bl	501c <__sancov_default_options@plt+0x69c>
    a118:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a11c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a120:	mov	x2, x0
    a124:	stp	x22, x25, [x0]
    a128:	add	x1, x1, #0xe7
    a12c:	add	x3, x3, #0xf4
    a130:	mov	x0, x19
    a134:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a138:	mov	w1, #0x10                  	// #16
    a13c:	mov	x0, x20
    a140:	add	x26, x21, #0x48
    a144:	bl	501c <__sancov_default_options@plt+0x69c>
    a148:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    a14c:	add	x25, x25, #0x798
    a150:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a154:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a158:	mov	x2, x0
    a15c:	stp	x25, x26, [x0]
    a160:	add	x1, x1, #0x10c
    a164:	add	x3, x3, #0x118
    a168:	mov	x0, x19
    a16c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a170:	mov	w1, #0x10                  	// #16
    a174:	mov	x0, x20
    a178:	add	x26, x21, #0x4c
    a17c:	bl	501c <__sancov_default_options@plt+0x69c>
    a180:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a184:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a188:	mov	x2, x0
    a18c:	stp	x25, x26, [x0]
    a190:	add	x1, x1, #0x1d3
    a194:	add	x3, x3, #0x1e1
    a198:	mov	x0, x19
    a19c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a1a0:	mov	w1, #0x10                  	// #16
    a1a4:	mov	x0, x20
    a1a8:	add	x26, x21, #0x50
    a1ac:	bl	501c <__sancov_default_options@plt+0x69c>
    a1b0:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a1b4:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a1b8:	mov	x2, x0
    a1bc:	stp	x25, x26, [x0]
    a1c0:	add	x1, x1, #0x29b
    a1c4:	add	x3, x3, #0x2a8
    a1c8:	mov	x0, x19
    a1cc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a1d0:	mov	w1, #0x10                  	// #16
    a1d4:	mov	x0, x20
    a1d8:	add	x26, x21, #0x54
    a1dc:	bl	501c <__sancov_default_options@plt+0x69c>
    a1e0:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a1e4:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a1e8:	mov	x2, x0
    a1ec:	stp	x25, x26, [x0]
    a1f0:	add	x1, x1, #0x363
    a1f4:	add	x3, x3, #0x371
    a1f8:	mov	x0, x19
    a1fc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a200:	mov	w1, #0x10                  	// #16
    a204:	mov	x0, x20
    a208:	add	x26, x21, #0x58
    a20c:	bl	501c <__sancov_default_options@plt+0x69c>
    a210:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a214:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a218:	mov	x2, x0
    a21c:	stp	x25, x26, [x0]
    a220:	add	x1, x1, #0x42b
    a224:	add	x3, x3, #0x43a
    a228:	mov	x0, x19
    a22c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a230:	mov	w1, #0x10                  	// #16
    a234:	mov	x0, x20
    a238:	add	x26, x21, #0x5c
    a23c:	bl	501c <__sancov_default_options@plt+0x69c>
    a240:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a244:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a248:	mov	x2, x0
    a24c:	stp	x25, x26, [x0]
    a250:	add	x1, x1, #0x4f5
    a254:	add	x3, x3, #0x503
    a258:	mov	x0, x19
    a25c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a260:	mov	w1, #0x10                  	// #16
    a264:	mov	x0, x20
    a268:	add	x25, x21, #0x60
    a26c:	bl	501c <__sancov_default_options@plt+0x69c>
    a270:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a274:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a278:	mov	x2, x0
    a27c:	stp	x22, x25, [x0]
    a280:	add	x1, x1, #0x5bd
    a284:	add	x3, x3, #0x5d5
    a288:	mov	x0, x19
    a28c:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a290:	mov	w1, #0x10                  	// #16
    a294:	mov	x0, x20
    a298:	add	x25, x21, #0x61
    a29c:	bl	501c <__sancov_default_options@plt+0x69c>
    a2a0:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a2a4:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a2a8:	mov	x2, x0
    a2ac:	stp	x22, x25, [x0]
    a2b0:	add	x1, x1, #0x63f
    a2b4:	add	x3, x3, #0x64f
    a2b8:	mov	x0, x19
    a2bc:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a2c0:	mov	w1, #0x10                  	// #16
    a2c4:	mov	x0, x20
    a2c8:	add	x25, x21, #0x62
    a2cc:	bl	501c <__sancov_default_options@plt+0x69c>
    a2d0:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a2d4:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a2d8:	mov	x2, x0
    a2dc:	stp	x22, x25, [x0]
    a2e0:	add	x1, x1, #0x681
    a2e4:	add	x3, x3, #0x692
    a2e8:	mov	x0, x19
    a2ec:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a2f0:	mov	w1, #0x10                  	// #16
    a2f4:	mov	x0, x20
    a2f8:	add	x26, x21, #0x68
    a2fc:	bl	501c <__sancov_default_options@plt+0x69c>
    a300:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    a304:	add	x25, x25, #0x7b8
    a308:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a30c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a310:	mov	x2, x0
    a314:	stp	x25, x26, [x0]
    a318:	add	x1, x1, #0x6b9
    a31c:	add	x3, x3, #0x6d5
    a320:	mov	x0, x19
    a324:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a328:	mov	w1, #0x10                  	// #16
    a32c:	mov	x0, x20
    a330:	add	x26, x21, #0x70
    a334:	bl	501c <__sancov_default_options@plt+0x69c>
    a338:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a33c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a340:	mov	x2, x0
    a344:	stp	x23, x26, [x0]
    a348:	add	x1, x1, #0x74a
    a34c:	add	x3, x3, #0x750
    a350:	mov	x0, x19
    a354:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a358:	mov	w1, #0x10                  	// #16
    a35c:	mov	x0, x20
    a360:	add	x26, x21, #0x78
    a364:	bl	501c <__sancov_default_options@plt+0x69c>
    a368:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a36c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a370:	mov	x2, x0
    a374:	stp	x22, x26, [x0]
    a378:	add	x1, x1, #0x777
    a37c:	add	x3, x3, #0x78b
    a380:	mov	x0, x19
    a384:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a388:	mov	w1, #0x10                  	// #16
    a38c:	mov	x0, x20
    a390:	add	x26, x21, #0x79
    a394:	bl	501c <__sancov_default_options@plt+0x69c>
    a398:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a39c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a3a0:	mov	x2, x0
    a3a4:	stp	x22, x26, [x0]
    a3a8:	add	x1, x1, #0x7cf
    a3ac:	add	x3, x3, #0x7e6
    a3b0:	mov	x0, x19
    a3b4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a3b8:	mov	w1, #0x10                  	// #16
    a3bc:	mov	x0, x20
    a3c0:	add	x26, x21, #0x7a
    a3c4:	bl	501c <__sancov_default_options@plt+0x69c>
    a3c8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a3cc:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a3d0:	mov	x2, x0
    a3d4:	stp	x22, x26, [x0]
    a3d8:	add	x1, x1, #0x800
    a3dc:	add	x3, x3, #0x805
    a3e0:	mov	x0, x19
    a3e4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a3e8:	mov	w1, #0x10                  	// #16
    a3ec:	mov	x0, x20
    a3f0:	add	x26, x21, #0x80
    a3f4:	bl	501c <__sancov_default_options@plt+0x69c>
    a3f8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    a3fc:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a400:	mov	x2, x0
    a404:	stp	x25, x26, [x0]
    a408:	add	x1, x1, #0x270
    a40c:	add	x3, x3, #0x822
    a410:	mov	x0, x19
    a414:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a418:	mov	w1, #0x10                  	// #16
    a41c:	mov	x0, x20
    a420:	add	x26, x21, #0x88
    a424:	bl	501c <__sancov_default_options@plt+0x69c>
    a428:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a42c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a430:	mov	x2, x0
    a434:	stp	x25, x26, [x0]
    a438:	add	x1, x1, #0x898
    a43c:	add	x3, x3, #0x8aa
    a440:	mov	x0, x19
    a444:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a448:	mov	w1, #0x10                  	// #16
    a44c:	mov	x0, x20
    a450:	add	x26, x21, #0x90
    a454:	bl	501c <__sancov_default_options@plt+0x69c>
    a458:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a45c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a460:	mov	x2, x0
    a464:	stp	x25, x26, [x0]
    a468:	add	x1, x1, #0x943
    a46c:	add	x3, x3, #0x955
    a470:	mov	x0, x19
    a474:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a478:	mov	w1, #0x10                  	// #16
    a47c:	mov	x0, x20
    a480:	add	x26, x21, #0x98
    a484:	bl	501c <__sancov_default_options@plt+0x69c>
    a488:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a48c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a490:	mov	x2, x0
    a494:	stp	x25, x26, [x0]
    a498:	add	x1, x1, #0xab5
    a49c:	add	x3, x3, #0xacc
    a4a0:	mov	x0, x19
    a4a4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a4a8:	mov	w1, #0x10                  	// #16
    a4ac:	mov	x0, x20
    a4b0:	add	x25, x21, #0xa0
    a4b4:	bl	501c <__sancov_default_options@plt+0x69c>
    a4b8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a4bc:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a4c0:	mov	x2, x0
    a4c4:	stp	x22, x25, [x0]
    a4c8:	add	x1, x1, #0xb43
    a4cc:	add	x3, x3, #0xb50
    a4d0:	mov	x0, x19
    a4d4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a4d8:	mov	w1, #0x10                  	// #16
    a4dc:	mov	x0, x20
    a4e0:	add	x25, x21, #0xa4
    a4e4:	bl	501c <__sancov_default_options@plt+0x69c>
    a4e8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a4ec:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a4f0:	mov	x2, x0
    a4f4:	stp	x24, x25, [x0]
    a4f8:	add	x1, x1, #0xb76
    a4fc:	add	x3, x3, #0xb9a
    a500:	mov	x0, x19
    a504:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a508:	mov	w1, #0x10                  	// #16
    a50c:	mov	x0, x20
    a510:	add	x25, x21, #0xa8
    a514:	bl	501c <__sancov_default_options@plt+0x69c>
    a518:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a51c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a520:	mov	x2, x0
    a524:	stp	x22, x25, [x0]
    a528:	add	x1, x1, #0xc68
    a52c:	add	x3, x3, #0xc80
    a530:	mov	x0, x19
    a534:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a538:	mov	w1, #0x10                  	// #16
    a53c:	mov	x0, x20
    a540:	add	x25, x21, #0xa9
    a544:	bl	501c <__sancov_default_options@plt+0x69c>
    a548:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a54c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a550:	mov	x2, x0
    a554:	stp	x22, x25, [x0]
    a558:	add	x1, x1, #0xcd9
    a55c:	add	x3, x3, #0xce2
    a560:	mov	x0, x19
    a564:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a568:	mov	w1, #0x10                  	// #16
    a56c:	mov	x0, x20
    a570:	add	x25, x21, #0xb0
    a574:	bl	501c <__sancov_default_options@plt+0x69c>
    a578:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a57c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a580:	mov	x2, x0
    a584:	stp	x23, x25, [x0]
    a588:	add	x1, x1, #0xd61
    a58c:	add	x3, x3, #0xd6e
    a590:	mov	x0, x19
    a594:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a598:	mov	w1, #0x10                  	// #16
    a59c:	mov	x0, x20
    a5a0:	add	x25, x21, #0xb8
    a5a4:	bl	501c <__sancov_default_options@plt+0x69c>
    a5a8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a5ac:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a5b0:	mov	x2, x0
    a5b4:	stp	x22, x25, [x0]
    a5b8:	add	x1, x1, #0xdb6
    a5bc:	add	x3, x3, #0xdc9
    a5c0:	mov	x0, x19
    a5c4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a5c8:	mov	w1, #0x10                  	// #16
    a5cc:	mov	x0, x20
    a5d0:	add	x25, x21, #0xb9
    a5d4:	bl	501c <__sancov_default_options@plt+0x69c>
    a5d8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a5dc:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a5e0:	mov	x2, x0
    a5e4:	stp	x22, x25, [x0]
    a5e8:	add	x1, x1, #0xe2b
    a5ec:	add	x3, x3, #0xe3e
    a5f0:	mov	x0, x19
    a5f4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a5f8:	mov	w1, #0x10                  	// #16
    a5fc:	mov	x0, x20
    a600:	add	x25, x21, #0xba
    a604:	bl	501c <__sancov_default_options@plt+0x69c>
    a608:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a60c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a610:	mov	x2, x0
    a614:	stp	x22, x25, [x0]
    a618:	add	x1, x1, #0xe62
    a61c:	add	x3, x3, #0xe73
    a620:	mov	x0, x19
    a624:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a628:	mov	w1, #0x10                  	// #16
    a62c:	mov	x0, x20
    a630:	add	x25, x21, #0xbb
    a634:	bl	501c <__sancov_default_options@plt+0x69c>
    a638:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a63c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a640:	mov	x2, x0
    a644:	stp	x22, x25, [x0]
    a648:	add	x1, x1, #0xf43
    a64c:	add	x3, x3, #0xf55
    a650:	mov	x0, x19
    a654:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a658:	mov	w1, #0x10                  	// #16
    a65c:	mov	x0, x20
    a660:	add	x25, x21, #0xbc
    a664:	bl	501c <__sancov_default_options@plt+0x69c>
    a668:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a66c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a670:	mov	x2, x0
    a674:	stp	x22, x25, [x0]
    a678:	add	x1, x1, #0xf9b
    a67c:	add	x3, x3, #0xfb3
    a680:	mov	x0, x19
    a684:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a688:	mov	w1, #0x10                  	// #16
    a68c:	mov	x0, x20
    a690:	add	x25, x21, #0xbd
    a694:	bl	501c <__sancov_default_options@plt+0x69c>
    a698:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a69c:	adrp	x3, 24000 <__interceptor_sigaction@@Base+0x1a44>
    a6a0:	mov	x2, x0
    a6a4:	stp	x22, x25, [x0]
    a6a8:	add	x1, x1, #0xfea
    a6ac:	add	x3, x3, #0xffd
    a6b0:	mov	x0, x19
    a6b4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a6b8:	mov	w1, #0x10                  	// #16
    a6bc:	mov	x0, x20
    a6c0:	add	x25, x21, #0xc0
    a6c4:	bl	501c <__sancov_default_options@plt+0x69c>
    a6c8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a6cc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a6d0:	mov	x2, x0
    a6d4:	stp	x24, x25, [x0]
    a6d8:	add	x1, x1, #0x41
    a6dc:	add	x3, x3, #0x54
    a6e0:	mov	x0, x19
    a6e4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a6e8:	mov	w1, #0x10                  	// #16
    a6ec:	mov	x0, x20
    a6f0:	add	x25, x21, #0xc8
    a6f4:	bl	501c <__sancov_default_options@plt+0x69c>
    a6f8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a6fc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a700:	mov	x2, x0
    a704:	stp	x23, x25, [x0]
    a708:	add	x1, x1, #0x122
    a70c:	add	x3, x3, #0x135
    a710:	mov	x0, x19
    a714:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a718:	mov	w1, #0x10                  	// #16
    a71c:	mov	x0, x20
    a720:	add	x25, x21, #0xd0
    a724:	bl	501c <__sancov_default_options@plt+0x69c>
    a728:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a72c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a730:	mov	x2, x0
    a734:	stp	x22, x25, [x0]
    a738:	add	x1, x1, #0x1c2
    a73c:	add	x3, x3, #0x1db
    a740:	mov	x0, x19
    a744:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a748:	mov	w1, #0x10                  	// #16
    a74c:	mov	x0, x20
    a750:	add	x25, x21, #0xd1
    a754:	bl	501c <__sancov_default_options@plt+0x69c>
    a758:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a75c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a760:	mov	x2, x0
    a764:	stp	x22, x25, [x0]
    a768:	add	x1, x1, #0x212
    a76c:	add	x3, x3, #0x227
    a770:	mov	x0, x19
    a774:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a778:	mov	w1, #0x10                  	// #16
    a77c:	mov	x0, x20
    a780:	add	x25, x21, #0xd2
    a784:	bl	501c <__sancov_default_options@plt+0x69c>
    a788:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a78c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a790:	mov	x2, x0
    a794:	stp	x22, x25, [x0]
    a798:	add	x1, x1, #0x267
    a79c:	add	x3, x3, #0x278
    a7a0:	mov	x0, x19
    a7a4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a7a8:	mov	w1, #0x10                  	// #16
    a7ac:	mov	x0, x20
    a7b0:	add	x25, x21, #0xd3
    a7b4:	bl	501c <__sancov_default_options@plt+0x69c>
    a7b8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a7bc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a7c0:	mov	x2, x0
    a7c4:	stp	x22, x25, [x0]
    a7c8:	add	x1, x1, #0x2ce
    a7cc:	add	x3, x3, #0x2df
    a7d0:	mov	x0, x19
    a7d4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a7d8:	mov	w1, #0x10                  	// #16
    a7dc:	mov	x0, x20
    a7e0:	add	x25, x21, #0xd4
    a7e4:	bl	501c <__sancov_default_options@plt+0x69c>
    a7e8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a7ec:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a7f0:	mov	x2, x0
    a7f4:	stp	x22, x25, [x0]
    a7f8:	add	x1, x1, #0x331
    a7fc:	add	x3, x3, #0x342
    a800:	mov	x0, x19
    a804:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a808:	mov	w1, #0x10                  	// #16
    a80c:	mov	x0, x20
    a810:	add	x25, x21, #0xd5
    a814:	bl	501c <__sancov_default_options@plt+0x69c>
    a818:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a81c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a820:	mov	x2, x0
    a824:	stp	x22, x25, [x0]
    a828:	add	x1, x1, #0x38d
    a82c:	add	x3, x3, #0x39f
    a830:	mov	x0, x19
    a834:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a838:	mov	w1, #0x10                  	// #16
    a83c:	mov	x0, x20
    a840:	add	x25, x21, #0xd6
    a844:	bl	501c <__sancov_default_options@plt+0x69c>
    a848:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a84c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a850:	mov	x2, x0
    a854:	stp	x22, x25, [x0]
    a858:	add	x1, x1, #0x3e6
    a85c:	add	x3, x3, #0x3f7
    a860:	mov	x0, x19
    a864:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a868:	mov	w1, #0x10                  	// #16
    a86c:	mov	x0, x20
    a870:	add	x25, x21, #0xd7
    a874:	bl	501c <__sancov_default_options@plt+0x69c>
    a878:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a87c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a880:	mov	x2, x0
    a884:	stp	x22, x25, [x0]
    a888:	add	x1, x1, #0x44a
    a88c:	add	x3, x3, #0x45c
    a890:	mov	x0, x19
    a894:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a898:	mov	w1, #0x10                  	// #16
    a89c:	mov	x0, x20
    a8a0:	add	x25, x21, #0xd8
    a8a4:	bl	501c <__sancov_default_options@plt+0x69c>
    a8a8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a8ac:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a8b0:	mov	x2, x0
    a8b4:	stp	x22, x25, [x0]
    a8b8:	add	x1, x1, #0x4a4
    a8bc:	add	x3, x3, #0x4b5
    a8c0:	mov	x0, x19
    a8c4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a8c8:	mov	w1, #0x10                  	// #16
    a8cc:	mov	x0, x20
    a8d0:	add	x25, x21, #0xd9
    a8d4:	bl	501c <__sancov_default_options@plt+0x69c>
    a8d8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a8dc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a8e0:	mov	x2, x0
    a8e4:	stp	x22, x25, [x0]
    a8e8:	add	x1, x1, #0x514
    a8ec:	add	x3, x3, #0x525
    a8f0:	mov	x0, x19
    a8f4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a8f8:	mov	w1, #0x10                  	// #16
    a8fc:	mov	x0, x20
    a900:	add	x25, x21, #0xda
    a904:	bl	501c <__sancov_default_options@plt+0x69c>
    a908:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a90c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a910:	mov	x2, x0
    a914:	stp	x22, x25, [x0]
    a918:	add	x1, x1, #0x56b
    a91c:	add	x3, x3, #0x579
    a920:	mov	x0, x19
    a924:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a928:	mov	w1, #0x10                  	// #16
    a92c:	mov	x0, x20
    a930:	add	x25, x21, #0xdb
    a934:	bl	501c <__sancov_default_options@plt+0x69c>
    a938:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a93c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a940:	mov	x2, x0
    a944:	stp	x22, x25, [x0]
    a948:	add	x1, x1, #0x5d1
    a94c:	add	x3, x3, #0x5e2
    a950:	mov	x0, x19
    a954:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a958:	mov	w1, #0x10                  	// #16
    a95c:	mov	x0, x20
    a960:	add	x25, x21, #0xdc
    a964:	bl	501c <__sancov_default_options@plt+0x69c>
    a968:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a96c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a970:	mov	x2, x0
    a974:	stp	x22, x25, [x0]
    a978:	add	x1, x1, #0x61b
    a97c:	add	x3, x3, #0x62c
    a980:	mov	x0, x19
    a984:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a988:	mov	w1, #0x10                  	// #16
    a98c:	mov	x0, x20
    a990:	add	x25, x21, #0xdd
    a994:	bl	501c <__sancov_default_options@plt+0x69c>
    a998:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a99c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a9a0:	mov	x2, x0
    a9a4:	stp	x22, x25, [x0]
    a9a8:	add	x1, x1, #0x683
    a9ac:	add	x3, x3, #0x692
    a9b0:	mov	x0, x19
    a9b4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a9b8:	mov	w1, #0x10                  	// #16
    a9bc:	mov	x0, x20
    a9c0:	add	x25, x21, #0xde
    a9c4:	bl	501c <__sancov_default_options@plt+0x69c>
    a9c8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a9cc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a9d0:	mov	x2, x0
    a9d4:	stp	x22, x25, [x0]
    a9d8:	add	x1, x1, #0x6d8
    a9dc:	add	x3, x3, #0x6e7
    a9e0:	mov	x0, x19
    a9e4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    a9e8:	mov	w1, #0x10                  	// #16
    a9ec:	mov	x0, x20
    a9f0:	add	x25, x21, #0xdf
    a9f4:	bl	501c <__sancov_default_options@plt+0x69c>
    a9f8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    a9fc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa00:	mov	x2, x0
    aa04:	stp	x22, x25, [x0]
    aa08:	add	x1, x1, #0x72d
    aa0c:	add	x3, x3, #0x740
    aa10:	mov	x0, x19
    aa14:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    aa18:	mov	w1, #0x10                  	// #16
    aa1c:	mov	x0, x20
    aa20:	add	x25, x21, #0xe0
    aa24:	bl	501c <__sancov_default_options@plt+0x69c>
    aa28:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa2c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa30:	mov	x2, x0
    aa34:	stp	x24, x25, [x0]
    aa38:	add	x1, x1, #0x790
    aa3c:	add	x3, x3, #0x799
    aa40:	mov	x0, x19
    aa44:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    aa48:	mov	w1, #0x10                  	// #16
    aa4c:	mov	x0, x20
    aa50:	add	x24, x21, #0xe4
    aa54:	bl	501c <__sancov_default_options@plt+0x69c>
    aa58:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa5c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa60:	mov	x2, x0
    aa64:	stp	x22, x24, [x0]
    aa68:	add	x1, x1, #0x7d5
    aa6c:	add	x3, x3, #0x7e4
    aa70:	mov	x0, x19
    aa74:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    aa78:	mov	w1, #0x10                  	// #16
    aa7c:	mov	x0, x20
    aa80:	add	x24, x21, #0xe5
    aa84:	bl	501c <__sancov_default_options@plt+0x69c>
    aa88:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa8c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aa90:	mov	x2, x0
    aa94:	stp	x22, x24, [x0]
    aa98:	add	x1, x1, #0x837
    aa9c:	add	x3, x3, #0x84a
    aaa0:	mov	x0, x19
    aaa4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    aaa8:	mov	w1, #0x10                  	// #16
    aaac:	mov	x0, x20
    aab0:	add	x24, x21, #0xe6
    aab4:	bl	501c <__sancov_default_options@plt+0x69c>
    aab8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aabc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aac0:	mov	x2, x0
    aac4:	stp	x22, x24, [x0]
    aac8:	add	x1, x1, #0x8ab
    aacc:	add	x3, x3, #0x8b9
    aad0:	mov	x0, x19
    aad4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    aad8:	mov	w1, #0x10                  	// #16
    aadc:	mov	x0, x20
    aae0:	add	x24, x21, #0xe7
    aae4:	bl	501c <__sancov_default_options@plt+0x69c>
    aae8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aaec:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    aaf0:	mov	x2, x0
    aaf4:	stp	x22, x24, [x0]
    aaf8:	add	x1, x1, #0x8e2
    aafc:	add	x3, x3, #0x8f2
    ab00:	mov	x0, x19
    ab04:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ab08:	mov	w1, #0x10                  	// #16
    ab0c:	mov	x0, x20
    ab10:	add	x24, x21, #0xe8
    ab14:	bl	501c <__sancov_default_options@plt+0x69c>
    ab18:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab1c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab20:	mov	x2, x0
    ab24:	stp	x23, x24, [x0]
    ab28:	add	x1, x1, #0x911
    ab2c:	add	x3, x3, #0x91d
    ab30:	mov	x0, x19
    ab34:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ab38:	mov	w1, #0x10                  	// #16
    ab3c:	mov	x0, x20
    ab40:	add	x23, x21, #0xf0
    ab44:	bl	501c <__sancov_default_options@plt+0x69c>
    ab48:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab4c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab50:	mov	x2, x0
    ab54:	stp	x22, x23, [x0]
    ab58:	add	x1, x1, #0x933
    ab5c:	add	x3, x3, #0x94a
    ab60:	mov	x0, x19
    ab64:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ab68:	mov	w1, #0x10                  	// #16
    ab6c:	mov	x0, x20
    ab70:	add	x23, x21, #0xf1
    ab74:	bl	501c <__sancov_default_options@plt+0x69c>
    ab78:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab7c:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ab80:	mov	x2, x0
    ab84:	stp	x22, x23, [x0]
    ab88:	add	x1, x1, #0x98e
    ab8c:	add	x3, x3, #0x99d
    ab90:	mov	x0, x19
    ab94:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ab98:	mov	w1, #0x10                  	// #16
    ab9c:	mov	x0, x20
    aba0:	add	x23, x21, #0xf2
    aba4:	bl	501c <__sancov_default_options@plt+0x69c>
    aba8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    abac:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    abb0:	mov	x2, x0
    abb4:	stp	x22, x23, [x0]
    abb8:	add	x1, x1, #0x9f6
    abbc:	add	x3, x3, #0xa08
    abc0:	mov	x0, x19
    abc4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    abc8:	mov	w1, #0x10                  	// #16
    abcc:	mov	x0, x20
    abd0:	add	x21, x21, #0xf3
    abd4:	bl	501c <__sancov_default_options@plt+0x69c>
    abd8:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    abdc:	adrp	x3, 25000 <__interceptor_sigaction@@Base+0x2a44>
    abe0:	mov	x2, x0
    abe4:	stp	x22, x21, [x0]
    abe8:	add	x1, x1, #0xa59
    abec:	add	x3, x3, #0xa78
    abf0:	mov	x0, x19
    abf4:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    abf8:	mov	w1, #0x20                  	// #32
    abfc:	mov	x0, x20
    ac00:	bl	501c <__sancov_default_options@plt+0x69c>
    ac04:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ac08:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
    ac0c:	add	x21, x21, #0x718
    ac10:	add	x22, x22, #0x562
    ac14:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    ac18:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    ac1c:	mov	x2, x0
    ac20:	strb	wzr, [x0, #16]
    ac24:	stp	x21, x19, [x0]
    ac28:	str	x22, [x0, #24]
    ac2c:	add	x1, x1, #0x8cb
    ac30:	add	x3, x3, #0x8d3
    ac34:	mov	x0, x19
    ac38:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ac3c:	mov	w1, #0x20                  	// #32
    ac40:	mov	x0, x20
    ac44:	bl	501c <__sancov_default_options@plt+0x69c>
    ac48:	mov	w8, #0x1                   	// #1
    ac4c:	stp	x21, x19, [x0]
    ac50:	strb	w8, [x0, #16]
    ac54:	str	x22, [x0, #24]
    ac58:	mov	x2, x0
    ac5c:	mov	x0, x19
    ac60:	ldp	x20, x19, [sp, #64]
    ac64:	ldp	x22, x21, [sp, #48]
    ac68:	ldp	x24, x23, [sp, #32]
    ac6c:	ldp	x26, x25, [sp, #16]
    ac70:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    ac74:	adrp	x3, 23000 <__interceptor_sigaction@@Base+0xa44>
    ac78:	add	x1, x1, #0x8f9
    ac7c:	add	x3, x3, #0x90b
    ac80:	ldr	x30, [sp], #80
    ac84:	b	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
    ac88:	ldrb	w8, [x0, #231]
    ac8c:	ldrb	w9, [x0, #169]
    ac90:	adrp	x11, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ac94:	ldr	w10, [x0, #52]
    ac98:	ldr	x11, [x11, #3872]
    ac9c:	orr	w8, w9, w8
    aca0:	strb	w8, [x0, #169]
    aca4:	str	w10, [x11]
    aca8:	ret
    acac:	stp	x30, x21, [sp, #-32]!
    acb0:	stp	x20, x19, [sp, #16]
    acb4:	mov	x20, x1
    acb8:	mov	x19, x0
    acbc:	str	x1, [x0, #24]
    acc0:	mov	w1, #0x25                  	// #37
    acc4:	mov	x0, x20
    acc8:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
    accc:	cbz	x0, ad28 <__sanitizer_set_report_fd@@Base+0x1474>
    acd0:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    acd4:	add	x1, x1, #0xabb
    acd8:	mov	w0, #0x1000                	// #4096
    acdc:	mov	w2, wzr
    ace0:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    ace4:	mov	x21, x0
    ace8:	mov	w2, #0x1000                	// #4096
    acec:	mov	x0, x20
    acf0:	mov	x1, x21
    acf4:	bl	99d4 <__sanitizer_set_report_fd@@Base+0x120>
    acf8:	ldr	x0, [x19, #8]
    acfc:	ldrb	w2, [x19, #16]
    ad00:	mov	x1, x21
    ad04:	bl	b9cc <__sanitizer_set_report_fd@@Base+0x2118>
    ad08:	mov	w19, w0
    ad0c:	mov	w1, #0x1000                	// #4096
    ad10:	mov	x0, x21
    ad14:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    ad18:	and	w0, w19, #0x1
    ad1c:	ldp	x20, x19, [sp, #16]
    ad20:	ldp	x30, x21, [sp], #32
    ad24:	ret
    ad28:	ldr	x0, [x19, #8]
    ad2c:	ldrb	w2, [x19, #16]
    ad30:	mov	x1, x20
    ad34:	ldp	x20, x19, [sp, #16]
    ad38:	ldp	x30, x21, [sp], #32
    ad3c:	b	b9cc <__sanitizer_set_report_fd@@Base+0x2118>
    ad40:	stp	x30, x19, [sp, #-16]!
    ad44:	ldr	x3, [x0, #24]
    ad48:	mov	x19, x2
    ad4c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    ad50:	mov	x0, x1
    ad54:	add	x2, x2, #0x338
    ad58:	mov	x1, x19
    ad5c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    ad60:	sxtw	x8, w0
    ad64:	cmp	x8, x19
    ad68:	cset	w0, cc  // cc = lo, ul, last
    ad6c:	ldp	x30, x19, [sp], #16
    ad70:	ret
    ad74:	str	x30, [sp, #-32]!
    ad78:	stp	x20, x19, [sp, #16]
    ad7c:	ldr	x20, [x0, #8]
    ad80:	mov	x19, x1
    ad84:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    ad88:	add	x1, x1, #0x880
    ad8c:	mov	x0, x19
    ad90:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    ad94:	cbz	w0, ae1c <__sanitizer_set_report_fd@@Base+0x1568>
    ad98:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ad9c:	add	x1, x1, #0xafa
    ada0:	mov	x0, x19
    ada4:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    ada8:	cbz	w0, ae1c <__sanitizer_set_report_fd@@Base+0x1568>
    adac:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    adb0:	add	x1, x1, #0xa6f
    adb4:	mov	x0, x19
    adb8:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    adbc:	cbz	w0, ae1c <__sanitizer_set_report_fd@@Base+0x1568>
    adc0:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
    adc4:	add	x1, x1, #0xba7
    adc8:	mov	x0, x19
    adcc:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    add0:	cbz	w0, ae30 <__sanitizer_set_report_fd@@Base+0x157c>
    add4:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    add8:	add	x1, x1, #0xafd
    addc:	mov	x0, x19
    ade0:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    ade4:	cbz	w0, ae30 <__sanitizer_set_report_fd@@Base+0x157c>
    ade8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    adec:	add	x1, x1, #0xa5f
    adf0:	mov	x0, x19
    adf4:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    adf8:	cbz	w0, ae30 <__sanitizer_set_report_fd@@Base+0x157c>
    adfc:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ae00:	add	x0, x0, #0xace
    ae04:	mov	x1, x19
    ae08:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    ae0c:	mov	w0, wzr
    ae10:	ldp	x20, x19, [sp, #16]
    ae14:	ldr	x30, [sp], #32
    ae18:	ret
    ae1c:	strb	wzr, [x20]
    ae20:	mov	w0, #0x1                   	// #1
    ae24:	ldp	x20, x19, [sp, #16]
    ae28:	ldr	x30, [sp], #32
    ae2c:	ret
    ae30:	mov	w0, #0x1                   	// #1
    ae34:	strb	w0, [x20]
    ae38:	ldp	x20, x19, [sp, #16]
    ae3c:	ldr	x30, [sp], #32
    ae40:	ret
    ae44:	stp	x30, x19, [sp, #-16]!
    ae48:	ldr	x8, [x0, #8]
    ae4c:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
    ae50:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
    ae54:	mov	x19, x2
    ae58:	ldrb	w8, [x8]
    ae5c:	add	x9, x9, #0xa5f
    ae60:	add	x10, x10, #0xa6f
    ae64:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    ae68:	cmp	w8, #0x0
    ae6c:	csel	x3, x10, x9, eq  // eq = none
    ae70:	add	x2, x2, #0x338
    ae74:	mov	x0, x1
    ae78:	mov	x1, x19
    ae7c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    ae80:	sxtw	x8, w0
    ae84:	cmp	x8, x19
    ae88:	cset	w0, cc  // cc = lo, ul, last
    ae8c:	ldp	x30, x19, [sp], #16
    ae90:	ret
    ae94:	ldr	x8, [x0, #8]
    ae98:	mov	w0, #0x1                   	// #1
    ae9c:	str	x1, [x8]
    aea0:	ret
    aea4:	stp	x30, x19, [sp, #-16]!
    aea8:	ldr	x8, [x0, #8]
    aeac:	mov	x19, x2
    aeb0:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    aeb4:	mov	x0, x1
    aeb8:	ldr	x3, [x8]
    aebc:	add	x2, x2, #0x338
    aec0:	mov	x1, x19
    aec4:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    aec8:	sxtw	x8, w0
    aecc:	cmp	x8, x19
    aed0:	cset	w0, cc  // cc = lo, ul, last
    aed4:	ldp	x30, x19, [sp], #16
    aed8:	ret
    aedc:	str	x30, [sp, #-32]!
    aee0:	stp	x20, x19, [sp, #16]
    aee4:	mov	x19, x1
    aee8:	mov	x20, x0
    aeec:	add	x1, sp, #0x8
    aef0:	mov	w2, #0xa                   	// #10
    aef4:	mov	x0, x19
    aef8:	bl	bc74 <__sanitizer_set_report_fd@@Base+0x23c0>
    aefc:	ldr	x8, [x20, #8]
    af00:	str	w0, [x8]
    af04:	ldr	x8, [sp, #8]
    af08:	ldrb	w20, [x8]
    af0c:	cbz	w20, af20 <__sanitizer_set_report_fd@@Base+0x166c>
    af10:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    af14:	add	x0, x0, #0xb01
    af18:	mov	x1, x19
    af1c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    af20:	cmp	w20, #0x0
    af24:	ldp	x20, x19, [sp, #16]
    af28:	cset	w0, eq  // eq = none
    af2c:	ldr	x30, [sp], #32
    af30:	ret
    af34:	stp	x30, x19, [sp, #-16]!
    af38:	ldr	x8, [x0, #8]
    af3c:	mov	x19, x2
    af40:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
    af44:	mov	x0, x1
    af48:	ldr	w3, [x8]
    af4c:	add	x2, x2, #0x6fb
    af50:	mov	x1, x19
    af54:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    af58:	sxtw	x8, w0
    af5c:	cmp	x8, x19
    af60:	cset	w0, cc  // cc = lo, ul, last
    af64:	ldp	x30, x19, [sp], #16
    af68:	ret
    af6c:	str	x30, [sp, #-32]!
    af70:	stp	x20, x19, [sp, #16]
    af74:	mov	x20, x1
    af78:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    af7c:	mov	x19, x0
    af80:	add	x1, x1, #0x880
    af84:	mov	x0, x20
    af88:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    af8c:	cbz	w0, b03c <__sanitizer_set_report_fd@@Base+0x1788>
    af90:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    af94:	add	x1, x1, #0xafa
    af98:	mov	x0, x20
    af9c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    afa0:	cbz	w0, b03c <__sanitizer_set_report_fd@@Base+0x1788>
    afa4:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    afa8:	add	x1, x1, #0xa6f
    afac:	mov	x0, x20
    afb0:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    afb4:	cbz	w0, b03c <__sanitizer_set_report_fd@@Base+0x1788>
    afb8:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
    afbc:	add	x1, x1, #0xba7
    afc0:	mov	x0, x20
    afc4:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    afc8:	cbz	w0, b058 <__sanitizer_set_report_fd@@Base+0x17a4>
    afcc:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    afd0:	add	x1, x1, #0xafd
    afd4:	mov	x0, x20
    afd8:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    afdc:	cbz	w0, b058 <__sanitizer_set_report_fd@@Base+0x17a4>
    afe0:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
    afe4:	add	x1, x1, #0xa5f
    afe8:	mov	x0, x20
    afec:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    aff0:	cbz	w0, b058 <__sanitizer_set_report_fd@@Base+0x17a4>
    aff4:	adrp	x1, 2a000 <__interceptor_sigaction@@Base+0x7a44>
    aff8:	add	x1, x1, #0xc9
    affc:	mov	x0, x20
    b000:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    b004:	cbz	w0, b060 <__sanitizer_set_report_fd@@Base+0x17ac>
    b008:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b00c:	add	x1, x1, #0xb2c
    b010:	mov	x0, x20
    b014:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    b018:	cbz	w0, b060 <__sanitizer_set_report_fd@@Base+0x17ac>
    b01c:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b020:	add	x0, x0, #0xb36
    b024:	mov	x1, x20
    b028:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b02c:	mov	w0, wzr
    b030:	ldp	x20, x19, [sp, #16]
    b034:	ldr	x30, [sp], #32
    b038:	ret
    b03c:	mov	w8, wzr
    b040:	ldr	x9, [x19, #8]
    b044:	mov	w0, #0x1                   	// #1
    b048:	str	w8, [x9]
    b04c:	ldp	x20, x19, [sp, #16]
    b050:	ldr	x30, [sp], #32
    b054:	ret
    b058:	mov	w8, #0x1                   	// #1
    b05c:	b	b040 <__sanitizer_set_report_fd@@Base+0x178c>
    b060:	ldr	x8, [x19, #8]
    b064:	mov	w9, #0x2                   	// #2
    b068:	mov	w0, #0x1                   	// #1
    b06c:	str	w9, [x8]
    b070:	ldp	x20, x19, [sp, #16]
    b074:	ldr	x30, [sp], #32
    b078:	ret
    b07c:	stp	x30, x19, [sp, #-16]!
    b080:	ldr	x8, [x0, #8]
    b084:	mov	x19, x2
    b088:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
    b08c:	mov	x0, x1
    b090:	ldr	w3, [x8]
    b094:	add	x2, x2, #0x6fb
    b098:	mov	x1, x19
    b09c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    b0a0:	sxtw	x8, w0
    b0a4:	cmp	x8, x19
    b0a8:	cset	w0, cc  // cc = lo, ul, last
    b0ac:	ldp	x30, x19, [sp], #16
    b0b0:	ret
    b0b4:	str	x30, [sp, #-32]!
    b0b8:	stp	x20, x19, [sp, #16]
    b0bc:	mov	x19, x1
    b0c0:	mov	x20, x0
    b0c4:	add	x1, sp, #0x8
    b0c8:	mov	w2, #0xa                   	// #10
    b0cc:	mov	x0, x19
    b0d0:	bl	bc74 <__sanitizer_set_report_fd@@Base+0x23c0>
    b0d4:	ldr	x8, [x20, #8]
    b0d8:	str	x0, [x8]
    b0dc:	ldr	x8, [sp, #8]
    b0e0:	ldrb	w20, [x8]
    b0e4:	cbz	w20, b0f8 <__sanitizer_set_report_fd@@Base+0x1844>
    b0e8:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b0ec:	add	x0, x0, #0xb6c
    b0f0:	mov	x1, x19
    b0f4:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b0f8:	cmp	w20, #0x0
    b0fc:	ldp	x20, x19, [sp, #16]
    b100:	cset	w0, eq  // eq = none
    b104:	ldr	x30, [sp], #32
    b108:	ret
    b10c:	stp	x30, x19, [sp, #-16]!
    b110:	ldr	x8, [x0, #8]
    b114:	mov	x19, x2
    b118:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b11c:	mov	x0, x1
    b120:	ldr	x3, [x8]
    b124:	add	x2, x2, #0xb98
    b128:	mov	x1, x19
    b12c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    b130:	sxtw	x8, w0
    b134:	cmp	x8, x19
    b138:	cset	w0, cc  // cc = lo, ul, last
    b13c:	ldp	x30, x19, [sp], #16
    b140:	ret
    b144:	str	x30, [sp, #-48]!
    b148:	stp	x22, x21, [sp, #16]
    b14c:	stp	x20, x19, [sp, #32]
    b150:	adrp	x20, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b154:	ldr	w1, [x20, #1848]
    b158:	cbz	w1, b1a8 <__sanitizer_set_report_fd@@Base+0x18f4>
    b15c:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b160:	add	x0, x0, #0xd21
    b164:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b168:	ldr	w8, [x20, #1848]
    b16c:	cmp	w8, #0x1
    b170:	b.lt	b1a4 <__sanitizer_set_report_fd@@Base+0x18f0>  // b.tstop
    b174:	adrp	x22, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b178:	adrp	x19, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b17c:	mov	x21, xzr
    b180:	add	x22, x22, #0x698
    b184:	add	x19, x19, #0xd4a
    b188:	ldr	x1, [x22, x21, lsl #3]
    b18c:	mov	x0, x19
    b190:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b194:	ldrsw	x8, [x22, #160]
    b198:	add	x21, x21, #0x1
    b19c:	cmp	x21, x8
    b1a0:	b.lt	b188 <__sanitizer_set_report_fd@@Base+0x18d4>  // b.tstop
    b1a4:	str	wzr, [x20, #1848]
    b1a8:	ldp	x20, x19, [sp, #32]
    b1ac:	ldp	x22, x21, [sp, #16]
    b1b0:	ldr	x30, [sp], #48
    b1b4:	ret
    b1b8:	stp	x30, x21, [sp, #-32]!
    b1bc:	stp	x20, x19, [sp, #16]
    b1c0:	mov	x19, x1
    b1c4:	mov	x0, x1
    b1c8:	mov	x1, x2
    b1cc:	bl	c458 <__sanitizer_set_report_fd@@Base+0x2ba4>
    b1d0:	mov	x20, x0
    b1d4:	add	x1, x0, #0x1
    b1d8:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b1dc:	add	x0, x0, #0x688
    b1e0:	bl	501c <__sancov_default_options@plt+0x69c>
    b1e4:	mov	x1, x19
    b1e8:	mov	x2, x20
    b1ec:	mov	x21, x0
    b1f0:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    b1f4:	strb	wzr, [x21, x20]
    b1f8:	ldp	x20, x19, [sp, #16]
    b1fc:	mov	x0, x21
    b200:	ldp	x30, x21, [sp], #32
    b204:	ret
    b208:	sub	sp, sp, #0xc0
    b20c:	str	x30, [sp, #128]
    b210:	stp	x24, x23, [sp, #144]
    b214:	stp	x22, x21, [sp, #160]
    b218:	stp	x20, x19, [sp, #176]
    b21c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b220:	ldr	x8, [x8, #4024]
    b224:	mov	x19, x0
    b228:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b22c:	add	x0, x0, #0xb9b
    b230:	ldr	x1, [x8]
    b234:	strb	wzr, [sp, #127]
    b238:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b23c:	ldr	w8, [x19, #8]
    b240:	cmp	w8, #0x1
    b244:	b.lt	b2c4 <__sanitizer_set_report_fd@@Base+0x1a10>  // b.tstop
    b248:	adrp	x23, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b24c:	adrp	x24, 28000 <__interceptor_sigaction@@Base+0x5a44>
    b250:	adrp	x20, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b254:	mov	x21, xzr
    b258:	mov	x22, xzr
    b25c:	add	x23, x23, #0xc37
    b260:	add	x24, x24, #0x562
    b264:	add	x20, x20, #0xc42
    b268:	ldr	x8, [x19]
    b26c:	mov	x1, sp
    b270:	mov	w2, #0x80                  	// #128
    b274:	add	x8, x8, x21
    b278:	ldr	x0, [x8, #16]
    b27c:	ldr	x8, [x0]
    b280:	ldr	x8, [x8, #8]
    b284:	blr	x8
    b288:	ldrb	w3, [sp, #127]
    b28c:	cbnz	x3, b2dc <__sanitizer_set_report_fd@@Base+0x1a28>
    b290:	ldr	x8, [x19]
    b294:	tst	w0, #0x1
    b298:	csel	x3, x24, x23, ne  // ne = any
    b29c:	mov	x4, sp
    b2a0:	add	x8, x8, x21
    b2a4:	ldp	x1, x2, [x8]
    b2a8:	mov	x0, x20
    b2ac:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b2b0:	ldrsw	x8, [x19, #8]
    b2b4:	add	x22, x22, #0x1
    b2b8:	add	x21, x21, #0x18
    b2bc:	cmp	x22, x8
    b2c0:	b.lt	b268 <__sanitizer_set_report_fd@@Base+0x19b4>  // b.tstop
    b2c4:	ldp	x20, x19, [sp, #176]
    b2c8:	ldp	x22, x21, [sp, #160]
    b2cc:	ldp	x24, x23, [sp, #144]
    b2d0:	ldr	x30, [sp, #128]
    b2d4:	add	sp, sp, #0xc0
    b2d8:	ret
    b2dc:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b2e0:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b2e4:	add	x0, x0, #0xbb4
    b2e8:	add	x2, x2, #0xc0c
    b2ec:	mov	w1, #0x40                  	// #64
    b2f0:	mov	x4, xzr
    b2f4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    b2f8:	str	x30, [sp, #-16]!
    b2fc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b300:	ldr	x8, [x8, #4024]
    b304:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b308:	mov	x2, x1
    b30c:	add	x0, x0, #0xc64
    b310:	ldr	x8, [x8]
    b314:	mov	x1, x8
    b318:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b31c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    b320:	sub	w8, w1, #0x9
    b324:	and	w9, w8, #0xff
    b328:	cmp	w9, #0x31
    b32c:	b.hi	b34c <__sanitizer_set_report_fd@@Base+0x1a98>  // b.pmore
    b330:	mov	x9, #0x13                  	// #19
    b334:	movk	x9, #0x80, lsl #16
    b338:	movk	x9, #0x8, lsl #32
    b33c:	movk	x9, #0x2, lsl #48
    b340:	lsr	x8, x9, x8
    b344:	and	w0, w8, #0x1
    b348:	ret
    b34c:	mov	w0, wzr
    b350:	ret
    b354:	ldp	x8, x9, [x0, #16]
    b358:	mov	x11, #0x2600                	// #9728
    b35c:	movk	x11, #0x1001, lsl #32
    b360:	mov	w10, #0x1                   	// #1
    b364:	movk	x11, #0x400, lsl #48
    b368:	ldrb	w12, [x8, x9]
    b36c:	cmp	w12, #0x3a
    b370:	b.hi	b394 <__sanitizer_set_report_fd@@Base+0x1ae0>  // b.pmore
    b374:	lsl	x12, x10, x12
    b378:	tst	x12, x11
    b37c:	b.eq	b394 <__sanitizer_set_report_fd@@Base+0x1ae0>  // b.none
    b380:	add	x9, x9, #0x1
    b384:	str	x9, [x0, #24]
    b388:	ldrb	w12, [x8, x9]
    b38c:	cmp	w12, #0x3a
    b390:	b.ls	b374 <__sanitizer_set_report_fd@@Base+0x1ac0>  // b.plast
    b394:	ret
    b398:	stp	x30, x23, [sp, #-48]!
    b39c:	stp	x22, x21, [sp, #16]
    b3a0:	stp	x20, x19, [sp, #32]
    b3a4:	ldp	x9, x8, [x0, #16]
    b3a8:	mov	x13, #0x2601                	// #9729
    b3ac:	movk	x13, #0x1001, lsl #32
    b3b0:	mov	x2, x1
    b3b4:	mov	x19, x0
    b3b8:	mov	x1, xzr
    b3bc:	mov	w10, #0x1                   	// #1
    b3c0:	add	x11, x9, x8
    b3c4:	add	x12, x8, #0x1
    b3c8:	movk	x13, #0x400, lsl #48
    b3cc:	ldrb	w14, [x11, x1]
    b3d0:	cmp	w14, #0x3d
    b3d4:	b.hi	b3ec <__sanitizer_set_report_fd@@Base+0x1b38>  // b.pmore
    b3d8:	cmp	x14, #0x3d
    b3dc:	b.eq	b408 <__sanitizer_set_report_fd@@Base+0x1b54>  // b.none
    b3e0:	lsl	x14, x10, x14
    b3e4:	tst	x14, x13
    b3e8:	b.ne	b618 <__sanitizer_set_report_fd@@Base+0x1d64>  // b.any
    b3ec:	add	x14, x12, x1
    b3f0:	str	x14, [x19, #24]
    b3f4:	add	x1, x1, #0x1
    b3f8:	ldrb	w14, [x11, x1]
    b3fc:	cmp	w14, #0x3d
    b400:	b.ls	b3d8 <__sanitizer_set_report_fd@@Base+0x1b24>  // b.plast
    b404:	b	b3ec <__sanitizer_set_report_fd@@Base+0x1b38>
    b408:	add	x21, x9, x8
    b40c:	mov	x0, x21
    b410:	bl	c458 <__sanitizer_set_report_fd@@Base+0x2ba4>
    b414:	mov	x22, x0
    b418:	add	x1, x0, #0x1
    b41c:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b420:	add	x0, x0, #0x688
    b424:	bl	501c <__sancov_default_options@plt+0x69c>
    b428:	mov	x1, x21
    b42c:	mov	x2, x22
    b430:	mov	x20, x0
    b434:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    b438:	strb	wzr, [x20, x22]
    b43c:	ldp	x9, x8, [x19, #16]
    b440:	add	x10, x8, #0x1
    b444:	str	x10, [x19, #24]
    b448:	add	x21, x9, x10
    b44c:	ldrb	w10, [x21]
    b450:	cmp	w10, #0x22
    b454:	b.eq	b460 <__sanitizer_set_report_fd@@Base+0x1bac>  // b.none
    b458:	cmp	w10, #0x27
    b45c:	b.ne	b508 <__sanitizer_set_report_fd@@Base+0x1c54>  // b.any
    b460:	add	x11, x8, #0x2
    b464:	str	x11, [x19, #24]
    b468:	ldrb	w13, [x9, x11]
    b46c:	cmp	w13, #0x0
    b470:	cset	w10, eq  // eq = none
    b474:	cbz	w13, b4ac <__sanitizer_set_report_fd@@Base+0x1bf8>
    b478:	ldrb	w12, [x21]
    b47c:	cmp	w13, w12
    b480:	b.eq	b4ac <__sanitizer_set_report_fd@@Base+0x1bf8>  // b.none
    b484:	add	x11, x8, #0x3
    b488:	str	x11, [x19, #24]
    b48c:	ldrb	w13, [x9, x11]
    b490:	add	x11, x11, #0x1
    b494:	cmp	w13, #0x0
    b498:	cset	w10, eq  // eq = none
    b49c:	cbz	w13, b4a8 <__sanitizer_set_report_fd@@Base+0x1bf4>
    b4a0:	cmp	w13, w12
    b4a4:	b.ne	b488 <__sanitizer_set_report_fd@@Base+0x1bd4>  // b.any
    b4a8:	sub	x11, x11, #0x1
    b4ac:	cbnz	w10, b660 <__sanitizer_set_report_fd@@Base+0x1dac>
    b4b0:	add	x21, x21, #0x1
    b4b4:	sub	x8, x11, x8
    b4b8:	sub	x1, x8, #0x2
    b4bc:	mov	x0, x21
    b4c0:	bl	c458 <__sanitizer_set_report_fd@@Base+0x2ba4>
    b4c4:	mov	x23, x0
    b4c8:	add	x1, x0, #0x1
    b4cc:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b4d0:	add	x0, x0, #0x688
    b4d4:	bl	501c <__sancov_default_options@plt+0x69c>
    b4d8:	mov	x1, x21
    b4dc:	mov	x2, x23
    b4e0:	mov	x22, x0
    b4e4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    b4e8:	strb	wzr, [x22, x23]
    b4ec:	ldr	x8, [x19, #24]
    b4f0:	add	x8, x8, #0x1
    b4f4:	str	x8, [x19, #24]
    b4f8:	ldr	w8, [x19, #8]
    b4fc:	cmp	w8, #0x1
    b500:	b.ge	b590 <__sanitizer_set_report_fd@@Base+0x1cdc>  // b.tcont
    b504:	b	b5c0 <__sanitizer_set_report_fd@@Base+0x1d0c>
    b508:	mov	x12, #0x2601                	// #9729
    b50c:	add	x8, x8, #0x2
    b510:	movk	x12, #0x1001, lsl #32
    b514:	mov	x1, xzr
    b518:	mov	w11, #0x1                   	// #1
    b51c:	add	x9, x9, x8
    b520:	movk	x12, #0x400, lsl #48
    b524:	b	b538 <__sanitizer_set_report_fd@@Base+0x1c84>
    b528:	add	x10, x8, x1
    b52c:	str	x10, [x19, #24]
    b530:	ldrb	w10, [x9, x1]
    b534:	add	x1, x1, #0x1
    b538:	and	w13, w10, #0xff
    b53c:	cmp	w13, #0x3a
    b540:	and	x10, x10, #0xff
    b544:	b.hi	b528 <__sanitizer_set_report_fd@@Base+0x1c74>  // b.pmore
    b548:	lsl	x10, x11, x10
    b54c:	tst	x10, x12
    b550:	b.eq	b528 <__sanitizer_set_report_fd@@Base+0x1c74>  // b.none
    b554:	mov	x0, x21
    b558:	bl	c458 <__sanitizer_set_report_fd@@Base+0x2ba4>
    b55c:	mov	x23, x0
    b560:	add	x1, x0, #0x1
    b564:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b568:	add	x0, x0, #0x688
    b56c:	bl	501c <__sancov_default_options@plt+0x69c>
    b570:	mov	x1, x21
    b574:	mov	x2, x23
    b578:	mov	x22, x0
    b57c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    b580:	strb	wzr, [x22, x23]
    b584:	ldr	w8, [x19, #8]
    b588:	cmp	w8, #0x1
    b58c:	b.lt	b5c0 <__sanitizer_set_report_fd@@Base+0x1d0c>  // b.tstop
    b590:	mov	x21, xzr
    b594:	mov	x23, xzr
    b598:	ldr	x8, [x19]
    b59c:	mov	x0, x20
    b5a0:	ldr	x1, [x8, x21]
    b5a4:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    b5a8:	cbz	w0, b5e8 <__sanitizer_set_report_fd@@Base+0x1d34>
    b5ac:	ldrsw	x8, [x19, #8]
    b5b0:	add	x23, x23, #0x1
    b5b4:	add	x21, x21, #0x18
    b5b8:	cmp	x23, x8
    b5bc:	b.lt	b598 <__sanitizer_set_report_fd@@Base+0x1ce4>  // b.tstop
    b5c0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b5c4:	ldrsw	x3, [x8, #1848]
    b5c8:	cmp	w3, #0x14
    b5cc:	b.cs	b644 <__sanitizer_set_report_fd@@Base+0x1d90>  // b.hs, b.nlast
    b5d0:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b5d4:	add	w8, w3, #0x1
    b5d8:	add	x9, x9, #0x698
    b5dc:	str	w8, [x9, #160]
    b5e0:	str	x20, [x9, x3, lsl #3]
    b5e4:	b	b608 <__sanitizer_set_report_fd@@Base+0x1d54>
    b5e8:	ldr	x8, [x19]
    b5ec:	mov	x1, x22
    b5f0:	add	x8, x8, x21
    b5f4:	ldr	x0, [x8, #16]
    b5f8:	ldr	x8, [x0]
    b5fc:	ldr	x8, [x8]
    b600:	blr	x8
    b604:	tbz	w0, #0, b66c <__sanitizer_set_report_fd@@Base+0x1db8>
    b608:	ldp	x20, x19, [sp, #32]
    b60c:	ldp	x22, x21, [sp, #16]
    b610:	ldp	x30, x23, [sp], #48
    b614:	ret
    b618:	cbnz	x2, b628 <__sanitizer_set_report_fd@@Base+0x1d74>
    b61c:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b620:	add	x1, x1, #0xc92
    b624:	bl	b2f8 <__sanitizer_set_report_fd@@Base+0x1a44>
    b628:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b62c:	ldr	x8, [x8, #4024]
    b630:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b634:	add	x0, x0, #0xc73
    b638:	ldr	x1, [x8]
    b63c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b640:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    b644:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b648:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b64c:	add	x0, x0, #0xbb4
    b650:	add	x2, x2, #0xd52
    b654:	mov	w1, #0x1f                  	// #31
    b658:	mov	w4, #0x14                  	// #20
    b65c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    b660:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b664:	add	x1, x1, #0xc9f
    b668:	bl	b2f8 <__sanitizer_set_report_fd@@Base+0x1a44>
    b66c:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b670:	add	x1, x1, #0xcb3
    b674:	bl	b2f8 <__sanitizer_set_report_fd@@Base+0x1a44>
    b678:	stp	x30, x23, [sp, #-48]!
    b67c:	stp	x22, x21, [sp, #16]
    b680:	stp	x20, x19, [sp, #32]
    b684:	ldr	w8, [x0, #8]
    b688:	mov	x19, x1
    b68c:	cmp	w8, #0x1
    b690:	b.lt	b6cc <__sanitizer_set_report_fd@@Base+0x1e18>  // b.tstop
    b694:	mov	x20, x2
    b698:	mov	x21, x0
    b69c:	mov	x22, xzr
    b6a0:	mov	x23, xzr
    b6a4:	ldr	x8, [x21]
    b6a8:	mov	x0, x19
    b6ac:	ldr	x1, [x8, x22]
    b6b0:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    b6b4:	cbz	w0, b704 <__sanitizer_set_report_fd@@Base+0x1e50>
    b6b8:	ldrsw	x8, [x21, #8]
    b6bc:	add	x23, x23, #0x1
    b6c0:	add	x22, x22, #0x18
    b6c4:	cmp	x23, x8
    b6c8:	b.lt	b6a4 <__sanitizer_set_report_fd@@Base+0x1df0>  // b.tstop
    b6cc:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b6d0:	ldrsw	x3, [x8, #1848]
    b6d4:	cmp	w3, #0x14
    b6d8:	b.cs	b72c <__sanitizer_set_report_fd@@Base+0x1e78>  // b.hs, b.nlast
    b6dc:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    b6e0:	add	w8, w3, #0x1
    b6e4:	add	x9, x9, #0x698
    b6e8:	str	w8, [x9, #160]
    b6ec:	str	x19, [x9, x3, lsl #3]
    b6f0:	ldp	x20, x19, [sp, #32]
    b6f4:	ldp	x22, x21, [sp, #16]
    b6f8:	mov	w0, #0x1                   	// #1
    b6fc:	ldp	x30, x23, [sp], #48
    b700:	ret
    b704:	ldr	x8, [x21]
    b708:	mov	x1, x20
    b70c:	ldp	x20, x19, [sp, #32]
    b710:	add	x8, x8, x22
    b714:	ldr	x0, [x8, #16]
    b718:	ldp	x22, x21, [sp, #16]
    b71c:	ldr	x8, [x0]
    b720:	ldr	x2, [x8]
    b724:	ldp	x30, x23, [sp], #48
    b728:	br	x2
    b72c:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b730:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b734:	add	x0, x0, #0xbb4
    b738:	add	x2, x2, #0xd52
    b73c:	mov	w1, #0x1f                  	// #31
    b740:	mov	w4, #0x14                  	// #20
    b744:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    b748:	str	x30, [sp, #-48]!
    b74c:	stp	x22, x21, [sp, #16]
    b750:	stp	x20, x19, [sp, #32]
    b754:	mov	x22, #0x2600                	// #9728
    b758:	movk	x22, #0x1001, lsl #32
    b75c:	mov	x19, x1
    b760:	mov	x20, x0
    b764:	mov	w21, #0x1                   	// #1
    b768:	movk	x22, #0x400, lsl #48
    b76c:	ldp	x8, x9, [x20, #16]
    b770:	ldrb	w10, [x8, x9]
    b774:	cmp	w10, #0x3a
    b778:	b.hi	b7a4 <__sanitizer_set_report_fd@@Base+0x1ef0>  // b.pmore
    b77c:	lsl	x11, x21, x10
    b780:	tst	x11, x22
    b784:	b.eq	b7a0 <__sanitizer_set_report_fd@@Base+0x1eec>  // b.none
    b788:	add	x9, x9, #0x1
    b78c:	str	x9, [x20, #24]
    b790:	ldrb	w10, [x8, x9]
    b794:	cmp	w10, #0x3a
    b798:	b.ls	b77c <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
    b79c:	b	b7a4 <__sanitizer_set_report_fd@@Base+0x1ef0>
    b7a0:	cbz	x10, b7c4 <__sanitizer_set_report_fd@@Base+0x1f10>
    b7a4:	mov	x0, x20
    b7a8:	mov	x1, x19
    b7ac:	bl	b398 <__sanitizer_set_report_fd@@Base+0x1ae4>
    b7b0:	ldp	x8, x9, [x20, #16]
    b7b4:	ldrb	w10, [x8, x9]
    b7b8:	cmp	w10, #0x3a
    b7bc:	b.ls	b77c <__sanitizer_set_report_fd@@Base+0x1ec8>  // b.plast
    b7c0:	b	b7a4 <__sanitizer_set_report_fd@@Base+0x1ef0>
    b7c4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b7c8:	ldr	x8, [x8, #4056]
    b7cc:	ldr	w9, [x8, #36]
    b7d0:	cmp	w9, #0x0
    b7d4:	b.le	b7e8 <__sanitizer_set_report_fd@@Base+0x1f34>
    b7d8:	ldp	x20, x19, [sp, #32]
    b7dc:	ldp	x22, x21, [sp, #16]
    b7e0:	ldr	x30, [sp], #48
    b7e4:	ret
    b7e8:	mov	w9, #0x1                   	// #1
    b7ec:	str	w9, [x8, #36]
    b7f0:	ldp	x20, x19, [sp, #32]
    b7f4:	ldp	x22, x21, [sp, #16]
    b7f8:	ldr	x30, [sp], #48
    b7fc:	ret
    b800:	sub	sp, sp, #0x40
    b804:	stp	x30, x23, [sp, #16]
    b808:	stp	x22, x21, [sp, #32]
    b80c:	stp	x20, x19, [sp, #48]
    b810:	mov	x19, x0
    b814:	mov	x0, x1
    b818:	mov	x20, x1
    b81c:	bl	d1f0 <__sanitizer_set_report_fd@@Base+0x393c>
    b820:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b824:	ldr	x8, [x8, #3872]
    b828:	mov	x21, x0
    b82c:	ldr	w8, [x8]
    b830:	cbz	w8, b854 <__sanitizer_set_report_fd@@Base+0x1fa0>
    b834:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b838:	add	x8, x8, #0xcd0
    b83c:	cmp	x21, #0x0
    b840:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    b844:	csel	x2, x8, x21, eq  // eq = none
    b848:	add	x0, x0, #0xcc8
    b84c:	mov	x1, x20
    b850:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    b854:	cbz	x21, b8f0 <__sanitizer_set_report_fd@@Base+0x203c>
    b858:	ldr	q0, [x19, #16]
    b85c:	mov	x23, #0x2600                	// #9728
    b860:	movk	x23, #0x1001, lsl #32
    b864:	mov	x8, xzr
    b868:	mov	w22, #0x1                   	// #1
    b86c:	movk	x23, #0x400, lsl #48
    b870:	str	q0, [sp]
    b874:	stp	x21, xzr, [x19, #16]
    b878:	ldrb	w9, [x21, x8]
    b87c:	cmp	w9, #0x3a
    b880:	b.ls	b89c <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.plast
    b884:	b	b8ac <__sanitizer_set_report_fd@@Base+0x1ff8>
    b888:	add	x8, x8, #0x1
    b88c:	str	x8, [x19, #24]
    b890:	ldrb	w9, [x21, x8]
    b894:	cmp	w9, #0x3a
    b898:	b.hi	b8ac <__sanitizer_set_report_fd@@Base+0x1ff8>  // b.pmore
    b89c:	lsl	x10, x22, x9
    b8a0:	tst	x10, x23
    b8a4:	b.ne	b888 <__sanitizer_set_report_fd@@Base+0x1fd4>  // b.any
    b8a8:	cbz	x9, b8cc <__sanitizer_set_report_fd@@Base+0x2018>
    b8ac:	mov	x0, x19
    b8b0:	mov	x1, x20
    b8b4:	bl	b398 <__sanitizer_set_report_fd@@Base+0x1ae4>
    b8b8:	ldp	x21, x8, [x19, #16]
    b8bc:	ldrb	w9, [x21, x8]
    b8c0:	cmp	w9, #0x3a
    b8c4:	b.ls	b89c <__sanitizer_set_report_fd@@Base+0x1fe8>  // b.plast
    b8c8:	b	b8ac <__sanitizer_set_report_fd@@Base+0x1ff8>
    b8cc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b8d0:	ldr	x8, [x8, #4056]
    b8d4:	ldr	w9, [x8, #36]
    b8d8:	cmp	w9, #0x0
    b8dc:	b.gt	b8e8 <__sanitizer_set_report_fd@@Base+0x2034>
    b8e0:	mov	w9, #0x1                   	// #1
    b8e4:	str	w9, [x8, #36]
    b8e8:	ldr	q0, [sp]
    b8ec:	str	q0, [x19, #16]
    b8f0:	ldp	x20, x19, [sp, #48]
    b8f4:	ldp	x22, x21, [sp, #32]
    b8f8:	ldp	x30, x23, [sp, #16]
    b8fc:	add	sp, sp, #0x40
    b900:	ret
    b904:	cbz	x1, b9c8 <__sanitizer_set_report_fd@@Base+0x2114>
    b908:	sub	sp, sp, #0x40
    b90c:	str	x30, [sp, #16]
    b910:	stp	x22, x21, [sp, #32]
    b914:	stp	x20, x19, [sp, #48]
    b918:	ldr	q0, [x0, #16]
    b91c:	mov	x22, #0x2600                	// #9728
    b920:	movk	x22, #0x1001, lsl #32
    b924:	mov	x20, x2
    b928:	mov	x19, x0
    b92c:	mov	x8, xzr
    b930:	mov	w21, #0x1                   	// #1
    b934:	movk	x22, #0x400, lsl #48
    b938:	str	q0, [sp]
    b93c:	stp	x1, xzr, [x0, #16]
    b940:	ldrb	w9, [x1, x8]
    b944:	cmp	w9, #0x3a
    b948:	b.ls	b964 <__sanitizer_set_report_fd@@Base+0x20b0>  // b.plast
    b94c:	b	b974 <__sanitizer_set_report_fd@@Base+0x20c0>
    b950:	add	x8, x8, #0x1
    b954:	str	x8, [x19, #24]
    b958:	ldrb	w9, [x1, x8]
    b95c:	cmp	w9, #0x3a
    b960:	b.hi	b974 <__sanitizer_set_report_fd@@Base+0x20c0>  // b.pmore
    b964:	lsl	x10, x21, x9
    b968:	tst	x10, x22
    b96c:	b.ne	b950 <__sanitizer_set_report_fd@@Base+0x209c>  // b.any
    b970:	cbz	x9, b994 <__sanitizer_set_report_fd@@Base+0x20e0>
    b974:	mov	x0, x19
    b978:	mov	x1, x20
    b97c:	bl	b398 <__sanitizer_set_report_fd@@Base+0x1ae4>
    b980:	ldp	x1, x8, [x19, #16]
    b984:	ldrb	w9, [x1, x8]
    b988:	cmp	w9, #0x3a
    b98c:	b.ls	b964 <__sanitizer_set_report_fd@@Base+0x20b0>  // b.plast
    b990:	b	b974 <__sanitizer_set_report_fd@@Base+0x20c0>
    b994:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b998:	ldr	x8, [x8, #4056]
    b99c:	ldr	w9, [x8, #36]
    b9a0:	cmp	w9, #0x0
    b9a4:	b.gt	b9b0 <__sanitizer_set_report_fd@@Base+0x20fc>
    b9a8:	mov	w9, #0x1                   	// #1
    b9ac:	str	w9, [x8, #36]
    b9b0:	ldr	q0, [sp]
    b9b4:	ldr	x30, [sp, #16]
    b9b8:	str	q0, [x19, #16]
    b9bc:	ldp	x20, x19, [sp, #48]
    b9c0:	ldp	x22, x21, [sp, #32]
    b9c4:	add	sp, sp, #0x40
    b9c8:	ret
    b9cc:	sub	sp, sp, #0x60
    b9d0:	str	x30, [sp, #48]
    b9d4:	stp	x22, x21, [sp, #64]
    b9d8:	stp	x20, x19, [sp, #80]
    b9dc:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    b9e0:	ldr	x22, [x22, #4016]
    b9e4:	mov	w21, w2
    b9e8:	mov	x19, x1
    b9ec:	mov	x20, x0
    b9f0:	ldr	x8, [x22]
    b9f4:	cbnz	x8, ba04 <__sanitizer_set_report_fd@@Base+0x2150>
    b9f8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    b9fc:	mov	x8, x0
    ba00:	str	x0, [x22]
    ba04:	cmp	x8, #0x8, lsl #12
    ba08:	mov	w9, #0x8000                	// #32768
    ba0c:	csel	x4, x8, x9, hi  // hi = pmore
    ba10:	add	x1, sp, #0x38
    ba14:	add	x2, sp, #0x28
    ba18:	add	x3, sp, #0x18
    ba1c:	add	x5, sp, #0x24
    ba20:	mov	x0, x19
    ba24:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    ba28:	tbz	w0, #0, baa8 <__sanitizer_set_report_fd@@Base+0x21f4>
    ba2c:	ldr	x8, [sp, #56]
    ba30:	cbz	x8, baf4 <__sanitizer_set_report_fd@@Base+0x2240>
    ba34:	ldr	q0, [x20, #16]
    ba38:	mov	x22, #0x2600                	// #9728
    ba3c:	movk	x22, #0x1001, lsl #32
    ba40:	mov	x9, xzr
    ba44:	mov	w21, #0x1                   	// #1
    ba48:	movk	x22, #0x400, lsl #48
    ba4c:	str	q0, [sp]
    ba50:	stp	x8, xzr, [x20, #16]
    ba54:	ldrb	w10, [x8, x9]
    ba58:	cmp	w10, #0x3a
    ba5c:	b.ls	ba78 <__sanitizer_set_report_fd@@Base+0x21c4>  // b.plast
    ba60:	b	ba88 <__sanitizer_set_report_fd@@Base+0x21d4>
    ba64:	add	x9, x9, #0x1
    ba68:	str	x9, [x20, #24]
    ba6c:	ldrb	w10, [x8, x9]
    ba70:	cmp	w10, #0x3a
    ba74:	b.hi	ba88 <__sanitizer_set_report_fd@@Base+0x21d4>  // b.pmore
    ba78:	lsl	x11, x21, x10
    ba7c:	tst	x11, x22
    ba80:	b.ne	ba64 <__sanitizer_set_report_fd@@Base+0x21b0>  // b.any
    ba84:	cbz	x10, bac8 <__sanitizer_set_report_fd@@Base+0x2214>
    ba88:	mov	x0, x20
    ba8c:	mov	x1, x19
    ba90:	bl	b398 <__sanitizer_set_report_fd@@Base+0x1ae4>
    ba94:	ldp	x8, x9, [x20, #16]
    ba98:	ldrb	w10, [x8, x9]
    ba9c:	cmp	w10, #0x3a
    baa0:	b.ls	ba78 <__sanitizer_set_report_fd@@Base+0x21c4>  // b.plast
    baa4:	b	ba88 <__sanitizer_set_report_fd@@Base+0x21d4>
    baa8:	tbnz	w21, #0, bb00 <__sanitizer_set_report_fd@@Base+0x224c>
    baac:	ldr	w2, [sp, #36]
    bab0:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    bab4:	add	x0, x0, #0xcd8
    bab8:	mov	x1, x19
    babc:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    bac0:	mov	w0, wzr
    bac4:	b	bb04 <__sanitizer_set_report_fd@@Base+0x2250>
    bac8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    bacc:	ldr	x8, [x8, #4056]
    bad0:	ldr	w9, [x8, #36]
    bad4:	cmp	w9, #0x0
    bad8:	b.gt	bae4 <__sanitizer_set_report_fd@@Base+0x2230>
    badc:	mov	w9, #0x1                   	// #1
    bae0:	str	w9, [x8, #36]
    bae4:	ldr	q0, [sp]
    bae8:	str	q0, [x20, #16]
    baec:	ldr	x0, [sp, #56]
    baf0:	b	baf8 <__sanitizer_set_report_fd@@Base+0x2244>
    baf4:	mov	x0, xzr
    baf8:	ldr	x1, [sp, #40]
    bafc:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    bb00:	mov	w0, #0x1                   	// #1
    bb04:	ldp	x20, x19, [sp, #80]
    bb08:	ldp	x22, x21, [sp, #64]
    bb0c:	ldr	x30, [sp, #48]
    bb10:	add	sp, sp, #0x60
    bb14:	ret
    bb18:	str	x30, [sp, #-16]!
    bb1c:	mov	x8, x3
    bb20:	ldrsw	x3, [x0, #8]
    bb24:	cmp	w3, #0xc8
    bb28:	b.cs	bb50 <__sanitizer_set_report_fd@@Base+0x229c>  // b.hs, b.nlast
    bb2c:	ldr	x9, [x0]
    bb30:	mov	w10, #0x18                  	// #24
    bb34:	add	w11, w3, #0x1
    bb38:	madd	x9, x3, x10, x9
    bb3c:	stp	x1, x8, [x9]
    bb40:	str	x2, [x9, #16]
    bb44:	str	w11, [x0, #8]
    bb48:	ldr	x30, [sp], #16
    bb4c:	ret
    bb50:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    bb54:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    bb58:	add	x0, x0, #0xbb4
    bb5c:	add	x2, x2, #0xd04
    bb60:	mov	w1, #0xb4                  	// #180
    bb64:	mov	w4, #0xc8                  	// #200
    bb68:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    bb6c:	stp	x30, x19, [sp, #-16]!
    bb70:	mov	x19, x0
    bb74:	str	wzr, [x0, #8]
    bb78:	stp	xzr, xzr, [x0, #16]
    bb7c:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    bb80:	add	x0, x0, #0x688
    bb84:	mov	w1, #0x12c0                	// #4800
    bb88:	bl	501c <__sancov_default_options@plt+0x69c>
    bb8c:	str	x0, [x19]
    bb90:	ldp	x30, x19, [sp], #16
    bb94:	ret
    bb98:	b	bba0 <__sanitizer_set_report_fd@@Base+0x22ec>
    bb9c:	add	x0, x0, #0x1
    bba0:	ldrb	w8, [x0]
    bba4:	sub	w9, w8, #0x9
    bba8:	cmp	w9, #0x5
    bbac:	b.cc	bb9c <__sanitizer_set_report_fd@@Base+0x22e8>  // b.lo, b.ul, b.last
    bbb0:	cmp	w8, #0x20
    bbb4:	b.eq	bb9c <__sanitizer_set_report_fd@@Base+0x22e8>  // b.none
    bbb8:	cmp	w8, #0x2b
    bbbc:	b.eq	bbe4 <__sanitizer_set_report_fd@@Base+0x2330>  // b.none
    bbc0:	cmp	w8, #0x2d
    bbc4:	b.ne	bbe8 <__sanitizer_set_report_fd@@Base+0x2334>  // b.any
    bbc8:	mov	w8, #0xffffffff            	// #-1
    bbcc:	ldrb	w11, [x0, #1]!
    bbd0:	sub	w9, w11, #0x30
    bbd4:	cmp	w9, #0x9
    bbd8:	b.ls	bbfc <__sanitizer_set_report_fd@@Base+0x2348>  // b.plast
    bbdc:	mov	x10, xzr
    bbe0:	b	bc4c <__sanitizer_set_report_fd@@Base+0x2398>
    bbe4:	add	x0, x0, #0x1
    bbe8:	mov	w8, #0x1                   	// #1
    bbec:	ldrb	w11, [x0]
    bbf0:	sub	w9, w11, #0x30
    bbf4:	cmp	w9, #0x9
    bbf8:	b.hi	bbdc <__sanitizer_set_report_fd@@Base+0x2328>  // b.pmore
    bbfc:	mov	x12, #0x9999999999999999    	// #-7378697629483820647
    bc00:	movk	x12, #0x999a
    bc04:	mov	x10, xzr
    bc08:	add	x9, x0, #0x1
    bc0c:	movk	x12, #0x1999, lsl #48
    bc10:	mov	w13, #0x2f                  	// #47
    bc14:	add	x14, x10, x10, lsl #2
    bc18:	cmp	x10, x12
    bc1c:	and	x10, x11, #0xff
    bc20:	ldrb	w11, [x9], #1
    bc24:	lsl	x14, x14, #1
    bc28:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
    bc2c:	sub	x15, x13, x10
    bc30:	add	x10, x10, x14
    bc34:	cmp	x14, x15
    bc38:	sub	x10, x10, #0x30
    bc3c:	sub	w14, w11, #0x30
    bc40:	csinv	x10, x10, xzr, ls  // ls = plast
    bc44:	cmp	w14, #0xa
    bc48:	b.cc	bc14 <__sanitizer_set_report_fd@@Base+0x2360>  // b.lo, b.ul, b.last
    bc4c:	cmp	w8, #0x1
    bc50:	b.lt	bc64 <__sanitizer_set_report_fd@@Base+0x23b0>  // b.tstop
    bc54:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    bc58:	cmp	x10, x8
    bc5c:	csel	x0, x10, x8, cc  // cc = lo, ul, last
    bc60:	ret
    bc64:	cmp	x10, #0x0
    bc68:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    bc6c:	csneg	x0, x8, x10, lt  // lt = tstop
    bc70:	ret
    bc74:	str	x30, [sp, #-16]!
    bc78:	cmp	w2, #0xa
    bc7c:	b.eq	bca4 <__sanitizer_set_report_fd@@Base+0x23f0>  // b.none
    bc80:	sxtw	x3, w2
    bc84:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    bc88:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    bc8c:	add	x0, x0, #0xd7e
    bc90:	add	x2, x2, #0xdcf
    bc94:	mov	w1, #0xe7                  	// #231
    bc98:	mov	w4, #0xa                   	// #10
    bc9c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    bca0:	add	x0, x0, #0x1
    bca4:	ldrb	w8, [x0]
    bca8:	sub	w9, w8, #0x9
    bcac:	cmp	w9, #0x5
    bcb0:	b.cc	bca0 <__sanitizer_set_report_fd@@Base+0x23ec>  // b.lo, b.ul, b.last
    bcb4:	cmp	w8, #0x20
    bcb8:	b.eq	bca0 <__sanitizer_set_report_fd@@Base+0x23ec>  // b.none
    bcbc:	cmp	w8, #0x2b
    bcc0:	b.eq	bce8 <__sanitizer_set_report_fd@@Base+0x2434>  // b.none
    bcc4:	cmp	w8, #0x2d
    bcc8:	b.ne	bd58 <__sanitizer_set_report_fd@@Base+0x24a4>  // b.any
    bccc:	add	x9, x0, #0x1
    bcd0:	mov	w8, #0xffffffff            	// #-1
    bcd4:	ldrb	w12, [x9]
    bcd8:	sub	w10, w12, #0x30
    bcdc:	cmp	w10, #0x9
    bce0:	b.ls	bd00 <__sanitizer_set_report_fd@@Base+0x244c>  // b.plast
    bce4:	b	bd70 <__sanitizer_set_report_fd@@Base+0x24bc>
    bce8:	add	x9, x0, #0x1
    bcec:	mov	w8, #0x1                   	// #1
    bcf0:	ldrb	w12, [x9]
    bcf4:	sub	w10, w12, #0x30
    bcf8:	cmp	w10, #0x9
    bcfc:	b.hi	bd70 <__sanitizer_set_report_fd@@Base+0x24bc>  // b.pmore
    bd00:	mov	x11, #0x9999999999999999    	// #-7378697629483820647
    bd04:	movk	x11, #0x999a
    bd08:	mov	x10, xzr
    bd0c:	movk	x11, #0x1999, lsl #48
    bd10:	mov	w13, #0x2f                  	// #47
    bd14:	add	x14, x10, x10, lsl #2
    bd18:	cmp	x10, x11
    bd1c:	and	x10, x12, #0xff
    bd20:	ldrb	w12, [x9, #1]!
    bd24:	lsl	x14, x14, #1
    bd28:	csinv	x14, x14, xzr, cc  // cc = lo, ul, last
    bd2c:	sub	x15, x13, x10
    bd30:	add	x10, x14, x10
    bd34:	cmp	x14, x15
    bd38:	sub	x10, x10, #0x30
    bd3c:	sub	w14, w12, #0x30
    bd40:	csinv	x10, x10, xzr, ls  // ls = plast
    bd44:	cmp	w14, #0xa
    bd48:	b.cc	bd14 <__sanitizer_set_report_fd@@Base+0x2460>  // b.lo, b.ul, b.last
    bd4c:	mov	w11, #0x1                   	// #1
    bd50:	cbnz	x1, bd7c <__sanitizer_set_report_fd@@Base+0x24c8>
    bd54:	b	bd88 <__sanitizer_set_report_fd@@Base+0x24d4>
    bd58:	mov	w8, #0x1                   	// #1
    bd5c:	mov	x9, x0
    bd60:	ldrb	w12, [x9]
    bd64:	sub	w10, w12, #0x30
    bd68:	cmp	w10, #0x9
    bd6c:	b.ls	bd00 <__sanitizer_set_report_fd@@Base+0x244c>  // b.plast
    bd70:	mov	x10, xzr
    bd74:	mov	w11, wzr
    bd78:	cbz	x1, bd88 <__sanitizer_set_report_fd@@Base+0x24d4>
    bd7c:	cmp	w11, #0x0
    bd80:	csel	x9, x9, x0, ne  // ne = any
    bd84:	str	x9, [x1]
    bd88:	cmp	w8, #0x1
    bd8c:	b.lt	bda4 <__sanitizer_set_report_fd@@Base+0x24f0>  // b.tstop
    bd90:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    bd94:	cmp	x10, x8
    bd98:	csel	x0, x10, x8, cc  // cc = lo, ul, last
    bd9c:	ldr	x30, [sp], #16
    bda0:	ret
    bda4:	cmp	x10, #0x0
    bda8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
    bdac:	csneg	x0, x8, x10, lt  // lt = tstop
    bdb0:	ldr	x30, [sp], #16
    bdb4:	ret
    bdb8:	cbz	x2, bdd4 <__sanitizer_set_report_fd@@Base+0x2520>
    bdbc:	ldrb	w8, [x0]
    bdc0:	cmp	w8, w1
    bdc4:	b.eq	bdd8 <__sanitizer_set_report_fd@@Base+0x2524>  // b.none
    bdc8:	subs	x2, x2, #0x1
    bdcc:	add	x0, x0, #0x1
    bdd0:	b.ne	bdbc <__sanitizer_set_report_fd@@Base+0x2508>  // b.any
    bdd4:	mov	x0, xzr
    bdd8:	ret
    bddc:	cbz	x2, be08 <__sanitizer_set_report_fd@@Base+0x2554>
    bde0:	mov	x8, x0
    bde4:	mov	x0, xzr
    bde8:	mov	x9, x8
    bdec:	ldrb	w10, [x9], #1
    bdf0:	cmp	w10, w1
    bdf4:	csel	x0, x8, x0, eq  // eq = none
    bdf8:	subs	x2, x2, #0x1
    bdfc:	mov	x8, x9
    be00:	b.ne	bdec <__sanitizer_set_report_fd@@Base+0x2538>  // b.any
    be04:	ret
    be08:	mov	x0, xzr
    be0c:	ret
    be10:	cbz	x2, be34 <__sanitizer_set_report_fd@@Base+0x2580>
    be14:	ldrb	w8, [x0]
    be18:	ldrb	w9, [x1]
    be1c:	cmp	w8, w9
    be20:	b.ne	be3c <__sanitizer_set_report_fd@@Base+0x2588>  // b.any
    be24:	add	x0, x0, #0x1
    be28:	subs	x2, x2, #0x1
    be2c:	add	x1, x1, #0x1
    be30:	b.ne	be14 <__sanitizer_set_report_fd@@Base+0x2560>  // b.any
    be34:	mov	w0, wzr
    be38:	ret
    be3c:	mov	w8, #0xffffffff            	// #-1
    be40:	cneg	w0, w8, cs  // cs = hs, nlast
    be44:	ret
    be48:	cbz	x2, be8c <__sanitizer_set_report_fd@@Base+0x25d8>
    be4c:	cmp	x2, #0x1f
    be50:	b.ls	be6c <__sanitizer_set_report_fd@@Base+0x25b8>  // b.plast
    be54:	add	x8, x1, x2
    be58:	cmp	x8, x0
    be5c:	b.ls	be90 <__sanitizer_set_report_fd@@Base+0x25dc>  // b.plast
    be60:	add	x8, x0, x2
    be64:	cmp	x8, x1
    be68:	b.ls	be90 <__sanitizer_set_report_fd@@Base+0x25dc>  // b.plast
    be6c:	mov	x8, xzr
    be70:	sub	x9, x2, x8
    be74:	add	x10, x0, x8
    be78:	add	x8, x1, x8
    be7c:	ldrb	w11, [x8], #1
    be80:	subs	x9, x9, #0x1
    be84:	strb	w11, [x10], #1
    be88:	b.ne	be7c <__sanitizer_set_report_fd@@Base+0x25c8>  // b.any
    be8c:	ret
    be90:	and	x8, x2, #0xffffffffffffffe0
    be94:	add	x9, x1, #0x10
    be98:	add	x10, x0, #0x10
    be9c:	mov	x11, x8
    bea0:	ldp	q0, q1, [x9, #-16]
    bea4:	add	x9, x9, #0x20
    bea8:	subs	x11, x11, #0x20
    beac:	stp	q0, q1, [x10, #-16]
    beb0:	add	x10, x10, #0x20
    beb4:	b.ne	bea0 <__sanitizer_set_report_fd@@Base+0x25ec>  // b.any
    beb8:	cmp	x8, x2
    bebc:	b.ne	be70 <__sanitizer_set_report_fd@@Base+0x25bc>  // b.any
    bec0:	b	be8c <__sanitizer_set_report_fd@@Base+0x25d8>
    bec4:	cmp	x0, x1
    bec8:	b.cs	bf18 <__sanitizer_set_report_fd@@Base+0x2664>  // b.hs, b.nlast
    becc:	cmp	x2, #0x1
    bed0:	b.lt	bf40 <__sanitizer_set_report_fd@@Base+0x268c>  // b.tstop
    bed4:	cmp	x2, #0x20
    bed8:	b.cc	bef4 <__sanitizer_set_report_fd@@Base+0x2640>  // b.lo, b.ul, b.last
    bedc:	add	x8, x1, x2
    bee0:	cmp	x8, x0
    bee4:	b.ls	bf44 <__sanitizer_set_report_fd@@Base+0x2690>  // b.plast
    bee8:	add	x8, x0, x2
    beec:	cmp	x8, x1
    bef0:	b.ls	bf44 <__sanitizer_set_report_fd@@Base+0x2690>  // b.plast
    bef4:	mov	x8, xzr
    bef8:	sub	x9, x2, x8
    befc:	add	x10, x0, x8
    bf00:	add	x8, x1, x8
    bf04:	ldrb	w11, [x8], #1
    bf08:	subs	x9, x9, #0x1
    bf0c:	strb	w11, [x10], #1
    bf10:	b.ne	bf04 <__sanitizer_set_report_fd@@Base+0x2650>  // b.any
    bf14:	b	bf40 <__sanitizer_set_report_fd@@Base+0x268c>
    bf18:	b.ls	bf40 <__sanitizer_set_report_fd@@Base+0x268c>  // b.plast
    bf1c:	subs	x8, x2, #0x1
    bf20:	b.lt	bf40 <__sanitizer_set_report_fd@@Base+0x268c>  // b.tstop
    bf24:	ldrb	w9, [x1, x8]
    bf28:	add	x10, x8, #0x1
    bf2c:	sub	x11, x8, #0x1
    bf30:	cmp	x10, #0x1
    bf34:	strb	w9, [x0, x8]
    bf38:	mov	x8, x11
    bf3c:	b.gt	bf24 <__sanitizer_set_report_fd@@Base+0x2670>
    bf40:	ret
    bf44:	and	x8, x2, #0xffffffffffffffe0
    bf48:	add	x9, x1, #0x10
    bf4c:	add	x10, x0, #0x10
    bf50:	mov	x11, x8
    bf54:	ldp	q0, q1, [x9, #-16]
    bf58:	add	x9, x9, #0x20
    bf5c:	subs	x11, x11, #0x20
    bf60:	stp	q0, q1, [x10, #-16]
    bf64:	add	x10, x10, #0x20
    bf68:	b.ne	bf54 <__sanitizer_set_report_fd@@Base+0x26a0>  // b.any
    bf6c:	cmp	x8, x2
    bf70:	b.eq	bf40 <__sanitizer_set_report_fd@@Base+0x268c>  // b.none
    bf74:	b	bef8 <__sanitizer_set_report_fd@@Base+0x2644>
    bf78:	orr	w8, w0, w2
    bf7c:	tst	x8, #0xf
    bf80:	b.eq	bf9c <__sanitizer_set_report_fd@@Base+0x26e8>  // b.none
    bf84:	cbz	x2, c00c <__sanitizer_set_report_fd@@Base+0x2758>
    bf88:	mov	x8, x0
    bf8c:	subs	x2, x2, #0x1
    bf90:	strb	w1, [x8], #1
    bf94:	b.ne	bf8c <__sanitizer_set_report_fd@@Base+0x26d8>  // b.any
    bf98:	b	c00c <__sanitizer_set_report_fd@@Base+0x2758>
    bf9c:	and	x9, x2, #0xfffffffffffffff8
    bfa0:	add	x8, x0, x9
    bfa4:	cmp	x8, x0
    bfa8:	b.ls	c00c <__sanitizer_set_report_fd@@Base+0x2758>  // b.plast
    bfac:	sxtw	x10, w1
    bfb0:	sub	x11, x9, #0x1
    bfb4:	orr	x9, x10, x10, lsl #8
    bfb8:	orr	x9, x9, x9, lsl #16
    bfbc:	cmp	x11, #0x30
    bfc0:	orr	x9, x9, x9, lsl #32
    bfc4:	mov	x10, x0
    bfc8:	b.cc	c000 <__sanitizer_set_report_fd@@Base+0x274c>  // b.lo, b.ul, b.last
    bfcc:	lsr	x10, x11, #4
    bfd0:	add	x11, x10, #0x1
    bfd4:	and	x12, x11, #0x1ffffffffffffffc
    bfd8:	dup	v0.2d, x9
    bfdc:	add	x10, x0, x12, lsl #4
    bfe0:	add	x13, x0, #0x20
    bfe4:	mov	x14, x12
    bfe8:	stp	q0, q0, [x13, #-32]
    bfec:	stp	q0, q0, [x13], #64
    bff0:	subs	x14, x14, #0x4
    bff4:	b.ne	bfe8 <__sanitizer_set_report_fd@@Base+0x2734>  // b.any
    bff8:	cmp	x11, x12
    bffc:	b.eq	c00c <__sanitizer_set_report_fd@@Base+0x2758>  // b.none
    c000:	stp	x9, x9, [x10], #16
    c004:	cmp	x10, x8
    c008:	b.cc	c000 <__sanitizer_set_report_fd@@Base+0x274c>  // b.lo, b.ul, b.last
    c00c:	ret
    c010:	ldrb	w9, [x0]
    c014:	cbz	w9, c05c <__sanitizer_set_report_fd@@Base+0x27a8>
    c018:	ldrb	w10, [x1], #1
    c01c:	mov	x8, xzr
    c020:	cmp	w10, w9, uxtb
    c024:	b.eq	c054 <__sanitizer_set_report_fd@@Base+0x27a0>  // b.none
    c028:	mov	x11, x1
    c02c:	mov	w12, w10
    c030:	tst	w12, #0xff
    c034:	b.eq	c048 <__sanitizer_set_report_fd@@Base+0x2794>  // b.none
    c038:	ldrb	w12, [x11], #1
    c03c:	cmp	w12, w9, uxtb
    c040:	b.ne	c030 <__sanitizer_set_report_fd@@Base+0x277c>  // b.any
    c044:	b	c054 <__sanitizer_set_report_fd@@Base+0x27a0>
    c048:	add	x8, x8, #0x1
    c04c:	ldrb	w9, [x0, x8]
    c050:	cbnz	w9, c020 <__sanitizer_set_report_fd@@Base+0x276c>
    c054:	mov	x0, x8
    c058:	ret
    c05c:	mov	x0, xzr
    c060:	ret
    c064:	ldrb	w8, [x0]
    c068:	cmp	w8, w1, uxtb
    c06c:	b.eq	c084 <__sanitizer_set_report_fd@@Base+0x27d0>  // b.none
    c070:	tst	w8, #0xff
    c074:	b.eq	c088 <__sanitizer_set_report_fd@@Base+0x27d4>  // b.none
    c078:	ldrb	w8, [x0, #1]!
    c07c:	cmp	w8, w1, uxtb
    c080:	b.ne	c070 <__sanitizer_set_report_fd@@Base+0x27bc>  // b.any
    c084:	ret
    c088:	mov	x0, xzr
    c08c:	ret
    c090:	str	x30, [sp, #-32]!
    c094:	stp	x20, x19, [sp, #16]
    c098:	mov	x19, x0
    c09c:	mov	x20, #0xffffffffffffffff    	// #-1
    c0a0:	add	x8, x19, x20
    c0a4:	ldrb	w8, [x8, #1]
    c0a8:	add	x20, x20, #0x1
    c0ac:	cbnz	w8, c0a0 <__sanitizer_set_report_fd@@Base+0x27ec>
    c0b0:	add	x0, x20, #0x1
    c0b4:	mov	x1, xzr
    c0b8:	mov	x2, xzr
    c0bc:	bl	4b90 <__sancov_default_options@plt+0x210>
    c0c0:	cbz	x20, c12c <__sanitizer_set_report_fd@@Base+0x2878>
    c0c4:	cmp	x20, #0x20
    c0c8:	b.cc	c0e4 <__sanitizer_set_report_fd@@Base+0x2830>  // b.lo, b.ul, b.last
    c0cc:	add	x8, x19, x20
    c0d0:	cmp	x0, x8
    c0d4:	b.cs	c0ec <__sanitizer_set_report_fd@@Base+0x2838>  // b.hs, b.nlast
    c0d8:	add	x8, x0, x20
    c0dc:	cmp	x8, x19
    c0e0:	b.ls	c0ec <__sanitizer_set_report_fd@@Base+0x2838>  // b.plast
    c0e4:	mov	x8, xzr
    c0e8:	b	c118 <__sanitizer_set_report_fd@@Base+0x2864>
    c0ec:	and	x8, x20, #0xffffffffffffffe0
    c0f0:	add	x9, x19, #0x10
    c0f4:	add	x10, x0, #0x10
    c0f8:	mov	x11, x8
    c0fc:	ldp	q0, q1, [x9, #-16]
    c100:	add	x9, x9, #0x20
    c104:	subs	x11, x11, #0x20
    c108:	stp	q0, q1, [x10, #-16]
    c10c:	add	x10, x10, #0x20
    c110:	b.ne	c0fc <__sanitizer_set_report_fd@@Base+0x2848>  // b.any
    c114:	b	c124 <__sanitizer_set_report_fd@@Base+0x2870>
    c118:	ldrb	w9, [x19, x8]
    c11c:	strb	w9, [x0, x8]
    c120:	add	x8, x8, #0x1
    c124:	cmp	x20, x8
    c128:	b.ne	c118 <__sanitizer_set_report_fd@@Base+0x2864>  // b.any
    c12c:	strb	wzr, [x0, x20]
    c130:	ldp	x20, x19, [sp, #16]
    c134:	ldr	x30, [sp], #32
    c138:	ret
    c13c:	mov	x8, xzr
    c140:	ldrb	w9, [x0, x8]
    c144:	add	x8, x8, #0x1
    c148:	cbnz	w9, c140 <__sanitizer_set_report_fd@@Base+0x288c>
    c14c:	sub	x0, x8, #0x1
    c150:	ret
    c154:	ldrb	w8, [x0]
    c158:	ldrb	w11, [x1]
    c15c:	cmp	w8, w11
    c160:	b.ne	c184 <__sanitizer_set_report_fd@@Base+0x28d0>  // b.any
    c164:	add	x9, x0, #0x1
    c168:	add	x10, x1, #0x1
    c16c:	tst	w8, #0xff
    c170:	b.eq	c194 <__sanitizer_set_report_fd@@Base+0x28e0>  // b.none
    c174:	ldrb	w8, [x9], #1
    c178:	ldrb	w11, [x10], #1
    c17c:	cmp	w8, w11
    c180:	b.eq	c16c <__sanitizer_set_report_fd@@Base+0x28b8>  // b.none
    c184:	cmp	w8, w11
    c188:	mov	w8, #0xffffffff            	// #-1
    c18c:	cneg	w0, w8, cs  // cs = hs, nlast
    c190:	ret
    c194:	mov	w0, wzr
    c198:	ret
    c19c:	cbz	x2, c1c4 <__sanitizer_set_report_fd@@Base+0x2910>
    c1a0:	ldrb	w8, [x0]
    c1a4:	ldrb	w9, [x1]
    c1a8:	cmp	w8, w9
    c1ac:	b.ne	c1cc <__sanitizer_set_report_fd@@Base+0x2918>  // b.any
    c1b0:	cbz	w8, c1c4 <__sanitizer_set_report_fd@@Base+0x2910>
    c1b4:	add	x0, x0, #0x1
    c1b8:	subs	x2, x2, #0x1
    c1bc:	add	x1, x1, #0x1
    c1c0:	b.ne	c1a0 <__sanitizer_set_report_fd@@Base+0x28ec>  // b.any
    c1c4:	mov	w0, wzr
    c1c8:	ret
    c1cc:	mov	w8, #0xffffffff            	// #-1
    c1d0:	cneg	w0, w8, cs  // cs = hs, nlast
    c1d4:	ret
    c1d8:	ldrb	w9, [x0]
    c1dc:	cmp	w9, w1, uxtb
    c1e0:	b.ne	c1e8 <__sanitizer_set_report_fd@@Base+0x2934>  // b.any
    c1e4:	ret
    c1e8:	mov	w10, w9
    c1ec:	mov	x8, x0
    c1f0:	tst	w10, #0xff
    c1f4:	b.eq	c20c <__sanitizer_set_report_fd@@Base+0x2958>  // b.none
    c1f8:	ldrb	w10, [x8, #1]!
    c1fc:	cmp	w10, w1, uxtb
    c200:	b.ne	c1f0 <__sanitizer_set_report_fd@@Base+0x293c>  // b.any
    c204:	mov	x0, x8
    c208:	ret
    c20c:	mov	x8, xzr
    c210:	cbz	w9, c224 <__sanitizer_set_report_fd@@Base+0x2970>
    c214:	add	x9, x0, #0x1
    c218:	ldrb	w10, [x9, x8]
    c21c:	add	x8, x8, #0x1
    c220:	cbnz	w10, c218 <__sanitizer_set_report_fd@@Base+0x2964>
    c224:	add	x8, x0, x8
    c228:	mov	x0, x8
    c22c:	ret
    c230:	ldrb	w9, [x0]
    c234:	cbz	w9, c254 <__sanitizer_set_report_fd@@Base+0x29a0>
    c238:	mov	x8, xzr
    c23c:	cmp	w1, w9, uxtb
    c240:	csel	x8, x0, x8, eq  // eq = none
    c244:	ldrb	w9, [x0, #1]!
    c248:	cbnz	w9, c23c <__sanitizer_set_report_fd@@Base+0x2988>
    c24c:	mov	x0, x8
    c250:	ret
    c254:	mov	x8, xzr
    c258:	mov	x0, x8
    c25c:	ret
    c260:	mov	x8, xzr
    c264:	ldrb	w9, [x1, x8]
    c268:	add	x8, x8, #0x1
    c26c:	cbnz	w9, c264 <__sanitizer_set_report_fd@@Base+0x29b0>
    c270:	mov	x9, xzr
    c274:	cbz	x2, c29c <__sanitizer_set_report_fd@@Base+0x29e8>
    c278:	ldrb	w10, [x0, x9]
    c27c:	cbz	w10, c29c <__sanitizer_set_report_fd@@Base+0x29e8>
    c280:	add	x9, x9, #0x1
    c284:	cmp	x2, x9
    c288:	b.ne	c278 <__sanitizer_set_report_fd@@Base+0x29c4>  // b.any
    c28c:	mov	x9, x2
    c290:	add	x8, x9, x8
    c294:	sub	x0, x8, #0x1
    c298:	ret
    c29c:	cmp	x9, x2
    c2a0:	b.ne	c2b4 <__sanitizer_set_report_fd@@Base+0x2a00>  // b.any
    c2a4:	mov	x9, x2
    c2a8:	add	x8, x9, x8
    c2ac:	sub	x0, x8, #0x1
    c2b0:	ret
    c2b4:	sub	x11, x8, #0x1
    c2b8:	sub	x12, x2, x9
    c2bc:	cmp	x11, x12
    c2c0:	add	x10, x0, x9
    c2c4:	b.cs	c304 <__sanitizer_set_report_fd@@Base+0x2a50>  // b.hs, b.nlast
    c2c8:	cmp	x10, x1
    c2cc:	b.cs	c368 <__sanitizer_set_report_fd@@Base+0x2ab4>  // b.hs, b.nlast
    c2d0:	cmp	x8, #0x1
    c2d4:	b.lt	c290 <__sanitizer_set_report_fd@@Base+0x29dc>  // b.tstop
    c2d8:	cmp	x8, #0x20
    c2dc:	b.cc	c2fc <__sanitizer_set_report_fd@@Base+0x2a48>  // b.lo, b.ul, b.last
    c2e0:	add	x11, x1, x8
    c2e4:	cmp	x10, x11
    c2e8:	b.cs	c3d8 <__sanitizer_set_report_fd@@Base+0x2b24>  // b.hs, b.nlast
    c2ec:	add	x11, x0, x9
    c2f0:	add	x11, x11, x8
    c2f4:	cmp	x11, x1
    c2f8:	b.ls	c3d8 <__sanitizer_set_report_fd@@Base+0x2b24>  // b.plast
    c2fc:	mov	x11, xzr
    c300:	b	c440 <__sanitizer_set_report_fd@@Base+0x2b8c>
    c304:	cmp	x10, x1
    c308:	sub	x11, x12, #0x1
    c30c:	b.cs	c398 <__sanitizer_set_report_fd@@Base+0x2ae4>  // b.hs, b.nlast
    c310:	cmp	x11, #0x1
    c314:	b.lt	c3c4 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.tstop
    c318:	cmp	x11, #0x20
    c31c:	b.cc	c33c <__sanitizer_set_report_fd@@Base+0x2a88>  // b.lo, b.ul, b.last
    c320:	add	x12, x1, x11
    c324:	cmp	x10, x12
    c328:	b.cs	c408 <__sanitizer_set_report_fd@@Base+0x2b54>  // b.hs, b.nlast
    c32c:	add	x10, x2, x0
    c330:	sub	x10, x10, #0x1
    c334:	cmp	x10, x1
    c338:	b.ls	c408 <__sanitizer_set_report_fd@@Base+0x2b54>  // b.plast
    c33c:	mov	x10, xzr
    c340:	add	x11, x10, x9
    c344:	sub	x12, x11, x2
    c348:	add	x11, x0, x11
    c34c:	add	x12, x12, #0x1
    c350:	add	x10, x1, x10
    c354:	ldrb	w13, [x10], #1
    c358:	adds	x12, x12, #0x1
    c35c:	strb	w13, [x11], #1
    c360:	b.cc	c354 <__sanitizer_set_report_fd@@Base+0x2aa0>  // b.lo, b.ul, b.last
    c364:	b	c3c4 <__sanitizer_set_report_fd@@Base+0x2b10>
    c368:	cmp	x8, #0x1
    c36c:	b.lt	c290 <__sanitizer_set_report_fd@@Base+0x29dc>  // b.tstop
    c370:	cmp	x10, x1
    c374:	b.ls	c290 <__sanitizer_set_report_fd@@Base+0x29dc>  // b.plast
    c378:	ldrb	w12, [x1, x11]
    c37c:	add	x13, x11, #0x1
    c380:	sub	x14, x11, #0x1
    c384:	cmp	x13, #0x1
    c388:	strb	w12, [x10, x11]
    c38c:	mov	x11, x14
    c390:	b.gt	c378 <__sanitizer_set_report_fd@@Base+0x2ac4>
    c394:	b	c290 <__sanitizer_set_report_fd@@Base+0x29dc>
    c398:	b.ls	c3c4 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.plast
    c39c:	cmp	x11, #0x1
    c3a0:	b.lt	c3c4 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.tstop
    c3a4:	add	x10, x2, x0
    c3a8:	sub	x10, x10, #0x2
    c3ac:	sub	x11, x1, #0x2
    c3b0:	ldrb	w13, [x11, x12]
    c3b4:	sub	x12, x12, #0x1
    c3b8:	cmp	x12, #0x1
    c3bc:	strb	w13, [x10], #-1
    c3c0:	b.gt	c3b0 <__sanitizer_set_report_fd@@Base+0x2afc>
    c3c4:	add	x10, x2, x0
    c3c8:	sturb	wzr, [x10, #-1]
    c3cc:	add	x8, x9, x8
    c3d0:	sub	x0, x8, #0x1
    c3d4:	ret
    c3d8:	and	x11, x8, #0xffffffffffffffe0
    c3dc:	add	x13, x9, x0
    c3e0:	add	x12, x1, #0x10
    c3e4:	add	x13, x13, #0x10
    c3e8:	mov	x14, x11
    c3ec:	ldp	q0, q1, [x12, #-16]
    c3f0:	add	x12, x12, #0x20
    c3f4:	subs	x14, x14, #0x20
    c3f8:	stp	q0, q1, [x13, #-16]
    c3fc:	add	x13, x13, #0x20
    c400:	b.ne	c3ec <__sanitizer_set_report_fd@@Base+0x2b38>  // b.any
    c404:	b	c44c <__sanitizer_set_report_fd@@Base+0x2b98>
    c408:	and	x10, x11, #0xffffffffffffffe0
    c40c:	add	x13, x9, x0
    c410:	add	x12, x1, #0x10
    c414:	add	x13, x13, #0x10
    c418:	mov	x14, x10
    c41c:	ldp	q0, q1, [x12, #-16]
    c420:	add	x12, x12, #0x20
    c424:	subs	x14, x14, #0x20
    c428:	stp	q0, q1, [x13, #-16]
    c42c:	add	x13, x13, #0x20
    c430:	b.ne	c41c <__sanitizer_set_report_fd@@Base+0x2b68>  // b.any
    c434:	cmp	x11, x10
    c438:	b.eq	c3c4 <__sanitizer_set_report_fd@@Base+0x2b10>  // b.none
    c43c:	b	c340 <__sanitizer_set_report_fd@@Base+0x2a8c>
    c440:	ldrb	w12, [x1, x11]
    c444:	strb	w12, [x10, x11]
    c448:	add	x11, x11, #0x1
    c44c:	cmp	x8, x11
    c450:	b.ne	c440 <__sanitizer_set_report_fd@@Base+0x2b8c>  // b.any
    c454:	b	c290 <__sanitizer_set_report_fd@@Base+0x29dc>
    c458:	cbz	x1, c480 <__sanitizer_set_report_fd@@Base+0x2bcc>
    c45c:	mov	x8, x0
    c460:	mov	x0, xzr
    c464:	ldrb	w9, [x8, x0]
    c468:	cbz	w9, c47c <__sanitizer_set_report_fd@@Base+0x2bc8>
    c46c:	add	x0, x0, #0x1
    c470:	cmp	x1, x0
    c474:	b.ne	c464 <__sanitizer_set_report_fd@@Base+0x2bb0>  // b.any
    c478:	mov	x0, x1
    c47c:	ret
    c480:	mov	x0, xzr
    c484:	ret
    c488:	sub	x8, x0, #0x1
    c48c:	ldrb	w9, [x8, #1]!
    c490:	cbnz	w9, c48c <__sanitizer_set_report_fd@@Base+0x2bd8>
    c494:	mov	x9, xzr
    c498:	cbz	x2, c4b8 <__sanitizer_set_report_fd@@Base+0x2c04>
    c49c:	ldrb	w10, [x1, x9]
    c4a0:	cbz	w10, c4b8 <__sanitizer_set_report_fd@@Base+0x2c04>
    c4a4:	strb	w10, [x8, x9]
    c4a8:	add	x9, x9, #0x1
    c4ac:	cmp	x2, x9
    c4b0:	b.ne	c49c <__sanitizer_set_report_fd@@Base+0x2be8>  // b.any
    c4b4:	mov	x9, x2
    c4b8:	strb	wzr, [x8, x9]
    c4bc:	ret
    c4c0:	mov	x9, xzr
    c4c4:	ldrb	w8, [x1, x9]
    c4c8:	add	x9, x9, #0x1
    c4cc:	cbnz	w8, c4c4 <__sanitizer_set_report_fd@@Base+0x2c10>
    c4d0:	sub	x8, x9, #0x1
    c4d4:	cmp	x8, x2
    c4d8:	b.cs	c514 <__sanitizer_set_report_fd@@Base+0x2c60>  // b.hs, b.nlast
    c4dc:	cmp	x0, x1
    c4e0:	b.cs	c574 <__sanitizer_set_report_fd@@Base+0x2cc0>  // b.hs, b.nlast
    c4e4:	cmp	x9, #0x1
    c4e8:	b.lt	c64c <__sanitizer_set_report_fd@@Base+0x2d98>  // b.tstop
    c4ec:	cmp	x9, #0x20
    c4f0:	b.cc	c50c <__sanitizer_set_report_fd@@Base+0x2c58>  // b.lo, b.ul, b.last
    c4f4:	add	x10, x1, x9
    c4f8:	cmp	x10, x0
    c4fc:	b.ls	c5d8 <__sanitizer_set_report_fd@@Base+0x2d24>  // b.plast
    c500:	add	x10, x0, x9
    c504:	cmp	x10, x1
    c508:	b.ls	c5d8 <__sanitizer_set_report_fd@@Base+0x2d24>  // b.plast
    c50c:	mov	x10, xzr
    c510:	b	c638 <__sanitizer_set_report_fd@@Base+0x2d84>
    c514:	cbz	x2, c64c <__sanitizer_set_report_fd@@Base+0x2d98>
    c518:	cmp	x0, x1
    c51c:	sub	x9, x2, #0x1
    c520:	b.cs	c5a4 <__sanitizer_set_report_fd@@Base+0x2cf0>  // b.hs, b.nlast
    c524:	cmp	x9, #0x1
    c528:	b.lt	c5cc <__sanitizer_set_report_fd@@Base+0x2d18>  // b.tstop
    c52c:	cmp	x9, #0x20
    c530:	b.cc	c54c <__sanitizer_set_report_fd@@Base+0x2c98>  // b.lo, b.ul, b.last
    c534:	add	x10, x1, x9
    c538:	cmp	x10, x0
    c53c:	b.ls	c604 <__sanitizer_set_report_fd@@Base+0x2d50>  // b.plast
    c540:	add	x10, x0, x9
    c544:	cmp	x10, x1
    c548:	b.ls	c604 <__sanitizer_set_report_fd@@Base+0x2d50>  // b.plast
    c54c:	mov	x10, xzr
    c550:	mvn	x12, x10
    c554:	add	x11, x0, x10
    c558:	add	x12, x12, x2
    c55c:	add	x10, x1, x10
    c560:	ldrb	w13, [x10], #1
    c564:	subs	x12, x12, #0x1
    c568:	strb	w13, [x11], #1
    c56c:	b.ne	c560 <__sanitizer_set_report_fd@@Base+0x2cac>  // b.any
    c570:	b	c5cc <__sanitizer_set_report_fd@@Base+0x2d18>
    c574:	b.ls	c64c <__sanitizer_set_report_fd@@Base+0x2d98>  // b.plast
    c578:	cmp	x9, #0x1
    c57c:	b.lt	c64c <__sanitizer_set_report_fd@@Base+0x2d98>  // b.tstop
    c580:	mov	x9, x8
    c584:	ldrb	w10, [x1, x9]
    c588:	add	x11, x9, #0x1
    c58c:	sub	x12, x9, #0x1
    c590:	cmp	x11, #0x1
    c594:	strb	w10, [x0, x9]
    c598:	mov	x9, x12
    c59c:	b.gt	c584 <__sanitizer_set_report_fd@@Base+0x2cd0>
    c5a0:	b	c64c <__sanitizer_set_report_fd@@Base+0x2d98>
    c5a4:	b.ls	c5cc <__sanitizer_set_report_fd@@Base+0x2d18>  // b.plast
    c5a8:	cmp	x9, #0x1
    c5ac:	b.lt	c5cc <__sanitizer_set_report_fd@@Base+0x2d18>  // b.tstop
    c5b0:	sub	x10, x0, #0x2
    c5b4:	sub	x11, x1, #0x2
    c5b8:	ldrb	w12, [x11, x2]
    c5bc:	strb	w12, [x10, x2]
    c5c0:	sub	x2, x2, #0x1
    c5c4:	cmp	x2, #0x1
    c5c8:	b.gt	c5b8 <__sanitizer_set_report_fd@@Base+0x2d04>
    c5cc:	strb	wzr, [x0, x9]
    c5d0:	mov	x0, x8
    c5d4:	ret
    c5d8:	and	x10, x9, #0xffffffffffffffe0
    c5dc:	add	x11, x1, #0x10
    c5e0:	add	x12, x0, #0x10
    c5e4:	mov	x13, x10
    c5e8:	ldp	q0, q1, [x11, #-16]
    c5ec:	add	x11, x11, #0x20
    c5f0:	subs	x13, x13, #0x20
    c5f4:	stp	q0, q1, [x12, #-16]
    c5f8:	add	x12, x12, #0x20
    c5fc:	b.ne	c5e8 <__sanitizer_set_report_fd@@Base+0x2d34>  // b.any
    c600:	b	c644 <__sanitizer_set_report_fd@@Base+0x2d90>
    c604:	and	x10, x9, #0xffffffffffffffe0
    c608:	add	x11, x1, #0x10
    c60c:	add	x12, x0, #0x10
    c610:	mov	x13, x10
    c614:	ldp	q0, q1, [x11, #-16]
    c618:	add	x11, x11, #0x20
    c61c:	subs	x13, x13, #0x20
    c620:	stp	q0, q1, [x12, #-16]
    c624:	add	x12, x12, #0x20
    c628:	b.ne	c614 <__sanitizer_set_report_fd@@Base+0x2d60>  // b.any
    c62c:	cmp	x9, x10
    c630:	b.eq	c5cc <__sanitizer_set_report_fd@@Base+0x2d18>  // b.none
    c634:	b	c550 <__sanitizer_set_report_fd@@Base+0x2c9c>
    c638:	ldrb	w11, [x1, x10]
    c63c:	strb	w11, [x0, x10]
    c640:	add	x10, x10, #0x1
    c644:	cmp	x9, x10
    c648:	b.ne	c638 <__sanitizer_set_report_fd@@Base+0x2d84>  // b.any
    c64c:	mov	x0, x8
    c650:	ret
    c654:	mov	x10, xzr
    c658:	cbz	x2, c678 <__sanitizer_set_report_fd@@Base+0x2dc4>
    c65c:	ldrb	w8, [x1, x10]
    c660:	cbz	w8, c678 <__sanitizer_set_report_fd@@Base+0x2dc4>
    c664:	strb	w8, [x0, x10]
    c668:	add	x10, x10, #0x1
    c66c:	cmp	x2, x10
    c670:	b.ne	c65c <__sanitizer_set_report_fd@@Base+0x2da8>  // b.any
    c674:	mov	x10, x2
    c678:	add	x8, x0, x10
    c67c:	sub	x9, x2, x10
    c680:	orr	w11, w9, w8
    c684:	tst	x11, #0xf
    c688:	b.eq	c6a0 <__sanitizer_set_report_fd@@Base+0x2dec>  // b.none
    c68c:	cbz	x9, c700 <__sanitizer_set_report_fd@@Base+0x2e4c>
    c690:	subs	x9, x9, #0x1
    c694:	strb	wzr, [x8], #1
    c698:	b.ne	c690 <__sanitizer_set_report_fd@@Base+0x2ddc>  // b.any
    c69c:	b	c700 <__sanitizer_set_report_fd@@Base+0x2e4c>
    c6a0:	and	x11, x9, #0xfffffffffffffff8
    c6a4:	add	x9, x8, x11
    c6a8:	cmp	x9, x8
    c6ac:	b.ls	c700 <__sanitizer_set_report_fd@@Base+0x2e4c>  // b.plast
    c6b0:	sub	x11, x11, #0x1
    c6b4:	cmp	x11, #0x30
    c6b8:	b.cc	c6f4 <__sanitizer_set_report_fd@@Base+0x2e40>  // b.lo, b.ul, b.last
    c6bc:	lsr	x11, x11, #4
    c6c0:	add	x12, x10, x0
    c6c4:	add	x10, x11, #0x1
    c6c8:	and	x11, x10, #0x1ffffffffffffffc
    c6cc:	add	x12, x12, #0x20
    c6d0:	add	x8, x8, x11, lsl #4
    c6d4:	movi	v0.2d, #0x0
    c6d8:	mov	x13, x11
    c6dc:	stp	q0, q0, [x12, #-32]
    c6e0:	stp	q0, q0, [x12], #64
    c6e4:	subs	x13, x13, #0x4
    c6e8:	b.ne	c6dc <__sanitizer_set_report_fd@@Base+0x2e28>  // b.any
    c6ec:	cmp	x10, x11
    c6f0:	b.eq	c700 <__sanitizer_set_report_fd@@Base+0x2e4c>  // b.none
    c6f4:	stp	xzr, xzr, [x8], #16
    c6f8:	cmp	x8, x9
    c6fc:	b.cc	c6f4 <__sanitizer_set_report_fd@@Base+0x2e40>  // b.lo, b.ul, b.last
    c700:	ret
    c704:	mov	x8, xzr
    c708:	ldrb	w9, [x0, x8]
    c70c:	mov	x10, x8
    c710:	add	x8, x8, #0x1
    c714:	cbnz	w9, c708 <__sanitizer_set_report_fd@@Base+0x2e54>
    c718:	mov	x11, xzr
    c71c:	ldrb	w9, [x1, x11]
    c720:	add	x11, x11, #0x1
    c724:	cbnz	w9, c71c <__sanitizer_set_report_fd@@Base+0x2e68>
    c728:	sub	x9, x11, #0x1
    c72c:	cmp	x10, x9
    c730:	b.cs	c73c <__sanitizer_set_report_fd@@Base+0x2e88>  // b.hs, b.nlast
    c734:	mov	x0, xzr
    c738:	ret
    c73c:	cmp	x11, #0x1
    c740:	b.ne	c748 <__sanitizer_set_report_fd@@Base+0x2e94>  // b.any
    c744:	ret
    c748:	mov	x10, xzr
    c74c:	sub	x11, x8, x11
    c750:	mov	x12, x0
    c754:	mov	x13, xzr
    c758:	add	x8, x0, x10
    c75c:	ldrb	w14, [x12, x13]
    c760:	ldrb	w15, [x1, x13]
    c764:	cmp	w14, w15
    c768:	b.ne	c77c <__sanitizer_set_report_fd@@Base+0x2ec8>  // b.any
    c76c:	add	x13, x13, #0x1
    c770:	cmp	x9, x13
    c774:	b.ne	c75c <__sanitizer_set_report_fd@@Base+0x2ea8>  // b.any
    c778:	b	c790 <__sanitizer_set_report_fd@@Base+0x2edc>
    c77c:	add	x10, x10, #0x1
    c780:	mov	x8, xzr
    c784:	cmp	x10, x11
    c788:	add	x12, x12, #0x1
    c78c:	b.ls	c754 <__sanitizer_set_report_fd@@Base+0x2ea0>  // b.plast
    c790:	mov	x0, x8
    c794:	ret
    c798:	str	x30, [sp, #-16]!
    c79c:	mov	x8, #0x1                   	// #1
    c7a0:	movk	x8, #0x100, lsl #32
    c7a4:	mov	x3, x1
    c7a8:	cmp	x1, x8
    c7ac:	b.cs	c968 <__sanitizer_set_report_fd@@Base+0x30b4>  // b.hs, b.nlast
    c7b0:	add	x12, x0, #0x7
    c7b4:	add	x8, x0, x3
    c7b8:	and	x11, x12, #0xfffffffffffffff8
    c7bc:	mov	x10, xzr
    c7c0:	cmp	x11, x0
    c7c4:	and	x9, x8, #0xfffffffffffffff8
    c7c8:	b.ls	c860 <__sanitizer_set_report_fd@@Base+0x2fac>  // b.plast
    c7cc:	cbz	x3, c860 <__sanitizer_set_report_fd@@Base+0x2fac>
    c7d0:	add	x10, x0, #0x1
    c7d4:	cmp	x8, x10
    c7d8:	mvn	x13, x0
    c7dc:	csinc	x15, x8, x0, hi  // hi = pmore
    c7e0:	add	x14, x11, x13
    c7e4:	add	x13, x15, x13
    c7e8:	cmp	x14, x13
    c7ec:	csel	x13, x14, x13, cc  // cc = lo, ul, last
    c7f0:	add	x14, x13, #0x1
    c7f4:	cmp	x14, #0x1
    c7f8:	b.hi	c808 <__sanitizer_set_report_fd@@Base+0x2f54>  // b.pmore
    c7fc:	mov	x10, xzr
    c800:	mov	x13, x0
    c804:	b	c840 <__sanitizer_set_report_fd@@Base+0x2f8c>
    c808:	and	x17, x14, #0xfffffffffffffffe
    c80c:	mov	x15, xzr
    c810:	mov	x16, xzr
    c814:	add	x13, x0, x17
    c818:	mov	x18, x17
    c81c:	ldurb	w1, [x10, #-1]
    c820:	ldrb	w2, [x10], #2
    c824:	subs	x18, x18, #0x2
    c828:	orr	x15, x15, x1
    c82c:	orr	x16, x16, x2
    c830:	b.ne	c81c <__sanitizer_set_report_fd@@Base+0x2f68>  // b.any
    c834:	cmp	x17, x14
    c838:	orr	x10, x16, x15
    c83c:	b.eq	c860 <__sanitizer_set_report_fd@@Base+0x2fac>  // b.none
    c840:	add	x13, x13, #0x1
    c844:	ldurb	w14, [x13, #-1]
    c848:	cmp	x13, x11
    c84c:	orr	x10, x10, x14
    c850:	b.cs	c860 <__sanitizer_set_report_fd@@Base+0x2fac>  // b.hs, b.nlast
    c854:	cmp	x13, x8
    c858:	add	x13, x13, #0x1
    c85c:	b.cc	c844 <__sanitizer_set_report_fd@@Base+0x2f90>  // b.lo, b.ul, b.last
    c860:	cmp	x11, x9
    c864:	b.cs	c8e8 <__sanitizer_set_report_fd@@Base+0x3034>  // b.hs, b.nlast
    c868:	orr	x12, x12, #0x7
    c86c:	eor	x12, x12, #0xfffffffffffffff8
    c870:	add	x12, x9, x12
    c874:	cmp	x12, #0x17
    c878:	b.hi	c884 <__sanitizer_set_report_fd@@Base+0x2fd0>  // b.pmore
    c87c:	mov	x12, x11
    c880:	b	c8d8 <__sanitizer_set_report_fd@@Base+0x3024>
    c884:	lsr	x12, x12, #3
    c888:	movi	v1.2d, #0x0
    c88c:	add	x13, x12, #0x1
    c890:	mov	v1.d[0], x10
    c894:	and	x10, x13, #0x3ffffffffffffffc
    c898:	movi	v0.2d, #0x0
    c89c:	add	x12, x11, x10, lsl #3
    c8a0:	add	x11, x11, #0x10
    c8a4:	mov	x14, x10
    c8a8:	ldp	q2, q3, [x11, #-16]
    c8ac:	subs	x14, x14, #0x4
    c8b0:	add	x11, x11, #0x20
    c8b4:	orr	v1.16b, v2.16b, v1.16b
    c8b8:	orr	v0.16b, v3.16b, v0.16b
    c8bc:	b.ne	c8a8 <__sanitizer_set_report_fd@@Base+0x2ff4>  // b.any
    c8c0:	orr	v0.16b, v0.16b, v1.16b
    c8c4:	dup	v1.2d, v0.d[1]
    c8c8:	orr	v0.16b, v0.16b, v1.16b
    c8cc:	cmp	x13, x10
    c8d0:	fmov	x10, d0
    c8d4:	b.eq	c8e8 <__sanitizer_set_report_fd@@Base+0x3034>  // b.none
    c8d8:	ldr	x11, [x12], #8
    c8dc:	cmp	x12, x9
    c8e0:	orr	x10, x11, x10
    c8e4:	b.cc	c8d8 <__sanitizer_set_report_fd@@Base+0x3024>  // b.lo, b.ul, b.last
    c8e8:	cmp	x9, x0
    c8ec:	b.cc	c958 <__sanitizer_set_report_fd@@Base+0x30a4>  // b.lo, b.ul, b.last
    c8f0:	cmp	x8, x9
    c8f4:	b.ls	c958 <__sanitizer_set_report_fd@@Base+0x30a4>  // b.plast
    c8f8:	sub	x11, x3, x9
    c8fc:	add	x12, x0, x11
    c900:	cmp	x12, #0x2
    c904:	b.cs	c910 <__sanitizer_set_report_fd@@Base+0x305c>  // b.hs, b.nlast
    c908:	mov	x11, x9
    c90c:	b	c948 <__sanitizer_set_report_fd@@Base+0x3094>
    c910:	and	x14, x12, #0xfffffffffffffffe
    c914:	mov	x13, xzr
    c918:	add	x11, x9, x14
    c91c:	add	x9, x9, #0x1
    c920:	mov	x15, x14
    c924:	ldurb	w16, [x9, #-1]
    c928:	ldrb	w17, [x9], #2
    c92c:	subs	x15, x15, #0x2
    c930:	orr	x10, x10, x16
    c934:	orr	x13, x13, x17
    c938:	b.ne	c924 <__sanitizer_set_report_fd@@Base+0x3070>  // b.any
    c93c:	cmp	x14, x12
    c940:	orr	x10, x13, x10
    c944:	b.eq	c958 <__sanitizer_set_report_fd@@Base+0x30a4>  // b.none
    c948:	ldrb	w9, [x11], #1
    c94c:	cmp	x8, x11
    c950:	orr	x10, x10, x9
    c954:	b.ne	c948 <__sanitizer_set_report_fd@@Base+0x3094>  // b.any
    c958:	cmp	x10, #0x0
    c95c:	cset	w0, eq  // eq = none
    c960:	ldr	x30, [sp], #16
    c964:	ret
    c968:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    c96c:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    c970:	add	x0, x0, #0xd7e
    c974:	add	x2, x2, #0xde2
    c978:	mov	w1, #0x106                 	// #262
    c97c:	mov	x4, #0x10000000000         	// #1099511627776
    c980:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    c984:	mov	w8, #0x4810                	// #18448
    c988:	add	x0, x0, x8
    c98c:	b	d5f4 <__sanitizer_set_report_fd@@Base+0x3d40>
    c990:	str	x30, [sp, #-48]!
    c994:	stp	x22, x21, [sp, #16]
    c998:	stp	x20, x19, [sp, #32]
    c99c:	mov	w8, #0x4810                	// #18448
    c9a0:	add	x19, x0, x8
    c9a4:	mov	x20, x0
    c9a8:	mov	x0, x19
    c9ac:	mov	x21, x1
    c9b0:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
    c9b4:	ldr	x22, [x20, #18536]
    c9b8:	cmp	x22, #0x400
    c9bc:	b.cs	c9fc <__sanitizer_set_report_fd@@Base+0x3148>  // b.hs, b.nlast
    c9c0:	add	x8, x22, #0x1
    c9c4:	mov	x0, x21
    c9c8:	str	x8, [x20, #18536]
    c9cc:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    c9d0:	add	x8, x20, x22, lsl #5
    c9d4:	mov	w9, #0x4888                	// #18568
    c9d8:	str	x0, [x8, #18544]
    c9dc:	str	xzr, [x8, #18560]
    c9e0:	str	xzr, [x8, #18552]
    c9e4:	strb	wzr, [x8, x9]
    c9e8:	mov	x0, x19
    c9ec:	ldp	x20, x19, [sp, #32]
    c9f0:	ldp	x22, x21, [sp, #16]
    c9f4:	ldr	x30, [sp], #48
    c9f8:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
    c9fc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ca00:	ldr	x8, [x8, #4024]
    ca04:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ca08:	add	x0, x0, #0xe10
    ca0c:	mov	w2, #0x400                 	// #1024
    ca10:	ldr	x1, [x8]
    ca14:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    ca18:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    ca1c:	sub	sp, sp, #0xb0
    ca20:	stp	x29, x30, [sp, #80]
    ca24:	stp	x28, x27, [sp, #96]
    ca28:	stp	x26, x25, [sp, #112]
    ca2c:	stp	x24, x23, [sp, #128]
    ca30:	stp	x22, x21, [sp, #144]
    ca34:	stp	x20, x19, [sp, #160]
    ca38:	mov	w8, #0x4810                	// #18448
    ca3c:	add	x23, x0, x8
    ca40:	mov	x20, x0
    ca44:	mov	x0, x23
    ca48:	mov	x21, x1
    ca4c:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
    ca50:	add	x0, sp, #0x30
    ca54:	mov	w1, #0x1000                	// #4096
    ca58:	stp	xzr, xzr, [sp, #56]
    ca5c:	str	xzr, [sp, #48]
    ca60:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    ca64:	ldr	x8, [sp, #64]
    ca68:	cmp	x8, #0xfff
    ca6c:	b.hi	caa4 <__sanitizer_set_report_fd@@Base+0x31f0>  // b.pmore
    ca70:	ldr	x9, [sp, #56]
    ca74:	cmp	x9, #0xfff
    ca78:	b.hi	ca8c <__sanitizer_set_report_fd@@Base+0x31d8>  // b.pmore
    ca7c:	add	x0, sp, #0x30
    ca80:	mov	w1, #0x1000                	// #4096
    ca84:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    ca88:	ldr	x8, [sp, #64]
    ca8c:	ldr	x9, [sp, #48]
    ca90:	mov	w10, #0x1000                	// #4096
    ca94:	sub	x2, x10, x8
    ca98:	mov	w1, wzr
    ca9c:	add	x0, x9, x8
    caa0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    caa4:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
    caa8:	ldr	q0, [x8, #3584]
    caac:	ldr	x8, [sp, #48]
    cab0:	str	q0, [sp, #64]
    cab4:	strb	wzr, [x8]
    cab8:	cbz	x21, cb44 <__sanitizer_set_report_fd@@Base+0x3290>
    cabc:	ldr	x8, [sp, #64]
    cac0:	ldr	x1, [sp, #48]
    cac4:	mov	x0, x21
    cac8:	sub	x2, x8, #0x1
    cacc:	bl	d068 <__sanitizer_set_report_fd@@Base+0x37b4>
    cad0:	cbz	x0, cb44 <__sanitizer_set_report_fd@@Base+0x3290>
    cad4:	ldr	x8, [sp, #64]
    cad8:	cbz	x8, ce94 <__sanitizer_set_report_fd@@Base+0x35e0>
    cadc:	ldr	x8, [sp, #48]
    cae0:	ldrb	w8, [x8]
    cae4:	cbz	w8, cb44 <__sanitizer_set_report_fd@@Base+0x3290>
    cae8:	ldr	x8, [x20, #18536]
    caec:	cbz	x8, cb44 <__sanitizer_set_report_fd@@Base+0x3290>
    caf0:	mov	w8, #0x4888                	// #18568
    caf4:	mov	x19, xzr
    caf8:	add	x22, x20, x8
    cafc:	b	cb14 <__sanitizer_set_report_fd@@Base+0x3260>
    cb00:	ldr	x8, [x20, #18536]
    cb04:	add	x19, x19, #0x1
    cb08:	add	x22, x22, #0x20
    cb0c:	cmp	x19, x8
    cb10:	b.cs	cb44 <__sanitizer_set_report_fd@@Base+0x3290>  // b.hs, b.nlast
    cb14:	ldrb	w8, [x22]
    cb18:	cbnz	w8, cb00 <__sanitizer_set_report_fd@@Base+0x324c>
    cb1c:	ldur	x8, [x22, #-8]
    cb20:	cbnz	x8, cb00 <__sanitizer_set_report_fd@@Base+0x324c>
    cb24:	ldur	x0, [x22, #-24]
    cb28:	mov	x1, x21
    cb2c:	bl	6df0 <__sanitizer_report_error_summary@@Base+0x408>
    cb30:	tbz	w0, #0, cb00 <__sanitizer_set_report_fd@@Base+0x324c>
    cb34:	ldr	x0, [sp, #48]
    cb38:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    cb3c:	stur	x0, [x22, #-8]
    cb40:	b	cb00 <__sanitizer_set_report_fd@@Base+0x324c>
    cb44:	add	x0, sp, #0x10
    cb48:	str	x23, [sp, #8]
    cb4c:	strb	wzr, [sp, #40]
    cb50:	bl	13ffc <__sanitizer_sandbox_on_notify@@Base+0x4cc>
    cb54:	ldr	x8, [x20, #18536]
    cb58:	cbz	x8, ccb4 <__sanitizer_set_report_fd@@Base+0x3400>
    cb5c:	mov	x23, xzr
    cb60:	b	cb74 <__sanitizer_set_report_fd@@Base+0x32c0>
    cb64:	ldr	x8, [x20, #18536]
    cb68:	add	x23, x23, #0x1
    cb6c:	cmp	x23, x8
    cb70:	b.cs	ccb4 <__sanitizer_set_report_fd@@Base+0x3400>  // b.hs, b.nlast
    cb74:	ldr	x8, [sp, #32]
    cb78:	add	x25, x20, x23, lsl #5
    cb7c:	mov	w9, #0x4870                	// #18544
    cb80:	add	x19, x25, x9
    cb84:	mov	w29, wzr
    cb88:	cbz	x8, cc7c <__sanitizer_set_report_fd@@Base+0x33c8>
    cb8c:	ldr	x27, [sp, #16]
    cb90:	mov	w9, #0x4880                	// #18560
    cb94:	add	x28, x25, x9
    cb98:	mov	w9, #0x4888                	// #18568
    cb9c:	add	x26, x25, x9
    cba0:	mov	w9, #0x48                  	// #72
    cba4:	madd	x21, x8, x9, x27
    cba8:	mov	w8, #0x4878                	// #18552
    cbac:	add	x24, x25, x8
    cbb0:	b	cbc0 <__sanitizer_set_report_fd@@Base+0x330c>
    cbb4:	add	x27, x27, #0x48
    cbb8:	cmp	x27, x21
    cbbc:	b.eq	cc7c <__sanitizer_set_report_fd@@Base+0x33c8>  // b.none
    cbc0:	ldr	x22, [x27, #56]
    cbc4:	cbnz	x22, cbd4 <__sanitizer_set_report_fd@@Base+0x3320>
    cbc8:	b	cbb4 <__sanitizer_set_report_fd@@Base+0x3300>
    cbcc:	ldr	x22, [x22]
    cbd0:	cbz	x22, cbb4 <__sanitizer_set_report_fd@@Base+0x3300>
    cbd4:	ldrb	w8, [x22, #24]
    cbd8:	cbz	w8, cbcc <__sanitizer_set_report_fd@@Base+0x3318>
    cbdc:	ldr	x0, [x19]
    cbe0:	ldr	x1, [x27]
    cbe4:	bl	6df0 <__sanitizer_report_error_summary@@Base+0x408>
    cbe8:	tbz	w0, #0, cc00 <__sanitizer_set_report_fd@@Base+0x334c>
    cbec:	tbnz	w29, #0, ce34 <__sanitizer_set_report_fd@@Base+0x3580>
    cbf0:	ldrb	w8, [x26]
    cbf4:	cbz	w8, cc18 <__sanitizer_set_report_fd@@Base+0x3364>
    cbf8:	mov	w29, #0x1                   	// #1
    cbfc:	b	cbcc <__sanitizer_set_report_fd@@Base+0x3318>
    cc00:	ldr	x0, [x28]
    cc04:	cbz	x0, cbcc <__sanitizer_set_report_fd@@Base+0x3318>
    cc08:	ldr	x1, [x27]
    cc0c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    cc10:	cbnz	w0, cbcc <__sanitizer_set_report_fd@@Base+0x3318>
    cc14:	b	cbec <__sanitizer_set_report_fd@@Base+0x3338>
    cc18:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    cc1c:	ldr	x8, [x8, #3872]
    cc20:	ldr	w8, [x8]
    cc24:	cbz	w8, cc3c <__sanitizer_set_report_fd@@Base+0x3388>
    cc28:	ldr	x1, [x19]
    cc2c:	ldr	x2, [x27]
    cc30:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    cc34:	add	x0, x0, #0xe8e
    cc38:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    cc3c:	mov	w8, #0x1                   	// #1
    cc40:	strb	w8, [x26]
    cc44:	ldr	x0, [x27]
    cc48:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
    cc4c:	str	x0, [x24]
    cc50:	ldr	x3, [x20]
    cc54:	cmp	x3, #0x80
    cc58:	b.cs	ce78 <__sanitizer_set_report_fd@@Base+0x35c4>  // b.hs, b.nlast
    cc5c:	ldur	q0, [x22, #8]
    cc60:	add	x8, x20, x3, lsl #4
    cc64:	add	x9, x3, #0x1
    cc68:	mov	w29, #0x1                   	// #1
    cc6c:	stur	q0, [x8, #8]
    cc70:	dmb	ish
    cc74:	str	x9, [x20]
    cc78:	b	cbb4 <__sanitizer_set_report_fd@@Base+0x3300>
    cc7c:	tbnz	w29, #0, cb64 <__sanitizer_set_report_fd@@Base+0x32b0>
    cc80:	mov	w8, #0x4888                	// #18568
    cc84:	ldrb	w8, [x25, x8]
    cc88:	cbz	w8, cb64 <__sanitizer_set_report_fd@@Base+0x32b0>
    cc8c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    cc90:	ldr	x8, [x8, #4024]
    cc94:	add	x9, x20, x23, lsl #5
    cc98:	ldr	x2, [x9, #18552]
    cc9c:	ldr	x3, [x19]
    cca0:	ldr	x1, [x8]
    cca4:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    cca8:	add	x0, x0, #0xf72
    ccac:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    ccb0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    ccb4:	mov	w8, #0xc870                	// #51312
    ccb8:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ccbc:	ldrb	w8, [x20, x8]
    ccc0:	ldr	x22, [x22, #3872]
    ccc4:	cbz	w8, cddc <__sanitizer_set_report_fd@@Base+0x3528>
    ccc8:	ldr	x8, [sp, #32]
    cccc:	cbz	x8, cddc <__sanitizer_set_report_fd@@Base+0x3528>
    ccd0:	ldr	x19, [sp, #16]
    ccd4:	mov	w9, #0x48                  	// #72
    ccd8:	adrp	x21, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ccdc:	add	x23, x20, #0x818
    cce0:	madd	x24, x8, x9, x19
    cce4:	add	x21, x21, #0xfca
    cce8:	b	ccf8 <__sanitizer_set_report_fd@@Base+0x3444>
    ccec:	add	x19, x19, #0x48
    ccf0:	cmp	x19, x24
    ccf4:	b.eq	cddc <__sanitizer_set_report_fd@@Base+0x3528>  // b.none
    ccf8:	ldrb	w8, [x19, #44]
    ccfc:	cbz	w8, ccec <__sanitizer_set_report_fd@@Base+0x3438>
    cd00:	ldr	x25, [x19, #56]
    cd04:	cbnz	x25, cd14 <__sanitizer_set_report_fd@@Base+0x3460>
    cd08:	b	ccec <__sanitizer_set_report_fd@@Base+0x3438>
    cd0c:	ldr	x25, [x25]
    cd10:	cbz	x25, ccec <__sanitizer_set_report_fd@@Base+0x3438>
    cd14:	ldrb	w8, [x25, #24]
    cd18:	cbz	w8, cd0c <__sanitizer_set_report_fd@@Base+0x3458>
    cd1c:	ldr	x8, [x25, #8]
    cd20:	ldr	x9, [x20, #2056]
    cd24:	dmb	ish
    cd28:	cbz	x9, cd9c <__sanitizer_set_report_fd@@Base+0x34e8>
    cd2c:	mov	x10, x23
    cd30:	b	cd40 <__sanitizer_set_report_fd@@Base+0x348c>
    cd34:	subs	x9, x9, #0x1
    cd38:	add	x10, x10, #0x10
    cd3c:	b.eq	cd9c <__sanitizer_set_report_fd@@Base+0x34e8>  // b.none
    cd40:	ldur	x11, [x10, #-8]
    cd44:	cmp	x11, x8
    cd48:	b.hi	cd34 <__sanitizer_set_report_fd@@Base+0x3480>  // b.pmore
    cd4c:	ldr	x11, [x10]
    cd50:	cmp	x11, x8
    cd54:	b.ls	cd34 <__sanitizer_set_report_fd@@Base+0x3480>  // b.plast
    cd58:	ldr	x9, [x25, #16]
    cd5c:	ldr	x8, [x20, #2056]
    cd60:	dmb	ish
    cd64:	cbz	x8, cd9c <__sanitizer_set_report_fd@@Base+0x34e8>
    cd68:	sub	x9, x9, #0x1
    cd6c:	mov	x10, x23
    cd70:	b	cd80 <__sanitizer_set_report_fd@@Base+0x34cc>
    cd74:	subs	x8, x8, #0x1
    cd78:	add	x10, x10, #0x10
    cd7c:	b.eq	cd9c <__sanitizer_set_report_fd@@Base+0x34e8>  // b.none
    cd80:	ldur	x11, [x10, #-8]
    cd84:	cmp	x11, x9
    cd88:	b.hi	cd74 <__sanitizer_set_report_fd@@Base+0x34c0>  // b.pmore
    cd8c:	ldr	x11, [x10]
    cd90:	cmp	x11, x9
    cd94:	b.ls	cd74 <__sanitizer_set_report_fd@@Base+0x34c0>  // b.plast
    cd98:	b	cd0c <__sanitizer_set_report_fd@@Base+0x3458>
    cd9c:	ldr	w8, [x22]
    cda0:	cbz	w8, cdb4 <__sanitizer_set_report_fd@@Base+0x3500>
    cda4:	ldp	x1, x2, [x25, #8]
    cda8:	ldr	x3, [x19]
    cdac:	mov	x0, x21
    cdb0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    cdb4:	ldr	x3, [x20, #2056]
    cdb8:	cmp	x3, #0x400
    cdbc:	b.cs	ce5c <__sanitizer_set_report_fd@@Base+0x35a8>  // b.hs, b.nlast
    cdc0:	ldur	q0, [x25, #8]
    cdc4:	add	x8, x20, x3, lsl #4
    cdc8:	add	x9, x3, #0x1
    cdcc:	str	q0, [x8, #2064]
    cdd0:	dmb	ish
    cdd4:	str	x9, [x20, #2056]
    cdd8:	b	cd0c <__sanitizer_set_report_fd@@Base+0x3458>
    cddc:	ldr	x8, [sp, #32]
    cde0:	cbz	x8, ce04 <__sanitizer_set_report_fd@@Base+0x3550>
    cde4:	ldr	x20, [sp, #16]
    cde8:	add	x8, x8, x8, lsl #3
    cdec:	lsl	x19, x8, #3
    cdf0:	mov	x0, x20
    cdf4:	bl	6b30 <__sanitizer_report_error_summary@@Base+0x148>
    cdf8:	subs	x19, x19, #0x48
    cdfc:	add	x20, x20, #0x48
    ce00:	b.ne	cdf0 <__sanitizer_set_report_fd@@Base+0x353c>  // b.any
    ce04:	ldp	x0, x1, [sp, #48]
    ce08:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    ce0c:	ldr	x0, [sp, #8]
    ce10:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
    ce14:	ldp	x20, x19, [sp, #160]
    ce18:	ldp	x22, x21, [sp, #144]
    ce1c:	ldp	x24, x23, [sp, #128]
    ce20:	ldp	x26, x25, [sp, #112]
    ce24:	ldp	x28, x27, [sp, #96]
    ce28:	ldp	x29, x30, [sp, #80]
    ce2c:	add	sp, sp, #0xb0
    ce30:	ret
    ce34:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ce38:	ldr	x8, [x8, #4024]
    ce3c:	ldr	x2, [x19]
    ce40:	ldr	x3, [x24]
    ce44:	ldr	x4, [x27]
    ce48:	ldr	x1, [x8]
    ce4c:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ce50:	add	x0, x0, #0xe3a
    ce54:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    ce58:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    ce5c:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ce60:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ce64:	add	x0, x0, #0xecd
    ce68:	add	x2, x2, #0xffd
    ce6c:	mov	w1, #0x70                  	// #112
    ce70:	mov	w4, #0x400                 	// #1024
    ce74:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    ce78:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ce7c:	adrp	x2, 25000 <__interceptor_sigaction@@Base+0x2a44>
    ce80:	add	x0, x0, #0xecd
    ce84:	add	x2, x2, #0xf23
    ce88:	mov	w1, #0x53                  	// #83
    ce8c:	mov	w4, #0x80                  	// #128
    ce90:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    ce94:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    ce98:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    ce9c:	add	x0, x0, #0xbf8
    cea0:	add	x2, x2, #0x7fd
    cea4:	mov	w1, #0x1c5                 	// #453
    cea8:	mov	x3, xzr
    ceac:	mov	x4, xzr
    ceb0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    ceb4:	mov	x1, xzr
    ceb8:	b	ca1c <__sanitizer_set_report_fd@@Base+0x3168>
    cebc:	cmn	x0, #0xfff
    cec0:	b.cc	ced8 <__sanitizer_set_report_fd@@Base+0x3624>  // b.lo, b.ul, b.last
    cec4:	cbz	x1, ced0 <__sanitizer_set_report_fd@@Base+0x361c>
    cec8:	neg	w8, w0
    cecc:	str	w8, [x1]
    ced0:	mov	w0, #0x1                   	// #1
    ced4:	ret
    ced8:	mov	w0, wzr
    cedc:	ret
    cee0:	mov	w8, #0xde                  	// #222
    cee4:	sxtw	x2, w2
    cee8:	sxtw	x3, w3
    ceec:	sxtw	x4, w4
    cef0:	svc	#0x0
    cef4:	ret
    cef8:	mov	w8, #0xd7                  	// #215
    cefc:	svc	#0x0
    cf00:	ret
    cf04:	mov	w8, #0xe2                  	// #226
    cf08:	sxtw	x2, w2
    cf0c:	svc	#0x0
    cf10:	ret
    cf14:	mov	w8, #0x39                  	// #57
    cf18:	sxtw	x0, w0
    cf1c:	svc	#0x0
    cf20:	ret
    cf24:	mov	x9, x0
    cf28:	mov	x0, #0xffffffffffffff9c    	// #-100
    cf2c:	sxtw	x2, w1
    cf30:	mov	w8, #0x38                  	// #56
    cf34:	mov	x1, x9
    cf38:	svc	#0x0
    cf3c:	ret
    cf40:	mov	x9, x0
    cf44:	sxtw	x10, w1
    cf48:	mov	x0, #0xffffffffffffff9c    	// #-100
    cf4c:	mov	w3, w2
    cf50:	mov	w8, #0x38                  	// #56
    cf54:	mov	x1, x9
    cf58:	mov	x2, x10
    cf5c:	svc	#0x0
    cf60:	ret
    cf64:	sxtw	x9, w0
    cf68:	mov	x0, x9
    cf6c:	mov	w8, #0x3f                  	// #63
    cf70:	svc	#0x0
    cf74:	cmn	x0, #0xfff
    cf78:	b.cc	cf84 <__sanitizer_set_report_fd@@Base+0x36d0>  // b.lo, b.ul, b.last
    cf7c:	cmn	w0, #0x4
    cf80:	b.eq	cf68 <__sanitizer_set_report_fd@@Base+0x36b4>  // b.none
    cf84:	ret
    cf88:	sxtw	x9, w0
    cf8c:	mov	x0, x9
    cf90:	mov	w8, #0x40                  	// #64
    cf94:	svc	#0x0
    cf98:	cmn	x0, #0xfff
    cf9c:	b.cc	cfa8 <__sanitizer_set_report_fd@@Base+0x36f4>  // b.lo, b.ul, b.last
    cfa0:	cmn	w0, #0x4
    cfa4:	b.eq	cf8c <__sanitizer_set_report_fd@@Base+0x36d8>  // b.none
    cfa8:	ret
    cfac:	sxtw	x9, w0
    cfb0:	mov	x0, x9
    cfb4:	mov	w8, #0x2e                  	// #46
    cfb8:	svc	#0x0
    cfbc:	cmn	x0, #0xfff
    cfc0:	b.cc	cfcc <__sanitizer_set_report_fd@@Base+0x3718>  // b.lo, b.ul, b.last
    cfc4:	cmn	w0, #0x4
    cfc8:	b.eq	cfb0 <__sanitizer_set_report_fd@@Base+0x36fc>  // b.none
    cfcc:	ret
    cfd0:	mov	x2, x1
    cfd4:	mov	x1, x0
    cfd8:	mov	x0, #0xffffffffffffff9c    	// #-100
    cfdc:	mov	w8, #0x4f                  	// #79
    cfe0:	mov	x3, xzr
    cfe4:	svc	#0x0
    cfe8:	ret
    cfec:	mov	x2, x1
    cff0:	mov	x1, x0
    cff4:	mov	x0, #0xffffffffffffff9c    	// #-100
    cff8:	mov	w8, #0x4f                  	// #79
    cffc:	mov	w3, #0x100                 	// #256
    d000:	svc	#0x0
    d004:	ret
    d008:	mov	w8, #0x50                  	// #80
    d00c:	sxtw	x0, w0
    d010:	svc	#0x0
    d014:	ret
    d018:	sub	sp, sp, #0x80
    d01c:	mov	x1, sp
    d020:	sxtw	x0, w0
    d024:	mov	w8, #0x50                  	// #80
    d028:	svc	#0x0
    d02c:	ldr	x8, [sp, #48]
    d030:	cmp	x0, #0x0
    d034:	csinv	x0, x8, xzr, eq  // eq = none
    d038:	add	sp, sp, #0x80
    d03c:	ret
    d040:	mov	w8, #0x17                  	// #23
    d044:	sxtw	x0, w0
    d048:	svc	#0x0
    d04c:	ret
    d050:	mov	w8, #0x18                  	// #24
    d054:	sxtw	x0, w0
    d058:	sxtw	x1, w1
    d05c:	mov	x2, xzr
    d060:	svc	#0x0
    d064:	ret
    d068:	mov	x3, x2
    d06c:	mov	x2, x1
    d070:	mov	x1, x0
    d074:	mov	x0, #0xffffffffffffff9c    	// #-100
    d078:	mov	w8, #0x4e                  	// #78
    d07c:	svc	#0x0
    d080:	ret
    d084:	mov	x1, x0
    d088:	mov	x0, #0xffffffffffffff9c    	// #-100
    d08c:	mov	w8, #0x23                  	// #35
    d090:	mov	x2, xzr
    d094:	svc	#0x0
    d098:	ret
    d09c:	mov	x3, x1
    d0a0:	mov	x1, x0
    d0a4:	mov	x0, #0xffffffffffffff9c    	// #-100
    d0a8:	mov	w8, #0x26                  	// #38
    d0ac:	mov	x2, #0xffffffffffffff9c    	// #-100
    d0b0:	svc	#0x0
    d0b4:	ret
    d0b8:	mov	w8, #0x7c                  	// #124
    d0bc:	svc	#0x0
    d0c0:	ret
    d0c4:	str	x30, [sp, #-16]!
    d0c8:	mov	w8, #0x5e                  	// #94
    d0cc:	sxtw	x0, w0
    d0d0:	svc	#0x0
    d0d4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    d0d8:	sub	sp, sp, #0x10
    d0dc:	mov	w8, w0
    d0e0:	mov	x0, sp
    d0e4:	stp	x8, xzr, [sp]
    d0e8:	mov	x1, sp
    d0ec:	mov	w8, #0x65                  	// #101
    d0f0:	svc	#0x0
    d0f4:	ldr	w8, [sp], #16
    d0f8:	cmp	w0, #0x0
    d0fc:	csel	w0, wzr, w8, eq  // eq = none
    d100:	ret
    d104:	mov	w8, #0xdd                  	// #221
    d108:	svc	#0x0
    d10c:	ret
    d110:	sub	sp, sp, #0x90
    d114:	stp	x30, x19, [sp, #128]
    d118:	mov	x19, x0
    d11c:	bl	ef38 <__sanitizer_set_report_fd@@Base+0x5684>
    d120:	tbz	w0, #0, d134 <__sanitizer_set_report_fd@@Base+0x3880>
    d124:	mov	w0, wzr
    d128:	ldp	x30, x19, [sp, #128]
    d12c:	add	sp, sp, #0x90
    d130:	ret
    d134:	mov	x0, #0xffffffffffffff9c    	// #-100
    d138:	mov	x1, x19
    d13c:	mov	x3, xzr
    d140:	mov	x2, sp
    d144:	mov	w8, #0x4f                  	// #79
    d148:	svc	#0x0
    d14c:	ldr	w8, [sp, #16]
    d150:	cmp	x0, #0x0
    d154:	cset	w9, eq  // eq = none
    d158:	and	w8, w8, #0xf000
    d15c:	cmp	w8, #0x8, lsl #12
    d160:	cset	w8, eq  // eq = none
    d164:	and	w0, w9, w8
    d168:	ldp	x30, x19, [sp, #128]
    d16c:	add	sp, sp, #0x90
    d170:	ret
    d174:	mov	w8, #0xb2                  	// #178
    d178:	svc	#0x0
    d17c:	ret
    d180:	mov	w8, #0x83                  	// #131
    d184:	sxtw	x0, w0
    d188:	sxtw	x2, w2
    d18c:	svc	#0x0
    d190:	ret
    d194:	sub	sp, sp, #0x20
    d198:	str	x30, [sp, #16]
    d19c:	mov	x0, sp
    d1a0:	mov	w2, #0x10                  	// #16
    d1a4:	mov	w1, wzr
    d1a8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d1ac:	mov	x0, sp
    d1b0:	mov	x1, xzr
    d1b4:	mov	w8, #0xa9                  	// #169
    d1b8:	svc	#0x0
    d1bc:	ldp	x8, x9, [sp]
    d1c0:	mov	w10, #0xca00                	// #51712
    d1c4:	ldr	x30, [sp, #16]
    d1c8:	movk	w10, #0x3b9a, lsl #16
    d1cc:	mul	x8, x8, x10
    d1d0:	mov	w10, #0x3e8                 	// #1000
    d1d4:	madd	x0, x9, x10, x8
    d1d8:	add	sp, sp, #0x20
    d1dc:	ret
    d1e0:	mov	w8, #0x71                  	// #113
    d1e4:	sxtw	x0, w0
    d1e8:	svc	#0x0
    d1ec:	ret
    d1f0:	sub	sp, sp, #0x40
    d1f4:	stp	x30, x23, [sp, #16]
    d1f8:	stp	x22, x21, [sp, #32]
    d1fc:	stp	x20, x19, [sp, #48]
    d200:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d204:	ldrb	w8, [x8, #1864]
    d208:	mov	x19, x0
    d20c:	tbnz	w8, #0, d24c <__sanitizer_set_report_fd@@Base+0x3998>
    d210:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d214:	add	x8, x8, #0x748
    d218:	mov	w9, #0x1                   	// #1
    d21c:	mov	x1, x8
    d220:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d224:	strb	w9, [x1], #8
    d228:	add	x3, x8, #0x10
    d22c:	add	x0, x0, #0x56
    d230:	add	x2, sp, #0x8
    d234:	mov	w4, #0x4000000             	// #67108864
    d238:	mov	x5, xzr
    d23c:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    d240:	tbnz	w0, #0, d24c <__sanitizer_set_report_fd@@Base+0x3998>
    d244:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d248:	str	xzr, [x8, #1872]
    d24c:	adrp	x23, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d250:	add	x23, x23, #0x750
    d254:	ldr	x8, [x23]
    d258:	mov	x0, xzr
    d25c:	cbz	x8, d2f4 <__sanitizer_set_report_fd@@Base+0x3a40>
    d260:	ldr	x8, [x23, #8]
    d264:	cbz	x8, d2f4 <__sanitizer_set_report_fd@@Base+0x3a40>
    d268:	mov	x0, x19
    d26c:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    d270:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d274:	ldr	x21, [x8, #1872]
    d278:	ldrb	w8, [x21]
    d27c:	cbz	w8, d2f0 <__sanitizer_set_report_fd@@Base+0x3a3c>
    d280:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    d284:	ldr	x2, [x8, #1880]
    d288:	mov	x20, x0
    d28c:	mov	x0, x21
    d290:	mov	w1, wzr
    d294:	bl	bdb8 <__sanitizer_set_report_fd@@Base+0x2504>
    d298:	cbz	x0, d2f4 <__sanitizer_set_report_fd@@Base+0x3a40>
    d29c:	mov	x22, x0
    d2a0:	mov	x0, x21
    d2a4:	mov	x1, x19
    d2a8:	mov	x2, x20
    d2ac:	bl	be10 <__sanitizer_set_report_fd@@Base+0x255c>
    d2b0:	cbnz	w0, d2c0 <__sanitizer_set_report_fd@@Base+0x3a0c>
    d2b4:	ldrb	w8, [x21, x20]
    d2b8:	cmp	w8, #0x3d
    d2bc:	b.eq	d308 <__sanitizer_set_report_fd@@Base+0x3a54>  // b.none
    d2c0:	ldrb	w8, [x22, #1]!
    d2c4:	cbz	w8, d2f0 <__sanitizer_set_report_fd@@Base+0x3a3c>
    d2c8:	ldp	x9, x8, [x23]
    d2cc:	mov	x0, x22
    d2d0:	mov	w1, wzr
    d2d4:	mov	x21, x22
    d2d8:	sub	x8, x8, x22
    d2dc:	add	x2, x8, x9
    d2e0:	bl	bdb8 <__sanitizer_set_report_fd@@Base+0x2504>
    d2e4:	mov	x22, x0
    d2e8:	cbnz	x0, d2a0 <__sanitizer_set_report_fd@@Base+0x39ec>
    d2ec:	b	d2f4 <__sanitizer_set_report_fd@@Base+0x3a40>
    d2f0:	mov	x0, xzr
    d2f4:	ldp	x20, x19, [sp, #48]
    d2f8:	ldp	x22, x21, [sp, #32]
    d2fc:	ldp	x30, x23, [sp, #16]
    d300:	add	sp, sp, #0x40
    d304:	ret
    d308:	add	x8, x21, x20
    d30c:	add	x0, x8, #0x1
    d310:	b	d2f4 <__sanitizer_set_report_fd@@Base+0x3a40>
    d314:	sub	sp, sp, #0x30
    d318:	str	x30, [sp, #16]
    d31c:	stp	x20, x19, [sp, #32]
    d320:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    d324:	ldr	x8, [x8, #4048]
    d328:	cbz	x8, d338 <__sanitizer_set_report_fd@@Base+0x3a84>
    d32c:	ldr	x8, [x8]
    d330:	add	x19, x8, #0x8
    d334:	b	d448 <__sanitizer_set_report_fd@@Base+0x3b94>
    d338:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d33c:	add	x1, x1, #0x420
    d340:	mov	w0, #0x3e80                	// #16000
    d344:	mov	w2, wzr
    d348:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    d34c:	mov	x19, x0
    d350:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d354:	add	x0, x0, #0x276
    d358:	add	x1, sp, #0x18
    d35c:	add	x2, sp, #0x8
    d360:	mov	x3, sp
    d364:	mov	w4, #0x100000              	// #1048576
    d368:	mov	x5, xzr
    d36c:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    d370:	mov	x10, x19
    d374:	tbz	w0, #0, d3bc <__sanitizer_set_report_fd@@Base+0x3b08>
    d378:	ldr	x9, [sp, #24]
    d37c:	mov	w8, #0x1                   	// #1
    d380:	str	x9, [x19]
    d384:	mov	w9, #0x1                   	// #1
    d388:	ldr	x10, [sp, #24]
    d38c:	ldrb	w11, [x10, x8]
    d390:	add	x8, x8, #0x1
    d394:	cbnz	w11, d38c <__sanitizer_set_report_fd@@Base+0x3ad8>
    d398:	add	x11, x10, x8
    d39c:	ldrb	w12, [x11]
    d3a0:	add	x10, x19, w9, uxtw #3
    d3a4:	cbz	w12, d3bc <__sanitizer_set_report_fd@@Base+0x3b08>
    d3a8:	cmp	w9, #0x7d0
    d3ac:	str	x11, [x10]
    d3b0:	b.cs	d45c <__sanitizer_set_report_fd@@Base+0x3ba8>  // b.hs, b.nlast
    d3b4:	add	w9, w9, #0x1
    d3b8:	b	d388 <__sanitizer_set_report_fd@@Base+0x3ad4>
    d3bc:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d3c0:	add	x1, x1, #0x420
    d3c4:	mov	w0, #0x3e80                	// #16000
    d3c8:	mov	w2, wzr
    d3cc:	str	xzr, [x10]
    d3d0:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    d3d4:	mov	x20, x0
    d3d8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d3dc:	add	x0, x0, #0x56
    d3e0:	add	x1, sp, #0x18
    d3e4:	add	x2, sp, #0x8
    d3e8:	mov	x3, sp
    d3ec:	mov	w4, #0x100000              	// #1048576
    d3f0:	mov	x5, xzr
    d3f4:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    d3f8:	mov	x10, x20
    d3fc:	tbz	w0, #0, d444 <__sanitizer_set_report_fd@@Base+0x3b90>
    d400:	ldr	x9, [sp, #24]
    d404:	mov	w8, #0x1                   	// #1
    d408:	str	x9, [x20]
    d40c:	mov	w9, #0x1                   	// #1
    d410:	ldr	x10, [sp, #24]
    d414:	ldrb	w11, [x10, x8]
    d418:	add	x8, x8, #0x1
    d41c:	cbnz	w11, d414 <__sanitizer_set_report_fd@@Base+0x3b60>
    d420:	add	x11, x10, x8
    d424:	ldrb	w12, [x11]
    d428:	add	x10, x20, w9, uxtw #3
    d42c:	cbz	w12, d444 <__sanitizer_set_report_fd@@Base+0x3b90>
    d430:	cmp	w9, #0x7d0
    d434:	str	x11, [x10]
    d438:	b.cs	d45c <__sanitizer_set_report_fd@@Base+0x3ba8>  // b.hs, b.nlast
    d43c:	add	w9, w9, #0x1
    d440:	b	d410 <__sanitizer_set_report_fd@@Base+0x3b5c>
    d444:	str	xzr, [x10]
    d448:	mov	x0, x19
    d44c:	ldp	x20, x19, [sp, #32]
    d450:	ldr	x30, [sp, #16]
    d454:	add	sp, sp, #0x30
    d458:	ret
    d45c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d460:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d464:	mov	w3, w9
    d468:	add	x0, x0, #0x69
    d46c:	add	x2, x2, #0x431
    d470:	mov	w1, #0x243                 	// #579
    d474:	mov	w4, #0x7cf                 	// #1999
    d478:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d47c:	sub	sp, sp, #0x30
    d480:	stp	x30, x19, [sp, #32]
    d484:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    d488:	ldr	x8, [x8, #4048]
    d48c:	cbz	x8, d4b4 <__sanitizer_set_report_fd@@Base+0x3c00>
    d490:	ldr	x8, [x8]
    d494:	ldr	x9, [x8]
    d498:	lsl	x9, x9, #32
    d49c:	add	x8, x8, x9, asr #29
    d4a0:	add	x19, x8, #0x10
    d4a4:	mov	x0, x19
    d4a8:	ldp	x30, x19, [sp, #32]
    d4ac:	add	sp, sp, #0x30
    d4b0:	ret
    d4b4:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d4b8:	add	x1, x1, #0x420
    d4bc:	mov	w0, #0x3e80                	// #16000
    d4c0:	mov	w2, wzr
    d4c4:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    d4c8:	mov	x19, x0
    d4cc:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d4d0:	add	x0, x0, #0x276
    d4d4:	add	x1, sp, #0x18
    d4d8:	add	x2, sp, #0x10
    d4dc:	add	x3, sp, #0x8
    d4e0:	mov	w4, #0x100000              	// #1048576
    d4e4:	mov	x5, xzr
    d4e8:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    d4ec:	mov	x10, x19
    d4f0:	tbz	w0, #0, d538 <__sanitizer_set_report_fd@@Base+0x3c84>
    d4f4:	ldr	x9, [sp, #24]
    d4f8:	mov	w8, #0x1                   	// #1
    d4fc:	str	x9, [x19]
    d500:	mov	w9, #0x1                   	// #1
    d504:	ldr	x10, [sp, #24]
    d508:	ldrb	w11, [x10, x8]
    d50c:	add	x8, x8, #0x1
    d510:	cbnz	w11, d508 <__sanitizer_set_report_fd@@Base+0x3c54>
    d514:	add	x11, x10, x8
    d518:	ldrb	w12, [x11]
    d51c:	add	x10, x19, w9, uxtw #3
    d520:	cbz	w12, d538 <__sanitizer_set_report_fd@@Base+0x3c84>
    d524:	cmp	w9, #0x7d0
    d528:	str	x11, [x10]
    d52c:	b.cs	d5d4 <__sanitizer_set_report_fd@@Base+0x3d20>  // b.hs, b.nlast
    d530:	add	w9, w9, #0x1
    d534:	b	d504 <__sanitizer_set_report_fd@@Base+0x3c50>
    d538:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d53c:	add	x1, x1, #0x420
    d540:	mov	w0, #0x3e80                	// #16000
    d544:	mov	w2, wzr
    d548:	str	xzr, [x10]
    d54c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    d550:	mov	x19, x0
    d554:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d558:	add	x0, x0, #0x56
    d55c:	add	x1, sp, #0x18
    d560:	add	x2, sp, #0x10
    d564:	add	x3, sp, #0x8
    d568:	mov	w4, #0x100000              	// #1048576
    d56c:	mov	x5, xzr
    d570:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    d574:	mov	x10, x19
    d578:	tbz	w0, #0, d5c0 <__sanitizer_set_report_fd@@Base+0x3d0c>
    d57c:	ldr	x9, [sp, #24]
    d580:	mov	w8, #0x1                   	// #1
    d584:	str	x9, [x19]
    d588:	mov	w9, #0x1                   	// #1
    d58c:	ldr	x10, [sp, #24]
    d590:	ldrb	w11, [x10, x8]
    d594:	add	x8, x8, #0x1
    d598:	cbnz	w11, d590 <__sanitizer_set_report_fd@@Base+0x3cdc>
    d59c:	add	x11, x10, x8
    d5a0:	ldrb	w12, [x11]
    d5a4:	add	x10, x19, w9, uxtw #3
    d5a8:	cbz	w12, d5c0 <__sanitizer_set_report_fd@@Base+0x3d0c>
    d5ac:	cmp	w9, #0x7d0
    d5b0:	str	x11, [x10]
    d5b4:	b.cs	d5d4 <__sanitizer_set_report_fd@@Base+0x3d20>  // b.hs, b.nlast
    d5b8:	add	w9, w9, #0x1
    d5bc:	b	d58c <__sanitizer_set_report_fd@@Base+0x3cd8>
    d5c0:	str	xzr, [x10]
    d5c4:	mov	x0, x19
    d5c8:	ldp	x30, x19, [sp, #32]
    d5cc:	add	sp, sp, #0x30
    d5d0:	ret
    d5d4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d5d8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d5dc:	mov	w3, w9
    d5e0:	add	x0, x0, #0x69
    d5e4:	add	x2, x2, #0x431
    d5e8:	mov	w1, #0x243                 	// #579
    d5ec:	mov	w4, #0x7cf                 	// #1999
    d5f0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d5f4:	mov	w2, #0x58                  	// #88
    d5f8:	mov	w1, wzr
    d5fc:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d600:	str	x30, [sp, #-16]!
    d604:	ldr	x3, [x0, #80]
    d608:	cbnz	x3, d674 <__sanitizer_set_report_fd@@Base+0x3dc0>
    d60c:	mov	x9, x0
    d610:	mov	w8, #0x1                   	// #1
    d614:	ldaxr	w10, [x9]
    d618:	stlxr	w11, w8, [x9]
    d61c:	cbnz	w11, d614 <__sanitizer_set_report_fd@@Base+0x3d60>
    d620:	cbz	w10, d66c <__sanitizer_set_report_fd@@Base+0x3db8>
    d624:	mov	w8, #0x2                   	// #2
    d628:	ldaxr	w10, [x9]
    d62c:	stlxr	w11, w8, [x9]
    d630:	cbnz	w11, d628 <__sanitizer_set_report_fd@@Base+0x3d74>
    d634:	cbz	w10, d66c <__sanitizer_set_report_fd@@Base+0x3db8>
    d638:	mov	w10, #0x2                   	// #2
    d63c:	mov	x3, xzr
    d640:	mov	x4, xzr
    d644:	mov	x5, xzr
    d648:	mov	x0, x9
    d64c:	mov	w8, #0x62                  	// #98
    d650:	mov	w1, #0x80                  	// #128
    d654:	mov	w2, #0x2                   	// #2
    d658:	svc	#0x0
    d65c:	ldaxr	w8, [x9]
    d660:	stlxr	w11, w10, [x9]
    d664:	cbnz	w11, d65c <__sanitizer_set_report_fd@@Base+0x3da8>
    d668:	cbnz	w8, d648 <__sanitizer_set_report_fd@@Base+0x3d94>
    d66c:	ldr	x30, [sp], #16
    d670:	ret
    d674:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d678:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d67c:	add	x0, x0, #0x69
    d680:	add	x2, x2, #0xbb
    d684:	mov	w1, #0x288                 	// #648
    d688:	mov	x4, xzr
    d68c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d690:	str	x30, [sp, #-16]!
    d694:	dmb	ish
    d698:	ldaxr	w8, [x0]
    d69c:	stlxr	w9, wzr, [x0]
    d6a0:	cbnz	w9, d698 <__sanitizer_set_report_fd@@Base+0x3de4>
    d6a4:	cmp	w8, #0x2
    d6a8:	b.eq	d6b8 <__sanitizer_set_report_fd@@Base+0x3e04>  // b.none
    d6ac:	cbz	w8, d6dc <__sanitizer_set_report_fd@@Base+0x3e28>
    d6b0:	ldr	x30, [sp], #16
    d6b4:	ret
    d6b8:	mov	w8, #0x62                  	// #98
    d6bc:	mov	w1, #0x81                  	// #129
    d6c0:	mov	w2, #0x1                   	// #1
    d6c4:	mov	x3, xzr
    d6c8:	mov	x4, xzr
    d6cc:	mov	x5, xzr
    d6d0:	svc	#0x0
    d6d4:	ldr	x30, [sp], #16
    d6d8:	ret
    d6dc:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d6e0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d6e4:	add	x0, x0, #0x69
    d6e8:	add	x2, x2, #0xcf
    d6ec:	mov	w1, #0x29b                 	// #667
    d6f0:	mov	x3, xzr
    d6f4:	mov	x4, xzr
    d6f8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d6fc:	str	x30, [sp, #-16]!
    d700:	ldr	w8, [x0]
    d704:	cbz	w8, d710 <__sanitizer_set_report_fd@@Base+0x3e5c>
    d708:	ldr	x30, [sp], #16
    d70c:	ret
    d710:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d714:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d718:	add	x0, x0, #0x69
    d71c:	add	x2, x2, #0xe8
    d720:	mov	w1, #0x2a9                 	// #681
    d724:	mov	x3, xzr
    d728:	mov	x4, xzr
    d72c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d730:	mov	w8, #0x75                  	// #117
    d734:	sxtw	x0, w0
    d738:	sxtw	x1, w1
    d73c:	svc	#0x0
    d740:	ret
    d744:	mov	w8, #0x104                 	// #260
    d748:	sxtw	x0, w0
    d74c:	sxtw	x2, w2
    d750:	mov	x3, xzr
    d754:	svc	#0x0
    d758:	ret
    d75c:	mov	w8, #0xac                  	// #172
    d760:	svc	#0x0
    d764:	ret
    d768:	mov	w8, #0xad                  	// #173
    d76c:	svc	#0x0
    d770:	ret
    d774:	mov	w2, w2
    d778:	sxtw	x0, w0
    d77c:	mov	w8, #0x3d                  	// #61
    d780:	svc	#0x0
    d784:	ret
    d788:	mov	w8, #0x3e                  	// #62
    d78c:	sxtw	x0, w0
    d790:	sxtw	x2, w2
    d794:	svc	#0x0
    d798:	ret
    d79c:	mov	w8, #0xa7                  	// #167
    d7a0:	sxtw	x0, w0
    d7a4:	svc	#0x0
    d7a8:	ret
    d7ac:	mov	w8, #0x84                  	// #132
    d7b0:	svc	#0x0
    d7b4:	ret
    d7b8:	mov	w0, #0x11                  	// #17
    d7bc:	mov	w8, #0xdc                  	// #220
    d7c0:	mov	x1, xzr
    d7c4:	svc	#0x0
    d7c8:	ret
    d7cc:	sub	sp, sp, #0x70
    d7d0:	stp	x30, x23, [sp, #64]
    d7d4:	stp	x22, x21, [sp, #80]
    d7d8:	stp	x20, x19, [sp, #96]
    d7dc:	mov	x19, x2
    d7e0:	mov	x20, x1
    d7e4:	mov	w21, w0
    d7e8:	add	x0, sp, #0x20
    d7ec:	mov	w2, #0x20                  	// #32
    d7f0:	mov	w1, wzr
    d7f4:	add	x22, sp, #0x20
    d7f8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d7fc:	mov	x0, sp
    d800:	mov	w2, #0x20                  	// #32
    d804:	mov	w1, wzr
    d808:	mov	x23, sp
    d80c:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d810:	cbz	x20, d840 <__sanitizer_set_report_fd@@Base+0x3f8c>
    d814:	ldr	x8, [x20]
    d818:	add	x0, x22, #0x18
    d81c:	add	x1, x20, #0x8
    d820:	mov	w2, #0x8                   	// #8
    d824:	str	x8, [sp, #32]
    d828:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    d82c:	ldrsw	x8, [x20, #136]
    d830:	orr	x8, x8, #0x4000000
    d834:	str	x8, [sp, #40]
    d838:	ldr	x8, [x20, #144]
    d83c:	str	x8, [sp, #48]
    d840:	cmp	x20, #0x0
    d844:	sxtw	x0, w21
    d848:	csel	x1, x22, xzr, ne  // ne = any
    d84c:	cmp	x19, #0x0
    d850:	csel	x2, x23, xzr, ne  // ne = any
    d854:	mov	w8, #0x86                  	// #134
    d858:	mov	w3, #0x8                   	// #8
    d85c:	svc	#0x0
    d860:	mov	x20, x0
    d864:	cbz	x19, d898 <__sanitizer_set_report_fd@@Base+0x3fe4>
    d868:	cbnz	x20, d898 <__sanitizer_set_report_fd@@Base+0x3fe4>
    d86c:	ldr	x8, [sp]
    d870:	mov	x9, sp
    d874:	add	x0, x19, #0x8
    d878:	add	x1, x9, #0x18
    d87c:	mov	w2, #0x8                   	// #8
    d880:	str	x8, [x19]
    d884:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    d888:	ldr	x8, [sp, #8]
    d88c:	str	w8, [x19, #136]
    d890:	ldr	x8, [sp, #16]
    d894:	str	x8, [x19, #144]
    d898:	mov	w0, w20
    d89c:	ldp	x20, x19, [sp, #96]
    d8a0:	ldp	x22, x21, [sp, #80]
    d8a4:	ldp	x30, x23, [sp, #64]
    d8a8:	add	sp, sp, #0x70
    d8ac:	ret
    d8b0:	mov	w8, #0x87                  	// #135
    d8b4:	sxtw	x0, w0
    d8b8:	mov	w3, #0x8                   	// #8
    d8bc:	svc	#0x0
    d8c0:	ret
    d8c4:	mov	w1, #0xff                  	// #255
    d8c8:	mov	w2, #0x80                  	// #128
    d8cc:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d8d0:	mov	w2, #0x80                  	// #128
    d8d4:	mov	w1, wzr
    d8d8:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d8dc:	str	x30, [sp, #-16]!
    d8e0:	sub	w8, w1, #0x1
    d8e4:	cmp	w8, #0x400
    d8e8:	sxtw	x3, w8
    d8ec:	b.cs	d914 <__sanitizer_set_report_fd@@Base+0x4060>  // b.hs, b.nlast
    d8f0:	lsr	x8, x3, #3
    d8f4:	ldrb	w9, [x0, x8]
    d8f8:	and	w10, w3, #0x7
    d8fc:	mov	w11, #0x1                   	// #1
    d900:	lsl	w10, w11, w10
    d904:	bic	w9, w9, w10
    d908:	strb	w9, [x0, x8]
    d90c:	ldr	x30, [sp], #16
    d910:	ret
    d914:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d918:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d91c:	add	x0, x0, #0x69
    d920:	add	x2, x2, #0x124
    d924:	mov	w1, #0x364                 	// #868
    d928:	mov	w4, #0x400                 	// #1024
    d92c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d930:	str	x30, [sp, #-16]!
    d934:	sub	w8, w1, #0x1
    d938:	cmp	w8, #0x400
    d93c:	sxtw	x3, w8
    d940:	b.cs	d960 <__sanitizer_set_report_fd@@Base+0x40ac>  // b.hs, b.nlast
    d944:	lsr	x8, x3, #3
    d948:	ldrb	w8, [x0, x8]
    d94c:	and	w9, w3, #0x7
    d950:	lsr	w8, w8, w9
    d954:	and	w0, w8, #0x1
    d958:	ldr	x30, [sp], #16
    d95c:	ret
    d960:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d964:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d968:	add	x0, x0, #0x69
    d96c:	add	x2, x2, #0x124
    d970:	mov	w1, #0x36e                 	// #878
    d974:	mov	w4, #0x400                 	// #1024
    d978:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    d97c:	sub	sp, sp, #0x70
    d980:	stp	x30, x21, [sp, #80]
    d984:	stp	x20, x19, [sp, #96]
    d988:	mov	w8, #0xffffffff            	// #-1
    d98c:	mov	x21, x0
    d990:	stp	w1, w8, [x0]
    d994:	str	xzr, [x21, #8]!
    d998:	mov	w19, w1
    d99c:	mov	x20, x0
    d9a0:	stp	xzr, xzr, [x0, #16]
    d9a4:	mov	w1, #0x1000                	// #4096
    d9a8:	mov	x0, x21
    d9ac:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    d9b0:	ldr	x8, [x20, #24]
    d9b4:	cmp	x8, #0xfff
    d9b8:	b.hi	d9f0 <__sanitizer_set_report_fd@@Base+0x413c>  // b.pmore
    d9bc:	ldr	x9, [x20, #16]
    d9c0:	cmp	x9, #0xfff
    d9c4:	b.hi	d9d8 <__sanitizer_set_report_fd@@Base+0x4124>  // b.pmore
    d9c8:	mov	w1, #0x1000                	// #4096
    d9cc:	mov	x0, x21
    d9d0:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    d9d4:	ldr	x8, [x20, #24]
    d9d8:	ldr	x9, [x21]
    d9dc:	mov	w10, #0x1000                	// #4096
    d9e0:	sub	x2, x10, x8
    d9e4:	mov	w1, wzr
    d9e8:	add	x0, x9, x8
    d9ec:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    d9f0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    d9f4:	mov	w8, #0x1000                	// #4096
    d9f8:	add	x2, x2, #0x146
    d9fc:	mov	x0, sp
    da00:	mov	w1, #0x50                  	// #80
    da04:	mov	w3, w19
    da08:	str	x8, [x20, #24]
    da0c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    da10:	mov	w8, #0x38                  	// #56
    da14:	mov	x0, #0xffffffffffffff9c    	// #-100
    da18:	mov	x1, sp
    da1c:	mov	w2, #0x4000                	// #16384
    da20:	svc	#0x0
    da24:	mov	x8, #0xfffffffffffff001    	// #-4095
    da28:	cmp	x8, w0, sxtw
    da2c:	str	w0, [x20, #4]
    da30:	b.hi	da44 <__sanitizer_set_report_fd@@Base+0x4190>  // b.pmore
    da34:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    da38:	add	x0, x0, #0x155
    da3c:	mov	w1, w19
    da40:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    da44:	ldp	x20, x19, [sp, #96]
    da48:	ldp	x30, x21, [sp, #80]
    da4c:	add	sp, sp, #0x70
    da50:	ret
    da54:	str	x30, [sp, #-80]!
    da58:	stp	x26, x25, [sp, #16]
    da5c:	stp	x24, x23, [sp, #32]
    da60:	stp	x22, x21, [sp, #48]
    da64:	stp	x20, x19, [sp, #64]
    da68:	mov	x19, x0
    da6c:	ldrsw	x0, [x0, #4]
    da70:	cmn	w0, #0x1, lsl #12
    da74:	b.hi	dbfc <__sanitizer_set_report_fd@@Base+0x4348>  // b.pmore
    da78:	mov	x20, x1
    da7c:	mov	x1, xzr
    da80:	mov	x2, xzr
    da84:	mov	w8, #0x3e                  	// #62
    da88:	svc	#0x0
    da8c:	add	x21, x19, #0x8
    da90:	mov	w22, #0x2                   	// #2
    da94:	mov	w8, #0x1                   	// #1
    da98:	str	xzr, [x20, #16]
    da9c:	b	dac0 <__sanitizer_set_report_fd@@Base+0x420c>
    daa0:	ldr	x9, [x21]
    daa4:	sub	x2, x22, x8
    daa8:	mov	w1, wzr
    daac:	add	x0, x9, x8
    dab0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    dab4:	mov	w8, wzr
    dab8:	str	x22, [x19, #24]
    dabc:	mov	w22, #0x1                   	// #1
    dac0:	ldp	x23, x9, [x19, #16]
    dac4:	mov	w24, w8
    dac8:	subs	x2, x23, x9
    dacc:	b.ls	dae0 <__sanitizer_set_report_fd@@Base+0x422c>  // b.plast
    dad0:	ldr	x8, [x21]
    dad4:	mov	w1, wzr
    dad8:	add	x0, x8, x9
    dadc:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    dae0:	cmp	x23, #0xfff
    dae4:	str	x23, [x19, #24]
    dae8:	b.ls	dc1c <__sanitizer_set_report_fd@@Base+0x4368>  // b.plast
    daec:	ldrsw	x0, [x19, #4]
    daf0:	ldr	x1, [x19, #8]
    daf4:	and	x2, x23, #0xffffffff
    daf8:	mov	w8, #0x3d                  	// #61
    dafc:	svc	#0x0
    db00:	cbz	x0, dc00 <__sanitizer_set_report_fd@@Base+0x434c>
    db04:	mov	x23, x0
    db08:	cmn	x0, #0xfff
    db0c:	b.cs	dbec <__sanitizer_set_report_fd@@Base+0x4338>  // b.hs, b.nlast
    db10:	ldr	x0, [x21]
    db14:	mov	w25, w22
    db18:	add	x26, x0, x23
    db1c:	cmp	x0, x26
    db20:	b.cc	db78 <__sanitizer_set_report_fd@@Base+0x42c4>  // b.lo, b.ul, b.last
    db24:	mov	w8, wzr
    db28:	mov	w22, #0x1                   	// #1
    db2c:	tbz	w24, #0, dac0 <__sanitizer_set_report_fd@@Base+0x420c>
    db30:	ldr	x8, [x19, #24]
    db34:	sub	x9, x8, #0x400
    db38:	cmp	x23, x9
    db3c:	b.ls	dbb8 <__sanitizer_set_report_fd@@Base+0x4304>  // b.plast
    db40:	lsl	x22, x8, #1
    db44:	cmp	x8, x22
    db48:	b.cs	dab4 <__sanitizer_set_report_fd@@Base+0x4200>  // b.hs, b.nlast
    db4c:	ldr	x9, [x19, #16]
    db50:	cmp	x9, x22
    db54:	b.cs	daa0 <__sanitizer_set_report_fd@@Base+0x41ec>  // b.hs, b.nlast
    db58:	mov	x0, x21
    db5c:	mov	x1, x22
    db60:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    db64:	ldr	x8, [x19, #24]
    db68:	b	daa0 <__sanitizer_set_report_fd@@Base+0x41ec>
    db6c:	cmp	x22, x26
    db70:	mov	x0, x22
    db74:	b.cs	db24 <__sanitizer_set_report_fd@@Base+0x4270>  // b.hs, b.nlast
    db78:	ldr	x9, [x0]
    db7c:	ldrh	w8, [x0, #16]
    db80:	cmp	x9, #0x1
    db84:	add	x22, x0, x8
    db88:	csinc	w25, w25, wzr, ne  // ne = any
    db8c:	cbz	x9, db6c <__sanitizer_set_report_fd@@Base+0x42b8>
    db90:	ldrb	w8, [x0, #19]!
    db94:	sub	w8, w8, #0x30
    db98:	cmp	w8, #0x9
    db9c:	b.hi	db6c <__sanitizer_set_report_fd@@Base+0x42b8>  // b.pmore
    dba0:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
    dba4:	str	x0, [sp, #8]
    dba8:	add	x1, sp, #0x8
    dbac:	mov	x0, x20
    dbb0:	bl	e46c <__sanitizer_set_report_fd@@Base+0x4bb8>
    dbb4:	b	db6c <__sanitizer_set_report_fd@@Base+0x42b8>
    dbb8:	ldr	x9, [x20, #16]
    dbbc:	mov	w8, wzr
    dbc0:	mov	w22, w25
    dbc4:	cbz	x9, dac0 <__sanitizer_set_report_fd@@Base+0x420c>
    dbc8:	ldr	x8, [x20]
    dbcc:	mov	x0, x19
    dbd0:	add	x8, x8, x9, lsl #3
    dbd4:	ldur	w1, [x8, #-8]
    dbd8:	bl	dc3c <__sanitizer_set_report_fd@@Base+0x4388>
    dbdc:	tst	w0, #0x1
    dbe0:	mov	w8, wzr
    dbe4:	csinc	w22, w25, wzr, ne  // ne = any
    dbe8:	b	dac0 <__sanitizer_set_report_fd@@Base+0x420c>
    dbec:	ldr	w1, [x19]
    dbf0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dbf4:	add	x0, x0, #0x19b
    dbf8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    dbfc:	mov	w22, wzr
    dc00:	mov	w0, w22
    dc04:	ldp	x20, x19, [sp, #64]
    dc08:	ldp	x22, x21, [sp, #48]
    dc0c:	ldp	x24, x23, [sp, #32]
    dc10:	ldp	x26, x25, [sp, #16]
    dc14:	ldr	x30, [sp], #80
    dc18:	ret
    dc1c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dc20:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dc24:	add	x0, x0, #0x69
    dc28:	add	x2, x2, #0x17c
    dc2c:	mov	w1, #0x398                 	// #920
    dc30:	mov	w4, #0x1000                	// #4096
    dc34:	mov	x3, x23
    dc38:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    dc3c:	sub	sp, sp, #0x70
    dc40:	str	x30, [sp, #80]
    dc44:	stp	x20, x19, [sp, #96]
    dc48:	mov	x19, x0
    dc4c:	ldr	w3, [x19], #8
    dc50:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dc54:	mov	x20, x0
    dc58:	mov	w4, w1
    dc5c:	add	x2, x2, #0x1cd
    dc60:	mov	x0, sp
    dc64:	mov	w1, #0x50                  	// #80
    dc68:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    dc6c:	mov	x0, sp
    dc70:	mov	w2, #0x4000000             	// #67108864
    dc74:	mov	x1, x19
    dc78:	mov	x3, xzr
    dc7c:	bl	94f4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2240>
    dc80:	tbz	w0, #0, dce0 <__sanitizer_set_report_fd@@Base+0x442c>
    dc84:	ldr	x8, [x20, #24]
    dc88:	cbz	x8, dce0 <__sanitizer_set_report_fd@@Base+0x442c>
    dc8c:	add	x1, sp, #0x5c
    dc90:	mov	x0, x19
    dc94:	strb	wzr, [sp, #92]
    dc98:	bl	e574 <__sanitizer_set_report_fd@@Base+0x4cc0>
    dc9c:	ldr	x0, [x19]
    dca0:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dca4:	add	x1, x1, #0x4b9
    dca8:	bl	c704 <__sanitizer_set_report_fd@@Base+0x2e50>
    dcac:	cbz	x0, dcd0 <__sanitizer_set_report_fd@@Base+0x441c>
    dcb0:	mov	x19, x0
    dcb4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dcb8:	add	x0, x0, #0x4b9
    dcbc:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    dcc0:	add	x0, x19, x0
    dcc4:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
    dcc8:	cmp	w0, #0x0
    dccc:	cset	w0, ne  // ne = any
    dcd0:	ldp	x20, x19, [sp, #96]
    dcd4:	ldr	x30, [sp, #80]
    dcd8:	add	sp, sp, #0x70
    dcdc:	ret
    dce0:	mov	w0, wzr
    dce4:	ldp	x20, x19, [sp, #96]
    dce8:	ldr	x30, [sp, #80]
    dcec:	add	sp, sp, #0x70
    dcf0:	ret
    dcf4:	mov	x9, x0
    dcf8:	ldrsw	x0, [x0, #4]
    dcfc:	cmn	w0, #0x1, lsl #12
    dd00:	b.hi	dd0c <__sanitizer_set_report_fd@@Base+0x4458>  // b.pmore
    dd04:	mov	w8, #0x39                  	// #57
    dd08:	svc	#0x0
    dd0c:	ldp	x0, x1, [x9, #8]
    dd10:	b	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    dd14:	stp	x29, x30, [sp, #-16]!
    dd18:	mov	x29, sp
    dd1c:	cbz	x29, dd3c <__sanitizer_set_report_fd@@Base+0x4488>
    dd20:	clz	x8, x29
    dd24:	neg	x8, x8
    dd28:	mov	x9, #0xffffffffffffffff    	// #-1
    dd2c:	lsl	x8, x9, x8
    dd30:	mvn	x0, x8
    dd34:	ldp	x29, x30, [sp], #16
    dd38:	ret
    dd3c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    dd40:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    dd44:	add	x0, x0, #0xbf8
    dd48:	add	x2, x2, #0xc49
    dd4c:	mov	w1, #0x160                 	// #352
    dd50:	mov	x3, xzr
    dd54:	mov	x4, xzr
    dd58:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    dd5c:	stp	x29, x30, [sp, #-16]!
    dd60:	mov	x29, sp
    dd64:	cbz	x29, dd84 <__sanitizer_set_report_fd@@Base+0x44d0>
    dd68:	clz	x8, x29
    dd6c:	neg	x8, x8
    dd70:	mov	x9, #0xffffffffffffffff    	// #-1
    dd74:	lsl	x8, x9, x8
    dd78:	mvn	x0, x8
    dd7c:	ldp	x29, x30, [sp], #16
    dd80:	ret
    dd84:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    dd88:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    dd8c:	add	x0, x0, #0xbf8
    dd90:	add	x2, x2, #0xc49
    dd94:	mov	w1, #0x160                 	// #352
    dd98:	mov	x3, xzr
    dd9c:	mov	x4, xzr
    dda0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    dda4:	mov	w0, #0x6                   	// #6
    dda8:	b	48b0 <getauxval@plt>
    ddac:	str	x30, [sp, #-32]!
    ddb0:	stp	x20, x19, [sp, #16]
    ddb4:	mov	x19, x1
    ddb8:	mov	x20, x0
    ddbc:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ddc0:	mov	x0, #0xffffffffffffff9c    	// #-100
    ddc4:	add	x1, x1, #0x1e5
    ddc8:	mov	w8, #0x4e                  	// #78
    ddcc:	mov	x2, x20
    ddd0:	mov	x3, x19
    ddd4:	svc	#0x0
    ddd8:	mov	x3, x0
    dddc:	cmn	x0, #0xfff
    dde0:	b.cc	de1c <__sanitizer_set_report_fd@@Base+0x4568>  // b.lo, b.ul, b.last
    dde4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    dde8:	neg	w1, w3
    ddec:	add	x0, x0, #0x1f4
    ddf0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    ddf4:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    ddf8:	adrp	x3, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ddfc:	add	x2, x2, #0x338
    de00:	add	x3, x3, #0x1e5
    de04:	mov	x0, x20
    de08:	mov	x1, x19
    de0c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    de10:	sxtw	x3, w0
    de14:	cmp	x3, x19
    de18:	b.cs	de2c <__sanitizer_set_report_fd@@Base+0x4578>  // b.hs, b.nlast
    de1c:	ldp	x20, x19, [sp, #16]
    de20:	mov	x0, x3
    de24:	ldr	x30, [sp], #32
    de28:	ret
    de2c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    de30:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    de34:	add	x0, x0, #0x69
    de38:	add	x2, x2, #0x254
    de3c:	mov	w1, #0x45c                 	// #1116
    de40:	mov	x4, x19
    de44:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    de48:	sub	sp, sp, #0x30
    de4c:	str	x30, [sp, #16]
    de50:	stp	x20, x19, [sp, #32]
    de54:	mov	x20, x0
    de58:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    de5c:	mov	x19, x1
    de60:	add	x0, x0, #0x276
    de64:	add	x1, sp, #0x18
    de68:	add	x2, sp, #0x8
    de6c:	mov	x3, sp
    de70:	mov	w4, #0x100000              	// #1048576
    de74:	mov	x5, xzr
    de78:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
    de7c:	tbz	w0, #0, deac <__sanitizer_set_report_fd@@Base+0x45f8>
    de80:	ldr	x1, [sp, #24]
    de84:	mov	x0, x20
    de88:	mov	x2, x19
    de8c:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
    de90:	ldr	x0, [sp, #24]
    de94:	ldr	x1, [sp, #8]
    de98:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    de9c:	mov	x0, x20
    dea0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    dea4:	mov	x3, x0
    dea8:	b	df0c <__sanitizer_set_report_fd@@Base+0x4658>
    deac:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    deb0:	mov	x0, #0xffffffffffffff9c    	// #-100
    deb4:	add	x1, x1, #0x1e5
    deb8:	mov	w8, #0x4e                  	// #78
    debc:	mov	x2, x20
    dec0:	mov	x3, x19
    dec4:	svc	#0x0
    dec8:	mov	x3, x0
    decc:	cmn	x0, #0xfff
    ded0:	b.cc	df0c <__sanitizer_set_report_fd@@Base+0x4658>  // b.lo, b.ul, b.last
    ded4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ded8:	neg	w1, w3
    dedc:	add	x0, x0, #0x1f4
    dee0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    dee4:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
    dee8:	adrp	x3, 26000 <__interceptor_sigaction@@Base+0x3a44>
    deec:	add	x2, x2, #0x338
    def0:	add	x3, x3, #0x1e5
    def4:	mov	x0, x20
    def8:	mov	x1, x19
    defc:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    df00:	sxtw	x3, w0
    df04:	cmp	x3, x19
    df08:	b.cs	df20 <__sanitizer_set_report_fd@@Base+0x466c>  // b.hs, b.nlast
    df0c:	ldp	x20, x19, [sp, #32]
    df10:	ldr	x30, [sp, #16]
    df14:	mov	x0, x3
    df18:	add	sp, sp, #0x30
    df1c:	ret
    df20:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    df24:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    df28:	add	x0, x0, #0x69
    df2c:	add	x2, x2, #0x254
    df30:	mov	w1, #0x45c                 	// #1116
    df34:	mov	x4, x19
    df38:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    df3c:	stp	x30, x21, [sp, #-32]!
    df40:	stp	x20, x19, [sp, #16]
    df44:	mov	x19, x1
    df48:	sub	x20, x0, #0x1
    df4c:	ldrb	w8, [x20, #1]!
    df50:	cbnz	w8, df4c <__sanitizer_set_report_fd@@Base+0x4698>
    df54:	cmp	x20, x0
    df58:	b.ls	df80 <__sanitizer_set_report_fd@@Base+0x46cc>  // b.plast
    df5c:	sub	x8, x20, #0x1
    df60:	cmp	x8, x0
    df64:	ldrb	w9, [x8], #-1
    df68:	b.ls	df74 <__sanitizer_set_report_fd@@Base+0x46c0>  // b.plast
    df6c:	cmp	w9, #0x2f
    df70:	b.ne	df60 <__sanitizer_set_report_fd@@Base+0x46ac>  // b.any
    df74:	add	x10, x8, #0x2
    df78:	cmp	w9, #0x2f
    df7c:	csinc	x20, x10, x8, eq  // eq = none
    df80:	mov	x0, x19
    df84:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    df88:	mov	x21, x0
    df8c:	mov	x0, x20
    df90:	mov	x1, x19
    df94:	mov	x2, x21
    df98:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
    df9c:	cbz	w0, dfb0 <__sanitizer_set_report_fd@@Base+0x46fc>
    dfa0:	mov	w0, wzr
    dfa4:	ldp	x20, x19, [sp, #16]
    dfa8:	ldp	x30, x21, [sp], #32
    dfac:	ret
    dfb0:	ldrb	w8, [x20, x21]
    dfb4:	sub	w8, w8, #0x2d
    dfb8:	cmp	w8, #0x2
    dfbc:	cset	w0, cc  // cc = lo, ul, last
    dfc0:	ldp	x20, x19, [sp, #16]
    dfc4:	ldp	x30, x21, [sp], #32
    dfc8:	ret
    dfcc:	stp	x30, x27, [sp, #-80]!
    dfd0:	stp	x26, x25, [sp, #16]
    dfd4:	stp	x24, x23, [sp, #32]
    dfd8:	stp	x22, x21, [sp, #48]
    dfdc:	stp	x20, x19, [sp, #64]
    dfe0:	cbz	x0, e10c <__sanitizer_set_report_fd@@Base+0x4858>
    dfe4:	ldr	x21, [x0]
    dfe8:	ldrh	w9, [x21, #56]
    dfec:	ldrh	w8, [x21, #54]
    dff0:	mul	x9, x8, x9
    dff4:	cbz	x9, e0e4 <__sanitizer_set_report_fd@@Base+0x4830>
    dff8:	ldr	x11, [x21, #32]
    dffc:	mov	x19, x1
    e000:	mov	x10, xzr
    e004:	add	x22, x21, x11
    e008:	add	x23, x22, x9
    e00c:	mov	x11, #0xffffffffffffffff    	// #-1
    e010:	b	e020 <__sanitizer_set_report_fd@@Base+0x476c>
    e014:	add	x10, x10, x8
    e018:	cmp	x9, x10
    e01c:	b.eq	e040 <__sanitizer_set_report_fd@@Base+0x478c>  // b.none
    e020:	ldr	w12, [x22, x10]
    e024:	cmp	w12, #0x1
    e028:	b.ne	e014 <__sanitizer_set_report_fd@@Base+0x4760>  // b.any
    e02c:	add	x12, x22, x10
    e030:	ldr	x12, [x12, #16]
    e034:	cmp	x11, x12
    e038:	csel	x11, x12, x11, hi  // hi = pmore
    e03c:	b	e014 <__sanitizer_set_report_fd@@Base+0x4760>
    e040:	cbz	x9, e0e4 <__sanitizer_set_report_fd@@Base+0x4830>
    e044:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e048:	ldr	x25, [x25, #4016]
    e04c:	sub	x24, x21, x11
    e050:	b	e060 <__sanitizer_set_report_fd@@Base+0x47ac>
    e054:	add	x22, x22, w8, uxth
    e058:	cmp	x22, x23
    e05c:	b.eq	e0e4 <__sanitizer_set_report_fd@@Base+0x4830>  // b.none
    e060:	ldr	w9, [x22]
    e064:	cmp	w9, #0x1
    e068:	b.ne	e054 <__sanitizer_set_report_fd@@Base+0x47a0>  // b.any
    e06c:	ldr	x8, [x22, #16]
    e070:	ldr	x0, [x25]
    e074:	ldr	x26, [x22, #40]
    e078:	add	x27, x8, x24
    e07c:	cbz	x0, e08c <__sanitizer_set_report_fd@@Base+0x47d8>
    e080:	neg	x8, x0
    e084:	and	x20, x27, x8
    e088:	b	e0b0 <__sanitizer_set_report_fd@@Base+0x47fc>
    e08c:	mov	w0, #0x6                   	// #6
    e090:	bl	48b0 <getauxval@plt>
    e094:	neg	x8, x0
    e098:	and	x20, x27, x8
    e09c:	str	x0, [x25]
    e0a0:	cbnz	x0, e0b0 <__sanitizer_set_report_fd@@Base+0x47fc>
    e0a4:	mov	w0, #0x6                   	// #6
    e0a8:	bl	48b0 <getauxval@plt>
    e0ac:	str	x0, [x25]
    e0b0:	sub	x8, x0, #0x1
    e0b4:	tst	x0, x8
    e0b8:	b.ne	e0fc <__sanitizer_set_report_fd@@Base+0x4848>  // b.any
    e0bc:	add	x8, x26, x27
    e0c0:	add	x8, x8, x0
    e0c4:	sub	x8, x8, #0x1
    e0c8:	neg	x9, x0
    e0cc:	and	x8, x8, x9
    e0d0:	sub	x1, x8, x20
    e0d4:	mov	x0, x20
    e0d8:	blr	x19
    e0dc:	ldrh	w8, [x21, #54]
    e0e0:	b	e054 <__sanitizer_set_report_fd@@Base+0x47a0>
    e0e4:	ldp	x20, x19, [sp, #64]
    e0e8:	ldp	x22, x21, [sp, #48]
    e0ec:	ldp	x24, x23, [sp, #32]
    e0f0:	ldp	x26, x25, [sp, #16]
    e0f4:	ldp	x30, x27, [sp], #80
    e0f8:	ret
    e0fc:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    e100:	add	x0, x0, #0x121
    e104:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    e108:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    e10c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e110:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e114:	add	x0, x0, #0x69
    e118:	add	x2, x2, #0x289
    e11c:	mov	w1, #0x481                 	// #1153
    e120:	mov	x3, xzr
    e124:	mov	x4, xzr
    e128:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e12c:	str	x30, [sp, #-16]!
    e130:	cbz	x0, e184 <__sanitizer_set_report_fd@@Base+0x48d0>
    e134:	cbz	x1, e184 <__sanitizer_set_report_fd@@Base+0x48d0>
    e138:	ands	x8, x1, #0xf
    e13c:	b.ne	e190 <__sanitizer_set_report_fd@@Base+0x48dc>  // b.any
    e140:	str	x0, [x1, #-16]!
    e144:	str	x3, [x1, #8]
    e148:	mov	w2, w2
    e14c:	mov	x0, x2
    e150:	mov	x2, x4
    e154:	mov	x3, x5
    e158:	mov	x4, x6
    e15c:	mov	x8, #0xdc                  	// #220
    e160:	svc	#0x0
    e164:	cmp	x0, #0x0
    e168:	b.ne	e17c <__sanitizer_set_report_fd@@Base+0x48c8>  // b.any
    e16c:	ldp	x1, x0, [sp], #16
    e170:	blr	x1
    e174:	mov	x8, #0x5d                  	// #93
    e178:	svc	#0x0
    e17c:	ldr	x30, [sp], #16
    e180:	ret
    e184:	mov	x0, #0xffffffffffffffea    	// #-22
    e188:	ldr	x30, [sp], #16
    e18c:	ret
    e190:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e194:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e198:	add	x0, x0, #0x69
    e19c:	add	x2, x2, #0x2a0
    e1a0:	mov	w1, #0x537                 	// #1335
    e1a4:	mov	x3, xzr
    e1a8:	mov	x4, x8
    e1ac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e1b0:	sub	w8, w0, #0x4
    e1b4:	cmp	w8, #0x7
    e1b8:	b.hi	e1c8 <__sanitizer_set_report_fd@@Base+0x4914>  // b.pmore
    e1bc:	mov	w9, #0x9f                  	// #159
    e1c0:	lsr	w9, w9, w8
    e1c4:	tbnz	w9, #0, e1d0 <__sanitizer_set_report_fd@@Base+0x491c>
    e1c8:	mov	w0, wzr
    e1cc:	ret
    e1d0:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e1d4:	add	x9, x9, #0x7c8
    e1d8:	ldr	x8, [x9, w8, sxtw #3]
    e1dc:	ldr	w0, [x8]
    e1e0:	cmp	w0, #0x1
    e1e4:	b.ne	e1fc <__sanitizer_set_report_fd@@Base+0x4948>  // b.any
    e1e8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e1ec:	ldr	x8, [x8, #4056]
    e1f0:	ldrb	w8, [x8, #96]
    e1f4:	cbz	w8, e200 <__sanitizer_set_report_fd@@Base+0x494c>
    e1f8:	mov	w0, #0x1                   	// #1
    e1fc:	ret
    e200:	mov	w0, #0x2                   	// #2
    e204:	ret
    e208:	sub	sp, sp, #0x130
    e20c:	stp	x29, x30, [sp, #272]
    e210:	stp	x20, x19, [sp, #288]
    e214:	mov	x19, x1
    e218:	mov	x20, x0
    e21c:	add	x0, sp, #0x90
    e220:	mov	w1, #0xff                  	// #255
    e224:	mov	w2, #0x80                  	// #128
    e228:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    e22c:	ldrb	w8, [sp, #148]
    e230:	mov	w0, #0x2                   	// #2
    e234:	add	x1, sp, #0x90
    e238:	add	x2, sp, #0x10
    e23c:	and	w8, w8, #0xfe
    e240:	strb	w8, [sp, #148]
    e244:	mov	w8, #0x87                  	// #135
    e248:	mov	w3, #0x8                   	// #8
    e24c:	svc	#0x0
    e250:	add	x0, sp, #0x8
    e254:	mov	x1, xzr
    e258:	mov	x2, x20
    e25c:	mov	x3, x19
    e260:	bl	48d0 <_ZN11__sanitizer19real_pthread_createEPvS0_PFS0_S0_ES0_@plt>
    e264:	mov	w0, #0x2                   	// #2
    e268:	add	x1, sp, #0x10
    e26c:	mov	w8, #0x87                  	// #135
    e270:	mov	x2, xzr
    e274:	mov	w3, #0x8                   	// #8
    e278:	svc	#0x0
    e27c:	ldr	x0, [sp, #8]
    e280:	ldp	x20, x19, [sp, #288]
    e284:	ldp	x29, x30, [sp, #272]
    e288:	add	sp, sp, #0x130
    e28c:	ret
    e290:	str	x30, [sp, #-16]!
    e294:	mov	x1, xzr
    e298:	bl	4700 <_ZN11__sanitizer17real_pthread_joinEPvPS0_@plt>
    e29c:	ldr	x30, [sp], #16
    e2a0:	ret
    e2a4:	ldr	x9, [x0, #8]
    e2a8:	ldr	w8, [x9, #468]
    e2ac:	cbz	w8, e2d4 <__sanitizer_set_report_fd@@Base+0x4a20>
    e2b0:	mov	w10, #0x5201                	// #20993
    e2b4:	add	x9, x9, #0x1d0
    e2b8:	movk	w10, #0x4553, lsl #16
    e2bc:	ldr	w11, [x9]
    e2c0:	cmp	w11, w10
    e2c4:	b.eq	e2dc <__sanitizer_set_report_fd@@Base+0x4a28>  // b.none
    e2c8:	add	x9, x9, w8, uxtw
    e2cc:	ldr	w8, [x9, #4]
    e2d0:	cbnz	w8, e2bc <__sanitizer_set_report_fd@@Base+0x4a08>
    e2d4:	mov	w0, wzr
    e2d8:	ret
    e2dc:	ldrb	w8, [x9, #8]
    e2e0:	tst	w8, #0x40
    e2e4:	mov	w8, #0x1                   	// #1
    e2e8:	cinc	w0, w8, ne  // ne = any
    e2ec:	ret
    e2f0:	ldr	x8, [x0]
    e2f4:	ldr	w9, [x8]
    e2f8:	cmp	w9, #0xb
    e2fc:	b.ne	e310 <__sanitizer_set_report_fd@@Base+0x4a5c>  // b.any
    e300:	ldr	w8, [x8, #8]
    e304:	cmp	w8, #0x80
    e308:	cset	w0, ne  // ne = any
    e30c:	ret
    e310:	mov	w0, wzr
    e314:	ret
    e318:	ret
    e31c:	ldr	x8, [x0, #8]
    e320:	ldr	x9, [x8, #416]
    e324:	str	x9, [x0, #40]
    e328:	ldr	q0, [x8, #432]
    e32c:	ext	v0.16b, v0.16b, v0.16b, #8
    e330:	stur	q0, [x0, #24]
    e334:	ret
    e338:	ret
    e33c:	ret
    e340:	ret
    e344:	ret
    e348:	ret
    e34c:	tbnz	w1, #3, e354 <__sanitizer_set_report_fd@@Base+0x4aa0>
    e350:	ret
    e354:	str	x30, [sp, #-16]!
    e358:	mov	x2, x0
    e35c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e360:	add	x0, x0, #0x2c4
    e364:	mov	x1, x2
    e368:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    e36c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    e370:	str	x30, [sp, #-16]!
    e374:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e378:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e37c:	add	x0, x0, #0x69
    e380:	add	x2, x2, #0x3d7
    e384:	mov	w1, #0x83a                 	// #2106
    e388:	mov	x3, xzr
    e38c:	mov	x4, xzr
    e390:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e394:	mov	x10, x0
    e398:	mov	w0, wzr
    e39c:	cbz	x10, e468 <__sanitizer_set_report_fd@@Base+0x4bb4>
    e3a0:	sub	x8, x1, #0x1
    e3a4:	mov	x9, x1
    e3a8:	cmp	x8, #0xff
    e3ac:	b.hi	e468 <__sanitizer_set_report_fd@@Base+0x4bb4>  // b.pmore
    e3b0:	adrp	x11, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    e3b4:	ldrb	w8, [x11, #1856]
    e3b8:	cbnz	w8, e3f8 <__sanitizer_set_report_fd@@Base+0x4b44>
    e3bc:	mvn	w8, w2
    e3c0:	mov	x0, x10
    e3c4:	and	x2, x8, #0x1
    e3c8:	mov	w8, #0x116                 	// #278
    e3cc:	mov	x1, x9
    e3d0:	svc	#0x0
    e3d4:	cmn	x0, #0xfff
    e3d8:	b.cc	e3f0 <__sanitizer_set_report_fd@@Base+0x4b3c>  // b.lo, b.ul, b.last
    e3dc:	cmn	w0, #0x26
    e3e0:	b.ne	e3f0 <__sanitizer_set_report_fd@@Base+0x4b3c>  // b.any
    e3e4:	mov	w8, #0x1                   	// #1
    e3e8:	strb	w8, [x11, #1856]
    e3ec:	b	e3f8 <__sanitizer_set_report_fd@@Base+0x4b44>
    e3f0:	cmp	x0, x9
    e3f4:	b.eq	e464 <__sanitizer_set_report_fd@@Base+0x4bb0>  // b.none
    e3f8:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e3fc:	mov	x0, #0xffffffffffffff9c    	// #-100
    e400:	add	x1, x1, #0x413
    e404:	mov	w8, #0x38                  	// #56
    e408:	mov	x2, xzr
    e40c:	svc	#0x0
    e410:	cmn	x0, #0x1, lsl #12
    e414:	b.ls	e420 <__sanitizer_set_report_fd@@Base+0x4b6c>  // b.plast
    e418:	mov	w0, wzr
    e41c:	ret
    e420:	sxtw	x11, w0
    e424:	mov	x0, x11
    e428:	mov	w8, #0x3f                  	// #63
    e42c:	mov	x1, x10
    e430:	mov	x2, x9
    e434:	svc	#0x0
    e438:	cmn	x0, #0xfff
    e43c:	b.cc	e448 <__sanitizer_set_report_fd@@Base+0x4b94>  // b.lo, b.ul, b.last
    e440:	cmn	w0, #0x4
    e444:	b.eq	e424 <__sanitizer_set_report_fd@@Base+0x4b70>  // b.none
    e448:	cmn	x0, #0x1, lsl #12
    e44c:	b.ls	e458 <__sanitizer_set_report_fd@@Base+0x4ba4>  // b.plast
    e450:	mov	w0, wzr
    e454:	ret
    e458:	mov	x0, x11
    e45c:	mov	w8, #0x39                  	// #57
    e460:	svc	#0x0
    e464:	mov	w0, #0x1                   	// #1
    e468:	ret
    e46c:	str	x30, [sp, #-32]!
    e470:	stp	x20, x19, [sp, #16]
    e474:	ldp	x8, x3, [x0, #8]
    e478:	lsr	x4, x8, #3
    e47c:	cmp	x3, x4
    e480:	b.hi	e508 <__sanitizer_set_report_fd@@Base+0x4c54>  // b.pmore
    e484:	mov	x19, x0
    e488:	mov	x20, x1
    e48c:	b.ne	e4e4 <__sanitizer_set_report_fd@@Base+0x4c30>  // b.any
    e490:	adds	x3, x3, #0x1
    e494:	b.cs	e520 <__sanitizer_set_report_fd@@Base+0x4c6c>  // b.hs, b.nlast
    e498:	sub	x8, x3, #0x1
    e49c:	tst	x3, x8
    e4a0:	b.ne	e4ac <__sanitizer_set_report_fd@@Base+0x4bf8>  // b.any
    e4a4:	mov	x8, x3
    e4a8:	b	e4d4 <__sanitizer_set_report_fd@@Base+0x4c20>
    e4ac:	clz	x8, x3
    e4b0:	eor	x9, x8, #0x3f
    e4b4:	mov	w8, #0x2                   	// #2
    e4b8:	lsl	x8, x8, x9
    e4bc:	cmp	x8, x3
    e4c0:	b.ls	e540 <__sanitizer_set_report_fd@@Base+0x4c8c>  // b.plast
    e4c4:	mov	w10, #0x1                   	// #1
    e4c8:	lsl	x4, x10, x9
    e4cc:	cmp	x4, x3
    e4d0:	b.cs	e55c <__sanitizer_set_report_fd@@Base+0x4ca8>  // b.hs, b.nlast
    e4d4:	mov	x0, x19
    e4d8:	mov	x1, x8
    e4dc:	bl	e678 <__sanitizer_set_report_fd@@Base+0x4dc4>
    e4e0:	ldr	x3, [x19, #16]
    e4e4:	add	x9, x3, #0x1
    e4e8:	ldr	x8, [x19]
    e4ec:	str	x9, [x19, #16]
    e4f0:	mov	x1, x20
    e4f4:	ldp	x20, x19, [sp, #16]
    e4f8:	add	x0, x8, x3, lsl #3
    e4fc:	mov	w2, #0x8                   	// #8
    e500:	ldr	x30, [sp], #32
    e504:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    e508:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e50c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e510:	add	x0, x0, #0xbf8
    e514:	add	x2, x2, #0x44f
    e518:	mov	w1, #0x1cd                 	// #461
    e51c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e520:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e524:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e528:	add	x0, x0, #0xbf8
    e52c:	add	x2, x2, #0x46b
    e530:	mov	w1, #0x186                 	// #390
    e534:	mov	x3, xzr
    e538:	mov	x4, xzr
    e53c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e540:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e544:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e548:	add	x0, x0, #0xbf8
    e54c:	add	x2, x2, #0x47b
    e550:	mov	w1, #0x18a                 	// #394
    e554:	mov	x4, x8
    e558:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e55c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e560:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e564:	add	x0, x0, #0xbf8
    e568:	add	x2, x2, #0x49d
    e56c:	mov	w1, #0x18b                 	// #395
    e570:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e574:	str	x30, [sp, #-32]!
    e578:	stp	x20, x19, [sp, #16]
    e57c:	ldp	x4, x3, [x0, #8]
    e580:	cmp	x3, x4
    e584:	b.hi	e60c <__sanitizer_set_report_fd@@Base+0x4d58>  // b.pmore
    e588:	mov	x19, x0
    e58c:	mov	x20, x1
    e590:	b.ne	e5e8 <__sanitizer_set_report_fd@@Base+0x4d34>  // b.any
    e594:	adds	x3, x3, #0x1
    e598:	b.cs	e624 <__sanitizer_set_report_fd@@Base+0x4d70>  // b.hs, b.nlast
    e59c:	sub	x8, x3, #0x1
    e5a0:	tst	x3, x8
    e5a4:	b.ne	e5b0 <__sanitizer_set_report_fd@@Base+0x4cfc>  // b.any
    e5a8:	mov	x8, x3
    e5ac:	b	e5d8 <__sanitizer_set_report_fd@@Base+0x4d24>
    e5b0:	clz	x8, x3
    e5b4:	eor	x9, x8, #0x3f
    e5b8:	mov	w8, #0x2                   	// #2
    e5bc:	lsl	x8, x8, x9
    e5c0:	cmp	x8, x3
    e5c4:	b.ls	e644 <__sanitizer_set_report_fd@@Base+0x4d90>  // b.plast
    e5c8:	mov	w10, #0x1                   	// #1
    e5cc:	lsl	x4, x10, x9
    e5d0:	cmp	x4, x3
    e5d4:	b.cs	e660 <__sanitizer_set_report_fd@@Base+0x4dac>  // b.hs, b.nlast
    e5d8:	mov	x0, x19
    e5dc:	mov	x1, x8
    e5e0:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    e5e4:	ldr	x3, [x19, #16]
    e5e8:	add	x9, x3, #0x1
    e5ec:	ldr	x8, [x19]
    e5f0:	str	x9, [x19, #16]
    e5f4:	mov	x1, x20
    e5f8:	ldp	x20, x19, [sp, #16]
    e5fc:	add	x0, x8, x3
    e600:	mov	w2, #0x1                   	// #1
    e604:	ldr	x30, [sp], #32
    e608:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    e60c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e610:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e614:	add	x0, x0, #0xbf8
    e618:	add	x2, x2, #0x44f
    e61c:	mov	w1, #0x1cd                 	// #461
    e620:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e624:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e628:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e62c:	add	x0, x0, #0xbf8
    e630:	add	x2, x2, #0x46b
    e634:	mov	w1, #0x186                 	// #390
    e638:	mov	x3, xzr
    e63c:	mov	x4, xzr
    e640:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e644:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e648:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e64c:	add	x0, x0, #0xbf8
    e650:	add	x2, x2, #0x47b
    e654:	mov	w1, #0x18a                 	// #394
    e658:	mov	x4, x8
    e65c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e660:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e664:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e668:	add	x0, x0, #0xbf8
    e66c:	add	x2, x2, #0x49d
    e670:	mov	w1, #0x18b                 	// #395
    e674:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e678:	stp	x30, x21, [sp, #-32]!
    e67c:	stp	x20, x19, [sp, #16]
    e680:	cbz	x1, e714 <__sanitizer_set_report_fd@@Base+0x4e60>
    e684:	ldr	x3, [x0, #16]
    e688:	mov	x20, x1
    e68c:	mov	x19, x0
    e690:	cmp	x3, x1
    e694:	b.hi	e734 <__sanitizer_set_report_fd@@Base+0x4e80>  // b.pmore
    e698:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e69c:	ldr	x21, [x21, #4016]
    e6a0:	ldr	x0, [x21]
    e6a4:	cbnz	x0, e6b4 <__sanitizer_set_report_fd@@Base+0x4e00>
    e6a8:	mov	w0, #0x6                   	// #6
    e6ac:	bl	48b0 <getauxval@plt>
    e6b0:	str	x0, [x21]
    e6b4:	sub	x8, x0, #0x1
    e6b8:	tst	x0, x8
    e6bc:	b.ne	e750 <__sanitizer_set_report_fd@@Base+0x4e9c>  // b.any
    e6c0:	lsl	x8, x20, #3
    e6c4:	add	x8, x8, x0
    e6c8:	sub	x8, x8, #0x1
    e6cc:	neg	x9, x0
    e6d0:	and	x20, x8, x9
    e6d4:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
    e6d8:	add	x1, x1, #0x2c0
    e6dc:	mov	x0, x20
    e6e0:	mov	w2, wzr
    e6e4:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    e6e8:	ldr	x8, [x19, #16]
    e6ec:	ldr	x1, [x19]
    e6f0:	mov	x21, x0
    e6f4:	lsl	x2, x8, #3
    e6f8:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
    e6fc:	ldp	x0, x1, [x19]
    e700:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
    e704:	stp	x21, x20, [x19]
    e708:	ldp	x20, x19, [sp, #16]
    e70c:	ldp	x30, x21, [sp], #32
    e710:	ret
    e714:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e718:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    e71c:	add	x0, x0, #0xbf8
    e720:	add	x2, x2, #0x289
    e724:	mov	w1, #0x20b                 	// #523
    e728:	mov	x3, xzr
    e72c:	mov	x4, xzr
    e730:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e734:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    e738:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
    e73c:	add	x0, x0, #0xbf8
    e740:	add	x2, x2, #0x2a2
    e744:	mov	w1, #0x20c                 	// #524
    e748:	mov	x4, x20
    e74c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e750:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    e754:	add	x0, x0, #0x121
    e758:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    e75c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    e760:	cmp	w0, #0xa
    e764:	cset	w8, eq  // eq = none
    e768:	cmp	w0, #0x2
    e76c:	lsl	x8, x8, #4
    e770:	mov	w9, #0x4                   	// #4
    e774:	csel	x0, x9, x8, eq  // eq = none
    e778:	ret
    e77c:	b	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    e780:	str	x30, [sp, #-48]!
    e784:	stp	x22, x21, [sp, #16]
    e788:	stp	x20, x19, [sp, #32]
    e78c:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e790:	ldr	x22, [x22, #4016]
    e794:	mov	w20, w2
    e798:	mov	x19, x1
    e79c:	mov	x21, x0
    e7a0:	ldr	x8, [x22]
    e7a4:	cbnz	x8, e7b4 <__sanitizer_set_report_fd@@Base+0x4f00>
    e7a8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    e7ac:	mov	x8, x0
    e7b0:	str	x0, [x22]
    e7b4:	sub	x9, x8, #0x1
    e7b8:	tst	x8, x9
    e7bc:	b.ne	e83c <__sanitizer_set_report_fd@@Base+0x4f88>  // b.any
    e7c0:	add	x9, x21, x8
    e7c4:	neg	x8, x8
    e7c8:	sub	x9, x9, #0x1
    e7cc:	and	x21, x9, x8
    e7d0:	mov	w10, #0x22                  	// #34
    e7d4:	add	x2, sp, #0xc
    e7d8:	mov	x0, x19
    e7dc:	mov	x1, x21
    e7e0:	str	w10, [sp, #12]
    e7e4:	bl	f710 <__sanitizer_set_report_fd@@Base+0x5e5c>
    e7e8:	ldr	w3, [sp, #12]
    e7ec:	mov	w4, w0
    e7f0:	mov	w2, #0x3                   	// #3
    e7f4:	mov	x0, xzr
    e7f8:	mov	x1, x21
    e7fc:	mov	x5, xzr
    e800:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    e804:	mov	x1, xzr
    e808:	mov	x22, x0
    e80c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e810:	add	x1, sp, #0x8
    e814:	mov	x0, x22
    e818:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e81c:	tbnz	w0, #0, e84c <__sanitizer_set_report_fd@@Base+0x4f98>
    e820:	mov	x0, x21
    e824:	bl	6d70 <__sanitizer_report_error_summary@@Base+0x388>
    e828:	mov	x0, x22
    e82c:	ldp	x20, x19, [sp, #32]
    e830:	ldp	x22, x21, [sp, #16]
    e834:	ldr	x30, [sp], #48
    e838:	ret
    e83c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    e840:	add	x0, x0, #0x121
    e844:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    e848:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    e84c:	ldr	w3, [sp, #8]
    e850:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e854:	and	w4, w20, #0x1
    e858:	add	x2, x2, #0x4f4
    e85c:	mov	x0, x21
    e860:	mov	x1, x19
    e864:	bl	6810 <__sancov_default_options@plt+0x1e90>
    e868:	sub	sp, sp, #0x30
    e86c:	stp	x30, x21, [sp, #16]
    e870:	stp	x20, x19, [sp, #32]
    e874:	mov	w19, w2
    e878:	mov	x21, x0
    e87c:	add	x2, sp, #0xc
    e880:	mov	x0, x4
    e884:	mov	x20, x1
    e888:	str	w3, [sp, #12]
    e88c:	bl	f710 <__sanitizer_set_report_fd@@Base+0x5e5c>
    e890:	ldr	w3, [sp, #12]
    e894:	mov	w4, w0
    e898:	mov	x0, x21
    e89c:	mov	x1, x20
    e8a0:	mov	w2, w19
    e8a4:	mov	x5, xzr
    e8a8:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    e8ac:	mov	x1, xzr
    e8b0:	mov	x19, x0
    e8b4:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e8b8:	mov	x0, x19
    e8bc:	ldp	x20, x19, [sp, #32]
    e8c0:	ldp	x30, x21, [sp, #16]
    e8c4:	add	sp, sp, #0x30
    e8c8:	ret
    e8cc:	str	x30, [sp, #-32]!
    e8d0:	stp	x20, x19, [sp, #16]
    e8d4:	cbz	x0, e908 <__sanitizer_set_report_fd@@Base+0x5054>
    e8d8:	mov	x19, x1
    e8dc:	cbz	x1, e908 <__sanitizer_set_report_fd@@Base+0x5054>
    e8e0:	mov	x1, x19
    e8e4:	mov	x20, x0
    e8e8:	bl	cef8 <__sanitizer_set_report_fd@@Base+0x3644>
    e8ec:	mov	x1, xzr
    e8f0:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e8f4:	tbnz	w0, #0, e914 <__sanitizer_set_report_fd@@Base+0x5060>
    e8f8:	mov	x0, x19
    e8fc:	ldp	x20, x19, [sp, #16]
    e900:	ldr	x30, [sp], #32
    e904:	b	6dc0 <__sanitizer_report_error_summary@@Base+0x3d8>
    e908:	ldp	x20, x19, [sp, #16]
    e90c:	ldr	x30, [sp], #32
    e910:	ret
    e914:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e918:	ldr	x8, [x8, #4024]
    e91c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e920:	add	x0, x0, #0x4fd
    e924:	mov	x2, x19
    e928:	ldr	x1, [x8]
    e92c:	mov	x3, x19
    e930:	mov	x4, x20
    e934:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    e938:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e93c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    e940:	add	x0, x0, #0x53d
    e944:	add	x2, x2, #0x58f
    e948:	mov	w1, #0x3d                  	// #61
    e94c:	mov	x3, xzr
    e950:	mov	x4, xzr
    e954:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    e958:	sub	sp, sp, #0x30
    e95c:	stp	x30, x21, [sp, #16]
    e960:	stp	x20, x19, [sp, #32]
    e964:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    e968:	ldr	x21, [x21, #4016]
    e96c:	mov	x19, x1
    e970:	mov	x20, x0
    e974:	ldr	x8, [x21]
    e978:	cbnz	x8, e988 <__sanitizer_set_report_fd@@Base+0x50d4>
    e97c:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    e980:	mov	x8, x0
    e984:	str	x0, [x21]
    e988:	sub	x9, x8, #0x1
    e98c:	tst	x8, x9
    e990:	b.ne	ea24 <__sanitizer_set_report_fd@@Base+0x5170>  // b.any
    e994:	add	x9, x20, x8
    e998:	neg	x8, x8
    e99c:	sub	x9, x9, #0x1
    e9a0:	and	x20, x9, x8
    e9a4:	mov	w10, #0x22                  	// #34
    e9a8:	add	x2, sp, #0xc
    e9ac:	mov	x0, x19
    e9b0:	mov	x1, x20
    e9b4:	str	w10, [sp, #12]
    e9b8:	bl	f710 <__sanitizer_set_report_fd@@Base+0x5e5c>
    e9bc:	ldr	w3, [sp, #12]
    e9c0:	mov	w4, w0
    e9c4:	mov	w2, #0x3                   	// #3
    e9c8:	mov	x0, xzr
    e9cc:	mov	x1, x20
    e9d0:	mov	x5, xzr
    e9d4:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    e9d8:	mov	x1, xzr
    e9dc:	mov	x21, x0
    e9e0:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e9e4:	add	x1, sp, #0x8
    e9e8:	mov	x0, x21
    e9ec:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    e9f0:	tbnz	w0, #0, ea10 <__sanitizer_set_report_fd@@Base+0x515c>
    e9f4:	mov	x0, x20
    e9f8:	bl	6d70 <__sanitizer_report_error_summary@@Base+0x388>
    e9fc:	mov	x0, x21
    ea00:	ldp	x20, x19, [sp, #32]
    ea04:	ldp	x30, x21, [sp, #16]
    ea08:	add	sp, sp, #0x30
    ea0c:	ret
    ea10:	ldr	w3, [sp, #8]
    ea14:	cmp	w3, #0xc
    ea18:	b.ne	ea34 <__sanitizer_set_report_fd@@Base+0x5180>  // b.any
    ea1c:	mov	x21, xzr
    ea20:	b	e9fc <__sanitizer_set_report_fd@@Base+0x5148>
    ea24:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    ea28:	add	x0, x0, #0x121
    ea2c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    ea30:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    ea34:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ea38:	add	x2, x2, #0x4f4
    ea3c:	mov	x0, x20
    ea40:	mov	x1, x19
    ea44:	mov	w4, wzr
    ea48:	bl	6810 <__sancov_default_options@plt+0x1e90>
    ea4c:	stp	x30, x23, [sp, #-48]!
    ea50:	stp	x22, x21, [sp, #16]
    ea54:	stp	x20, x19, [sp, #32]
    ea58:	sub	x8, x0, #0x1
    ea5c:	tst	x0, x8
    ea60:	b.ne	eb38 <__sanitizer_set_report_fd@@Base+0x5284>  // b.any
    ea64:	sub	x23, x1, #0x1
    ea68:	mov	x19, x1
    ea6c:	tst	x1, x23
    ea70:	b.ne	eb50 <__sanitizer_set_report_fd@@Base+0x529c>  // b.any
    ea74:	add	x22, x19, x0
    ea78:	mov	x20, x0
    ea7c:	mov	x0, x22
    ea80:	mov	x1, x2
    ea84:	bl	e958 <__sanitizer_set_report_fd@@Base+0x50a4>
    ea88:	cbz	x0, eb30 <__sanitizer_set_report_fd@@Base+0x527c>
    ea8c:	mov	x21, x0
    ea90:	tst	x23, x0
    ea94:	b.eq	eae0 <__sanitizer_set_report_fd@@Base+0x522c>  // b.none
    ea98:	add	x8, x23, x21
    ea9c:	neg	x9, x19
    eaa0:	and	x19, x8, x9
    eaa4:	subs	x23, x19, x21
    eaa8:	b.eq	eacc <__sanitizer_set_report_fd@@Base+0x5218>  // b.none
    eaac:	mov	x0, x21
    eab0:	mov	x1, x23
    eab4:	bl	cef8 <__sanitizer_set_report_fd@@Base+0x3644>
    eab8:	mov	x1, xzr
    eabc:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    eac0:	tbnz	w0, #0, eb68 <__sanitizer_set_report_fd@@Base+0x52b4>
    eac4:	mov	x0, x23
    eac8:	bl	6dc0 <__sanitizer_report_error_summary@@Base+0x3d8>
    eacc:	add	x8, x22, x21
    ead0:	add	x21, x19, x20
    ead4:	subs	x20, x8, x21
    ead8:	b.ne	eaf4 <__sanitizer_set_report_fd@@Base+0x5240>  // b.any
    eadc:	b	eb1c <__sanitizer_set_report_fd@@Base+0x5268>
    eae0:	mov	x19, x21
    eae4:	add	x8, x22, x21
    eae8:	add	x21, x19, x20
    eaec:	subs	x20, x8, x21
    eaf0:	b.eq	eb1c <__sanitizer_set_report_fd@@Base+0x5268>  // b.none
    eaf4:	cbz	x21, eb1c <__sanitizer_set_report_fd@@Base+0x5268>
    eaf8:	cbz	x20, eb1c <__sanitizer_set_report_fd@@Base+0x5268>
    eafc:	mov	x0, x21
    eb00:	mov	x1, x20
    eb04:	bl	cef8 <__sanitizer_set_report_fd@@Base+0x3644>
    eb08:	mov	x1, xzr
    eb0c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    eb10:	tbnz	w0, #0, eb88 <__sanitizer_set_report_fd@@Base+0x52d4>
    eb14:	mov	x0, x20
    eb18:	bl	6dc0 <__sanitizer_report_error_summary@@Base+0x3d8>
    eb1c:	mov	x0, x19
    eb20:	ldp	x20, x19, [sp, #32]
    eb24:	ldp	x22, x21, [sp, #16]
    eb28:	ldp	x30, x23, [sp], #48
    eb2c:	ret
    eb30:	mov	x19, xzr
    eb34:	b	eb1c <__sanitizer_set_report_fd@@Base+0x5268>
    eb38:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    eb3c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    eb40:	add	x0, x0, #0x53d
    eb44:	add	x2, x2, #0x5b1
    eb48:	mov	w1, #0x55                  	// #85
    eb4c:	b	ebc0 <__sanitizer_set_report_fd@@Base+0x530c>
    eb50:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    eb54:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
    eb58:	add	x0, x0, #0x53d
    eb5c:	add	x2, x2, #0x9db
    eb60:	mov	w1, #0x56                  	// #86
    eb64:	b	ebc0 <__sanitizer_set_report_fd@@Base+0x530c>
    eb68:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    eb6c:	ldr	x8, [x8, #4024]
    eb70:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    eb74:	add	x0, x0, #0x4fd
    eb78:	mov	x2, x23
    eb7c:	ldr	x1, [x8]
    eb80:	mov	x3, x23
    eb84:	b	eba4 <__sanitizer_set_report_fd@@Base+0x52f0>
    eb88:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    eb8c:	ldr	x8, [x8, #4024]
    eb90:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    eb94:	add	x0, x0, #0x4fd
    eb98:	mov	x2, x20
    eb9c:	ldr	x1, [x8]
    eba0:	mov	x3, x20
    eba4:	mov	x4, x21
    eba8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    ebac:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ebb0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ebb4:	add	x0, x0, #0x53d
    ebb8:	add	x2, x2, #0x58f
    ebbc:	mov	w1, #0x3d                  	// #61
    ebc0:	mov	x3, xzr
    ebc4:	mov	x4, xzr
    ebc8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    ebcc:	sub	sp, sp, #0x30
    ebd0:	stp	x30, x21, [sp, #16]
    ebd4:	stp	x20, x19, [sp, #32]
    ebd8:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ebdc:	ldr	x21, [x21, #4016]
    ebe0:	mov	x19, x1
    ebe4:	mov	x20, x0
    ebe8:	ldr	x8, [x21]
    ebec:	cbnz	x8, ebfc <__sanitizer_set_report_fd@@Base+0x5348>
    ebf0:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    ebf4:	mov	x8, x0
    ebf8:	str	x0, [x21]
    ebfc:	sub	x9, x8, #0x1
    ec00:	tst	x8, x9
    ec04:	b.ne	ec84 <__sanitizer_set_report_fd@@Base+0x53d0>  // b.any
    ec08:	add	x9, x20, x8
    ec0c:	neg	x8, x8
    ec10:	sub	x9, x9, #0x1
    ec14:	and	x20, x9, x8
    ec18:	mov	w10, #0x4022                	// #16418
    ec1c:	add	x2, sp, #0xc
    ec20:	mov	x0, x19
    ec24:	mov	x1, x20
    ec28:	str	w10, [sp, #12]
    ec2c:	bl	f710 <__sanitizer_set_report_fd@@Base+0x5e5c>
    ec30:	ldr	w3, [sp, #12]
    ec34:	mov	w4, w0
    ec38:	mov	w2, #0x3                   	// #3
    ec3c:	mov	x0, xzr
    ec40:	mov	x1, x20
    ec44:	mov	x5, xzr
    ec48:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    ec4c:	mov	x1, xzr
    ec50:	mov	x21, x0
    ec54:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    ec58:	add	x1, sp, #0x8
    ec5c:	mov	x0, x21
    ec60:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    ec64:	tbnz	w0, #0, ec94 <__sanitizer_set_report_fd@@Base+0x53e0>
    ec68:	mov	x0, x20
    ec6c:	bl	6d70 <__sanitizer_report_error_summary@@Base+0x388>
    ec70:	mov	x0, x21
    ec74:	ldp	x20, x19, [sp, #32]
    ec78:	ldp	x30, x21, [sp, #16]
    ec7c:	add	sp, sp, #0x30
    ec80:	ret
    ec84:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    ec88:	add	x0, x0, #0x121
    ec8c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    ec90:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    ec94:	ldr	w3, [sp, #8]
    ec98:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ec9c:	add	x2, x2, #0x5cf
    eca0:	mov	x0, x20
    eca4:	mov	x1, x19
    eca8:	mov	w4, wzr
    ecac:	bl	6810 <__sancov_default_options@plt+0x1e90>
    ecb0:	mov	x3, x2
    ecb4:	mov	w2, wzr
    ecb8:	b	ecbc <__sanitizer_set_report_fd@@Base+0x5408>
    ecbc:	sub	sp, sp, #0x60
    ecc0:	stp	x30, x23, [sp, #48]
    ecc4:	stp	x22, x21, [sp, #64]
    ecc8:	stp	x20, x19, [sp, #80]
    eccc:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ecd0:	ldr	x23, [x23, #4016]
    ecd4:	mov	x22, x3
    ecd8:	mov	w19, w2
    ecdc:	mov	x20, x1
    ece0:	ldr	x8, [x23]
    ece4:	mov	x21, x0
    ece8:	cbnz	x8, ecf8 <__sanitizer_set_report_fd@@Base+0x5444>
    ecec:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    ecf0:	mov	x8, x0
    ecf4:	str	x0, [x23]
    ecf8:	sub	x9, x8, #0x1
    ecfc:	tst	x8, x9
    ed00:	b.ne	edb0 <__sanitizer_set_report_fd@@Base+0x54fc>  // b.any
    ed04:	add	x9, x20, x8
    ed08:	sub	x10, x9, #0x1
    ed0c:	neg	x9, x8
    ed10:	and	x20, x10, x9
    ed14:	cbnz	x8, ed24 <__sanitizer_set_report_fd@@Base+0x5470>
    ed18:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    ed1c:	neg	x9, x0
    ed20:	str	x0, [x23]
    ed24:	mov	w8, #0x32                  	// #50
    ed28:	add	x2, sp, #0x4
    ed2c:	mov	x0, x22
    ed30:	mov	x1, x20
    ed34:	and	x21, x9, x21
    ed38:	str	w8, [sp, #4]
    ed3c:	bl	f710 <__sanitizer_set_report_fd@@Base+0x5e5c>
    ed40:	ldr	w3, [sp, #4]
    ed44:	mov	w4, w0
    ed48:	mov	w2, #0x3                   	// #3
    ed4c:	mov	x0, x21
    ed50:	mov	x1, x20
    ed54:	mov	x5, xzr
    ed58:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    ed5c:	mov	x1, xzr
    ed60:	mov	x22, x0
    ed64:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    ed68:	add	x1, sp, #0x2c
    ed6c:	mov	x0, x22
    ed70:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    ed74:	tbnz	w0, #0, ed98 <__sanitizer_set_report_fd@@Base+0x54e4>
    ed78:	mov	x0, x20
    ed7c:	bl	6d70 <__sanitizer_report_error_summary@@Base+0x388>
    ed80:	mov	x0, x22
    ed84:	ldp	x20, x19, [sp, #80]
    ed88:	ldp	x22, x21, [sp, #64]
    ed8c:	ldp	x30, x23, [sp, #48]
    ed90:	add	sp, sp, #0x60
    ed94:	ret
    ed98:	ldr	w8, [sp, #44]
    ed9c:	cmp	w8, #0xc
    eda0:	b.ne	edc0 <__sanitizer_set_report_fd@@Base+0x550c>  // b.any
    eda4:	tbz	w19, #0, edc0 <__sanitizer_set_report_fd@@Base+0x550c>
    eda8:	mov	x22, xzr
    edac:	b	ed80 <__sanitizer_set_report_fd@@Base+0x54cc>
    edb0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    edb4:	add	x0, x0, #0x121
    edb8:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    edbc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    edc0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    edc4:	add	x2, x2, #0x75e
    edc8:	add	x0, sp, #0x4
    edcc:	mov	w1, #0x28                  	// #40
    edd0:	mov	x3, x21
    edd4:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    edd8:	ldr	w3, [sp, #44]
    eddc:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ede0:	add	x2, x2, #0x4f4
    ede4:	add	x1, sp, #0x4
    ede8:	mov	x0, x20
    edec:	mov	w4, wzr
    edf0:	bl	6810 <__sancov_default_options@plt+0x1e90>
    edf4:	mov	x3, x2
    edf8:	mov	w2, #0x1                   	// #1
    edfc:	b	ecbc <__sanitizer_set_report_fd@@Base+0x5408>
    ee00:	str	x30, [sp, #-16]!
    ee04:	mov	w2, wzr
    ee08:	bl	cf04 <__sanitizer_set_report_fd@@Base+0x3650>
    ee0c:	cmp	w0, #0x0
    ee10:	cset	w0, eq  // eq = none
    ee14:	ldr	x30, [sp], #16
    ee18:	ret
    ee1c:	str	x30, [sp, #-16]!
    ee20:	mov	w2, #0x1                   	// #1
    ee24:	bl	cf04 <__sanitizer_set_report_fd@@Base+0x3650>
    ee28:	cmp	w0, #0x0
    ee2c:	cset	w0, eq  // eq = none
    ee30:	ldr	x30, [sp], #16
    ee34:	ret
    ee38:	ret
    ee3c:	sub	sp, sp, #0x30
    ee40:	stp	x30, x21, [sp, #16]
    ee44:	stp	x20, x19, [sp, #32]
    ee48:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ee4c:	ldr	x8, [x8, #4056]
    ee50:	mov	x20, x2
    ee54:	mov	w21, w1
    ee58:	mov	x19, x0
    ee5c:	ldrb	w8, [x8, #243]
    ee60:	cbz	w8, ee7c <__sanitizer_set_report_fd@@Base+0x55c8>
    ee64:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ee68:	add	x1, x1, #0x6fc
    ee6c:	mov	w2, #0x6                   	// #6
    ee70:	mov	x0, x19
    ee74:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
    ee78:	cbz	w0, eeb4 <__sanitizer_set_report_fd@@Base+0x5600>
    ee7c:	cmp	w21, #0x1
    ee80:	mov	w8, #0x241                 	// #577
    ee84:	csel	w8, w8, wzr, eq  // eq = none
    ee88:	cmp	w21, #0x2
    ee8c:	mov	w9, #0x42                  	// #66
    ee90:	csel	w1, w9, w8, eq  // eq = none
    ee94:	mov	w2, #0x1b0                 	// #432
    ee98:	mov	x0, x19
    ee9c:	bl	cf40 <__sanitizer_set_report_fd@@Base+0x368c>
    eea0:	mov	x19, x0
    eea4:	sxtw	x0, w0
    eea8:	mov	x1, x20
    eeac:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    eeb0:	tbz	w0, #0, eebc <__sanitizer_set_report_fd@@Base+0x5608>
    eeb4:	mov	w19, #0xffffffff            	// #-1
    eeb8:	b	ef24 <__sanitizer_set_report_fd@@Base+0x5670>
    eebc:	cmp	w19, #0x2
    eec0:	b.gt	ef24 <__sanitizer_set_report_fd@@Base+0x5670>
    eec4:	add	x0, sp, #0xc
    eec8:	mov	w2, #0x3                   	// #3
    eecc:	mov	w1, wzr
    eed0:	add	x20, sp, #0xc
    eed4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    eed8:	mov	w21, #0x1                   	// #1
    eedc:	mov	w0, w19
    eee0:	strb	w21, [x20, w19, sxtw]
    eee4:	bl	d040 <__sanitizer_set_report_fd@@Base+0x378c>
    eee8:	mov	x19, x0
    eeec:	cmp	w19, #0x3
    eef0:	b.lt	eedc <__sanitizer_set_report_fd@@Base+0x5628>  // b.tstop
    eef4:	ldrb	w8, [sp, #12]
    eef8:	cbz	w8, ef04 <__sanitizer_set_report_fd@@Base+0x5650>
    eefc:	mov	w0, wzr
    ef00:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    ef04:	ldrb	w8, [sp, #13]
    ef08:	cbz	w8, ef14 <__sanitizer_set_report_fd@@Base+0x5660>
    ef0c:	mov	w0, #0x1                   	// #1
    ef10:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    ef14:	ldrb	w8, [sp, #14]
    ef18:	cbz	w8, ef24 <__sanitizer_set_report_fd@@Base+0x5670>
    ef1c:	mov	w0, #0x2                   	// #2
    ef20:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    ef24:	mov	w0, w19
    ef28:	ldp	x20, x19, [sp, #32]
    ef2c:	ldp	x30, x21, [sp, #16]
    ef30:	add	sp, sp, #0x30
    ef34:	ret
    ef38:	str	x30, [sp, #-16]!
    ef3c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    ef40:	ldr	x8, [x8, #4056]
    ef44:	ldrb	w8, [x8, #243]
    ef48:	cbz	w8, ef6c <__sanitizer_set_report_fd@@Base+0x56b8>
    ef4c:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    ef50:	add	x1, x1, #0x6fc
    ef54:	mov	w2, #0x6                   	// #6
    ef58:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
    ef5c:	cmp	w0, #0x0
    ef60:	cset	w0, eq  // eq = none
    ef64:	ldr	x30, [sp], #16
    ef68:	ret
    ef6c:	mov	w0, wzr
    ef70:	ldr	x30, [sp], #16
    ef74:	ret
    ef78:	sub	sp, sp, #0x30
    ef7c:	stp	x30, x21, [sp, #16]
    ef80:	stp	x20, x19, [sp, #32]
    ef84:	mov	w19, w0
    ef88:	cmp	w0, #0x2
    ef8c:	b.gt	eff0 <__sanitizer_set_report_fd@@Base+0x573c>
    ef90:	add	x0, sp, #0xc
    ef94:	mov	w2, #0x3                   	// #3
    ef98:	mov	w1, wzr
    ef9c:	add	x20, sp, #0xc
    efa0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    efa4:	mov	w21, #0x1                   	// #1
    efa8:	mov	w0, w19
    efac:	strb	w21, [x20, w19, sxtw]
    efb0:	bl	d040 <__sanitizer_set_report_fd@@Base+0x378c>
    efb4:	mov	x19, x0
    efb8:	cmp	w19, #0x3
    efbc:	b.lt	efa8 <__sanitizer_set_report_fd@@Base+0x56f4>  // b.tstop
    efc0:	ldrb	w8, [sp, #12]
    efc4:	cbz	w8, efd0 <__sanitizer_set_report_fd@@Base+0x571c>
    efc8:	mov	w0, wzr
    efcc:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    efd0:	ldrb	w8, [sp, #13]
    efd4:	cbz	w8, efe0 <__sanitizer_set_report_fd@@Base+0x572c>
    efd8:	mov	w0, #0x1                   	// #1
    efdc:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    efe0:	ldrb	w8, [sp, #14]
    efe4:	cbz	w8, eff0 <__sanitizer_set_report_fd@@Base+0x573c>
    efe8:	mov	w0, #0x2                   	// #2
    efec:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    eff0:	mov	w0, w19
    eff4:	ldp	x20, x19, [sp, #32]
    eff8:	ldp	x30, x21, [sp, #16]
    effc:	add	sp, sp, #0x30
    f000:	ret
    f004:	b	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    f008:	stp	x30, x21, [sp, #-32]!
    f00c:	stp	x20, x19, [sp, #16]
    f010:	mov	x21, x4
    f014:	mov	x19, x3
    f018:	bl	cf64 <__sanitizer_set_report_fd@@Base+0x36b0>
    f01c:	mov	x1, x21
    f020:	mov	x20, x0
    f024:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f028:	tbz	w0, #0, f03c <__sanitizer_set_report_fd@@Base+0x5788>
    f02c:	mov	w0, wzr
    f030:	ldp	x20, x19, [sp, #16]
    f034:	ldp	x30, x21, [sp], #32
    f038:	ret
    f03c:	cbz	x19, f044 <__sanitizer_set_report_fd@@Base+0x5790>
    f040:	str	x20, [x19]
    f044:	mov	w0, #0x1                   	// #1
    f048:	ldp	x20, x19, [sp, #16]
    f04c:	ldp	x30, x21, [sp], #32
    f050:	ret
    f054:	stp	x30, x21, [sp, #-32]!
    f058:	stp	x20, x19, [sp, #16]
    f05c:	mov	x21, x4
    f060:	mov	x19, x3
    f064:	bl	cf88 <__sanitizer_set_report_fd@@Base+0x36d4>
    f068:	mov	x1, x21
    f06c:	mov	x20, x0
    f070:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f074:	tbz	w0, #0, f088 <__sanitizer_set_report_fd@@Base+0x57d4>
    f078:	mov	w0, wzr
    f07c:	ldp	x20, x19, [sp, #16]
    f080:	ldp	x30, x21, [sp], #32
    f084:	ret
    f088:	cbz	x19, f090 <__sanitizer_set_report_fd@@Base+0x57dc>
    f08c:	str	x20, [x19]
    f090:	mov	w0, #0x1                   	// #1
    f094:	ldp	x20, x19, [sp, #16]
    f098:	ldp	x30, x21, [sp], #32
    f09c:	ret
    f0a0:	str	x30, [sp, #-48]!
    f0a4:	stp	x22, x21, [sp, #16]
    f0a8:	stp	x20, x19, [sp, #32]
    f0ac:	mov	x19, x1
    f0b0:	mov	w1, wzr
    f0b4:	mov	x2, xzr
    f0b8:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
    f0bc:	cmn	w0, #0x1
    f0c0:	b.eq	f150 <__sanitizer_set_report_fd@@Base+0x589c>  // b.none
    f0c4:	mov	w20, w0
    f0c8:	bl	d018 <__sanitizer_set_report_fd@@Base+0x3764>
    f0cc:	cbz	x0, f168 <__sanitizer_set_report_fd@@Base+0x58b4>
    f0d0:	mov	x21, x0
    f0d4:	cmn	x0, #0x1
    f0d8:	b.eq	f188 <__sanitizer_set_report_fd@@Base+0x58d4>  // b.none
    f0dc:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    f0e0:	ldr	x22, [x22, #4016]
    f0e4:	ldr	x0, [x22]
    f0e8:	cbnz	x0, f0f4 <__sanitizer_set_report_fd@@Base+0x5840>
    f0ec:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
    f0f0:	str	x0, [x22]
    f0f4:	sub	x8, x0, #0x1
    f0f8:	tst	x0, x8
    f0fc:	b.ne	f1a8 <__sanitizer_set_report_fd@@Base+0x58f4>  // b.any
    f100:	add	x8, x21, x0
    f104:	sub	x8, x8, #0x1
    f108:	neg	x9, x0
    f10c:	and	x1, x8, x9
    f110:	mov	w2, #0x1                   	// #1
    f114:	mov	w3, #0x2                   	// #2
    f118:	mov	x0, xzr
    f11c:	mov	w4, w20
    f120:	mov	x5, xzr
    f124:	str	x1, [x19]
    f128:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    f12c:	mov	x1, xzr
    f130:	mov	x19, x0
    f134:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f138:	tst	w0, #0x1
    f13c:	csel	x0, xzr, x19, ne  // ne = any
    f140:	ldp	x20, x19, [sp, #32]
    f144:	ldp	x22, x21, [sp, #16]
    f148:	ldr	x30, [sp], #48
    f14c:	ret
    f150:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f154:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f158:	add	x0, x0, #0x53d
    f15c:	add	x2, x2, #0x5e2
    f160:	mov	w1, #0xc2                  	// #194
    f164:	b	f17c <__sanitizer_set_report_fd@@Base+0x58c8>
    f168:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f16c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f170:	add	x0, x0, #0x53d
    f174:	add	x2, x2, #0x618
    f178:	mov	w1, #0xc5                  	// #197
    f17c:	mov	x3, xzr
    f180:	mov	x4, xzr
    f184:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f188:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f18c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f190:	add	x0, x0, #0x53d
    f194:	add	x2, x2, #0x5fe
    f198:	mov	w1, #0xc4                  	// #196
    f19c:	mov	x3, #0xffffffffffffffff    	// #-1
    f1a0:	mov	x4, #0xffffffffffffffff    	// #-1
    f1a4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f1a8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
    f1ac:	add	x0, x0, #0x121
    f1b0:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    f1b4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    f1b8:	str	x30, [sp, #-48]!
    f1bc:	stp	x22, x21, [sp, #16]
    f1c0:	stp	x20, x19, [sp, #32]
    f1c4:	mov	x19, x3
    f1c8:	mov	w21, w2
    f1cc:	cmp	x0, #0x0
    f1d0:	mov	w8, #0x11                  	// #17
    f1d4:	csinc	w3, w8, wzr, ne  // ne = any
    f1d8:	mov	w2, #0x3                   	// #3
    f1dc:	mov	w4, w21
    f1e0:	mov	x5, x19
    f1e4:	mov	x20, x1
    f1e8:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
    f1ec:	add	x1, sp, #0xc
    f1f0:	mov	x22, x0
    f1f4:	str	wzr, [sp, #12]
    f1f8:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f1fc:	tbz	w0, #0, f224 <__sanitizer_set_report_fd@@Base+0x5970>
    f200:	ldr	w5, [sp, #12]
    f204:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f208:	add	x0, x0, #0x62a
    f20c:	mov	w1, w21
    f210:	mov	x2, x19
    f214:	mov	x3, x20
    f218:	mov	x4, x22
    f21c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    f220:	mov	x22, xzr
    f224:	mov	x0, x22
    f228:	ldp	x20, x19, [sp, #32]
    f22c:	ldp	x22, x21, [sp, #16]
    f230:	ldr	x30, [sp], #48
    f234:	ret
    f238:	sub	sp, sp, #0x90
    f23c:	stp	x30, x21, [sp, #112]
    f240:	stp	x20, x19, [sp, #128]
    f244:	mov	x19, x1
    f248:	mov	x20, x0
    f24c:	add	x0, sp, #0x50
    f250:	mov	w1, #0x1                   	// #1
    f254:	mov	w21, #0x1                   	// #1
    f258:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
    f25c:	add	x0, sp, #0x50
    f260:	bl	10aac <__sanitizer_on_print@@Base+0xbac>
    f264:	tbnz	w0, #0, f2f4 <__sanitizer_set_report_fd@@Base+0x5a40>
    f268:	add	x0, sp, #0x50
    f26c:	mov	x1, sp
    f270:	stp	xzr, xzr, [sp, #24]
    f274:	str	xzr, [sp, #72]
    f278:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f27c:	tbz	w0, #0, f2f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
    f280:	cmp	x20, x19
    f284:	b.ls	f2bc <__sanitizer_set_report_fd@@Base+0x5a08>  // b.plast
    f288:	mov	w21, #0x1                   	// #1
    f28c:	ldp	x8, x9, [sp]
    f290:	cmp	x8, x9
    f294:	b.ne	f310 <__sanitizer_set_report_fd@@Base+0x5a5c>  // b.any
    f298:	add	x0, sp, #0x50
    f29c:	mov	x1, sp
    f2a0:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f2a4:	tbnz	w0, #0, f28c <__sanitizer_set_report_fd@@Base+0x59d8>
    f2a8:	b	f2f4 <__sanitizer_set_report_fd@@Base+0x5a40>
    f2ac:	add	x0, sp, #0x50
    f2b0:	mov	x1, sp
    f2b4:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f2b8:	tbz	w0, #0, f2f0 <__sanitizer_set_report_fd@@Base+0x5a3c>
    f2bc:	ldp	x8, x9, [sp]
    f2c0:	cmp	x8, x9
    f2c4:	b.eq	f2ac <__sanitizer_set_report_fd@@Base+0x59f8>  // b.none
    f2c8:	cbz	x9, f314 <__sanitizer_set_report_fd@@Base+0x5a60>
    f2cc:	sub	x9, x9, #0x1
    f2d0:	cmp	x8, x9
    f2d4:	b.hi	f340 <__sanitizer_set_report_fd@@Base+0x5a8c>  // b.pmore
    f2d8:	cmp	x8, x19
    f2dc:	b.hi	f2ac <__sanitizer_set_report_fd@@Base+0x59f8>  // b.pmore
    f2e0:	cmp	x9, x20
    f2e4:	b.cc	f2ac <__sanitizer_set_report_fd@@Base+0x59f8>  // b.lo, b.ul, b.last
    f2e8:	mov	w21, wzr
    f2ec:	b	f2f4 <__sanitizer_set_report_fd@@Base+0x5a40>
    f2f0:	mov	w21, #0x1                   	// #1
    f2f4:	add	x0, sp, #0x50
    f2f8:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
    f2fc:	mov	w0, w21
    f300:	ldp	x20, x19, [sp, #128]
    f304:	ldp	x30, x21, [sp, #112]
    f308:	add	sp, sp, #0x90
    f30c:	ret
    f310:	cbnz	x9, f334 <__sanitizer_set_report_fd@@Base+0x5a80>
    f314:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f318:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f31c:	add	x0, x0, #0x53d
    f320:	add	x2, x2, #0x667
    f324:	mov	w1, #0xea                  	// #234
    f328:	mov	x3, xzr
    f32c:	mov	x4, xzr
    f330:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f334:	sub	x9, x9, #0x1
    f338:	cmp	x8, x9
    f33c:	b.ls	f360 <__sanitizer_set_report_fd@@Base+0x5aac>  // b.plast
    f340:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f344:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f348:	add	x0, x0, #0x53d
    f34c:	add	x2, x2, #0x776
    f350:	mov	w1, #0xda                  	// #218
    f354:	mov	x3, xzr
    f358:	mov	x4, xzr
    f35c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f360:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f364:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f368:	add	x0, x0, #0x53d
    f36c:	add	x2, x2, #0x790
    f370:	mov	w1, #0xdb                  	// #219
    f374:	mov	x3, xzr
    f378:	mov	x4, xzr
    f37c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f380:	sub	sp, sp, #0x90
    f384:	str	x30, [sp, #112]
    f388:	stp	x20, x19, [sp, #128]
    f38c:	add	x0, sp, #0x50
    f390:	mov	w1, #0x1                   	// #1
    f394:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
    f398:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f39c:	add	x1, x1, #0x680
    f3a0:	mov	w0, #0xfff                 	// #4095
    f3a4:	mov	w2, wzr
    f3a8:	mov	w20, #0xfff                 	// #4095
    f3ac:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
    f3b0:	mov	x19, x0
    f3b4:	stp	x0, x20, [sp, #24]
    f3b8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f3bc:	add	x0, x0, #0x68f
    f3c0:	str	xzr, [sp, #72]
    f3c4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    f3c8:	add	x0, sp, #0x50
    f3cc:	mov	x1, sp
    f3d0:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f3d4:	tbz	w0, #0, f400 <__sanitizer_set_report_fd@@Base+0x5b4c>
    f3d8:	adrp	x20, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f3dc:	add	x20, x20, #0x6ac
    f3e0:	ldp	x1, x2, [sp]
    f3e4:	ldr	x3, [sp, #24]
    f3e8:	mov	x0, x20
    f3ec:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
    f3f0:	add	x0, sp, #0x50
    f3f4:	mov	x1, sp
    f3f8:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f3fc:	tbnz	w0, #0, f3e0 <__sanitizer_set_report_fd@@Base+0x5b2c>
    f400:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f404:	add	x0, x0, #0x6b7
    f408:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    f40c:	cbz	x19, f430 <__sanitizer_set_report_fd@@Base+0x5b7c>
    f410:	mov	w1, #0xfff                 	// #4095
    f414:	mov	x0, x19
    f418:	bl	cef8 <__sanitizer_set_report_fd@@Base+0x3644>
    f41c:	mov	x1, xzr
    f420:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f424:	tbnz	w0, #0, f448 <__sanitizer_set_report_fd@@Base+0x5b94>
    f428:	mov	w0, #0xfff                 	// #4095
    f42c:	bl	6dc0 <__sanitizer_report_error_summary@@Base+0x3d8>
    f430:	add	x0, sp, #0x50
    f434:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
    f438:	ldp	x20, x19, [sp, #128]
    f43c:	ldr	x30, [sp, #112]
    f440:	add	sp, sp, #0x90
    f444:	ret
    f448:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    f44c:	ldr	x8, [x8, #4024]
    f450:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f454:	add	x0, x0, #0x4fd
    f458:	mov	w2, #0xfff                 	// #4095
    f45c:	ldr	x1, [x8]
    f460:	mov	w3, #0xfff                 	// #4095
    f464:	mov	x4, x19
    f468:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    f46c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f470:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f474:	add	x0, x0, #0x53d
    f478:	add	x2, x2, #0x58f
    f47c:	mov	w1, #0x3d                  	// #61
    f480:	mov	x3, xzr
    f484:	mov	x4, xzr
    f488:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f48c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f490:	add	x0, x0, #0x6d3
    f494:	b	d1f0 <__sanitizer_set_report_fd@@Base+0x393c>
    f498:	and	w8, w0, #0xff
    f49c:	cmp	w8, #0x2f
    f4a0:	cset	w0, eq  // eq = none
    f4a4:	ret
    f4a8:	cbz	x0, f4b8 <__sanitizer_set_report_fd@@Base+0x5c04>
    f4ac:	ldrb	w8, [x0]
    f4b0:	cmp	w8, #0x2f
    f4b4:	cset	w0, eq  // eq = none
    f4b8:	ret
    f4bc:	str	x30, [sp, #-48]!
    f4c0:	stp	x22, x21, [sp, #16]
    f4c4:	stp	x20, x19, [sp, #32]
    f4c8:	ldr	x19, [x0]
    f4cc:	mov	x20, x2
    f4d0:	mov	x21, x1
    f4d4:	mov	x22, x0
    f4d8:	mov	w8, #0x1                   	// #1
    f4dc:	ldaxrb	w9, [x19]
    f4e0:	stlxrb	w10, w8, [x19]
    f4e4:	cbnz	w10, f4dc <__sanitizer_set_report_fd@@Base+0x5c28>
    f4e8:	cbz	w9, f4f4 <__sanitizer_set_report_fd@@Base+0x5c40>
    f4ec:	mov	x0, x19
    f4f0:	bl	67b8 <__sancov_default_options@plt+0x1e38>
    f4f4:	mov	x0, x22
    f4f8:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
    f4fc:	ldr	w0, [x22, #8]
    f500:	mov	x1, x21
    f504:	mov	x2, x20
    f508:	bl	cf88 <__sanitizer_set_report_fd@@Base+0x36d4>
    f50c:	dmb	ish
    f510:	strb	wzr, [x19]
    f514:	ldp	x20, x19, [sp, #32]
    f518:	ldp	x22, x21, [sp, #16]
    f51c:	ldr	x30, [sp], #48
    f520:	ret
    f524:	sub	sp, sp, #0xc0
    f528:	str	x30, [sp, #144]
    f52c:	stp	x22, x21, [sp, #160]
    f530:	stp	x20, x19, [sp, #176]
    f534:	mov	x20, x1
    f538:	mov	x21, x0
    f53c:	add	x0, sp, #0x70
    f540:	mov	w1, wzr
    f544:	mov	x19, x2
    f548:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
    f54c:	add	x0, sp, #0x50
    f550:	mov	w1, #0x1000                	// #4096
    f554:	stp	xzr, xzr, [sp, #88]
    f558:	str	xzr, [sp, #80]
    f55c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    f560:	ldr	x8, [sp, #96]
    f564:	cmp	x8, #0xfff
    f568:	b.hi	f5a0 <__sanitizer_set_report_fd@@Base+0x5cec>  // b.pmore
    f56c:	ldr	x9, [sp, #88]
    f570:	cmp	x9, #0xfff
    f574:	b.hi	f588 <__sanitizer_set_report_fd@@Base+0x5cd4>  // b.pmore
    f578:	add	x0, sp, #0x50
    f57c:	mov	w1, #0x1000                	// #4096
    f580:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
    f584:	ldr	x8, [sp, #96]
    f588:	ldr	x9, [sp, #80]
    f58c:	mov	w10, #0x1000                	// #4096
    f590:	sub	x2, x10, x8
    f594:	mov	w1, wzr
    f598:	add	x0, x9, x8
    f59c:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    f5a0:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
    f5a4:	ldr	q0, [x8, #3584]
    f5a8:	ldr	x8, [sp, #80]
    f5ac:	mov	w9, #0x1000                	// #4096
    f5b0:	add	x0, sp, #0x70
    f5b4:	str	q0, [sp, #96]
    f5b8:	strb	wzr, [x8]
    f5bc:	ldr	x8, [sp, #80]
    f5c0:	mov	x1, sp
    f5c4:	str	xzr, [sp, #72]
    f5c8:	stp	x8, x9, [sp, #24]
    f5cc:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f5d0:	mov	w22, wzr
    f5d4:	tbnz	w0, #0, f5ec <__sanitizer_set_report_fd@@Base+0x5d38>
    f5d8:	b	f620 <__sanitizer_set_report_fd@@Base+0x5d6c>
    f5dc:	add	x0, sp, #0x70
    f5e0:	mov	x1, sp
    f5e4:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
    f5e8:	tbz	w0, #0, f61c <__sanitizer_set_report_fd@@Base+0x5d68>
    f5ec:	ldrb	w8, [sp, #40]
    f5f0:	tbz	w8, #2, f5dc <__sanitizer_set_report_fd@@Base+0x5d28>
    f5f4:	ldr	x1, [sp, #24]
    f5f8:	mov	x0, x21
    f5fc:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
    f600:	cbnz	w0, f5dc <__sanitizer_set_report_fd@@Base+0x5d28>
    f604:	ldr	x8, [sp]
    f608:	mov	w22, #0x1                   	// #1
    f60c:	str	x8, [x20]
    f610:	ldr	x8, [sp, #8]
    f614:	str	x8, [x19]
    f618:	b	f620 <__sanitizer_set_report_fd@@Base+0x5d6c>
    f61c:	mov	w22, wzr
    f620:	ldr	x19, [sp, #80]
    f624:	cbz	x19, f650 <__sanitizer_set_report_fd@@Base+0x5d9c>
    f628:	ldr	x20, [sp, #88]
    f62c:	cbz	x20, f650 <__sanitizer_set_report_fd@@Base+0x5d9c>
    f630:	mov	x0, x19
    f634:	mov	x1, x20
    f638:	bl	cef8 <__sanitizer_set_report_fd@@Base+0x3644>
    f63c:	mov	x1, xzr
    f640:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
    f644:	tbnz	w0, #0, f670 <__sanitizer_set_report_fd@@Base+0x5dbc>
    f648:	mov	x0, x20
    f64c:	bl	6dc0 <__sanitizer_report_error_summary@@Base+0x3d8>
    f650:	add	x0, sp, #0x70
    f654:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
    f658:	mov	w0, w22
    f65c:	ldp	x20, x19, [sp, #176]
    f660:	ldp	x22, x21, [sp, #160]
    f664:	ldr	x30, [sp, #144]
    f668:	add	sp, sp, #0xc0
    f66c:	ret
    f670:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    f674:	ldr	x8, [x8, #4024]
    f678:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f67c:	add	x0, x0, #0x4fd
    f680:	mov	x2, x20
    f684:	ldr	x1, [x8]
    f688:	mov	x3, x20
    f68c:	mov	x4, x19
    f690:	bl	ffac <__sanitizer_on_print@@Base+0xac>
    f694:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f698:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f69c:	add	x0, x0, #0x53d
    f6a0:	add	x2, x2, #0x58f
    f6a4:	mov	w1, #0x3d                  	// #61
    f6a8:	mov	x3, xzr
    f6ac:	mov	x4, xzr
    f6b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f6b4:	ldr	x8, [x0]
    f6b8:	ldr	x0, [x8, #16]
    f6bc:	ret
    f6c0:	ldr	x8, [x0]
    f6c4:	ldr	w8, [x8]
    f6c8:	cmp	w8, #0xb
    f6cc:	cset	w0, eq  // eq = none
    f6d0:	ret
    f6d4:	ldr	x8, [x0]
    f6d8:	ldr	w0, [x8]
    f6dc:	ret
    f6e0:	ldr	x8, [x0]
    f6e4:	ldr	w8, [x8]
    f6e8:	sub	w8, w8, #0x4
    f6ec:	cmp	w8, #0x7
    f6f0:	b.hi	f704 <__sanitizer_set_report_fd@@Base+0x5e50>  // b.pmore
    f6f4:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    f6f8:	add	x9, x9, #0x808
    f6fc:	ldr	x0, [x9, w8, sxtw #3]
    f700:	ret
    f704:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f708:	add	x0, x0, #0x6ed
    f70c:	ret
    f710:	sub	sp, sp, #0x110
    f714:	str	x29, [sp, #208]
    f718:	stp	x30, x23, [sp, #224]
    f71c:	stp	x22, x21, [sp, #240]
    f720:	stp	x20, x19, [sp, #256]
    f724:	mov	w21, #0xffffffff            	// #-1
    f728:	cbz	x0, f824 <__sanitizer_set_report_fd@@Base+0x5f70>
    f72c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
    f730:	ldr	x8, [x8, #4056]
    f734:	ldrb	w8, [x8, #223]
    f738:	cbz	w8, f824 <__sanitizer_set_report_fd@@Base+0x5f70>
    f73c:	mov	x19, x2
    f740:	mov	x20, x1
    f744:	mov	x22, x0
    f748:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
    f74c:	cmp	x0, #0xbe
    f750:	b.cs	f840 <__sanitizer_set_report_fd@@Base+0x5f8c>  // b.hs, b.nlast
    f754:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
    f758:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f75c:	mov	x3, x0
    f760:	add	x2, x2, #0x73b
    f764:	add	x0, sp, #0x8
    f768:	mov	w1, #0xc8                  	// #200
    f76c:	mov	x4, x22
    f770:	bl	10020 <__sanitizer_on_print@@Base+0x120>
    f774:	mov	w1, #0x242                 	// #578
    f778:	add	x0, sp, #0x8
    f77c:	movk	w1, #0x8, lsl #16
    f780:	mov	w2, #0x1c0                 	// #448
    f784:	bl	cf40 <__sanitizer_set_report_fd@@Base+0x368c>
    f788:	mov	x21, x0
    f78c:	cmp	w21, #0x2
    f790:	b.gt	f7f4 <__sanitizer_set_report_fd@@Base+0x5f40>
    f794:	add	x0, sp, #0xdc
    f798:	mov	w2, #0x3                   	// #3
    f79c:	mov	w1, wzr
    f7a0:	add	x22, sp, #0xdc
    f7a4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
    f7a8:	mov	w23, #0x1                   	// #1
    f7ac:	mov	w0, w21
    f7b0:	strb	w23, [x22, w21, sxtw]
    f7b4:	bl	d040 <__sanitizer_set_report_fd@@Base+0x378c>
    f7b8:	mov	x21, x0
    f7bc:	cmp	w21, #0x3
    f7c0:	b.lt	f7ac <__sanitizer_set_report_fd@@Base+0x5ef8>  // b.tstop
    f7c4:	ldrb	w8, [sp, #220]
    f7c8:	cbz	w8, f7d4 <__sanitizer_set_report_fd@@Base+0x5f20>
    f7cc:	mov	w0, wzr
    f7d0:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    f7d4:	ldrb	w8, [sp, #221]
    f7d8:	cbz	w8, f7e4 <__sanitizer_set_report_fd@@Base+0x5f30>
    f7dc:	mov	w0, #0x1                   	// #1
    f7e0:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    f7e4:	ldrb	w8, [sp, #222]
    f7e8:	cbz	w8, f7f4 <__sanitizer_set_report_fd@@Base+0x5f40>
    f7ec:	mov	w0, #0x2                   	// #2
    f7f0:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
    f7f4:	mov	w0, w21
    f7f8:	mov	x1, x20
    f7fc:	bl	cfac <__sanitizer_set_report_fd@@Base+0x36f8>
    f800:	lsl	x8, x0, #32
    f804:	cbnz	x8, f860 <__sanitizer_set_report_fd@@Base+0x5fac>
    f808:	add	x0, sp, #0x8
    f80c:	bl	d084 <__sanitizer_set_report_fd@@Base+0x37d0>
    f810:	lsl	x8, x0, #32
    f814:	cbnz	x8, f880 <__sanitizer_set_report_fd@@Base+0x5fcc>
    f818:	ldr	w8, [x19]
    f81c:	and	w8, w8, #0xffffffdf
    f820:	str	w8, [x19]
    f824:	mov	w0, w21
    f828:	ldp	x20, x19, [sp, #256]
    f82c:	ldp	x22, x21, [sp, #240]
    f830:	ldp	x30, x23, [sp, #224]
    f834:	ldr	x29, [sp, #208]
    f838:	add	sp, sp, #0x110
    f83c:	ret
    f840:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f844:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f848:	add	x0, x0, #0x53d
    f84c:	add	x2, x2, #0x703
    f850:	mov	w1, #0x15b                 	// #347
    f854:	mov	x3, xzr
    f858:	mov	x4, xzr
    f85c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f860:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f864:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f868:	asr	x4, x8, #32
    f86c:	add	x0, x0, #0x53d
    f870:	add	x2, x2, #0x74d
    f874:	mov	w1, #0x162                 	// #354
    f878:	mov	x3, xzr
    f87c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f880:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f884:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f888:	asr	x4, x8, #32
    f88c:	add	x0, x0, #0x53d
    f890:	add	x2, x2, #0x74d
    f894:	mov	w1, #0x164                 	// #356
    f898:	mov	x3, xzr
    f89c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    f8a0:	ret
    f8a4:	sub	sp, sp, #0x70
    f8a8:	stp	x29, x30, [sp, #16]
    f8ac:	stp	x28, x27, [sp, #32]
    f8b0:	stp	x26, x25, [sp, #48]
    f8b4:	stp	x24, x23, [sp, #64]
    f8b8:	stp	x22, x21, [sp, #80]
    f8bc:	stp	x20, x19, [sp, #96]
    f8c0:	str	x0, [sp, #8]
    f8c4:	cbz	x2, fec4 <__sanitizer_set_report_fd@@Base+0x6610>
    f8c8:	cmp	w1, #0x0
    f8cc:	b.le	fed4 <__sanitizer_set_report_fd@@Base+0x6620>
    f8d0:	sub	w8, w1, #0x1
    f8d4:	adrp	x25, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f8d8:	adrp	x28, 26000 <__interceptor_sigaction@@Base+0x3a44>
    f8dc:	mov	x20, x3
    f8e0:	mov	x22, x2
    f8e4:	mov	w19, wzr
    f8e8:	mov	w23, #0x1                   	// #1
    f8ec:	mov	w24, #0xa                   	// #10
    f8f0:	add	x25, x25, #0x99d
    f8f4:	mov	w26, #0x20                  	// #32
    f8f8:	add	x28, x28, #0x7aa
    f8fc:	mov	w29, #0x10                  	// #16
    f900:	add	x21, x0, w8, sxtw
    f904:	mov	w27, #0x78                  	// #120
    f908:	b	f928 <__sanitizer_set_report_fd@@Base+0x6074>
    f90c:	ldr	w8, [x8]
    f910:	strb	w8, [x9]
    f914:	ldr	x8, [sp, #8]
    f918:	add	x8, x8, #0x1
    f91c:	str	x8, [sp, #8]
    f920:	add	w19, w19, #0x1
    f924:	add	x22, x22, #0x1
    f928:	ldrb	w8, [x22]
    f92c:	cmp	w8, #0x25
    f930:	b.eq	f94c <__sanitizer_set_report_fd@@Base+0x6098>  // b.none
    f934:	cbz	w8, fe30 <__sanitizer_set_report_fd@@Base+0x657c>
    f938:	ldr	x9, [sp, #8]
    f93c:	cmp	x9, x21
    f940:	b.cs	f920 <__sanitizer_set_report_fd@@Base+0x606c>  // b.hs, b.nlast
    f944:	strb	w8, [x9]
    f948:	b	f914 <__sanitizer_set_report_fd@@Base+0x6060>
    f94c:	mov	x10, x22
    f950:	ldrb	w9, [x10, #1]!
    f954:	add	x11, x22, #0x2
    f958:	cmp	w9, #0x2d
    f95c:	cinc	x8, x23, eq  // eq = none
    f960:	ldrb	w8, [x22, x8]
    f964:	csel	x12, x11, x10, eq  // eq = none
    f968:	sub	w11, w8, #0x30
    f96c:	cmp	w11, #0x9
    f970:	b.hi	f9a8 <__sanitizer_set_report_fd@@Base+0x60f4>  // b.pmore
    f974:	mov	w4, wzr
    f978:	mov	w13, w8
    f97c:	ldrb	w10, [x12, #1]!
    f980:	mul	w14, w4, w24
    f984:	add	w13, w14, w13, uxtb
    f988:	sub	w4, w13, #0x30
    f98c:	sub	w14, w10, #0x30
    f990:	cmp	w14, #0xa
    f994:	mov	w13, w10
    f998:	b.cc	f97c <__sanitizer_set_report_fd@@Base+0x60c8>  // b.lo, b.ul, b.last
    f99c:	cmp	w10, #0x2e
    f9a0:	b.ne	f9ec <__sanitizer_set_report_fd@@Base+0x6138>  // b.any
    f9a4:	b	f9b8 <__sanitizer_set_report_fd@@Base+0x6104>
    f9a8:	mov	w4, wzr
    f9ac:	mov	w10, w8
    f9b0:	cmp	w10, #0x2e
    f9b4:	b.ne	f9ec <__sanitizer_set_report_fd@@Base+0x6138>  // b.any
    f9b8:	ldrb	w10, [x12, #1]
    f9bc:	cmp	w10, #0x2a
    f9c0:	b.ne	f9ec <__sanitizer_set_report_fd@@Base+0x6138>  // b.any
    f9c4:	ldrsw	x10, [x20, #24]
    f9c8:	add	x12, x12, #0x2
    f9cc:	tbz	w10, #31, f9f4 <__sanitizer_set_report_fd@@Base+0x6140>
    f9d0:	add	w13, w10, #0x8
    f9d4:	cmn	w10, #0x8
    f9d8:	str	w13, [x20, #24]
    f9dc:	b.gt	f9f4 <__sanitizer_set_report_fd@@Base+0x6140>
    f9e0:	ldr	x13, [x20, #8]
    f9e4:	add	x10, x13, x10
    f9e8:	b	fa00 <__sanitizer_set_report_fd@@Base+0x614c>
    f9ec:	mov	w10, #0xffffffff            	// #-1
    f9f0:	b	fa04 <__sanitizer_set_report_fd@@Base+0x6150>
    f9f4:	ldr	x10, [x20]
    f9f8:	add	x13, x10, #0x8
    f9fc:	str	x13, [x20]
    fa00:	ldr	w10, [x10]
    fa04:	mov	x14, x12
    fa08:	ldrb	w13, [x14], #1
    fa0c:	cmp	w13, #0x7a
    fa10:	csel	x14, x12, x14, ne  // ne = any
    fa14:	b.eq	fa38 <__sanitizer_set_report_fd@@Base+0x6184>  // b.none
    fa18:	ldrb	w12, [x14]
    fa1c:	cmp	w12, #0x6c
    fa20:	b.ne	fa38 <__sanitizer_set_report_fd@@Base+0x6184>  // b.any
    fa24:	ldrb	w12, [x14, #1]
    fa28:	cmp	w12, #0x6c
    fa2c:	cset	w12, eq  // eq = none
    fa30:	lsl	x15, x12, #1
    fa34:	b	fa40 <__sanitizer_set_report_fd@@Base+0x618c>
    fa38:	mov	w12, wzr
    fa3c:	mov	x15, xzr
    fa40:	add	x22, x14, x15
    fa44:	ldrb	w15, [x22]
    fa48:	cmp	w13, #0x7a
    fa4c:	and	w16, w11, #0xff
    fa50:	cset	w14, eq  // eq = none
    fa54:	cmp	w16, #0xa
    fa58:	cset	w16, cc  // cc = lo, ul, last
    fa5c:	cmp	w9, #0x2d
    fa60:	orr	w14, w14, w12
    fa64:	b.eq	faac <__sanitizer_set_report_fd@@Base+0x61f8>  // b.none
    fa68:	tbz	w10, #31, faac <__sanitizer_set_report_fd@@Base+0x61f8>
    fa6c:	sub	w17, w15, #0x58
    fa70:	cmp	w17, #0x20
    fa74:	orr	w16, w16, w14
    fa78:	b.hi	fbec <__sanitizer_set_report_fd@@Base+0x6338>  // b.pmore
    fa7c:	adr	x15, fa8c <__sanitizer_set_report_fd@@Base+0x61d8>
    fa80:	ldrb	w18, [x28, x17]
    fa84:	add	x15, x15, x18, lsl #2
    fa88:	br	x15
    fa8c:	ldrsw	x9, [x20, #24]
    fa90:	cbz	w12, fbac <__sanitizer_set_report_fd@@Base+0x62f8>
    fa94:	tbz	w9, #31, fbd8 <__sanitizer_set_report_fd@@Base+0x6324>
    fa98:	add	w10, w9, #0x8
    fa9c:	cmn	w9, #0x8
    faa0:	str	w10, [x20, #24]
    faa4:	b.gt	fbd8 <__sanitizer_set_report_fd@@Base+0x6324>
    faa8:	b	fbc8 <__sanitizer_set_report_fd@@Base+0x6314>
    faac:	cmp	w15, #0x73
    fab0:	b.ne	fe8c <__sanitizer_set_report_fd@@Base+0x65d8>  // b.any
    fab4:	cbnz	w14, fe7c <__sanitizer_set_report_fd@@Base+0x65c8>
    fab8:	cmp	w9, #0x2d
    fabc:	b.eq	facc <__sanitizer_set_report_fd@@Base+0x6218>  // b.none
    fac0:	and	w8, w11, #0xff
    fac4:	cmp	w8, #0x9
    fac8:	b.ls	fea4 <__sanitizer_set_report_fd@@Base+0x65f0>  // b.plast
    facc:	ldrsw	x11, [x20, #24]
    fad0:	cmp	w9, #0x2d
    fad4:	cneg	w8, w4, eq  // eq = none
    fad8:	tbz	w11, #31, faf8 <__sanitizer_set_report_fd@@Base+0x6244>
    fadc:	add	w9, w11, #0x8
    fae0:	cmn	w11, #0x8
    fae4:	str	w9, [x20, #24]
    fae8:	b.gt	faf8 <__sanitizer_set_report_fd@@Base+0x6244>
    faec:	ldr	x9, [x20, #8]
    faf0:	add	x11, x9, x11
    faf4:	b	fb04 <__sanitizer_set_report_fd@@Base+0x6250>
    faf8:	ldr	x11, [x20]
    fafc:	add	x9, x11, #0x8
    fb00:	str	x9, [x20]
    fb04:	ldr	x11, [x11]
    fb08:	mov	w9, wzr
    fb0c:	cmp	x11, #0x0
    fb10:	csel	x12, x25, x11, eq  // eq = none
    fb14:	cbz	w10, fb5c <__sanitizer_set_report_fd@@Base+0x62a8>
    fb18:	ldrb	w14, [x12]
    fb1c:	cbz	w14, fb5c <__sanitizer_set_report_fd@@Base+0x62a8>
    fb20:	ldr	x13, [sp, #8]
    fb24:	mov	x11, xzr
    fb28:	add	x12, x12, #0x1
    fb2c:	cmp	x13, x21
    fb30:	b.cs	fb44 <__sanitizer_set_report_fd@@Base+0x6290>  // b.hs, b.nlast
    fb34:	strb	w14, [x13]
    fb38:	ldr	x9, [sp, #8]
    fb3c:	add	x13, x9, #0x1
    fb40:	str	x13, [sp, #8]
    fb44:	add	x9, x11, #0x1
    fb48:	cmp	w9, w10
    fb4c:	b.cs	fb5c <__sanitizer_set_report_fd@@Base+0x62a8>  // b.hs, b.nlast
    fb50:	ldrb	w14, [x12, x11]
    fb54:	mov	x11, x9
    fb58:	cbnz	w14, fb2c <__sanitizer_set_report_fd@@Base+0x6278>
    fb5c:	neg	w10, w9
    fb60:	cmp	w8, w10
    fb64:	b.ge	fba0 <__sanitizer_set_report_fd@@Base+0x62ec>  // b.tcont
    fb68:	ldr	x10, [sp, #8]
    fb6c:	neg	w8, w8
    fb70:	sub	w9, w8, w9
    fb74:	b	fb80 <__sanitizer_set_report_fd@@Base+0x62cc>
    fb78:	subs	w9, w9, #0x1
    fb7c:	b.eq	fb9c <__sanitizer_set_report_fd@@Base+0x62e8>  // b.none
    fb80:	cmp	x10, x21
    fb84:	b.cs	fb78 <__sanitizer_set_report_fd@@Base+0x62c4>  // b.hs, b.nlast
    fb88:	strb	w26, [x10]
    fb8c:	ldr	x10, [sp, #8]
    fb90:	add	x10, x10, #0x1
    fb94:	str	x10, [sp, #8]
    fb98:	b	fb78 <__sanitizer_set_report_fd@@Base+0x62c4>
    fb9c:	mov	w9, w8
    fba0:	add	w19, w9, w19
    fba4:	add	x22, x22, #0x1
    fba8:	b	f928 <__sanitizer_set_report_fd@@Base+0x6074>
    fbac:	cmp	w13, #0x7a
    fbb0:	b.ne	fd30 <__sanitizer_set_report_fd@@Base+0x647c>  // b.any
    fbb4:	tbz	w9, #31, fbd8 <__sanitizer_set_report_fd@@Base+0x6324>
    fbb8:	add	w10, w9, #0x8
    fbbc:	cmn	w9, #0x8
    fbc0:	str	w10, [x20, #24]
    fbc4:	b.gt	fbd8 <__sanitizer_set_report_fd@@Base+0x6324>
    fbc8:	ldr	x10, [x20, #8]
    fbcc:	add	x9, x10, x9
    fbd0:	ldr	x2, [x9]
    fbd4:	b	fd60 <__sanitizer_set_report_fd@@Base+0x64ac>
    fbd8:	ldr	x9, [x20]
    fbdc:	add	x10, x9, #0x8
    fbe0:	str	x10, [x20]
    fbe4:	ldr	x2, [x9]
    fbe8:	b	fd60 <__sanitizer_set_report_fd@@Base+0x64ac>
    fbec:	cmp	w15, #0x25
    fbf0:	b.ne	fe7c <__sanitizer_set_report_fd@@Base+0x65c8>  // b.any
    fbf4:	cbnz	w16, fe7c <__sanitizer_set_report_fd@@Base+0x65c8>
    fbf8:	ldr	x8, [sp, #8]
    fbfc:	cmp	x8, x21
    fc00:	b.cs	f920 <__sanitizer_set_report_fd@@Base+0x606c>  // b.hs, b.nlast
    fc04:	mov	w9, #0x25                  	// #37
    fc08:	strb	w9, [x8]
    fc0c:	b	f914 <__sanitizer_set_report_fd@@Base+0x6060>
    fc10:	ldrsw	x9, [x20, #24]
    fc14:	cbz	w12, fd8c <__sanitizer_set_report_fd@@Base+0x64d8>
    fc18:	tbz	w9, #31, fdb8 <__sanitizer_set_report_fd@@Base+0x6504>
    fc1c:	add	w10, w9, #0x8
    fc20:	cmn	w9, #0x8
    fc24:	str	w10, [x20, #24]
    fc28:	b.gt	fdb8 <__sanitizer_set_report_fd@@Base+0x6504>
    fc2c:	b	fda8 <__sanitizer_set_report_fd@@Base+0x64f4>
    fc30:	cbnz	w16, fe7c <__sanitizer_set_report_fd@@Base+0x65c8>
    fc34:	ldrsw	x8, [x20, #24]
    fc38:	tbz	w8, #31, fc9c <__sanitizer_set_report_fd@@Base+0x63e8>
    fc3c:	add	w9, w8, #0x8
    fc40:	cmn	w8, #0x8
    fc44:	str	w9, [x20, #24]
    fc48:	b.gt	fc9c <__sanitizer_set_report_fd@@Base+0x63e8>
    fc4c:	ldr	x9, [x20, #8]
    fc50:	add	x9, x9, x8
    fc54:	ldr	x8, [sp, #8]
    fc58:	ldr	x2, [x9]
    fc5c:	cmp	x8, x21
    fc60:	b.cc	fcb8 <__sanitizer_set_report_fd@@Base+0x6404>  // b.lo, b.ul, b.last
    fc64:	b	fccc <__sanitizer_set_report_fd@@Base+0x6418>
    fc68:	cbnz	w16, fe7c <__sanitizer_set_report_fd@@Base+0x65c8>
    fc6c:	ldrsw	x8, [x20, #24]
    fc70:	tbz	w8, #31, fd14 <__sanitizer_set_report_fd@@Base+0x6460>
    fc74:	add	w9, w8, #0x8
    fc78:	cmn	w8, #0x8
    fc7c:	str	w9, [x20, #24]
    fc80:	b.gt	fd14 <__sanitizer_set_report_fd@@Base+0x6460>
    fc84:	ldr	x9, [x20, #8]
    fc88:	add	x8, x9, x8
    fc8c:	ldr	x9, [sp, #8]
    fc90:	cmp	x9, x21
    fc94:	b.cs	f920 <__sanitizer_set_report_fd@@Base+0x606c>  // b.hs, b.nlast
    fc98:	b	f90c <__sanitizer_set_report_fd@@Base+0x6058>
    fc9c:	ldr	x9, [x20]
    fca0:	add	x8, x9, #0x8
    fca4:	str	x8, [x20]
    fca8:	ldr	x8, [sp, #8]
    fcac:	ldr	x2, [x9]
    fcb0:	cmp	x8, x21
    fcb4:	b.cs	fccc <__sanitizer_set_report_fd@@Base+0x6418>  // b.hs, b.nlast
    fcb8:	mov	w9, #0x30                  	// #48
    fcbc:	strb	w9, [x8]
    fcc0:	ldr	x8, [sp, #8]
    fcc4:	add	x8, x8, #0x1
    fcc8:	str	x8, [sp, #8]
    fccc:	cmp	x8, x21
    fcd0:	b.cs	fce4 <__sanitizer_set_report_fd@@Base+0x6430>  // b.hs, b.nlast
    fcd4:	strb	w27, [x8]
    fcd8:	ldr	x8, [sp, #8]
    fcdc:	add	x8, x8, #0x1
    fce0:	str	x8, [sp, #8]
    fce4:	add	x0, sp, #0x8
    fce8:	mov	w3, #0x10                  	// #16
    fcec:	mov	w4, #0xc                   	// #12
    fcf0:	mov	w5, #0x1                   	// #1
    fcf4:	mov	x1, x21
    fcf8:	mov	w6, wzr
    fcfc:	mov	w7, wzr
    fd00:	bl	10170 <__sanitizer_on_print@@Base+0x270>
    fd04:	add	w8, w19, w0
    fd08:	add	w19, w8, #0x2
    fd0c:	add	x22, x22, #0x1
    fd10:	b	f928 <__sanitizer_set_report_fd@@Base+0x6074>
    fd14:	ldr	x8, [x20]
    fd18:	add	x9, x8, #0x8
    fd1c:	str	x9, [x20]
    fd20:	ldr	x9, [sp, #8]
    fd24:	cmp	x9, x21
    fd28:	b.cs	f920 <__sanitizer_set_report_fd@@Base+0x606c>  // b.hs, b.nlast
    fd2c:	b	f90c <__sanitizer_set_report_fd@@Base+0x6058>
    fd30:	tbz	w9, #31, fd50 <__sanitizer_set_report_fd@@Base+0x649c>
    fd34:	add	w10, w9, #0x8
    fd38:	cmn	w9, #0x8
    fd3c:	str	w10, [x20, #24]
    fd40:	b.gt	fd50 <__sanitizer_set_report_fd@@Base+0x649c>
    fd44:	ldr	x10, [x20, #8]
    fd48:	add	x9, x10, x9
    fd4c:	b	fd5c <__sanitizer_set_report_fd@@Base+0x64a8>
    fd50:	ldr	x9, [x20]
    fd54:	add	x10, x9, #0x8
    fd58:	str	x10, [x20]
    fd5c:	ldr	w2, [x9]
    fd60:	ldrb	w9, [x22]
    fd64:	cmp	w8, #0x30
    fd68:	cset	w5, eq  // eq = none
    fd6c:	add	x0, sp, #0x8
    fd70:	cmp	w9, #0x58
    fd74:	cset	w7, eq  // eq = none
    fd78:	cmp	w9, #0x75
    fd7c:	csel	w3, w24, w29, eq  // eq = none
    fd80:	mov	x1, x21
    fd84:	mov	w6, wzr
    fd88:	b	fe20 <__sanitizer_set_report_fd@@Base+0x656c>
    fd8c:	cmp	w13, #0x7a
    fd90:	b.ne	fdcc <__sanitizer_set_report_fd@@Base+0x6518>  // b.any
    fd94:	tbz	w9, #31, fdb8 <__sanitizer_set_report_fd@@Base+0x6504>
    fd98:	add	w10, w9, #0x8
    fd9c:	cmn	w9, #0x8
    fda0:	str	w10, [x20, #24]
    fda4:	b.gt	fdb8 <__sanitizer_set_report_fd@@Base+0x6504>
    fda8:	ldr	x10, [x20, #8]
    fdac:	add	x9, x10, x9
    fdb0:	ldr	x9, [x9]
    fdb4:	b	fdfc <__sanitizer_set_report_fd@@Base+0x6548>
    fdb8:	ldr	x9, [x20]
    fdbc:	add	x10, x9, #0x8
    fdc0:	str	x10, [x20]
    fdc4:	ldr	x9, [x9]
    fdc8:	b	fdfc <__sanitizer_set_report_fd@@Base+0x6548>
    fdcc:	tbz	w9, #31, fdec <__sanitizer_set_report_fd@@Base+0x6538>
    fdd0:	add	w10, w9, #0x8
    fdd4:	cmn	w9, #0x8
    fdd8:	str	w10, [x20, #24]
    fddc:	b.gt	fdec <__sanitizer_set_report_fd@@Base+0x6538>
    fde0:	ldr	x10, [x20, #8]
    fde4:	add	x9, x10, x9
    fde8:	b	fdf8 <__sanitizer_set_report_fd@@Base+0x6544>
    fdec:	ldr	x9, [x20]
    fdf0:	add	x10, x9, #0x8
    fdf4:	str	x10, [x20]
    fdf8:	ldrsw	x9, [x9]
    fdfc:	cmp	w8, #0x30
    fe00:	cset	w5, eq  // eq = none
    fe04:	cmp	x9, #0x0
    fe08:	cneg	x2, x9, mi  // mi = first
    fe0c:	lsr	x6, x9, #63
    fe10:	add	x0, sp, #0x8
    fe14:	mov	w3, #0xa                   	// #10
    fe18:	mov	x1, x21
    fe1c:	mov	w7, wzr
    fe20:	bl	10170 <__sanitizer_on_print@@Base+0x270>
    fe24:	add	w19, w0, w19
    fe28:	add	x22, x22, #0x1
    fe2c:	b	f928 <__sanitizer_set_report_fd@@Base+0x6074>
    fe30:	ldr	x8, [sp, #8]
    fe34:	cmp	x8, x21
    fe38:	b.hi	fee4 <__sanitizer_set_report_fd@@Base+0x6630>  // b.pmore
    fe3c:	add	x9, x21, #0x1
    fe40:	cmp	x8, x9
    fe44:	b.cs	fe58 <__sanitizer_set_report_fd@@Base+0x65a4>  // b.hs, b.nlast
    fe48:	strb	wzr, [x8]
    fe4c:	ldr	x8, [sp, #8]
    fe50:	add	x8, x8, #0x1
    fe54:	str	x8, [sp, #8]
    fe58:	mov	w0, w19
    fe5c:	ldp	x20, x19, [sp, #96]
    fe60:	ldp	x22, x21, [sp, #80]
    fe64:	ldp	x24, x23, [sp, #64]
    fe68:	ldp	x26, x25, [sp, #48]
    fe6c:	ldp	x28, x27, [sp, #32]
    fe70:	ldp	x29, x30, [sp, #16]
    fe74:	add	sp, sp, #0x70
    fe78:	ret
    fe7c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fe80:	add	x0, x0, #0x7cb
    fe84:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    fe88:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    fe8c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fe90:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fe94:	add	x0, x0, #0x830
    fe98:	add	x2, x2, #0x883
    fe9c:	mov	w1, #0xaa                  	// #170
    fea0:	b	feb8 <__sanitizer_set_report_fd@@Base+0x6604>
    fea4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fea8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
    feac:	add	x0, x0, #0x830
    feb0:	add	x2, x2, #0x8c3
    feb4:	mov	w1, #0xc7                  	// #199
    feb8:	mov	x3, xzr
    febc:	mov	x4, xzr
    fec0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
    fec4:	adrp	x0, 25000 <__interceptor_sigaction@@Base+0x2a44>
    fec8:	add	x0, x0, #0x12e
    fecc:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    fed0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    fed4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fed8:	add	x0, x0, #0x820
    fedc:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    fee0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    fee4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
    fee8:	add	x0, x0, #0x8ec
    feec:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
    fef0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
    fef4:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
    fef8:	str	x0, [x8, #1920]
    fefc:	ret

000000000000ff00 <__sanitizer_on_print@@Base>:
    ff00:	ret
    ff04:	sub	sp, sp, #0x110
    ff08:	stp	x29, x30, [sp, #256]
    ff0c:	mov	x9, #0xffffffffffffffc8    	// #-56
    ff10:	mov	x10, sp
    ff14:	add	x11, sp, #0x88
    ff18:	movk	x9, #0xff80, lsl #32
    ff1c:	add	x12, sp, #0x110
    ff20:	add	x10, x10, #0x80
    ff24:	add	x11, x11, #0x38
    ff28:	stp	x10, x9, [sp, #240]
    ff2c:	stp	x12, x11, [sp, #224]
    ff30:	stp	q0, q1, [sp]
    ff34:	ldp	q1, q0, [sp, #224]
    ff38:	mov	x8, x0
    ff3c:	stp	x1, x2, [sp, #136]
    ff40:	add	x2, sp, #0xc0
    ff44:	mov	w0, wzr
    ff48:	mov	x1, x8
    ff4c:	stp	x3, x4, [sp, #152]
    ff50:	stp	x5, x6, [sp, #168]
    ff54:	str	x7, [sp, #184]
    ff58:	stp	q2, q3, [sp, #32]
    ff5c:	stp	q4, q5, [sp, #64]
    ff60:	stp	q6, q7, [sp, #96]
    ff64:	stp	q1, q0, [sp, #192]
    ff68:	bl	ff78 <__sanitizer_on_print@@Base+0x78>
    ff6c:	ldp	x29, x30, [sp, #256]
    ff70:	add	sp, sp, #0x110
    ff74:	ret
    ff78:	sub	sp, sp, #0x1c0
    ff7c:	stp	x29, x30, [sp, #432]
    ff80:	ldp	q1, q0, [x2]
    ff84:	mov	x8, x1
    ff88:	and	w0, w0, #0x1
    ff8c:	add	x1, sp, #0x20
    ff90:	mov	x3, sp
    ff94:	mov	x2, x8
    ff98:	stp	q1, q0, [sp]
    ff9c:	bl	10458 <__sanitizer_on_print@@Base+0x558>
    ffa0:	ldp	x29, x30, [sp, #432]
    ffa4:	add	sp, sp, #0x1c0
    ffa8:	ret
    ffac:	sub	sp, sp, #0x110
    ffb0:	stp	x29, x30, [sp, #256]
    ffb4:	mov	x9, #0xffffffffffffffc8    	// #-56
    ffb8:	mov	x10, sp
    ffbc:	add	x11, sp, #0x88
    ffc0:	movk	x9, #0xff80, lsl #32
    ffc4:	add	x12, sp, #0x110
    ffc8:	add	x10, x10, #0x80
    ffcc:	add	x11, x11, #0x38
    ffd0:	stp	x10, x9, [sp, #240]
    ffd4:	stp	x12, x11, [sp, #224]
    ffd8:	stp	q0, q1, [sp]
    ffdc:	ldp	q1, q0, [sp, #224]
    ffe0:	mov	x8, x0
    ffe4:	stp	x1, x2, [sp, #136]
    ffe8:	add	x2, sp, #0xc0
    ffec:	mov	w0, #0x1                   	// #1
    fff0:	mov	x1, x8
    fff4:	stp	x3, x4, [sp, #152]
    fff8:	stp	x5, x6, [sp, #168]
    fffc:	str	x7, [sp, #184]
   10000:	stp	q2, q3, [sp, #32]
   10004:	stp	q4, q5, [sp, #64]
   10008:	stp	q6, q7, [sp, #96]
   1000c:	stp	q1, q0, [sp, #192]
   10010:	bl	ff78 <__sanitizer_on_print@@Base+0x78>
   10014:	ldp	x29, x30, [sp, #256]
   10018:	add	sp, sp, #0x110
   1001c:	ret
   10020:	sub	sp, sp, #0x100
   10024:	mov	x8, #0xffffffffffffffd8    	// #-40
   10028:	mov	x9, sp
   1002c:	add	x10, sp, #0x88
   10030:	movk	x8, #0xff80, lsl #32
   10034:	add	x11, sp, #0x100
   10038:	add	x9, x9, #0x80
   1003c:	add	x10, x10, #0x28
   10040:	stp	x8, x30, [sp, #232]
   10044:	stp	x10, x9, [sp, #216]
   10048:	str	x11, [sp, #208]
   1004c:	stp	q1, q2, [sp, #16]
   10050:	str	q0, [sp]
   10054:	ldp	q1, q0, [sp, #208]
   10058:	stp	x3, x4, [sp, #136]
   1005c:	add	x3, sp, #0xb0
   10060:	stp	x5, x6, [sp, #152]
   10064:	str	x7, [sp, #168]
   10068:	stp	q3, q4, [sp, #48]
   1006c:	stp	q5, q6, [sp, #80]
   10070:	str	q7, [sp, #112]
   10074:	stp	q1, q0, [sp, #176]
   10078:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   1007c:	ldr	x30, [sp, #240]
   10080:	add	sp, sp, #0x100
   10084:	ret
   10088:	sub	sp, sp, #0x110
   1008c:	str	x29, [sp, #240]
   10090:	stp	x30, x19, [sp, #256]
   10094:	stp	q4, q5, [sp, #64]
   10098:	stp	q2, q3, [sp, #32]
   1009c:	stp	q0, q1, [sp]
   100a0:	stp	x6, x7, [sp, #160]
   100a4:	stp	x4, x5, [sp, #144]
   100a8:	stp	x2, x3, [sp, #128]
   100ac:	stp	q6, q7, [sp, #96]
   100b0:	ldp	x4, x3, [x0, #16]
   100b4:	cmp	x3, x4
   100b8:	b.cs	10140 <__sanitizer_on_print@@Base+0x240>  // b.hs, b.nlast
   100bc:	mov	x8, #0xffffffffffffffd0    	// #-48
   100c0:	mov	x10, sp
   100c4:	add	x11, sp, #0x80
   100c8:	movk	x8, #0xff80, lsl #32
   100cc:	add	x9, sp, #0x110
   100d0:	add	x10, x10, #0x80
   100d4:	add	x11, x11, #0x30
   100d8:	stp	x10, x8, [sp, #224]
   100dc:	stp	x9, x11, [sp, #208]
   100e0:	ldr	x8, [x0]
   100e4:	ldr	x9, [x0, #24]
   100e8:	ldr	w10, [x0, #16]
   100ec:	ldp	q0, q1, [sp, #208]
   100f0:	mov	x19, x0
   100f4:	mov	x2, x1
   100f8:	add	x0, x8, x9
   100fc:	sub	w1, w10, w9
   10100:	add	x3, sp, #0xb0
   10104:	stp	q0, q1, [sp, #176]
   10108:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   1010c:	ldr	x8, [x19]
   10110:	ldr	x9, [x19, #24]
   10114:	add	x0, x8, x9
   10118:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1011c:	ldp	x4, x8, [x19, #16]
   10120:	add	x3, x8, x0
   10124:	cmp	x3, x4
   10128:	str	x3, [x19, #24]
   1012c:	b.cs	10158 <__sanitizer_on_print@@Base+0x258>  // b.hs, b.nlast
   10130:	ldp	x30, x19, [sp, #256]
   10134:	ldr	x29, [sp, #240]
   10138:	add	sp, sp, #0x110
   1013c:	ret
   10140:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10144:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10148:	add	x0, x0, #0x830
   1014c:	add	x2, x2, #0x8fd
   10150:	mov	w1, #0x15d                 	// #349
   10154:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   10158:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1015c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10160:	add	x0, x0, #0x830
   10164:	add	x2, x2, #0x8fd
   10168:	mov	w1, #0x163                 	// #355
   1016c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   10170:	sub	sp, sp, #0x140
   10174:	str	x29, [sp, #240]
   10178:	stp	x30, x25, [sp, #256]
   1017c:	stp	x24, x23, [sp, #272]
   10180:	stp	x22, x21, [sp, #288]
   10184:	stp	x20, x19, [sp, #304]
   10188:	and	w8, w3, #0xff
   1018c:	mov	w21, w7
   10190:	mov	w22, w5
   10194:	mov	x19, x1
   10198:	cmp	w8, #0xa
   1019c:	mov	x20, x0
   101a0:	b.eq	101ac <__sanitizer_on_print@@Base+0x2ac>  // b.none
   101a4:	cmp	w8, #0x10
   101a8:	b.ne	10418 <__sanitizer_on_print@@Base+0x518>  // b.any
   101ac:	cmp	w8, #0xa
   101b0:	b.eq	101b8 <__sanitizer_on_print@@Base+0x2b8>  // b.none
   101b4:	tbnz	w6, #0, 10428 <__sanitizer_on_print@@Base+0x528>
   101b8:	cbnz	x2, 101c0 <__sanitizer_on_print@@Base+0x2c0>
   101bc:	tbnz	w6, #0, 10438 <__sanitizer_on_print@@Base+0x538>
   101c0:	and	w8, w4, #0xff
   101c4:	cmp	w8, #0x1e
   101c8:	b.cs	10448 <__sanitizer_on_print@@Base+0x548>  // b.hs, b.nlast
   101cc:	tst	w4, #0xff
   101d0:	cset	w8, ne  // ne = any
   101d4:	mov	w24, wzr
   101d8:	and	w8, w8, w6
   101dc:	eor	w23, w6, #0x1
   101e0:	tbz	w22, #0, 1020c <__sanitizer_on_print@@Base+0x30c>
   101e4:	tbnz	w23, #0, 1020c <__sanitizer_on_print@@Base+0x30c>
   101e8:	ldr	x9, [x20]
   101ec:	cmp	x9, x19
   101f0:	b.cs	10208 <__sanitizer_on_print@@Base+0x308>  // b.hs, b.nlast
   101f4:	mov	w10, #0x2d                  	// #45
   101f8:	strb	w10, [x9]
   101fc:	ldr	x9, [x20]
   10200:	add	x9, x9, #0x1
   10204:	str	x9, [x20]
   10208:	mov	w24, #0x1                   	// #1
   1020c:	mov	x9, xzr
   10210:	sbfx	w10, w8, #0, #1
   10214:	sub	w11, w4, w8
   10218:	and	x12, x3, #0xff
   1021c:	mov	w8, #0xffffffff            	// #-1
   10220:	mov	x13, sp
   10224:	cmp	x9, #0xf0
   10228:	b.eq	10408 <__sanitizer_on_print@@Base+0x508>  // b.none
   1022c:	udiv	x14, x2, x12
   10230:	msub	x15, x14, x12, x2
   10234:	cmp	x2, x12
   10238:	str	x15, [x13, x9]
   1023c:	add	x9, x9, #0x8
   10240:	add	w8, w8, #0x1
   10244:	mov	x2, x14
   10248:	b.cs	10224 <__sanitizer_on_print@@Base+0x324>  // b.hs, b.nlast
   1024c:	add	w12, w8, #0x1
   10250:	and	w25, w11, #0xff
   10254:	cmp	w25, w12
   10258:	b.ls	10284 <__sanitizer_on_print@@Base+0x384>  // b.plast
   1025c:	mov	x8, sp
   10260:	add	w10, w4, w10
   10264:	add	x0, x8, x9
   10268:	and	x8, x10, #0xff
   1026c:	lsl	x8, x8, #3
   10270:	sub	x2, x8, x9
   10274:	mov	w1, wzr
   10278:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1027c:	mov	w12, w25
   10280:	b	1028c <__sanitizer_on_print@@Base+0x38c>
   10284:	cmp	w12, #0x1
   10288:	b.lt	10344 <__sanitizer_on_print@@Base+0x444>  // b.tstop
   1028c:	mov	w8, w12
   10290:	add	w0, w24, w12
   10294:	tbz	w22, #0, 102e4 <__sanitizer_on_print@@Base+0x3e4>
   10298:	mov	x9, sp
   1029c:	sub	x9, x9, #0x8
   102a0:	mov	w10, #0x30                  	// #48
   102a4:	b	102b8 <__sanitizer_on_print@@Base+0x3b8>
   102a8:	add	x11, x8, #0x1
   102ac:	cmp	x11, #0x1
   102b0:	add	w24, w24, #0x1
   102b4:	b.le	10354 <__sanitizer_on_print@@Base+0x454>
   102b8:	ldr	x11, [x9, x8, lsl #3]
   102bc:	cbnz	x11, 10340 <__sanitizer_on_print@@Base+0x440>
   102c0:	ldr	x11, [x20]
   102c4:	sub	x8, x8, #0x1
   102c8:	cmp	x11, x19
   102cc:	b.cs	102a8 <__sanitizer_on_print@@Base+0x3a8>  // b.hs, b.nlast
   102d0:	strb	w10, [x11]
   102d4:	ldr	x11, [x20]
   102d8:	add	x11, x11, #0x1
   102dc:	str	x11, [x20]
   102e0:	b	102a8 <__sanitizer_on_print@@Base+0x3a8>
   102e4:	mov	x10, sp
   102e8:	mov	w9, #0x20                  	// #32
   102ec:	sub	x10, x10, #0x8
   102f0:	mov	w11, #0x30                  	// #48
   102f4:	b	1030c <__sanitizer_on_print@@Base+0x40c>
   102f8:	add	x8, x12, #0x1
   102fc:	cmp	x8, #0x1
   10300:	add	w24, w24, #0x1
   10304:	mov	x8, x12
   10308:	b.le	10354 <__sanitizer_on_print@@Base+0x454>
   1030c:	ldr	x12, [x10, x8, lsl #3]
   10310:	cbnz	x12, 10340 <__sanitizer_on_print@@Base+0x440>
   10314:	ldr	x13, [x20]
   10318:	sub	x12, x8, #0x1
   1031c:	cmp	x13, x19
   10320:	b.cs	102f8 <__sanitizer_on_print@@Base+0x3f8>  // b.hs, b.nlast
   10324:	cmp	x8, #0x1
   10328:	csel	w8, w11, w9, eq  // eq = none
   1032c:	strb	w8, [x13]
   10330:	ldr	x8, [x20]
   10334:	add	x8, x8, #0x1
   10338:	str	x8, [x20]
   1033c:	b	102f8 <__sanitizer_on_print@@Base+0x3f8>
   10340:	sub	w8, w8, #0x1
   10344:	mov	w0, w24
   10348:	orr	w9, w23, w22
   1034c:	tbz	w9, #0, 10360 <__sanitizer_on_print@@Base+0x460>
   10350:	b	10384 <__sanitizer_on_print@@Base+0x484>
   10354:	mov	w8, #0xffffffff            	// #-1
   10358:	orr	w9, w23, w22
   1035c:	tbnz	w9, #0, 10384 <__sanitizer_on_print@@Base+0x484>
   10360:	ldr	x9, [x20]
   10364:	cmp	x9, x19
   10368:	b.cs	10380 <__sanitizer_on_print@@Base+0x480>  // b.hs, b.nlast
   1036c:	mov	w10, #0x2d                  	// #45
   10370:	strb	w10, [x9]
   10374:	ldr	x9, [x20]
   10378:	add	x9, x9, #0x1
   1037c:	str	x9, [x20]
   10380:	add	w0, w0, #0x1
   10384:	tbnz	w8, #31, 103ec <__sanitizer_on_print@@Base+0x4ec>
   10388:	tst	w21, #0x1
   1038c:	mov	w10, #0x57                  	// #87
   10390:	mov	w11, #0x37                  	// #55
   10394:	mov	w8, w8
   10398:	mov	x9, sp
   1039c:	csel	w10, w11, w10, ne  // ne = any
   103a0:	mov	w11, #0x30                  	// #48
   103a4:	b	103b8 <__sanitizer_on_print@@Base+0x4b8>
   103a8:	cmp	x8, #0x0
   103ac:	sub	x8, x8, #0x1
   103b0:	add	w0, w0, #0x1
   103b4:	b.le	103ec <__sanitizer_on_print@@Base+0x4ec>
   103b8:	ldr	x12, [x20]
   103bc:	cmp	x12, x19
   103c0:	b.cs	103a8 <__sanitizer_on_print@@Base+0x4a8>  // b.hs, b.nlast
   103c4:	ldr	x13, [x9, x8, lsl #3]
   103c8:	and	w14, w13, #0xfe
   103cc:	cmp	w14, #0xa
   103d0:	csel	w14, w11, w10, cc  // cc = lo, ul, last
   103d4:	add	w13, w14, w13
   103d8:	strb	w13, [x12]
   103dc:	ldr	x12, [x20]
   103e0:	add	x12, x12, #0x1
   103e4:	str	x12, [x20]
   103e8:	b	103a8 <__sanitizer_on_print@@Base+0x4a8>
   103ec:	ldp	x20, x19, [sp, #304]
   103f0:	ldp	x22, x21, [sp, #288]
   103f4:	ldp	x24, x23, [sp, #272]
   103f8:	ldp	x30, x25, [sp, #256]
   103fc:	ldr	x29, [sp, #240]
   10400:	add	sp, sp, #0x140
   10404:	ret
   10408:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1040c:	add	x0, x0, #0x980
   10410:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   10414:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   10418:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1041c:	add	x0, x0, #0x916
   10420:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   10424:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   10428:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1042c:	add	x0, x0, #0x92f
   10430:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   10434:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   10438:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1043c:	add	x0, x0, #0x947
   10440:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   10444:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   10448:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1044c:	add	x0, x0, #0x963
   10450:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   10454:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   10458:	sub	sp, sp, #0x80
   1045c:	stp	x30, x25, [sp, #64]
   10460:	stp	x24, x23, [sp, #80]
   10464:	stp	x22, x21, [sp, #96]
   10468:	stp	x20, x19, [sp, #112]
   1046c:	ldp	q1, q0, [x3]
   10470:	mov	x21, x3
   10474:	mov	x20, x2
   10478:	mov	x19, x1
   1047c:	stp	q1, q0, [sp, #32]
   10480:	tbz	w0, #0, 105e4 <__sanitizer_on_print@@Base+0x6e4>
   10484:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   10488:	mov	x22, x0
   1048c:	bl	6f58 <__sanitizer_report_error_summary@@Base+0x570>
   10490:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   10494:	ldr	x24, [x24, #4056]
   10498:	mov	x3, x0
   1049c:	mov	w0, wzr
   104a0:	cbz	x3, 104c8 <__sanitizer_on_print@@Base+0x5c8>
   104a4:	ldrb	w8, [x24, #48]
   104a8:	cbz	w8, 104c8 <__sanitizer_on_print@@Base+0x5c8>
   104ac:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   104b0:	add	x2, x2, #0x9ab
   104b4:	mov	w1, #0x190                 	// #400
   104b8:	mov	x0, x19
   104bc:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   104c0:	cmp	w0, #0x18f
   104c4:	b.gt	10528 <__sanitizer_on_print@@Base+0x628>
   104c8:	sxtw	x25, w0
   104cc:	mov	w23, #0x190                 	// #400
   104d0:	add	x8, x19, x25
   104d4:	sub	w9, w23, w0
   104d8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   104dc:	sxtw	x1, w9
   104e0:	add	x2, x2, #0x9d0
   104e4:	mov	x0, x8
   104e8:	mov	w3, w22
   104ec:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   104f0:	add	x22, x25, w0, sxtw
   104f4:	cmp	w22, #0x18f
   104f8:	b.gt	10528 <__sanitizer_on_print@@Base+0x628>
   104fc:	ldp	q1, q0, [x21]
   10500:	add	x0, x19, x22
   10504:	sub	w1, w23, w22
   10508:	mov	x3, sp
   1050c:	mov	x2, x20
   10510:	stp	q1, q0, [sp]
   10514:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   10518:	add	w8, w0, w22
   1051c:	cmp	w8, #0x190
   10520:	mov	x22, x19
   10524:	b.lt	10654 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   10528:	ldp	q1, q0, [sp, #32]
   1052c:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10530:	add	x1, x1, #0x9a4
   10534:	mov	w0, #0x4000                	// #16384
   10538:	mov	w2, wzr
   1053c:	stp	q1, q0, [x21]
   10540:	mov	w25, #0x4000                	// #16384
   10544:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   10548:	mov	x22, x0
   1054c:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   10550:	mov	x23, x0
   10554:	bl	6f58 <__sanitizer_report_error_summary@@Base+0x570>
   10558:	mov	x3, x0
   1055c:	mov	w0, wzr
   10560:	cbz	x3, 10588 <__sanitizer_on_print@@Base+0x688>
   10564:	ldrb	w8, [x24, #48]
   10568:	cbz	w8, 10588 <__sanitizer_on_print@@Base+0x688>
   1056c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10570:	add	x2, x2, #0x9ab
   10574:	mov	w1, #0x4000                	// #16384
   10578:	mov	x0, x22
   1057c:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   10580:	cmp	w0, #0x4, lsl #12
   10584:	b.ge	106b4 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   10588:	sxtw	x24, w0
   1058c:	sub	w8, w25, w0
   10590:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10594:	add	x0, x22, x24
   10598:	sxtw	x1, w8
   1059c:	add	x2, x2, #0x9d0
   105a0:	mov	w3, w23
   105a4:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   105a8:	add	x24, x24, w0, sxtw
   105ac:	cmp	w24, #0x4, lsl #12
   105b0:	b.ge	106b4 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   105b4:	ldp	q0, q1, [x21]
   105b8:	mov	w23, #0x4000                	// #16384
   105bc:	add	x0, x22, x24
   105c0:	sub	w1, w23, w24
   105c4:	mov	x3, sp
   105c8:	mov	x2, x20
   105cc:	stp	q0, q1, [sp]
   105d0:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   105d4:	add	w8, w0, w24
   105d8:	cmp	w8, #0x4, lsl #12
   105dc:	b.lt	10654 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   105e0:	b	106b4 <__sanitizer_on_print@@Base+0x7b4>
   105e4:	ldp	q1, q0, [x21]
   105e8:	mov	x3, sp
   105ec:	mov	w1, #0x190                 	// #400
   105f0:	mov	x0, x19
   105f4:	mov	x2, x20
   105f8:	stp	q1, q0, [sp]
   105fc:	mov	w23, #0x190                 	// #400
   10600:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   10604:	cmp	w0, #0x190
   10608:	mov	x22, x19
   1060c:	b.lt	10654 <__sanitizer_on_print@@Base+0x754>  // b.tstop
   10610:	ldp	q1, q0, [sp, #32]
   10614:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10618:	add	x1, x1, #0x9a4
   1061c:	mov	w0, #0x4000                	// #16384
   10620:	mov	w2, wzr
   10624:	stp	q1, q0, [x21]
   10628:	mov	w23, #0x4000                	// #16384
   1062c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   10630:	ldp	q0, q1, [x21]
   10634:	mov	x3, sp
   10638:	mov	w1, #0x4000                	// #16384
   1063c:	mov	x2, x20
   10640:	mov	x22, x0
   10644:	stp	q0, q1, [sp]
   10648:	bl	f8a4 <__sanitizer_set_report_fd@@Base+0x5ff0>
   1064c:	cmp	w0, #0x4, lsl #12
   10650:	b.ge	106b4 <__sanitizer_on_print@@Base+0x7b4>  // b.tcont
   10654:	mov	x0, x22
   10658:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1065c:	mov	x0, x22
   10660:	bl	69fc <__sanitizer_report_error_summary@@Base+0x14>
   10664:	mov	x0, x22
   10668:	bl	4600 <__sanitizer_on_print@plt>
   1066c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10670:	ldr	x8, [x8, #1920]
   10674:	cbz	x8, 10680 <__sanitizer_on_print@@Base+0x780>
   10678:	mov	x0, x22
   1067c:	blr	x8
   10680:	mov	x0, x22
   10684:	bl	1449c <__sanitizer_sandbox_on_notify@@Base+0x96c>
   10688:	cmp	x22, x19
   1068c:	b.eq	1069c <__sanitizer_on_print@@Base+0x79c>  // b.none
   10690:	mov	x0, x22
   10694:	mov	x1, x23
   10698:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1069c:	ldp	x20, x19, [sp, #112]
   106a0:	ldp	x22, x21, [sp, #96]
   106a4:	ldp	x24, x23, [sp, #80]
   106a8:	ldp	x30, x25, [sp, #64]
   106ac:	add	sp, sp, #0x80
   106b0:	ret
   106b4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   106b8:	add	x0, x0, #0x9b0
   106bc:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   106c0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   106c4:	sub	w8, w0, #0x30
   106c8:	and	w8, w8, #0xff
   106cc:	cmp	w8, #0x9
   106d0:	and	w8, w0, #0xff
   106d4:	b.hi	106e8 <__sanitizer_on_print@@Base+0x7e8>  // b.pmore
   106d8:	sub	w8, w8, #0x30
   106dc:	cmp	w8, #0xa
   106e0:	cset	w0, cc  // cc = lo, ul, last
   106e4:	ret
   106e8:	sub	w9, w0, #0x61
   106ec:	and	w9, w9, #0xff
   106f0:	cmp	w9, #0x5
   106f4:	b.hi	10708 <__sanitizer_on_print@@Base+0x808>  // b.pmore
   106f8:	sub	w8, w8, #0x57
   106fc:	cmp	w8, #0xa
   10700:	cset	w0, cc  // cc = lo, ul, last
   10704:	ret
   10708:	sub	w9, w0, #0x41
   1070c:	and	w9, w9, #0xff
   10710:	sub	w8, w8, #0x37
   10714:	cmp	w9, #0x6
   10718:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
   1071c:	cmp	w8, #0xa
   10720:	cset	w0, cc  // cc = lo, ul, last
   10724:	ret
   10728:	mov	x8, x0
   1072c:	ldr	x9, [x8]
   10730:	mov	x0, xzr
   10734:	mov	w10, #0xa                   	// #10
   10738:	add	x9, x9, #0x1
   1073c:	ldurb	w12, [x9, #-1]
   10740:	sub	w11, w12, #0x30
   10744:	cmp	w11, #0x9
   10748:	b.ls	1075c <__sanitizer_on_print@@Base+0x85c>  // b.plast
   1074c:	sub	w11, w12, #0x61
   10750:	cmp	w11, #0x5
   10754:	b.hi	10784 <__sanitizer_on_print@@Base+0x884>  // b.pmore
   10758:	sub	w11, w12, #0x57
   1075c:	cmp	w11, #0x9
   10760:	b.hi	1079c <__sanitizer_on_print@@Base+0x89c>  // b.pmore
   10764:	madd	x0, x0, x10, x11
   10768:	str	x9, [x8]
   1076c:	add	x9, x9, #0x1
   10770:	ldurb	w12, [x9, #-1]
   10774:	sub	w11, w12, #0x30
   10778:	cmp	w11, #0x9
   1077c:	b.hi	1074c <__sanitizer_on_print@@Base+0x84c>  // b.pmore
   10780:	b	1075c <__sanitizer_on_print@@Base+0x85c>
   10784:	sub	w11, w12, #0x41
   10788:	cmp	w11, #0x5
   1078c:	b.hi	1079c <__sanitizer_on_print@@Base+0x89c>  // b.pmore
   10790:	sub	w11, w12, #0x37
   10794:	cmp	w11, #0x9
   10798:	b.ls	10764 <__sanitizer_on_print@@Base+0x864>  // b.plast
   1079c:	ret
   107a0:	sub	w8, w0, #0x30
   107a4:	and	w8, w8, #0xff
   107a8:	cmp	w8, #0x9
   107ac:	and	w8, w0, #0xff
   107b0:	b.hi	107c4 <__sanitizer_on_print@@Base+0x8c4>  // b.pmore
   107b4:	sub	w8, w8, #0x30
   107b8:	cmp	w8, #0x10
   107bc:	cset	w0, cc  // cc = lo, ul, last
   107c0:	ret
   107c4:	sub	w9, w0, #0x61
   107c8:	and	w9, w9, #0xff
   107cc:	cmp	w9, #0x5
   107d0:	b.hi	107e4 <__sanitizer_on_print@@Base+0x8e4>  // b.pmore
   107d4:	sub	w8, w8, #0x57
   107d8:	cmp	w8, #0x10
   107dc:	cset	w0, cc  // cc = lo, ul, last
   107e0:	ret
   107e4:	sub	w9, w0, #0x41
   107e8:	and	w9, w9, #0xff
   107ec:	sub	w8, w8, #0x37
   107f0:	cmp	w9, #0x6
   107f4:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
   107f8:	cmp	w8, #0x10
   107fc:	cset	w0, cc  // cc = lo, ul, last
   10800:	ret
   10804:	mov	x8, x0
   10808:	ldr	x9, [x8]
   1080c:	mov	x0, xzr
   10810:	add	x9, x9, #0x1
   10814:	ldurb	w11, [x9, #-1]
   10818:	sub	w10, w11, #0x30
   1081c:	cmp	w10, #0x9
   10820:	b.ls	10834 <__sanitizer_on_print@@Base+0x934>  // b.plast
   10824:	sub	w10, w11, #0x61
   10828:	cmp	w10, #0x5
   1082c:	b.hi	10848 <__sanitizer_on_print@@Base+0x948>  // b.pmore
   10830:	sub	w10, w11, #0x57
   10834:	cmp	w10, #0xf
   10838:	b.hi	10860 <__sanitizer_on_print@@Base+0x960>  // b.pmore
   1083c:	add	x0, x10, x0, lsl #4
   10840:	str	x9, [x8]
   10844:	b	10810 <__sanitizer_on_print@@Base+0x910>
   10848:	sub	w10, w11, #0x41
   1084c:	cmp	w10, #0x5
   10850:	b.hi	10860 <__sanitizer_on_print@@Base+0x960>  // b.pmore
   10854:	sub	w10, w11, #0x37
   10858:	cmp	w10, #0xf
   1085c:	b.ls	1083c <__sanitizer_on_print@@Base+0x93c>  // b.plast
   10860:	ret
   10864:	str	x30, [sp, #-16]!
   10868:	ldr	x9, [x0, #72]
   1086c:	cbnz	x9, 10894 <__sanitizer_on_print@@Base+0x994>
   10870:	mov	x8, x0
   10874:	ldr	x9, [x8, #40]
   10878:	mov	x0, x1
   1087c:	ldp	x1, x2, [x8]
   10880:	mov	x5, xzr
   10884:	ubfx	x3, x9, #2, #1
   10888:	ubfx	x4, x9, #1, #1
   1088c:	ldr	x30, [sp], #16
   10890:	b	6c6c <__sanitizer_report_error_summary@@Base+0x284>
   10894:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10898:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1089c:	add	x0, x0, #0x9d7
   108a0:	add	x2, x2, #0xa33
   108a4:	mov	w1, #0x44                  	// #68
   108a8:	mov	x3, xzr
   108ac:	mov	x4, xzr
   108b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   108b4:	sub	sp, sp, #0x40
   108b8:	str	x30, [sp, #32]
   108bc:	stp	x20, x19, [sp, #48]
   108c0:	mov	x19, x0
   108c4:	tbz	w1, #0, 1099c <__sanitizer_on_print@@Base+0xa9c>
   108c8:	add	x0, sp, #0x8
   108cc:	bl	11110 <__sanitizer_on_print@@Base+0x1210>
   108d0:	ldr	x8, [sp, #16]
   108d4:	cbz	x8, 10930 <__sanitizer_on_print@@Base+0xa30>
   108d8:	adrp	x20, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   108dc:	add	x20, x20, #0x788
   108e0:	mov	w8, #0x1                   	// #1
   108e4:	ldaxrb	w9, [x20]
   108e8:	stlxrb	w10, w8, [x20]
   108ec:	cbnz	w10, 108e4 <__sanitizer_on_print@@Base+0x9e4>
   108f0:	cbz	w9, 10900 <__sanitizer_on_print@@Base+0xa00>
   108f4:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   108f8:	add	x0, x0, #0x788
   108fc:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   10900:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10904:	ldr	x1, [x8, #1944]
   10908:	cbz	x1, 10918 <__sanitizer_on_print@@Base+0xa18>
   1090c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10910:	ldr	x0, [x8, #1936]
   10914:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   10918:	ldur	q0, [sp, #8]
   1091c:	ldr	x8, [sp, #24]
   10920:	stur	q0, [x20, #8]
   10924:	str	x8, [x20, #24]
   10928:	dmb	ish
   1092c:	strb	wzr, [x20]
   10930:	mov	x0, x19
   10934:	bl	11110 <__sanitizer_on_print@@Base+0x1210>
   10938:	ldr	x8, [x19, #8]
   1093c:	cbnz	x8, 109a4 <__sanitizer_on_print@@Base+0xaa4>
   10940:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10944:	add	x8, x8, #0x788
   10948:	mov	w9, #0x1                   	// #1
   1094c:	ldaxrb	w10, [x8]
   10950:	stlxrb	w11, w9, [x8]
   10954:	cbnz	w11, 1094c <__sanitizer_on_print@@Base+0xa4c>
   10958:	cbz	w10, 10968 <__sanitizer_on_print@@Base+0xa68>
   1095c:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10960:	add	x0, x0, #0x788
   10964:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   10968:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1096c:	ldr	x8, [x8, #1936]
   10970:	cbz	x8, 1098c <__sanitizer_on_print@@Base+0xa8c>
   10974:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10978:	add	x8, x8, #0x790
   1097c:	ldr	x9, [x8, #16]
   10980:	ldr	q0, [x8]
   10984:	str	x9, [x19, #16]
   10988:	str	q0, [x19]
   1098c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10990:	dmb	ish
   10994:	strb	wzr, [x8, #1928]
   10998:	b	109a4 <__sanitizer_on_print@@Base+0xaa4>
   1099c:	mov	x0, x19
   109a0:	bl	11110 <__sanitizer_on_print@@Base+0x1210>
   109a4:	ldr	x8, [x19]
   109a8:	ldr	x30, [sp, #32]
   109ac:	str	x8, [x19, #24]
   109b0:	ldp	x20, x19, [sp, #48]
   109b4:	add	sp, sp, #0x40
   109b8:	ret
   109bc:	sub	sp, sp, #0x30
   109c0:	stp	x30, x19, [sp, #32]
   109c4:	add	x0, sp, #0x8
   109c8:	bl	11110 <__sanitizer_on_print@@Base+0x1210>
   109cc:	ldr	x8, [sp, #16]
   109d0:	cbz	x8, 10a2c <__sanitizer_on_print@@Base+0xb2c>
   109d4:	adrp	x19, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   109d8:	add	x19, x19, #0x788
   109dc:	mov	w8, #0x1                   	// #1
   109e0:	ldaxrb	w9, [x19]
   109e4:	stlxrb	w10, w8, [x19]
   109e8:	cbnz	w10, 109e0 <__sanitizer_on_print@@Base+0xae0>
   109ec:	cbz	w9, 109fc <__sanitizer_on_print@@Base+0xafc>
   109f0:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   109f4:	add	x0, x0, #0x788
   109f8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   109fc:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a00:	ldr	x1, [x8, #1944]
   10a04:	cbz	x1, 10a14 <__sanitizer_on_print@@Base+0xb14>
   10a08:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a0c:	ldr	x0, [x8, #1936]
   10a10:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   10a14:	ldur	q0, [sp, #8]
   10a18:	ldr	x8, [sp, #24]
   10a1c:	stur	q0, [x19, #8]
   10a20:	str	x8, [x19, #24]
   10a24:	dmb	ish
   10a28:	strb	wzr, [x19]
   10a2c:	ldp	x30, x19, [sp, #32]
   10a30:	add	sp, sp, #0x30
   10a34:	ret
   10a38:	stp	x30, x19, [sp, #-16]!
   10a3c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a40:	mov	x19, x0
   10a44:	add	x8, x8, #0x788
   10a48:	mov	w9, #0x1                   	// #1
   10a4c:	ldaxrb	w10, [x8]
   10a50:	stlxrb	w11, w9, [x8]
   10a54:	cbnz	w11, 10a4c <__sanitizer_on_print@@Base+0xb4c>
   10a58:	cbz	w10, 10a68 <__sanitizer_on_print@@Base+0xb68>
   10a5c:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a60:	add	x0, x0, #0x788
   10a64:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   10a68:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a6c:	ldr	x8, [x8, #1936]
   10a70:	cbz	x8, 10a8c <__sanitizer_on_print@@Base+0xb8c>
   10a74:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a78:	add	x8, x8, #0x790
   10a7c:	ldr	x9, [x8, #16]
   10a80:	ldr	q0, [x8]
   10a84:	str	x9, [x19, #16]
   10a88:	str	q0, [x19]
   10a8c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10a90:	dmb	ish
   10a94:	strb	wzr, [x8, #1928]
   10a98:	ldp	x30, x19, [sp], #16
   10a9c:	ret
   10aa0:	ldr	x8, [x0]
   10aa4:	str	x8, [x0, #24]
   10aa8:	ret
   10aac:	ldr	x8, [x0, #24]
   10ab0:	cmp	x8, #0x0
   10ab4:	cset	w0, eq  // eq = none
   10ab8:	ret
   10abc:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   10ac0:	mov	x8, x0
   10ac4:	ldr	x0, [x0]
   10ac8:	ldr	x9, [x9, #1936]
   10acc:	cmp	x0, x9
   10ad0:	b.eq	10adc <__sanitizer_on_print@@Base+0xbdc>  // b.none
   10ad4:	ldr	x1, [x8, #8]
   10ad8:	b	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   10adc:	ret
   10ae0:	sub	sp, sp, #0x100
   10ae4:	str	x30, [sp, #192]
   10ae8:	stp	x24, x23, [sp, #208]
   10aec:	stp	x22, x21, [sp, #224]
   10af0:	stp	x20, x19, [sp, #240]
   10af4:	ldr	x8, [x0]
   10af8:	mov	x19, x1
   10afc:	mov	x20, x0
   10b00:	mov	w1, #0x1000                	// #4096
   10b04:	str	x8, [x0, #24]
   10b08:	add	x0, sp, #0xa0
   10b0c:	stp	xzr, xzr, [sp, #168]
   10b10:	str	xzr, [sp, #160]
   10b14:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   10b18:	ldr	x8, [sp, #176]
   10b1c:	cmp	x8, #0xfff
   10b20:	b.hi	10b58 <__sanitizer_on_print@@Base+0xc58>  // b.pmore
   10b24:	ldr	x9, [sp, #168]
   10b28:	cmp	x9, #0xfff
   10b2c:	b.hi	10b40 <__sanitizer_on_print@@Base+0xc40>  // b.pmore
   10b30:	add	x0, sp, #0xa0
   10b34:	mov	w1, #0x1000                	// #4096
   10b38:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   10b3c:	ldr	x8, [sp, #176]
   10b40:	ldr	x9, [sp, #160]
   10b44:	mov	w10, #0x1000                	// #4096
   10b48:	sub	x2, x10, x8
   10b4c:	mov	w1, wzr
   10b50:	add	x0, x9, x8
   10b54:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   10b58:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
   10b5c:	ldr	q0, [x8, #3584]
   10b60:	ldr	x8, [sp, #160]
   10b64:	add	x1, sp, #0x50
   10b68:	mov	x0, x20
   10b6c:	str	q0, [sp, #176]
   10b70:	strb	wzr, [x8]
   10b74:	ldr	x8, [sp, #160]
   10b78:	ldr	x9, [sp, #176]
   10b7c:	str	xzr, [sp, #152]
   10b80:	stp	x8, x9, [sp, #104]
   10b84:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   10b88:	tbz	w0, #0, 10c44 <__sanitizer_on_print@@Base+0xd44>
   10b8c:	add	x8, sp, #0x8
   10b90:	mov	x24, xzr
   10b94:	add	x21, x8, #0x1c
   10b98:	b	10bb0 <__sanitizer_on_print@@Base+0xcb0>
   10b9c:	add	x1, sp, #0x50
   10ba0:	mov	x0, x20
   10ba4:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   10ba8:	sub	x24, x24, #0x1
   10bac:	tbz	w0, #0, 10c44 <__sanitizer_on_print@@Base+0xd44>
   10bb0:	ldr	x22, [sp, #104]
   10bb4:	ldrb	w8, [x22]
   10bb8:	cbz	w8, 10b9c <__sanitizer_on_print@@Base+0xc9c>
   10bbc:	ldr	x8, [sp, #80]
   10bc0:	ldr	x9, [sp, #96]
   10bc4:	cmp	x24, #0x0
   10bc8:	movi	v0.2d, #0x0
   10bcc:	csel	x8, xzr, x8, eq  // eq = none
   10bd0:	mov	w2, #0x10                  	// #16
   10bd4:	mov	x0, x21
   10bd8:	mov	w1, wzr
   10bdc:	str	xzr, [sp, #8]
   10be0:	stur	q0, [sp, #16]
   10be4:	str	wzr, [sp, #32]
   10be8:	sub	x23, x8, x9
   10bec:	strb	wzr, [sp, #52]
   10bf0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   10bf4:	movi	v0.2d, #0x0
   10bf8:	add	x0, sp, #0x8
   10bfc:	mov	x1, x22
   10c00:	mov	x2, x23
   10c04:	stur	q0, [sp, #64]
   10c08:	str	xzr, [sp, #56]
   10c0c:	bl	6aa0 <__sanitizer_report_error_summary@@Base+0xb8>
   10c10:	ldr	x8, [sp, #152]
   10c14:	cbnz	x8, 10c64 <__sanitizer_on_print@@Base+0xd64>
   10c18:	ldr	x8, [sp, #120]
   10c1c:	ldp	x1, x2, [sp, #80]
   10c20:	add	x0, sp, #0x8
   10c24:	mov	x5, xzr
   10c28:	ubfx	x3, x8, #2, #1
   10c2c:	ubfx	x4, x8, #1, #1
   10c30:	bl	6c6c <__sanitizer_report_error_summary@@Base+0x284>
   10c34:	add	x1, sp, #0x8
   10c38:	mov	x0, x19
   10c3c:	bl	10f04 <__sanitizer_on_print@@Base+0x1004>
   10c40:	b	10b9c <__sanitizer_on_print@@Base+0xc9c>
   10c44:	ldp	x0, x1, [sp, #160]
   10c48:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   10c4c:	ldp	x20, x19, [sp, #240]
   10c50:	ldp	x22, x21, [sp, #224]
   10c54:	ldp	x24, x23, [sp, #208]
   10c58:	ldr	x30, [sp, #192]
   10c5c:	add	sp, sp, #0x100
   10c60:	ret
   10c64:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10c68:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10c6c:	add	x0, x0, #0x9d7
   10c70:	add	x2, x2, #0xa33
   10c74:	mov	w1, #0x44                  	// #68
   10c78:	mov	x3, xzr
   10c7c:	mov	x4, xzr
   10c80:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   10c84:	sub	sp, sp, #0x60
   10c88:	stp	x30, xzr, [sp, #16]
   10c8c:	stp	x26, x25, [sp, #32]
   10c90:	stp	x24, x23, [sp, #48]
   10c94:	stp	x22, x21, [sp, #64]
   10c98:	stp	x20, x19, [sp, #80]
   10c9c:	mov	x21, x0
   10ca0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10ca4:	mov	x19, x2
   10ca8:	mov	x20, x1
   10cac:	add	x0, x0, #0xa45
   10cb0:	add	x1, sp, #0x18
   10cb4:	add	x2, sp, #0x8
   10cb8:	mov	x3, sp
   10cbc:	mov	w4, #0x4000000             	// #67108864
   10cc0:	mov	x5, xzr
   10cc4:	stp	xzr, xzr, [sp]
   10cc8:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
   10ccc:	tbz	w0, #0, 10ee8 <__sanitizer_on_print@@Base+0xfe8>
   10cd0:	ldr	x8, [sp]
   10cd4:	ldr	x22, [sp, #24]
   10cd8:	cmp	x8, #0x1
   10cdc:	b.lt	10edc <__sanitizer_on_print@@Base+0xfdc>  // b.tstop
   10ce0:	adrp	x24, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10ce4:	mov	w26, wzr
   10ce8:	mov	x23, xzr
   10cec:	add	x24, x24, #0xa56
   10cf0:	mov	w25, #0xa                   	// #10
   10cf4:	ldrb	w9, [x22]
   10cf8:	sub	w8, w9, #0x30
   10cfc:	cmp	w8, #0x9
   10d00:	b.ls	10d14 <__sanitizer_on_print@@Base+0xe14>  // b.plast
   10d04:	sub	w8, w9, #0x61
   10d08:	cmp	w8, #0x5
   10d0c:	b.hi	10dc0 <__sanitizer_on_print@@Base+0xec0>  // b.pmore
   10d10:	sub	w8, w9, #0x57
   10d14:	cmp	w8, #0xf
   10d18:	b.hi	10dd8 <__sanitizer_on_print@@Base+0xed8>  // b.pmore
   10d1c:	mov	x23, xzr
   10d20:	add	x8, x22, #0x1
   10d24:	sub	w10, w9, #0x30
   10d28:	and	w10, w10, #0xff
   10d2c:	cmp	w10, #0x9
   10d30:	and	w9, w9, #0xff
   10d34:	b.hi	10d48 <__sanitizer_on_print@@Base+0xe48>  // b.pmore
   10d38:	sub	w10, w9, #0x30
   10d3c:	cmp	w10, #0xf
   10d40:	b.ls	10d7c <__sanitizer_on_print@@Base+0xe7c>  // b.plast
   10d44:	b	10d8c <__sanitizer_on_print@@Base+0xe8c>
   10d48:	sub	w10, w9, #0x61
   10d4c:	cmp	w10, #0x5
   10d50:	b.hi	10d64 <__sanitizer_on_print@@Base+0xe64>  // b.pmore
   10d54:	sub	w10, w9, #0x57
   10d58:	cmp	w10, #0xf
   10d5c:	b.ls	10d7c <__sanitizer_on_print@@Base+0xe7c>  // b.plast
   10d60:	b	10d8c <__sanitizer_on_print@@Base+0xe8c>
   10d64:	sub	w10, w9, #0x41
   10d68:	cmp	w10, #0x5
   10d6c:	b.hi	10d8c <__sanitizer_on_print@@Base+0xe8c>  // b.pmore
   10d70:	sub	w10, w9, #0x37
   10d74:	cmp	w10, #0xf
   10d78:	b.hi	10d8c <__sanitizer_on_print@@Base+0xe8c>  // b.pmore
   10d7c:	mov	x22, x8
   10d80:	ldrb	w9, [x8], #1
   10d84:	add	x23, x10, x23, lsl #4
   10d88:	b	10d24 <__sanitizer_on_print@@Base+0xe24>
   10d8c:	ldrb	w8, [x22]
   10d90:	cmp	w8, #0x2f
   10d94:	b.eq	10db4 <__sanitizer_on_print@@Base+0xeb4>  // b.none
   10d98:	cmp	w8, #0xb
   10d9c:	b.cc	10db4 <__sanitizer_on_print@@Base+0xeb4>  // b.lo, b.ul, b.last
   10da0:	ldrb	w8, [x22, #1]!
   10da4:	cmp	w8, #0x2f
   10da8:	b.eq	10db4 <__sanitizer_on_print@@Base+0xeb4>  // b.none
   10dac:	cmp	w8, #0xa
   10db0:	b.hi	10da0 <__sanitizer_on_print@@Base+0xea0>  // b.pmore
   10db4:	cmp	w8, #0x2f
   10db8:	cset	w26, eq  // eq = none
   10dbc:	b	10eb8 <__sanitizer_on_print@@Base+0xfb8>
   10dc0:	sub	w8, w9, #0x41
   10dc4:	cmp	w8, #0x5
   10dc8:	b.hi	10dd8 <__sanitizer_on_print@@Base+0xed8>  // b.pmore
   10dcc:	sub	w8, w9, #0x37
   10dd0:	cmp	w8, #0xf
   10dd4:	b.ls	10d1c <__sanitizer_on_print@@Base+0xe1c>  // b.plast
   10dd8:	mov	w2, #0x4                   	// #4
   10ddc:	mov	x0, x22
   10de0:	mov	x1, x24
   10de4:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   10de8:	cbnz	w0, 10eb8 <__sanitizer_on_print@@Base+0xfb8>
   10dec:	b	10e00 <__sanitizer_on_print@@Base+0xf00>
   10df0:	sub	w8, w10, #0x57
   10df4:	cmp	w8, #0x9
   10df8:	b.ls	10e30 <__sanitizer_on_print@@Base+0xf30>  // b.plast
   10dfc:	add	x22, x22, #0x1
   10e00:	ldrb	w10, [x22]
   10e04:	sub	w8, w10, #0x30
   10e08:	cmp	w8, #0x9
   10e0c:	b.ls	10df4 <__sanitizer_on_print@@Base+0xef4>  // b.plast
   10e10:	sub	w8, w10, #0x61
   10e14:	cmp	w8, #0x5
   10e18:	b.ls	10df0 <__sanitizer_on_print@@Base+0xef0>  // b.plast
   10e1c:	sub	w8, w10, #0x41
   10e20:	cmp	w8, #0x5
   10e24:	b.hi	10dfc <__sanitizer_on_print@@Base+0xefc>  // b.pmore
   10e28:	sub	w8, w10, #0x37
   10e2c:	b	10df4 <__sanitizer_on_print@@Base+0xef4>
   10e30:	mov	x8, xzr
   10e34:	add	x9, x22, #0x1
   10e38:	sub	w11, w10, #0x30
   10e3c:	and	w11, w11, #0xff
   10e40:	cmp	w11, #0x9
   10e44:	and	w10, w10, #0xff
   10e48:	b.hi	10e5c <__sanitizer_on_print@@Base+0xf5c>  // b.pmore
   10e4c:	sub	w11, w10, #0x30
   10e50:	cmp	w11, #0x9
   10e54:	b.ls	10e90 <__sanitizer_on_print@@Base+0xf90>  // b.plast
   10e58:	b	10ea0 <__sanitizer_on_print@@Base+0xfa0>
   10e5c:	sub	w11, w10, #0x61
   10e60:	cmp	w11, #0x5
   10e64:	b.hi	10e78 <__sanitizer_on_print@@Base+0xf78>  // b.pmore
   10e68:	sub	w11, w10, #0x57
   10e6c:	cmp	w11, #0x9
   10e70:	b.ls	10e90 <__sanitizer_on_print@@Base+0xf90>  // b.plast
   10e74:	b	10ea0 <__sanitizer_on_print@@Base+0xfa0>
   10e78:	sub	w11, w10, #0x41
   10e7c:	cmp	w11, #0x5
   10e80:	b.hi	10ea0 <__sanitizer_on_print@@Base+0xfa0>  // b.pmore
   10e84:	sub	w11, w10, #0x37
   10e88:	cmp	w11, #0x9
   10e8c:	b.hi	10ea0 <__sanitizer_on_print@@Base+0xfa0>  // b.pmore
   10e90:	mov	x22, x9
   10e94:	ldrb	w10, [x9], #1
   10e98:	madd	x8, x8, x25, x11
   10e9c:	b	10e38 <__sanitizer_on_print@@Base+0xf38>
   10ea0:	lsl	x1, x8, #10
   10ea4:	and	w2, w26, #0x1
   10ea8:	mov	x0, x23
   10eac:	mov	x3, x20
   10eb0:	mov	x4, x19
   10eb4:	blr	x21
   10eb8:	ldrb	w8, [x22], #1
   10ebc:	cmp	w8, #0xa
   10ec0:	b.ne	10eb8 <__sanitizer_on_print@@Base+0xfb8>  // b.any
   10ec4:	ldr	x8, [sp, #24]
   10ec8:	ldr	x9, [sp]
   10ecc:	add	x9, x8, x9
   10ed0:	cmp	x9, x22
   10ed4:	b.hi	10cf4 <__sanitizer_on_print@@Base+0xdf4>  // b.pmore
   10ed8:	mov	x22, x8
   10edc:	ldr	x1, [sp, #8]
   10ee0:	mov	x0, x22
   10ee4:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   10ee8:	ldp	x20, x19, [sp, #80]
   10eec:	ldp	x22, x21, [sp, #64]
   10ef0:	ldp	x24, x23, [sp, #48]
   10ef4:	ldp	x26, x25, [sp, #32]
   10ef8:	ldr	x30, [sp, #16]
   10efc:	add	sp, sp, #0x60
   10f00:	ret
   10f04:	str	x30, [sp, #-32]!
   10f08:	stp	x20, x19, [sp, #16]
   10f0c:	ldp	x8, x3, [x0, #8]
   10f10:	mov	x9, #0xe38f                	// #58255
   10f14:	movk	x9, #0x8e38, lsl #16
   10f18:	movk	x9, #0x38e3, lsl #32
   10f1c:	movk	x9, #0xe38e, lsl #48
   10f20:	umulh	x8, x8, x9
   10f24:	lsr	x4, x8, #6
   10f28:	cmp	x3, x4
   10f2c:	b.hi	10fb8 <__sanitizer_on_print@@Base+0x10b8>  // b.pmore
   10f30:	mov	x19, x0
   10f34:	mov	x20, x1
   10f38:	b.ne	10f90 <__sanitizer_on_print@@Base+0x1090>  // b.any
   10f3c:	adds	x3, x3, #0x1
   10f40:	b.cs	10fd0 <__sanitizer_on_print@@Base+0x10d0>  // b.hs, b.nlast
   10f44:	sub	x8, x3, #0x1
   10f48:	tst	x3, x8
   10f4c:	b.ne	10f58 <__sanitizer_on_print@@Base+0x1058>  // b.any
   10f50:	mov	x8, x3
   10f54:	b	10f80 <__sanitizer_on_print@@Base+0x1080>
   10f58:	clz	x8, x3
   10f5c:	eor	x9, x8, #0x3f
   10f60:	mov	w8, #0x2                   	// #2
   10f64:	lsl	x8, x8, x9
   10f68:	cmp	x8, x3
   10f6c:	b.ls	10ff0 <__sanitizer_on_print@@Base+0x10f0>  // b.plast
   10f70:	mov	w10, #0x1                   	// #1
   10f74:	lsl	x4, x10, x9
   10f78:	cmp	x4, x3
   10f7c:	b.cs	1100c <__sanitizer_on_print@@Base+0x110c>  // b.hs, b.nlast
   10f80:	mov	x0, x19
   10f84:	mov	x1, x8
   10f88:	bl	11024 <__sanitizer_on_print@@Base+0x1124>
   10f8c:	ldr	x3, [x19, #16]
   10f90:	add	x9, x3, #0x1
   10f94:	ldr	x8, [x19]
   10f98:	str	x9, [x19, #16]
   10f9c:	mov	x1, x20
   10fa0:	ldp	x20, x19, [sp, #16]
   10fa4:	mov	w10, #0x48                  	// #72
   10fa8:	madd	x0, x3, x10, x8
   10fac:	mov	w2, #0x48                  	// #72
   10fb0:	ldr	x30, [sp], #32
   10fb4:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   10fb8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   10fbc:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10fc0:	add	x0, x0, #0xbf8
   10fc4:	add	x2, x2, #0x44f
   10fc8:	mov	w1, #0x1cd                 	// #461
   10fcc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   10fd0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   10fd4:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10fd8:	add	x0, x0, #0xbf8
   10fdc:	add	x2, x2, #0x46b
   10fe0:	mov	w1, #0x186                 	// #390
   10fe4:	mov	x3, xzr
   10fe8:	mov	x4, xzr
   10fec:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   10ff0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   10ff4:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   10ff8:	add	x0, x0, #0xbf8
   10ffc:	add	x2, x2, #0x47b
   11000:	mov	w1, #0x18a                 	// #394
   11004:	mov	x4, x8
   11008:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1100c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11010:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11014:	add	x0, x0, #0xbf8
   11018:	add	x2, x2, #0x49d
   1101c:	mov	w1, #0x18b                 	// #395
   11020:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11024:	stp	x30, x21, [sp, #-32]!
   11028:	stp	x20, x19, [sp, #16]
   1102c:	cbz	x1, 110c4 <__sanitizer_on_print@@Base+0x11c4>
   11030:	ldr	x3, [x0, #16]
   11034:	mov	x20, x1
   11038:	mov	x19, x0
   1103c:	cmp	x3, x1
   11040:	b.hi	110e4 <__sanitizer_on_print@@Base+0x11e4>  // b.pmore
   11044:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11048:	ldr	x21, [x21, #4016]
   1104c:	ldr	x0, [x21]
   11050:	cbnz	x0, 1105c <__sanitizer_on_print@@Base+0x115c>
   11054:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   11058:	str	x0, [x21]
   1105c:	sub	x8, x0, #0x1
   11060:	tst	x0, x8
   11064:	b.ne	11100 <__sanitizer_on_print@@Base+0x1200>  // b.any
   11068:	add	x8, x20, x20, lsl #3
   1106c:	lsl	x8, x8, #3
   11070:	add	x8, x8, x0
   11074:	sub	x8, x8, #0x1
   11078:	neg	x9, x0
   1107c:	and	x20, x8, x9
   11080:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   11084:	add	x1, x1, #0x2c0
   11088:	mov	x0, x20
   1108c:	mov	w2, wzr
   11090:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   11094:	ldr	x8, [x19, #16]
   11098:	ldr	x1, [x19]
   1109c:	mov	x21, x0
   110a0:	add	x8, x8, x8, lsl #3
   110a4:	lsl	x2, x8, #3
   110a8:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   110ac:	ldp	x0, x1, [x19]
   110b0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   110b4:	stp	x21, x20, [x19]
   110b8:	ldp	x20, x19, [sp, #16]
   110bc:	ldp	x30, x21, [sp], #32
   110c0:	ret
   110c4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   110c8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   110cc:	add	x0, x0, #0xbf8
   110d0:	add	x2, x2, #0x289
   110d4:	mov	w1, #0x20b                 	// #523
   110d8:	mov	x3, xzr
   110dc:	mov	x4, xzr
   110e0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   110e4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   110e8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   110ec:	add	x0, x0, #0xbf8
   110f0:	add	x2, x2, #0x2a2
   110f4:	mov	w1, #0x20c                 	// #524
   110f8:	mov	x4, x20
   110fc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11100:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   11104:	add	x0, x0, #0x121
   11108:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1110c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   11110:	stp	x30, x19, [sp, #-16]!
   11114:	mov	x19, x0
   11118:	add	x2, x0, #0x8
   1111c:	add	x3, x0, #0x10
   11120:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11124:	add	x0, x0, #0xa5b
   11128:	mov	w4, #0x4000000             	// #67108864
   1112c:	mov	x1, x19
   11130:	mov	x5, xzr
   11134:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
   11138:	tbnz	w0, #0, 11144 <__sanitizer_on_print@@Base+0x1244>
   1113c:	stp	xzr, xzr, [x19, #8]
   11140:	str	xzr, [x19]
   11144:	ldp	x30, x19, [sp], #16
   11148:	ret
   1114c:	str	x30, [sp, #-48]!
   11150:	stp	x22, x21, [sp, #16]
   11154:	stp	x20, x19, [sp, #32]
   11158:	mov	x20, x1
   1115c:	mov	x19, x0
   11160:	bl	10aac <__sanitizer_on_print@@Base+0xbac>
   11164:	tbnz	w0, #0, 1138c <__sanitizer_on_print@@Base+0x148c>
   11168:	ldr	x8, [x19]
   1116c:	ldr	x9, [x19, #16]
   11170:	ldr	x0, [x19, #24]!
   11174:	add	x21, x8, x9
   11178:	cmp	x0, x21
   1117c:	b.cs	1138c <__sanitizer_on_print@@Base+0x148c>  // b.hs, b.nlast
   11180:	sub	x2, x21, x0
   11184:	mov	w1, #0xa                   	// #10
   11188:	bl	bdb8 <__sanitizer_set_report_fd@@Base+0x2504>
   1118c:	cmp	x0, #0x0
   11190:	csel	x22, x21, x0, eq  // eq = none
   11194:	mov	x0, x19
   11198:	bl	10804 <__sanitizer_on_print@@Base+0x904>
   1119c:	str	x0, [x20]
   111a0:	ldr	x8, [x19]
   111a4:	add	x9, x8, #0x1
   111a8:	str	x9, [x19]
   111ac:	ldrb	w3, [x8]
   111b0:	cmp	x3, #0x2d
   111b4:	b.ne	113fc <__sanitizer_on_print@@Base+0x14fc>  // b.any
   111b8:	mov	x0, x19
   111bc:	bl	10804 <__sanitizer_on_print@@Base+0x904>
   111c0:	str	x0, [x20, #8]
   111c4:	ldr	x8, [x19]
   111c8:	add	x9, x8, #0x1
   111cc:	str	x9, [x19]
   111d0:	ldrb	w3, [x8]
   111d4:	cmp	x3, #0x20
   111d8:	b.ne	11418 <__sanitizer_on_print@@Base+0x1518>  // b.any
   111dc:	ldrb	w9, [x9]
   111e0:	cmp	w9, #0x2d
   111e4:	b.eq	111f0 <__sanitizer_on_print@@Base+0x12f0>  // b.none
   111e8:	cmp	w9, #0x72
   111ec:	b.ne	11434 <__sanitizer_on_print@@Base+0x1534>  // b.any
   111f0:	add	x10, x8, #0x2
   111f4:	str	xzr, [x20, #40]
   111f8:	str	x10, [x19]
   111fc:	ldrb	w9, [x8, #1]
   11200:	cmp	w9, #0x72
   11204:	mov	x9, xzr
   11208:	b.ne	11214 <__sanitizer_on_print@@Base+0x1314>  // b.any
   1120c:	mov	w9, #0x1                   	// #1
   11210:	str	x9, [x20, #40]
   11214:	ldrb	w10, [x10]
   11218:	cmp	w10, #0x2d
   1121c:	b.eq	11228 <__sanitizer_on_print@@Base+0x1328>  // b.none
   11220:	cmp	w10, #0x77
   11224:	b.ne	1144c <__sanitizer_on_print@@Base+0x154c>  // b.any
   11228:	add	x10, x8, #0x3
   1122c:	str	x10, [x19]
   11230:	ldrb	w11, [x8, #2]
   11234:	cmp	w11, #0x77
   11238:	b.ne	11244 <__sanitizer_on_print@@Base+0x1344>  // b.any
   1123c:	orr	x9, x9, #0x2
   11240:	str	x9, [x20, #40]
   11244:	ldrb	w10, [x10]
   11248:	cmp	w10, #0x2d
   1124c:	b.eq	11258 <__sanitizer_on_print@@Base+0x1358>  // b.none
   11250:	cmp	w10, #0x78
   11254:	b.ne	11464 <__sanitizer_on_print@@Base+0x1564>  // b.any
   11258:	add	x10, x8, #0x4
   1125c:	str	x10, [x19]
   11260:	ldrb	w11, [x8, #3]
   11264:	cmp	w11, #0x78
   11268:	b.ne	11274 <__sanitizer_on_print@@Base+0x1374>  // b.any
   1126c:	orr	x9, x9, #0x4
   11270:	str	x9, [x20, #40]
   11274:	ldrb	w10, [x10]
   11278:	cmp	w10, #0x70
   1127c:	b.eq	11288 <__sanitizer_on_print@@Base+0x1388>  // b.none
   11280:	cmp	w10, #0x73
   11284:	b.ne	1147c <__sanitizer_on_print@@Base+0x157c>  // b.any
   11288:	add	x10, x8, #0x5
   1128c:	str	x10, [x19]
   11290:	ldrb	w10, [x8, #4]
   11294:	cmp	w10, #0x73
   11298:	b.ne	112a4 <__sanitizer_on_print@@Base+0x13a4>  // b.any
   1129c:	orr	x9, x9, #0x8
   112a0:	str	x9, [x20, #40]
   112a4:	add	x9, x8, #0x6
   112a8:	str	x9, [x19]
   112ac:	ldrb	w3, [x8, #5]
   112b0:	cmp	x3, #0x20
   112b4:	b.ne	1149c <__sanitizer_on_print@@Base+0x159c>  // b.any
   112b8:	mov	x0, x19
   112bc:	bl	10804 <__sanitizer_on_print@@Base+0x904>
   112c0:	str	x0, [x20, #16]
   112c4:	ldr	x8, [x19]
   112c8:	add	x9, x8, #0x1
   112cc:	str	x9, [x19]
   112d0:	ldrb	w3, [x8]
   112d4:	cmp	x3, #0x20
   112d8:	b.ne	114b8 <__sanitizer_on_print@@Base+0x15b8>  // b.any
   112dc:	mov	x0, x19
   112e0:	bl	10804 <__sanitizer_on_print@@Base+0x904>
   112e4:	ldr	x8, [x19]
   112e8:	add	x9, x8, #0x1
   112ec:	str	x9, [x19]
   112f0:	ldrb	w3, [x8]
   112f4:	cmp	x3, #0x3a
   112f8:	b.ne	114d4 <__sanitizer_on_print@@Base+0x15d4>  // b.any
   112fc:	mov	x0, x19
   11300:	bl	10804 <__sanitizer_on_print@@Base+0x904>
   11304:	ldr	x9, [x19]
   11308:	add	x8, x9, #0x1
   1130c:	str	x8, [x19]
   11310:	ldrb	w3, [x9]
   11314:	cmp	x3, #0x20
   11318:	b.ne	114f0 <__sanitizer_on_print@@Base+0x15f0>  // b.any
   1131c:	ldrb	w0, [x8]
   11320:	bl	106c4 <__sanitizer_on_print@@Base+0x7c4>
   11324:	tbz	w0, #0, 11340 <__sanitizer_on_print@@Base+0x1440>
   11328:	ldr	x8, [x19]
   1132c:	add	x9, x8, #0x1
   11330:	str	x9, [x19]
   11334:	ldrb	w0, [x8, #1]
   11338:	bl	106c4 <__sanitizer_on_print@@Base+0x7c4>
   1133c:	tbnz	w0, #0, 11328 <__sanitizer_on_print@@Base+0x1428>
   11340:	ldr	x1, [x19]
   11344:	cmp	x1, x22
   11348:	b.cs	113a0 <__sanitizer_on_print@@Base+0x14a0>  // b.hs, b.nlast
   1134c:	ldrb	w8, [x1]
   11350:	cmp	w8, #0x20
   11354:	mov	x8, x1
   11358:	b.ne	113a4 <__sanitizer_on_print@@Base+0x14a4>  // b.any
   1135c:	add	x8, x1, #0x1
   11360:	cmp	x22, x8
   11364:	str	x8, [x19]
   11368:	b.eq	113ec <__sanitizer_on_print@@Base+0x14ec>  // b.none
   1136c:	ldrb	w9, [x8], #1
   11370:	cmp	w9, #0x20
   11374:	b.eq	11360 <__sanitizer_on_print@@Base+0x1460>  // b.none
   11378:	sub	x8, x8, #0x1
   1137c:	mov	x1, x8
   11380:	ldr	x0, [x20, #24]
   11384:	cbnz	x0, 113ac <__sanitizer_on_print@@Base+0x14ac>
   11388:	b	113d0 <__sanitizer_on_print@@Base+0x14d0>
   1138c:	mov	w0, wzr
   11390:	ldp	x20, x19, [sp, #32]
   11394:	ldp	x22, x21, [sp, #16]
   11398:	ldr	x30, [sp], #48
   1139c:	ret
   113a0:	mov	x8, x1
   113a4:	ldr	x0, [x20, #24]
   113a8:	cbz	x0, 113d0 <__sanitizer_on_print@@Base+0x14d0>
   113ac:	ldr	x9, [x20, #32]
   113b0:	sub	x8, x22, x8
   113b4:	sub	x9, x9, #0x1
   113b8:	cmp	x8, x9
   113bc:	csel	x21, x8, x9, cc  // cc = lo, ul, last
   113c0:	mov	x2, x21
   113c4:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   113c8:	ldr	x8, [x20, #24]
   113cc:	strb	wzr, [x8, x21]
   113d0:	add	x8, x22, #0x1
   113d4:	mov	w0, #0x1                   	// #1
   113d8:	str	x8, [x19]
   113dc:	ldp	x20, x19, [sp, #32]
   113e0:	ldp	x22, x21, [sp, #16]
   113e4:	ldr	x30, [sp], #48
   113e8:	ret
   113ec:	mov	x1, x22
   113f0:	ldr	x0, [x20, #24]
   113f4:	cbnz	x0, 113ac <__sanitizer_on_print@@Base+0x14ac>
   113f8:	b	113d0 <__sanitizer_on_print@@Base+0x14d0>
   113fc:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11400:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11404:	add	x0, x0, #0xa6b
   11408:	add	x2, x2, #0xac6
   1140c:	mov	w1, #0x2a                  	// #42
   11410:	mov	w4, #0x2d                  	// #45
   11414:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11418:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1141c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11420:	add	x0, x0, #0xa6b
   11424:	add	x2, x2, #0xae6
   11428:	mov	w1, #0x2c                  	// #44
   1142c:	mov	w4, #0x20                  	// #32
   11430:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11434:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11438:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1143c:	add	x0, x0, #0xa6b
   11440:	add	x2, x2, #0xb06
   11444:	mov	w1, #0x2d                  	// #45
   11448:	b	11490 <__sanitizer_on_print@@Base+0x1590>
   1144c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11450:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11454:	add	x0, x0, #0xa6b
   11458:	add	x2, x2, #0xb33
   1145c:	mov	w1, #0x30                  	// #48
   11460:	b	11490 <__sanitizer_on_print@@Base+0x1590>
   11464:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11468:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1146c:	add	x0, x0, #0xa6b
   11470:	add	x2, x2, #0xb60
   11474:	mov	w1, #0x32                  	// #50
   11478:	b	11490 <__sanitizer_on_print@@Base+0x1590>
   1147c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11480:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11484:	add	x0, x0, #0xa6b
   11488:	add	x2, x2, #0xb8d
   1148c:	mov	w1, #0x34                  	// #52
   11490:	mov	x3, xzr
   11494:	mov	x4, xzr
   11498:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1149c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114a0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114a4:	add	x0, x0, #0xa6b
   114a8:	add	x2, x2, #0xae6
   114ac:	mov	w1, #0x36                  	// #54
   114b0:	mov	w4, #0x20                  	// #32
   114b4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   114b8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114bc:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114c0:	add	x0, x0, #0xa6b
   114c4:	add	x2, x2, #0xae6
   114c8:	mov	w1, #0x38                  	// #56
   114cc:	mov	w4, #0x20                  	// #32
   114d0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   114d4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114d8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114dc:	add	x0, x0, #0xa6b
   114e0:	add	x2, x2, #0xbba
   114e4:	mov	w1, #0x3a                  	// #58
   114e8:	mov	w4, #0x3a                  	// #58
   114ec:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   114f0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114f4:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   114f8:	add	x0, x0, #0xa6b
   114fc:	add	x2, x2, #0xae6
   11500:	mov	w1, #0x3c                  	// #60
   11504:	mov	w4, #0x20                  	// #32
   11508:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1150c:	str	x30, [sp, #-16]!
   11510:	mov	w8, #0x1                   	// #1
   11514:	cmp	w2, #0x41
   11518:	sxtw	x3, w2
   1151c:	str	x1, [x0]
   11520:	str	w2, [x0, #8]
   11524:	stp	xzr, xzr, [x0, #24]
   11528:	str	xzr, [x0, #16]
   1152c:	strb	w8, [x0, #104]
   11530:	b.cs	11548 <__sanitizer_on_print@@Base+0x1648>  // b.hs, b.nlast
   11534:	add	x0, x0, #0x28
   11538:	mov	w1, wzr
   1153c:	mov	x2, x3
   11540:	ldr	x30, [sp], #16
   11544:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   11548:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1154c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11550:	add	x0, x0, #0xbda
   11554:	add	x2, x2, #0xc33
   11558:	mov	w1, #0x1d                  	// #29
   1155c:	mov	w4, #0x40                  	// #64
   11560:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11564:	sub	sp, sp, #0x90
   11568:	str	x30, [sp, #96]
   1156c:	stp	x22, x21, [sp, #112]
   11570:	stp	x20, x19, [sp, #128]
   11574:	ldrb	w8, [x1]
   11578:	cbz	w8, 11734 <__sanitizer_on_print@@Base+0x1834>
   1157c:	mov	x20, x1
   11580:	mov	x19, x0
   11584:	add	x0, sp, #0x20
   11588:	mov	w1, #0x1000                	// #4096
   1158c:	stp	xzr, xzr, [sp, #40]
   11590:	str	xzr, [sp, #32]
   11594:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   11598:	ldr	x8, [sp, #48]
   1159c:	cmp	x8, #0xfff
   115a0:	b.hi	115d8 <__sanitizer_on_print@@Base+0x16d8>  // b.pmore
   115a4:	ldr	x9, [sp, #40]
   115a8:	cmp	x9, #0xfff
   115ac:	b.hi	115c0 <__sanitizer_on_print@@Base+0x16c0>  // b.pmore
   115b0:	add	x0, sp, #0x20
   115b4:	mov	w1, #0x1000                	// #4096
   115b8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   115bc:	ldr	x8, [sp, #48]
   115c0:	ldr	x9, [sp, #32]
   115c4:	mov	w10, #0x1000                	// #4096
   115c8:	sub	x2, x10, x8
   115cc:	mov	w1, wzr
   115d0:	add	x0, x9, x8
   115d4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   115d8:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
   115dc:	ldr	q0, [x8, #3584]
   115e0:	ldr	x8, [sp, #32]
   115e4:	mov	x0, x20
   115e8:	str	q0, [sp, #48]
   115ec:	strb	wzr, [x8]
   115f0:	ldr	x21, [sp, #32]
   115f4:	ldr	x22, [sp, #48]
   115f8:	str	q0, [sp]
   115fc:	bl	d110 <__sanitizer_set_report_fd@@Base+0x385c>
   11600:	tbnz	w0, #0, 116d4 <__sanitizer_on_print@@Base+0x17d4>
   11604:	mov	x0, x20
   11608:	bl	f4a8 <__sanitizer_set_report_fd@@Base+0x5bf4>
   1160c:	tbnz	w0, #0, 116d4 <__sanitizer_on_print@@Base+0x17d4>
   11610:	add	x0, sp, #0x40
   11614:	mov	w1, #0x1000                	// #4096
   11618:	stp	xzr, xzr, [sp, #72]
   1161c:	str	xzr, [sp, #64]
   11620:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   11624:	ldr	x8, [sp, #80]
   11628:	cmp	x8, #0xfff
   1162c:	b.hi	11664 <__sanitizer_on_print@@Base+0x1764>  // b.pmore
   11630:	ldr	x9, [sp, #72]
   11634:	cmp	x9, #0xfff
   11638:	b.hi	1164c <__sanitizer_on_print@@Base+0x174c>  // b.pmore
   1163c:	add	x0, sp, #0x40
   11640:	mov	w1, #0x1000                	// #4096
   11644:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   11648:	ldr	x8, [sp, #80]
   1164c:	ldr	x9, [sp, #64]
   11650:	mov	w10, #0x1000                	// #4096
   11654:	sub	x2, x10, x8
   11658:	mov	w1, wzr
   1165c:	add	x0, x9, x8
   11660:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   11664:	ldr	x8, [sp, #64]
   11668:	ldr	q0, [sp]
   1166c:	str	q0, [sp, #80]
   11670:	strb	wzr, [x8]
   11674:	ldr	x0, [sp, #64]
   11678:	ldr	x1, [sp, #80]
   1167c:	bl	7054 <__sanitizer_report_error_summary@@Base+0x66c>
   11680:	ldr	x8, [sp, #64]
   11684:	cbz	x0, 11748 <__sanitizer_on_print@@Base+0x1848>
   11688:	mov	x0, x8
   1168c:	bl	68f4 <__sancov_default_options@plt+0x1f74>
   11690:	ldr	x1, [sp, #64]
   11694:	sub	x9, x22, #0x1
   11698:	sub	x8, x0, x1
   1169c:	cmp	x8, x9
   116a0:	csel	x2, x8, x9, cc  // cc = lo, ul, last
   116a4:	mov	x0, x21
   116a8:	bl	c488 <__sanitizer_set_report_fd@@Base+0x2bd4>
   116ac:	mov	x0, x21
   116b0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   116b4:	mvn	x8, x0
   116b8:	add	x2, x22, x8
   116bc:	mov	x0, x21
   116c0:	mov	x1, x20
   116c4:	bl	c488 <__sanitizer_set_report_fd@@Base+0x2bd4>
   116c8:	ldp	x0, x1, [sp, #64]
   116cc:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   116d0:	mov	x20, x21
   116d4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   116d8:	ldr	x8, [x8, #3872]
   116dc:	ldr	w8, [x8]
   116e0:	cbz	w8, 11700 <__sanitizer_on_print@@Base+0x1800>
   116e4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   116e8:	ldr	x8, [x8, #4024]
   116ec:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   116f0:	add	x0, x0, #0xc6a
   116f4:	mov	x2, x20
   116f8:	ldr	x1, [x8]
   116fc:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   11700:	add	x1, sp, #0x40
   11704:	add	x2, sp, #0x68
   11708:	add	x3, sp, #0x18
   1170c:	mov	w4, #0x4000000             	// #67108864
   11710:	mov	x0, x20
   11714:	mov	x5, xzr
   11718:	bl	9390 <__sanitizer_install_malloc_and_free_hooks@@Base+0x20dc>
   1171c:	tbz	w0, #0, 11768 <__sanitizer_on_print@@Base+0x1868>
   11720:	ldr	x1, [sp, #64]
   11724:	mov	x0, x19
   11728:	bl	11788 <__sanitizer_on_print@@Base+0x1888>
   1172c:	ldp	x0, x1, [sp, #32]
   11730:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   11734:	ldp	x20, x19, [sp, #128]
   11738:	ldp	x22, x21, [sp, #112]
   1173c:	ldr	x30, [sp, #96]
   11740:	add	sp, sp, #0x90
   11744:	ret
   11748:	ldr	x1, [sp, #72]
   1174c:	mov	x0, x8
   11750:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   11754:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11758:	ldr	x8, [x8, #3872]
   1175c:	ldr	w8, [x8]
   11760:	cbnz	w8, 116e4 <__sanitizer_on_print@@Base+0x17e4>
   11764:	b	11700 <__sanitizer_on_print@@Base+0x1800>
   11768:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1176c:	ldr	x8, [x8, #4024]
   11770:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11774:	add	x0, x0, #0xc8f
   11778:	mov	x2, x20
   1177c:	ldr	x1, [x8]
   11780:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   11784:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   11788:	sub	sp, sp, #0x70
   1178c:	str	x30, [sp, #32]
   11790:	stp	x26, x25, [sp, #48]
   11794:	stp	x24, x23, [sp, #64]
   11798:	stp	x22, x21, [sp, #80]
   1179c:	stp	x20, x19, [sp, #96]
   117a0:	ldrb	w3, [x0, #104]
   117a4:	cmp	x3, #0x1
   117a8:	b.ne	119b8 <__sanitizer_on_print@@Base+0x1ab8>  // b.any
   117ac:	mov	x25, #0x2200                	// #8704
   117b0:	mov	x19, x0
   117b4:	mov	x21, x1
   117b8:	add	x20, x0, #0x10
   117bc:	mov	w24, #0x1                   	// #1
   117c0:	movk	x25, #0x1, lsl #32
   117c4:	b	1183c <__sanitizer_on_print@@Base+0x193c>
   117c8:	mov	w26, wzr
   117cc:	cmp	w26, w8
   117d0:	b.eq	1199c <__sanitizer_on_print@@Base+0x1a9c>  // b.none
   117d4:	mov	x0, sp
   117d8:	mov	w2, #0x20                  	// #32
   117dc:	mov	w1, wzr
   117e0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   117e4:	ldr	x8, [x19]
   117e8:	sub	x23, x23, x21
   117ec:	add	x0, x23, #0x1
   117f0:	mov	x1, xzr
   117f4:	ldr	x8, [x8, w26, uxtw #3]
   117f8:	mov	x2, xzr
   117fc:	str	x8, [sp]
   11800:	bl	4b90 <__sancov_default_options@plt+0x210>
   11804:	mov	x1, x21
   11808:	mov	x2, x23
   1180c:	str	x0, [sp, #8]
   11810:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   11814:	ldr	x8, [sp, #8]
   11818:	mov	x1, sp
   1181c:	mov	x0, x20
   11820:	strb	wzr, [x8, x23]
   11824:	bl	11bd4 <__sanitizer_on_print@@Base+0x1cd4>
   11828:	add	x8, x19, w26, uxtw
   1182c:	strb	w24, [x8, #40]
   11830:	ldrb	w8, [x22], #1
   11834:	mov	x21, x22
   11838:	cbz	w8, 11980 <__sanitizer_on_print@@Base+0x1a80>
   1183c:	cbnz	x21, 11848 <__sanitizer_on_print@@Base+0x1948>
   11840:	b	11980 <__sanitizer_on_print@@Base+0x1a80>
   11844:	add	x21, x21, #0x1
   11848:	ldrb	w8, [x21]
   1184c:	cmp	w8, #0x20
   11850:	b.eq	11844 <__sanitizer_on_print@@Base+0x1944>  // b.none
   11854:	cmp	w8, #0x9
   11858:	b.eq	11844 <__sanitizer_on_print@@Base+0x1944>  // b.none
   1185c:	mov	w1, #0xa                   	// #10
   11860:	mov	x0, x21
   11864:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
   11868:	mov	x22, x0
   1186c:	cbz	x0, 1187c <__sanitizer_on_print@@Base+0x197c>
   11870:	cmp	x22, x21
   11874:	b.ne	11890 <__sanitizer_on_print@@Base+0x1990>  // b.any
   11878:	b	11830 <__sanitizer_on_print@@Base+0x1930>
   1187c:	mov	x0, x21
   11880:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   11884:	add	x22, x21, x0
   11888:	cmp	x22, x21
   1188c:	b.eq	11830 <__sanitizer_on_print@@Base+0x1930>  // b.none
   11890:	ldrb	w9, [x21]
   11894:	cmp	w9, #0x23
   11898:	b.eq	11830 <__sanitizer_on_print@@Base+0x1930>  // b.none
   1189c:	mov	x23, x22
   118a0:	mov	x8, x22
   118a4:	ldrb	w10, [x8, #-1]!
   118a8:	cmp	w10, #0x20
   118ac:	b.hi	118cc <__sanitizer_on_print@@Base+0x19cc>  // b.pmore
   118b0:	lsl	x10, x24, x10
   118b4:	tst	x10, x25
   118b8:	b.eq	118cc <__sanitizer_on_print@@Base+0x19cc>  // b.none
   118bc:	cmp	x21, x8
   118c0:	mov	x23, x8
   118c4:	b.ne	118a4 <__sanitizer_on_print@@Base+0x19a4>  // b.any
   118c8:	mov	x23, x21
   118cc:	ldrsw	x8, [x19, #8]
   118d0:	cmp	w8, #0x1
   118d4:	b.lt	117c8 <__sanitizer_on_print@@Base+0x18c8>  // b.tstop
   118d8:	ldr	x11, [x19]
   118dc:	mov	x10, xzr
   118e0:	mov	w26, wzr
   118e4:	ldr	x12, [x11, x10, lsl #3]
   118e8:	tst	w9, #0xff
   118ec:	b.eq	11928 <__sanitizer_on_print@@Base+0x1a28>  // b.none
   118f0:	mov	x13, xzr
   118f4:	ldrb	w14, [x12, x13]
   118f8:	cmp	w14, w9, uxtb
   118fc:	b.ne	1193c <__sanitizer_on_print@@Base+0x1a3c>  // b.any
   11900:	add	x9, x21, x13
   11904:	ldrb	w9, [x9, #1]
   11908:	add	x13, x13, #0x1
   1190c:	cbnz	w9, 118f4 <__sanitizer_on_print@@Base+0x19f4>
   11910:	add	x12, x12, x13
   11914:	add	x13, x21, x13
   11918:	ldrb	w14, [x12]
   1191c:	mov	w9, wzr
   11920:	cbz	w14, 11944 <__sanitizer_on_print@@Base+0x1a44>
   11924:	b	11950 <__sanitizer_on_print@@Base+0x1a50>
   11928:	mov	x13, x21
   1192c:	ldrb	w14, [x12]
   11930:	mov	w9, wzr
   11934:	cbz	w14, 11944 <__sanitizer_on_print@@Base+0x1a44>
   11938:	b	11950 <__sanitizer_on_print@@Base+0x1a50>
   1193c:	add	x13, x21, x13
   11940:	cbnz	w14, 11950 <__sanitizer_on_print@@Base+0x1a50>
   11944:	and	w9, w9, #0xff
   11948:	cmp	w9, #0x3a
   1194c:	b.eq	11974 <__sanitizer_on_print@@Base+0x1a74>  // b.none
   11950:	add	x10, x10, #0x1
   11954:	cmp	x10, x8
   11958:	add	w26, w26, #0x1
   1195c:	b.ge	117cc <__sanitizer_on_print@@Base+0x18cc>  // b.tcont
   11960:	ldrb	w9, [x21]
   11964:	ldr	x12, [x11, x10, lsl #3]
   11968:	tst	w9, #0xff
   1196c:	b.ne	118f0 <__sanitizer_on_print@@Base+0x19f0>  // b.any
   11970:	b	11928 <__sanitizer_on_print@@Base+0x1a28>
   11974:	add	x21, x13, #0x1
   11978:	mov	w26, w10
   1197c:	b	117cc <__sanitizer_on_print@@Base+0x18cc>
   11980:	ldp	x20, x19, [sp, #96]
   11984:	ldp	x22, x21, [sp, #80]
   11988:	ldp	x24, x23, [sp, #64]
   1198c:	ldp	x26, x25, [sp, #48]
   11990:	ldr	x30, [sp, #32]
   11994:	add	sp, sp, #0x70
   11998:	ret
   1199c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   119a0:	ldr	x8, [x8, #4024]
   119a4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   119a8:	add	x0, x0, #0xcd0
   119ac:	ldr	x1, [x8]
   119b0:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   119b4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   119b8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   119bc:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   119c0:	add	x0, x0, #0xbda
   119c4:	add	x2, x2, #0xcba
   119c8:	mov	w1, #0x76                  	// #118
   119cc:	mov	x4, xzr
   119d0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   119d4:	stp	x30, x25, [sp, #-64]!
   119d8:	stp	x24, x23, [sp, #16]
   119dc:	stp	x22, x21, [sp, #32]
   119e0:	stp	x20, x19, [sp, #48]
   119e4:	ldr	w8, [x0, #8]
   119e8:	strb	wzr, [x0, #104]
   119ec:	cmp	w8, #0x1
   119f0:	b.lt	11a98 <__sanitizer_on_print@@Base+0x1b98>  // b.tstop
   119f4:	mov	x19, x3
   119f8:	mov	x20, x2
   119fc:	mov	x21, x1
   11a00:	mov	x22, x0
   11a04:	mov	x23, xzr
   11a08:	ldr	x8, [x22]
   11a0c:	mov	x0, x20
   11a10:	ldr	x1, [x8, x23, lsl #3]
   11a14:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   11a18:	cbz	w0, 11a30 <__sanitizer_on_print@@Base+0x1b30>
   11a1c:	ldrsw	x8, [x22, #8]
   11a20:	add	x23, x23, #0x1
   11a24:	cmp	x23, x8
   11a28:	b.lt	11a08 <__sanitizer_on_print@@Base+0x1b08>  // b.tstop
   11a2c:	b	11a98 <__sanitizer_on_print@@Base+0x1b98>
   11a30:	add	x8, x22, x23
   11a34:	ldrb	w8, [x8, #40]
   11a38:	cbz	w8, 11a98 <__sanitizer_on_print@@Base+0x1b98>
   11a3c:	ldr	x8, [x22, #32]
   11a40:	cbz	x8, 11a98 <__sanitizer_on_print@@Base+0x1b98>
   11a44:	mov	x23, xzr
   11a48:	mov	x24, xzr
   11a4c:	b	11a64 <__sanitizer_on_print@@Base+0x1b64>
   11a50:	ldr	x8, [x22, #32]
   11a54:	add	x24, x24, #0x1
   11a58:	add	x23, x23, #0x20
   11a5c:	cmp	x24, x8
   11a60:	b.cs	11a98 <__sanitizer_on_print@@Base+0x1b98>  // b.hs, b.nlast
   11a64:	ldr	x25, [x22, #16]
   11a68:	mov	x1, x20
   11a6c:	ldr	x0, [x25, x23]
   11a70:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   11a74:	cbnz	w0, 11a50 <__sanitizer_on_print@@Base+0x1b50>
   11a78:	add	x25, x25, x23
   11a7c:	ldr	x0, [x25, #8]
   11a80:	mov	x1, x21
   11a84:	bl	6df0 <__sanitizer_report_error_summary@@Base+0x408>
   11a88:	tbz	w0, #0, 11a50 <__sanitizer_on_print@@Base+0x1b50>
   11a8c:	mov	w0, #0x1                   	// #1
   11a90:	str	x25, [x19]
   11a94:	b	11a9c <__sanitizer_on_print@@Base+0x1b9c>
   11a98:	mov	w0, wzr
   11a9c:	ldp	x20, x19, [sp, #48]
   11aa0:	ldp	x22, x21, [sp, #32]
   11aa4:	ldp	x24, x23, [sp, #16]
   11aa8:	ldp	x30, x25, [sp], #64
   11aac:	ret
   11ab0:	stp	x30, x21, [sp, #-32]!
   11ab4:	stp	x20, x19, [sp, #16]
   11ab8:	ldr	w8, [x0, #8]
   11abc:	cmp	w8, #0x1
   11ac0:	b.lt	11af4 <__sanitizer_on_print@@Base+0x1bf4>  // b.tstop
   11ac4:	mov	x19, x0
   11ac8:	mov	x20, x1
   11acc:	mov	x21, xzr
   11ad0:	ldr	x8, [x19]
   11ad4:	mov	x0, x20
   11ad8:	ldr	x1, [x8, x21, lsl #3]
   11adc:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   11ae0:	cbz	w0, 11b04 <__sanitizer_on_print@@Base+0x1c04>
   11ae4:	ldrsw	x8, [x19, #8]
   11ae8:	add	x21, x21, #0x1
   11aec:	cmp	x21, x8
   11af0:	b.lt	11ad0 <__sanitizer_on_print@@Base+0x1bd0>  // b.tstop
   11af4:	mov	w0, wzr
   11af8:	ldp	x20, x19, [sp, #16]
   11afc:	ldp	x30, x21, [sp], #32
   11b00:	ret
   11b04:	add	x8, x19, x21
   11b08:	ldrb	w8, [x8, #40]
   11b0c:	cmp	w8, #0x0
   11b10:	cset	w0, ne  // ne = any
   11b14:	ldp	x20, x19, [sp, #16]
   11b18:	ldp	x30, x21, [sp], #32
   11b1c:	ret
   11b20:	ldr	x0, [x0, #32]
   11b24:	ret
   11b28:	str	x30, [sp, #-16]!
   11b2c:	ldr	x4, [x0, #32]
   11b30:	mov	x3, x1
   11b34:	cmp	x4, x1
   11b38:	b.ls	11b4c <__sanitizer_on_print@@Base+0x1c4c>  // b.plast
   11b3c:	ldr	x8, [x0, #16]
   11b40:	add	x0, x8, x3, lsl #5
   11b44:	ldr	x30, [sp], #16
   11b48:	ret
   11b4c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11b50:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11b54:	add	x0, x0, #0xbda
   11b58:	add	x2, x2, #0xcf2
   11b5c:	mov	w1, #0xaa                  	// #170
   11b60:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11b64:	str	x30, [sp, #-48]!
   11b68:	stp	x22, x21, [sp, #16]
   11b6c:	stp	x20, x19, [sp, #32]
   11b70:	ldr	x8, [x0, #32]
   11b74:	cbz	x8, 11bc4 <__sanitizer_on_print@@Base+0x1cc4>
   11b78:	mov	x19, x0
   11b7c:	mov	x20, x1
   11b80:	mov	x21, xzr
   11b84:	mov	x22, xzr
   11b88:	b	11b9c <__sanitizer_on_print@@Base+0x1c9c>
   11b8c:	add	x22, x22, #0x1
   11b90:	cmp	x22, x8
   11b94:	add	x21, x21, #0x20
   11b98:	b.cs	11bc4 <__sanitizer_on_print@@Base+0x1cc4>  // b.hs, b.nlast
   11b9c:	ldr	x9, [x19, #16]
   11ba0:	add	x9, x9, x21
   11ba4:	ldr	w10, [x9, #16]
   11ba8:	cbz	w10, 11b8c <__sanitizer_on_print@@Base+0x1c8c>
   11bac:	add	x1, sp, #0x8
   11bb0:	mov	x0, x20
   11bb4:	str	x9, [sp, #8]
   11bb8:	bl	11cdc <__sanitizer_on_print@@Base+0x1ddc>
   11bbc:	ldr	x8, [x19, #32]
   11bc0:	b	11b8c <__sanitizer_on_print@@Base+0x1c8c>
   11bc4:	ldp	x20, x19, [sp, #32]
   11bc8:	ldp	x22, x21, [sp, #16]
   11bcc:	ldr	x30, [sp], #48
   11bd0:	ret
   11bd4:	str	x30, [sp, #-32]!
   11bd8:	stp	x20, x19, [sp, #16]
   11bdc:	ldp	x8, x3, [x0, #8]
   11be0:	lsr	x4, x8, #5
   11be4:	cmp	x3, x4
   11be8:	b.hi	11c70 <__sanitizer_on_print@@Base+0x1d70>  // b.pmore
   11bec:	mov	x19, x0
   11bf0:	mov	x20, x1
   11bf4:	b.ne	11c4c <__sanitizer_on_print@@Base+0x1d4c>  // b.any
   11bf8:	adds	x3, x3, #0x1
   11bfc:	b.cs	11c88 <__sanitizer_on_print@@Base+0x1d88>  // b.hs, b.nlast
   11c00:	sub	x8, x3, #0x1
   11c04:	tst	x3, x8
   11c08:	b.ne	11c14 <__sanitizer_on_print@@Base+0x1d14>  // b.any
   11c0c:	mov	x8, x3
   11c10:	b	11c3c <__sanitizer_on_print@@Base+0x1d3c>
   11c14:	clz	x8, x3
   11c18:	eor	x9, x8, #0x3f
   11c1c:	mov	w8, #0x2                   	// #2
   11c20:	lsl	x8, x8, x9
   11c24:	cmp	x8, x3
   11c28:	b.ls	11ca8 <__sanitizer_on_print@@Base+0x1da8>  // b.plast
   11c2c:	mov	w10, #0x1                   	// #1
   11c30:	lsl	x4, x10, x9
   11c34:	cmp	x4, x3
   11c38:	b.cs	11cc4 <__sanitizer_on_print@@Base+0x1dc4>  // b.hs, b.nlast
   11c3c:	mov	x0, x19
   11c40:	mov	x1, x8
   11c44:	bl	11de4 <__sanitizer_on_print@@Base+0x1ee4>
   11c48:	ldr	x3, [x19, #16]
   11c4c:	add	x9, x3, #0x1
   11c50:	ldr	x8, [x19]
   11c54:	str	x9, [x19, #16]
   11c58:	mov	x1, x20
   11c5c:	ldp	x20, x19, [sp, #16]
   11c60:	add	x0, x8, x3, lsl #5
   11c64:	mov	w2, #0x20                  	// #32
   11c68:	ldr	x30, [sp], #32
   11c6c:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   11c70:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11c74:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11c78:	add	x0, x0, #0xbf8
   11c7c:	add	x2, x2, #0x44f
   11c80:	mov	w1, #0x1cd                 	// #461
   11c84:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11c88:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11c8c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11c90:	add	x0, x0, #0xbf8
   11c94:	add	x2, x2, #0x46b
   11c98:	mov	w1, #0x186                 	// #390
   11c9c:	mov	x3, xzr
   11ca0:	mov	x4, xzr
   11ca4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11ca8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11cac:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11cb0:	add	x0, x0, #0xbf8
   11cb4:	add	x2, x2, #0x47b
   11cb8:	mov	w1, #0x18a                 	// #394
   11cbc:	mov	x4, x8
   11cc0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11cc4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11cc8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11ccc:	add	x0, x0, #0xbf8
   11cd0:	add	x2, x2, #0x49d
   11cd4:	mov	w1, #0x18b                 	// #395
   11cd8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11cdc:	str	x30, [sp, #-32]!
   11ce0:	stp	x20, x19, [sp, #16]
   11ce4:	ldp	x8, x3, [x0, #8]
   11ce8:	lsr	x4, x8, #3
   11cec:	cmp	x3, x4
   11cf0:	b.hi	11d78 <__sanitizer_on_print@@Base+0x1e78>  // b.pmore
   11cf4:	mov	x19, x0
   11cf8:	mov	x20, x1
   11cfc:	b.ne	11d54 <__sanitizer_on_print@@Base+0x1e54>  // b.any
   11d00:	adds	x3, x3, #0x1
   11d04:	b.cs	11d90 <__sanitizer_on_print@@Base+0x1e90>  // b.hs, b.nlast
   11d08:	sub	x8, x3, #0x1
   11d0c:	tst	x3, x8
   11d10:	b.ne	11d1c <__sanitizer_on_print@@Base+0x1e1c>  // b.any
   11d14:	mov	x8, x3
   11d18:	b	11d44 <__sanitizer_on_print@@Base+0x1e44>
   11d1c:	clz	x8, x3
   11d20:	eor	x9, x8, #0x3f
   11d24:	mov	w8, #0x2                   	// #2
   11d28:	lsl	x8, x8, x9
   11d2c:	cmp	x8, x3
   11d30:	b.ls	11db0 <__sanitizer_on_print@@Base+0x1eb0>  // b.plast
   11d34:	mov	w10, #0x1                   	// #1
   11d38:	lsl	x4, x10, x9
   11d3c:	cmp	x4, x3
   11d40:	b.cs	11dcc <__sanitizer_on_print@@Base+0x1ecc>  // b.hs, b.nlast
   11d44:	mov	x0, x19
   11d48:	mov	x1, x8
   11d4c:	bl	11ec8 <__sanitizer_on_print@@Base+0x1fc8>
   11d50:	ldr	x3, [x19, #16]
   11d54:	add	x9, x3, #0x1
   11d58:	ldr	x8, [x19]
   11d5c:	str	x9, [x19, #16]
   11d60:	mov	x1, x20
   11d64:	ldp	x20, x19, [sp, #16]
   11d68:	add	x0, x8, x3, lsl #3
   11d6c:	mov	w2, #0x8                   	// #8
   11d70:	ldr	x30, [sp], #32
   11d74:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   11d78:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11d7c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11d80:	add	x0, x0, #0xbf8
   11d84:	add	x2, x2, #0x44f
   11d88:	mov	w1, #0x1cd                 	// #461
   11d8c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11d90:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11d94:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11d98:	add	x0, x0, #0xbf8
   11d9c:	add	x2, x2, #0x46b
   11da0:	mov	w1, #0x186                 	// #390
   11da4:	mov	x3, xzr
   11da8:	mov	x4, xzr
   11dac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11db0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11db4:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11db8:	add	x0, x0, #0xbf8
   11dbc:	add	x2, x2, #0x47b
   11dc0:	mov	w1, #0x18a                 	// #394
   11dc4:	mov	x4, x8
   11dc8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11dcc:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11dd0:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11dd4:	add	x0, x0, #0xbf8
   11dd8:	add	x2, x2, #0x49d
   11ddc:	mov	w1, #0x18b                 	// #395
   11de0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11de4:	stp	x30, x21, [sp, #-32]!
   11de8:	stp	x20, x19, [sp, #16]
   11dec:	cbz	x1, 11e7c <__sanitizer_on_print@@Base+0x1f7c>
   11df0:	ldr	x3, [x0, #16]
   11df4:	mov	x20, x1
   11df8:	mov	x19, x0
   11dfc:	cmp	x3, x1
   11e00:	b.hi	11e9c <__sanitizer_on_print@@Base+0x1f9c>  // b.pmore
   11e04:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11e08:	ldr	x21, [x21, #4016]
   11e0c:	ldr	x0, [x21]
   11e10:	cbnz	x0, 11e1c <__sanitizer_on_print@@Base+0x1f1c>
   11e14:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   11e18:	str	x0, [x21]
   11e1c:	sub	x8, x0, #0x1
   11e20:	tst	x0, x8
   11e24:	b.ne	11eb8 <__sanitizer_on_print@@Base+0x1fb8>  // b.any
   11e28:	lsl	x8, x20, #5
   11e2c:	add	x8, x8, x0
   11e30:	sub	x8, x8, #0x1
   11e34:	neg	x9, x0
   11e38:	and	x20, x8, x9
   11e3c:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   11e40:	add	x1, x1, #0x2c0
   11e44:	mov	x0, x20
   11e48:	mov	w2, wzr
   11e4c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   11e50:	ldr	x8, [x19, #16]
   11e54:	ldr	x1, [x19]
   11e58:	mov	x21, x0
   11e5c:	lsl	x2, x8, #5
   11e60:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   11e64:	ldp	x0, x1, [x19]
   11e68:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   11e6c:	stp	x21, x20, [x19]
   11e70:	ldp	x20, x19, [sp, #16]
   11e74:	ldp	x30, x21, [sp], #32
   11e78:	ret
   11e7c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11e80:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   11e84:	add	x0, x0, #0xbf8
   11e88:	add	x2, x2, #0x289
   11e8c:	mov	w1, #0x20b                 	// #523
   11e90:	mov	x3, xzr
   11e94:	mov	x4, xzr
   11e98:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11e9c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11ea0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   11ea4:	add	x0, x0, #0xbf8
   11ea8:	add	x2, x2, #0x2a2
   11eac:	mov	w1, #0x20c                 	// #524
   11eb0:	mov	x4, x20
   11eb4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11eb8:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   11ebc:	add	x0, x0, #0x121
   11ec0:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   11ec4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   11ec8:	stp	x30, x21, [sp, #-32]!
   11ecc:	stp	x20, x19, [sp, #16]
   11ed0:	cbz	x1, 11f60 <__sanitizer_on_print@@Base+0x2060>
   11ed4:	ldr	x3, [x0, #16]
   11ed8:	mov	x20, x1
   11edc:	mov	x19, x0
   11ee0:	cmp	x3, x1
   11ee4:	b.hi	11f80 <__sanitizer_on_print@@Base+0x2080>  // b.pmore
   11ee8:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11eec:	ldr	x21, [x21, #4016]
   11ef0:	ldr	x0, [x21]
   11ef4:	cbnz	x0, 11f00 <__sanitizer_on_print@@Base+0x2000>
   11ef8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   11efc:	str	x0, [x21]
   11f00:	sub	x8, x0, #0x1
   11f04:	tst	x0, x8
   11f08:	b.ne	11f9c <__sanitizer_on_print@@Base+0x209c>  // b.any
   11f0c:	lsl	x8, x20, #3
   11f10:	add	x8, x8, x0
   11f14:	sub	x8, x8, #0x1
   11f18:	neg	x9, x0
   11f1c:	and	x20, x8, x9
   11f20:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   11f24:	add	x1, x1, #0x2c0
   11f28:	mov	x0, x20
   11f2c:	mov	w2, wzr
   11f30:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   11f34:	ldr	x8, [x19, #16]
   11f38:	ldr	x1, [x19]
   11f3c:	mov	x21, x0
   11f40:	lsl	x2, x8, #3
   11f44:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   11f48:	ldp	x0, x1, [x19]
   11f4c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   11f50:	stp	x21, x20, [x19]
   11f54:	ldp	x20, x19, [sp, #16]
   11f58:	ldp	x30, x21, [sp], #32
   11f5c:	ret
   11f60:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11f64:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   11f68:	add	x0, x0, #0xbf8
   11f6c:	add	x2, x2, #0x289
   11f70:	mov	w1, #0x20b                 	// #523
   11f74:	mov	x3, xzr
   11f78:	mov	x4, xzr
   11f7c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11f80:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   11f84:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   11f88:	add	x0, x0, #0xbf8
   11f8c:	add	x2, x2, #0x2a2
   11f90:	mov	w1, #0x20c                 	// #524
   11f94:	mov	x4, x20
   11f98:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   11f9c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   11fa0:	add	x0, x0, #0x121
   11fa4:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   11fa8:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   11fac:	stp	x30, x21, [sp, #-32]!
   11fb0:	stp	x20, x19, [sp, #16]
   11fb4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11fb8:	ldr	x8, [x8, #4056]
   11fbc:	ldrb	w8, [x8, #121]
   11fc0:	cbz	w8, 12054 <__sanitizer_on_print@@Base+0x2154>
   11fc4:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11fc8:	ldr	x21, [x21, #3872]
   11fcc:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   11fd0:	ldr	w8, [x21]
   11fd4:	ldr	x19, [x19, #3720]
   11fd8:	mrs	x20, tpidr_el0
   11fdc:	cmp	w8, #0x2
   11fe0:	b.cc	11ff8 <__sanitizer_on_print@@Base+0x20f8>  // b.lo, b.ul, b.last
   11fe4:	add	x1, x20, x19
   11fe8:	ldr	x2, [x1]
   11fec:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   11ff0:	add	x0, x0, #0xd13
   11ff4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   11ff8:	add	x8, x20, x19
   11ffc:	ldr	x19, [x8]
   12000:	mov	x9, #0xffffffffffffffff    	// #-1
   12004:	str	x9, [x8]
   12008:	cbz	x19, 12054 <__sanitizer_on_print@@Base+0x2154>
   1200c:	ldr	x20, [x8, #8]
   12010:	ldr	w8, [x21]
   12014:	cmp	w8, #0x2
   12018:	b.cc	12030 <__sanitizer_on_print@@Base+0x2130>  // b.lo, b.ul, b.last
   1201c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12020:	add	x0, x0, #0xe54
   12024:	mov	x1, x20
   12028:	mov	x2, x19
   1202c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12030:	lsl	x1, x19, #4
   12034:	mov	x0, x20
   12038:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1203c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   12040:	add	x8, x8, #0x7a8
   12044:	ldaxr	x9, [x8]
   12048:	sub	x9, x9, #0x1
   1204c:	stlxr	w10, x9, [x8]
   12050:	cbnz	w10, 12044 <__sanitizer_on_print@@Base+0x2144>
   12054:	ldp	x20, x19, [sp, #16]
   12058:	ldp	x30, x21, [sp], #32
   1205c:	ret
   12060:	sub	sp, sp, #0x80
   12064:	stp	x29, x30, [sp, #32]
   12068:	stp	x28, x27, [sp, #48]
   1206c:	stp	x26, x25, [sp, #64]
   12070:	stp	x24, x23, [sp, #80]
   12074:	stp	x22, x21, [sp, #96]
   12078:	stp	x20, x19, [sp, #112]
   1207c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12080:	ldr	x8, [x8, #4056]
   12084:	ldrb	w8, [x8, #121]
   12088:	cbz	w8, 12218 <__sanitizer_on_print@@Base+0x2318>
   1208c:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12090:	ldr	x26, [x26, #3720]
   12094:	mrs	x28, tpidr_el0
   12098:	ldr	x8, [x28, x26]
   1209c:	cmn	x8, #0x1
   120a0:	b.eq	12218 <__sanitizer_on_print@@Base+0x2318>  // b.none
   120a4:	ldr	x25, [x0]
   120a8:	mov	x19, x3
   120ac:	mov	x20, x2
   120b0:	mov	x21, x1
   120b4:	add	x3, x25, #0x1
   120b8:	mov	x22, x0
   120bc:	cmp	x8, x3
   120c0:	b.cs	12204 <__sanitizer_on_print@@Base+0x2304>  // b.hs, b.nlast
   120c4:	sub	x8, x3, #0x1
   120c8:	tst	x3, x8
   120cc:	b.ne	120d8 <__sanitizer_on_print@@Base+0x21d8>  // b.any
   120d0:	mov	x4, x3
   120d4:	b	12100 <__sanitizer_on_print@@Base+0x2200>
   120d8:	clz	x8, x3
   120dc:	eor	x8, x8, #0x3f
   120e0:	mov	w9, #0x2                   	// #2
   120e4:	lsl	x4, x9, x8
   120e8:	cmp	x4, x3
   120ec:	b.ls	1236c <__sanitizer_on_print@@Base+0x246c>  // b.plast
   120f0:	mov	w9, #0x1                   	// #1
   120f4:	lsl	x8, x9, x8
   120f8:	cmp	x8, x3
   120fc:	b.cs	12384 <__sanitizer_on_print@@Base+0x2484>  // b.hs, b.nlast
   12100:	cmp	x4, #0x100
   12104:	mov	w8, #0x100                 	// #256
   12108:	csel	x29, x4, x8, hi  // hi = pmore
   1210c:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12110:	lsl	x0, x29, #4
   12114:	add	x1, x1, #0xe7c
   12118:	mov	w2, wzr
   1211c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   12120:	adrp	x27, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   12124:	mov	x23, x0
   12128:	add	x27, x27, #0x7a8
   1212c:	ldaxr	x24, [x27]
   12130:	add	x8, x24, #0x1
   12134:	stlxr	w9, x8, [x27]
   12138:	cbnz	w9, 1212c <__sanitizer_on_print@@Base+0x222c>
   1213c:	str	x20, [sp, #8]
   12140:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12144:	ldr	x8, [x8, #3872]
   12148:	ldr	w8, [x8]
   1214c:	cmp	w8, #0x2
   12150:	b.cc	12168 <__sanitizer_on_print@@Base+0x2268>  // b.lo, b.ul, b.last
   12154:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12158:	add	x1, x28, x26
   1215c:	add	x0, x0, #0xe88
   12160:	mov	x2, x24
   12164:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12168:	cmp	x24, #0x100, lsl #12
   1216c:	str	x19, [sp, #16]
   12170:	b.cs	1234c <__sanitizer_on_print@@Base+0x244c>  // b.hs, b.nlast
   12174:	add	x19, x28, x26
   12178:	mov	x20, x25
   1217c:	ldr	x25, [x19]
   12180:	cbz	x25, 121f8 <__sanitizer_on_print@@Base+0x22f8>
   12184:	ldr	x24, [x19, #8]
   12188:	lsl	x26, x25, #4
   1218c:	mov	x0, x23
   12190:	mov	x2, x26
   12194:	mov	x1, x24
   12198:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1219c:	stp	x29, x23, [x19]
   121a0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   121a4:	ldr	x8, [x8, #3872]
   121a8:	ldr	w8, [x8]
   121ac:	cmp	w8, #0x2
   121b0:	b.cc	121c8 <__sanitizer_on_print@@Base+0x22c8>  // b.lo, b.ul, b.last
   121b4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   121b8:	add	x0, x0, #0xe54
   121bc:	mov	x1, x24
   121c0:	mov	x2, x25
   121c4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   121c8:	mov	x0, x24
   121cc:	mov	x1, x26
   121d0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   121d4:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   121d8:	ldr	x26, [x26, #3720]
   121dc:	mov	x25, x20
   121e0:	ldp	x20, x19, [sp, #8]
   121e4:	ldaxr	x8, [x27]
   121e8:	sub	x8, x8, #0x1
   121ec:	stlxr	w9, x8, [x27]
   121f0:	cbnz	w9, 121e4 <__sanitizer_on_print@@Base+0x22e4>
   121f4:	b	12204 <__sanitizer_on_print@@Base+0x2304>
   121f8:	stp	x29, x23, [x19]
   121fc:	mov	x25, x20
   12200:	ldp	x20, x19, [sp, #8]
   12204:	add	x8, x28, x26
   12208:	ldr	x8, [x8, #8]
   1220c:	lsl	x9, x25, #4
   12210:	ldr	x8, [x8, x9]
   12214:	cbz	x8, 1223c <__sanitizer_on_print@@Base+0x233c>
   12218:	mov	x0, xzr
   1221c:	ldp	x20, x19, [sp, #112]
   12220:	ldp	x22, x21, [sp, #96]
   12224:	ldp	x24, x23, [sp, #80]
   12228:	ldp	x26, x25, [sp, #64]
   1222c:	ldp	x28, x27, [sp, #48]
   12230:	ldp	x29, x30, [sp, #32]
   12234:	add	sp, sp, #0x80
   12238:	ret
   1223c:	ldr	x3, [x22, #8]
   12240:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12244:	sub	x5, x21, x3
   12248:	str	x5, [sp, #24]
   1224c:	ldr	x23, [x23, #3872]
   12250:	ldr	w8, [x23]
   12254:	cmp	w8, #0x2
   12258:	b.cc	12284 <__sanitizer_on_print@@Base+0x2384>  // b.lo, b.ul, b.last
   1225c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   12260:	ldr	x2, [x22]
   12264:	ldr	x7, [x8, #1960]
   12268:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1226c:	add	x0, x0, #0xd38
   12270:	add	x6, sp, #0x18
   12274:	mov	x1, x22
   12278:	mov	x4, x21
   1227c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12280:	ldr	x5, [sp, #24]
   12284:	add	x8, x28, x26
   12288:	ldr	x9, [x8, #24]
   1228c:	cmp	x9, x5
   12290:	b.ne	122bc <__sanitizer_on_print@@Base+0x23bc>  // b.any
   12294:	ldr	x19, [x8, #16]
   12298:	ldr	w8, [x23]
   1229c:	cmp	w8, #0x2
   122a0:	b.cc	12334 <__sanitizer_on_print@@Base+0x2434>  // b.lo, b.ul, b.last
   122a4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   122a8:	add	x0, x0, #0xd81
   122ac:	mov	x1, x5
   122b0:	mov	x2, x19
   122b4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   122b8:	b	12334 <__sanitizer_on_print@@Base+0x2434>
   122bc:	cmp	x5, x20
   122c0:	b.cc	122ec <__sanitizer_on_print@@Base+0x23ec>  // b.lo, b.ul, b.last
   122c4:	cmp	x5, x19
   122c8:	b.cs	122ec <__sanitizer_on_print@@Base+0x23ec>  // b.hs, b.nlast
   122cc:	ldr	w8, [x23]
   122d0:	cmp	w8, #0x2
   122d4:	b.cc	12330 <__sanitizer_on_print@@Base+0x2430>  // b.lo, b.ul, b.last
   122d8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   122dc:	add	x0, x0, #0xdb6
   122e0:	mov	x1, x5
   122e4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   122e8:	b	12330 <__sanitizer_on_print@@Base+0x2430>
   122ec:	and	x8, x5, #0xfff
   122f0:	cmp	x8, #0x10
   122f4:	b.ne	12318 <__sanitizer_on_print@@Base+0x2418>  // b.any
   122f8:	ldp	x19, x1, [x5, #-16]
   122fc:	str	x1, [sp, #24]
   12300:	ldr	w8, [x23]
   12304:	cmp	w8, #0x2
   12308:	b.cc	12334 <__sanitizer_on_print@@Base+0x2434>  // b.lo, b.ul, b.last
   1230c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12310:	add	x0, x0, #0xdd6
   12314:	b	122b0 <__sanitizer_on_print@@Base+0x23b0>
   12318:	ldr	w8, [x23]
   1231c:	cmp	w8, #0x2
   12320:	b.cc	12330 <__sanitizer_on_print@@Base+0x2430>  // b.lo, b.ul, b.last
   12324:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12328:	add	x0, x0, #0xe0b
   1232c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12330:	mov	x19, xzr
   12334:	add	x8, x28, x26
   12338:	ldr	x8, [x8, #8]
   1233c:	ldr	x9, [sp, #24]
   12340:	add	x0, x8, x25, lsl #4
   12344:	stp	x9, x19, [x0]
   12348:	b	1221c <__sanitizer_on_print@@Base+0x231c>
   1234c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12350:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12354:	add	x0, x0, #0xeac
   12358:	add	x2, x2, #0xf05
   1235c:	mov	w1, #0x3d                  	// #61
   12360:	mov	w4, #0x100000              	// #1048576
   12364:	mov	x3, x24
   12368:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1236c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   12370:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12374:	add	x0, x0, #0xbf8
   12378:	add	x2, x2, #0x47b
   1237c:	mov	w1, #0x18a                 	// #394
   12380:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12384:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   12388:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1238c:	add	x0, x0, #0xbf8
   12390:	add	x2, x2, #0x49d
   12394:	mov	w1, #0x18b                 	// #395
   12398:	mov	x4, x8
   1239c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   123a0:	str	x30, [sp, #-32]!
   123a4:	stp	x20, x19, [sp, #16]
   123a8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   123ac:	ldr	x8, [x8, #4056]
   123b0:	ldrb	w8, [x8, #121]
   123b4:	cbz	w8, 123fc <__sanitizer_on_print@@Base+0x24fc>
   123b8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   123bc:	ldr	x8, [x8, #3872]
   123c0:	mov	x19, x1
   123c4:	mov	x20, x0
   123c8:	ldr	w8, [x8]
   123cc:	cmp	w8, #0x2
   123d0:	b.cc	123e8 <__sanitizer_on_print@@Base+0x24e8>  // b.lo, b.ul, b.last
   123d4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   123d8:	add	x0, x0, #0xe36
   123dc:	mov	x1, x20
   123e0:	mov	x2, x19
   123e4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   123e8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   123ec:	ldr	x8, [x8, #3720]
   123f0:	mrs	x9, tpidr_el0
   123f4:	add	x8, x9, x8
   123f8:	stp	x19, x20, [x8, #16]
   123fc:	ldp	x20, x19, [sp, #16]
   12400:	ldr	x30, [sp], #32
   12404:	ret
   12408:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1240c:	ldr	x8, [x8, #3720]
   12410:	mrs	x9, tpidr_el0
   12414:	add	x0, x9, x8
   12418:	ret
   1241c:	ldr	x8, [x0]
   12420:	cmn	x8, #0x1
   12424:	cset	w0, eq  // eq = none
   12428:	ret
   1242c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12430:	add	x8, x8, #0x858
   12434:	str	w1, [x0, #8]
   12438:	str	xzr, [x0, #16]
   1243c:	str	wzr, [x0, #24]
   12440:	stp	xzr, xzr, [x0, #32]
   12444:	str	wzr, [x0, #112]
   12448:	strb	wzr, [x0, #116]
   1244c:	stp	xzr, xzr, [x0, #120]
   12450:	strb	wzr, [x0, #48]
   12454:	str	x8, [x0]
   12458:	dmb	ish
   1245c:	str	wzr, [x0, #136]
   12460:	ret
   12464:	str	x30, [sp, #-16]!
   12468:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1246c:	add	x8, x8, #0x858
   12470:	str	x8, [x0]
   12474:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12478:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1247c:	add	x0, x0, #0xf25
   12480:	add	x2, x2, #0x47c
   12484:	mov	w1, #0x1c                  	// #28
   12488:	mov	x3, xzr
   1248c:	mov	x4, xzr
   12490:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12494:	stp	x30, x19, [sp, #-16]!
   12498:	mov	x19, x0
   1249c:	strb	wzr, [x0, #48]!
   124a0:	cbz	x1, 124b0 <__sanitizer_on_print@@Base+0x25b0>
   124a4:	mov	w2, #0x40                  	// #64
   124a8:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   124ac:	strb	wzr, [x19, #111]
   124b0:	ldp	x30, x19, [sp], #16
   124b4:	ret
   124b8:	str	x30, [sp, #-16]!
   124bc:	ldr	w8, [x0, #112]
   124c0:	orr	w8, w8, #0x1
   124c4:	cmp	w8, #0x3
   124c8:	b.ne	124e8 <__sanitizer_on_print@@Base+0x25e8>  // b.any
   124cc:	ldr	x8, [x0]
   124d0:	mov	w9, #0x4                   	// #4
   124d4:	str	w9, [x0, #112]
   124d8:	str	xzr, [x0, #40]
   124dc:	ldr	x1, [x8]
   124e0:	ldr	x30, [sp], #16
   124e4:	br	x1
   124e8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   124ec:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   124f0:	add	x0, x0, #0xf25
   124f4:	add	x2, x2, #0xf81
   124f8:	mov	w1, #0x29                  	// #41
   124fc:	mov	x3, xzr
   12500:	mov	x4, xzr
   12504:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12508:	mov	w8, #0x1                   	// #1
   1250c:	dmb	ish
   12510:	str	w8, [x0, #136]
   12514:	ret
   12518:	ldr	w8, [x0, #136]
   1251c:	dmb	ish
   12520:	cmp	w8, #0x0
   12524:	cset	w0, ne  // ne = any
   12528:	ret
   1252c:	str	x30, [sp, #-16]!
   12530:	ldrb	w4, [x0, #116]
   12534:	cbnz	x4, 12560 <__sanitizer_on_print@@Base+0x2660>
   12538:	ldr	w4, [x0, #112]
   1253c:	cmp	w4, #0x3
   12540:	b.ne	1257c <__sanitizer_on_print@@Base+0x267c>  // b.any
   12544:	ldr	x8, [x0]
   12548:	mov	w9, #0x4                   	// #4
   1254c:	str	w9, [x0, #112]
   12550:	str	xzr, [x0, #40]
   12554:	ldr	x2, [x8, #8]
   12558:	ldr	x30, [sp], #16
   1255c:	br	x2
   12560:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12564:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12568:	add	x0, x0, #0xf25
   1256c:	add	x2, x2, #0xfcc
   12570:	mov	w1, #0x39                  	// #57
   12574:	mov	x3, xzr
   12578:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1257c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12580:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12584:	add	x0, x0, #0xf25
   12588:	add	x2, x2, #0xfe6
   1258c:	mov	w1, #0x3a                  	// #58
   12590:	mov	w3, #0x3                   	// #3
   12594:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12598:	ldrb	w8, [x0, #116]
   1259c:	cbz	w8, 125ac <__sanitizer_on_print@@Base+0x26ac>
   125a0:	ldr	w8, [x0, #112]
   125a4:	cmp	w8, #0x1
   125a8:	b.ne	125b4 <__sanitizer_on_print@@Base+0x26b4>  // b.any
   125ac:	mov	w8, #0x3                   	// #3
   125b0:	str	w8, [x0, #112]
   125b4:	ldr	x8, [x0]
   125b8:	ldr	x1, [x8, #16]
   125bc:	br	x1
   125c0:	ldr	x9, [x0]
   125c4:	mov	w8, #0x2                   	// #2
   125c8:	str	w8, [x0, #112]
   125cc:	str	x1, [x0, #32]
   125d0:	str	w2, [x0, #120]
   125d4:	ldr	x2, [x9, #24]
   125d8:	mov	x1, x3
   125dc:	br	x2
   125e0:	ldr	w10, [x0, #8]
   125e4:	and	w8, w3, #0x1
   125e8:	mov	w9, #0x1                   	// #1
   125ec:	str	w9, [x0, #112]
   125f0:	str	x1, [x0, #40]
   125f4:	str	x2, [x0, #16]
   125f8:	strb	w8, [x0, #116]
   125fc:	cbz	w10, 12604 <__sanitizer_on_print@@Base+0x2704>
   12600:	str	w4, [x0, #124]
   12604:	ldr	x8, [x0]
   12608:	mov	x1, x5
   1260c:	ldr	x2, [x8, #32]
   12610:	br	x2
   12614:	str	wzr, [x0, #112]
   12618:	strb	wzr, [x0, #48]
   1261c:	dmb	ish
   12620:	str	wzr, [x0, #136]
   12624:	ldr	x8, [x0]
   12628:	ldr	x1, [x8, #40]
   1262c:	br	x1
   12630:	stp	x30, x19, [sp, #-16]!
   12634:	mov	x19, x0
   12638:	str	x1, [x0]
   1263c:	stp	w2, w3, [x0, #8]
   12640:	str	w4, [x0, #16]
   12644:	add	x0, x0, #0x18
   12648:	bl	d5f4 <__sanitizer_set_report_fd@@Base+0x3d40>
   1264c:	ldr	w8, [x19, #8]
   12650:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12654:	movi	v0.2d, #0x0
   12658:	add	x1, x1, #0xd
   1265c:	lsl	x0, x8, #3
   12660:	mov	w2, wzr
   12664:	str	wzr, [x19, #112]
   12668:	stur	q0, [x19, #120]
   1266c:	stur	q0, [x19, #136]
   12670:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   12674:	movi	v0.2d, #0x0
   12678:	stur	q0, [x19, #168]
   1267c:	stp	x0, xzr, [x19, #152]
   12680:	str	q0, [x19, #192]
   12684:	str	xzr, [x19, #184]
   12688:	ldp	x30, x19, [sp], #16
   1268c:	ret
   12690:	stp	x30, x23, [sp, #-48]!
   12694:	stp	x22, x21, [sp, #16]
   12698:	stp	x20, x19, [sp, #32]
   1269c:	add	x20, x0, #0x18
   126a0:	mov	x21, x0
   126a4:	mov	x0, x20
   126a8:	mov	x19, x3
   126ac:	mov	x22, x2
   126b0:	mov	x23, x1
   126b4:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   126b8:	cbz	x23, 126c4 <__sanitizer_on_print@@Base+0x27c4>
   126bc:	ldr	w8, [x21, #112]
   126c0:	str	x8, [x23]
   126c4:	cbz	x22, 126d0 <__sanitizer_on_print@@Base+0x27d0>
   126c8:	ldr	x8, [x21, #144]
   126cc:	str	x8, [x22]
   126d0:	cbz	x19, 126dc <__sanitizer_on_print@@Base+0x27dc>
   126d4:	ldr	x8, [x21, #128]
   126d8:	str	x8, [x19]
   126dc:	mov	x0, x20
   126e0:	ldp	x20, x19, [sp, #32]
   126e4:	ldp	x22, x21, [sp, #16]
   126e8:	ldp	x30, x23, [sp], #48
   126ec:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   126f0:	str	x30, [sp, #-32]!
   126f4:	stp	x20, x19, [sp, #16]
   126f8:	add	x20, x0, #0x18
   126fc:	mov	x19, x0
   12700:	mov	x0, x20
   12704:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12708:	ldr	x19, [x19, #136]
   1270c:	mov	x0, x20
   12710:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12714:	mov	x0, x19
   12718:	ldp	x20, x19, [sp, #16]
   1271c:	ldr	x30, [sp], #32
   12720:	ret
   12724:	stp	x30, x25, [sp, #-64]!
   12728:	stp	x24, x23, [sp, #16]
   1272c:	stp	x22, x21, [sp, #32]
   12730:	stp	x20, x19, [sp, #48]
   12734:	add	x20, x0, #0x18
   12738:	mov	x25, x0
   1273c:	mov	x0, x20
   12740:	mov	x19, x4
   12744:	mov	w22, w3
   12748:	mov	w24, w2
   1274c:	mov	x23, x1
   12750:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12754:	ldr	x8, [x25, #184]
   12758:	cbz	x8, 127b4 <__sanitizer_on_print@@Base+0x28b4>
   1275c:	ldr	x0, [x25, #192]
   12760:	ldr	x9, [x0, #128]
   12764:	str	x9, [x25, #192]
   12768:	cbz	x9, 127a4 <__sanitizer_on_print@@Base+0x28a4>
   1276c:	sub	x8, x8, #0x1
   12770:	str	x8, [x25, #184]
   12774:	cbz	x0, 127b4 <__sanitizer_on_print@@Base+0x28b4>
   12778:	ldr	w21, [x0, #8]
   1277c:	cmn	w21, #0x1
   12780:	b.ne	127e4 <__sanitizer_on_print@@Base+0x28e4>  // b.any
   12784:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12788:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1278c:	add	x0, x0, #0xf25
   12790:	add	x2, x2, #0x5e
   12794:	mov	w1, #0x9e                  	// #158
   12798:	mov	w4, #0xffffffff            	// #-1
   1279c:	mov	x3, x21
   127a0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   127a4:	str	xzr, [x25, #200]
   127a8:	sub	x8, x8, #0x1
   127ac:	str	x8, [x25, #184]
   127b0:	cbnz	x0, 12778 <__sanitizer_on_print@@Base+0x2878>
   127b4:	ldr	w21, [x25, #112]
   127b8:	ldr	w2, [x25, #8]
   127bc:	cmp	w21, w2
   127c0:	b.cs	128b4 <__sanitizer_on_print@@Base+0x29b4>  // b.hs, b.nlast
   127c4:	ldr	x8, [x25]
   127c8:	add	w9, w21, #0x1
   127cc:	mov	w0, w21
   127d0:	str	w9, [x25, #112]
   127d4:	blr	x8
   127d8:	ldr	x8, [x25, #152]
   127dc:	str	x0, [x8, x21, lsl #3]
   127e0:	cbz	x0, 128d0 <__sanitizer_on_print@@Base+0x29d0>
   127e4:	ldr	w4, [x25, #8]
   127e8:	cmp	w21, w4
   127ec:	b.cs	1287c <__sanitizer_on_print@@Base+0x297c>  // b.hs, b.nlast
   127f0:	ldr	w3, [x0, #112]
   127f4:	cbnz	w3, 12898 <__sanitizer_on_print@@Base+0x2998>
   127f8:	ldp	x8, x9, [x25, #128]
   127fc:	add	x3, x8, #0x1
   12800:	cmp	x9, x3
   12804:	str	x3, [x25, #128]
   12808:	b.cs	1281c <__sanitizer_on_print@@Base+0x291c>  // b.hs, b.nlast
   1280c:	add	x4, x9, #0x1
   12810:	cmp	x8, x9
   12814:	str	x4, [x25, #136]
   12818:	b.ne	128f0 <__sanitizer_on_print@@Base+0x29f0>  // b.any
   1281c:	ldr	x8, [x25, #120]
   12820:	and	w9, w24, #0x1
   12824:	add	x10, x8, #0x1
   12828:	str	x10, [x25, #120]
   1282c:	ldr	w11, [x0, #8]
   12830:	mov	w10, #0x1                   	// #1
   12834:	str	w10, [x0, #112]
   12838:	str	x23, [x0, #40]
   1283c:	str	x8, [x0, #16]
   12840:	strb	w9, [x0, #116]
   12844:	cbz	w11, 1284c <__sanitizer_on_print@@Base+0x294c>
   12848:	str	w22, [x0, #124]
   1284c:	ldr	x8, [x0]
   12850:	mov	x1, x19
   12854:	ldr	x8, [x8, #32]
   12858:	blr	x8
   1285c:	mov	x0, x20
   12860:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12864:	mov	w0, w21
   12868:	ldp	x20, x19, [sp, #48]
   1286c:	ldp	x22, x21, [sp, #32]
   12870:	ldp	x24, x23, [sp, #16]
   12874:	ldp	x30, x25, [sp], #64
   12878:	ret
   1287c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12880:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12884:	add	x0, x0, #0xf25
   12888:	add	x2, x2, #0x79
   1288c:	mov	w1, #0x9f                  	// #159
   12890:	mov	x3, x21
   12894:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12898:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1289c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   128a0:	add	x0, x0, #0xf25
   128a4:	add	x2, x2, #0x94
   128a8:	mov	w1, #0xa0                  	// #160
   128ac:	mov	x4, xzr
   128b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   128b4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   128b8:	ldr	x8, [x8, #4024]
   128bc:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   128c0:	add	x0, x0, #0x1c
   128c4:	ldr	x1, [x8]
   128c8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   128cc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   128d0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   128d4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   128d8:	add	x0, x0, #0xf25
   128dc:	add	x2, x2, #0x4c
   128e0:	mov	w1, #0x9d                  	// #157
   128e4:	mov	x3, xzr
   128e8:	mov	x4, xzr
   128ec:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   128f0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   128f4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   128f8:	add	x0, x0, #0xf25
   128fc:	add	x2, x2, #0xc0
   12900:	mov	w1, #0xa4                  	// #164
   12904:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12908:	ldr	x9, [x0, #184]
   1290c:	cbz	x9, 12930 <__sanitizer_on_print@@Base+0x2a30>
   12910:	mov	x8, x0
   12914:	ldr	x0, [x0, #192]
   12918:	ldr	x10, [x0, #128]
   1291c:	str	x10, [x8, #192]
   12920:	cbz	x10, 12938 <__sanitizer_on_print@@Base+0x2a38>
   12924:	sub	x9, x9, #0x1
   12928:	str	x9, [x8, #184]
   1292c:	ret
   12930:	mov	x0, xzr
   12934:	ret
   12938:	str	xzr, [x8, #200]
   1293c:	sub	x9, x9, #0x1
   12940:	str	x9, [x8, #184]
   12944:	ret
   12948:	str	x30, [sp, #-48]!
   1294c:	stp	x22, x21, [sp, #16]
   12950:	stp	x20, x19, [sp, #32]
   12954:	mov	x21, x0
   12958:	add	x0, x0, #0x18
   1295c:	mov	x19, x2
   12960:	mov	x20, x1
   12964:	bl	d6fc <__sanitizer_set_report_fd@@Base+0x3e48>
   12968:	ldr	w8, [x21, #112]
   1296c:	cbz	w8, 129a0 <__sanitizer_on_print@@Base+0x2aa0>
   12970:	mov	x22, xzr
   12974:	b	12984 <__sanitizer_on_print@@Base+0x2a84>
   12978:	add	x22, x22, #0x1
   1297c:	cmp	x22, w8, uxtw
   12980:	b.cs	129a0 <__sanitizer_on_print@@Base+0x2aa0>  // b.hs, b.nlast
   12984:	ldr	x9, [x21, #152]
   12988:	ldr	x0, [x9, x22, lsl #3]
   1298c:	cbz	x0, 12978 <__sanitizer_on_print@@Base+0x2a78>
   12990:	mov	x1, x19
   12994:	blr	x20
   12998:	ldr	w8, [x21, #112]
   1299c:	b	12978 <__sanitizer_on_print@@Base+0x2a78>
   129a0:	ldp	x20, x19, [sp, #32]
   129a4:	ldp	x22, x21, [sp, #16]
   129a8:	ldr	x30, [sp], #48
   129ac:	ret
   129b0:	str	x30, [sp, #-64]!
   129b4:	stp	x24, x23, [sp, #16]
   129b8:	stp	x22, x21, [sp, #32]
   129bc:	stp	x20, x19, [sp, #48]
   129c0:	add	x19, x0, #0x18
   129c4:	mov	x22, x0
   129c8:	mov	x0, x19
   129cc:	mov	x20, x2
   129d0:	mov	x21, x1
   129d4:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   129d8:	ldr	w8, [x22, #112]
   129dc:	cbz	w8, 12a18 <__sanitizer_on_print@@Base+0x2b18>
   129e0:	mov	x24, xzr
   129e4:	b	129f4 <__sanitizer_on_print@@Base+0x2af4>
   129e8:	add	x24, x24, #0x1
   129ec:	cmp	x24, w8, uxtw
   129f0:	b.cs	12a18 <__sanitizer_on_print@@Base+0x2b18>  // b.hs, b.nlast
   129f4:	ldr	x9, [x22, #152]
   129f8:	ldr	x23, [x9, x24, lsl #3]
   129fc:	cbz	x23, 129e8 <__sanitizer_on_print@@Base+0x2ae8>
   12a00:	mov	x0, x23
   12a04:	mov	x1, x20
   12a08:	blr	x21
   12a0c:	tbnz	w0, #0, 12a20 <__sanitizer_on_print@@Base+0x2b20>
   12a10:	ldr	w8, [x22, #112]
   12a14:	b	129e8 <__sanitizer_on_print@@Base+0x2ae8>
   12a18:	mov	w20, #0xffffffff            	// #-1
   12a1c:	b	12a24 <__sanitizer_on_print@@Base+0x2b24>
   12a20:	ldr	w20, [x23, #8]
   12a24:	mov	x0, x19
   12a28:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12a2c:	mov	w0, w20
   12a30:	ldp	x20, x19, [sp, #48]
   12a34:	ldp	x22, x21, [sp, #32]
   12a38:	ldp	x24, x23, [sp, #16]
   12a3c:	ldr	x30, [sp], #64
   12a40:	ret
   12a44:	stp	x30, x23, [sp, #-48]!
   12a48:	stp	x22, x21, [sp, #16]
   12a4c:	stp	x20, x19, [sp, #32]
   12a50:	mov	x21, x0
   12a54:	add	x0, x0, #0x18
   12a58:	mov	x19, x2
   12a5c:	mov	x20, x1
   12a60:	bl	d6fc <__sanitizer_set_report_fd@@Base+0x3e48>
   12a64:	ldr	w8, [x21, #112]
   12a68:	cbz	w8, 12aa4 <__sanitizer_on_print@@Base+0x2ba4>
   12a6c:	mov	x23, xzr
   12a70:	b	12a84 <__sanitizer_on_print@@Base+0x2b84>
   12a74:	ldr	w8, [x21, #112]
   12a78:	add	x23, x23, #0x1
   12a7c:	cmp	x23, w8, uxtw
   12a80:	b.cs	12aa4 <__sanitizer_on_print@@Base+0x2ba4>  // b.hs, b.nlast
   12a84:	ldr	x9, [x21, #152]
   12a88:	ldr	x22, [x9, x23, lsl #3]
   12a8c:	cbz	x22, 12a78 <__sanitizer_on_print@@Base+0x2b78>
   12a90:	mov	x0, x22
   12a94:	mov	x1, x19
   12a98:	blr	x20
   12a9c:	tbz	w0, #0, 12a74 <__sanitizer_on_print@@Base+0x2b74>
   12aa0:	b	12aa8 <__sanitizer_on_print@@Base+0x2ba8>
   12aa4:	mov	x22, xzr
   12aa8:	mov	x0, x22
   12aac:	ldp	x20, x19, [sp, #32]
   12ab0:	ldp	x22, x21, [sp, #16]
   12ab4:	ldp	x30, x23, [sp], #48
   12ab8:	ret
   12abc:	str	x30, [sp, #-32]!
   12ac0:	stp	x20, x19, [sp, #16]
   12ac4:	mov	x20, x0
   12ac8:	add	x0, x0, #0x18
   12acc:	mov	x19, x1
   12ad0:	bl	d6fc <__sanitizer_set_report_fd@@Base+0x3e48>
   12ad4:	ldr	w8, [x20, #112]
   12ad8:	cbz	w8, 12b1c <__sanitizer_on_print@@Base+0x2c1c>
   12adc:	ldr	x9, [x20, #152]
   12ae0:	b	12af0 <__sanitizer_on_print@@Base+0x2bf0>
   12ae4:	subs	x8, x8, #0x1
   12ae8:	add	x9, x9, #0x8
   12aec:	b.eq	12b1c <__sanitizer_on_print@@Base+0x2c1c>  // b.none
   12af0:	ldr	x0, [x9]
   12af4:	cbz	x0, 12ae4 <__sanitizer_on_print@@Base+0x2be4>
   12af8:	ldr	x10, [x0, #32]
   12afc:	cmp	x10, x19
   12b00:	b.ne	12ae4 <__sanitizer_on_print@@Base+0x2be4>  // b.any
   12b04:	ldr	w10, [x0, #112]
   12b08:	tst	w10, #0xfffffffb
   12b0c:	b.eq	12ae4 <__sanitizer_on_print@@Base+0x2be4>  // b.none
   12b10:	ldp	x20, x19, [sp, #16]
   12b14:	ldr	x30, [sp], #32
   12b18:	ret
   12b1c:	mov	x0, xzr
   12b20:	ldp	x20, x19, [sp, #16]
   12b24:	ldr	x30, [sp], #32
   12b28:	ret
   12b2c:	str	x30, [sp, #-48]!
   12b30:	stp	x22, x21, [sp, #16]
   12b34:	stp	x20, x19, [sp, #32]
   12b38:	add	x19, x0, #0x18
   12b3c:	mov	x21, x0
   12b40:	mov	x0, x19
   12b44:	mov	x20, x2
   12b48:	mov	w22, w1
   12b4c:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12b50:	ldr	w4, [x21, #112]
   12b54:	mov	w3, w22
   12b58:	cmp	w4, w22
   12b5c:	b.ls	12ba8 <__sanitizer_on_print@@Base+0x2ca8>  // b.plast
   12b60:	ldr	x8, [x21, #152]
   12b64:	ldr	x21, [x8, x3, lsl #3]
   12b68:	cbz	x21, 12bc0 <__sanitizer_on_print@@Base+0x2cc0>
   12b6c:	ldr	w4, [x21, #112]
   12b70:	cmp	w4, #0x2
   12b74:	b.ne	12be0 <__sanitizer_on_print@@Base+0x2ce0>  // b.any
   12b78:	mov	x0, x21
   12b7c:	strb	wzr, [x0, #48]!
   12b80:	cbz	x20, 12b94 <__sanitizer_on_print@@Base+0x2c94>
   12b84:	mov	w2, #0x40                  	// #64
   12b88:	mov	x1, x20
   12b8c:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   12b90:	strb	wzr, [x21, #111]
   12b94:	mov	x0, x19
   12b98:	ldp	x20, x19, [sp, #32]
   12b9c:	ldp	x22, x21, [sp, #16]
   12ba0:	ldr	x30, [sp], #48
   12ba4:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12ba8:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12bac:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12bb0:	add	x0, x0, #0xf25
   12bb4:	add	x2, x2, #0xed
   12bb8:	mov	w1, #0xd8                  	// #216
   12bbc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12bc0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12bc4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12bc8:	add	x0, x0, #0xf25
   12bcc:	add	x2, x2, #0x4c
   12bd0:	mov	w1, #0xda                  	// #218
   12bd4:	mov	x3, xzr
   12bd8:	mov	x4, xzr
   12bdc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12be0:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12be4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12be8:	add	x0, x0, #0xf25
   12bec:	add	x2, x2, #0x107
   12bf0:	mov	w1, #0xdc                  	// #220
   12bf4:	mov	w3, #0x2                   	// #2
   12bf8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12bfc:	str	x30, [sp, #-48]!
   12c00:	stp	x22, x21, [sp, #16]
   12c04:	stp	x20, x19, [sp, #32]
   12c08:	add	x19, x0, #0x18
   12c0c:	mov	x22, x0
   12c10:	mov	x0, x19
   12c14:	mov	x20, x2
   12c18:	mov	x21, x1
   12c1c:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12c20:	ldr	w8, [x22, #112]
   12c24:	cbz	w8, 12c78 <__sanitizer_on_print@@Base+0x2d78>
   12c28:	ldr	x9, [x22, #152]
   12c2c:	mov	x10, xzr
   12c30:	b	12c40 <__sanitizer_on_print@@Base+0x2d40>
   12c34:	add	x10, x10, #0x1
   12c38:	cmp	x10, x8
   12c3c:	b.cs	12c78 <__sanitizer_on_print@@Base+0x2d78>  // b.hs, b.nlast
   12c40:	ldr	x22, [x9, x10, lsl #3]
   12c44:	cbz	x22, 12c34 <__sanitizer_on_print@@Base+0x2d34>
   12c48:	ldr	x11, [x22, #40]
   12c4c:	cmp	x11, x21
   12c50:	b.ne	12c34 <__sanitizer_on_print@@Base+0x2d34>  // b.any
   12c54:	ldr	w11, [x22, #112]
   12c58:	cbz	w11, 12c34 <__sanitizer_on_print@@Base+0x2d34>
   12c5c:	mov	x0, x22
   12c60:	strb	wzr, [x0, #48]!
   12c64:	cbz	x20, 12c78 <__sanitizer_on_print@@Base+0x2d78>
   12c68:	mov	w2, #0x40                  	// #64
   12c6c:	mov	x1, x20
   12c70:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   12c74:	strb	wzr, [x22, #111]
   12c78:	mov	x0, x19
   12c7c:	ldp	x20, x19, [sp, #32]
   12c80:	ldp	x22, x21, [sp, #16]
   12c84:	ldr	x30, [sp], #48
   12c88:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12c8c:	str	x30, [sp, #-48]!
   12c90:	stp	x22, x21, [sp, #16]
   12c94:	stp	x20, x19, [sp, #32]
   12c98:	add	x19, x0, #0x18
   12c9c:	mov	x20, x0
   12ca0:	mov	x0, x19
   12ca4:	mov	x22, x2
   12ca8:	mov	w21, w1
   12cac:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12cb0:	ldr	w4, [x20, #112]
   12cb4:	mov	w3, w21
   12cb8:	cmp	w4, w21
   12cbc:	b.ls	12d58 <__sanitizer_on_print@@Base+0x2e58>  // b.plast
   12cc0:	ldr	x8, [x20, #152]
   12cc4:	ldr	x21, [x8, x3, lsl #3]
   12cc8:	cbz	x21, 12d70 <__sanitizer_on_print@@Base+0x2e70>
   12ccc:	ldr	w8, [x21, #112]
   12cd0:	cbz	w8, 12d20 <__sanitizer_on_print@@Base+0x2e20>
   12cd4:	ldr	x8, [x21]
   12cd8:	mov	x0, x21
   12cdc:	mov	x1, x22
   12ce0:	ldr	x8, [x8, #48]
   12ce4:	blr	x8
   12ce8:	ldr	w8, [x21, #112]
   12cec:	cmp	w8, #0x3
   12cf0:	b.ne	12d3c <__sanitizer_on_print@@Base+0x2e3c>  // b.any
   12cf4:	ldr	x8, [x21]
   12cf8:	mov	w9, #0x4                   	// #4
   12cfc:	str	w9, [x21, #112]
   12d00:	str	xzr, [x21, #40]
   12d04:	ldr	x8, [x8]
   12d08:	mov	x0, x21
   12d0c:	blr	x8
   12d10:	mov	x0, x20
   12d14:	mov	x1, x21
   12d18:	bl	12d90 <__sanitizer_on_print@@Base+0x2e90>
   12d1c:	b	12d44 <__sanitizer_on_print@@Base+0x2e44>
   12d20:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12d24:	ldr	x8, [x8, #4024]
   12d28:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12d2c:	add	x0, x0, #0x14d
   12d30:	ldr	x1, [x8]
   12d34:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12d38:	b	12d44 <__sanitizer_on_print@@Base+0x2e44>
   12d3c:	mov	w8, #0x1                   	// #1
   12d40:	strb	w8, [x21, #116]
   12d44:	mov	x0, x19
   12d48:	ldp	x20, x19, [sp, #32]
   12d4c:	ldp	x22, x21, [sp, #16]
   12d50:	ldr	x30, [sp], #48
   12d54:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12d58:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12d5c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12d60:	add	x0, x0, #0xf25
   12d64:	add	x2, x2, #0xed
   12d68:	mov	w1, #0xee                  	// #238
   12d6c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12d70:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12d74:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12d78:	add	x0, x0, #0xf25
   12d7c:	add	x2, x2, #0x4c
   12d80:	mov	w1, #0xf0                  	// #240
   12d84:	mov	x3, xzr
   12d88:	mov	x4, xzr
   12d8c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12d90:	str	x30, [sp, #-32]!
   12d94:	stp	x20, x19, [sp, #16]
   12d98:	ldr	w8, [x1, #8]
   12d9c:	cbz	w8, 12dd0 <__sanitizer_on_print@@Base+0x2ed0>
   12da0:	ldr	x8, [x0, #160]
   12da4:	mov	x19, x0
   12da8:	str	xzr, [x1, #128]
   12dac:	cbz	x8, 12ddc <__sanitizer_on_print@@Base+0x2edc>
   12db0:	ldr	x9, [x19, #176]
   12db4:	add	x8, x8, #0x1
   12db8:	str	x1, [x9, #128]
   12dbc:	str	x1, [x19, #176]
   12dc0:	ldr	w9, [x19, #12]
   12dc4:	str	x8, [x19, #160]
   12dc8:	cmp	x8, x9
   12dcc:	b.hi	12df4 <__sanitizer_on_print@@Base+0x2ef4>  // b.pmore
   12dd0:	ldp	x20, x19, [sp, #16]
   12dd4:	ldr	x30, [sp], #32
   12dd8:	ret
   12ddc:	stp	x1, x1, [x19, #168]
   12de0:	mov	w8, #0x1                   	// #1
   12de4:	ldr	w9, [x19, #12]
   12de8:	str	x8, [x19, #160]
   12dec:	cmp	x8, x9
   12df0:	b.ls	12dd0 <__sanitizer_on_print@@Base+0x2ed0>  // b.plast
   12df4:	ldr	x20, [x19, #168]
   12df8:	ldr	x9, [x20, #128]
   12dfc:	str	x9, [x19, #168]
   12e00:	cbnz	x9, 12e08 <__sanitizer_on_print@@Base+0x2f08>
   12e04:	str	xzr, [x19, #176]
   12e08:	sub	x8, x8, #0x1
   12e0c:	str	x8, [x19, #160]
   12e10:	ldr	w3, [x20, #112]
   12e14:	cmp	w3, #0x4
   12e18:	b.ne	12e9c <__sanitizer_on_print@@Base+0x2f9c>  // b.any
   12e1c:	str	wzr, [x20, #112]
   12e20:	strb	wzr, [x20, #48]
   12e24:	dmb	ish
   12e28:	str	wzr, [x20, #136]
   12e2c:	ldr	x8, [x20]
   12e30:	mov	x0, x20
   12e34:	ldr	x8, [x8, #40]
   12e38:	blr	x8
   12e3c:	ldr	w8, [x20, #24]
   12e40:	add	w8, w8, #0x1
   12e44:	str	w8, [x20, #24]
   12e48:	ldr	w9, [x19, #16]
   12e4c:	sub	w9, w9, #0x1
   12e50:	cmp	w9, w8
   12e54:	b.cc	12dd0 <__sanitizer_on_print@@Base+0x2ed0>  // b.lo, b.ul, b.last
   12e58:	ldr	x8, [x19, #184]
   12e5c:	str	xzr, [x20, #128]
   12e60:	cbz	x8, 12e84 <__sanitizer_on_print@@Base+0x2f84>
   12e64:	ldr	x9, [x19, #200]
   12e68:	add	x8, x8, #0x1
   12e6c:	str	x20, [x9, #128]
   12e70:	str	x20, [x19, #200]
   12e74:	str	x8, [x19, #184]
   12e78:	ldp	x20, x19, [sp, #16]
   12e7c:	ldr	x30, [sp], #32
   12e80:	ret
   12e84:	stp	x20, x20, [x19, #192]
   12e88:	mov	w8, #0x1                   	// #1
   12e8c:	str	x8, [x19, #184]
   12e90:	ldp	x20, x19, [sp, #16]
   12e94:	ldr	x30, [sp], #32
   12e98:	ret
   12e9c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12ea0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12ea4:	add	x0, x0, #0xf25
   12ea8:	add	x2, x2, #0x221
   12eac:	mov	w1, #0x144                 	// #324
   12eb0:	mov	w4, #0x4                   	// #4
   12eb4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12eb8:	str	x30, [sp, #-64]!
   12ebc:	stp	x24, x23, [sp, #16]
   12ec0:	stp	x22, x21, [sp, #32]
   12ec4:	stp	x20, x19, [sp, #48]
   12ec8:	add	x19, x0, #0x18
   12ecc:	mov	x20, x0
   12ed0:	mov	x0, x19
   12ed4:	mov	x21, x2
   12ed8:	mov	w23, w1
   12edc:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12ee0:	ldr	w8, [x20, #112]
   12ee4:	mov	w22, w23
   12ee8:	cmp	w8, w23
   12eec:	b.ls	12f30 <__sanitizer_on_print@@Base+0x3030>  // b.plast
   12ef0:	ldr	x8, [x20, #152]
   12ef4:	ldr	x24, [x8, x22, lsl #3]
   12ef8:	cbz	x24, 12fc4 <__sanitizer_on_print@@Base+0x30c4>
   12efc:	ldr	w8, [x24, #112]
   12f00:	cbz	w8, 12f50 <__sanitizer_on_print@@Base+0x3050>
   12f04:	ldr	w8, [x24, #136]
   12f08:	dmb	ish
   12f0c:	cbnz	w8, 12f6c <__sanitizer_on_print@@Base+0x306c>
   12f10:	mov	x0, x19
   12f14:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12f18:	bl	d0b8 <__sanitizer_set_report_fd@@Base+0x3804>
   12f1c:	mov	x0, x19
   12f20:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   12f24:	ldr	w8, [x20, #112]
   12f28:	cmp	w8, w23
   12f2c:	b.hi	12ef0 <__sanitizer_on_print@@Base+0x2ff0>  // b.pmore
   12f30:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12f34:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12f38:	mov	w4, w8
   12f3c:	add	x0, x0, #0xf25
   12f40:	add	x2, x2, #0xed
   12f44:	mov	w1, #0x103                 	// #259
   12f48:	mov	x3, x22
   12f4c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12f50:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   12f54:	ldr	x8, [x8, #4024]
   12f58:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12f5c:	add	x0, x0, #0x170
   12f60:	ldr	x1, [x8]
   12f64:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   12f68:	b	12fac <__sanitizer_on_print@@Base+0x30ac>
   12f6c:	ldrb	w4, [x24, #116]
   12f70:	cbnz	x4, 12fe4 <__sanitizer_on_print@@Base+0x30e4>
   12f74:	ldr	w4, [x24, #112]
   12f78:	cmp	w4, #0x3
   12f7c:	b.ne	13000 <__sanitizer_on_print@@Base+0x3100>  // b.any
   12f80:	ldr	x8, [x24]
   12f84:	mov	w9, #0x4                   	// #4
   12f88:	str	w9, [x24, #112]
   12f8c:	str	xzr, [x24, #40]
   12f90:	ldr	x8, [x8, #8]
   12f94:	mov	x0, x24
   12f98:	mov	x1, x21
   12f9c:	blr	x8
   12fa0:	mov	x0, x20
   12fa4:	mov	x1, x24
   12fa8:	bl	12d90 <__sanitizer_on_print@@Base+0x2e90>
   12fac:	mov	x0, x19
   12fb0:	ldp	x20, x19, [sp, #48]
   12fb4:	ldp	x22, x21, [sp, #32]
   12fb8:	ldp	x24, x23, [sp, #16]
   12fbc:	ldr	x30, [sp], #64
   12fc0:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   12fc4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12fc8:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   12fcc:	add	x0, x0, #0xf25
   12fd0:	add	x2, x2, #0x4c
   12fd4:	mov	w1, #0x105                 	// #261
   12fd8:	mov	x3, xzr
   12fdc:	mov	x4, xzr
   12fe0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   12fe4:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12fe8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   12fec:	add	x0, x0, #0xf25
   12ff0:	add	x2, x2, #0xfcc
   12ff4:	mov	w1, #0x39                  	// #57
   12ff8:	mov	x3, xzr
   12ffc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13000:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13004:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13008:	add	x0, x0, #0xf25
   1300c:	add	x2, x2, #0xfe6
   13010:	mov	w1, #0x3a                  	// #58
   13014:	mov	w3, #0x3                   	// #3
   13018:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1301c:	stp	x30, x21, [sp, #-32]!
   13020:	stp	x20, x19, [sp, #16]
   13024:	add	x19, x0, #0x18
   13028:	mov	x20, x0
   1302c:	mov	x0, x19
   13030:	mov	w21, w1
   13034:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   13038:	ldr	x8, [x20, #128]
   1303c:	cbz	x8, 13120 <__sanitizer_on_print@@Base+0x3220>
   13040:	ldr	w4, [x20, #112]
   13044:	sub	x8, x8, #0x1
   13048:	mov	w3, w21
   1304c:	str	x8, [x20, #128]
   13050:	cmp	w4, w21
   13054:	b.ls	13138 <__sanitizer_on_print@@Base+0x3238>  // b.plast
   13058:	ldr	x8, [x20, #152]
   1305c:	ldr	x21, [x8, x3, lsl #3]
   13060:	cbz	x21, 13150 <__sanitizer_on_print@@Base+0x3250>
   13064:	ldr	w3, [x21, #112]
   13068:	cmp	w3, #0x2
   1306c:	b.ne	13090 <__sanitizer_on_print@@Base+0x3190>  // b.any
   13070:	ldr	x8, [x20, #144]
   13074:	cbz	x8, 1319c <__sanitizer_on_print@@Base+0x329c>
   13078:	ldrb	w9, [x21, #116]
   1307c:	sub	x8, x8, #0x1
   13080:	str	x8, [x20, #144]
   13084:	cbz	w9, 13104 <__sanitizer_on_print@@Base+0x3204>
   13088:	ldr	x8, [x21]
   1308c:	b	130a4 <__sanitizer_on_print@@Base+0x31a4>
   13090:	cmp	w3, #0x1
   13094:	b.ne	13168 <__sanitizer_on_print@@Base+0x3268>  // b.any
   13098:	ldr	x8, [x21]
   1309c:	mov	w9, #0x3                   	// #3
   130a0:	str	w9, [x21, #112]
   130a4:	ldr	x8, [x8, #16]
   130a8:	mov	x0, x21
   130ac:	blr	x8
   130b0:	ldr	w8, [x21, #112]
   130b4:	orr	w8, w8, #0x1
   130b8:	cmp	w8, #0x3
   130bc:	b.ne	13184 <__sanitizer_on_print@@Base+0x3284>  // b.any
   130c0:	ldr	x8, [x21]
   130c4:	mov	w9, #0x4                   	// #4
   130c8:	str	w9, [x21, #112]
   130cc:	str	xzr, [x21, #40]
   130d0:	ldr	x8, [x8]
   130d4:	mov	x0, x21
   130d8:	blr	x8
   130dc:	mov	x0, x20
   130e0:	mov	x1, x21
   130e4:	bl	12d90 <__sanitizer_on_print@@Base+0x2e90>
   130e8:	mov	w8, #0x1                   	// #1
   130ec:	dmb	ish
   130f0:	str	w8, [x21, #136]
   130f4:	mov	x0, x19
   130f8:	ldp	x20, x19, [sp, #16]
   130fc:	ldp	x30, x21, [sp], #32
   13100:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   13104:	ldr	x8, [x21]
   13108:	mov	w9, #0x3                   	// #3
   1310c:	str	w9, [x21, #112]
   13110:	mov	x0, x21
   13114:	ldr	x8, [x8, #16]
   13118:	blr	x8
   1311c:	b	130e8 <__sanitizer_on_print@@Base+0x31e8>
   13120:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13124:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13128:	add	x0, x0, #0xf25
   1312c:	add	x2, x2, #0x191
   13130:	mov	w1, #0x11b                 	// #283
   13134:	b	131b0 <__sanitizer_on_print@@Base+0x32b0>
   13138:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1313c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13140:	add	x0, x0, #0xf25
   13144:	add	x2, x2, #0xed
   13148:	mov	w1, #0x11d                 	// #285
   1314c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13150:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13154:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13158:	add	x0, x0, #0xf25
   1315c:	add	x2, x2, #0x4c
   13160:	mov	w1, #0x11f                 	// #287
   13164:	b	131b0 <__sanitizer_on_print@@Base+0x32b0>
   13168:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1316c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13170:	add	x0, x0, #0xf25
   13174:	add	x2, x2, #0x1c9
   13178:	mov	w1, #0x126                 	// #294
   1317c:	mov	w4, #0x1                   	// #1
   13180:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13184:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13188:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1318c:	add	x0, x0, #0xf25
   13190:	add	x2, x2, #0xf81
   13194:	mov	w1, #0x29                  	// #41
   13198:	b	131b0 <__sanitizer_on_print@@Base+0x32b0>
   1319c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   131a0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   131a4:	add	x0, x0, #0xf25
   131a8:	add	x2, x2, #0x1ac
   131ac:	mov	w1, #0x122                 	// #290
   131b0:	mov	x3, xzr
   131b4:	mov	x4, xzr
   131b8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   131bc:	str	x30, [sp, #-64]!
   131c0:	stp	x24, x23, [sp, #16]
   131c4:	stp	x22, x21, [sp, #32]
   131c8:	stp	x20, x19, [sp, #48]
   131cc:	add	x20, x0, #0x18
   131d0:	mov	x23, x0
   131d4:	mov	x0, x20
   131d8:	mov	x19, x4
   131dc:	mov	w21, w3
   131e0:	mov	x22, x2
   131e4:	mov	w24, w1
   131e8:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   131ec:	ldr	x8, [x23, #144]
   131f0:	ldr	w4, [x23, #112]
   131f4:	mov	w3, w24
   131f8:	add	x8, x8, #0x1
   131fc:	cmp	w4, w24
   13200:	str	x8, [x23, #144]
   13204:	b.ls	13258 <__sanitizer_on_print@@Base+0x3358>  // b.plast
   13208:	ldr	x8, [x23, #152]
   1320c:	ldr	x0, [x8, x3, lsl #3]
   13210:	cbz	x0, 13270 <__sanitizer_on_print@@Base+0x3370>
   13214:	ldr	w4, [x0, #112]
   13218:	cmp	w4, #0x1
   1321c:	b.ne	13290 <__sanitizer_on_print@@Base+0x3390>  // b.any
   13220:	ldr	x9, [x0]
   13224:	mov	w8, #0x2                   	// #2
   13228:	str	w8, [x0, #112]
   1322c:	str	x22, [x0, #32]
   13230:	str	w21, [x0, #120]
   13234:	ldr	x8, [x9, #24]
   13238:	mov	x1, x19
   1323c:	blr	x8
   13240:	mov	x0, x20
   13244:	ldp	x20, x19, [sp, #48]
   13248:	ldp	x22, x21, [sp, #32]
   1324c:	ldp	x24, x23, [sp, #16]
   13250:	ldr	x30, [sp], #64
   13254:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   13258:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1325c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13260:	add	x0, x0, #0xf25
   13264:	add	x2, x2, #0xed
   13268:	mov	w1, #0x135                 	// #309
   1326c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13270:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13274:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13278:	add	x0, x0, #0xf25
   1327c:	add	x2, x2, #0x4c
   13280:	mov	w1, #0x137                 	// #311
   13284:	mov	x3, xzr
   13288:	mov	x4, xzr
   1328c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13290:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13294:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13298:	add	x0, x0, #0xf25
   1329c:	add	x2, x2, #0x1f5
   132a0:	mov	w1, #0x138                 	// #312
   132a4:	mov	w3, #0x1                   	// #1
   132a8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   132ac:	str	x30, [sp, #-48]!
   132b0:	stp	x22, x21, [sp, #16]
   132b4:	stp	x20, x19, [sp, #32]
   132b8:	add	x20, x0, #0x18
   132bc:	mov	x21, x0
   132c0:	mov	x0, x20
   132c4:	mov	x19, x2
   132c8:	mov	w22, w1
   132cc:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   132d0:	ldr	w4, [x21, #112]
   132d4:	mov	w3, w22
   132d8:	cmp	w4, w22
   132dc:	b.ls	1331c <__sanitizer_on_print@@Base+0x341c>  // b.plast
   132e0:	ldr	x8, [x21, #152]
   132e4:	ldr	x8, [x8, x3, lsl #3]
   132e8:	cbz	x8, 13334 <__sanitizer_on_print@@Base+0x3434>
   132ec:	ldr	w3, [x8, #112]
   132f0:	cmp	w3, #0x4
   132f4:	b.eq	13354 <__sanitizer_on_print@@Base+0x3454>  // b.none
   132f8:	cbz	w3, 13370 <__sanitizer_on_print@@Base+0x3470>
   132fc:	ldr	x3, [x8, #40]
   13300:	cbnz	x3, 1338c <__sanitizer_on_print@@Base+0x348c>
   13304:	str	x19, [x8, #40]
   13308:	mov	x0, x20
   1330c:	ldp	x20, x19, [sp, #32]
   13310:	ldp	x22, x21, [sp, #16]
   13314:	ldr	x30, [sp], #48
   13318:	b	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   1331c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13320:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13324:	add	x0, x0, #0xf25
   13328:	add	x2, x2, #0xed
   1332c:	mov	w1, #0x156                 	// #342
   13330:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13334:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13338:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1333c:	add	x0, x0, #0xf25
   13340:	add	x2, x2, #0x4c
   13344:	mov	w1, #0x158                 	// #344
   13348:	mov	x3, xzr
   1334c:	mov	x4, xzr
   13350:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13354:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13358:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1335c:	add	x0, x0, #0xf25
   13360:	add	x2, x2, #0x276
   13364:	mov	w1, #0x15a                 	// #346
   13368:	mov	w4, #0x4                   	// #4
   1336c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13370:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13374:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13378:	add	x0, x0, #0xf25
   1337c:	add	x2, x2, #0x24a
   13380:	mov	w1, #0x159                 	// #345
   13384:	mov	x4, xzr
   13388:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1338c:	adrp	x0, 26000 <__interceptor_sigaction@@Base+0x3a44>
   13390:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13394:	add	x0, x0, #0xf25
   13398:	add	x2, x2, #0x29f
   1339c:	mov	w1, #0x15b                 	// #347
   133a0:	mov	x4, xzr
   133a4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   133a8:	ret
   133ac:	ret
   133b0:	ret
   133b4:	ret
   133b8:	ret
   133bc:	ret
   133c0:	ret
   133c4:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   133c8:	add	x8, x8, #0x7c8
   133cc:	ldr	x9, [x8]
   133d0:	cbz	x9, 1341c <__sanitizer_on_print@@Base+0x351c>
   133d4:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   133d8:	add	x8, x8, #0x7d0
   133dc:	ldr	x9, [x8]
   133e0:	cbz	x9, 1341c <__sanitizer_on_print@@Base+0x351c>
   133e4:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   133e8:	add	x8, x8, #0x7d8
   133ec:	ldr	x9, [x8]
   133f0:	cbz	x9, 1341c <__sanitizer_on_print@@Base+0x351c>
   133f4:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   133f8:	add	x8, x8, #0x7e0
   133fc:	ldr	x9, [x8]
   13400:	cbz	x9, 1341c <__sanitizer_on_print@@Base+0x351c>
   13404:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13408:	add	x8, x8, #0x7e8
   1340c:	ldr	x9, [x8]
   13410:	cbz	x9, 1341c <__sanitizer_on_print@@Base+0x351c>
   13414:	mov	w0, wzr
   13418:	ret
   1341c:	str	x0, [x8]
   13420:	mov	w0, #0x1                   	// #1
   13424:	ret
   13428:	stp	x30, x19, [sp, #-16]!
   1342c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13430:	add	x8, x8, #0x7c8
   13434:	ldr	x9, [x8]
   13438:	cmp	x9, x0
   1343c:	b.eq	1349c <__sanitizer_on_print@@Base+0x359c>  // b.none
   13440:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13444:	add	x8, x8, #0x7d0
   13448:	ldr	x9, [x8]
   1344c:	cmp	x9, x0
   13450:	b.eq	134a4 <__sanitizer_on_print@@Base+0x35a4>  // b.none
   13454:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13458:	add	x8, x8, #0x7d8
   1345c:	ldr	x9, [x8]
   13460:	cmp	x9, x0
   13464:	b.eq	134ac <__sanitizer_on_print@@Base+0x35ac>  // b.none
   13468:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1346c:	add	x8, x8, #0x7e0
   13470:	ldr	x9, [x8]
   13474:	cmp	x9, x0
   13478:	b.eq	134b4 <__sanitizer_on_print@@Base+0x35b4>  // b.none
   1347c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13480:	add	x8, x8, #0x7e8
   13484:	ldr	x9, [x8]
   13488:	cmp	x9, x0
   1348c:	b.eq	134bc <__sanitizer_on_print@@Base+0x35bc>  // b.none
   13490:	mov	w0, wzr
   13494:	ldp	x30, x19, [sp], #16
   13498:	ret
   1349c:	mov	w9, wzr
   134a0:	b	134c0 <__sanitizer_on_print@@Base+0x35c0>
   134a4:	mov	w9, #0x1                   	// #1
   134a8:	b	134c0 <__sanitizer_on_print@@Base+0x35c0>
   134ac:	mov	w9, #0x2                   	// #2
   134b0:	b	134c0 <__sanitizer_on_print@@Base+0x35c0>
   134b4:	mov	w9, #0x3                   	// #3
   134b8:	b	134c0 <__sanitizer_on_print@@Base+0x35c0>
   134bc:	mov	w9, #0x4                   	// #4
   134c0:	adrp	x19, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   134c4:	add	w10, w9, #0x1
   134c8:	add	x19, x19, #0x7b0
   134cc:	mov	w11, #0x4                   	// #4
   134d0:	add	x10, x19, w10, uxtw #3
   134d4:	sub	w9, w11, w9
   134d8:	add	x1, x10, #0x18
   134dc:	sbfiz	x2, x9, #3, #32
   134e0:	mov	x0, x8
   134e4:	bl	bec4 <__sanitizer_set_report_fd@@Base+0x2610>
   134e8:	str	xzr, [x19, #56]
   134ec:	mov	w0, #0x1                   	// #1
   134f0:	ldp	x30, x19, [sp], #16
   134f4:	ret
   134f8:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   134fc:	str	x0, [x8, #1976]
   13500:	ret
   13504:	str	x30, [sp, #-16]!
   13508:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1350c:	ldr	x8, [x8, #1976]
   13510:	cbnz	x8, 13568 <__sanitizer_on_print@@Base+0x3668>
   13514:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13518:	ldr	x8, [x8, #2024]
   1351c:	cbnz	x8, 13578 <__sanitizer_on_print@@Base+0x3678>
   13520:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13524:	ldr	x8, [x8, #2016]
   13528:	cbnz	x8, 13588 <__sanitizer_on_print@@Base+0x3688>
   1352c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13530:	ldr	x8, [x8, #2008]
   13534:	cbnz	x8, 13598 <__sanitizer_on_print@@Base+0x3698>
   13538:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1353c:	ldr	x8, [x8, #2000]
   13540:	cbnz	x8, 135a8 <__sanitizer_on_print@@Base+0x36a8>
   13544:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13548:	ldr	x8, [x8, #1992]
   1354c:	cbnz	x8, 135b8 <__sanitizer_on_print@@Base+0x36b8>
   13550:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13554:	ldr	x8, [x8, #4056]
   13558:	ldrb	w9, [x8, #228]
   1355c:	cbnz	w9, 135cc <__sanitizer_on_print@@Base+0x36cc>
   13560:	ldr	w0, [x8, #224]
   13564:	bl	d0c4 <__sanitizer_set_report_fd@@Base+0x3810>
   13568:	blr	x8
   1356c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13570:	ldr	x8, [x8, #2024]
   13574:	cbz	x8, 13520 <__sanitizer_on_print@@Base+0x3620>
   13578:	blr	x8
   1357c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13580:	ldr	x8, [x8, #2016]
   13584:	cbz	x8, 1352c <__sanitizer_on_print@@Base+0x362c>
   13588:	blr	x8
   1358c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13590:	ldr	x8, [x8, #2008]
   13594:	cbz	x8, 13538 <__sanitizer_on_print@@Base+0x3638>
   13598:	blr	x8
   1359c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   135a0:	ldr	x8, [x8, #2000]
   135a4:	cbz	x8, 13544 <__sanitizer_on_print@@Base+0x3644>
   135a8:	blr	x8
   135ac:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   135b0:	ldr	x8, [x8, #1992]
   135b4:	cbz	x8, 13550 <__sanitizer_on_print@@Base+0x3650>
   135b8:	blr	x8
   135bc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   135c0:	ldr	x8, [x8, #4056]
   135c4:	ldrb	w9, [x8, #228]
   135c8:	cbz	w9, 13560 <__sanitizer_on_print@@Base+0x3660>
   135cc:	bl	148a8 <__sanitizer_sandbox_on_notify@@Base+0xd78>
   135d0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   135d4:	str	x0, [x8, #1984]
   135d8:	ret
   135dc:	stp	x30, x23, [sp, #-48]!
   135e0:	stp	x22, x21, [sp, #16]
   135e4:	stp	x20, x19, [sp, #32]
   135e8:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   135ec:	mov	x19, x4
   135f0:	mov	x20, x3
   135f4:	mov	x21, x2
   135f8:	mov	w22, w1
   135fc:	mov	x23, x0
   13600:	add	x8, x8, #0x7b0
   13604:	ldaxr	w9, [x8]
   13608:	add	w10, w9, #0x1
   1360c:	stlxr	w11, w10, [x8]
   13610:	cbnz	w11, 13604 <__sanitizer_on_print@@Base+0x3704>
   13614:	cmp	w9, #0xb
   13618:	b.cc	13628 <__sanitizer_on_print@@Base+0x3728>  // b.lo, b.ul, b.last
   1361c:	mov	w0, #0x2                   	// #2
   13620:	bl	14898 <__sanitizer_sandbox_on_notify@@Base+0xd68>
   13624:	brk	#0x1
   13628:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1362c:	ldr	x8, [x8, #1984]
   13630:	cbz	x8, 1364c <__sanitizer_on_print@@Base+0x374c>
   13634:	mov	x0, x23
   13638:	mov	w1, w22
   1363c:	mov	x2, x21
   13640:	mov	x3, x20
   13644:	mov	x4, x19
   13648:	blr	x8
   1364c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13650:	add	x0, x0, #0x2c2
   13654:	mov	x1, x23
   13658:	mov	w2, w22
   1365c:	mov	x3, x21
   13660:	mov	x4, x20
   13664:	mov	x5, x19
   13668:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1366c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000013670 <__sanitizer_set_death_callback@@Base>:
   13670:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13674:	str	x0, [x8, #1976]
   13678:	ret
   1367c:	str	x30, [sp, #-16]!
   13680:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13684:	ldr	x3, [x8, #2032]
   13688:	cbnz	x3, 13698 <__sanitizer_set_death_callback@@Base+0x28>
   1368c:	str	x0, [x8, #2032]
   13690:	ldr	x30, [sp], #16
   13694:	ret
   13698:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1369c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   136a0:	add	x0, x0, #0x310
   136a4:	add	x2, x2, #0x36b
   136a8:	mov	w1, #0x17                  	// #23
   136ac:	mov	x4, xzr
   136b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   136b4:	mov	x0, xzr
   136b8:	ret
   136bc:	sub	sp, sp, #0x80
   136c0:	stp	d9, d8, [sp, #16]
   136c4:	stp	x29, x30, [sp, #32]
   136c8:	stp	x28, x27, [sp, #48]
   136cc:	stp	x26, x25, [sp, #64]
   136d0:	stp	x24, x23, [sp, #80]
   136d4:	stp	x22, x21, [sp, #96]
   136d8:	stp	x20, x19, [sp, #112]
   136dc:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   136e0:	ldr	x9, [x9, #4056]
   136e4:	ldp	x8, x19, [x9, #136]
   136e8:	ldrb	w26, [x9, #160]
   136ec:	cbnz	x8, 13868 <__sanitizer_set_death_callback@@Base+0x1f8>
   136f0:	adrp	x8, 27000 <__interceptor_sigaction@@Base+0x4a44>
   136f4:	adrp	x27, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   136f8:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   136fc:	ldr	x27, [x27, #3872]
   13700:	ldr	x23, [x23, #4024]
   13704:	ldr	d8, [x8, #760]
   13708:	mov	x22, #0xcccccccccccccccc    	// #-3689348814741910324
   1370c:	mov	w20, wzr
   13710:	mov	x24, xzr
   13714:	mov	x29, xzr
   13718:	mov	x28, xzr
   1371c:	mov	w21, #0xb                   	// #11
   13720:	movk	x22, #0xcccd
   13724:	b	13744 <__sanitizer_set_death_callback@@Base+0xd4>
   13728:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1372c:	add	x0, x0, #0x432
   13730:	mov	x1, x24
   13734:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   13738:	mov	w0, #0x5a                  	// #90
   1373c:	mov	w1, #0x14                  	// #20
   13740:	bl	4970 <__sanitizer_print_memory_profile@plt>
   13744:	ucvtf	d0, x24
   13748:	fmul	d9, d0, d8
   1374c:	mov	w0, #0x64                  	// #100
   13750:	bl	1489c <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   13754:	bl	142e4 <__sanitizer_sandbox_on_notify@@Base+0x7b4>
   13758:	ldr	w8, [x27]
   1375c:	lsr	x24, x0, #20
   13760:	cbz	w8, 137d4 <__sanitizer_set_death_callback@@Base+0x164>
   13764:	mul	x8, x28, x21
   13768:	umulh	x8, x8, x22
   1376c:	cmp	x24, x8, lsr #3
   13770:	b.hi	13780 <__sanitizer_set_death_callback@@Base+0x110>  // b.pmore
   13774:	bl	16cac <__sanitizer_cov_pcs_init@@Base+0x5c8>
   13778:	cbnz	x0, 137a0 <__sanitizer_set_death_callback@@Base+0x130>
   1377c:	b	137d4 <__sanitizer_set_death_callback@@Base+0x164>
   13780:	ldr	x1, [x23]
   13784:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13788:	add	x0, x0, #0x39b
   1378c:	mov	x2, x24
   13790:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   13794:	mov	x28, x24
   13798:	bl	16cac <__sanitizer_cov_pcs_init@@Base+0x5c8>
   1379c:	cbz	x0, 137d4 <__sanitizer_set_death_callback@@Base+0x164>
   137a0:	ldr	x8, [x0, #8]
   137a4:	mul	x9, x29, x21
   137a8:	umulh	x9, x9, x22
   137ac:	mov	x25, x0
   137b0:	cmp	x8, x9, lsr #3
   137b4:	b.ls	137d4 <__sanitizer_set_death_callback@@Base+0x164>  // b.plast
   137b8:	ldr	x1, [x23]
   137bc:	ldr	x2, [x25]
   137c0:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   137c4:	lsr	x3, x8, #20
   137c8:	add	x0, x0, #0x3ab
   137cc:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   137d0:	ldr	x29, [x25, #8]
   137d4:	cbz	x19, 13848 <__sanitizer_set_death_callback@@Base+0x1d8>
   137d8:	cmp	x19, x24
   137dc:	cset	w8, cs  // cs = hs, nlast
   137e0:	orr	w8, w20, w8
   137e4:	tbz	w8, #0, 13818 <__sanitizer_set_death_callback@@Base+0x1a8>
   137e8:	cmp	x19, x24
   137ec:	b.cc	13848 <__sanitizer_set_death_callback@@Base+0x1d8>  // b.lo, b.ul, b.last
   137f0:	eor	w8, w20, #0x1
   137f4:	tbnz	w8, #0, 13848 <__sanitizer_set_death_callback@@Base+0x1d8>
   137f8:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   137fc:	ldr	x8, [x8, #2032]
   13800:	cbz	x8, 1380c <__sanitizer_set_death_callback@@Base+0x19c>
   13804:	mov	w0, wzr
   13808:	blr	x8
   1380c:	mov	w20, wzr
   13810:	cbnz	w26, 1384c <__sanitizer_set_death_callback@@Base+0x1dc>
   13814:	b	1374c <__sanitizer_set_death_callback@@Base+0xdc>
   13818:	ldr	x1, [x23]
   1381c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13820:	add	x0, x0, #0x403
   13824:	mov	x2, x19
   13828:	mov	x3, x24
   1382c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   13830:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13834:	ldr	x8, [x8, #2032]
   13838:	cbz	x8, 1385c <__sanitizer_set_death_callback@@Base+0x1ec>
   1383c:	mov	w0, #0x1                   	// #1
   13840:	mov	w20, #0x1                   	// #1
   13844:	blr	x8
   13848:	cbz	w26, 1374c <__sanitizer_set_death_callback@@Base+0xdc>
   1384c:	ucvtf	d0, x24
   13850:	fcmp	d9, d0
   13854:	b.pl	1374c <__sanitizer_set_death_callback@@Base+0xdc>  // b.nfrst
   13858:	b	13728 <__sanitizer_set_death_callback@@Base+0xb8>
   1385c:	mov	w20, #0x1                   	// #1
   13860:	cbnz	w26, 1384c <__sanitizer_set_death_callback@@Base+0x1dc>
   13864:	b	1374c <__sanitizer_set_death_callback@@Base+0xdc>
   13868:	str	x8, [sp, #8]
   1386c:	adrp	x8, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13870:	adrp	x27, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13874:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13878:	ldr	x27, [x27, #3872]
   1387c:	ldr	x22, [x22, #4024]
   13880:	ldr	d8, [x8, #760]
   13884:	mov	x20, #0xcccccccccccccccc    	// #-3689348814741910324
   13888:	mov	w23, wzr
   1388c:	mov	x21, xzr
   13890:	mov	x29, xzr
   13894:	mov	x28, xzr
   13898:	mov	w24, #0xb                   	// #11
   1389c:	movk	x20, #0xcccd
   138a0:	ucvtf	d0, x21
   138a4:	fmul	d9, d0, d8
   138a8:	mov	w0, #0x64                  	// #100
   138ac:	bl	1489c <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   138b0:	bl	142e4 <__sanitizer_sandbox_on_notify@@Base+0x7b4>
   138b4:	ldr	w8, [x27]
   138b8:	lsr	x21, x0, #20
   138bc:	cbz	w8, 13924 <__sanitizer_set_death_callback@@Base+0x2b4>
   138c0:	mul	x8, x28, x24
   138c4:	umulh	x8, x8, x20
   138c8:	cmp	x21, x8, lsr #3
   138cc:	b.ls	138e8 <__sanitizer_set_death_callback@@Base+0x278>  // b.plast
   138d0:	ldr	x1, [x22]
   138d4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   138d8:	add	x0, x0, #0x39b
   138dc:	mov	x2, x21
   138e0:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   138e4:	mov	x28, x21
   138e8:	bl	16cac <__sanitizer_cov_pcs_init@@Base+0x5c8>
   138ec:	cbz	x0, 13924 <__sanitizer_set_death_callback@@Base+0x2b4>
   138f0:	ldr	x8, [x0, #8]
   138f4:	mul	x9, x29, x24
   138f8:	umulh	x9, x9, x20
   138fc:	mov	x25, x0
   13900:	cmp	x8, x9, lsr #3
   13904:	b.ls	13924 <__sanitizer_set_death_callback@@Base+0x2b4>  // b.plast
   13908:	ldr	x1, [x22]
   1390c:	ldr	x2, [x25]
   13910:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13914:	lsr	x3, x8, #20
   13918:	add	x0, x0, #0x3ab
   1391c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   13920:	ldr	x29, [x25, #8]
   13924:	ldr	x8, [sp, #8]
   13928:	cmp	x8, x21
   1392c:	b.cc	139d8 <__sanitizer_set_death_callback@@Base+0x368>  // b.lo, b.ul, b.last
   13930:	cbz	x19, 139a8 <__sanitizer_set_death_callback@@Base+0x338>
   13934:	cmp	x19, x21
   13938:	cset	w8, cs  // cs = hs, nlast
   1393c:	orr	w8, w23, w8
   13940:	tbz	w8, #0, 13970 <__sanitizer_set_death_callback@@Base+0x300>
   13944:	cmp	x19, x21
   13948:	b.cc	139a8 <__sanitizer_set_death_callback@@Base+0x338>  // b.lo, b.ul, b.last
   1394c:	eor	w8, w23, #0x1
   13950:	tbnz	w8, #0, 139a8 <__sanitizer_set_death_callback@@Base+0x338>
   13954:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13958:	ldr	x8, [x8, #2032]
   1395c:	cbz	x8, 13968 <__sanitizer_set_death_callback@@Base+0x2f8>
   13960:	mov	w0, wzr
   13964:	blr	x8
   13968:	mov	w23, wzr
   1396c:	b	139a8 <__sanitizer_set_death_callback@@Base+0x338>
   13970:	ldr	x1, [x22]
   13974:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13978:	add	x0, x0, #0x403
   1397c:	mov	x2, x19
   13980:	mov	x3, x21
   13984:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   13988:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1398c:	ldr	x8, [x8, #2032]
   13990:	cbnz	x8, 1399c <__sanitizer_set_death_callback@@Base+0x32c>
   13994:	mov	w23, #0x1                   	// #1
   13998:	b	139a8 <__sanitizer_set_death_callback@@Base+0x338>
   1399c:	mov	w0, #0x1                   	// #1
   139a0:	mov	w23, #0x1                   	// #1
   139a4:	blr	x8
   139a8:	cbz	w26, 138a8 <__sanitizer_set_death_callback@@Base+0x238>
   139ac:	ucvtf	d0, x21
   139b0:	fcmp	d9, d0
   139b4:	b.pl	138a8 <__sanitizer_set_death_callback@@Base+0x238>  // b.nfrst
   139b8:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   139bc:	add	x0, x0, #0x432
   139c0:	mov	x1, x21
   139c4:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   139c8:	mov	w0, #0x5a                  	// #90
   139cc:	mov	w1, #0x14                  	// #20
   139d0:	bl	4970 <__sanitizer_print_memory_profile@plt>
   139d4:	b	138a0 <__sanitizer_set_death_callback@@Base+0x230>
   139d8:	ldr	x1, [x22]
   139dc:	ldr	x2, [sp, #8]
   139e0:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   139e4:	add	x0, x0, #0x3d4
   139e8:	mov	x3, x21
   139ec:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   139f0:	bl	f380 <__sanitizer_set_report_fd@@Base+0x5acc>
   139f4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   139f8:	sub	sp, sp, #0x40
   139fc:	str	x30, [sp, #32]
   13a00:	stp	x20, x19, [sp, #48]
   13a04:	mov	x19, x0
   13a08:	mov	x0, sp
   13a0c:	mov	w1, #0x10000               	// #65536
   13a10:	stp	xzr, xzr, [sp, #8]
   13a14:	str	xzr, [sp]
   13a18:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   13a1c:	ldr	x8, [sp, #16]
   13a20:	lsr	x9, x8, #16
   13a24:	cbnz	x9, 13a5c <__sanitizer_set_death_callback@@Base+0x3ec>
   13a28:	ldr	x9, [sp, #8]
   13a2c:	lsr	x9, x9, #16
   13a30:	cbnz	x9, 13a44 <__sanitizer_set_death_callback@@Base+0x3d4>
   13a34:	mov	x0, sp
   13a38:	mov	w1, #0x10000               	// #65536
   13a3c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   13a40:	ldr	x8, [sp, #16]
   13a44:	ldr	x9, [sp]
   13a48:	mov	w10, #0x10000               	// #65536
   13a4c:	sub	x2, x10, x8
   13a50:	mov	w1, wzr
   13a54:	add	x0, x9, x8
   13a58:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   13a5c:	adrp	x8, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13a60:	ldr	q0, [x8, #768]
   13a64:	ldr	x8, [sp]
   13a68:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   13a6c:	add	x1, x1, #0x338
   13a70:	mov	x0, sp
   13a74:	mov	x2, x19
   13a78:	str	q0, [sp, #16]
   13a7c:	strb	wzr, [x8]
   13a80:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   13a84:	ldr	x19, [sp]
   13a88:	mov	w1, #0xa                   	// #10
   13a8c:	mov	x0, x19
   13a90:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
   13a94:	cbz	x0, 13ac0 <__sanitizer_set_death_callback@@Base+0x450>
   13a98:	mov	x20, x0
   13a9c:	mov	x0, x19
   13aa0:	strb	wzr, [x20], #1
   13aa4:	bl	14484 <__sanitizer_sandbox_on_notify@@Base+0x954>
   13aa8:	mov	w1, #0xa                   	// #10
   13aac:	mov	x0, x20
   13ab0:	mov	x19, x20
   13ab4:	bl	c064 <__sanitizer_set_report_fd@@Base+0x27b0>
   13ab8:	mov	x20, x0
   13abc:	cbnz	x0, 13a9c <__sanitizer_set_death_callback@@Base+0x42c>
   13ac0:	ldrb	w8, [x19]
   13ac4:	cbz	w8, 13ad0 <__sanitizer_set_death_callback@@Base+0x460>
   13ac8:	mov	x0, x19
   13acc:	bl	14484 <__sanitizer_sandbox_on_notify@@Base+0x954>
   13ad0:	ldp	x0, x1, [sp]
   13ad4:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   13ad8:	ldp	x20, x19, [sp, #48]
   13adc:	ldr	x30, [sp, #32]
   13ae0:	add	sp, sp, #0x40
   13ae4:	ret
   13ae8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13aec:	ldr	x8, [x8, #4056]
   13af0:	ldp	x9, x10, [x8, #136]
   13af4:	orr	x9, x10, x9
   13af8:	cbnz	x9, 13b04 <__sanitizer_set_death_callback@@Base+0x494>
   13afc:	ldrb	w8, [x8, #160]
   13b00:	cbz	w8, 13b20 <__sanitizer_set_death_callback@@Base+0x4b0>
   13b04:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13b08:	ldr	x8, [x8, #3976]
   13b0c:	cbz	x8, 13b20 <__sanitizer_set_death_callback@@Base+0x4b0>
   13b10:	adrp	x0, 13000 <__sanitizer_on_print@@Base+0x3100>
   13b14:	add	x0, x0, #0x6bc
   13b18:	mov	x1, xzr
   13b1c:	b	e208 <__sanitizer_set_report_fd@@Base+0x4954>
   13b20:	ret
   13b24:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13b28:	str	x0, [x8, #2040]
   13b2c:	ret

0000000000013b30 <__sanitizer_sandbox_on_notify@@Base>:
   13b30:	str	x30, [sp, #-16]!
   13b34:	bl	14ccc <__sanitizer_sandbox_on_notify@@Base+0x119c>
   13b38:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13b3c:	ldr	x0, [x8, #2040]
   13b40:	cbz	x0, 13b4c <__sanitizer_sandbox_on_notify@@Base+0x1c>
   13b44:	ldr	x30, [sp], #16
   13b48:	br	x0
   13b4c:	ldr	x30, [sp], #16
   13b50:	ret
   13b54:	str	x30, [sp, #-16]!
   13b58:	bl	4840 <__errno_location@plt>
   13b5c:	mov	w8, #0xc                   	// #12
   13b60:	str	w8, [x0]
   13b64:	ldr	x30, [sp], #16
   13b68:	ret
   13b6c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   13b70:	ldr	x8, [x8, #3776]
   13b74:	cbz	x8, 13b88 <__sanitizer_sandbox_on_notify@@Base+0x58>
   13b78:	str	x30, [sp, #-16]!
   13b7c:	bl	2260c <__interceptor_sigaction@@Base+0x50>
   13b80:	ldr	x30, [sp], #16
   13b84:	ret
   13b88:	b	4870 <sigaction@plt>
   13b8c:	sub	sp, sp, #0xb0
   13b90:	str	x30, [sp, #128]
   13b94:	stp	x22, x21, [sp, #144]
   13b98:	stp	x20, x19, [sp, #160]
   13b9c:	cbz	x1, 13cec <__sanitizer_sandbox_on_notify@@Base+0x1bc>
   13ba0:	mov	x19, x2
   13ba4:	cbz	x2, 13d04 <__sanitizer_sandbox_on_notify@@Base+0x1d4>
   13ba8:	mov	x20, x1
   13bac:	tbz	w0, #0, 13be4 <__sanitizer_sandbox_on_notify@@Base+0xb4>
   13bb0:	add	x1, sp, #0x70
   13bb4:	mov	w0, #0x3                   	// #3
   13bb8:	bl	4930 <getrlimit@plt>
   13bbc:	cbnz	w0, 13d1c <__sanitizer_sandbox_on_notify@@Base+0x1ec>
   13bc0:	add	x0, sp, #0x50
   13bc4:	mov	w1, #0x1                   	// #1
   13bc8:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
   13bcc:	add	x0, sp, #0x50
   13bd0:	bl	10aac <__sanitizer_on_print@@Base+0xbac>
   13bd4:	tbz	w0, #0, 13c34 <__sanitizer_sandbox_on_notify@@Base+0x104>
   13bd8:	str	xzr, [x19]
   13bdc:	str	xzr, [x20]
   13be0:	b	13cd0 <__sanitizer_sandbox_on_notify@@Base+0x1a0>
   13be4:	mov	x0, sp
   13be8:	str	xzr, [sp, #80]
   13bec:	str	xzr, [sp, #112]
   13bf0:	bl	4680 <pthread_attr_init@plt>
   13bf4:	bl	4900 <pthread_self@plt>
   13bf8:	mov	x1, sp
   13bfc:	bl	4660 <pthread_getattr_np@plt>
   13c00:	cbnz	w0, 13d3c <__sanitizer_sandbox_on_notify@@Base+0x20c>
   13c04:	mov	x0, sp
   13c08:	add	x1, sp, #0x70
   13c0c:	add	x2, sp, #0x50
   13c10:	bl	14f50 <__sanitizer_sandbox_on_notify@@Base+0x1420>
   13c14:	mov	x0, sp
   13c18:	bl	4720 <pthread_attr_destroy@plt>
   13c1c:	ldr	x8, [sp, #112]
   13c20:	ldr	x9, [sp, #80]
   13c24:	add	x9, x9, x8
   13c28:	str	x9, [x20]
   13c2c:	str	x8, [x19]
   13c30:	b	13cd8 <__sanitizer_sandbox_on_notify@@Base+0x1a8>
   13c34:	add	x0, sp, #0x50
   13c38:	mov	x1, sp
   13c3c:	stp	xzr, xzr, [sp, #24]
   13c40:	str	xzr, [sp, #72]
   13c44:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   13c48:	mov	x21, xzr
   13c4c:	tbz	w0, #0, 13c88 <__sanitizer_sandbox_on_notify@@Base+0x158>
   13c50:	ldr	x8, [sp, #8]
   13c54:	add	x22, sp, #0x70
   13c58:	cmp	x8, x22
   13c5c:	b.ls	13c68 <__sanitizer_sandbox_on_notify@@Base+0x138>  // b.plast
   13c60:	mov	x21, xzr
   13c64:	b	13c88 <__sanitizer_sandbox_on_notify@@Base+0x158>
   13c68:	add	x0, sp, #0x50
   13c6c:	mov	x1, sp
   13c70:	mov	x21, x8
   13c74:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   13c78:	tbz	w0, #0, 13c88 <__sanitizer_sandbox_on_notify@@Base+0x158>
   13c7c:	ldr	x8, [sp, #8]
   13c80:	cmp	x8, x22
   13c84:	b.ls	13c68 <__sanitizer_sandbox_on_notify@@Base+0x138>  // b.plast
   13c88:	ldr	x8, [sp]
   13c8c:	add	x9, sp, #0x70
   13c90:	cmp	x8, x9
   13c94:	b.hi	13d5c <__sanitizer_sandbox_on_notify@@Base+0x22c>  // b.pmore
   13c98:	ldr	x8, [sp, #8]
   13c9c:	cmp	x8, x9
   13ca0:	b.ls	13d5c <__sanitizer_sandbox_on_notify@@Base+0x22c>  // b.plast
   13ca4:	ldr	x9, [sp, #112]
   13ca8:	sub	x10, x8, x21
   13cac:	mov	w11, #0x40000000            	// #1073741824
   13cb0:	str	x8, [x20]
   13cb4:	cmp	x9, x10
   13cb8:	csel	x9, x10, x9, hi  // hi = pmore
   13cbc:	lsr	x10, x9, #30
   13cc0:	cmp	x10, #0x0
   13cc4:	csel	x9, x9, x11, eq  // eq = none
   13cc8:	sub	x8, x8, x9
   13ccc:	str	x8, [x19]
   13cd0:	add	x0, sp, #0x50
   13cd4:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
   13cd8:	ldp	x20, x19, [sp, #160]
   13cdc:	ldp	x22, x21, [sp, #144]
   13ce0:	ldr	x30, [sp, #128]
   13ce4:	add	sp, sp, #0xb0
   13ce8:	ret
   13cec:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13cf0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13cf4:	add	x0, x0, #0x44f
   13cf8:	add	x2, x2, #0x4a9
   13cfc:	mov	w1, #0x60                  	// #96
   13d00:	b	13d70 <__sanitizer_sandbox_on_notify@@Base+0x240>
   13d04:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d08:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d0c:	add	x0, x0, #0x44f
   13d10:	add	x2, x2, #0x4be
   13d14:	mov	w1, #0x61                  	// #97
   13d18:	b	13d70 <__sanitizer_sandbox_on_notify@@Base+0x240>
   13d1c:	sxtw	x3, w0
   13d20:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d24:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d28:	add	x0, x0, #0x44f
   13d2c:	add	x2, x2, #0x4d6
   13d30:	mov	w1, #0x65                  	// #101
   13d34:	mov	x4, xzr
   13d38:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13d3c:	sxtw	x3, w0
   13d40:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d44:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d48:	add	x0, x0, #0x44f
   13d4c:	add	x2, x2, #0x541
   13d50:	mov	w1, #0x91                  	// #145
   13d54:	mov	x4, xzr
   13d58:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13d5c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d60:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d64:	add	x0, x0, #0x44f
   13d68:	add	x2, x2, #0x500
   13d6c:	mov	w1, #0x73                  	// #115
   13d70:	mov	x3, xzr
   13d74:	mov	x4, xzr
   13d78:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13d7c:	sub	sp, sp, #0x30
   13d80:	str	x30, [sp, #16]
   13d84:	stp	x20, x19, [sp, #32]
   13d88:	mov	x19, x1
   13d8c:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13d90:	mov	x20, x0
   13d94:	add	x1, x1, #0x578
   13d98:	mov	x0, #0xffffffffffffffff    	// #-1
   13d9c:	bl	46b0 <dlsym@plt>
   13da0:	str	x0, [sp, #24]
   13da4:	cbz	x0, 13dd4 <__sanitizer_sandbox_on_notify@@Base+0x2a4>
   13da8:	add	x0, sp, #0x8
   13dac:	add	x1, sp, #0x18
   13db0:	mov	w2, #0x8                   	// #8
   13db4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   13db8:	ldr	x8, [sp, #8]
   13dbc:	mov	w2, #0x1                   	// #1
   13dc0:	mov	x0, x20
   13dc4:	mov	x1, x19
   13dc8:	blr	x8
   13dcc:	cmp	w0, #0x0
   13dd0:	cset	w0, eq  // eq = none
   13dd4:	ldp	x20, x19, [sp, #32]
   13dd8:	ldr	x30, [sp, #16]
   13ddc:	add	sp, sp, #0x30
   13de0:	ret
   13de4:	sub	sp, sp, #0x30
   13de8:	str	x30, [sp, #32]
   13dec:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13df0:	add	x1, x1, #0x57f
   13df4:	mov	x0, #0xffffffffffffffff    	// #-1
   13df8:	bl	46b0 <dlsym@plt>
   13dfc:	str	x0, [sp, #40]
   13e00:	add	x0, sp, #0x18
   13e04:	add	x1, sp, #0x28
   13e08:	mov	w2, #0x8                   	// #8
   13e0c:	stp	xzr, xzr, [sp, #8]
   13e10:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   13e14:	ldr	x8, [sp, #24]
   13e18:	cbz	x8, 13e70 <__sanitizer_sandbox_on_notify@@Base+0x340>
   13e1c:	add	x0, sp, #0x10
   13e20:	add	x1, sp, #0x8
   13e24:	blr	x8
   13e28:	ldr	x8, [sp, #8]
   13e2c:	cmp	x8, #0xf
   13e30:	b.hi	13e3c <__sanitizer_sandbox_on_notify@@Base+0x30c>  // b.pmore
   13e34:	mov	w8, #0x10                  	// #16
   13e38:	str	x8, [sp, #8]
   13e3c:	sub	x9, x8, #0x1
   13e40:	tst	x8, x9
   13e44:	b.ne	13e90 <__sanitizer_sandbox_on_notify@@Base+0x360>  // b.any
   13e48:	ldr	x9, [sp, #16]
   13e4c:	neg	x10, x8
   13e50:	ldr	x30, [sp, #32]
   13e54:	add	x8, x8, x9
   13e58:	sub	x8, x8, #0x1
   13e5c:	and	x8, x8, x10
   13e60:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13e64:	str	x8, [x9, #2048]
   13e68:	add	sp, sp, #0x30
   13e6c:	ret
   13e70:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13e74:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13e78:	add	x0, x0, #0x44f
   13e7c:	add	x2, x2, #0x68d
   13e80:	mov	w1, #0xd9                  	// #217
   13e84:	mov	x3, xzr
   13e88:	mov	x4, xzr
   13e8c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13e90:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   13e94:	add	x0, x0, #0x121
   13e98:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   13e9c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   13ea0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13ea4:	ldr	x0, [x8, #2056]
   13ea8:	cbz	x0, 13eb0 <__sanitizer_sandbox_on_notify@@Base+0x380>
   13eac:	ret
   13eb0:	mov	w0, #0x6f0                 	// #1776
   13eb4:	str	x0, [x8, #2056]
   13eb8:	ret
   13ebc:	mov	w0, #0x10                  	// #16
   13ec0:	ret
   13ec4:	adrp	x10, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13ec8:	ldr	x9, [x10, #2056]
   13ecc:	mrs	x8, tpidr_el0
   13ed0:	cbz	x9, 13edc <__sanitizer_sandbox_on_notify@@Base+0x3ac>
   13ed4:	sub	x0, x8, x9
   13ed8:	ret
   13edc:	mov	w9, #0x6f0                 	// #1776
   13ee0:	str	x9, [x10, #2056]
   13ee4:	sub	x0, x8, x9
   13ee8:	ret
   13eec:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13ef0:	ldr	x0, [x8, #2048]
   13ef4:	ret
   13ef8:	sub	sp, sp, #0x40
   13efc:	stp	x30, x23, [sp, #16]
   13f00:	stp	x22, x21, [sp, #32]
   13f04:	stp	x20, x19, [sp, #48]
   13f08:	adrp	x10, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13f0c:	ldr	x9, [x10, #2056]
   13f10:	mov	x22, x4
   13f14:	mov	x19, x3
   13f18:	mov	x21, x2
   13f1c:	mov	x20, x1
   13f20:	mov	w23, w0
   13f24:	mrs	x8, tpidr_el0
   13f28:	cbnz	x9, 13f34 <__sanitizer_sandbox_on_notify@@Base+0x404>
   13f2c:	mov	w9, #0x6f0                 	// #1776
   13f30:	str	x9, [x10, #2056]
   13f34:	sub	x8, x8, x9
   13f38:	str	x8, [x19]
   13f3c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   13f40:	ldr	x8, [x8, #2048]
   13f44:	and	w0, w23, #0x1
   13f48:	add	x1, sp, #0x8
   13f4c:	mov	x2, sp
   13f50:	str	x8, [x22]
   13f54:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   13f58:	ldp	x8, x9, [sp]
   13f5c:	sub	x9, x9, x8
   13f60:	str	x8, [x20]
   13f64:	str	x9, [x21]
   13f68:	tbnz	w23, #0, 13fb4 <__sanitizer_sandbox_on_notify@@Base+0x484>
   13f6c:	ldr	x10, [x19]
   13f70:	ldr	x4, [x20]
   13f74:	cmp	x10, x4
   13f78:	b.ls	13fb4 <__sanitizer_sandbox_on_notify@@Base+0x484>  // b.plast
   13f7c:	add	x8, x4, x9
   13f80:	cmp	x10, x8
   13f84:	b.cs	13fb4 <__sanitizer_sandbox_on_notify@@Base+0x484>  // b.hs, b.nlast
   13f88:	ldr	x11, [x22]
   13f8c:	add	x3, x11, x10
   13f90:	cmp	x3, x4
   13f94:	b.ls	13fc8 <__sanitizer_sandbox_on_notify@@Base+0x498>  // b.plast
   13f98:	cmp	x3, x8
   13f9c:	b.hi	13fe0 <__sanitizer_sandbox_on_notify@@Base+0x4b0>  // b.pmore
   13fa0:	sub	x8, x9, x11
   13fa4:	str	x8, [x21]
   13fa8:	ldr	x9, [x20]
   13fac:	add	x8, x9, x8
   13fb0:	str	x8, [x19]
   13fb4:	ldp	x20, x19, [sp, #48]
   13fb8:	ldp	x22, x21, [sp, #32]
   13fbc:	ldp	x30, x23, [sp, #16]
   13fc0:	add	sp, sp, #0x40
   13fc4:	ret
   13fc8:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13fcc:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13fd0:	add	x0, x0, #0x44f
   13fd4:	add	x2, x2, #0x597
   13fd8:	mov	w1, #0x202                 	// #514
   13fdc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13fe0:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13fe4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   13fe8:	add	x0, x0, #0x44f
   13fec:	add	x2, x2, #0x5c1
   13ff0:	mov	w1, #0x203                 	// #515
   13ff4:	mov	x4, x8
   13ff8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   13ffc:	sub	sp, sp, #0x30
   14000:	stp	x30, x21, [sp, #16]
   14004:	stp	x20, x19, [sp, #32]
   14008:	ldrb	w8, [x0, #24]
   1400c:	mov	x19, x0
   14010:	cbz	w8, 14044 <__sanitizer_sandbox_on_notify@@Base+0x514>
   14014:	ldr	x8, [x19, #16]
   14018:	cbz	x8, 1403c <__sanitizer_sandbox_on_notify@@Base+0x50c>
   1401c:	ldr	x20, [x19]
   14020:	add	x8, x8, x8, lsl #3
   14024:	lsl	x21, x8, #3
   14028:	mov	x0, x20
   1402c:	bl	6b30 <__sanitizer_report_error_summary@@Base+0x148>
   14030:	subs	x21, x21, #0x48
   14034:	add	x20, x20, #0x48
   14038:	b.ne	14028 <__sanitizer_sandbox_on_notify@@Base+0x4f8>  // b.any
   1403c:	str	xzr, [x19, #16]
   14040:	b	14058 <__sanitizer_sandbox_on_notify@@Base+0x528>
   14044:	mov	w1, #0x4000                	// #16384
   14048:	mov	x0, x19
   1404c:	stp	xzr, xzr, [x19, #8]
   14050:	str	xzr, [x19]
   14054:	bl	11024 <__sanitizer_on_print@@Base+0x1124>
   14058:	adrp	x0, 14000 <__sanitizer_sandbox_on_notify@@Base+0x4d0>
   1405c:	mov	w8, #0x1                   	// #1
   14060:	add	x0, x0, #0x88
   14064:	mov	x1, sp
   14068:	strb	w8, [x19, #24]
   1406c:	str	x19, [sp]
   14070:	strb	w8, [sp, #8]
   14074:	bl	4760 <dl_iterate_phdr@plt>
   14078:	ldp	x20, x19, [sp, #32]
   1407c:	ldp	x30, x21, [sp, #16]
   14080:	add	sp, sp, #0x30
   14084:	ret
   14088:	sub	sp, sp, #0xa0
   1408c:	str	x30, [sp, #112]
   14090:	stp	x22, x21, [sp, #128]
   14094:	stp	x20, x19, [sp, #144]
   14098:	mov	x20, x0
   1409c:	add	x0, sp, #0x50
   140a0:	mov	w1, #0x1000                	// #4096
   140a4:	mov	x19, x2
   140a8:	stp	xzr, xzr, [sp, #88]
   140ac:	str	xzr, [sp, #80]
   140b0:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   140b4:	ldr	x8, [sp, #96]
   140b8:	cmp	x8, #0xfff
   140bc:	b.hi	140f4 <__sanitizer_sandbox_on_notify@@Base+0x5c4>  // b.pmore
   140c0:	ldr	x9, [sp, #88]
   140c4:	cmp	x9, #0xfff
   140c8:	b.hi	140dc <__sanitizer_sandbox_on_notify@@Base+0x5ac>  // b.pmore
   140cc:	add	x0, sp, #0x50
   140d0:	mov	w1, #0x1000                	// #4096
   140d4:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   140d8:	ldr	x8, [sp, #96]
   140dc:	ldr	x9, [sp, #80]
   140e0:	mov	w10, #0x1000                	// #4096
   140e4:	sub	x2, x10, x8
   140e8:	mov	w1, wzr
   140ec:	add	x0, x9, x8
   140f0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   140f4:	adrp	x8, 25000 <__interceptor_sigaction@@Base+0x2a44>
   140f8:	ldr	q0, [x8, #3584]
   140fc:	ldr	x8, [sp, #80]
   14100:	str	q0, [sp, #96]
   14104:	strb	wzr, [x8]
   14108:	ldrb	w8, [x19, #8]
   1410c:	cbz	w8, 14124 <__sanitizer_sandbox_on_notify@@Base+0x5f4>
   14110:	strb	wzr, [x19, #8]
   14114:	ldr	x0, [sp, #80]
   14118:	ldr	x1, [sp, #96]
   1411c:	bl	7054 <__sanitizer_report_error_summary@@Base+0x66c>
   14120:	b	1413c <__sanitizer_sandbox_on_notify@@Base+0x60c>
   14124:	ldr	x2, [x20, #8]
   14128:	cbz	x2, 1413c <__sanitizer_sandbox_on_notify@@Base+0x60c>
   1412c:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   14130:	add	x1, x1, #0x338
   14134:	add	x0, sp, #0x50
   14138:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1413c:	ldr	x8, [sp, #96]
   14140:	cbz	x8, 14230 <__sanitizer_sandbox_on_notify@@Base+0x700>
   14144:	ldr	x0, [sp, #80]
   14148:	ldrb	w8, [x0]
   1414c:	cbz	w8, 14210 <__sanitizer_sandbox_on_notify@@Base+0x6e0>
   14150:	add	x8, sp, #0x8
   14154:	movi	v0.2d, #0x0
   14158:	add	x0, x8, #0x1c
   1415c:	mov	w2, #0x10                  	// #16
   14160:	mov	w1, wzr
   14164:	str	xzr, [sp, #8]
   14168:	str	wzr, [sp, #32]
   1416c:	strb	wzr, [sp, #52]
   14170:	stur	q0, [sp, #16]
   14174:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   14178:	movi	v0.2d, #0x0
   1417c:	stur	q0, [sp, #64]
   14180:	str	xzr, [sp, #56]
   14184:	ldr	x1, [sp, #80]
   14188:	ldr	x2, [x20]
   1418c:	add	x0, sp, #0x8
   14190:	bl	6aa0 <__sanitizer_report_error_summary@@Base+0xb8>
   14194:	ldrh	w8, [x20, #24]
   14198:	cbz	w8, 14200 <__sanitizer_sandbox_on_notify@@Base+0x6d0>
   1419c:	mov	x21, xzr
   141a0:	mov	x22, xzr
   141a4:	b	141b8 <__sanitizer_sandbox_on_notify@@Base+0x688>
   141a8:	add	x22, x22, #0x1
   141ac:	cmp	x22, w8, uxth
   141b0:	add	x21, x21, #0x38
   141b4:	b.cs	14200 <__sanitizer_sandbox_on_notify@@Base+0x6d0>  // b.hs, b.nlast
   141b8:	ldr	x9, [x20, #16]
   141bc:	ldr	w10, [x9, x21]
   141c0:	cmp	w10, #0x1
   141c4:	b.ne	141a8 <__sanitizer_sandbox_on_notify@@Base+0x678>  // b.any
   141c8:	add	x9, x9, x21
   141cc:	ldr	x8, [x20]
   141d0:	ldr	x10, [x9, #16]
   141d4:	ldr	w11, [x9, #4]
   141d8:	ldr	x9, [x9, #40]
   141dc:	add	x0, sp, #0x8
   141e0:	add	x1, x10, x8
   141e4:	and	w3, w11, #0x1
   141e8:	add	x2, x1, x9
   141ec:	ubfx	w4, w11, #1, #1
   141f0:	mov	x5, xzr
   141f4:	bl	6c6c <__sanitizer_report_error_summary@@Base+0x284>
   141f8:	ldrh	w8, [x20, #24]
   141fc:	b	141a8 <__sanitizer_sandbox_on_notify@@Base+0x678>
   14200:	ldr	x0, [x19]
   14204:	add	x1, sp, #0x8
   14208:	bl	10f04 <__sanitizer_on_print@@Base+0x1004>
   1420c:	ldr	x0, [sp, #80]
   14210:	ldr	x1, [sp, #88]
   14214:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   14218:	ldp	x20, x19, [sp, #144]
   1421c:	ldp	x22, x21, [sp, #128]
   14220:	ldr	x30, [sp, #112]
   14224:	mov	w0, wzr
   14228:	add	sp, sp, #0xa0
   1422c:	ret
   14230:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   14234:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   14238:	add	x0, x0, #0xbf8
   1423c:	add	x2, x2, #0x7fd
   14240:	mov	w1, #0x1c5                 	// #453
   14244:	mov	x3, xzr
   14248:	mov	x4, xzr
   1424c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14250:	sub	sp, sp, #0x40
   14254:	stp	x30, x21, [sp, #32]
   14258:	stp	x20, x19, [sp, #48]
   1425c:	ldrb	w8, [x0, #24]
   14260:	mov	x19, x0
   14264:	cbz	w8, 14298 <__sanitizer_sandbox_on_notify@@Base+0x768>
   14268:	ldr	x8, [x19, #16]
   1426c:	cbz	x8, 14290 <__sanitizer_sandbox_on_notify@@Base+0x760>
   14270:	ldr	x20, [x19]
   14274:	add	x8, x8, x8, lsl #3
   14278:	lsl	x21, x8, #3
   1427c:	mov	x0, x20
   14280:	bl	6b30 <__sanitizer_report_error_summary@@Base+0x148>
   14284:	subs	x21, x21, #0x48
   14288:	add	x20, x20, #0x48
   1428c:	b.ne	1427c <__sanitizer_sandbox_on_notify@@Base+0x74c>  // b.any
   14290:	str	xzr, [x19, #16]
   14294:	b	142ac <__sanitizer_sandbox_on_notify@@Base+0x77c>
   14298:	mov	w1, #0x4000                	// #16384
   1429c:	mov	x0, x19
   142a0:	stp	xzr, xzr, [x19, #8]
   142a4:	str	xzr, [x19]
   142a8:	bl	11024 <__sanitizer_on_print@@Base+0x1124>
   142ac:	mov	w8, #0x1                   	// #1
   142b0:	mov	x0, sp
   142b4:	mov	w1, #0x1                   	// #1
   142b8:	strb	w8, [x19, #24]
   142bc:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
   142c0:	mov	x0, sp
   142c4:	mov	x1, x19
   142c8:	bl	10ae0 <__sanitizer_on_print@@Base+0xbe0>
   142cc:	mov	x0, sp
   142d0:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
   142d4:	ldp	x20, x19, [sp, #48]
   142d8:	ldp	x30, x21, [sp, #32]
   142dc:	add	sp, sp, #0x40
   142e0:	ret
   142e4:	sub	sp, sp, #0xb0
   142e8:	stp	x30, x21, [sp, #144]
   142ec:	stp	x20, x19, [sp, #160]
   142f0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   142f4:	ldr	x8, [x8, #4056]
   142f8:	ldrb	w8, [x8, #168]
   142fc:	cbz	w8, 143a4 <__sanitizer_sandbox_on_notify@@Base+0x874>
   14300:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14304:	add	x0, x0, #0x5f8
   14308:	mov	w1, wzr
   1430c:	mov	x2, xzr
   14310:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
   14314:	cmn	w0, #0x1
   14318:	b.eq	143a4 <__sanitizer_sandbox_on_notify@@Base+0x874>  // b.none
   1431c:	mov	x1, sp
   14320:	mov	w2, #0x3f                  	// #63
   14324:	mov	w19, w0
   14328:	mov	x21, sp
   1432c:	bl	cf64 <__sanitizer_set_report_fd@@Base+0x36b0>
   14330:	mov	x20, x0
   14334:	mov	w0, w19
   14338:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1433c:	cmp	x20, #0x1
   14340:	b.lt	143d0 <__sanitizer_sandbox_on_notify@@Base+0x8a0>  // b.tstop
   14344:	strb	wzr, [x21, x20]
   14348:	ldrb	w8, [x21], #1
   1434c:	sub	w9, w8, #0x30
   14350:	cmp	w9, #0xa
   14354:	b.cc	14348 <__sanitizer_sandbox_on_notify@@Base+0x818>  // b.lo, b.ul, b.last
   14358:	cbz	w8, 143e4 <__sanitizer_sandbox_on_notify@@Base+0x8b4>
   1435c:	ldrb	w8, [x21], #1
   14360:	sub	w9, w8, #0x30
   14364:	cbz	w8, 14374 <__sanitizer_sandbox_on_notify@@Base+0x844>
   14368:	and	w10, w9, #0xff
   1436c:	cmp	w10, #0xa
   14370:	b.cs	1435c <__sanitizer_sandbox_on_notify@@Base+0x82c>  // b.hs, b.nlast
   14374:	cmp	w9, #0x9
   14378:	b.hi	14414 <__sanitizer_sandbox_on_notify@@Base+0x8e4>  // b.pmore
   1437c:	mov	x19, xzr
   14380:	mov	w9, #0xa                   	// #10
   14384:	mul	x10, x19, x9
   14388:	add	x10, x10, w8, uxtb
   1438c:	ldrb	w8, [x21], #1
   14390:	sub	x19, x10, #0x30
   14394:	sub	w11, w8, #0x30
   14398:	cmp	w11, #0xa
   1439c:	b.cc	14384 <__sanitizer_sandbox_on_notify@@Base+0x854>  // b.lo, b.ul, b.last
   143a0:	b	143e8 <__sanitizer_sandbox_on_notify@@Base+0x8b8>
   143a4:	mov	x1, sp
   143a8:	mov	w0, wzr
   143ac:	bl	4710 <getrusage@plt>
   143b0:	ldr	x8, [sp, #32]
   143b4:	cmp	w0, #0x0
   143b8:	lsl	x8, x8, #10
   143bc:	csel	x0, x8, xzr, eq  // eq = none
   143c0:	ldp	x20, x19, [sp, #160]
   143c4:	ldp	x30, x21, [sp, #144]
   143c8:	add	sp, sp, #0xb0
   143cc:	ret
   143d0:	mov	x0, xzr
   143d4:	ldp	x20, x19, [sp, #160]
   143d8:	ldp	x30, x21, [sp, #144]
   143dc:	add	sp, sp, #0xb0
   143e0:	ret
   143e4:	mov	x19, xzr
   143e8:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   143ec:	ldr	x20, [x20, #4016]
   143f0:	ldr	x0, [x20]
   143f4:	cbnz	x0, 14400 <__sanitizer_sandbox_on_notify@@Base+0x8d0>
   143f8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   143fc:	str	x0, [x20]
   14400:	mul	x0, x0, x19
   14404:	ldp	x20, x19, [sp, #160]
   14408:	ldp	x30, x21, [sp, #144]
   1440c:	add	sp, sp, #0xb0
   14410:	ret
   14414:	mov	x19, xzr
   14418:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1441c:	ldr	x20, [x20, #4016]
   14420:	ldr	x0, [x20]
   14424:	cbnz	x0, 14400 <__sanitizer_sandbox_on_notify@@Base+0x8d0>
   14428:	b	143f8 <__sanitizer_sandbox_on_notify@@Base+0x8c8>
   1442c:	sub	sp, sp, #0x90
   14430:	str	x30, [sp, #128]
   14434:	mov	x2, sp
   14438:	mov	w1, #0x80                  	// #128
   1443c:	mov	w0, wzr
   14440:	bl	4610 <sched_getaffinity@plt>
   14444:	cbnz	w0, 14460 <__sanitizer_sandbox_on_notify@@Base+0x930>
   14448:	mov	x1, sp
   1444c:	mov	w0, #0x80                  	// #128
   14450:	bl	4830 <__sched_cpucount@plt>
   14454:	ldr	x30, [sp, #128]
   14458:	add	sp, sp, #0x90
   1445c:	ret
   14460:	sxtw	x3, w0
   14464:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14468:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1446c:	add	x0, x0, #0x44f
   14470:	add	x2, x2, #0x609
   14474:	mov	w1, #0x2b9                 	// #697
   14478:	mov	x4, xzr
   1447c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14480:	ret
   14484:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   14488:	mov	x2, x0
   1448c:	add	x1, x1, #0x338
   14490:	mov	w0, #0x6                   	// #6
   14494:	b	4860 <syslog@plt>
   14498:	ret
   1449c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   144a0:	ldr	x8, [x8, #4056]
   144a4:	ldrb	w8, [x8, #49]
   144a8:	cbz	w8, 144b0 <__sanitizer_sandbox_on_notify@@Base+0x980>
   144ac:	b	139f8 <__sanitizer_set_death_callback@@Base+0x388>
   144b0:	ret
   144b4:	sub	sp, sp, #0x20
   144b8:	str	x30, [sp, #16]
   144bc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   144c0:	ldr	x8, [x8, #3992]
   144c4:	cbz	x8, 144f4 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   144c8:	ldr	x8, [x8]
   144cc:	cbz	x8, 144f4 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   144d0:	ldrb	w8, [x8]
   144d4:	cbz	w8, 144f4 <__sanitizer_sandbox_on_notify@@Base+0x9c4>
   144d8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   144dc:	ldr	x8, [x8, #3848]
   144e0:	mov	x1, sp
   144e4:	mov	w0, #0x1                   	// #1
   144e8:	cbz	x8, 1451c <__sanitizer_sandbox_on_notify@@Base+0x9ec>
   144ec:	bl	4730 <real_clock_gettime@plt>
   144f0:	b	14500 <__sanitizer_sandbox_on_notify@@Base+0x9d0>
   144f4:	mov	x1, sp
   144f8:	mov	w0, #0x1                   	// #1
   144fc:	bl	d1e0 <__sanitizer_set_report_fd@@Base+0x392c>
   14500:	ldp	x8, x9, [sp]
   14504:	ldr	x30, [sp, #16]
   14508:	mov	w10, #0xca00                	// #51712
   1450c:	movk	w10, #0x3b9a, lsl #16
   14510:	madd	x0, x8, x10, x9
   14514:	add	sp, sp, #0x20
   14518:	ret
   1451c:	bl	4780 <clock_gettime@plt>
   14520:	b	14500 <__sanitizer_sandbox_on_notify@@Base+0x9d0>
   14524:	str	x30, [sp, #-32]!
   14528:	stp	x20, x19, [sp, #16]
   1452c:	mov	w0, #0x1f                  	// #31
   14530:	bl	48b0 <getauxval@plt>
   14534:	mov	x19, x0
   14538:	bl	d314 <__sanitizer_set_report_fd@@Base+0x3a60>
   1453c:	mov	x20, x0
   14540:	bl	d47c <__sanitizer_set_report_fd@@Base+0x3bc8>
   14544:	mov	x2, x0
   14548:	mov	x0, x19
   1454c:	mov	x1, x20
   14550:	bl	d104 <__sanitizer_set_report_fd@@Base+0x3850>
   14554:	add	x1, sp, #0xc
   14558:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   1455c:	tbz	w0, #0, 14574 <__sanitizer_sandbox_on_notify@@Base+0xa44>
   14560:	ldr	w1, [sp, #12]
   14564:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14568:	add	x0, x0, #0x674
   1456c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   14570:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   14574:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14578:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1457c:	add	x0, x0, #0x44f
   14580:	add	x2, x2, #0x645
   14584:	mov	w1, #0x342                 	// #834
   14588:	mov	w4, #0x1                   	// #1
   1458c:	mov	x3, xzr
   14590:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14594:	b	4910 <getuid@plt>
   14598:	b	4900 <pthread_self@plt>
   1459c:	stp	x30, x21, [sp, #-32]!
   145a0:	stp	x20, x19, [sp, #16]
   145a4:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   145a8:	ldr	x21, [x21, #4016]
   145ac:	mov	x19, x1
   145b0:	mov	x20, x0
   145b4:	ldr	x8, [x21]
   145b8:	cbnz	x8, 145c8 <__sanitizer_sandbox_on_notify@@Base+0xa98>
   145bc:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   145c0:	mov	x8, x0
   145c4:	str	x0, [x21]
   145c8:	sub	x9, x8, #0x1
   145cc:	tst	x8, x9
   145d0:	b.ne	1460c <__sanitizer_sandbox_on_notify@@Base+0xadc>  // b.any
   145d4:	add	x9, x20, x8
   145d8:	neg	x8, x8
   145dc:	sub	x9, x9, #0x1
   145e0:	and	x0, x9, x8
   145e4:	and	x8, x8, x19
   145e8:	subs	x1, x8, x0
   145ec:	b.ls	14600 <__sanitizer_sandbox_on_notify@@Base+0xad0>  // b.plast
   145f0:	ldp	x20, x19, [sp, #16]
   145f4:	mov	w2, #0x4                   	// #4
   145f8:	ldp	x30, x21, [sp], #32
   145fc:	b	4810 <madvise@plt>
   14600:	ldp	x20, x19, [sp, #16]
   14604:	ldp	x30, x21, [sp], #32
   14608:	ret
   1460c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   14610:	add	x0, x0, #0x121
   14614:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   14618:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1461c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14620:	ldr	x8, [x8, #4056]
   14624:	ldrb	w8, [x8, #208]
   14628:	cmp	w8, #0x0
   1462c:	mov	w8, #0xe                   	// #14
   14630:	cinc	w2, w8, ne  // ne = any
   14634:	b	4810 <madvise@plt>
   14638:	str	x30, [sp, #-16]!
   1463c:	mov	w2, #0x10                  	// #16
   14640:	bl	4810 <madvise@plt>
   14644:	cmp	w0, #0x0
   14648:	cset	w0, eq  // eq = none
   1464c:	ldr	x30, [sp], #16
   14650:	ret
   14654:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14658:	ldr	x8, [x8, #4056]
   1465c:	ldrb	w8, [x8, #186]
   14660:	cbz	w8, 14670 <__sanitizer_sandbox_on_notify@@Base+0xb40>
   14664:	mov	w0, #0x4                   	// #4
   14668:	mov	x1, xzr
   1466c:	b	14674 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   14670:	ret
   14674:	sub	sp, sp, #0x30
   14678:	str	x30, [sp, #16]
   1467c:	stp	x20, x19, [sp, #32]
   14680:	mov	x20, x1
   14684:	mov	x1, sp
   14688:	mov	w19, w0
   1468c:	bl	4930 <getrlimit@plt>
   14690:	cbnz	w0, 146b8 <__sanitizer_sandbox_on_notify@@Base+0xb88>
   14694:	mov	x1, sp
   14698:	mov	w0, w19
   1469c:	str	x20, [sp]
   146a0:	bl	48a0 <setrlimit@plt>
   146a4:	cbnz	w0, 146d8 <__sanitizer_sandbox_on_notify@@Base+0xba8>
   146a8:	ldp	x20, x19, [sp, #32]
   146ac:	ldr	x30, [sp, #16]
   146b0:	add	sp, sp, #0x30
   146b4:	ret
   146b8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   146bc:	ldr	x8, [x8, #4024]
   146c0:	ldr	x19, [x8]
   146c4:	bl	4840 <__errno_location@plt>
   146c8:	ldr	w2, [x0]
   146cc:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   146d0:	add	x0, x0, #0x957
   146d4:	b	146f4 <__sanitizer_sandbox_on_notify@@Base+0xbc4>
   146d8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   146dc:	ldr	x8, [x8, #4024]
   146e0:	ldr	x19, [x8]
   146e4:	bl	4840 <__errno_location@plt>
   146e8:	ldr	w2, [x0]
   146ec:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   146f0:	add	x0, x0, #0x978
   146f4:	mov	x1, x19
   146f8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   146fc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   14700:	sub	sp, sp, #0x20
   14704:	str	x30, [sp, #16]
   14708:	mov	x1, sp
   1470c:	mov	w0, #0x3                   	// #3
   14710:	bl	4930 <getrlimit@plt>
   14714:	cbnz	w0, 14730 <__sanitizer_sandbox_on_notify@@Base+0xc00>
   14718:	ldr	x8, [sp]
   1471c:	ldr	x30, [sp, #16]
   14720:	cmn	x8, #0x1
   14724:	cset	w0, eq  // eq = none
   14728:	add	sp, sp, #0x20
   1472c:	ret
   14730:	sxtw	x4, w0
   14734:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14738:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1473c:	add	x0, x0, #0x6a2
   14740:	add	x2, x2, #0x999
   14744:	mov	w1, #0x5c                  	// #92
   14748:	mov	x3, xzr
   1474c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14750:	sub	sp, sp, #0x20
   14754:	str	x30, [sp, #16]
   14758:	mov	x1, x0
   1475c:	mov	w0, #0x3                   	// #3
   14760:	bl	14674 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   14764:	mov	x1, sp
   14768:	mov	w0, #0x3                   	// #3
   1476c:	bl	4930 <getrlimit@plt>
   14770:	cbnz	w0, 1478c <__sanitizer_sandbox_on_notify@@Base+0xc5c>
   14774:	ldr	x8, [sp]
   14778:	cmn	x8, #0x1
   1477c:	b.eq	147ac <__sanitizer_sandbox_on_notify@@Base+0xc7c>  // b.none
   14780:	ldr	x30, [sp, #16]
   14784:	add	sp, sp, #0x20
   14788:	ret
   1478c:	sxtw	x4, w0
   14790:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14794:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14798:	add	x0, x0, #0x6a2
   1479c:	add	x2, x2, #0x999
   147a0:	mov	w1, #0x5c                  	// #92
   147a4:	mov	x3, xzr
   147a8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   147ac:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   147b0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   147b4:	add	x0, x0, #0x6a2
   147b8:	add	x2, x2, #0x6fc
   147bc:	mov	w1, #0x7a                  	// #122
   147c0:	mov	x3, xzr
   147c4:	mov	x4, xzr
   147c8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   147cc:	sub	sp, sp, #0x20
   147d0:	str	x30, [sp, #16]
   147d4:	mov	x1, sp
   147d8:	mov	w0, #0x9                   	// #9
   147dc:	bl	4930 <getrlimit@plt>
   147e0:	cbnz	w0, 147fc <__sanitizer_sandbox_on_notify@@Base+0xccc>
   147e4:	ldr	x8, [sp]
   147e8:	ldr	x30, [sp, #16]
   147ec:	cmn	x8, #0x1
   147f0:	cset	w0, eq  // eq = none
   147f4:	add	sp, sp, #0x20
   147f8:	ret
   147fc:	sxtw	x4, w0
   14800:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14804:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14808:	add	x0, x0, #0x6a2
   1480c:	add	x2, x2, #0x999
   14810:	mov	w1, #0x5c                  	// #92
   14814:	mov	x3, xzr
   14818:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1481c:	sub	sp, sp, #0x20
   14820:	str	x30, [sp, #16]
   14824:	mov	w0, #0x9                   	// #9
   14828:	mov	x1, #0xffffffffffffffff    	// #-1
   1482c:	bl	14674 <__sanitizer_sandbox_on_notify@@Base+0xb44>
   14830:	mov	x1, sp
   14834:	mov	w0, #0x9                   	// #9
   14838:	bl	4930 <getrlimit@plt>
   1483c:	cbnz	w0, 14858 <__sanitizer_sandbox_on_notify@@Base+0xd28>
   14840:	ldr	x8, [sp]
   14844:	cmn	x8, #0x1
   14848:	b.ne	14878 <__sanitizer_sandbox_on_notify@@Base+0xd48>  // b.any
   1484c:	ldr	x30, [sp, #16]
   14850:	add	sp, sp, #0x20
   14854:	ret
   14858:	sxtw	x4, w0
   1485c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14860:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14864:	add	x0, x0, #0x6a2
   14868:	add	x2, x2, #0x999
   1486c:	mov	w1, #0x5c                  	// #92
   14870:	mov	x3, xzr
   14874:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14878:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1487c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14880:	add	x0, x0, #0x6a2
   14884:	add	x2, x2, #0x71f
   14888:	mov	w1, #0x84                  	// #132
   1488c:	mov	x3, xzr
   14890:	mov	x4, xzr
   14894:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14898:	b	46a0 <sleep@plt>
   1489c:	mov	w8, #0x3e8                 	// #1000
   148a0:	mul	w0, w0, w8
   148a4:	b	4820 <usleep@plt>
   148a8:	sub	sp, sp, #0xb0
   148ac:	str	x30, [sp, #160]
   148b0:	mov	w0, #0x6                   	// #6
   148b4:	bl	e1b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   148b8:	cbz	w0, 148e0 <__sanitizer_sandbox_on_notify@@Base+0xdb0>
   148bc:	add	x0, sp, #0x8
   148c0:	mov	w2, #0x98                  	// #152
   148c4:	mov	w1, wzr
   148c8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   148cc:	add	x1, sp, #0x8
   148d0:	mov	w0, #0x6                   	// #6
   148d4:	mov	x2, xzr
   148d8:	str	xzr, [sp, #8]
   148dc:	bl	13b6c <__sanitizer_sandbox_on_notify@@Base+0x3c>
   148e0:	bl	48c0 <abort@plt>
   148e4:	b	22800 <__interceptor_sigaction@@Base+0x244>
   148e8:	str	x30, [sp, #-16]!
   148ec:	bl	46d0 <isatty@plt>
   148f0:	cmp	w0, #0x0
   148f4:	cset	w0, ne  // ne = any
   148f8:	ldr	x30, [sp], #16
   148fc:	ret
   14900:	sub	sp, sp, #0x40
   14904:	stp	x30, x19, [sp, #48]
   14908:	mov	x1, sp
   1490c:	mov	x0, xzr
   14910:	bl	4940 <sigaltstack@plt>
   14914:	cbnz	w0, 14960 <__sanitizer_sandbox_on_notify@@Base+0xe30>
   14918:	ldrb	w8, [sp, #8]
   1491c:	tbz	w8, #1, 14954 <__sanitizer_sandbox_on_notify@@Base+0xe24>
   14920:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14924:	add	x1, x1, #0x771
   14928:	mov	w0, #0x10000               	// #65536
   1492c:	mov	w2, wzr
   14930:	mov	w19, #0x10000               	// #65536
   14934:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   14938:	str	x0, [sp, #24]
   1493c:	add	x0, sp, #0x18
   14940:	mov	x1, xzr
   14944:	str	wzr, [sp, #32]
   14948:	str	x19, [sp, #40]
   1494c:	bl	4940 <sigaltstack@plt>
   14950:	cbnz	w0, 14980 <__sanitizer_sandbox_on_notify@@Base+0xe50>
   14954:	ldp	x30, x19, [sp, #48]
   14958:	add	sp, sp, #0x40
   1495c:	ret
   14960:	sxtw	x4, w0
   14964:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14968:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1496c:	add	x0, x0, #0x6a2
   14970:	add	x2, x2, #0x744
   14974:	mov	w1, #0xb0                  	// #176
   14978:	mov	x3, xzr
   1497c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14980:	sxtw	x4, w0
   14984:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14988:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1498c:	add	x0, x0, #0x6a2
   14990:	add	x2, x2, #0x789
   14994:	mov	w1, #0xbb                  	// #187
   14998:	mov	x3, xzr
   1499c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   149a0:	sub	sp, sp, #0x40
   149a4:	mov	w8, #0x2                   	// #2
   149a8:	mov	w9, #0x10000               	// #65536
   149ac:	add	x0, sp, #0x18
   149b0:	mov	x1, sp
   149b4:	str	xzr, [sp, #24]
   149b8:	str	w8, [sp, #32]
   149bc:	stp	x9, x30, [sp, #40]
   149c0:	bl	4940 <sigaltstack@plt>
   149c4:	cbnz	w0, 149e0 <__sanitizer_sandbox_on_notify@@Base+0xeb0>
   149c8:	ldr	x0, [sp]
   149cc:	ldr	x1, [sp, #16]
   149d0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   149d4:	ldr	x30, [sp, #48]
   149d8:	add	sp, sp, #0x40
   149dc:	ret
   149e0:	sxtw	x4, w0
   149e4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   149e8:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   149ec:	add	x0, x0, #0x6a2
   149f0:	add	x2, x2, #0x7b6
   149f4:	mov	w1, #0xc3                  	// #195
   149f8:	mov	x3, xzr
   149fc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14a00:	stp	x30, x19, [sp, #-16]!
   14a04:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14a08:	ldr	x8, [x8, #4056]
   14a0c:	mov	x19, x0
   14a10:	ldrb	w8, [x8, #97]
   14a14:	cbz	w8, 14a1c <__sanitizer_sandbox_on_notify@@Base+0xeec>
   14a18:	bl	14900 <__sanitizer_sandbox_on_notify@@Base+0xdd0>
   14a1c:	mov	w0, #0xb                   	// #11
   14a20:	mov	x1, x19
   14a24:	bl	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a28:	mov	w0, #0x7                   	// #7
   14a2c:	mov	x1, x19
   14a30:	bl	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a34:	mov	w0, #0x6                   	// #6
   14a38:	mov	x1, x19
   14a3c:	bl	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a40:	mov	w0, #0x8                   	// #8
   14a44:	mov	x1, x19
   14a48:	bl	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a4c:	mov	w0, #0x4                   	// #4
   14a50:	mov	x1, x19
   14a54:	bl	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a58:	mov	w0, #0x5                   	// #5
   14a5c:	mov	x1, x19
   14a60:	ldp	x30, x19, [sp], #16
   14a64:	b	14a68 <__sanitizer_sandbox_on_notify@@Base+0xf38>
   14a68:	sub	sp, sp, #0xc0
   14a6c:	str	x30, [sp, #160]
   14a70:	stp	x20, x19, [sp, #176]
   14a74:	mov	x20, x1
   14a78:	mov	w19, w0
   14a7c:	bl	e1b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   14a80:	cbz	w0, 14af4 <__sanitizer_sandbox_on_notify@@Base+0xfc4>
   14a84:	add	x0, sp, #0x8
   14a88:	mov	w2, #0x98                  	// #152
   14a8c:	mov	w1, wzr
   14a90:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   14a94:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14a98:	ldr	x8, [x8, #4056]
   14a9c:	mov	w9, #0x4                   	// #4
   14aa0:	movk	w9, #0x4800, lsl #16
   14aa4:	add	x1, sp, #0x8
   14aa8:	ldrb	w8, [x8, #97]
   14aac:	mov	w0, w19
   14ab0:	mov	x2, xzr
   14ab4:	str	x20, [sp, #8]
   14ab8:	cmp	w8, #0x0
   14abc:	mov	w8, #0x4                   	// #4
   14ac0:	movk	w8, #0x4000, lsl #16
   14ac4:	csel	w8, w8, w9, eq  // eq = none
   14ac8:	str	w8, [sp, #144]
   14acc:	bl	13b6c <__sanitizer_sandbox_on_notify@@Base+0x3c>
   14ad0:	cbnz	w0, 14b04 <__sanitizer_sandbox_on_notify@@Base+0xfd4>
   14ad4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14ad8:	ldr	x8, [x8, #3872]
   14adc:	ldr	w8, [x8]
   14ae0:	cbz	w8, 14af4 <__sanitizer_sandbox_on_notify@@Base+0xfc4>
   14ae4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14ae8:	add	x0, x0, #0x9f6
   14aec:	mov	w1, w19
   14af0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   14af4:	ldp	x20, x19, [sp, #176]
   14af8:	ldr	x30, [sp, #160]
   14afc:	add	sp, sp, #0xc0
   14b00:	ret
   14b04:	sxtw	x4, w0
   14b08:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14b0c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14b10:	add	x0, x0, #0x6a2
   14b14:	add	x2, x2, #0x9bc
   14b18:	mov	w1, #0xd2                  	// #210
   14b1c:	mov	x3, xzr
   14b20:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14b24:	stp	x30, x21, [sp, #-32]!
   14b28:	stp	x20, x19, [sp, #16]
   14b2c:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14b30:	ldr	x21, [x21, #4016]
   14b34:	mov	x19, x0
   14b38:	ldr	x20, [x19, #16]
   14b3c:	ldr	x0, [x21]
   14b40:	cbz	x0, 14b58 <__sanitizer_sandbox_on_notify@@Base+0x1028>
   14b44:	ldr	x8, [x19, #32]
   14b48:	add	x9, x0, x20
   14b4c:	cmp	x9, x8
   14b50:	b.ls	14bb0 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.plast
   14b54:	b	14b70 <__sanitizer_sandbox_on_notify@@Base+0x1040>
   14b58:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   14b5c:	str	x0, [x21]
   14b60:	ldr	x8, [x19, #32]
   14b64:	add	x9, x0, x20
   14b68:	cmp	x9, x8
   14b6c:	b.ls	14bb0 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.plast
   14b70:	ldr	x9, [x19, #16]
   14b74:	mov	w10, #0xffff                	// #65535
   14b78:	add	x8, x8, x10
   14b7c:	cmp	x9, x8
   14b80:	b.cs	14bb0 <__sanitizer_sandbox_on_notify@@Base+0x1080>  // b.hs, b.nlast
   14b84:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14b88:	ldr	x8, [x19]
   14b8c:	ldr	x9, [x9, #3736]
   14b90:	ldr	w8, [x8, #8]
   14b94:	ldr	w9, [x9]
   14b98:	cmp	w8, w9
   14b9c:	b.ne	14bc0 <__sanitizer_sandbox_on_notify@@Base+0x1090>  // b.any
   14ba0:	mov	w0, #0x1                   	// #1
   14ba4:	ldp	x20, x19, [sp, #16]
   14ba8:	ldp	x30, x21, [sp], #32
   14bac:	ret
   14bb0:	mov	w0, wzr
   14bb4:	ldp	x20, x19, [sp, #16]
   14bb8:	ldp	x30, x21, [sp], #32
   14bbc:	ret
   14bc0:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14bc4:	ldr	x9, [x9, #3760]
   14bc8:	ldr	w9, [x9]
   14bcc:	cmp	w8, w9
   14bd0:	cset	w0, eq  // eq = none
   14bd4:	ldp	x20, x19, [sp, #16]
   14bd8:	ldp	x30, x21, [sp], #32
   14bdc:	ret
   14be0:	sub	sp, sp, #0x30
   14be4:	stp	x30, x21, [sp, #16]
   14be8:	stp	x20, x19, [sp, #32]
   14bec:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14bf0:	ldr	x21, [x21, #4016]
   14bf4:	mov	x19, x1
   14bf8:	mov	x20, x0
   14bfc:	ldr	x8, [x21]
   14c00:	cbnz	x8, 14c10 <__sanitizer_sandbox_on_notify@@Base+0x10e0>
   14c04:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   14c08:	mov	x8, x0
   14c0c:	str	x0, [x21]
   14c10:	add	x8, x8, x8, lsl #2
   14c14:	lsl	x4, x8, #1
   14c18:	cmp	x4, x19
   14c1c:	b.ls	14c94 <__sanitizer_sandbox_on_notify@@Base+0x1164>  // b.plast
   14c20:	add	x0, sp, #0x8
   14c24:	bl	4630 <pipe@plt>
   14c28:	cbz	w0, 14c34 <__sanitizer_sandbox_on_notify@@Base+0x1104>
   14c2c:	mov	w19, wzr
   14c30:	b	14c80 <__sanitizer_sandbox_on_notify@@Base+0x1150>
   14c34:	ldr	w0, [sp, #12]
   14c38:	mov	x1, x20
   14c3c:	mov	x2, x19
   14c40:	bl	cf88 <__sanitizer_set_report_fd@@Base+0x36d4>
   14c44:	add	x1, sp, #0x4
   14c48:	mov	x20, x0
   14c4c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   14c50:	tbz	w0, #0, 14c68 <__sanitizer_sandbox_on_notify@@Base+0x1138>
   14c54:	ldrsw	x4, [sp, #4]
   14c58:	cmp	w4, #0xe
   14c5c:	b.ne	14cb0 <__sanitizer_sandbox_on_notify@@Base+0x1180>  // b.any
   14c60:	mov	w19, wzr
   14c64:	b	14c70 <__sanitizer_sandbox_on_notify@@Base+0x1140>
   14c68:	cmp	x20, x19
   14c6c:	cset	w19, eq  // eq = none
   14c70:	ldr	w0, [sp, #8]
   14c74:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   14c78:	ldr	w0, [sp, #12]
   14c7c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   14c80:	mov	w0, w19
   14c84:	ldp	x20, x19, [sp, #32]
   14c88:	ldp	x30, x21, [sp, #16]
   14c8c:	add	sp, sp, #0x30
   14c90:	ret
   14c94:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14c98:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14c9c:	add	x0, x0, #0x6a2
   14ca0:	add	x2, x2, #0x7e5
   14ca4:	mov	w1, #0x118                 	// #280
   14ca8:	mov	x3, x19
   14cac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14cb0:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14cb4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14cb8:	add	x0, x0, #0x6a2
   14cbc:	add	x2, x2, #0x803
   14cc0:	mov	w1, #0x121                 	// #289
   14cc4:	mov	w3, #0xe                   	// #14
   14cc8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14ccc:	b	109bc <__sanitizer_on_print@@Base+0xabc>
   14cd0:	str	x30, [sp, #-48]!
   14cd4:	stp	x22, x21, [sp, #16]
   14cd8:	stp	x20, x19, [sp, #32]
   14cdc:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14ce0:	ldr	x22, [x22, #4016]
   14ce4:	mov	x19, x2
   14ce8:	mov	x20, x1
   14cec:	mov	x21, x0
   14cf0:	ldr	x8, [x22]
   14cf4:	cbnz	x8, 14d04 <__sanitizer_sandbox_on_notify@@Base+0x11d4>
   14cf8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   14cfc:	mov	x8, x0
   14d00:	str	x0, [x22]
   14d04:	sub	x9, x8, #0x1
   14d08:	tst	x8, x9
   14d0c:	b.ne	14db0 <__sanitizer_sandbox_on_notify@@Base+0x1280>  // b.any
   14d10:	add	x9, x20, x8
   14d14:	sub	x10, x9, #0x1
   14d18:	neg	x9, x8
   14d1c:	and	x20, x10, x9
   14d20:	cbnz	x8, 14d30 <__sanitizer_sandbox_on_notify@@Base+0x1200>
   14d24:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   14d28:	neg	x9, x0
   14d2c:	str	x0, [x22]
   14d30:	and	x21, x9, x21
   14d34:	mov	w2, #0x3                   	// #3
   14d38:	mov	w3, #0x4032                	// #16434
   14d3c:	mov	x0, x21
   14d40:	mov	x1, x20
   14d44:	mov	x4, x19
   14d48:	bl	e868 <__sanitizer_set_report_fd@@Base+0x4fb4>
   14d4c:	add	x1, sp, #0xc
   14d50:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   14d54:	tbz	w0, #0, 14d94 <__sanitizer_sandbox_on_notify@@Base+0x1264>
   14d58:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14d5c:	ldr	x8, [x8, #4024]
   14d60:	ldr	w5, [sp, #12]
   14d64:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14d68:	add	x0, x0, #0xa1d
   14d6c:	ldr	x1, [x8]
   14d70:	mov	x2, x20
   14d74:	mov	x3, x20
   14d78:	mov	x4, x21
   14d7c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   14d80:	mov	w0, wzr
   14d84:	ldp	x20, x19, [sp, #32]
   14d88:	ldp	x22, x21, [sp, #16]
   14d8c:	ldr	x30, [sp], #48
   14d90:	ret
   14d94:	mov	x0, x20
   14d98:	bl	6d70 <__sanitizer_report_error_summary@@Base+0x388>
   14d9c:	mov	w0, #0x1                   	// #1
   14da0:	ldp	x20, x19, [sp, #32]
   14da4:	ldp	x22, x21, [sp, #16]
   14da8:	ldr	x30, [sp], #48
   14dac:	ret
   14db0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   14db4:	add	x0, x0, #0x121
   14db8:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   14dbc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   14dc0:	stp	x30, x21, [sp, #-32]!
   14dc4:	stp	x20, x19, [sp, #16]
   14dc8:	mov	x19, x1
   14dcc:	mov	x20, x0
   14dd0:	bl	14cd0 <__sanitizer_sandbox_on_notify@@Base+0x11a0>
   14dd4:	mov	w21, w0
   14dd8:	tbz	w0, #0, 14e00 <__sanitizer_sandbox_on_notify@@Base+0x12d0>
   14ddc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14de0:	ldr	x8, [x8, #4056]
   14de4:	mov	x0, x20
   14de8:	mov	x1, x19
   14dec:	ldrb	w8, [x8, #208]
   14df0:	cmp	w8, #0x0
   14df4:	mov	w8, #0xe                   	// #14
   14df8:	cinc	w2, w8, ne  // ne = any
   14dfc:	bl	4810 <madvise@plt>
   14e00:	ldp	x20, x19, [sp, #16]
   14e04:	and	w0, w21, #0x1
   14e08:	ldp	x30, x21, [sp], #32
   14e0c:	ret
   14e10:	stp	x30, x21, [sp, #-32]!
   14e14:	stp	x20, x19, [sp, #16]
   14e18:	mov	x19, x2
   14e1c:	mov	x21, x1
   14e20:	mov	x20, x0
   14e24:	cbz	x3, 14e48 <__sanitizer_sandbox_on_notify@@Base+0x1318>
   14e28:	mov	x8, x3
   14e2c:	mov	w3, #0x4032                	// #16434
   14e30:	mov	x0, x8
   14e34:	mov	x1, x21
   14e38:	mov	w2, wzr
   14e3c:	mov	x4, x19
   14e40:	bl	e868 <__sanitizer_set_report_fd@@Base+0x4fb4>
   14e44:	b	14e64 <__sanitizer_sandbox_on_notify@@Base+0x1334>
   14e48:	mov	w3, #0x4022                	// #16418
   14e4c:	mov	w4, #0xffffffff            	// #-1
   14e50:	mov	x0, xzr
   14e54:	mov	x1, x21
   14e58:	mov	w2, wzr
   14e5c:	mov	x5, xzr
   14e60:	bl	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
   14e64:	stp	x0, x21, [x20]
   14e68:	str	x19, [x20, #16]
   14e6c:	ldp	x20, x19, [sp, #16]
   14e70:	ldp	x30, x21, [sp], #32
   14e74:	ret
   14e78:	mov	x4, x2
   14e7c:	mov	w3, #0x4032                	// #16434
   14e80:	mov	w2, wzr
   14e84:	b	e868 <__sanitizer_set_report_fd@@Base+0x4fb4>
   14e88:	mov	w3, #0x4022                	// #16418
   14e8c:	mov	w4, #0xffffffff            	// #-1
   14e90:	mov	x1, x0
   14e94:	mov	x0, xzr
   14e98:	mov	w2, wzr
   14e9c:	mov	x5, xzr
   14ea0:	b	cee0 <__sanitizer_set_report_fd@@Base+0x362c>
   14ea4:	mov	x0, x1
   14ea8:	mov	x1, x2
   14eac:	mov	x2, x3
   14eb0:	b	edf4 <__sanitizer_set_report_fd@@Base+0x5540>
   14eb4:	mov	x0, x1
   14eb8:	mov	x1, x2
   14ebc:	mov	x2, x3
   14ec0:	b	ecb0 <__sanitizer_set_report_fd@@Base+0x53fc>
   14ec4:	str	x30, [sp, #-16]!
   14ec8:	ldr	x4, [x0, #8]
   14ecc:	mov	x8, x2
   14ed0:	subs	x9, x4, x2
   14ed4:	b.cc	14f1c <__sanitizer_sandbox_on_notify@@Base+0x13ec>  // b.lo, b.ul, b.last
   14ed8:	ldr	x10, [x0]
   14edc:	cmp	x10, x1
   14ee0:	b.ne	14ef8 <__sanitizer_sandbox_on_notify@@Base+0x13c8>  // b.any
   14ee4:	add	x10, x8, x1
   14ee8:	cmp	x4, x8
   14eec:	csel	x10, xzr, x10, eq  // eq = none
   14ef0:	str	x10, [x0]
   14ef4:	b	14f08 <__sanitizer_sandbox_on_notify@@Base+0x13d8>
   14ef8:	add	x3, x8, x1
   14efc:	add	x4, x10, x4
   14f00:	cmp	x3, x4
   14f04:	b.ne	14f38 <__sanitizer_sandbox_on_notify@@Base+0x1408>  // b.any
   14f08:	str	x9, [x0, #8]
   14f0c:	mov	x0, x1
   14f10:	mov	x1, x8
   14f14:	ldr	x30, [sp], #16
   14f18:	b	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   14f1c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14f20:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14f24:	add	x0, x0, #0x6a2
   14f28:	add	x2, x2, #0x81d
   14f2c:	mov	w1, #0x16d                 	// #365
   14f30:	mov	x3, x8
   14f34:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14f38:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14f3c:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14f40:	add	x0, x0, #0x6a2
   14f44:	add	x2, x2, #0x833
   14f48:	mov	w1, #0x172                 	// #370
   14f4c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   14f50:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14f54:	ldr	x8, [x8, #3808]
   14f58:	cbz	x8, 14f6c <__sanitizer_sandbox_on_notify@@Base+0x143c>
   14f5c:	str	x30, [sp, #-16]!
   14f60:	bl	4690 <real_pthread_attr_getstack@plt>
   14f64:	ldr	x30, [sp], #16
   14f68:	ret
   14f6c:	b	47e0 <pthread_attr_getstack@plt>
   14f70:	sub	sp, sp, #0x40
   14f74:	stp	x30, xzr, [sp, #16]
   14f78:	stp	x22, x21, [sp, #32]
   14f7c:	stp	x20, x19, [sp, #48]
   14f80:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14f84:	ldr	x8, [x8, #3808]
   14f88:	mov	x19, x0
   14f8c:	add	x1, sp, #0x18
   14f90:	add	x2, sp, #0x8
   14f94:	str	xzr, [sp, #8]
   14f98:	cbz	x8, 14fa4 <__sanitizer_sandbox_on_notify@@Base+0x1474>
   14f9c:	bl	4690 <real_pthread_attr_getstack@plt>
   14fa0:	b	14fa8 <__sanitizer_sandbox_on_notify@@Base+0x1478>
   14fa4:	bl	47e0 <pthread_attr_getstack@plt>
   14fa8:	ldr	x21, [sp, #24]
   14fac:	ldr	x22, [sp, #8]
   14fb0:	bl	13eec <__sanitizer_sandbox_on_notify@@Base+0x3bc>
   14fb4:	ldr	x1, [sp, #8]
   14fb8:	add	x20, x0, #0x20, lsl #12
   14fbc:	cmp	x1, x20
   14fc0:	b.cs	15024 <__sanitizer_sandbox_on_notify@@Base+0x14f4>  // b.hs, b.nlast
   14fc4:	cbz	x21, 14ff4 <__sanitizer_sandbox_on_notify@@Base+0x14c4>
   14fc8:	neg	x8, x22
   14fcc:	cmp	x21, x8
   14fd0:	b.eq	14ff4 <__sanitizer_sandbox_on_notify@@Base+0x14c4>  // b.none
   14fd4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14fd8:	add	x0, x0, #0x89a
   14fdc:	mov	x2, x20
   14fe0:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   14fe4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   14fe8:	add	x0, x0, #0x8da
   14fec:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   14ff0:	b	15024 <__sanitizer_sandbox_on_notify@@Base+0x14f4>
   14ff4:	cbz	x1, 15024 <__sanitizer_sandbox_on_notify@@Base+0x14f4>
   14ff8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   14ffc:	ldr	x8, [x8, #3872]
   15000:	ldr	w8, [x8]
   15004:	cbz	w8, 15018 <__sanitizer_sandbox_on_notify@@Base+0x14e8>
   15008:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1500c:	add	x0, x0, #0x870
   15010:	mov	x2, x20
   15014:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   15018:	mov	x0, x19
   1501c:	mov	x1, x20
   15020:	bl	47f0 <pthread_attr_setstacksize@plt>
   15024:	ldp	x20, x19, [sp, #48]
   15028:	ldp	x22, x21, [sp, #32]
   1502c:	ldr	x30, [sp, #16]
   15030:	add	sp, sp, #0x40
   15034:	ret
   15038:	str	x30, [sp, #-64]!
   1503c:	stp	x24, x23, [sp, #16]
   15040:	stp	x22, x21, [sp, #32]
   15044:	stp	x20, x19, [sp, #48]
   15048:	mov	w19, w4
   1504c:	mov	w22, w3
   15050:	mov	w23, w2
   15054:	mov	x20, x1
   15058:	mov	x21, x0
   1505c:	bl	d7b8 <__sanitizer_set_report_fd@@Base+0x3f04>
   15060:	mov	w24, w0
   15064:	tbnz	w0, #31, 150e0 <__sanitizer_sandbox_on_notify@@Base+0x15b0>
   15068:	cbnz	w24, 15100 <__sanitizer_sandbox_on_notify@@Base+0x15d0>
   1506c:	cmn	w23, #0x1
   15070:	b.ne	15148 <__sanitizer_sandbox_on_notify@@Base+0x1618>  // b.any
   15074:	cmn	w22, #0x1
   15078:	b.ne	1516c <__sanitizer_sandbox_on_notify@@Base+0x163c>  // b.any
   1507c:	cmn	w19, #0x1
   15080:	b.eq	150a0 <__sanitizer_sandbox_on_notify@@Base+0x1570>  // b.none
   15084:	mov	w0, #0x2                   	// #2
   15088:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1508c:	mov	w1, #0x2                   	// #2
   15090:	mov	w0, w19
   15094:	bl	d050 <__sanitizer_set_report_fd@@Base+0x379c>
   15098:	mov	w0, w19
   1509c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   150a0:	mov	w0, #0x4                   	// #4
   150a4:	bl	48e0 <sysconf@plt>
   150a8:	mov	x19, x0
   150ac:	cmp	w19, #0x3
   150b0:	b.lt	150cc <__sanitizer_sandbox_on_notify@@Base+0x159c>  // b.tstop
   150b4:	mov	w0, w19
   150b8:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   150bc:	sub	w8, w19, #0x1
   150c0:	cmp	w19, #0x3
   150c4:	mov	w19, w8
   150c8:	b.gt	150b4 <__sanitizer_sandbox_on_notify@@Base+0x1584>
   150cc:	mov	x0, x21
   150d0:	mov	x1, x20
   150d4:	bl	4620 <execv@plt>
   150d8:	mov	w0, #0x1                   	// #1
   150dc:	bl	d0c4 <__sanitizer_set_report_fd@@Base+0x3810>
   150e0:	sxtw	x0, w24
   150e4:	add	x1, sp, #0xc
   150e8:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   150ec:	tbz	w0, #0, 15100 <__sanitizer_sandbox_on_notify@@Base+0x15d0>
   150f0:	ldr	w1, [sp, #12]
   150f4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   150f8:	add	x0, x0, #0x908
   150fc:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15100:	cmn	w23, #0x1
   15104:	b.eq	15110 <__sanitizer_sandbox_on_notify@@Base+0x15e0>  // b.none
   15108:	mov	w0, w23
   1510c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15110:	cmn	w22, #0x1
   15114:	b.eq	15120 <__sanitizer_sandbox_on_notify@@Base+0x15f0>  // b.none
   15118:	mov	w0, w22
   1511c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15120:	cmn	w19, #0x1
   15124:	b.eq	15130 <__sanitizer_sandbox_on_notify@@Base+0x1600>  // b.none
   15128:	mov	w0, w19
   1512c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15130:	mov	w0, w24
   15134:	ldp	x20, x19, [sp, #48]
   15138:	ldp	x22, x21, [sp, #32]
   1513c:	ldp	x24, x23, [sp, #16]
   15140:	ldr	x30, [sp], #64
   15144:	ret
   15148:	mov	w0, wzr
   1514c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15150:	mov	w0, w23
   15154:	mov	w1, wzr
   15158:	bl	d050 <__sanitizer_set_report_fd@@Base+0x379c>
   1515c:	mov	w0, w23
   15160:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15164:	cmn	w22, #0x1
   15168:	b.eq	1507c <__sanitizer_sandbox_on_notify@@Base+0x154c>  // b.none
   1516c:	mov	w0, #0x1                   	// #1
   15170:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15174:	mov	w1, #0x1                   	// #1
   15178:	mov	w0, w22
   1517c:	bl	d050 <__sanitizer_set_report_fd@@Base+0x379c>
   15180:	mov	w0, w22
   15184:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   15188:	cmn	w19, #0x1
   1518c:	b.ne	15084 <__sanitizer_sandbox_on_notify@@Base+0x1554>  // b.any
   15190:	b	150a0 <__sanitizer_sandbox_on_notify@@Base+0x1570>
   15194:	sub	sp, sp, #0x20
   15198:	stp	x30, x19, [sp, #16]
   1519c:	add	x1, sp, #0xc
   151a0:	mov	w2, #0x1                   	// #1
   151a4:	bl	d744 <__sanitizer_set_report_fd@@Base+0x3e90>
   151a8:	add	x1, sp, #0x8
   151ac:	mov	x19, x0
   151b0:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   151b4:	tbz	w0, #0, 151e8 <__sanitizer_sandbox_on_notify@@Base+0x16b8>
   151b8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   151bc:	ldr	x8, [x8, #3872]
   151c0:	ldr	w8, [x8]
   151c4:	cbz	w8, 151fc <__sanitizer_sandbox_on_notify@@Base+0x16cc>
   151c8:	ldr	w1, [sp, #8]
   151cc:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   151d0:	add	x0, x0, #0x92c
   151d4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   151d8:	mov	w0, wzr
   151dc:	ldp	x30, x19, [sp, #16]
   151e0:	add	sp, sp, #0x20
   151e4:	ret
   151e8:	cmp	x19, #0x0
   151ec:	cset	w0, eq  // eq = none
   151f0:	ldp	x30, x19, [sp, #16]
   151f4:	add	sp, sp, #0x20
   151f8:	ret
   151fc:	mov	w0, wzr
   15200:	ldp	x30, x19, [sp, #16]
   15204:	add	sp, sp, #0x20
   15208:	ret
   1520c:	str	x30, [sp, #-16]!
   15210:	add	x1, sp, #0xc
   15214:	mov	w2, wzr
   15218:	bl	d744 <__sanitizer_set_report_fd@@Base+0x3e90>
   1521c:	add	x1, sp, #0x8
   15220:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15224:	tbz	w0, #0, 15254 <__sanitizer_sandbox_on_notify@@Base+0x1724>
   15228:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1522c:	ldr	x8, [x8, #3872]
   15230:	ldr	w8, [x8]
   15234:	cbz	w8, 15260 <__sanitizer_sandbox_on_notify@@Base+0x1730>
   15238:	ldr	w1, [sp, #8]
   1523c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15240:	add	x0, x0, #0x92c
   15244:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15248:	mov	w0, #0xffffffff            	// #-1
   1524c:	ldr	x30, [sp], #16
   15250:	ret
   15254:	ldr	w0, [sp, #12]
   15258:	ldr	x30, [sp], #16
   1525c:	ret
   15260:	mov	w0, #0xffffffff            	// #-1
   15264:	ldr	x30, [sp], #16
   15268:	ret
   1526c:	cmp	w0, #0x1
   15270:	cset	w0, eq  // eq = none
   15274:	ret
   15278:	sub	sp, sp, #0x40
   1527c:	str	x30, [sp, #16]
   15280:	stp	x22, x21, [sp, #32]
   15284:	stp	x20, x19, [sp, #48]
   15288:	ldr	x8, [x0, #32]
   1528c:	mov	x20, x0
   15290:	mov	x19, x1
   15294:	cbz	x8, 152b4 <__sanitizer_sandbox_on_notify@@Base+0x1784>
   15298:	ldr	x9, [x20, #16]
   1529c:	ldr	x10, [x9]
   152a0:	cmp	x10, x19
   152a4:	b.eq	153c8 <__sanitizer_sandbox_on_notify@@Base+0x1898>  // b.none
   152a8:	subs	x8, x8, #0x1
   152ac:	add	x9, x9, #0x8
   152b0:	b.ne	1529c <__sanitizer_sandbox_on_notify@@Base+0x176c>  // b.any
   152b4:	mov	w0, #0x10                  	// #16
   152b8:	mov	w1, w19
   152bc:	mov	x2, xzr
   152c0:	mov	x3, xzr
   152c4:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   152c8:	add	x1, sp, #0xc
   152cc:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   152d0:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   152d4:	ldr	x22, [x22, #3872]
   152d8:	ldr	w8, [x22]
   152dc:	tbz	w0, #0, 152fc <__sanitizer_sandbox_on_notify@@Base+0x17cc>
   152e0:	cbz	w8, 153c8 <__sanitizer_sandbox_on_notify@@Base+0x1898>
   152e4:	ldr	w2, [sp, #12]
   152e8:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   152ec:	add	x0, x0, #0xa68
   152f0:	mov	x1, x19
   152f4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   152f8:	b	153c8 <__sanitizer_sandbox_on_notify@@Base+0x1898>
   152fc:	cmp	w8, #0x2
   15300:	b.cc	15314 <__sanitizer_sandbox_on_notify@@Base+0x17e4>  // b.lo, b.ul, b.last
   15304:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15308:	add	x0, x0, #0xa94
   1530c:	mov	x1, x19
   15310:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15314:	add	x1, sp, #0x18
   15318:	mov	w2, #0x40000000            	// #1073741824
   1531c:	mov	w0, w19
   15320:	bl	d744 <__sanitizer_set_report_fd@@Base+0x3e90>
   15324:	add	x1, sp, #0x8
   15328:	mov	x21, x0
   1532c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15330:	tbz	w0, #0, 15340 <__sanitizer_sandbox_on_notify@@Base+0x1810>
   15334:	ldr	w8, [sp, #8]
   15338:	cmp	w8, #0x4
   1533c:	b.eq	15314 <__sanitizer_sandbox_on_notify@@Base+0x17e4>  // b.none
   15340:	add	x1, sp, #0x8
   15344:	mov	x0, x21
   15348:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   1534c:	tbnz	w0, #0, 15398 <__sanitizer_sandbox_on_notify@@Base+0x1868>
   15350:	ldr	w8, [sp, #24]
   15354:	and	w9, w8, #0xff
   15358:	cmp	w9, #0x7f
   1535c:	b.ne	15380 <__sanitizer_sandbox_on_notify@@Base+0x1850>  // b.any
   15360:	ubfx	x3, x8, #8, #8
   15364:	cmp	w3, #0x13
   15368:	b.eq	15380 <__sanitizer_sandbox_on_notify@@Base+0x1850>  // b.none
   1536c:	mov	w0, #0x7                   	// #7
   15370:	mov	w1, w19
   15374:	mov	x2, xzr
   15378:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   1537c:	b	15314 <__sanitizer_sandbox_on_notify@@Base+0x17e4>
   15380:	add	x0, x20, #0x10
   15384:	add	x1, sp, #0x18
   15388:	str	x19, [sp, #24]
   1538c:	bl	e46c <__sanitizer_set_report_fd@@Base+0x4bb8>
   15390:	mov	w0, #0x1                   	// #1
   15394:	b	153cc <__sanitizer_sandbox_on_notify@@Base+0x189c>
   15398:	ldr	w8, [x22]
   1539c:	cbz	w8, 153b4 <__sanitizer_sandbox_on_notify@@Base+0x1884>
   153a0:	ldr	w2, [sp, #8]
   153a4:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   153a8:	add	x0, x0, #0xaad
   153ac:	mov	x1, x19
   153b0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   153b4:	mov	w0, #0x11                  	// #17
   153b8:	mov	w1, w19
   153bc:	mov	x2, xzr
   153c0:	mov	x3, xzr
   153c4:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   153c8:	mov	w0, wzr
   153cc:	ldp	x20, x19, [sp, #48]
   153d0:	ldp	x22, x21, [sp, #32]
   153d4:	ldr	x30, [sp, #16]
   153d8:	add	sp, sp, #0x40
   153dc:	ret
   153e0:	ldr	x8, [x0, #24]
   153e4:	cbz	x8, 15408 <__sanitizer_sandbox_on_notify@@Base+0x18d8>
   153e8:	ldr	x9, [x0, #8]
   153ec:	mov	x10, xzr
   153f0:	ldr	x11, [x9, x10, lsl #3]
   153f4:	cmp	x11, x1
   153f8:	b.eq	15410 <__sanitizer_sandbox_on_notify@@Base+0x18e0>  // b.none
   153fc:	add	x10, x10, #0x1
   15400:	cmp	x10, x8
   15404:	b.cc	153f0 <__sanitizer_sandbox_on_notify@@Base+0x18c0>  // b.lo, b.ul, b.last
   15408:	mov	w0, wzr
   1540c:	ret
   15410:	mov	w0, #0x1                   	// #1
   15414:	ret
   15418:	str	x30, [sp, #-16]!
   1541c:	str	x1, [sp, #8]
   15420:	add	x0, x0, #0x8
   15424:	add	x1, sp, #0x8
   15428:	bl	e46c <__sanitizer_set_report_fd@@Base+0x4bb8>
   1542c:	ldr	x30, [sp], #16
   15430:	ret
   15434:	str	x30, [sp, #-64]!
   15438:	stp	x24, x23, [sp, #16]
   1543c:	stp	x22, x21, [sp, #32]
   15440:	stp	x20, x19, [sp, #48]
   15444:	ldr	x8, [x0, #32]
   15448:	cbz	x8, 154dc <__sanitizer_sandbox_on_notify@@Base+0x19ac>
   1544c:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15450:	ldr	x24, [x24, #3872]
   15454:	adrp	x20, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15458:	adrp	x21, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1545c:	mov	x19, x0
   15460:	mov	x23, xzr
   15464:	add	x20, x20, #0xafc
   15468:	add	x21, x21, #0xae2
   1546c:	b	15480 <__sanitizer_sandbox_on_notify@@Base+0x1950>
   15470:	ldr	x8, [x19, #32]
   15474:	add	x23, x23, #0x1
   15478:	cmp	x23, x8
   1547c:	b.cs	154dc <__sanitizer_sandbox_on_notify@@Base+0x19ac>  // b.hs, b.nlast
   15480:	ldr	x8, [x19, #16]
   15484:	mov	w0, #0x11                  	// #17
   15488:	mov	x2, xzr
   1548c:	mov	x3, xzr
   15490:	ldr	x22, [x8, x23, lsl #3]
   15494:	mov	w1, w22
   15498:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   1549c:	add	x1, sp, #0xc
   154a0:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   154a4:	ldr	w8, [x24]
   154a8:	tbz	w0, #0, 154c4 <__sanitizer_sandbox_on_notify@@Base+0x1994>
   154ac:	cbz	w8, 15470 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   154b0:	ldr	w2, [sp, #12]
   154b4:	mov	x0, x20
   154b8:	mov	w1, w22
   154bc:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   154c0:	b	15470 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   154c4:	cmp	w8, #0x2
   154c8:	b.cc	15470 <__sanitizer_sandbox_on_notify@@Base+0x1940>  // b.lo, b.ul, b.last
   154cc:	mov	x0, x21
   154d0:	mov	w1, w22
   154d4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   154d8:	b	15470 <__sanitizer_sandbox_on_notify@@Base+0x1940>
   154dc:	ldp	x20, x19, [sp, #48]
   154e0:	ldp	x22, x21, [sp, #32]
   154e4:	ldp	x24, x23, [sp, #16]
   154e8:	ldr	x30, [sp], #64
   154ec:	ret
   154f0:	ldr	x0, [x0, #24]
   154f4:	ret
   154f8:	str	x30, [sp, #-16]!
   154fc:	ldr	x4, [x0, #24]
   15500:	mov	x3, x1
   15504:	cmp	x4, x1
   15508:	b.ls	1551c <__sanitizer_sandbox_on_notify@@Base+0x19ec>  // b.plast
   1550c:	ldr	x8, [x0, #8]
   15510:	ldr	x0, [x8, x3, lsl #3]
   15514:	ldr	x30, [sp], #16
   15518:	ret
   1551c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15520:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15524:	add	x0, x0, #0xb29
   15528:	add	x2, x2, #0xbfe
   1552c:	mov	w1, #0x204                 	// #516
   15530:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   15534:	str	x30, [sp, #-32]!
   15538:	stp	x20, x19, [sp, #16]
   1553c:	ldr	x8, [x0, #32]
   15540:	cbz	x8, 15574 <__sanitizer_sandbox_on_notify@@Base+0x1a44>
   15544:	mov	x19, x0
   15548:	mov	x20, xzr
   1554c:	ldr	x8, [x19, #16]
   15550:	mov	w0, #0x8                   	// #8
   15554:	mov	x2, xzr
   15558:	mov	x3, xzr
   1555c:	ldr	x1, [x8, x20, lsl #3]
   15560:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15564:	ldr	x8, [x19, #32]
   15568:	add	x20, x20, #0x1
   1556c:	cmp	x20, x8
   15570:	b.cc	1554c <__sanitizer_sandbox_on_notify@@Base+0x1a1c>  // b.lo, b.ul, b.last
   15574:	ldp	x20, x19, [sp, #16]
   15578:	ldr	x30, [sp], #32
   1557c:	ret
   15580:	sub	sp, sp, #0x80
   15584:	str	x30, [sp, #64]
   15588:	stp	x24, x23, [sp, #80]
   1558c:	stp	x22, x21, [sp, #96]
   15590:	stp	x20, x19, [sp, #112]
   15594:	ldr	w1, [x0, #40]
   15598:	mov	x19, x0
   1559c:	add	x0, sp, #0x20
   155a0:	bl	d97c <__sanitizer_set_report_fd@@Base+0x40c8>
   155a4:	add	x0, sp, #0x8
   155a8:	mov	w1, #0x80                  	// #128
   155ac:	stp	xzr, xzr, [sp, #16]
   155b0:	str	xzr, [sp, #8]
   155b4:	bl	e678 <__sanitizer_set_report_fd@@Base+0x4dc4>
   155b8:	mov	w20, wzr
   155bc:	add	x0, sp, #0x20
   155c0:	add	x1, sp, #0x8
   155c4:	bl	da54 <__sanitizer_set_report_fd@@Base+0x41a0>
   155c8:	cmp	w0, #0x1
   155cc:	b.eq	155e4 <__sanitizer_sandbox_on_notify@@Base+0x1ab4>  // b.none
   155d0:	cbz	w0, 15634 <__sanitizer_sandbox_on_notify@@Base+0x1b04>
   155d4:	mov	w21, wzr
   155d8:	ldr	x8, [sp, #24]
   155dc:	cbnz	x8, 155f0 <__sanitizer_sandbox_on_notify@@Base+0x1ac0>
   155e0:	b	15614 <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   155e4:	mov	w21, #0x1                   	// #1
   155e8:	ldr	x8, [sp, #24]
   155ec:	cbz	x8, 15614 <__sanitizer_sandbox_on_notify@@Base+0x1ae4>
   155f0:	ldr	x22, [sp, #8]
   155f4:	lsl	x23, x8, #3
   155f8:	ldr	x1, [x22], #8
   155fc:	mov	x0, x19
   15600:	bl	15278 <__sanitizer_sandbox_on_notify@@Base+0x1748>
   15604:	tst	w0, #0x1
   15608:	csinc	w21, w21, wzr, eq  // eq = none
   1560c:	subs	x23, x23, #0x8
   15610:	b.ne	155f8 <__sanitizer_sandbox_on_notify@@Base+0x1ac8>  // b.any
   15614:	cmp	w20, #0x1c
   15618:	b.hi	15624 <__sanitizer_sandbox_on_notify@@Base+0x1af4>  // b.pmore
   1561c:	add	w20, w20, #0x1
   15620:	tbnz	w21, #0, 155bc <__sanitizer_sandbox_on_notify@@Base+0x1a8c>
   15624:	ldr	x8, [x19, #32]
   15628:	cmp	x8, #0x0
   1562c:	cset	w19, ne  // ne = any
   15630:	b	156cc <__sanitizer_sandbox_on_notify@@Base+0x1b9c>
   15634:	ldr	x8, [x19, #32]
   15638:	cbz	x8, 156c8 <__sanitizer_sandbox_on_notify@@Base+0x1b98>
   1563c:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15640:	ldr	x24, [x24, #3872]
   15644:	adrp	x20, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15648:	adrp	x21, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1564c:	mov	x23, xzr
   15650:	add	x20, x20, #0xafc
   15654:	add	x21, x21, #0xae2
   15658:	b	1566c <__sanitizer_sandbox_on_notify@@Base+0x1b3c>
   1565c:	ldr	x8, [x19, #32]
   15660:	add	x23, x23, #0x1
   15664:	cmp	x23, x8
   15668:	b.cs	156c8 <__sanitizer_sandbox_on_notify@@Base+0x1b98>  // b.hs, b.nlast
   1566c:	ldr	x8, [x19, #16]
   15670:	mov	w0, #0x11                  	// #17
   15674:	mov	x2, xzr
   15678:	mov	x3, xzr
   1567c:	ldr	x22, [x8, x23, lsl #3]
   15680:	mov	w1, w22
   15684:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15688:	add	x1, sp, #0x4c
   1568c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15690:	ldr	w8, [x24]
   15694:	tbz	w0, #0, 156b0 <__sanitizer_sandbox_on_notify@@Base+0x1b80>
   15698:	cbz	w8, 1565c <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   1569c:	ldr	w2, [sp, #76]
   156a0:	mov	x0, x20
   156a4:	mov	w1, w22
   156a8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   156ac:	b	1565c <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   156b0:	cmp	w8, #0x2
   156b4:	b.cc	1565c <__sanitizer_sandbox_on_notify@@Base+0x1b2c>  // b.lo, b.ul, b.last
   156b8:	mov	x0, x21
   156bc:	mov	w1, w22
   156c0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   156c4:	b	1565c <__sanitizer_sandbox_on_notify@@Base+0x1b2c>
   156c8:	mov	w19, wzr
   156cc:	ldp	x0, x1, [sp, #8]
   156d0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   156d4:	add	x0, sp, #0x20
   156d8:	bl	dcf4 <__sanitizer_set_report_fd@@Base+0x4440>
   156dc:	mov	w0, w19
   156e0:	ldp	x20, x19, [sp, #112]
   156e4:	ldp	x22, x21, [sp, #96]
   156e8:	ldp	x24, x23, [sp, #80]
   156ec:	ldr	x30, [sp, #64]
   156f0:	add	sp, sp, #0x80
   156f4:	ret
   156f8:	sub	sp, sp, #0xc0
   156fc:	stp	x30, x25, [sp, #128]
   15700:	stp	x24, x23, [sp, #144]
   15704:	stp	x22, x21, [sp, #160]
   15708:	stp	x20, x19, [sp, #176]
   1570c:	mov	x20, x1
   15710:	mov	x21, x0
   15714:	mov	w0, #0x3                   	// #3
   15718:	mov	x1, xzr
   1571c:	mov	x2, xzr
   15720:	mov	x3, xzr
   15724:	mov	x4, xzr
   15728:	bl	d79c <__sanitizer_set_report_fd@@Base+0x3ee8>
   1572c:	mov	x19, x0
   15730:	cbnz	w19, 1574c <__sanitizer_sandbox_on_notify@@Base+0x1c1c>
   15734:	mov	w0, #0x4                   	// #4
   15738:	mov	w1, #0x1                   	// #1
   1573c:	mov	x2, xzr
   15740:	mov	x3, xzr
   15744:	mov	x4, xzr
   15748:	bl	d79c <__sanitizer_set_report_fd@@Base+0x3ee8>
   1574c:	add	x8, sp, #0x8
   15750:	add	x22, x8, #0x10
   15754:	mov	x0, x22
   15758:	bl	d5f4 <__sanitizer_set_report_fd@@Base+0x3d40>
   1575c:	stp	x21, x20, [sp, #8]
   15760:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   15764:	str	x0, [sp, #120]
   15768:	str	xzr, [sp, #112]
   1576c:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15770:	ldr	x20, [x20, #4016]
   15774:	ldr	x23, [x20]
   15778:	cbnz	x23, 15788 <__sanitizer_sandbox_on_notify@@Base+0x1c58>
   1577c:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   15780:	mov	x23, x0
   15784:	str	x0, [x20]
   15788:	add	x20, x23, #0x200, lsl #12
   1578c:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15790:	add	x1, x1, #0xc55
   15794:	mov	x0, x20
   15798:	mov	w2, wzr
   1579c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   157a0:	mov	x1, x23
   157a4:	mov	x21, x0
   157a8:	bl	ee00 <__sanitizer_set_report_fd@@Base+0x554c>
   157ac:	tbz	w0, #0, 159ac <__sanitizer_sandbox_on_notify@@Base+0x1e7c>
   157b0:	mov	x0, x22
   157b4:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   157b8:	adrp	x23, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   157bc:	add	x23, x23, #0x818
   157c0:	mov	x0, x23
   157c4:	bl	d8c4 <__sanitizer_set_report_fd@@Base+0x4010>
   157c8:	mov	w1, #0x6                   	// #6
   157cc:	mov	x0, x23
   157d0:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   157d4:	mov	w1, #0x4                   	// #4
   157d8:	mov	x0, x23
   157dc:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   157e0:	mov	w1, #0x8                   	// #8
   157e4:	mov	x0, x23
   157e8:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   157ec:	mov	w1, #0xb                   	// #11
   157f0:	mov	x0, x23
   157f4:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   157f8:	mov	w1, #0x7                   	// #7
   157fc:	mov	x0, x23
   15800:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   15804:	mov	w1, #0x18                  	// #24
   15808:	mov	x0, x23
   1580c:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   15810:	mov	w1, #0x19                  	// #25
   15814:	mov	x0, x23
   15818:	bl	d8dc <__sanitizer_set_report_fd@@Base+0x4028>
   1581c:	add	x2, x23, #0x80
   15820:	mov	w0, wzr
   15824:	mov	x1, x23
   15828:	bl	d8b0 <__sanitizer_set_report_fd@@Base+0x3ffc>
   1582c:	lsl	x8, x0, #32
   15830:	cbnz	x8, 159cc <__sanitizer_sandbox_on_notify@@Base+0x1e9c>
   15834:	adrp	x0, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   15838:	mov	w2, #0x700                 	// #1792
   1583c:	add	x1, x20, x21
   15840:	add	x0, x0, #0x9ec
   15844:	add	x3, sp, #0x8
   15848:	movk	w2, #0x80, lsl #16
   1584c:	mov	x4, xzr
   15850:	mov	x5, xzr
   15854:	mov	x6, xzr
   15858:	bl	e12c <__sanitizer_set_report_fd@@Base+0x4878>
   1585c:	adrp	x1, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   15860:	mov	x23, x0
   15864:	add	x1, x1, #0x898
   15868:	mov	w0, #0x2                   	// #2
   1586c:	mov	x2, xzr
   15870:	bl	d8b0 <__sanitizer_set_report_fd@@Base+0x3ffc>
   15874:	add	x1, sp, #0x4
   15878:	mov	x0, x23
   1587c:	str	wzr, [sp, #4]
   15880:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15884:	tbz	w0, #0, 158c4 <__sanitizer_sandbox_on_notify@@Base+0x1d94>
   15888:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1588c:	ldr	x8, [x8, #3872]
   15890:	ldr	w8, [x8]
   15894:	cbz	w8, 158a8 <__sanitizer_sandbox_on_notify@@Base+0x1d78>
   15898:	ldr	w1, [sp, #4]
   1589c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   158a0:	add	x0, x0, #0xba0
   158a4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   158a8:	mov	x0, x22
   158ac:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   158b0:	mov	x0, x21
   158b4:	mov	x1, x20
   158b8:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   158bc:	cbnz	w19, 15994 <__sanitizer_sandbox_on_notify@@Base+0x1e64>
   158c0:	b	1597c <__sanitizer_sandbox_on_notify@@Base+0x1e4c>
   158c4:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   158c8:	ldr	x24, [x24, #3824]
   158cc:	str	x23, [x24]
   158d0:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   158d4:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   158d8:	ldr	x25, [x25, #3816]
   158dc:	mov	x1, x23
   158e0:	mov	x2, xzr
   158e4:	mov	x3, xzr
   158e8:	str	x0, [x25]
   158ec:	mov	w0, #0x6d61                	// #28001
   158f0:	movk	w0, #0x5961, lsl #16
   158f4:	mov	x4, xzr
   158f8:	bl	d79c <__sanitizer_set_report_fd@@Base+0x3ee8>
   158fc:	mov	x0, x22
   15900:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   15904:	ldr	x8, [sp, #112]
   15908:	cbnz	x8, 15928 <__sanitizer_sandbox_on_notify@@Base+0x1df8>
   1590c:	bl	4850 <sched_yield@plt>
   15910:	ldr	x8, [sp, #112]
   15914:	cbz	x8, 1590c <__sanitizer_sandbox_on_notify@@Base+0x1ddc>
   15918:	b	15928 <__sanitizer_sandbox_on_notify@@Base+0x1df8>
   1591c:	ldr	w1, [sp, #4]
   15920:	cmp	w1, #0x4
   15924:	b.ne	15948 <__sanitizer_sandbox_on_notify@@Base+0x1e18>  // b.any
   15928:	mov	w2, #0x40000000            	// #1073741824
   1592c:	mov	w0, w23
   15930:	mov	x1, xzr
   15934:	bl	d744 <__sanitizer_set_report_fd@@Base+0x3e90>
   15938:	add	x1, sp, #0x4
   1593c:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15940:	tbnz	w0, #0, 1591c <__sanitizer_sandbox_on_notify@@Base+0x1dec>
   15944:	b	15964 <__sanitizer_sandbox_on_notify@@Base+0x1e34>
   15948:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1594c:	ldr	x8, [x8, #3872]
   15950:	ldr	w8, [x8]
   15954:	cbz	w8, 15964 <__sanitizer_sandbox_on_notify@@Base+0x1e34>
   15958:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1595c:	add	x0, x0, #0xbcd
   15960:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15964:	str	xzr, [x24]
   15968:	str	xzr, [x25]
   1596c:	mov	x0, x21
   15970:	mov	x1, x20
   15974:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   15978:	cbnz	w19, 15994 <__sanitizer_sandbox_on_notify@@Base+0x1e64>
   1597c:	mov	w0, #0x4                   	// #4
   15980:	mov	x1, xzr
   15984:	mov	x2, xzr
   15988:	mov	x3, xzr
   1598c:	mov	x4, xzr
   15990:	bl	d79c <__sanitizer_set_report_fd@@Base+0x3ee8>
   15994:	ldp	x20, x19, [sp, #176]
   15998:	ldp	x22, x21, [sp, #160]
   1599c:	ldp	x24, x23, [sp, #144]
   159a0:	ldp	x30, x25, [sp, #128]
   159a4:	add	sp, sp, #0xc0
   159a8:	ret
   159ac:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   159b0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   159b4:	add	x0, x0, #0xb29
   159b8:	add	x2, x2, #0xc6a
   159bc:	mov	w1, #0x154                 	// #340
   159c0:	mov	x3, xzr
   159c4:	mov	x4, xzr
   159c8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   159cc:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   159d0:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   159d4:	asr	x3, x8, #32
   159d8:	add	x0, x0, #0xb29
   159dc:	add	x2, x2, #0xb90
   159e0:	mov	w1, #0x1ae                 	// #430
   159e4:	mov	x4, xzr
   159e8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   159ec:	sub	sp, sp, #0x150
   159f0:	stp	x29, x30, [sp, #256]
   159f4:	stp	x26, x25, [sp, #272]
   159f8:	stp	x24, x23, [sp, #288]
   159fc:	stp	x22, x21, [sp, #304]
   15a00:	stp	x20, x19, [sp, #320]
   15a04:	mov	x19, x0
   15a08:	mov	w0, #0x1                   	// #1
   15a0c:	mov	w1, #0x9                   	// #9
   15a10:	mov	x2, xzr
   15a14:	mov	x3, xzr
   15a18:	mov	x4, xzr
   15a1c:	bl	d79c <__sanitizer_set_report_fd@@Base+0x3ee8>
   15a20:	bl	d768 <__sanitizer_set_report_fd@@Base+0x3eb4>
   15a24:	ldr	x8, [x19, #112]
   15a28:	cmp	x0, x8
   15a2c:	b.ne	15d88 <__sanitizer_sandbox_on_notify@@Base+0x2258>  // b.any
   15a30:	add	x20, x19, #0x10
   15a34:	mov	x0, x20
   15a38:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   15a3c:	mov	x0, x20
   15a40:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   15a44:	adrp	x0, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   15a48:	add	x0, x0, #0xe60
   15a4c:	bl	133c4 <__sanitizer_on_print@@Base+0x34c4>
   15a50:	tbz	w0, #0, 15d90 <__sanitizer_sandbox_on_notify@@Base+0x2260>
   15a54:	add	x21, sp, #0xb8
   15a58:	bl	d768 <__sanitizer_set_report_fd@@Base+0x3eb4>
   15a5c:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15a60:	add	x22, sp, #0xd0
   15a64:	mov	x20, x0
   15a68:	add	x23, x23, #0x8a0
   15a6c:	movi	v0.2d, #0x0
   15a70:	add	x0, x22, #0x10
   15a74:	mov	w1, #0x400                 	// #1024
   15a78:	stp	x19, x23, [sp, #208]
   15a7c:	stur	q0, [x21, #48]
   15a80:	str	xzr, [sp, #224]
   15a84:	bl	e678 <__sanitizer_set_report_fd@@Base+0x4dc4>
   15a88:	adrp	x24, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   15a8c:	movi	v0.2d, #0x0
   15a90:	add	x0, sp, #0xb8
   15a94:	mov	w1, #0x2000                	// #8192
   15a98:	str	w20, [sp, #248]
   15a9c:	stur	q0, [x21, #8]
   15aa0:	str	x22, [x24, #2064]
   15aa4:	str	xzr, [sp, #184]
   15aa8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   15aac:	ldr	x8, [sp, #200]
   15ab0:	lsr	x9, x8, #13
   15ab4:	cbnz	x9, 15aec <__sanitizer_sandbox_on_notify@@Base+0x1fbc>
   15ab8:	ldr	x9, [sp, #192]
   15abc:	lsr	x9, x9, #13
   15ac0:	cbnz	x9, 15ad4 <__sanitizer_sandbox_on_notify@@Base+0x1fa4>
   15ac4:	add	x0, sp, #0xb8
   15ac8:	mov	w1, #0x2000                	// #8192
   15acc:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   15ad0:	ldr	x8, [sp, #200]
   15ad4:	ldr	x9, [sp, #184]
   15ad8:	mov	w10, #0x2000                	// #8192
   15adc:	sub	x2, x10, x8
   15ae0:	mov	w1, wzr
   15ae4:	add	x0, x9, x8
   15ae8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15aec:	mov	w20, #0x2000                	// #8192
   15af0:	add	x0, sp, #0xa0
   15af4:	mov	w2, #0x18                  	// #24
   15af8:	mov	w1, wzr
   15afc:	str	x20, [sp, #200]
   15b00:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15b04:	ldr	x8, [sp, #184]
   15b08:	add	x0, sp, #0xa0
   15b0c:	mov	x1, xzr
   15b10:	str	x20, [sp, #176]
   15b14:	str	x8, [sp, #160]
   15b18:	bl	d7ac <__sanitizer_set_report_fd@@Base+0x3ef8>
   15b1c:	add	x0, sp, #0x8
   15b20:	mov	w2, #0x98                  	// #152
   15b24:	mov	w1, wzr
   15b28:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15b2c:	adrp	x20, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   15b30:	mov	w21, #0x4                   	// #4
   15b34:	add	x20, x20, #0xed0
   15b38:	movk	w21, #0x800, lsl #16
   15b3c:	add	x1, sp, #0x8
   15b40:	mov	w0, #0x6                   	// #6
   15b44:	mov	x2, xzr
   15b48:	str	x20, [sp, #8]
   15b4c:	str	w21, [sp, #144]
   15b50:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15b54:	add	x0, sp, #0x8
   15b58:	mov	w2, #0x98                  	// #152
   15b5c:	mov	w1, wzr
   15b60:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15b64:	add	x1, sp, #0x8
   15b68:	mov	w0, #0x4                   	// #4
   15b6c:	mov	x2, xzr
   15b70:	str	x20, [sp, #8]
   15b74:	str	w21, [sp, #144]
   15b78:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15b7c:	add	x0, sp, #0x8
   15b80:	mov	w2, #0x98                  	// #152
   15b84:	mov	w1, wzr
   15b88:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15b8c:	add	x1, sp, #0x8
   15b90:	mov	w0, #0x8                   	// #8
   15b94:	mov	x2, xzr
   15b98:	str	x20, [sp, #8]
   15b9c:	str	w21, [sp, #144]
   15ba0:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15ba4:	add	x0, sp, #0x8
   15ba8:	mov	w2, #0x98                  	// #152
   15bac:	mov	w1, wzr
   15bb0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15bb4:	add	x1, sp, #0x8
   15bb8:	mov	w0, #0xb                   	// #11
   15bbc:	mov	x2, xzr
   15bc0:	str	x20, [sp, #8]
   15bc4:	str	w21, [sp, #144]
   15bc8:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15bcc:	add	x0, sp, #0x8
   15bd0:	mov	w2, #0x98                  	// #152
   15bd4:	mov	w1, wzr
   15bd8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15bdc:	add	x1, sp, #0x8
   15be0:	mov	w0, #0x7                   	// #7
   15be4:	mov	x2, xzr
   15be8:	str	x20, [sp, #8]
   15bec:	str	w21, [sp, #144]
   15bf0:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15bf4:	add	x0, sp, #0x8
   15bf8:	mov	w2, #0x98                  	// #152
   15bfc:	mov	w1, wzr
   15c00:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15c04:	add	x1, sp, #0x8
   15c08:	mov	w0, #0x18                  	// #24
   15c0c:	mov	x2, xzr
   15c10:	str	x20, [sp, #8]
   15c14:	str	w21, [sp, #144]
   15c18:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15c1c:	add	x0, sp, #0x8
   15c20:	mov	w2, #0x98                  	// #152
   15c24:	mov	w1, wzr
   15c28:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   15c2c:	add	x1, sp, #0x8
   15c30:	mov	w0, #0x19                  	// #25
   15c34:	mov	x2, xzr
   15c38:	str	x20, [sp, #8]
   15c3c:	str	w21, [sp, #144]
   15c40:	bl	d7cc <__sanitizer_set_report_fd@@Base+0x3f18>
   15c44:	add	x0, sp, #0xd0
   15c48:	add	x20, sp, #0xd0
   15c4c:	bl	15580 <__sanitizer_sandbox_on_notify@@Base+0x1a50>
   15c50:	tbz	w0, #0, 15cf4 <__sanitizer_sandbox_on_notify@@Base+0x21c4>
   15c54:	ldp	x8, x1, [x19]
   15c58:	add	x0, x20, #0x8
   15c5c:	blr	x8
   15c60:	ldr	x8, [sp, #240]
   15c64:	cbz	x8, 15d34 <__sanitizer_sandbox_on_notify@@Base+0x2204>
   15c68:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15c6c:	ldr	x26, [x26, #3872]
   15c70:	adrp	x20, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15c74:	adrp	x21, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15c78:	mov	x25, xzr
   15c7c:	add	x20, x20, #0xafc
   15c80:	add	x21, x21, #0xae2
   15c84:	b	15c98 <__sanitizer_sandbox_on_notify@@Base+0x2168>
   15c88:	ldr	x8, [sp, #240]
   15c8c:	add	x25, x25, #0x1
   15c90:	cmp	x25, x8
   15c94:	b.cs	15d34 <__sanitizer_sandbox_on_notify@@Base+0x2204>  // b.hs, b.nlast
   15c98:	ldr	x8, [sp, #224]
   15c9c:	mov	w0, #0x11                  	// #17
   15ca0:	mov	x2, xzr
   15ca4:	mov	x3, xzr
   15ca8:	ldr	x22, [x8, x25, lsl #3]
   15cac:	mov	w1, w22
   15cb0:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15cb4:	add	x1, sp, #0x8
   15cb8:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15cbc:	ldr	w8, [x26]
   15cc0:	tbz	w0, #0, 15cdc <__sanitizer_sandbox_on_notify@@Base+0x21ac>
   15cc4:	cbz	w8, 15c88 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   15cc8:	ldr	w2, [sp, #8]
   15ccc:	mov	x0, x20
   15cd0:	mov	w1, w22
   15cd4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15cd8:	b	15c88 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   15cdc:	cmp	w8, #0x2
   15ce0:	b.cc	15c88 <__sanitizer_sandbox_on_notify@@Base+0x2158>  // b.lo, b.ul, b.last
   15ce4:	mov	x0, x21
   15ce8:	mov	w1, w22
   15cec:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15cf0:	b	15c88 <__sanitizer_sandbox_on_notify@@Base+0x2158>
   15cf4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15cf8:	ldr	x8, [x8, #3872]
   15cfc:	ldr	w8, [x8]
   15d00:	cbz	w8, 15d10 <__sanitizer_sandbox_on_notify@@Base+0x21e0>
   15d04:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15d08:	add	x0, x0, #0xccf
   15d0c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15d10:	mov	w20, #0x3                   	// #3
   15d14:	adrp	x0, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   15d18:	add	x0, x0, #0xe60
   15d1c:	bl	13428 <__sanitizer_on_print@@Base+0x3528>
   15d20:	tbnz	w0, #0, 15d48 <__sanitizer_sandbox_on_notify@@Base+0x2218>
   15d24:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15d28:	add	x0, x0, #0xceb
   15d2c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   15d30:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   15d34:	mov	w20, wzr
   15d38:	adrp	x0, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   15d3c:	add	x0, x0, #0xe60
   15d40:	bl	13428 <__sanitizer_on_print@@Base+0x3528>
   15d44:	tbz	w0, #0, 15d24 <__sanitizer_sandbox_on_notify@@Base+0x21f4>
   15d48:	mov	w8, #0x1                   	// #1
   15d4c:	str	xzr, [x24, #2064]
   15d50:	str	x8, [x19, #104]
   15d54:	ldp	x0, x1, [sp, #184]
   15d58:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   15d5c:	ldp	x0, x1, [sp, #224]
   15d60:	str	x23, [sp, #216]
   15d64:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   15d68:	mov	w0, w20
   15d6c:	ldp	x20, x19, [sp, #320]
   15d70:	ldp	x22, x21, [sp, #304]
   15d74:	ldp	x24, x23, [sp, #288]
   15d78:	ldp	x26, x25, [sp, #272]
   15d7c:	ldp	x29, x30, [sp, #256]
   15d80:	add	sp, sp, #0x150
   15d84:	ret
   15d88:	mov	w0, #0x4                   	// #4
   15d8c:	bl	d0c4 <__sanitizer_set_report_fd@@Base+0x3810>
   15d90:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15d94:	add	x0, x0, #0xca7
   15d98:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   15d9c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   15da0:	sub	sp, sp, #0x150
   15da4:	str	x29, [sp, #288]
   15da8:	stp	x30, x21, [sp, #304]
   15dac:	stp	x20, x19, [sp, #320]
   15db0:	ldr	x8, [x0]
   15db4:	mov	x20, x3
   15db8:	mov	x19, x2
   15dbc:	ldr	x8, [x8, #24]
   15dc0:	blr	x8
   15dc4:	mov	x21, x0
   15dc8:	add	x8, sp, #0x10
   15dcc:	mov	w9, #0x110                 	// #272
   15dd0:	mov	x3, sp
   15dd4:	mov	w0, #0x4204                	// #16900
   15dd8:	mov	w2, #0x1                   	// #1
   15ddc:	mov	w1, w21
   15de0:	stp	x8, x9, [sp]
   15de4:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15de8:	add	x1, sp, #0x12c
   15dec:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15df0:	tbz	w0, #0, 15e28 <__sanitizer_sandbox_on_notify@@Base+0x22f8>
   15df4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15df8:	ldr	x8, [x8, #3872]
   15dfc:	ldr	w8, [x8]
   15e00:	cbz	w8, 15e18 <__sanitizer_sandbox_on_notify@@Base+0x22e8>
   15e04:	ldr	w2, [sp, #300]
   15e08:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15e0c:	add	x0, x0, #0xc21
   15e10:	mov	w1, w21
   15e14:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15e18:	ldr	w8, [sp, #300]
   15e1c:	cmp	w8, #0x3
   15e20:	csetm	w0, eq  // eq = none
   15e24:	b	15e44 <__sanitizer_sandbox_on_notify@@Base+0x2314>
   15e28:	ldr	x8, [sp, #264]
   15e2c:	add	x1, sp, #0x10
   15e30:	mov	w2, #0x110                 	// #272
   15e34:	mov	x0, x19
   15e38:	str	x8, [x20]
   15e3c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   15e40:	mov	w0, #0x1                   	// #1
   15e44:	ldp	x20, x19, [sp, #320]
   15e48:	ldp	x30, x21, [sp, #304]
   15e4c:	ldr	x29, [sp, #288]
   15e50:	add	sp, sp, #0x150
   15e54:	ret
   15e58:	mov	w0, #0x22                  	// #34
   15e5c:	ret
   15e60:	stp	x30, x21, [sp, #-32]!
   15e64:	stp	x20, x19, [sp, #16]
   15e68:	adrp	x19, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   15e6c:	ldr	x20, [x19, #2064]
   15e70:	cbz	x20, 15ec4 <__sanitizer_sandbox_on_notify@@Base+0x2394>
   15e74:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15e78:	ldr	x8, [x8, #3824]
   15e7c:	ldr	x21, [x8]
   15e80:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   15e84:	cmp	x21, x0
   15e88:	b.ne	15ec4 <__sanitizer_sandbox_on_notify@@Base+0x2394>  // b.any
   15e8c:	ldr	x8, [x20, #32]
   15e90:	cbz	x8, 15ec0 <__sanitizer_sandbox_on_notify@@Base+0x2390>
   15e94:	mov	x21, xzr
   15e98:	ldr	x8, [x20, #16]
   15e9c:	mov	w0, #0x8                   	// #8
   15ea0:	mov	x2, xzr
   15ea4:	mov	x3, xzr
   15ea8:	ldr	x1, [x8, x21, lsl #3]
   15eac:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15eb0:	ldr	x8, [x20, #32]
   15eb4:	add	x21, x21, #0x1
   15eb8:	cmp	x21, x8
   15ebc:	b.cc	15e98 <__sanitizer_sandbox_on_notify@@Base+0x2368>  // b.lo, b.ul, b.last
   15ec0:	str	xzr, [x19, #2064]
   15ec4:	ldp	x20, x19, [sp, #16]
   15ec8:	ldp	x30, x21, [sp], #32
   15ecc:	ret
   15ed0:	sub	sp, sp, #0x90
   15ed4:	str	x30, [sp, #64]
   15ed8:	stp	x26, x25, [sp, #80]
   15edc:	stp	x24, x23, [sp, #96]
   15ee0:	stp	x22, x21, [sp, #112]
   15ee4:	stp	x20, x19, [sp, #128]
   15ee8:	mov	w19, w0
   15eec:	mov	x0, sp
   15ef0:	stp	x1, x2, [sp]
   15ef4:	bl	f6b4 <__sanitizer_set_report_fd@@Base+0x5e00>
   15ef8:	str	x0, [sp, #16]
   15efc:	mov	x0, sp
   15f00:	bl	f6c0 <__sanitizer_set_report_fd@@Base+0x5e0c>
   15f04:	and	w8, w0, #0x1
   15f08:	mov	x0, sp
   15f0c:	strb	w8, [sp, #48]
   15f10:	bl	e2a4 <__sanitizer_set_report_fd@@Base+0x49f0>
   15f14:	str	w0, [sp, #52]
   15f18:	mov	x0, sp
   15f1c:	bl	e2f0 <__sanitizer_set_report_fd@@Base+0x4a3c>
   15f20:	and	w8, w0, #0x1
   15f24:	mov	x0, sp
   15f28:	strb	w8, [sp, #56]
   15f2c:	bl	e31c <__sanitizer_set_report_fd@@Base+0x4a68>
   15f30:	ldp	x2, x3, [sp, #16]
   15f34:	ldr	x4, [sp, #32]
   15f38:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15f3c:	add	x0, x0, #0xd16
   15f40:	mov	w1, w19
   15f44:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   15f48:	adrp	x24, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   15f4c:	ldr	x23, [x24, #2064]
   15f50:	cbz	x23, 1603c <__sanitizer_sandbox_on_notify@@Base+0x250c>
   15f54:	ldr	x8, [x23, #32]
   15f58:	cmp	w19, #0x6
   15f5c:	b.ne	15f94 <__sanitizer_sandbox_on_notify@@Base+0x2464>  // b.any
   15f60:	cbz	x8, 1601c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   15f64:	mov	x20, xzr
   15f68:	ldr	x8, [x23, #16]
   15f6c:	mov	w0, #0x8                   	// #8
   15f70:	mov	x2, xzr
   15f74:	mov	x3, xzr
   15f78:	ldr	x1, [x8, x20, lsl #3]
   15f7c:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15f80:	ldr	x8, [x23, #32]
   15f84:	add	x20, x20, #0x1
   15f88:	cmp	x20, x8
   15f8c:	b.cc	15f68 <__sanitizer_sandbox_on_notify@@Base+0x2438>  // b.lo, b.ul, b.last
   15f90:	b	1601c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   15f94:	cbz	x8, 1601c <__sanitizer_sandbox_on_notify@@Base+0x24ec>
   15f98:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   15f9c:	ldr	x26, [x26, #3872]
   15fa0:	adrp	x20, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15fa4:	adrp	x21, 27000 <__interceptor_sigaction@@Base+0x4a44>
   15fa8:	mov	x25, xzr
   15fac:	add	x20, x20, #0xafc
   15fb0:	add	x21, x21, #0xae2
   15fb4:	ldr	x8, [x23, #16]
   15fb8:	mov	w0, #0x11                  	// #17
   15fbc:	mov	x2, xzr
   15fc0:	mov	x3, xzr
   15fc4:	ldr	x22, [x8, x25, lsl #3]
   15fc8:	mov	w1, w22
   15fcc:	bl	d730 <__sanitizer_set_report_fd@@Base+0x3e7c>
   15fd0:	add	x1, sp, #0x4c
   15fd4:	bl	cebc <__sanitizer_set_report_fd@@Base+0x3608>
   15fd8:	ldr	w8, [x26]
   15fdc:	tbz	w0, #0, 15ff8 <__sanitizer_sandbox_on_notify@@Base+0x24c8>
   15fe0:	cbz	w8, 1600c <__sanitizer_sandbox_on_notify@@Base+0x24dc>
   15fe4:	ldr	w2, [sp, #76]
   15fe8:	mov	x0, x20
   15fec:	mov	w1, w22
   15ff0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   15ff4:	b	1600c <__sanitizer_sandbox_on_notify@@Base+0x24dc>
   15ff8:	cmp	w8, #0x2
   15ffc:	b.cc	1600c <__sanitizer_sandbox_on_notify@@Base+0x24dc>  // b.lo, b.ul, b.last
   16000:	mov	x0, x21
   16004:	mov	w1, w22
   16008:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1600c:	ldr	x8, [x23, #32]
   16010:	add	x25, x25, #0x1
   16014:	cmp	x25, x8
   16018:	b.cc	15fb4 <__sanitizer_sandbox_on_notify@@Base+0x2484>  // b.lo, b.ul, b.last
   1601c:	adrp	x0, 15000 <__sanitizer_sandbox_on_notify@@Base+0x14d0>
   16020:	add	x0, x0, #0xe60
   16024:	bl	13428 <__sanitizer_on_print@@Base+0x3528>
   16028:	tbz	w0, #0, 1604c <__sanitizer_sandbox_on_notify@@Base+0x251c>
   1602c:	str	xzr, [x24, #2064]
   16030:	ldr	x8, [x23]
   16034:	mov	w9, #0x1                   	// #1
   16038:	str	x9, [x8, #104]
   1603c:	cmp	w19, #0x6
   16040:	mov	w8, #0x1                   	// #1
   16044:	cinc	w0, w8, ne  // ne = any
   16048:	bl	d0c4 <__sanitizer_set_report_fd@@Base+0x3810>
   1604c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16050:	add	x0, x0, #0xceb
   16054:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   16058:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001605c <__sancov_default_options@@Base>:
   1605c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16060:	add	x0, x0, #0x562
   16064:	ret
   16068:	mov	w8, #0x1                   	// #1
   1606c:	strh	w8, [x0]
   16070:	ret
   16074:	sub	sp, sp, #0x50
   16078:	str	x30, [sp, #32]
   1607c:	stp	x22, x21, [sp, #48]
   16080:	stp	x20, x19, [sp, #64]
   16084:	adrp	x21, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16088:	add	x21, x21, #0x918
   1608c:	mov	w8, #0x1                   	// #1
   16090:	mov	x20, x21
   16094:	mov	x0, sp
   16098:	strh	w8, [x20], #1
   1609c:	bl	bb6c <__sanitizer_set_report_fd@@Base+0x22b8>
   160a0:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   160a4:	ldr	x19, [x19, #3752]
   160a8:	mov	w1, #0x10                  	// #16
   160ac:	mov	x0, x19
   160b0:	bl	501c <__sancov_default_options@plt+0x69c>
   160b4:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   160b8:	add	x22, x22, #0x738
   160bc:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   160c0:	adrp	x3, 27000 <__interceptor_sigaction@@Base+0x4a44>
   160c4:	mov	x2, x0
   160c8:	stp	x22, x21, [x0]
   160cc:	add	x1, x1, #0x940
   160d0:	add	x3, x3, #0xd5c
   160d4:	mov	x0, sp
   160d8:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   160dc:	mov	w1, #0x10                  	// #16
   160e0:	mov	x0, x19
   160e4:	bl	501c <__sancov_default_options@plt+0x69c>
   160e8:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
   160ec:	adrp	x3, 27000 <__interceptor_sigaction@@Base+0x4a44>
   160f0:	mov	x2, x0
   160f4:	stp	x22, x20, [x0]
   160f8:	add	x1, x1, #0x800
   160fc:	add	x3, x3, #0xdab
   16100:	mov	x0, sp
   16104:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   16108:	bl	4980 <__sancov_default_options@plt>
   1610c:	mov	x1, x0
   16110:	mov	x0, sp
   16114:	mov	x2, xzr
   16118:	bl	b904 <__sanitizer_set_report_fd@@Base+0x2050>
   1611c:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16120:	add	x1, x1, #0xd4d
   16124:	mov	x0, sp
   16128:	bl	b800 <__sanitizer_set_report_fd@@Base+0x1f4c>
   1612c:	bl	b144 <__sanitizer_set_report_fd@@Base+0x1890>
   16130:	ldrb	w8, [x20]
   16134:	cbz	w8, 16140 <__sancov_default_options@@Base+0xe4>
   16138:	mov	x0, sp
   1613c:	bl	b208 <__sanitizer_set_report_fd@@Base+0x1954>
   16140:	ldp	x20, x19, [sp, #64]
   16144:	ldp	x22, x21, [sp, #48]
   16148:	ldr	x30, [sp, #32]
   1614c:	add	sp, sp, #0x50
   16150:	ret
   16154:	stp	x30, x19, [sp, #-16]!
   16158:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1615c:	ldrb	w9, [x8, #2336]
   16160:	cbz	w9, 1616c <__sancov_default_options@@Base+0x110>
   16164:	ldp	x30, x19, [sp], #16
   16168:	ret
   1616c:	and	w9, w0, #0x1
   16170:	strb	w9, [x8, #2336]
   16174:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16178:	ldr	x19, [x19, #3928]
   1617c:	mov	x0, x19
   16180:	bl	148e4 <__sanitizer_sandbox_on_notify@@Base+0xdb4>
   16184:	mov	x0, x19
   16188:	ldp	x30, x19, [sp], #16
   1618c:	b	133c4 <__sanitizer_on_print@@Base+0x34c4>

0000000000016190 <__sanitizer_cov_dump@@Base>:
   16190:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16194:	ldrb	w8, [x8, #2344]
   16198:	cbz	w8, 161c0 <__sanitizer_cov_dump@@Base+0x30>
   1619c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   161a0:	ldr	x8, [x8, #4056]
   161a4:	ldrb	w8, [x8, #169]
   161a8:	cbz	w8, 161c0 <__sanitizer_cov_dump@@Base+0x30>
   161ac:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   161b0:	add	x8, x8, #0x930
   161b4:	ldr	x0, [x8]
   161b8:	ldr	x1, [x8, #16]
   161bc:	b	4770 <__sanitizer_dump_coverage@plt>
   161c0:	ret

00000000000161c4 <__sanitizer_dump_coverage@@Base>:
   161c4:	cbz	x1, 16284 <__sanitizer_dump_coverage@@Base+0xc0>
   161c8:	sub	sp, sp, #0x70
   161cc:	stp	x29, x30, [sp, #16]
   161d0:	stp	x28, x27, [sp, #32]
   161d4:	stp	x26, x25, [sp, #48]
   161d8:	stp	x24, x23, [sp, #64]
   161dc:	stp	x22, x21, [sp, #80]
   161e0:	stp	x20, x19, [sp, #96]
   161e4:	mov	x19, x1
   161e8:	mov	x23, x0
   161ec:	mov	w0, #0x1000                	// #4096
   161f0:	mov	x1, xzr
   161f4:	mov	x2, xzr
   161f8:	bl	4b90 <__sancov_default_options@plt+0x210>
   161fc:	str	x0, [sp, #8]
   16200:	mov	w0, #0x1000                	// #4096
   16204:	mov	x1, xzr
   16208:	mov	x2, xzr
   1620c:	bl	4b90 <__sancov_default_options@plt+0x210>
   16210:	lsl	x24, x19, #3
   16214:	mov	x21, x0
   16218:	mov	x0, x24
   1621c:	mov	x1, xzr
   16220:	mov	x2, xzr
   16224:	bl	4b90 <__sancov_default_options@plt+0x210>
   16228:	mov	x1, x23
   1622c:	mov	x2, x24
   16230:	mov	x22, x0
   16234:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   16238:	cmp	x19, #0x1
   1623c:	b.eq	16290 <__sanitizer_dump_coverage@@Base+0xcc>  // b.none
   16240:	mov	w8, #0x1                   	// #1
   16244:	b	16254 <__sanitizer_dump_coverage@@Base+0x90>
   16248:	add	x8, x8, #0x1
   1624c:	cmp	x8, x19
   16250:	b.eq	16288 <__sanitizer_dump_coverage@@Base+0xc4>  // b.none
   16254:	ldr	x9, [x22, x8, lsl #3]
   16258:	mov	x10, x8
   1625c:	sub	x11, x10, #0x1
   16260:	lsr	x11, x11, #1
   16264:	ldr	x12, [x22, x11, lsl #3]
   16268:	cmp	x12, x9
   1626c:	b.cs	16248 <__sanitizer_dump_coverage@@Base+0x84>  // b.hs, b.nlast
   16270:	str	x12, [x22, x10, lsl #3]
   16274:	mov	x10, x11
   16278:	str	x9, [x22, x11, lsl #3]
   1627c:	cbnz	x11, 1625c <__sanitizer_dump_coverage@@Base+0x98>
   16280:	b	16248 <__sanitizer_dump_coverage@@Base+0x84>
   16284:	ret
   16288:	subs	x8, x19, #0x1
   1628c:	b.ne	162b8 <__sanitizer_dump_coverage@@Base+0xf4>  // b.any
   16290:	adrp	x23, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16294:	mov	w28, wzr
   16298:	mov	x20, xzr
   1629c:	mov	x26, xzr
   162a0:	mov	x27, xzr
   162a4:	add	x23, x23, #0xdd0
   162a8:	mov	x24, x22
   162ac:	b	16374 <__sanitizer_dump_coverage@@Base+0x1b0>
   162b0:	subs	x8, x8, #0x1
   162b4:	b.eq	16290 <__sanitizer_dump_coverage@@Base+0xcc>  // b.none
   162b8:	lsl	x10, x8, #3
   162bc:	ldr	x11, [x22, x10]
   162c0:	ldr	x12, [x22]
   162c4:	mov	x9, xzr
   162c8:	str	x11, [x22]
   162cc:	str	x12, [x22, x10]
   162d0:	mov	x10, xzr
   162d4:	mov	w12, #0x1                   	// #1
   162d8:	lsl	x11, x9, #1
   162dc:	bfi	x12, x9, #1, #63
   162e0:	cmp	x12, x8
   162e4:	add	x11, x11, #0x2
   162e8:	b.cc	16300 <__sanitizer_dump_coverage@@Base+0x13c>  // b.lo, b.ul, b.last
   162ec:	cmp	x11, x8
   162f0:	b.cc	16318 <__sanitizer_dump_coverage@@Base+0x154>  // b.lo, b.ul, b.last
   162f4:	cmp	x10, x9
   162f8:	b.ne	16330 <__sanitizer_dump_coverage@@Base+0x16c>  // b.any
   162fc:	b	162b0 <__sanitizer_dump_coverage@@Base+0xec>
   16300:	ldr	x10, [x22, x9, lsl #3]
   16304:	ldr	x13, [x22, x12, lsl #3]
   16308:	cmp	x10, x13
   1630c:	csel	x10, x12, x9, cc  // cc = lo, ul, last
   16310:	cmp	x11, x8
   16314:	b.cs	162f4 <__sanitizer_dump_coverage@@Base+0x130>  // b.hs, b.nlast
   16318:	ldr	x12, [x22, x10, lsl #3]
   1631c:	ldr	x13, [x22, x11, lsl #3]
   16320:	cmp	x12, x13
   16324:	csel	x10, x11, x10, cc  // cc = lo, ul, last
   16328:	cmp	x10, x9
   1632c:	b.eq	162b0 <__sanitizer_dump_coverage@@Base+0xec>  // b.none
   16330:	lsl	x11, x10, #3
   16334:	lsl	x9, x9, #3
   16338:	ldr	x12, [x22, x11]
   1633c:	ldr	x13, [x22, x9]
   16340:	cmp	x10, x8
   16344:	str	x12, [x22, x9]
   16348:	mov	x9, x10
   1634c:	str	x13, [x22, x11]
   16350:	b.cc	162d4 <__sanitizer_dump_coverage@@Base+0x110>  // b.lo, b.ul, b.last
   16354:	b	162b0 <__sanitizer_dump_coverage@@Base+0xec>
   16358:	mov	x0, x23
   1635c:	mov	x1, x25
   16360:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   16364:	add	x26, x26, #0x1
   16368:	cmp	x26, x19
   1636c:	add	x24, x24, #0x8
   16370:	b.cs	163e8 <__sanitizer_dump_coverage@@Base+0x224>  // b.hs, b.nlast
   16374:	ldr	x25, [x24]
   16378:	cbz	x25, 16364 <__sanitizer_dump_coverage@@Base+0x1a0>
   1637c:	mov	x0, x25
   16380:	mov	x1, xzr
   16384:	mov	x2, xzr
   16388:	mov	x3, x24
   1638c:	bl	4640 <__sanitizer_get_module_and_offset_for_pc@plt>
   16390:	cbz	w0, 16358 <__sanitizer_dump_coverage@@Base+0x194>
   16394:	ldr	x8, [x24]
   16398:	sub	x29, x25, x8
   1639c:	cmp	x29, x20
   163a0:	b.ne	163ac <__sanitizer_dump_coverage@@Base+0x1e8>  // b.any
   163a4:	eor	w8, w28, #0x1
   163a8:	tbz	w8, #0, 16364 <__sanitizer_dump_coverage@@Base+0x1a0>
   163ac:	tbz	w28, #0, 163c4 <__sanitizer_dump_coverage@@Base+0x200>
   163b0:	ldr	x0, [sp, #8]
   163b4:	add	x2, x22, x27, lsl #3
   163b8:	sub	x3, x26, x27
   163bc:	mov	x1, x21
   163c0:	bl	166e8 <__sanitizer_cov_pcs_init@@Base+0x4>
   163c4:	mov	w2, #0x1000                	// #4096
   163c8:	mov	x0, x25
   163cc:	mov	x1, x21
   163d0:	mov	x3, x24
   163d4:	bl	4640 <__sanitizer_get_module_and_offset_for_pc@plt>
   163d8:	mov	w28, #0x1                   	// #1
   163dc:	mov	x27, x26
   163e0:	mov	x20, x29
   163e4:	b	16364 <__sanitizer_dump_coverage@@Base+0x1a0>
   163e8:	tbz	w28, #0, 16400 <__sanitizer_dump_coverage@@Base+0x23c>
   163ec:	ldr	x0, [sp, #8]
   163f0:	add	x2, x22, x27, lsl #3
   163f4:	sub	x3, x19, x27
   163f8:	mov	x1, x21
   163fc:	bl	166e8 <__sanitizer_cov_pcs_init@@Base+0x4>
   16400:	ldr	x0, [sp, #8]
   16404:	mov	x1, xzr
   16408:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   1640c:	mov	x0, x21
   16410:	mov	x1, xzr
   16414:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   16418:	mov	x0, x22
   1641c:	ldp	x20, x19, [sp, #96]
   16420:	ldp	x22, x21, [sp, #80]
   16424:	ldp	x24, x23, [sp, #64]
   16428:	ldp	x26, x25, [sp, #48]
   1642c:	ldp	x28, x27, [sp, #32]
   16430:	ldp	x29, x30, [sp, #16]
   16434:	mov	x1, xzr
   16438:	add	sp, sp, #0x70
   1643c:	b	4e74 <__sancov_default_options@plt+0x4f4>

0000000000016440 <__sanitizer_cov_trace_pc_guard@@Base>:
   16440:	str	x30, [sp, #-16]!
   16444:	ldr	w8, [x0]
   16448:	cbz	w8, 16470 <__sanitizer_cov_trace_pc_guard@@Base+0x30>
   1644c:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16450:	ldr	x4, [x9, #2368]
   16454:	sub	w3, w8, #0x1
   16458:	cmp	x4, x3
   1645c:	b.ls	16488 <__sanitizer_cov_trace_pc_guard@@Base+0x48>  // b.plast
   16460:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16464:	ldr	x8, [x8, #2352]
   16468:	ldr	x9, [x8, x3, lsl #3]
   1646c:	cbz	x9, 16478 <__sanitizer_cov_trace_pc_guard@@Base+0x38>
   16470:	ldr	x30, [sp], #16
   16474:	ret
   16478:	sub	x9, x30, #0x1
   1647c:	str	x9, [x8, x3, lsl #3]
   16480:	ldr	x30, [sp], #16
   16484:	ret
   16488:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1648c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   16490:	add	x0, x0, #0xbf8
   16494:	add	x2, x2, #0x7fd
   16498:	mov	w1, #0x1c5                 	// #453
   1649c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

00000000000164a0 <__sanitizer_cov_trace_pc_guard_init@@Base>:
   164a0:	str	x30, [sp, #-48]!
   164a4:	stp	x22, x21, [sp, #16]
   164a8:	stp	x20, x19, [sp, #32]
   164ac:	cmp	x0, x1
   164b0:	b.eq	164c0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x20>  // b.none
   164b4:	ldr	w8, [x0]
   164b8:	mov	x20, x0
   164bc:	cbz	w8, 164d0 <__sanitizer_cov_trace_pc_guard_init@@Base+0x30>
   164c0:	ldp	x20, x19, [sp, #32]
   164c4:	ldp	x22, x21, [sp, #16]
   164c8:	ldr	x30, [sp], #48
   164cc:	ret
   164d0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   164d4:	ldrb	w8, [x8, #2344]
   164d8:	mov	x19, x1
   164dc:	adrp	x21, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   164e0:	cbz	w8, 164ec <__sanitizer_cov_trace_pc_guard_init@@Base+0x4c>
   164e4:	ldr	x8, [x21, #2368]
   164e8:	b	16514 <__sanitizer_cov_trace_pc_guard_init@@Base+0x74>
   164ec:	adrp	x22, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   164f0:	add	x22, x22, #0x928
   164f4:	mov	w8, #0x1                   	// #1
   164f8:	strb	w8, [x22]
   164fc:	bl	16074 <__sancov_default_options@@Base+0x18>
   16500:	stp	xzr, xzr, [x22, #16]
   16504:	str	xzr, [x22, #8]
   16508:	ldr	w9, [x20]
   1650c:	mov	x8, xzr
   16510:	cbnz	w9, 1660c <__sanitizer_cov_trace_pc_guard_init@@Base+0x16c>
   16514:	cmp	x20, x19
   16518:	b.cs	16534 <__sanitizer_cov_trace_pc_guard_init@@Base+0x94>  // b.hs, b.nlast
   1651c:	mvn	x9, x20
   16520:	add	x9, x19, x9
   16524:	cmp	x9, #0x1b
   16528:	b.hi	1653c <__sanitizer_cov_trace_pc_guard_init@@Base+0x9c>  // b.pmore
   1652c:	mov	w9, w8
   16530:	b	16598 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf8>
   16534:	mov	w9, w8
   16538:	b	165a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>
   1653c:	adrp	x12, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16540:	ldr	q3, [x12, #3520]
   16544:	lsr	x9, x9, #2
   16548:	add	x11, x9, #0x1
   1654c:	dup	v2.4s, w8
   16550:	and	x12, x11, #0x7ffffffffffffff8
   16554:	add	x10, x20, #0x10
   16558:	movi	v0.4s, #0x1
   1655c:	movi	v1.4s, #0x5
   16560:	add	x20, x20, x12, lsl #2
   16564:	add	w9, w8, w12
   16568:	add	v2.4s, v2.4s, v3.4s
   1656c:	movi	v3.4s, #0x8
   16570:	mov	x13, x12
   16574:	add	v4.4s, v2.4s, v0.4s
   16578:	add	v5.4s, v2.4s, v1.4s
   1657c:	add	v2.4s, v2.4s, v3.4s
   16580:	subs	x13, x13, #0x8
   16584:	stp	q4, q5, [x10, #-16]
   16588:	add	x10, x10, #0x20
   1658c:	b.ne	16574 <__sanitizer_cov_trace_pc_guard_init@@Base+0xd4>  // b.any
   16590:	cmp	x11, x12
   16594:	b.eq	165a8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x108>  // b.none
   16598:	add	w9, w9, #0x1
   1659c:	str	w9, [x20], #4
   165a0:	cmp	x20, x19
   165a4:	b.cc	16598 <__sanitizer_cov_trace_pc_guard_init@@Base+0xf8>  // b.lo, b.ul, b.last
   165a8:	mov	w19, w9
   165ac:	cmp	x8, x19
   165b0:	b.cs	165f8 <__sanitizer_cov_trace_pc_guard_init@@Base+0x158>  // b.hs, b.nlast
   165b4:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   165b8:	ldr	x9, [x9, #2360]
   165bc:	cmp	x19, x9, lsr #3
   165c0:	b.ls	165dc <__sanitizer_cov_trace_pc_guard_init@@Base+0x13c>  // b.plast
   165c4:	adrp	x20, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   165c8:	add	x20, x20, #0x930
   165cc:	mov	x0, x20
   165d0:	mov	x1, x19
   165d4:	bl	16800 <__sanitizer_cov_pcs_init@@Base+0x11c>
   165d8:	ldr	x8, [x20, #16]
   165dc:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   165e0:	ldr	x9, [x9, #2352]
   165e4:	sub	x10, x19, x8
   165e8:	lsl	x2, x10, #3
   165ec:	mov	w1, wzr
   165f0:	add	x0, x9, x8, lsl #3
   165f4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   165f8:	str	x19, [x21, #2368]
   165fc:	ldp	x20, x19, [sp, #32]
   16600:	ldp	x22, x21, [sp, #16]
   16604:	ldr	x30, [sp], #48
   16608:	ret
   1660c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16610:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16614:	add	x0, x0, #0xe30
   16618:	add	x2, x2, #0xeed
   1661c:	mov	w1, #0x78                  	// #120
   16620:	mov	x3, xzr
   16624:	mov	x4, xzr
   16628:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001662c <__sanitizer_dump_trace_pc_guard_coverage@@Base>:
   1662c:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16630:	ldrb	w8, [x8, #2344]
   16634:	cbz	w8, 1665c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   16638:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1663c:	ldr	x8, [x8, #4056]
   16640:	ldrb	w8, [x8, #169]
   16644:	cbz	w8, 1665c <__sanitizer_dump_trace_pc_guard_coverage@@Base+0x30>
   16648:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   1664c:	add	x8, x8, #0x930
   16650:	ldr	x0, [x8]
   16654:	ldr	x1, [x8, #16]
   16658:	b	4770 <__sanitizer_dump_coverage@plt>
   1665c:	ret

0000000000016660 <__sanitizer_cov_reset@@Base>:
   16660:	str	x30, [sp, #-16]!
   16664:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16668:	ldr	x8, [x8, #2368]
   1666c:	cbz	x8, 16688 <__sanitizer_cov_reset@@Base+0x28>
   16670:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16674:	ldr	x0, [x9, #2352]
   16678:	lsl	x2, x8, #3
   1667c:	mov	w1, wzr
   16680:	ldr	x30, [sp], #16
   16684:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   16688:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1668c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   16690:	add	x0, x0, #0xbf8
   16694:	add	x2, x2, #0x7fd
   16698:	mov	w1, #0x1c5                 	// #453
   1669c:	mov	x3, xzr
   166a0:	mov	x4, xzr
   166a4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

00000000000166a8 <__sanitizer_cov_trace_cmp@@Base>:
   166a8:	ret

00000000000166ac <__sanitizer_cov_trace_cmp1@@Base>:
   166ac:	ret

00000000000166b0 <__sanitizer_cov_trace_cmp2@@Base>:
   166b0:	ret

00000000000166b4 <__sanitizer_cov_trace_cmp4@@Base>:
   166b4:	ret

00000000000166b8 <__sanitizer_cov_trace_cmp8@@Base>:
   166b8:	ret

00000000000166bc <__sanitizer_cov_trace_const_cmp1@@Base>:
   166bc:	ret

00000000000166c0 <__sanitizer_cov_trace_const_cmp2@@Base>:
   166c0:	ret

00000000000166c4 <__sanitizer_cov_trace_const_cmp4@@Base>:
   166c4:	ret

00000000000166c8 <__sanitizer_cov_trace_const_cmp8@@Base>:
   166c8:	ret

00000000000166cc <__sanitizer_cov_trace_switch@@Base>:
   166cc:	ret

00000000000166d0 <__sanitizer_cov_trace_div4@@Base>:
   166d0:	ret

00000000000166d4 <__sanitizer_cov_trace_div8@@Base>:
   166d4:	ret

00000000000166d8 <__sanitizer_cov_trace_gep@@Base>:
   166d8:	ret

00000000000166dc <__sanitizer_cov_trace_pc_indir@@Base>:
   166dc:	ret

00000000000166e0 <__sanitizer_cov_8bit_counters_init@@Base>:
   166e0:	ret

00000000000166e4 <__sanitizer_cov_pcs_init@@Base>:
   166e4:	ret
   166e8:	sub	sp, sp, #0x40
   166ec:	stp	x30, x23, [sp, #16]
   166f0:	stp	x22, x21, [sp, #32]
   166f4:	stp	x20, x19, [sp, #48]
   166f8:	mov	x20, x0
   166fc:	mov	x0, x1
   16700:	mov	x19, x3
   16704:	mov	x21, x2
   16708:	bl	68f4 <__sancov_default_options@plt+0x1f74>
   1670c:	cbz	x0, 167e0 <__sanitizer_cov_pcs_init@@Base+0xfc>
   16710:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16714:	ldr	x8, [x8, #4056]
   16718:	mov	x22, x0
   1671c:	ldr	x23, [x8, #176]
   16720:	bl	d75c <__sanitizer_set_report_fd@@Base+0x3ea8>
   16724:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16728:	adrp	x6, 23000 <__interceptor_sigaction@@Base+0xa44>
   1672c:	mov	x5, x0
   16730:	add	x2, x2, #0xea1
   16734:	add	x6, x6, #0x845
   16738:	mov	w1, #0x1000                	// #4096
   1673c:	mov	x0, x20
   16740:	mov	x3, x23
   16744:	mov	x4, x22
   16748:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   1674c:	add	x2, sp, #0xc
   16750:	mov	w1, #0x1                   	// #1
   16754:	mov	x0, x20
   16758:	bl	ee3c <__sanitizer_set_report_fd@@Base+0x5588>
   1675c:	mov	w22, w0
   16760:	cmn	w0, #0x1
   16764:	b.ne	1677c <__sanitizer_cov_pcs_init@@Base+0x98>  // b.any
   16768:	ldr	w2, [sp, #12]
   1676c:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16770:	add	x0, x0, #0xeae
   16774:	mov	x1, x20
   16778:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1677c:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16780:	add	x1, x1, #0xf00
   16784:	mov	w2, #0x8                   	// #8
   16788:	mov	w0, w22
   1678c:	mov	x3, xzr
   16790:	mov	x4, xzr
   16794:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
   16798:	lsl	x2, x19, #3
   1679c:	mov	w0, w22
   167a0:	mov	x1, x21
   167a4:	mov	x3, xzr
   167a8:	mov	x4, xzr
   167ac:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
   167b0:	mov	w0, w22
   167b4:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
   167b8:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   167bc:	add	x0, x0, #0xe08
   167c0:	mov	x1, x20
   167c4:	mov	x2, x19
   167c8:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   167cc:	ldp	x20, x19, [sp, #48]
   167d0:	ldp	x22, x21, [sp, #32]
   167d4:	ldp	x30, x23, [sp, #16]
   167d8:	add	sp, sp, #0x40
   167dc:	ret
   167e0:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   167e4:	adrp	x2, 27000 <__interceptor_sigaction@@Base+0x4a44>
   167e8:	add	x0, x0, #0xe30
   167ec:	add	x2, x2, #0xe91
   167f0:	mov	w1, #0x29                  	// #41
   167f4:	mov	x3, xzr
   167f8:	mov	x4, xzr
   167fc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   16800:	stp	x30, x21, [sp, #-32]!
   16804:	stp	x20, x19, [sp, #16]
   16808:	cbz	x1, 16898 <__sanitizer_cov_pcs_init@@Base+0x1b4>
   1680c:	ldr	x3, [x0, #16]
   16810:	mov	x20, x1
   16814:	mov	x19, x0
   16818:	cmp	x3, x1
   1681c:	b.hi	168b8 <__sanitizer_cov_pcs_init@@Base+0x1d4>  // b.pmore
   16820:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16824:	ldr	x21, [x21, #4016]
   16828:	ldr	x0, [x21]
   1682c:	cbnz	x0, 16838 <__sanitizer_cov_pcs_init@@Base+0x154>
   16830:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   16834:	str	x0, [x21]
   16838:	sub	x8, x0, #0x1
   1683c:	tst	x0, x8
   16840:	b.ne	168d4 <__sanitizer_cov_pcs_init@@Base+0x1f0>  // b.any
   16844:	lsl	x8, x20, #3
   16848:	add	x8, x8, x0
   1684c:	sub	x8, x8, #0x1
   16850:	neg	x9, x0
   16854:	and	x20, x8, x9
   16858:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1685c:	add	x1, x1, #0x2c0
   16860:	mov	x0, x20
   16864:	mov	w2, wzr
   16868:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1686c:	ldr	x8, [x19, #16]
   16870:	ldr	x1, [x19]
   16874:	mov	x21, x0
   16878:	lsl	x2, x8, #3
   1687c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   16880:	ldp	x0, x1, [x19]
   16884:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   16888:	stp	x21, x20, [x19]
   1688c:	ldp	x20, x19, [sp, #16]
   16890:	ldp	x30, x21, [sp], #32
   16894:	ret
   16898:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1689c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   168a0:	add	x0, x0, #0xbf8
   168a4:	add	x2, x2, #0x289
   168a8:	mov	w1, #0x20b                 	// #523
   168ac:	mov	x3, xzr
   168b0:	mov	x4, xzr
   168b4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   168b8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   168bc:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   168c0:	add	x0, x0, #0xbf8
   168c4:	add	x2, x2, #0x2a2
   168c8:	mov	w1, #0x20c                 	// #524
   168cc:	mov	x4, x20
   168d0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   168d4:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   168d8:	add	x0, x0, #0x121
   168dc:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   168e0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   168e4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   168e8:	ldr	x8, [x8, #3912]
   168ec:	mrs	x9, tpidr_el0
   168f0:	add	x0, x9, x8
   168f4:	ret
   168f8:	sub	sp, sp, #0x40
   168fc:	str	x30, [sp, #32]
   16900:	stp	x20, x19, [sp, #48]
   16904:	mov	x19, x1
   16908:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1690c:	mov	x20, x0
   16910:	add	x1, x1, #0xf08
   16914:	mov	x0, sp
   16918:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   1691c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16920:	ldr	x8, [x8, #4024]
   16924:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16928:	add	x0, x0, #0xf18
   1692c:	mov	x2, x20
   16930:	ldr	x1, [x8]
   16934:	mov	x3, x19
   16938:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1693c:	mov	x0, sp
   16940:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16944:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16948:	sub	sp, sp, #0x40
   1694c:	str	x30, [sp, #32]
   16950:	stp	x20, x19, [sp, #48]
   16954:	mov	x19, x1
   16958:	adrp	x1, 27000 <__interceptor_sigaction@@Base+0x4a44>
   1695c:	mov	x20, x0
   16960:	add	x1, x1, #0xf7e
   16964:	mov	x0, sp
   16968:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   1696c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16970:	ldr	x8, [x8, #4024]
   16974:	adrp	x0, 27000 <__interceptor_sigaction@@Base+0x4a44>
   16978:	add	x0, x0, #0xf94
   1697c:	mov	x2, x20
   16980:	ldr	x1, [x8]
   16984:	mov	x3, x19
   16988:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1698c:	mov	x0, sp
   16990:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16994:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16998:	sub	sp, sp, #0x40
   1699c:	str	x30, [sp, #32]
   169a0:	stp	x20, x19, [sp, #48]
   169a4:	mov	x2, x1
   169a8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   169ac:	mov	x19, x0
   169b0:	add	x1, x1, #0x0
   169b4:	mov	x0, sp
   169b8:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   169bc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   169c0:	ldr	x8, [x8, #4024]
   169c4:	ldr	x20, [x8]
   169c8:	bl	16c14 <__sanitizer_cov_pcs_init@@Base+0x530>
   169cc:	mov	x3, x0
   169d0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   169d4:	add	x0, x0, #0x11
   169d8:	mov	x1, x20
   169dc:	mov	x2, x19
   169e0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   169e4:	mov	x0, sp
   169e8:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   169ec:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   169f0:	sub	sp, sp, #0x30
   169f4:	stp	x30, x19, [sp, #32]
   169f8:	mov	x2, x1
   169fc:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16a00:	mov	x19, x0
   16a04:	add	x1, x1, #0x8f
   16a08:	mov	x0, sp
   16a0c:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   16a10:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16a14:	ldr	x8, [x8, #4024]
   16a18:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16a1c:	add	x0, x0, #0xac
   16a20:	mov	x2, x19
   16a24:	ldr	x1, [x8]
   16a28:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   16a2c:	mov	x0, sp
   16a30:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16a34:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16a38:	sub	sp, sp, #0x40
   16a3c:	str	x30, [sp, #32]
   16a40:	stp	x20, x19, [sp, #48]
   16a44:	mov	x19, x1
   16a48:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16a4c:	mov	x20, x0
   16a50:	add	x1, x1, #0xfc
   16a54:	mov	x0, sp
   16a58:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   16a5c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16a60:	ldr	x8, [x8, #4024]
   16a64:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16a68:	add	x0, x0, #0x11c
   16a6c:	mov	x2, x19
   16a70:	ldr	x1, [x8]
   16a74:	mov	x3, x20
   16a78:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   16a7c:	mov	x0, sp
   16a80:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16a84:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16a88:	sub	sp, sp, #0x30
   16a8c:	stp	x30, x19, [sp, #32]
   16a90:	mov	x2, x1
   16a94:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16a98:	mov	x19, x0
   16a9c:	add	x1, x1, #0x1b9
   16aa0:	mov	x0, sp
   16aa4:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   16aa8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16aac:	ldr	x8, [x8, #4024]
   16ab0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16ab4:	add	x0, x0, #0x1da
   16ab8:	mov	w3, #0x8                   	// #8
   16abc:	ldr	x1, [x8]
   16ac0:	mov	x2, x19
   16ac4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   16ac8:	mov	x0, sp
   16acc:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16ad0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16ad4:	sub	sp, sp, #0x40
   16ad8:	str	x30, [sp, #32]
   16adc:	stp	x20, x19, [sp, #48]
   16ae0:	mov	x19, x1
   16ae4:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16ae8:	mov	x20, x0
   16aec:	add	x1, x1, #0x262
   16af0:	mov	x0, sp
   16af4:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   16af8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16afc:	ldr	x8, [x8, #4024]
   16b00:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16b04:	add	x0, x0, #0x27a
   16b08:	mov	x2, x20
   16b0c:	ldr	x1, [x8]
   16b10:	mov	x3, x19
   16b14:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   16b18:	mov	x0, sp
   16b1c:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16b20:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16b24:	sub	sp, sp, #0x30
   16b28:	stp	x30, x19, [sp, #32]
   16b2c:	mov	x2, x1
   16b30:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16b34:	mov	x19, x0
   16b38:	add	x1, x1, #0x2ce
   16b3c:	mov	x0, sp
   16b40:	bl	16b6c <__sanitizer_cov_pcs_init@@Base+0x488>
   16b44:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16b48:	ldr	x8, [x8, #4024]
   16b4c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16b50:	add	x0, x0, #0x2dc
   16b54:	mov	x2, x19
   16b58:	ldr	x1, [x8]
   16b5c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   16b60:	mov	x0, sp
   16b64:	bl	16bc0 <__sanitizer_cov_pcs_init@@Base+0x4dc>
   16b68:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   16b6c:	stp	x30, x21, [sp, #-32]!
   16b70:	stp	x20, x19, [sp, #16]
   16b74:	mov	x19, x2
   16b78:	mov	x20, x1
   16b7c:	mov	x21, x0
   16b80:	bl	1c388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   16b84:	stp	x20, x19, [x21, #8]
   16b88:	bl	1b7f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   16b8c:	and	w8, w0, #0x1
   16b90:	strb	w8, [x21, #24]
   16b94:	ldp	x20, x19, [sp, #16]
   16b98:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16b9c:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16ba0:	add	x9, x9, #0x562
   16ba4:	add	x10, x10, #0x322
   16ba8:	tst	w0, #0x1
   16bac:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   16bb0:	csel	x1, x10, x9, ne  // ne = any
   16bb4:	add	x0, x0, #0x338
   16bb8:	ldp	x30, x21, [sp], #32
   16bbc:	b	ff04 <__sanitizer_on_print@@Base+0x4>
   16bc0:	stp	x30, x19, [sp, #-16]!
   16bc4:	ldrb	w8, [x0, #24]
   16bc8:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16bcc:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16bd0:	mov	x19, x0
   16bd4:	add	x9, x9, #0x32c
   16bd8:	add	x10, x10, #0x562
   16bdc:	cmp	w8, #0x0
   16be0:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   16be4:	csel	x1, x10, x9, eq  // eq = none
   16be8:	add	x0, x0, #0x338
   16bec:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   16bf0:	ldr	x0, [x19, #16]
   16bf4:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   16bf8:	bl	51b4 <__sancov_default_options@plt+0x834>
   16bfc:	ldp	x0, x1, [x19, #8]
   16c00:	mov	x2, xzr
   16c04:	bl	1b8a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x376c>
   16c08:	mov	x0, x19
   16c0c:	ldp	x30, x19, [sp], #16
   16c10:	b	1c478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4340>
   16c14:	stp	x30, x19, [sp, #-16]!
   16c18:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   16c1c:	ldr	x19, [x19, #4016]
   16c20:	ldr	x0, [x19]
   16c24:	cbz	x0, 16c30 <__sanitizer_cov_pcs_init@@Base+0x54c>
   16c28:	ldp	x30, x19, [sp], #16
   16c2c:	ret
   16c30:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   16c34:	str	x0, [x19]
   16c38:	ldp	x30, x19, [sp], #16
   16c3c:	ret
   16c40:	ldr	x8, [x0]
   16c44:	ldr	w0, [x8, #8]
   16c48:	ret
   16c4c:	ldr	x8, [x0]
   16c50:	ldr	w8, [x8, #12]
   16c54:	and	w0, w8, #0xfffff
   16c58:	ret
   16c5c:	str	x30, [sp, #-16]!
   16c60:	ldr	x8, [x0]
   16c64:	add	x8, x8, #0xc
   16c68:	ldaxr	w9, [x8]
   16c6c:	add	w10, w9, #0x1
   16c70:	stlxr	w11, w10, [x8]
   16c74:	cbnz	w11, 16c68 <__sanitizer_cov_pcs_init@@Base+0x584>
   16c78:	mvn	w8, w9
   16c7c:	tst	w8, #0xfffff
   16c80:	b.eq	16c8c <__sanitizer_cov_pcs_init@@Base+0x5a8>  // b.none
   16c84:	ldr	x30, [sp], #16
   16c88:	ret
   16c8c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16c90:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16c94:	add	x0, x0, #0x335
   16c98:	add	x2, x2, #0x38c
   16c9c:	mov	w1, #0x55                  	// #85
   16ca0:	mov	w3, #0x100000              	// #1048576
   16ca4:	mov	w4, #0x100000              	// #1048576
   16ca8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   16cac:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16cb0:	mov	w9, #0x400                 	// #1024
   16cb4:	add	x8, x8, #0x948
   16cb8:	movk	w9, #0x80, lsl #16
   16cbc:	add	x0, x8, x9
   16cc0:	ret
   16cc4:	str	x30, [sp, #-16]!
   16cc8:	mov	x2, x1
   16ccc:	mov	x1, x0
   16cd0:	adrp	x0, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16cd4:	add	x0, x0, #0x948
   16cd8:	mov	x3, xzr
   16cdc:	bl	17150 <__sanitizer_cov_pcs_init@@Base+0xa6c>
   16ce0:	cbz	x0, 16ce8 <__sanitizer_cov_pcs_init@@Base+0x604>
   16ce4:	ldr	w0, [x0, #8]
   16ce8:	ldr	x30, [sp], #16
   16cec:	ret
   16cf0:	adrp	x8, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16cf4:	add	x8, x8, #0x948
   16cf8:	mov	x2, x1
   16cfc:	mov	x1, x0
   16d00:	mov	x0, x8
   16d04:	mov	x3, xzr
   16d08:	b	17150 <__sanitizer_cov_pcs_init@@Base+0xa6c>
   16d0c:	str	x30, [sp, #-16]!
   16d10:	cbz	w0, 16d84 <__sanitizer_cov_pcs_init@@Base+0x6a0>
   16d14:	tbnz	w0, #31, 16dbc <__sanitizer_cov_pcs_init@@Base+0x6d8>
   16d18:	lsr	w9, w0, #11
   16d1c:	adrp	x10, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16d20:	mov	x8, xzr
   16d24:	and	w9, w9, #0x1ff000
   16d28:	add	x10, x10, #0x948
   16d2c:	b	16d3c <__sanitizer_cov_pcs_init@@Base+0x658>
   16d30:	add	x8, x8, #0x1
   16d34:	cmp	x8, #0x1, lsl #12
   16d38:	b.eq	16d84 <__sanitizer_cov_pcs_init@@Base+0x6a0>  // b.none
   16d3c:	add	x11, x8, x9
   16d40:	cmp	x11, #0x100, lsl #12
   16d44:	b.cs	16d9c <__sanitizer_cov_pcs_init@@Base+0x6b8>  // b.hs, b.nlast
   16d48:	ldr	x11, [x10, x11, lsl #3]
   16d4c:	ands	x11, x11, #0xfffffffffffffffe
   16d50:	b.eq	16d30 <__sanitizer_cov_pcs_init@@Base+0x64c>  // b.none
   16d54:	ldr	w12, [x11, #8]
   16d58:	cmp	w12, w0
   16d5c:	b.eq	16d6c <__sanitizer_cov_pcs_init@@Base+0x688>  // b.none
   16d60:	ldr	x11, [x11]
   16d64:	cbnz	x11, 16d54 <__sanitizer_cov_pcs_init@@Base+0x670>
   16d68:	b	16d30 <__sanitizer_cov_pcs_init@@Base+0x64c>
   16d6c:	ldp	w9, w8, [x11, #16]
   16d70:	add	x0, x11, #0x18
   16d74:	lsl	x8, x8, #32
   16d78:	orr	x1, x9, x8
   16d7c:	ldr	x30, [sp], #16
   16d80:	ret
   16d84:	mov	x8, xzr
   16d88:	mov	x9, xzr
   16d8c:	mov	x0, xzr
   16d90:	orr	x1, x9, x8
   16d94:	ldr	x30, [sp], #16
   16d98:	ret
   16d9c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16da0:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16da4:	and	x3, x11, #0xffffffff
   16da8:	add	x0, x0, #0x3bc
   16dac:	add	x2, x2, #0x475
   16db0:	mov	w1, #0x92                  	// #146
   16db4:	mov	w4, #0x100000              	// #1048576
   16db8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   16dbc:	and	w3, w0, #0x7fffffff
   16dc0:	mov	w4, w0
   16dc4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16dc8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   16dcc:	add	x0, x0, #0x3bc
   16dd0:	add	x2, x2, #0x439
   16dd4:	mov	w1, #0x8d                  	// #141
   16dd8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   16ddc:	str	x30, [sp, #-48]!
   16de0:	stp	x22, x21, [sp, #16]
   16de4:	stp	x20, x19, [sp, #32]
   16de8:	adrp	x20, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16dec:	mov	x19, xzr
   16df0:	add	x20, x20, #0x948
   16df4:	b	16e04 <__sanitizer_cov_pcs_init@@Base+0x720>
   16df8:	add	x19, x19, #0x1
   16dfc:	cmp	x19, #0x100, lsl #12
   16e00:	b.eq	16e6c <__sanitizer_cov_pcs_init@@Base+0x788>  // b.none
   16e04:	mov	w21, wzr
   16e08:	add	x22, x20, x19, lsl #3
   16e0c:	ldr	x8, [x22]
   16e10:	tbnz	w8, #0, 16e24 <__sanitizer_cov_pcs_init@@Base+0x740>
   16e14:	b	16e30 <__sanitizer_cov_pcs_init@@Base+0x74c>
   16e18:	add	w21, w21, #0x1
   16e1c:	ldr	x8, [x22]
   16e20:	tbz	w8, #0, 16e30 <__sanitizer_cov_pcs_init@@Base+0x74c>
   16e24:	cmp	w21, #0x9
   16e28:	b.ls	16e18 <__sanitizer_cov_pcs_init@@Base+0x734>  // b.plast
   16e2c:	b	16e58 <__sanitizer_cov_pcs_init@@Base+0x774>
   16e30:	orr	x9, x8, #0x1
   16e34:	ldaxr	x10, [x22]
   16e38:	cmp	x10, x8
   16e3c:	b.ne	16e4c <__sanitizer_cov_pcs_init@@Base+0x768>  // b.any
   16e40:	stlxr	w10, x9, [x22]
   16e44:	cbnz	w10, 16e34 <__sanitizer_cov_pcs_init@@Base+0x750>
   16e48:	b	16df8 <__sanitizer_cov_pcs_init@@Base+0x714>
   16e4c:	clrex
   16e50:	cmp	w21, #0x9
   16e54:	b.ls	16e18 <__sanitizer_cov_pcs_init@@Base+0x734>  // b.plast
   16e58:	bl	d0b8 <__sanitizer_set_report_fd@@Base+0x3804>
   16e5c:	add	w21, w21, #0x1
   16e60:	ldr	x8, [x22]
   16e64:	tbz	w8, #0, 16e30 <__sanitizer_cov_pcs_init@@Base+0x74c>
   16e68:	b	16e24 <__sanitizer_cov_pcs_init@@Base+0x740>
   16e6c:	ldp	x20, x19, [sp, #32]
   16e70:	ldp	x22, x21, [sp, #16]
   16e74:	ldr	x30, [sp], #48
   16e78:	ret
   16e7c:	adrp	x9, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16e80:	mov	x8, xzr
   16e84:	add	x9, x9, #0x948
   16e88:	ldr	x10, [x9, x8]
   16e8c:	dmb	ish
   16e90:	and	x10, x10, #0xfffffffffffffffe
   16e94:	str	x10, [x9, x8]
   16e98:	add	x8, x8, #0x8
   16e9c:	cmp	x8, #0x800, lsl #12
   16ea0:	b.ne	16e88 <__sanitizer_cov_pcs_init@@Base+0x7a4>  // b.any
   16ea4:	ret
   16ea8:	ldr	w8, [x0]
   16eac:	ldr	w9, [x1]
   16eb0:	cmp	w8, w9
   16eb4:	cset	w0, cc  // cc = lo, ul, last
   16eb8:	ret
   16ebc:	sub	sp, sp, #0x40
   16ec0:	str	x30, [sp, #16]
   16ec4:	stp	x22, x21, [sp, #32]
   16ec8:	stp	x20, x19, [sp, #48]
   16ecc:	adrp	x20, 115000 <__interceptor_sigaction@@Base+0xf2a44>
   16ed0:	mov	w8, #0x400                 	// #1024
   16ed4:	stp	xzr, xzr, [x0, #8]
   16ed8:	str	xzr, [x0]
   16edc:	add	x20, x20, #0x948
   16ee0:	movk	w8, #0x80, lsl #16
   16ee4:	ldr	x8, [x20, x8]
   16ee8:	mov	x19, x0
   16eec:	adds	x1, x8, #0x64
   16ef0:	b.eq	16efc <__sanitizer_cov_pcs_init@@Base+0x818>  // b.none
   16ef4:	mov	x0, x19
   16ef8:	bl	17674 <__sanitizer_cov_pcs_init@@Base+0xf90>
   16efc:	mov	x21, xzr
   16f00:	b	16f10 <__sanitizer_cov_pcs_init@@Base+0x82c>
   16f04:	add	x21, x21, #0x1
   16f08:	cmp	x21, #0x100, lsl #12
   16f0c:	b.eq	16f40 <__sanitizer_cov_pcs_init@@Base+0x85c>  // b.none
   16f10:	ldr	x8, [x20, x21, lsl #3]
   16f14:	ands	x22, x8, #0xfffffffffffffffe
   16f18:	b.eq	16f04 <__sanitizer_cov_pcs_init@@Base+0x820>  // b.none
   16f1c:	ldr	w8, [x22, #8]
   16f20:	mov	x1, sp
   16f24:	mov	x0, x19
   16f28:	str	x22, [sp, #8]
   16f2c:	str	w8, [sp]
   16f30:	bl	1756c <__sanitizer_cov_pcs_init@@Base+0xe88>
   16f34:	ldr	x22, [x22]
   16f38:	cbnz	x22, 16f1c <__sanitizer_cov_pcs_init@@Base+0x838>
   16f3c:	b	16f04 <__sanitizer_cov_pcs_init@@Base+0x820>
   16f40:	ldr	x9, [x19, #16]
   16f44:	cmp	x9, #0x2
   16f48:	b.cc	1706c <__sanitizer_cov_pcs_init@@Base+0x988>  // b.lo, b.ul, b.last
   16f4c:	ldr	x8, [x19]
   16f50:	mov	w10, #0x1                   	// #1
   16f54:	b	16f64 <__sanitizer_cov_pcs_init@@Base+0x880>
   16f58:	add	x10, x10, #0x1
   16f5c:	cmp	x10, x9
   16f60:	b.eq	17064 <__sanitizer_cov_pcs_init@@Base+0x980>  // b.none
   16f64:	mov	x12, x10
   16f68:	sub	x11, x12, #0x1
   16f6c:	lsr	x11, x11, #1
   16f70:	add	x13, x8, x12, lsl #4
   16f74:	add	x12, x8, x11, lsl #4
   16f78:	ldr	w14, [x12]
   16f7c:	ldr	w15, [x13]
   16f80:	cmp	w14, w15
   16f84:	b.cs	16f58 <__sanitizer_cov_pcs_init@@Base+0x874>  // b.hs, b.nlast
   16f88:	ldr	q0, [x13]
   16f8c:	str	q0, [sp]
   16f90:	ldr	q0, [x12]
   16f94:	str	q0, [x13]
   16f98:	ldr	q0, [sp]
   16f9c:	str	q0, [x12]
   16fa0:	mov	x12, x11
   16fa4:	cbnz	x11, 16f68 <__sanitizer_cov_pcs_init@@Base+0x884>
   16fa8:	b	16f58 <__sanitizer_cov_pcs_init@@Base+0x874>
   16fac:	ldr	q0, [x8]
   16fb0:	lsl	x11, x9, #4
   16fb4:	mov	x10, xzr
   16fb8:	str	q0, [sp]
   16fbc:	ldr	q0, [x8, x11]
   16fc0:	str	q0, [x8]
   16fc4:	ldr	q0, [sp]
   16fc8:	str	q0, [x8, x11]
   16fcc:	mov	x11, xzr
   16fd0:	mov	w14, #0x1                   	// #1
   16fd4:	lsl	x12, x10, #1
   16fd8:	bfi	x14, x10, #1, #63
   16fdc:	add	x13, x12, #0x2
   16fe0:	cmp	x14, x9
   16fe4:	lsl	x12, x10, #4
   16fe8:	b.cc	17000 <__sanitizer_cov_pcs_init@@Base+0x91c>  // b.lo, b.ul, b.last
   16fec:	cmp	x13, x9
   16ff0:	b.cc	1701c <__sanitizer_cov_pcs_init@@Base+0x938>  // b.lo, b.ul, b.last
   16ff4:	cmp	x11, x10
   16ff8:	b.ne	1703c <__sanitizer_cov_pcs_init@@Base+0x958>  // b.any
   16ffc:	b	17064 <__sanitizer_cov_pcs_init@@Base+0x980>
   17000:	lsl	x15, x14, #4
   17004:	ldr	w11, [x8, x12]
   17008:	ldr	w15, [x8, x15]
   1700c:	cmp	w11, w15
   17010:	csel	x11, x14, x10, cc  // cc = lo, ul, last
   17014:	cmp	x13, x9
   17018:	b.cs	16ff4 <__sanitizer_cov_pcs_init@@Base+0x910>  // b.hs, b.nlast
   1701c:	lsl	x14, x11, #4
   17020:	lsl	x15, x13, #4
   17024:	ldr	w14, [x8, x14]
   17028:	ldr	w15, [x8, x15]
   1702c:	cmp	w14, w15
   17030:	csel	x11, x13, x11, cc  // cc = lo, ul, last
   17034:	cmp	x11, x10
   17038:	b.eq	17064 <__sanitizer_cov_pcs_init@@Base+0x980>  // b.none
   1703c:	ldr	q0, [x8, x12]
   17040:	lsl	x10, x11, #4
   17044:	cmp	x11, x9
   17048:	str	q0, [sp]
   1704c:	ldr	q0, [x8, x10]
   17050:	str	q0, [x8, x12]
   17054:	ldr	q0, [sp]
   17058:	str	q0, [x8, x10]
   1705c:	mov	x10, x11
   17060:	b.cc	16fd0 <__sanitizer_cov_pcs_init@@Base+0x8ec>  // b.lo, b.ul, b.last
   17064:	subs	x9, x9, #0x1
   17068:	b.ne	16fac <__sanitizer_cov_pcs_init@@Base+0x8c8>  // b.any
   1706c:	ldp	x20, x19, [sp, #48]
   17070:	ldp	x22, x21, [sp, #32]
   17074:	ldr	x30, [sp, #16]
   17078:	add	sp, sp, #0x40
   1707c:	ret
   17080:	str	x30, [sp, #-16]!
   17084:	ldr	x4, [x0, #16]
   17088:	cbz	x4, 17104 <__sanitizer_cov_pcs_init@@Base+0xa20>
   1708c:	mov	x3, xzr
   17090:	mov	x10, x4
   17094:	add	x8, x10, x3
   17098:	lsr	x8, x8, #1
   1709c:	cmp	x4, x8
   170a0:	b.ls	1711c <__sanitizer_cov_pcs_init@@Base+0xa38>  // b.plast
   170a4:	ldr	x9, [x0]
   170a8:	lsl	x11, x8, #4
   170ac:	ldr	w11, [x9, x11]
   170b0:	cmp	w11, w1
   170b4:	csel	x10, x10, x8, cc  // cc = lo, ul, last
   170b8:	csinc	x3, x3, x8, cs  // cs = hs, nlast
   170bc:	cmp	x10, x3
   170c0:	b.hi	17094 <__sanitizer_cov_pcs_init@@Base+0x9b0>  // b.pmore
   170c4:	cmp	x3, x4
   170c8:	b.hi	17104 <__sanitizer_cov_pcs_init@@Base+0xa20>  // b.pmore
   170cc:	cmp	x4, x3
   170d0:	b.ls	17138 <__sanitizer_cov_pcs_init@@Base+0xa54>  // b.plast
   170d4:	lsl	x8, x3, #4
   170d8:	ldr	w8, [x9, x8]
   170dc:	cmp	w8, w1
   170e0:	b.ne	17104 <__sanitizer_cov_pcs_init@@Base+0xa20>  // b.any
   170e4:	add	x8, x9, x3, lsl #4
   170e8:	ldr	x9, [x8, #8]
   170ec:	ldp	w8, w10, [x9, #16]
   170f0:	add	x0, x9, #0x18
   170f4:	lsl	x9, x10, #32
   170f8:	orr	x1, x9, x8
   170fc:	ldr	x30, [sp], #16
   17100:	ret
   17104:	mov	x0, xzr
   17108:	mov	x8, xzr
   1710c:	mov	x9, xzr
   17110:	orr	x1, x9, x8
   17114:	ldr	x30, [sp], #16
   17118:	ret
   1711c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17120:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17124:	add	x0, x0, #0xbf8
   17128:	add	x2, x2, #0x7fd
   1712c:	mov	w1, #0x1c9                 	// #457
   17130:	mov	x3, x8
   17134:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17138:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1713c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17140:	add	x0, x0, #0xbf8
   17144:	add	x2, x2, #0x7fd
   17148:	mov	w1, #0x1c5                 	// #453
   1714c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17150:	sub	sp, sp, #0x80
   17154:	stp	x29, x30, [sp, #32]
   17158:	stp	x28, x27, [sp, #48]
   1715c:	stp	x26, x25, [sp, #64]
   17160:	stp	x24, x23, [sp, #80]
   17164:	stp	x22, x21, [sp, #96]
   17168:	stp	x20, x19, [sp, #112]
   1716c:	mov	x19, x3
   17170:	mov	x21, x2
   17174:	mov	x20, x1
   17178:	mov	x23, x0
   1717c:	cbz	x3, 17184 <__sanitizer_cov_pcs_init@@Base+0xaa0>
   17180:	strb	wzr, [x19]
   17184:	mov	x24, xzr
   17188:	cbz	x20, 174e8 <__sanitizer_cov_pcs_init@@Base+0xe04>
   1718c:	cbz	w21, 174e8 <__sanitizer_cov_pcs_init@@Base+0xe04>
   17190:	mov	w9, #0x400                 	// #1024
   17194:	movk	w9, #0x80, lsl #16
   17198:	mov	w10, #0xb28c                	// #45708
   1719c:	mov	w8, #0xe995                	// #59797
   171a0:	movk	w10, #0x9747, lsl #16
   171a4:	and	x28, x21, #0xffffffff
   171a8:	add	x9, x23, x9
   171ac:	lsr	x13, x21, #32
   171b0:	movk	w8, #0x5bd1, lsl #16
   171b4:	str	x9, [sp, #16]
   171b8:	eor	w10, w10, w21, lsl #3
   171bc:	mov	x9, x20
   171c0:	mov	x11, x28
   171c4:	ldr	w12, [x9], #8
   171c8:	mul	w10, w10, w8
   171cc:	subs	x11, x11, #0x1
   171d0:	mul	w12, w12, w8
   171d4:	eor	w12, w12, w12, lsr #24
   171d8:	mul	w12, w12, w8
   171dc:	eor	w10, w12, w10
   171e0:	b.ne	171c4 <__sanitizer_cov_pcs_init@@Base+0xae0>  // b.any
   171e4:	eor	w9, w10, w10, lsr #13
   171e8:	mul	w26, w9, w8
   171ec:	and	w8, w26, #0xfffff
   171f0:	eor	w11, w8, w26, lsr #15
   171f4:	add	x29, x23, w11, uxtw #3
   171f8:	ldr	x8, [x29]
   171fc:	lsl	x22, x28, #3
   17200:	ands	x27, x8, #0xfffffffffffffffe
   17204:	b.eq	17268 <__sanitizer_cov_pcs_init@@Base+0xb84>  // b.none
   17208:	mov	x24, x27
   1720c:	b	17218 <__sanitizer_cov_pcs_init@@Base+0xb34>
   17210:	ldr	x24, [x24]
   17214:	cbz	x24, 17268 <__sanitizer_cov_pcs_init@@Base+0xb84>
   17218:	ldr	w8, [x24, #12]
   1721c:	eor	w8, w8, w26
   17220:	lsr	w8, w8, #20
   17224:	cbnz	w8, 17210 <__sanitizer_cov_pcs_init@@Base+0xb2c>
   17228:	ldr	w8, [x24, #16]
   1722c:	cmp	w8, w21
   17230:	b.ne	17210 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   17234:	ldr	w8, [x24, #20]
   17238:	cmp	w8, w13
   1723c:	b.ne	17210 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   17240:	mov	x8, xzr
   17244:	add	x9, x24, x8
   17248:	ldr	x9, [x9, #24]
   1724c:	ldr	x10, [x20, x8]
   17250:	cmp	x9, x10
   17254:	b.ne	17210 <__sanitizer_cov_pcs_init@@Base+0xb2c>  // b.any
   17258:	add	x8, x8, #0x8
   1725c:	cmp	x22, x8
   17260:	b.ne	17244 <__sanitizer_cov_pcs_init@@Base+0xb60>  // b.any
   17264:	b	174e8 <__sanitizer_cov_pcs_init@@Base+0xe04>
   17268:	mov	w24, wzr
   1726c:	str	x11, [sp, #8]
   17270:	str	x13, [sp, #24]
   17274:	ldr	x25, [x29]
   17278:	tbnz	w25, #0, 1728c <__sanitizer_cov_pcs_init@@Base+0xba8>
   1727c:	b	17298 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   17280:	add	w24, w24, #0x1
   17284:	ldr	x25, [x29]
   17288:	tbz	w25, #0, 17298 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   1728c:	cmp	w24, #0x9
   17290:	b.ls	17280 <__sanitizer_cov_pcs_init@@Base+0xb9c>  // b.plast
   17294:	b	172c0 <__sanitizer_cov_pcs_init@@Base+0xbdc>
   17298:	orr	x8, x25, #0x1
   1729c:	ldaxr	x9, [x29]
   172a0:	cmp	x9, x25
   172a4:	b.ne	172b4 <__sanitizer_cov_pcs_init@@Base+0xbd0>  // b.any
   172a8:	stlxr	w9, x8, [x29]
   172ac:	cbnz	w9, 1729c <__sanitizer_cov_pcs_init@@Base+0xbb8>
   172b0:	b	172d8 <__sanitizer_cov_pcs_init@@Base+0xbf4>
   172b4:	clrex
   172b8:	cmp	w24, #0x9
   172bc:	b.ls	17280 <__sanitizer_cov_pcs_init@@Base+0xb9c>  // b.plast
   172c0:	bl	d0b8 <__sanitizer_set_report_fd@@Base+0x3804>
   172c4:	ldr	x13, [sp, #24]
   172c8:	add	w24, w24, #0x1
   172cc:	ldr	x25, [x29]
   172d0:	tbz	w25, #0, 17298 <__sanitizer_cov_pcs_init@@Base+0xbb4>
   172d4:	b	1728c <__sanitizer_cov_pcs_init@@Base+0xba8>
   172d8:	cbz	x25, 17350 <__sanitizer_cov_pcs_init@@Base+0xc6c>
   172dc:	cmp	x25, x27
   172e0:	b.eq	17350 <__sanitizer_cov_pcs_init@@Base+0xc6c>  // b.none
   172e4:	mov	x24, x25
   172e8:	b	172f4 <__sanitizer_cov_pcs_init@@Base+0xc10>
   172ec:	ldr	x24, [x24]
   172f0:	cbz	x24, 17350 <__sanitizer_cov_pcs_init@@Base+0xc6c>
   172f4:	ldr	w8, [x24, #12]
   172f8:	eor	w8, w8, w26
   172fc:	lsr	w8, w8, #20
   17300:	cbnz	w8, 172ec <__sanitizer_cov_pcs_init@@Base+0xc08>
   17304:	ldr	w8, [x24, #16]
   17308:	cmp	w8, w21
   1730c:	b.ne	172ec <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   17310:	ldr	w8, [x24, #20]
   17314:	cmp	w8, w13
   17318:	b.ne	172ec <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   1731c:	mov	x8, xzr
   17320:	lsl	x9, x8, #3
   17324:	add	x10, x24, x9
   17328:	ldr	x10, [x10, #24]
   1732c:	ldr	x9, [x20, x9]
   17330:	cmp	x10, x9
   17334:	b.ne	172ec <__sanitizer_cov_pcs_init@@Base+0xc08>  // b.any
   17338:	add	x8, x8, #0x1
   1733c:	cmp	x28, x8
   17340:	b.ne	17320 <__sanitizer_cov_pcs_init@@Base+0xc3c>  // b.any
   17344:	dmb	ish
   17348:	str	x25, [x29]
   1734c:	b	174e8 <__sanitizer_cov_pcs_init@@Base+0xe04>
   17350:	ldr	x8, [sp, #8]
   17354:	lsr	x8, x8, #12
   17358:	add	x9, x23, x8, lsl #2
   1735c:	add	x10, x9, #0x800, lsl #12
   17360:	ldaxr	w9, [x10]
   17364:	add	w9, w9, #0x1
   17368:	stlxr	w11, w9, [x10]
   1736c:	cbnz	w11, 17360 <__sanitizer_cov_pcs_init@@Base+0xc7c>
   17370:	ldr	x11, [sp, #16]
   17374:	cmp	w9, #0x800, lsl #12
   17378:	ldr	x10, [x11]
   1737c:	add	x10, x10, #0x1
   17380:	str	x10, [x11]
   17384:	b.cs	1750c <__sanitizer_cov_pcs_init@@Base+0xe28>  // b.hs, b.nlast
   17388:	orr	w23, w9, w8, lsl #23
   1738c:	cbz	w23, 1752c <__sanitizer_cov_pcs_init@@Base+0xe48>
   17390:	tbnz	w23, #31, 1754c <__sanitizer_cov_pcs_init@@Base+0xe68>
   17394:	adrp	x28, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17398:	mov	x8, #0x7fffffff8           	// #34359738360
   1739c:	ldr	x28, [x28, #3800]
   173a0:	add	x8, x8, x21, lsl #3
   173a4:	and	x8, x8, #0x7fffffff8
   173a8:	add	x27, x8, #0x20
   173ac:	ldr	x24, [x28, #8]
   173b0:	dmb	ish
   173b4:	ldr	x9, [x28, #16]
   173b8:	dmb	ish
   173bc:	cbz	x24, 173f0 <__sanitizer_cov_pcs_init@@Base+0xd0c>
   173c0:	add	x8, x24, x27
   173c4:	cmp	x8, x9
   173c8:	b.hi	173f0 <__sanitizer_cov_pcs_init@@Base+0xd0c>  // b.pmore
   173cc:	add	x9, x28, #0x8
   173d0:	ldaxr	x10, [x9]
   173d4:	cmp	x10, x24
   173d8:	b.ne	173e8 <__sanitizer_cov_pcs_init@@Base+0xd04>  // b.any
   173dc:	stlxr	w10, x8, [x9]
   173e0:	cbnz	w10, 173cc <__sanitizer_cov_pcs_init@@Base+0xce8>
   173e4:	b	174a4 <__sanitizer_cov_pcs_init@@Base+0xdc0>
   173e8:	clrex
   173ec:	b	173ac <__sanitizer_cov_pcs_init@@Base+0xcc8>
   173f0:	ldaxrb	w8, [x28]
   173f4:	mov	w9, #0x1                   	// #1
   173f8:	stlxrb	w10, w9, [x28]
   173fc:	cbnz	w10, 173f0 <__sanitizer_cov_pcs_init@@Base+0xd0c>
   17400:	cbz	w8, 17410 <__sanitizer_cov_pcs_init@@Base+0xd2c>
   17404:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17408:	ldr	x0, [x0, #3800]
   1740c:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   17410:	cmp	x27, #0x10, lsl #12
   17414:	mov	w8, #0x10000               	// #65536
   17418:	csel	x8, x27, x8, hi  // hi = pmore
   1741c:	str	x8, [sp, #8]
   17420:	b	17454 <__sanitizer_cov_pcs_init@@Base+0xd70>
   17424:	str	xzr, [x28, #8]
   17428:	ldr	x24, [sp, #8]
   1742c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17430:	add	x1, x1, #0x469
   17434:	mov	w2, wzr
   17438:	mov	x0, x24
   1743c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   17440:	add	x8, x24, x0
   17444:	dmb	ish
   17448:	str	x8, [x28, #16]
   1744c:	dmb	ish
   17450:	str	x0, [x28, #8]
   17454:	ldr	x24, [x28, #8]
   17458:	dmb	ish
   1745c:	ldr	x9, [x28, #16]
   17460:	dmb	ish
   17464:	cbz	x24, 17424 <__sanitizer_cov_pcs_init@@Base+0xd40>
   17468:	add	x8, x24, x27
   1746c:	cmp	x8, x9
   17470:	b.hi	17424 <__sanitizer_cov_pcs_init@@Base+0xd40>  // b.pmore
   17474:	ldp	x11, x13, [sp, #16]
   17478:	add	x9, x28, #0x8
   1747c:	ldaxr	x10, [x9]
   17480:	cmp	x10, x24
   17484:	b.ne	17494 <__sanitizer_cov_pcs_init@@Base+0xdb0>  // b.any
   17488:	stlxr	w10, x8, [x9]
   1748c:	cbnz	w10, 17478 <__sanitizer_cov_pcs_init@@Base+0xd94>
   17490:	b	1749c <__sanitizer_cov_pcs_init@@Base+0xdb8>
   17494:	clrex
   17498:	b	17454 <__sanitizer_cov_pcs_init@@Base+0xd70>
   1749c:	dmb	ish
   174a0:	strb	wzr, [x28]
   174a4:	ldr	x8, [x11, #8]
   174a8:	and	w9, w26, #0xfff00000
   174ac:	add	x0, x24, #0x18
   174b0:	mov	x1, x20
   174b4:	add	x8, x8, x27
   174b8:	mov	x2, x22
   174bc:	str	x8, [x11, #8]
   174c0:	str	w23, [x24, #8]
   174c4:	str	w9, [x24, #12]
   174c8:	stp	w21, w13, [x24, #16]
   174cc:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   174d0:	str	x25, [x24]
   174d4:	dmb	ish
   174d8:	str	x24, [x29]
   174dc:	cbz	x19, 174e8 <__sanitizer_cov_pcs_init@@Base+0xe04>
   174e0:	mov	w8, #0x1                   	// #1
   174e4:	strb	w8, [x19]
   174e8:	mov	x0, x24
   174ec:	ldp	x20, x19, [sp, #112]
   174f0:	ldp	x22, x21, [sp, #96]
   174f4:	ldp	x24, x23, [sp, #80]
   174f8:	ldp	x26, x25, [sp, #64]
   174fc:	ldp	x28, x27, [sp, #48]
   17500:	ldp	x29, x30, [sp, #32]
   17504:	add	sp, sp, #0x80
   17508:	ret
   1750c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17510:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17514:	mov	w3, w9
   17518:	add	x0, x0, #0x3bc
   1751c:	add	x2, x2, #0x415
   17520:	mov	w1, #0x78                  	// #120
   17524:	mov	w4, #0x800000              	// #8388608
   17528:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1752c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17530:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17534:	add	x0, x0, #0x3bc
   17538:	add	x2, x2, #0x429
   1753c:	mov	w1, #0x7a                  	// #122
   17540:	mov	x3, x23
   17544:	mov	x4, xzr
   17548:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1754c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17550:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17554:	and	w3, w23, #0x7fffffff
   17558:	add	x0, x0, #0x3bc
   1755c:	add	x2, x2, #0x439
   17560:	mov	w1, #0x7b                  	// #123
   17564:	mov	x4, x23
   17568:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1756c:	str	x30, [sp, #-32]!
   17570:	stp	x20, x19, [sp, #16]
   17574:	ldp	x8, x3, [x0, #8]
   17578:	lsr	x4, x8, #4
   1757c:	cmp	x3, x4
   17580:	b.hi	17608 <__sanitizer_cov_pcs_init@@Base+0xf24>  // b.pmore
   17584:	mov	x19, x0
   17588:	mov	x20, x1
   1758c:	b.ne	175e4 <__sanitizer_cov_pcs_init@@Base+0xf00>  // b.any
   17590:	adds	x3, x3, #0x1
   17594:	b.cs	17620 <__sanitizer_cov_pcs_init@@Base+0xf3c>  // b.hs, b.nlast
   17598:	sub	x8, x3, #0x1
   1759c:	tst	x3, x8
   175a0:	b.ne	175ac <__sanitizer_cov_pcs_init@@Base+0xec8>  // b.any
   175a4:	mov	x8, x3
   175a8:	b	175d4 <__sanitizer_cov_pcs_init@@Base+0xef0>
   175ac:	clz	x8, x3
   175b0:	eor	x9, x8, #0x3f
   175b4:	mov	w8, #0x2                   	// #2
   175b8:	lsl	x8, x8, x9
   175bc:	cmp	x8, x3
   175c0:	b.ls	17640 <__sanitizer_cov_pcs_init@@Base+0xf5c>  // b.plast
   175c4:	mov	w10, #0x1                   	// #1
   175c8:	lsl	x4, x10, x9
   175cc:	cmp	x4, x3
   175d0:	b.cs	1765c <__sanitizer_cov_pcs_init@@Base+0xf78>  // b.hs, b.nlast
   175d4:	mov	x0, x19
   175d8:	mov	x1, x8
   175dc:	bl	17674 <__sanitizer_cov_pcs_init@@Base+0xf90>
   175e0:	ldr	x3, [x19, #16]
   175e4:	add	x9, x3, #0x1
   175e8:	ldr	x8, [x19]
   175ec:	str	x9, [x19, #16]
   175f0:	mov	x1, x20
   175f4:	ldp	x20, x19, [sp, #16]
   175f8:	add	x0, x8, x3, lsl #4
   175fc:	mov	w2, #0x10                  	// #16
   17600:	ldr	x30, [sp], #32
   17604:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   17608:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1760c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   17610:	add	x0, x0, #0xbf8
   17614:	add	x2, x2, #0x44f
   17618:	mov	w1, #0x1cd                 	// #461
   1761c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17620:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17624:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   17628:	add	x0, x0, #0xbf8
   1762c:	add	x2, x2, #0x46b
   17630:	mov	w1, #0x186                 	// #390
   17634:	mov	x3, xzr
   17638:	mov	x4, xzr
   1763c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17640:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17644:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   17648:	add	x0, x0, #0xbf8
   1764c:	add	x2, x2, #0x47b
   17650:	mov	w1, #0x18a                 	// #394
   17654:	mov	x4, x8
   17658:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1765c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17660:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   17664:	add	x0, x0, #0xbf8
   17668:	add	x2, x2, #0x49d
   1766c:	mov	w1, #0x18b                 	// #395
   17670:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17674:	stp	x30, x21, [sp, #-32]!
   17678:	stp	x20, x19, [sp, #16]
   1767c:	cbz	x1, 1770c <__sanitizer_cov_pcs_init@@Base+0x1028>
   17680:	ldr	x3, [x0, #16]
   17684:	mov	x20, x1
   17688:	mov	x19, x0
   1768c:	cmp	x3, x1
   17690:	b.hi	1772c <__sanitizer_cov_pcs_init@@Base+0x1048>  // b.pmore
   17694:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17698:	ldr	x21, [x21, #4016]
   1769c:	ldr	x0, [x21]
   176a0:	cbnz	x0, 176ac <__sanitizer_cov_pcs_init@@Base+0xfc8>
   176a4:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   176a8:	str	x0, [x21]
   176ac:	sub	x8, x0, #0x1
   176b0:	tst	x0, x8
   176b4:	b.ne	17748 <__sanitizer_cov_pcs_init@@Base+0x1064>  // b.any
   176b8:	lsl	x8, x20, #4
   176bc:	add	x8, x8, x0
   176c0:	sub	x8, x8, #0x1
   176c4:	neg	x9, x0
   176c8:	and	x20, x8, x9
   176cc:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   176d0:	add	x1, x1, #0x2c0
   176d4:	mov	x0, x20
   176d8:	mov	w2, wzr
   176dc:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   176e0:	ldr	x8, [x19, #16]
   176e4:	ldr	x1, [x19]
   176e8:	mov	x21, x0
   176ec:	lsl	x2, x8, #4
   176f0:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   176f4:	ldp	x0, x1, [x19]
   176f8:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   176fc:	stp	x21, x20, [x19]
   17700:	ldp	x20, x19, [sp, #16]
   17704:	ldp	x30, x21, [sp], #32
   17708:	ret
   1770c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17710:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17714:	add	x0, x0, #0xbf8
   17718:	add	x2, x2, #0x289
   1771c:	mov	w1, #0x20b                 	// #523
   17720:	mov	x3, xzr
   17724:	mov	x4, xzr
   17728:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1772c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17730:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17734:	add	x0, x0, #0xbf8
   17738:	add	x2, x2, #0x2a2
   1773c:	mov	w1, #0x20c                 	// #524
   17740:	mov	x4, x20
   17744:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17748:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1774c:	add	x0, x0, #0x121
   17750:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   17754:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   17758:	add	x0, x0, #0x4
   1775c:	ret
   17760:	mov	x0, x30
   17764:	ret
   17768:	stp	x30, x21, [sp, #-32]!
   1776c:	stp	x20, x19, [sp, #16]
   17770:	cmp	x3, #0x0
   17774:	cinc	x8, x2, ne  // ne = any
   17778:	mov	x20, x3
   1777c:	and	x3, x8, #0xffffffff
   17780:	cmp	x3, #0x101
   17784:	str	w8, [x0, #8]
   17788:	b.cs	177bc <__sanitizer_cov_pcs_init@@Base+0x10d8>  // b.hs, b.nlast
   1778c:	mov	x21, x2
   17790:	mov	x19, x0
   17794:	add	x0, x0, #0x10
   17798:	lsl	x2, x2, #3
   1779c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   177a0:	cbz	x20, 177ac <__sanitizer_cov_pcs_init@@Base+0x10c8>
   177a4:	add	x8, x19, x21, lsl #3
   177a8:	str	x20, [x8, #16]
   177ac:	str	xzr, [x19, #2064]
   177b0:	ldp	x20, x19, [sp, #16]
   177b4:	ldp	x30, x21, [sp], #32
   177b8:	ret
   177bc:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   177c0:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   177c4:	add	x0, x0, #0x48c
   177c8:	add	x2, x2, #0x4e3
   177cc:	mov	w1, #0x23                  	// #35
   177d0:	mov	w4, #0x100                 	// #256
   177d4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   177d8:	stp	x30, x25, [sp, #-64]!
   177dc:	stp	x24, x23, [sp, #16]
   177e0:	stp	x22, x21, [sp, #32]
   177e4:	stp	x20, x19, [sp, #48]
   177e8:	mov	w21, w5
   177ec:	cmp	w5, #0x1
   177f0:	b.ls	178e8 <__sanitizer_cov_pcs_init@@Base+0x1204>  // b.plast
   177f4:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   177f8:	ldr	x25, [x25, #4016]
   177fc:	mov	x23, x0
   17800:	mov	x24, x4
   17804:	mov	x19, x3
   17808:	ldr	x0, [x25]
   1780c:	mov	x20, x2
   17810:	mov	x22, x1
   17814:	cbnz	x0, 17820 <__sanitizer_cov_pcs_init@@Base+0x113c>
   17818:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1781c:	str	x0, [x25]
   17820:	mov	w8, #0x1                   	// #1
   17824:	cmp	x19, #0x1, lsl #12
   17828:	str	x22, [x23, #16]
   1782c:	str	w8, [x23, #8]
   17830:	b.cs	17848 <__sanitizer_cov_pcs_init@@Base+0x1164>  // b.hs, b.nlast
   17834:	ldp	x20, x19, [sp, #48]
   17838:	ldp	x22, x21, [sp, #32]
   1783c:	ldp	x24, x23, [sp, #16]
   17840:	ldp	x30, x25, [sp], #64
   17844:	ret
   17848:	cmp	x19, x24
   1784c:	b.ls	17908 <__sanitizer_cov_pcs_init@@Base+0x1224>  // b.plast
   17850:	tst	x20, #0x7
   17854:	b.ne	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.any
   17858:	sub	x8, x19, #0x10
   1785c:	cmp	x8, x20
   17860:	b.ls	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   17864:	cmp	x20, x24
   17868:	b.ls	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   1786c:	mov	w9, #0x1                   	// #1
   17870:	cmp	w9, w21
   17874:	b.cs	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.hs, b.nlast
   17878:	ldr	x10, [x20, #8]
   1787c:	cmp	x10, x0
   17880:	b.cc	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.lo, b.ul, b.last
   17884:	cmp	x10, x22
   17888:	b.eq	1789c <__sanitizer_cov_pcs_init@@Base+0x11b8>  // b.none
   1788c:	add	x11, x23, w9, uxtw #3
   17890:	add	w9, w9, #0x1
   17894:	str	w9, [x23, #8]
   17898:	str	x10, [x11, #16]
   1789c:	cmp	x20, x19
   178a0:	b.cs	178c8 <__sanitizer_cov_pcs_init@@Base+0x11e4>  // b.hs, b.nlast
   178a4:	ldr	x10, [x20]
   178a8:	tst	x10, #0x7
   178ac:	b.ne	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.any
   178b0:	cmp	x8, x10
   178b4:	b.ls	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>  // b.plast
   178b8:	cmp	x10, x20
   178bc:	mov	x20, x10
   178c0:	b.hi	17870 <__sanitizer_cov_pcs_init@@Base+0x118c>  // b.pmore
   178c4:	b	17834 <__sanitizer_cov_pcs_init@@Base+0x1150>
   178c8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   178cc:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   178d0:	add	x0, x0, #0x48c
   178d4:	add	x2, x2, #0x52e
   178d8:	mov	w1, #0x33                  	// #51
   178dc:	mov	x3, x19
   178e0:	mov	x4, x20
   178e4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   178e8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   178ec:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   178f0:	mov	w3, w21
   178f4:	add	x0, x0, #0x48c
   178f8:	add	x2, x2, #0x502
   178fc:	mov	w1, #0x49                  	// #73
   17900:	mov	w4, #0x2                   	// #2
   17904:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17908:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1790c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17910:	add	x0, x0, #0x48c
   17914:	add	x2, x2, #0x52e
   17918:	mov	w1, #0x33                  	// #51
   1791c:	mov	x3, x19
   17920:	mov	x4, x24
   17924:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17928:	str	x30, [sp, #-16]!
   1792c:	ldr	w4, [x0, #8]
   17930:	mov	x3, x1
   17934:	cmp	x4, x1
   17938:	b.ls	179ec <__sanitizer_cov_pcs_init@@Base+0x1308>  // b.plast
   1793c:	subs	w8, w4, w3
   17940:	str	w8, [x0, #8]
   17944:	b.eq	179b4 <__sanitizer_cov_pcs_init@@Base+0x12d0>  // b.none
   17948:	cmp	w8, #0x3
   1794c:	b.ls	17988 <__sanitizer_cov_pcs_init@@Base+0x12a4>  // b.plast
   17950:	lsl	x10, x8, #3
   17954:	lsl	x9, x3, #3
   17958:	add	x12, x9, x10
   1795c:	add	x12, x12, x0
   17960:	add	x11, x0, #0x10
   17964:	add	x12, x12, #0x10
   17968:	cmp	x12, x11
   1796c:	b.ls	179bc <__sanitizer_cov_pcs_init@@Base+0x12d8>  // b.plast
   17970:	add	x10, x10, x0
   17974:	add	x11, x9, x0
   17978:	add	x10, x10, #0x10
   1797c:	add	x11, x11, #0x10
   17980:	cmp	x11, x10
   17984:	b.cs	179bc <__sanitizer_cov_pcs_init@@Base+0x12d8>  // b.hs, b.nlast
   17988:	mov	x10, xzr
   1798c:	sub	x8, x8, x10
   17990:	add	x9, x0, x10, lsl #3
   17994:	add	x10, x10, x3
   17998:	add	x10, x0, x10, lsl #3
   1799c:	add	x9, x9, #0x10
   179a0:	add	x10, x10, #0x10
   179a4:	ldr	x11, [x10], #8
   179a8:	subs	x8, x8, #0x1
   179ac:	str	x11, [x9], #8
   179b0:	b.ne	179a4 <__sanitizer_cov_pcs_init@@Base+0x12c0>  // b.any
   179b4:	ldr	x30, [sp], #16
   179b8:	ret
   179bc:	and	x10, x8, #0xfffffffc
   179c0:	mov	x11, x10
   179c4:	mov	x12, x0
   179c8:	add	x13, x12, x9
   179cc:	ldp	q1, q0, [x13, #16]
   179d0:	subs	x11, x11, #0x4
   179d4:	str	q0, [x12, #32]!
   179d8:	stur	q1, [x12, #-16]
   179dc:	b.ne	179c8 <__sanitizer_cov_pcs_init@@Base+0x12e4>  // b.any
   179e0:	cmp	x10, x8
   179e4:	b.ne	1798c <__sanitizer_cov_pcs_init@@Base+0x12a8>  // b.any
   179e8:	b	179b4 <__sanitizer_cov_pcs_init@@Base+0x12d0>
   179ec:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   179f0:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   179f4:	add	x0, x0, #0x48c
   179f8:	add	x2, x2, #0x519
   179fc:	mov	w1, #0x74                  	// #116
   17a00:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17a04:	ldr	w9, [x0, #8]
   17a08:	cmp	w9, #0x2
   17a0c:	b.cc	17a58 <__sanitizer_cov_pcs_init@@Base+0x1374>  // b.lo, b.ul, b.last
   17a10:	mov	x8, x0
   17a14:	ldr	x8, [x8]
   17a18:	mov	x0, xzr
   17a1c:	mov	w10, #0x1                   	// #1
   17a20:	ldr	x11, [x8, x10, lsl #3]
   17a24:	ldr	x12, [x8, x0, lsl #3]
   17a28:	sub	x13, x1, x11
   17a2c:	subs	x11, x11, x1
   17a30:	sub	x14, x1, x12
   17a34:	csel	x11, x13, x11, cc  // cc = lo, ul, last
   17a38:	subs	x12, x12, x1
   17a3c:	csel	x12, x14, x12, cc  // cc = lo, ul, last
   17a40:	cmp	x11, x12
   17a44:	csel	x0, x10, x0, cc  // cc = lo, ul, last
   17a48:	add	x10, x10, #0x1
   17a4c:	cmp	x10, x9
   17a50:	b.cc	17a20 <__sanitizer_cov_pcs_init@@Base+0x133c>  // b.lo, b.ul, b.last
   17a54:	ret
   17a58:	mov	x0, xzr
   17a5c:	ret
   17a60:	sub	sp, sp, #0xa0
   17a64:	str	x30, [sp, #64]
   17a68:	stp	x28, x27, [sp, #80]
   17a6c:	stp	x26, x25, [sp, #96]
   17a70:	stp	x24, x23, [sp, #112]
   17a74:	stp	x22, x21, [sp, #128]
   17a78:	stp	x20, x19, [sp, #144]
   17a7c:	ldr	x8, [x0]
   17a80:	cbz	x8, 17acc <__sanitizer_cov_pcs_init@@Base+0x13e8>
   17a84:	ldr	w8, [x0, #8]
   17a88:	mov	x19, x0
   17a8c:	cbz	w8, 17acc <__sanitizer_cov_pcs_init@@Base+0x13e8>
   17a90:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17a94:	ldr	x21, [x21, #4016]
   17a98:	ldr	x0, [x21]
   17a9c:	cbz	x0, 17af4 <__sanitizer_cov_pcs_init@@Base+0x1410>
   17aa0:	lsl	x20, x0, #1
   17aa4:	stp	xzr, xzr, [sp, #40]
   17aa8:	str	xzr, [sp, #32]
   17aac:	cbz	x20, 17b0c <__sanitizer_cov_pcs_init@@Base+0x1428>
   17ab0:	add	x0, sp, #0x20
   17ab4:	mov	x1, x20
   17ab8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17abc:	ldr	x8, [sp, #48]
   17ac0:	cmp	x8, x20
   17ac4:	b.cc	17b18 <__sanitizer_cov_pcs_init@@Base+0x1434>  // b.lo, b.ul, b.last
   17ac8:	b	17b48 <__sanitizer_cov_pcs_init@@Base+0x1464>
   17acc:	ldp	x20, x19, [sp, #144]
   17ad0:	ldp	x22, x21, [sp, #128]
   17ad4:	ldp	x24, x23, [sp, #112]
   17ad8:	ldp	x26, x25, [sp, #96]
   17adc:	ldp	x28, x27, [sp, #80]
   17ae0:	ldr	x30, [sp, #64]
   17ae4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17ae8:	add	x0, x0, #0x54f
   17aec:	add	sp, sp, #0xa0
   17af0:	b	ff04 <__sanitizer_on_print@@Base+0x4>
   17af4:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   17af8:	str	x0, [x21]
   17afc:	lsl	x20, x0, #1
   17b00:	stp	xzr, xzr, [sp, #40]
   17b04:	str	xzr, [sp, #32]
   17b08:	cbnz	x20, 17ab0 <__sanitizer_cov_pcs_init@@Base+0x13cc>
   17b0c:	mov	x8, xzr
   17b10:	cmp	x8, x20
   17b14:	b.cs	17b48 <__sanitizer_cov_pcs_init@@Base+0x1464>  // b.hs, b.nlast
   17b18:	ldr	x9, [sp, #40]
   17b1c:	cmp	x9, x20
   17b20:	b.cs	17b34 <__sanitizer_cov_pcs_init@@Base+0x1450>  // b.hs, b.nlast
   17b24:	add	x0, sp, #0x20
   17b28:	mov	x1, x20
   17b2c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17b30:	ldr	x8, [sp, #48]
   17b34:	ldr	x9, [sp, #32]
   17b38:	sub	x2, x20, x8
   17b3c:	mov	w1, wzr
   17b40:	add	x0, x9, x8
   17b44:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   17b48:	stp	x20, xzr, [sp, #48]
   17b4c:	cbz	x20, 17d38 <__sanitizer_cov_pcs_init@@Base+0x1654>
   17b50:	ldr	x8, [sp, #32]
   17b54:	strb	wzr, [x8]
   17b58:	ldr	x20, [x21]
   17b5c:	cbz	x20, 17b88 <__sanitizer_cov_pcs_init@@Base+0x14a4>
   17b60:	stp	xzr, xzr, [sp, #8]
   17b64:	str	xzr, [sp]
   17b68:	cbz	x20, 17ba0 <__sanitizer_cov_pcs_init@@Base+0x14bc>
   17b6c:	mov	x0, sp
   17b70:	mov	x1, x20
   17b74:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17b78:	ldr	x8, [sp, #16]
   17b7c:	cmp	x8, x20
   17b80:	b.cc	17bac <__sanitizer_cov_pcs_init@@Base+0x14c8>  // b.lo, b.ul, b.last
   17b84:	b	17bdc <__sanitizer_cov_pcs_init@@Base+0x14f8>
   17b88:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   17b8c:	mov	x20, x0
   17b90:	str	x0, [x21]
   17b94:	stp	xzr, xzr, [sp, #8]
   17b98:	str	xzr, [sp]
   17b9c:	cbnz	x20, 17b6c <__sanitizer_cov_pcs_init@@Base+0x1488>
   17ba0:	mov	x8, xzr
   17ba4:	cmp	x8, x20
   17ba8:	b.cs	17bdc <__sanitizer_cov_pcs_init@@Base+0x14f8>  // b.hs, b.nlast
   17bac:	ldr	x9, [sp, #8]
   17bb0:	cmp	x9, x20
   17bb4:	b.cs	17bc8 <__sanitizer_cov_pcs_init@@Base+0x14e4>  // b.hs, b.nlast
   17bb8:	mov	x0, sp
   17bbc:	mov	x1, x20
   17bc0:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17bc4:	ldr	x8, [sp, #16]
   17bc8:	ldr	x9, [sp]
   17bcc:	sub	x2, x20, x8
   17bd0:	mov	w1, wzr
   17bd4:	add	x0, x9, x8
   17bd8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   17bdc:	stp	x20, xzr, [sp, #16]
   17be0:	cbz	x20, 17d38 <__sanitizer_cov_pcs_init@@Base+0x1654>
   17be4:	ldr	x8, [sp]
   17be8:	strb	wzr, [x8]
   17bec:	ldr	w8, [x19, #8]
   17bf0:	cbz	w8, 17ce4 <__sanitizer_cov_pcs_init@@Base+0x1600>
   17bf4:	adrp	x25, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17bf8:	ldr	x25, [x25, #4056]
   17bfc:	adrp	x20, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17c00:	adrp	x21, 26000 <__interceptor_sigaction@@Base+0x3a44>
   17c04:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17c08:	ldr	w26, [x25, #192]
   17c0c:	mov	x27, xzr
   17c10:	mov	x24, xzr
   17c14:	add	x20, x20, #0x562
   17c18:	add	x21, x21, #0x6b3
   17c1c:	add	x22, x22, #0x5d4
   17c20:	b	17c3c <__sanitizer_cov_pcs_init@@Base+0x1558>
   17c24:	mov	x0, x23
   17c28:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   17c2c:	ldr	w8, [x19, #8]
   17c30:	add	x24, x24, #0x1
   17c34:	cmp	x24, x8
   17c38:	b.cs	17ce4 <__sanitizer_cov_pcs_init@@Base+0x1600>  // b.hs, b.nlast
   17c3c:	ldr	x8, [x19]
   17c40:	ldr	x8, [x8, x24, lsl #3]
   17c44:	cbz	x8, 17ce4 <__sanitizer_cov_pcs_init@@Base+0x1600>
   17c48:	sub	x23, x8, #0x4
   17c4c:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   17c50:	mov	x1, x23
   17c54:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   17c58:	mov	x23, x0
   17c5c:	mov	x28, x0
   17c60:	cbnz	x0, 17c70 <__sanitizer_cov_pcs_init@@Base+0x158c>
   17c64:	b	17d58 <__sanitizer_cov_pcs_init@@Base+0x1674>
   17c68:	ldr	x28, [x28]
   17c6c:	cbz	x28, 17c24 <__sanitizer_cov_pcs_init@@Base+0x1540>
   17c70:	ldr	x8, [sp, #48]
   17c74:	cbz	x8, 17d38 <__sanitizer_cov_pcs_init@@Base+0x1654>
   17c78:	ldr	x8, [sp, #32]
   17c7c:	mov	x2, x27
   17c80:	add	x3, x28, #0x8
   17c84:	add	x0, sp, #0x20
   17c88:	strb	wzr, [x8]
   17c8c:	ldr	x1, [x25, #200]
   17c90:	ldrb	w4, [x25, #189]
   17c94:	ldr	x5, [x25, #24]
   17c98:	mov	x6, x20
   17c9c:	str	xzr, [sp, #56]
   17ca0:	add	x27, x27, #0x1
   17ca4:	bl	181bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   17ca8:	ldr	x1, [sp, #32]
   17cac:	mov	x0, x21
   17cb0:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   17cb4:	subs	w26, w26, #0x1
   17cb8:	b.lt	17c68 <__sanitizer_cov_pcs_init@@Base+0x1584>  // b.tstop
   17cbc:	ldr	x8, [sp, #24]
   17cc0:	cbz	x8, 17cd0 <__sanitizer_cov_pcs_init@@Base+0x15ec>
   17cc4:	mov	x0, sp
   17cc8:	mov	x1, x22
   17ccc:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   17cd0:	ldr	x1, [x28, #40]
   17cd4:	cbz	x1, 17c68 <__sanitizer_cov_pcs_init@@Base+0x1584>
   17cd8:	mov	x0, sp
   17cdc:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   17ce0:	b	17c68 <__sanitizer_cov_pcs_init@@Base+0x1584>
   17ce4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17ce8:	add	x0, x0, #0x561
   17cec:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   17cf0:	ldr	x8, [sp, #24]
   17cf4:	cbz	x8, 17d08 <__sanitizer_cov_pcs_init@@Base+0x1624>
   17cf8:	ldr	x1, [sp]
   17cfc:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17d00:	add	x0, x0, #0x5d7
   17d04:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   17d08:	ldp	x0, x1, [sp]
   17d0c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   17d10:	ldp	x0, x1, [sp, #32]
   17d14:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   17d18:	ldp	x20, x19, [sp, #144]
   17d1c:	ldp	x22, x21, [sp, #128]
   17d20:	ldp	x24, x23, [sp, #112]
   17d24:	ldp	x26, x25, [sp, #96]
   17d28:	ldp	x28, x27, [sp, #80]
   17d2c:	ldr	x30, [sp, #64]
   17d30:	add	sp, sp, #0xa0
   17d34:	ret
   17d38:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17d3c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17d40:	add	x0, x0, #0xbf8
   17d44:	add	x2, x2, #0x7fd
   17d48:	mov	w1, #0x1c5                 	// #453
   17d4c:	mov	x3, xzr
   17d50:	mov	x4, xzr
   17d54:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17d58:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17d5c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17d60:	add	x0, x0, #0x563
   17d64:	add	x2, x2, #0x5c2
   17d68:	mov	w1, #0x23                  	// #35
   17d6c:	mov	x3, xzr
   17d70:	mov	x4, xzr
   17d74:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17d78:	cmp	w1, #0x0
   17d7c:	mov	w8, w1
   17d80:	csel	x9, xzr, x3, eq  // eq = none
   17d84:	cmp	w1, #0x1
   17d88:	str	x9, [x0, #2064]
   17d8c:	b.eq	17d9c <__sanitizer_cov_pcs_init@@Base+0x16b8>  // b.none
   17d90:	cbnz	w8, 17da8 <__sanitizer_cov_pcs_init@@Base+0x16c4>
   17d94:	str	wzr, [x0, #8]
   17d98:	ret
   17d9c:	str	w8, [x0, #8]
   17da0:	str	x2, [x0, #16]
   17da4:	ret
   17da8:	mov	x1, x2
   17dac:	tbz	w7, #0, 17dc4 <__sanitizer_cov_pcs_init@@Base+0x16e0>
   17db0:	mov	x2, x3
   17db4:	mov	x3, x5
   17db8:	mov	x4, x6
   17dbc:	mov	w5, w8
   17dc0:	b	177d8 <__sanitizer_cov_pcs_init@@Base+0x10f4>
   17dc4:	cbz	x4, 17dd4 <__sanitizer_cov_pcs_init@@Base+0x16f0>
   17dc8:	mov	x2, x4
   17dcc:	mov	w3, w8
   17dd0:	b	1c754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x461c>
   17dd4:	mov	w2, w8
   17dd8:	b	1c600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44c8>

0000000000017ddc <__sanitizer_symbolize_pc@@Base>:
   17ddc:	sub	sp, sp, #0x70
   17de0:	str	x30, [sp, #32]
   17de4:	stp	x26, x25, [sp, #48]
   17de8:	stp	x24, x23, [sp, #64]
   17dec:	stp	x22, x21, [sp, #80]
   17df0:	stp	x20, x19, [sp, #96]
   17df4:	cbz	x3, 17f8c <__sanitizer_symbolize_pc@@Base+0x1b0>
   17df8:	mov	x22, x3
   17dfc:	mov	x19, x2
   17e00:	mov	x20, x1
   17e04:	sub	x21, x0, #0x4
   17e08:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   17e0c:	mov	x1, x21
   17e10:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   17e14:	cbz	x0, 17e54 <__sanitizer_symbolize_pc@@Base+0x78>
   17e18:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17e1c:	ldr	x24, [x24, #4016]
   17e20:	mov	x21, x0
   17e24:	ldr	x23, [x24]
   17e28:	cbz	x23, 17e74 <__sanitizer_symbolize_pc@@Base+0x98>
   17e2c:	stp	xzr, xzr, [sp, #8]
   17e30:	str	xzr, [sp]
   17e34:	cbz	x23, 17e8c <__sanitizer_symbolize_pc@@Base+0xb0>
   17e38:	mov	x0, sp
   17e3c:	mov	x1, x23
   17e40:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17e44:	ldr	x8, [sp, #16]
   17e48:	cmp	x8, x23
   17e4c:	b.cc	17e98 <__sanitizer_symbolize_pc@@Base+0xbc>  // b.lo, b.ul, b.last
   17e50:	b	17ec8 <__sanitizer_symbolize_pc@@Base+0xec>
   17e54:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17e58:	add	x1, x1, #0x5e8
   17e5c:	mov	x0, x19
   17e60:	mov	x2, x22
   17e64:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   17e68:	add	x8, x22, x19
   17e6c:	sturb	wzr, [x8, #-1]
   17e70:	b	17f8c <__sanitizer_symbolize_pc@@Base+0x1b0>
   17e74:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   17e78:	mov	x23, x0
   17e7c:	str	x0, [x24]
   17e80:	stp	xzr, xzr, [sp, #8]
   17e84:	str	xzr, [sp]
   17e88:	cbnz	x23, 17e38 <__sanitizer_symbolize_pc@@Base+0x5c>
   17e8c:	mov	x8, xzr
   17e90:	cmp	x8, x23
   17e94:	b.cs	17ec8 <__sanitizer_symbolize_pc@@Base+0xec>  // b.hs, b.nlast
   17e98:	ldr	x9, [sp, #8]
   17e9c:	cmp	x9, x23
   17ea0:	b.cs	17eb4 <__sanitizer_symbolize_pc@@Base+0xd8>  // b.hs, b.nlast
   17ea4:	mov	x0, sp
   17ea8:	mov	x1, x23
   17eac:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   17eb0:	ldr	x8, [sp, #16]
   17eb4:	ldr	x9, [sp]
   17eb8:	sub	x2, x23, x8
   17ebc:	mov	w1, wzr
   17ec0:	add	x0, x9, x8
   17ec4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   17ec8:	stp	x23, xzr, [sp, #16]
   17ecc:	cbz	x23, 17fa8 <__sanitizer_symbolize_pc@@Base+0x1cc>
   17ed0:	ldr	x8, [sp]
   17ed4:	add	x9, x19, x22
   17ed8:	sub	x25, x9, #0x1
   17edc:	cmp	x25, x19
   17ee0:	strb	wzr, [x8]
   17ee4:	b.ls	17f78 <__sanitizer_symbolize_pc@@Base+0x19c>  // b.plast
   17ee8:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   17eec:	ldr	x26, [x26, #4056]
   17ef0:	adrp	x23, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17ef4:	mov	w22, wzr
   17ef8:	add	x23, x23, #0x562
   17efc:	ldr	x8, [sp, #16]
   17f00:	cbz	x8, 17fa8 <__sanitizer_symbolize_pc@@Base+0x1cc>
   17f04:	ldr	x8, [sp]
   17f08:	add	x3, x21, #0x8
   17f0c:	mov	x0, sp
   17f10:	mov	x1, x20
   17f14:	strb	wzr, [x8]
   17f18:	ldrb	w4, [x26, #189]
   17f1c:	ldr	x5, [x26, #24]
   17f20:	mov	w2, w22
   17f24:	mov	x6, x23
   17f28:	str	xzr, [sp, #24]
   17f2c:	bl	181bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   17f30:	ldr	x8, [sp, #24]
   17f34:	cbz	x8, 17f64 <__sanitizer_symbolize_pc@@Base+0x188>
   17f38:	ldr	x1, [sp]
   17f3c:	mvn	x8, x19
   17f40:	add	x24, x8, x25
   17f44:	mov	x0, x19
   17f48:	mov	x2, x24
   17f4c:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   17f50:	ldr	x8, [sp, #24]
   17f54:	cmp	x24, x8
   17f58:	csel	x8, x24, x8, cc  // cc = lo, ul, last
   17f5c:	add	x19, x19, x8
   17f60:	strb	wzr, [x19], #1
   17f64:	ldr	x21, [x21]
   17f68:	cbz	x21, 17f78 <__sanitizer_symbolize_pc@@Base+0x19c>
   17f6c:	cmp	x19, x25
   17f70:	add	w22, w22, #0x1
   17f74:	b.cc	17efc <__sanitizer_symbolize_pc@@Base+0x120>  // b.lo, b.ul, b.last
   17f78:	cmp	x19, x25
   17f7c:	b.hi	17fc8 <__sanitizer_symbolize_pc@@Base+0x1ec>  // b.pmore
   17f80:	strb	wzr, [x19]
   17f84:	ldp	x0, x1, [sp]
   17f88:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   17f8c:	ldp	x20, x19, [sp, #96]
   17f90:	ldp	x22, x21, [sp, #80]
   17f94:	ldp	x24, x23, [sp, #64]
   17f98:	ldp	x26, x25, [sp, #48]
   17f9c:	ldr	x30, [sp, #32]
   17fa0:	add	sp, sp, #0x70
   17fa4:	ret
   17fa8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   17fac:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   17fb0:	add	x0, x0, #0xbf8
   17fb4:	add	x2, x2, #0x7fd
   17fb8:	mov	w1, #0x1c5                 	// #453
   17fbc:	mov	x3, xzr
   17fc0:	mov	x4, xzr
   17fc4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   17fc8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17fcc:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   17fd0:	add	x0, x0, #0x563
   17fd4:	add	x2, x2, #0x5fa
   17fd8:	mov	w1, #0x87                  	// #135
   17fdc:	mov	x3, xzr
   17fe0:	mov	x4, xzr
   17fe4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000017fe8 <__sanitizer_symbolize_global@@Base>:
   17fe8:	sub	sp, sp, #0x90
   17fec:	stp	x30, x23, [sp, #96]
   17ff0:	stp	x22, x21, [sp, #112]
   17ff4:	stp	x20, x19, [sp, #128]
   17ff8:	cbz	x3, 18104 <__sanitizer_symbolize_global@@Base+0x11c>
   17ffc:	mov	x22, x0
   18000:	add	x0, sp, #0x20
   18004:	mov	x19, x3
   18008:	mov	x20, x2
   1800c:	mov	x21, x1
   18010:	strb	wzr, [x2]
   18014:	bl	18a5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x924>
   18018:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1801c:	add	x2, sp, #0x20
   18020:	mov	x1, x22
   18024:	bl	192e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11b0>
   18028:	tbz	w0, #0, 18104 <__sanitizer_symbolize_global@@Base+0x11c>
   1802c:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   18030:	ldr	x23, [x23, #4016]
   18034:	ldr	x22, [x23]
   18038:	cbz	x22, 18064 <__sanitizer_symbolize_global@@Base+0x7c>
   1803c:	stp	xzr, xzr, [sp, #8]
   18040:	str	xzr, [sp]
   18044:	cbz	x22, 1807c <__sanitizer_symbolize_global@@Base+0x94>
   18048:	mov	x0, sp
   1804c:	mov	x1, x22
   18050:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   18054:	ldr	x8, [sp, #16]
   18058:	cmp	x8, x22
   1805c:	b.cc	18088 <__sanitizer_symbolize_global@@Base+0xa0>  // b.lo, b.ul, b.last
   18060:	b	180b8 <__sanitizer_symbolize_global@@Base+0xd0>
   18064:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   18068:	mov	x22, x0
   1806c:	str	x0, [x23]
   18070:	stp	xzr, xzr, [sp, #8]
   18074:	str	xzr, [sp]
   18078:	cbnz	x22, 18048 <__sanitizer_symbolize_global@@Base+0x60>
   1807c:	mov	x8, xzr
   18080:	cmp	x8, x22
   18084:	b.cs	180b8 <__sanitizer_symbolize_global@@Base+0xd0>  // b.hs, b.nlast
   18088:	ldr	x9, [sp, #8]
   1808c:	cmp	x9, x22
   18090:	b.cs	180a4 <__sanitizer_symbolize_global@@Base+0xbc>  // b.hs, b.nlast
   18094:	mov	x0, sp
   18098:	mov	x1, x22
   1809c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   180a0:	ldr	x8, [sp, #16]
   180a4:	ldr	x9, [sp]
   180a8:	sub	x2, x22, x8
   180ac:	mov	w1, wzr
   180b0:	add	x0, x9, x8
   180b4:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   180b8:	stp	x22, xzr, [sp, #16]
   180bc:	cbz	x22, 18118 <__sanitizer_symbolize_global@@Base+0x130>
   180c0:	ldr	x8, [sp]
   180c4:	mov	x0, sp
   180c8:	add	x2, sp, #0x20
   180cc:	mov	x1, x21
   180d0:	strb	wzr, [x8]
   180d4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   180d8:	ldr	x8, [x8, #4056]
   180dc:	ldr	x3, [x8, #24]
   180e0:	bl	187c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x68c>
   180e4:	ldr	x1, [sp]
   180e8:	mov	x0, x20
   180ec:	mov	x2, x19
   180f0:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   180f4:	add	x8, x19, x20
   180f8:	sturb	wzr, [x8, #-1]
   180fc:	ldp	x0, x1, [sp]
   18100:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   18104:	ldp	x20, x19, [sp, #128]
   18108:	ldp	x22, x21, [sp, #112]
   1810c:	ldp	x30, x23, [sp, #96]
   18110:	add	sp, sp, #0x90
   18114:	ret
   18118:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1811c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   18120:	add	x0, x0, #0xbf8
   18124:	add	x2, x2, #0x7fd
   18128:	mov	w1, #0x1c5                 	// #453
   1812c:	mov	x3, xzr
   18130:	mov	x4, xzr
   18134:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000018138 <__sanitizer_get_module_and_offset_for_pc@@Base>:
   18138:	str	x30, [sp, #-48]!
   1813c:	stp	x22, x21, [sp, #16]
   18140:	stp	x20, x19, [sp, #32]
   18144:	mov	x21, x3
   18148:	mov	x19, x2
   1814c:	mov	x20, x1
   18150:	mov	x22, x0
   18154:	str	xzr, [sp, #8]
   18158:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1815c:	add	x2, sp, #0x8
   18160:	mov	x1, x22
   18164:	mov	x3, x21
   18168:	bl	19484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   1816c:	tbz	w0, #0, 181a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70>
   18170:	mov	w0, #0x1                   	// #1
   18174:	cbz	x20, 18198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>
   18178:	cbz	x19, 18198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x60>
   1817c:	ldr	x1, [sp, #8]
   18180:	mov	x0, x20
   18184:	mov	x2, x19
   18188:	bl	c654 <__sanitizer_set_report_fd@@Base+0x2da0>
   1818c:	add	x8, x19, x20
   18190:	mov	w0, #0x1                   	// #1
   18194:	sturb	wzr, [x8, #-1]
   18198:	ldp	x20, x19, [sp, #32]
   1819c:	ldp	x22, x21, [sp, #16]
   181a0:	ldr	x30, [sp], #48
   181a4:	ret
   181a8:	mov	w0, wzr
   181ac:	ldp	x20, x19, [sp, #32]
   181b0:	ldp	x22, x21, [sp, #16]
   181b4:	ldr	x30, [sp], #48
   181b8:	ret
   181bc:	sub	sp, sp, #0x70
   181c0:	stp	x29, x30, [sp, #16]
   181c4:	stp	x28, x27, [sp, #32]
   181c8:	stp	x26, x25, [sp, #48]
   181cc:	stp	x24, x23, [sp, #64]
   181d0:	stp	x22, x21, [sp, #80]
   181d4:	stp	x20, x19, [sp, #96]
   181d8:	mov	x25, x1
   181dc:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   181e0:	mov	x24, x0
   181e4:	add	x1, x1, #0x83d
   181e8:	mov	x0, x25
   181ec:	mov	x19, x6
   181f0:	mov	x20, x5
   181f4:	mov	w21, w4
   181f8:	mov	x22, x3
   181fc:	str	w2, [sp, #12]
   18200:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   18204:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18208:	add	x8, x8, #0x682
   1820c:	cmp	w0, #0x0
   18210:	adrp	x23, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18214:	adrp	x27, 29000 <__interceptor_sigaction@@Base+0x6a44>
   18218:	adrp	x26, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1821c:	csel	x29, x8, x25, eq  // eq = none
   18220:	adrp	x25, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18224:	add	x23, x23, #0x618
   18228:	add	x27, x27, #0x338
   1822c:	add	x26, x26, #0x770
   18230:	add	x25, x25, #0x693
   18234:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18238:	ldr	x2, [x22]
   1823c:	mov	x0, x24
   18240:	mov	x1, x26
   18244:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18248:	add	x29, x29, #0x1
   1824c:	ldrb	w2, [x29]
   18250:	cmp	w2, #0x25
   18254:	b.eq	18270 <__sanitizer_get_module_and_offset_for_pc@@Base+0x138>  // b.none
   18258:	cbz	w2, 1858c <__sanitizer_get_module_and_offset_for_pc@@Base+0x454>
   1825c:	mov	x0, x24
   18260:	mov	x1, x25
   18264:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18268:	add	x29, x29, #0x1
   1826c:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18270:	ldrb	w1, [x29, #1]!
   18274:	sub	w8, w1, #0x25
   18278:	cmp	w8, #0x4e
   1827c:	b.hi	185ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x474>  // b.pmore
   18280:	adr	x9, 18238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x100>
   18284:	ldrb	w10, [x23, x8]
   18288:	add	x9, x9, x10, lsl #2
   1828c:	br	x9
   18290:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18294:	mov	x0, x24
   18298:	add	x1, x1, #0x696
   1829c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   182a0:	b	184e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   182a4:	ldr	x8, [x22, #40]
   182a8:	cmn	x8, #0x1
   182ac:	csel	x2, xzr, x8, eq  // eq = none
   182b0:	b	1823c <__sanitizer_get_module_and_offset_for_pc@@Base+0x104>
   182b4:	ldr	w2, [sp, #12]
   182b8:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   182bc:	mov	x0, x24
   182c0:	add	x1, x1, #0x67a
   182c4:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   182c8:	add	x29, x29, #0x1
   182cc:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   182d0:	ldr	w2, [x22, #56]
   182d4:	b	18358 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220>
   182d8:	ldr	x28, [x22, #32]
   182dc:	cbz	x28, 184e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   182e0:	cbz	x19, 18314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1dc>
   182e4:	mov	x0, x19
   182e8:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   182ec:	mov	x27, x0
   182f0:	mov	x0, x28
   182f4:	mov	x1, x19
   182f8:	mov	x2, x27
   182fc:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   18300:	add	x8, x28, x27
   18304:	adrp	x27, 29000 <__interceptor_sigaction@@Base+0x6a44>
   18308:	cmp	w0, #0x0
   1830c:	add	x27, x27, #0x338
   18310:	csel	x28, x8, x28, eq  // eq = none
   18314:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18318:	mov	x0, x24
   1831c:	add	x1, x1, #0x699
   18320:	mov	x2, x28
   18324:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18328:	ldr	x8, [x22, #48]
   1832c:	cbnz	x8, 184e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   18330:	ldr	x2, [x22, #40]
   18334:	cmn	x2, #0x1
   18338:	b.eq	184e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>  // b.none
   1833c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18340:	mov	x0, x24
   18344:	add	x1, x1, #0x69f
   18348:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1834c:	add	x29, x29, #0x1
   18350:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18354:	ldr	w2, [x22, #60]
   18358:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1835c:	mov	x0, x24
   18360:	add	x1, x1, #0x6fb
   18364:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18368:	add	x29, x29, #0x1
   1836c:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18370:	ldr	x0, [x22, #48]
   18374:	b	1844c <__sanitizer_get_module_and_offset_for_pc@@Base+0x314>
   18378:	ldr	x1, [x22, #48]
   1837c:	cbnz	x1, 1842c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f4>
   18380:	ldr	x0, [x22, #8]
   18384:	cbz	x0, 18504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc>
   18388:	ldr	x28, [x22, #16]
   1838c:	ldr	w27, [x22, #24]
   18390:	mov	x1, x20
   18394:	bl	6884 <__sancov_default_options@plt+0x1f04>
   18398:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1839c:	mov	x2, x0
   183a0:	mov	x0, x24
   183a4:	add	x1, x1, #0x706
   183a8:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   183ac:	cmp	w27, #0x8
   183b0:	b.hi	185c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488>  // b.pmore
   183b4:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   183b8:	add	x10, x10, #0x670
   183bc:	adr	x8, 184d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   183c0:	ldrb	w9, [x10, x27]
   183c4:	add	x8, x8, x9, lsl #2
   183c8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   183cc:	add	x2, x2, #0x716
   183d0:	br	x8
   183d4:	ldr	x28, [x22, #32]
   183d8:	cbz	x28, 18410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   183dc:	cbz	x19, 18410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d8>
   183e0:	mov	x0, x19
   183e4:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   183e8:	mov	x27, x0
   183ec:	mov	x0, x28
   183f0:	mov	x1, x19
   183f4:	mov	x2, x27
   183f8:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   183fc:	add	x8, x28, x27
   18400:	adrp	x27, 29000 <__interceptor_sigaction@@Base+0x6a44>
   18404:	cmp	w0, #0x0
   18408:	add	x27, x27, #0x338
   1840c:	csel	x28, x8, x28, eq  // eq = none
   18410:	mov	x0, x24
   18414:	mov	x1, x27
   18418:	mov	x2, x28
   1841c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18420:	add	x29, x29, #0x1
   18424:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18428:	ldr	x1, [x22, #48]
   1842c:	ldp	w2, w3, [x22, #56]
   18430:	and	w4, w21, #0x1
   18434:	mov	x0, x24
   18438:	mov	x5, x20
   1843c:	bl	185e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   18440:	add	x29, x29, #0x1
   18444:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18448:	ldr	x0, [x22, #8]
   1844c:	mov	x1, x20
   18450:	bl	6884 <__sancov_default_options@plt+0x1f04>
   18454:	mov	x2, x0
   18458:	mov	x0, x24
   1845c:	mov	x1, x27
   18460:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18464:	add	x29, x29, #0x1
   18468:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   1846c:	ldr	x2, [x22, #16]
   18470:	b	1823c <__sanitizer_get_module_and_offset_for_pc@@Base+0x104>
   18474:	ldr	x2, [x22]
   18478:	tbnz	x2, #60, 184e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ac>
   1847c:	ldr	x0, [x22, #8]
   18480:	cbz	x0, 184ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b4>
   18484:	bl	68f4 <__sancov_default_options@plt+0x1f74>
   18488:	ldr	x28, [x22, #16]
   1848c:	ldr	w27, [x22, #24]
   18490:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18494:	add	x1, x1, #0x562
   18498:	bl	6884 <__sancov_default_options@plt+0x1f04>
   1849c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   184a0:	mov	x2, x0
   184a4:	mov	x0, x24
   184a8:	add	x1, x1, #0x706
   184ac:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   184b0:	cmp	w27, #0x8
   184b4:	b.hi	185c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x488>  // b.pmore
   184b8:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   184bc:	add	x10, x10, #0x667
   184c0:	adr	x8, 184d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a0>
   184c4:	ldrb	w9, [x10, x27]
   184c8:	add	x8, x8, x9, lsl #2
   184cc:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   184d0:	add	x2, x2, #0x716
   184d4:	br	x8
   184d8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   184dc:	add	x2, x2, #0x71b
   184e0:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   184e4:	add	x29, x29, #0x1
   184e8:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   184ec:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   184f0:	mov	x0, x24
   184f4:	add	x1, x1, #0x6b9
   184f8:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   184fc:	add	x29, x29, #0x1
   18500:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   18504:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18508:	mov	x0, x24
   1850c:	add	x1, x1, #0x6a6
   18510:	b	1829c <__sanitizer_get_module_and_offset_for_pc@@Base+0x164>
   18514:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18518:	add	x2, x2, #0x72a
   1851c:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   18520:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18524:	add	x2, x2, #0x722
   18528:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   1852c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18530:	add	x2, x2, #0x73d
   18534:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   18538:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1853c:	add	x2, x2, #0x730
   18540:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   18544:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18548:	add	x2, x2, #0x736
   1854c:	b	18558 <__sanitizer_get_module_and_offset_for_pc@@Base+0x420>
   18550:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18554:	add	x2, x2, #0xa4e
   18558:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1855c:	mov	x0, x24
   18560:	add	x1, x1, #0x70a
   18564:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18568:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1856c:	mov	x0, x24
   18570:	add	x1, x1, #0x70e
   18574:	mov	x2, x28
   18578:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1857c:	adrp	x27, 29000 <__interceptor_sigaction@@Base+0x6a44>
   18580:	add	x27, x27, #0x338
   18584:	add	x29, x29, #0x1
   18588:	b	1824c <__sanitizer_get_module_and_offset_for_pc@@Base+0x114>
   1858c:	ldp	x20, x19, [sp, #96]
   18590:	ldp	x22, x21, [sp, #80]
   18594:	ldp	x24, x23, [sp, #64]
   18598:	ldp	x26, x25, [sp, #48]
   1859c:	ldp	x28, x27, [sp, #32]
   185a0:	ldp	x29, x30, [sp, #16]
   185a4:	add	sp, sp, #0x70
   185a8:	ret
   185ac:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   185b0:	add	x0, x0, #0x6be
   185b4:	mov	w2, w1
   185b8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   185bc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   185c0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   185c4:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   185c8:	add	x0, x0, #0xbf8
   185cc:	add	x2, x2, #0x744
   185d0:	mov	w1, #0x2b8                 	// #696
   185d4:	mov	x3, xzr
   185d8:	mov	x4, xzr
   185dc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   185e0:	str	x30, [sp, #-48]!
   185e4:	stp	x22, x21, [sp, #16]
   185e8:	stp	x20, x19, [sp, #32]
   185ec:	mov	x19, x0
   185f0:	mov	x0, x1
   185f4:	mov	x1, x5
   185f8:	mov	w22, w4
   185fc:	mov	w20, w3
   18600:	mov	w21, w2
   18604:	bl	6884 <__sancov_default_options@plt+0x1f04>
   18608:	cmp	w21, #0x1
   1860c:	mov	x2, x0
   18610:	b.lt	18664 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c>  // b.tstop
   18614:	tbz	w22, #0, 18664 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52c>
   18618:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1861c:	add	x1, x1, #0x6f8
   18620:	mov	x0, x19
   18624:	mov	w3, w21
   18628:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1862c:	cmp	w20, #0x1
   18630:	b.lt	18648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x510>  // b.tstop
   18634:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18638:	add	x1, x1, #0x6fe
   1863c:	mov	x0, x19
   18640:	mov	w2, w20
   18644:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18648:	mov	x0, x19
   1864c:	ldp	x20, x19, [sp, #32]
   18650:	ldp	x22, x21, [sp, #16]
   18654:	adrp	x1, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   18658:	add	x1, x1, #0x1c7
   1865c:	ldr	x30, [sp], #48
   18660:	b	10088 <__sanitizer_on_print@@Base+0x188>
   18664:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   18668:	add	x1, x1, #0x338
   1866c:	mov	x0, x19
   18670:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18674:	cmp	w21, #0x1
   18678:	b.lt	186b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580>  // b.tstop
   1867c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18680:	add	x1, x1, #0x702
   18684:	mov	x0, x19
   18688:	mov	w2, w21
   1868c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18690:	cmp	w20, #0x1
   18694:	b.lt	186b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x580>  // b.tstop
   18698:	mov	x0, x19
   1869c:	mov	w2, w20
   186a0:	ldp	x20, x19, [sp, #32]
   186a4:	ldp	x22, x21, [sp, #16]
   186a8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   186ac:	add	x1, x1, #0x702
   186b0:	ldr	x30, [sp], #48
   186b4:	b	10088 <__sanitizer_on_print@@Base+0x188>
   186b8:	ldp	x20, x19, [sp, #32]
   186bc:	ldp	x22, x21, [sp, #16]
   186c0:	ldr	x30, [sp], #48
   186c4:	ret
   186c8:	stp	x30, x21, [sp, #-32]!
   186cc:	stp	x20, x19, [sp, #16]
   186d0:	mov	x20, x0
   186d4:	mov	x0, x1
   186d8:	mov	x1, x4
   186dc:	mov	w21, w3
   186e0:	mov	x19, x2
   186e4:	bl	6884 <__sancov_default_options@plt+0x1f04>
   186e8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   186ec:	mov	x2, x0
   186f0:	add	x1, x1, #0x706
   186f4:	mov	x0, x20
   186f8:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   186fc:	cmp	w21, #0x8
   18700:	b.hi	187a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x66c>  // b.pmore
   18704:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18708:	mov	w8, w21
   1870c:	add	x9, x9, #0x679
   18710:	adr	x10, 18728 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5f0>
   18714:	ldrb	w11, [x9, x8]
   18718:	add	x10, x10, x11, lsl #2
   1871c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18720:	add	x2, x2, #0x716
   18724:	br	x10
   18728:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1872c:	add	x2, x2, #0x71b
   18730:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   18734:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18738:	add	x2, x2, #0x72a
   1873c:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   18740:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18744:	add	x2, x2, #0x722
   18748:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   1874c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18750:	add	x2, x2, #0x73d
   18754:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   18758:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1875c:	add	x2, x2, #0x730
   18760:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   18764:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18768:	add	x2, x2, #0x736
   1876c:	b	18778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x640>
   18770:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18774:	add	x2, x2, #0xa4e
   18778:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1877c:	add	x1, x1, #0x70a
   18780:	mov	x0, x20
   18784:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18788:	mov	x0, x20
   1878c:	mov	x2, x19
   18790:	ldp	x20, x19, [sp, #16]
   18794:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18798:	add	x1, x1, #0x70e
   1879c:	ldp	x30, x21, [sp], #32
   187a0:	b	10088 <__sanitizer_on_print@@Base+0x188>
   187a4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   187a8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   187ac:	add	x0, x0, #0xbf8
   187b0:	add	x2, x2, #0x744
   187b4:	mov	w1, #0x2b8                 	// #696
   187b8:	mov	x3, xzr
   187bc:	mov	x4, xzr
   187c0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   187c4:	str	x30, [sp, #-80]!
   187c8:	stp	x26, x25, [sp, #16]
   187cc:	stp	x24, x23, [sp, #32]
   187d0:	stp	x22, x21, [sp, #48]
   187d4:	stp	x20, x19, [sp, #64]
   187d8:	adrp	x23, 28000 <__interceptor_sigaction@@Base+0x5a44>
   187dc:	adrp	x24, 29000 <__interceptor_sigaction@@Base+0x6a44>
   187e0:	adrp	x25, 28000 <__interceptor_sigaction@@Base+0x5a44>
   187e4:	adrp	x26, 28000 <__interceptor_sigaction@@Base+0x5a44>
   187e8:	mov	x19, x3
   187ec:	mov	x20, x2
   187f0:	mov	x21, x1
   187f4:	mov	x22, x0
   187f8:	add	x23, x23, #0x696
   187fc:	add	x24, x24, #0x338
   18800:	add	x25, x25, #0x6fb
   18804:	add	x26, x26, #0x693
   18808:	b	18820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   1880c:	ldr	x2, [x20, #32]
   18810:	mov	x0, x22
   18814:	mov	x1, x25
   18818:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1881c:	add	x21, x21, #0x1
   18820:	ldrb	w2, [x21]
   18824:	cmp	w2, #0x25
   18828:	b.eq	18844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x70c>  // b.none
   1882c:	cbz	w2, 188b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x778>
   18830:	mov	x0, x22
   18834:	mov	x1, x26
   18838:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1883c:	add	x21, x21, #0x1
   18840:	b	18820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   18844:	ldrb	w1, [x21, #1]!
   18848:	cmp	w1, #0x6b
   1884c:	b.gt	1886c <__sanitizer_get_module_and_offset_for_pc@@Base+0x734>
   18850:	cmp	w1, #0x25
   18854:	b.ne	18890 <__sanitizer_get_module_and_offset_for_pc@@Base+0x758>  // b.any
   18858:	mov	x0, x22
   1885c:	mov	x1, x23
   18860:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   18864:	add	x21, x21, #0x1
   18868:	b	18820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   1886c:	cmp	w1, #0x6c
   18870:	b.eq	1880c <__sanitizer_get_module_and_offset_for_pc@@Base+0x6d4>  // b.none
   18874:	cmp	w1, #0x73
   18878:	b.ne	188c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x790>  // b.any
   1887c:	ldr	x0, [x20, #24]
   18880:	mov	x1, x19
   18884:	bl	6884 <__sancov_default_options@plt+0x1f04>
   18888:	mov	x2, x0
   1888c:	b	1889c <__sanitizer_get_module_and_offset_for_pc@@Base+0x764>
   18890:	cmp	w1, #0x67
   18894:	b.ne	188c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x790>  // b.any
   18898:	ldr	x2, [x20, #40]
   1889c:	mov	x0, x22
   188a0:	mov	x1, x24
   188a4:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   188a8:	add	x21, x21, #0x1
   188ac:	b	18820 <__sanitizer_get_module_and_offset_for_pc@@Base+0x6e8>
   188b0:	ldp	x20, x19, [sp, #64]
   188b4:	ldp	x22, x21, [sp, #48]
   188b8:	ldp	x24, x23, [sp, #32]
   188bc:	ldp	x26, x25, [sp, #16]
   188c0:	ldr	x30, [sp], #80
   188c4:	ret
   188c8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   188cc:	add	x0, x0, #0x6be
   188d0:	mov	w2, w1
   188d4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   188d8:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   188dc:	stp	x30, x19, [sp, #-16]!
   188e0:	mov	w2, #0x40                  	// #64
   188e4:	mov	w1, wzr
   188e8:	mov	x19, x0
   188ec:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   188f0:	mov	x8, #0xffffffffffffffff    	// #-1
   188f4:	str	x8, [x19, #40]
   188f8:	ldp	x30, x19, [sp], #16
   188fc:	ret
   18900:	stp	x30, x19, [sp, #-16]!
   18904:	mov	x19, x0
   18908:	ldr	x0, [x0, #8]
   1890c:	mov	x1, xzr
   18910:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18914:	ldr	x0, [x19, #32]
   18918:	mov	x1, xzr
   1891c:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18920:	ldr	x0, [x19, #48]
   18924:	mov	x1, xzr
   18928:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   1892c:	mov	w2, #0x40                  	// #64
   18930:	mov	x0, x19
   18934:	mov	w1, wzr
   18938:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1893c:	mov	x8, #0xffffffffffffffff    	// #-1
   18940:	str	x8, [x19, #40]
   18944:	ldp	x30, x19, [sp], #16
   18948:	ret
   1894c:	stp	x30, x21, [sp, #-32]!
   18950:	stp	x20, x19, [sp, #16]
   18954:	mov	x21, x0
   18958:	mov	x0, x1
   1895c:	mov	w19, w3
   18960:	mov	x20, x2
   18964:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   18968:	stp	x0, x20, [x21, #8]
   1896c:	str	w19, [x21, #24]
   18970:	ldp	x20, x19, [sp, #16]
   18974:	ldp	x30, x21, [sp], #32
   18978:	ret
   1897c:	stp	x30, x19, [sp, #-16]!
   18980:	mov	x19, x0
   18984:	str	xzr, [x0], #8
   18988:	mov	w2, #0x40                  	// #64
   1898c:	mov	w1, wzr
   18990:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   18994:	mov	x8, #0xffffffffffffffff    	// #-1
   18998:	str	x8, [x19, #48]
   1899c:	ldp	x30, x19, [sp], #16
   189a0:	ret
   189a4:	str	x30, [sp, #-32]!
   189a8:	stp	x20, x19, [sp, #16]
   189ac:	mov	x19, x0
   189b0:	mov	w0, #0x48                  	// #72
   189b4:	mov	x1, xzr
   189b8:	mov	x2, xzr
   189bc:	bl	4b90 <__sancov_default_options@plt+0x210>
   189c0:	mov	x20, x0
   189c4:	str	xzr, [x0], #8
   189c8:	mov	w2, #0x40                  	// #64
   189cc:	mov	w1, wzr
   189d0:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   189d4:	mov	x8, #0xffffffffffffffff    	// #-1
   189d8:	str	x8, [x20, #48]
   189dc:	str	x19, [x20, #8]
   189e0:	mov	x0, x20
   189e4:	ldp	x20, x19, [sp, #16]
   189e8:	ldr	x30, [sp], #32
   189ec:	ret
   189f0:	str	x30, [sp, #-32]!
   189f4:	stp	x20, x19, [sp, #16]
   189f8:	mov	x19, x0
   189fc:	ldr	x0, [x0, #16]
   18a00:	mov	x1, xzr
   18a04:	add	x20, x19, #0x8
   18a08:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a0c:	ldr	x0, [x19, #40]
   18a10:	mov	x1, xzr
   18a14:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a18:	ldr	x0, [x19, #56]
   18a1c:	mov	x1, xzr
   18a20:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a24:	mov	w2, #0x40                  	// #64
   18a28:	mov	x0, x20
   18a2c:	mov	w1, wzr
   18a30:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   18a34:	ldr	x0, [x19]
   18a38:	mov	x8, #0xffffffffffffffff    	// #-1
   18a3c:	str	x8, [x19, #48]
   18a40:	cbz	x0, 18a48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x910>
   18a44:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   18a48:	mov	x0, x19
   18a4c:	ldp	x20, x19, [sp, #16]
   18a50:	mov	x1, xzr
   18a54:	ldr	x30, [sp], #32
   18a58:	b	4e74 <__sancov_default_options@plt+0x4f4>
   18a5c:	mov	w2, #0x40                  	// #64
   18a60:	mov	w1, wzr
   18a64:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   18a68:	stp	x30, x19, [sp, #-16]!
   18a6c:	mov	x19, x0
   18a70:	ldr	x0, [x0]
   18a74:	mov	x1, xzr
   18a78:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a7c:	ldr	x0, [x19, #24]
   18a80:	mov	x1, xzr
   18a84:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a88:	ldr	x0, [x19, #40]
   18a8c:	mov	x1, xzr
   18a90:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18a94:	mov	w2, #0x40                  	// #64
   18a98:	mov	x0, x19
   18a9c:	mov	w1, wzr
   18aa0:	ldp	x30, x19, [sp], #16
   18aa4:	b	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   18aa8:	stp	x30, x21, [sp, #-32]!
   18aac:	stp	x20, x19, [sp, #16]
   18ab0:	mov	x19, x0
   18ab4:	ldr	x0, [x0]
   18ab8:	mov	x1, xzr
   18abc:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18ac0:	ldr	x8, [x19, #40]
   18ac4:	cbz	x8, 18b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x9cc>
   18ac8:	ldr	x20, [x19, #24]
   18acc:	mov	w9, #0x38                  	// #56
   18ad0:	madd	x21, x8, x9, x20
   18ad4:	ldr	x0, [x20]
   18ad8:	mov	x1, xzr
   18adc:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18ae0:	ldr	x0, [x20, #8]
   18ae4:	mov	x1, xzr
   18ae8:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18aec:	ldr	x0, [x20, #16]
   18af0:	mov	x1, xzr
   18af4:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   18af8:	add	x20, x20, #0x38
   18afc:	cmp	x20, x21
   18b00:	b.ne	18ad4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x99c>  // b.any
   18b04:	str	xzr, [x19, #40]
   18b08:	ldp	x20, x19, [sp, #16]
   18b0c:	ldp	x30, x21, [sp], #32
   18b10:	ret
   18b14:	strb	wzr, [x0, #104]
   18b18:	ret
   18b1c:	str	x30, [sp, #-16]!
   18b20:	ldr	x8, [x0, #224]
   18b24:	cbnz	x8, 18b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa04>
   18b28:	ldr	x8, [x0, #232]
   18b2c:	cbnz	x8, 18b3c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa04>
   18b30:	stp	x1, x2, [x0, #224]
   18b34:	ldr	x30, [sp], #16
   18b38:	ret
   18b3c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18b40:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18b44:	add	x0, x0, #0x76a
   18b48:	add	x2, x2, #0x7c1
   18b4c:	mov	w1, #0x59                  	// #89
   18b50:	mov	x3, xzr
   18b54:	mov	x4, xzr
   18b58:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18b5c:	str	x30, [sp, #-48]!
   18b60:	stp	x22, x21, [sp, #16]
   18b64:	stp	x20, x19, [sp, #32]
   18b68:	mov	x19, x0
   18b6c:	ldr	x0, [x0, #32]
   18b70:	mov	x21, x1
   18b74:	bl	d6fc <__sanitizer_set_report_fd@@Base+0x3e48>
   18b78:	mov	x20, x19
   18b7c:	ldr	x0, [x20, #24]!
   18b80:	cbz	x0, 18b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa58>
   18b84:	mov	x1, x21
   18b88:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   18b8c:	cbz	w0, 18c14 <__sanitizer_get_module_and_offset_for_pc@@Base+0xadc>
   18b90:	ldr	x8, [x19, #16]
   18b94:	cbz	x8, 18bc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xa88>
   18b98:	mov	x22, xzr
   18b9c:	ldr	x8, [x19]
   18ba0:	mov	x1, x21
   18ba4:	ldr	x0, [x8, x22, lsl #3]
   18ba8:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   18bac:	cbz	w0, 18bec <__sanitizer_get_module_and_offset_for_pc@@Base+0xab4>
   18bb0:	ldr	x8, [x19, #16]
   18bb4:	add	x22, x22, #0x1
   18bb8:	cmp	x22, x8
   18bbc:	b.cc	18b9c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa64>  // b.lo, b.ul, b.last
   18bc0:	mov	x0, x21
   18bc4:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   18bc8:	str	x0, [x19, #24]
   18bcc:	mov	x0, x19
   18bd0:	mov	x1, x20
   18bd4:	bl	18cd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb98>
   18bd8:	ldr	x0, [x19, #24]
   18bdc:	ldp	x20, x19, [sp, #32]
   18be0:	ldp	x22, x21, [sp, #16]
   18be4:	ldr	x30, [sp], #48
   18be8:	ret
   18bec:	ldr	x4, [x19, #16]
   18bf0:	cmp	x4, x22
   18bf4:	b.ls	18c28 <__sanitizer_get_module_and_offset_for_pc@@Base+0xaf0>  // b.plast
   18bf8:	ldr	x8, [x19]
   18bfc:	ldr	x0, [x8, x22, lsl #3]
   18c00:	str	x0, [x19, #24]
   18c04:	ldp	x20, x19, [sp, #32]
   18c08:	ldp	x22, x21, [sp, #16]
   18c0c:	ldr	x30, [sp], #48
   18c10:	ret
   18c14:	ldr	x0, [x20]
   18c18:	ldp	x20, x19, [sp, #32]
   18c1c:	ldp	x22, x21, [sp, #16]
   18c20:	ldr	x30, [sp], #48
   18c24:	ret
   18c28:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18c2c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   18c30:	add	x0, x0, #0xbf8
   18c34:	add	x2, x2, #0x7fd
   18c38:	mov	w1, #0x1c5                 	// #453
   18c3c:	mov	x3, x22
   18c40:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18c44:	stp	x30, x21, [sp, #-32]!
   18c48:	stp	x20, x19, [sp, #16]
   18c4c:	mov	x19, x1
   18c50:	add	x21, x0, #0x70
   18c54:	movi	v0.2d, #0x0
   18c58:	mov	w1, #0x3e8                 	// #1000
   18c5c:	mov	x20, x0
   18c60:	str	xzr, [x0]
   18c64:	stur	q0, [x0, #8]
   18c68:	stp	xzr, x21, [x0, #24]
   18c6c:	bl	18dd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>
   18c70:	mov	x0, x21
   18c74:	strb	wzr, [x20, #64]
   18c78:	strb	wzr, [x20, #96]
   18c7c:	strb	wzr, [x20, #104]
   18c80:	bl	d5f4 <__sanitizer_set_report_fd@@Base+0x3d40>
   18c84:	ldr	q0, [x19]
   18c88:	ldr	x8, [x19, #16]
   18c8c:	stur	q0, [x20, #200]
   18c90:	movi	v0.2d, #0x0
   18c94:	str	x8, [x20, #216]
   18c98:	str	q0, [x20, #224]
   18c9c:	ldp	x20, x19, [sp, #16]
   18ca0:	ldp	x30, x21, [sp], #32
   18ca4:	ret
   18ca8:	str	x1, [x0]
   18cac:	ldr	x0, [x1, #224]
   18cb0:	cbz	x0, 18cb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb80>
   18cb4:	br	x0
   18cb8:	ret
   18cbc:	ldr	x8, [x0]
   18cc0:	ldr	x0, [x8, #232]
   18cc4:	cbz	x0, 18ccc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb94>
   18cc8:	br	x0
   18ccc:	ret
   18cd0:	str	x30, [sp, #-32]!
   18cd4:	stp	x20, x19, [sp, #16]
   18cd8:	ldp	x8, x3, [x0, #8]
   18cdc:	lsr	x4, x8, #3
   18ce0:	cmp	x3, x4
   18ce4:	b.hi	18d6c <__sanitizer_get_module_and_offset_for_pc@@Base+0xc34>  // b.pmore
   18ce8:	mov	x19, x0
   18cec:	mov	x20, x1
   18cf0:	b.ne	18d48 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc10>  // b.any
   18cf4:	adds	x3, x3, #0x1
   18cf8:	b.cs	18d84 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc4c>  // b.hs, b.nlast
   18cfc:	sub	x8, x3, #0x1
   18d00:	tst	x3, x8
   18d04:	b.ne	18d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0xbd8>  // b.any
   18d08:	mov	x8, x3
   18d0c:	b	18d38 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc00>
   18d10:	clz	x8, x3
   18d14:	eor	x9, x8, #0x3f
   18d18:	mov	w8, #0x2                   	// #2
   18d1c:	lsl	x8, x8, x9
   18d20:	cmp	x8, x3
   18d24:	b.ls	18da4 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc6c>  // b.plast
   18d28:	mov	w10, #0x1                   	// #1
   18d2c:	lsl	x4, x10, x9
   18d30:	cmp	x4, x3
   18d34:	b.cs	18dc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xc88>  // b.hs, b.nlast
   18d38:	mov	x0, x19
   18d3c:	mov	x1, x8
   18d40:	bl	18dd8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xca0>
   18d44:	ldr	x3, [x19, #16]
   18d48:	add	x9, x3, #0x1
   18d4c:	ldr	x8, [x19]
   18d50:	str	x9, [x19, #16]
   18d54:	mov	x1, x20
   18d58:	ldp	x20, x19, [sp, #16]
   18d5c:	add	x0, x8, x3, lsl #3
   18d60:	mov	w2, #0x8                   	// #8
   18d64:	ldr	x30, [sp], #32
   18d68:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   18d6c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18d70:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   18d74:	add	x0, x0, #0xbf8
   18d78:	add	x2, x2, #0x44f
   18d7c:	mov	w1, #0x1cd                 	// #461
   18d80:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18d84:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18d88:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   18d8c:	add	x0, x0, #0xbf8
   18d90:	add	x2, x2, #0x46b
   18d94:	mov	w1, #0x186                 	// #390
   18d98:	mov	x3, xzr
   18d9c:	mov	x4, xzr
   18da0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18da4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18da8:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   18dac:	add	x0, x0, #0xbf8
   18db0:	add	x2, x2, #0x47b
   18db4:	mov	w1, #0x18a                 	// #394
   18db8:	mov	x4, x8
   18dbc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18dc0:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18dc4:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   18dc8:	add	x0, x0, #0xbf8
   18dcc:	add	x2, x2, #0x49d
   18dd0:	mov	w1, #0x18b                 	// #395
   18dd4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18dd8:	stp	x30, x21, [sp, #-32]!
   18ddc:	stp	x20, x19, [sp, #16]
   18de0:	cbz	x1, 18e70 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd38>
   18de4:	ldr	x3, [x0, #16]
   18de8:	mov	x20, x1
   18dec:	mov	x19, x0
   18df0:	cmp	x3, x1
   18df4:	b.hi	18e90 <__sanitizer_get_module_and_offset_for_pc@@Base+0xd58>  // b.pmore
   18df8:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   18dfc:	ldr	x21, [x21, #4016]
   18e00:	ldr	x0, [x21]
   18e04:	cbnz	x0, 18e10 <__sanitizer_get_module_and_offset_for_pc@@Base+0xcd8>
   18e08:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   18e0c:	str	x0, [x21]
   18e10:	sub	x8, x0, #0x1
   18e14:	tst	x0, x8
   18e18:	b.ne	18eac <__sanitizer_get_module_and_offset_for_pc@@Base+0xd74>  // b.any
   18e1c:	lsl	x8, x20, #3
   18e20:	add	x8, x8, x0
   18e24:	sub	x8, x8, #0x1
   18e28:	neg	x9, x0
   18e2c:	and	x20, x8, x9
   18e30:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   18e34:	add	x1, x1, #0x2c0
   18e38:	mov	x0, x20
   18e3c:	mov	w2, wzr
   18e40:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   18e44:	ldr	x8, [x19, #16]
   18e48:	ldr	x1, [x19]
   18e4c:	mov	x21, x0
   18e50:	lsl	x2, x8, #3
   18e54:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   18e58:	ldp	x0, x1, [x19]
   18e5c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   18e60:	stp	x21, x20, [x19]
   18e64:	ldp	x20, x19, [sp, #16]
   18e68:	ldp	x30, x21, [sp], #32
   18e6c:	ret
   18e70:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18e74:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   18e78:	add	x0, x0, #0xbf8
   18e7c:	add	x2, x2, #0x289
   18e80:	mov	w1, #0x20b                 	// #523
   18e84:	mov	x3, xzr
   18e88:	mov	x4, xzr
   18e8c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18e90:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   18e94:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   18e98:	add	x0, x0, #0xbf8
   18e9c:	add	x2, x2, #0x2a2
   18ea0:	mov	w1, #0x20c                 	// #524
   18ea4:	mov	x4, x20
   18ea8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18eac:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   18eb0:	add	x0, x0, #0x121
   18eb4:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   18eb8:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   18ebc:	mov	x0, xzr
   18ec0:	ret
   18ec4:	mov	w0, wzr
   18ec8:	ret
   18ecc:	mov	w0, wzr
   18ed0:	ret
   18ed4:	mov	x0, xzr
   18ed8:	ret
   18edc:	mov	w0, wzr
   18ee0:	ret
   18ee4:	ret
   18ee8:	str	x30, [sp, #-32]!
   18eec:	stp	x20, x19, [sp, #16]
   18ef0:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   18ef4:	ldr	x19, [x19, #3968]
   18ef8:	mov	w8, #0x1                   	// #1
   18efc:	ldaxrb	w9, [x19]
   18f00:	stlxrb	w10, w8, [x19]
   18f04:	cbnz	w10, 18efc <__sanitizer_get_module_and_offset_for_pc@@Base+0xdc4>
   18f08:	cbz	w9, 18f18 <__sanitizer_get_module_and_offset_for_pc@@Base+0xde0>
   18f0c:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   18f10:	ldr	x0, [x0, #3968]
   18f14:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   18f18:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   18f1c:	ldr	x20, [x20, #3920]
   18f20:	ldr	x0, [x20]
   18f24:	cbnz	x0, 18f34 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdfc>
   18f28:	bl	1add4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c9c>
   18f2c:	str	x0, [x20]
   18f30:	cbz	x0, 18f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0xe10>
   18f34:	dmb	ish
   18f38:	strb	wzr, [x19]
   18f3c:	ldp	x20, x19, [sp, #16]
   18f40:	ldr	x30, [sp], #32
   18f44:	ret
   18f48:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18f4c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   18f50:	add	x0, x0, #0x7f8
   18f54:	add	x2, x2, #0x857
   18f58:	mov	w1, #0x18                  	// #24
   18f5c:	mov	x3, xzr
   18f60:	mov	x4, xzr
   18f64:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   18f68:	stp	x30, x21, [sp, #-32]!
   18f6c:	stp	x20, x19, [sp, #16]
   18f70:	mov	x19, x2
   18f74:	mov	x20, x0
   18f78:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   18f7c:	mov	x21, x0
   18f80:	add	x0, x0, #0x1
   18f84:	mov	x1, xzr
   18f88:	mov	x2, xzr
   18f8c:	bl	4b90 <__sancov_default_options@plt+0x210>
   18f90:	mov	x1, x20
   18f94:	mov	x2, x21
   18f98:	str	x0, [x19]
   18f9c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   18fa0:	ldr	x8, [x19]
   18fa4:	add	x9, x20, x21
   18fa8:	strb	wzr, [x8, x21]
   18fac:	mov	x8, x9
   18fb0:	ldrb	w10, [x8], #1
   18fb4:	ldp	x20, x19, [sp, #16]
   18fb8:	cmp	w10, #0x0
   18fbc:	csel	x0, x9, x8, eq  // eq = none
   18fc0:	ldp	x30, x21, [sp], #32
   18fc4:	ret
   18fc8:	str	x30, [sp, #-48]!
   18fcc:	stp	x22, x21, [sp, #16]
   18fd0:	stp	x20, x19, [sp, #32]
   18fd4:	mov	x19, x2
   18fd8:	mov	x21, x0
   18fdc:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   18fe0:	mov	x22, x0
   18fe4:	add	x0, x0, #0x1
   18fe8:	mov	x1, xzr
   18fec:	mov	x2, xzr
   18ff0:	bl	4b90 <__sancov_default_options@plt+0x210>
   18ff4:	mov	x1, x21
   18ff8:	mov	x2, x22
   18ffc:	mov	x20, x0
   19000:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19004:	add	x8, x21, x22
   19008:	strb	wzr, [x20, x22]
   1900c:	mov	x9, x8
   19010:	ldrb	w10, [x9], #1
   19014:	cmp	w10, #0x0
   19018:	csel	x21, x8, x9, eq  // eq = none
   1901c:	cbz	x20, 1902c <__sanitizer_get_module_and_offset_for_pc@@Base+0xef4>
   19020:	mov	x0, x20
   19024:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19028:	str	w0, [x19]
   1902c:	mov	x0, x20
   19030:	mov	x1, xzr
   19034:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   19038:	mov	x0, x21
   1903c:	ldp	x20, x19, [sp, #32]
   19040:	ldp	x22, x21, [sp, #16]
   19044:	ldr	x30, [sp], #48
   19048:	ret
   1904c:	str	x30, [sp, #-48]!
   19050:	stp	x22, x21, [sp, #16]
   19054:	stp	x20, x19, [sp, #32]
   19058:	mov	x19, x2
   1905c:	mov	x21, x0
   19060:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19064:	mov	x22, x0
   19068:	add	x0, x0, #0x1
   1906c:	mov	x1, xzr
   19070:	mov	x2, xzr
   19074:	bl	4b90 <__sancov_default_options@plt+0x210>
   19078:	mov	x1, x21
   1907c:	mov	x2, x22
   19080:	mov	x20, x0
   19084:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19088:	add	x8, x21, x22
   1908c:	strb	wzr, [x20, x22]
   19090:	mov	x9, x8
   19094:	ldrb	w10, [x9], #1
   19098:	cmp	w10, #0x0
   1909c:	csel	x21, x8, x9, eq  // eq = none
   190a0:	cbz	x20, 190b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0xf78>
   190a4:	mov	x0, x20
   190a8:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   190ac:	str	x0, [x19]
   190b0:	mov	x0, x20
   190b4:	mov	x1, xzr
   190b8:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   190bc:	mov	x0, x21
   190c0:	ldp	x20, x19, [sp, #32]
   190c4:	ldp	x22, x21, [sp, #16]
   190c8:	ldr	x30, [sp], #48
   190cc:	ret
   190d0:	str	x30, [sp, #-48]!
   190d4:	stp	x22, x21, [sp, #16]
   190d8:	stp	x20, x19, [sp, #32]
   190dc:	mov	x19, x2
   190e0:	mov	x21, x0
   190e4:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   190e8:	mov	x22, x0
   190ec:	add	x0, x0, #0x1
   190f0:	mov	x1, xzr
   190f4:	mov	x2, xzr
   190f8:	bl	4b90 <__sancov_default_options@plt+0x210>
   190fc:	mov	x1, x21
   19100:	mov	x2, x22
   19104:	mov	x20, x0
   19108:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1910c:	add	x8, x21, x22
   19110:	strb	wzr, [x20, x22]
   19114:	mov	x9, x8
   19118:	ldrb	w10, [x9], #1
   1911c:	cmp	w10, #0x0
   19120:	csel	x21, x8, x9, eq  // eq = none
   19124:	cbz	x20, 19134 <__sanitizer_get_module_and_offset_for_pc@@Base+0xffc>
   19128:	mov	x0, x20
   1912c:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19130:	str	x0, [x19]
   19134:	mov	x0, x20
   19138:	mov	x1, xzr
   1913c:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   19140:	mov	x0, x21
   19144:	ldp	x20, x19, [sp, #32]
   19148:	ldp	x22, x21, [sp, #16]
   1914c:	ldr	x30, [sp], #48
   19150:	ret
   19154:	str	x30, [sp, #-48]!
   19158:	stp	x22, x21, [sp, #16]
   1915c:	stp	x20, x19, [sp, #32]
   19160:	mov	x21, x2
   19164:	mov	x19, x1
   19168:	mov	x20, x0
   1916c:	bl	c704 <__sanitizer_set_report_fd@@Base+0x2e50>
   19170:	cbz	x0, 1917c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1044>
   19174:	sub	x22, x0, x20
   19178:	b	19188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1050>
   1917c:	mov	x0, x20
   19180:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   19184:	mov	x22, x0
   19188:	add	x0, x22, #0x1
   1918c:	mov	x1, xzr
   19190:	mov	x2, xzr
   19194:	bl	4b90 <__sancov_default_options@plt+0x210>
   19198:	mov	x1, x20
   1919c:	mov	x2, x22
   191a0:	str	x0, [x21]
   191a4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   191a8:	ldr	x8, [x21]
   191ac:	add	x20, x20, x22
   191b0:	strb	wzr, [x8, x22]
   191b4:	ldrb	w8, [x20]
   191b8:	cbz	w8, 191c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1090>
   191bc:	mov	x0, x19
   191c0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   191c4:	add	x20, x20, x0
   191c8:	mov	x0, x20
   191cc:	ldp	x20, x19, [sp, #32]
   191d0:	ldp	x22, x21, [sp, #16]
   191d4:	ldr	x30, [sp], #48
   191d8:	ret
   191dc:	str	x30, [sp, #-64]!
   191e0:	stp	x24, x23, [sp, #16]
   191e4:	stp	x22, x21, [sp, #32]
   191e8:	stp	x20, x19, [sp, #48]
   191ec:	add	x19, x0, #0x70
   191f0:	mov	x21, x0
   191f4:	mov	x0, x19
   191f8:	mov	x20, x1
   191fc:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   19200:	mov	x0, x20
   19204:	bl	189a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   19208:	mov	x22, x0
   1920c:	mov	x0, x21
   19210:	mov	x1, x20
   19214:	bl	195fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   19218:	cbz	x0, 19274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   1921c:	ldp	x1, x8, [x0]
   19220:	ldr	w3, [x0, #24]
   19224:	add	x0, x22, #0x8
   19228:	sub	x2, x20, x8
   1922c:	bl	1894c <__sanitizer_get_module_and_offset_for_pc@@Base+0x814>
   19230:	ldr	x23, [x21, #208]
   19234:	cbz	x23, 19274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   19238:	add	x0, sp, #0x8
   1923c:	mov	x1, x21
   19240:	bl	18ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   19244:	ldr	x8, [x23]
   19248:	mov	x0, x23
   1924c:	mov	x1, x20
   19250:	mov	x2, x22
   19254:	ldr	x8, [x8]
   19258:	blr	x8
   1925c:	mov	w24, w0
   19260:	add	x0, sp, #0x8
   19264:	bl	18cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   19268:	tbnz	w24, #0, 19274 <__sanitizer_get_module_and_offset_for_pc@@Base+0x113c>
   1926c:	ldr	x23, [x23, #8]
   19270:	cbnz	x23, 19238 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1100>
   19274:	mov	x0, x19
   19278:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   1927c:	mov	x0, x22
   19280:	ldp	x20, x19, [sp, #48]
   19284:	ldp	x22, x21, [sp, #32]
   19288:	ldp	x24, x23, [sp, #16]
   1928c:	ldr	x30, [sp], #64
   19290:	ret
   19294:	str	x30, [sp, #-48]!
   19298:	stp	x22, x21, [sp, #16]
   1929c:	stp	x20, x19, [sp, #32]
   192a0:	mov	x19, x4
   192a4:	mov	x20, x3
   192a8:	mov	x22, x2
   192ac:	mov	x21, x1
   192b0:	bl	195fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   192b4:	cbz	x0, 192d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x11a0>
   192b8:	ldr	x8, [x0]
   192bc:	str	x8, [x22]
   192c0:	ldr	x8, [x0, #8]
   192c4:	sub	x8, x21, x8
   192c8:	str	x8, [x20]
   192cc:	ldr	w8, [x0, #24]
   192d0:	mov	w0, #0x1                   	// #1
   192d4:	str	w8, [x19]
   192d8:	ldp	x20, x19, [sp, #32]
   192dc:	ldp	x22, x21, [sp, #16]
   192e0:	ldr	x30, [sp], #48
   192e4:	ret
   192e8:	sub	sp, sp, #0x50
   192ec:	stp	x30, x25, [sp, #16]
   192f0:	stp	x24, x23, [sp, #32]
   192f4:	stp	x22, x21, [sp, #48]
   192f8:	stp	x20, x19, [sp, #64]
   192fc:	add	x19, x0, #0x70
   19300:	mov	x22, x0
   19304:	mov	x0, x19
   19308:	mov	x20, x2
   1930c:	mov	x21, x1
   19310:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   19314:	mov	x0, x22
   19318:	mov	x1, x21
   1931c:	bl	195fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   19320:	cbz	x0, 19394 <__sanitizer_get_module_and_offset_for_pc@@Base+0x125c>
   19324:	ldp	x23, x8, [x0]
   19328:	ldr	w24, [x0, #24]
   1932c:	mov	x0, x20
   19330:	sub	x25, x21, x8
   19334:	bl	18a68 <__sanitizer_get_module_and_offset_for_pc@@Base+0x930>
   19338:	mov	x0, x23
   1933c:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   19340:	stp	x0, x25, [x20]
   19344:	str	w24, [x20, #16]
   19348:	ldr	x23, [x22, #208]
   1934c:	cbz	x23, 1938c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1254>
   19350:	add	x0, sp, #0x8
   19354:	mov	x1, x22
   19358:	bl	18ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   1935c:	ldr	x8, [x23]
   19360:	mov	x0, x23
   19364:	mov	x1, x21
   19368:	mov	x2, x20
   1936c:	ldr	x8, [x8, #8]
   19370:	blr	x8
   19374:	mov	w24, w0
   19378:	add	x0, sp, #0x8
   1937c:	bl	18cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   19380:	tbnz	w24, #0, 1938c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1254>
   19384:	ldr	x23, [x23, #8]
   19388:	cbnz	x23, 19350 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1218>
   1938c:	mov	w20, #0x1                   	// #1
   19390:	b	19398 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1260>
   19394:	mov	w20, wzr
   19398:	mov	x0, x19
   1939c:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   193a0:	mov	w0, w20
   193a4:	ldp	x20, x19, [sp, #64]
   193a8:	ldp	x22, x21, [sp, #48]
   193ac:	ldp	x24, x23, [sp, #32]
   193b0:	ldp	x30, x25, [sp, #16]
   193b4:	add	sp, sp, #0x50
   193b8:	ret
   193bc:	str	x30, [sp, #-64]!
   193c0:	stp	x24, x23, [sp, #16]
   193c4:	stp	x22, x21, [sp, #32]
   193c8:	stp	x20, x19, [sp, #48]
   193cc:	add	x19, x0, #0x70
   193d0:	mov	x22, x0
   193d4:	mov	x0, x19
   193d8:	mov	x20, x2
   193dc:	mov	x21, x1
   193e0:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   193e4:	mov	x0, x22
   193e8:	mov	x1, x21
   193ec:	bl	195fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   193f0:	cbz	x0, 19460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1328>
   193f4:	ldp	x8, x9, [x0]
   193f8:	sub	x9, x21, x9
   193fc:	str	x9, [x20, #8]
   19400:	ldr	w9, [x0, #24]
   19404:	mov	x0, x8
   19408:	str	w9, [x20, #16]
   1940c:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   19410:	str	x0, [x20]
   19414:	ldr	x23, [x22, #208]
   19418:	cbz	x23, 19458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>
   1941c:	add	x0, sp, #0x8
   19420:	mov	x1, x22
   19424:	bl	18ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   19428:	ldr	x8, [x23]
   1942c:	mov	x0, x23
   19430:	mov	x1, x21
   19434:	mov	x2, x20
   19438:	ldr	x8, [x8, #16]
   1943c:	blr	x8
   19440:	mov	w24, w0
   19444:	add	x0, sp, #0x8
   19448:	bl	18cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   1944c:	tbnz	w24, #0, 19458 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1320>
   19450:	ldr	x23, [x23, #8]
   19454:	cbnz	x23, 1941c <__sanitizer_get_module_and_offset_for_pc@@Base+0x12e4>
   19458:	mov	w20, #0x1                   	// #1
   1945c:	b	19464 <__sanitizer_get_module_and_offset_for_pc@@Base+0x132c>
   19460:	mov	w20, wzr
   19464:	mov	x0, x19
   19468:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   1946c:	mov	w0, w20
   19470:	ldp	x20, x19, [sp, #48]
   19474:	ldp	x22, x21, [sp, #32]
   19478:	ldp	x24, x23, [sp, #16]
   1947c:	ldr	x30, [sp], #64
   19480:	ret
   19484:	stp	x30, x23, [sp, #-48]!
   19488:	stp	x22, x21, [sp, #16]
   1948c:	stp	x20, x19, [sp, #32]
   19490:	add	x19, x0, #0x70
   19494:	mov	x21, x0
   19498:	mov	x0, x19
   1949c:	mov	x22, x3
   194a0:	mov	x20, x2
   194a4:	mov	x23, x1
   194a8:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   194ac:	mov	x0, x21
   194b0:	mov	x1, x23
   194b4:	bl	195fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14c4>
   194b8:	cbz	x0, 194e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a8>
   194bc:	ldp	x1, x8, [x0]
   194c0:	sub	x8, x23, x8
   194c4:	str	x8, [x22]
   194c8:	cbz	x20, 194d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13a0>
   194cc:	mov	x0, x21
   194d0:	bl	18b5c <__sanitizer_get_module_and_offset_for_pc@@Base+0xa24>
   194d4:	str	x0, [x20]
   194d8:	mov	w20, #0x1                   	// #1
   194dc:	b	194e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13ac>
   194e0:	mov	w20, wzr
   194e4:	mov	x0, x19
   194e8:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   194ec:	mov	w0, w20
   194f0:	ldp	x20, x19, [sp, #32]
   194f4:	ldp	x22, x21, [sp, #16]
   194f8:	ldp	x30, x23, [sp], #48
   194fc:	ret
   19500:	sub	sp, sp, #0x30
   19504:	stp	x30, x21, [sp, #16]
   19508:	stp	x20, x19, [sp, #32]
   1950c:	add	x19, x0, #0x70
   19510:	mov	x20, x0
   19514:	mov	x0, x19
   19518:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   1951c:	ldr	x21, [x20, #208]
   19520:	cbz	x21, 19550 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1418>
   19524:	add	x0, sp, #0x8
   19528:	mov	x1, x20
   1952c:	bl	18ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   19530:	ldr	x8, [x21]
   19534:	mov	x0, x21
   19538:	ldr	x8, [x8, #24]
   1953c:	blr	x8
   19540:	add	x0, sp, #0x8
   19544:	bl	18cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   19548:	ldr	x21, [x21, #8]
   1954c:	cbnz	x21, 19524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x13ec>
   19550:	mov	x0, x19
   19554:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   19558:	ldp	x20, x19, [sp, #32]
   1955c:	ldp	x30, x21, [sp, #16]
   19560:	add	sp, sp, #0x30
   19564:	ret
   19568:	sub	sp, sp, #0x40
   1956c:	stp	x30, x23, [sp, #16]
   19570:	stp	x22, x21, [sp, #32]
   19574:	stp	x20, x19, [sp, #48]
   19578:	add	x19, x0, #0x70
   1957c:	mov	x21, x0
   19580:	mov	x0, x19
   19584:	mov	x20, x1
   19588:	bl	d600 <__sanitizer_set_report_fd@@Base+0x3d4c>
   1958c:	ldr	x22, [x21, #208]
   19590:	cbz	x22, 195cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x1494>
   19594:	add	x0, sp, #0x8
   19598:	mov	x1, x21
   1959c:	bl	18ca8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb70>
   195a0:	ldr	x8, [x22]
   195a4:	mov	x0, x22
   195a8:	mov	x1, x20
   195ac:	ldr	x8, [x8, #32]
   195b0:	blr	x8
   195b4:	mov	x23, x0
   195b8:	add	x0, sp, #0x8
   195bc:	bl	18cbc <__sanitizer_get_module_and_offset_for_pc@@Base+0xb84>
   195c0:	cbnz	x23, 195dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x14a4>
   195c4:	ldr	x22, [x22, #8]
   195c8:	cbnz	x22, 19594 <__sanitizer_get_module_and_offset_for_pc@@Base+0x145c>
   195cc:	mov	x0, x21
   195d0:	mov	x1, x20
   195d4:	bl	1ad2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bf4>
   195d8:	mov	x23, x0
   195dc:	mov	x0, x19
   195e0:	bl	d690 <__sanitizer_set_report_fd@@Base+0x3ddc>
   195e4:	mov	x0, x23
   195e8:	ldp	x20, x19, [sp, #48]
   195ec:	ldp	x22, x21, [sp, #32]
   195f0:	ldp	x30, x23, [sp, #16]
   195f4:	add	sp, sp, #0x40
   195f8:	ret
   195fc:	stp	x30, x25, [sp, #-64]!
   19600:	stp	x24, x23, [sp, #16]
   19604:	stp	x22, x21, [sp, #32]
   19608:	stp	x20, x19, [sp, #48]
   1960c:	ldrb	w8, [x0, #104]
   19610:	mov	x19, x0
   19614:	mov	x20, x1
   19618:	cbz	w8, 19634 <__sanitizer_get_module_and_offset_for_pc@@Base+0x14fc>
   1961c:	mov	x23, x19
   19620:	ldr	x8, [x23, #56]!
   19624:	sub	x21, x23, #0x10
   19628:	cbz	x8, 196b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1578>
   1962c:	mov	w24, wzr
   19630:	b	1965c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1524>
   19634:	add	x21, x19, #0x28
   19638:	mov	x0, x21
   1963c:	bl	13ffc <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   19640:	add	x0, x19, #0x48
   19644:	bl	14250 <__sanitizer_sandbox_on_notify@@Base+0x720>
   19648:	ldr	x8, [x19, #56]
   1964c:	cbz	x8, 19788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>
   19650:	mov	w24, #0x1                   	// #1
   19654:	strb	w24, [x19, #104]
   19658:	add	x23, x19, #0x38
   1965c:	mov	x25, xzr
   19660:	mov	x22, xzr
   19664:	ldr	x8, [x19, #40]
   19668:	mov	x1, x20
   1966c:	add	x0, x8, x25
   19670:	bl	6d38 <__sanitizer_report_error_summary@@Base+0x350>
   19674:	tbnz	w0, #0, 19690 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1558>
   19678:	ldr	x8, [x23]
   1967c:	add	x22, x22, #0x1
   19680:	add	x25, x25, #0x48
   19684:	cmp	x22, x8
   19688:	b.cc	19664 <__sanitizer_get_module_and_offset_for_pc@@Base+0x152c>  // b.lo, b.ul, b.last
   1968c:	b	196ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1574>
   19690:	ldr	x4, [x23]
   19694:	cmp	x4, x22
   19698:	b.ls	19798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>  // b.plast
   1969c:	ldr	x8, [x19, #40]
   196a0:	cbz	x8, 196ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x1574>
   196a4:	add	x0, x8, x25
   196a8:	b	19774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   196ac:	tbnz	w24, #0, 19720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   196b0:	mov	x0, x21
   196b4:	bl	13ffc <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   196b8:	add	x0, x19, #0x48
   196bc:	bl	14250 <__sanitizer_sandbox_on_notify@@Base+0x720>
   196c0:	ldr	x8, [x19, #56]
   196c4:	cbz	x8, 19788 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1650>
   196c8:	mov	x24, xzr
   196cc:	mov	x22, xzr
   196d0:	mov	w8, #0x1                   	// #1
   196d4:	strb	w8, [x19, #104]
   196d8:	ldr	x8, [x21]
   196dc:	mov	x1, x20
   196e0:	add	x0, x8, x24
   196e4:	bl	6d38 <__sanitizer_report_error_summary@@Base+0x350>
   196e8:	tbnz	w0, #0, 19704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15cc>
   196ec:	ldr	x8, [x23]
   196f0:	add	x22, x22, #0x1
   196f4:	add	x24, x24, #0x48
   196f8:	cmp	x22, x8
   196fc:	b.cc	196d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15a0>  // b.lo, b.ul, b.last
   19700:	b	19720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   19704:	ldr	x4, [x23]
   19708:	cmp	x4, x22
   1970c:	b.ls	19798 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1660>  // b.plast
   19710:	ldr	x8, [x21]
   19714:	cbz	x8, 19720 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15e8>
   19718:	add	x0, x8, x24
   1971c:	b	19774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   19720:	ldr	x8, [x19, #88]
   19724:	cbz	x8, 19758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1620>
   19728:	mov	x22, xzr
   1972c:	mov	x21, xzr
   19730:	ldr	x8, [x19, #72]
   19734:	mov	x1, x20
   19738:	add	x0, x8, x22
   1973c:	bl	6d38 <__sanitizer_report_error_summary@@Base+0x350>
   19740:	tbnz	w0, #0, 19760 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1628>
   19744:	ldr	x8, [x19, #88]
   19748:	add	x21, x21, #0x1
   1974c:	add	x22, x22, #0x48
   19750:	cmp	x21, x8
   19754:	b.cc	19730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x15f8>  // b.lo, b.ul, b.last
   19758:	mov	x0, xzr
   1975c:	b	19774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x163c>
   19760:	ldr	x4, [x19, #88]
   19764:	cmp	x4, x21
   19768:	b.ls	197b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x167c>  // b.plast
   1976c:	ldr	x8, [x19, #72]
   19770:	add	x0, x8, x22
   19774:	ldp	x20, x19, [sp, #48]
   19778:	ldp	x22, x21, [sp, #32]
   1977c:	ldp	x24, x23, [sp, #16]
   19780:	ldp	x30, x25, [sp], #64
   19784:	ret
   19788:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1978c:	add	x0, x0, #0x86e
   19790:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   19794:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   19798:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1979c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   197a0:	add	x0, x0, #0xbf8
   197a4:	add	x2, x2, #0xa23
   197a8:	mov	w1, #0x308                 	// #776
   197ac:	mov	x3, x22
   197b0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   197b4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   197b8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   197bc:	add	x0, x0, #0xbf8
   197c0:	add	x2, x2, #0xa23
   197c4:	mov	w1, #0x308                 	// #776
   197c8:	mov	x3, x21
   197cc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   197d0:	stp	x30, x19, [sp, #-16]!
   197d4:	mov	x19, x0
   197d8:	add	x0, x0, #0x28
   197dc:	bl	13ffc <__sanitizer_sandbox_on_notify@@Base+0x4cc>
   197e0:	add	x0, x19, #0x48
   197e4:	bl	14250 <__sanitizer_sandbox_on_notify@@Base+0x720>
   197e8:	ldr	x8, [x19, #56]
   197ec:	cbz	x8, 19800 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16c8>
   197f0:	mov	w8, #0x1                   	// #1
   197f4:	strb	w8, [x19, #104]
   197f8:	ldp	x30, x19, [sp], #16
   197fc:	ret
   19800:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19804:	add	x0, x0, #0x86e
   19808:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1980c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   19810:	str	x30, [sp, #-32]!
   19814:	stp	x20, x19, [sp, #16]
   19818:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1981c:	add	x8, x8, #0x908
   19820:	mov	x20, x1
   19824:	mov	x19, x0
   19828:	stp	x8, xzr, [x0]
   1982c:	mov	w1, #0x4028                	// #16424
   19830:	mov	x0, x2
   19834:	bl	501c <__sancov_default_options@plt+0x69c>
   19838:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1983c:	ldr	x9, [x9, #4008]
   19840:	mov	w8, #0x4020                	// #16416
   19844:	movi	v0.2d, #0xffffffffffffffff
   19848:	add	x8, x0, x8
   1984c:	add	x9, x9, #0x10
   19850:	str	xzr, [x0, #16408]
   19854:	str	d0, [x0, #16]
   19858:	stp	x9, x20, [x0]
   1985c:	strh	wzr, [x8]
   19860:	strb	wzr, [x8, #2]
   19864:	cbz	x20, 1988c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1754>
   19868:	ldrb	w8, [x20]
   1986c:	cbz	w8, 198a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x176c>
   19870:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   19874:	add	x8, x8, #0x940
   19878:	str	x8, [x0]
   1987c:	str	x0, [x19, #16]
   19880:	ldp	x20, x19, [sp, #16]
   19884:	ldr	x30, [sp], #32
   19888:	ret
   1988c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19890:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19894:	add	x0, x0, #0x7f8
   19898:	add	x2, x2, #0x908
   1989c:	mov	w1, #0x1d0                 	// #464
   198a0:	b	198b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1780>
   198a4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   198a8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   198ac:	add	x0, x0, #0x7f8
   198b0:	add	x2, x2, #0x919
   198b4:	mov	w1, #0x1d1                 	// #465
   198b8:	mov	x3, xzr
   198bc:	mov	x4, xzr
   198c0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   198c4:	str	x30, [sp, #-80]!
   198c8:	stp	x26, x25, [sp, #16]
   198cc:	stp	x24, x23, [sp, #32]
   198d0:	stp	x22, x21, [sp, #48]
   198d4:	stp	x20, x19, [sp, #64]
   198d8:	adrp	x20, 28000 <__interceptor_sigaction@@Base+0x5a44>
   198dc:	adrp	x21, 28000 <__interceptor_sigaction@@Base+0x5a44>
   198e0:	mov	x19, x1
   198e4:	mov	x22, x0
   198e8:	mov	w26, #0x1                   	// #1
   198ec:	add	x20, x20, #0x561
   198f0:	add	x21, x21, #0x89b
   198f4:	mov	x25, x1
   198f8:	mov	x0, x22
   198fc:	mov	x1, x20
   19900:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19904:	mov	x23, x0
   19908:	add	x0, x0, #0x1
   1990c:	mov	x1, xzr
   19910:	mov	x2, xzr
   19914:	bl	4b90 <__sancov_default_options@plt+0x210>
   19918:	mov	x1, x22
   1991c:	mov	x2, x23
   19920:	mov	x24, x0
   19924:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19928:	add	x8, x22, x23
   1992c:	strb	wzr, [x24, x23]
   19930:	mov	x9, x8
   19934:	ldrb	w10, [x9], #1
   19938:	cmp	w10, #0x0
   1993c:	csel	x22, x8, x9, eq  // eq = none
   19940:	cbz	x24, 19a00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18c8>
   19944:	ldrb	w8, [x24]
   19948:	cbz	w8, 199e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18a8>
   1994c:	tbz	w26, #0, 19958 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1820>
   19950:	mov	x23, x19
   19954:	b	1997c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1844>
   19958:	ldr	x0, [x19, #8]
   1995c:	bl	189a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x86c>
   19960:	ldp	x1, x2, [x19, #16]
   19964:	ldr	w3, [x19, #32]
   19968:	mov	x23, x0
   1996c:	add	x0, x0, #0x8
   19970:	bl	1894c <__sanitizer_get_module_and_offset_for_pc@@Base+0x814>
   19974:	str	x23, [x25]
   19978:	mov	x25, x23
   1997c:	add	x0, x23, #0x8
   19980:	mov	x1, x22
   19984:	str	x24, [x23, #40]
   19988:	bl	19a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   1998c:	ldr	x8, [x23, #40]
   19990:	mov	x22, x0
   19994:	mov	x1, x21
   19998:	mov	x0, x8
   1999c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   199a0:	cbnz	w0, 199b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x187c>
   199a4:	ldr	x0, [x23, #40]
   199a8:	mov	x1, xzr
   199ac:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   199b0:	str	xzr, [x23, #40]
   199b4:	ldr	x0, [x23, #56]
   199b8:	mov	x1, x21
   199bc:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   199c0:	mov	w26, wzr
   199c4:	cbnz	w0, 198f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c0>
   199c8:	ldr	x0, [x23, #56]
   199cc:	mov	x1, xzr
   199d0:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   199d4:	mov	w26, wzr
   199d8:	str	xzr, [x23, #56]
   199dc:	b	198f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x17c0>
   199e0:	mov	x0, x24
   199e4:	ldp	x20, x19, [sp, #64]
   199e8:	ldp	x22, x21, [sp, #48]
   199ec:	ldp	x24, x23, [sp, #32]
   199f0:	ldp	x26, x25, [sp, #16]
   199f4:	mov	x1, xzr
   199f8:	ldr	x30, [sp], #80
   199fc:	b	4e74 <__sancov_default_options@plt+0x4f4>
   19a00:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19a04:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19a08:	add	x0, x0, #0x7f8
   19a0c:	add	x2, x2, #0x882
   19a10:	mov	w1, #0x148                 	// #328
   19a14:	mov	x3, xzr
   19a18:	mov	x4, xzr
   19a1c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   19a20:	stp	x30, x23, [sp, #-48]!
   19a24:	stp	x22, x21, [sp, #16]
   19a28:	stp	x20, x19, [sp, #32]
   19a2c:	mov	x21, x1
   19a30:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19a34:	mov	x19, x0
   19a38:	add	x1, x1, #0x561
   19a3c:	mov	x0, x21
   19a40:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19a44:	mov	x22, x0
   19a48:	add	x0, x0, #0x1
   19a4c:	mov	x1, xzr
   19a50:	mov	x2, xzr
   19a54:	bl	4b90 <__sancov_default_options@plt+0x210>
   19a58:	mov	x1, x21
   19a5c:	mov	x2, x22
   19a60:	mov	x20, x0
   19a64:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19a68:	add	x8, x21, x22
   19a6c:	strb	wzr, [x20, x22]
   19a70:	mov	x9, x8
   19a74:	ldrb	w10, [x9], #1
   19a78:	cmp	w10, #0x0
   19a7c:	csel	x21, x8, x9, eq  // eq = none
   19a80:	cbz	x20, 19b90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a58>
   19a84:	mov	x0, x20
   19a88:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   19a8c:	cbz	x0, 19b70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a38>
   19a90:	add	x8, x20, x0
   19a94:	mov	x22, x8
   19a98:	ldrb	w9, [x8, #-1]!
   19a9c:	cmp	x8, x20
   19aa0:	b.ls	19ab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1978>  // b.plast
   19aa4:	sub	w10, w9, #0x30
   19aa8:	cmp	w10, #0xa
   19aac:	b.cc	19a94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x195c>  // b.lo, b.ul, b.last
   19ab0:	cmp	w9, #0x3a
   19ab4:	b.ne	19b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.any
   19ab8:	ldrb	w8, [x22]
   19abc:	sub	w8, w8, #0x30
   19ac0:	cmp	w8, #0x9
   19ac4:	b.hi	19b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.pmore
   19ac8:	ldr	w8, [x19, #56]
   19acc:	mov	x0, x22
   19ad0:	sub	x23, x22, #0x2
   19ad4:	str	w8, [x19, #60]
   19ad8:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19adc:	str	w0, [x19, #56]
   19ae0:	sturb	wzr, [x22, #-1]
   19ae4:	ldrb	w8, [x23]
   19ae8:	mov	x22, x23
   19aec:	cmp	x23, x20
   19af0:	b.ls	19b04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19cc>  // b.plast
   19af4:	sub	w9, w8, #0x30
   19af8:	cmp	w9, #0xa
   19afc:	sub	x23, x22, #0x1
   19b00:	b.cc	19ae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19ac>  // b.lo, b.ul, b.last
   19b04:	cmp	w8, #0x3a
   19b08:	b.ne	19b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.any
   19b0c:	add	x0, x22, #0x1
   19b10:	ldrb	w8, [x0]
   19b14:	sub	w8, w8, #0x30
   19b18:	cmp	w8, #0x9
   19b1c:	b.hi	19b34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x19fc>  // b.pmore
   19b20:	ldr	w8, [x19, #56]
   19b24:	str	w8, [x19, #60]
   19b28:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19b2c:	str	w0, [x19, #56]
   19b30:	strb	wzr, [x22]
   19b34:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19b38:	add	x1, x1, #0x562
   19b3c:	mov	x0, x20
   19b40:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19b44:	mov	x22, x0
   19b48:	add	x0, x0, #0x1
   19b4c:	mov	x1, xzr
   19b50:	mov	x2, xzr
   19b54:	bl	4b90 <__sancov_default_options@plt+0x210>
   19b58:	mov	x1, x20
   19b5c:	mov	x2, x22
   19b60:	str	x0, [x19, #48]
   19b64:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19b68:	ldr	x8, [x19, #48]
   19b6c:	strb	wzr, [x8, x22]
   19b70:	mov	x0, x20
   19b74:	mov	x1, xzr
   19b78:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   19b7c:	mov	x0, x21
   19b80:	ldp	x20, x19, [sp, #32]
   19b84:	ldp	x22, x21, [sp, #16]
   19b88:	ldp	x30, x23, [sp], #48
   19b8c:	ret
   19b90:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19b94:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19b98:	add	x0, x0, #0x7f8
   19b9c:	add	x2, x2, #0xa75
   19ba0:	mov	w1, #0x129                 	// #297
   19ba4:	mov	x3, xzr
   19ba8:	mov	x4, xzr
   19bac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   19bb0:	str	x30, [sp, #-48]!
   19bb4:	stp	x22, x21, [sp, #16]
   19bb8:	stp	x20, x19, [sp, #32]
   19bbc:	mov	x19, x1
   19bc0:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19bc4:	add	x1, x1, #0x561
   19bc8:	mov	x20, x0
   19bcc:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19bd0:	mov	x21, x0
   19bd4:	add	x0, x0, #0x1
   19bd8:	mov	x1, xzr
   19bdc:	mov	x2, xzr
   19be0:	bl	4b90 <__sancov_default_options@plt+0x210>
   19be4:	mov	x1, x20
   19be8:	mov	x2, x21
   19bec:	str	x0, [x19, #40]
   19bf0:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19bf4:	ldr	x8, [x19, #40]
   19bf8:	add	x9, x20, x21
   19bfc:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   19c00:	add	x1, x1, #0x79d
   19c04:	strb	wzr, [x8, x21]
   19c08:	mov	x8, x9
   19c0c:	ldrb	w10, [x8], #1
   19c10:	cmp	w10, #0x0
   19c14:	csel	x20, x9, x8, eq  // eq = none
   19c18:	mov	x0, x20
   19c1c:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19c20:	mov	x22, x0
   19c24:	add	x0, x0, #0x1
   19c28:	mov	x1, xzr
   19c2c:	mov	x2, xzr
   19c30:	bl	4b90 <__sancov_default_options@plt+0x210>
   19c34:	mov	x1, x20
   19c38:	mov	x2, x22
   19c3c:	mov	x21, x0
   19c40:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19c44:	add	x8, x20, x22
   19c48:	strb	wzr, [x21, x22]
   19c4c:	mov	x9, x8
   19c50:	ldrb	w10, [x9], #1
   19c54:	cmp	w10, #0x0
   19c58:	csel	x20, x8, x9, eq  // eq = none
   19c5c:	cbz	x21, 19c6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b34>
   19c60:	mov	x0, x21
   19c64:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19c68:	str	x0, [x19, #48]
   19c6c:	mov	x0, x21
   19c70:	mov	x1, xzr
   19c74:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   19c78:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19c7c:	add	x1, x1, #0x561
   19c80:	mov	x0, x20
   19c84:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19c88:	mov	x22, x0
   19c8c:	add	x0, x0, #0x1
   19c90:	mov	x1, xzr
   19c94:	mov	x2, xzr
   19c98:	bl	4b90 <__sancov_default_options@plt+0x210>
   19c9c:	mov	x1, x20
   19ca0:	mov	x2, x22
   19ca4:	mov	x21, x0
   19ca8:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19cac:	strb	wzr, [x21, x22]
   19cb0:	cbz	x21, 19cc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1b88>
   19cb4:	mov	x0, x21
   19cb8:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   19cbc:	str	x0, [x19, #56]
   19cc0:	mov	x0, x21
   19cc4:	ldp	x20, x19, [sp, #32]
   19cc8:	ldp	x22, x21, [sp, #16]
   19ccc:	mov	x1, xzr
   19cd0:	ldr	x30, [sp], #48
   19cd4:	b	4e74 <__sancov_default_options@plt+0x4f4>
   19cd8:	stp	x30, x19, [sp, #-16]!
   19cdc:	mov	x19, x2
   19ce0:	ldr	x2, [x2, #16]
   19ce4:	ldr	x3, [x19, #24]
   19ce8:	ldr	w4, [x19, #32]
   19cec:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19cf0:	add	x1, x1, #0x89e
   19cf4:	bl	19d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   19cf8:	cbz	x0, 19d08 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd0>
   19cfc:	mov	x1, x19
   19d00:	bl	198c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   19d04:	mov	w0, #0x1                   	// #1
   19d08:	ldp	x30, x19, [sp], #16
   19d0c:	ret
   19d10:	str	x30, [sp, #-32]!
   19d14:	stp	x20, x19, [sp, #16]
   19d18:	cbz	x2, 19e20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ce8>
   19d1c:	cmp	w4, #0x8
   19d20:	b.hi	19e38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d00>  // b.pmore
   19d24:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19d28:	mov	w9, w4
   19d2c:	add	x10, x10, #0x7ef
   19d30:	adr	x11, 19d5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c24>
   19d34:	ldrb	w12, [x10, x9]
   19d38:	add	x11, x11, x12, lsl #2
   19d3c:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19d40:	mov	x6, x3
   19d44:	mov	x8, x2
   19d48:	mov	x3, x1
   19d4c:	mov	x19, x0
   19d50:	add	x20, x0, #0x18
   19d54:	add	x5, x5, #0x716
   19d58:	br	x11
   19d5c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19d60:	add	x2, x2, #0x8c5
   19d64:	mov	w1, #0x4000                	// #16384
   19d68:	mov	x0, x20
   19d6c:	mov	x4, x8
   19d70:	mov	x5, x6
   19d74:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   19d78:	cmp	w0, #0x4, lsl #12
   19d7c:	b.ge	19e04 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1ccc>  // b.tcont
   19d80:	ldr	x0, [x19, #16]
   19d84:	mov	x1, x20
   19d88:	ldp	x20, x19, [sp, #16]
   19d8c:	ldr	x30, [sp], #32
   19d90:	b	1a1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>
   19d94:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19d98:	add	x5, x5, #0x72a
   19d9c:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19da0:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19da4:	add	x5, x5, #0x71b
   19da8:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19dac:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19db0:	add	x5, x5, #0x722
   19db4:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19db8:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19dbc:	add	x5, x5, #0x73d
   19dc0:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19dc4:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19dc8:	add	x5, x5, #0x730
   19dcc:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19dd0:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19dd4:	add	x5, x5, #0x736
   19dd8:	b	19de4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1cac>
   19ddc:	adrp	x5, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19de0:	add	x5, x5, #0xa4e
   19de4:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19de8:	add	x2, x2, #0x8f6
   19dec:	mov	w1, #0x4000                	// #16384
   19df0:	mov	x0, x20
   19df4:	mov	x4, x8
   19df8:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   19dfc:	cmp	w0, #0x4, lsl #12
   19e00:	b.lt	19d80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1c48>  // b.tstop
   19e04:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19e08:	add	x0, x0, #0x8d4
   19e0c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   19e10:	ldp	x20, x19, [sp, #16]
   19e14:	mov	x0, xzr
   19e18:	ldr	x30, [sp], #32
   19e1c:	ret
   19e20:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19e24:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19e28:	add	x0, x0, #0x7f8
   19e2c:	add	x2, x2, #0x8ae
   19e30:	mov	w1, #0x1b5                 	// #437
   19e34:	b	19e4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d14>
   19e38:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   19e3c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19e40:	add	x0, x0, #0xbf8
   19e44:	add	x2, x2, #0x744
   19e48:	mov	w1, #0x2b8                 	// #696
   19e4c:	mov	x3, xzr
   19e50:	mov	x4, xzr
   19e54:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   19e58:	str	x30, [sp, #-32]!
   19e5c:	stp	x20, x19, [sp, #16]
   19e60:	mov	x19, x2
   19e64:	ldr	x2, [x2]
   19e68:	ldr	x3, [x19, #8]
   19e6c:	ldr	w4, [x19, #16]
   19e70:	mov	x20, x1
   19e74:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19e78:	add	x1, x1, #0x8a3
   19e7c:	bl	19d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   19e80:	cbz	x0, 19ea4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1d6c>
   19e84:	mov	x1, x19
   19e88:	bl	19bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   19e8c:	ldr	x8, [x19, #8]
   19e90:	ldr	x9, [x19, #48]
   19e94:	mov	w0, #0x1                   	// #1
   19e98:	sub	x8, x20, x8
   19e9c:	add	x8, x8, x9
   19ea0:	str	x8, [x19, #48]
   19ea4:	ldp	x20, x19, [sp, #16]
   19ea8:	ldr	x30, [sp], #32
   19eac:	ret
   19eb0:	sub	sp, sp, #0xd0
   19eb4:	str	x30, [sp, #128]
   19eb8:	stp	x26, x25, [sp, #144]
   19ebc:	stp	x24, x23, [sp, #160]
   19ec0:	stp	x22, x21, [sp, #176]
   19ec4:	stp	x20, x19, [sp, #192]
   19ec8:	mov	x19, x2
   19ecc:	ldr	x2, [x2]
   19ed0:	ldr	x3, [x19, #8]
   19ed4:	ldr	w4, [x19, #16]
   19ed8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19edc:	add	x1, x1, #0x8a8
   19ee0:	bl	19d10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1bd8>
   19ee4:	cbz	x0, 1a198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2060>
   19ee8:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19eec:	add	x1, x1, #0x89b
   19ef0:	mov	w2, #0x2                   	// #2
   19ef4:	mov	x23, x0
   19ef8:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   19efc:	cbz	w0, 1a194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   19f00:	ldrb	w8, [x23]
   19f04:	cbz	w8, 1a194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   19f08:	adrp	x20, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19f0c:	adrp	x21, 28000 <__interceptor_sigaction@@Base+0x5a44>
   19f10:	adrp	x22, 29000 <__interceptor_sigaction@@Base+0x6a44>
   19f14:	add	x19, x19, #0x18
   19f18:	add	x20, x20, #0x561
   19f1c:	add	x21, x21, #0x89b
   19f20:	add	x22, x22, #0x79d
   19f24:	b	19f48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1e10>
   19f28:	mov	x0, x24
   19f2c:	mov	x1, xzr
   19f30:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   19f34:	add	x1, sp, #0x40
   19f38:	mov	x0, x19
   19f3c:	bl	1a688 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2550>
   19f40:	ldrb	w8, [x26, x25]
   19f44:	cbz	w8, 1a194 <__sanitizer_get_module_and_offset_for_pc@@Base+0x205c>
   19f48:	mov	x0, x23
   19f4c:	mov	x1, x20
   19f50:	stp	xzr, xzr, [sp, #64]
   19f54:	str	xzr, [sp, #80]
   19f58:	str	wzr, [sp, #88]
   19f5c:	strh	wzr, [sp, #92]
   19f60:	strb	wzr, [sp, #94]
   19f64:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19f68:	mov	x24, x0
   19f6c:	add	x0, x0, #0x1
   19f70:	mov	x1, xzr
   19f74:	mov	x2, xzr
   19f78:	bl	4b90 <__sancov_default_options@plt+0x210>
   19f7c:	mov	x1, x23
   19f80:	mov	x2, x24
   19f84:	str	x0, [sp, #64]
   19f88:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19f8c:	ldr	x8, [sp, #64]
   19f90:	add	x9, x23, x24
   19f94:	mov	x1, x20
   19f98:	strb	wzr, [x8, x24]
   19f9c:	mov	x8, x9
   19fa0:	ldrb	w10, [x8], #1
   19fa4:	cmp	w10, #0x0
   19fa8:	csel	x23, x9, x8, eq  // eq = none
   19fac:	mov	x0, x23
   19fb0:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   19fb4:	mov	x24, x0
   19fb8:	add	x0, x0, #0x1
   19fbc:	mov	x1, xzr
   19fc0:	mov	x2, xzr
   19fc4:	bl	4b90 <__sancov_default_options@plt+0x210>
   19fc8:	mov	x1, x23
   19fcc:	mov	x2, x24
   19fd0:	str	x0, [sp, #72]
   19fd4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   19fd8:	ldr	x8, [sp, #72]
   19fdc:	add	x9, x23, x24
   19fe0:	mov	x0, sp
   19fe4:	strb	wzr, [x8, x24]
   19fe8:	mov	x8, x9
   19fec:	ldrb	w10, [x8], #1
   19ff0:	cmp	w10, #0x0
   19ff4:	csel	x23, x9, x8, eq  // eq = none
   19ff8:	bl	188dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a4>
   19ffc:	mov	x0, sp
   1a000:	mov	x1, x23
   1a004:	bl	19a20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x18e8>
   1a008:	ldr	x8, [sp, #48]
   1a00c:	ldr	w9, [sp, #56]
   1a010:	mov	w2, #0x2                   	// #2
   1a014:	mov	x1, x21
   1a018:	mov	x23, x0
   1a01c:	str	x8, [sp, #80]
   1a020:	str	w9, [sp, #88]
   1a024:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   1a028:	cmp	w0, #0x0
   1a02c:	cset	w8, ne  // ne = any
   1a030:	mov	x0, x23
   1a034:	mov	x1, x22
   1a038:	strb	w8, [sp, #92]
   1a03c:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   1a040:	mov	x25, x0
   1a044:	add	x0, x0, #0x1
   1a048:	mov	x1, xzr
   1a04c:	mov	x2, xzr
   1a050:	bl	4b90 <__sancov_default_options@plt+0x210>
   1a054:	mov	x1, x23
   1a058:	mov	x2, x25
   1a05c:	mov	x24, x0
   1a060:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1a064:	add	x8, x23, x25
   1a068:	strb	wzr, [x24, x25]
   1a06c:	mov	x9, x8
   1a070:	ldrb	w10, [x9], #1
   1a074:	cmp	w10, #0x0
   1a078:	csel	x23, x8, x9, eq  // eq = none
   1a07c:	cbz	x24, 1a08c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1f54>
   1a080:	mov	x0, x24
   1a084:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   1a088:	str	x0, [sp, #96]
   1a08c:	mov	x0, x24
   1a090:	mov	x1, xzr
   1a094:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   1a098:	mov	w2, #0x2                   	// #2
   1a09c:	mov	x0, x23
   1a0a0:	mov	x1, x21
   1a0a4:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   1a0a8:	cmp	w0, #0x0
   1a0ac:	cset	w8, ne  // ne = any
   1a0b0:	mov	x0, x23
   1a0b4:	mov	x1, x22
   1a0b8:	strb	w8, [sp, #93]
   1a0bc:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   1a0c0:	mov	x25, x0
   1a0c4:	add	x0, x0, #0x1
   1a0c8:	mov	x1, xzr
   1a0cc:	mov	x2, xzr
   1a0d0:	bl	4b90 <__sancov_default_options@plt+0x210>
   1a0d4:	mov	x1, x23
   1a0d8:	mov	x2, x25
   1a0dc:	mov	x24, x0
   1a0e0:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1a0e4:	add	x8, x23, x25
   1a0e8:	strb	wzr, [x24, x25]
   1a0ec:	mov	x9, x8
   1a0f0:	ldrb	w10, [x9], #1
   1a0f4:	cmp	w10, #0x0
   1a0f8:	csel	x23, x8, x9, eq  // eq = none
   1a0fc:	cbz	x24, 1a10c <__sanitizer_get_module_and_offset_for_pc@@Base+0x1fd4>
   1a100:	mov	x0, x24
   1a104:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   1a108:	str	x0, [sp, #104]
   1a10c:	mov	x0, x24
   1a110:	mov	x1, xzr
   1a114:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   1a118:	mov	w2, #0x2                   	// #2
   1a11c:	mov	x0, x23
   1a120:	mov	x1, x21
   1a124:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   1a128:	cmp	w0, #0x0
   1a12c:	cset	w8, ne  // ne = any
   1a130:	mov	x0, x23
   1a134:	mov	x1, x20
   1a138:	strb	w8, [sp, #94]
   1a13c:	bl	c010 <__sanitizer_set_report_fd@@Base+0x275c>
   1a140:	mov	x25, x0
   1a144:	add	x0, x0, #0x1
   1a148:	mov	x1, xzr
   1a14c:	mov	x2, xzr
   1a150:	bl	4b90 <__sancov_default_options@plt+0x210>
   1a154:	mov	x1, x23
   1a158:	mov	x2, x25
   1a15c:	mov	x24, x0
   1a160:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1a164:	add	x26, x23, x25
   1a168:	strb	wzr, [x24, x25]
   1a16c:	mov	x8, x26
   1a170:	ldrb	w9, [x8], #1
   1a174:	cmp	w9, #0x0
   1a178:	cset	w25, ne  // ne = any
   1a17c:	csel	x23, x26, x8, eq  // eq = none
   1a180:	cbz	x24, 19f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df0>
   1a184:	mov	x0, x24
   1a188:	bl	bb98 <__sanitizer_set_report_fd@@Base+0x22e4>
   1a18c:	str	x0, [sp, #112]
   1a190:	b	19f28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1df0>
   1a194:	mov	w0, #0x1                   	// #1
   1a198:	ldp	x20, x19, [sp, #192]
   1a19c:	ldp	x22, x21, [sp, #176]
   1a1a0:	ldp	x24, x23, [sp, #160]
   1a1a4:	ldp	x26, x25, [sp, #144]
   1a1a8:	ldr	x30, [sp, #128]
   1a1ac:	add	sp, sp, #0xd0
   1a1b0:	ret
   1a1b4:	str	x30, [sp, #-64]!
   1a1b8:	stp	x24, x23, [sp, #16]
   1a1bc:	stp	x22, x21, [sp, #32]
   1a1c0:	stp	x20, x19, [sp, #48]
   1a1c4:	mov	w8, #0x4020                	// #16416
   1a1c8:	add	x24, x0, x8
   1a1cc:	ldrb	w8, [x24]
   1a1d0:	cbnz	w8, 1a300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c8>
   1a1d4:	ldr	x22, [x0, #8]
   1a1d8:	mov	x19, x0
   1a1dc:	mov	x20, x1
   1a1e0:	bl	6f58 <__sanitizer_report_error_summary@@Base+0x570>
   1a1e4:	cbz	x0, 1a208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20d0>
   1a1e8:	mov	x21, x0
   1a1ec:	mov	x0, x22
   1a1f0:	bl	68f4 <__sancov_default_options@plt+0x1f74>
   1a1f4:	cbz	x0, 1a208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20d0>
   1a1f8:	mov	x1, x0
   1a1fc:	mov	x0, x21
   1a200:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1a204:	cbz	w0, 1a328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f0>
   1a208:	ldr	x8, [x19, #16408]
   1a20c:	cmp	x8, #0x4
   1a210:	b.hi	1a2f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c0>  // b.pmore
   1a214:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a218:	add	x21, x19, #0x18
   1a21c:	add	x22, x22, #0x9f6
   1a220:	b	1a248 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2110>
   1a224:	ldr	x8, [x19]
   1a228:	mov	x0, x19
   1a22c:	ldr	x8, [x8]
   1a230:	blr	x8
   1a234:	ldr	x8, [x19, #16408]
   1a238:	add	x8, x8, #0x1
   1a23c:	cmp	x8, #0x5
   1a240:	str	x8, [x19, #16408]
   1a244:	b.cs	1a2f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21c0>  // b.hs, b.nlast
   1a248:	ldr	w0, [x19, #16]
   1a24c:	cmn	w0, #0x1
   1a250:	b.eq	1a2c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>  // b.none
   1a254:	ldr	w8, [x19, #20]
   1a258:	cmn	w8, #0x1
   1a25c:	b.eq	1a2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>  // b.none
   1a260:	mov	x0, x20
   1a264:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1a268:	cbz	x0, 1a29c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2164>
   1a26c:	str	xzr, [sp, #8]
   1a270:	mov	x23, x0
   1a274:	ldr	w0, [x19, #20]
   1a278:	add	x3, sp, #0x8
   1a27c:	mov	x1, x20
   1a280:	mov	x2, x23
   1a284:	mov	x4, xzr
   1a288:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
   1a28c:	tbz	w0, #0, 1a2dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a4>
   1a290:	ldr	x8, [sp, #8]
   1a294:	cmp	x8, x23
   1a298:	b.ne	1a2dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x21a4>  // b.any
   1a29c:	ldr	x8, [x19]
   1a2a0:	mov	w2, #0x4000                	// #16384
   1a2a4:	mov	x0, x19
   1a2a8:	mov	x1, x21
   1a2ac:	ldr	x8, [x8, #8]
   1a2b0:	blr	x8
   1a2b4:	tbnz	w0, #0, 1a304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   1a2b8:	ldr	w0, [x19, #16]
   1a2bc:	cmn	w0, #0x1
   1a2c0:	b.eq	1a2c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>  // b.none
   1a2c4:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
   1a2c8:	ldr	w0, [x19, #20]
   1a2cc:	cmn	w0, #0x1
   1a2d0:	b.eq	1a224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>  // b.none
   1a2d4:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
   1a2d8:	b	1a224 <__sanitizer_get_module_and_offset_for_pc@@Base+0x20ec>
   1a2dc:	ldr	w1, [x19, #20]
   1a2e0:	mov	x0, x22
   1a2e4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a2e8:	ldr	w0, [x19, #16]
   1a2ec:	cmn	w0, #0x1
   1a2f0:	b.ne	1a2c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x218c>  // b.any
   1a2f4:	b	1a2c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2190>
   1a2f8:	ldrb	w8, [x24]
   1a2fc:	cbz	w8, 1a31c <__sanitizer_get_module_and_offset_for_pc@@Base+0x21e4>
   1a300:	mov	x21, xzr
   1a304:	mov	x0, x21
   1a308:	ldp	x20, x19, [sp, #48]
   1a30c:	ldp	x22, x21, [sp, #32]
   1a310:	ldp	x24, x23, [sp, #16]
   1a314:	ldr	x30, [sp], #64
   1a318:	ret
   1a31c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a320:	add	x0, x0, #0x969
   1a324:	b	1a330 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21f8>
   1a328:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a32c:	add	x0, x0, #0x932
   1a330:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a334:	mov	x21, xzr
   1a338:	mov	w8, #0x1                   	// #1
   1a33c:	strb	w8, [x24]
   1a340:	b	1a304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x21cc>
   1a344:	str	x30, [sp, #-16]!
   1a348:	adrp	x10, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1a34c:	ldr	x10, [x10, #4008]
   1a350:	mov	w8, #0x4020                	// #16416
   1a354:	and	w9, w2, #0x1
   1a358:	movi	v0.2d, #0xffffffffffffffff
   1a35c:	add	x8, x0, x8
   1a360:	add	x10, x10, #0x10
   1a364:	str	xzr, [x0, #16408]
   1a368:	str	d0, [x0, #16]
   1a36c:	stp	x10, x1, [x0]
   1a370:	strh	wzr, [x8]
   1a374:	strb	w9, [x8, #2]
   1a378:	cbz	x1, 1a38c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2254>
   1a37c:	ldrb	w8, [x1]
   1a380:	cbz	w8, 1a3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x226c>
   1a384:	ldr	x30, [sp], #16
   1a388:	ret
   1a38c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a390:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a394:	add	x0, x0, #0x7f8
   1a398:	add	x2, x2, #0x908
   1a39c:	mov	w1, #0x1d0                 	// #464
   1a3a0:	b	1a3b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2280>
   1a3a4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a3a8:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a3ac:	add	x0, x0, #0x7f8
   1a3b0:	add	x2, x2, #0x919
   1a3b4:	mov	w1, #0x1d1                 	// #465
   1a3b8:	mov	x3, xzr
   1a3bc:	mov	x4, xzr
   1a3c0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a3c4:	sub	sp, sp, #0x30
   1a3c8:	stp	x30, x21, [sp, #16]
   1a3cc:	stp	x20, x19, [sp, #32]
   1a3d0:	ldr	w8, [x0, #16]
   1a3d4:	cmn	w8, #0x1
   1a3d8:	b.eq	1a470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2338>  // b.none
   1a3dc:	ldr	w8, [x0, #20]
   1a3e0:	mov	x19, x0
   1a3e4:	cmn	w8, #0x1
   1a3e8:	b.eq	1a470 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2338>  // b.none
   1a3ec:	mov	x0, x1
   1a3f0:	mov	x20, x1
   1a3f4:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1a3f8:	cbz	x0, 1a42c <__sanitizer_get_module_and_offset_for_pc@@Base+0x22f4>
   1a3fc:	str	xzr, [sp, #8]
   1a400:	mov	x21, x0
   1a404:	ldr	w0, [x19, #20]
   1a408:	add	x3, sp, #0x8
   1a40c:	mov	x1, x20
   1a410:	mov	x2, x21
   1a414:	mov	x4, xzr
   1a418:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
   1a41c:	tbz	w0, #0, 1a460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>
   1a420:	ldr	x8, [sp, #8]
   1a424:	cmp	x8, x21
   1a428:	b.ne	1a460 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2328>  // b.any
   1a42c:	mov	x20, x19
   1a430:	ldr	x8, [x20], #24
   1a434:	mov	w2, #0x4000                	// #16384
   1a438:	mov	x0, x19
   1a43c:	ldr	x8, [x8, #8]
   1a440:	mov	x1, x20
   1a444:	blr	x8
   1a448:	tst	w0, #0x1
   1a44c:	csel	x0, x20, xzr, ne  // ne = any
   1a450:	ldp	x20, x19, [sp, #32]
   1a454:	ldp	x30, x21, [sp, #16]
   1a458:	add	sp, sp, #0x30
   1a45c:	ret
   1a460:	ldr	w1, [x19, #20]
   1a464:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a468:	add	x0, x0, #0x9f6
   1a46c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a470:	mov	x0, xzr
   1a474:	ldp	x20, x19, [sp, #32]
   1a478:	ldp	x30, x21, [sp, #16]
   1a47c:	add	sp, sp, #0x30
   1a480:	ret
   1a484:	stp	x30, x19, [sp, #-16]!
   1a488:	mov	x19, x0
   1a48c:	ldr	w0, [x0, #16]
   1a490:	cmn	w0, #0x1
   1a494:	b.eq	1a49c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2364>  // b.none
   1a498:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
   1a49c:	ldr	w0, [x19, #20]
   1a4a0:	cmn	w0, #0x1
   1a4a4:	b.eq	1a4ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2374>  // b.none
   1a4a8:	bl	f004 <__sanitizer_set_report_fd@@Base+0x5750>
   1a4ac:	ldr	x8, [x19]
   1a4b0:	mov	x0, x19
   1a4b4:	ldr	x1, [x8]
   1a4b8:	ldp	x30, x19, [sp], #16
   1a4bc:	br	x1
   1a4c0:	cbz	x2, 1a508 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d0>
   1a4c4:	str	x30, [sp, #-32]!
   1a4c8:	stp	x20, x19, [sp, #16]
   1a4cc:	str	xzr, [sp, #8]
   1a4d0:	mov	x19, x0
   1a4d4:	ldr	w0, [x0, #20]
   1a4d8:	add	x3, sp, #0x8
   1a4dc:	mov	x4, xzr
   1a4e0:	mov	x20, x2
   1a4e4:	bl	f054 <__sanitizer_set_report_fd@@Base+0x57a0>
   1a4e8:	tbz	w0, #0, 1a510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>
   1a4ec:	ldr	x8, [sp, #8]
   1a4f0:	cmp	x8, x20
   1a4f4:	b.ne	1a510 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23d8>  // b.any
   1a4f8:	mov	w0, #0x1                   	// #1
   1a4fc:	ldp	x20, x19, [sp, #16]
   1a500:	ldr	x30, [sp], #32
   1a504:	ret
   1a508:	mov	w0, #0x1                   	// #1
   1a50c:	ret
   1a510:	ldr	w1, [x19, #20]
   1a514:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a518:	add	x0, x0, #0x9f6
   1a51c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a520:	mov	w0, wzr
   1a524:	ldp	x20, x19, [sp, #16]
   1a528:	ldr	x30, [sp], #32
   1a52c:	ret
   1a530:	str	x30, [sp, #-48]!
   1a534:	stp	x22, x21, [sp, #16]
   1a538:	stp	x20, x19, [sp, #32]
   1a53c:	cbz	x2, 1a604 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24cc>
   1a540:	str	xzr, [sp, #8]
   1a544:	mov	x21, x0
   1a548:	ldr	w0, [x0, #16]
   1a54c:	mov	x20, x2
   1a550:	sub	x2, x2, #0x1
   1a554:	add	x3, sp, #0x8
   1a558:	mov	x4, xzr
   1a55c:	mov	x19, x1
   1a560:	bl	f008 <__sanitizer_set_report_fd@@Base+0x5754>
   1a564:	ldr	x8, [sp, #8]
   1a568:	cbz	x8, 1a5cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   1a56c:	tbz	w0, #0, 1a5cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   1a570:	mov	x22, xzr
   1a574:	ldr	x9, [x21]
   1a578:	add	x22, x8, x22
   1a57c:	mov	x0, x21
   1a580:	mov	x1, x19
   1a584:	ldr	x9, [x9, #16]
   1a588:	mov	x2, x22
   1a58c:	blr	x9
   1a590:	tbnz	w0, #0, 1a600 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24c8>
   1a594:	add	x8, x22, #0x1
   1a598:	cmp	x8, x20
   1a59c:	b.eq	1a5f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x24b8>  // b.none
   1a5a0:	str	xzr, [sp, #8]
   1a5a4:	ldr	w0, [x21, #16]
   1a5a8:	mvn	x8, x22
   1a5ac:	add	x1, x19, x22
   1a5b0:	add	x2, x8, x20
   1a5b4:	add	x3, sp, #0x8
   1a5b8:	mov	x4, xzr
   1a5bc:	bl	f008 <__sanitizer_set_report_fd@@Base+0x5754>
   1a5c0:	ldr	x8, [sp, #8]
   1a5c4:	cbz	x8, 1a5cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2494>
   1a5c8:	tbnz	w0, #0, 1a574 <__sanitizer_get_module_and_offset_for_pc@@Base+0x243c>
   1a5cc:	ldr	w1, [x21, #16]
   1a5d0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a5d4:	add	x0, x0, #0x9a2
   1a5d8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a5dc:	mov	w0, wzr
   1a5e0:	ldp	x20, x19, [sp, #32]
   1a5e4:	ldp	x22, x21, [sp, #16]
   1a5e8:	ldr	x30, [sp], #48
   1a5ec:	ret
   1a5f0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a5f4:	add	x0, x0, #0x9d0
   1a5f8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1a5fc:	mov	x22, xzr
   1a600:	strb	wzr, [x19, x22]
   1a604:	mov	w0, #0x1                   	// #1
   1a608:	ldp	x20, x19, [sp, #32]
   1a60c:	ldp	x22, x21, [sp, #16]
   1a610:	ldr	x30, [sp], #48
   1a614:	ret
   1a618:	mov	x0, xzr
   1a61c:	ret
   1a620:	cmp	x2, #0x2
   1a624:	b.cc	1a648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2510>  // b.lo, b.ul, b.last
   1a628:	add	x8, x2, x1
   1a62c:	ldurb	w9, [x8, #-1]
   1a630:	cmp	w9, #0xa
   1a634:	b.ne	1a648 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2510>  // b.any
   1a638:	ldurb	w8, [x8, #-2]
   1a63c:	cmp	w8, #0xa
   1a640:	cset	w0, eq  // eq = none
   1a644:	ret
   1a648:	mov	w0, wzr
   1a64c:	ret
   1a650:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1a654:	ldr	x8, [x8, #4056]
   1a658:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a65c:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a660:	add	x9, x9, #0xa54
   1a664:	ldrb	w8, [x8, #188]
   1a668:	add	x10, x10, #0xa64
   1a66c:	adrp	x11, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1a670:	add	x11, x11, #0xa3f
   1a674:	cmp	w8, #0x0
   1a678:	csel	x8, x10, x9, eq  // eq = none
   1a67c:	stp	x1, x8, [x2]
   1a680:	stp	x11, xzr, [x2, #16]
   1a684:	ret
   1a688:	str	x30, [sp, #-32]!
   1a68c:	stp	x20, x19, [sp, #16]
   1a690:	ldp	x8, x3, [x0, #8]
   1a694:	mov	x9, #0x2493                	// #9363
   1a698:	movk	x9, #0x9249, lsl #16
   1a69c:	movk	x9, #0x4924, lsl #32
   1a6a0:	lsr	x8, x8, #3
   1a6a4:	movk	x9, #0x2492, lsl #48
   1a6a8:	umulh	x4, x8, x9
   1a6ac:	cmp	x3, x4
   1a6b0:	b.hi	1a73c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2604>  // b.pmore
   1a6b4:	mov	x19, x0
   1a6b8:	mov	x20, x1
   1a6bc:	b.ne	1a714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25dc>  // b.any
   1a6c0:	adds	x3, x3, #0x1
   1a6c4:	b.cs	1a754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x261c>  // b.hs, b.nlast
   1a6c8:	sub	x8, x3, #0x1
   1a6cc:	tst	x3, x8
   1a6d0:	b.ne	1a6dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x25a4>  // b.any
   1a6d4:	mov	x8, x3
   1a6d8:	b	1a704 <__sanitizer_get_module_and_offset_for_pc@@Base+0x25cc>
   1a6dc:	clz	x8, x3
   1a6e0:	eor	x9, x8, #0x3f
   1a6e4:	mov	w8, #0x2                   	// #2
   1a6e8:	lsl	x8, x8, x9
   1a6ec:	cmp	x8, x3
   1a6f0:	b.ls	1a774 <__sanitizer_get_module_and_offset_for_pc@@Base+0x263c>  // b.plast
   1a6f4:	mov	w10, #0x1                   	// #1
   1a6f8:	lsl	x4, x10, x9
   1a6fc:	cmp	x4, x3
   1a700:	b.cs	1a790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2658>  // b.hs, b.nlast
   1a704:	mov	x0, x19
   1a708:	mov	x1, x8
   1a70c:	bl	1a7a8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2670>
   1a710:	ldr	x3, [x19, #16]
   1a714:	add	x9, x3, #0x1
   1a718:	ldr	x8, [x19]
   1a71c:	str	x9, [x19, #16]
   1a720:	mov	x1, x20
   1a724:	ldp	x20, x19, [sp, #16]
   1a728:	mov	w10, #0x38                  	// #56
   1a72c:	madd	x0, x3, x10, x8
   1a730:	mov	w2, #0x38                  	// #56
   1a734:	ldr	x30, [sp], #32
   1a738:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1a73c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a740:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1a744:	add	x0, x0, #0xbf8
   1a748:	add	x2, x2, #0x44f
   1a74c:	mov	w1, #0x1cd                 	// #461
   1a750:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a754:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a758:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1a75c:	add	x0, x0, #0xbf8
   1a760:	add	x2, x2, #0x46b
   1a764:	mov	w1, #0x186                 	// #390
   1a768:	mov	x3, xzr
   1a76c:	mov	x4, xzr
   1a770:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a774:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a778:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1a77c:	add	x0, x0, #0xbf8
   1a780:	add	x2, x2, #0x47b
   1a784:	mov	w1, #0x18a                 	// #394
   1a788:	mov	x4, x8
   1a78c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a790:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a794:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1a798:	add	x0, x0, #0xbf8
   1a79c:	add	x2, x2, #0x49d
   1a7a0:	mov	w1, #0x18b                 	// #395
   1a7a4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a7a8:	stp	x30, x21, [sp, #-32]!
   1a7ac:	stp	x20, x19, [sp, #16]
   1a7b0:	cbz	x1, 1a848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2710>
   1a7b4:	ldr	x3, [x0, #16]
   1a7b8:	mov	x20, x1
   1a7bc:	mov	x19, x0
   1a7c0:	cmp	x3, x1
   1a7c4:	b.hi	1a868 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2730>  // b.pmore
   1a7c8:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1a7cc:	ldr	x21, [x21, #4016]
   1a7d0:	ldr	x0, [x21]
   1a7d4:	cbnz	x0, 1a7e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x26a8>
   1a7d8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1a7dc:	str	x0, [x21]
   1a7e0:	sub	x8, x0, #0x1
   1a7e4:	tst	x0, x8
   1a7e8:	b.ne	1a884 <__sanitizer_get_module_and_offset_for_pc@@Base+0x274c>  // b.any
   1a7ec:	mov	w8, #0x38                  	// #56
   1a7f0:	mul	x8, x20, x8
   1a7f4:	add	x8, x8, x0
   1a7f8:	sub	x8, x8, #0x1
   1a7fc:	neg	x9, x0
   1a800:	and	x20, x8, x9
   1a804:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1a808:	add	x1, x1, #0x2c0
   1a80c:	mov	x0, x20
   1a810:	mov	w2, wzr
   1a814:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1a818:	ldr	x8, [x19, #16]
   1a81c:	ldr	x1, [x19]
   1a820:	mov	w9, #0x38                  	// #56
   1a824:	mov	x21, x0
   1a828:	mul	x2, x8, x9
   1a82c:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1a830:	ldp	x0, x1, [x19]
   1a834:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1a838:	stp	x21, x20, [x19]
   1a83c:	ldp	x20, x19, [sp, #16]
   1a840:	ldp	x30, x21, [sp], #32
   1a844:	ret
   1a848:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a84c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1a850:	add	x0, x0, #0xbf8
   1a854:	add	x2, x2, #0x289
   1a858:	mov	w1, #0x20b                 	// #523
   1a85c:	mov	x3, xzr
   1a860:	mov	x4, xzr
   1a864:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a868:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1a86c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1a870:	add	x0, x0, #0xbf8
   1a874:	add	x2, x2, #0x2a2
   1a878:	mov	w1, #0x20c                 	// #524
   1a87c:	mov	x4, x20
   1a880:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1a884:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1a888:	add	x0, x0, #0x121
   1a88c:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1a890:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1a894:	stp	x30, x19, [sp, #-16]!
   1a898:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1a89c:	ldr	x8, [x8, #3856]
   1a8a0:	mov	x19, x0
   1a8a4:	cbz	x8, 1a8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>
   1a8a8:	mov	x0, x19
   1a8ac:	mov	x1, xzr
   1a8b0:	mov	x2, xzr
   1a8b4:	mov	x3, xzr
   1a8b8:	bl	4740 <__cxa_demangle@plt>
   1a8bc:	cbz	x0, 1a8c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2790>
   1a8c0:	ldp	x30, x19, [sp], #16
   1a8c4:	ret
   1a8c8:	mov	x0, x19
   1a8cc:	ldp	x30, x19, [sp], #16
   1a8d0:	ret
   1a8d4:	sub	sp, sp, #0x20
   1a8d8:	stp	x30, x19, [sp, #16]
   1a8dc:	cbz	x0, 1a938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   1a8e0:	ldrb	w8, [x0]
   1a8e4:	mov	x19, x0
   1a8e8:	cmp	w8, #0x5f
   1a8ec:	b.ne	1a938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>  // b.any
   1a8f0:	ldrb	w8, [x19, #1]
   1a8f4:	cmp	w8, #0x54
   1a8f8:	b.ne	1a938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>  // b.any
   1a8fc:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1a900:	ldr	x0, [x8, #3448]
   1a904:	cbz	x0, 1a938 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2800>
   1a908:	str	x0, [sp, #8]
   1a90c:	mov	x0, x19
   1a910:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1a914:	mov	x1, x0
   1a918:	mov	x0, x19
   1a91c:	ldr	x5, [sp, #8]
   1a920:	ldp	x30, x19, [sp, #16]
   1a924:	mov	x2, xzr
   1a928:	mov	x3, xzr
   1a92c:	mov	w4, wzr
   1a930:	add	sp, sp, #0x20
   1a934:	br	x5
   1a938:	ldp	x30, x19, [sp, #16]
   1a93c:	mov	x0, xzr
   1a940:	add	sp, sp, #0x20
   1a944:	ret
   1a948:	str	x30, [sp, #-32]!
   1a94c:	stp	x20, x19, [sp, #16]
   1a950:	cbz	x0, 1a9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2868>
   1a954:	ldrb	w8, [x0]
   1a958:	mov	x19, x0
   1a95c:	cmp	w8, #0x5f
   1a960:	b.ne	1a9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>  // b.any
   1a964:	ldrb	w8, [x19, #1]
   1a968:	cmp	w8, #0x54
   1a96c:	b.ne	1a9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>  // b.any
   1a970:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1a974:	ldr	x20, [x8, #3448]
   1a978:	cbz	x20, 1a9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>
   1a97c:	mov	x0, x19
   1a980:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1a984:	mov	x1, x0
   1a988:	mov	x0, x19
   1a98c:	mov	x2, xzr
   1a990:	mov	x3, xzr
   1a994:	mov	w4, wzr
   1a998:	blr	x20
   1a99c:	cbz	x0, 1a9ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2874>
   1a9a0:	ldp	x20, x19, [sp, #16]
   1a9a4:	ldr	x30, [sp], #32
   1a9a8:	ret
   1a9ac:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1a9b0:	ldr	x8, [x8, #3856]
   1a9b4:	cbz	x8, 1a9d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2898>
   1a9b8:	mov	x0, x19
   1a9bc:	mov	x1, xzr
   1a9c0:	mov	x2, xzr
   1a9c4:	mov	x3, xzr
   1a9c8:	bl	4740 <__cxa_demangle@plt>
   1a9cc:	cbnz	x0, 1a9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2868>
   1a9d0:	mov	x0, x19
   1a9d4:	ldp	x20, x19, [sp, #16]
   1a9d8:	ldr	x30, [sp], #32
   1a9dc:	ret
   1a9e0:	sub	sp, sp, #0x90
   1a9e4:	stp	x30, x23, [sp, #96]
   1a9e8:	stp	x22, x21, [sp, #112]
   1a9ec:	stp	x20, x19, [sp, #128]
   1a9f0:	mov	x19, x0
   1a9f4:	ldr	x0, [x0, #8]
   1a9f8:	mov	w8, #0x4021                	// #16417
   1a9fc:	add	x20, x19, x8
   1aa00:	bl	d110 <__sanitizer_set_report_fd@@Base+0x385c>
   1aa04:	tbz	w0, #0, 1aa84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x294c>
   1aa08:	ldp	x8, x1, [x19]
   1aa0c:	add	x2, sp, #0x8
   1aa10:	mov	x0, x19
   1aa14:	ldr	x8, [x8, #24]
   1aa18:	blr	x8
   1aa1c:	ldrb	w8, [x20, #1]
   1aa20:	cbnz	w8, 1ac70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b38>
   1aa24:	add	x0, sp, #0x38
   1aa28:	add	x20, sp, #0x38
   1aa2c:	bl	4630 <pipe@plt>
   1aa30:	cmn	w0, #0x1
   1aa34:	b.eq	1ac44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b0c>  // b.none
   1aa38:	ldp	w9, w8, [sp, #56]
   1aa3c:	cmp	w8, #0x2
   1aa40:	ccmp	w9, #0x2, #0x4, gt
   1aa44:	csel	x22, x20, xzr, gt
   1aa48:	add	x20, x20, #0x8
   1aa4c:	mov	x0, x20
   1aa50:	bl	4630 <pipe@plt>
   1aa54:	cmn	w0, #0x1
   1aa58:	b.eq	1aaa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2970>  // b.none
   1aa5c:	ldr	w8, [sp, #64]
   1aa60:	cmp	w8, #0x3
   1aa64:	b.lt	1aab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x297c>  // b.tstop
   1aa68:	ldr	w8, [sp, #68]
   1aa6c:	cmp	w8, #0x3
   1aa70:	b.lt	1aab4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x297c>  // b.tstop
   1aa74:	cbz	x22, 1aab0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2978>
   1aa78:	add	x22, sp, #0x38
   1aa7c:	mov	w21, #0x1                   	// #1
   1aa80:	b	1ab7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   1aa84:	ldrb	w8, [x20]
   1aa88:	cbnz	w8, 1ac58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   1aa8c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1aa90:	add	x0, x0, #0xa8f
   1aa94:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1aa98:	mov	w8, #0x1                   	// #1
   1aa9c:	mov	w0, wzr
   1aaa0:	strb	w8, [x20]
   1aaa4:	b	1ac5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b24>
   1aaa8:	mov	w19, #0x1                   	// #1
   1aaac:	b	1ac24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   1aab0:	mov	x22, x20
   1aab4:	add	x8, sp, #0x38
   1aab8:	add	x20, x8, #0x10
   1aabc:	mov	x0, x20
   1aac0:	bl	4630 <pipe@plt>
   1aac4:	cmn	w0, #0x1
   1aac8:	b.eq	1aaf0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29b8>  // b.none
   1aacc:	ldr	w8, [sp, #72]
   1aad0:	cmp	w8, #0x3
   1aad4:	b.lt	1aafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c4>  // b.tstop
   1aad8:	ldr	w8, [sp, #76]
   1aadc:	cmp	w8, #0x3
   1aae0:	b.lt	1aafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c4>  // b.tstop
   1aae4:	cbz	x22, 1aaf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x29c0>
   1aae8:	mov	w21, #0x2                   	// #2
   1aaec:	b	1ab7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   1aaf0:	mov	w19, #0x2                   	// #2
   1aaf4:	b	1ac24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   1aaf8:	mov	x22, x20
   1aafc:	add	x8, sp, #0x38
   1ab00:	add	x20, x8, #0x18
   1ab04:	mov	x0, x20
   1ab08:	bl	4630 <pipe@plt>
   1ab0c:	cmn	w0, #0x1
   1ab10:	b.eq	1ab38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a00>  // b.none
   1ab14:	ldr	w8, [sp, #80]
   1ab18:	cmp	w8, #0x3
   1ab1c:	b.lt	1ab44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a0c>  // b.tstop
   1ab20:	ldr	w8, [sp, #84]
   1ab24:	cmp	w8, #0x3
   1ab28:	b.lt	1ab44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a0c>  // b.tstop
   1ab2c:	cbz	x22, 1ab40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a08>
   1ab30:	mov	w21, #0x3                   	// #3
   1ab34:	b	1ab7c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a44>
   1ab38:	mov	w19, #0x3                   	// #3
   1ab3c:	b	1ac24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2aec>
   1ab40:	mov	x22, x20
   1ab44:	add	x8, sp, #0x38
   1ab48:	add	x20, x8, #0x20
   1ab4c:	mov	x0, x20
   1ab50:	bl	4630 <pipe@plt>
   1ab54:	cmn	w0, #0x1
   1ab58:	b.eq	1ac20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ae8>  // b.none
   1ab5c:	ldr	w8, [sp, #88]
   1ab60:	cmp	w8, #0x3
   1ab64:	b.lt	1abac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a74>  // b.tstop
   1ab68:	ldr	w8, [sp, #92]
   1ab6c:	cmp	w8, #0x3
   1ab70:	b.lt	1abac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a74>  // b.tstop
   1ab74:	cbz	x22, 1ac90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>
   1ab78:	mov	w21, #0x4                   	// #4
   1ab7c:	add	x23, sp, #0x38
   1ab80:	b	1ab90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a58>
   1ab84:	subs	x21, x21, #0x1
   1ab88:	add	x23, x23, #0x8
   1ab8c:	b.eq	1abb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a78>  // b.none
   1ab90:	cmp	x22, x23
   1ab94:	b.eq	1ab84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>  // b.none
   1ab98:	ldr	w0, [x23]
   1ab9c:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1aba0:	ldr	w0, [x23, #4]
   1aba4:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1aba8:	b	1ab84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2a4c>
   1abac:	mov	x20, xzr
   1abb0:	cbz	x22, 1acb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b78>
   1abb4:	cbz	x20, 1ac90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b58>
   1abb8:	ldp	w21, w3, [x22]
   1abbc:	ldp	w2, w20, [x20]
   1abc0:	ldr	x0, [x19, #8]
   1abc4:	add	x1, sp, #0x8
   1abc8:	mov	w4, #0xffffffff            	// #-1
   1abcc:	bl	15038 <__sanitizer_sandbox_on_notify@@Base+0x1508>
   1abd0:	tbnz	w0, #31, 1abfc <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ac4>
   1abd4:	mov	w22, w0
   1abd8:	stp	w21, w20, [x19, #16]
   1abdc:	cbz	w0, 1acd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b98>
   1abe0:	mov	w0, #0xa                   	// #10
   1abe4:	bl	1489c <__sanitizer_sandbox_on_notify@@Base+0xd6c>
   1abe8:	mov	w0, w22
   1abec:	bl	15194 <__sanitizer_sandbox_on_notify@@Base+0x1664>
   1abf0:	tbz	w0, #0, 1ac10 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ad8>
   1abf4:	mov	w0, #0x1                   	// #1
   1abf8:	b	1ac5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b24>
   1abfc:	mov	w0, w21
   1ac00:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1ac04:	mov	w0, w20
   1ac08:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1ac0c:	b	1ac58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   1ac10:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac14:	add	x0, x0, #0xba1
   1ac18:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1ac1c:	b	1ac58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2b20>
   1ac20:	mov	w19, #0x4                   	// #4
   1ac24:	add	x8, sp, #0x38
   1ac28:	add	x20, x8, #0x4
   1ac2c:	ldur	w0, [x20, #-4]
   1ac30:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1ac34:	ldr	w0, [x20], #8
   1ac38:	bl	cf14 <__sanitizer_set_report_fd@@Base+0x3660>
   1ac3c:	subs	x19, x19, #0x1
   1ac40:	b.ne	1ac2c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2af4>  // b.any
   1ac44:	bl	4840 <__errno_location@plt>
   1ac48:	ldr	w1, [x0]
   1ac4c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac50:	add	x0, x0, #0xb43
   1ac54:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1ac58:	mov	w0, wzr
   1ac5c:	ldp	x20, x19, [sp, #128]
   1ac60:	ldp	x22, x21, [sp, #112]
   1ac64:	ldp	x30, x23, [sp, #96]
   1ac68:	add	sp, sp, #0x90
   1ac6c:	ret
   1ac70:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac74:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac78:	add	x0, x0, #0xabe
   1ac7c:	add	x2, x2, #0xb23
   1ac80:	mov	w1, #0xa6                  	// #166
   1ac84:	mov	x3, xzr
   1ac88:	mov	x4, xzr
   1ac8c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1ac90:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac94:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ac98:	add	x0, x0, #0xabe
   1ac9c:	add	x2, x2, #0xbea
   1aca0:	mov	w1, #0x85                  	// #133
   1aca4:	mov	x3, xzr
   1aca8:	mov	x4, xzr
   1acac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1acb0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1acb4:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1acb8:	add	x0, x0, #0xabe
   1acbc:	add	x2, x2, #0xbda
   1acc0:	mov	w1, #0x84                  	// #132
   1acc4:	mov	x3, xzr
   1acc8:	mov	x4, xzr
   1accc:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1acd0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1acd4:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1acd8:	add	x0, x0, #0xabe
   1acdc:	add	x2, x2, #0xb91
   1ace0:	mov	w1, #0xbc                  	// #188
   1ace4:	mov	x3, xzr
   1ace8:	mov	x4, xzr
   1acec:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1acf0:	cmp	x2, #0x9
   1acf4:	b.cs	1ad00 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2bc8>  // b.hs, b.nlast
   1acf8:	mov	w0, wzr
   1acfc:	ret
   1ad00:	str	x30, [sp, #-16]!
   1ad04:	add	x8, x1, x2
   1ad08:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ad0c:	sub	x0, x8, #0x8
   1ad10:	add	x1, x1, #0xf01
   1ad14:	mov	w2, #0x8                   	// #8
   1ad18:	bl	be10 <__sanitizer_set_report_fd@@Base+0x255c>
   1ad1c:	cmp	w0, #0x0
   1ad20:	cset	w0, eq  // eq = none
   1ad24:	ldr	x30, [sp], #16
   1ad28:	ret
   1ad2c:	str	x30, [sp, #-32]!
   1ad30:	stp	x20, x19, [sp, #16]
   1ad34:	cbz	x1, 1adc4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c8c>
   1ad38:	ldrb	w8, [x1]
   1ad3c:	mov	x19, x1
   1ad40:	cmp	w8, #0x5f
   1ad44:	b.ne	1ad90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>  // b.any
   1ad48:	ldrb	w8, [x19, #1]
   1ad4c:	cmp	w8, #0x54
   1ad50:	b.ne	1ad90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>  // b.any
   1ad54:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1ad58:	ldr	x20, [x8, #3448]
   1ad5c:	cbz	x20, 1ad90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>
   1ad60:	mov	x0, x19
   1ad64:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1ad68:	mov	x1, x0
   1ad6c:	mov	x0, x19
   1ad70:	mov	x2, xzr
   1ad74:	mov	x3, xzr
   1ad78:	mov	w4, wzr
   1ad7c:	blr	x20
   1ad80:	cbz	x0, 1ad90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c58>
   1ad84:	ldp	x20, x19, [sp, #16]
   1ad88:	ldr	x30, [sp], #32
   1ad8c:	ret
   1ad90:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ad94:	ldr	x8, [x8, #3856]
   1ad98:	cbz	x8, 1adb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c7c>
   1ad9c:	mov	x0, x19
   1ada0:	mov	x1, xzr
   1ada4:	mov	x2, xzr
   1ada8:	mov	x3, xzr
   1adac:	bl	4740 <__cxa_demangle@plt>
   1adb0:	cbnz	x0, 1ad84 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2c4c>
   1adb4:	mov	x0, x19
   1adb8:	ldp	x20, x19, [sp, #16]
   1adbc:	ldr	x30, [sp], #32
   1adc0:	ret
   1adc4:	mov	x0, xzr
   1adc8:	ldp	x20, x19, [sp, #16]
   1adcc:	ldr	x30, [sp], #32
   1add0:	ret
   1add4:	sub	sp, sp, #0x50
   1add8:	str	x30, [sp, #32]
   1addc:	stp	x22, x21, [sp, #48]
   1ade0:	stp	x20, x19, [sp, #64]
   1ade4:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ade8:	ldr	x22, [x22, #4056]
   1adec:	ldrb	w8, [x22]
   1adf0:	cbz	w8, 1ae20 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ce8>
   1adf4:	bl	516c <__sancov_default_options@plt+0x7ec>
   1adf8:	tbz	w0, #0, 1ae4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d14>
   1adfc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae00:	ldr	x8, [x8, #3872]
   1ae04:	ldr	w8, [x8]
   1ae08:	cmp	w8, #0x2
   1ae0c:	b.cc	1aeb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>  // b.lo, b.ul, b.last
   1ae10:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ae14:	add	x0, x0, #0xc14
   1ae18:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1ae1c:	b	1aeb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   1ae20:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae24:	ldr	x8, [x8, #3872]
   1ae28:	ldr	w8, [x8]
   1ae2c:	cmp	w8, #0x2
   1ae30:	b.cc	1ae40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>  // b.lo, b.ul, b.last
   1ae34:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ae38:	add	x0, x0, #0xbfb
   1ae3c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1ae40:	mov	x19, xzr
   1ae44:	mov	x21, xzr
   1ae48:	b	1b060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f28>
   1ae4c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae50:	ldr	x8, [x8, #3832]
   1ae54:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae58:	ldr	x9, [x9, #3864]
   1ae5c:	cmp	x8, #0x0
   1ae60:	cset	w8, eq  // eq = none
   1ae64:	cmp	x9, #0x0
   1ae68:	cset	w9, eq  // eq = none
   1ae6c:	orr	w8, w9, w8
   1ae70:	tbnz	w8, #0, 1aeb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   1ae74:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae78:	ldr	x0, [x0, #3952]
   1ae7c:	mov	w1, #0x4010                	// #16400
   1ae80:	bl	501c <__sancov_default_options@plt+0x69c>
   1ae84:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae88:	add	x8, x8, #0x9d0
   1ae8c:	stp	x8, xzr, [x0]
   1ae90:	cbz	x0, 1aeb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d80>
   1ae94:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ae98:	ldr	x8, [x8, #3872]
   1ae9c:	mov	x19, x0
   1aea0:	ldr	w8, [x8]
   1aea4:	cmp	w8, #0x2
   1aea8:	b.cc	1b058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.lo, b.ul, b.last
   1aeac:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1aeb0:	add	x0, x0, #0xc43
   1aeb4:	b	1aeec <__sanitizer_get_module_and_offset_for_pc@@Base+0x2db4>
   1aeb8:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1aebc:	ldr	x20, [x20, #3952]
   1aec0:	mov	x0, x20
   1aec4:	bl	18ebc <__sanitizer_get_module_and_offset_for_pc@@Base+0xd84>
   1aec8:	cbz	x0, 1aef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2dbc>
   1aecc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1aed0:	ldr	x8, [x8, #3872]
   1aed4:	mov	x19, x0
   1aed8:	ldr	w8, [x8]
   1aedc:	cmp	w8, #0x2
   1aee0:	b.cc	1b058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>  // b.lo, b.ul, b.last
   1aee4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1aee8:	add	x0, x0, #0xc5f
   1aeec:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1aef0:	b	1b058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>
   1aef4:	ldr	x21, [x22, #8]
   1aef8:	cbz	x21, 1af14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ddc>
   1aefc:	mov	x0, x21
   1af00:	bl	68f4 <__sancov_default_options@plt+0x1f74>
   1af04:	ldrb	w8, [x21]
   1af08:	cbz	w8, 1afe0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ea8>
   1af0c:	mov	x19, x0
   1af10:	b	1af1c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2de4>
   1af14:	adrp	x19, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1af18:	add	x19, x19, #0x562
   1af1c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1af20:	add	x1, x1, #0xd0a
   1af24:	mov	x0, x19
   1af28:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1af2c:	cbz	w0, 1af90 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e58>
   1af30:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1af34:	add	x1, x1, #0xd4c
   1af38:	mov	x0, x19
   1af3c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1af40:	cbz	w0, 1b0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa8>
   1af44:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1af48:	add	x1, x1, #0xa31
   1af4c:	mov	x0, x19
   1af50:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1af54:	cbz	w0, 1b000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ec8>
   1af58:	cbnz	x21, 1b0f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fb8>
   1af5c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1af60:	add	x0, x0, #0xd0a
   1af64:	bl	96b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2400>
   1af68:	cbz	x0, 1b09c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f64>
   1af6c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1af70:	ldr	x8, [x8, #3872]
   1af74:	mov	x21, x0
   1af78:	ldr	w8, [x8]
   1af7c:	cmp	w8, #0x2
   1af80:	b.cc	1afb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>  // b.lo, b.ul, b.last
   1af84:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1af88:	add	x0, x0, #0xe46
   1af8c:	b	1afac <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e74>
   1af90:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1af94:	ldr	x8, [x8, #3872]
   1af98:	ldr	w8, [x8]
   1af9c:	cmp	w8, #0x2
   1afa0:	b.cc	1afb4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2e7c>  // b.lo, b.ul, b.last
   1afa4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1afa8:	add	x0, x0, #0xd1a
   1afac:	mov	x1, x21
   1afb0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1afb4:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1afb8:	ldr	x20, [x20, #3952]
   1afbc:	mov	w1, #0x4018                	// #16408
   1afc0:	mov	x0, x20
   1afc4:	bl	501c <__sancov_default_options@plt+0x69c>
   1afc8:	mov	x1, x21
   1afcc:	mov	x2, x20
   1afd0:	mov	x19, x0
   1afd4:	bl	19810 <__sanitizer_get_module_and_offset_for_pc@@Base+0x16d8>
   1afd8:	cbnz	x19, 1b058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f20>
   1afdc:	b	1ae44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0c>
   1afe0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1afe4:	ldr	x8, [x8, #3872]
   1afe8:	ldr	w8, [x8]
   1afec:	cmp	w8, #0x2
   1aff0:	b.cc	1ae40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>  // b.lo, b.ul, b.last
   1aff4:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1aff8:	add	x0, x0, #0xcdd
   1affc:	b	1ae3c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d04>
   1b000:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b004:	ldr	x8, [x8, #3872]
   1b008:	ldr	w8, [x8]
   1b00c:	cmp	w8, #0x2
   1b010:	b.cc	1b024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.lo, b.ul, b.last
   1b014:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b018:	add	x0, x0, #0xd83
   1b01c:	mov	x1, x21
   1b020:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1b024:	mov	w1, #0x38                  	// #56
   1b028:	mov	x0, x20
   1b02c:	bl	501c <__sancov_default_options@plt+0x69c>
   1b030:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b034:	add	x8, x8, #0xa08
   1b038:	mov	x19, x0
   1b03c:	stp	x21, x20, [x0, #16]
   1b040:	stp	xzr, xzr, [x0, #40]
   1b044:	stp	x8, xzr, [x0]
   1b048:	str	xzr, [x0, #32]!
   1b04c:	mov	w1, #0x10                  	// #16
   1b050:	bl	1b378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   1b054:	cbz	x19, 1ae44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d0c>
   1b058:	str	xzr, [x19, #8]
   1b05c:	mov	w21, #0x1                   	// #1
   1b060:	adrp	x0, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b064:	ldr	x0, [x0, #3952]
   1b068:	mov	w1, #0xf0                  	// #240
   1b06c:	bl	501c <__sancov_default_options@plt+0x69c>
   1b070:	add	x1, sp, #0x8
   1b074:	mov	x20, x0
   1b078:	stp	x21, x19, [sp, #8]
   1b07c:	str	x19, [sp, #24]
   1b080:	bl	18c44 <__sanitizer_get_module_and_offset_for_pc@@Base+0xb0c>
   1b084:	mov	x0, x20
   1b088:	ldp	x20, x19, [sp, #64]
   1b08c:	ldp	x22, x21, [sp, #48]
   1b090:	ldr	x30, [sp, #32]
   1b094:	add	sp, sp, #0x50
   1b098:	ret
   1b09c:	ldrb	w8, [x22, #16]
   1b0a0:	cbz	w8, 1ae40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2d08>
   1b0a4:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b0a8:	add	x0, x0, #0xa31
   1b0ac:	bl	96b4 <__sanitizer_install_malloc_and_free_hooks@@Base+0x2400>
   1b0b0:	mov	x21, x0
   1b0b4:	cbz	x0, 1b0d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2fa0>
   1b0b8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b0bc:	ldr	x8, [x8, #3872]
   1b0c0:	ldr	w8, [x8]
   1b0c4:	cmp	w8, #0x2
   1b0c8:	b.cc	1b024 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2eec>  // b.lo, b.ul, b.last
   1b0cc:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b0d0:	add	x0, x0, #0xe6a
   1b0d4:	b	1b01c <__sanitizer_get_module_and_offset_for_pc@@Base+0x2ee4>
   1b0d8:	mov	x19, xzr
   1b0dc:	b	1b060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x2f28>
   1b0e0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b0e4:	add	x0, x0, #0xd51
   1b0e8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1b0ec:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1b0f0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b0f4:	add	x0, x0, #0xdaf
   1b0f8:	mov	x1, x21
   1b0fc:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1b100:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1b104:	str	x30, [sp, #-16]!
   1b108:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1b10c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b110:	add	x1, x1, #0xed9
   1b114:	mov	x0, xzr
   1b118:	bl	46b0 <dlsym@plt>
   1b11c:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1b120:	str	x0, [x8, #3448]
   1b124:	ldr	x30, [sp], #16
   1b128:	b	46e0 <dlerror@plt>
   1b12c:	str	x30, [sp, #-16]!
   1b130:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b134:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b138:	add	x0, x0, #0xc7f
   1b13c:	add	x2, x2, #0xb23
   1b140:	mov	w1, #0x5c                  	// #92
   1b144:	mov	x3, xzr
   1b148:	mov	x4, xzr
   1b14c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b150:	str	x30, [sp, #-16]!
   1b154:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b158:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b15c:	add	x0, x0, #0xc7f
   1b160:	add	x2, x2, #0xb23
   1b164:	mov	w1, #0x62                  	// #98
   1b168:	mov	x3, xzr
   1b16c:	mov	x4, xzr
   1b170:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b174:	stp	x30, x19, [sp, #-16]!
   1b178:	mov	x19, x1
   1b17c:	bl	1a530 <__sanitizer_get_module_and_offset_for_pc@@Base+0x23f8>
   1b180:	tbz	w0, #0, 1b1b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3078>
   1b184:	ldrb	w8, [x19]
   1b188:	cbz	w8, 1b1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x306c>
   1b18c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b190:	add	x0, x19, #0x1
   1b194:	add	x1, x1, #0xf01
   1b198:	bl	c704 <__sanitizer_set_report_fd@@Base+0x2e50>
   1b19c:	cbz	x0, 1b1bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3084>
   1b1a0:	strb	wzr, [x0]
   1b1a4:	mov	w0, #0x1                   	// #1
   1b1a8:	ldp	x30, x19, [sp], #16
   1b1ac:	ret
   1b1b0:	mov	w0, wzr
   1b1b4:	ldp	x30, x19, [sp], #16
   1b1b8:	ret
   1b1bc:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b1c0:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b1c4:	add	x0, x0, #0xabe
   1b1c8:	add	x2, x2, #0xee8
   1b1cc:	mov	w1, #0xeb                  	// #235
   1b1d0:	mov	x3, xzr
   1b1d4:	mov	x4, xzr
   1b1d8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b1dc:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b1e0:	add	x8, x8, #0xefb
   1b1e4:	stp	x1, x8, [x2]
   1b1e8:	ldr	x8, [x0, #16424]
   1b1ec:	stp	x8, xzr, [x2, #16]
   1b1f0:	ret
   1b1f4:	stp	x30, x21, [sp, #-32]!
   1b1f8:	stp	x20, x19, [sp, #16]
   1b1fc:	ldp	x8, x1, [x2, #16]
   1b200:	add	x20, x0, #0x10
   1b204:	mov	x19, x2
   1b208:	mov	w3, #0x4000                	// #16384
   1b20c:	mov	x0, x8
   1b210:	mov	x2, x20
   1b214:	bl	4750 <__sanitizer_symbolize_code@plt>
   1b218:	mov	w21, w0
   1b21c:	tbz	w0, #0, 1b22c <__sanitizer_get_module_and_offset_for_pc@@Base+0x30f4>
   1b220:	mov	x0, x20
   1b224:	mov	x1, x19
   1b228:	bl	198c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   1b22c:	ldp	x20, x19, [sp, #16]
   1b230:	and	w0, w21, #0x1
   1b234:	ldp	x30, x21, [sp], #32
   1b238:	ret
   1b23c:	str	x30, [sp, #-48]!
   1b240:	stp	x22, x21, [sp, #16]
   1b244:	stp	x20, x19, [sp, #32]
   1b248:	mov	x20, x1
   1b24c:	ldp	x8, x1, [x2]
   1b250:	add	x22, x0, #0x10
   1b254:	mov	x19, x2
   1b258:	mov	w3, #0x4000                	// #16384
   1b25c:	mov	x0, x8
   1b260:	mov	x2, x22
   1b264:	bl	46c0 <__sanitizer_symbolize_data@plt>
   1b268:	mov	w21, w0
   1b26c:	tbz	w0, #0, 1b290 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3158>
   1b270:	mov	x0, x22
   1b274:	mov	x1, x19
   1b278:	bl	19bb0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1a78>
   1b27c:	ldr	x8, [x19, #8]
   1b280:	ldr	x9, [x19, #48]
   1b284:	sub	x8, x20, x8
   1b288:	add	x8, x8, x9
   1b28c:	str	x8, [x19, #48]
   1b290:	and	w0, w21, #0x1
   1b294:	ldp	x20, x19, [sp, #32]
   1b298:	ldp	x22, x21, [sp, #16]
   1b29c:	ldr	x30, [sp], #48
   1b2a0:	ret
   1b2a4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b2a8:	ldr	x8, [x8, #3888]
   1b2ac:	cbz	x8, 1b2bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3184>
   1b2b0:	str	x30, [sp, #-16]!
   1b2b4:	bl	4790 <__sanitizer_symbolize_flush@plt>
   1b2b8:	ldr	x30, [sp], #16
   1b2bc:	ret
   1b2c0:	stp	x30, x21, [sp, #-32]!
   1b2c4:	stp	x20, x19, [sp, #16]
   1b2c8:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b2cc:	ldr	x8, [x8, #3784]
   1b2d0:	mov	x19, x1
   1b2d4:	cbz	x8, 1b324 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31ec>
   1b2d8:	mov	w20, #0x400                 	// #1024
   1b2dc:	mov	x0, x20
   1b2e0:	mov	x1, xzr
   1b2e4:	mov	x2, xzr
   1b2e8:	bl	4b90 <__sancov_default_options@plt+0x210>
   1b2ec:	mov	x21, x0
   1b2f0:	mov	x0, x19
   1b2f4:	mov	x1, x21
   1b2f8:	mov	w2, w20
   1b2fc:	bl	4670 <__sanitizer_symbolize_demangle@plt>
   1b300:	sxtw	x8, w0
   1b304:	cmp	x20, x8
   1b308:	b.cs	1b334 <__sanitizer_get_module_and_offset_for_pc@@Base+0x31fc>  // b.hs, b.nlast
   1b30c:	mov	x0, x21
   1b310:	mov	x1, xzr
   1b314:	add	x20, x8, #0x1
   1b318:	bl	4e74 <__sancov_default_options@plt+0x4f4>
   1b31c:	cmp	x20, #0x20, lsl #12
   1b320:	b.ls	1b2dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x31a4>  // b.plast
   1b324:	mov	x0, x19
   1b328:	ldp	x20, x19, [sp, #16]
   1b32c:	ldp	x30, x21, [sp], #32
   1b330:	ret
   1b334:	mov	x19, x21
   1b338:	mov	x0, x19
   1b33c:	ldp	x20, x19, [sp, #16]
   1b340:	ldp	x30, x21, [sp], #32
   1b344:	ret
   1b348:	stp	x30, x19, [sp, #-16]!
   1b34c:	mov	x19, x2
   1b350:	ldp	x1, x2, [x2, #16]
   1b354:	bl	1b45c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3324>
   1b358:	cbz	x0, 1b368 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3230>
   1b35c:	mov	x1, x19
   1b360:	bl	198c4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x178c>
   1b364:	mov	w0, #0x1                   	// #1
   1b368:	ldp	x30, x19, [sp], #16
   1b36c:	ret
   1b370:	mov	w0, wzr
   1b374:	ret
   1b378:	stp	x30, x21, [sp, #-32]!
   1b37c:	stp	x20, x19, [sp, #16]
   1b380:	cbz	x1, 1b410 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32d8>
   1b384:	ldr	x3, [x0, #16]
   1b388:	mov	x20, x1
   1b38c:	mov	x19, x0
   1b390:	cmp	x3, x1
   1b394:	b.hi	1b430 <__sanitizer_get_module_and_offset_for_pc@@Base+0x32f8>  // b.pmore
   1b398:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b39c:	ldr	x21, [x21, #4016]
   1b3a0:	ldr	x0, [x21]
   1b3a4:	cbnz	x0, 1b3b0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3278>
   1b3a8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1b3ac:	str	x0, [x21]
   1b3b0:	sub	x8, x0, #0x1
   1b3b4:	tst	x0, x8
   1b3b8:	b.ne	1b44c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3314>  // b.any
   1b3bc:	lsl	x8, x20, #3
   1b3c0:	add	x8, x8, x0
   1b3c4:	sub	x8, x8, #0x1
   1b3c8:	neg	x9, x0
   1b3cc:	and	x20, x8, x9
   1b3d0:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b3d4:	add	x1, x1, #0x2c0
   1b3d8:	mov	x0, x20
   1b3dc:	mov	w2, wzr
   1b3e0:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1b3e4:	ldr	x8, [x19, #16]
   1b3e8:	ldr	x1, [x19]
   1b3ec:	mov	x21, x0
   1b3f0:	lsl	x2, x8, #3
   1b3f4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1b3f8:	ldp	x0, x1, [x19]
   1b3fc:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1b400:	stp	x21, x20, [x19]
   1b404:	ldp	x20, x19, [sp, #16]
   1b408:	ldp	x30, x21, [sp], #32
   1b40c:	ret
   1b410:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b414:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b418:	add	x0, x0, #0xbf8
   1b41c:	add	x2, x2, #0x289
   1b420:	mov	w1, #0x20b                 	// #523
   1b424:	mov	x3, xzr
   1b428:	mov	x4, xzr
   1b42c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b430:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b434:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b438:	add	x0, x0, #0xbf8
   1b43c:	add	x2, x2, #0x2a2
   1b440:	mov	w1, #0x20c                 	// #524
   1b444:	mov	x4, x20
   1b448:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b44c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b450:	add	x0, x0, #0x121
   1b454:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1b458:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1b45c:	sub	sp, sp, #0x80
   1b460:	stp	x30, x23, [sp, #80]
   1b464:	stp	x22, x21, [sp, #96]
   1b468:	stp	x20, x19, [sp, #112]
   1b46c:	str	xzr, [sp, #72]
   1b470:	ldr	x8, [x0, #48]
   1b474:	mov	x19, x2
   1b478:	mov	x20, x1
   1b47c:	mov	x22, x0
   1b480:	add	x21, x0, #0x20
   1b484:	cbz	x8, 1b4d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x339c>
   1b488:	mov	x23, xzr
   1b48c:	ldr	x8, [x21]
   1b490:	mov	x0, x20
   1b494:	ldr	x8, [x8, x23, lsl #3]
   1b498:	ldr	x1, [x8, #16424]
   1b49c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b4a0:	cbz	w0, 1b4b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3380>
   1b4a4:	ldr	x8, [x22, #48]
   1b4a8:	add	x23, x23, #0x1
   1b4ac:	cmp	x23, x8
   1b4b0:	b.cc	1b48c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3354>  // b.lo, b.ul, b.last
   1b4b4:	b	1b4d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x339c>
   1b4b8:	ldr	x4, [x22, #48]
   1b4bc:	cmp	x4, x23
   1b4c0:	b.ls	1b588 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3450>  // b.plast
   1b4c4:	ldr	x8, [x21]
   1b4c8:	ldr	x8, [x8, x23, lsl #3]
   1b4cc:	str	x8, [sp, #72]
   1b4d0:	cbnz	x8, 1b51c <__sanitizer_get_module_and_offset_for_pc@@Base+0x33e4>
   1b4d4:	ldr	x0, [x22, #24]
   1b4d8:	mov	w1, #0x4030                	// #16432
   1b4dc:	bl	501c <__sancov_default_options@plt+0x69c>
   1b4e0:	ldr	x1, [x22, #16]
   1b4e4:	mov	w2, wzr
   1b4e8:	mov	x22, x0
   1b4ec:	bl	1a344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x220c>
   1b4f0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b4f4:	add	x8, x8, #0x9a0
   1b4f8:	mov	x0, x20
   1b4fc:	str	x8, [x22]
   1b500:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   1b504:	str	x0, [x22, #16424]
   1b508:	add	x1, sp, #0x48
   1b50c:	mov	x0, x21
   1b510:	str	x22, [sp, #72]
   1b514:	bl	1b5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x346c>
   1b518:	ldr	x8, [sp, #72]
   1b51c:	ldr	x1, [x8, #16424]
   1b520:	mov	x0, x20
   1b524:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b528:	cbnz	w0, 1b568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3430>
   1b52c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b530:	add	x2, x2, #0xecc
   1b534:	add	x0, sp, #0x8
   1b538:	mov	w1, #0x40                  	// #64
   1b53c:	mov	x4, #0xffffffffffffffff    	// #-1
   1b540:	mov	x3, x19
   1b544:	bl	10020 <__sanitizer_on_print@@Base+0x120>
   1b548:	ldr	x0, [sp, #72]
   1b54c:	add	x1, sp, #0x8
   1b550:	bl	1a1b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x207c>
   1b554:	ldp	x20, x19, [sp, #112]
   1b558:	ldp	x22, x21, [sp, #96]
   1b55c:	ldp	x30, x23, [sp, #80]
   1b560:	add	sp, sp, #0x80
   1b564:	ret
   1b568:	sxtw	x4, w0
   1b56c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b570:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b574:	add	x0, x0, #0xabe
   1b578:	add	x2, x2, #0xe88
   1b57c:	mov	w1, #0x129                 	// #297
   1b580:	mov	x3, xzr
   1b584:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b588:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b58c:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b590:	add	x0, x0, #0xbf8
   1b594:	add	x2, x2, #0x7fd
   1b598:	mov	w1, #0x1c5                 	// #453
   1b59c:	mov	x3, x23
   1b5a0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b5a4:	str	x30, [sp, #-32]!
   1b5a8:	stp	x20, x19, [sp, #16]
   1b5ac:	ldp	x8, x3, [x0, #8]
   1b5b0:	lsr	x4, x8, #3
   1b5b4:	cmp	x3, x4
   1b5b8:	b.hi	1b640 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3508>  // b.pmore
   1b5bc:	mov	x19, x0
   1b5c0:	mov	x20, x1
   1b5c4:	b.ne	1b61c <__sanitizer_get_module_and_offset_for_pc@@Base+0x34e4>  // b.any
   1b5c8:	adds	x3, x3, #0x1
   1b5cc:	b.cs	1b658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3520>  // b.hs, b.nlast
   1b5d0:	sub	x8, x3, #0x1
   1b5d4:	tst	x3, x8
   1b5d8:	b.ne	1b5e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x34ac>  // b.any
   1b5dc:	mov	x8, x3
   1b5e0:	b	1b60c <__sanitizer_get_module_and_offset_for_pc@@Base+0x34d4>
   1b5e4:	clz	x8, x3
   1b5e8:	eor	x9, x8, #0x3f
   1b5ec:	mov	w8, #0x2                   	// #2
   1b5f0:	lsl	x8, x8, x9
   1b5f4:	cmp	x8, x3
   1b5f8:	b.ls	1b678 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3540>  // b.plast
   1b5fc:	mov	w10, #0x1                   	// #1
   1b600:	lsl	x4, x10, x9
   1b604:	cmp	x4, x3
   1b608:	b.cs	1b694 <__sanitizer_get_module_and_offset_for_pc@@Base+0x355c>  // b.hs, b.nlast
   1b60c:	mov	x0, x19
   1b610:	mov	x1, x8
   1b614:	bl	1b378 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3240>
   1b618:	ldr	x3, [x19, #16]
   1b61c:	add	x9, x3, #0x1
   1b620:	ldr	x8, [x19]
   1b624:	str	x9, [x19, #16]
   1b628:	mov	x1, x20
   1b62c:	ldp	x20, x19, [sp, #16]
   1b630:	add	x0, x8, x3, lsl #3
   1b634:	mov	w2, #0x8                   	// #8
   1b638:	ldr	x30, [sp], #32
   1b63c:	b	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1b640:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b644:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1b648:	add	x0, x0, #0xbf8
   1b64c:	add	x2, x2, #0x44f
   1b650:	mov	w1, #0x1cd                 	// #461
   1b654:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b658:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b65c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1b660:	add	x0, x0, #0xbf8
   1b664:	add	x2, x2, #0x46b
   1b668:	mov	w1, #0x186                 	// #390
   1b66c:	mov	x3, xzr
   1b670:	mov	x4, xzr
   1b674:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b678:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b67c:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1b680:	add	x0, x0, #0xbf8
   1b684:	add	x2, x2, #0x47b
   1b688:	mov	w1, #0x18a                 	// #394
   1b68c:	mov	x4, x8
   1b690:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b694:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1b698:	adrp	x2, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1b69c:	add	x0, x0, #0xbf8
   1b6a0:	add	x2, x2, #0x49d
   1b6a4:	mov	w1, #0x18b                 	// #395
   1b6a8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1b6ac:	sub	sp, sp, #0x50
   1b6b0:	str	x30, [sp, #32]
   1b6b4:	stp	x22, x21, [sp, #48]
   1b6b8:	stp	x20, x19, [sp, #64]
   1b6bc:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b6c0:	ldr	x22, [x22, #4056]
   1b6c4:	ldrb	w8, [x22, #60]
   1b6c8:	cbz	w8, 1b790 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3658>
   1b6cc:	mov	x20, x1
   1b6d0:	mov	x21, x0
   1b6d4:	mov	x0, sp
   1b6d8:	mov	w1, #0x400                 	// #1024
   1b6dc:	mov	x19, x2
   1b6e0:	stp	xzr, xzr, [sp, #8]
   1b6e4:	str	xzr, [sp]
   1b6e8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1b6ec:	ldr	x8, [sp, #16]
   1b6f0:	cmp	x8, #0x3ff
   1b6f4:	b.hi	1b72c <__sanitizer_get_module_and_offset_for_pc@@Base+0x35f4>  // b.pmore
   1b6f8:	ldr	x9, [sp, #8]
   1b6fc:	cmp	x9, #0x3ff
   1b700:	b.hi	1b714 <__sanitizer_get_module_and_offset_for_pc@@Base+0x35dc>  // b.pmore
   1b704:	mov	x0, sp
   1b708:	mov	w1, #0x400                 	// #1024
   1b70c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1b710:	ldr	x8, [sp, #16]
   1b714:	ldr	x9, [sp]
   1b718:	mov	w10, #0x400                 	// #1024
   1b71c:	sub	x2, x10, x8
   1b720:	mov	w1, wzr
   1b724:	add	x0, x9, x8
   1b728:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1b72c:	adrp	x8, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b730:	ldr	q0, [x8, #320]
   1b734:	ldr	x8, [sp]
   1b738:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1b73c:	add	x1, x1, #0x1d0
   1b740:	mov	x0, sp
   1b744:	mov	x2, x21
   1b748:	str	q0, [sp, #16]
   1b74c:	strb	wzr, [x8]
   1b750:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1b754:	ldrb	w4, [x22, #189]
   1b758:	ldr	x5, [x22, #24]
   1b75c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b760:	adrp	x6, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b764:	add	x1, x1, #0xf0a
   1b768:	add	x6, x6, #0x562
   1b76c:	mov	x0, sp
   1b770:	mov	w2, wzr
   1b774:	mov	x3, x20
   1b778:	bl	181bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x84>
   1b77c:	ldr	x0, [sp]
   1b780:	mov	x1, x19
   1b784:	bl	6918 <__sancov_default_options@plt+0x1f98>
   1b788:	ldp	x0, x1, [sp]
   1b78c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1b790:	ldp	x20, x19, [sp, #64]
   1b794:	ldp	x22, x21, [sp, #48]
   1b798:	ldr	x30, [sp, #32]
   1b79c:	add	sp, sp, #0x50
   1b7a0:	ret
   1b7a4:	str	x30, [sp, #-32]!
   1b7a8:	stp	x20, x19, [sp, #16]
   1b7ac:	ldr	x19, [x0]
   1b7b0:	mov	x20, x0
   1b7b4:	mov	w8, #0x1                   	// #1
   1b7b8:	ldaxrb	w9, [x19]
   1b7bc:	stlxrb	w10, w8, [x19]
   1b7c0:	cbnz	w10, 1b7b8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3680>
   1b7c4:	cbz	w9, 1b7d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3698>
   1b7c8:	mov	x0, x19
   1b7cc:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1b7d0:	mov	x0, x20
   1b7d4:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1b7d8:	ldr	w0, [x20, #8]
   1b7dc:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1b7e0:	dmb	ish
   1b7e4:	strb	wzr, [x19]
   1b7e8:	ldp	x20, x19, [sp, #16]
   1b7ec:	and	w0, w0, #0x1
   1b7f0:	ldr	x30, [sp], #32
   1b7f4:	ret
   1b7f8:	str	x30, [sp, #-32]!
   1b7fc:	stp	x20, x19, [sp, #16]
   1b800:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b804:	ldr	x8, [x8, #4056]
   1b808:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b80c:	add	x1, x1, #0xf10
   1b810:	ldr	x19, [x8, #112]
   1b814:	mov	x0, x19
   1b818:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b81c:	cbz	w0, 1b844 <__sanitizer_get_module_and_offset_for_pc@@Base+0x370c>
   1b820:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b824:	add	x1, x1, #0x838
   1b828:	mov	x0, x19
   1b82c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b830:	cbz	w0, 1b854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x371c>
   1b834:	mov	w0, wzr
   1b838:	ldp	x20, x19, [sp, #16]
   1b83c:	ldr	x30, [sp], #32
   1b840:	ret
   1b844:	mov	w0, #0x1                   	// #1
   1b848:	ldp	x20, x19, [sp, #16]
   1b84c:	ldr	x30, [sp], #32
   1b850:	ret
   1b854:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b858:	ldr	x20, [x20, #3960]
   1b85c:	mov	w8, #0x1                   	// #1
   1b860:	ldr	x19, [x20]
   1b864:	ldaxrb	w9, [x19]
   1b868:	stlxrb	w10, w8, [x19]
   1b86c:	cbnz	w10, 1b864 <__sanitizer_get_module_and_offset_for_pc@@Base+0x372c>
   1b870:	cbz	w9, 1b87c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3744>
   1b874:	mov	x0, x19
   1b878:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1b87c:	mov	x0, x20
   1b880:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1b884:	ldr	w0, [x20, #8]
   1b888:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1b88c:	dmb	ish
   1b890:	strb	wzr, [x19]
   1b894:	and	w0, w0, #0x1
   1b898:	ldp	x20, x19, [sp, #16]
   1b89c:	ldr	x30, [sp], #32
   1b8a0:	ret
   1b8a4:	stp	x30, x21, [sp, #-32]!
   1b8a8:	stp	x20, x19, [sp, #16]
   1b8ac:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b8b0:	ldr	x8, [x8, #4056]
   1b8b4:	ldrb	w8, [x8, #60]
   1b8b8:	cbz	w8, 1b908 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37d0>
   1b8bc:	ldr	w8, [x1, #8]
   1b8c0:	mov	x20, x0
   1b8c4:	cbz	w8, 1b914 <__sanitizer_get_module_and_offset_for_pc@@Base+0x37dc>
   1b8c8:	ldr	x8, [x1]
   1b8cc:	mov	x19, x2
   1b8d0:	ldr	x8, [x8]
   1b8d4:	sub	x21, x8, #0x4
   1b8d8:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1b8dc:	mov	x1, x21
   1b8e0:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1b8e4:	mov	x21, x0
   1b8e8:	add	x1, x0, #0x8
   1b8ec:	mov	x0, x20
   1b8f0:	mov	x2, x19
   1b8f4:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1b8f8:	ldp	x20, x19, [sp, #16]
   1b8fc:	mov	x0, x21
   1b900:	ldp	x30, x21, [sp], #32
   1b904:	b	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1b908:	ldp	x20, x19, [sp, #16]
   1b90c:	ldp	x30, x21, [sp], #32
   1b910:	ret
   1b914:	mov	x0, x20
   1b918:	ldp	x20, x19, [sp, #16]
   1b91c:	mov	x1, xzr
   1b920:	ldp	x30, x21, [sp], #32
   1b924:	b	6918 <__sancov_default_options@plt+0x1f98>
   1b928:	mvn	w8, w0
   1b92c:	tst	w8, #0x6
   1b930:	b.ne	1bb98 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a60>  // b.any
   1b934:	sub	sp, sp, #0x60
   1b938:	stp	x29, x30, [sp, #48]
   1b93c:	stp	x22, x21, [sp, #64]
   1b940:	stp	x20, x19, [sp, #80]
   1b944:	add	x29, sp, #0x30
   1b948:	mov	x19, x30
   1b94c:	bl	1c388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   1b950:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b954:	ldr	x22, [x22, #4056]
   1b958:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1b95c:	add	x1, x1, #0xf10
   1b960:	ldr	x20, [x22, #112]
   1b964:	mov	x0, x20
   1b968:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b96c:	cbz	w0, 1b98c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3854>
   1b970:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1b974:	add	x1, x1, #0x838
   1b978:	mov	x0, x20
   1b97c:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1b980:	cbz	w0, 1b994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x385c>
   1b984:	mov	w21, wzr
   1b988:	b	1b9d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   1b98c:	mov	w21, #0x1                   	// #1
   1b990:	b	1b9d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38a0>
   1b994:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1b998:	ldr	x21, [x21, #3960]
   1b99c:	mov	w8, #0x1                   	// #1
   1b9a0:	ldr	x20, [x21]
   1b9a4:	ldaxrb	w9, [x20]
   1b9a8:	stlxrb	w10, w8, [x20]
   1b9ac:	cbnz	w10, 1b9a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x386c>
   1b9b0:	cbz	w9, 1b9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3884>
   1b9b4:	mov	x0, x20
   1b9b8:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1b9bc:	mov	x0, x21
   1b9c0:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1b9c4:	ldr	w0, [x21, #8]
   1b9c8:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1b9cc:	dmb	ish
   1b9d0:	strb	wzr, [x20]
   1b9d4:	and	w21, w0, #0x1
   1b9d8:	add	x0, sp, #0x18
   1b9dc:	mov	w1, #0x1                   	// #1
   1b9e0:	stp	xzr, xzr, [sp, #32]
   1b9e4:	str	xzr, [sp, #24]
   1b9e8:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1b9ec:	ldr	x8, [sp, #40]
   1b9f0:	cbnz	x8, 1ba38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3900>
   1b9f4:	ldr	x8, [sp, #32]
   1b9f8:	cmp	x8, #0x817
   1b9fc:	b.hi	1ba14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38dc>  // b.pmore
   1ba00:	add	x0, sp, #0x18
   1ba04:	mov	w1, #0x1                   	// #1
   1ba08:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1ba0c:	ldr	x8, [sp, #40]
   1ba10:	b	1ba18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x38e0>
   1ba14:	mov	x8, xzr
   1ba18:	ldr	x9, [sp, #24]
   1ba1c:	mov	w11, #0x1                   	// #1
   1ba20:	mov	w10, #0x818                 	// #2072
   1ba24:	sub	x11, x11, x8
   1ba28:	madd	x0, x8, x10, x9
   1ba2c:	mul	x2, x11, x10
   1ba30:	mov	w1, wzr
   1ba34:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1ba38:	ldr	x20, [sp, #24]
   1ba3c:	mov	w8, #0x1                   	// #1
   1ba40:	str	x8, [sp, #40]
   1ba44:	add	x8, x20, #0x10
   1ba48:	stp	x8, xzr, [x20]
   1ba4c:	str	xzr, [x20, #2064]
   1ba50:	ldrb	w8, [x22, #33]
   1ba54:	stp	xzr, xzr, [sp, #8]
   1ba58:	cbz	w8, 1ba8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3954>
   1ba5c:	add	x1, sp, #0x10
   1ba60:	add	x2, sp, #0x8
   1ba64:	mov	w0, wzr
   1ba68:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   1ba6c:	ldp	x6, x5, [sp, #8]
   1ba70:	mov	w1, #0x100                 	// #256
   1ba74:	mov	w7, #0x1                   	// #1
   1ba78:	mov	x0, x20
   1ba7c:	mov	x2, x19
   1ba80:	mov	x3, x29
   1ba84:	mov	x4, xzr
   1ba88:	b	1baac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3974>
   1ba8c:	mov	w1, #0x100                 	// #256
   1ba90:	mov	x0, x20
   1ba94:	mov	x2, x19
   1ba98:	mov	x3, xzr
   1ba9c:	mov	x4, xzr
   1baa0:	mov	x5, xzr
   1baa4:	mov	x6, xzr
   1baa8:	mov	w7, wzr
   1baac:	bl	17d78 <__sanitizer_cov_pcs_init@@Base+0x1694>
   1bab0:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bab4:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bab8:	add	x8, x8, #0x322
   1babc:	add	x9, x9, #0x562
   1bac0:	cmp	w21, #0x0
   1bac4:	adrp	x19, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bac8:	csel	x1, x9, x8, eq  // eq = none
   1bacc:	add	x19, x19, #0x338
   1bad0:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bad4:	add	x8, x8, #0x32c
   1bad8:	mov	x0, x19
   1badc:	csel	x21, x9, x8, eq  // eq = none
   1bae0:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1bae4:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bae8:	ldr	x8, [x8, #4024]
   1baec:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1baf0:	add	x0, x0, #0xf17
   1baf4:	ldr	x1, [x8]
   1baf8:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1bafc:	mov	x0, x19
   1bb00:	mov	x1, x21
   1bb04:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1bb08:	mov	x0, x20
   1bb0c:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   1bb10:	ldrb	w8, [x22, #60]
   1bb14:	cbz	w8, 1bb6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a34>
   1bb18:	ldr	w8, [x20, #8]
   1bb1c:	cbz	w8, 1bb5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a24>
   1bb20:	ldr	x8, [x20]
   1bb24:	ldr	x8, [x8]
   1bb28:	sub	x19, x8, #0x4
   1bb2c:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1bb30:	mov	x1, x19
   1bb34:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1bb38:	mov	x19, x0
   1bb3c:	add	x1, x0, #0x8
   1bb40:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bb44:	add	x0, x0, #0xf44
   1bb48:	mov	x2, xzr
   1bb4c:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1bb50:	mov	x0, x19
   1bb54:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1bb58:	b	1bb6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a34>
   1bb5c:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bb60:	add	x0, x0, #0xf44
   1bb64:	mov	x1, xzr
   1bb68:	bl	6918 <__sancov_default_options@plt+0x1f98>
   1bb6c:	ldp	x0, x1, [sp, #24]
   1bb70:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1bb74:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1bb78:	add	x8, x8, #0xd80
   1bb7c:	dmb	ish
   1bb80:	strb	wzr, [x8]
   1bb84:	str	xzr, [x8, #8]
   1bb88:	ldp	x20, x19, [sp, #80]
   1bb8c:	ldp	x22, x21, [sp, #64]
   1bb90:	ldp	x29, x30, [sp, #48]
   1bb94:	add	sp, sp, #0x60
   1bb98:	ret
   1bb9c:	stp	x30, x19, [sp, #-16]!
   1bba0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bba4:	ldr	x8, [x8, #4024]
   1bba8:	ldr	x19, [x8]
   1bbac:	mov	x0, x19
   1bbb0:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1bbb4:	mov	x1, x0
   1bbb8:	mov	x0, x19
   1bbbc:	bl	90e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e2c>
   1bbc0:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bbc4:	add	x0, x0, #0x1de
   1bbc8:	mov	w1, #0xe                   	// #14
   1bbcc:	ldp	x30, x19, [sp], #16
   1bbd0:	b	90e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e2c>
   1bbd4:	sub	sp, sp, #0xe0
   1bbd8:	stp	x29, x30, [sp, #128]
   1bbdc:	stp	x28, x27, [sp, #144]
   1bbe0:	stp	x26, x25, [sp, #160]
   1bbe4:	stp	x24, x23, [sp, #176]
   1bbe8:	stp	x22, x21, [sp, #192]
   1bbec:	stp	x20, x19, [sp, #208]
   1bbf0:	mov	x25, x3
   1bbf4:	mov	x21, x2
   1bbf8:	mov	w23, w1
   1bbfc:	mov	x19, x0
   1bc00:	bl	14b24 <__sanitizer_sandbox_on_notify@@Base+0xff4>
   1bc04:	adrp	x29, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bc08:	ldr	x29, [x29, #4056]
   1bc0c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bc10:	mov	w24, w0
   1bc14:	add	x1, x1, #0xf10
   1bc18:	ldr	x20, [x29, #112]
   1bc1c:	mov	x0, x20
   1bc20:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1bc24:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bc28:	ldr	x26, [x26, #4024]
   1bc2c:	tbz	w24, #0, 1bca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b68>
   1bc30:	cbz	w0, 1bc8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b54>
   1bc34:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1bc38:	add	x1, x1, #0x838
   1bc3c:	mov	x0, x20
   1bc40:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1bc44:	cbnz	w0, 1bcc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b88>
   1bc48:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bc4c:	ldr	x24, [x24, #3960]
   1bc50:	mov	w8, #0x1                   	// #1
   1bc54:	ldr	x20, [x24]
   1bc58:	ldaxrb	w9, [x20]
   1bc5c:	stlxrb	w10, w8, [x20]
   1bc60:	cbnz	w10, 1bc58 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b20>
   1bc64:	cbz	w9, 1bc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b38>
   1bc68:	mov	x0, x20
   1bc6c:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1bc70:	mov	x0, x24
   1bc74:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1bc78:	ldr	w0, [x24, #8]
   1bc7c:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1bc80:	dmb	ish
   1bc84:	strb	wzr, [x20]
   1bc88:	tbz	w0, #0, 1bcc0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b88>
   1bc8c:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bc90:	adrp	x20, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bc94:	add	x1, x1, #0x322
   1bc98:	add	x20, x20, #0x32c
   1bc9c:	b	1bccc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3b94>
   1bca0:	cbz	w0, 1bd48 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c10>
   1bca4:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1bca8:	add	x1, x1, #0x838
   1bcac:	mov	x0, x20
   1bcb0:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1bcb4:	cbz	w0, 1bd50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c18>
   1bcb8:	mov	w20, wzr
   1bcbc:	b	1bd94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   1bcc0:	adrp	x20, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bcc4:	add	x20, x20, #0x562
   1bcc8:	mov	x1, x20
   1bccc:	adrp	x24, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bcd0:	add	x24, x24, #0x338
   1bcd4:	mov	x0, x24
   1bcd8:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1bcdc:	ldr	x1, [x26]
   1bce0:	ldp	x3, x4, [x19, #16]
   1bce4:	ldp	x6, x5, [x19, #32]
   1bce8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bcec:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bcf0:	add	x0, x0, #0xf5c
   1bcf4:	add	x2, x2, #0x219
   1bcf8:	mov	w7, w23
   1bcfc:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1bd00:	mov	x0, x24
   1bd04:	mov	x1, x20
   1bd08:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1bd0c:	add	x0, sp, #0x10
   1bd10:	mov	w1, #0x1                   	// #1
   1bd14:	stp	xzr, xzr, [sp, #24]
   1bd18:	str	xzr, [sp, #16]
   1bd1c:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1bd20:	ldr	x8, [sp, #32]
   1bd24:	cbnz	x8, 1bfcc <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e94>
   1bd28:	ldr	x8, [sp, #24]
   1bd2c:	cmp	x8, #0x817
   1bd30:	b.hi	1bfa8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e70>  // b.pmore
   1bd34:	add	x0, sp, #0x10
   1bd38:	mov	w1, #0x1                   	// #1
   1bd3c:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1bd40:	ldr	x8, [sp, #32]
   1bd44:	b	1bfac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e74>
   1bd48:	mov	w20, #0x1                   	// #1
   1bd4c:	b	1bd94 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c5c>
   1bd50:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1bd54:	ldr	x24, [x24, #3960]
   1bd58:	mov	w8, #0x1                   	// #1
   1bd5c:	ldr	x20, [x24]
   1bd60:	ldaxrb	w9, [x20]
   1bd64:	stlxrb	w10, w8, [x20]
   1bd68:	cbnz	w10, 1bd60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c28>
   1bd6c:	cbz	w9, 1bd78 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c40>
   1bd70:	mov	x0, x20
   1bd74:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1bd78:	mov	x0, x24
   1bd7c:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1bd80:	ldr	w0, [x24, #8]
   1bd84:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1bd88:	dmb	ish
   1bd8c:	strb	wzr, [x20]
   1bd90:	and	w20, w0, #0x1
   1bd94:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bd98:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bd9c:	add	x8, x8, #0x322
   1bda0:	add	x22, x22, #0x562
   1bda4:	cmp	w20, #0x0
   1bda8:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bdac:	csel	x1, x22, x8, eq  // eq = none
   1bdb0:	add	x0, x0, #0x338
   1bdb4:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1bdb8:	mov	x0, x19
   1bdbc:	bl	f6e0 <__sanitizer_set_report_fd@@Base+0x5e2c>
   1bdc0:	ldrb	w8, [x19, #48]
   1bdc4:	mov	x24, x0
   1bdc8:	cbz	w8, 1bdd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3c9c>
   1bdcc:	ldrb	w8, [x19, #56]
   1bdd0:	cbz	w8, 1bdf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3cc0>
   1bdd4:	ldr	x1, [x26]
   1bdd8:	ldp	x3, x4, [x19, #16]
   1bddc:	ldp	x6, x5, [x19, #32]
   1bde0:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1bde4:	add	x0, x0, #0xfcb
   1bde8:	mov	x2, x24
   1bdec:	mov	w7, w23
   1bdf0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1bdf4:	b	1be18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ce0>
   1bdf8:	ldr	x1, [x26]
   1bdfc:	ldp	x5, x4, [x19, #32]
   1be00:	ldr	x3, [x19, #24]
   1be04:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1be08:	add	x0, x0, #0xf91
   1be0c:	mov	x2, x24
   1be10:	mov	w6, w23
   1be14:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1be18:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1be1c:	add	x8, x8, #0x32c
   1be20:	cmp	w20, #0x0
   1be24:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1be28:	csel	x1, x22, x8, eq  // eq = none
   1be2c:	add	x0, x0, #0x338
   1be30:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1be34:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1be38:	ldr	x20, [x20, #4016]
   1be3c:	ldr	x22, [x19, #24]
   1be40:	ldr	x0, [x20]
   1be44:	cbz	x0, 1be5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d24>
   1be48:	cmp	x22, x0
   1be4c:	b.cc	1be6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d34>  // b.lo, b.ul, b.last
   1be50:	ldrb	w8, [x19, #48]
   1be54:	cbnz	w8, 1be80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d48>
   1be58:	b	1bef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>
   1be5c:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1be60:	str	x0, [x20]
   1be64:	cmp	x22, x0
   1be68:	b.cs	1be50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d18>  // b.hs, b.nlast
   1be6c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1be70:	add	x0, x0, #0x8
   1be74:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1be78:	ldrb	w8, [x19, #48]
   1be7c:	cbz	w8, 1bef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>
   1be80:	ldr	w8, [x19, #52]
   1be84:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1be88:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1be8c:	add	x9, x9, #0x36
   1be90:	add	x10, x10, #0x31
   1be94:	adrp	x11, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1be98:	cmp	w8, #0x1
   1be9c:	add	x11, x11, #0x2b
   1bea0:	csel	x9, x10, x9, eq  // eq = none
   1bea4:	cmp	w8, #0x2
   1bea8:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1beac:	csel	x1, x11, x9, eq  // eq = none
   1beb0:	add	x0, x0, #0x3e
   1beb4:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1beb8:	ldrb	w8, [x19, #56]
   1bebc:	cbz	w8, 1bee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db0>
   1bec0:	ldr	x0, [x20]
   1bec4:	ldr	x22, [x19, #16]
   1bec8:	cbnz	x0, 1bed4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3d9c>
   1becc:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1bed0:	str	x0, [x20]
   1bed4:	cmp	x22, x0
   1bed8:	b.cs	1bef4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3dbc>  // b.hs, b.nlast
   1bedc:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bee0:	add	x0, x0, #0x10e
   1bee4:	b	1bef0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3db8>
   1bee8:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1beec:	add	x0, x0, #0x6b
   1bef0:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1bef4:	ldr	x22, [x19, #24]
   1bef8:	add	x0, sp, #0x60
   1befc:	mov	w1, #0x1                   	// #1
   1bf00:	bl	108b4 <__sanitizer_on_print@@Base+0x9b4>
   1bf04:	add	x0, sp, #0x60
   1bf08:	add	x1, sp, #0x10
   1bf0c:	stp	xzr, xzr, [sp, #40]
   1bf10:	str	xzr, [sp, #88]
   1bf14:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   1bf18:	tbz	w0, #0, 1bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e2c>
   1bf1c:	adrp	x23, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1bf20:	add	x23, x23, #0x15b
   1bf24:	b	1bf38 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e00>
   1bf28:	add	x0, sp, #0x60
   1bf2c:	add	x1, sp, #0x10
   1bf30:	bl	1114c <__sanitizer_on_print@@Base+0x124c>
   1bf34:	tbz	w0, #0, 1bf64 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3e2c>
   1bf38:	ldr	x8, [sp, #16]
   1bf3c:	cmp	x8, x22
   1bf40:	b.hi	1bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>  // b.pmore
   1bf44:	ldr	x8, [sp, #24]
   1bf48:	cmp	x8, x22
   1bf4c:	b.ls	1bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>  // b.plast
   1bf50:	ldrb	w8, [sp, #56]
   1bf54:	tbnz	w8, #2, 1bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>
   1bf58:	mov	x0, x23
   1bf5c:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1bf60:	b	1bf28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3df0>
   1bf64:	add	x0, sp, #0x60
   1bf68:	bl	10abc <__sanitizer_on_print@@Base+0xbbc>
   1bf6c:	add	x0, sp, #0x60
   1bf70:	mov	w1, #0x1                   	// #1
   1bf74:	stp	xzr, xzr, [sp, #104]
   1bf78:	str	xzr, [sp, #96]
   1bf7c:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1bf80:	ldr	x8, [sp, #112]
   1bf84:	cbnz	x8, 1c084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f4c>
   1bf88:	ldr	x8, [sp, #104]
   1bf8c:	cmp	x8, #0x817
   1bf90:	b.hi	1c060 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f28>  // b.pmore
   1bf94:	add	x0, sp, #0x60
   1bf98:	mov	w1, #0x1                   	// #1
   1bf9c:	bl	1c514 <__sanitizer_get_module_and_offset_for_pc@@Base+0x43dc>
   1bfa0:	ldr	x8, [sp, #112]
   1bfa4:	b	1c064 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f2c>
   1bfa8:	mov	x8, xzr
   1bfac:	ldr	x9, [sp, #16]
   1bfb0:	mov	w11, #0x1                   	// #1
   1bfb4:	mov	w10, #0x818                 	// #2072
   1bfb8:	sub	x11, x11, x8
   1bfbc:	madd	x0, x8, x10, x9
   1bfc0:	mul	x2, x11, x10
   1bfc4:	mov	w1, wzr
   1bfc8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1bfcc:	ldr	x20, [sp, #16]
   1bfd0:	mov	w8, #0x1                   	// #1
   1bfd4:	str	x8, [sp, #32]
   1bfd8:	mov	x0, x19
   1bfdc:	add	x8, x20, #0x10
   1bfe0:	mov	x1, x25
   1bfe4:	mov	x2, x20
   1bfe8:	stp	x8, xzr, [x20]
   1bfec:	str	xzr, [x20, #2064]
   1bff0:	blr	x21
   1bff4:	mov	x0, x20
   1bff8:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   1bffc:	ldrb	w8, [x29, #60]
   1c000:	cbz	w8, 1c058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>
   1c004:	ldr	w8, [x20, #8]
   1c008:	cbz	w8, 1c048 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f10>
   1c00c:	ldr	x8, [x20]
   1c010:	ldr	x8, [x8]
   1c014:	sub	x19, x8, #0x4
   1c018:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1c01c:	mov	x1, x19
   1c020:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1c024:	mov	x19, x0
   1c028:	add	x1, x0, #0x8
   1c02c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c030:	add	x0, x0, #0x219
   1c034:	mov	x2, xzr
   1c038:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1c03c:	mov	x0, x19
   1c040:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1c044:	b	1c058 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f20>
   1c048:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c04c:	add	x0, x0, #0x219
   1c050:	mov	x1, xzr
   1c054:	bl	6918 <__sancov_default_options@plt+0x1f98>
   1c058:	ldp	x0, x1, [sp, #16]
   1c05c:	b	1c304 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41cc>
   1c060:	mov	x8, xzr
   1c064:	ldr	x9, [sp, #96]
   1c068:	mov	w11, #0x1                   	// #1
   1c06c:	mov	w10, #0x818                 	// #2072
   1c070:	sub	x11, x11, x8
   1c074:	madd	x0, x8, x10, x9
   1c078:	mul	x2, x11, x10
   1c07c:	mov	w1, wzr
   1c080:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1c084:	ldr	x23, [sp, #96]
   1c088:	mov	w8, #0x1                   	// #1
   1c08c:	str	x8, [sp, #112]
   1c090:	mov	x0, x19
   1c094:	add	x8, x23, #0x10
   1c098:	mov	x1, x25
   1c09c:	mov	x2, x23
   1c0a0:	stp	x8, xzr, [x23]
   1c0a4:	str	xzr, [x23, #2064]
   1c0a8:	blr	x21
   1c0ac:	mov	x0, x23
   1c0b0:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   1c0b4:	ldrb	w8, [x29, #240]
   1c0b8:	cbz	w8, 1c28c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4154>
   1c0bc:	ldr	x0, [x20]
   1c0c0:	ldr	x21, [x19, #24]
   1c0c4:	cbnz	x0, 1c0d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3f98>
   1c0c8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1c0cc:	str	x0, [x20]
   1c0d0:	cmp	x0, x21
   1c0d4:	b.hi	1c28c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4154>  // b.pmore
   1c0d8:	add	x0, sp, #0x10
   1c0dc:	mov	w1, #0x400                 	// #1024
   1c0e0:	stp	xzr, xzr, [sp, #24]
   1c0e4:	str	xzr, [sp, #16]
   1c0e8:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1c0ec:	ldr	x8, [sp, #32]
   1c0f0:	cmp	x8, #0x3ff
   1c0f4:	b.hi	1c12c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ff4>  // b.pmore
   1c0f8:	ldr	x9, [sp, #24]
   1c0fc:	cmp	x9, #0x3ff
   1c100:	b.hi	1c114 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3fdc>  // b.pmore
   1c104:	add	x0, sp, #0x10
   1c108:	mov	w1, #0x400                 	// #1024
   1c10c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1c110:	ldr	x8, [sp, #32]
   1c114:	ldr	x9, [sp, #16]
   1c118:	mov	w10, #0x400                 	// #1024
   1c11c:	sub	x2, x10, x8
   1c120:	mov	w1, wzr
   1c124:	add	x0, x9, x8
   1c128:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1c12c:	adrp	x8, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c130:	ldr	q0, [x8, #320]
   1c134:	ldr	x8, [sp, #16]
   1c138:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c13c:	add	x1, x1, #0x197
   1c140:	add	x0, sp, #0x10
   1c144:	str	q0, [sp, #32]
   1c148:	strb	wzr, [x8]
   1c14c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1c150:	mov	w1, #0x10                  	// #16
   1c154:	mov	x0, x21
   1c158:	bl	14be0 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   1c15c:	tbz	w0, #0, 1c24c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4114>
   1c160:	stp	x19, x24, [sp]
   1c164:	adrp	x24, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c168:	adrp	x19, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c16c:	adrp	x26, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c170:	mov	x20, xzr
   1c174:	add	x24, x24, #0xf10
   1c178:	add	x19, x19, #0x1c8
   1c17c:	add	x26, x26, #0x562
   1c180:	mov	w22, #0x1                   	// #1
   1c184:	b	1c1c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4088>
   1c188:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c18c:	adrp	x6, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c190:	add	x3, x3, #0x1d4
   1c194:	add	x6, x6, #0x32c
   1c198:	lsr	w4, w27, #4
   1c19c:	and	w5, w27, #0xf
   1c1a0:	add	x0, sp, #0x10
   1c1a4:	mov	x1, x19
   1c1a8:	mov	x2, x26
   1c1ac:	mov	x29, x28
   1c1b0:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1c1b4:	add	x20, x20, #0x1
   1c1b8:	cmp	x20, #0x10
   1c1bc:	b.eq	1c258 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4120>  // b.none
   1c1c0:	mov	x28, x29
   1c1c4:	ldr	x29, [x29, #112]
   1c1c8:	ldrb	w27, [x21, x20]
   1c1cc:	mov	x1, x24
   1c1d0:	mov	x0, x29
   1c1d4:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1c1d8:	cbz	w0, 1c188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4050>
   1c1dc:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c1e0:	mov	x0, x29
   1c1e4:	add	x1, x1, #0x838
   1c1e8:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1c1ec:	cbnz	w0, 1c240 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4108>
   1c1f0:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c1f4:	ldr	x8, [x8, #3960]
   1c1f8:	ldr	x29, [x8]
   1c1fc:	ldaxrb	w8, [x29]
   1c200:	stlxrb	w9, w22, [x29]
   1c204:	cbnz	w9, 1c1fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x40c4>
   1c208:	mov	x25, x24
   1c20c:	cbz	w8, 1c218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x40e0>
   1c210:	mov	x0, x29
   1c214:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1c218:	adrp	x24, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c21c:	ldr	x24, [x24, #3960]
   1c220:	mov	x0, x24
   1c224:	bl	9124 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e70>
   1c228:	ldr	w0, [x24, #8]
   1c22c:	bl	148e8 <__sanitizer_sandbox_on_notify@@Base+0xdb8>
   1c230:	dmb	ish
   1c234:	strb	wzr, [x29]
   1c238:	mov	x24, x25
   1c23c:	tbnz	w0, #0, 1c188 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4050>
   1c240:	mov	x3, x26
   1c244:	mov	x6, x26
   1c248:	b	1c198 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4060>
   1c24c:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c250:	add	x1, x1, #0x1ba
   1c254:	b	1c26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4134>
   1c258:	adrp	x26, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c25c:	ldr	x26, [x26, #4024]
   1c260:	ldp	x19, x24, [sp]
   1c264:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c268:	add	x1, x1, #0x561
   1c26c:	add	x0, sp, #0x10
   1c270:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1c274:	ldr	x1, [sp, #16]
   1c278:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c27c:	add	x0, x0, #0x338
   1c280:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1c284:	ldp	x0, x1, [sp, #16]
   1c288:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1c28c:	ldrb	w8, [x29, #241]
   1c290:	cbz	w8, 1c29c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4164>
   1c294:	ldr	x0, [x19, #8]
   1c298:	bl	e318 <__sanitizer_set_report_fd@@Base+0x4a64>
   1c29c:	ldr	x1, [x26]
   1c2a0:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c2a4:	add	x0, x0, #0x136
   1c2a8:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1c2ac:	ldrb	w8, [x29, #60]
   1c2b0:	cbz	w8, 1c300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   1c2b4:	ldr	w8, [x23, #8]
   1c2b8:	cbz	w8, 1c2f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41bc>
   1c2bc:	ldr	x8, [x23]
   1c2c0:	ldr	x8, [x8]
   1c2c4:	sub	x19, x8, #0x4
   1c2c8:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1c2cc:	mov	x1, x19
   1c2d0:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1c2d4:	mov	x19, x0
   1c2d8:	add	x1, x0, #0x8
   1c2dc:	mov	x0, x24
   1c2e0:	mov	x2, xzr
   1c2e4:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1c2e8:	mov	x0, x19
   1c2ec:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1c2f0:	b	1c300 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41c8>
   1c2f4:	mov	x0, x24
   1c2f8:	mov	x1, xzr
   1c2fc:	bl	6918 <__sancov_default_options@plt+0x1f98>
   1c300:	ldp	x0, x1, [sp, #96]
   1c304:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1c308:	ldp	x20, x19, [sp, #208]
   1c30c:	ldp	x22, x21, [sp, #192]
   1c310:	ldp	x24, x23, [sp, #176]
   1c314:	ldp	x26, x25, [sp, #160]
   1c318:	ldp	x28, x27, [sp, #144]
   1c31c:	ldp	x29, x30, [sp, #128]
   1c320:	add	sp, sp, #0xe0
   1c324:	ret
   1c328:	sub	sp, sp, #0x70
   1c32c:	stp	x30, x23, [sp, #64]
   1c330:	stp	x22, x21, [sp, #80]
   1c334:	stp	x20, x19, [sp, #96]
   1c338:	mov	x19, x4
   1c33c:	mov	x20, x3
   1c340:	mov	w21, w2
   1c344:	mov	x22, x1
   1c348:	mov	x23, x0
   1c34c:	bl	1bb9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a64>
   1c350:	bl	1c388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   1c354:	mov	x0, sp
   1c358:	mov	x1, x23
   1c35c:	mov	x2, x22
   1c360:	bl	1c4c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4390>
   1c364:	mov	x0, sp
   1c368:	mov	w1, w21
   1c36c:	mov	x2, x20
   1c370:	mov	x3, x19
   1c374:	bl	1bbd4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3a9c>
   1c378:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c37c:	add	x0, x0, #0xf52
   1c380:	bl	ffac <__sanitizer_on_print@@Base+0xac>
   1c384:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1c388:	str	x30, [sp, #-32]!
   1c38c:	stp	x20, x19, [sp, #16]
   1c390:	bl	14598 <__sanitizer_sandbox_on_notify@@Base+0xa68>
   1c394:	adrp	x20, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c398:	mov	x19, x0
   1c39c:	add	x20, x20, #0xd88
   1c3a0:	ldaxr	x8, [x20]
   1c3a4:	cbnz	x8, 1c3bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4284>
   1c3a8:	stlxr	w9, x19, [x20]
   1c3ac:	cbnz	w9, 1c3a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4268>
   1c3b0:	mov	w9, #0x1                   	// #1
   1c3b4:	tbz	w9, #0, 1c3d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   1c3b8:	b	1c3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   1c3bc:	clrex
   1c3c0:	mov	w9, wzr
   1c3c4:	tbz	w9, #0, 1c3d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   1c3c8:	b	1c3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   1c3cc:	clrex
   1c3d0:	mov	w9, wzr
   1c3d4:	tbnz	wzr, #0, 1c3fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x42c4>
   1c3d8:	cmp	x8, x19
   1c3dc:	b.eq	1c438 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4300>  // b.none
   1c3e0:	bl	d0b8 <__sanitizer_set_report_fd@@Base+0x3804>
   1c3e4:	ldaxr	x8, [x20]
   1c3e8:	cbnz	x8, 1c3cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4294>
   1c3ec:	stlxr	w9, x19, [x20]
   1c3f0:	cbnz	w9, 1c3e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42ac>
   1c3f4:	mov	w9, #0x1                   	// #1
   1c3f8:	tbz	w9, #0, 1c3d8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42a0>
   1c3fc:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c400:	add	x8, x8, #0xd80
   1c404:	mov	w9, #0x1                   	// #1
   1c408:	ldaxrb	w10, [x8]
   1c40c:	stlxrb	w11, w9, [x8]
   1c410:	cbnz	w11, 1c408 <__sanitizer_get_module_and_offset_for_pc@@Base+0x42d0>
   1c414:	cbz	w10, 1c42c <__sanitizer_get_module_and_offset_for_pc@@Base+0x42f4>
   1c418:	ldp	x20, x19, [sp, #16]
   1c41c:	adrp	x0, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c420:	add	x0, x0, #0xd80
   1c424:	ldr	x30, [sp], #32
   1c428:	b	67b8 <__sancov_default_options@plt+0x1e38>
   1c42c:	ldp	x20, x19, [sp, #16]
   1c430:	ldr	x30, [sp], #32
   1c434:	ret
   1c438:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c43c:	ldr	x8, [x8, #4024]
   1c440:	ldr	x19, [x8]
   1c444:	mov	x0, x19
   1c448:	bl	c13c <__sanitizer_set_report_fd@@Base+0x2888>
   1c44c:	mov	x1, x0
   1c450:	mov	x0, x19
   1c454:	bl	90e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e2c>
   1c458:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c45c:	add	x0, x0, #0x1ed
   1c460:	mov	w1, #0x2b                  	// #43
   1c464:	bl	90e0 <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e2c>
   1c468:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c46c:	ldr	x8, [x8, #4056]
   1c470:	ldr	w0, [x8, #224]
   1c474:	bl	d0c4 <__sanitizer_set_report_fd@@Base+0x3810>
   1c478:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c47c:	add	x8, x8, #0xd80
   1c480:	dmb	ish
   1c484:	strb	wzr, [x8]
   1c488:	str	xzr, [x8, #8]
   1c48c:	ret
   1c490:	str	x30, [sp, #-16]!
   1c494:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c498:	ldrb	w3, [x8, #3456]
   1c49c:	cmp	x3, #0x1
   1c4a0:	b.ne	1c4ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x4374>  // b.any
   1c4a4:	ldr	x30, [sp], #16
   1c4a8:	ret
   1c4ac:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c4b0:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c4b4:	add	x0, x0, #0x775
   1c4b8:	add	x2, x2, #0x7c5
   1c4bc:	mov	w1, #0x2b                  	// #43
   1c4c0:	mov	w4, #0x1                   	// #1
   1c4c4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c4c8:	stp	x30, x19, [sp, #-16]!
   1c4cc:	mov	x19, x0
   1c4d0:	stp	x1, x2, [x0]
   1c4d4:	bl	f6b4 <__sanitizer_set_report_fd@@Base+0x5e00>
   1c4d8:	str	x0, [x19, #16]
   1c4dc:	mov	x0, x19
   1c4e0:	bl	f6c0 <__sanitizer_set_report_fd@@Base+0x5e0c>
   1c4e4:	and	w8, w0, #0x1
   1c4e8:	mov	x0, x19
   1c4ec:	strb	w8, [x19, #48]
   1c4f0:	bl	e2a4 <__sanitizer_set_report_fd@@Base+0x49f0>
   1c4f4:	str	w0, [x19, #52]
   1c4f8:	mov	x0, x19
   1c4fc:	bl	e2f0 <__sanitizer_set_report_fd@@Base+0x4a3c>
   1c500:	and	w8, w0, #0x1
   1c504:	strb	w8, [x19, #56]
   1c508:	mov	x0, x19
   1c50c:	ldp	x30, x19, [sp], #16
   1c510:	b	e31c <__sanitizer_set_report_fd@@Base+0x4a68>
   1c514:	stp	x30, x21, [sp, #-32]!
   1c518:	stp	x20, x19, [sp, #16]
   1c51c:	cbz	x1, 1c5b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x447c>
   1c520:	ldr	x3, [x0, #16]
   1c524:	mov	x20, x1
   1c528:	mov	x19, x0
   1c52c:	cmp	x3, x1
   1c530:	b.hi	1c5d4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x449c>  // b.pmore
   1c534:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c538:	ldr	x21, [x21, #4016]
   1c53c:	ldr	x0, [x21]
   1c540:	cbnz	x0, 1c54c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4414>
   1c544:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1c548:	str	x0, [x21]
   1c54c:	sub	x8, x0, #0x1
   1c550:	tst	x0, x8
   1c554:	b.ne	1c5f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x44b8>  // b.any
   1c558:	mov	w8, #0x818                 	// #2072
   1c55c:	mul	x8, x20, x8
   1c560:	add	x8, x8, x0
   1c564:	sub	x8, x8, #0x1
   1c568:	neg	x9, x0
   1c56c:	and	x20, x8, x9
   1c570:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c574:	add	x1, x1, #0x2c0
   1c578:	mov	x0, x20
   1c57c:	mov	w2, wzr
   1c580:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1c584:	ldr	x8, [x19, #16]
   1c588:	ldr	x1, [x19]
   1c58c:	mov	w9, #0x818                 	// #2072
   1c590:	mov	x21, x0
   1c594:	mul	x2, x8, x9
   1c598:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1c59c:	ldp	x0, x1, [x19]
   1c5a0:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1c5a4:	stp	x21, x20, [x19]
   1c5a8:	ldp	x20, x19, [sp, #16]
   1c5ac:	ldp	x30, x21, [sp], #32
   1c5b0:	ret
   1c5b4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1c5b8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c5bc:	add	x0, x0, #0xbf8
   1c5c0:	add	x2, x2, #0x289
   1c5c4:	mov	w1, #0x20b                 	// #523
   1c5c8:	mov	x3, xzr
   1c5cc:	mov	x4, xzr
   1c5d0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c5d4:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1c5d8:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c5dc:	add	x0, x0, #0xbf8
   1c5e0:	add	x2, x2, #0x2a2
   1c5e4:	mov	w1, #0x20c                 	// #524
   1c5e8:	mov	x4, x20
   1c5ec:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c5f0:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c5f4:	add	x0, x0, #0x121
   1c5f8:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1c5fc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1c600:	sub	sp, sp, #0x30
   1c604:	str	x30, [sp, #16]
   1c608:	stp	x20, x19, [sp, #32]
   1c60c:	cmp	w2, #0x1
   1c610:	b.ls	1c684 <__sanitizer_get_module_and_offset_for_pc@@Base+0x454c>  // b.plast
   1c614:	add	w8, w2, #0x1
   1c618:	mov	x20, x0
   1c61c:	str	wzr, [x0, #8]
   1c620:	str	x0, [sp]
   1c624:	cmp	w8, #0x100
   1c628:	mov	w8, #0x100                 	// #256
   1c62c:	adrp	x0, 1c000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ec8>
   1c630:	mov	x19, x1
   1c634:	csinc	w8, w8, w2, cs  // cs = hs, nlast
   1c638:	add	x0, x0, #0x6a4
   1c63c:	mov	x1, sp
   1c640:	str	w8, [sp, #8]
   1c644:	bl	45e0 <_Unwind_Backtrace@plt>
   1c648:	mov	x0, x20
   1c64c:	mov	x1, x19
   1c650:	bl	17a04 <__sanitizer_cov_pcs_init@@Base+0x1320>
   1c654:	mov	x1, x0
   1c658:	cbnz	x0, 1c668 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4530>
   1c65c:	ldr	w8, [x20, #8]
   1c660:	cmp	w8, #0x1
   1c664:	cset	w1, hi  // hi = pmore
   1c668:	mov	x0, x20
   1c66c:	bl	17928 <__sanitizer_cov_pcs_init@@Base+0x1244>
   1c670:	str	x19, [x20, #16]
   1c674:	ldp	x20, x19, [sp, #32]
   1c678:	ldr	x30, [sp, #16]
   1c67c:	add	sp, sp, #0x30
   1c680:	ret
   1c684:	mov	w3, w2
   1c688:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c68c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c690:	add	x0, x0, #0x228
   1c694:	add	x2, x2, #0x502
   1c698:	mov	w1, #0x7f                  	// #127
   1c69c:	mov	w4, #0x2                   	// #2
   1c6a0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c6a4:	stp	x30, x21, [sp, #-32]!
   1c6a8:	stp	x20, x19, [sp, #16]
   1c6ac:	ldr	x8, [x1]
   1c6b0:	ldr	w4, [x1, #8]
   1c6b4:	ldr	w3, [x8, #8]
   1c6b8:	cmp	w3, w4
   1c6bc:	b.cs	1c73c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4604>  // b.hs, b.nlast
   1c6c0:	mov	x19, x1
   1c6c4:	bl	4800 <_Unwind_GetIP@plt>
   1c6c8:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c6cc:	ldr	x21, [x21, #4016]
   1c6d0:	mov	x20, x0
   1c6d4:	ldr	x8, [x21]
   1c6d8:	cbz	x8, 1c6f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45bc>
   1c6dc:	cmp	x20, x8
   1c6e0:	b.cs	1c708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45d0>  // b.hs, b.nlast
   1c6e4:	mov	w0, #0x4                   	// #4
   1c6e8:	ldp	x20, x19, [sp, #16]
   1c6ec:	ldp	x30, x21, [sp], #32
   1c6f0:	ret
   1c6f4:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1c6f8:	mov	x8, x0
   1c6fc:	str	x0, [x21]
   1c700:	cmp	x20, x8
   1c704:	b.cc	1c6e4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x45ac>  // b.lo, b.ul, b.last
   1c708:	ldr	x8, [x19]
   1c70c:	ldr	w9, [x8, #8]
   1c710:	add	w10, w9, #0x1
   1c714:	add	x9, x8, x9, lsl #3
   1c718:	str	w10, [x8, #8]
   1c71c:	str	x20, [x9, #16]
   1c720:	ldr	w8, [x19, #8]
   1c724:	cmp	w10, w8
   1c728:	cset	w8, eq  // eq = none
   1c72c:	lsl	w0, w8, #2
   1c730:	ldp	x20, x19, [sp, #16]
   1c734:	ldp	x30, x21, [sp], #32
   1c738:	ret
   1c73c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c740:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c744:	add	x0, x0, #0x228
   1c748:	add	x2, x2, #0x2cf
   1c74c:	mov	w1, #0x50                  	// #80
   1c750:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c754:	sub	sp, sp, #0x60
   1c758:	str	x30, [sp, #32]
   1c75c:	stp	x24, x23, [sp, #48]
   1c760:	stp	x22, x21, [sp, #64]
   1c764:	stp	x20, x19, [sp, #80]
   1c768:	cbz	x2, 1c928 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47f0>
   1c76c:	cmp	w3, #0x1
   1c770:	mov	w21, w3
   1c774:	b.ls	1c940 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4808>  // b.plast
   1c778:	adrp	x24, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c77c:	ldr	x8, [x24, #3488]
   1c780:	mov	x19, x0
   1c784:	cbz	x8, 1c7f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x46b8>
   1c788:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c78c:	ldr	x8, [x8, #3472]
   1c790:	mov	x22, x2
   1c794:	blr	x8
   1c798:	cbz	x0, 1c960 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4828>
   1c79c:	mov	x23, x0
   1c7a0:	add	x0, sp, #0x8
   1c7a4:	stp	xzr, xzr, [sp, #16]
   1c7a8:	str	xzr, [sp, #8]
   1c7ac:	bl	1c9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>
   1c7b0:	ldr	x8, [sp, #24]
   1c7b4:	cmp	x8, #0x100
   1c7b8:	b.cs	1c850 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4718>  // b.hs, b.nlast
   1c7bc:	add	x0, sp, #0x8
   1c7c0:	bl	1c9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4868>
   1c7c4:	ldr	x20, [sp, #8]
   1c7c8:	ldr	x8, [sp, #24]
   1c7cc:	mov	w9, #0x18                  	// #24
   1c7d0:	mov	w10, #0x100                 	// #256
   1c7d4:	mov	w1, wzr
   1c7d8:	madd	x0, x8, x9, x20
   1c7dc:	sub	x8, x10, x8
   1c7e0:	add	x8, x8, x8, lsl #1
   1c7e4:	lsl	x2, x8, #3
   1c7e8:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1c7ec:	b	1c854 <__sanitizer_get_module_and_offset_for_pc@@Base+0x471c>
   1c7f0:	add	w8, w3, #0x1
   1c7f4:	cmp	w8, #0x100
   1c7f8:	mov	w8, #0x100                 	// #256
   1c7fc:	adrp	x0, 1c000 <__sanitizer_get_module_and_offset_for_pc@@Base+0x3ec8>
   1c800:	mov	x20, x1
   1c804:	csinc	w8, w8, w3, cs  // cs = hs, nlast
   1c808:	add	x0, x0, #0x6a4
   1c80c:	add	x1, sp, #0x8
   1c810:	str	wzr, [x19, #8]
   1c814:	str	x19, [sp, #8]
   1c818:	str	w8, [sp, #16]
   1c81c:	bl	45e0 <_Unwind_Backtrace@plt>
   1c820:	mov	x0, x19
   1c824:	mov	x1, x20
   1c828:	bl	17a04 <__sanitizer_cov_pcs_init@@Base+0x1320>
   1c82c:	mov	x1, x0
   1c830:	cbnz	x0, 1c840 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4708>
   1c834:	ldr	w8, [x19, #8]
   1c838:	cmp	w8, #0x1
   1c83c:	cset	w1, hi  // hi = pmore
   1c840:	mov	x0, x19
   1c844:	bl	17928 <__sanitizer_cov_pcs_init@@Base+0x1244>
   1c848:	str	x20, [x19, #16]
   1c84c:	b	1c910 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47d8>
   1c850:	ldr	x20, [sp, #8]
   1c854:	ldr	x8, [x24, #3488]
   1c858:	mov	w9, #0x100                 	// #256
   1c85c:	mov	x0, xzr
   1c860:	mov	x1, x22
   1c864:	mov	x2, x23
   1c868:	mov	x3, x20
   1c86c:	mov	x4, xzr
   1c870:	mov	x5, x21
   1c874:	str	x9, [sp, #24]
   1c878:	blr	x8
   1c87c:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1c880:	ldr	x8, [x8, #3480]
   1c884:	mov	x21, x0
   1c888:	mov	x0, x23
   1c88c:	blr	x8
   1c890:	tbnz	x21, #63, 1c904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47cc>
   1c894:	cmp	x21, #0x101
   1c898:	b.cs	1c980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4848>  // b.hs, b.nlast
   1c89c:	str	wzr, [x19, #8]
   1c8a0:	cbz	x21, 1c904 <__sanitizer_get_module_and_offset_for_pc@@Base+0x47cc>
   1c8a4:	mov	x8, xzr
   1c8a8:	sub	x9, x21, #0x1
   1c8ac:	add	x10, x19, #0x10
   1c8b0:	mov	x11, x20
   1c8b4:	ldr	x12, [x11]
   1c8b8:	cmp	x9, x8
   1c8bc:	add	x12, x12, #0x2
   1c8c0:	str	x12, [x10, x8, lsl #3]
   1c8c4:	b.eq	1c8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x47c4>  // b.none
   1c8c8:	add	x8, x8, #0x1
   1c8cc:	cmp	x8, #0x100
   1c8d0:	add	x11, x11, #0x18
   1c8d4:	b.ne	1c8b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x477c>  // b.any
   1c8d8:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1c8dc:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1c8e0:	add	x0, x0, #0xbf8
   1c8e4:	add	x2, x2, #0x7fd
   1c8e8:	mov	w1, #0x1c5                 	// #453
   1c8ec:	mov	w3, #0x100                 	// #256
   1c8f0:	mov	w4, #0x100                 	// #256
   1c8f4:	str	w8, [x19, #8]
   1c8f8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c8fc:	add	w8, w8, #0x1
   1c900:	str	w8, [x19, #8]
   1c904:	ldr	x1, [sp, #16]
   1c908:	mov	x0, x20
   1c90c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1c910:	ldp	x20, x19, [sp, #80]
   1c914:	ldp	x22, x21, [sp, #64]
   1c918:	ldp	x24, x23, [sp, #48]
   1c91c:	ldr	x30, [sp, #32]
   1c920:	add	sp, sp, #0x60
   1c924:	ret
   1c928:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c92c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c930:	add	x0, x0, #0x228
   1c934:	add	x2, x2, #0x289
   1c938:	mov	w1, #0x98                  	// #152
   1c93c:	b	1c974 <__sanitizer_get_module_and_offset_for_pc@@Base+0x483c>
   1c940:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c944:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1c948:	add	x0, x0, #0x228
   1c94c:	add	x2, x2, #0x502
   1c950:	mov	w1, #0x99                  	// #153
   1c954:	mov	w4, #0x2                   	// #2
   1c958:	mov	x3, x21
   1c95c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c960:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c964:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c968:	add	x0, x0, #0x228
   1c96c:	add	x2, x2, #0x29c
   1c970:	mov	w1, #0xa0                  	// #160
   1c974:	mov	x3, xzr
   1c978:	mov	x4, xzr
   1c97c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c980:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c984:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1c988:	add	x0, x0, #0x228
   1c98c:	add	x2, x2, #0x2ab
   1c990:	mov	w1, #0xa8                  	// #168
   1c994:	mov	w4, #0x100                 	// #256
   1c998:	mov	x3, x21
   1c99c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1c9a0:	stp	x30, x21, [sp, #-32]!
   1c9a4:	stp	x20, x19, [sp, #16]
   1c9a8:	ldr	x8, [x0, #8]
   1c9ac:	lsr	x8, x8, #11
   1c9b0:	cmp	x8, #0x2
   1c9b4:	b.hi	1ca34 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48fc>  // b.pmore
   1c9b8:	ldr	x3, [x0, #16]
   1c9bc:	mov	x19, x0
   1c9c0:	cmp	x3, #0x101
   1c9c4:	b.cs	1ca40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4908>  // b.hs, b.nlast
   1c9c8:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1c9cc:	ldr	x20, [x20, #4016]
   1c9d0:	ldr	x0, [x20]
   1c9d4:	cbnz	x0, 1c9e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x48a8>
   1c9d8:	bl	dda4 <__sanitizer_set_report_fd@@Base+0x44f0>
   1c9dc:	str	x0, [x20]
   1c9e0:	sub	x8, x0, #0x1
   1c9e4:	tst	x0, x8
   1c9e8:	b.ne	1ca5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4924>  // b.any
   1c9ec:	mov	w8, #0x17ff                	// #6143
   1c9f0:	add	x8, x0, x8
   1c9f4:	neg	x9, x0
   1c9f8:	and	x20, x8, x9
   1c9fc:	adrp	x1, 23000 <__interceptor_sigaction@@Base+0xa44>
   1ca00:	add	x1, x1, #0x2c0
   1ca04:	mov	x0, x20
   1ca08:	mov	w2, wzr
   1ca0c:	bl	e780 <__sanitizer_set_report_fd@@Base+0x4ecc>
   1ca10:	ldr	x8, [x19, #16]
   1ca14:	ldr	x1, [x19]
   1ca18:	mov	x21, x0
   1ca1c:	add	x8, x8, x8, lsl #1
   1ca20:	lsl	x2, x8, #3
   1ca24:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1ca28:	ldp	x0, x1, [x19]
   1ca2c:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1ca30:	stp	x21, x20, [x19]
   1ca34:	ldp	x20, x19, [sp, #16]
   1ca38:	ldp	x30, x21, [sp], #32
   1ca3c:	ret
   1ca40:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1ca44:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1ca48:	add	x0, x0, #0xbf8
   1ca4c:	add	x2, x2, #0x2a2
   1ca50:	mov	w1, #0x20c                 	// #524
   1ca54:	mov	w4, #0x100                 	// #256
   1ca58:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1ca5c:	adrp	x0, 23000 <__interceptor_sigaction@@Base+0xa44>
   1ca60:	add	x0, x0, #0x121
   1ca64:	bl	90fc <__sanitizer_install_malloc_and_free_hooks@@Base+0x1e48>
   1ca68:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1ca6c:	sub	sp, sp, #0x40
   1ca70:	stp	x30, xzr, [sp, #16]
   1ca74:	stp	x22, x21, [sp, #32]
   1ca78:	stp	x20, x19, [sp, #48]
   1ca7c:	mov	x19, x3
   1ca80:	mov	x20, x2
   1ca84:	mov	x21, x1
   1ca88:	mov	x22, x0
   1ca8c:	str	xzr, [sp, #8]
   1ca90:	tbz	w5, #0, 1cac8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4990>
   1ca94:	add	x1, sp, #0x18
   1ca98:	add	x2, sp, #0x8
   1ca9c:	mov	w0, wzr
   1caa0:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   1caa4:	ldr	x5, [sp, #24]
   1caa8:	ldr	x6, [sp, #8]
   1caac:	mov	w7, #0x1                   	// #1
   1cab0:	mov	x0, x22
   1cab4:	mov	w1, w21
   1cab8:	mov	x2, x20
   1cabc:	mov	x3, x19
   1cac0:	mov	x4, xzr
   1cac4:	b	1cae4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49ac>
   1cac8:	mov	x0, x22
   1cacc:	mov	w1, w21
   1cad0:	mov	x2, x20
   1cad4:	mov	x3, x19
   1cad8:	mov	x5, xzr
   1cadc:	mov	x6, xzr
   1cae0:	mov	w7, wzr
   1cae4:	bl	17d78 <__sanitizer_cov_pcs_init@@Base+0x1694>
   1cae8:	ldp	x20, x19, [sp, #48]
   1caec:	ldp	x22, x21, [sp, #32]
   1caf0:	ldr	x30, [sp, #16]
   1caf4:	add	sp, sp, #0x40
   1caf8:	ret
   1cafc:	stp	x30, x19, [sp, #-16]!
   1cb00:	mov	x19, x0
   1cb04:	bl	1daf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c0>
   1cb08:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1cb0c:	mov	x1, x19
   1cb10:	ldp	x30, x19, [sp], #16
   1cb14:	b	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1cb18:	sub	sp, sp, #0x20
   1cb1c:	str	x30, [sp, #16]
   1cb20:	ldr	w8, [x0, #320]
   1cb24:	cmp	w8, #0x8
   1cb28:	b.eq	1cb60 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a28>  // b.none
   1cb2c:	add	w9, w8, #0x1
   1cb30:	add	x8, x0, x8, lsl #5
   1cb34:	str	w9, [x0, #320]
   1cb38:	str	wzr, [x8, #64]
   1cb3c:	ldr	w9, [sp, #12]
   1cb40:	ldur	x10, [sp, #4]
   1cb44:	ldr	x30, [sp, #16]
   1cb48:	add	x11, x1, #0x4
   1cb4c:	str	w9, [x8, #76]
   1cb50:	stur	x10, [x8, #68]
   1cb54:	str	x11, [x8, #80]
   1cb58:	add	sp, sp, #0x20
   1cb5c:	ret
   1cb60:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cb64:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cb68:	add	x0, x0, #0x3bb
   1cb6c:	add	x2, x2, #0x3fb
   1cb70:	mov	w1, #0xc0                  	// #192
   1cb74:	mov	x3, xzr
   1cb78:	mov	x4, xzr
   1cb7c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1cb80:	sub	sp, sp, #0x40
   1cb84:	stp	x30, x19, [sp, #48]
   1cb88:	ldr	x8, [x1]
   1cb8c:	mov	x19, x0
   1cb90:	ldrh	w9, [x8]
   1cb94:	cmp	w9, #0x1
   1cb98:	b.eq	1cbdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4aa4>  // b.none
   1cb9c:	cbnz	w9, 1cc28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4af0>
   1cba0:	ldrb	w8, [x8, #2]
   1cba4:	tbnz	w8, #0, 1cc70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b38>
   1cba8:	mov	x0, x1
   1cbac:	bl	21178 <__ubsan_get_current_report_data@@Base+0x1ec>
   1cbb0:	ldr	w8, [x19, #320]
   1cbb4:	cmp	w8, #0x8
   1cbb8:	b.eq	1ccbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b84>  // b.none
   1cbbc:	add	w9, w8, #0x1
   1cbc0:	add	x8, x19, x8, lsl #5
   1cbc4:	mov	w10, #0x2                   	// #2
   1cbc8:	str	w9, [x19, #320]
   1cbcc:	str	w10, [x8, #64]
   1cbd0:	ldr	w9, [sp, #32]
   1cbd4:	ldr	x10, [sp, #24]
   1cbd8:	b	1cca0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b68>
   1cbdc:	mov	x0, x1
   1cbe0:	bl	213b0 <__ubsan_get_current_report_data@@Base+0x424>
   1cbe4:	ldr	w8, [x19, #320]
   1cbe8:	cmp	w8, #0x8
   1cbec:	b.eq	1ccbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b84>  // b.none
   1cbf0:	add	w9, w8, #0x1
   1cbf4:	add	x8, x19, x8, lsl #5
   1cbf8:	mov	w10, #0x4                   	// #4
   1cbfc:	str	w9, [x19, #320]
   1cc00:	str	w10, [x8, #64]
   1cc04:	ldr	w9, [sp, #20]
   1cc08:	ldur	x10, [sp, #12]
   1cc0c:	str	q0, [x8, #80]
   1cc10:	str	w9, [x8, #76]
   1cc14:	stur	x10, [x8, #68]
   1cc18:	mov	x0, x19
   1cc1c:	ldp	x30, x19, [sp, #48]
   1cc20:	add	sp, sp, #0x40
   1cc24:	ret
   1cc28:	ldr	w8, [x19, #320]
   1cc2c:	cmp	w8, #0x8
   1cc30:	b.eq	1ccbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b84>  // b.none
   1cc34:	add	w9, w8, #0x1
   1cc38:	add	x8, x19, x8, lsl #5
   1cc3c:	str	w9, [x19, #320]
   1cc40:	str	wzr, [x8, #64]
   1cc44:	ldr	w9, [sp, #8]
   1cc48:	ldr	x10, [sp]
   1cc4c:	adrp	x11, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cc50:	add	x11, x11, #0x30e
   1cc54:	str	w9, [x8, #76]
   1cc58:	stur	x10, [x8, #68]
   1cc5c:	str	x11, [x8, #80]
   1cc60:	mov	x0, x19
   1cc64:	ldp	x30, x19, [sp, #48]
   1cc68:	add	sp, sp, #0x40
   1cc6c:	ret
   1cc70:	mov	x0, x1
   1cc74:	bl	21074 <__ubsan_get_current_report_data@@Base+0xe8>
   1cc78:	ldr	w8, [x19, #320]
   1cc7c:	cmp	w8, #0x8
   1cc80:	b.eq	1ccbc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4b84>  // b.none
   1cc84:	add	w9, w8, #0x1
   1cc88:	add	x8, x19, x8, lsl #5
   1cc8c:	mov	w10, #0x3                   	// #3
   1cc90:	str	w9, [x19, #320]
   1cc94:	str	w10, [x8, #64]
   1cc98:	ldr	w9, [sp, #44]
   1cc9c:	ldur	x10, [sp, #36]
   1cca0:	str	w9, [x8, #76]
   1cca4:	stur	x10, [x8, #68]
   1cca8:	stp	x0, x1, [x8, #80]
   1ccac:	mov	x0, x19
   1ccb0:	ldp	x30, x19, [sp, #48]
   1ccb4:	add	sp, sp, #0x40
   1ccb8:	ret
   1ccbc:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ccc0:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ccc4:	add	x0, x0, #0x3bb
   1ccc8:	add	x2, x2, #0x3fb
   1cccc:	mov	w1, #0xc0                  	// #192
   1ccd0:	mov	x3, xzr
   1ccd4:	mov	x4, xzr
   1ccd8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1ccdc:	sub	sp, sp, #0xe0
   1cce0:	stp	x29, x30, [sp, #128]
   1cce4:	stp	x28, x27, [sp, #144]
   1cce8:	stp	x26, x25, [sp, #160]
   1ccec:	stp	x24, x23, [sp, #176]
   1ccf0:	stp	x22, x21, [sp, #192]
   1ccf4:	stp	x20, x19, [sp, #208]
   1ccf8:	mov	x21, x0
   1ccfc:	bl	1c490 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4358>
   1cd00:	bl	1b7f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x36c0>
   1cd04:	mov	w19, w0
   1cd08:	add	x0, sp, #0x60
   1cd0c:	mov	w1, #0x400                 	// #1024
   1cd10:	stp	xzr, xzr, [sp, #104]
   1cd14:	str	xzr, [sp, #96]
   1cd18:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1cd1c:	ldr	x8, [sp, #112]
   1cd20:	cmp	x8, #0x3ff
   1cd24:	b.hi	1cd5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c24>  // b.pmore
   1cd28:	ldr	x9, [sp, #104]
   1cd2c:	cmp	x9, #0x3ff
   1cd30:	b.hi	1cd44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c0c>  // b.pmore
   1cd34:	add	x0, sp, #0x60
   1cd38:	mov	w1, #0x400                 	// #1024
   1cd3c:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1cd40:	ldr	x8, [sp, #112]
   1cd44:	ldr	x9, [sp, #96]
   1cd48:	mov	w10, #0x400                 	// #1024
   1cd4c:	sub	x2, x10, x8
   1cd50:	mov	w1, wzr
   1cd54:	add	x0, x9, x8
   1cd58:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1cd5c:	adrp	x8, 23000 <__interceptor_sigaction@@Base+0xa44>
   1cd60:	ldr	q0, [x8, #320]
   1cd64:	ldr	x8, [sp, #96]
   1cd68:	str	q0, [sp, #112]
   1cd6c:	strb	wzr, [x8]
   1cd70:	ldr	w8, [x21, #40]
   1cd74:	str	q0, [sp, #16]
   1cd78:	cbnz	w8, 1cdd0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4c98>
   1cd7c:	ldr	x1, [x21, #48]
   1cd80:	add	x2, x21, #0x40
   1cd84:	add	x0, sp, #0x60
   1cd88:	bl	1d3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x526c>
   1cd8c:	ldrsw	x8, [x21, #44]
   1cd90:	cmp	w8, #0x20
   1cd94:	b.cs	1d364 <__sanitizer_get_module_and_offset_for_pc@@Base+0x522c>  // b.hs, b.nlast
   1cd98:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1cd9c:	add	x9, x9, #0xa30
   1cda0:	ldr	x1, [x9, x8, lsl #3]
   1cda4:	add	x0, sp, #0x30
   1cda8:	add	x3, sp, #0x60
   1cdac:	mov	x2, x21
   1cdb0:	bl	20e94 <__ubsan_handle_cfi_check_fail_abort@@Base+0x74>
   1cdb4:	ldr	x8, [sp, #112]
   1cdb8:	cbz	x8, 1d384 <__sanitizer_get_module_and_offset_for_pc@@Base+0x524c>
   1cdbc:	ldr	x8, [sp, #96]
   1cdc0:	strb	wzr, [x8]
   1cdc4:	ldp	x0, x1, [sp, #64]
   1cdc8:	str	xzr, [sp, #120]
   1cdcc:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1cdd0:	adrp	x26, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1cdd4:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cdd8:	add	x26, x26, #0x562
   1cddc:	add	x8, x8, #0x76a
   1cde0:	tst	w19, #0x1
   1cde4:	csel	x20, x8, x26, ne  // ne = any
   1cde8:	add	x0, sp, #0x60
   1cdec:	mov	x1, x20
   1cdf0:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1cdf4:	ldr	w8, [x21]
   1cdf8:	cmp	w8, #0x3
   1cdfc:	b.hi	1cec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d88>  // b.pmore
   1ce00:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ce04:	add	x9, x9, #0x2f9
   1ce08:	adr	x10, 1ce18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ce0>
   1ce0c:	ldrb	w11, [x9, x8]
   1ce10:	add	x10, x10, x11, lsl #2
   1ce14:	br	x10
   1ce18:	ldr	x1, [x21, #8]
   1ce1c:	cbz	x1, 1ce44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d0c>
   1ce20:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ce24:	ldr	x2, [x21, #16]
   1ce28:	ldr	x8, [x8, #4056]
   1ce2c:	add	x0, sp, #0x60
   1ce30:	lsr	x3, x2, #32
   1ce34:	ldrb	w4, [x8, #189]
   1ce38:	ldr	x5, [x8, #24]
   1ce3c:	bl	185e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   1ce40:	b	1cec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d88>
   1ce44:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ce48:	add	x1, x1, #0x30e
   1ce4c:	add	x0, sp, #0x60
   1ce50:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1ce54:	b	1cec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d88>
   1ce58:	ldr	x2, [x21, #24]
   1ce5c:	adrp	x1, 25000 <__interceptor_sigaction@@Base+0x2a44>
   1ce60:	add	x1, x1, #0xb98
   1ce64:	add	x0, sp, #0x60
   1ce68:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1ce6c:	b	1cec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d88>
   1ce70:	ldr	x8, [x21, #32]
   1ce74:	ldr	x1, [x8, #56]
   1ce78:	cbz	x1, 1ce9c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d64>
   1ce7c:	ldp	w2, w3, [x8, #64]
   1ce80:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ce84:	ldr	x8, [x8, #4056]
   1ce88:	add	x0, sp, #0x60
   1ce8c:	ldrb	w4, [x8, #189]
   1ce90:	ldr	x5, [x8, #24]
   1ce94:	bl	185e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a8>
   1ce98:	b	1cec0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d88>
   1ce9c:	ldr	x1, [x8, #16]
   1cea0:	cbz	x1, 1d33c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5204>
   1cea4:	ldr	x2, [x8, #24]
   1cea8:	ldr	w3, [x8, #32]
   1ceac:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1ceb0:	ldr	x8, [x8, #4056]
   1ceb4:	add	x0, sp, #0x60
   1ceb8:	ldr	x4, [x8, #24]
   1cebc:	bl	186c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x590>
   1cec0:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1cec4:	add	x1, x1, #0xa59
   1cec8:	add	x0, sp, #0x60
   1cecc:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1ced0:	ldr	w9, [x21, #40]
   1ced4:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1ced8:	add	x8, x8, #0x32c
   1cedc:	cbz	w9, 1cf14 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ddc>
   1cee0:	cmp	w9, #0x1
   1cee4:	b.ne	1cf44 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e0c>  // b.any
   1cee8:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ceec:	tst	w19, #0x1
   1cef0:	add	x9, x9, #0x76f
   1cef4:	csel	x23, x8, x26, ne  // ne = any
   1cef8:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cefc:	csel	x2, x9, x26, ne  // ne = any
   1cf00:	add	x1, x1, #0x32f
   1cf04:	add	x0, sp, #0x60
   1cf08:	mov	x3, x23
   1cf0c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1cf10:	b	1cf4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e14>
   1cf14:	adrp	x9, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1cf18:	tst	w19, #0x1
   1cf1c:	add	x9, x9, #0x322
   1cf20:	csel	x23, x8, x26, ne  // ne = any
   1cf24:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cf28:	csel	x2, x9, x26, ne  // ne = any
   1cf2c:	add	x1, x1, #0x318
   1cf30:	add	x0, sp, #0x60
   1cf34:	mov	x3, x23
   1cf38:	mov	x4, x20
   1cf3c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1cf40:	b	1cf4c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e14>
   1cf44:	tst	w19, #0x1
   1cf48:	csel	x23, x8, x26, ne  // ne = any
   1cf4c:	ldr	x1, [x21, #48]
   1cf50:	add	x22, x21, #0x40
   1cf54:	add	x0, sp, #0x60
   1cf58:	mov	x2, x22
   1cf5c:	bl	1d3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x526c>
   1cf60:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1cf64:	add	x1, x1, #0x6b3
   1cf68:	add	x0, sp, #0x60
   1cf6c:	mov	x2, x23
   1cf70:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1cf74:	ldr	x1, [sp, #96]
   1cf78:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1cf7c:	add	x0, x0, #0x338
   1cf80:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1cf84:	ldr	w8, [x21]
   1cf88:	cmp	w8, #0x2
   1cf8c:	b.ne	1d314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51dc>  // b.any
   1cf90:	ldr	x20, [x21, #24]
   1cf94:	ldr	w25, [x21, #416]
   1cf98:	subs	x8, x20, #0x4
   1cf9c:	csel	x8, xzr, x8, cc  // cc = lo, ul, last
   1cfa0:	adds	x9, x20, #0x4
   1cfa4:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
   1cfa8:	cbz	w25, 1cff4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ebc>
   1cfac:	add	x11, x21, #0x188
   1cfb0:	mov	x12, x25
   1cfb4:	mov	x10, x8
   1cfb8:	ldur	w13, [x11, #-64]
   1cfbc:	cmp	w13, #0x2
   1cfc0:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1cfc4:	ldur	w13, [x11, #-24]
   1cfc8:	cmp	w13, #0x2
   1cfcc:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1cfd0:	ldur	x13, [x11, #-40]
   1cfd4:	ldr	x14, [x11], #88
   1cfd8:	cmp	x13, x10
   1cfdc:	csel	x10, x13, x10, cc  // cc = lo, ul, last
   1cfe0:	cmp	x14, x9
   1cfe4:	csel	x9, x14, x9, hi  // hi = pmore
   1cfe8:	subs	x12, x12, #0x1
   1cfec:	b.ne	1cfb8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4e80>  // b.any
   1cff0:	b	1cff8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ec0>
   1cff4:	mov	x10, x8
   1cff8:	sub	x11, x9, x10
   1cffc:	sub	x9, x9, #0x20
   1d000:	cmp	x9, x8
   1d004:	csel	x8, x9, x8, cc  // cc = lo, ul, last
   1d008:	cmp	x11, #0x20
   1d00c:	csel	x24, x8, x10, hi  // hi = pmore
   1d010:	adds	x8, x24, #0x20
   1d014:	csinv	x29, x8, xzr, cc  // cc = lo, ul, last
   1d018:	sub	x1, x29, x24
   1d01c:	mov	x0, x24
   1d020:	bl	14be0 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   1d024:	tbz	w0, #0, 1d134 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ffc>
   1d028:	add	x0, sp, #0x30
   1d02c:	mov	w1, #0x400                 	// #1024
   1d030:	stp	x25, xzr, [sp, #40]
   1d034:	str	x23, [sp, #8]
   1d038:	add	x21, x21, #0x148
   1d03c:	stp	xzr, xzr, [sp, #56]
   1d040:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1d044:	ldr	x8, [sp, #64]
   1d048:	cmp	x8, #0x3ff
   1d04c:	b.hi	1d084 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f4c>  // b.pmore
   1d050:	ldr	x9, [sp, #56]
   1d054:	cmp	x9, #0x3ff
   1d058:	b.hi	1d06c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f34>  // b.pmore
   1d05c:	add	x0, sp, #0x30
   1d060:	mov	w1, #0x400                 	// #1024
   1d064:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   1d068:	ldr	x8, [sp, #64]
   1d06c:	ldr	x9, [sp, #48]
   1d070:	mov	w10, #0x400                 	// #1024
   1d074:	sub	x2, x10, x8
   1d078:	mov	w1, wzr
   1d07c:	add	x0, x9, x8
   1d080:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   1d084:	ldr	x8, [sp, #48]
   1d088:	ldr	q0, [sp, #16]
   1d08c:	cmp	x29, x24
   1d090:	str	x21, [sp, #32]
   1d094:	str	x22, [sp]
   1d098:	str	q0, [sp, #64]
   1d09c:	strb	wzr, [x8]
   1d0a0:	b.eq	1d0e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4fa8>  // b.none
   1d0a4:	adrp	x21, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d0a8:	adrp	x22, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d0ac:	adrp	x25, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d0b0:	add	x21, x21, #0x79d
   1d0b4:	add	x22, x22, #0x79c
   1d0b8:	add	x25, x25, #0x795
   1d0bc:	mov	x23, x24
   1d0c0:	tst	x23, #0x7
   1d0c4:	ldrb	w3, [x23], #1
   1d0c8:	csel	x2, x22, x21, eq  // eq = none
   1d0cc:	add	x0, sp, #0x30
   1d0d0:	mov	x1, x25
   1d0d4:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d0d8:	cmp	x29, x23
   1d0dc:	b.ne	1d0c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4f88>  // b.any
   1d0e0:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1d0e4:	add	x1, x1, #0x561
   1d0e8:	add	x0, sp, #0x30
   1d0ec:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d0f0:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d0f4:	add	x8, x8, #0x79f
   1d0f8:	tst	w19, #0x1
   1d0fc:	csel	x1, x8, x26, ne  // ne = any
   1d100:	add	x0, sp, #0x30
   1d104:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d108:	ldp	x1, x2, [sp, #32]
   1d10c:	mov	x0, x24
   1d110:	bl	1d9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5868>
   1d114:	cmp	x29, x24
   1d118:	b.ne	1d144 <__sanitizer_get_module_and_offset_for_pc@@Base+0x500c>  // b.any
   1d11c:	ldr	x2, [sp, #8]
   1d120:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1d124:	add	x1, x1, #0x6b3
   1d128:	add	x0, sp, #0x30
   1d12c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d130:	b	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x51c4>
   1d134:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d138:	add	x0, x0, #0x779
   1d13c:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1d140:	b	1d314 <__sanitizer_get_module_and_offset_for_pc@@Base+0x51dc>
   1d144:	adrp	x19, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1d148:	mov	x26, x0
   1d14c:	mov	w21, #0x20                  	// #32
   1d150:	mov	w22, #0x7e                  	// #126
   1d154:	add	x19, x19, #0x693
   1d158:	mov	w23, #0x5e                  	// #94
   1d15c:	mov	x25, x24
   1d160:	b	1d1a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x506c>
   1d164:	add	x0, sp, #0x30
   1d168:	mov	x1, x19
   1d16c:	mov	w2, w28
   1d170:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d174:	cmp	x20, x25
   1d178:	csel	w2, w23, w27, eq  // eq = none
   1d17c:	add	x0, sp, #0x30
   1d180:	mov	x1, x19
   1d184:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d188:	add	x0, sp, #0x30
   1d18c:	mov	x1, x19
   1d190:	mov	w2, w27
   1d194:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d198:	add	x25, x25, #0x1
   1d19c:	cmp	x29, x25
   1d1a0:	b.eq	1d22c <__sanitizer_get_module_and_offset_for_pc@@Base+0x50f4>  // b.none
   1d1a4:	cbz	x26, 1d1d0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5098>
   1d1a8:	ldr	w8, [x26, #40]
   1d1ac:	cmp	w8, #0x2
   1d1b0:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1d1b4:	ldr	x8, [x26, #64]
   1d1b8:	cmp	x25, x8
   1d1bc:	b.ne	1d1e0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50a8>  // b.any
   1d1c0:	ldp	x1, x2, [sp, #32]
   1d1c4:	mov	x0, x25
   1d1c8:	bl	1d9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5868>
   1d1cc:	mov	x26, x0
   1d1d0:	cmp	x25, x20
   1d1d4:	b.ls	1d1dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x50a4>  // b.plast
   1d1d8:	cbz	x26, 1d22c <__sanitizer_get_module_and_offset_for_pc@@Base+0x50f4>
   1d1dc:	cbz	x26, 1d208 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50d0>
   1d1e0:	ldr	w8, [x26]
   1d1e4:	cmp	w8, #0x2
   1d1e8:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1d1ec:	ldr	x8, [x26, #24]
   1d1f0:	cmp	x8, x25
   1d1f4:	csel	w28, w22, w21, cc  // cc = lo, ul, last
   1d1f8:	csel	w27, w21, w22, hi  // hi = pmore
   1d1fc:	tst	x25, #0x7
   1d200:	b.ne	1d164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x502c>  // b.any
   1d204:	b	1d218 <__sanitizer_get_module_and_offset_for_pc@@Base+0x50e0>
   1d208:	mov	w28, #0x20                  	// #32
   1d20c:	mov	w27, #0x20                  	// #32
   1d210:	tst	x25, #0x7
   1d214:	b.ne	1d164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x502c>  // b.any
   1d218:	add	x0, sp, #0x30
   1d21c:	mov	x1, x19
   1d220:	mov	w2, w28
   1d224:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d228:	b	1d164 <__sanitizer_get_module_and_offset_for_pc@@Base+0x502c>
   1d22c:	ldr	x2, [sp, #8]
   1d230:	adrp	x1, 26000 <__interceptor_sigaction@@Base+0x3a44>
   1d234:	add	x1, x1, #0x6b3
   1d238:	add	x0, sp, #0x30
   1d23c:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d240:	ldp	x25, x23, [sp, #32]
   1d244:	mov	w21, wzr
   1d248:	mov	x19, xzr
   1d24c:	mov	w20, #0x1                   	// #1
   1d250:	cbz	x19, 1d26c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5134>
   1d254:	ldr	w8, [x19, #40]
   1d258:	cmp	w8, #0x2
   1d25c:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1d260:	ldr	x8, [x19, #64]
   1d264:	cmp	x24, x8
   1d268:	b.ne	1d284 <__sanitizer_get_module_and_offset_for_pc@@Base+0x514c>  // b.any
   1d26c:	mov	x0, x24
   1d270:	mov	x1, x25
   1d274:	mov	w2, w23
   1d278:	bl	1d9a0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5868>
   1d27c:	mov	x19, x0
   1d280:	cbz	x0, 1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x51c4>
   1d284:	ldr	w9, [x19]
   1d288:	tst	x24, #0x7
   1d28c:	cinc	w8, w20, eq  // eq = none
   1d290:	cmp	w9, #0x2
   1d294:	b.ne	1d344 <__sanitizer_get_module_and_offset_for_pc@@Base+0x520c>  // b.any
   1d298:	ldr	x9, [x19, #24]
   1d29c:	add	w22, w8, w21
   1d2a0:	cmp	x24, x9
   1d2a4:	b.eq	1d2bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5184>  // b.none
   1d2a8:	add	x24, x24, #0x1
   1d2ac:	cmp	x29, x24
   1d2b0:	add	w21, w22, #0x2
   1d2b4:	b.ne	1d250 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5118>  // b.any
   1d2b8:	b	1d2fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x51c4>
   1d2bc:	cbz	w22, 1d2dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x51a4>
   1d2c0:	adrp	x21, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d2c4:	add	x21, x21, #0x79d
   1d2c8:	add	x0, sp, #0x30
   1d2cc:	mov	x1, x21
   1d2d0:	sub	w22, w22, #0x1
   1d2d4:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d2d8:	cbnz	w22, 1d2c8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5190>
   1d2dc:	ldr	x1, [x19, #80]
   1d2e0:	ldr	x2, [sp]
   1d2e4:	add	x0, sp, #0x30
   1d2e8:	bl	1d3a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x526c>
   1d2ec:	adrp	x1, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1d2f0:	add	x1, x1, #0x561
   1d2f4:	add	x0, sp, #0x30
   1d2f8:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d2fc:	ldr	x1, [sp, #48]
   1d300:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d304:	add	x0, x0, #0x338
   1d308:	bl	ff04 <__sanitizer_on_print@@Base+0x4>
   1d30c:	ldp	x0, x1, [sp, #48]
   1d310:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1d314:	ldp	x0, x1, [sp, #96]
   1d318:	bl	e8cc <__sanitizer_set_report_fd@@Base+0x5018>
   1d31c:	ldp	x20, x19, [sp, #208]
   1d320:	ldp	x22, x21, [sp, #192]
   1d324:	ldp	x24, x23, [sp, #176]
   1d328:	ldp	x26, x25, [sp, #160]
   1d32c:	ldp	x28, x27, [sp, #144]
   1d330:	ldp	x29, x30, [sp, #128]
   1d334:	add	sp, sp, #0xe0
   1d338:	ret
   1d33c:	ldr	x2, [x8, #8]
   1d340:	b	1ce5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4d24>
   1d344:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d348:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d34c:	add	x0, x0, #0x3bb
   1d350:	add	x2, x2, #0x7a9
   1d354:	mov	w1, #0x56                  	// #86
   1d358:	mov	x3, xzr
   1d35c:	mov	x4, xzr
   1d360:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d364:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d368:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d36c:	add	x0, x0, #0x33b
   1d370:	add	x2, x2, #0x745
   1d374:	mov	w1, #0x42                  	// #66
   1d378:	mov	x3, xzr
   1d37c:	mov	x4, xzr
   1d380:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d384:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d388:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   1d38c:	add	x0, x0, #0x419
   1d390:	add	x2, x2, #0x7fd
   1d394:	mov	w1, #0x1c5                 	// #453
   1d398:	mov	x3, xzr
   1d39c:	mov	x4, xzr
   1d3a0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d3a4:	sub	sp, sp, #0x80
   1d3a8:	stp	x29, x30, [sp, #32]
   1d3ac:	stp	x28, x27, [sp, #48]
   1d3b0:	stp	x26, x25, [sp, #64]
   1d3b4:	stp	x24, x23, [sp, #80]
   1d3b8:	stp	x22, x21, [sp, #96]
   1d3bc:	stp	x20, x19, [sp, #112]
   1d3c0:	adrp	x24, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d3c4:	adrp	x22, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d3c8:	adrp	x23, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d3cc:	adrp	x27, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d3d0:	adrp	x28, 25000 <__interceptor_sigaction@@Base+0x2a44>
   1d3d4:	adrp	x29, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1d3d8:	mov	x19, x2
   1d3dc:	mov	x20, x1
   1d3e0:	mov	x21, x0
   1d3e4:	add	x24, x24, #0x2fd
   1d3e8:	add	x22, x22, #0x338
   1d3ec:	add	x23, x23, #0x473
   1d3f0:	mov	x26, #0x8000000000000000    	// #-9223372036854775808
   1d3f4:	add	x27, x27, #0x482
   1d3f8:	add	x28, x28, #0xb98
   1d3fc:	add	x29, x29, #0x693
   1d400:	b	1d41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e4>
   1d404:	add	x8, x19, x25, lsl #5
   1d408:	ldr	x2, [x8, #16]
   1d40c:	mov	x0, x21
   1d410:	mov	x1, x22
   1d414:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d418:	add	x20, x20, #0x1
   1d41c:	ldrb	w2, [x20]
   1d420:	cmp	w2, #0x25
   1d424:	b.eq	1d440 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5308>  // b.none
   1d428:	cbz	w2, 1d524 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53ec>
   1d42c:	mov	x0, x21
   1d430:	mov	x1, x29
   1d434:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d438:	add	x20, x20, #0x1
   1d43c:	b	1d41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e4>
   1d440:	ldrb	w8, [x20, #1]!
   1d444:	sub	x25, x8, #0x30
   1d448:	lsl	x8, x25, #5
   1d44c:	ldr	w8, [x19, x8]
   1d450:	cmp	w8, #0x5
   1d454:	b.hi	1d418 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e0>  // b.pmore
   1d458:	adr	x9, 1d404 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52cc>
   1d45c:	ldrb	w10, [x24, x8]
   1d460:	add	x9, x9, x10, lsl #2
   1d464:	br	x9
   1d468:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1d46c:	add	x8, x19, x25, lsl #5
   1d470:	ldr	x1, [x8, #16]
   1d474:	bl	19568 <__sanitizer_get_module_and_offset_for_pc@@Base+0x1430>
   1d478:	mov	x2, x0
   1d47c:	mov	x0, x21
   1d480:	mov	x1, x23
   1d484:	b	1d414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   1d488:	add	x8, x19, x25, lsl #5
   1d48c:	ldp	x5, x3, [x8, #16]
   1d490:	cbnz	x3, 1d504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53cc>
   1d494:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d498:	mov	x0, x21
   1d49c:	add	x1, x1, #0x47d
   1d4a0:	mov	x2, x5
   1d4a4:	b	1d414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   1d4a8:	add	x8, x19, x25, lsl #5
   1d4ac:	ldp	x5, x3, [x8, #16]
   1d4b0:	cmn	x5, x26
   1d4b4:	adcs	x8, x3, xzr
   1d4b8:	cbnz	x8, 1d504 <__sanitizer_get_module_and_offset_for_pc@@Base+0x53cc>
   1d4bc:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d4c0:	mov	x0, x21
   1d4c4:	add	x1, x1, #0x478
   1d4c8:	mov	x2, x5
   1d4cc:	b	1d414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   1d4d0:	add	x8, x19, x25, lsl #5
   1d4d4:	ldr	q0, [x8, #16]
   1d4d8:	mov	x0, sp
   1d4dc:	mov	w1, #0x20                  	// #32
   1d4e0:	mov	x2, x27
   1d4e4:	bl	47d0 <snprintf@plt>
   1d4e8:	mov	x2, sp
   1d4ec:	b	1d40c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52d4>
   1d4f0:	add	x8, x19, x25, lsl #5
   1d4f4:	ldr	x2, [x8, #16]
   1d4f8:	mov	x0, x21
   1d4fc:	mov	x1, x28
   1d500:	b	1d414 <__sanitizer_get_module_and_offset_for_pc@@Base+0x52dc>
   1d504:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d508:	lsr	x2, x3, #32
   1d50c:	lsr	x4, x5, #32
   1d510:	mov	x0, x21
   1d514:	add	x1, x1, #0x486
   1d518:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   1d51c:	add	x20, x20, #0x1
   1d520:	b	1d41c <__sanitizer_get_module_and_offset_for_pc@@Base+0x52e4>
   1d524:	ldp	x20, x19, [sp, #112]
   1d528:	ldp	x22, x21, [sp, #96]
   1d52c:	ldp	x24, x23, [sp, #80]
   1d530:	ldp	x26, x25, [sp, #64]
   1d534:	ldp	x28, x27, [sp, #48]
   1d538:	ldp	x29, x30, [sp, #32]
   1d53c:	add	sp, sp, #0x80
   1d540:	ret
   1d544:	b	1daf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c0>
   1d548:	str	x30, [sp, #-48]!
   1d54c:	stp	x22, x21, [sp, #16]
   1d550:	stp	x20, x19, [sp, #32]
   1d554:	mov	w19, w3
   1d558:	mov	x20, x2
   1d55c:	mov	x21, x1
   1d560:	mov	x22, x0
   1d564:	bl	1daf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c0>
   1d568:	add	x0, x22, #0x1
   1d56c:	bl	1c388 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4250>
   1d570:	ldr	x8, [x21, #16]
   1d574:	ldr	q0, [x21]
   1d578:	str	x8, [x22, #24]
   1d57c:	stur	q0, [x22, #8]
   1d580:	ldr	x8, [x20, #32]
   1d584:	ldp	q1, q0, [x20]
   1d588:	str	w19, [x22, #72]
   1d58c:	str	x8, [x22, #64]
   1d590:	stp	q1, q0, [x22, #32]
   1d594:	ldp	x20, x19, [sp, #32]
   1d598:	ldp	x22, x21, [sp, #16]
   1d59c:	ldr	x30, [sp], #48
   1d5a0:	ret
   1d5a4:	str	x29, [sp, #-64]!
   1d5a8:	stp	x30, x23, [sp, #16]
   1d5ac:	stp	x22, x21, [sp, #32]
   1d5b0:	stp	x20, x19, [sp, #48]
   1d5b4:	sub	sp, sp, #0x820
   1d5b8:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1d5bc:	ldr	x22, [x22, #3792]
   1d5c0:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1d5c4:	mov	x19, x0
   1d5c8:	ldrb	w8, [x22, #1]
   1d5cc:	ldr	x23, [x23, #4056]
   1d5d0:	cbz	w8, 1d658 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5520>
   1d5d4:	ldp	x20, x21, [x19, #16]
   1d5d8:	ldrb	w9, [x23, #33]
   1d5dc:	mov	x8, sp
   1d5e0:	add	x8, x8, #0x10
   1d5e4:	stp	x8, xzr, [sp]
   1d5e8:	str	xzr, [sp, #2064]
   1d5ec:	str	xzr, [sp, #2088]
   1d5f0:	str	xzr, [sp, #2072]
   1d5f4:	cbz	w9, 1d62c <__sanitizer_get_module_and_offset_for_pc@@Base+0x54f4>
   1d5f8:	add	x1, sp, #0x828
   1d5fc:	add	x2, sp, #0x818
   1d600:	mov	w0, wzr
   1d604:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   1d608:	ldr	x5, [sp, #2088]
   1d60c:	ldr	x6, [sp, #2072]
   1d610:	mov	x0, sp
   1d614:	mov	w1, #0x100                 	// #256
   1d618:	mov	w7, #0x1                   	// #1
   1d61c:	mov	x2, x20
   1d620:	mov	x3, x21
   1d624:	mov	x4, xzr
   1d628:	b	1d64c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5514>
   1d62c:	mov	x0, sp
   1d630:	mov	w1, #0x100                 	// #256
   1d634:	mov	x2, x20
   1d638:	mov	x3, x21
   1d63c:	mov	x4, xzr
   1d640:	mov	x5, xzr
   1d644:	mov	x6, xzr
   1d648:	mov	w7, wzr
   1d64c:	bl	17d78 <__sanitizer_cov_pcs_init@@Base+0x1694>
   1d650:	mov	x0, sp
   1d654:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   1d658:	ldrb	w8, [x23, #60]
   1d65c:	cbz	w8, 1d708 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d0>
   1d660:	ldrb	w8, [x22, #16]
   1d664:	ldr	w9, [x19, #72]
   1d668:	cmp	w8, #0x0
   1d66c:	csel	w9, wzr, w9, eq  // eq = none
   1d670:	cmp	w9, #0x20
   1d674:	b.cs	1d758 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5620>  // b.hs, b.nlast
   1d678:	adrp	x10, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1d67c:	ldr	w8, [x19, #32]
   1d680:	add	x10, x10, #0xa30
   1d684:	ldr	x20, [x10, w9, sxtw #3]
   1d688:	cmp	w8, #0x3
   1d68c:	b.eq	1d730 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55f8>  // b.none
   1d690:	cmp	w8, #0x1
   1d694:	b.ne	1d6f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55c0>  // b.any
   1d698:	ldr	x21, [x19, #40]
   1d69c:	cbz	x21, 1d6f8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55c0>
   1d6a0:	ldr	x23, [x19, #48]
   1d6a4:	mov	x0, sp
   1d6a8:	bl	188dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x7a4>
   1d6ac:	mov	x0, x21
   1d6b0:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   1d6b4:	str	x0, [sp, #48]
   1d6b8:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1d6bc:	lsr	x8, x23, #32
   1d6c0:	add	x0, x0, #0x562
   1d6c4:	stp	w23, w8, [sp, #56]
   1d6c8:	bl	c090 <__sanitizer_set_report_fd@@Base+0x27dc>
   1d6cc:	str	x0, [sp, #32]
   1d6d0:	bl	1da50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5918>
   1d6d4:	mov	x2, x0
   1d6d8:	mov	x1, sp
   1d6dc:	mov	x0, x20
   1d6e0:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1d6e4:	mov	x0, sp
   1d6e8:	bl	18900 <__sanitizer_get_module_and_offset_for_pc@@Base+0x7c8>
   1d6ec:	ldrb	w8, [x22]
   1d6f0:	cbz	w8, 1d710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   1d6f4:	b	1d754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x561c>
   1d6f8:	bl	1da50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5918>
   1d6fc:	mov	x1, x0
   1d700:	mov	x0, x20
   1d704:	bl	6918 <__sancov_default_options@plt+0x1f98>
   1d708:	ldrb	w8, [x22]
   1d70c:	cbnz	w8, 1d754 <__sanitizer_get_module_and_offset_for_pc@@Base+0x561c>
   1d710:	add	x0, x19, #0x1
   1d714:	bl	1c478 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4340>
   1d718:	add	sp, sp, #0x820
   1d71c:	ldp	x20, x19, [sp, #48]
   1d720:	ldp	x22, x21, [sp, #32]
   1d724:	ldp	x30, x23, [sp, #16]
   1d728:	ldr	x29, [sp], #64
   1d72c:	ret
   1d730:	ldr	x8, [x19, #64]
   1d734:	add	x21, x8, #0x8
   1d738:	bl	1da50 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5918>
   1d73c:	mov	x2, x0
   1d740:	mov	x0, x20
   1d744:	mov	x1, x21
   1d748:	bl	1b6ac <__sanitizer_get_module_and_offset_for_pc@@Base+0x3574>
   1d74c:	ldrb	w8, [x22]
   1d750:	cbz	w8, 1d710 <__sanitizer_get_module_and_offset_for_pc@@Base+0x55d8>
   1d754:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1d758:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d75c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d760:	add	x0, x0, #0x33b
   1d764:	add	x2, x2, #0x745
   1d768:	mov	w1, #0x42                  	// #66
   1d76c:	mov	x3, xzr
   1d770:	mov	x4, xzr
   1d774:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d778:	str	x30, [sp, #-32]!
   1d77c:	stp	x20, x19, [sp, #16]
   1d780:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1d784:	ldr	x4, [x8, #3520]
   1d788:	cbnz	x4, 1d7cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5694>
   1d78c:	adrp	x20, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1d790:	add	x20, x20, #0xdc0
   1d794:	adrp	x1, 44000 <__interceptor_sigaction@@Base+0x21a44>
   1d798:	add	x19, x20, #0x40
   1d79c:	add	x1, x1, #0xaa0
   1d7a0:	mov	w2, #0x21                  	// #33
   1d7a4:	mov	x0, x19
   1d7a8:	bl	1150c <__sanitizer_on_print@@Base+0x160c>
   1d7ac:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1d7b0:	ldr	x8, [x8, #3792]
   1d7b4:	str	x19, [x20]
   1d7b8:	mov	x0, x19
   1d7bc:	ldp	x20, x19, [sp, #16]
   1d7c0:	ldr	x1, [x8, #8]
   1d7c4:	ldr	x30, [sp], #32
   1d7c8:	b	11564 <__sanitizer_on_print@@Base+0x1664>
   1d7cc:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d7d0:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d7d4:	add	x0, x0, #0x33b
   1d7d8:	add	x2, x2, #0x37d
   1d7dc:	mov	w1, #0x196                 	// #406
   1d7e0:	mov	x3, xzr
   1d7e4:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d7e8:	sub	sp, sp, #0x20
   1d7ec:	stp	x30, x19, [sp, #16]
   1d7f0:	mov	x19, x0
   1d7f4:	bl	1daf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c0>
   1d7f8:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1d7fc:	ldr	x0, [x8, #3520]
   1d800:	cbz	x0, 1d828 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56f0>
   1d804:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d808:	add	x2, x2, #0x303
   1d80c:	add	x3, sp, #0x8
   1d810:	mov	x1, x19
   1d814:	bl	119d4 <__sanitizer_on_print@@Base+0x1ad4>
   1d818:	ldp	x30, x19, [sp, #16]
   1d81c:	and	w0, w0, #0x1
   1d820:	add	sp, sp, #0x20
   1d824:	ret
   1d828:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d82c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d830:	add	x0, x0, #0x33b
   1d834:	add	x2, x2, #0x3a0
   1d838:	mov	w1, #0x19e                 	// #414
   1d83c:	mov	x3, xzr
   1d840:	mov	x4, xzr
   1d844:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d848:	sub	sp, sp, #0x40
   1d84c:	str	x30, [sp, #16]
   1d850:	stp	x22, x21, [sp, #32]
   1d854:	stp	x20, x19, [sp, #48]
   1d858:	mov	x21, x2
   1d85c:	mov	x20, x1
   1d860:	mov	w19, w0
   1d864:	bl	1daf8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59c0>
   1d868:	adrp	x22, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1d86c:	ldr	x0, [x22, #3520]
   1d870:	cbz	x0, 1d968 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5830>
   1d874:	cmp	w19, #0x20
   1d878:	b.cs	1d980 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5848>  // b.hs, b.nlast
   1d87c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1d880:	add	x8, x8, #0xb30
   1d884:	ldr	x19, [x8, w19, sxtw #3]
   1d888:	mov	x1, x19
   1d88c:	bl	11ab0 <__sanitizer_on_print@@Base+0x1bb0>
   1d890:	tbz	w0, #0, 1d8f4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57bc>
   1d894:	str	xzr, [sp]
   1d898:	cbz	x21, 1d8b4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x577c>
   1d89c:	ldr	x0, [x22, #3520]
   1d8a0:	mov	x3, sp
   1d8a4:	mov	x1, x21
   1d8a8:	mov	x2, x19
   1d8ac:	bl	119d4 <__sanitizer_on_print@@Base+0x1ad4>
   1d8b0:	tbnz	w0, #0, 1d8ec <__sanitizer_get_module_and_offset_for_pc@@Base+0x57b4>
   1d8b4:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1d8b8:	add	x2, sp, #0x18
   1d8bc:	add	x3, sp, #0x8
   1d8c0:	mov	x1, x20
   1d8c4:	str	xzr, [sp, #24]
   1d8c8:	bl	19484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   1d8cc:	ldr	x1, [sp, #24]
   1d8d0:	cbz	x1, 1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x57c4>
   1d8d4:	tbz	w0, #0, 1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x57c4>
   1d8d8:	ldr	x0, [x22, #3520]
   1d8dc:	mov	x3, sp
   1d8e0:	mov	x2, x19
   1d8e4:	bl	119d4 <__sanitizer_on_print@@Base+0x1ad4>
   1d8e8:	tbz	w0, #0, 1d8fc <__sanitizer_get_module_and_offset_for_pc@@Base+0x57c4>
   1d8ec:	mov	w19, #0x1                   	// #1
   1d8f0:	b	1d950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>
   1d8f4:	mov	w19, wzr
   1d8f8:	b	1d950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>
   1d8fc:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   1d900:	mov	x1, x20
   1d904:	bl	191dc <__sanitizer_get_module_and_offset_for_pc@@Base+0x10a4>
   1d908:	mov	x20, x0
   1d90c:	ldr	x0, [x22, #3520]
   1d910:	ldr	x1, [x20, #40]
   1d914:	mov	x3, sp
   1d918:	mov	x2, x19
   1d91c:	bl	119d4 <__sanitizer_on_print@@Base+0x1ad4>
   1d920:	tbz	w0, #0, 1d930 <__sanitizer_get_module_and_offset_for_pc@@Base+0x57f8>
   1d924:	mov	w19, #0x1                   	// #1
   1d928:	cbnz	x20, 1d948 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5810>
   1d92c:	b	1d950 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5818>
   1d930:	ldr	x0, [x22, #3520]
   1d934:	ldr	x1, [x20, #56]
   1d938:	mov	x3, sp
   1d93c:	mov	x2, x19
   1d940:	bl	119d4 <__sanitizer_on_print@@Base+0x1ad4>
   1d944:	mov	w19, w0
   1d948:	mov	x0, x20
   1d94c:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1d950:	and	w0, w19, #0x1
   1d954:	ldp	x20, x19, [sp, #48]
   1d958:	ldp	x22, x21, [sp, #32]
   1d95c:	ldr	x30, [sp, #16]
   1d960:	add	sp, sp, #0x40
   1d964:	ret
   1d968:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d96c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d970:	add	x0, x0, #0x33b
   1d974:	add	x2, x2, #0x3a0
   1d978:	mov	w1, #0x1a5                 	// #421
   1d97c:	b	1d994 <__sanitizer_get_module_and_offset_for_pc@@Base+0x585c>
   1d980:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d984:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1d988:	add	x0, x0, #0x33b
   1d98c:	add	x2, x2, #0x745
   1d990:	mov	w1, #0x4d                  	// #77
   1d994:	mov	x3, xzr
   1d998:	mov	x4, xzr
   1d99c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1d9a0:	str	x30, [sp, #-16]!
   1d9a4:	cbz	w2, 1da24 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58ec>
   1d9a8:	mov	x8, x0
   1d9ac:	mov	w10, wzr
   1d9b0:	mov	x0, xzr
   1d9b4:	mov	w9, #0x58                  	// #88
   1d9b8:	b	1d9cc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5894>
   1d9bc:	mov	x0, x11
   1d9c0:	add	w10, w10, #0x1
   1d9c4:	cmp	w2, w10
   1d9c8:	b.eq	1da28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f0>  // b.none
   1d9cc:	umaddl	x11, w10, w9, x1
   1d9d0:	ldr	w12, [x11, #40]
   1d9d4:	cmp	w12, #0x2
   1d9d8:	b.ne	1da30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f8>  // b.any
   1d9dc:	mov	w10, w10
   1d9e0:	madd	x12, x10, x9, x1
   1d9e4:	ldr	x12, [x12, #64]
   1d9e8:	cmp	x12, x8
   1d9ec:	b.ls	1d9c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5888>  // b.plast
   1d9f0:	cbz	x0, 1d9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5884>
   1d9f4:	ldr	w12, [x0]
   1d9f8:	cmp	w12, #0x2
   1d9fc:	b.ne	1da30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f8>  // b.any
   1da00:	ldr	w12, [x11]
   1da04:	cmp	w12, #0x2
   1da08:	b.ne	1da30 <__sanitizer_get_module_and_offset_for_pc@@Base+0x58f8>  // b.any
   1da0c:	madd	x13, x10, x9, x1
   1da10:	ldr	x12, [x0, #24]
   1da14:	ldr	x13, [x13, #24]
   1da18:	cmp	x12, x13
   1da1c:	b.hi	1d9bc <__sanitizer_get_module_and_offset_for_pc@@Base+0x5884>  // b.pmore
   1da20:	b	1d9c0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5888>
   1da24:	mov	x0, xzr
   1da28:	ldr	x30, [sp], #16
   1da2c:	ret
   1da30:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1da34:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1da38:	add	x0, x0, #0x3bb
   1da3c:	add	x2, x2, #0x7a9
   1da40:	mov	w1, #0x56                  	// #86
   1da44:	mov	x3, xzr
   1da48:	mov	x4, xzr
   1da4c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   1da50:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1da54:	add	x0, x0, #0x85f
   1da58:	ret
   1da5c:	str	x30, [sp, #-32]!
   1da60:	stp	x20, x19, [sp, #16]
   1da64:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1da68:	add	x8, x8, #0xe70
   1da6c:	mov	w9, #0x1                   	// #1
   1da70:	ldaxrb	w10, [x8]
   1da74:	stlxrb	w11, w9, [x8]
   1da78:	cbnz	w11, 1da70 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5938>
   1da7c:	cbz	w10, 1da8c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5954>
   1da80:	adrp	x0, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1da84:	add	x0, x0, #0xe70
   1da88:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1da8c:	adrp	x19, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1da90:	ldrb	w8, [x19, #3697]
   1da94:	tbnz	w8, #0, 1dae0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59a8>
   1da98:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1da9c:	ldr	x8, [x8, #4024]
   1daa0:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1daa4:	add	x9, x9, #0x85f
   1daa8:	str	x9, [x8]
   1daac:	bl	6fc8 <__sanitizer_report_error_summary@@Base+0x5e0>
   1dab0:	bl	1dca0 <__ubsan_default_options@@Base+0x148>
   1dab4:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1dab8:	ldr	x20, [x20, #4056]
   1dabc:	ldr	x0, [x20, #40]
   1dac0:	bl	4960 <__sanitizer_set_report_path@plt>
   1dac4:	bl	14480 <__sanitizer_sandbox_on_notify@@Base+0x950>
   1dac8:	ldrb	w0, [x20, #169]
   1dacc:	ldr	x1, [x20, #176]
   1dad0:	bl	16154 <__sancov_default_options@@Base+0xf8>
   1dad4:	bl	1d778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5640>
   1dad8:	mov	w8, #0x1                   	// #1
   1dadc:	strb	w8, [x19, #3697]
   1dae0:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1dae4:	dmb	ish
   1dae8:	strb	wzr, [x8, #3696]
   1daec:	ldp	x20, x19, [sp, #16]
   1daf0:	ldr	x30, [sp], #32
   1daf4:	ret
   1daf8:	b	1da5c <__sanitizer_get_module_and_offset_for_pc@@Base+0x5924>
   1dafc:	stp	x30, x19, [sp, #-16]!
   1db00:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1db04:	add	x8, x8, #0xe70
   1db08:	mov	w9, #0x1                   	// #1
   1db0c:	ldaxrb	w10, [x8]
   1db10:	stlxrb	w11, w9, [x8]
   1db14:	cbnz	w11, 1db0c <__sanitizer_get_module_and_offset_for_pc@@Base+0x59d4>
   1db18:	cbz	w10, 1db28 <__sanitizer_get_module_and_offset_for_pc@@Base+0x59f0>
   1db1c:	adrp	x0, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1db20:	add	x0, x0, #0xe70
   1db24:	bl	67b8 <__sancov_default_options@plt+0x1e38>
   1db28:	adrp	x19, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1db2c:	ldrb	w8, [x19, #3697]
   1db30:	tbnz	w8, #0, 1db40 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5a08>
   1db34:	bl	1d778 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5640>
   1db38:	mov	w8, #0x1                   	// #1
   1db3c:	strb	w8, [x19, #3697]
   1db40:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1db44:	dmb	ish
   1db48:	strb	wzr, [x8, #3696]
   1db4c:	ldp	x30, x19, [sp], #16
   1db50:	ret
   1db54:	b	4920 <__ubsan_default_options@plt>

000000000001db58 <__ubsan_default_options@@Base>:
   1db58:	adrp	x0, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1db5c:	add	x0, x0, #0x562
   1db60:	ret
   1db64:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1db68:	add	x8, x8, #0x562
   1db6c:	strh	wzr, [x0]
   1db70:	str	x8, [x0, #8]
   1db74:	strh	wzr, [x0, #16]
   1db78:	ret
   1db7c:	stp	x30, x23, [sp, #-48]!
   1db80:	stp	x22, x21, [sp, #16]
   1db84:	stp	x20, x19, [sp, #32]
   1db88:	adrp	x20, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1db8c:	ldr	x20, [x20, #3752]
   1db90:	mov	x21, x1
   1db94:	mov	x19, x0
   1db98:	mov	w1, #0x10                  	// #16
   1db9c:	mov	x0, x20
   1dba0:	bl	501c <__sancov_default_options@plt+0x69c>
   1dba4:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1dba8:	add	x22, x22, #0x738
   1dbac:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dbb0:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dbb4:	mov	x2, x0
   1dbb8:	stp	x22, x21, [x0]
   1dbbc:	add	x1, x1, #0x87a
   1dbc0:	add	x3, x3, #0x888
   1dbc4:	mov	x0, x19
   1dbc8:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   1dbcc:	mov	w1, #0x10                  	// #16
   1dbd0:	mov	x0, x20
   1dbd4:	add	x23, x21, #0x1
   1dbd8:	bl	501c <__sancov_default_options@plt+0x69c>
   1dbdc:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dbe0:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dbe4:	mov	x2, x0
   1dbe8:	stp	x22, x23, [x0]
   1dbec:	add	x1, x1, #0x8c0
   1dbf0:	add	x3, x3, #0x8d1
   1dbf4:	mov	x0, x19
   1dbf8:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   1dbfc:	mov	w1, #0x10                  	// #16
   1dc00:	mov	x0, x20
   1dc04:	add	x23, x21, #0x8
   1dc08:	bl	501c <__sancov_default_options@plt+0x69c>
   1dc0c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1dc10:	add	x8, x8, #0x758
   1dc14:	adrp	x1, 24000 <__interceptor_sigaction@@Base+0x1a44>
   1dc18:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dc1c:	mov	x2, x0
   1dc20:	stp	x8, x23, [x0]
   1dc24:	add	x1, x1, #0xe31
   1dc28:	add	x3, x3, #0x8fe
   1dc2c:	mov	x0, x19
   1dc30:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   1dc34:	mov	w1, #0x10                  	// #16
   1dc38:	mov	x0, x20
   1dc3c:	add	x23, x21, #0x10
   1dc40:	bl	501c <__sancov_default_options@plt+0x69c>
   1dc44:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dc48:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dc4c:	mov	x2, x0
   1dc50:	stp	x22, x23, [x0]
   1dc54:	add	x1, x1, #0x916
   1dc58:	add	x3, x3, #0x928
   1dc5c:	mov	x0, x19
   1dc60:	bl	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   1dc64:	mov	w1, #0x10                  	// #16
   1dc68:	mov	x0, x20
   1dc6c:	add	x21, x21, #0x11
   1dc70:	bl	501c <__sancov_default_options@plt+0x69c>
   1dc74:	stp	x22, x21, [x0]
   1dc78:	mov	x2, x0
   1dc7c:	mov	x0, x19
   1dc80:	ldp	x20, x19, [sp, #32]
   1dc84:	ldp	x22, x21, [sp, #16]
   1dc88:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dc8c:	adrp	x3, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dc90:	add	x1, x1, #0x96e
   1dc94:	add	x3, x3, #0x988
   1dc98:	ldp	x30, x23, [sp], #48
   1dc9c:	b	bb18 <__sanitizer_set_report_fd@@Base+0x2264>
   1dca0:	sub	sp, sp, #0x120
   1dca4:	stp	x29, x30, [sp, #256]
   1dca8:	stp	x20, x19, [sp, #272]
   1dcac:	adrp	x19, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1dcb0:	ldr	x19, [x19, #4056]
   1dcb4:	mov	x0, x19
   1dcb8:	bl	98d4 <__sanitizer_set_report_fd@@Base+0x20>
   1dcbc:	add	x0, sp, #0x8
   1dcc0:	mov	x1, x19
   1dcc4:	bl	99cc <__sanitizer_set_report_fd@@Base+0x118>
   1dcc8:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dccc:	add	x0, x0, #0xa04
   1dcd0:	bl	d1f0 <__sanitizer_set_report_fd@@Base+0x393c>
   1dcd4:	str	x0, [sp, #16]
   1dcd8:	add	x1, sp, #0x8
   1dcdc:	mov	x0, x19
   1dce0:	bl	99cc <__sanitizer_set_report_fd@@Base+0x118>
   1dce4:	adrp	x20, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   1dce8:	adrp	x8, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1dcec:	add	x20, x20, #0xe78
   1dcf0:	add	x8, x8, #0x562
   1dcf4:	add	x0, sp, #0x8
   1dcf8:	strh	wzr, [x20]
   1dcfc:	str	x8, [x20, #8]
   1dd00:	strh	wzr, [x20, #16]
   1dd04:	bl	bb6c <__sanitizer_set_report_fd@@Base+0x22b8>
   1dd08:	add	x0, sp, #0x8
   1dd0c:	mov	x1, x19
   1dd10:	bl	9d40 <__sanitizer_set_report_fd@@Base+0x48c>
   1dd14:	add	x0, sp, #0x8
   1dd18:	mov	x1, x20
   1dd1c:	bl	1db7c <__ubsan_default_options@@Base+0x24>
   1dd20:	bl	4920 <__ubsan_default_options@plt>
   1dd24:	mov	x1, x0
   1dd28:	add	x0, sp, #0x8
   1dd2c:	mov	x2, xzr
   1dd30:	bl	b904 <__sanitizer_set_report_fd@@Base+0x2050>
   1dd34:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dd38:	add	x1, x1, #0xa1a
   1dd3c:	add	x0, sp, #0x8
   1dd40:	bl	b800 <__sanitizer_set_report_fd@@Base+0x1f4c>
   1dd44:	mov	x0, x19
   1dd48:	bl	ac88 <__sanitizer_set_report_fd@@Base+0x13d4>
   1dd4c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1dd50:	ldr	x8, [x8, #3872]
   1dd54:	ldr	w8, [x8]
   1dd58:	cbz	w8, 1dd60 <__ubsan_default_options@@Base+0x208>
   1dd5c:	bl	b144 <__sanitizer_set_report_fd@@Base+0x1890>
   1dd60:	ldrb	w8, [x19, #122]
   1dd64:	cbz	w8, 1dd70 <__ubsan_default_options@@Base+0x218>
   1dd68:	add	x0, sp, #0x8
   1dd6c:	bl	b208 <__sanitizer_set_report_fd@@Base+0x1954>
   1dd70:	ldp	x20, x19, [sp, #272]
   1dd74:	ldp	x29, x30, [sp, #256]
   1dd78:	add	sp, sp, #0x120
   1dd7c:	ret
   1dd80:	ldrb	w9, [x2]
   1dd84:	cbz	w9, 1dd90 <__ubsan_default_options@@Base+0x238>
   1dd88:	mov	w0, wzr
   1dd8c:	ret
   1dd90:	mov	x9, #0xfffffffeffffffff    	// #-4294967297
   1dd94:	cmp	x1, x9
   1dd98:	b.ls	1dda4 <__ubsan_default_options@@Base+0x24c>  // b.plast
   1dd9c:	mov	w0, #0x1                   	// #1
   1dda0:	ret
   1dda4:	ldr	x1, [x2, #8]
   1dda8:	mov	x8, x0
   1ddac:	mov	w0, w3
   1ddb0:	mov	x2, x8
   1ddb4:	b	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>

000000000001ddb8 <__ubsan_handle_type_mismatch_v1@@Base>:
   1ddb8:	sub	sp, sp, #0x30
   1ddbc:	stp	x29, x30, [sp, #32]
   1ddc0:	add	x29, sp, #0x20
   1ddc4:	ldur	w8, [x29, #-8]
   1ddc8:	ldur	w9, [x29, #-5]
   1ddcc:	mov	x2, sp
   1ddd0:	strb	wzr, [sp]
   1ddd4:	stur	w8, [sp, #1]
   1ddd8:	str	w9, [sp, #4]
   1dddc:	stp	x30, x29, [sp, #8]
   1dde0:	bl	1ddf0 <__ubsan_handle_type_mismatch_v1@@Base+0x38>
   1dde4:	ldp	x29, x30, [sp, #32]
   1dde8:	add	sp, sp, #0x30
   1ddec:	ret
   1ddf0:	stp	x29, x30, [sp, #-96]!
   1ddf4:	stp	x28, x27, [sp, #16]
   1ddf8:	stp	x26, x25, [sp, #32]
   1ddfc:	stp	x24, x23, [sp, #48]
   1de00:	stp	x22, x21, [sp, #64]
   1de04:	stp	x20, x19, [sp, #80]
   1de08:	sub	sp, sp, #0x420
   1de0c:	mov	x24, x2
   1de10:	mov	x19, x1
   1de14:	mov	x22, x0
   1de18:	add	x8, x0, #0xc
   1de1c:	mov	w9, #0xffffffff            	// #-1
   1de20:	ldaxr	w28, [x8]
   1de24:	stlxr	w10, w9, [x8]
   1de28:	cbnz	w10, 1de20 <__ubsan_handle_type_mismatch_v1@@Base+0x68>
   1de2c:	ldrb	w8, [x22, #24]
   1de30:	mov	w9, #0x1                   	// #1
   1de34:	ldr	x23, [x22]
   1de38:	ldr	w29, [x22, #8]
   1de3c:	lsl	x27, x9, x8
   1de40:	ldrb	w12, [x24]
   1de44:	sub	x8, x27, #0x1
   1de48:	mov	w10, #0x6                   	// #6
   1de4c:	mov	w11, #0x8                   	// #8
   1de50:	tst	x8, x19
   1de54:	csel	w8, w11, w10, eq  // eq = none
   1de58:	cmp	x19, #0x0
   1de5c:	csinc	w20, w8, wzr, ne  // ne = any
   1de60:	mov	x8, x23
   1de64:	cbz	w12, 1de7c <__ubsan_handle_type_mismatch_v1@@Base+0xc4>
   1de68:	add	x26, sp, #0x414
   1de6c:	cbz	x8, 1dea4 <__ubsan_handle_type_mismatch_v1@@Base+0xec>
   1de70:	mov	x21, xzr
   1de74:	mov	w25, #0x1                   	// #1
   1de78:	b	1dec8 <__ubsan_handle_type_mismatch_v1@@Base+0x110>
   1de7c:	cmn	w28, #0x1
   1de80:	b.eq	1e17c <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>  // b.none
   1de84:	ldr	x1, [x24, #8]
   1de88:	mov	w0, w20
   1de8c:	mov	x2, x23
   1de90:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1de94:	tbnz	w0, #0, 1e17c <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>
   1de98:	ldr	x8, [x22]
   1de9c:	add	x26, sp, #0x414
   1dea0:	cbnz	x8, 1de70 <__ubsan_handle_type_mismatch_v1@@Base+0xb8>
   1dea4:	ldr	x8, [x24, #8]
   1dea8:	cbz	x8, 1e1b4 <__ubsan_handle_type_mismatch_v1@@Base+0x3fc>
   1deac:	sub	x0, x8, #0x4
   1deb0:	bl	1cafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c4>
   1deb4:	mov	x21, x0
   1deb8:	mov	x23, xzr
   1debc:	mov	w29, wzr
   1dec0:	mov	w28, wzr
   1dec4:	mov	w25, #0x3                   	// #3
   1dec8:	ldr	q0, [x24]
   1decc:	ldr	x8, [x24, #16]
   1ded0:	mov	w24, w29
   1ded4:	bfi	x24, x28, #32, #32
   1ded8:	add	x0, sp, #0x3c0
   1dedc:	add	x1, sp, #0x3a0
   1dee0:	add	x2, sp, #0x378
   1dee4:	mov	w3, w20
   1dee8:	str	w25, [sp, #888]
   1deec:	str	x23, [sp, #896]
   1def0:	str	x24, [sp, #904]
   1def4:	str	x8, [sp, #944]
   1def8:	str	q0, [sp, #928]
   1defc:	str	x21, [sp, #920]
   1df00:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1df04:	cmp	w20, #0x8
   1df08:	b.eq	1e05c <__ubsan_handle_type_mismatch_v1@@Base+0x2a4>  // b.none
   1df0c:	cmp	w20, #0x6
   1df10:	b.eq	1df9c <__ubsan_handle_type_mismatch_v1@@Base+0x1e4>  // b.none
   1df14:	cmp	w20, #0x1
   1df18:	b.ne	1e19c <__ubsan_handle_type_mismatch_v1@@Base+0x3e4>  // b.any
   1df1c:	adrp	x8, 23000 <__interceptor_sigaction@@Base+0xa44>
   1df20:	movi	v0.2d, #0x0
   1df24:	str	d0, [sp, #792]
   1df28:	str	d0, [sp, #832]
   1df2c:	ldr	d0, [x8, #2096]
   1df30:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1df34:	add	x9, x9, #0xb8e
   1df38:	str	w25, [sp, #448]
   1df3c:	stp	x23, x24, [sp, #456]
   1df40:	str	x21, [sp, #480]
   1df44:	str	wzr, [sp, #776]
   1df48:	str	xzr, [sp, #784]
   1df4c:	str	wzr, [sp, #816]
   1df50:	str	xzr, [sp, #824]
   1df54:	str	xzr, [sp, #856]
   1df58:	str	wzr, [sp, #864]
   1df5c:	str	x9, [sp, #496]
   1df60:	str	d0, [sp, #488]
   1df64:	ldrb	w8, [x22, #25]
   1df68:	adrp	x9, 44000 <__interceptor_sigaction@@Base+0x21a44>
   1df6c:	add	x9, x9, #0xba8
   1df70:	ldr	x11, [x26]
   1df74:	ldr	x8, [x9, x8, lsl #3]
   1df78:	ldr	w9, [sp, #1052]
   1df7c:	mov	w10, #0x1                   	// #1
   1df80:	str	w10, [sp, #768]
   1df84:	str	wzr, [sp, #512]
   1df88:	str	w9, [sp, #524]
   1df8c:	add	x9, sp, #0x1c0
   1df90:	stur	x11, [x9, #68]
   1df94:	str	x8, [sp, #528]
   1df98:	b	1e0f8 <__ubsan_handle_type_mismatch_v1@@Base+0x340>
   1df9c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dfa0:	movi	v0.2d, #0x0
   1dfa4:	str	d0, [sp, #792]
   1dfa8:	str	d0, [sp, #832]
   1dfac:	ldr	d0, [x8, #2608]
   1dfb0:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1dfb4:	add	x9, x9, #0xba9
   1dfb8:	ldr	w8, [sp, #1052]
   1dfbc:	str	w25, [sp, #448]
   1dfc0:	stp	x23, x24, [sp, #456]
   1dfc4:	str	x21, [sp, #480]
   1dfc8:	str	wzr, [sp, #776]
   1dfcc:	str	xzr, [sp, #784]
   1dfd0:	str	wzr, [sp, #816]
   1dfd4:	str	xzr, [sp, #824]
   1dfd8:	str	xzr, [sp, #856]
   1dfdc:	str	wzr, [sp, #864]
   1dfe0:	str	x9, [sp, #496]
   1dfe4:	str	d0, [sp, #488]
   1dfe8:	ldrb	w9, [x22, #25]
   1dfec:	add	x13, sp, #0x414
   1dff0:	str	w8, [sp, #524]
   1dff4:	adrp	x8, 44000 <__interceptor_sigaction@@Base+0x21a44>
   1dff8:	ldr	x10, [x13]
   1dffc:	add	x8, x8, #0xba8
   1e000:	ldr	w11, [sp, #1052]
   1e004:	ldr	x8, [x8, x9, lsl #3]
   1e008:	ldr	x9, [x13]
   1e00c:	add	x12, sp, #0x1c0
   1e010:	str	wzr, [sp, #512]
   1e014:	stur	x10, [x12, #68]
   1e018:	mov	w10, #0x5                   	// #5
   1e01c:	str	w10, [sp, #544]
   1e020:	str	w11, [sp, #556]
   1e024:	str	x8, [sp, #528]
   1e028:	ldr	x11, [x13]
   1e02c:	stur	x9, [x12, #100]
   1e030:	ldr	w9, [sp, #1052]
   1e034:	mov	w10, #0x3                   	// #3
   1e038:	mov	w8, #0x2                   	// #2
   1e03c:	str	x19, [sp, #560]
   1e040:	str	w10, [sp, #768]
   1e044:	str	w8, [sp, #576]
   1e048:	str	w9, [sp, #588]
   1e04c:	stur	x11, [x12, #132]
   1e050:	str	xzr, [sp, #600]
   1e054:	str	x27, [sp, #592]
   1e058:	b	1e0f8 <__ubsan_handle_type_mismatch_v1@@Base+0x340>
   1e05c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e060:	movi	v0.2d, #0x0
   1e064:	str	d0, [sp, #792]
   1e068:	str	d0, [sp, #832]
   1e06c:	ldr	d0, [x8, #2600]
   1e070:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e074:	add	x13, sp, #0x414
   1e078:	ldr	w8, [sp, #1052]
   1e07c:	add	x9, x9, #0xbf0
   1e080:	ldr	x10, [x13]
   1e084:	str	w25, [sp, #448]
   1e088:	stp	x23, x24, [sp, #456]
   1e08c:	str	x21, [sp, #480]
   1e090:	str	wzr, [sp, #776]
   1e094:	str	xzr, [sp, #784]
   1e098:	str	wzr, [sp, #816]
   1e09c:	str	xzr, [sp, #824]
   1e0a0:	str	xzr, [sp, #856]
   1e0a4:	str	wzr, [sp, #864]
   1e0a8:	str	x9, [sp, #496]
   1e0ac:	str	d0, [sp, #488]
   1e0b0:	ldrb	w9, [x22, #25]
   1e0b4:	str	w8, [sp, #524]
   1e0b8:	add	x12, sp, #0x1c0
   1e0bc:	mov	w8, #0x2                   	// #2
   1e0c0:	str	wzr, [sp, #512]
   1e0c4:	stur	x10, [x12, #68]
   1e0c8:	str	w8, [sp, #768]
   1e0cc:	adrp	x8, 44000 <__interceptor_sigaction@@Base+0x21a44>
   1e0d0:	add	x8, x8, #0xba8
   1e0d4:	ldr	w11, [sp, #1052]
   1e0d8:	ldr	x8, [x8, x9, lsl #3]
   1e0dc:	ldr	x10, [x13]
   1e0e0:	mov	w9, #0x5                   	// #5
   1e0e4:	str	w9, [sp, #544]
   1e0e8:	str	w11, [sp, #556]
   1e0ec:	str	x8, [sp, #528]
   1e0f0:	stur	x10, [x12, #100]
   1e0f4:	str	x19, [sp, #560]
   1e0f8:	ldr	x1, [x22, #16]
   1e0fc:	add	x0, sp, #0x1c0
   1e100:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1e104:	add	x0, sp, #0x1c0
   1e108:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e10c:	cbz	x19, 1e168 <__ubsan_handle_type_mismatch_v1@@Base+0x3b0>
   1e110:	mov	w8, #0x2                   	// #2
   1e114:	str	w8, [sp, #16]
   1e118:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e11c:	movi	v0.2d, #0x0
   1e120:	mov	w9, #0x1                   	// #1
   1e124:	add	x8, x8, #0xc9e
   1e128:	add	x0, sp, #0x10
   1e12c:	str	xzr, [sp, #24]
   1e130:	str	x19, [sp, #40]
   1e134:	str	wzr, [sp, #336]
   1e138:	str	wzr, [sp, #344]
   1e13c:	str	xzr, [sp, #352]
   1e140:	str	wzr, [sp, #384]
   1e144:	str	xzr, [sp, #392]
   1e148:	str	xzr, [sp, #424]
   1e14c:	str	d0, [sp, #32]
   1e150:	stp	w9, w20, [sp, #56]
   1e154:	str	x8, [sp, #64]
   1e158:	str	d0, [sp, #360]
   1e15c:	str	d0, [sp, #400]
   1e160:	str	wzr, [sp, #432]
   1e164:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e168:	add	x0, sp, #0x3c0
   1e16c:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1e170:	cbz	x21, 1e17c <__ubsan_handle_type_mismatch_v1@@Base+0x3c4>
   1e174:	mov	x0, x21
   1e178:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1e17c:	add	sp, sp, #0x420
   1e180:	ldp	x20, x19, [sp, #80]
   1e184:	ldp	x22, x21, [sp, #64]
   1e188:	ldp	x24, x23, [sp, #48]
   1e18c:	ldp	x26, x25, [sp, #32]
   1e190:	ldp	x28, x27, [sp, #16]
   1e194:	ldp	x29, x30, [sp], #96
   1e198:	ret
   1e19c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e1a0:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e1a4:	add	x0, x0, #0xc2f
   1e1a8:	add	x2, x2, #0xc75
   1e1ac:	mov	w1, #0x59                  	// #89
   1e1b0:	b	1e1c8 <__ubsan_handle_type_mismatch_v1@@Base+0x410>
   1e1b4:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e1b8:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e1bc:	add	x0, x0, #0x3bb
   1e1c0:	add	x2, x2, #0xcb2
   1e1c4:	mov	w1, #0x2c                  	// #44
   1e1c8:	mov	x3, xzr
   1e1cc:	mov	x4, xzr
   1e1d0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001e1d4 <__ubsan_handle_type_mismatch_v1_abort@@Base>:
   1e1d4:	sub	sp, sp, #0x30
   1e1d8:	stp	x29, x30, [sp, #32]
   1e1dc:	add	x29, sp, #0x20
   1e1e0:	ldur	w8, [x29, #-8]
   1e1e4:	ldur	w9, [x29, #-5]
   1e1e8:	mov	w10, #0x1                   	// #1
   1e1ec:	mov	x2, sp
   1e1f0:	strb	w10, [sp]
   1e1f4:	stur	w8, [sp, #1]
   1e1f8:	str	w9, [sp, #4]
   1e1fc:	stp	x30, x29, [sp, #8]
   1e200:	bl	1ddf0 <__ubsan_handle_type_mismatch_v1@@Base+0x38>
   1e204:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001e208 <__ubsan_handle_alignment_assumption@@Base>:
   1e208:	sub	sp, sp, #0x30
   1e20c:	stp	x29, x30, [sp, #32]
   1e210:	add	x29, sp, #0x20
   1e214:	ldur	w8, [x29, #-8]
   1e218:	ldur	w9, [x29, #-5]
   1e21c:	mov	x4, sp
   1e220:	strb	wzr, [sp]
   1e224:	stur	w8, [sp, #1]
   1e228:	str	w9, [sp, #4]
   1e22c:	stp	x30, x29, [sp, #8]
   1e230:	bl	1e240 <__ubsan_handle_alignment_assumption@@Base+0x38>
   1e234:	ldp	x29, x30, [sp, #32]
   1e238:	add	sp, sp, #0x30
   1e23c:	ret
   1e240:	stp	x29, x30, [sp, #-96]!
   1e244:	stp	x28, x27, [sp, #16]
   1e248:	stp	x26, x25, [sp, #32]
   1e24c:	stp	x24, x23, [sp, #48]
   1e250:	stp	x22, x21, [sp, #64]
   1e254:	stp	x20, x19, [sp, #80]
   1e258:	sub	sp, sp, #0x460
   1e25c:	mov	x24, x4
   1e260:	mov	x19, x3
   1e264:	mov	x21, x2
   1e268:	mov	x22, x1
   1e26c:	mov	x20, x0
   1e270:	add	x25, sp, #0x3a8
   1e274:	add	x9, x0, #0xc
   1e278:	mov	w10, #0xffffffff            	// #-1
   1e27c:	ldaxr	w8, [x9]
   1e280:	stlxr	w11, w10, [x9]
   1e284:	cbnz	w11, 1e27c <__ubsan_handle_alignment_assumption@@Base+0x74>
   1e288:	ldr	w27, [x20, #8]
   1e28c:	ldr	x23, [x20]
   1e290:	add	x9, x20, #0x1c
   1e294:	bfi	x27, x8, #32, #32
   1e298:	mov	w8, #0xffffffff            	// #-1
   1e29c:	ldaxr	w28, [x9]
   1e2a0:	stlxr	w10, w8, [x9]
   1e2a4:	cbnz	w10, 1e29c <__ubsan_handle_alignment_assumption@@Base+0x94>
   1e2a8:	ldr	x26, [x20, #16]
   1e2ac:	ldrb	w8, [x24]
   1e2b0:	ldr	w29, [x20, #24]
   1e2b4:	cbz	w8, 1e3b0 <__ubsan_handle_alignment_assumption@@Base+0x1a8>
   1e2b8:	ldr	q0, [x24]
   1e2bc:	ldr	x8, [x24, #16]
   1e2c0:	ldr	q1, [sp, #1088]
   1e2c4:	mov	w9, #0x1                   	// #1
   1e2c8:	add	x0, sp, #0x3f0
   1e2cc:	add	x1, sp, #0x3d0
   1e2d0:	add	x2, sp, #0x3a8
   1e2d4:	mov	w3, #0x7                   	// #7
   1e2d8:	str	x26, [sp, #8]
   1e2dc:	str	x23, [sp, #944]
   1e2e0:	str	x27, [sp, #952]
   1e2e4:	str	w9, [sp, #936]
   1e2e8:	str	x8, [sp, #992]
   1e2ec:	str	q0, [sp, #976]
   1e2f0:	stur	q1, [x25, #24]
   1e2f4:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1e2f8:	subs	x22, x22, x19
   1e2fc:	b.eq	1e5c4 <__ubsan_handle_alignment_assumption@@Base+0x3bc>  // b.none
   1e300:	rbit	x8, x22
   1e304:	mov	w24, #0x1                   	// #1
   1e308:	clz	x25, x8
   1e30c:	sub	x26, x21, #0x1
   1e310:	cbz	x19, 1e3d4 <__ubsan_handle_alignment_assumption@@Base+0x1cc>
   1e314:	ldr	q0, [sp, #1088]
   1e318:	ldr	w10, [sp, #1116]
   1e31c:	stp	x23, x27, [sp, #504]
   1e320:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e324:	add	x27, sp, #0x1f0
   1e328:	add	x11, sp, #0x3a8
   1e32c:	str	w24, [sp, #496]
   1e330:	ldr	d2, [x8, #2616]
   1e334:	stur	q0, [x27, #24]
   1e338:	str	w10, [sp, #572]
   1e33c:	ldur	x10, [x11, #172]
   1e340:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e344:	movi	v1.2d, #0x0
   1e348:	add	x8, x8, #0xd04
   1e34c:	mov	w9, #0x2                   	// #2
   1e350:	str	d1, [sp, #840]
   1e354:	str	d1, [sp, #880]
   1e358:	str	d2, [sp, #536]
   1e35c:	str	x8, [sp, #544]
   1e360:	ldr	w8, [sp, #1116]
   1e364:	str	w9, [sp, #560]
   1e368:	str	wzr, [sp, #824]
   1e36c:	str	xzr, [sp, #832]
   1e370:	str	wzr, [sp, #864]
   1e374:	str	xzr, [sp, #872]
   1e378:	str	xzr, [sp, #904]
   1e37c:	str	wzr, [sp, #912]
   1e380:	stur	x10, [x27, #68]
   1e384:	ldur	x10, [x11, #172]
   1e388:	str	q0, [sp, #464]
   1e38c:	str	xzr, [sp, #584]
   1e390:	str	x21, [sp, #576]
   1e394:	str	w9, [sp, #816]
   1e398:	str	w9, [sp, #592]
   1e39c:	str	w8, [sp, #604]
   1e3a0:	stur	x10, [x27, #100]
   1e3a4:	str	xzr, [sp, #616]
   1e3a8:	str	x19, [sp, #608]
   1e3ac:	b	1e450 <__ubsan_handle_alignment_assumption@@Base+0x248>
   1e3b0:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1e3b4:	cmp	x27, x8
   1e3b8:	b.hi	1e5a4 <__ubsan_handle_alignment_assumption@@Base+0x39c>  // b.pmore
   1e3bc:	ldr	x1, [x24, #8]
   1e3c0:	mov	w0, #0x7                   	// #7
   1e3c4:	mov	x2, x23
   1e3c8:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1e3cc:	tbz	w0, #0, 1e2b8 <__ubsan_handle_alignment_assumption@@Base+0xb0>
   1e3d0:	b	1e5a4 <__ubsan_handle_alignment_assumption@@Base+0x39c>
   1e3d4:	ldr	q0, [sp, #1088]
   1e3d8:	stp	x23, x27, [sp, #504]
   1e3dc:	add	x27, sp, #0x1f0
   1e3e0:	str	w24, [sp, #496]
   1e3e4:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e3e8:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e3ec:	str	q0, [sp, #480]
   1e3f0:	stur	q0, [x27, #24]
   1e3f4:	movi	v0.2d, #0x0
   1e3f8:	add	x9, x9, #0xcc6
   1e3fc:	str	d0, [sp, #840]
   1e400:	str	d0, [sp, #880]
   1e404:	ldr	d0, [x8, #2616]
   1e408:	add	x8, sp, #0x3a8
   1e40c:	ldur	x8, [x8, #172]
   1e410:	str	x9, [sp, #544]
   1e414:	ldr	w9, [sp, #1116]
   1e418:	mov	w10, #0x2                   	// #2
   1e41c:	str	wzr, [sp, #824]
   1e420:	str	xzr, [sp, #832]
   1e424:	str	wzr, [sp, #864]
   1e428:	str	xzr, [sp, #872]
   1e42c:	str	xzr, [sp, #904]
   1e430:	str	wzr, [sp, #912]
   1e434:	str	w24, [sp, #816]
   1e438:	str	w10, [sp, #560]
   1e43c:	str	w9, [sp, #572]
   1e440:	str	d0, [sp, #536]
   1e444:	stur	x8, [x27, #68]
   1e448:	str	xzr, [sp, #584]
   1e44c:	str	x21, [sp, #576]
   1e450:	ldr	x1, [x20, #32]
   1e454:	add	x0, sp, #0x1f0
   1e458:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1e45c:	add	x0, sp, #0x1f0
   1e460:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e464:	ldr	x9, [sp, #8]
   1e468:	lsl	x21, x24, x25
   1e46c:	and	x20, x22, x26
   1e470:	adrp	x23, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e474:	cbz	x9, 1e4d4 <__ubsan_handle_alignment_assumption@@Base+0x2cc>
   1e478:	ldr	q0, [sp, #16]
   1e47c:	mov	w8, #0x1                   	// #1
   1e480:	str	w8, [sp, #32]
   1e484:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e488:	stur	q0, [sp, #56]
   1e48c:	ldr	d0, [x23, #2624]
   1e490:	movi	v1.2d, #0x0
   1e494:	bfi	x29, x28, #32, #32
   1e498:	add	x8, x8, #0xd5b
   1e49c:	add	x0, sp, #0x20
   1e4a0:	str	d1, [sp, #376]
   1e4a4:	str	d1, [sp, #416]
   1e4a8:	str	wzr, [sp, #352]
   1e4ac:	str	wzr, [sp, #360]
   1e4b0:	str	xzr, [sp, #368]
   1e4b4:	str	wzr, [sp, #400]
   1e4b8:	str	xzr, [sp, #408]
   1e4bc:	str	xzr, [sp, #440]
   1e4c0:	stp	x9, x29, [sp, #40]
   1e4c4:	str	x8, [sp, #80]
   1e4c8:	str	d0, [sp, #72]
   1e4cc:	str	wzr, [sp, #448]
   1e4d0:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e4d4:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e4d8:	add	x9, x9, #0xd83
   1e4dc:	add	x12, sp, #0x3a8
   1e4e0:	ldr	d1, [x23, #2624]
   1e4e4:	str	x9, [sp, #544]
   1e4e8:	ldur	x9, [x12, #172]
   1e4ec:	adrp	x10, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1e4f0:	adrp	x11, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e4f4:	mov	w8, #0x2                   	// #2
   1e4f8:	movi	v0.2d, #0x0
   1e4fc:	add	x10, x10, #0x562
   1e500:	cmp	x19, #0x0
   1e504:	add	x11, x11, #0xdbc
   1e508:	str	xzr, [sp, #504]
   1e50c:	str	x22, [sp, #520]
   1e510:	str	xzr, [sp, #832]
   1e514:	str	wzr, [sp, #864]
   1e518:	str	xzr, [sp, #872]
   1e51c:	str	xzr, [sp, #904]
   1e520:	str	wzr, [sp, #912]
   1e524:	str	wzr, [sp, #824]
   1e528:	str	wzr, [sp, #560]
   1e52c:	str	w8, [sp, #496]
   1e530:	str	d0, [sp, #512]
   1e534:	str	d0, [sp, #840]
   1e538:	str	d0, [sp, #880]
   1e53c:	csel	x10, x11, x10, ne  // ne = any
   1e540:	ldr	w11, [sp, #1116]
   1e544:	str	d1, [sp, #536]
   1e548:	stur	x9, [x27, #68]
   1e54c:	ldr	w9, [sp, #1116]
   1e550:	str	w11, [sp, #572]
   1e554:	ldur	x11, [x12, #172]
   1e558:	ldur	x12, [x12, #172]
   1e55c:	str	w9, [sp, #604]
   1e560:	ldr	w9, [sp, #1116]
   1e564:	str	x10, [sp, #576]
   1e568:	mov	w10, #0x3                   	// #3
   1e56c:	add	x0, sp, #0x1f0
   1e570:	str	w8, [sp, #592]
   1e574:	stur	x11, [x27, #100]
   1e578:	str	xzr, [sp, #616]
   1e57c:	str	x21, [sp, #608]
   1e580:	str	w10, [sp, #816]
   1e584:	str	w8, [sp, #624]
   1e588:	str	w9, [sp, #636]
   1e58c:	stur	x12, [x27, #132]
   1e590:	str	xzr, [sp, #648]
   1e594:	str	x20, [sp, #640]
   1e598:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e59c:	add	x0, sp, #0x3f0
   1e5a0:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1e5a4:	add	sp, sp, #0x460
   1e5a8:	ldp	x20, x19, [sp, #80]
   1e5ac:	ldp	x22, x21, [sp, #64]
   1e5b0:	ldp	x24, x23, [sp, #48]
   1e5b4:	ldp	x26, x25, [sp, #32]
   1e5b8:	ldp	x28, x27, [sp, #16]
   1e5bc:	ldp	x29, x30, [sp], #96
   1e5c0:	ret
   1e5c4:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e5c8:	adrp	x2, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   1e5cc:	add	x0, x0, #0x419
   1e5d0:	add	x2, x2, #0xc49
   1e5d4:	mov	w1, #0x171                 	// #369
   1e5d8:	mov	x3, xzr
   1e5dc:	mov	x4, xzr
   1e5e0:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001e5e4 <__ubsan_handle_alignment_assumption_abort@@Base>:
   1e5e4:	sub	sp, sp, #0x30
   1e5e8:	stp	x29, x30, [sp, #32]
   1e5ec:	add	x29, sp, #0x20
   1e5f0:	ldur	w8, [x29, #-8]
   1e5f4:	ldur	w9, [x29, #-5]
   1e5f8:	mov	w10, #0x1                   	// #1
   1e5fc:	mov	x4, sp
   1e600:	strb	w10, [sp]
   1e604:	stur	w8, [sp, #1]
   1e608:	str	w9, [sp, #4]
   1e60c:	stp	x30, x29, [sp, #8]
   1e610:	bl	1e240 <__ubsan_handle_alignment_assumption@@Base+0x38>
   1e614:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001e618 <__ubsan_handle_add_overflow@@Base>:
   1e618:	sub	sp, sp, #0x30
   1e61c:	stp	x29, x30, [sp, #32]
   1e620:	add	x29, sp, #0x20
   1e624:	ldur	w8, [x29, #-8]
   1e628:	ldur	w9, [x29, #-5]
   1e62c:	ldr	x3, [x0, #16]
   1e630:	mov	x4, x2
   1e634:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e638:	add	x2, x2, #0xb8a
   1e63c:	mov	x5, sp
   1e640:	strb	wzr, [sp]
   1e644:	stur	w8, [sp, #1]
   1e648:	str	w9, [sp, #4]
   1e64c:	stp	x30, x29, [sp, #8]
   1e650:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e654:	ldp	x29, x30, [sp, #32]
   1e658:	add	sp, sp, #0x30
   1e65c:	ret
   1e660:	str	x29, [sp, #-96]!
   1e664:	stp	x30, x27, [sp, #16]
   1e668:	stp	x26, x25, [sp, #32]
   1e66c:	stp	x24, x23, [sp, #48]
   1e670:	stp	x22, x21, [sp, #64]
   1e674:	stp	x20, x19, [sp, #80]
   1e678:	sub	sp, sp, #0x290
   1e67c:	mov	x22, x5
   1e680:	mov	x20, x2
   1e684:	mov	x21, x1
   1e688:	mov	x19, x0
   1e68c:	add	x25, sp, #0x284
   1e690:	add	x9, x0, #0xc
   1e694:	mov	w10, #0xffffffff            	// #-1
   1e698:	str	x3, [sp, #624]
   1e69c:	str	x4, [sp, #632]
   1e6a0:	ldaxr	w8, [x9]
   1e6a4:	stlxr	w11, w10, [x9]
   1e6a8:	cbnz	w11, 1e6a0 <__ubsan_handle_add_overflow@@Base+0x88>
   1e6ac:	ldr	x9, [x19, #16]
   1e6b0:	ldr	x24, [x19]
   1e6b4:	ldr	w27, [x19, #8]
   1e6b8:	ldrh	w10, [x9]
   1e6bc:	cbz	w10, 1e6d8 <__ubsan_handle_add_overflow@@Base+0xc0>
   1e6c0:	mov	w26, wzr
   1e6c4:	mov	w23, #0xa                   	// #10
   1e6c8:	ldrb	w9, [x22]
   1e6cc:	bfi	x27, x8, #32, #32
   1e6d0:	cbnz	w9, 1e718 <__ubsan_handle_add_overflow@@Base+0x100>
   1e6d4:	b	1e6f8 <__ubsan_handle_add_overflow@@Base+0xe0>
   1e6d8:	ldrh	w9, [x9, #2]
   1e6dc:	and	w26, w9, #0x1
   1e6e0:	tst	w9, #0x1
   1e6e4:	mov	w9, #0x9                   	// #9
   1e6e8:	cinc	w23, w9, eq  // eq = none
   1e6ec:	ldrb	w9, [x22]
   1e6f0:	bfi	x27, x8, #32, #32
   1e6f4:	cbnz	w9, 1e718 <__ubsan_handle_add_overflow@@Base+0x100>
   1e6f8:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1e6fc:	cmp	x27, x8
   1e700:	b.hi	1e844 <__ubsan_handle_add_overflow@@Base+0x22c>  // b.pmore
   1e704:	ldr	x1, [x22, #8]
   1e708:	mov	w0, w23
   1e70c:	mov	x2, x24
   1e710:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1e714:	tbnz	w0, #0, 1e844 <__ubsan_handle_add_overflow@@Base+0x22c>
   1e718:	tbz	w26, #0, 1e82c <__ubsan_handle_add_overflow@@Base+0x214>
   1e71c:	ldr	x8, [x22, #16]
   1e720:	ldr	q0, [x22]
   1e724:	mov	w22, #0x1                   	// #1
   1e728:	add	x0, sp, #0x220
   1e72c:	add	x1, sp, #0x200
   1e730:	add	x2, sp, #0x1d8
   1e734:	mov	w3, w23
   1e738:	str	w22, [sp, #472]
   1e73c:	str	x8, [sp, #528]
   1e740:	str	q0, [sp, #512]
   1e744:	stp	x24, x27, [sp, #480]
   1e748:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1e74c:	movi	v0.2d, #0x0
   1e750:	str	d0, [sp, #376]
   1e754:	str	d0, [sp, #416]
   1e758:	ldr	q0, [sp, #16]
   1e75c:	ldr	x11, [x25]
   1e760:	ldr	w12, [sp, #652]
   1e764:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1e768:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1e76c:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1e770:	add	x8, x8, #0x4f1
   1e774:	add	x9, x9, #0x530
   1e778:	add	x10, x10, #0x532
   1e77c:	cmp	w26, #0x0
   1e780:	str	x8, [sp, #80]
   1e784:	csel	x8, x10, x9, ne  // ne = any
   1e788:	str	w22, [sp, #32]
   1e78c:	stp	x24, x27, [sp, #40]
   1e790:	stp	wzr, w23, [sp, #72]
   1e794:	str	wzr, [sp, #360]
   1e798:	str	xzr, [sp, #368]
   1e79c:	str	wzr, [sp, #400]
   1e7a0:	str	xzr, [sp, #408]
   1e7a4:	str	xzr, [sp, #440]
   1e7a8:	str	wzr, [sp, #448]
   1e7ac:	str	w22, [sp, #352]
   1e7b0:	str	wzr, [sp, #96]
   1e7b4:	str	x8, [sp, #112]
   1e7b8:	stur	q0, [sp, #56]
   1e7bc:	str	w12, [sp, #108]
   1e7c0:	stur	x11, [sp, #100]
   1e7c4:	ldr	x8, [x19, #16]
   1e7c8:	add	x0, sp, #0x20
   1e7cc:	mov	x1, sp
   1e7d0:	stp	x8, x21, [sp]
   1e7d4:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1e7d8:	ldr	w8, [x0, #320]
   1e7dc:	cmp	w8, #0x8
   1e7e0:	b.eq	1e864 <__ubsan_handle_add_overflow@@Base+0x24c>  // b.none
   1e7e4:	add	w9, w8, #0x1
   1e7e8:	add	x8, x0, x8, lsl #5
   1e7ec:	str	w9, [x0, #320]
   1e7f0:	str	wzr, [x8, #64]
   1e7f4:	ldr	w9, [sp, #652]
   1e7f8:	ldr	x10, [x25]
   1e7fc:	add	x1, sp, #0x270
   1e800:	str	x20, [x8, #80]
   1e804:	str	w9, [x8, #76]
   1e808:	stur	x10, [x8, #68]
   1e80c:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1e810:	ldr	x1, [x19, #16]
   1e814:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1e818:	add	x0, sp, #0x20
   1e81c:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1e820:	add	x0, sp, #0x220
   1e824:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1e828:	b	1e844 <__ubsan_handle_add_overflow@@Base+0x22c>
   1e82c:	ldrb	w8, [x22]
   1e830:	cbnz	w8, 1e71c <__ubsan_handle_add_overflow@@Base+0x104>
   1e834:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1e838:	ldr	x8, [x8, #3792]
   1e83c:	ldrb	w8, [x8, #17]
   1e840:	cbz	w8, 1e71c <__ubsan_handle_add_overflow@@Base+0x104>
   1e844:	add	sp, sp, #0x290
   1e848:	ldp	x20, x19, [sp, #80]
   1e84c:	ldp	x22, x21, [sp, #64]
   1e850:	ldp	x24, x23, [sp, #48]
   1e854:	ldp	x26, x25, [sp, #32]
   1e858:	ldp	x30, x27, [sp, #16]
   1e85c:	ldr	x29, [sp], #96
   1e860:	ret
   1e864:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e868:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e86c:	add	x0, x0, #0x3bb
   1e870:	add	x2, x2, #0x3fb
   1e874:	mov	w1, #0xc0                  	// #192
   1e878:	mov	x3, xzr
   1e87c:	mov	x4, xzr
   1e880:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001e884 <__ubsan_handle_add_overflow_abort@@Base>:
   1e884:	sub	sp, sp, #0x30
   1e888:	stp	x29, x30, [sp, #32]
   1e88c:	add	x29, sp, #0x20
   1e890:	ldr	x3, [x0, #16]
   1e894:	ldur	w8, [x29, #-8]
   1e898:	ldur	w9, [x29, #-5]
   1e89c:	mov	x4, x2
   1e8a0:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e8a4:	mov	w10, #0x1                   	// #1
   1e8a8:	add	x2, x2, #0xb8a
   1e8ac:	mov	x5, sp
   1e8b0:	strb	w10, [sp]
   1e8b4:	stur	w8, [sp, #1]
   1e8b8:	str	w9, [sp, #4]
   1e8bc:	stp	x30, x29, [sp, #8]
   1e8c0:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e8c4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001e8c8 <__ubsan_handle_sub_overflow@@Base>:
   1e8c8:	sub	sp, sp, #0x30
   1e8cc:	stp	x29, x30, [sp, #32]
   1e8d0:	add	x29, sp, #0x20
   1e8d4:	ldur	w8, [x29, #-8]
   1e8d8:	ldur	w9, [x29, #-5]
   1e8dc:	ldr	x3, [x0, #16]
   1e8e0:	mov	x4, x2
   1e8e4:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1e8e8:	add	x2, x2, #0x5d5
   1e8ec:	mov	x5, sp
   1e8f0:	strb	wzr, [sp]
   1e8f4:	stur	w8, [sp, #1]
   1e8f8:	str	w9, [sp, #4]
   1e8fc:	stp	x30, x29, [sp, #8]
   1e900:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e904:	ldp	x29, x30, [sp, #32]
   1e908:	add	sp, sp, #0x30
   1e90c:	ret

000000000001e910 <__ubsan_handle_sub_overflow_abort@@Base>:
   1e910:	sub	sp, sp, #0x30
   1e914:	stp	x29, x30, [sp, #32]
   1e918:	add	x29, sp, #0x20
   1e91c:	ldr	x3, [x0, #16]
   1e920:	ldur	w8, [x29, #-8]
   1e924:	ldur	w9, [x29, #-5]
   1e928:	mov	x4, x2
   1e92c:	adrp	x2, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1e930:	mov	w10, #0x1                   	// #1
   1e934:	add	x2, x2, #0x5d5
   1e938:	mov	x5, sp
   1e93c:	strb	w10, [sp]
   1e940:	stur	w8, [sp, #1]
   1e944:	str	w9, [sp, #4]
   1e948:	stp	x30, x29, [sp, #8]
   1e94c:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e950:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001e954 <__ubsan_handle_mul_overflow@@Base>:
   1e954:	sub	sp, sp, #0x30
   1e958:	stp	x29, x30, [sp, #32]
   1e95c:	add	x29, sp, #0x20
   1e960:	ldur	w8, [x29, #-8]
   1e964:	ldur	w9, [x29, #-5]
   1e968:	ldr	x3, [x0, #16]
   1e96c:	mov	x4, x2
   1e970:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e974:	add	x2, x2, #0xb8c
   1e978:	mov	x5, sp
   1e97c:	strb	wzr, [sp]
   1e980:	stur	w8, [sp, #1]
   1e984:	str	w9, [sp, #4]
   1e988:	stp	x30, x29, [sp, #8]
   1e98c:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e990:	ldp	x29, x30, [sp, #32]
   1e994:	add	sp, sp, #0x30
   1e998:	ret

000000000001e99c <__ubsan_handle_mul_overflow_abort@@Base>:
   1e99c:	sub	sp, sp, #0x30
   1e9a0:	stp	x29, x30, [sp, #32]
   1e9a4:	add	x29, sp, #0x20
   1e9a8:	ldr	x3, [x0, #16]
   1e9ac:	ldur	w8, [x29, #-8]
   1e9b0:	ldur	w9, [x29, #-5]
   1e9b4:	mov	x4, x2
   1e9b8:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1e9bc:	mov	w10, #0x1                   	// #1
   1e9c0:	add	x2, x2, #0xb8c
   1e9c4:	mov	x5, sp
   1e9c8:	strb	w10, [sp]
   1e9cc:	stur	w8, [sp, #1]
   1e9d0:	str	w9, [sp, #4]
   1e9d4:	stp	x30, x29, [sp, #8]
   1e9d8:	bl	1e660 <__ubsan_handle_add_overflow@@Base+0x48>
   1e9dc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001e9e0 <__ubsan_handle_negate_overflow@@Base>:
   1e9e0:	sub	sp, sp, #0x30
   1e9e4:	stp	x29, x30, [sp, #32]
   1e9e8:	add	x29, sp, #0x20
   1e9ec:	ldur	w8, [x29, #-8]
   1e9f0:	ldur	w9, [x29, #-5]
   1e9f4:	mov	x2, sp
   1e9f8:	strb	wzr, [sp]
   1e9fc:	stur	w8, [sp, #1]
   1ea00:	str	w9, [sp, #4]
   1ea04:	stp	x30, x29, [sp, #8]
   1ea08:	bl	1ea18 <__ubsan_handle_negate_overflow@@Base+0x38>
   1ea0c:	ldp	x29, x30, [sp, #32]
   1ea10:	add	sp, sp, #0x30
   1ea14:	ret
   1ea18:	str	x29, [sp, #-80]!
   1ea1c:	stp	x30, x25, [sp, #16]
   1ea20:	stp	x24, x23, [sp, #32]
   1ea24:	stp	x22, x21, [sp, #48]
   1ea28:	stp	x20, x19, [sp, #64]
   1ea2c:	sub	sp, sp, #0x280
   1ea30:	mov	x23, x2
   1ea34:	mov	x20, x1
   1ea38:	mov	x19, x0
   1ea3c:	add	x9, x0, #0xc
   1ea40:	mov	w10, #0xffffffff            	// #-1
   1ea44:	ldaxr	w8, [x9]
   1ea48:	stlxr	w11, w10, [x9]
   1ea4c:	cbnz	w11, 1ea44 <__ubsan_handle_negate_overflow@@Base+0x64>
   1ea50:	ldr	x9, [x19, #16]
   1ea54:	ldr	x22, [x19]
   1ea58:	ldr	w24, [x19, #8]
   1ea5c:	ldrh	w10, [x9]
   1ea60:	cbz	w10, 1ea7c <__ubsan_handle_negate_overflow@@Base+0x9c>
   1ea64:	mov	w25, wzr
   1ea68:	mov	w21, #0xa                   	// #10
   1ea6c:	ldrb	w9, [x23]
   1ea70:	bfi	x24, x8, #32, #32
   1ea74:	cbnz	w9, 1eabc <__ubsan_handle_negate_overflow@@Base+0xdc>
   1ea78:	b	1ea9c <__ubsan_handle_negate_overflow@@Base+0xbc>
   1ea7c:	ldrh	w9, [x9, #2]
   1ea80:	and	w25, w9, #0x1
   1ea84:	tst	w9, #0x1
   1ea88:	mov	w9, #0x9                   	// #9
   1ea8c:	cinc	w21, w9, eq  // eq = none
   1ea90:	ldrb	w9, [x23]
   1ea94:	bfi	x24, x8, #32, #32
   1ea98:	cbnz	w9, 1eabc <__ubsan_handle_negate_overflow@@Base+0xdc>
   1ea9c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1eaa0:	cmp	x24, x8
   1eaa4:	b.hi	1eba8 <__ubsan_handle_negate_overflow@@Base+0x1c8>  // b.pmore
   1eaa8:	ldr	x1, [x23, #8]
   1eaac:	mov	w0, w21
   1eab0:	mov	x2, x22
   1eab4:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1eab8:	tbnz	w0, #0, 1eba8 <__ubsan_handle_negate_overflow@@Base+0x1c8>
   1eabc:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   1eac0:	ldr	x8, [x8, #3792]
   1eac4:	ldrb	w8, [x8, #17]
   1eac8:	cmp	w8, #0x0
   1eacc:	cset	w8, ne  // ne = any
   1ead0:	bic	w8, w8, w25
   1ead4:	tbnz	w8, #0, 1eba8 <__ubsan_handle_negate_overflow@@Base+0x1c8>
   1ead8:	ldr	x8, [x23, #16]
   1eadc:	ldr	q0, [x23]
   1eae0:	mov	w23, #0x1                   	// #1
   1eae4:	add	x0, sp, #0x230
   1eae8:	add	x1, sp, #0x210
   1eaec:	add	x2, sp, #0x1e8
   1eaf0:	mov	w3, w21
   1eaf4:	str	w23, [sp, #488]
   1eaf8:	str	x8, [sp, #544]
   1eafc:	str	q0, [sp, #528]
   1eb00:	stp	x22, x24, [sp, #496]
   1eb04:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1eb08:	cbz	w25, 1eb34 <__ubsan_handle_negate_overflow@@Base+0x154>
   1eb0c:	movi	v0.2d, #0x0
   1eb10:	str	d0, [sp, #392]
   1eb14:	str	d0, [sp, #432]
   1eb18:	ldr	q0, [sp, #32]
   1eb1c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1eb20:	str	w23, [sp, #48]
   1eb24:	stp	x22, x24, [sp, #56]
   1eb28:	stp	wzr, w21, [sp, #88]
   1eb2c:	add	x8, x8, #0xdc4
   1eb30:	b	1eb58 <__ubsan_handle_negate_overflow@@Base+0x178>
   1eb34:	movi	v0.2d, #0x0
   1eb38:	str	d0, [sp, #392]
   1eb3c:	str	d0, [sp, #432]
   1eb40:	ldr	q0, [sp]
   1eb44:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1eb48:	add	x8, x8, #0xe2d
   1eb4c:	str	w23, [sp, #48]
   1eb50:	stp	x22, x24, [sp, #56]
   1eb54:	stp	wzr, w21, [sp, #88]
   1eb58:	str	wzr, [sp, #368]
   1eb5c:	str	wzr, [sp, #376]
   1eb60:	str	xzr, [sp, #384]
   1eb64:	str	wzr, [sp, #416]
   1eb68:	str	xzr, [sp, #424]
   1eb6c:	str	xzr, [sp, #456]
   1eb70:	str	wzr, [sp, #464]
   1eb74:	str	x8, [sp, #96]
   1eb78:	stur	q0, [sp, #72]
   1eb7c:	ldr	x8, [x19, #16]
   1eb80:	add	x0, sp, #0x30
   1eb84:	add	x1, sp, #0x10
   1eb88:	stp	x8, x20, [sp, #16]
   1eb8c:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1eb90:	ldr	x1, [x19, #16]
   1eb94:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1eb98:	add	x0, sp, #0x30
   1eb9c:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1eba0:	add	x0, sp, #0x230
   1eba4:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1eba8:	add	sp, sp, #0x280
   1ebac:	ldp	x20, x19, [sp, #64]
   1ebb0:	ldp	x22, x21, [sp, #48]
   1ebb4:	ldp	x24, x23, [sp, #32]
   1ebb8:	ldp	x30, x25, [sp, #16]
   1ebbc:	ldr	x29, [sp], #80
   1ebc0:	ret

000000000001ebc4 <__ubsan_handle_negate_overflow_abort@@Base>:
   1ebc4:	sub	sp, sp, #0x30
   1ebc8:	stp	x29, x30, [sp, #32]
   1ebcc:	add	x29, sp, #0x20
   1ebd0:	ldur	w8, [x29, #-8]
   1ebd4:	ldur	w9, [x29, #-5]
   1ebd8:	mov	w10, #0x1                   	// #1
   1ebdc:	mov	x2, sp
   1ebe0:	strb	w10, [sp]
   1ebe4:	stur	w8, [sp, #1]
   1ebe8:	str	w9, [sp, #4]
   1ebec:	stp	x30, x29, [sp, #8]
   1ebf0:	bl	1ea18 <__ubsan_handle_negate_overflow@@Base+0x38>
   1ebf4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001ebf8 <__ubsan_handle_divrem_overflow@@Base>:
   1ebf8:	sub	sp, sp, #0x30
   1ebfc:	stp	x29, x30, [sp, #32]
   1ec00:	add	x29, sp, #0x20
   1ec04:	ldur	w8, [x29, #-8]
   1ec08:	ldur	w9, [x29, #-5]
   1ec0c:	mov	x3, sp
   1ec10:	strb	wzr, [sp]
   1ec14:	stur	w8, [sp, #1]
   1ec18:	str	w9, [sp, #4]
   1ec1c:	stp	x30, x29, [sp, #8]
   1ec20:	bl	1ec30 <__ubsan_handle_divrem_overflow@@Base+0x38>
   1ec24:	ldp	x29, x30, [sp, #32]
   1ec28:	add	sp, sp, #0x30
   1ec2c:	ret
   1ec30:	stp	x29, x30, [sp, #-64]!
   1ec34:	stp	x24, x23, [sp, #16]
   1ec38:	stp	x22, x21, [sp, #32]
   1ec3c:	stp	x20, x19, [sp, #48]
   1ec40:	sub	sp, sp, #0x440
   1ec44:	mov	x21, x3
   1ec48:	mov	x19, x0
   1ec4c:	add	x8, x0, #0xc
   1ec50:	mov	w9, #0xffffffff            	// #-1
   1ec54:	ldaxr	w24, [x8]
   1ec58:	stlxr	w10, w9, [x8]
   1ec5c:	cbnz	w10, 1ec54 <__ubsan_handle_divrem_overflow@@Base+0x5c>
   1ec60:	ldr	x8, [x19, #16]
   1ec64:	ldr	x20, [x19]
   1ec68:	ldr	w23, [x19, #8]
   1ec6c:	str	x1, [sp, #1080]
   1ec70:	str	x8, [sp, #1072]
   1ec74:	str	x8, [sp, #1056]
   1ec78:	str	x2, [sp, #1064]
   1ec7c:	ldrh	w9, [x8]
   1ec80:	cbz	w9, 1ec98 <__ubsan_handle_divrem_overflow@@Base+0xa0>
   1ec84:	mov	w22, #0xc                   	// #12
   1ec88:	ldrb	w8, [x21]
   1ec8c:	bfi	x23, x24, #32, #32
   1ec90:	cbnz	w8, 1ed08 <__ubsan_handle_divrem_overflow@@Base+0x110>
   1ec94:	b	1ece8 <__ubsan_handle_divrem_overflow@@Base+0xf0>
   1ec98:	ldrb	w8, [x8, #2]
   1ec9c:	tbnz	w8, #0, 1ecb4 <__ubsan_handle_divrem_overflow@@Base+0xbc>
   1eca0:	mov	w22, #0xb                   	// #11
   1eca4:	ldrb	w8, [x21]
   1eca8:	bfi	x23, x24, #32, #32
   1ecac:	cbnz	w8, 1ed08 <__ubsan_handle_divrem_overflow@@Base+0x110>
   1ecb0:	b	1ece8 <__ubsan_handle_divrem_overflow@@Base+0xf0>
   1ecb4:	add	x0, sp, #0x420
   1ecb8:	bl	21074 <__ubsan_get_current_report_data@@Base+0xe8>
   1ecbc:	and	x8, x0, x1
   1ecc0:	cmn	x8, #0x1
   1ecc4:	b.eq	1ecd8 <__ubsan_handle_divrem_overflow@@Base+0xe0>  // b.none
   1ecc8:	ldr	x8, [x19, #16]
   1eccc:	ldrh	w8, [x8]
   1ecd0:	cbnz	w8, 1ec84 <__ubsan_handle_divrem_overflow@@Base+0x8c>
   1ecd4:	b	1eca0 <__ubsan_handle_divrem_overflow@@Base+0xa8>
   1ecd8:	mov	w22, #0x9                   	// #9
   1ecdc:	ldrb	w8, [x21]
   1ece0:	bfi	x23, x24, #32, #32
   1ece4:	cbnz	w8, 1ed08 <__ubsan_handle_divrem_overflow@@Base+0x110>
   1ece8:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1ecec:	cmp	x23, x8
   1ecf0:	b.hi	1ee0c <__ubsan_handle_divrem_overflow@@Base+0x214>  // b.pmore
   1ecf4:	ldr	x1, [x21, #8]
   1ecf8:	mov	w0, w22
   1ecfc:	mov	x2, x20
   1ed00:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1ed04:	tbnz	w0, #0, 1ee0c <__ubsan_handle_divrem_overflow@@Base+0x214>
   1ed08:	ldr	x8, [x21, #16]
   1ed0c:	ldr	q0, [x21]
   1ed10:	mov	w21, #0x1                   	// #1
   1ed14:	add	x0, sp, #0x3d0
   1ed18:	add	x1, sp, #0x3b0
   1ed1c:	add	x2, sp, #0x388
   1ed20:	mov	w3, w22
   1ed24:	str	w21, [sp, #904]
   1ed28:	str	x8, [sp, #960]
   1ed2c:	str	q0, [sp, #944]
   1ed30:	str	x20, [sp, #912]
   1ed34:	str	x23, [sp, #920]
   1ed38:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1ed3c:	cmp	w22, #0x9
   1ed40:	b.ne	1edb4 <__ubsan_handle_divrem_overflow@@Base+0x1bc>  // b.any
   1ed44:	movi	v0.2d, #0x0
   1ed48:	str	d0, [sp, #808]
   1ed4c:	str	d0, [sp, #848]
   1ed50:	ldr	q0, [sp, #448]
   1ed54:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ed58:	add	x10, sp, #0xe9
   1ed5c:	str	w21, [sp, #464]
   1ed60:	stp	x20, x23, [sp, #472]
   1ed64:	str	wzr, [sp, #784]
   1ed68:	str	wzr, [sp, #792]
   1ed6c:	str	xzr, [sp, #800]
   1ed70:	str	wzr, [sp, #832]
   1ed74:	stur	q0, [x10, #255]
   1ed78:	ldr	d0, [x8, #2632]
   1ed7c:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ed80:	add	x9, x9, #0xe5d
   1ed84:	add	x0, sp, #0x1d0
   1ed88:	add	x1, sp, #0x430
   1ed8c:	str	xzr, [sp, #840]
   1ed90:	str	xzr, [sp, #872]
   1ed94:	str	x9, [sp, #512]
   1ed98:	str	d0, [sp, #504]
   1ed9c:	str	wzr, [sp, #880]
   1eda0:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1eda4:	ldr	x1, [x19, #16]
   1eda8:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1edac:	add	x0, sp, #0x1d0
   1edb0:	b	1ee00 <__ubsan_handle_divrem_overflow@@Base+0x208>
   1edb4:	movi	v0.2d, #0x0
   1edb8:	str	d0, [sp, #360]
   1edbc:	str	d0, [sp, #400]
   1edc0:	ldr	q0, [sp]
   1edc4:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1edc8:	add	x8, x8, #0xe93
   1edcc:	add	x0, sp, #0x10
   1edd0:	str	w21, [sp, #16]
   1edd4:	stp	x20, x23, [sp, #24]
   1edd8:	stp	wzr, w22, [sp, #56]
   1eddc:	str	wzr, [sp, #336]
   1ede0:	str	wzr, [sp, #344]
   1ede4:	str	xzr, [sp, #352]
   1ede8:	str	wzr, [sp, #384]
   1edec:	str	xzr, [sp, #392]
   1edf0:	str	xzr, [sp, #424]
   1edf4:	str	x8, [sp, #64]
   1edf8:	stur	q0, [sp, #40]
   1edfc:	str	wzr, [sp, #432]
   1ee00:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1ee04:	add	x0, sp, #0x3d0
   1ee08:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1ee0c:	add	sp, sp, #0x440
   1ee10:	ldp	x20, x19, [sp, #48]
   1ee14:	ldp	x22, x21, [sp, #32]
   1ee18:	ldp	x24, x23, [sp, #16]
   1ee1c:	ldp	x29, x30, [sp], #64
   1ee20:	ret

000000000001ee24 <__ubsan_handle_divrem_overflow_abort@@Base>:
   1ee24:	sub	sp, sp, #0x30
   1ee28:	stp	x29, x30, [sp, #32]
   1ee2c:	add	x29, sp, #0x20
   1ee30:	ldur	w8, [x29, #-8]
   1ee34:	ldur	w9, [x29, #-5]
   1ee38:	mov	w10, #0x1                   	// #1
   1ee3c:	mov	x3, sp
   1ee40:	strb	w10, [sp]
   1ee44:	stur	w8, [sp, #1]
   1ee48:	str	w9, [sp, #4]
   1ee4c:	stp	x30, x29, [sp, #8]
   1ee50:	bl	1ec30 <__ubsan_handle_divrem_overflow@@Base+0x38>
   1ee54:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001ee58 <__ubsan_handle_shift_out_of_bounds@@Base>:
   1ee58:	sub	sp, sp, #0x30
   1ee5c:	stp	x29, x30, [sp, #32]
   1ee60:	add	x29, sp, #0x20
   1ee64:	ldur	w8, [x29, #-8]
   1ee68:	ldur	w9, [x29, #-5]
   1ee6c:	mov	x3, sp
   1ee70:	strb	wzr, [sp]
   1ee74:	stur	w8, [sp, #1]
   1ee78:	str	w9, [sp, #4]
   1ee7c:	stp	x30, x29, [sp, #8]
   1ee80:	bl	1ee90 <__ubsan_handle_shift_out_of_bounds@@Base+0x38>
   1ee84:	ldp	x29, x30, [sp, #32]
   1ee88:	add	sp, sp, #0x30
   1ee8c:	ret
   1ee90:	stp	x29, x30, [sp, #-64]!
   1ee94:	stp	x24, x23, [sp, #16]
   1ee98:	stp	x22, x21, [sp, #32]
   1ee9c:	stp	x20, x19, [sp, #48]
   1eea0:	sub	sp, sp, #0x2c0
   1eea4:	mov	x22, x3
   1eea8:	mov	x19, x0
   1eeac:	add	x8, x0, #0xc
   1eeb0:	mov	w9, #0xffffffff            	// #-1
   1eeb4:	ldaxr	w24, [x8]
   1eeb8:	stlxr	w10, w9, [x8]
   1eebc:	cbnz	w10, 1eeb4 <__ubsan_handle_shift_out_of_bounds@@Base+0x5c>
   1eec0:	ldr	x8, [x19, #16]
   1eec4:	ldr	x20, [x19]
   1eec8:	ldr	w23, [x19, #8]
   1eecc:	str	x1, [sp, #680]
   1eed0:	str	x8, [sp, #672]
   1eed4:	ldr	x8, [x19, #24]
   1eed8:	str	x2, [sp, #664]
   1eedc:	str	x8, [sp, #656]
   1eee0:	ldrh	w9, [x8]
   1eee4:	cbnz	w9, 1eefc <__ubsan_handle_shift_out_of_bounds@@Base+0xa4>
   1eee8:	ldrb	w8, [x8, #2]
   1eeec:	tbz	w8, #0, 1eefc <__ubsan_handle_shift_out_of_bounds@@Base+0xa4>
   1eef0:	add	x0, sp, #0x290
   1eef4:	bl	21074 <__ubsan_get_current_report_data@@Base+0xe8>
   1eef8:	tbnz	x1, #63, 1f0f8 <__ubsan_handle_shift_out_of_bounds@@Base+0x2a0>
   1eefc:	add	x0, sp, #0x290
   1ef00:	bl	21220 <__ubsan_get_current_report_data@@Base+0x294>
   1ef04:	ldr	x8, [x19, #16]
   1ef08:	ldrh	w9, [x8]
   1ef0c:	cbnz	w9, 1f200 <__ubsan_handle_shift_out_of_bounds@@Base+0x3a8>
   1ef10:	ldrh	w8, [x8, #2]
   1ef14:	mov	w9, #0x1                   	// #1
   1ef18:	lsr	x8, x8, #1
   1ef1c:	lsl	w8, w9, w8
   1ef20:	cmp	x0, x8
   1ef24:	cset	w8, cc  // cc = lo, ul, last
   1ef28:	cmp	x1, #0x0
   1ef2c:	csel	w8, w8, wzr, eq  // eq = none
   1ef30:	cmp	w8, #0x0
   1ef34:	mov	w8, #0x12                  	// #18
   1ef38:	cinc	w21, w8, eq  // eq = none
   1ef3c:	ldrb	w8, [x22]
   1ef40:	bfi	x23, x24, #32, #32
   1ef44:	cbz	w8, 1f108 <__ubsan_handle_shift_out_of_bounds@@Base+0x2b0>
   1ef48:	ldr	x8, [x22, #16]
   1ef4c:	ldr	q0, [x22]
   1ef50:	mov	w9, #0x1                   	// #1
   1ef54:	add	x0, sp, #0x240
   1ef58:	add	x1, sp, #0x220
   1ef5c:	add	x2, sp, #0x1f8
   1ef60:	mov	w3, w21
   1ef64:	str	w9, [sp, #504]
   1ef68:	str	x8, [sp, #560]
   1ef6c:	str	q0, [sp, #544]
   1ef70:	str	x20, [sp, #512]
   1ef74:	str	x23, [sp, #520]
   1ef78:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1ef7c:	cmp	w21, #0x13
   1ef80:	b.ne	1f05c <__ubsan_handle_shift_out_of_bounds@@Base+0x204>  // b.any
   1ef84:	ldr	x8, [sp, #656]
   1ef88:	ldrh	w9, [x8]
   1ef8c:	cbnz	w9, 1efa4 <__ubsan_handle_shift_out_of_bounds@@Base+0x14c>
   1ef90:	ldrb	w8, [x8, #2]
   1ef94:	tbz	w8, #0, 1efa4 <__ubsan_handle_shift_out_of_bounds@@Base+0x14c>
   1ef98:	add	x0, sp, #0x290
   1ef9c:	bl	21074 <__ubsan_get_current_report_data@@Base+0xe8>
   1efa0:	tbnz	x1, #63, 1f140 <__ubsan_handle_shift_out_of_bounds@@Base+0x2e8>
   1efa4:	movi	v0.2d, #0x0
   1efa8:	str	d0, [sp, #408]
   1efac:	str	d0, [sp, #448]
   1efb0:	ldr	q0, [sp, #32]
   1efb4:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1efb8:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1efbc:	mov	w8, #0x1                   	// #1
   1efc0:	stur	q0, [sp, #88]
   1efc4:	ldr	d0, [x9, #2640]
   1efc8:	add	x10, x10, #0xec2
   1efcc:	add	x0, sp, #0x40
   1efd0:	add	x1, sp, #0x290
   1efd4:	stp	x20, x23, [sp, #72]
   1efd8:	str	wzr, [sp, #384]
   1efdc:	str	wzr, [sp, #392]
   1efe0:	str	xzr, [sp, #400]
   1efe4:	str	wzr, [sp, #432]
   1efe8:	str	xzr, [sp, #440]
   1efec:	str	xzr, [sp, #472]
   1eff0:	str	w8, [sp, #64]
   1eff4:	str	x10, [sp, #112]
   1eff8:	str	d0, [sp, #104]
   1effc:	str	wzr, [sp, #480]
   1f000:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f004:	ldr	x9, [x19, #16]
   1f008:	ldrh	w8, [x9]
   1f00c:	cbnz	w8, 1f200 <__ubsan_handle_shift_out_of_bounds@@Base+0x3a8>
   1f010:	ldr	w8, [x0, #320]
   1f014:	cmp	w8, #0x8
   1f018:	b.eq	1f218 <__ubsan_handle_shift_out_of_bounds@@Base+0x3c0>  // b.none
   1f01c:	ldrh	w9, [x9, #2]
   1f020:	add	w11, w8, #0x1
   1f024:	add	x8, x0, x8, lsl #5
   1f028:	mov	w12, #0x2                   	// #2
   1f02c:	str	w11, [x0, #320]
   1f030:	str	w12, [x8, #64]
   1f034:	add	x12, sp, #0x1b5
   1f038:	ldr	w11, [sp, #700]
   1f03c:	ldur	x12, [x12, #255]
   1f040:	mov	w10, #0x1                   	// #1
   1f044:	lsr	w9, w9, #1
   1f048:	lsl	w9, w10, w9
   1f04c:	str	w11, [x8, #76]
   1f050:	stur	x12, [x8, #68]
   1f054:	stp	x9, xzr, [x8, #80]
   1f058:	b	1f0dc <__ubsan_handle_shift_out_of_bounds@@Base+0x284>
   1f05c:	ldr	x8, [sp, #672]
   1f060:	ldrh	w9, [x8]
   1f064:	cbnz	w9, 1f07c <__ubsan_handle_shift_out_of_bounds@@Base+0x224>
   1f068:	ldrb	w8, [x8, #2]
   1f06c:	tbz	w8, #0, 1f07c <__ubsan_handle_shift_out_of_bounds@@Base+0x224>
   1f070:	add	x0, sp, #0x2a0
   1f074:	bl	21074 <__ubsan_get_current_report_data@@Base+0xe8>
   1f078:	tbnz	x1, #63, 1f1a4 <__ubsan_handle_shift_out_of_bounds@@Base+0x34c>
   1f07c:	movi	v0.2d, #0x0
   1f080:	str	d0, [sp, #408]
   1f084:	str	d0, [sp, #448]
   1f088:	ldr	q0, [sp]
   1f08c:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f090:	mov	w8, #0x1                   	// #1
   1f094:	add	x9, x9, #0xf14
   1f098:	add	x0, sp, #0x40
   1f09c:	add	x1, sp, #0x2a0
   1f0a0:	stp	x20, x23, [sp, #72]
   1f0a4:	stp	wzr, w21, [sp, #104]
   1f0a8:	str	wzr, [sp, #384]
   1f0ac:	str	wzr, [sp, #392]
   1f0b0:	str	xzr, [sp, #400]
   1f0b4:	str	wzr, [sp, #432]
   1f0b8:	str	xzr, [sp, #440]
   1f0bc:	str	xzr, [sp, #472]
   1f0c0:	str	w8, [sp, #64]
   1f0c4:	str	x9, [sp, #112]
   1f0c8:	stur	q0, [sp, #88]
   1f0cc:	str	wzr, [sp, #480]
   1f0d0:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f0d4:	add	x1, sp, #0x290
   1f0d8:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f0dc:	ldr	x1, [x19, #16]
   1f0e0:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1f0e4:	add	x0, sp, #0x40
   1f0e8:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f0ec:	add	x0, sp, #0x240
   1f0f0:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f0f4:	b	1f128 <__ubsan_handle_shift_out_of_bounds@@Base+0x2d0>
   1f0f8:	mov	w21, #0x13                  	// #19
   1f0fc:	ldrb	w8, [x22]
   1f100:	bfi	x23, x24, #32, #32
   1f104:	cbnz	w8, 1ef48 <__ubsan_handle_shift_out_of_bounds@@Base+0xf0>
   1f108:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1f10c:	cmp	x23, x8
   1f110:	b.hi	1f128 <__ubsan_handle_shift_out_of_bounds@@Base+0x2d0>  // b.pmore
   1f114:	ldr	x1, [x22, #8]
   1f118:	mov	w0, w21
   1f11c:	mov	x2, x20
   1f120:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1f124:	tbz	w0, #0, 1ef48 <__ubsan_handle_shift_out_of_bounds@@Base+0xf0>
   1f128:	add	sp, sp, #0x2c0
   1f12c:	ldp	x20, x19, [sp, #48]
   1f130:	ldp	x22, x21, [sp, #32]
   1f134:	ldp	x24, x23, [sp, #16]
   1f138:	ldp	x29, x30, [sp], #64
   1f13c:	ret
   1f140:	movi	v0.2d, #0x0
   1f144:	str	d0, [sp, #408]
   1f148:	str	d0, [sp, #448]
   1f14c:	ldr	q0, [sp, #48]
   1f150:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f154:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f158:	mov	w8, #0x1                   	// #1
   1f15c:	stur	q0, [sp, #88]
   1f160:	ldr	d0, [x9, #2640]
   1f164:	add	x10, x10, #0xea4
   1f168:	add	x0, sp, #0x40
   1f16c:	add	x1, sp, #0x290
   1f170:	stp	x20, x23, [sp, #72]
   1f174:	str	wzr, [sp, #384]
   1f178:	str	wzr, [sp, #392]
   1f17c:	str	xzr, [sp, #400]
   1f180:	str	wzr, [sp, #432]
   1f184:	str	xzr, [sp, #440]
   1f188:	str	xzr, [sp, #472]
   1f18c:	str	w8, [sp, #64]
   1f190:	str	x10, [sp, #112]
   1f194:	str	d0, [sp, #104]
   1f198:	str	wzr, [sp, #480]
   1f19c:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f1a0:	b	1f0e4 <__ubsan_handle_shift_out_of_bounds@@Base+0x28c>
   1f1a4:	movi	v0.2d, #0x0
   1f1a8:	str	d0, [sp, #408]
   1f1ac:	str	d0, [sp, #448]
   1f1b0:	ldr	q0, [sp, #16]
   1f1b4:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f1b8:	mov	w8, #0x1                   	// #1
   1f1bc:	add	x9, x9, #0xef4
   1f1c0:	add	x0, sp, #0x40
   1f1c4:	add	x1, sp, #0x2a0
   1f1c8:	stp	x20, x23, [sp, #72]
   1f1cc:	stp	wzr, w21, [sp, #104]
   1f1d0:	str	wzr, [sp, #384]
   1f1d4:	str	wzr, [sp, #392]
   1f1d8:	str	xzr, [sp, #400]
   1f1dc:	str	wzr, [sp, #432]
   1f1e0:	str	xzr, [sp, #440]
   1f1e4:	str	xzr, [sp, #472]
   1f1e8:	str	w8, [sp, #64]
   1f1ec:	str	x9, [sp, #112]
   1f1f0:	stur	q0, [sp, #88]
   1f1f4:	str	wzr, [sp, #480]
   1f1f8:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f1fc:	b	1f0e4 <__ubsan_handle_shift_out_of_bounds@@Base+0x28c>
   1f200:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f204:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f208:	add	x0, x0, #0xf53
   1f20c:	add	x2, x2, #0xf94
   1f210:	mov	w1, #0x7c                  	// #124
   1f214:	b	1f22c <__ubsan_handle_shift_out_of_bounds@@Base+0x3d4>
   1f218:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f21c:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f220:	add	x0, x0, #0x3bb
   1f224:	add	x2, x2, #0x3fb
   1f228:	mov	w1, #0xc0                  	// #192
   1f22c:	mov	x3, xzr
   1f230:	mov	x4, xzr
   1f234:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001f238 <__ubsan_handle_shift_out_of_bounds_abort@@Base>:
   1f238:	sub	sp, sp, #0x30
   1f23c:	stp	x29, x30, [sp, #32]
   1f240:	add	x29, sp, #0x20
   1f244:	ldur	w8, [x29, #-8]
   1f248:	ldur	w9, [x29, #-5]
   1f24c:	mov	w10, #0x1                   	// #1
   1f250:	mov	x3, sp
   1f254:	strb	w10, [sp]
   1f258:	stur	w8, [sp, #1]
   1f25c:	str	w9, [sp, #4]
   1f260:	stp	x30, x29, [sp, #8]
   1f264:	bl	1ee90 <__ubsan_handle_shift_out_of_bounds@@Base+0x38>
   1f268:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001f26c <__ubsan_handle_out_of_bounds@@Base>:
   1f26c:	sub	sp, sp, #0x30
   1f270:	stp	x29, x30, [sp, #32]
   1f274:	add	x29, sp, #0x20
   1f278:	ldur	w8, [x29, #-8]
   1f27c:	ldur	w9, [x29, #-5]
   1f280:	mov	x2, sp
   1f284:	strb	wzr, [sp]
   1f288:	stur	w8, [sp, #1]
   1f28c:	str	w9, [sp, #4]
   1f290:	stp	x30, x29, [sp, #8]
   1f294:	bl	1f2a4 <__ubsan_handle_out_of_bounds@@Base+0x38>
   1f298:	ldp	x29, x30, [sp, #32]
   1f29c:	add	sp, sp, #0x30
   1f2a0:	ret
   1f2a4:	str	x29, [sp, #-64]!
   1f2a8:	stp	x30, x23, [sp, #16]
   1f2ac:	stp	x22, x21, [sp, #32]
   1f2b0:	stp	x20, x19, [sp, #48]
   1f2b4:	sub	sp, sp, #0x270
   1f2b8:	mov	x21, x2
   1f2bc:	mov	x20, x1
   1f2c0:	mov	x19, x0
   1f2c4:	add	x9, x0, #0xc
   1f2c8:	mov	w10, #0xffffffff            	// #-1
   1f2cc:	ldaxr	w8, [x9]
   1f2d0:	stlxr	w11, w10, [x9]
   1f2d4:	cbnz	w11, 1f2cc <__ubsan_handle_out_of_bounds@@Base+0x60>
   1f2d8:	ldr	w23, [x19, #8]
   1f2dc:	ldrb	w9, [x21]
   1f2e0:	ldr	x22, [x19]
   1f2e4:	bfi	x23, x8, #32, #32
   1f2e8:	cbz	w9, 1f39c <__ubsan_handle_out_of_bounds@@Base+0x130>
   1f2ec:	ldr	x8, [x21, #16]
   1f2f0:	ldr	q0, [x21]
   1f2f4:	mov	w21, #0x1                   	// #1
   1f2f8:	add	x0, sp, #0x220
   1f2fc:	add	x1, sp, #0x200
   1f300:	add	x2, sp, #0x1d8
   1f304:	mov	w3, #0x14                  	// #20
   1f308:	str	w21, [sp, #472]
   1f30c:	str	x8, [sp, #528]
   1f310:	str	q0, [sp, #512]
   1f314:	stp	x22, x23, [sp, #480]
   1f318:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1f31c:	movi	v0.2d, #0x0
   1f320:	ldr	x8, [x19, #24]
   1f324:	str	d0, [sp, #360]
   1f328:	str	d0, [sp, #400]
   1f32c:	ldr	q0, [sp]
   1f330:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f334:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f338:	add	x10, x10, #0xfad
   1f33c:	stur	q0, [sp, #40]
   1f340:	ldr	d0, [x9, #2648]
   1f344:	add	x0, sp, #0x10
   1f348:	add	x1, sp, #0x1c8
   1f34c:	str	w21, [sp, #16]
   1f350:	stp	x22, x23, [sp, #24]
   1f354:	str	wzr, [sp, #336]
   1f358:	str	wzr, [sp, #344]
   1f35c:	str	xzr, [sp, #352]
   1f360:	str	wzr, [sp, #384]
   1f364:	str	xzr, [sp, #392]
   1f368:	str	xzr, [sp, #424]
   1f36c:	str	x10, [sp, #64]
   1f370:	stp	x8, x20, [sp, #456]
   1f374:	str	d0, [sp, #56]
   1f378:	str	wzr, [sp, #432]
   1f37c:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f380:	ldr	x1, [x19, #16]
   1f384:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1f388:	add	x0, sp, #0x10
   1f38c:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f390:	add	x0, sp, #0x220
   1f394:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f398:	b	1f3bc <__ubsan_handle_out_of_bounds@@Base+0x150>
   1f39c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1f3a0:	cmp	x23, x8
   1f3a4:	b.hi	1f3bc <__ubsan_handle_out_of_bounds@@Base+0x150>  // b.pmore
   1f3a8:	ldr	x1, [x21, #8]
   1f3ac:	mov	w0, #0x14                  	// #20
   1f3b0:	mov	x2, x22
   1f3b4:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1f3b8:	tbz	w0, #0, 1f2ec <__ubsan_handle_out_of_bounds@@Base+0x80>
   1f3bc:	add	sp, sp, #0x270
   1f3c0:	ldp	x20, x19, [sp, #48]
   1f3c4:	ldp	x22, x21, [sp, #32]
   1f3c8:	ldp	x30, x23, [sp, #16]
   1f3cc:	ldr	x29, [sp], #64
   1f3d0:	ret

000000000001f3d4 <__ubsan_handle_out_of_bounds_abort@@Base>:
   1f3d4:	sub	sp, sp, #0x30
   1f3d8:	stp	x29, x30, [sp, #32]
   1f3dc:	add	x29, sp, #0x20
   1f3e0:	ldur	w8, [x29, #-8]
   1f3e4:	ldur	w9, [x29, #-5]
   1f3e8:	mov	w10, #0x1                   	// #1
   1f3ec:	mov	x2, sp
   1f3f0:	strb	w10, [sp]
   1f3f4:	stur	w8, [sp, #1]
   1f3f8:	str	w9, [sp, #4]
   1f3fc:	stp	x30, x29, [sp, #8]
   1f400:	bl	1f2a4 <__ubsan_handle_out_of_bounds@@Base+0x38>
   1f404:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001f408 <__ubsan_handle_builtin_unreachable@@Base>:
   1f408:	sub	sp, sp, #0x30
   1f40c:	stp	x29, x30, [sp, #32]
   1f410:	add	x29, sp, #0x20
   1f414:	ldur	w8, [x29, #-8]
   1f418:	ldur	w9, [x29, #-5]
   1f41c:	mov	w10, #0x1                   	// #1
   1f420:	mov	x1, sp
   1f424:	strb	w10, [sp]
   1f428:	stur	w8, [sp, #1]
   1f42c:	str	w9, [sp, #4]
   1f430:	stp	x30, x29, [sp, #8]
   1f434:	bl	1f43c <__ubsan_handle_builtin_unreachable@@Base+0x34>
   1f438:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1f43c:	stp	x29, x30, [sp, #-32]!
   1f440:	stp	x20, x19, [sp, #16]
   1f444:	sub	sp, sp, #0x260
   1f448:	ldr	x8, [x1, #16]
   1f44c:	ldr	q0, [x1]
   1f450:	mov	x19, x0
   1f454:	mov	w20, #0x1                   	// #1
   1f458:	str	x8, [sp, #512]
   1f45c:	str	q0, [sp, #496]
   1f460:	ldr	q0, [x0]
   1f464:	add	x8, sp, #0xd1
   1f468:	add	x0, sp, #0x210
   1f46c:	add	x1, sp, #0x1f0
   1f470:	add	x2, sp, #0x1c8
   1f474:	mov	w3, #0x15                  	// #21
   1f478:	str	w20, [sp, #456]
   1f47c:	stur	q0, [x8, #255]
   1f480:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1f484:	ldr	q0, [x19]
   1f488:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f48c:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f490:	movi	v1.2d, #0x0
   1f494:	stur	q0, [sp, #24]
   1f498:	ldr	q0, [sp]
   1f49c:	add	x9, x9, #0xfd0
   1f4a0:	add	x0, sp, #0x10
   1f4a4:	str	d1, [sp, #360]
   1f4a8:	stur	q0, [sp, #40]
   1f4ac:	ldr	d0, [x8, #2656]
   1f4b0:	str	d1, [sp, #400]
   1f4b4:	str	w20, [sp, #16]
   1f4b8:	str	wzr, [sp, #336]
   1f4bc:	str	wzr, [sp, #344]
   1f4c0:	str	xzr, [sp, #352]
   1f4c4:	str	wzr, [sp, #384]
   1f4c8:	str	xzr, [sp, #392]
   1f4cc:	str	xzr, [sp, #424]
   1f4d0:	str	x9, [sp, #64]
   1f4d4:	str	d0, [sp, #56]
   1f4d8:	str	wzr, [sp, #432]
   1f4dc:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f4e0:	add	x0, sp, #0x210
   1f4e4:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f4e8:	add	sp, sp, #0x260
   1f4ec:	ldp	x20, x19, [sp, #16]
   1f4f0:	ldp	x29, x30, [sp], #32
   1f4f4:	ret

000000000001f4f8 <__ubsan_handle_missing_return@@Base>:
   1f4f8:	sub	sp, sp, #0x30
   1f4fc:	stp	x29, x30, [sp, #32]
   1f500:	add	x29, sp, #0x20
   1f504:	ldur	w8, [x29, #-8]
   1f508:	ldur	w9, [x29, #-5]
   1f50c:	mov	w10, #0x1                   	// #1
   1f510:	mov	x1, sp
   1f514:	strb	w10, [sp]
   1f518:	stur	w8, [sp, #1]
   1f51c:	str	w9, [sp, #4]
   1f520:	stp	x30, x29, [sp, #8]
   1f524:	bl	1f52c <__ubsan_handle_missing_return@@Base+0x34>
   1f528:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   1f52c:	stp	x29, x30, [sp, #-32]!
   1f530:	stp	x20, x19, [sp, #16]
   1f534:	sub	sp, sp, #0x260
   1f538:	ldr	x8, [x1, #16]
   1f53c:	ldr	q0, [x1]
   1f540:	mov	x19, x0
   1f544:	mov	w20, #0x1                   	// #1
   1f548:	str	x8, [sp, #512]
   1f54c:	str	q0, [sp, #496]
   1f550:	ldr	q0, [x0]
   1f554:	add	x8, sp, #0xd1
   1f558:	add	x0, sp, #0x210
   1f55c:	add	x1, sp, #0x1f0
   1f560:	add	x2, sp, #0x1c8
   1f564:	mov	w3, #0x16                  	// #22
   1f568:	str	w20, [sp, #456]
   1f56c:	stur	q0, [x8, #255]
   1f570:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1f574:	ldr	q0, [x19]
   1f578:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f57c:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f580:	movi	v1.2d, #0x0
   1f584:	stur	q0, [sp, #24]
   1f588:	ldr	q0, [sp]
   1f58c:	add	x9, x9, #0xfff
   1f590:	add	x0, sp, #0x10
   1f594:	str	d1, [sp, #360]
   1f598:	stur	q0, [sp, #40]
   1f59c:	ldr	d0, [x8, #2664]
   1f5a0:	str	d1, [sp, #400]
   1f5a4:	str	w20, [sp, #16]
   1f5a8:	str	wzr, [sp, #336]
   1f5ac:	str	wzr, [sp, #344]
   1f5b0:	str	xzr, [sp, #352]
   1f5b4:	str	wzr, [sp, #384]
   1f5b8:	str	xzr, [sp, #392]
   1f5bc:	str	xzr, [sp, #424]
   1f5c0:	str	x9, [sp, #64]
   1f5c4:	str	d0, [sp, #56]
   1f5c8:	str	wzr, [sp, #432]
   1f5cc:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f5d0:	add	x0, sp, #0x210
   1f5d4:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f5d8:	add	sp, sp, #0x260
   1f5dc:	ldp	x20, x19, [sp, #16]
   1f5e0:	ldp	x29, x30, [sp], #32
   1f5e4:	ret

000000000001f5e8 <__ubsan_handle_vla_bound_not_positive@@Base>:
   1f5e8:	sub	sp, sp, #0x30
   1f5ec:	stp	x29, x30, [sp, #32]
   1f5f0:	add	x29, sp, #0x20
   1f5f4:	ldur	w8, [x29, #-8]
   1f5f8:	ldur	w9, [x29, #-5]
   1f5fc:	mov	x2, sp
   1f600:	strb	wzr, [sp]
   1f604:	stur	w8, [sp, #1]
   1f608:	str	w9, [sp, #4]
   1f60c:	stp	x30, x29, [sp, #8]
   1f610:	bl	1f620 <__ubsan_handle_vla_bound_not_positive@@Base+0x38>
   1f614:	ldp	x29, x30, [sp, #32]
   1f618:	add	sp, sp, #0x30
   1f61c:	ret
   1f620:	str	x29, [sp, #-64]!
   1f624:	stp	x30, x23, [sp, #16]
   1f628:	stp	x22, x21, [sp, #32]
   1f62c:	stp	x20, x19, [sp, #48]
   1f630:	sub	sp, sp, #0x270
   1f634:	mov	x21, x2
   1f638:	mov	x19, x1
   1f63c:	mov	x20, x0
   1f640:	add	x9, x0, #0xc
   1f644:	mov	w10, #0xffffffff            	// #-1
   1f648:	ldaxr	w8, [x9]
   1f64c:	stlxr	w11, w10, [x9]
   1f650:	cbnz	w11, 1f648 <__ubsan_handle_vla_bound_not_positive@@Base+0x60>
   1f654:	ldr	w23, [x20, #8]
   1f658:	ldrb	w9, [x21]
   1f65c:	ldr	x22, [x20]
   1f660:	bfi	x23, x8, #32, #32
   1f664:	cbz	w9, 1f710 <__ubsan_handle_vla_bound_not_positive@@Base+0x128>
   1f668:	ldr	x8, [x21, #16]
   1f66c:	ldr	q0, [x21]
   1f670:	mov	w21, #0x1                   	// #1
   1f674:	add	x0, sp, #0x220
   1f678:	add	x1, sp, #0x200
   1f67c:	add	x2, sp, #0x1d8
   1f680:	mov	w3, #0x17                  	// #23
   1f684:	str	w21, [sp, #472]
   1f688:	str	x8, [sp, #528]
   1f68c:	str	q0, [sp, #512]
   1f690:	stp	x22, x23, [sp, #480]
   1f694:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1f698:	movi	v0.2d, #0x0
   1f69c:	str	d0, [sp, #376]
   1f6a0:	str	d0, [sp, #416]
   1f6a4:	ldr	q0, [sp, #16]
   1f6a8:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f6ac:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1f6b0:	add	x9, x9, #0x51
   1f6b4:	stur	q0, [sp, #56]
   1f6b8:	ldr	d0, [x8, #2672]
   1f6bc:	str	w21, [sp, #32]
   1f6c0:	stp	x22, x23, [sp, #40]
   1f6c4:	str	wzr, [sp, #352]
   1f6c8:	str	wzr, [sp, #360]
   1f6cc:	str	xzr, [sp, #368]
   1f6d0:	str	wzr, [sp, #400]
   1f6d4:	str	xzr, [sp, #408]
   1f6d8:	str	xzr, [sp, #440]
   1f6dc:	str	wzr, [sp, #448]
   1f6e0:	str	x9, [sp, #80]
   1f6e4:	str	d0, [sp, #72]
   1f6e8:	ldr	x8, [x20, #16]
   1f6ec:	add	x0, sp, #0x20
   1f6f0:	mov	x1, sp
   1f6f4:	stp	x8, x19, [sp]
   1f6f8:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f6fc:	add	x0, sp, #0x20
   1f700:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f704:	add	x0, sp, #0x220
   1f708:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f70c:	b	1f730 <__ubsan_handle_vla_bound_not_positive@@Base+0x148>
   1f710:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1f714:	cmp	x23, x8
   1f718:	b.hi	1f730 <__ubsan_handle_vla_bound_not_positive@@Base+0x148>  // b.pmore
   1f71c:	ldr	x1, [x21, #8]
   1f720:	mov	w0, #0x17                  	// #23
   1f724:	mov	x2, x22
   1f728:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1f72c:	tbz	w0, #0, 1f668 <__ubsan_handle_vla_bound_not_positive@@Base+0x80>
   1f730:	add	sp, sp, #0x270
   1f734:	ldp	x20, x19, [sp, #48]
   1f738:	ldp	x22, x21, [sp, #32]
   1f73c:	ldp	x30, x23, [sp, #16]
   1f740:	ldr	x29, [sp], #64
   1f744:	ret

000000000001f748 <__ubsan_handle_vla_bound_not_positive_abort@@Base>:
   1f748:	sub	sp, sp, #0x30
   1f74c:	stp	x29, x30, [sp, #32]
   1f750:	add	x29, sp, #0x20
   1f754:	ldur	w8, [x29, #-8]
   1f758:	ldur	w9, [x29, #-5]
   1f75c:	mov	w10, #0x1                   	// #1
   1f760:	mov	x2, sp
   1f764:	strb	w10, [sp]
   1f768:	stur	w8, [sp, #1]
   1f76c:	str	w9, [sp, #4]
   1f770:	stp	x30, x29, [sp, #8]
   1f774:	bl	1f620 <__ubsan_handle_vla_bound_not_positive@@Base+0x38>
   1f778:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001f77c <__ubsan_handle_float_cast_overflow@@Base>:
   1f77c:	sub	sp, sp, #0x30
   1f780:	stp	x29, x30, [sp, #32]
   1f784:	add	x29, sp, #0x20
   1f788:	ldur	w8, [x29, #-8]
   1f78c:	ldur	w9, [x29, #-5]
   1f790:	mov	x2, sp
   1f794:	strb	wzr, [sp]
   1f798:	stur	w8, [sp, #1]
   1f79c:	str	w9, [sp, #4]
   1f7a0:	stp	x30, x29, [sp, #8]
   1f7a4:	bl	1f7b4 <__ubsan_handle_float_cast_overflow@@Base+0x38>
   1f7a8:	ldp	x29, x30, [sp, #32]
   1f7ac:	add	sp, sp, #0x30
   1f7b0:	ret
   1f7b4:	stp	x29, x30, [sp, #-80]!
   1f7b8:	stp	x26, x25, [sp, #16]
   1f7bc:	stp	x24, x23, [sp, #32]
   1f7c0:	stp	x22, x21, [sp, #48]
   1f7c4:	stp	x20, x19, [sp, #64]
   1f7c8:	sub	sp, sp, #0x260
   1f7cc:	mov	x22, x0
   1f7d0:	mov	x20, x2
   1f7d4:	mov	x19, x1
   1f7d8:	add	x0, sp, #0x10
   1f7dc:	mov	w2, #0x8                   	// #8
   1f7e0:	mov	x1, x22
   1f7e4:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   1f7e8:	ldr	x9, [sp, #16]
   1f7ec:	ldrb	w8, [x9, #1]
   1f7f0:	cmp	w8, #0xff
   1f7f4:	b.eq	1f84c <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.none
   1f7f8:	ldrb	w9, [x9]
   1f7fc:	cmp	w9, #0xff
   1f800:	b.eq	1f84c <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.none
   1f804:	add	w8, w8, w9
   1f808:	cmp	w8, #0x1
   1f80c:	b.ls	1f84c <__ubsan_handle_float_cast_overflow@@Base+0xd0>  // b.plast
   1f810:	add	x8, x22, #0xc
   1f814:	mov	w9, #0xffffffff            	// #-1
   1f818:	ldaxr	w24, [x8]
   1f81c:	stlxr	w10, w9, [x8]
   1f820:	cbnz	w10, 1f818 <__ubsan_handle_float_cast_overflow@@Base+0x9c>
   1f824:	ldr	x23, [x22]
   1f828:	ldrb	w8, [x20]
   1f82c:	ldr	w25, [x22, #8]
   1f830:	cbz	w8, 1f954 <__ubsan_handle_float_cast_overflow@@Base+0x1d8>
   1f834:	mov	x21, xzr
   1f838:	add	x9, x22, #0x18
   1f83c:	add	x22, x22, #0x10
   1f840:	lsl	x8, x24, #32
   1f844:	mov	w26, #0x1                   	// #1
   1f848:	b	1f874 <__ubsan_handle_float_cast_overflow@@Base+0xf8>
   1f84c:	ldr	x8, [x20, #8]
   1f850:	cbz	x8, 1f974 <__ubsan_handle_float_cast_overflow@@Base+0x1f8>
   1f854:	sub	x0, x8, #0x4
   1f858:	bl	1cafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c4>
   1f85c:	mov	x21, x0
   1f860:	mov	x23, xzr
   1f864:	mov	x25, xzr
   1f868:	mov	x8, xzr
   1f86c:	add	x9, x22, #0x8
   1f870:	mov	w26, #0x3                   	// #3
   1f874:	ldr	x24, [x9]
   1f878:	ldr	q0, [x20]
   1f87c:	ldr	x9, [x20, #16]
   1f880:	ldr	x22, [x22]
   1f884:	orr	x20, x8, x25
   1f888:	add	x0, sp, #0x210
   1f88c:	add	x1, sp, #0x1f0
   1f890:	add	x2, sp, #0x1c8
   1f894:	mov	w3, #0x18                  	// #24
   1f898:	str	w26, [sp, #456]
   1f89c:	stp	x23, x20, [sp, #464]
   1f8a0:	str	x9, [sp, #512]
   1f8a4:	str	q0, [sp, #496]
   1f8a8:	str	x21, [sp, #488]
   1f8ac:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1f8b0:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f8b4:	movi	v0.2d, #0x0
   1f8b8:	str	d0, [sp, #360]
   1f8bc:	str	d0, [sp, #400]
   1f8c0:	ldr	d0, [x8, #2680]
   1f8c4:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1f8c8:	add	x9, x9, #0x90
   1f8cc:	add	x0, sp, #0x10
   1f8d0:	mov	x1, sp
   1f8d4:	str	w26, [sp, #16]
   1f8d8:	stp	x23, x20, [sp, #24]
   1f8dc:	str	x21, [sp, #48]
   1f8e0:	str	wzr, [sp, #336]
   1f8e4:	str	wzr, [sp, #344]
   1f8e8:	str	xzr, [sp, #352]
   1f8ec:	str	wzr, [sp, #384]
   1f8f0:	str	xzr, [sp, #392]
   1f8f4:	str	xzr, [sp, #424]
   1f8f8:	str	wzr, [sp, #432]
   1f8fc:	str	x9, [sp, #64]
   1f900:	str	d0, [sp, #56]
   1f904:	stp	x22, x19, [sp]
   1f908:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1f90c:	mov	x1, x22
   1f910:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1f914:	mov	x1, x24
   1f918:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1f91c:	add	x0, sp, #0x10
   1f920:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1f924:	add	x0, sp, #0x210
   1f928:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1f92c:	cbz	x21, 1f938 <__ubsan_handle_float_cast_overflow@@Base+0x1bc>
   1f930:	mov	x0, x21
   1f934:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   1f938:	add	sp, sp, #0x260
   1f93c:	ldp	x20, x19, [sp, #64]
   1f940:	ldp	x22, x21, [sp, #48]
   1f944:	ldp	x24, x23, [sp, #32]
   1f948:	ldp	x26, x25, [sp, #16]
   1f94c:	ldp	x29, x30, [sp], #80
   1f950:	ret
   1f954:	cmn	w24, #0x1
   1f958:	b.eq	1f938 <__ubsan_handle_float_cast_overflow@@Base+0x1bc>  // b.none
   1f95c:	ldr	x1, [x20, #8]
   1f960:	mov	w0, #0x18                  	// #24
   1f964:	mov	x2, x23
   1f968:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1f96c:	tbz	w0, #0, 1f834 <__ubsan_handle_float_cast_overflow@@Base+0xb8>
   1f970:	b	1f938 <__ubsan_handle_float_cast_overflow@@Base+0x1bc>
   1f974:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f978:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1f97c:	add	x0, x0, #0x3bb
   1f980:	add	x2, x2, #0xcb2
   1f984:	mov	w1, #0x2c                  	// #44
   1f988:	mov	x3, xzr
   1f98c:	mov	x4, xzr
   1f990:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001f994 <__ubsan_handle_float_cast_overflow_abort@@Base>:
   1f994:	sub	sp, sp, #0x30
   1f998:	stp	x29, x30, [sp, #32]
   1f99c:	add	x29, sp, #0x20
   1f9a0:	ldur	w8, [x29, #-8]
   1f9a4:	ldur	w9, [x29, #-5]
   1f9a8:	mov	w10, #0x1                   	// #1
   1f9ac:	mov	x2, sp
   1f9b0:	strb	w10, [sp]
   1f9b4:	stur	w8, [sp, #1]
   1f9b8:	str	w9, [sp, #4]
   1f9bc:	stp	x30, x29, [sp, #8]
   1f9c0:	bl	1f7b4 <__ubsan_handle_float_cast_overflow@@Base+0x38>
   1f9c4:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001f9c8 <__ubsan_handle_load_invalid_value@@Base>:
   1f9c8:	sub	sp, sp, #0x30
   1f9cc:	stp	x29, x30, [sp, #32]
   1f9d0:	add	x29, sp, #0x20
   1f9d4:	ldur	w8, [x29, #-8]
   1f9d8:	ldur	w9, [x29, #-5]
   1f9dc:	mov	x2, sp
   1f9e0:	strb	wzr, [sp]
   1f9e4:	stur	w8, [sp, #1]
   1f9e8:	str	w9, [sp, #4]
   1f9ec:	stp	x30, x29, [sp, #8]
   1f9f0:	bl	1fa00 <__ubsan_handle_load_invalid_value@@Base+0x38>
   1f9f4:	ldp	x29, x30, [sp, #32]
   1f9f8:	add	sp, sp, #0x30
   1f9fc:	ret
   1fa00:	str	x29, [sp, #-80]!
   1fa04:	stp	x30, x25, [sp, #16]
   1fa08:	stp	x24, x23, [sp, #32]
   1fa0c:	stp	x22, x21, [sp, #48]
   1fa10:	stp	x20, x19, [sp, #64]
   1fa14:	sub	sp, sp, #0x270
   1fa18:	mov	x23, x2
   1fa1c:	mov	x20, x1
   1fa20:	mov	x19, x0
   1fa24:	add	x8, x0, #0xc
   1fa28:	mov	w9, #0xffffffff            	// #-1
   1fa2c:	ldaxr	w25, [x8]
   1fa30:	stlxr	w10, w9, [x8]
   1fa34:	cbnz	w10, 1fa2c <__ubsan_handle_load_invalid_value@@Base+0x64>
   1fa38:	ldr	x8, [x19, #16]
   1fa3c:	ldr	x22, [x19]
   1fa40:	ldr	w24, [x19, #8]
   1fa44:	adrp	x1, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1fa48:	add	x0, x8, #0x4
   1fa4c:	add	x1, x1, #0xcb
   1fa50:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   1fa54:	mov	w21, #0x19                  	// #25
   1fa58:	cbz	w0, 1fa7c <__ubsan_handle_load_invalid_value@@Base+0xb4>
   1fa5c:	ldr	x8, [x19, #16]
   1fa60:	adrp	x1, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1fa64:	add	x1, x1, #0xd2
   1fa68:	mov	w2, #0x6                   	// #6
   1fa6c:	add	x0, x8, #0x4
   1fa70:	bl	c19c <__sanitizer_set_report_fd@@Base+0x28e8>
   1fa74:	cmp	w0, #0x0
   1fa78:	cinc	w21, w21, ne  // ne = any
   1fa7c:	ldrb	w8, [x23]
   1fa80:	bfi	x24, x25, #32, #32
   1fa84:	cbz	w8, 1fb30 <__ubsan_handle_load_invalid_value@@Base+0x168>
   1fa88:	ldr	x8, [x23, #16]
   1fa8c:	ldr	q0, [x23]
   1fa90:	mov	w23, #0x1                   	// #1
   1fa94:	add	x0, sp, #0x220
   1fa98:	add	x1, sp, #0x200
   1fa9c:	add	x2, sp, #0x1d8
   1faa0:	mov	w3, w21
   1faa4:	str	w23, [sp, #472]
   1faa8:	str	x8, [sp, #528]
   1faac:	str	q0, [sp, #512]
   1fab0:	stp	x22, x24, [sp, #480]
   1fab4:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1fab8:	movi	v0.2d, #0x0
   1fabc:	str	d0, [sp, #376]
   1fac0:	str	d0, [sp, #416]
   1fac4:	ldr	q0, [sp, #16]
   1fac8:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1facc:	add	x8, x8, #0xd9
   1fad0:	str	w23, [sp, #32]
   1fad4:	stp	x22, x24, [sp, #40]
   1fad8:	stp	wzr, w21, [sp, #72]
   1fadc:	str	wzr, [sp, #352]
   1fae0:	str	wzr, [sp, #360]
   1fae4:	str	xzr, [sp, #368]
   1fae8:	str	wzr, [sp, #400]
   1faec:	str	xzr, [sp, #408]
   1faf0:	str	xzr, [sp, #440]
   1faf4:	str	wzr, [sp, #448]
   1faf8:	str	x8, [sp, #80]
   1fafc:	stur	q0, [sp, #56]
   1fb00:	ldr	x8, [x19, #16]
   1fb04:	add	x0, sp, #0x20
   1fb08:	mov	x1, sp
   1fb0c:	stp	x8, x20, [sp]
   1fb10:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1fb14:	ldr	x1, [x19, #16]
   1fb18:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1fb1c:	add	x0, sp, #0x20
   1fb20:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1fb24:	add	x0, sp, #0x220
   1fb28:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1fb2c:	b	1fb50 <__ubsan_handle_load_invalid_value@@Base+0x188>
   1fb30:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1fb34:	cmp	x24, x8
   1fb38:	b.hi	1fb50 <__ubsan_handle_load_invalid_value@@Base+0x188>  // b.pmore
   1fb3c:	ldr	x1, [x23, #8]
   1fb40:	mov	w0, w21
   1fb44:	mov	x2, x22
   1fb48:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1fb4c:	tbz	w0, #0, 1fa88 <__ubsan_handle_load_invalid_value@@Base+0xc0>
   1fb50:	add	sp, sp, #0x270
   1fb54:	ldp	x20, x19, [sp, #64]
   1fb58:	ldp	x22, x21, [sp, #48]
   1fb5c:	ldp	x24, x23, [sp, #32]
   1fb60:	ldp	x30, x25, [sp, #16]
   1fb64:	ldr	x29, [sp], #80
   1fb68:	ret

000000000001fb6c <__ubsan_handle_load_invalid_value_abort@@Base>:
   1fb6c:	sub	sp, sp, #0x30
   1fb70:	stp	x29, x30, [sp, #32]
   1fb74:	add	x29, sp, #0x20
   1fb78:	ldur	w8, [x29, #-8]
   1fb7c:	ldur	w9, [x29, #-5]
   1fb80:	mov	w10, #0x1                   	// #1
   1fb84:	mov	x2, sp
   1fb88:	strb	w10, [sp]
   1fb8c:	stur	w8, [sp, #1]
   1fb90:	str	w9, [sp, #4]
   1fb94:	stp	x30, x29, [sp, #8]
   1fb98:	bl	1fa00 <__ubsan_handle_load_invalid_value@@Base+0x38>
   1fb9c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001fba0 <__ubsan_handle_implicit_conversion@@Base>:
   1fba0:	sub	sp, sp, #0x30
   1fba4:	stp	x29, x30, [sp, #32]
   1fba8:	add	x29, sp, #0x20
   1fbac:	ldur	w8, [x29, #-8]
   1fbb0:	ldur	w9, [x29, #-5]
   1fbb4:	mov	x3, x2
   1fbb8:	mov	x2, x1
   1fbbc:	mov	x1, sp
   1fbc0:	strb	wzr, [sp]
   1fbc4:	stur	w8, [sp, #1]
   1fbc8:	str	w9, [sp, #4]
   1fbcc:	stp	x30, x29, [sp, #8]
   1fbd0:	bl	1fbe0 <__ubsan_handle_implicit_conversion@@Base+0x40>
   1fbd4:	ldp	x29, x30, [sp, #32]
   1fbd8:	add	sp, sp, #0x30
   1fbdc:	ret
   1fbe0:	stp	x29, x30, [sp, #-96]!
   1fbe4:	stp	x28, x27, [sp, #16]
   1fbe8:	stp	x26, x25, [sp, #32]
   1fbec:	stp	x24, x23, [sp, #48]
   1fbf0:	stp	x22, x21, [sp, #64]
   1fbf4:	stp	x20, x19, [sp, #80]
   1fbf8:	sub	sp, sp, #0x2a0
   1fbfc:	mov	x19, x3
   1fc00:	mov	x22, x2
   1fc04:	mov	x23, x1
   1fc08:	add	x26, sp, #0x294
   1fc0c:	add	x9, x0, #0xc
   1fc10:	mov	w10, #0xffffffff            	// #-1
   1fc14:	ldaxr	w8, [x9]
   1fc18:	stlxr	w11, w10, [x9]
   1fc1c:	cbnz	w11, 1fc14 <__ubsan_handle_implicit_conversion@@Base+0x74>
   1fc20:	ldp	x21, x20, [x0, #16]
   1fc24:	ldr	x24, [x0]
   1fc28:	ldr	w29, [x0, #8]
   1fc2c:	ldrh	w9, [x21]
   1fc30:	cbz	w9, 1fc88 <__ubsan_handle_implicit_conversion@@Base+0xe8>
   1fc34:	mov	w28, wzr
   1fc38:	ldrh	w9, [x20]
   1fc3c:	cbz	w9, 1fc98 <__ubsan_handle_implicit_conversion@@Base+0xf8>
   1fc40:	mov	w27, wzr
   1fc44:	ldrb	w9, [x0, #32]
   1fc48:	cmp	w9, #0x4
   1fc4c:	b.hi	1fcac <__ubsan_handle_implicit_conversion@@Base+0x10c>  // b.pmore
   1fc50:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1fc54:	add	x10, x10, #0xad0
   1fc58:	adr	x11, 1fc68 <__ubsan_handle_implicit_conversion@@Base+0xc8>
   1fc5c:	ldrb	w12, [x10, x9]
   1fc60:	add	x11, x11, x12, lsl #2
   1fc64:	br	x11
   1fc68:	orr	w9, w28, w27
   1fc6c:	cmp	w9, #0x0
   1fc70:	mov	w9, #0xe                   	// #14
   1fc74:	cinc	w25, w9, ne  // ne = any
   1fc78:	ldrb	w9, [x23]
   1fc7c:	bfi	x29, x8, #32, #32
   1fc80:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fc84:	b	1fd0c <__ubsan_handle_implicit_conversion@@Base+0x16c>
   1fc88:	ldrb	w9, [x21, #2]
   1fc8c:	and	w28, w9, #0x1
   1fc90:	ldrh	w9, [x20]
   1fc94:	cbnz	w9, 1fc40 <__ubsan_handle_implicit_conversion@@Base+0xa0>
   1fc98:	ldrb	w9, [x20, #2]
   1fc9c:	and	w27, w9, #0x1
   1fca0:	ldrb	w9, [x0, #32]
   1fca4:	cmp	w9, #0x4
   1fca8:	b.ls	1fc50 <__ubsan_handle_implicit_conversion@@Base+0xb0>  // b.plast
   1fcac:	mov	w25, wzr
   1fcb0:	ldrb	w9, [x23]
   1fcb4:	bfi	x29, x8, #32, #32
   1fcb8:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fcbc:	b	1fd0c <__ubsan_handle_implicit_conversion@@Base+0x16c>
   1fcc0:	mov	w25, #0x11                  	// #17
   1fcc4:	ldrb	w9, [x23]
   1fcc8:	bfi	x29, x8, #32, #32
   1fccc:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fcd0:	b	1fd0c <__ubsan_handle_implicit_conversion@@Base+0x16c>
   1fcd4:	mov	w25, #0xf                   	// #15
   1fcd8:	ldrb	w9, [x23]
   1fcdc:	bfi	x29, x8, #32, #32
   1fce0:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fce4:	b	1fd0c <__ubsan_handle_implicit_conversion@@Base+0x16c>
   1fce8:	mov	w25, #0x10                  	// #16
   1fcec:	ldrb	w9, [x23]
   1fcf0:	bfi	x29, x8, #32, #32
   1fcf4:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fcf8:	b	1fd0c <__ubsan_handle_implicit_conversion@@Base+0x16c>
   1fcfc:	mov	w25, #0xe                   	// #14
   1fd00:	ldrb	w9, [x23]
   1fd04:	bfi	x29, x8, #32, #32
   1fd08:	cbnz	w9, 1fd2c <__ubsan_handle_implicit_conversion@@Base+0x18c>
   1fd0c:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   1fd10:	cmp	x29, x8
   1fd14:	b.hi	1fefc <__ubsan_handle_implicit_conversion@@Base+0x35c>  // b.pmore
   1fd18:	ldr	x1, [x23, #8]
   1fd1c:	mov	w0, w25
   1fd20:	mov	x2, x24
   1fd24:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   1fd28:	tbnz	w0, #0, 1fefc <__ubsan_handle_implicit_conversion@@Base+0x35c>
   1fd2c:	ldr	x8, [x23, #16]
   1fd30:	ldr	q0, [x23]
   1fd34:	mov	w23, #0x1                   	// #1
   1fd38:	add	x0, sp, #0x240
   1fd3c:	add	x1, sp, #0x220
   1fd40:	add	x2, sp, #0x1f8
   1fd44:	mov	w3, w25
   1fd48:	str	w23, [sp, #504]
   1fd4c:	str	x8, [sp, #560]
   1fd50:	str	q0, [sp, #544]
   1fd54:	str	x24, [sp, #512]
   1fd58:	str	x29, [sp, #520]
   1fd5c:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   1fd60:	movi	v0.2d, #0x0
   1fd64:	str	d0, [sp, #408]
   1fd68:	str	d0, [sp, #448]
   1fd6c:	ldr	q0, [sp, #48]
   1fd70:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1fd74:	add	x8, x8, #0x112
   1fd78:	add	x0, sp, #0x40
   1fd7c:	mov	x1, x21
   1fd80:	str	w23, [sp, #64]
   1fd84:	stp	x24, x29, [sp, #72]
   1fd88:	stp	wzr, w25, [sp, #104]
   1fd8c:	str	wzr, [sp, #384]
   1fd90:	str	wzr, [sp, #392]
   1fd94:	str	xzr, [sp, #400]
   1fd98:	str	wzr, [sp, #432]
   1fd9c:	str	xzr, [sp, #440]
   1fda0:	str	xzr, [sp, #472]
   1fda4:	str	x8, [sp, #112]
   1fda8:	stur	q0, [sp, #88]
   1fdac:	str	wzr, [sp, #480]
   1fdb0:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1fdb4:	add	x1, sp, #0x20
   1fdb8:	stp	x21, x22, [sp, #32]
   1fdbc:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1fdc0:	ldrh	w8, [x21]
   1fdc4:	cbnz	w8, 1ff34 <__ubsan_handle_implicit_conversion@@Base+0x394>
   1fdc8:	ldr	w8, [x0, #320]
   1fdcc:	cmp	w8, #0x8
   1fdd0:	b.eq	1ff1c <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   1fdd4:	ldrh	w9, [x21, #2]
   1fdd8:	add	w11, w8, #0x1
   1fddc:	add	x8, x0, x8, lsl #5
   1fde0:	mov	w12, #0x2                   	// #2
   1fde4:	str	w11, [x0, #320]
   1fde8:	str	w12, [x8, #64]
   1fdec:	ldr	w11, [sp, #668]
   1fdf0:	ldr	x12, [x26]
   1fdf4:	mov	w10, #0x1                   	// #1
   1fdf8:	lsr	w9, w9, #1
   1fdfc:	lsl	w9, w10, w9
   1fe00:	str	w11, [x8, #76]
   1fe04:	stur	x12, [x8, #68]
   1fe08:	stp	x9, xzr, [x8, #80]
   1fe0c:	ldr	w8, [x0, #320]
   1fe10:	cmp	w8, #0x8
   1fe14:	b.eq	1ff1c <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   1fe18:	add	w9, w8, #0x1
   1fe1c:	add	x8, x0, x8, lsl #5
   1fe20:	str	w9, [x0, #320]
   1fe24:	str	wzr, [x8, #64]
   1fe28:	ldr	w9, [sp, #668]
   1fe2c:	ldr	x10, [x26]
   1fe30:	adrp	x21, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   1fe34:	adrp	x22, 28000 <__interceptor_sigaction@@Base+0x5a44>
   1fe38:	add	x21, x21, #0x188
   1fe3c:	add	x22, x22, #0x562
   1fe40:	cmp	w28, #0x0
   1fe44:	csel	x11, x22, x21, ne  // ne = any
   1fe48:	mov	x1, x20
   1fe4c:	str	w9, [x8, #76]
   1fe50:	stur	x10, [x8, #68]
   1fe54:	str	x11, [x8, #80]
   1fe58:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   1fe5c:	add	x1, sp, #0x10
   1fe60:	stp	x20, x19, [sp, #16]
   1fe64:	bl	1cb80 <__sanitizer_get_module_and_offset_for_pc@@Base+0x4a48>
   1fe68:	ldrh	w8, [x20]
   1fe6c:	cbnz	w8, 1ff34 <__ubsan_handle_implicit_conversion@@Base+0x394>
   1fe70:	ldr	w8, [x0, #320]
   1fe74:	cmp	w8, #0x8
   1fe78:	b.eq	1ff1c <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   1fe7c:	ldrh	w9, [x20, #2]
   1fe80:	add	w11, w8, #0x1
   1fe84:	add	x8, x0, x8, lsl #5
   1fe88:	mov	w12, #0x2                   	// #2
   1fe8c:	str	w11, [x0, #320]
   1fe90:	str	w12, [x8, #64]
   1fe94:	ldr	w11, [sp, #668]
   1fe98:	ldr	x12, [x26]
   1fe9c:	mov	w10, #0x1                   	// #1
   1fea0:	lsr	w9, w9, #1
   1fea4:	lsl	w9, w10, w9
   1fea8:	str	w11, [x8, #76]
   1feac:	stur	x12, [x8, #68]
   1feb0:	stp	x9, xzr, [x8, #80]
   1feb4:	ldr	w8, [x0, #320]
   1feb8:	cmp	w8, #0x8
   1febc:	b.eq	1ff1c <__ubsan_handle_implicit_conversion@@Base+0x37c>  // b.none
   1fec0:	add	w9, w8, #0x1
   1fec4:	add	x8, x0, x8, lsl #5
   1fec8:	str	w9, [x0, #320]
   1fecc:	str	wzr, [x8, #64]
   1fed0:	ldr	w9, [sp, #668]
   1fed4:	ldr	x10, [x26]
   1fed8:	cmp	w27, #0x0
   1fedc:	csel	x11, x22, x21, ne  // ne = any
   1fee0:	add	x0, sp, #0x40
   1fee4:	str	w9, [x8, #76]
   1fee8:	stur	x10, [x8, #68]
   1feec:	str	x11, [x8, #80]
   1fef0:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   1fef4:	add	x0, sp, #0x240
   1fef8:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   1fefc:	add	sp, sp, #0x2a0
   1ff00:	ldp	x20, x19, [sp, #80]
   1ff04:	ldp	x22, x21, [sp, #64]
   1ff08:	ldp	x24, x23, [sp, #48]
   1ff0c:	ldp	x26, x25, [sp, #32]
   1ff10:	ldp	x28, x27, [sp, #16]
   1ff14:	ldp	x29, x30, [sp], #96
   1ff18:	ret
   1ff1c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ff20:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ff24:	add	x0, x0, #0x3bb
   1ff28:	add	x2, x2, #0x3fb
   1ff2c:	mov	w1, #0xc0                  	// #192
   1ff30:	b	1ff48 <__ubsan_handle_implicit_conversion@@Base+0x3a8>
   1ff34:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ff38:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   1ff3c:	add	x0, x0, #0xf53
   1ff40:	add	x2, x2, #0xf94
   1ff44:	mov	w1, #0x7c                  	// #124
   1ff48:	mov	x3, xzr
   1ff4c:	mov	x4, xzr
   1ff50:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

000000000001ff54 <__ubsan_handle_implicit_conversion_abort@@Base>:
   1ff54:	sub	sp, sp, #0x30
   1ff58:	stp	x29, x30, [sp, #32]
   1ff5c:	add	x29, sp, #0x20
   1ff60:	ldur	w8, [x29, #-8]
   1ff64:	ldur	w9, [x29, #-5]
   1ff68:	mov	x3, x2
   1ff6c:	mov	x2, x1
   1ff70:	mov	w10, #0x1                   	// #1
   1ff74:	mov	x1, sp
   1ff78:	strb	w10, [sp]
   1ff7c:	stur	w8, [sp, #1]
   1ff80:	str	w9, [sp, #4]
   1ff84:	stp	x30, x29, [sp, #8]
   1ff88:	bl	1fbe0 <__ubsan_handle_implicit_conversion@@Base+0x40>
   1ff8c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000001ff90 <__ubsan_handle_invalid_builtin@@Base>:
   1ff90:	sub	sp, sp, #0x30
   1ff94:	stp	x29, x30, [sp, #32]
   1ff98:	add	x29, sp, #0x20
   1ff9c:	ldur	w8, [x29, #-8]
   1ffa0:	ldur	w9, [x29, #-5]
   1ffa4:	mov	w10, #0x1                   	// #1
   1ffa8:	mov	x1, sp
   1ffac:	strb	w10, [sp]
   1ffb0:	stur	w8, [sp, #1]
   1ffb4:	str	w9, [sp, #4]
   1ffb8:	stp	x30, x29, [sp, #8]
   1ffbc:	bl	1ffcc <__ubsan_handle_invalid_builtin@@Base+0x3c>
   1ffc0:	ldp	x29, x30, [sp, #32]
   1ffc4:	add	sp, sp, #0x30
   1ffc8:	ret
   1ffcc:	stp	x29, x30, [sp, #-48]!
   1ffd0:	stp	x22, x21, [sp, #16]
   1ffd4:	stp	x20, x19, [sp, #32]
   1ffd8:	sub	sp, sp, #0x270
   1ffdc:	mov	x20, x1
   1ffe0:	mov	x19, x0
   1ffe4:	add	x9, x0, #0xc
   1ffe8:	mov	w10, #0xffffffff            	// #-1
   1ffec:	ldaxr	w8, [x9]
   1fff0:	stlxr	w11, w10, [x9]
   1fff4:	cbnz	w11, 1ffec <__ubsan_handle_invalid_builtin@@Base+0x5c>
   1fff8:	ldr	w22, [x19, #8]
   1fffc:	ldrb	w9, [x20]
   20000:	ldr	x21, [x19]
   20004:	bfi	x22, x8, #32, #32
   20008:	cbz	w9, 200d8 <__ubsan_handle_invalid_builtin@@Base+0x148>
   2000c:	ldr	x8, [x20, #16]
   20010:	ldr	q0, [x20]
   20014:	mov	w20, #0x1                   	// #1
   20018:	add	x0, sp, #0x210
   2001c:	add	x1, sp, #0x1f0
   20020:	add	x2, sp, #0x1c8
   20024:	mov	w3, #0xd                   	// #13
   20028:	str	w20, [sp, #456]
   2002c:	str	x8, [sp, #512]
   20030:	str	q0, [sp, #496]
   20034:	stp	x21, x22, [sp, #464]
   20038:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   2003c:	movi	v0.2d, #0x0
   20040:	str	d0, [sp, #360]
   20044:	str	d0, [sp, #400]
   20048:	ldr	q0, [sp]
   2004c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20050:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20054:	add	x9, x9, #0x18b
   20058:	stur	q0, [sp, #40]
   2005c:	ldr	d0, [x8, #2688]
   20060:	str	x9, [sp, #64]
   20064:	add	x9, sp, #0x165
   20068:	ldur	x9, [x9, #255]
   2006c:	str	w20, [sp, #16]
   20070:	stp	x21, x22, [sp, #24]
   20074:	str	wzr, [sp, #344]
   20078:	str	xzr, [sp, #352]
   2007c:	str	wzr, [sp, #384]
   20080:	str	xzr, [sp, #392]
   20084:	str	xzr, [sp, #424]
   20088:	str	wzr, [sp, #432]
   2008c:	str	d0, [sp, #56]
   20090:	ldrb	w10, [x19, #16]
   20094:	stur	x9, [sp, #84]
   20098:	ldr	w9, [sp, #620]
   2009c:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   200a0:	adrp	x11, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   200a4:	add	x8, x8, #0x1c3
   200a8:	add	x11, x11, #0x1bd
   200ac:	cmp	w10, #0x0
   200b0:	csel	x8, x11, x8, eq  // eq = none
   200b4:	add	x0, sp, #0x10
   200b8:	str	w20, [sp, #336]
   200bc:	str	wzr, [sp, #80]
   200c0:	str	w9, [sp, #92]
   200c4:	str	x8, [sp, #96]
   200c8:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   200cc:	add	x0, sp, #0x210
   200d0:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   200d4:	b	200f8 <__ubsan_handle_invalid_builtin@@Base+0x168>
   200d8:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   200dc:	cmp	x22, x8
   200e0:	b.hi	200f8 <__ubsan_handle_invalid_builtin@@Base+0x168>  // b.pmore
   200e4:	ldr	x1, [x20, #8]
   200e8:	mov	w0, #0xd                   	// #13
   200ec:	mov	x2, x21
   200f0:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   200f4:	tbz	w0, #0, 2000c <__ubsan_handle_invalid_builtin@@Base+0x7c>
   200f8:	add	sp, sp, #0x270
   200fc:	ldp	x20, x19, [sp, #32]
   20100:	ldp	x22, x21, [sp, #16]
   20104:	ldp	x29, x30, [sp], #48
   20108:	ret

000000000002010c <__ubsan_handle_invalid_builtin_abort@@Base>:
   2010c:	sub	sp, sp, #0x30
   20110:	stp	x29, x30, [sp, #32]
   20114:	add	x29, sp, #0x20
   20118:	ldur	w8, [x29, #-8]
   2011c:	ldur	w9, [x29, #-5]
   20120:	mov	w10, #0x1                   	// #1
   20124:	mov	x1, sp
   20128:	strb	w10, [sp]
   2012c:	stur	w8, [sp, #1]
   20130:	str	w9, [sp, #4]
   20134:	stp	x30, x29, [sp, #8]
   20138:	bl	1ffcc <__ubsan_handle_invalid_builtin@@Base+0x3c>
   2013c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000020140 <__ubsan_handle_nonnull_return_v1@@Base>:
   20140:	sub	sp, sp, #0x30
   20144:	stp	x29, x30, [sp, #32]
   20148:	add	x29, sp, #0x20
   2014c:	ldur	w8, [x29, #-8]
   20150:	ldur	w9, [x29, #-5]
   20154:	mov	x2, sp
   20158:	mov	w3, #0x1                   	// #1
   2015c:	strb	wzr, [sp]
   20160:	stur	w8, [sp, #1]
   20164:	str	w9, [sp, #4]
   20168:	stp	x30, x29, [sp, #8]
   2016c:	bl	2017c <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   20170:	ldp	x29, x30, [sp, #32]
   20174:	add	sp, sp, #0x30
   20178:	ret
   2017c:	str	x29, [sp, #-64]!
   20180:	stp	x30, x23, [sp, #16]
   20184:	stp	x22, x21, [sp, #32]
   20188:	stp	x20, x19, [sp, #48]
   2018c:	sub	sp, sp, #0x430
   20190:	cbz	x1, 20334 <__ubsan_handle_nonnull_return_v1@@Base+0x1f4>
   20194:	mov	w19, w3
   20198:	mov	x21, x2
   2019c:	mov	x20, x0
   201a0:	add	x9, x1, #0xc
   201a4:	mov	w10, #0xffffffff            	// #-1
   201a8:	ldaxr	w8, [x9]
   201ac:	stlxr	w11, w10, [x9]
   201b0:	cbnz	w11, 201a8 <__ubsan_handle_nonnull_return_v1@@Base+0x68>
   201b4:	ldr	w23, [x1, #8]
   201b8:	ldrb	w9, [x21]
   201bc:	ldr	x22, [x1]
   201c0:	bfi	x23, x8, #32, #32
   201c4:	cbz	w9, 202fc <__ubsan_handle_nonnull_return_v1@@Base+0x1bc>
   201c8:	ldr	x8, [x21, #16]
   201cc:	ldr	q0, [x21]
   201d0:	mov	w21, #0x1                   	// #1
   201d4:	add	x0, sp, #0x3d0
   201d8:	add	x1, sp, #0x3b0
   201dc:	add	x2, sp, #0x388
   201e0:	mov	w3, #0x1c                  	// #28
   201e4:	str	w21, [sp, #904]
   201e8:	str	x8, [sp, #960]
   201ec:	str	q0, [sp, #944]
   201f0:	str	x22, [sp, #912]
   201f4:	str	x23, [sp, #920]
   201f8:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   201fc:	movi	v0.2d, #0x0
   20200:	str	d0, [sp, #808]
   20204:	str	d0, [sp, #848]
   20208:	ldr	q0, [sp, #448]
   2020c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20210:	add	x10, sp, #0xe9
   20214:	str	w21, [sp, #464]
   20218:	stp	x22, x23, [sp, #472]
   2021c:	str	wzr, [sp, #784]
   20220:	str	wzr, [sp, #792]
   20224:	str	xzr, [sp, #800]
   20228:	str	wzr, [sp, #832]
   2022c:	stur	q0, [x10, #255]
   20230:	ldr	d0, [x8, #2696]
   20234:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20238:	add	x9, x9, #0x1fc
   2023c:	add	x0, sp, #0x1d0
   20240:	str	xzr, [sp, #840]
   20244:	str	xzr, [sp, #872]
   20248:	str	x9, [sp, #512]
   2024c:	str	d0, [sp, #504]
   20250:	str	wzr, [sp, #880]
   20254:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20258:	ldr	x8, [x20]
   2025c:	cbz	x8, 202f0 <__ubsan_handle_nonnull_return_v1@@Base+0x1b0>
   20260:	movi	v0.2d, #0x0
   20264:	ldr	x9, [x20, #8]
   20268:	str	d0, [sp, #360]
   2026c:	str	d0, [sp, #400]
   20270:	ldr	q0, [sp]
   20274:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20278:	adrp	x12, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2027c:	tst	w19, #0x1
   20280:	stur	q0, [sp, #40]
   20284:	ldr	d0, [x10, #2704]
   20288:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2028c:	adrp	x11, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20290:	add	x12, x12, #0x26a
   20294:	add	x10, x10, #0x250
   20298:	add	x11, x11, #0x23e
   2029c:	csel	x10, x10, x12, ne  // ne = any
   202a0:	add	x12, sp, #0x325
   202a4:	str	x11, [sp, #64]
   202a8:	ldr	w11, [sp, #1068]
   202ac:	ldur	x12, [x12, #255]
   202b0:	add	x0, sp, #0x10
   202b4:	str	w21, [sp, #16]
   202b8:	str	wzr, [sp, #344]
   202bc:	str	xzr, [sp, #352]
   202c0:	str	wzr, [sp, #384]
   202c4:	str	xzr, [sp, #392]
   202c8:	str	xzr, [sp, #424]
   202cc:	str	wzr, [sp, #432]
   202d0:	str	w21, [sp, #336]
   202d4:	str	wzr, [sp, #80]
   202d8:	stp	x8, x9, [sp, #24]
   202dc:	str	w11, [sp, #92]
   202e0:	stur	x12, [sp, #84]
   202e4:	str	d0, [sp, #56]
   202e8:	str	x10, [sp, #96]
   202ec:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   202f0:	add	x0, sp, #0x3d0
   202f4:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   202f8:	b	2031c <__ubsan_handle_nonnull_return_v1@@Base+0x1dc>
   202fc:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   20300:	cmp	x23, x8
   20304:	b.hi	2031c <__ubsan_handle_nonnull_return_v1@@Base+0x1dc>  // b.pmore
   20308:	ldr	x1, [x21, #8]
   2030c:	mov	w0, #0x1c                  	// #28
   20310:	mov	x2, x22
   20314:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   20318:	tbz	w0, #0, 201c8 <__ubsan_handle_nonnull_return_v1@@Base+0x88>
   2031c:	add	sp, sp, #0x430
   20320:	ldp	x20, x19, [sp, #48]
   20324:	ldp	x22, x21, [sp, #32]
   20328:	ldp	x30, x23, [sp, #16]
   2032c:	ldr	x29, [sp], #64
   20330:	ret
   20334:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20338:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2033c:	add	x0, x0, #0xc2f
   20340:	add	x2, x2, #0x1c9
   20344:	mov	w1, #0x25c                 	// #604
   20348:	mov	x3, xzr
   2034c:	mov	x4, xzr
   20350:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000020354 <__ubsan_handle_nonnull_return_v1_abort@@Base>:
   20354:	sub	sp, sp, #0x30
   20358:	stp	x29, x30, [sp, #32]
   2035c:	add	x29, sp, #0x20
   20360:	ldur	w8, [x29, #-8]
   20364:	ldur	w9, [x29, #-5]
   20368:	mov	w10, #0x1                   	// #1
   2036c:	mov	x2, sp
   20370:	mov	w3, #0x1                   	// #1
   20374:	strb	w10, [sp]
   20378:	stur	w8, [sp, #1]
   2037c:	str	w9, [sp, #4]
   20380:	stp	x30, x29, [sp, #8]
   20384:	bl	2017c <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   20388:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

000000000002038c <__ubsan_handle_nullability_return_v1@@Base>:
   2038c:	sub	sp, sp, #0x30
   20390:	stp	x29, x30, [sp, #32]
   20394:	add	x29, sp, #0x20
   20398:	ldur	w8, [x29, #-8]
   2039c:	ldur	w9, [x29, #-5]
   203a0:	mov	x2, sp
   203a4:	mov	w3, wzr
   203a8:	strb	wzr, [sp]
   203ac:	stur	w8, [sp, #1]
   203b0:	str	w9, [sp, #4]
   203b4:	stp	x30, x29, [sp, #8]
   203b8:	bl	2017c <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   203bc:	ldp	x29, x30, [sp, #32]
   203c0:	add	sp, sp, #0x30
   203c4:	ret

00000000000203c8 <__ubsan_handle_nullability_return_v1_abort@@Base>:
   203c8:	sub	sp, sp, #0x30
   203cc:	stp	x29, x30, [sp, #32]
   203d0:	add	x29, sp, #0x20
   203d4:	ldur	w8, [x29, #-8]
   203d8:	ldur	w9, [x29, #-5]
   203dc:	mov	w10, #0x1                   	// #1
   203e0:	mov	x2, sp
   203e4:	mov	w3, wzr
   203e8:	strb	w10, [sp]
   203ec:	stur	w8, [sp, #1]
   203f0:	str	w9, [sp, #4]
   203f4:	stp	x30, x29, [sp, #8]
   203f8:	bl	2017c <__ubsan_handle_nonnull_return_v1@@Base+0x3c>
   203fc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000020400 <__ubsan_handle_nonnull_arg@@Base>:
   20400:	sub	sp, sp, #0x30
   20404:	stp	x29, x30, [sp, #32]
   20408:	add	x29, sp, #0x20
   2040c:	ldur	w8, [x29, #-8]
   20410:	ldur	w9, [x29, #-5]
   20414:	mov	x1, sp
   20418:	mov	w2, #0x1                   	// #1
   2041c:	strb	wzr, [sp]
   20420:	stur	w8, [sp, #1]
   20424:	str	w9, [sp, #4]
   20428:	stp	x30, x29, [sp, #8]
   2042c:	bl	2043c <__ubsan_handle_nonnull_arg@@Base+0x3c>
   20430:	ldp	x29, x30, [sp, #32]
   20434:	add	sp, sp, #0x30
   20438:	ret
   2043c:	stp	x29, x30, [sp, #-64]!
   20440:	stp	x24, x23, [sp, #16]
   20444:	stp	x22, x21, [sp, #32]
   20448:	stp	x20, x19, [sp, #48]
   2044c:	sub	sp, sp, #0x280
   20450:	mov	w19, w2
   20454:	mov	x21, x1
   20458:	mov	x20, x0
   2045c:	add	x23, sp, #0x274
   20460:	add	x9, x0, #0xc
   20464:	mov	w10, #0xffffffff            	// #-1
   20468:	ldaxr	w8, [x9]
   2046c:	stlxr	w11, w10, [x9]
   20470:	cbnz	w11, 20468 <__ubsan_handle_nonnull_arg@@Base+0x68>
   20474:	ldr	w24, [x20, #8]
   20478:	ldrb	w9, [x21]
   2047c:	ldr	x22, [x20]
   20480:	bfi	x24, x8, #32, #32
   20484:	cbz	w9, 205d0 <__ubsan_handle_nonnull_arg@@Base+0x1d0>
   20488:	ldr	x8, [x21, #16]
   2048c:	ldr	q0, [x21]
   20490:	mov	w21, #0x1                   	// #1
   20494:	add	x0, sp, #0x220
   20498:	add	x1, sp, #0x200
   2049c:	add	x2, sp, #0x1d8
   204a0:	mov	w3, #0x1d                  	// #29
   204a4:	str	w21, [sp, #472]
   204a8:	str	x8, [sp, #528]
   204ac:	str	q0, [sp, #512]
   204b0:	stp	x22, x24, [sp, #480]
   204b4:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   204b8:	movi	v0.2d, #0x0
   204bc:	str	d0, [sp, #376]
   204c0:	str	d0, [sp, #416]
   204c4:	ldr	q0, [sp, #16]
   204c8:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   204cc:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   204d0:	add	x9, x9, #0x28a
   204d4:	stur	q0, [sp, #56]
   204d8:	ldr	d0, [x8, #2712]
   204dc:	str	w21, [sp, #32]
   204e0:	stp	x22, x24, [sp, #40]
   204e4:	str	wzr, [sp, #360]
   204e8:	str	xzr, [sp, #368]
   204ec:	str	wzr, [sp, #400]
   204f0:	str	xzr, [sp, #408]
   204f4:	str	xzr, [sp, #440]
   204f8:	str	wzr, [sp, #448]
   204fc:	str	x9, [sp, #80]
   20500:	str	d0, [sp, #72]
   20504:	ldr	w8, [sp, #636]
   20508:	ldr	x11, [x23]
   2050c:	ldrsw	x9, [x20, #32]
   20510:	mov	w10, #0x2                   	// #2
   20514:	add	x0, sp, #0x20
   20518:	str	w10, [sp, #96]
   2051c:	str	w8, [sp, #108]
   20520:	str	w21, [sp, #352]
   20524:	stur	x11, [sp, #100]
   20528:	stp	x9, xzr, [sp, #112]
   2052c:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20530:	ldr	x8, [x20, #16]
   20534:	cbz	x8, 205c4 <__ubsan_handle_nonnull_arg@@Base+0x1c4>
   20538:	movi	v0.2d, #0x0
   2053c:	ldr	x9, [x20, #24]
   20540:	str	d0, [sp, #376]
   20544:	str	d0, [sp, #416]
   20548:	ldr	q0, [sp]
   2054c:	adrp	x11, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20550:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20554:	add	x11, x11, #0x23e
   20558:	stur	q0, [sp, #56]
   2055c:	ldr	d0, [x10, #2720]
   20560:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20564:	str	x11, [sp, #80]
   20568:	adrp	x11, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2056c:	tst	w19, #0x1
   20570:	add	x10, x10, #0x2d1
   20574:	add	x11, x11, #0x258
   20578:	csel	x10, x11, x10, ne  // ne = any
   2057c:	ldr	w11, [sp, #636]
   20580:	ldr	x12, [x23]
   20584:	add	x0, sp, #0x20
   20588:	str	w21, [sp, #32]
   2058c:	str	w21, [sp, #352]
   20590:	str	wzr, [sp, #360]
   20594:	str	xzr, [sp, #368]
   20598:	str	wzr, [sp, #400]
   2059c:	str	xzr, [sp, #408]
   205a0:	str	xzr, [sp, #440]
   205a4:	str	wzr, [sp, #448]
   205a8:	str	wzr, [sp, #96]
   205ac:	stp	x8, x9, [sp, #40]
   205b0:	str	w11, [sp, #108]
   205b4:	stur	x12, [sp, #100]
   205b8:	str	d0, [sp, #72]
   205bc:	str	x10, [sp, #112]
   205c0:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   205c4:	add	x0, sp, #0x220
   205c8:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   205cc:	b	205f0 <__ubsan_handle_nonnull_arg@@Base+0x1f0>
   205d0:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   205d4:	cmp	x24, x8
   205d8:	b.hi	205f0 <__ubsan_handle_nonnull_arg@@Base+0x1f0>  // b.pmore
   205dc:	ldr	x1, [x21, #8]
   205e0:	mov	w0, #0x1d                  	// #29
   205e4:	mov	x2, x22
   205e8:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   205ec:	tbz	w0, #0, 20488 <__ubsan_handle_nonnull_arg@@Base+0x88>
   205f0:	add	sp, sp, #0x280
   205f4:	ldp	x20, x19, [sp, #48]
   205f8:	ldp	x22, x21, [sp, #32]
   205fc:	ldp	x24, x23, [sp, #16]
   20600:	ldp	x29, x30, [sp], #64
   20604:	ret

0000000000020608 <__ubsan_handle_nonnull_arg_abort@@Base>:
   20608:	sub	sp, sp, #0x30
   2060c:	stp	x29, x30, [sp, #32]
   20610:	add	x29, sp, #0x20
   20614:	ldur	w8, [x29, #-8]
   20618:	ldur	w9, [x29, #-5]
   2061c:	mov	w10, #0x1                   	// #1
   20620:	mov	x1, sp
   20624:	mov	w2, #0x1                   	// #1
   20628:	strb	w10, [sp]
   2062c:	stur	w8, [sp, #1]
   20630:	str	w9, [sp, #4]
   20634:	stp	x30, x29, [sp, #8]
   20638:	bl	2043c <__ubsan_handle_nonnull_arg@@Base+0x3c>
   2063c:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000020640 <__ubsan_handle_nullability_arg@@Base>:
   20640:	sub	sp, sp, #0x30
   20644:	stp	x29, x30, [sp, #32]
   20648:	add	x29, sp, #0x20
   2064c:	ldur	w8, [x29, #-8]
   20650:	ldur	w9, [x29, #-5]
   20654:	mov	x1, sp
   20658:	mov	w2, wzr
   2065c:	strb	wzr, [sp]
   20660:	stur	w8, [sp, #1]
   20664:	str	w9, [sp, #4]
   20668:	stp	x30, x29, [sp, #8]
   2066c:	bl	2043c <__ubsan_handle_nonnull_arg@@Base+0x3c>
   20670:	ldp	x29, x30, [sp, #32]
   20674:	add	sp, sp, #0x30
   20678:	ret

000000000002067c <__ubsan_handle_nullability_arg_abort@@Base>:
   2067c:	sub	sp, sp, #0x30
   20680:	stp	x29, x30, [sp, #32]
   20684:	add	x29, sp, #0x20
   20688:	ldur	w8, [x29, #-8]
   2068c:	ldur	w9, [x29, #-5]
   20690:	mov	w10, #0x1                   	// #1
   20694:	mov	x1, sp
   20698:	mov	w2, wzr
   2069c:	strb	w10, [sp]
   206a0:	stur	w8, [sp, #1]
   206a4:	str	w9, [sp, #4]
   206a8:	stp	x30, x29, [sp, #8]
   206ac:	bl	2043c <__ubsan_handle_nonnull_arg@@Base+0x3c>
   206b0:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

00000000000206b4 <__ubsan_handle_pointer_overflow@@Base>:
   206b4:	sub	sp, sp, #0x30
   206b8:	stp	x29, x30, [sp, #32]
   206bc:	add	x29, sp, #0x20
   206c0:	ldur	w8, [x29, #-8]
   206c4:	ldur	w9, [x29, #-5]
   206c8:	mov	x3, sp
   206cc:	strb	wzr, [sp]
   206d0:	stur	w8, [sp, #1]
   206d4:	str	w9, [sp, #4]
   206d8:	stp	x30, x29, [sp, #8]
   206dc:	bl	206ec <__ubsan_handle_pointer_overflow@@Base+0x38>
   206e0:	ldp	x29, x30, [sp, #32]
   206e4:	add	sp, sp, #0x30
   206e8:	ret
   206ec:	stp	x29, x30, [sp, #-80]!
   206f0:	stp	x26, x25, [sp, #16]
   206f4:	stp	x24, x23, [sp, #32]
   206f8:	stp	x22, x21, [sp, #48]
   206fc:	stp	x20, x19, [sp, #64]
   20700:	sub	sp, sp, #0x470
   20704:	mov	x23, x3
   20708:	mov	x19, x2
   2070c:	mov	x20, x1
   20710:	add	x25, sp, #0x464
   20714:	add	x24, sp, #0x50
   20718:	add	x9, x0, #0xc
   2071c:	mov	w10, #0xffffffff            	// #-1
   20720:	ldaxr	w8, [x9]
   20724:	stlxr	w11, w10, [x9]
   20728:	cbnz	w11, 20720 <__ubsan_handle_pointer_overflow@@Base+0x6c>
   2072c:	ldr	x22, [x0]
   20730:	ldr	w26, [x0, #8]
   20734:	orr	x9, x19, x20
   20738:	cbz	x9, 20758 <__ubsan_handle_pointer_overflow@@Base+0xa4>
   2073c:	cbnz	x20, 2076c <__ubsan_handle_pointer_overflow@@Base+0xb8>
   20740:	cbz	x19, 2076c <__ubsan_handle_pointer_overflow@@Base+0xb8>
   20744:	mov	w21, #0x3                   	// #3
   20748:	ldrb	w9, [x23]
   2074c:	bfi	x26, x8, #32, #32
   20750:	cbnz	w9, 207a8 <__ubsan_handle_pointer_overflow@@Base+0xf4>
   20754:	b	20788 <__ubsan_handle_pointer_overflow@@Base+0xd4>
   20758:	mov	w21, #0x2                   	// #2
   2075c:	ldrb	w9, [x23]
   20760:	bfi	x26, x8, #32, #32
   20764:	cbnz	w9, 207a8 <__ubsan_handle_pointer_overflow@@Base+0xf4>
   20768:	b	20788 <__ubsan_handle_pointer_overflow@@Base+0xd4>
   2076c:	cmp	x19, #0x0
   20770:	ccmp	x20, #0x0, #0x4, eq  // eq = none
   20774:	mov	w9, #0x4                   	// #4
   20778:	cinc	w21, w9, eq  // eq = none
   2077c:	ldrb	w9, [x23]
   20780:	bfi	x26, x8, #32, #32
   20784:	cbnz	w9, 207a8 <__ubsan_handle_pointer_overflow@@Base+0xf4>
   20788:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   2078c:	cmp	x26, x8
   20790:	b.hi	20a34 <__ubsan_handle_pointer_overflow@@Base+0x380>  // b.pmore
   20794:	ldr	x1, [x23, #8]
   20798:	mov	w0, w21
   2079c:	mov	x2, x22
   207a0:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   207a4:	tbnz	w0, #0, 20a34 <__ubsan_handle_pointer_overflow@@Base+0x380>
   207a8:	ldr	x8, [x23, #16]
   207ac:	ldr	q0, [x23]
   207b0:	mov	w23, #0x1                   	// #1
   207b4:	add	x0, sp, #0x410
   207b8:	add	x1, sp, #0x3f0
   207bc:	add	x2, sp, #0x3c8
   207c0:	mov	w3, w21
   207c4:	str	w23, [sp, #968]
   207c8:	str	x8, [sp, #1024]
   207cc:	str	q0, [sp, #1008]
   207d0:	str	x22, [sp, #976]
   207d4:	str	x26, [sp, #984]
   207d8:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   207dc:	cmp	w21, #0x4
   207e0:	b.eq	20858 <__ubsan_handle_pointer_overflow@@Base+0x1a4>  // b.none
   207e4:	cmp	w21, #0x3
   207e8:	b.eq	208c8 <__ubsan_handle_pointer_overflow@@Base+0x214>  // b.none
   207ec:	cmp	w21, #0x2
   207f0:	b.ne	2093c <__ubsan_handle_pointer_overflow@@Base+0x288>  // b.any
   207f4:	movi	v0.2d, #0x0
   207f8:	str	d0, [sp, #872]
   207fc:	str	d0, [sp, #912]
   20800:	ldr	q0, [sp, #512]
   20804:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20808:	add	x11, sp, #0x129
   2080c:	str	x22, [sp, #536]
   20810:	str	x26, [sp, #544]
   20814:	str	wzr, [sp, #848]
   20818:	str	wzr, [sp, #856]
   2081c:	str	xzr, [sp, #864]
   20820:	str	wzr, [sp, #896]
   20824:	str	xzr, [sp, #904]
   20828:	stur	q0, [x11, #255]
   2082c:	ldr	d0, [x9, #2744]
   20830:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20834:	mov	w8, #0x1                   	// #1
   20838:	add	x10, x10, #0x2ea
   2083c:	str	xzr, [sp, #936]
   20840:	str	w8, [sp, #528]
   20844:	str	x10, [sp, #576]
   20848:	str	d0, [sp, #568]
   2084c:	str	wzr, [sp, #944]
   20850:	add	x0, sp, #0x210
   20854:	b	20a28 <__ubsan_handle_pointer_overflow@@Base+0x374>
   20858:	movi	v0.2d, #0x0
   2085c:	str	d0, [sp, #424]
   20860:	str	d0, [sp, #464]
   20864:	ldr	q0, [sp, #48]
   20868:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   2086c:	ldr	x11, [x25]
   20870:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20874:	stur	q0, [sp, #104]
   20878:	ldr	d0, [x8, #2728]
   2087c:	ldr	w8, [sp, #1132]
   20880:	add	x9, x9, #0x33b
   20884:	mov	w10, #0x5                   	// #5
   20888:	str	w23, [sp, #80]
   2088c:	stp	x22, x26, [sp, #88]
   20890:	str	wzr, [sp, #408]
   20894:	str	xzr, [sp, #416]
   20898:	str	wzr, [sp, #448]
   2089c:	str	xzr, [sp, #456]
   208a0:	str	xzr, [sp, #488]
   208a4:	str	wzr, [sp, #496]
   208a8:	str	w23, [sp, #400]
   208ac:	str	x9, [sp, #128]
   208b0:	str	w10, [sp, #144]
   208b4:	str	w8, [sp, #156]
   208b8:	str	d0, [sp, #120]
   208bc:	stur	x11, [x24, #68]
   208c0:	str	x20, [sp, #160]
   208c4:	b	20a24 <__ubsan_handle_pointer_overflow@@Base+0x370>
   208c8:	movi	v0.2d, #0x0
   208cc:	str	d0, [sp, #424]
   208d0:	str	d0, [sp, #464]
   208d4:	ldr	q0, [sp, #64]
   208d8:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   208dc:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   208e0:	add	x10, x10, #0x30f
   208e4:	stur	q0, [sp, #104]
   208e8:	ldr	d0, [x9, #2736]
   208ec:	ldr	x11, [x25]
   208f0:	str	x10, [sp, #128]
   208f4:	ldr	w10, [sp, #1132]
   208f8:	mov	w8, #0x1                   	// #1
   208fc:	mov	w9, #0x2                   	// #2
   20900:	stp	x22, x26, [sp, #88]
   20904:	str	wzr, [sp, #408]
   20908:	str	xzr, [sp, #416]
   2090c:	str	wzr, [sp, #448]
   20910:	str	xzr, [sp, #456]
   20914:	str	xzr, [sp, #488]
   20918:	str	wzr, [sp, #496]
   2091c:	str	w8, [sp, #80]
   20920:	str	w8, [sp, #400]
   20924:	str	w9, [sp, #144]
   20928:	str	w10, [sp, #156]
   2092c:	str	d0, [sp, #120]
   20930:	stur	x11, [x24, #68]
   20934:	stp	x19, xzr, [sp, #160]
   20938:	b	20a24 <__ubsan_handle_pointer_overflow@@Base+0x370>
   2093c:	lsr	x8, x20, #63
   20940:	lsr	x9, x19, #63
   20944:	cmp	w8, w9
   20948:	b.ne	2097c <__ubsan_handle_pointer_overflow@@Base+0x2c8>  // b.any
   2094c:	mov	w8, #0x1                   	// #1
   20950:	cmp	x20, x19
   20954:	b.ls	209a4 <__ubsan_handle_pointer_overflow@@Base+0x2f0>  // b.plast
   20958:	movi	v0.2d, #0x0
   2095c:	str	d0, [sp, #424]
   20960:	str	d0, [sp, #464]
   20964:	ldr	q0, [sp, #32]
   20968:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2096c:	stp	x22, x26, [sp, #88]
   20970:	stp	wzr, w21, [sp, #120]
   20974:	add	x9, x9, #0x381
   20978:	b	209c4 <__ubsan_handle_pointer_overflow@@Base+0x310>
   2097c:	movi	v0.2d, #0x0
   20980:	str	d0, [sp, #424]
   20984:	str	d0, [sp, #464]
   20988:	ldr	q0, [sp]
   2098c:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20990:	mov	w8, #0x1                   	// #1
   20994:	add	x9, x9, #0x3ec
   20998:	stp	x22, x26, [sp, #88]
   2099c:	stp	wzr, w21, [sp, #120]
   209a0:	b	209c4 <__ubsan_handle_pointer_overflow@@Base+0x310>
   209a4:	movi	v0.2d, #0x0
   209a8:	str	d0, [sp, #424]
   209ac:	str	d0, [sp, #464]
   209b0:	ldr	q0, [sp, #16]
   209b4:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   209b8:	stp	x22, x26, [sp, #88]
   209bc:	stp	wzr, w21, [sp, #120]
   209c0:	add	x9, x9, #0x3b4
   209c4:	str	w8, [sp, #80]
   209c8:	ldr	w8, [sp, #1132]
   209cc:	ldr	x11, [x25]
   209d0:	str	x9, [sp, #128]
   209d4:	ldr	w9, [sp, #1132]
   209d8:	ldr	x12, [x25]
   209dc:	mov	w10, #0x5                   	// #5
   209e0:	str	w8, [sp, #156]
   209e4:	mov	w8, #0x2                   	// #2
   209e8:	str	xzr, [sp, #416]
   209ec:	str	wzr, [sp, #448]
   209f0:	str	xzr, [sp, #456]
   209f4:	str	xzr, [sp, #488]
   209f8:	str	wzr, [sp, #496]
   209fc:	str	wzr, [sp, #408]
   20a00:	str	w10, [sp, #144]
   20a04:	stur	q0, [sp, #104]
   20a08:	stur	x11, [x24, #68]
   20a0c:	str	x20, [sp, #160]
   20a10:	str	w8, [sp, #400]
   20a14:	str	w10, [sp, #176]
   20a18:	str	w9, [sp, #188]
   20a1c:	stur	x12, [x24, #100]
   20a20:	str	x19, [sp, #192]
   20a24:	add	x0, sp, #0x50
   20a28:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20a2c:	add	x0, sp, #0x410
   20a30:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   20a34:	add	sp, sp, #0x470
   20a38:	ldp	x20, x19, [sp, #64]
   20a3c:	ldp	x22, x21, [sp, #48]
   20a40:	ldp	x24, x23, [sp, #32]
   20a44:	ldp	x26, x25, [sp, #16]
   20a48:	ldp	x29, x30, [sp], #80
   20a4c:	ret

0000000000020a50 <__ubsan_handle_pointer_overflow_abort@@Base>:
   20a50:	sub	sp, sp, #0x30
   20a54:	stp	x29, x30, [sp, #32]
   20a58:	add	x29, sp, #0x20
   20a5c:	ldur	w8, [x29, #-8]
   20a60:	ldur	w9, [x29, #-5]
   20a64:	mov	w10, #0x1                   	// #1
   20a68:	mov	x3, sp
   20a6c:	strb	w10, [sp]
   20a70:	stur	w8, [sp, #1]
   20a74:	str	w9, [sp, #4]
   20a78:	stp	x30, x29, [sp, #8]
   20a7c:	bl	206ec <__ubsan_handle_pointer_overflow@@Base+0x38>
   20a80:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000020a84 <__ubsan_handle_cfi_check_fail@@Base>:
   20a84:	sub	sp, sp, #0x50
   20a88:	stp	x29, x30, [sp, #64]
   20a8c:	add	x29, sp, #0x40
   20a90:	ldrb	w8, [x0]
   20a94:	and	w8, w8, #0xfe
   20a98:	cmp	w8, #0x4
   20a9c:	b.ne	20acc <__ubsan_handle_cfi_check_fail@@Base+0x48>  // b.any
   20aa0:	ldur	w8, [x29, #-8]
   20aa4:	ldur	w9, [x29, #-5]
   20aa8:	add	x2, sp, #0x20
   20aac:	strb	wzr, [sp, #32]
   20ab0:	stur	w8, [sp, #33]
   20ab4:	str	w9, [sp, #36]
   20ab8:	stp	x30, x29, [sp, #40]
   20abc:	bl	20b00 <__ubsan_handle_cfi_check_fail@@Base+0x7c>
   20ac0:	ldp	x29, x30, [sp, #64]
   20ac4:	add	sp, sp, #0x50
   20ac8:	ret
   20acc:	ldur	w8, [x29, #-8]
   20ad0:	ldur	w9, [x29, #-5]
   20ad4:	cmp	x2, #0x0
   20ad8:	cset	w2, ne  // ne = any
   20adc:	add	x3, sp, #0x8
   20ae0:	strb	wzr, [sp, #8]
   20ae4:	stur	w8, [sp, #9]
   20ae8:	str	w9, [sp, #12]
   20aec:	stp	x30, x29, [sp, #16]
   20af0:	bl	4890 <__ubsan_handle_cfi_bad_type@plt>
   20af4:	ldp	x29, x30, [sp, #64]
   20af8:	add	sp, sp, #0x50
   20afc:	ret
   20b00:	str	d8, [sp, #-80]!
   20b04:	str	x29, [sp, #8]
   20b08:	stp	x30, x25, [sp, #16]
   20b0c:	stp	x24, x23, [sp, #32]
   20b10:	stp	x22, x21, [sp, #48]
   20b14:	stp	x20, x19, [sp, #64]
   20b18:	sub	sp, sp, #0x280
   20b1c:	ldrb	w8, [x0]
   20b20:	and	w8, w8, #0xfe
   20b24:	cmp	w8, #0x4
   20b28:	b.ne	20dfc <__ubsan_handle_cfi_check_fail@@Base+0x378>  // b.any
   20b2c:	mov	x20, x2
   20b30:	mov	x22, x0
   20b34:	mov	x21, x1
   20b38:	add	x9, x0, #0x14
   20b3c:	mov	w10, #0xffffffff            	// #-1
   20b40:	ldaxr	w8, [x9]
   20b44:	stlxr	w11, w10, [x9]
   20b48:	cbnz	w11, 20b40 <__ubsan_handle_cfi_check_fail@@Base+0xbc>
   20b4c:	ldr	w23, [x22, #16]
   20b50:	ldrb	w9, [x20]
   20b54:	ldr	x19, [x22, #8]
   20b58:	bfi	x23, x8, #32, #32
   20b5c:	cbz	w9, 20dbc <__ubsan_handle_cfi_check_fail@@Base+0x338>
   20b60:	ldr	x8, [x20, #16]
   20b64:	ldr	q0, [x20]
   20b68:	mov	w24, #0x1                   	// #1
   20b6c:	add	x0, sp, #0x220
   20b70:	add	x1, sp, #0x200
   20b74:	add	x2, sp, #0x1d8
   20b78:	mov	w3, #0x1f                  	// #31
   20b7c:	str	w24, [sp, #472]
   20b80:	str	x8, [sp, #528]
   20b84:	str	q0, [sp, #512]
   20b88:	stp	x19, x23, [sp, #480]
   20b8c:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   20b90:	movi	v0.2d, #0x0
   20b94:	ldrb	w25, [x22]
   20b98:	str	d0, [sp, #376]
   20b9c:	str	d0, [sp, #416]
   20ba0:	ldr	q0, [sp, #16]
   20ba4:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20ba8:	str	w24, [sp, #32]
   20bac:	stp	x19, x23, [sp, #40]
   20bb0:	stur	q0, [sp, #56]
   20bb4:	ldr	d0, [x8, #2752]
   20bb8:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20bbc:	add	x8, x8, #0x466
   20bc0:	str	wzr, [sp, #352]
   20bc4:	str	wzr, [sp, #360]
   20bc8:	str	xzr, [sp, #368]
   20bcc:	str	wzr, [sp, #400]
   20bd0:	str	xzr, [sp, #408]
   20bd4:	str	xzr, [sp, #440]
   20bd8:	str	x8, [sp, #80]
   20bdc:	str	d0, [sp, #72]
   20be0:	str	wzr, [sp, #448]
   20be4:	ldr	x1, [x22, #24]
   20be8:	add	x0, sp, #0x20
   20bec:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   20bf0:	ldr	w8, [x0, #320]
   20bf4:	cmp	w8, #0x8
   20bf8:	b.eq	20e00 <__ubsan_handle_cfi_check_fail@@Base+0x37c>  // b.none
   20bfc:	add	w11, w8, #0x1
   20c00:	add	x8, x0, x8, lsl #5
   20c04:	str	w11, [x0, #320]
   20c08:	str	wzr, [x8, #64]
   20c0c:	ldr	w11, [sp, #632]
   20c10:	ldr	x12, [sp, #624]
   20c14:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20c18:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20c1c:	add	x9, x9, #0x44f
   20c20:	add	x10, x10, #0x423
   20c24:	cmp	w25, #0x5
   20c28:	csel	x9, x10, x9, eq  // eq = none
   20c2c:	add	x0, sp, #0x20
   20c30:	str	w11, [x8, #76]
   20c34:	stur	x12, [x8, #68]
   20c38:	str	x9, [x8, #80]
   20c3c:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20c40:	mov	x0, x21
   20c44:	bl	1cafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c4>
   20c48:	mov	w9, #0x3                   	// #3
   20c4c:	ldr	x8, [x0, #40]
   20c50:	str	w9, [sp, #32]
   20c54:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20c58:	adrp	x10, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20c5c:	add	x9, x9, #0x4aa
   20c60:	ldr	d8, [x10, #2760]
   20c64:	ldr	x10, [sp, #624]
   20c68:	str	x9, [sp, #80]
   20c6c:	ldr	w9, [sp, #632]
   20c70:	adrp	x25, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20c74:	add	x25, x25, #0x4a0
   20c78:	cmp	x8, #0x0
   20c7c:	mov	x21, x0
   20c80:	movi	v0.2d, #0x0
   20c84:	str	x0, [sp, #64]
   20c88:	csel	x8, x25, x8, eq  // eq = none
   20c8c:	add	x0, sp, #0x20
   20c90:	str	xzr, [sp, #40]
   20c94:	str	w24, [sp, #352]
   20c98:	str	wzr, [sp, #360]
   20c9c:	str	xzr, [sp, #368]
   20ca0:	str	wzr, [sp, #400]
   20ca4:	str	xzr, [sp, #408]
   20ca8:	str	xzr, [sp, #440]
   20cac:	str	wzr, [sp, #448]
   20cb0:	str	wzr, [sp, #96]
   20cb4:	str	d0, [sp, #48]
   20cb8:	str	d0, [sp, #376]
   20cbc:	str	d0, [sp, #416]
   20cc0:	str	w9, [sp, #108]
   20cc4:	str	d8, [sp, #72]
   20cc8:	stur	x10, [sp, #100]
   20ccc:	str	x8, [sp, #112]
   20cd0:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20cd4:	ldr	x8, [x21, #16]
   20cd8:	cmp	x8, #0x0
   20cdc:	csel	x22, x25, x8, eq  // eq = none
   20ce0:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   20ce4:	ldr	x1, [x20, #8]
   20ce8:	add	x2, sp, #0x20
   20cec:	add	x3, sp, #0x270
   20cf0:	str	xzr, [sp, #32]
   20cf4:	bl	19484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   20cf8:	ldr	x8, [sp, #32]
   20cfc:	tst	w0, #0x1
   20d00:	mov	x1, x22
   20d04:	csel	x8, x8, xzr, ne  // ne = any
   20d08:	cmp	x8, #0x0
   20d0c:	csel	x20, x25, x8, eq  // eq = none
   20d10:	mov	x0, x20
   20d14:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   20d18:	cbz	w0, 20da4 <__ubsan_handle_cfi_check_fail@@Base+0x320>
   20d1c:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   20d20:	mov	w8, #0x1                   	// #1
   20d24:	add	x9, x9, #0x4ba
   20d28:	mov	w10, #0x2                   	// #2
   20d2c:	ldr	q0, [sp]
   20d30:	str	w8, [sp, #32]
   20d34:	ldr	x8, [sp, #624]
   20d38:	ldr	x11, [sp, #624]
   20d3c:	str	x9, [sp, #80]
   20d40:	str	w10, [sp, #352]
   20d44:	ldr	w9, [sp, #632]
   20d48:	ldr	w10, [sp, #632]
   20d4c:	movi	v1.2d, #0x0
   20d50:	add	x0, sp, #0x20
   20d54:	stp	x19, x23, [sp, #40]
   20d58:	str	d8, [sp, #72]
   20d5c:	str	wzr, [sp, #360]
   20d60:	str	xzr, [sp, #368]
   20d64:	str	wzr, [sp, #400]
   20d68:	str	xzr, [sp, #408]
   20d6c:	str	xzr, [sp, #440]
   20d70:	str	wzr, [sp, #448]
   20d74:	str	wzr, [sp, #96]
   20d78:	str	x20, [sp, #112]
   20d7c:	str	wzr, [sp, #128]
   20d80:	str	d1, [sp, #376]
   20d84:	str	d1, [sp, #416]
   20d88:	stur	q0, [sp, #56]
   20d8c:	str	w9, [sp, #108]
   20d90:	stur	x8, [sp, #100]
   20d94:	str	w10, [sp, #140]
   20d98:	stur	x11, [sp, #132]
   20d9c:	str	x22, [sp, #144]
   20da0:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   20da4:	cbz	x21, 20db0 <__ubsan_handle_cfi_check_fail@@Base+0x32c>
   20da8:	mov	x0, x21
   20dac:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   20db0:	add	x0, sp, #0x220
   20db4:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   20db8:	b	20ddc <__ubsan_handle_cfi_check_fail@@Base+0x358>
   20dbc:	mov	x8, #0xfffffffeffffffff    	// #-4294967297
   20dc0:	cmp	x23, x8
   20dc4:	b.hi	20ddc <__ubsan_handle_cfi_check_fail@@Base+0x358>  // b.pmore
   20dc8:	ldr	x1, [x20, #8]
   20dcc:	mov	w0, #0x1f                  	// #31
   20dd0:	mov	x2, x19
   20dd4:	bl	1d848 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5710>
   20dd8:	tbz	w0, #0, 20b60 <__ubsan_handle_cfi_check_fail@@Base+0xdc>
   20ddc:	add	sp, sp, #0x280
   20de0:	ldp	x20, x19, [sp, #64]
   20de4:	ldp	x22, x21, [sp, #48]
   20de8:	ldp	x24, x23, [sp, #32]
   20dec:	ldp	x30, x25, [sp, #16]
   20df0:	ldr	x29, [sp, #8]
   20df4:	ldr	d8, [sp], #80
   20df8:	ret
   20dfc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   20e00:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20e04:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20e08:	add	x0, x0, #0x3bb
   20e0c:	add	x2, x2, #0x3fb
   20e10:	mov	w1, #0xc0                  	// #192
   20e14:	mov	x3, xzr
   20e18:	mov	x4, xzr
   20e1c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000020e20 <__ubsan_handle_cfi_check_fail_abort@@Base>:
   20e20:	sub	sp, sp, #0x50
   20e24:	stp	x29, x30, [sp, #64]
   20e28:	add	x29, sp, #0x40
   20e2c:	ldrb	w8, [x0]
   20e30:	and	w8, w8, #0xfe
   20e34:	cmp	w8, #0x4
   20e38:	b.ne	20e64 <__ubsan_handle_cfi_check_fail_abort@@Base+0x44>  // b.any
   20e3c:	ldur	w8, [x29, #-8]
   20e40:	ldur	w9, [x29, #-5]
   20e44:	mov	w10, #0x1                   	// #1
   20e48:	add	x2, sp, #0x20
   20e4c:	strb	w10, [sp, #32]
   20e50:	stur	w8, [sp, #33]
   20e54:	str	w9, [sp, #36]
   20e58:	stp	x30, x29, [sp, #40]
   20e5c:	bl	20b00 <__ubsan_handle_cfi_check_fail@@Base+0x7c>
   20e60:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   20e64:	ldur	w9, [x29, #-8]
   20e68:	ldur	w10, [x29, #-5]
   20e6c:	cmp	x2, #0x0
   20e70:	mov	w8, #0x1                   	// #1
   20e74:	cset	w2, ne  // ne = any
   20e78:	add	x3, sp, #0x8
   20e7c:	strb	w8, [sp, #8]
   20e80:	stur	w9, [sp, #9]
   20e84:	str	w10, [sp, #12]
   20e88:	stp	x30, x29, [sp, #16]
   20e8c:	bl	4890 <__ubsan_handle_cfi_bad_type@plt>
   20e90:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   20e94:	str	x30, [sp, #-48]!
   20e98:	stp	x22, x21, [sp, #16]
   20e9c:	stp	x20, x19, [sp, #32]
   20ea0:	stp	x1, x2, [x0]
   20ea4:	ldr	x9, [x3, #24]
   20ea8:	mov	x21, x0
   20eac:	mov	x19, x3
   20eb0:	mov	x20, x0
   20eb4:	mov	x8, xzr
   20eb8:	str	xzr, [x21, #16]!
   20ebc:	adds	x22, x9, #0x1
   20ec0:	stp	xzr, xzr, [x21, #8]
   20ec4:	b.cc	20f0c <__ubsan_handle_cfi_check_fail_abort@@Base+0xec>  // b.lo, b.ul, b.last
   20ec8:	cmp	x8, x22
   20ecc:	b.cc	20f24 <__ubsan_handle_cfi_check_fail_abort@@Base+0x104>  // b.lo, b.ul, b.last
   20ed0:	stp	x22, xzr, [x20, #32]
   20ed4:	cbz	x22, 20f5c <__ubsan_handle_cfi_check_fail_abort@@Base+0x13c>
   20ed8:	ldr	x8, [x20, #16]
   20edc:	adrp	x9, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   20ee0:	adrp	x1, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20ee4:	add	x1, x1, #0x338
   20ee8:	strb	wzr, [x8]
   20eec:	str	x20, [x9, #3728]
   20ef0:	ldr	x2, [x19]
   20ef4:	mov	x0, x21
   20ef8:	bl	10088 <__sanitizer_on_print@@Base+0x188>
   20efc:	ldp	x20, x19, [sp, #32]
   20f00:	ldp	x22, x21, [sp, #16]
   20f04:	ldr	x30, [sp], #48
   20f08:	b	47a0 <__ubsan_on_report@plt>
   20f0c:	mov	x0, x21
   20f10:	mov	x1, x22
   20f14:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   20f18:	ldr	x8, [x20, #32]
   20f1c:	cmp	x8, x22
   20f20:	b.cs	20ed0 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb0>  // b.hs, b.nlast
   20f24:	ldr	x9, [x20, #24]
   20f28:	cmp	x9, x22
   20f2c:	b.cs	20f40 <__ubsan_handle_cfi_check_fail_abort@@Base+0x120>  // b.hs, b.nlast
   20f30:	mov	x0, x21
   20f34:	mov	x1, x22
   20f38:	bl	7358 <__sanitizer_install_malloc_and_free_hooks@@Base+0xa4>
   20f3c:	ldr	x8, [x20, #32]
   20f40:	ldr	x9, [x21]
   20f44:	sub	x2, x22, x8
   20f48:	mov	w1, wzr
   20f4c:	add	x0, x9, x8
   20f50:	bl	bf78 <__sanitizer_set_report_fd@@Base+0x26c4>
   20f54:	stp	x22, xzr, [x20, #32]
   20f58:	cbnz	x22, 20ed8 <__ubsan_handle_cfi_check_fail_abort@@Base+0xb8>
   20f5c:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   20f60:	adrp	x2, 23000 <__interceptor_sigaction@@Base+0xa44>
   20f64:	add	x0, x0, #0x419
   20f68:	add	x2, x2, #0x7fd
   20f6c:	mov	w1, #0x1c5                 	// #453
   20f70:	mov	x3, xzr
   20f74:	mov	x4, xzr
   20f78:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000020f7c <_ZN7__ubsan31RegisterUndefinedBehaviorReportEPNS_23UndefinedBehaviorReportE@@Base>:
   20f7c:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   20f80:	str	x0, [x8, #3728]
   20f84:	ret

0000000000020f88 <__ubsan_on_report@@Base>:
   20f88:	ret

0000000000020f8c <__ubsan_get_current_report_data@@Base>:
   20f8c:	str	x30, [sp, #-16]!
   20f90:	cbz	x0, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20f94:	cbz	x1, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20f98:	cbz	x2, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20f9c:	cbz	x3, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20fa0:	cbz	x4, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20fa4:	cbz	x5, 21054 <__ubsan_get_current_report_data@@Base+0xc8>
   20fa8:	adrp	x8, 915000 <__interceptor_sigaction@@Base+0x8f2a44>
   20fac:	ldr	x8, [x8, #3728]
   20fb0:	ldr	x9, [x8, #16]
   20fb4:	ldrb	w10, [x9]
   20fb8:	sub	w11, w10, #0x61
   20fbc:	cmp	w11, #0x19
   20fc0:	b.hi	20fcc <__ubsan_get_current_report_data@@Base+0x40>  // b.pmore
   20fc4:	sub	w10, w10, #0x20
   20fc8:	strb	w10, [x9]
   20fcc:	ldr	x9, [x8]
   20fd0:	str	x9, [x0]
   20fd4:	ldr	x9, [x8, #16]
   20fd8:	str	x9, [x1]
   20fdc:	ldr	x9, [x8, #8]
   20fe0:	ldr	w10, [x9]
   20fe4:	cmp	w10, #0x1
   20fe8:	b.ne	21020 <__ubsan_get_current_report_data@@Base+0x94>  // b.any
   20fec:	ldp	x10, x9, [x9, #8]
   20ff0:	str	x10, [x2]
   20ff4:	str	w9, [x3]
   20ff8:	lsr	x9, x9, #32
   20ffc:	str	w9, [x4]
   21000:	ldr	x8, [x8, #8]
   21004:	ldr	w9, [x8]
   21008:	cmp	w9, #0x2
   2100c:	b.eq	21044 <__ubsan_get_current_report_data@@Base+0xb8>  // b.none
   21010:	mov	x8, xzr
   21014:	str	x8, [x5]
   21018:	ldr	x30, [sp], #16
   2101c:	ret
   21020:	adrp	x9, 29000 <__interceptor_sigaction@@Base+0x6a44>
   21024:	add	x9, x9, #0x30e
   21028:	str	x9, [x2]
   2102c:	str	wzr, [x4]
   21030:	str	wzr, [x3]
   21034:	ldr	x8, [x8, #8]
   21038:	ldr	w9, [x8]
   2103c:	cmp	w9, #0x2
   21040:	b.ne	21010 <__ubsan_get_current_report_data@@Base+0x84>  // b.any
   21044:	ldr	x8, [x8, #24]
   21048:	str	x8, [x5]
   2104c:	ldr	x30, [sp], #16
   21050:	ret
   21054:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21058:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2105c:	add	x0, x0, #0x539
   21060:	add	x2, x2, #0x57e
   21064:	mov	w1, #0x31                  	// #49
   21068:	mov	x3, xzr
   2106c:	mov	x4, xzr
   21070:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   21074:	str	x30, [sp, #-16]!
   21078:	ldr	x8, [x0]
   2107c:	ldrh	w9, [x8]
   21080:	cbnz	w9, 21140 <__ubsan_get_current_report_data@@Base+0x1b4>
   21084:	ldrh	w8, [x8, #2]
   21088:	tbz	w8, #0, 21140 <__ubsan_get_current_report_data@@Base+0x1b4>
   2108c:	lsr	w9, w8, #1
   21090:	mov	w10, #0x1                   	// #1
   21094:	cmp	w8, #0xd
   21098:	lsl	w8, w10, w9
   2109c:	b.hi	2110c <__ubsan_get_current_report_data@@Base+0x180>  // b.pmore
   210a0:	ldr	x10, [x0, #8]
   210a4:	mov	w9, #0x80                  	// #128
   210a8:	neg	w11, w8
   210ac:	sub	w8, w9, w8
   210b0:	neg	x9, x8
   210b4:	cmp	x8, #0x0
   210b8:	sub	x12, x8, #0x40
   210bc:	lsr	x13, x10, x9
   210c0:	lsl	x14, x10, x8
   210c4:	csel	x13, xzr, x13, eq  // eq = none
   210c8:	cmp	x12, #0x0
   210cc:	csel	x13, x14, x13, ge  // ge = tcont
   210d0:	cmp	x8, #0x0
   210d4:	lsl	x9, x13, x9
   210d8:	lsl	x10, x10, x11
   210dc:	csel	x9, xzr, x9, eq  // eq = none
   210e0:	cmp	x12, #0x0
   210e4:	csel	x10, xzr, x10, ge  // ge = tcont
   210e8:	lsr	x10, x10, x11
   210ec:	asr	x14, x13, x11
   210f0:	asr	x12, x13, #63
   210f4:	orr	x9, x10, x9
   210f8:	asr	x8, x13, x8
   210fc:	csel	x1, x12, x14, ge  // ge = tcont
   21100:	csel	x0, x8, x9, ge  // ge = tcont
   21104:	ldr	x30, [sp], #16
   21108:	ret
   2110c:	cmp	w8, #0x80
   21110:	b.eq	21130 <__ubsan_get_current_report_data@@Base+0x1a4>  // b.none
   21114:	cmp	w8, #0x40
   21118:	b.ne	21158 <__ubsan_get_current_report_data@@Base+0x1cc>  // b.any
   2111c:	ldr	x8, [x0, #8]
   21120:	ldr	x0, [x8]
   21124:	asr	x1, x0, #63
   21128:	ldr	x30, [sp], #16
   2112c:	ret
   21130:	ldr	x8, [x0, #8]
   21134:	ldp	x0, x1, [x8]
   21138:	ldr	x30, [sp], #16
   2113c:	ret
   21140:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21144:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21148:	add	x0, x0, #0x5d1
   2114c:	add	x2, x2, #0x614
   21150:	mov	w1, #0x17                  	// #23
   21154:	b	2116c <__ubsan_get_current_report_data@@Base+0x1e0>
   21158:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2115c:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21160:	add	x0, x0, #0x5d1
   21164:	add	x2, x2, #0x63d
   21168:	mov	w1, #0x28                  	// #40
   2116c:	mov	x3, xzr
   21170:	mov	x4, xzr
   21174:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   21178:	str	x30, [sp, #-16]!
   2117c:	ldr	x8, [x0]
   21180:	ldrh	w9, [x8]
   21184:	cbnz	w9, 211e8 <__ubsan_get_current_report_data@@Base+0x25c>
   21188:	ldrh	w8, [x8, #2]
   2118c:	tbnz	w8, #0, 211e8 <__ubsan_get_current_report_data@@Base+0x25c>
   21190:	cmp	w8, #0xd
   21194:	b.hi	211a8 <__ubsan_get_current_report_data@@Base+0x21c>  // b.pmore
   21198:	ldr	x0, [x0, #8]
   2119c:	mov	x1, xzr
   211a0:	ldr	x30, [sp], #16
   211a4:	ret
   211a8:	lsr	w8, w8, #1
   211ac:	mov	w9, #0x1                   	// #1
   211b0:	lsl	w8, w9, w8
   211b4:	cmp	w8, #0x80
   211b8:	b.eq	211d8 <__ubsan_get_current_report_data@@Base+0x24c>  // b.none
   211bc:	cmp	w8, #0x40
   211c0:	b.ne	21200 <__ubsan_get_current_report_data@@Base+0x274>  // b.any
   211c4:	ldr	x8, [x0, #8]
   211c8:	mov	x1, xzr
   211cc:	ldr	x0, [x8]
   211d0:	ldr	x30, [sp], #16
   211d4:	ret
   211d8:	ldr	x8, [x0, #8]
   211dc:	ldp	x0, x1, [x8]
   211e0:	ldr	x30, [sp], #16
   211e4:	ret
   211e8:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   211ec:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   211f0:	add	x0, x0, #0x5d1
   211f4:	add	x2, x2, #0x664
   211f8:	mov	w1, #0x2c                  	// #44
   211fc:	b	21214 <__ubsan_get_current_report_data@@Base+0x288>
   21200:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21204:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21208:	add	x0, x0, #0x5d1
   2120c:	add	x2, x2, #0x63d
   21210:	mov	w1, #0x38                  	// #56
   21214:	mov	x3, xzr
   21218:	mov	x4, xzr
   2121c:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   21220:	str	x30, [sp, #-16]!
   21224:	ldr	x8, [x0]
   21228:	ldrh	w9, [x8]
   2122c:	cbnz	w9, 2133c <__ubsan_get_current_report_data@@Base+0x3b0>
   21230:	ldrh	w8, [x8, #2]
   21234:	tbnz	w8, #0, 21250 <__ubsan_get_current_report_data@@Base+0x2c4>
   21238:	cmp	w8, #0xd
   2123c:	b.hi	212cc <__ubsan_get_current_report_data@@Base+0x340>  // b.pmore
   21240:	ldr	x0, [x0, #8]
   21244:	mov	x1, xzr
   21248:	ldr	x30, [sp], #16
   2124c:	ret
   21250:	lsr	w9, w8, #1
   21254:	mov	w10, #0x1                   	// #1
   21258:	cmp	w8, #0xd
   2125c:	lsl	w8, w10, w9
   21260:	b.hi	212fc <__ubsan_get_current_report_data@@Base+0x370>  // b.pmore
   21264:	ldr	x10, [x0, #8]
   21268:	mov	w9, #0x80                  	// #128
   2126c:	neg	w11, w8
   21270:	sub	w8, w9, w8
   21274:	neg	x9, x8
   21278:	cmp	x8, #0x0
   2127c:	sub	x12, x8, #0x40
   21280:	lsr	x13, x10, x9
   21284:	lsl	x14, x10, x8
   21288:	csel	x13, xzr, x13, eq  // eq = none
   2128c:	cmp	x12, #0x0
   21290:	csel	x13, x14, x13, ge  // ge = tcont
   21294:	cmp	x8, #0x0
   21298:	lsl	x9, x13, x9
   2129c:	lsl	x10, x10, x11
   212a0:	csel	x9, xzr, x9, eq  // eq = none
   212a4:	cmp	x12, #0x0
   212a8:	csel	x10, xzr, x10, ge  // ge = tcont
   212ac:	lsr	x10, x10, x11
   212b0:	asr	x14, x13, x11
   212b4:	asr	x12, x13, #63
   212b8:	orr	x9, x10, x9
   212bc:	asr	x8, x13, x8
   212c0:	csel	x1, x12, x14, ge  // ge = tcont
   212c4:	csel	x0, x8, x9, ge  // ge = tcont
   212c8:	b	21330 <__ubsan_get_current_report_data@@Base+0x3a4>
   212cc:	lsr	w8, w8, #1
   212d0:	mov	w9, #0x1                   	// #1
   212d4:	lsl	w8, w9, w8
   212d8:	cmp	w8, #0x80
   212dc:	b.eq	2131c <__ubsan_get_current_report_data@@Base+0x390>  // b.none
   212e0:	cmp	w8, #0x40
   212e4:	b.ne	21378 <__ubsan_get_current_report_data@@Base+0x3ec>  // b.any
   212e8:	ldr	x8, [x0, #8]
   212ec:	mov	x1, xzr
   212f0:	ldr	x0, [x8]
   212f4:	ldr	x30, [sp], #16
   212f8:	ret
   212fc:	cmp	w8, #0x80
   21300:	b.eq	21328 <__ubsan_get_current_report_data@@Base+0x39c>  // b.none
   21304:	cmp	w8, #0x40
   21308:	b.ne	21390 <__ubsan_get_current_report_data@@Base+0x404>  // b.any
   2130c:	ldr	x8, [x0, #8]
   21310:	ldr	x0, [x8]
   21314:	asr	x1, x0, #63
   21318:	b	21330 <__ubsan_get_current_report_data@@Base+0x3a4>
   2131c:	ldr	x8, [x0, #8]
   21320:	ldp	x0, x1, [x8]
   21324:	b	21334 <__ubsan_get_current_report_data@@Base+0x3a8>
   21328:	ldr	x8, [x0, #8]
   2132c:	ldp	x0, x1, [x8]
   21330:	tbnz	x1, #63, 21354 <__ubsan_get_current_report_data@@Base+0x3c8>
   21334:	ldr	x30, [sp], #16
   21338:	ret
   2133c:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21340:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21344:	add	x0, x0, #0x5d1
   21348:	add	x2, x2, #0x614
   2134c:	mov	w1, #0x17                  	// #23
   21350:	b	213a4 <__ubsan_get_current_report_data@@Base+0x418>
   21354:	mvn	x8, x1
   21358:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2135c:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21360:	lsr	x3, x8, #63
   21364:	add	x0, x0, #0x5d1
   21368:	add	x2, x2, #0x68f
   2136c:	mov	w1, #0x3f                  	// #63
   21370:	mov	x4, xzr
   21374:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   21378:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2137c:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21380:	add	x0, x0, #0x5d1
   21384:	add	x2, x2, #0x63d
   21388:	mov	w1, #0x38                  	// #56
   2138c:	b	213a4 <__ubsan_get_current_report_data@@Base+0x418>
   21390:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21394:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21398:	add	x0, x0, #0x5d1
   2139c:	add	x2, x2, #0x63d
   213a0:	mov	w1, #0x28                  	// #40
   213a4:	mov	x3, xzr
   213a8:	mov	x4, xzr
   213ac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   213b0:	sub	sp, sp, #0x20
   213b4:	str	x30, [sp, #16]
   213b8:	ldr	x8, [x0]
   213bc:	ldrh	w9, [x8]
   213c0:	cmp	w9, #0x1
   213c4:	b.ne	21490 <__ubsan_get_current_report_data@@Base+0x504>  // b.any
   213c8:	ldrh	w8, [x8, #2]
   213cc:	subs	w9, w8, #0x40
   213d0:	b.hi	21404 <__ubsan_get_current_report_data@@Base+0x478>  // b.pmore
   213d4:	b.eq	2143c <__ubsan_get_current_report_data@@Base+0x4b0>  // b.none
   213d8:	cmp	w8, #0x20
   213dc:	b.ne	21478 <__ubsan_get_current_report_data@@Base+0x4ec>  // b.any
   213e0:	add	x1, x0, #0x8
   213e4:	add	x0, sp, #0x1c
   213e8:	mov	w2, #0x4                   	// #4
   213ec:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   213f0:	ldr	s0, [sp, #28]
   213f4:	bl	48f0 <__extendsftf2@plt>
   213f8:	ldr	x30, [sp, #16]
   213fc:	add	sp, sp, #0x20
   21400:	ret
   21404:	ror	w8, w9, #4
   21408:	cmp	w8, #0x4
   2140c:	b.hi	21478 <__ubsan_get_current_report_data@@Base+0x4ec>  // b.pmore
   21410:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21414:	add	x9, x9, #0x5cc
   21418:	adr	x10, 21428 <__ubsan_get_current_report_data@@Base+0x49c>
   2141c:	ldrb	w11, [x9, x8]
   21420:	add	x10, x10, x11, lsl #2
   21424:	br	x10
   21428:	ldr	x8, [x0, #8]
   2142c:	ldr	q0, [x8]
   21430:	ldr	x30, [sp, #16]
   21434:	add	sp, sp, #0x20
   21438:	ret
   2143c:	add	x1, x0, #0x8
   21440:	add	x0, sp, #0x8
   21444:	mov	w2, #0x8                   	// #8
   21448:	bl	be48 <__sanitizer_set_report_fd@@Base+0x2594>
   2144c:	ldr	d0, [sp, #8]
   21450:	bl	4880 <__extenddftf2@plt>
   21454:	ldr	x30, [sp, #16]
   21458:	add	sp, sp, #0x20
   2145c:	ret
   21460:	ldr	x8, [x0, #8]
   21464:	ldr	d0, [x8]
   21468:	bl	4880 <__extenddftf2@plt>
   2146c:	ldr	x30, [sp, #16]
   21470:	add	sp, sp, #0x20
   21474:	ret
   21478:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2147c:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21480:	add	x0, x0, #0x5d1
   21484:	add	x2, x2, #0x6c4
   21488:	mov	w1, #0x6d                  	// #109
   2148c:	b	214a4 <__ubsan_get_current_report_data@@Base+0x518>
   21490:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21494:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21498:	add	x0, x0, #0x5d1
   2149c:	add	x2, x2, #0x6a3
   214a0:	mov	w1, #0x47                  	// #71
   214a4:	mov	x3, xzr
   214a8:	mov	x4, xzr
   214ac:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

00000000000214b0 <__ubsan_handle_dynamic_type_cache_miss@@Base>:
   214b0:	sub	sp, sp, #0x30
   214b4:	stp	x29, x30, [sp, #32]
   214b8:	add	x29, sp, #0x20
   214bc:	ldur	w8, [x29, #-8]
   214c0:	ldur	w9, [x29, #-5]
   214c4:	mov	x3, sp
   214c8:	strb	wzr, [sp]
   214cc:	stur	w8, [sp, #1]
   214d0:	str	w9, [sp, #4]
   214d4:	stp	x30, x29, [sp, #8]
   214d8:	bl	214e8 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x38>
   214dc:	ldp	x29, x30, [sp, #32]
   214e0:	add	sp, sp, #0x30
   214e4:	ret
   214e8:	stp	x29, x30, [sp, #-64]!
   214ec:	stp	x24, x23, [sp, #16]
   214f0:	stp	x22, x21, [sp, #32]
   214f4:	stp	x20, x19, [sp, #48]
   214f8:	sub	sp, sp, #0x2a0
   214fc:	ldr	x8, [x0, #24]
   21500:	mov	x20, x0
   21504:	mov	x19, x1
   21508:	mov	x0, x1
   2150c:	mov	x1, x8
   21510:	mov	x21, x3
   21514:	bl	21fc8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4c>
   21518:	tbnz	w0, #0, 21584 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd4>
   2151c:	add	x8, sp, #0x278
   21520:	mov	x0, x19
   21524:	bl	21fc0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x44>
   21528:	ldr	x0, [sp, #632]
   2152c:	cbz	x0, 21538 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x88>
   21530:	bl	1d7e8 <__sanitizer_get_module_and_offset_for_pc@@Base+0x56b0>
   21534:	tbnz	w0, #0, 21584 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd4>
   21538:	add	x24, sp, #0x294
   2153c:	add	x9, x20, #0xc
   21540:	mov	w10, #0xffffffff            	// #-1
   21544:	ldaxr	w8, [x9]
   21548:	stlxr	w11, w10, [x9]
   2154c:	cbnz	w11, 21544 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x94>
   21550:	ldr	w22, [x20, #8]
   21554:	ldr	x23, [x20]
   21558:	ldr	x9, [x21, #16]
   2155c:	ldr	q0, [x21]
   21560:	bfi	x22, x8, #32, #32
   21564:	add	x2, sp, #0x260
   21568:	mov	w3, #0x1e                  	// #30
   2156c:	mov	x0, x23
   21570:	mov	x1, x22
   21574:	str	x9, [sp, #624]
   21578:	str	q0, [sp, #608]
   2157c:	bl	1dd80 <__ubsan_default_options@@Base+0x228>
   21580:	tbz	w0, #0, 215a0 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xf0>
   21584:	mov	w0, wzr
   21588:	add	sp, sp, #0x2a0
   2158c:	ldp	x20, x19, [sp, #48]
   21590:	ldp	x22, x21, [sp, #32]
   21594:	ldp	x24, x23, [sp, #16]
   21598:	ldp	x29, x30, [sp], #64
   2159c:	ret
   215a0:	ldr	x8, [x21, #16]
   215a4:	ldr	q0, [x21]
   215a8:	mov	w21, #0x1                   	// #1
   215ac:	add	x0, sp, #0x210
   215b0:	add	x1, sp, #0x1f0
   215b4:	add	x2, sp, #0x1c8
   215b8:	mov	w3, #0x1e                  	// #30
   215bc:	str	w21, [sp, #456]
   215c0:	str	x8, [sp, #512]
   215c4:	str	q0, [sp, #496]
   215c8:	stp	x23, x22, [sp, #464]
   215cc:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   215d0:	movi	v0.2d, #0x0
   215d4:	str	d0, [sp, #360]
   215d8:	str	d0, [sp, #400]
   215dc:	ldr	q0, [sp]
   215e0:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   215e4:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   215e8:	str	w21, [sp, #16]
   215ec:	stur	q0, [sp, #40]
   215f0:	ldr	d0, [x8, #1792]
   215f4:	stp	x23, x22, [sp, #24]
   215f8:	add	x9, x9, #0x7fe
   215fc:	str	wzr, [sp, #344]
   21600:	str	xzr, [sp, #352]
   21604:	str	wzr, [sp, #384]
   21608:	str	xzr, [sp, #392]
   2160c:	str	xzr, [sp, #424]
   21610:	str	wzr, [sp, #432]
   21614:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   21618:	ldr	x8, [x8, #3728]
   2161c:	str	x9, [sp, #64]
   21620:	ldr	w9, [sp, #668]
   21624:	str	d0, [sp, #56]
   21628:	ldr	x10, [x24]
   2162c:	ldrb	w11, [x20, #32]
   21630:	str	w9, [sp, #92]
   21634:	mov	w9, #0x2                   	// #2
   21638:	str	w9, [sp, #336]
   2163c:	mov	w9, #0x5                   	// #5
   21640:	stur	x10, [sp, #84]
   21644:	ldr	w10, [sp, #668]
   21648:	str	w9, [sp, #112]
   2164c:	ldr	x9, [x24]
   21650:	ldr	x8, [x8, x11, lsl #3]
   21654:	str	wzr, [sp, #80]
   21658:	str	w10, [sp, #124]
   2165c:	stur	x9, [sp, #116]
   21660:	str	x8, [sp, #96]
   21664:	str	x19, [sp, #128]
   21668:	ldr	x1, [x20, #16]
   2166c:	add	x0, sp, #0x10
   21670:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   21674:	add	x0, sp, #0x10
   21678:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   2167c:	ldr	x8, [sp, #632]
   21680:	ldr	x9, [sp, #640]
   21684:	cbz	x8, 21750 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x2a0>
   21688:	cbz	x9, 217c4 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x314>
   2168c:	sub	x10, x19, x9
   21690:	stp	x9, xzr, [sp, #96]
   21694:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21698:	add	x9, x9, #0x8c7
   2169c:	str	x8, [sp, #128]
   216a0:	ldr	x8, [x24]
   216a4:	str	x9, [sp, #64]
   216a8:	mov	w9, #0x3                   	// #3
   216ac:	str	w9, [sp, #336]
   216b0:	ldr	w9, [sp, #668]
   216b4:	mov	w11, #0x2                   	// #2
   216b8:	adrp	x12, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   216bc:	str	x10, [sp, #40]
   216c0:	mov	w10, #0x1                   	// #1
   216c4:	ldr	d1, [x12, #1800]
   216c8:	ldr	x12, [x24]
   216cc:	str	w10, [sp, #112]
   216d0:	str	w10, [sp, #144]
   216d4:	str	w10, [sp, #432]
   216d8:	ldr	w10, [sp, #668]
   216dc:	str	w11, [sp, #16]
   216e0:	str	w11, [sp, #80]
   216e4:	str	w11, [sp, #344]
   216e8:	str	w11, [sp, #384]
   216ec:	ldr	x11, [sp, #648]
   216f0:	ldr	x13, [x24]
   216f4:	stur	x8, [sp, #84]
   216f8:	ldr	w8, [sp, #668]
   216fc:	str	w9, [sp, #92]
   21700:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21704:	movi	v0.2d, #0x0
   21708:	add	x14, x19, #0x8
   2170c:	add	x9, x9, #0x90c
   21710:	str	xzr, [sp, #24]
   21714:	str	x19, [sp, #368]
   21718:	str	xzr, [sp, #352]
   2171c:	str	xzr, [sp, #392]
   21720:	str	d0, [sp, #32]
   21724:	str	d0, [sp, #360]
   21728:	str	d0, [sp, #400]
   2172c:	str	w10, [sp, #124]
   21730:	stur	x12, [sp, #116]
   21734:	str	w8, [sp, #156]
   21738:	stur	x13, [sp, #148]
   2173c:	str	x11, [sp, #160]
   21740:	str	d1, [sp, #56]
   21744:	str	x14, [sp, #408]
   21748:	str	x9, [sp, #424]
   2174c:	b	218d0 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x420>
   21750:	add	x8, x9, #0x100, lsl #12
   21754:	cmp	x8, #0x200, lsl #12
   21758:	b.ls	2184c <__ubsan_handle_dynamic_type_cache_miss@@Base+0x39c>  // b.plast
   2175c:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21760:	ldr	d1, [x9, #1800]
   21764:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21768:	add	x9, x9, #0x839
   2176c:	str	x9, [sp, #64]
   21770:	mov	w9, #0x1                   	// #1
   21774:	ldr	x10, [x24]
   21778:	str	w9, [sp, #336]
   2177c:	str	w9, [sp, #80]
   21780:	str	w9, [sp, #432]
   21784:	ldr	w9, [sp, #668]
   21788:	mov	w8, #0x2                   	// #2
   2178c:	str	w8, [sp, #16]
   21790:	str	w8, [sp, #344]
   21794:	str	w8, [sp, #384]
   21798:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2179c:	movi	v0.2d, #0x0
   217a0:	add	x11, x19, #0x8
   217a4:	add	x8, x8, #0x878
   217a8:	str	xzr, [sp, #24]
   217ac:	str	x19, [sp, #40]
   217b0:	str	xzr, [sp, #96]
   217b4:	str	x19, [sp, #368]
   217b8:	str	xzr, [sp, #352]
   217bc:	str	xzr, [sp, #392]
   217c0:	b	218b0 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x400>
   217c4:	str	x8, [sp, #96]
   217c8:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   217cc:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   217d0:	add	x8, x8, #0x8a6
   217d4:	ldr	d1, [x10, #1800]
   217d8:	ldr	x11, [x24]
   217dc:	str	x8, [sp, #64]
   217e0:	ldr	w8, [sp, #668]
   217e4:	mov	w10, #0x1                   	// #1
   217e8:	str	w10, [sp, #336]
   217ec:	str	w10, [sp, #80]
   217f0:	str	w10, [sp, #432]
   217f4:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   217f8:	mov	w9, #0x2                   	// #2
   217fc:	movi	v0.2d, #0x0
   21800:	add	x12, x19, #0x8
   21804:	add	x10, x10, #0x8bb
   21808:	str	xzr, [sp, #24]
   2180c:	str	x19, [sp, #40]
   21810:	str	x19, [sp, #368]
   21814:	str	xzr, [sp, #352]
   21818:	str	xzr, [sp, #392]
   2181c:	str	w9, [sp, #16]
   21820:	str	d0, [sp, #32]
   21824:	str	w9, [sp, #344]
   21828:	str	d0, [sp, #360]
   2182c:	str	w9, [sp, #384]
   21830:	str	d0, [sp, #400]
   21834:	stur	x11, [sp, #84]
   21838:	str	w8, [sp, #92]
   2183c:	str	d1, [sp, #56]
   21840:	str	x12, [sp, #408]
   21844:	str	x10, [sp, #424]
   21848:	b	218d0 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x420>
   2184c:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21850:	ldr	d1, [x9, #1800]
   21854:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21858:	add	x9, x9, #0x88e
   2185c:	str	x9, [sp, #64]
   21860:	mov	w9, #0x1                   	// #1
   21864:	ldr	x10, [x24]
   21868:	str	w9, [sp, #336]
   2186c:	str	w9, [sp, #80]
   21870:	str	w9, [sp, #432]
   21874:	ldr	w9, [sp, #668]
   21878:	mov	w8, #0x2                   	// #2
   2187c:	str	w8, [sp, #16]
   21880:	str	w8, [sp, #344]
   21884:	str	w8, [sp, #384]
   21888:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2188c:	str	xzr, [sp, #24]
   21890:	movi	v0.2d, #0x0
   21894:	str	x19, [sp, #40]
   21898:	str	xzr, [sp, #96]
   2189c:	str	x19, [sp, #368]
   218a0:	add	x11, x19, #0x8
   218a4:	str	xzr, [sp, #352]
   218a8:	str	xzr, [sp, #392]
   218ac:	add	x8, x8, #0x899
   218b0:	str	d0, [sp, #32]
   218b4:	str	d0, [sp, #360]
   218b8:	str	d0, [sp, #400]
   218bc:	stur	x10, [sp, #84]
   218c0:	str	w9, [sp, #92]
   218c4:	str	d1, [sp, #56]
   218c8:	str	x11, [sp, #408]
   218cc:	str	x8, [sp, #424]
   218d0:	add	x0, sp, #0x10
   218d4:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   218d8:	add	x0, sp, #0x210
   218dc:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   218e0:	mov	w0, #0x1                   	// #1
   218e4:	b	21588 <__ubsan_handle_dynamic_type_cache_miss@@Base+0xd8>

00000000000218e8 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base>:
   218e8:	sub	sp, sp, #0x30
   218ec:	stp	x29, x30, [sp, #32]
   218f0:	add	x29, sp, #0x20
   218f4:	ldur	w8, [x29, #-8]
   218f8:	ldur	w9, [x29, #-5]
   218fc:	mov	x3, sp
   21900:	strb	wzr, [sp]
   21904:	stur	w8, [sp, #1]
   21908:	str	w9, [sp, #4]
   2190c:	stp	x30, x29, [sp, #8]
   21910:	bl	214e8 <__ubsan_handle_dynamic_type_cache_miss@@Base+0x38>
   21914:	tbnz	w0, #0, 21924 <__ubsan_handle_dynamic_type_cache_miss_abort@@Base+0x3c>
   21918:	ldp	x29, x30, [sp, #32]
   2191c:	add	sp, sp, #0x30
   21920:	ret
   21924:	bl	13504 <__sanitizer_on_print@@Base+0x3604>

0000000000021928 <__ubsan_handle_cfi_bad_type@@Base>:
   21928:	str	x29, [sp, #-80]!
   2192c:	stp	x30, x25, [sp, #16]
   21930:	stp	x24, x23, [sp, #32]
   21934:	stp	x22, x21, [sp, #48]
   21938:	stp	x20, x19, [sp, #64]
   2193c:	sub	sp, sp, #0x460
   21940:	mov	x21, x3
   21944:	mov	w24, w2
   21948:	mov	x22, x1
   2194c:	mov	x23, x0
   21950:	add	x25, sp, #0x1d0
   21954:	add	x9, x0, #0x14
   21958:	mov	w10, #0xffffffff            	// #-1
   2195c:	ldaxr	w8, [x9]
   21960:	stlxr	w11, w10, [x9]
   21964:	cbnz	w11, 2195c <__ubsan_handle_cfi_bad_type@@Base+0x34>
   21968:	ldr	w19, [x23, #16]
   2196c:	ldr	x20, [x23, #8]
   21970:	ldr	x9, [x21, #16]
   21974:	ldr	q0, [x21]
   21978:	bfi	x19, x8, #32, #32
   2197c:	add	x2, sp, #0x430
   21980:	mov	w3, #0x1f                  	// #31
   21984:	mov	x0, x20
   21988:	mov	x1, x19
   2198c:	str	x9, [sp, #1088]
   21990:	str	q0, [sp, #1072]
   21994:	bl	1dd80 <__ubsan_default_options@@Base+0x228>
   21998:	tbnz	w0, #0, 21d04 <__ubsan_handle_cfi_bad_type@@Base+0x3dc>
   2199c:	ldr	x8, [x21, #16]
   219a0:	ldr	q0, [x21]
   219a4:	mov	w9, #0x1                   	// #1
   219a8:	add	x0, sp, #0x3e0
   219ac:	add	x1, sp, #0x3c0
   219b0:	add	x2, sp, #0x398
   219b4:	mov	w3, #0x1f                  	// #31
   219b8:	str	w9, [sp, #920]
   219bc:	str	x8, [sp, #976]
   219c0:	str	q0, [sp, #960]
   219c4:	str	x20, [sp, #928]
   219c8:	str	x19, [sp, #936]
   219cc:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   219d0:	tbz	w24, #0, 21a14 <__ubsan_handle_cfi_bad_type@@Base+0xec>
   219d4:	add	x8, sp, #0x380
   219d8:	mov	x0, x22
   219dc:	bl	2228c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x310>
   219e0:	ldrb	w8, [x23]
   219e4:	sub	w8, w8, #0x1
   219e8:	cmp	w8, #0x5
   219ec:	b.hi	21a30 <__ubsan_handle_cfi_bad_type@@Base+0x108>  // b.pmore
   219f0:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   219f4:	add	x9, x9, #0x720
   219f8:	adr	x10, 21a08 <__ubsan_handle_cfi_bad_type@@Base+0xe0>
   219fc:	ldrb	w11, [x9, x8]
   21a00:	add	x10, x10, x11, lsl #2
   21a04:	br	x10
   21a08:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a0c:	add	x24, x24, #0x726
   21a10:	b	21a5c <__ubsan_handle_cfi_bad_type@@Base+0x134>
   21a14:	str	xzr, [sp, #904]
   21a18:	str	xzr, [sp, #896]
   21a1c:	str	xzr, [sp, #912]
   21a20:	ldrb	w8, [x23]
   21a24:	sub	w8, w8, #0x1
   21a28:	cmp	w8, #0x5
   21a2c:	b.ls	219f0 <__ubsan_handle_cfi_bad_type@@Base+0xc8>  // b.plast
   21a30:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a34:	add	x24, x24, #0x72a
   21a38:	b	21a5c <__ubsan_handle_cfi_bad_type@@Base+0x134>
   21a3c:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a40:	add	x24, x24, #0x74c
   21a44:	b	21a5c <__ubsan_handle_cfi_bad_type@@Base+0x134>
   21a48:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a4c:	add	x24, x24, #0x737
   21a50:	b	21a5c <__ubsan_handle_cfi_bad_type@@Base+0x134>
   21a54:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a58:	add	x24, x24, #0x427
   21a5c:	ldr	q0, [sp, #448]
   21a60:	mov	w8, #0x1                   	// #1
   21a64:	stp	x20, x19, [sp, #472]
   21a68:	str	w8, [sp, #464]
   21a6c:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   21a70:	stur	q0, [x25, #24]
   21a74:	movi	v0.2d, #0x0
   21a78:	str	d0, [sp, #808]
   21a7c:	str	d0, [sp, #848]
   21a80:	ldr	d0, [x8, #2752]
   21a84:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21a88:	add	x8, x8, #0x763
   21a8c:	str	x8, [sp, #512]
   21a90:	str	wzr, [sp, #784]
   21a94:	str	wzr, [sp, #792]
   21a98:	str	xzr, [sp, #800]
   21a9c:	str	wzr, [sp, #832]
   21aa0:	str	xzr, [sp, #840]
   21aa4:	str	xzr, [sp, #872]
   21aa8:	str	d0, [sp, #504]
   21aac:	str	wzr, [sp, #880]
   21ab0:	ldr	x1, [x23, #24]
   21ab4:	add	x0, sp, #0x1d0
   21ab8:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   21abc:	ldr	w8, [x0, #320]
   21ac0:	cmp	w8, #0x8
   21ac4:	b.eq	21d24 <__ubsan_handle_cfi_bad_type@@Base+0x3fc>  // b.none
   21ac8:	add	w9, w8, #0x1
   21acc:	add	x8, x0, x8, lsl #5
   21ad0:	str	w9, [x0, #320]
   21ad4:	str	wzr, [x8, #64]
   21ad8:	ldr	w9, [sp, #1112]
   21adc:	ldr	x10, [sp, #1104]
   21ae0:	str	x24, [x8, #80]
   21ae4:	str	w9, [x8, #76]
   21ae8:	stur	x10, [x8, #68]
   21aec:	ldr	w8, [x0, #320]
   21af0:	cmp	w8, #0x8
   21af4:	b.eq	21d24 <__ubsan_handle_cfi_bad_type@@Base+0x3fc>  // b.none
   21af8:	add	w9, w8, #0x1
   21afc:	add	x8, x0, x8, lsl #5
   21b00:	mov	w10, #0x5                   	// #5
   21b04:	str	w9, [x0, #320]
   21b08:	str	w10, [x8, #64]
   21b0c:	ldr	w9, [sp, #1112]
   21b10:	ldr	x10, [sp, #1104]
   21b14:	add	x0, sp, #0x1d0
   21b18:	str	x22, [x8, #80]
   21b1c:	str	w9, [x8, #76]
   21b20:	stur	x10, [x8, #68]
   21b24:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   21b28:	ldr	x8, [sp, #896]
   21b2c:	adrp	x23, 29000 <__interceptor_sigaction@@Base+0x6a44>
   21b30:	cbz	x8, 21ba8 <__ubsan_handle_cfi_bad_type@@Base+0x280>
   21b34:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21b38:	mov	w9, #0x2                   	// #2
   21b3c:	add	x10, x10, #0x7c0
   21b40:	ldr	d1, [x23, #2760]
   21b44:	str	w9, [sp, #464]
   21b48:	ldr	x9, [sp, #1104]
   21b4c:	str	x10, [sp, #512]
   21b50:	ldr	w10, [sp, #1112]
   21b54:	movi	v0.2d, #0x0
   21b58:	mov	w11, #0x1                   	// #1
   21b5c:	add	x0, sp, #0x1d0
   21b60:	str	xzr, [sp, #472]
   21b64:	str	x22, [sp, #488]
   21b68:	str	wzr, [sp, #792]
   21b6c:	str	xzr, [sp, #800]
   21b70:	str	wzr, [sp, #832]
   21b74:	str	xzr, [sp, #840]
   21b78:	str	xzr, [sp, #872]
   21b7c:	str	wzr, [sp, #880]
   21b80:	str	d0, [sp, #480]
   21b84:	str	d0, [sp, #808]
   21b88:	str	d0, [sp, #848]
   21b8c:	str	w11, [sp, #784]
   21b90:	str	d1, [sp, #504]
   21b94:	str	w11, [sp, #528]
   21b98:	str	w10, [sp, #540]
   21b9c:	stur	x9, [x25, #68]
   21ba0:	str	x8, [sp, #544]
   21ba4:	b	21bfc <__ubsan_handle_cfi_bad_type@@Base+0x2d4>
   21ba8:	ldr	d1, [x23, #2760]
   21bac:	mov	w8, #0x2                   	// #2
   21bb0:	str	w8, [sp, #16]
   21bb4:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21bb8:	movi	v0.2d, #0x0
   21bbc:	add	x8, x8, #0x7b1
   21bc0:	str	xzr, [sp, #24]
   21bc4:	str	x22, [sp, #40]
   21bc8:	str	wzr, [sp, #336]
   21bcc:	str	wzr, [sp, #344]
   21bd0:	str	xzr, [sp, #352]
   21bd4:	str	wzr, [sp, #384]
   21bd8:	str	xzr, [sp, #392]
   21bdc:	str	xzr, [sp, #424]
   21be0:	str	d0, [sp, #32]
   21be4:	str	x8, [sp, #64]
   21be8:	str	d0, [sp, #360]
   21bec:	str	d0, [sp, #400]
   21bf0:	str	d1, [sp, #56]
   21bf4:	str	wzr, [sp, #432]
   21bf8:	add	x0, sp, #0x10
   21bfc:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   21c00:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   21c04:	add	x2, sp, #0x1d0
   21c08:	add	x3, sp, #0x450
   21c0c:	mov	x1, x22
   21c10:	str	xzr, [sp, #464]
   21c14:	bl	19484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   21c18:	ldr	x8, [sp, #464]
   21c1c:	tst	w0, #0x1
   21c20:	adrp	x24, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21c24:	add	x24, x24, #0x4a0
   21c28:	csel	x8, x8, xzr, ne  // ne = any
   21c2c:	cmp	x8, #0x0
   21c30:	csel	x22, x24, x8, eq  // eq = none
   21c34:	bl	18ee8 <__sanitizer_get_module_and_offset_for_pc@@Base+0xdb0>
   21c38:	ldr	x1, [x21, #8]
   21c3c:	add	x2, sp, #0x1d0
   21c40:	add	x3, sp, #0x450
   21c44:	str	xzr, [sp, #464]
   21c48:	bl	19484 <__sanitizer_get_module_and_offset_for_pc@@Base+0x134c>
   21c4c:	ldr	x8, [sp, #464]
   21c50:	tst	w0, #0x1
   21c54:	mov	x1, x22
   21c58:	csel	x8, x8, xzr, ne  // ne = any
   21c5c:	cmp	x8, #0x0
   21c60:	csel	x21, x24, x8, eq  // eq = none
   21c64:	mov	x0, x21
   21c68:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   21c6c:	cbz	w0, 21cfc <__ubsan_handle_cfi_bad_type@@Base+0x3d4>
   21c70:	ldr	q0, [sp]
   21c74:	ldr	w10, [sp, #1112]
   21c78:	mov	w8, #0x1                   	// #1
   21c7c:	str	w8, [sp, #464]
   21c80:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21c84:	add	x8, x8, #0x7d5
   21c88:	stp	x20, x19, [sp, #472]
   21c8c:	ldr	d1, [x23, #2760]
   21c90:	stur	q0, [x25, #24]
   21c94:	ldr	w11, [sp, #1112]
   21c98:	str	x8, [sp, #512]
   21c9c:	str	w10, [sp, #540]
   21ca0:	ldr	x8, [sp, #1104]
   21ca4:	ldr	x10, [sp, #1104]
   21ca8:	movi	v0.2d, #0x0
   21cac:	mov	w9, #0x2                   	// #2
   21cb0:	add	x0, sp, #0x1d0
   21cb4:	str	d1, [sp, #504]
   21cb8:	str	wzr, [sp, #528]
   21cbc:	str	wzr, [sp, #792]
   21cc0:	str	xzr, [sp, #800]
   21cc4:	str	d0, [sp, #808]
   21cc8:	str	wzr, [sp, #832]
   21ccc:	str	xzr, [sp, #840]
   21cd0:	str	d0, [sp, #848]
   21cd4:	str	xzr, [sp, #872]
   21cd8:	str	wzr, [sp, #880]
   21cdc:	stur	x8, [x25, #68]
   21ce0:	str	x21, [sp, #544]
   21ce4:	str	w9, [sp, #784]
   21ce8:	str	wzr, [sp, #560]
   21cec:	str	w11, [sp, #572]
   21cf0:	stur	x10, [x25, #100]
   21cf4:	str	x22, [sp, #576]
   21cf8:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   21cfc:	add	x0, sp, #0x3e0
   21d00:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   21d04:	add	sp, sp, #0x460
   21d08:	ldp	x20, x19, [sp, #64]
   21d0c:	ldp	x22, x21, [sp, #48]
   21d10:	ldp	x24, x23, [sp, #32]
   21d14:	ldp	x30, x25, [sp, #16]
   21d18:	ldr	x29, [sp], #80
   21d1c:	ret
   21d20:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   21d24:	adrp	x0, 29000 <__interceptor_sigaction@@Base+0x6a44>
   21d28:	adrp	x2, 29000 <__interceptor_sigaction@@Base+0x6a44>
   21d2c:	add	x0, x0, #0x3bb
   21d30:	add	x2, x2, #0x3fb
   21d34:	mov	w1, #0xc0                  	// #192
   21d38:	mov	x3, xzr
   21d3c:	mov	x4, xzr
   21d40:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>

0000000000021d44 <__ubsan_handle_function_type_mismatch_v1@@Base>:
   21d44:	sub	sp, sp, #0x30
   21d48:	stp	x29, x30, [sp, #32]
   21d4c:	add	x29, sp, #0x20
   21d50:	ldur	w8, [x29, #-8]
   21d54:	ldur	w9, [x29, #-5]
   21d58:	mov	x4, sp
   21d5c:	strb	wzr, [sp]
   21d60:	stur	w8, [sp, #1]
   21d64:	str	w9, [sp, #4]
   21d68:	stp	x30, x29, [sp, #8]
   21d6c:	bl	21d7c <__ubsan_handle_function_type_mismatch_v1@@Base+0x38>
   21d70:	ldp	x29, x30, [sp, #32]
   21d74:	add	sp, sp, #0x30
   21d78:	ret
   21d7c:	str	x29, [sp, #-80]!
   21d80:	stp	x30, x25, [sp, #16]
   21d84:	stp	x24, x23, [sp, #32]
   21d88:	stp	x22, x21, [sp, #48]
   21d8c:	stp	x20, x19, [sp, #64]
   21d90:	sub	sp, sp, #0x290
   21d94:	mov	x21, x1
   21d98:	mov	x19, x0
   21d9c:	mov	x0, x2
   21da0:	mov	x1, x3
   21da4:	mov	x23, x4
   21da8:	bl	223e4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x468>
   21dac:	tbz	w0, #0, 21db8 <__ubsan_handle_function_type_mismatch_v1@@Base+0x74>
   21db0:	mov	w20, wzr
   21db4:	b	21f5c <__ubsan_handle_function_type_mismatch_v1@@Base+0x218>
   21db8:	add	x25, sp, #0x284
   21dbc:	add	x9, x19, #0xc
   21dc0:	mov	w10, #0xffffffff            	// #-1
   21dc4:	ldaxr	w8, [x9]
   21dc8:	stlxr	w11, w10, [x9]
   21dcc:	cbnz	w11, 21dc4 <__ubsan_handle_function_type_mismatch_v1@@Base+0x80>
   21dd0:	ldr	w22, [x19, #8]
   21dd4:	ldr	x24, [x19]
   21dd8:	ldr	x9, [x23, #16]
   21ddc:	ldr	q0, [x23]
   21de0:	bfi	x22, x8, #32, #32
   21de4:	add	x2, sp, #0x260
   21de8:	mov	w3, #0x1b                  	// #27
   21dec:	mov	x0, x24
   21df0:	mov	x1, x22
   21df4:	str	x9, [sp, #624]
   21df8:	str	q0, [sp, #608]
   21dfc:	bl	1dd80 <__ubsan_default_options@@Base+0x228>
   21e00:	mov	w20, #0x1                   	// #1
   21e04:	tbnz	w0, #0, 21f5c <__ubsan_handle_function_type_mismatch_v1@@Base+0x218>
   21e08:	ldr	x8, [x23, #16]
   21e0c:	ldr	q0, [x23]
   21e10:	add	x0, sp, #0x210
   21e14:	add	x1, sp, #0x1f0
   21e18:	add	x2, sp, #0x1c8
   21e1c:	mov	w3, #0x1b                  	// #27
   21e20:	str	w20, [sp, #456]
   21e24:	str	x8, [sp, #512]
   21e28:	str	q0, [sp, #496]
   21e2c:	stp	x24, x22, [sp, #464]
   21e30:	bl	1d548 <__sanitizer_get_module_and_offset_for_pc@@Base+0x5410>
   21e34:	mov	x0, x21
   21e38:	bl	1cafc <__sanitizer_get_module_and_offset_for_pc@@Base+0x49c4>
   21e3c:	ldr	q0, [sp]
   21e40:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21e44:	ldr	x8, [x0, #40]
   21e48:	ldr	x11, [x25]
   21e4c:	stur	q0, [sp, #40]
   21e50:	ldr	d0, [x10, #1808]
   21e54:	adrp	x10, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21e58:	add	x10, x10, #0x929
   21e5c:	str	x10, [sp, #64]
   21e60:	ldr	w10, [sp, #652]
   21e64:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21e68:	add	x9, x9, #0x4a0
   21e6c:	cmp	x8, #0x0
   21e70:	stp	x24, x22, [sp, #24]
   21e74:	str	d0, [sp, #56]
   21e78:	movi	v0.2d, #0x0
   21e7c:	csel	x22, x9, x8, eq  // eq = none
   21e80:	str	w20, [sp, #16]
   21e84:	str	wzr, [sp, #344]
   21e88:	str	xzr, [sp, #352]
   21e8c:	str	wzr, [sp, #384]
   21e90:	str	xzr, [sp, #392]
   21e94:	str	xzr, [sp, #424]
   21e98:	str	wzr, [sp, #432]
   21e9c:	str	w20, [sp, #336]
   21ea0:	str	wzr, [sp, #80]
   21ea4:	str	d0, [sp, #360]
   21ea8:	str	d0, [sp, #400]
   21eac:	str	w10, [sp, #92]
   21eb0:	stur	x11, [sp, #84]
   21eb4:	str	x22, [sp, #96]
   21eb8:	ldr	x1, [x19, #16]
   21ebc:	mov	x21, x0
   21ec0:	add	x0, sp, #0x10
   21ec4:	bl	1cb18 <__sanitizer_get_module_and_offset_for_pc@@Base+0x49e0>
   21ec8:	add	x0, sp, #0x10
   21ecc:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   21ed0:	movi	v0.2d, #0x0
   21ed4:	adrp	x9, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21ed8:	str	d0, [sp, #32]
   21edc:	str	d0, [sp, #360]
   21ee0:	str	d0, [sp, #400]
   21ee4:	ldr	d0, [x9, #1816]
   21ee8:	ldr	w9, [sp, #652]
   21eec:	ldr	x10, [x25]
   21ef0:	mov	w8, #0x3                   	// #3
   21ef4:	str	w8, [sp, #16]
   21ef8:	adrp	x8, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   21efc:	add	x8, x8, #0x4aa
   21f00:	add	x0, sp, #0x10
   21f04:	str	xzr, [sp, #24]
   21f08:	str	x21, [sp, #48]
   21f0c:	str	w20, [sp, #336]
   21f10:	str	wzr, [sp, #344]
   21f14:	str	xzr, [sp, #352]
   21f18:	str	wzr, [sp, #384]
   21f1c:	str	xzr, [sp, #392]
   21f20:	str	xzr, [sp, #424]
   21f24:	str	wzr, [sp, #432]
   21f28:	str	wzr, [sp, #80]
   21f2c:	str	x8, [sp, #64]
   21f30:	str	w9, [sp, #92]
   21f34:	stur	x10, [sp, #84]
   21f38:	str	d0, [sp, #56]
   21f3c:	str	x22, [sp, #96]
   21f40:	bl	1ccdc <__sanitizer_get_module_and_offset_for_pc@@Base+0x4ba4>
   21f44:	cbz	x21, 21f50 <__ubsan_handle_function_type_mismatch_v1@@Base+0x20c>
   21f48:	mov	x0, x21
   21f4c:	bl	189f0 <__sanitizer_get_module_and_offset_for_pc@@Base+0x8b8>
   21f50:	add	x0, sp, #0x210
   21f54:	bl	1d5a4 <__sanitizer_get_module_and_offset_for_pc@@Base+0x546c>
   21f58:	mov	w20, #0x1                   	// #1
   21f5c:	mov	w0, w20
   21f60:	add	sp, sp, #0x290
   21f64:	ldp	x20, x19, [sp, #64]
   21f68:	ldp	x22, x21, [sp, #48]
   21f6c:	ldp	x24, x23, [sp, #32]
   21f70:	ldp	x30, x25, [sp, #16]
   21f74:	ldr	x29, [sp], #80
   21f78:	ret

0000000000021f7c <__ubsan_handle_function_type_mismatch_v1_abort@@Base>:
   21f7c:	sub	sp, sp, #0x30
   21f80:	stp	x29, x30, [sp, #32]
   21f84:	add	x29, sp, #0x20
   21f88:	ldur	w8, [x29, #-8]
   21f8c:	ldur	w9, [x29, #-5]
   21f90:	mov	w10, #0x1                   	// #1
   21f94:	mov	x4, sp
   21f98:	strb	w10, [sp]
   21f9c:	stur	w8, [sp, #1]
   21fa0:	str	w9, [sp, #4]
   21fa4:	stp	x30, x29, [sp, #8]
   21fa8:	bl	21d7c <__ubsan_handle_function_type_mismatch_v1@@Base+0x38>
   21fac:	tbnz	w0, #0, 21fbc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x40>
   21fb0:	ldp	x29, x30, [sp, #32]
   21fb4:	add	sp, sp, #0x30
   21fb8:	ret
   21fbc:	bl	13504 <__sanitizer_on_print@@Base+0x3604>
   21fc0:	ldr	x0, [x0]
   21fc4:	b	2228c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x310>
   21fc8:	stp	x30, x23, [sp, #-48]!
   21fcc:	stp	x22, x21, [sp, #16]
   21fd0:	stp	x20, x19, [sp, #32]
   21fd4:	mov	x19, x2
   21fd8:	and	w8, w19, #0xffff
   21fdc:	adrp	x9, 916000 <__ubsan_vptr_type_cache@@Base+0x168>
   21fe0:	eor	w12, w8, #0x1
   21fe4:	add	x9, x9, #0x298
   21fe8:	add	x8, x9, w12, uxtw #3
   21fec:	ldr	x10, [x8]
   21ff0:	mov	x20, x1
   21ff4:	mov	x22, x8
   21ff8:	cbz	x10, 220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   21ffc:	cmp	x10, x19
   22000:	b.eq	220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   22004:	ubfx	x10, x19, #16, #16
   22008:	add	w11, w10, #0x1
   2200c:	mov	w13, #0xfffeffff            	// #-65537
   22010:	add	w10, w11, w12
   22014:	add	w12, w10, w13
   22018:	cmp	w10, #0x10, lsl #12
   2201c:	csel	w12, w12, w10, hi  // hi = pmore
   22020:	add	x22, x9, w12, uxtw #3
   22024:	ldr	x10, [x22]
   22028:	cbz	x10, 220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2202c:	cmp	x10, x19
   22030:	b.eq	220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   22034:	add	w10, w12, w11
   22038:	mov	w12, #0xfffeffff            	// #-65537
   2203c:	add	w12, w10, w12
   22040:	cmp	w10, #0x10, lsl #12
   22044:	csel	w12, w12, w10, hi  // hi = pmore
   22048:	add	x22, x9, w12, uxtw #3
   2204c:	ldr	x10, [x22]
   22050:	cbz	x10, 220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   22054:	cmp	x10, x19
   22058:	b.eq	220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   2205c:	add	w10, w12, w11
   22060:	mov	w12, #0xfffeffff            	// #-65537
   22064:	add	w12, w10, w12
   22068:	cmp	w10, #0x10, lsl #12
   2206c:	csel	w12, w12, w10, hi  // hi = pmore
   22070:	add	x22, x9, w12, uxtw #3
   22074:	ldr	x10, [x22]
   22078:	cbz	x10, 220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>
   2207c:	cmp	x10, x19
   22080:	b.eq	220b0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x134>  // b.none
   22084:	add	w10, w12, w11
   22088:	mov	w11, #0xfffeffff            	// #-65537
   2208c:	add	w11, w10, w11
   22090:	cmp	w10, #0x10, lsl #12
   22094:	csel	w10, w11, w10, hi  // hi = pmore
   22098:	add	x9, x9, w10, uxtw #3
   2209c:	ldr	x10, [x9]
   220a0:	cmp	x10, x19
   220a4:	ccmp	x10, #0x0, #0x4, ne  // ne = any
   220a8:	csel	x22, x9, x8, eq  // eq = none
   220ac:	ldr	x10, [x22]
   220b0:	cmp	x10, x19
   220b4:	b.ne	220dc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x160>  // b.any
   220b8:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   220bc:	ldr	x9, [x9, #3768]
   220c0:	and	x8, x19, #0x7f
   220c4:	mov	w0, #0x1                   	// #1
   220c8:	str	x19, [x9, x8, lsl #3]
   220cc:	ldp	x20, x19, [sp, #32]
   220d0:	ldp	x22, x21, [sp, #16]
   220d4:	ldp	x30, x23, [sp], #48
   220d8:	ret
   220dc:	ldr	x23, [x0]
   220e0:	mov	w1, #0x10                  	// #16
   220e4:	sub	x21, x23, #0x10
   220e8:	mov	x0, x21
   220ec:	bl	14be0 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   220f0:	tbz	w0, #0, 2214c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   220f4:	ldur	x0, [x23, #-8]
   220f8:	cbz	x0, 220cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x150>
   220fc:	ldr	x21, [x21]
   22100:	add	x8, x21, #0x100, lsl #12
   22104:	cmp	x8, #0x200, lsl #12
   22108:	b.hi	2214c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>  // b.pmore
   2210c:	adrp	x1, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22110:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22114:	ldr	x1, [x1, #3904]
   22118:	ldr	x2, [x2, #4064]
   2211c:	mov	x3, xzr
   22120:	bl	47b0 <__dynamic_cast@plt>
   22124:	cbz	x0, 220cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x150>
   22128:	neg	x2, x21
   2212c:	mov	x1, x20
   22130:	bl	22160 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e4>
   22134:	tbz	w0, #0, 2214c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1d0>
   22138:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   2213c:	ldr	x9, [x9, #3768]
   22140:	and	x8, x19, #0x7f
   22144:	str	x19, [x22]
   22148:	b	220c4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x148>
   2214c:	mov	w0, wzr
   22150:	ldp	x20, x19, [sp, #32]
   22154:	ldp	x22, x21, [sp, #16]
   22158:	ldp	x30, x23, [sp], #48
   2215c:	ret
   22160:	stp	x30, x23, [sp, #-48]!
   22164:	stp	x22, x21, [sp, #16]
   22168:	stp	x20, x19, [sp, #32]
   2216c:	mov	x19, x1
   22170:	mov	x21, x0
   22174:	ldr	x0, [x0, #8]
   22178:	ldr	x1, [x1, #8]
   2217c:	mov	x20, x2
   22180:	cmp	x0, x1
   22184:	b.eq	221e4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x268>  // b.none
   22188:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   2218c:	adrp	x23, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22190:	ldr	x22, [x22, #4064]
   22194:	ldr	x23, [x23, #3944]
   22198:	ldrb	w8, [x0]
   2219c:	cmp	w8, #0x2a
   221a0:	b.eq	221b8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23c>  // b.none
   221a4:	ldrb	w8, [x1]
   221a8:	cmp	w8, #0x2a
   221ac:	b.eq	221b8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x23c>  // b.none
   221b0:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   221b4:	cbz	w0, 221e4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x268>
   221b8:	mov	x0, x21
   221bc:	mov	x1, x22
   221c0:	mov	x2, x23
   221c4:	mov	x3, xzr
   221c8:	bl	47b0 <__dynamic_cast@plt>
   221cc:	cbz	x0, 221fc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x280>
   221d0:	ldr	x21, [x0, #16]
   221d4:	ldr	x1, [x19, #8]
   221d8:	ldr	x0, [x21, #8]
   221dc:	cmp	x0, x1
   221e0:	b.ne	22198 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x21c>  // b.any
   221e4:	cmp	x20, #0x0
   221e8:	cset	w0, eq  // eq = none
   221ec:	ldp	x20, x19, [sp, #32]
   221f0:	ldp	x22, x21, [sp, #16]
   221f4:	ldp	x30, x23, [sp], #48
   221f8:	ret
   221fc:	adrp	x1, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22200:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22204:	ldr	x1, [x1, #4064]
   22208:	ldr	x2, [x2, #3896]
   2220c:	mov	x0, x21
   22210:	mov	x3, xzr
   22214:	bl	47b0 <__dynamic_cast@plt>
   22218:	cbz	x0, 221ec <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x270>
   2221c:	ldr	w8, [x0, #20]
   22220:	mov	x21, x0
   22224:	cbz	w8, 22264 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2e8>
   22228:	mov	w8, wzr
   2222c:	add	x9, x21, w8, uxtw #4
   22230:	ldr	x9, [x9, #32]
   22234:	tbnz	w9, #0, 22278 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2fc>
   22238:	mov	w22, w8
   2223c:	add	x8, x21, x22, lsl #4
   22240:	ldr	x0, [x8, #24]
   22244:	sub	x2, x20, x9, asr #8
   22248:	mov	x1, x19
   2224c:	bl	22160 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x1e4>
   22250:	tbnz	w0, #0, 22278 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2fc>
   22254:	ldr	w9, [x21, #20]
   22258:	add	w8, w22, #0x1
   2225c:	cmp	w8, w9
   22260:	b.ne	2222c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x2b0>  // b.any
   22264:	mov	w0, wzr
   22268:	ldp	x20, x19, [sp, #32]
   2226c:	ldp	x22, x21, [sp, #16]
   22270:	ldp	x30, x23, [sp], #48
   22274:	ret
   22278:	mov	w0, #0x1                   	// #1
   2227c:	ldp	x20, x19, [sp, #32]
   22280:	ldp	x22, x21, [sp, #16]
   22284:	ldp	x30, x23, [sp], #48
   22288:	ret
   2228c:	stp	x30, x21, [sp, #-32]!
   22290:	stp	x20, x19, [sp, #16]
   22294:	sub	x20, x0, #0x10
   22298:	mov	x21, x0
   2229c:	mov	w1, #0x10                  	// #16
   222a0:	mov	x0, x20
   222a4:	mov	x19, x8
   222a8:	bl	14be0 <__sanitizer_sandbox_on_notify@@Base+0x10b0>
   222ac:	tbz	w0, #0, 222e8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x36c>
   222b0:	ldur	x21, [x21, #-8]
   222b4:	cbz	x21, 222e8 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x36c>
   222b8:	ldr	x20, [x20]
   222bc:	add	x8, x20, #0x100, lsl #12
   222c0:	cmp	x8, #0x200, lsl #12
   222c4:	b.hi	222ec <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x370>  // b.pmore
   222c8:	neg	x20, x20
   222cc:	mov	x0, x21
   222d0:	mov	x1, x20
   222d4:	bl	22320 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3a4>
   222d8:	ldr	x9, [x21, #8]
   222dc:	cbz	x0, 22304 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x388>
   222e0:	ldr	x8, [x0, #8]
   222e4:	b	2230c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x390>
   222e8:	mov	x20, xzr
   222ec:	mov	x8, xzr
   222f0:	str	xzr, [x19]
   222f4:	stp	x20, x8, [x19, #8]
   222f8:	ldp	x20, x19, [sp, #16]
   222fc:	ldp	x30, x21, [sp], #32
   22300:	ret
   22304:	adrp	x8, 29000 <__interceptor_sigaction@@Base+0x6a44>
   22308:	add	x8, x8, #0x30e
   2230c:	str	x9, [x19]
   22310:	stp	x20, x8, [x19, #8]
   22314:	ldp	x20, x19, [sp, #16]
   22318:	ldp	x30, x21, [sp], #32
   2231c:	ret
   22320:	str	x30, [sp, #-48]!
   22324:	stp	x22, x21, [sp, #16]
   22328:	stp	x20, x19, [sp, #32]
   2232c:	mov	x20, x0
   22330:	cbz	x1, 223d0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   22334:	cbz	x20, 223d0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   22338:	adrp	x21, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   2233c:	adrp	x22, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22340:	ldr	x21, [x21, #4064]
   22344:	ldr	x22, [x22, #3944]
   22348:	mov	x19, x1
   2234c:	mov	x0, x20
   22350:	mov	x1, x21
   22354:	mov	x2, x22
   22358:	mov	x3, xzr
   2235c:	bl	47b0 <__dynamic_cast@plt>
   22360:	cbz	x0, 22370 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3f4>
   22364:	ldr	x20, [x0, #16]
   22368:	cbnz	x20, 2234c <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3d0>
   2236c:	b	223d0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   22370:	adrp	x1, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22374:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22378:	ldr	x1, [x1, #4064]
   2237c:	ldr	x2, [x2, #3896]
   22380:	mov	x0, x20
   22384:	mov	x3, xzr
   22388:	bl	47b0 <__dynamic_cast@plt>
   2238c:	cbz	x0, 223cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   22390:	ldr	w21, [x0, #20]
   22394:	cbz	w21, 223cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>
   22398:	add	x22, x0, #0x20
   2239c:	b	223ac <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x430>
   223a0:	subs	w21, w21, #0x1
   223a4:	add	x22, x22, #0x10
   223a8:	b.eq	223cc <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x450>  // b.none
   223ac:	ldr	x8, [x22]
   223b0:	tbnz	w8, #0, 223a0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x424>
   223b4:	ldur	x0, [x22, #-8]
   223b8:	sub	x1, x19, x8, asr #8
   223bc:	bl	22320 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x3a4>
   223c0:	cbz	x0, 223a0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x424>
   223c4:	mov	x20, x0
   223c8:	b	223d0 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x454>
   223cc:	mov	x20, xzr
   223d0:	mov	x0, x20
   223d4:	ldp	x20, x19, [sp, #32]
   223d8:	ldp	x22, x21, [sp, #16]
   223dc:	ldr	x30, [sp], #48
   223e0:	ret
   223e4:	str	x30, [sp, #-16]!
   223e8:	ldr	x0, [x0, #8]
   223ec:	ldrb	w8, [x0]
   223f0:	cmp	w8, #0x2a
   223f4:	b.ne	22404 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x488>  // b.any
   223f8:	mov	w0, wzr
   223fc:	ldr	x30, [sp], #16
   22400:	ret
   22404:	ldr	x1, [x1, #8]
   22408:	ldrb	w8, [x1]
   2240c:	cmp	w8, #0x2a
   22410:	b.ne	22420 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x4a4>  // b.any
   22414:	mov	w0, wzr
   22418:	ldr	x30, [sp], #16
   2241c:	ret
   22420:	bl	c154 <__sanitizer_set_report_fd@@Base+0x28a0>
   22424:	cmp	w0, #0x0
   22428:	cset	w0, eq  // eq = none
   2242c:	ldr	x30, [sp], #16
   22430:	ret
   22434:	sub	sp, sp, #0x40
   22438:	stp	x30, xzr, [sp, #16]
   2243c:	stp	x22, x21, [sp, #32]
   22440:	stp	x20, x19, [sp, #48]
   22444:	mov	w20, w5
   22448:	mov	x19, x2
   2244c:	mov	x21, x1
   22450:	mov	x22, x0
   22454:	str	xzr, [sp, #8]
   22458:	tbz	w4, #0, 22490 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x514>
   2245c:	add	x1, sp, #0x18
   22460:	add	x2, sp, #0x8
   22464:	mov	w0, wzr
   22468:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   2246c:	ldr	x5, [sp, #24]
   22470:	ldr	x6, [sp, #8]
   22474:	mov	w7, #0x1                   	// #1
   22478:	mov	x0, x22
   2247c:	mov	w1, w20
   22480:	mov	x2, x21
   22484:	mov	x3, x19
   22488:	mov	x4, xzr
   2248c:	b	224b4 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x538>
   22490:	mov	x8, x3
   22494:	mov	x0, x22
   22498:	mov	w1, w20
   2249c:	mov	x2, x21
   224a0:	mov	x3, x19
   224a4:	mov	x4, x8
   224a8:	mov	x5, xzr
   224ac:	mov	x6, xzr
   224b0:	mov	w7, wzr
   224b4:	bl	17d78 <__sanitizer_cov_pcs_init@@Base+0x1694>
   224b8:	ldp	x20, x19, [sp, #48]
   224bc:	ldp	x22, x21, [sp, #32]
   224c0:	ldr	x30, [sp, #16]
   224c4:	add	sp, sp, #0x40
   224c8:	ret

00000000000224cc <__sanitizer_print_stack_trace@@Base>:
   224cc:	stp	x29, x30, [sp, #-32]!
   224d0:	stp	x28, x19, [sp, #16]
   224d4:	mov	x29, sp
   224d8:	sub	sp, sp, #0x830
   224dc:	bl	17760 <__sanitizer_cov_pcs_init@@Base+0x107c>
   224e0:	adrp	x9, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   224e4:	ldr	x9, [x9, #4056]
   224e8:	add	x8, sp, #0x8
   224ec:	mov	x19, x0
   224f0:	add	x8, x8, #0x10
   224f4:	ldrb	w9, [x9, #33]
   224f8:	stp	x8, xzr, [sp, #8]
   224fc:	str	x29, [sp, #2072]
   22500:	stp	xzr, xzr, [x29, #-16]
   22504:	cbz	w9, 22538 <__sanitizer_print_stack_trace@@Base+0x6c>
   22508:	sub	x1, x29, #0x8
   2250c:	sub	x2, x29, #0x10
   22510:	mov	w0, wzr
   22514:	bl	13b8c <__sanitizer_sandbox_on_notify@@Base+0x5c>
   22518:	ldp	x6, x5, [x29, #-16]
   2251c:	add	x0, sp, #0x8
   22520:	mov	w1, #0x100                 	// #256
   22524:	mov	w7, #0x1                   	// #1
   22528:	mov	x2, x19
   2252c:	mov	x3, x29
   22530:	mov	x4, xzr
   22534:	b	22558 <__sanitizer_print_stack_trace@@Base+0x8c>
   22538:	add	x0, sp, #0x8
   2253c:	mov	w1, #0x100                 	// #256
   22540:	mov	x2, x19
   22544:	mov	x3, x29
   22548:	mov	x4, xzr
   2254c:	mov	x5, xzr
   22550:	mov	x6, xzr
   22554:	mov	w7, wzr
   22558:	bl	17d78 <__sanitizer_cov_pcs_init@@Base+0x1694>
   2255c:	add	x0, sp, #0x8
   22560:	bl	17a60 <__sanitizer_cov_pcs_init@@Base+0x137c>
   22564:	add	sp, sp, #0x830
   22568:	ldp	x28, x19, [sp, #16]
   2256c:	ldp	x29, x30, [sp], #32
   22570:	ret

0000000000022574 <__interceptor_signal@@Base>:
   22574:	str	x30, [sp, #-32]!
   22578:	stp	x20, x19, [sp, #16]
   2257c:	mov	x19, x1
   22580:	mov	w20, w0
   22584:	bl	e1b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   22588:	cmp	w0, #0x2
   2258c:	b.ne	225a0 <__interceptor_signal@@Base+0x2c>  // b.any
   22590:	ldp	x20, x19, [sp, #16]
   22594:	mov	x0, xzr
   22598:	ldr	x30, [sp], #32
   2259c:	ret
   225a0:	adrp	x8, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   225a4:	ldr	x2, [x8, #672]
   225a8:	mov	w0, w20
   225ac:	mov	x1, x19
   225b0:	ldp	x20, x19, [sp, #16]
   225b4:	ldr	x30, [sp], #32
   225b8:	br	x2

00000000000225bc <__interceptor_sigaction@@Base>:
   225bc:	stp	x30, x21, [sp, #-32]!
   225c0:	stp	x20, x19, [sp, #16]
   225c4:	mov	x19, x2
   225c8:	mov	x20, x1
   225cc:	mov	w21, w0
   225d0:	bl	e1b0 <__sanitizer_set_report_fd@@Base+0x48fc>
   225d4:	cmp	w0, #0x2
   225d8:	b.ne	225ec <__interceptor_sigaction@@Base+0x30>  // b.any
   225dc:	ldp	x20, x19, [sp, #16]
   225e0:	mov	w0, wzr
   225e4:	ldp	x30, x21, [sp], #32
   225e8:	ret
   225ec:	adrp	x8, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   225f0:	ldr	x3, [x8, #680]
   225f4:	mov	x1, x20
   225f8:	mov	x2, x19
   225fc:	ldp	x20, x19, [sp, #16]
   22600:	mov	w0, w21
   22604:	ldp	x30, x21, [sp], #32
   22608:	br	x3
   2260c:	adrp	x8, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   22610:	ldr	x3, [x8, #680]
   22614:	br	x3
   22618:	str	x30, [sp, #-16]!
   2261c:	adrp	x8, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   22620:	ldrb	w8, [x8, #688]
   22624:	tbz	w8, #0, 22630 <__interceptor_sigaction@@Base+0x74>
   22628:	ldr	x30, [sp], #16
   2262c:	ret
   22630:	adrp	x9, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   22634:	add	x9, x9, #0x2b0
   22638:	ldrb	w10, [x9, #1]
   2263c:	mov	w8, #0x1                   	// #1
   22640:	strb	w8, [x9]
   22644:	cmp	w10, #0x1
   22648:	b.eq	226ac <__interceptor_sigaction@@Base+0xf0>  // b.none
   2264c:	adrp	x9, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   22650:	strb	w8, [x9, #689]
   22654:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22658:	adrp	x3, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   2265c:	ldr	x2, [x2, #3744]
   22660:	ldr	x3, [x3, #4000]
   22664:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   22668:	adrp	x1, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   2266c:	add	x0, x0, #0x9f0
   22670:	add	x1, x1, #0x2a0
   22674:	bl	22748 <__interceptor_sigaction@@Base+0x18c>
   22678:	adrp	x2, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   2267c:	adrp	x3, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22680:	ldr	x2, [x2, #3936]
   22684:	ldr	x3, [x3, #3880]
   22688:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   2268c:	adrp	x1, 996000 <__ubsan_vptr_type_cache@@Base+0x80168>
   22690:	add	x0, x0, #0x9f7
   22694:	add	x1, x1, #0x2a8
   22698:	bl	22748 <__interceptor_sigaction@@Base+0x18c>
   2269c:	adrp	x0, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   226a0:	add	x0, x0, #0x6cc
   226a4:	ldr	x30, [sp], #16
   226a8:	b	14a00 <__sanitizer_sandbox_on_notify@@Base+0xed0>
   226ac:	adrp	x0, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   226b0:	adrp	x2, 2a000 <__interceptor_sigaction@@Base+0x7a44>
   226b4:	add	x0, x0, #0x96b
   226b8:	add	x2, x2, #0x9d4
   226bc:	mov	w1, #0x50                  	// #80
   226c0:	mov	x3, xzr
   226c4:	mov	x4, xzr
   226c8:	bl	135dc <__sanitizer_on_print@@Base+0x36dc>
   226cc:	str	x30, [sp, #-32]!
   226d0:	stp	x20, x19, [sp, #16]
   226d4:	mov	x19, x2
   226d8:	mov	x20, x1
   226dc:	bl	d174 <__sanitizer_set_report_fd@@Base+0x38c0>
   226e0:	mov	x2, x0
   226e4:	mov	x0, x20
   226e8:	mov	x1, x19
   226ec:	ldp	x20, x19, [sp, #16]
   226f0:	adrp	x3, 22000 <__ubsan_handle_function_type_mismatch_v1_abort@@Base+0x84>
   226f4:	add	x3, x3, #0x704
   226f8:	mov	x4, xzr
   226fc:	ldr	x30, [sp], #32
   22700:	b	1c328 <__sanitizer_get_module_and_offset_for_pc@@Base+0x41f0>
   22704:	str	x30, [sp, #-32]!
   22708:	stp	x20, x19, [sp, #16]
   2270c:	mov	x19, x0
   22710:	ldr	x0, [x0, #24]
   22714:	mov	x20, x2
   22718:	bl	17758 <__sanitizer_cov_pcs_init@@Base+0x1074>
   2271c:	adrp	x8, 41000 <__interceptor_sigaction@@Base+0x1ea44>
   22720:	ldr	x3, [x19, #40]
   22724:	ldr	x4, [x19, #8]
   22728:	ldr	x8, [x8, #4056]
   2272c:	mov	x2, x0
   22730:	mov	x0, x20
   22734:	ldp	x20, x19, [sp, #16]
   22738:	ldrb	w5, [x8, #33]
   2273c:	mov	w1, #0x100                 	// #256
   22740:	ldr	x30, [sp], #32
   22744:	b	1ca6c <__sanitizer_get_module_and_offset_for_pc@@Base+0x4934>
   22748:	str	x30, [sp, #-48]!
   2274c:	stp	x22, x21, [sp, #16]
   22750:	stp	x20, x19, [sp, #32]
   22754:	mov	x22, x0
   22758:	mov	x19, x1
   2275c:	mov	x0, #0xffffffffffffffff    	// #-1
   22760:	mov	x1, x22
   22764:	mov	x20, x3
   22768:	mov	x21, x2
   2276c:	bl	46b0 <dlsym@plt>
   22770:	cbnz	x0, 22784 <__interceptor_sigaction@@Base+0x1c8>
   22774:	mov	x1, x22
   22778:	bl	46b0 <dlsym@plt>
   2277c:	cmp	x0, x20
   22780:	csel	x0, xzr, x0, eq  // eq = none
   22784:	cmp	x0, #0x0
   22788:	str	x0, [x19]
   2278c:	cset	w8, ne  // ne = any
   22790:	cmp	x21, x20
   22794:	ldp	x20, x19, [sp, #32]
   22798:	ldp	x22, x21, [sp, #16]
   2279c:	cset	w9, eq  // eq = none
   227a0:	and	w8, w9, w8
   227a4:	mov	w0, w8
   227a8:	ldr	x30, [sp], #48
   227ac:	ret
   227b0:	stp	x30, x21, [sp, #-32]!
   227b4:	stp	x20, x19, [sp, #16]
   227b8:	mov	x21, x2
   227bc:	mov	x2, x1
   227c0:	mov	x1, x0
   227c4:	mov	x0, #0xffffffffffffffff    	// #-1
   227c8:	mov	x19, x4
   227cc:	mov	x20, x3
   227d0:	bl	4650 <dlvsym@plt>
   227d4:	cmp	x0, #0x0
   227d8:	str	x0, [x21]
   227dc:	cset	w8, ne  // ne = any
   227e0:	cmp	x20, x19
   227e4:	ldp	x20, x19, [sp, #16]
   227e8:	cset	w9, eq  // eq = none
   227ec:	and	w8, w9, w8
   227f0:	mov	w0, w8
   227f4:	ldp	x30, x21, [sp], #32
   227f8:	ret
   227fc:	nop
   22800:	adrp	x2, 42000 <__interceptor_sigaction@@Base+0x1fa44>
   22804:	mov	x1, #0x0                   	// #0
   22808:	ldr	x2, [x2, #472]
   2280c:	b	47c0 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000022810 <.fini>:
   22810:	stp	x29, x30, [sp, #-16]!
   22814:	mov	x29, sp
   22818:	ldp	x29, x30, [sp], #16
   2281c:	ret
