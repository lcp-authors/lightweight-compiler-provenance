
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_md5.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 12000 <PyInit__md5@@Base+0xff8c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 13000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__md5@@Base-0x1254>:
     e20:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     e38:	add	x0, x0, #0x460
     e3c:	adrp	x1, 13000 <PyInit__md5@@Base+0x10f8c>
     e40:	add	x1, x1, #0x460
     e44:	cmp	x0, x1
     e48:	b.eq	e74 <_Py_strhex@plt+0x64>  // b.none
     e4c:	adrp	x1, 12000 <PyInit__md5@@Base+0xff8c>
     e50:	ldr	x1, [x1, #4008]
     e54:	cbz	x1, e74 <_Py_strhex@plt+0x64>
     e58:	stp	x29, x30, [sp, #-16]!
     e5c:	mov	x29, sp
     e60:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     e64:	add	x0, x0, #0x460
     e68:	blr	x1
     e6c:	ldp	x29, x30, [sp], #16
     e70:	ret
     e74:	ret
     e78:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     e7c:	add	x0, x0, #0x460
     e80:	adrp	x1, 13000 <PyInit__md5@@Base+0x10f8c>
     e84:	add	x1, x1, #0x460
     e88:	sub	x0, x0, x1
     e8c:	lsr	x1, x0, #63
     e90:	add	x0, x1, x0, asr #3
     e94:	cmp	xzr, x0, asr #1
     e98:	b.eq	ec8 <_Py_strhex@plt+0xb8>  // b.none
     e9c:	asr	x1, x0, #1
     ea0:	adrp	x2, 12000 <PyInit__md5@@Base+0xff8c>
     ea4:	ldr	x2, [x2, #4064]
     ea8:	cbz	x2, ec8 <_Py_strhex@plt+0xb8>
     eac:	stp	x29, x30, [sp, #-16]!
     eb0:	mov	x29, sp
     eb4:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     eb8:	add	x0, x0, #0x460
     ebc:	blr	x2
     ec0:	ldp	x29, x30, [sp], #16
     ec4:	ret
     ec8:	ret
     ecc:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     ed0:	ldrb	w0, [x0, #1120]
     ed4:	cbnz	w0, f10 <_Py_strhex@plt+0x100>
     ed8:	stp	x29, x30, [sp, #-16]!
     edc:	mov	x29, sp
     ee0:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
     ee4:	ldr	x0, [x0, #4016]
     ee8:	cbz	x0, ef8 <_Py_strhex@plt+0xe8>
     eec:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     ef0:	ldr	x0, [x0, #144]
     ef4:	bl	d20 <__cxa_finalize@plt>
     ef8:	bl	e34 <_Py_strhex@plt+0x24>
     efc:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
     f00:	mov	w1, #0x1                   	// #1
     f04:	strb	w1, [x0, #1120]
     f08:	ldp	x29, x30, [sp], #16
     f0c:	ret
     f10:	ret
     f14:	stp	x29, x30, [sp, #-16]!
     f18:	mov	x29, sp
     f1c:	bl	e78 <_Py_strhex@plt+0x68>
     f20:	ldp	x29, x30, [sp], #16
     f24:	ret
     f28:	stp	x29, x30, [sp, #-144]!
     f2c:	mov	x29, sp
     f30:	stp	x19, x20, [sp, #16]
     f34:	stp	x21, x22, [sp, #32]
     f38:	stp	x23, x24, [sp, #48]
     f3c:	str	x25, [sp, #64]
     f40:	add	x4, sp, #0x50
     f44:	add	x6, sp, #0x90
     f48:	ldrb	w2, [x1, #3]
     f4c:	ldrb	w3, [x1, #2]
     f50:	lsl	w3, w3, #16
     f54:	orr	w2, w3, w2, lsl #24
     f58:	ldrb	w3, [x1, #1]
     f5c:	ldrb	w5, [x1], #4
     f60:	orr	w3, w5, w3, lsl #8
     f64:	orr	w2, w2, w3
     f68:	str	w2, [x4], #4
     f6c:	cmp	x4, x6
     f70:	b.ne	f48 <_Py_strhex@plt+0x138>  // b.any
     f74:	ldr	w14, [x0, #8]
     f78:	ldr	w11, [x0, #12]
     f7c:	ldr	w9, [x0, #16]
     f80:	ldr	w10, [x0, #20]
     f84:	eor	w2, w9, w10
     f88:	and	w2, w2, w11
     f8c:	eor	w2, w2, w10
     f90:	add	w1, w2, w14
     f94:	ldr	w19, [sp, #80]
     f98:	mov	w2, #0xa478                	// #42104
     f9c:	movk	w2, #0xd76a, lsl #16
     fa0:	add	w2, w19, w2
     fa4:	add	w2, w2, w1
     fa8:	ror	w2, w2, #25
     fac:	add	w2, w2, w11
     fb0:	eor	w4, w11, w9
     fb4:	and	w4, w4, w2
     fb8:	eor	w4, w4, w9
     fbc:	add	w1, w4, w10
     fc0:	ldr	w5, [sp, #84]
     fc4:	mov	w4, #0xb756                	// #46934
     fc8:	movk	w4, #0xe8c7, lsl #16
     fcc:	add	w4, w5, w4
     fd0:	add	w4, w4, w1
     fd4:	ror	w4, w4, #20
     fd8:	add	w4, w4, w2
     fdc:	eor	w6, w11, w2
     fe0:	and	w6, w6, w4
     fe4:	eor	w6, w6, w11
     fe8:	add	w1, w6, w9
     fec:	ldr	w3, [sp, #88]
     ff0:	mov	w6, #0x70db                	// #28891
     ff4:	movk	w6, #0x2420, lsl #16
     ff8:	add	w6, w3, w6
     ffc:	add	w6, w6, w1
    1000:	ror	w6, w6, #15
    1004:	add	w6, w6, w4
    1008:	eor	w1, w2, w4
    100c:	and	w1, w1, w6
    1010:	eor	w1, w1, w2
    1014:	add	w7, w1, w11
    1018:	ldr	w23, [sp, #92]
    101c:	mov	w1, #0xceee                	// #52974
    1020:	movk	w1, #0xc1bd, lsl #16
    1024:	add	w1, w23, w1
    1028:	add	w1, w1, w7
    102c:	ror	w1, w1, #10
    1030:	add	w1, w1, w6
    1034:	eor	w7, w4, w6
    1038:	and	w7, w7, w1
    103c:	eor	w7, w7, w4
    1040:	add	w8, w7, w2
    1044:	ldr	w2, [sp, #96]
    1048:	mov	w7, #0xfaf                 	// #4015
    104c:	movk	w7, #0xf57c, lsl #16
    1050:	add	w7, w2, w7
    1054:	add	w7, w7, w8
    1058:	ror	w7, w7, #25
    105c:	add	w7, w7, w1
    1060:	eor	w8, w6, w1
    1064:	and	w8, w8, w7
    1068:	eor	w8, w8, w6
    106c:	add	w8, w8, w4
    1070:	ldr	w16, [sp, #100]
    1074:	mov	w4, #0xc62a                	// #50730
    1078:	movk	w4, #0x4787, lsl #16
    107c:	add	w4, w16, w4
    1080:	add	w4, w4, w8
    1084:	ror	w4, w4, #20
    1088:	add	w4, w4, w7
    108c:	eor	w8, w1, w7
    1090:	and	w8, w8, w4
    1094:	eor	w8, w8, w1
    1098:	add	w8, w8, w6
    109c:	ldr	w12, [sp, #104]
    10a0:	mov	w6, #0x4613                	// #17939
    10a4:	movk	w6, #0xa830, lsl #16
    10a8:	add	w6, w12, w6
    10ac:	add	w6, w6, w8
    10b0:	ror	w6, w6, #15
    10b4:	add	w6, w6, w4
    10b8:	eor	w8, w7, w4
    10bc:	and	w8, w8, w6
    10c0:	eor	w8, w8, w7
    10c4:	add	w8, w8, w1
    10c8:	ldr	w18, [sp, #108]
    10cc:	mov	w1, #0x9501                	// #38145
    10d0:	movk	w1, #0xfd46, lsl #16
    10d4:	add	w1, w18, w1
    10d8:	add	w1, w1, w8
    10dc:	ror	w1, w1, #10
    10e0:	add	w1, w1, w6
    10e4:	eor	w8, w4, w6
    10e8:	and	w8, w8, w1
    10ec:	eor	w8, w8, w4
    10f0:	add	w13, w8, w7
    10f4:	ldr	w7, [sp, #112]
    10f8:	mov	w8, #0x98d8                	// #39128
    10fc:	movk	w8, #0x6980, lsl #16
    1100:	add	w8, w7, w8
    1104:	add	w8, w8, w13
    1108:	ror	w8, w8, #25
    110c:	add	w8, w8, w1
    1110:	eor	w15, w6, w1
    1114:	and	w15, w15, w8
    1118:	eor	w15, w15, w6
    111c:	add	w15, w15, w4
    1120:	ldr	w13, [sp, #116]
    1124:	mov	w4, #0xf7af                	// #63407
    1128:	movk	w4, #0x8b44, lsl #16
    112c:	add	w4, w13, w4
    1130:	add	w4, w4, w15
    1134:	ror	w4, w4, #20
    1138:	add	w4, w4, w8
    113c:	eor	w15, w1, w8
    1140:	and	w15, w15, w4
    1144:	eor	w15, w15, w1
    1148:	add	w15, w15, w6
    114c:	ldr	w6, [sp, #120]
    1150:	sub	w17, w6, #0xa, lsl #12
    1154:	sub	w17, w17, #0x44f
    1158:	add	w17, w17, w15
    115c:	ror	w17, w17, #15
    1160:	add	w17, w17, w4
    1164:	eor	w20, w8, w4
    1168:	and	w20, w20, w17
    116c:	eor	w20, w20, w8
    1170:	add	w20, w20, w1
    1174:	ldr	w15, [sp, #124]
    1178:	mov	w1, #0xd7be                	// #55230
    117c:	movk	w1, #0x895c, lsl #16
    1180:	add	w1, w15, w1
    1184:	add	w1, w1, w20
    1188:	ror	w1, w1, #10
    118c:	add	w1, w1, w17
    1190:	eor	w22, w4, w17
    1194:	and	w22, w22, w1
    1198:	eor	w22, w22, w4
    119c:	add	w20, w22, w8
    11a0:	ldr	w8, [sp, #128]
    11a4:	mov	w22, #0x1122                	// #4386
    11a8:	movk	w22, #0x6b90, lsl #16
    11ac:	add	w22, w8, w22
    11b0:	add	w22, w22, w20
    11b4:	ror	w22, w22, #25
    11b8:	add	w22, w22, w1
    11bc:	eor	w24, w17, w1
    11c0:	and	w24, w24, w22
    11c4:	eor	w24, w24, w17
    11c8:	add	w20, w24, w4
    11cc:	ldr	w4, [sp, #132]
    11d0:	mov	w24, #0x7193                	// #29075
    11d4:	movk	w24, #0xfd98, lsl #16
    11d8:	add	w24, w4, w24
    11dc:	add	w24, w24, w20
    11e0:	ror	w24, w24, #20
    11e4:	add	w24, w24, w22
    11e8:	eor	w21, w1, w22
    11ec:	and	w21, w21, w24
    11f0:	eor	w21, w21, w1
    11f4:	add	w20, w21, w17
    11f8:	ldr	w17, [sp, #136]
    11fc:	mov	w21, #0x438e                	// #17294
    1200:	movk	w21, #0xa679, lsl #16
    1204:	add	w21, w17, w21
    1208:	add	w21, w21, w20
    120c:	ror	w21, w21, #15
    1210:	add	w21, w21, w24
    1214:	eor	w20, w22, w24
    1218:	and	w20, w20, w21
    121c:	eor	w20, w20, w22
    1220:	add	w30, w20, w1
    1224:	ldr	w1, [sp, #140]
    1228:	mov	w20, #0x821                 	// #2081
    122c:	movk	w20, #0x49b4, lsl #16
    1230:	add	w20, w1, w20
    1234:	add	w20, w20, w30
    1238:	ror	w20, w20, #10
    123c:	add	w20, w20, w21
    1240:	eor	w30, w21, w20
    1244:	and	w30, w30, w24
    1248:	eor	w30, w30, w21
    124c:	add	w22, w30, w22
    1250:	mov	w30, #0x2562                	// #9570
    1254:	movk	w30, #0xf61e, lsl #16
    1258:	add	w30, w5, w30
    125c:	add	w30, w30, w22
    1260:	ror	w30, w30, #27
    1264:	add	w30, w30, w20
    1268:	eor	w22, w20, w30
    126c:	and	w22, w22, w21
    1270:	eor	w22, w22, w20
    1274:	add	w24, w22, w24
    1278:	mov	w22, #0xb340                	// #45888
    127c:	movk	w22, #0xc040, lsl #16
    1280:	add	w22, w12, w22
    1284:	add	w22, w22, w24
    1288:	ror	w22, w22, #23
    128c:	add	w22, w22, w30
    1290:	eor	w24, w30, w22
    1294:	and	w24, w24, w20
    1298:	eor	w24, w24, w30
    129c:	add	w24, w24, w21
    12a0:	mov	w21, #0x5a51                	// #23121
    12a4:	movk	w21, #0x265e, lsl #16
    12a8:	add	w21, w15, w21
    12ac:	add	w21, w21, w24
    12b0:	ror	w21, w21, #18
    12b4:	add	w21, w21, w22
    12b8:	eor	w24, w22, w21
    12bc:	and	w24, w24, w30
    12c0:	eor	w24, w24, w22
    12c4:	add	w24, w24, w20
    12c8:	mov	w20, #0xc7aa                	// #51114
    12cc:	movk	w20, #0xe9b6, lsl #16
    12d0:	add	w20, w19, w20
    12d4:	add	w20, w20, w24
    12d8:	ror	w20, w20, #12
    12dc:	add	w20, w20, w21
    12e0:	eor	w24, w21, w20
    12e4:	and	w24, w24, w22
    12e8:	eor	w24, w24, w21
    12ec:	add	w24, w24, w30
    12f0:	mov	w30, #0x105d                	// #4189
    12f4:	movk	w30, #0xd62f, lsl #16
    12f8:	add	w30, w16, w30
    12fc:	add	w30, w30, w24
    1300:	ror	w30, w30, #27
    1304:	add	w30, w30, w20
    1308:	eor	w24, w20, w30
    130c:	and	w24, w24, w21
    1310:	eor	w24, w24, w20
    1314:	add	w24, w24, w22
    1318:	mov	w22, #0x1453                	// #5203
    131c:	movk	w22, #0x244, lsl #16
    1320:	add	w22, w6, w22
    1324:	add	w22, w22, w24
    1328:	ror	w22, w22, #23
    132c:	add	w22, w22, w30
    1330:	eor	w24, w30, w22
    1334:	and	w24, w24, w20
    1338:	eor	w24, w24, w30
    133c:	add	w24, w24, w21
    1340:	mov	w21, #0xe681                	// #59009
    1344:	movk	w21, #0xd8a1, lsl #16
    1348:	add	w21, w1, w21
    134c:	add	w21, w21, w24
    1350:	ror	w21, w21, #18
    1354:	add	w21, w21, w22
    1358:	eor	w24, w22, w21
    135c:	and	w24, w24, w30
    1360:	eor	w24, w24, w22
    1364:	add	w24, w24, w20
    1368:	mov	w20, #0xfbc8                	// #64456
    136c:	movk	w20, #0xe7d3, lsl #16
    1370:	add	w20, w2, w20
    1374:	add	w20, w20, w24
    1378:	ror	w20, w20, #12
    137c:	add	w20, w20, w21
    1380:	eor	w24, w21, w20
    1384:	and	w24, w24, w22
    1388:	eor	w24, w24, w21
    138c:	add	w24, w24, w30
    1390:	mov	w30, #0xcde6                	// #52710
    1394:	movk	w30, #0x21e1, lsl #16
    1398:	add	w30, w13, w30
    139c:	add	w30, w30, w24
    13a0:	ror	w30, w30, #27
    13a4:	add	w30, w30, w20
    13a8:	eor	w24, w20, w30
    13ac:	and	w24, w24, w21
    13b0:	eor	w24, w24, w20
    13b4:	add	w24, w24, w22
    13b8:	mov	w22, #0x7d6                 	// #2006
    13bc:	movk	w22, #0xc337, lsl #16
    13c0:	add	w22, w17, w22
    13c4:	add	w22, w22, w24
    13c8:	ror	w22, w22, #23
    13cc:	add	w22, w22, w30
    13d0:	eor	w24, w30, w22
    13d4:	and	w24, w24, w20
    13d8:	eor	w24, w24, w30
    13dc:	add	w24, w24, w21
    13e0:	mov	w21, #0xd87                 	// #3463
    13e4:	movk	w21, #0xf4d5, lsl #16
    13e8:	add	w21, w23, w21
    13ec:	add	w21, w21, w24
    13f0:	ror	w21, w21, #18
    13f4:	add	w21, w21, w22
    13f8:	eor	w24, w22, w21
    13fc:	and	w24, w24, w30
    1400:	eor	w24, w24, w22
    1404:	add	w24, w24, w20
    1408:	mov	w20, #0x14ed                	// #5357
    140c:	movk	w20, #0x455a, lsl #16
    1410:	add	w20, w7, w20
    1414:	add	w20, w20, w24
    1418:	ror	w20, w20, #12
    141c:	add	w20, w20, w21
    1420:	eor	w24, w21, w20
    1424:	and	w24, w24, w22
    1428:	eor	w24, w24, w21
    142c:	add	w24, w24, w30
    1430:	mov	w30, #0xe905                	// #59653
    1434:	movk	w30, #0xa9e3, lsl #16
    1438:	add	w30, w4, w30
    143c:	add	w30, w30, w24
    1440:	ror	w30, w30, #27
    1444:	add	w30, w30, w20
    1448:	eor	w24, w20, w30
    144c:	and	w24, w24, w21
    1450:	eor	w24, w24, w20
    1454:	add	w24, w24, w22
    1458:	mov	w22, #0xa3f8                	// #41976
    145c:	movk	w22, #0xfcef, lsl #16
    1460:	add	w22, w3, w22
    1464:	add	w22, w22, w24
    1468:	ror	w22, w22, #23
    146c:	add	w22, w22, w30
    1470:	eor	w24, w30, w22
    1474:	and	w24, w24, w20
    1478:	eor	w24, w24, w30
    147c:	add	w24, w24, w21
    1480:	mov	w21, #0x2d9                 	// #729
    1484:	movk	w21, #0x676f, lsl #16
    1488:	add	w21, w18, w21
    148c:	add	w21, w21, w24
    1490:	ror	w21, w21, #18
    1494:	add	w21, w21, w22
    1498:	eor	w24, w22, w21
    149c:	and	w25, w24, w30
    14a0:	eor	w25, w25, w22
    14a4:	add	w25, w25, w20
    14a8:	mov	w20, #0x4c8a                	// #19594
    14ac:	movk	w20, #0x8d2a, lsl #16
    14b0:	add	w20, w8, w20
    14b4:	add	w20, w20, w25
    14b8:	ror	w20, w20, #12
    14bc:	add	w20, w20, w21
    14c0:	eor	w24, w24, w20
    14c4:	add	w30, w24, w30
    14c8:	sub	w24, w16, #0x5c, lsl #12
    14cc:	sub	w24, w24, #0x6be
    14d0:	add	w24, w24, w30
    14d4:	ror	w24, w24, #28
    14d8:	add	w24, w24, w20
    14dc:	eor	w30, w21, w20
    14e0:	eor	w30, w30, w24
    14e4:	add	w30, w30, w22
    14e8:	mov	w22, #0xf681                	// #63105
    14ec:	movk	w22, #0x8771, lsl #16
    14f0:	add	w22, w7, w22
    14f4:	add	w22, w22, w30
    14f8:	ror	w22, w22, #21
    14fc:	add	w22, w22, w24
    1500:	eor	w30, w20, w24
    1504:	eor	w30, w30, w22
    1508:	add	w30, w30, w21
    150c:	mov	w21, #0x6122                	// #24866
    1510:	movk	w21, #0x6d9d, lsl #16
    1514:	add	w21, w15, w21
    1518:	add	w21, w21, w30
    151c:	ror	w21, w21, #16
    1520:	add	w21, w21, w22
    1524:	eor	w30, w24, w22
    1528:	eor	w30, w30, w21
    152c:	add	w30, w30, w20
    1530:	mov	w20, #0x380c                	// #14348
    1534:	movk	w20, #0xfde5, lsl #16
    1538:	add	w20, w17, w20
    153c:	add	w20, w20, w30
    1540:	ror	w20, w20, #9
    1544:	add	w20, w20, w21
    1548:	eor	w30, w22, w21
    154c:	eor	w30, w30, w20
    1550:	add	w24, w30, w24
    1554:	mov	w30, #0xea44                	// #59972
    1558:	movk	w30, #0xa4be, lsl #16
    155c:	add	w30, w5, w30
    1560:	add	w30, w30, w24
    1564:	ror	w30, w30, #28
    1568:	add	w30, w30, w20
    156c:	eor	w24, w21, w20
    1570:	eor	w24, w24, w30
    1574:	add	w24, w24, w22
    1578:	mov	w22, #0xcfa9                	// #53161
    157c:	movk	w22, #0x4bde, lsl #16
    1580:	add	w22, w2, w22
    1584:	add	w22, w22, w24
    1588:	ror	w22, w22, #21
    158c:	add	w22, w22, w30
    1590:	eor	w24, w20, w30
    1594:	eor	w24, w24, w22
    1598:	add	w24, w24, w21
    159c:	mov	w21, #0x4b60                	// #19296
    15a0:	movk	w21, #0xf6bb, lsl #16
    15a4:	add	w21, w18, w21
    15a8:	add	w21, w21, w24
    15ac:	ror	w21, w21, #16
    15b0:	add	w21, w21, w22
    15b4:	eor	w24, w30, w22
    15b8:	eor	w24, w24, w21
    15bc:	add	w24, w24, w20
    15c0:	mov	w20, #0xbc70                	// #48240
    15c4:	movk	w20, #0xbebf, lsl #16
    15c8:	add	w20, w6, w20
    15cc:	add	w20, w20, w24
    15d0:	ror	w20, w20, #9
    15d4:	add	w20, w20, w21
    15d8:	eor	w24, w22, w21
    15dc:	eor	w24, w24, w20
    15e0:	add	w24, w24, w30
    15e4:	mov	w30, #0x7ec6                	// #32454
    15e8:	movk	w30, #0x289b, lsl #16
    15ec:	add	w30, w4, w30
    15f0:	add	w30, w30, w24
    15f4:	ror	w30, w30, #28
    15f8:	add	w30, w30, w20
    15fc:	eor	w24, w21, w20
    1600:	eor	w24, w24, w30
    1604:	add	w24, w24, w22
    1608:	mov	w22, #0x27fa                	// #10234
    160c:	movk	w22, #0xeaa1, lsl #16
    1610:	add	w22, w19, w22
    1614:	add	w22, w22, w24
    1618:	ror	w22, w22, #21
    161c:	add	w22, w22, w30
    1620:	eor	w24, w20, w30
    1624:	eor	w24, w24, w22
    1628:	add	w24, w24, w21
    162c:	mov	w21, #0x3085                	// #12421
    1630:	movk	w21, #0xd4ef, lsl #16
    1634:	add	w21, w23, w21
    1638:	add	w21, w21, w24
    163c:	ror	w21, w21, #16
    1640:	add	w21, w21, w22
    1644:	eor	w24, w30, w22
    1648:	eor	w24, w24, w21
    164c:	add	w24, w24, w20
    1650:	mov	w20, #0x1d05                	// #7429
    1654:	movk	w20, #0x488, lsl #16
    1658:	add	w20, w12, w20
    165c:	add	w20, w20, w24
    1660:	ror	w20, w20, #9
    1664:	add	w20, w20, w21
    1668:	eor	w24, w22, w21
    166c:	eor	w24, w24, w20
    1670:	add	w24, w24, w30
    1674:	mov	w30, #0xd039                	// #53305
    1678:	movk	w30, #0xd9d4, lsl #16
    167c:	add	w30, w13, w30
    1680:	add	w30, w30, w24
    1684:	ror	w30, w30, #28
    1688:	add	w30, w30, w20
    168c:	eor	w24, w21, w20
    1690:	eor	w24, w24, w30
    1694:	add	w24, w24, w22
    1698:	mov	w22, #0x99e5                	// #39397
    169c:	movk	w22, #0xe6db, lsl #16
    16a0:	add	w22, w8, w22
    16a4:	add	w22, w22, w24
    16a8:	ror	w22, w22, #21
    16ac:	add	w22, w22, w30
    16b0:	eor	w24, w20, w30
    16b4:	eor	w24, w24, w22
    16b8:	add	w24, w24, w21
    16bc:	mov	w21, #0x7cf8                	// #31992
    16c0:	movk	w21, #0x1fa2, lsl #16
    16c4:	add	w21, w1, w21
    16c8:	add	w21, w21, w24
    16cc:	ror	w21, w21, #16
    16d0:	add	w21, w21, w22
    16d4:	eor	w24, w30, w22
    16d8:	eor	w24, w24, w21
    16dc:	add	w24, w24, w20
    16e0:	mov	w20, #0x5665                	// #22117
    16e4:	movk	w20, #0xc4ac, lsl #16
    16e8:	add	w20, w3, w20
    16ec:	add	w20, w20, w24
    16f0:	ror	w20, w20, #9
    16f4:	add	w20, w20, w21
    16f8:	orn	w24, w20, w22
    16fc:	eor	w24, w24, w21
    1700:	add	w30, w24, w30
    1704:	mov	w24, #0x2244                	// #8772
    1708:	movk	w24, #0xf429, lsl #16
    170c:	add	w19, w19, w24
    1710:	add	w19, w19, w30
    1714:	ror	w19, w19, #26
    1718:	add	w19, w19, w20
    171c:	orn	w30, w19, w21
    1720:	eor	w30, w30, w20
    1724:	add	w22, w30, w22
    1728:	mov	w30, #0xff97                	// #65431
    172c:	movk	w30, #0x432a, lsl #16
    1730:	add	w30, w18, w30
    1734:	add	w30, w30, w22
    1738:	ror	w30, w30, #22
    173c:	add	w30, w30, w19
    1740:	orn	w18, w30, w20
    1744:	eor	w18, w18, w19
    1748:	add	w21, w18, w21
    174c:	mov	w18, #0x23a7                	// #9127
    1750:	movk	w18, #0xab94, lsl #16
    1754:	add	w18, w17, w18
    1758:	add	w18, w18, w21
    175c:	ror	w18, w18, #17
    1760:	add	w18, w18, w30
    1764:	orn	w17, w18, w19
    1768:	eor	w17, w17, w30
    176c:	add	w20, w17, w20
    1770:	mov	w17, #0xa039                	// #41017
    1774:	movk	w17, #0xfc93, lsl #16
    1778:	add	w17, w16, w17
    177c:	add	w17, w17, w20
    1780:	ror	w17, w17, #11
    1784:	add	w17, w17, w18
    1788:	orn	w16, w17, w30
    178c:	eor	w16, w16, w18
    1790:	add	w19, w16, w19
    1794:	mov	w16, #0x59c3                	// #22979
    1798:	movk	w16, #0x655b, lsl #16
    179c:	add	w8, w8, w16
    17a0:	add	w8, w8, w19
    17a4:	ror	w8, w8, #26
    17a8:	add	w8, w8, w17
    17ac:	orn	w16, w8, w18
    17b0:	eor	w16, w16, w17
    17b4:	add	w30, w16, w30
    17b8:	mov	w16, #0xcc92                	// #52370
    17bc:	movk	w16, #0x8f0c, lsl #16
    17c0:	add	w16, w23, w16
    17c4:	add	w16, w16, w30
    17c8:	ror	w16, w16, #22
    17cc:	add	w16, w16, w8
    17d0:	orn	w19, w16, w17
    17d4:	eor	w19, w19, w8
    17d8:	add	w18, w19, w18
    17dc:	sub	w6, w6, #0x100, lsl #12
    17e0:	sub	w6, w6, #0xb83
    17e4:	add	w6, w6, w18
    17e8:	ror	w6, w6, #17
    17ec:	add	w6, w6, w16
    17f0:	orn	w18, w6, w8
    17f4:	eor	w18, w18, w16
    17f8:	add	w17, w18, w17
    17fc:	mov	w18, #0x5dd1                	// #24017
    1800:	movk	w18, #0x8584, lsl #16
    1804:	add	w5, w5, w18
    1808:	add	w5, w5, w17
    180c:	ror	w5, w5, #11
    1810:	add	w5, w5, w6
    1814:	orn	w17, w5, w16
    1818:	eor	w17, w17, w6
    181c:	add	w17, w17, w8
    1820:	mov	w8, #0x7e4f                	// #32335
    1824:	movk	w8, #0x6fa8, lsl #16
    1828:	add	w8, w7, w8
    182c:	add	w8, w8, w17
    1830:	ror	w8, w8, #26
    1834:	add	w8, w8, w5
    1838:	orn	w7, w8, w6
    183c:	eor	w7, w7, w5
    1840:	add	w16, w7, w16
    1844:	mov	w7, #0xe6e0                	// #59104
    1848:	movk	w7, #0xfe2c, lsl #16
    184c:	add	w7, w1, w7
    1850:	add	w7, w7, w16
    1854:	ror	w7, w7, #22
    1858:	add	w7, w7, w8
    185c:	orn	w1, w7, w5
    1860:	eor	w1, w1, w8
    1864:	add	w1, w1, w6
    1868:	mov	w6, #0x4314                	// #17172
    186c:	movk	w6, #0xa301, lsl #16
    1870:	add	w6, w12, w6
    1874:	add	w6, w6, w1
    1878:	ror	w6, w6, #17
    187c:	add	w6, w6, w7
    1880:	orn	w1, w6, w8
    1884:	eor	w1, w1, w7
    1888:	add	w1, w1, w5
    188c:	mov	w5, #0x11a1                	// #4513
    1890:	movk	w5, #0x4e08, lsl #16
    1894:	add	w5, w4, w5
    1898:	add	w5, w5, w1
    189c:	ror	w5, w5, #11
    18a0:	add	w5, w5, w6
    18a4:	orn	w4, w5, w7
    18a8:	eor	w4, w4, w6
    18ac:	add	w8, w4, w8
    18b0:	mov	w4, #0x7e82                	// #32386
    18b4:	movk	w4, #0xf753, lsl #16
    18b8:	add	w4, w2, w4
    18bc:	add	w4, w4, w8
    18c0:	ror	w4, w4, #26
    18c4:	add	w1, w4, w5
    18c8:	orn	w2, w1, w6
    18cc:	eor	w2, w2, w5
    18d0:	add	w7, w2, w7
    18d4:	mov	w2, #0xf235                	// #62005
    18d8:	movk	w2, #0xbd3a, lsl #16
    18dc:	add	w2, w15, w2
    18e0:	add	w2, w2, w7
    18e4:	ror	w2, w2, #22
    18e8:	add	w2, w2, w1
    18ec:	orn	w4, w2, w5
    18f0:	eor	w4, w4, w1
    18f4:	add	w6, w4, w6
    18f8:	mov	w4, #0xd2bb                	// #53947
    18fc:	movk	w4, #0x2ad7, lsl #16
    1900:	add	w3, w3, w4
    1904:	add	w3, w3, w6
    1908:	ror	w3, w3, #17
    190c:	add	w3, w3, w2
    1910:	orn	w4, w3, w1
    1914:	eor	w4, w4, w2
    1918:	add	w5, w4, w5
    191c:	add	w1, w14, w1
    1920:	str	w1, [x0, #8]
    1924:	mov	w1, #0xd391                	// #54161
    1928:	movk	w1, #0xeb86, lsl #16
    192c:	add	w1, w13, w1
    1930:	add	w1, w1, w5
    1934:	ror	w1, w1, #11
    1938:	add	w11, w11, w3
    193c:	add	w1, w1, w11
    1940:	str	w1, [x0, #12]
    1944:	add	w3, w9, w3
    1948:	str	w3, [x0, #16]
    194c:	add	w2, w10, w2
    1950:	str	w2, [x0, #20]
    1954:	ldp	x19, x20, [sp, #16]
    1958:	ldp	x21, x22, [sp, #32]
    195c:	ldp	x23, x24, [sp, #48]
    1960:	ldr	x25, [sp, #64]
    1964:	ldp	x29, x30, [sp], #144
    1968:	ret
    196c:	stp	x29, x30, [sp, #-32]!
    1970:	mov	x29, sp
    1974:	stp	x19, x20, [sp, #16]
    1978:	mov	x19, x0
    197c:	mov	x20, x1
    1980:	ldr	w3, [x0, #24]
    1984:	lsl	w1, w3, #3
    1988:	ldr	x0, [x0]
    198c:	add	x0, x0, x1
    1990:	str	x0, [x19]
    1994:	add	w2, w3, #0x1
    1998:	str	w2, [x19, #24]
    199c:	add	x0, x19, w3, uxtw
    19a0:	mov	w1, #0xffffff80            	// #-128
    19a4:	strb	w1, [x0, #28]
    19a8:	cmp	w2, #0x38
    19ac:	b.ls	1ac0 <_Py_strhex@plt+0xcb0>  // b.plast
    19b0:	cmp	w2, #0x3f
    19b4:	b.hi	19ec <_Py_strhex@plt+0xbdc>  // b.pmore
    19b8:	mov	w2, w2
    19bc:	add	x0, x2, #0x1c
    19c0:	add	x0, x19, x0
    19c4:	mov	w1, #0x3e                  	// #62
    19c8:	sub	w1, w1, w3
    19cc:	add	x2, x1, x2
    19d0:	add	x1, x19, #0x1d
    19d4:	add	x2, x2, x1
    19d8:	strb	wzr, [x0], #1
    19dc:	cmp	x0, x2
    19e0:	b.ne	19d8 <_Py_strhex@plt+0xbc8>  // b.any
    19e4:	mov	w0, #0x40                  	// #64
    19e8:	str	w0, [x19, #24]
    19ec:	add	x1, x19, #0x1c
    19f0:	mov	x0, x19
    19f4:	bl	f28 <_Py_strhex@plt+0x118>
    19f8:	mov	w2, #0x0                   	// #0
    19fc:	mov	w0, w2
    1a00:	add	x1, x19, w0, uxtw
    1a04:	strb	wzr, [x1, #28]
    1a08:	add	w0, w0, #0x1
    1a0c:	cmp	w0, #0x37
    1a10:	b.ls	1a00 <_Py_strhex@plt+0xbf0>  // b.plast
    1a14:	add	w1, w2, #0x1
    1a18:	mov	w0, #0x37                  	// #55
    1a1c:	sub	w2, w0, w2
    1a20:	cmp	w1, #0x38
    1a24:	csel	w2, w2, wzr, ls  // ls = plast
    1a28:	add	w2, w2, w1
    1a2c:	str	w2, [x19, #24]
    1a30:	ldr	x0, [x19]
    1a34:	asr	x1, x0, #56
    1a38:	strb	w1, [x19, #91]
    1a3c:	asr	x1, x0, #48
    1a40:	strb	w1, [x19, #90]
    1a44:	asr	x1, x0, #40
    1a48:	strb	w1, [x19, #89]
    1a4c:	asr	x1, x0, #32
    1a50:	strb	w1, [x19, #88]
    1a54:	asr	x1, x0, #24
    1a58:	strb	w1, [x19, #87]
    1a5c:	asr	x1, x0, #16
    1a60:	strb	w1, [x19, #86]
    1a64:	asr	x1, x0, #8
    1a68:	strb	w1, [x19, #85]
    1a6c:	strb	w0, [x19, #84]
    1a70:	add	x1, x19, #0x1c
    1a74:	mov	x0, x19
    1a78:	bl	f28 <_Py_strhex@plt+0x118>
    1a7c:	add	x0, x19, #0x8
    1a80:	mov	x1, x20
    1a84:	add	x19, x19, #0x18
    1a88:	ldrb	w2, [x0, #3]
    1a8c:	strb	w2, [x1, #3]
    1a90:	ldrh	w2, [x0, #2]
    1a94:	strb	w2, [x1, #2]
    1a98:	ldr	w2, [x0]
    1a9c:	lsr	w2, w2, #8
    1aa0:	strb	w2, [x1, #1]
    1aa4:	ldr	w2, [x0], #4
    1aa8:	strb	w2, [x1], #4
    1aac:	cmp	x0, x19
    1ab0:	b.ne	1a88 <_Py_strhex@plt+0xc78>  // b.any
    1ab4:	ldp	x19, x20, [sp, #16]
    1ab8:	ldp	x29, x30, [sp], #32
    1abc:	ret
    1ac0:	cmp	w2, #0x37
    1ac4:	b.ls	19fc <_Py_strhex@plt+0xbec>  // b.plast
    1ac8:	b	1a30 <_Py_strhex@plt+0xc20>
    1acc:	stp	x29, x30, [sp, #-32]!
    1ad0:	mov	x29, sp
    1ad4:	str	x19, [sp, #16]
    1ad8:	mov	x19, x0
    1adc:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
    1ae0:	add	x0, x0, #0x98
    1ae4:	bl	de0 <_PyObject_New@plt>
    1ae8:	cbz	x0, 1b1c <_Py_strhex@plt+0xd0c>
    1aec:	ldp	x4, x5, [x19, #16]
    1af0:	stp	x4, x5, [x0, #16]
    1af4:	ldp	x4, x5, [x19, #32]
    1af8:	stp	x4, x5, [x0, #32]
    1afc:	ldp	x4, x5, [x19, #48]
    1b00:	stp	x4, x5, [x0, #48]
    1b04:	ldp	x4, x5, [x19, #64]
    1b08:	stp	x4, x5, [x0, #64]
    1b0c:	ldp	x4, x5, [x19, #80]
    1b10:	stp	x4, x5, [x0, #80]
    1b14:	ldp	x2, x3, [x19, #96]
    1b18:	stp	x2, x3, [x0, #96]
    1b1c:	ldr	x19, [sp, #16]
    1b20:	ldp	x29, x30, [sp], #32
    1b24:	ret
    1b28:	cmp	x2, #0x0
    1b2c:	b.le	1c00 <_Py_strhex@plt+0xdf0>
    1b30:	stp	x29, x30, [sp, #-64]!
    1b34:	mov	x29, sp
    1b38:	stp	x19, x20, [sp, #16]
    1b3c:	stp	x21, x22, [sp, #32]
    1b40:	stp	x23, x24, [sp, #48]
    1b44:	mov	x21, x0
    1b48:	mov	x22, x1
    1b4c:	mov	x20, x2
    1b50:	mov	w24, #0x40                  	// #64
    1b54:	add	x23, x0, #0x1c
    1b58:	b	1b84 <_Py_strhex@plt+0xd74>
    1b5c:	mov	x1, x22
    1b60:	mov	x0, x21
    1b64:	bl	f28 <_Py_strhex@plt+0x118>
    1b68:	ldr	x0, [x21]
    1b6c:	add	x0, x0, #0x200
    1b70:	str	x0, [x21]
    1b74:	add	x22, x22, #0x40
    1b78:	sub	x20, x20, #0x40
    1b7c:	cmp	x20, #0x0
    1b80:	b.le	1bec <_Py_strhex@plt+0xddc>
    1b84:	ldr	w0, [x21, #24]
    1b88:	cmp	x20, #0x3f
    1b8c:	ccmp	w0, #0x0, #0x0, gt
    1b90:	b.eq	1b5c <_Py_strhex@plt+0xd4c>  // b.none
    1b94:	sub	w19, w24, w0
    1b98:	cmp	x19, x20
    1b9c:	csel	x19, x19, x20, le
    1ba0:	mov	x2, x19
    1ba4:	mov	x1, x22
    1ba8:	add	x0, x23, w0, uxtw
    1bac:	bl	d00 <memcpy@plt>
    1bb0:	ldr	w0, [x21, #24]
    1bb4:	add	w0, w0, w19
    1bb8:	str	w0, [x21, #24]
    1bbc:	add	x22, x22, x19
    1bc0:	sub	x20, x20, x19
    1bc4:	cmp	w0, #0x40
    1bc8:	b.ne	1b7c <_Py_strhex@plt+0xd6c>  // b.any
    1bcc:	mov	x1, x23
    1bd0:	mov	x0, x21
    1bd4:	bl	f28 <_Py_strhex@plt+0x118>
    1bd8:	ldr	x0, [x21]
    1bdc:	add	x0, x0, #0x200
    1be0:	str	x0, [x21]
    1be4:	str	wzr, [x21, #24]
    1be8:	b	1b7c <_Py_strhex@plt+0xd6c>
    1bec:	ldp	x19, x20, [sp, #16]
    1bf0:	ldp	x21, x22, [sp, #32]
    1bf4:	ldp	x23, x24, [sp, #48]
    1bf8:	ldp	x29, x30, [sp], #64
    1bfc:	ret
    1c00:	ret
    1c04:	stp	x29, x30, [sp, #-112]!
    1c08:	mov	x29, sp
    1c0c:	str	x19, [sp, #16]
    1c10:	mov	x19, x0
    1c14:	mov	x0, x1
    1c18:	ldr	x1, [x1, #8]
    1c1c:	ldr	x2, [x1, #168]
    1c20:	tbnz	w2, #28, 1c8c <_Py_strhex@plt+0xe7c>
    1c24:	ldr	x1, [x1, #160]
    1c28:	cbz	x1, 1cac <_Py_strhex@plt+0xe9c>
    1c2c:	ldr	x1, [x1]
    1c30:	cbz	x1, 1cac <_Py_strhex@plt+0xe9c>
    1c34:	mov	w2, #0x0                   	// #0
    1c38:	add	x1, sp, #0x20
    1c3c:	bl	dd0 <PyObject_GetBuffer@plt>
    1c40:	cmn	w0, #0x1
    1c44:	b.eq	1cf4 <_Py_strhex@plt+0xee4>  // b.none
    1c48:	ldr	w0, [sp, #68]
    1c4c:	cmp	w0, #0x1
    1c50:	b.gt	1ccc <_Py_strhex@plt+0xebc>
    1c54:	ldr	x2, [sp, #48]
    1c58:	ldr	x1, [sp, #32]
    1c5c:	add	x0, x19, #0x10
    1c60:	bl	1b28 <_Py_strhex@plt+0xd18>
    1c64:	add	x0, sp, #0x20
    1c68:	bl	d10 <PyBuffer_Release@plt>
    1c6c:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1c70:	ldr	x0, [x0, #4056]
    1c74:	ldr	x1, [x0]
    1c78:	add	x1, x1, #0x1
    1c7c:	str	x1, [x0]
    1c80:	ldr	x19, [sp, #16]
    1c84:	ldp	x29, x30, [sp], #112
    1c88:	ret
    1c8c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1c90:	add	x1, x1, #0x100
    1c94:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1c98:	ldr	x0, [x0, #4032]
    1c9c:	ldr	x0, [x0]
    1ca0:	bl	d60 <PyErr_SetString@plt>
    1ca4:	mov	x0, #0x0                   	// #0
    1ca8:	b	1c80 <_Py_strhex@plt+0xe70>
    1cac:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1cb0:	add	x1, x1, #0x130
    1cb4:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1cb8:	ldr	x0, [x0, #4032]
    1cbc:	ldr	x0, [x0]
    1cc0:	bl	d60 <PyErr_SetString@plt>
    1cc4:	mov	x0, #0x0                   	// #0
    1cc8:	b	1c80 <_Py_strhex@plt+0xe70>
    1ccc:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1cd0:	add	x1, x1, #0x160
    1cd4:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1cd8:	ldr	x0, [x0, #4024]
    1cdc:	ldr	x0, [x0]
    1ce0:	bl	d60 <PyErr_SetString@plt>
    1ce4:	add	x0, sp, #0x20
    1ce8:	bl	d10 <PyBuffer_Release@plt>
    1cec:	mov	x0, #0x0                   	// #0
    1cf0:	b	1c80 <_Py_strhex@plt+0xe70>
    1cf4:	mov	x0, #0x0                   	// #0
    1cf8:	b	1c80 <_Py_strhex@plt+0xe70>
    1cfc:	stp	x29, x30, [sp, #-16]!
    1d00:	mov	x29, sp
    1d04:	mov	x0, #0x10                  	// #16
    1d08:	bl	d90 <PyLong_FromLong@plt>
    1d0c:	ldp	x29, x30, [sp], #16
    1d10:	ret
    1d14:	stp	x29, x30, [sp, #-16]!
    1d18:	mov	x29, sp
    1d1c:	mov	x0, #0x40                  	// #64
    1d20:	bl	d90 <PyLong_FromLong@plt>
    1d24:	ldp	x29, x30, [sp], #16
    1d28:	ret
    1d2c:	stp	x29, x30, [sp, #-16]!
    1d30:	mov	x29, sp
    1d34:	mov	x1, #0x3                   	// #3
    1d38:	adrp	x0, 2000 <_Py_strhex@plt+0x11f0>
    1d3c:	add	x0, x0, #0x180
    1d40:	bl	e00 <PyUnicode_FromStringAndSize@plt>
    1d44:	ldp	x29, x30, [sp], #16
    1d48:	ret
    1d4c:	stp	x29, x30, [sp, #-144]!
    1d50:	mov	x29, sp
    1d54:	str	x19, [sp, #16]
    1d58:	ldp	x2, x3, [x0, #16]
    1d5c:	stp	x2, x3, [sp, #48]
    1d60:	ldp	x2, x3, [x0, #32]
    1d64:	stp	x2, x3, [sp, #64]
    1d68:	ldp	x2, x3, [x0, #48]
    1d6c:	stp	x2, x3, [sp, #80]
    1d70:	ldp	x2, x3, [x0, #64]
    1d74:	stp	x2, x3, [sp, #96]
    1d78:	ldp	x2, x3, [x0, #80]
    1d7c:	stp	x2, x3, [sp, #112]
    1d80:	ldp	x0, x1, [x0, #96]
    1d84:	stp	x0, x1, [sp, #128]
    1d88:	add	x19, sp, #0x20
    1d8c:	mov	x1, x19
    1d90:	add	x0, sp, #0x30
    1d94:	bl	196c <_Py_strhex@plt+0xb5c>
    1d98:	mov	x1, #0x10                  	// #16
    1d9c:	mov	x0, x19
    1da0:	bl	e10 <_Py_strhex@plt>
    1da4:	ldr	x19, [sp, #16]
    1da8:	ldp	x29, x30, [sp], #144
    1dac:	ret
    1db0:	stp	x29, x30, [sp, #-144]!
    1db4:	mov	x29, sp
    1db8:	str	x19, [sp, #16]
    1dbc:	ldp	x2, x3, [x0, #16]
    1dc0:	stp	x2, x3, [sp, #48]
    1dc4:	ldp	x2, x3, [x0, #32]
    1dc8:	stp	x2, x3, [sp, #64]
    1dcc:	ldp	x2, x3, [x0, #48]
    1dd0:	stp	x2, x3, [sp, #80]
    1dd4:	ldp	x2, x3, [x0, #64]
    1dd8:	stp	x2, x3, [sp, #96]
    1ddc:	ldp	x2, x3, [x0, #80]
    1de0:	stp	x2, x3, [sp, #112]
    1de4:	ldp	x0, x1, [x0, #96]
    1de8:	stp	x0, x1, [sp, #128]
    1dec:	add	x19, sp, #0x20
    1df0:	mov	x1, x19
    1df4:	add	x0, sp, #0x30
    1df8:	bl	196c <_Py_strhex@plt+0xb5c>
    1dfc:	mov	x1, #0x10                  	// #16
    1e00:	mov	x0, x19
    1e04:	bl	d30 <PyBytes_FromStringAndSize@plt>
    1e08:	ldr	x19, [sp, #16]
    1e0c:	ldp	x29, x30, [sp], #144
    1e10:	ret
    1e14:	stp	x29, x30, [sp, #-16]!
    1e18:	mov	x29, sp
    1e1c:	bl	d70 <PyObject_Free@plt>
    1e20:	ldp	x29, x30, [sp], #16
    1e24:	ret
    1e28:	sub	sp, sp, #0x90
    1e2c:	stp	x29, x30, [sp, #16]
    1e30:	add	x29, sp, #0x10
    1e34:	stp	x19, x20, [sp, #32]
    1e38:	mov	x0, x1
    1e3c:	mov	x1, x2
    1e40:	cbz	x3, 1f40 <_Py_strhex@plt+0x1130>
    1e44:	ldr	x19, [x3, #16]
    1e48:	add	x19, x2, x19
    1e4c:	add	x2, sp, #0x88
    1e50:	str	x2, [sp]
    1e54:	mov	w7, #0x0                   	// #0
    1e58:	mov	w6, #0x1                   	// #1
    1e5c:	mov	w5, #0x0                   	// #0
    1e60:	adrp	x4, 13000 <PyInit__md5@@Base+0x10f8c>
    1e64:	add	x4, x4, #0x98
    1e68:	add	x4, x4, #0x1a0
    1e6c:	mov	x2, #0x0                   	// #0
    1e70:	bl	d50 <_PyArg_UnpackKeywords@plt>
    1e74:	cbz	x0, 2010 <_Py_strhex@plt+0x1200>
    1e78:	cbz	x19, 2018 <_Py_strhex@plt+0x1208>
    1e7c:	ldr	x20, [x0]
    1e80:	cbz	x20, 2018 <_Py_strhex@plt+0x1208>
    1e84:	ldr	x0, [x20, #8]
    1e88:	ldr	x1, [x0, #168]
    1e8c:	tbnz	w1, #28, 1f5c <_Py_strhex@plt+0x114c>
    1e90:	ldr	x0, [x0, #160]
    1e94:	cbz	x0, 1f7c <_Py_strhex@plt+0x116c>
    1e98:	ldr	x0, [x0]
    1e9c:	cbz	x0, 1f7c <_Py_strhex@plt+0x116c>
    1ea0:	mov	w2, #0x0                   	// #0
    1ea4:	add	x1, sp, #0x38
    1ea8:	mov	x0, x20
    1eac:	bl	dd0 <PyObject_GetBuffer@plt>
    1eb0:	cmn	w0, #0x1
    1eb4:	b.eq	2008 <_Py_strhex@plt+0x11f8>  // b.none
    1eb8:	ldr	w0, [sp, #92]
    1ebc:	cmp	w0, #0x1
    1ec0:	b.gt	1f9c <_Py_strhex@plt+0x118c>
    1ec4:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
    1ec8:	add	x0, x0, #0x98
    1ecc:	bl	de0 <_PyObject_New@plt>
    1ed0:	mov	x19, x0
    1ed4:	cbz	x0, 1fc4 <_Py_strhex@plt+0x11b4>
    1ed8:	mov	w1, #0x2301                	// #8961
    1edc:	movk	w1, #0x6745, lsl #16
    1ee0:	str	w1, [x0, #24]
    1ee4:	mov	w1, #0xab89                	// #43913
    1ee8:	movk	w1, #0xefcd, lsl #16
    1eec:	str	w1, [x0, #28]
    1ef0:	mov	w1, #0xdcfe                	// #56574
    1ef4:	movk	w1, #0x98ba, lsl #16
    1ef8:	str	w1, [x0, #32]
    1efc:	mov	w1, #0x5476                	// #21622
    1f00:	movk	w1, #0x1032, lsl #16
    1f04:	str	w1, [x0, #36]
    1f08:	str	wzr, [x0, #40]
    1f0c:	str	xzr, [x0, #16]
    1f10:	bl	db0 <PyErr_Occurred@plt>
    1f14:	cbz	x0, 1fdc <_Py_strhex@plt+0x11cc>
    1f18:	ldr	x0, [x19]
    1f1c:	sub	x0, x0, #0x1
    1f20:	str	x0, [x19]
    1f24:	cbz	x0, 1fd0 <_Py_strhex@plt+0x11c0>
    1f28:	mov	x19, x20
    1f2c:	cbz	x20, 1ff4 <_Py_strhex@plt+0x11e4>
    1f30:	add	x0, sp, #0x38
    1f34:	bl	d10 <PyBuffer_Release@plt>
    1f38:	mov	x19, #0x0                   	// #0
    1f3c:	b	1ff4 <_Py_strhex@plt+0x11e4>
    1f40:	cmp	x0, #0x0
    1f44:	ccmp	x2, #0x1, #0x2, ne  // ne = any
    1f48:	b.ls	1f54 <_Py_strhex@plt+0x1144>  // b.plast
    1f4c:	mov	x19, x2
    1f50:	b	1e4c <_Py_strhex@plt+0x103c>
    1f54:	mov	x19, x2
    1f58:	b	1e78 <_Py_strhex@plt+0x1068>
    1f5c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1f60:	add	x1, x1, #0x100
    1f64:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1f68:	ldr	x0, [x0, #4032]
    1f6c:	ldr	x0, [x0]
    1f70:	bl	d60 <PyErr_SetString@plt>
    1f74:	mov	x19, #0x0                   	// #0
    1f78:	b	1ff4 <_Py_strhex@plt+0x11e4>
    1f7c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1f80:	add	x1, x1, #0x130
    1f84:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1f88:	ldr	x0, [x0, #4032]
    1f8c:	ldr	x0, [x0]
    1f90:	bl	d60 <PyErr_SetString@plt>
    1f94:	mov	x19, #0x0                   	// #0
    1f98:	b	1ff4 <_Py_strhex@plt+0x11e4>
    1f9c:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    1fa0:	add	x1, x1, #0x160
    1fa4:	adrp	x0, 12000 <PyInit__md5@@Base+0xff8c>
    1fa8:	ldr	x0, [x0, #4024]
    1fac:	ldr	x0, [x0]
    1fb0:	bl	d60 <PyErr_SetString@plt>
    1fb4:	add	x0, sp, #0x38
    1fb8:	bl	d10 <PyBuffer_Release@plt>
    1fbc:	mov	x19, #0x0                   	// #0
    1fc0:	b	1ff4 <_Py_strhex@plt+0x11e4>
    1fc4:	add	x0, sp, #0x38
    1fc8:	bl	d10 <PyBuffer_Release@plt>
    1fcc:	b	1ff4 <_Py_strhex@plt+0x11e4>
    1fd0:	mov	x0, x19
    1fd4:	bl	d40 <_Py_Dealloc@plt>
    1fd8:	b	1f28 <_Py_strhex@plt+0x1118>
    1fdc:	ldr	x2, [sp, #72]
    1fe0:	ldr	x1, [sp, #56]
    1fe4:	add	x0, x19, #0x10
    1fe8:	bl	1b28 <_Py_strhex@plt+0xd18>
    1fec:	add	x0, sp, #0x38
    1ff0:	bl	d10 <PyBuffer_Release@plt>
    1ff4:	mov	x0, x19
    1ff8:	ldp	x19, x20, [sp, #32]
    1ffc:	ldp	x29, x30, [sp, #16]
    2000:	add	sp, sp, #0x90
    2004:	ret
    2008:	mov	x19, #0x0                   	// #0
    200c:	b	1ff4 <_Py_strhex@plt+0x11e4>
    2010:	mov	x19, x0
    2014:	b	1ff4 <_Py_strhex@plt+0x11e4>
    2018:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
    201c:	add	x0, x0, #0x98
    2020:	bl	de0 <_PyObject_New@plt>
    2024:	mov	x19, x0
    2028:	cbz	x0, 1ff4 <_Py_strhex@plt+0x11e4>
    202c:	mov	w1, #0x2301                	// #8961
    2030:	movk	w1, #0x6745, lsl #16
    2034:	str	w1, [x0, #24]
    2038:	mov	w1, #0xab89                	// #43913
    203c:	movk	w1, #0xefcd, lsl #16
    2040:	str	w1, [x0, #28]
    2044:	mov	w1, #0xdcfe                	// #56574
    2048:	movk	w1, #0x98ba, lsl #16
    204c:	str	w1, [x0, #32]
    2050:	mov	w1, #0x5476                	// #21622
    2054:	movk	w1, #0x1032, lsl #16
    2058:	str	w1, [x0, #36]
    205c:	str	wzr, [x0, #40]
    2060:	str	xzr, [x0, #16]
    2064:	bl	db0 <PyErr_Occurred@plt>
    2068:	cbz	x0, 1ff4 <_Py_strhex@plt+0x11e4>
    206c:	mov	x20, #0x0                   	// #0
    2070:	b	1f18 <_Py_strhex@plt+0x1108>

0000000000002074 <PyInit__md5@@Base>:
    2074:	stp	x29, x30, [sp, #-32]!
    2078:	mov	x29, sp
    207c:	str	x19, [sp, #16]
    2080:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
    2084:	add	x0, x0, #0x98
    2088:	adrp	x1, 12000 <PyInit__md5@@Base+0xff8c>
    208c:	ldr	x1, [x1, #4048]
    2090:	str	x1, [x0, #8]
    2094:	bl	d80 <PyType_Ready@plt>
    2098:	mov	x19, #0x0                   	// #0
    209c:	tbnz	w0, #31, 20e0 <PyInit__md5@@Base+0x6c>
    20a0:	mov	w1, #0x3f5                 	// #1013
    20a4:	adrp	x0, 13000 <PyInit__md5@@Base+0x10f8c>
    20a8:	add	x0, x0, #0x98
    20ac:	add	x0, x0, #0x1e0
    20b0:	bl	dc0 <PyModule_Create2@plt>
    20b4:	mov	x19, x0
    20b8:	cbz	x0, 20e0 <PyInit__md5@@Base+0x6c>
    20bc:	adrp	x2, 13000 <PyInit__md5@@Base+0x10f8c>
    20c0:	ldr	x0, [x2, #152]
    20c4:	add	x0, x0, #0x1
    20c8:	str	x0, [x2, #152]
    20cc:	add	x2, x2, #0x98
    20d0:	adrp	x1, 2000 <_Py_strhex@plt+0x11f0>
    20d4:	add	x1, x1, #0x188
    20d8:	mov	x0, x19
    20dc:	bl	df0 <PyModule_AddObject@plt>
    20e0:	mov	x0, x19
    20e4:	ldr	x19, [sp, #16]
    20e8:	ldp	x29, x30, [sp], #32
    20ec:	ret

Disassembly of section .fini:

00000000000020f0 <.fini>:
    20f0:	stp	x29, x30, [sp, #-16]!
    20f4:	mov	x29, sp
    20f8:	ldp	x29, x30, [sp], #16
    20fc:	ret
