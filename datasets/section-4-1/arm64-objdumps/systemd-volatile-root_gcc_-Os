
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-volatile-root_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400ff8 <_init>:
  400ff8:	stp	x29, x30, [sp, #-16]!
  400ffc:	mov	x29, sp
  401000:	bl	401a50 <call_weak_fn>
  401004:	ldp	x29, x30, [sp], #16
  401008:	ret

Disassembly of section .plt:

0000000000401010 <.plt>:
  401010:	stp	x16, x30, [sp, #-16]!
  401014:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401018:	ldr	x17, [x16, #3784]
  40101c:	add	x16, x16, #0xec8
  401020:	br	x17
  401024:	nop
  401028:	nop
  40102c:	nop

0000000000401030 <mount_verbose@plt>:
  401030:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401034:	ldr	x17, [x16, #3792]
  401038:	add	x16, x16, #0xed0
  40103c:	br	x17

0000000000401040 <stpcpy@plt>:
  401040:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401044:	ldr	x17, [x16, #3800]
  401048:	add	x16, x16, #0xed8
  40104c:	br	x17

0000000000401050 <__libc_start_main@plt>:
  401050:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401054:	ldr	x17, [x16, #3808]
  401058:	add	x16, x16, #0xee0
  40105c:	br	x17

0000000000401060 <__gmon_start__@plt>:
  401060:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401064:	ldr	x17, [x16, #3816]
  401068:	add	x16, x16, #0xee8
  40106c:	br	x17

0000000000401070 <chase_symlinks@plt>:
  401070:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401074:	ldr	x17, [x16, #3824]
  401078:	add	x16, x16, #0xef0
  40107c:	br	x17

0000000000401080 <polkit_agent_close@plt>:
  401080:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401084:	ldr	x17, [x16, #3832]
  401088:	add	x16, x16, #0xef8
  40108c:	br	x17

0000000000401090 <umount_verbose@plt>:
  401090:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401094:	ldr	x17, [x16, #3840]
  401098:	add	x16, x16, #0xf00
  40109c:	br	x17

00000000004010a0 <query_volatile_mode@plt>:
  4010a0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010a4:	ldr	x17, [x16, #3848]
  4010a8:	add	x16, x16, #0xf08
  4010ac:	br	x17

00000000004010b0 <path_equal@plt>:
  4010b0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010b4:	ldr	x17, [x16, #3856]
  4010b8:	add	x16, x16, #0xf10
  4010bc:	br	x17

00000000004010c0 <device_path_make_major_minor@plt>:
  4010c0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010c4:	ldr	x17, [x16, #3864]
  4010c8:	add	x16, x16, #0xf18
  4010cc:	br	x17

00000000004010d0 <symlink@plt>:
  4010d0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010d4:	ldr	x17, [x16, #3872]
  4010d8:	add	x16, x16, #0xf20
  4010dc:	br	x17

00000000004010e0 <volatile_mode_from_string@plt>:
  4010e0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010e4:	ldr	x17, [x16, #3880]
  4010e8:	add	x16, x16, #0xf28
  4010ec:	br	x17

00000000004010f0 <log_setup_service@plt>:
  4010f0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4010f4:	ldr	x17, [x16, #3888]
  4010f8:	add	x16, x16, #0xf30
  4010fc:	br	x17

0000000000401100 <log_assert_failed_realm@plt>:
  401100:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401104:	ldr	x17, [x16, #3896]
  401108:	add	x16, x16, #0xf38
  40110c:	br	x17

0000000000401110 <path_is_absolute@plt>:
  401110:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401114:	ldr	x17, [x16, #3904]
  401118:	add	x16, x16, #0xf40
  40111c:	br	x17

0000000000401120 <abort@plt>:
  401120:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401124:	ldr	x17, [x16, #3912]
  401128:	add	x16, x16, #0xf48
  40112c:	br	x17

0000000000401130 <get_block_device_harder@plt>:
  401130:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401134:	ldr	x17, [x16, #3920]
  401138:	add	x16, x16, #0xf50
  40113c:	br	x17

0000000000401140 <rmdir@plt>:
  401140:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401144:	ldr	x17, [x16, #3928]
  401148:	add	x16, x16, #0xf58
  40114c:	br	x17

0000000000401150 <__errno_location@plt>:
  401150:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401154:	ldr	x17, [x16, #3936]
  401158:	add	x16, x16, #0xf60
  40115c:	br	x17

0000000000401160 <__stack_chk_fail@plt>:
  401160:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401164:	ldr	x17, [x16, #3944]
  401168:	add	x16, x16, #0xf68
  40116c:	br	x17

0000000000401170 <path_is_temporary_fs@plt>:
  401170:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401174:	ldr	x17, [x16, #3952]
  401178:	add	x16, x16, #0xf70
  40117c:	br	x17

0000000000401180 <ask_password_agent_close@plt>:
  401180:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401184:	ldr	x17, [x16, #3960]
  401188:	add	x16, x16, #0xf78
  40118c:	br	x17

0000000000401190 <umount_recursive@plt>:
  401190:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401194:	ldr	x17, [x16, #3968]
  401198:	add	x16, x16, #0xf80
  40119c:	br	x17

00000000004011a0 <pager_close@plt>:
  4011a0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011a4:	ldr	x17, [x16, #3976]
  4011a8:	add	x16, x16, #0xf88
  4011ac:	br	x17

00000000004011b0 <shell_escape@plt>:
  4011b0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011b4:	ldr	x17, [x16, #3984]
  4011b8:	add	x16, x16, #0xf90
  4011bc:	br	x17

00000000004011c0 <log_internal_realm@plt>:
  4011c0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011c4:	ldr	x17, [x16, #3992]
  4011c8:	add	x16, x16, #0xf98
  4011cc:	br	x17

00000000004011d0 <path_is_mount_point@plt>:
  4011d0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011d4:	ldr	x17, [x16, #4000]
  4011d8:	add	x16, x16, #0xfa0
  4011dc:	br	x17

00000000004011e0 <mkdir@plt>:
  4011e0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011e4:	ldr	x17, [x16, #4008]
  4011e8:	add	x16, x16, #0xfa8
  4011ec:	br	x17

00000000004011f0 <mount@plt>:
  4011f0:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  4011f4:	ldr	x17, [x16, #4016]
  4011f8:	add	x16, x16, #0xfb0
  4011fc:	br	x17

0000000000401200 <free@plt>:
  401200:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401204:	ldr	x17, [x16, #4024]
  401208:	add	x16, x16, #0xfb8
  40120c:	br	x17

0000000000401210 <bind_remount_recursive@plt>:
  401210:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401214:	ldr	x17, [x16, #4032]
  401218:	add	x16, x16, #0xfc0
  40121c:	br	x17

0000000000401220 <mac_selinux_finish@plt>:
  401220:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401224:	ldr	x17, [x16, #4040]
  401228:	add	x16, x16, #0xfc8
  40122c:	br	x17

0000000000401230 <mkdir_p@plt>:
  401230:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401234:	ldr	x17, [x16, #4048]
  401238:	add	x16, x16, #0xfd0
  40123c:	br	x17

0000000000401240 <strlen@plt>:
  401240:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401244:	ldr	x17, [x16, #4056]
  401248:	add	x16, x16, #0xfd8
  40124c:	br	x17

0000000000401250 <log_oom_internal@plt>:
  401250:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401254:	ldr	x17, [x16, #4064]
  401258:	add	x16, x16, #0xfe0
  40125c:	br	x17

0000000000401260 <log_get_max_level_realm@plt>:
  401260:	adrp	x16, 412000 <__FRAME_END__+0xfa08>
  401264:	ldr	x17, [x16, #4072]
  401268:	add	x16, x16, #0xfe8
  40126c:	br	x17

Disassembly of section .text:

0000000000401270 <main>:
  401270:	stp	x29, x30, [sp, #-96]!
  401274:	mov	x29, sp
  401278:	stp	x21, x22, [sp, #32]
  40127c:	adrp	x21, 412000 <__FRAME_END__+0xfa08>
  401280:	add	x21, x21, #0xc80
  401284:	mov	w22, w0
  401288:	ldr	x0, [x21]
  40128c:	str	x0, [sp, #88]
  401290:	mov	x0, #0x0                   	// #0
  401294:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401298:	stp	x19, x20, [sp, #16]
  40129c:	mov	x20, x1
  4012a0:	str	w22, [x0, #8]
  4012a4:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  4012a8:	str	x23, [sp, #48]
  4012ac:	str	x1, [x0]
  4012b0:	mov	w0, #0xffffffff            	// #-1
  4012b4:	str	w0, [sp, #68]
  4012b8:	bl	4010f0 <log_setup_service@plt>
  4012bc:	cmp	w22, #0x3
  4012c0:	b.le	401334 <main+0xc4>
  4012c4:	mov	w0, #0x0                   	// #0
  4012c8:	bl	401260 <log_get_max_level_realm@plt>
  4012cc:	cmp	w0, #0x2
  4012d0:	b.gt	40130c <main+0x9c>
  4012d4:	mov	w19, #0xffffffea            	// #-22
  4012d8:	bl	401180 <ask_password_agent_close@plt>
  4012dc:	bl	401080 <polkit_agent_close@plt>
  4012e0:	bl	4011a0 <pager_close@plt>
  4012e4:	bl	401220 <mac_selinux_finish@plt>
  4012e8:	adrp	x0, 402000 <_fini+0x154>
  4012ec:	ldr	x0, [x0, #1056]
  4012f0:	cbnz	x0, 4019bc <main+0x74c>
  4012f4:	lsr	w0, w19, #31
  4012f8:	ldr	x2, [sp, #88]
  4012fc:	ldr	x1, [x21]
  401300:	eor	x1, x2, x1
  401304:	cbz	x1, 4019ec <main+0x77c>
  401308:	bl	401160 <__stack_chk_fail@plt>
  40130c:	adrp	x5, 402000 <_fini+0x154>
  401310:	adrp	x4, 402000 <_fini+0x154>
  401314:	add	x5, x5, #0x7a
  401318:	add	x4, x4, #0x45c
  40131c:	mov	w3, #0x7d                  	// #125
  401320:	mov	w1, #0x16                  	// #22
  401324:	adrp	x2, 401000 <_init+0x8>
  401328:	movk	w1, #0x4000, lsl #16
  40132c:	add	x2, x2, #0xed3
  401330:	b	401378 <main+0x108>
  401334:	add	x0, sp, #0x44
  401338:	bl	4010a0 <query_volatile_mode@plt>
  40133c:	mov	w19, w0
  401340:	cmp	w0, #0x0
  401344:	b.ge	401388 <main+0x118>  // b.tcont
  401348:	mov	w0, #0x0                   	// #0
  40134c:	bl	401260 <log_get_max_level_realm@plt>
  401350:	cmp	w0, #0x2
  401354:	b.le	401600 <main+0x390>
  401358:	adrp	x5, 402000 <_fini+0x154>
  40135c:	adrp	x4, 402000 <_fini+0x154>
  401360:	adrp	x2, 401000 <_init+0x8>
  401364:	add	x5, x5, #0xab
  401368:	add	x4, x4, #0x45c
  40136c:	add	x2, x2, #0xed3
  401370:	mov	w1, w19
  401374:	mov	w3, #0x82                  	// #130
  401378:	mov	w0, #0x3                   	// #3
  40137c:	bl	4011c0 <log_internal_realm@plt>
  401380:	mov	w19, w0
  401384:	b	4012d8 <main+0x68>
  401388:	ccmp	w22, #0x1, #0x4, eq  // eq = none
  40138c:	b.le	4013e4 <main+0x174>
  401390:	ldr	x0, [x20, #8]
  401394:	bl	4010e0 <volatile_mode_from_string@plt>
  401398:	str	w0, [sp, #68]
  40139c:	tbz	w0, #31, 4013e4 <main+0x174>
  4013a0:	mov	w0, #0x0                   	// #0
  4013a4:	bl	401260 <log_get_max_level_realm@plt>
  4013a8:	cmp	w0, #0x2
  4013ac:	b.le	4012d4 <main+0x64>
  4013b0:	ldr	x6, [x20, #8]
  4013b4:	adrp	x5, 402000 <_fini+0x154>
  4013b8:	adrp	x4, 402000 <_fini+0x154>
  4013bc:	add	x5, x5, #0xe7
  4013c0:	add	x4, x4, #0x45c
  4013c4:	mov	w3, #0x87                  	// #135
  4013c8:	adrp	x2, 401000 <_init+0x8>
  4013cc:	mov	w1, #0x16                  	// #22
  4013d0:	add	x2, x2, #0xed3
  4013d4:	movk	w1, #0x4000, lsl #16
  4013d8:	mov	w0, #0x3                   	// #3
  4013dc:	bl	4011c0 <log_internal_realm@plt>
  4013e0:	b	401380 <main+0x110>
  4013e4:	cmp	w22, #0x3
  4013e8:	b.ne	40149c <main+0x22c>  // b.any
  4013ec:	ldr	x20, [x20, #16]
  4013f0:	cbz	x20, 4013fc <main+0x18c>
  4013f4:	ldrb	w0, [x20]
  4013f8:	cbnz	w0, 401424 <main+0x1b4>
  4013fc:	mov	w0, #0x0                   	// #0
  401400:	bl	401260 <log_get_max_level_realm@plt>
  401404:	cmp	w0, #0x2
  401408:	b.le	4012d4 <main+0x64>
  40140c:	adrp	x5, 402000 <_fini+0x154>
  401410:	adrp	x4, 402000 <_fini+0x154>
  401414:	add	x5, x5, #0x108
  401418:	add	x4, x4, #0x45c
  40141c:	mov	w3, #0x90                  	// #144
  401420:	b	401320 <main+0xb0>
  401424:	mov	x0, x20
  401428:	bl	401110 <path_is_absolute@plt>
  40142c:	tst	w0, #0xff
  401430:	b.ne	40145c <main+0x1ec>  // b.any
  401434:	mov	w0, #0x0                   	// #0
  401438:	bl	401260 <log_get_max_level_realm@plt>
  40143c:	cmp	w0, #0x2
  401440:	b.le	4012d4 <main+0x64>
  401444:	adrp	x5, 402000 <_fini+0x154>
  401448:	adrp	x4, 402000 <_fini+0x154>
  40144c:	add	x5, x5, #0x128
  401450:	add	x4, x4, #0x45c
  401454:	mov	w3, #0x93                  	// #147
  401458:	b	401320 <main+0xb0>
  40145c:	mov	x0, x20
  401460:	adrp	x1, 402000 <_fini+0x154>
  401464:	add	x1, x1, #0x156
  401468:	bl	4010b0 <path_equal@plt>
  40146c:	tst	w0, #0xff
  401470:	b.eq	4014a4 <main+0x234>  // b.none
  401474:	mov	w0, #0x0                   	// #0
  401478:	bl	401260 <log_get_max_level_realm@plt>
  40147c:	cmp	w0, #0x2
  401480:	b.le	4012d4 <main+0x64>
  401484:	adrp	x5, 402000 <_fini+0x154>
  401488:	adrp	x4, 402000 <_fini+0x154>
  40148c:	add	x5, x5, #0x158
  401490:	add	x4, x4, #0x45c
  401494:	mov	w3, #0x96                  	// #150
  401498:	b	401320 <main+0xb0>
  40149c:	adrp	x20, 402000 <_fini+0x154>
  4014a0:	add	x20, x20, #0x71
  4014a4:	ldr	w0, [sp, #68]
  4014a8:	and	w0, w0, #0xfffffffd
  4014ac:	cmp	w0, #0x1
  4014b0:	b.ne	4015b4 <main+0x344>  // b.any
  4014b4:	mov	x0, x20
  4014b8:	mov	w2, #0x400                 	// #1024
  4014bc:	mov	x1, #0x0                   	// #0
  4014c0:	bl	4011d0 <path_is_mount_point@plt>
  4014c4:	mov	w19, w0
  4014c8:	cmp	w0, #0x0
  4014cc:	b.ge	401508 <main+0x298>  // b.tcont
  4014d0:	mov	w0, #0x0                   	// #0
  4014d4:	bl	401260 <log_get_max_level_realm@plt>
  4014d8:	cmp	w0, #0x2
  4014dc:	b.le	401600 <main+0x390>
  4014e0:	adrp	x5, 402000 <_fini+0x154>
  4014e4:	adrp	x4, 402000 <_fini+0x154>
  4014e8:	mov	x6, x20
  4014ec:	add	x5, x5, #0x180
  4014f0:	add	x4, x4, #0x45c
  4014f4:	mov	w3, #0x9f                  	// #159
  4014f8:	adrp	x2, 401000 <_init+0x8>
  4014fc:	mov	w1, w19
  401500:	add	x2, x2, #0xed3
  401504:	b	4013d8 <main+0x168>
  401508:	b.ne	401534 <main+0x2c4>  // b.any
  40150c:	bl	401260 <log_get_max_level_realm@plt>
  401510:	cmp	w0, #0x2
  401514:	b.le	4012d4 <main+0x64>
  401518:	adrp	x5, 402000 <_fini+0x154>
  40151c:	adrp	x4, 402000 <_fini+0x154>
  401520:	mov	x6, x20
  401524:	add	x5, x5, #0x1b3
  401528:	add	x4, x4, #0x45c
  40152c:	mov	w3, #0xa1                  	// #161
  401530:	b	4013c8 <main+0x158>
  401534:	mov	x0, x20
  401538:	bl	401170 <path_is_temporary_fs@plt>
  40153c:	mov	w19, w0
  401540:	cmp	w0, #0x0
  401544:	b.ge	401574 <main+0x304>  // b.tcont
  401548:	mov	w0, #0x0                   	// #0
  40154c:	bl	401260 <log_get_max_level_realm@plt>
  401550:	cmp	w0, #0x2
  401554:	b.le	401600 <main+0x390>
  401558:	adrp	x5, 402000 <_fini+0x154>
  40155c:	adrp	x4, 402000 <_fini+0x154>
  401560:	mov	x6, x20
  401564:	add	x5, x5, #0x1cc
  401568:	add	x4, x4, #0x45c
  40156c:	mov	w3, #0xa5                  	// #165
  401570:	b	4014f8 <main+0x288>
  401574:	b.eq	4015bc <main+0x34c>  // b.none
  401578:	mov	w0, #0x0                   	// #0
  40157c:	bl	401260 <log_get_max_level_realm@plt>
  401580:	cmp	w0, #0x5
  401584:	b.le	4015b4 <main+0x344>
  401588:	adrp	x5, 402000 <_fini+0x154>
  40158c:	adrp	x4, 402000 <_fini+0x154>
  401590:	adrp	x2, 401000 <_init+0x8>
  401594:	mov	x6, x20
  401598:	add	x5, x5, #0x209
  40159c:	add	x4, x4, #0x45c
  4015a0:	add	x2, x2, #0xed3
  4015a4:	mov	w3, #0xa7                  	// #167
  4015a8:	mov	w1, #0x0                   	// #0
  4015ac:	mov	w0, #0x6                   	// #6
  4015b0:	bl	4011c0 <log_internal_realm@plt>
  4015b4:	mov	w19, #0x0                   	// #0
  4015b8:	b	4012d8 <main+0x68>
  4015bc:	add	x1, sp, #0x48
  4015c0:	mov	x0, x20
  4015c4:	bl	401130 <get_block_device_harder@plt>
  4015c8:	mov	w19, w0
  4015cc:	cmp	w0, #0x0
  4015d0:	b.ge	401610 <main+0x3a0>  // b.tcont
  4015d4:	mov	w0, #0x0                   	// #0
  4015d8:	bl	401260 <log_get_max_level_realm@plt>
  4015dc:	cmp	w0, #0x2
  4015e0:	b.le	401600 <main+0x390>
  4015e4:	adrp	x5, 402000 <_fini+0x154>
  4015e8:	adrp	x4, 402000 <_fini+0x154>
  4015ec:	mov	x6, x20
  4015f0:	add	x5, x5, #0x230
  4015f4:	add	x4, x4, #0x45c
  4015f8:	mov	w3, #0xb1                  	// #177
  4015fc:	b	4014f8 <main+0x288>
  401600:	neg	w0, w19
  401604:	and	w0, w0, #0xff
  401608:	neg	w19, w0
  40160c:	b	4012d8 <main+0x68>
  401610:	b.eq	4016d0 <main+0x460>  // b.none
  401614:	ldr	x1, [sp, #72]
  401618:	add	x2, sp, #0x50
  40161c:	mov	w0, #0x6000                	// #24576
  401620:	str	xzr, [sp, #80]
  401624:	bl	4010c0 <device_path_make_major_minor@plt>
  401628:	mov	w19, w0
  40162c:	tbz	w0, #31, 401678 <main+0x408>
  401630:	mov	w0, #0x0                   	// #0
  401634:	bl	401260 <log_get_max_level_realm@plt>
  401638:	cmp	w0, #0x2
  40163c:	b.le	40176c <main+0x4fc>
  401640:	adrp	x5, 402000 <_fini+0x154>
  401644:	adrp	x4, 402000 <_fini+0x154>
  401648:	add	x5, x5, #0x261
  40164c:	add	x4, x4, #0x45c
  401650:	mov	w3, #0xb7                  	// #183
  401654:	mov	w1, w19
  401658:	adrp	x2, 401000 <_init+0x8>
  40165c:	mov	w0, #0x3                   	// #3
  401660:	add	x2, x2, #0xed3
  401664:	bl	4011c0 <log_internal_realm@plt>
  401668:	mov	w19, w0
  40166c:	ldr	x0, [sp, #80]
  401670:	bl	401200 <free@plt>
  401674:	b	4012d8 <main+0x68>
  401678:	ldr	x0, [sp, #80]
  40167c:	adrp	x1, 402000 <_fini+0x154>
  401680:	add	x1, x1, #0x287
  401684:	bl	4010d0 <symlink@plt>
  401688:	tbz	w0, #31, 4016c8 <main+0x458>
  40168c:	mov	w0, #0x0                   	// #0
  401690:	bl	401260 <log_get_max_level_realm@plt>
  401694:	cmp	w0, #0x3
  401698:	b.le	4016c8 <main+0x458>
  40169c:	bl	401150 <__errno_location@plt>
  4016a0:	ldr	w1, [x0]
  4016a4:	adrp	x5, 402000 <_fini+0x154>
  4016a8:	adrp	x4, 402000 <_fini+0x154>
  4016ac:	adrp	x2, 401000 <_init+0x8>
  4016b0:	add	x5, x5, #0x2a2
  4016b4:	add	x4, x4, #0x45c
  4016b8:	add	x2, x2, #0xed3
  4016bc:	mov	w3, #0xba                  	// #186
  4016c0:	mov	w0, #0x4                   	// #4
  4016c4:	bl	4011c0 <log_internal_realm@plt>
  4016c8:	ldr	x0, [sp, #80]
  4016cc:	bl	401200 <free@plt>
  4016d0:	ldr	w2, [sp, #68]
  4016d4:	cmp	w2, #0x1
  4016d8:	b.ne	401984 <main+0x714>  // b.any
  4016dc:	add	x3, sp, #0x50
  4016e0:	mov	x1, x20
  4016e4:	mov	x4, #0x0                   	// #0
  4016e8:	adrp	x0, 402000 <_fini+0x154>
  4016ec:	add	x0, x0, #0x369
  4016f0:	str	xzr, [sp, #80]
  4016f4:	bl	401070 <chase_symlinks@plt>
  4016f8:	mov	w19, w0
  4016fc:	tbz	w0, #31, 401728 <main+0x4b8>
  401700:	mov	w0, #0x0                   	// #0
  401704:	bl	401260 <log_get_max_level_realm@plt>
  401708:	cmp	w0, #0x2
  40170c:	b.le	40176c <main+0x4fc>
  401710:	adrp	x5, 402000 <_fini+0x154>
  401714:	adrp	x4, 402000 <_fini+0x154>
  401718:	add	x5, x5, #0x2da
  40171c:	add	x4, x4, #0x441
  401720:	mov	w3, #0x1a                  	// #26
  401724:	b	401654 <main+0x3e4>
  401728:	adrp	x22, 402000 <_fini+0x154>
  40172c:	add	x22, x22, #0x2fd
  401730:	mov	x0, x22
  401734:	mov	w1, #0x1c0                 	// #448
  401738:	bl	401230 <mkdir_p@plt>
  40173c:	mov	w19, w0
  401740:	tbz	w0, #31, 40177c <main+0x50c>
  401744:	mov	w0, #0x0                   	// #0
  401748:	bl	401260 <log_get_max_level_realm@plt>
  40174c:	cmp	w0, #0x2
  401750:	b.le	40176c <main+0x4fc>
  401754:	adrp	x5, 402000 <_fini+0x154>
  401758:	adrp	x4, 402000 <_fini+0x154>
  40175c:	add	x5, x5, #0x31b
  401760:	add	x4, x4, #0x441
  401764:	mov	w3, #0x1e                  	// #30
  401768:	b	401654 <main+0x3e4>
  40176c:	neg	w0, w19
  401770:	and	w0, w0, #0xff
  401774:	neg	w19, w0
  401778:	b	40166c <main+0x3fc>
  40177c:	adrp	x3, 401000 <_init+0x8>
  401780:	add	x3, x3, #0xf4e
  401784:	mov	x2, x22
  401788:	mov	x1, x3
  40178c:	adrp	x5, 401000 <_init+0x8>
  401790:	mov	x4, #0x1000000             	// #16777216
  401794:	add	x5, x5, #0xf45
  401798:	mov	w0, #0x3                   	// #3
  40179c:	bl	401030 <mount_verbose@plt>
  4017a0:	mov	w19, w0
  4017a4:	tbnz	w0, #31, 401824 <main+0x5b4>
  4017a8:	adrp	x23, 402000 <_fini+0x154>
  4017ac:	add	x23, x23, #0x34c
  4017b0:	mov	x0, x23
  4017b4:	mov	w1, #0x1ed                 	// #493
  4017b8:	bl	4011e0 <mkdir@plt>
  4017bc:	tbz	w0, #31, 401830 <main+0x5c0>
  4017c0:	bl	401150 <__errno_location@plt>
  4017c4:	ldr	w19, [x0]
  4017c8:	mov	w0, #0x0                   	// #0
  4017cc:	bl	401260 <log_get_max_level_realm@plt>
  4017d0:	cmp	w0, #0x2
  4017d4:	b.le	401808 <main+0x598>
  4017d8:	adrp	x5, 402000 <_fini+0x154>
  4017dc:	adrp	x4, 402000 <_fini+0x154>
  4017e0:	adrp	x2, 401000 <_init+0x8>
  4017e4:	add	x5, x5, #0x36e
  4017e8:	add	x4, x4, #0x441
  4017ec:	add	x2, x2, #0xed3
  4017f0:	mov	w1, w19
  4017f4:	mov	w3, #0x25                  	// #37
  4017f8:	mov	w0, #0x3                   	// #3
  4017fc:	bl	4011c0 <log_internal_realm@plt>
  401800:	mov	w19, w0
  401804:	b	401818 <main+0x5a8>
  401808:	cmp	w19, #0x0
  40180c:	cneg	w19, w19, lt  // lt = tstop
  401810:	and	w0, w19, #0xff
  401814:	neg	w19, w0
  401818:	mov	x0, x22
  40181c:	mov	w1, #0x0                   	// #0
  401820:	bl	401190 <umount_recursive@plt>
  401824:	mov	x0, x22
  401828:	bl	401140 <rmdir@plt>
  40182c:	b	40166c <main+0x3fc>
  401830:	ldr	x1, [sp, #80]
  401834:	mov	x2, x23
  401838:	mov	x5, #0x0                   	// #0
  40183c:	mov	x4, #0x5000                	// #20480
  401840:	mov	x3, #0x0                   	// #0
  401844:	mov	w0, #0x3                   	// #3
  401848:	bl	401030 <mount_verbose@plt>
  40184c:	mov	w19, w0
  401850:	tbnz	w0, #31, 401818 <main+0x5a8>
  401854:	mov	x2, #0x1                   	// #1
  401858:	mov	x0, x23
  40185c:	mov	x1, x2
  401860:	mov	x3, #0x0                   	// #0
  401864:	bl	401210 <bind_remount_recursive@plt>
  401868:	mov	w19, w0
  40186c:	tbz	w0, #31, 4018ac <main+0x63c>
  401870:	mov	w0, #0x0                   	// #0
  401874:	bl	401260 <log_get_max_level_realm@plt>
  401878:	cmp	w0, #0x2
  40187c:	b.le	401818 <main+0x5a8>
  401880:	mov	w1, w19
  401884:	adrp	x5, 402000 <_fini+0x154>
  401888:	adrp	x4, 402000 <_fini+0x154>
  40188c:	add	x5, x5, #0x392
  401890:	add	x4, x4, #0x441
  401894:	mov	w3, #0x2f                  	// #47
  401898:	adrp	x2, 401000 <_init+0x8>
  40189c:	mov	w0, #0x3                   	// #3
  4018a0:	add	x2, x2, #0xed3
  4018a4:	bl	4011c0 <log_internal_realm@plt>
  4018a8:	b	401818 <main+0x5a8>
  4018ac:	mov	x0, x20
  4018b0:	mov	w1, #0x0                   	// #0
  4018b4:	bl	401190 <umount_recursive@plt>
  4018b8:	mov	w19, w0
  4018bc:	tbz	w0, #31, 401900 <main+0x690>
  4018c0:	mov	w0, #0x0                   	// #0
  4018c4:	bl	401260 <log_get_max_level_realm@plt>
  4018c8:	cmp	w0, #0x2
  4018cc:	b.le	401818 <main+0x5a8>
  4018d0:	mov	x6, x20
  4018d4:	mov	w1, w19
  4018d8:	adrp	x5, 402000 <_fini+0x154>
  4018dc:	adrp	x4, 402000 <_fini+0x154>
  4018e0:	add	x5, x5, #0x3b7
  4018e4:	add	x4, x4, #0x441
  4018e8:	mov	w3, #0x35                  	// #53
  4018ec:	adrp	x2, 401000 <_init+0x8>
  4018f0:	mov	w0, #0x3                   	// #3
  4018f4:	add	x2, x2, #0xed3
  4018f8:	bl	4011c0 <log_internal_realm@plt>
  4018fc:	b	401818 <main+0x5a8>
  401900:	mov	x3, #0x4000                	// #16384
  401904:	adrp	x1, 402000 <_fini+0x154>
  401908:	mov	x4, #0x0                   	// #0
  40190c:	add	x1, x1, #0x156
  401910:	movk	x3, #0x8, lsl #16
  401914:	mov	x2, #0x0                   	// #0
  401918:	mov	x0, #0x0                   	// #0
  40191c:	bl	4011f0 <mount@plt>
  401920:	tbz	w0, #31, 401964 <main+0x6f4>
  401924:	mov	w0, #0x0                   	// #0
  401928:	bl	401260 <log_get_max_level_realm@plt>
  40192c:	cmp	w0, #0x3
  401930:	b.le	401964 <main+0x6f4>
  401934:	bl	401150 <__errno_location@plt>
  401938:	ldr	w1, [x0]
  40193c:	adrp	x5, 402000 <_fini+0x154>
  401940:	adrp	x4, 402000 <_fini+0x154>
  401944:	adrp	x2, 401000 <_init+0x8>
  401948:	mov	x6, x20
  40194c:	add	x5, x5, #0x3d0
  401950:	add	x4, x4, #0x441
  401954:	add	x2, x2, #0xed3
  401958:	mov	w3, #0x3a                  	// #58
  40195c:	mov	w0, #0x4                   	// #4
  401960:	bl	4011c0 <log_internal_realm@plt>
  401964:	mov	x2, x20
  401968:	mov	x1, x22
  40196c:	mov	x5, #0x0                   	// #0
  401970:	mov	x4, #0x2000                	// #8192
  401974:	mov	x3, #0x0                   	// #0
  401978:	mov	w0, #0x3                   	// #3
  40197c:	bl	401030 <mount_verbose@plt>
  401980:	b	401800 <main+0x590>
  401984:	cmp	w2, #0x3
  401988:	b.eq	4019b0 <main+0x740>  // b.none
  40198c:	adrp	x4, 402000 <_fini+0x154>
  401990:	adrp	x2, 401000 <_init+0x8>
  401994:	adrp	x1, 402000 <_fini+0x154>
  401998:	add	x4, x4, #0x43d
  40199c:	add	x2, x2, #0xed3
  4019a0:	add	x1, x1, #0x403
  4019a4:	mov	w3, #0xc0                  	// #192
  4019a8:	mov	w0, #0x0                   	// #0
  4019ac:	bl	401100 <log_assert_failed_realm@plt>
  4019b0:	mov	x0, x20
  4019b4:	bl	401b2c <make_overlay>
  4019b8:	b	401380 <main+0x110>
  4019bc:	add	x0, x0, #0x7
  4019c0:	adrp	x22, 402000 <_fini+0x154>
  4019c4:	and	x0, x0, #0xfffffffffffffff8
  4019c8:	ldr	x1, [x22, #1064]
  4019cc:	cmp	x0, x1
  4019d0:	b.cs	4012f4 <main+0x84>  // b.hs, b.nlast
  4019d4:	mov	x20, x0
  4019d8:	ldr	x1, [x0, #8]
  4019dc:	ldr	x0, [x20], #23
  4019e0:	blr	x1
  4019e4:	and	x0, x20, #0xfffffffffffffff8
  4019e8:	b	4019c8 <main+0x758>
  4019ec:	ldp	x19, x20, [sp, #16]
  4019f0:	ldp	x21, x22, [sp, #32]
  4019f4:	ldr	x23, [sp, #48]
  4019f8:	ldp	x29, x30, [sp], #96
  4019fc:	ret

0000000000401a00 <_start>:
  401a00:	mov	x29, #0x0                   	// #0
  401a04:	mov	x30, #0x0                   	// #0
  401a08:	mov	x5, x0
  401a0c:	ldr	x1, [sp]
  401a10:	add	x2, sp, #0x8
  401a14:	mov	x6, sp
  401a18:	movz	x0, #0x0, lsl #48
  401a1c:	movk	x0, #0x0, lsl #32
  401a20:	movk	x0, #0x40, lsl #16
  401a24:	movk	x0, #0x1270
  401a28:	movz	x3, #0x0, lsl #48
  401a2c:	movk	x3, #0x0, lsl #32
  401a30:	movk	x3, #0x40, lsl #16
  401a34:	movk	x3, #0x1e28
  401a38:	movz	x4, #0x0, lsl #48
  401a3c:	movk	x4, #0x0, lsl #32
  401a40:	movk	x4, #0x40, lsl #16
  401a44:	movk	x4, #0x1ea8
  401a48:	bl	401050 <__libc_start_main@plt>
  401a4c:	bl	401120 <abort@plt>

0000000000401a50 <call_weak_fn>:
  401a50:	adrp	x0, 412000 <__FRAME_END__+0xfa08>
  401a54:	ldr	x0, [x0, #4088]
  401a58:	cbz	x0, 401a60 <call_weak_fn+0x10>
  401a5c:	b	401060 <__gmon_start__@plt>
  401a60:	ret

0000000000401a64 <deregister_tm_clones>:
  401a64:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401a68:	add	x1, x0, #0x0
  401a6c:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401a70:	add	x0, x0, #0x0
  401a74:	cmp	x1, x0
  401a78:	b.eq	401aa4 <deregister_tm_clones+0x40>  // b.none
  401a7c:	sub	sp, sp, #0x10
  401a80:	adrp	x1, 401000 <_init+0x8>
  401a84:	ldr	x1, [x1, #3776]
  401a88:	str	x1, [sp, #8]
  401a8c:	cbz	x1, 401a9c <deregister_tm_clones+0x38>
  401a90:	mov	x16, x1
  401a94:	add	sp, sp, #0x10
  401a98:	br	x16
  401a9c:	add	sp, sp, #0x10
  401aa0:	ret
  401aa4:	ret

0000000000401aa8 <register_tm_clones>:
  401aa8:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401aac:	add	x1, x0, #0x0
  401ab0:	adrp	x0, 413000 <saved_argv@@SD_SHARED>
  401ab4:	add	x0, x0, #0x0
  401ab8:	sub	x1, x1, x0
  401abc:	mov	x2, #0x2                   	// #2
  401ac0:	asr	x1, x1, #3
  401ac4:	sdiv	x1, x1, x2
  401ac8:	cbz	x1, 401af4 <register_tm_clones+0x4c>
  401acc:	sub	sp, sp, #0x10
  401ad0:	adrp	x2, 401000 <_init+0x8>
  401ad4:	ldr	x2, [x2, #3784]
  401ad8:	str	x2, [sp, #8]
  401adc:	cbz	x2, 401aec <register_tm_clones+0x44>
  401ae0:	mov	x16, x2
  401ae4:	add	sp, sp, #0x10
  401ae8:	br	x16
  401aec:	add	sp, sp, #0x10
  401af0:	ret
  401af4:	ret

0000000000401af8 <__do_global_dtors_aux>:
  401af8:	stp	x29, x30, [sp, #-32]!
  401afc:	mov	x29, sp
  401b00:	str	x19, [sp, #16]
  401b04:	adrp	x19, 413000 <saved_argv@@SD_SHARED>
  401b08:	ldrb	w0, [x19, #12]
  401b0c:	cbnz	w0, 401b1c <__do_global_dtors_aux+0x24>
  401b10:	bl	401a64 <deregister_tm_clones>
  401b14:	mov	w0, #0x1                   	// #1
  401b18:	strb	w0, [x19, #12]
  401b1c:	ldr	x19, [sp, #16]
  401b20:	ldp	x29, x30, [sp], #32
  401b24:	ret

0000000000401b28 <frame_dummy>:
  401b28:	b	401aa8 <register_tm_clones>

0000000000401b2c <make_overlay>:
  401b2c:	stp	x29, x30, [sp, #-112]!
  401b30:	mov	x29, sp
  401b34:	stp	x21, x22, [sp, #32]
  401b38:	adrp	x21, 412000 <__FRAME_END__+0xfa08>
  401b3c:	add	x21, x21, #0xc80
  401b40:	stp	x23, x24, [sp, #48]
  401b44:	mov	x23, x0
  401b48:	ldr	x0, [x21]
  401b4c:	str	x0, [x29, #104]
  401b50:	mov	x0, #0x0                   	// #0
  401b54:	stp	x19, x20, [sp, #16]
  401b58:	str	x25, [sp, #64]
  401b5c:	cbnz	x23, 401b80 <make_overlay+0x54>
  401b60:	adrp	x4, 402000 <_fini+0x154>
  401b64:	adrp	x2, 401000 <_init+0x8>
  401b68:	adrp	x1, 401000 <_init+0x8>
  401b6c:	add	x4, x4, #0x430
  401b70:	add	x2, x2, #0xed3
  401b74:	add	x1, x1, #0xef5
  401b78:	mov	w3, #0x4d                  	// #77
  401b7c:	bl	401100 <log_assert_failed_realm@plt>
  401b80:	adrp	x20, 401000 <_init+0x8>
  401b84:	add	x20, x20, #0xefa
  401b88:	mov	x0, x20
  401b8c:	mov	w1, #0x1c0                 	// #448
  401b90:	bl	401230 <mkdir_p@plt>
  401b94:	mov	w19, w0
  401b98:	tbz	w0, #31, 401c08 <make_overlay+0xdc>
  401b9c:	mov	w0, #0x0                   	// #0
  401ba0:	bl	401260 <log_get_max_level_realm@plt>
  401ba4:	cmp	w0, #0x2
  401ba8:	b.le	401bf8 <make_overlay+0xcc>
  401bac:	mov	w1, w19
  401bb0:	adrp	x5, 401000 <_init+0x8>
  401bb4:	adrp	x4, 402000 <_fini+0x154>
  401bb8:	add	x5, x5, #0xf17
  401bbc:	add	x4, x4, #0x44f
  401bc0:	mov	w3, #0x51                  	// #81
  401bc4:	adrp	x2, 401000 <_init+0x8>
  401bc8:	mov	w0, #0x3                   	// #3
  401bcc:	add	x2, x2, #0xed3
  401bd0:	bl	4011c0 <log_internal_realm@plt>
  401bd4:	mov	w19, w0
  401bd8:	mov	x22, #0x0                   	// #0
  401bdc:	mov	x0, x22
  401be0:	bl	401200 <free@plt>
  401be4:	ldr	x1, [x29, #104]
  401be8:	ldr	x0, [x21]
  401bec:	eor	x0, x1, x0
  401bf0:	cbz	x0, 401e08 <make_overlay+0x2dc>
  401bf4:	bl	401160 <__stack_chk_fail@plt>
  401bf8:	neg	w19, w19
  401bfc:	and	w0, w19, #0xff
  401c00:	neg	w19, w0
  401c04:	b	401bd8 <make_overlay+0xac>
  401c08:	adrp	x3, 401000 <_init+0x8>
  401c0c:	add	x3, x3, #0xf4e
  401c10:	mov	x2, x20
  401c14:	mov	x1, x3
  401c18:	adrp	x5, 401000 <_init+0x8>
  401c1c:	mov	x4, #0x1000000             	// #16777216
  401c20:	add	x5, x5, #0xf45
  401c24:	mov	w0, #0x3                   	// #3
  401c28:	bl	401030 <mount_verbose@plt>
  401c2c:	mov	w19, w0
  401c30:	tbnz	w0, #31, 401e00 <make_overlay+0x2d4>
  401c34:	adrp	x0, 401000 <_init+0x8>
  401c38:	mov	w1, #0x1ed                 	// #493
  401c3c:	add	x0, x0, #0xf54
  401c40:	bl	4011e0 <mkdir@plt>
  401c44:	tbz	w0, #31, 401ca4 <make_overlay+0x178>
  401c48:	bl	401150 <__errno_location@plt>
  401c4c:	ldr	w19, [x0]
  401c50:	mov	w0, #0x0                   	// #0
  401c54:	bl	401260 <log_get_max_level_realm@plt>
  401c58:	cmp	w0, #0x2
  401c5c:	b.le	401ce8 <make_overlay+0x1bc>
  401c60:	adrp	x5, 401000 <_init+0x8>
  401c64:	adrp	x4, 402000 <_fini+0x154>
  401c68:	add	x5, x5, #0xf77
  401c6c:	add	x4, x4, #0x44f
  401c70:	mov	w3, #0x5a                  	// #90
  401c74:	mov	w1, w19
  401c78:	adrp	x2, 401000 <_init+0x8>
  401c7c:	mov	w0, #0x3                   	// #3
  401c80:	add	x2, x2, #0xed3
  401c84:	bl	4011c0 <log_internal_realm@plt>
  401c88:	mov	w19, w0
  401c8c:	mov	x22, #0x0                   	// #0
  401c90:	mov	x0, x20
  401c94:	bl	401090 <umount_verbose@plt>
  401c98:	mov	x0, x20
  401c9c:	bl	401140 <rmdir@plt>
  401ca0:	b	401bdc <make_overlay+0xb0>
  401ca4:	adrp	x0, 402000 <_fini+0x154>
  401ca8:	mov	w1, #0x1ed                 	// #493
  401cac:	add	x0, x0, #0x28
  401cb0:	bl	4011e0 <mkdir@plt>
  401cb4:	tbz	w0, #31, 401cfc <make_overlay+0x1d0>
  401cb8:	bl	401150 <__errno_location@plt>
  401cbc:	ldr	w19, [x0]
  401cc0:	mov	w0, #0x0                   	// #0
  401cc4:	bl	401260 <log_get_max_level_realm@plt>
  401cc8:	cmp	w0, #0x2
  401ccc:	b.le	401ce8 <make_overlay+0x1bc>
  401cd0:	adrp	x5, 401000 <_init+0x8>
  401cd4:	adrp	x4, 402000 <_fini+0x154>
  401cd8:	add	x5, x5, #0xfaf
  401cdc:	add	x4, x4, #0x44f
  401ce0:	mov	w3, #0x5f                  	// #95
  401ce4:	b	401c74 <make_overlay+0x148>
  401ce8:	cmp	w19, #0x0
  401cec:	cneg	w19, w19, lt  // lt = tstop
  401cf0:	and	w0, w19, #0xff
  401cf4:	neg	w19, w0
  401cf8:	b	401c8c <make_overlay+0x160>
  401cfc:	mov	x0, x23
  401d00:	adrp	x1, 401000 <_init+0x8>
  401d04:	add	x1, x1, #0xfe6
  401d08:	bl	4011b0 <shell_escape@plt>
  401d0c:	mov	x22, x0
  401d10:	cbnz	x0, 401d38 <make_overlay+0x20c>
  401d14:	adrp	x3, 402000 <_fini+0x154>
  401d18:	adrp	x1, 401000 <_init+0x8>
  401d1c:	add	x3, x3, #0x44f
  401d20:	add	x1, x1, #0xed3
  401d24:	mov	w2, #0x65                  	// #101
  401d28:	mov	w0, #0x0                   	// #0
  401d2c:	bl	401250 <log_oom_internal@plt>
  401d30:	mov	w19, w0
  401d34:	b	401c90 <make_overlay+0x164>
  401d38:	adrp	x0, 401000 <_init+0x8>
  401d3c:	add	x24, x29, #0x50
  401d40:	add	x0, x0, #0xfe9
  401d44:	mov	x25, #0x0                   	// #0
  401d48:	mov	x19, #0x0                   	// #0
  401d4c:	stp	x0, x22, [x29, #80]
  401d50:	adrp	x0, 401000 <_init+0x8>
  401d54:	add	x0, x0, #0xff3
  401d58:	str	x0, [x29, #96]
  401d5c:	ldr	x0, [x24, x25, lsl #3]
  401d60:	cbz	x0, 401d78 <make_overlay+0x24c>
  401d64:	bl	401240 <strlen@plt>
  401d68:	add	x25, x25, #0x1
  401d6c:	add	x19, x19, x0
  401d70:	cmp	x25, #0x3
  401d74:	b.ne	401d5c <make_overlay+0x230>  // b.any
  401d78:	add	x0, x19, #0x1
  401d7c:	cmp	x0, #0x400, lsl #12
  401d80:	b.ls	401da8 <make_overlay+0x27c>  // b.plast
  401d84:	adrp	x4, 402000 <_fini+0x154>
  401d88:	adrp	x2, 401000 <_init+0x8>
  401d8c:	adrp	x1, 402000 <_fini+0x154>
  401d90:	add	x4, x4, #0x430
  401d94:	add	x2, x2, #0xed3
  401d98:	add	x1, x1, #0x4a
  401d9c:	mov	w3, #0x69                  	// #105
  401da0:	mov	w0, #0x0                   	// #0
  401da4:	b	401b7c <make_overlay+0x50>
  401da8:	add	x19, x19, #0x10
  401dac:	and	x19, x19, #0xfffffffffffffff0
  401db0:	sub	sp, sp, x19
  401db4:	mov	x19, #0x0                   	// #0
  401db8:	mov	x25, sp
  401dbc:	mov	x0, x25
  401dc0:	ldr	x1, [x24, x19, lsl #3]
  401dc4:	cbz	x1, 401dd8 <make_overlay+0x2ac>
  401dc8:	add	x19, x19, #0x1
  401dcc:	bl	401040 <stpcpy@plt>
  401dd0:	cmp	x19, #0x3
  401dd4:	b.ne	401dc0 <make_overlay+0x294>  // b.any
  401dd8:	strb	wzr, [x0]
  401ddc:	adrp	x3, 402000 <_fini+0x154>
  401de0:	add	x3, x3, #0x69
  401de4:	mov	x5, x25
  401de8:	mov	x2, x23
  401dec:	mov	x1, x3
  401df0:	mov	x4, #0x0                   	// #0
  401df4:	mov	w0, #0x3                   	// #3
  401df8:	bl	401030 <mount_verbose@plt>
  401dfc:	b	401d30 <make_overlay+0x204>
  401e00:	mov	x22, #0x0                   	// #0
  401e04:	b	401c98 <make_overlay+0x16c>
  401e08:	mov	sp, x29
  401e0c:	mov	w0, w19
  401e10:	ldp	x19, x20, [sp, #16]
  401e14:	ldp	x21, x22, [sp, #32]
  401e18:	ldp	x23, x24, [sp, #48]
  401e1c:	ldr	x25, [sp, #64]
  401e20:	ldp	x29, x30, [sp], #112
  401e24:	ret

0000000000401e28 <__libc_csu_init>:
  401e28:	stp	x29, x30, [sp, #-64]!
  401e2c:	mov	x29, sp
  401e30:	stp	x19, x20, [sp, #16]
  401e34:	adrp	x20, 412000 <__FRAME_END__+0xfa08>
  401e38:	add	x20, x20, #0xc78
  401e3c:	stp	x21, x22, [sp, #32]
  401e40:	adrp	x21, 412000 <__FRAME_END__+0xfa08>
  401e44:	add	x21, x21, #0xc70
  401e48:	sub	x20, x20, x21
  401e4c:	mov	w22, w0
  401e50:	stp	x23, x24, [sp, #48]
  401e54:	mov	x23, x1
  401e58:	mov	x24, x2
  401e5c:	bl	400ff8 <_init>
  401e60:	cmp	xzr, x20, asr #3
  401e64:	b.eq	401e90 <__libc_csu_init+0x68>  // b.none
  401e68:	asr	x20, x20, #3
  401e6c:	mov	x19, #0x0                   	// #0
  401e70:	ldr	x3, [x21, x19, lsl #3]
  401e74:	mov	x2, x24
  401e78:	add	x19, x19, #0x1
  401e7c:	mov	x1, x23
  401e80:	mov	w0, w22
  401e84:	blr	x3
  401e88:	cmp	x20, x19
  401e8c:	b.ne	401e70 <__libc_csu_init+0x48>  // b.any
  401e90:	ldp	x19, x20, [sp, #16]
  401e94:	ldp	x21, x22, [sp, #32]
  401e98:	ldp	x23, x24, [sp, #48]
  401e9c:	ldp	x29, x30, [sp], #64
  401ea0:	ret
  401ea4:	nop

0000000000401ea8 <__libc_csu_fini>:
  401ea8:	ret

Disassembly of section .fini:

0000000000401eac <_fini>:
  401eac:	stp	x29, x30, [sp, #-16]!
  401eb0:	mov	x29, sp
  401eb4:	ldp	x29, x30, [sp], #16
  401eb8:	ret
