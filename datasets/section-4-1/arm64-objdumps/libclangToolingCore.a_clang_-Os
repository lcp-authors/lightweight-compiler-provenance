In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclangToolingCore.a_clang_-Os:

Diagnostic.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	add	x8, x0, #0x10
  14:	str	x8, [x0]
  18:	cbz	x1, 2c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x2c>
  1c:	add	x2, x1, x2
  20:	mov	x0, x19
  24:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
  28:	b	34 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE+0x34>
  2c:	str	xzr, [x19, #8]
  30:	strb	wzr, [x19, #16]
  34:	strb	wzr, [x19, #48]!
  38:	mov	x8, #0x3800000000          	// #240518168576
  3c:	stp	x19, xzr, [x19, #-16]
  40:	stp	xzr, xzr, [x19, #24]
  44:	str	wzr, [x19, #16]
  48:	str	x8, [x19, #40]
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

0000000000000058 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE>:
  58:	sub	sp, sp, #0x60
  5c:	stp	x29, x30, [sp, #32]
  60:	str	x23, [sp, #48]
  64:	stp	x22, x21, [sp, #64]
  68:	stp	x20, x19, [sp, #80]
  6c:	add	x29, sp, #0x20
  70:	mov	x21, x4
  74:	mov	x20, x3
  78:	mov	x19, x0
  7c:	add	x8, x0, #0x10
  80:	str	x8, [x0]
  84:	cbz	x1, 98 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x40>
  88:	add	x2, x1, x2
  8c:	mov	x0, x19
  90:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
  94:	b	a0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x48>
  98:	str	xzr, [x19, #8]
  9c:	strb	wzr, [x19, #16]
  a0:	mov	x8, x19
  a4:	mov	x22, x19
  a8:	strb	wzr, [x8, #48]!
  ac:	mov	x9, #0x3800000000          	// #240518168576
  b0:	cmp	w21, #0x0
  b4:	str	x8, [x22, #32]!
  b8:	str	xzr, [x22, #8]
  bc:	str	wzr, [x22, #32]
  c0:	stp	xzr, xzr, [x22, #40]
  c4:	str	x9, [x22, #56]
  c8:	b.le	15c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0x104>
  cc:	and	x21, x21, #0xffffffff
  d0:	mov	x0, x20
  d4:	mov	x1, x21
  d8:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
  dc:	mov	x9, sp
  e0:	add	x23, x9, #0x10
  e4:	str	x23, [sp]
  e8:	cbz	x0, 104 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0xac>
  ec:	mov	x8, x0
  f0:	add	x2, x0, x1
  f4:	mov	x0, sp
  f8:	mov	x1, x8
  fc:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 100:	b	10c <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0xb4>
 104:	str	xzr, [sp, #8]
 108:	strb	wzr, [sp, #16]
 10c:	mov	x1, sp
 110:	mov	x0, x22
 114:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
 118:	ldr	x0, [sp]
 11c:	cmp	x0, x23
 120:	b.eq	128 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0xd0>  // b.none
 124:	bl	0 <_ZdlPv>
 128:	ldr	x8, [x19, #40]
 12c:	cbz	x8, 144 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefERKNS_13SourceManagerENS_14SourceLocationE+0xec>
 130:	mov	x0, x20
 134:	mov	x1, x21
 138:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 13c:	lsr	x8, x0, #32
 140:	str	w8, [x19, #64]
 144:	ldp	x20, x19, [sp, #80]
 148:	ldp	x22, x21, [sp, #64]
 14c:	ldr	x23, [sp, #48]
 150:	ldp	x29, x30, [sp, #32]
 154:	add	sp, sp, #0x60
 158:	ret
 15c:	adrp	x0, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 160:	adrp	x1, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 164:	adrp	x3, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 168:	add	x0, x0, #0x0
 16c:	add	x1, x1, #0x0
 170:	add	x3, x3, #0x0
 174:	mov	w2, #0x1b                  	// #27
 178:	bl	0 <__assert_fail>

000000000000017c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_>:
 17c:	stp	x29, x30, [sp, #-48]!
 180:	stp	x22, x21, [sp, #16]
 184:	stp	x20, x19, [sp, #32]
 188:	mov	x29, sp
 18c:	mov	x20, x5
 190:	mov	x19, x4
 194:	mov	w22, w3
 198:	mov	x21, x0
 19c:	add	x8, x0, #0x10
 1a0:	str	x8, [x0]
 1a4:	cbz	x1, 1b8 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x3c>
 1a8:	add	x2, x1, x2
 1ac:	mov	x0, x21
 1b0:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 1b4:	b	1c0 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x44>
 1b8:	str	xzr, [x21, #8]
 1bc:	strb	wzr, [x21, #16]
 1c0:	adrp	x1, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 1c4:	add	x0, x21, #0x20
 1c8:	add	x1, x1, #0x0
 1cc:	mov	x2, xzr
 1d0:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 1d4:	adrp	x9, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 1d8:	ldr	d0, [x9]
 1dc:	add	x8, x21, #0x98
 1e0:	add	x9, x21, #0x118
 1e4:	str	w22, [x21, #256]
 1e8:	str	x8, [x21, #136]
 1ec:	str	d0, [x21, #144]
 1f0:	str	x9, [x21, #264]
 1f4:	cbz	x19, 214 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefENS1_5LevelES3_+0x98>
 1f8:	add	x0, x21, #0x108
 1fc:	add	x2, x19, x20
 200:	mov	x1, x19
 204:	ldp	x20, x19, [sp, #32]
 208:	ldp	x22, x21, [sp, #16]
 20c:	ldp	x29, x30, [sp], #48
 210:	b	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 214:	str	xzr, [x21, #272]
 218:	strb	wzr, [x21, #280]
 21c:	ldp	x20, x19, [sp, #32]
 220:	ldp	x22, x21, [sp, #16]
 224:	ldp	x29, x30, [sp], #48
 228:	ret

000000000000022c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_>:
 22c:	stp	x29, x30, [sp, #-64]!
 230:	stp	x24, x23, [sp, #16]
 234:	stp	x22, x21, [sp, #32]
 238:	stp	x20, x19, [sp, #48]
 23c:	mov	x29, sp
 240:	mov	x20, x7
 244:	mov	x19, x6
 248:	mov	w22, w5
 24c:	mov	x23, x4
 250:	mov	x24, x3
 254:	mov	x21, x0
 258:	add	x8, x0, #0x10
 25c:	str	x8, [x0]
 260:	cbz	x1, 274 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x48>
 264:	add	x2, x1, x2
 268:	mov	x0, x21
 26c:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 270:	b	27c <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0x50>
 274:	str	xzr, [x21, #8]
 278:	strb	wzr, [x21, #16]
 27c:	add	x8, x21, #0x30
 280:	mov	x0, x21
 284:	str	x8, [x0, #32]!
 288:	ldp	x1, x8, [x24]
 28c:	add	x2, x1, x8
 290:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 294:	add	x8, x21, #0x50
 298:	mov	x0, x21
 29c:	str	x8, [x0, #64]!
 2a0:	ldp	x1, x8, [x24, #32]
 2a4:	add	x2, x1, x8
 2a8:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2ac:	ldr	w8, [x24, #64]
 2b0:	add	x0, x21, #0x68
 2b4:	add	x1, x24, #0x48
 2b8:	str	w8, [x21, #96]
 2bc:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2c0:	adrp	x8, 0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2c4:	ldr	d0, [x8]
 2c8:	add	x8, x21, #0x98
 2cc:	mov	x0, x21
 2d0:	str	x8, [x0, #136]!
 2d4:	str	d0, [x0, #8]
 2d8:	ldr	w8, [x23, #8]
 2dc:	cbz	w8, 2e8 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xbc>
 2e0:	mov	x1, x23
 2e4:	bl	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 2e8:	add	x8, x21, #0x118
 2ec:	str	w22, [x21, #256]
 2f0:	str	x8, [x21, #264]
 2f4:	cbz	x19, 318 <_ZN5clang7tooling10DiagnosticC1EN4llvm9StringRefERKNS0_17DiagnosticMessageERKNS2_11SmallVectorIS4_Lj1EEENS1_5LevelES3_+0xec>
 2f8:	add	x0, x21, #0x108
 2fc:	add	x2, x19, x20
 300:	mov	x1, x19
 304:	ldp	x20, x19, [sp, #48]
 308:	ldp	x22, x21, [sp, #32]
 30c:	ldp	x24, x23, [sp, #16]
 310:	ldp	x29, x30, [sp], #64
 314:	b	0 <_ZN5clang7tooling17DiagnosticMessageC1EN4llvm9StringRefE>
 318:	str	xzr, [x21, #272]
 31c:	strb	wzr, [x21, #280]
 320:	ldp	x20, x19, [sp, #48]
 324:	ldp	x22, x21, [sp, #32]
 328:	ldp	x24, x23, [sp, #16]
 32c:	ldp	x29, x30, [sp], #64
 330:	ret

0000000000000334 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE>:
 334:	ldr	w8, [x0, #116]
 338:	cbz	w8, 344 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x10>
 33c:	add	x0, x0, #0x68
 340:	ret
 344:	ldr	w11, [x0, #144]
 348:	ldr	x8, [x0, #136]
 34c:	mov	w9, #0x68                  	// #104
 350:	mul	x10, x11, x9
 354:	cmp	x10, #0x139
 358:	add	x9, x8, x10
 35c:	b.cc	3a4 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x70>  // b.lo, b.ul, b.last
 360:	lsr	x10, x11, #2
 364:	add	x10, x10, #0x1
 368:	add	x8, x8, #0xd0
 36c:	ldur	w11, [x8, #-124]
 370:	cbnz	w11, 3fc <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xc8>
 374:	ldur	w11, [x8, #-20]
 378:	cbnz	w11, 404 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xd0>
 37c:	ldr	w11, [x8, #84]
 380:	cbnz	w11, 410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 384:	ldr	w11, [x8, #188]
 388:	cbnz	w11, 40c <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xd8>
 38c:	sub	x10, x10, #0x1
 390:	cmp	x10, #0x1
 394:	add	x8, x8, #0x1a0
 398:	b.gt	36c <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0x38>
 39c:	sub	x8, x8, #0xd0
 3a0:	sub	x10, x9, x8
 3a4:	mov	x11, #0x4ec5                	// #20165
 3a8:	movk	x11, #0xc4ec, lsl #16
 3ac:	movk	x11, #0xec4e, lsl #32
 3b0:	asr	x10, x10, #3
 3b4:	movk	x11, #0x4ec4, lsl #48
 3b8:	mul	x10, x10, x11
 3bc:	cmp	x10, #0x1
 3c0:	b.eq	3ec <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xb8>  // b.none
 3c4:	cmp	x10, #0x2
 3c8:	b.eq	3e0 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xac>  // b.none
 3cc:	cmp	x10, #0x3
 3d0:	b.ne	3f4 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xc0>  // b.any
 3d4:	ldr	w10, [x8, #84]
 3d8:	cbnz	w10, 410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 3dc:	add	x8, x8, #0x68
 3e0:	ldr	w10, [x8, #84]
 3e4:	cbnz	w10, 410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 3e8:	add	x8, x8, #0x68
 3ec:	ldr	w10, [x8, #84]
 3f0:	cbnz	w10, 410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 3f4:	mov	x8, x9
 3f8:	b	410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 3fc:	sub	x8, x8, #0xd0
 400:	b	410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 404:	sub	x8, x8, #0x68
 408:	b	410 <_ZN5clang7tooling14selectFirstFixERKNS0_10DiagnosticE+0xdc>
 40c:	add	x8, x8, #0x68
 410:	add	x10, x8, #0x48
 414:	cmp	x8, x9
 418:	csel	x0, xzr, x10, eq  // eq = none
 41c:	ret

Disassembly of section .text._ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	and	x1, x1, #0xffffffff
  10:	mov	x19, x0
  14:	bl	0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  18:	and	x1, x0, #0xffffffff
  1c:	mov	x0, x19
  20:	bl	0 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE>
  24:	cbz	x0, 38 <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x38>
  28:	mov	x8, x0
  2c:	ldr	x0, [x0]
  30:	ldr	x1, [x8, #8]
  34:	b	3c <_ZNK5clang13SourceManager11getFilenameENS_14SourceLocationE+0x3c>
  38:	mov	x1, xzr
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE:

0000000000000000 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	and	x1, x1, #0xffffffff
  10:	sub	x2, x29, #0x4
  14:	sturb	wzr, [x29, #-4]
  18:	bl	0 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE>
  1c:	ldurb	w8, [x29, #-4]
  20:	cbz	w8, 34 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x34>
  24:	mov	x0, xzr
  28:	ldp	x29, x30, [sp, #16]
  2c:	add	sp, sp, #0x20
  30:	ret
  34:	ldr	w8, [x0]
  38:	tbnz	w8, #31, 24 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x24>
  3c:	ldr	x8, [x0, #16]
  40:	ands	x8, x8, #0xfffffffffffffff8
  44:	b.eq	24 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x24>  // b.none
  48:	ldr	x0, [x8, #8]
  4c:	b	28 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x28>

Disassembly of section .text._ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w21, [x0, #272]
  14:	and	w20, w1, #0x7fffffff
  18:	mov	x2, xzr
  1c:	mov	x19, x0
  20:	mov	x1, x21
  24:	bl	0 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>
  28:	ldr	w8, [x0]
  2c:	and	w8, w8, #0x7fffffff
  30:	cmp	w8, w20
  34:	b.hi	7c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x7c>  // b.pmore
  38:	cmn	w21, #0x2
  3c:	b.eq	74 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x74>  // b.none
  40:	ldr	w8, [x19, #208]
  44:	add	w1, w21, #0x1
  48:	cmp	w1, w8
  4c:	b.ne	58 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x58>  // b.any
  50:	ldr	w8, [x19, #232]
  54:	b	6c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x6c>
  58:	mov	x0, x19
  5c:	mov	x2, xzr
  60:	bl	0 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>
  64:	ldr	w8, [x0]
  68:	and	w8, w8, #0x7fffffff
  6c:	cmp	w8, w20
  70:	b.ls	7c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x7c>  // b.plast
  74:	ldr	w0, [x19, #272]
  78:	b	88 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x88>
  7c:	mov	x0, x19
  80:	mov	w1, w20
  84:	bl	0 <_ZNK5clang13SourceManager13getFileIDSlowEj>
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	mov	w0, w0
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb:

0000000000000000 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	w8, w1, #0x1
   c:	cmp	w8, #0x1
  10:	b.hi	34 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x34>  // b.pmore
  14:	cbz	x2, 20 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x20>
  18:	mov	w8, #0x1                   	// #1
  1c:	strb	w8, [x2]
  20:	ldr	w8, [x0, #208]
  24:	cbz	w8, 3c <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x3c>
  28:	ldr	x0, [x0, #200]
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldp	x29, x30, [sp], #16
  38:	b	0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  3c:	adrp	x0, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  40:	adrp	x1, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  44:	adrp	x3, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x99                  	// #153
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16getSLocEntryByIDEiPb:

0000000000000000 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	w1, #0x1
   c:	b.eq	44 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x44>  // b.none
  10:	tbnz	w1, #31, 34 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x34>
  14:	ldr	w8, [x0, #208]
  18:	cmp	w8, w1
  1c:	b.ls	64 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x64>  // b.plast
  20:	ldr	x8, [x0, #200]
  24:	mov	w9, #0x28                  	// #40
  28:	umaddl	x0, w1, w9, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	mov	w8, #0xfffffffe            	// #-2
  38:	sub	w1, w8, w1
  3c:	ldp	x29, x30, [sp], #16
  40:	b	0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  44:	adrp	x0, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  48:	adrp	x1, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  4c:	adrp	x3, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x6f1                 	// #1777
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  68:	adrp	x1, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  6c:	adrp	x3, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x693                 	// #1683
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager18getLoadedSLocEntryEjPb:

0000000000000000 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #224]
  14:	cmp	w8, w1
  18:	b.ls	7c <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x7c>  // b.plast
  1c:	mov	x19, x0
  20:	add	x0, x0, #0xf0
  24:	mov	w20, w1
  28:	mov	x21, x2
  2c:	bl	0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  30:	tbz	w0, #0, 60 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x60>
  34:	ldr	w8, [x19, #224]
  38:	cmp	w8, w20
  3c:	b.ls	9c <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x9c>  // b.plast
  40:	ldr	x8, [x19, #216]
  44:	mov	w9, w20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	mov	w10, #0x28                  	// #40
  54:	madd	x0, x9, x10, x8
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	mov	x0, x19
  64:	mov	w1, w20
  68:	mov	x2, x21
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	b	0 <_ZNK5clang13SourceManager13loadSLocEntryEjPb>
  7c:	adrp	x0, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  80:	adrp	x1, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  84:	adrp	x3, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69d                 	// #1693
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a0:	adrp	x1, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a4:	adrp	x3, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x95                  	// #149
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVectorixEj:

0000000000000000 <_ZNK4llvm9BitVectorixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #16]
   c:	cmp	w8, w1
  10:	b.ls	3c <_ZNK4llvm9BitVectorixEj+0x3c>  // b.plast
  14:	ldr	x9, [x0, #8]
  18:	lsr	w8, w1, #6
  1c:	cmp	x9, x8
  20:	b.ls	5c <_ZNK4llvm9BitVectorixEj+0x5c>  // b.plast
  24:	ldr	x9, [x0]
  28:	ldr	x8, [x9, x8, lsl #3]
  2c:	lsr	x8, x8, x1
  30:	and	w0, w8, #0x1
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  40:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  44:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x1f0                 	// #496
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  60:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  64:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x1ab                 	// #427
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	and	x1, x1, #0xffffffff
  18:	mov	x21, x0
  1c:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  20:	and	x19, x0, #0xffffffff
  24:	add	x2, x29, #0x1c
  28:	mov	x0, x21
  2c:	mov	x1, x19
  30:	strb	wzr, [x29, #28]
  34:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  38:	ldrb	w8, [x29, #28]
  3c:	cbz	w8, 4c <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x4c>
  40:	mov	x19, xzr
  44:	mov	x8, xzr
  48:	b	60 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x60>
  4c:	ldr	w8, [x0]
  50:	and	w9, w20, #0x7fffffff
  54:	and	w8, w8, #0x7fffffff
  58:	sub	w8, w9, w8
  5c:	lsl	x8, x8, #32
  60:	orr	x0, x8, x19
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_:

0000000000000000 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x8, #0x3800000000          	// #240518168576
  1c:	stp	xzr, xzr, [x0]
  20:	str	x8, [x0, #16]
  24:	ldr	w8, [x1, #12]
  28:	cbz	w8, c0 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0xc0>
  2c:	mov	x19, x1
  30:	ldr	w1, [x1, #8]
  34:	mov	x20, x0
  38:	bl	0 <_ZN4llvm13StringMapImpl4initEj>
  3c:	ldr	x10, [x20]
  40:	ldr	w9, [x20, #8]
  44:	ldur	x11, [x19, #12]
  48:	ldr	x8, [x19]
  4c:	stur	x11, [x20, #12]
  50:	cbz	w9, c0 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0xc0>
  54:	add	x10, x10, x9, lsl #3
  58:	add	x11, x8, x9, lsl #3
  5c:	mov	x22, xzr
  60:	add	x21, x20, #0x18
  64:	add	x23, x10, #0x8
  68:	add	x24, x11, #0x8
  6c:	sub	x25, x9, #0x1
  70:	ldr	x3, [x8, x22, lsl #3]
  74:	cbz	x3, 80 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0x80>
  78:	cmn	x3, #0x8
  7c:	b.ne	8c <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0x8c>  // b.any
  80:	ldr	x8, [x20]
  84:	str	x3, [x8, x22, lsl #3]
  88:	b	ac <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0xac>
  8c:	add	x0, x3, #0x38
  90:	ldr	x1, [x3], #8
  94:	mov	x2, x21
  98:	bl	0 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_>
  9c:	ldr	x8, [x20]
  a0:	str	x0, [x8, x22, lsl #3]
  a4:	ldr	w8, [x24, x22, lsl #2]
  a8:	str	w8, [x23, x22, lsl #2]
  ac:	cmp	x25, x22
  b0:	b.eq	c0 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0xc0>  // b.none
  b4:	ldr	x8, [x19]
  b8:	add	x22, x22, #0x1
  bc:	b	70 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEEC2ERKS5_+0x70>
  c0:	ldp	x20, x19, [sp, #64]
  c4:	ldp	x22, x21, [sp, #48]
  c8:	ldp	x24, x23, [sp, #32]
  cc:	ldr	x25, [sp, #16]
  d0:	ldp	x29, x30, [sp], #80
  d4:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_:

0000000000000000 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	add	x23, x1, #0x39
  18:	mov	x20, x0
  1c:	mov	x0, x23
  20:	mov	x21, x3
  24:	mov	x19, x1
  28:	bl	0 <malloc>
  2c:	mov	x22, x0
  30:	cbnz	x0, 70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  34:	cbz	x23, 50 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x50>
  38:	adrp	x0, 0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  3c:	add	x0, x0, #0x0
  40:	mov	w1, #0x1                   	// #1
  44:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  48:	mov	x22, xzr
  4c:	b	70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  50:	mov	w0, #0x1                   	// #1
  54:	bl	0 <malloc>
  58:	mov	x22, x0
  5c:	cbnz	x0, 70 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x70>
  60:	adrp	x0, 0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  64:	add	x0, x0, #0x0
  68:	mov	w1, #0x1                   	// #1
  6c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  70:	mov	x23, x22
  74:	add	x0, x22, #0x8
  78:	mov	x1, x21
  7c:	str	x19, [x23], #56
  80:	bl	0 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  84:	cbz	x19, 98 <_ZN4llvm14StringMapEntryIN5clang7tooling12ReplacementsEE6CreateINS_15MallocAllocatorEJRS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x98>
  88:	mov	x0, x23
  8c:	mov	x1, x20
  90:	mov	x2, x19
  94:	bl	0 <memcpy>
  98:	strb	wzr, [x23, x19]
  9c:	mov	x0, x22
  a0:	ldp	x20, x19, [sp, #48]
  a4:	ldp	x22, x21, [sp, #32]
  a8:	ldr	x23, [sp, #16]
  ac:	ldp	x29, x30, [sp], #64
  b0:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x8, x0
  10:	str	wzr, [x8, #8]!
  14:	stp	xzr, x8, [x8, #8]
  18:	stp	x8, xzr, [x8, #24]
  1c:	ldr	x8, [x1, #16]
  20:	cbz	x8, 38 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_+0x38>
  24:	add	x2, x29, #0x18
  28:	mov	x19, x0
  2c:	str	x0, [x29, #24]
  30:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_>
  34:	str	x0, [x19, #16]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x1, #16]
  14:	mov	x3, x2
  18:	add	x2, x0, #0x8
  1c:	mov	x20, x0
  20:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>
  24:	mov	x9, x0
  28:	mov	x8, x9
  2c:	ldr	x9, [x9, #16]
  30:	cbnz	x9, 28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x28>
  34:	mov	x9, x0
  38:	str	x8, [x20, #24]
  3c:	mov	x8, x9
  40:	ldr	x9, [x9, #24]
  44:	cbnz	x9, 3c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x3c>
  48:	str	x8, [x20, #32]
  4c:	ldr	x8, [x19, #40]
  50:	str	x8, [x20, #40]
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x2
  18:	mov	x2, x3
  1c:	mov	x19, x3
  20:	mov	x22, x1
  24:	mov	x20, x0
  28:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  2c:	str	x23, [x0, #8]
  30:	ldr	x1, [x22, #24]
  34:	mov	x21, x0
  38:	cbz	x1, 50 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x50>
  3c:	mov	x0, x20
  40:	mov	x2, x21
  44:	mov	x3, x19
  48:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  4c:	str	x0, [x21, #24]
  50:	ldr	x22, [x22, #16]
  54:	cbz	x22, a0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xa0>
  58:	mov	x24, x21
  5c:	mov	x0, x20
  60:	mov	x1, x22
  64:	mov	x2, x19
  68:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  6c:	str	x0, [x24, #16]
  70:	str	x24, [x0, #8]
  74:	ldr	x1, [x22, #24]
  78:	mov	x23, x0
  7c:	cbz	x1, 94 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x94>
  80:	mov	x0, x20
  84:	mov	x2, x23
  88:	mov	x3, x19
  8c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  90:	str	x0, [x23, #24]
  94:	ldr	x22, [x22, #16]
  98:	mov	x24, x23
  9c:	cbnz	x22, 5c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x5c>
  a0:	mov	x0, x21
  a4:	ldp	x20, x19, [sp, #48]
  a8:	ldp	x22, x21, [sp, #32]
  ac:	ldp	x24, x23, [sp, #16]
  b0:	ldp	x29, x30, [sp], #64
  b4:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_M_clone_nodeINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_M_clone_nodeINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w0, #0x68                  	// #104
  10:	mov	x19, x1
  14:	bl	0 <_Znwm>
  18:	add	x8, x0, #0x30
  1c:	mov	x20, x0
  20:	str	x8, [x0, #32]!
  24:	ldp	x1, x8, [x19, #32]
  28:	add	x2, x1, x8
  2c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_M_clone_nodeINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_>
  30:	ldp	x8, x1, [x19, #64]
  34:	add	x9, x20, #0x58
  38:	mov	x0, x20
  3c:	str	x8, [x20, #64]
  40:	str	x9, [x0, #72]!
  44:	ldr	x8, [x19, #80]
  48:	add	x2, x1, x8
  4c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE13_M_clone_nodeINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_RT_>
  50:	ldr	w8, [x19]
  54:	stp	xzr, xzr, [x20, #16]
  58:	mov	x0, x20
  5c:	str	w8, [x20]
  60:	ldp	x20, x19, [sp, #16]
  64:	ldp	x29, x30, [sp], #32
  68:	ret

Disassembly of section .text._ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_:

0000000000000000 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #32]
   8:	str	x27, [sp, #48]
   c:	stp	x26, x25, [sp, #64]
  10:	stp	x24, x23, [sp, #80]
  14:	stp	x22, x21, [sp, #96]
  18:	stp	x20, x19, [sp, #112]
  1c:	add	x29, sp, #0x20
  20:	mov	x19, x0
  24:	cmp	x0, x1
  28:	b.eq	2bc <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2bc>  // b.none
  2c:	ldr	w20, [x1, #8]
  30:	ldr	w24, [x19, #8]
  34:	mov	x21, x1
  38:	cmp	w24, w20
  3c:	b.cs	ac <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xac>  // b.hs, b.nlast
  40:	ldr	w8, [x19, #12]
  44:	cmp	w8, w20
  48:	b.cs	144 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x144>  // b.hs, b.nlast
  4c:	cbz	w24, 98 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x98>
  50:	ldr	x22, [x19]
  54:	mov	w8, #0x68                  	// #104
  58:	mul	x23, x24, x8
  5c:	add	x24, x22, x23
  60:	sub	x0, x24, #0x20
  64:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
  68:	ldur	x0, [x24, #-72]
  6c:	sub	x8, x24, #0x38
  70:	cmp	x8, x0
  74:	b.eq	7c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x7c>  // b.none
  78:	bl	0 <_ZdlPv>
  7c:	ldur	x0, [x24, #-104]
  80:	sub	x8, x24, #0x58
  84:	cmp	x8, x0
  88:	b.eq	90 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x90>  // b.none
  8c:	bl	0 <_ZdlPv>
  90:	subs	x23, x23, #0x68
  94:	b.ne	5c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x5c>  // b.any
  98:	mov	x0, x19
  9c:	mov	x1, x20
  a0:	str	wzr, [x19, #8]
  a4:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
  a8:	b	1d0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1d0>
  ac:	ldr	x22, [x19]
  b0:	cbz	w20, 25c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x25c>
  b4:	ldr	x21, [x21]
  b8:	add	x23, x20, #0x1
  bc:	mov	x0, x22
  c0:	mov	x1, x21
  c4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  c8:	add	x0, x22, #0x20
  cc:	add	x1, x21, #0x20
  d0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
  d4:	ldr	w8, [x21, #64]
  d8:	add	x1, x21, #0x48
  dc:	mov	x0, sp
  e0:	str	w8, [x22, #64]
  e4:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
  e8:	ldr	x8, [sp]
  ec:	ldr	x9, [x22, #72]
  f0:	mov	x0, sp
  f4:	str	x8, [x22, #72]
  f8:	str	x9, [sp]
  fc:	ldr	x8, [sp, #8]
 100:	ldr	x9, [x22, #80]
 104:	str	x8, [x22, #80]
 108:	str	x9, [sp, #8]
 10c:	ldr	w8, [sp, #16]
 110:	ldr	w9, [x22, #88]
 114:	str	w8, [x22, #88]
 118:	str	w9, [sp, #16]
 11c:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 120:	sub	x23, x23, #0x1
 124:	add	x22, x22, #0x68
 128:	cmp	x23, #0x1
 12c:	add	x21, x21, #0x68
 130:	b.gt	bc <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0xbc>
 134:	mov	x21, x22
 138:	ldr	x22, [x19]
 13c:	ldr	w24, [x19, #8]
 140:	b	260 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x260>
 144:	cbz	w24, 1d0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1d0>
 148:	ldr	x22, [x21]
 14c:	ldr	x23, [x19]
 150:	add	x25, x24, #0x1
 154:	mov	x0, x23
 158:	mov	x1, x22
 15c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 160:	add	x0, x23, #0x20
 164:	add	x1, x22, #0x20
 168:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
 16c:	ldr	w8, [x22, #64]
 170:	add	x1, x22, #0x48
 174:	mov	x0, sp
 178:	str	w8, [x23, #64]
 17c:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 180:	ldr	x8, [sp]
 184:	ldr	x9, [x23, #72]
 188:	mov	x0, sp
 18c:	str	x8, [x23, #72]
 190:	str	x9, [sp]
 194:	ldr	x8, [sp, #8]
 198:	ldr	x9, [x23, #80]
 19c:	str	x8, [x23, #80]
 1a0:	str	x9, [sp, #8]
 1a4:	ldr	w8, [sp, #16]
 1a8:	ldr	w9, [x23, #88]
 1ac:	str	w8, [x23, #88]
 1b0:	str	w9, [sp, #16]
 1b4:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 1b8:	sub	x25, x25, #0x1
 1bc:	add	x23, x23, #0x68
 1c0:	cmp	x25, #0x1
 1c4:	add	x22, x22, #0x68
 1c8:	b.gt	154 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x154>
 1cc:	b	1d4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1d4>
 1d0:	mov	x24, xzr
 1d4:	ldr	w8, [x21, #8]
 1d8:	cmp	x24, x8
 1dc:	b.eq	2ac <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2ac>  // b.none
 1e0:	ldr	x22, [x21]
 1e4:	ldr	x23, [x19]
 1e8:	mov	w9, #0x68                  	// #104
 1ec:	mov	w10, #0x68                  	// #104
 1f0:	madd	x25, x8, x9, x22
 1f4:	mul	x24, x24, x10
 1f8:	add	x21, x23, x24
 1fc:	add	x8, x21, #0x10
 200:	mov	x27, x21
 204:	add	x26, x22, x24
 208:	str	x8, [x27], #48
 20c:	ldp	x1, x8, [x26]
 210:	mov	x0, x21
 214:	add	x2, x1, x8
 218:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 21c:	str	x27, [x21, #32]!
 220:	ldp	x1, x8, [x26, #32]
 224:	mov	x0, x21
 228:	add	x2, x1, x8
 22c:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 230:	ldr	w8, [x26, #64]
 234:	add	x0, x21, #0x28
 238:	add	x1, x26, #0x48
 23c:	str	w8, [x21, #32]
 240:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 244:	add	x8, x26, #0x68
 248:	add	x23, x23, #0x68
 24c:	cmp	x8, x25
 250:	add	x22, x22, #0x68
 254:	b.ne	1f8 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x1f8>  // b.any
 258:	b	2ac <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2ac>
 25c:	mov	x21, x22
 260:	mov	w8, #0x68                  	// #104
 264:	madd	x22, x24, x8, x22
 268:	cmp	x22, x21
 26c:	b.eq	2ac <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2ac>  // b.none
 270:	sub	x0, x22, #0x20
 274:	bl	0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 278:	ldur	x0, [x22, #-72]
 27c:	sub	x8, x22, #0x38
 280:	cmp	x8, x0
 284:	b.eq	28c <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x28c>  // b.none
 288:	bl	0 <_ZdlPv>
 28c:	ldur	x0, [x22, #-104]
 290:	sub	x8, x22, #0x58
 294:	sub	x22, x22, #0x68
 298:	cmp	x8, x0
 29c:	b.eq	2a4 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2a4>  // b.none
 2a0:	bl	0 <_ZdlPv>
 2a4:	cmp	x21, x22
 2a8:	b.ne	270 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x270>  // b.any
 2ac:	ldr	w8, [x19, #12]
 2b0:	cmp	w8, w20
 2b4:	b.cc	2e0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_+0x2e0>  // b.lo, b.ul, b.last
 2b8:	str	w20, [x19, #8]
 2bc:	mov	x0, x19
 2c0:	ldp	x20, x19, [sp, #112]
 2c4:	ldp	x22, x21, [sp, #96]
 2c8:	ldp	x24, x23, [sp, #80]
 2cc:	ldp	x26, x25, [sp, #64]
 2d0:	ldr	x27, [sp, #48]
 2d4:	ldp	x29, x30, [sp, #32]
 2d8:	add	sp, sp, #0x80
 2dc:	ret
 2e0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 2e4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 2e8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplIN5clang7tooling17DiagnosticMessageEEaSERKS4_>
 2ec:	add	x0, x0, #0x0
 2f0:	add	x1, x1, #0x0
 2f4:	add	x3, x3, #0x0
 2f8:	mov	w2, #0x43                  	// #67
 2fc:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	mov	w8, #0x68                  	// #104
  70:	mul	x0, x22, x8
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	x0, [x19]
  c0:	ldr	w8, [x19, #8]
  c4:	mov	w9, #0x68                  	// #104
  c8:	mov	x2, x20
  cc:	madd	x1, x8, x9, x0
  d0:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  d4:	ldr	w8, [x19, #8]
  d8:	ldr	x21, [x19]
  dc:	cbz	w8, 128 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x128>
  e0:	mov	w9, #0x68                  	// #104
  e4:	mul	x23, x8, x9
  e8:	add	x24, x21, x23
  ec:	sub	x0, x24, #0x20
  f0:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm>
  f4:	ldur	x0, [x24, #-72]
  f8:	sub	x8, x24, #0x38
  fc:	cmp	x8, x0
 100:	b.eq	108 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x108>  // b.none
 104:	bl	0 <_ZdlPv>
 108:	ldur	x0, [x24, #-104]
 10c:	sub	x8, x24, #0x58
 110:	cmp	x8, x0
 114:	b.eq	11c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x11c>  // b.none
 118:	bl	0 <_ZdlPv>
 11c:	subs	x23, x23, #0x68
 120:	b.ne	e8 <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0xe8>  // b.any
 124:	ldr	x21, [x19]
 128:	add	x8, x19, #0x10
 12c:	cmp	x21, x8
 130:	b.eq	13c <_ZN4llvm23SmallVectorTemplateBaseIN5clang7tooling17DiagnosticMessageELb0EE4growEm+0x13c>  // b.none
 134:	mov	x0, x21
 138:	bl	0 <free>
 13c:	str	x20, [x19]
 140:	str	w22, [x19, #12]
 144:	ldp	x20, x19, [sp, #48]
 148:	ldp	x22, x21, [sp, #32]
 14c:	ldp	x24, x23, [sp, #16]
 150:	ldp	x29, x30, [sp], #64
 154:	ret

Disassembly of section .text._ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev:

0000000000000000 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #12]
  14:	mov	x19, x0
  18:	cbz	w8, 60 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev+0x60>
  1c:	ldr	w8, [x19, #8]
  20:	cbz	w8, 60 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev+0x60>
  24:	mov	x21, xzr
  28:	lsl	x22, x8, #3
  2c:	ldr	x8, [x19]
  30:	ldr	x20, [x8, x21]
  34:	cmn	x20, #0x8
  38:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  3c:	b.eq	54 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev+0x54>  // b.none
  40:	ldr	x1, [x20, #24]
  44:	add	x0, x20, #0x8
  48:	bl	0 <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev>
  4c:	mov	x0, x20
  50:	bl	0 <free>
  54:	add	x21, x21, #0x8
  58:	cmp	x22, x21
  5c:	b.ne	2c <_ZN4llvm9StringMapIN5clang7tooling12ReplacementsENS_15MallocAllocatorEED2Ev+0x2c>  // b.any
  60:	ldr	x0, [x19]
  64:	ldp	x20, x19, [sp, #32]
  68:	ldp	x22, x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	b	0 <free>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x48>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  28:	ldr	x21, [x20, #16]
  2c:	add	x1, x20, #0x20
  30:	mov	x0, x19
  34:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	mov	x20, x21
  44:	cbnz	x21, 1c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x1c>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x0, [x1, #40]
  10:	add	x8, x1, #0x38
  14:	mov	x19, x1
  18:	cmp	x0, x8
  1c:	b.eq	24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_+0x24>  // b.none
  20:	bl	0 <_ZdlPv>
  24:	ldr	x0, [x19], #16
  28:	cmp	x0, x19
  2c:	b.eq	3c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_+0x3c>  // b.none
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_:

0000000000000000 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_>:
   0:	mov	x8, x0
   4:	cmp	x0, x1
   8:	mov	x0, x2
   c:	b.eq	e4 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0xe4>  // b.none
  10:	mov	x9, xzr
  14:	add	x11, x0, x9
  18:	add	x10, x11, #0x10
  1c:	add	x12, x8, x9
  20:	str	x10, [x11]
  24:	mov	x10, x12
  28:	ldr	x13, [x10], #16
  2c:	cmp	x13, x10
  30:	b.eq	44 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0x44>  // b.none
  34:	str	x13, [x11]
  38:	ldr	x12, [x12, #16]
  3c:	str	x12, [x11, #16]
  40:	b	4c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0x4c>
  44:	ldr	q0, [x13]
  48:	str	q0, [x11, #16]
  4c:	ldur	x12, [x10, #-8]
  50:	add	x11, x0, x9
  54:	add	x13, x11, #0x30
  58:	str	x12, [x11, #8]
  5c:	stp	x10, xzr, [x10, #-16]
  60:	strb	wzr, [x10]
  64:	str	x13, [x11, #32]
  68:	ldr	x12, [x10, #16]
  6c:	add	x10, x10, #0x20
  70:	cmp	x12, x10
  74:	b.eq	8c <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0x8c>  // b.none
  78:	str	x12, [x11, #32]
  7c:	add	x12, x8, x9
  80:	ldr	x12, [x12, #48]
  84:	str	x12, [x11, #48]
  88:	b	94 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0x94>
  8c:	ldr	q0, [x12]
  90:	str	q0, [x11, #48]
  94:	ldur	x11, [x10, #-8]
  98:	add	x12, x0, x9
  9c:	add	x13, x10, #0x38
  a0:	cmp	x13, x1
  a4:	str	x11, [x12, #40]
  a8:	ldr	w11, [x10, #16]
  ac:	stp	x10, xzr, [x10, #-16]
  b0:	strb	wzr, [x10]
  b4:	add	x9, x9, #0x68
  b8:	str	w11, [x12, #64]
  bc:	ldr	x11, [x10, #24]
  c0:	str	x11, [x12, #72]
  c4:	ldr	x11, [x10, #32]
  c8:	str	x11, [x12, #80]
  cc:	ldr	x11, [x10, #40]
  d0:	str	x11, [x12, #88]
  d4:	stp	xzr, xzr, [x10, #24]
  d8:	str	wzr, [x10, #40]
  dc:	b.ne	14 <_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN5clang7tooling17DiagnosticMessageEES6_EET0_T_S9_S8_+0x14>  // b.any
  e0:	add	x0, x0, x9
  e4:	ret

Lookup.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>:
   0:	sub	sp, sp, #0x1c0
   4:	stp	x29, x30, [sp, #352]
   8:	stp	x28, x27, [sp, #368]
   c:	stp	x26, x25, [sp, #384]
  10:	stp	x24, x23, [sp, #400]
  14:	stp	x22, x21, [sp, #416]
  18:	stp	x20, x19, [sp, #432]
  1c:	add	x29, sp, #0x160
  20:	cmp	x5, #0x2
  24:	stp	x4, x5, [sp, #64]
  28:	b.cc	9f0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9f0>  // b.lo, b.ul, b.last
  2c:	mov	x20, x8
  30:	ldrh	w8, [x4]
  34:	mov	w9, #0x3a3a                	// #14906
  38:	mov	x23, x4
  3c:	cmp	w8, w9
  40:	b.ne	9f0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9f0>  // b.any
  44:	ldr	x8, [x3, #16]
  48:	mov	x22, x5
  4c:	mov	x26, x2
  50:	mov	x25, x1
  54:	mov	x24, x0
  58:	and	x0, x8, #0xfffffffffffffff8
  5c:	tbnz	w8, #2, 68 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x68>
  60:	mov	x9, x0
  64:	b	6c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6c>
  68:	ldr	x9, [x0]
  6c:	cbz	x9, a70 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa70>
  70:	ldr	w10, [x3, #28]
  74:	ldrh	w9, [x9, #8]
  78:	and	w10, w10, #0x7f
  7c:	sub	w10, w10, #0x21
  80:	cmp	w10, #0x2
  84:	and	w9, w9, #0x7f
  88:	b.hi	a4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa4>  // b.pmore
  8c:	ldrb	w10, [x3, #74]
  90:	ldrh	w11, [x3, #72]
  94:	bfi	w11, w10, #16, #8
  98:	tst	w11, #0x10000
  9c:	cset	w10, eq  // eq = none
  a0:	b	a8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa8>
  a4:	mov	w10, wzr
  a8:	cmp	w9, #0x4e
  ac:	b.eq	19c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x19c>  // b.none
  b0:	cbnz	x24, 19c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x19c>
  b4:	tbnz	w10, #0, 19c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x19c>
  b8:	tbz	w8, #2, c0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xc0>
  bc:	ldr	x0, [x0]
  c0:	sub	x8, x29, #0x60
  c4:	bl	a90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
  c8:	sub	x8, x29, #0x90
  cc:	mov	x0, x26
  d0:	bl	a90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
  d4:	ldur	w10, [x29, #-136]
  d8:	ldur	w11, [x29, #-88]
  dc:	cmp	w10, w11
  e0:	b.cs	ec <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xec>  // b.hs, b.nlast
  e4:	ldur	x0, [x29, #-144]
  e8:	b	164 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x164>
  ec:	ldur	x0, [x29, #-144]
  f0:	sub	x13, x10, x11
  f4:	cmp	w10, w13
  f8:	cset	w12, eq  // eq = none
  fc:	cbz	w11, 160 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x160>
 100:	ldur	x8, [x29, #-96]
 104:	lsl	x10, x10, #3
 108:	sub	x10, x10, w13, uxtw #3
 10c:	add	x9, x0, w13, uxtw #3
 110:	sub	x10, x10, #0x8
 114:	lsl	x11, x11, #3
 118:	tbnz	w12, #0, a10 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa10>
 11c:	ldr	x12, [x8]
 120:	ldr	x13, [x9]
 124:	cmp	x12, x13
 128:	b.eq	164 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x164>  // b.none
 12c:	cbz	x12, 9b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9b4>
 130:	cbz	x13, 9b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9b4>
 134:	ldr	x12, [x12, #40]
 138:	ldr	x13, [x13, #40]
 13c:	cmp	x12, x13
 140:	b.eq	980 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x980>  // b.none
 144:	cmp	x10, #0x0
 148:	add	x8, x8, #0x8
 14c:	add	x9, x9, #0x8
 150:	cset	w12, eq  // eq = none
 154:	subs	x11, x11, #0x8
 158:	sub	x10, x10, #0x8
 15c:	b.ne	118 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x118>  // b.any
 160:	tbz	w12, #0, a10 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa10>
 164:	mov	w19, wzr
 168:	sub	x8, x29, #0x90
 16c:	add	x8, x8, #0x10
 170:	cmp	x0, x8
 174:	b.eq	17c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x17c>  // b.none
 178:	bl	0 <free>
 17c:	ldur	x0, [x29, #-96]
 180:	sub	x8, x29, #0x60
 184:	add	x8, x8, #0x10
 188:	cmp	x0, x8
 18c:	b.eq	194 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x194>  // b.none
 190:	bl	0 <free>
 194:	cbz	w19, 1c8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1c8>
 198:	ldp	x23, x22, [sp, #64]
 19c:	str	x20, [sp, #8]
 1a0:	cbz	x24, 1c0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1c0>
 1a4:	mov	x0, x24
 1a8:	bl	0 <_ZNK5clang19NestedNameSpecifier7getKindEv>
 1ac:	cmp	w0, #0x5
 1b0:	b.eq	200 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x200>  // b.none
 1b4:	ldr	x8, [x24, #8]
 1b8:	ands	x24, x8, #0xfffffffffffffff8
 1bc:	b.ne	1a4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x1a4>  // b.any
 1c0:	mov	w20, wzr
 1c4:	b	204 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x204>
 1c8:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 1cc:	add	x1, x1, #0x0
 1d0:	add	x0, sp, #0x40
 1d4:	mov	w2, #0x2                   	// #2
 1d8:	bl	0 <_ZNK4llvm9StringRef5rfindES0_>
 1dc:	cmn	x0, #0x1
 1e0:	b.eq	91c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x91c>  // b.none
 1e4:	ldp	x9, x8, [sp, #64]
 1e8:	add	x10, x0, #0x2
 1ec:	cmp	x8, x10
 1f0:	csel	x10, x8, x10, cc  // cc = lo, ul, last
 1f4:	add	x1, x9, x10
 1f8:	sub	x8, x8, x10
 1fc:	b	920 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x920>
 200:	mov	w20, #0x1                   	// #1
 204:	sub	x8, x29, #0x90
 208:	sub	x9, x29, #0x60
 20c:	sub	x10, x29, #0x30
 210:	add	x24, x8, #0x10
 214:	add	x8, x9, #0x10
 218:	str	x8, [sp, #56]
 21c:	add	x8, x10, #0x10
 220:	mov	x27, x26
 224:	str	x8, [sp, #40]
 228:	cbz	x27, 3e8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3e8>
 22c:	ldrh	w8, [x27, #8]
 230:	and	w8, w8, #0x7f
 234:	cmp	w8, #0xe
 238:	b.eq	25c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x25c>  // b.none
 23c:	mov	x0, x27
 240:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 244:	ldr	x8, [x0, #16]
 248:	and	x27, x8, #0xfffffffffffffff8
 24c:	tbz	w8, #2, 254 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x254>
 250:	ldr	x27, [x27]
 254:	cbnz	x27, 22c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x22c>
 258:	b	3e8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3e8>
 25c:	sub	x0, x27, #0x30
 260:	sub	x8, x29, #0x30
 264:	bl	0 <_ZNK5clang9NamedDecl24getQualifiedNameAsStringB5cxx11Ev>
 268:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 26c:	sub	x0, x29, #0x30
 270:	mov	w4, #0x2                   	// #2
 274:	mov	x1, xzr
 278:	mov	x2, xzr
 27c:	add	x3, x3, #0x0
 280:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
 284:	stur	x24, [x29, #-144]
 288:	mov	x8, x0
 28c:	ldr	x9, [x8], #16
 290:	cmp	x9, x8
 294:	b.eq	2a8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x2a8>  // b.none
 298:	stur	x9, [x29, #-144]
 29c:	ldr	x9, [x0, #16]
 2a0:	stur	x9, [x29, #-128]
 2a4:	b	2b0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x2b0>
 2a8:	ldr	q0, [x9]
 2ac:	str	q0, [x24]
 2b0:	ldr	x9, [x0, #8]
 2b4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 2b8:	add	x1, x1, #0x0
 2bc:	stur	x9, [x29, #-136]
 2c0:	stp	x8, xzr, [x0]
 2c4:	strb	wzr, [x0, #16]
 2c8:	sub	x0, x29, #0x90
 2cc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc>
 2d0:	ldr	x10, [sp, #56]
 2d4:	mov	x8, x0
 2d8:	stur	x10, [x29, #-96]
 2dc:	ldr	x9, [x8], #16
 2e0:	str	x19, [sp, #48]
 2e4:	cmp	x9, x8
 2e8:	b.eq	2fc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x2fc>  // b.none
 2ec:	stur	x9, [x29, #-96]
 2f0:	ldr	x9, [x0, #16]
 2f4:	stur	x9, [x29, #-80]
 2f8:	b	304 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x304>
 2fc:	ldr	q0, [x9]
 300:	str	q0, [x10]
 304:	stp	x24, x26, [sp, #24]
 308:	ldr	x9, [x0, #8]
 30c:	mov	x19, x23
 310:	stur	x9, [x29, #-88]
 314:	stp	x8, xzr, [x0]
 318:	strb	wzr, [x0, #16]
 31c:	ldur	x0, [x29, #-144]
 320:	cmp	x0, x24
 324:	b.eq	32c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x32c>  // b.none
 328:	bl	0 <_ZdlPv>
 32c:	ldur	x0, [x29, #-48]
 330:	ldr	x8, [sp, #40]
 334:	mov	w24, w20
 338:	mov	x23, x28
 33c:	mov	x26, x25
 340:	cmp	x0, x8
 344:	b.eq	34c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x34c>  // b.none
 348:	bl	0 <_ZdlPv>
 34c:	ldur	x20, [x29, #-88]
 350:	subs	x25, x22, x20
 354:	b.cc	374 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x374>  // b.lo, b.ul, b.last
 358:	ldur	x28, [x29, #-96]
 35c:	cbz	x20, 3a8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3a8>
 360:	mov	x0, x19
 364:	mov	x1, x28
 368:	mov	x2, x20
 36c:	bl	0 <bcmp>
 370:	cbz	w0, 3a8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3a8>
 374:	mov	x0, x27
 378:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 37c:	ldr	x8, [x0, #16]
 380:	and	x27, x8, #0xfffffffffffffff8
 384:	tbz	w8, #2, 38c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x38c>
 388:	ldr	x27, [x27]
 38c:	mov	x25, x26
 390:	mov	w20, w24
 394:	ldr	x8, [sp, #56]
 398:	ldur	x28, [x29, #-96]
 39c:	ldp	x24, x26, [sp, #24]
 3a0:	mov	w21, #0x1                   	// #1
 3a4:	b	3c4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3c4>
 3a8:	add	x23, x19, x20
 3ac:	str	x25, [sp, #48]
 3b0:	mov	x25, x26
 3b4:	mov	w20, w24
 3b8:	ldp	x24, x26, [sp, #24]
 3bc:	ldr	x8, [sp, #56]
 3c0:	mov	w21, wzr
 3c4:	cmp	x28, x8
 3c8:	b.eq	3d4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3d4>  // b.none
 3cc:	mov	x0, x28
 3d0:	bl	0 <_ZdlPv>
 3d4:	mov	x28, x23
 3d8:	mov	x23, x19
 3dc:	ldr	x19, [sp, #48]
 3e0:	tbnz	w21, #0, 228 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x228>
 3e4:	b	40c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x40c>
 3e8:	tbz	w20, #0, 3f8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x3f8>
 3ec:	mov	x28, x23
 3f0:	mov	x19, x22
 3f4:	b	40c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x40c>
 3f8:	cmp	x22, #0x2
 3fc:	mov	w8, #0x2                   	// #2
 400:	csel	x8, x22, x8, cc  // cc = lo, ul, last
 404:	add	x28, x23, x8
 408:	sub	x19, x22, x8
 40c:	ldr	x8, [sp, #72]
 410:	subs	x24, x8, #0x2
 414:	b.cc	a30 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa30>  // b.lo, b.ul, b.last
 418:	ldr	x20, [sp, #64]
 41c:	mov	w10, #0x3a3a                	// #14906
 420:	ldrh	w9, [x20]
 424:	cmp	w9, w10
 428:	b.ne	a30 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa30>  // b.any
 42c:	subs	x21, x8, x19
 430:	b.cc	a50 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa50>  // b.lo, b.ul, b.last
 434:	cbz	x19, 468 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x468>
 438:	add	x8, x20, x8
 43c:	sub	x0, x8, x19
 440:	mov	x1, x28
 444:	mov	x2, x19
 448:	bl	0 <bcmp>
 44c:	cbnz	w0, a50 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa50>
 450:	cmp	x19, #0x2
 454:	b.cc	468 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x468>  // b.lo, b.ul, b.last
 458:	ldrh	w8, [x28]
 45c:	mov	w9, #0x3a3a                	// #14906
 460:	cmp	w8, w9
 464:	b.eq	944 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x944>  // b.none
 468:	adrp	x8, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 46c:	ldr	d0, [x8]
 470:	sub	x8, x29, #0x60
 474:	adrp	x2, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 478:	add	x8, x8, #0x10
 47c:	add	x2, x2, #0x0
 480:	add	x0, sp, #0xa0
 484:	sub	x1, x29, #0x60
 488:	mov	w3, #0x2                   	// #2
 48c:	mov	w4, #0xffffffff            	// #-1
 490:	mov	w5, wzr
 494:	and	x23, x25, #0xffffffff
 498:	stp	x20, x21, [sp, #160]
 49c:	stur	x8, [x29, #-96]
 4a0:	stur	d0, [x29, #-88]
 4a4:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EES0_ib>
 4a8:	sub	x8, x29, #0x90
 4ac:	mov	x0, x26
 4b0:	bl	a90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>
 4b4:	mov	x0, x26
 4b8:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 4bc:	bl	0 <_ZNK5clang4Decl13getASTContextEv>
 4c0:	str	x0, [sp, #32]
 4c4:	mov	x0, x26
 4c8:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 4cc:	bl	0 <_ZNK5clang4Decl13getASTContextEv>
 4d0:	ldr	x21, [x0, #2232]
 4d4:	tbz	w25, #31, 4e8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x4e8>
 4d8:	mov	x0, x21
 4dc:	mov	x1, x23
 4e0:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
 4e4:	mov	x23, x0
 4e8:	add	x8, x20, #0x2
 4ec:	str	x8, [sp, #56]
 4f0:	add	x8, sp, #0x80
 4f4:	add	x8, x8, #0x10
 4f8:	str	x8, [sp, #128]
 4fc:	str	x8, [sp, #16]
 500:	cbz	x28, 518 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x518>
 504:	add	x2, x28, x19
 508:	add	x0, sp, #0x80
 50c:	mov	x1, x28
 510:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 514:	b	520 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x520>
 518:	str	xzr, [sp, #136]
 51c:	strb	wzr, [sp, #144]
 520:	sub	x8, x29, #0x30
 524:	and	x23, x23, #0xffffffff
 528:	add	x25, x8, #0x10
 52c:	ldp	x8, x9, [sp, #128]
 530:	cmp	x9, #0x2
 534:	stp	x8, x9, [sp, #104]
 538:	b.cc	54c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x54c>  // b.lo, b.ul, b.last
 53c:	ldrh	w8, [x8]
 540:	mov	w9, #0x3a3a                	// #14906
 544:	cmp	w8, w9
 548:	b.eq	8b0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x8b0>  // b.none
 54c:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 550:	sub	x8, x29, #0x30
 554:	add	x0, sp, #0x68
 558:	mov	w2, #0x2                   	// #2
 55c:	add	x1, x1, #0x0
 560:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 564:	ldur	w8, [x29, #-136]
 568:	cbz	w8, 8b0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x8b0>
 56c:	ldur	x9, [x29, #-48]
 570:	ldur	x22, [x29, #-144]
 574:	str	x9, [sp, #48]
 578:	ldur	x9, [x29, #-40]
 57c:	add	x8, x22, x8, lsl #3
 580:	str	x8, [sp, #24]
 584:	str	x9, [sp, #40]
 588:	ldp	x8, x2, [sp, #32]
 58c:	ldr	x1, [sp, #48]
 590:	ldr	x19, [x22]
 594:	ldr	x0, [x8, #17424]
 598:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 59c:	tst	x0, #0x7
 5a0:	b.ne	994 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x994>  // b.any
 5a4:	mov	x1, x0
 5a8:	add	x0, x19, #0x30
 5ac:	add	x8, sp, #0xb0
 5b0:	bl	0 <_ZNK5clang11DeclContext6lookupENS_15DeclarationNameE>
 5b4:	ldr	x8, [sp, #184]
 5b8:	cbz	x8, 664 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x664>
 5bc:	ldr	x26, [sp, #176]
 5c0:	ldr	x27, [sp, #192]
 5c4:	lsl	x20, x8, #3
 5c8:	mov	x28, x27
 5cc:	cbnz	x27, 5d4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x5d4>
 5d0:	ldr	x28, [x26]
 5d4:	sub	x8, x29, #0x30
 5d8:	mov	x0, x28
 5dc:	bl	0 <_ZNK5clang9NamedDecl24getQualifiedNameAsStringB5cxx11Ev>
 5e0:	ldur	x2, [x29, #-40]
 5e4:	cmp	x24, x2
 5e8:	b.cc	604 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x604>  // b.lo, b.ul, b.last
 5ec:	ldur	x19, [x29, #-48]
 5f0:	cbz	x2, 648 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x648>
 5f4:	ldr	x0, [sp, #56]
 5f8:	mov	x1, x19
 5fc:	bl	0 <bcmp>
 600:	cbz	w0, 648 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x648>
 604:	ldr	w1, [x28, #24]
 608:	tbz	w1, #31, 618 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x618>
 60c:	mov	x0, x21
 610:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
 614:	mov	x1, x0
 618:	and	x1, x1, #0xffffffff
 61c:	mov	x0, x21
 620:	mov	x2, x23
 624:	bl	0 <_ZNK5clang13SourceManager25isBeforeInTranslationUnitENS_14SourceLocationES1_>
 628:	ldur	x8, [x29, #-48]
 62c:	mov	w19, w0
 630:	cmp	x8, x25
 634:	b.eq	640 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x640>  // b.none
 638:	mov	x0, x8
 63c:	bl	0 <_ZdlPv>
 640:	tbz	w19, #0, 658 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x658>
 644:	b	678 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x678>
 648:	cmp	x19, x25
 64c:	b.eq	658 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x658>  // b.none
 650:	mov	x0, x19
 654:	bl	0 <_ZdlPv>
 658:	subs	x20, x20, #0x8
 65c:	add	x26, x26, #0x8
 660:	b.ne	5c8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x5c8>  // b.any
 664:	ldr	x8, [sp, #24]
 668:	add	x22, x22, #0x8
 66c:	cmp	x22, x8
 670:	b.ne	588 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x588>  // b.any
 674:	b	8b0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x8b0>
 678:	ldur	w8, [x29, #-88]
 67c:	cbz	w8, 6dc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6dc>
 680:	ldur	x9, [x29, #-96]
 684:	adrp	x2, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 688:	add	x0, sp, #0x68
 68c:	add	x2, x2, #0x0
 690:	add	x8, x9, x8, lsl #4
 694:	sub	x1, x8, #0x10
 698:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 69c:	add	x0, sp, #0x50
 6a0:	add	x1, sp, #0x80
 6a4:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 6a8:	ldrb	w8, [sp, #120]
 6ac:	cbz	w8, 6cc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6cc>
 6b0:	ldrb	w9, [sp, #96]
 6b4:	cbz	w9, 6cc <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x6cc>
 6b8:	cmp	w8, #0x1
 6bc:	b.ne	750 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x750>  // b.any
 6c0:	ldr	q0, [sp, #80]
 6c4:	ldr	x8, [sp, #96]
 6c8:	b	760 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x760>
 6cc:	mov	w8, #0x100                 	// #256
 6d0:	stp	xzr, xzr, [sp, #176]
 6d4:	strh	w8, [sp, #192]
 6d8:	b	7b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7b4>
 6dc:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 6e0:	sub	x8, x29, #0x30
 6e4:	add	x1, sp, #0x80
 6e8:	add	x0, x0, #0x0
 6ec:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 6f0:	ldur	x9, [x29, #-48]
 6f4:	cmp	x9, x25
 6f8:	b.eq	730 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x730>  // b.none
 6fc:	sub	x11, x29, #0x30
 700:	ldr	x8, [sp, #128]
 704:	ldur	q0, [x11, #8]
 708:	ldr	x11, [sp, #16]
 70c:	ldr	x10, [sp, #144]
 710:	str	x9, [sp, #128]
 714:	stur	q0, [sp, #136]
 718:	cmp	x8, x11
 71c:	csel	x8, xzr, x8, eq  // eq = none
 720:	cbz	x8, 76c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x76c>
 724:	stur	x8, [x29, #-48]
 728:	stur	x10, [x29, #-32]
 72c:	b	894 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x894>
 730:	ldur	x2, [x29, #-40]
 734:	cbz	x2, 880 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x880>
 738:	ldr	x0, [sp, #128]
 73c:	cmp	x2, #0x1
 740:	b.ne	878 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x878>  // b.any
 744:	ldurb	w8, [x29, #-32]
 748:	strb	w8, [x0]
 74c:	b	880 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x880>
 750:	cmp	w9, #0x1
 754:	b.ne	778 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x778>  // b.any
 758:	ldur	q0, [sp, #104]
 75c:	ldr	x8, [sp, #120]
 760:	str	q0, [sp, #176]
 764:	str	x8, [sp, #192]
 768:	b	7b4 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x7b4>
 76c:	mov	x8, x25
 770:	stur	x25, [x29, #-48]
 774:	b	894 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x894>
 778:	ldrb	w10, [sp, #121]
 77c:	ldr	x11, [sp, #104]
 780:	ldrb	w12, [sp, #97]
 784:	ldr	x13, [sp, #80]
 788:	cmp	w10, #0x1
 78c:	mov	w10, #0x2                   	// #2
 790:	csel	w2, w8, w10, eq  // eq = none
 794:	add	x8, sp, #0x68
 798:	csel	x1, x11, x8, eq  // eq = none
 79c:	cmp	w12, #0x1
 7a0:	add	x8, sp, #0x50
 7a4:	csel	w4, w9, w10, eq  // eq = none
 7a8:	csel	x3, x13, x8, eq  // eq = none
 7ac:	add	x0, sp, #0xb0
 7b0:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 7b4:	sub	x8, x29, #0x30
 7b8:	add	x0, sp, #0xb0
 7bc:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
 7c0:	ldur	x9, [x29, #-48]
 7c4:	cmp	x9, x25
 7c8:	b.eq	800 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x800>  // b.none
 7cc:	sub	x11, x29, #0x30
 7d0:	ldr	x8, [sp, #128]
 7d4:	ldur	q0, [x11, #8]
 7d8:	ldr	x11, [sp, #16]
 7dc:	ldr	x10, [sp, #144]
 7e0:	str	x9, [sp, #128]
 7e4:	stur	q0, [sp, #136]
 7e8:	cmp	x8, x11
 7ec:	csel	x8, xzr, x8, eq  // eq = none
 7f0:	cbz	x8, 820 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x820>
 7f4:	stur	x8, [x29, #-48]
 7f8:	stur	x10, [x29, #-32]
 7fc:	b	848 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x848>
 800:	ldur	x2, [x29, #-40]
 804:	cbz	x2, 834 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x834>
 808:	ldr	x0, [sp, #128]
 80c:	cmp	x2, #0x1
 810:	b.ne	82c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x82c>  // b.any
 814:	ldurb	w8, [x29, #-32]
 818:	strb	w8, [x0]
 81c:	b	834 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x834>
 820:	mov	x8, x25
 824:	stur	x25, [x29, #-48]
 828:	b	848 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x848>
 82c:	mov	x1, x25
 830:	bl	0 <memcpy>
 834:	ldur	x8, [x29, #-40]
 838:	ldr	x9, [sp, #128]
 83c:	str	x8, [sp, #136]
 840:	strb	wzr, [x9, x8]
 844:	ldur	x8, [x29, #-48]
 848:	stur	xzr, [x29, #-40]
 84c:	strb	wzr, [x8]
 850:	ldur	x0, [x29, #-48]
 854:	cmp	x0, x25
 858:	b.eq	860 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x860>  // b.none
 85c:	bl	0 <_ZdlPv>
 860:	ldp	w8, w9, [x29, #-88]
 864:	sub	x8, x8, #0x1
 868:	cmp	x8, x9
 86c:	b.hi	9d0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x9d0>  // b.pmore
 870:	stur	w8, [x29, #-88]
 874:	b	52c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x52c>
 878:	mov	x1, x25
 87c:	bl	0 <memcpy>
 880:	ldur	x8, [x29, #-40]
 884:	ldr	x9, [sp, #128]
 888:	str	x8, [sp, #136]
 88c:	strb	wzr, [x9, x8]
 890:	ldur	x8, [x29, #-48]
 894:	stur	xzr, [x29, #-40]
 898:	strb	wzr, [x8]
 89c:	ldur	x0, [x29, #-48]
 8a0:	cmp	x0, x25
 8a4:	b.eq	52c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x52c>  // b.none
 8a8:	bl	0 <_ZdlPv>
 8ac:	b	52c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x52c>
 8b0:	ldr	x8, [sp, #128]
 8b4:	ldp	x10, x11, [sp, #8]
 8b8:	add	x9, x10, #0x10
 8bc:	cmp	x8, x11
 8c0:	str	x9, [x10]
 8c4:	b.eq	8d8 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x8d8>  // b.none
 8c8:	ldr	x9, [sp, #144]
 8cc:	str	x8, [x10]
 8d0:	str	x9, [x10, #16]
 8d4:	b	8e0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x8e0>
 8d8:	ldr	q0, [x11]
 8dc:	str	q0, [x9]
 8e0:	ldur	x0, [x29, #-144]
 8e4:	ldr	x8, [sp, #136]
 8e8:	sub	x9, x29, #0x90
 8ec:	add	x9, x9, #0x10
 8f0:	cmp	x0, x9
 8f4:	str	x8, [x10, #8]
 8f8:	b.eq	900 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x900>  // b.none
 8fc:	bl	0 <free>
 900:	ldur	x0, [x29, #-96]
 904:	sub	x8, x29, #0x60
 908:	add	x8, x8, #0x10
 90c:	cmp	x0, x8
 910:	b.eq	960 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x960>  // b.none
 914:	bl	0 <free>
 918:	b	960 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x960>
 91c:	ldp	x1, x8, [sp, #64]
 920:	add	x9, x20, #0x10
 924:	str	x9, [x20]
 928:	cbz	x1, 938 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x938>
 92c:	add	x2, x1, x8
 930:	mov	x0, x20
 934:	b	95c <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x95c>
 938:	str	xzr, [x20, #8]
 93c:	strb	wzr, [x20, #16]
 940:	b	960 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x960>
 944:	ldr	x0, [sp, #8]
 948:	add	x8, x0, #0x10
 94c:	str	x8, [x0]
 950:	cbz	x28, 988 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x988>
 954:	add	x2, x28, x19
 958:	mov	x1, x28
 95c:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 960:	ldp	x20, x19, [sp, #432]
 964:	ldp	x22, x21, [sp, #416]
 968:	ldp	x24, x23, [sp, #400]
 96c:	ldp	x26, x25, [sp, #384]
 970:	ldp	x28, x27, [sp, #368]
 974:	ldp	x29, x30, [sp, #352]
 978:	add	sp, sp, #0x1c0
 97c:	ret
 980:	mov	w19, #0x1                   	// #1
 984:	b	168 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x168>
 988:	str	xzr, [x0, #8]
 98c:	strb	wzr, [x0, #16]
 990:	b	960 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0x960>
 994:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 998:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 99c:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9a0:	add	x0, x0, #0x0
 9a4:	add	x1, x1, #0x0
 9a8:	add	x3, x3, #0x0
 9ac:	mov	w2, #0x10b                 	// #267
 9b0:	bl	0 <__assert_fail>
 9b4:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9b8:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9bc:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9c0:	add	x0, x0, #0x0
 9c4:	add	x1, x1, #0x0
 9c8:	add	x3, x3, #0x0
 9cc:	b	a88 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE+0xa88>
 9d0:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9d4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9d8:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9dc:	add	x0, x0, #0x0
 9e0:	add	x1, x1, #0x0
 9e4:	add	x3, x3, #0x0
 9e8:	mov	w2, #0x43                  	// #67
 9ec:	bl	0 <__assert_fail>
 9f0:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9f4:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9f8:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 9fc:	add	x0, x0, #0x0
 a00:	add	x1, x1, #0x0
 a04:	add	x3, x3, #0x0
 a08:	mov	w2, #0xbd                  	// #189
 a0c:	bl	0 <__assert_fail>
 a10:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a14:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a18:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a1c:	add	x0, x0, #0x0
 a20:	add	x1, x1, #0x0
 a24:	add	x3, x3, #0x0
 a28:	mov	w2, #0x4f                  	// #79
 a2c:	bl	0 <__assert_fail>
 a30:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a34:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a38:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a3c:	add	x0, x0, #0x0
 a40:	add	x1, x1, #0x0
 a44:	add	x3, x3, #0x0
 a48:	mov	w2, #0x81                  	// #129
 a4c:	bl	0 <__assert_fail>
 a50:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a54:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a58:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a5c:	add	x0, x0, #0x0
 a60:	add	x1, x1, #0x0
 a64:	add	x3, x3, #0x0
 a68:	mov	w2, #0x82                  	// #130
 a6c:	bl	0 <__assert_fail>
 a70:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a74:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a78:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 a7c:	add	x0, x0, #0x0
 a80:	add	x1, x1, #0x0
 a84:	add	x3, x3, #0x0
 a88:	mov	w2, #0x69                  	// #105
 a8c:	bl	0 <__assert_fail>

0000000000000a90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE>:
 a90:	sub	sp, sp, #0x30
 a94:	stp	x29, x30, [sp, #16]
 a98:	stp	x20, x19, [sp, #32]
 a9c:	add	x29, sp, #0x10
 aa0:	mov	x19, x8
 aa4:	adrp	x8, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 aa8:	ldr	d0, [x8]
 aac:	add	x8, x19, #0x10
 ab0:	str	x8, [x19]
 ab4:	str	d0, [x19, #8]
 ab8:	cbz	x0, b00 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x70>
 abc:	mov	x20, x0
 ac0:	ldrh	w8, [x20, #8]
 ac4:	and	w8, w8, #0x7f
 ac8:	cmp	w8, #0xe
 acc:	b.ne	ae4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x54>  // b.any
 ad0:	ldur	x8, [x20, #-8]
 ad4:	tst	x8, #0x7
 ad8:	b.ne	ae4 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x54>  // b.any
 adc:	cmp	x8, #0x7
 ae0:	b.hi	b54 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xc4>  // b.pmore
 ae4:	mov	x0, x20
 ae8:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 aec:	ldr	x8, [x0, #16]
 af0:	and	x20, x8, #0xfffffffffffffff8
 af4:	tbz	w8, #2, afc <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x6c>
 af8:	ldr	x20, [x20]
 afc:	cbnz	x20, ac0 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x30>
 b00:	ldp	x20, x19, [sp, #32]
 b04:	ldp	x29, x30, [sp, #16]
 b08:	add	sp, sp, #0x30
 b0c:	ret
 b10:	ldrh	w8, [x20, #8]
 b14:	and	w8, w8, #0x7f
 b18:	cmp	w8, #0xe
 b1c:	b.ne	b34 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xa4>  // b.any
 b20:	ldur	x8, [x20, #-8]
 b24:	tst	x8, #0x7
 b28:	b.ne	b34 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xa4>  // b.any
 b2c:	cmp	x8, #0x7
 b30:	b.hi	b54 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xc4>  // b.pmore
 b34:	mov	x0, x20
 b38:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 b3c:	ldr	x8, [x0, #16]
 b40:	and	x20, x8, #0xfffffffffffffff8
 b44:	tbz	w8, #2, b4c <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0xbc>
 b48:	ldr	x20, [x20]
 b4c:	cbnz	x20, b10 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x80>
 b50:	b	b00 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x70>
 b54:	ldrh	w8, [x20, #8]
 b58:	and	w8, w8, #0x7f
 b5c:	cmp	w8, #0xe
 b60:	b.ne	b98 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x108>  // b.any
 b64:	sub	x8, x20, #0x30
 b68:	add	x1, sp, #0x8
 b6c:	mov	x0, x19
 b70:	str	x8, [sp, #8]
 b74:	bl	0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b78:	mov	x0, x20
 b7c:	bl	0 <_ZN5clang4Decl19castFromDeclContextEPKNS_11DeclContextE>
 b80:	ldr	x8, [x0, #16]
 b84:	and	x20, x8, #0xfffffffffffffff8
 b88:	tbz	w8, #2, b90 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x100>
 b8c:	ldr	x20, [x20]
 b90:	cbnz	x20, b10 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x80>
 b94:	b	b00 <_ZL21getAllNamedNamespacesPKN5clang11DeclContextE+0x70>
 b98:	adrp	x0, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 b9c:	adrp	x1, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 ba0:	adrp	x3, 0 <_ZN5clang7tooling17replaceNestedNameB5cxx11EPKNS_19NestedNameSpecifierENS_14SourceLocationEPKNS_11DeclContextEPKNS_9NamedDeclEN4llvm9StringRefE>
 ba4:	add	x0, x0, #0x0
 ba8:	add	x1, x1, #0x0
 bac:	add	x3, x3, #0x0
 bb0:	mov	w2, #0x108                 	// #264
 bb4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPKN5clang13NamespaceDeclELb1EE9push_backERKS4_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:

0000000000000000 <_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	mov	x21, x8
  1c:	bl	0 <strlen>
  20:	mov	x8, x21
  24:	strb	wzr, [x8, #16]!
  28:	stp	x8, xzr, [x21]
  2c:	ldr	x8, [x19, #8]
  30:	mov	x22, x0
  34:	add	x1, x8, x0
  38:	mov	x0, x21
  3c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
  40:	mov	x0, x21
  44:	mov	x1, x20
  48:	mov	x2, x22
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm>
  50:	ldp	x1, x2, [x19]
  54:	mov	x0, x21
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9StringRef5splitES0_:

0000000000000000 <_ZNK4llvm9StringRef5splitES0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x3, xzr
  14:	mov	x20, x2
  18:	mov	x21, x0
  1c:	mov	x19, x8
  20:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
  24:	cmn	x0, #0x1
  28:	b.eq	58 <_ZNK4llvm9StringRef5splitES0_+0x58>  // b.none
  2c:	ldp	x9, x8, [x21]
  30:	add	x10, x0, x20
  34:	cmp	x8, x0
  38:	csel	x11, x8, x0, cc  // cc = lo, ul, last
  3c:	cmp	x8, x10
  40:	csel	x10, x8, x10, cc  // cc = lo, ul, last
  44:	stp	x9, x11, [x19]
  48:	add	x9, x9, x10
  4c:	sub	x8, x8, x10
  50:	stp	x9, x8, [x19, #16]
  54:	b	64 <_ZNK4llvm9StringRef5splitES0_+0x64>
  58:	ldr	q0, [x21]
  5c:	stp	xzr, xzr, [x19, #16]
  60:	str	q0, [x19]
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZN5clang15IdentifierTable3getEN4llvm9StringRefE:

0000000000000000 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x22, x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	add	x8, sp, #0x8
  18:	add	x3, x8, #0x10
  1c:	mov	x20, x2
  20:	mov	x21, x1
  24:	mov	x19, x0
  28:	stp	x1, x2, [sp, #8]
  2c:	str	xzr, [sp, #24]
  30:	bl	0 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE>
  34:	ldr	x22, [x0]
  38:	ldr	x0, [x22, #8]
  3c:	cbnz	x0, 90 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE+0x90>
  40:	ldr	x0, [x19, #128]
  44:	cbz	x0, 64 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE+0x64>
  48:	ldr	x8, [x0]
  4c:	mov	x1, x21
  50:	mov	x2, x20
  54:	ldr	x8, [x8, #16]
  58:	blr	x8
  5c:	str	x0, [x22, #8]
  60:	cbnz	x0, 90 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE+0x90>
  64:	add	x0, x19, #0x18
  68:	mov	w1, #0x18                  	// #24
  6c:	mov	w2, #0x3                   	// #3
  70:	bl	0 <_ZN5clang15IdentifierTable3getEN4llvm9StringRefE>
  74:	ldr	x8, [x0]
  78:	mov	x9, #0x5                   	// #5
  7c:	bfxil	x8, x9, #0, #35
  80:	stp	x8, xzr, [x0]
  84:	str	x0, [x22, #8]
  88:	str	x22, [x0, #16]
  8c:	ldr	x0, [x22, #8]
  90:	ldp	x20, x19, [sp, #64]
  94:	ldp	x22, x21, [sp, #48]
  98:	ldp	x29, x30, [sp, #32]
  9c:	add	sp, sp, #0x50
  a0:	ret

Disassembly of section .text._ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_:

0000000000000000 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x22, x3
  18:	mov	x23, x2
  1c:	mov	x24, x1
  20:	mov	x20, x0
  24:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
  28:	ldr	x8, [x20]
  2c:	mov	w21, w0
  30:	add	x19, x8, w0, uxtw #3
  34:	ldr	x8, [x19]
  38:	cmn	x8, #0x8
  3c:	b.eq	60 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x60>  // b.none
  40:	cbz	x8, 6c <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x6c>
  44:	b	4c <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x4c>
  48:	ldr	x8, [x19, #8]!
  4c:	cbz	x8, 48 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x48>
  50:	cmn	x8, #0x8
  54:	b.eq	48 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0x48>  // b.none
  58:	mov	x1, xzr
  5c:	b	d0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xd0>
  60:	ldr	w8, [x20, #16]
  64:	sub	w8, w8, #0x1
  68:	str	w8, [x20, #16]
  6c:	add	x2, x20, #0x18
  70:	mov	x0, x24
  74:	mov	x1, x23
  78:	mov	x3, x22
  7c:	bl	0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
  80:	str	x0, [x19]
  84:	ldp	w8, w9, [x20, #12]
  88:	ldr	w10, [x20, #8]
  8c:	add	w8, w8, #0x1
  90:	add	w9, w9, w8
  94:	cmp	w9, w10
  98:	str	w8, [x20, #12]
  9c:	b.hi	e8 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xe8>  // b.pmore
  a0:	mov	x0, x20
  a4:	mov	w1, w21
  a8:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
  ac:	ldr	x8, [x20]
  b0:	add	x19, x8, w0, uxtw #3
  b4:	ldr	x8, [x19]
  b8:	cbz	x8, c4 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xc4>
  bc:	cmn	x8, #0x8
  c0:	b.ne	cc <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xcc>  // b.any
  c4:	add	x19, x19, #0x8
  c8:	b	b4 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_+0xb4>
  cc:	mov	w1, #0x1                   	// #1
  d0:	mov	x0, x19
  d4:	ldp	x20, x19, [sp, #48]
  d8:	ldp	x22, x21, [sp, #32]
  dc:	ldp	x24, x23, [sp, #16]
  e0:	ldp	x29, x30, [sp], #64
  e4:	ret
  e8:	adrp	x0, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
  ec:	adrp	x1, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
  f0:	adrp	x3, 0 <_ZN4llvm9StringMapIPN5clang14IdentifierInfoENS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEE11try_emplaceIJS3_EEESt4pairINS_17StringMapIteratorIS3_EEbENS_9StringRefEDpOT_>
  f4:	add	x0, x0, #0x0
  f8:	add	x1, x1, #0x0
  fc:	add	x3, x3, #0x0
 100:	mov	w2, #0x1bb                 	// #443
 104:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm14StringMapEntryIPN5clang14IdentifierInfoEE6CreateINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEJS3_EEEPS4_NS_9StringRefERT_DpOT0_:

0000000000000000 <_ZN4llvm14StringMapEntryIPN5clang14IdentifierInfoEE6CreateINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEJS3_EEEPS4_NS_9StringRefERT_DpOT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x8, x2
  14:	mov	x19, x1
  18:	mov	x20, x0
  1c:	add	x1, x1, #0x11
  20:	mov	w2, #0x3                   	// #3
  24:	mov	x0, x8
  28:	mov	x22, x3
  2c:	bl	0 <_ZN4llvm14StringMapEntryIPN5clang14IdentifierInfoEE6CreateINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEJS3_EEEPS4_NS_9StringRefERT_DpOT0_>
  30:	ldr	x8, [x22]
  34:	mov	x21, x0
  38:	add	x22, x0, #0x10
  3c:	stp	x19, x8, [x0]
  40:	cbz	x19, 54 <_ZN4llvm14StringMapEntryIPN5clang14IdentifierInfoEE6CreateINS_20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EEEJS3_EEEPS4_NS_9StringRefERT_DpOT0_+0x54>
  44:	mov	x0, x22
  48:	mov	x1, x20
  4c:	mov	x2, x19
  50:	bl	0 <memcpy>
  54:	strb	wzr, [x22, x19]
  58:	mov	x0, x21
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x10, [x0, #80]
  1c:	ldr	x8, [x0]
  20:	mov	w9, #0x1                   	// #1
  24:	lsl	x9, x9, x2
  28:	sub	x24, x9, #0x1
  2c:	add	x12, x10, x1
  30:	add	x10, x24, x8
  34:	neg	x23, x9
  38:	and	x10, x10, x23
  3c:	sub	x10, x10, x8
  40:	adds	x11, x10, x1
  44:	str	x12, [x0, #80]
  48:	b.cs	130 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x130>  // b.hs, b.nlast
  4c:	ldr	x12, [x0, #8]
  50:	mov	x19, x1
  54:	mov	x20, x0
  58:	sub	x12, x12, x8
  5c:	cmp	x11, x12
  60:	b.ls	e0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xe0>  // b.plast
  64:	add	x8, x19, x9
  68:	sub	x21, x8, #0x1
  6c:	cmp	x21, #0x1, lsl #12
  70:	b.ls	ec <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0xec>  // b.plast
  74:	mov	x0, x21
  78:	bl	0 <malloc>
  7c:	mov	x22, x0
  80:	cbnz	x0, 94 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x94>
  84:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	add	x0, x20, #0x40
  98:	mov	x1, sp
  9c:	stp	x22, x21, [sp]
  a0:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  a4:	adds	x8, x24, x22
  a8:	b.cs	150 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x150>  // b.hs, b.nlast
  ac:	and	x0, x8, x23
  b0:	add	x8, x0, x19
  b4:	add	x9, x21, x22
  b8:	cmp	x8, x9
  bc:	b.ls	118 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x118>  // b.plast
  c0:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  c4:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  c8:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  cc:	add	x0, x0, #0x0
  d0:	add	x1, x1, #0x0
  d4:	add	x3, x3, #0x0
  d8:	mov	w2, #0xfb                  	// #251
  dc:	bl	0 <__assert_fail>
  e0:	add	x0, x8, x10
  e4:	add	x8, x0, x19
  e8:	b	114 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x114>
  ec:	mov	x0, x20
  f0:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
  f4:	ldr	x8, [x20]
  f8:	adds	x8, x24, x8
  fc:	b.cs	150 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x150>  // b.hs, b.nlast
 100:	ldr	x9, [x20, #8]
 104:	and	x0, x8, x23
 108:	add	x8, x0, x19
 10c:	cmp	x8, x9
 110:	b.hi	170 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE+0x170>  // b.pmore
 114:	str	x8, [x20]
 118:	ldp	x20, x19, [sp, #64]
 11c:	ldp	x22, x21, [sp, #48]
 120:	ldp	x24, x23, [sp, #32]
 124:	ldp	x29, x30, [sp, #16]
 128:	add	sp, sp, #0x50
 12c:	ret
 130:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 134:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 138:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 13c:	add	x0, x0, #0x0
 140:	add	x1, x1, #0x0
 144:	add	x3, x3, #0x0
 148:	mov	w2, #0xdc                  	// #220
 14c:	bl	0 <__assert_fail>
 150:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 154:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 158:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 15c:	add	x0, x0, #0x0
 160:	add	x1, x1, #0x0
 164:	add	x3, x3, #0x0
 168:	mov	w2, #0xbb                  	// #187
 16c:	bl	0 <__assert_fail>
 170:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 174:	adrp	x1, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 178:	adrp	x3, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE8AllocateEmNS_5AlignE>
 17c:	add	x0, x0, #0x0
 180:	add	x1, x1, #0x0
 184:	add	x3, x3, #0x0
 188:	mov	w2, #0x106                 	// #262
 18c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	60 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_+0x60>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	mov	x0, x19
  50:	mov	x1, xzr
  54:	bl	0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_>
  58:	ldr	w8, [x19, #8]
  5c:	b	20 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_+0x20>
  60:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_>
  64:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_>
  68:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE9push_backEOS3_>
  6c:	add	x0, x0, #0x0
  70:	add	x1, x1, #0x0
  74:	add	x3, x3, #0x0
  78:	mov	w2, #0x43                  	// #67
  7c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv:

0000000000000000 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #24]
  14:	mov	w9, #0x1e                  	// #30
  18:	mov	x19, x0
  1c:	lsr	x8, x8, #7
  20:	cmp	x8, #0x1e
  24:	csel	x8, x8, x9, cc  // cc = lo, ul, last
  28:	mov	w9, #0x1000                	// #4096
  2c:	lsl	x20, x9, x8
  30:	mov	x0, x20
  34:	bl	0 <malloc>
  38:	mov	x21, x0
  3c:	cbnz	x0, 50 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv+0x50>
  40:	adrp	x0, 0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  44:	add	x0, x0, #0x0
  48:	mov	w1, #0x1                   	// #1
  4c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  50:	add	x0, x19, #0x10
  54:	add	x1, x29, #0x18
  58:	str	x21, [x29, #24]
  5c:	bl	0 <_ZN4llvm20BumpPtrAllocatorImplINS_15MallocAllocatorELm4096ELm4096EE12StartNewSlabEv>
  60:	ldr	x8, [x29, #24]
  64:	add	x9, x8, x20
  68:	stp	x8, x9, [x19]
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	lsr	x8, x1, #32
  18:	mov	x19, x0
  1c:	cbz	x8, 30 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x30>
  20:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  24:	add	x0, x0, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  30:	ldr	w8, [x19, #12]
  34:	add	x8, x8, #0x2
  38:	orr	x8, x8, x8, lsr #1
  3c:	orr	x8, x8, x8, lsr #2
  40:	orr	x8, x8, x8, lsr #4
  44:	orr	x8, x8, x8, lsr #8
  48:	orr	x8, x8, x8, lsr #16
  4c:	orr	x8, x8, x8, lsr #32
  50:	add	x9, x8, #0x1
  54:	cmp	x9, x20
  58:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  5c:	mov	w9, #0xffffffff            	// #-1
  60:	cmp	x8, x9
  64:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  68:	lsl	x0, x21, #4
  6c:	bl	0 <malloc>
  70:	mov	x20, x0
  74:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  78:	cbz	x21, 94 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0x94>
  7c:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  80:	add	x0, x0, #0x0
  84:	mov	w1, #0x1                   	// #1
  88:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  8c:	mov	x20, xzr
  90:	b	b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  94:	mov	w0, #0x1                   	// #1
  98:	bl	0 <malloc>
  9c:	mov	x20, x0
  a0:	cbnz	x0, b4 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xb4>
  a4:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm>
  a8:	add	x0, x0, #0x0
  ac:	mov	w1, #0x1                   	// #1
  b0:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b4:	ldr	w8, [x19, #8]
  b8:	ldr	x0, [x19]
  bc:	cbz	w8, e0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xe0>
  c0:	lsl	x8, x8, #4
  c4:	mov	x9, x20
  c8:	ldr	q0, [x0], #16
  cc:	subs	x8, x8, #0x10
  d0:	str	q0, [x9]
  d4:	add	x9, x9, #0x10
  d8:	b.ne	c8 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xc8>  // b.any
  dc:	ldr	x0, [x19]
  e0:	add	x8, x19, #0x10
  e4:	cmp	x0, x8
  e8:	b.eq	f0 <_ZN4llvm23SmallVectorTemplateBaseISt4pairIPvmELb0EE4growEm+0xf0>  // b.none
  ec:	bl	0 <free>
  f0:	str	x20, [x19]
  f4:	str	w21, [x19, #12]
  f8:	ldp	x20, x19, [sp, #32]
  fc:	ldr	x21, [sp, #16]
 100:	ldp	x29, x30, [sp], #48
 104:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	x10, [x20]
  28:	str	x10, [x9, w8, uxtw #3]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x8                   	// #8
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseIPvLb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_:

0000000000000000 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	stp	x1, x3, [x0]
   c:	strb	w2, [x0, #16]
  10:	strb	w4, [x0, #17]
  14:	bl	0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xb8                  	// #184
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefEPKc:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x305                 	// #773
   c:	strh	w8, [x0, #16]
  10:	stp	x1, x2, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefEPKc>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x171                 	// #369
  40:	bl	0 <__assert_fail>

Replacement.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN5clang7tooling11ReplacementC1Ev>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
      10:	add	x1, x1, #0x0
      14:	add	x8, x0, #0x10
      18:	mov	x2, x1
      1c:	mov	x19, x0
      20:	str	x8, [x0]
      24:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
      28:	strb	wzr, [x19, #56]!
      2c:	stp	xzr, x19, [x19, #-24]
      30:	stur	xzr, [x19, #-8]
      34:	ldr	x19, [sp, #16]
      38:	ldp	x29, x30, [sp], #32
      3c:	ret

0000000000000040 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>:
      40:	stp	x29, x30, [sp, #-64]!
      44:	str	x23, [sp, #16]
      48:	stp	x22, x21, [sp, #32]
      4c:	stp	x20, x19, [sp, #48]
      50:	mov	x29, sp
      54:	mov	x20, x6
      58:	mov	x19, x5
      5c:	mov	w22, w4
      60:	mov	w23, w3
      64:	mov	x21, x0
      68:	add	x8, x0, #0x10
      6c:	str	x8, [x0]
      70:	cbz	x1, 84 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x44>
      74:	add	x2, x1, x2
      78:	mov	x0, x21
      7c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
      80:	b	8c <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x4c>
      84:	str	xzr, [x21, #8]
      88:	strb	wzr, [x21, #16]
      8c:	add	x8, x21, #0x38
      90:	mov	x0, x21
      94:	str	x8, [x0, #40]!
      98:	stp	w23, w22, [x0, #-8]
      9c:	cbz	x19, bc <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_+0x7c>
      a0:	add	x2, x19, x20
      a4:	mov	x1, x19
      a8:	ldp	x20, x19, [sp, #48]
      ac:	ldp	x22, x21, [sp, #32]
      b0:	ldr	x23, [sp, #16]
      b4:	ldp	x29, x30, [sp], #64
      b8:	b	0 <_ZN5clang7tooling11ReplacementC1Ev>
      bc:	str	xzr, [x21, #48]
      c0:	strb	wzr, [x21, #56]
      c4:	ldp	x20, x19, [sp, #48]
      c8:	ldp	x22, x21, [sp, #32]
      cc:	ldr	x23, [sp, #16]
      d0:	ldp	x29, x30, [sp], #64
      d4:	ret

00000000000000d8 <_ZN5clang7tooling11ReplacementC1ERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>:
      d8:	mov	x8, x0
      dc:	mov	x9, x0
      e0:	strb	wzr, [x8, #16]!
      e4:	and	x2, x2, #0xffffffff
      e8:	str	xzr, [x0, #32]
      ec:	stp	x8, xzr, [x0]
      f0:	strb	wzr, [x9, #56]!
      f4:	stp	x9, xzr, [x0, #40]
      f8:	b	fc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>

00000000000000fc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>:
      fc:	sub	sp, sp, #0x70
     100:	stp	x29, x30, [sp, #32]
     104:	str	x25, [sp, #48]
     108:	stp	x24, x23, [sp, #64]
     10c:	stp	x22, x21, [sp, #80]
     110:	stp	x20, x19, [sp, #96]
     114:	add	x29, sp, #0x20
     118:	mov	x24, x1
     11c:	mov	x19, x0
     120:	and	x1, x2, #0xffffffff
     124:	mov	x0, x24
     128:	mov	x21, x5
     12c:	mov	x20, x4
     130:	mov	w22, w3
     134:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     138:	mov	x23, x0
     13c:	and	x1, x0, #0xffffffff
     140:	mov	x0, x24
     144:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     148:	cbz	x0, 16c <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x70>
     14c:	ldp	x1, x8, [x0]
     150:	mov	x9, sp
     154:	add	x24, x9, #0x10
     158:	str	x24, [sp]
     15c:	cbnz	x1, 184 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x88>
     160:	str	xzr, [sp, #8]
     164:	strb	wzr, [sp, #16]
     168:	b	190 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x94>
     16c:	mov	x9, sp
     170:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     174:	mov	x8, xzr
     178:	add	x24, x9, #0x10
     17c:	add	x1, x1, #0x0
     180:	str	x24, [sp]
     184:	add	x2, x1, x8
     188:	mov	x0, sp
     18c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     190:	mov	x1, sp
     194:	mov	x0, x19
     198:	lsr	x23, x23, #32
     19c:	mov	x25, sp
     1a0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
     1a4:	ldr	x0, [sp]
     1a8:	cmp	x0, x24
     1ac:	b.eq	1b4 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xb8>  // b.none
     1b0:	bl	0 <_ZdlPv>
     1b4:	bfi	x23, x22, #32, #32
     1b8:	add	x22, x25, #0x10
     1bc:	str	x23, [x19, #32]
     1c0:	str	x22, [sp]
     1c4:	cbz	x20, 1dc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xe0>
     1c8:	add	x2, x20, x21
     1cc:	mov	x0, sp
     1d0:	mov	x1, x20
     1d4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     1d8:	b	1e4 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0xe8>
     1dc:	str	xzr, [sp, #8]
     1e0:	strb	wzr, [sp, #16]
     1e4:	add	x0, x19, #0x28
     1e8:	mov	x1, sp
     1ec:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_>
     1f0:	ldr	x0, [sp]
     1f4:	cmp	x0, x22
     1f8:	b.eq	200 <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE+0x104>  // b.none
     1fc:	bl	0 <_ZdlPv>
     200:	ldp	x20, x19, [sp, #96]
     204:	ldp	x22, x21, [sp, #80]
     208:	ldp	x24, x23, [sp, #64]
     20c:	ldr	x25, [sp, #48]
     210:	ldp	x29, x30, [sp, #32]
     214:	add	sp, sp, #0x70
     218:	ret

000000000000021c <_ZN5clang7tooling11ReplacementC1ERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>:
     21c:	mov	x8, x0
     220:	mov	x9, x0
     224:	strb	wzr, [x8, #16]!
     228:	str	xzr, [x0, #32]
     22c:	stp	x8, xzr, [x0]
     230:	strb	wzr, [x9, #56]!
     234:	stp	x9, xzr, [x0, #40]
     238:	b	23c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>

000000000000023c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE>:
     23c:	stp	x29, x30, [sp, #-96]!
     240:	str	x27, [sp, #16]
     244:	stp	x26, x25, [sp, #32]
     248:	stp	x24, x23, [sp, #48]
     24c:	stp	x22, x21, [sp, #64]
     250:	stp	x20, x19, [sp, #80]
     254:	mov	x29, sp
     258:	ldr	w23, [x2]
     25c:	mov	x24, x5
     260:	mov	x19, x4
     264:	mov	x20, x3
     268:	mov	x25, x2
     26c:	mov	x21, x1
     270:	mov	x22, x0
     274:	tbnz	w23, #31, 280 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x44>
     278:	mov	x1, x23
     27c:	b	2a4 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x68>
     280:	mov	x0, x21
     284:	mov	x1, x23
     288:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     28c:	ldr	w1, [x25]
     290:	and	x23, x0, #0xffffffff
     294:	tbz	w1, #31, 2a4 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x68>
     298:	mov	x0, x21
     29c:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     2a0:	mov	x1, x0
     2a4:	ldr	w8, [x25, #4]
     2a8:	and	x27, x1, #0xffffffff
     2ac:	tbz	w8, #31, 2c0 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0x84>
     2b0:	mov	x0, x21
     2b4:	mov	x1, x8
     2b8:	bl	0 <_ZNK5clang13SourceManager22getSpellingLocSlowCaseENS_14SourceLocationE>
     2bc:	mov	x8, x0
     2c0:	mov	x0, x21
     2c4:	mov	x1, x27
     2c8:	and	x26, x8, #0xffffffff
     2cc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     2d0:	mov	x27, x0
     2d4:	mov	x0, x21
     2d8:	mov	x1, x26
     2dc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     2e0:	cmp	w27, w0
     2e4:	b.ne	314 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xd8>  // b.any
     2e8:	ldrb	w8, [x25, #8]
     2ec:	lsr	x25, x27, #32
     2f0:	lsr	x27, x0, #32
     2f4:	cbz	w8, 30c <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xd0>
     2f8:	mov	x0, x26
     2fc:	mov	x1, x21
     300:	mov	x2, x24
     304:	bl	0 <_ZN5clang5Lexer18MeasureTokenLengthENS_14SourceLocationERKNS_13SourceManagerERKNS_11LangOptionsE>
     308:	add	w27, w0, w27
     30c:	sub	w3, w27, w25
     310:	b	318 <_ZN5clang7tooling11Replacement18setFromSourceRangeERKNS_13SourceManagerERKNS_15CharSourceRangeEN4llvm9StringRefERKNS_11LangOptionsE+0xdc>
     314:	mov	w3, #0xffffffff            	// #-1
     318:	mov	x0, x22
     31c:	mov	x1, x21
     320:	mov	x2, x23
     324:	mov	x4, x20
     328:	mov	x5, x19
     32c:	ldp	x20, x19, [sp, #80]
     330:	ldp	x22, x21, [sp, #64]
     334:	ldp	x24, x23, [sp, #48]
     338:	ldp	x26, x25, [sp, #32]
     33c:	ldr	x27, [sp, #16]
     340:	ldp	x29, x30, [sp], #96
     344:	b	fc <_ZN5clang7tooling11Replacement21setFromSourceLocationERKNS_13SourceManagerENS_14SourceLocationEjN4llvm9StringRefE>

0000000000000348 <_ZNK5clang7tooling11Replacement12isApplicableEv>:
     348:	stp	x29, x30, [sp, #-16]!
     34c:	mov	x29, sp
     350:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     354:	add	x1, x1, #0x0
     358:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
     35c:	cmp	w0, #0x0
     360:	cset	w0, ne  // ne = any
     364:	ldp	x29, x30, [sp], #16
     368:	ret

000000000000036c <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>:
     36c:	sub	sp, sp, #0x50
     370:	stp	x29, x30, [sp, #32]
     374:	str	x21, [sp, #48]
     378:	stp	x20, x19, [sp, #64]
     37c:	add	x29, sp, #0x20
     380:	ldr	x21, [x1]
     384:	mov	x20, x0
     388:	mov	x19, x1
     38c:	ldp	x1, x2, [x20]
     390:	ldr	x0, [x21, #16]
     394:	add	x8, sp, #0x8
     398:	mov	w4, #0x1                   	// #1
     39c:	mov	w3, wzr
     3a0:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
     3a4:	ldrb	w8, [sp, #24]
     3a8:	mov	w0, wzr
     3ac:	tbnz	w8, #0, 414 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0xa8>
     3b0:	ldr	x1, [sp, #8]
     3b4:	mov	x0, x21
     3b8:	mov	w2, wzr
     3bc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     3c0:	and	x1, x0, #0xffffffff
     3c4:	add	x2, x29, #0x1c
     3c8:	mov	x0, x21
     3cc:	strb	wzr, [x29, #28]
     3d0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     3d4:	ldr	w9, [x0]
     3d8:	ldrb	w10, [x29, #28]
     3dc:	ldr	w8, [x20, #32]
     3e0:	cmp	w9, #0x0
     3e4:	ccmp	w10, #0x0, #0x0, gt
     3e8:	csel	w9, w9, wzr, eq  // eq = none
     3ec:	and	w10, w9, #0x7fffffff
     3f0:	cmn	w10, w8
     3f4:	b.mi	428 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0xbc>  // b.first
     3f8:	ldr	w2, [x20, #36]
     3fc:	ldp	x3, x4, [x20, #40]
     400:	add	w1, w9, w8
     404:	mov	x0, x19
     408:	bl	0 <_ZN5clang8Rewriter11ReplaceTextENS_14SourceLocationEjN4llvm9StringRefE>
     40c:	tbnz	w0, #0, 448 <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE+0xdc>
     410:	mov	w0, #0x1                   	// #1
     414:	ldp	x20, x19, [sp, #64]
     418:	ldr	x21, [sp, #48]
     41c:	ldp	x29, x30, [sp, #32]
     420:	add	sp, sp, #0x50
     424:	ret
     428:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     42c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     430:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     434:	add	x0, x0, #0x0
     438:	add	x1, x1, #0x0
     43c:	add	x3, x3, #0x0
     440:	mov	w2, #0x85                  	// #133
     444:	bl	0 <__assert_fail>
     448:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     44c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     450:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     454:	add	x0, x0, #0x0
     458:	add	x1, x1, #0x0
     45c:	add	x3, x3, #0x0
     460:	mov	w2, #0x53                  	// #83
     464:	bl	0 <__assert_fail>

0000000000000468 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>:
     468:	sub	sp, sp, #0x80
     46c:	stp	x29, x30, [sp, #80]
     470:	str	x21, [sp, #96]
     474:	stp	x20, x19, [sp, #112]
     478:	add	x29, sp, #0x50
     47c:	sturb	wzr, [x29, #-16]
     480:	stp	xzr, xzr, [sp, #16]
     484:	adrp	x11, 0 <_ZTVN4llvm18raw_string_ostreamE>
     488:	ldr	x11, [x11]
     48c:	sub	x9, x29, #0x20
     490:	mov	w10, #0x1                   	// #1
     494:	str	w10, [sp, #32]
     498:	add	x21, x9, #0x10
     49c:	add	x10, x11, #0x10
     4a0:	str	x9, [sp, #40]
     4a4:	stp	x21, xzr, [x29, #-32]
     4a8:	stp	x10, xzr, [sp]
     4ac:	ldp	x1, x2, [x0]
     4b0:	mov	x20, x0
     4b4:	mov	x0, sp
     4b8:	mov	x19, x8
     4bc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     4c0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4c4:	add	x1, x1, #0x0
     4c8:	mov	w2, #0x2                   	// #2
     4cc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     4d0:	ldr	w1, [x20, #32]
     4d4:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4d8:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4dc:	add	x1, x1, #0x0
     4e0:	mov	w2, #0x2                   	// #2
     4e4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     4e8:	ldr	w1, [x20, #36]
     4ec:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
     4f0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     4f4:	add	x1, x1, #0x0
     4f8:	mov	w2, #0x2                   	// #2
     4fc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     500:	ldp	x1, x2, [x20, #40]
     504:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
     508:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     50c:	add	x1, x1, #0x0
     510:	mov	w2, #0x1                   	// #1
     514:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     518:	ldr	x8, [sp, #24]
     51c:	ldr	x9, [sp, #8]
     520:	cmp	x8, x9
     524:	b.eq	530 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0xc8>  // b.none
     528:	mov	x0, sp
     52c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
     530:	ldr	x8, [sp, #40]
     534:	add	x9, x19, #0x10
     538:	str	x9, [x19]
     53c:	mov	x0, x19
     540:	ldp	x1, x8, [x8]
     544:	add	x2, x1, x8
     548:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     54c:	mov	x0, sp
     550:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
     554:	ldur	x0, [x29, #-32]
     558:	cmp	x0, x21
     55c:	b.eq	564 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev+0xfc>  // b.none
     560:	bl	0 <_ZdlPv>
     564:	ldp	x20, x19, [sp, #112]
     568:	ldr	x21, [sp, #96]
     56c:	ldp	x29, x30, [sp, #80]
     570:	add	sp, sp, #0x80
     574:	ret

0000000000000578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>:
     578:	sub	sp, sp, #0x50
     57c:	stp	x29, x30, [sp, #16]
     580:	stp	x24, x23, [sp, #32]
     584:	stp	x22, x21, [sp, #48]
     588:	stp	x20, x19, [sp, #64]
     58c:	add	x29, sp, #0x10
     590:	ldr	w8, [x0, #32]
     594:	ldr	w9, [x1, #32]
     598:	cmp	w8, w9
     59c:	b.ne	5f4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x7c>  // b.any
     5a0:	ldr	w8, [x0, #36]
     5a4:	ldr	w9, [x1, #36]
     5a8:	mov	x19, x1
     5ac:	mov	x20, x0
     5b0:	cmp	w8, w9
     5b4:	b.ne	5f4 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x7c>  // b.any
     5b8:	ldp	x24, x23, [x20]
     5bc:	ldp	x22, x21, [x19]
     5c0:	cmp	x23, x21
     5c4:	b.ne	5e0 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x68>  // b.any
     5c8:	cbz	x23, 5fc <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x84>
     5cc:	mov	x0, x24
     5d0:	mov	x1, x22
     5d4:	mov	x2, x23
     5d8:	bl	0 <bcmp>
     5dc:	cbz	w0, 5fc <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x84>
     5e0:	stp	x24, x23, [sp]
     5e4:	mov	x0, sp
     5e8:	mov	x1, x22
     5ec:	mov	x2, x21
     5f0:	b	60c <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0x94>
     5f4:	cset	w0, cc  // cc = lo, ul, last
     5f8:	b	618 <_ZN5clang7toolingltERKNS0_11ReplacementES3_+0xa0>
     5fc:	ldp	x8, x9, [x20, #40]
     600:	ldp	x1, x2, [x19, #40]
     604:	mov	x0, sp
     608:	stp	x8, x9, [sp]
     60c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     610:	cmn	w0, #0x1
     614:	cset	w0, eq  // eq = none
     618:	ldp	x20, x19, [sp, #64]
     61c:	ldp	x22, x21, [sp, #48]
     620:	ldp	x24, x23, [sp, #32]
     624:	ldp	x29, x30, [sp, #16]
     628:	add	sp, sp, #0x50
     62c:	ret

0000000000000630 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_>:
     630:	stp	x29, x30, [sp, #-32]!
     634:	stp	x20, x19, [sp, #16]
     638:	mov	x29, sp
     63c:	ldr	w8, [x0, #32]
     640:	ldr	w9, [x1, #32]
     644:	cmp	w8, w9
     648:	b.ne	6b4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x84>  // b.any
     64c:	ldr	w8, [x0, #36]
     650:	ldr	w9, [x1, #36]
     654:	mov	x19, x1
     658:	mov	x20, x0
     65c:	cmp	w8, w9
     660:	b.ne	6b4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x84>  // b.any
     664:	ldr	x2, [x20, #8]
     668:	ldr	x8, [x19, #8]
     66c:	cmp	x2, x8
     670:	b.ne	6b4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x84>  // b.any
     674:	cbz	x2, 688 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x58>
     678:	ldr	x0, [x20]
     67c:	ldr	x1, [x19]
     680:	bl	0 <bcmp>
     684:	cbnz	w0, 6b4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x84>
     688:	ldr	x2, [x20, #48]
     68c:	ldr	x8, [x19, #48]
     690:	cmp	x2, x8
     694:	b.ne	6b4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x84>  // b.any
     698:	cbz	x2, 6c4 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x94>
     69c:	ldr	x0, [x20, #40]
     6a0:	ldr	x1, [x19, #40]
     6a4:	bl	0 <bcmp>
     6a8:	cmp	w0, #0x0
     6ac:	cset	w0, eq  // eq = none
     6b0:	b	6b8 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x88>
     6b4:	mov	w0, wzr
     6b8:	ldp	x20, x19, [sp, #16]
     6bc:	ldp	x29, x30, [sp], #32
     6c0:	ret
     6c4:	mov	w0, #0x1                   	// #1
     6c8:	b	6b8 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_+0x88>

00000000000006cc <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>:
     6cc:	stp	x29, x30, [sp, #-64]!
     6d0:	str	x23, [sp, #16]
     6d4:	stp	x22, x21, [sp, #32]
     6d8:	stp	x20, x19, [sp, #48]
     6dc:	mov	x29, sp
     6e0:	ldr	w21, [x1, #32]
     6e4:	mov	x19, x1
     6e8:	mov	x20, x0
     6ec:	mov	x22, x8
     6f0:	mov	w1, w21
     6f4:	bl	734 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj>
     6f8:	ldr	w8, [x19, #36]
     6fc:	mov	w23, w0
     700:	mov	x0, x20
     704:	add	w1, w8, w21
     708:	bl	734 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj>
     70c:	ldp	x1, x2, [x19]
     710:	ldp	x5, x6, [x19, #40]
     714:	sub	w4, w0, w23
     718:	mov	x0, x22
     71c:	mov	w3, w23
     720:	ldp	x20, x19, [sp, #48]
     724:	ldp	x22, x21, [sp, #32]
     728:	ldr	x23, [sp, #16]
     72c:	ldp	x29, x30, [sp], #64
     730:	b	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>

0000000000000734 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj>:
     734:	stp	x29, x30, [sp, #-48]!
     738:	str	x21, [sp, #16]
     73c:	stp	x20, x19, [sp, #32]
     740:	mov	x29, sp
     744:	mov	x8, x0
     748:	ldr	x0, [x0, #24]
     74c:	add	x21, x8, #0x8
     750:	mov	w19, w1
     754:	mov	w20, wzr
     758:	cmp	x0, x21
     75c:	b.eq	7b4 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.none
     760:	ldp	w8, w9, [x0, #64]
     764:	add	w10, w9, w8
     768:	cmp	w10, w19
     76c:	b.hi	78c <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x58>  // b.pmore
     770:	ldr	w8, [x0, #80]
     774:	sub	w9, w20, w9
     778:	add	w20, w9, w8
     77c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     780:	cmp	x0, x21
     784:	b.ne	760 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x2c>  // b.any
     788:	b	7b4 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>
     78c:	cmp	w8, w19
     790:	b.cs	7b4 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.hs, b.nlast
     794:	ldr	x9, [x0, #80]
     798:	add	x10, x9, x8
     79c:	cmp	x10, w19, uxtw
     7a0:	b.hi	7b4 <_ZNK5clang7tooling12Replacements22getShiftedCodePositionEj+0x80>  // b.pmore
     7a4:	cmp	x9, #0x0
     7a8:	add	w8, w8, w9
     7ac:	cset	w9, ne  // ne = any
     7b0:	sub	w19, w8, w9
     7b4:	add	w0, w19, w20
     7b8:	ldp	x20, x19, [sp, #32]
     7bc:	ldr	x21, [sp, #16]
     7c0:	ldp	x29, x30, [sp], #48
     7c4:	ret

00000000000007c8 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev>:
     7c8:	sub	sp, sp, #0x70
     7cc:	stp	x29, x30, [sp, #64]
     7d0:	str	x21, [sp, #80]
     7d4:	stp	x20, x19, [sp, #96]
     7d8:	add	x29, sp, #0x40
     7dc:	ldr	w9, [x0, #8]
     7e0:	cmp	w9, #0x3
     7e4:	b.hi	a94 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2cc>  // b.pmore
     7e8:	mov	x19, x8
     7ec:	adrp	x8, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     7f0:	add	x8, x8, #0x0
     7f4:	adr	x10, 808 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x40>
     7f8:	ldrb	w11, [x8, x9]
     7fc:	add	x10, x10, x11, lsl #2
     800:	mov	x20, x0
     804:	br	x10
     808:	add	x8, x19, #0x10
     80c:	mov	w9, #0x1e                  	// #30
     810:	add	x1, sp, #0x20
     814:	mov	x0, x19
     818:	mov	x2, xzr
     81c:	str	x8, [x19]
     820:	str	x9, [sp, #32]
     824:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     828:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     82c:	add	x9, x9, #0x0
     830:	ldr	x8, [sp, #32]
     834:	ldur	q0, [x9, #14]
     838:	ldr	q1, [x9]
     83c:	str	x0, [x19]
     840:	str	x8, [x19, #16]
     844:	stur	q0, [x0, #14]
     848:	str	q1, [x0]
     84c:	b	89c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0xd4>
     850:	add	x8, x19, #0x10
     854:	mov	w9, #0x3a                  	// #58
     858:	add	x1, sp, #0x20
     85c:	mov	x0, x19
     860:	mov	x2, xzr
     864:	str	x8, [x19]
     868:	str	x9, [sp, #32]
     86c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     870:	adrp	x9, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     874:	add	x9, x9, #0x0
     878:	ldr	x8, [sp, #32]
     87c:	ldp	q3, q0, [x9, #16]
     880:	ldur	q1, [x9, #42]
     884:	ldr	q2, [x9]
     888:	str	x0, [x19]
     88c:	str	x8, [x19, #16]
     890:	stur	q1, [x0, #42]
     894:	stp	q3, q0, [x0, #16]
     898:	str	q2, [x0]
     89c:	ldr	x9, [x19]
     8a0:	str	x8, [x19, #8]
     8a4:	strb	wzr, [x9, x8]
     8a8:	b	930 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x168>
     8ac:	add	x8, x19, #0x10
     8b0:	mov	w9, #0x4a                  	// #74
     8b4:	add	x1, sp, #0x20
     8b8:	mov	x0, x19
     8bc:	mov	x2, xzr
     8c0:	str	x8, [x19]
     8c4:	str	x9, [sp, #32]
     8c8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     8cc:	ldr	x21, [sp, #32]
     8d0:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     8d4:	str	x0, [x19]
     8d8:	add	x1, x1, #0x0
     8dc:	str	x21, [x19, #16]
     8e0:	mov	w2, #0x4a                  	// #74
     8e4:	b	920 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x158>
     8e8:	add	x8, x19, #0x10
     8ec:	mov	w9, #0x58                  	// #88
     8f0:	add	x1, sp, #0x20
     8f4:	mov	x0, x19
     8f8:	mov	x2, xzr
     8fc:	str	x8, [x19]
     900:	str	x9, [sp, #32]
     904:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     908:	ldr	x21, [sp, #32]
     90c:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     910:	add	x1, x1, #0x0
     914:	mov	w2, #0x58                  	// #88
     918:	str	x0, [x19]
     91c:	str	x21, [x19, #16]
     920:	bl	0 <memcpy>
     924:	ldr	x8, [x19]
     928:	str	x21, [x19, #8]
     92c:	strb	wzr, [x8, x21]
     930:	ldrb	w8, [x20, #88]
     934:	cbz	w8, 9d8 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x210>
     938:	add	x0, x20, #0x10
     93c:	mov	x8, sp
     940:	bl	468 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>
     944:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     948:	add	x3, x3, #0x0
     94c:	mov	x0, sp
     950:	mov	w4, #0x12                  	// #18
     954:	mov	x1, xzr
     958:	mov	x2, xzr
     95c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
     960:	add	x8, sp, #0x20
     964:	add	x21, x8, #0x10
     968:	str	x21, [sp, #32]
     96c:	mov	x8, x0
     970:	ldr	x9, [x8], #16
     974:	cmp	x9, x8
     978:	b.eq	98c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x1c4>  // b.none
     97c:	str	x9, [sp, #32]
     980:	ldr	x9, [x0, #16]
     984:	str	x9, [sp, #48]
     988:	b	994 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x1cc>
     98c:	ldr	q0, [x9]
     990:	str	q0, [x21]
     994:	ldr	x9, [x0, #8]
     998:	str	x9, [sp, #40]
     99c:	stp	x8, xzr, [x0]
     9a0:	strb	wzr, [x0, #16]
     9a4:	ldp	x1, x2, [sp, #32]
     9a8:	mov	x0, x19
     9ac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     9b0:	ldr	x0, [sp, #32]
     9b4:	cmp	x0, x21
     9b8:	b.eq	9c0 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x1f8>  // b.none
     9bc:	bl	0 <_ZdlPv>
     9c0:	ldr	x0, [sp]
     9c4:	mov	x8, sp
     9c8:	add	x8, x8, #0x10
     9cc:	cmp	x0, x8
     9d0:	b.eq	9d8 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x210>  // b.none
     9d4:	bl	0 <_ZdlPv>
     9d8:	ldrb	w8, [x20, #168]
     9dc:	cbz	w8, a80 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2b8>
     9e0:	add	x0, x20, #0x60
     9e4:	mov	x8, sp
     9e8:	bl	468 <_ZNK5clang7tooling11Replacement8toStringB5cxx11Ev>
     9ec:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     9f0:	add	x3, x3, #0x0
     9f4:	mov	x0, sp
     9f8:	mov	w4, #0x17                  	// #23
     9fc:	mov	x1, xzr
     a00:	mov	x2, xzr
     a04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm>
     a08:	add	x8, sp, #0x20
     a0c:	add	x20, x8, #0x10
     a10:	str	x20, [sp, #32]
     a14:	mov	x8, x0
     a18:	ldr	x9, [x8], #16
     a1c:	cmp	x9, x8
     a20:	b.eq	a34 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x26c>  // b.none
     a24:	str	x9, [sp, #32]
     a28:	ldr	x9, [x0, #16]
     a2c:	str	x9, [sp, #48]
     a30:	b	a3c <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x274>
     a34:	ldr	q0, [x9]
     a38:	str	q0, [x20]
     a3c:	ldr	x9, [x0, #8]
     a40:	str	x9, [sp, #40]
     a44:	stp	x8, xzr, [x0]
     a48:	strb	wzr, [x0, #16]
     a4c:	ldp	x1, x2, [sp, #32]
     a50:	mov	x0, x19
     a54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
     a58:	ldr	x0, [sp, #32]
     a5c:	cmp	x0, x20
     a60:	b.eq	a68 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2a0>  // b.none
     a64:	bl	0 <_ZdlPv>
     a68:	ldr	x0, [sp]
     a6c:	mov	x8, sp
     a70:	add	x8, x8, #0x10
     a74:	cmp	x0, x8
     a78:	b.eq	a80 <_ZNK5clang7tooling16ReplacementError7messageB5cxx11Ev+0x2b8>  // b.none
     a7c:	bl	0 <_ZdlPv>
     a80:	ldp	x20, x19, [sp, #96]
     a84:	ldr	x21, [sp, #80]
     a88:	ldp	x29, x30, [sp, #64]
     a8c:	add	sp, sp, #0x70
     a90:	ret
     a94:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     a98:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     a9c:	add	x0, x0, #0x0
     aa0:	add	x1, x1, #0x0
     aa4:	mov	w2, #0xb1                  	// #177
     aa8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000000aac <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>:
     aac:	sub	sp, sp, #0x180
     ab0:	stp	x29, x30, [sp, #288]
     ab4:	stp	x28, x27, [sp, #304]
     ab8:	stp	x26, x25, [sp, #320]
     abc:	stp	x24, x23, [sp, #336]
     ac0:	stp	x22, x21, [sp, #352]
     ac4:	stp	x20, x19, [sp, #368]
     ac8:	add	x29, sp, #0x120
     acc:	stp	xzr, xzr, [x29, #-32]
     ad0:	stur	xzr, [x29, #-16]
     ad4:	ldr	x20, [x0, #24]
     ad8:	add	x27, x0, #0x8
     adc:	mov	x21, x8
     ae0:	cmp	x20, x27
     ae4:	b.eq	cb0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x204>  // b.none
     ae8:	sub	x9, x29, #0x88
     aec:	sub	x10, x29, #0x68
     af0:	add	x9, x9, #0x10
     af4:	str	x21, [sp, #8]
     af8:	mov	x22, xzr
     afc:	mov	x8, xzr
     b00:	str	x9, [sp, #24]
     b04:	add	x21, x10, #0x28
     b08:	add	x9, x10, #0x38
     b0c:	add	x28, x10, #0x10
     b10:	str	x9, [sp, #16]
     b14:	cmp	x8, x22
     b18:	add	x1, x20, #0x20
     b1c:	b.eq	b34 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x88>  // b.none
     b20:	ldp	w23, w8, [x22, #-40]
     b24:	ldr	w9, [x20, #64]
     b28:	add	w10, w8, w23
     b2c:	cmp	w10, w9
     b30:	b.cs	b40 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x94>  // b.hs, b.nlast
     b34:	sub	x0, x29, #0x20
     b38:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     b3c:	b	c88 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1dc>
     b40:	b.ne	d1c <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x270>  // b.any
     b44:	mov	x19, x22
     b48:	ldp	x24, x25, [x20, #32]
     b4c:	ldr	w9, [x20, #68]
     b50:	ldr	q0, [x19, #-32]!
     b54:	add	x0, sp, #0x68
     b58:	add	x1, sp, #0x50
     b5c:	add	w26, w9, w8
     b60:	str	q0, [sp, #80]
     b64:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     b68:	ldur	q0, [x20, #72]
     b6c:	add	x0, sp, #0x38
     b70:	add	x1, sp, #0x20
     b74:	str	q0, [sp, #32]
     b78:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     b7c:	ldrb	w8, [sp, #120]
     b80:	cbz	w8, ba0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0xf4>
     b84:	ldrb	w9, [sp, #72]
     b88:	cbz	w9, ba0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0xf4>
     b8c:	cmp	w8, #0x1
     b90:	b.ne	bb0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x104>  // b.any
     b94:	ldur	q0, [sp, #56]
     b98:	ldr	x8, [sp, #72]
     b9c:	b	bc0 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x114>
     ba0:	mov	w8, #0x100                 	// #256
     ba4:	stp	xzr, xzr, [sp, #128]
     ba8:	strh	w8, [sp, #144]
     bac:	b	c08 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x15c>
     bb0:	cmp	w9, #0x1
     bb4:	b.ne	bcc <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x120>  // b.any
     bb8:	ldur	q0, [sp, #104]
     bbc:	ldr	x8, [sp, #120]
     bc0:	str	q0, [sp, #128]
     bc4:	str	x8, [sp, #144]
     bc8:	b	c08 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x15c>
     bcc:	ldrb	w10, [sp, #121]
     bd0:	ldr	x11, [sp, #104]
     bd4:	ldrb	w12, [sp, #73]
     bd8:	ldr	x13, [sp, #56]
     bdc:	cmp	w10, #0x1
     be0:	mov	w10, #0x2                   	// #2
     be4:	csel	w2, w8, w10, eq  // eq = none
     be8:	add	x8, sp, #0x68
     bec:	csel	x1, x11, x8, eq  // eq = none
     bf0:	cmp	w12, #0x1
     bf4:	add	x8, sp, #0x38
     bf8:	csel	w4, w9, w10, eq  // eq = none
     bfc:	csel	x3, x13, x8, eq  // eq = none
     c00:	add	x0, sp, #0x80
     c04:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     c08:	sub	x8, x29, #0x88
     c0c:	add	x0, sp, #0x80
     c10:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
     c14:	ldp	x5, x6, [x29, #-136]
     c18:	sub	x0, x29, #0x68
     c1c:	mov	x1, x24
     c20:	mov	x2, x25
     c24:	mov	w3, w23
     c28:	mov	w4, w26
     c2c:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
     c30:	ldur	x0, [x29, #-136]
     c34:	ldr	x8, [sp, #24]
     c38:	cmp	x0, x8
     c3c:	b.eq	c44 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x198>  // b.none
     c40:	bl	0 <_ZdlPv>
     c44:	sub	x0, x22, #0x48
     c48:	sub	x1, x29, #0x68
     c4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     c50:	ldur	x8, [x29, #-72]
     c54:	mov	x0, x19
     c58:	mov	x1, x21
     c5c:	stur	x8, [x22, #-40]
     c60:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
     c64:	ldur	x0, [x29, #-64]
     c68:	ldr	x8, [sp, #16]
     c6c:	cmp	x0, x8
     c70:	b.eq	c78 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1cc>  // b.none
     c74:	bl	0 <_ZdlPv>
     c78:	ldur	x0, [x29, #-104]
     c7c:	cmp	x0, x28
     c80:	b.eq	c88 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1dc>  // b.none
     c84:	bl	0 <_ZdlPv>
     c88:	mov	x0, x20
     c8c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     c90:	cmp	x0, x27
     c94:	b.eq	ca4 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x1f8>  // b.none
     c98:	ldp	x8, x22, [x29, #-32]
     c9c:	mov	x20, x0
     ca0:	b	b14 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x68>
     ca4:	ldp	x1, x2, [x29, #-32]
     ca8:	ldr	x21, [sp, #8]
     cac:	b	cb8 <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv+0x20c>
     cb0:	mov	x2, xzr
     cb4:	mov	x1, xzr
     cb8:	sub	x0, x29, #0x68
     cbc:	sub	x19, x29, #0x68
     cc0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     cc4:	ldur	x1, [x29, #-80]
     cc8:	mov	x8, x21
     ccc:	add	x2, x19, #0x8
     cd0:	str	xzr, [x8, #8]!
     cd4:	mov	x0, x21
     cd8:	str	xzr, [x21]
     cdc:	stp	xzr, x8, [x21, #16]
     ce0:	stp	x8, xzr, [x21, #32]
     ce4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     ce8:	ldur	x1, [x29, #-88]
     cec:	sub	x0, x29, #0x68
     cf0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     cf4:	sub	x0, x29, #0x20
     cf8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     cfc:	ldp	x20, x19, [sp, #368]
     d00:	ldp	x22, x21, [sp, #352]
     d04:	ldp	x24, x23, [sp, #336]
     d08:	ldp	x26, x25, [sp, #320]
     d0c:	ldp	x28, x27, [sp, #304]
     d10:	ldp	x29, x30, [sp, #288]
     d14:	add	sp, sp, #0x180
     d18:	ret
     d1c:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     d20:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     d24:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
     d28:	add	x0, x0, #0x0
     d2c:	add	x1, x1, #0x0
     d30:	add	x3, x3, #0x0
     d34:	mov	w2, #0xcd                  	// #205
     d38:	bl	0 <__assert_fail>

0000000000000d3c <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE>:
     d3c:	sub	sp, sp, #0x1c0
     d40:	stp	x29, x30, [sp, #368]
     d44:	stp	x28, x25, [sp, #384]
     d48:	stp	x24, x23, [sp, #400]
     d4c:	stp	x22, x21, [sp, #416]
     d50:	stp	x20, x19, [sp, #432]
     d54:	add	x29, sp, #0x170
     d58:	mov	x19, x8
     d5c:	sub	x8, x29, #0x30
     d60:	mov	x21, x0
     d64:	add	x8, x8, #0x8
     d68:	sub	x0, x29, #0x30
     d6c:	mov	x20, x1
     d70:	stur	wzr, [x29, #-40]
     d74:	stp	xzr, x8, [x29, #-32]
     d78:	stp	x8, xzr, [x29, #-16]
     d7c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     d80:	sub	x8, x29, #0xa8
     d84:	mov	x0, x21
     d88:	mov	x1, x20
     d8c:	sub	x22, x29, #0xa8
     d90:	bl	6cc <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>
     d94:	sub	x8, x29, #0x60
     d98:	add	x8, x8, #0x8
     d9c:	sub	x0, x29, #0x60
     da0:	sub	x1, x29, #0xa8
     da4:	stur	wzr, [x29, #-88]
     da8:	stp	xzr, x8, [x29, #-80]
     dac:	stp	x8, xzr, [x29, #-64]
     db0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     db4:	ldur	x0, [x29, #-128]
     db8:	add	x8, x22, #0x38
     dbc:	cmp	x0, x8
     dc0:	b.eq	dc8 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x8c>  // b.none
     dc4:	bl	0 <_ZdlPv>
     dc8:	ldur	x0, [x29, #-168]
     dcc:	add	x8, x22, #0x10
     dd0:	cmp	x0, x8
     dd4:	b.eq	ddc <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xa0>  // b.none
     dd8:	bl	0 <_ZdlPv>
     ddc:	add	x8, sp, #0x98
     de0:	add	x8, x8, #0x8
     de4:	str	wzr, [sp, #160]
     de8:	stp	xzr, x8, [sp, #168]
     dec:	stp	x8, xzr, [sp, #184]
     df0:	ldr	x22, [x21, #24]
     df4:	add	x23, x21, #0x8
     df8:	cmp	x22, x23
     dfc:	b.eq	e5c <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x120>  // b.none
     e00:	sub	x8, x29, #0xa8
     e04:	add	x24, x8, #0x38
     e08:	add	x25, x8, #0x10
     e0c:	add	x1, x22, #0x20
     e10:	sub	x8, x29, #0xa8
     e14:	sub	x0, x29, #0x30
     e18:	bl	6cc <_ZNK5clang7tooling12Replacements27getReplacementInChangedCodeERKNS0_11ReplacementE>
     e1c:	add	x0, sp, #0x98
     e20:	sub	x1, x29, #0xa8
     e24:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     e28:	ldur	x0, [x29, #-128]
     e2c:	cmp	x0, x24
     e30:	b.eq	e38 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xfc>  // b.none
     e34:	bl	0 <_ZdlPv>
     e38:	ldur	x0, [x29, #-168]
     e3c:	cmp	x0, x25
     e40:	b.eq	e48 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x10c>  // b.none
     e44:	bl	0 <_ZdlPv>
     e48:	mov	x0, x22
     e4c:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
     e50:	mov	x22, x0
     e54:	cmp	x0, x23
     e58:	b.ne	e0c <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0xd0>  // b.any
     e5c:	sub	x8, x29, #0xa8
     e60:	sub	x1, x29, #0x60
     e64:	mov	x0, x21
     e68:	bl	fe8 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
     e6c:	add	x8, sp, #0x68
     e70:	sub	x0, x29, #0x30
     e74:	add	x1, sp, #0x98
     e78:	bl	fe8 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
     e7c:	add	x8, sp, #0x38
     e80:	sub	x0, x29, #0xa8
     e84:	add	x22, sp, #0x38
     e88:	bl	aac <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>
     e8c:	add	x8, sp, #0x8
     e90:	add	x0, sp, #0x68
     e94:	bl	aac <_ZNK5clang7tooling12Replacements24getCanonicalReplacementsEv>
     e98:	ldr	x8, [sp, #96]
     e9c:	ldr	x9, [sp, #48]
     ea0:	cmp	x8, x9
     ea4:	b.ne	ec0 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x184>  // b.any
     ea8:	ldr	x0, [sp, #80]
     eac:	ldr	x2, [sp, #32]
     eb0:	add	x1, x22, #0x8
     eb4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     eb8:	mov	w22, w0
     ebc:	b	ec4 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x188>
     ec0:	mov	w22, wzr
     ec4:	ldr	x1, [sp, #24]
     ec8:	add	x0, sp, #0x8
     ecc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     ed0:	ldr	x1, [sp, #72]
     ed4:	add	x0, sp, #0x38
     ed8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     edc:	tbz	w22, #0, f30 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x1f4>
     ee0:	ldrb	w8, [x19, #48]
     ee4:	ldur	x10, [x29, #-152]
     ee8:	and	w8, w8, #0xfc
     eec:	orr	w8, w8, #0x2
     ef0:	strb	w8, [x19, #48]
     ef4:	add	x8, x19, #0x8
     ef8:	cbz	x10, f78 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x23c>
     efc:	ldur	q0, [x29, #-144]
     f00:	ldur	w9, [x29, #-160]
     f04:	str	x10, [x19, #16]
     f08:	sub	x11, x29, #0xa8
     f0c:	stur	q0, [x19, #24]
     f10:	str	x8, [x10, #8]
     f14:	ldur	x13, [x29, #-128]
     f18:	add	x12, x11, #0x8
     f1c:	add	x10, x11, #0x28
     f20:	stp	xzr, x12, [x29, #-152]
     f24:	str	x13, [x19, #40]
     f28:	stur	x12, [x29, #-136]
     f2c:	b	f88 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x24c>
     f30:	mov	w8, #0x2                   	// #2
     f34:	str	w8, [sp, #8]
     f38:	ldr	x8, [x21, #24]
     f3c:	add	x0, sp, #0x8
     f40:	mov	x1, x20
     f44:	add	x2, x8, #0x20
     f48:	add	x8, sp, #0x38
     f4c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     f50:	ldr	x8, [sp, #56]
     f54:	mov	x1, sp
     f58:	mov	x0, x19
     f5c:	orr	x8, x8, #0x1
     f60:	str	x8, [sp]
     f64:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     f68:	ldr	x8, [sp]
     f6c:	cbz	x8, f90 <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE+0x254>
     f70:	mov	x0, sp
     f74:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
     f78:	mov	w9, wzr
     f7c:	add	x10, x19, #0x28
     f80:	stp	xzr, x8, [x19, #16]
     f84:	str	x8, [x19, #32]
     f88:	str	xzr, [x10]
     f8c:	str	w9, [x8]
     f90:	ldr	x1, [sp, #120]
     f94:	add	x0, sp, #0x68
     f98:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     f9c:	ldur	x1, [x29, #-152]
     fa0:	sub	x0, x29, #0xa8
     fa4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     fa8:	ldr	x1, [sp, #168]
     fac:	add	x0, sp, #0x98
     fb0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     fb4:	ldur	x1, [x29, #-80]
     fb8:	sub	x0, x29, #0x60
     fbc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     fc0:	ldur	x1, [x29, #-32]
     fc4:	sub	x0, x29, #0x30
     fc8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
     fcc:	ldp	x20, x19, [sp, #432]
     fd0:	ldp	x22, x21, [sp, #416]
     fd4:	ldp	x24, x23, [sp, #400]
     fd8:	ldp	x28, x25, [sp, #384]
     fdc:	ldp	x29, x30, [sp, #368]
     fe0:	add	sp, sp, #0x1c0
     fe4:	ret

0000000000000fe8 <_ZNK5clang7tooling12Replacements5mergeERKS1_>:
     fe8:	stp	x29, x30, [sp, #-96]!
     fec:	stp	x28, x27, [sp, #16]
     ff0:	stp	x26, x25, [sp, #32]
     ff4:	stp	x24, x23, [sp, #48]
     ff8:	stp	x22, x21, [sp, #64]
     ffc:	stp	x20, x19, [sp, #80]
    1000:	mov	x29, sp
    1004:	sub	sp, sp, #0x1c0
    1008:	ldr	x9, [x0, #40]
    100c:	cbz	x9, 166c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x684>
    1010:	ldr	x10, [x1, #40]
    1014:	cbz	x10, 166c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x684>
    1018:	str	x8, [sp, #16]
    101c:	add	x8, sp, #0xc8
    1020:	add	x8, x8, #0x8
    1024:	str	wzr, [sp, #208]
    1028:	stp	xzr, x8, [sp, #216]
    102c:	stp	x8, xzr, [sp, #232]
    1030:	ldr	x9, [x0, #24]
    1034:	str	x8, [sp, #8]
    1038:	ldr	x8, [x1, #24]
    103c:	add	x24, x0, #0x8
    1040:	add	x23, x1, #0x8
    1044:	cmp	x9, x24
    1048:	cset	w10, ne  // ne = any
    104c:	cmp	x8, x23
    1050:	stp	x8, x9, [sp, #184]
    1054:	b.ne	1060 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x78>  // b.any
    1058:	cmp	x9, x24
    105c:	b.eq	1620 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x638>  // b.none
    1060:	add	x11, sp, #0x70
    1064:	add	x12, sp, #0x28
    1068:	mov	w20, wzr
    106c:	sub	x26, x29, #0xb0
    1070:	mov	w28, #0x100                 	// #256
    1074:	add	x21, x11, #0x28
    1078:	add	x27, x11, #0x38
    107c:	add	x22, x12, #0x10
    1080:	add	x11, x12, #0x38
    1084:	str	x11, [sp, #24]
    1088:	cmp	x8, x23
    108c:	b.eq	10a8 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xc0>  // b.none
    1090:	tbz	w10, #0, 10b4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xcc>
    1094:	ldr	w10, [x8, #64]
    1098:	ldr	w11, [x9, #64]
    109c:	add	w10, w10, w20
    10a0:	cmp	w11, w10
    10a4:	b.cs	10b4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xcc>  // b.hs, b.nlast
    10a8:	mov	w19, #0x1                   	// #1
    10ac:	mov	x8, x9
    10b0:	b	10b8 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xd0>
    10b4:	mov	w19, wzr
    10b8:	strb	w19, [sp, #112]
    10bc:	str	w20, [sp, #116]
    10c0:	ldr	q0, [x8, #32]
    10c4:	cmp	w19, #0x0
    10c8:	csel	w10, wzr, w20, ne  // ne = any
    10cc:	str	q0, [sp, #128]
    10d0:	ldr	w9, [x8, #64]
    10d4:	add	w9, w9, w10
    10d8:	str	w9, [sp, #144]
    10dc:	ldr	w9, [x8, #68]
    10e0:	str	w9, [sp, #148]
    10e4:	ldp	x1, x8, [x8, #72]
    10e8:	str	x27, [sp, #152]
    10ec:	cbz	x1, 1108 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x120>
    10f0:	add	x2, x1, x8
    10f4:	mov	x0, x21
    10f8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    10fc:	ldr	w8, [sp, #160]
    1100:	ldr	w9, [sp, #148]
    1104:	b	1114 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x12c>
    1108:	mov	w8, wzr
    110c:	str	xzr, [sp, #160]
    1110:	strb	wzr, [sp, #168]
    1114:	sub	w8, w8, w9
    1118:	str	w20, [sp, #36]
    111c:	tbnz	w19, #0, 1130 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x148>
    1120:	ldr	w9, [sp, #116]
    1124:	add	w9, w9, w8
    1128:	mov	w8, wzr
    112c:	str	w9, [sp, #116]
    1130:	str	w8, [sp, #120]
    1134:	cmp	w19, #0x0
    1138:	add	x8, sp, #0xb8
    113c:	add	x9, sp, #0xc0
    1140:	csel	x20, x9, x8, ne  // ne = any
    1144:	ldr	x0, [x20]
    1148:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    114c:	ldrb	w8, [sp, #112]
    1150:	str	x0, [x20]
    1154:	cbz	w8, 1218 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x230>
    1158:	ldr	x19, [sp, #184]
    115c:	cmp	x19, x23
    1160:	b.eq	15a4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5bc>  // b.none
    1164:	ldr	x8, [sp, #160]
    1168:	ldr	w10, [x19, #64]
    116c:	ldr	w9, [sp, #144]
    1170:	ldr	w11, [sp, #116]
    1174:	add	x12, x8, x9
    1178:	add	w10, w11, w10
    117c:	cmp	x12, x10
    1180:	b.cc	15a4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5bc>  // b.lo, b.ul, b.last
    1184:	ldr	w11, [x19, #68]
    1188:	add	w12, w9, w8
    118c:	add	w11, w10, w11
    1190:	subs	w12, w11, w12
    1194:	b.ls	11a8 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x1c0>  // b.plast
    1198:	ldr	w13, [sp, #148]
    119c:	strb	wzr, [sp, #112]
    11a0:	add	w12, w12, w13
    11a4:	str	w12, [sp, #148]
    11a8:	ldr	x12, [sp, #152]
    11ac:	sub	w10, w10, w9
    11b0:	sub	w9, w11, w9
    11b4:	cmp	x8, x10
    11b8:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    11bc:	cmp	x8, x9
    11c0:	csel	x9, x8, x9, cc  // cc = lo, ul, last
    11c4:	stp	x12, x10, [x29, #-32]
    11c8:	add	x10, x12, x9
    11cc:	sub	x8, x8, x9
    11d0:	sub	x0, x29, #0x88
    11d4:	sub	x1, x29, #0x20
    11d8:	stp	x10, x8, [x29, #-48]
    11dc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    11e0:	ldur	q0, [x19, #72]
    11e4:	sub	x0, x29, #0xa0
    11e8:	sub	x1, x29, #0xb0
    11ec:	str	q0, [x26]
    11f0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    11f4:	ldurb	w8, [x29, #-120]
    11f8:	cbz	w8, 128c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2a4>
    11fc:	ldurb	w9, [x29, #-144]
    1200:	cbz	w9, 128c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2a4>
    1204:	cmp	w8, #0x1
    1208:	b.ne	12a4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2bc>  // b.any
    120c:	ldr	q0, [x26, #16]
    1210:	ldur	x8, [x29, #-144]
    1214:	b	12b4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2cc>
    1218:	ldr	x20, [sp, #192]
    121c:	cmp	x20, x24
    1220:	b.eq	15a4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5bc>  // b.none
    1224:	ldp	w8, w9, [sp, #144]
    1228:	ldr	w10, [x20, #64]
    122c:	add	w25, w9, w8
    1230:	subs	w8, w25, w10
    1234:	b.cc	15a4 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5bc>  // b.lo, b.ul, b.last
    1238:	ldp	x9, x19, [x20, #72]
    123c:	sub	x0, x29, #0x70
    1240:	mov	x1, x21
    1244:	cmp	x19, x8
    1248:	csel	x8, x19, x8, cc  // cc = lo, ul, last
    124c:	add	x9, x9, x8
    1250:	sub	x8, x19, x8
    1254:	stp	x9, x8, [x29, #-160]
    1258:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    125c:	sub	x0, x29, #0x88
    1260:	sub	x1, x29, #0xa0
    1264:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1268:	ldurb	w8, [x29, #-96]
    126c:	cbz	w8, 1298 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2b0>
    1270:	ldurb	w9, [x29, #-120]
    1274:	cbz	w9, 1298 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2b0>
    1278:	cmp	w8, #0x1
    127c:	b.ne	12c0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2d8>  // b.any
    1280:	ldur	q0, [x29, #-136]
    1284:	ldur	x8, [x29, #-120]
    1288:	b	12d0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2e8>
    128c:	stp	xzr, xzr, [x29, #-112]
    1290:	sturh	w28, [x29, #-96]
    1294:	b	1318 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x330>
    1298:	stp	xzr, xzr, [x29, #-80]
    129c:	sturh	w28, [x29, #-64]
    12a0:	b	14ac <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x4c4>
    12a4:	cmp	w9, #0x1
    12a8:	b.ne	12dc <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x2f4>  // b.any
    12ac:	ldur	q0, [x29, #-136]
    12b0:	ldur	x8, [x29, #-120]
    12b4:	str	q0, [x26, #64]
    12b8:	stur	x8, [x29, #-96]
    12bc:	b	1318 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x330>
    12c0:	cmp	w9, #0x1
    12c4:	b.ne	1470 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x488>  // b.any
    12c8:	ldr	q0, [x26, #64]
    12cc:	ldur	x8, [x29, #-96]
    12d0:	str	q0, [x26, #96]
    12d4:	stur	x8, [x29, #-64]
    12d8:	b	14ac <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x4c4>
    12dc:	ldurb	w10, [x29, #-119]
    12e0:	ldur	x11, [x29, #-136]
    12e4:	ldurb	w12, [x29, #-143]
    12e8:	ldur	x13, [x29, #-160]
    12ec:	cmp	w10, #0x1
    12f0:	mov	w10, #0x2                   	// #2
    12f4:	csel	w2, w8, w10, eq  // eq = none
    12f8:	sub	x8, x29, #0x88
    12fc:	csel	x1, x11, x8, eq  // eq = none
    1300:	cmp	w12, #0x1
    1304:	sub	x8, x29, #0xa0
    1308:	csel	w4, w9, w10, eq  // eq = none
    130c:	csel	x3, x13, x8, eq  // eq = none
    1310:	sub	x0, x29, #0x70
    1314:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1318:	sub	x0, x29, #0xc8
    131c:	sub	x1, x29, #0x30
    1320:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1324:	ldurb	w8, [x29, #-96]
    1328:	cbz	w8, 1348 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x360>
    132c:	ldurb	w9, [x29, #-184]
    1330:	cbz	w9, 1348 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x360>
    1334:	cmp	w8, #0x1
    1338:	b.ne	1354 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x36c>  // b.any
    133c:	ldur	q0, [x29, #-200]
    1340:	ldur	x8, [x29, #-184]
    1344:	b	1364 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x37c>
    1348:	stp	xzr, xzr, [x29, #-80]
    134c:	sturh	w28, [x29, #-64]
    1350:	b	13ac <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3c4>
    1354:	cmp	w9, #0x1
    1358:	b.ne	1370 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x388>  // b.any
    135c:	ldr	q0, [x26, #64]
    1360:	ldur	x8, [x29, #-96]
    1364:	str	q0, [x26, #96]
    1368:	stur	x8, [x29, #-64]
    136c:	b	13ac <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x3c4>
    1370:	ldurb	w10, [x29, #-95]
    1374:	ldur	x11, [x29, #-112]
    1378:	ldurb	w12, [x29, #-183]
    137c:	ldur	x13, [x29, #-200]
    1380:	cmp	w10, #0x1
    1384:	mov	w10, #0x2                   	// #2
    1388:	csel	w2, w8, w10, eq  // eq = none
    138c:	sub	x8, x29, #0x70
    1390:	csel	x1, x11, x8, eq  // eq = none
    1394:	cmp	w12, #0x1
    1398:	sub	x8, x29, #0xc8
    139c:	csel	w4, w9, w10, eq  // eq = none
    13a0:	csel	x3, x13, x8, eq  // eq = none
    13a4:	sub	x0, x29, #0x50
    13a8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    13ac:	add	x8, sp, #0x28
    13b0:	sub	x0, x29, #0x50
    13b4:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    13b8:	ldr	x9, [sp, #40]
    13bc:	cmp	x9, x22
    13c0:	b.eq	13f0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x408>  // b.none
    13c4:	ldr	x8, [sp, #152]
    13c8:	ldr	x10, [sp, #168]
    13cc:	ldur	q0, [sp, #48]
    13d0:	str	x9, [sp, #152]
    13d4:	cmp	x8, x27
    13d8:	csel	x8, xzr, x8, eq  // eq = none
    13dc:	str	q0, [sp, #160]
    13e0:	cbz	x8, 1410 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x428>
    13e4:	str	x8, [sp, #40]
    13e8:	str	x10, [sp, #56]
    13ec:	b	1438 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x450>
    13f0:	ldr	x2, [sp, #48]
    13f4:	cbz	x2, 1424 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x43c>
    13f8:	ldr	x0, [sp, #152]
    13fc:	cmp	x2, #0x1
    1400:	b.ne	141c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x434>  // b.any
    1404:	ldrb	w8, [sp, #56]
    1408:	strb	w8, [x0]
    140c:	b	1424 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x43c>
    1410:	mov	x8, x22
    1414:	str	x22, [sp, #40]
    1418:	b	1438 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x450>
    141c:	mov	x1, x22
    1420:	bl	0 <memcpy>
    1424:	ldr	x8, [sp, #48]
    1428:	ldr	x9, [sp, #152]
    142c:	str	x8, [sp, #160]
    1430:	strb	wzr, [x9, x8]
    1434:	ldr	x8, [sp, #40]
    1438:	str	xzr, [sp, #48]
    143c:	strb	wzr, [x8]
    1440:	ldr	x0, [sp, #40]
    1444:	cmp	x0, x22
    1448:	b.eq	1450 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x468>  // b.none
    144c:	bl	0 <_ZdlPv>
    1450:	ldr	w8, [x19, #80]
    1454:	ldr	w9, [x19, #68]
    1458:	ldr	w10, [sp, #116]
    145c:	add	x20, sp, #0xb8
    1460:	sub	w8, w8, w9
    1464:	add	w8, w8, w10
    1468:	str	w8, [sp, #116]
    146c:	b	1144 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x15c>
    1470:	ldurb	w10, [x29, #-95]
    1474:	ldur	x11, [x29, #-112]
    1478:	ldurb	w12, [x29, #-119]
    147c:	ldur	x13, [x29, #-136]
    1480:	cmp	w10, #0x1
    1484:	mov	w10, #0x2                   	// #2
    1488:	csel	w2, w8, w10, eq  // eq = none
    148c:	sub	x8, x29, #0x70
    1490:	csel	x1, x11, x8, eq  // eq = none
    1494:	cmp	w12, #0x1
    1498:	sub	x8, x29, #0x88
    149c:	csel	w4, w9, w10, eq  // eq = none
    14a0:	csel	x3, x13, x8, eq  // eq = none
    14a4:	sub	x0, x29, #0x50
    14a8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    14ac:	add	x8, sp, #0x28
    14b0:	sub	x0, x29, #0x50
    14b4:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    14b8:	ldr	x9, [sp, #40]
    14bc:	cmp	x9, x22
    14c0:	b.eq	14f0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x508>  // b.none
    14c4:	ldr	x8, [sp, #152]
    14c8:	ldr	x10, [sp, #168]
    14cc:	ldur	q0, [sp, #48]
    14d0:	str	x9, [sp, #152]
    14d4:	cmp	x8, x27
    14d8:	csel	x8, xzr, x8, eq  // eq = none
    14dc:	str	q0, [sp, #160]
    14e0:	cbz	x8, 1510 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x528>
    14e4:	str	x8, [sp, #40]
    14e8:	str	x10, [sp, #56]
    14ec:	b	1538 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x550>
    14f0:	ldr	x2, [sp, #48]
    14f4:	cbz	x2, 1524 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x53c>
    14f8:	ldr	x0, [sp, #152]
    14fc:	cmp	x2, #0x1
    1500:	b.ne	151c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x534>  // b.any
    1504:	ldrb	w8, [sp, #56]
    1508:	strb	w8, [x0]
    150c:	b	1524 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x53c>
    1510:	mov	x8, x22
    1514:	str	x22, [sp, #40]
    1518:	b	1538 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x550>
    151c:	mov	x1, x22
    1520:	bl	0 <memcpy>
    1524:	ldr	x8, [sp, #48]
    1528:	ldr	x9, [sp, #152]
    152c:	str	x8, [sp, #160]
    1530:	strb	wzr, [x9, x8]
    1534:	ldr	x8, [sp, #40]
    1538:	str	xzr, [sp, #48]
    153c:	strb	wzr, [x8]
    1540:	ldr	x0, [sp, #40]
    1544:	cmp	x0, x22
    1548:	b.eq	1550 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x568>  // b.none
    154c:	bl	0 <_ZdlPv>
    1550:	ldp	w9, w8, [x20, #64]
    1554:	add	x10, x19, x9
    1558:	cmp	x10, w25, uxtw
    155c:	b.ls	157c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x594>  // b.plast
    1560:	ldr	w10, [sp, #144]
    1564:	add	w9, w8, w9
    1568:	sub	w9, w9, w10
    156c:	str	w9, [sp, #148]
    1570:	mov	w9, #0x1                   	// #1
    1574:	strb	w9, [sp, #112]
    1578:	b	158c <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5a4>
    157c:	ldr	w9, [sp, #148]
    1580:	sub	w10, w8, w19
    1584:	add	w9, w10, w9
    1588:	str	w9, [sp, #148]
    158c:	ldr	w9, [sp, #120]
    1590:	sub	w8, w19, w8
    1594:	add	x20, sp, #0xc0
    1598:	add	w8, w8, w9
    159c:	str	w8, [sp, #120]
    15a0:	b	1144 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x15c>
    15a4:	ldp	x1, x2, [sp, #128]
    15a8:	ldp	w3, w4, [sp, #144]
    15ac:	ldp	x5, x6, [sp, #152]
    15b0:	ldr	w19, [sp, #120]
    15b4:	add	x0, sp, #0x28
    15b8:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    15bc:	add	x0, sp, #0xc8
    15c0:	add	x1, sp, #0x28
    15c4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    15c8:	ldr	x0, [sp, #80]
    15cc:	ldr	x8, [sp, #24]
    15d0:	cmp	x0, x8
    15d4:	b.eq	15dc <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x5f4>  // b.none
    15d8:	bl	0 <_ZdlPv>
    15dc:	ldr	x0, [sp, #40]
    15e0:	ldr	w20, [sp, #36]
    15e4:	cmp	x0, x22
    15e8:	b.eq	15f0 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x608>  // b.none
    15ec:	bl	0 <_ZdlPv>
    15f0:	ldr	x0, [sp, #152]
    15f4:	sub	w20, w20, w19
    15f8:	cmp	x0, x27
    15fc:	b.eq	1604 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0x61c>  // b.none
    1600:	bl	0 <_ZdlPv>
    1604:	ldp	x8, x9, [sp, #184]
    1608:	cmp	x9, x24
    160c:	cset	w10, ne  // ne = any
    1610:	cmp	x8, x23
    1614:	b.ne	1088 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xa0>  // b.any
    1618:	cmp	x9, x24
    161c:	b.ne	1088 <_ZNK5clang7tooling12Replacements5mergeERKS1_+0xa0>  // b.any
    1620:	ldp	x2, x0, [sp, #8]
    1624:	ldr	x1, [sp, #224]
    1628:	mov	x8, x0
    162c:	str	xzr, [x8, #8]!
    1630:	str	xzr, [x0]
    1634:	stp	xzr, x8, [x0, #16]
    1638:	stp	x8, xzr, [x0, #32]
    163c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1640:	ldr	x1, [sp, #216]
    1644:	add	x0, sp, #0xc8
    1648:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    164c:	add	sp, sp, #0x1c0
    1650:	ldp	x20, x19, [sp, #80]
    1654:	ldp	x22, x21, [sp, #64]
    1658:	ldp	x24, x23, [sp, #48]
    165c:	ldp	x26, x25, [sp, #32]
    1660:	ldp	x28, x27, [sp, #16]
    1664:	ldp	x29, x30, [sp], #96
    1668:	ret
    166c:	cmp	x9, #0x0
    1670:	csel	x1, x1, x0, eq  // eq = none
    1674:	mov	x0, x8
    1678:	add	sp, sp, #0x1c0
    167c:	ldp	x20, x19, [sp, #80]
    1680:	ldp	x22, x21, [sp, #64]
    1684:	ldp	x24, x23, [sp, #48]
    1688:	ldp	x26, x25, [sp, #32]
    168c:	ldp	x28, x27, [sp, #16]
    1690:	ldp	x29, x30, [sp], #96
    1694:	b	0 <_ZN5clang7tooling11ReplacementC1Ev>

0000000000001698 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE>:
    1698:	stp	x29, x30, [sp, #-96]!
    169c:	stp	x28, x27, [sp, #16]
    16a0:	stp	x26, x25, [sp, #32]
    16a4:	stp	x24, x23, [sp, #48]
    16a8:	stp	x22, x21, [sp, #64]
    16ac:	stp	x20, x19, [sp, #80]
    16b0:	mov	x29, sp
    16b4:	sub	sp, sp, #0x1c0
    16b8:	ldr	x9, [x0, #40]
    16bc:	mov	x21, x1
    16c0:	mov	x20, x0
    16c4:	mov	x19, x8
    16c8:	cbz	x9, 1718 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x80>
    16cc:	ldr	x22, [x20, #24]
    16d0:	ldp	x0, x2, [x21]
    16d4:	ldr	x1, [x22, #32]!
    16d8:	ldr	x8, [x22, #8]
    16dc:	cmp	x2, x8
    16e0:	b.ne	16f0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x58>  // b.any
    16e4:	cbz	x2, 1718 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x80>
    16e8:	bl	0 <bcmp>
    16ec:	cbz	w0, 1718 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x80>
    16f0:	mov	w8, #0x1                   	// #1
    16f4:	str	w8, [sp, #56]
    16f8:	sub	x8, x29, #0x48
    16fc:	add	x0, sp, #0x38
    1700:	mov	x1, x21
    1704:	mov	x2, x22
    1708:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    170c:	ldur	x8, [x29, #-72]
    1710:	orr	x8, x8, #0x1
    1714:	b	180c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x174>
    1718:	ldr	w8, [x21, #32]
    171c:	cmn	w8, #0x1
    1720:	b.eq	17fc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x164>  // b.none
    1724:	ldr	w9, [x21, #36]
    1728:	ldp	x1, x2, [x21]
    172c:	adrp	x5, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1730:	add	x5, x5, #0x0
    1734:	add	w3, w9, w8
    1738:	sub	x0, x29, #0x48
    173c:	mov	w4, wzr
    1740:	mov	x6, xzr
    1744:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    1748:	ldr	x24, [x20, #16]
    174c:	add	x23, x20, #0x8
    1750:	cbz	x24, 1814 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x17c>
    1754:	add	x25, sp, #0xb0
    1758:	mov	x22, x23
    175c:	add	x0, x24, #0x20
    1760:	sub	x1, x29, #0x48
    1764:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
    1768:	add	x8, x24, #0x18
    176c:	add	x9, x24, #0x10
    1770:	tst	w0, #0x1
    1774:	csel	x8, x8, x9, ne  // ne = any
    1778:	csel	x22, x22, x24, ne  // ne = any
    177c:	ldr	x24, [x8]
    1780:	cbnz	x24, 175c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0xc4>
    1784:	cmp	x22, x23
    1788:	b.eq	1818 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x180>  // b.none
    178c:	ldr	w8, [x21, #32]
    1790:	ldr	w9, [x22, #64]
    1794:	cmp	w8, w9
    1798:	b.ne	1818 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x180>  // b.any
    179c:	ldr	w8, [x21, #36]
    17a0:	cbnz	w8, 1cd8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x640>
    17a4:	add	x23, x22, #0x20
    17a8:	ldr	w8, [x23, #36]
    17ac:	cbnz	w8, 1898 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x200>
    17b0:	ldur	q0, [x21, #40]
    17b4:	sub	x0, x29, #0x78
    17b8:	sub	x1, x29, #0x90
    17bc:	str	q0, [x25, #128]
    17c0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    17c4:	ldur	q0, [x22, #72]
    17c8:	sub	x0, x29, #0xa8
    17cc:	sub	x1, x29, #0xc0
    17d0:	str	q0, [x25, #80]
    17d4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    17d8:	ldurb	w8, [x29, #-104]
    17dc:	cbz	w8, 19c0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x328>
    17e0:	ldurb	w9, [x29, #-152]
    17e4:	cbz	w9, 19c0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x328>
    17e8:	cmp	w8, #0x1
    17ec:	b.ne	19d0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x338>  // b.any
    17f0:	ldur	q0, [x29, #-168]
    17f4:	ldur	x8, [x29, #-152]
    17f8:	b	19e0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x348>
    17fc:	mov	x0, x20
    1800:	mov	x1, x21
    1804:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1808:	mov	w8, #0x1                   	// #1
    180c:	str	x8, [x19]
    1810:	b	18d8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x240>
    1814:	mov	x22, x23
    1818:	ldr	x25, [x20, #24]
    181c:	cmp	x22, x25
    1820:	b.eq	1898 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x200>  // b.none
    1824:	mov	x0, x22
    1828:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    182c:	ldp	w26, w9, [x21, #32]
    1830:	ldr	w8, [x0, #64]
    1834:	add	w27, w9, w26
    1838:	cmp	w27, w8
    183c:	b.ls	1898 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x200>  // b.plast
    1840:	ldr	w9, [x0, #68]
    1844:	mov	x24, x0
    1848:	add	w8, w9, w8
    184c:	cmp	w26, w8
    1850:	b.cs	1898 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x200>  // b.hs, b.nlast
    1854:	mov	x0, x24
    1858:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    185c:	mov	x22, x0
    1860:	cmp	x25, x24
    1864:	b.eq	18f8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x260>  // b.none
    1868:	mov	x0, x24
    186c:	mov	x23, x24
    1870:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    1874:	ldr	w8, [x0, #64]
    1878:	cmp	w27, w8
    187c:	b.ls	18fc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x264>  // b.plast
    1880:	ldr	w9, [x0, #68]
    1884:	mov	x24, x0
    1888:	add	w8, w9, w8
    188c:	cmp	w26, w8
    1890:	b.cc	1860 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x1c8>  // b.lo, b.ul, b.last
    1894:	b	18fc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x264>
    1898:	mov	x0, x20
    189c:	mov	x1, x21
    18a0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    18a4:	mov	w8, #0x1                   	// #1
    18a8:	str	x8, [x19]
    18ac:	ldur	x0, [x29, #-32]
    18b0:	sub	x19, x29, #0x48
    18b4:	add	x8, x19, #0x38
    18b8:	cmp	x0, x8
    18bc:	b.eq	18c4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x22c>  // b.none
    18c0:	bl	0 <_ZdlPv>
    18c4:	ldur	x0, [x29, #-72]
    18c8:	add	x8, x19, #0x10
    18cc:	cmp	x0, x8
    18d0:	b.eq	18d8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x240>  // b.none
    18d4:	bl	0 <_ZdlPv>
    18d8:	add	sp, sp, #0x1c0
    18dc:	ldp	x20, x19, [sp, #80]
    18e0:	ldp	x22, x21, [sp, #64]
    18e4:	ldp	x24, x23, [sp, #48]
    18e8:	ldp	x26, x25, [sp, #32]
    18ec:	ldp	x28, x27, [sp, #16]
    18f0:	ldp	x29, x30, [sp], #96
    18f4:	ret
    18f8:	mov	x23, x25
    18fc:	add	x8, sp, #0x8
    1900:	add	x8, x8, #0x8
    1904:	add	x0, sp, #0x8
    1908:	mov	x1, x23
    190c:	mov	x2, x22
    1910:	stp	xzr, xzr, [sp, #8]
    1914:	stp	xzr, x8, [sp, #24]
    1918:	stp	x8, xzr, [sp, #40]
    191c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1920:	add	x8, sp, #0x38
    1924:	add	x0, sp, #0x8
    1928:	mov	x1, x21
    192c:	bl	d3c <_ZNK5clang7tooling12Replacements23mergeIfOrderIndependentERKNS0_11ReplacementE>
    1930:	ldrb	w9, [sp, #104]
    1934:	ubfiz	w10, w9, #1, #1
    1938:	and	w8, w9, #0xfffffffd
    193c:	orr	w10, w10, w8
    1940:	strb	w10, [sp, #104]
    1944:	tbnz	w9, #0, 1994 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x2fc>
    1948:	mov	x0, x20
    194c:	mov	x1, x23
    1950:	mov	x2, x22
    1954:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1958:	add	x0, sp, #0x38
    195c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1960:	ldr	x21, [x0, #24]
    1964:	add	x0, sp, #0x38
    1968:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    196c:	add	x2, x0, #0x8
    1970:	mov	x0, x20
    1974:	mov	x1, x21
    1978:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    197c:	add	x0, sp, #0x38
    1980:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1984:	ldr	x1, [sp, #24]
    1988:	add	x0, sp, #0x8
    198c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1990:	b	18a4 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x20c>
    1994:	ldr	x9, [sp, #56]
    1998:	strb	w8, [sp, #104]
    199c:	add	x0, sp, #0x38
    19a0:	str	xzr, [sp, #56]
    19a4:	orr	x8, x9, #0x1
    19a8:	str	x8, [x19]
    19ac:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    19b0:	ldr	x1, [sp, #24]
    19b4:	add	x0, sp, #0x8
    19b8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    19bc:	b	18ac <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x214>
    19c0:	mov	w8, #0x100                 	// #256
    19c4:	stp	xzr, xzr, [x29, #-96]
    19c8:	sturh	w8, [x29, #-80]
    19cc:	b	1a28 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x390>
    19d0:	cmp	w9, #0x1
    19d4:	b.ne	19ec <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x354>  // b.any
    19d8:	ldur	q0, [x29, #-120]
    19dc:	ldur	x8, [x29, #-104]
    19e0:	str	q0, [x25, #176]
    19e4:	stur	x8, [x29, #-80]
    19e8:	b	1a28 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x390>
    19ec:	ldurb	w10, [x29, #-103]
    19f0:	ldur	x11, [x29, #-120]
    19f4:	ldurb	w14, [x29, #-151]
    19f8:	ldur	x15, [x29, #-168]
    19fc:	mov	w12, #0x2                   	// #2
    1a00:	sub	x13, x29, #0x78
    1a04:	cmp	w10, #0x1
    1a08:	sub	x16, x29, #0xa8
    1a0c:	csel	w2, w8, w12, eq  // eq = none
    1a10:	csel	x1, x11, x13, eq  // eq = none
    1a14:	cmp	w14, #0x1
    1a18:	csel	w4, w9, w12, eq  // eq = none
    1a1c:	csel	x3, x15, x16, eq  // eq = none
    1a20:	sub	x0, x29, #0x60
    1a24:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1a28:	add	x8, sp, #0x38
    1a2c:	sub	x0, x29, #0x60
    1a30:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1a34:	ldur	q0, [x22, #72]
    1a38:	add	x0, sp, #0xc0
    1a3c:	add	x1, sp, #0xb0
    1a40:	str	q0, [x25]
    1a44:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1a48:	ldur	q0, [x21, #40]
    1a4c:	add	x0, sp, #0x98
    1a50:	add	x1, sp, #0x80
    1a54:	str	q0, [sp, #128]
    1a58:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1a5c:	ldrb	w8, [sp, #208]
    1a60:	cbz	w8, 1a80 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3e8>
    1a64:	ldrb	w9, [sp, #168]
    1a68:	cbz	w9, 1a80 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3e8>
    1a6c:	cmp	w8, #0x1
    1a70:	b.ne	1a90 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x3f8>  // b.any
    1a74:	ldur	q0, [sp, #152]
    1a78:	ldr	x8, [sp, #168]
    1a7c:	b	1aa0 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x408>
    1a80:	mov	w8, #0x100                 	// #256
    1a84:	stp	xzr, xzr, [sp, #224]
    1a88:	strh	w8, [sp, #240]
    1a8c:	b	1ae8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x450>
    1a90:	cmp	w9, #0x1
    1a94:	b.ne	1aac <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x414>  // b.any
    1a98:	ldr	q0, [x25, #16]
    1a9c:	ldr	x8, [sp, #208]
    1aa0:	str	q0, [x25, #48]
    1aa4:	str	x8, [sp, #240]
    1aa8:	b	1ae8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x450>
    1aac:	ldrb	w10, [sp, #209]
    1ab0:	ldr	x11, [sp, #192]
    1ab4:	ldrb	w14, [sp, #169]
    1ab8:	ldr	x15, [sp, #152]
    1abc:	mov	w12, #0x2                   	// #2
    1ac0:	add	x13, sp, #0xc0
    1ac4:	cmp	w10, #0x1
    1ac8:	add	x16, sp, #0x98
    1acc:	csel	w2, w8, w12, eq  // eq = none
    1ad0:	csel	x1, x11, x13, eq  // eq = none
    1ad4:	cmp	w14, #0x1
    1ad8:	csel	w4, w9, w12, eq  // eq = none
    1adc:	csel	x3, x15, x16, eq  // eq = none
    1ae0:	add	x0, sp, #0xe0
    1ae4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ae8:	add	x8, sp, #0x8
    1aec:	add	x0, sp, #0xe0
    1af0:	add	x24, sp, #0x8
    1af4:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1af8:	ldr	x2, [sp, #64]
    1afc:	ldr	x8, [sp, #16]
    1b00:	cmp	x2, x8
    1b04:	b.ne	1b24 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x48c>  // b.any
    1b08:	cbz	x2, 1b2c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x494>
    1b0c:	ldr	x1, [sp, #8]
    1b10:	ldr	x0, [sp, #56]
    1b14:	bl	0 <bcmp>
    1b18:	cmp	w0, #0x0
    1b1c:	cset	w26, ne  // ne = any
    1b20:	b	1b30 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x498>
    1b24:	mov	w26, #0x1                   	// #1
    1b28:	b	1b30 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x498>
    1b2c:	mov	w26, wzr
    1b30:	ldr	x0, [sp, #8]
    1b34:	add	x8, x24, #0x10
    1b38:	cmp	x0, x8
    1b3c:	b.eq	1b44 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4ac>  // b.none
    1b40:	bl	0 <_ZdlPv>
    1b44:	ldr	x0, [sp, #56]
    1b48:	add	x8, sp, #0x38
    1b4c:	add	x8, x8, #0x10
    1b50:	cmp	x0, x8
    1b54:	b.eq	1b5c <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4c4>  // b.none
    1b58:	bl	0 <_ZdlPv>
    1b5c:	cbz	w26, 1b88 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x4f0>
    1b60:	mov	w8, #0x3                   	// #3
    1b64:	str	w8, [sp, #8]
    1b68:	add	x8, sp, #0x38
    1b6c:	add	x0, sp, #0x8
    1b70:	mov	x1, x21
    1b74:	mov	x2, x23
    1b78:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1b7c:	ldr	x8, [sp, #56]
    1b80:	orr	x8, x8, #0x1
    1b84:	b	18a8 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x210>
    1b88:	ldur	q0, [x21, #40]
    1b8c:	ldp	x23, x24, [x21]
    1b90:	ldr	w21, [x21, #32]
    1b94:	sub	x0, x29, #0x78
    1b98:	add	x1, sp, #0xe0
    1b9c:	str	q0, [x25, #48]
    1ba0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ba4:	ldur	q0, [x22, #72]
    1ba8:	sub	x0, x29, #0xa8
    1bac:	add	x1, sp, #0xc0
    1bb0:	str	q0, [x25, #16]
    1bb4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1bb8:	ldurb	w8, [x29, #-104]
    1bbc:	cbz	w8, 1bdc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x544>
    1bc0:	ldurb	w9, [x29, #-152]
    1bc4:	cbz	w9, 1bdc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x544>
    1bc8:	cmp	w8, #0x1
    1bcc:	b.ne	1bec <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x554>  // b.any
    1bd0:	ldur	q0, [x29, #-168]
    1bd4:	ldur	x8, [x29, #-152]
    1bd8:	b	1bfc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x564>
    1bdc:	mov	w8, #0x100                 	// #256
    1be0:	stp	xzr, xzr, [x29, #-96]
    1be4:	sturh	w8, [x29, #-80]
    1be8:	b	1c44 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x5ac>
    1bec:	cmp	w9, #0x1
    1bf0:	b.ne	1c08 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x570>  // b.any
    1bf4:	ldur	q0, [x29, #-120]
    1bf8:	ldur	x8, [x29, #-104]
    1bfc:	str	q0, [x25, #176]
    1c00:	stur	x8, [x29, #-80]
    1c04:	b	1c44 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x5ac>
    1c08:	ldurb	w10, [x29, #-103]
    1c0c:	ldur	x11, [x29, #-120]
    1c10:	ldurb	w14, [x29, #-151]
    1c14:	ldur	x15, [x29, #-168]
    1c18:	mov	w12, #0x2                   	// #2
    1c1c:	sub	x13, x29, #0x78
    1c20:	cmp	w10, #0x1
    1c24:	sub	x16, x29, #0xa8
    1c28:	csel	w2, w8, w12, eq  // eq = none
    1c2c:	csel	x1, x11, x13, eq  // eq = none
    1c30:	cmp	w14, #0x1
    1c34:	csel	w4, w9, w12, eq  // eq = none
    1c38:	csel	x3, x15, x16, eq  // eq = none
    1c3c:	sub	x0, x29, #0x60
    1c40:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1c44:	add	x8, sp, #0x8
    1c48:	sub	x0, x29, #0x60
    1c4c:	add	x26, sp, #0x8
    1c50:	bl	0 <_ZNK4llvm5Twine3strB5cxx11Ev>
    1c54:	ldp	x5, x6, [sp, #8]
    1c58:	add	x0, sp, #0x38
    1c5c:	mov	x1, x23
    1c60:	mov	x2, x24
    1c64:	mov	w3, w21
    1c68:	mov	w4, wzr
    1c6c:	add	x25, sp, #0x38
    1c70:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    1c74:	ldr	x0, [sp, #8]
    1c78:	add	x8, x26, #0x10
    1c7c:	cmp	x0, x8
    1c80:	b.eq	1c88 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x5f0>  // b.none
    1c84:	bl	0 <_ZdlPv>
    1c88:	mov	x0, x20
    1c8c:	mov	x1, x22
    1c90:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1c94:	add	x1, sp, #0x38
    1c98:	mov	x0, x20
    1c9c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ca0:	ldr	x0, [sp, #96]
    1ca4:	add	x9, x25, #0x38
    1ca8:	mov	w8, #0x1                   	// #1
    1cac:	str	x8, [x19]
    1cb0:	cmp	x0, x9
    1cb4:	b.eq	1cbc <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x624>  // b.none
    1cb8:	bl	0 <_ZdlPv>
    1cbc:	ldr	x0, [sp, #56]
    1cc0:	add	x8, sp, #0x38
    1cc4:	add	x8, x8, #0x10
    1cc8:	cmp	x0, x8
    1ccc:	b.eq	18ac <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x214>  // b.none
    1cd0:	bl	0 <_ZdlPv>
    1cd4:	b	18ac <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE+0x214>
    1cd8:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1cdc:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ce0:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ce4:	add	x0, x0, #0x0
    1ce8:	add	x1, x1, #0x0
    1cec:	add	x3, x3, #0x0
    1cf0:	mov	w2, #0x10e                 	// #270
    1cf4:	bl	0 <__assert_fail>

0000000000001cf8 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE>:
    1cf8:	sub	sp, sp, #0x190
    1cfc:	stp	x29, x30, [sp, #304]
    1d00:	stp	x28, x27, [sp, #320]
    1d04:	stp	x26, x25, [sp, #336]
    1d08:	stp	x24, x23, [sp, #352]
    1d0c:	stp	x22, x21, [sp, #368]
    1d10:	stp	x20, x19, [sp, #384]
    1d14:	add	x29, sp, #0x130
    1d18:	mov	x20, x0
    1d1c:	sub	x0, x29, #0x88
    1d20:	mov	x19, x8
    1d24:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1d28:	sub	x8, x29, #0x70
    1d2c:	sub	x0, x29, #0x88
    1d30:	bl	1f1c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>
    1d34:	ldur	x0, [x29, #-136]
    1d38:	cbz	x0, 1d40 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x48>
    1d3c:	bl	0 <_ZdlPv>
    1d40:	ldr	x8, [x20, #40]
    1d44:	cbz	x8, 1e6c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x174>
    1d48:	ldp	x25, x26, [x29, #-112]
    1d4c:	add	x8, sp, #0x78
    1d50:	add	x8, x8, #0x8
    1d54:	str	x19, [sp]
    1d58:	cmp	x25, x26
    1d5c:	str	wzr, [sp, #128]
    1d60:	stp	xzr, x8, [sp, #136]
    1d64:	stp	x8, xzr, [sp, #152]
    1d68:	b.eq	1e28 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x130>  // b.none
    1d6c:	add	x8, sp, #0x8
    1d70:	add	x9, sp, #0x28
    1d74:	add	x27, x8, #0x10
    1d78:	add	x28, x9, #0x38
    1d7c:	add	x19, x9, #0x10
    1d80:	ldr	x8, [x20, #24]
    1d84:	ldp	w23, w24, [x25]
    1d88:	add	x0, sp, #0x8
    1d8c:	mov	w2, #0x20                  	// #32
    1d90:	ldp	x21, x22, [x8, #32]
    1d94:	mov	x1, x24
    1d98:	str	x27, [sp, #8]
    1d9c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc>
    1da0:	ldp	x5, x6, [sp, #8]
    1da4:	add	x0, sp, #0x28
    1da8:	mov	x1, x21
    1dac:	mov	x2, x22
    1db0:	mov	w3, w23
    1db4:	mov	w4, w24
    1db8:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    1dbc:	add	x8, sp, #0x70
    1dc0:	add	x0, sp, #0x78
    1dc4:	add	x1, sp, #0x28
    1dc8:	bl	1698 <_ZN5clang7tooling12Replacements3addERKNS0_11ReplacementE>
    1dcc:	ldr	x8, [sp, #112]
    1dd0:	tst	x8, #0xfffffffffffffffe
    1dd4:	and	x9, x8, #0xfffffffffffffffe
    1dd8:	cset	w8, ne  // ne = any
    1ddc:	orr	x8, x9, x8
    1de0:	str	x8, [sp, #112]
    1de4:	cbnz	x9, 1ea4 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x1ac>
    1de8:	cbnz	x8, 1f14 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x21c>
    1dec:	ldr	x0, [sp, #80]
    1df0:	cmp	x0, x28
    1df4:	b.eq	1dfc <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x104>  // b.none
    1df8:	bl	0 <_ZdlPv>
    1dfc:	ldr	x0, [sp, #40]
    1e00:	cmp	x0, x19
    1e04:	b.eq	1e0c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x114>  // b.none
    1e08:	bl	0 <_ZdlPv>
    1e0c:	ldr	x0, [sp, #8]
    1e10:	cmp	x0, x27
    1e14:	b.eq	1e1c <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x124>  // b.none
    1e18:	bl	0 <_ZdlPv>
    1e1c:	add	x25, x25, #0x8
    1e20:	cmp	x25, x26
    1e24:	b.ne	1d80 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x88>  // b.any
    1e28:	add	x8, sp, #0x28
    1e2c:	add	x0, sp, #0x78
    1e30:	mov	x1, x20
    1e34:	bl	fe8 <_ZNK5clang7tooling12Replacements5mergeERKS1_>
    1e38:	ldr	x8, [sp]
    1e3c:	add	x0, sp, #0x28
    1e40:	bl	207c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv>
    1e44:	ldr	x1, [sp, #56]
    1e48:	add	x0, sp, #0x28
    1e4c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1e50:	ldr	x1, [sp, #136]
    1e54:	add	x0, sp, #0x78
    1e58:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1e5c:	ldur	x0, [x29, #-112]
    1e60:	cbz	x0, 1e84 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x18c>
    1e64:	bl	0 <_ZdlPv>
    1e68:	b	1e84 <_ZN5clang7tooling32calculateRangesAfterReplacementsERKNS0_12ReplacementsERKSt6vectorINS0_5RangeESaIS5_EE+0x18c>
    1e6c:	ldur	q0, [x29, #-112]
    1e70:	ldur	x8, [x29, #-96]
    1e74:	stp	xzr, xzr, [x29, #-112]
    1e78:	stur	xzr, [x29, #-96]
    1e7c:	str	q0, [x19]
    1e80:	str	x8, [x19, #16]
    1e84:	ldp	x20, x19, [sp, #384]
    1e88:	ldp	x22, x21, [sp, #368]
    1e8c:	ldp	x24, x23, [sp, #352]
    1e90:	ldp	x26, x25, [sp, #336]
    1e94:	ldp	x28, x27, [sp, #320]
    1e98:	ldp	x29, x30, [sp, #304]
    1e9c:	add	sp, sp, #0x190
    1ea0:	ret
    1ea4:	sturb	wzr, [x29, #-24]
    1ea8:	stp	xzr, xzr, [x29, #-72]
    1eac:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    1eb0:	ldr	x10, [x10]
    1eb4:	sub	x8, x29, #0x28
    1eb8:	mov	w9, #0x1                   	// #1
    1ebc:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ec0:	add	x11, x8, #0x10
    1ec4:	stur	w9, [x29, #-56]
    1ec8:	add	x9, x10, #0x10
    1ecc:	add	x1, x1, #0x0
    1ed0:	sub	x0, x29, #0x58
    1ed4:	stp	x11, xzr, [x29, #-40]
    1ed8:	stp	x9, xzr, [x29, #-88]
    1edc:	stur	x8, [x29, #-48]
    1ee0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ee4:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ee8:	add	x1, x1, #0x0
    1eec:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ef0:	add	x1, sp, #0x70
    1ef4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1ef8:	sub	x0, x29, #0x58
    1efc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f00:	ldr	x0, [x0]
    1f04:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    1f08:	add	x1, x1, #0x0
    1f0c:	mov	w2, #0x2c9                 	// #713
    1f10:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    1f14:	add	x0, sp, #0x70
    1f18:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

0000000000001f1c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>:
    1f1c:	stp	x29, x30, [sp, #-64]!
    1f20:	str	x23, [sp, #16]
    1f24:	stp	x22, x21, [sp, #32]
    1f28:	stp	x20, x19, [sp, #48]
    1f2c:	mov	x29, sp
    1f30:	ldp	x20, x22, [x0]
    1f34:	mov	x21, x0
    1f38:	mov	x19, x8
    1f3c:	cmp	x20, x22
    1f40:	b.eq	1fc0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xa4>  // b.none
    1f44:	sub	x23, x22, x20
    1f48:	asr	x8, x23, #3
    1f4c:	clz	x8, x8
    1f50:	mov	w9, #0x7e                  	// #126
    1f54:	sub	x2, x9, x8, lsl #1
    1f58:	mov	x0, x20
    1f5c:	mov	x1, x22
    1f60:	mov	x3, xzr
    1f64:	bl	282c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>
    1f68:	cmp	x23, #0x81
    1f6c:	b.lt	1fb0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x94>  // b.tstop
    1f70:	add	x23, x20, #0x80
    1f74:	mov	x0, x20
    1f78:	mov	x1, x23
    1f7c:	mov	x2, xzr
    1f80:	bl	2bb4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_>
    1f84:	cmp	x23, x22
    1f88:	b.eq	1fc0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xa4>  // b.none
    1f8c:	sub	x22, x22, #0x80
    1f90:	mov	x0, x23
    1f94:	mov	x1, xzr
    1f98:	bl	2c64 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_>
    1f9c:	add	x23, x20, #0x88
    1fa0:	add	x20, x20, #0x8
    1fa4:	cmp	x22, x20
    1fa8:	b.ne	1f90 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x74>  // b.any
    1fac:	b	1fc0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xa4>
    1fb0:	mov	x0, x20
    1fb4:	mov	x1, x22
    1fb8:	mov	x2, xzr
    1fbc:	bl	2bb4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_>
    1fc0:	stp	xzr, xzr, [x19]
    1fc4:	str	xzr, [x19, #16]
    1fc8:	ldp	x20, x9, [x21]
    1fcc:	cmp	x20, x9
    1fd0:	b.eq	2068 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x14c>  // b.none
    1fd4:	mov	x8, xzr
    1fd8:	mov	x1, xzr
    1fdc:	sub	x21, x9, #0x8
    1fe0:	cmp	x8, x1
    1fe4:	b.eq	1ffc <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xe0>  // b.none
    1fe8:	ldp	w9, w10, [x1, #-8]
    1fec:	ldr	w11, [x20]
    1ff0:	add	w10, w10, w9
    1ff4:	cmp	w10, w11
    1ff8:	b.cs	2020 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x104>  // b.hs, b.nlast
    1ffc:	ldr	x8, [x19, #16]
    2000:	cmp	x1, x8
    2004:	b.eq	2048 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x12c>  // b.none
    2008:	ldr	x8, [x20]
    200c:	str	x8, [x1]
    2010:	ldr	x8, [x19, #8]
    2014:	add	x8, x8, #0x8
    2018:	str	x8, [x19, #8]
    201c:	b	2054 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x138>
    2020:	ldr	w12, [x20, #4]
    2024:	sub	x13, x1, x8
    2028:	add	x8, x13, x8
    202c:	add	w11, w12, w11
    2030:	cmp	w10, w11
    2034:	csel	w10, w11, w10, cc  // cc = lo, ul, last
    2038:	sub	w10, w10, w9
    203c:	bfi	x9, x10, #32, #32
    2040:	stur	x9, [x8, #-8]
    2044:	b	2054 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x138>
    2048:	mov	x0, x19
    204c:	mov	x2, x20
    2050:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2054:	cmp	x21, x20
    2058:	b.eq	2068 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0x14c>  // b.none
    205c:	ldp	x8, x1, [x19]
    2060:	add	x20, x20, #0x8
    2064:	b	1fe0 <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE+0xc4>
    2068:	ldp	x20, x19, [sp, #48]
    206c:	ldp	x22, x21, [sp, #32]
    2070:	ldr	x23, [sp, #16]
    2074:	ldp	x29, x30, [sp], #64
    2078:	ret

000000000000207c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv>:
    207c:	sub	sp, sp, #0x80
    2080:	stp	x29, x30, [sp, #64]
    2084:	stp	x24, x23, [sp, #80]
    2088:	stp	x22, x21, [sp, #96]
    208c:	stp	x20, x19, [sp, #112]
    2090:	add	x29, sp, #0x40
    2094:	stp	xzr, xzr, [x29, #-24]
    2098:	stur	xzr, [x29, #-8]
    209c:	ldr	x20, [x0, #24]
    20a0:	add	x21, x0, #0x8
    20a4:	mov	x19, x8
    20a8:	cmp	x20, x21
    20ac:	b.eq	211c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xa0>  // b.none
    20b0:	mov	x1, xzr
    20b4:	mov	x8, xzr
    20b8:	mov	w22, wzr
    20bc:	ldp	w9, w24, [x20, #64]
    20c0:	ldr	w23, [x20, #80]
    20c4:	cmp	x8, x1
    20c8:	add	w9, w9, w22
    20cc:	stp	w9, w23, [sp, #32]
    20d0:	b.eq	20ec <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x70>  // b.none
    20d4:	ldr	x9, [sp, #32]
    20d8:	str	x9, [x8]
    20dc:	ldur	x8, [x29, #-16]
    20e0:	add	x8, x8, #0x8
    20e4:	stur	x8, [x29, #-16]
    20e8:	b	20f8 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x7c>
    20ec:	sub	x0, x29, #0x18
    20f0:	add	x2, sp, #0x20
    20f4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    20f8:	mov	x0, x20
    20fc:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    2100:	cmp	x0, x21
    2104:	b.eq	211c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xa0>  // b.none
    2108:	ldp	x8, x1, [x29, #-16]
    210c:	sub	w9, w22, w24
    2110:	mov	x20, x0
    2114:	add	w22, w9, w23
    2118:	b	20bc <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0x40>
    211c:	add	x0, sp, #0x8
    2120:	sub	x1, x29, #0x18
    2124:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2128:	add	x0, sp, #0x8
    212c:	mov	x8, x19
    2130:	bl	1f1c <_ZL20combineAndSortRangesSt6vectorIN5clang7tooling5RangeESaIS2_EE>
    2134:	ldr	x0, [sp, #8]
    2138:	cbz	x0, 2140 <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xc4>
    213c:	bl	0 <_ZdlPv>
    2140:	ldur	x0, [x29, #-24]
    2144:	cbz	x0, 214c <_ZNK5clang7tooling12Replacements17getAffectedRangesEv+0xd0>
    2148:	bl	0 <_ZdlPv>
    214c:	ldp	x20, x19, [sp, #112]
    2150:	ldp	x22, x21, [sp, #96]
    2154:	ldp	x24, x23, [sp, #80]
    2158:	ldp	x29, x30, [sp, #64]
    215c:	add	sp, sp, #0x80
    2160:	ret

0000000000002164 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE>:
    2164:	stp	x29, x30, [sp, #-64]!
    2168:	str	x23, [sp, #16]
    216c:	stp	x22, x21, [sp, #32]
    2170:	stp	x20, x19, [sp, #48]
    2174:	mov	x29, sp
    2178:	ldr	x22, [x0, #24]
    217c:	add	x20, x0, #0x8
    2180:	cmp	x22, x20
    2184:	b.eq	21e8 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x84>  // b.none
    2188:	adrp	x21, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    218c:	mov	x19, x1
    2190:	mov	w23, #0x1                   	// #1
    2194:	add	x21, x21, #0x0
    2198:	mov	x0, x20
    219c:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    21a0:	add	x0, x0, #0x20
    21a4:	mov	x1, x21
    21a8:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    21ac:	cbz	w0, 21cc <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x68>
    21b0:	mov	x0, x20
    21b4:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    21b8:	add	x0, x0, #0x20
    21bc:	mov	x1, x19
    21c0:	bl	36c <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>
    21c4:	and	w23, w23, w0
    21c8:	b	21d0 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x6c>
    21cc:	mov	w23, wzr
    21d0:	mov	x0, x20
    21d4:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    21d8:	mov	x20, x0
    21dc:	cmp	x0, x22
    21e0:	b.ne	2198 <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x34>  // b.any
    21e4:	b	21ec <_ZN5clang7tooling20applyAllReplacementsERKNS0_12ReplacementsERNS_8RewriterE+0x88>
    21e8:	mov	w23, #0x1                   	// #1
    21ec:	and	w0, w23, #0x1
    21f0:	ldp	x20, x19, [sp, #48]
    21f4:	ldp	x22, x21, [sp, #32]
    21f8:	ldr	x23, [sp, #16]
    21fc:	ldp	x29, x30, [sp], #64
    2200:	ret

0000000000002204 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE>:
    2204:	stp	x29, x30, [sp, #-96]!
    2208:	stp	x28, x27, [sp, #16]
    220c:	stp	x26, x25, [sp, #32]
    2210:	stp	x24, x23, [sp, #48]
    2214:	stp	x22, x21, [sp, #64]
    2218:	stp	x20, x19, [sp, #80]
    221c:	mov	x29, sp
    2220:	sub	sp, sp, #0xd20
    2224:	ldr	x9, [x2, #40]
    2228:	mov	x23, x1
    222c:	mov	x22, x0
    2230:	mov	x19, x8
    2234:	cbz	x9, 25d0 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3cc>
    2238:	mov	w0, #0x40                  	// #64
    223c:	mov	x21, x2
    2240:	bl	0 <_Znwm>
    2244:	mov	w1, #0x1                   	// #1
    2248:	mov	x24, x0
    224c:	bl	0 <_ZN4llvm3vfs18InMemoryFileSystemC1Eb>
    2250:	add	x20, x24, #0x8
    2254:	ldxr	w8, [x20]
    2258:	add	w8, w8, #0x1
    225c:	stxr	w9, w8, [x20]
    2260:	cbnz	w9, 2254 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x50>
    2264:	add	x8, sp, #0x4e0
    2268:	movi	v0.2d, #0x0
    226c:	add	x25, x8, #0x10
    2270:	str	q0, [sp, #1248]
    2274:	str	q0, [sp, #1264]
    2278:	strb	wzr, [sp, #1264]
    227c:	str	x25, [sp, #1248]
    2280:	str	xzr, [sp, #1256]
    2284:	str	x24, [sp, #2688]
    2288:	ldxr	w8, [x20]
    228c:	add	w8, w8, #0x1
    2290:	stxr	w9, w8, [x20]
    2294:	cbnz	w9, 2288 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x84>
    2298:	add	x0, sp, #0xa88
    229c:	add	x1, sp, #0x4e0
    22a0:	add	x2, sp, #0xa80
    22a4:	bl	0 <_ZN5clang11FileManagerC1ERKNS_17FileSystemOptionsEN4llvm18IntrusiveRefCntPtrINS4_3vfs10FileSystemEEE>
    22a8:	ldr	x8, [sp, #2688]
    22ac:	cbz	x8, 22b8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xb4>
    22b0:	add	x0, x8, #0x8
    22b4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    22b8:	ldr	x0, [sp, #1248]
    22bc:	cmp	x0, x25
    22c0:	b.eq	22c8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0xc4>  // b.none
    22c4:	bl	0 <_ZdlPv>
    22c8:	mov	w0, #0x10                  	// #16
    22cc:	bl	0 <_Znwm>
    22d0:	mov	x25, x0
    22d4:	bl	0 <_ZN5clang13DiagnosticIDsC1Ev>
    22d8:	ldr	w8, [x25]
    22dc:	mov	w0, #0xb8                  	// #184
    22e0:	str	x25, [sp, #1240]
    22e4:	add	w8, w8, #0x1
    22e8:	str	w8, [x25]
    22ec:	bl	0 <_Znwm>
    22f0:	mov	x8, x0
    22f4:	mov	x9, x0
    22f8:	movi	v0.2d, #0x0
    22fc:	adrp	x12, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2300:	strb	wzr, [x8, #64]!
    2304:	stp	x8, xzr, [x0, #48]
    2308:	strb	wzr, [x9, #96]!
    230c:	stp	q0, q0, [x0, #112]
    2310:	stp	q0, q0, [x0, #144]
    2314:	ldr	d0, [x12]
    2318:	mov	x11, #0x32                  	// #50
    231c:	mov	w10, #0x8                   	// #8
    2320:	movk	x11, #0x1, lsl #32
    2324:	mov	x8, #0xa                   	// #10
    2328:	movk	x8, #0xa, lsl #32
    232c:	stp	x11, x10, [x0, #24]
    2330:	mov	x10, #0x600000000           	// #25769803776
    2334:	stp	x10, x8, [x0, #8]
    2338:	str	xzr, [x0, #176]
    233c:	stp	x9, xzr, [x0, #80]
    2340:	strb	wzr, [x0, #40]
    2344:	str	x0, [sp, #1232]
    2348:	str	d0, [x0]
    234c:	add	x0, sp, #0x4e0
    2350:	add	x1, sp, #0x4d8
    2354:	add	x2, sp, #0x4d0
    2358:	mov	w4, #0x1                   	// #1
    235c:	mov	x3, xzr
    2360:	bl	0 <_ZN5clang17DiagnosticsEngineC1EN4llvm18IntrusiveRefCntPtrINS_13DiagnosticIDsEEENS2_INS_17DiagnosticOptionsEEEPNS_18DiagnosticConsumerEb>
    2364:	ldr	x0, [sp, #1232]
    2368:	cbz	x0, 2370 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x16c>
    236c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2370:	ldr	x0, [sp, #1240]
    2374:	cbz	x0, 237c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x178>
    2378:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    237c:	add	x0, sp, #0x290
    2380:	add	x1, sp, #0x4e0
    2384:	add	x2, sp, #0xa88
    2388:	mov	w3, wzr
    238c:	add	x25, sp, #0x290
    2390:	bl	0 <_ZN5clang13SourceManagerC1ERNS_17DiagnosticsEngineERNS_11FileManagerEb>
    2394:	add	x0, sp, #0x30
    2398:	add	x26, sp, #0x30
    239c:	bl	0 <_ZN5clang11LangOptionsC1Ev>
    23a0:	add	x8, sp, #0x250
    23a4:	add	x8, x8, #0x18
    23a8:	add	x0, sp, #0x30
    23ac:	str	x25, [sp, #592]
    23b0:	str	x26, [sp, #600]
    23b4:	str	wzr, [sp, #616]
    23b8:	str	xzr, [sp, #624]
    23bc:	str	x8, [sp, #632]
    23c0:	str	x8, [sp, #640]
    23c4:	str	xzr, [sp, #648]
    23c8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    23cc:	adrp	x25, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    23d0:	add	x25, x25, #0x0
    23d4:	add	x0, sp, #0x30
    23d8:	mov	x1, x25
    23dc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    23e0:	add	x8, sp, #0x28
    23e4:	mov	w3, #0x7                   	// #7
    23e8:	mov	w4, #0x1                   	// #1
    23ec:	mov	x0, x22
    23f0:	mov	x1, x23
    23f4:	mov	x2, x25
    23f8:	bl	0 <_ZN4llvm12MemoryBuffer12getMemBufferENS_9StringRefES1_b>
    23fc:	add	x1, sp, #0x30
    2400:	add	x3, sp, #0x28
    2404:	mov	x0, x24
    2408:	mov	x2, xzr
    240c:	mov	x4, xzr
    2410:	mov	x5, xzr
    2414:	mov	x6, xzr
    2418:	mov	x7, xzr
    241c:	bl	0 <_ZN4llvm3vfs18InMemoryFileSystem7addFileERKNS_5TwineElSt10unique_ptrINS_12MemoryBufferESt14default_deleteIS6_EENS_8OptionalIjEESB_NSA_INS_3sys2fs9file_typeEEENSA_INSD_5permsEEE>
    2420:	ldr	x0, [sp, #40]
    2424:	cbz	x0, 2434 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x230>
    2428:	ldr	x8, [x0]
    242c:	ldr	x8, [x8, #8]
    2430:	blr	x8
    2434:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2438:	add	x1, x1, #0x0
    243c:	add	x8, sp, #0x30
    2440:	add	x0, sp, #0xa88
    2444:	mov	w2, #0x7                   	// #7
    2448:	mov	w4, #0x1                   	// #1
    244c:	mov	w3, wzr
    2450:	str	xzr, [sp, #40]
    2454:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
    2458:	ldrb	w8, [sp, #64]
    245c:	tbnz	w8, #0, 26d0 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x4cc>
    2460:	ldr	x1, [sp, #48]
    2464:	add	x0, sp, #0x290
    2468:	mov	x2, xzr
    246c:	mov	w3, wzr
    2470:	mov	w4, wzr
    2474:	mov	w5, wzr
    2478:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    247c:	ldr	x24, [x21, #24]
    2480:	add	x22, x21, #0x8
    2484:	mov	x21, x0
    2488:	cmp	x24, x22
    248c:	b.eq	2540 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x33c>  // b.none
    2490:	add	x8, sp, #0x30
    2494:	adrp	x23, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2498:	add	x25, x8, #0x38
    249c:	add	x26, x8, #0x10
    24a0:	add	x23, x23, #0x0
    24a4:	mov	x0, x22
    24a8:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    24ac:	ldp	w3, w4, [x0, #64]
    24b0:	ldp	x5, x6, [x0, #72]
    24b4:	add	x0, sp, #0x30
    24b8:	mov	w2, #0x7                   	// #7
    24bc:	mov	x1, x23
    24c0:	bl	40 <_ZN5clang7tooling11ReplacementC1EN4llvm9StringRefEjjS3_>
    24c4:	add	x0, sp, #0x30
    24c8:	add	x1, sp, #0x250
    24cc:	bl	36c <_ZNK5clang7tooling11Replacement5applyERNS_8RewriterE>
    24d0:	tbz	w0, #0, 24dc <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x2d8>
    24d4:	mov	w27, wzr
    24d8:	b	2508 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x304>
    24dc:	add	x8, sp, #0x20
    24e0:	mov	x0, sp
    24e4:	add	x1, sp, #0x30
    24e8:	str	wzr, [sp]
    24ec:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    24f0:	add	x1, sp, #0x20
    24f4:	mov	x0, x19
    24f8:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    24fc:	ldr	x8, [sp, #32]
    2500:	cbnz	x8, 26c8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x4c4>
    2504:	mov	w27, #0x1                   	// #1
    2508:	ldr	x0, [sp, #88]
    250c:	cmp	x0, x25
    2510:	b.eq	2518 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x314>  // b.none
    2514:	bl	0 <_ZdlPv>
    2518:	ldr	x0, [sp, #48]
    251c:	cmp	x0, x26
    2520:	b.eq	2528 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x324>  // b.none
    2524:	bl	0 <_ZdlPv>
    2528:	cbnz	w27, 2628 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x424>
    252c:	mov	x0, x22
    2530:	bl	0 <_ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base>
    2534:	mov	x22, x0
    2538:	cmp	x0, x24
    253c:	b.ne	24a4 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x2a0>  // b.any
    2540:	strb	wzr, [sp, #16]
    2544:	stp	xzr, xzr, [sp, #64]
    2548:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
    254c:	ldr	x10, [x10]
    2550:	mov	x8, sp
    2554:	mov	w9, #0x1                   	// #1
    2558:	add	x22, x8, #0x10
    255c:	str	w9, [sp, #80]
    2560:	add	x9, x10, #0x10
    2564:	and	x1, x21, #0xffffffff
    2568:	add	x0, sp, #0x250
    256c:	str	x8, [sp, #88]
    2570:	stp	x22, xzr, [sp]
    2574:	stp	x9, xzr, [sp, #48]
    2578:	bl	0 <_ZN5clang8Rewriter13getEditBufferENS_6FileIDE>
    257c:	add	x1, sp, #0x30
    2580:	bl	0 <_ZNK5clang13RewriteBuffer5writeERN4llvm11raw_ostreamE>
    2584:	ldr	x8, [sp, #72]
    2588:	ldr	x9, [sp, #56]
    258c:	cmp	x8, x9
    2590:	b.eq	259c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x398>  // b.none
    2594:	add	x0, sp, #0x30
    2598:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    259c:	ldrb	w10, [x19, #32]
    25a0:	ldr	x8, [sp]
    25a4:	add	x9, x19, #0x10
    25a8:	str	x9, [x19]
    25ac:	and	w10, w10, #0xfc
    25b0:	cmp	x8, x22
    25b4:	orr	w10, w10, #0x2
    25b8:	strb	w10, [x19, #32]
    25bc:	b.eq	25f8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3f4>  // b.none
    25c0:	ldr	x9, [sp, #16]
    25c4:	str	x8, [x19]
    25c8:	str	x9, [x19, #16]
    25cc:	b	2600 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x3fc>
    25d0:	add	x8, sp, #0x4e0
    25d4:	add	x20, x8, #0x10
    25d8:	str	x20, [sp, #1248]
    25dc:	cbz	x22, 265c <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x458>
    25e0:	add	x2, x22, x23
    25e4:	add	x0, sp, #0x4e0
    25e8:	mov	x1, x22
    25ec:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    25f0:	ldr	x8, [sp, #1248]
    25f4:	b	2668 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x464>
    25f8:	ldr	q0, [x22]
    25fc:	str	q0, [x9]
    2600:	ldr	x8, [sp, #8]
    2604:	add	x0, sp, #0x30
    2608:	stp	x22, xzr, [sp]
    260c:	strb	wzr, [sp, #16]
    2610:	str	x8, [x19, #8]
    2614:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2618:	ldr	x0, [sp]
    261c:	cmp	x0, x22
    2620:	b.eq	2628 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x424>  // b.none
    2624:	bl	0 <_ZdlPv>
    2628:	ldr	x1, [sp, #624]
    262c:	add	x8, sp, #0x250
    2630:	add	x0, x8, #0x10
    2634:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2638:	add	x0, sp, #0x290
    263c:	bl	0 <_ZN5clang13SourceManagerD1Ev>
    2640:	add	x0, sp, #0x4e0
    2644:	bl	0 <_ZN5clang17DiagnosticsEngineD1Ev>
    2648:	add	x0, sp, #0xa88
    264c:	bl	0 <_ZN5clang11FileManagerD1Ev>
    2650:	mov	x0, x20
    2654:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    2658:	b	26a8 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x4a4>
    265c:	str	xzr, [sp, #1256]
    2660:	strb	wzr, [sp, #1264]
    2664:	mov	x8, x20
    2668:	ldrb	w10, [x19, #32]
    266c:	add	x9, x19, #0x10
    2670:	cmp	x8, x20
    2674:	str	x9, [x19]
    2678:	and	w10, w10, #0xfc
    267c:	orr	w10, w10, #0x2
    2680:	strb	w10, [x19, #32]
    2684:	b.eq	2698 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x494>  // b.none
    2688:	ldr	x9, [sp, #1264]
    268c:	str	x8, [x19]
    2690:	str	x9, [x19, #16]
    2694:	b	26a0 <_ZN5clang7tooling20applyAllReplacementsB5cxx11EN4llvm9StringRefERKNS0_12ReplacementsE+0x49c>
    2698:	ldr	q0, [x20]
    269c:	str	q0, [x9]
    26a0:	ldr	x8, [sp, #1256]
    26a4:	str	x8, [x19, #8]
    26a8:	add	sp, sp, #0xd20
    26ac:	ldp	x20, x19, [sp, #80]
    26b0:	ldp	x22, x21, [sp, #64]
    26b4:	ldp	x24, x23, [sp, #48]
    26b8:	ldp	x26, x25, [sp, #32]
    26bc:	ldp	x28, x27, [sp, #16]
    26c0:	ldp	x29, x30, [sp], #96
    26c4:	ret
    26c8:	add	x0, sp, #0x20
    26cc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    26d0:	adrp	x0, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    26d4:	adrp	x1, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    26d8:	adrp	x3, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    26dc:	add	x0, x0, #0x0
    26e0:	add	x1, x1, #0x0
    26e4:	add	x3, x3, #0x0
    26e8:	mov	w2, #0xf3                  	// #243
    26ec:	bl	0 <__assert_fail>

00000000000026f0 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE>:
    26f0:	sub	sp, sp, #0x150
    26f4:	stp	x29, x30, [sp, #240]
    26f8:	str	x28, [sp, #256]
    26fc:	stp	x26, x25, [sp, #272]
    2700:	stp	x24, x23, [sp, #288]
    2704:	stp	x22, x21, [sp, #304]
    2708:	stp	x20, x19, [sp, #320]
    270c:	add	x29, sp, #0xf0
    2710:	mov	x19, x8
    2714:	adrp	x8, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2718:	ldr	d0, [x8]
    271c:	mov	x8, x19
    2720:	str	wzr, [x8, #8]!
    2724:	stp	xzr, x8, [x8, #8]
    2728:	stp	x8, xzr, [x8, #24]
    272c:	add	x8, sp, #0x48
    2730:	add	x8, x8, #0x28
    2734:	stp	xzr, x8, [sp, #72]
    2738:	str	x8, [sp, #88]
    273c:	str	d0, [sp, #96]
    2740:	str	wzr, [sp, #104]
    2744:	ldr	x21, [x1, #24]
    2748:	add	x26, x1, #0x8
    274c:	cmp	x21, x26
    2750:	b.eq	280c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x11c>  // b.none
    2754:	adrp	x22, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    2758:	adrp	x23, 0 <_ZN5clang7tooling11ReplacementC1Ev>
    275c:	mov	x20, x0
    2760:	add	x22, x22, #0x0
    2764:	add	x23, x23, #0x0
    2768:	mov	x24, x21
    276c:	ldr	x1, [x24, #32]!
    2770:	add	x8, sp, #0x30
    2774:	mov	w4, #0x1                   	// #1
    2778:	mov	x0, x20
    277c:	ldr	x2, [x24, #8]
    2780:	mov	w3, wzr
    2784:	bl	0 <_ZN5clang11FileManager7getFileEN4llvm9StringRefEbb>
    2788:	ldrb	w8, [sp, #64]
    278c:	tbnz	w8, #0, 27c4 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xd4>
    2790:	ldr	x1, [sp, #48]
    2794:	add	x8, sp, #0x8
    2798:	add	x0, sp, #0x48
    279c:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    27a0:	ldrb	w8, [sp, #40]
    27a4:	cbz	w8, 27e8 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xf8>
    27a8:	mov	x0, x19
    27ac:	mov	x1, x24
    27b0:	add	x25, x21, #0x40
    27b4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    27b8:	mov	x1, x25
    27bc:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    27c0:	b	27e8 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0xf8>
    27c4:	bl	0 <_ZN4llvm4errsEv>
    27c8:	mov	w2, #0xa                   	// #10
    27cc:	mov	x1, x22
    27d0:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    27d4:	ldp	x1, x2, [x21, #32]
    27d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    27dc:	mov	w2, #0xd                   	// #13
    27e0:	mov	x1, x23
    27e4:	bl	0 <_ZN5clang7tooling11ReplacementC1Ev>
    27e8:	mov	x0, x21
    27ec:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
    27f0:	mov	x21, x0
    27f4:	cmp	x0, x26
    27f8:	b.ne	2768 <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x78>  // b.any
    27fc:	ldp	x8, x0, [sp, #80]
    2800:	cmp	x0, x8
    2804:	b.eq	280c <_ZN5clang7tooling23groupReplacementsByFileERNS_11FileManagerERKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_12ReplacementsESt4lessIS9_ESaISt4pairIKS9_SA_EEE+0x11c>  // b.none
    2808:	bl	0 <free>
    280c:	ldp	x20, x19, [sp, #320]
    2810:	ldp	x22, x21, [sp, #304]
    2814:	ldp	x24, x23, [sp, #288]
    2818:	ldp	x26, x25, [sp, #272]
    281c:	ldr	x28, [sp, #256]
    2820:	ldp	x29, x30, [sp, #240]
    2824:	add	sp, sp, #0x150
    2828:	ret

000000000000282c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>:
    282c:	stp	x29, x30, [sp, #-80]!
    2830:	str	x25, [sp, #16]
    2834:	stp	x24, x23, [sp, #32]
    2838:	stp	x22, x21, [sp, #48]
    283c:	stp	x20, x19, [sp, #64]
    2840:	mov	x29, sp
    2844:	sub	x25, x1, x0
    2848:	cmp	x25, #0x81
    284c:	b.lt	2a9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x270>  // b.tstop
    2850:	mov	x21, x1
    2854:	mov	x19, x0
    2858:	mov	x22, x2
    285c:	and	x20, x3, #0xff
    2860:	add	x24, x0, #0x8
    2864:	cbz	x22, 2a28 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x1fc>
    2868:	lsr	x8, x25, #1
    286c:	and	x8, x8, #0x7ffffffffffffff8
    2870:	add	x8, x19, x8
    2874:	ldp	w10, w12, [x19, #8]
    2878:	ldp	w11, w13, [x8]
    287c:	ldur	w9, [x21, #-8]
    2880:	sub	x22, x22, #0x1
    2884:	cmp	w12, w13
    2888:	cset	w14, cc  // cc = lo, ul, last
    288c:	cmp	w10, w11
    2890:	cset	w15, cc  // cc = lo, ul, last
    2894:	csel	w14, w14, w15, eq  // eq = none
    2898:	cmp	w14, #0x1
    289c:	b.ne	28d4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0xa8>  // b.any
    28a0:	ldur	w14, [x21, #-4]
    28a4:	cmp	w13, w14
    28a8:	cset	w13, cc  // cc = lo, ul, last
    28ac:	cmp	w11, w9
    28b0:	cset	w11, cc  // cc = lo, ul, last
    28b4:	csel	w11, w13, w11, eq  // eq = none
    28b8:	cmp	w11, #0x1
    28bc:	b.ne	2900 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0xd4>  // b.any
    28c0:	ldr	x9, [x8]
    28c4:	ldr	x10, [x19]
    28c8:	str	x9, [x19]
    28cc:	str	x10, [x8]
    28d0:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x14c>
    28d4:	ldur	w14, [x21, #-4]
    28d8:	cmp	w12, w14
    28dc:	cset	w12, cc  // cc = lo, ul, last
    28e0:	cmp	w10, w9
    28e4:	cset	w10, cc  // cc = lo, ul, last
    28e8:	csel	w10, w12, w10, eq  // eq = none
    28ec:	cmp	w10, #0x1
    28f0:	b.ne	2930 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x104>  // b.any
    28f4:	ldp	x9, x8, [x19]
    28f8:	stp	x8, x9, [x19]
    28fc:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x14c>
    2900:	cmp	w12, w14
    2904:	cset	w11, cc  // cc = lo, ul, last
    2908:	cmp	w10, w9
    290c:	ldr	x8, [x19]
    2910:	cset	w9, cc  // cc = lo, ul, last
    2914:	csel	w9, w11, w9, eq  // eq = none
    2918:	cmp	w9, #0x1
    291c:	b.ne	2960 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x134>  // b.any
    2920:	ldur	x9, [x21, #-8]
    2924:	str	x9, [x19]
    2928:	stur	x8, [x21, #-8]
    292c:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x14c>
    2930:	cmp	w13, w14
    2934:	cset	w10, cc  // cc = lo, ul, last
    2938:	cmp	w11, w9
    293c:	ldr	x9, [x19]
    2940:	cset	w11, cc  // cc = lo, ul, last
    2944:	csel	w10, w10, w11, eq  // eq = none
    2948:	cmp	w10, #0x1
    294c:	b.ne	296c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x140>  // b.any
    2950:	ldur	x8, [x21, #-8]
    2954:	str	x8, [x19]
    2958:	stur	x9, [x21, #-8]
    295c:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x14c>
    2960:	ldr	x9, [x19, #8]
    2964:	stp	x9, x8, [x19]
    2968:	b	2978 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x14c>
    296c:	ldr	x10, [x8]
    2970:	str	x10, [x19]
    2974:	str	x9, [x8]
    2978:	mov	x8, x21
    297c:	mov	x23, x24
    2980:	ldp	w12, w11, [x23]
    2984:	ldp	w10, w9, [x19]
    2988:	cmp	w11, w9
    298c:	cset	w11, cc  // cc = lo, ul, last
    2990:	cmp	w12, w10
    2994:	cset	w12, cc  // cc = lo, ul, last
    2998:	csel	w11, w11, w12, eq  // eq = none
    299c:	cmp	w11, #0x1
    29a0:	b.ne	29c4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x198>  // b.any
    29a4:	ldr	w11, [x23, #8]!
    29a8:	ldr	w12, [x23, #4]
    29ac:	cmp	w12, w9
    29b0:	cset	w12, cc  // cc = lo, ul, last
    29b4:	cmp	w11, w10
    29b8:	cset	w11, cc  // cc = lo, ul, last
    29bc:	csel	w11, w12, w11, eq  // eq = none
    29c0:	tbnz	w11, #0, 29a4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x178>
    29c4:	ldr	w11, [x8, #-8]!
    29c8:	ldr	w12, [x8, #4]
    29cc:	cmp	w9, w12
    29d0:	cset	w12, cc  // cc = lo, ul, last
    29d4:	cmp	w10, w11
    29d8:	cset	w11, cc  // cc = lo, ul, last
    29dc:	csel	w11, w12, w11, eq  // eq = none
    29e0:	tbnz	w11, #0, 29c4 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x198>
    29e4:	cmp	x8, x23
    29e8:	b.ls	2a00 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x1d4>  // b.plast
    29ec:	ldr	x9, [x8]
    29f0:	ldr	x10, [x23]
    29f4:	str	x9, [x23], #8
    29f8:	str	x10, [x8]
    29fc:	b	2980 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x154>
    2a00:	mov	x0, x23
    2a04:	mov	x1, x21
    2a08:	mov	x2, x22
    2a0c:	mov	x3, x20
    2a10:	bl	282c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_>
    2a14:	sub	x25, x23, x19
    2a18:	cmp	x25, #0x80
    2a1c:	mov	x21, x23
    2a20:	b.gt	2864 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x38>
    2a24:	b	2a9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x270>
    2a28:	lsr	x22, x25, #3
    2a2c:	sub	x8, x22, #0x2
    2a30:	sub	x9, x22, #0x1
    2a34:	cmp	x8, #0x0
    2a38:	csel	x8, x9, x8, lt  // lt = tstop
    2a3c:	asr	x23, x8, #1
    2a40:	ldr	x3, [x19, x23, lsl #3]
    2a44:	mov	x0, x19
    2a48:	mov	x1, x23
    2a4c:	mov	x2, x22
    2a50:	mov	x4, x20
    2a54:	bl	2ab4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_>
    2a58:	sub	x23, x23, #0x1
    2a5c:	cmn	x23, #0x1
    2a60:	b.ne	2a40 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x214>  // b.any
    2a64:	cmp	x25, #0x9
    2a68:	b.lt	2a9c <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x270>  // b.tstop
    2a6c:	sub	x21, x21, #0x8
    2a70:	ldr	x8, [x19]
    2a74:	ldr	x3, [x21]
    2a78:	sub	x22, x21, x19
    2a7c:	asr	x2, x22, #3
    2a80:	mov	x0, x19
    2a84:	mov	x1, xzr
    2a88:	mov	x4, x20
    2a8c:	str	x8, [x21], #-8
    2a90:	bl	2ab4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_>
    2a94:	cmp	x22, #0x8
    2a98:	b.gt	2a70 <_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_T1_+0x244>
    2a9c:	ldp	x20, x19, [sp, #64]
    2aa0:	ldp	x22, x21, [sp, #48]
    2aa4:	ldp	x24, x23, [sp, #32]
    2aa8:	ldr	x25, [sp, #16]
    2aac:	ldp	x29, x30, [sp], #80
    2ab0:	ret

0000000000002ab4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_>:
    2ab4:	sub	x9, x2, #0x1
    2ab8:	cmp	x9, #0x0
    2abc:	csel	x8, x2, x9, lt  // lt = tstop
    2ac0:	asr	x10, x8, #1
    2ac4:	cmp	x10, x1
    2ac8:	mov	x8, x1
    2acc:	b.le	2b24 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0x70>
    2ad0:	mov	x11, x1
    2ad4:	lsl	x8, x11, #1
    2ad8:	mov	w12, #0x1                   	// #1
    2adc:	add	x8, x8, #0x2
    2ae0:	bfi	x12, x11, #1, #63
    2ae4:	add	x13, x0, x8, lsl #3
    2ae8:	add	x14, x0, x12, lsl #3
    2aec:	ldp	w13, w15, [x13]
    2af0:	ldp	w14, w16, [x14]
    2af4:	cmp	w15, w16
    2af8:	cset	w15, cc  // cc = lo, ul, last
    2afc:	cmp	w13, w14
    2b00:	cset	w13, cc  // cc = lo, ul, last
    2b04:	csel	w13, w15, w13, eq  // eq = none
    2b08:	cmp	w13, #0x0
    2b0c:	csel	x8, x12, x8, ne  // ne = any
    2b10:	ldr	x12, [x0, x8, lsl #3]
    2b14:	cmp	x8, x10
    2b18:	str	x12, [x0, x11, lsl #3]
    2b1c:	mov	x11, x8
    2b20:	b.lt	2ad4 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0x20>  // b.tstop
    2b24:	tbnz	w2, #0, 2b50 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0x9c>
    2b28:	sub	x10, x2, #0x2
    2b2c:	cmp	x10, #0x0
    2b30:	csel	x9, x9, x10, lt  // lt = tstop
    2b34:	cmp	x8, x9, asr #1
    2b38:	b.ne	2b50 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0x9c>  // b.any
    2b3c:	mov	w9, #0x1                   	// #1
    2b40:	bfi	x9, x8, #1, #63
    2b44:	ldr	x10, [x0, x9, lsl #3]
    2b48:	str	x10, [x0, x8, lsl #3]
    2b4c:	mov	x8, x9
    2b50:	cmp	x8, x1
    2b54:	b.le	2ba8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0xf4>
    2b58:	lsr	x9, x3, #32
    2b5c:	sub	x10, x8, #0x1
    2b60:	cmp	x10, #0x0
    2b64:	csel	x10, x8, x10, lt  // lt = tstop
    2b68:	asr	x10, x10, #1
    2b6c:	add	x11, x0, x10, lsl #3
    2b70:	ldp	w11, w12, [x11]
    2b74:	cmp	w12, w9
    2b78:	cset	w12, cc  // cc = lo, ul, last
    2b7c:	cmp	w11, w3
    2b80:	cset	w11, cc  // cc = lo, ul, last
    2b84:	csel	w11, w12, w11, eq  // eq = none
    2b88:	cmp	w11, #0x1
    2b8c:	b.ne	2ba8 <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0xf4>  // b.any
    2b90:	ldr	x11, [x0, x10, lsl #3]
    2b94:	cmp	x10, x1
    2b98:	str	x11, [x0, x8, lsl #3]
    2b9c:	mov	x8, x10
    2ba0:	b.gt	2b5c <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0xa8>
    2ba4:	b	2bac <_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_SF_T1_T2_+0xf8>
    2ba8:	mov	x10, x8
    2bac:	str	x3, [x0, x10, lsl #3]
    2bb0:	ret

0000000000002bb4 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_>:
    2bb4:	stp	x29, x30, [sp, #-64]!
    2bb8:	str	x23, [sp, #16]
    2bbc:	stp	x22, x21, [sp, #32]
    2bc0:	stp	x20, x19, [sp, #48]
    2bc4:	mov	x29, sp
    2bc8:	cmp	x0, x1
    2bcc:	b.eq	2c50 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x9c>  // b.none
    2bd0:	add	x8, x0, #0x8
    2bd4:	mov	x19, x1
    2bd8:	mov	x20, x0
    2bdc:	cmp	x8, x1
    2be0:	b.eq	2c50 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x9c>  // b.none
    2be4:	add	x22, x20, #0x10
    2be8:	mov	x21, x22
    2bec:	ldr	w8, [x21, #-8]!
    2bf0:	ldp	w11, w9, [x20]
    2bf4:	ldr	w10, [x21, #4]
    2bf8:	cmp	w10, w9
    2bfc:	cset	w9, cc  // cc = lo, ul, last
    2c00:	cmp	w8, w11
    2c04:	cset	w8, cc  // cc = lo, ul, last
    2c08:	csel	w8, w9, w8, eq  // eq = none
    2c0c:	cmp	w8, #0x1
    2c10:	b.ne	2c34 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x80>  // b.any
    2c14:	ldur	x23, [x22, #-8]
    2c18:	subs	x2, x21, x20
    2c1c:	b.eq	2c2c <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x78>  // b.none
    2c20:	sub	x0, x22, x2
    2c24:	mov	x1, x20
    2c28:	bl	0 <memmove>
    2c2c:	str	x23, [x20]
    2c30:	b	2c40 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x8c>
    2c34:	mov	x0, x21
    2c38:	mov	x1, xzr
    2c3c:	bl	2c64 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_>
    2c40:	add	x8, x21, #0x8
    2c44:	cmp	x8, x19
    2c48:	add	x22, x22, #0x8
    2c4c:	b.ne	2be8 <_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops15_Iter_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_SE_T0_+0x34>  // b.any
    2c50:	ldp	x20, x19, [sp, #48]
    2c54:	ldp	x22, x21, [sp, #32]
    2c58:	ldr	x23, [sp, #16]
    2c5c:	ldp	x29, x30, [sp], #64
    2c60:	ret

0000000000002c64 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_>:
    2c64:	ldr	x8, [x0]
    2c68:	ldp	w11, w10, [x0, #-8]
    2c6c:	lsr	x9, x8, #32
    2c70:	cmp	w10, w9
    2c74:	cset	w10, hi  // hi = pmore
    2c78:	cmp	w11, w8
    2c7c:	cset	w11, hi  // hi = pmore
    2c80:	csel	w10, w10, w11, eq  // eq = none
    2c84:	cmp	w10, #0x1
    2c88:	b.ne	2cbc <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_+0x58>  // b.any
    2c8c:	mov	x10, x0
    2c90:	ldr	x11, [x10, #-8]!
    2c94:	str	x11, [x0]
    2c98:	ldp	w12, w11, [x10, #-8]
    2c9c:	mov	x0, x10
    2ca0:	cmp	w11, w9
    2ca4:	cset	w11, hi  // hi = pmore
    2ca8:	cmp	w12, w8
    2cac:	cset	w12, hi  // hi = pmore
    2cb0:	csel	w11, w11, w12, eq  // eq = none
    2cb4:	tbnz	w11, #0, 2c90 <_ZSt25__unguarded_linear_insertIN9__gnu_cxx17__normal_iteratorIPN5clang7tooling5RangeESt6vectorIS4_SaIS4_EEEENS0_5__ops14_Val_comp_iterIZL20combineAndSortRangesS8_E3$_1EEEvT_T0_+0x2c>
    2cb8:	mov	x0, x10
    2cbc:	str	x8, [x0]
    2cc0:	ret

Disassembly of section .text._ZN5clang13SourceManager17getOrCreateFileIDEPKNS_9FileEntryENS_6SrcMgr18CharacteristicKindE:

0000000000000000 <_ZN5clang13SourceManager17getOrCreateFileIDEPKNS_9FileEntryENS_6SrcMgr18CharacteristicKindE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	w19, w2
  14:	mov	x20, x1
  18:	mov	x21, x0
  1c:	bl	0 <_ZNK5clang13SourceManager13translateFileEPKNS_9FileEntryE>
  20:	cbnz	w0, 40 <_ZN5clang13SourceManager17getOrCreateFileIDEPKNS_9FileEntryENS_6SrcMgr18CharacteristicKindE+0x40>
  24:	mov	x0, x21
  28:	mov	x1, x20
  2c:	mov	x2, xzr
  30:	mov	w3, w19
  34:	mov	w4, wzr
  38:	mov	w5, wzr
  3c:	bl	0 <_ZN5clang13SourceManager17getOrCreateFileIDEPKNS_9FileEntryENS_6SrcMgr18CharacteristicKindE>
  40:	ldp	x20, x19, [sp, #32]
  44:	ldr	x21, [sp, #16]
  48:	and	x0, x0, #0xffffffff
  4c:	ldp	x29, x30, [sp], #48
  50:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	and	x1, x1, #0xffffffff
  18:	mov	x21, x0
  1c:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  20:	and	x19, x0, #0xffffffff
  24:	add	x2, x29, #0x1c
  28:	mov	x0, x21
  2c:	mov	x1, x19
  30:	strb	wzr, [x29, #28]
  34:	bl	0 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE>
  38:	ldrb	w8, [x29, #28]
  3c:	cbz	w8, 4c <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x4c>
  40:	mov	x19, xzr
  44:	mov	x8, xzr
  48:	b	60 <_ZNK5clang13SourceManager16getDecomposedLocENS_14SourceLocationE+0x60>
  4c:	ldr	w8, [x0]
  50:	and	w9, w20, #0x7fffffff
  54:	and	w8, w8, #0x7fffffff
  58:	sub	w8, w9, w8
  5c:	lsl	x8, x8, #32
  60:	orr	x0, x8, x19
  64:	ldp	x20, x19, [sp, #32]
  68:	ldr	x21, [sp, #16]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE:

0000000000000000 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	and	x1, x1, #0xffffffff
  10:	sub	x2, x29, #0x4
  14:	sturb	wzr, [x29, #-4]
  18:	bl	0 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE>
  1c:	ldurb	w8, [x29, #-4]
  20:	cbz	w8, 34 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x34>
  24:	mov	x0, xzr
  28:	ldp	x29, x30, [sp, #16]
  2c:	add	sp, sp, #0x20
  30:	ret
  34:	ldr	w8, [x0]
  38:	tbnz	w8, #31, 24 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x24>
  3c:	ldr	x8, [x0, #16]
  40:	ands	x8, x8, #0xfffffffffffffff8
  44:	b.eq	24 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x24>  // b.none
  48:	ldr	x0, [x8, #8]
  4c:	b	28 <_ZNK5clang13SourceManager17getFileEntryForIDENS_6FileIDE+0x28>

Disassembly of section .text._ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x20, x8, [x0, #8]
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	cmp	x20, x8
  20:	b.eq	78 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_+0x78>  // b.none
  24:	add	x8, x20, #0x10
  28:	mov	x22, x20
  2c:	str	x8, [x22], #56
  30:	ldp	x1, x8, [x21]
  34:	mov	x0, x20
  38:	add	x2, x1, x8
  3c:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_>
  40:	ldr	x8, [x21, #32]
  44:	str	x22, [x20, #40]!
  48:	mov	x0, x20
  4c:	stur	x8, [x20, #-8]
  50:	ldp	x1, x8, [x21, #40]
  54:	add	x2, x1, x8
  58:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_>
  5c:	ldr	x8, [x19, #8]
  60:	add	x8, x8, #0x48
  64:	str	x8, [x19, #8]
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldp	x22, x21, [sp, #16]
  70:	ldp	x29, x30, [sp], #48
  74:	ret
  78:	mov	x0, x19
  7c:	mov	x1, x20
  80:	mov	x2, x21
  84:	ldp	x20, x19, [sp, #32]
  88:	ldp	x22, x21, [sp, #16]
  8c:	ldp	x29, x30, [sp], #48
  90:	b	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE9push_backERKS2_>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_:

0000000000000000 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	mov	x22, x0
  18:	cmp	x1, x2
  1c:	str	xzr, [x22, #8]!
  20:	str	xzr, [x0]
  24:	stp	x22, xzr, [x0, #32]
  28:	stp	xzr, x22, [x0, #16]
  2c:	str	x0, [sp, #8]
  30:	b.eq	60 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x60>  // b.none
  34:	mov	x19, x2
  38:	mov	x20, x1
  3c:	mov	x21, x0
  40:	add	x3, sp, #0x8
  44:	mov	x0, x21
  48:	mov	x1, x22
  4c:	mov	x2, x20
  50:	bl	0 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_>
  54:	add	x20, x20, #0x48
  58:	cmp	x19, x20
  5c:	b.ne	40 <_ZNSt3setIN5clang7tooling11ReplacementESt4lessIS2_ESaIS2_EEC2IN9__gnu_cxx17__normal_iteratorIPS2_St6vectorIS2_S5_EEEEET_SE_+0x40>  // b.any
  60:	ldp	x20, x19, [sp, #48]
  64:	ldp	x22, x21, [sp, #32]
  68:	ldp	x29, x30, [sp, #16]
  6c:	add	sp, sp, #0x40
  70:	ret

Disassembly of section .text._ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev:

0000000000000000 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	58 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev+0x58>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19, #40]
  24:	add	x8, x19, #0x38
  28:	cmp	x8, x0
  2c:	b.eq	34 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev+0x34>  // b.none
  30:	bl	0 <_ZdlPv>
  34:	mov	x8, x19
  38:	ldr	x0, [x8], #16
  3c:	cmp	x8, x0
  40:	b.eq	48 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	add	x19, x19, #0x48
  4c:	cmp	x21, x19
  50:	b.ne	20 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev+0x20>  // b.any
  54:	ldr	x19, [x20]
  58:	cbz	x19, 70 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EED2Ev+0x70>
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	b	0 <_ZdlPv>
  70:	ldp	x20, x19, [sp, #32]
  74:	ldr	x21, [sp, #16]
  78:	ldp	x29, x30, [sp], #48
  7c:	ret

Disassembly of section .text._ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #48]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #48]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #48]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv:

0000000000000000 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #48]
   c:	tbnz	w8, #1, 1c <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv+0x1c>
  10:	tbnz	w8, #0, 20 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv+0x20>
  14:	ldp	x29, x30, [sp], #16
  18:	ret
  1c:	bl	0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv>
  20:	adrp	x0, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv>
  24:	adrp	x1, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv>
  28:	adrp	x3, 0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEEptEv>
  2c:	add	x0, x0, #0x0
  30:	add	x1, x1, #0x0
  34:	add	x3, x3, #0x0
  38:	mov	w2, #0x272                 	// #626
  3c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldrb	w8, [x0, #48]
  10:	mov	x19, x0
  14:	tbnz	w8, #1, 54 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev+0x54>
  18:	tbnz	w8, #0, 30 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev+0x30>
  1c:	ldr	x1, [x19, #16]
  20:	mov	x0, x19
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	b	0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev>
  30:	ldr	x0, [x19]
  34:	cbz	x0, 44 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev+0x44>
  38:	ldr	x8, [x0]
  3c:	ldr	x8, [x8, #8]
  40:	blr	x8
  44:	str	xzr, [x19]
  48:	ldr	x19, [sp, #16]
  4c:	ldp	x29, x30, [sp], #32
  50:	ret
  54:	mov	x0, x19
  58:	bl	0 <_ZN4llvm8ExpectedIN5clang7tooling12ReplacementsEED2Ev>

Disassembly of section .text._ZNSt6vectorIN5clang7tooling5RangeESaIS2_EEC2ERKS4_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EEC2ERKS4_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x9, x8, [x1]
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	stp	xzr, xzr, [x0]
  20:	sub	x21, x8, x9
  24:	asr	x1, x21, #3
  28:	str	xzr, [x0, #16]
  2c:	bl	0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EEC2ERKS4_>
  30:	add	x8, x0, x21
  34:	stp	x0, x0, [x19]
  38:	str	x8, [x19, #16]
  3c:	ldp	x8, x9, [x20]
  40:	cmp	x8, x9
  44:	b.eq	58 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EEC2ERKS4_+0x58>  // b.none
  48:	ldr	x10, [x8], #8
  4c:	cmp	x9, x8
  50:	str	x10, [x0], #8
  54:	b.ne	48 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EEC2ERKS4_+0x48>  // b.any
  58:	str	x0, [x19, #8]
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldr	x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZN5clang11LangOptionsD2Ev:

0000000000000000 <_ZN5clang11LangOptionsD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	ldr	x0, [x0, #504]
  14:	add	x8, x19, #0x208
  18:	cmp	x0, x8
  1c:	b.eq	24 <_ZN5clang11LangOptionsD2Ev+0x24>  // b.none
  20:	bl	0 <_ZdlPv>
  24:	add	x0, x19, #0x1e0
  28:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  2c:	add	x0, x19, #0x1c8
  30:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  34:	add	x0, x19, #0x1a8
  38:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  3c:	add	x0, x19, #0x190
  40:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  44:	ldr	x0, [x19, #368]
  48:	add	x8, x19, #0x180
  4c:	cmp	x0, x8
  50:	b.eq	58 <_ZN5clang11LangOptionsD2Ev+0x58>  // b.none
  54:	bl	0 <_ZdlPv>
  58:	ldr	x0, [x19, #336]
  5c:	add	x8, x19, #0x160
  60:	cmp	x0, x8
  64:	b.eq	6c <_ZN5clang11LangOptionsD2Ev+0x6c>  // b.none
  68:	bl	0 <_ZdlPv>
  6c:	ldr	x0, [x19, #304]
  70:	add	x8, x19, #0x140
  74:	cmp	x0, x8
  78:	b.eq	80 <_ZN5clang11LangOptionsD2Ev+0x80>  // b.none
  7c:	bl	0 <_ZdlPv>
  80:	ldr	x0, [x19, #272]
  84:	add	x8, x19, #0x120
  88:	cmp	x0, x8
  8c:	b.eq	94 <_ZN5clang11LangOptionsD2Ev+0x94>  // b.none
  90:	bl	0 <_ZdlPv>
  94:	add	x0, x19, #0xe0
  98:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  9c:	add	x0, x19, #0xc8
  a0:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  a4:	add	x0, x19, #0xb0
  a8:	bl	0 <_ZN5clang11LangOptionsD2Ev>
  ac:	add	x0, x19, #0x98
  b0:	ldr	x19, [sp, #16]
  b4:	ldp	x29, x30, [sp], #32
  b8:	b	0 <_ZN5clang11LangOptionsD2Ev>

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij:

0000000000000000 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	cbz	x1, 84 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij+0x84>
  18:	cmp	w3, #0x0
  1c:	cset	w8, ne  // ne = any
  20:	cmp	w3, #0x3
  24:	cset	w9, ne  // ne = any
  28:	mov	x23, x2
  2c:	and	w2, w8, w9
  30:	mov	w19, w5
  34:	mov	w20, w4
  38:	mov	w21, w3
  3c:	mov	x24, x1
  40:	mov	x22, x0
  44:	bl	0 <_ZN5clang13SourceManager23getOrCreateContentCacheEPKNS_9FileEntryEb>
  48:	cbz	x0, a4 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij+0xa4>
  4c:	ldp	x2, x3, [x24]
  50:	mov	x1, x0
  54:	and	x4, x23, #0xffffffff
  58:	mov	x0, x22
  5c:	mov	w5, w21
  60:	mov	w6, w20
  64:	mov	w7, w19
  68:	bl	0 <_ZN5clang13SourceManager12createFileIDEPKNS_6SrcMgr12ContentCacheEN4llvm9StringRefENS_14SourceLocationENS1_18CharacteristicKindEij>
  6c:	ldp	x20, x19, [sp, #48]
  70:	ldp	x22, x21, [sp, #32]
  74:	ldp	x24, x23, [sp, #16]
  78:	and	x0, x0, #0xffffffff
  7c:	ldp	x29, x30, [sp], #64
  80:	ret
  84:	adrp	x0, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  88:	adrp	x1, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  8c:	adrp	x3, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  90:	add	x0, x0, #0x0
  94:	add	x1, x1, #0x0
  98:	add	x3, x3, #0x0
  9c:	mov	w2, #0x342                 	// #834
  a0:	bl	0 <__assert_fail>
  a4:	adrp	x0, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  a8:	adrp	x1, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  ac:	adrp	x3, 0 <_ZN5clang13SourceManager12createFileIDEPKNS_9FileEntryENS_14SourceLocationENS_6SrcMgr18CharacteristicKindEij>
  b0:	add	x0, x0, #0x0
  b4:	add	x1, x1, #0x0
  b8:	add	x3, x3, #0x0
  bc:	mov	w2, #0x345                 	// #837
  c0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_:

0000000000000000 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #80]
   8:	str	x25, [sp, #96]
   c:	stp	x24, x23, [sp, #112]
  10:	stp	x22, x21, [sp, #128]
  14:	stp	x20, x19, [sp, #144]
  18:	add	x29, sp, #0x50
  1c:	mov	x22, x0
  20:	mov	w0, #0xb0                  	// #176
  24:	mov	x21, x1
  28:	mov	x19, x8
  2c:	bl	0 <_Znwm>
  30:	add	x24, sp, #0x8
  34:	add	x23, x24, #0x10
  38:	ldr	w22, [x22]
  3c:	str	x23, [sp, #8]
  40:	ldp	x1, x8, [x21]
  44:	mov	x20, x0
  48:	add	x0, sp, #0x8
  4c:	add	x2, x1, x8
  50:	bl	0 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_>
  54:	ldp	x8, x1, [x21, #32]
  58:	add	x25, x24, #0x38
  5c:	add	x0, x24, #0x28
  60:	stp	x8, x25, [sp, #40]
  64:	ldr	x8, [x21, #48]
  68:	add	x2, x1, x8
  6c:	bl	0 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_>
  70:	add	x2, sp, #0x8
  74:	mov	x0, x20
  78:	mov	w1, w22
  7c:	bl	0 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_>
  80:	ldr	x0, [sp, #48]
  84:	cmp	x0, x25
  88:	b.eq	90 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_+0x90>  // b.none
  8c:	bl	0 <_ZdlPv>
  90:	ldr	x0, [sp, #8]
  94:	cmp	x0, x23
  98:	b.eq	a0 <_ZN4llvm10make_errorIN5clang7tooling16ReplacementErrorEJNS2_17replacement_errorERNS2_11ReplacementEEEENS_5ErrorEDpOT0_+0xa0>  // b.none
  9c:	bl	0 <_ZdlPv>
  a0:	orr	x8, x20, #0x1
  a4:	str	x8, [x19]
  a8:	ldp	x20, x19, [sp, #144]
  ac:	ldp	x22, x21, [sp, #128]
  b0:	ldp	x24, x23, [sp, #112]
  b4:	ldr	x25, [sp, #96]
  b8:	ldp	x29, x30, [sp, #80]
  bc:	add	sp, sp, #0xa0
  c0:	ret

Disassembly of section .text._ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE:

0000000000000000 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldrb	w8, [x0, #32]
   c:	orr	w8, w8, #0x3
  10:	strb	w8, [x0, #32]
  14:	ldr	x9, [x1]
  18:	tst	x9, #0xfffffffffffffffe
  1c:	and	x8, x9, #0xfffffffffffffffe
  20:	cset	w9, ne  // ne = any
  24:	orr	x9, x8, x9
  28:	str	x9, [x1]
  2c:	cbz	x8, 48 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE+0x48>
  30:	ldrb	w9, [x0, #32]
  34:	tbz	w9, #0, 68 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE+0x68>
  38:	str	x8, [x0]
  3c:	str	xzr, [x1]
  40:	ldp	x29, x30, [sp], #16
  44:	ret
  48:	adrp	x0, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  4c:	adrp	x1, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  50:	adrp	x3, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x1ce                 	// #462
  64:	bl	0 <__assert_fail>
  68:	adrp	x0, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  6c:	adrp	x1, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  70:	adrp	x3, 0 <_ZN4llvm8ExpectedINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ENS_5ErrorE>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x27c                 	// #636
  84:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallPtrSetImplIPKN5clang9FileEntryEE6insertES4_:

0000000000000000 <_ZN4llvm15SmallPtrSetImplIPKN5clang9FileEntryEE6insertES4_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #32]
   8:	str	x21, [sp, #48]
   c:	stp	x20, x19, [sp, #64]
  10:	add	x29, sp, #0x20
  14:	mov	x19, x0
  18:	mov	x20, x8
  1c:	bl	0 <_ZN4llvm15SmallPtrSetImplIPKN5clang9FileEntryEE6insertES4_>
  20:	ldp	x9, x8, [x19, #8]
  24:	mov	w10, #0x18                  	// #24
  28:	mov	w11, #0x1c                  	// #28
  2c:	mov	x21, x1
  30:	cmp	x8, x9
  34:	csel	x9, x11, x10, eq  // eq = none
  38:	ldr	w9, [x19, x9]
  3c:	add	x8, x8, x9, lsl #3
  40:	stp	x0, x8, [sp]
  44:	mov	x0, sp
  48:	bl	0 <_ZN4llvm15SmallPtrSetImplIPKN5clang9FileEntryEE6insertES4_>
  4c:	ldr	x8, [x19]
  50:	strb	w21, [x20, #32]
  54:	ldr	x21, [sp, #48]
  58:	ldp	x29, x30, [sp, #32]
  5c:	stp	x19, x8, [sp, #16]
  60:	ldp	q1, q0, [sp]
  64:	stp	q1, q0, [x20]
  68:	ldp	x20, x19, [sp, #64]
  6c:	add	sp, sp, #0x50
  70:	ret

Disassembly of section .text._ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_:

0000000000000000 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	str	x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	ldr	x23, [x0, #16]
  1c:	mov	x21, x1
  20:	mov	x19, x0
  24:	add	x22, x0, #0x8
  28:	cbz	x23, 74 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x74>
  2c:	mov	x20, x22
  30:	add	x0, x23, #0x20
  34:	mov	x1, x21
  38:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  3c:	add	x8, x23, #0x18
  40:	add	x9, x23, #0x10
  44:	cmp	w0, #0x0
  48:	csel	x8, x8, x9, lt  // lt = tstop
  4c:	csel	x20, x20, x23, lt  // lt = tstop
  50:	ldr	x23, [x8]
  54:	cbnz	x23, 30 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x30>
  58:	cmp	x20, x22
  5c:	b.eq	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x78>  // b.none
  60:	add	x1, x20, #0x20
  64:	mov	x0, x21
  68:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  6c:	tbz	w0, #31, 9c <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x9c>
  70:	b	78 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_+0x78>
  74:	mov	x20, x22
  78:	adrp	x2, 0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
  7c:	add	x2, x2, #0x0
  80:	add	x3, x29, #0x18
  84:	add	x4, sp, #0x8
  88:	mov	x0, x19
  8c:	mov	x1, x20
  90:	str	x21, [x29, #24]
  94:	bl	0 <_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsESt4lessIS5_ESaISt4pairIKS5_S8_EEEixERSC_>
  98:	mov	x20, x0
  9c:	add	x0, x20, #0x40
  a0:	ldp	x20, x19, [sp, #64]
  a4:	ldp	x22, x21, [sp, #48]
  a8:	ldr	x23, [sp, #32]
  ac:	ldp	x29, x30, [sp, #16]
  b0:	add	sp, sp, #0x50
  b4:	ret

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorD2Ev:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN5clang7tooling16ReplacementErrorD2Ev>
  10:	ldrb	w8, [x0, #168]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	w8, 54 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x54>
  28:	ldr	x0, [x19, #136]
  2c:	add	x8, x19, #0x98
  30:	cmp	x0, x8
  34:	b.eq	3c <_ZN5clang7tooling16ReplacementErrorD2Ev+0x3c>  // b.none
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x0, [x19, #96]
  40:	add	x8, x19, #0x70
  44:	cmp	x0, x8
  48:	b.eq	50 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x50>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	strb	wzr, [x19, #168]
  54:	ldrb	w8, [x19, #88]
  58:	cbz	w8, 88 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x88>
  5c:	ldr	x0, [x19, #56]
  60:	add	x8, x19, #0x48
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #16]
  74:	add	x8, x19, #0x20
  78:	cmp	x0, x8
  7c:	b.eq	84 <_ZN5clang7tooling16ReplacementErrorD2Ev+0x84>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	strb	wzr, [x19, #88]
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	ret

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorD0Ev:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x9, 0 <_ZN5clang7tooling16ReplacementErrorD0Ev>
  10:	ldrb	w8, [x0, #168]
  14:	ldr	x9, [x9]
  18:	mov	x19, x0
  1c:	add	x9, x9, #0x10
  20:	str	x9, [x0]
  24:	cbz	w8, 54 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x54>
  28:	ldr	x0, [x19, #136]
  2c:	add	x8, x19, #0x98
  30:	cmp	x0, x8
  34:	b.eq	3c <_ZN5clang7tooling16ReplacementErrorD0Ev+0x3c>  // b.none
  38:	bl	0 <_ZdlPv>
  3c:	ldr	x0, [x19, #96]
  40:	add	x8, x19, #0x70
  44:	cmp	x0, x8
  48:	b.eq	50 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x50>  // b.none
  4c:	bl	0 <_ZdlPv>
  50:	strb	wzr, [x19, #168]
  54:	ldrb	w8, [x19, #88]
  58:	cbz	w8, 84 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x84>
  5c:	ldr	x0, [x19, #56]
  60:	add	x8, x19, #0x48
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x0, [x19, #16]
  74:	add	x8, x19, #0x20
  78:	cmp	x0, x8
  7c:	b.eq	84 <_ZN5clang7tooling16ReplacementErrorD0Ev+0x84>  // b.none
  80:	bl	0 <_ZdlPv>
  84:	mov	x0, x19
  88:	ldr	x19, [sp, #16]
  8c:	ldp	x29, x30, [sp], #32
  90:	b	0 <_ZdlPv>

Disassembly of section .text._ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE:

0000000000000000 <_ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	stp	x20, x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	ldr	x8, [x0]
  14:	mov	x19, x1
  18:	mov	x20, sp
  1c:	ldr	x9, [x8, #24]
  20:	mov	x8, sp
  24:	blr	x9
  28:	ldp	x1, x2, [sp]
  2c:	mov	x0, x19
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	ldr	x0, [sp]
  38:	add	x8, x20, #0x10
  3c:	cmp	x0, x8
  40:	b.eq	48 <_ZNK5clang7tooling16ReplacementError3logERN4llvm11raw_ostreamE+0x48>  // b.none
  44:	bl	0 <_ZdlPv>
  48:	ldp	x20, x19, [sp, #48]
  4c:	ldp	x29, x30, [sp, #32]
  50:	add	sp, sp, #0x40
  54:	ret

Disassembly of section .text._ZNK5clang7tooling16ReplacementError18convertToErrorCodeEv:

0000000000000000 <_ZNK5clang7tooling16ReplacementError18convertToErrorCodeEv>:
   0:	b	0 <_ZN4llvm22inconvertibleErrorCodeEv>

Disassembly of section .text._ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv:

0000000000000000 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>:
   0:	adrp	x0, 0 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE14dynamicClassIDEv>
   4:	ldr	x0, [x0]
   8:	ret

Disassembly of section .text._ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv:

0000000000000000 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv>:
   0:	adrp	x8, 0 <_ZNK4llvm9ErrorInfoIN5clang7tooling16ReplacementErrorENS_13ErrorInfoBaseEE3isAEPKv>
   4:	ldr	x8, [x8]
   8:	adrp	x9, 0 <_ZN4llvm13ErrorInfoBase2IDE>
   c:	ldr	x9, [x9]
  10:	cmp	x1, x8
  14:	cset	w8, eq  // eq = none
  18:	cmp	x1, x9
  1c:	cset	w9, eq  // eq = none
  20:	orr	w0, w8, w9
  24:	ret

Disassembly of section .text._ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb:

0000000000000000 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	add	w8, w1, #0x1
   c:	cmp	w8, #0x1
  10:	b.hi	34 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x34>  // b.pmore
  14:	cbz	x2, 20 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x20>
  18:	mov	w8, #0x1                   	// #1
  1c:	strb	w8, [x2]
  20:	ldr	w8, [x0, #208]
  24:	cbz	w8, 3c <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb+0x3c>
  28:	ldr	x0, [x0, #200]
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldp	x29, x30, [sp], #16
  38:	b	0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  3c:	adrp	x0, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  40:	adrp	x1, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  44:	adrp	x3, 0 <_ZNK5clang13SourceManager12getSLocEntryENS_6FileIDEPb>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x99                  	// #153
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager16getSLocEntryByIDEiPb:

0000000000000000 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	cmn	w1, #0x1
   c:	b.eq	44 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x44>  // b.none
  10:	tbnz	w1, #31, 34 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x34>
  14:	ldr	w8, [x0, #208]
  18:	cmp	w8, w1
  1c:	b.ls	64 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb+0x64>  // b.plast
  20:	ldr	x8, [x0, #200]
  24:	mov	w9, #0x28                  	// #40
  28:	umaddl	x0, w1, w9, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	mov	w8, #0xfffffffe            	// #-2
  38:	sub	w1, w8, w1
  3c:	ldp	x29, x30, [sp], #16
  40:	b	0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  44:	adrp	x0, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  48:	adrp	x1, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  4c:	adrp	x3, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  50:	add	x0, x0, #0x0
  54:	add	x1, x1, #0x0
  58:	add	x3, x3, #0x0
  5c:	mov	w2, #0x6f1                 	// #1777
  60:	bl	0 <__assert_fail>
  64:	adrp	x0, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  68:	adrp	x1, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  6c:	adrp	x3, 0 <_ZNK5clang13SourceManager16getSLocEntryByIDEiPb>
  70:	add	x0, x0, #0x0
  74:	add	x1, x1, #0x0
  78:	add	x3, x3, #0x0
  7c:	mov	w2, #0x693                 	// #1683
  80:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK5clang13SourceManager18getLoadedSLocEntryEjPb:

0000000000000000 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w8, [x0, #224]
  14:	cmp	w8, w1
  18:	b.ls	7c <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x7c>  // b.plast
  1c:	mov	x19, x0
  20:	add	x0, x0, #0xf0
  24:	mov	w20, w1
  28:	mov	x21, x2
  2c:	bl	0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  30:	tbz	w0, #0, 60 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x60>
  34:	ldr	w8, [x19, #224]
  38:	cmp	w8, w20
  3c:	b.ls	9c <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb+0x9c>  // b.plast
  40:	ldr	x8, [x19, #216]
  44:	mov	w9, w20
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	mov	w10, #0x28                  	// #40
  54:	madd	x0, x9, x10, x8
  58:	ldp	x29, x30, [sp], #48
  5c:	ret
  60:	mov	x0, x19
  64:	mov	w1, w20
  68:	mov	x2, x21
  6c:	ldp	x20, x19, [sp, #32]
  70:	ldr	x21, [sp, #16]
  74:	ldp	x29, x30, [sp], #48
  78:	b	0 <_ZNK5clang13SourceManager13loadSLocEntryEjPb>
  7c:	adrp	x0, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  80:	adrp	x1, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  84:	adrp	x3, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  88:	add	x0, x0, #0x0
  8c:	add	x1, x1, #0x0
  90:	add	x3, x3, #0x0
  94:	mov	w2, #0x69d                 	// #1693
  98:	bl	0 <__assert_fail>
  9c:	adrp	x0, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a0:	adrp	x1, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a4:	adrp	x3, 0 <_ZNK5clang13SourceManager18getLoadedSLocEntryEjPb>
  a8:	add	x0, x0, #0x0
  ac:	add	x1, x1, #0x0
  b0:	add	x3, x3, #0x0
  b4:	mov	w2, #0x95                  	// #149
  b8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm9BitVectorixEj:

0000000000000000 <_ZNK4llvm9BitVectorixEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0, #16]
   c:	cmp	w8, w1
  10:	b.ls	3c <_ZNK4llvm9BitVectorixEj+0x3c>  // b.plast
  14:	ldr	x9, [x0, #8]
  18:	lsr	w8, w1, #6
  1c:	cmp	x9, x8
  20:	b.ls	5c <_ZNK4llvm9BitVectorixEj+0x5c>  // b.plast
  24:	ldr	x9, [x0]
  28:	ldr	x8, [x9, x8, lsl #3]
  2c:	lsr	x8, x8, x1
  30:	and	w0, w8, #0x1
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  40:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  44:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0x1f0                 	// #496
  58:	bl	0 <__assert_fail>
  5c:	adrp	x0, 0 <_ZNK4llvm9BitVectorixEj>
  60:	adrp	x1, 0 <_ZNK4llvm9BitVectorixEj>
  64:	adrp	x3, 0 <_ZNK4llvm9BitVectorixEj>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x1ab                 	// #427
  78:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm9StringRef7compareES0_:

0000000000000000 <_ZNK4llvm9StringRef7compareES0_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0, #8]
  10:	mov	x19, x2
  14:	cmp	x2, x20
  18:	csel	x2, x2, x20, cc  // cc = lo, ul, last
  1c:	cbz	x2, 3c <_ZNK4llvm9StringRef7compareES0_+0x3c>
  20:	ldr	x0, [x0]
  24:	bl	0 <memcmp>
  28:	cmp	w0, #0x0
  2c:	mov	w9, #0x1                   	// #1
  30:	mov	w8, w0
  34:	cneg	w0, w9, lt  // lt = tstop
  38:	cbnz	w8, 54 <_ZNK4llvm9StringRef7compareES0_+0x54>
  3c:	cmp	x20, x19
  40:	b.ne	4c <_ZNK4llvm9StringRef7compareES0_+0x4c>  // b.any
  44:	mov	w0, wzr
  48:	b	54 <_ZNK4llvm9StringRef7compareES0_+0x54>
  4c:	mov	w8, #0xffffffff            	// #-1
  50:	cneg	w0, w8, cs  // cs = hs, nlast
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE:

0000000000000000 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	w21, [x0, #272]
  14:	and	w20, w1, #0x7fffffff
  18:	mov	x2, xzr
  1c:	mov	x19, x0
  20:	mov	x1, x21
  24:	bl	0 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>
  28:	ldr	w8, [x0]
  2c:	and	w8, w8, #0x7fffffff
  30:	cmp	w8, w20
  34:	b.hi	7c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x7c>  // b.pmore
  38:	cmn	w21, #0x2
  3c:	b.eq	74 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x74>  // b.none
  40:	ldr	w8, [x19, #208]
  44:	add	w1, w21, #0x1
  48:	cmp	w1, w8
  4c:	b.ne	58 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x58>  // b.any
  50:	ldr	w8, [x19, #232]
  54:	b	6c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x6c>
  58:	mov	x0, x19
  5c:	mov	x2, xzr
  60:	bl	0 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE>
  64:	ldr	w8, [x0]
  68:	and	w8, w8, #0x7fffffff
  6c:	cmp	w8, w20
  70:	b.ls	7c <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x7c>  // b.plast
  74:	ldr	w0, [x19, #272]
  78:	b	88 <_ZNK5clang13SourceManager9getFileIDENS_14SourceLocationE+0x88>
  7c:	mov	x0, x19
  80:	mov	w1, w20
  84:	bl	0 <_ZNK5clang13SourceManager13getFileIDSlowEj>
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	mov	w0, w0
  94:	ldp	x29, x30, [sp], #48
  98:	ret

Disassembly of section .text._ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_:

0000000000000000 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	stp	x1, x3, [x0]
   c:	strb	w2, [x0, #16]
  10:	strb	w4, [x0, #17]
  14:	bl	0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ENS0_5ChildENS0_8NodeKindES1_S2_>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0xb8                  	// #184
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	add	x29, sp, #0x10
  14:	cmp	x1, x2
  18:	str	x0, [sp, #8]
  1c:	b.eq	58 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x58>  // b.none
  20:	mov	x19, x2
  24:	mov	x21, x1
  28:	mov	x20, x0
  2c:	add	x22, x0, #0x8
  30:	add	x2, x21, #0x20
  34:	add	x3, sp, #0x8
  38:	mov	x0, x20
  3c:	mov	x1, x22
  40:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_>
  44:	mov	x0, x21
  48:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  4c:	mov	x21, x0
  50:	cmp	x0, x19
  54:	b.ne	30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE22_M_insert_range_uniqueISt23_Rb_tree_const_iteratorIS2_EEENSt9enable_ifIXsr17__same_value_typeIT_EE5valueEvE4typeESD_SD_+0x30>  // b.any
  58:	ldp	x20, x19, [sp, #48]
  5c:	ldp	x22, x21, [sp, #32]
  60:	ldp	x29, x30, [sp, #16]
  64:	add	sp, sp, #0x40
  68:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x20, x2
  18:	mov	x21, x0
  1c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>
  20:	mov	x2, x0
  24:	cbz	x1, 50 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_+0x50>
  28:	mov	x0, x21
  2c:	mov	x3, x20
  30:	mov	x4, x19
  34:	ldp	x20, x19, [sp, #32]
  38:	ldr	x21, [sp, #16]
  3c:	mov	x8, x1
  40:	mov	x1, x2
  44:	mov	x2, x8
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	mov	x0, x2
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x8, x0, #0x8
  14:	mov	x20, x0
  18:	cmp	x8, x1
  1c:	mov	x21, x2
  20:	b.eq	78 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x78>  // b.none
  24:	add	x22, x1, #0x20
  28:	mov	x19, x1
  2c:	mov	x0, x21
  30:	mov	x1, x22
  34:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  38:	tbz	w0, #0, 9c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x9c>
  3c:	ldr	x1, [x20, #24]
  40:	cmp	x1, x19
  44:	b.eq	110 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x110>  // b.none
  48:	mov	x0, x19
  4c:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  50:	mov	x22, x0
  54:	add	x0, x0, #0x20
  58:	mov	x1, x21
  5c:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  60:	tbz	w0, #0, ec <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xec>
  64:	ldr	x8, [x22, #24]
  68:	cmp	x8, #0x0
  6c:	csel	x8, xzr, x19, eq  // eq = none
  70:	csel	x1, x22, x19, eq  // eq = none
  74:	b	e4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xe4>
  78:	ldr	x8, [x20, #40]
  7c:	cbz	x8, ec <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xec>
  80:	ldr	x8, [x20, #32]
  84:	mov	x1, x21
  88:	add	x0, x8, #0x20
  8c:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  90:	tbz	w0, #0, ec <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xec>
  94:	ldr	x1, [x20, #32]
  98:	b	100 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x100>
  9c:	mov	x0, x22
  a0:	mov	x1, x21
  a4:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  a8:	tbz	w0, #0, 108 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x108>
  ac:	ldr	x1, [x20, #32]
  b0:	cmp	x1, x19
  b4:	b.eq	100 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x100>  // b.none
  b8:	mov	x0, x19
  bc:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  c0:	mov	x22, x0
  c4:	add	x1, x0, #0x20
  c8:	mov	x0, x21
  cc:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  d0:	tbz	w0, #0, ec <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0xec>
  d4:	ldr	x8, [x19, #24]
  d8:	cmp	x8, #0x0
  dc:	csel	x8, xzr, x22, eq  // eq = none
  e0:	csel	x1, x19, x22, eq  // eq = none
  e4:	mov	x19, x8
  e8:	b	114 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x114>
  ec:	mov	x0, x20
  f0:	mov	x1, x21
  f4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_>
  f8:	mov	x19, x0
  fc:	b	114 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x114>
 100:	mov	x19, xzr
 104:	b	114 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x114>
 108:	mov	x1, xzr
 10c:	b	114 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorIS2_ERKS2_+0x114>
 110:	mov	x19, x1
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x22, x4
  18:	mov	x21, x3
  1c:	mov	x20, x2
  20:	mov	x19, x0
  24:	cbz	x1, 30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_+0x30>
  28:	mov	w23, #0x1                   	// #1
  2c:	b	4c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_+0x4c>
  30:	add	x8, x19, #0x8
  34:	cmp	x8, x20
  38:	b.eq	28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_+0x28>  // b.none
  3c:	add	x1, x20, #0x20
  40:	mov	x0, x21
  44:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  48:	mov	w23, w0
  4c:	ldr	x22, [x22]
  50:	mov	w0, #0x68                  	// #104
  54:	bl	0 <_Znwm>
  58:	mov	x24, x0
  5c:	mov	x0, x22
  60:	mov	x1, x24
  64:	mov	x2, x21
  68:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRKS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSG_OT_RT0_>
  6c:	add	x3, x19, #0x8
  70:	and	w0, w23, #0x1
  74:	mov	x1, x24
  78:	mov	x2, x20
  7c:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  80:	ldr	x8, [x19, #40]
  84:	mov	x0, x24
  88:	add	x8, x8, #0x1
  8c:	str	x8, [x19, #40]
  90:	ldp	x20, x19, [sp, #48]
  94:	ldp	x22, x21, [sp, #32]
  98:	ldp	x24, x23, [sp, #16]
  9c:	ldp	x29, x30, [sp], #64
  a0:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #16]
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	cbz	x8, 54 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x54>
  20:	add	x1, x8, #0x20
  24:	mov	x0, x20
  28:	mov	x19, x8
  2c:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  30:	add	x8, x19, #0x10
  34:	add	x9, x19, #0x18
  38:	tst	w0, #0x1
  3c:	csel	x8, x8, x9, ne  // ne = any
  40:	ldr	x8, [x8]
  44:	cbnz	x8, 20 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x20>
  48:	mov	x22, x19
  4c:	tbnz	w0, #0, 58 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x58>
  50:	b	70 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x70>
  54:	add	x19, x21, #0x8
  58:	ldr	x8, [x21, #24]
  5c:	cmp	x8, x19
  60:	b.eq	8c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x8c>  // b.none
  64:	mov	x0, x19
  68:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  6c:	mov	x22, x0
  70:	add	x0, x22, #0x20
  74:	mov	x1, x20
  78:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  7c:	tst	w0, #0x1
  80:	csel	x0, xzr, x22, ne  // ne = any
  84:	csel	x19, x19, xzr, ne  // ne = any
  88:	b	90 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE24_M_get_insert_unique_posERKS2_+0x90>
  8c:	mov	x0, xzr
  90:	mov	x1, x19
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	add	x8, x1, #0x30
  10:	mov	x0, x1
  14:	str	x8, [x0, #32]!
  18:	mov	x20, x1
  1c:	ldp	x1, x8, [x2]
  20:	mov	x19, x2
  24:	add	x2, x1, x8
  28:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_>
  2c:	ldr	x8, [x19, #32]
  30:	add	x9, x20, #0x58
  34:	str	x9, [x20, #72]!
  38:	mov	x0, x20
  3c:	stur	x8, [x20, #-8]
  40:	ldp	x1, x8, [x19, #40]
  44:	ldp	x20, x19, [sp, #16]
  48:	add	x2, x1, x8
  4c:	ldp	x29, x30, [sp], #32
  50:	b	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_construct_nodeIJRKS2_EEEvPSt13_Rb_tree_nodeIS2_EDpOT_>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x48>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  28:	ldr	x21, [x20, #16]
  2c:	add	x1, x20, #0x20
  30:	mov	x0, x19
  34:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E>
  38:	mov	x0, x20
  3c:	bl	0 <_ZdlPv>
  40:	mov	x20, x21
  44:	cbnz	x21, 1c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE8_M_eraseEPSt13_Rb_tree_nodeIS2_E+0x1c>
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x0, [x1, #40]
  10:	add	x8, x1, #0x38
  14:	mov	x19, x1
  18:	cmp	x0, x8
  1c:	b.eq	24 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_+0x24>  // b.none
  20:	bl	0 <_ZdlPv>
  24:	ldr	x0, [x19], #16
  28:	cmp	x0, x19
  2c:	b.eq	3c <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5clang7tooling11ReplacementEEE7destroyIS4_EEvPT_+0x3c>  // b.none
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_:

0000000000000000 <_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cmp	x0, x1
  14:	b.eq	54 <_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_+0x54>  // b.none
  18:	mov	x19, x1
  1c:	mov	x20, x0
  20:	mov	x21, x2
  24:	add	x0, x20, #0x20
  28:	add	x1, x21, #0x20
  2c:	bl	630 <_ZN5clang7toolingeqERKNS0_11ReplacementES3_>
  30:	tbz	w0, #0, 5c <_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_+0x5c>
  34:	mov	x0, x20
  38:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  3c:	mov	x20, x0
  40:	mov	x0, x21
  44:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  48:	cmp	x20, x19
  4c:	mov	x21, x0
  50:	b.ne	24 <_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_+0x24>  // b.any
  54:	mov	w0, #0x1                   	// #1
  58:	b	60 <_ZNSt7__equalILb0EE5equalISt23_Rb_tree_const_iteratorIN5clang7tooling11ReplacementEES6_EEbT_S7_T0_+0x60>
  5c:	mov	w0, wzr
  60:	ldp	x20, x19, [sp, #32]
  64:	ldr	x21, [sp, #16]
  68:	ldp	x29, x30, [sp], #48
  6c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x8, x0
  10:	str	wzr, [x8, #8]!
  14:	stp	xzr, x8, [x8, #8]
  18:	stp	x8, xzr, [x8, #24]
  1c:	ldr	x8, [x1, #16]
  20:	cbz	x8, 38 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_+0x38>
  24:	add	x2, x29, #0x18
  28:	mov	x19, x0
  2c:	str	x0, [x29, #24]
  30:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEC2ERKS8_>
  34:	str	x0, [x19, #16]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x1, #16]
  14:	mov	x3, x2
  18:	add	x2, x0, #0x8
  1c:	mov	x20, x0
  20:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>
  24:	mov	x9, x0
  28:	mov	x8, x9
  2c:	ldr	x9, [x9, #16]
  30:	cbnz	x9, 28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x28>
  34:	mov	x9, x0
  38:	str	x8, [x20, #24]
  3c:	mov	x8, x9
  40:	ldr	x9, [x9, #24]
  44:	cbnz	x9, 3c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x3c>
  48:	str	x8, [x20, #32]
  4c:	ldr	x8, [x19, #40]
  50:	str	x8, [x20, #40]
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldr	x24, [x3]
  1c:	mov	x20, x0
  20:	mov	w0, #0x68                  	// #104
  24:	mov	x19, x3
  28:	mov	x23, x2
  2c:	mov	x22, x1
  30:	add	x25, x1, #0x20
  34:	bl	0 <_Znwm>
  38:	mov	x21, x0
  3c:	mov	x0, x24
  40:	mov	x1, x21
  44:	mov	x2, x25
  48:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  4c:	ldr	w8, [x22]
  50:	stp	xzr, xzr, [x21, #16]
  54:	str	x23, [x21, #8]
  58:	str	w8, [x21]
  5c:	ldr	x1, [x22, #24]
  60:	cbz	x1, 78 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x78>
  64:	mov	x0, x20
  68:	mov	x2, x21
  6c:	mov	x3, x19
  70:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  74:	str	x0, [x21, #24]
  78:	ldr	x25, [x22, #16]
  7c:	cbz	x25, e4 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xe4>
  80:	mov	x26, x21
  84:	ldr	x23, [x19]
  88:	mov	w0, #0x68                  	// #104
  8c:	add	x24, x25, #0x20
  90:	bl	0 <_Znwm>
  94:	mov	x22, x0
  98:	mov	x0, x23
  9c:	mov	x1, x22
  a0:	mov	x2, x24
  a4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  a8:	ldr	w8, [x25]
  ac:	stp	xzr, xzr, [x22, #16]
  b0:	str	w8, [x22]
  b4:	str	x22, [x26, #16]
  b8:	str	x26, [x22, #8]
  bc:	ldr	x1, [x25, #24]
  c0:	cbz	x1, d8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xd8>
  c4:	mov	x0, x20
  c8:	mov	x2, x22
  cc:	mov	x3, x19
  d0:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  d4:	str	x0, [x22, #24]
  d8:	ldr	x25, [x25, #16]
  dc:	mov	x26, x22
  e0:	cbnz	x25, 84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_11_Alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x84>
  e4:	mov	x0, x21
  e8:	ldp	x20, x19, [sp, #64]
  ec:	ldp	x22, x21, [sp, #48]
  f0:	ldp	x24, x23, [sp, #32]
  f4:	ldp	x26, x25, [sp, #16]
  f8:	ldp	x29, x30, [sp], #80
  fc:	ret

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	ldr	x8, [x24]
  4c:	subs	x9, x21, x22
  50:	mov	x23, x0
  54:	str	x8, [x0, x9]
  58:	mov	x8, x0
  5c:	b.eq	78 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x78>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	x10, [x9], #8
  6c:	cmp	x21, x9
  70:	str	x10, [x8], #8
  74:	b.ne	68 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>  // b.any
  78:	cmp	x25, x21
  7c:	add	x24, x8, #0x8
  80:	b.eq	94 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>  // b.none
  84:	ldr	x8, [x21], #8
  88:	cmp	x25, x21
  8c:	str	x8, [x24], #8
  90:	b.ne	84 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>  // b.any
  94:	cbz	x22, a0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa0>
  98:	mov	x0, x22
  9c:	bl	0 <_ZdlPv>
  a0:	add	x8, x23, x20, lsl #3
  a4:	stp	x23, x24, [x19]
  a8:	str	x8, [x19, #16]
  ac:	ldp	x20, x19, [sp, #64]
  b0:	ldp	x22, x21, [sp, #48]
  b4:	ldp	x24, x23, [sp, #32]
  b8:	ldr	x25, [sp, #16]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

Disassembly of section .text._ZNKSt6vectorIN5clang7tooling5RangeESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN5clang7tooling5RangeESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x9, x8, [x0]
   c:	sub	x9, x8, x9
  10:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  14:	sub	x10, x8, x9, asr #3
  18:	cmp	x10, x1
  1c:	b.cc	54 <_ZNKSt6vectorIN5clang7tooling5RangeESaIS2_EE12_M_check_lenEmPKc+0x54>  // b.lo, b.ul, b.last
  20:	asr	x9, x9, #3
  24:	cmp	x9, x1
  28:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  2c:	adds	x9, x10, x9
  30:	lsr	x11, x9, #60
  34:	cset	w10, cs  // cs = hs, nlast
  38:	cmp	x11, #0x0
  3c:	cset	w11, ne  // ne = any
  40:	orr	w10, w10, w11
  44:	cmp	w10, #0x0
  48:	csel	x0, x8, x9, ne  // ne = any
  4c:	ldp	x29, x30, [sp], #16
  50:	ret
  54:	mov	x0, x2
  58:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN5clang7tooling5RangeESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN5clang7tooling5RangeESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 14 <_ZNSt12_Vector_baseIN5clang7tooling5RangeESaIS2_EE11_M_allocateEm+0x14>
   4:	lsr	x8, x1, #60
   8:	cbnz	x8, 1c <_ZNSt12_Vector_baseIN5clang7tooling5RangeESaIS2_EE11_M_allocateEm+0x1c>
   c:	lsl	x0, x1, #3
  10:	b	0 <_Znwm>
  14:	mov	x0, xzr
  18:	ret
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	34 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x34>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	b	48 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x48>
  34:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  38:	add	x1, x1, #0x0
  3c:	mov	w2, #0x7                   	// #7
  40:	mov	x0, x19
  44:	bl	0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  48:	mov	x0, x19
  4c:	ldr	x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev:

0000000000000000 <_ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x28
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorIN4llvm6TripleESaIS1_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x10
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	cbz	x1, 58 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x58>
  14:	mov	x20, x1
  18:	mov	x19, x0
  1c:	ldr	x1, [x20, #24]
  20:	mov	x0, x19
  24:	bl	0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  28:	ldr	x0, [x20, #56]
  2c:	ldr	x21, [x20, #16]
  30:	cbz	x0, 38 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x38>
  34:	bl	0 <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E>
  38:	add	x0, x20, #0x30
  3c:	bl	0 <_ZN5clang14RopePieceBTreeD1Ev>
  40:	add	x0, x20, #0x28
  44:	bl	0 <_ZN5clang9DeltaTreeD1Ev>
  48:	mov	x0, x20
  4c:	bl	0 <_ZdlPv>
  50:	mov	x20, x21
  54:	cbnz	x21, 1c <_ZNSt8_Rb_treeIN5clang6FileIDESt4pairIKS1_NS0_13RewriteBufferEESt10_Select1stIS5_ESt4lessIS1_ESaIS5_EE8_M_eraseEPSt13_Rb_tree_nodeIS5_E+0x1c>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN5clang18RopeRefCountString7ReleaseEv:

0000000000000000 <_ZN5clang18RopeRefCountString7ReleaseEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	w8, [x0]
   c:	cbz	w8, 2c <_ZN5clang18RopeRefCountString7ReleaseEv+0x2c>
  10:	subs	w8, w8, #0x1
  14:	str	w8, [x0]
  18:	b.eq	24 <_ZN5clang18RopeRefCountString7ReleaseEv+0x24>  // b.none
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	ldp	x29, x30, [sp], #16
  28:	b	0 <_ZdaPv>
  2c:	adrp	x0, 0 <_ZN5clang18RopeRefCountString7ReleaseEv>
  30:	adrp	x1, 0 <_ZN5clang18RopeRefCountString7ReleaseEv>
  34:	adrp	x3, 0 <_ZN5clang18RopeRefCountString7ReleaseEv>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x28                  	// #40
  48:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #32]
   8:	str	x19, [sp, #48]
   c:	add	x29, sp, #0x20
  10:	mov	x19, x0
  14:	cmp	x0, x1
  18:	b.eq	88 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x88>  // b.none
  1c:	mov	x8, x1
  20:	ldr	x1, [x19, #16]
  24:	ldr	x9, [x19, #32]
  28:	str	x19, [sp, #24]
  2c:	stp	x1, x9, [sp, #8]
  30:	cbz	x1, 44 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x44>
  34:	str	xzr, [x1, #8]
  38:	ldr	x9, [x9, #16]
  3c:	cbnz	x9, 48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x48>
  40:	b	4c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x4c>
  44:	mov	x9, xzr
  48:	str	x9, [sp, #16]
  4c:	add	x9, x19, #0x8
  50:	stp	xzr, x9, [x19, #16]
  54:	stp	x9, xzr, [x19, #32]
  58:	ldr	x9, [x8, #16]
  5c:	cbz	x9, 80 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x80>
  60:	add	x2, sp, #0x8
  64:	mov	x0, x19
  68:	mov	x1, x8
  6c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_>
  70:	str	x0, [x19, #16]
  74:	ldr	x0, [sp, #24]
  78:	ldr	x1, [sp, #8]
  7c:	b	84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_+0x84>
  80:	mov	x0, x19
  84:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EEaSERKS8_>
  88:	mov	x0, x19
  8c:	ldr	x19, [sp, #48]
  90:	ldp	x29, x30, [sp, #32]
  94:	add	sp, sp, #0x40
  98:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x1, #16]
  14:	mov	x3, x2
  18:	add	x2, x0, #0x8
  1c:	mov	x20, x0
  20:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_>
  24:	mov	x9, x0
  28:	mov	x8, x9
  2c:	ldr	x9, [x9, #16]
  30:	cbnz	x9, 28 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x28>
  34:	mov	x9, x0
  38:	str	x8, [x20, #24]
  3c:	mov	x8, x9
  40:	ldr	x9, [x9, #24]
  44:	cbnz	x9, 3c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_ERKS8_RT_+0x3c>
  48:	str	x8, [x20, #32]
  4c:	ldr	x8, [x19, #40]
  50:	str	x8, [x20, #40]
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x22, x1
  18:	mov	x20, x0
  1c:	add	x1, x1, #0x20
  20:	mov	x0, x3
  24:	mov	x19, x3
  28:	mov	x23, x2
  2c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  30:	ldr	w8, [x22]
  34:	stp	xzr, xzr, [x0, #16]
  38:	str	x23, [x0, #8]
  3c:	mov	x21, x0
  40:	str	w8, [x0]
  44:	ldr	x1, [x22, #24]
  48:	cbz	x1, 60 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x60>
  4c:	mov	x0, x20
  50:	mov	x2, x21
  54:	mov	x3, x19
  58:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  5c:	str	x0, [x21, #24]
  60:	ldr	x23, [x22, #16]
  64:	cbz	x23, b8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xb8>
  68:	mov	x24, x21
  6c:	add	x1, x23, #0x20
  70:	mov	x0, x19
  74:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  78:	ldr	w8, [x23]
  7c:	stp	xzr, xzr, [x0, #16]
  80:	mov	x22, x0
  84:	str	w8, [x0]
  88:	str	x0, [x24, #16]
  8c:	str	x24, [x0, #8]
  90:	ldr	x1, [x23, #24]
  94:	cbz	x1, ac <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0xac>
  98:	mov	x0, x20
  9c:	mov	x2, x22
  a0:	mov	x3, x19
  a4:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_>
  a8:	str	x0, [x22, #24]
  ac:	ldr	x23, [x23, #16]
  b0:	mov	x24, x22
  b4:	cbnz	x23, 6c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE7_M_copyINS8_20_Reuse_or_alloc_nodeEEEPSt13_Rb_tree_nodeIS2_EPKSC_PSt18_Rb_tree_node_baseRT_+0x6c>
  b8:	mov	x0, x21
  bc:	ldp	x20, x19, [sp, #48]
  c0:	ldp	x22, x21, [sp, #32]
  c4:	ldp	x24, x23, [sp, #16]
  c8:	ldp	x29, x30, [sp], #64
  cc:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x1
  14:	mov	x21, x0
  18:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>
  1c:	ldr	x22, [x21, #16]
  20:	cbz	x0, 3c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x3c>
  24:	mov	x20, x0
  28:	add	x1, x0, #0x20
  2c:	mov	x0, x22
  30:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>
  34:	ldr	x0, [x21, #16]
  38:	b	4c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_+0x4c>
  3c:	mov	w0, #0x68                  	// #104
  40:	bl	0 <_Znwm>
  44:	mov	x20, x0
  48:	mov	x0, x22
  4c:	mov	x1, x20
  50:	mov	x2, x19
  54:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_nodeclIRKS2_EEPSt13_Rb_tree_nodeIS2_EOT_>
  58:	mov	x0, x20
  5c:	ldp	x20, x19, [sp, #32]
  60:	ldp	x22, x21, [sp, #16]
  64:	ldp	x29, x30, [sp], #48
  68:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv>:
   0:	mov	x8, x0
   4:	ldr	x0, [x0, #8]
   8:	cbz	x0, 30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv+0x30>
   c:	ldr	x9, [x0, #8]
  10:	str	x9, [x8, #8]
  14:	cbz	x9, 2c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv+0x2c>
  18:	ldr	x10, [x9, #24]
  1c:	cmp	x10, x0
  20:	b.eq	34 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv+0x34>  // b.none
  24:	str	xzr, [x9, #16]
  28:	ret
  2c:	str	xzr, [x8]
  30:	ret
  34:	ldr	x10, [x9, #16]
  38:	str	xzr, [x9, #24]
  3c:	cbz	x10, 30 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv+0x30>
  40:	mov	x9, x10
  44:	ldr	x10, [x10, #24]
  48:	cbnz	x10, 40 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE20_Reuse_or_alloc_node10_M_extractEv+0x40>
  4c:	str	x9, [x8, #8]
  50:	ldr	x10, [x9, #16]
  54:	cmp	x10, #0x0
  58:	csel	x9, x9, x10, eq  // eq = none
  5c:	str	x9, [x8, #8]
  60:	ret

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsEEEE7destroyISD_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsEEEE7destroyISD_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	ldr	x1, [x1, #48]
  14:	add	x0, x19, #0x20
  18:	bl	0 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsEEEE7destroyISD_EEvPT_>
  1c:	ldr	x0, [x19]
  20:	add	x8, x19, #0x10
  24:	cmp	x0, x8
  28:	b.eq	38 <_ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEN5clang7tooling12ReplacementsEEEE7destroyISD_EEvPT_+0x38>  // b.none
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZdlPv>
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbnz	x1, 24 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x24>
  1c:	cmp	x20, x2
  20:	b.ne	a0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0xa0>  // b.any
  24:	sub	x21, x2, x20
  28:	cmp	x21, #0xf
  2c:	str	x21, [x29, #24]
  30:	b.ls	58 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x58>  // b.plast
  34:	add	x1, x29, #0x18
  38:	mov	x0, x19
  3c:	mov	x2, xzr
  40:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  44:	str	x0, [x19]
  48:	ldr	x8, [x29, #24]
  4c:	str	x8, [x19, #16]
  50:	cbnz	x21, 60 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x60>
  54:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  58:	ldr	x0, [x19]
  5c:	cbz	x21, 80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  60:	cmp	x21, #0x1
  64:	b.ne	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x74>  // b.any
  68:	ldrb	w8, [x20]
  6c:	strb	w8, [x0]
  70:	b	80 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag+0x80>
  74:	mov	x1, x20
  78:	mov	x2, x21
  7c:	bl	0 <memcpy>
  80:	ldr	x8, [x29, #24]
  84:	ldr	x9, [x19]
  88:	ldr	x21, [sp, #16]
  8c:	str	x8, [x19, #8]
  90:	strb	wzr, [x9, x8]
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x29, x30, [sp], #48
  9c:	ret
  a0:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag>
  a4:	add	x0, x0, #0x0
  a8:	bl	0 <_ZSt19__throw_logic_errorPKc>

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIRKS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv:

0000000000000000 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldaxr	w8, [x0]
   c:	sub	w9, w8, #0x1
  10:	stlxr	w10, w9, [x0]
  14:	cbnz	w10, 8 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv+0x8>
  18:	cmp	w8, #0x0
  1c:	b.le	40 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv+0x40>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv+0x38>  // b.any
  28:	ldr	x8, [x0, #-8]!
  2c:	ldr	x1, [x8, #8]
  30:	ldp	x29, x30, [sp], #16
  34:	br	x1
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv>
  44:	adrp	x1, 0 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv>
  48:	adrp	x3, 0 <_ZNK4llvm24ThreadSafeRefCountedBaseINS_3vfs10FileSystemEE7ReleaseEv>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x62                  	// #98
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	str	x27, [sp, #16]
   8:	stp	x26, x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	mov	x29, sp
  1c:	mov	x24, x2
  20:	adrp	x2, 0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  24:	mov	x23, x1
  28:	add	x2, x2, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	mov	x19, x0
  34:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  38:	ldp	x21, x26, [x19]
  3c:	mov	x20, x0
  40:	mov	x0, x19
  44:	mov	x1, x20
  48:	subs	x25, x23, x21
  4c:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  50:	add	x25, x0, x25
  54:	add	x8, x25, #0x10
  58:	mov	x27, x25
  5c:	str	x8, [x27], #56
  60:	ldp	x1, x8, [x24]
  64:	mov	x22, x0
  68:	mov	x0, x25
  6c:	add	x2, x1, x8
  70:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  74:	ldr	x8, [x24, #32]
  78:	str	x27, [x25, #40]!
  7c:	mov	x0, x25
  80:	stur	x8, [x25, #-8]
  84:	ldp	x1, x8, [x24, #40]
  88:	add	x2, x1, x8
  8c:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  90:	cmp	x23, x21
  94:	mov	x24, x22
  98:	b.eq	158 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x158>  // b.none
  9c:	mov	x24, xzr
  a0:	add	x9, x22, x24
  a4:	add	x8, x9, #0x10
  a8:	add	x10, x21, x24
  ac:	str	x8, [x9]
  b0:	mov	x8, x10
  b4:	ldr	x11, [x8], #16
  b8:	cmp	x11, x8
  bc:	b.eq	d0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd0>  // b.none
  c0:	str	x11, [x9]
  c4:	ldr	x10, [x10, #16]
  c8:	str	x10, [x9, #16]
  cc:	b	d8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xd8>
  d0:	ldr	q0, [x11]
  d4:	str	q0, [x9, #16]
  d8:	ldur	x10, [x8, #-8]
  dc:	add	x9, x22, x24
  e0:	add	x11, x9, #0x38
  e4:	add	x25, x8, #0x28
  e8:	str	x10, [x9, #8]
  ec:	ldr	x10, [x8, #16]
  f0:	stp	x8, xzr, [x8, #-16]
  f4:	strb	wzr, [x8]
  f8:	stp	x10, x11, [x9, #32]
  fc:	ldr	x10, [x8, #24]
 100:	cmp	x10, x25
 104:	b.eq	11c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x11c>  // b.none
 108:	str	x10, [x9, #40]
 10c:	add	x8, x21, x24
 110:	ldr	x8, [x8, #56]
 114:	str	x8, [x9, #56]
 118:	b	124 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x124>
 11c:	ldr	q0, [x10]
 120:	stur	q0, [x9, #56]
 124:	ldur	x8, [x25, #-8]
 128:	add	x9, x22, x24
 12c:	sub	x1, x25, #0x38
 130:	mov	x0, x19
 134:	str	x8, [x9, #48]
 138:	stp	x25, xzr, [x25, #-16]
 13c:	strb	wzr, [x25]
 140:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 144:	add	x8, x25, #0x10
 148:	cmp	x8, x23
 14c:	add	x24, x24, #0x48
 150:	b.ne	a0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa0>  // b.any
 154:	add	x24, x22, x24
 158:	cmp	x26, x23
 15c:	b.eq	258 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x258>  // b.none
 160:	mov	x25, xzr
 164:	add	x9, x24, x25
 168:	add	x8, x9, #0x58
 16c:	add	x10, x23, x25
 170:	str	x8, [x9, #72]
 174:	mov	x8, x10
 178:	ldr	x11, [x8], #16
 17c:	cmp	x11, x8
 180:	b.eq	194 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x194>  // b.none
 184:	str	x11, [x9, #72]
 188:	ldr	x10, [x10, #16]
 18c:	str	x10, [x9, #88]
 190:	b	19c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x19c>
 194:	ldr	q0, [x11]
 198:	stur	q0, [x9, #88]
 19c:	ldur	x10, [x8, #-8]
 1a0:	add	x9, x24, x25
 1a4:	add	x11, x9, #0x80
 1a8:	add	x27, x8, #0x28
 1ac:	str	x10, [x9, #80]
 1b0:	ldr	x10, [x8, #16]
 1b4:	stp	x8, xzr, [x8, #-16]
 1b8:	strb	wzr, [x8]
 1bc:	stp	x10, x11, [x9, #104]
 1c0:	ldr	x10, [x8, #24]
 1c4:	cmp	x10, x27
 1c8:	b.eq	1e0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e0>  // b.none
 1cc:	str	x10, [x9, #112]
 1d0:	add	x8, x23, x25
 1d4:	ldr	x8, [x8, #56]
 1d8:	str	x8, [x9, #128]
 1dc:	b	1e8 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e8>
 1e0:	ldr	q0, [x10]
 1e4:	str	q0, [x9, #128]
 1e8:	ldur	x8, [x27, #-8]
 1ec:	add	x9, x24, x25
 1f0:	sub	x1, x27, #0x38
 1f4:	mov	x0, x19
 1f8:	str	x8, [x9, #120]
 1fc:	stp	x27, xzr, [x27, #-16]
 200:	strb	wzr, [x27]
 204:	bl	0 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 208:	add	x8, x27, #0x10
 20c:	cmp	x8, x26
 210:	add	x25, x25, #0x48
 214:	b.ne	164 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x164>  // b.any
 218:	add	x8, x24, x25
 21c:	add	x23, x8, #0x48
 220:	cbz	x21, 22c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x22c>
 224:	mov	x0, x21
 228:	bl	0 <_ZdlPv>
 22c:	mov	w8, #0x48                  	// #72
 230:	madd	x8, x20, x8, x22
 234:	stp	x22, x23, [x19]
 238:	str	x8, [x19, #16]
 23c:	ldp	x20, x19, [sp, #80]
 240:	ldp	x22, x21, [sp, #64]
 244:	ldp	x24, x23, [sp, #48]
 248:	ldp	x26, x25, [sp, #32]
 24c:	ldr	x27, [sp, #16]
 250:	ldp	x29, x30, [sp], #96
 254:	ret
 258:	add	x23, x24, #0x48
 25c:	cbnz	x21, 224 <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x224>
 260:	b	22c <_ZNSt6vectorIN5clang7tooling11ReplacementESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x22c>

Disassembly of section .text._ZNKSt6vectorIN5clang7tooling11ReplacementESaIS2_EE12_M_check_lenEmPKc:

0000000000000000 <_ZNKSt6vectorIN5clang7tooling11ReplacementESaIS2_EE12_M_check_lenEmPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x10, x9, [x0]
   c:	mov	x8, #0x71c7                	// #29127
  10:	movk	x8, #0xc71c, lsl #16
  14:	movk	x8, #0x1c71, lsl #32
  18:	sub	x9, x9, x10
  1c:	mov	x10, #0x8e39                	// #36409
  20:	movk	x10, #0x38e3, lsl #16
  24:	movk	x10, #0xe38e, lsl #32
  28:	asr	x9, x9, #3
  2c:	movk	x10, #0x8e38, lsl #48
  30:	movk	x8, #0x1c7, lsl #48
  34:	mul	x9, x9, x10
  38:	sub	x10, x8, x9
  3c:	cmp	x10, x1
  40:	b.cc	70 <_ZNKSt6vectorIN5clang7tooling11ReplacementESaIS2_EE12_M_check_lenEmPKc+0x70>  // b.lo, b.ul, b.last
  44:	cmp	x9, x1
  48:	csel	x10, x1, x9, cc  // cc = lo, ul, last
  4c:	adds	x9, x10, x9
  50:	cset	w10, cs  // cs = hs, nlast
  54:	cmp	x9, x8
  58:	cset	w11, hi  // hi = pmore
  5c:	orr	w10, w10, w11
  60:	cmp	w10, #0x0
  64:	csel	x0, x8, x9, ne  // ne = any
  68:	ldp	x29, x30, [sp], #16
  6c:	ret
  70:	mov	x0, x2
  74:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt12_Vector_baseIN5clang7tooling11ReplacementESaIS2_EE11_M_allocateEm:

0000000000000000 <_ZNSt12_Vector_baseIN5clang7tooling11ReplacementESaIS2_EE11_M_allocateEm>:
   0:	cbz	x1, 28 <_ZNSt12_Vector_baseIN5clang7tooling11ReplacementESaIS2_EE11_M_allocateEm+0x28>
   4:	mov	x8, #0x71c8                	// #29128
   8:	movk	x8, #0xc71c, lsl #16
   c:	movk	x8, #0x1c71, lsl #32
  10:	movk	x8, #0x1c7, lsl #48
  14:	cmp	x1, x8
  18:	b.cs	30 <_ZNSt12_Vector_baseIN5clang7tooling11ReplacementESaIS2_EE11_M_allocateEm+0x30>  // b.hs, b.nlast
  1c:	add	x8, x1, x1, lsl #3
  20:	lsl	x0, x8, #3
  24:	b	0 <_Znwm>
  28:	mov	x0, xzr
  2c:	ret
  30:	stp	x29, x30, [sp, #-16]!
  34:	mov	x29, sp
  38:	bl	0 <_ZSt17__throw_bad_allocv>

Disassembly of section .text._ZN9__gnu_cxx13new_allocatorIN5clang7tooling11ReplacementEE7destroyIS3_EEvPT_:

0000000000000000 <_ZN9__gnu_cxx13new_allocatorIN5clang7tooling11ReplacementEE7destroyIS3_EEvPT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x0, [x1, #40]
  10:	add	x8, x1, #0x38
  14:	mov	x19, x1
  18:	cmp	x0, x8
  1c:	b.eq	24 <_ZN9__gnu_cxx13new_allocatorIN5clang7tooling11ReplacementEE7destroyIS3_EEvPT_+0x24>  // b.none
  20:	bl	0 <_ZdlPv>
  24:	ldr	x0, [x19], #16
  28:	cmp	x0, x19
  2c:	b.eq	3c <_ZN9__gnu_cxx13new_allocatorIN5clang7tooling11ReplacementEE7destroyIS3_EEvPT_+0x3c>  // b.none
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	b	0 <_ZdlPv>
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x20, x2
  18:	mov	x21, x0
  1c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>
  20:	mov	x2, x0
  24:	cbz	x1, 50 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_+0x50>
  28:	mov	x0, x21
  2c:	mov	x3, x20
  30:	mov	x4, x19
  34:	ldp	x20, x19, [sp, #32]
  38:	ldr	x21, [sp, #16]
  3c:	mov	x8, x1
  40:	mov	x1, x2
  44:	mov	x2, x8
  48:	ldp	x29, x30, [sp], #48
  4c:	b	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE17_M_insert_unique_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_ESt23_Rb_tree_const_iteratorIS2_EOT_RT0_>
  50:	ldp	x20, x19, [sp, #32]
  54:	ldr	x21, [sp, #16]
  58:	mov	x0, x2
  5c:	ldp	x29, x30, [sp], #48
  60:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_+0x24>  // b.none
  38:	add	x1, x20, #0x20
  3c:	mov	x0, x21
  40:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  44:	mov	w22, w0
  48:	mov	w0, #0x68                  	// #104
  4c:	bl	0 <_Znwm>
  50:	add	x8, x0, #0x30
  54:	mov	x23, x0
  58:	str	x8, [x0, #32]!
  5c:	ldp	x1, x8, [x21]
  60:	add	x2, x1, x8
  64:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_>
  68:	ldp	x8, x1, [x21, #32]
  6c:	add	x9, x23, #0x58
  70:	mov	x0, x23
  74:	str	x8, [x23, #64]
  78:	str	x9, [x0, #72]!
  7c:	ldr	x8, [x21, #48]
  80:	add	x2, x1, x8
  84:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IRS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSF_OT_RT0_>
  88:	add	x3, x19, #0x8
  8c:	and	w0, w22, #0x1
  90:	mov	x1, x23
  94:	mov	x2, x20
  98:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  9c:	ldr	x8, [x19, #40]
  a0:	mov	x0, x23
  a4:	ldr	x23, [sp, #16]
  a8:	add	x8, x8, #0x1
  ac:	str	x8, [x19, #40]
  b0:	ldp	x20, x19, [sp, #48]
  b4:	ldp	x22, x21, [sp, #32]
  b8:	ldp	x29, x30, [sp], #64
  bc:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>:
   0:	sub	sp, sp, #0x30
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	add	x29, sp, #0x10
  10:	mov	x19, x1
  14:	mov	x20, x0
  18:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>
  1c:	mov	x2, x0
  20:	cbz	x1, 4c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_+0x4c>
  24:	mov	x8, x1
  28:	add	x4, sp, #0x8
  2c:	mov	x0, x20
  30:	mov	x1, x2
  34:	mov	x2, x8
  38:	mov	x3, x19
  3c:	str	x20, [sp, #8]
  40:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE16_M_insert_uniqueIS2_EESt4pairISt17_Rb_tree_iteratorIS2_EbEOT_>
  44:	mov	x2, x0
  48:	mov	w1, #0x1                   	// #1
  4c:	ldp	x20, x19, [sp, #32]
  50:	ldp	x29, x30, [sp, #16]
  54:	mov	x0, x2
  58:	add	sp, sp, #0x30
  5c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x21, x3
  18:	mov	x20, x2
  1c:	mov	x19, x0
  20:	cbz	x1, 2c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x2c>
  24:	mov	w22, #0x1                   	// #1
  28:	b	48 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x48>
  2c:	add	x8, x19, #0x8
  30:	cmp	x8, x20
  34:	b.eq	24 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x24>  // b.none
  38:	add	x1, x20, #0x20
  3c:	mov	x0, x21
  40:	bl	578 <_ZN5clang7toolingltERKNS0_11ReplacementES3_>
  44:	mov	w22, w0
  48:	mov	w0, #0x68                  	// #104
  4c:	bl	0 <_Znwm>
  50:	add	x9, x0, #0x30
  54:	str	x9, [x0, #32]
  58:	mov	x8, x21
  5c:	ldr	x10, [x8], #16
  60:	mov	x23, x0
  64:	cmp	x10, x8
  68:	b.eq	7c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x7c>  // b.none
  6c:	str	x10, [x23, #32]
  70:	ldr	x9, [x21, #16]
  74:	str	x9, [x23, #48]
  78:	b	84 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0x84>
  7c:	ldr	q0, [x10]
  80:	str	q0, [x9]
  84:	ldr	x10, [x21, #8]
  88:	add	x9, x23, #0x58
  8c:	str	x10, [x23, #40]
  90:	ldr	x10, [x21, #32]
  94:	stp	x8, xzr, [x21]
  98:	strb	wzr, [x21, #16]
  9c:	add	x8, x21, #0x38
  a0:	stp	x10, x9, [x23, #64]
  a4:	ldr	x10, [x21, #40]
  a8:	cmp	x10, x8
  ac:	b.eq	c0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0xc0>  // b.none
  b0:	str	x10, [x23, #72]
  b4:	ldr	x9, [x21, #56]
  b8:	str	x9, [x23, #88]
  bc:	b	c8 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE10_M_insert_IS2_NS8_11_Alloc_nodeEEESt17_Rb_tree_iteratorIS2_EPSt18_Rb_tree_node_baseSE_OT_RT0_+0xc8>
  c0:	ldr	q0, [x10]
  c4:	str	q0, [x9]
  c8:	ldr	x9, [x21, #48]
  cc:	add	x3, x19, #0x8
  d0:	and	w0, w22, #0x1
  d4:	mov	x1, x23
  d8:	mov	x2, x20
  dc:	str	x9, [x23, #80]
  e0:	stp	x8, xzr, [x21, #40]
  e4:	strb	wzr, [x21, #56]
  e8:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  ec:	ldr	x8, [x19, #40]
  f0:	mov	x0, x23
  f4:	ldr	x23, [sp, #16]
  f8:	add	x8, x8, #0x1
  fc:	str	x8, [x19, #40]
 100:	ldp	x20, x19, [sp, #48]
 104:	ldp	x22, x21, [sp, #32]
 108:	ldp	x29, x30, [sp], #64
 10c:	ret

Disassembly of section .text._ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	mov	w2, #0x3a                  	// #58
  20:	bl	0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  24:	ldrb	w20, [x19, #48]
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	tbnz	w20, #0, 44 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x44>
  30:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  34:	add	x1, x1, #0x0
  38:	mov	w2, #0x83                  	// #131
  3c:	bl	0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  40:	bl	0 <abort>
  44:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  48:	add	x1, x1, #0x0
  4c:	mov	w2, #0x27                  	// #39
  50:	bl	0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  54:	ldrb	w8, [x19, #48]
  58:	tbnz	w8, #0, 7c <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv+0x7c>
  5c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  60:	adrp	x1, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  64:	adrp	x3, 0 <_ZNK4llvm8ExpectedIN5clang7tooling12ReplacementsEE22fatalUncheckedExpectedEv>
  68:	add	x0, x0, #0x0
  6c:	add	x1, x1, #0x0
  70:	add	x3, x3, #0x0
  74:	mov	w2, #0x281                 	// #641
  78:	bl	0 <__assert_fail>
  7c:	ldr	x19, [x19]
  80:	bl	0 <_ZN4llvm4dbgsEv>
  84:	ldr	x8, [x19]
  88:	mov	x1, x0
  8c:	mov	x0, x19
  90:	ldr	x8, [x8, #16]
  94:	blr	x8
  98:	bl	0 <abort>

Disassembly of section .text._ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_:

0000000000000000 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>:
   0:	sub	sp, sp, #0xf0
   4:	stp	x29, x30, [sp, #144]
   8:	str	x27, [sp, #160]
   c:	stp	x26, x25, [sp, #176]
  10:	stp	x24, x23, [sp, #192]
  14:	stp	x22, x21, [sp, #208]
  18:	stp	x20, x19, [sp, #224]
  1c:	add	x29, sp, #0x90
  20:	mov	x22, x0
  24:	mov	w0, #0xb0                  	// #176
  28:	mov	x20, x2
  2c:	mov	x21, x1
  30:	mov	x19, x8
  34:	bl	0 <_Znwm>
  38:	add	x26, sp, #0x48
  3c:	add	x24, x26, #0x10
  40:	ldr	w22, [x22]
  44:	str	x24, [sp, #72]
  48:	ldp	x1, x8, [x21]
  4c:	mov	x23, x0
  50:	add	x0, sp, #0x48
  54:	add	x2, x1, x8
  58:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  5c:	ldp	x8, x1, [x21, #32]
  60:	add	x25, x26, #0x38
  64:	add	x0, x26, #0x28
  68:	stp	x8, x25, [sp, #104]
  6c:	ldr	x8, [x21, #48]
  70:	add	x2, x1, x8
  74:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  78:	mov	x26, sp
  7c:	add	x21, x26, #0x10
  80:	str	x21, [sp]
  84:	ldp	x1, x8, [x20]
  88:	mov	x0, sp
  8c:	add	x2, x1, x8
  90:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  94:	ldp	x8, x1, [x20, #32]
  98:	add	x27, x26, #0x38
  9c:	add	x0, x26, #0x28
  a0:	stp	x8, x27, [sp, #32]
  a4:	ldr	x8, [x20, #48]
  a8:	add	x2, x1, x8
  ac:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  b0:	add	x2, sp, #0x48
  b4:	mov	x3, sp
  b8:	mov	x0, x23
  bc:	mov	w1, w22
  c0:	bl	0 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_>
  c4:	ldr	x0, [sp, #40]
  c8:	str	x23, [x19]
  cc:	cmp	x0, x27
  d0:	b.eq	d8 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xd8>  // b.none
  d4:	bl	0 <_ZdlPv>
  d8:	ldr	x0, [sp]
  dc:	cmp	x0, x21
  e0:	b.eq	e8 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xe8>  // b.none
  e4:	bl	0 <_ZdlPv>
  e8:	ldr	x0, [sp, #112]
  ec:	cmp	x0, x25
  f0:	b.eq	f8 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0xf8>  // b.none
  f4:	bl	0 <_ZdlPv>
  f8:	ldr	x0, [sp, #72]
  fc:	cmp	x0, x24
 100:	b.eq	108 <_ZSt11make_uniqueIN5clang7tooling16ReplacementErrorEJNS1_17replacement_errorERKNS1_11ReplacementES6_EENSt9_MakeUniqIT_E15__single_objectEDpOT0_+0x108>  // b.none
 104:	bl	0 <_ZdlPv>
 108:	ldp	x20, x19, [sp, #224]
 10c:	ldp	x22, x21, [sp, #208]
 110:	ldp	x24, x23, [sp, #192]
 114:	ldp	x26, x25, [sp, #176]
 118:	ldr	x27, [sp, #160]
 11c:	ldp	x29, x30, [sp, #144]
 120:	add	sp, sp, #0xf0
 124:	ret

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_>:
   0:	adrp	x8, 0 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_>
   4:	ldr	x8, [x8]
   8:	add	x9, x0, #0x20
   c:	str	w1, [x0, #8]
  10:	str	x9, [x0, #16]
  14:	add	x8, x8, #0x10
  18:	str	x8, [x0]
  1c:	mov	x8, x2
  20:	ldr	x10, [x8], #16
  24:	cmp	x10, x8
  28:	b.eq	3c <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x3c>  // b.none
  2c:	str	x10, [x0, #16]
  30:	ldr	x9, [x2, #16]
  34:	str	x9, [x0, #32]
  38:	b	44 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x44>
  3c:	ldr	q0, [x10]
  40:	str	q0, [x9]
  44:	ldr	x10, [x2, #8]
  48:	add	x9, x0, #0x48
  4c:	str	x10, [x0, #24]
  50:	ldr	x10, [x2, #32]
  54:	stp	x8, xzr, [x2]
  58:	strb	wzr, [x2, #16]
  5c:	add	x8, x2, #0x38
  60:	stp	x10, x9, [x0, #48]
  64:	ldr	x10, [x2, #40]
  68:	cmp	x10, x8
  6c:	b.eq	80 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x80>  // b.none
  70:	str	x10, [x0, #56]
  74:	ldr	x9, [x2, #56]
  78:	str	x9, [x0, #72]
  7c:	b	88 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x88>
  80:	ldr	q0, [x10]
  84:	str	q0, [x9]
  88:	ldr	x10, [x2, #48]
  8c:	mov	w11, #0x1                   	// #1
  90:	add	x9, x0, #0x70
  94:	str	x10, [x0, #64]
  98:	stp	x8, xzr, [x2, #40]
  9c:	strb	wzr, [x2, #56]
  a0:	strb	w11, [x0, #88]
  a4:	str	x9, [x0, #96]
  a8:	mov	x8, x3
  ac:	ldr	x10, [x8], #16
  b0:	cmp	x10, x8
  b4:	b.eq	c8 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0xc8>  // b.none
  b8:	str	x10, [x0, #96]
  bc:	ldr	x9, [x3, #16]
  c0:	str	x9, [x0, #112]
  c4:	b	d0 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0xd0>
  c8:	ldr	q0, [x10]
  cc:	str	q0, [x9]
  d0:	ldr	x10, [x3, #8]
  d4:	add	x9, x0, #0x98
  d8:	str	x10, [x0, #104]
  dc:	ldr	x10, [x3, #32]
  e0:	stp	x8, xzr, [x3]
  e4:	strb	wzr, [x3, #16]
  e8:	add	x8, x3, #0x38
  ec:	stp	x10, x9, [x0, #128]
  f0:	ldr	x10, [x3, #40]
  f4:	cmp	x10, x8
  f8:	b.eq	10c <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x10c>  // b.none
  fc:	str	x10, [x0, #136]
 100:	ldr	x9, [x3, #56]
 104:	str	x9, [x0, #152]
 108:	b	114 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementES3_+0x114>
 10c:	ldr	q0, [x10]
 110:	str	q0, [x9]
 114:	ldr	x9, [x3, #48]
 118:	mov	w10, #0x1                   	// #1
 11c:	str	x9, [x0, #144]
 120:	stp	x8, xzr, [x3, #40]
 124:	strb	wzr, [x3, #56]
 128:	strb	w10, [x0, #168]
 12c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x8, x1
  10:	mov	x19, x0
  14:	add	x1, x0, #0x8
  18:	mov	x0, x8
  1c:	bl	0 <_ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_>
  20:	mov	x20, x0
  24:	add	x1, x0, #0x20
  28:	mov	x0, x19
  2c:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_E>
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPv>
  38:	ldr	x8, [x19, #40]
  3c:	sub	x8, x8, #0x1
  40:	str	x8, [x19, #40]
  44:	ldp	x20, x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret

Disassembly of section .text._ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_:

0000000000000000 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #24]
  14:	mov	x19, x0
  18:	mov	x21, x1
  1c:	mov	x20, x2
  20:	cmp	x8, x1
  24:	b.ne	34 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x34>  // b.any
  28:	add	x22, x19, #0x8
  2c:	cmp	x20, x22
  30:	b.eq	68 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x68>  // b.none
  34:	cmp	x21, x20
  38:	b.eq	7c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x7c>  // b.none
  3c:	mov	x22, x21
  40:	mov	x0, x22
  44:	bl	0 <_ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base>
  48:	mov	x22, x0
  4c:	mov	x0, x19
  50:	mov	x1, x21
  54:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_>
  58:	cmp	x22, x20
  5c:	mov	x21, x22
  60:	b.ne	40 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x40>  // b.any
  64:	b	7c <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_+0x7c>
  68:	ldr	x1, [x19, #16]
  6c:	mov	x0, x19
  70:	bl	0 <_ZNSt8_Rb_treeIN5clang7tooling11ReplacementES2_St9_IdentityIS2_ESt4lessIS2_ESaIS2_EE12_M_erase_auxESt23_Rb_tree_const_iteratorIS2_ESA_>
  74:	stp	xzr, x22, [x19, #16]
  78:	stp	x22, xzr, [x19, #32]
  7c:	ldp	x20, x19, [sp, #32]
  80:	ldp	x22, x21, [sp, #16]
  84:	ldp	x29, x30, [sp], #48
  88:	ret

Disassembly of section .text._ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	str	x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	mov	x24, x2
  1c:	adrp	x2, 0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  20:	mov	x21, x1
  24:	add	x2, x2, #0x0
  28:	mov	w1, #0x1                   	// #1
  2c:	mov	x19, x0
  30:	bl	0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  34:	ldp	x22, x25, [x19]
  38:	mov	x20, x0
  3c:	mov	x0, x19
  40:	mov	x1, x20
  44:	bl	0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
  48:	ldr	x8, [x24]
  4c:	subs	x9, x21, x22
  50:	mov	x23, x0
  54:	str	x8, [x0, x9]
  58:	mov	x8, x0
  5c:	b.eq	78 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x78>  // b.none
  60:	mov	x8, x23
  64:	mov	x9, x22
  68:	ldr	x10, [x9], #8
  6c:	cmp	x21, x9
  70:	str	x10, [x8], #8
  74:	b.ne	68 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x68>  // b.any
  78:	cmp	x25, x21
  7c:	add	x24, x8, #0x8
  80:	b.eq	94 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x94>  // b.none
  84:	ldr	x8, [x21], #8
  88:	cmp	x25, x21
  8c:	str	x8, [x24], #8
  90:	b.ne	84 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>  // b.any
  94:	cbz	x22, a0 <_ZNSt6vectorIN5clang7tooling5RangeESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xa0>
  98:	mov	x0, x22
  9c:	bl	0 <_ZdlPv>
  a0:	add	x8, x23, x20, lsl #3
  a4:	stp	x23, x24, [x19]
  a8:	str	x8, [x19, #16]
  ac:	ldp	x20, x19, [sp, #64]
  b0:	ldp	x22, x21, [sp, #48]
  b4:	ldp	x24, x23, [sp, #32]
  b8:	ldr	x25, [sp, #16]
  bc:	ldp	x29, x30, [sp], #80
  c0:	ret

Disassembly of section .text._ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv:

0000000000000000 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0]
  10:	cbz	w8, 48 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv+0x48>
  14:	mov	x19, x0
  18:	subs	w8, w8, #0x1
  1c:	str	w8, [x0]
  20:	b.eq	30 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv+0x30>  // b.none
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	mov	x0, x19
  34:	bl	0 <_ZN5clang13DiagnosticIDsD1Ev>
  38:	mov	x0, x19
  3c:	ldr	x19, [sp, #16]
  40:	ldp	x29, x30, [sp], #32
  44:	b	0 <_ZdlPv>
  48:	adrp	x0, 0 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv>
  4c:	adrp	x1, 0 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv>
  50:	adrp	x3, 0 <_ZNK4llvm14RefCountedBaseIN5clang13DiagnosticIDsEE7ReleaseEv>
  54:	add	x0, x0, #0x0
  58:	add	x1, x1, #0x0
  5c:	add	x3, x3, #0x0
  60:	mov	w2, #0x50                  	// #80
  64:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv:

0000000000000000 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w8, [x0]
  10:	cbz	w8, 80 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv+0x80>
  14:	mov	x19, x0
  18:	subs	w8, w8, #0x1
  1c:	str	w8, [x0]
  20:	b.eq	30 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv+0x30>  // b.none
  24:	ldr	x19, [sp, #16]
  28:	ldp	x29, x30, [sp], #32
  2c:	ret
  30:	add	x0, x19, #0xa0
  34:	bl	0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  38:	add	x0, x19, #0x88
  3c:	bl	0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  40:	add	x0, x19, #0x70
  44:	bl	0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  48:	ldr	x0, [x19, #80]
  4c:	add	x8, x19, #0x60
  50:	cmp	x0, x8
  54:	b.eq	5c <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv+0x5c>  // b.none
  58:	bl	0 <_ZdlPv>
  5c:	ldr	x0, [x19, #48]
  60:	add	x8, x19, #0x40
  64:	cmp	x0, x8
  68:	b.eq	70 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv+0x70>  // b.none
  6c:	bl	0 <_ZdlPv>
  70:	mov	x0, x19
  74:	ldr	x19, [sp, #16]
  78:	ldp	x29, x30, [sp], #32
  7c:	b	0 <_ZdlPv>
  80:	adrp	x0, 0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  84:	adrp	x1, 0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  88:	adrp	x3, 0 <_ZNK4llvm14RefCountedBaseIN5clang17DiagnosticOptionsEE7ReleaseEv>
  8c:	add	x0, x0, #0x0
  90:	add	x1, x1, #0x0
  94:	add	x3, x3, #0x0
  98:	mov	w2, #0x50                  	// #80
  9c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE:

0000000000000000 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE>:
   0:	adrp	x8, 0 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE>
   4:	ldr	x8, [x8]
   8:	add	x9, x0, #0x70
   c:	str	w1, [x0, #8]
  10:	strb	wzr, [x0, #16]
  14:	add	x8, x8, #0x10
  18:	strb	wzr, [x0, #88]
  1c:	str	x8, [x0]
  20:	str	x9, [x0, #96]
  24:	mov	x8, x2
  28:	ldr	x10, [x8], #16
  2c:	cmp	x10, x8
  30:	b.eq	44 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE+0x44>  // b.none
  34:	str	x10, [x0, #96]
  38:	ldr	x9, [x2, #16]
  3c:	str	x9, [x0, #112]
  40:	b	4c <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE+0x4c>
  44:	ldr	q0, [x10]
  48:	str	q0, [x9]
  4c:	ldr	x10, [x2, #8]
  50:	add	x9, x0, #0x98
  54:	str	x10, [x0, #104]
  58:	ldr	x10, [x2, #32]
  5c:	stp	x8, xzr, [x2]
  60:	strb	wzr, [x2, #16]
  64:	add	x8, x2, #0x38
  68:	stp	x10, x9, [x0, #128]
  6c:	ldr	x10, [x2, #40]
  70:	cmp	x10, x8
  74:	b.eq	88 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE+0x88>  // b.none
  78:	str	x10, [x0, #136]
  7c:	ldr	x9, [x2, #56]
  80:	str	x9, [x0, #152]
  84:	b	90 <_ZN5clang7tooling16ReplacementErrorC2ENS0_17replacement_errorENS0_11ReplacementE+0x90>
  88:	ldr	q0, [x10]
  8c:	str	q0, [x9]
  90:	ldr	x9, [x2, #48]
  94:	mov	w10, #0x1                   	// #1
  98:	str	x9, [x0, #144]
  9c:	stp	x8, xzr, [x2, #40]
  a0:	strb	wzr, [x2, #56]
  a4:	strb	w10, [x0, #168]
  a8:	ret

Disassembly of section .text._ZN4llvm19SmallPtrSetImplBase10insert_impEPKv:

0000000000000000 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x12, x9, [x0, #8]
   c:	mov	x8, x0
  10:	cmp	x9, x12
  14:	b.eq	34 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x34>  // b.none
  18:	mov	x0, x8
  1c:	bl	0 <_ZN4llvm19SmallPtrSetImplBase14insert_imp_bigEPKv>
  20:	and	x11, x1, #0xffffffffffffff00
  24:	and	x8, x1, #0xff
  28:	orr	x1, x11, x8
  2c:	ldp	x29, x30, [sp], #16
  30:	ret
  34:	ldr	w10, [x8, #28]
  38:	cbz	w10, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  3c:	mov	x0, xzr
  40:	add	x13, x9, #0x8
  44:	lsl	x11, x10, #3
  48:	mov	x14, x13
  4c:	ldur	x13, [x13, #-8]
  50:	cmp	x13, x1
  54:	b.eq	cc <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xcc>  // b.none
  58:	cmn	x13, #0x2
  5c:	csel	x0, x12, x0, eq  // eq = none
  60:	subs	x11, x11, #0x8
  64:	add	x13, x14, #0x8
  68:	mov	x12, x14
  6c:	b.ne	48 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x48>  // b.any
  70:	cbz	x0, 98 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x98>
  74:	str	x1, [x0]
  78:	ldr	w9, [x8, #32]
  7c:	ldr	x10, [x8]
  80:	mov	x11, xzr
  84:	sub	w9, w9, #0x1
  88:	add	x10, x10, #0x1
  8c:	str	w9, [x8, #32]
  90:	str	x10, [x8]
  94:	b	c4 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0xc4>
  98:	ldr	w11, [x8, #24]
  9c:	cmp	w10, w11
  a0:	b.cs	18 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x18>  // b.hs, b.nlast
  a4:	add	w12, w10, #0x1
  a8:	str	w12, [x8, #28]
  ac:	str	x1, [x9, x10, lsl #3]
  b0:	ldp	x9, x12, [x8]
  b4:	mov	x11, xzr
  b8:	add	x9, x9, #0x1
  bc:	add	x0, x12, x10, lsl #3
  c0:	str	x9, [x8]
  c4:	mov	w8, #0x1                   	// #1
  c8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>
  cc:	mov	x8, xzr
  d0:	mov	x11, xzr
  d4:	mov	x0, x12
  d8:	b	28 <_ZN4llvm19SmallPtrSetImplBase10insert_impEPKv+0x28>

Disassembly of section .text._ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv:

0000000000000000 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldp	x8, x9, [x0]
   c:	cmp	x8, x9
  10:	b.hi	3c <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x3c>  // b.pmore
  14:	b.eq	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.none
  18:	ldr	x10, [x8]
  1c:	cmn	x10, #0x2
  20:	b.cc	34 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x34>  // b.lo, b.ul, b.last
  24:	add	x8, x8, #0x8
  28:	cmp	x9, x8
  2c:	str	x8, [x0]
  30:	b.ne	18 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv+0x18>  // b.any
  34:	ldp	x29, x30, [sp], #16
  38:	ret
  3c:	adrp	x0, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  40:	adrp	x1, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  44:	adrp	x3, 0 <_ZN4llvm23SmallPtrSetIteratorImpl17AdvanceIfNotValidEv>
  48:	add	x0, x0, #0x0
  4c:	add	x1, x1, #0x0
  50:	add	x3, x3, #0x0
  54:	mov	w2, #0xf8                  	// #248
  58:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x21, x1
  14:	mov	x1, x2
  18:	mov	x2, x3
  1c:	mov	x3, x4
  20:	mov	x20, x0
  24:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  28:	add	x22, x0, #0x20
  2c:	mov	x19, x0
  30:	mov	x0, x20
  34:	mov	x1, x21
  38:	mov	x2, x22
  3c:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  40:	mov	x21, x0
  44:	cbz	x1, 68 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_+0x68>
  48:	mov	x2, x1
  4c:	mov	x0, x20
  50:	mov	x1, x21
  54:	mov	x3, x19
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldp	x22, x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	b	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  68:	mov	x0, x20
  6c:	mov	x1, x22
  70:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE22_M_emplace_hint_uniqueIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEESt17_Rb_tree_iteratorISB_ESt23_Rb_tree_const_iteratorISB_EDpOT_>
  74:	mov	x0, x19
  78:	bl	0 <_ZdlPv>
  7c:	mov	x0, x21
  80:	ldp	x20, x19, [sp, #32]
  84:	ldp	x22, x21, [sp, #16]
  88:	ldp	x29, x30, [sp], #48
  8c:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEEPSt13_Rb_tree_nodeISB_EDpOT_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEEPSt13_Rb_tree_nodeISB_EDpOT_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	w0, #0x70                  	// #112
  10:	mov	x19, x2
  14:	bl	0 <_Znwm>
  18:	ldr	x8, [x19]
  1c:	add	x9, x0, #0x30
  20:	mov	x20, x0
  24:	str	x9, [x0, #32]!
  28:	ldp	x1, x8, [x8]
  2c:	add	x2, x1, x8
  30:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_create_nodeIJRKSt21piecewise_construct_tSt5tupleIJRS7_EESM_IJEEEEEPSt13_Rb_tree_nodeISB_EDpOT_>
  34:	mov	x8, x20
  38:	str	xzr, [x8, #72]!
  3c:	str	xzr, [x20, #64]
  40:	stp	xzr, x8, [x20, #80]
  44:	stp	x8, xzr, [x20, #96]
  48:	mov	x0, x20
  4c:	ldp	x20, x19, [sp, #16]
  50:	ldp	x29, x30, [sp], #32
  54:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	add	x8, x0, #0x8
  14:	mov	x20, x0
  18:	cmp	x8, x1
  1c:	mov	x21, x2
  20:	b.eq	54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x54>  // b.none
  24:	add	x22, x1, #0x20
  28:	mov	x19, x1
  2c:	mov	x0, x21
  30:	mov	x1, x22
  34:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  38:	tbnz	w0, #31, 78 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x78>
  3c:	mov	x0, x22
  40:	mov	x1, x21
  44:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  48:	tbnz	w0, #31, b4 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xb4>
  4c:	mov	x1, xzr
  50:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x114>
  54:	ldr	x8, [x20, #40]
  58:	cbz	x8, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xdc>
  5c:	ldr	x8, [x20, #32]
  60:	mov	x1, x21
  64:	add	x0, x8, #0x20
  68:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  6c:	tbz	w0, #31, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xdc>
  70:	ldr	x1, [x20, #32]
  74:	b	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>
  78:	ldr	x1, [x20, #24]
  7c:	cmp	x1, x19
  80:	b.eq	f8 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf8>  // b.none
  84:	mov	x0, x19
  88:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  8c:	mov	x22, x0
  90:	add	x0, x0, #0x20
  94:	mov	x1, x21
  98:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  9c:	tbz	w0, #31, dc <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xdc>
  a0:	ldr	x8, [x22, #24]
  a4:	cmp	x8, #0x0
  a8:	csel	x8, xzr, x19, eq  // eq = none
  ac:	csel	x1, x22, x19, eq  // eq = none
  b0:	b	110 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x110>
  b4:	ldr	x1, [x20, #32]
  b8:	cmp	x1, x19
  bc:	b.eq	f0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0xf0>  // b.none
  c0:	mov	x0, x19
  c4:	bl	0 <_ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base>
  c8:	mov	x22, x0
  cc:	add	x1, x0, #0x20
  d0:	mov	x0, x21
  d4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  d8:	tbnz	w0, #31, 100 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x100>
  dc:	mov	x0, x20
  e0:	mov	x1, x21
  e4:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_>
  e8:	mov	x19, x0
  ec:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x114>
  f0:	mov	x19, xzr
  f4:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x114>
  f8:	mov	x19, x1
  fc:	b	114 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE29_M_get_insert_hint_unique_posESt23_Rb_tree_const_iteratorISB_ERS7_+0x114>
 100:	ldr	x8, [x19, #24]
 104:	cmp	x8, #0x0
 108:	csel	x8, xzr, x22, eq  // eq = none
 10c:	csel	x1, x19, x22, eq  // eq = none
 110:	mov	x19, x8
 114:	mov	x0, x19
 118:	ldp	x20, x19, [sp, #32]
 11c:	ldp	x22, x21, [sp, #16]
 120:	ldp	x29, x30, [sp], #48
 124:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x19, x3
  14:	mov	x21, x2
  18:	mov	x20, x0
  1c:	cbz	x1, 28 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E+0x28>
  20:	mov	w0, #0x1                   	// #1
  24:	b	44 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E+0x44>
  28:	add	x8, x20, #0x8
  2c:	cmp	x8, x21
  30:	b.eq	20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE14_M_insert_nodeEPSt18_Rb_tree_node_baseSJ_PSt13_Rb_tree_nodeISB_E+0x20>  // b.none
  34:	add	x0, x19, #0x20
  38:	add	x1, x21, #0x20
  3c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  40:	lsr	w0, w0, #31
  44:	add	x3, x20, #0x8
  48:	mov	x1, x19
  4c:	mov	x2, x21
  50:	bl	0 <_ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_>
  54:	ldr	x8, [x20, #40]
  58:	mov	x0, x19
  5c:	ldr	x21, [sp, #16]
  60:	add	x8, x8, #0x1
  64:	str	x8, [x20, #40]
  68:	ldp	x20, x19, [sp, #32]
  6c:	ldp	x29, x30, [sp], #48
  70:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldr	x8, [x0, #16]
  14:	mov	x21, x0
  18:	mov	x20, x1
  1c:	cbz	x8, 54 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x54>
  20:	add	x1, x8, #0x20
  24:	mov	x0, x20
  28:	mov	x19, x8
  2c:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  30:	add	x8, x19, #0x10
  34:	add	x9, x19, #0x18
  38:	cmp	w0, #0x0
  3c:	csel	x8, x8, x9, lt  // lt = tstop
  40:	ldr	x8, [x8]
  44:	cbnz	x8, 20 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x20>
  48:	mov	x22, x19
  4c:	tbz	w0, #31, 70 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x70>
  50:	b	58 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x58>
  54:	add	x19, x21, #0x8
  58:	ldr	x8, [x21, #24]
  5c:	cmp	x8, x19
  60:	b.eq	8c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x8c>  // b.none
  64:	mov	x0, x19
  68:	bl	0 <_ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base>
  6c:	mov	x22, x0
  70:	add	x0, x22, #0x20
  74:	mov	x1, x20
  78:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_>
  7c:	cmp	w0, #0x0
  80:	csel	x0, xzr, x22, lt  // lt = tstop
  84:	csel	x19, x19, xzr, lt  // lt = tstop
  88:	b	90 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_N5clang7tooling12ReplacementsEESt10_Select1stISB_ESt4lessIS5_ESaISB_EE24_M_get_insert_unique_posERS7_+0x90>
  8c:	mov	x0, xzr
  90:	mov	x1, x19
  94:	ldp	x20, x19, [sp, #32]
  98:	ldp	x22, x21, [sp, #16]
  9c:	ldp	x29, x30, [sp], #48
  a0:	ret
