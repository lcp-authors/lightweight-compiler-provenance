In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMBitstreamReader.a_gcc_-O2:

BitstreamReader.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>:
       0:	stp	x29, x30, [sp, #-64]!
       4:	mov	x29, sp
       8:	ldrb	w2, [x1, #8]
       c:	stp	x19, x20, [sp, #16]
      10:	tbnz	w2, #0, 1e4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1e4>
      14:	ubfx	x2, x2, #1, #3
      18:	mov	x19, x8
      1c:	cmp	w2, #0x2
      20:	b.eq	120 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x120>  // b.none
      24:	b.ls	d0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xd0>  // b.plast
      28:	cmp	w2, #0x4
      2c:	b.ne	f8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xf8>  // b.any
      30:	add	x20, sp, #0x30
      34:	mov	w1, #0x6                   	// #6
      38:	mov	x8, x20
      3c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      40:	ldrb	w1, [sp, #56]
      44:	ldrb	w0, [sp, #40]
      48:	and	w2, w1, #0x1
      4c:	and	w1, w1, #0xfffffffd
      50:	strb	w1, [sp, #56]
      54:	bfxil	w0, w2, #0, #1
      58:	orr	w0, w0, #0x2
      5c:	strb	w0, [sp, #40]
      60:	ldr	x0, [sp, #48]
      64:	cbz	w2, 140 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x140>
      68:	str	x0, [sp, #32]
      6c:	mov	x0, x20
      70:	str	xzr, [sp, #48]
      74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      78:	ldrb	w0, [sp, #40]
      7c:	and	w1, w0, #0x1
      80:	bfi	w0, w1, #1, #1
      84:	strb	w0, [sp, #40]
      88:	cbnz	w1, 160 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x160>
      8c:	ldr	w2, [sp, #32]
      90:	tst	w2, #0xffffffc0
      94:	b.ne	204 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x204>  // b.any
      98:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      9c:	add	x1, x1, #0x0
      a0:	ldrb	w0, [x19, #8]
      a4:	ldrb	w1, [x1, w2, uxtw]
      a8:	and	w0, w0, #0xfffffffc
      ac:	orr	w0, w0, #0x2
      b0:	str	x1, [x19]
      b4:	strb	w0, [x19, #8]
      b8:	add	x0, sp, #0x20
      bc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      c0:	mov	x0, x19
      c4:	ldp	x19, x20, [sp, #16]
      c8:	ldp	x29, x30, [sp], #64
      cc:	ret
      d0:	cmp	w2, #0x1
      d4:	b.ne	1cc <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1cc>  // b.any
      d8:	ldr	x1, [x1]
      dc:	cmp	w1, #0x40
      e0:	b.hi	1ac <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1ac>  // b.pmore
      e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
      e8:	mov	x0, x19
      ec:	ldp	x19, x20, [sp, #16]
      f0:	ldp	x29, x30, [sp], #64
      f4:	ret
      f8:	sub	w2, w2, #0x3
      fc:	mov	w0, #0xfd                  	// #253
     100:	tst	w2, w0
     104:	b.ne	1cc <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1cc>  // b.any
     108:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     10c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     110:	add	x1, x1, #0x0
     114:	add	x0, x0, #0x0
     118:	mov	w2, #0x4b                  	// #75
     11c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     120:	ldr	x1, [x1]
     124:	cmp	w1, #0x40
     128:	b.hi	224 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x224>  // b.pmore
     12c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     130:	mov	x0, x19
     134:	ldp	x19, x20, [sp, #16]
     138:	ldp	x29, x30, [sp], #64
     13c:	ret
     140:	str	w0, [sp, #32]
     144:	mov	x0, x20
     148:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     14c:	ldrb	w0, [sp, #40]
     150:	and	w1, w0, #0x1
     154:	bfi	w0, w1, #1, #1
     158:	strb	w0, [sp, #40]
     15c:	cbz	w1, 8c <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x8c>
     160:	ldrb	w2, [x19, #8]
     164:	and	w0, w0, #0xfffffffd
     168:	ldr	x1, [sp, #32]
     16c:	orr	w2, w2, #0x3
     170:	strb	w2, [x19, #8]
     174:	str	xzr, [sp, #32]
     178:	ands	x1, x1, #0xfffffffffffffffe
     17c:	strb	w0, [sp, #40]
     180:	b.ne	1a4 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0x1a4>  // b.any
     184:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     188:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     18c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     190:	add	x3, x3, #0x0
     194:	add	x1, x1, #0x0
     198:	add	x0, x0, #0x0
     19c:	mov	w2, #0x1ce                 	// #462
     1a0:	bl	0 <__assert_fail>
     1a4:	str	x1, [x19]
     1a8:	b	b8 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE+0xb8>
     1ac:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1b0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1b4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1b8:	add	x3, x3, #0x0
     1bc:	add	x1, x1, #0x0
     1c0:	add	x0, x0, #0x0
     1c4:	mov	w2, #0x4d                  	// #77
     1c8:	bl	0 <__assert_fail>
     1cc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1d0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1d4:	add	x1, x1, #0x0
     1d8:	add	x0, x0, #0x0
     1dc:	mov	w2, #0x58                  	// #88
     1e0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
     1e4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1e8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1ec:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     1f0:	add	x3, x3, #0x0
     1f4:	add	x1, x1, #0x0
     1f8:	add	x0, x0, #0x0
     1fc:	mov	w2, #0x45                  	// #69
     200:	bl	0 <__assert_fail>
     204:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     208:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     20c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     210:	add	x3, x3, #0x0
     214:	add	x1, x1, #0x0
     218:	add	x0, x0, #0x0
     21c:	mov	w2, #0x9d                  	// #157
     220:	bl	0 <__assert_fail>
     224:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     228:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     22c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     230:	add	x3, x3, #0x0
     234:	add	x1, x1, #0x0
     238:	add	x0, x0, #0x0
     23c:	mov	w2, #0x50                  	// #80
     240:	bl	0 <__assert_fail>
     244:	nop

0000000000000248 <_ZN4llvm15BitstreamCursor10skipRecordEj>:
     248:	stp	x29, x30, [sp, #-240]!
     24c:	cmp	w1, #0x3
     250:	mov	x29, sp
     254:	stp	x19, x20, [sp, #16]
     258:	mov	x20, x8
     25c:	mov	x19, x0
     260:	stp	x21, x22, [sp, #32]
     264:	b.eq	4b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x268>  // b.none
     268:	ldp	x3, x2, [x0, #40]
     26c:	stp	x23, x24, [sp, #48]
     270:	sub	w1, w1, #0x4
     274:	sub	x2, x2, x3
     278:	cmp	x1, x2, asr #4
     27c:	b.cs	1240 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xff8>  // b.hs, b.nlast
     280:	lsl	x1, x1, #4
     284:	ldr	x22, [x3, x1]
     288:	ldr	w23, [x22, #8]
     28c:	cbz	w23, 1234 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfec>
     290:	ldr	x1, [x22]
     294:	ldrb	w2, [x1, #8]
     298:	tbz	w2, #0, 44c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x204>
     29c:	ldr	w0, [x1]
     2a0:	str	w0, [sp, #100]
     2a4:	cmp	w23, #0x1
     2a8:	b.ls	fc0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd78>  // b.plast
     2ac:	mov	w0, w23
     2b0:	add	x24, sp, #0xe0
     2b4:	stp	x25, x26, [sp, #64]
     2b8:	add	x26, sp, #0xd0
     2bc:	add	x25, sp, #0xc0
     2c0:	add	x1, sp, #0xb0
     2c4:	mov	w21, #0x1                   	// #1
     2c8:	str	x1, [sp, #104]
     2cc:	cmp	w21, w0
     2d0:	mov	w1, w21
     2d4:	b.cs	1210 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfc8>  // b.hs, b.nlast
     2d8:	ldr	x0, [x22]
     2dc:	add	x1, x0, x1, lsl #4
     2e0:	ldrb	w0, [x1, #8]
     2e4:	tbnz	w0, #0, 59c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x354>
     2e8:	ubfx	x0, x0, #1, #3
     2ec:	cmp	w0, #0x3
     2f0:	b.eq	a4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x804>  // b.none
     2f4:	cmp	w0, #0x5
     2f8:	b.ne	5b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x368>  // b.any
     2fc:	mov	x0, x19
     300:	mov	w1, #0x6                   	// #6
     304:	mov	x8, x24
     308:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     30c:	ldrb	w1, [sp, #232]
     310:	ldrb	w0, [sp, #200]
     314:	and	w2, w1, #0x1
     318:	and	w1, w1, #0xfffffffd
     31c:	strb	w1, [sp, #232]
     320:	bfxil	w0, w2, #0, #1
     324:	orr	w0, w0, #0x2
     328:	strb	w0, [sp, #200]
     32c:	ldr	x0, [sp, #224]
     330:	cbz	w2, 648 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x400>
     334:	str	x0, [sp, #192]
     338:	mov	x0, x24
     33c:	str	xzr, [sp, #224]
     340:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     344:	ldrb	w0, [sp, #200]
     348:	and	w1, w0, #0x1
     34c:	bfi	w0, w1, #1, #1
     350:	strb	w0, [sp, #200]
     354:	cbz	w1, 668 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x420>
     358:	ldrb	w1, [sp, #216]
     35c:	and	w0, w0, #0xfffffffd
     360:	ldr	x2, [sp, #192]
     364:	orr	w1, w1, #0x3
     368:	str	xzr, [sp, #192]
     36c:	strb	w0, [sp, #200]
     370:	str	x2, [sp, #208]
     374:	strb	w1, [sp, #216]
     378:	mov	x0, x25
     37c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     380:	ldrb	w0, [sp, #216]
     384:	and	w1, w0, #0x1
     388:	bfi	w0, w1, #1, #1
     38c:	strb	w0, [sp, #216]
     390:	cbnz	w1, 1170 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf28>
     394:	ldr	w1, [x19, #32]
     398:	ldr	w0, [sp, #208]
     39c:	cmp	w1, #0x1f
     3a0:	b.hi	b80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x938>  // b.pmore
     3a4:	mov	x3, #0x0                   	// #0
     3a8:	str	wzr, [x19, #32]
     3ac:	ldp	x2, x1, [x19, #8]
     3b0:	add	w0, w0, #0x3
     3b4:	lsl	x0, x0, #3
     3b8:	and	x0, x0, #0xffffffe0
     3bc:	add	x1, x0, x1, lsl #3
     3c0:	sub	x1, x1, x3
     3c4:	lsr	x0, x1, #3
     3c8:	cmp	x2, x1, lsr #3
     3cc:	b.cc	119c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf54>  // b.lo, b.ul, b.last
     3d0:	and	x0, x0, #0xfffffffffffffff8
     3d4:	and	w1, w1, #0x3f
     3d8:	cmp	x2, x0
     3dc:	b.cc	1258 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1010>  // b.lo, b.ul, b.last
     3e0:	str	x0, [x19, #16]
     3e4:	str	wzr, [x19, #32]
     3e8:	cbz	w1, 908 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c0>
     3ec:	mov	x0, x19
     3f0:	mov	x8, x24
     3f4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     3f8:	ldrb	w0, [sp, #232]
     3fc:	and	w1, w0, #0x1
     400:	bfi	w0, w1, #1, #1
     404:	strb	w0, [sp, #232]
     408:	cbnz	w1, cc8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa80>
     40c:	mov	x0, #0x1                   	// #1
     410:	str	x0, [sp, #192]
     414:	mov	x0, x24
     418:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     41c:	ldr	x0, [sp, #192]
     420:	ands	x0, x0, #0xfffffffffffffffe
     424:	b.eq	908 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6c0>  // b.none
     428:	ldrb	w1, [x20, #8]
     42c:	str	x0, [x20]
     430:	orr	w0, w1, #0x3
     434:	strb	w0, [x20, #8]
     438:	add	x0, sp, #0xd0
     43c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     440:	ldp	x23, x24, [sp, #48]
     444:	ldp	x25, x26, [sp, #64]
     448:	b	49c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x254>
     44c:	ubfx	x2, x2, #1, #3
     450:	mov	w3, #0xfd                  	// #253
     454:	sub	w2, w2, #0x3
     458:	tst	w2, w3
     45c:	b.ne	8a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x65c>  // b.any
     460:	bl	0 <_ZNSt3_V216generic_categoryEv>
     464:	mov	x1, x0
     468:	add	x8, sp, #0xe0
     46c:	mov	x0, #0x54                  	// #84
     470:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     474:	add	x2, x2, #0x0
     478:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
     47c:	ldrb	w1, [x20, #8]
     480:	ldr	x0, [sp, #224]
     484:	orr	w1, w1, #0x3
     488:	strb	w1, [x20, #8]
     48c:	ands	x0, x0, #0xfffffffffffffffe
     490:	b.eq	ce4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa9c>  // b.none
     494:	ldp	x23, x24, [sp, #48]
     498:	str	x0, [x20]
     49c:	mov	x0, x20
     4a0:	ldp	x19, x20, [sp, #16]
     4a4:	ldp	x21, x22, [sp, #32]
     4a8:	ldp	x29, x30, [sp], #240
     4ac:	ret
     4b0:	add	x21, sp, #0xe0
     4b4:	mov	w1, #0x6                   	// #6
     4b8:	mov	x8, x21
     4bc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     4c0:	ldrb	w1, [sp, #232]
     4c4:	ldrb	w0, [sp, #200]
     4c8:	and	w2, w1, #0x1
     4cc:	and	w1, w1, #0xfffffffd
     4d0:	strb	w1, [sp, #232]
     4d4:	bfxil	w0, w2, #0, #1
     4d8:	orr	w0, w0, #0x2
     4dc:	strb	w0, [sp, #200]
     4e0:	ldr	x0, [sp, #224]
     4e4:	cbz	w2, 5fc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3b4>
     4e8:	str	x0, [sp, #192]
     4ec:	mov	x0, x21
     4f0:	str	xzr, [sp, #224]
     4f4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     4f8:	ldrb	w0, [sp, #200]
     4fc:	and	w1, w0, #0x1
     500:	bfi	w0, w1, #1, #1
     504:	strb	w0, [sp, #200]
     508:	cbz	w1, 61c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3d4>
     50c:	ldrb	w1, [sp, #120]
     510:	add	x22, sp, #0xc0
     514:	ldr	x2, [sp, #192]
     518:	and	w0, w0, #0xfffffffd
     51c:	orr	w1, w1, #0x3
     520:	str	x2, [sp, #112]
     524:	strb	w1, [sp, #120]
     528:	str	xzr, [sp, #192]
     52c:	strb	w0, [sp, #200]
     530:	mov	x0, x22
     534:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     538:	ldrb	w0, [sp, #120]
     53c:	and	w1, w0, #0x1
     540:	bfi	w0, w1, #1, #1
     544:	strb	w0, [sp, #120]
     548:	cbz	w1, 768 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x520>
     54c:	ldrb	w2, [x20, #8]
     550:	and	w0, w0, #0xfffffffd
     554:	ldr	x1, [sp, #112]
     558:	orr	w2, w2, #0x3
     55c:	strb	w2, [x20, #8]
     560:	str	xzr, [sp, #112]
     564:	ands	x1, x1, #0xfffffffffffffffe
     568:	strb	w0, [sp, #120]
     56c:	b.ne	918 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6d0>  // b.any
     570:	stp	x23, x24, [sp, #48]
     574:	stp	x25, x26, [sp, #64]
     578:	stp	x27, x28, [sp, #80]
     57c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     580:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     584:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     588:	add	x3, x3, #0x0
     58c:	add	x1, x1, #0x0
     590:	add	x0, x0, #0x0
     594:	mov	w2, #0x1ce                 	// #462
     598:	bl	0 <__assert_fail>
     59c:	add	w21, w21, #0x1
     5a0:	cmp	w21, w23
     5a4:	b.cs	fbc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd74>  // b.hs, b.nlast
     5a8:	ldr	w0, [x22, #8]
     5ac:	b	2cc <_ZN4llvm15BitstreamCursor10skipRecordEj+0x84>
     5b0:	mov	x0, x19
     5b4:	mov	x8, x25
     5b8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     5bc:	ldrb	w0, [sp, #200]
     5c0:	and	w1, w0, #0x1
     5c4:	bfi	w0, w1, #1, #1
     5c8:	strb	w0, [sp, #200]
     5cc:	cbz	w1, cb8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa70>
     5d0:	ldrb	w2, [x20, #8]
     5d4:	and	w0, w0, #0xfffffffd
     5d8:	ldr	x1, [sp, #192]
     5dc:	orr	w2, w2, #0x3
     5e0:	strb	w2, [x20, #8]
     5e4:	str	xzr, [sp, #192]
     5e8:	ands	x1, x1, #0xfffffffffffffffe
     5ec:	strb	w0, [sp, #200]
     5f0:	b.ne	740 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4f8>  // b.any
     5f4:	stp	x27, x28, [sp, #80]
     5f8:	b	57c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>
     5fc:	str	w0, [sp, #192]
     600:	mov	x0, x21
     604:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     608:	ldrb	w0, [sp, #200]
     60c:	and	w1, w0, #0x1
     610:	bfi	w0, w1, #1, #1
     614:	strb	w0, [sp, #200]
     618:	cbnz	w1, 50c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2c4>
     61c:	stp	x23, x24, [sp, #48]
     620:	ldr	w24, [sp, #192]
     624:	tbnz	w24, #5, 948 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x700>
     628:	ldrb	w0, [sp, #120]
     62c:	add	x22, sp, #0xc0
     630:	str	w24, [sp, #112]
     634:	and	w0, w0, #0xfffffffc
     638:	orr	w0, w0, #0x2
     63c:	strb	w0, [sp, #120]
     640:	ldp	x23, x24, [sp, #48]
     644:	b	530 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2e8>
     648:	str	w0, [sp, #192]
     64c:	mov	x0, x24
     650:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     654:	ldrb	w0, [sp, #200]
     658:	and	w1, w0, #0x1
     65c:	bfi	w0, w1, #1, #1
     660:	strb	w0, [sp, #200]
     664:	cbnz	w1, 358 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x110>
     668:	stp	x27, x28, [sp, #80]
     66c:	ldr	w27, [sp, #192]
     670:	tbz	w27, #5, a30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7e8>
     674:	and	w27, w27, #0x1f
     678:	mov	w28, #0x0                   	// #0
     67c:	b	6f8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x4b0>
     680:	str	w0, [sp, #224]
     684:	ldrb	w0, [sp, #200]
     688:	tbnz	w0, #1, f4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd04>
     68c:	mov	x0, x25
     690:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     694:	ldrb	w1, [sp, #232]
     698:	ldrb	w0, [sp, #200]
     69c:	and	w2, w1, #0x1
     6a0:	and	w1, w1, #0xfffffffd
     6a4:	strb	w1, [sp, #232]
     6a8:	bfxil	w0, w2, #0, #1
     6ac:	orr	w0, w0, #0x2
     6b0:	strb	w0, [sp, #200]
     6b4:	cbnz	w2, 938 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6f0>
     6b8:	ldr	w0, [sp, #224]
     6bc:	str	w0, [sp, #192]
     6c0:	mov	x0, x24
     6c4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6c8:	mov	x0, x26
     6cc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     6d0:	ldrb	w0, [sp, #200]
     6d4:	and	w1, w0, #0x1
     6d8:	bfi	w0, w1, #1, #1
     6dc:	strb	w0, [sp, #200]
     6e0:	cbnz	w1, 10c8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe80>
     6e4:	ldr	w1, [sp, #192]
     6e8:	and	w0, w1, #0x1f
     6ec:	lsl	w0, w0, w28
     6f0:	orr	w27, w27, w0
     6f4:	tbz	w1, #5, a30 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7e8>
     6f8:	mov	x0, x19
     6fc:	mov	w1, #0x6                   	// #6
     700:	mov	x8, x26
     704:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     708:	ldrb	w1, [sp, #216]
     70c:	add	w28, w28, #0x5
     710:	ldrb	w0, [sp, #232]
     714:	and	w2, w1, #0x1
     718:	and	w1, w1, #0xfffffffd
     71c:	strb	w1, [sp, #216]
     720:	bfxil	w0, w2, #0, #1
     724:	orr	w0, w0, #0x2
     728:	strb	w0, [sp, #232]
     72c:	ldr	x0, [sp, #208]
     730:	cbz	w2, 680 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x438>
     734:	str	xzr, [sp, #208]
     738:	str	x0, [sp, #224]
     73c:	b	684 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x43c>
     740:	str	x1, [x20]
     744:	mov	x0, x25
     748:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     74c:	mov	x0, x20
     750:	ldp	x19, x20, [sp, #16]
     754:	ldp	x21, x22, [sp, #32]
     758:	ldp	x23, x24, [sp, #48]
     75c:	ldp	x25, x26, [sp, #64]
     760:	ldp	x29, x30, [sp], #240
     764:	ret
     768:	mov	x0, x19
     76c:	mov	w1, #0x6                   	// #6
     770:	mov	x8, x21
     774:	stp	x23, x24, [sp, #48]
     778:	stp	x25, x26, [sp, #64]
     77c:	ldr	w25, [sp, #112]
     780:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     784:	ldrb	w1, [sp, #232]
     788:	ldrb	w0, [sp, #200]
     78c:	and	w2, w1, #0x1
     790:	and	w1, w1, #0xfffffffd
     794:	strb	w1, [sp, #232]
     798:	bfxil	w0, w2, #0, #1
     79c:	orr	w0, w0, #0x2
     7a0:	strb	w0, [sp, #200]
     7a4:	ldr	x0, [sp, #224]
     7a8:	cbnz	w2, cac <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa64>
     7ac:	str	w0, [sp, #192]
     7b0:	mov	x0, x21
     7b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7b8:	ldrb	w0, [sp, #200]
     7bc:	and	w1, w0, #0x1
     7c0:	bfi	w0, w1, #1, #1
     7c4:	strb	w0, [sp, #200]
     7c8:	cbnz	w1, ba0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x958>
     7cc:	ldr	w24, [sp, #192]
     7d0:	tbz	w24, #5, d24 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xadc>
     7d4:	and	w24, w24, #0x1f
     7d8:	add	x23, sp, #0xd0
     7dc:	mov	w26, #0x0                   	// #0
     7e0:	b	85c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x614>
     7e4:	str	w0, [sp, #224]
     7e8:	ldrb	w0, [sp, #200]
     7ec:	tbnz	w0, #1, f40 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcf8>
     7f0:	mov	x0, x22
     7f4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     7f8:	ldrb	w1, [sp, #232]
     7fc:	ldrb	w0, [sp, #200]
     800:	and	w2, w1, #0x1
     804:	and	w1, w1, #0xfffffffd
     808:	strb	w1, [sp, #232]
     80c:	bfxil	w0, w2, #0, #1
     810:	orr	w0, w0, #0x2
     814:	strb	w0, [sp, #200]
     818:	cbnz	w2, e98 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc50>
     81c:	ldr	w0, [sp, #224]
     820:	str	w0, [sp, #192]
     824:	mov	x0, x21
     828:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     82c:	mov	x0, x23
     830:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     834:	ldrb	w0, [sp, #200]
     838:	and	w1, w0, #0x1
     83c:	bfi	w0, w1, #1, #1
     840:	strb	w0, [sp, #200]
     844:	cbnz	w1, ba0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x958>
     848:	ldr	w1, [sp, #192]
     84c:	and	w0, w1, #0x1f
     850:	lsl	w0, w0, w26
     854:	orr	w24, w24, w0
     858:	tbz	w1, #5, d24 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xadc>
     85c:	mov	x0, x19
     860:	mov	w1, #0x6                   	// #6
     864:	mov	x8, x23
     868:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     86c:	ldrb	w1, [sp, #216]
     870:	add	w26, w26, #0x5
     874:	ldrb	w0, [sp, #232]
     878:	and	w2, w1, #0x1
     87c:	and	w1, w1, #0xfffffffd
     880:	strb	w1, [sp, #216]
     884:	bfxil	w0, w2, #0, #1
     888:	orr	w0, w0, #0x2
     88c:	strb	w0, [sp, #232]
     890:	ldr	x0, [sp, #208]
     894:	cbz	w2, 7e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x59c>
     898:	str	xzr, [sp, #208]
     89c:	str	x0, [sp, #224]
     8a0:	b	7e8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5a0>
     8a4:	add	x21, sp, #0xa0
     8a8:	mov	x8, x21
     8ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     8b0:	ldrb	w0, [sp, #168]
     8b4:	and	w1, w0, #0x1
     8b8:	bfi	w0, w1, #1, #1
     8bc:	strb	w0, [sp, #168]
     8c0:	cbz	w1, c94 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa4c>
     8c4:	ldrb	w2, [x20, #8]
     8c8:	and	w0, w0, #0xfffffffd
     8cc:	ldr	x1, [sp, #160]
     8d0:	orr	w2, w2, #0x3
     8d4:	strb	w2, [x20, #8]
     8d8:	str	xzr, [sp, #160]
     8dc:	ands	x1, x1, #0xfffffffffffffffe
     8e0:	strb	w0, [sp, #168]
     8e4:	b.ne	8f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6ac>  // b.any
     8e8:	stp	x25, x26, [sp, #64]
     8ec:	stp	x27, x28, [sp, #80]
     8f0:	b	57c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>
     8f4:	str	x1, [x20]
     8f8:	mov	x0, x21
     8fc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     900:	ldp	x23, x24, [sp, #48]
     904:	b	49c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x254>
     908:	add	w21, w21, #0x1
     90c:	mov	x0, x26
     910:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     914:	b	5a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x358>
     918:	str	x1, [x20]
     91c:	add	x0, sp, #0x70
     920:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     924:	mov	x0, x20
     928:	ldp	x19, x20, [sp, #16]
     92c:	ldp	x21, x22, [sp, #32]
     930:	ldp	x29, x30, [sp], #240
     934:	ret
     938:	ldr	x0, [sp, #224]
     93c:	str	x0, [sp, #192]
     940:	str	xzr, [sp, #224]
     944:	b	6c0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x478>
     948:	and	w24, w24, #0x1f
     94c:	add	x23, sp, #0xd0
     950:	add	x22, sp, #0xc0
     954:	stp	x25, x26, [sp, #64]
     958:	mov	w25, #0x0                   	// #0
     95c:	b	9d8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x790>
     960:	str	w0, [sp, #224]
     964:	ldrb	w0, [sp, #200]
     968:	tbnz	w0, #1, f40 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcf8>
     96c:	mov	x0, x22
     970:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     974:	ldrb	w1, [sp, #232]
     978:	ldrb	w0, [sp, #200]
     97c:	and	w2, w1, #0x1
     980:	and	w1, w1, #0xfffffffd
     984:	strb	w1, [sp, #232]
     988:	bfxil	w0, w2, #0, #1
     98c:	orr	w0, w0, #0x2
     990:	strb	w0, [sp, #200]
     994:	cbnz	w2, a20 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x7d8>
     998:	ldr	w0, [sp, #224]
     99c:	str	w0, [sp, #192]
     9a0:	mov	x0, x21
     9a4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9a8:	mov	x0, x23
     9ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9b0:	ldrb	w0, [sp, #200]
     9b4:	and	w1, w0, #0x1
     9b8:	bfi	w0, w1, #1, #1
     9bc:	strb	w0, [sp, #200]
     9c0:	cbnz	w1, 109c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe54>
     9c4:	ldr	w1, [sp, #192]
     9c8:	and	w0, w1, #0x1f
     9cc:	lsl	w0, w0, w25
     9d0:	orr	w24, w24, w0
     9d4:	tbz	w1, #5, 107c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe34>
     9d8:	mov	x0, x19
     9dc:	mov	w1, #0x6                   	// #6
     9e0:	mov	x8, x23
     9e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     9e8:	ldrb	w1, [sp, #216]
     9ec:	add	w25, w25, #0x5
     9f0:	ldrb	w0, [sp, #232]
     9f4:	and	w2, w1, #0x1
     9f8:	and	w1, w1, #0xfffffffd
     9fc:	strb	w1, [sp, #216]
     a00:	bfxil	w0, w2, #0, #1
     a04:	orr	w0, w0, #0x2
     a08:	strb	w0, [sp, #232]
     a0c:	ldr	x0, [sp, #208]
     a10:	cbz	w2, 960 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x718>
     a14:	str	xzr, [sp, #208]
     a18:	str	x0, [sp, #224]
     a1c:	b	964 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x71c>
     a20:	ldr	x0, [sp, #224]
     a24:	str	x0, [sp, #192]
     a28:	str	xzr, [sp, #224]
     a2c:	b	9a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x758>
     a30:	ldrb	w0, [sp, #216]
     a34:	str	w27, [sp, #208]
     a38:	and	w0, w0, #0xfffffffc
     a3c:	orr	w0, w0, #0x2
     a40:	strb	w0, [sp, #216]
     a44:	ldp	x27, x28, [sp, #80]
     a48:	b	378 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x130>
     a4c:	mov	x0, x19
     a50:	mov	w1, #0x6                   	// #6
     a54:	mov	x8, x24
     a58:	stp	x27, x28, [sp, #80]
     a5c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a60:	ldrb	w1, [sp, #232]
     a64:	ldrb	w0, [sp, #200]
     a68:	and	w2, w1, #0x1
     a6c:	and	w1, w1, #0xfffffffd
     a70:	strb	w1, [sp, #232]
     a74:	bfxil	w0, w2, #0, #1
     a78:	orr	w0, w0, #0x2
     a7c:	strb	w0, [sp, #200]
     a80:	ldr	x0, [sp, #224]
     a84:	cbz	w2, d1c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xad4>
     a88:	str	x0, [sp, #192]
     a8c:	str	xzr, [sp, #224]
     a90:	mov	x0, x24
     a94:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     a98:	ldrb	w0, [sp, #200]
     a9c:	and	w1, w0, #0x1
     aa0:	bfi	w0, w1, #1, #1
     aa4:	strb	w0, [sp, #200]
     aa8:	cbnz	w1, d60 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb18>
     aac:	ldr	w28, [sp, #192]
     ab0:	tbz	w28, #5, fe0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd98>
     ab4:	and	w28, w28, #0x1f
     ab8:	mov	w27, #0x0                   	// #0
     abc:	b	b38 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8f0>
     ac0:	str	w0, [sp, #224]
     ac4:	ldrb	w0, [sp, #200]
     ac8:	tbnz	w0, #1, f4c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd04>
     acc:	mov	x0, x25
     ad0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ad4:	ldrb	w1, [sp, #232]
     ad8:	ldrb	w0, [sp, #200]
     adc:	and	w2, w1, #0x1
     ae0:	and	w1, w1, #0xfffffffd
     ae4:	strb	w1, [sp, #232]
     ae8:	bfxil	w0, w2, #0, #1
     aec:	orr	w0, w0, #0x2
     af0:	strb	w0, [sp, #200]
     af4:	cbnz	w2, f54 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd0c>
     af8:	ldr	w0, [sp, #224]
     afc:	str	w0, [sp, #192]
     b00:	mov	x0, x24
     b04:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b08:	mov	x0, x26
     b0c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b10:	ldrb	w0, [sp, #200]
     b14:	and	w1, w0, #0x1
     b18:	bfi	w0, w1, #1, #1
     b1c:	strb	w0, [sp, #200]
     b20:	cbnz	w1, d60 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb18>
     b24:	ldr	w1, [sp, #192]
     b28:	and	w0, w1, #0x1f
     b2c:	lsl	w0, w0, w27
     b30:	orr	w28, w28, w0
     b34:	tbz	w1, #5, fe0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd98>
     b38:	mov	x0, x19
     b3c:	mov	w1, #0x6                   	// #6
     b40:	mov	x8, x26
     b44:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     b48:	ldrb	w1, [sp, #216]
     b4c:	add	w27, w27, #0x5
     b50:	ldrb	w0, [sp, #232]
     b54:	and	w2, w1, #0x1
     b58:	and	w1, w1, #0xfffffffd
     b5c:	strb	w1, [sp, #216]
     b60:	bfxil	w0, w2, #0, #1
     b64:	orr	w0, w0, #0x2
     b68:	strb	w0, [sp, #232]
     b6c:	ldr	x0, [sp, #208]
     b70:	cbz	w2, ac0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x878>
     b74:	str	xzr, [sp, #208]
     b78:	str	x0, [sp, #224]
     b7c:	b	ac4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x87c>
     b80:	ldr	x2, [x19, #24]
     b84:	sub	w1, w1, #0x20
     b88:	mov	w4, #0x20                  	// #32
     b8c:	mov	x3, #0x20                  	// #32
     b90:	str	w4, [x19, #32]
     b94:	lsr	x1, x2, x1
     b98:	str	x1, [x19, #24]
     b9c:	b	3ac <_ZN4llvm15BitstreamCursor10skipRecordEj+0x164>
     ba0:	ldrb	w1, [sp, #136]
     ba4:	and	w0, w0, #0xfffffffd
     ba8:	ldr	x2, [sp, #192]
     bac:	orr	w1, w1, #0x3
     bb0:	str	x2, [sp, #128]
     bb4:	strb	w1, [sp, #136]
     bb8:	str	xzr, [sp, #192]
     bbc:	strb	w0, [sp, #200]
     bc0:	mov	x0, x22
     bc4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     bc8:	ldrb	w0, [sp, #136]
     bcc:	and	w1, w0, #0x1
     bd0:	bfi	w0, w1, #1, #1
     bd4:	strb	w0, [sp, #136]
     bd8:	cbnz	w1, d10 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xac8>
     bdc:	ldr	w24, [sp, #128]
     be0:	add	x23, sp, #0xd0
     be4:	add	x26, sp, #0x90
     be8:	mov	w22, #0x0                   	// #0
     bec:	cbz	w24, c6c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa24>
     bf0:	stp	x27, x28, [sp, #80]
     bf4:	mov	x0, x19
     bf8:	mov	w1, #0x6                   	// #6
     bfc:	mov	x8, x23
     c00:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c04:	ldrb	w0, [sp, #216]
     c08:	and	w1, w0, #0x1
     c0c:	bfi	w0, w1, #1, #1
     c10:	strb	w0, [sp, #216]
     c14:	cbnz	w1, d3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xaf4>
     c18:	ldr	x27, [sp, #208]
     c1c:	tbnz	w27, #5, ea8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc60>
     c20:	ldrb	w0, [sp, #152]
     c24:	and	x27, x27, #0xffffffff
     c28:	str	x27, [sp, #144]
     c2c:	and	w0, w0, #0xfffffffc
     c30:	orr	w0, w0, #0x2
     c34:	strb	w0, [sp, #152]
     c38:	mov	x0, x23
     c3c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c40:	ldrb	w0, [sp, #152]
     c44:	and	w1, w0, #0x1
     c48:	bfi	w0, w1, #1, #1
     c4c:	strb	w0, [sp, #152]
     c50:	cbnz	w1, 1120 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xed8>
     c54:	add	w22, w22, #0x1
     c58:	mov	x0, x26
     c5c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c60:	cmp	w24, w22
     c64:	b.ne	bf4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9ac>  // b.any
     c68:	ldp	x27, x28, [sp, #80]
     c6c:	str	w25, [x20]
     c70:	ldrb	w0, [x20, #8]
     c74:	and	w0, w0, #0xfffffffc
     c78:	orr	w0, w0, #0x2
     c7c:	strb	w0, [x20, #8]
     c80:	add	x0, sp, #0x80
     c84:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     c88:	ldp	x23, x24, [sp, #48]
     c8c:	ldp	x25, x26, [sp, #64]
     c90:	b	91c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x6d4>
     c94:	ldr	w1, [sp, #160]
     c98:	mov	x0, x21
     c9c:	str	w1, [sp, #100]
     ca0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ca4:	ldr	w23, [x22, #8]
     ca8:	b	2a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5c>
     cac:	str	x0, [sp, #192]
     cb0:	str	xzr, [sp, #224]
     cb4:	b	7b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x568>
     cb8:	add	w21, w21, #0x1
     cbc:	mov	x0, x25
     cc0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cc4:	b	5a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x358>
     cc8:	ldr	x1, [sp, #224]
     ccc:	and	w0, w0, #0xfffffffd
     cd0:	str	xzr, [sp, #224]
     cd4:	orr	x1, x1, #0x1
     cd8:	str	x1, [sp, #192]
     cdc:	strb	w0, [sp, #232]
     ce0:	b	414 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1cc>
     ce4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ce8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cec:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     cf0:	add	x3, x3, #0x0
     cf4:	add	x1, x1, #0x0
     cf8:	add	x0, x0, #0x0
     cfc:	mov	w2, #0x1ce                 	// #462
     d00:	stp	x25, x26, [sp, #64]
     d04:	stp	x27, x28, [sp, #80]
     d08:	str	xzr, [sp, #224]
     d0c:	bl	0 <__assert_fail>
     d10:	add	x0, sp, #0x80
     d14:	stp	x27, x28, [sp, #80]
     d18:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d1c:	str	w0, [sp, #192]
     d20:	b	a90 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x848>
     d24:	ldrb	w0, [sp, #136]
     d28:	str	w24, [sp, #128]
     d2c:	and	w0, w0, #0xfffffffc
     d30:	orr	w0, w0, #0x2
     d34:	strb	w0, [sp, #136]
     d38:	b	bc0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x978>
     d3c:	ldrb	w1, [sp, #152]
     d40:	and	w0, w0, #0xfffffffd
     d44:	ldr	x2, [sp, #208]
     d48:	orr	w1, w1, #0x3
     d4c:	str	x2, [sp, #144]
     d50:	strb	w1, [sp, #152]
     d54:	str	xzr, [sp, #208]
     d58:	strb	w0, [sp, #216]
     d5c:	b	c38 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9f0>
     d60:	ldrb	w1, [sp, #184]
     d64:	and	w0, w0, #0xfffffffd
     d68:	ldr	x2, [sp, #192]
     d6c:	orr	w1, w1, #0x3
     d70:	str	x2, [sp, #176]
     d74:	strb	w1, [sp, #184]
     d78:	str	xzr, [sp, #192]
     d7c:	strb	w0, [sp, #200]
     d80:	mov	x0, x25
     d84:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     d88:	ldrb	w0, [sp, #184]
     d8c:	and	w1, w0, #0x1
     d90:	bfi	w0, w1, #1, #1
     d94:	strb	w0, [sp, #184]
     d98:	cbnz	w1, 11b0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf68>
     d9c:	add	w0, w21, #0x2
     da0:	ldr	w27, [sp, #176]
     da4:	cmp	w0, w23
     da8:	b.ne	12a4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x105c>  // b.any
     dac:	ldr	w0, [x22, #8]
     db0:	add	w21, w21, #0x1
     db4:	cmp	x21, x0
     db8:	b.cs	1214 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfcc>  // b.hs, b.nlast
     dbc:	ldr	x1, [x22]
     dc0:	lsl	x21, x21, #4
     dc4:	add	x28, x1, x21
     dc8:	ldrb	w0, [x28, #8]
     dcc:	tbnz	w0, #0, 12c4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x107c>
     dd0:	ubfx	x0, x0, #1, #3
     dd4:	cmp	w0, #0x2
     dd8:	b.eq	ff8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xdb0>  // b.none
     ddc:	cmp	w0, #0x4
     de0:	b.ne	e80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc38>  // b.any
     de4:	ldp	x3, x1, [x19, #8]
     de8:	add	w27, w27, w27, lsl #1
     dec:	ldr	w2, [x19, #32]
     df0:	lsl	w0, w27, #1
     df4:	add	x0, x0, x1, lsl #3
     df8:	sub	x0, x0, x2
     dfc:	and	w1, w0, #0x3f
     e00:	lsr	x2, x0, #3
     e04:	and	x2, x2, #0xfffffffffffffff8
     e08:	cmp	x2, x3
     e0c:	b.hi	125c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1014>  // b.pmore
     e10:	str	x2, [x19, #16]
     e14:	str	wzr, [x19, #32]
     e18:	cbz	w1, fa8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>
     e1c:	mov	x0, x19
     e20:	mov	x8, x24
     e24:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e28:	ldrb	w0, [sp, #232]
     e2c:	and	w1, w0, #0x1
     e30:	bfi	w0, w1, #1, #1
     e34:	strb	w0, [sp, #232]
     e38:	cbnz	w1, 10f0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xea8>
     e3c:	mov	x0, #0x1                   	// #1
     e40:	str	x0, [sp, #208]
     e44:	mov	x0, x24
     e48:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e4c:	ldr	x0, [sp, #208]
     e50:	ands	x0, x0, #0xfffffffffffffffe
     e54:	b.eq	fa8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>  // b.none
     e58:	ldrb	w1, [x20, #8]
     e5c:	str	x0, [x20]
     e60:	orr	w0, w1, #0x3
     e64:	strb	w0, [x20, #8]
     e68:	add	x0, sp, #0xb0
     e6c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e70:	ldp	x23, x24, [sp, #48]
     e74:	ldp	x25, x26, [sp, #64]
     e78:	ldp	x27, x28, [sp, #80]
     e7c:	b	49c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x254>
     e80:	cmp	w0, #0x1
     e84:	b.eq	f64 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd1c>  // b.none
     e88:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     e8c:	mov	w1, #0x1                   	// #1
     e90:	add	x0, x0, #0x0
     e94:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
     e98:	ldr	x0, [sp, #224]
     e9c:	str	x0, [sp, #192]
     ea0:	str	xzr, [sp, #224]
     ea4:	b	824 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x5dc>
     ea8:	and	x27, x27, #0x1f
     eac:	mov	w28, #0x0                   	// #0
     eb0:	b	f1c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xcd4>
     eb4:	mov	x0, x23
     eb8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ebc:	ldrb	w1, [sp, #232]
     ec0:	ldrb	w0, [sp, #216]
     ec4:	and	w2, w1, #0x1
     ec8:	and	w1, w1, #0xfffffffd
     ecc:	strb	w1, [sp, #232]
     ed0:	bfxil	w0, w2, #0, #1
     ed4:	orr	w0, w0, #0x2
     ed8:	strb	w0, [sp, #216]
     edc:	ldr	x0, [sp, #224]
     ee0:	str	x0, [sp, #208]
     ee4:	cbz	w2, eec <_ZN4llvm15BitstreamCursor10skipRecordEj+0xca4>
     ee8:	str	xzr, [sp, #224]
     eec:	mov	x0, x21
     ef0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     ef4:	ldrb	w0, [sp, #216]
     ef8:	and	w1, w0, #0x1
     efc:	bfi	w0, w1, #1, #1
     f00:	strb	w0, [sp, #216]
     f04:	cbnz	w1, d3c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xaf4>
     f08:	ldr	x1, [sp, #208]
     f0c:	and	x0, x1, #0x1f
     f10:	lsl	x0, x0, x28
     f14:	orr	x27, x27, x0
     f18:	tbz	w1, #5, 1158 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf10>
     f1c:	mov	x0, x19
     f20:	mov	x8, x21
     f24:	mov	w1, #0x6                   	// #6
     f28:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f2c:	ldrb	w0, [sp, #216]
     f30:	add	w28, w28, #0x5
     f34:	tbz	w0, #1, eb4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc6c>
     f38:	mov	x0, x23
     f3c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f40:	mov	x0, x22
     f44:	stp	x27, x28, [sp, #80]
     f48:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f4c:	mov	x0, x25
     f50:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     f54:	ldr	x0, [sp, #224]
     f58:	str	x0, [sp, #192]
     f5c:	str	xzr, [sp, #224]
     f60:	b	b00 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x8b8>
     f64:	ldr	x2, [x1, x21]
     f68:	cmp	w2, #0x40
     f6c:	b.hi	12e4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x109c>  // b.pmore
     f70:	ldp	x3, x1, [x19, #8]
     f74:	mov	w0, w27
     f78:	ldr	w4, [x19, #32]
     f7c:	lsl	x1, x1, #3
     f80:	sub	x1, x1, x4
     f84:	madd	x0, x0, x2, x1
     f88:	and	w1, w0, #0x3f
     f8c:	lsr	x0, x0, #3
     f90:	and	x0, x0, #0xfffffffffffffff8
     f94:	cmp	x0, x3
     f98:	b.hi	125c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1014>  // b.pmore
     f9c:	str	x0, [x19, #16]
     fa0:	str	wzr, [x19, #32]
     fa4:	cbnz	w1, e1c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbd4>
     fa8:	ldr	x0, [sp, #104]
     fac:	mov	w21, w23
     fb0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
     fb4:	ldp	x27, x28, [sp, #80]
     fb8:	b	5a0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x358>
     fbc:	ldp	x25, x26, [sp, #64]
     fc0:	ldrb	w0, [x20, #8]
     fc4:	ldr	w1, [sp, #100]
     fc8:	and	w0, w0, #0xfffffffc
     fcc:	orr	w0, w0, #0x2
     fd0:	strb	w0, [x20, #8]
     fd4:	ldp	x23, x24, [sp, #48]
     fd8:	str	w1, [x20]
     fdc:	b	49c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x254>
     fe0:	ldrb	w0, [sp, #184]
     fe4:	str	w28, [sp, #176]
     fe8:	and	w0, w0, #0xfffffffc
     fec:	orr	w0, w0, #0x2
     ff0:	strb	w0, [sp, #184]
     ff4:	b	d80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xb38>
     ff8:	ldr	x1, [x1, x21]
     ffc:	cmp	w1, #0x40
    1000:	b.hi	127c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1034>  // b.pmore
    1004:	cbz	w27, fa8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>
    1008:	mov	x0, x19
    100c:	mov	x8, x24
    1010:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1014:	ldrb	w0, [sp, #232]
    1018:	and	w1, w0, #0x1
    101c:	bfi	w0, w1, #1, #1
    1020:	strb	w0, [sp, #232]
    1024:	cbnz	w1, 11dc <_ZN4llvm15BitstreamCursor10skipRecordEj+0xf94>
    1028:	mov	x0, x24
    102c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1030:	subs	w27, w27, #0x1
    1034:	b.eq	fa8 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd60>  // b.none
    1038:	ldrb	w0, [x28, #8]
    103c:	tbnz	w0, #0, 105c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xe14>
    1040:	ubfx	x0, x0, #1, #3
    1044:	cmp	w0, #0x2
    1048:	b.ls	110c <_ZN4llvm15BitstreamCursor10skipRecordEj+0xec4>  // b.plast
    104c:	add	w0, w0, #0x5
    1050:	and	w0, w0, #0x7
    1054:	cmp	w0, #0x2
    1058:	b.hi	1110 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xec8>  // b.pmore
    105c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1060:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1064:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1068:	add	x3, x3, #0x0
    106c:	add	x1, x1, #0x0
    1070:	add	x0, x0, #0x0
    1074:	mov	w2, #0x79                  	// #121
    1078:	bl	0 <__assert_fail>
    107c:	ldrb	w0, [sp, #120]
    1080:	str	w24, [sp, #112]
    1084:	and	w0, w0, #0xfffffffc
    1088:	orr	w0, w0, #0x2
    108c:	strb	w0, [sp, #120]
    1090:	ldp	x23, x24, [sp, #48]
    1094:	ldp	x25, x26, [sp, #64]
    1098:	b	530 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2e8>
    109c:	ldrb	w1, [sp, #120]
    10a0:	and	w0, w0, #0xfffffffd
    10a4:	ldr	x2, [sp, #192]
    10a8:	orr	w1, w1, #0x3
    10ac:	str	x2, [sp, #112]
    10b0:	strb	w1, [sp, #120]
    10b4:	str	xzr, [sp, #192]
    10b8:	strb	w0, [sp, #200]
    10bc:	ldp	x23, x24, [sp, #48]
    10c0:	ldp	x25, x26, [sp, #64]
    10c4:	b	530 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x2e8>
    10c8:	ldrb	w1, [sp, #216]
    10cc:	and	w0, w0, #0xfffffffd
    10d0:	ldr	x2, [sp, #192]
    10d4:	orr	w1, w1, #0x3
    10d8:	str	xzr, [sp, #192]
    10dc:	strb	w0, [sp, #200]
    10e0:	str	x2, [sp, #208]
    10e4:	strb	w1, [sp, #216]
    10e8:	ldp	x27, x28, [sp, #80]
    10ec:	b	378 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x130>
    10f0:	ldr	x1, [sp, #224]
    10f4:	and	w0, w0, #0xfffffffd
    10f8:	str	xzr, [sp, #224]
    10fc:	orr	x1, x1, #0x1
    1100:	str	x1, [sp, #208]
    1104:	strb	w0, [sp, #232]
    1108:	b	e44 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xbfc>
    110c:	cbnz	w0, 129c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1054>
    1110:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1114:	mov	w1, #0x1                   	// #1
    1118:	add	x0, x0, #0x0
    111c:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1120:	ldrb	w2, [x20, #8]
    1124:	and	w0, w0, #0xfffffffd
    1128:	ldr	x1, [sp, #144]
    112c:	orr	w2, w2, #0x3
    1130:	strb	w2, [x20, #8]
    1134:	str	xzr, [sp, #144]
    1138:	ands	x1, x1, #0xfffffffffffffffe
    113c:	strb	w0, [sp, #152]
    1140:	b.eq	57c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>  // b.none
    1144:	str	x1, [x20]
    1148:	add	x0, sp, #0x90
    114c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1150:	ldp	x27, x28, [sp, #80]
    1154:	b	c80 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xa38>
    1158:	ldrb	w0, [sp, #152]
    115c:	str	x27, [sp, #144]
    1160:	and	w0, w0, #0xfffffffc
    1164:	orr	w0, w0, #0x2
    1168:	strb	w0, [sp, #152]
    116c:	b	c38 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x9f0>
    1170:	ldrb	w2, [x20, #8]
    1174:	and	w0, w0, #0xfffffffd
    1178:	ldr	x1, [sp, #208]
    117c:	orr	w2, w2, #0x3
    1180:	strb	w2, [x20, #8]
    1184:	str	xzr, [sp, #208]
    1188:	ands	x1, x1, #0xfffffffffffffffe
    118c:	strb	w0, [sp, #216]
    1190:	b.eq	5f4 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x3ac>  // b.none
    1194:	str	x1, [x20]
    1198:	b	438 <_ZN4llvm15BitstreamCursor10skipRecordEj+0x1f0>
    119c:	str	x2, [x19, #16]
    11a0:	add	x0, sp, #0xd0
    11a4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    11a8:	ldp	x25, x26, [sp, #64]
    11ac:	b	fc0 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xd78>
    11b0:	ldrb	w2, [x20, #8]
    11b4:	and	w0, w0, #0xfffffffd
    11b8:	ldr	x1, [sp, #176]
    11bc:	orr	w2, w2, #0x3
    11c0:	strb	w2, [x20, #8]
    11c4:	str	xzr, [sp, #176]
    11c8:	ands	x1, x1, #0xfffffffffffffffe
    11cc:	strb	w0, [sp, #184]
    11d0:	b.eq	57c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>  // b.none
    11d4:	str	x1, [x20]
    11d8:	b	e68 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc20>
    11dc:	ldrb	w2, [x20, #8]
    11e0:	and	w0, w0, #0xfffffffd
    11e4:	ldr	x1, [sp, #224]
    11e8:	orr	w2, w2, #0x3
    11ec:	strb	w2, [x20, #8]
    11f0:	str	xzr, [sp, #224]
    11f4:	ands	x1, x1, #0xfffffffffffffffe
    11f8:	strb	w0, [sp, #232]
    11fc:	b.eq	57c <_ZN4llvm15BitstreamCursor10skipRecordEj+0x334>  // b.none
    1200:	str	x1, [x20]
    1204:	mov	x0, x24
    1208:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    120c:	b	e68 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xc20>
    1210:	stp	x27, x28, [sp, #80]
    1214:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1218:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    121c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1220:	add	x3, x3, #0x0
    1224:	add	x1, x1, #0x0
    1228:	add	x0, x0, #0x0
    122c:	mov	w2, #0x99                  	// #153
    1230:	bl	0 <__assert_fail>
    1234:	stp	x25, x26, [sp, #64]
    1238:	stp	x27, x28, [sp, #80]
    123c:	b	1214 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xfcc>
    1240:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1244:	mov	w1, #0x1                   	// #1
    1248:	add	x0, x0, #0x0
    124c:	stp	x25, x26, [sp, #64]
    1250:	stp	x27, x28, [sp, #80]
    1254:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1258:	stp	x27, x28, [sp, #80]
    125c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1260:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1264:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1268:	add	x3, x3, #0x0
    126c:	add	x1, x1, #0x0
    1270:	add	x0, x0, #0x0
    1274:	mov	w2, #0x85                  	// #133
    1278:	bl	0 <__assert_fail>
    127c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1280:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1284:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1288:	add	x3, x3, #0x0
    128c:	add	x1, x1, #0x0
    1290:	add	x0, x0, #0x0
    1294:	mov	w2, #0xa4                  	// #164
    1298:	bl	0 <__assert_fail>
    129c:	ldr	x1, [x28]
    12a0:	b	1008 <_ZN4llvm15BitstreamCursor10skipRecordEj+0xdc0>
    12a4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12a8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12ac:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12b0:	add	x3, x3, #0x0
    12b4:	add	x1, x1, #0x0
    12b8:	add	x0, x0, #0x0
    12bc:	mov	w2, #0x95                  	// #149
    12c0:	bl	0 <__assert_fail>
    12c4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12c8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12cc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12d0:	add	x3, x3, #0x0
    12d4:	add	x1, x1, #0x0
    12d8:	add	x0, x0, #0x0
    12dc:	mov	w2, #0x77                  	// #119
    12e0:	bl	0 <__assert_fail>
    12e4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12e8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12ec:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    12f0:	add	x3, x3, #0x0
    12f4:	add	x1, x1, #0x0
    12f8:	add	x0, x0, #0x0
    12fc:	mov	w2, #0x9e                  	// #158
    1300:	bl	0 <__assert_fail>
    1304:	nop

0000000000001308 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>:
    1308:	stp	x29, x30, [sp, #-304]!
    130c:	cmp	w1, #0x3
    1310:	mov	x29, sp
    1314:	stp	x19, x20, [sp, #16]
    1318:	mov	x20, x2
    131c:	mov	x19, x0
    1320:	stp	x21, x22, [sp, #32]
    1324:	mov	x21, x8
    1328:	stp	x25, x26, [sp, #64]
    132c:	b.eq	15f4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2ec>  // b.none
    1330:	stp	x23, x24, [sp, #48]
    1334:	mov	x24, x3
    1338:	sub	w1, w1, #0x4
    133c:	ldp	x3, x2, [x0, #40]
    1340:	sub	x2, x2, x3
    1344:	cmp	x1, x2, asr #4
    1348:	b.cs	26d4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13cc>  // b.hs, b.nlast
    134c:	lsl	x1, x1, #4
    1350:	ldr	x23, [x3, x1]
    1354:	ldr	w25, [x23, #8]
    1358:	cbz	w25, 26e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13e0>
    135c:	ldr	x1, [x23]
    1360:	ldrb	w2, [x1, #8]
    1364:	tbz	w2, #0, 1440 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x138>
    1368:	ldr	w0, [x1]
    136c:	str	w0, [sp, #132]
    1370:	cmp	w25, #0x1
    1374:	b.eq	229c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf94>  // b.none
    1378:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    137c:	mov	w0, w25
    1380:	add	x1, x1, #0x0
    1384:	stp	x27, x28, [sp, #80]
    1388:	add	x27, sp, #0x120
    138c:	mov	w22, #0x1                   	// #1
    1390:	str	x1, [sp, #136]
    1394:	add	x1, sp, #0xe0
    1398:	str	x1, [sp, #120]
    139c:	cmp	w22, w0
    13a0:	b.cs	2680 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1378>  // b.hs, b.nlast
    13a4:	ldr	x3, [x23]
    13a8:	ubfiz	x2, x22, #4, #32
    13ac:	add	x1, x3, x2
    13b0:	ldrb	w0, [x1, #8]
    13b4:	tbnz	w0, #0, 18d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5c8>
    13b8:	ubfx	x0, x0, #1, #3
    13bc:	cmp	w0, #0x3
    13c0:	b.eq	1af4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7ec>  // b.none
    13c4:	cmp	w0, #0x5
    13c8:	b.eq	14a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x198>  // b.none
    13cc:	add	x26, sp, #0xd0
    13d0:	mov	x0, x19
    13d4:	mov	x8, x26
    13d8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    13dc:	ldrb	w0, [sp, #216]
    13e0:	and	w1, w0, #0x1
    13e4:	bfi	w0, w1, #1, #1
    13e8:	strb	w0, [sp, #216]
    13ec:	cbz	w1, 188c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x584>
    13f0:	ldrb	w2, [x21, #8]
    13f4:	and	w0, w0, #0xfffffffd
    13f8:	ldr	x1, [sp, #208]
    13fc:	orr	w2, w2, #0x3
    1400:	strb	w2, [x21, #8]
    1404:	str	xzr, [sp, #208]
    1408:	ands	x1, x1, #0xfffffffffffffffe
    140c:	strb	w0, [sp, #216]
    1410:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    1414:	str	x1, [x21]
    1418:	mov	x0, x26
    141c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1420:	ldp	x23, x24, [sp, #48]
    1424:	ldp	x27, x28, [sp, #80]
    1428:	mov	x0, x21
    142c:	ldp	x19, x20, [sp, #16]
    1430:	ldp	x21, x22, [sp, #32]
    1434:	ldp	x25, x26, [sp, #64]
    1438:	ldp	x29, x30, [sp], #304
    143c:	ret
    1440:	ubfx	x2, x2, #1, #3
    1444:	mov	w3, #0xfd                  	// #253
    1448:	sub	w2, w2, #0x3
    144c:	tst	w2, w3
    1450:	b.eq	26c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x13b8>  // b.none
    1454:	add	x22, sp, #0xc0
    1458:	mov	x8, x22
    145c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1460:	ldrb	w0, [sp, #200]
    1464:	and	w1, w0, #0x1
    1468:	bfi	w0, w1, #1, #1
    146c:	strb	w0, [sp, #200]
    1470:	cbz	w1, 1828 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x520>
    1474:	ldrb	w2, [x21, #8]
    1478:	and	w0, w0, #0xfffffffd
    147c:	ldr	x1, [sp, #192]
    1480:	orr	w2, w2, #0x3
    1484:	strb	w2, [x21, #8]
    1488:	str	xzr, [sp, #192]
    148c:	ands	x1, x1, #0xfffffffffffffffe
    1490:	strb	w0, [sp, #200]
    1494:	b.ne	190c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x604>  // b.any
    1498:	stp	x27, x28, [sp, #80]
    149c:	b	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>
    14a0:	mov	x0, x19
    14a4:	mov	w1, #0x6                   	// #6
    14a8:	mov	x8, x27
    14ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    14b0:	ldrb	w1, [sp, #296]
    14b4:	ldrb	w0, [sp, #264]
    14b8:	and	w2, w1, #0x1
    14bc:	and	w1, w1, #0xfffffffd
    14c0:	strb	w1, [sp, #296]
    14c4:	bfxil	w0, w2, #0, #1
    14c8:	orr	w0, w0, #0x2
    14cc:	strb	w0, [sp, #264]
    14d0:	ldr	x0, [sp, #288]
    14d4:	cbnz	w2, 17d0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4c8>
    14d8:	str	w0, [sp, #256]
    14dc:	mov	x0, x27
    14e0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    14e4:	ldrb	w0, [sp, #264]
    14e8:	and	w1, w0, #0x1
    14ec:	bfi	w0, w1, #1, #1
    14f0:	strb	w0, [sp, #264]
    14f4:	cbz	w1, 16dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3d4>
    14f8:	ldrb	w1, [sp, #280]
    14fc:	add	x26, sp, #0x100
    1500:	ldr	x2, [sp, #256]
    1504:	and	w0, w0, #0xfffffffd
    1508:	orr	w1, w1, #0x3
    150c:	str	xzr, [sp, #256]
    1510:	strb	w0, [sp, #264]
    1514:	str	x2, [sp, #272]
    1518:	strb	w1, [sp, #280]
    151c:	mov	x0, x26
    1520:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1524:	ldrb	w0, [sp, #280]
    1528:	and	w1, w0, #0x1
    152c:	bfi	w0, w1, #1, #1
    1530:	strb	w0, [sp, #280]
    1534:	cbnz	w1, 2420 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1118>
    1538:	ldr	w0, [x19, #32]
    153c:	ldr	w28, [sp, #272]
    1540:	cmp	w0, #0x1f
    1544:	b.hi	1be8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x8e0>  // b.pmore
    1548:	mov	x3, #0x0                   	// #0
    154c:	str	wzr, [x19, #32]
    1550:	ldp	x2, x26, [x19, #8]
    1554:	add	w1, w28, #0x3
    1558:	lsl	x1, x1, #3
    155c:	and	x1, x1, #0xffffffe0
    1560:	lsl	x26, x26, #3
    1564:	sub	x26, x26, x3
    1568:	add	x1, x1, x26
    156c:	lsr	x0, x1, #3
    1570:	cmp	x2, x1, lsr #3
    1574:	b.cc	2238 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf30>  // b.lo, b.ul, b.last
    1578:	and	x0, x0, #0xfffffffffffffff8
    157c:	and	w1, w1, #0x3f
    1580:	cmp	x2, x0
    1584:	b.cc	26a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1398>  // b.lo, b.ul, b.last
    1588:	str	x0, [x19, #16]
    158c:	str	wzr, [x19, #32]
    1590:	cbz	w1, 1840 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x538>
    1594:	mov	x0, x19
    1598:	mov	x8, x27
    159c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15a0:	ldrb	w0, [sp, #296]
    15a4:	and	w1, w0, #0x1
    15a8:	bfi	w0, w1, #1, #1
    15ac:	strb	w0, [sp, #296]
    15b0:	cbnz	w1, 1cf8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9f0>
    15b4:	mov	x0, #0x1                   	// #1
    15b8:	str	x0, [sp, #256]
    15bc:	mov	x0, x27
    15c0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15c4:	ldr	x0, [sp, #256]
    15c8:	ands	x0, x0, #0xfffffffffffffffe
    15cc:	b.eq	1840 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x538>  // b.none
    15d0:	ldrb	w1, [x21, #8]
    15d4:	str	x0, [x21]
    15d8:	orr	w0, w1, #0x3
    15dc:	strb	w0, [x21, #8]
    15e0:	add	x0, sp, #0x110
    15e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    15e8:	ldp	x23, x24, [sp, #48]
    15ec:	ldp	x27, x28, [sp, #80]
    15f0:	b	1428 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x120>
    15f4:	add	x22, sp, #0x120
    15f8:	mov	w1, #0x6                   	// #6
    15fc:	mov	x8, x22
    1600:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1604:	ldrb	w1, [sp, #296]
    1608:	ldrb	w0, [sp, #264]
    160c:	and	w2, w1, #0x1
    1610:	and	w1, w1, #0xfffffffd
    1614:	strb	w1, [sp, #296]
    1618:	bfxil	w0, w2, #0, #1
    161c:	orr	w0, w0, #0x2
    1620:	strb	w0, [sp, #264]
    1624:	ldr	x0, [sp, #288]
    1628:	cbz	w2, 17dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4d4>
    162c:	str	x0, [sp, #256]
    1630:	mov	x0, x22
    1634:	str	xzr, [sp, #288]
    1638:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    163c:	ldrb	w0, [sp, #264]
    1640:	and	w1, w0, #0x1
    1644:	bfi	w0, w1, #1, #1
    1648:	strb	w0, [sp, #264]
    164c:	cbz	w1, 17fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x4f4>
    1650:	ldrb	w1, [sp, #152]
    1654:	add	x26, sp, #0x100
    1658:	ldr	x2, [sp, #256]
    165c:	and	w0, w0, #0xfffffffd
    1660:	orr	w1, w1, #0x3
    1664:	str	x2, [sp, #144]
    1668:	strb	w1, [sp, #152]
    166c:	str	xzr, [sp, #256]
    1670:	strb	w0, [sp, #264]
    1674:	mov	x0, x26
    1678:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    167c:	ldrb	w0, [sp, #152]
    1680:	and	w1, w0, #0x1
    1684:	bfi	w0, w1, #1, #1
    1688:	strb	w0, [sp, #152]
    168c:	cbz	w1, 1944 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x63c>
    1690:	ldrb	w2, [x21, #8]
    1694:	and	w0, w0, #0xfffffffd
    1698:	ldr	x1, [sp, #144]
    169c:	orr	w2, w2, #0x3
    16a0:	strb	w2, [x21, #8]
    16a4:	str	xzr, [sp, #144]
    16a8:	ands	x1, x1, #0xfffffffffffffffe
    16ac:	strb	w0, [sp, #152]
    16b0:	b.ne	1ad0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7c8>  // b.any
    16b4:	stp	x23, x24, [sp, #48]
    16b8:	stp	x27, x28, [sp, #80]
    16bc:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    16c0:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    16c4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    16c8:	add	x3, x3, #0x0
    16cc:	add	x1, x1, #0x0
    16d0:	add	x0, x0, #0x0
    16d4:	mov	w2, #0x1ce                 	// #462
    16d8:	bl	0 <__assert_fail>
    16dc:	ldr	w0, [sp, #256]
    16e0:	tbz	w0, #5, 1870 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x568>
    16e4:	and	w0, w0, #0x1f
    16e8:	add	x28, sp, #0x110
    16ec:	add	x26, sp, #0x100
    16f0:	str	wzr, [sp, #104]
    16f4:	str	w0, [sp, #112]
    16f8:	b	1780 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x478>
    16fc:	str	w0, [sp, #288]
    1700:	ldrb	w0, [sp, #264]
    1704:	tbnz	w0, #1, 1cf0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9e8>
    1708:	mov	x0, x26
    170c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1710:	ldrb	w1, [sp, #296]
    1714:	ldrb	w0, [sp, #264]
    1718:	and	w2, w1, #0x1
    171c:	and	w1, w1, #0xfffffffd
    1720:	strb	w1, [sp, #296]
    1724:	bfxil	w0, w2, #0, #1
    1728:	orr	w0, w0, #0x2
    172c:	strb	w0, [sp, #264]
    1730:	cbnz	w2, 1934 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x62c>
    1734:	ldr	w0, [sp, #288]
    1738:	str	w0, [sp, #256]
    173c:	mov	x0, x27
    1740:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1744:	mov	x0, x28
    1748:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    174c:	ldrb	w0, [sp, #264]
    1750:	and	w1, w0, #0x1
    1754:	bfi	w0, w1, #1, #1
    1758:	strb	w0, [sp, #264]
    175c:	cbnz	w1, 2368 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1060>
    1760:	ldr	w1, [sp, #256]
    1764:	ldrb	w2, [sp, #104]
    1768:	and	w0, w1, #0x1f
    176c:	lsl	w0, w0, w2
    1770:	ldr	w2, [sp, #112]
    1774:	orr	w0, w2, w0
    1778:	str	w0, [sp, #112]
    177c:	tbz	w1, #5, 234c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1044>
    1780:	mov	x0, x19
    1784:	mov	w1, #0x6                   	// #6
    1788:	mov	x8, x28
    178c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1790:	ldr	w0, [sp, #104]
    1794:	ldrb	w1, [sp, #280]
    1798:	add	w0, w0, #0x5
    179c:	str	w0, [sp, #104]
    17a0:	ldrb	w0, [sp, #296]
    17a4:	and	w2, w1, #0x1
    17a8:	and	w1, w1, #0xfffffffd
    17ac:	strb	w1, [sp, #280]
    17b0:	bfxil	w0, w2, #0, #1
    17b4:	orr	w0, w0, #0x2
    17b8:	strb	w0, [sp, #296]
    17bc:	ldr	x0, [sp, #272]
    17c0:	cbz	w2, 16fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3f4>
    17c4:	str	xzr, [sp, #272]
    17c8:	str	x0, [sp, #288]
    17cc:	b	1700 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3f8>
    17d0:	str	x0, [sp, #256]
    17d4:	str	xzr, [sp, #288]
    17d8:	b	14dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1d4>
    17dc:	str	w0, [sp, #256]
    17e0:	mov	x0, x22
    17e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    17e8:	ldrb	w0, [sp, #264]
    17ec:	and	w1, w0, #0x1
    17f0:	bfi	w0, w1, #1, #1
    17f4:	strb	w0, [sp, #264]
    17f8:	cbnz	w1, 1650 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x348>
    17fc:	stp	x23, x24, [sp, #48]
    1800:	ldr	w23, [sp, #256]
    1804:	tbnz	w23, #5, 1c08 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x900>
    1808:	ldrb	w0, [sp, #152]
    180c:	add	x26, sp, #0x100
    1810:	str	w23, [sp, #144]
    1814:	and	w0, w0, #0xfffffffc
    1818:	orr	w0, w0, #0x2
    181c:	strb	w0, [sp, #152]
    1820:	ldp	x23, x24, [sp, #48]
    1824:	b	1674 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x36c>
    1828:	ldr	w1, [sp, #192]
    182c:	mov	x0, x22
    1830:	str	w1, [sp, #132]
    1834:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1838:	ldr	w25, [x23, #8]
    183c:	b	1370 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x68>
    1840:	ldr	x0, [x19]
    1844:	mov	w1, w28
    1848:	add	x26, x0, x26, lsr #3
    184c:	cbz	x24, 22bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfb4>
    1850:	stp	x26, x1, [x24]
    1854:	add	w22, w22, #0x1
    1858:	add	x0, sp, #0x110
    185c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1860:	cmp	w22, w25
    1864:	b.eq	23e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10d8>  // b.none
    1868:	ldr	w0, [x23, #8]
    186c:	b	139c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x94>
    1870:	ldrb	w1, [sp, #280]
    1874:	add	x26, sp, #0x100
    1878:	str	w0, [sp, #272]
    187c:	and	w0, w1, #0xfffffffc
    1880:	orr	w0, w0, #0x2
    1884:	strb	w0, [sp, #280]
    1888:	b	151c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x214>
    188c:	ldp	w0, w1, [x20, #8]
    1890:	cmp	w0, w1
    1894:	b.cs	2404 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10fc>  // b.hs, b.nlast
    1898:	ldr	x1, [x20]
    189c:	ldr	x2, [sp, #208]
    18a0:	str	x2, [x1, w0, uxtw #3]
    18a4:	ldp	w0, w2, [x20, #8]
    18a8:	mov	w1, w0
    18ac:	add	x1, x1, #0x1
    18b0:	cmp	x1, x2
    18b4:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    18b8:	add	w0, w0, #0x1
    18bc:	str	w0, [x20, #8]
    18c0:	add	w22, w22, #0x1
    18c4:	mov	x0, x26
    18c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    18cc:	b	1860 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x558>
    18d0:	ldp	w0, w1, [x20, #8]
    18d4:	ldr	x26, [x3, x2]
    18d8:	cmp	w0, w1
    18dc:	b.cs	2330 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1028>  // b.hs, b.nlast
    18e0:	ldr	x1, [x20]
    18e4:	str	x26, [x1, w0, uxtw #3]
    18e8:	ldp	w0, w2, [x20, #8]
    18ec:	mov	w1, w0
    18f0:	add	x1, x1, #0x1
    18f4:	cmp	x1, x2
    18f8:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    18fc:	add	w0, w0, #0x1
    1900:	add	w22, w22, #0x1
    1904:	str	w0, [x20, #8]
    1908:	b	1860 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x558>
    190c:	str	x1, [x21]
    1910:	mov	x0, x22
    1914:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1918:	mov	x0, x21
    191c:	ldp	x19, x20, [sp, #16]
    1920:	ldp	x21, x22, [sp, #32]
    1924:	ldp	x23, x24, [sp, #48]
    1928:	ldp	x25, x26, [sp, #64]
    192c:	ldp	x29, x30, [sp], #304
    1930:	ret
    1934:	ldr	x0, [sp, #288]
    1938:	str	x0, [sp, #256]
    193c:	str	xzr, [sp, #288]
    1940:	b	173c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x434>
    1944:	ldr	w2, [sp, #144]
    1948:	mov	x0, x19
    194c:	mov	w1, #0x6                   	// #6
    1950:	mov	x8, x22
    1954:	str	w2, [sp, #104]
    1958:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    195c:	ldrb	w1, [sp, #296]
    1960:	ldrb	w0, [sp, #264]
    1964:	and	w2, w1, #0x1
    1968:	and	w1, w1, #0xfffffffd
    196c:	strb	w1, [sp, #296]
    1970:	bfxil	w0, w2, #0, #1
    1974:	orr	w0, w0, #0x2
    1978:	strb	w0, [sp, #264]
    197c:	ldr	x0, [sp, #288]
    1980:	cbnz	w2, 1df4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaec>
    1984:	str	w0, [sp, #256]
    1988:	mov	x0, x22
    198c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1990:	ldrb	w0, [sp, #264]
    1994:	and	w1, w0, #0x1
    1998:	bfi	w0, w1, #1, #1
    199c:	strb	w0, [sp, #264]
    19a0:	cbz	w1, 1d14 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa0c>
    19a4:	ldrb	w1, [sp, #168]
    19a8:	and	w0, w0, #0xfffffffd
    19ac:	ldr	x2, [sp, #256]
    19b0:	orr	w1, w1, #0x3
    19b4:	str	x2, [sp, #160]
    19b8:	strb	w1, [sp, #168]
    19bc:	str	xzr, [sp, #256]
    19c0:	strb	w0, [sp, #264]
    19c4:	mov	x0, x26
    19c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    19cc:	ldrb	w0, [sp, #168]
    19d0:	and	w1, w0, #0x1
    19d4:	bfi	w0, w1, #1, #1
    19d8:	strb	w0, [sp, #168]
    19dc:	cbnz	w1, 1f00 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbf8>
    19e0:	ldr	w26, [sp, #160]
    19e4:	cbz	w26, 1ab4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7ac>
    19e8:	stp	x27, x28, [sp, #80]
    19ec:	add	x28, sp, #0x110
    19f0:	add	x27, sp, #0xb0
    19f4:	add	x0, x20, #0x10
    19f8:	stp	x23, x24, [sp, #48]
    19fc:	mov	w24, #0x0                   	// #0
    1a00:	str	x0, [sp, #112]
    1a04:	mov	x0, x19
    1a08:	mov	w1, #0x6                   	// #6
    1a0c:	mov	x8, x28
    1a10:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1a14:	ldrb	w0, [sp, #280]
    1a18:	and	w1, w0, #0x1
    1a1c:	bfi	w0, w1, #1, #1
    1a20:	strb	w0, [sp, #280]
    1a24:	cbnz	w1, 215c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe54>
    1a28:	ldr	x23, [sp, #272]
    1a2c:	tbnz	w23, #5, 21a0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe98>
    1a30:	ldrb	w0, [sp, #184]
    1a34:	and	x23, x23, #0xffffffff
    1a38:	str	x23, [sp, #176]
    1a3c:	and	w0, w0, #0xfffffffc
    1a40:	orr	w0, w0, #0x2
    1a44:	strb	w0, [sp, #184]
    1a48:	mov	x0, x28
    1a4c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1a50:	ldrb	w0, [sp, #184]
    1a54:	and	w1, w0, #0x1
    1a58:	bfi	w0, w1, #1, #1
    1a5c:	strb	w0, [sp, #184]
    1a60:	cbnz	w1, 2484 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x117c>
    1a64:	ldp	w0, w1, [x20, #8]
    1a68:	cmp	w0, w1
    1a6c:	b.cs	23e8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10e0>  // b.hs, b.nlast
    1a70:	ldr	x1, [x20]
    1a74:	ldr	x2, [sp, #176]
    1a78:	str	x2, [x1, w0, uxtw #3]
    1a7c:	ldp	w0, w2, [x20, #8]
    1a80:	mov	w1, w0
    1a84:	add	x1, x1, #0x1
    1a88:	cmp	x1, x2
    1a8c:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    1a90:	add	w0, w0, #0x1
    1a94:	str	w0, [x20, #8]
    1a98:	add	w24, w24, #0x1
    1a9c:	mov	x0, x27
    1aa0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1aa4:	cmp	w26, w24
    1aa8:	b.ne	1a04 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6fc>  // b.any
    1aac:	ldp	x23, x24, [sp, #48]
    1ab0:	ldp	x27, x28, [sp, #80]
    1ab4:	ldrb	w0, [x21, #8]
    1ab8:	ldr	w1, [sp, #104]
    1abc:	and	w0, w0, #0xfffffffc
    1ac0:	str	w1, [x21]
    1ac4:	orr	w0, w0, #0x2
    1ac8:	strb	w0, [x21, #8]
    1acc:	b	1f28 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc20>
    1ad0:	str	x1, [x21]
    1ad4:	add	x0, sp, #0x90
    1ad8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1adc:	mov	x0, x21
    1ae0:	ldp	x19, x20, [sp, #16]
    1ae4:	ldp	x21, x22, [sp, #32]
    1ae8:	ldp	x25, x26, [sp, #64]
    1aec:	ldp	x29, x30, [sp], #304
    1af0:	ret
    1af4:	mov	x0, x19
    1af8:	mov	w1, #0x6                   	// #6
    1afc:	mov	x8, x27
    1b00:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1b04:	ldrb	w1, [sp, #296]
    1b08:	ldrb	w0, [sp, #264]
    1b0c:	and	w2, w1, #0x1
    1b10:	and	w1, w1, #0xfffffffd
    1b14:	strb	w1, [sp, #296]
    1b18:	bfxil	w0, w2, #0, #1
    1b1c:	orr	w0, w0, #0x2
    1b20:	strb	w0, [sp, #264]
    1b24:	ldr	x0, [sp, #288]
    1b28:	cbnz	w2, 1ef4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xbec>
    1b2c:	str	w0, [sp, #256]
    1b30:	mov	x0, x27
    1b34:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1b38:	ldrb	w0, [sp, #264]
    1b3c:	and	w1, w0, #0x1
    1b40:	bfi	w0, w1, #1, #1
    1b44:	strb	w0, [sp, #264]
    1b48:	cbz	w1, 1e00 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaf8>
    1b4c:	ldrb	w1, [sp, #232]
    1b50:	add	x26, sp, #0x100
    1b54:	ldr	x2, [sp, #256]
    1b58:	and	w0, w0, #0xfffffffd
    1b5c:	orr	w1, w1, #0x3
    1b60:	str	x2, [sp, #224]
    1b64:	strb	w1, [sp, #232]
    1b68:	str	xzr, [sp, #256]
    1b6c:	strb	w0, [sp, #264]
    1b70:	mov	x0, x26
    1b74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1b78:	ldrb	w0, [sp, #232]
    1b7c:	and	w1, w0, #0x1
    1b80:	bfi	w0, w1, #1, #1
    1b84:	strb	w0, [sp, #232]
    1b88:	cbnz	w1, 258c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1284>
    1b8c:	add	w0, w22, #0x2
    1b90:	ldr	w28, [sp, #224]
    1b94:	cmp	w0, w25
    1b98:	b.ne	274c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1444>  // b.any
    1b9c:	ldr	w0, [x23, #8]
    1ba0:	add	w22, w22, #0x1
    1ba4:	cmp	x22, x0
    1ba8:	b.cs	2680 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1378>  // b.hs, b.nlast
    1bac:	ldr	x0, [x23]
    1bb0:	add	x22, x0, x22, lsl #4
    1bb4:	ldrb	w0, [x22, #8]
    1bb8:	tbnz	w0, #0, 275c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1454>
    1bbc:	ubfx	x0, x0, #1, #3
    1bc0:	cmp	w0, #0x2
    1bc4:	b.eq	20c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xdb8>  // b.none
    1bc8:	cmp	w0, #0x4
    1bcc:	b.eq	1ff8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcf0>  // b.none
    1bd0:	cmp	w0, #0x1
    1bd4:	b.eq	1f34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc2c>  // b.none
    1bd8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1bdc:	mov	w1, #0x1                   	// #1
    1be0:	add	x0, x0, #0x0
    1be4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    1be8:	ldr	x1, [x19, #24]
    1bec:	sub	w0, w0, #0x20
    1bf0:	mov	w2, #0x20                  	// #32
    1bf4:	mov	x3, #0x20                  	// #32
    1bf8:	str	w2, [x19, #32]
    1bfc:	lsr	x0, x1, x0
    1c00:	str	x0, [x19, #24]
    1c04:	b	1550 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x248>
    1c08:	and	w23, w23, #0x1f
    1c0c:	add	x26, sp, #0x100
    1c10:	mov	w24, #0x0                   	// #0
    1c14:	stp	x27, x28, [sp, #80]
    1c18:	add	x28, sp, #0x110
    1c1c:	b	1c98 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x990>
    1c20:	str	w0, [sp, #288]
    1c24:	ldrb	w0, [sp, #264]
    1c28:	tbnz	w0, #1, 1cf0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9e8>
    1c2c:	mov	x0, x26
    1c30:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c34:	ldrb	w1, [sp, #296]
    1c38:	ldrb	w0, [sp, #264]
    1c3c:	and	w2, w1, #0x1
    1c40:	and	w1, w1, #0xfffffffd
    1c44:	strb	w1, [sp, #296]
    1c48:	bfxil	w0, w2, #0, #1
    1c4c:	orr	w0, w0, #0x2
    1c50:	strb	w0, [sp, #264]
    1c54:	cbnz	w2, 1ce0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9d8>
    1c58:	ldr	w0, [sp, #288]
    1c5c:	str	w0, [sp, #256]
    1c60:	mov	x0, x22
    1c64:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c68:	mov	x0, x28
    1c6c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1c70:	ldrb	w0, [sp, #264]
    1c74:	and	w1, w0, #0x1
    1c78:	bfi	w0, w1, #1, #1
    1c7c:	strb	w0, [sp, #264]
    1c80:	cbnz	w1, 23ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10a4>
    1c84:	ldr	w1, [sp, #256]
    1c88:	and	w0, w1, #0x1f
    1c8c:	lsl	w0, w0, w24
    1c90:	orr	w23, w23, w0
    1c94:	tbz	w1, #5, 238c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1084>
    1c98:	mov	x0, x19
    1c9c:	mov	w1, #0x6                   	// #6
    1ca0:	mov	x8, x28
    1ca4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1ca8:	ldrb	w1, [sp, #280]
    1cac:	add	w24, w24, #0x5
    1cb0:	ldrb	w0, [sp, #296]
    1cb4:	and	w2, w1, #0x1
    1cb8:	and	w1, w1, #0xfffffffd
    1cbc:	strb	w1, [sp, #280]
    1cc0:	bfxil	w0, w2, #0, #1
    1cc4:	orr	w0, w0, #0x2
    1cc8:	strb	w0, [sp, #296]
    1ccc:	ldr	x0, [sp, #272]
    1cd0:	cbz	w2, 1c20 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x918>
    1cd4:	str	xzr, [sp, #272]
    1cd8:	str	x0, [sp, #288]
    1cdc:	b	1c24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x91c>
    1ce0:	ldr	x0, [sp, #288]
    1ce4:	str	x0, [sp, #256]
    1ce8:	str	xzr, [sp, #288]
    1cec:	b	1c60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x958>
    1cf0:	mov	x0, x26
    1cf4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1cf8:	ldr	x1, [sp, #288]
    1cfc:	and	w0, w0, #0xfffffffd
    1d00:	str	xzr, [sp, #288]
    1d04:	orr	x1, x1, #0x1
    1d08:	str	x1, [sp, #256]
    1d0c:	strb	w0, [sp, #296]
    1d10:	b	15bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2b4>
    1d14:	stp	x23, x24, [sp, #48]
    1d18:	ldr	w23, [sp, #256]
    1d1c:	tbz	w23, #5, 2088 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd80>
    1d20:	and	w23, w23, #0x1f
    1d24:	mov	w24, #0x0                   	// #0
    1d28:	stp	x27, x28, [sp, #80]
    1d2c:	add	x28, sp, #0x110
    1d30:	b	1dac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xaa4>
    1d34:	str	w0, [sp, #288]
    1d38:	ldrb	w0, [sp, #264]
    1d3c:	tbnz	w0, #1, 1cf0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9e8>
    1d40:	mov	x0, x26
    1d44:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d48:	ldrb	w1, [sp, #296]
    1d4c:	ldrb	w0, [sp, #264]
    1d50:	and	w2, w1, #0x1
    1d54:	and	w1, w1, #0xfffffffd
    1d58:	strb	w1, [sp, #296]
    1d5c:	bfxil	w0, w2, #0, #1
    1d60:	orr	w0, w0, #0x2
    1d64:	strb	w0, [sp, #264]
    1d68:	cbnz	w2, 2180 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe78>
    1d6c:	ldr	w0, [sp, #288]
    1d70:	str	w0, [sp, #256]
    1d74:	mov	x0, x22
    1d78:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d7c:	mov	x0, x28
    1d80:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1d84:	ldrb	w0, [sp, #264]
    1d88:	and	w1, w0, #0x1
    1d8c:	bfi	w0, w1, #1, #1
    1d90:	strb	w0, [sp, #264]
    1d94:	cbnz	w1, 24dc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11d4>
    1d98:	ldr	w1, [sp, #256]
    1d9c:	and	w0, w1, #0x1f
    1da0:	lsl	w0, w0, w24
    1da4:	orr	w23, w23, w0
    1da8:	tbz	w1, #5, 244c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1144>
    1dac:	mov	x0, x19
    1db0:	mov	w1, #0x6                   	// #6
    1db4:	mov	x8, x28
    1db8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1dbc:	ldrb	w1, [sp, #280]
    1dc0:	add	w24, w24, #0x5
    1dc4:	ldrb	w0, [sp, #296]
    1dc8:	and	w2, w1, #0x1
    1dcc:	and	w1, w1, #0xfffffffd
    1dd0:	strb	w1, [sp, #280]
    1dd4:	bfxil	w0, w2, #0, #1
    1dd8:	orr	w0, w0, #0x2
    1ddc:	strb	w0, [sp, #296]
    1de0:	ldr	x0, [sp, #272]
    1de4:	cbz	w2, 1d34 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa2c>
    1de8:	str	xzr, [sp, #272]
    1dec:	str	x0, [sp, #288]
    1df0:	b	1d38 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa30>
    1df4:	str	x0, [sp, #256]
    1df8:	str	xzr, [sp, #288]
    1dfc:	b	1988 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x680>
    1e00:	ldr	w0, [sp, #256]
    1e04:	tbz	w0, #5, 20a4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd9c>
    1e08:	and	w0, w0, #0x1f
    1e0c:	add	x28, sp, #0x110
    1e10:	add	x26, sp, #0x100
    1e14:	str	wzr, [sp, #104]
    1e18:	str	w0, [sp, #112]
    1e1c:	b	1ea4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb9c>
    1e20:	str	w0, [sp, #288]
    1e24:	ldrb	w0, [sp, #264]
    1e28:	tbnz	w0, #1, 1cf0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x9e8>
    1e2c:	mov	x0, x26
    1e30:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e34:	ldrb	w1, [sp, #296]
    1e38:	ldrb	w0, [sp, #264]
    1e3c:	and	w2, w1, #0x1
    1e40:	and	w1, w1, #0xfffffffd
    1e44:	strb	w1, [sp, #296]
    1e48:	bfxil	w0, w2, #0, #1
    1e4c:	orr	w0, w0, #0x2
    1e50:	strb	w0, [sp, #264]
    1e54:	cbnz	w2, 2190 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe88>
    1e58:	ldr	w0, [sp, #288]
    1e5c:	str	w0, [sp, #256]
    1e60:	mov	x0, x27
    1e64:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e68:	mov	x0, x28
    1e6c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1e70:	ldrb	w0, [sp, #264]
    1e74:	and	w1, w0, #0x1
    1e78:	bfi	w0, w1, #1, #1
    1e7c:	strb	w0, [sp, #264]
    1e80:	cbnz	w1, 2508 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1200>
    1e84:	ldr	w1, [sp, #256]
    1e88:	ldrb	w2, [sp, #104]
    1e8c:	and	w0, w1, #0x1f
    1e90:	lsl	w0, w0, w2
    1e94:	ldr	w2, [sp, #112]
    1e98:	orr	w0, w2, w0
    1e9c:	str	w0, [sp, #112]
    1ea0:	tbz	w1, #5, 24c0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x11b8>
    1ea4:	mov	x0, x19
    1ea8:	mov	w1, #0x6                   	// #6
    1eac:	mov	x8, x28
    1eb0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1eb4:	ldr	w0, [sp, #104]
    1eb8:	ldrb	w1, [sp, #280]
    1ebc:	add	w0, w0, #0x5
    1ec0:	str	w0, [sp, #104]
    1ec4:	ldrb	w0, [sp, #296]
    1ec8:	and	w2, w1, #0x1
    1ecc:	and	w1, w1, #0xfffffffd
    1ed0:	strb	w1, [sp, #280]
    1ed4:	bfxil	w0, w2, #0, #1
    1ed8:	orr	w0, w0, #0x2
    1edc:	strb	w0, [sp, #296]
    1ee0:	ldr	x0, [sp, #272]
    1ee4:	cbz	w2, 1e20 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb18>
    1ee8:	str	xzr, [sp, #272]
    1eec:	str	x0, [sp, #288]
    1ef0:	b	1e24 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb1c>
    1ef4:	str	x0, [sp, #256]
    1ef8:	str	xzr, [sp, #288]
    1efc:	b	1b30 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x828>
    1f00:	ldrb	w2, [x21, #8]
    1f04:	and	w0, w0, #0xfffffffd
    1f08:	ldr	x1, [sp, #160]
    1f0c:	orr	w2, w2, #0x3
    1f10:	strb	w2, [x21, #8]
    1f14:	str	xzr, [sp, #160]
    1f18:	ands	x1, x1, #0xfffffffffffffffe
    1f1c:	strb	w0, [sp, #168]
    1f20:	b.eq	16b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3ac>  // b.none
    1f24:	str	x1, [x21]
    1f28:	add	x0, sp, #0xa0
    1f2c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f30:	b	1ad4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x7cc>
    1f34:	cbz	w28, 2078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd70>
    1f38:	add	x8, sp, #0xf0
    1f3c:	add	x26, x20, #0x10
    1f40:	ldr	w1, [x22]
    1f44:	mov	x0, x19
    1f48:	str	x8, [sp, #104]
    1f4c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1f50:	ldrb	w0, [sp, #248]
    1f54:	ldr	x8, [sp, #104]
    1f58:	and	w1, w0, #0x1
    1f5c:	bfi	w0, w1, #1, #1
    1f60:	strb	w0, [sp, #248]
    1f64:	cbnz	w1, 2618 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1310>
    1f68:	ldp	w0, w1, [x20, #8]
    1f6c:	cmp	w0, w1
    1f70:	b.cs	254c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1244>  // b.hs, b.nlast
    1f74:	ldr	x1, [x20]
    1f78:	ldr	x2, [sp, #240]
    1f7c:	str	x2, [x1, w0, uxtw #3]
    1f80:	ldp	w0, w2, [x20, #8]
    1f84:	mov	w1, w0
    1f88:	add	x1, x1, #0x1
    1f8c:	cmp	x1, x2
    1f90:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    1f94:	add	w0, w0, #0x1
    1f98:	str	w0, [x20, #8]
    1f9c:	mov	x0, x8
    1fa0:	str	x8, [sp, #104]
    1fa4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1fa8:	subs	w28, w28, #0x1
    1fac:	b.eq	2078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd70>  // b.none
    1fb0:	ldrb	w0, [x22, #8]
    1fb4:	ldr	x8, [sp, #104]
    1fb8:	tbnz	w0, #0, 1fd8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcd0>
    1fbc:	ubfx	x0, x0, #1, #3
    1fc0:	cmp	w0, #0x2
    1fc4:	b.ls	23d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x10d0>  // b.plast
    1fc8:	add	w0, w0, #0x5
    1fcc:	and	w0, w0, #0x7
    1fd0:	cmp	w0, #0x2
    1fd4:	b.hi	214c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe44>  // b.pmore
    1fd8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1fdc:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1fe0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    1fe4:	add	x3, x3, #0x0
    1fe8:	add	x1, x1, #0x0
    1fec:	add	x0, x0, #0x0
    1ff0:	mov	w2, #0x79                  	// #121
    1ff4:	bl	0 <__assert_fail>
    1ff8:	cbz	w28, 2078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd70>
    1ffc:	add	x22, x20, #0x10
    2000:	mov	x0, x19
    2004:	mov	w1, #0x6                   	// #6
    2008:	mov	x8, x27
    200c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2010:	ldrb	w0, [sp, #296]
    2014:	and	w1, w0, #0x1
    2018:	bfi	w0, w1, #1, #1
    201c:	strb	w0, [sp, #296]
    2020:	cbnz	w1, 264c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1344>
    2024:	ldr	x0, [sp, #288]
    2028:	tst	w0, #0xffffffc0
    202c:	b.ne	272c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1424>  // b.any
    2030:	ldr	x3, [sp, #136]
    2034:	ldp	w1, w2, [x20, #8]
    2038:	ldrb	w26, [x3, w0, uxtw]
    203c:	cmp	w1, w2
    2040:	b.cs	2570 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1268>  // b.hs, b.nlast
    2044:	ldr	x0, [x20]
    2048:	str	x26, [x0, w1, uxtw #3]
    204c:	ldp	w0, w2, [x20, #8]
    2050:	mov	w1, w0
    2054:	add	x1, x1, #0x1
    2058:	cmp	x1, x2
    205c:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    2060:	add	w0, w0, #0x1
    2064:	str	w0, [x20, #8]
    2068:	mov	x0, x27
    206c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2070:	subs	w28, w28, #0x1
    2074:	b.ne	2000 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcf8>  // b.any
    2078:	ldr	x0, [sp, #120]
    207c:	mov	w22, w25
    2080:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2084:	b	1860 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x558>
    2088:	ldrb	w0, [sp, #168]
    208c:	str	w23, [sp, #160]
    2090:	and	w0, w0, #0xfffffffc
    2094:	orr	w0, w0, #0x2
    2098:	strb	w0, [sp, #168]
    209c:	ldp	x23, x24, [sp, #48]
    20a0:	b	19c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6bc>
    20a4:	ldrb	w1, [sp, #232]
    20a8:	add	x26, sp, #0x100
    20ac:	str	w0, [sp, #224]
    20b0:	and	w0, w1, #0xfffffffc
    20b4:	orr	w0, w0, #0x2
    20b8:	strb	w0, [sp, #232]
    20bc:	b	1b70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x868>
    20c0:	cbz	w28, 2078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd70>
    20c4:	add	x0, x20, #0x10
    20c8:	str	x0, [sp, #104]
    20cc:	ldr	w1, [x22]
    20d0:	mov	x0, x19
    20d4:	mov	x8, x26
    20d8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    20dc:	ldrb	w0, [sp, #264]
    20e0:	and	w1, w0, #0x1
    20e4:	bfi	w0, w1, #1, #1
    20e8:	strb	w0, [sp, #264]
    20ec:	cbnz	w1, 25e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12dc>
    20f0:	ldp	w0, w1, [x20, #8]
    20f4:	cmp	w0, w1
    20f8:	b.cs	25c8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12c0>  // b.hs, b.nlast
    20fc:	ldr	x1, [x20]
    2100:	ldr	x2, [sp, #256]
    2104:	str	x2, [x1, w0, uxtw #3]
    2108:	ldp	w0, w2, [x20, #8]
    210c:	mov	w1, w0
    2110:	add	x1, x1, #0x1
    2114:	cmp	x1, x2
    2118:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    211c:	add	w0, w0, #0x1
    2120:	str	w0, [x20, #8]
    2124:	mov	x0, x26
    2128:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    212c:	subs	w28, w28, #0x1
    2130:	b.eq	2078 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd70>  // b.none
    2134:	ldrb	w0, [x22, #8]
    2138:	tbnz	w0, #0, 1fd8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcd0>
    213c:	ubfx	x0, x0, #1, #3
    2140:	cmp	w0, #0x2
    2144:	b.hi	1fc8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xcc0>  // b.pmore
    2148:	cbnz	w0, 20cc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xdc4>
    214c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2150:	mov	w1, #0x1                   	// #1
    2154:	add	x0, x0, #0x0
    2158:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    215c:	ldrb	w1, [sp, #184]
    2160:	and	w0, w0, #0xfffffffd
    2164:	ldr	x2, [sp, #272]
    2168:	orr	w1, w1, #0x3
    216c:	str	x2, [sp, #176]
    2170:	strb	w1, [sp, #184]
    2174:	str	xzr, [sp, #272]
    2178:	strb	w0, [sp, #280]
    217c:	b	1a48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x740>
    2180:	ldr	x0, [sp, #288]
    2184:	str	x0, [sp, #256]
    2188:	str	xzr, [sp, #288]
    218c:	b	1d74 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xa6c>
    2190:	ldr	x0, [sp, #288]
    2194:	str	x0, [sp, #256]
    2198:	str	xzr, [sp, #288]
    219c:	b	1e60 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xb58>
    21a0:	and	x23, x23, #0x1f
    21a4:	mov	w25, #0x0                   	// #0
    21a8:	b	2214 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf0c>
    21ac:	mov	x0, x28
    21b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21b4:	ldrb	w1, [sp, #296]
    21b8:	ldrb	w0, [sp, #280]
    21bc:	and	w2, w1, #0x1
    21c0:	and	w1, w1, #0xfffffffd
    21c4:	strb	w1, [sp, #296]
    21c8:	bfxil	w0, w2, #0, #1
    21cc:	orr	w0, w0, #0x2
    21d0:	strb	w0, [sp, #280]
    21d4:	ldr	x0, [sp, #288]
    21d8:	str	x0, [sp, #272]
    21dc:	cbz	w2, 21e4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xedc>
    21e0:	str	xzr, [sp, #288]
    21e4:	mov	x0, x22
    21e8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    21ec:	ldrb	w0, [sp, #280]
    21f0:	and	w1, w0, #0x1
    21f4:	bfi	w0, w1, #1, #1
    21f8:	strb	w0, [sp, #280]
    21fc:	cbnz	w1, 215c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe54>
    2200:	ldr	x1, [sp, #272]
    2204:	and	x0, x1, #0x1f
    2208:	lsl	x0, x0, x25
    220c:	orr	x23, x23, x0
    2210:	tbz	w1, #5, 246c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1164>
    2214:	mov	x0, x19
    2218:	mov	x8, x22
    221c:	mov	w1, #0x6                   	// #6
    2220:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2224:	ldrb	w0, [sp, #280]
    2228:	add	w25, w25, #0x5
    222c:	tbz	w0, #1, 21ac <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xea4>
    2230:	mov	x0, x28
    2234:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2238:	ldp	w3, w4, [x20, #8]
    223c:	mov	w22, w28
    2240:	mov	w1, w3
    2244:	sub	x0, x4, x1
    2248:	add	x2, x22, x1
    224c:	cmp	x22, x0
    2250:	b.hi	252c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1224>  // b.pmore
    2254:	ldr	x5, [x20]
    2258:	mov	x0, #0x0                   	// #0
    225c:	add	x1, x5, x1, lsl #3
    2260:	cbz	x22, 2278 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf70>
    2264:	nop
    2268:	str	xzr, [x1, x0, lsl #3]
    226c:	add	x0, x0, #0x1
    2270:	cmp	x22, x0
    2274:	b.ne	2268 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf60>  // b.any
    2278:	cmp	x4, x2
    227c:	b.cc	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.lo, b.ul, b.last
    2280:	add	w28, w28, w3
    2284:	ldr	x0, [x19, #8]
    2288:	str	w28, [x20, #8]
    228c:	str	x0, [x19, #16]
    2290:	add	x0, sp, #0x110
    2294:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2298:	ldp	x27, x28, [sp, #80]
    229c:	ldrb	w0, [x21, #8]
    22a0:	ldr	w1, [sp, #132]
    22a4:	and	w0, w0, #0xfffffffc
    22a8:	orr	w0, w0, #0x2
    22ac:	strb	w0, [x21, #8]
    22b0:	ldp	x23, x24, [sp, #48]
    22b4:	str	w1, [x21]
    22b8:	b	1428 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x120>
    22bc:	cbz	w28, 1854 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x54c>
    22c0:	sub	w4, w28, #0x1
    22c4:	add	x1, x20, #0x10
    22c8:	add	x4, x4, #0x1
    22cc:	ldp	w0, w3, [x20, #8]
    22d0:	add	x4, x26, x4
    22d4:	b	2304 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xffc>
    22d8:	ldr	x2, [x20]
    22dc:	str	x28, [x2, w0, uxtw #3]
    22e0:	ldp	w0, w3, [x20, #8]
    22e4:	mov	w2, w0
    22e8:	add	x2, x2, #0x1
    22ec:	cmp	x2, w3, uxtw
    22f0:	b.hi	270c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x1404>  // b.pmore
    22f4:	add	w0, w0, #0x1
    22f8:	str	w0, [x20, #8]
    22fc:	cmp	x26, x4
    2300:	b.eq	1854 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x54c>  // b.none
    2304:	ldrb	w28, [x26], #1
    2308:	cmp	w0, w3
    230c:	b.cc	22d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfd0>  // b.lo, b.ul, b.last
    2310:	mov	x0, x20
    2314:	mov	x3, #0x8                   	// #8
    2318:	mov	x2, #0x0                   	// #0
    231c:	stp	x1, x4, [sp, #104]
    2320:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2324:	ldr	w0, [x20, #8]
    2328:	ldp	x1, x4, [sp, #104]
    232c:	b	22d8 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xfd0>
    2330:	mov	x0, x20
    2334:	add	x1, x20, #0x10
    2338:	mov	x3, #0x8                   	// #8
    233c:	mov	x2, #0x0                   	// #0
    2340:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2344:	ldr	w0, [x20, #8]
    2348:	b	18e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x5d8>
    234c:	ldrb	w0, [sp, #280]
    2350:	ldr	w1, [sp, #112]
    2354:	and	w0, w0, #0xfffffffc
    2358:	str	w1, [sp, #272]
    235c:	orr	w0, w0, #0x2
    2360:	strb	w0, [sp, #280]
    2364:	b	151c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x214>
    2368:	ldrb	w1, [sp, #280]
    236c:	and	w0, w0, #0xfffffffd
    2370:	ldr	x2, [sp, #256]
    2374:	orr	w1, w1, #0x3
    2378:	str	xzr, [sp, #256]
    237c:	strb	w0, [sp, #264]
    2380:	str	x2, [sp, #272]
    2384:	strb	w1, [sp, #280]
    2388:	b	151c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x214>
    238c:	ldrb	w0, [sp, #152]
    2390:	str	w23, [sp, #144]
    2394:	and	w0, w0, #0xfffffffc
    2398:	orr	w0, w0, #0x2
    239c:	strb	w0, [sp, #152]
    23a0:	ldp	x23, x24, [sp, #48]
    23a4:	ldp	x27, x28, [sp, #80]
    23a8:	b	1674 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x36c>
    23ac:	ldrb	w1, [sp, #152]
    23b0:	and	w0, w0, #0xfffffffd
    23b4:	ldr	x2, [sp, #256]
    23b8:	orr	w1, w1, #0x3
    23bc:	str	x2, [sp, #144]
    23c0:	strb	w1, [sp, #152]
    23c4:	str	xzr, [sp, #256]
    23c8:	strb	w0, [sp, #264]
    23cc:	ldp	x23, x24, [sp, #48]
    23d0:	ldp	x27, x28, [sp, #80]
    23d4:	b	1674 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x36c>
    23d8:	cbz	w0, 214c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xe44>
    23dc:	b	1f40 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc38>
    23e0:	ldp	x27, x28, [sp, #80]
    23e4:	b	229c <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf94>
    23e8:	ldr	x1, [sp, #112]
    23ec:	mov	x0, x20
    23f0:	mov	x3, #0x8                   	// #8
    23f4:	mov	x2, #0x0                   	// #0
    23f8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    23fc:	ldr	w0, [x20, #8]
    2400:	b	1a70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x768>
    2404:	mov	x0, x20
    2408:	add	x1, x20, #0x10
    240c:	mov	x3, #0x8                   	// #8
    2410:	mov	x2, #0x0                   	// #0
    2414:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2418:	ldr	w0, [x20, #8]
    241c:	b	1898 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x590>
    2420:	ldrb	w2, [x21, #8]
    2424:	and	w0, w0, #0xfffffffd
    2428:	ldr	x1, [sp, #272]
    242c:	orr	w2, w2, #0x3
    2430:	strb	w2, [x21, #8]
    2434:	str	xzr, [sp, #272]
    2438:	ands	x1, x1, #0xfffffffffffffffe
    243c:	strb	w0, [sp, #280]
    2440:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    2444:	str	x1, [x21]
    2448:	b	15e0 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x2d8>
    244c:	ldrb	w0, [sp, #168]
    2450:	str	w23, [sp, #160]
    2454:	and	w0, w0, #0xfffffffc
    2458:	orr	w0, w0, #0x2
    245c:	strb	w0, [sp, #168]
    2460:	ldp	x23, x24, [sp, #48]
    2464:	ldp	x27, x28, [sp, #80]
    2468:	b	19c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6bc>
    246c:	ldrb	w0, [sp, #184]
    2470:	str	x23, [sp, #176]
    2474:	and	w0, w0, #0xfffffffc
    2478:	orr	w0, w0, #0x2
    247c:	strb	w0, [sp, #184]
    2480:	b	1a48 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x740>
    2484:	ldrb	w2, [x21, #8]
    2488:	and	w0, w0, #0xfffffffd
    248c:	ldr	x1, [sp, #176]
    2490:	orr	w2, w2, #0x3
    2494:	strb	w2, [x21, #8]
    2498:	str	xzr, [sp, #176]
    249c:	ands	x1, x1, #0xfffffffffffffffe
    24a0:	strb	w0, [sp, #184]
    24a4:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    24a8:	str	x1, [x21]
    24ac:	add	x0, sp, #0xb0
    24b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    24b4:	ldp	x23, x24, [sp, #48]
    24b8:	ldp	x27, x28, [sp, #80]
    24bc:	b	1f28 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc20>
    24c0:	ldrb	w0, [sp, #232]
    24c4:	ldr	w1, [sp, #112]
    24c8:	and	w0, w0, #0xfffffffc
    24cc:	str	w1, [sp, #224]
    24d0:	orr	w0, w0, #0x2
    24d4:	strb	w0, [sp, #232]
    24d8:	b	1b70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x868>
    24dc:	ldrb	w1, [sp, #168]
    24e0:	and	w0, w0, #0xfffffffd
    24e4:	ldr	x2, [sp, #256]
    24e8:	orr	w1, w1, #0x3
    24ec:	str	x2, [sp, #160]
    24f0:	strb	w1, [sp, #168]
    24f4:	str	xzr, [sp, #256]
    24f8:	strb	w0, [sp, #264]
    24fc:	ldp	x23, x24, [sp, #48]
    2500:	ldp	x27, x28, [sp, #80]
    2504:	b	19c4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x6bc>
    2508:	ldrb	w1, [sp, #232]
    250c:	and	w0, w0, #0xfffffffd
    2510:	ldr	x2, [sp, #256]
    2514:	orr	w1, w1, #0x3
    2518:	str	x2, [sp, #224]
    251c:	strb	w1, [sp, #232]
    2520:	str	xzr, [sp, #256]
    2524:	strb	w0, [sp, #264]
    2528:	b	1b70 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x868>
    252c:	add	x1, x20, #0x10
    2530:	mov	x3, #0x8                   	// #8
    2534:	mov	x0, x20
    2538:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    253c:	ldp	w3, w4, [x20, #8]
    2540:	mov	w1, w3
    2544:	add	x2, x22, x1
    2548:	b	2254 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xf4c>
    254c:	mov	x0, x20
    2550:	mov	x1, x26
    2554:	mov	x3, #0x8                   	// #8
    2558:	mov	x2, #0x0                   	// #0
    255c:	str	x8, [sp, #104]
    2560:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2564:	ldr	w0, [x20, #8]
    2568:	ldr	x8, [sp, #104]
    256c:	b	1f74 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xc6c>
    2570:	mov	x1, x22
    2574:	mov	x0, x20
    2578:	mov	x3, #0x8                   	// #8
    257c:	mov	x2, #0x0                   	// #0
    2580:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    2584:	ldr	w1, [x20, #8]
    2588:	b	2044 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xd3c>
    258c:	ldrb	w2, [x21, #8]
    2590:	and	w0, w0, #0xfffffffd
    2594:	ldr	x1, [sp, #224]
    2598:	orr	w2, w2, #0x3
    259c:	strb	w2, [x21, #8]
    25a0:	str	xzr, [sp, #224]
    25a4:	ands	x1, x1, #0xfffffffffffffffe
    25a8:	strb	w0, [sp, #232]
    25ac:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    25b0:	str	x1, [x21]
    25b4:	add	x0, sp, #0xe0
    25b8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    25bc:	ldp	x23, x24, [sp, #48]
    25c0:	ldp	x27, x28, [sp, #80]
    25c4:	b	1428 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x120>
    25c8:	ldr	x1, [sp, #104]
    25cc:	mov	x0, x20
    25d0:	mov	x3, #0x8                   	// #8
    25d4:	mov	x2, #0x0                   	// #0
    25d8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    25dc:	ldr	w0, [x20, #8]
    25e0:	b	20fc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0xdf4>
    25e4:	ldrb	w2, [x21, #8]
    25e8:	and	w0, w0, #0xfffffffd
    25ec:	ldr	x1, [sp, #256]
    25f0:	orr	w2, w2, #0x3
    25f4:	strb	w2, [x21, #8]
    25f8:	str	xzr, [sp, #256]
    25fc:	ands	x1, x1, #0xfffffffffffffffe
    2600:	strb	w0, [sp, #264]
    2604:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    2608:	str	x1, [x21]
    260c:	mov	x0, x26
    2610:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2614:	b	25b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12ac>
    2618:	ldrb	w2, [x21, #8]
    261c:	and	w0, w0, #0xfffffffd
    2620:	ldr	x1, [sp, #240]
    2624:	orr	w2, w2, #0x3
    2628:	strb	w2, [x21, #8]
    262c:	str	xzr, [sp, #240]
    2630:	ands	x1, x1, #0xfffffffffffffffe
    2634:	strb	w0, [sp, #248]
    2638:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    263c:	str	x1, [x21]
    2640:	mov	x0, x8
    2644:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2648:	b	25b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12ac>
    264c:	ldrb	w2, [x21, #8]
    2650:	and	w0, w0, #0xfffffffd
    2654:	ldr	x1, [sp, #288]
    2658:	orr	w2, w2, #0x3
    265c:	strb	w2, [x21, #8]
    2660:	str	xzr, [sp, #288]
    2664:	ands	x1, x1, #0xfffffffffffffffe
    2668:	strb	w0, [sp, #296]
    266c:	b.eq	16bc <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x3b4>  // b.none
    2670:	str	x1, [x21]
    2674:	mov	x0, x27
    2678:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    267c:	b	25b4 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE+0x12ac>
    2680:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2684:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2688:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    268c:	add	x3, x3, #0x0
    2690:	add	x1, x1, #0x0
    2694:	add	x0, x0, #0x0
    2698:	mov	w2, #0x99                  	// #153
    269c:	bl	0 <__assert_fail>
    26a0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26a4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26a8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26ac:	add	x3, x3, #0x0
    26b0:	add	x1, x1, #0x0
    26b4:	add	x0, x0, #0x0
    26b8:	mov	w2, #0x85                  	// #133
    26bc:	bl	0 <__assert_fail>
    26c0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26c4:	mov	w1, #0x1                   	// #1
    26c8:	add	x0, x0, #0x0
    26cc:	stp	x27, x28, [sp, #80]
    26d0:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    26d4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26d8:	mov	w1, #0x1                   	// #1
    26dc:	add	x0, x0, #0x0
    26e0:	stp	x27, x28, [sp, #80]
    26e4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    26e8:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26ec:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26f0:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    26f4:	add	x3, x3, #0x0
    26f8:	add	x1, x1, #0x0
    26fc:	add	x0, x0, #0x0
    2700:	mov	w2, #0xe5                  	// #229
    2704:	stp	x27, x28, [sp, #80]
    2708:	bl	0 <__assert_fail>
    270c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2710:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2714:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2718:	add	x3, x3, #0x0
    271c:	add	x1, x1, #0x0
    2720:	add	x0, x0, #0x0
    2724:	mov	w2, #0x43                  	// #67
    2728:	bl	0 <__assert_fail>
    272c:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2730:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2734:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2738:	add	x3, x3, #0x0
    273c:	add	x1, x1, #0x0
    2740:	add	x0, x0, #0x0
    2744:	mov	w2, #0x9d                  	// #157
    2748:	bl	0 <__assert_fail>
    274c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2750:	mov	w1, #0x1                   	// #1
    2754:	add	x0, x0, #0x0
    2758:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    275c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2760:	mov	w1, #0x1                   	// #1
    2764:	add	x0, x0, #0x0
    2768:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    276c:	nop

0000000000002770 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>:
    2770:	stp	x29, x30, [sp, #-256]!
    2774:	mov	x29, sp
    2778:	stp	x19, x20, [sp, #16]
    277c:	stp	x27, x28, [sp, #80]
    2780:	mov	x28, x0
    2784:	mov	w27, w1
    2788:	ldp	w19, w0, [x0, #72]
    278c:	stp	x21, x22, [sp, #32]
    2790:	mov	x21, x8
    2794:	stp	x23, x24, [sp, #48]
    2798:	cmp	w19, w0
    279c:	stp	x25, x26, [sp, #64]
    27a0:	ldr	w25, [x28, #36]
    27a4:	str	x2, [sp, #104]
    27a8:	b.cs	2c80 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x510>  // b.hs, b.nlast
    27ac:	ldr	x23, [x28, #64]
    27b0:	ubfiz	x19, x19, #5, #32
    27b4:	add	x0, x23, x19
    27b8:	add	x2, x0, #0x8
    27bc:	str	w25, [x23, x19]
    27c0:	ldp	w1, w3, [x28, #72]
    27c4:	str	xzr, [x0, #8]
    27c8:	stp	xzr, xzr, [x2, #8]
    27cc:	mov	w0, w1
    27d0:	add	x0, x0, #0x1
    27d4:	cmp	x0, x3
    27d8:	b.hi	2ed4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x764>  // b.pmore
    27dc:	add	w1, w1, #0x1
    27e0:	str	w1, [x28, #72]
    27e4:	cbz	w1, 2eb4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x744>
    27e8:	ldr	x1, [x28, #64]
    27ec:	lsl	x0, x0, #5
    27f0:	sub	x2, x0, #0x20
    27f4:	add	x0, x28, #0x28
    27f8:	add	x2, x1, x2
    27fc:	add	x3, x2, #0x8
    2800:	ldr	x9, [x28, #40]
    2804:	ldp	x7, x1, [x2, #8]
    2808:	ldr	x8, [x0, #8]
    280c:	str	x9, [x2, #8]
    2810:	ldr	x4, [x2, #24]
    2814:	ldr	x2, [x0, #16]
    2818:	stp	x8, x2, [x3, #8]
    281c:	ldr	x2, [x28, #336]
    2820:	str	x7, [x28, #40]
    2824:	stp	x1, x4, [x0, #8]
    2828:	cbz	x2, 28a4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x134>
    282c:	ldp	x3, x2, [x2]
    2830:	cmp	x3, x2
    2834:	b.eq	2848 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0xd8>  // b.none
    2838:	ldur	w4, [x2, #-88]
    283c:	sub	x7, x2, #0x58
    2840:	cmp	w27, w4
    2844:	b.eq	2898 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x128>  // b.none
    2848:	sub	x2, x2, x3
    284c:	mov	x4, #0x8ba3                	// #35747
    2850:	movk	x4, #0xba2e, lsl #16
    2854:	asr	x2, x2, #3
    2858:	movk	x4, #0xa2e8, lsl #32
    285c:	movk	x4, #0x2e8b, lsl #48
    2860:	mul	x2, x2, x4
    2864:	cbz	w2, 28a4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x134>
    2868:	sub	w2, w2, #0x1
    286c:	add	x4, x3, #0x58
    2870:	mov	w7, #0x58                  	// #88
    2874:	umaddl	x2, w2, w7, x4
    2878:	b	2888 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x118>
    287c:	add	x3, x3, #0x58
    2880:	cmp	x2, x3
    2884:	b.eq	28a4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x134>  // b.none
    2888:	ldr	w4, [x3]
    288c:	mov	x7, x3
    2890:	cmp	w27, w4
    2894:	b.ne	287c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x10c>  // b.any
    2898:	ldp	x2, x3, [x7, #8]
    289c:	mov	w4, #0x0                   	// #0
    28a0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28a4:	add	x19, sp, #0xd0
    28a8:	mov	x0, x28
    28ac:	mov	w1, #0x4                   	// #4
    28b0:	mov	x8, x19
    28b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28b8:	ldrb	w1, [sp, #216]
    28bc:	ldrb	w0, [sp, #152]
    28c0:	and	w2, w1, #0x1
    28c4:	and	w1, w1, #0xfffffffd
    28c8:	strb	w1, [sp, #216]
    28cc:	bfxil	w0, w2, #0, #1
    28d0:	orr	w0, w0, #0x2
    28d4:	strb	w0, [sp, #152]
    28d8:	ldr	x0, [sp, #208]
    28dc:	cbz	w2, 2984 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x214>
    28e0:	str	x0, [sp, #144]
    28e4:	mov	x0, x19
    28e8:	str	xzr, [sp, #208]
    28ec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    28f0:	ldrb	w0, [sp, #152]
    28f4:	and	w1, w0, #0x1
    28f8:	bfi	w0, w1, #1, #1
    28fc:	strb	w0, [sp, #152]
    2900:	cbz	w1, 29a4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x234>
    2904:	ldrb	w1, [sp, #136]
    2908:	add	x20, sp, #0x90
    290c:	ldr	x2, [sp, #144]
    2910:	and	w0, w0, #0xfffffffd
    2914:	orr	w1, w1, #0x3
    2918:	str	x2, [sp, #128]
    291c:	strb	w1, [sp, #136]
    2920:	str	xzr, [sp, #144]
    2924:	strb	w0, [sp, #152]
    2928:	mov	x0, x20
    292c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2930:	ldrb	w0, [sp, #136]
    2934:	and	w1, w0, #0x1
    2938:	bfi	w0, w1, #1, #1
    293c:	strb	w0, [sp, #136]
    2940:	cbz	w1, 29e0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x270>
    2944:	ldr	x1, [sp, #128]
    2948:	and	w0, w0, #0xfffffffd
    294c:	str	xzr, [sp, #128]
    2950:	orr	x1, x1, #0x1
    2954:	str	x1, [x21]
    2958:	strb	w0, [sp, #136]
    295c:	add	x0, sp, #0x80
    2960:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2964:	mov	x0, x21
    2968:	ldp	x19, x20, [sp, #16]
    296c:	ldp	x21, x22, [sp, #32]
    2970:	ldp	x23, x24, [sp, #48]
    2974:	ldp	x25, x26, [sp, #64]
    2978:	ldp	x27, x28, [sp, #80]
    297c:	ldp	x29, x30, [sp], #256
    2980:	ret
    2984:	str	w0, [sp, #144]
    2988:	mov	x0, x19
    298c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2990:	ldrb	w0, [sp, #152]
    2994:	and	w1, w0, #0x1
    2998:	bfi	w0, w1, #1, #1
    299c:	strb	w0, [sp, #152]
    29a0:	cbnz	w1, 2904 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x194>
    29a4:	ldr	w22, [sp, #144]
    29a8:	tbnz	w22, #3, 2a48 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2d8>
    29ac:	ldrb	w0, [sp, #136]
    29b0:	add	x20, sp, #0x90
    29b4:	str	w22, [sp, #128]
    29b8:	and	w0, w0, #0xfffffffc
    29bc:	orr	w0, w0, #0x2
    29c0:	strb	w0, [sp, #136]
    29c4:	mov	x0, x20
    29c8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    29cc:	ldrb	w0, [sp, #136]
    29d0:	and	w1, w0, #0x1
    29d4:	bfi	w0, w1, #1, #1
    29d8:	strb	w0, [sp, #136]
    29dc:	cbnz	w1, 2944 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1d4>
    29e0:	ldr	w22, [sp, #128]
    29e4:	str	w22, [x28, #36]
    29e8:	cmp	w22, #0x40
    29ec:	b.hi	2ba0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x430>  // b.pmore
    29f0:	ldr	w0, [x28, #32]
    29f4:	cmp	w0, #0x1f
    29f8:	b.hi	2b2c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3bc>  // b.pmore
    29fc:	str	wzr, [x28, #32]
    2a00:	mov	x0, x28
    2a04:	mov	w1, #0x20                  	// #32
    2a08:	mov	x8, x19
    2a0c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a10:	ldrb	w0, [sp, #216]
    2a14:	and	w1, w0, #0x1
    2a18:	bfi	w0, w1, #1, #1
    2a1c:	strb	w0, [sp, #216]
    2a20:	cbz	w1, 2b48 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3d8>
    2a24:	ldr	x1, [sp, #208]
    2a28:	and	w0, w0, #0xfffffffd
    2a2c:	str	xzr, [sp, #208]
    2a30:	orr	x1, x1, #0x1
    2a34:	str	x1, [x21]
    2a38:	strb	w0, [sp, #216]
    2a3c:	mov	x0, x19
    2a40:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a44:	b	295c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1ec>
    2a48:	and	w22, w22, #0x7
    2a4c:	add	x25, sp, #0xb0
    2a50:	add	x20, sp, #0x90
    2a54:	mov	w23, #0x0                   	// #0
    2a58:	b	2ad4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x364>
    2a5c:	str	w0, [sp, #208]
    2a60:	ldrb	w0, [sp, #152]
    2a64:	tbnz	w0, #1, 2e3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6cc>
    2a68:	mov	x0, x20
    2a6c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2a70:	ldrb	w1, [sp, #216]
    2a74:	ldrb	w0, [sp, #152]
    2a78:	and	w2, w1, #0x1
    2a7c:	and	w1, w1, #0xfffffffd
    2a80:	strb	w1, [sp, #216]
    2a84:	bfxil	w0, w2, #0, #1
    2a88:	orr	w0, w0, #0x2
    2a8c:	strb	w0, [sp, #152]
    2a90:	cbnz	w2, 2b1c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3ac>
    2a94:	ldr	w0, [sp, #208]
    2a98:	str	w0, [sp, #144]
    2a9c:	mov	x0, x19
    2aa0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2aa4:	mov	x0, x25
    2aa8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2aac:	ldrb	w0, [sp, #152]
    2ab0:	and	w1, w0, #0x1
    2ab4:	bfi	w0, w1, #1, #1
    2ab8:	strb	w0, [sp, #152]
    2abc:	cbnz	w1, 2e5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6ec>
    2ac0:	ldr	w1, [sp, #144]
    2ac4:	and	w0, w1, #0x7
    2ac8:	lsl	w0, w0, w23
    2acc:	orr	w22, w22, w0
    2ad0:	tbz	w1, #3, 2e44 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6d4>
    2ad4:	mov	x0, x28
    2ad8:	mov	w1, #0x4                   	// #4
    2adc:	mov	x8, x25
    2ae0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ae4:	ldrb	w1, [sp, #184]
    2ae8:	add	w23, w23, #0x3
    2aec:	ldrb	w0, [sp, #216]
    2af0:	and	w2, w1, #0x1
    2af4:	and	w1, w1, #0xfffffffd
    2af8:	strb	w1, [sp, #184]
    2afc:	bfxil	w0, w2, #0, #1
    2b00:	orr	w0, w0, #0x2
    2b04:	strb	w0, [sp, #216]
    2b08:	ldr	x0, [sp, #176]
    2b0c:	cbz	w2, 2a5c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2ec>
    2b10:	str	xzr, [sp, #176]
    2b14:	str	x0, [sp, #208]
    2b18:	b	2a60 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2f0>
    2b1c:	ldr	x0, [sp, #208]
    2b20:	str	x0, [sp, #144]
    2b24:	str	xzr, [sp, #208]
    2b28:	b	2a9c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x32c>
    2b2c:	ldr	x1, [x28, #24]
    2b30:	sub	w0, w0, #0x20
    2b34:	mov	w2, #0x20                  	// #32
    2b38:	str	w2, [x28, #32]
    2b3c:	lsr	x0, x1, x0
    2b40:	str	x0, [x28, #24]
    2b44:	b	2a00 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x290>
    2b48:	ldr	x1, [sp, #104]
    2b4c:	cbz	x1, 2b58 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x3e8>
    2b50:	ldr	x0, [sp, #208]
    2b54:	str	w0, [x1]
    2b58:	ldr	w0, [x28, #36]
    2b5c:	cbz	w0, 2e80 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x710>
    2b60:	ldr	w0, [x28, #32]
    2b64:	cbnz	w0, 2b94 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x424>
    2b68:	ldp	x1, x0, [x28, #8]
    2b6c:	cmp	x1, x0
    2b70:	b.hi	2b94 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x424>  // b.pmore
    2b74:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2b78:	mov	x1, x0
    2b7c:	mov	x8, x21
    2b80:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2b84:	mov	x0, #0x54                  	// #84
    2b88:	add	x2, x2, #0x0
    2b8c:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2b90:	b	2a3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2cc>
    2b94:	mov	x0, #0x1                   	// #1
    2b98:	str	x0, [x21]
    2b9c:	b	2a3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2cc>
    2ba0:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2ba4:	add	x25, sp, #0xb0
    2ba8:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
    2bac:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bb0:	add	x7, x20, #0x10
    2bb4:	adrp	x4, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2bb8:	ldr	x1, [x1]
    2bbc:	add	x4, x4, #0x0
    2bc0:	ldr	x3, [x3]
    2bc4:	add	x2, x1, #0x10
    2bc8:	mov	w5, #0x1                   	// #1
    2bcc:	mov	x6, #0x40                  	// #64
    2bd0:	add	x3, x3, #0x10
    2bd4:	mov	x1, x25
    2bd8:	mov	x23, x0
    2bdc:	mov	x0, x19
    2be0:	stp	x7, xzr, [sp, #144]
    2be4:	strb	wzr, [sp, #160]
    2be8:	stp	x3, x4, [sp, #176]
    2bec:	str	w22, [sp, #192]
    2bf0:	stp	x6, x2, [sp, #200]
    2bf4:	stp	xzr, xzr, [sp, #216]
    2bf8:	str	xzr, [sp, #232]
    2bfc:	str	w5, [sp, #240]
    2c00:	str	x20, [sp, #248]
    2c04:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
    2c08:	ldr	x0, [sp, #216]
    2c0c:	ldr	x1, [sp, #232]
    2c10:	cmp	x1, x0
    2c14:	b.eq	2c20 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x4b0>  // b.none
    2c18:	mov	x0, x19
    2c1c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
    2c20:	ldr	x2, [sp, #248]
    2c24:	mov	w1, #0x104                 	// #260
    2c28:	mov	x0, #0x54                  	// #84
    2c2c:	mov	x22, #0x0                   	// #0
    2c30:	bfxil	x22, x0, #0, #32
    2c34:	mov	x0, #0x40                  	// #64
    2c38:	stp	x2, xzr, [sp, #176]
    2c3c:	add	x20, x20, #0x10
    2c40:	strh	w1, [sp, #192]
    2c44:	bl	0 <_Znwm>
    2c48:	mov	x2, x22
    2c4c:	mov	x3, x23
    2c50:	mov	x22, x0
    2c54:	mov	x1, x25
    2c58:	orr	x22, x22, #0x1
    2c5c:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
    2c60:	str	x22, [x21]
    2c64:	mov	x0, x19
    2c68:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
    2c6c:	ldr	x0, [sp, #144]
    2c70:	cmp	x0, x20
    2c74:	b.eq	295c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1ec>  // b.none
    2c78:	bl	0 <_ZdlPv>
    2c7c:	b	295c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1ec>
    2c80:	mov	w0, w0
    2c84:	mov	x2, #0xffffffff            	// #4294967295
    2c88:	add	x0, x0, #0x2
    2c8c:	orr	x0, x0, x0, lsr #1
    2c90:	orr	x0, x0, x0, lsr #2
    2c94:	orr	x0, x0, x0, lsr #4
    2c98:	orr	x0, x0, x0, lsr #8
    2c9c:	orr	x1, x0, x0, lsr #16
    2ca0:	orr	x0, x1, x0, lsr #32
    2ca4:	add	x1, x0, #0x1
    2ca8:	cmp	x1, x2
    2cac:	b.hi	2ea0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x730>  // b.pmore
    2cb0:	lsl	x0, x1, #5
    2cb4:	str	w1, [sp, #124]
    2cb8:	str	x1, [sp, #208]
    2cbc:	bl	0 <malloc>
    2cc0:	mov	x23, x0
    2cc4:	cbz	x0, 2ef4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x784>
    2cc8:	ldr	x0, [x28, #64]
    2ccc:	ubfiz	x19, x19, #5, #32
    2cd0:	add	x24, x0, x19
    2cd4:	cmp	x0, x24
    2cd8:	b.eq	2e04 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x694>  // b.none
    2cdc:	mov	x1, x23
    2ce0:	ldr	x4, [x0, #8]
    2ce4:	add	x1, x1, #0x20
    2ce8:	ldr	w2, [x0]
    2cec:	stur	x4, [x1, #-24]
    2cf0:	stur	w2, [x1, #-32]
    2cf4:	ldr	x2, [x0, #16]
    2cf8:	stur	x2, [x1, #-16]
    2cfc:	ldr	x2, [x0, #24]
    2d00:	stur	x2, [x1, #-8]
    2d04:	stp	xzr, xzr, [x0, #8]
    2d08:	add	x0, x0, #0x20
    2d0c:	stur	xzr, [x0, #-8]
    2d10:	cmp	x24, x0
    2d14:	b.ne	2ce0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x570>  // b.any
    2d18:	ldr	x0, [x28, #64]
    2d1c:	str	x0, [sp, #112]
    2d20:	add	x24, x0, x19
    2d24:	cmp	x0, x24
    2d28:	b.eq	2e04 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x694>  // b.none
    2d2c:	adrp	x22, 0 <__pthread_key_create>
    2d30:	ldr	x22, [x22]
    2d34:	str	x22, [sp, #96]
    2d38:	sub	x24, x24, #0x20
    2d3c:	ldp	x0, x26, [x24, #8]
    2d40:	mov	x19, x0
    2d44:	cmp	x0, x26
    2d48:	b.ne	2d78 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x608>  // b.any
    2d4c:	b	2dec <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x67c>
    2d50:	add	x1, x20, #0x8
    2d54:	ldaxr	w0, [x1]
    2d58:	sub	w2, w0, #0x1
    2d5c:	stlxr	w3, w2, [x1]
    2d60:	cbnz	w3, 2d54 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5e4>
    2d64:	cmp	w0, #0x1
    2d68:	b.eq	2d98 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x628>  // b.none
    2d6c:	add	x19, x19, #0x10
    2d70:	cmp	x26, x19
    2d74:	b.eq	2de8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x678>  // b.none
    2d78:	ldr	x20, [x19, #8]
    2d7c:	cbz	x20, 2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5fc>
    2d80:	cbnz	x22, 2d50 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5e0>
    2d84:	ldr	w0, [x20, #8]
    2d88:	sub	w1, w0, #0x1
    2d8c:	str	w1, [x20, #8]
    2d90:	cmp	w0, #0x1
    2d94:	b.ne	2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5fc>  // b.any
    2d98:	ldr	x1, [x20]
    2d9c:	mov	x0, x20
    2da0:	ldr	x1, [x1, #16]
    2da4:	blr	x1
    2da8:	ldr	x0, [sp, #96]
    2dac:	cbz	x0, 2e2c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6bc>
    2db0:	add	x1, x20, #0xc
    2db4:	ldaxr	w0, [x1]
    2db8:	sub	w2, w0, #0x1
    2dbc:	stlxr	w3, w2, [x1]
    2dc0:	cbnz	w3, 2db4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x644>
    2dc4:	cmp	w0, #0x1
    2dc8:	b.ne	2d6c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5fc>  // b.any
    2dcc:	ldr	x1, [x20]
    2dd0:	mov	x0, x20
    2dd4:	add	x19, x19, #0x10
    2dd8:	ldr	x1, [x1, #24]
    2ddc:	blr	x1
    2de0:	cmp	x26, x19
    2de4:	b.ne	2d78 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x608>  // b.any
    2de8:	ldr	x0, [x24, #8]
    2dec:	cbz	x0, 2df4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x684>
    2df0:	bl	0 <_ZdlPv>
    2df4:	ldr	x0, [sp, #112]
    2df8:	cmp	x0, x24
    2dfc:	b.ne	2d38 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x5c8>  // b.any
    2e00:	ldr	x24, [x28, #64]
    2e04:	add	x0, x28, #0x50
    2e08:	cmp	x24, x0
    2e0c:	b.eq	2e18 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x6a8>  // b.none
    2e10:	mov	x0, x24
    2e14:	bl	0 <free>
    2e18:	ldr	w0, [sp, #124]
    2e1c:	ldr	w19, [x28, #72]
    2e20:	str	x23, [x28, #64]
    2e24:	str	w0, [x28, #76]
    2e28:	b	27b0 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x40>
    2e2c:	ldr	w0, [x20, #12]
    2e30:	sub	w1, w0, #0x1
    2e34:	str	w1, [x20, #12]
    2e38:	b	2dc4 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x654>
    2e3c:	mov	x0, x20
    2e40:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2e44:	ldrb	w0, [sp, #136]
    2e48:	str	w22, [sp, #128]
    2e4c:	and	w0, w0, #0xfffffffc
    2e50:	orr	w0, w0, #0x2
    2e54:	strb	w0, [sp, #136]
    2e58:	b	2928 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b8>
    2e5c:	ldrb	w1, [sp, #136]
    2e60:	and	w0, w0, #0xfffffffd
    2e64:	ldr	x2, [sp, #144]
    2e68:	orr	w1, w1, #0x3
    2e6c:	str	x2, [sp, #128]
    2e70:	strb	w1, [sp, #136]
    2e74:	str	xzr, [sp, #144]
    2e78:	strb	w0, [sp, #152]
    2e7c:	b	2928 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x1b8>
    2e80:	bl	0 <_ZNSt3_V216generic_categoryEv>
    2e84:	mov	x1, x0
    2e88:	mov	x8, x21
    2e8c:	adrp	x2, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2e90:	mov	x0, #0x54                  	// #84
    2e94:	add	x2, x2, #0x0
    2e98:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
    2e9c:	b	2a3c <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x2cc>
    2ea0:	mov	w0, #0xffffffff            	// #-1
    2ea4:	mov	x1, x2
    2ea8:	str	w0, [sp, #124]
    2eac:	mov	x0, #0x1fffffffe0          	// #137438953440
    2eb0:	b	2cb8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x548>
    2eb4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2eb8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ebc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ec0:	add	x3, x3, #0x0
    2ec4:	add	x1, x1, #0x0
    2ec8:	add	x0, x0, #0x0
    2ecc:	mov	w2, #0xa7                  	// #167
    2ed0:	bl	0 <__assert_fail>
    2ed4:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ed8:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2edc:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ee0:	add	x3, x3, #0x0
    2ee4:	add	x1, x1, #0x0
    2ee8:	add	x0, x0, #0x0
    2eec:	mov	w2, #0x43                  	// #67
    2ef0:	bl	0 <__assert_fail>
    2ef4:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ef8:	mov	w1, #0x1                   	// #1
    2efc:	add	x0, x0, #0x0
    2f00:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    2f04:	ldr	w19, [x28, #72]
    2f08:	b	2cc8 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj+0x558>
    2f0c:	nop

0000000000002f10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>:
    2f10:	stp	x29, x30, [sp, #-240]!
    2f14:	mov	x29, sp
    2f18:	stp	x19, x20, [sp, #16]
    2f1c:	mov	x19, x0
    2f20:	mov	x0, #0x220                 	// #544
    2f24:	stp	x21, x22, [sp, #32]
    2f28:	mov	x21, x8
    2f2c:	add	x20, sp, #0xe0
    2f30:	str	xzr, [sp, #128]
    2f34:	bl	0 <_Znwm>
    2f38:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2f3c:	mov	x2, x0
    2f40:	mov	x3, x0
    2f44:	mov	x0, #0x100000001           	// #4294967297
    2f48:	ldr	x1, [x1]
    2f4c:	str	x0, [x2, #8]
    2f50:	add	x5, x2, #0x10
    2f54:	mov	x4, #0x2000000000          	// #137438953472
    2f58:	add	x1, x1, #0x10
    2f5c:	str	x1, [x3], #32
    2f60:	mov	x0, x19
    2f64:	mov	w1, #0x5                   	// #5
    2f68:	stp	x3, x4, [x2, #16]
    2f6c:	mov	x8, x20
    2f70:	stp	x5, x2, [sp, #128]
    2f74:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2f78:	ldrb	w1, [sp, #232]
    2f7c:	ldrb	w0, [sp, #200]
    2f80:	and	w2, w1, #0x1
    2f84:	and	w1, w1, #0xfffffffd
    2f88:	strb	w1, [sp, #232]
    2f8c:	bfxil	w0, w2, #0, #1
    2f90:	orr	w0, w0, #0x2
    2f94:	strb	w0, [sp, #200]
    2f98:	ldr	x0, [sp, #224]
    2f9c:	cbnz	w2, 31c8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2b8>
    2fa0:	str	w0, [sp, #192]
    2fa4:	mov	x0, x20
    2fa8:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2fac:	ldrb	w0, [sp, #200]
    2fb0:	and	w1, w0, #0x1
    2fb4:	bfi	w0, w1, #1, #1
    2fb8:	strb	w0, [sp, #200]
    2fbc:	cbnz	w1, 309c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x18c>
    2fc0:	stp	x23, x24, [sp, #48]
    2fc4:	ldr	w23, [sp, #192]
    2fc8:	tbnz	w23, #4, 32d8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3c8>
    2fcc:	str	w23, [sp, #144]
    2fd0:	add	x22, sp, #0xc0
    2fd4:	ldp	x23, x24, [sp, #48]
    2fd8:	ldrb	w0, [sp, #152]
    2fdc:	and	w0, w0, #0xfffffffc
    2fe0:	orr	w0, w0, #0x2
    2fe4:	strb	w0, [sp, #152]
    2fe8:	mov	x0, x22
    2fec:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    2ff0:	ldrb	w0, [sp, #152]
    2ff4:	and	w1, w0, #0x1
    2ff8:	bfi	w0, w1, #1, #1
    2ffc:	strb	w0, [sp, #152]
    3000:	cbz	w1, 30dc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1cc>
    3004:	ldr	x1, [sp, #144]
    3008:	and	w0, w0, #0xfffffffd
    300c:	str	xzr, [sp, #144]
    3010:	orr	x1, x1, #0x1
    3014:	str	x1, [x21]
    3018:	strb	w0, [sp, #152]
    301c:	add	x0, sp, #0x90
    3020:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3024:	ldr	x19, [sp, #136]
    3028:	cbz	x19, 3088 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>
    302c:	adrp	x20, 0 <__pthread_key_create>
    3030:	ldr	x0, [x20]
    3034:	cbz	x0, 34b4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5a4>
    3038:	add	x1, x19, #0x8
    303c:	ldaxr	w0, [x1]
    3040:	sub	w2, w0, #0x1
    3044:	stlxr	w3, w2, [x1]
    3048:	cbnz	w3, 303c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x12c>
    304c:	cmp	w0, #0x1
    3050:	b.ne	3088 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>  // b.any
    3054:	ldr	x1, [x19]
    3058:	mov	x0, x19
    305c:	ldr	x1, [x1, #16]
    3060:	blr	x1
    3064:	ldr	x20, [x20]
    3068:	cbz	x20, 36d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7c0>
    306c:	add	x1, x19, #0xc
    3070:	ldaxr	w0, [x1]
    3074:	sub	w2, w0, #0x1
    3078:	stlxr	w3, w2, [x1]
    307c:	cbnz	w3, 3070 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x160>
    3080:	cmp	w0, #0x1
    3084:	b.eq	3664 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x754>  // b.none
    3088:	mov	x0, x21
    308c:	ldp	x19, x20, [sp, #16]
    3090:	ldp	x21, x22, [sp, #32]
    3094:	ldp	x29, x30, [sp], #240
    3098:	ret
    309c:	ldrb	w1, [sp, #152]
    30a0:	and	w0, w0, #0xfffffffd
    30a4:	ldr	x2, [sp, #192]
    30a8:	orr	w1, w1, #0x3
    30ac:	add	x22, sp, #0xc0
    30b0:	str	x2, [sp, #144]
    30b4:	strb	w1, [sp, #152]
    30b8:	str	xzr, [sp, #192]
    30bc:	strb	w0, [sp, #200]
    30c0:	mov	x0, x22
    30c4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    30c8:	ldrb	w0, [sp, #152]
    30cc:	and	w1, w0, #0x1
    30d0:	bfi	w0, w1, #1, #1
    30d4:	strb	w0, [sp, #152]
    30d8:	cbnz	w1, 3004 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xf4>
    30dc:	stp	x25, x26, [sp, #64]
    30e0:	ldr	w26, [sp, #144]
    30e4:	cbz	w26, 329c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x38c>
    30e8:	stp	x23, x24, [sp, #48]
    30ec:	add	x23, sp, #0xa0
    30f0:	add	x24, sp, #0xd0
    30f4:	add	x0, sp, #0xb0
    30f8:	mov	w25, #0x0                   	// #0
    30fc:	stp	x27, x28, [sp, #80]
    3100:	str	x0, [sp, #104]
    3104:	mov	x0, x19
    3108:	mov	w1, #0x1                   	// #1
    310c:	mov	x8, x23
    3110:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3114:	ldrb	w0, [sp, #168]
    3118:	and	w1, w0, #0x1
    311c:	bfi	w0, w1, #1, #1
    3120:	strb	w0, [sp, #168]
    3124:	cbnz	w1, 370c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7fc>
    3128:	ldr	x0, [sp, #160]
    312c:	cbz	x0, 31f0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2e0>
    3130:	mov	x0, x19
    3134:	mov	w1, #0x8                   	// #8
    3138:	mov	x8, x24
    313c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3140:	ldrb	w0, [sp, #216]
    3144:	and	w1, w0, #0x1
    3148:	bfi	w0, w1, #1, #1
    314c:	strb	w0, [sp, #216]
    3150:	cbz	w1, 33c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4b0>
    3154:	ldrb	w1, [sp, #184]
    3158:	and	w0, w0, #0xfffffffd
    315c:	ldr	x2, [sp, #208]
    3160:	orr	w1, w1, #0x3
    3164:	str	x2, [sp, #176]
    3168:	strb	w1, [sp, #184]
    316c:	str	xzr, [sp, #208]
    3170:	strb	w0, [sp, #216]
    3174:	mov	x0, x24
    3178:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    317c:	ldrb	w0, [sp, #184]
    3180:	and	w1, w0, #0x1
    3184:	bfi	w0, w1, #1, #1
    3188:	strb	w0, [sp, #184]
    318c:	cbz	w1, 34d0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5c0>
    3190:	ldr	x2, [sp, #176]
    3194:	and	w1, w0, #0xfffffffd
    3198:	add	x0, sp, #0xb0
    319c:	str	xzr, [sp, #176]
    31a0:	orr	x2, x2, #0x1
    31a4:	str	x2, [x21]
    31a8:	strb	w1, [sp, #184]
    31ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31b0:	mov	x0, x23
    31b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31b8:	ldp	x23, x24, [sp, #48]
    31bc:	ldp	x25, x26, [sp, #64]
    31c0:	ldp	x27, x28, [sp, #80]
    31c4:	b	301c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x10c>
    31c8:	str	x0, [sp, #192]
    31cc:	mov	x0, x20
    31d0:	str	xzr, [sp, #224]
    31d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    31d8:	ldrb	w0, [sp, #200]
    31dc:	and	w1, w0, #0x1
    31e0:	bfi	w0, w1, #1, #1
    31e4:	strb	w0, [sp, #200]
    31e8:	cbz	w1, 2fc0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xb0>
    31ec:	b	309c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x18c>
    31f0:	mov	x0, x19
    31f4:	mov	w1, #0x3                   	// #3
    31f8:	mov	x8, x22
    31fc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3200:	ldrb	w0, [sp, #200]
    3204:	and	w1, w0, #0x1
    3208:	bfi	w0, w1, #1, #1
    320c:	strb	w0, [sp, #200]
    3210:	cbnz	w1, 37fc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8ec>
    3214:	ldr	x28, [sp, #192]
    3218:	cmp	w28, #0x2
    321c:	b.ls	32c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3b4>  // b.plast
    3220:	sub	w0, w28, #0x3
    3224:	cmp	w0, #0x2
    3228:	b.hi	32c8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3b8>  // b.pmore
    322c:	ldr	x27, [sp, #128]
    3230:	ubfiz	w2, w28, #1, #3
    3234:	mov	x28, #0x0                   	// #0
    3238:	bfxil	x28, x2, #0, #8
    323c:	ldp	w0, w1, [x27, #8]
    3240:	cmp	w0, w1
    3244:	b.cs	3694 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x784>  // b.hs, b.nlast
    3248:	ldr	x1, [x27]
    324c:	ubfiz	x0, x0, #4, #32
    3250:	add	x2, x1, x0
    3254:	str	xzr, [x1, x0]
    3258:	str	x28, [x2, #8]
    325c:	ldp	w0, w2, [x27, #8]
    3260:	mov	w1, w0
    3264:	add	x1, x1, #0x1
    3268:	cmp	x1, x2
    326c:	b.hi	3860 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x950>  // b.pmore
    3270:	add	w0, w0, #0x1
    3274:	str	w0, [x27, #8]
    3278:	mov	x0, x22
    327c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3280:	mov	x0, x23
    3284:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3288:	add	w25, w25, #0x1
    328c:	cmp	w26, w25
    3290:	b.ne	3104 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x1f4>  // b.any
    3294:	ldp	x23, x24, [sp, #48]
    3298:	ldp	x27, x28, [sp, #80]
    329c:	ldr	x0, [sp, #128]
    32a0:	ldr	w0, [x0, #8]
    32a4:	cbz	w0, 3880 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x970>
    32a8:	add	x0, x19, #0x28
    32ac:	add	x1, sp, #0x80
    32b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    32b4:	mov	x0, #0x1                   	// #1
    32b8:	ldp	x25, x26, [sp, #64]
    32bc:	str	x0, [x21]
    32c0:	b	301c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x10c>
    32c4:	cbnz	w28, 33e4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4d4>
    32c8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    32cc:	mov	w1, #0x1                   	// #1
    32d0:	add	x0, x0, #0x0
    32d4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    32d8:	and	w23, w23, #0xf
    32dc:	add	x22, sp, #0xc0
    32e0:	mov	w24, #0x0                   	// #0
    32e4:	stp	x25, x26, [sp, #64]
    32e8:	add	x25, sp, #0xd0
    32ec:	b	3368 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x458>
    32f0:	str	w0, [sp, #224]
    32f4:	ldrb	w0, [sp, #200]
    32f8:	tbnz	w0, #1, 34c4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5b4>
    32fc:	mov	x0, x22
    3300:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3304:	ldrb	w1, [sp, #232]
    3308:	ldrb	w0, [sp, #200]
    330c:	and	w2, w1, #0x1
    3310:	and	w1, w1, #0xfffffffd
    3314:	strb	w1, [sp, #232]
    3318:	bfxil	w0, w2, #0, #1
    331c:	orr	w0, w0, #0x2
    3320:	strb	w0, [sp, #200]
    3324:	cbnz	w2, 33b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x4a0>
    3328:	ldr	w0, [sp, #224]
    332c:	str	w0, [sp, #192]
    3330:	mov	x0, x20
    3334:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3338:	mov	x0, x25
    333c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3340:	ldrb	w0, [sp, #200]
    3344:	and	w1, w0, #0x1
    3348:	bfi	w0, w1, #1, #1
    334c:	strb	w0, [sp, #200]
    3350:	cbnz	w1, 36e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7d0>
    3354:	ldr	w1, [sp, #192]
    3358:	and	w0, w1, #0xf
    335c:	lsl	w0, w0, w24
    3360:	orr	w23, w23, w0
    3364:	tbz	w1, #4, 36b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x7a0>
    3368:	mov	x0, x19
    336c:	mov	w1, #0x5                   	// #5
    3370:	mov	x8, x25
    3374:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3378:	ldrb	w1, [sp, #216]
    337c:	add	w24, w24, #0x4
    3380:	ldrb	w0, [sp, #232]
    3384:	and	w2, w1, #0x1
    3388:	and	w1, w1, #0xfffffffd
    338c:	strb	w1, [sp, #216]
    3390:	bfxil	w0, w2, #0, #1
    3394:	orr	w0, w0, #0x2
    3398:	strb	w0, [sp, #232]
    339c:	ldr	x0, [sp, #208]
    33a0:	cbz	w2, 32f0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3e0>
    33a4:	str	xzr, [sp, #208]
    33a8:	str	x0, [sp, #224]
    33ac:	b	32f4 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x3e4>
    33b0:	ldr	x0, [sp, #224]
    33b4:	str	x0, [sp, #192]
    33b8:	str	xzr, [sp, #224]
    33bc:	b	3330 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x420>
    33c0:	ldr	x0, [sp, #208]
    33c4:	tbnz	w0, #7, 352c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x61c>
    33c8:	ldrb	w1, [sp, #184]
    33cc:	and	x0, x0, #0xffffffff
    33d0:	str	x0, [sp, #176]
    33d4:	and	w0, w1, #0xfffffffc
    33d8:	orr	w0, w0, #0x2
    33dc:	strb	w0, [sp, #184]
    33e0:	b	3174 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    33e4:	mov	x0, x19
    33e8:	mov	w1, #0x5                   	// #5
    33ec:	mov	x8, x24
    33f0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    33f4:	ldrb	w0, [sp, #216]
    33f8:	and	w1, w0, #0x1
    33fc:	bfi	w0, w1, #1, #1
    3400:	strb	w0, [sp, #216]
    3404:	cbnz	w1, 35c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6b0>
    3408:	ldr	x0, [sp, #208]
    340c:	tbz	w0, #4, 3678 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x768>
    3410:	and	x0, x0, #0xf
    3414:	mov	w27, #0x0                   	// #0
    3418:	str	x0, [sp, #112]
    341c:	b	3490 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x580>
    3420:	mov	x0, x24
    3424:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3428:	ldrb	w1, [sp, #232]
    342c:	ldrb	w0, [sp, #216]
    3430:	and	w3, w1, #0x1
    3434:	and	w1, w1, #0xfffffffd
    3438:	strb	w1, [sp, #232]
    343c:	bfxil	w0, w3, #0, #1
    3440:	orr	w0, w0, #0x2
    3444:	strb	w0, [sp, #216]
    3448:	ldr	x0, [sp, #224]
    344c:	str	x0, [sp, #208]
    3450:	cbz	w3, 3458 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x548>
    3454:	str	xzr, [sp, #224]
    3458:	mov	x0, x20
    345c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3460:	ldrb	w0, [sp, #216]
    3464:	and	w1, w0, #0x1
    3468:	bfi	w0, w1, #1, #1
    346c:	strb	w0, [sp, #216]
    3470:	cbnz	w1, 35c0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6b0>
    3474:	ldr	x1, [sp, #208]
    3478:	ldr	x2, [sp, #112]
    347c:	and	x0, x1, #0xf
    3480:	lsl	x0, x0, x27
    3484:	orr	x0, x2, x0
    3488:	str	x0, [sp, #112]
    348c:	tbz	w1, #4, 37e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8d0>
    3490:	mov	x0, x19
    3494:	mov	x8, x20
    3498:	mov	w1, #0x5                   	// #5
    349c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34a0:	ldrb	w0, [sp, #216]
    34a4:	add	w27, w27, #0x4
    34a8:	tbz	w0, #1, 3420 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x510>
    34ac:	mov	x0, x24
    34b0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34b4:	ldr	w0, [x19, #8]
    34b8:	sub	w1, w0, #0x1
    34bc:	str	w1, [x19, #8]
    34c0:	b	304c <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x13c>
    34c4:	mov	x0, x22
    34c8:	stp	x27, x28, [sp, #80]
    34cc:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    34d0:	ldr	x27, [sp, #128]
    34d4:	mov	x28, #0x1                   	// #1
    34d8:	ldr	x5, [sp, #176]
    34dc:	ldp	w0, w1, [x27, #8]
    34e0:	cmp	w0, w1
    34e4:	b.cs	37bc <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x8ac>  // b.hs, b.nlast
    34e8:	ldr	x1, [x27]
    34ec:	ubfiz	x0, x0, #4, #32
    34f0:	add	x2, x1, x0
    34f4:	str	x5, [x1, x0]
    34f8:	str	x28, [x2, #8]
    34fc:	ldp	w0, w2, [x27, #8]
    3500:	mov	w1, w0
    3504:	add	x1, x1, #0x1
    3508:	cmp	x1, x2
    350c:	b.hi	3860 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x950>  // b.pmore
    3510:	add	w0, w0, #0x1
    3514:	str	w0, [x27, #8]
    3518:	ldr	x0, [sp, #104]
    351c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3520:	mov	x0, x23
    3524:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3528:	b	3288 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x378>
    352c:	and	x28, x0, #0x7f
    3530:	mov	w27, #0x0                   	// #0
    3534:	b	35a0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x690>
    3538:	mov	x0, x24
    353c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3540:	ldrb	w1, [sp, #232]
    3544:	ldrb	w0, [sp, #216]
    3548:	and	w2, w1, #0x1
    354c:	and	w1, w1, #0xfffffffd
    3550:	strb	w1, [sp, #232]
    3554:	bfxil	w0, w2, #0, #1
    3558:	orr	w0, w0, #0x2
    355c:	strb	w0, [sp, #216]
    3560:	ldr	x0, [sp, #224]
    3564:	str	x0, [sp, #208]
    3568:	cbz	w2, 3570 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x660>
    356c:	str	xzr, [sp, #224]
    3570:	mov	x0, x20
    3574:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3578:	ldrb	w0, [sp, #216]
    357c:	and	w1, w0, #0x1
    3580:	bfi	w0, w1, #1, #1
    3584:	strb	w0, [sp, #216]
    3588:	cbnz	w1, 3154 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x244>
    358c:	ldr	x1, [sp, #208]
    3590:	and	x0, x1, #0x7f
    3594:	lsl	x0, x0, x27
    3598:	orr	x28, x28, x0
    359c:	tbz	w1, #7, 3728 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x818>
    35a0:	mov	x0, x19
    35a4:	mov	x8, x20
    35a8:	mov	w1, #0x8                   	// #8
    35ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    35b0:	ldrb	w0, [sp, #216]
    35b4:	add	w27, w27, #0x7
    35b8:	tbz	w0, #1, 3538 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x628>
    35bc:	b	34ac <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x59c>
    35c0:	ldrb	w1, [sp, #232]
    35c4:	and	w0, w0, #0xfffffffd
    35c8:	ldr	x3, [sp, #208]
    35cc:	orr	w1, w1, #0x3
    35d0:	str	xzr, [sp, #208]
    35d4:	strb	w0, [sp, #216]
    35d8:	str	x3, [sp, #224]
    35dc:	strb	w1, [sp, #232]
    35e0:	mov	x0, x24
    35e4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    35e8:	ldrb	w0, [sp, #232]
    35ec:	and	w1, w0, #0x1
    35f0:	bfi	w0, w1, #1, #1
    35f4:	strb	w0, [sp, #232]
    35f8:	cbnz	w1, 3820 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x910>
    35fc:	ldr	x4, [sp, #224]
    3600:	cbz	x4, 3764 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x854>
    3604:	cmp	x4, #0x40
    3608:	b.hi	3898 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x988>  // b.pmore
    360c:	ldr	x27, [sp, #128]
    3610:	ubfiz	w2, w28, #1, #3
    3614:	mov	x5, #0x0                   	// #0
    3618:	bfxil	x5, x2, #0, #8
    361c:	ldp	w0, w1, [x27, #8]
    3620:	cmp	w0, w1
    3624:	b.cs	3740 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x830>  // b.hs, b.nlast
    3628:	ldr	x1, [x27]
    362c:	ubfiz	x0, x0, #4, #32
    3630:	add	x2, x1, x0
    3634:	str	x4, [x1, x0]
    3638:	str	x5, [x2, #8]
    363c:	ldp	w0, w2, [x27, #8]
    3640:	mov	w1, w0
    3644:	add	x1, x1, #0x1
    3648:	cmp	x1, x2
    364c:	b.hi	3860 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x950>  // b.pmore
    3650:	add	w0, w0, #0x1
    3654:	str	w0, [x27, #8]
    3658:	mov	x0, x20
    365c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3660:	b	3278 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x368>
    3664:	ldr	x1, [x19]
    3668:	mov	x0, x19
    366c:	ldr	x1, [x1, #24]
    3670:	blr	x1
    3674:	b	3088 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x178>
    3678:	ldrb	w1, [sp, #232]
    367c:	and	x0, x0, #0xffffffff
    3680:	str	x0, [sp, #224]
    3684:	and	w0, w1, #0xfffffffc
    3688:	orr	w0, w0, #0x2
    368c:	strb	w0, [sp, #232]
    3690:	b	35e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6d0>
    3694:	mov	x0, x27
    3698:	mov	x3, #0x10                  	// #16
    369c:	mov	x2, #0x0                   	// #0
    36a0:	add	x1, x27, x3
    36a4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    36a8:	ldr	w0, [x27, #8]
    36ac:	b	3248 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x338>
    36b0:	ldrb	w0, [sp, #152]
    36b4:	str	w23, [sp, #144]
    36b8:	and	w0, w0, #0xfffffffc
    36bc:	orr	w0, w0, #0x2
    36c0:	strb	w0, [sp, #152]
    36c4:	ldp	x23, x24, [sp, #48]
    36c8:	ldp	x25, x26, [sp, #64]
    36cc:	b	2fe8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd8>
    36d0:	ldr	w0, [x19, #12]
    36d4:	sub	w1, w0, #0x1
    36d8:	str	w1, [x19, #12]
    36dc:	b	3080 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x170>
    36e0:	ldrb	w1, [sp, #152]
    36e4:	and	w0, w0, #0xfffffffd
    36e8:	ldr	x2, [sp, #192]
    36ec:	orr	w1, w1, #0x3
    36f0:	str	x2, [sp, #144]
    36f4:	strb	w1, [sp, #152]
    36f8:	str	xzr, [sp, #192]
    36fc:	strb	w0, [sp, #200]
    3700:	ldp	x23, x24, [sp, #48]
    3704:	ldp	x25, x26, [sp, #64]
    3708:	b	2fe8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0xd8>
    370c:	ldr	x1, [sp, #160]
    3710:	and	w0, w0, #0xfffffffd
    3714:	str	xzr, [sp, #160]
    3718:	orr	x1, x1, #0x1
    371c:	str	x1, [x21]
    3720:	strb	w0, [sp, #168]
    3724:	b	31b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    3728:	ldrb	w0, [sp, #184]
    372c:	str	x28, [sp, #176]
    3730:	and	w0, w0, #0xfffffffc
    3734:	orr	w0, w0, #0x2
    3738:	strb	w0, [sp, #184]
    373c:	b	3174 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x264>
    3740:	mov	x0, x27
    3744:	mov	x3, #0x10                  	// #16
    3748:	mov	x2, #0x0                   	// #0
    374c:	add	x1, x27, x3
    3750:	stp	x4, x5, [sp, #112]
    3754:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3758:	ldr	w0, [x27, #8]
    375c:	ldp	x4, x5, [sp, #112]
    3760:	b	3628 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x718>
    3764:	ldr	x27, [sp, #128]
    3768:	mov	x28, #0x1                   	// #1
    376c:	ldp	w0, w1, [x27, #8]
    3770:	cmp	w0, w1
    3774:	b.cs	3844 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x934>  // b.hs, b.nlast
    3778:	ldr	x1, [x27]
    377c:	ubfiz	x0, x0, #4, #32
    3780:	add	x2, x1, x0
    3784:	str	xzr, [x1, x0]
    3788:	str	x28, [x2, #8]
    378c:	ldp	w0, w2, [x27, #8]
    3790:	mov	w1, w0
    3794:	add	x1, x1, #0x1
    3798:	cmp	x1, x2
    379c:	b.hi	3860 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x950>  // b.pmore
    37a0:	add	w0, w0, #0x1
    37a4:	str	w0, [x27, #8]
    37a8:	mov	x0, x20
    37ac:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    37b0:	mov	x0, x22
    37b4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    37b8:	b	3520 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x610>
    37bc:	mov	x0, x27
    37c0:	mov	x3, #0x10                  	// #16
    37c4:	mov	x2, #0x0                   	// #0
    37c8:	add	x1, x27, x3
    37cc:	str	x5, [sp, #112]
    37d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    37d4:	ldr	w0, [x27, #8]
    37d8:	ldr	x5, [sp, #112]
    37dc:	b	34e8 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x5d8>
    37e0:	ldrb	w0, [sp, #232]
    37e4:	ldr	x1, [sp, #112]
    37e8:	and	w0, w0, #0xfffffffc
    37ec:	orr	w0, w0, #0x2
    37f0:	str	x1, [sp, #224]
    37f4:	strb	w0, [sp, #232]
    37f8:	b	35e0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x6d0>
    37fc:	ldr	x1, [sp, #192]
    3800:	and	w0, w0, #0xfffffffd
    3804:	str	xzr, [sp, #192]
    3808:	orr	x1, x1, #0x1
    380c:	str	x1, [x21]
    3810:	strb	w0, [sp, #200]
    3814:	mov	x0, x22
    3818:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    381c:	b	31b0 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x2a0>
    3820:	ldr	x2, [sp, #224]
    3824:	and	w1, w0, #0xfffffffd
    3828:	mov	x0, x20
    382c:	str	xzr, [sp, #224]
    3830:	orr	x2, x2, #0x1
    3834:	str	x2, [x21]
    3838:	strb	w1, [sp, #232]
    383c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3840:	b	3814 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x904>
    3844:	mov	x0, x27
    3848:	mov	x3, #0x10                  	// #16
    384c:	mov	x2, #0x0                   	// #0
    3850:	add	x1, x27, x3
    3854:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3858:	ldr	w0, [x27, #8]
    385c:	b	3778 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv+0x868>
    3860:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3864:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3868:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    386c:	add	x3, x3, #0x0
    3870:	add	x1, x1, #0x0
    3874:	add	x0, x0, #0x0
    3878:	mov	w2, #0x43                  	// #67
    387c:	bl	0 <__assert_fail>
    3880:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3884:	mov	w1, #0x1                   	// #1
    3888:	add	x0, x0, #0x0
    388c:	stp	x23, x24, [sp, #48]
    3890:	stp	x27, x28, [sp, #80]
    3894:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>
    3898:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    389c:	mov	w1, #0x1                   	// #1
    38a0:	add	x0, x0, #0x0
    38a4:	bl	0 <_ZN4llvm18report_fatal_errorEPKcb>

00000000000038a8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb>:
    38a8:	sub	sp, sp, #0x330
    38ac:	mov	x2, #0x0                   	// #0
    38b0:	stp	x29, x30, [sp]
    38b4:	mov	x29, sp
    38b8:	stp	x19, x20, [sp, #16]
    38bc:	add	x20, sp, #0x120
    38c0:	mov	x19, x0
    38c4:	stp	x21, x22, [sp, #32]
    38c8:	mov	x21, x8
    38cc:	and	w22, w1, #0xff
    38d0:	mov	x8, x20
    38d4:	mov	w1, #0x0                   	// #0
    38d8:	bl	2770 <_ZN4llvm15BitstreamCursor13EnterSubBlockEjPj>
    38dc:	ldr	x1, [sp, #288]
    38e0:	ands	x1, x1, #0xfffffffffffffffe
    38e4:	b.ne	39dc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x134>  // b.any
    38e8:	stp	x23, x24, [sp, #48]
    38ec:	add	x23, sp, #0xf8
    38f0:	add	x24, sp, #0xd8
    38f4:	stp	x25, x26, [sp, #64]
    38f8:	add	x26, x24, #0x10
    38fc:	add	x1, x20, #0x10
    3900:	stp	x27, x28, [sp, #80]
    3904:	add	x27, x23, #0x10
    3908:	add	x28, sp, #0xa0
    390c:	mov	x0, #0x4000000000          	// #274877906944
    3910:	mov	x25, #0x0                   	// #0
    3914:	stp	xzr, xzr, [sp, #192]
    3918:	str	xzr, [sp, #208]
    391c:	stp	x1, x0, [sp, #288]
    3920:	mov	x0, x19
    3924:	mov	w1, #0x2                   	// #2
    3928:	mov	x8, x28
    392c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3930:	ldrb	w0, [sp, #168]
    3934:	and	w1, w0, #0x1
    3938:	bfi	w0, w1, #1, #1
    393c:	strb	w0, [sp, #168]
    3940:	cbnz	w1, 3e9c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x5f4>
    3944:	ldr	w0, [sp, #160]
    3948:	cmp	w0, #0x1
    394c:	b.eq	3bb8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x310>  // b.none
    3950:	tst	w0, #0xfffffffd
    3954:	b.eq	3a04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x15c>  // b.none
    3958:	ldr	w1, [sp, #164]
    395c:	cmp	w1, #0x2
    3960:	b.ne	3be8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x340>  // b.any
    3964:	cbz	x25, 3a04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x15c>
    3968:	mov	x0, x19
    396c:	mov	x8, x23
    3970:	bl	2f10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
    3974:	ldr	x0, [sp, #248]
    3978:	ands	x0, x0, #0xfffffffffffffffe
    397c:	b.ne	3c44 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x39c>  // b.any
    3980:	ldr	x1, [x19, #48]
    3984:	add	x0, x25, #0x8
    3988:	sub	x1, x1, #0x10
    398c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3990:	ldr	x0, [x19, #48]
    3994:	sub	x1, x0, #0x10
    3998:	ldur	x0, [x0, #-8]
    399c:	str	x1, [x19, #48]
    39a0:	cbz	x0, 39d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x128>
    39a4:	adrp	x2, 0 <__pthread_key_create>
    39a8:	ldr	x1, [x2]
    39ac:	cbz	x1, 3ee8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x640>
    39b0:	add	x3, x0, #0x8
    39b4:	ldaxr	w1, [x3]
    39b8:	sub	w4, w1, #0x1
    39bc:	stlxr	w5, w4, [x3]
    39c0:	cbnz	w5, 39b4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x10c>
    39c4:	cmp	w1, #0x1
    39c8:	b.eq	3fdc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x734>  // b.none
    39cc:	nop
    39d0:	mov	x0, x28
    39d4:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    39d8:	b	3920 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x78>
    39dc:	ldrb	w0, [x21, #32]
    39e0:	str	x1, [x21]
    39e4:	orr	w0, w0, #0x3
    39e8:	strb	w0, [x21, #32]
    39ec:	mov	x0, x21
    39f0:	ldp	x29, x30, [sp]
    39f4:	ldp	x19, x20, [sp, #16]
    39f8:	ldp	x21, x22, [sp, #32]
    39fc:	add	sp, sp, #0x330
    3a00:	ret
    3a04:	ldrb	w0, [x21, #32]
    3a08:	strb	wzr, [x21]
    3a0c:	and	w0, w0, #0xfffffffc
    3a10:	strb	wzr, [x21, #24]
    3a14:	orr	w0, w0, #0x2
    3a18:	strb	w0, [x21, #32]
    3a1c:	mov	x0, x28
    3a20:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3a24:	ldr	x0, [sp, #288]
    3a28:	add	x8, x20, #0x10
    3a2c:	cmp	x0, x8
    3a30:	b.eq	3a38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x190>  // b.none
    3a34:	bl	0 <free>
    3a38:	ldp	x20, x23, [sp, #192]
    3a3c:	cmp	x20, x23
    3a40:	b.eq	3b68 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2c0>  // b.none
    3a44:	adrp	x24, 0 <__pthread_key_create>
    3a48:	ldr	x24, [x24]
    3a4c:	mov	x25, x24
    3a50:	ldp	x19, x22, [x20, #64]
    3a54:	cmp	x19, x22
    3a58:	b.eq	3a84 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1dc>  // b.none
    3a5c:	nop
    3a60:	ldr	x0, [x19, #8]
    3a64:	add	x1, x19, #0x18
    3a68:	cmp	x0, x1
    3a6c:	b.eq	3a74 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1cc>  // b.none
    3a70:	bl	0 <_ZdlPv>
    3a74:	add	x19, x19, #0x28
    3a78:	cmp	x22, x19
    3a7c:	b.ne	3a60 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1b8>  // b.any
    3a80:	ldr	x22, [x20, #64]
    3a84:	cbz	x22, 3a90 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1e8>
    3a88:	mov	x0, x22
    3a8c:	bl	0 <_ZdlPv>
    3a90:	ldr	x0, [x20, #32]
    3a94:	add	x1, x20, #0x30
    3a98:	cmp	x0, x1
    3a9c:	b.eq	3aa4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1fc>  // b.none
    3aa0:	bl	0 <_ZdlPv>
    3aa4:	ldp	x22, x26, [x20, #8]
    3aa8:	cmp	x22, x26
    3aac:	b.ne	3adc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x234>  // b.any
    3ab0:	b	3b4c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2a4>
    3ab4:	add	x1, x19, #0x8
    3ab8:	ldaxr	w0, [x1]
    3abc:	sub	w2, w0, #0x1
    3ac0:	stlxr	w3, w2, [x1]
    3ac4:	cbnz	w3, 3ab8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x210>
    3ac8:	cmp	w0, #0x1
    3acc:	b.eq	3afc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x254>  // b.none
    3ad0:	add	x22, x22, #0x10
    3ad4:	cmp	x26, x22
    3ad8:	b.eq	3b48 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2a0>  // b.none
    3adc:	ldr	x19, [x22, #8]
    3ae0:	cbz	x19, 3ad0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x228>
    3ae4:	cbnz	x24, 3ab4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x20c>
    3ae8:	ldr	w0, [x19, #8]
    3aec:	sub	w1, w0, #0x1
    3af0:	str	w1, [x19, #8]
    3af4:	cmp	w0, #0x1
    3af8:	b.ne	3ad0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x228>  // b.any
    3afc:	ldr	x1, [x19]
    3b00:	mov	x0, x19
    3b04:	ldr	x1, [x1, #16]
    3b08:	blr	x1
    3b0c:	cbz	x25, 3b98 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2f0>
    3b10:	add	x1, x19, #0xc
    3b14:	ldaxr	w0, [x1]
    3b18:	sub	w2, w0, #0x1
    3b1c:	stlxr	w3, w2, [x1]
    3b20:	cbnz	w3, 3b14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x26c>
    3b24:	cmp	w0, #0x1
    3b28:	b.ne	3ad0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x228>  // b.any
    3b2c:	ldr	x1, [x19]
    3b30:	mov	x0, x19
    3b34:	add	x22, x22, #0x10
    3b38:	ldr	x1, [x1, #24]
    3b3c:	blr	x1
    3b40:	cmp	x26, x22
    3b44:	b.ne	3adc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x234>  // b.any
    3b48:	ldr	x26, [x20, #8]
    3b4c:	cbz	x26, 3b58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x2b0>
    3b50:	mov	x0, x26
    3b54:	bl	0 <_ZdlPv>
    3b58:	add	x20, x20, #0x58
    3b5c:	cmp	x23, x20
    3b60:	b.ne	3a50 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x1a8>  // b.any
    3b64:	ldr	x23, [sp, #192]
    3b68:	cbz	x23, 3ba8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x300>
    3b6c:	mov	x0, x23
    3b70:	bl	0 <_ZdlPv>
    3b74:	mov	x0, x21
    3b78:	ldp	x29, x30, [sp]
    3b7c:	ldp	x19, x20, [sp, #16]
    3b80:	ldp	x21, x22, [sp, #32]
    3b84:	ldp	x23, x24, [sp, #48]
    3b88:	ldp	x25, x26, [sp, #64]
    3b8c:	ldp	x27, x28, [sp, #80]
    3b90:	add	sp, sp, #0x330
    3b94:	ret
    3b98:	ldr	w0, [x19, #12]
    3b9c:	sub	w1, w0, #0x1
    3ba0:	str	w1, [x19, #12]
    3ba4:	b	3b24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x27c>
    3ba8:	ldp	x23, x24, [sp, #48]
    3bac:	ldp	x25, x26, [sp, #64]
    3bb0:	ldp	x27, x28, [sp, #80]
    3bb4:	b	39ec <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x144>
    3bb8:	ldrb	w1, [x21, #32]
    3bbc:	ldp	x4, x3, [sp, #192]
    3bc0:	and	w1, w1, #0xfffffffc
    3bc4:	ldr	x2, [sp, #208]
    3bc8:	orr	w1, w1, #0x2
    3bcc:	stp	x4, x3, [x21]
    3bd0:	str	x2, [x21, #16]
    3bd4:	strb	w0, [x21, #24]
    3bd8:	strb	w1, [x21, #32]
    3bdc:	stp	xzr, xzr, [sp, #192]
    3be0:	str	xzr, [sp, #208]
    3be4:	b	3a1c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x174>
    3be8:	add	x8, sp, #0xb0
    3bec:	mov	x0, x19
    3bf0:	mov	x2, x20
    3bf4:	mov	x3, #0x0                   	// #0
    3bf8:	str	x8, [sp, #96]
    3bfc:	str	wzr, [sp, #296]
    3c00:	bl	1308 <_ZN4llvm15BitstreamCursor10readRecordEjRNS_15SmallVectorImplImEEPNS_9StringRefE>
    3c04:	ldrb	w0, [sp, #184]
    3c08:	ldr	x8, [sp, #96]
    3c0c:	and	w1, w0, #0x1
    3c10:	bfi	w0, w1, #1, #1
    3c14:	strb	w0, [sp, #184]
    3c18:	cbnz	w1, 40b4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x80c>
    3c1c:	ldr	w0, [sp, #176]
    3c20:	cmp	w0, #0x2
    3c24:	b.eq	3ddc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x534>  // b.none
    3c28:	cmp	w0, #0x3
    3c2c:	b.eq	3d14 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x46c>  // b.none
    3c30:	cmp	w0, #0x1
    3c34:	b.eq	3c58 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3b0>  // b.none
    3c38:	mov	x0, x8
    3c3c:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3c40:	b	39d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x128>
    3c44:	ldrb	w1, [x21, #32]
    3c48:	str	x0, [x21]
    3c4c:	orr	w0, w1, #0x3
    3c50:	strb	w0, [x21, #32]
    3c54:	b	3a1c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x174>
    3c58:	ldr	w0, [sp, #296]
    3c5c:	cbz	w0, 40f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x84c>
    3c60:	ldr	x2, [sp, #288]
    3c64:	ldp	x0, x1, [sp, #192]
    3c68:	ldr	x6, [x2]
    3c6c:	mov	w4, w6
    3c70:	cmp	x0, x1
    3c74:	b.eq	3c88 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x3e0>  // b.none
    3c78:	ldur	w2, [x1, #-88]
    3c7c:	sub	x25, x1, #0x58
    3c80:	cmp	w6, w2
    3c84:	b.eq	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>  // b.none
    3c88:	sub	x2, x1, x0
    3c8c:	mov	x3, #0x8ba3                	// #35747
    3c90:	movk	x3, #0xba2e, lsl #16
    3c94:	asr	x2, x2, #3
    3c98:	movk	x3, #0xa2e8, lsl #32
    3c9c:	movk	x3, #0x2e8b, lsl #48
    3ca0:	mul	x2, x2, x3
    3ca4:	cbz	w2, 3cd4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x42c>
    3ca8:	sub	w2, w2, #0x1
    3cac:	add	x3, x0, #0x58
    3cb0:	mov	w7, #0x58                  	// #88
    3cb4:	umaddl	x2, w2, w7, x3
    3cb8:	ldr	w3, [x0]
    3cbc:	mov	x25, x0
    3cc0:	cmp	w4, w3
    3cc4:	b.eq	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>  // b.none
    3cc8:	add	x0, x0, #0x58
    3ccc:	cmp	x2, x0
    3cd0:	b.ne	3cb8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x410>  // b.any
    3cd4:	ldr	x0, [sp, #208]
    3cd8:	cmp	x1, x0
    3cdc:	b.eq	4110 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x868>  // b.none
    3ce0:	mov	x0, x1
    3ce4:	stp	xzr, xzr, [x1]
    3ce8:	add	x7, x1, #0x30
    3cec:	add	x2, x1, #0x58
    3cf0:	stp	xzr, xzr, [x1, #16]
    3cf4:	mov	x25, x1
    3cf8:	stp	x7, xzr, [x1, #32]
    3cfc:	stp	xzr, xzr, [x1, #48]
    3d00:	stp	xzr, xzr, [x1, #64]
    3d04:	str	xzr, [x1, #80]
    3d08:	str	x2, [sp, #200]
    3d0c:	str	w6, [x0]
    3d10:	b	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>
    3d14:	cbz	x25, 40f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x84c>
    3d18:	cbz	w22, 3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>
    3d1c:	ldr	w10, [sp, #296]
    3d20:	stp	x26, xzr, [sp, #216]
    3d24:	cmp	w10, #0x1
    3d28:	strb	wzr, [sp, #232]
    3d2c:	b.eq	4134 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x88c>  // b.none
    3d30:	mov	w0, w10
    3d34:	mov	w6, #0x1                   	// #1
    3d38:	mov	x11, #0xf                   	// #15
    3d3c:	b	3d60 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x4b8>
    3d40:	strb	w9, [x2, x1]
    3d44:	add	w6, w6, #0x1
    3d48:	str	x7, [sp, #224]
    3d4c:	cmp	w6, w10
    3d50:	ldr	x0, [sp, #216]
    3d54:	strb	wzr, [x0, x7]
    3d58:	ldr	w0, [sp, #296]
    3d5c:	b.eq	3f24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x67c>  // b.none
    3d60:	cmp	w6, w0
    3d64:	mov	w4, w6
    3d68:	b.cs	4148 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8a0>  // b.hs, b.nlast
    3d6c:	ldp	x2, x1, [sp, #216]
    3d70:	ldr	x3, [sp, #288]
    3d74:	ldr	x0, [sp, #232]
    3d78:	ldr	x9, [x3, x4, lsl #3]
    3d7c:	cmp	x2, x26
    3d80:	add	x7, x1, #0x1
    3d84:	csel	x0, x0, x11, ne  // ne = any
    3d88:	cmp	x7, x0
    3d8c:	and	w9, w9, #0xff
    3d90:	b.ls	3d40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x498>  // b.plast
    3d94:	mov	x2, #0x0                   	// #0
    3d98:	mov	x0, x24
    3d9c:	mov	x4, #0x1                   	// #1
    3da0:	mov	x3, #0x0                   	// #0
    3da4:	str	x1, [sp, #96]
    3da8:	str	w9, [sp, #104]
    3dac:	str	w6, [sp, #112]
    3db0:	str	w10, [sp, #120]
    3db4:	stp	x7, x8, [sp, #128]
    3db8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    3dbc:	ldr	w9, [sp, #104]
    3dc0:	ldr	w6, [sp, #112]
    3dc4:	mov	x11, #0xf                   	// #15
    3dc8:	ldr	w10, [sp, #120]
    3dcc:	ldr	x1, [sp, #96]
    3dd0:	ldp	x7, x8, [sp, #128]
    3dd4:	ldr	x2, [sp, #216]
    3dd8:	b	3d40 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x498>
    3ddc:	cbz	x25, 40f4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x84c>
    3de0:	cbz	w22, 3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>
    3de4:	ldr	w10, [sp, #296]
    3de8:	stp	x27, xzr, [sp, #248]
    3dec:	strb	wzr, [sp, #264]
    3df0:	cbz	w10, 3ef8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x650>
    3df4:	mov	w0, w10
    3df8:	mov	x6, #0x0                   	// #0
    3dfc:	mov	x11, #0xf                   	// #15
    3e00:	b	3e24 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x57c>
    3e04:	strb	w9, [x2, x1]
    3e08:	add	x6, x6, #0x1
    3e0c:	str	x7, [sp, #256]
    3e10:	cmp	w10, w6
    3e14:	ldr	x0, [sp, #248]
    3e18:	strb	wzr, [x0, x7]
    3e1c:	b.eq	3ef8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x650>  // b.none
    3e20:	ldr	w0, [sp, #296]
    3e24:	cmp	x6, w0, uxtw
    3e28:	b.cs	4148 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8a0>  // b.hs, b.nlast
    3e2c:	ldp	x2, x1, [sp, #248]
    3e30:	ldr	x3, [sp, #288]
    3e34:	ldr	x0, [sp, #264]
    3e38:	ldr	x9, [x3, x6, lsl #3]
    3e3c:	cmp	x2, x27
    3e40:	add	x7, x1, #0x1
    3e44:	csel	x0, x0, x11, ne  // ne = any
    3e48:	cmp	x7, x0
    3e4c:	and	w9, w9, #0xff
    3e50:	b.ls	3e04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x55c>  // b.plast
    3e54:	mov	x2, #0x0                   	// #0
    3e58:	mov	x0, x23
    3e5c:	mov	x4, #0x1                   	// #1
    3e60:	mov	x3, #0x0                   	// #0
    3e64:	str	x1, [sp, #96]
    3e68:	str	w9, [sp, #104]
    3e6c:	str	w10, [sp, #112]
    3e70:	stp	x6, x7, [sp, #120]
    3e74:	str	x8, [sp, #136]
    3e78:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm>
    3e7c:	ldr	w9, [sp, #104]
    3e80:	mov	x11, #0xf                   	// #15
    3e84:	ldr	w10, [sp, #112]
    3e88:	ldr	x1, [sp, #96]
    3e8c:	ldp	x6, x7, [sp, #120]
    3e90:	ldr	x8, [sp, #136]
    3e94:	ldr	x2, [sp, #248]
    3e98:	b	3e04 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x55c>
    3e9c:	ldrb	w2, [x21, #32]
    3ea0:	and	w0, w0, #0xfffffffd
    3ea4:	ldr	x1, [sp, #160]
    3ea8:	orr	w2, w2, #0x3
    3eac:	strb	w2, [x21, #32]
    3eb0:	str	xzr, [sp, #160]
    3eb4:	ands	x1, x1, #0xfffffffffffffffe
    3eb8:	strb	w0, [sp, #168]
    3ebc:	b.ne	3ee0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x638>  // b.any
    3ec0:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ec4:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ec8:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    3ecc:	add	x3, x3, #0x0
    3ed0:	add	x1, x1, #0x0
    3ed4:	add	x0, x0, #0x0
    3ed8:	mov	w2, #0x1ce                 	// #462
    3edc:	bl	0 <__assert_fail>
    3ee0:	str	x1, [x21]
    3ee4:	b	3a1c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x174>
    3ee8:	ldr	w1, [x0, #8]
    3eec:	sub	w3, w1, #0x1
    3ef0:	str	w3, [x0, #8]
    3ef4:	b	39c4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x11c>
    3ef8:	add	x0, x25, #0x20
    3efc:	mov	x1, x23
    3f00:	str	x8, [sp, #96]
    3f04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_>
    3f08:	ldr	x0, [sp, #248]
    3f0c:	ldr	x8, [sp, #96]
    3f10:	cmp	x0, x27
    3f14:	b.eq	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>  // b.none
    3f18:	bl	0 <_ZdlPv>
    3f1c:	ldr	x8, [sp, #96]
    3f20:	b	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>
    3f24:	add	x3, x25, #0x40
    3f28:	cbz	w0, 4148 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x8a0>
    3f2c:	ldp	x6, x4, [sp, #216]
    3f30:	add	x0, x23, #0x18
    3f34:	ldr	x1, [sp, #288]
    3f38:	ldr	x1, [x1]
    3f3c:	str	w1, [sp, #248]
    3f40:	str	x0, [sp, #256]
    3f44:	cmn	x6, x4
    3f48:	ccmp	x6, #0x0, #0x0, ne  // ne = any
    3f4c:	b.eq	413c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x894>  // b.none
    3f50:	str	x4, [sp, #152]
    3f54:	cmp	x4, #0xf
    3f58:	b.hi	4084 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7dc>  // b.pmore
    3f5c:	cmp	x4, #0x1
    3f60:	b.ne	4068 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c0>  // b.any
    3f64:	ldrb	w0, [x6]
    3f68:	strb	w0, [sp, #272]
    3f6c:	ldr	x0, [sp, #152]
    3f70:	str	x0, [sp, #264]
    3f74:	ldr	x1, [sp, #256]
    3f78:	strb	wzr, [x1, x0]
    3f7c:	ldp	x1, x0, [x3, #8]
    3f80:	cmp	x1, x0
    3f84:	b.eq	4028 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x780>  // b.none
    3f88:	mov	x2, x1
    3f8c:	ldr	w4, [sp, #248]
    3f90:	add	x0, x23, #0x18
    3f94:	str	w4, [x2], #24
    3f98:	str	x2, [x1, #8]
    3f9c:	ldr	x2, [sp, #256]
    3fa0:	cmp	x2, x0
    3fa4:	b.eq	40e8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x840>  // b.none
    3fa8:	str	x2, [x1, #8]
    3fac:	ldr	x0, [sp, #272]
    3fb0:	str	x0, [x1, #24]
    3fb4:	ldr	x0, [x3, #8]
    3fb8:	ldr	x2, [sp, #264]
    3fbc:	str	x2, [x1, #16]
    3fc0:	add	x0, x0, #0x28
    3fc4:	str	x0, [x3, #8]
    3fc8:	ldr	x0, [sp, #216]
    3fcc:	cmp	x0, x26
    3fd0:	b.eq	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>  // b.none
    3fd4:	str	x8, [sp, #96]
    3fd8:	b	3f18 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x670>
    3fdc:	ldr	x1, [x0]
    3fe0:	str	x0, [sp, #96]
    3fe4:	ldr	x1, [x1, #16]
    3fe8:	blr	x1
    3fec:	adrp	x2, 0 <__pthread_key_create>
    3ff0:	ldr	x0, [sp, #96]
    3ff4:	ldr	x2, [x2]
    3ff8:	cbz	x2, 4058 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7b0>
    3ffc:	add	x2, x0, #0xc
    4000:	ldaxr	w1, [x2]
    4004:	sub	w3, w1, #0x1
    4008:	stlxr	w4, w3, [x2]
    400c:	cbnz	w4, 4000 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x758>
    4010:	cmp	w1, #0x1
    4014:	b.ne	39d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x128>  // b.any
    4018:	ldr	x1, [x0]
    401c:	ldr	x1, [x1, #24]
    4020:	blr	x1
    4024:	b	39d0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x128>
    4028:	mov	x0, x3
    402c:	mov	x2, x23
    4030:	str	x8, [sp, #96]
    4034:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4038:	ldr	x0, [sp, #256]
    403c:	add	x1, x23, #0x18
    4040:	ldr	x8, [sp, #96]
    4044:	cmp	x0, x1
    4048:	b.eq	3fc8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x720>  // b.none
    404c:	bl	0 <_ZdlPv>
    4050:	ldr	x8, [sp, #96]
    4054:	b	3fc8 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x720>
    4058:	ldr	w1, [x0, #12]
    405c:	sub	w2, w1, #0x1
    4060:	str	w2, [x0, #12]
    4064:	b	4010 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x768>
    4068:	cbz	x4, 3f6c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c4>
    406c:	mov	x2, x4
    4070:	mov	x1, x6
    4074:	stp	x3, x8, [sp, #96]
    4078:	bl	0 <memcpy>
    407c:	ldp	x3, x8, [sp, #96]
    4080:	b	3f6c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x6c4>
    4084:	add	x1, sp, #0x98
    4088:	add	x0, x23, #0x8
    408c:	mov	x2, #0x0                   	// #0
    4090:	stp	x6, x4, [sp, #96]
    4094:	stp	x3, x8, [sp, #112]
    4098:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    409c:	ldr	x1, [sp, #152]
    40a0:	str	x0, [sp, #256]
    40a4:	str	x1, [sp, #272]
    40a8:	ldp	x6, x4, [sp, #96]
    40ac:	ldp	x3, x8, [sp, #112]
    40b0:	b	406c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x7c4>
    40b4:	ldrb	w2, [x21, #32]
    40b8:	and	w0, w0, #0xfffffffd
    40bc:	ldr	x1, [sp, #176]
    40c0:	orr	w2, w2, #0x3
    40c4:	strb	w2, [x21, #32]
    40c8:	str	xzr, [sp, #176]
    40cc:	ands	x1, x1, #0xfffffffffffffffe
    40d0:	strb	w0, [sp, #184]
    40d4:	b.eq	3ec0 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x618>  // b.none
    40d8:	str	x1, [x21]
    40dc:	mov	x0, x8
    40e0:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    40e4:	b	3a1c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x174>
    40e8:	ldp	x6, x7, [sp, #272]
    40ec:	stp	x6, x7, [x1, #24]
    40f0:	b	3fb4 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x70c>
    40f4:	ldrb	w0, [x21, #32]
    40f8:	strb	wzr, [x21]
    40fc:	and	w0, w0, #0xfffffffc
    4100:	strb	wzr, [x21, #24]
    4104:	orr	w0, w0, #0x2
    4108:	strb	w0, [x21, #32]
    410c:	b	40dc <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x834>
    4110:	add	x0, sp, #0xc0
    4114:	stp	x6, x8, [sp, #96]
    4118:	bl	0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    411c:	ldr	x2, [sp, #200]
    4120:	ldp	x6, x8, [sp, #96]
    4124:	sub	x0, x2, #0x58
    4128:	mov	x25, x0
    412c:	str	w6, [x0]
    4130:	b	3c38 <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x390>
    4134:	add	x3, x25, #0x40
    4138:	b	3f2c <_ZN4llvm15BitstreamCursor18ReadBlockInfoBlockEb+0x684>
    413c:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4140:	add	x0, x0, #0x0
    4144:	bl	0 <_ZSt19__throw_logic_errorPKc>
    4148:	adrp	x3, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    414c:	adrp	x1, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4150:	adrp	x0, 0 <_ZL20readAbbreviatedFieldRN4llvm15BitstreamCursorERKNS_15BitCodeAbbrevOpE>
    4154:	add	x3, x3, #0x0
    4158:	add	x1, x1, #0x0
    415c:	add	x0, x0, #0x0
    4160:	mov	w2, #0x95                  	// #149
    4164:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	add	x1, x0, #0x20
   4:	ldr	x0, [x0, #16]
   8:	cmp	x0, x1
   c:	b.eq	14 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x14>  // b.none
  10:	b	0 <free>
  14:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	b	0 <_ZdlPv>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x2, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
   8:	mov	x29, sp
   c:	ldr	x2, [x2]
  10:	str	x19, [sp, #16]
  14:	add	x19, x0, #0x10
  18:	cmp	x1, x2
  1c:	b.eq	30 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x30>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	tst	w0, #0xff
  2c:	csel	x19, x19, xzr, ne  // ne = any
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN4llvm13BitCodeAbbrevESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	mov	x1, #0x220                 	// #544
   4:	b	0 <_ZdlPvm>

Disassembly of section .text._ZNK4llvm13format_objectIJmjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	w4, [x3, #16]
  10:	ldr	x2, [x3, #8]
  14:	ldr	x3, [x3, #24]
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJjjEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJjjEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldr	w4, [x3, #16]
  10:	ldr	x2, [x3, #8]
  14:	ldr	w3, [x3, #20]
  18:	b	0 <snprintf>

Disassembly of section .text._ZNK4llvm13format_objectIJmmEE7snprintEPcj:

0000000000000000 <_ZNK4llvm13format_objectIJmmEE7snprintEPcj>:
   0:	mov	x3, x0
   4:	mov	x0, x1
   8:	mov	w1, w2
   c:	ldp	x2, x4, [x3, #8]
  10:	ldr	x3, [x3, #24]
  14:	b	0 <snprintf>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	cbz	x1, 58 <_ZN4llvm11raw_ostreamlsEPKc+0x58>
  14:	mov	x20, x1
  18:	mov	x0, x1
  1c:	str	x21, [sp, #32]
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x1, x0, [x19, #16]
  2c:	sub	x1, x1, x0
  30:	cmp	x21, x1
  34:	b.hi	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.pmore
  38:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  3c:	mov	x2, x21
  40:	mov	x1, x20
  44:	bl	0 <memcpy>
  48:	ldr	x0, [x19, #24]
  4c:	add	x0, x0, x21
  50:	ldr	x21, [sp, #32]
  54:	str	x0, [x19, #24]
  58:	mov	x0, x19
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret
  68:	mov	x2, x21
  6c:	mov	x1, x20
  70:	mov	x0, x19
  74:	ldp	x19, x20, [sp, #16]
  78:	ldr	x21, [sp, #32]
  7c:	ldp	x29, x30, [sp], #48
  80:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  84:	mov	x0, x19
  88:	ldp	x19, x20, [sp, #16]
  8c:	ldr	x21, [sp, #32]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor4ReadEj:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>:
   0:	stp	x29, x30, [sp, #-224]!
   4:	sub	w2, w1, #0x1
   8:	cmp	w2, #0x3f
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	stp	x21, x22, [sp, #32]
  18:	stp	x23, x24, [sp, #48]
  1c:	stp	x25, x26, [sp, #64]
  20:	b.hi	3b8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3b8>  // b.pmore
  24:	ldr	w21, [x0, #32]
  28:	mov	w24, w1
  2c:	mov	x25, x8
  30:	mov	x19, x0
  34:	cmp	w21, w1
  38:	b.cs	e8 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0xe8>  // b.hs, b.nlast
  3c:	mov	x22, #0x0                   	// #0
  40:	cbz	w21, 48 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x48>
  44:	ldr	x22, [x0, #24]
  48:	ldp	x20, x23, [x19, #8]
  4c:	cmp	x23, x20
  50:	b.cs	17c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x17c>  // b.hs, b.nlast
  54:	ldr	x1, [x19]
  58:	add	x0, x23, #0x8
  5c:	cmp	x20, x0
  60:	add	x4, x1, x23
  64:	b.cc	13c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x13c>  // b.lo, b.ul, b.last
  68:	ldr	x1, [x1, x23]
  6c:	mov	w20, #0x40                  	// #64
  70:	str	x1, [x19, #24]
  74:	str	x0, [x19, #16]
  78:	str	w20, [x19, #32]
  7c:	sub	w23, w24, w21
  80:	cmp	w23, w20
  84:	b.hi	294 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x294>  // b.pmore
  88:	ldr	x1, [x19, #24]
  8c:	sub	w24, w21, w24
  90:	add	w20, w20, w24
  94:	add	w24, w24, #0x40
  98:	str	w20, [x19, #32]
  9c:	mov	x0, #0xffffffffffffffff    	// #-1
  a0:	lsr	x2, x1, x23
  a4:	str	x2, [x19, #24]
  a8:	lsr	x0, x0, x24
  ac:	and	x0, x0, x1
  b0:	ldrb	w1, [x25, #8]
  b4:	lsl	x21, x0, x21
  b8:	orr	x22, x21, x22
  bc:	and	w0, w1, #0xfffffffc
  c0:	str	x22, [x25]
  c4:	orr	w0, w0, #0x2
  c8:	strb	w0, [x25, #8]
  cc:	mov	x0, x25
  d0:	ldp	x19, x20, [sp, #16]
  d4:	ldp	x21, x22, [sp, #32]
  d8:	ldp	x23, x24, [sp, #48]
  dc:	ldp	x25, x26, [sp, #64]
  e0:	ldp	x29, x30, [sp], #224
  e4:	ret
  e8:	ldr	x2, [x19, #24]
  ec:	sub	w21, w21, w1
  f0:	neg	w1, w1
  f4:	str	w21, [x19, #32]
  f8:	mov	x0, #0xffffffffffffffff    	// #-1
  fc:	lsr	x24, x2, x24
 100:	str	x24, [x19, #24]
 104:	lsr	x1, x0, x1
 108:	and	x1, x1, x2
 10c:	ldrb	w0, [x8, #8]
 110:	str	x1, [x8]
 114:	and	w0, w0, #0xfffffffc
 118:	orr	w0, w0, #0x2
 11c:	strb	w0, [x8, #8]
 120:	mov	x0, x25
 124:	ldp	x19, x20, [sp, #16]
 128:	ldp	x21, x22, [sp, #32]
 12c:	ldp	x23, x24, [sp, #48]
 130:	ldp	x25, x26, [sp, #64]
 134:	ldp	x29, x30, [sp], #224
 138:	ret
 13c:	str	xzr, [x19, #24]
 140:	subs	w20, w20, w23
 144:	b.eq	3ac <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3ac>  // b.none
 148:	mov	x0, #0x0                   	// #0
 14c:	mov	x3, #0x0                   	// #0
 150:	ldrb	w2, [x4, x0]
 154:	lsl	w1, w0, #3
 158:	add	x0, x0, #0x1
 15c:	cmp	w20, w0
 160:	lsl	x2, x2, x1
 164:	orr	x3, x3, x2
 168:	str	x3, [x19, #24]
 16c:	b.ne	150 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x150>  // b.any
 170:	add	x0, x23, w20, uxtw
 174:	lsl	w20, w20, #3
 178:	b	74 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x74>
 17c:	stp	x27, x28, [sp, #80]
 180:	bl	0 <_ZNSt3_V216generic_categoryEv>
 184:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
 188:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 18c:	add	x26, sp, #0x70
 190:	ldr	x2, [x2]
 194:	add	x7, x26, #0x10
 198:	ldr	x3, [x3]
 19c:	add	x2, x2, #0x10
 1a0:	adrp	x5, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 1a4:	add	x5, x5, #0x0
 1a8:	add	x3, x3, #0x10
 1ac:	mov	w6, #0x1                   	// #1
 1b0:	add	x27, sp, #0x90
 1b4:	add	x28, sp, #0xb0
 1b8:	mov	x1, x27
 1bc:	stp	x0, x7, [sp, #104]
 1c0:	mov	x0, x28
 1c4:	str	xzr, [sp, #120]
 1c8:	strb	wzr, [sp, #128]
 1cc:	stp	x3, x5, [sp, #144]
 1d0:	stp	x20, x23, [sp, #160]
 1d4:	stp	x2, xzr, [sp, #176]
 1d8:	stp	xzr, xzr, [sp, #192]
 1dc:	str	w6, [sp, #208]
 1e0:	str	x26, [sp, #216]
 1e4:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 1e8:	ldr	x0, [sp, #184]
 1ec:	ldr	x1, [sp, #200]
 1f0:	cmp	x1, x0
 1f4:	b.eq	200 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x200>  // b.none
 1f8:	mov	x0, x28
 1fc:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 200:	ldr	x2, [sp, #216]
 204:	mov	w1, #0x104                 	// #260
 208:	mov	x0, #0x5                   	// #5
 20c:	mov	x20, #0x0                   	// #0
 210:	bfxil	x20, x0, #0, #32
 214:	mov	x0, #0x40                  	// #64
 218:	stp	x2, xzr, [sp, #144]
 21c:	add	x26, x26, #0x10
 220:	strh	w1, [sp, #160]
 224:	bl	0 <_Znwm>
 228:	ldr	x3, [sp, #104]
 22c:	mov	x2, x20
 230:	mov	x1, x27
 234:	orr	x20, x0, #0x1
 238:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 23c:	str	x20, [sp, #144]
 240:	mov	x0, x28
 244:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 248:	ldr	x0, [sp, #112]
 24c:	cmp	x0, x26
 250:	b.eq	258 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x258>  // b.none
 254:	bl	0 <_ZdlPv>
 258:	ldr	x0, [sp, #144]
 25c:	ands	x0, x0, #0xfffffffffffffffe
 260:	b.eq	3dc <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3dc>  // b.none
 264:	ldrb	w1, [x25, #8]
 268:	str	x0, [x25]
 26c:	orr	w0, w1, #0x3
 270:	strb	w0, [x25, #8]
 274:	mov	x0, x25
 278:	ldp	x19, x20, [sp, #16]
 27c:	ldp	x21, x22, [sp, #32]
 280:	ldp	x23, x24, [sp, #48]
 284:	ldp	x25, x26, [sp, #64]
 288:	ldp	x27, x28, [sp, #80]
 28c:	ldp	x29, x30, [sp], #224
 290:	ret
 294:	stp	x27, x28, [sp, #80]
 298:	bl	0 <_ZNSt3_V216generic_categoryEv>
 29c:	adrp	x2, 0 <_ZTVN4llvm18raw_string_ostreamE>
 2a0:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2a4:	add	x27, sp, #0x90
 2a8:	ldr	x2, [x2]
 2ac:	add	x7, x27, #0x10
 2b0:	ldr	x3, [x3]
 2b4:	add	x2, x2, #0x10
 2b8:	adrp	x5, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 2bc:	add	x5, x5, #0x0
 2c0:	add	x3, x3, #0x10
 2c4:	mov	w6, #0x1                   	// #1
 2c8:	add	x26, sp, #0x70
 2cc:	add	x28, sp, #0xb0
 2d0:	mov	x1, x26
 2d4:	mov	x21, x0
 2d8:	mov	x0, x28
 2dc:	stp	x3, x5, [sp, #112]
 2e0:	stp	w23, w20, [sp, #128]
 2e4:	stp	x7, xzr, [sp, #144]
 2e8:	strb	wzr, [sp, #160]
 2ec:	stp	x2, xzr, [sp, #176]
 2f0:	stp	xzr, xzr, [sp, #192]
 2f4:	str	w6, [sp, #208]
 2f8:	str	x27, [sp, #216]
 2fc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 300:	ldr	x0, [sp, #184]
 304:	ldr	x1, [sp, #200]
 308:	cmp	x1, x0
 30c:	b.eq	318 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x318>  // b.none
 310:	mov	x0, x28
 314:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 318:	ldr	x2, [sp, #216]
 31c:	mov	w1, #0x104                 	// #260
 320:	mov	x0, #0x5                   	// #5
 324:	mov	x20, #0x0                   	// #0
 328:	bfxil	x20, x0, #0, #32
 32c:	mov	x0, #0x40                  	// #64
 330:	stp	x2, xzr, [sp, #112]
 334:	add	x27, x27, #0x10
 338:	strh	w1, [sp, #128]
 33c:	bl	0 <_Znwm>
 340:	mov	x2, x20
 344:	mov	x3, x21
 348:	mov	x1, x26
 34c:	mov	x19, x0
 350:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 354:	and	x19, x19, #0xfffffffffffffffe
 358:	mov	x0, x28
 35c:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 360:	ldr	x0, [sp, #144]
 364:	cmp	x0, x27
 368:	b.eq	370 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x370>  // b.none
 36c:	bl	0 <_ZdlPv>
 370:	ldrb	w0, [x25, #8]
 374:	orr	w0, w0, #0x3
 378:	strb	w0, [x25, #8]
 37c:	cbnz	x19, 3a0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x3a0>
 380:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 384:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 388:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 38c:	add	x3, x3, #0x0
 390:	add	x1, x1, #0x0
 394:	add	x0, x0, #0x0
 398:	mov	w2, #0x1ce                 	// #462
 39c:	bl	0 <__assert_fail>
 3a0:	ldp	x27, x28, [sp, #80]
 3a4:	str	x19, [x25]
 3a8:	b	120 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x120>
 3ac:	mov	x0, x23
 3b0:	mov	w20, #0x0                   	// #0
 3b4:	b	74 <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x74>
 3b8:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3bc:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3c0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor4ReadEj>
 3c4:	add	x3, x3, #0x0
 3c8:	add	x1, x1, #0x0
 3cc:	add	x0, x0, #0x0
 3d0:	mov	w2, #0xc0                  	// #192
 3d4:	stp	x27, x28, [sp, #80]
 3d8:	bl	0 <__assert_fail>
 3dc:	ldr	w20, [x19, #32]
 3e0:	ldp	x27, x28, [sp, #80]
 3e4:	b	7c <_ZN4llvm21SimpleBitstreamCursor4ReadEj+0x7c>

Disassembly of section .text._ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_:

0000000000000000 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-128]!
   4:	mov	x3, #0x8ba3                	// #35747
   8:	movk	x3, #0xba2e, lsl #16
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	movk	x3, #0xa2e8, lsl #32
  18:	movk	x3, #0x2e8b, lsl #48
  1c:	stp	x25, x26, [sp, #64]
  20:	mov	x25, x1
  24:	mov	x1, #0x745d                	// #29789
  28:	ldp	x22, x26, [x0]
  2c:	str	x0, [sp, #120]
  30:	movk	x1, #0x45d1, lsl #16
  34:	stp	x19, x20, [sp, #16]
  38:	movk	x1, #0x5d17, lsl #32
  3c:	stp	x23, x24, [sp, #48]
  40:	movk	x1, #0x174, lsl #48
  44:	sub	x0, x26, x22
  48:	asr	x0, x0, #3
  4c:	mul	x0, x0, x3
  50:	cmp	x0, x1
  54:	b.eq	388 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x388>  // b.none
  58:	sub	x24, x25, x22
  5c:	cbz	x0, 36c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x36c>
  60:	cmp	x0, x0, lsl #1
  64:	mov	x23, #0x7ffffffffffffff8    	// #9223372036854775800
  68:	lsl	x0, x0, #1
  6c:	b.ls	35c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x35c>  // b.plast
  70:	mov	x0, x23
  74:	bl	0 <_Znwm>
  78:	add	x19, x0, #0x58
  7c:	add	x1, x0, x23
  80:	stp	x0, x1, [sp, #104]
  84:	cmp	x25, x22
  88:	ldr	x4, [sp, #104]
  8c:	add	x0, x4, x24
  90:	add	x3, x0, #0x30
  94:	stp	xzr, xzr, [x0]
  98:	stp	xzr, xzr, [x0, #16]
  9c:	stp	x3, xzr, [x0, #32]
  a0:	stp	xzr, xzr, [x0, #48]
  a4:	stp	xzr, xzr, [x0, #64]
  a8:	str	xzr, [x0, #80]
  ac:	b.eq	238 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x238>  // b.none
  b0:	stp	x27, x28, [sp, #80]
  b4:	adrp	x27, 0 <__pthread_key_create>
  b8:	mov	x24, x4
  bc:	ldr	x27, [x27]
  c0:	mov	x19, x22
  c4:	mov	x28, x27
  c8:	ldr	x3, [x19, #8]
  cc:	add	x1, x24, #0x30
  d0:	ldr	w2, [x19]
  d4:	add	x0, x19, #0x30
  d8:	str	x3, [x24, #8]
  dc:	str	w2, [x24]
  e0:	ldr	x2, [x19, #16]
  e4:	str	x2, [x24, #16]
  e8:	ldr	x2, [x19, #24]
  ec:	str	x2, [x24, #24]
  f0:	stp	xzr, xzr, [x19, #8]
  f4:	str	xzr, [x19, #24]
  f8:	str	x1, [x24, #32]
  fc:	ldr	x1, [x19, #32]
 100:	cmp	x1, x0
 104:	b.eq	2e0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2e0>  // b.none
 108:	str	x1, [x24, #32]
 10c:	ldr	x0, [x19, #48]
 110:	str	x0, [x24, #48]
 114:	ldr	x1, [x19, #64]
 118:	ldp	x20, x23, [x19, #8]
 11c:	ldr	x0, [x19, #40]
 120:	str	x1, [x24, #64]
 124:	str	x0, [x24, #40]
 128:	ldr	x0, [x19, #72]
 12c:	str	x0, [x24, #72]
 130:	cmp	x20, x23
 134:	ldr	x0, [x19, #80]
 138:	str	x0, [x24, #80]
 13c:	b.ne	16c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x16c>  // b.any
 140:	b	1dc <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1dc>
 144:	add	x4, x21, #0x8
 148:	ldaxr	w1, [x4]
 14c:	sub	w0, w1, #0x1
 150:	stlxr	w2, w0, [x4]
 154:	cbnz	w2, 148 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x148>
 158:	cmp	w1, #0x1
 15c:	b.eq	18c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x18c>  // b.none
 160:	add	x20, x20, #0x10
 164:	cmp	x23, x20
 168:	b.eq	1d8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1d8>  // b.none
 16c:	ldr	x21, [x20, #8]
 170:	cbz	x21, 160 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x160>
 174:	cbnz	x27, 144 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x144>
 178:	ldr	w1, [x21, #8]
 17c:	sub	w4, w1, #0x1
 180:	str	w4, [x21, #8]
 184:	cmp	w1, #0x1
 188:	b.ne	160 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x160>  // b.any
 18c:	ldr	x1, [x21]
 190:	mov	x0, x21
 194:	ldr	x1, [x1, #16]
 198:	blr	x1
 19c:	cbz	x28, 2d0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2d0>
 1a0:	add	x4, x21, #0xc
 1a4:	ldaxr	w1, [x4]
 1a8:	sub	w0, w1, #0x1
 1ac:	stlxr	w2, w0, [x4]
 1b0:	cbnz	w2, 1a4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1a4>
 1b4:	cmp	w1, #0x1
 1b8:	b.ne	160 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x160>  // b.any
 1bc:	ldr	x1, [x21]
 1c0:	mov	x0, x21
 1c4:	add	x20, x20, #0x10
 1c8:	ldr	x1, [x1, #24]
 1cc:	blr	x1
 1d0:	cmp	x23, x20
 1d4:	b.ne	16c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x16c>  // b.any
 1d8:	ldr	x23, [x19, #8]
 1dc:	cbz	x23, 1e8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1e8>
 1e0:	mov	x0, x23
 1e4:	bl	0 <_ZdlPv>
 1e8:	add	x19, x19, #0x58
 1ec:	add	x24, x24, #0x58
 1f0:	cmp	x25, x19
 1f4:	b.ne	c8 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0xc8>  // b.any
 1f8:	sub	x0, x25, #0x58
 1fc:	mov	x1, #0x8ba3                	// #35747
 200:	sub	x0, x0, x22
 204:	movk	x1, #0xba2e, lsl #16
 208:	movk	x1, #0xa2e8, lsl #32
 20c:	lsr	x0, x0, #3
 210:	movk	x1, #0xe8b, lsl #48
 214:	ldp	x27, x28, [sp, #80]
 218:	mul	x0, x0, x1
 21c:	and	x0, x0, #0x1fffffffffffffff
 220:	add	x0, x0, #0x2
 224:	add	x19, x0, x0, lsl #1
 228:	lsl	x19, x19, #2
 22c:	sub	x19, x19, x0
 230:	ldr	x0, [sp, #104]
 234:	add	x19, x0, x19, lsl #3
 238:	cmp	x25, x26
 23c:	b.eq	324 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x324>  // b.none
 240:	mov	x2, x25
 244:	mov	x0, x19
 248:	b	288 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x288>
 24c:	ldr	x1, [x2, #48]
 250:	str	x4, [x0, #32]
 254:	str	x1, [x0, #48]
 258:	ldr	x1, [x2, #40]
 25c:	str	x1, [x0, #40]
 260:	ldr	x1, [x2, #64]
 264:	str	x1, [x0, #64]
 268:	ldr	x1, [x2, #72]
 26c:	str	x1, [x0, #72]
 270:	ldr	x1, [x2, #80]
 274:	str	x1, [x0, #80]
 278:	add	x2, x2, #0x58
 27c:	add	x0, x0, #0x58
 280:	cmp	x2, x26
 284:	b.eq	2ec <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x2ec>  // b.none
 288:	ldr	w3, [x2]
 28c:	add	x1, x0, #0x30
 290:	ldr	x4, [x2, #8]
 294:	str	w3, [x0]
 298:	str	x4, [x0, #8]
 29c:	ldr	x3, [x2, #16]
 2a0:	stp	xzr, xzr, [x2, #8]
 2a4:	ldr	x5, [x2, #24]
 2a8:	str	x3, [x0, #16]
 2ac:	ldr	x4, [x2, #32]
 2b0:	stp	x5, x1, [x0, #24]
 2b4:	add	x3, x2, #0x30
 2b8:	str	xzr, [x2, #24]
 2bc:	cmp	x4, x3
 2c0:	b.ne	24c <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x24c>  // b.any
 2c4:	ldp	x4, x5, [x2, #48]
 2c8:	stp	x4, x5, [x0, #48]
 2cc:	b	258 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x258>
 2d0:	ldr	w1, [x21, #12]
 2d4:	sub	w4, w1, #0x1
 2d8:	str	w4, [x21, #12]
 2dc:	b	1b4 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x1b4>
 2e0:	ldp	x0, x1, [x19, #48]
 2e4:	stp	x0, x1, [x24, #48]
 2e8:	b	114 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x114>
 2ec:	sub	x1, x2, x25
 2f0:	mov	x0, #0x8ba3                	// #35747
 2f4:	sub	x1, x1, #0x58
 2f8:	movk	x0, #0xba2e, lsl #16
 2fc:	movk	x0, #0xa2e8, lsl #32
 300:	lsr	x1, x1, #3
 304:	movk	x0, #0xe8b, lsl #48
 308:	mul	x1, x1, x0
 30c:	and	x1, x1, #0x1fffffffffffffff
 310:	add	x1, x1, #0x1
 314:	add	x0, x1, x1, lsl #1
 318:	lsl	x0, x0, #2
 31c:	sub	x1, x0, x1
 320:	add	x19, x19, x1, lsl #3
 324:	cbz	x22, 330 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x330>
 328:	mov	x0, x22
 32c:	bl	0 <_ZdlPv>
 330:	ldr	x0, [sp, #120]
 334:	ldr	x1, [sp, #104]
 338:	ldp	x21, x22, [sp, #32]
 33c:	ldp	x23, x24, [sp, #48]
 340:	ldp	x25, x26, [sp, #64]
 344:	stp	x1, x19, [x0]
 348:	ldr	x1, [sp, #112]
 34c:	ldp	x19, x20, [sp, #16]
 350:	str	x1, [x0, #16]
 354:	ldp	x29, x30, [sp], #128
 358:	ret
 35c:	cbnz	x0, 374 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x374>
 360:	mov	x19, #0x58                  	// #88
 364:	stp	xzr, xzr, [sp, #104]
 368:	b	84 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x84>
 36c:	mov	x23, #0x58                  	// #88
 370:	b	70 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
 374:	cmp	x0, x1
 378:	mov	x23, #0x58                  	// #88
 37c:	csel	x0, x0, x1, ls  // ls = plast
 380:	mul	x23, x0, x23
 384:	b	70 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_+0x70>
 388:	adrp	x0, 0 <_ZNSt6vectorIN4llvm18BitstreamBlockInfo9BlockInfoESaIS2_EE17_M_realloc_insertIJEEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_>
 38c:	add	x0, x0, #0x0
 390:	stp	x27, x28, [sp, #80]
 394:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedImE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedImED2Ev:

0000000000000000 <_ZN4llvm8ExpectedImED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedImED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedImED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedImED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedImED1Ev>

Disassembly of section .text._ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej:

0000000000000000 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>:
   0:	stp	x29, x30, [sp, #-320]!
   4:	mov	x29, sp
   8:	stp	x27, x28, [sp, #80]
   c:	add	x27, sp, #0xc0
  10:	stp	x19, x20, [sp, #16]
  14:	mov	w20, w1
  18:	mov	x19, x8
  1c:	mov	x8, x27
  20:	stp	x25, x26, [sp, #64]
  24:	mov	x26, x0
  28:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  2c:	ldrb	w1, [sp, #200]
  30:	and	w0, w1, #0x1
  34:	bfi	w1, w0, #1, #1
  38:	strb	w1, [sp, #200]
  3c:	cbz	w0, 80 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x80>
  40:	ldrb	w0, [x19, #8]
  44:	and	w1, w1, #0xfffffffd
  48:	ldr	x2, [sp, #192]
  4c:	orr	w0, w0, #0x3
  50:	str	x2, [x19]
  54:	strb	w0, [x19, #8]
  58:	str	xzr, [sp, #192]
  5c:	strb	w1, [sp, #200]
  60:	mov	x0, x27
  64:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
  68:	mov	x0, x19
  6c:	ldp	x19, x20, [sp, #16]
  70:	ldp	x25, x26, [sp, #64]
  74:	ldp	x27, x28, [sp, #80]
  78:	ldp	x29, x30, [sp], #320
  7c:	ret
  80:	stp	x21, x22, [sp, #32]
  84:	sub	w28, w20, #0x1
  88:	ldr	x21, [sp, #192]
  8c:	lsr	w0, w21, w28
  90:	tbz	w0, #0, 248 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x248>
  94:	mov	w22, #0xffffffff            	// #-1
  98:	stp	x23, x24, [sp, #48]
  9c:	lsl	w22, w22, w28
  a0:	mvn	w0, w22
  a4:	str	w0, [sp, #160]
  a8:	cmp	w28, #0x3f
  ac:	bic	w21, w21, w22
  b0:	b.hi	598 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x598>  // b.pmore
  b4:	adrp	x22, 0 <_ZTVN4llvm18raw_string_ostreamE>
  b8:	neg	w25, w20
  bc:	mov	x1, #0xffffffffffffffff    	// #-1
  c0:	ldr	w7, [x26, #32]
  c4:	ldr	x0, [x22]
  c8:	lsr	x1, x1, x25
  cc:	add	x2, sp, #0xf0
  d0:	stp	x1, x2, [sp, #96]
  d4:	add	x0, x0, #0x10
  d8:	add	x1, sp, #0x100
  dc:	str	x1, [sp, #128]
  e0:	str	x0, [sp, #136]
  e4:	mov	w23, #0x1                   	// #1
  e8:	mov	w24, w28
  ec:	cmp	w20, w7
  f0:	lsl	w23, w23, w28
  f4:	b.hi	1ac <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1ac>  // b.pmore
  f8:	ldr	x1, [x26, #24]
  fc:	sub	w7, w7, w20
 100:	ldrb	w0, [sp, #280]
 104:	ldr	x2, [sp, #96]
 108:	and	w0, w0, #0xfffffffc
 10c:	orr	w0, w0, #0x2
 110:	str	w7, [x26, #32]
 114:	and	x2, x1, x2
 118:	lsr	x1, x1, x20
 11c:	str	x1, [x26, #24]
 120:	str	x2, [sp, #272]
 124:	strb	w0, [sp, #280]
 128:	ldrb	w0, [sp, #200]
 12c:	tbnz	w0, #1, 3fc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3fc>
 130:	mov	x0, x27
 134:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 138:	ldrb	w1, [sp, #280]
 13c:	ldrb	w0, [sp, #200]
 140:	and	w2, w1, #0x1
 144:	and	w1, w1, #0xfffffffd
 148:	strb	w1, [sp, #280]
 14c:	bfxil	w0, w2, #0, #1
 150:	orr	w0, w0, #0x2
 154:	strb	w0, [sp, #200]
 158:	ldr	x0, [sp, #272]
 15c:	str	x0, [sp, #192]
 160:	cbnz	w2, 284 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x284>
 164:	add	x0, sp, #0x110
 168:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 16c:	ldrb	w0, [sp, #200]
 170:	and	w1, w0, #0x1
 174:	bfi	w0, w1, #1, #1
 178:	strb	w0, [sp, #200]
 17c:	cbnz	w1, 560 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x560>
 180:	ldr	x1, [sp, #192]
 184:	ldr	w0, [sp, #160]
 188:	tst	w23, w1
 18c:	and	w0, w0, w1
 190:	lsl	x0, x0, x24
 194:	orr	x21, x21, x0
 198:	b.eq	404 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x404>  // b.none
 19c:	ldr	w7, [x26, #32]
 1a0:	add	w24, w24, w28
 1a4:	cmp	w20, w7
 1a8:	b.ls	f8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0xf8>  // b.plast
 1ac:	str	xzr, [sp, #112]
 1b0:	cbz	w7, 1bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1bc>
 1b4:	ldr	x0, [x26, #24]
 1b8:	str	x0, [sp, #112]
 1bc:	ldp	x1, x9, [x26, #8]
 1c0:	cmp	x9, x1
 1c4:	b.cs	28c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x28c>  // b.hs, b.nlast
 1c8:	ldr	x2, [x26]
 1cc:	add	x0, x9, #0x8
 1d0:	cmp	x1, x0
 1d4:	add	x10, x2, x9
 1d8:	b.cc	3bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3bc>  // b.lo, b.ul, b.last
 1dc:	ldr	x1, [x2, x9]
 1e0:	mov	w3, #0x40                  	// #64
 1e4:	str	x1, [x26, #24]
 1e8:	str	x0, [x26, #16]
 1ec:	str	w3, [x26, #32]
 1f0:	sub	w2, w20, w7
 1f4:	cmp	w2, w3
 1f8:	b.hi	424 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x424>  // b.pmore
 1fc:	ldr	x8, [x26, #24]
 200:	sub	w1, w7, w20
 204:	add	w9, w1, #0x40
 208:	add	w3, w1, w3
 20c:	mov	x0, #0xffffffffffffffff    	// #-1
 210:	ldrb	w1, [sp, #280]
 214:	lsr	x2, x8, x2
 218:	str	x2, [x26, #24]
 21c:	ldr	x2, [sp, #112]
 220:	lsr	x0, x0, x9
 224:	and	x0, x0, x8
 228:	and	w1, w1, #0xfffffffc
 22c:	orr	w1, w1, #0x2
 230:	str	w3, [x26, #32]
 234:	lsl	x0, x0, x7
 238:	orr	x0, x0, x2
 23c:	str	x0, [sp, #272]
 240:	strb	w1, [sp, #280]
 244:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 248:	ldrb	w0, [x19, #8]
 24c:	and	x21, x21, #0xffffffff
 250:	str	x21, [x19]
 254:	and	w0, w0, #0xfffffffc
 258:	orr	w0, w0, #0x2
 25c:	strb	w0, [x19, #8]
 260:	mov	x0, x27
 264:	ldp	x21, x22, [sp, #32]
 268:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 26c:	mov	x0, x19
 270:	ldp	x19, x20, [sp, #16]
 274:	ldp	x25, x26, [sp, #64]
 278:	ldp	x27, x28, [sp, #80]
 27c:	ldp	x29, x30, [sp], #320
 280:	ret
 284:	str	xzr, [sp, #272]
 288:	b	164 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x164>
 28c:	str	w7, [sp, #164]
 290:	add	x25, sp, #0x110
 294:	stp	x9, x1, [sp, #168]
 298:	bl	0 <_ZNSt3_V216generic_categoryEv>
 29c:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 2a0:	ldr	x2, [x22]
 2a4:	add	x4, sp, #0xd0
 2a8:	ldr	x3, [x3]
 2ac:	add	x2, x2, #0x10
 2b0:	ldp	x9, x1, [sp, #168]
 2b4:	stp	x1, x9, [sp, #256]
 2b8:	add	x3, x3, #0x10
 2bc:	ldr	x1, [sp, #104]
 2c0:	stp	x4, x0, [sp, #144]
 2c4:	add	x0, sp, #0xe0
 2c8:	stp	x2, xzr, [sp, #272]
 2cc:	mov	w2, #0x1                   	// #1
 2d0:	str	x0, [sp, #208]
 2d4:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 2d8:	add	x0, x0, #0x0
 2dc:	str	xzr, [sp, #216]
 2e0:	strb	wzr, [sp, #224]
 2e4:	str	x3, [sp, #240]
 2e8:	str	x0, [sp, #248]
 2ec:	mov	x0, x25
 2f0:	stp	xzr, xzr, [sp, #288]
 2f4:	str	w2, [sp, #304]
 2f8:	str	x4, [sp, #312]
 2fc:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 300:	ldr	x0, [sp, #280]
 304:	ldr	x1, [sp, #296]
 308:	ldr	w7, [sp, #164]
 30c:	cmp	x1, x0
 310:	b.eq	324 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x324>  // b.none
 314:	mov	x0, x25
 318:	str	w7, [sp, #164]
 31c:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 320:	ldr	w7, [sp, #164]
 324:	ldr	x3, [sp, #120]
 328:	mov	x0, #0x5                   	// #5
 32c:	ldr	x2, [sp, #312]
 330:	mov	w1, #0x104                 	// #260
 334:	bfxil	x3, x0, #0, #32
 338:	mov	x0, #0x40                  	// #64
 33c:	str	x3, [sp, #120]
 340:	str	w7, [sp, #164]
 344:	stp	x2, xzr, [sp, #240]
 348:	strh	w1, [sp, #256]
 34c:	bl	0 <_Znwm>
 350:	ldr	x1, [sp, #104]
 354:	ldr	x2, [sp, #120]
 358:	str	x0, [sp, #120]
 35c:	ldr	x3, [sp, #152]
 360:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 364:	ldr	x4, [sp, #120]
 368:	mov	x0, x25
 36c:	orr	x1, x4, #0x1
 370:	str	x1, [sp, #240]
 374:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 378:	ldr	x1, [sp, #144]
 37c:	ldr	x0, [sp, #208]
 380:	add	x1, x1, #0x10
 384:	ldr	w7, [sp, #164]
 388:	cmp	x0, x1
 38c:	b.eq	39c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x39c>  // b.none
 390:	str	w7, [sp, #144]
 394:	bl	0 <_ZdlPv>
 398:	ldr	w7, [sp, #144]
 39c:	ldr	x0, [sp, #240]
 3a0:	ands	x0, x0, #0xfffffffffffffffe
 3a4:	b.eq	5b8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x5b8>  // b.none
 3a8:	ldrb	w1, [sp, #280]
 3ac:	str	x0, [sp, #272]
 3b0:	orr	w0, w1, #0x3
 3b4:	strb	w0, [sp, #280]
 3b8:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 3bc:	str	xzr, [x26, #24]
 3c0:	subs	w3, w1, w9
 3c4:	b.eq	58c <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x58c>  // b.none
 3c8:	mov	x0, #0x0                   	// #0
 3cc:	mov	x2, #0x0                   	// #0
 3d0:	ldrb	w1, [x10, x0]
 3d4:	lsl	w8, w0, #3
 3d8:	add	x0, x0, #0x1
 3dc:	cmp	w3, w0
 3e0:	lsl	x1, x1, x8
 3e4:	orr	x2, x2, x1
 3e8:	str	x2, [x26, #24]
 3ec:	b.ne	3d0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x3d0>  // b.any
 3f0:	add	x0, x9, w3, uxtw
 3f4:	lsl	w3, w3, #3
 3f8:	b	1e8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1e8>
 3fc:	mov	x0, x27
 400:	bl	0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 404:	ldrb	w0, [x19, #8]
 408:	and	w0, w0, #0xfffffffc
 40c:	orr	w0, w0, #0x2
 410:	strb	w0, [x19, #8]
 414:	ldp	x23, x24, [sp, #48]
 418:	str	x21, [x19]
 41c:	ldp	x21, x22, [sp, #32]
 420:	b	60 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x60>
 424:	str	w2, [sp, #152]
 428:	add	x25, sp, #0x110
 42c:	str	w3, [sp, #164]
 430:	bl	0 <_ZNSt3_V216generic_categoryEv>
 434:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 438:	ldr	w2, [sp, #152]
 43c:	str	x0, [sp, #112]
 440:	add	x3, sp, #0xd0
 444:	ldr	x0, [x1]
 448:	mov	x1, x3
 44c:	str	x3, [sp, #144]
 450:	ldr	w3, [sp, #164]
 454:	add	x0, x0, #0x10
 458:	str	w2, [sp, #224]
 45c:	adrp	x2, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 460:	add	x2, x2, #0x0
 464:	stp	x0, x2, [sp, #208]
 468:	mov	w2, #0x1                   	// #1
 46c:	str	w3, [sp, #228]
 470:	mov	x0, x25
 474:	ldr	x3, [sp, #128]
 478:	str	x3, [sp, #240]
 47c:	str	w2, [sp, #304]
 480:	ldr	x2, [sp, #104]
 484:	str	xzr, [sp, #248]
 488:	ldr	x3, [sp, #136]
 48c:	strb	wzr, [sp, #256]
 490:	str	x3, [sp, #272]
 494:	stp	xzr, xzr, [sp, #280]
 498:	str	xzr, [sp, #296]
 49c:	str	x2, [sp, #312]
 4a0:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 4a4:	ldr	x0, [sp, #280]
 4a8:	ldr	x1, [sp, #296]
 4ac:	cmp	x1, x0
 4b0:	b.eq	4bc <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x4bc>  // b.none
 4b4:	mov	x0, x25
 4b8:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 4bc:	ldr	x2, [sp, #184]
 4c0:	mov	x1, #0x5                   	// #5
 4c4:	ldr	x0, [sp, #312]
 4c8:	stp	x0, xzr, [sp, #208]
 4cc:	bfxil	x2, x1, #0, #32
 4d0:	mov	w1, #0x104                 	// #260
 4d4:	mov	x0, #0x40                  	// #64
 4d8:	str	x2, [sp, #184]
 4dc:	strh	w1, [sp, #224]
 4e0:	bl	0 <_Znwm>
 4e4:	ldr	x3, [sp, #112]
 4e8:	str	x0, [sp, #112]
 4ec:	ldr	x1, [sp, #144]
 4f0:	ldr	x2, [sp, #184]
 4f4:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 4f8:	ldr	x7, [sp, #112]
 4fc:	mov	x0, x25
 500:	and	x7, x7, #0xfffffffffffffffe
 504:	str	x7, [sp, #112]
 508:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 50c:	ldr	x1, [sp, #128]
 510:	ldr	x0, [sp, #240]
 514:	ldr	x7, [sp, #112]
 518:	cmp	x0, x1
 51c:	b.eq	528 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x528>  // b.none
 520:	bl	0 <_ZdlPv>
 524:	ldr	x7, [sp, #112]
 528:	ldrb	w0, [sp, #280]
 52c:	orr	w0, w0, #0x3
 530:	strb	w0, [sp, #280]
 534:	cbnz	x7, 558 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x558>
 538:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 53c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 540:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 544:	add	x3, x3, #0x0
 548:	add	x1, x1, #0x0
 54c:	add	x0, x0, #0x0
 550:	mov	w2, #0x1ce                 	// #462
 554:	bl	0 <__assert_fail>
 558:	str	x7, [sp, #272]
 55c:	b	128 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x128>
 560:	ldrb	w1, [x19, #8]
 564:	and	w0, w0, #0xfffffffd
 568:	ldr	x2, [sp, #192]
 56c:	orr	w1, w1, #0x3
 570:	strb	w1, [x19, #8]
 574:	str	xzr, [sp, #192]
 578:	strb	w0, [sp, #200]
 57c:	ldp	x21, x22, [sp, #32]
 580:	ldp	x23, x24, [sp, #48]
 584:	str	x2, [x19]
 588:	b	60 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x60>
 58c:	mov	x0, x9
 590:	mov	w3, #0x0                   	// #0
 594:	b	1e8 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1e8>
 598:	adrp	x3, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 59c:	adrp	x1, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 5a0:	adrp	x0, 0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej>
 5a4:	add	x3, x3, #0x0
 5a8:	add	x1, x1, #0x0
 5ac:	add	x0, x0, #0x0
 5b0:	mov	w2, #0xc0                  	// #192
 5b4:	bl	0 <__assert_fail>
 5b8:	ldr	w3, [x26, #32]
 5bc:	b	1f0 <_ZN4llvm21SimpleBitstreamCursor9ReadVBR64Ej+0x1f0>

Disassembly of section .text._ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedIjE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedIjED2Ev:

0000000000000000 <_ZN4llvm8ExpectedIjED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedIjED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedIjED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedIjED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedIjED1Ev>

Disassembly of section .text._ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  18:	add	x1, x1, #0x0
  1c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  20:	ldrb	w0, [x19, #8]
  24:	tbz	w0, #0, 60 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x60>
  28:	bl	0 <_ZN4llvm4dbgsEv>
  2c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  30:	add	x1, x1, #0x0
  34:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  38:	ldrb	w0, [x19, #8]
  3c:	tbz	w0, #0, 74 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv+0x74>
  40:	ldr	x19, [x19]
  44:	ldr	x0, [x19]
  48:	ldr	x20, [x0, #16]
  4c:	bl	0 <_ZN4llvm4dbgsEv>
  50:	mov	x1, x0
  54:	mov	x0, x19
  58:	blr	x20
  5c:	bl	0 <abort>
  60:	bl	0 <_ZN4llvm4dbgsEv>
  64:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  68:	add	x1, x1, #0x0
  6c:	bl	0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  70:	bl	0 <abort>
  74:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  78:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  7c:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_14BitstreamEntryEE22fatalUncheckedExpectedEv>
  80:	add	x3, x3, #0x0
  84:	add	x1, x1, #0x0
  88:	add	x0, x0, #0x0
  8c:	mov	w2, #0x281                 	// #641
  90:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm8ExpectedINS_14BitstreamEntryEED2Ev:

0000000000000000 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev>:
   0:	ldrb	w2, [x0, #8]
   4:	tbnz	w2, #1, 28 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x28>
   8:	tbz	w2, #0, 24 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x24>
   c:	ldr	x0, [x0]
  10:	cbz	x0, 24 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev+0x24>
  14:	ldr	x1, [x0]
  18:	ldr	x1, [x1, #8]
  1c:	mov	x16, x1
  20:	br	x16
  24:	ret
  28:	stp	x29, x30, [sp, #-16]!
  2c:	mov	x29, sp
  30:	bl	0 <_ZN4llvm8ExpectedINS_14BitstreamEntryEED1Ev>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>:
   0:	cmp	x3, x2
   4:	b.eq	414 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x414>  // b.none
   8:	stp	x29, x30, [sp, #-96]!
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x22, x1
  18:	stp	x25, x26, [sp, #64]
  1c:	mov	x25, x0
  20:	ldp	x21, x0, [x0, #8]
  24:	stp	x19, x20, [sp, #16]
  28:	mov	x20, x2
  2c:	stp	x23, x24, [sp, #48]
  30:	mov	x19, x1
  34:	mov	x23, x3
  38:	stp	x27, x28, [sp, #80]
  3c:	sub	x27, x3, x2
  40:	sub	x0, x0, x21
  44:	asr	x24, x27, #4
  48:	asr	x0, x0, #4
  4c:	cmp	x0, x27, asr #4
  50:	b.cc	200 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x200>  // b.lo, b.ul, b.last
  54:	sub	x4, x21, x1
  58:	cmp	x24, x4, asr #4
  5c:	asr	x26, x4, #4
  60:	b.cs	47c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x47c>  // b.hs, b.nlast
  64:	sub	x23, x21, x27
  68:	mov	x2, x21
  6c:	mov	x1, x23
  70:	ldr	x0, [x1]
  74:	stp	x0, xzr, [x2]
  78:	add	x2, x2, #0x10
  7c:	ldr	x0, [x1, #8]
  80:	str	xzr, [x1, #8]
  84:	stur	x0, [x2, #-8]
  88:	str	xzr, [x1], #16
  8c:	cmp	x21, x1
  90:	b.ne	70 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x70>  // b.any
  94:	adrp	x28, 0 <__pthread_key_create>
  98:	sub	x22, x23, x22
  9c:	add	x0, x21, x27
  a0:	str	x0, [x25, #8]
  a4:	ldr	x28, [x28]
  a8:	cmp	x22, #0x0
  ac:	asr	x22, x22, #4
  b0:	mov	x26, x28
  b4:	b.gt	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xe0>
  b8:	b	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x160>
  bc:	add	x1, x25, #0x8
  c0:	ldaxr	w0, [x1]
  c4:	sub	w2, w0, #0x1
  c8:	stlxr	w3, w2, [x1]
  cc:	cbnz	w3, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xc0>
  d0:	cmp	w0, #0x1
  d4:	b.eq	114 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x114>  // b.none
  d8:	subs	x22, x22, #0x1
  dc:	b.eq	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x160>  // b.none
  e0:	ldr	x1, [x23, #-16]!
  e4:	ldr	x0, [x23, #8]
  e8:	stp	xzr, xzr, [x23]
  ec:	str	x1, [x21, #-16]!
  f0:	ldr	x25, [x21, #8]
  f4:	str	x0, [x21, #8]
  f8:	cbz	x25, d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>
  fc:	cbnz	x28, bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xbc>
 100:	ldr	w0, [x25, #8]
 104:	sub	w1, w0, #0x1
 108:	str	w1, [x25, #8]
 10c:	cmp	w0, #0x1
 110:	b.ne	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>  // b.any
 114:	ldr	x1, [x25]
 118:	mov	x0, x25
 11c:	ldr	x1, [x1, #16]
 120:	blr	x1
 124:	cbz	x26, 63c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x63c>
 128:	add	x1, x25, #0xc
 12c:	ldaxr	w0, [x1]
 130:	sub	w2, w0, #0x1
 134:	stlxr	w3, w2, [x1]
 138:	cbnz	w3, 12c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x12c>
 13c:	cmp	w0, #0x1
 140:	b.ne	d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xd8>  // b.any
 144:	ldr	x1, [x25]
 148:	mov	x0, x25
 14c:	ldr	x1, [x1, #24]
 150:	blr	x1
 154:	subs	x22, x22, #0x1
 158:	b.ne	e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0xe0>  // b.any
 15c:	nop
 160:	cmp	x27, #0x0
 164:	b.le	1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1e4>
 168:	adrp	x23, 0 <__pthread_key_create>
 16c:	ldr	x23, [x23]
 170:	mov	x25, x23
 174:	mov	x26, x23
 178:	ldp	x0, x21, [x20]
 17c:	str	x0, [x19]
 180:	ldr	x22, [x19, #8]
 184:	cmp	x21, x22
 188:	b.eq	1d4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d4>  // b.none
 18c:	cbz	x21, 1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1ac>
 190:	cbz	x26, 45c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x45c>
 194:	add	x0, x21, #0x8
 198:	ldaxr	w1, [x0]
 19c:	add	w1, w1, #0x1
 1a0:	stlxr	w2, w1, [x0]
 1a4:	cbnz	w2, 198 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x198>
 1a8:	ldr	x22, [x19, #8]
 1ac:	cbz	x22, 1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d0>
 1b0:	cbz	x23, 46c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x46c>
 1b4:	add	x1, x22, #0x8
 1b8:	ldaxr	w0, [x1]
 1bc:	sub	w2, w0, #0x1
 1c0:	stlxr	w3, w2, [x1]
 1c4:	cbnz	w3, 1b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1b8>
 1c8:	cmp	w0, #0x1
 1cc:	b.eq	418 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x418>  // b.none
 1d0:	str	x21, [x19, #8]
 1d4:	add	x20, x20, #0x10
 1d8:	add	x19, x19, #0x10
 1dc:	subs	x24, x24, #0x1
 1e0:	b.ne	178 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x178>  // b.any
 1e4:	ldp	x19, x20, [sp, #16]
 1e8:	ldp	x21, x22, [sp, #32]
 1ec:	ldp	x23, x24, [sp, #48]
 1f0:	ldp	x25, x26, [sp, #64]
 1f4:	ldp	x27, x28, [sp, #80]
 1f8:	ldp	x29, x30, [sp], #96
 1fc:	ret
 200:	ldr	x0, [x25]
 204:	mov	x26, x2
 208:	mov	x1, #0x7ffffffffffffff     	// #576460752303423487
 20c:	sub	x21, x21, x0
 210:	asr	x21, x21, #4
 214:	sub	x2, x1, x21
 218:	cmp	x24, x2
 21c:	b.hi	6b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6b8>  // b.pmore
 220:	cmp	x24, x21
 224:	csel	x24, x24, x21, cs  // cs = hs, nlast
 228:	adds	x21, x21, x24
 22c:	b.cs	6b0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6b0>  // b.hs, b.nlast
 230:	mov	x19, #0x0                   	// #0
 234:	mov	x27, #0x0                   	// #0
 238:	cbnz	x21, 67c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x67c>
 23c:	cmp	x22, x0
 240:	b.eq	6a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a8>  // b.none
 244:	mov	x1, x0
 248:	mov	x4, x27
 24c:	nop
 250:	ldr	x2, [x1]
 254:	stp	x2, xzr, [x4]
 258:	add	x4, x4, #0x10
 25c:	ldr	x2, [x1, #8]
 260:	str	xzr, [x1, #8]
 264:	stur	x2, [x4, #-8]
 268:	str	xzr, [x1], #16
 26c:	cmp	x22, x1
 270:	b.ne	250 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x250>  // b.any
 274:	sub	x0, x22, x0
 278:	add	x5, x27, x0
 27c:	adrp	x6, 0 <__pthread_key_create>
 280:	mov	x4, x26
 284:	mov	x3, x5
 288:	ldr	x6, [x6]
 28c:	b	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>
 290:	add	x1, x1, #0x8
 294:	ldaxr	w0, [x1]
 298:	add	w0, w0, #0x1
 29c:	stlxr	w2, w0, [x1]
 2a0:	cbnz	w2, 294 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x294>
 2a4:	add	x4, x4, #0x10
 2a8:	add	x3, x3, #0x10
 2ac:	cmp	x23, x4
 2b0:	b.eq	2e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2e0>  // b.none
 2b4:	ldp	x2, x1, [x4]
 2b8:	stp	x2, x1, [x3]
 2bc:	cbz	x1, 2a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2a4>
 2c0:	cbnz	x6, 290 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x290>
 2c4:	ldr	w0, [x1, #8]
 2c8:	add	x4, x4, #0x10
 2cc:	add	x3, x3, #0x10
 2d0:	cmp	x23, x4
 2d4:	add	w0, w0, #0x1
 2d8:	str	w0, [x1, #8]
 2dc:	b.ne	2b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x2b4>  // b.any
 2e0:	ldr	x24, [x25, #8]
 2e4:	sub	x23, x23, x26
 2e8:	add	x23, x5, x23
 2ec:	cmp	x22, x24
 2f0:	b.eq	32c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x32c>  // b.none
 2f4:	mov	x1, x22
 2f8:	mov	x2, x23
 2fc:	nop
 300:	ldr	x3, [x1]
 304:	str	x3, [x2]
 308:	ldr	x3, [x1, #8]
 30c:	str	xzr, [x1, #8]
 310:	str	x3, [x2, #8]
 314:	add	x2, x2, #0x10
 318:	str	xzr, [x1], #16
 31c:	cmp	x24, x1
 320:	b.ne	300 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x300>  // b.any
 324:	sub	x1, x24, x22
 328:	add	x23, x23, x1
 32c:	ldr	x20, [x25]
 330:	cmp	x24, x20
 334:	b.eq	3e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3e4>  // b.none
 338:	adrp	x26, 0 <__pthread_key_create>
 33c:	ldr	x26, [x26]
 340:	mov	x22, x26
 344:	b	370 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x370>
 348:	add	x0, x21, #0x8
 34c:	ldaxr	w1, [x0]
 350:	sub	w2, w1, #0x1
 354:	stlxr	w3, w2, [x0]
 358:	cbnz	w3, 34c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x34c>
 35c:	cmp	w1, #0x1
 360:	b.eq	390 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x390>  // b.none
 364:	add	x20, x20, #0x10
 368:	cmp	x24, x20
 36c:	b.eq	3e0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3e0>  // b.none
 370:	ldr	x21, [x20, #8]
 374:	cbz	x21, 364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>
 378:	cbnz	x26, 348 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x348>
 37c:	ldr	w1, [x21, #8]
 380:	sub	w0, w1, #0x1
 384:	str	w0, [x21, #8]
 388:	cmp	w1, #0x1
 38c:	b.ne	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>  // b.any
 390:	ldr	x1, [x21]
 394:	mov	x0, x21
 398:	ldr	x1, [x1, #16]
 39c:	blr	x1
 3a0:	cbz	x22, 64c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x64c>
 3a4:	add	x1, x21, #0xc
 3a8:	ldaxr	w0, [x1]
 3ac:	sub	w2, w0, #0x1
 3b0:	stlxr	w3, w2, [x1]
 3b4:	cbnz	w3, 3a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3a8>
 3b8:	cmp	w0, #0x1
 3bc:	b.ne	364 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x364>  // b.any
 3c0:	ldr	x1, [x21]
 3c4:	mov	x0, x21
 3c8:	add	x20, x20, #0x10
 3cc:	ldr	x1, [x1, #24]
 3d0:	blr	x1
 3d4:	cmp	x24, x20
 3d8:	b.ne	370 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x370>  // b.any
 3dc:	nop
 3e0:	ldr	x20, [x25]
 3e4:	cbz	x20, 3f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3f0>
 3e8:	mov	x0, x20
 3ec:	bl	0 <_ZdlPv>
 3f0:	stp	x27, x23, [x25]
 3f4:	str	x19, [x25, #16]
 3f8:	ldp	x19, x20, [sp, #16]
 3fc:	ldp	x21, x22, [sp, #32]
 400:	ldp	x23, x24, [sp, #48]
 404:	ldp	x25, x26, [sp, #64]
 408:	ldp	x27, x28, [sp, #80]
 40c:	ldp	x29, x30, [sp], #96
 410:	ret
 414:	ret
 418:	ldr	x1, [x22]
 41c:	mov	x0, x22
 420:	ldr	x1, [x1, #16]
 424:	blr	x1
 428:	cbz	x25, 65c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x65c>
 42c:	add	x1, x22, #0xc
 430:	ldaxr	w0, [x1]
 434:	sub	w2, w0, #0x1
 438:	stlxr	w3, w2, [x1]
 43c:	cbnz	w3, 430 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x430>
 440:	cmp	w0, #0x1
 444:	b.ne	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d0>  // b.any
 448:	ldr	x1, [x22]
 44c:	mov	x0, x22
 450:	ldr	x1, [x1, #24]
 454:	blr	x1
 458:	b	1d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1d0>
 45c:	ldr	w0, [x21, #8]
 460:	add	w0, w0, #0x1
 464:	str	w0, [x21, #8]
 468:	b	1ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1ac>
 46c:	ldr	w0, [x22, #8]
 470:	sub	w1, w0, #0x1
 474:	str	w1, [x22, #8]
 478:	b	1c8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1c8>
 47c:	add	x1, x2, x4
 480:	cmp	x3, x1
 484:	b.eq	6a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x6a0>  // b.none
 488:	adrp	x5, 0 <__pthread_key_create>
 48c:	mov	x0, x21
 490:	ldr	x5, [x5]
 494:	b	4bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4bc>
 498:	add	x2, x2, #0x8
 49c:	ldaxr	w3, [x2]
 4a0:	add	w3, w3, #0x1
 4a4:	stlxr	w6, w3, [x2]
 4a8:	cbnz	w6, 49c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x49c>
 4ac:	add	x1, x1, #0x10
 4b0:	add	x0, x0, #0x10
 4b4:	cmp	x23, x1
 4b8:	b.eq	4e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4e8>  // b.none
 4bc:	ldp	x3, x2, [x1]
 4c0:	stp	x3, x2, [x0]
 4c4:	cbz	x2, 4ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4ac>
 4c8:	cbnz	x5, 498 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x498>
 4cc:	ldr	w3, [x2, #8]
 4d0:	add	x1, x1, #0x10
 4d4:	add	x0, x0, #0x10
 4d8:	cmp	x23, x1
 4dc:	add	w3, w3, #0x1
 4e0:	str	w3, [x2, #8]
 4e4:	b.ne	4bc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4bc>  // b.any
 4e8:	ldr	x0, [x25, #8]
 4ec:	sub	x24, x24, x26
 4f0:	mov	x1, x22
 4f4:	cmp	x21, x22
 4f8:	add	x24, x0, x24, lsl #4
 4fc:	mov	x2, x24
 500:	b.eq	52c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x52c>  // b.none
 504:	nop
 508:	ldr	x0, [x1]
 50c:	stp	x0, xzr, [x2]
 510:	add	x2, x2, #0x10
 514:	ldr	x0, [x1, #8]
 518:	str	xzr, [x1, #8]
 51c:	stur	x0, [x2, #-8]
 520:	str	xzr, [x1], #16
 524:	cmp	x21, x1
 528:	b.ne	508 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x508>  // b.any
 52c:	add	x24, x24, x4
 530:	str	x24, [x25, #8]
 534:	cmp	x4, #0x0
 538:	b.le	1e4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x1e4>
 53c:	adrp	x23, 0 <__pthread_key_create>
 540:	ldr	x23, [x23]
 544:	mov	x24, x23
 548:	mov	x25, x23
 54c:	nop
 550:	ldp	x0, x21, [x20]
 554:	str	x0, [x19]
 558:	ldr	x22, [x19, #8]
 55c:	cmp	x21, x22
 560:	b.eq	5ac <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5ac>  // b.none
 564:	cbz	x21, 584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 568:	cbz	x25, 61c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x61c>
 56c:	add	x0, x21, #0x8
 570:	ldaxr	w1, [x0]
 574:	add	w1, w1, #0x1
 578:	stlxr	w2, w1, [x0]
 57c:	cbnz	w2, 570 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x570>
 580:	ldr	x22, [x19, #8]
 584:	cbz	x22, 5a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a8>
 588:	cbz	x23, 62c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x62c>
 58c:	add	x1, x22, #0x8
 590:	ldaxr	w0, [x1]
 594:	sub	w2, w0, #0x1
 598:	stlxr	w3, w2, [x1]
 59c:	cbnz	w3, 590 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x590>
 5a0:	cmp	w0, #0x1
 5a4:	b.eq	5d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5d8>  // b.none
 5a8:	str	x21, [x19, #8]
 5ac:	add	x20, x20, #0x10
 5b0:	add	x19, x19, #0x10
 5b4:	subs	x26, x26, #0x1
 5b8:	b.ne	550 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x550>  // b.any
 5bc:	ldp	x19, x20, [sp, #16]
 5c0:	ldp	x21, x22, [sp, #32]
 5c4:	ldp	x23, x24, [sp, #48]
 5c8:	ldp	x25, x26, [sp, #64]
 5cc:	ldp	x27, x28, [sp, #80]
 5d0:	ldp	x29, x30, [sp], #96
 5d4:	ret
 5d8:	ldr	x1, [x22]
 5dc:	mov	x0, x22
 5e0:	ldr	x1, [x1, #16]
 5e4:	blr	x1
 5e8:	cbz	x24, 66c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x66c>
 5ec:	add	x1, x22, #0xc
 5f0:	ldaxr	w0, [x1]
 5f4:	sub	w2, w0, #0x1
 5f8:	stlxr	w3, w2, [x1]
 5fc:	cbnz	w3, 5f0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5f0>
 600:	cmp	w0, #0x1
 604:	b.ne	5a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a8>  // b.any
 608:	ldr	x1, [x22]
 60c:	mov	x0, x22
 610:	ldr	x1, [x1, #24]
 614:	blr	x1
 618:	b	5a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a8>
 61c:	ldr	w0, [x21, #8]
 620:	add	w0, w0, #0x1
 624:	str	w0, [x21, #8]
 628:	b	584 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x584>
 62c:	ldr	w0, [x22, #8]
 630:	sub	w1, w0, #0x1
 634:	str	w1, [x22, #8]
 638:	b	5a0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x5a0>
 63c:	ldr	w0, [x25, #12]
 640:	sub	w1, w0, #0x1
 644:	str	w1, [x25, #12]
 648:	b	13c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x13c>
 64c:	ldr	w0, [x21, #12]
 650:	sub	w1, w0, #0x1
 654:	str	w1, [x21, #12]
 658:	b	3b8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x3b8>
 65c:	ldr	w0, [x22, #12]
 660:	sub	w1, w0, #0x1
 664:	str	w1, [x22, #12]
 668:	b	440 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x440>
 66c:	ldr	w0, [x22, #12]
 670:	sub	w1, w0, #0x1
 674:	str	w1, [x22, #12]
 678:	b	600 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x600>
 67c:	cmp	x21, x1
 680:	csel	x21, x21, x1, ls  // ls = plast
 684:	lsl	x19, x21, #4
 688:	mov	x0, x19
 68c:	bl	0 <_Znwm>
 690:	mov	x27, x0
 694:	add	x19, x0, x19
 698:	ldr	x0, [x25]
 69c:	b	23c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x23c>
 6a0:	mov	x0, x21
 6a4:	b	4ec <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x4ec>
 6a8:	mov	x5, x27
 6ac:	b	27c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x27c>
 6b0:	mov	x19, #0x7ffffffffffffff0    	// #9223372036854775792
 6b4:	b	688 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag+0x688>
 6b8:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE15_M_range_insertIN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEEEvNS8_IPS3_S5_EET_SE_St20forward_iterator_tag>
 6bc:	add	x0, x0, #0x0
 6c0:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x3, #0x7ffffffffffffff     	// #576460752303423487
   8:	mov	x29, sp
   c:	stp	x23, x24, [sp, #48]
  10:	stp	x25, x26, [sp, #64]
  14:	ldp	x26, x24, [x0]
  18:	stp	x19, x20, [sp, #16]
  1c:	mov	x20, x1
  20:	stp	x21, x22, [sp, #32]
  24:	stp	x27, x28, [sp, #80]
  28:	sub	x1, x24, x26
  2c:	cmp	x3, x1, asr #4
  30:	b.eq	204 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x204>  // b.none
  34:	mov	x25, x0
  38:	mov	x21, x2
  3c:	asr	x0, x1, #4
  40:	sub	x27, x20, x26
  44:	cbz	x0, 1fc <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1fc>
  48:	cmp	x0, x0, lsl #1
  4c:	mov	x23, #0x7ffffffffffffff0    	// #9223372036854775792
  50:	lsl	x0, x0, #1
  54:	b.ls	1e8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1e8>  // b.plast
  58:	mov	x0, x23
  5c:	bl	0 <_Znwm>
  60:	mov	x22, x0
  64:	add	x23, x0, x23
  68:	add	x19, x0, #0x10
  6c:	add	x0, x22, x27
  70:	cmp	x20, x26
  74:	ldr	x1, [x21]
  78:	str	x1, [x22, x27]
  7c:	ldr	x1, [x21, #8]
  80:	stp	xzr, xzr, [x21]
  84:	str	x1, [x0, #8]
  88:	b.eq	16c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x16c>  // b.none
  8c:	adrp	x27, 0 <__pthread_key_create>
  90:	mov	x28, x22
  94:	mov	x21, x26
  98:	ldr	x27, [x27]
  9c:	str	x27, [sp, #104]
  a0:	b	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>
  a4:	add	x2, x19, #0x8
  a8:	ldaxr	w0, [x2]
  ac:	sub	w1, w0, #0x1
  b0:	stlxr	w3, w1, [x2]
  b4:	cbnz	w3, a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa8>
  b8:	cmp	w0, #0x1
  bc:	b.eq	108 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x108>  // b.none
  c0:	add	x21, x21, #0x10
  c4:	add	x28, x28, #0x10
  c8:	cmp	x20, x21
  cc:	b.eq	160 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x160>  // b.none
  d0:	ldr	x0, [x21]
  d4:	stp	x0, xzr, [x28]
  d8:	ldr	x0, [x21, #8]
  dc:	str	xzr, [x21, #8]
  e0:	str	x0, [x28, #8]
  e4:	str	xzr, [x21]
  e8:	ldr	x19, [x21, #8]
  ec:	cbz	x19, c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>
  f0:	cbnz	x27, a4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xa4>
  f4:	ldr	w0, [x19, #8]
  f8:	sub	w2, w0, #0x1
  fc:	str	w2, [x19, #8]
 100:	cmp	w0, #0x1
 104:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 108:	ldr	x2, [x19]
 10c:	mov	x0, x19
 110:	ldr	x2, [x2, #16]
 114:	blr	x2
 118:	ldr	x0, [sp, #104]
 11c:	cbz	x0, 1d8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1d8>
 120:	add	x2, x19, #0xc
 124:	ldaxr	w0, [x2]
 128:	sub	w1, w0, #0x1
 12c:	stlxr	w3, w1, [x2]
 130:	cbnz	w3, 124 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x124>
 134:	cmp	w0, #0x1
 138:	b.ne	c0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xc0>  // b.any
 13c:	ldr	x2, [x19]
 140:	mov	x0, x19
 144:	add	x21, x21, #0x10
 148:	add	x28, x28, #0x10
 14c:	ldr	x2, [x2, #24]
 150:	blr	x2
 154:	cmp	x20, x21
 158:	b.ne	d0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0xd0>  // b.any
 15c:	nop
 160:	sub	x19, x20, x26
 164:	add	x19, x19, #0x10
 168:	add	x19, x22, x19
 16c:	cmp	x20, x24
 170:	b.eq	1a8 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1a8>  // b.none
 174:	mov	x0, x19
 178:	mov	x1, x20
 17c:	nop
 180:	ldr	x2, [x1]
 184:	str	x2, [x0]
 188:	ldr	x2, [x1, #8]
 18c:	str	x2, [x0, #8]
 190:	add	x1, x1, #0x10
 194:	add	x0, x0, #0x10
 198:	cmp	x1, x24
 19c:	b.ne	180 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x180>  // b.any
 1a0:	sub	x1, x1, x20
 1a4:	add	x19, x19, x1
 1a8:	cbz	x26, 1b4 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x1b4>
 1ac:	mov	x0, x26
 1b0:	bl	0 <_ZdlPv>
 1b4:	ldp	x27, x28, [sp, #80]
 1b8:	stp	x22, x19, [x25]
 1bc:	str	x23, [x25, #16]
 1c0:	ldp	x19, x20, [sp, #16]
 1c4:	ldp	x21, x22, [sp, #32]
 1c8:	ldp	x23, x24, [sp, #48]
 1cc:	ldp	x25, x26, [sp, #64]
 1d0:	ldp	x29, x30, [sp], #112
 1d4:	ret
 1d8:	ldr	w0, [x19, #12]
 1dc:	sub	w2, w0, #0x1
 1e0:	str	w2, [x19, #12]
 1e4:	b	134 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x134>
 1e8:	cbnz	x0, 210 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x210>
 1ec:	mov	x19, #0x10                  	// #16
 1f0:	mov	x23, #0x0                   	// #0
 1f4:	mov	x22, #0x0                   	// #0
 1f8:	b	6c <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x6c>
 1fc:	mov	x23, #0x10                  	// #16
 200:	b	58 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>
 204:	adrp	x0, 0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_>
 208:	add	x0, x0, #0x0
 20c:	bl	0 <_ZSt20__throw_length_errorPKc>
 210:	cmp	x0, x3
 214:	csel	x0, x0, x3, ls  // ls = plast
 218:	lsl	x23, x0, #4
 21c:	b	58 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE17_M_realloc_insertIJS3_EEEvN9__gnu_cxx17__normal_iteratorIPS3_S5_EEDpOT_+0x58>

Disassembly of section .text._ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_:

0000000000000000 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>:
   0:	mov	x2, x1
   4:	mov	x3, x0
   8:	ldp	x1, x4, [x0, #8]
   c:	cmp	x1, x4
  10:	b.eq	34 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_+0x34>  // b.none
  14:	ldr	x0, [x2]
  18:	stp	x0, xzr, [x1]
  1c:	add	x0, x1, #0x10
  20:	ldr	x4, [x2, #8]
  24:	stp	xzr, xzr, [x2]
  28:	str	x4, [x1, #8]
  2c:	str	x0, [x3, #8]
  30:	ret
  34:	b	0 <_ZNSt6vectorISt10shared_ptrIN4llvm13BitCodeAbbrevEESaIS3_EE12emplace_backIJS3_EEEvDpOT_>

Disassembly of section .text._ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj:

0000000000000000 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>:
   0:	stp	x29, x30, [sp, #-288]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	add	x20, sp, #0xf0
  14:	stp	x21, x22, [sp, #32]
  18:	mov	x22, x8
  1c:	mov	w21, w1
  20:	stp	x23, x24, [sp, #48]
  24:	add	x24, sp, #0xd0
  28:	stp	x25, x26, [sp, #64]
  2c:	add	x26, sp, #0xa0
  30:	stp	x27, x28, [sp, #80]
  34:	and	w23, w21, #0x2
  38:	ldr	w0, [x19, #32]
  3c:	cbnz	w0, 4c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x4c>
  40:	ldp	x1, x0, [x19, #8]
  44:	cmp	x1, x0
  48:	b.ls	228 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x228>  // b.plast
  4c:	ldr	w1, [x19, #36]
  50:	mov	x0, x19
  54:	mov	x8, x20
  58:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  5c:	ldrb	w1, [sp, #248]
  60:	ldrb	w0, [sp, #168]
  64:	and	w2, w1, #0x1
  68:	and	w1, w1, #0xfffffffd
  6c:	strb	w1, [sp, #248]
  70:	bfxil	w0, w2, #0, #1
  74:	orr	w0, w0, #0x2
  78:	strb	w0, [sp, #168]
  7c:	ldr	x0, [sp, #240]
  80:	cbnz	w2, 21c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x21c>
  84:	str	w0, [sp, #160]
  88:	mov	x0, x20
  8c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  90:	ldrb	w0, [sp, #168]
  94:	and	w1, w0, #0x1
  98:	bfi	w0, w1, #1, #1
  9c:	strb	w0, [sp, #168]
  a0:	cbnz	w1, 628 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x628>
  a4:	ldr	w0, [sp, #160]
  a8:	cbz	w0, 77c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x77c>
  ac:	cmp	w0, #0x1
  b0:	b.eq	6b4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6b4>  // b.none
  b4:	cmp	w0, #0x2
  b8:	b.ne	5d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5d0>  // b.any
  bc:	cbnz	w23, 5d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5d0>
  c0:	mov	x0, x19
  c4:	mov	x8, x20
  c8:	bl	2f10 <_ZN4llvm15BitstreamCursor16ReadAbbrevRecordEv>
  cc:	ldr	x0, [sp, #240]
  d0:	ands	x0, x0, #0xfffffffffffffffe
  d4:	b.ne	e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xe4>  // b.any
  d8:	mov	x0, x26
  dc:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  e0:	b	38 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x38>
  e4:	ldrb	w1, [sp, #152]
  e8:	str	x0, [sp, #144]
  ec:	orr	w0, w1, #0x3
  f0:	strb	w0, [sp, #152]
  f4:	mov	x0, x26
  f8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
  fc:	ldrb	w0, [sp, #152]
 100:	and	w1, w0, #0x1
 104:	bfi	w0, w1, #1, #1
 108:	strb	w0, [sp, #152]
 10c:	cbnz	w1, 584 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x584>
 110:	ldr	w0, [sp, #144]
 114:	cmp	w0, #0x2
 118:	b.ne	23c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x23c>  // b.any
 11c:	mov	x0, x19
 120:	mov	w1, #0x4                   	// #4
 124:	mov	x8, x20
 128:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 12c:	ldrb	w1, [sp, #248]
 130:	ldrb	w0, [sp, #184]
 134:	and	w2, w1, #0x1
 138:	and	w1, w1, #0xfffffffd
 13c:	strb	w1, [sp, #248]
 140:	bfxil	w0, w2, #0, #1
 144:	orr	w0, w0, #0x2
 148:	strb	w0, [sp, #184]
 14c:	ldr	x0, [sp, #240]
 150:	cbz	w2, 258 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x258>
 154:	str	x0, [sp, #176]
 158:	mov	x0, x20
 15c:	str	xzr, [sp, #240]
 160:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 164:	ldrb	w0, [sp, #184]
 168:	and	w1, w0, #0x1
 16c:	bfi	w0, w1, #1, #1
 170:	strb	w0, [sp, #184]
 174:	cbz	w1, 278 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x278>
 178:	ldrb	w1, [sp, #248]
 17c:	add	x25, sp, #0xb0
 180:	ldr	x2, [sp, #176]
 184:	and	w0, w0, #0xfffffffd
 188:	orr	w1, w1, #0x3
 18c:	str	xzr, [sp, #176]
 190:	strb	w0, [sp, #184]
 194:	str	x2, [sp, #240]
 198:	strb	w1, [sp, #248]
 19c:	mov	x0, x25
 1a0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1a4:	ldrb	w0, [sp, #248]
 1a8:	and	w1, w0, #0x1
 1ac:	bfi	w0, w1, #1, #1
 1b0:	strb	w0, [sp, #248]
 1b4:	cbz	w1, 35c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x35c>
 1b8:	ldr	x2, [sp, #240]
 1bc:	and	w1, w0, #0xfffffffd
 1c0:	mov	x0, x20
 1c4:	str	xzr, [sp, #240]
 1c8:	orr	x2, x2, #0x1
 1cc:	str	x2, [sp, #136]
 1d0:	strb	w1, [sp, #248]
 1d4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1d8:	ldr	x0, [sp, #136]
 1dc:	ands	x0, x0, #0xfffffffffffffffe
 1e0:	b.eq	350 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x350>  // b.none
 1e4:	ldrb	w1, [x22, #8]
 1e8:	str	x0, [x22]
 1ec:	orr	w0, w1, #0x3
 1f0:	strb	w0, [x22, #8]
 1f4:	add	x0, sp, #0x90
 1f8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 1fc:	mov	x0, x22
 200:	ldp	x19, x20, [sp, #16]
 204:	ldp	x21, x22, [sp, #32]
 208:	ldp	x23, x24, [sp, #48]
 20c:	ldp	x25, x26, [sp, #64]
 210:	ldp	x27, x28, [sp, #80]
 214:	ldp	x29, x30, [sp], #288
 218:	ret
 21c:	str	x0, [sp, #160]
 220:	str	xzr, [sp, #240]
 224:	b	88 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x88>
 228:	ldrb	w1, [sp, #152]
 22c:	mov	w0, #0x0                   	// #0
 230:	stp	wzr, wzr, [sp, #144]
 234:	and	w1, w1, #0xfffffffc
 238:	strb	w1, [sp, #152]
 23c:	ldrb	w1, [x22, #8]
 240:	ldr	w2, [sp, #148]
 244:	and	w1, w1, #0xfffffffc
 248:	stp	w0, w2, [x22]
 24c:	orr	w0, w1, #0x2
 250:	strb	w0, [x22, #8]
 254:	b	1f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1f4>
 258:	str	w0, [sp, #176]
 25c:	mov	x0, x20
 260:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 264:	ldrb	w0, [sp, #184]
 268:	and	w1, w0, #0x1
 26c:	bfi	w0, w1, #1, #1
 270:	strb	w0, [sp, #184]
 274:	cbnz	w1, 178 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x178>
 278:	ldr	w23, [sp, #176]
 27c:	tbz	w23, #3, 3f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3f0>
 280:	and	w23, w23, #0x7
 284:	add	x25, sp, #0xb0
 288:	mov	w27, #0x0                   	// #0
 28c:	b	308 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x308>
 290:	str	w0, [sp, #240]
 294:	ldrb	w0, [sp, #184]
 298:	tbnz	w0, #1, 57c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x57c>
 29c:	mov	x0, x25
 2a0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2a4:	ldrb	w1, [sp, #248]
 2a8:	ldrb	w0, [sp, #184]
 2ac:	and	w2, w1, #0x1
 2b0:	and	w1, w1, #0xfffffffd
 2b4:	strb	w1, [sp, #248]
 2b8:	bfxil	w0, w2, #0, #1
 2bc:	orr	w0, w0, #0x2
 2c0:	strb	w0, [sp, #184]
 2c4:	cbnz	w2, 428 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x428>
 2c8:	ldr	w0, [sp, #240]
 2cc:	str	w0, [sp, #176]
 2d0:	mov	x0, x20
 2d4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2d8:	mov	x0, x24
 2dc:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 2e0:	ldrb	w0, [sp, #184]
 2e4:	and	w1, w0, #0x1
 2e8:	bfi	w0, w1, #1, #1
 2ec:	strb	w0, [sp, #184]
 2f0:	cbnz	w1, 604 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x604>
 2f4:	ldr	w1, [sp, #176]
 2f8:	and	w0, w1, #0x7
 2fc:	lsl	w0, w0, w27
 300:	orr	w23, w23, w0
 304:	tbz	w1, #3, 5ec <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5ec>
 308:	mov	x0, x19
 30c:	mov	w1, #0x4                   	// #4
 310:	mov	x8, x24
 314:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 318:	ldrb	w1, [sp, #216]
 31c:	add	w27, w27, #0x3
 320:	ldrb	w0, [sp, #248]
 324:	and	w2, w1, #0x1
 328:	and	w1, w1, #0xfffffffd
 32c:	strb	w1, [sp, #216]
 330:	bfxil	w0, w2, #0, #1
 334:	orr	w0, w0, #0x2
 338:	strb	w0, [sp, #248]
 33c:	ldr	x0, [sp, #208]
 340:	cbz	w2, 290 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x290>
 344:	str	xzr, [sp, #208]
 348:	str	x0, [sp, #240]
 34c:	b	294 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x294>
 350:	add	x0, sp, #0x90
 354:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 358:	b	34 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x34>
 35c:	mov	x0, x20
 360:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 364:	ldr	w0, [x19, #32]
 368:	cmp	w0, #0x1f
 36c:	b.hi	40c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x40c>  // b.pmore
 370:	str	wzr, [x19, #32]
 374:	mov	x0, x19
 378:	mov	w1, #0x20                  	// #32
 37c:	mov	x8, x20
 380:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 384:	ldrb	w1, [sp, #248]
 388:	ldrb	w0, [sp, #168]
 38c:	and	w2, w1, #0x1
 390:	and	w1, w1, #0xfffffffd
 394:	strb	w1, [sp, #248]
 398:	bfxil	w0, w2, #0, #1
 39c:	orr	w0, w0, #0x2
 3a0:	strb	w0, [sp, #168]
 3a4:	ldr	x0, [sp, #240]
 3a8:	cbnz	w2, 570 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x570>
 3ac:	str	w0, [sp, #160]
 3b0:	mov	x0, x20
 3b4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 3b8:	ldrb	w0, [sp, #168]
 3bc:	and	w1, w0, #0x1
 3c0:	bfi	w0, w1, #1, #1
 3c4:	strb	w0, [sp, #168]
 3c8:	cbz	w1, 438 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x438>
 3cc:	ldr	x1, [sp, #160]
 3d0:	and	w0, w0, #0xfffffffd
 3d4:	str	xzr, [sp, #160]
 3d8:	orr	x1, x1, #0x1
 3dc:	str	x1, [sp, #136]
 3e0:	strb	w0, [sp, #168]
 3e4:	mov	x0, x26
 3e8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 3ec:	b	1d8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1d8>
 3f0:	ldrb	w0, [sp, #248]
 3f4:	add	x25, sp, #0xb0
 3f8:	str	w23, [sp, #240]
 3fc:	and	w0, w0, #0xfffffffc
 400:	orr	w0, w0, #0x2
 404:	strb	w0, [sp, #248]
 408:	b	19c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x19c>
 40c:	ldr	x1, [x19, #24]
 410:	sub	w0, w0, #0x20
 414:	mov	w2, #0x20                  	// #32
 418:	str	w2, [x19, #32]
 41c:	lsr	x0, x1, x0
 420:	str	x0, [x19, #24]
 424:	b	374 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x374>
 428:	ldr	x0, [sp, #240]
 42c:	str	x0, [sp, #176]
 430:	str	xzr, [sp, #240]
 434:	b	2d0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x2d0>
 438:	ldr	w2, [x19, #32]
 43c:	ldp	x3, x0, [x19, #8]
 440:	cbnz	w2, 478 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x478>
 444:	cmp	x3, x0
 448:	b.hi	478 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x478>  // b.pmore
 44c:	bl	0 <_ZNSt3_V216generic_categoryEv>
 450:	mov	x1, x0
 454:	ldr	x0, [sp, #104]
 458:	mov	x2, #0x54                  	// #84
 45c:	add	x8, sp, #0x88
 460:	bfxil	x0, x2, #0, #32
 464:	adrp	x2, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 468:	add	x2, x2, #0x0
 46c:	str	x0, [sp, #104]
 470:	bl	0 <_ZN4llvm17createStringErrorESt10error_codePKc>
 474:	b	3e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e4>
 478:	lsl	x0, x0, #3
 47c:	ldr	w27, [sp, #160]
 480:	sub	x2, x0, w2, uxtw
 484:	mov	w0, #0x20                  	// #32
 488:	str	x2, [sp, #96]
 48c:	umaddl	x27, w27, w0, x2
 490:	cmp	x3, x27, lsr #3
 494:	lsr	x0, x27, #3
 498:	b.cs	5a8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5a8>  // b.hs, b.nlast
 49c:	bl	0 <_ZNSt3_V216generic_categoryEv>
 4a0:	mov	x23, x0
 4a4:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 4a8:	adrp	x1, 0 <_ZTVN4llvm18raw_string_ostreamE>
 4ac:	ldr	x2, [sp, #96]
 4b0:	add	x7, x25, #0x10
 4b4:	ldr	x1, [x1]
 4b8:	adrp	x5, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 4bc:	ldr	x4, [x3]
 4c0:	add	x5, x5, #0x0
 4c4:	add	x3, x1, #0x10
 4c8:	mov	w6, #0x1                   	// #1
 4cc:	add	x4, x4, #0x10
 4d0:	mov	x1, x24
 4d4:	mov	x0, x20
 4d8:	stp	x7, xzr, [sp, #176]
 4dc:	strb	wzr, [sp, #192]
 4e0:	stp	x4, x5, [sp, #208]
 4e4:	stp	x2, x27, [sp, #224]
 4e8:	stp	x3, xzr, [sp, #240]
 4ec:	stp	xzr, xzr, [sp, #256]
 4f0:	str	w6, [sp, #272]
 4f4:	str	x25, [sp, #280]
 4f8:	bl	0 <_ZN4llvm11raw_ostreamlsERKNS_18format_object_baseE>
 4fc:	ldr	x0, [sp, #248]
 500:	ldr	x1, [sp, #264]
 504:	cmp	x1, x0
 508:	b.eq	514 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x514>  // b.none
 50c:	mov	x0, x20
 510:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 514:	ldr	x2, [sp, #280]
 518:	mov	w1, #0x104                 	// #260
 51c:	mov	x0, #0x54                  	// #84
 520:	stp	x2, xzr, [sp, #208]
 524:	bfxil	x28, x0, #0, #32
 528:	mov	x0, #0x40                  	// #64
 52c:	strh	w1, [sp, #224]
 530:	bl	0 <_Znwm>
 534:	add	x25, x25, #0x10
 538:	mov	x2, x28
 53c:	mov	x3, x23
 540:	mov	x1, x24
 544:	mov	x23, x0
 548:	bl	0 <_ZN4llvm11StringErrorC1ERKNS_5TwineESt10error_code>
 54c:	orr	x23, x23, #0x1
 550:	mov	x0, x20
 554:	str	x23, [sp, #136]
 558:	bl	0 <_ZN4llvm18raw_string_ostreamD1Ev>
 55c:	ldr	x0, [sp, #176]
 560:	cmp	x0, x25
 564:	b.eq	3e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e4>  // b.none
 568:	bl	0 <_ZdlPv>
 56c:	b	3e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e4>
 570:	str	x0, [sp, #160]
 574:	str	xzr, [sp, #240]
 578:	b	3b0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3b0>
 57c:	mov	x0, x25
 580:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 584:	ldrb	w1, [x22, #8]
 588:	and	w0, w0, #0xfffffffd
 58c:	ldr	x2, [sp, #144]
 590:	orr	w1, w1, #0x3
 594:	str	x2, [x22]
 598:	strb	w1, [x22, #8]
 59c:	str	xzr, [sp, #144]
 5a0:	strb	w0, [sp, #152]
 5a4:	b	1f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x1f4>
 5a8:	and	x0, x0, #0xfffffffffffffff8
 5ac:	and	w1, w27, #0x3f
 5b0:	cmp	x3, x0
 5b4:	b.cc	bac <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xbac>  // b.lo, b.ul, b.last
 5b8:	str	x0, [x19, #16]
 5bc:	str	wzr, [x19, #32]
 5c0:	cbnz	w1, 66c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x66c>
 5c4:	mov	x0, #0x1                   	// #1
 5c8:	str	x0, [sp, #136]
 5cc:	b	3e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e4>
 5d0:	ldrb	w1, [sp, #152]
 5d4:	mov	w2, #0x3                   	// #3
 5d8:	stp	w2, w0, [sp, #144]
 5dc:	and	w1, w1, #0xfffffffc
 5e0:	orr	w0, w1, #0x2
 5e4:	strb	w0, [sp, #152]
 5e8:	b	f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf4>
 5ec:	ldrb	w0, [sp, #248]
 5f0:	str	w23, [sp, #240]
 5f4:	and	w0, w0, #0xfffffffc
 5f8:	orr	w0, w0, #0x2
 5fc:	strb	w0, [sp, #248]
 600:	b	19c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x19c>
 604:	ldrb	w1, [sp, #248]
 608:	and	w0, w0, #0xfffffffd
 60c:	ldr	x2, [sp, #176]
 610:	orr	w1, w1, #0x3
 614:	str	xzr, [sp, #176]
 618:	strb	w0, [sp, #184]
 61c:	str	x2, [sp, #240]
 620:	strb	w1, [sp, #248]
 624:	b	19c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x19c>
 628:	ldrb	w2, [sp, #152]
 62c:	and	w0, w0, #0xfffffffd
 630:	ldr	x1, [sp, #160]
 634:	orr	w2, w2, #0x3
 638:	strb	w2, [sp, #152]
 63c:	str	xzr, [sp, #160]
 640:	ands	x1, x1, #0xfffffffffffffffe
 644:	strb	w0, [sp, #168]
 648:	b.ne	774 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x774>  // b.any
 64c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 650:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 654:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 658:	add	x3, x3, #0x0
 65c:	add	x1, x1, #0x0
 660:	add	x0, x0, #0x0
 664:	mov	w2, #0x1ce                 	// #462
 668:	bl	0 <__assert_fail>
 66c:	mov	x0, x19
 670:	mov	x8, x20
 674:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 678:	ldrb	w0, [sp, #248]
 67c:	and	w1, w0, #0x1
 680:	bfi	w0, w1, #1, #1
 684:	strb	w0, [sp, #248]
 688:	cbnz	w1, 860 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x860>
 68c:	mov	x0, #0x1                   	// #1
 690:	str	x0, [sp, #208]
 694:	mov	x0, x20
 698:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 69c:	ldr	x0, [sp, #208]
 6a0:	ands	x0, x0, #0xfffffffffffffffe
 6a4:	b.eq	5c4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x5c4>  // b.none
 6a8:	orr	x0, x0, #0x1
 6ac:	str	x0, [sp, #136]
 6b0:	b	3e4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x3e4>
 6b4:	mov	x0, x19
 6b8:	mov	w1, #0x8                   	// #8
 6bc:	mov	x8, x20
 6c0:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 6c4:	ldrb	w1, [sp, #248]
 6c8:	ldrb	w0, [sp, #184]
 6cc:	and	w2, w1, #0x1
 6d0:	and	w1, w1, #0xfffffffd
 6d4:	strb	w1, [sp, #248]
 6d8:	bfxil	w0, w2, #0, #1
 6dc:	orr	w0, w0, #0x2
 6e0:	strb	w0, [sp, #184]
 6e4:	ldr	x0, [sp, #240]
 6e8:	cbnz	w2, 8f8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8f8>
 6ec:	str	w0, [sp, #176]
 6f0:	mov	x0, x20
 6f4:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 6f8:	ldrb	w0, [sp, #184]
 6fc:	and	w1, w0, #0x1
 700:	bfi	w0, w1, #1, #1
 704:	strb	w0, [sp, #184]
 708:	cbz	w1, 8d4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8d4>
 70c:	ldrb	w1, [sp, #248]
 710:	add	x25, sp, #0xb0
 714:	ldr	x2, [sp, #176]
 718:	and	w0, w0, #0xfffffffd
 71c:	orr	w1, w1, #0x3
 720:	str	xzr, [sp, #176]
 724:	strb	w0, [sp, #184]
 728:	str	x2, [sp, #240]
 72c:	strb	w1, [sp, #248]
 730:	mov	x0, x25
 734:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 738:	ldrb	w0, [sp, #248]
 73c:	and	w1, w0, #0x1
 740:	bfi	w0, w1, #1, #1
 744:	strb	w0, [sp, #248]
 748:	cbnz	w1, 904 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x904>
 74c:	ldrb	w0, [sp, #152]
 750:	mov	w2, #0x2                   	// #2
 754:	ldr	w1, [sp, #240]
 758:	and	w0, w0, #0xfffffffc
 75c:	stp	w2, w1, [sp, #144]
 760:	orr	w0, w0, w2
 764:	strb	w0, [sp, #152]
 768:	mov	x0, x20
 76c:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 770:	b	f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf4>
 774:	str	x1, [sp, #144]
 778:	b	f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf4>
 77c:	tbnz	w21, #0, 844 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x844>
 780:	ldr	w0, [x19, #72]
 784:	cbz	w0, 930 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x930>
 788:	ldr	w1, [x19, #32]
 78c:	cmp	w1, #0x1f
 790:	b.hi	b34 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb34>  // b.pmore
 794:	str	wzr, [x19, #32]
 798:	ldr	x5, [x19, #64]
 79c:	ubfiz	x0, x0, #5, #32
 7a0:	sub	x0, x0, #0x20
 7a4:	add	x1, x19, #0x28
 7a8:	add	x4, x5, x0
 7ac:	adrp	x2, 0 <__pthread_key_create>
 7b0:	ldr	x25, [x19, #40]
 7b4:	ldr	w0, [x5, x0]
 7b8:	ldp	x8, x7, [x4, #8]
 7bc:	mov	x23, x25
 7c0:	ldr	x6, [x4, #24]
 7c4:	str	w0, [x19, #36]
 7c8:	mov	x0, x1
 7cc:	ldr	x1, [x1, #8]
 7d0:	str	x8, [x19, #40]
 7d4:	ldr	x2, [x2]
 7d8:	stp	x7, x6, [x0, #8]
 7dc:	cmp	x25, x1
 7e0:	stp	xzr, xzr, [x4, #8]
 7e4:	str	xzr, [x4, #24]
 7e8:	str	x2, [sp, #96]
 7ec:	b.ne	81c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x81c>  // b.any
 7f0:	b	948 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x948>
 7f4:	add	x3, x27, #0x8
 7f8:	ldaxr	w0, [x3]
 7fc:	sub	w4, w0, #0x1
 800:	stlxr	w5, w4, [x3]
 804:	cbnz	w5, 7f8 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x7f8>
 808:	cmp	w0, #0x1
 80c:	b.eq	87c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x87c>  // b.none
 810:	add	x23, x23, #0x10
 814:	cmp	x1, x23
 818:	b.eq	948 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x948>  // b.none
 81c:	ldr	x27, [x23, #8]
 820:	cbz	x27, 810 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x810>
 824:	cbnz	x2, 7f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x7f4>
 828:	ldr	w0, [x27, #8]
 82c:	sub	w3, w0, #0x1
 830:	str	w3, [x27, #8]
 834:	b	808 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x808>
 838:	ldr	x0, [x25, #8]
 83c:	cbz	x0, 844 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x844>
 840:	bl	0 <_ZdlPv>
 844:	ldrb	w0, [sp, #152]
 848:	mov	w1, #0x1                   	// #1
 84c:	stp	w1, wzr, [sp, #144]
 850:	and	w0, w0, #0xfffffffc
 854:	orr	w0, w0, #0x2
 858:	strb	w0, [sp, #152]
 85c:	b	f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf4>
 860:	ldr	x1, [sp, #240]
 864:	and	w0, w0, #0xfffffffd
 868:	str	xzr, [sp, #240]
 86c:	orr	x1, x1, #0x1
 870:	str	x1, [sp, #208]
 874:	strb	w0, [sp, #248]
 878:	b	694 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x694>
 87c:	ldr	x3, [x27]
 880:	stp	x1, x2, [sp, #112]
 884:	mov	x0, x27
 888:	ldr	x3, [x3, #16]
 88c:	blr	x3
 890:	ldr	x0, [sp, #96]
 894:	ldp	x1, x2, [sp, #112]
 898:	cbz	x0, b14 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb14>
 89c:	add	x3, x27, #0xc
 8a0:	ldaxr	w0, [x3]
 8a4:	sub	w4, w0, #0x1
 8a8:	stlxr	w5, w4, [x3]
 8ac:	cbnz	w5, 8a0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8a0>
 8b0:	cmp	w0, #0x1
 8b4:	b.ne	810 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x810>  // b.any
 8b8:	ldr	x3, [x27]
 8bc:	stp	x1, x2, [sp, #112]
 8c0:	mov	x0, x27
 8c4:	ldr	x3, [x3, #24]
 8c8:	blr	x3
 8cc:	ldp	x1, x2, [sp, #112]
 8d0:	b	810 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x810>
 8d4:	ldr	w27, [sp, #176]
 8d8:	tbnz	w27, #7, a34 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa34>
 8dc:	ldrb	w0, [sp, #248]
 8e0:	add	x25, sp, #0xb0
 8e4:	str	w27, [sp, #240]
 8e8:	and	w0, w0, #0xfffffffc
 8ec:	orr	w0, w0, #0x2
 8f0:	strb	w0, [sp, #248]
 8f4:	b	730 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x730>
 8f8:	str	x0, [sp, #176]
 8fc:	str	xzr, [sp, #240]
 900:	b	6f0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x6f0>
 904:	ldrb	w2, [sp, #152]
 908:	and	w0, w0, #0xfffffffd
 90c:	ldr	x1, [sp, #240]
 910:	orr	w2, w2, #0x3
 914:	strb	w2, [sp, #152]
 918:	str	xzr, [sp, #240]
 91c:	ands	x1, x1, #0xfffffffffffffffe
 920:	strb	w0, [sp, #248]
 924:	b.eq	64c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x64c>  // b.none
 928:	str	x1, [sp, #144]
 92c:	b	768 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x768>
 930:	ldrb	w0, [sp, #152]
 934:	stp	wzr, wzr, [sp, #144]
 938:	and	w0, w0, #0xfffffffc
 93c:	orr	w0, w0, #0x2
 940:	strb	w0, [sp, #152]
 944:	b	f4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xf4>
 948:	cbz	x25, 954 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x954>
 94c:	mov	x0, x25
 950:	bl	0 <_ZdlPv>
 954:	ldp	w0, w2, [x19, #72]
 958:	mov	w1, w0
 95c:	sub	x1, x1, #0x1
 960:	cmp	x1, x2
 964:	b.hi	b8c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb8c>  // b.pmore
 968:	sub	w0, w0, #0x1
 96c:	adrp	x2, 0 <__pthread_key_create>
 970:	ldr	x3, [x19, #64]
 974:	ubfiz	x1, x0, #5, #32
 978:	ldr	x2, [x2]
 97c:	add	x25, x3, x1
 980:	str	x2, [sp, #96]
 984:	ldp	x23, x1, [x25, #8]
 988:	str	w0, [x19, #72]
 98c:	cmp	x23, x1
 990:	b.ne	9c0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9c0>  // b.any
 994:	b	838 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x838>
 998:	add	x3, x27, #0x8
 99c:	ldaxr	w0, [x3]
 9a0:	sub	w4, w0, #0x1
 9a4:	stlxr	w5, w4, [x3]
 9a8:	cbnz	w5, 99c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x99c>
 9ac:	cmp	w0, #0x1
 9b0:	b.eq	9dc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9dc>  // b.none
 9b4:	add	x23, x23, #0x10
 9b8:	cmp	x1, x23
 9bc:	b.eq	838 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x838>  // b.none
 9c0:	ldr	x27, [x23, #8]
 9c4:	cbz	x27, 9b4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9b4>
 9c8:	cbnz	x2, 998 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x998>
 9cc:	ldr	w0, [x27, #8]
 9d0:	sub	w3, w0, #0x1
 9d4:	str	w3, [x27, #8]
 9d8:	b	9ac <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9ac>
 9dc:	ldr	x3, [x27]
 9e0:	stp	x1, x2, [sp, #112]
 9e4:	mov	x0, x27
 9e8:	ldr	x3, [x3, #16]
 9ec:	blr	x3
 9f0:	ldr	x0, [sp, #96]
 9f4:	ldp	x1, x2, [sp, #112]
 9f8:	cbz	x0, b24 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb24>
 9fc:	add	x3, x27, #0xc
 a00:	ldaxr	w0, [x3]
 a04:	sub	w4, w0, #0x1
 a08:	stlxr	w5, w4, [x3]
 a0c:	cbnz	w5, a00 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa00>
 a10:	cmp	w0, #0x1
 a14:	b.ne	9b4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9b4>  // b.any
 a18:	ldr	x3, [x27]
 a1c:	stp	x1, x2, [sp, #112]
 a20:	mov	x0, x27
 a24:	ldr	x3, [x3, #24]
 a28:	blr	x3
 a2c:	ldp	x1, x2, [sp, #112]
 a30:	b	9b4 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x9b4>
 a34:	and	w27, w27, #0x7f
 a38:	add	x25, sp, #0xb0
 a3c:	mov	w23, #0x0                   	// #0
 a40:	b	abc <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xabc>
 a44:	str	w0, [sp, #240]
 a48:	ldrb	w0, [sp, #184]
 a4c:	tbnz	w0, #1, 57c <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x57c>
 a50:	mov	x0, x25
 a54:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 a58:	ldrb	w1, [sp, #248]
 a5c:	ldrb	w0, [sp, #184]
 a60:	and	w2, w1, #0x1
 a64:	and	w1, w1, #0xfffffffd
 a68:	strb	w1, [sp, #248]
 a6c:	bfxil	w0, w2, #0, #1
 a70:	orr	w0, w0, #0x2
 a74:	strb	w0, [sp, #184]
 a78:	cbnz	w2, b04 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb04>
 a7c:	ldr	w0, [sp, #240]
 a80:	str	w0, [sp, #176]
 a84:	mov	x0, x20
 a88:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 a8c:	mov	x0, x24
 a90:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 a94:	ldrb	w0, [sp, #184]
 a98:	and	w1, w0, #0x1
 a9c:	bfi	w0, w1, #1, #1
 aa0:	strb	w0, [sp, #184]
 aa4:	cbnz	w1, b50 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb50>
 aa8:	ldr	w1, [sp, #176]
 aac:	and	w0, w1, #0x7f
 ab0:	lsl	w0, w0, w23
 ab4:	orr	w27, w27, w0
 ab8:	tbz	w1, #7, b74 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xb74>
 abc:	mov	x0, x19
 ac0:	mov	w1, #0x8                   	// #8
 ac4:	mov	x8, x24
 ac8:	bl	0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 acc:	ldrb	w1, [sp, #216]
 ad0:	add	w23, w23, #0x7
 ad4:	ldrb	w0, [sp, #248]
 ad8:	and	w2, w1, #0x1
 adc:	and	w1, w1, #0xfffffffd
 ae0:	strb	w1, [sp, #216]
 ae4:	bfxil	w0, w2, #0, #1
 ae8:	orr	w0, w0, #0x2
 aec:	strb	w0, [sp, #248]
 af0:	ldr	x0, [sp, #208]
 af4:	cbz	w2, a44 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa44>
 af8:	str	xzr, [sp, #208]
 afc:	str	x0, [sp, #240]
 b00:	b	a48 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa48>
 b04:	ldr	x0, [sp, #240]
 b08:	str	x0, [sp, #176]
 b0c:	str	xzr, [sp, #240]
 b10:	b	a84 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa84>
 b14:	ldr	w0, [x27, #12]
 b18:	sub	w3, w0, #0x1
 b1c:	str	w3, [x27, #12]
 b20:	b	8b0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x8b0>
 b24:	ldr	w0, [x27, #12]
 b28:	sub	w3, w0, #0x1
 b2c:	str	w3, [x27, #12]
 b30:	b	a10 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0xa10>
 b34:	ldr	x2, [x19, #24]
 b38:	sub	w1, w1, #0x20
 b3c:	mov	w3, #0x20                  	// #32
 b40:	str	w3, [x19, #32]
 b44:	lsr	x1, x2, x1
 b48:	str	x1, [x19, #24]
 b4c:	b	798 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x798>
 b50:	ldrb	w1, [sp, #248]
 b54:	and	w0, w0, #0xfffffffd
 b58:	ldr	x2, [sp, #176]
 b5c:	orr	w1, w1, #0x3
 b60:	str	xzr, [sp, #176]
 b64:	strb	w0, [sp, #184]
 b68:	str	x2, [sp, #240]
 b6c:	strb	w1, [sp, #248]
 b70:	b	730 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x730>
 b74:	ldrb	w0, [sp, #248]
 b78:	str	w27, [sp, #240]
 b7c:	and	w0, w0, #0xfffffffc
 b80:	orr	w0, w0, #0x2
 b84:	strb	w0, [sp, #248]
 b88:	b	730 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj+0x730>
 b8c:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b90:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b94:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 b98:	add	x3, x3, #0x0
 b9c:	add	x1, x1, #0x0
 ba0:	add	x0, x0, #0x0
 ba4:	mov	w2, #0x43                  	// #67
 ba8:	bl	0 <__assert_fail>
 bac:	adrp	x3, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 bb0:	adrp	x1, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 bb4:	adrp	x0, 0 <_ZN4llvm15BitstreamCursor24advanceSkippingSubblocksEj>
 bb8:	add	x3, x3, #0x0
 bbc:	add	x1, x1, #0x0
 bc0:	add	x0, x0, #0x0
 bc4:	mov	w2, #0x85                  	// #133
 bc8:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-96]!
   4:	mov	x3, #0xcccccccccccccccc    	// #-3689348814741910324
   8:	movk	x3, #0xcccd
   c:	mov	x29, sp
  10:	stp	x21, x22, [sp, #32]
  14:	mov	x21, x0
  18:	stp	x25, x26, [sp, #64]
  1c:	ldp	x22, x25, [x0]
  20:	stp	x19, x20, [sp, #16]
  24:	stp	x23, x24, [sp, #48]
  28:	mov	x24, x1
  2c:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  30:	str	x27, [sp, #80]
  34:	movk	x1, #0x333, lsl #48
  38:	sub	x0, x25, x22
  3c:	asr	x0, x0, #3
  40:	mul	x0, x0, x3
  44:	cmp	x0, x1
  48:	b.eq	27c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x27c>  // b.none
  4c:	mov	x26, x2
  50:	sub	x27, x24, x22
  54:	cbz	x0, 254 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x254>
  58:	cmp	x0, x0, lsl #1
  5c:	mov	x23, #0x7ffffffffffffff8    	// #9223372036854775800
  60:	lsl	x0, x0, #1
  64:	b.ls	240 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x240>  // b.plast
  68:	mov	x0, x23
  6c:	bl	0 <_Znwm>
  70:	mov	x20, x0
  74:	add	x23, x0, x23
  78:	add	x19, x0, #0x28
  7c:	mov	x0, x26
  80:	add	x2, x20, x27
  84:	ldr	w1, [x26]
  88:	add	x4, x2, #0x18
  8c:	str	w1, [x20, x27]
  90:	add	x3, x26, #0x18
  94:	ldr	x1, [x0, #8]!
  98:	str	x4, [x2, #8]
  9c:	cmp	x1, x3
  a0:	b.eq	25c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x25c>  // b.none
  a4:	ldr	x0, [x0, #16]
  a8:	str	x1, [x2, #8]
  ac:	str	x0, [x2, #24]
  b0:	ldr	x0, [x26, #16]
  b4:	stp	x3, xzr, [x26, #8]
  b8:	cmp	x24, x22
  bc:	str	x0, [x2, #16]
  c0:	strb	wzr, [x26, #24]
  c4:	b.eq	168 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x168>  // b.none
  c8:	mov	x4, x20
  cc:	mov	x3, x22
  d0:	b	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xf8>
  d4:	str	x6, [x4, #8]
  d8:	add	x3, x3, #0x28
  dc:	add	x4, x4, #0x28
  e0:	ldur	x0, [x3, #-16]
  e4:	stur	x0, [x4, #-16]
  e8:	ldur	x0, [x3, #-24]
  ec:	stur	x0, [x4, #-24]
  f0:	cmp	x24, x3
  f4:	b.eq	138 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x138>  // b.none
  f8:	mov	x6, x4
  fc:	ldr	w0, [x3]
 100:	add	x5, x3, #0x18
 104:	str	w0, [x6], #24
 108:	str	x6, [x4, #8]
 10c:	ldr	x6, [x3, #8]
 110:	cmp	x6, x5
 114:	b.ne	d4 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xd4>  // b.any
 118:	ldp	x0, x1, [x3, #24]
 11c:	stp	x0, x1, [x4, #24]
 120:	add	x3, x3, #0x28
 124:	ldur	x0, [x3, #-24]
 128:	str	x0, [x4, #16]
 12c:	cmp	x24, x3
 130:	add	x4, x4, #0x28
 134:	b.ne	f8 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xf8>  // b.any
 138:	sub	x19, x24, #0x28
 13c:	mov	x0, #0xcccd                	// #52429
 140:	sub	x19, x19, x22
 144:	movk	x0, #0xcccc, lsl #16
 148:	movk	x0, #0xcccc, lsl #32
 14c:	lsr	x19, x19, #3
 150:	movk	x0, #0xccc, lsl #48
 154:	mul	x19, x19, x0
 158:	and	x19, x19, #0x1fffffffffffffff
 15c:	add	x19, x19, #0x2
 160:	add	x19, x19, x19, lsl #2
 164:	add	x19, x20, x19, lsl #3
 168:	cmp	x24, x25
 16c:	b.eq	210 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x210>  // b.none
 170:	mov	x2, x24
 174:	mov	x3, x19
 178:	b	1a0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1a0>
 17c:	ldr	x0, [x2, #24]
 180:	str	x0, [x3, #24]
 184:	ldr	x0, [x2, #16]
 188:	str	x6, [x3, #8]
 18c:	str	x0, [x3, #16]
 190:	add	x2, x2, #0x28
 194:	cmp	x2, x25
 198:	add	x3, x3, #0x28
 19c:	b.eq	1e0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1e0>  // b.none
 1a0:	mov	x4, x3
 1a4:	ldr	w0, [x2]
 1a8:	ldr	x6, [x2, #8]
 1ac:	add	x5, x2, #0x18
 1b0:	str	w0, [x4], #24
 1b4:	cmp	x6, x5
 1b8:	str	x4, [x3, #8]
 1bc:	b.ne	17c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x17c>  // b.any
 1c0:	ldp	x0, x1, [x2, #24]
 1c4:	stp	x0, x1, [x3, #24]
 1c8:	add	x2, x2, #0x28
 1cc:	ldur	x0, [x2, #-24]
 1d0:	str	x0, [x3, #16]
 1d4:	cmp	x2, x25
 1d8:	add	x3, x3, #0x28
 1dc:	b.ne	1a0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x1a0>  // b.any
 1e0:	sub	x1, x2, x24
 1e4:	mov	x0, #0xcccd                	// #52429
 1e8:	sub	x1, x1, #0x28
 1ec:	movk	x0, #0xcccc, lsl #16
 1f0:	movk	x0, #0xcccc, lsl #32
 1f4:	lsr	x1, x1, #3
 1f8:	movk	x0, #0xccc, lsl #48
 1fc:	mul	x1, x1, x0
 200:	and	x1, x1, #0x1fffffffffffffff
 204:	add	x1, x1, #0x1
 208:	add	x1, x1, x1, lsl #2
 20c:	add	x19, x19, x1, lsl #3
 210:	cbz	x22, 21c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x21c>
 214:	mov	x0, x22
 218:	bl	0 <_ZdlPv>
 21c:	ldp	x25, x26, [sp, #64]
 220:	ldr	x27, [sp, #80]
 224:	stp	x20, x19, [x21]
 228:	str	x23, [x21, #16]
 22c:	ldp	x19, x20, [sp, #16]
 230:	ldp	x21, x22, [sp, #32]
 234:	ldp	x23, x24, [sp, #48]
 238:	ldp	x29, x30, [sp], #96
 23c:	ret
 240:	cbnz	x0, 268 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x268>
 244:	mov	x19, #0x28                  	// #40
 248:	mov	x23, #0x0                   	// #0
 24c:	mov	x20, #0x0                   	// #0
 250:	b	7c <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x7c>
 254:	mov	x23, #0x28                  	// #40
 258:	b	68 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x68>
 25c:	ldp	x0, x1, [x26, #24]
 260:	stp	x0, x1, [x2, #24]
 264:	b	b0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0xb0>
 268:	cmp	x0, x1
 26c:	mov	x23, #0x28                  	// #40
 270:	csel	x0, x0, x1, ls  // ls = plast
 274:	mul	x23, x0, x23
 278:	b	68 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_+0x68>
 27c:	adrp	x0, 0 <_ZNSt6vectorISt4pairIjNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEESaIS7_EE17_M_realloc_insertIJS7_EEEvN9__gnu_cxx17__normal_iteratorIPS7_S9_EEDpOT_>
 280:	add	x0, x0, #0x0
 284:	bl	0 <_ZSt20__throw_length_errorPKc>
