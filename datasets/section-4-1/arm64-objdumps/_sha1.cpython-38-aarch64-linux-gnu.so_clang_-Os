
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_sha1.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000cc8 <.init>:
 cc8:	stp	x29, x30, [sp, #-16]!
 ccc:	mov	x29, sp
 cd0:	bl	e20 <_Py_strhex@plt+0x10>
 cd4:	ldp	x29, x30, [sp], #16
 cd8:	ret

Disassembly of section .plt:

0000000000000ce0 <memcpy@plt-0x20>:
 ce0:	stp	x16, x30, [sp, #-16]!
 ce4:	adrp	x16, 11000 <PyInit__sha1@@Base+0x1010c>
 ce8:	ldr	x17, [x16, #4088]
 cec:	add	x16, x16, #0xff8
 cf0:	br	x17
 cf4:	nop
 cf8:	nop
 cfc:	nop

0000000000000d00 <memcpy@plt>:
 d00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d04:	ldr	x17, [x16]
 d08:	add	x16, x16, #0x0
 d0c:	br	x17

0000000000000d10 <PyBuffer_Release@plt>:
 d10:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d14:	ldr	x17, [x16, #8]
 d18:	add	x16, x16, #0x8
 d1c:	br	x17

0000000000000d20 <__cxa_finalize@plt>:
 d20:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d24:	ldr	x17, [x16, #16]
 d28:	add	x16, x16, #0x10
 d2c:	br	x17

0000000000000d30 <PyBytes_FromStringAndSize@plt>:
 d30:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d34:	ldr	x17, [x16, #24]
 d38:	add	x16, x16, #0x18
 d3c:	br	x17

0000000000000d40 <_Py_Dealloc@plt>:
 d40:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d44:	ldr	x17, [x16, #32]
 d48:	add	x16, x16, #0x20
 d4c:	br	x17

0000000000000d50 <_PyArg_UnpackKeywords@plt>:
 d50:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d54:	ldr	x17, [x16, #40]
 d58:	add	x16, x16, #0x28
 d5c:	br	x17

0000000000000d60 <PyErr_SetString@plt>:
 d60:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d64:	ldr	x17, [x16, #48]
 d68:	add	x16, x16, #0x30
 d6c:	br	x17

0000000000000d70 <PyObject_Free@plt>:
 d70:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d74:	ldr	x17, [x16, #56]
 d78:	add	x16, x16, #0x38
 d7c:	br	x17

0000000000000d80 <PyType_Ready@plt>:
 d80:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d84:	ldr	x17, [x16, #64]
 d88:	add	x16, x16, #0x40
 d8c:	br	x17

0000000000000d90 <PyLong_FromLong@plt>:
 d90:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 d94:	ldr	x17, [x16, #72]
 d98:	add	x16, x16, #0x48
 d9c:	br	x17

0000000000000da0 <__gmon_start__@plt>:
 da0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 da4:	ldr	x17, [x16, #80]
 da8:	add	x16, x16, #0x50
 dac:	br	x17

0000000000000db0 <PyErr_Occurred@plt>:
 db0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 db4:	ldr	x17, [x16, #88]
 db8:	add	x16, x16, #0x58
 dbc:	br	x17

0000000000000dc0 <PyModule_Create2@plt>:
 dc0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16, #96]
 dc8:	add	x16, x16, #0x60
 dcc:	br	x17

0000000000000dd0 <PyObject_GetBuffer@plt>:
 dd0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #104]
 dd8:	add	x16, x16, #0x68
 ddc:	br	x17

0000000000000de0 <_PyObject_New@plt>:
 de0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #112]
 de8:	add	x16, x16, #0x70
 dec:	br	x17

0000000000000df0 <PyModule_AddObject@plt>:
 df0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #120]
 df8:	add	x16, x16, #0x78
 dfc:	br	x17

0000000000000e00 <PyUnicode_FromStringAndSize@plt>:
 e00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #128]
 e08:	add	x16, x16, #0x80
 e0c:	br	x17

0000000000000e10 <_Py_strhex@plt>:
 e10:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #136]
 e18:	add	x16, x16, #0x88
 e1c:	br	x17

Disassembly of section .text:

0000000000000e20 <PyInit__sha1@@Base-0xd4>:
     e20:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
     e24:	ldr	x0, [x0, #4040]
     e28:	cbz	x0, e30 <_Py_strhex@plt+0x20>
     e2c:	b	da0 <__gmon_start__@plt>
     e30:	ret
     e34:	nop
     e38:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     e3c:	add	x0, x0, #0x460
     e40:	adrp	x1, 12000 <PyInit__sha1@@Base+0x1110c>
     e44:	add	x1, x1, #0x460
     e48:	cmp	x1, x0
     e4c:	b.eq	e64 <_Py_strhex@plt+0x54>  // b.none
     e50:	adrp	x1, 11000 <PyInit__sha1@@Base+0x1010c>
     e54:	ldr	x1, [x1, #4008]
     e58:	cbz	x1, e64 <_Py_strhex@plt+0x54>
     e5c:	mov	x16, x1
     e60:	br	x16
     e64:	ret
     e68:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     e6c:	add	x0, x0, #0x460
     e70:	adrp	x1, 12000 <PyInit__sha1@@Base+0x1110c>
     e74:	add	x1, x1, #0x460
     e78:	sub	x1, x1, x0
     e7c:	lsr	x2, x1, #63
     e80:	add	x1, x2, x1, asr #3
     e84:	cmp	xzr, x1, asr #1
     e88:	asr	x1, x1, #1
     e8c:	b.eq	ea4 <_Py_strhex@plt+0x94>  // b.none
     e90:	adrp	x2, 11000 <PyInit__sha1@@Base+0x1010c>
     e94:	ldr	x2, [x2, #4064]
     e98:	cbz	x2, ea4 <_Py_strhex@plt+0x94>
     e9c:	mov	x16, x2
     ea0:	br	x16
     ea4:	ret
     ea8:	stp	x29, x30, [sp, #-32]!
     eac:	mov	x29, sp
     eb0:	str	x19, [sp, #16]
     eb4:	adrp	x19, 12000 <PyInit__sha1@@Base+0x1110c>
     eb8:	ldrb	w0, [x19, #1120]
     ebc:	cbnz	w0, ee4 <_Py_strhex@plt+0xd4>
     ec0:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
     ec4:	ldr	x0, [x0, #4016]
     ec8:	cbz	x0, ed8 <_Py_strhex@plt+0xc8>
     ecc:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     ed0:	ldr	x0, [x0, #144]
     ed4:	bl	d20 <__cxa_finalize@plt>
     ed8:	bl	e38 <_Py_strhex@plt+0x28>
     edc:	mov	w0, #0x1                   	// #1
     ee0:	strb	w0, [x19, #1120]
     ee4:	ldr	x19, [sp, #16]
     ee8:	ldp	x29, x30, [sp], #32
     eec:	ret
     ef0:	b	e68 <_Py_strhex@plt+0x58>

0000000000000ef4 <PyInit__sha1@@Base>:
     ef4:	stp	x29, x30, [sp, #-32]!
     ef8:	stp	x20, x19, [sp, #16]
     efc:	mov	x29, sp
     f00:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
     f04:	ldr	x8, [x8, #4048]
     f08:	adrp	x19, 12000 <PyInit__sha1@@Base+0x1110c>
     f0c:	add	x19, x19, #0x98
     f10:	mov	x0, x19
     f14:	str	x8, [x19, #8]
     f18:	bl	d80 <PyType_Ready@plt>
     f1c:	tbnz	w0, #31, f5c <PyInit__sha1@@Base+0x68>
     f20:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     f24:	add	x0, x0, #0x238
     f28:	mov	w1, #0x3f5                 	// #1013
     f2c:	bl	dc0 <PyModule_Create2@plt>
     f30:	mov	x20, x0
     f34:	cbz	x0, f60 <PyInit__sha1@@Base+0x6c>
     f38:	ldr	x8, [x19]
     f3c:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
     f40:	add	x1, x1, #0x938
     f44:	mov	x0, x20
     f48:	add	x8, x8, #0x1
     f4c:	mov	x2, x19
     f50:	str	x8, [x19]
     f54:	bl	df0 <PyModule_AddObject@plt>
     f58:	b	f60 <PyInit__sha1@@Base+0x6c>
     f5c:	mov	x20, xzr
     f60:	mov	x0, x20
     f64:	ldp	x20, x19, [sp, #16]
     f68:	ldp	x29, x30, [sp], #32
     f6c:	ret
     f70:	b	d70 <PyObject_Free@plt>
     f74:	stp	x29, x30, [sp, #-32]!
     f78:	stp	x20, x19, [sp, #16]
     f7c:	mov	x29, sp
     f80:	mov	x20, x0
     f84:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
     f88:	add	x0, x0, #0x98
     f8c:	bl	de0 <_PyObject_New@plt>
     f90:	mov	x19, x0
     f94:	cbz	x0, fa8 <PyInit__sha1@@Base+0xb4>
     f98:	add	x0, x19, #0x10
     f9c:	add	x1, x20, #0x10
     fa0:	mov	w2, #0x60                  	// #96
     fa4:	bl	d00 <memcpy@plt>
     fa8:	mov	x0, x19
     fac:	ldp	x20, x19, [sp, #16]
     fb0:	ldp	x29, x30, [sp], #32
     fb4:	ret
     fb8:	sub	sp, sp, #0x90
     fbc:	stp	x29, x30, [sp, #128]
     fc0:	add	x29, sp, #0x80
     fc4:	add	x1, x0, #0x10
     fc8:	add	x0, sp, #0x8
     fcc:	mov	w2, #0x60                  	// #96
     fd0:	bl	d00 <memcpy@plt>
     fd4:	add	x0, sp, #0x8
     fd8:	sub	x1, x29, #0x14
     fdc:	bl	1124 <PyInit__sha1@@Base+0x230>
     fe0:	sub	x0, x29, #0x14
     fe4:	mov	w1, #0x14                  	// #20
     fe8:	bl	d30 <PyBytes_FromStringAndSize@plt>
     fec:	ldp	x29, x30, [sp, #128]
     ff0:	add	sp, sp, #0x90
     ff4:	ret
     ff8:	sub	sp, sp, #0x90
     ffc:	stp	x29, x30, [sp, #128]
    1000:	add	x29, sp, #0x80
    1004:	add	x1, x0, #0x10
    1008:	add	x0, sp, #0x8
    100c:	mov	w2, #0x60                  	// #96
    1010:	bl	d00 <memcpy@plt>
    1014:	add	x0, sp, #0x8
    1018:	sub	x1, x29, #0x14
    101c:	bl	1124 <PyInit__sha1@@Base+0x230>
    1020:	sub	x0, x29, #0x14
    1024:	mov	w1, #0x14                  	// #20
    1028:	bl	e10 <_Py_strhex@plt>
    102c:	ldp	x29, x30, [sp, #128]
    1030:	add	sp, sp, #0x90
    1034:	ret
    1038:	sub	sp, sp, #0x70
    103c:	stp	x29, x30, [sp, #80]
    1040:	str	x19, [sp, #96]
    1044:	add	x29, sp, #0x50
    1048:	ldr	x9, [x1, #8]
    104c:	ldrb	w10, [x9, #171]
    1050:	tbnz	w10, #4, 10b4 <PyInit__sha1@@Base+0x1c0>
    1054:	ldr	x9, [x9, #160]
    1058:	cbz	x9, 10c8 <PyInit__sha1@@Base+0x1d4>
    105c:	ldr	x9, [x9]
    1060:	cbz	x9, 10c8 <PyInit__sha1@@Base+0x1d4>
    1064:	mov	x8, x1
    1068:	mov	x19, x0
    106c:	mov	x1, sp
    1070:	mov	x0, x8
    1074:	mov	w2, wzr
    1078:	bl	dd0 <PyObject_GetBuffer@plt>
    107c:	cmn	w0, #0x1
    1080:	b.eq	10e0 <PyInit__sha1@@Base+0x1ec>  // b.none
    1084:	ldr	w8, [sp, #36]
    1088:	cmp	w8, #0x2
    108c:	b.lt	10f4 <PyInit__sha1@@Base+0x200>  // b.tstop
    1090:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    1094:	ldr	x8, [x8, #4024]
    1098:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    109c:	add	x1, x1, #0x9bb
    10a0:	ldr	x0, [x8]
    10a4:	bl	d60 <PyErr_SetString@plt>
    10a8:	mov	x0, sp
    10ac:	bl	d10 <PyBuffer_Release@plt>
    10b0:	b	10e0 <PyInit__sha1@@Base+0x1ec>
    10b4:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    10b8:	ldr	x8, [x8, #4032]
    10bc:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    10c0:	add	x1, x1, #0x962
    10c4:	b	10d8 <PyInit__sha1@@Base+0x1e4>
    10c8:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    10cc:	ldr	x8, [x8, #4032]
    10d0:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    10d4:	add	x1, x1, #0x991
    10d8:	ldr	x0, [x8]
    10dc:	bl	d60 <PyErr_SetString@plt>
    10e0:	mov	x0, xzr
    10e4:	ldr	x19, [sp, #96]
    10e8:	ldp	x29, x30, [sp, #80]
    10ec:	add	sp, sp, #0x70
    10f0:	ret
    10f4:	ldr	x1, [sp]
    10f8:	ldr	x2, [sp, #16]
    10fc:	add	x0, x19, #0x10
    1100:	bl	1678 <PyInit__sha1@@Base+0x784>
    1104:	mov	x0, sp
    1108:	bl	d10 <PyBuffer_Release@plt>
    110c:	adrp	x0, 11000 <PyInit__sha1@@Base+0x1010c>
    1110:	ldr	x0, [x0, #4056]
    1114:	ldr	x8, [x0]
    1118:	add	x8, x8, #0x1
    111c:	str	x8, [x0]
    1120:	b	10e4 <PyInit__sha1@@Base+0x1f0>
    1124:	stp	x29, x30, [sp, #-48]!
    1128:	str	x21, [sp, #16]
    112c:	stp	x20, x19, [sp, #32]
    1130:	mov	x29, sp
    1134:	ldr	w8, [x0, #28]
    1138:	ldr	x10, [x0]
    113c:	mov	x19, x1
    1140:	mov	x20, x0
    1144:	lsl	w12, w8, #3
    1148:	add	w9, w8, #0x1
    114c:	add	x21, x0, #0x20
    1150:	mov	w11, #0x80                  	// #128
    1154:	add	x10, x10, x12
    1158:	cmp	w9, #0x39
    115c:	str	w9, [x0, #28]
    1160:	str	x10, [x0]
    1164:	strb	w11, [x21, x8]
    1168:	b.cc	11b0 <PyInit__sha1@@Base+0x2bc>  // b.lo, b.ul, b.last
    116c:	cmp	w9, #0x3f
    1170:	b.hi	1198 <PyInit__sha1@@Base+0x2a4>  // b.pmore
    1174:	mov	w9, w9
    1178:	add	x10, x20, #0x20
    117c:	add	w8, w8, #0x2
    1180:	str	w8, [x20, #28]
    1184:	strb	wzr, [x10, x9]
    1188:	cmp	x9, #0x3f
    118c:	add	x9, x9, #0x1
    1190:	add	w8, w8, #0x1
    1194:	b.cc	1180 <PyInit__sha1@@Base+0x28c>  // b.lo, b.ul, b.last
    1198:	mov	x0, x20
    119c:	mov	x1, x21
    11a0:	bl	1240 <PyInit__sha1@@Base+0x34c>
    11a4:	mov	w9, wzr
    11a8:	str	wzr, [x20, #28]
    11ac:	b	11b8 <PyInit__sha1@@Base+0x2c4>
    11b0:	cmp	w9, #0x38
    11b4:	b.eq	11d8 <PyInit__sha1@@Base+0x2e4>  // b.none
    11b8:	mov	w8, w9
    11bc:	add	x9, x20, #0x20
    11c0:	add	x10, x8, #0x1
    11c4:	cmp	x8, #0x37
    11c8:	str	w10, [x20, #28]
    11cc:	strb	wzr, [x9, x8]
    11d0:	mov	x8, x10
    11d4:	b.cc	11c0 <PyInit__sha1@@Base+0x2cc>  // b.lo, b.ul, b.last
    11d8:	ldr	x8, [x20]
    11dc:	mov	x0, x20
    11e0:	mov	x1, x21
    11e4:	rev	x8, x8
    11e8:	str	x8, [x20, #88]
    11ec:	bl	1240 <PyInit__sha1@@Base+0x34c>
    11f0:	mov	x8, xzr
    11f4:	add	x9, x20, #0x8
    11f8:	add	x10, x9, x8
    11fc:	ldrb	w11, [x10, #3]
    1200:	add	x12, x19, x8
    1204:	add	x8, x8, #0x4
    1208:	cmp	x8, #0x14
    120c:	strb	w11, [x12]
    1210:	ldrh	w11, [x10, #2]
    1214:	strb	w11, [x12, #1]
    1218:	ldr	w11, [x10]
    121c:	lsr	w11, w11, #8
    1220:	strb	w11, [x12, #2]
    1224:	ldr	w10, [x10]
    1228:	strb	w10, [x12, #3]
    122c:	b.ne	11f8 <PyInit__sha1@@Base+0x304>  // b.any
    1230:	ldp	x20, x19, [sp, #32]
    1234:	ldr	x21, [sp, #16]
    1238:	ldp	x29, x30, [sp], #48
    123c:	ret
    1240:	sub	sp, sp, #0x150
    1244:	stp	x29, x19, [sp, #320]
    1248:	mov	x8, xzr
    124c:	add	x9, x1, #0x1
    1250:	mov	x10, sp
    1254:	add	x11, x9, x8
    1258:	ldur	w11, [x11, #-1]
    125c:	rev	w11, w11
    1260:	str	w11, [x10, x8]
    1264:	add	x8, x8, #0x4
    1268:	cmp	x8, #0x40
    126c:	b.ne	1254 <PyInit__sha1@@Base+0x360>  // b.any
    1270:	ldp	w8, w9, [x0, #8]
    1274:	ldp	w10, w11, [x0, #16]
    1278:	ldr	w12, [x0, #24]
    127c:	mov	x14, sp
    1280:	mov	x13, xzr
    1284:	add	x15, x14, #0x20
    1288:	add	x16, x15, x13
    128c:	ldr	w17, [x16, #20]
    1290:	ldr	w18, [x16]
    1294:	ldur	w1, [x16, #-24]
    1298:	ldr	w2, [x14, x13]
    129c:	add	x13, x13, #0x4
    12a0:	eor	w17, w18, w17
    12a4:	eor	w17, w17, w1
    12a8:	eor	w17, w17, w2
    12ac:	ror	w17, w17, #31
    12b0:	cmp	x13, #0x100
    12b4:	str	w17, [x16, #32]
    12b8:	b.ne	1288 <PyInit__sha1@@Base+0x394>  // b.any
    12bc:	mov	w17, #0x7999                	// #31129
    12c0:	mov	x13, sp
    12c4:	movk	w17, #0x5a82, lsl #16
    12c8:	add	x18, x13, #0x8
    12cc:	mov	x2, #0xfffffffffffffffb    	// #-5
    12d0:	mov	w15, w12
    12d4:	mov	w1, w11
    12d8:	mov	w16, w10
    12dc:	mov	w14, w9
    12e0:	mov	w13, w8
    12e4:	ror	w3, w13, #27
    12e8:	bic	w4, w1, w14
    12ec:	and	w5, w16, w14
    12f0:	bic	w7, w16, w13
    12f4:	orr	w4, w5, w4
    12f8:	and	w5, w13, w14, ror #2
    12fc:	add	w3, w3, w17
    1300:	orr	w5, w5, w7
    1304:	add	w15, w3, w15
    1308:	ldp	w3, w7, [x18, #-8]
    130c:	add	w1, w1, w17
    1310:	add	w1, w1, w5
    1314:	add	w15, w15, w4
    1318:	add	w1, w1, w7
    131c:	ldr	w7, [x18, #8]
    1320:	add	w3, w15, w3
    1324:	ldp	w15, w4, [x18]
    1328:	ror	w5, w13, #2
    132c:	ror	w6, w14, #2
    1330:	add	w5, w5, w17
    1334:	add	w16, w16, w17
    1338:	add	w6, w6, w17
    133c:	add	w5, w5, w7
    1340:	mvn	w7, w3
    1344:	add	w16, w16, w15
    1348:	add	w4, w6, w4
    134c:	ror	w15, w3, #27
    1350:	and	w6, w3, w13, ror #2
    1354:	and	w14, w7, w14, ror #2
    1358:	add	w19, w1, w15
    135c:	orr	w14, w6, w14
    1360:	add	w14, w16, w14
    1364:	mvn	w16, w19
    1368:	ror	w7, w19, #27
    136c:	and	w6, w19, w3, ror #2
    1370:	and	w13, w16, w13, ror #2
    1374:	add	w14, w14, w7
    1378:	orr	w13, w6, w13
    137c:	ror	w6, w14, #27
    1380:	add	w13, w4, w13
    1384:	mvn	w7, w14
    1388:	and	w4, w14, w19, ror #2
    138c:	ror	w16, w14, #2
    1390:	add	w14, w13, w6
    1394:	and	w13, w7, w3, ror #2
    1398:	orr	w13, w4, w13
    139c:	add	x2, x2, #0x5
    13a0:	ror	w15, w3, #2
    13a4:	ror	w3, w14, #27
    13a8:	add	w13, w5, w13
    13ac:	cmp	x2, #0xf
    13b0:	ror	w1, w19, #2
    13b4:	add	w13, w13, w3
    13b8:	add	x18, x18, #0x14
    13bc:	b.cc	12e4 <PyInit__sha1@@Base+0x3f0>  // b.lo, b.ul, b.last
    13c0:	mov	w17, #0xeba1                	// #60321
    13c4:	mov	x18, sp
    13c8:	movk	w17, #0x6ed9, lsl #16
    13cc:	add	x18, x18, #0x60
    13d0:	mov	w2, #0xf                   	// #15
    13d4:	ror	w3, w13, #27
    13d8:	eor	w4, w16, w14
    13dc:	eor	w6, w16, w13
    13e0:	eor	w4, w4, w1
    13e4:	add	w3, w3, w17
    13e8:	ror	w5, w14, #2
    13ec:	eor	w14, w6, w14, ror #2
    13f0:	add	w3, w3, w4
    13f4:	ldp	w4, w6, [x18, #-16]
    13f8:	add	w1, w1, w17
    13fc:	add	w15, w3, w15
    1400:	add	w14, w1, w14
    1404:	add	w3, w15, w4
    1408:	ldp	w15, w4, [x18, #-8]
    140c:	add	w14, w14, w6
    1410:	ldr	w6, [x18], #20
    1414:	ror	w1, w13, #2
    1418:	add	w16, w16, w17
    141c:	add	w16, w16, w15
    1420:	eor	w15, w5, w13, ror #2
    1424:	add	w5, w5, w17
    1428:	add	w1, w1, w17
    142c:	add	w4, w5, w4
    1430:	add	w5, w1, w6
    1434:	ror	w1, w3, #27
    1438:	eor	w6, w15, w3
    143c:	ror	w15, w3, #2
    1440:	add	w14, w14, w1
    1444:	add	w16, w16, w6
    1448:	eor	w13, w15, w13, ror #2
    144c:	ror	w6, w14, #27
    1450:	eor	w13, w13, w14
    1454:	ror	w1, w14, #2
    1458:	add	w14, w16, w6
    145c:	add	w13, w4, w13
    1460:	eor	w16, w1, w3, ror #2
    1464:	ror	w3, w14, #27
    1468:	eor	w4, w16, w14
    146c:	ror	w16, w14, #2
    1470:	add	w14, w13, w3
    1474:	add	x2, x2, #0x5
    1478:	add	w13, w5, w4
    147c:	ror	w3, w14, #27
    1480:	cmp	x2, #0x23
    1484:	add	w13, w13, w3
    1488:	b.cc	13d4 <PyInit__sha1@@Base+0x4e0>  // b.lo, b.ul, b.last
    148c:	mov	w2, #0xbcdc                	// #48348
    1490:	mov	x17, sp
    1494:	movk	w2, #0x8f1b, lsl #16
    1498:	add	x17, x17, #0xb0
    149c:	mov	w18, #0x23                  	// #35
    14a0:	orr	w5, w16, w14
    14a4:	and	w4, w16, w14
    14a8:	and	w5, w1, w5
    14ac:	ror	w3, w13, #27
    14b0:	orr	w4, w5, w4
    14b4:	orr	w5, w13, w14, ror #2
    14b8:	and	w7, w13, w14, ror #2
    14bc:	add	w3, w3, w2
    14c0:	and	w5, w5, w16
    14c4:	add	w15, w3, w15
    14c8:	orr	w3, w5, w7
    14cc:	ldp	w5, w7, [x17, #-16]
    14d0:	add	w1, w1, w2
    14d4:	add	w15, w15, w4
    14d8:	add	w1, w1, w3
    14dc:	add	w3, w15, w5
    14e0:	ldp	w15, w5, [x17, #-8]
    14e4:	add	w1, w1, w7
    14e8:	ldr	w7, [x17], #20
    14ec:	ror	w4, w13, #2
    14f0:	ror	w6, w14, #2
    14f4:	add	w4, w4, w2
    14f8:	add	w16, w16, w2
    14fc:	add	w6, w6, w2
    1500:	add	w4, w4, w7
    1504:	orr	w7, w3, w13, ror #2
    1508:	add	w16, w16, w15
    150c:	add	w5, w6, w5
    1510:	ror	w15, w3, #27
    1514:	and	w6, w3, w13, ror #2
    1518:	and	w14, w7, w14, ror #2
    151c:	add	w19, w1, w15
    1520:	orr	w14, w14, w6
    1524:	add	w14, w16, w14
    1528:	orr	w16, w19, w3, ror #2
    152c:	ror	w7, w19, #27
    1530:	and	w6, w19, w3, ror #2
    1534:	and	w13, w16, w13, ror #2
    1538:	add	w14, w14, w7
    153c:	orr	w13, w13, w6
    1540:	ror	w6, w14, #27
    1544:	add	w13, w5, w13
    1548:	orr	w7, w14, w19, ror #2
    154c:	and	w5, w14, w19, ror #2
    1550:	ror	w16, w14, #2
    1554:	add	w14, w13, w6
    1558:	and	w13, w7, w3, ror #2
    155c:	orr	w13, w13, w5
    1560:	add	x18, x18, #0x5
    1564:	ror	w15, w3, #2
    1568:	ror	w3, w14, #27
    156c:	add	w13, w4, w13
    1570:	cmp	x18, #0x37
    1574:	ror	w1, w19, #2
    1578:	add	w13, w13, w3
    157c:	b.cc	14a0 <PyInit__sha1@@Base+0x5ac>  // b.lo, b.ul, b.last
    1580:	add	w2, w18, #0x5
    1584:	cmp	w2, #0x4f
    1588:	b.hi	164c <PyInit__sha1@@Base+0x758>  // b.pmore
    158c:	mov	w2, #0xc1d6                	// #49622
    1590:	movk	w2, #0xca62, lsl #16
    1594:	ror	w3, w13, #27
    1598:	eor	w4, w16, w14
    159c:	eor	w6, w16, w13
    15a0:	eor	w4, w4, w1
    15a4:	add	w3, w3, w2
    15a8:	ror	w5, w14, #2
    15ac:	eor	w14, w6, w14, ror #2
    15b0:	add	w3, w3, w4
    15b4:	ldp	w4, w6, [x17, #-16]
    15b8:	add	w1, w1, w2
    15bc:	add	w15, w3, w15
    15c0:	add	w14, w1, w14
    15c4:	add	w3, w15, w4
    15c8:	ldp	w15, w4, [x17, #-8]
    15cc:	add	w14, w14, w6
    15d0:	ldr	w6, [x17], #20
    15d4:	ror	w1, w13, #2
    15d8:	add	w16, w16, w2
    15dc:	add	w16, w16, w15
    15e0:	eor	w15, w5, w13, ror #2
    15e4:	add	w5, w5, w2
    15e8:	add	w1, w1, w2
    15ec:	add	w4, w5, w4
    15f0:	add	w5, w1, w6
    15f4:	ror	w1, w3, #27
    15f8:	eor	w6, w15, w3
    15fc:	ror	w15, w3, #2
    1600:	add	w14, w14, w1
    1604:	add	w16, w16, w6
    1608:	eor	w13, w15, w13, ror #2
    160c:	ror	w6, w14, #27
    1610:	eor	w13, w13, w14
    1614:	ror	w1, w14, #2
    1618:	add	w14, w16, w6
    161c:	add	w13, w4, w13
    1620:	eor	w16, w1, w3, ror #2
    1624:	ror	w3, w14, #27
    1628:	eor	w4, w16, w14
    162c:	ror	w16, w14, #2
    1630:	add	w14, w13, w3
    1634:	add	x18, x18, #0x5
    1638:	add	w13, w5, w4
    163c:	ror	w3, w14, #27
    1640:	cmp	x18, #0x4b
    1644:	add	w13, w13, w3
    1648:	b.cc	1594 <PyInit__sha1@@Base+0x6a0>  // b.lo, b.ul, b.last
    164c:	add	w8, w13, w8
    1650:	add	w9, w14, w9
    1654:	add	w10, w16, w10
    1658:	add	w11, w1, w11
    165c:	add	w12, w15, w12
    1660:	stp	w8, w9, [x0, #8]
    1664:	stp	w10, w11, [x0, #16]
    1668:	str	w12, [x0, #24]
    166c:	ldp	x29, x19, [sp, #320]
    1670:	add	sp, sp, #0x150
    1674:	ret
    1678:	stp	x29, x30, [sp, #-80]!
    167c:	str	x25, [sp, #16]
    1680:	stp	x24, x23, [sp, #32]
    1684:	stp	x22, x21, [sp, #48]
    1688:	stp	x20, x19, [sp, #64]
    168c:	mov	x29, sp
    1690:	cmp	x2, #0x1
    1694:	b.lt	1734 <PyInit__sha1@@Base+0x840>  // b.tstop
    1698:	mov	x22, x2
    169c:	mov	x19, x1
    16a0:	mov	x20, x0
    16a4:	add	x21, x0, #0x20
    16a8:	mov	w24, #0x40                  	// #64
    16ac:	ldr	w25, [x20, #28]
    16b0:	subs	x23, x22, #0x40
    16b4:	b.lt	16d8 <PyInit__sha1@@Base+0x7e4>  // b.tstop
    16b8:	cbnz	w25, 16d8 <PyInit__sha1@@Base+0x7e4>
    16bc:	mov	x0, x20
    16c0:	mov	x1, x19
    16c4:	bl	1240 <PyInit__sha1@@Base+0x34c>
    16c8:	ldr	x8, [x20]
    16cc:	add	x19, x19, #0x40
    16d0:	mov	x22, x23
    16d4:	b	1724 <PyInit__sha1@@Base+0x830>
    16d8:	sub	w8, w24, w25
    16dc:	cmp	x22, x8
    16e0:	add	x9, x20, x25
    16e4:	csel	x23, x8, x22, gt
    16e8:	add	x0, x9, #0x20
    16ec:	mov	x1, x19
    16f0:	mov	x2, x23
    16f4:	bl	d00 <memcpy@plt>
    16f8:	add	w8, w25, w23
    16fc:	add	x19, x19, x23
    1700:	cmp	w8, #0x40
    1704:	sub	x22, x22, x23
    1708:	str	w8, [x20, #28]
    170c:	b.ne	172c <PyInit__sha1@@Base+0x838>  // b.any
    1710:	mov	x0, x20
    1714:	mov	x1, x21
    1718:	bl	1240 <PyInit__sha1@@Base+0x34c>
    171c:	ldr	x8, [x20]
    1720:	str	wzr, [x20, #28]
    1724:	add	x8, x8, #0x200
    1728:	str	x8, [x20]
    172c:	cmp	x22, #0x0
    1730:	b.gt	16ac <PyInit__sha1@@Base+0x7b8>
    1734:	ldp	x20, x19, [sp, #64]
    1738:	ldp	x22, x21, [sp, #48]
    173c:	ldp	x24, x23, [sp, #32]
    1740:	ldr	x25, [sp, #16]
    1744:	ldp	x29, x30, [sp], #80
    1748:	ret
    174c:	mov	w0, #0x40                  	// #64
    1750:	b	d90 <PyLong_FromLong@plt>
    1754:	adrp	x0, 1000 <PyInit__sha1@@Base+0x10c>
    1758:	add	x0, x0, #0x947
    175c:	mov	w1, #0x4                   	// #4
    1760:	b	e00 <PyUnicode_FromStringAndSize@plt>
    1764:	mov	w0, #0x14                  	// #20
    1768:	b	d90 <PyLong_FromLong@plt>
    176c:	sub	sp, sp, #0x90
    1770:	stp	x29, x30, [sp, #96]
    1774:	str	x21, [sp, #112]
    1778:	stp	x20, x19, [sp, #128]
    177c:	add	x29, sp, #0x60
    1780:	mov	x19, x2
    1784:	mov	x0, x1
    1788:	cbz	x3, 17c0 <PyInit__sha1@@Base+0x8cc>
    178c:	ldr	x20, [x3, #16]
    1790:	adrp	x4, 12000 <PyInit__sha1@@Base+0x1110c>
    1794:	add	x8, x29, #0x18
    1798:	add	x4, x4, #0x420
    179c:	mov	w6, #0x1                   	// #1
    17a0:	mov	x1, x19
    17a4:	mov	x2, xzr
    17a8:	mov	w5, wzr
    17ac:	mov	w7, wzr
    17b0:	str	x8, [sp]
    17b4:	bl	d50 <_PyArg_UnpackKeywords@plt>
    17b8:	cbnz	x0, 17d0 <PyInit__sha1@@Base+0x8dc>
    17bc:	b	18ec <PyInit__sha1@@Base+0x9f8>
    17c0:	mov	x20, xzr
    17c4:	cbz	x0, 1790 <PyInit__sha1@@Base+0x89c>
    17c8:	cmp	x19, #0x2
    17cc:	b.cs	1790 <PyInit__sha1@@Base+0x89c>  // b.hs, b.nlast
    17d0:	cmn	x20, x19
    17d4:	b.eq	1838 <PyInit__sha1@@Base+0x944>  // b.none
    17d8:	ldr	x0, [x0]
    17dc:	cbz	x0, 1838 <PyInit__sha1@@Base+0x944>
    17e0:	ldr	x8, [x0, #8]
    17e4:	ldrb	w9, [x8, #171]
    17e8:	tbnz	w9, #4, 18c0 <PyInit__sha1@@Base+0x9cc>
    17ec:	ldr	x8, [x8, #160]
    17f0:	cbz	x8, 18d4 <PyInit__sha1@@Base+0x9e0>
    17f4:	ldr	x8, [x8]
    17f8:	cbz	x8, 18d4 <PyInit__sha1@@Base+0x9e0>
    17fc:	add	x1, sp, #0x10
    1800:	mov	w2, wzr
    1804:	bl	dd0 <PyObject_GetBuffer@plt>
    1808:	cmn	w0, #0x1
    180c:	b.eq	18ec <PyInit__sha1@@Base+0x9f8>  // b.none
    1810:	ldr	w8, [sp, #52]
    1814:	cmp	w8, #0x2
    1818:	b.lt	1908 <PyInit__sha1@@Base+0xa14>  // b.tstop
    181c:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    1820:	ldr	x8, [x8, #4024]
    1824:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    1828:	add	x1, x1, #0x9bb
    182c:	ldr	x0, [x8]
    1830:	bl	d60 <PyErr_SetString@plt>
    1834:	b	1894 <PyInit__sha1@@Base+0x9a0>
    1838:	mov	w21, wzr
    183c:	adrp	x0, 12000 <PyInit__sha1@@Base+0x1110c>
    1840:	add	x0, x0, #0x98
    1844:	bl	de0 <_PyObject_New@plt>
    1848:	cbz	x0, 1890 <PyInit__sha1@@Base+0x99c>
    184c:	adrp	x8, 1000 <PyInit__sha1@@Base+0x10c>
    1850:	adrp	x9, 1000 <PyInit__sha1@@Base+0x10c>
    1854:	ldr	q0, [x8, #2336]
    1858:	ldr	d1, [x9, #2352]
    185c:	mov	x20, x0
    1860:	str	xzr, [x20, #16]!
    1864:	mov	x19, x0
    1868:	stur	q0, [x20, #8]
    186c:	str	d1, [x20, #24]
    1870:	bl	db0 <PyErr_Occurred@plt>
    1874:	cbz	x0, 18a0 <PyInit__sha1@@Base+0x9ac>
    1878:	ldr	x8, [x19]
    187c:	subs	x8, x8, #0x1
    1880:	str	x8, [x19]
    1884:	b.ne	1890 <PyInit__sha1@@Base+0x99c>  // b.any
    1888:	mov	x0, x19
    188c:	bl	d40 <_Py_Dealloc@plt>
    1890:	cbz	w21, 18ec <PyInit__sha1@@Base+0x9f8>
    1894:	add	x0, sp, #0x10
    1898:	bl	d10 <PyBuffer_Release@plt>
    189c:	b	18ec <PyInit__sha1@@Base+0x9f8>
    18a0:	cbz	w21, 18f0 <PyInit__sha1@@Base+0x9fc>
    18a4:	ldr	x1, [sp, #16]
    18a8:	ldr	x2, [sp, #32]
    18ac:	mov	x0, x20
    18b0:	bl	1678 <PyInit__sha1@@Base+0x784>
    18b4:	add	x0, sp, #0x10
    18b8:	bl	d10 <PyBuffer_Release@plt>
    18bc:	b	18f0 <PyInit__sha1@@Base+0x9fc>
    18c0:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    18c4:	ldr	x8, [x8, #4032]
    18c8:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    18cc:	add	x1, x1, #0x962
    18d0:	b	18e4 <PyInit__sha1@@Base+0x9f0>
    18d4:	adrp	x8, 11000 <PyInit__sha1@@Base+0x1010c>
    18d8:	ldr	x8, [x8, #4032]
    18dc:	adrp	x1, 1000 <PyInit__sha1@@Base+0x10c>
    18e0:	add	x1, x1, #0x991
    18e4:	ldr	x0, [x8]
    18e8:	bl	d60 <PyErr_SetString@plt>
    18ec:	mov	x19, xzr
    18f0:	mov	x0, x19
    18f4:	ldp	x20, x19, [sp, #128]
    18f8:	ldr	x21, [sp, #112]
    18fc:	ldp	x29, x30, [sp, #96]
    1900:	add	sp, sp, #0x90
    1904:	ret
    1908:	mov	w21, #0x1                   	// #1
    190c:	b	183c <PyInit__sha1@@Base+0x948>

Disassembly of section .fini:

0000000000001910 <.fini>:
    1910:	stp	x29, x30, [sp, #-16]!
    1914:	mov	x29, sp
    1918:	ldp	x29, x30, [sp], #16
    191c:	ret
