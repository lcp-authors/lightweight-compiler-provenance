
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_multibytecodec.cpython-38-aarch64-linux-gnu.so_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002930 <.init>:
    2930:	stp	x29, x30, [sp, #-16]!
    2934:	mov	x29, sp
    2938:	bl	2e20 <PyUnicode_Substring@plt+0x10>
    293c:	ldp	x29, x30, [sp], #16
    2940:	ret

Disassembly of section .plt:

0000000000002950 <memcpy@plt-0x20>:
    2950:	stp	x16, x30, [sp, #-16]!
    2954:	adrp	x16, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2958:	ldr	x17, [x16, #4088]
    295c:	add	x16, x16, #0xff8
    2960:	br	x17
    2964:	nop
    2968:	nop
    296c:	nop

0000000000002970 <memcpy@plt>:
    2970:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2974:	ldr	x17, [x16]
    2978:	add	x16, x16, #0x0
    297c:	br	x17

0000000000002980 <_PyUnicode_Ready@plt>:
    2980:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2984:	ldr	x17, [x16, #8]
    2988:	add	x16, x16, #0x8
    298c:	br	x17

0000000000002990 <PySequence_Check@plt>:
    2990:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2994:	ldr	x17, [x16, #16]
    2998:	add	x16, x16, #0x10
    299c:	br	x17

00000000000029a0 <strlen@plt>:
    29a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29a4:	ldr	x17, [x16, #24]
    29a8:	add	x16, x16, #0x18
    29ac:	br	x17

00000000000029b0 <PyUnicodeDecodeError_SetStart@plt>:
    29b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29b4:	ldr	x17, [x16, #32]
    29b8:	add	x16, x16, #0x20
    29bc:	br	x17

00000000000029c0 <_PyBytes_Resize@plt>:
    29c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29c4:	ldr	x17, [x16, #40]
    29c8:	add	x16, x16, #0x28
    29cc:	br	x17

00000000000029d0 <PyMem_Free@plt>:
    29d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29d4:	ldr	x17, [x16, #48]
    29d8:	add	x16, x16, #0x30
    29dc:	br	x17

00000000000029e0 <PyBuffer_Release@plt>:
    29e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29e4:	ldr	x17, [x16, #56]
    29e8:	add	x16, x16, #0x38
    29ec:	br	x17

00000000000029f0 <PyUnicodeEncodeError_SetReason@plt>:
    29f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    29f4:	ldr	x17, [x16, #64]
    29f8:	add	x16, x16, #0x40
    29fc:	br	x17

0000000000002a00 <PyObject_GetAttrString@plt>:
    2a00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a04:	ldr	x17, [x16, #72]
    2a08:	add	x16, x16, #0x48
    2a0c:	br	x17

0000000000002a10 <__cxa_finalize@plt>:
    2a10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a14:	ldr	x17, [x16, #80]
    2a18:	add	x16, x16, #0x50
    2a1c:	br	x17

0000000000002a20 <PyBuffer_IsContiguous@plt>:
    2a20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a24:	ldr	x17, [x16, #88]
    2a28:	add	x16, x16, #0x58
    2a2c:	br	x17

0000000000002a30 <PyBytes_FromStringAndSize@plt>:
    2a30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a34:	ldr	x17, [x16, #96]
    2a38:	add	x16, x16, #0x60
    2a3c:	br	x17

0000000000002a40 <PyUnicodeEncodeError_SetStart@plt>:
    2a40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a44:	ldr	x17, [x16, #104]
    2a48:	add	x16, x16, #0x68
    2a4c:	br	x17

0000000000002a50 <_Py_Dealloc@plt>:
    2a50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x17, [x16, #112]
    2a58:	add	x16, x16, #0x70
    2a5c:	br	x17

0000000000002a60 <PyUnicodeDecodeError_SetReason@plt>:
    2a60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x17, [x16, #120]
    2a68:	add	x16, x16, #0x78
    2a6c:	br	x17

0000000000002a70 <PyErr_NoMemory@plt>:
    2a70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a74:	ldr	x17, [x16, #128]
    2a78:	add	x16, x16, #0x80
    2a7c:	br	x17

0000000000002a80 <_PyObject_CallFunction_SizeT@plt>:
    2a80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x17, [x16, #136]
    2a88:	add	x16, x16, #0x88
    2a8c:	br	x17

0000000000002a90 <PyUnicodeEncodeError_SetEnd@plt>:
    2a90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2a94:	ldr	x17, [x16, #144]
    2a98:	add	x16, x16, #0x90
    2a9c:	br	x17

0000000000002aa0 <PyObject_Str@plt>:
    2aa0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2aa4:	ldr	x17, [x16, #152]
    2aa8:	add	x16, x16, #0x98
    2aac:	br	x17

0000000000002ab0 <PyUnicode_Append@plt>:
    2ab0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ab4:	ldr	x17, [x16, #160]
    2ab8:	add	x16, x16, #0xa0
    2abc:	br	x17

0000000000002ac0 <_PyUnicodeWriter_Dealloc@plt>:
    2ac0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x17, [x16, #168]
    2ac8:	add	x16, x16, #0xa8
    2acc:	br	x17

0000000000002ad0 <_PyArg_UnpackKeywords@plt>:
    2ad0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16, #176]
    2ad8:	add	x16, x16, #0xb0
    2adc:	br	x17

0000000000002ae0 <PyErr_SetString@plt>:
    2ae0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #184]
    2ae8:	add	x16, x16, #0xb8
    2aec:	br	x17

0000000000002af0 <_PyLong_FromByteArray@plt>:
    2af0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #192]
    2af8:	add	x16, x16, #0xc0
    2afc:	br	x17

0000000000002b00 <PySequence_GetItem@plt>:
    2b00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #200]
    2b08:	add	x16, x16, #0xc8
    2b0c:	br	x17

0000000000002b10 <_PyUnicodeWriter_Init@plt>:
    2b10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #208]
    2b18:	add	x16, x16, #0xd0
    2b1c:	br	x17

0000000000002b20 <PyObject_Free@plt>:
    2b20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #216]
    2b28:	add	x16, x16, #0xd8
    2b2c:	br	x17

0000000000002b30 <PyLong_FromSsize_t@plt>:
    2b30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #224]
    2b38:	add	x16, x16, #0xe0
    2b3c:	br	x17

0000000000002b40 <PyType_Ready@plt>:
    2b40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #232]
    2b48:	add	x16, x16, #0xe8
    2b4c:	br	x17

0000000000002b50 <PyLong_AsSsize_t@plt>:
    2b50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #240]
    2b58:	add	x16, x16, #0xf0
    2b5c:	br	x17

0000000000002b60 <PyBytes_Size@plt>:
    2b60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #248]
    2b68:	add	x16, x16, #0xf8
    2b6c:	br	x17

0000000000002b70 <_PyArg_BadArgument@plt>:
    2b70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #256]
    2b78:	add	x16, x16, #0x100
    2b7c:	br	x17

0000000000002b80 <PySequence_Size@plt>:
    2b80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #264]
    2b88:	add	x16, x16, #0x108
    2b8c:	br	x17

0000000000002b90 <PyErr_Clear@plt>:
    2b90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #272]
    2b98:	add	x16, x16, #0x110
    2b9c:	br	x17

0000000000002ba0 <PyCapsule_IsValid@plt>:
    2ba0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #280]
    2ba8:	add	x16, x16, #0x118
    2bac:	br	x17

0000000000002bb0 <__gmon_start__@plt>:
    2bb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #288]
    2bb8:	add	x16, x16, #0x120
    2bbc:	br	x17

0000000000002bc0 <PyCodec_StrictErrors@plt>:
    2bc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #296]
    2bc8:	add	x16, x16, #0x128
    2bcc:	br	x17

0000000000002bd0 <PyTuple_New@plt>:
    2bd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #304]
    2bd8:	add	x16, x16, #0x130
    2bdc:	br	x17

0000000000002be0 <_PyArg_CheckPositional@plt>:
    2be0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #312]
    2be8:	add	x16, x16, #0x138
    2bec:	br	x17

0000000000002bf0 <PyErr_Occurred@plt>:
    2bf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #320]
    2bf8:	add	x16, x16, #0x140
    2bfc:	br	x17

0000000000002c00 <PyModule_Create2@plt>:
    2c00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #328]
    2c08:	add	x16, x16, #0x148
    2c0c:	br	x17

0000000000002c10 <PyUnicodeDecodeError_SetEnd@plt>:
    2c10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #336]
    2c18:	add	x16, x16, #0x150
    2c1c:	br	x17

0000000000002c20 <PyObject_CallObject@plt>:
    2c20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #344]
    2c28:	add	x16, x16, #0x158
    2c2c:	br	x17

0000000000002c30 <strcmp@plt>:
    2c30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #352]
    2c38:	add	x16, x16, #0x160
    2c3c:	br	x17

0000000000002c40 <_PyObject_CallMethod_SizeT@plt>:
    2c40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #360]
    2c48:	add	x16, x16, #0x168
    2c4c:	br	x17

0000000000002c50 <_PyArg_ParseTuple_SizeT@plt>:
    2c50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #368]
    2c58:	add	x16, x16, #0x170
    2c5c:	br	x17

0000000000002c60 <PyUnicode_DecodeUTF8@plt>:
    2c60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #376]
    2c68:	add	x16, x16, #0x178
    2c6c:	br	x17

0000000000002c70 <Py_FatalError@plt>:
    2c70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #384]
    2c78:	add	x16, x16, #0x180
    2c7c:	br	x17

0000000000002c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2c80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #392]
    2c88:	add	x16, x16, #0x188
    2c8c:	br	x17

0000000000002c90 <_PyUnicodeWriter_WriteStr@plt>:
    2c90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #400]
    2c98:	add	x16, x16, #0x190
    2c9c:	br	x17

0000000000002ca0 <_PyUnicodeWriter_WriteChar@plt>:
    2ca0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #408]
    2ca8:	add	x16, x16, #0x198
    2cac:	br	x17

0000000000002cb0 <PyObject_GetBuffer@plt>:
    2cb0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #416]
    2cb8:	add	x16, x16, #0x1a0
    2cbc:	br	x17

0000000000002cc0 <PyUnicode_AsUTF8@plt>:
    2cc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #424]
    2cc8:	add	x16, x16, #0x1a8
    2ccc:	br	x17

0000000000002cd0 <_PyObject_New@plt>:
    2cd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #432]
    2cd8:	add	x16, x16, #0x1b0
    2cdc:	br	x17

0000000000002ce0 <PyUnicode_FromString@plt>:
    2ce0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #440]
    2ce8:	add	x16, x16, #0x1b8
    2cec:	br	x17

0000000000002cf0 <_PyObject_CallMethodIdObjArgs@plt>:
    2cf0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #448]
    2cf8:	add	x16, x16, #0x1c0
    2cfc:	br	x17

0000000000002d00 <PyModule_AddObject@plt>:
    2d00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #456]
    2d08:	add	x16, x16, #0x1c8
    2d0c:	br	x17

0000000000002d10 <PyBytes_AsString@plt>:
    2d10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #464]
    2d18:	add	x16, x16, #0x1d0
    2d1c:	br	x17

0000000000002d20 <PyType_IsSubtype@plt>:
    2d20:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #472]
    2d28:	add	x16, x16, #0x1d8
    2d2c:	br	x17

0000000000002d30 <_PyLong_AsByteArray@plt>:
    2d30:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #480]
    2d38:	add	x16, x16, #0x1e0
    2d3c:	br	x17

0000000000002d40 <PyUnicode_AsUTF8AndSize@plt>:
    2d40:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #488]
    2d48:	add	x16, x16, #0x1e8
    2d4c:	br	x17

0000000000002d50 <PyErr_Format@plt>:
    2d50:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #496]
    2d58:	add	x16, x16, #0x1f0
    2d5c:	br	x17

0000000000002d60 <PyCapsule_GetPointer@plt>:
    2d60:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #504]
    2d68:	add	x16, x16, #0x1f8
    2d6c:	br	x17

0000000000002d70 <_Py_BuildValue_SizeT@plt>:
    2d70:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #512]
    2d78:	add	x16, x16, #0x200
    2d7c:	br	x17

0000000000002d80 <PyUnicode_FromOrdinal@plt>:
    2d80:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #520]
    2d88:	add	x16, x16, #0x208
    2d8c:	br	x17

0000000000002d90 <PyUnicodeDecodeError_Create@plt>:
    2d90:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #528]
    2d98:	add	x16, x16, #0x210
    2d9c:	br	x17

0000000000002da0 <_PyLong_AsInt@plt>:
    2da0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #536]
    2da8:	add	x16, x16, #0x218
    2dac:	br	x17

0000000000002db0 <_PyUnicodeWriter_Finish@plt>:
    2db0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #544]
    2db8:	add	x16, x16, #0x220
    2dbc:	br	x17

0000000000002dc0 <PyUnicode_Splitlines@plt>:
    2dc0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2dc4:	ldr	x17, [x16, #552]
    2dc8:	add	x16, x16, #0x228
    2dcc:	br	x17

0000000000002dd0 <PyMem_Malloc@plt>:
    2dd0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2dd4:	ldr	x17, [x16, #560]
    2dd8:	add	x16, x16, #0x230
    2ddc:	br	x17

0000000000002de0 <PyUnicode_New@plt>:
    2de0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16, #568]
    2de8:	add	x16, x16, #0x238
    2dec:	br	x17

0000000000002df0 <PyCodec_LookupError@plt>:
    2df0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #576]
    2df8:	add	x16, x16, #0x240
    2dfc:	br	x17

0000000000002e00 <PyObject_GC_UnTrack@plt>:
    2e00:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2e04:	ldr	x17, [x16, #584]
    2e08:	add	x16, x16, #0x248
    2e0c:	br	x17

0000000000002e10 <PyUnicode_Substring@plt>:
    2e10:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2e14:	ldr	x17, [x16, #592]
    2e18:	add	x16, x16, #0x250
    2e1c:	br	x17

Disassembly of section .text:

0000000000002e20 <PyInit__multibytecodec@@Base-0xd4>:
    2e20:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e24:	ldr	x0, [x0, #4008]
    2e28:	cbz	x0, 2e30 <PyUnicode_Substring@plt+0x20>
    2e2c:	b	2bb0 <__gmon_start__@plt>
    2e30:	ret
    2e34:	nop
    2e38:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e3c:	add	x0, x0, #0x18
    2e40:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e44:	add	x1, x1, #0x18
    2e48:	cmp	x1, x0
    2e4c:	b.eq	2e64 <PyUnicode_Substring@plt+0x54>  // b.none
    2e50:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e54:	ldr	x1, [x1, #3960]
    2e58:	cbz	x1, 2e64 <PyUnicode_Substring@plt+0x54>
    2e5c:	mov	x16, x1
    2e60:	br	x16
    2e64:	ret
    2e68:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e6c:	add	x0, x0, #0x18
    2e70:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e74:	add	x1, x1, #0x18
    2e78:	sub	x1, x1, x0
    2e7c:	lsr	x2, x1, #63
    2e80:	add	x1, x2, x1, asr #3
    2e84:	cmp	xzr, x1, asr #1
    2e88:	asr	x1, x1, #1
    2e8c:	b.eq	2ea4 <PyUnicode_Substring@plt+0x94>  // b.none
    2e90:	adrp	x2, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2e94:	ldr	x2, [x2, #4064]
    2e98:	cbz	x2, 2ea4 <PyUnicode_Substring@plt+0x94>
    2e9c:	mov	x16, x2
    2ea0:	br	x16
    2ea4:	ret
    2ea8:	stp	x29, x30, [sp, #-32]!
    2eac:	mov	x29, sp
    2eb0:	str	x19, [sp, #16]
    2eb4:	adrp	x19, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2eb8:	ldrb	w0, [x19, #24]
    2ebc:	cbnz	w0, 2ee4 <PyUnicode_Substring@plt+0xd4>
    2ec0:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2ec4:	ldr	x0, [x0, #3976]
    2ec8:	cbz	x0, 2ed8 <PyUnicode_Substring@plt+0xc8>
    2ecc:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2ed0:	ldr	x0, [x0, #600]
    2ed4:	bl	2a10 <__cxa_finalize@plt>
    2ed8:	bl	2e38 <PyUnicode_Substring@plt+0x28>
    2edc:	mov	w0, #0x1                   	// #1
    2ee0:	strb	w0, [x19, #24]
    2ee4:	ldr	x19, [sp, #16]
    2ee8:	ldp	x29, x30, [sp], #32
    2eec:	ret
    2ef0:	b	2e68 <PyUnicode_Substring@plt+0x58>

0000000000002ef4 <PyInit__multibytecodec@@Base>:
    2ef4:	stp	x29, x30, [sp, #-48]!
    2ef8:	stp	x22, x21, [sp, #16]
    2efc:	stp	x20, x19, [sp, #32]
    2f00:	mov	x29, sp
    2f04:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2f08:	add	x0, x0, #0x8e0
    2f0c:	bl	2b40 <PyType_Ready@plt>
    2f10:	tbnz	w0, #31, 2f84 <PyInit__multibytecodec@@Base+0x90>
    2f14:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    2f18:	add	x0, x0, #0xa80
    2f1c:	mov	w1, #0x3f5                 	// #1013
    2f20:	bl	2c00 <PyModule_Create2@plt>
    2f24:	mov	x19, x0
    2f28:	cbz	x0, 2f88 <PyInit__multibytecodec@@Base+0x94>
    2f2c:	adrp	x22, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    2f30:	mov	x21, xzr
    2f34:	add	x22, x22, #0xcf0
    2f38:	ldr	x20, [x22, x21]
    2f3c:	mov	x0, x20
    2f40:	bl	2b40 <PyType_Ready@plt>
    2f44:	tbnz	w0, #31, 2f84 <PyInit__multibytecodec@@Base+0x90>
    2f48:	ldr	x8, [x20]
    2f4c:	ldr	x1, [x20, #24]
    2f50:	mov	x0, x19
    2f54:	mov	x2, x20
    2f58:	add	x8, x8, #0x1
    2f5c:	str	x8, [x20]
    2f60:	bl	2d00 <PyModule_AddObject@plt>
    2f64:	add	x21, x21, #0x8
    2f68:	cmp	x21, #0x20
    2f6c:	b.ne	2f38 <PyInit__multibytecodec@@Base+0x44>  // b.any
    2f70:	bl	2bf0 <PyErr_Occurred@plt>
    2f74:	cbz	x0, 2f88 <PyInit__multibytecodec@@Base+0x94>
    2f78:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    2f7c:	add	x0, x0, #0x36d
    2f80:	bl	2c70 <Py_FatalError@plt>
    2f84:	mov	x19, xzr
    2f88:	mov	x0, x19
    2f8c:	ldp	x20, x19, [sp, #32]
    2f90:	ldp	x22, x21, [sp, #16]
    2f94:	ldp	x29, x30, [sp], #48
    2f98:	ret
    2f9c:	stp	x29, x30, [sp, #-32]!
    2fa0:	str	x19, [sp, #16]
    2fa4:	mov	x29, sp
    2fa8:	mov	x19, x0
    2fac:	bl	2e00 <PyObject_GC_UnTrack@plt>
    2fb0:	ldr	x0, [x19, #32]
    2fb4:	cbz	x0, 2fd8 <PyInit__multibytecodec@@Base+0xe4>
    2fb8:	cbz	x0, 2fc4 <PyInit__multibytecodec@@Base+0xd0>
    2fbc:	cmp	x0, #0x4
    2fc0:	b.cc	2fd8 <PyInit__multibytecodec@@Base+0xe4>  // b.lo, b.ul, b.last
    2fc4:	ldr	x8, [x0]
    2fc8:	subs	x8, x8, #0x1
    2fcc:	str	x8, [x0]
    2fd0:	b.ne	2fd8 <PyInit__multibytecodec@@Base+0xe4>  // b.any
    2fd4:	bl	2a50 <_Py_Dealloc@plt>
    2fd8:	ldr	x0, [x19, #40]
    2fdc:	cbz	x0, 2ff8 <PyInit__multibytecodec@@Base+0x104>
    2fe0:	str	xzr, [x19, #40]
    2fe4:	ldr	x8, [x0]
    2fe8:	subs	x8, x8, #0x1
    2fec:	str	x8, [x0]
    2ff0:	b.ne	2ff8 <PyInit__multibytecodec@@Base+0x104>  // b.any
    2ff4:	bl	2a50 <_Py_Dealloc@plt>
    2ff8:	ldr	x8, [x19, #8]
    2ffc:	mov	x0, x19
    3000:	ldr	x19, [sp, #16]
    3004:	ldr	x1, [x8, #320]
    3008:	ldp	x29, x30, [sp], #32
    300c:	br	x1
    3010:	stp	x29, x30, [sp, #-16]!
    3014:	mov	x29, sp
    3018:	ldr	x0, [x0, #32]
    301c:	cmp	x0, #0x0
    3020:	cset	w9, ne  // ne = any
    3024:	cmp	x0, #0x4
    3028:	cset	w10, cc  // cc = lo, ul, last
    302c:	cbz	x0, 3048 <PyInit__multibytecodec@@Base+0x154>
    3030:	and	w9, w10, w9
    3034:	tbnz	w9, #0, 3048 <PyInit__multibytecodec@@Base+0x154>
    3038:	mov	x8, x1
    303c:	mov	x1, x2
    3040:	blr	x8
    3044:	cbnz	w0, 304c <PyInit__multibytecodec@@Base+0x158>
    3048:	mov	w0, wzr
    304c:	ldp	x29, x30, [sp], #16
    3050:	ret
    3054:	mov	w0, wzr
    3058:	ret
    305c:	sub	sp, sp, #0x30
    3060:	stp	x29, x30, [sp, #16]
    3064:	stp	x20, x19, [sp, #32]
    3068:	add	x29, sp, #0x10
    306c:	mov	x8, x2
    3070:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3074:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    3078:	mov	x20, x0
    307c:	add	x2, x2, #0x584
    3080:	add	x3, x3, #0xc18
    3084:	add	x4, sp, #0x8
    3088:	mov	x0, x1
    308c:	mov	x1, x8
    3090:	str	xzr, [sp, #8]
    3094:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3098:	cbz	w0, 312c <PyInit__multibytecodec@@Base+0x238>
    309c:	ldr	x8, [x20, #304]
    30a0:	mov	x0, x20
    30a4:	mov	x1, xzr
    30a8:	blr	x8
    30ac:	mov	x19, x0
    30b0:	cbz	x0, 3130 <PyInit__multibytecodec@@Base+0x23c>
    30b4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    30b8:	add	x1, x1, #0x7df
    30bc:	mov	x0, x20
    30c0:	bl	2a00 <PyObject_GetAttrString@plt>
    30c4:	mov	x20, x0
    30c8:	cbz	x0, 30f8 <PyInit__multibytecodec@@Base+0x204>
    30cc:	ldr	x8, [x20, #8]
    30d0:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    30d4:	add	x9, x9, #0x8e0
    30d8:	cmp	x8, x9
    30dc:	b.eq	3144 <PyInit__multibytecodec@@Base+0x250>  // b.none
    30e0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    30e4:	ldr	x8, [x8, #4000]
    30e8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    30ec:	add	x1, x1, #0x59a
    30f0:	ldr	x0, [x8]
    30f4:	bl	2ae0 <PyErr_SetString@plt>
    30f8:	ldr	x8, [x19]
    30fc:	subs	x8, x8, #0x1
    3100:	str	x8, [x19]
    3104:	b.ne	3110 <PyInit__multibytecodec@@Base+0x21c>  // b.any
    3108:	mov	x0, x19
    310c:	bl	2a50 <_Py_Dealloc@plt>
    3110:	cbz	x20, 312c <PyInit__multibytecodec@@Base+0x238>
    3114:	ldr	x8, [x20]
    3118:	subs	x8, x8, #0x1
    311c:	str	x8, [x20]
    3120:	b.ne	312c <PyInit__multibytecodec@@Base+0x238>  // b.any
    3124:	mov	x0, x20
    3128:	bl	2a50 <_Py_Dealloc@plt>
    312c:	mov	x19, xzr
    3130:	mov	x0, x19
    3134:	ldp	x20, x19, [sp, #32]
    3138:	ldp	x29, x30, [sp, #16]
    313c:	add	sp, sp, #0x30
    3140:	ret
    3144:	ldr	x8, [x20, #16]
    3148:	str	xzr, [x19, #40]
    314c:	str	x8, [x19, #16]
    3150:	ldr	x0, [sp, #8]
    3154:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    3158:	str	x0, [x19, #32]
    315c:	cbz	x0, 30f8 <PyInit__multibytecodec@@Base+0x204>
    3160:	ldr	x9, [x19, #16]
    3164:	ldr	x8, [x9, #32]
    3168:	cbz	x8, 317c <PyInit__multibytecodec@@Base+0x288>
    316c:	ldr	x1, [x9, #8]
    3170:	add	x0, x19, #0x18
    3174:	blr	x8
    3178:	cbnz	w0, 30f8 <PyInit__multibytecodec@@Base+0x204>
    317c:	ldr	x8, [x20]
    3180:	subs	x8, x8, #0x1
    3184:	str	x8, [x20]
    3188:	b.ne	3130 <PyInit__multibytecodec@@Base+0x23c>  // b.any
    318c:	mov	x0, x20
    3190:	bl	2a50 <_Py_Dealloc@plt>
    3194:	b	3130 <PyInit__multibytecodec@@Base+0x23c>
    3198:	sub	sp, sp, #0x50
    319c:	stp	x29, x30, [sp, #32]
    31a0:	str	x21, [sp, #48]
    31a4:	stp	x20, x19, [sp, #64]
    31a8:	add	x29, sp, #0x20
    31ac:	mov	x20, x1
    31b0:	mov	x19, x0
    31b4:	cbz	x3, 31fc <PyInit__multibytecodec@@Base+0x308>
    31b8:	ldr	x8, [x3, #16]
    31bc:	add	x21, x8, x2
    31c0:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    31c4:	add	x8, sp, #0x10
    31c8:	add	x4, x4, #0xbd8
    31cc:	mov	w5, #0x1                   	// #1
    31d0:	mov	w6, #0x2                   	// #2
    31d4:	mov	x0, x20
    31d8:	mov	x1, x2
    31dc:	mov	x2, xzr
    31e0:	mov	w7, wzr
    31e4:	str	x8, [sp]
    31e8:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    31ec:	mov	x20, x0
    31f0:	mov	x2, x21
    31f4:	cbnz	x0, 3214 <PyInit__multibytecodec@@Base+0x320>
    31f8:	b	3278 <PyInit__multibytecodec@@Base+0x384>
    31fc:	mov	x21, x2
    3200:	cbz	x20, 31c0 <PyInit__multibytecodec@@Base+0x2cc>
    3204:	sub	x8, x2, #0x1
    3208:	cmp	x8, #0x2
    320c:	mov	x21, x2
    3210:	b.cs	31c0 <PyInit__multibytecodec@@Base+0x2cc>  // b.hs, b.nlast
    3214:	ldr	x21, [x20]
    3218:	cmp	x2, #0x1
    321c:	b.ne	3234 <PyInit__multibytecodec@@Base+0x340>  // b.any
    3220:	mov	w2, wzr
    3224:	mov	x0, x19
    3228:	mov	x1, x21
    322c:	bl	34f4 <PyInit__multibytecodec@@Base+0x600>
    3230:	b	3278 <PyInit__multibytecodec@@Base+0x384>
    3234:	ldr	x8, [x20, #8]
    3238:	ldr	x0, [x8, #8]
    323c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3240:	ldr	x8, [x8, #3968]
    3244:	cmp	x0, x8
    3248:	b.eq	325c <PyInit__multibytecodec@@Base+0x368>  // b.none
    324c:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3250:	ldr	x1, [x1, #3968]
    3254:	bl	2d20 <PyType_IsSubtype@plt>
    3258:	cbz	w0, 328c <PyInit__multibytecodec@@Base+0x398>
    325c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3260:	ldr	x8, [x8, #4000]
    3264:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3268:	add	x1, x1, #0x3e0
    326c:	ldr	x0, [x8]
    3270:	bl	2ae0 <PyErr_SetString@plt>
    3274:	mov	x0, xzr
    3278:	ldp	x20, x19, [sp, #64]
    327c:	ldr	x21, [sp, #48]
    3280:	ldp	x29, x30, [sp, #32]
    3284:	add	sp, sp, #0x50
    3288:	ret
    328c:	ldr	x0, [x20, #8]
    3290:	bl	2da0 <_PyLong_AsInt@plt>
    3294:	mov	w2, w0
    3298:	cmn	w0, #0x1
    329c:	b.ne	3224 <PyInit__multibytecodec@@Base+0x330>  // b.any
    32a0:	bl	2bf0 <PyErr_Occurred@plt>
    32a4:	cbnz	x0, 3274 <PyInit__multibytecodec@@Base+0x380>
    32a8:	mov	w2, #0xffffffff            	// #-1
    32ac:	b	3224 <PyInit__multibytecodec@@Base+0x330>
    32b0:	sub	sp, sp, #0x40
    32b4:	stp	x29, x30, [sp, #32]
    32b8:	stp	x20, x19, [sp, #48]
    32bc:	add	x29, sp, #0x20
    32c0:	mov	x19, x0
    32c4:	ldr	x0, [x0, #40]
    32c8:	cbz	x0, 3304 <PyInit__multibytecodec@@Base+0x410>
    32cc:	mov	x1, sp
    32d0:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    32d4:	cbz	x0, 334c <PyInit__multibytecodec@@Base+0x458>
    32d8:	ldr	x20, [sp]
    32dc:	cmp	x20, #0x9
    32e0:	b.lt	3310 <PyInit__multibytecodec@@Base+0x41c>  // b.tstop
    32e4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    32e8:	ldr	x8, [x8, #4048]
    32ec:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    32f0:	add	x1, x1, #0x50d
    32f4:	ldr	x0, [x8]
    32f8:	bl	2ae0 <PyErr_SetString@plt>
    32fc:	mov	x0, xzr
    3300:	b	334c <PyInit__multibytecodec@@Base+0x458>
    3304:	mov	w8, #0x1                   	// #1
    3308:	strb	wzr, [sp, #12]
    330c:	b	332c <PyInit__multibytecodec@@Base+0x438>
    3310:	add	x8, sp, #0xc
    3314:	mov	x1, x0
    3318:	orr	x0, x8, #0x1
    331c:	mov	x2, x20
    3320:	strb	w20, [sp, #12]
    3324:	bl	2970 <memcpy@plt>
    3328:	add	x8, x20, #0x1
    332c:	ldr	x9, [x19, #24]
    3330:	add	x10, sp, #0xc
    3334:	add	x1, x8, #0x8
    3338:	add	x0, sp, #0xc
    333c:	mov	w2, #0x1                   	// #1
    3340:	mov	w3, wzr
    3344:	str	x9, [x10, x8]
    3348:	bl	2af0 <_PyLong_FromByteArray@plt>
    334c:	ldp	x20, x19, [sp, #48]
    3350:	ldp	x29, x30, [sp, #32]
    3354:	add	sp, sp, #0x40
    3358:	ret
    335c:	sub	sp, sp, #0x50
    3360:	stp	x29, x30, [sp, #32]
    3364:	str	x21, [sp, #48]
    3368:	stp	x20, x19, [sp, #64]
    336c:	add	x29, sp, #0x20
    3370:	ldr	x9, [x1, #8]
    3374:	mov	x8, x1
    3378:	ldrb	w9, [x9, #171]
    337c:	tbnz	w9, #0, 33a4 <PyInit__multibytecodec@@Base+0x4b0>
    3380:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3384:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3388:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    338c:	add	x0, x0, #0x3c5
    3390:	add	x1, x1, #0x64e
    3394:	add	x2, x2, #0x526
    3398:	mov	x3, x8
    339c:	bl	2b70 <_PyArg_BadArgument@plt>
    33a0:	b	33e8 <PyInit__multibytecodec@@Base+0x4f4>
    33a4:	mov	x19, x0
    33a8:	add	x1, sp, #0xc
    33ac:	mov	w2, #0x11                  	// #17
    33b0:	mov	w3, #0x1                   	// #1
    33b4:	mov	x0, x8
    33b8:	mov	w4, wzr
    33bc:	bl	2d30 <_PyLong_AsByteArray@plt>
    33c0:	tbnz	w0, #31, 33e8 <PyInit__multibytecodec@@Base+0x4f4>
    33c4:	ldrb	w1, [sp, #12]
    33c8:	cmp	x1, #0x9
    33cc:	b.cc	3400 <PyInit__multibytecodec@@Base+0x50c>  // b.lo, b.ul, b.last
    33d0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    33d4:	ldr	x8, [x8, #4048]
    33d8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    33dc:	add	x1, x1, #0x50d
    33e0:	ldr	x0, [x8]
    33e4:	bl	2ae0 <PyErr_SetString@plt>
    33e8:	mov	x0, xzr
    33ec:	ldp	x20, x19, [sp, #64]
    33f0:	ldr	x21, [sp, #48]
    33f4:	ldp	x29, x30, [sp, #32]
    33f8:	add	sp, sp, #0x50
    33fc:	ret
    3400:	add	x8, sp, #0xc
    3404:	orr	x20, x8, #0x1
    3408:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    340c:	add	x2, x2, #0x52a
    3410:	mov	x0, x20
    3414:	bl	2c60 <PyUnicode_DecodeUTF8@plt>
    3418:	cbz	x0, 33ec <PyInit__multibytecodec@@Base+0x4f8>
    341c:	mov	x21, x0
    3420:	ldr	x0, [x19, #40]
    3424:	cbz	x0, 3440 <PyInit__multibytecodec@@Base+0x54c>
    3428:	str	xzr, [x19, #40]
    342c:	ldr	x8, [x0]
    3430:	subs	x8, x8, #0x1
    3434:	str	x8, [x0]
    3438:	b.ne	3440 <PyInit__multibytecodec@@Base+0x54c>  // b.any
    343c:	bl	2a50 <_Py_Dealloc@plt>
    3440:	str	x21, [x19, #40]
    3444:	ldrb	w8, [sp, #12]
    3448:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    344c:	ldr	x8, [x20, x8]
    3450:	str	x8, [x19, #24]
    3454:	ldr	x0, [x0, #4016]
    3458:	ldr	x8, [x0]
    345c:	add	x8, x8, #0x1
    3460:	str	x8, [x0]
    3464:	b	33ec <PyInit__multibytecodec@@Base+0x4f8>
    3468:	sub	sp, sp, #0x30
    346c:	stp	x29, x30, [sp, #16]
    3470:	str	x19, [sp, #32]
    3474:	add	x29, sp, #0x10
    3478:	ldr	x9, [x0, #16]
    347c:	mov	x19, x0
    3480:	ldr	x8, [x9, #40]
    3484:	cbz	x8, 34b0 <PyInit__multibytecodec@@Base+0x5bc>
    3488:	add	x10, x29, #0x1c
    348c:	str	x10, [sp, #8]
    3490:	ldr	x1, [x9, #8]
    3494:	add	x0, x19, #0x18
    3498:	add	x2, sp, #0x8
    349c:	mov	w3, #0x4                   	// #4
    34a0:	blr	x8
    34a4:	cbz	x0, 34b0 <PyInit__multibytecodec@@Base+0x5bc>
    34a8:	mov	x0, xzr
    34ac:	b	34e4 <PyInit__multibytecodec@@Base+0x5f0>
    34b0:	ldr	x0, [x19, #40]
    34b4:	cbz	x0, 34d0 <PyInit__multibytecodec@@Base+0x5dc>
    34b8:	str	xzr, [x19, #40]
    34bc:	ldr	x8, [x0]
    34c0:	subs	x8, x8, #0x1
    34c4:	str	x8, [x0]
    34c8:	b.ne	34d0 <PyInit__multibytecodec@@Base+0x5dc>  // b.any
    34cc:	bl	2a50 <_Py_Dealloc@plt>
    34d0:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    34d4:	ldr	x0, [x0, #4016]
    34d8:	ldr	x8, [x0]
    34dc:	add	x8, x8, #0x1
    34e0:	str	x8, [x0]
    34e4:	ldr	x19, [sp, #32]
    34e8:	ldp	x29, x30, [sp, #16]
    34ec:	add	sp, sp, #0x30
    34f0:	ret
    34f4:	sub	sp, sp, #0x50
    34f8:	stp	x29, x30, [sp, #16]
    34fc:	stp	x24, x23, [sp, #32]
    3500:	stp	x22, x21, [sp, #48]
    3504:	stp	x20, x19, [sp, #64]
    3508:	add	x29, sp, #0x10
    350c:	ldr	x8, [x1, #8]
    3510:	mov	w23, w2
    3514:	mov	x20, x1
    3518:	mov	x22, x0
    351c:	ldrb	w8, [x8, #171]
    3520:	tbnz	w8, #4, 3570 <PyInit__multibytecodec@@Base+0x67c>
    3524:	mov	x0, x20
    3528:	bl	2aa0 <PyObject_Str@plt>
    352c:	cbz	x0, 3750 <PyInit__multibytecodec@@Base+0x85c>
    3530:	ldr	x8, [x0, #8]
    3534:	mov	x19, x0
    3538:	ldrb	w8, [x8, #171]
    353c:	tbnz	w8, #4, 3578 <PyInit__multibytecodec@@Base+0x684>
    3540:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3544:	ldr	x8, [x8, #4000]
    3548:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    354c:	add	x1, x1, #0x405
    3550:	ldr	x0, [x8]
    3554:	bl	2ae0 <PyErr_SetString@plt>
    3558:	ldr	x8, [x19]
    355c:	subs	x8, x8, #0x1
    3560:	str	x8, [x19]
    3564:	b.ne	3750 <PyInit__multibytecodec@@Base+0x85c>  // b.any
    3568:	mov	x0, x19
    356c:	b	374c <PyInit__multibytecodec@@Base+0x858>
    3570:	mov	x19, xzr
    3574:	b	357c <PyInit__multibytecodec@@Base+0x688>
    3578:	mov	x20, x19
    357c:	ldr	x21, [x22, #40]
    3580:	cbz	x21, 35d0 <PyInit__multibytecodec@@Base+0x6dc>
    3584:	ldr	x8, [x21]
    3588:	add	x0, sp, #0x8
    358c:	mov	x1, x20
    3590:	add	x8, x8, #0x2
    3594:	str	x8, [x21]
    3598:	str	x21, [sp, #8]
    359c:	bl	2ab0 <PyUnicode_Append@plt>
    35a0:	ldr	x20, [sp, #8]
    35a4:	cbz	x20, 36fc <PyInit__multibytecodec@@Base+0x808>
    35a8:	ldr	x0, [x22, #40]
    35ac:	cbz	x0, 35dc <PyInit__multibytecodec@@Base+0x6e8>
    35b0:	str	xzr, [x22, #40]
    35b4:	ldr	x8, [x0]
    35b8:	subs	x8, x8, #0x1
    35bc:	str	x8, [x0]
    35c0:	b.ne	35dc <PyInit__multibytecodec@@Base+0x6e8>  // b.any
    35c4:	bl	2a50 <_Py_Dealloc@plt>
    35c8:	ldr	x20, [sp, #8]
    35cc:	b	35dc <PyInit__multibytecodec@@Base+0x6e8>
    35d0:	ldr	x8, [x20]
    35d4:	add	x8, x8, #0x1
    35d8:	str	x8, [x20]
    35dc:	ldrb	w8, [x20, #32]
    35e0:	tbnz	w8, #7, 35f0 <PyInit__multibytecodec@@Base+0x6fc>
    35e4:	mov	x0, x20
    35e8:	bl	2980 <_PyUnicode_Ready@plt>
    35ec:	tbnz	w0, #31, 36fc <PyInit__multibytecodec@@Base+0x808>
    35f0:	str	xzr, [sp, #8]
    35f4:	ldr	x0, [x22, #16]
    35f8:	ldr	x4, [x22, #32]
    35fc:	ldr	x24, [x20, #16]
    3600:	cmp	w23, #0x0
    3604:	mov	w8, #0x3                   	// #3
    3608:	add	x1, x22, #0x18
    360c:	csel	w5, wzr, w8, eq  // eq = none
    3610:	add	x3, sp, #0x8
    3614:	mov	x2, x20
    3618:	bl	3770 <PyInit__multibytecodec@@Base+0x87c>
    361c:	cbz	x0, 3670 <PyInit__multibytecodec@@Base+0x77c>
    3620:	mov	x23, x0
    3624:	cbz	x21, 3640 <PyInit__multibytecodec@@Base+0x74c>
    3628:	ldr	x8, [x21]
    362c:	subs	x8, x8, #0x1
    3630:	str	x8, [x21]
    3634:	b.ne	3640 <PyInit__multibytecodec@@Base+0x74c>  // b.any
    3638:	mov	x0, x21
    363c:	bl	2a50 <_Py_Dealloc@plt>
    3640:	ldr	x1, [sp, #8]
    3644:	subs	x8, x24, x1
    3648:	b.le	36ac <PyInit__multibytecodec@@Base+0x7b8>
    364c:	cmp	x8, #0x3
    3650:	b.lt	3698 <PyInit__multibytecodec@@Base+0x7a4>  // b.tstop
    3654:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3658:	ldr	x8, [x8, #4048]
    365c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3660:	add	x1, x1, #0x429
    3664:	ldr	x0, [x8]
    3668:	bl	2ae0 <PyErr_SetString@plt>
    366c:	b	36e4 <PyInit__multibytecodec@@Base+0x7f0>
    3670:	ldr	x0, [x22, #40]
    3674:	str	x21, [x22, #40]
    3678:	cbz	x0, 3690 <PyInit__multibytecodec@@Base+0x79c>
    367c:	ldr	x8, [x0]
    3680:	subs	x8, x8, #0x1
    3684:	str	x8, [x0]
    3688:	b.ne	3690 <PyInit__multibytecodec@@Base+0x79c>  // b.any
    368c:	bl	2a50 <_Py_Dealloc@plt>
    3690:	mov	x21, xzr
    3694:	b	36fc <PyInit__multibytecodec@@Base+0x808>
    3698:	mov	x0, x20
    369c:	mov	x2, x24
    36a0:	bl	2e10 <PyUnicode_Substring@plt>
    36a4:	str	x0, [x22, #40]
    36a8:	cbz	x0, 36e4 <PyInit__multibytecodec@@Base+0x7f0>
    36ac:	ldr	x8, [x20]
    36b0:	subs	x8, x8, #0x1
    36b4:	str	x8, [x20]
    36b8:	b.ne	36c4 <PyInit__multibytecodec@@Base+0x7d0>  // b.any
    36bc:	mov	x0, x20
    36c0:	bl	2a50 <_Py_Dealloc@plt>
    36c4:	cbz	x19, 3754 <PyInit__multibytecodec@@Base+0x860>
    36c8:	ldr	x8, [x19]
    36cc:	subs	x8, x8, #0x1
    36d0:	str	x8, [x19]
    36d4:	b.ne	3754 <PyInit__multibytecodec@@Base+0x860>  // b.any
    36d8:	mov	x0, x19
    36dc:	bl	2a50 <_Py_Dealloc@plt>
    36e0:	b	3754 <PyInit__multibytecodec@@Base+0x860>
    36e4:	ldr	x8, [x23]
    36e8:	subs	x8, x8, #0x1
    36ec:	str	x8, [x23]
    36f0:	b.ne	36fc <PyInit__multibytecodec@@Base+0x808>  // b.any
    36f4:	mov	x0, x23
    36f8:	bl	2a50 <_Py_Dealloc@plt>
    36fc:	cbz	x19, 3718 <PyInit__multibytecodec@@Base+0x824>
    3700:	ldr	x8, [x19]
    3704:	subs	x8, x8, #0x1
    3708:	str	x8, [x19]
    370c:	b.ne	3718 <PyInit__multibytecodec@@Base+0x824>  // b.any
    3710:	mov	x0, x19
    3714:	bl	2a50 <_Py_Dealloc@plt>
    3718:	cbz	x21, 3734 <PyInit__multibytecodec@@Base+0x840>
    371c:	ldr	x8, [x21]
    3720:	subs	x8, x8, #0x1
    3724:	str	x8, [x21]
    3728:	b.ne	3734 <PyInit__multibytecodec@@Base+0x840>  // b.any
    372c:	mov	x0, x21
    3730:	bl	2a50 <_Py_Dealloc@plt>
    3734:	cbz	x20, 3750 <PyInit__multibytecodec@@Base+0x85c>
    3738:	ldr	x8, [x20]
    373c:	subs	x8, x8, #0x1
    3740:	str	x8, [x20]
    3744:	b.ne	3750 <PyInit__multibytecodec@@Base+0x85c>  // b.any
    3748:	mov	x0, x20
    374c:	bl	2a50 <_Py_Dealloc@plt>
    3750:	mov	x23, xzr
    3754:	mov	x0, x23
    3758:	ldp	x20, x19, [sp, #64]
    375c:	ldp	x22, x21, [sp, #48]
    3760:	ldp	x24, x23, [sp, #32]
    3764:	ldp	x29, x30, [sp, #16]
    3768:	add	sp, sp, #0x50
    376c:	ret
    3770:	sub	sp, sp, #0xa0
    3774:	stp	x29, x30, [sp, #64]
    3778:	stp	x28, x27, [sp, #80]
    377c:	stp	x26, x25, [sp, #96]
    3780:	stp	x24, x23, [sp, #112]
    3784:	stp	x22, x21, [sp, #128]
    3788:	stp	x20, x19, [sp, #144]
    378c:	add	x29, sp, #0x40
    3790:	ldrb	w8, [x2, #32]
    3794:	mov	w23, w5
    3798:	mov	x20, x4
    379c:	mov	x19, x3
    37a0:	mov	x24, x2
    37a4:	mov	x21, x1
    37a8:	mov	x22, x0
    37ac:	tbnz	w8, #7, 37bc <PyInit__multibytecodec@@Base+0x8c8>
    37b0:	mov	x0, x24
    37b4:	bl	2980 <_PyUnicode_Ready@plt>
    37b8:	tbnz	w0, #31, 39d4 <PyInit__multibytecodec@@Base+0xae0>
    37bc:	ldr	x26, [x24, #16]
    37c0:	tbnz	w23, #1, 37d8 <PyInit__multibytecodec@@Base+0x8e4>
    37c4:	cbnz	x26, 37d8 <PyInit__multibytecodec@@Base+0x8e4>
    37c8:	mov	x0, xzr
    37cc:	mov	x1, xzr
    37d0:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    37d4:	b	39d8 <PyInit__multibytecodec@@Base+0xae4>
    37d8:	stp	xzr, xzr, [sp, #48]
    37dc:	stp	x24, xzr, [sp, #8]
    37e0:	str	x26, [sp, #24]
    37e4:	ldr	w28, [x24, #32]
    37e8:	tbnz	w28, #5, 37f4 <PyInit__multibytecodec@@Base+0x900>
    37ec:	ldr	x25, [x24, #72]
    37f0:	b	3804 <PyInit__multibytecodec@@Base+0x910>
    37f4:	add	x8, x24, #0x30
    37f8:	add	x9, x24, #0x48
    37fc:	tst	w28, #0x40
    3800:	csel	x25, x9, x8, eq  // eq = none
    3804:	mov	x8, #0x3ffffffffffffff8    	// #4611686018427387896
    3808:	cmp	x26, x8
    380c:	b.lt	3818 <PyInit__multibytecodec@@Base+0x924>  // b.tstop
    3810:	bl	2a70 <PyErr_NoMemory@plt>
    3814:	b	399c <PyInit__multibytecodec@@Base+0xaa8>
    3818:	lsl	x8, x26, #1
    381c:	add	x1, x8, #0x10
    3820:	mov	x0, xzr
    3824:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    3828:	str	x0, [sp, #56]
    382c:	cbz	x0, 399c <PyInit__multibytecodec@@Base+0xaa8>
    3830:	add	x8, x0, #0x20
    3834:	str	x8, [sp, #32]
    3838:	ldr	x9, [x0, #16]
    383c:	add	x10, sp, #0x8
    3840:	add	x24, x10, #0x18
    3844:	cmp	x26, #0x1
    3848:	add	x8, x8, x9
    384c:	str	x8, [sp, #40]
    3850:	b.lt	38d4 <PyInit__multibytecodec@@Base+0x9e0>  // b.tstop
    3854:	add	x8, sp, #0x8
    3858:	add	x27, x8, #0x8
    385c:	ubfx	w28, w28, #2, #3
    3860:	ldp	x9, x8, [sp, #32]
    3864:	ldr	x10, [x22, #24]
    3868:	ldr	x1, [x22, #8]
    386c:	mov	x0, x21
    3870:	sub	x7, x8, x9
    3874:	mov	w2, w28
    3878:	mov	x3, x25
    387c:	mov	x4, x27
    3880:	mov	x5, x26
    3884:	mov	x6, x24
    3888:	str	w23, [sp]
    388c:	blr	x10
    3890:	cbz	x0, 38d4 <PyInit__multibytecodec@@Base+0x9e0>
    3894:	mov	x26, x0
    3898:	tbnz	w23, #0, 38a4 <PyInit__multibytecodec@@Base+0x9b0>
    389c:	cmn	x26, #0x2
    38a0:	b.eq	38d4 <PyInit__multibytecodec@@Base+0x9e0>  // b.none
    38a4:	add	x2, sp, #0x8
    38a8:	mov	x0, x22
    38ac:	mov	x1, x21
    38b0:	mov	x3, x20
    38b4:	mov	x4, x26
    38b8:	bl	39f8 <PyInit__multibytecodec@@Base+0xb04>
    38bc:	cbnz	w0, 399c <PyInit__multibytecodec@@Base+0xaa8>
    38c0:	cmn	x26, #0x2
    38c4:	b.eq	38d4 <PyInit__multibytecodec@@Base+0x9e0>  // b.none
    38c8:	ldp	x8, x26, [sp, #16]
    38cc:	cmp	x8, x26
    38d0:	b.lt	3860 <PyInit__multibytecodec@@Base+0x96c>  // b.tstop
    38d4:	tbz	w23, #1, 393c <PyInit__multibytecodec@@Base+0xa48>
    38d8:	ldr	x8, [x22, #40]
    38dc:	cbz	x8, 393c <PyInit__multibytecodec@@Base+0xa48>
    38e0:	ldp	x10, x9, [sp, #32]
    38e4:	ldr	x1, [x22, #8]
    38e8:	mov	x0, x21
    38ec:	mov	x2, x24
    38f0:	sub	x3, x9, x10
    38f4:	blr	x8
    38f8:	cbz	x0, 393c <PyInit__multibytecodec@@Base+0xa48>
    38fc:	mov	x4, x0
    3900:	add	x2, sp, #0x8
    3904:	mov	x0, x22
    3908:	mov	x1, x21
    390c:	mov	x3, x20
    3910:	bl	39f8 <PyInit__multibytecodec@@Base+0xb04>
    3914:	cbnz	w0, 399c <PyInit__multibytecodec@@Base+0xaa8>
    3918:	ldp	x10, x9, [sp, #32]
    391c:	ldr	x8, [x22, #40]
    3920:	ldr	x1, [x22, #8]
    3924:	mov	x0, x21
    3928:	sub	x3, x9, x10
    392c:	mov	x2, x24
    3930:	blr	x8
    3934:	mov	x4, x0
    3938:	cbnz	x0, 3900 <PyInit__multibytecodec@@Base+0xa0c>
    393c:	ldr	x8, [sp, #56]
    3940:	ldr	x9, [sp, #32]
    3944:	ldr	x10, [x8, #16]
    3948:	sub	x8, x9, x8
    394c:	sub	x1, x8, #0x20
    3950:	cmp	x1, x10
    3954:	b.eq	396c <PyInit__multibytecodec@@Base+0xa78>  // b.none
    3958:	add	x8, sp, #0x8
    395c:	add	x0, x8, #0x30
    3960:	bl	29c0 <_PyBytes_Resize@plt>
    3964:	cmn	w0, #0x1
    3968:	b.eq	399c <PyInit__multibytecodec@@Base+0xaa8>  // b.none
    396c:	cbz	x19, 3978 <PyInit__multibytecodec@@Base+0xa84>
    3970:	ldr	x8, [sp, #16]
    3974:	str	x8, [x19]
    3978:	ldr	x0, [sp, #48]
    397c:	cbz	x0, 3994 <PyInit__multibytecodec@@Base+0xaa0>
    3980:	ldr	x8, [x0]
    3984:	subs	x8, x8, #0x1
    3988:	str	x8, [x0]
    398c:	b.ne	3994 <PyInit__multibytecodec@@Base+0xaa0>  // b.any
    3990:	bl	2a50 <_Py_Dealloc@plt>
    3994:	ldr	x0, [sp, #56]
    3998:	b	39d8 <PyInit__multibytecodec@@Base+0xae4>
    399c:	ldr	x0, [sp, #48]
    39a0:	cbz	x0, 39b8 <PyInit__multibytecodec@@Base+0xac4>
    39a4:	ldr	x8, [x0]
    39a8:	subs	x8, x8, #0x1
    39ac:	str	x8, [x0]
    39b0:	b.ne	39b8 <PyInit__multibytecodec@@Base+0xac4>  // b.any
    39b4:	bl	2a50 <_Py_Dealloc@plt>
    39b8:	ldr	x0, [sp, #56]
    39bc:	cbz	x0, 39d8 <PyInit__multibytecodec@@Base+0xae4>
    39c0:	ldr	x8, [x0]
    39c4:	subs	x8, x8, #0x1
    39c8:	str	x8, [x0]
    39cc:	b.ne	39d4 <PyInit__multibytecodec@@Base+0xae0>  // b.any
    39d0:	bl	2a50 <_Py_Dealloc@plt>
    39d4:	mov	x0, xzr
    39d8:	ldp	x20, x19, [sp, #144]
    39dc:	ldp	x22, x21, [sp, #128]
    39e0:	ldp	x24, x23, [sp, #112]
    39e4:	ldp	x26, x25, [sp, #96]
    39e8:	ldp	x28, x27, [sp, #80]
    39ec:	ldp	x29, x30, [sp, #64]
    39f0:	add	sp, sp, #0xa0
    39f4:	ret
    39f8:	sub	sp, sp, #0x80
    39fc:	stp	x29, x30, [sp, #32]
    3a00:	stp	x28, x27, [sp, #48]
    3a04:	stp	x26, x25, [sp, #64]
    3a08:	stp	x24, x23, [sp, #80]
    3a0c:	stp	x22, x21, [sp, #96]
    3a10:	stp	x20, x19, [sp, #112]
    3a14:	add	x29, sp, #0x20
    3a18:	mov	x24, x4
    3a1c:	mov	x22, x3
    3a20:	mov	x19, x2
    3a24:	mov	x20, x1
    3a28:	cmp	x4, #0x0
    3a2c:	mov	x21, x0
    3a30:	b.le	3a64 <PyInit__multibytecodec@@Base+0xb70>
    3a34:	adrp	x23, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3a38:	add	x23, x23, #0x441
    3a3c:	cmp	x22, #0x3
    3a40:	b.eq	3a98 <PyInit__multibytecodec@@Base+0xba4>  // b.none
    3a44:	ldr	x4, [x19, #8]
    3a48:	and	x8, x22, #0xfffffffffffffffe
    3a4c:	cmp	x8, #0x2
    3a50:	add	x24, x4, x24
    3a54:	b.ne	3ac0 <PyInit__multibytecodec@@Base+0xbcc>  // b.any
    3a58:	mov	w0, wzr
    3a5c:	str	x24, [x19, #8]
    3a60:	b	3cec <PyInit__multibytecodec@@Base+0xdf8>
    3a64:	cmn	x24, #0x3
    3a68:	b.eq	3bd8 <PyInit__multibytecodec@@Base+0xce4>  // b.none
    3a6c:	cmn	x24, #0x2
    3a70:	b.eq	3bec <PyInit__multibytecodec@@Base+0xcf8>  // b.none
    3a74:	cmn	x24, #0x1
    3a78:	b.ne	3bfc <PyInit__multibytecodec@@Base+0xd08>  // b.any
    3a7c:	mov	x1, #0xffffffffffffffff    	// #-1
    3a80:	mov	x0, x19
    3a84:	bl	3e1c <PyInit__multibytecodec@@Base+0xf28>
    3a88:	cmn	w0, #0x1
    3a8c:	b.eq	3ce8 <PyInit__multibytecodec@@Base+0xdf4>  // b.none
    3a90:	mov	w0, wzr
    3a94:	b	3cec <PyInit__multibytecodec@@Base+0xdf8>
    3a98:	mov	w0, #0x3f                  	// #63
    3a9c:	str	x23, [sp, #16]
    3aa0:	bl	2d80 <PyUnicode_FromOrdinal@plt>
    3aa4:	cbz	x0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3aa8:	ldr	w8, [x0, #32]
    3aac:	mov	x26, x0
    3ab0:	ubfx	w27, w8, #2, #3
    3ab4:	tbnz	w8, #5, 3c18 <PyInit__multibytecodec@@Base+0xd24>
    3ab8:	ldr	x28, [x26, #72]
    3abc:	b	3c28 <PyInit__multibytecodec@@Base+0xd34>
    3ac0:	ldr	x0, [x19, #40]
    3ac4:	cbz	x0, 3afc <PyInit__multibytecodec@@Base+0xc08>
    3ac8:	mov	x1, x4
    3acc:	bl	2a40 <PyUnicodeEncodeError_SetStart@plt>
    3ad0:	cbnz	w0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3ad4:	ldr	x0, [x19, #40]
    3ad8:	mov	x1, x24
    3adc:	bl	2a90 <PyUnicodeEncodeError_SetEnd@plt>
    3ae0:	cbnz	w0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3ae4:	ldr	x0, [x19, #40]
    3ae8:	mov	x1, x23
    3aec:	bl	29f0 <PyUnicodeEncodeError_SetReason@plt>
    3af0:	cbnz	w0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3af4:	ldr	x1, [x19, #40]
    3af8:	b	3b30 <PyInit__multibytecodec@@Base+0xc3c>
    3afc:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3b00:	ldr	x8, [x8, #4024]
    3b04:	ldr	x2, [x21]
    3b08:	ldr	x3, [x19]
    3b0c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3b10:	ldr	x0, [x8]
    3b14:	add	x1, x1, #0x4a5
    3b18:	mov	x5, x24
    3b1c:	mov	x6, x23
    3b20:	bl	2a80 <_PyObject_CallFunction_SizeT@plt>
    3b24:	mov	x1, x0
    3b28:	str	x0, [x19, #40]
    3b2c:	cbz	x0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3b30:	cmp	x22, #0x1
    3b34:	b.eq	3ce0 <PyInit__multibytecodec@@Base+0xdec>  // b.none
    3b38:	mov	x0, x22
    3b3c:	bl	3eb0 <PyInit__multibytecodec@@Base+0xfbc>
    3b40:	cbz	x0, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3b44:	ldr	x8, [x0, #8]
    3b48:	mov	x22, x0
    3b4c:	ldrb	w8, [x8, #171]
    3b50:	tbz	w8, #2, 3b84 <PyInit__multibytecodec@@Base+0xc90>
    3b54:	ldr	x8, [x22, #16]
    3b58:	cmp	x8, #0x2
    3b5c:	b.ne	3b84 <PyInit__multibytecodec@@Base+0xc90>  // b.any
    3b60:	ldr	x23, [x22, #24]
    3b64:	ldr	x8, [x23, #8]
    3b68:	ldr	x8, [x8, #168]
    3b6c:	tst	x8, #0x18000000
    3b70:	b.eq	3b84 <PyInit__multibytecodec@@Base+0xc90>  // b.none
    3b74:	ldr	x9, [x22, #32]
    3b78:	ldr	x9, [x9, #8]
    3b7c:	ldrb	w9, [x9, #171]
    3b80:	tbnz	w9, #0, 3d0c <PyInit__multibytecodec@@Base+0xe18>
    3b84:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3b88:	ldr	x8, [x8, #4000]
    3b8c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3b90:	add	x1, x1, #0x4ab
    3b94:	ldr	x0, [x8]
    3b98:	bl	2ae0 <PyErr_SetString@plt>
    3b9c:	mov	x23, xzr
    3ba0:	ldr	x8, [x22]
    3ba4:	subs	x8, x8, #0x1
    3ba8:	str	x8, [x22]
    3bac:	b.ne	3bb8 <PyInit__multibytecodec@@Base+0xcc4>  // b.any
    3bb0:	mov	x0, x22
    3bb4:	bl	2a50 <_Py_Dealloc@plt>
    3bb8:	cbz	x23, 3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3bbc:	ldr	x8, [x23]
    3bc0:	subs	x8, x8, #0x1
    3bc4:	str	x8, [x23]
    3bc8:	b.ne	3ce8 <PyInit__multibytecodec@@Base+0xdf4>  // b.any
    3bcc:	mov	x0, x23
    3bd0:	bl	2a50 <_Py_Dealloc@plt>
    3bd4:	b	3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3bd8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3bdc:	ldr	x8, [x8, #3984]
    3be0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3be4:	add	x1, x1, #0x47a
    3be8:	b	3c0c <PyInit__multibytecodec@@Base+0xd18>
    3bec:	ldr	x24, [x19, #8]
    3bf0:	adrp	x23, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3bf4:	add	x23, x23, #0x45c
    3bf8:	b	3a3c <PyInit__multibytecodec@@Base+0xb48>
    3bfc:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3c00:	ldr	x8, [x8, #3984]
    3c04:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3c08:	add	x1, x1, #0x48f
    3c0c:	ldr	x0, [x8]
    3c10:	bl	2ae0 <PyErr_SetString@plt>
    3c14:	b	3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3c18:	add	x9, x26, #0x30
    3c1c:	add	x10, x26, #0x48
    3c20:	tst	w8, #0x40
    3c24:	csel	x28, x10, x9, eq  // eq = none
    3c28:	add	x25, x19, #0x18
    3c2c:	stur	xzr, [x29, #-8]
    3c30:	ldp	x9, x8, [x19, #24]
    3c34:	ldr	x10, [x21, #24]
    3c38:	ldr	x1, [x21, #8]
    3c3c:	sub	x4, x29, #0x8
    3c40:	sub	x7, x8, x9
    3c44:	mov	w5, #0x1                   	// #1
    3c48:	mov	x0, x20
    3c4c:	mov	w2, w27
    3c50:	mov	x3, x28
    3c54:	mov	x6, x25
    3c58:	str	wzr, [sp]
    3c5c:	blr	x10
    3c60:	cmn	x0, #0x1
    3c64:	b.ne	3c80 <PyInit__multibytecodec@@Base+0xd8c>  // b.any
    3c68:	mov	x1, #0xffffffffffffffff    	// #-1
    3c6c:	mov	x0, x19
    3c70:	bl	3e1c <PyInit__multibytecodec@@Base+0xf28>
    3c74:	cmn	w0, #0x1
    3c78:	b.ne	3c30 <PyInit__multibytecodec@@Base+0xd3c>  // b.any
    3c7c:	b	3ce8 <PyInit__multibytecodec@@Base+0xdf4>
    3c80:	ldr	x8, [x26]
    3c84:	mov	x23, x0
    3c88:	subs	x8, x8, #0x1
    3c8c:	str	x8, [x26]
    3c90:	b.ne	3c9c <PyInit__multibytecodec@@Base+0xda8>  // b.any
    3c94:	mov	x0, x26
    3c98:	bl	2a50 <_Py_Dealloc@plt>
    3c9c:	cbz	x23, 3cd8 <PyInit__multibytecodec@@Base+0xde4>
    3ca0:	ldp	x8, x9, [x19, #24]
    3ca4:	sub	x9, x9, x8
    3ca8:	cmp	x9, #0x0
    3cac:	b.gt	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3cb0:	mov	w1, #0x1                   	// #1
    3cb4:	mov	x0, x19
    3cb8:	bl	3e1c <PyInit__multibytecodec@@Base+0xf28>
    3cbc:	cmn	w0, #0x1
    3cc0:	b.eq	3ce8 <PyInit__multibytecodec@@Base+0xdf4>  // b.none
    3cc4:	ldr	x8, [x25]
    3cc8:	add	x9, x8, #0x1
    3ccc:	mov	w10, #0x3f                  	// #63
    3cd0:	str	x9, [x25]
    3cd4:	strb	w10, [x8]
    3cd8:	ldr	x23, [sp, #16]
    3cdc:	b	3a44 <PyInit__multibytecodec@@Base+0xb50>
    3ce0:	mov	x0, x1
    3ce4:	bl	2bc0 <PyCodec_StrictErrors@plt>
    3ce8:	mov	w0, #0xffffffff            	// #-1
    3cec:	ldp	x20, x19, [sp, #112]
    3cf0:	ldp	x22, x21, [sp, #96]
    3cf4:	ldp	x24, x23, [sp, #80]
    3cf8:	ldp	x26, x25, [sp, #64]
    3cfc:	ldp	x28, x27, [sp, #48]
    3d00:	ldp	x29, x30, [sp, #32]
    3d04:	add	sp, sp, #0x80
    3d08:	ret
    3d0c:	tbnz	w8, #28, 3d20 <PyInit__multibytecodec@@Base+0xe2c>
    3d10:	ldr	x8, [x23]
    3d14:	add	x8, x8, #0x1
    3d18:	str	x8, [x23]
    3d1c:	b	3d44 <PyInit__multibytecodec@@Base+0xe50>
    3d20:	sub	x3, x29, #0x8
    3d24:	mov	w4, #0x1                   	// #1
    3d28:	mov	w5, #0x1                   	// #1
    3d2c:	mov	x0, x21
    3d30:	mov	x1, x20
    3d34:	mov	x2, x23
    3d38:	bl	3770 <PyInit__multibytecodec@@Base+0x87c>
    3d3c:	mov	x23, x0
    3d40:	cbz	x0, 3ba0 <PyInit__multibytecodec@@Base+0xcac>
    3d44:	ldr	x20, [x23, #16]
    3d48:	cmp	x20, #0x1
    3d4c:	b.lt	3d90 <PyInit__multibytecodec@@Base+0xe9c>  // b.tstop
    3d50:	ldp	x0, x8, [x19, #24]
    3d54:	sub	x8, x8, x0
    3d58:	cmp	x20, x8
    3d5c:	b.le	3d78 <PyInit__multibytecodec@@Base+0xe84>
    3d60:	mov	x0, x19
    3d64:	mov	x1, x20
    3d68:	bl	3e1c <PyInit__multibytecodec@@Base+0xf28>
    3d6c:	cmn	w0, #0x1
    3d70:	b.eq	3ba0 <PyInit__multibytecodec@@Base+0xcac>  // b.none
    3d74:	ldr	x0, [x19, #24]
    3d78:	add	x1, x23, #0x20
    3d7c:	mov	x2, x20
    3d80:	bl	2970 <memcpy@plt>
    3d84:	ldr	x8, [x19, #24]
    3d88:	add	x8, x8, x20
    3d8c:	str	x8, [x19, #24]
    3d90:	ldr	x0, [x22, #32]
    3d94:	bl	2b50 <PyLong_AsSsize_t@plt>
    3d98:	mov	x20, x0
    3d9c:	tbnz	x0, #63, 3de4 <PyInit__multibytecodec@@Base+0xef0>
    3da0:	ldr	x8, [x19, #16]
    3da4:	cmp	x20, x8
    3da8:	b.gt	3df8 <PyInit__multibytecodec@@Base+0xf04>
    3dac:	str	x20, [x19, #8]
    3db0:	ldr	x8, [x22]
    3db4:	subs	x8, x8, #0x1
    3db8:	str	x8, [x22]
    3dbc:	b.ne	3dc8 <PyInit__multibytecodec@@Base+0xed4>  // b.any
    3dc0:	mov	x0, x22
    3dc4:	bl	2a50 <_Py_Dealloc@plt>
    3dc8:	ldr	x8, [x23]
    3dcc:	subs	x8, x8, #0x1
    3dd0:	str	x8, [x23]
    3dd4:	b.ne	3a90 <PyInit__multibytecodec@@Base+0xb9c>  // b.any
    3dd8:	mov	x0, x23
    3ddc:	bl	2a50 <_Py_Dealloc@plt>
    3de0:	b	3a90 <PyInit__multibytecodec@@Base+0xb9c>
    3de4:	bl	2bf0 <PyErr_Occurred@plt>
    3de8:	cbnz	x0, 3df8 <PyInit__multibytecodec@@Base+0xf04>
    3dec:	ldr	x8, [x19, #16]
    3df0:	adds	x20, x8, x20
    3df4:	b.pl	3da4 <PyInit__multibytecodec@@Base+0xeb0>  // b.nfrst
    3df8:	bl	2b90 <PyErr_Clear@plt>
    3dfc:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3e00:	ldr	x8, [x8, #4032]
    3e04:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3e08:	add	x1, x1, #0x4df
    3e0c:	mov	x2, x20
    3e10:	ldr	x0, [x8]
    3e14:	bl	2d50 <PyErr_Format@plt>
    3e18:	b	3ba0 <PyInit__multibytecodec@@Base+0xcac>
    3e1c:	stp	x29, x30, [sp, #-48]!
    3e20:	str	x21, [sp, #16]
    3e24:	stp	x20, x19, [sp, #32]
    3e28:	mov	x29, sp
    3e2c:	mov	x19, x0
    3e30:	ldr	x20, [x0, #48]!
    3e34:	ldr	x8, [x20, #16]
    3e38:	asr	x9, x8, #1
    3e3c:	orr	x10, x9, #0x1
    3e40:	cmp	x9, x1
    3e44:	csel	x9, x10, x1, gt
    3e48:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    3e4c:	sub	x10, x10, x9
    3e50:	cmp	x8, x10
    3e54:	b.le	3e64 <PyInit__multibytecodec@@Base+0xf70>
    3e58:	bl	2a70 <PyErr_NoMemory@plt>
    3e5c:	mov	w0, #0xffffffff            	// #-1
    3e60:	b	3ea0 <PyInit__multibytecodec@@Base+0xfac>
    3e64:	ldur	x21, [x0, #-24]
    3e68:	add	x1, x9, x8
    3e6c:	bl	29c0 <_PyBytes_Resize@plt>
    3e70:	cmn	w0, #0x1
    3e74:	b.eq	3ea0 <PyInit__multibytecodec@@Base+0xfac>  // b.none
    3e78:	ldr	x8, [x19, #48]
    3e7c:	sub	x9, x21, x20
    3e80:	sub	x9, x9, #0x20
    3e84:	mov	w0, wzr
    3e88:	add	x10, x8, #0x20
    3e8c:	add	x9, x10, x9
    3e90:	str	x9, [x19, #24]
    3e94:	ldr	x8, [x8, #16]
    3e98:	add	x8, x10, x8
    3e9c:	str	x8, [x19, #32]
    3ea0:	ldp	x20, x19, [sp, #32]
    3ea4:	ldr	x21, [sp, #16]
    3ea8:	ldp	x29, x30, [sp], #48
    3eac:	ret
    3eb0:	stp	x29, x30, [sp, #-48]!
    3eb4:	str	x21, [sp, #16]
    3eb8:	stp	x20, x19, [sp, #32]
    3ebc:	mov	x29, sp
    3ec0:	mov	x20, x1
    3ec4:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    3ec8:	cbz	x0, 3f54 <PyInit__multibytecodec@@Base+0x1060>
    3ecc:	bl	2df0 <PyCodec_LookupError@plt>
    3ed0:	cbz	x0, 3f54 <PyInit__multibytecodec@@Base+0x1060>
    3ed4:	mov	x19, x0
    3ed8:	mov	w0, #0x1                   	// #1
    3edc:	bl	2bd0 <PyTuple_New@plt>
    3ee0:	cbz	x0, 3f3c <PyInit__multibytecodec@@Base+0x1048>
    3ee4:	str	x20, [x0, #24]
    3ee8:	ldr	x8, [x20]
    3eec:	mov	x21, x0
    3ef0:	mov	x0, x19
    3ef4:	mov	x1, x21
    3ef8:	add	x8, x8, #0x1
    3efc:	str	x8, [x20]
    3f00:	bl	2c20 <PyObject_CallObject@plt>
    3f04:	ldr	x8, [x21]
    3f08:	mov	x20, x0
    3f0c:	subs	x8, x8, #0x1
    3f10:	str	x8, [x21]
    3f14:	b.ne	3f20 <PyInit__multibytecodec@@Base+0x102c>  // b.any
    3f18:	mov	x0, x21
    3f1c:	bl	2a50 <_Py_Dealloc@plt>
    3f20:	ldr	x8, [x19]
    3f24:	subs	x8, x8, #0x1
    3f28:	str	x8, [x19]
    3f2c:	b.ne	3f58 <PyInit__multibytecodec@@Base+0x1064>  // b.any
    3f30:	mov	x0, x19
    3f34:	bl	2a50 <_Py_Dealloc@plt>
    3f38:	b	3f58 <PyInit__multibytecodec@@Base+0x1064>
    3f3c:	ldr	x8, [x19]
    3f40:	subs	x8, x8, #0x1
    3f44:	str	x8, [x19]
    3f48:	b.ne	3f54 <PyInit__multibytecodec@@Base+0x1060>  // b.any
    3f4c:	mov	x0, x19
    3f50:	bl	2a50 <_Py_Dealloc@plt>
    3f54:	mov	x20, xzr
    3f58:	mov	x0, x20
    3f5c:	ldp	x20, x19, [sp, #32]
    3f60:	ldr	x21, [sp, #16]
    3f64:	ldp	x29, x30, [sp], #48
    3f68:	ret
    3f6c:	ldr	x0, [x0, #32]
    3f70:	sub	x8, x0, #0x1
    3f74:	cmp	x8, #0x3
    3f78:	b.cs	3f8c <PyInit__multibytecodec@@Base+0x1098>  // b.hs, b.nlast
    3f7c:	adrp	x9, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3f80:	add	x9, x9, #0xd78
    3f84:	ldr	x0, [x9, x8, lsl #3]
    3f88:	b	2ce0 <PyUnicode_FromString@plt>
    3f8c:	ldr	x8, [x0]
    3f90:	add	x8, x8, #0x1
    3f94:	str	x8, [x0]
    3f98:	ret
    3f9c:	stp	x29, x30, [sp, #-32]!
    3fa0:	stp	x20, x19, [sp, #16]
    3fa4:	mov	x29, sp
    3fa8:	cbz	x1, 3fcc <PyInit__multibytecodec@@Base+0x10d8>
    3fac:	ldr	x8, [x1, #8]
    3fb0:	ldrb	w8, [x8, #171]
    3fb4:	tbnz	w8, #4, 3ff4 <PyInit__multibytecodec@@Base+0x1100>
    3fb8:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3fbc:	ldr	x8, [x8, #4000]
    3fc0:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3fc4:	add	x1, x1, #0x56c
    3fc8:	b	3fdc <PyInit__multibytecodec@@Base+0x10e8>
    3fcc:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    3fd0:	ldr	x8, [x8, #4056]
    3fd4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    3fd8:	add	x1, x1, #0x554
    3fdc:	ldr	x0, [x8]
    3fe0:	bl	2ae0 <PyErr_SetString@plt>
    3fe4:	mov	w0, #0xffffffff            	// #-1
    3fe8:	ldp	x20, x19, [sp, #16]
    3fec:	ldp	x29, x30, [sp], #32
    3ff0:	ret
    3ff4:	mov	x19, x0
    3ff8:	mov	x0, x1
    3ffc:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    4000:	cbz	x0, 3fe4 <PyInit__multibytecodec@@Base+0x10f0>
    4004:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    4008:	cbz	x0, 3fe4 <PyInit__multibytecodec@@Base+0x10f0>
    400c:	mov	x20, x0
    4010:	ldr	x0, [x19, #32]
    4014:	cbz	x0, 4038 <PyInit__multibytecodec@@Base+0x1144>
    4018:	cbz	x0, 4024 <PyInit__multibytecodec@@Base+0x1130>
    401c:	cmp	x0, #0x4
    4020:	b.cc	4038 <PyInit__multibytecodec@@Base+0x1144>  // b.lo, b.ul, b.last
    4024:	ldr	x8, [x0]
    4028:	subs	x8, x8, #0x1
    402c:	str	x8, [x0]
    4030:	b.ne	4038 <PyInit__multibytecodec@@Base+0x1144>  // b.any
    4034:	bl	2a50 <_Py_Dealloc@plt>
    4038:	mov	w0, wzr
    403c:	str	x20, [x19, #32]
    4040:	b	3fe8 <PyInit__multibytecodec@@Base+0x10f4>
    4044:	stp	x29, x30, [sp, #-32]!
    4048:	str	x19, [sp, #16]
    404c:	mov	x29, sp
    4050:	cbz	x0, 40a0 <PyInit__multibytecodec@@Base+0x11ac>
    4054:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4058:	add	x1, x1, #0x52a
    405c:	mov	x19, x0
    4060:	bl	2c30 <strcmp@plt>
    4064:	cbz	w0, 40a0 <PyInit__multibytecodec@@Base+0x11ac>
    4068:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    406c:	add	x1, x1, #0x545
    4070:	mov	x0, x19
    4074:	bl	2c30 <strcmp@plt>
    4078:	cbz	w0, 40b0 <PyInit__multibytecodec@@Base+0x11bc>
    407c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4080:	add	x1, x1, #0x54c
    4084:	mov	x0, x19
    4088:	bl	2c30 <strcmp@plt>
    408c:	cbz	w0, 40b8 <PyInit__multibytecodec@@Base+0x11c4>
    4090:	mov	x0, x19
    4094:	ldr	x19, [sp, #16]
    4098:	ldp	x29, x30, [sp], #32
    409c:	b	2ce0 <PyUnicode_FromString@plt>
    40a0:	mov	w0, #0x1                   	// #1
    40a4:	ldr	x19, [sp, #16]
    40a8:	ldp	x29, x30, [sp], #32
    40ac:	ret
    40b0:	mov	w0, #0x2                   	// #2
    40b4:	b	40a4 <PyInit__multibytecodec@@Base+0x11b0>
    40b8:	mov	w0, #0x3                   	// #3
    40bc:	b	40a4 <PyInit__multibytecodec@@Base+0x11b0>
    40c0:	stp	x29, x30, [sp, #-32]!
    40c4:	str	x19, [sp, #16]
    40c8:	mov	x29, sp
    40cc:	mov	x19, x0
    40d0:	bl	2e00 <PyObject_GC_UnTrack@plt>
    40d4:	ldr	x0, [x19, #32]
    40d8:	cbz	x0, 40fc <PyInit__multibytecodec@@Base+0x1208>
    40dc:	cbz	x0, 40e8 <PyInit__multibytecodec@@Base+0x11f4>
    40e0:	cmp	x0, #0x4
    40e4:	b.cc	40fc <PyInit__multibytecodec@@Base+0x1208>  // b.lo, b.ul, b.last
    40e8:	ldr	x8, [x0]
    40ec:	subs	x8, x8, #0x1
    40f0:	str	x8, [x0]
    40f4:	b.ne	40fc <PyInit__multibytecodec@@Base+0x1208>  // b.any
    40f8:	bl	2a50 <_Py_Dealloc@plt>
    40fc:	ldr	x8, [x19, #8]
    4100:	mov	x0, x19
    4104:	ldr	x19, [sp, #16]
    4108:	ldr	x1, [x8, #320]
    410c:	ldp	x29, x30, [sp], #32
    4110:	br	x1
    4114:	stp	x29, x30, [sp, #-16]!
    4118:	mov	x29, sp
    411c:	ldr	x0, [x0, #32]
    4120:	cmp	x0, #0x0
    4124:	cset	w9, ne  // ne = any
    4128:	cmp	x0, #0x4
    412c:	cset	w10, cc  // cc = lo, ul, last
    4130:	cbz	x0, 414c <PyInit__multibytecodec@@Base+0x1258>
    4134:	and	w9, w10, w9
    4138:	tbnz	w9, #0, 414c <PyInit__multibytecodec@@Base+0x1258>
    413c:	mov	x8, x1
    4140:	mov	x1, x2
    4144:	blr	x8
    4148:	cbnz	w0, 4150 <PyInit__multibytecodec@@Base+0x125c>
    414c:	mov	w0, wzr
    4150:	ldp	x29, x30, [sp], #16
    4154:	ret
    4158:	mov	w0, wzr
    415c:	ret
    4160:	sub	sp, sp, #0x30
    4164:	stp	x29, x30, [sp, #16]
    4168:	stp	x20, x19, [sp, #32]
    416c:	add	x29, sp, #0x10
    4170:	mov	x8, x2
    4174:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4178:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    417c:	mov	x20, x0
    4180:	add	x2, x2, #0x657
    4184:	add	x3, x3, #0xc18
    4188:	add	x4, sp, #0x8
    418c:	mov	x0, x1
    4190:	mov	x1, x8
    4194:	str	xzr, [sp, #8]
    4198:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    419c:	cbz	w0, 4230 <PyInit__multibytecodec@@Base+0x133c>
    41a0:	ldr	x8, [x20, #304]
    41a4:	mov	x0, x20
    41a8:	mov	x1, xzr
    41ac:	blr	x8
    41b0:	mov	x19, x0
    41b4:	cbz	x0, 4234 <PyInit__multibytecodec@@Base+0x1340>
    41b8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    41bc:	add	x1, x1, #0x7df
    41c0:	mov	x0, x20
    41c4:	bl	2a00 <PyObject_GetAttrString@plt>
    41c8:	mov	x20, x0
    41cc:	cbz	x0, 41fc <PyInit__multibytecodec@@Base+0x1308>
    41d0:	ldr	x8, [x20, #8]
    41d4:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    41d8:	add	x9, x9, #0x8e0
    41dc:	cmp	x8, x9
    41e0:	b.eq	4248 <PyInit__multibytecodec@@Base+0x1354>  // b.none
    41e4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    41e8:	ldr	x8, [x8, #4000]
    41ec:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    41f0:	add	x1, x1, #0x59a
    41f4:	ldr	x0, [x8]
    41f8:	bl	2ae0 <PyErr_SetString@plt>
    41fc:	ldr	x8, [x19]
    4200:	subs	x8, x8, #0x1
    4204:	str	x8, [x19]
    4208:	b.ne	4214 <PyInit__multibytecodec@@Base+0x1320>  // b.any
    420c:	mov	x0, x19
    4210:	bl	2a50 <_Py_Dealloc@plt>
    4214:	cbz	x20, 4230 <PyInit__multibytecodec@@Base+0x133c>
    4218:	ldr	x8, [x20]
    421c:	subs	x8, x8, #0x1
    4220:	str	x8, [x20]
    4224:	b.ne	4230 <PyInit__multibytecodec@@Base+0x133c>  // b.any
    4228:	mov	x0, x20
    422c:	bl	2a50 <_Py_Dealloc@plt>
    4230:	mov	x19, xzr
    4234:	mov	x0, x19
    4238:	ldp	x20, x19, [sp, #32]
    423c:	ldp	x29, x30, [sp, #16]
    4240:	add	sp, sp, #0x30
    4244:	ret
    4248:	ldr	x8, [x20, #16]
    424c:	str	xzr, [x19, #48]
    4250:	str	x8, [x19, #16]
    4254:	ldr	x0, [sp, #8]
    4258:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    425c:	str	x0, [x19, #32]
    4260:	cbz	x0, 41fc <PyInit__multibytecodec@@Base+0x1308>
    4264:	ldr	x9, [x19, #16]
    4268:	ldr	x8, [x9, #56]
    426c:	cbz	x8, 4280 <PyInit__multibytecodec@@Base+0x138c>
    4270:	ldr	x1, [x9, #8]
    4274:	add	x0, x19, #0x18
    4278:	blr	x8
    427c:	cbnz	w0, 41fc <PyInit__multibytecodec@@Base+0x1308>
    4280:	ldr	x8, [x20]
    4284:	subs	x8, x8, #0x1
    4288:	str	x8, [x20]
    428c:	b.ne	4234 <PyInit__multibytecodec@@Base+0x1340>  // b.any
    4290:	mov	x0, x20
    4294:	bl	2a50 <_Py_Dealloc@plt>
    4298:	b	4234 <PyInit__multibytecodec@@Base+0x1340>
    429c:	sub	sp, sp, #0x130
    42a0:	stp	x29, x30, [sp, #208]
    42a4:	str	x28, [sp, #224]
    42a8:	stp	x26, x25, [sp, #240]
    42ac:	stp	x24, x23, [sp, #256]
    42b0:	stp	x22, x21, [sp, #272]
    42b4:	stp	x20, x19, [sp, #288]
    42b8:	add	x29, sp, #0xd0
    42bc:	mov	x21, x2
    42c0:	mov	x20, x1
    42c4:	mov	x19, x0
    42c8:	cbz	x3, 42d4 <PyInit__multibytecodec@@Base+0x13e0>
    42cc:	ldr	x22, [x3, #16]
    42d0:	b	42d8 <PyInit__multibytecodec@@Base+0x13e4>
    42d4:	mov	x22, xzr
    42d8:	movi	v0.2d, #0x0
    42dc:	stp	q0, q0, [sp, #64]
    42e0:	stp	q0, q0, [sp, #32]
    42e4:	str	q0, [sp, #16]
    42e8:	cbz	x20, 42fc <PyInit__multibytecodec@@Base+0x1408>
    42ec:	sub	x8, x21, #0x1
    42f0:	cmp	x8, #0x1
    42f4:	b.hi	42fc <PyInit__multibytecodec@@Base+0x1408>  // b.pmore
    42f8:	cbz	x3, 4330 <PyInit__multibytecodec@@Base+0x143c>
    42fc:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4300:	add	x8, sp, #0x68
    4304:	add	x4, x4, #0xcc8
    4308:	mov	w5, #0x1                   	// #1
    430c:	mov	w6, #0x2                   	// #2
    4310:	mov	x0, x20
    4314:	mov	x1, x21
    4318:	mov	x2, xzr
    431c:	mov	w7, wzr
    4320:	str	x8, [sp]
    4324:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    4328:	mov	x20, x0
    432c:	cbz	x0, 4344 <PyInit__multibytecodec@@Base+0x1450>
    4330:	ldr	x0, [x20]
    4334:	add	x1, sp, #0x10
    4338:	mov	w2, wzr
    433c:	bl	2cb0 <PyObject_GetBuffer@plt>
    4340:	cbz	w0, 437c <PyInit__multibytecodec@@Base+0x1488>
    4344:	mov	x19, xzr
    4348:	ldr	x8, [sp, #24]
    434c:	cbz	x8, 4358 <PyInit__multibytecodec@@Base+0x1464>
    4350:	add	x0, sp, #0x10
    4354:	bl	29e0 <PyBuffer_Release@plt>
    4358:	mov	x0, x19
    435c:	ldp	x20, x19, [sp, #288]
    4360:	ldp	x22, x21, [sp, #272]
    4364:	ldp	x24, x23, [sp, #256]
    4368:	ldp	x26, x25, [sp, #240]
    436c:	ldr	x28, [sp, #224]
    4370:	ldp	x29, x30, [sp, #208]
    4374:	add	sp, sp, #0x130
    4378:	ret
    437c:	add	x0, sp, #0x10
    4380:	mov	w1, #0x43                  	// #67
    4384:	bl	2a20 <PyBuffer_IsContiguous@plt>
    4388:	cbz	w0, 4410 <PyInit__multibytecodec@@Base+0x151c>
    438c:	add	x8, x22, x21
    4390:	cmp	x8, #0x1
    4394:	b.ne	4434 <PyInit__multibytecodec@@Base+0x1540>  // b.any
    4398:	mov	w24, wzr
    439c:	ldr	x21, [sp, #16]
    43a0:	ldr	x25, [sp, #32]
    43a4:	sub	x8, x29, #0x58
    43a8:	add	x20, x8, #0x20
    43ac:	mov	x0, x20
    43b0:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    43b4:	stur	xzr, [x29, #-64]
    43b8:	ldr	x23, [x19, #48]
    43bc:	cbz	x23, 4480 <PyInit__multibytecodec@@Base+0x158c>
    43c0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    43c4:	sub	x8, x8, x23
    43c8:	cmp	x25, x8
    43cc:	b.gt	4478 <PyInit__multibytecodec@@Base+0x1584>
    43d0:	add	x26, x23, x25
    43d4:	mov	x0, x26
    43d8:	bl	2dd0 <PyMem_Malloc@plt>
    43dc:	cbz	x0, 4478 <PyInit__multibytecodec@@Base+0x1584>
    43e0:	ldr	x2, [x19, #48]
    43e4:	add	x1, x19, #0x28
    43e8:	mov	x22, x0
    43ec:	bl	2970 <memcpy@plt>
    43f0:	ldr	x8, [x19, #48]
    43f4:	mov	x1, x21
    43f8:	mov	x2, x25
    43fc:	add	x0, x22, x8
    4400:	bl	2970 <memcpy@plt>
    4404:	mov	x25, x26
    4408:	str	xzr, [x19, #48]
    440c:	b	4484 <PyInit__multibytecodec@@Base+0x1590>
    4410:	ldr	x3, [x20]
    4414:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4418:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    441c:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4420:	add	x0, x0, #0x5cf
    4424:	add	x1, x1, #0x5d6
    4428:	add	x2, x2, #0x5e7
    442c:	bl	2b70 <_PyArg_BadArgument@plt>
    4430:	b	4344 <PyInit__multibytecodec@@Base+0x1450>
    4434:	ldr	x8, [x20, #8]
    4438:	ldr	x0, [x8, #8]
    443c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4440:	ldr	x8, [x8, #3968]
    4444:	cmp	x0, x8
    4448:	b.eq	445c <PyInit__multibytecodec@@Base+0x1568>  // b.none
    444c:	adrp	x1, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4450:	ldr	x1, [x1, #3968]
    4454:	bl	2d20 <PyType_IsSubtype@plt>
    4458:	cbz	w0, 452c <PyInit__multibytecodec@@Base+0x1638>
    445c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4460:	ldr	x8, [x8, #4000]
    4464:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4468:	add	x1, x1, #0x3e0
    446c:	ldr	x0, [x8]
    4470:	bl	2ae0 <PyErr_SetString@plt>
    4474:	b	4344 <PyInit__multibytecodec@@Base+0x1450>
    4478:	bl	2a70 <PyErr_NoMemory@plt>
    447c:	b	44c0 <PyInit__multibytecodec@@Base+0x15cc>
    4480:	mov	x22, x21
    4484:	ldur	x8, [x29, #-16]
    4488:	add	x9, x22, x25
    448c:	sub	x1, x29, #0x58
    4490:	mov	x0, x19
    4494:	add	x8, x8, x25
    4498:	stp	x22, x22, [x29, #-88]
    449c:	stur	x9, [x29, #-72]
    44a0:	stur	x8, [x29, #-16]
    44a4:	bl	4798 <PyInit__multibytecodec@@Base+0x18a4>
    44a8:	cbz	w0, 44e8 <PyInit__multibytecodec@@Base+0x15f4>
    44ac:	cbz	x22, 44c0 <PyInit__multibytecodec@@Base+0x15cc>
    44b0:	cmp	x22, x21
    44b4:	b.eq	44c0 <PyInit__multibytecodec@@Base+0x15cc>  // b.none
    44b8:	mov	x0, x22
    44bc:	bl	29d0 <PyMem_Free@plt>
    44c0:	ldur	x0, [x29, #-64]
    44c4:	cbz	x0, 44dc <PyInit__multibytecodec@@Base+0x15e8>
    44c8:	ldr	x8, [x0]
    44cc:	subs	x8, x8, #0x1
    44d0:	str	x8, [x0]
    44d4:	b.ne	44dc <PyInit__multibytecodec@@Base+0x15e8>  // b.any
    44d8:	bl	2a50 <_Py_Dealloc@plt>
    44dc:	mov	x0, x20
    44e0:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    44e4:	b	4344 <PyInit__multibytecodec@@Base+0x1450>
    44e8:	cbz	w24, 4550 <PyInit__multibytecodec@@Base+0x165c>
    44ec:	ldur	x8, [x29, #-88]
    44f0:	ldur	x9, [x29, #-72]
    44f4:	cmp	x8, x9
    44f8:	b.cs	4550 <PyInit__multibytecodec@@Base+0x165c>  // b.hs, b.nlast
    44fc:	ldr	x0, [x19, #16]
    4500:	ldr	x2, [x19, #32]
    4504:	sub	x1, x29, #0x58
    4508:	mov	x3, #0xfffffffffffffffe    	// #-2
    450c:	bl	482c <PyInit__multibytecodec@@Base+0x1938>
    4510:	cbz	w0, 4550 <PyInit__multibytecodec@@Base+0x165c>
    4514:	add	x0, x19, #0x28
    4518:	mov	x1, x22
    451c:	mov	x2, x23
    4520:	bl	2970 <memcpy@plt>
    4524:	str	x23, [x19, #48]
    4528:	b	44ac <PyInit__multibytecodec@@Base+0x15b8>
    452c:	ldr	x0, [x20, #8]
    4530:	bl	2da0 <_PyLong_AsInt@plt>
    4534:	mov	w24, w0
    4538:	cmn	w0, #0x1
    453c:	b.ne	439c <PyInit__multibytecodec@@Base+0x14a8>  // b.any
    4540:	bl	2bf0 <PyErr_Occurred@plt>
    4544:	cbnz	x0, 4344 <PyInit__multibytecodec@@Base+0x1450>
    4548:	mov	w24, #0xffffffff            	// #-1
    454c:	b	439c <PyInit__multibytecodec@@Base+0x14a8>
    4550:	ldur	x8, [x29, #-88]
    4554:	ldur	x9, [x29, #-72]
    4558:	cmp	x8, x9
    455c:	b.cs	4570 <PyInit__multibytecodec@@Base+0x167c>  // b.hs, b.nlast
    4560:	sub	x1, x29, #0x58
    4564:	mov	x0, x19
    4568:	bl	4aa4 <PyInit__multibytecodec@@Base+0x1bb0>
    456c:	cbnz	w0, 44ac <PyInit__multibytecodec@@Base+0x15b8>
    4570:	mov	x0, x20
    4574:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    4578:	cbz	x0, 44ac <PyInit__multibytecodec@@Base+0x15b8>
    457c:	mov	x19, x0
    4580:	cmp	x22, x21
    4584:	b.eq	4590 <PyInit__multibytecodec@@Base+0x169c>  // b.none
    4588:	mov	x0, x22
    458c:	bl	29d0 <PyMem_Free@plt>
    4590:	ldur	x0, [x29, #-64]
    4594:	cbz	x0, 4348 <PyInit__multibytecodec@@Base+0x1454>
    4598:	ldr	x8, [x0]
    459c:	subs	x8, x8, #0x1
    45a0:	str	x8, [x0]
    45a4:	b.ne	4348 <PyInit__multibytecodec@@Base+0x1454>  // b.any
    45a8:	bl	2a50 <_Py_Dealloc@plt>
    45ac:	b	4348 <PyInit__multibytecodec@@Base+0x1454>
    45b0:	stp	x29, x30, [sp, #-32]!
    45b4:	stp	x20, x19, [sp, #16]
    45b8:	mov	x29, sp
    45bc:	ldr	x1, [x0, #48]
    45c0:	mov	x20, x0
    45c4:	add	x0, x0, #0x28
    45c8:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    45cc:	cbz	x0, 4620 <PyInit__multibytecodec@@Base+0x172c>
    45d0:	mov	x19, x0
    45d4:	add	x0, x20, #0x18
    45d8:	mov	w1, #0x8                   	// #8
    45dc:	mov	w2, #0x1                   	// #1
    45e0:	mov	w3, wzr
    45e4:	bl	2af0 <_PyLong_FromByteArray@plt>
    45e8:	cbz	x0, 4608 <PyInit__multibytecodec@@Base+0x1714>
    45ec:	mov	x1, x19
    45f0:	ldp	x20, x19, [sp, #16]
    45f4:	mov	x2, x0
    45f8:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    45fc:	add	x0, x0, #0x62d
    4600:	ldp	x29, x30, [sp], #32
    4604:	b	2d70 <_Py_BuildValue_SizeT@plt>
    4608:	ldr	x8, [x19]
    460c:	subs	x8, x8, #0x1
    4610:	str	x8, [x19]
    4614:	b.ne	4620 <PyInit__multibytecodec@@Base+0x172c>  // b.any
    4618:	mov	x0, x19
    461c:	bl	2a50 <_Py_Dealloc@plt>
    4620:	ldp	x20, x19, [sp, #16]
    4624:	mov	x0, xzr
    4628:	ldp	x29, x30, [sp], #32
    462c:	ret
    4630:	sub	sp, sp, #0x40
    4634:	stp	x29, x30, [sp, #32]
    4638:	stp	x20, x19, [sp, #48]
    463c:	add	x29, sp, #0x20
    4640:	ldr	x9, [x1, #8]
    4644:	mov	x8, x1
    4648:	ldrb	w9, [x9, #171]
    464c:	tbnz	w9, #2, 4674 <PyInit__multibytecodec@@Base+0x1780>
    4650:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4654:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4658:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    465c:	add	x0, x0, #0x3c5
    4660:	add	x1, x1, #0x64e
    4664:	add	x2, x2, #0x627
    4668:	mov	x3, x8
    466c:	bl	2b70 <_PyArg_BadArgument@plt>
    4670:	b	46ec <PyInit__multibytecodec@@Base+0x17f8>
    4674:	adrp	x3, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4678:	ldr	x3, [x3, #4040]
    467c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4680:	mov	x19, x0
    4684:	add	x1, x1, #0x630
    4688:	sub	x2, x29, #0x8
    468c:	add	x4, sp, #0x10
    4690:	mov	x0, x8
    4694:	bl	2c50 <_PyArg_ParseTuple_SizeT@plt>
    4698:	cbz	w0, 46ec <PyInit__multibytecodec@@Base+0x17f8>
    469c:	ldr	x0, [sp, #16]
    46a0:	add	x1, sp, #0x8
    46a4:	mov	w2, #0x8                   	// #8
    46a8:	mov	w3, #0x1                   	// #1
    46ac:	mov	w4, wzr
    46b0:	bl	2d30 <_PyLong_AsByteArray@plt>
    46b4:	tbnz	w0, #31, 46ec <PyInit__multibytecodec@@Base+0x17f8>
    46b8:	ldur	x0, [x29, #-8]
    46bc:	bl	2b60 <PyBytes_Size@plt>
    46c0:	cmn	x0, #0x1
    46c4:	b.eq	46ec <PyInit__multibytecodec@@Base+0x17f8>  // b.none
    46c8:	mov	x20, x0
    46cc:	cmp	x0, #0x9
    46d0:	b.lt	4700 <PyInit__multibytecodec@@Base+0x180c>  // b.tstop
    46d4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    46d8:	ldr	x8, [x8, #4048]
    46dc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    46e0:	add	x1, x1, #0x50d
    46e4:	ldr	x0, [x8]
    46e8:	bl	2ae0 <PyErr_SetString@plt>
    46ec:	mov	x0, xzr
    46f0:	ldp	x20, x19, [sp, #48]
    46f4:	ldp	x29, x30, [sp, #32]
    46f8:	add	sp, sp, #0x40
    46fc:	ret
    4700:	ldur	x0, [x29, #-8]
    4704:	bl	2d10 <PyBytes_AsString@plt>
    4708:	cbz	x0, 46f0 <PyInit__multibytecodec@@Base+0x17fc>
    470c:	mov	x1, x0
    4710:	add	x0, x19, #0x28
    4714:	mov	x2, x20
    4718:	str	x20, [x19, #48]
    471c:	bl	2970 <memcpy@plt>
    4720:	ldr	x8, [sp, #8]
    4724:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4728:	str	x8, [x19, #24]
    472c:	ldr	x0, [x0, #4016]
    4730:	ldr	x8, [x0]
    4734:	add	x8, x8, #0x1
    4738:	str	x8, [x0]
    473c:	b	46f0 <PyInit__multibytecodec@@Base+0x17fc>
    4740:	stp	x29, x30, [sp, #-32]!
    4744:	str	x19, [sp, #16]
    4748:	mov	x29, sp
    474c:	ldr	x9, [x0, #16]
    4750:	mov	x19, x0
    4754:	ldr	x8, [x9, #64]
    4758:	cbz	x8, 4774 <PyInit__multibytecodec@@Base+0x1880>
    475c:	ldr	x1, [x9, #8]
    4760:	add	x0, x19, #0x18
    4764:	blr	x8
    4768:	cbz	x0, 4774 <PyInit__multibytecodec@@Base+0x1880>
    476c:	mov	x0, xzr
    4770:	b	478c <PyInit__multibytecodec@@Base+0x1898>
    4774:	str	xzr, [x19, #48]
    4778:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    477c:	ldr	x0, [x0, #4016]
    4780:	ldr	x8, [x0]
    4784:	add	x8, x8, #0x1
    4788:	str	x8, [x0]
    478c:	ldr	x19, [sp, #16]
    4790:	ldp	x29, x30, [sp], #32
    4794:	ret
    4798:	stp	x29, x30, [sp, #-48]!
    479c:	stp	x22, x21, [sp, #16]
    47a0:	stp	x20, x19, [sp, #32]
    47a4:	mov	x29, sp
    47a8:	mov	x19, x1
    47ac:	mov	x20, x0
    47b0:	add	x21, x0, #0x18
    47b4:	add	x22, x1, #0x20
    47b8:	ldr	x8, [x19]
    47bc:	ldr	x9, [x19, #16]
    47c0:	cmp	x8, x9
    47c4:	b.cs	4818 <PyInit__multibytecodec@@Base+0x1924>  // b.hs, b.nlast
    47c8:	ldr	x10, [x20, #16]
    47cc:	sub	x3, x9, x8
    47d0:	mov	x0, x21
    47d4:	mov	x2, x19
    47d8:	ldr	x11, [x10, #48]
    47dc:	ldr	x1, [x10, #8]
    47e0:	mov	x4, x22
    47e4:	blr	x11
    47e8:	mov	x3, x0
    47ec:	cmn	x0, #0x2
    47f0:	mov	w0, wzr
    47f4:	b.eq	481c <PyInit__multibytecodec@@Base+0x1928>  // b.none
    47f8:	cbz	x3, 481c <PyInit__multibytecodec@@Base+0x1928>
    47fc:	ldr	x0, [x20, #16]
    4800:	ldr	x2, [x20, #32]
    4804:	mov	x1, x19
    4808:	bl	482c <PyInit__multibytecodec@@Base+0x1938>
    480c:	cbz	w0, 47b8 <PyInit__multibytecodec@@Base+0x18c4>
    4810:	mov	w0, #0xffffffff            	// #-1
    4814:	b	481c <PyInit__multibytecodec@@Base+0x1928>
    4818:	mov	w0, wzr
    481c:	ldp	x20, x19, [sp, #32]
    4820:	ldp	x22, x21, [sp, #16]
    4824:	ldp	x29, x30, [sp], #48
    4828:	ret
    482c:	stp	x29, x30, [sp, #-64]!
    4830:	str	x23, [sp, #16]
    4834:	stp	x22, x21, [sp, #32]
    4838:	stp	x20, x19, [sp, #48]
    483c:	mov	x29, sp
    4840:	mov	x23, x3
    4844:	mov	x20, x2
    4848:	mov	x19, x1
    484c:	cmp	x3, #0x0
    4850:	mov	x22, x0
    4854:	b.le	4898 <PyInit__multibytecodec@@Base+0x19a4>
    4858:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x310c>
    485c:	add	x21, x21, #0x441
    4860:	cmp	x20, #0x3
    4864:	b.ne	4878 <PyInit__multibytecodec@@Base+0x1984>  // b.any
    4868:	add	x0, x19, #0x20
    486c:	mov	w1, #0xfffd                	// #65533
    4870:	bl	2ca0 <_PyUnicodeWriter_WriteChar@plt>
    4874:	tbnz	w0, #31, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4878:	and	x8, x20, #0xfffffffffffffffe
    487c:	cmp	x8, #0x2
    4880:	b.ne	48d4 <PyInit__multibytecodec@@Base+0x19e0>  // b.any
    4884:	ldr	x8, [x19]
    4888:	mov	w0, wzr
    488c:	add	x8, x8, x23
    4890:	str	x8, [x19]
    4894:	b	49e0 <PyInit__multibytecodec@@Base+0x1aec>
    4898:	add	x8, x23, #0x4
    489c:	cmp	x8, #0x3
    48a0:	b.hi	49c4 <PyInit__multibytecodec@@Base+0x1ad0>  // b.pmore
    48a4:	adrp	x9, 5000 <PyInit__multibytecodec@@Base+0x210c>
    48a8:	add	x9, x9, #0xe88
    48ac:	adr	x10, 48c0 <PyInit__multibytecodec@@Base+0x19cc>
    48b0:	ldrb	w11, [x9, x8]
    48b4:	add	x10, x10, x11, lsl #2
    48b8:	mov	w0, wzr
    48bc:	br	x10
    48c0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    48c4:	ldr	x8, [x8, #3984]
    48c8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    48cc:	add	x1, x1, #0x47a
    48d0:	b	49d4 <PyInit__multibytecodec@@Base+0x1ae0>
    48d4:	ldp	x8, x1, [x19]
    48d8:	ldr	x0, [x19, #24]
    48dc:	sub	x3, x8, x1
    48e0:	add	x23, x3, x23
    48e4:	cbz	x0, 491c <PyInit__multibytecodec@@Base+0x1a28>
    48e8:	mov	x1, x3
    48ec:	bl	29b0 <PyUnicodeDecodeError_SetStart@plt>
    48f0:	cbnz	w0, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    48f4:	ldr	x0, [x19, #24]
    48f8:	mov	x1, x23
    48fc:	bl	2c10 <PyUnicodeDecodeError_SetEnd@plt>
    4900:	cbnz	w0, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4904:	ldr	x0, [x19, #24]
    4908:	mov	x1, x21
    490c:	bl	2a60 <PyUnicodeDecodeError_SetReason@plt>
    4910:	cbnz	w0, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4914:	ldr	x1, [x19, #24]
    4918:	b	4940 <PyInit__multibytecodec@@Base+0x1a4c>
    491c:	ldr	x8, [x19, #16]
    4920:	ldr	x0, [x22]
    4924:	mov	x4, x23
    4928:	mov	x5, x21
    492c:	sub	x2, x8, x1
    4930:	bl	2d90 <PyUnicodeDecodeError_Create@plt>
    4934:	mov	x1, x0
    4938:	str	x0, [x19, #24]
    493c:	cbz	x0, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4940:	cmp	x20, #0x1
    4944:	b.eq	4a0c <PyInit__multibytecodec@@Base+0x1b18>  // b.none
    4948:	mov	x0, x20
    494c:	bl	3eb0 <PyInit__multibytecodec@@Base+0xfbc>
    4950:	cbz	x0, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4954:	ldr	x8, [x0, #8]
    4958:	mov	x20, x0
    495c:	ldrb	w8, [x8, #171]
    4960:	tbz	w8, #2, 4990 <PyInit__multibytecodec@@Base+0x1a9c>
    4964:	ldr	x8, [x20, #16]
    4968:	cmp	x8, #0x2
    496c:	b.ne	4990 <PyInit__multibytecodec@@Base+0x1a9c>  // b.any
    4970:	ldr	x1, [x20, #24]
    4974:	ldr	x8, [x1, #8]
    4978:	ldrb	w8, [x8, #171]
    497c:	tbz	w8, #4, 4990 <PyInit__multibytecodec@@Base+0x1a9c>
    4980:	ldr	x8, [x20, #32]
    4984:	ldr	x8, [x8, #8]
    4988:	ldrb	w8, [x8, #171]
    498c:	tbnz	w8, #0, 4a18 <PyInit__multibytecodec@@Base+0x1b24>
    4990:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4994:	ldr	x8, [x8, #4000]
    4998:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    499c:	add	x1, x1, #0x5f9
    49a0:	ldr	x0, [x8]
    49a4:	bl	2ae0 <PyErr_SetString@plt>
    49a8:	ldr	x8, [x20]
    49ac:	subs	x8, x8, #0x1
    49b0:	str	x8, [x20]
    49b4:	b.ne	49dc <PyInit__multibytecodec@@Base+0x1ae8>  // b.any
    49b8:	mov	x0, x20
    49bc:	bl	2a50 <_Py_Dealloc@plt>
    49c0:	b	49dc <PyInit__multibytecodec@@Base+0x1ae8>
    49c4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    49c8:	ldr	x8, [x8, #3984]
    49cc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    49d0:	add	x1, x1, #0x48f
    49d4:	ldr	x0, [x8]
    49d8:	bl	2ae0 <PyErr_SetString@plt>
    49dc:	mov	w0, #0xffffffff            	// #-1
    49e0:	ldp	x20, x19, [sp, #48]
    49e4:	ldp	x22, x21, [sp, #32]
    49e8:	ldr	x23, [sp, #16]
    49ec:	ldp	x29, x30, [sp], #64
    49f0:	ret
    49f4:	ldr	x8, [x19, #16]
    49f8:	ldr	x9, [x19]
    49fc:	adrp	x21, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4a00:	add	x21, x21, #0x45c
    4a04:	sub	x23, x8, x9
    4a08:	b	4860 <PyInit__multibytecodec@@Base+0x196c>
    4a0c:	mov	x0, x1
    4a10:	bl	2bc0 <PyCodec_StrictErrors@plt>
    4a14:	b	49dc <PyInit__multibytecodec@@Base+0x1ae8>
    4a18:	add	x0, x19, #0x20
    4a1c:	bl	2c90 <_PyUnicodeWriter_WriteStr@plt>
    4a20:	tbnz	w0, #31, 49a8 <PyInit__multibytecodec@@Base+0x1ab4>
    4a24:	ldr	x0, [x20, #32]
    4a28:	bl	2b50 <PyLong_AsSsize_t@plt>
    4a2c:	mov	x21, x0
    4a30:	tbnz	x0, #63, 4a68 <PyInit__multibytecodec@@Base+0x1b74>
    4a34:	ldp	x9, x8, [x19, #8]
    4a38:	add	x9, x9, x21
    4a3c:	cmp	x9, x8
    4a40:	b.hi	4a80 <PyInit__multibytecodec@@Base+0x1b8c>  // b.pmore
    4a44:	str	x9, [x19]
    4a48:	ldr	x8, [x20]
    4a4c:	subs	x8, x8, #0x1
    4a50:	str	x8, [x20]
    4a54:	b.ne	4a60 <PyInit__multibytecodec@@Base+0x1b6c>  // b.any
    4a58:	mov	x0, x20
    4a5c:	bl	2a50 <_Py_Dealloc@plt>
    4a60:	mov	w0, wzr
    4a64:	b	49e0 <PyInit__multibytecodec@@Base+0x1aec>
    4a68:	bl	2bf0 <PyErr_Occurred@plt>
    4a6c:	cbnz	x0, 4a80 <PyInit__multibytecodec@@Base+0x1b8c>
    4a70:	ldp	x9, x8, [x19, #8]
    4a74:	sub	x10, x8, x9
    4a78:	adds	x21, x10, x21
    4a7c:	b.pl	4a38 <PyInit__multibytecodec@@Base+0x1b44>  // b.nfrst
    4a80:	bl	2b90 <PyErr_Clear@plt>
    4a84:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4a88:	ldr	x8, [x8, #4032]
    4a8c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4a90:	add	x1, x1, #0x4df
    4a94:	mov	x2, x21
    4a98:	ldr	x0, [x8]
    4a9c:	bl	2d50 <PyErr_Format@plt>
    4aa0:	b	49a8 <PyInit__multibytecodec@@Base+0x1ab4>
    4aa4:	stp	x29, x30, [sp, #-32]!
    4aa8:	stp	x20, x19, [sp, #16]
    4aac:	mov	x29, sp
    4ab0:	ldr	x9, [x1, #16]
    4ab4:	ldr	x1, [x1]
    4ab8:	ldr	x8, [x0, #48]
    4abc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    4ac0:	sub	x20, x9, x1
    4ac4:	sub	x9, x10, x8
    4ac8:	cmp	x20, x9
    4acc:	b.gt	4b04 <PyInit__multibytecodec@@Base+0x1c10>
    4ad0:	add	x9, x20, x8
    4ad4:	cmp	x9, #0x9
    4ad8:	b.ge	4b04 <PyInit__multibytecodec@@Base+0x1c10>  // b.tcont
    4adc:	add	x8, x0, x8
    4ae0:	mov	x19, x0
    4ae4:	add	x0, x8, #0x28
    4ae8:	mov	x2, x20
    4aec:	bl	2970 <memcpy@plt>
    4af0:	ldr	x8, [x19, #48]
    4af4:	mov	w0, wzr
    4af8:	add	x8, x8, x20
    4afc:	str	x8, [x19, #48]
    4b00:	b	4b20 <PyInit__multibytecodec@@Base+0x1c2c>
    4b04:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4b08:	ldr	x8, [x8, #4048]
    4b0c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4b10:	add	x1, x1, #0x429
    4b14:	ldr	x0, [x8]
    4b18:	bl	2ae0 <PyErr_SetString@plt>
    4b1c:	mov	w0, #0xffffffff            	// #-1
    4b20:	ldp	x20, x19, [sp, #16]
    4b24:	ldp	x29, x30, [sp], #32
    4b28:	ret
    4b2c:	stp	x29, x30, [sp, #-32]!
    4b30:	str	x19, [sp, #16]
    4b34:	mov	x29, sp
    4b38:	mov	x19, x0
    4b3c:	bl	2e00 <PyObject_GC_UnTrack@plt>
    4b40:	ldr	x0, [x19, #32]
    4b44:	cbz	x0, 4b68 <PyInit__multibytecodec@@Base+0x1c74>
    4b48:	cbz	x0, 4b54 <PyInit__multibytecodec@@Base+0x1c60>
    4b4c:	cmp	x0, #0x4
    4b50:	b.cc	4b68 <PyInit__multibytecodec@@Base+0x1c74>  // b.lo, b.ul, b.last
    4b54:	ldr	x8, [x0]
    4b58:	subs	x8, x8, #0x1
    4b5c:	str	x8, [x0]
    4b60:	b.ne	4b68 <PyInit__multibytecodec@@Base+0x1c74>  // b.any
    4b64:	bl	2a50 <_Py_Dealloc@plt>
    4b68:	ldr	x0, [x19, #56]
    4b6c:	cbz	x0, 4b84 <PyInit__multibytecodec@@Base+0x1c90>
    4b70:	ldr	x8, [x0]
    4b74:	subs	x8, x8, #0x1
    4b78:	str	x8, [x0]
    4b7c:	b.ne	4b84 <PyInit__multibytecodec@@Base+0x1c90>  // b.any
    4b80:	bl	2a50 <_Py_Dealloc@plt>
    4b84:	ldr	x8, [x19, #8]
    4b88:	mov	x0, x19
    4b8c:	ldr	x19, [sp, #16]
    4b90:	ldr	x1, [x8, #320]
    4b94:	ldp	x29, x30, [sp], #32
    4b98:	br	x1
    4b9c:	stp	x29, x30, [sp, #-48]!
    4ba0:	str	x21, [sp, #16]
    4ba4:	stp	x20, x19, [sp, #32]
    4ba8:	mov	x29, sp
    4bac:	mov	x21, x0
    4bb0:	ldr	x0, [x0, #32]
    4bb4:	mov	x20, x2
    4bb8:	mov	x19, x1
    4bbc:	cmp	x0, #0x0
    4bc0:	cset	w8, ne  // ne = any
    4bc4:	cmp	x0, #0x4
    4bc8:	cset	w9, cc  // cc = lo, ul, last
    4bcc:	cbz	x0, 4be4 <PyInit__multibytecodec@@Base+0x1cf0>
    4bd0:	and	w8, w9, w8
    4bd4:	tbnz	w8, #0, 4be4 <PyInit__multibytecodec@@Base+0x1cf0>
    4bd8:	mov	x1, x20
    4bdc:	blr	x19
    4be0:	cbnz	w0, 4bfc <PyInit__multibytecodec@@Base+0x1d08>
    4be4:	ldr	x0, [x21, #56]
    4be8:	cbz	x0, 4bf8 <PyInit__multibytecodec@@Base+0x1d04>
    4bec:	mov	x1, x20
    4bf0:	blr	x19
    4bf4:	cbnz	w0, 4bfc <PyInit__multibytecodec@@Base+0x1d08>
    4bf8:	mov	w0, wzr
    4bfc:	ldp	x20, x19, [sp, #32]
    4c00:	ldr	x21, [sp, #16]
    4c04:	ldp	x29, x30, [sp], #48
    4c08:	ret
    4c0c:	mov	w0, wzr
    4c10:	ret
    4c14:	sub	sp, sp, #0x30
    4c18:	stp	x29, x30, [sp, #16]
    4c1c:	stp	x20, x19, [sp, #32]
    4c20:	add	x29, sp, #0x10
    4c24:	mov	x8, x2
    4c28:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4c2c:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4c30:	mov	x20, x0
    4c34:	add	x2, x2, #0x6f2
    4c38:	add	x3, x3, #0xdf8
    4c3c:	add	x4, sp, #0x8
    4c40:	mov	x5, sp
    4c44:	mov	x0, x1
    4c48:	mov	x1, x8
    4c4c:	str	xzr, [sp]
    4c50:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    4c54:	cbz	w0, 4ce8 <PyInit__multibytecodec@@Base+0x1df4>
    4c58:	ldr	x8, [x20, #304]
    4c5c:	mov	x0, x20
    4c60:	mov	x1, xzr
    4c64:	blr	x8
    4c68:	mov	x19, x0
    4c6c:	cbz	x0, 4cec <PyInit__multibytecodec@@Base+0x1df8>
    4c70:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4c74:	add	x1, x1, #0x7df
    4c78:	mov	x0, x20
    4c7c:	bl	2a00 <PyObject_GetAttrString@plt>
    4c80:	mov	x20, x0
    4c84:	cbz	x0, 4cb4 <PyInit__multibytecodec@@Base+0x1dc0>
    4c88:	ldr	x8, [x20, #8]
    4c8c:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    4c90:	add	x9, x9, #0x8e0
    4c94:	cmp	x8, x9
    4c98:	b.eq	4d00 <PyInit__multibytecodec@@Base+0x1e0c>  // b.none
    4c9c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4ca0:	ldr	x8, [x8, #4000]
    4ca4:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4ca8:	add	x1, x1, #0x59a
    4cac:	ldr	x0, [x8]
    4cb0:	bl	2ae0 <PyErr_SetString@plt>
    4cb4:	ldr	x8, [x19]
    4cb8:	subs	x8, x8, #0x1
    4cbc:	str	x8, [x19]
    4cc0:	b.ne	4ccc <PyInit__multibytecodec@@Base+0x1dd8>  // b.any
    4cc4:	mov	x0, x19
    4cc8:	bl	2a50 <_Py_Dealloc@plt>
    4ccc:	cbz	x20, 4ce8 <PyInit__multibytecodec@@Base+0x1df4>
    4cd0:	ldr	x8, [x20]
    4cd4:	subs	x8, x8, #0x1
    4cd8:	str	x8, [x20]
    4cdc:	b.ne	4ce8 <PyInit__multibytecodec@@Base+0x1df4>  // b.any
    4ce0:	mov	x0, x20
    4ce4:	bl	2a50 <_Py_Dealloc@plt>
    4ce8:	mov	x19, xzr
    4cec:	mov	x0, x19
    4cf0:	ldp	x20, x19, [sp, #32]
    4cf4:	ldp	x29, x30, [sp, #16]
    4cf8:	add	sp, sp, #0x30
    4cfc:	ret
    4d00:	ldr	x8, [x20, #16]
    4d04:	str	x8, [x19, #16]
    4d08:	ldr	x8, [sp, #8]
    4d0c:	str	x8, [x19, #56]
    4d10:	ldr	x9, [x8]
    4d14:	add	x9, x9, #0x1
    4d18:	str	x9, [x8]
    4d1c:	str	xzr, [x19, #48]
    4d20:	ldr	x0, [sp]
    4d24:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    4d28:	str	x0, [x19, #32]
    4d2c:	cbz	x0, 4cb4 <PyInit__multibytecodec@@Base+0x1dc0>
    4d30:	ldr	x9, [x19, #16]
    4d34:	ldr	x8, [x9, #56]
    4d38:	cbz	x8, 4d4c <PyInit__multibytecodec@@Base+0x1e58>
    4d3c:	ldr	x1, [x9, #8]
    4d40:	add	x0, x19, #0x18
    4d44:	blr	x8
    4d48:	cbnz	w0, 4cb4 <PyInit__multibytecodec@@Base+0x1dc0>
    4d4c:	ldr	x8, [x20]
    4d50:	subs	x8, x8, #0x1
    4d54:	str	x8, [x20]
    4d58:	b.ne	4cec <PyInit__multibytecodec@@Base+0x1df8>  // b.any
    4d5c:	mov	x0, x20
    4d60:	bl	2a50 <_Py_Dealloc@plt>
    4d64:	b	4cec <PyInit__multibytecodec@@Base+0x1df8>
    4d68:	stp	x29, x30, [sp, #-48]!
    4d6c:	str	x21, [sp, #16]
    4d70:	stp	x20, x19, [sp, #32]
    4d74:	mov	x29, sp
    4d78:	mov	x21, x2
    4d7c:	mov	x20, x1
    4d80:	cmp	x2, #0x2
    4d84:	mov	x19, x0
    4d88:	b.cc	4da8 <PyInit__multibytecodec@@Base+0x1eb4>  // b.lo, b.ul, b.last
    4d8c:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4d90:	add	x0, x0, #0x683
    4d94:	mov	w3, #0x1                   	// #1
    4d98:	mov	x1, x21
    4d9c:	mov	x2, xzr
    4da0:	bl	2be0 <_PyArg_CheckPositional@plt>
    4da4:	cbz	w0, 4e04 <PyInit__multibytecodec@@Base+0x1f10>
    4da8:	cmp	x21, #0x1
    4dac:	b.lt	4dfc <PyInit__multibytecodec@@Base+0x1f08>  // b.tstop
    4db0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4db4:	ldr	x0, [x20]
    4db8:	ldr	x8, [x8, #4016]
    4dbc:	cmp	x0, x8
    4dc0:	b.eq	4dfc <PyInit__multibytecodec@@Base+0x1f08>  // b.none
    4dc4:	ldr	x8, [x0, #8]
    4dc8:	ldrb	w8, [x8, #171]
    4dcc:	tbnz	w8, #0, 4dec <PyInit__multibytecodec@@Base+0x1ef8>
    4dd0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4dd4:	ldr	x8, [x8, #4000]
    4dd8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4ddc:	add	x1, x1, #0x69b
    4de0:	ldr	x0, [x8]
    4de4:	bl	2ae0 <PyErr_SetString@plt>
    4de8:	b	4e04 <PyInit__multibytecodec@@Base+0x1f10>
    4dec:	bl	2b50 <PyLong_AsSsize_t@plt>
    4df0:	mov	x2, x0
    4df4:	cmn	x0, #0x1
    4df8:	b.ne	4e1c <PyInit__multibytecodec@@Base+0x1f28>  // b.any
    4dfc:	bl	2bf0 <PyErr_Occurred@plt>
    4e00:	cbz	x0, 4e18 <PyInit__multibytecodec@@Base+0x1f24>
    4e04:	ldp	x20, x19, [sp, #32]
    4e08:	ldr	x21, [sp, #16]
    4e0c:	mov	x0, xzr
    4e10:	ldp	x29, x30, [sp], #48
    4e14:	ret
    4e18:	mov	x2, #0xffffffffffffffff    	// #-1
    4e1c:	mov	x0, x19
    4e20:	ldp	x20, x19, [sp, #32]
    4e24:	ldr	x21, [sp, #16]
    4e28:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4e2c:	add	x1, x1, #0x683
    4e30:	ldp	x29, x30, [sp], #48
    4e34:	b	5058 <PyInit__multibytecodec@@Base+0x2164>
    4e38:	stp	x29, x30, [sp, #-48]!
    4e3c:	str	x21, [sp, #16]
    4e40:	stp	x20, x19, [sp, #32]
    4e44:	mov	x29, sp
    4e48:	mov	x21, x2
    4e4c:	mov	x20, x1
    4e50:	cmp	x2, #0x2
    4e54:	mov	x19, x0
    4e58:	b.cc	4e78 <PyInit__multibytecodec@@Base+0x1f84>  // b.lo, b.ul, b.last
    4e5c:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4e60:	add	x0, x0, #0x688
    4e64:	mov	w3, #0x1                   	// #1
    4e68:	mov	x1, x21
    4e6c:	mov	x2, xzr
    4e70:	bl	2be0 <_PyArg_CheckPositional@plt>
    4e74:	cbz	w0, 4ed4 <PyInit__multibytecodec@@Base+0x1fe0>
    4e78:	cmp	x21, #0x1
    4e7c:	b.lt	4ecc <PyInit__multibytecodec@@Base+0x1fd8>  // b.tstop
    4e80:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4e84:	ldr	x0, [x20]
    4e88:	ldr	x8, [x8, #4016]
    4e8c:	cmp	x0, x8
    4e90:	b.eq	4ecc <PyInit__multibytecodec@@Base+0x1fd8>  // b.none
    4e94:	ldr	x8, [x0, #8]
    4e98:	ldrb	w8, [x8, #171]
    4e9c:	tbnz	w8, #0, 4ebc <PyInit__multibytecodec@@Base+0x1fc8>
    4ea0:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4ea4:	ldr	x8, [x8, #4000]
    4ea8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4eac:	add	x1, x1, #0x69b
    4eb0:	ldr	x0, [x8]
    4eb4:	bl	2ae0 <PyErr_SetString@plt>
    4eb8:	b	4ed4 <PyInit__multibytecodec@@Base+0x1fe0>
    4ebc:	bl	2b50 <PyLong_AsSsize_t@plt>
    4ec0:	mov	x2, x0
    4ec4:	cmn	x0, #0x1
    4ec8:	b.ne	4eec <PyInit__multibytecodec@@Base+0x1ff8>  // b.any
    4ecc:	bl	2bf0 <PyErr_Occurred@plt>
    4ed0:	cbz	x0, 4ee8 <PyInit__multibytecodec@@Base+0x1ff4>
    4ed4:	ldp	x20, x19, [sp, #32]
    4ed8:	ldr	x21, [sp, #16]
    4edc:	mov	x0, xzr
    4ee0:	ldp	x29, x30, [sp], #48
    4ee4:	ret
    4ee8:	mov	x2, #0xffffffffffffffff    	// #-1
    4eec:	mov	x0, x19
    4ef0:	ldp	x20, x19, [sp, #32]
    4ef4:	ldr	x21, [sp, #16]
    4ef8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4efc:	add	x1, x1, #0x688
    4f00:	ldp	x29, x30, [sp], #48
    4f04:	b	5058 <PyInit__multibytecodec@@Base+0x2164>
    4f08:	stp	x29, x30, [sp, #-48]!
    4f0c:	str	x21, [sp, #16]
    4f10:	stp	x20, x19, [sp, #32]
    4f14:	mov	x29, sp
    4f18:	mov	x21, x2
    4f1c:	mov	x20, x1
    4f20:	cmp	x2, #0x2
    4f24:	mov	x19, x0
    4f28:	b.cc	4f48 <PyInit__multibytecodec@@Base+0x2054>  // b.lo, b.ul, b.last
    4f2c:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4f30:	add	x0, x0, #0x691
    4f34:	mov	w3, #0x1                   	// #1
    4f38:	mov	x1, x21
    4f3c:	mov	x2, xzr
    4f40:	bl	2be0 <_PyArg_CheckPositional@plt>
    4f44:	cbz	w0, 4fe8 <PyInit__multibytecodec@@Base+0x20f4>
    4f48:	cmp	x21, #0x1
    4f4c:	b.lt	4f9c <PyInit__multibytecodec@@Base+0x20a8>  // b.tstop
    4f50:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4f54:	ldr	x0, [x20]
    4f58:	ldr	x8, [x8, #4016]
    4f5c:	cmp	x0, x8
    4f60:	b.eq	4f9c <PyInit__multibytecodec@@Base+0x20a8>  // b.none
    4f64:	ldr	x8, [x0, #8]
    4f68:	ldrb	w8, [x8, #171]
    4f6c:	tbnz	w8, #0, 4f8c <PyInit__multibytecodec@@Base+0x2098>
    4f70:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    4f74:	ldr	x8, [x8, #4000]
    4f78:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4f7c:	add	x1, x1, #0x69b
    4f80:	ldr	x0, [x8]
    4f84:	bl	2ae0 <PyErr_SetString@plt>
    4f88:	b	4fe8 <PyInit__multibytecodec@@Base+0x20f4>
    4f8c:	bl	2b50 <PyLong_AsSsize_t@plt>
    4f90:	mov	x2, x0
    4f94:	cmn	x0, #0x1
    4f98:	b.ne	4fa8 <PyInit__multibytecodec@@Base+0x20b4>  // b.any
    4f9c:	bl	2bf0 <PyErr_Occurred@plt>
    4fa0:	cbnz	x0, 4fe8 <PyInit__multibytecodec@@Base+0x20f4>
    4fa4:	mov	x2, #0xffffffffffffffff    	// #-1
    4fa8:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    4fac:	add	x1, x1, #0x683
    4fb0:	mov	x0, x19
    4fb4:	bl	5058 <PyInit__multibytecodec@@Base+0x2164>
    4fb8:	cbz	x0, 4fe8 <PyInit__multibytecodec@@Base+0x20f4>
    4fbc:	mov	w1, #0x1                   	// #1
    4fc0:	mov	x20, x0
    4fc4:	bl	2dc0 <PyUnicode_Splitlines@plt>
    4fc8:	ldr	x8, [x20]
    4fcc:	mov	x19, x0
    4fd0:	subs	x8, x8, #0x1
    4fd4:	str	x8, [x20]
    4fd8:	b.ne	4fec <PyInit__multibytecodec@@Base+0x20f8>  // b.any
    4fdc:	mov	x0, x20
    4fe0:	bl	2a50 <_Py_Dealloc@plt>
    4fe4:	b	4fec <PyInit__multibytecodec@@Base+0x20f8>
    4fe8:	mov	x19, xzr
    4fec:	mov	x0, x19
    4ff0:	ldp	x20, x19, [sp, #32]
    4ff4:	ldr	x21, [sp, #16]
    4ff8:	ldp	x29, x30, [sp], #48
    4ffc:	ret
    5000:	stp	x29, x30, [sp, #-32]!
    5004:	str	x19, [sp, #16]
    5008:	mov	x29, sp
    500c:	ldr	x9, [x0, #16]
    5010:	mov	x19, x0
    5014:	ldr	x8, [x9, #64]
    5018:	cbz	x8, 5034 <PyInit__multibytecodec@@Base+0x2140>
    501c:	ldr	x1, [x9, #8]
    5020:	add	x0, x19, #0x18
    5024:	blr	x8
    5028:	cbz	x0, 5034 <PyInit__multibytecodec@@Base+0x2140>
    502c:	mov	x0, xzr
    5030:	b	504c <PyInit__multibytecodec@@Base+0x2158>
    5034:	str	xzr, [x19, #48]
    5038:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    503c:	ldr	x0, [x0, #4016]
    5040:	ldr	x8, [x0]
    5044:	add	x8, x8, #0x1
    5048:	str	x8, [x0]
    504c:	ldr	x19, [sp, #16]
    5050:	ldp	x29, x30, [sp], #32
    5054:	ret
    5058:	sub	sp, sp, #0xc0
    505c:	stp	x29, x30, [sp, #96]
    5060:	stp	x28, x27, [sp, #112]
    5064:	stp	x26, x25, [sp, #128]
    5068:	stp	x24, x23, [sp, #144]
    506c:	stp	x22, x21, [sp, #160]
    5070:	stp	x20, x19, [sp, #176]
    5074:	add	x29, sp, #0x60
    5078:	cbz	x2, 5248 <PyInit__multibytecodec@@Base+0x2354>
    507c:	add	x8, sp, #0x8
    5080:	add	x19, x8, #0x20
    5084:	mov	x21, x0
    5088:	mov	x0, x19
    508c:	mov	x22, x2
    5090:	mov	x20, x1
    5094:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    5098:	adrp	x24, 6000 <PyInit__multibytecodec@@Base+0x310c>
    509c:	add	x23, x21, #0x28
    50a0:	add	x24, x24, #0x6b4
    50a4:	str	xzr, [sp, #32]
    50a8:	ldr	x0, [x21, #56]
    50ac:	mov	x1, x20
    50b0:	tbnz	x22, #63, 50c4 <PyInit__multibytecodec@@Base+0x21d0>
    50b4:	mov	x2, x24
    50b8:	mov	x3, x22
    50bc:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    50c0:	b	50cc <PyInit__multibytecodec@@Base+0x21d8>
    50c4:	mov	x2, xzr
    50c8:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    50cc:	mov	x26, x0
    50d0:	cbz	x0, 52a0 <PyInit__multibytecodec@@Base+0x23ac>
    50d4:	ldr	x8, [x26, #8]
    50d8:	ldrb	w9, [x8, #171]
    50dc:	tbz	w9, #3, 5264 <PyInit__multibytecodec@@Base+0x2370>
    50e0:	ldr	x8, [x21, #48]
    50e4:	ldr	x28, [x26, #16]
    50e8:	cmp	x8, #0x1
    50ec:	b.lt	5160 <PyInit__multibytecodec@@Base+0x226c>  // b.tstop
    50f0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
    50f4:	sub	x9, x9, x8
    50f8:	cmp	x28, x9
    50fc:	b.gt	5284 <PyInit__multibytecodec@@Base+0x2390>
    5100:	add	x1, x8, x28
    5104:	mov	x0, xzr
    5108:	bl	2a30 <PyBytes_FromStringAndSize@plt>
    510c:	cbz	x0, 5288 <PyInit__multibytecodec@@Base+0x2394>
    5110:	ldr	x2, [x21, #48]
    5114:	add	x27, x0, #0x20
    5118:	mov	x25, x0
    511c:	mov	x0, x27
    5120:	mov	x1, x23
    5124:	bl	2970 <memcpy@plt>
    5128:	ldr	x8, [x21, #48]
    512c:	ldr	x2, [x26, #16]
    5130:	add	x1, x26, #0x20
    5134:	add	x0, x27, x8
    5138:	bl	2970 <memcpy@plt>
    513c:	ldr	x8, [x26]
    5140:	subs	x8, x8, #0x1
    5144:	str	x8, [x26]
    5148:	b.ne	5154 <PyInit__multibytecodec@@Base+0x2260>  // b.any
    514c:	mov	x0, x26
    5150:	bl	2a50 <_Py_Dealloc@plt>
    5154:	str	xzr, [x21, #48]
    5158:	ldr	x27, [x25, #16]
    515c:	b	5168 <PyInit__multibytecodec@@Base+0x2274>
    5160:	mov	x27, x28
    5164:	mov	x25, x26
    5168:	ldr	x9, [sp, #80]
    516c:	add	x8, x25, #0x20
    5170:	stp	x8, x8, [sp, #8]
    5174:	add	x8, x8, x27
    5178:	str	x8, [sp, #24]
    517c:	add	x8, x9, x27
    5180:	cmp	x27, #0x1
    5184:	str	x8, [sp, #80]
    5188:	b.lt	519c <PyInit__multibytecodec@@Base+0x22a8>  // b.tstop
    518c:	add	x1, sp, #0x8
    5190:	mov	x0, x21
    5194:	bl	4798 <PyInit__multibytecodec@@Base+0x18a4>
    5198:	cbnz	w0, 525c <PyInit__multibytecodec@@Base+0x2368>
    519c:	tbnz	x22, #63, 51a4 <PyInit__multibytecodec@@Base+0x22b0>
    51a0:	cbnz	x28, 51cc <PyInit__multibytecodec@@Base+0x22d8>
    51a4:	ldr	x8, [sp, #8]
    51a8:	ldr	x9, [sp, #24]
    51ac:	cmp	x8, x9
    51b0:	b.cs	51cc <PyInit__multibytecodec@@Base+0x22d8>  // b.hs, b.nlast
    51b4:	ldr	x0, [x21, #16]
    51b8:	ldr	x2, [x21, #32]
    51bc:	add	x1, sp, #0x8
    51c0:	mov	x3, #0xfffffffffffffffe    	// #-2
    51c4:	bl	482c <PyInit__multibytecodec@@Base+0x1938>
    51c8:	cbnz	w0, 525c <PyInit__multibytecodec@@Base+0x2368>
    51cc:	ldr	x8, [sp, #8]
    51d0:	ldr	x9, [sp, #24]
    51d4:	cmp	x8, x9
    51d8:	b.cs	51ec <PyInit__multibytecodec@@Base+0x22f8>  // b.hs, b.nlast
    51dc:	add	x1, sp, #0x8
    51e0:	mov	x0, x21
    51e4:	bl	4aa4 <PyInit__multibytecodec@@Base+0x1bb0>
    51e8:	cbnz	w0, 525c <PyInit__multibytecodec@@Base+0x2368>
    51ec:	ldr	x8, [x25]
    51f0:	subs	x8, x8, #0x1
    51f4:	str	x8, [x25]
    51f8:	b.ne	5204 <PyInit__multibytecodec@@Base+0x2310>  // b.any
    51fc:	mov	x0, x25
    5200:	bl	2a50 <_Py_Dealloc@plt>
    5204:	tbnz	x22, #63, 5218 <PyInit__multibytecodec@@Base+0x2324>
    5208:	cbz	x27, 5218 <PyInit__multibytecodec@@Base+0x2324>
    520c:	ldr	x8, [sp, #72]
    5210:	mov	w22, #0x1                   	// #1
    5214:	cbz	x8, 50a8 <PyInit__multibytecodec@@Base+0x21b4>
    5218:	mov	x0, x19
    521c:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    5220:	cbz	x0, 52a0 <PyInit__multibytecodec@@Base+0x23ac>
    5224:	mov	x20, x0
    5228:	ldr	x0, [sp, #32]
    522c:	cbz	x0, 52c8 <PyInit__multibytecodec@@Base+0x23d4>
    5230:	ldr	x8, [x0]
    5234:	subs	x8, x8, #0x1
    5238:	str	x8, [x0]
    523c:	b.ne	52c8 <PyInit__multibytecodec@@Base+0x23d4>  // b.any
    5240:	bl	2a50 <_Py_Dealloc@plt>
    5244:	b	52c8 <PyInit__multibytecodec@@Base+0x23d4>
    5248:	mov	x0, xzr
    524c:	mov	w1, wzr
    5250:	bl	2de0 <PyUnicode_New@plt>
    5254:	mov	x20, x0
    5258:	b	52c8 <PyInit__multibytecodec@@Base+0x23d4>
    525c:	mov	x26, x25
    5260:	b	5288 <PyInit__multibytecodec@@Base+0x2394>
    5264:	adrp	x9, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5268:	ldr	x9, [x9, #4000]
    526c:	ldr	x2, [x8, #24]
    5270:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5274:	add	x1, x1, #0x6b6
    5278:	ldr	x0, [x9]
    527c:	bl	2d50 <PyErr_Format@plt>
    5280:	b	5288 <PyInit__multibytecodec@@Base+0x2394>
    5284:	bl	2a70 <PyErr_NoMemory@plt>
    5288:	ldr	x8, [x26]
    528c:	subs	x8, x8, #0x1
    5290:	str	x8, [x26]
    5294:	b.ne	52a0 <PyInit__multibytecodec@@Base+0x23ac>  // b.any
    5298:	mov	x0, x26
    529c:	bl	2a50 <_Py_Dealloc@plt>
    52a0:	ldr	x0, [sp, #32]
    52a4:	cbz	x0, 52bc <PyInit__multibytecodec@@Base+0x23c8>
    52a8:	ldr	x8, [x0]
    52ac:	subs	x8, x8, #0x1
    52b0:	str	x8, [x0]
    52b4:	b.ne	52bc <PyInit__multibytecodec@@Base+0x23c8>  // b.any
    52b8:	bl	2a50 <_Py_Dealloc@plt>
    52bc:	mov	x0, x19
    52c0:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    52c4:	mov	x20, xzr
    52c8:	mov	x0, x20
    52cc:	ldp	x20, x19, [sp, #176]
    52d0:	ldp	x22, x21, [sp, #160]
    52d4:	ldp	x24, x23, [sp, #144]
    52d8:	ldp	x26, x25, [sp, #128]
    52dc:	ldp	x28, x27, [sp, #112]
    52e0:	ldp	x29, x30, [sp, #96]
    52e4:	add	sp, sp, #0xc0
    52e8:	ret
    52ec:	stp	x29, x30, [sp, #-32]!
    52f0:	str	x19, [sp, #16]
    52f4:	mov	x29, sp
    52f8:	mov	x19, x0
    52fc:	bl	2e00 <PyObject_GC_UnTrack@plt>
    5300:	ldr	x0, [x19, #32]
    5304:	cbz	x0, 5328 <PyInit__multibytecodec@@Base+0x2434>
    5308:	cbz	x0, 5314 <PyInit__multibytecodec@@Base+0x2420>
    530c:	cmp	x0, #0x4
    5310:	b.cc	5328 <PyInit__multibytecodec@@Base+0x2434>  // b.lo, b.ul, b.last
    5314:	ldr	x8, [x0]
    5318:	subs	x8, x8, #0x1
    531c:	str	x8, [x0]
    5320:	b.ne	5328 <PyInit__multibytecodec@@Base+0x2434>  // b.any
    5324:	bl	2a50 <_Py_Dealloc@plt>
    5328:	ldr	x0, [x19, #48]
    532c:	cbz	x0, 5344 <PyInit__multibytecodec@@Base+0x2450>
    5330:	ldr	x8, [x0]
    5334:	subs	x8, x8, #0x1
    5338:	str	x8, [x0]
    533c:	b.ne	5344 <PyInit__multibytecodec@@Base+0x2450>  // b.any
    5340:	bl	2a50 <_Py_Dealloc@plt>
    5344:	ldr	x8, [x19, #8]
    5348:	mov	x0, x19
    534c:	ldr	x19, [sp, #16]
    5350:	ldr	x1, [x8, #320]
    5354:	ldp	x29, x30, [sp], #32
    5358:	br	x1
    535c:	stp	x29, x30, [sp, #-48]!
    5360:	str	x21, [sp, #16]
    5364:	stp	x20, x19, [sp, #32]
    5368:	mov	x29, sp
    536c:	mov	x21, x0
    5370:	ldr	x0, [x0, #32]
    5374:	mov	x20, x2
    5378:	mov	x19, x1
    537c:	cmp	x0, #0x0
    5380:	cset	w8, ne  // ne = any
    5384:	cmp	x0, #0x4
    5388:	cset	w9, cc  // cc = lo, ul, last
    538c:	cbz	x0, 53a4 <PyInit__multibytecodec@@Base+0x24b0>
    5390:	and	w8, w9, w8
    5394:	tbnz	w8, #0, 53a4 <PyInit__multibytecodec@@Base+0x24b0>
    5398:	mov	x1, x20
    539c:	blr	x19
    53a0:	cbnz	w0, 53bc <PyInit__multibytecodec@@Base+0x24c8>
    53a4:	ldr	x0, [x21, #48]
    53a8:	cbz	x0, 53b8 <PyInit__multibytecodec@@Base+0x24c4>
    53ac:	mov	x1, x20
    53b0:	blr	x19
    53b4:	cbnz	w0, 53bc <PyInit__multibytecodec@@Base+0x24c8>
    53b8:	mov	w0, wzr
    53bc:	ldp	x20, x19, [sp, #32]
    53c0:	ldr	x21, [sp, #16]
    53c4:	ldp	x29, x30, [sp], #48
    53c8:	ret
    53cc:	mov	w0, wzr
    53d0:	ret
    53d4:	sub	sp, sp, #0x30
    53d8:	stp	x29, x30, [sp, #16]
    53dc:	stp	x20, x19, [sp, #32]
    53e0:	add	x29, sp, #0x10
    53e4:	mov	x8, x2
    53e8:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    53ec:	adrp	x3, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    53f0:	mov	x20, x0
    53f4:	add	x2, x2, #0x748
    53f8:	add	x3, x3, #0xdf8
    53fc:	add	x4, sp, #0x8
    5400:	mov	x5, sp
    5404:	mov	x0, x1
    5408:	mov	x1, x8
    540c:	str	xzr, [sp]
    5410:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    5414:	cbz	w0, 54a8 <PyInit__multibytecodec@@Base+0x25b4>
    5418:	ldr	x8, [x20, #304]
    541c:	mov	x0, x20
    5420:	mov	x1, xzr
    5424:	blr	x8
    5428:	mov	x19, x0
    542c:	cbz	x0, 54ac <PyInit__multibytecodec@@Base+0x25b8>
    5430:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5434:	add	x1, x1, #0x7df
    5438:	mov	x0, x20
    543c:	bl	2a00 <PyObject_GetAttrString@plt>
    5440:	mov	x20, x0
    5444:	cbz	x0, 5474 <PyInit__multibytecodec@@Base+0x2580>
    5448:	ldr	x8, [x20, #8]
    544c:	adrp	x9, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5450:	add	x9, x9, #0x8e0
    5454:	cmp	x8, x9
    5458:	b.eq	54c0 <PyInit__multibytecodec@@Base+0x25cc>  // b.none
    545c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5460:	ldr	x8, [x8, #4000]
    5464:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5468:	add	x1, x1, #0x59a
    546c:	ldr	x0, [x8]
    5470:	bl	2ae0 <PyErr_SetString@plt>
    5474:	ldr	x8, [x19]
    5478:	subs	x8, x8, #0x1
    547c:	str	x8, [x19]
    5480:	b.ne	548c <PyInit__multibytecodec@@Base+0x2598>  // b.any
    5484:	mov	x0, x19
    5488:	bl	2a50 <_Py_Dealloc@plt>
    548c:	cbz	x20, 54a8 <PyInit__multibytecodec@@Base+0x25b4>
    5490:	ldr	x8, [x20]
    5494:	subs	x8, x8, #0x1
    5498:	str	x8, [x20]
    549c:	b.ne	54a8 <PyInit__multibytecodec@@Base+0x25b4>  // b.any
    54a0:	mov	x0, x20
    54a4:	bl	2a50 <_Py_Dealloc@plt>
    54a8:	mov	x19, xzr
    54ac:	mov	x0, x19
    54b0:	ldp	x20, x19, [sp, #32]
    54b4:	ldp	x29, x30, [sp, #16]
    54b8:	add	sp, sp, #0x30
    54bc:	ret
    54c0:	ldr	x8, [x20, #16]
    54c4:	str	x8, [x19, #16]
    54c8:	ldr	x8, [sp, #8]
    54cc:	str	x8, [x19, #48]
    54d0:	ldr	x9, [x8]
    54d4:	add	x9, x9, #0x1
    54d8:	str	x9, [x8]
    54dc:	str	xzr, [x19, #40]
    54e0:	ldr	x0, [sp]
    54e4:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    54e8:	str	x0, [x19, #32]
    54ec:	cbz	x0, 5474 <PyInit__multibytecodec@@Base+0x2580>
    54f0:	ldr	x9, [x19, #16]
    54f4:	ldr	x8, [x9, #32]
    54f8:	cbz	x8, 550c <PyInit__multibytecodec@@Base+0x2618>
    54fc:	ldr	x1, [x9, #8]
    5500:	add	x0, x19, #0x18
    5504:	blr	x8
    5508:	cbnz	w0, 5474 <PyInit__multibytecodec@@Base+0x2580>
    550c:	ldr	x8, [x20]
    5510:	subs	x8, x8, #0x1
    5514:	str	x8, [x20]
    5518:	b.ne	54ac <PyInit__multibytecodec@@Base+0x25b8>  // b.any
    551c:	mov	x0, x20
    5520:	bl	2a50 <_Py_Dealloc@plt>
    5524:	b	54ac <PyInit__multibytecodec@@Base+0x25b8>
    5528:	stp	x29, x30, [sp, #-16]!
    552c:	mov	x29, sp
    5530:	bl	5730 <PyInit__multibytecodec@@Base+0x283c>
    5534:	cbz	w0, 5540 <PyInit__multibytecodec@@Base+0x264c>
    5538:	mov	x0, xzr
    553c:	b	5554 <PyInit__multibytecodec@@Base+0x2660>
    5540:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5544:	ldr	x0, [x0, #4016]
    5548:	ldr	x8, [x0]
    554c:	add	x8, x8, #0x1
    5550:	str	x8, [x0]
    5554:	ldp	x29, x30, [sp], #16
    5558:	ret
    555c:	stp	x29, x30, [sp, #-64]!
    5560:	str	x23, [sp, #16]
    5564:	stp	x22, x21, [sp, #32]
    5568:	stp	x20, x19, [sp, #48]
    556c:	mov	x29, sp
    5570:	mov	x20, x0
    5574:	mov	x0, x1
    5578:	mov	x19, x1
    557c:	bl	2990 <PySequence_Check@plt>
    5580:	cbz	w0, 561c <PyInit__multibytecodec@@Base+0x2728>
    5584:	mov	x0, x19
    5588:	bl	2b80 <PySequence_Size@plt>
    558c:	cmp	x0, #0x1
    5590:	b.lt	55fc <PyInit__multibytecodec@@Base+0x2708>  // b.tstop
    5594:	mov	x21, xzr
    5598:	mov	w23, #0x1                   	// #1
    559c:	mov	x0, x19
    55a0:	mov	x1, x21
    55a4:	bl	2b00 <PySequence_GetItem@plt>
    55a8:	cbz	x0, 5638 <PyInit__multibytecodec@@Base+0x2744>
    55ac:	mov	x21, x0
    55b0:	mov	x0, x20
    55b4:	mov	x1, x21
    55b8:	bl	5730 <PyInit__multibytecodec@@Base+0x283c>
    55bc:	ldr	x8, [x21]
    55c0:	mov	w22, w0
    55c4:	subs	x8, x8, #0x1
    55c8:	str	x8, [x21]
    55cc:	b.ne	55d8 <PyInit__multibytecodec@@Base+0x26e4>  // b.any
    55d0:	mov	x0, x21
    55d4:	bl	2a50 <_Py_Dealloc@plt>
    55d8:	cmn	w22, #0x1
    55dc:	b.eq	5634 <PyInit__multibytecodec@@Base+0x2740>  // b.none
    55e0:	mov	x0, x19
    55e4:	sxtw	x21, w23
    55e8:	bl	2b80 <PySequence_Size@plt>
    55ec:	add	w8, w23, #0x1
    55f0:	cmp	x0, w23, sxtw
    55f4:	mov	w23, w8
    55f8:	b.gt	559c <PyInit__multibytecodec@@Base+0x26a8>
    55fc:	bl	2bf0 <PyErr_Occurred@plt>
    5600:	cbnz	x0, 5634 <PyInit__multibytecodec@@Base+0x2740>
    5604:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5608:	ldr	x0, [x0, #4016]
    560c:	ldr	x8, [x0]
    5610:	add	x8, x8, #0x1
    5614:	str	x8, [x0]
    5618:	b	5638 <PyInit__multibytecodec@@Base+0x2744>
    561c:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5620:	ldr	x8, [x8, #4000]
    5624:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5628:	add	x1, x1, #0x72a
    562c:	ldr	x0, [x8]
    5630:	bl	2ae0 <PyErr_SetString@plt>
    5634:	mov	x0, xzr
    5638:	ldp	x20, x19, [sp, #48]
    563c:	ldp	x22, x21, [sp, #32]
    5640:	ldr	x23, [sp, #16]
    5644:	ldp	x29, x30, [sp], #64
    5648:	ret
    564c:	stp	x29, x30, [sp, #-32]!
    5650:	stp	x20, x19, [sp, #16]
    5654:	mov	x29, sp
    5658:	ldr	x2, [x0, #40]
    565c:	cbz	x2, 56e0 <PyInit__multibytecodec@@Base+0x27ec>
    5660:	mov	x20, x0
    5664:	ldr	x0, [x0, #16]
    5668:	ldr	x4, [x20, #32]
    566c:	add	x1, x20, #0x18
    5670:	mov	w5, #0x3                   	// #3
    5674:	mov	x3, xzr
    5678:	bl	3770 <PyInit__multibytecodec@@Base+0x87c>
    567c:	ldr	x8, [x20, #40]
    5680:	mov	x19, x0
    5684:	cbz	x8, 569c <PyInit__multibytecodec@@Base+0x27a8>
    5688:	str	xzr, [x20, #40]
    568c:	ldr	x9, [x8]
    5690:	subs	x9, x9, #0x1
    5694:	str	x9, [x8]
    5698:	b.eq	56f8 <PyInit__multibytecodec@@Base+0x2804>  // b.none
    569c:	cbz	x19, 5720 <PyInit__multibytecodec@@Base+0x282c>
    56a0:	mov	x0, x19
    56a4:	bl	2b60 <PyBytes_Size@plt>
    56a8:	cmp	x0, #0x1
    56ac:	b.lt	56c8 <PyInit__multibytecodec@@Base+0x27d4>  // b.tstop
    56b0:	ldr	x0, [x20, #48]
    56b4:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    56b8:	add	x1, x1, #0xee0
    56bc:	mov	x2, x19
    56c0:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    56c4:	cbz	x0, 5708 <PyInit__multibytecodec@@Base+0x2814>
    56c8:	ldr	x8, [x19]
    56cc:	subs	x8, x8, #0x1
    56d0:	str	x8, [x19]
    56d4:	b.ne	56e0 <PyInit__multibytecodec@@Base+0x27ec>  // b.any
    56d8:	mov	x0, x19
    56dc:	bl	2a50 <_Py_Dealloc@plt>
    56e0:	adrp	x0, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    56e4:	ldr	x0, [x0, #4016]
    56e8:	ldr	x8, [x0]
    56ec:	add	x8, x8, #0x1
    56f0:	str	x8, [x0]
    56f4:	b	5724 <PyInit__multibytecodec@@Base+0x2830>
    56f8:	mov	x0, x8
    56fc:	bl	2a50 <_Py_Dealloc@plt>
    5700:	cbnz	x19, 56a0 <PyInit__multibytecodec@@Base+0x27ac>
    5704:	b	5720 <PyInit__multibytecodec@@Base+0x282c>
    5708:	ldr	x8, [x19]
    570c:	subs	x8, x8, #0x1
    5710:	str	x8, [x19]
    5714:	b.ne	5720 <PyInit__multibytecodec@@Base+0x282c>  // b.any
    5718:	mov	x0, x19
    571c:	bl	2a50 <_Py_Dealloc@plt>
    5720:	mov	x0, xzr
    5724:	ldp	x20, x19, [sp, #16]
    5728:	ldp	x29, x30, [sp], #32
    572c:	ret
    5730:	stp	x29, x30, [sp, #-32]!
    5734:	stp	x20, x19, [sp, #16]
    5738:	mov	x29, sp
    573c:	mov	w2, wzr
    5740:	mov	x20, x0
    5744:	bl	34f4 <PyInit__multibytecodec@@Base+0x600>
    5748:	cbz	x0, 57ac <PyInit__multibytecodec@@Base+0x28b8>
    574c:	mov	x19, x0
    5750:	ldr	x0, [x20, #48]
    5754:	adrp	x1, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5758:	add	x1, x1, #0xee0
    575c:	mov	x2, x19
    5760:	mov	x3, xzr
    5764:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    5768:	ldr	x8, [x19]
    576c:	mov	x20, x0
    5770:	subs	x8, x8, #0x1
    5774:	str	x8, [x19]
    5778:	b.eq	57a0 <PyInit__multibytecodec@@Base+0x28ac>  // b.none
    577c:	cbz	x20, 57ac <PyInit__multibytecodec@@Base+0x28b8>
    5780:	ldr	x8, [x20]
    5784:	subs	x8, x8, #0x1
    5788:	str	x8, [x20]
    578c:	b.ne	5798 <PyInit__multibytecodec@@Base+0x28a4>  // b.any
    5790:	mov	x0, x20
    5794:	bl	2a50 <_Py_Dealloc@plt>
    5798:	mov	w0, wzr
    579c:	b	57b0 <PyInit__multibytecodec@@Base+0x28bc>
    57a0:	mov	x0, x19
    57a4:	bl	2a50 <_Py_Dealloc@plt>
    57a8:	cbnz	x20, 5780 <PyInit__multibytecodec@@Base+0x288c>
    57ac:	mov	w0, #0xffffffff            	// #-1
    57b0:	ldp	x20, x19, [sp, #16]
    57b4:	ldp	x29, x30, [sp], #32
    57b8:	ret
    57bc:	b	2b20 <PyObject_Free@plt>
    57c0:	sub	sp, sp, #0x60
    57c4:	stp	x29, x30, [sp, #32]
    57c8:	str	x23, [sp, #48]
    57cc:	stp	x22, x21, [sp, #64]
    57d0:	stp	x20, x19, [sp, #80]
    57d4:	add	x29, sp, #0x20
    57d8:	mov	x19, x0
    57dc:	cbz	x3, 5824 <PyInit__multibytecodec@@Base+0x2930>
    57e0:	ldr	x8, [x3, #16]
    57e4:	add	x20, x8, x2
    57e8:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    57ec:	add	x8, sp, #0x10
    57f0:	add	x4, x4, #0xf58
    57f4:	mov	w5, #0x1                   	// #1
    57f8:	mov	w6, #0x2                   	// #2
    57fc:	mov	x0, x1
    5800:	mov	x1, x2
    5804:	mov	x2, xzr
    5808:	mov	w7, wzr
    580c:	str	x8, [sp]
    5810:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    5814:	mov	x1, x0
    5818:	mov	x2, x20
    581c:	cbnz	x0, 583c <PyInit__multibytecodec@@Base+0x2948>
    5820:	b	5a2c <PyInit__multibytecodec@@Base+0x2b38>
    5824:	mov	x20, x2
    5828:	cbz	x1, 57e8 <PyInit__multibytecodec@@Base+0x28f4>
    582c:	sub	x8, x2, #0x1
    5830:	cmp	x8, #0x2
    5834:	mov	x20, x2
    5838:	b.cs	57e8 <PyInit__multibytecodec@@Base+0x28f4>  // b.hs, b.nlast
    583c:	ldr	x20, [x1]
    5840:	cmp	x2, #0x1
    5844:	b.eq	5888 <PyInit__multibytecodec@@Base+0x2994>  // b.none
    5848:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    584c:	ldr	x3, [x1, #8]
    5850:	ldr	x8, [x8, #4016]
    5854:	cmp	x3, x8
    5858:	b.eq	5888 <PyInit__multibytecodec@@Base+0x2994>  // b.none
    585c:	ldr	x8, [x3, #8]
    5860:	ldrb	w8, [x8, #171]
    5864:	tbnz	w8, #4, 58ec <PyInit__multibytecodec@@Base+0x29f8>
    5868:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    586c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5870:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5874:	add	x0, x0, #0x3b5
    5878:	add	x1, x1, #0x780
    587c:	add	x2, x2, #0x792
    5880:	bl	2b70 <_PyArg_BadArgument@plt>
    5884:	b	5a28 <PyInit__multibytecodec@@Base+0x2b34>
    5888:	mov	x23, xzr
    588c:	ldr	x8, [x20, #8]
    5890:	ldrb	w8, [x8, #171]
    5894:	tbnz	w8, #4, 58e4 <PyInit__multibytecodec@@Base+0x29f0>
    5898:	mov	x0, x20
    589c:	bl	2aa0 <PyObject_Str@plt>
    58a0:	cbz	x0, 5a2c <PyInit__multibytecodec@@Base+0x2b38>
    58a4:	ldr	x8, [x0, #8]
    58a8:	mov	x20, x0
    58ac:	ldrb	w8, [x8, #171]
    58b0:	tbnz	w8, #4, 592c <PyInit__multibytecodec@@Base+0x2a38>
    58b4:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    58b8:	ldr	x8, [x8, #4000]
    58bc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    58c0:	add	x1, x1, #0x79e
    58c4:	ldr	x0, [x8]
    58c8:	bl	2ae0 <PyErr_SetString@plt>
    58cc:	ldr	x8, [x20]
    58d0:	subs	x8, x8, #0x1
    58d4:	str	x8, [x20]
    58d8:	b.ne	5a28 <PyInit__multibytecodec@@Base+0x2b34>  // b.any
    58dc:	mov	x0, x20
    58e0:	b	5a24 <PyInit__multibytecodec@@Base+0x2b30>
    58e4:	mov	x21, xzr
    58e8:	b	5930 <PyInit__multibytecodec@@Base+0x2a3c>
    58ec:	add	x1, x29, #0x18
    58f0:	mov	x0, x3
    58f4:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    58f8:	cbz	x0, 5a28 <PyInit__multibytecodec@@Base+0x2b34>
    58fc:	mov	x23, x0
    5900:	bl	29a0 <strlen@plt>
    5904:	ldr	x8, [x29, #24]
    5908:	cmp	x0, x8
    590c:	b.eq	588c <PyInit__multibytecodec@@Base+0x2998>  // b.none
    5910:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5914:	ldr	x8, [x8, #3992]
    5918:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    591c:	add	x1, x1, #0x768
    5920:	ldr	x0, [x8]
    5924:	bl	2ae0 <PyErr_SetString@plt>
    5928:	b	5a28 <PyInit__multibytecodec@@Base+0x2b34>
    592c:	mov	x21, x20
    5930:	ldrb	w8, [x20, #32]
    5934:	tbnz	w8, #7, 5944 <PyInit__multibytecodec@@Base+0x2a50>
    5938:	mov	x0, x20
    593c:	bl	2980 <_PyUnicode_Ready@plt>
    5940:	tbnz	w0, #31, 5a0c <PyInit__multibytecodec@@Base+0x2b18>
    5944:	ldr	x22, [x20, #16]
    5948:	mov	x0, x23
    594c:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    5950:	cbz	x0, 5a0c <PyInit__multibytecodec@@Base+0x2b18>
    5954:	mov	x23, x0
    5958:	ldr	x0, [x19, #16]
    595c:	ldr	x8, [x0, #32]
    5960:	cbz	x8, 5978 <PyInit__multibytecodec@@Base+0x2a84>
    5964:	ldr	x1, [x0, #8]
    5968:	add	x0, x29, #0x18
    596c:	blr	x8
    5970:	cbnz	w0, 59e8 <PyInit__multibytecodec@@Base+0x2af4>
    5974:	ldr	x0, [x19, #16]
    5978:	add	x1, x29, #0x18
    597c:	mov	w5, #0x3                   	// #3
    5980:	mov	x2, x20
    5984:	mov	x3, xzr
    5988:	mov	x4, x23
    598c:	bl	3770 <PyInit__multibytecodec@@Base+0x87c>
    5990:	cbz	x0, 59e8 <PyInit__multibytecodec@@Base+0x2af4>
    5994:	mov	x19, x0
    5998:	cbz	x23, 59a4 <PyInit__multibytecodec@@Base+0x2ab0>
    599c:	cmp	x23, #0x4
    59a0:	b.cc	59bc <PyInit__multibytecodec@@Base+0x2ac8>  // b.lo, b.ul, b.last
    59a4:	ldr	x8, [x23]
    59a8:	subs	x8, x8, #0x1
    59ac:	str	x8, [x23]
    59b0:	b.ne	59bc <PyInit__multibytecodec@@Base+0x2ac8>  // b.any
    59b4:	mov	x0, x23
    59b8:	bl	2a50 <_Py_Dealloc@plt>
    59bc:	cbz	x21, 59d8 <PyInit__multibytecodec@@Base+0x2ae4>
    59c0:	ldr	x8, [x21]
    59c4:	subs	x8, x8, #0x1
    59c8:	str	x8, [x21]
    59cc:	b.ne	59d8 <PyInit__multibytecodec@@Base+0x2ae4>  // b.any
    59d0:	mov	x0, x21
    59d4:	bl	2a50 <_Py_Dealloc@plt>
    59d8:	mov	x0, x19
    59dc:	mov	x1, x22
    59e0:	bl	5d60 <PyInit__multibytecodec@@Base+0x2e6c>
    59e4:	b	5a2c <PyInit__multibytecodec@@Base+0x2b38>
    59e8:	cbz	x23, 59f4 <PyInit__multibytecodec@@Base+0x2b00>
    59ec:	cmp	x23, #0x4
    59f0:	b.cc	5a0c <PyInit__multibytecodec@@Base+0x2b18>  // b.lo, b.ul, b.last
    59f4:	ldr	x8, [x23]
    59f8:	subs	x8, x8, #0x1
    59fc:	str	x8, [x23]
    5a00:	b.ne	5a0c <PyInit__multibytecodec@@Base+0x2b18>  // b.any
    5a04:	mov	x0, x23
    5a08:	bl	2a50 <_Py_Dealloc@plt>
    5a0c:	cbz	x21, 5a28 <PyInit__multibytecodec@@Base+0x2b34>
    5a10:	ldr	x8, [x21]
    5a14:	subs	x8, x8, #0x1
    5a18:	str	x8, [x21]
    5a1c:	b.ne	5a28 <PyInit__multibytecodec@@Base+0x2b34>  // b.any
    5a20:	mov	x0, x21
    5a24:	bl	2a50 <_Py_Dealloc@plt>
    5a28:	mov	x0, xzr
    5a2c:	ldp	x20, x19, [sp, #80]
    5a30:	ldp	x22, x21, [sp, #64]
    5a34:	ldr	x23, [sp, #48]
    5a38:	ldp	x29, x30, [sp, #32]
    5a3c:	add	sp, sp, #0x60
    5a40:	ret
    5a44:	sub	sp, sp, #0x110
    5a48:	stp	x29, x30, [sp, #208]
    5a4c:	stp	x28, x23, [sp, #224]
    5a50:	stp	x22, x21, [sp, #240]
    5a54:	stp	x20, x19, [sp, #256]
    5a58:	add	x29, sp, #0xd0
    5a5c:	mov	x21, x2
    5a60:	mov	x20, x1
    5a64:	mov	x19, x0
    5a68:	cbz	x3, 5a74 <PyInit__multibytecodec@@Base+0x2b80>
    5a6c:	ldr	x22, [x3, #16]
    5a70:	b	5a78 <PyInit__multibytecodec@@Base+0x2b84>
    5a74:	mov	x22, xzr
    5a78:	movi	v0.2d, #0x0
    5a7c:	stp	q0, q0, [sp, #64]
    5a80:	stp	q0, q0, [sp, #32]
    5a84:	str	q0, [sp, #16]
    5a88:	cbz	x20, 5a9c <PyInit__multibytecodec@@Base+0x2ba8>
    5a8c:	sub	x8, x21, #0x1
    5a90:	cmp	x8, #0x1
    5a94:	b.hi	5a9c <PyInit__multibytecodec@@Base+0x2ba8>  // b.pmore
    5a98:	cbz	x3, 5ad0 <PyInit__multibytecodec@@Base+0x2bdc>
    5a9c:	adrp	x4, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5aa0:	add	x8, sp, #0x60
    5aa4:	add	x4, x4, #0xf98
    5aa8:	mov	w5, #0x1                   	// #1
    5aac:	mov	w6, #0x2                   	// #2
    5ab0:	mov	x0, x20
    5ab4:	mov	x1, x21
    5ab8:	mov	x2, xzr
    5abc:	mov	w7, wzr
    5ac0:	str	x8, [sp]
    5ac4:	bl	2ad0 <_PyArg_UnpackKeywords@plt>
    5ac8:	mov	x20, x0
    5acc:	cbz	x0, 5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5ad0:	ldr	x0, [x20]
    5ad4:	add	x1, sp, #0x10
    5ad8:	mov	w2, wzr
    5adc:	bl	2cb0 <PyObject_GetBuffer@plt>
    5ae0:	cbnz	w0, 5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5ae4:	add	x0, sp, #0x10
    5ae8:	mov	w1, #0x43                  	// #67
    5aec:	bl	2a20 <PyBuffer_IsContiguous@plt>
    5af0:	cbz	w0, 5c44 <PyInit__multibytecodec@@Base+0x2d50>
    5af4:	add	x8, x22, x21
    5af8:	cmp	x8, #0x1
    5afc:	b.eq	5b3c <PyInit__multibytecodec@@Base+0x2c48>  // b.none
    5b00:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5b04:	ldr	x3, [x20, #8]
    5b08:	ldr	x8, [x8, #4016]
    5b0c:	cmp	x3, x8
    5b10:	b.eq	5b3c <PyInit__multibytecodec@@Base+0x2c48>  // b.none
    5b14:	ldr	x8, [x3, #8]
    5b18:	ldrb	w8, [x8, #171]
    5b1c:	tbnz	w8, #4, 5cf4 <PyInit__multibytecodec@@Base+0x2e00>
    5b20:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5b24:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5b28:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5b2c:	add	x0, x0, #0x5cf
    5b30:	add	x1, x1, #0x780
    5b34:	add	x2, x2, #0x792
    5b38:	b	5c60 <PyInit__multibytecodec@@Base+0x2d6c>
    5b3c:	mov	x20, xzr
    5b40:	ldr	x23, [sp, #16]
    5b44:	ldr	x21, [sp, #32]
    5b48:	mov	x0, x20
    5b4c:	bl	4044 <PyInit__multibytecodec@@Base+0x1150>
    5b50:	cbz	x0, 5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5b54:	mov	x20, x0
    5b58:	cbz	x21, 5cb4 <PyInit__multibytecodec@@Base+0x2dc0>
    5b5c:	sub	x8, x29, #0x60
    5b60:	add	x22, x8, #0x20
    5b64:	mov	x0, x22
    5b68:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    5b6c:	add	x8, x23, x21
    5b70:	stur	x21, [x29, #-24]
    5b74:	stp	x23, x23, [x29, #-96]
    5b78:	stp	x8, xzr, [x29, #-80]
    5b7c:	ldr	x9, [x19, #16]
    5b80:	ldr	x8, [x9, #56]
    5b84:	cbz	x8, 5bd8 <PyInit__multibytecodec@@Base+0x2ce4>
    5b88:	ldr	x1, [x9, #8]
    5b8c:	sub	x0, x29, #0x8
    5b90:	blr	x8
    5b94:	cbnz	w0, 5c68 <PyInit__multibytecodec@@Base+0x2d74>
    5b98:	b	5bd8 <PyInit__multibytecodec@@Base+0x2ce4>
    5b9c:	ldr	x10, [x19, #16]
    5ba0:	sub	x3, x9, x8
    5ba4:	sub	x0, x29, #0x8
    5ba8:	sub	x2, x29, #0x60
    5bac:	ldr	x11, [x10, #48]
    5bb0:	ldr	x1, [x10, #8]
    5bb4:	mov	x4, x22
    5bb8:	blr	x11
    5bbc:	cbz	x0, 5be8 <PyInit__multibytecodec@@Base+0x2cf4>
    5bc0:	mov	x3, x0
    5bc4:	ldr	x0, [x19, #16]
    5bc8:	sub	x1, x29, #0x60
    5bcc:	mov	x2, x20
    5bd0:	bl	482c <PyInit__multibytecodec@@Base+0x1938>
    5bd4:	cbnz	w0, 5c68 <PyInit__multibytecodec@@Base+0x2d74>
    5bd8:	ldur	x8, [x29, #-96]
    5bdc:	ldur	x9, [x29, #-80]
    5be0:	cmp	x8, x9
    5be4:	b.cc	5b9c <PyInit__multibytecodec@@Base+0x2ca8>  // b.lo, b.ul, b.last
    5be8:	mov	x0, x22
    5bec:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    5bf0:	cbz	x0, 5c68 <PyInit__multibytecodec@@Base+0x2d74>
    5bf4:	mov	x19, x0
    5bf8:	ldur	x0, [x29, #-72]
    5bfc:	cbz	x0, 5c14 <PyInit__multibytecodec@@Base+0x2d20>
    5c00:	ldr	x8, [x0]
    5c04:	subs	x8, x8, #0x1
    5c08:	str	x8, [x0]
    5c0c:	b.ne	5c14 <PyInit__multibytecodec@@Base+0x2d20>  // b.any
    5c10:	bl	2a50 <_Py_Dealloc@plt>
    5c14:	cbz	x20, 5c20 <PyInit__multibytecodec@@Base+0x2d2c>
    5c18:	cmp	x20, #0x4
    5c1c:	b.cc	5c38 <PyInit__multibytecodec@@Base+0x2d44>  // b.lo, b.ul, b.last
    5c20:	ldr	x8, [x20]
    5c24:	subs	x8, x8, #0x1
    5c28:	str	x8, [x20]
    5c2c:	b.ne	5c38 <PyInit__multibytecodec@@Base+0x2d44>  // b.any
    5c30:	mov	x0, x20
    5c34:	bl	2a50 <_Py_Dealloc@plt>
    5c38:	mov	x0, x19
    5c3c:	mov	x1, x21
    5c40:	b	5ce8 <PyInit__multibytecodec@@Base+0x2df4>
    5c44:	ldr	x3, [x20]
    5c48:	adrp	x0, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5c4c:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5c50:	adrp	x2, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5c54:	add	x0, x0, #0x5cf
    5c58:	add	x1, x1, #0x5d6
    5c5c:	add	x2, x2, #0x5e7
    5c60:	bl	2b70 <_PyArg_BadArgument@plt>
    5c64:	b	5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5c68:	cbz	x20, 5c74 <PyInit__multibytecodec@@Base+0x2d80>
    5c6c:	cmp	x20, #0x4
    5c70:	b.cc	5c8c <PyInit__multibytecodec@@Base+0x2d98>  // b.lo, b.ul, b.last
    5c74:	ldr	x8, [x20]
    5c78:	subs	x8, x8, #0x1
    5c7c:	str	x8, [x20]
    5c80:	b.ne	5c8c <PyInit__multibytecodec@@Base+0x2d98>  // b.any
    5c84:	mov	x0, x20
    5c88:	bl	2a50 <_Py_Dealloc@plt>
    5c8c:	ldur	x0, [x29, #-72]
    5c90:	cbz	x0, 5ca8 <PyInit__multibytecodec@@Base+0x2db4>
    5c94:	ldr	x8, [x0]
    5c98:	subs	x8, x8, #0x1
    5c9c:	str	x8, [x0]
    5ca0:	b.ne	5ca8 <PyInit__multibytecodec@@Base+0x2db4>  // b.any
    5ca4:	bl	2a50 <_Py_Dealloc@plt>
    5ca8:	mov	x0, x22
    5cac:	bl	2ac0 <_PyUnicodeWriter_Dealloc@plt>
    5cb0:	b	5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5cb4:	cbz	x20, 5cc0 <PyInit__multibytecodec@@Base+0x2dcc>
    5cb8:	cmp	x20, #0x4
    5cbc:	b.cc	5cd8 <PyInit__multibytecodec@@Base+0x2de4>  // b.lo, b.ul, b.last
    5cc0:	ldr	x8, [x20]
    5cc4:	subs	x8, x8, #0x1
    5cc8:	str	x8, [x20]
    5ccc:	b.ne	5cd8 <PyInit__multibytecodec@@Base+0x2de4>  // b.any
    5cd0:	mov	x0, x20
    5cd4:	bl	2a50 <_Py_Dealloc@plt>
    5cd8:	mov	x0, xzr
    5cdc:	mov	w1, wzr
    5ce0:	bl	2de0 <PyUnicode_New@plt>
    5ce4:	mov	x1, xzr
    5ce8:	bl	5d60 <PyInit__multibytecodec@@Base+0x2e6c>
    5cec:	mov	x19, x0
    5cf0:	b	5d34 <PyInit__multibytecodec@@Base+0x2e40>
    5cf4:	sub	x1, x29, #0x60
    5cf8:	mov	x0, x3
    5cfc:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    5d00:	cbz	x0, 5d30 <PyInit__multibytecodec@@Base+0x2e3c>
    5d04:	mov	x20, x0
    5d08:	bl	29a0 <strlen@plt>
    5d0c:	ldur	x8, [x29, #-96]
    5d10:	cmp	x0, x8
    5d14:	b.eq	5b40 <PyInit__multibytecodec@@Base+0x2c4c>  // b.none
    5d18:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5d1c:	ldr	x8, [x8, #3992]
    5d20:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5d24:	add	x1, x1, #0x768
    5d28:	ldr	x0, [x8]
    5d2c:	bl	2ae0 <PyErr_SetString@plt>
    5d30:	mov	x19, xzr
    5d34:	ldr	x8, [sp, #24]
    5d38:	cbz	x8, 5d44 <PyInit__multibytecodec@@Base+0x2e50>
    5d3c:	add	x0, sp, #0x10
    5d40:	bl	29e0 <PyBuffer_Release@plt>
    5d44:	mov	x0, x19
    5d48:	ldp	x20, x19, [sp, #256]
    5d4c:	ldp	x22, x21, [sp, #240]
    5d50:	ldp	x28, x23, [sp, #224]
    5d54:	ldp	x29, x30, [sp, #208]
    5d58:	add	sp, sp, #0x110
    5d5c:	ret
    5d60:	stp	x29, x30, [sp, #-48]!
    5d64:	str	x21, [sp, #16]
    5d68:	stp	x20, x19, [sp, #32]
    5d6c:	mov	x29, sp
    5d70:	cbz	x0, 5dd4 <PyInit__multibytecodec@@Base+0x2ee0>
    5d74:	mov	x20, x0
    5d78:	mov	w0, #0x2                   	// #2
    5d7c:	mov	x21, x1
    5d80:	bl	2bd0 <PyTuple_New@plt>
    5d84:	cbz	x0, 5da4 <PyInit__multibytecodec@@Base+0x2eb0>
    5d88:	mov	x19, x0
    5d8c:	str	x20, [x0, #24]
    5d90:	mov	x0, x21
    5d94:	bl	2b30 <PyLong_FromSsize_t@plt>
    5d98:	cbz	x0, 5dbc <PyInit__multibytecodec@@Base+0x2ec8>
    5d9c:	str	x0, [x19, #32]
    5da0:	b	5dd8 <PyInit__multibytecodec@@Base+0x2ee4>
    5da4:	ldr	x8, [x20]
    5da8:	subs	x8, x8, #0x1
    5dac:	str	x8, [x20]
    5db0:	b.ne	5dd4 <PyInit__multibytecodec@@Base+0x2ee0>  // b.any
    5db4:	mov	x0, x20
    5db8:	b	5dd0 <PyInit__multibytecodec@@Base+0x2edc>
    5dbc:	ldr	x8, [x19]
    5dc0:	subs	x8, x8, #0x1
    5dc4:	str	x8, [x19]
    5dc8:	b.ne	5dd4 <PyInit__multibytecodec@@Base+0x2ee0>  // b.any
    5dcc:	mov	x0, x19
    5dd0:	bl	2a50 <_Py_Dealloc@plt>
    5dd4:	mov	x19, xzr
    5dd8:	mov	x0, x19
    5ddc:	ldp	x20, x19, [sp, #32]
    5de0:	ldr	x21, [sp, #16]
    5de4:	ldp	x29, x30, [sp], #48
    5de8:	ret
    5dec:	stp	x29, x30, [sp, #-32]!
    5df0:	str	x19, [sp, #16]
    5df4:	mov	x29, sp
    5df8:	mov	x19, x1
    5dfc:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e00:	add	x1, x1, #0x7e5
    5e04:	mov	x0, x19
    5e08:	bl	2ba0 <PyCapsule_IsValid@plt>
    5e0c:	cbz	w0, 5e50 <PyInit__multibytecodec@@Base+0x2f5c>
    5e10:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e14:	add	x1, x1, #0x7e5
    5e18:	mov	x0, x19
    5e1c:	bl	2d60 <PyCapsule_GetPointer@plt>
    5e20:	ldr	x8, [x0, #16]
    5e24:	mov	x19, x0
    5e28:	cbz	x8, 5e38 <PyInit__multibytecodec@@Base+0x2f44>
    5e2c:	ldr	x0, [x19, #8]
    5e30:	blr	x8
    5e34:	cbnz	w0, 5e68 <PyInit__multibytecodec@@Base+0x2f74>
    5e38:	adrp	x0, 17000 <PyInit__multibytecodec@@Base+0x1410c>
    5e3c:	add	x0, x0, #0x8e0
    5e40:	bl	2cd0 <_PyObject_New@plt>
    5e44:	cbz	x0, 5e6c <PyInit__multibytecodec@@Base+0x2f78>
    5e48:	str	x19, [x0, #16]
    5e4c:	b	5e6c <PyInit__multibytecodec@@Base+0x2f78>
    5e50:	adrp	x8, 16000 <PyInit__multibytecodec@@Base+0x1310c>
    5e54:	ldr	x8, [x8, #3992]
    5e58:	adrp	x1, 6000 <PyInit__multibytecodec@@Base+0x310c>
    5e5c:	add	x1, x1, #0x7fc
    5e60:	ldr	x0, [x8]
    5e64:	bl	2ae0 <PyErr_SetString@plt>
    5e68:	mov	x0, xzr
    5e6c:	ldr	x19, [sp, #16]
    5e70:	ldp	x29, x30, [sp], #32
    5e74:	ret

Disassembly of section .fini:

0000000000005e78 <.fini>:
    5e78:	stp	x29, x30, [sp, #-16]!
    5e7c:	mov	x29, sp
    5e80:	ldp	x29, x30, [sp], #16
    5e84:	ret
