
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021c0 <.init>:
    21c0:	stp	x29, x30, [sp, #-16]!
    21c4:	mov	x29, sp
    21c8:	bl	2650 <_PyDict_SetItemId@plt+0x10>
    21cc:	ldp	x29, x30, [sp], #16
    21d0:	ret

Disassembly of section .plt:

00000000000021e0 <memcpy@plt-0x20>:
    21e0:	stp	x16, x30, [sp, #-16]!
    21e4:	adrp	x16, 16000 <PyInit__lzma@@Base+0x138dc>
    21e8:	ldr	x17, [x16, #4088]
    21ec:	add	x16, x16, #0xff8
    21f0:	br	x17
    21f4:	nop
    21f8:	nop
    21fc:	nop

0000000000002200 <memcpy@plt>:
    2200:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2204:	ldr	x17, [x16]
    2208:	add	x16, x16, #0x0
    220c:	br	x17

0000000000002210 <memmove@plt>:
    2210:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2214:	ldr	x17, [x16, #8]
    2218:	add	x16, x16, #0x8
    221c:	br	x17

0000000000002220 <PyModule_AddIntConstant@plt>:
    2220:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2224:	ldr	x17, [x16, #16]
    2228:	add	x16, x16, #0x10
    222c:	br	x17

0000000000002230 <PyMapping_Check@plt>:
    2230:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16, #24]
    2238:	add	x16, x16, #0x18
    223c:	br	x17

0000000000002240 <_PyBytes_Resize@plt>:
    2240:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #32]
    2248:	add	x16, x16, #0x20
    224c:	br	x17

0000000000002250 <lzma_code@plt>:
    2250:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #40]
    2258:	add	x16, x16, #0x28
    225c:	br	x17

0000000000002260 <PyEval_RestoreThread@plt>:
    2260:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #48]
    2268:	add	x16, x16, #0x30
    226c:	br	x17

0000000000002270 <PyMem_Free@plt>:
    2270:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #56]
    2278:	add	x16, x16, #0x38
    227c:	br	x17

0000000000002280 <PyLong_FromUnsignedLongLong@plt>:
    2280:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #64]
    2288:	add	x16, x16, #0x40
    228c:	br	x17

0000000000002290 <PyBuffer_Release@plt>:
    2290:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #72]
    2298:	add	x16, x16, #0x48
    229c:	br	x17

00000000000022a0 <PyLong_AsUnsignedLongLong@plt>:
    22a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #80]
    22a8:	add	x16, x16, #0x50
    22ac:	br	x17

00000000000022b0 <__cxa_finalize@plt>:
    22b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #88]
    22b8:	add	x16, x16, #0x58
    22bc:	br	x17

00000000000022c0 <PyMem_RawMalloc@plt>:
    22c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #96]
    22c8:	add	x16, x16, #0x60
    22cc:	br	x17

00000000000022d0 <PyBuffer_IsContiguous@plt>:
    22d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #104]
    22d8:	add	x16, x16, #0x68
    22dc:	br	x17

00000000000022e0 <PyBytes_FromStringAndSize@plt>:
    22e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #112]
    22e8:	add	x16, x16, #0x70
    22ec:	br	x17

00000000000022f0 <_Py_Dealloc@plt>:
    22f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #120]
    22f8:	add	x16, x16, #0x78
    22fc:	br	x17

0000000000002300 <PyErr_NoMemory@plt>:
    2300:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #128]
    2308:	add	x16, x16, #0x80
    230c:	br	x17

0000000000002310 <PyErr_NewExceptionWithDoc@plt>:
    2310:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #136]
    2318:	add	x16, x16, #0x88
    231c:	br	x17

0000000000002320 <PyThread_acquire_lock@plt>:
    2320:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #144]
    2328:	add	x16, x16, #0x90
    232c:	br	x17

0000000000002330 <lzma_easy_encoder@plt>:
    2330:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #152]
    2338:	add	x16, x16, #0x98
    233c:	br	x17

0000000000002340 <_PyArg_UnpackKeywords@plt>:
    2340:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #160]
    2348:	add	x16, x16, #0xa0
    234c:	br	x17

0000000000002350 <PyErr_SetString@plt>:
    2350:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #168]
    2358:	add	x16, x16, #0xa8
    235c:	br	x17

0000000000002360 <PyMapping_GetItemString@plt>:
    2360:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #176]
    2368:	add	x16, x16, #0xb0
    236c:	br	x17

0000000000002370 <lzma_raw_encoder@plt>:
    2370:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #184]
    2378:	add	x16, x16, #0xb8
    237c:	br	x17

0000000000002380 <PyMem_Realloc@plt>:
    2380:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #192]
    2388:	add	x16, x16, #0xc0
    238c:	br	x17

0000000000002390 <PyErr_SetNone@plt>:
    2390:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #200]
    2398:	add	x16, x16, #0xc8
    239c:	br	x17

00000000000023a0 <PyErr_ExceptionMatches@plt>:
    23a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #208]
    23a8:	add	x16, x16, #0xd0
    23ac:	br	x17

00000000000023b0 <lzma_properties_size@plt>:
    23b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #216]
    23b8:	add	x16, x16, #0xd8
    23bc:	br	x17

00000000000023c0 <PySequence_GetItem@plt>:
    23c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #224]
    23c8:	add	x16, x16, #0xe0
    23cc:	br	x17

00000000000023d0 <lzma_auto_decoder@plt>:
    23d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #232]
    23d8:	add	x16, x16, #0xe8
    23dc:	br	x17

00000000000023e0 <PyType_Ready@plt>:
    23e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #240]
    23e8:	add	x16, x16, #0xf0
    23ec:	br	x17

00000000000023f0 <PyLong_AsSsize_t@plt>:
    23f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #248]
    23f8:	add	x16, x16, #0xf8
    23fc:	br	x17

0000000000002400 <_PyArg_BadArgument@plt>:
    2400:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #256]
    2408:	add	x16, x16, #0x100
    240c:	br	x17

0000000000002410 <PySequence_Size@plt>:
    2410:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #264]
    2418:	add	x16, x16, #0x108
    241c:	br	x17

0000000000002420 <PyErr_Clear@plt>:
    2420:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #272]
    2428:	add	x16, x16, #0x110
    242c:	br	x17

0000000000002430 <PyBool_FromLong@plt>:
    2430:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #280]
    2438:	add	x16, x16, #0x118
    243c:	br	x17

0000000000002440 <__gmon_start__@plt>:
    2440:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #288]
    2448:	add	x16, x16, #0x120
    244c:	br	x17

0000000000002450 <PyTuple_New@plt>:
    2450:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #296]
    2458:	add	x16, x16, #0x128
    245c:	br	x17

0000000000002460 <_PyArg_CheckPositional@plt>:
    2460:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #304]
    2468:	add	x16, x16, #0x130
    246c:	br	x17

0000000000002470 <lzma_properties_decode@plt>:
    2470:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #312]
    2478:	add	x16, x16, #0x138
    247c:	br	x17

0000000000002480 <PyErr_Occurred@plt>:
    2480:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #320]
    2488:	add	x16, x16, #0x140
    248c:	br	x17

0000000000002490 <PyModule_Create2@plt>:
    2490:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #328]
    2498:	add	x16, x16, #0x148
    249c:	br	x17

00000000000024a0 <lzma_stream_decoder@plt>:
    24a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #336]
    24a8:	add	x16, x16, #0x150
    24ac:	br	x17

00000000000024b0 <lzma_alone_decoder@plt>:
    24b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #344]
    24b8:	add	x16, x16, #0x158
    24bc:	br	x17

00000000000024c0 <lzma_end@plt>:
    24c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #352]
    24c8:	add	x16, x16, #0x160
    24cc:	br	x17

00000000000024d0 <PyMem_RawFree@plt>:
    24d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #360]
    24d8:	add	x16, x16, #0x168
    24dc:	br	x17

00000000000024e0 <lzma_get_check@plt>:
    24e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #368]
    24e8:	add	x16, x16, #0x170
    24ec:	br	x17

00000000000024f0 <free@plt>:
    24f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #376]
    24f8:	add	x16, x16, #0x178
    24fc:	br	x17

0000000000002500 <PyThread_allocate_lock@plt>:
    2500:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #384]
    2508:	add	x16, x16, #0x180
    250c:	br	x17

0000000000002510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2510:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #392]
    2518:	add	x16, x16, #0x188
    251c:	br	x17

0000000000002520 <PyThread_release_lock@plt>:
    2520:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #400]
    2528:	add	x16, x16, #0x190
    252c:	br	x17

0000000000002530 <lzma_raw_decoder@plt>:
    2530:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #408]
    2538:	add	x16, x16, #0x198
    253c:	br	x17

0000000000002540 <PyDict_New@plt>:
    2540:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #416]
    2548:	add	x16, x16, #0x1a0
    254c:	br	x17

0000000000002550 <lzma_alone_encoder@plt>:
    2550:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #424]
    2558:	add	x16, x16, #0x1a8
    255c:	br	x17

0000000000002560 <PyObject_GetBuffer@plt>:
    2560:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #432]
    2568:	add	x16, x16, #0x1b0
    256c:	br	x17

0000000000002570 <lzma_properties_encode@plt>:
    2570:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #440]
    2578:	add	x16, x16, #0x1b8
    257c:	br	x17

0000000000002580 <PyEval_SaveThread@plt>:
    2580:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #448]
    2588:	add	x16, x16, #0x1c0
    258c:	br	x17

0000000000002590 <PyModule_AddObject@plt>:
    2590:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #456]
    2598:	add	x16, x16, #0x1c8
    259c:	br	x17

00000000000025a0 <PyType_IsSubtype@plt>:
    25a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #464]
    25a8:	add	x16, x16, #0x1d0
    25ac:	br	x17

00000000000025b0 <PyErr_Format@plt>:
    25b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #472]
    25b8:	add	x16, x16, #0x1d8
    25bc:	br	x17

00000000000025c0 <lzma_check_is_supported@plt>:
    25c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #480]
    25c8:	add	x16, x16, #0x1e0
    25cc:	br	x17

00000000000025d0 <lzma_stream_encoder@plt>:
    25d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #488]
    25d8:	add	x16, x16, #0x1e8
    25dc:	br	x17

00000000000025e0 <PyLong_FromLongLong@plt>:
    25e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #496]
    25e8:	add	x16, x16, #0x1f0
    25ec:	br	x17

00000000000025f0 <PyNumber_Index@plt>:
    25f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #504]
    25f8:	add	x16, x16, #0x1f8
    25fc:	br	x17

0000000000002600 <_PyLong_AsInt@plt>:
    2600:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #512]
    2608:	add	x16, x16, #0x200
    260c:	br	x17

0000000000002610 <lzma_lzma_preset@plt>:
    2610:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #520]
    2618:	add	x16, x16, #0x208
    261c:	br	x17

0000000000002620 <PyMem_Malloc@plt>:
    2620:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #528]
    2628:	add	x16, x16, #0x210
    262c:	br	x17

0000000000002630 <PyThread_free_lock@plt>:
    2630:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #536]
    2638:	add	x16, x16, #0x218
    263c:	br	x17

0000000000002640 <_PyDict_SetItemId@plt>:
    2640:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #544]
    2648:	add	x16, x16, #0x220
    264c:	br	x17

Disassembly of section .text:

0000000000002650 <PyInit__lzma@@Base-0xd4>:
    2650:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    2654:	ldr	x0, [x0, #4032]
    2658:	cbz	x0, 2660 <_PyDict_SetItemId@plt+0x20>
    265c:	b	2440 <__gmon_start__@plt>
    2660:	ret
    2664:	nop
    2668:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    266c:	add	x0, x0, #0x9b0
    2670:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2674:	add	x1, x1, #0x9b0
    2678:	cmp	x1, x0
    267c:	b.eq	2694 <_PyDict_SetItemId@plt+0x54>  // b.none
    2680:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2684:	ldr	x1, [x1, #3976]
    2688:	cbz	x1, 2694 <_PyDict_SetItemId@plt+0x54>
    268c:	mov	x16, x1
    2690:	br	x16
    2694:	ret
    2698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    269c:	add	x0, x0, #0x9b0
    26a0:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    26a4:	add	x1, x1, #0x9b0
    26a8:	sub	x1, x1, x0
    26ac:	lsr	x2, x1, #63
    26b0:	add	x1, x2, x1, asr #3
    26b4:	cmp	xzr, x1, asr #1
    26b8:	asr	x1, x1, #1
    26bc:	b.eq	26d4 <_PyDict_SetItemId@plt+0x94>  // b.none
    26c0:	adrp	x2, 16000 <PyInit__lzma@@Base+0x138dc>
    26c4:	ldr	x2, [x2, #4064]
    26c8:	cbz	x2, 26d4 <_PyDict_SetItemId@plt+0x94>
    26cc:	mov	x16, x2
    26d0:	br	x16
    26d4:	ret
    26d8:	stp	x29, x30, [sp, #-32]!
    26dc:	mov	x29, sp
    26e0:	str	x19, [sp, #16]
    26e4:	adrp	x19, 17000 <PyInit__lzma@@Base+0x148dc>
    26e8:	ldrb	w0, [x19, #2480]
    26ec:	cbnz	w0, 2714 <_PyDict_SetItemId@plt+0xd4>
    26f0:	adrp	x0, 16000 <PyInit__lzma@@Base+0x138dc>
    26f4:	ldr	x0, [x0, #3992]
    26f8:	cbz	x0, 2708 <_PyDict_SetItemId@plt+0xc8>
    26fc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2700:	ldr	x0, [x0, #552]
    2704:	bl	22b0 <__cxa_finalize@plt>
    2708:	bl	2668 <_PyDict_SetItemId@plt+0x28>
    270c:	mov	w0, #0x1                   	// #1
    2710:	strb	w0, [x19, #2480]
    2714:	ldr	x19, [sp, #16]
    2718:	ldp	x29, x30, [sp], #32
    271c:	ret
    2720:	b	2698 <_PyDict_SetItemId@plt+0x58>

0000000000002724 <PyInit__lzma@@Base>:
    2724:	stp	x29, x30, [sp, #-32]!
    2728:	stp	x20, x19, [sp, #16]
    272c:	mov	x29, sp
    2730:	mov	x0, xzr
    2734:	bl	2450 <PyTuple_New@plt>
    2738:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    273c:	str	x0, [x8, #2488]
    2740:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2744:	adrp	x0, 17000 <PyInit__lzma@@Base+0x148dc>
    2748:	add	x0, x0, #0x230
    274c:	mov	w1, #0x3f5                 	// #1013
    2750:	bl	2490 <PyModule_Create2@plt>
    2754:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2758:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    275c:	add	x1, x1, #0x9d6
    2760:	mov	x2, xzr
    2764:	mov	x19, x0
    2768:	bl	2220 <PyModule_AddIntConstant@plt>
    276c:	cmn	w0, #0x1
    2770:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2774:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2778:	add	x1, x1, #0xf1c
    277c:	mov	w2, #0x1                   	// #1
    2780:	mov	x0, x19
    2784:	bl	2220 <PyModule_AddIntConstant@plt>
    2788:	cmn	w0, #0x1
    278c:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2790:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2794:	add	x1, x1, #0x9e2
    2798:	mov	w2, #0x2                   	// #2
    279c:	mov	x0, x19
    27a0:	bl	2220 <PyModule_AddIntConstant@plt>
    27a4:	cmn	w0, #0x1
    27a8:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    27ac:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    27b0:	add	x1, x1, #0xc1
    27b4:	mov	w2, #0x3                   	// #3
    27b8:	mov	x0, x19
    27bc:	bl	2220 <PyModule_AddIntConstant@plt>
    27c0:	cmn	w0, #0x1
    27c4:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    27c8:	mov	x0, xzr
    27cc:	bl	25e0 <PyLong_FromLongLong@plt>
    27d0:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    27d4:	mov	x20, x0
    27d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    27dc:	add	x1, x1, #0x9ef
    27e0:	mov	x0, x19
    27e4:	mov	x2, x20
    27e8:	bl	2590 <PyModule_AddObject@plt>
    27ec:	cbz	w0, 2818 <PyInit__lzma@@Base+0xf4>
    27f0:	ldr	x8, [x20]
    27f4:	subs	x8, x8, #0x1
    27f8:	str	x8, [x20]
    27fc:	b.ne	2808 <PyInit__lzma@@Base+0xe4>  // b.any
    2800:	mov	x0, x20
    2804:	bl	22f0 <_Py_Dealloc@plt>
    2808:	mov	x0, xzr
    280c:	ldp	x20, x19, [sp, #16]
    2810:	ldp	x29, x30, [sp], #32
    2814:	ret
    2818:	mov	w0, #0x1                   	// #1
    281c:	bl	25e0 <PyLong_FromLongLong@plt>
    2820:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2824:	mov	x20, x0
    2828:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    282c:	add	x1, x1, #0x9fa
    2830:	mov	x0, x19
    2834:	mov	x2, x20
    2838:	bl	2590 <PyModule_AddObject@plt>
    283c:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2840:	mov	w0, #0x4                   	// #4
    2844:	bl	25e0 <PyLong_FromLongLong@plt>
    2848:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    284c:	mov	x20, x0
    2850:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2854:	add	x1, x1, #0xa06
    2858:	mov	x0, x19
    285c:	mov	x2, x20
    2860:	bl	2590 <PyModule_AddObject@plt>
    2864:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2868:	mov	w0, #0xa                   	// #10
    286c:	bl	25e0 <PyLong_FromLongLong@plt>
    2870:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2874:	mov	x20, x0
    2878:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    287c:	add	x1, x1, #0xa12
    2880:	mov	x0, x19
    2884:	mov	x2, x20
    2888:	bl	2590 <PyModule_AddObject@plt>
    288c:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2890:	mov	w0, #0xf                   	// #15
    2894:	bl	25e0 <PyLong_FromLongLong@plt>
    2898:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    289c:	mov	x20, x0
    28a0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28a4:	add	x1, x1, #0xa1f
    28a8:	mov	x0, x19
    28ac:	mov	x2, x20
    28b0:	bl	2590 <PyModule_AddObject@plt>
    28b4:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    28b8:	mov	w0, #0x10                  	// #16
    28bc:	bl	25e0 <PyLong_FromLongLong@plt>
    28c0:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    28c4:	mov	x20, x0
    28c8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28cc:	add	x1, x1, #0xa2c
    28d0:	mov	x0, x19
    28d4:	mov	x2, x20
    28d8:	bl	2590 <PyModule_AddObject@plt>
    28dc:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    28e0:	mov	x0, #0x1                   	// #1
    28e4:	movk	x0, #0x4000, lsl #48
    28e8:	bl	25e0 <PyLong_FromLongLong@plt>
    28ec:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    28f0:	mov	x20, x0
    28f4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    28f8:	add	x1, x1, #0xa3a
    28fc:	mov	x0, x19
    2900:	mov	x2, x20
    2904:	bl	2590 <PyModule_AddObject@plt>
    2908:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    290c:	mov	w0, #0x21                  	// #33
    2910:	bl	25e0 <PyLong_FromLongLong@plt>
    2914:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2918:	mov	x20, x0
    291c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2920:	add	x1, x1, #0xa47
    2924:	mov	x0, x19
    2928:	mov	x2, x20
    292c:	bl	2590 <PyModule_AddObject@plt>
    2930:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2934:	mov	w0, #0x3                   	// #3
    2938:	bl	25e0 <PyLong_FromLongLong@plt>
    293c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2940:	mov	x20, x0
    2944:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2948:	add	x1, x1, #0xa54
    294c:	mov	x0, x19
    2950:	mov	x2, x20
    2954:	bl	2590 <PyModule_AddObject@plt>
    2958:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    295c:	mov	w0, #0x4                   	// #4
    2960:	bl	25e0 <PyLong_FromLongLong@plt>
    2964:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2968:	mov	x20, x0
    296c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2970:	add	x1, x1, #0xa61
    2974:	mov	x0, x19
    2978:	mov	x2, x20
    297c:	bl	2590 <PyModule_AddObject@plt>
    2980:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2984:	mov	w0, #0x6                   	// #6
    2988:	bl	25e0 <PyLong_FromLongLong@plt>
    298c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2990:	mov	x20, x0
    2994:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2998:	add	x1, x1, #0xa6c
    299c:	mov	x0, x19
    29a0:	mov	x2, x20
    29a4:	bl	2590 <PyModule_AddObject@plt>
    29a8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    29ac:	mov	w0, #0x7                   	// #7
    29b0:	bl	25e0 <PyLong_FromLongLong@plt>
    29b4:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    29b8:	mov	x20, x0
    29bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29c0:	add	x1, x1, #0xa78
    29c4:	mov	x0, x19
    29c8:	mov	x2, x20
    29cc:	bl	2590 <PyModule_AddObject@plt>
    29d0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    29d4:	mov	w0, #0x8                   	// #8
    29d8:	bl	25e0 <PyLong_FromLongLong@plt>
    29dc:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    29e0:	mov	x20, x0
    29e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    29e8:	add	x1, x1, #0xa83
    29ec:	mov	x0, x19
    29f0:	mov	x2, x20
    29f4:	bl	2590 <PyModule_AddObject@plt>
    29f8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    29fc:	mov	w0, #0x9                   	// #9
    2a00:	bl	25e0 <PyLong_FromLongLong@plt>
    2a04:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2a08:	mov	x20, x0
    2a0c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a10:	add	x1, x1, #0xa93
    2a14:	mov	x0, x19
    2a18:	mov	x2, x20
    2a1c:	bl	2590 <PyModule_AddObject@plt>
    2a20:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a24:	mov	w0, #0x5                   	// #5
    2a28:	bl	25e0 <PyLong_FromLongLong@plt>
    2a2c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2a30:	mov	x20, x0
    2a34:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a38:	add	x1, x1, #0xaa0
    2a3c:	mov	x0, x19
    2a40:	mov	x2, x20
    2a44:	bl	2590 <PyModule_AddObject@plt>
    2a48:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a4c:	mov	w0, #0x3                   	// #3
    2a50:	bl	25e0 <PyLong_FromLongLong@plt>
    2a54:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2a58:	mov	x20, x0
    2a5c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a60:	add	x1, x1, #0xaaf
    2a64:	mov	x0, x19
    2a68:	mov	x2, x20
    2a6c:	bl	2590 <PyModule_AddObject@plt>
    2a70:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a74:	mov	w0, #0x4                   	// #4
    2a78:	bl	25e0 <PyLong_FromLongLong@plt>
    2a7c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2a80:	mov	x20, x0
    2a84:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2a88:	add	x1, x1, #0xab6
    2a8c:	mov	x0, x19
    2a90:	mov	x2, x20
    2a94:	bl	2590 <PyModule_AddObject@plt>
    2a98:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2a9c:	mov	w0, #0x12                  	// #18
    2aa0:	bl	25e0 <PyLong_FromLongLong@plt>
    2aa4:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2aa8:	mov	x20, x0
    2aac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ab0:	add	x1, x1, #0xabd
    2ab4:	mov	x0, x19
    2ab8:	mov	x2, x20
    2abc:	bl	2590 <PyModule_AddObject@plt>
    2ac0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2ac4:	mov	w0, #0x13                  	// #19
    2ac8:	bl	25e0 <PyLong_FromLongLong@plt>
    2acc:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2ad0:	mov	x20, x0
    2ad4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ad8:	add	x1, x1, #0xac4
    2adc:	mov	x0, x19
    2ae0:	mov	x2, x20
    2ae4:	bl	2590 <PyModule_AddObject@plt>
    2ae8:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2aec:	mov	w0, #0x14                  	// #20
    2af0:	bl	25e0 <PyLong_FromLongLong@plt>
    2af4:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2af8:	mov	x20, x0
    2afc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b00:	add	x1, x1, #0xacb
    2b04:	mov	x0, x19
    2b08:	mov	x2, x20
    2b0c:	bl	2590 <PyModule_AddObject@plt>
    2b10:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b14:	mov	w0, #0x1                   	// #1
    2b18:	bl	25e0 <PyLong_FromLongLong@plt>
    2b1c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2b20:	mov	x20, x0
    2b24:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b28:	add	x1, x1, #0xad2
    2b2c:	mov	x0, x19
    2b30:	mov	x2, x20
    2b34:	bl	2590 <PyModule_AddObject@plt>
    2b38:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b3c:	mov	w0, #0x2                   	// #2
    2b40:	bl	25e0 <PyLong_FromLongLong@plt>
    2b44:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2b48:	mov	x20, x0
    2b4c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b50:	add	x1, x1, #0xadc
    2b54:	mov	x0, x19
    2b58:	mov	x2, x20
    2b5c:	bl	2590 <PyModule_AddObject@plt>
    2b60:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b64:	mov	w0, #0x6                   	// #6
    2b68:	bl	25e0 <PyLong_FromLongLong@plt>
    2b6c:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2b70:	mov	x20, x0
    2b74:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2b78:	add	x1, x1, #0xae8
    2b7c:	mov	x0, x19
    2b80:	mov	x2, x20
    2b84:	bl	2590 <PyModule_AddObject@plt>
    2b88:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2b8c:	mov	w0, #0x80000000            	// #-2147483648
    2b90:	bl	25e0 <PyLong_FromLongLong@plt>
    2b94:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2b98:	mov	x20, x0
    2b9c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2ba0:	add	x1, x1, #0xaf7
    2ba4:	mov	x0, x19
    2ba8:	mov	x2, x20
    2bac:	bl	2590 <PyModule_AddObject@plt>
    2bb0:	cbnz	w0, 27f0 <PyInit__lzma@@Base+0xcc>
    2bb4:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2bb8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2bbc:	add	x0, x0, #0xb06
    2bc0:	add	x1, x1, #0xb16
    2bc4:	mov	x2, xzr
    2bc8:	mov	x3, xzr
    2bcc:	bl	2310 <PyErr_NewExceptionWithDoc@plt>
    2bd0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    2bd4:	str	x0, [x8, #2496]
    2bd8:	cbz	x0, 280c <PyInit__lzma@@Base+0xe8>
    2bdc:	ldr	x8, [x0]
    2be0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2be4:	mov	x2, x0
    2be8:	add	x1, x1, #0xb0c
    2bec:	add	x8, x8, #0x1
    2bf0:	str	x8, [x0]
    2bf4:	mov	x0, x19
    2bf8:	bl	2590 <PyModule_AddObject@plt>
    2bfc:	cmn	w0, #0x1
    2c00:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2c04:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2c08:	add	x20, x20, #0x298
    2c0c:	mov	x0, x20
    2c10:	bl	23e0 <PyType_Ready@plt>
    2c14:	cmn	w0, #0x1
    2c18:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2c1c:	ldr	x8, [x20]
    2c20:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2c24:	add	x1, x1, #0xe7e
    2c28:	mov	x0, x19
    2c2c:	add	x8, x8, #0x1
    2c30:	mov	x2, x20
    2c34:	str	x8, [x20]
    2c38:	bl	2590 <PyModule_AddObject@plt>
    2c3c:	cmn	w0, #0x1
    2c40:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2c44:	adrp	x20, 17000 <PyInit__lzma@@Base+0x148dc>
    2c48:	add	x20, x20, #0x438
    2c4c:	mov	x0, x20
    2c50:	bl	23e0 <PyType_Ready@plt>
    2c54:	cmn	w0, #0x1
    2c58:	b.eq	2808 <PyInit__lzma@@Base+0xe4>  // b.none
    2c5c:	ldr	x8, [x20]
    2c60:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    2c64:	add	x1, x1, #0x2b
    2c68:	mov	x0, x19
    2c6c:	add	x8, x8, #0x1
    2c70:	mov	x2, x20
    2c74:	str	x8, [x20]
    2c78:	bl	2590 <PyModule_AddObject@plt>
    2c7c:	cmn	w0, #0x1
    2c80:	csel	x0, xzr, x19, eq  // eq = none
    2c84:	b	280c <PyInit__lzma@@Base+0xe8>
    2c88:	stp	x29, x30, [sp, #-32]!
    2c8c:	str	x19, [sp, #16]
    2c90:	mov	x29, sp
    2c94:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2c98:	ldr	x0, [x1, #8]
    2c9c:	ldr	x8, [x8, #3984]
    2ca0:	cmp	x0, x8
    2ca4:	b.eq	2cbc <PyInit__lzma@@Base+0x598>  // b.none
    2ca8:	mov	x19, x1
    2cac:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    2cb0:	ldr	x1, [x1, #3984]
    2cb4:	bl	25a0 <PyType_IsSubtype@plt>
    2cb8:	cbz	w0, 2ce4 <PyInit__lzma@@Base+0x5c0>
    2cbc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    2cc0:	ldr	x8, [x8, #4016]
    2cc4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2cc8:	add	x1, x1, #0xb7b
    2ccc:	ldr	x0, [x8]
    2cd0:	bl	2350 <PyErr_SetString@plt>
    2cd4:	ldr	x19, [sp, #16]
    2cd8:	mov	x0, xzr
    2cdc:	ldp	x29, x30, [sp], #32
    2ce0:	ret
    2ce4:	mov	x0, x19
    2ce8:	bl	2600 <_PyLong_AsInt@plt>
    2cec:	mov	w19, w0
    2cf0:	cmn	w0, #0x1
    2cf4:	b.eq	2d10 <PyInit__lzma@@Base+0x5ec>  // b.none
    2cf8:	mov	w0, w19
    2cfc:	bl	25c0 <lzma_check_is_supported@plt>
    2d00:	ldr	x19, [sp, #16]
    2d04:	and	x0, x0, #0xff
    2d08:	ldp	x29, x30, [sp], #32
    2d0c:	b	2430 <PyBool_FromLong@plt>
    2d10:	bl	2480 <PyErr_Occurred@plt>
    2d14:	cbnz	x0, 2cd4 <PyInit__lzma@@Base+0x5b0>
    2d18:	b	2cf8 <PyInit__lzma@@Base+0x5d4>
    2d1c:	sub	sp, sp, #0x50
    2d20:	stp	x29, x30, [sp, #48]
    2d24:	stp	x20, x19, [sp, #64]
    2d28:	add	x29, sp, #0x30
    2d2c:	adrp	x8, 6000 <PyInit__lzma@@Base+0x38dc>
    2d30:	add	x8, x8, #0x100
    2d34:	ldr	q0, [x8]
    2d38:	mov	x0, x1
    2d3c:	mov	x1, sp
    2d40:	str	q0, [sp]
    2d44:	bl	3128 <PyInit__lzma@@Base+0xa04>
    2d48:	ldr	x20, [sp]
    2d4c:	cbz	w0, 2d6c <PyInit__lzma@@Base+0x648>
    2d50:	ldr	x8, [sp, #8]
    2d54:	sub	x0, x29, #0x14
    2d58:	sub	x1, x29, #0x10
    2d5c:	stp	x20, x8, [x29, #-16]
    2d60:	bl	23b0 <lzma_properties_size@plt>
    2d64:	bl	362c <PyInit__lzma@@Base+0xf08>
    2d68:	cbz	w0, 2d94 <PyInit__lzma@@Base+0x670>
    2d6c:	mov	x19, xzr
    2d70:	cmn	x20, #0x1
    2d74:	b.eq	2d80 <PyInit__lzma@@Base+0x65c>  // b.none
    2d78:	ldr	x0, [sp, #8]
    2d7c:	bl	2270 <PyMem_Free@plt>
    2d80:	mov	x0, x19
    2d84:	ldp	x20, x19, [sp, #64]
    2d88:	ldp	x29, x30, [sp, #48]
    2d8c:	add	sp, sp, #0x50
    2d90:	ret
    2d94:	ldur	w1, [x29, #-20]
    2d98:	mov	x0, xzr
    2d9c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    2da0:	mov	x19, x0
    2da4:	cbz	x0, 2d70 <PyInit__lzma@@Base+0x64c>
    2da8:	add	x1, x19, #0x20
    2dac:	sub	x0, x29, #0x10
    2db0:	bl	2570 <lzma_properties_encode@plt>
    2db4:	bl	362c <PyInit__lzma@@Base+0xf08>
    2db8:	cbz	w0, 2d70 <PyInit__lzma@@Base+0x64c>
    2dbc:	ldr	x8, [x19]
    2dc0:	subs	x8, x8, #0x1
    2dc4:	str	x8, [x19]
    2dc8:	b.ne	2d6c <PyInit__lzma@@Base+0x648>  // b.any
    2dcc:	mov	x0, x19
    2dd0:	bl	22f0 <_Py_Dealloc@plt>
    2dd4:	b	2d6c <PyInit__lzma@@Base+0x648>
    2dd8:	sub	sp, sp, #0x90
    2ddc:	stp	x29, x30, [sp, #96]
    2de0:	stp	x22, x21, [sp, #112]
    2de4:	stp	x20, x19, [sp, #128]
    2de8:	add	x29, sp, #0x60
    2dec:	mov	x19, x1
    2df0:	movi	v0.2d, #0x0
    2df4:	cmp	x2, #0x2
    2df8:	stp	q0, q0, [sp, #48]
    2dfc:	stp	q0, q0, [sp, #16]
    2e00:	str	q0, [sp]
    2e04:	b.eq	2e28 <PyInit__lzma@@Base+0x704>  // b.none
    2e08:	mov	x8, x2
    2e0c:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2e10:	add	x0, x0, #0xb61
    2e14:	mov	w2, #0x2                   	// #2
    2e18:	mov	w3, #0x2                   	// #2
    2e1c:	mov	x1, x8
    2e20:	bl	2460 <_PyArg_CheckPositional@plt>
    2e24:	cbz	w0, 2e50 <PyInit__lzma@@Base+0x72c>
    2e28:	ldr	x0, [x19]
    2e2c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    2e30:	mov	x20, x0
    2e34:	bl	2480 <PyErr_Occurred@plt>
    2e38:	cbnz	x0, 2e50 <PyInit__lzma@@Base+0x72c>
    2e3c:	ldr	x0, [x19, #8]
    2e40:	mov	x1, sp
    2e44:	mov	w2, wzr
    2e48:	bl	2560 <PyObject_GetBuffer@plt>
    2e4c:	cbz	w0, 2e7c <PyInit__lzma@@Base+0x758>
    2e50:	mov	x19, xzr
    2e54:	ldr	x8, [sp, #8]
    2e58:	cbz	x8, 2e64 <PyInit__lzma@@Base+0x740>
    2e5c:	mov	x0, sp
    2e60:	bl	2290 <PyBuffer_Release@plt>
    2e64:	mov	x0, x19
    2e68:	ldp	x20, x19, [sp, #128]
    2e6c:	ldp	x22, x21, [sp, #112]
    2e70:	ldp	x29, x30, [sp, #96]
    2e74:	add	sp, sp, #0x90
    2e78:	ret
    2e7c:	mov	x0, sp
    2e80:	mov	w1, #0x43                  	// #67
    2e84:	bl	22d0 <PyBuffer_IsContiguous@plt>
    2e88:	cbz	w0, 2f6c <PyInit__lzma@@Base+0x848>
    2e8c:	ldr	x2, [sp]
    2e90:	ldr	x3, [sp, #16]
    2e94:	sub	x0, x29, #0x10
    2e98:	mov	x1, xzr
    2e9c:	stur	x20, [x29, #-16]
    2ea0:	bl	2470 <lzma_properties_decode@plt>
    2ea4:	bl	362c <PyInit__lzma@@Base+0xf08>
    2ea8:	mov	x19, xzr
    2eac:	cbnz	w0, 2e54 <PyInit__lzma@@Base+0x730>
    2eb0:	bl	2540 <PyDict_New@plt>
    2eb4:	mov	x19, x0
    2eb8:	cbz	x0, 311c <PyInit__lzma@@Base+0x9f8>
    2ebc:	ldur	x0, [x29, #-16]
    2ec0:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2ec4:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    2ec8:	mov	x20, x0
    2ecc:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2ed0:	add	x1, x1, #0x6e0
    2ed4:	mov	x0, x19
    2ed8:	mov	x2, x20
    2edc:	bl	2640 <_PyDict_SetItemId@plt>
    2ee0:	ldr	x8, [x20]
    2ee4:	mov	w21, w0
    2ee8:	subs	x8, x8, #0x1
    2eec:	str	x8, [x20]
    2ef0:	b.ne	2efc <PyInit__lzma@@Base+0x7d8>  // b.any
    2ef4:	mov	x0, x20
    2ef8:	bl	22f0 <_Py_Dealloc@plt>
    2efc:	cmn	w21, #0x1
    2f00:	b.eq	3100 <PyInit__lzma@@Base+0x9dc>  // b.none
    2f04:	ldur	x2, [x29, #-16]
    2f08:	cmp	x2, #0x20
    2f0c:	b.gt	2f90 <PyInit__lzma@@Base+0x86c>
    2f10:	sub	x8, x2, #0x4
    2f14:	cmp	x8, #0x6
    2f18:	b.cs	30a0 <PyInit__lzma@@Base+0x97c>  // b.hs, b.nlast
    2f1c:	ldur	x8, [x29, #-8]
    2f20:	ldr	w0, [x8]
    2f24:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2f28:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    2f2c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2f30:	mov	x20, x0
    2f34:	add	x1, x1, #0x788
    2f38:	mov	x0, x19
    2f3c:	mov	x2, x20
    2f40:	bl	2640 <_PyDict_SetItemId@plt>
    2f44:	ldr	x8, [x20]
    2f48:	mov	w21, w0
    2f4c:	subs	x8, x8, #0x1
    2f50:	str	x8, [x20]
    2f54:	b.ne	2f60 <PyInit__lzma@@Base+0x83c>  // b.any
    2f58:	mov	x0, x20
    2f5c:	bl	22f0 <_Py_Dealloc@plt>
    2f60:	cmn	w21, #0x1
    2f64:	b.ne	311c <PyInit__lzma@@Base+0x9f8>  // b.any
    2f68:	b	3100 <PyInit__lzma@@Base+0x9dc>
    2f6c:	ldr	x3, [x19, #8]
    2f70:	adrp	x0, 5000 <PyInit__lzma@@Base+0x28dc>
    2f74:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    2f78:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    2f7c:	add	x0, x0, #0xb61
    2f80:	add	x1, x1, #0xe5b
    2f84:	add	x2, x2, #0xe66
    2f88:	bl	2400 <_PyArg_BadArgument@plt>
    2f8c:	b	2e50 <PyInit__lzma@@Base+0x72c>
    2f90:	cmp	x2, #0x21
    2f94:	b.eq	30c8 <PyInit__lzma@@Base+0x9a4>  // b.none
    2f98:	mov	x8, #0x1                   	// #1
    2f9c:	movk	x8, #0x4000, lsl #48
    2fa0:	cmp	x2, x8
    2fa4:	b.ne	30e8 <PyInit__lzma@@Base+0x9c4>  // b.any
    2fa8:	ldur	x22, [x29, #-8]
    2fac:	ldr	w0, [x22, #20]
    2fb0:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2fb4:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    2fb8:	mov	x20, x0
    2fbc:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    2fc0:	add	x1, x1, #0x6f8
    2fc4:	mov	x0, x19
    2fc8:	mov	x2, x20
    2fcc:	bl	2640 <_PyDict_SetItemId@plt>
    2fd0:	ldr	x8, [x20]
    2fd4:	mov	w21, w0
    2fd8:	subs	x8, x8, #0x1
    2fdc:	str	x8, [x20]
    2fe0:	b.ne	2fec <PyInit__lzma@@Base+0x8c8>  // b.any
    2fe4:	mov	x0, x20
    2fe8:	bl	22f0 <_Py_Dealloc@plt>
    2fec:	cmn	w21, #0x1
    2ff0:	b.eq	3100 <PyInit__lzma@@Base+0x9dc>  // b.none
    2ff4:	ldr	w0, [x22, #24]
    2ff8:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    2ffc:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    3000:	mov	x20, x0
    3004:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3008:	add	x1, x1, #0x710
    300c:	mov	x0, x19
    3010:	mov	x2, x20
    3014:	bl	2640 <_PyDict_SetItemId@plt>
    3018:	ldr	x8, [x20]
    301c:	mov	w21, w0
    3020:	subs	x8, x8, #0x1
    3024:	str	x8, [x20]
    3028:	b.ne	3034 <PyInit__lzma@@Base+0x910>  // b.any
    302c:	mov	x0, x20
    3030:	bl	22f0 <_Py_Dealloc@plt>
    3034:	cmn	w21, #0x1
    3038:	b.eq	3100 <PyInit__lzma@@Base+0x9dc>  // b.none
    303c:	ldr	w0, [x22, #28]
    3040:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    3044:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    3048:	mov	x20, x0
    304c:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3050:	add	x1, x1, #0x728
    3054:	mov	x0, x19
    3058:	mov	x2, x20
    305c:	bl	2640 <_PyDict_SetItemId@plt>
    3060:	ldr	x8, [x20]
    3064:	mov	w21, w0
    3068:	subs	x8, x8, #0x1
    306c:	str	x8, [x20]
    3070:	b.ne	307c <PyInit__lzma@@Base+0x958>  // b.any
    3074:	mov	x0, x20
    3078:	bl	22f0 <_Py_Dealloc@plt>
    307c:	cmn	w21, #0x1
    3080:	b.eq	3100 <PyInit__lzma@@Base+0x9dc>  // b.none
    3084:	ldr	w0, [x22]
    3088:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    308c:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    3090:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    3094:	mov	x20, x0
    3098:	add	x1, x1, #0x740
    309c:	b	2f38 <PyInit__lzma@@Base+0x814>
    30a0:	cmp	x2, #0x3
    30a4:	b.ne	30e8 <PyInit__lzma@@Base+0x9c4>  // b.any
    30a8:	ldur	x8, [x29, #-8]
    30ac:	ldr	w0, [x8, #4]
    30b0:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    30b4:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    30b8:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    30bc:	mov	x20, x0
    30c0:	add	x1, x1, #0x770
    30c4:	b	2f38 <PyInit__lzma@@Base+0x814>
    30c8:	ldur	x8, [x29, #-8]
    30cc:	ldr	w0, [x8]
    30d0:	bl	2280 <PyLong_FromUnsignedLongLong@plt>
    30d4:	cbz	x0, 3100 <PyInit__lzma@@Base+0x9dc>
    30d8:	adrp	x1, 17000 <PyInit__lzma@@Base+0x148dc>
    30dc:	mov	x20, x0
    30e0:	add	x1, x1, #0x758
    30e4:	b	2f38 <PyInit__lzma@@Base+0x814>
    30e8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    30ec:	ldr	x8, [x8, #4008]
    30f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    30f4:	add	x1, x1, #0xc00
    30f8:	ldr	x0, [x8]
    30fc:	bl	25b0 <PyErr_Format@plt>
    3100:	ldr	x8, [x19]
    3104:	subs	x8, x8, #0x1
    3108:	str	x8, [x19]
    310c:	b.ne	3118 <PyInit__lzma@@Base+0x9f4>  // b.any
    3110:	mov	x0, x19
    3114:	bl	22f0 <_Py_Dealloc@plt>
    3118:	mov	x19, xzr
    311c:	ldur	x0, [x29, #-8]
    3120:	bl	24f0 <free@plt>
    3124:	b	2e54 <PyInit__lzma@@Base+0x730>
    3128:	sub	sp, sp, #0xc0
    312c:	stp	x29, x30, [sp, #128]
    3130:	str	x23, [sp, #144]
    3134:	stp	x22, x21, [sp, #160]
    3138:	stp	x20, x19, [sp, #176]
    313c:	add	x29, sp, #0x80
    3140:	mov	x19, x1
    3144:	mov	x20, x0
    3148:	bl	2230 <PyMapping_Check@plt>
    314c:	cbz	w0, 318c <PyInit__lzma@@Base+0xa68>
    3150:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3154:	add	x1, x1, #0xbd4
    3158:	mov	x0, x20
    315c:	bl	2360 <PyMapping_GetItemString@plt>
    3160:	cbz	x0, 31a0 <PyInit__lzma@@Base+0xa7c>
    3164:	mov	x21, x0
    3168:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    316c:	str	x0, [x19]
    3170:	ldr	x8, [x21]
    3174:	subs	x8, x8, #0x1
    3178:	str	x8, [x21]
    317c:	b.eq	31d4 <PyInit__lzma@@Base+0xab0>  // b.none
    3180:	bl	2480 <PyErr_Occurred@plt>
    3184:	cbnz	x0, 31e4 <PyInit__lzma@@Base+0xac0>
    3188:	b	31ec <PyInit__lzma@@Base+0xac8>
    318c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3190:	ldr	x8, [x8, #4016]
    3194:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3198:	add	x1, x1, #0xba0
    319c:	b	31c4 <PyInit__lzma@@Base+0xaa0>
    31a0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    31a4:	ldr	x8, [x8, #4024]
    31a8:	ldr	x0, [x8]
    31ac:	bl	23a0 <PyErr_ExceptionMatches@plt>
    31b0:	cbz	w0, 34bc <PyInit__lzma@@Base+0xd98>
    31b4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    31b8:	ldr	x8, [x8, #4008]
    31bc:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    31c0:	add	x1, x1, #0xbd7
    31c4:	ldr	x0, [x8]
    31c8:	bl	2350 <PyErr_SetString@plt>
    31cc:	mov	w0, wzr
    31d0:	b	34bc <PyInit__lzma@@Base+0xd98>
    31d4:	mov	x0, x21
    31d8:	bl	22f0 <_Py_Dealloc@plt>
    31dc:	bl	2480 <PyErr_Occurred@plt>
    31e0:	cbz	x0, 31ec <PyInit__lzma@@Base+0xac8>
    31e4:	mov	w0, wzr
    31e8:	b	34bc <PyInit__lzma@@Base+0xd98>
    31ec:	ldr	x2, [x19]
    31f0:	cmp	x2, #0x20
    31f4:	b.gt	3258 <PyInit__lzma@@Base+0xb34>
    31f8:	sub	x8, x2, #0x4
    31fc:	cmp	x8, #0x6
    3200:	b.cs	3304 <PyInit__lzma@@Base+0xbe0>  // b.hs, b.nlast
    3204:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3208:	ldr	x0, [x8, #2488]
    320c:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3210:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    3214:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    3218:	add	x2, x2, #0xd1a
    321c:	add	x3, x3, #0x6c8
    3220:	add	x5, x5, #0x500
    3224:	add	x4, x29, #0x18
    3228:	sub	x6, x29, #0x8
    322c:	mov	x1, x20
    3230:	stur	wzr, [x29, #-8]
    3234:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3238:	cbz	w0, 32e4 <PyInit__lzma@@Base+0xbc0>
    323c:	mov	w0, #0x4                   	// #4
    3240:	bl	2620 <PyMem_Malloc@plt>
    3244:	cbz	x0, 336c <PyInit__lzma@@Base+0xc48>
    3248:	str	wzr, [x0]
    324c:	ldur	w8, [x29, #-8]
    3250:	str	w8, [x0]
    3254:	b	3370 <PyInit__lzma@@Base+0xc4c>
    3258:	mov	x8, #0x1                   	// #1
    325c:	movk	x8, #0x4000, lsl #48
    3260:	cmp	x2, x8
    3264:	b.eq	3270 <PyInit__lzma@@Base+0xb4c>  // b.none
    3268:	cmp	x2, #0x21
    326c:	b.ne	337c <PyInit__lzma@@Base+0xc58>  // b.any
    3270:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3274:	add	x1, x1, #0xc18
    3278:	mov	x0, x20
    327c:	bl	2360 <PyMapping_GetItemString@plt>
    3280:	stur	x0, [x29, #-8]
    3284:	cbz	x0, 3398 <PyInit__lzma@@Base+0xc74>
    3288:	mov	x21, x0
    328c:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3290:	mov	x22, x0
    3294:	bl	2480 <PyErr_Occurred@plt>
    3298:	cbnz	x0, 32bc <PyInit__lzma@@Base+0xb98>
    329c:	lsr	x8, x22, #32
    32a0:	cbz	x8, 34d4 <PyInit__lzma@@Base+0xdb0>
    32a4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    32a8:	ldr	x8, [x8, #4040]
    32ac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    32b0:	add	x1, x1, #0xca5
    32b4:	ldr	x0, [x8]
    32b8:	bl	2350 <PyErr_SetString@plt>
    32bc:	mov	w23, wzr
    32c0:	mov	w22, #0x6                   	// #6
    32c4:	ldr	x8, [x21]
    32c8:	subs	x8, x8, #0x1
    32cc:	str	x8, [x21]
    32d0:	b.ne	32dc <PyInit__lzma@@Base+0xbb8>  // b.any
    32d4:	mov	x0, x21
    32d8:	bl	22f0 <_Py_Dealloc@plt>
    32dc:	cbnz	w23, 33b4 <PyInit__lzma@@Base+0xc90>
    32e0:	b	3408 <PyInit__lzma@@Base+0xce4>
    32e4:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    32e8:	ldr	x8, [x8, #4008]
    32ec:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    32f0:	add	x1, x1, #0xd56
    32f4:	ldr	x0, [x8]
    32f8:	bl	2350 <PyErr_SetString@plt>
    32fc:	mov	x0, xzr
    3300:	b	3370 <PyInit__lzma@@Base+0xc4c>
    3304:	cmp	x2, #0x3
    3308:	b.ne	337c <PyInit__lzma@@Base+0xc58>  // b.any
    330c:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3310:	ldr	x0, [x8, #2488]
    3314:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3318:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    331c:	adrp	x5, 3000 <PyInit__lzma@@Base+0x8dc>
    3320:	mov	w8, #0x1                   	// #1
    3324:	add	x2, x2, #0xd1a
    3328:	add	x3, x3, #0x6b0
    332c:	add	x5, x5, #0x500
    3330:	add	x4, x29, #0x18
    3334:	sub	x6, x29, #0x8
    3338:	mov	x1, x20
    333c:	stur	w8, [x29, #-8]
    3340:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3344:	cbz	w0, 341c <PyInit__lzma@@Base+0xcf8>
    3348:	mov	w0, #0x28                  	// #40
    334c:	bl	2620 <PyMem_Malloc@plt>
    3350:	cbz	x0, 336c <PyInit__lzma@@Base+0xc48>
    3354:	movi	v0.2d, #0x0
    3358:	str	xzr, [x0, #32]
    335c:	stp	q0, q0, [x0]
    3360:	ldur	w8, [x29, #-8]
    3364:	str	w8, [x0, #4]
    3368:	b	3370 <PyInit__lzma@@Base+0xc4c>
    336c:	bl	2300 <PyErr_NoMemory@plt>
    3370:	cmp	x0, #0x0
    3374:	str	x0, [x19, #8]
    3378:	b	34b8 <PyInit__lzma@@Base+0xd94>
    337c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3380:	ldr	x8, [x8, #4008]
    3384:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3388:	add	x1, x1, #0xc00
    338c:	ldr	x0, [x8]
    3390:	bl	25b0 <PyErr_Format@plt>
    3394:	b	31e4 <PyInit__lzma@@Base+0xac0>
    3398:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    339c:	ldr	x8, [x8, #4024]
    33a0:	ldr	x0, [x8]
    33a4:	bl	23a0 <PyErr_ExceptionMatches@plt>
    33a8:	cbz	w0, 3408 <PyInit__lzma@@Base+0xce4>
    33ac:	bl	2420 <PyErr_Clear@plt>
    33b0:	mov	w22, #0x6                   	// #6
    33b4:	mov	w0, #0x70                  	// #112
    33b8:	bl	2620 <PyMem_Malloc@plt>
    33bc:	cbz	x0, 3410 <PyInit__lzma@@Base+0xcec>
    33c0:	movi	v0.2d, #0x0
    33c4:	mov	w1, w22
    33c8:	mov	x21, x0
    33cc:	stp	q0, q0, [x0, #80]
    33d0:	stp	q0, q0, [x0, #48]
    33d4:	stp	q0, q0, [x0, #16]
    33d8:	str	q0, [x0]
    33dc:	bl	2610 <lzma_lzma_preset@plt>
    33e0:	tst	w0, #0xff
    33e4:	b.eq	3430 <PyInit__lzma@@Base+0xd0c>  // b.none
    33e8:	mov	x0, x21
    33ec:	bl	2270 <PyMem_Free@plt>
    33f0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    33f4:	ldr	x0, [x8, #2496]
    33f8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    33fc:	add	x1, x1, #0xc49
    3400:	mov	w2, w22
    3404:	bl	25b0 <PyErr_Format@plt>
    3408:	mov	x21, xzr
    340c:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    3410:	bl	2300 <PyErr_NoMemory@plt>
    3414:	mov	x21, x0
    3418:	b	34b0 <PyInit__lzma@@Base+0xd8c>
    341c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3420:	ldr	x8, [x8, #4008]
    3424:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3428:	add	x1, x1, #0xd1f
    342c:	b	32f4 <PyInit__lzma@@Base+0xbd0>
    3430:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3434:	ldr	x0, [x8, #2488]
    3438:	adrp	x6, 3000 <PyInit__lzma@@Base+0x8dc>
    343c:	adrp	x15, 3000 <PyInit__lzma@@Base+0x8dc>
    3440:	adrp	x16, 3000 <PyInit__lzma@@Base+0x8dc>
    3444:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3448:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    344c:	add	x9, x21, #0x14
    3450:	add	x10, x21, #0x18
    3454:	add	x11, x21, #0x1c
    3458:	add	x8, x21, #0x20
    345c:	add	x12, x21, #0x24
    3460:	add	x13, x21, #0x28
    3464:	add	x14, x21, #0x2c
    3468:	add	x6, x6, #0x500
    346c:	add	x15, x15, #0x5c8
    3470:	add	x16, x16, #0x564
    3474:	add	x2, x2, #0xc68
    3478:	add	x3, x3, #0x658
    347c:	add	x4, x29, #0x18
    3480:	sub	x5, x29, #0x8
    3484:	mov	x1, x20
    3488:	mov	x7, x21
    348c:	stp	x15, x13, [sp, #80]
    3490:	stp	x16, x8, [sp, #48]
    3494:	stp	x6, x14, [sp, #96]
    3498:	stp	x6, x12, [sp, #64]
    349c:	stp	x6, x11, [sp, #32]
    34a0:	stp	x6, x10, [sp, #16]
    34a4:	stp	x6, x9, [sp]
    34a8:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    34ac:	cbz	w0, 34dc <PyInit__lzma@@Base+0xdb8>
    34b0:	str	x21, [x19, #8]
    34b4:	cmp	x21, #0x0
    34b8:	cset	w0, ne  // ne = any
    34bc:	ldp	x20, x19, [sp, #176]
    34c0:	ldp	x22, x21, [sp, #160]
    34c4:	ldr	x23, [sp, #144]
    34c8:	ldp	x29, x30, [sp, #128]
    34cc:	add	sp, sp, #0xc0
    34d0:	ret
    34d4:	mov	w23, #0x1                   	// #1
    34d8:	b	32c4 <PyInit__lzma@@Base+0xba0>
    34dc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    34e0:	ldr	x8, [x8, #4008]
    34e4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    34e8:	add	x1, x1, #0xc7c
    34ec:	ldr	x0, [x8]
    34f0:	bl	2350 <PyErr_SetString@plt>
    34f4:	mov	x0, x21
    34f8:	bl	2270 <PyMem_Free@plt>
    34fc:	b	3408 <PyInit__lzma@@Base+0xce4>
    3500:	stp	x29, x30, [sp, #-32]!
    3504:	stp	x20, x19, [sp, #16]
    3508:	mov	x29, sp
    350c:	mov	x19, x1
    3510:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3514:	mov	x20, x0
    3518:	bl	2480 <PyErr_Occurred@plt>
    351c:	cbz	x0, 3528 <PyInit__lzma@@Base+0xe04>
    3520:	mov	w0, wzr
    3524:	b	3558 <PyInit__lzma@@Base+0xe34>
    3528:	lsr	x8, x20, #32
    352c:	cbz	x8, 3550 <PyInit__lzma@@Base+0xe2c>
    3530:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3534:	ldr	x8, [x8, #4040]
    3538:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    353c:	add	x1, x1, #0xca5
    3540:	ldr	x0, [x8]
    3544:	bl	2350 <PyErr_SetString@plt>
    3548:	mov	w0, wzr
    354c:	b	3558 <PyInit__lzma@@Base+0xe34>
    3550:	mov	w0, #0x1                   	// #1
    3554:	str	w20, [x19]
    3558:	ldp	x20, x19, [sp, #16]
    355c:	ldp	x29, x30, [sp], #32
    3560:	ret
    3564:	stp	x29, x30, [sp, #-32]!
    3568:	stp	x20, x19, [sp, #16]
    356c:	mov	x29, sp
    3570:	mov	x19, x1
    3574:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3578:	mov	x20, x0
    357c:	bl	2480 <PyErr_Occurred@plt>
    3580:	cbz	x0, 358c <PyInit__lzma@@Base+0xe68>
    3584:	mov	w0, wzr
    3588:	b	35bc <PyInit__lzma@@Base+0xe98>
    358c:	lsr	x8, x20, #32
    3590:	cbz	x8, 35b4 <PyInit__lzma@@Base+0xe90>
    3594:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3598:	ldr	x8, [x8, #4040]
    359c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    35a0:	add	x1, x1, #0xcc7
    35a4:	ldr	x0, [x8]
    35a8:	bl	2350 <PyErr_SetString@plt>
    35ac:	mov	w0, wzr
    35b0:	b	35bc <PyInit__lzma@@Base+0xe98>
    35b4:	mov	w0, #0x1                   	// #1
    35b8:	str	w20, [x19]
    35bc:	ldp	x20, x19, [sp, #16]
    35c0:	ldp	x29, x30, [sp], #32
    35c4:	ret
    35c8:	stp	x29, x30, [sp, #-32]!
    35cc:	stp	x20, x19, [sp, #16]
    35d0:	mov	x29, sp
    35d4:	mov	x19, x1
    35d8:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    35dc:	mov	x20, x0
    35e0:	bl	2480 <PyErr_Occurred@plt>
    35e4:	cbz	x0, 35f0 <PyInit__lzma@@Base+0xecc>
    35e8:	mov	w0, wzr
    35ec:	b	3620 <PyInit__lzma@@Base+0xefc>
    35f0:	lsr	x8, x20, #32
    35f4:	cbz	x8, 3618 <PyInit__lzma@@Base+0xef4>
    35f8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    35fc:	ldr	x8, [x8, #4040]
    3600:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3604:	add	x1, x1, #0xcea
    3608:	ldr	x0, [x8]
    360c:	bl	2350 <PyErr_SetString@plt>
    3610:	mov	w0, wzr
    3614:	b	3620 <PyInit__lzma@@Base+0xefc>
    3618:	mov	w0, #0x1                   	// #1
    361c:	str	w20, [x19]
    3620:	ldp	x20, x19, [sp, #16]
    3624:	ldp	x29, x30, [sp], #32
    3628:	ret
    362c:	stp	x29, x30, [sp, #-16]!
    3630:	mov	x29, sp
    3634:	mov	w2, w0
    3638:	cmp	w0, #0xb
    363c:	b.hi	3718 <PyInit__lzma@@Base+0xff4>  // b.pmore
    3640:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    3644:	mov	w8, w2
    3648:	add	x9, x9, #0x990
    364c:	adr	x10, 3660 <PyInit__lzma@@Base+0xf3c>
    3650:	ldrb	w11, [x9, x8]
    3654:	add	x10, x10, x11, lsl #2
    3658:	mov	w0, wzr
    365c:	br	x10
    3660:	ldp	x29, x30, [sp], #16
    3664:	ret
    3668:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    366c:	ldr	x0, [x8, #2496]
    3670:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3674:	add	x1, x1, #0xd7e
    3678:	bl	2350 <PyErr_SetString@plt>
    367c:	b	372c <PyInit__lzma@@Base+0x1008>
    3680:	bl	2300 <PyErr_NoMemory@plt>
    3684:	b	372c <PyInit__lzma@@Base+0x1008>
    3688:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    368c:	ldr	x0, [x8, #2496]
    3690:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3694:	add	x1, x1, #0xd9a
    3698:	bl	2350 <PyErr_SetString@plt>
    369c:	b	372c <PyInit__lzma@@Base+0x1008>
    36a0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    36a4:	ldr	x0, [x8, #2496]
    36a8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    36ac:	add	x1, x1, #0xdb6
    36b0:	bl	2350 <PyErr_SetString@plt>
    36b4:	b	372c <PyInit__lzma@@Base+0x1008>
    36b8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    36bc:	ldr	x0, [x8, #2496]
    36c0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    36c4:	add	x1, x1, #0xddc
    36c8:	bl	2350 <PyErr_SetString@plt>
    36cc:	b	372c <PyInit__lzma@@Base+0x1008>
    36d0:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    36d4:	ldr	x0, [x8, #2496]
    36d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    36dc:	add	x1, x1, #0xdfb
    36e0:	bl	2350 <PyErr_SetString@plt>
    36e4:	b	372c <PyInit__lzma@@Base+0x1008>
    36e8:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    36ec:	ldr	x0, [x8, #2496]
    36f0:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    36f4:	add	x1, x1, #0xe0e
    36f8:	bl	2350 <PyErr_SetString@plt>
    36fc:	b	372c <PyInit__lzma@@Base+0x1008>
    3700:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3704:	ldr	x0, [x8, #2496]
    3708:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    370c:	add	x1, x1, #0xe28
    3710:	bl	2350 <PyErr_SetString@plt>
    3714:	b	372c <PyInit__lzma@@Base+0x1008>
    3718:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    371c:	ldr	x0, [x8, #2496]
    3720:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3724:	add	x1, x1, #0xe37
    3728:	bl	25b0 <PyErr_Format@plt>
    372c:	mov	w0, #0x1                   	// #1
    3730:	ldp	x29, x30, [sp], #16
    3734:	ret
    3738:	stp	x29, x30, [sp, #-32]!
    373c:	str	x19, [sp, #16]
    3740:	mov	x29, sp
    3744:	mov	x19, x0
    3748:	add	x0, x0, #0x28
    374c:	bl	24c0 <lzma_end@plt>
    3750:	ldr	x0, [x19, #184]
    3754:	cbz	x0, 375c <PyInit__lzma@@Base+0x1038>
    3758:	bl	2630 <PyThread_free_lock@plt>
    375c:	ldr	x8, [x19, #8]
    3760:	mov	x0, x19
    3764:	ldr	x19, [sp, #16]
    3768:	ldr	x1, [x8, #320]
    376c:	ldp	x29, x30, [sp], #32
    3770:	br	x1
    3774:	sub	sp, sp, #0xc0
    3778:	stp	x29, x30, [sp, #128]
    377c:	str	x23, [sp, #144]
    3780:	stp	x22, x21, [sp, #160]
    3784:	stp	x20, x19, [sp, #176]
    3788:	add	x29, sp, #0x80
    378c:	adrp	x23, 16000 <PyInit__lzma@@Base+0x138dc>
    3790:	ldr	x23, [x23, #4056]
    3794:	mov	x8, x2
    3798:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    379c:	adrp	x3, 17000 <PyInit__lzma@@Base+0x148dc>
    37a0:	mov	x19, x0
    37a4:	mov	w9, #0x1                   	// #1
    37a8:	mov	w20, #0xffffffff            	// #-1
    37ac:	add	x2, x2, #0xee0
    37b0:	add	x3, x3, #0x800
    37b4:	add	x4, x29, #0x1c
    37b8:	add	x5, x29, #0x18
    37bc:	add	x6, sp, #0x8
    37c0:	mov	x7, sp
    37c4:	mov	x0, x1
    37c8:	mov	x1, x8
    37cc:	stp	w20, w9, [x29, #24]
    37d0:	stp	x23, x23, [sp]
    37d4:	bl	2510 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    37d8:	cbz	w0, 3840 <PyInit__lzma@@Base+0x111c>
    37dc:	ldr	w8, [x29, #28]
    37e0:	cmp	w8, #0x1
    37e4:	b.eq	380c <PyInit__lzma@@Base+0x10e8>  // b.none
    37e8:	ldr	w8, [x29, #24]
    37ec:	add	w8, w8, #0x1
    37f0:	cmp	w8, #0x2
    37f4:	b.cc	380c <PyInit__lzma@@Base+0x10e8>  // b.lo, b.ul, b.last
    37f8:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    37fc:	ldr	x8, [x8, #4008]
    3800:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3804:	add	x1, x1, #0xef5
    3808:	b	3834 <PyInit__lzma@@Base+0x1110>
    380c:	ldr	x0, [sp, #8]
    3810:	cmp	x0, x23
    3814:	b.eq	385c <PyInit__lzma@@Base+0x1138>  // b.none
    3818:	ldr	x8, [sp]
    381c:	cmp	x8, x23
    3820:	b.eq	385c <PyInit__lzma@@Base+0x1138>  // b.none
    3824:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3828:	ldr	x8, [x8, #4008]
    382c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3830:	add	x1, x1, #0xf26
    3834:	ldr	x0, [x8]
    3838:	bl	2350 <PyErr_SetString@plt>
    383c:	mov	w20, #0xffffffff            	// #-1
    3840:	mov	w0, w20
    3844:	ldp	x20, x19, [sp, #176]
    3848:	ldp	x22, x21, [sp, #160]
    384c:	ldr	x23, [sp, #144]
    3850:	ldp	x29, x30, [sp, #128]
    3854:	add	sp, sp, #0xc0
    3858:	ret
    385c:	cmp	x0, x23
    3860:	b.eq	3890 <PyInit__lzma@@Base+0x116c>  // b.none
    3864:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    3868:	mov	x21, x0
    386c:	bl	2480 <PyErr_Occurred@plt>
    3870:	cbnz	x0, 383c <PyInit__lzma@@Base+0x1118>
    3874:	lsr	x8, x21, #32
    3878:	cbz	x8, 3894 <PyInit__lzma@@Base+0x1170>
    387c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3880:	ldr	x8, [x8, #4040]
    3884:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3888:	add	x1, x1, #0xca5
    388c:	b	3834 <PyInit__lzma@@Base+0x1110>
    3890:	mov	w21, #0x6                   	// #6
    3894:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    3898:	add	x8, x8, #0xeb0
    389c:	mov	x20, x19
    38a0:	adrp	x9, 3000 <PyInit__lzma@@Base+0x8dc>
    38a4:	add	x9, x9, #0xed4
    38a8:	str	x8, [x20, #16]!
    38ac:	stp	x9, xzr, [x20, #8]
    38b0:	str	x20, [x20, #72]
    38b4:	bl	2500 <PyThread_allocate_lock@plt>
    38b8:	str	x0, [x20, #168]
    38bc:	cbz	x0, 3968 <PyInit__lzma@@Base+0x1244>
    38c0:	str	wzr, [x19, #176]
    38c4:	ldr	w2, [x29, #28]
    38c8:	add	x20, x20, #0x18
    38cc:	cmp	w2, #0x3
    38d0:	b.eq	397c <PyInit__lzma@@Base+0x1258>  // b.none
    38d4:	cmp	w2, #0x2
    38d8:	b.eq	39e8 <PyInit__lzma@@Base+0x12c4>  // b.none
    38dc:	cmp	w2, #0x1
    38e0:	b.ne	3a44 <PyInit__lzma@@Base+0x1320>  // b.any
    38e4:	ldr	w22, [x29, #24]
    38e8:	cmn	w22, #0x1
    38ec:	b.ne	38f8 <PyInit__lzma@@Base+0x11d4>  // b.any
    38f0:	mov	w22, #0x4                   	// #4
    38f4:	str	w22, [x29, #24]
    38f8:	ldr	x1, [sp]
    38fc:	cmp	x1, x23
    3900:	b.eq	3a60 <PyInit__lzma@@Base+0x133c>  // b.none
    3904:	add	x0, sp, #0x10
    3908:	bl	3edc <PyInit__lzma@@Base+0x17b8>
    390c:	cmn	w0, #0x1
    3910:	b.eq	3b4c <PyInit__lzma@@Base+0x1428>  // b.none
    3914:	add	x1, sp, #0x10
    3918:	mov	x0, x20
    391c:	mov	w2, w22
    3920:	add	x21, sp, #0x10
    3924:	bl	25d0 <lzma_stream_encoder@plt>
    3928:	ldr	x8, [sp, #16]
    392c:	mov	w20, w0
    3930:	cmn	x8, #0x1
    3934:	b.eq	3b40 <PyInit__lzma@@Base+0x141c>  // b.none
    3938:	mov	x8, xzr
    393c:	mov	w22, #0x1                   	// #1
    3940:	add	x8, x21, x8, lsl #4
    3944:	ldr	x0, [x8, #8]
    3948:	bl	2270 <PyMem_Free@plt>
    394c:	sbfiz	x8, x22, #4, #32
    3950:	ldr	x9, [x21, x8]
    3954:	sxtw	x8, w22
    3958:	add	w22, w22, #0x1
    395c:	cmn	x9, #0x1
    3960:	b.ne	3940 <PyInit__lzma@@Base+0x121c>  // b.any
    3964:	b	3b40 <PyInit__lzma@@Base+0x141c>
    3968:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    396c:	ldr	x8, [x8, #4000]
    3970:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3974:	add	x1, x1, #0xf52
    3978:	b	3834 <PyInit__lzma@@Base+0x1110>
    397c:	ldr	x1, [sp]
    3980:	cmp	x1, x23
    3984:	b.eq	3a78 <PyInit__lzma@@Base+0x1354>  // b.none
    3988:	add	x0, sp, #0x10
    398c:	bl	3edc <PyInit__lzma@@Base+0x17b8>
    3990:	cmn	w0, #0x1
    3994:	b.eq	3b4c <PyInit__lzma@@Base+0x1428>  // b.none
    3998:	add	x1, sp, #0x10
    399c:	mov	x0, x20
    39a0:	add	x21, sp, #0x10
    39a4:	bl	2370 <lzma_raw_encoder@plt>
    39a8:	ldr	x8, [sp, #16]
    39ac:	mov	w20, w0
    39b0:	cmn	x8, #0x1
    39b4:	b.eq	3b40 <PyInit__lzma@@Base+0x141c>  // b.none
    39b8:	mov	x8, xzr
    39bc:	mov	w22, #0x1                   	// #1
    39c0:	add	x8, x21, x8, lsl #4
    39c4:	ldr	x0, [x8, #8]
    39c8:	bl	2270 <PyMem_Free@plt>
    39cc:	sbfiz	x8, x22, #4, #32
    39d0:	ldr	x9, [x21, x8]
    39d4:	sxtw	x8, w22
    39d8:	add	w22, w22, #0x1
    39dc:	cmn	x9, #0x1
    39e0:	b.ne	39c0 <PyInit__lzma@@Base+0x129c>  // b.any
    39e4:	b	3b40 <PyInit__lzma@@Base+0x141c>
    39e8:	ldr	x1, [sp]
    39ec:	add	x0, sp, #0x10
    39f0:	cmp	x1, x23
    39f4:	b.eq	3a94 <PyInit__lzma@@Base+0x1370>  // b.none
    39f8:	bl	3edc <PyInit__lzma@@Base+0x17b8>
    39fc:	cmn	w0, #0x1
    3a00:	b.eq	3b4c <PyInit__lzma@@Base+0x1428>  // b.none
    3a04:	ldr	x21, [sp, #16]
    3a08:	mov	x8, #0x1                   	// #1
    3a0c:	movk	x8, #0x4000, lsl #48
    3a10:	cmp	x21, x8
    3a14:	b.ne	3abc <PyInit__lzma@@Base+0x1398>  // b.any
    3a18:	ldr	x8, [sp, #32]
    3a1c:	cmn	x8, #0x1
    3a20:	b.eq	3af8 <PyInit__lzma@@Base+0x13d4>  // b.none
    3a24:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3a28:	ldr	x8, [x8, #4008]
    3a2c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3a30:	add	x1, x1, #0xfbb
    3a34:	ldr	x0, [x8]
    3a38:	bl	2350 <PyErr_SetString@plt>
    3a3c:	mov	w20, #0xb                   	// #11
    3a40:	b	3b08 <PyInit__lzma@@Base+0x13e4>
    3a44:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3a48:	ldr	x8, [x8, #4008]
    3a4c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3a50:	add	x1, x1, #0xf6a
    3a54:	ldr	x0, [x8]
    3a58:	bl	25b0 <PyErr_Format@plt>
    3a5c:	b	3b4c <PyInit__lzma@@Base+0x1428>
    3a60:	mov	x0, x20
    3a64:	mov	w1, w21
    3a68:	mov	w2, w22
    3a6c:	bl	2330 <lzma_easy_encoder@plt>
    3a70:	mov	w20, w0
    3a74:	b	3b40 <PyInit__lzma@@Base+0x141c>
    3a78:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3a7c:	ldr	x8, [x8, #4008]
    3a80:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    3a84:	add	x1, x1, #0x1
    3a88:	ldr	x0, [x8]
    3a8c:	bl	2350 <PyErr_SetString@plt>
    3a90:	b	3b4c <PyInit__lzma@@Base+0x1428>
    3a94:	mov	w1, w21
    3a98:	bl	2610 <lzma_lzma_preset@plt>
    3a9c:	tst	w0, #0xff
    3aa0:	b.eq	3ae4 <PyInit__lzma@@Base+0x13c0>  // b.none
    3aa4:	adrp	x8, 17000 <PyInit__lzma@@Base+0x148dc>
    3aa8:	ldr	x0, [x8, #2496]
    3aac:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3ab0:	add	x1, x1, #0xc49
    3ab4:	mov	w2, w21
    3ab8:	b	3a58 <PyInit__lzma@@Base+0x1334>
    3abc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3ac0:	ldr	x8, [x8, #4008]
    3ac4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3ac8:	add	x1, x1, #0xfbb
    3acc:	ldr	x0, [x8]
    3ad0:	bl	2350 <PyErr_SetString@plt>
    3ad4:	cmn	x21, #0x1
    3ad8:	mov	w20, #0xb                   	// #11
    3adc:	b.ne	3b08 <PyInit__lzma@@Base+0x13e4>  // b.any
    3ae0:	b	3b38 <PyInit__lzma@@Base+0x1414>
    3ae4:	add	x1, sp, #0x10
    3ae8:	mov	x0, x20
    3aec:	bl	2550 <lzma_alone_encoder@plt>
    3af0:	mov	w20, w0
    3af4:	b	3b38 <PyInit__lzma@@Base+0x1414>
    3af8:	ldr	x1, [sp, #24]
    3afc:	mov	x0, x20
    3b00:	bl	2550 <lzma_alone_encoder@plt>
    3b04:	mov	w20, w0
    3b08:	mov	x8, xzr
    3b0c:	mov	w21, #0x1                   	// #1
    3b10:	add	x22, sp, #0x10
    3b14:	add	x8, x22, x8, lsl #4
    3b18:	ldr	x0, [x8, #8]
    3b1c:	bl	2270 <PyMem_Free@plt>
    3b20:	sbfiz	x8, x21, #4, #32
    3b24:	ldr	x9, [x22, x8]
    3b28:	sxtw	x8, w21
    3b2c:	add	w21, w21, #0x1
    3b30:	cmn	x9, #0x1
    3b34:	b.ne	3b14 <PyInit__lzma@@Base+0x13f0>  // b.any
    3b38:	bl	2480 <PyErr_Occurred@plt>
    3b3c:	cbnz	x0, 3b4c <PyInit__lzma@@Base+0x1428>
    3b40:	mov	w0, w20
    3b44:	bl	362c <PyInit__lzma@@Base+0xf08>
    3b48:	cbz	w0, 3b5c <PyInit__lzma@@Base+0x1438>
    3b4c:	ldr	x0, [x19, #184]
    3b50:	bl	2630 <PyThread_free_lock@plt>
    3b54:	str	xzr, [x19, #184]
    3b58:	b	383c <PyInit__lzma@@Base+0x1118>
    3b5c:	mov	w20, wzr
    3b60:	b	3840 <PyInit__lzma@@Base+0x111c>
    3b64:	sub	sp, sp, #0x70
    3b68:	stp	x29, x30, [sp, #80]
    3b6c:	stp	x20, x19, [sp, #96]
    3b70:	add	x29, sp, #0x50
    3b74:	mov	x20, x1
    3b78:	mov	x19, x0
    3b7c:	movi	v0.2d, #0x0
    3b80:	mov	x1, sp
    3b84:	mov	x0, x20
    3b88:	mov	w2, wzr
    3b8c:	stp	q0, q0, [sp, #48]
    3b90:	stp	q0, q0, [sp, #16]
    3b94:	str	q0, [sp]
    3b98:	bl	2560 <PyObject_GetBuffer@plt>
    3b9c:	cbz	w0, 3ba8 <PyInit__lzma@@Base+0x1484>
    3ba0:	mov	x20, xzr
    3ba4:	b	3c60 <PyInit__lzma@@Base+0x153c>
    3ba8:	mov	x0, sp
    3bac:	mov	w1, #0x43                  	// #67
    3bb0:	bl	22d0 <PyBuffer_IsContiguous@plt>
    3bb4:	cbz	w0, 3bf0 <PyInit__lzma@@Base+0x14cc>
    3bb8:	ldr	x0, [x19, #184]
    3bbc:	mov	w1, wzr
    3bc0:	bl	2320 <PyThread_acquire_lock@plt>
    3bc4:	cbz	w0, 3c18 <PyInit__lzma@@Base+0x14f4>
    3bc8:	ldr	w8, [x19, #176]
    3bcc:	cbz	w8, 3c40 <PyInit__lzma@@Base+0x151c>
    3bd0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3bd4:	ldr	x8, [x8, #4008]
    3bd8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3bdc:	add	x1, x1, #0xe9c
    3be0:	ldr	x0, [x8]
    3be4:	bl	2350 <PyErr_SetString@plt>
    3be8:	mov	x20, xzr
    3bec:	b	3c58 <PyInit__lzma@@Base+0x1534>
    3bf0:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    3bf4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3bf8:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    3bfc:	add	x0, x0, #0x3e
    3c00:	add	x1, x1, #0xe93
    3c04:	add	x2, x2, #0xe66
    3c08:	mov	x3, x20
    3c0c:	bl	2400 <_PyArg_BadArgument@plt>
    3c10:	mov	x20, xzr
    3c14:	b	3c60 <PyInit__lzma@@Base+0x153c>
    3c18:	bl	2580 <PyEval_SaveThread@plt>
    3c1c:	ldr	x8, [x19, #184]
    3c20:	mov	x20, x0
    3c24:	mov	w1, #0x1                   	// #1
    3c28:	mov	x0, x8
    3c2c:	bl	2320 <PyThread_acquire_lock@plt>
    3c30:	mov	x0, x20
    3c34:	bl	2260 <PyEval_RestoreThread@plt>
    3c38:	ldr	w8, [x19, #176]
    3c3c:	cbnz	w8, 3bd0 <PyInit__lzma@@Base+0x14ac>
    3c40:	ldr	x1, [sp]
    3c44:	ldr	x2, [sp, #16]
    3c48:	mov	x0, x19
    3c4c:	mov	w3, wzr
    3c50:	bl	3d2c <PyInit__lzma@@Base+0x1608>
    3c54:	mov	x20, x0
    3c58:	ldr	x0, [x19, #184]
    3c5c:	bl	2520 <PyThread_release_lock@plt>
    3c60:	ldr	x8, [sp, #8]
    3c64:	cbz	x8, 3c70 <PyInit__lzma@@Base+0x154c>
    3c68:	mov	x0, sp
    3c6c:	bl	2290 <PyBuffer_Release@plt>
    3c70:	mov	x0, x20
    3c74:	ldp	x20, x19, [sp, #96]
    3c78:	ldp	x29, x30, [sp, #80]
    3c7c:	add	sp, sp, #0x70
    3c80:	ret
    3c84:	stp	x29, x30, [sp, #-32]!
    3c88:	stp	x20, x19, [sp, #16]
    3c8c:	mov	x29, sp
    3c90:	mov	x19, x0
    3c94:	ldr	x0, [x0, #184]
    3c98:	mov	w1, wzr
    3c9c:	bl	2320 <PyThread_acquire_lock@plt>
    3ca0:	cbz	w0, 3ccc <PyInit__lzma@@Base+0x15a8>
    3ca4:	ldr	w8, [x19, #176]
    3ca8:	cbz	w8, 3cf4 <PyInit__lzma@@Base+0x15d0>
    3cac:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3cb0:	ldr	x8, [x8, #4008]
    3cb4:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3cb8:	add	x1, x1, #0xeb8
    3cbc:	ldr	x0, [x8]
    3cc0:	bl	2350 <PyErr_SetString@plt>
    3cc4:	mov	x20, xzr
    3cc8:	b	3d14 <PyInit__lzma@@Base+0x15f0>
    3ccc:	bl	2580 <PyEval_SaveThread@plt>
    3cd0:	ldr	x8, [x19, #184]
    3cd4:	mov	x20, x0
    3cd8:	mov	w1, #0x1                   	// #1
    3cdc:	mov	x0, x8
    3ce0:	bl	2320 <PyThread_acquire_lock@plt>
    3ce4:	mov	x0, x20
    3ce8:	bl	2260 <PyEval_RestoreThread@plt>
    3cec:	ldr	w8, [x19, #176]
    3cf0:	cbnz	w8, 3cac <PyInit__lzma@@Base+0x1588>
    3cf4:	mov	w8, #0x1                   	// #1
    3cf8:	mov	w3, #0x3                   	// #3
    3cfc:	mov	x0, x19
    3d00:	mov	x1, xzr
    3d04:	mov	x2, xzr
    3d08:	str	w8, [x19, #176]
    3d0c:	bl	3d2c <PyInit__lzma@@Base+0x1608>
    3d10:	mov	x20, x0
    3d14:	ldr	x0, [x19, #184]
    3d18:	bl	2520 <PyThread_release_lock@plt>
    3d1c:	mov	x0, x20
    3d20:	ldp	x20, x19, [sp, #16]
    3d24:	ldp	x29, x30, [sp], #32
    3d28:	ret
    3d2c:	stp	x29, x30, [sp, #-96]!
    3d30:	str	x27, [sp, #16]
    3d34:	stp	x26, x25, [sp, #32]
    3d38:	stp	x24, x23, [sp, #48]
    3d3c:	stp	x22, x21, [sp, #64]
    3d40:	stp	x20, x19, [sp, #80]
    3d44:	mov	x29, sp
    3d48:	mov	x23, x1
    3d4c:	mov	x21, x0
    3d50:	mov	w1, #0x2000                	// #8192
    3d54:	mov	x0, xzr
    3d58:	mov	w19, w3
    3d5c:	mov	x20, x2
    3d60:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    3d64:	str	x0, [x29, #24]
    3d68:	cbz	x0, 3e94 <PyInit__lzma@@Base+0x1770>
    3d6c:	mov	x22, x21
    3d70:	add	x8, x0, #0x20
    3d74:	str	x23, [x22, #40]!
    3d78:	str	x20, [x22, #8]
    3d7c:	str	x8, [x22, #24]
    3d80:	ldr	x8, [x0, #16]
    3d84:	mov	w25, #0xa                   	// #10
    3d88:	str	x8, [x22, #32]
    3d8c:	bl	2580 <PyEval_SaveThread@plt>
    3d90:	mov	x23, x0
    3d94:	mov	x0, x22
    3d98:	mov	w1, w19
    3d9c:	bl	2250 <lzma_code@plt>
    3da0:	ldr	x26, [x21, #64]
    3da4:	ldr	x27, [x29, #24]
    3da8:	mov	w24, w0
    3dac:	cbnz	x20, 3dc4 <PyInit__lzma@@Base+0x16a0>
    3db0:	cmp	w24, #0xa
    3db4:	b.ne	3dc4 <PyInit__lzma@@Base+0x16a0>  // b.any
    3db8:	ldr	x8, [x21, #72]
    3dbc:	cmp	x8, #0x0
    3dc0:	csel	w24, w25, wzr, eq  // eq = none
    3dc4:	mov	x0, x23
    3dc8:	bl	2260 <PyEval_RestoreThread@plt>
    3dcc:	mov	w0, w24
    3dd0:	bl	362c <PyInit__lzma@@Base+0xf08>
    3dd4:	cbnz	w0, 3e74 <PyInit__lzma@@Base+0x1750>
    3dd8:	sub	x8, x26, x27
    3ddc:	sub	x23, x8, #0x20
    3de0:	cbz	w19, 3df8 <PyInit__lzma@@Base+0x16d4>
    3de4:	cmp	w19, #0x3
    3de8:	b.ne	3e00 <PyInit__lzma@@Base+0x16dc>  // b.any
    3dec:	cmp	w24, #0x1
    3df0:	b.ne	3e00 <PyInit__lzma@@Base+0x16dc>  // b.any
    3df4:	b	3e48 <PyInit__lzma@@Base+0x1724>
    3df8:	ldr	x8, [x21, #48]
    3dfc:	cbz	x8, 3e48 <PyInit__lzma@@Base+0x1724>
    3e00:	ldr	x8, [x21, #72]
    3e04:	cbnz	x8, 3d8c <PyInit__lzma@@Base+0x1668>
    3e08:	ldr	x8, [x29, #24]
    3e0c:	add	x0, x29, #0x18
    3e10:	ldr	x8, [x8, #16]
    3e14:	add	x8, x8, x8, asr #3
    3e18:	add	x1, x8, #0x6
    3e1c:	bl	2240 <_PyBytes_Resize@plt>
    3e20:	cmn	w0, #0x1
    3e24:	b.eq	3e74 <PyInit__lzma@@Base+0x1750>  // b.none
    3e28:	ldr	x8, [x29, #24]
    3e2c:	add	x9, x8, x23
    3e30:	add	x9, x9, #0x20
    3e34:	str	x9, [x21, #64]
    3e38:	ldr	x8, [x8, #16]
    3e3c:	sub	x8, x8, x23
    3e40:	str	x8, [x21, #72]
    3e44:	b	3d8c <PyInit__lzma@@Base+0x1668>
    3e48:	ldr	x0, [x29, #24]
    3e4c:	ldr	x8, [x0, #16]
    3e50:	cmp	x23, x8
    3e54:	b.eq	3e94 <PyInit__lzma@@Base+0x1770>  // b.none
    3e58:	add	x0, x29, #0x18
    3e5c:	mov	x1, x23
    3e60:	bl	2240 <_PyBytes_Resize@plt>
    3e64:	cmn	w0, #0x1
    3e68:	b.eq	3e74 <PyInit__lzma@@Base+0x1750>  // b.none
    3e6c:	ldr	x0, [x29, #24]
    3e70:	b	3e94 <PyInit__lzma@@Base+0x1770>
    3e74:	ldr	x0, [x29, #24]
    3e78:	cbz	x0, 3e94 <PyInit__lzma@@Base+0x1770>
    3e7c:	ldr	x8, [x0]
    3e80:	subs	x8, x8, #0x1
    3e84:	str	x8, [x0]
    3e88:	b.ne	3e90 <PyInit__lzma@@Base+0x176c>  // b.any
    3e8c:	bl	22f0 <_Py_Dealloc@plt>
    3e90:	mov	x0, xzr
    3e94:	ldp	x20, x19, [sp, #80]
    3e98:	ldp	x22, x21, [sp, #64]
    3e9c:	ldp	x24, x23, [sp, #48]
    3ea0:	ldp	x26, x25, [sp, #32]
    3ea4:	ldr	x27, [sp, #16]
    3ea8:	ldp	x29, x30, [sp], #96
    3eac:	ret
    3eb0:	cbz	x2, 3ecc <PyInit__lzma@@Base+0x17a8>
    3eb4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    3eb8:	udiv	x8, x8, x2
    3ebc:	cmp	x8, x1
    3ec0:	b.cs	3ecc <PyInit__lzma@@Base+0x17a8>  // b.hs, b.nlast
    3ec4:	mov	x0, xzr
    3ec8:	ret
    3ecc:	mul	x0, x2, x1
    3ed0:	b	22c0 <PyMem_RawMalloc@plt>
    3ed4:	mov	x0, x1
    3ed8:	b	24d0 <PyMem_RawFree@plt>
    3edc:	stp	x29, x30, [sp, #-64]!
    3ee0:	stp	x24, x23, [sp, #16]
    3ee4:	stp	x22, x21, [sp, #32]
    3ee8:	stp	x20, x19, [sp, #48]
    3eec:	mov	x29, sp
    3ef0:	mov	x19, x0
    3ef4:	mov	x0, x1
    3ef8:	mov	x20, x1
    3efc:	bl	2410 <PySequence_Size@plt>
    3f00:	cmn	x0, #0x1
    3f04:	b.eq	3ff8 <PyInit__lzma@@Base+0x18d4>  // b.none
    3f08:	mov	x21, x0
    3f0c:	cmp	x0, #0x4
    3f10:	b.le	3f34 <PyInit__lzma@@Base+0x1810>
    3f14:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    3f18:	ldr	x8, [x8, #4008]
    3f1c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    3f20:	add	x1, x1, #0xf87
    3f24:	mov	w2, #0x4                   	// #4
    3f28:	ldr	x0, [x8]
    3f2c:	bl	25b0 <PyErr_Format@plt>
    3f30:	b	3ff4 <PyInit__lzma@@Base+0x18d0>
    3f34:	cmp	x21, #0x1
    3f38:	b.lt	3f94 <PyInit__lzma@@Base+0x1870>  // b.tstop
    3f3c:	mov	x23, xzr
    3f40:	mov	x22, x19
    3f44:	b	3f58 <PyInit__lzma@@Base+0x1834>
    3f48:	add	x23, x23, #0x1
    3f4c:	cmp	x21, x23
    3f50:	add	x22, x22, #0x10
    3f54:	b.eq	3f94 <PyInit__lzma@@Base+0x1870>  // b.none
    3f58:	mov	x0, x20
    3f5c:	mov	x1, x23
    3f60:	bl	23c0 <PySequence_GetItem@plt>
    3f64:	cbz	x0, 3fb4 <PyInit__lzma@@Base+0x1890>
    3f68:	mov	x1, x22
    3f6c:	mov	x24, x0
    3f70:	bl	3128 <PyInit__lzma@@Base+0xa04>
    3f74:	ldr	x8, [x24]
    3f78:	sub	x8, x8, #0x1
    3f7c:	str	x8, [x24]
    3f80:	cbz	w0, 3fa8 <PyInit__lzma@@Base+0x1884>
    3f84:	cbnz	x8, 3f48 <PyInit__lzma@@Base+0x1824>
    3f88:	mov	x0, x24
    3f8c:	bl	22f0 <_Py_Dealloc@plt>
    3f90:	b	3f48 <PyInit__lzma@@Base+0x1824>
    3f94:	lsl	x8, x21, #4
    3f98:	mov	x9, #0xffffffffffffffff    	// #-1
    3f9c:	mov	w0, wzr
    3fa0:	str	x9, [x19, x8]
    3fa4:	b	3ff8 <PyInit__lzma@@Base+0x18d4>
    3fa8:	cbnz	x8, 3fb4 <PyInit__lzma@@Base+0x1890>
    3fac:	mov	x0, x24
    3fb0:	bl	22f0 <_Py_Dealloc@plt>
    3fb4:	mov	x8, #0xffffffffffffffff    	// #-1
    3fb8:	str	x8, [x22]
    3fbc:	ldr	x8, [x19]
    3fc0:	cmn	x8, #0x1
    3fc4:	b.eq	3ff4 <PyInit__lzma@@Base+0x18d0>  // b.none
    3fc8:	mov	x8, xzr
    3fcc:	mov	w20, #0x1                   	// #1
    3fd0:	add	x8, x19, x8, lsl #4
    3fd4:	ldr	x0, [x8, #8]
    3fd8:	bl	2270 <PyMem_Free@plt>
    3fdc:	sbfiz	x8, x20, #4, #32
    3fe0:	ldr	x9, [x19, x8]
    3fe4:	sxtw	x8, w20
    3fe8:	add	w20, w20, #0x1
    3fec:	cmn	x9, #0x1
    3ff0:	b.ne	3fd0 <PyInit__lzma@@Base+0x18ac>  // b.any
    3ff4:	mov	w0, #0xffffffff            	// #-1
    3ff8:	ldp	x20, x19, [sp, #48]
    3ffc:	ldp	x22, x21, [sp, #32]
    4000:	ldp	x24, x23, [sp, #16]
    4004:	ldp	x29, x30, [sp], #64
    4008:	ret
    400c:	stp	x29, x30, [sp, #-32]!
    4010:	str	x19, [sp, #16]
    4014:	mov	x29, sp
    4018:	mov	x19, x0
    401c:	ldr	x0, [x0, #200]
    4020:	cbz	x0, 4028 <PyInit__lzma@@Base+0x1904>
    4024:	bl	2270 <PyMem_Free@plt>
    4028:	add	x0, x19, #0x28
    402c:	bl	24c0 <lzma_end@plt>
    4030:	ldr	x0, [x19, #184]
    4034:	cbz	x0, 404c <PyInit__lzma@@Base+0x1928>
    4038:	str	xzr, [x19, #184]
    403c:	ldr	x8, [x0]
    4040:	subs	x8, x8, #0x1
    4044:	str	x8, [x0]
    4048:	b.eq	4070 <PyInit__lzma@@Base+0x194c>  // b.none
    404c:	ldr	x0, [x19, #216]
    4050:	cbz	x0, 4058 <PyInit__lzma@@Base+0x1934>
    4054:	bl	2630 <PyThread_free_lock@plt>
    4058:	ldr	x8, [x19, #8]
    405c:	mov	x0, x19
    4060:	ldr	x19, [sp, #16]
    4064:	ldr	x1, [x8, #320]
    4068:	ldp	x29, x30, [sp], #32
    406c:	br	x1
    4070:	bl	22f0 <_Py_Dealloc@plt>
    4074:	ldr	x0, [x19, #216]
    4078:	cbnz	x0, 4054 <PyInit__lzma@@Base+0x1930>
    407c:	b	4058 <PyInit__lzma@@Base+0x1934>
    4080:	sub	sp, sp, #0xb0
    4084:	stp	x29, x30, [sp, #112]
    4088:	stp	x24, x23, [sp, #128]
    408c:	stp	x22, x21, [sp, #144]
    4090:	stp	x20, x19, [sp, #160]
    4094:	add	x29, sp, #0x70
    4098:	ldr	x22, [x1, #16]
    409c:	mov	x19, x0
    40a0:	cbz	x2, 40b4 <PyInit__lzma@@Base+0x1990>
    40a4:	ldr	x8, [x2, #16]
    40a8:	add	x21, x1, #0x18
    40ac:	add	x20, x8, x22
    40b0:	b	40c4 <PyInit__lzma@@Base+0x19a0>
    40b4:	cmp	x22, #0x4
    40b8:	add	x21, x1, #0x18
    40bc:	mov	x20, x22
    40c0:	b.cc	40fc <PyInit__lzma@@Base+0x19d8>  // b.lo, b.ul, b.last
    40c4:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    40c8:	add	x8, sp, #0x8
    40cc:	add	x4, x4, #0x970
    40d0:	mov	w6, #0x3                   	// #3
    40d4:	mov	x0, x21
    40d8:	mov	x1, x22
    40dc:	mov	x3, xzr
    40e0:	mov	w5, wzr
    40e4:	mov	w7, wzr
    40e8:	str	x8, [sp]
    40ec:	bl	2340 <_PyArg_UnpackKeywords@plt>
    40f0:	mov	x21, x0
    40f4:	mov	x22, x20
    40f8:	cbz	x0, 431c <PyInit__lzma@@Base+0x1bf8>
    40fc:	cbz	x22, 4140 <PyInit__lzma@@Base+0x1a1c>
    4100:	ldr	x8, [x21]
    4104:	cbz	x8, 4158 <PyInit__lzma@@Base+0x1a34>
    4108:	ldr	x0, [x8, #8]
    410c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4110:	ldr	x8, [x8, #3984]
    4114:	cmp	x0, x8
    4118:	b.eq	412c <PyInit__lzma@@Base+0x1a08>  // b.none
    411c:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    4120:	ldr	x1, [x1, #3984]
    4124:	bl	25a0 <PyType_IsSubtype@plt>
    4128:	cbz	w0, 41e0 <PyInit__lzma@@Base+0x1abc>
    412c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4130:	ldr	x8, [x8, #4016]
    4134:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4138:	add	x1, x1, #0xb7b
    413c:	b	4314 <PyInit__lzma@@Base+0x1bf0>
    4140:	mov	w20, wzr
    4144:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    4148:	ldr	x21, [x21, #4056]
    414c:	cmp	w20, #0x3
    4150:	cset	w9, eq  // eq = none
    4154:	b	41b4 <PyInit__lzma@@Base+0x1a90>
    4158:	mov	w20, wzr
    415c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4160:	ldr	x0, [x21, #8]
    4164:	ldr	x8, [x8, #4056]
    4168:	cbz	x0, 4180 <PyInit__lzma@@Base+0x1a5c>
    416c:	cmp	x22, #0x1
    4170:	b.ne	4184 <PyInit__lzma@@Base+0x1a60>  // b.any
    4174:	adrp	x21, 16000 <PyInit__lzma@@Base+0x138dc>
    4178:	ldr	x21, [x21, #4056]
    417c:	b	4188 <PyInit__lzma@@Base+0x1a64>
    4180:	mov	x0, x8
    4184:	ldr	x21, [x21, #16]
    4188:	cmp	w20, #0x3
    418c:	cset	w9, eq  // eq = none
    4190:	cmp	x0, x8
    4194:	b.eq	41b4 <PyInit__lzma@@Base+0x1a90>  // b.none
    4198:	cmp	w20, #0x3
    419c:	b.ne	4200 <PyInit__lzma@@Base+0x1adc>  // b.any
    41a0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    41a4:	ldr	x8, [x8, #4008]
    41a8:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    41ac:	add	x1, x1, #0xa0
    41b0:	b	4314 <PyInit__lzma@@Base+0x1bf0>
    41b4:	mov	x22, #0xffffffffffffffff    	// #-1
    41b8:	cbz	w9, 4210 <PyInit__lzma@@Base+0x1aec>
    41bc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    41c0:	ldr	x8, [x8, #4056]
    41c4:	cmp	x21, x8
    41c8:	b.ne	4210 <PyInit__lzma@@Base+0x1aec>  // b.any
    41cc:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    41d0:	ldr	x8, [x8, #4008]
    41d4:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    41d8:	add	x1, x1, #0x1
    41dc:	b	4314 <PyInit__lzma@@Base+0x1bf0>
    41e0:	ldr	x0, [x21]
    41e4:	bl	2600 <_PyLong_AsInt@plt>
    41e8:	mov	w20, w0
    41ec:	cmn	w0, #0x1
    41f0:	b.eq	4338 <PyInit__lzma@@Base+0x1c14>  // b.none
    41f4:	subs	x22, x22, #0x1
    41f8:	b.ne	415c <PyInit__lzma@@Base+0x1a38>  // b.any
    41fc:	b	4144 <PyInit__lzma@@Base+0x1a20>
    4200:	bl	22a0 <PyLong_AsUnsignedLongLong@plt>
    4204:	mov	x22, x0
    4208:	bl	2480 <PyErr_Occurred@plt>
    420c:	cbnz	x0, 431c <PyInit__lzma@@Base+0x1bf8>
    4210:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4214:	ldr	x8, [x8, #4056]
    4218:	cmp	x21, x8
    421c:	b.eq	423c <PyInit__lzma@@Base+0x1b18>  // b.none
    4220:	cmp	w20, #0x3
    4224:	b.eq	423c <PyInit__lzma@@Base+0x1b18>  // b.none
    4228:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    422c:	ldr	x8, [x8, #4008]
    4230:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4234:	add	x1, x1, #0xcc
    4238:	b	4314 <PyInit__lzma@@Base+0x1bf0>
    423c:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    4240:	add	x8, x8, #0xeb0
    4244:	mov	x9, x19
    4248:	str	x8, [x9, #16]!
    424c:	adrp	x8, 3000 <PyInit__lzma@@Base+0x8dc>
    4250:	add	x8, x8, #0xed4
    4254:	mov	x23, x9
    4258:	stp	x8, xzr, [x9, #8]
    425c:	str	xzr, [x23, #24]!
    4260:	str	x9, [x9, #72]
    4264:	bl	2500 <PyThread_allocate_lock@plt>
    4268:	cbz	x0, 4304 <PyInit__lzma@@Base+0x1be0>
    426c:	mov	x24, x0
    4270:	ldr	x0, [x19, #216]
    4274:	cbz	x0, 427c <PyInit__lzma@@Base+0x1b58>
    4278:	bl	2630 <PyThread_free_lock@plt>
    427c:	stp	xzr, x24, [x19, #208]
    4280:	ldr	x24, [x19, #184]
    4284:	mov	w8, #0x10                  	// #16
    4288:	mov	w9, #0x1                   	// #1
    428c:	mov	x0, xzr
    4290:	mov	x1, xzr
    4294:	str	w8, [x19, #176]
    4298:	strb	w9, [x19, #192]
    429c:	str	xzr, [x19, #200]
    42a0:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    42a4:	str	x0, [x19, #184]
    42a8:	cbz	x24, 42c8 <PyInit__lzma@@Base+0x1ba4>
    42ac:	ldr	x8, [x24]
    42b0:	subs	x8, x8, #0x1
    42b4:	str	x8, [x24]
    42b8:	b.ne	42c8 <PyInit__lzma@@Base+0x1ba4>  // b.any
    42bc:	mov	x0, x24
    42c0:	bl	22f0 <_Py_Dealloc@plt>
    42c4:	ldr	x0, [x19, #184]
    42c8:	cbz	x0, 43fc <PyInit__lzma@@Base+0x1cd8>
    42cc:	cmp	w20, #0x3
    42d0:	b.hi	4344 <PyInit__lzma@@Base+0x1c20>  // b.pmore
    42d4:	adrp	x9, 4000 <PyInit__lzma@@Base+0x18dc>
    42d8:	mov	w8, w20
    42dc:	add	x9, x9, #0x99c
    42e0:	adr	x10, 42f0 <PyInit__lzma@@Base+0x1bcc>
    42e4:	ldrb	w11, [x9, x8]
    42e8:	add	x10, x10, x11, lsl #2
    42ec:	br	x10
    42f0:	mov	w2, #0x5                   	// #5
    42f4:	mov	x0, x23
    42f8:	mov	x1, x22
    42fc:	bl	23d0 <lzma_auto_decoder@plt>
    4300:	b	43f4 <PyInit__lzma@@Base+0x1cd0>
    4304:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4308:	ldr	x8, [x8, #4000]
    430c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4310:	add	x1, x1, #0xf52
    4314:	ldr	x0, [x8]
    4318:	bl	2350 <PyErr_SetString@plt>
    431c:	mov	w0, #0xffffffff            	// #-1
    4320:	ldp	x20, x19, [sp, #160]
    4324:	ldp	x22, x21, [sp, #144]
    4328:	ldp	x24, x23, [sp, #128]
    432c:	ldp	x29, x30, [sp, #112]
    4330:	add	sp, sp, #0xb0
    4334:	ret
    4338:	bl	2480 <PyErr_Occurred@plt>
    433c:	cbnz	x0, 431c <PyInit__lzma@@Base+0x1bf8>
    4340:	b	41f4 <PyInit__lzma@@Base+0x1ad0>
    4344:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4348:	ldr	x8, [x8, #4008]
    434c:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    4350:	add	x1, x1, #0xf6a
    4354:	mov	w2, w20
    4358:	ldr	x0, [x8]
    435c:	bl	25b0 <PyErr_Format@plt>
    4360:	b	43fc <PyInit__lzma@@Base+0x1cd8>
    4364:	mov	w2, #0x5                   	// #5
    4368:	mov	x0, x23
    436c:	mov	x1, x22
    4370:	bl	24a0 <lzma_stream_decoder@plt>
    4374:	b	43f4 <PyInit__lzma@@Base+0x1cd0>
    4378:	mov	x0, x23
    437c:	mov	x1, x22
    4380:	str	wzr, [x19, #176]
    4384:	bl	24b0 <lzma_alone_decoder@plt>
    4388:	b	43f4 <PyInit__lzma@@Base+0x1cd0>
    438c:	add	x0, sp, #0x20
    4390:	mov	x1, x21
    4394:	str	wzr, [x19, #176]
    4398:	bl	3edc <PyInit__lzma@@Base+0x17b8>
    439c:	cmn	w0, #0x1
    43a0:	b.eq	43fc <PyInit__lzma@@Base+0x1cd8>  // b.none
    43a4:	add	x1, sp, #0x20
    43a8:	mov	x0, x23
    43ac:	add	x21, sp, #0x20
    43b0:	bl	2530 <lzma_raw_decoder@plt>
    43b4:	ldr	x8, [sp, #32]
    43b8:	mov	w20, w0
    43bc:	cmn	x8, #0x1
    43c0:	b.eq	43f0 <PyInit__lzma@@Base+0x1ccc>  // b.none
    43c4:	mov	x8, xzr
    43c8:	mov	w22, #0x1                   	// #1
    43cc:	add	x8, x21, x8, lsl #4
    43d0:	ldr	x0, [x8, #8]
    43d4:	bl	2270 <PyMem_Free@plt>
    43d8:	sbfiz	x8, x22, #4, #32
    43dc:	ldr	x9, [x21, x8]
    43e0:	sxtw	x8, w22
    43e4:	add	w22, w22, #0x1
    43e8:	cmn	x9, #0x1
    43ec:	b.ne	43cc <PyInit__lzma@@Base+0x1ca8>  // b.any
    43f0:	mov	w0, w20
    43f4:	bl	362c <PyInit__lzma@@Base+0xf08>
    43f8:	cbz	w0, 4320 <PyInit__lzma@@Base+0x1bfc>
    43fc:	ldr	x0, [x19, #184]
    4400:	cbz	x0, 441c <PyInit__lzma@@Base+0x1cf8>
    4404:	str	xzr, [x19, #184]
    4408:	ldr	x8, [x0]
    440c:	subs	x8, x8, #0x1
    4410:	str	x8, [x0]
    4414:	b.ne	441c <PyInit__lzma@@Base+0x1cf8>  // b.any
    4418:	bl	22f0 <_Py_Dealloc@plt>
    441c:	ldr	x0, [x19, #216]
    4420:	bl	2630 <PyThread_free_lock@plt>
    4424:	str	xzr, [x19, #216]
    4428:	b	431c <PyInit__lzma@@Base+0x1bf8>
    442c:	sub	sp, sp, #0xd0
    4430:	stp	x29, x30, [sp, #112]
    4434:	str	x27, [sp, #128]
    4438:	stp	x26, x25, [sp, #144]
    443c:	stp	x24, x23, [sp, #160]
    4440:	stp	x22, x21, [sp, #176]
    4444:	stp	x20, x19, [sp, #192]
    4448:	add	x29, sp, #0x70
    444c:	mov	x21, x2
    4450:	mov	x20, x1
    4454:	mov	x19, x0
    4458:	cbz	x3, 4464 <PyInit__lzma@@Base+0x1d40>
    445c:	ldr	x22, [x3, #16]
    4460:	b	4468 <PyInit__lzma@@Base+0x1d44>
    4464:	mov	x22, xzr
    4468:	movi	v0.2d, #0x0
    446c:	stp	q0, q0, [sp, #64]
    4470:	stp	q0, q0, [sp, #32]
    4474:	str	q0, [sp, #16]
    4478:	cbz	x20, 448c <PyInit__lzma@@Base+0x1d68>
    447c:	sub	x8, x21, #0x1
    4480:	cmp	x8, #0x1
    4484:	b.hi	448c <PyInit__lzma@@Base+0x1d68>  // b.pmore
    4488:	cbz	x3, 44c0 <PyInit__lzma@@Base+0x1d9c>
    448c:	adrp	x4, 17000 <PyInit__lzma@@Base+0x148dc>
    4490:	sub	x8, x29, #0x10
    4494:	add	x4, x4, #0x930
    4498:	mov	w5, #0x1                   	// #1
    449c:	mov	w6, #0x2                   	// #2
    44a0:	mov	x0, x20
    44a4:	mov	x1, x21
    44a8:	mov	x2, xzr
    44ac:	mov	w7, wzr
    44b0:	str	x8, [sp]
    44b4:	bl	2340 <_PyArg_UnpackKeywords@plt>
    44b8:	mov	x20, x0
    44bc:	cbz	x0, 44d8 <PyInit__lzma@@Base+0x1db4>
    44c0:	ldr	x0, [x20]
    44c4:	add	x1, sp, #0x10
    44c8:	mov	w2, wzr
    44cc:	bl	2560 <PyObject_GetBuffer@plt>
    44d0:	cbz	w0, 450c <PyInit__lzma@@Base+0x1de8>
    44d4:	mov	x20, xzr
    44d8:	ldr	x8, [sp, #24]
    44dc:	cbz	x8, 44e8 <PyInit__lzma@@Base+0x1dc4>
    44e0:	add	x0, sp, #0x10
    44e4:	bl	2290 <PyBuffer_Release@plt>
    44e8:	mov	x0, x20
    44ec:	ldp	x20, x19, [sp, #192]
    44f0:	ldp	x22, x21, [sp, #176]
    44f4:	ldp	x24, x23, [sp, #160]
    44f8:	ldp	x26, x25, [sp, #144]
    44fc:	ldr	x27, [sp, #128]
    4500:	ldp	x29, x30, [sp, #112]
    4504:	add	sp, sp, #0xd0
    4508:	ret
    450c:	add	x0, sp, #0x10
    4510:	mov	w1, #0x43                  	// #67
    4514:	bl	22d0 <PyBuffer_IsContiguous@plt>
    4518:	cbz	w0, 4584 <PyInit__lzma@@Base+0x1e60>
    451c:	add	x8, x22, x21
    4520:	cmp	x8, #0x1
    4524:	b.ne	45a8 <PyInit__lzma@@Base+0x1e84>  // b.any
    4528:	mov	x20, #0xffffffffffffffff    	// #-1
    452c:	ldr	x0, [x19, #216]
    4530:	mov	w1, wzr
    4534:	bl	2320 <PyThread_acquire_lock@plt>
    4538:	cbnz	w0, 455c <PyInit__lzma@@Base+0x1e38>
    453c:	bl	2580 <PyEval_SaveThread@plt>
    4540:	ldr	x8, [x19, #216]
    4544:	mov	x21, x0
    4548:	mov	w1, #0x1                   	// #1
    454c:	mov	x0, x8
    4550:	bl	2320 <PyThread_acquire_lock@plt>
    4554:	mov	x0, x21
    4558:	bl	2260 <PyEval_RestoreThread@plt>
    455c:	ldrb	w8, [x19, #180]
    4560:	cbz	w8, 45ec <PyInit__lzma@@Base+0x1ec8>
    4564:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4568:	ldr	x8, [x8, #4048]
    456c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4570:	add	x1, x1, #0x62
    4574:	ldr	x0, [x8]
    4578:	bl	2350 <PyErr_SetString@plt>
    457c:	mov	x20, xzr
    4580:	b	48dc <PyInit__lzma@@Base+0x21b8>
    4584:	ldr	x3, [x20]
    4588:	adrp	x0, 6000 <PyInit__lzma@@Base+0x38dc>
    458c:	adrp	x1, 6000 <PyInit__lzma@@Base+0x38dc>
    4590:	adrp	x2, 5000 <PyInit__lzma@@Base+0x28dc>
    4594:	add	x0, x0, #0x3c
    4598:	add	x1, x1, #0x52
    459c:	add	x2, x2, #0xe66
    45a0:	bl	2400 <_PyArg_BadArgument@plt>
    45a4:	b	44d4 <PyInit__lzma@@Base+0x1db0>
    45a8:	ldr	x8, [x20, #8]
    45ac:	ldr	x0, [x8, #8]
    45b0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    45b4:	ldr	x8, [x8, #3984]
    45b8:	cmp	x0, x8
    45bc:	b.eq	45d0 <PyInit__lzma@@Base+0x1eac>  // b.none
    45c0:	adrp	x1, 16000 <PyInit__lzma@@Base+0x138dc>
    45c4:	ldr	x1, [x1, #3984]
    45c8:	bl	25a0 <PyType_IsSubtype@plt>
    45cc:	cbz	w0, 4648 <PyInit__lzma@@Base+0x1f24>
    45d0:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    45d4:	ldr	x8, [x8, #4016]
    45d8:	adrp	x1, 5000 <PyInit__lzma@@Base+0x28dc>
    45dc:	add	x1, x1, #0xb7b
    45e0:	ldr	x0, [x8]
    45e4:	bl	2350 <PyErr_SetString@plt>
    45e8:	b	44d4 <PyInit__lzma@@Base+0x1db0>
    45ec:	mov	x21, x19
    45f0:	ldr	x23, [sp, #16]
    45f4:	ldr	x22, [sp, #32]
    45f8:	ldr	x24, [x21, #40]!
    45fc:	cbz	x24, 468c <PyInit__lzma@@Base+0x1f68>
    4600:	ldp	x25, x8, [x19, #200]
    4604:	ldr	x2, [x19, #48]
    4608:	add	x9, x25, x8
    460c:	add	x10, x24, x2
    4610:	sub	x11, x8, x2
    4614:	cmp	x11, x22
    4618:	sub	x9, x9, x10
    461c:	b.cs	4694 <PyInit__lzma@@Base+0x1f70>  // b.hs, b.nlast
    4620:	add	x8, x8, x22
    4624:	sub	x26, x8, x9
    4628:	mov	x0, x25
    462c:	mov	x1, x26
    4630:	bl	2380 <PyMem_Realloc@plt>
    4634:	cbz	x0, 4808 <PyInit__lzma@@Base+0x20e4>
    4638:	sub	x8, x24, x25
    463c:	stp	x0, x26, [x19, #200]
    4640:	add	x24, x0, x8
    4644:	b	46ac <PyInit__lzma@@Base+0x1f88>
    4648:	ldr	x0, [x20, #8]
    464c:	bl	25f0 <PyNumber_Index@plt>
    4650:	cbz	x0, 4680 <PyInit__lzma@@Base+0x1f5c>
    4654:	mov	x21, x0
    4658:	bl	23f0 <PyLong_AsSsize_t@plt>
    465c:	ldr	x8, [x21]
    4660:	mov	x20, x0
    4664:	subs	x8, x8, #0x1
    4668:	str	x8, [x21]
    466c:	b.ne	4678 <PyInit__lzma@@Base+0x1f54>  // b.any
    4670:	mov	x0, x21
    4674:	bl	22f0 <_Py_Dealloc@plt>
    4678:	cmn	x20, #0x1
    467c:	b.ne	452c <PyInit__lzma@@Base+0x1e08>  // b.any
    4680:	bl	2480 <PyErr_Occurred@plt>
    4684:	cbnz	x0, 44d4 <PyInit__lzma@@Base+0x1db0>
    4688:	b	4528 <PyInit__lzma@@Base+0x1e04>
    468c:	stp	x23, x22, [x19, #40]
    4690:	b	46d4 <PyInit__lzma@@Base+0x1fb0>
    4694:	cmp	x9, x22
    4698:	b.cs	46b0 <PyInit__lzma@@Base+0x1f8c>  // b.hs, b.nlast
    469c:	mov	x0, x25
    46a0:	mov	x1, x24
    46a4:	bl	2210 <memmove@plt>
    46a8:	ldr	x24, [x19, #200]
    46ac:	str	x24, [x19, #40]
    46b0:	ldr	x8, [x19, #48]
    46b4:	mov	x1, x23
    46b8:	mov	x2, x22
    46bc:	add	x0, x24, x8
    46c0:	bl	2200 <memcpy@plt>
    46c4:	ldr	x8, [x19, #48]
    46c8:	mov	w24, #0x1                   	// #1
    46cc:	add	x8, x8, x22
    46d0:	str	x8, [x19, #48]
    46d4:	cmp	x20, #0x2, lsl #12
    46d8:	mov	w8, #0x2000                	// #8192
    46dc:	csel	x1, x20, x8, cc  // cc = lo, ul, last
    46e0:	mov	x0, xzr
    46e4:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    46e8:	str	x0, [x29, #24]
    46ec:	cbz	x0, 48d4 <PyInit__lzma@@Base+0x21b0>
    46f0:	add	x8, x0, #0x20
    46f4:	str	x8, [x19, #64]
    46f8:	ldr	x8, [x0, #16]
    46fc:	mov	w25, #0xa                   	// #10
    4700:	str	x8, [x19, #72]
    4704:	b	4724 <PyInit__lzma@@Base+0x2000>
    4708:	mov	x0, x21
    470c:	bl	24e0 <lzma_get_check@plt>
    4710:	str	w0, [x19, #176]
    4714:	ldr	x8, [x19, #72]
    4718:	cbz	x8, 47a8 <PyInit__lzma@@Base+0x2084>
    471c:	ldr	x8, [x19, #48]
    4720:	cbz	x8, 4824 <PyInit__lzma@@Base+0x2100>
    4724:	bl	2580 <PyEval_SaveThread@plt>
    4728:	mov	x22, x0
    472c:	mov	x0, x21
    4730:	mov	w1, wzr
    4734:	bl	2250 <lzma_code@plt>
    4738:	ldr	x26, [x19, #64]
    473c:	ldr	x27, [x29, #24]
    4740:	cmp	w0, #0xa
    4744:	b.ne	4758 <PyInit__lzma@@Base+0x2034>  // b.any
    4748:	ldr	x8, [x19, #48]
    474c:	cbz	x8, 4760 <PyInit__lzma@@Base+0x203c>
    4750:	mov	w23, #0xa                   	// #10
    4754:	b	476c <PyInit__lzma@@Base+0x2048>
    4758:	mov	w23, w0
    475c:	b	476c <PyInit__lzma@@Base+0x2048>
    4760:	ldr	x8, [x19, #72]
    4764:	cmp	x8, #0x0
    4768:	csel	w23, w25, wzr, eq  // eq = none
    476c:	mov	x0, x22
    4770:	bl	2260 <PyEval_RestoreThread@plt>
    4774:	mov	w0, w23
    4778:	bl	362c <PyInit__lzma@@Base+0xf08>
    477c:	cbnz	w0, 48b8 <PyInit__lzma@@Base+0x2194>
    4780:	sub	x8, x26, x27
    4784:	cmp	w23, #0x2
    4788:	sub	x22, x8, #0x20
    478c:	b.eq	4708 <PyInit__lzma@@Base+0x1fe4>  // b.none
    4790:	cmp	w23, #0x4
    4794:	b.eq	4708 <PyInit__lzma@@Base+0x1fe4>  // b.none
    4798:	cmp	w23, #0x1
    479c:	b.eq	47fc <PyInit__lzma@@Base+0x20d8>  // b.none
    47a0:	ldr	x8, [x19, #72]
    47a4:	cbnz	x8, 471c <PyInit__lzma@@Base+0x1ff8>
    47a8:	cmp	x22, x20
    47ac:	b.eq	4820 <PyInit__lzma@@Base+0x20fc>  // b.none
    47b0:	ldr	x8, [x29, #24]
    47b4:	add	x0, x29, #0x18
    47b8:	ldr	x8, [x8, #16]
    47bc:	add	x8, x8, x8, asr #3
    47c0:	add	x8, x8, #0x6
    47c4:	cmp	x8, x20
    47c8:	ccmp	x20, #0x0, #0x4, gt
    47cc:	csel	x1, x20, x8, gt
    47d0:	bl	2240 <_PyBytes_Resize@plt>
    47d4:	cmn	w0, #0x1
    47d8:	b.eq	48b8 <PyInit__lzma@@Base+0x2194>  // b.none
    47dc:	ldr	x8, [x29, #24]
    47e0:	add	x9, x8, x22
    47e4:	add	x9, x9, #0x20
    47e8:	str	x9, [x19, #64]
    47ec:	ldr	x8, [x8, #16]
    47f0:	sub	x8, x8, x22
    47f4:	str	x8, [x19, #72]
    47f8:	b	4724 <PyInit__lzma@@Base+0x2000>
    47fc:	mov	w8, #0x1                   	// #1
    4800:	strb	w8, [x19, #180]
    4804:	b	4824 <PyInit__lzma@@Base+0x2100>
    4808:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    480c:	ldr	x8, [x8, #4000]
    4810:	ldr	x0, [x8]
    4814:	bl	2390 <PyErr_SetNone@plt>
    4818:	mov	x20, xzr
    481c:	b	48dc <PyInit__lzma@@Base+0x21b8>
    4820:	mov	x22, x20
    4824:	ldr	x20, [x29, #24]
    4828:	ldr	x8, [x20, #16]
    482c:	cmp	x22, x8
    4830:	b.eq	484c <PyInit__lzma@@Base+0x2128>  // b.none
    4834:	add	x0, x29, #0x18
    4838:	mov	x1, x22
    483c:	bl	2240 <_PyBytes_Resize@plt>
    4840:	cmn	w0, #0x1
    4844:	b.eq	48b8 <PyInit__lzma@@Base+0x2194>  // b.none
    4848:	ldr	x20, [x29, #24]
    484c:	cbz	x20, 48d4 <PyInit__lzma@@Base+0x21b0>
    4850:	ldrb	w8, [x19, #180]
    4854:	cbz	w8, 48f0 <PyInit__lzma@@Base+0x21cc>
    4858:	ldr	x1, [x19, #48]
    485c:	strb	wzr, [x19, #192]
    4860:	cbz	x1, 48dc <PyInit__lzma@@Base+0x21b8>
    4864:	ldr	x0, [x19, #40]
    4868:	ldr	x21, [x19, #184]
    486c:	bl	22e0 <PyBytes_FromStringAndSize@plt>
    4870:	str	x0, [x19, #184]
    4874:	cbz	x21, 4894 <PyInit__lzma@@Base+0x2170>
    4878:	ldr	x8, [x21]
    487c:	subs	x8, x8, #0x1
    4880:	str	x8, [x21]
    4884:	b.ne	4894 <PyInit__lzma@@Base+0x2170>  // b.any
    4888:	mov	x0, x21
    488c:	bl	22f0 <_Py_Dealloc@plt>
    4890:	ldr	x0, [x19, #184]
    4894:	cbnz	x0, 48dc <PyInit__lzma@@Base+0x21b8>
    4898:	ldr	x8, [x20]
    489c:	subs	x8, x8, #0x1
    48a0:	str	x8, [x20]
    48a4:	b.ne	48b0 <PyInit__lzma@@Base+0x218c>  // b.any
    48a8:	mov	x0, x20
    48ac:	bl	22f0 <_Py_Dealloc@plt>
    48b0:	mov	x20, xzr
    48b4:	b	48dc <PyInit__lzma@@Base+0x21b8>
    48b8:	ldr	x0, [x29, #24]
    48bc:	cbz	x0, 48d4 <PyInit__lzma@@Base+0x21b0>
    48c0:	ldr	x8, [x0]
    48c4:	subs	x8, x8, #0x1
    48c8:	str	x8, [x0]
    48cc:	b.ne	48d4 <PyInit__lzma@@Base+0x21b0>  // b.any
    48d0:	bl	22f0 <_Py_Dealloc@plt>
    48d4:	mov	x20, xzr
    48d8:	str	xzr, [x21]
    48dc:	ldr	x0, [x19, #216]
    48e0:	bl	2520 <PyThread_release_lock@plt>
    48e4:	ldr	x8, [sp, #24]
    48e8:	cbnz	x8, 44e0 <PyInit__lzma@@Base+0x1dbc>
    48ec:	b	44e8 <PyInit__lzma@@Base+0x1dc4>
    48f0:	ldr	x2, [x19, #48]
    48f4:	cbz	x2, 494c <PyInit__lzma@@Base+0x2228>
    48f8:	strb	wzr, [x19, #192]
    48fc:	cbnz	w24, 48dc <PyInit__lzma@@Base+0x21b8>
    4900:	ldr	x0, [x19, #200]
    4904:	cbz	x0, 4920 <PyInit__lzma@@Base+0x21fc>
    4908:	ldr	x8, [x19, #208]
    490c:	cmp	x8, x2
    4910:	b.cs	4938 <PyInit__lzma@@Base+0x2214>  // b.hs, b.nlast
    4914:	bl	2270 <PyMem_Free@plt>
    4918:	ldr	x2, [x19, #48]
    491c:	str	xzr, [x19, #200]
    4920:	mov	x0, x2
    4924:	bl	2620 <PyMem_Malloc@plt>
    4928:	str	x0, [x19, #200]
    492c:	cbz	x0, 496c <PyInit__lzma@@Base+0x2248>
    4930:	ldr	x2, [x19, #48]
    4934:	str	x2, [x19, #208]
    4938:	ldr	x1, [x19, #40]
    493c:	bl	2200 <memcpy@plt>
    4940:	ldr	x8, [x19, #200]
    4944:	str	x8, [x19, #40]
    4948:	b	48dc <PyInit__lzma@@Base+0x21b8>
    494c:	ldr	x8, [x19, #72]
    4950:	str	xzr, [x19, #40]
    4954:	cbz	x8, 4964 <PyInit__lzma@@Base+0x2240>
    4958:	mov	w8, #0x1                   	// #1
    495c:	strb	w8, [x19, #192]
    4960:	b	48dc <PyInit__lzma@@Base+0x21b8>
    4964:	strb	wzr, [x19, #192]
    4968:	b	48dc <PyInit__lzma@@Base+0x21b8>
    496c:	adrp	x8, 16000 <PyInit__lzma@@Base+0x138dc>
    4970:	ldr	x8, [x8, #4000]
    4974:	ldr	x0, [x8]
    4978:	bl	2390 <PyErr_SetNone@plt>
    497c:	b	4898 <PyInit__lzma@@Base+0x2174>

Disassembly of section .fini:

0000000000004980 <.fini>:
    4980:	stp	x29, x30, [sp, #-16]!
    4984:	mov	x29, sp
    4988:	ldp	x29, x30, [sp], #16
    498c:	ret
