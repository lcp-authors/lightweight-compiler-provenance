
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//truefalse_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000618 <_init>:
 618:	stp	x29, x30, [sp, #-16]!
 61c:	mov	x29, sp
 620:	bl	670 <call_weak_fn>
 624:	ldp	x29, x30, [sp], #16
 628:	ret

Disassembly of section .plt:

0000000000000630 <.plt>:
 630:	stp	x16, x30, [sp, #-16]!
 634:	adrp	x16, 10000 <__FRAME_END__+0xf638>
 638:	ldr	x17, [x16, #4088]
 63c:	add	x16, x16, #0xff8
 640:	br	x17
 644:	nop
 648:	nop
 64c:	nop

0000000000000650 <__cxa_finalize@plt>:
 650:	adrp	x16, 11000 <__cxa_finalize@GLIBC_2.17>
 654:	ldr	x17, [x16]
 658:	add	x16, x16, #0x0
 65c:	br	x17

0000000000000660 <__gmon_start__@plt>:
 660:	adrp	x16, 11000 <__cxa_finalize@GLIBC_2.17>
 664:	ldr	x17, [x16, #8]
 668:	add	x16, x16, #0x8
 66c:	br	x17

Disassembly of section .text:

0000000000000670 <call_weak_fn>:
 670:	adrp	x0, 10000 <__FRAME_END__+0xf638>
 674:	ldr	x0, [x0, #4056]
 678:	cbz	x0, 680 <call_weak_fn+0x10>
 67c:	b	660 <__gmon_start__@plt>
 680:	ret

0000000000000684 <deregister_tm_clones>:
 684:	stp	x29, x30, [sp, #-32]!
 688:	mov	x29, sp
 68c:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 690:	add	x0, x0, #0xb8
 694:	str	x0, [sp, #24]
 698:	ldr	x0, [sp, #24]
 69c:	str	x0, [sp, #24]
 6a0:	ldr	x1, [sp, #24]
 6a4:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 6a8:	add	x0, x0, #0xb8
 6ac:	cmp	x1, x0
 6b0:	b.eq	6e8 <deregister_tm_clones+0x64>  // b.none
 6b4:	adrp	x0, 10000 <__FRAME_END__+0xf638>
 6b8:	ldr	x0, [x0, #4040]
 6bc:	str	x0, [sp, #16]
 6c0:	ldr	x0, [sp, #16]
 6c4:	str	x0, [sp, #16]
 6c8:	ldr	x0, [sp, #16]
 6cc:	cmp	x0, #0x0
 6d0:	b.eq	6ec <deregister_tm_clones+0x68>  // b.none
 6d4:	ldr	x1, [sp, #16]
 6d8:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 6dc:	add	x0, x0, #0xb8
 6e0:	blr	x1
 6e4:	b	6ec <deregister_tm_clones+0x68>
 6e8:	nop
 6ec:	ldp	x29, x30, [sp], #32
 6f0:	ret

00000000000006f4 <register_tm_clones>:
 6f4:	stp	x29, x30, [sp, #-48]!
 6f8:	mov	x29, sp
 6fc:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 700:	add	x0, x0, #0xb8
 704:	str	x0, [sp, #40]
 708:	ldr	x0, [sp, #40]
 70c:	str	x0, [sp, #40]
 710:	ldr	x1, [sp, #40]
 714:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 718:	add	x0, x0, #0xb8
 71c:	sub	x0, x1, x0
 720:	asr	x0, x0, #3
 724:	lsr	x1, x0, #63
 728:	add	x0, x1, x0
 72c:	asr	x0, x0, #1
 730:	str	x0, [sp, #32]
 734:	ldr	x0, [sp, #32]
 738:	cmp	x0, #0x0
 73c:	b.eq	778 <register_tm_clones+0x84>  // b.none
 740:	adrp	x0, 10000 <__FRAME_END__+0xf638>
 744:	ldr	x0, [x0, #4064]
 748:	str	x0, [sp, #24]
 74c:	ldr	x0, [sp, #24]
 750:	str	x0, [sp, #24]
 754:	ldr	x0, [sp, #24]
 758:	cmp	x0, #0x0
 75c:	b.eq	77c <register_tm_clones+0x88>  // b.none
 760:	ldr	x2, [sp, #24]
 764:	ldr	x1, [sp, #32]
 768:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 76c:	add	x0, x0, #0xb8
 770:	blr	x2
 774:	b	77c <register_tm_clones+0x88>
 778:	nop
 77c:	ldp	x29, x30, [sp], #48
 780:	ret

0000000000000784 <__do_global_dtors_aux>:
 784:	stp	x29, x30, [sp, #-16]!
 788:	mov	x29, sp
 78c:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 790:	add	x0, x0, #0xb8
 794:	ldrb	w0, [x0]
 798:	and	x0, x0, #0xff
 79c:	cmp	x0, #0x0
 7a0:	b.ne	7dc <__do_global_dtors_aux+0x58>  // b.any
 7a4:	adrp	x0, 10000 <__FRAME_END__+0xf638>
 7a8:	ldr	x0, [x0, #4048]
 7ac:	cmp	x0, #0x0
 7b0:	b.eq	7c4 <__do_global_dtors_aux+0x40>  // b.none
 7b4:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 7b8:	add	x0, x0, #0x10
 7bc:	ldr	x0, [x0]
 7c0:	bl	650 <__cxa_finalize@plt>
 7c4:	bl	684 <deregister_tm_clones>
 7c8:	adrp	x0, 11000 <__cxa_finalize@GLIBC_2.17>
 7cc:	add	x0, x0, #0xb8
 7d0:	mov	w1, #0x1                   	// #1
 7d4:	strb	w1, [x0]
 7d8:	b	7e0 <__do_global_dtors_aux+0x5c>
 7dc:	nop
 7e0:	ldp	x29, x30, [sp], #16
 7e4:	ret

00000000000007e8 <frame_dummy>:
 7e8:	stp	x29, x30, [sp, #-16]!
 7ec:	mov	x29, sp
 7f0:	bl	6f4 <register_tm_clones>
 7f4:	nop
 7f8:	ldp	x29, x30, [sp], #16
 7fc:	ret

0000000000000800 <true_builtin>:
 800:	sub	sp, sp, #0x10
 804:	str	x0, [sp, #8]
 808:	mov	w0, #0x0                   	// #0
 80c:	add	sp, sp, #0x10
 810:	ret

0000000000000814 <false_builtin>:
 814:	sub	sp, sp, #0x10
 818:	str	x0, [sp, #8]
 81c:	mov	w0, #0x1                   	// #1
 820:	add	sp, sp, #0x10
 824:	ret

Disassembly of section .fini:

0000000000000828 <_fini>:
 828:	stp	x29, x30, [sp, #-16]!
 82c:	mov	x29, sp
 830:	ldp	x29, x30, [sp], #16
 834:	ret
