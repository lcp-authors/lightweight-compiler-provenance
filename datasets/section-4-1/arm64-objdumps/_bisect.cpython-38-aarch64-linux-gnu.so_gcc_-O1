
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_bisect.cpython-38-aarch64-linux-gnu.so_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b30 <.init>:
 b30:	stp	x29, x30, [sp, #-16]!
 b34:	mov	x29, sp
 b38:	bl	c30 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x10>
 b3c:	ldp	x29, x30, [sp], #16
 b40:	ret

Disassembly of section .plt:

0000000000000b50 <PyList_Insert@plt-0x20>:
 b50:	stp	x16, x30, [sp, #-16]!
 b54:	adrp	x16, 11000 <PyInit__bisect@@Base+0xfc14>
 b58:	ldr	x17, [x16, #4088]
 b5c:	add	x16, x16, #0xff8
 b60:	br	x17
 b64:	nop
 b68:	nop
 b6c:	nop

0000000000000b70 <PyList_Insert@plt>:
 b70:	adrp	x16, 12000 <PyList_Insert>
 b74:	ldr	x17, [x16]
 b78:	add	x16, x16, #0x0
 b7c:	br	x17

0000000000000b80 <__cxa_finalize@plt>:
 b80:	adrp	x16, 12000 <PyList_Insert>
 b84:	ldr	x17, [x16, #8]
 b88:	add	x16, x16, #0x8
 b8c:	br	x17

0000000000000b90 <_Py_Dealloc@plt>:
 b90:	adrp	x16, 12000 <PyList_Insert>
 b94:	ldr	x17, [x16, #16]
 b98:	add	x16, x16, #0x10
 b9c:	br	x17

0000000000000ba0 <PyErr_SetString@plt>:
 ba0:	adrp	x16, 12000 <PyList_Insert>
 ba4:	ldr	x17, [x16, #24]
 ba8:	add	x16, x16, #0x18
 bac:	br	x17

0000000000000bb0 <PySequence_GetItem@plt>:
 bb0:	adrp	x16, 12000 <PyList_Insert>
 bb4:	ldr	x17, [x16, #32]
 bb8:	add	x16, x16, #0x20
 bbc:	br	x17

0000000000000bc0 <PyLong_FromSsize_t@plt>:
 bc0:	adrp	x16, 12000 <PyList_Insert>
 bc4:	ldr	x17, [x16, #40]
 bc8:	add	x16, x16, #0x28
 bcc:	br	x17

0000000000000bd0 <PyObject_RichCompareBool@plt>:
 bd0:	adrp	x16, 12000 <PyList_Insert>
 bd4:	ldr	x17, [x16, #48]
 bd8:	add	x16, x16, #0x30
 bdc:	br	x17

0000000000000be0 <PySequence_Size@plt>:
 be0:	adrp	x16, 12000 <PyList_Insert>
 be4:	ldr	x17, [x16, #56]
 be8:	add	x16, x16, #0x38
 bec:	br	x17

0000000000000bf0 <__gmon_start__@plt>:
 bf0:	adrp	x16, 12000 <PyList_Insert>
 bf4:	ldr	x17, [x16, #64]
 bf8:	add	x16, x16, #0x40
 bfc:	br	x17

0000000000000c00 <PyModule_Create2@plt>:
 c00:	adrp	x16, 12000 <PyList_Insert>
 c04:	ldr	x17, [x16, #72]
 c08:	add	x16, x16, #0x48
 c0c:	br	x17

0000000000000c10 <_PyObject_CallMethodId_SizeT@plt>:
 c10:	adrp	x16, 12000 <PyList_Insert>
 c14:	ldr	x17, [x16, #80]
 c18:	add	x16, x16, #0x50
 c1c:	br	x17

0000000000000c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
 c20:	adrp	x16, 12000 <PyList_Insert>
 c24:	ldr	x17, [x16, #88]
 c28:	add	x16, x16, #0x58
 c2c:	br	x17

Disassembly of section .text:

0000000000000c30 <PyInit__bisect@@Base-0x7bc>:
     c30:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
     c34:	ldr	x0, [x0, #4040]
     c38:	cbz	x0, c40 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x20>
     c3c:	b	bf0 <__gmon_start__@plt>
     c40:	ret
     c44:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     c48:	add	x0, x0, #0x228
     c4c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c14>
     c50:	add	x1, x1, #0x228
     c54:	cmp	x0, x1
     c58:	b.eq	c84 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x64>  // b.none
     c5c:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc14>
     c60:	ldr	x1, [x1, #4016]
     c64:	cbz	x1, c84 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x64>
     c68:	stp	x29, x30, [sp, #-16]!
     c6c:	mov	x29, sp
     c70:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     c74:	add	x0, x0, #0x228
     c78:	blr	x1
     c7c:	ldp	x29, x30, [sp], #16
     c80:	ret
     c84:	ret
     c88:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     c8c:	add	x0, x0, #0x228
     c90:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c14>
     c94:	add	x1, x1, #0x228
     c98:	sub	x0, x0, x1
     c9c:	lsr	x1, x0, #63
     ca0:	add	x0, x1, x0, asr #3
     ca4:	cmp	xzr, x0, asr #1
     ca8:	b.eq	cd8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xb8>  // b.none
     cac:	asr	x1, x0, #1
     cb0:	adrp	x2, 11000 <PyInit__bisect@@Base+0xfc14>
     cb4:	ldr	x2, [x2, #4056]
     cb8:	cbz	x2, cd8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xb8>
     cbc:	stp	x29, x30, [sp, #-16]!
     cc0:	mov	x29, sp
     cc4:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     cc8:	add	x0, x0, #0x228
     ccc:	blr	x2
     cd0:	ldp	x29, x30, [sp], #16
     cd4:	ret
     cd8:	ret
     cdc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     ce0:	ldrb	w0, [x0, #552]
     ce4:	cbnz	w0, d20 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x100>
     ce8:	stp	x29, x30, [sp, #-16]!
     cec:	mov	x29, sp
     cf0:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
     cf4:	ldr	x0, [x0, #4024]
     cf8:	cbz	x0, d08 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0xe8>
     cfc:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     d00:	ldr	x0, [x0, #96]
     d04:	bl	b80 <__cxa_finalize@plt>
     d08:	bl	c44 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x24>
     d0c:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
     d10:	mov	w1, #0x1                   	// #1
     d14:	strb	w1, [x0, #552]
     d18:	ldp	x29, x30, [sp], #16
     d1c:	ret
     d20:	ret
     d24:	stp	x29, x30, [sp, #-16]!
     d28:	mov	x29, sp
     d2c:	bl	c88 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x68>
     d30:	ldp	x29, x30, [sp], #16
     d34:	ret
     d38:	stp	x29, x30, [sp, #-112]!
     d3c:	mov	x29, sp
     d40:	stp	x19, x20, [sp, #16]
     d44:	stp	x21, x22, [sp, #32]
     d48:	stp	x23, x24, [sp, #48]
     d4c:	str	x25, [sp, #64]
     d50:	mov	x0, x1
     d54:	mov	x1, x2
     d58:	str	xzr, [sp, #88]
     d5c:	mov	x2, #0xffffffffffffffff    	// #-1
     d60:	str	x2, [sp, #80]
     d64:	cbz	x1, db8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x198>
     d68:	add	x7, sp, #0x50
     d6c:	add	x6, sp, #0x58
     d70:	add	x5, sp, #0x60
     d74:	add	x4, sp, #0x68
     d78:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c14>
     d7c:	add	x3, x3, #0x68
     d80:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     d84:	add	x2, x2, #0x420
     d88:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     d8c:	cbz	w0, f0c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2ec>
     d90:	ldr	x24, [sp, #104]
     d94:	ldr	x25, [sp, #96]
     d98:	ldr	x20, [sp, #88]
     d9c:	ldr	x22, [sp, #80]
     da0:	tbnz	x20, #63, dec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1cc>
     da4:	cmn	x22, #0x1
     da8:	b.eq	dd8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1b8>  // b.none
     dac:	cmp	x22, x20
     db0:	b.gt	e24 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x204>
     db4:	b	e74 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x254>
     db8:	ldr	x2, [x0, #16]
     dbc:	cmp	x2, #0x2
     dc0:	b.ne	d68 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x148>  // b.any
     dc4:	ldr	x24, [x0, #24]
     dc8:	str	x24, [sp, #104]
     dcc:	ldr	x25, [x0, #32]
     dd0:	str	x25, [sp, #96]
     dd4:	mov	x20, #0x0                   	// #0
     dd8:	mov	x0, x24
     ddc:	bl	be0 <PySequence_Size@plt>
     de0:	mov	x22, x0
     de4:	tbz	x0, #63, dac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x18c>
     de8:	b	e04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1e4>
     dec:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     df0:	add	x1, x1, #0x438
     df4:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
     df8:	ldr	x0, [x0, #4032]
     dfc:	ldr	x0, [x0]
     e00:	bl	ba0 <PyErr_SetString@plt>
     e04:	mov	x0, #0x0                   	// #0
     e08:	b	ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     e0c:	mov	x0, x19
     e10:	bl	b90 <_Py_Dealloc@plt>
     e14:	b	e60 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x240>
     e18:	mov	x22, x21
     e1c:	cmp	x22, x20
     e20:	b.le	e70 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x250>
     e24:	add	x21, x20, x22
     e28:	lsr	x21, x21, #1
     e2c:	mov	x1, x21
     e30:	mov	x0, x24
     e34:	bl	bb0 <PySequence_GetItem@plt>
     e38:	mov	x19, x0
     e3c:	cbz	x0, e04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1e4>
     e40:	mov	w2, #0x0                   	// #0
     e44:	mov	x1, x25
     e48:	bl	bd0 <PyObject_RichCompareBool@plt>
     e4c:	mov	w23, w0
     e50:	ldr	x0, [x19]
     e54:	sub	x0, x0, #0x1
     e58:	str	x0, [x19]
     e5c:	cbz	x0, e0c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1ec>
     e60:	tbnz	w23, #31, e04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1e4>
     e64:	cbz	w23, e18 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1f8>
     e68:	add	x20, x21, #0x1
     e6c:	b	e1c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x1fc>
     e70:	tbnz	x20, #63, f14 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2f4>
     e74:	ldr	x0, [sp, #104]
     e78:	ldr	x2, [x0, #8]
     e7c:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc14>
     e80:	ldr	x1, [x1, #4064]
     e84:	cmp	x2, x1
     e88:	b.eq	eec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2cc>  // b.none
     e8c:	ldr	x4, [sp, #96]
     e90:	mov	x3, x20
     e94:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     e98:	add	x2, x2, #0x450
     e9c:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c14>
     ea0:	add	x1, x1, #0x68
     ea4:	add	x1, x1, #0x28
     ea8:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
     eac:	cbz	x0, ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     eb0:	ldr	x1, [x0]
     eb4:	sub	x1, x1, #0x1
     eb8:	str	x1, [x0]
     ebc:	cbz	x1, f04 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2e4>
     ec0:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
     ec4:	ldr	x0, [x0, #4048]
     ec8:	ldr	x1, [x0]
     ecc:	add	x1, x1, #0x1
     ed0:	str	x1, [x0]
     ed4:	ldp	x19, x20, [sp, #16]
     ed8:	ldp	x21, x22, [sp, #32]
     edc:	ldp	x23, x24, [sp, #48]
     ee0:	ldr	x25, [sp, #64]
     ee4:	ldp	x29, x30, [sp], #112
     ee8:	ret
     eec:	ldr	x2, [sp, #96]
     ef0:	mov	x1, x20
     ef4:	bl	b70 <PyList_Insert@plt>
     ef8:	tbz	w0, #31, ec0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2a0>
     efc:	mov	x0, #0x0                   	// #0
     f00:	b	ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     f04:	bl	b90 <_Py_Dealloc@plt>
     f08:	b	ec0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2a0>
     f0c:	mov	x0, #0x0                   	// #0
     f10:	b	ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     f14:	mov	x0, #0x0                   	// #0
     f18:	b	ed4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x2b4>
     f1c:	stp	x29, x30, [sp, #-112]!
     f20:	mov	x29, sp
     f24:	stp	x19, x20, [sp, #16]
     f28:	stp	x21, x22, [sp, #32]
     f2c:	stp	x23, x24, [sp, #48]
     f30:	str	x25, [sp, #64]
     f34:	mov	x0, x1
     f38:	mov	x1, x2
     f3c:	str	xzr, [sp, #88]
     f40:	mov	x2, #0xffffffffffffffff    	// #-1
     f44:	str	x2, [sp, #80]
     f48:	cbz	x1, fa0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x380>
     f4c:	add	x7, sp, #0x50
     f50:	add	x6, sp, #0x58
     f54:	add	x5, sp, #0x60
     f58:	add	x4, sp, #0x68
     f5c:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c14>
     f60:	add	x3, x3, #0x68
     f64:	add	x3, x3, #0x40
     f68:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     f6c:	add	x2, x2, #0x458
     f70:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
     f74:	cbz	w0, 10f8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4d8>
     f78:	ldr	x24, [sp, #104]
     f7c:	ldr	x25, [sp, #96]
     f80:	ldr	x20, [sp, #88]
     f84:	ldr	x22, [sp, #80]
     f88:	tbnz	x20, #63, fd4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3b4>
     f8c:	cmn	x22, #0x1
     f90:	b.eq	fc0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3a0>  // b.none
     f94:	cmp	x22, x20
     f98:	b.gt	100c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3ec>
     f9c:	b	1060 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x440>
     fa0:	ldr	x2, [x0, #16]
     fa4:	cmp	x2, #0x2
     fa8:	b.ne	f4c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x32c>  // b.any
     fac:	ldr	x24, [x0, #24]
     fb0:	str	x24, [sp, #104]
     fb4:	ldr	x25, [x0, #32]
     fb8:	str	x25, [sp, #96]
     fbc:	mov	x20, #0x0                   	// #0
     fc0:	mov	x0, x24
     fc4:	bl	be0 <PySequence_Size@plt>
     fc8:	mov	x22, x0
     fcc:	tbz	x0, #63, f94 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x374>
     fd0:	b	fec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3cc>
     fd4:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
     fd8:	add	x1, x1, #0x438
     fdc:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
     fe0:	ldr	x0, [x0, #4032]
     fe4:	ldr	x0, [x0]
     fe8:	bl	ba0 <PyErr_SetString@plt>
     fec:	mov	x0, #0x0                   	// #0
     ff0:	b	10c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a0>
     ff4:	mov	x0, x19
     ff8:	bl	b90 <_Py_Dealloc@plt>
     ffc:	b	104c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x42c>
    1000:	mov	x22, x21
    1004:	cmp	x22, x20
    1008:	b.le	105c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x43c>
    100c:	add	x21, x20, x22
    1010:	lsr	x21, x21, #1
    1014:	mov	x1, x21
    1018:	mov	x0, x24
    101c:	bl	bb0 <PySequence_GetItem@plt>
    1020:	mov	x19, x0
    1024:	cbz	x0, fec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3cc>
    1028:	mov	w2, #0x0                   	// #0
    102c:	mov	x1, x0
    1030:	mov	x0, x25
    1034:	bl	bd0 <PyObject_RichCompareBool@plt>
    1038:	mov	w23, w0
    103c:	ldr	x0, [x19]
    1040:	sub	x0, x0, #0x1
    1044:	str	x0, [x19]
    1048:	cbz	x0, ff4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3d4>
    104c:	tbnz	w23, #31, fec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3cc>
    1050:	cbnz	w23, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1054:	add	x20, x21, #0x1
    1058:	b	1004 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e4>
    105c:	tbnz	x20, #63, 1100 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4e0>
    1060:	ldr	x0, [sp, #104]
    1064:	ldr	x2, [x0, #8]
    1068:	adrp	x1, 11000 <PyInit__bisect@@Base+0xfc14>
    106c:	ldr	x1, [x1, #4064]
    1070:	cmp	x2, x1
    1074:	b.eq	10d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4b8>  // b.none
    1078:	ldr	x4, [sp, #96]
    107c:	mov	x3, x20
    1080:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1084:	add	x2, x2, #0x450
    1088:	adrp	x1, 12000 <PyInit__bisect@@Base+0x10c14>
    108c:	add	x1, x1, #0x68
    1090:	add	x1, x1, #0x28
    1094:	bl	c10 <_PyObject_CallMethodId_SizeT@plt>
    1098:	cbz	x0, 10c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a0>
    109c:	ldr	x1, [x0]
    10a0:	sub	x1, x1, #0x1
    10a4:	str	x1, [x0]
    10a8:	cbz	x1, 10f0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4d0>
    10ac:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
    10b0:	ldr	x0, [x0, #4048]
    10b4:	ldr	x1, [x0]
    10b8:	add	x1, x1, #0x1
    10bc:	str	x1, [x0]
    10c0:	ldp	x19, x20, [sp, #16]
    10c4:	ldp	x21, x22, [sp, #32]
    10c8:	ldp	x23, x24, [sp, #48]
    10cc:	ldr	x25, [sp, #64]
    10d0:	ldp	x29, x30, [sp], #112
    10d4:	ret
    10d8:	ldr	x2, [sp, #96]
    10dc:	mov	x1, x20
    10e0:	bl	b70 <PyList_Insert@plt>
    10e4:	tbz	w0, #31, 10ac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x48c>
    10e8:	mov	x0, #0x0                   	// #0
    10ec:	b	10c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a0>
    10f0:	bl	b90 <_Py_Dealloc@plt>
    10f4:	b	10ac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x48c>
    10f8:	mov	x0, #0x0                   	// #0
    10fc:	b	10c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a0>
    1100:	mov	x0, #0x0                   	// #0
    1104:	b	10c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x4a0>
    1108:	stp	x29, x30, [sp, #-112]!
    110c:	mov	x29, sp
    1110:	stp	x19, x20, [sp, #16]
    1114:	stp	x21, x22, [sp, #32]
    1118:	stp	x23, x24, [sp, #48]
    111c:	str	x25, [sp, #64]
    1120:	mov	x0, x1
    1124:	mov	x1, x2
    1128:	str	xzr, [sp, #88]
    112c:	mov	x2, #0xffffffffffffffff    	// #-1
    1130:	str	x2, [sp, #80]
    1134:	cbz	x1, 118c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x56c>
    1138:	add	x7, sp, #0x50
    113c:	add	x6, sp, #0x58
    1140:	add	x5, sp, #0x60
    1144:	add	x4, sp, #0x68
    1148:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c14>
    114c:	add	x3, x3, #0x68
    1150:	add	x3, x3, #0x68
    1154:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1158:	add	x2, x2, #0x470
    115c:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    1160:	cbz	w0, 1268 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x648>
    1164:	ldr	x24, [sp, #104]
    1168:	ldr	x25, [sp, #96]
    116c:	ldr	x20, [sp, #88]
    1170:	ldr	x22, [sp, #80]
    1174:	tbnz	x20, #63, 11c0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5a0>
    1178:	cmn	x22, #0x1
    117c:	b.eq	11ac <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x58c>  // b.none
    1180:	cmp	x22, x20
    1184:	b.gt	11f8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5d8>
    1188:	b	1248 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x628>
    118c:	ldr	x2, [x0, #16]
    1190:	cmp	x2, #0x2
    1194:	b.ne	1138 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x518>  // b.any
    1198:	ldr	x24, [x0, #24]
    119c:	str	x24, [sp, #104]
    11a0:	ldr	x25, [x0, #32]
    11a4:	str	x25, [sp, #96]
    11a8:	mov	x20, #0x0                   	// #0
    11ac:	mov	x0, x24
    11b0:	bl	be0 <PySequence_Size@plt>
    11b4:	mov	x22, x0
    11b8:	tbz	x0, #63, 1180 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x560>
    11bc:	b	11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    11c0:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    11c4:	add	x1, x1, #0x438
    11c8:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
    11cc:	ldr	x0, [x0, #4032]
    11d0:	ldr	x0, [x0]
    11d4:	bl	ba0 <PyErr_SetString@plt>
    11d8:	mov	x0, #0x0                   	// #0
    11dc:	b	1250 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x630>
    11e0:	mov	x0, x19
    11e4:	bl	b90 <_Py_Dealloc@plt>
    11e8:	b	1234 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x614>
    11ec:	mov	x22, x21
    11f0:	cmp	x22, x20
    11f4:	b.le	1244 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x624>
    11f8:	add	x21, x20, x22
    11fc:	lsr	x21, x21, #1
    1200:	mov	x1, x21
    1204:	mov	x0, x24
    1208:	bl	bb0 <PySequence_GetItem@plt>
    120c:	mov	x19, x0
    1210:	cbz	x0, 11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    1214:	mov	w2, #0x0                   	// #0
    1218:	mov	x1, x25
    121c:	bl	bd0 <PyObject_RichCompareBool@plt>
    1220:	mov	w23, w0
    1224:	ldr	x0, [x19]
    1228:	sub	x0, x0, #0x1
    122c:	str	x0, [x19]
    1230:	cbz	x0, 11e0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5c0>
    1234:	tbnz	w23, #31, 11d8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5b8>
    1238:	cbz	w23, 11ec <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5cc>
    123c:	add	x20, x21, #0x1
    1240:	b	11f0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x5d0>
    1244:	tbnz	x20, #63, 1270 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x650>
    1248:	mov	x0, x20
    124c:	bl	bc0 <PyLong_FromSsize_t@plt>
    1250:	ldp	x19, x20, [sp, #16]
    1254:	ldp	x21, x22, [sp, #32]
    1258:	ldp	x23, x24, [sp, #48]
    125c:	ldr	x25, [sp, #64]
    1260:	ldp	x29, x30, [sp], #112
    1264:	ret
    1268:	mov	x0, #0x0                   	// #0
    126c:	b	1250 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x630>
    1270:	mov	x0, #0x0                   	// #0
    1274:	b	1250 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x630>
    1278:	stp	x29, x30, [sp, #-112]!
    127c:	mov	x29, sp
    1280:	stp	x19, x20, [sp, #16]
    1284:	stp	x21, x22, [sp, #32]
    1288:	stp	x23, x24, [sp, #48]
    128c:	str	x25, [sp, #64]
    1290:	mov	x0, x1
    1294:	mov	x1, x2
    1298:	str	xzr, [sp, #88]
    129c:	mov	x2, #0xffffffffffffffff    	// #-1
    12a0:	str	x2, [sp, #80]
    12a4:	cbz	x1, 12fc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6dc>
    12a8:	add	x7, sp, #0x50
    12ac:	add	x6, sp, #0x58
    12b0:	add	x5, sp, #0x60
    12b4:	add	x4, sp, #0x68
    12b8:	adrp	x3, 12000 <PyInit__bisect@@Base+0x10c14>
    12bc:	add	x3, x3, #0x68
    12c0:	add	x3, x3, #0x90
    12c4:	adrp	x2, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    12c8:	add	x2, x2, #0x488
    12cc:	bl	c20 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    12d0:	cbz	w0, 13dc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7bc>
    12d4:	ldr	x24, [sp, #104]
    12d8:	ldr	x25, [sp, #96]
    12dc:	ldr	x20, [sp, #88]
    12e0:	ldr	x22, [sp, #80]
    12e4:	tbnz	x20, #63, 1330 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x710>
    12e8:	cmn	x22, #0x1
    12ec:	b.eq	131c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6fc>  // b.none
    12f0:	cmp	x22, x20
    12f4:	b.gt	1368 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x748>
    12f8:	b	13bc <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x79c>
    12fc:	ldr	x2, [x0, #16]
    1300:	cmp	x2, #0x2
    1304:	b.ne	12a8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x688>  // b.any
    1308:	ldr	x24, [x0, #24]
    130c:	str	x24, [sp, #104]
    1310:	ldr	x25, [x0, #32]
    1314:	str	x25, [sp, #96]
    1318:	mov	x20, #0x0                   	// #0
    131c:	mov	x0, x24
    1320:	bl	be0 <PySequence_Size@plt>
    1324:	mov	x22, x0
    1328:	tbz	x0, #63, 12f0 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x6d0>
    132c:	b	1348 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x728>
    1330:	adrp	x1, 1000 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x3e0>
    1334:	add	x1, x1, #0x438
    1338:	adrp	x0, 11000 <PyInit__bisect@@Base+0xfc14>
    133c:	ldr	x0, [x0, #4032]
    1340:	ldr	x0, [x0]
    1344:	bl	ba0 <PyErr_SetString@plt>
    1348:	mov	x0, #0x0                   	// #0
    134c:	b	13c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7a4>
    1350:	mov	x0, x19
    1354:	bl	b90 <_Py_Dealloc@plt>
    1358:	b	13a8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x788>
    135c:	mov	x22, x21
    1360:	cmp	x22, x20
    1364:	b.le	13b8 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x798>
    1368:	add	x21, x20, x22
    136c:	lsr	x21, x21, #1
    1370:	mov	x1, x21
    1374:	mov	x0, x24
    1378:	bl	bb0 <PySequence_GetItem@plt>
    137c:	mov	x19, x0
    1380:	cbz	x0, 1348 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x728>
    1384:	mov	w2, #0x0                   	// #0
    1388:	mov	x1, x0
    138c:	mov	x0, x25
    1390:	bl	bd0 <PyObject_RichCompareBool@plt>
    1394:	mov	w23, w0
    1398:	ldr	x0, [x19]
    139c:	sub	x0, x0, #0x1
    13a0:	str	x0, [x19]
    13a4:	cbz	x0, 1350 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x730>
    13a8:	tbnz	w23, #31, 1348 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x728>
    13ac:	cbnz	w23, 135c <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x73c>
    13b0:	add	x20, x21, #0x1
    13b4:	b	1360 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x740>
    13b8:	tbnz	x20, #63, 13e4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7c4>
    13bc:	mov	x0, x20
    13c0:	bl	bc0 <PyLong_FromSsize_t@plt>
    13c4:	ldp	x19, x20, [sp, #16]
    13c8:	ldp	x21, x22, [sp, #32]
    13cc:	ldp	x23, x24, [sp, #48]
    13d0:	ldr	x25, [sp, #64]
    13d4:	ldp	x29, x30, [sp], #112
    13d8:	ret
    13dc:	mov	x0, #0x0                   	// #0
    13e0:	b	13c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7a4>
    13e4:	mov	x0, #0x0                   	// #0
    13e8:	b	13c4 <_PyArg_ParseTupleAndKeywords_SizeT@plt+0x7a4>

00000000000013ec <PyInit__bisect@@Base>:
    13ec:	stp	x29, x30, [sp, #-16]!
    13f0:	mov	x29, sp
    13f4:	mov	w1, #0x3f5                 	// #1013
    13f8:	adrp	x0, 12000 <PyInit__bisect@@Base+0x10c14>
    13fc:	add	x0, x0, #0x68
    1400:	add	x0, x0, #0xb8
    1404:	bl	c00 <PyModule_Create2@plt>
    1408:	ldp	x29, x30, [sp], #16
    140c:	ret

Disassembly of section .fini:

0000000000001410 <.fini>:
    1410:	stp	x29, x30, [sp, #-16]!
    1414:	mov	x29, sp
    1418:	ldp	x29, x30, [sp], #16
    141c:	ret
