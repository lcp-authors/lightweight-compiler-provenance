In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMMCDisassembler.a_clang_-Os:

Disassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMCreateDisasmCPUFeatures>:
   0:	sub	sp, sp, #0x1e0
   4:	stp	x29, x30, [sp, #384]
   8:	stp	x28, x27, [sp, #400]
   c:	stp	x26, x25, [sp, #416]
  10:	stp	x24, x23, [sp, #432]
  14:	stp	x22, x21, [sp, #448]
  18:	stp	x20, x19, [sp, #464]
  1c:	add	x29, sp, #0x180
  20:	mov	x25, x0
  24:	sub	x8, x29, #0x28
  28:	mov	x27, x2
  2c:	mov	x19, x1
  30:	add	x20, x8, #0x10
  34:	sub	x0, x29, #0x90
  38:	add	x2, sp, #0x88
  3c:	mov	x1, x25
  40:	mov	x26, x6
  44:	mov	x21, x5
  48:	mov	w28, w4
  4c:	mov	x23, x3
  50:	stp	x20, xzr, [x29, #-40]
  54:	sturb	wzr, [x29, #-24]
  58:	sub	x22, x29, #0x90
  5c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
  60:	sub	x0, x29, #0x90
  64:	sub	x1, x29, #0x28
  68:	bl	0 <_ZN4llvm14TargetRegistry12lookupTargetERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERS6_>
  6c:	ldur	x8, [x29, #-144]
  70:	add	x9, x22, #0x10
  74:	mov	x24, x0
  78:	cmp	x8, x9
  7c:	b.eq	88 <LLVMCreateDisasmCPUFeatures+0x88>  // b.none
  80:	mov	x0, x8
  84:	bl	0 <_ZdlPv>
  88:	cbz	x24, a0 <LLVMCreateDisasmCPUFeatures+0xa0>
  8c:	cbz	x25, a8 <LLVMCreateDisasmCPUFeatures+0xa8>
  90:	mov	x0, x25
  94:	bl	0 <strlen>
  98:	mov	x2, x0
  9c:	b	ac <LLVMCreateDisasmCPUFeatures+0xac>
  a0:	mov	x26, xzr
  a4:	b	4c0 <LLVMCreateDisasmCPUFeatures+0x4c0>
  a8:	mov	x2, xzr
  ac:	mov	x0, x24
  b0:	mov	x1, x25
  b4:	bl	0 <LLVMCreateDisasmCPUFeatures>
  b8:	stur	x0, [x29, #-48]
  bc:	cbz	x0, e8 <LLVMCreateDisasmCPUFeatures+0xe8>
  c0:	sub	x0, x29, #0x90
  c4:	bl	0 <_ZN4llvm15MCTargetOptionsC1Ev>
  c8:	ldur	x22, [x29, #-48]
  cc:	str	x26, [sp, #64]
  d0:	str	w28, [sp, #60]
  d4:	cbz	x25, f0 <LLVMCreateDisasmCPUFeatures+0xf0>
  d8:	mov	x0, x25
  dc:	bl	0 <strlen>
  e0:	mov	x3, x0
  e4:	b	f4 <LLVMCreateDisasmCPUFeatures+0xf4>
  e8:	mov	x26, xzr
  ec:	b	4b8 <LLVMCreateDisasmCPUFeatures+0x4b8>
  f0:	mov	x3, xzr
  f4:	sub	x4, x29, #0x90
  f8:	mov	x0, x24
  fc:	mov	x1, x22
 100:	mov	x2, x25
 104:	sub	x28, x29, #0x90
 108:	bl	0 <LLVMCreateDisasmCPUFeatures>
 10c:	mov	x26, x0
 110:	stur	x0, [x29, #-152]
 114:	cbz	x0, 484 <LLVMCreateDisasmCPUFeatures+0x484>
 118:	ldr	x8, [x24, #56]
 11c:	cbz	x8, 160 <LLVMCreateDisasmCPUFeatures+0x160>
 120:	blr	x8
 124:	stur	x0, [x29, #-160]
 128:	cbz	x0, 16c <LLVMCreateDisasmCPUFeatures+0x16c>
 12c:	cbz	x25, 174 <LLVMCreateDisasmCPUFeatures+0x174>
 130:	mov	x0, x25
 134:	bl	0 <strlen>
 138:	mov	x28, x0
 13c:	cbz	x19, 17c <LLVMCreateDisasmCPUFeatures+0x17c>
 140:	mov	x0, x19
 144:	bl	0 <strlen>
 148:	mov	x22, x0
 14c:	cbz	x27, 184 <LLVMCreateDisasmCPUFeatures+0x184>
 150:	mov	x0, x27
 154:	bl	0 <strlen>
 158:	mov	x6, x0
 15c:	b	188 <LLVMCreateDisasmCPUFeatures+0x188>
 160:	mov	x26, xzr
 164:	stur	xzr, [x29, #-160]
 168:	b	470 <LLVMCreateDisasmCPUFeatures+0x470>
 16c:	mov	x26, xzr
 170:	b	470 <LLVMCreateDisasmCPUFeatures+0x470>
 174:	mov	x28, xzr
 178:	cbnz	x19, 140 <LLVMCreateDisasmCPUFeatures+0x140>
 17c:	mov	x22, xzr
 180:	cbnz	x27, 150 <LLVMCreateDisasmCPUFeatures+0x150>
 184:	mov	x6, xzr
 188:	mov	x0, x24
 18c:	mov	x1, x25
 190:	mov	x2, x28
 194:	mov	x3, x19
 198:	mov	x4, x22
 19c:	mov	x5, x27
 1a0:	bl	0 <LLVMCreateDisasmCPUFeatures>
 1a4:	stur	x0, [x29, #-168]
 1a8:	cbz	x0, 20c <LLVMCreateDisasmCPUFeatures+0x20c>
 1ac:	mov	x28, x0
 1b0:	mov	w0, #0x6b8                 	// #1720
 1b4:	bl	0 <_Znwm>
 1b8:	ldur	x2, [x29, #-48]
 1bc:	mov	w6, #0x1                   	// #1
 1c0:	mov	x1, x26
 1c4:	mov	x3, xzr
 1c8:	mov	x4, xzr
 1cc:	mov	x5, xzr
 1d0:	mov	x27, x0
 1d4:	bl	0 <_ZN4llvm9MCContextC1EPKNS_9MCAsmInfoEPKNS_14MCRegisterInfoEPKNS_16MCObjectFileInfoEPKNS_9SourceMgrEPKNS_15MCTargetOptionsEb>
 1d8:	ldr	x8, [x24, #120]
 1dc:	cbz	x8, 218 <LLVMCreateDisasmCPUFeatures+0x218>
 1e0:	mov	x0, x24
 1e4:	mov	x1, x28
 1e8:	mov	x2, x27
 1ec:	blr	x8
 1f0:	mov	x28, x0
 1f4:	cbz	x0, 250 <LLVMCreateDisasmCPUFeatures+0x250>
 1f8:	cbz	x25, 220 <LLVMCreateDisasmCPUFeatures+0x220>
 1fc:	mov	x0, x25
 200:	bl	0 <strlen>
 204:	mov	x2, x0
 208:	b	224 <LLVMCreateDisasmCPUFeatures+0x224>
 20c:	mov	x26, xzr
 210:	sub	x28, x29, #0x90
 214:	b	464 <LLVMCreateDisasmCPUFeatures+0x464>
 218:	mov	x26, xzr
 21c:	b	43c <LLVMCreateDisasmCPUFeatures+0x43c>
 220:	mov	x2, xzr
 224:	mov	x0, x24
 228:	mov	x1, x25
 22c:	mov	x3, x27
 230:	bl	0 <LLVMCreateDisasmCPUFeatures>
 234:	stur	x0, [x29, #-176]
 238:	cbz	x0, 250 <LLVMCreateDisasmCPUFeatures+0x250>
 23c:	cbz	x25, 258 <LLVMCreateDisasmCPUFeatures+0x258>
 240:	mov	x0, x25
 244:	bl	0 <strlen>
 248:	mov	x2, x0
 24c:	b	25c <LLVMCreateDisasmCPUFeatures+0x25c>
 250:	mov	x26, xzr
 254:	b	424 <LLVMCreateDisasmCPUFeatures+0x424>
 258:	mov	x2, xzr
 25c:	ldr	x4, [sp, #64]
 260:	sub	x7, x29, #0xb0
 264:	mov	x0, x24
 268:	mov	x1, x25
 26c:	mov	x3, x21
 270:	mov	x5, x23
 274:	mov	x6, x27
 278:	bl	0 <LLVMCreateDisasmCPUFeatures>
 27c:	stur	x0, [x29, #-184]
 280:	sub	x1, x29, #0xb8
 284:	mov	x0, x28
 288:	bl	0 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>
 28c:	ldur	x0, [x29, #-184]
 290:	cbz	x0, 2a4 <LLVMCreateDisasmCPUFeatures+0x2a4>
 294:	ldr	x8, [x0]
 298:	ldr	x8, [x8, #8]
 29c:	blr	x8
 2a0:	ldur	x26, [x29, #-152]
 2a4:	stur	xzr, [x29, #-184]
 2a8:	ldr	w22, [x26, #168]
 2ac:	add	x0, sp, #0x70
 2b0:	mov	x1, x25
 2b4:	bl	0 <LLVMCreateDisasmCPUFeatures>
 2b8:	add	x0, sp, #0x88
 2bc:	add	x1, sp, #0x70
 2c0:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
 2c4:	ldr	x8, [x24, #128]
 2c8:	cbz	x8, 2e8 <LLVMCreateDisasmCPUFeatures+0x2e8>
 2cc:	ldur	x4, [x29, #-48]
 2d0:	ldur	x3, [x29, #-160]
 2d4:	add	x0, sp, #0x88
 2d8:	mov	w1, w22
 2dc:	mov	x2, x26
 2e0:	blr	x8
 2e4:	b	2ec <LLVMCreateDisasmCPUFeatures+0x2ec>
 2e8:	mov	x0, xzr
 2ec:	ldr	x8, [sp, #136]
 2f0:	add	x9, sp, #0x88
 2f4:	add	x9, x9, #0x10
 2f8:	str	x0, [sp, #192]
 2fc:	cmp	x8, x9
 300:	b.eq	310 <LLVMCreateDisasmCPUFeatures+0x310>  // b.none
 304:	mov	x0, x8
 308:	bl	0 <_ZdlPv>
 30c:	ldr	x0, [sp, #192]
 310:	cbz	x0, 40c <LLVMCreateDisasmCPUFeatures+0x40c>
 314:	mov	w0, #0x168                 	// #360
 318:	bl	0 <_Znwm>
 31c:	mov	x26, x0
 320:	add	x0, sp, #0x50
 324:	add	x2, sp, #0x48
 328:	mov	x1, x25
 32c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_>
 330:	ldr	w3, [sp, #60]
 334:	ldr	x5, [sp, #64]
 338:	add	x8, sp, #0xc0
 33c:	add	x9, sp, #0x70
 340:	add	x10, sp, #0x88
 344:	sub	x11, x29, #0xa0
 348:	sub	x12, x29, #0xa8
 34c:	sub	x13, x29, #0x30
 350:	add	x1, sp, #0x50
 354:	sub	x7, x29, #0x98
 358:	mov	x0, x26
 35c:	mov	x2, x23
 360:	mov	x4, x21
 364:	mov	x6, x24
 368:	str	x27, [sp, #136]
 36c:	str	x28, [sp, #112]
 370:	stp	x9, x8, [sp, #32]
 374:	stp	x11, x10, [sp, #16]
 378:	stp	x13, x12, [sp]
 37c:	bl	0 <LLVMCreateDisasmCPUFeatures>
 380:	ldr	x0, [sp, #112]
 384:	cbz	x0, 394 <LLVMCreateDisasmCPUFeatures+0x394>
 388:	ldr	x8, [x0]
 38c:	ldr	x8, [x8, #8]
 390:	blr	x8
 394:	ldr	x21, [sp, #136]
 398:	cbz	x21, 3ac <LLVMCreateDisasmCPUFeatures+0x3ac>
 39c:	mov	x0, x21
 3a0:	bl	0 <_ZN4llvm9MCContextD1Ev>
 3a4:	mov	x0, x21
 3a8:	bl	0 <_ZdlPv>
 3ac:	ldr	x0, [sp, #80]
 3b0:	add	x8, sp, #0x50
 3b4:	add	x8, x8, #0x10
 3b8:	cmp	x0, x8
 3bc:	b.eq	3c4 <LLVMCreateDisasmCPUFeatures+0x3c4>  // b.none
 3c0:	bl	0 <_ZdlPv>
 3c4:	ldr	x22, [x26, #144]
 3c8:	mov	x0, x19
 3cc:	add	x21, x26, #0x88
 3d0:	bl	0 <strlen>
 3d4:	mov	x4, x0
 3d8:	mov	x0, x21
 3dc:	mov	x1, xzr
 3e0:	mov	x2, x22
 3e4:	mov	x3, x19
 3e8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
 3ec:	ldr	x0, [sp, #192]
 3f0:	cbz	x0, 400 <LLVMCreateDisasmCPUFeatures+0x400>
 3f4:	ldr	x8, [x0]
 3f8:	ldr	x8, [x8, #8]
 3fc:	blr	x8
 400:	mov	x27, xzr
 404:	mov	x28, xzr
 408:	b	410 <LLVMCreateDisasmCPUFeatures+0x410>
 40c:	mov	x26, xzr
 410:	ldur	x0, [x29, #-176]
 414:	cbz	x0, 424 <LLVMCreateDisasmCPUFeatures+0x424>
 418:	ldr	x8, [x0]
 41c:	ldr	x8, [x8, #8]
 420:	blr	x8
 424:	cbz	x28, 438 <LLVMCreateDisasmCPUFeatures+0x438>
 428:	ldr	x8, [x28]
 42c:	mov	x0, x28
 430:	ldr	x8, [x8, #8]
 434:	blr	x8
 438:	cbz	x27, 44c <LLVMCreateDisasmCPUFeatures+0x44c>
 43c:	mov	x0, x27
 440:	bl	0 <_ZN4llvm9MCContextD1Ev>
 444:	mov	x0, x27
 448:	bl	0 <_ZdlPv>
 44c:	ldur	x0, [x29, #-168]
 450:	sub	x28, x29, #0x90
 454:	cbz	x0, 464 <LLVMCreateDisasmCPUFeatures+0x464>
 458:	ldr	x8, [x0]
 45c:	ldr	x8, [x8, #8]
 460:	blr	x8
 464:	ldur	x0, [x29, #-160]
 468:	cbz	x0, 470 <LLVMCreateDisasmCPUFeatures+0x470>
 46c:	bl	0 <_ZdlPv>
 470:	ldur	x0, [x29, #-152]
 474:	cbz	x0, 484 <LLVMCreateDisasmCPUFeatures+0x484>
 478:	ldr	x8, [x0]
 47c:	ldr	x8, [x8, #8]
 480:	blr	x8
 484:	add	x0, x28, #0x48
 488:	bl	0 <LLVMCreateDisasmCPUFeatures>
 48c:	ldur	x0, [x29, #-104]
 490:	add	x8, x28, #0x38
 494:	cmp	x0, x8
 498:	b.eq	4a0 <LLVMCreateDisasmCPUFeatures+0x4a0>  // b.none
 49c:	bl	0 <_ZdlPv>
 4a0:	ldur	x0, [x29, #-136]
 4a4:	sub	x8, x29, #0x90
 4a8:	add	x8, x8, #0x18
 4ac:	cmp	x0, x8
 4b0:	b.eq	4b8 <LLVMCreateDisasmCPUFeatures+0x4b8>  // b.none
 4b4:	bl	0 <_ZdlPv>
 4b8:	sub	x0, x29, #0x30
 4bc:	bl	0 <LLVMCreateDisasmCPUFeatures>
 4c0:	ldur	x0, [x29, #-40]
 4c4:	cmp	x0, x20
 4c8:	b.eq	4d0 <LLVMCreateDisasmCPUFeatures+0x4d0>  // b.none
 4cc:	bl	0 <_ZdlPv>
 4d0:	mov	x0, x26
 4d4:	ldp	x20, x19, [sp, #464]
 4d8:	ldp	x22, x21, [sp, #448]
 4dc:	ldp	x24, x23, [sp, #432]
 4e0:	ldp	x26, x25, [sp, #416]
 4e4:	ldp	x28, x27, [sp, #400]
 4e8:	ldp	x29, x30, [sp, #384]
 4ec:	add	sp, sp, #0x1e0
 4f0:	ret

00000000000004f4 <LLVMCreateDisasmCPU>:
 4f4:	mov	x6, x5
 4f8:	mov	x5, x4
 4fc:	mov	w4, w3
 500:	mov	x3, x2
 504:	adrp	x2, 0 <LLVMCreateDisasmCPUFeatures>
 508:	add	x2, x2, #0x0
 50c:	b	0 <LLVMCreateDisasmCPUFeatures>

0000000000000510 <LLVMCreateDisasm>:
 510:	mov	x5, x3
 514:	mov	x3, x1
 518:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
 51c:	add	x1, x1, #0x0
 520:	mov	x6, x4
 524:	mov	w4, w2
 528:	mov	x2, x1
 52c:	b	0 <LLVMCreateDisasmCPUFeatures>

0000000000000530 <LLVMDisasmDispose>:
 530:	cbz	x0, 558 <LLVMDisasmDispose+0x28>
 534:	stp	x29, x30, [sp, #-32]!
 538:	str	x19, [sp, #16]
 53c:	mov	x29, sp
 540:	mov	x19, x0
 544:	bl	0 <LLVMCreateDisasmCPUFeatures>
 548:	mov	x0, x19
 54c:	ldr	x19, [sp, #16]
 550:	ldp	x29, x30, [sp], #32
 554:	b	0 <_ZdlPv>
 558:	ret

000000000000055c <LLVMDisasmInstruction>:
 55c:	str	d8, [sp, #-112]!
 560:	stp	x29, x30, [sp, #16]
 564:	stp	x28, x27, [sp, #32]
 568:	stp	x26, x25, [sp, #48]
 56c:	stp	x24, x23, [sp, #64]
 570:	stp	x22, x21, [sp, #80]
 574:	stp	x20, x19, [sp, #96]
 578:	mov	x29, sp
 57c:	sub	sp, sp, #0x2b0
 580:	adrp	x8, 0 <LLVMCreateDisasmCPUFeatures>
 584:	ldr	d0, [x8]
 588:	str	x5, [sp, #16]
 58c:	add	x19, sp, #0x158
 590:	stp	xzr, xzr, [sp, #344]
 594:	adrp	x23, 0 <_ZTVN4llvm19raw_svector_ostreamE>
 598:	adrp	x10, 0 <LLVMCreateDisasmCPUFeatures>
 59c:	ldr	x23, [x23]
 5a0:	add	x8, x19, #0x20
 5a4:	str	d0, [sp, #368]
 5a8:	ldr	d8, [x10]
 5ac:	str	x8, [sp, #360]
 5b0:	ldp	x26, x28, [x0, #112]
 5b4:	add	x9, sp, #0x108
 5b8:	mov	x27, x0
 5bc:	mov	w11, #0x1                   	// #1
 5c0:	add	x21, x9, #0x10
 5c4:	add	x8, x23, #0x10
 5c8:	add	x0, sp, #0xd8
 5cc:	mov	x20, x4
 5d0:	mov	x22, x3
 5d4:	mov	x24, x2
 5d8:	mov	x25, x1
 5dc:	stp	x9, x21, [sp, #256]
 5e0:	str	d8, [sp, #272]
 5e4:	str	w11, [sp, #248]
 5e8:	stp	xzr, xzr, [sp, #232]
 5ec:	stp	x8, xzr, [sp, #216]
 5f0:	bl	0 <LLVMCreateDisasmCPUFeatures>
 5f4:	ldr	x8, [x26]
 5f8:	add	x1, sp, #0x158
 5fc:	add	x2, x29, #0x8
 600:	add	x6, sp, #0xd8
 604:	ldr	x8, [x8, #16]
 608:	mov	x0, x26
 60c:	mov	x3, x25
 610:	mov	x4, x24
 614:	mov	x5, x22
 618:	blr	x8
 61c:	cmp	w0, #0x2
 620:	mov	x24, xzr
 624:	b.cc	824 <LLVMDisasmInstruction+0x2c8>  // b.lo, b.ul, b.last
 628:	mov	x26, x28
 62c:	ldr	x28, [sp, #16]
 630:	cmp	w0, #0x3
 634:	str	x21, [sp, #8]
 638:	b.ne	a30 <LLVMDisasmInstruction+0x4d4>  // b.any
 63c:	ldr	x8, [sp, #256]
 640:	add	x9, sp, #0x88
 644:	mov	w19, #0x1                   	// #1
 648:	add	x10, x9, #0x10
 64c:	ldr	x24, [x8]
 650:	ldr	w25, [x8, #8]
 654:	add	x8, x23, #0x10
 658:	add	x0, sp, #0x58
 65c:	stp	x9, x10, [sp, #128]
 660:	str	d8, [sp, #144]
 664:	str	w19, [sp, #120]
 668:	stp	xzr, xzr, [sp, #104]
 66c:	stp	x8, xzr, [sp, #88]
 670:	bl	0 <LLVMCreateDisasmCPUFeatures>
 674:	str	w19, [sp, #56]
 678:	stp	xzr, xzr, [sp, #40]
 67c:	adrp	x8, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
 680:	ldr	x8, [x8]
 684:	add	x0, sp, #0x18
 688:	add	x1, sp, #0x58
 68c:	stp	xzr, xzr, [sp, #64]
 690:	add	x8, x8, #0x10
 694:	stp	x8, xzr, [sp, #24]
 698:	bl	0 <LLVMCreateDisasmCPUFeatures>
 69c:	ldr	x8, [x26]
 6a0:	ldr	x5, [x27, #88]
 6a4:	mov	x0, x26
 6a8:	add	x1, sp, #0x158
 6ac:	ldr	x8, [x8, #24]
 6b0:	add	x6, sp, #0x18
 6b4:	mov	x2, x22
 6b8:	mov	x3, x24
 6bc:	mov	x4, x25
 6c0:	mov	x21, x27
 6c4:	blr	x8
 6c8:	ldrb	w8, [x27, #128]
 6cc:	tbnz	w8, #4, 87c <LLVMDisasmInstruction+0x320>
 6d0:	ldr	w22, [x21, #176]
 6d4:	add	x19, sp, #0x158
 6d8:	cbz	w22, 7ac <LLVMDisasmInstruction+0x250>
 6dc:	ldr	x8, [x21, #72]
 6e0:	ldr	x25, [x21, #168]
 6e4:	mov	w26, #0xa                   	// #10
 6e8:	mov	w27, #0x20                  	// #32
 6ec:	ldp	x23, x24, [x8, #48]
 6f0:	mov	w8, #0x1                   	// #1
 6f4:	tbnz	w8, #0, 720 <LLVMDisasmInstruction+0x1c4>
 6f8:	ldp	x9, x8, [sp, #40]
 6fc:	cmp	x8, x9
 700:	b.cs	714 <LLVMDisasmInstruction+0x1b8>  // b.hs, b.nlast
 704:	add	x9, x8, #0x1
 708:	str	x9, [sp, #48]
 70c:	strb	w26, [x8]
 710:	b	720 <LLVMDisasmInstruction+0x1c4>
 714:	add	x0, sp, #0x18
 718:	mov	w1, #0xa                   	// #10
 71c:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 720:	add	x0, sp, #0x18
 724:	mov	w1, #0x28                  	// #40
 728:	bl	0 <_ZN4llvm21formatted_raw_ostream11PadToColumnEj>
 72c:	mov	w1, #0xa                   	// #10
 730:	mov	x0, x25
 734:	mov	x2, x22
 738:	bl	0 <memchr>
 73c:	sub	x8, x0, x25
 740:	cmp	x0, #0x0
 744:	add	x0, sp, #0x18
 748:	mov	x1, x23
 74c:	mov	x2, x24
 750:	csinv	x19, x8, xzr, ne  // ne = any
 754:	bl	0 <LLVMCreateDisasmCPUFeatures>
 758:	ldp	x9, x8, [x0, #16]
 75c:	cmp	x8, x9
 760:	b.cs	774 <LLVMDisasmInstruction+0x218>  // b.hs, b.nlast
 764:	add	x9, x8, #0x1
 768:	str	x9, [x0, #24]
 76c:	strb	w27, [x8]
 770:	b	77c <LLVMDisasmInstruction+0x220>
 774:	mov	w1, #0x20                  	// #32
 778:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 77c:	cmp	x22, x19
 780:	csel	x2, x22, x19, cc  // cc = lo, ul, last
 784:	mov	x1, x25
 788:	bl	0 <LLVMCreateDisasmCPUFeatures>
 78c:	add	x9, x19, #0x1
 790:	cmp	x22, x9
 794:	csinc	x9, x22, x19, cc  // cc = lo, ul, last
 798:	mov	w8, wzr
 79c:	subs	x22, x22, x9
 7a0:	add	x25, x25, x9
 7a4:	add	x19, sp, #0x158
 7a8:	b.ne	6f4 <LLVMDisasmInstruction+0x198>  // b.any
 7ac:	ldr	x8, [sp, #48]
 7b0:	ldr	x9, [sp, #32]
 7b4:	cmp	x8, x9
 7b8:	b.eq	7c4 <LLVMDisasmInstruction+0x268>  // b.none
 7bc:	add	x0, sp, #0x18
 7c0:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
 7c4:	str	wzr, [x21, #176]
 7c8:	cbz	x28, a48 <LLVMDisasmInstruction+0x4ec>
 7cc:	ldr	w8, [sp, #144]
 7d0:	ldr	x1, [sp, #136]
 7d4:	sub	x9, x28, #0x1
 7d8:	mov	x21, x20
 7dc:	cmp	x9, x8
 7e0:	csel	x20, x8, x9, hi  // hi = pmore
 7e4:	mov	x0, x21
 7e8:	mov	x2, x20
 7ec:	bl	0 <memcpy>
 7f0:	strb	wzr, [x21, x20]
 7f4:	ldr	x24, [x29, #8]
 7f8:	add	x0, sp, #0x18
 7fc:	bl	0 <LLVMCreateDisasmCPUFeatures>
 800:	add	x0, sp, #0x58
 804:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
 808:	ldr	x0, [sp, #136]
 80c:	add	x8, sp, #0x88
 810:	add	x8, x8, #0x10
 814:	cmp	x0, x8
 818:	b.eq	820 <LLVMDisasmInstruction+0x2c4>  // b.none
 81c:	bl	0 <free>
 820:	ldr	x21, [sp, #8]
 824:	add	x0, sp, #0xd8
 828:	add	x19, x19, #0x10
 82c:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
 830:	ldr	x0, [sp, #264]
 834:	cmp	x0, x21
 838:	b.eq	840 <LLVMDisasmInstruction+0x2e4>  // b.none
 83c:	bl	0 <free>
 840:	ldr	x0, [sp, #360]
 844:	add	x8, x19, #0x10
 848:	cmp	x0, x8
 84c:	b.eq	854 <LLVMDisasmInstruction+0x2f8>  // b.none
 850:	bl	0 <free>
 854:	mov	x0, x24
 858:	add	sp, sp, #0x2b0
 85c:	ldp	x20, x19, [sp, #96]
 860:	ldp	x22, x21, [sp, #80]
 864:	ldp	x24, x23, [sp, #64]
 868:	ldp	x26, x25, [sp, #48]
 86c:	ldp	x28, x27, [sp, #32]
 870:	ldp	x29, x30, [sp, #16]
 874:	ldr	d8, [sp], #112
 878:	ret
 87c:	ldr	x22, [x21, #88]
 880:	sub	x0, x29, #0xb8
 884:	mov	w2, #0x48                  	// #72
 888:	ldr	x1, [x22, #152]
 88c:	bl	0 <memcpy>
 890:	ldur	x8, [x29, #-144]
 894:	cbz	x8, 908 <LLVMDisasmInstruction+0x3ac>
 898:	ldr	x9, [x21, #96]
 89c:	ldr	w8, [sp, #344]
 8a0:	ldr	w10, [x9, #24]
 8a4:	cmp	w10, w8
 8a8:	b.ls	a68 <LLVMDisasmInstruction+0x50c>  // b.plast
 8ac:	ldr	x9, [x9]
 8b0:	sub	x0, x29, #0xb8
 8b4:	add	x8, x9, x8, lsl #6
 8b8:	ldrh	w1, [x8, #6]
 8bc:	bl	0 <LLVMCreateDisasmCPUFeatures>
 8c0:	cbz	x0, 6d0 <LLVMDisasmInstruction+0x174>
 8c4:	ldrh	w8, [x0, #8]
 8c8:	mvn	w8, w8
 8cc:	tst	w8, #0x3ffe
 8d0:	b.eq	6d0 <LLVMDisasmInstruction+0x174>  // b.none
 8d4:	ldrh	w8, [x0, #16]
 8d8:	cbz	x8, 6d0 <LLVMDisasmInstruction+0x174>
 8dc:	ldr	x10, [x22, #136]
 8e0:	ldrh	w11, [x0, #14]
 8e4:	mov	w9, wzr
 8e8:	add	x10, x10, x11, lsl #2
 8ec:	ldrsh	w11, [x10], #4
 8f0:	cmp	w11, w9, sxth
 8f4:	csel	w9, w11, w9, gt
 8f8:	subs	x8, x8, #0x1
 8fc:	b.ne	8ec <LLVMDisasmInstruction+0x390>  // b.any
 900:	sxth	w22, w9
 904:	b	9a8 <LLVMDisasmInstruction+0x44c>
 908:	ldr	x2, [x21, #144]
 90c:	cbz	x2, 6d0 <LLVMDisasmInstruction+0x174>
 910:	ldr	x1, [x21, #136]
 914:	sub	x8, x29, #0x70
 918:	mov	x0, x22
 91c:	bl	0 <_ZNK4llvm15MCSubtargetInfo23getInstrItineraryForCPUENS_9StringRefE>
 920:	ldr	x11, [x21, #96]
 924:	ldr	w10, [sp, #344]
 928:	ldr	w8, [x11, #24]
 92c:	cmp	w8, w10
 930:	b.ls	a68 <LLVMDisasmInstruction+0x50c>  // b.plast
 934:	ldr	w8, [sp, #368]
 938:	cbz	w8, 9a4 <LLVMDisasmInstruction+0x448>
 93c:	ldr	x11, [x11]
 940:	mov	w13, #0xa                   	// #10
 944:	mov	w9, wzr
 948:	mov	w22, wzr
 94c:	add	x10, x11, x10, lsl #6
 950:	ldrh	w12, [x10, #6]
 954:	ldur	x10, [x29, #-16]
 958:	ldur	x11, [x29, #-32]
 95c:	madd	x13, x12, x13, x10
 960:	add	x12, x13, #0x6
 964:	add	x13, x13, #0x8
 968:	cbz	x10, 988 <LLVMDisasmInstruction+0x42c>
 96c:	ldrh	w14, [x12]
 970:	ldrh	w15, [x13]
 974:	add	w14, w9, w14
 978:	cmp	w14, w15
 97c:	b.cs	988 <LLVMDisasmInstruction+0x42c>  // b.hs, b.nlast
 980:	ldr	w14, [x11, w14, uxtw #2]
 984:	b	98c <LLVMDisasmInstruction+0x430>
 988:	mov	w14, #0xffffffff            	// #-1
 98c:	cmp	w22, w14
 990:	add	w9, w9, #0x1
 994:	csel	w22, w14, w22, lt  // lt = tstop
 998:	cmp	w8, w9
 99c:	b.ne	968 <LLVMDisasmInstruction+0x40c>  // b.any
 9a0:	b	9a8 <LLVMDisasmInstruction+0x44c>
 9a4:	mov	w22, wzr
 9a8:	cmp	w22, #0x2
 9ac:	b.lt	6d0 <LLVMDisasmInstruction+0x174>  // b.tstop
 9b0:	ldp	x9, x8, [x21, #328]
 9b4:	add	x0, x21, #0x138
 9b8:	sub	x9, x9, x8
 9bc:	cmp	x9, #0x8
 9c0:	b.hi	9d8 <LLVMDisasmInstruction+0x47c>  // b.pmore
 9c4:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
 9c8:	add	x1, x1, #0x0
 9cc:	mov	w2, #0x9                   	// #9
 9d0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
 9d4:	b	9fc <LLVMDisasmInstruction+0x4a0>
 9d8:	adrp	x9, 0 <LLVMCreateDisasmCPUFeatures>
 9dc:	add	x9, x9, #0x0
 9e0:	ldr	x9, [x9]
 9e4:	mov	w10, #0x20                  	// #32
 9e8:	strb	w10, [x8, #8]
 9ec:	str	x9, [x8]
 9f0:	ldr	x8, [x21, #336]
 9f4:	add	x8, x8, #0x9
 9f8:	str	x8, [x21, #336]
 9fc:	mov	w1, w22
 a00:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
 a04:	ldp	x9, x8, [x0, #16]
 a08:	cmp	x8, x9
 a0c:	b.cs	a24 <LLVMDisasmInstruction+0x4c8>  // b.hs, b.nlast
 a10:	add	x9, x8, #0x1
 a14:	mov	w10, #0xa                   	// #10
 a18:	str	x9, [x0, #24]
 a1c:	strb	w10, [x8]
 a20:	b	6d0 <LLVMDisasmInstruction+0x174>
 a24:	mov	w1, #0xa                   	// #10
 a28:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
 a2c:	b	6d0 <LLVMDisasmInstruction+0x174>
 a30:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
 a34:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
 a38:	add	x0, x0, #0x0
 a3c:	add	x1, x1, #0x0
 a40:	mov	w2, #0x127                 	// #295
 a44:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
 a48:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
 a4c:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
 a50:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
 a54:	add	x0, x0, #0x0
 a58:	add	x1, x1, #0x0
 a5c:	add	x3, x3, #0x0
 a60:	mov	w2, #0x11f                 	// #287
 a64:	bl	0 <__assert_fail>
 a68:	adrp	x0, 0 <LLVMCreateDisasmCPUFeatures>
 a6c:	adrp	x1, 0 <LLVMCreateDisasmCPUFeatures>
 a70:	adrp	x3, 0 <LLVMCreateDisasmCPUFeatures>
 a74:	add	x0, x0, #0x0
 a78:	add	x1, x1, #0x0
 a7c:	add	x3, x3, #0x0
 a80:	mov	w2, #0x2d                  	// #45
 a84:	bl	0 <__assert_fail>

0000000000000a88 <LLVMSetDisasmOptions>:
 a88:	sub	sp, sp, #0xa0
 a8c:	stp	x29, x30, [sp, #80]
 a90:	stp	x26, x25, [sp, #96]
 a94:	stp	x24, x23, [sp, #112]
 a98:	stp	x22, x21, [sp, #128]
 a9c:	stp	x20, x19, [sp, #144]
 aa0:	add	x29, sp, #0x50
 aa4:	mov	x19, x1
 aa8:	mov	x20, x0
 aac:	tbnz	w19, #0, abc <LLVMSetDisasmOptions+0x34>
 ab0:	tbnz	w19, #1, adc <LLVMSetDisasmOptions+0x54>
 ab4:	tbnz	w19, #2, afc <LLVMSetDisasmOptions+0x74>
 ab8:	b	b98 <LLVMSetDisasmOptions+0x110>
 abc:	ldr	x8, [x20, #120]
 ac0:	mov	w9, #0x1                   	// #1
 ac4:	and	x19, x19, #0xfffffffffffffffe
 ac8:	strb	w9, [x8, #40]
 acc:	ldr	x8, [x20, #128]
 ad0:	orr	x8, x8, #0x1
 ad4:	str	x8, [x20, #128]
 ad8:	tbz	w19, #1, ab4 <LLVMSetDisasmOptions+0x2c>
 adc:	ldr	x8, [x20, #120]
 ae0:	mov	w9, #0x1                   	// #1
 ae4:	and	x19, x19, #0xfffffffffffffffd
 ae8:	strb	w9, [x8, #41]
 aec:	ldr	x8, [x20, #128]
 af0:	orr	x8, x8, #0x2
 af4:	str	x8, [x20, #128]
 af8:	tbz	w19, #2, b98 <LLVMSetDisasmOptions+0x110>
 afc:	ldp	x21, x23, [x20, #72]
 b00:	ldr	x22, [x20, #96]
 b04:	ldr	x26, [x20, #64]
 b08:	mov	x0, sp
 b0c:	ldr	w25, [x21, #168]
 b10:	mov	x1, x20
 b14:	bl	0 <LLVMCreateDisasmCPUFeatures>
 b18:	add	x0, sp, #0x18
 b1c:	mov	x1, sp
 b20:	add	x24, sp, #0x18
 b24:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
 b28:	ldr	x8, [x26, #128]
 b2c:	cbz	x8, b54 <LLVMSetDisasmOptions+0xcc>
 b30:	cmp	w25, #0x0
 b34:	cset	w1, eq  // eq = none
 b38:	add	x0, sp, #0x18
 b3c:	mov	x2, x21
 b40:	mov	x3, x22
 b44:	mov	x4, x23
 b48:	blr	x8
 b4c:	mov	x21, x0
 b50:	b	b58 <LLVMSetDisasmOptions+0xd0>
 b54:	mov	x21, xzr
 b58:	ldr	x0, [sp, #24]
 b5c:	add	x8, x24, #0x10
 b60:	cmp	x0, x8
 b64:	b.eq	b6c <LLVMSetDisasmOptions+0xe4>  // b.none
 b68:	bl	0 <_ZdlPv>
 b6c:	cbz	x21, b98 <LLVMSetDisasmOptions+0x110>
 b70:	ldr	x0, [x20, #120]
 b74:	str	x21, [x20, #120]
 b78:	cbz	x0, b88 <LLVMSetDisasmOptions+0x100>
 b7c:	ldr	x8, [x0]
 b80:	ldr	x8, [x8, #8]
 b84:	blr	x8
 b88:	ldr	x8, [x20, #128]
 b8c:	and	x19, x19, #0xfffffffffffffffb
 b90:	orr	x8, x8, #0x4
 b94:	str	x8, [x20, #128]
 b98:	tbz	w19, #3, bb8 <LLVMSetDisasmOptions+0x130>
 b9c:	ldr	x8, [x20, #120]
 ba0:	add	x9, x20, #0x138
 ba4:	and	x19, x19, #0xfffffffffffffff7
 ba8:	str	x9, [x8, #8]
 bac:	ldr	x8, [x20, #128]
 bb0:	orr	x8, x8, #0x8
 bb4:	str	x8, [x20, #128]
 bb8:	tbz	w19, #4, bcc <LLVMSetDisasmOptions+0x144>
 bbc:	ldr	x8, [x20, #128]
 bc0:	and	x19, x19, #0xffffffffffffffef
 bc4:	orr	x8, x8, #0x10
 bc8:	str	x8, [x20, #128]
 bcc:	cmp	x19, #0x0
 bd0:	ldp	x20, x19, [sp, #144]
 bd4:	ldp	x22, x21, [sp, #128]
 bd8:	ldp	x24, x23, [sp, #112]
 bdc:	ldp	x26, x25, [sp, #96]
 be0:	ldp	x29, x30, [sp, #80]
 be4:	cset	w0, eq  // eq = none
 be8:	add	sp, sp, #0xa0
 bec:	ret

Disassembly of section .text._ZNK4llvm6Target15createMCRegInfoENS_9StringRefE:

0000000000000000 <_ZNK4llvm6Target15createMCRegInfoENS_9StringRefE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x20, x19, [sp, #112]
   c:	add	x29, sp, #0x60
  10:	stp	x1, x2, [x29, #-16]
  14:	ldr	x19, [x0, #72]
  18:	cbz	x19, 5c <_ZNK4llvm6Target15createMCRegInfoENS_9StringRefE+0x5c>
  1c:	mov	x0, sp
  20:	sub	x1, x29, #0x10
  24:	bl	0 <_ZNK4llvm6Target15createMCRegInfoENS_9StringRefE>
  28:	add	x0, sp, #0x18
  2c:	mov	x1, sp
  30:	add	x20, sp, #0x18
  34:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  38:	add	x0, sp, #0x18
  3c:	blr	x19
  40:	ldr	x8, [sp, #24]
  44:	add	x9, x20, #0x10
  48:	mov	x19, x0
  4c:	cmp	x8, x9
  50:	b.eq	5c <_ZNK4llvm6Target15createMCRegInfoENS_9StringRefE+0x5c>  // b.none
  54:	mov	x0, x8
  58:	bl	0 <_ZdlPv>
  5c:	mov	x0, x19
  60:	ldp	x20, x19, [sp, #112]
  64:	ldp	x29, x30, [sp, #96]
  68:	add	sp, sp, #0x80
  6c:	ret

Disassembly of section .text._ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE:

0000000000000000 <_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x22, x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	stp	x2, x3, [x29, #-16]
  18:	ldr	x21, [x0, #48]
  1c:	cbz	x21, 74 <_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE+0x74>
  20:	mov	x20, x1
  24:	mov	x0, sp
  28:	sub	x1, x29, #0x10
  2c:	mov	x19, x4
  30:	bl	0 <_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE>
  34:	add	x0, sp, #0x18
  38:	mov	x1, sp
  3c:	add	x22, sp, #0x18
  40:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  44:	add	x1, sp, #0x18
  48:	mov	x0, x20
  4c:	mov	x2, x19
  50:	blr	x21
  54:	ldr	x8, [sp, #24]
  58:	add	x9, x22, #0x10
  5c:	mov	x19, x0
  60:	cmp	x8, x9
  64:	b.eq	78 <_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE+0x78>  // b.none
  68:	mov	x0, x8
  6c:	bl	0 <_ZdlPv>
  70:	b	78 <_ZNK4llvm6Target15createMCAsmInfoERKNS_14MCRegisterInfoENS_9StringRefERKNS_15MCTargetOptionsE+0x78>
  74:	mov	x19, xzr
  78:	mov	x0, x19
  7c:	ldp	x20, x19, [sp, #128]
  80:	ldp	x22, x21, [sp, #112]
  84:	ldp	x29, x30, [sp, #96]
  88:	add	sp, sp, #0x90
  8c:	ret

Disassembly of section .text._ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_:

0000000000000000 <_ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_>:
   0:	sub	sp, sp, #0xa0
   4:	stp	x29, x30, [sp, #96]
   8:	stp	x24, x23, [sp, #112]
   c:	stp	x22, x21, [sp, #128]
  10:	stp	x20, x19, [sp, #144]
  14:	add	x29, sp, #0x60
  18:	stp	x1, x2, [x29, #-16]
  1c:	ldr	x23, [x0, #80]
  20:	cbz	x23, 88 <_ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_+0x88>
  24:	mov	x0, sp
  28:	sub	x1, x29, #0x10
  2c:	mov	x19, x6
  30:	mov	x20, x5
  34:	mov	x21, x4
  38:	mov	x22, x3
  3c:	bl	0 <_ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_>
  40:	add	x0, sp, #0x18
  44:	mov	x1, sp
  48:	add	x24, sp, #0x18
  4c:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  50:	add	x0, sp, #0x18
  54:	mov	x1, x22
  58:	mov	x2, x21
  5c:	mov	x3, x20
  60:	mov	x4, x19
  64:	blr	x23
  68:	ldr	x8, [sp, #24]
  6c:	add	x9, x24, #0x10
  70:	mov	x19, x0
  74:	cmp	x8, x9
  78:	b.eq	8c <_ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_+0x8c>  // b.none
  7c:	mov	x0, x8
  80:	bl	0 <_ZdlPv>
  84:	b	8c <_ZNK4llvm6Target21createMCSubtargetInfoENS_9StringRefES1_S1_+0x8c>
  88:	mov	x19, xzr
  8c:	mov	x0, x19
  90:	ldp	x20, x19, [sp, #144]
  94:	ldp	x22, x21, [sp, #128]
  98:	ldp	x24, x23, [sp, #112]
  9c:	ldp	x29, x30, [sp, #96]
  a0:	add	sp, sp, #0xa0
  a4:	ret

Disassembly of section .text._ZNK4llvm6Target22createMCRelocationInfoENS_9StringRefERNS_9MCContextE:

0000000000000000 <_ZNK4llvm6Target22createMCRelocationInfoENS_9StringRefERNS_9MCContextE>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #96]
   8:	str	x21, [sp, #112]
   c:	stp	x20, x19, [sp, #128]
  10:	add	x29, sp, #0x60
  14:	stp	x1, x2, [x29, #-16]
  18:	ldr	x8, [x0, #200]
  1c:	adrp	x9, 0 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>
  20:	ldr	x9, [x9]
  24:	mov	x0, sp
  28:	cmp	x8, #0x0
  2c:	sub	x1, x29, #0x10
  30:	mov	x19, x3
  34:	csel	x20, x9, x8, eq  // eq = none
  38:	bl	0 <_ZNK4llvm6Target22createMCRelocationInfoENS_9StringRefERNS_9MCContextE>
  3c:	add	x0, sp, #0x18
  40:	mov	x1, sp
  44:	add	x21, sp, #0x18
  48:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  4c:	add	x0, sp, #0x18
  50:	mov	x1, x19
  54:	blr	x20
  58:	ldr	x8, [sp, #24]
  5c:	add	x9, x21, #0x10
  60:	mov	x19, x0
  64:	cmp	x8, x9
  68:	b.eq	74 <_ZNK4llvm6Target22createMCRelocationInfoENS_9StringRefERNS_9MCContextE+0x74>  // b.none
  6c:	mov	x0, x8
  70:	bl	0 <_ZdlPv>
  74:	mov	x0, x19
  78:	ldp	x20, x19, [sp, #128]
  7c:	ldr	x21, [sp, #112]
  80:	ldp	x29, x30, [sp, #96]
  84:	add	sp, sp, #0x90
  88:	ret

Disassembly of section .text._ZNK4llvm6Target18createMCSymbolizerENS_9StringRefEPFiPvmmmiS2_EPFPKcS2_mPmmPS6_ES2_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISE_EE:

0000000000000000 <_ZNK4llvm6Target18createMCSymbolizerENS_9StringRefEPFiPvmmmiS2_EPFPKcS2_mPmmPS6_ES2_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISE_EE>:
   0:	sub	sp, sp, #0xb0
   4:	stp	x29, x30, [sp, #96]
   8:	str	x25, [sp, #112]
   c:	stp	x24, x23, [sp, #128]
  10:	stp	x22, x21, [sp, #144]
  14:	stp	x20, x19, [sp, #160]
  18:	add	x29, sp, #0x60
  1c:	stp	x1, x2, [x29, #-16]
  20:	ldr	x8, [x0, #208]
  24:	adrp	x9, 0 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>
  28:	ldr	x9, [x9]
  2c:	mov	x0, sp
  30:	cmp	x8, #0x0
  34:	sub	x1, x29, #0x10
  38:	mov	x19, x7
  3c:	mov	x20, x6
  40:	mov	x21, x5
  44:	mov	x22, x4
  48:	mov	x23, x3
  4c:	csel	x24, x9, x8, eq  // eq = none
  50:	bl	0 <_ZNK4llvm6Target18createMCSymbolizerENS_9StringRefEPFiPvmmmiS2_EPFPKcS2_mPmmPS6_ES2_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISE_EE>
  54:	add	x0, sp, #0x18
  58:	mov	x1, sp
  5c:	add	x25, sp, #0x18
  60:	bl	0 <_ZN4llvm6TripleC1ERKNS_5TwineE>
  64:	add	x0, sp, #0x18
  68:	mov	x1, x23
  6c:	mov	x2, x22
  70:	mov	x3, x21
  74:	mov	x4, x20
  78:	mov	x5, x19
  7c:	blr	x24
  80:	ldr	x8, [sp, #24]
  84:	add	x9, x25, #0x10
  88:	mov	x19, x0
  8c:	cmp	x8, x9
  90:	b.eq	9c <_ZNK4llvm6Target18createMCSymbolizerENS_9StringRefEPFiPvmmmiS2_EPFPKcS2_mPmmPS6_ES2_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISE_EE+0x9c>  // b.none
  94:	mov	x0, x8
  98:	bl	0 <_ZdlPv>
  9c:	mov	x0, x19
  a0:	ldp	x20, x19, [sp, #160]
  a4:	ldp	x22, x21, [sp, #144]
  a8:	ldp	x24, x23, [sp, #128]
  ac:	ldr	x25, [sp, #112]
  b0:	ldp	x29, x30, [sp, #96]
  b4:	add	sp, sp, #0xb0
  b8:	ret

Disassembly of section .text._ZN4llvm5TwineC2EPKc:

0000000000000000 <_ZN4llvm5TwineC2EPKc>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x101                 	// #257
   c:	stp	xzr, xzr, [x0]
  10:	strh	w8, [x0, #16]
  14:	ldrb	w8, [x1]
  18:	cbz	w8, 28 <_ZN4llvm5TwineC2EPKc+0x28>
  1c:	mov	w8, #0x3                   	// #3
  20:	str	x1, [x0]
  24:	b	2c <_ZN4llvm5TwineC2EPKc+0x2c>
  28:	mov	w8, #0x1                   	// #1
  2c:	strb	w8, [x0, #16]
  30:	bl	0 <_ZN4llvm5TwineC2EPKc>
  34:	tbz	w0, #0, 40 <_ZN4llvm5TwineC2EPKc+0x40>
  38:	ldp	x29, x30, [sp], #16
  3c:	ret
  40:	adrp	x0, 0 <_ZN4llvm5TwineC2EPKc>
  44:	adrp	x1, 0 <_ZN4llvm5TwineC2EPKc>
  48:	adrp	x3, 0 <_ZN4llvm5TwineC2EPKc>
  4c:	add	x0, x0, #0x0
  50:	add	x1, x1, #0x0
  54:	add	x3, x3, #0x0
  58:	mov	w2, #0x112                 	// #274
  5c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE:

0000000000000000 <_ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE>:
   0:	add	x15, x0, #0x10
   4:	ldp	x9, x8, [sp, #32]
   8:	ldp	x11, x10, [sp, #16]
   c:	ldp	x13, x12, [sp]
  10:	str	x15, [x0]
  14:	mov	x14, x1
  18:	ldr	x16, [x14], #16
  1c:	cmp	x16, x14
  20:	b.eq	34 <_ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE+0x34>  // b.none
  24:	str	x16, [x0]
  28:	ldr	x15, [x1, #16]
  2c:	str	x15, [x0, #16]
  30:	b	3c <_ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE+0x3c>
  34:	ldr	q0, [x16]
  38:	str	q0, [x15]
  3c:	ldr	x15, [x1, #8]
  40:	str	x15, [x0, #8]
  44:	stp	x14, xzr, [x1]
  48:	strb	wzr, [x1, #16]
  4c:	str	x2, [x0, #32]
  50:	str	w3, [x0, #40]
  54:	stp	x4, x5, [x0, #48]
  58:	str	x6, [x0, #64]
  5c:	ldr	x14, [x7]
  60:	str	xzr, [x7]
  64:	str	x14, [x0, #72]
  68:	ldr	x14, [x13]
  6c:	str	xzr, [x13]
  70:	str	x14, [x0, #80]
  74:	ldr	x13, [x12]
  78:	str	xzr, [x12]
  7c:	mov	w14, #0x1                   	// #1
  80:	str	x13, [x0, #88]
  84:	ldr	x12, [x11]
  88:	str	xzr, [x11]
  8c:	add	x13, x0, #0xb8
  90:	str	x12, [x0, #96]
  94:	ldr	x11, [x10]
  98:	str	xzr, [x10]
  9c:	adrp	x12, 0 <_ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE>
  a0:	ldr	d0, [x12]
  a4:	str	x11, [x0, #104]
  a8:	ldr	x10, [x9]
  ac:	adrp	x11, 0 <_ZTVN4llvm19raw_svector_ostreamE>
  b0:	ldr	x11, [x11]
  b4:	str	xzr, [x9]
  b8:	str	x10, [x0, #112]
  bc:	ldr	x9, [x8]
  c0:	str	xzr, [x8]
  c4:	str	x13, [x0, #168]!
  c8:	add	x10, x11, #0x10
  cc:	mov	x11, x0
  d0:	add	x8, x0, #0x90
  d4:	stp	x9, xzr, [x0, #-48]
  d8:	strb	wzr, [x11, #-16]!
  dc:	str	d0, [x0, #8]
  e0:	str	w14, [x0, #176]
  e4:	stp	xzr, xzr, [x0, #160]
  e8:	stp	x10, xzr, [x0, #144]
  ec:	stp	x11, xzr, [x0, #-32]
  f0:	str	x0, [x0, #184]
  f4:	mov	x0, x8
  f8:	b	0 <_ZN4llvm17LLVMDisasmContextC2ENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPviPFiS7_mmmiS7_EPFPKcS7_mPmmPSB_EPKNS_6TargetEOSt10unique_ptrIKNS_9MCAsmInfoESt14default_deleteISL_EEOSJ_IKNS_14MCRegisterInfoESM_ISR_EEOSJ_IKNS_15MCSubtargetInfoESM_ISW_EEOSJ_IKNS_11MCInstrInfoESM_IS11_EEOSJ_IKNS_9MCContextESM_IS16_EEOSJ_IKNS_14MCDisassemblerESM_IS1B_EEOSJ_INS_13MCInstPrinterESM_IS1F_EE>

Disassembly of section .text._ZNSt10unique_ptrIKN4llvm9MCContextESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIKN4llvm9MCContextESt14default_deleteIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 28 <_ZNSt10unique_ptrIKN4llvm9MCContextESt14default_deleteIS2_EED2Ev+0x28>
  18:	mov	x0, x20
  1c:	bl	0 <_ZN4llvm9MCContextD1Ev>
  20:	mov	x0, x20
  24:	bl	0 <_ZdlPv>
  28:	str	xzr, [x19]
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev:

0000000000000000 <_ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x20, [x0]
  10:	mov	x19, x0
  14:	cbz	x20, 3c <_ZNSt10unique_ptrIKN4llvm14MCRegisterInfoESt14default_deleteIS2_EED2Ev+0x3c>
  18:	ldr	x0, [x20, #200]
  1c:	bl	0 <_ZdlPv>
  20:	ldr	x8, [x20, #192]
  24:	ldr	x0, [x20, #168]
  28:	add	x8, x8, #0x1
  2c:	str	x8, [x20, #192]
  30:	bl	0 <_ZdlPv>
  34:	mov	x0, x20
  38:	bl	0 <_ZdlPv>
  3c:	str	xzr, [x19]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret

Disassembly of section .text._ZN4llvm17LLVMDisasmContextD2Ev:

0000000000000000 <_ZN4llvm17LLVMDisasmContextD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	add	x0, x0, #0x138
  14:	bl	0 <_ZN4llvm11raw_ostreamD2Ev>
  18:	ldr	x0, [x19, #168]
  1c:	add	x8, x19, #0xb8
  20:	cmp	x0, x8
  24:	b.eq	2c <_ZN4llvm17LLVMDisasmContextD2Ev+0x2c>  // b.none
  28:	bl	0 <free>
  2c:	ldr	x0, [x19, #136]
  30:	add	x8, x19, #0x98
  34:	cmp	x0, x8
  38:	b.eq	40 <_ZN4llvm17LLVMDisasmContextD2Ev+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x0, [x19, #120]
  44:	cbz	x0, 54 <_ZN4llvm17LLVMDisasmContextD2Ev+0x54>
  48:	ldr	x8, [x0]
  4c:	ldr	x8, [x8, #8]
  50:	blr	x8
  54:	ldr	x0, [x19, #112]
  58:	str	xzr, [x19, #120]
  5c:	cbz	x0, 6c <_ZN4llvm17LLVMDisasmContextD2Ev+0x6c>
  60:	ldr	x8, [x0]
  64:	ldr	x8, [x8, #8]
  68:	blr	x8
  6c:	add	x0, x19, #0x68
  70:	str	xzr, [x19, #112]
  74:	bl	0 <_ZN4llvm17LLVMDisasmContextD2Ev>
  78:	ldr	x0, [x19, #96]
  7c:	cbz	x0, 84 <_ZN4llvm17LLVMDisasmContextD2Ev+0x84>
  80:	bl	0 <_ZdlPv>
  84:	ldr	x0, [x19, #88]
  88:	str	xzr, [x19, #96]
  8c:	cbz	x0, 9c <_ZN4llvm17LLVMDisasmContextD2Ev+0x9c>
  90:	ldr	x8, [x0]
  94:	ldr	x8, [x8, #8]
  98:	blr	x8
  9c:	add	x0, x19, #0x50
  a0:	str	xzr, [x19, #88]
  a4:	bl	0 <_ZN4llvm17LLVMDisasmContextD2Ev>
  a8:	ldr	x0, [x19, #72]
  ac:	cbz	x0, bc <_ZN4llvm17LLVMDisasmContextD2Ev+0xbc>
  b0:	ldr	x8, [x0]
  b4:	ldr	x8, [x8, #8]
  b8:	blr	x8
  bc:	ldr	x0, [x19]
  c0:	add	x8, x19, #0x10
  c4:	str	xzr, [x19, #72]
  c8:	cmp	x0, x8
  cc:	b.eq	dc <_ZN4llvm17LLVMDisasmContextD2Ev+0xdc>  // b.none
  d0:	ldr	x19, [sp, #16]
  d4:	ldp	x29, x30, [sp], #32
  d8:	b	0 <_ZdlPv>
  dc:	ldr	x19, [sp, #16]
  e0:	ldp	x29, x30, [sp], #32
  e4:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostreamD2Ev:

0000000000000000 <_ZN4llvm21formatted_raw_ostreamD2Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x10, 0 <_ZTVN4llvm21formatted_raw_ostreamE>
  10:	ldr	x8, [x0, #24]
  14:	ldr	x9, [x0, #8]
  18:	ldr	x10, [x10]
  1c:	mov	x19, x0
  20:	cmp	x8, x9
  24:	add	x10, x10, #0x10
  28:	str	x10, [x0]
  2c:	b.eq	38 <_ZN4llvm21formatted_raw_ostreamD2Ev+0x38>  // b.none
  30:	mov	x0, x19
  34:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  38:	mov	x0, x19
  3c:	bl	0 <_ZN4llvm21formatted_raw_ostreamD2Ev>
  40:	mov	x0, x19
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZN4llvm11raw_ostreamD2Ev>

Disassembly of section .text._ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:

0000000000000000 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x104                 	// #260
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x11b                 	// #283
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	ldp	x19, x21, [x0]
  14:	cmp	x19, x21
  18:	b.eq	40 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x40>  // b.none
  1c:	mov	x20, x0
  20:	ldr	x0, [x19], #16
  24:	cmp	x0, x19
  28:	b.eq	30 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x30>  // b.none
  2c:	bl	0 <_ZdlPv>
  30:	add	x19, x19, #0x10
  34:	cmp	x19, x21
  38:	b.ne	20 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x20>  // b.any
  3c:	ldr	x19, [x20]
  40:	cbz	x19, 58 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev+0x58>
  44:	mov	x0, x19
  48:	ldp	x20, x19, [sp, #32]
  4c:	ldr	x21, [sp, #16]
  50:	ldp	x29, x30, [sp], #48
  54:	b	0 <_ZdlPv>
  58:	ldp	x20, x19, [sp, #32]
  5c:	ldr	x21, [sp, #16]
  60:	ldp	x29, x30, [sp], #48
  64:	ret

Disassembly of section .text._ZN4llvm11raw_ostream13SetUnbufferedEv:

0000000000000000 <_ZN4llvm11raw_ostream13SetUnbufferedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm11raw_ostream13SetUnbufferedEv+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	mov	x0, x19
  2c:	ldr	x19, [sp, #16]
  30:	mov	x1, xzr
  34:	mov	x2, xzr
  38:	mov	w3, wzr
  3c:	ldp	x29, x30, [sp], #32
  40:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>

Disassembly of section .text._ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE:

0000000000000000 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x1
  10:	mov	x19, x0
  14:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  18:	str	x20, [x19, #40]
  1c:	ldr	w8, [x20, #32]
  20:	cbz	w8, 44 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x44>
  24:	ldr	x8, [x20, #8]
  28:	cbnz	x8, 48 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x48>
  2c:	ldr	x8, [x20]
  30:	mov	x0, x20
  34:	ldr	x8, [x8, #80]
  38:	blr	x8
  3c:	mov	x1, x0
  40:	b	50 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x50>
  44:	ldr	x8, [x20, #8]
  48:	ldr	x9, [x20, #16]
  4c:	sub	x1, x9, x8
  50:	mov	x0, x19
  54:	cbz	x1, 60 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x60>
  58:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  5c:	b	64 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE+0x64>
  60:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  64:	ldr	x0, [x19, #40]
  68:	bl	0 <_ZN4llvm21formatted_raw_ostream9setStreamERNS_11raw_ostreamE>
  6c:	str	xzr, [x19, #56]
  70:	ldp	x20, x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	ret

Disassembly of section .text._ZN4llvm21formatted_raw_ostream13releaseStreamEv:

0000000000000000 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #40]
  10:	cbz	x8, 44 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x44>
  14:	ldr	w9, [x0, #32]
  18:	mov	x19, x0
  1c:	cbz	w9, 50 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x50>
  20:	ldr	x9, [x19, #8]
  24:	cbnz	x9, 54 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x54>
  28:	ldr	x8, [x19]
  2c:	mov	x0, x19
  30:	ldr	x8, [x8, #80]
  34:	blr	x8
  38:	ldr	x8, [x19, #40]
  3c:	mov	x1, x0
  40:	b	5c <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x5c>
  44:	ldr	x19, [sp, #16]
  48:	ldp	x29, x30, [sp], #32
  4c:	ret
  50:	ldr	x9, [x19, #8]
  54:	ldr	x10, [x19, #16]
  58:	sub	x1, x10, x9
  5c:	mov	x0, x8
  60:	cbz	x1, 70 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv+0x70>
  64:	ldr	x19, [sp, #16]
  68:	ldp	x29, x30, [sp], #32
  6c:	b	0 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv>
  70:	ldr	x19, [sp, #16]
  74:	ldp	x29, x30, [sp], #32
  78:	b	0 <_ZN4llvm21formatted_raw_ostream13releaseStreamEv>

Disassembly of section .text._ZN4llvm11raw_ostream13SetBufferSizeEm:

0000000000000000 <_ZN4llvm11raw_ostream13SetBufferSizeEm>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	mov	x20, x1
  1c:	cmp	x8, x9
  20:	b.eq	2c <_ZN4llvm11raw_ostream13SetBufferSizeEm+0x2c>  // b.none
  24:	mov	x0, x19
  28:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  2c:	mov	x0, x20
  30:	bl	0 <_Znam>
  34:	mov	x1, x0
  38:	mov	x0, x19
  3c:	mov	x2, x20
  40:	ldp	x20, x19, [sp, #16]
  44:	mov	w3, #0x1                   	// #1
  48:	ldp	x29, x30, [sp], #32
  4c:	b	0 <_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE>

Disassembly of section .text._ZNK4llvm12MCSchedModel17getSchedClassDescEj:

0000000000000000 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x8, [x0, #40]
   c:	cbz	x8, 2c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x2c>
  10:	ldr	w9, [x0, #52]
  14:	cmp	w9, w1
  18:	b.ls	4c <_ZNK4llvm12MCSchedModel17getSchedClassDescEj+0x4c>  // b.plast
  1c:	mov	w9, #0x18                  	// #24
  20:	umaddl	x0, w1, w9, x8
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  30:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  34:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  38:	add	x0, x0, #0x0
  3c:	add	x1, x1, #0x0
  40:	add	x3, x3, #0x0
  44:	mov	w2, #0x15b                 	// #347
  48:	bl	0 <__assert_fail>
  4c:	adrp	x0, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  50:	adrp	x1, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  54:	adrp	x3, 0 <_ZNK4llvm12MCSchedModel17getSchedClassDescEj>
  58:	add	x0, x0, #0x0
  5c:	add	x1, x1, #0x0
  60:	add	x3, x3, #0x0
  64:	mov	w2, #0x15d                 	// #349
  68:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

MCDisassembler.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm14MCDisassemblerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm14MCDisassemblerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #24]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm14MCDisassemblerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #24]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm14MCDisassemblerD0Ev>:
  44:	brk	#0x1

0000000000000048 <_ZNK4llvm14MCDisassembler13onSymbolStartENS_9StringRefERmNS_8ArrayRefIhEEmRNS_11raw_ostreamE>:
  48:	mov	w0, #0x3                   	// #3
  4c:	str	xzr, [x3]
  50:	ret

0000000000000054 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm>:
  54:	mov	x9, x0
  58:	ldr	x0, [x0, #24]
  5c:	cbz	x0, 88 <_ZNK4llvm14MCDisassembler24tryAddingSymbolicOperandERNS_6MCInstElmbmm+0x34>
  60:	ldr	x10, [x0]
  64:	mov	x8, x3
  68:	mov	x3, x2
  6c:	ldr	x2, [x9, #32]
  70:	ldr	x9, [x10, #16]
  74:	mov	x7, x6
  78:	mov	x6, x5
  7c:	and	w5, w4, #0x1
  80:	mov	x4, x8
  84:	br	x9
  88:	ret

000000000000008c <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm>:
  8c:	mov	x8, x0
  90:	ldr	x0, [x0, #24]
  94:	cbz	x0, b0 <_ZNK4llvm14MCDisassembler31tryAddingPcLoadReferenceCommentElm+0x24>
  98:	ldr	x9, [x0]
  9c:	mov	x3, x2
  a0:	mov	x2, x1
  a4:	ldr	x1, [x8, #32]
  a8:	ldr	x4, [x9, #24]
  ac:	br	x4
  b0:	ret

00000000000000b4 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE>:
  b4:	ldr	x9, [x1]
  b8:	str	xzr, [x1]
  bc:	mov	x8, x0
  c0:	ldr	x0, [x0, #24]
  c4:	str	x9, [x8, #24]
  c8:	cbz	x0, d8 <_ZN4llvm14MCDisassembler13setSymbolizerESt10unique_ptrINS_12MCSymbolizerESt14default_deleteIS2_EE+0x24>
  cc:	ldr	x8, [x0]
  d0:	ldr	x1, [x8, #8]
  d4:	br	x1
  d8:	ret

MCExternalSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>:
   0:	sub	sp, sp, #0xc0
   4:	stp	x29, x30, [sp, #112]
   8:	str	x25, [sp, #128]
   c:	stp	x24, x23, [sp, #144]
  10:	stp	x22, x21, [sp, #160]
  14:	stp	x20, x19, [sp, #176]
  18:	add	x29, sp, #0x70
  1c:	movi	v0.2d, #0x0
  20:	stp	q0, q0, [sp, #80]
  24:	stp	q0, q0, [sp, #48]
  28:	str	x3, [sp, #96]
  2c:	ldr	x8, [x0, #24]
  30:	mov	x25, x7
  34:	mov	w21, w5
  38:	mov	x23, x4
  3c:	mov	x24, x3
  40:	mov	x22, x2
  44:	mov	x20, x0
  48:	mov	x19, x1
  4c:	cbz	x8, c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc0>
  50:	ldr	x0, [x20, #40]
  54:	add	x5, sp, #0x30
  58:	mov	w4, #0x1                   	// #1
  5c:	mov	x1, x23
  60:	mov	x2, x6
  64:	mov	x3, x25
  68:	blr	x8
  6c:	movi	v0.2d, #0x0
  70:	cbz	w0, c0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0xc0>
  74:	ldr	x8, [sp, #48]
  78:	cbz	x8, 134 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x134>
  7c:	ldr	x0, [sp, #56]
  80:	cbz	x0, 13c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x13c>
  84:	str	x0, [sp, #32]
  88:	bl	0 <strlen>
  8c:	str	x0, [sp, #40]
  90:	ldr	x21, [x20, #8]
  94:	add	x0, sp, #0x8
  98:	add	x1, sp, #0x20
  9c:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
  a0:	add	x1, sp, #0x8
  a4:	mov	x0, x21
  a8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
  ac:	ldr	x2, [x20, #8]
  b0:	mov	w1, wzr
  b4:	mov	x3, xzr
  b8:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
  bc:	b	14c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x14c>
  c0:	cmp	x25, #0x1
  c4:	eor	w8, w21, #0x1
  c8:	cset	w9, eq  // eq = none
  cc:	mov	w0, wzr
  d0:	and	w8, w9, w8
  d4:	stp	q0, q0, [sp, #80]
  d8:	stp	q0, q0, [sp, #48]
  dc:	tbnz	w8, #0, 2fc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2fc>
  e0:	ldr	x8, [x20, #32]
  e4:	cbz	x8, 2fc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2fc>
  e8:	and	x9, x21, #0x1
  ec:	str	x9, [sp, #8]
  f0:	ldr	x0, [x20, #40]
  f4:	add	x2, sp, #0x8
  f8:	add	x4, sp, #0x20
  fc:	mov	x1, x24
 100:	mov	x3, x23
 104:	blr	x8
 108:	mov	x23, x0
 10c:	cbz	x0, 254 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x254>
 110:	ldr	x8, [sp, #8]
 114:	mov	w9, #0x1                   	// #1
 118:	stp	x9, x23, [sp, #48]
 11c:	cmp	x8, #0x9
 120:	b.ne	260 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x260>  // b.any
 124:	ldr	x1, [sp, #32]
 128:	mov	x0, x22
 12c:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 130:	b	25c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x25c>
 134:	mov	x21, xzr
 138:	b	150 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x150>
 13c:	ldrsw	x0, [sp, #64]
 140:	ldr	x1, [x20, #8]
 144:	mov	w2, wzr
 148:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 14c:	mov	x21, x0
 150:	ldr	x8, [sp, #72]
 154:	cbz	x8, 19c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x19c>
 158:	ldr	x0, [sp, #80]
 15c:	cbz	x0, 1a4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1a4>
 160:	str	x0, [sp, #32]
 164:	bl	0 <strlen>
 168:	str	x0, [sp, #40]
 16c:	ldr	x22, [x20, #8]
 170:	add	x0, sp, #0x8
 174:	add	x1, sp, #0x20
 178:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 17c:	add	x1, sp, #0x8
 180:	mov	x0, x22
 184:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
 188:	ldr	x2, [x20, #8]
 18c:	mov	w1, wzr
 190:	mov	x3, xzr
 194:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
 198:	b	1b4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1b4>
 19c:	mov	x23, xzr
 1a0:	b	1b8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1b8>
 1a4:	ldrsw	x0, [sp, #88]
 1a8:	ldr	x1, [x20, #8]
 1ac:	mov	w2, wzr
 1b0:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 1b4:	mov	x23, x0
 1b8:	ldr	x0, [sp, #96]
 1bc:	cbz	x0, 1f4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1f4>
 1c0:	ldr	x1, [x20, #8]
 1c4:	mov	w2, wzr
 1c8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 1cc:	mov	x22, x0
 1d0:	cbz	x23, 1fc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1fc>
 1d4:	ldr	x3, [x20, #8]
 1d8:	cbz	x21, 214 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x214>
 1dc:	mov	w0, #0x11                  	// #17
 1e0:	mov	x1, x21
 1e4:	mov	x2, x23
 1e8:	mov	x4, xzr
 1ec:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 1f0:	b	228 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x228>
 1f4:	mov	x22, xzr
 1f8:	cbnz	x23, 1d4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x1d4>
 1fc:	cbz	x21, 2ac <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2ac>
 200:	cbz	x22, 2c4 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c4>
 204:	ldr	x3, [x20, #8]
 208:	mov	w0, wzr
 20c:	mov	x1, x21
 210:	b	238 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x238>
 214:	mov	w0, #0x1                   	// #1
 218:	mov	x1, x23
 21c:	mov	x2, x3
 220:	mov	x3, xzr
 224:	bl	0 <_ZN4llvm11MCUnaryExpr6createENS0_6OpcodeEPKNS_6MCExprERNS_9MCContextENS_5SMLocE>
 228:	mov	x1, x0
 22c:	cbz	x22, 24c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x24c>
 230:	ldr	x3, [x20, #8]
 234:	mov	w0, wzr
 238:	mov	x2, x22
 23c:	mov	x4, xzr
 240:	bl	0 <_ZN4llvm12MCBinaryExpr6createENS0_6OpcodeEPKNS_6MCExprES4_RNS_9MCContextENS_5SMLocE>
 244:	mov	x22, x0
 248:	b	2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 24c:	mov	x22, x1
 250:	b	2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 254:	tbz	w21, #0, 25c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x25c>
 258:	str	x24, [sp, #96]
 25c:	ldr	x8, [sp, #8]
 260:	cmp	x8, #0x5
 264:	b.eq	280 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x280>  // b.none
 268:	cmp	x8, #0x1
 26c:	b.ne	29c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x29c>  // b.any
 270:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 274:	add	x1, x1, #0x0
 278:	mov	w2, #0x11                  	// #17
 27c:	b	28c <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x28c>
 280:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 284:	add	x1, x1, #0x0
 288:	mov	w2, #0xe                   	// #14
 28c:	mov	x0, x22
 290:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 294:	ldr	x1, [sp, #32]
 298:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 29c:	cbnz	x23, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 2a0:	tbnz	w21, #0, 74 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x74>
 2a4:	mov	w0, wzr
 2a8:	b	2fc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2fc>
 2ac:	cbnz	x22, 2c8 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2c8>
 2b0:	ldr	x1, [x20, #8]
 2b4:	mov	x0, xzr
 2b8:	mov	w2, wzr
 2bc:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
 2c0:	b	244 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x244>
 2c4:	mov	x22, x21
 2c8:	ldr	x0, [x20, #16]
 2cc:	ldr	w2, [sp, #104]
 2d0:	mov	x1, x22
 2d4:	ldr	x8, [x0]
 2d8:	ldr	x8, [x8, #16]
 2dc:	blr	x8
 2e0:	cbz	x0, 2fc <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm+0x2fc>
 2e4:	mov	w8, #0x4                   	// #4
 2e8:	stp	x8, x0, [sp, #8]
 2ec:	add	x0, x19, #0x10
 2f0:	add	x1, sp, #0x8
 2f4:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 2f8:	mov	w0, #0x1                   	// #1
 2fc:	ldp	x20, x19, [sp, #176]
 300:	ldp	x22, x21, [sp, #160]
 304:	ldp	x24, x23, [sp, #144]
 308:	ldr	x25, [sp, #128]
 30c:	ldp	x29, x30, [sp, #112]
 310:	add	sp, sp, #0xc0
 314:	ret

0000000000000318 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm>:
 318:	sub	sp, sp, #0x30
 31c:	stp	x29, x30, [sp, #16]
 320:	stp	x20, x19, [sp, #32]
 324:	add	x29, sp, #0x10
 328:	ldr	x9, [x0, #32]
 32c:	cbz	x9, 45c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x144>
 330:	mov	w10, #0x2                   	// #2
 334:	str	x10, [sp, #8]
 338:	ldr	x0, [x0, #40]
 33c:	mov	x8, x2
 340:	mov	x19, x1
 344:	add	x2, sp, #0x8
 348:	mov	x4, sp
 34c:	mov	x1, x8
 350:	blr	x9
 354:	ldr	x8, [sp, #8]
 358:	sub	x8, x8, #0x2
 35c:	cmp	x8, #0x6
 360:	b.hi	45c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x144>  // b.pmore
 364:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 368:	add	x9, x9, #0x0
 36c:	adr	x10, 37c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x64>
 370:	ldrb	w11, [x9, x8]
 374:	add	x10, x10, x11, lsl #2
 378:	br	x10
 37c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 380:	add	x1, x1, #0x0
 384:	mov	w2, #0x1d                  	// #29
 388:	b	420 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x108>
 38c:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 390:	add	x1, x1, #0x0
 394:	mov	w2, #0x13                  	// #19
 398:	mov	x0, x19
 39c:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3a0:	ldr	x20, [sp]
 3a4:	cbz	x20, 434 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x11c>
 3a8:	mov	x0, x20
 3ac:	bl	0 <strlen>
 3b0:	mov	x2, x0
 3b4:	b	438 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x120>
 3b8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3bc:	add	x1, x1, #0x0
 3c0:	mov	w2, #0x15                  	// #21
 3c4:	mov	x0, x19
 3c8:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3cc:	ldr	x1, [sp]
 3d0:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3d4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3d8:	add	x1, x1, #0x0
 3dc:	mov	w2, #0x1                   	// #1
 3e0:	b	458 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x140>
 3e4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3e8:	add	x1, x1, #0x0
 3ec:	mov	w2, #0xe                   	// #14
 3f0:	b	420 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x108>
 3f4:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 3f8:	add	x1, x1, #0x0
 3fc:	mov	w2, #0x12                  	// #18
 400:	b	420 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x108>
 404:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 408:	add	x1, x1, #0x0
 40c:	mov	w2, #0x13                  	// #19
 410:	b	420 <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x108>
 414:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 418:	add	x1, x1, #0x0
 41c:	mov	w2, #0x10                  	// #16
 420:	mov	x0, x19
 424:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 428:	ldr	x1, [sp]
 42c:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 430:	b	45c <_ZN4llvm20MCExternalSymbolizer31tryAddingPcLoadReferenceCommentERNS_11raw_ostreamElm+0x144>
 434:	mov	x2, xzr
 438:	mov	x0, x19
 43c:	mov	x1, x20
 440:	mov	w3, wzr
 444:	bl	0 <_ZN4llvm11raw_ostream13write_escapedENS_9StringRefEb>
 448:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 44c:	add	x1, x1, #0x0
 450:	mov	w2, #0x1                   	// #1
 454:	mov	x0, x19
 458:	bl	0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 45c:	ldp	x20, x19, [sp, #32]
 460:	ldp	x29, x30, [sp, #16]
 464:	add	sp, sp, #0x30
 468:	ret

000000000000046c <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE>:
 46c:	stp	x29, x30, [sp, #-64]!
 470:	str	x23, [sp, #16]
 474:	stp	x22, x21, [sp, #32]
 478:	stp	x20, x19, [sp, #48]
 47c:	mov	x29, sp
 480:	cbz	x4, 4d4 <_ZN4llvm18createMCSymbolizerERKNS_6TripleEPFiPvmmmiS3_EPFPKcS3_mPmmPS7_ES3_PNS_9MCContextEOSt10unique_ptrINS_16MCRelocationInfoESt14default_deleteISF_EE+0x68>
 484:	mov	w0, #0x30                  	// #48
 488:	mov	x23, x5
 48c:	mov	x21, x4
 490:	mov	x19, x3
 494:	mov	x20, x2
 498:	mov	x22, x1
 49c:	bl	0 <_Znwm>
 4a0:	ldr	x8, [x23]
 4a4:	str	xzr, [x23]
 4a8:	adrp	x9, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4ac:	ldr	x9, [x9]
 4b0:	stp	x8, x22, [x0, #16]
 4b4:	stp	x20, x19, [x0, #32]
 4b8:	ldp	x20, x19, [sp, #48]
 4bc:	add	x9, x9, #0x10
 4c0:	stp	x9, x21, [x0]
 4c4:	ldp	x22, x21, [sp, #32]
 4c8:	ldr	x23, [sp, #16]
 4cc:	ldp	x29, x30, [sp], #64
 4d0:	ret
 4d4:	adrp	x0, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4d8:	adrp	x1, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4dc:	adrp	x3, 0 <_ZN4llvm20MCExternalSymbolizer24tryAddingSymbolicOperandERNS_6MCInstERNS_11raw_ostreamElmbmm>
 4e0:	add	x0, x0, #0x0
 4e4:	add	x1, x1, #0x0
 4e8:	add	x3, x3, #0x0
 4ec:	mov	w2, #0xc2                  	// #194
 4f0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x1
  10:	mov	x20, x0
  14:	cbz	x1, 28 <_ZN4llvm11raw_ostreamlsEPKc+0x28>
  18:	mov	x0, x19
  1c:	bl	0 <strlen>
  20:	mov	x2, x0
  24:	b	2c <_ZN4llvm11raw_ostreamlsEPKc+0x2c>
  28:	mov	x2, xzr
  2c:	mov	x0, x20
  30:	mov	x1, x19
  34:	ldp	x20, x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	b	0 <_ZN4llvm11raw_ostreamlsEPKc>

Disassembly of section .text._ZN4llvm5TwineC2ERKNS_9StringRefE:

0000000000000000 <_ZN4llvm5TwineC2ERKNS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	w8, #0x105                 	// #261
   c:	strh	w8, [x0, #16]
  10:	stp	x1, xzr, [x0]
  14:	bl	0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  18:	tbz	w0, #0, 24 <_ZN4llvm5TwineC2ERKNS_9StringRefE+0x24>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret
  24:	adrp	x0, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  28:	adrp	x1, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  2c:	adrp	x3, 0 <_ZN4llvm5TwineC2ERKNS_9StringRefE>
  30:	add	x0, x0, #0x0
  34:	add	x1, x1, #0x0
  38:	add	x3, x3, #0x0
  3c:	mov	w2, #0x121                 	// #289
  40:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm20MCExternalSymbolizerD0Ev:

0000000000000000 <_ZN4llvm20MCExternalSymbolizerD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm12MCSymbolizerD2Ev>
  14:	mov	x0, x19
  18:	ldr	x19, [sp, #16]
  1c:	ldp	x29, x30, [sp], #32
  20:	b	0 <_ZdlPv>

Disassembly of section .text._ZN4llvm11raw_ostreamlsENS_9StringRefE:

0000000000000000 <_ZN4llvm11raw_ostreamlsENS_9StringRefE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x20, x0
  10:	ldp	x8, x0, [x0, #16]
  14:	mov	x19, x2
  18:	sub	x8, x8, x0
  1c:	cmp	x2, x8
  20:	b.ls	38 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x38>  // b.plast
  24:	mov	x0, x20
  28:	mov	x2, x19
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  38:	cbz	x19, 50 <_ZN4llvm11raw_ostreamlsENS_9StringRefE+0x50>
  3c:	mov	x2, x19
  40:	bl	0 <memcpy>
  44:	ldr	x8, [x20, #24]
  48:	add	x8, x8, x19
  4c:	str	x8, [x20, #24]
  50:	mov	x0, x20
  54:	ldp	x20, x19, [sp, #16]
  58:	ldp	x29, x30, [sp], #32
  5c:	ret

Disassembly of section .text._ZNK4llvm5Twine7isValidEv:

0000000000000000 <_ZNK4llvm5Twine7isValidEv>:
   0:	ldrb	w9, [x0, #16]
   4:	ldrb	w8, [x0, #17]
   8:	cmp	w9, #0x1
   c:	b.hi	1c <_ZNK4llvm5Twine7isValidEv+0x1c>  // b.pmore
  10:	cmp	w8, #0x1
  14:	b.ne	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.any
  18:	b	80 <_ZNK4llvm5Twine7isValidEv+0x80>
  1c:	cbz	w8, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  20:	cmp	w8, #0x1
  24:	b.ne	38 <_ZNK4llvm5Twine7isValidEv+0x38>  // b.any
  28:	cmp	w9, #0x2
  2c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  30:	mov	w8, #0x1                   	// #1
  34:	b	40 <_ZNK4llvm5Twine7isValidEv+0x40>
  38:	cmp	w9, #0x2
  3c:	b.ne	58 <_ZNK4llvm5Twine7isValidEv+0x58>  // b.any
  40:	ldr	x9, [x0]
  44:	ldrb	w10, [x9, #16]
  48:	cbz	w10, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  4c:	ldrb	w9, [x9, #17]
  50:	cmp	w9, #0x1
  54:	b.eq	78 <_ZNK4llvm5Twine7isValidEv+0x78>  // b.none
  58:	cmp	w8, #0x2
  5c:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  60:	ldr	x8, [x0, #8]
  64:	ldrb	w9, [x8, #16]
  68:	cbz	w9, 78 <_ZNK4llvm5Twine7isValidEv+0x78>
  6c:	ldrb	w8, [x8, #17]
  70:	cmp	w8, #0x1
  74:	b.ne	80 <_ZNK4llvm5Twine7isValidEv+0x80>  // b.any
  78:	mov	w0, wzr
  7c:	ret
  80:	mov	w0, #0x1                   	// #1
  84:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldp	w8, w9, [x0, #8]
  10:	mov	x19, x0
  14:	mov	x20, x1
  18:	cmp	w8, w9
  1c:	b.cs	4c <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x4c>  // b.hs, b.nlast
  20:	ldr	x9, [x19]
  24:	ldr	q0, [x20]
  28:	str	q0, [x9, w8, uxtw #4]
  2c:	ldp	w8, w9, [x19, #8]
  30:	cmp	w8, w9
  34:	b.cs	68 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x68>  // b.hs, b.nlast
  38:	add	w8, w8, #0x1
  3c:	str	w8, [x19, #8]
  40:	ldp	x20, x19, [sp, #16]
  44:	ldp	x29, x30, [sp], #32
  48:	ret
  4c:	add	x1, x19, #0x10
  50:	mov	w3, #0x10                  	// #16
  54:	mov	x0, x19
  58:	mov	x2, xzr
  5c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  60:	ldr	w8, [x19, #8]
  64:	b	20 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_+0x20>
  68:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  6c:	adrp	x1, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  70:	adrp	x3, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_9MCOperandELb1EE9push_backERKS1_>
  74:	add	x0, x0, #0x0
  78:	add	x1, x1, #0x0
  7c:	add	x3, x3, #0x0
  80:	mov	w2, #0x43                  	// #67
  84:	bl	0 <__assert_fail>

MCRelocationInfo.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>:
   0:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
   4:	ldr	x8, [x8]
   8:	add	x8, x8, #0x10
   c:	stp	x8, x1, [x0]
  10:	ret

0000000000000014 <_ZN4llvm16MCRelocationInfoD1Ev>:
  14:	ret

0000000000000018 <_ZN4llvm16MCRelocationInfoD0Ev>:
  18:	b	0 <_ZdlPv>

000000000000001c <_ZN4llvm16MCRelocationInfo28createExprForCAPIVariantKindEPKNS_6MCExprEj>:
  1c:	cmp	w2, #0x0
  20:	csel	x0, x1, xzr, eq  // eq = none
  24:	ret

0000000000000028 <_ZN4llvm22createMCRelocationInfoERKNS_6TripleERNS_9MCContextE>:
  28:	stp	x29, x30, [sp, #-32]!
  2c:	str	x19, [sp, #16]
  30:	mov	x29, sp
  34:	mov	w0, #0x10                  	// #16
  38:	mov	x19, x1
  3c:	bl	0 <_Znwm>
  40:	adrp	x8, 0 <_ZN4llvm16MCRelocationInfoC1ERNS_9MCContextE>
  44:	ldr	x8, [x8]
  48:	add	x8, x8, #0x10
  4c:	stp	x8, x19, [x0]
  50:	ldr	x19, [sp, #16]
  54:	ldp	x29, x30, [sp], #32
  58:	ret

MCSymbolizer.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN4llvm12MCSymbolizerD1Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	adrp	x8, 0 <_ZN4llvm12MCSymbolizerD1Ev>
  10:	mov	x19, x0
  14:	ldr	x0, [x0, #16]
  18:	ldr	x8, [x8]
  1c:	add	x8, x8, #0x10
  20:	str	x8, [x19]
  24:	cbz	x0, 34 <_ZN4llvm12MCSymbolizerD1Ev+0x34>
  28:	ldr	x8, [x0]
  2c:	ldr	x8, [x8, #8]
  30:	blr	x8
  34:	str	xzr, [x19, #16]
  38:	ldr	x19, [sp, #16]
  3c:	ldp	x29, x30, [sp], #32
  40:	ret

0000000000000044 <_ZN4llvm12MCSymbolizerD0Ev>:
  44:	brk	#0x1
