
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-system-update-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000210fc0 <_start>:
  210fc0:	mov	x29, #0x0                   	// #0
  210fc4:	mov	x30, #0x0                   	// #0
  210fc8:	mov	x5, x0
  210fcc:	ldr	x1, [sp]
  210fd0:	add	x2, sp, #0x8
  210fd4:	mov	x6, sp
  210fd8:	movz	x0, #0x0, lsl #48
  210fdc:	movk	x0, #0x0, lsl #32
  210fe0:	movk	x0, #0x21, lsl #16
  210fe4:	movk	x0, #0x1110
  210fe8:	movz	x3, #0x0, lsl #48
  210fec:	movk	x3, #0x0, lsl #32
  210ff0:	movk	x3, #0x21, lsl #16
  210ff4:	movk	x3, #0x1630
  210ff8:	movz	x4, #0x0, lsl #48
  210ffc:	movk	x4, #0x0, lsl #32
  211000:	movk	x4, #0x21, lsl #16
  211004:	movk	x4, #0x16b0
  211008:	bl	211700 <__libc_start_main@plt>
  21100c:	bl	211710 <abort@plt>

0000000000211010 <call_weak_fn>:
  211010:	adrp	x0, 221000 <runlevel_to_target@plt+0xf7e0>
  211014:	ldr	x0, [x0, #2576]
  211018:	cbz	x0, 211020 <call_weak_fn+0x10>
  21101c:	b	211720 <__gmon_start__@plt>
  211020:	ret

0000000000211024 <deregister_tm_clones>:
  211024:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  211028:	add	x0, x0, #0xad8
  21102c:	adrp	x1, 231000 <_DYNAMIC+0xf7c0>
  211030:	add	x1, x1, #0xad8
  211034:	cmp	x0, x1
  211038:	b.eq	21106c <deregister_tm_clones+0x48>  // b.none
  21103c:	stp	x29, x30, [sp, #-32]!
  211040:	mov	x29, sp
  211044:	adrp	x0, 200000 <__FRAME_END__-0xec8>
  211048:	ldr	x0, [x0, #2832]
  21104c:	str	x0, [sp, #24]
  211050:	mov	x1, x0
  211054:	cbz	x1, 211064 <deregister_tm_clones+0x40>
  211058:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  21105c:	add	x0, x0, #0xad8
  211060:	blr	x1
  211064:	ldp	x29, x30, [sp], #32
  211068:	ret
  21106c:	ret

0000000000211070 <register_tm_clones>:
  211070:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  211074:	add	x0, x0, #0xad8
  211078:	adrp	x1, 231000 <_DYNAMIC+0xf7c0>
  21107c:	add	x1, x1, #0xad8
  211080:	sub	x0, x0, x1
  211084:	lsr	x1, x0, #63
  211088:	add	x0, x1, x0, asr #3
  21108c:	cmp	xzr, x0, asr #1
  211090:	b.eq	2110c8 <register_tm_clones+0x58>  // b.none
  211094:	stp	x29, x30, [sp, #-32]!
  211098:	mov	x29, sp
  21109c:	asr	x1, x0, #1
  2110a0:	adrp	x0, 200000 <__FRAME_END__-0xec8>
  2110a4:	ldr	x0, [x0, #2840]
  2110a8:	str	x0, [sp, #24]
  2110ac:	mov	x2, x0
  2110b0:	cbz	x2, 2110c0 <register_tm_clones+0x50>
  2110b4:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  2110b8:	add	x0, x0, #0xad8
  2110bc:	blr	x2
  2110c0:	ldp	x29, x30, [sp], #32
  2110c4:	ret
  2110c8:	ret

00000000002110cc <__do_global_dtors_aux>:
  2110cc:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  2110d0:	ldrb	w0, [x0, #2776]
  2110d4:	cbnz	w0, 2110f8 <__do_global_dtors_aux+0x2c>
  2110d8:	stp	x29, x30, [sp, #-16]!
  2110dc:	mov	x29, sp
  2110e0:	bl	211024 <deregister_tm_clones>
  2110e4:	adrp	x0, 231000 <_DYNAMIC+0xf7c0>
  2110e8:	mov	w1, #0x1                   	// #1
  2110ec:	strb	w1, [x0, #2776]
  2110f0:	ldp	x29, x30, [sp], #16
  2110f4:	ret
  2110f8:	ret

00000000002110fc <frame_dummy>:
  2110fc:	stp	x29, x30, [sp, #-16]!
  211100:	mov	x29, sp
  211104:	bl	211070 <register_tm_clones>
  211108:	ldp	x29, x30, [sp], #16
  21110c:	ret

0000000000211110 <main>:
  211110:	stp	x29, x30, [sp, #-32]!
  211114:	stp	x20, x19, [sp, #16]
  211118:	mov	x29, sp
  21111c:	mov	x19, x1
  211120:	mov	w20, w0
  211124:	bl	2111c8 <save_argc_argv>
  211128:	bl	211730 <log_setup_generator@plt>
  21112c:	cmp	w20, #0x2
  211130:	b.lt	21117c <main+0x6c>  // b.tstop
  211134:	cmp	w20, #0x4
  211138:	b.eq	21117c <main+0x6c>  // b.none
  21113c:	mov	w0, wzr
  211140:	bl	211740 <log_get_max_level_realm@plt>
  211144:	cmp	w0, #0x3
  211148:	b.lt	2111b8 <main+0xa8>  // b.tstop
  21114c:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211150:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  211154:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211158:	mov	w1, #0x16                  	// #22
  21115c:	add	x2, x2, #0xc19
  211160:	add	x4, x4, #0xe09
  211164:	add	x5, x5, #0xd70
  211168:	mov	w0, #0x3                   	// #3
  21116c:	movk	w1, #0x4000, lsl #16
  211170:	mov	w3, #0x48                  	// #72
  211174:	bl	211750 <log_internal_realm@plt>
  211178:	b	2111bc <main+0xac>
  21117c:	cmp	w20, #0x2
  211180:	b.lt	21118c <main+0x7c>  // b.tstop
  211184:	ldr	x0, [x19, #16]
  211188:	b	211194 <main+0x84>
  21118c:	adrp	x0, 200000 <__FRAME_END__-0xec8>
  211190:	add	x0, x0, #0xe43
  211194:	bl	2111dc <run>
  211198:	mov	w19, w0
  21119c:	bl	211760 <ask_password_agent_close@plt>
  2111a0:	bl	211770 <polkit_agent_close@plt>
  2111a4:	bl	211780 <pager_close@plt>
  2111a8:	bl	211790 <mac_selinux_finish@plt>
  2111ac:	bl	21128c <static_destruct>
  2111b0:	lsr	w0, w19, #31
  2111b4:	b	2111bc <main+0xac>
  2111b8:	mov	w0, #0xffffffea            	// #-22
  2111bc:	ldp	x20, x19, [sp, #16]
  2111c0:	ldp	x29, x30, [sp], #32
  2111c4:	ret

00000000002111c8 <save_argc_argv>:
  2111c8:	adrp	x8, 231000 <_DYNAMIC+0xf7c0>
  2111cc:	adrp	x9, 231000 <_DYNAMIC+0xf7c0>
  2111d0:	str	w0, [x8, #2792]
  2111d4:	str	x1, [x9, #2800]
  2111d8:	ret

00000000002111dc <run>:
  2111dc:	stp	x29, x30, [sp, #-32]!
  2111e0:	adrp	x8, 231000 <_DYNAMIC+0xf7c0>
  2111e4:	str	x19, [sp, #16]
  2111e8:	mov	x29, sp
  2111ec:	str	x0, [x8, #2784]
  2111f0:	cbz	x0, 21126c <run+0x90>
  2111f4:	bl	2112ec <generate_symlink>
  2111f8:	cmp	w0, #0x1
  2111fc:	b.lt	211260 <run+0x84>  // b.tstop
  211200:	adrp	x0, 211000 <_start+0x40>
  211204:	add	x0, x0, #0x4bc
  211208:	mov	x1, xzr
  21120c:	mov	w2, wzr
  211210:	bl	2117a0 <proc_cmdline_parse@plt>
  211214:	mov	w19, w0
  211218:	mov	w0, wzr
  21121c:	tbz	w19, #31, 211260 <run+0x84>
  211220:	mov	w0, wzr
  211224:	bl	211740 <log_get_max_level_realm@plt>
  211228:	cmp	w0, #0x4
  21122c:	mov	w0, wzr
  211230:	b.lt	211260 <run+0x84>  // b.tstop
  211234:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211238:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  21123c:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211240:	add	x2, x2, #0xc19
  211244:	add	x4, x4, #0xe24
  211248:	add	x5, x5, #0xb5a
  21124c:	mov	w0, #0x4                   	// #4
  211250:	mov	w3, #0x43                  	// #67
  211254:	mov	w1, w19
  211258:	bl	211750 <log_internal_realm@plt>
  21125c:	mov	w0, wzr
  211260:	ldr	x19, [sp, #16]
  211264:	ldp	x29, x30, [sp], #32
  211268:	ret
  21126c:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  211270:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211274:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  211278:	add	x1, x1, #0xe0e
  21127c:	add	x2, x2, #0xc19
  211280:	add	x4, x4, #0xc7a
  211284:	mov	w3, #0x3a                  	// #58
  211288:	bl	2117b0 <log_assert_failed_realm@plt>

000000000021128c <static_destruct>:
  21128c:	stp	x29, x30, [sp, #-32]!
  211290:	stp	x20, x19, [sp, #16]
  211294:	adrp	x8, 221000 <runlevel_to_target@plt+0xf7e0>
  211298:	ldr	x8, [x8, #2584]
  21129c:	mov	x29, sp
  2112a0:	cbz	x8, 2112e0 <static_destruct+0x54>
  2112a4:	adrp	x0, 221000 <runlevel_to_target@plt+0xf7e0>
  2112a8:	ldr	x0, [x0, #2584]
  2112ac:	bl	211620 <ALIGN_TO>
  2112b0:	adrp	x20, 221000 <runlevel_to_target@plt+0xf7e0>
  2112b4:	ldr	x20, [x20, #2592]
  2112b8:	cmp	x0, x20
  2112bc:	b.cs	2112e0 <static_destruct+0x54>  // b.hs, b.nlast
  2112c0:	mov	x19, x0
  2112c4:	ldp	x0, x8, [x19]
  2112c8:	blr	x8
  2112cc:	add	x0, x19, #0x10
  2112d0:	bl	211620 <ALIGN_TO>
  2112d4:	mov	x19, x0
  2112d8:	cmp	x0, x20
  2112dc:	b.cc	2112c4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  2112e0:	ldp	x20, x19, [sp, #16]
  2112e4:	ldp	x29, x30, [sp], #32
  2112e8:	ret

00000000002112ec <generate_symlink>:
  2112ec:	stp	x29, x30, [sp, #-48]!
  2112f0:	str	x21, [sp, #16]
  2112f4:	stp	x20, x19, [sp, #32]
  2112f8:	mov	x29, sp
  2112fc:	sub	sp, sp, #0x10
  211300:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  211304:	add	x1, x1, #0xc07
  211308:	mov	w0, #0xffffff9c            	// #-100
  21130c:	mov	w3, #0x100                 	// #256
  211310:	mov	w2, wzr
  211314:	bl	2117c0 <faccessat@plt>
  211318:	tbnz	w0, #31, 2113c8 <generate_symlink+0xdc>
  21131c:	adrp	x8, 231000 <_DYNAMIC+0xf7c0>
  211320:	ldr	x8, [x8, #2784]
  211324:	adrp	x9, 200000 <__FRAME_END__-0xec8>
  211328:	mov	x20, xzr
  21132c:	mov	x19, xzr
  211330:	add	x9, x9, #0xe6e
  211334:	sub	x21, x29, #0x10
  211338:	stp	x8, x9, [x29, #-16]
  21133c:	ldr	x0, [x21, x20]
  211340:	cbz	x0, 211358 <generate_symlink+0x6c>
  211344:	bl	2117d0 <strlen@plt>
  211348:	add	x20, x20, #0x8
  21134c:	cmp	x20, #0x10
  211350:	add	x19, x0, x19
  211354:	b.ne	21133c <generate_symlink+0x50>  // b.any
  211358:	add	x19, x19, #0x1
  21135c:	mov	x0, x19
  211360:	bl	2115b0 <size_multiply_overflow>
  211364:	tbnz	w0, #0, 21148c <generate_symlink+0x1a0>
  211368:	cmp	x19, #0x400, lsl #12
  21136c:	b.hi	211498 <generate_symlink+0x1ac>  // b.pmore
  211370:	add	x9, x19, #0xf
  211374:	mov	x8, sp
  211378:	and	x9, x9, #0xfffffffffffffff0
  21137c:	sub	x19, x8, x9
  211380:	mov	sp, x19
  211384:	mov	x20, xzr
  211388:	sub	x21, x29, #0x10
  21138c:	mov	x0, x19
  211390:	ldr	x1, [x21, x20]
  211394:	cbz	x1, 2113a8 <generate_symlink+0xbc>
  211398:	bl	2117e0 <stpcpy@plt>
  21139c:	add	x20, x20, #0x8
  2113a0:	cmp	x20, #0x10
  2113a4:	b.ne	211390 <generate_symlink+0xa4>  // b.any
  2113a8:	strb	wzr, [x0]
  2113ac:	adrp	x0, 200000 <__FRAME_END__-0xec8>
  2113b0:	add	x0, x0, #0xbde
  2113b4:	mov	x1, x19
  2113b8:	bl	2117f0 <symlink@plt>
  2113bc:	tbnz	w0, #31, 2113e0 <generate_symlink+0xf4>
  2113c0:	mov	w0, #0x1                   	// #1
  2113c4:	b	211478 <generate_symlink+0x18c>
  2113c8:	bl	211800 <__errno_location@plt>
  2113cc:	ldr	w19, [x0]
  2113d0:	cmp	w19, #0x2
  2113d4:	b.ne	211428 <generate_symlink+0x13c>  // b.any
  2113d8:	mov	w0, wzr
  2113dc:	b	211478 <generate_symlink+0x18c>
  2113e0:	bl	211800 <__errno_location@plt>
  2113e4:	ldr	w20, [x0]
  2113e8:	mov	w0, wzr
  2113ec:	bl	211740 <log_get_max_level_realm@plt>
  2113f0:	cmp	w0, #0x3
  2113f4:	b.lt	211468 <generate_symlink+0x17c>  // b.tstop
  2113f8:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  2113fc:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  211400:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211404:	add	x2, x2, #0xc19
  211408:	add	x4, x4, #0xcac
  21140c:	add	x5, x5, #0xd9c
  211410:	mov	w0, #0x3                   	// #3
  211414:	mov	w3, #0x22                  	// #34
  211418:	mov	w1, w20
  21141c:	mov	x6, x19
  211420:	bl	211750 <log_internal_realm@plt>
  211424:	b	211478 <generate_symlink+0x18c>
  211428:	mov	w0, wzr
  21142c:	bl	211740 <log_get_max_level_realm@plt>
  211430:	cmp	w0, #0x3
  211434:	b.lt	211460 <generate_symlink+0x174>  // b.tstop
  211438:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  21143c:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  211440:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211444:	add	x2, x2, #0xc19
  211448:	add	x4, x4, #0xcac
  21144c:	add	x5, x5, #0xe48
  211450:	mov	w0, #0x3                   	// #3
  211454:	mov	w3, #0x1c                  	// #28
  211458:	mov	w1, w19
  21145c:	bl	211750 <log_internal_realm@plt>
  211460:	mov	w0, #0xffffffea            	// #-22
  211464:	b	211478 <generate_symlink+0x18c>
  211468:	cmp	w20, #0x0
  21146c:	mov	w8, wzr
  211470:	cneg	w9, w20, mi  // mi = first
  211474:	sub	w0, w8, w9, uxtb
  211478:	mov	sp, x29
  21147c:	ldp	x20, x19, [sp, #32]
  211480:	ldr	x21, [sp, #16]
  211484:	ldp	x29, x30, [sp], #48
  211488:	ret
  21148c:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  211490:	add	x1, x1, #0xc4f
  211494:	b	2114a0 <generate_symlink+0x1b4>
  211498:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  21149c:	add	x1, x1, #0xb20
  2114a0:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  2114a4:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  2114a8:	add	x2, x2, #0xc19
  2114ac:	add	x4, x4, #0xb3f
  2114b0:	mov	w3, #0x20                  	// #32
  2114b4:	mov	w0, wzr
  2114b8:	bl	2117b0 <log_assert_failed_realm@plt>

00000000002114bc <parse_proc_cmdline_item>:
  2114bc:	stp	x29, x30, [sp, #-32]!
  2114c0:	stp	x20, x19, [sp, #16]
  2114c4:	mov	x29, sp
  2114c8:	cbz	x0, 211590 <parse_proc_cmdline_item+0xd4>
  2114cc:	mov	x20, x1
  2114d0:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  2114d4:	add	x1, x1, #0xe7e
  2114d8:	mov	x19, x0
  2114dc:	bl	211810 <strcmp@plt>
  2114e0:	cbnz	w0, 2114f4 <parse_proc_cmdline_item+0x38>
  2114e4:	mov	x0, x19
  2114e8:	mov	x1, x20
  2114ec:	bl	2115b8 <proc_cmdline_value_missing>
  2114f0:	tbz	w0, #0, 211554 <parse_proc_cmdline_item+0x98>
  2114f4:	cbz	x20, 211508 <parse_proc_cmdline_item+0x4c>
  2114f8:	ldp	x20, x19, [sp, #16]
  2114fc:	mov	w0, wzr
  211500:	ldp	x29, x30, [sp], #32
  211504:	ret
  211508:	mov	x0, x19
  21150c:	bl	211820 <runlevel_to_target@plt>
  211510:	cbz	x0, 2114f8 <parse_proc_cmdline_item+0x3c>
  211514:	mov	w0, wzr
  211518:	bl	211740 <log_get_max_level_realm@plt>
  21151c:	cmp	w0, #0x4
  211520:	b.lt	2114f8 <parse_proc_cmdline_item+0x3c>  // b.tstop
  211524:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211528:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  21152c:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211530:	add	x2, x2, #0xc19
  211534:	add	x4, x4, #0xd19
  211538:	add	x5, x5, #0xdbc
  21153c:	mov	w0, #0x4                   	// #4
  211540:	mov	w3, #0x32                  	// #50
  211544:	mov	w1, wzr
  211548:	mov	x6, x19
  21154c:	bl	211750 <log_internal_realm@plt>
  211550:	b	2114f8 <parse_proc_cmdline_item+0x3c>
  211554:	mov	w0, wzr
  211558:	bl	211740 <log_get_max_level_realm@plt>
  21155c:	cmp	w0, #0x4
  211560:	b.lt	2114f8 <parse_proc_cmdline_item+0x3c>  // b.tstop
  211564:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211568:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  21156c:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  211570:	add	x2, x2, #0xc19
  211574:	add	x4, x4, #0xd19
  211578:	add	x5, x5, #0xb90
  21157c:	mov	w0, #0x4                   	// #4
  211580:	mov	w3, #0x30                  	// #48
  211584:	mov	w1, wzr
  211588:	bl	211750 <log_internal_realm@plt>
  21158c:	b	2114f8 <parse_proc_cmdline_item+0x3c>
  211590:	adrp	x1, 200000 <__FRAME_END__-0xec8>
  211594:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  211598:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  21159c:	add	x1, x1, #0xb8c
  2115a0:	add	x2, x2, #0xc19
  2115a4:	add	x4, x4, #0xcd9
  2115a8:	mov	w3, #0x28                  	// #40
  2115ac:	bl	2117b0 <log_assert_failed_realm@plt>

00000000002115b0 <size_multiply_overflow>:
  2115b0:	mov	w0, wzr
  2115b4:	ret

00000000002115b8 <proc_cmdline_value_missing>:
  2115b8:	stp	x29, x30, [sp, #-32]!
  2115bc:	str	x19, [sp, #16]
  2115c0:	mov	x29, sp
  2115c4:	cbz	x1, 2115d0 <proc_cmdline_value_missing+0x18>
  2115c8:	mov	w0, wzr
  2115cc:	b	211614 <proc_cmdline_value_missing+0x5c>
  2115d0:	mov	x19, x0
  2115d4:	mov	w0, wzr
  2115d8:	bl	211740 <log_get_max_level_realm@plt>
  2115dc:	cmp	w0, #0x4
  2115e0:	b.lt	211610 <proc_cmdline_value_missing+0x58>  // b.tstop
  2115e4:	adrp	x2, 200000 <__FRAME_END__-0xec8>
  2115e8:	adrp	x4, 200000 <__FRAME_END__-0xec8>
  2115ec:	adrp	x5, 200000 <__FRAME_END__-0xec8>
  2115f0:	add	x2, x2, #0xcc0
  2115f4:	add	x4, x4, #0xe28
  2115f8:	add	x5, x5, #0xd31
  2115fc:	mov	w0, #0x4                   	// #4
  211600:	mov	w3, #0x21                  	// #33
  211604:	mov	w1, wzr
  211608:	mov	x6, x19
  21160c:	bl	211750 <log_internal_realm@plt>
  211610:	mov	w0, #0x1                   	// #1
  211614:	ldr	x19, [sp, #16]
  211618:	ldp	x29, x30, [sp], #32
  21161c:	ret

0000000000211620 <ALIGN_TO>:
  211620:	add	x8, x0, #0x7
  211624:	and	x0, x8, #0xfffffffffffffff8
  211628:	ret
  21162c:	udf	#0

0000000000211630 <__libc_csu_init>:
  211630:	stp	x29, x30, [sp, #-64]!
  211634:	mov	x29, sp
  211638:	stp	x19, x20, [sp, #16]
  21163c:	adrp	x20, 221000 <runlevel_to_target@plt+0xf7e0>
  211640:	add	x20, x20, #0x840
  211644:	stp	x21, x22, [sp, #32]
  211648:	adrp	x21, 221000 <runlevel_to_target@plt+0xf7e0>
  21164c:	add	x21, x21, #0x838
  211650:	sub	x20, x20, x21
  211654:	mov	w22, w0
  211658:	stp	x23, x24, [sp, #48]
  21165c:	mov	x23, x1
  211660:	mov	x24, x2
  211664:	bl	2116b4 <_init>
  211668:	cmp	xzr, x20, asr #3
  21166c:	b.eq	211698 <__libc_csu_init+0x68>  // b.none
  211670:	asr	x20, x20, #3
  211674:	mov	x19, #0x0                   	// #0
  211678:	ldr	x3, [x21, x19, lsl #3]
  21167c:	mov	x2, x24
  211680:	add	x19, x19, #0x1
  211684:	mov	x1, x23
  211688:	mov	w0, w22
  21168c:	blr	x3
  211690:	cmp	x20, x19
  211694:	b.ne	211678 <__libc_csu_init+0x48>  // b.any
  211698:	ldp	x19, x20, [sp, #16]
  21169c:	ldp	x21, x22, [sp, #32]
  2116a0:	ldp	x23, x24, [sp, #48]
  2116a4:	ldp	x29, x30, [sp], #64
  2116a8:	ret
  2116ac:	nop

00000000002116b0 <__libc_csu_fini>:
  2116b0:	ret

Disassembly of section .init:

00000000002116b4 <_init>:
  2116b4:	stp	x29, x30, [sp, #-16]!
  2116b8:	mov	x29, sp
  2116bc:	bl	211010 <call_weak_fn>
  2116c0:	ldp	x29, x30, [sp], #16
  2116c4:	ret

Disassembly of section .fini:

00000000002116c8 <_fini>:
  2116c8:	stp	x29, x30, [sp, #-16]!
  2116cc:	mov	x29, sp
  2116d0:	ldp	x29, x30, [sp], #16
  2116d4:	ret

Disassembly of section .plt:

00000000002116e0 <__libc_start_main@plt-0x20>:
  2116e0:	stp	x16, x30, [sp, #-16]!
  2116e4:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2116e8:	ldr	x17, [x16, #2616]
  2116ec:	add	x16, x16, #0xa38
  2116f0:	br	x17
  2116f4:	nop
  2116f8:	nop
  2116fc:	nop

0000000000211700 <__libc_start_main@plt>:
  211700:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211704:	ldr	x17, [x16, #2624]
  211708:	add	x16, x16, #0xa40
  21170c:	br	x17

0000000000211710 <abort@plt>:
  211710:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211714:	ldr	x17, [x16, #2632]
  211718:	add	x16, x16, #0xa48
  21171c:	br	x17

0000000000211720 <__gmon_start__@plt>:
  211720:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211724:	ldr	x17, [x16, #2640]
  211728:	add	x16, x16, #0xa50
  21172c:	br	x17

0000000000211730 <log_setup_generator@plt>:
  211730:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211734:	ldr	x17, [x16, #2648]
  211738:	add	x16, x16, #0xa58
  21173c:	br	x17

0000000000211740 <log_get_max_level_realm@plt>:
  211740:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211744:	ldr	x17, [x16, #2656]
  211748:	add	x16, x16, #0xa60
  21174c:	br	x17

0000000000211750 <log_internal_realm@plt>:
  211750:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211754:	ldr	x17, [x16, #2664]
  211758:	add	x16, x16, #0xa68
  21175c:	br	x17

0000000000211760 <ask_password_agent_close@plt>:
  211760:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211764:	ldr	x17, [x16, #2672]
  211768:	add	x16, x16, #0xa70
  21176c:	br	x17

0000000000211770 <polkit_agent_close@plt>:
  211770:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211774:	ldr	x17, [x16, #2680]
  211778:	add	x16, x16, #0xa78
  21177c:	br	x17

0000000000211780 <pager_close@plt>:
  211780:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211784:	ldr	x17, [x16, #2688]
  211788:	add	x16, x16, #0xa80
  21178c:	br	x17

0000000000211790 <mac_selinux_finish@plt>:
  211790:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211794:	ldr	x17, [x16, #2696]
  211798:	add	x16, x16, #0xa88
  21179c:	br	x17

00000000002117a0 <proc_cmdline_parse@plt>:
  2117a0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117a4:	ldr	x17, [x16, #2704]
  2117a8:	add	x16, x16, #0xa90
  2117ac:	br	x17

00000000002117b0 <log_assert_failed_realm@plt>:
  2117b0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117b4:	ldr	x17, [x16, #2712]
  2117b8:	add	x16, x16, #0xa98
  2117bc:	br	x17

00000000002117c0 <faccessat@plt>:
  2117c0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117c4:	ldr	x17, [x16, #2720]
  2117c8:	add	x16, x16, #0xaa0
  2117cc:	br	x17

00000000002117d0 <strlen@plt>:
  2117d0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117d4:	ldr	x17, [x16, #2728]
  2117d8:	add	x16, x16, #0xaa8
  2117dc:	br	x17

00000000002117e0 <stpcpy@plt>:
  2117e0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117e4:	ldr	x17, [x16, #2736]
  2117e8:	add	x16, x16, #0xab0
  2117ec:	br	x17

00000000002117f0 <symlink@plt>:
  2117f0:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  2117f4:	ldr	x17, [x16, #2744]
  2117f8:	add	x16, x16, #0xab8
  2117fc:	br	x17

0000000000211800 <__errno_location@plt>:
  211800:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211804:	ldr	x17, [x16, #2752]
  211808:	add	x16, x16, #0xac0
  21180c:	br	x17

0000000000211810 <strcmp@plt>:
  211810:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211814:	ldr	x17, [x16, #2760]
  211818:	add	x16, x16, #0xac8
  21181c:	br	x17

0000000000211820 <runlevel_to_target@plt>:
  211820:	adrp	x16, 221000 <runlevel_to_target@plt+0xf7e0>
  211824:	ldr	x17, [x16, #2768]
  211828:	add	x16, x16, #0xad0
  21182c:	br	x17
