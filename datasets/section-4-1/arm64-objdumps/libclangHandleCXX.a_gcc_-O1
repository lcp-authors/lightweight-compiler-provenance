In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclangHandleCXX.a_gcc_-O1:

handle_cxx.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>:
   0:	sub	sp, sp, #0x710
   4:	stp	x29, x30, [sp]
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	stp	x21, x22, [sp, #32]
  14:	stp	x23, x24, [sp, #48]
  18:	stp	x25, x26, [sp, #64]
  1c:	stp	x27, x28, [sp, #80]
  20:	mov	x21, x0
  24:	mov	x20, x1
  28:	add	x0, sp, #0x658
  2c:	str	x0, [sp, #1608]
  30:	mov	w0, #0x10                  	// #16
  34:	str	w0, [sp, #1620]
  38:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
  3c:	add	x0, x0, #0x0
  40:	str	x0, [sp, #1624]
  44:	mov	w0, #0x1                   	// #1
  48:	str	w0, [sp, #1616]
  4c:	ldr	x19, [x2]
  50:	ldr	x22, [x2, #8]
  54:	cmp	x19, x22
  58:	b.eq	ec <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xec>  // b.none
  5c:	add	x23, sp, #0x648
  60:	add	x25, x23, #0x10
  64:	mov	x24, #0x8                   	// #8
  68:	ldr	x2, [x19]
  6c:	ldr	w1, [sp, #1616]
  70:	ldr	x0, [sp, #1608]
  74:	str	x2, [x0, x1, lsl #3]
  78:	ldr	w2, [sp, #1616]
  7c:	ldr	w1, [sp, #1620]
  80:	mov	w0, w2
  84:	add	x0, x0, #0x1
  88:	cmp	x0, w1, uxtw
  8c:	b.hi	c4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xc4>  // b.pmore
  90:	add	w2, w2, #0x1
  94:	str	w2, [sp, #1616]
  98:	add	x19, x19, #0x8
  9c:	cmp	x19, x22
  a0:	b.eq	e4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xe4>  // b.none
  a4:	cmp	w1, w2
  a8:	b.hi	68 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x68>  // b.pmore
  ac:	mov	x3, x24
  b0:	mov	x2, #0x0                   	// #0
  b4:	mov	x1, x25
  b8:	mov	x0, x23
  bc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
  c0:	b	68 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x68>
  c4:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
  c8:	add	x3, x3, #0x0
  cc:	mov	w2, #0x43                  	// #67
  d0:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
  d4:	add	x1, x1, #0x0
  d8:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
  dc:	add	x0, x0, #0x0
  e0:	bl	0 <__assert_fail>
  e4:	cmp	w1, w2
  e8:	b.ls	618 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x618>  // b.plast
  ec:	ldr	w1, [sp, #1616]
  f0:	ldr	x0, [sp, #1608]
  f4:	str	x20, [x0, x1, lsl #3]
  f8:	ldr	w0, [sp, #1616]
  fc:	mov	w1, w0
 100:	add	x1, x1, #0x1
 104:	ldr	w2, [sp, #1620]
 108:	cmp	x1, x2
 10c:	b.hi	630 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x630>  // b.pmore
 110:	add	w0, w0, #0x1
 114:	str	w0, [sp, #1616]
 118:	add	x19, sp, #0x78
 11c:	add	x0, x19, #0x10
 120:	str	x0, [sp, #120]
 124:	str	xzr, [sp, #128]
 128:	strb	wzr, [sp, #136]
 12c:	str	xzr, [sp, #1752]
 130:	mov	x0, #0x298                 	// #664
 134:	bl	0 <_Znwm>
 138:	mov	x23, x0
 13c:	add	x2, sp, #0x6d8
 140:	mov	x1, x19
 144:	bl	0 <_ZN5clang11FileManagerC1ERKNS_17FileSystemOptionsEN4llvm18IntrusiveRefCntPtrINS4_3vfs10FileSystemEEE>
 148:	ldr	w0, [x23]
 14c:	add	w0, w0, #0x1
 150:	str	w0, [x23]
 154:	ldr	x0, [sp, #1752]
 158:	cbz	x0, 188 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x188>
 15c:	add	x2, x0, #0x8
 160:	ldaxr	w1, [x2]
 164:	sub	w3, w1, #0x1
 168:	stlxr	w4, w3, [x2]
 16c:	cbnz	w4, 160 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x160>
 170:	subs	w1, w1, #0x1
 174:	b.mi	650 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x650>  // b.first
 178:	cbnz	w1, 188 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x188>
 17c:	ldr	x1, [x0]
 180:	ldr	x1, [x1, #8]
 184:	blr	x1
 188:	ldr	x0, [sp, #120]
 18c:	add	x1, sp, #0x88
 190:	cmp	x0, x1
 194:	b.eq	19c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x19c>  // b.none
 198:	bl	0 <_ZdlPv>
 19c:	adrp	x0, 0 <_ZTVN5clang20IgnoringDiagConsumerE>
 1a0:	ldr	x0, [x0]
 1a4:	add	x0, x0, #0x10
 1a8:	str	x0, [sp, #1592]
 1ac:	str	wzr, [sp, #1600]
 1b0:	str	wzr, [sp, #1604]
 1b4:	mov	x0, #0xb8                  	// #184
 1b8:	bl	0 <_Znwm>
 1bc:	mov	x19, x0
 1c0:	add	x27, x0, #0x40
 1c4:	str	x27, [x0, #48]
 1c8:	str	xzr, [x0, #56]
 1cc:	strb	wzr, [x0, #64]
 1d0:	add	x28, x0, #0x60
 1d4:	str	x28, [x0, #80]
 1d8:	str	xzr, [x0, #88]
 1dc:	strb	wzr, [x0, #96]
 1e0:	str	xzr, [x0, #112]
 1e4:	str	xzr, [x0, #120]
 1e8:	str	xzr, [x0, #128]
 1ec:	str	xzr, [x0, #136]
 1f0:	str	xzr, [x0, #144]
 1f4:	str	xzr, [x0, #152]
 1f8:	str	xzr, [x0, #160]
 1fc:	str	xzr, [x0, #168]
 200:	str	xzr, [x0, #176]
 204:	mov	w0, #0x70                  	// #112
 208:	strb	w0, [x19, #4]
 20c:	ldrb	w0, [x19, #5]
 210:	orr	w0, w0, #0x3
 214:	and	w0, w0, #0xffffff83
 218:	strb	w0, [x19, #5]
 21c:	ldr	w0, [x19, #4]
 220:	and	w0, w0, #0xfffe7fff
 224:	str	w0, [x19, #4]
 228:	ldrb	w1, [x19, #40]
 22c:	ubfx	x0, x0, #16, #8
 230:	and	w1, w1, #0xffffff80
 234:	strb	w1, [x19, #40]
 238:	and	w0, w0, #0xffffffc1
 23c:	strb	w0, [x19, #6]
 240:	str	wzr, [x19, #8]
 244:	mov	w0, #0x6                   	// #6
 248:	str	w0, [x19, #12]
 24c:	mov	w0, #0xa                   	// #10
 250:	str	w0, [x19, #16]
 254:	str	w0, [x19, #20]
 258:	mov	w0, #0x32                  	// #50
 25c:	str	w0, [x19, #24]
 260:	mov	w0, #0x1                   	// #1
 264:	str	w0, [x19, #28]
 268:	mov	w1, #0x8                   	// #8
 26c:	str	w1, [x19, #32]
 270:	str	wzr, [x19, #36]
 274:	str	w0, [x19]
 278:	mov	x0, #0x10                  	// #16
 27c:	bl	0 <_Znwm>
 280:	mov	x22, x0
 284:	bl	0 <_ZN5clang13DiagnosticIDsC1Ev>
 288:	str	x22, [sp, #1760]
 28c:	ldr	w0, [x22]
 290:	add	w0, w0, #0x1
 294:	str	w0, [x22]
 298:	str	x19, [sp, #1768]
 29c:	ldr	w0, [x19]
 2a0:	add	w0, w0, #0x1
 2a4:	str	w0, [x19]
 2a8:	mov	w4, #0x0                   	// #0
 2ac:	add	x3, sp, #0x638
 2b0:	add	x2, sp, #0x6e8
 2b4:	add	x1, sp, #0x6e0
 2b8:	add	x0, sp, #0xa0
 2bc:	bl	0 <_ZN5clang17DiagnosticsEngineC1EN4llvm18IntrusiveRefCntPtrINS_13DiagnosticIDsEEENS2_INS_17DiagnosticOptionsEEEPNS_18DiagnosticConsumerEb>
 2c0:	ldr	x24, [sp, #1768]
 2c4:	cbz	x24, 2dc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x2dc>
 2c8:	ldr	w0, [x24]
 2cc:	cbz	w0, 670 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x670>
 2d0:	sub	w0, w0, #0x1
 2d4:	str	w0, [x24]
 2d8:	cbz	w0, 690 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x690>
 2dc:	ldr	x22, [sp, #1760]
 2e0:	cbz	x22, 2f8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x2f8>
 2e4:	ldr	w0, [x22]
 2e8:	cbz	w0, 788 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x788>
 2ec:	sub	w0, w0, #0x1
 2f0:	str	w0, [x22]
 2f4:	cbz	w0, 7a8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x7a8>
 2f8:	add	x1, sp, #0x648
 2fc:	add	x0, sp, #0xa0
 300:	bl	0 <_ZN5clang7tooling13newInvocationEPNS_17DiagnosticsEngineERKN4llvm11SmallVectorIPKcLj16EEE>
 304:	mov	x24, x0
 308:	add	x8, sp, #0x98
 30c:	mov	w4, #0x1                   	// #1
 310:	adrp	x2, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 314:	add	x2, x2, #0x0
 318:	mov	x3, #0x0                   	// #0
 31c:	ldr	x0, [x21]
 320:	ldr	x1, [x21, #8]
 324:	bl	0 <_ZN4llvm12MemoryBuffer12getMemBufferENS_9StringRefES1_b>
 328:	ldr	x21, [x24, #56]
 32c:	mov	x0, #0x0                   	// #0
 330:	cbz	x20, 33c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x33c>
 334:	mov	x0, x20
 338:	bl	0 <strlen>
 33c:	ldr	x1, [sp, #152]
 340:	str	xzr, [sp, #152]
 344:	str	x20, [sp, #120]
 348:	str	x0, [sp, #128]
 34c:	str	x1, [sp, #112]
 350:	ldr	x20, [x21, #272]
 354:	ldr	x0, [x21, #280]
 358:	cmp	x20, x0
 35c:	b.eq	7d4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x7d4>  // b.none
 360:	ldr	x1, [sp, #120]
 364:	cbz	x1, 7c0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x7c0>
 368:	ldr	x2, [sp, #128]
 36c:	add	x0, x20, #0x10
 370:	str	x0, [x20]
 374:	mov	w3, #0x0                   	// #0
 378:	add	x2, x1, x2
 37c:	mov	x0, x20
 380:	bl	0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 384:	ldr	x0, [sp, #112]
 388:	str	x0, [x20, #32]
 38c:	ldr	x0, [x21, #272]
 390:	add	x0, x0, #0x28
 394:	str	x0, [x21, #272]
 398:	mov	x0, #0x8                   	// #8
 39c:	bl	0 <_Znwm>
 3a0:	mov	x22, x0
 3a4:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 3a8:	ldr	x0, [x0]
 3ac:	add	x0, x0, #0x10
 3b0:	str	x0, [x22]
 3b4:	mov	x0, #0x50                  	// #80
 3b8:	bl	0 <_Znwm>
 3bc:	mov	x21, x0
 3c0:	mov	w26, #0x1                   	// #1
 3c4:	str	w26, [x0, #8]
 3c8:	str	w26, [x0, #12]
 3cc:	mov	x25, x0
 3d0:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 3d4:	ldr	x0, [x0]
 3d8:	add	x0, x0, #0x10
 3dc:	str	x0, [x25], #16
 3e0:	mov	x0, x25
 3e4:	bl	0 <_ZN5clang22PCHContainerOperationsC1Ev>
 3e8:	ldr	x0, [x22]
 3ec:	ldr	x0, [x0, #16]
 3f0:	str	x0, [sp, #104]
 3f4:	str	x24, [sp, #1776]
 3f8:	str	xzr, [sp, #1784]
 3fc:	mov	x0, #0x18                  	// #24
 400:	bl	0 <_Znwm>
 404:	mov	x20, x0
 408:	str	w26, [x0, #8]
 40c:	str	w26, [x0, #12]
 410:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 414:	ldr	x0, [x0]
 418:	add	x0, x0, #0x10
 41c:	str	x0, [x20]
 420:	str	x24, [x20, #16]
 424:	ldr	x0, [sp, #1784]
 428:	cmp	x0, x20
 42c:	b.eq	484 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x484>  // b.none
 430:	adrp	x0, 0 <__pthread_key_create>
 434:	ldr	x0, [x0]
 438:	cbz	x0, 7ec <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x7ec>
 43c:	add	x0, x20, #0x8
 440:	ldaxr	w1, [x0]
 444:	add	w1, w1, w26
 448:	stlxr	w2, w1, [x0]
 44c:	cbnz	w2, 440 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x440>
 450:	ldr	x24, [sp, #1784]
 454:	cbz	x24, 480 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x480>
 458:	adrp	x0, 0 <__pthread_key_create>
 45c:	ldr	x0, [x0]
 460:	cbz	x0, 7fc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x7fc>
 464:	add	x1, x24, #0x8
 468:	ldaxr	w0, [x1]
 46c:	sub	w2, w0, #0x1
 470:	stlxr	w3, w2, [x1]
 474:	cbnz	w3, 468 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x468>
 478:	cmp	w0, #0x1
 47c:	b.eq	80c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x80c>  // b.none
 480:	str	x20, [sp, #1784]
 484:	adrp	x0, 0 <__pthread_key_create>
 488:	ldr	x0, [x0]
 48c:	cbz	x0, 868 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x868>
 490:	add	x1, x20, #0x8
 494:	ldaxr	w0, [x1]
 498:	sub	w2, w0, #0x1
 49c:	stlxr	w3, w2, [x1]
 4a0:	cbnz	w3, 494 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x494>
 4a4:	cmp	w0, #0x1
 4a8:	b.eq	878 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x878>  // b.none
 4ac:	str	x25, [sp, #1792]
 4b0:	str	x21, [sp, #1800]
 4b4:	adrp	x0, 0 <__pthread_key_create>
 4b8:	ldr	x0, [x0]
 4bc:	cbz	x0, 8d4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x8d4>
 4c0:	add	x0, x21, #0x8
 4c4:	ldaxr	w1, [x0]
 4c8:	add	w1, w1, #0x1
 4cc:	stlxr	w2, w1, [x0]
 4d0:	cbnz	w2, 4c4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x4c4>
 4d4:	add	x4, sp, #0x638
 4d8:	add	x3, sp, #0x700
 4dc:	mov	x2, x23
 4e0:	add	x1, sp, #0x6f0
 4e4:	mov	x0, x22
 4e8:	ldr	x5, [sp, #104]
 4ec:	blr	x5
 4f0:	ldr	x20, [sp, #1800]
 4f4:	cbz	x20, 520 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x520>
 4f8:	adrp	x0, 0 <__pthread_key_create>
 4fc:	ldr	x0, [x0]
 500:	cbz	x0, 8e4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x8e4>
 504:	add	x1, x20, #0x8
 508:	ldaxr	w0, [x1]
 50c:	sub	w2, w0, #0x1
 510:	stlxr	w3, w2, [x1]
 514:	cbnz	w3, 508 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x508>
 518:	cmp	w0, #0x1
 51c:	b.eq	8f4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x8f4>  // b.none
 520:	ldr	x20, [sp, #1784]
 524:	cbz	x20, 550 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x550>
 528:	adrp	x0, 0 <__pthread_key_create>
 52c:	ldr	x0, [x0]
 530:	cbz	x0, 950 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x950>
 534:	add	x1, x20, #0x8
 538:	ldaxr	w0, [x1]
 53c:	sub	w2, w0, #0x1
 540:	stlxr	w3, w2, [x1]
 544:	cbnz	w3, 538 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x538>
 548:	cmp	w0, #0x1
 54c:	b.eq	960 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x960>  // b.none
 550:	adrp	x0, 0 <__pthread_key_create>
 554:	ldr	x0, [x0]
 558:	cbz	x0, 9bc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x9bc>
 55c:	add	x1, x21, #0x8
 560:	ldaxr	w0, [x1]
 564:	sub	w2, w0, #0x1
 568:	stlxr	w3, w2, [x1]
 56c:	cbnz	w3, 560 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x560>
 570:	cmp	w0, #0x1
 574:	b.eq	9cc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x9cc>  // b.none
 578:	ldr	x0, [x22]
 57c:	ldr	x1, [x0, #8]
 580:	mov	x0, x22
 584:	blr	x1
 588:	ldr	x0, [sp, #152]
 58c:	cbz	x0, 59c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x59c>
 590:	ldr	x1, [x0]
 594:	ldr	x1, [x1, #8]
 598:	blr	x1
 59c:	add	x0, sp, #0xa0
 5a0:	bl	0 <_ZN5clang17DiagnosticsEngineD1Ev>
 5a4:	ldr	w0, [x19]
 5a8:	cbz	w0, a28 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa28>
 5ac:	sub	w0, w0, #0x1
 5b0:	str	w0, [x19]
 5b4:	cbz	w0, a48 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa48>
 5b8:	adrp	x0, 0 <_ZTVN5clang20IgnoringDiagConsumerE>
 5bc:	ldr	x0, [x0]
 5c0:	add	x0, x0, #0x10
 5c4:	str	x0, [sp, #1592]
 5c8:	add	x0, sp, #0x638
 5cc:	bl	0 <_ZN5clang18DiagnosticConsumerD2Ev>
 5d0:	ldr	w0, [x23]
 5d4:	cbz	w0, b38 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xb38>
 5d8:	sub	w0, w0, #0x1
 5dc:	str	w0, [x23]
 5e0:	cbz	w0, b58 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xb58>
 5e4:	ldr	x0, [sp, #1608]
 5e8:	add	x1, sp, #0x658
 5ec:	cmp	x0, x1
 5f0:	b.eq	5f8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x5f8>  // b.none
 5f4:	bl	0 <free>
 5f8:	ldp	x19, x20, [sp, #16]
 5fc:	ldp	x21, x22, [sp, #32]
 600:	ldp	x23, x24, [sp, #48]
 604:	ldp	x25, x26, [sp, #64]
 608:	ldp	x27, x28, [sp, #80]
 60c:	ldp	x29, x30, [sp]
 610:	add	sp, sp, #0x710
 614:	ret
 618:	add	x0, sp, #0x648
 61c:	mov	x3, #0x8                   	// #8
 620:	mov	x2, #0x0                   	// #0
 624:	add	x1, x0, #0x10
 628:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
 62c:	b	ec <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xec>
 630:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 634:	add	x3, x3, #0x0
 638:	mov	w2, #0x43                  	// #67
 63c:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 640:	add	x1, x1, #0x0
 644:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 648:	add	x0, x0, #0x0
 64c:	bl	0 <__assert_fail>
 650:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 654:	add	x3, x3, #0x0
 658:	mov	w2, #0x62                  	// #98
 65c:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 660:	add	x1, x1, #0x0
 664:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 668:	add	x0, x0, #0x0
 66c:	bl	0 <__assert_fail>
 670:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 674:	add	x3, x3, #0x0
 678:	mov	w2, #0x50                  	// #80
 67c:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 680:	add	x1, x1, #0x0
 684:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 688:	add	x0, x0, #0x0
 68c:	bl	0 <__assert_fail>
 690:	ldr	x22, [x24, #160]
 694:	ldr	x25, [x24, #168]
 698:	cmp	x22, x25
 69c:	b.ne	728 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x728>  // b.any
 6a0:	ldr	x0, [x24, #160]
 6a4:	cbz	x0, 6ac <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6ac>
 6a8:	bl	0 <_ZdlPv>
 6ac:	ldr	x22, [x24, #136]
 6b0:	ldr	x25, [x24, #144]
 6b4:	cmp	x22, x25
 6b8:	b.ne	74c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x74c>  // b.any
 6bc:	ldr	x0, [x24, #136]
 6c0:	cbz	x0, 6c8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6c8>
 6c4:	bl	0 <_ZdlPv>
 6c8:	ldr	x22, [x24, #112]
 6cc:	ldr	x25, [x24, #120]
 6d0:	cmp	x22, x25
 6d4:	b.ne	770 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x770>  // b.any
 6d8:	ldr	x0, [x24, #112]
 6dc:	cbz	x0, 6e4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6e4>
 6e0:	bl	0 <_ZdlPv>
 6e4:	ldr	x0, [x24, #80]
 6e8:	add	x1, x24, #0x60
 6ec:	cmp	x0, x1
 6f0:	b.eq	6f8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6f8>  // b.none
 6f4:	bl	0 <_ZdlPv>
 6f8:	ldr	x0, [x24, #48]
 6fc:	add	x1, x24, #0x40
 700:	cmp	x0, x1
 704:	b.eq	70c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x70c>  // b.none
 708:	bl	0 <_ZdlPv>
 70c:	mov	x1, #0xb8                  	// #184
 710:	mov	x0, x24
 714:	bl	0 <_ZdlPvm>
 718:	b	2dc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x2dc>
 71c:	add	x22, x22, #0x20
 720:	cmp	x25, x22
 724:	b.eq	6a0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6a0>  // b.none
 728:	mov	x1, x22
 72c:	ldr	x0, [x1], #16
 730:	cmp	x0, x1
 734:	b.eq	71c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x71c>  // b.none
 738:	bl	0 <_ZdlPv>
 73c:	b	71c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x71c>
 740:	add	x22, x22, #0x20
 744:	cmp	x25, x22
 748:	b.eq	6bc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6bc>  // b.none
 74c:	mov	x1, x22
 750:	ldr	x0, [x1], #16
 754:	cmp	x0, x1
 758:	b.eq	740 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x740>  // b.none
 75c:	bl	0 <_ZdlPv>
 760:	b	740 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x740>
 764:	add	x22, x22, #0x20
 768:	cmp	x25, x22
 76c:	b.eq	6d8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x6d8>  // b.none
 770:	mov	x1, x22
 774:	ldr	x0, [x1], #16
 778:	cmp	x0, x1
 77c:	b.eq	764 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x764>  // b.none
 780:	bl	0 <_ZdlPv>
 784:	b	764 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x764>
 788:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 78c:	add	x3, x3, #0x0
 790:	mov	w2, #0x50                  	// #80
 794:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 798:	add	x1, x1, #0x0
 79c:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 7a0:	add	x0, x0, #0x0
 7a4:	bl	0 <__assert_fail>
 7a8:	mov	x0, x22
 7ac:	bl	0 <_ZN5clang13DiagnosticIDsD1Ev>
 7b0:	mov	x1, #0x10                  	// #16
 7b4:	mov	x0, x22
 7b8:	bl	0 <_ZdlPvm>
 7bc:	b	2f8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x2f8>
 7c0:	add	x0, x20, #0x10
 7c4:	str	x0, [x20]
 7c8:	str	xzr, [x20, #8]
 7cc:	strb	wzr, [x20, #16]
 7d0:	b	384 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x384>
 7d4:	add	x3, sp, #0x70
 7d8:	add	x2, sp, #0x78
 7dc:	mov	x1, x20
 7e0:	add	x0, x21, #0x108
 7e4:	bl	0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 7e8:	b	398 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x398>
 7ec:	ldr	w0, [x20, #8]
 7f0:	add	w0, w0, #0x1
 7f4:	str	w0, [x20, #8]
 7f8:	b	450 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x450>
 7fc:	ldr	w0, [x24, #8]
 800:	sub	w1, w0, #0x1
 804:	str	w1, [x24, #8]
 808:	b	478 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x478>
 80c:	ldr	x0, [x24]
 810:	ldr	x1, [x0, #16]
 814:	mov	x0, x24
 818:	blr	x1
 81c:	adrp	x0, 0 <__pthread_key_create>
 820:	ldr	x0, [x0]
 824:	cbz	x0, 858 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x858>
 828:	add	x1, x24, #0xc
 82c:	ldaxr	w0, [x1]
 830:	sub	w2, w0, #0x1
 834:	stlxr	w3, w2, [x1]
 838:	cbnz	w3, 82c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x82c>
 83c:	cmp	w0, #0x1
 840:	b.ne	480 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x480>  // b.any
 844:	ldr	x0, [x24]
 848:	ldr	x1, [x0, #24]
 84c:	mov	x0, x24
 850:	blr	x1
 854:	b	480 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x480>
 858:	ldr	w0, [x24, #12]
 85c:	sub	w1, w0, #0x1
 860:	str	w1, [x24, #12]
 864:	b	83c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x83c>
 868:	ldr	w0, [x20, #8]
 86c:	sub	w1, w0, #0x1
 870:	str	w1, [x20, #8]
 874:	b	4a4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x4a4>
 878:	ldr	x0, [x20]
 87c:	ldr	x1, [x0, #16]
 880:	mov	x0, x20
 884:	blr	x1
 888:	adrp	x0, 0 <__pthread_key_create>
 88c:	ldr	x0, [x0]
 890:	cbz	x0, 8c4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x8c4>
 894:	add	x1, x20, #0xc
 898:	ldaxr	w0, [x1]
 89c:	sub	w2, w0, #0x1
 8a0:	stlxr	w3, w2, [x1]
 8a4:	cbnz	w3, 898 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x898>
 8a8:	cmp	w0, #0x1
 8ac:	b.ne	4ac <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x4ac>  // b.any
 8b0:	ldr	x0, [x20]
 8b4:	ldr	x1, [x0, #24]
 8b8:	mov	x0, x20
 8bc:	blr	x1
 8c0:	b	4ac <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x4ac>
 8c4:	ldr	w0, [x20, #12]
 8c8:	sub	w1, w0, #0x1
 8cc:	str	w1, [x20, #12]
 8d0:	b	8a8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x8a8>
 8d4:	ldr	w0, [x21, #8]
 8d8:	add	w0, w0, #0x1
 8dc:	str	w0, [x21, #8]
 8e0:	b	4d4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x4d4>
 8e4:	ldr	w0, [x20, #8]
 8e8:	sub	w1, w0, #0x1
 8ec:	str	w1, [x20, #8]
 8f0:	b	518 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x518>
 8f4:	ldr	x0, [x20]
 8f8:	ldr	x1, [x0, #16]
 8fc:	mov	x0, x20
 900:	blr	x1
 904:	adrp	x0, 0 <__pthread_key_create>
 908:	ldr	x0, [x0]
 90c:	cbz	x0, 940 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x940>
 910:	add	x1, x20, #0xc
 914:	ldaxr	w0, [x1]
 918:	sub	w2, w0, #0x1
 91c:	stlxr	w3, w2, [x1]
 920:	cbnz	w3, 914 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x914>
 924:	cmp	w0, #0x1
 928:	b.ne	520 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x520>  // b.any
 92c:	ldr	x0, [x20]
 930:	ldr	x1, [x0, #24]
 934:	mov	x0, x20
 938:	blr	x1
 93c:	b	520 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x520>
 940:	ldr	w0, [x20, #12]
 944:	sub	w1, w0, #0x1
 948:	str	w1, [x20, #12]
 94c:	b	924 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x924>
 950:	ldr	w0, [x20, #8]
 954:	sub	w1, w0, #0x1
 958:	str	w1, [x20, #8]
 95c:	b	548 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x548>
 960:	ldr	x0, [x20]
 964:	ldr	x1, [x0, #16]
 968:	mov	x0, x20
 96c:	blr	x1
 970:	adrp	x0, 0 <__pthread_key_create>
 974:	ldr	x0, [x0]
 978:	cbz	x0, 9ac <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x9ac>
 97c:	add	x1, x20, #0xc
 980:	ldaxr	w0, [x1]
 984:	sub	w2, w0, #0x1
 988:	stlxr	w3, w2, [x1]
 98c:	cbnz	w3, 980 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x980>
 990:	cmp	w0, #0x1
 994:	b.ne	550 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x550>  // b.any
 998:	ldr	x0, [x20]
 99c:	ldr	x1, [x0, #24]
 9a0:	mov	x0, x20
 9a4:	blr	x1
 9a8:	b	550 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x550>
 9ac:	ldr	w0, [x20, #12]
 9b0:	sub	w1, w0, #0x1
 9b4:	str	w1, [x20, #12]
 9b8:	b	990 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x990>
 9bc:	ldr	w0, [x21, #8]
 9c0:	sub	w1, w0, #0x1
 9c4:	str	w1, [x21, #8]
 9c8:	b	570 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x570>
 9cc:	ldr	x0, [x21]
 9d0:	ldr	x1, [x0, #16]
 9d4:	mov	x0, x21
 9d8:	blr	x1
 9dc:	adrp	x0, 0 <__pthread_key_create>
 9e0:	ldr	x0, [x0]
 9e4:	cbz	x0, a18 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa18>
 9e8:	add	x1, x21, #0xc
 9ec:	ldaxr	w0, [x1]
 9f0:	sub	w2, w0, #0x1
 9f4:	stlxr	w3, w2, [x1]
 9f8:	cbnz	w3, 9ec <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x9ec>
 9fc:	cmp	w0, #0x1
 a00:	b.ne	578 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x578>  // b.any
 a04:	ldr	x0, [x21]
 a08:	ldr	x1, [x0, #24]
 a0c:	mov	x0, x21
 a10:	blr	x1
 a14:	b	578 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x578>
 a18:	ldr	w0, [x21, #12]
 a1c:	sub	w1, w0, #0x1
 a20:	str	w1, [x21, #12]
 a24:	b	9fc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x9fc>
 a28:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 a2c:	add	x3, x3, #0x0
 a30:	mov	w2, #0x50                  	// #80
 a34:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 a38:	add	x1, x1, #0x0
 a3c:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 a40:	add	x0, x0, #0x0
 a44:	bl	0 <__assert_fail>
 a48:	ldr	x20, [x19, #160]
 a4c:	ldr	x21, [x19, #168]
 a50:	cmp	x20, x21
 a54:	b.ne	ad8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xad8>  // b.any
 a58:	ldr	x0, [x19, #160]
 a5c:	cbz	x0, a64 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa64>
 a60:	bl	0 <_ZdlPv>
 a64:	ldr	x20, [x19, #136]
 a68:	ldr	x21, [x19, #144]
 a6c:	cmp	x20, x21
 a70:	b.ne	afc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xafc>  // b.any
 a74:	ldr	x0, [x19, #136]
 a78:	cbz	x0, a80 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa80>
 a7c:	bl	0 <_ZdlPv>
 a80:	ldr	x20, [x19, #112]
 a84:	ldr	x21, [x19, #120]
 a88:	cmp	x20, x21
 a8c:	b.ne	b20 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xb20>  // b.any
 a90:	ldr	x0, [x19, #112]
 a94:	cbz	x0, a9c <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa9c>
 a98:	bl	0 <_ZdlPv>
 a9c:	ldr	x0, [x19, #80]
 aa0:	cmp	x28, x0
 aa4:	b.eq	aac <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xaac>  // b.none
 aa8:	bl	0 <_ZdlPv>
 aac:	ldr	x0, [x19, #48]
 ab0:	cmp	x27, x0
 ab4:	b.eq	abc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xabc>  // b.none
 ab8:	bl	0 <_ZdlPv>
 abc:	mov	x1, #0xb8                  	// #184
 ac0:	mov	x0, x19
 ac4:	bl	0 <_ZdlPvm>
 ac8:	b	5b8 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x5b8>
 acc:	add	x20, x20, #0x20
 ad0:	cmp	x21, x20
 ad4:	b.eq	a58 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa58>  // b.none
 ad8:	mov	x1, x20
 adc:	ldr	x0, [x1], #16
 ae0:	cmp	x0, x1
 ae4:	b.eq	acc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xacc>  // b.none
 ae8:	bl	0 <_ZdlPv>
 aec:	b	acc <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xacc>
 af0:	add	x20, x20, #0x20
 af4:	cmp	x21, x20
 af8:	b.eq	a74 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa74>  // b.none
 afc:	mov	x1, x20
 b00:	ldr	x0, [x1], #16
 b04:	cmp	x0, x1
 b08:	b.eq	af0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xaf0>  // b.none
 b0c:	bl	0 <_ZdlPv>
 b10:	b	af0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xaf0>
 b14:	add	x20, x20, #0x20
 b18:	cmp	x21, x20
 b1c:	b.eq	a90 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xa90>  // b.none
 b20:	mov	x1, x20
 b24:	ldr	x0, [x1], #16
 b28:	cmp	x0, x1
 b2c:	b.eq	b14 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xb14>  // b.none
 b30:	bl	0 <_ZdlPv>
 b34:	b	b14 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0xb14>
 b38:	adrp	x3, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 b3c:	add	x3, x3, #0x0
 b40:	mov	w2, #0x50                  	// #80
 b44:	adrp	x1, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 b48:	add	x1, x1, #0x0
 b4c:	adrp	x0, 0 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE>
 b50:	add	x0, x0, #0x0
 b54:	bl	0 <__assert_fail>
 b58:	mov	x0, x23
 b5c:	bl	0 <_ZN5clang11FileManagerD1Ev>
 b60:	mov	x1, #0x298                 	// #664
 b64:	mov	x0, x23
 b68:	bl	0 <_ZdlPvm>
 b6c:	b	5e4 <_ZN12clang_fuzzer9HandleCXXERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcRKSt6vectorIS9_SaIS9_EE+0x5e4>

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EED2Ev:

0000000000000000 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EED1Ev>:
   0:	ret

Disassembly of section .text._ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	mov	x0, #0x0                   	// #0
   4:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZdlPv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv:

0000000000000000 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	bl	0 <_ZdlPv>
   c:	ldp	x29, x30, [sp], #16
  10:	ret

Disassembly of section .text._ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x18                  	// #24
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EED0Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	mov	x1, #0x50                  	// #80
   c:	bl	0 <_ZdlPvm>
  10:	ldp	x29, x30, [sp], #16
  14:	ret

Disassembly of section .text._ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactory6createEv:

0000000000000000 <_ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactory6createEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x8
  10:	mov	x0, #0xc0                  	// #192
  14:	bl	0 <_Znwm>
  18:	mov	x20, x0
  1c:	mov	x1, #0x0                   	// #0
  20:	bl	0 <_ZN5clang13EmitObjActionC1EPN4llvm11LLVMContextE>
  24:	str	x20, [x19]
  28:	mov	x0, x19
  2c:	ldp	x19, x20, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD2Ev:

0000000000000000 <_ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD1Ev>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x1, 0 <_ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD1Ev>
   c:	ldr	x1, [x1]
  10:	add	x1, x1, #0x10
  14:	str	x1, [x0]
  18:	bl	0 <_ZN5clang7tooling21FrontendActionFactoryD2Ev>
  1c:	ldp	x29, x30, [sp], #16
  20:	ret

Disassembly of section .text._ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD0Ev:

0000000000000000 <_ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD0Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	mov	x19, x0
  10:	adrp	x1, 0 <_ZZN5clang7tooling24newFrontendActionFactoryINS_13EmitObjActionEEESt10unique_ptrINS0_21FrontendActionFactoryESt14default_deleteIS4_EEvEN27SimpleFrontendActionFactoryD0Ev>
  14:	ldr	x1, [x1]
  18:	add	x1, x1, #0x10
  1c:	str	x1, [x0]
  20:	bl	0 <_ZN5clang7tooling21FrontendActionFactoryD2Ev>
  24:	mov	x1, #0x8                   	// #8
  28:	mov	x0, x19
  2c:	bl	0 <_ZdlPvm>
  30:	ldr	x19, [sp, #16]
  34:	ldp	x29, x30, [sp], #32
  38:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	add	x19, x0, #0x10
  10:	adrp	x0, 0 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info>
  14:	ldr	x0, [x0]
  18:	cmp	x1, x0
  1c:	b.eq	30 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info+0x30>  // b.none
  20:	mov	x0, x1
  24:	bl	0 <_ZNSt19_Sp_make_shared_tag5_S_eqERKSt9type_info>
  28:	ands	w0, w0, #0xff
  2c:	csel	x19, x19, xzr, ne  // ne = any
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret

Disassembly of section .text._ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	mov	x19, x0
  10:	ldr	w0, [x0, #60]
  14:	cbz	w0, 7c <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x7c>
  18:	stp	x21, x22, [sp, #32]
  1c:	ldr	w21, [x19, #56]
  20:	cbz	w21, ac <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xac>
  24:	sub	w21, w21, #0x1
  28:	add	x21, x21, #0x1
  2c:	lsl	x21, x21, #3
  30:	mov	x22, #0x0                   	// #0
  34:	b	4c <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x4c>
  38:	mov	x0, x20
  3c:	bl	0 <free>
  40:	add	x22, x22, #0x8
  44:	cmp	x22, x21
  48:	b.eq	78 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x78>  // b.none
  4c:	ldr	x0, [x19, #48]
  50:	ldr	x20, [x0, x22]
  54:	cmp	x20, #0x0
  58:	ccmn	x20, #0x8, #0x4, ne  // ne = any
  5c:	b.eq	40 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x40>  // b.none
  60:	ldr	x0, [x20, #8]
  64:	cbz	x0, 38 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x38>
  68:	ldr	x1, [x0]
  6c:	ldr	x1, [x1, #8]
  70:	blr	x1
  74:	b	38 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x38>
  78:	ldp	x21, x22, [sp, #32]
  7c:	ldr	x0, [x19, #48]
  80:	bl	0 <free>
  84:	ldr	w0, [x19, #28]
  88:	cbz	w0, f8 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xf8>
  8c:	stp	x21, x22, [sp, #32]
  90:	ldr	w21, [x19, #24]
  94:	cbz	w21, 10c <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x10c>
  98:	sub	w21, w21, #0x1
  9c:	add	x21, x21, #0x1
  a0:	lsl	x21, x21, #3
  a4:	mov	x22, #0x0                   	// #0
  a8:	b	c8 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xc8>
  ac:	ldp	x21, x22, [sp, #32]
  b0:	b	7c <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x7c>
  b4:	mov	x0, x20
  b8:	bl	0 <free>
  bc:	add	x22, x22, #0x8
  c0:	cmp	x21, x22
  c4:	b.eq	f4 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xf4>  // b.none
  c8:	ldr	x0, [x19, #16]
  cc:	ldr	x20, [x0, x22]
  d0:	cmp	x20, #0x0
  d4:	ccmn	x20, #0x8, #0x4, ne  // ne = any
  d8:	b.eq	bc <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xbc>  // b.none
  dc:	ldr	x0, [x20, #8]
  e0:	cbz	x0, b4 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xb4>
  e4:	ldr	x1, [x0]
  e8:	ldr	x1, [x1, #8]
  ec:	blr	x1
  f0:	b	b4 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xb4>
  f4:	ldp	x21, x22, [sp, #32]
  f8:	ldr	x0, [x19, #16]
  fc:	bl	0 <free>
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x29, x30, [sp], #48
 108:	ret
 10c:	ldp	x21, x22, [sp, #32]
 110:	b	f8 <_ZNSt23_Sp_counted_ptr_inplaceIN5clang22PCHContainerOperationsESaIS1_ELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0xf8>

Disassembly of section .text._ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED2Ev:

0000000000000000 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	mov	x19, x0
  14:	ldr	x21, [x0, #16]
  18:	cbz	x21, 94 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x94>
  1c:	str	x23, [sp, #48]
  20:	b	74 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x74>
  24:	bl	0 <_ZdlPv>
  28:	add	x22, x22, #0x20
  2c:	cmp	x23, x22
  30:	b.eq	48 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x48>  // b.none
  34:	mov	x1, x22
  38:	ldr	x0, [x1], #16
  3c:	cmp	x0, x1
  40:	b.ne	24 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x24>  // b.any
  44:	b	28 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x28>
  48:	ldr	x0, [x20, #40]
  4c:	cbz	x0, 54 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x54>
  50:	bl	0 <_ZdlPv>
  54:	ldr	x0, [x20, #8]
  58:	add	x1, x20, #0x18
  5c:	cmp	x0, x1
  60:	b.eq	68 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x68>  // b.none
  64:	bl	0 <_ZdlPv>
  68:	mov	x0, x20
  6c:	bl	0 <_ZdlPv>
  70:	cbz	x21, 90 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x90>
  74:	mov	x20, x21
  78:	ldr	x21, [x21]
  7c:	ldr	x22, [x20, #40]
  80:	ldr	x23, [x20, #48]
  84:	cmp	x22, x23
  88:	b.ne	34 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x34>  // b.any
  8c:	b	48 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0x48>
  90:	ldr	x23, [sp, #48]
  94:	ldr	x2, [x19, #8]
  98:	lsl	x2, x2, #3
  9c:	mov	w1, #0x0                   	// #0
  a0:	ldr	x0, [x19]
  a4:	bl	0 <memset>
  a8:	str	xzr, [x19, #24]
  ac:	str	xzr, [x19, #16]
  b0:	ldr	x0, [x19], #48
  b4:	cmp	x0, x19
  b8:	b.eq	c0 <_ZNSt10_HashtableINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_St6vectorIS5_SaIS5_EEESaISB_ENSt8__detail10_Select1stESt8equal_toIS5_ESt4hashIS5_ENSD_18_Mod_range_hashingENSD_20_Default_ranged_hashENSD_20_Prime_rehash_policyENSD_17_Hashtable_traitsILb1ELb0ELb1EEEED1Ev+0xc0>  // b.none
  bc:	bl	0 <_ZdlPv>
  c0:	ldp	x19, x20, [sp, #16]
  c4:	ldp	x21, x22, [sp, #32]
  c8:	ldp	x29, x30, [sp], #64
  cc:	ret

Disassembly of section .text._ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E:

0000000000000000 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	mov	x21, x0
  14:	mov	x19, x1
  18:	cbnz	x1, 3c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x3c>
  1c:	ldp	x19, x20, [sp, #16]
  20:	ldr	x21, [sp, #32]
  24:	ldp	x29, x30, [sp], #48
  28:	ret
  2c:	bl	0 <_ZdlPv>
  30:	mov	x0, x20
  34:	bl	0 <_ZdlPv>
  38:	cbz	x19, 1c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x1c>
  3c:	ldr	x1, [x19, #24]
  40:	mov	x0, x21
  44:	bl	0 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E>
  48:	mov	x20, x19
  4c:	ldr	x19, [x19, #16]
  50:	ldr	x0, [x20, #64]
  54:	add	x1, x20, #0x50
  58:	cmp	x0, x1
  5c:	b.eq	64 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x64>  // b.none
  60:	bl	0 <_ZdlPv>
  64:	ldr	x0, [x20, #32]
  68:	add	x1, x20, #0x30
  6c:	cmp	x0, x1
  70:	b.ne	2c <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x2c>  // b.any
  74:	b	30 <_ZNSt8_Rb_treeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt4pairIKS5_S5_ESt10_Select1stIS8_ESt4lessIS5_ESaIS8_EE8_M_eraseEPSt13_Rb_tree_nodeIS8_E+0x30>

Disassembly of section .text._ZN5clang18CompilerInvocationD2Ev:

0000000000000000 <_ZN5clang18CompilerInvocationD1Ev>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	mov	x19, x0
  18:	ldr	x0, [x0, #2392]
  1c:	add	x1, x19, #0x968
  20:	cmp	x0, x1
  24:	b.eq	2c <_ZN5clang18CompilerInvocationD1Ev+0x2c>  // b.none
  28:	bl	0 <_ZdlPv>
  2c:	ldr	x0, [x19, #2360]
  30:	add	x1, x19, #0x948
  34:	cmp	x0, x1
  38:	b.eq	40 <_ZN5clang18CompilerInvocationD1Ev+0x40>  // b.none
  3c:	bl	0 <_ZdlPv>
  40:	ldr	x0, [x19, #2328]
  44:	add	x1, x19, #0x928
  48:	cmp	x0, x1
  4c:	b.eq	54 <_ZN5clang18CompilerInvocationD1Ev+0x54>  // b.none
  50:	bl	0 <_ZdlPv>
  54:	ldr	x20, [x19, #2304]
  58:	ldr	x21, [x19, #2312]
  5c:	cmp	x20, x21
  60:	b.ne	110 <_ZN5clang18CompilerInvocationD1Ev+0x110>  // b.any
  64:	ldr	x0, [x19, #2304]
  68:	cbz	x0, 70 <_ZN5clang18CompilerInvocationD1Ev+0x70>
  6c:	bl	0 <_ZdlPv>
  70:	ldr	x20, [x19, #2280]
  74:	ldr	x21, [x19, #2288]
  78:	cmp	x20, x21
  7c:	b.ne	130 <_ZN5clang18CompilerInvocationD1Ev+0x130>  // b.any
  80:	ldr	x0, [x19, #2280]
  84:	cbz	x0, 8c <_ZN5clang18CompilerInvocationD1Ev+0x8c>
  88:	bl	0 <_ZdlPv>
  8c:	ldr	x20, [x19, #2256]
  90:	ldr	x21, [x19, #2264]
  94:	cmp	x20, x21
  98:	b.ne	154 <_ZN5clang18CompilerInvocationD1Ev+0x154>  // b.any
  9c:	ldr	x0, [x19, #2256]
  a0:	cbz	x0, a8 <_ZN5clang18CompilerInvocationD1Ev+0xa8>
  a4:	bl	0 <_ZdlPv>
  a8:	ldr	x20, [x19, #2232]
  ac:	ldr	x21, [x19, #2240]
  b0:	cmp	x20, x21
  b4:	b.ne	17c <_ZN5clang18CompilerInvocationD1Ev+0x17c>  // b.any
  b8:	ldr	x0, [x19, #2232]
  bc:	cbz	x0, c4 <_ZN5clang18CompilerInvocationD1Ev+0xc4>
  c0:	bl	0 <_ZdlPv>
  c4:	ldr	x20, [x19, #2208]
  c8:	ldr	x21, [x19, #2216]
  cc:	cmp	x20, x21
  d0:	b.ne	1a0 <_ZN5clang18CompilerInvocationD1Ev+0x1a0>  // b.any
  d4:	ldr	x0, [x19, #2208]
  d8:	cbz	x0, e0 <_ZN5clang18CompilerInvocationD1Ev+0xe0>
  dc:	bl	0 <_ZdlPv>
  e0:	ldr	x21, [x19, #2184]
  e4:	ldr	x23, [x19, #2192]
  e8:	cmp	x21, x23
  ec:	b.eq	24c <_ZN5clang18CompilerInvocationD1Ev+0x24c>  // b.none
  f0:	adrp	x22, 0 <__pthread_key_create>
  f4:	ldr	x24, [x22]
  f8:	mov	x22, x24
  fc:	b	1dc <_ZN5clang18CompilerInvocationD1Ev+0x1dc>
 100:	bl	0 <_ZdlPv>
 104:	add	x20, x20, #0x20
 108:	cmp	x21, x20
 10c:	b.eq	64 <_ZN5clang18CompilerInvocationD1Ev+0x64>  // b.none
 110:	mov	x1, x20
 114:	ldr	x0, [x1], #16
 118:	cmp	x0, x1
 11c:	b.ne	100 <_ZN5clang18CompilerInvocationD1Ev+0x100>  // b.any
 120:	b	104 <_ZN5clang18CompilerInvocationD1Ev+0x104>
 124:	add	x20, x20, #0x20
 128:	cmp	x21, x20
 12c:	b.eq	80 <_ZN5clang18CompilerInvocationD1Ev+0x80>  // b.none
 130:	mov	x1, x20
 134:	ldr	x0, [x1], #16
 138:	cmp	x0, x1
 13c:	b.eq	124 <_ZN5clang18CompilerInvocationD1Ev+0x124>  // b.none
 140:	bl	0 <_ZdlPv>
 144:	b	124 <_ZN5clang18CompilerInvocationD1Ev+0x124>
 148:	add	x20, x20, #0x20
 14c:	cmp	x21, x20
 150:	b.eq	9c <_ZN5clang18CompilerInvocationD1Ev+0x9c>  // b.none
 154:	mov	x1, x20
 158:	ldr	x0, [x1], #16
 15c:	cmp	x0, x1
 160:	b.eq	148 <_ZN5clang18CompilerInvocationD1Ev+0x148>  // b.none
 164:	bl	0 <_ZdlPv>
 168:	b	148 <_ZN5clang18CompilerInvocationD1Ev+0x148>
 16c:	bl	0 <_ZdlPv>
 170:	add	x20, x20, #0x20
 174:	cmp	x21, x20
 178:	b.eq	b8 <_ZN5clang18CompilerInvocationD1Ev+0xb8>  // b.none
 17c:	mov	x1, x20
 180:	ldr	x0, [x1], #16
 184:	cmp	x0, x1
 188:	b.ne	16c <_ZN5clang18CompilerInvocationD1Ev+0x16c>  // b.any
 18c:	b	170 <_ZN5clang18CompilerInvocationD1Ev+0x170>
 190:	bl	0 <_ZdlPv>
 194:	add	x20, x20, #0x20
 198:	cmp	x21, x20
 19c:	b.eq	d4 <_ZN5clang18CompilerInvocationD1Ev+0xd4>  // b.none
 1a0:	mov	x1, x20
 1a4:	ldr	x0, [x1], #16
 1a8:	cmp	x0, x1
 1ac:	b.ne	190 <_ZN5clang18CompilerInvocationD1Ev+0x190>  // b.any
 1b0:	b	194 <_ZN5clang18CompilerInvocationD1Ev+0x194>
 1b4:	add	x1, x20, #0x8
 1b8:	ldaxr	w0, [x1]
 1bc:	sub	w2, w0, #0x1
 1c0:	stlxr	w3, w2, [x1]
 1c4:	cbnz	w3, 1b8 <_ZN5clang18CompilerInvocationD1Ev+0x1b8>
 1c8:	cmp	w0, #0x1
 1cc:	b.eq	1f8 <_ZN5clang18CompilerInvocationD1Ev+0x1f8>  // b.none
 1d0:	add	x21, x21, #0x10
 1d4:	cmp	x23, x21
 1d8:	b.eq	24c <_ZN5clang18CompilerInvocationD1Ev+0x24c>  // b.none
 1dc:	ldr	x20, [x21, #8]
 1e0:	cbz	x20, 1d0 <_ZN5clang18CompilerInvocationD1Ev+0x1d0>
 1e4:	cbnz	x24, 1b4 <_ZN5clang18CompilerInvocationD1Ev+0x1b4>
 1e8:	ldr	w0, [x20, #8]
 1ec:	sub	w1, w0, #0x1
 1f0:	str	w1, [x20, #8]
 1f4:	b	1c8 <_ZN5clang18CompilerInvocationD1Ev+0x1c8>
 1f8:	ldr	x0, [x20]
 1fc:	ldr	x1, [x0, #16]
 200:	mov	x0, x20
 204:	blr	x1
 208:	cbz	x22, 23c <_ZN5clang18CompilerInvocationD1Ev+0x23c>
 20c:	add	x1, x20, #0xc
 210:	ldaxr	w0, [x1]
 214:	sub	w2, w0, #0x1
 218:	stlxr	w3, w2, [x1]
 21c:	cbnz	w3, 210 <_ZN5clang18CompilerInvocationD1Ev+0x210>
 220:	cmp	w0, #0x1
 224:	b.ne	1d0 <_ZN5clang18CompilerInvocationD1Ev+0x1d0>  // b.any
 228:	ldr	x0, [x20]
 22c:	ldr	x1, [x0, #24]
 230:	mov	x0, x20
 234:	blr	x1
 238:	b	1d0 <_ZN5clang18CompilerInvocationD1Ev+0x1d0>
 23c:	ldr	w0, [x20, #12]
 240:	sub	w1, w0, #0x1
 244:	str	w1, [x20, #12]
 248:	b	220 <_ZN5clang18CompilerInvocationD1Ev+0x220>
 24c:	ldr	x0, [x19, #2184]
 250:	cbz	x0, 258 <_ZN5clang18CompilerInvocationD1Ev+0x258>
 254:	bl	0 <_ZdlPv>
 258:	ldr	x20, [x19, #2160]
 25c:	ldr	x21, [x19, #2168]
 260:	cmp	x20, x21
 264:	b.ne	83c <_ZN5clang18CompilerInvocationD1Ev+0x83c>  // b.any
 268:	ldr	x0, [x19, #2160]
 26c:	cbz	x0, 274 <_ZN5clang18CompilerInvocationD1Ev+0x274>
 270:	bl	0 <_ZdlPv>
 274:	ldr	x20, [x19, #2136]
 278:	ldr	x21, [x19, #2144]
 27c:	cmp	x20, x21
 280:	b.ne	860 <_ZN5clang18CompilerInvocationD1Ev+0x860>  // b.any
 284:	ldr	x0, [x19, #2136]
 288:	cbz	x0, 290 <_ZN5clang18CompilerInvocationD1Ev+0x290>
 28c:	bl	0 <_ZdlPv>
 290:	add	x0, x19, #0x820
 294:	bl	0 <_ZN5clang18CompilerInvocationD1Ev>
 298:	ldr	x0, [x19, #2048]
 29c:	add	x1, x19, #0x810
 2a0:	cmp	x0, x1
 2a4:	b.eq	2ac <_ZN5clang18CompilerInvocationD1Ev+0x2ac>  // b.none
 2a8:	bl	0 <_ZdlPv>
 2ac:	ldr	x0, [x19, #2000]
 2b0:	add	x1, x19, #0x7e0
 2b4:	cmp	x0, x1
 2b8:	b.eq	2c0 <_ZN5clang18CompilerInvocationD1Ev+0x2c0>  // b.none
 2bc:	bl	0 <_ZdlPv>
 2c0:	ldr	x0, [x19, #1968]
 2c4:	add	x1, x19, #0x7c0
 2c8:	cmp	x0, x1
 2cc:	b.eq	2d4 <_ZN5clang18CompilerInvocationD1Ev+0x2d4>  // b.none
 2d0:	bl	0 <_ZdlPv>
 2d4:	ldr	x0, [x19, #1936]
 2d8:	add	x1, x19, #0x7a0
 2dc:	cmp	x0, x1
 2e0:	b.eq	2e8 <_ZN5clang18CompilerInvocationD1Ev+0x2e8>  // b.none
 2e4:	bl	0 <_ZdlPv>
 2e8:	ldr	x0, [x19, #1904]
 2ec:	add	x1, x19, #0x780
 2f0:	cmp	x0, x1
 2f4:	b.eq	2fc <_ZN5clang18CompilerInvocationD1Ev+0x2fc>  // b.none
 2f8:	bl	0 <_ZdlPv>
 2fc:	ldr	x0, [x19, #1872]
 300:	add	x1, x19, #0x760
 304:	cmp	x0, x1
 308:	b.eq	310 <_ZN5clang18CompilerInvocationD1Ev+0x310>  // b.none
 30c:	bl	0 <_ZdlPv>
 310:	ldr	x21, [x19, #1856]
 314:	ldr	w20, [x19, #1864]
 318:	add	x20, x20, x20, lsl #1
 31c:	add	x20, x21, x20, lsl #4
 320:	cmp	x21, x20
 324:	b.ne	880 <_ZN5clang18CompilerInvocationD1Ev+0x880>  // b.any
 328:	ldr	x0, [x19, #1856]
 32c:	add	x1, x19, #0x750
 330:	cmp	x0, x1
 334:	b.eq	33c <_ZN5clang18CompilerInvocationD1Ev+0x33c>  // b.none
 338:	bl	0 <free>
 33c:	ldr	x0, [x19, #1824]
 340:	add	x1, x19, #0x730
 344:	cmp	x0, x1
 348:	b.eq	350 <_ZN5clang18CompilerInvocationD1Ev+0x350>  // b.none
 34c:	bl	0 <_ZdlPv>
 350:	ldr	x0, [x19, #1792]
 354:	add	x1, x19, #0x710
 358:	cmp	x0, x1
 35c:	b.eq	364 <_ZN5clang18CompilerInvocationD1Ev+0x364>  // b.none
 360:	bl	0 <_ZdlPv>
 364:	ldr	x0, [x19, #1760]
 368:	add	x1, x19, #0x6f0
 36c:	cmp	x0, x1
 370:	b.eq	378 <_ZN5clang18CompilerInvocationD1Ev+0x378>  // b.none
 374:	bl	0 <_ZdlPv>
 378:	ldr	x0, [x19, #1704]
 37c:	add	x1, x19, #0x6b8
 380:	cmp	x0, x1
 384:	b.eq	38c <_ZN5clang18CompilerInvocationD1Ev+0x38c>  // b.none
 388:	bl	0 <_ZdlPv>
 38c:	ldr	x0, [x19, #1672]
 390:	add	x1, x19, #0x698
 394:	cmp	x0, x1
 398:	b.eq	3a0 <_ZN5clang18CompilerInvocationD1Ev+0x3a0>  // b.none
 39c:	bl	0 <_ZdlPv>
 3a0:	ldr	x0, [x19, #1640]
 3a4:	add	x1, x19, #0x678
 3a8:	cmp	x0, x1
 3ac:	b.eq	3b4 <_ZN5clang18CompilerInvocationD1Ev+0x3b4>  // b.none
 3b0:	bl	0 <_ZdlPv>
 3b4:	ldr	x0, [x19, #1608]
 3b8:	add	x1, x19, #0x658
 3bc:	cmp	x0, x1
 3c0:	b.eq	3c8 <_ZN5clang18CompilerInvocationD1Ev+0x3c8>  // b.none
 3c4:	bl	0 <_ZdlPv>
 3c8:	ldr	x20, [x19, #1584]
 3cc:	ldr	x21, [x19, #1592]
 3d0:	cmp	x20, x21
 3d4:	b.ne	8a8 <_ZN5clang18CompilerInvocationD1Ev+0x8a8>  // b.any
 3d8:	ldr	x0, [x19, #1584]
 3dc:	cbz	x0, 3e4 <_ZN5clang18CompilerInvocationD1Ev+0x3e4>
 3e0:	bl	0 <_ZdlPv>
 3e4:	ldr	x20, [x19, #1560]
 3e8:	ldr	x21, [x19, #1568]
 3ec:	cmp	x20, x21
 3f0:	b.ne	8cc <_ZN5clang18CompilerInvocationD1Ev+0x8cc>  // b.any
 3f4:	ldr	x0, [x19, #1560]
 3f8:	cbz	x0, 400 <_ZN5clang18CompilerInvocationD1Ev+0x400>
 3fc:	bl	0 <_ZdlPv>
 400:	ldr	x0, [x19, #1528]
 404:	add	x1, x19, #0x608
 408:	cmp	x0, x1
 40c:	b.eq	414 <_ZN5clang18CompilerInvocationD1Ev+0x414>  // b.none
 410:	bl	0 <_ZdlPv>
 414:	ldr	x0, [x19, #1496]
 418:	add	x1, x19, #0x5e8
 41c:	cmp	x0, x1
 420:	b.eq	428 <_ZN5clang18CompilerInvocationD1Ev+0x428>  // b.none
 424:	bl	0 <_ZdlPv>
 428:	ldr	x20, [x19, #1456]
 42c:	ldr	x21, [x19, #1464]
 430:	cmp	x20, x21
 434:	b.ne	8f0 <_ZN5clang18CompilerInvocationD1Ev+0x8f0>  // b.any
 438:	ldr	x0, [x19, #1456]
 43c:	cbz	x0, 444 <_ZN5clang18CompilerInvocationD1Ev+0x444>
 440:	bl	0 <_ZdlPv>
 444:	ldr	x20, [x19, #1432]
 448:	ldr	x21, [x19, #1440]
 44c:	cmp	x20, x21
 450:	b.ne	914 <_ZN5clang18CompilerInvocationD1Ev+0x914>  // b.any
 454:	ldr	x0, [x19, #1432]
 458:	cbz	x0, 460 <_ZN5clang18CompilerInvocationD1Ev+0x460>
 45c:	bl	0 <_ZdlPv>
 460:	ldr	x0, [x19, #1392]
 464:	add	x1, x19, #0x580
 468:	cmp	x0, x1
 46c:	b.eq	474 <_ZN5clang18CompilerInvocationD1Ev+0x474>  // b.none
 470:	bl	0 <_ZdlPv>
 474:	ldr	x20, [x19, #1368]
 478:	ldr	x21, [x19, #1376]
 47c:	cmp	x20, x21
 480:	b.ne	938 <_ZN5clang18CompilerInvocationD1Ev+0x938>  // b.any
 484:	ldr	x0, [x19, #1368]
 488:	cbz	x0, 490 <_ZN5clang18CompilerInvocationD1Ev+0x490>
 48c:	bl	0 <_ZdlPv>
 490:	ldr	x20, [x19, #1344]
 494:	ldr	x21, [x19, #1352]
 498:	cmp	x20, x21
 49c:	b.ne	95c <_ZN5clang18CompilerInvocationD1Ev+0x95c>  // b.any
 4a0:	ldr	x0, [x19, #1344]
 4a4:	cbz	x0, 4ac <_ZN5clang18CompilerInvocationD1Ev+0x4ac>
 4a8:	bl	0 <_ZdlPv>
 4ac:	ldr	x0, [x19, #1320]
 4b0:	cbz	x0, 4b8 <_ZN5clang18CompilerInvocationD1Ev+0x4b8>
 4b4:	bl	0 <_ZdlPv>
 4b8:	ldr	x20, [x19, #1264]
 4bc:	ldr	x21, [x19, #1272]
 4c0:	cmp	x20, x21
 4c4:	b.ne	97c <_ZN5clang18CompilerInvocationD1Ev+0x97c>  // b.any
 4c8:	ldr	x0, [x19, #1264]
 4cc:	cbz	x0, 4d4 <_ZN5clang18CompilerInvocationD1Ev+0x4d4>
 4d0:	bl	0 <_ZdlPv>
 4d4:	ldr	x20, [x19, #1256]
 4d8:	cbz	x20, 504 <_ZN5clang18CompilerInvocationD1Ev+0x504>
 4dc:	adrp	x0, 0 <__pthread_key_create>
 4e0:	ldr	x0, [x0]
 4e4:	cbz	x0, 994 <_ZN5clang18CompilerInvocationD1Ev+0x994>
 4e8:	add	x1, x20, #0x8
 4ec:	ldaxr	w0, [x1]
 4f0:	sub	w2, w0, #0x1
 4f4:	stlxr	w3, w2, [x1]
 4f8:	cbnz	w3, 4ec <_ZN5clang18CompilerInvocationD1Ev+0x4ec>
 4fc:	cmp	w0, #0x1
 500:	b.eq	9a4 <_ZN5clang18CompilerInvocationD1Ev+0x9a4>  // b.none
 504:	ldr	x20, [x19, #1240]
 508:	cbz	x20, 534 <_ZN5clang18CompilerInvocationD1Ev+0x534>
 50c:	adrp	x0, 0 <__pthread_key_create>
 510:	ldr	x0, [x0]
 514:	cbz	x0, a00 <_ZN5clang18CompilerInvocationD1Ev+0xa00>
 518:	add	x1, x20, #0x8
 51c:	ldaxr	w0, [x1]
 520:	sub	w2, w0, #0x1
 524:	stlxr	w3, w2, [x1]
 528:	cbnz	w3, 51c <_ZN5clang18CompilerInvocationD1Ev+0x51c>
 52c:	cmp	w0, #0x1
 530:	b.eq	a10 <_ZN5clang18CompilerInvocationD1Ev+0xa10>  // b.none
 534:	ldr	x20, [x19, #1224]
 538:	cbz	x20, 564 <_ZN5clang18CompilerInvocationD1Ev+0x564>
 53c:	adrp	x0, 0 <__pthread_key_create>
 540:	ldr	x0, [x0]
 544:	cbz	x0, a6c <_ZN5clang18CompilerInvocationD1Ev+0xa6c>
 548:	add	x1, x20, #0x8
 54c:	ldaxr	w0, [x1]
 550:	sub	w2, w0, #0x1
 554:	stlxr	w3, w2, [x1]
 558:	cbnz	w3, 54c <_ZN5clang18CompilerInvocationD1Ev+0x54c>
 55c:	cmp	w0, #0x1
 560:	b.eq	a7c <_ZN5clang18CompilerInvocationD1Ev+0xa7c>  // b.none
 564:	ldr	x0, [x19, #1184]
 568:	add	x1, x19, #0x4b0
 56c:	cmp	x0, x1
 570:	b.eq	578 <_ZN5clang18CompilerInvocationD1Ev+0x578>  // b.none
 574:	bl	0 <_ZdlPv>
 578:	ldr	x0, [x19, #1152]
 57c:	add	x1, x19, #0x490
 580:	cmp	x0, x1
 584:	b.eq	58c <_ZN5clang18CompilerInvocationD1Ev+0x58c>  // b.none
 588:	bl	0 <_ZdlPv>
 58c:	ldr	x0, [x19, #1120]
 590:	add	x1, x19, #0x470
 594:	cmp	x0, x1
 598:	b.eq	5a0 <_ZN5clang18CompilerInvocationD1Ev+0x5a0>  // b.none
 59c:	bl	0 <_ZdlPv>
 5a0:	ldr	x0, [x19, #1088]
 5a4:	add	x1, x19, #0x450
 5a8:	cmp	x0, x1
 5ac:	b.eq	5b4 <_ZN5clang18CompilerInvocationD1Ev+0x5b4>  // b.none
 5b0:	bl	0 <_ZdlPv>
 5b4:	ldr	x0, [x19, #1056]
 5b8:	add	x1, x19, #0x430
 5bc:	cmp	x0, x1
 5c0:	b.eq	5c8 <_ZN5clang18CompilerInvocationD1Ev+0x5c8>  // b.none
 5c4:	bl	0 <_ZdlPv>
 5c8:	ldr	x0, [x19, #1024]
 5cc:	add	x1, x19, #0x410
 5d0:	cmp	x0, x1
 5d4:	b.eq	5dc <_ZN5clang18CompilerInvocationD1Ev+0x5dc>  // b.none
 5d8:	bl	0 <_ZdlPv>
 5dc:	ldr	x0, [x19, #992]
 5e0:	add	x1, x19, #0x3f0
 5e4:	cmp	x0, x1
 5e8:	b.eq	5f0 <_ZN5clang18CompilerInvocationD1Ev+0x5f0>  // b.none
 5ec:	bl	0 <_ZdlPv>
 5f0:	ldr	x0, [x19, #960]
 5f4:	add	x1, x19, #0x3d0
 5f8:	cmp	x0, x1
 5fc:	b.eq	604 <_ZN5clang18CompilerInvocationD1Ev+0x604>  // b.none
 600:	bl	0 <_ZdlPv>
 604:	ldr	x0, [x19, #928]
 608:	add	x1, x19, #0x3b0
 60c:	cmp	x0, x1
 610:	b.eq	618 <_ZN5clang18CompilerInvocationD1Ev+0x618>  // b.none
 614:	bl	0 <_ZdlPv>
 618:	ldr	x0, [x19, #896]
 61c:	add	x1, x19, #0x390
 620:	cmp	x0, x1
 624:	b.eq	62c <_ZN5clang18CompilerInvocationD1Ev+0x62c>  // b.none
 628:	bl	0 <_ZdlPv>
 62c:	ldr	x0, [x19, #864]
 630:	add	x1, x19, #0x370
 634:	cmp	x0, x1
 638:	b.eq	640 <_ZN5clang18CompilerInvocationD1Ev+0x640>  // b.none
 63c:	bl	0 <_ZdlPv>
 640:	ldr	x0, [x19, #832]
 644:	add	x1, x19, #0x350
 648:	cmp	x0, x1
 64c:	b.eq	654 <_ZN5clang18CompilerInvocationD1Ev+0x654>  // b.none
 650:	bl	0 <_ZdlPv>
 654:	ldr	x20, [x19, #808]
 658:	ldr	x21, [x19, #816]
 65c:	cmp	x20, x21
 660:	b.ne	ae8 <_ZN5clang18CompilerInvocationD1Ev+0xae8>  // b.any
 664:	ldr	x0, [x19, #808]
 668:	cbz	x0, 670 <_ZN5clang18CompilerInvocationD1Ev+0x670>
 66c:	bl	0 <_ZdlPv>
 670:	ldr	x20, [x19, #784]
 674:	ldr	x21, [x19, #792]
 678:	cmp	x20, x21
 67c:	b.ne	b0c <_ZN5clang18CompilerInvocationD1Ev+0xb0c>  // b.any
 680:	ldr	x0, [x19, #784]
 684:	cbz	x0, 68c <_ZN5clang18CompilerInvocationD1Ev+0x68c>
 688:	bl	0 <_ZdlPv>
 68c:	ldr	x0, [x19, #752]
 690:	add	x1, x19, #0x300
 694:	cmp	x0, x1
 698:	b.eq	6a0 <_ZN5clang18CompilerInvocationD1Ev+0x6a0>  // b.none
 69c:	bl	0 <_ZdlPv>
 6a0:	ldr	x0, [x19, #720]
 6a4:	add	x1, x19, #0x2e0
 6a8:	cmp	x0, x1
 6ac:	b.eq	6b4 <_ZN5clang18CompilerInvocationD1Ev+0x6b4>  // b.none
 6b0:	bl	0 <_ZdlPv>
 6b4:	ldr	x0, [x19, #680]
 6b8:	add	x1, x19, #0x2b8
 6bc:	cmp	x0, x1
 6c0:	b.eq	6c8 <_ZN5clang18CompilerInvocationD1Ev+0x6c8>  // b.none
 6c4:	bl	0 <_ZdlPv>
 6c8:	ldr	x0, [x19, #648]
 6cc:	add	x1, x19, #0x298
 6d0:	cmp	x0, x1
 6d4:	b.eq	6dc <_ZN5clang18CompilerInvocationD1Ev+0x6dc>  // b.none
 6d8:	bl	0 <_ZdlPv>
 6dc:	ldr	x0, [x19, #616]
 6e0:	add	x1, x19, #0x278
 6e4:	cmp	x0, x1
 6e8:	b.eq	6f0 <_ZN5clang18CompilerInvocationD1Ev+0x6f0>  // b.none
 6ec:	bl	0 <_ZdlPv>
 6f0:	ldr	x20, [x19, #592]
 6f4:	ldr	x21, [x19, #600]
 6f8:	cmp	x20, x21
 6fc:	b.ne	b30 <_ZN5clang18CompilerInvocationD1Ev+0xb30>  // b.any
 700:	ldr	x0, [x19, #592]
 704:	cbz	x0, 70c <_ZN5clang18CompilerInvocationD1Ev+0x70c>
 708:	bl	0 <_ZdlPv>
 70c:	ldr	x0, [x19, #560]
 710:	add	x1, x19, #0x240
 714:	cmp	x0, x1
 718:	b.eq	720 <_ZN5clang18CompilerInvocationD1Ev+0x720>  // b.none
 71c:	bl	0 <_ZdlPv>
 720:	ldr	x0, [x19, #520]
 724:	add	x1, x19, #0x218
 728:	cmp	x0, x1
 72c:	b.eq	734 <_ZN5clang18CompilerInvocationD1Ev+0x734>  // b.none
 730:	bl	0 <_ZdlPv>
 734:	add	x0, x19, #0x1d8
 738:	ldr	x1, [x0, #16]
 73c:	bl	0 <_ZN5clang18CompilerInvocationD1Ev>
 740:	ldr	x0, [x19, #440]
 744:	add	x1, x19, #0x1c8
 748:	cmp	x0, x1
 74c:	b.eq	754 <_ZN5clang18CompilerInvocationD1Ev+0x754>  // b.none
 750:	bl	0 <_ZdlPv>
 754:	ldr	x0, [x19, #408]
 758:	add	x1, x19, #0x1a8
 75c:	cmp	x0, x1
 760:	b.eq	768 <_ZN5clang18CompilerInvocationD1Ev+0x768>  // b.none
 764:	bl	0 <_ZdlPv>
 768:	ldr	x0, [x19, #376]
 76c:	add	x1, x19, #0x188
 770:	cmp	x0, x1
 774:	b.eq	77c <_ZN5clang18CompilerInvocationD1Ev+0x77c>  // b.none
 778:	bl	0 <_ZdlPv>
 77c:	ldr	x0, [x19, #344]
 780:	add	x1, x19, #0x168
 784:	cmp	x0, x1
 788:	b.eq	790 <_ZN5clang18CompilerInvocationD1Ev+0x790>  // b.none
 78c:	bl	0 <_ZdlPv>
 790:	ldr	x0, [x19, #304]
 794:	add	x1, x19, #0x140
 798:	cmp	x0, x1
 79c:	b.eq	7a4 <_ZN5clang18CompilerInvocationD1Ev+0x7a4>  // b.none
 7a0:	bl	0 <_ZdlPv>
 7a4:	ldr	x0, [x19, #272]
 7a8:	add	x1, x19, #0x120
 7ac:	cmp	x0, x1
 7b0:	b.eq	7b8 <_ZN5clang18CompilerInvocationD1Ev+0x7b8>  // b.none
 7b4:	bl	0 <_ZdlPv>
 7b8:	ldr	x0, [x19, #240]
 7bc:	add	x1, x19, #0x100
 7c0:	cmp	x0, x1
 7c4:	b.eq	7cc <_ZN5clang18CompilerInvocationD1Ev+0x7cc>  // b.none
 7c8:	bl	0 <_ZdlPv>
 7cc:	ldr	x0, [x19, #208]
 7d0:	add	x1, x19, #0xe0
 7d4:	cmp	x0, x1
 7d8:	b.eq	7e0 <_ZN5clang18CompilerInvocationD1Ev+0x7e0>  // b.none
 7dc:	bl	0 <_ZdlPv>
 7e0:	ldr	x0, [x19, #176]
 7e4:	add	x1, x19, #0xc0
 7e8:	cmp	x0, x1
 7ec:	b.eq	7f4 <_ZN5clang18CompilerInvocationD1Ev+0x7f4>  // b.none
 7f0:	bl	0 <_ZdlPv>
 7f4:	ldr	x20, [x19, #72]
 7f8:	cbz	x20, 810 <_ZN5clang18CompilerInvocationD1Ev+0x810>
 7fc:	ldr	w0, [x20]
 800:	cbz	w0, b44 <_ZN5clang18CompilerInvocationD1Ev+0xb44>
 804:	sub	w0, w0, #0x1
 808:	str	w0, [x20]
 80c:	cbz	w0, b64 <_ZN5clang18CompilerInvocationD1Ev+0xb64>
 810:	mov	x0, x19
 814:	bl	0 <_ZN5clang22CompilerInvocationBaseD2Ev>
 818:	ldp	x19, x20, [sp, #16]
 81c:	ldp	x21, x22, [sp, #32]
 820:	ldp	x23, x24, [sp, #48]
 824:	ldp	x29, x30, [sp], #64
 828:	ret
 82c:	bl	0 <_ZdlPv>
 830:	add	x20, x20, #0x20
 834:	cmp	x21, x20
 838:	b.eq	268 <_ZN5clang18CompilerInvocationD1Ev+0x268>  // b.none
 83c:	mov	x1, x20
 840:	ldr	x0, [x1], #16
 844:	cmp	x0, x1
 848:	b.ne	82c <_ZN5clang18CompilerInvocationD1Ev+0x82c>  // b.any
 84c:	b	830 <_ZN5clang18CompilerInvocationD1Ev+0x830>
 850:	bl	0 <_ZdlPv>
 854:	add	x20, x20, #0x20
 858:	cmp	x21, x20
 85c:	b.eq	284 <_ZN5clang18CompilerInvocationD1Ev+0x284>  // b.none
 860:	mov	x1, x20
 864:	ldr	x0, [x1], #16
 868:	cmp	x0, x1
 86c:	b.ne	850 <_ZN5clang18CompilerInvocationD1Ev+0x850>  // b.any
 870:	b	854 <_ZN5clang18CompilerInvocationD1Ev+0x854>
 874:	bl	0 <_ZdlPv>
 878:	cmp	x21, x20
 87c:	b.eq	328 <_ZN5clang18CompilerInvocationD1Ev+0x328>  // b.none
 880:	sub	x20, x20, #0x30
 884:	mov	x1, x20
 888:	ldr	x0, [x1], #16
 88c:	cmp	x0, x1
 890:	b.ne	874 <_ZN5clang18CompilerInvocationD1Ev+0x874>  // b.any
 894:	b	878 <_ZN5clang18CompilerInvocationD1Ev+0x878>
 898:	bl	0 <_ZdlPv>
 89c:	add	x20, x20, #0x20
 8a0:	cmp	x21, x20
 8a4:	b.eq	3d8 <_ZN5clang18CompilerInvocationD1Ev+0x3d8>  // b.none
 8a8:	mov	x1, x20
 8ac:	ldr	x0, [x1], #16
 8b0:	cmp	x0, x1
 8b4:	b.ne	898 <_ZN5clang18CompilerInvocationD1Ev+0x898>  // b.any
 8b8:	b	89c <_ZN5clang18CompilerInvocationD1Ev+0x89c>
 8bc:	bl	0 <_ZdlPv>
 8c0:	add	x20, x20, #0x20
 8c4:	cmp	x21, x20
 8c8:	b.eq	3f4 <_ZN5clang18CompilerInvocationD1Ev+0x3f4>  // b.none
 8cc:	mov	x1, x20
 8d0:	ldr	x0, [x1], #16
 8d4:	cmp	x0, x1
 8d8:	b.ne	8bc <_ZN5clang18CompilerInvocationD1Ev+0x8bc>  // b.any
 8dc:	b	8c0 <_ZN5clang18CompilerInvocationD1Ev+0x8c0>
 8e0:	bl	0 <_ZdlPv>
 8e4:	add	x20, x20, #0x20
 8e8:	cmp	x21, x20
 8ec:	b.eq	438 <_ZN5clang18CompilerInvocationD1Ev+0x438>  // b.none
 8f0:	mov	x1, x20
 8f4:	ldr	x0, [x1], #16
 8f8:	cmp	x0, x1
 8fc:	b.ne	8e0 <_ZN5clang18CompilerInvocationD1Ev+0x8e0>  // b.any
 900:	b	8e4 <_ZN5clang18CompilerInvocationD1Ev+0x8e4>
 904:	bl	0 <_ZdlPv>
 908:	add	x20, x20, #0x20
 90c:	cmp	x21, x20
 910:	b.eq	454 <_ZN5clang18CompilerInvocationD1Ev+0x454>  // b.none
 914:	mov	x1, x20
 918:	ldr	x0, [x1], #16
 91c:	cmp	x0, x1
 920:	b.ne	904 <_ZN5clang18CompilerInvocationD1Ev+0x904>  // b.any
 924:	b	908 <_ZN5clang18CompilerInvocationD1Ev+0x908>
 928:	bl	0 <_ZdlPv>
 92c:	add	x20, x20, #0x20
 930:	cmp	x21, x20
 934:	b.eq	484 <_ZN5clang18CompilerInvocationD1Ev+0x484>  // b.none
 938:	mov	x1, x20
 93c:	ldr	x0, [x1], #16
 940:	cmp	x0, x1
 944:	b.ne	928 <_ZN5clang18CompilerInvocationD1Ev+0x928>  // b.any
 948:	b	92c <_ZN5clang18CompilerInvocationD1Ev+0x92c>
 94c:	bl	0 <_ZdlPv>
 950:	add	x20, x20, #0x20
 954:	cmp	x21, x20
 958:	b.eq	4a0 <_ZN5clang18CompilerInvocationD1Ev+0x4a0>  // b.none
 95c:	mov	x1, x20
 960:	ldr	x0, [x1], #16
 964:	cmp	x0, x1
 968:	b.ne	94c <_ZN5clang18CompilerInvocationD1Ev+0x94c>  // b.any
 96c:	b	950 <_ZN5clang18CompilerInvocationD1Ev+0x950>
 970:	add	x20, x20, #0x20
 974:	cmp	x21, x20
 978:	b.eq	4c8 <_ZN5clang18CompilerInvocationD1Ev+0x4c8>  // b.none
 97c:	mov	x1, x20
 980:	ldr	x0, [x1], #16
 984:	cmp	x0, x1
 988:	b.eq	970 <_ZN5clang18CompilerInvocationD1Ev+0x970>  // b.none
 98c:	bl	0 <_ZdlPv>
 990:	b	970 <_ZN5clang18CompilerInvocationD1Ev+0x970>
 994:	ldr	w0, [x20, #8]
 998:	sub	w1, w0, #0x1
 99c:	str	w1, [x20, #8]
 9a0:	b	4fc <_ZN5clang18CompilerInvocationD1Ev+0x4fc>
 9a4:	ldr	x0, [x20]
 9a8:	ldr	x1, [x0, #16]
 9ac:	mov	x0, x20
 9b0:	blr	x1
 9b4:	adrp	x0, 0 <__pthread_key_create>
 9b8:	ldr	x0, [x0]
 9bc:	cbz	x0, 9f0 <_ZN5clang18CompilerInvocationD1Ev+0x9f0>
 9c0:	add	x1, x20, #0xc
 9c4:	ldaxr	w0, [x1]
 9c8:	sub	w2, w0, #0x1
 9cc:	stlxr	w3, w2, [x1]
 9d0:	cbnz	w3, 9c4 <_ZN5clang18CompilerInvocationD1Ev+0x9c4>
 9d4:	cmp	w0, #0x1
 9d8:	b.ne	504 <_ZN5clang18CompilerInvocationD1Ev+0x504>  // b.any
 9dc:	ldr	x0, [x20]
 9e0:	ldr	x1, [x0, #24]
 9e4:	mov	x0, x20
 9e8:	blr	x1
 9ec:	b	504 <_ZN5clang18CompilerInvocationD1Ev+0x504>
 9f0:	ldr	w0, [x20, #12]
 9f4:	sub	w1, w0, #0x1
 9f8:	str	w1, [x20, #12]
 9fc:	b	9d4 <_ZN5clang18CompilerInvocationD1Ev+0x9d4>
 a00:	ldr	w0, [x20, #8]
 a04:	sub	w1, w0, #0x1
 a08:	str	w1, [x20, #8]
 a0c:	b	52c <_ZN5clang18CompilerInvocationD1Ev+0x52c>
 a10:	ldr	x0, [x20]
 a14:	ldr	x1, [x0, #16]
 a18:	mov	x0, x20
 a1c:	blr	x1
 a20:	adrp	x0, 0 <__pthread_key_create>
 a24:	ldr	x0, [x0]
 a28:	cbz	x0, a5c <_ZN5clang18CompilerInvocationD1Ev+0xa5c>
 a2c:	add	x1, x20, #0xc
 a30:	ldaxr	w0, [x1]
 a34:	sub	w2, w0, #0x1
 a38:	stlxr	w3, w2, [x1]
 a3c:	cbnz	w3, a30 <_ZN5clang18CompilerInvocationD1Ev+0xa30>
 a40:	cmp	w0, #0x1
 a44:	b.ne	534 <_ZN5clang18CompilerInvocationD1Ev+0x534>  // b.any
 a48:	ldr	x0, [x20]
 a4c:	ldr	x1, [x0, #24]
 a50:	mov	x0, x20
 a54:	blr	x1
 a58:	b	534 <_ZN5clang18CompilerInvocationD1Ev+0x534>
 a5c:	ldr	w0, [x20, #12]
 a60:	sub	w1, w0, #0x1
 a64:	str	w1, [x20, #12]
 a68:	b	a40 <_ZN5clang18CompilerInvocationD1Ev+0xa40>
 a6c:	ldr	w0, [x20, #8]
 a70:	sub	w1, w0, #0x1
 a74:	str	w1, [x20, #8]
 a78:	b	55c <_ZN5clang18CompilerInvocationD1Ev+0x55c>
 a7c:	ldr	x0, [x20]
 a80:	ldr	x1, [x0, #16]
 a84:	mov	x0, x20
 a88:	blr	x1
 a8c:	adrp	x0, 0 <__pthread_key_create>
 a90:	ldr	x0, [x0]
 a94:	cbz	x0, ac8 <_ZN5clang18CompilerInvocationD1Ev+0xac8>
 a98:	add	x1, x20, #0xc
 a9c:	ldaxr	w0, [x1]
 aa0:	sub	w2, w0, #0x1
 aa4:	stlxr	w3, w2, [x1]
 aa8:	cbnz	w3, a9c <_ZN5clang18CompilerInvocationD1Ev+0xa9c>
 aac:	cmp	w0, #0x1
 ab0:	b.ne	564 <_ZN5clang18CompilerInvocationD1Ev+0x564>  // b.any
 ab4:	ldr	x0, [x20]
 ab8:	ldr	x1, [x0, #24]
 abc:	mov	x0, x20
 ac0:	blr	x1
 ac4:	b	564 <_ZN5clang18CompilerInvocationD1Ev+0x564>
 ac8:	ldr	w0, [x20, #12]
 acc:	sub	w1, w0, #0x1
 ad0:	str	w1, [x20, #12]
 ad4:	b	aac <_ZN5clang18CompilerInvocationD1Ev+0xaac>
 ad8:	bl	0 <_ZdlPv>
 adc:	add	x20, x20, #0x20
 ae0:	cmp	x21, x20
 ae4:	b.eq	664 <_ZN5clang18CompilerInvocationD1Ev+0x664>  // b.none
 ae8:	mov	x1, x20
 aec:	ldr	x0, [x1], #16
 af0:	cmp	x0, x1
 af4:	b.ne	ad8 <_ZN5clang18CompilerInvocationD1Ev+0xad8>  // b.any
 af8:	b	adc <_ZN5clang18CompilerInvocationD1Ev+0xadc>
 afc:	bl	0 <_ZdlPv>
 b00:	add	x20, x20, #0x20
 b04:	cmp	x21, x20
 b08:	b.eq	680 <_ZN5clang18CompilerInvocationD1Ev+0x680>  // b.none
 b0c:	mov	x1, x20
 b10:	ldr	x0, [x1], #16
 b14:	cmp	x0, x1
 b18:	b.ne	afc <_ZN5clang18CompilerInvocationD1Ev+0xafc>  // b.any
 b1c:	b	b00 <_ZN5clang18CompilerInvocationD1Ev+0xb00>
 b20:	bl	0 <_ZdlPv>
 b24:	add	x20, x20, #0x28
 b28:	cmp	x21, x20
 b2c:	b.eq	700 <_ZN5clang18CompilerInvocationD1Ev+0x700>  // b.none
 b30:	mov	x1, x20
 b34:	ldr	x0, [x1], #16
 b38:	cmp	x0, x1
 b3c:	b.ne	b20 <_ZN5clang18CompilerInvocationD1Ev+0xb20>  // b.any
 b40:	b	b24 <_ZN5clang18CompilerInvocationD1Ev+0xb24>
 b44:	adrp	x3, 0 <_ZN5clang18CompilerInvocationD1Ev>
 b48:	add	x3, x3, #0x0
 b4c:	mov	w2, #0x50                  	// #80
 b50:	adrp	x1, 0 <_ZN5clang18CompilerInvocationD1Ev>
 b54:	add	x1, x1, #0x0
 b58:	adrp	x0, 0 <_ZN5clang18CompilerInvocationD1Ev>
 b5c:	add	x0, x0, #0x0
 b60:	bl	0 <__assert_fail>
 b64:	ldr	x0, [x20, #424]
 b68:	cbz	x0, b70 <_ZN5clang18CompilerInvocationD1Ev+0xb70>
 b6c:	bl	0 <_ZdlPv>
 b70:	ldr	x0, [x20, #168]
 b74:	add	x1, x20, #0xb8
 b78:	cmp	x0, x1
 b7c:	b.eq	b84 <_ZN5clang18CompilerInvocationD1Ev+0xb84>  // b.none
 b80:	bl	0 <_ZdlPv>
 b84:	ldr	x0, [x20, #136]
 b88:	add	x1, x20, #0x98
 b8c:	cmp	x0, x1
 b90:	b.eq	b98 <_ZN5clang18CompilerInvocationD1Ev+0xb98>  // b.none
 b94:	bl	0 <_ZdlPv>
 b98:	ldr	x0, [x20, #104]
 b9c:	add	x1, x20, #0x78
 ba0:	cmp	x0, x1
 ba4:	b.eq	bac <_ZN5clang18CompilerInvocationD1Ev+0xbac>  // b.none
 ba8:	bl	0 <_ZdlPv>
 bac:	ldr	w0, [x20, #68]
 bb0:	cbz	w0, c10 <_ZN5clang18CompilerInvocationD1Ev+0xc10>
 bb4:	ldr	w0, [x20, #64]
 bb8:	cbz	w0, c10 <_ZN5clang18CompilerInvocationD1Ev+0xc10>
 bbc:	sub	w23, w0, #0x1
 bc0:	add	x23, x23, #0x1
 bc4:	lsl	x23, x23, #3
 bc8:	mov	x22, #0x0                   	// #0
 bcc:	b	be4 <_ZN5clang18CompilerInvocationD1Ev+0xbe4>
 bd0:	mov	x0, x21
 bd4:	bl	0 <free>
 bd8:	add	x22, x22, #0x8
 bdc:	cmp	x22, x23
 be0:	b.eq	c10 <_ZN5clang18CompilerInvocationD1Ev+0xc10>  // b.none
 be4:	ldr	x0, [x20, #56]
 be8:	ldr	x21, [x0, x22]
 bec:	cmp	x21, #0x0
 bf0:	ccmn	x21, #0x8, #0x4, ne  // ne = any
 bf4:	b.eq	bd8 <_ZN5clang18CompilerInvocationD1Ev+0xbd8>  // b.none
 bf8:	ldr	x0, [x21, #8]
 bfc:	add	x1, x21, #0x18
 c00:	cmp	x0, x1
 c04:	b.eq	bd0 <_ZN5clang18CompilerInvocationD1Ev+0xbd0>  // b.none
 c08:	bl	0 <_ZdlPv>
 c0c:	b	bd0 <_ZN5clang18CompilerInvocationD1Ev+0xbd0>
 c10:	ldr	x0, [x20, #56]
 c14:	bl	0 <free>
 c18:	ldr	x21, [x20, #32]
 c1c:	ldr	x22, [x20, #40]
 c20:	cmp	x21, x22
 c24:	b.ne	c6c <_ZN5clang18CompilerInvocationD1Ev+0xc6c>  // b.any
 c28:	ldr	x0, [x20, #32]
 c2c:	cbz	x0, c34 <_ZN5clang18CompilerInvocationD1Ev+0xc34>
 c30:	bl	0 <_ZdlPv>
 c34:	ldr	x21, [x20, #8]
 c38:	ldr	x22, [x20, #16]
 c3c:	cmp	x21, x22
 c40:	b.ne	c94 <_ZN5clang18CompilerInvocationD1Ev+0xc94>  // b.any
 c44:	ldr	x0, [x20, #8]
 c48:	cbz	x0, c50 <_ZN5clang18CompilerInvocationD1Ev+0xc50>
 c4c:	bl	0 <_ZdlPv>
 c50:	mov	x1, #0x1c0                 	// #448
 c54:	mov	x0, x20
 c58:	bl	0 <_ZdlPvm>
 c5c:	b	810 <_ZN5clang18CompilerInvocationD1Ev+0x810>
 c60:	add	x21, x21, #0x20
 c64:	cmp	x22, x21
 c68:	b.eq	c28 <_ZN5clang18CompilerInvocationD1Ev+0xc28>  // b.none
 c6c:	mov	x1, x21
 c70:	ldr	x0, [x1], #16
 c74:	cmp	x0, x1
 c78:	b.eq	c60 <_ZN5clang18CompilerInvocationD1Ev+0xc60>  // b.none
 c7c:	bl	0 <_ZdlPv>
 c80:	b	c60 <_ZN5clang18CompilerInvocationD1Ev+0xc60>
 c84:	bl	0 <_ZdlPv>
 c88:	add	x21, x21, #0x28
 c8c:	cmp	x22, x21
 c90:	b.eq	c44 <_ZN5clang18CompilerInvocationD1Ev+0xc44>  // b.none
 c94:	mov	x1, x21
 c98:	ldr	x0, [x1], #16
 c9c:	cmp	x0, x1
 ca0:	b.ne	c84 <_ZN5clang18CompilerInvocationD1Ev+0xc84>  // b.any
 ca4:	b	c88 <_ZN5clang18CompilerInvocationD1Ev+0xc88>

Disassembly of section .text._ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv:

0000000000000000 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x19, [sp, #16]
   c:	ldr	x19, [x0, #16]
  10:	cbz	x19, 28 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv+0x28>
  14:	mov	x0, x19
  18:	bl	0 <_ZNSt19_Sp_counted_deleterIPN5clang18CompilerInvocationESt14default_deleteIS1_ESaIvELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv>
  1c:	mov	x1, #0x988                 	// #2440
  20:	mov	x0, x19
  24:	bl	0 <_ZdlPvm>
  28:	ldr	x19, [sp, #16]
  2c:	ldp	x29, x30, [sp], #32
  30:	ret

Disassembly of section .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:

0000000000000000 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	str	x21, [sp, #32]
  10:	cmp	x1, #0x0
  14:	ccmp	x1, x2, #0x4, eq  // eq = none
  18:	b.ne	68 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x68>  // b.any
  1c:	mov	x20, x0
  20:	mov	x21, x1
  24:	sub	x19, x2, x1
  28:	str	x19, [sp, #56]
  2c:	cmp	x19, #0xf
  30:	b.hi	74 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x74>  // b.pmore
  34:	ldr	x0, [x0]
  38:	cmp	x19, #0x1
  3c:	b.ne	9c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x9c>  // b.any
  40:	ldrb	w1, [x1]
  44:	strb	w1, [x0]
  48:	ldr	x0, [sp, #56]
  4c:	str	x0, [x20, #8]
  50:	ldr	x1, [x20]
  54:	strb	wzr, [x1, x0]
  58:	ldp	x19, x20, [sp, #16]
  5c:	ldr	x21, [sp, #32]
  60:	ldp	x29, x30, [sp], #64
  64:	ret
  68:	adrp	x0, 0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag>
  6c:	add	x0, x0, #0x0
  70:	bl	0 <_ZSt19__throw_logic_errorPKc>
  74:	mov	x2, #0x0                   	// #0
  78:	add	x1, sp, #0x38
  7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  80:	str	x0, [x20]
  84:	ldr	x1, [sp, #56]
  88:	str	x1, [x20, #16]
  8c:	mov	x2, x19
  90:	mov	x1, x21
  94:	bl	0 <memcpy>
  98:	b	48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  9c:	cbz	x19, 48 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x48>
  a0:	b	8c <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag+0x8c>

Disassembly of section .text._ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	mov	x29, sp
   8:	stp	x19, x20, [sp, #16]
   c:	stp	x21, x22, [sp, #32]
  10:	stp	x23, x24, [sp, #48]
  14:	stp	x25, x26, [sp, #64]
  18:	stp	x27, x28, [sp, #80]
  1c:	mov	x25, x0
  20:	mov	x19, x1
  24:	str	x2, [sp, #104]
  28:	mov	x22, x1
  2c:	ldr	x20, [x0, #8]
  30:	ldr	x24, [x0]
  34:	sub	x0, x20, x24
  38:	asr	x0, x0, #3
  3c:	mov	x1, #0xcccccccccccccccc    	// #-3689348814741910324
  40:	movk	x1, #0xcccd
  44:	mul	x0, x0, x1
  48:	mov	x1, #0x3333333333333333    	// #3689348814741910323
  4c:	movk	x1, #0x333, lsl #48
  50:	cmp	x0, x1
  54:	b.eq	e8 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xe8>  // b.none
  58:	mov	x27, x3
  5c:	cmp	x0, #0x0
  60:	csinc	x1, x0, xzr, ne  // ne = any
  64:	adds	x0, x1, x0
  68:	b.cs	288 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x288>  // b.hs, b.nlast
  6c:	mov	x21, #0x3333333333333333    	// #3689348814741910323
  70:	movk	x21, #0x333, lsl #48
  74:	cmp	x0, x21
  78:	csel	x21, x0, x21, ls  // ls = plast
  7c:	sub	x28, x19, x24
  80:	mov	x23, #0x0                   	// #0
  84:	cbz	x0, 98 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x98>
  88:	add	x0, x21, x21, lsl #2
  8c:	lsl	x0, x0, #3
  90:	bl	0 <_Znwm>
  94:	mov	x23, x0
  98:	add	x26, x23, x28
  9c:	ldr	x0, [sp, #104]
  a0:	ldr	x1, [x0]
  a4:	cbz	x1, f4 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xf4>
  a8:	ldr	x0, [sp, #104]
  ac:	ldr	x2, [x0, #8]
  b0:	add	x0, x26, #0x10
  b4:	str	x0, [x23, x28]
  b8:	mov	w3, #0x0                   	// #0
  bc:	add	x2, x1, x2
  c0:	mov	x0, x26
  c4:	bl	0 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_>
  c8:	ldr	x0, [x27]
  cc:	str	x0, [x26, #32]
  d0:	cmp	x19, x24
  d4:	b.eq	1c4 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x1c4>  // b.none
  d8:	add	x28, x24, #0x10
  dc:	mov	x27, x23
  e0:	mov	x26, x24
  e4:	b	12c <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x12c>
  e8:	adrp	x0, 0 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_>
  ec:	add	x0, x0, #0x0
  f0:	bl	0 <_ZSt20__throw_length_errorPKc>
  f4:	add	x0, x26, #0x10
  f8:	str	x0, [x23, x28]
  fc:	str	xzr, [x26, #8]
 100:	strb	wzr, [x26, #16]
 104:	b	c8 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0xc8>
 108:	ldp	x2, x3, [x26, #16]
 10c:	stp	x2, x3, [x27, #16]
 110:	b	150 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x150>
 114:	bl	0 <_ZdlPv>
 118:	add	x26, x26, #0x28
 11c:	add	x27, x27, #0x28
 120:	add	x28, x28, #0x28
 124:	cmp	x22, x26
 128:	b.eq	17c <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x17c>  // b.none
 12c:	add	x0, x27, #0x10
 130:	str	x0, [x27]
 134:	ldr	x0, [x26]
 138:	mov	x1, x28
 13c:	cmp	x0, x28
 140:	b.eq	108 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x108>  // b.none
 144:	str	x0, [x27]
 148:	ldr	x0, [x26, #16]
 14c:	str	x0, [x27, #16]
 150:	ldr	x0, [x26, #8]
 154:	str	x0, [x27, #8]
 158:	str	x1, [x26]
 15c:	str	xzr, [x26, #8]
 160:	strb	wzr, [x26, #16]
 164:	ldr	x0, [x26, #32]
 168:	str	x0, [x27, #32]
 16c:	ldr	x0, [x26]
 170:	cmp	x1, x0
 174:	b.ne	114 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x114>  // b.any
 178:	b	118 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x118>
 17c:	sub	x22, x19, #0x28
 180:	sub	x22, x22, x24
 184:	lsr	x22, x22, #3
 188:	mov	x0, #0xcccd                	// #52429
 18c:	movk	x0, #0xcccc, lsl #16
 190:	movk	x0, #0xcccc, lsl #32
 194:	movk	x0, #0xccc, lsl #48
 198:	mul	x22, x22, x0
 19c:	and	x22, x22, #0x1fffffffffffffff
 1a0:	add	x22, x22, #0x1
 1a4:	add	x22, x22, x22, lsl #2
 1a8:	add	x22, x23, x22, lsl #3
 1ac:	add	x22, x22, #0x28
 1b0:	cmp	x19, x20
 1b4:	b.eq	24c <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x24c>  // b.none
 1b8:	mov	x1, x19
 1bc:	mov	x0, x22
 1c0:	b	1f4 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x1f4>
 1c4:	mov	x22, x23
 1c8:	b	1ac <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x1ac>
 1cc:	ldp	x2, x3, [x1, #16]
 1d0:	stp	x2, x3, [x0, #16]
 1d4:	ldr	x2, [x1, #8]
 1d8:	str	x2, [x0, #8]
 1dc:	ldr	x2, [x1, #32]
 1e0:	str	x2, [x0, #32]
 1e4:	add	x1, x1, #0x28
 1e8:	add	x0, x0, #0x28
 1ec:	cmp	x1, x20
 1f0:	b.eq	21c <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x21c>  // b.none
 1f4:	add	x2, x0, #0x10
 1f8:	str	x2, [x0]
 1fc:	mov	x2, x1
 200:	ldr	x3, [x2], #16
 204:	cmp	x3, x2
 208:	b.eq	1cc <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x1cc>  // b.none
 20c:	str	x3, [x0]
 210:	ldr	x2, [x1, #16]
 214:	str	x2, [x0, #16]
 218:	b	1d4 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x1d4>
 21c:	sub	x0, x20, x19
 220:	sub	x0, x0, #0x28
 224:	lsr	x0, x0, #3
 228:	mov	x1, #0xcccd                	// #52429
 22c:	movk	x1, #0xcccc, lsl #16
 230:	movk	x1, #0xcccc, lsl #32
 234:	movk	x1, #0xccc, lsl #48
 238:	mul	x0, x0, x1
 23c:	and	x0, x0, #0x1fffffffffffffff
 240:	add	x0, x0, #0x1
 244:	add	x0, x0, x0, lsl #2
 248:	add	x22, x22, x0, lsl #3
 24c:	cbz	x24, 258 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x258>
 250:	mov	x0, x24
 254:	bl	0 <_ZdlPv>
 258:	str	x23, [x25]
 25c:	str	x22, [x25, #8]
 260:	add	x21, x21, x21, lsl #2
 264:	add	x23, x23, x21, lsl #3
 268:	str	x23, [x25, #16]
 26c:	ldp	x19, x20, [sp, #16]
 270:	ldp	x21, x22, [sp, #32]
 274:	ldp	x23, x24, [sp, #48]
 278:	ldp	x25, x26, [sp, #64]
 27c:	ldp	x27, x28, [sp, #80]
 280:	ldp	x29, x30, [sp], #112
 284:	ret
 288:	sub	x28, x19, x24
 28c:	mov	x21, #0x3333333333333333    	// #3689348814741910323
 290:	movk	x21, #0x333, lsl #48
 294:	b	88 <_ZNSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPN4llvm12MemoryBufferEESaISA_EE17_M_realloc_insertIJRNS7_9StringRefERS9_EEEvN9__gnu_cxx17__normal_iteratorIPSA_SC_EEDpOT_+0x88>
